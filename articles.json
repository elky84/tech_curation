[
  {
    "id": 1,
    "imageUrl": "",
    "title": "이미지 한 장만 올려도 프로처럼! 이미지 스타일 분석 GPTS 무료 배포",
    "description": "AI 이미지 생성에 어려움을 겪고 계신가요? 제가 직접 개발하고 무료로 배포 중인 '시각 스타일 분석 및 프롬프트 생성기' GPT로 원하는 스타일을 쉽게 재현해보세요. 업로드 한 번으로 전문가급 프롬프트를 받는 비법 공개!\n\n\n \n요즘 AI 이미지 생성이 대세잖아요. 미드저니나 달리 같은 AI 이미지 생성 툴을 써보신 분들은 아실 거예요. 원하는 이미지를 얻기 위해 프롬프트를 얼마나 잘 작성하느냐가 정말 중요하다는 걸요.\n \n저도 처음에는 진짜 헤맸어요. \"수채화 느낌으로 그려줘\"라고 입력했다가 완전 엉뚱한 결과물을 받고 좌절했던 기억이 나네요. 특히 내가 좋아하는 특정 아티스트나 일러스트레이터의 스타일을 따라 하고 싶을 때는 더 난감했죠. 어떤 단어로 그 미묘한 스타일을 설명해야 할지 몰랐으니까요.\n \n그래서 제가 직접 만들어 무료로 배포하는 GPT가 있어요. 바로 '시각 스타일 분석 및 프롬프트 생성기'입니다. 이름 그대로 여러분이 좋아하는 이미지를 업로드하면, 그 이미지의 스타일을 전문가처럼 분석해주고 비슷한 이미지를 만들 수 있는 프롬프트까지 생성해주는 무료 GPT예요!\n \n  왜 이 GPT를 만들게 되었나요?\n사실 저도 AI 이미지 생성 초보였어요. 미드저니와 DALL-E  등의 AI 이미지 생성 서비스를 처음 사용했을 때 정말 답답했거든요. 내가 머릿속에 그리고 있는 이미지와 실제 생성되는 이미지 사이의 갭이 너무 컸어요. 특히 특정 스타일을 표현하는 게 가장 어려웠죠.\n \n수많은 시행착오 끝에 프롬프트 작성법을 공부하고, 이미지 분석 방법도 익혔어요. 그러다 문득 '이런 과정을 자동화할 수 없을까?' 하는 생각이 들었고, 그렇게 시각 스타일 분석 GPT를 개발하게 됐습니다. 제가 겪었던 어려움을 다른 사람들은 겪지 않았으면 하는 마음에서요.\n \n결과물 예시\n\n\n \n  이 GPT는 어떻게 작동하나요?\n제가 만든 GPT의 핵심 작동 원리를 간략히 설명해드릴게요:\n다층적 이미지 분석: 업로드된 이미지를 여러 시각적 레이어로 분해하여 그림체, 채색, 라인, 질감 등 13가지 핵심 요소를 체계적으로 분석합니다.\n스타일 패턴 인식: 특별히 설계된 스타일 인식 알고리즘으로 이미지의 고유한 시각적 특징과 예술적 패턴을 식별합니다.\n최적화된 프롬프트 생성: 분석된 스타일 요소를 AI 이미지 생성기에 최적화된 영어 프롬프트로 변환합니다. 키워드의 순서와 가중치를 전략적으로 배치하여 효과적인 결과물을 얻을 수 있도록 설계했습니다.\n다중 이미지 통합 분석: 여러 이미지를 동시에 업로드할 경우, 공통된 스타일 요소를 추출하고 일관된 스타일 정의를 생성하는 알고리즘을 적용합니다.\n이 모든 과정은 사용자 친화적인 인터페이스 내에서 자동으로 이루어지며, 전문 지식 없이도 누구나 쉽게 활용할 수 있도록 설계했습니다.\n \n  이렇게 활용해보세요\n1. 기본적인 이미지 스타일 분석\n가장 기본적인 사용법은 단순히 이미지를 업로드하고 분석을 요청하는 거예요.\nGPT에 좋아하는 이미지나 참고하고 싶은 아트워크를 업로드합니다.\n\"이 이미지의 스타일을 분석해줘\" 또는 \"이 스타일로 이미지를 만들 수 있는 프롬프트를 생성해줘\"라고 요청하세요.\nGPT가 이미지의 다양한 시각적 요소를 분석하고 영어 프롬프트를 생성해줍니다.\n\n\n \n제가 직접 테스트했을 때 일본 애니메이션 스타일의 이미지를 업로드하니 이런 분석을 해줬어요:\n\"이 이미지는 일본 애니메이션 스타일의 그림체로, 깔끔하고 선명한 라인이 특징입니다. 채색은 플랫하면서도 부분적으로 그라데이션이 적용되었고, 중간 채도의 파스텔 톤 색상 팔레트를 사용했습니다. 캐릭터는 과장된 표정과 포즈로 역동적인 느낌을 주며, 배경은 단순화되어 캐릭터에 시선이 집중되도록 처리되었습니다...\"\n이런 상세한 분석과 함께 영어 프롬프트까지 생성해줬는데, 이걸 미드저니에 입력했더니 정말 놀라울 정도로 유사한 스타일의 이미지가 나왔어요!\n2. 여러 장의 이미지로 일관된 스타일 추출하기\n저는 이 GPT를 만들면서 특히 이 기능에 신경을 많이 썼어요.\n이미지 업로드합니다. (좀 더 나은 결과를 위해서는 2~5개의 비슷한 스타일의 이미지를 업로드 합니다.)\n\"이 이미지들의 공통된 스타일 요소를 분석해줘\"라고 요청하세요.\nGPT가 여러 이미지에서 일관되게 나타나는 스타일 특징을 찾아 더 정확한 프롬프트를 생성합니다.\n이 방법이 정말 강력한데요, 한 아티스트의 작품 여러 장을 분석하면 그 아티스트만의 고유한 스타일 특징을 정확하게 파악할 수 있거든요. 실제로 일러스트레이터 친구들이 자신의 포트폴리오를 업로드해서 자기 스타일의 '핵심 DNA'를 추출하는 데 활용하고 있어요.\n3. 스타일 믹스 실험하기\n이건 제가 특별히 추가한 숨겨진 기능이에요!\n서로 다른 스타일의 이미지 2개를 업로드합니다.\n\"이 두 스타일을 섞은 하이브리드 프롬프트를 만들어줘\"라고 요청하세요.\nGPT가 두 스타일의 장점을 결합한 새로운 프롬프트를 생성합니다.\n\n\n예를 들어, 일본 애니메이션 스타일과 사이버펑크 스타일의 이미지를 함께 업로드하고 믹스를 요청했더니, \"네오-도쿄 애니메이션\" 같은 독특한 하이브리드 스타일의 프롬프트를 만들어줬어요. 이런 실험을 통해 정말 창의적인 작업이 가능해요!\n \n⚠️ 주의사항 및 한계점\n제가 만든 GPT도 물론 완벽하지는 않아요. 정직하게 현재의 한계점도 말씀드릴게요.\n특정 하위 장르나 너무 독특한 스타일은 제대로 인식하지 못할 수 있습니다. 예를 들어 아주 특수한 디지털 아트 기법이나 매우 실험적인 스타일은 분석이 부정확할 수 있어요.\n이미지의 해상도나 품질이 낮으면 분석 정확도가 떨어집니다. 가능하면 고해상도, 고품질의 이미지를 업로드하세요.\n생성된 프롬프트가 항상 100% 동일한 결과물을 보장하지는 않습니다. 미드저니나 달리 같은 AI 이미지 생성기의 특성상 같은 프롬프트를 입력해도 매번 다른 결과물이 나올 수 있어요.\n저작권 문제에 주의해야 합니다. 다른 아티스트의 스타일을 그대로 복제하는 것은 윤리적 문제가 있을 수 있어요. 학습이나 참고용으로만 사용하고, 상업적 목적으로 활용할 때는 주의하세요.\n기능 성능 추천 사용 상황\n단일 이미지 분석\n★★★★☆\n특정 이미지의 스타일을 이해하고 싶을 때\n\n\n다중 이미지 분석\n★★★★★\n일관된 스타일을 추출하고 싶을 때\n\n\n스타일 믹스\n★★★★☆\n창의적인 새 스타일을 실험할 때\n\n\n세부 요소 분석\n★★★★☆\n특정 스타일 요소에 집중하고 싶을 때\n\n\n소규모 프로젝트\n★★★★★\n개인 창작물이나 학습용 이미지 생성\n\n\n대규모 상업 프로젝트\n★★★☆☆\n저작권 이슈 고려 필요\n\n\n\n \n  지금 바로 사용해보세요\n제가 만든 무료 시각 스타일 분석 및 프롬프트 생성기 GPT는 지금 바로 사용해보실 수 있어요. OpenAI의 GPT 스토어에서 \"시각 스타일 분석 및 프롬프트 생성기\"를 검색하시거나, 직접 링크를 통해 접속하세요.\n특별한 계정이나 구독 없이도 누구나 무료로 사용할 수 있어요. AI 이미지 생성의 진입 장벽을 낮추고, 더 많은 분들이 창의적인 작업을 할 수 있도록 돕고 싶은 마음에서 무료로 제공하고 있습니다.\n❓ 자주 묻는 질문\nQ: 이 GPT를 사용하려면 ChatGPT Plus에 가입해야 하나요? A: 아니요, 제가 만든 이 GPT는 무료로 사용 가능합니다.\nQ: 분석 결과와 프롬프트는 영어로만 제공되나요? A: 분석 결과는 한국어로도 받을 수 있지만, 이미지 생성 프롬프트는 영어로 제공됩니다.\nQ: 몇 장의 이미지까지 한 번에 분석할 수 있나요? A: 정확한 제한은 없지만, 2-5장의 이미지를 한 번에 분석하는 것이 가장 효과적입니다.\nQ: 분석 가능한 이미지 유형에 제한이 있나요? A: 대부분의 이미지 형식(JPG, PNG 등)을 분석할 수 있으며, 그림, 일러스트, 사진 등 다양한 유형의 이미지를 지원합니다.\nQ: 이 GPT의 상업적 이용도 가능한가요? A: 네, 이 GPT 자체는 상업적으로도 자유롭게 사용하실 수 있습니다. 다만, 생성된 이미지는 각 이미지 생성 도구의 이용약관을 따르셔야 합니다.\nAI 이미지 생성의 진입 장벽을 낮추고 싶어서 만든 제 첫 GPT가 여러분에게 도움이 되었으면 좋겠어요. 어렵게만 느껴졌던 프롬프트 작성이 이제는 쉽고 재미있는 경험이 되길 바랍니다. 여러분이 만든 멋진 작품들을 댓글로 공유해주세요! 저도 정말 보고 싶네요.  \n \n  GPTS 무료배포\n 약간의 지식과 시간만 투자하면 누구나 직접 제작하고 활용할 수 있는 유용한 GPTs가 이미 많이 존재합니다. 그러나 여전히 AI 기술에 대한 낯선 접근을 두려워하거나 IT 초보자, 또는 시간적 여유가 없거나 수익화에 대한 절실함 때문에 올바른 정보를 얻지 못하는 사람들이 많습니다. \n이러한 심리를 악용해 과도한 가격으로 유료 강의를 판매하며 불필요한 부담을 주는 사례들이 늘어나고 있습니다.\n \n 이에 본 블로그에서는 모든 사람이 AI의 혜택을 공정하고 자유롭게 누릴 수 있도록 GPTs를 무료로 배포하며, 불합리한 강의 판매 행위를 단호히 배척하고자 합니다. (당연히 저도 무료 그 이상의 가치가 있는 챗봇이라면 유료화를 검토중입니다.)\n\n \nChatGPT - 시각 스타일 분석 및 프롬프트 생성기\n이미지의 시각적 특징(그림체, 채색, 질감 등)을 전문적으로 분석하고 이를 바탕으로 스타일에 집중한 이미지 생성 프롬프트를 만들어 드립니다.\nchatgpt.com\n\n\n \n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"이 GPT를 사용하려면 ChatGPT Plus에 가입해야 하나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"아니요, 제가 만든 이 GPT는 무료로 사용 가능합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"분석 결과와 프롬프트는 영어로만 제공되나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"분석 결과는 한국어로도 받을 수 있지만, 이미지 생성 프롬프트는 영어로 제공됩니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"몇 장의 이미지까지 한 번에 분석할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"정확한 제한은 없지만, 3-5장의 이미지를 한 번에 분석하는 것이 가장 효과적입니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"분석 가능한 이미지 유형에 제한이 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"대부분의 이미지 형식(JPG, PNG 등)을 분석할 수 있으며, 그림, 일러스트, 사진 등 다양한 유형의 이미지를 지원합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"이 GPT의 상업적 이용도 가능한가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"네, 이 GPT 자체는 상업적으로도 자유롭게 사용하실 수 있습니다. 다만, 생성된 이미지는 각 이미지 생성 도구의 이용약관을 따르셔야 합니다.\"\n    }\n  }]\n}",
    "reviews": [],
    "syllabus": [],
    "link": "http://muzbox.tistory.com/483563",
    "pubDate": "Tue, 1 Apr 2025 09:54:19 +0900",
    "creator": "어떤오후의 프리웨어 이야기",
    "categories": [
      "AI, 미래기술/무료 GPTS 공개",
      "AI 이미지 생성",
      "달리 프롬프트",
      "디지털 아트",
      "무료 GPT",
      "무료gpts",
      "미드저니 프롬프트",
      "스타일 분석",
      "시각 스타일 분석",
      "이미지 스타일 프롬프트",
      "프롬프트 엔지니어링"
    ]
  },
  {
    "id": 2,
    "imageUrl": "",
    "title": "미국의 관세 시작 해설 영상",
    "description": "영상: https://www.youtube.com/watch?v=8bdsAy79PHY\n\n\n\n \n이 영상이 정확한 해석인것으로 보입니다.\n소련과 냉전 시키에는 소련에 달러가 흘러 들어가진 않았습니다.\n그래서 오히려 쉬웠죠\n현재 중국과 대립을 해야하는데 중국의 수출품이 너무 많이 미국으로 들어오고 있습니다.\n댓가로 중국은 달러를 얻게 됩니다.\n이 달러는 미국과 싸울 무기나 수단을 사게 됩니다.\n순방향이라면 벌어들인 달러는 미국의 국채를 사애하지만요\n \n그래서 중국으로 흘러 들어가는 달러를 막아야 합니다.\n전반적으로 관세를 올리고 관세를 내릴 협상 수단으로서 중국과의 협령을 끊을 것을 요구하려는 전략을 취하고 있습니다.\n이것이 성공하면 중국과의 교류는 줄게되며 관세나 낮아지는 국가가 생길 것입니다.\n실패한다면 미국내의 물가가 올라가고 그만큼 국민들이 부담을 져야할 것입니다.\n중국과의 전쟁이 끝날때까지 ...\n아주 긴 싸움의 시작을 보는거 같습니다.",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1247",
    "pubDate": "Thu, 3 Apr 2025 16:02:02 +0900",
    "creator": "SIDNFT",
    "categories": [
      "유튜브"
    ]
  },
  {
    "id": 3,
    "imageUrl": "",
    "title": "둘이서 함께 다양한 세계로! 스플릿 픽션",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://bbs.ruliweb.com/news/board/11/read/2294",
    "pubDate": "Sun, 30 Mar 2025 19:17:09 +0900",
    "creator": "｜RULIWEB｜",
    "categories": [
      "게임툰"
    ]
  },
  {
    "id": 4,
    "imageUrl": "",
    "title": "[MULTI] 양식 셰프가 쥐여준 모둠 초밥, 어쌔신 크리드 섀도우스",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://bbs.ruliweb.com/news/board/11/read/2295",
    "pubDate": "Tue, 01 Apr 2025 20:55:15 +0900",
    "creator": "(RULIWEB`Д')/",
    "categories": [
      "리뷰"
    ]
  },
  {
    "id": 5,
    "imageUrl": "",
    "title": "딥시크(deep seek) 오픈소스 코드 및 구조 분석하기",
    "description": "앞서 AI에이전트 오픈 미노스를 분석해 보았는 데, 내친김에 그 동안 말많았던 딥시크(deep seek)를 분석해 보기로 한다. 개인적으로 언론의 기사를 잘 믿지는 않는다. 홍보성 퍼나른 기사가 많기도 하고, 특히 테크분야에서도 약장사분들? 많아, 어디까지 진실인지 아닌지 모르기 때문이다. 정말 대단한지, 아니면 지재권 완전 무시하고 기술 탈취?해 싼 제품 잘 만드는 중국 방식으로 개발된 것인지 알려진 자료에 기반해 팩트 확인해 보고자 한다.\n\n\n\n\n딥시크 (theconversation.com, 2025)\n\n\n참고로, 마누스 오픈소스에 관심 있다면 다음 링크를 참고한다. \n\n오픈 마누스(manus) AI 에이전트 설치, 사용 및 구조 분석하기\n\n\n\n딥시크 분석 준비\n다음 링크를 방문해 코드를 클론한다.\n\ndeepseek-ai/DeepSeek-V3\n\n\n\n\n\n터미널에서 다음 명령을 실행한다. \ngit clone https://github.com/deepseek-ai/DeepSeek-V3.git\n\n\n폴더 및 파일 구조 분석 \nvscode를 띄워 보니 폴더 구조는 다음과 같다. \n\n  - workflows: 워크플로우 관련 폴더\n  - inference: 하위 폴더\n    - configs: 설정 파일 폴더\n    - convert.py: Python 파일, 4KB\n    - fp8_cast_b16f.py: Python 파일, 5KB\n    - generate.py: Python 파일, 8KB\n    - kernel.py: Python 파일, 9KB\n    - model.py: Python 파일, 8KB\n    - requirements.txt: 텍스트 파일, 1KB\n\n\n\n\n공개된 소스 코드를 보니 굳이 실행을 위한 패키지 설치는 할 필요 없을 것 같다. 일단, 오픈소스가 아니다. 단순히, inference 추론 코드만 공개되어 있다(어그로). 오픈소스라면, 최소한, train 학습 코드와 기본 데이터셋 정도는 공개되어야 한다(언론이 왜 오픈소스라 난리였는지 사실 이해가 안되는...). \n\n\n코드는 대부분 트랜스포머 구조를 그대로 사용한다. 트랜스포머스는 구글에서 이미 2017년 개발 공개된 LLM 모델 학습 메커니즘이다. 딥시크에서 사용한 상세한 기술을 알고 싶다면, 다음 링크를 참고하길 바란다.\n\n어텐션 기반 트랜스포머 딥러닝 모델 이해, 활용 사례 및 파치토치를 통한 간단한 사용방법 소개\n딥러닝 모델 트랜스포머 인코더 핵심 코드 구현을 통한 동작 메커니즘 이해하기\n트랜스포머 디코더 핵심 코드 구현을 통한 동작 메커니즘 이해하기\nSparse Mixture of Experts Language Model\n\n\n\n소스 코드 분석\n공개된 코드는 주로 추론을 위해 딥시크 측에서 공개한 학습된 가중치 모델 파일을 로딩해 사용하기 위한 model.py, 양자화로 성능 가속을 위한 fp8_cast_bf16.py, 질의 프롬프트에 대한 모델 출력을 생성하는 generate.py 정도가 분석할 필요가 있어 보인다. \n\n\nmodel.py 분석\n일단, 사용하는 라이브러리 대부분이 미국 빅테크 기업 혹은 연구소에서 개발된 것들을 임포트에 사용하고 있다. 이 분야에서 모르면 간첩인 pytorch, 심지어 triton은 NVIDIA GPU 가속 최적화를 위해 사용하는 라이브러리를 직접 사용한다(NVIDIA 종속적). \n\n\n모델의 전체 구조는 트랜스포머를 그대로 따르며, 이미 오픈소스 공개된 코드에 나오는 키워드도 다음처럼 그대로 사용하고 있다.\n\n\n\nmodel.forward를 확인해보자. 일반적인 트랜스포머스 forward 루틴으로 보여진다. \n\n    def forward(self, tokens: torch.Tensor, start_pos: int = 0):\n        seqlen = tokens.size(1)\n        h = self.embed(tokens)  # 1) 입력 임베딩\n        freqs_cis = self.freqs_cis[start_pos:start_pos+seqlen]  # 2) # 위치 인코딩\n        mask = None\n        if seqlen > 1:              # 3) 마스킹\n            mask = torch.full((seqlen, seqlen), float(\"-inf\"), device=tokens.device).triu_(1)\n        for layer in self.layers:   # 4) 트랜스포머스 레이어 실행 계산\n            h = layer(h, start_pos, freqs_cis, mask)\n        h = self.norm(h)[:, -1]   # 5) 출력 정규화\n        logits = self.head(h)     # 6) 로짓 계산\n        if world_size > 1:\n            all_logits = [torch.empty_like(logits) for _ in range(world_size)]\n            dist.all_gather(all_logits, logits)\n            logits = torch.cat(all_logits, dim=-1)\n        return logits\n\n\n이 함수는 입력 토큰을 받아 로짓(예측값)을 계산하는 역할을 한다. 예측값은 미리 준비된 사전에서 예측된 단어를 선택할 때 역할을 한다(입력 토큰에 대한 다음 토큰 예측 생성과정). 주요 동작은 다음과 같다.\n\nembed: 입력 임베딩 처리: 입력으로 제공된 토큰 텐서를 임베딩 레이어를 통해 변환하여 초기 입력 표현을 생성한다. \nfreqs_cis: 로터리 임베딩 계산:  주파수 정보를 담고 있는 로터리 임베딩 텐서를 시퀀스 길이에 맞게 선택하여, 위치 정보를 모델에 제공한다. 위치임베딩이란 기법도 이미 트랜스포머스 논문(Google, 2017)에 구현된 것이다.\nmask: 시퀀스 길이가 1보다 클 경우, 미래 정보가 영향을 미치지 않도록 상삼각형 형태의 마스크를 생성한다. 마스크는 모델이 언어 생성 시 현재 시점 이전의 정보만을 활용하게 한다.\nTransformer 레이어 통과: 모델 내부의 여러 Transformer 레이어를 입력 데이터가 순차적으로 통과하며, 각 레이어에서 입력 표현이 갱신된다. \nnorm: 출력 정규화 및 최종 표현 추출. 마지막 Transformer 레이어의 출력을 정규화하고, 시퀀스의 마지막 토큰에 해당하는 표현을 추출한다. \nlogits: 로짓 계산. 추출된 최종 표현을 출력 레이어(헤드)에 전달하여 로짓, 즉 예측값을 계산한다. 이는 각 토큰에 대한 다음 단어 또는 출력값의 확률 분포를 나타낸다.\n\n결과적으로, 이 메서드는 입력 토큰 시퀀스를 기반으로 각 토큰에 대한 예측값을 반환하며, 이는 주로 언어 모델링 및 자연어 처리 작업에 활용된다.\n\n\n모델의 전체 구조는 다음과 같다. 대부분 파이토치 기반 트랜스포머스 코드(이미 많이 공개된 코드 조각)를 사용한다(딥시크 처음 언론 보도가 실제로 얼마나 차이가 있는 지 확인할 수 있음).\n\n\n딥시크-V3 모델 구조(UML)\n다만, 실행 속도 등 최적화를 위해 병렬처리, torch.einsum 함수를 이용해 GPU 연산을 직접 이용해 트랜스포머 어텐션 모델 QKV 코사인 유사도 계산하는 등의 노력을 하고 있다(이 또한 이미 알려진 것).\n\n\n토큰 시퀀스 임베딩 벡터 간 유사도 스코어 계산 및 학습하는 부분(일부. 트랜스포머스 모델의 전형적인 루틴임. 여기서 bshd는 batch, source seqnce, heads, feature demension 의 약자로 입력 텐서의 모양-차원을 정의함)\n\n\nkernel.py 분석\n이 모듈은 주로 성능과 관련된 양자화를 다룬다. triton 라이브러리를 사용해 주어진 텐서를 양자화하여, 32비트 실수 연산을 8비트 실수 연산으로 처리할 수 있게 한다. 8비트 텐서 실수 연산을 위한 함수도 같이 구현되어 있다. 예를 들어, 다음 fp8_gemm 함수는 8비트 양자화된 a, b 텐서를 입력받아 행렬곱한 후 c를 리턴한다.\n\n\nconvert.py 분석\n이 모듈은 모델 파일 포맷을 주어진 옵션에 맞게 단순히 체크포인트 파일로 변환하는 역할을 한다. 복잡한 내용은 별로 없어 상세 설명은 생략한다.\n\n\nconfigs 파일 분석\n이 폴더 내 모델의 구조를 정의하는 주요 변수가 정의되어 있다. 예를 들어, config_16B.json 파일은 다음과 같이 정의된다. \n\n\n의미는 다음과 같다. \n\n1. 모델 구조  \n   - vocab_size: 어휘 크기 (102,400).  \n   - dim: 임베딩 차원 (2048).  \n   - inter_dim: FFN의 확장 차원 (10,944).  \n2. MoE 관련  \n   - n_routed_experts: 총 Expert 수 (64).  \n   - n_activated_experts: 활성화 Expert 수 (6).  \n   - moe_inter_dim: MoE Expert의 내부 FFN 차원 (1,408).  \n3. Attention 관련  \n   - n_layers: Transformer 레이어 수 (27).  \n   - n_heads: Attention Head 수 (16).  \n   - kv_lora_rank: 키/값 벡터의 LoRA 랭크 (512).  \n   - qk_nope_head_dim: NOPE 기반 헤드 차원 (128).  \n   - qk_rope_head_dim: RoPE 기반 헤드 차원 (64).  \n4. 기타  \n   - mscale: 모델 안정성을 위한 스케일 값 (0.707).  \n\n분석해 본 결과, 사실 LLM에서 모델 구조, 추론 구현 부분 및 양자화 모듈만 대부분 공개되어 있다는 것을 알 수 있다. \n\n\n최소한 데이터셋 모듈이라도 공개되어야 어떤 식으로 데이터를 학습했는지 확인할 수 있지만, 이런 중요 모듈은 공개되어 있지 않아, 딥시크-V3는 오픈소스를 공개했다고 말하기 어렵다(가중치와 모델 모듈만 오픈. 이건 reddit에서도 까이고 있는데, 그냥 오픈웨이트 open weights 모델 코드임).\n\n\n더 파보기\n오픈소스라기에는 좀 실망이라, 무언가 더 없는 지 공개된 자료들을 파보기로 한다. 일단, 딥시크 개발사 github에서 최근 주목받고 있는 프로젝트만 다음처럼 정렬해본다.\n\n\n이 중 체크한 부분이 먼가 있는 듯 하여, 들어가 확인해 본다. \n\n\nMIT 라이센스라 표시만 되어 있지, 코드가 없음\n\n\n딥시크 기반 코더는 평가, 데모 코드만 있고, 파인튠은 학습 데이터셋 제공 없음 \n\n평가 코드만 있음(MIT 라이센스 표시만. 오픈소스? 무슨 의미가?)\n\n딥시크-V3 학습모델(가중치파일) 공개된 부부(허깅페이스)\n더 파보았지만, 딥시크에서 주장하는 것은 오픈소스가 아닌 오픈웨이트 모델에 더 가까워보인다. 세계적인 홍보와 언론의 관심에 비해 무늬만 MIT라이센스 오픈소스가 아닌지 의문이다.\n\n마무리\n좀 시간을 내어 분석한 후, 확인 사살한 것은 다음과 같다. \n\n언론에서 말하는 것과는 상당한 차이가 있는 딥시크 기술 오픈소스였다. 대부분 이미 개발된 오픈소스를 가져다 쓴 것으로 보인다. 앞에 언급한 몇몇 성능 최적화 부분은 좋은 접근인 것이나, 메타(페북)의 라마(Llama)가 공개한 기술에 비하면 비교할 만한 것이 아니다.\n중국은 확실히 홍보(x10배)에 천재적인 능력(약팔이)이 있다(진심으로). \n중국이 잘하는 선진국(미국) 기술 가져와 자국것으로 포장해 저가로 파는 기술은 세계 최고다. \n\n의문점은 한국 언론에서 다음과 같이 패닉성 기사를 쓸 때, 왜 남이 말한 것 받아 만 쓰고 팩트 확인하지 않았냐는 것인데... 좀 생각해보니 국내 딥시크 기사는 관련 컨텐츠를 해외에서 퍼온 검증도 안된 글을 기사로 정리한 것으로 이해된다. 사실, 첨단 기술을 팩트 체크할 리소스가 있는 언론이 많지는 않다고 생각한다. 그럼에도 파급격있는 채널은 뉴스를 전할때 항상 팩트 확인하려는 노력이 필요하다.\n\n\n패닉성 딥시크 언론 보도(연합, 2025.1.27, 뉴스튜데이, 2025.3.28)\n\n\n자극적 기사들로 얼마 전 정부 국회는 패닉되고, 급하게 만든 인공지능 진흥전략이 판을 치게 된 트리거 역할을 했다. 여론은 인공지능분야도 우리가 중국에 뒤쳐졌다는 것을 확인하는 계기는 되었다. 긍정적 효과도 있었다고 생각되나, 부작용도 있다. 예를 들어,불필요한 일들이 벌어지고(갑작스런 GPU전수조사? 등), 갑작스런 대규모 GPU 센터 개발 계획이 발표되고, 이로 인해 세금이 비과적으로 계획 투입되고, .. 이상한 방향으로 국가 첨단기술 연구개발 전략이 설정되고... 대규모 세금이 투입되지 않을 까라는 생각을 들게 만든다.\n\n\n이 글에서 딥시크가 오픈소스 맞는지(거짓), 정말 중국 독자 기술로 개발했는지(거짓), 자국 GPU 사용해 개발했는 지(거짓. 기껏 추론 부분만 Google TPU같이 NPU 사용했을 가능성), 기술적 개선이 있었는지(성능 최적화 부분은 약간 인정), 정말 공개한 것은 무엇인지(모델만. 오픈웨이트) 등의 질문을 확인해 보았다. \n\n\n이 상황이면, GPT 학습 데이터를 증류해(카피해) 모델을 학습했다는 것이 더 신빙성 있어 보인다(가성비있게 실리콘밸리 테크 기술을 카피해 싸게 소프트웨어를 개발했다는 쪽이 더 맞는 듯. 물론 이것도 아무나 할 수 있는 건 아니다). 좀 더 시간이 있으면, 허깅페이스에 공개된 내용을 분석할 계획이다.\n\ndeepseek-ai/DeepSeek-V3, huggingface\n\n\n\n레퍼런스\n\nDeepSeek-V3\nWhy DeepSeek V3 is considered open-source? : r/LocalLLaMA\nThe Triton Inference Server provides an optimized cloud and edge inferencing solution\nIntroduction - Triton documentation\ndeepseek-ai/DeepSeek-V3\nOpenAI says DeepSeek ‘inappropriately’ copied ChatGPT – but it’s facing copyright claims too\nMixture of Experts\nSparse Mixture of Experts Language Model\nOpenness in Language Models: Open Source vs Open Weights vs Restricted Weights\n中 AI 딥시크, 챗GPT 제치고 美앱스토어 1위…실리콘밸리 충격, 연합뉴스\n[거꾸로 읽는 경제] 중국 딥시크 V3모델 출시\n딥시크, AI 모델 V3 업데이트 버전 공개",
    "reviews": [],
    "syllabus": [],
    "link": "http://daddynkidsmakers.blogspot.com/2025/03/deep-seek.html",
    "pubDate": "2025-03-30T03:52:00.000Z",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 6,
    "imageUrl": "",
    "title": "8살자리가 AI 로 코딩했다는 영상의 진실",
    "description": "영상: https://www.youtube.com/watch?v=wPuaUn41q4Y\n\n\n\n바로 터미널 여는게 완전 초보는 아니다.\n라는걸 지적하는데 중요한건 그게아닌데 ...\n \n어린이도 배울 수 있었다는게 중요한거 같은데 ...\n그러면서 본인이 추천하는 방식을 알려주는 어그로성 영상이였습니다.\n \n \n원본 영상: https://www.youtube.com/watch?v=o5uvDZ8srHA\n\n\n\n애가말을 코딩하면서 설명도 하는 영상이구요\n타자를 이미 잘 칩니다.\n아주 오랫동안 해봤던거 같습니다.\n \n체가 코딩 처음 배울때가 생각나네요\n거의 모든 동작에서 정상저으로 구동되지 않았습니다.\n그리고 왜 안되는지 설명해줄 방법도 없는 시대였죠\n코딩하기 좋은 시대가 왔습니다.",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1245",
    "pubDate": "Wed, 2 Apr 2025 14:29:35 +0900",
    "creator": "SIDNFT",
    "categories": [
      "유튜브",
      "cursor"
    ]
  },
  {
    "id": 7,
    "imageUrl": "",
    "title": "선교사와 용병",
    "description": "창업가를 이분법적으로 구분하는 방법은 여러 가지가 있는데, 요새 내가 “이분은 이렇다. 저분은 저렇다.”라고 구분할 때 자주 사용하는 비유가 missionary와 mercenary 창업가다. 우리말로 딱 떨어지는 번역은 없지만, 편의를 위해서 나는 missionary 파운더를 사명형 창업가라고 하고, mercenary 파운더를 용병형 창업가라고 한다. 사명형 창업가는 어떤 깊은 목적이나 사명감 때문에 창업했고, 사업을 하면서도 결국 이 사명감을 실천하는 것에 집중한다.(...)",
    "reviews": [],
    "syllabus": [],
    "link": "https://www.thestartupbible.com/2025/04/missionary-vs-mercenary-founders.html",
    "pubDate": "Wed, 02 Apr 2025 21:27:00 +0000",
    "creator": "Kihong Bae",
    "categories": [
      "Uncategorized",
      "FoundersAtWork",
      "hustle",
      "inspiring",
      "people",
      "Strong",
      "vc"
    ]
  },
  {
    "id": 8,
    "imageUrl": "",
    "title": "ChatGPT 4.5 한 달 써본 솔직 후기, 개선이 필요한 7가지 부분",
    "description": "ChatGPT-4.5가 정말 혁신적인지 의문이 들었어요. 감성 지능은 향상됐다는데 별로 티 안 나고, 설명은 뜬구름 잡고, 사용 제한까지... 실제로 써보니 왜 이렇게 실망스러울까요? 진짜 개선이 필요한 부분들을 솔직하게 공유합니다.\n\n\n \nGPT-4.5를 써봤는데... 솔직히 뭔가 부족해요. 혁신적인 AI 모델이라고 광고했지만 사용해보니 기대했던 만큼의 변화가 없더라고요. 저만 그렇게 느끼는 건지 궁금했는데, 다른 사람들도 비슷한 생각을 가지고 있더라고요. 여러분도 GPT-4.5 써보셨나요? 어떤 느낌이셨어요?\n \n감성 지능이 좀 더 높아졌다지만... 별로 티가 안 나네요  \nGPT-4.5의 주요 개선점으로 감성 지능이 향상됐다고 하잖아요. 근데 솔직히 이전 버전보다 약간 나아진 정도지, 막 \"우와!\" 할 정도는 아니었어요.\nGPT-4.5랑 대화할 때 아직도 자연스러운 느낌이 부족해요. 물론 ChatGPT로 감성 지능을 발전시키는 방법이 있다곤 하지만, AI 자체가 진짜 감성 지능을 가질 수 있는지는 아직 의문이에요.\n제 생각에는 이 모델이 더 많은 정보를 학습하면 개선될 거라고 생각하긴 하지만... 현재 버전의 감성 지능은 그다지 인상적이지 않네요. 좀 더 나아지려면 프롬프트를 더 오래 처리하고 '듣는' 시간이 필요할 것 같아요. 지금은 그냥 결론으로 바로 뛰어드는 느낌이랄까요?\n \nGPT-4.5의 설명은 너무 뜬구름 잡는 느낌이에요  \n이번 ChatGPT 버전은 대화에서 더 많은 추론 과정을 제공한다고 했는데, 이전에도 이게 큰 약점이었거든요. 이 부분에선 Perplexity가 항상 ChatGPT보다 더 나았어요. Perplexity가 좋은 이유 중 하나죠.\n하지만 GPT-4.5를 사용해본 결과, 추론 능력이 Perplexity에 비해 아직 많이 부족하다고 느꼈어요. 대부분의 경우 설명이 그냥 불필요한 말 늘리기 같달까... 의미 없는 단어들을 나열하는 느낌이었어요. 이건 오히려 아무 설명도 없는 것보다 더 짜증나더라고요.\n이 생각은 저만 그런 게 아니에요. 다른 사용자들도 소프트웨어가 같은 단어를 반복적으로 추가하는 문제를 경험했다고 해요. 개선 방법은 간단해요. ChatGPT가 설명한 다음 후속 질문을 하면 좋을 것 같아요. Deep Research 도구는 이런 면에서 꽤 좋더라고요.\n \n내 요청을 무시하는 느낌...  \nChatGPT를 쓰기 시작한 이후로, 내가 말하는 것을 완전히 듣지 않는 문제가 있었어요. GPT-4.5에서는 이런 문제가 줄어들길 바랐는데... 안타깝게도 그렇지 않은 것 같네요.\n이 버전을 사용할 때 AI가 중요한 포인트를 그냥 훑어보는 느낌이에요. 결과적으로 내가 이루려고 했던 목적을 놓친 기본적인 응답만 남게 돼요. 그러면 프롬프트를 다시 작성해야 하는데, 이게 빨리 짜증나게 되더라고요.\n이걸 고치려면 GPT-4.5가 내 텍스트의 모든 부분을 비판적으로 분석해야 할 것 같아요. 솔직히 저도 좀 더 전략적으로 접근할 수 있을 거예요. AI 프롬프팅 팁과 트릭을 사용하는 거죠. 예를 들어, ChatGPT에게 어떤 영역에 가장 집중해야 하는지 명확하게 말해주는 방법도 있겠죠.\n \nGPT-4.5는 긴 텍스트에서 약해요  \n사람들은 ChatGPT가 출시된 이후로 계속 그것의 글쓰기 능력에 대해 이야기해왔어요. 솔직히 저는 그렇게 감명받지 않았어요. 아마 제가 전문 작가라서 편향된 생각일 수도 있지만, AI로 작성된 글인지 너무 쉽게 알 수 있더라고요.\n그래도 저는 항상 새로운 기술을 받아들일 준비가 되어 있어요. 그래서 ChatGPT가 효과적으로 텍스트를 작성할 수 있는지 보고 싶었어요. 짧은 텍스트는 괜찮은데, 긴 글은 아직도 좋지 않은 것 같아요. 다른 사람들도 ChatGPT의 창의적 글쓰기 도구에 확신이 없더라고요.\nGPT-4.5는 긴 텍스트를 작성할 때 여전히 너무 형식적으로 느껴져요. 프롬프트를 잘못 이해하기 때문에 다시 작성해야 할 때도 있었어요. 게다가, 논픽션 글쓰기는 더 나아졌지만, 실제 인간의 창의성이 필요한 것들은 잘 못하더라고요. 예를 들어, 아래 텍스트는 전혀 깊이가 없어요.\n아마 미래 모델에서는 생각이 바뀔 수도 있겠지만, 지금은 ChatGPT로 글을 쓰지는 않을 것 같아요. 이걸 개선하려면 OpenAI가 더 많은 인간의 입력과 더 넓은 맥락을 제공해야 할 것 같아요.\n \n사용 제한으로 실험하기 어려워요 ⏱️\nChatGPT의 Deep Research 도구나 AI 비디오 생성을 위한 Sora 사용처럼, GPT-4.5도 사용량 제한이 있어요. ChatGPT가 명시적으로 얼마인지 말하진 않지만, 글 쓰는 시점에서는 약 45-50개 프롬프트 정도에요.\n저는 매일 주로 실험을 위해 ChatGPT를 사용해요. 이전 버전에서는 무제한 프롬프트가 있었기 때문에 실험이 가능했어요. 하지만 여러 다양한 방향을 탐색할 수 없다면, 할 수 있는 일이 제한된 느낌이에요.\n아마 언젠가는 사용 제한이 제거될 테지만, 지금으로서는 꽤 짜증나요. 간단한 개선책은 제한을 늘리거나 모두에게 무제한 프롬프트를 제공하는 거예요. 이렇게 될 때까지 \"[남은 숫자] 남음\" 경고가 항상 있으면 좋을 것 같아요.\n \nGPT-4.5의 응답은 매우 일관성이 없어요  \nChatGPT 4.0도 완벽하진 않지만, 적어도 응답이 꽤 일관적이에요. 프롬프트를 입력하기 전에 나중에 다시 작성해야 할지 꽤 잘 예상할 수 있었어요. 그러나 GPT-4.5는 그렇지 않아요.\n제가 받는 응답 중 일부는 꽤 좋지만, 다른 것들은 그렇지 않아요. 이런 면에서 OpenAI의 이미지 생성 모델인 DALL-E와 비슷해요. 소프트웨어는 간단한 요청은 처리할 수 있지만 더 복잡한 요청에서는 어려움을 겪어요. 아마 그래서 Deep Research가 필요한 건지도 모르겠지만, 그러면 또 이전처럼 프롬프트 제한에 부딪히게 되고, Deep Research는 일부 대화에는 좀 과한 느낌이에요.\n감성 지능과 같은 새로운 기능이 초기 문제를 겪을 것이라고 이해해요. 개선하려면 소프트웨어가 더 인간처럼 행동하는 것과 각 대화를 완전히 이해하는 것 사이의 균형을 맞춰야 할 것 같아요. 그렇게 하면 최고의 GPT-4 기능을 더 발전시킬 수 있을 거예요.\n \nGPT-4.5는 파일 업로드에서 어려움을 겪어요  \n이건 프롬프트 응답의 문제라기보다는 기술적인 문제인데, GPT-4.5로 전환할 때 가끔 파일을 업로드하는 데 어려움을 겪었어요. 이런 문제가 소프트웨어의 더 발전된 추론 능력이 빛날 수 있는 부분이라고 생각하는데, 이런 문제를 만나면 정말 짜증나요.\nSora에서도 비슷한 문제가 있었어요. 처음 로그인했을 때 앱이 제가 이미 ChatGPT Plus 구독이 있다는 것을 인식하지 못했어요. 파일 업로드 문제도 결국 해결될 거라고 예상해요. 빠를수록 좋겠죠.\nGPT-4.5가 완벽해지기까지 갈 길이 멀다는 걸 알아요. 하지만 현재 형태의 모델에는 실망했어요. OpenAI의 이전 모델들처럼, 이런 문제들이 해결되는 데 오래 걸리지 않을 거예요. 하지만 당분간 GPT-4.5는 제 첫 번째 선택이 아닐 것 같네요.\n \n\n\n \n마치며...  \n솔직히 말해서, GPT-4.5는 저한테 '혁신적'이라기보다는 '진화중'인 느낌이에요. 사람들의 기대치가 너무 높아져서 그런지도 모르겠지만, 광고한 만큼의 혁신을 느끼기는 어려웠어요.\n그래도 AI 기술이 계속 발전하고 있다는 점은 분명하고, OpenAI도 피드백을 들으면서 개선할 거라고 생각해요. 지금 당장은 좀 실망스럽더라도, 앞으로 어떻게 발전할지 지켜보는 것도 재미있을 것 같아요.\n여러분은 GPT-4.5에 대해 어떻게 생각하시나요? 저처럼 실망하셨나요, 아니면 제가 뭔가 놓치고 있는 걸까요? 댓글로 여러분의 경험을 공유해주세요!\n자주 묻는 질문 (FAQ)\nQ: GPT-4.5는 이전 모델보다 얼마나 더 빠른가요?\nA: 처리 속도는 비슷하며, 특별히 빨라진 느낌은 없습니다.\nQ: 무료 버전에서도 GPT-4.5를 사용할 수 있나요?\nA: 아니요, 현재 GPT-4.5는 ChatGPT Plus 구독자에게만 제공됩니다.\nQ: GPT-4.5의 사용 제한은 얼마인가요?\nA: 공식적으로는 명시되지 않았지만, 약 45-50개 프롬프트 정도로 알려져 있습니다.\nQ: Perplexity AI와 비교했을 때 GPT-4.5의 장단점은 무엇인가요?\nA: GPT-4.5는 기본 기능이 더 다양하지만, Perplexity는 추론과 설명 측면에서 더 뛰어납니다.\nQ: GPT-4.5의 주요 개선점은 무엇인가요?\nA: 감성 지능 향상과 추론 능력 개선이 주요 개선점으로 광고되었지만, 실제로 체감되는 차이는 크지 않습니다.",
    "reviews": [],
    "syllabus": [],
    "link": "http://muzbox.tistory.com/483562",
    "pubDate": "Mon, 31 Mar 2025 18:08:31 +0900",
    "creator": "어떤오후의 프리웨어 이야기",
    "categories": [
      "AI, 미래기술/AI 챗봇 및 언어 모델",
      "ai 개선점",
      "AI 한계",
      "ChatGPT",
      "gpt-4.5",
      "OpenAI",
      "감성 지능",
      "딥러닝",
      "인공지능",
      "인공지능 리뷰",
      "자연어 처리"
    ]
  },
  {
    "id": 9,
    "imageUrl": "",
    "title": "데이터 노가다 실수담 - 10th",
    "description": "url 중 파일 정보 비교. file과 file2의 차이가 크다. file은 파일과 디렉토리를 구분하지 않고 저장하기 때문.\n\n\n\n추이 변화는 비슷.\n\n\n\n\n\n\n. 존재만을 검사하는 file2는 경로 정보를 저장할 가능성이 있다. 파일 존재만을 검사하는 file3과 합산 차이가 발생하는 이유. 하지만 일간 추이 변화는 거의 동일하다.\n\n\n\n확장자 정보 비교\n\n\next 수치가 압도적인 이유는 . 검사에 실패했을 때 file 원본이 그대로 반환됐기 때문.\n\n\n\nfile 사례와 같은 이유로 발생하는 ext2와 ext3의 차이가 유의미해 보이지만 추이는 거의 동일. \n\n\n\n\n데이터 품질 관리에 너무 힘 빼지 말고 빅픽처를 보라는 뜻인가? 그래도 차이나는 이유는 정확히 알아야겠지(..)\n\n\n관련 글\n\n데이터 노가다 실수담 - 9th\n데이터 노가다 실수담\n평균의 함정\n데이터 분석이 쉬워지는 비법\n데이터 분석에 필요한 자질은 뭘까?",
    "reviews": [],
    "syllabus": [],
    "link": "https://kangmyounghun.blogspot.com/2025/04/10th.html",
    "pubDate": "2025-04-04T12:52:00.009Z",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 10,
    "imageUrl": "",
    "title": "vue + motion-v 사용으로 웹 애니메이션 구현",
    "description": "영상: https://www.youtube.com/watch?v=wvINSME-FMs\n\n\n\n작은 용량으로 좀더 웹페이지를 블링 블링 하게 만들 수 있습니다.\n좋은 라이브러리 같습니다.\n \n개발문서: https://motion.dev/docs/vue\n\n \nGet started with Motion for Vue | Motion for Vue\nGet started with Motion for Vue with our installation guide and interactive examples.\nmotion.dev\n\n문서에는 NUXT 를 언급하는데 그런거 필요없고\n \nimport {motion} from \"motion-v\"\n랑\n      <motion.button \n        :while-hover=\"{ scale: 2.0 }\" \n        :while-press=\"{ scale: 0.5 }\" \n      > \n        my button \n      </motion.button>\n이런식으로 div 대신에 쓰는 방식으로 바로 적용가능합니다.\n아주 블링블링한 페이지를 만들 수 있습니다.\n예시:\n\n\n \n \n활용한 샘플 데모\n링크: https://examples.motion.dev/vue\n\n \nMotion Examples - Official Motion and Framer Motion components & examples\nFramer Motion is now Motion. Official examples of how to use Motion, including scroll animations, layout animations, keyframes, springs and more. View and copy source code for components and tests. Learn which APIs are used and link through to the source d\nexamples.motion.dev\n\n이페이지 가시면 다양한 샘플들을 보실 수 있습니다.\n고급 사이트에서 볼 수 있는 버튼 / 탭 매뉴 연출 / 팝업 / 들레그 바 등등을 보실 수 있습니다.",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1249",
    "pubDate": "Sat, 5 Apr 2025 01:19:15 +0900",
    "creator": "SIDNFT",
    "categories": [
      "프로그래밍/개발메모",
      "Motion",
      "VUE"
    ]
  },
  {
    "id": 11,
    "imageUrl": "",
    "title": "120%를 해내는 일상을 만들기",
    "description": "'전문가'로서 성과를 낸다는 것은 남들보다 많은 일을 하는 것이 아닙니다.",
    "reviews": [],
    "syllabus": [],
    "link": "https://minieetea.com/20250331-overflowing-or-sufficient/",
    "pubDate": "Mon, 31 Mar 2025 03:39:36 GMT",
    "creator": "minieetea",
    "categories": [
      "Performance"
    ]
  },
  {
    "id": 12,
    "imageUrl": "",
    "title": "Slack, Gmail 의 북마크로 TickTick Task 만들기",
    "description": "요즘 다시 TickTick을 메인 Todo App으로 사용하고 있다.\n맥북, 아이패드, 안드로이드 휴대폰, 윈도우 PC에서 모두 다 잘 작동되고 에디터가 막강하고 여러 SaaS 에서 잘 지원하는 도구가 TickTick 밖에 없다보니 다시 유료 결제하고 사용하고 있다.\n에디터가 옵시디언보다 더 좋다는 생각이 들어서 노트앱도 TickTick을 요즘 좀 더 활용하고 있다.\nTickTick에서는 여러 업무 도구와의 통합을 지원한다.\nGmail, Slack 등등에서 모두 플러그인 형태로 지원하는데, 이게 오프라이트를 몇개월간 사용해본 내 입장에서는 꽤나 불편했다.\n그래서 TickTick도 오프라이트와 마찬가지로 편하게 업무도구와의 통합을 연동했다.\nGmail 에서 \"이메일을 Star\" 할 경우 Task가 자동 생성\nSlack 에서 \"메세지를 Bookmark\" 할 경우 메세지 내용으로 Task가 자동 생성\n이 2가지 환경을 Zapier를 통해 쉽게 구축할 수 있다.\nZapier는 TickTick과 Gmail, Slack의 대부분의 Event에 대해 트리거 할 수 있고, 액션으로 등록해둘 수 있다.\n\n\n\nZapier와 Make 모두 TickTick을 지원하기에 주로 사용하는 도구를 사용하면 된다.\nGmail에서 star 시 TickTick Task 생성\nGmail에서 수신된 이메일을 보고 당장은 처리할 수 없어서 시간이 될 때 처리하기 위해 휴대폰이나 PC에서 star만 누르는 경우가 많다.\n\n\n근데 이렇게 star를 누른 것을 매번 확인할 수 없으니 TickTick에 자동으로 Task로 등록해두고 할일로서 관리하는 것이 편하다.\nZapier를 통해서 아주 쉽게 할 수 있다.\n설정\nZapier 의 Zap 생성으로 넘어가서 다음과 같이 New Starred Email 를 트리거, TickTick의 Add Task 를 액션으로 등록한다.\n\n\n다음과 같이 star 를 할 Google Email 계정과 SSO 연동을 해두고\n\n\nTickTick에서는 Add Task 를 선택한다.\n\n\n다음과 같이 Email 의 내용을 Task의 어떤 항목으로 연동할 것인지 설정해둔다.\n\n\n\nList: TickTick의 Todo List 중 관련된 것으로 선택한다\nTask Name: Email의 제목으로 설정한다\nTask Content: Email의 본문으로 설정한다.\n기타 등등 원하는 대로 설정한다.\n설정이 끝나고 Test를 진행해보면 Email의 내용이 Task로 정상적으로 등록되는 것을 확인할 수 있다.\nSlack에서 bookmark 시 TickTick Task 생성\nSlack 역시 바쁜 와중에 당장 답변할 필요가 없는 메세지들은 뒤로 미루고 다음에 할 때가 많다.\n늦더라도 꼭 답변 해야할 내용들을 하나의 Task처럼 관리하려면 이 역시 쉽게 TickTick의 Task로 관리하면 좋다.\nSlack의 북마크 기능은 이럴때 유용하고, 북마크 액션이 발생하면 자동으로 TickTick Task로 등록시킨다.\n\n\n설정\nSlack 역시 설정에 관해서는 Gmail과 크게 다르진 않다.\nSlack의 New Saved Message 를 트리거로 두고, TickTick의 Add Task를 액션으로 설정한다.\n\n\n마찬가지로 각각의 항목을 TickTick Task의 속성으로 설정해둔다.\n\n\n설정이 끝나고 Test를 진행해보면 Slack의 내용이 Task로 정상적으로 등록되는 것을 확인할 수 있다.",
    "reviews": [],
    "syllabus": [],
    "link": "http://jojoldu.tistory.com/823",
    "pubDate": "Sat, 5 Apr 2025 23:32:08 +0900",
    "creator": "향로 (기억보단 기록을)",
    "categories": [
      "개발환경",
      "gmail",
      "slack",
      "TickTick",
      "Zapier",
      "생산성",
      "오프라이트"
    ]
  },
  {
    "id": 13,
    "imageUrl": "",
    "title": "봇 테스트 하다가",
    "description": "64코어 128스레드 머신 1개에서 동접 5천의 봇을 스폰했더니 CPU를 다 쓰고있음... 열심히 만들었는데 겨우 5천밖에 못버티는 꼬라지를 보니 울화통 터지기도 하고.. 기대한만큼 성능이 안나와서 그냥 답답하네... 글로벌 DB에서 CPU를 엄청나게 먹고있는걸로 보이는데.. 많이 먹을때는 거의 70%정도.. 에휴.. 이걸 쓰자마자 서버 머신은 셧다운됐고 재부팅중.. 요즘 일도 잘 안풀리고 하이고~ 착잡하다 ㅜ ------------------- 글로벌 DB의 CPU 사용량이 비정상적으로 높은게 이해가 안돼서 살펴보니 봇이 무차별적으로 게시판에 글을 작성하고 있는 로직이 있는 것을 발견함 DB 머신은 따로 두는데는 이유가 있음을 느끼고.. 게시판 작성 로직.......",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.naver.com/boyism/223815579930?fromRss=true&trackingCode=rss",
    "pubDate": "Mon, 31 Mar 2025 04:34:15 +0900",
    "creator": "boyism",
    "categories": [
      "바람의나라"
    ]
  },
  {
    "id": 14,
    "imageUrl": "",
    "title": "C# - 컬렉션 표현식을 사용하여 코드 리팩터링 하기",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://jacking75.github.io/NET_20250401/",
    "pubDate": "Tue, 01 Apr 2025 00:00:00 +0900",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 15,
    "imageUrl": "",
    "title": "초보자도 쉽게 따라하는 XML 기반의 구조화된 프롬프트 템플릿 사용법 - 무료 GPTS 공개",
    "description": "GPT 프롬프트 템플릿, 어렵지 않아요! 프롬프트 엔지니어링의 핵심 비법과 실전 활용법을 배우고, 무료로 XML 기반 템플릿을 활용해 AI의 능력을 극대화해보세요. 누구나 쉽게 따라할 수 있는 방법!\n\n\n \n프롬프트 엔지니어링, 이제 전문가처럼 활용하세요!  \n프롬프트 템플릿이라는 말, 들어보셨나요? ChatGPT나 다른 AI 서비스를 사용하다 보면 가끔 '좋은 프롬프트'에 대한 이야기가 나오더라고요. 사실 저도 처음엔 \"뭐 그냥 질문하면 되는 거 아냐?\"라고 생각했어요. 근데 어느 날 우연히 발견한 XML 기반 프롬프트 템플릿을 써보고 깜짝 놀랐습니다. 정말 같은 AI인데 결과물이 달라지더라고요!\n \n여러분도 혹시 이런 경험 있으신가요? AI에게 물어봤는데 답변이 너무 길거나, 너무 짧거나, 아니면 완전히 딴소리를 하는 경우? 오늘은 그런 문제를 해결할 수 있는 '프롬프트 엔지니어 GPT'를 직접 만들어 소개해드리려고 합니다. 무료로 사용할 수 있어요!\n \n프롬프트 엔지니어 GPT란?  \n프롬프트 엔지니어 GPT는 간단히 말해서 AI에게 명확한 지시를 내릴 수 있도록 도와주는 일종의 '번역기'예요. 사용자가 원하는 작업을 간단히 설명하면, 이를 AI가 정확히 이해하고 실행할 수 있는 구조화된 프롬프트로 변환해주는 거죠.\n \n특히 XML 기반의 구조화된 템플릿을 만들어주기 때문에, AI의 응답이 훨씬 일관되고 예측 가능해져요. 마치 요리 레시피처럼 정확한 단계와 지시사항을 제공하는 셈이죠.\n \n예전에는 AI에게 \"좀 더 자세히 설명해줘\"라고 여러 번 요청해야 했던 것들이, 이제는 한 번에 원하는 형태로 딱! 나오니까요.\n \n무료 XML 프롬프트 템플릿의 핵심 특징 ✨\n이 프롬프트 엔지니어 GPT의 가장 큰 특징은 구조화된 XML 형식이라는 점이에요. 일반 텍스트와 달리, XML은 정보를 체계적으로 구성할 수 있게 해주거든요. 실제로 어떤 차이가 있는지 살펴볼까요?\n1. 변수 활용으로 맞춤형 응답 가능\n<question>{$QUESTION}</question>\n<level>{$STUDENT_LEVEL}</level>\n<language>{$PREFERRED_LANGUAGE}</language>\n이런 식으로 변수를 설정해두면, 나중에 실제 값만 바꿔서 계속 재사용할 수 있어요. 예를 들어, 수학 문제를 풀 때 학생 수준(초등/중등/고등)에 따라 설명 방식을 자동으로 조절할 수 있죠.\n2. 단계별 사고 과정 지정\nAI가 어떤 순서로 생각하고 답변을 구성할지 정확히 지정할 수 있어요. 예컨대 수학 문제를 풀 때:\n먼저 문제를 이해하고\n관련 수학 개념을 설명한 다음\n단계별 풀이 과정을 보여주고\n마지막으로 답을 정리하는\n식으로 명확한 흐름을 만들 수 있죠. 이렇게 하면 AI가 중간에 길을 잃고 딴소리를 할 가능성이 훨씬 줄어들어요.\n3. 도구 활용 지침 포함\n특히 좋았던 건, 필요할 때 AI의 특수 기능(이미지 생성, 웹 검색, 코드 실행 등)을 자동으로 활용하도록 설정할 수 있다는 점이었어요. 예전에는 \"이미지 만들어줘\"라고 따로 요청해야 했는데, 이제는 템플릿에 미리 설정해둘 수 있어요.\n \n \n실제 사용법 - 누구나 할 수 있어요!  ‍ \n사용법이 어렵지 않을까 걱정하셨다면 안심하세요. 생각보다 훨씬 간단합니다!\n방법 1: ChatGPT에 직접 활용하기\n가장 쉬운 방법은 ChatGPT 창에 다음과 같은 형식으로 입력하는 거예요:\n<x-tutor>\n  <question>x + 3 = 7, x의 값을 구하시오</question>\n  <level>초등학생</level>\n  <language>한국어</language>\n</x-tutor>\n이렇게만 입력해도 AI는 XML 구조를 인식하고, 초등학생 수준에 맞춰 한국어로 방정식을 설명해 줍니다.\n아니면 그냥 일상 대화처럼:\n\"초등학생이 이해할 수 있도록 'x + 3 = 7' 문제를 단계적으로 풀어줘. 설명은 한국어로 해줘.\"\n이렇게 입력해도 돼요. 훨씬 간단하죠?\n방법 2: 나만의 Custom GPT 만들기\n조금 더 발전된 방법은 Custom GPT를 만드는 거예요(ChatGPT Plus 구독자만 가능):\nhttps://chat.openai.com/gpts 접속\n\"Create a GPT\" 클릭\n\"Instructions\"에 XML 템플릿 내용을 붙여넣기\n설정 후 저장\n이렇게 하면 매번 복잡한 프롬프트를 입력할 필요 없이, 간단한 질문만으로도 구조화된 응답을 받을 수 있어요.\n \n \n활용 사례 - 이럴 때 특히 유용해요!  \n이번 무료 GPTS는 특히 이런 상황에서 정말 유용했어요:\n1. 교육 콘텐츠 제작\n학생들을 위한 단계별 학습 자료를 만들 때, 수준별로 다른 설명을 자동으로 생성할 수 있었어요. 초등학생용, 중학생용, 고등학생용 설명을 각각 따로 만들 필요 없이, 변수만 바꿔서 쓸 수 있으니 시간이 엄청 절약되더라고요.\n2. 비즈니스 문서 작성\n보고서나 제안서 작성할 때도 좋았어요. 목표, 대상, 톤앤매너 등을 변수로 지정해두면, 비슷한 문서를 여러 번 만들 때 일관된 품질을 유지할 수 있었거든요.\n3. 코드 설명 및 디버깅\n프로그래밍 코드를 설명하거나 디버깅할 때도 유용했어요. 코드의 난이도와 사용자의 프로그래밍 지식 수준에 따라 설명 깊이를 자동으로 조절할 수 있으니까요.\n \n \nXML과 일반 텍스트 프롬프트의 차이  \n사실 처음에는 \"그냥 일반 텍스트로 물어보면 되지, 왜 XML이 필요해?\"라는 의문이 들었어요. 근데 직접 비교해보니 확실히 차이가 있더라고요.\nXML 템플릿\n일반 텍스트\n\n\n\n\n구조가 명확해서 일관된 결과\n때에 따라 결과가 들쑥날쑥\n\n\n변수 활용으로 재사용 쉬움\n매번 비슷한 지시를 반복해야 함\n\n\n시스템 연동이 용이함\n자동화하기 어려움\n\n\n처음 설정이 약간 복잡함\n바로 사용 가능함\n\n\n\n \n실제로 같은 질문을 XML 형식과 일반 텍스트로 각각 물어봤을 때, XML 형식이 훨씬 더 구조화되고 완성도 높은 답변을 주더라고요.\n \n무료로 프롬프트 엔지니어링 시작하기  \n이 모든 기능을 무료로 사용할 수 있어요! ChatGPT의 무료 버전에서도 XML 템플릿을 입력하는 방식으로 충분히 활용 가능합니다. 물론 Custom GPT를 만들려면 Plus 구독이 필요하지만...\n시작하는 가장 쉬운 방법은 GPTS 에 생성한 아래 예시와 같은 템플릿을 복사해서 ChatGPT에 붙여넣는 거예요:\n<x-tutor>\n  <question>2x - 4 = 10</question>\n  <level>중학생</level>\n  <language>한국어</language>\n</x-tutor>\n이런 식으로 시작해보고, 점점 자신만의 템플릿을 만들어 나가면 됩니다. 처음엔 간단한 템플릿부터 시작해서, 익숙해지면 더 복잡한 구조로 발전시켜 보세요.\n \n* 초보분들을 위해 이번 GPTS에는 XML 템플릿 형태의 프롬프트외에도 일반적인 프롬프트도 함께 제공하니 안심하세요!!\n \n마무리: 프롬프트 엔지니어링의 미래  \n프롬프트 엔지니어링은 앞으로 더욱 중요해질 것 같아요. AI 기술이 발전할수록, 정확한 지시를 내리는 능력이 더욱 가치 있게 될 테니까요.\n이번 기회에 XML 기반 프롬프트 템플릿을 한번 사용해보세요. 처음에는 약간 어색할 수 있지만, 금방 익숙해지고 AI와의 소통이 훨씬 원활해지는 걸 경험하실 수 있을 거예요.\n여러분도 이제 \"그냥 AI 사용자\"가 아닌 \"프롬프트 엔지니어\"로 한 단계 업그레이드해 보는 건 어떨까요? 댓글로 여러분의 경험이나 질문을 공유해주세요!\n자주 묻는 질문 (Q&A)  \nQ: XML 문법을 잘 몰라도 사용할 수 있나요?\nA: 네, 기본적인 태그 구조만 이해하시면 충분합니다. 여는 태그와 닫는 태그만 맞추면 돼요.\nQ: 무료 ChatGPT에서도 사용 가능한가요?\nA: 네, 템플릿을 복사해서 붙여넣기만 하면 무료 버전에서도 동일하게 작동합니다.\nQ: 어떤 언어로도 사용 가능한가요?\nA: 물론이죠! 한국어, 영어, 일본어 등 ChatGPT가 지원하는 모든 언어로 활용 가능합니다.\nQ: 프로그래밍이나 기술적 지식이 필요한가요?\nA: 아니요, 기본적인 태그 구조만 이해하시면 됩니다. 복사-붙여넣기로도 충분히 시작할 수 있어요.\nQ: 비슷한 유료 서비스와 비교해서 기능 차이가 있나요?\nA: 유료 서비스들은 더 많은 템플릿이나 통합 기능을 제공하지만, 기본적인 프롬프트 엔지니어링 기능은 이 무료 방식으로도 충분히 활용할 수 있습니다.\n \n \n  GPTS 무료배포\n 약간의 지식과 시간만 투자하면 누구나 직접 제작하고 활용할 수 있는 유용한 GPTs가 이미 많이 존재합니다. 그러나 여전히 AI 기술에 대한 낯선 접근을 두려워하거나 IT 초보자, 또는 시간적 여유가 없거나 수익화에 대한 절실함 때문에 올바른 정보를 얻지 못하는 사람들이 많습니다. \n이러한 심리를 악용해 과도한 가격으로 유료 강의를 판매하며 불필요한 부담을 주는 사례들이 늘어나고 있습니다.\n \n 이에 본 블로그에서는 모든 사람이 AI의 혜택을 공정하고 자유롭게 누릴 수 있도록 GPTs를 무료로 배포하며, 불합리한 강의 판매 행위를 단호히 배척하고자 합니다. (당연히 저도 무료 그 이상의 가치가 있는 챗봇이라면 유료화를 검토중입니다.)\n\n \nChatGPT - 프롬프트 마법사 (Prompt Wizard)\n사용자의 간단한 작업 설명을 XML 기반의 구조화된 프롬프트 템플릿으로 변환해 드립니다. AI가 고품질 결과를 생성할 수 있도록 변수 구조화, 내부 추론, 출력 포맷 설계를 최적화합니다. 문서\nchatgpt.com\n\n\n \n\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"XML 문법을 잘 몰라도 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 기본적인 태그 구조만 이해하시면 충분합니다. 여는 태그와 닫는 태그만 맞추면 돼요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 ChatGPT에서도 사용 가능한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 템플릿을 복사해서 붙여넣기만 하면 무료 버전에서도 동일하게 작동합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"어떤 언어로도 사용 가능한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"물론이죠! 한국어, 영어, 일본어 등 ChatGPT가 지원하는 모든 언어로 활용 가능합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"프로그래밍이나 기술적 지식이 필요한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아니요, 기본적인 태그 구조만 이해하시면 됩니다. 복사-붙여넣기로도 충분히 시작할 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"비슷한 유료 서비스와 비교해서 기능 차이가 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"유료 서비스들은 더 많은 템플릿이나 통합 기능을 제공하지만, 기본적인 프롬프트 엔지니어링 기능은 이 무료 방식으로도 충분히 활용할 수 있습니다.\"\n      }\n    }\n  ]\n}",
    "reviews": [],
    "syllabus": [],
    "link": "http://muzbox.tistory.com/483564",
    "pubDate": "Fri, 4 Apr 2025 08:23:50 +0900",
    "creator": "어떤오후의 프리웨어 이야기",
    "categories": [
      "AI, 미래기술/무료 GPTS 공개",
      "ai 프롬프트",
      "ChatGPT 활용법",
      "Custom GPT",
      "xml 템플릿",
      "구조화된 프롬프트",
      "무료 템플릿",
      "무료gpts료",
      "프롬프트 엔지니어링",
      "프롬프트 최적화"
    ]
  }
]