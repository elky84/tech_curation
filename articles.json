[
  {
    "id": 1,
    "imageUrl": "",
    "title": "Set the default file encoding",
    "description": "Have you ever encountered unexpected issues due to file encoding when working in cross-platform environments? These frustrating problems can disrupt your workflow and consume valuable time. Visual Studio addresses these concerns with a new feature – the Default File Encoding option. You can now specify the encoding Visual Studio should use when saving files. This […]\nThe post Set the default file encoding appeared first on Visual Studio Blog.",
    "reviews": [],
    "syllabus": [],
    "link": "https://devblogs.microsoft.com/visualstudio/set-the-default-file-encoding/",
    "pubDate": "Mon, 28 Apr 2025 14:50:31 +0000",
    "creator": "Mark Downie",
    "categories": [
      "Cross-Platform",
      "Visual Studio"
    ]
  },
  {
    "id": 2,
    "imageUrl": "",
    "title": "CI/CD Security Best Practices",
    "description": "Software development moves fast – really fast. It can also involve multiple teams working from different locations around the world. However, while speed and collaboration can be great for developers and businesses, they can also create security challenges.  With more entry points and less time to catch potential threats, each commit, build, and deployment is […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/teamcity/2025/04/ci-cd-security-best-practices/",
    "pubDate": "Tue, 22 Apr 2025 12:57:38 +0000",
    "creator": "Olga Bedrina",
    "categories": [
      "best-practices",
      "how-tos",
      "security",
      "how-to"
    ]
  },
  {
    "id": 3,
    "imageUrl": "",
    "title": "Aqua Sunset",
    "description": "Aqua was originally developed as a dedicated IDE for QA engineers working in automated testing. After carefully evaluating adoption rates, market trends, and user feedback, we have made the difficult decision to discontinue the product. While this was not an easy choice, Aqua did not reach the level of adoption we had anticipated. We believe […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/qa/2025/04/aqua-sunset/",
    "pubDate": "Tue, 22 Apr 2025 12:16:52 +0000",
    "creator": "Razmik Seysyan",
    "categories": []
  },
  {
    "id": 4,
    "imageUrl": "",
    "title": "Pure Virtual C++ 2025: Pre-Conference Videos",
    "description": "Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It is running on 30th April. The first half of our pre-conference videos is now available on YouTube. The videos are: MSVC C++23 Conformance Simplifying your Cross-Platform Development with Visual Studio C++ Dynamic Debugging How Debuggers Work A Year in Review: […]\nThe post Pure Virtual C++ 2025: Pre-Conference Videos appeared first on C++ Team Blog.",
    "reviews": [],
    "syllabus": [],
    "link": "https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-pre-conference-videos/",
    "pubDate": "Wed, 23 Apr 2025 18:46:32 +0000",
    "creator": "Sy Brand",
    "categories": [
      "Announcement",
      "C++",
      "Pure Virtual C++"
    ]
  },
  {
    "id": 5,
    "imageUrl": "",
    "title": "코드 품질 개선 기법 9편: 왔던 길을 되돌아가 보자",
    "description": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
    "reviews": [],
    "syllabus": [],
    "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-9",
    "pubDate": "Fri, 25 Apr 2025 02:10:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 6,
    "imageUrl": "",
    "title": "Building Dash: How RAG and AI agents help us meet the needs of businesses",
    "description": "null",
    "reviews": [],
    "syllabus": [],
    "link": "https://dropbox.tech/machine-learning/building-dash-rag-multi-step-ai-agents-business-users",
    "pubDate": "Thu, 24 Apr 2025 06:00:00 -0700",
    "creator": "\r\n                            Ranjitha Gurunath Kulkarni,James Johnson\r\n            \t\t\t",
    "categories": [
      "LLM",
      "models",
      "Machine Learning",
      "AI",
      "Dash",
      "Business"
    ]
  },
  {
    "id": 7,
    "imageUrl": "",
    "title": "Effortless adjustments with an adaptive paste",
    "description": "Find yourself needing to adjust pasted code to actually work in your project? Visual Studio 2022 introduces the capability to adapt your pasted code with Copilot to reduce the time you spend on making tedious changes. Streamline manual code modifications with adaptive paste When you’re copying and pasting code, the process often comes with extra […]\nThe post Effortless adjustments with an adaptive paste appeared first on Visual Studio Blog.",
    "reviews": [],
    "syllabus": [],
    "link": "https://devblogs.microsoft.com/visualstudio/effortless-adjustments-with-an-adaptive-paste/",
    "pubDate": "Wed, 23 Apr 2025 14:51:46 +0000",
    "creator": "Leah Tran",
    "categories": [
      "Copilot",
      "Productivity",
      "Visual Studio"
    ]
  },
  {
    "id": 8,
    "imageUrl": "",
    "title": "프리랜서 종합소득세 신고, 이것만 알아도 충분해요",
    "description": "프리랜서라면 꼭 알아야 할 종합소득세 신고 방식",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.toss.im/article/tossmoment-8",
    "pubDate": "Wed, 23 Apr 2025 04:53:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 9,
    "imageUrl": "",
    "title": "Qodana For Code Quality in STEM",
    "description": "Your code drives discovery. Keep it precise. In STEM fields, software isn’t just a product, it underpins innovation, research, and life-critical infrastructure. Qodana brings advanced static code analysis to STEM software projects, helping ensure code quality, security, and compliance where it matters most. Qodana for STEM Why code quality matters in STEM Software in science, […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/qodana/2025/04/qodana-for-code-quality-in-stem/",
    "pubDate": "Tue, 22 Apr 2025 10:37:18 +0000",
    "creator": "Kerry Beetge",
    "categories": [
      "case-study-qodana",
      "qodana",
      "code-analysis",
      "stem"
    ]
  },
  {
    "id": 10,
    "imageUrl": "",
    "title": "Logstash 필터 ruby - 8th",
    "description": "audit.log 연동.\n\nfilter {\n mutate {\n  remove_field => [\"@timestamp\", \"@version\", \"path\", \"host\"]\n }\n\n\n kv {}\n\n\n dissect {\n  mapping => {\"msg\" => \"%{}(%{timestamp}:%{}\"}\n }\n}\n\n\n\n\n{\n       \"family\" => \"10\",\n      \"message\" => \"type=NETFILTER_CFG msg=audit(1745768855.720:63): table=filter family=10 entries=0\\r\",\n         \"type\" => \"NETFILTER_CFG\",\n      \"entries\" => \"0\\r\",\n    \"timestamp\" => \"1745768855.720\",\n        \"table\" => \"filter\",\n          \"msg\" => \"audit(1745768855.720:63):\"\n}\n{\n          \"gid\" => \"0\",\n           \"a2\" => \"41a2d8\",\n           \"a0\" => \"1e2da20\",\n         \"ppid\" => \"1335\",\n          \"key\" => \"(null)\\r\",\n    \"timestamp\" => \"1745768855.720\",\n           \"a1\" => \"1d75\",\n        \"fsgid\" => \"0\",\n          \"tty\" => \"none\",\n      \"message\" => \"type=SYSCALL msg=audit(1745768855.720:63): arch=c000003e syscall=175 success=yes exit=0 a0=1e2da20 a1=1d75 a2=41a2d8 a3=1e2a500 items=0 ppid=1335 pid=1336 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm=\\\"modprobe\\\" exe=\\\"/usr/bin/kmod\\\" subj=system_u:system_r:insmod_t:s0 key=(null)\\r\",\n        \"items\" => \"0\",\n         \"suid\" => \"0\",\n         \"auid\" => \"4294967295\",\n         \"sgid\" => \"0\",\n          \"pid\" => \"1336\",\n         \"egid\" => \"0\",\n          \"exe\" => \"/usr/bin/kmod\",\n          \"uid\" => \"0\",\n          \"ses\" => \"4294967295\",\n           \"a3\" => \"1e2a500\",\n         \"euid\" => \"0\",\n        \"fsuid\" => \"0\",\n         \"comm\" => \"modprobe\",\n         \"exit\" => \"0\",\n      \"success\" => \"yes\",\n          \"msg\" => \"audit(1745768855.720:63):\",\n         \"arch\" => \"c000003e\",\n         \"subj\" => \"system_u:system_r:insmod_t:s0\",\n      \"syscall\" => \"175\",\n         \"type\" => \"SYSCALL\"\n}\n\n\n\n\n그런데 시간 정보가 unixtime 포맷이다. stackoverflow 형님들이 가르쳐준대로 date 포맷으로 변경.\n\nfilter {\n mutate {\n  remove_field => [\"@timestamp\", \"@version\", \"path\", \"host\"]\n }\n\n\n kv {}\n\n\n dissect {\n  mapping => {\"msg\" => \"%{}(%{timestamp}:%{}\"}\n }\n\n\n ruby {\n  code => \"event.set('@timestamp', DateTime.strptime(event.get('timestamp'), '%s'))\"\n }\n}\n\n\n\n[2025-04-28T17:52:41,760][ERROR][logstash.filters.ruby    ][main][7cefa12dcafdc101f42a5bda6812294cab6405d0864ef044fe35a2cc66392ce4] \nRuby exception occurred: wrong argument type DateTime (expected LogStash::Timestamp)\n\n\n안 된다. 제미나이한테 물어봄.\n\n\n\n\n[2025-04-28T17:57:02,837][ERROR][logstash.filters.ruby    ][main][d35de4494869054b8277f75d5c334da579e561ff0060cc7554ec4beb7dd79661] \nRuby exception occurred: wrong argument type DateTime (expected Time)\n\n\n안 되잖아(..)\n\n\n\n\n아무래도 로그스태시 구문이 따로 있는 것 같은데 ruby 구문을 계속 그대로 사용하는 게 이상하다. gpt는 다를까?\n\n\n\n\nfilter {\n mutate {\n  remove_field => [\"@timestamp\", \"@version\", \"path\", \"host\"]\n }\n\n\n kv {}\n\n\n dissect {\n  mapping => {\"msg\" => \"%{}(%{timestamp}:%{}\"}\n }\n\n\n ruby {\n  code => \"event.set('@timestamp', LogStash::Timestamp.new(Time.at(event.get('timestamp').to_i)))\"\n }\n}\n\n\n\n\n{\n        \"family\" => \"10\",\n       \"message\" => \"type=NETFILTER_CFG msg=audit(1745768855.720:63): table=filter family=10 entries=0\\r\",\n          \"type\" => \"NETFILTER_CFG\",\n       \"entries\" => \"0\\r\",\n     \"timestamp\" => \"1745768855.720\",\n    \"@timestamp\" => 2025-04-27T15:47:35.000Z,\n         \"table\" => \"filter\",\n           \"msg\" => \"audit(1745768855.720:63):\"\n}\n{\n           \"gid\" => \"0\",\n            \"a2\" => \"41a2d8\",\n            \"a0\" => \"1e2da20\",\n          \"ppid\" => \"1335\",\n           \"key\" => \"(null)\\r\",\n     \"timestamp\" => \"1745768855.720\",\n            \"a1\" => \"1d75\",\n         \"fsgid\" => \"0\",\n           \"tty\" => \"none\",\n       \"message\" => \"type=SYSCALL msg=audit(1745768855.720:63): arch=c000003e syscall=175 success=yes exit=0 a0=1e2da20 a1=1d75 a2=41a2d8 a3=1e2a500 items=0 ppid=1335 pid=1336 auid=4294967295 uid=0 gid=0 euid=0 suid=0 fsuid=0 egid=0 sgid=0 fsgid=0 tty=(none) ses=4294967295 comm=\\\"modprobe\\\" exe=\\\"/usr/bin/kmod\\\" subj=system_u:system_r:insmod_t:s0 key=(null)\\r\",\n         \"items\" => \"0\",\n          \"suid\" => \"0\",\n          \"auid\" => \"4294967295\",\n          \"sgid\" => \"0\",\n           \"pid\" => \"1336\",\n          \"egid\" => \"0\",\n           \"exe\" => \"/usr/bin/kmod\",\n           \"uid\" => \"0\",\n           \"ses\" => \"4294967295\",\n            \"a3\" => \"1e2a500\",\n          \"euid\" => \"0\",\n         \"fsuid\" => \"0\",\n          \"comm\" => \"modprobe\",\n    \"@timestamp\" => 2025-04-27T15:47:35.000Z,\n          \"exit\" => \"0\",\n       \"success\" => \"yes\",\n           \"msg\" => \"audit(1745768855.720:63):\",\n          \"arch\" => \"c000003e\",\n          \"subj\" => \"system_u:system_r:insmod_t:s0\",\n       \"syscall\" => \"175\",\n          \"type\" => \"SYSCALL\"\n}\n\n\n\n\n아이고 구글(..)\n\n\n관련 글\n\nLogstash 필터 ruby - 7th\nLogstash 필터 ruby\nLogstash 필터 grok\nLogstash 필터 mutate\nLogstash 필터 geoip\nLogstash 필터 dissect\nLogstash 필터 kv\nLogstash 필터 date\nLogstash 필터 translate\nLogstash 필터 drop\nLogstash 필터 useragent\nLogstash 필터 elapsed\nLogstash 필터 fingerprint\nLogstash 필터 csv\nLogstash 필터 dns\nLogstash 필터 split\nLogstash codec 플러그인 multiline",
    "reviews": [],
    "syllabus": [],
    "link": "https://kangmyounghun.blogspot.com/2025/04/logstash-ruby-8th.html",
    "pubDate": "2025-04-28T09:02:00.002Z",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 11,
    "imageUrl": "",
    "title": "Debugging Java Code in IntelliJ IDEA",
    "description": "In this blog post, we will look at how to debug Java code using the IntelliJ IDEA debugger. We will look at how to fix a failing test, how to find out where an `Exception` is thrown, and how to find problems with our data. And we will learn some neat tricks about the debugger […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/idea/2025/04/debugging-java-code-in-intellij-idea/",
    "pubDate": "Thu, 24 Apr 2025 09:12:11 +0000",
    "creator": "Marit van Dijk",
    "categories": [
      "idea",
      "java",
      "tutorials",
      "debug",
      "debugger",
      "debugging",
      "intelij-idea"
    ]
  },
  {
    "id": 12,
    "imageUrl": "",
    "title": "Is It Still Worth Learning to Code in an AI World?",
    "description": "We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses. At first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/education/2025/04/23/is-it-still-worth-learning-to-code/",
    "pubDate": "Wed, 23 Apr 2025 09:17:49 +0000",
    "creator": "Clara Maine",
    "categories": [
      "jetbrains-academy",
      "ai",
      "ai-assistance",
      "career",
      "developers",
      "for-learners",
      "jetbrainsacademy-2",
      "learn",
      "learn-programming"
    ]
  },
  {
    "id": 13,
    "imageUrl": "",
    "title": "C# - .NET 9, C#13 정리",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://jacking75.github.io/NET_20250424/",
    "pubDate": "Thu, 24 Apr 2025 00:00:00 +0900",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 14,
    "imageUrl": "",
    "title": "AI 강의 팔이의 실체",
    "description": "신기술이 나오면 제일 먼저 자리잡는 건 사기 인가 보다.\n영상: https://www.youtube.com/watch?v=s3PfQOF2-So\n\n\n\n머니 해커로 찾으면 영상이 많이 나옵니다.\n70만원짜리 강의를 사면 자동으로 돈버는 법이 들어있다는 식이라고 합니다.\nai 자동 블로그 작성\nai 자동 쇼츠 제작\n누가 사서 따라해봤나본데요\n하지만 강의가 너무 부실해서 쓸 수 없었나봅니다.\n그래서 고소 들어가 버렸다는 이야기입니다.\n블로그 자동 글쓰기 만들고 있었는데 ... 안되는거였다니 ㅠㅠ\n충격입니다.",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1287",
    "pubDate": "Sat, 26 Apr 2025 10:35:08 +0900",
    "creator": "SIDNFT",
    "categories": [
      "유튜브"
    ]
  },
  {
    "id": 15,
    "imageUrl": "",
    "title": "LogParser의 문자열 처리",
    "description": "이벤트 전체 현황을 보고 싶다. 첫 번째 문장만 추출하면 되겠는데?\n\n\n\n\n.을 기준으로 첫 번째 문장 추출. 그런데 .이 없는 이벤트가 있다. \n\n\n\n\n첫 번째 문장 추출 조건에 : 추가. 그런데 . 기준 첫 번째 문장에서 : 존재를 확인하는 CASE-WHEN 구문이 먹지 않는다. Logparser의 한계. SQL 지원 범위 좀 확장하면 안 되나? 마소는 가브리엘님을 다시 영입하라\n\n\n\n\n구문 변경.\n\n\n\n\n\n내가 보고 싶은 상태가 있을 때, 그때서야 비로소 그 상태를 볼 수 있는 데이터 구조와 그 구조를 만들 수 있는 방법을 고민하게 된다. 뭘 보고 싶은지를 모르겠다고? 데이터를 자꾸 만지작거리다 보면 생김.\n\n데이터를 이리저리 만져보고 질감을 느끼기 시작하면서 문제의 구조가 보이고 모델링에 대한 단초가 잡힌다\n\n\n그리고 이런 경험이 스플렁크,\n\n\n\n\n엘라스틱으로 이어진다.\n\n\n\n\n\n툴은 바뀌었지만 하는 일은 똑같다는 얘기. 쉬울 수밖에 없다.\n\n\n관련 글\n\nLogParser의 파일 연동\nURL, HEX, BASE64 디코딩\nSplunk의 eval과 rex - 4th",
    "reviews": [],
    "syllabus": [],
    "link": "https://kangmyounghun.blogspot.com/2025/04/logparser.html",
    "pubDate": "2025-04-22T11:41:00.010Z",
    "creator": "Unknown",
    "categories": []
  }
]