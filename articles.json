[
  {
    "id": 1,
    "imageUrl": "",
    "title": "ingest pipeline - 5th",
    "description": "다음은 url과 변수를 구분해서 검사하는 정규표현식.\n\n\n\n\n\ngrok processor 사용 시 에러 발생.\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"msg\",\n          \"patterns\": [\"(?<url>[^?]+)\\?(?<param>.*)\"]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"msg\": \"index.php?a=b\"\n      }\n    }\n  ]\n}\n\n\n\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"parse_exception\",\n        \"reason\": \"Failed to parse content to type\"\n      }\n    ],\n    \"type\": \"parse_exception\",\n    \"reason\": \"Failed to parse content to type\",\n    \"caused_by\": {\n      \"type\": \"json_parse_exception\",\n      \"reason\": \"\"\"Unrecognized character escape '?' (code 63)\n at [Source: (byte[])\"{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"msg\",\n          \"patterns\": [\"(?<url>[^?]+)\\?(?<param>.*)\"]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"msg\": \"index.php?a=b\"\n      }\n    }\n  ]\n}\n\"; line: 7, column: 39]\"\"\"\n    }\n  },\n  \"status\": 400\n}\n\n\n순수 문자 ?(\\?)를 인식하지 못한다. 예외처리를 한 번 더 해줘야 함.\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"msg\",\n          \"patterns\": [\"(?<url>[^?]+)\\\\?(?<param>.*)\"]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"msg\": \"index.php?a=b\"\n      }\n    }\n  ]\n}\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"msg\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-14T09:25:47.8591859Z\"\n        }\n      }\n    }\n  ]\n}\n\n\ngrok과 script processor의 정규표현식 처리 방식이 다르다. 이러니 헷갈리지(..)\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"script\": {\n          \"source\": \"\"\"\n            def str = /([^?]+)\\?(.*)/.matcher(ctx.msg);\n            if (str.find()) {\n              ctx.url = str.group(1);\n              ctx.param = str.group(2);\n            }  \n          \"\"\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"msg\": \"index.php?a=b\"\n      }\n    }\n  ]\n}\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"msg\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-14T09:29:27.6636501Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n관련 글\n\ningest pipeline - 6th\ningest pipeline - 4th",
    "reviews": [],
    "syllabus": [],
    "link": "https://kangmyounghun.blogspot.com/2025/03/ingest-pipeline-5th.html",
    "pubDate": "2025-03-14T09:40:00.006Z",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 2,
    "imageUrl": "",
    "title": "유니티 애셋 / Block Blast / 데모게임 / 유",
    "description": "영상: https://www.youtube.com/watch?v=LYECrh_MYOw&t=55s\n\n\n\n \n유니티 애셋 스토어 링크: https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\n\n \nBlast Puzzle | Template + Editor | 패키지 | Unity Asset Store\nUse Blast Puzzle | Template + Editor from Watermelon Games to elevate your next project. Find this & more 패키지 and templates on the Unity Asset Store.\nassetstore.unity.com\n\n \n비싸긴한데 카피게임 올리기엔 쉽겠군요\n거의 비슷하군요\n기억해 둬야겠습니다.",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1214",
    "pubDate": "Wed, 19 Mar 2025 10:58:49 +0900",
    "creator": "이건개발",
    "categories": [
      "프로그래밍/유니티 에셋 리뷰"
    ]
  },
  {
    "id": 3,
    "imageUrl": "",
    "title": "Java 24 and IntelliJ IDEA",
    "description": "IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases! I’m often asked, “What’s the best feature of Java 24?” My answer? Why pick just one? 🙂 Java 24 continues to enhance the language with improvements like Simple source files and instance main methods, Primitive Types […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/idea/2025/03/java-24-and-intellij-idea",
    "pubDate": "Tue, 18 Mar 2025 08:35:35 +0000",
    "creator": "Mala Gupta",
    "categories": [
      "idea",
      "java",
      "intellijidea",
      "java24",
      "whatsnew-2"
    ]
  },
  {
    "id": 4,
    "imageUrl": "",
    "title": "콘텐츠를 더 매력적으로! 무료 시각화 클로드 프로젝트 공개",
    "description": "웹 콘텐츠를 효과적으로 시각화하면 독자들의 관심을 끌고 정보 전달력을 극대화할 수 있습니다. 단순한 텍스트에서 벗어나, 가독성을 높이는 핵심 요소와 실전 가이드를 소개합니다. 특히, 시각적 콘텐츠를 쉽게 제작할 수 있도록 클로드용 시각화 프로젝트를 무료 공개하니 놓치지 마세요!\n\n\n \n블로그나 뉴스 사이트를 운영하다 보면, 아무리 좋은 글을 써도 독자들이 끝까지 읽지 않는 경우가 많아요. 사람들이 정보를 빨리 습득하려 하고, 스크롤을 내리면서 중요한 부분만 훑어보는 경우가 많기 때문이죠. 그래서 콘텐츠를 텍스트에서 ‘시각적 경험’으로 바꾸는 것이 점점 더 중요해지고 있어요.\n \n저도 한동안 이런 고민을 했어요. 어떻게 하면 독자들이 글을 더 오래 머물며 집중할 수 있을까? 그러다가 웹 콘텐츠의 시각적 구조를 개선하면 체류 시간과 이해도가 크게 증가한다는 사실을 발견했어요. 오늘은 기사를 매력적인 웹페이지로 변환하는 핵심 가이드를 소개하면서, 이를 쉽게 적용할 수 있도록 클로드용 시각화 프로젝트도 무료 공개할 예정이니 끝까지 읽어보세요!\n \n  효과적인 웹 콘텐츠 시각화의 핵심 요소\n1. 시각적 계층 구조를 명확히 하자\n  제목과 부제목이 가장 중요합니다.\n웹페이지를 열었을 때, 가장 먼저 보이는 것이 제목이죠. 제목은 본문 폰트보다 2~3배 크게, 부제목은 1.5배 크기로 설정해 독자가 한눈에 내용을 파악할 수 있도록 해야 해요.\n \n✅ 발행 정보도 중요해요.\n기사의 신뢰도를 높이려면 날짜와 출처 정보를 추가해야 해요. 보통 작은 글씨로 우측 정렬하면 깔끔한 인상을 줄 수 있어요.\n⚡ 섹션 구분을 확실하게!\n문단이 끝없이 이어지면 독자가 쉽게 지칠 수 있어요. 섹션마다 구분선을 넣거나 배경색을 다르게 설정하면 훨씬 깔끔한 레이아웃이 됩니다.\n2. 핵심 정보를 ‘눈에 띄게’ 강조하자\n단순한 텍스트보다 시각적인 요소를 추가하면 독자들이 정보를 쉽게 이해할 수 있어요.\n \n  도표와 다이어그램 활용\n숫자나 개념이 많을 때는 표나 인포그래픽을 추가하세요. 단순한 설명보다 훨씬 직관적이에요.\n \n  시각적 불릿 포인트 사용\n✅ 단순한 리스트보다 아이콘이 들어간 불릿 포인트가 가독성이 좋아요.\n✅ 중요한 내용은   같은 이모지로 강조해도 좋아요.\n✅ 파란색 원형 마커를 사용하면 깔끔하고 전문가 느낌이 납니다.\n  강조 배지 활용\n예를 들어, “50% 증가” 같은 주요 데이터를 보여줄 때, 둥근 배지나 컬러 박스를 사용하면 한눈에 눈에 띄어요.\n3. 보조 정보를 효과적으로 구성하자\n모든 정보가 같은 비중을 가질 필요는 없어요. 핵심 내용과 추가 정보를 분리하면 독자가 쉽게 원하는 정보를 찾을 수 있어요.\n  사이드바 활용하기\n관련 정보나 부가 자료는 메인 콘텐츠와 분리된 사이드바에 배치하는 게 좋아요.\n  설명 상자 사용하기\n전문 용어나 중요한 개념이 나올 때 라이트 블루 박스로 구분하면 읽기 편해요.\n  탭 형태로 정리하기\n긴 설명이 필요한 경우, 탭 형식으로 정보를 정리하면 독자가 원하는 정보만 빠르게 확인할 수 있어요.\n4. 데이터는 차트와 그래프로 변환하자\n숫자가 많으면 가독성이 떨어져요. 그래프와 다이어그램을 활용하면 정보 전달력이 극대화됩니다.\n \n  차트 활용하기\n선 그래프: 트렌드 변화를 보여줄 때\n막대 그래프: 비교 데이터를 정리할 때\n원형 차트: 비율을 설명할 때\n  프로세스 다이어그램 활용하기\n단계별 과정이나 절차를 설명할 때 순서도를 활용하면 직관적이에요.\n \n \n  웹페이지 구조의 모범 사례\n잘 만들어진 웹페이지는 일정한 구조를 가지고 있어요.\n  최상단 섹션\n✅ 제목 (본문 폰트의 2~3배 크기)\n✅ 설명적인 부제목 (1.5배 크기)\n✅ 날짜 및 출처 정보 (작은 글씨, 우측 정렬)\n  주요 섹션 구조\n✅ 명확한 섹션 제목 (관련 아이콘 포함)\n✅ 주요 내용을 요약한 박스 (라이트 블루 배경)\n✅ 시각적 구분선 삽입\n  핵심 시각 요소\n✅ 개념이나 프로세스를 보여주는 다이어그램\n✅ 주요 수치를 강조하는 배지 요소\n✅ 시각적 불릿 포인트 (파란색 원형 마커)\n  보조 정보 영역\n✅ 사이드바에 관련 정보 배치\n✅ 탭 형태로 추가 정보 구성\n  하단부 구성\n✅ 요약 정보 또는 결론\n✅ 추가 자료 링크 제공\n✅ 저작권 정보 표시\n \n 시각화 작성예시\n1. 가로형\n\n\n2 세로형\n\n\n \n \n  클로드용 시각화 프로젝트 무료 공개!\n이 모든 걸 직접 구현하려면 시간이 많이 걸리겠죠? 그래서 여러분을 위해 시각화 프로젝트를 무료로 공개합니다!\n  이 프로젝트로 할 수 있는 것:\n자동으로 가독성 높은 웹 콘텐츠 변환\n시각적 요소 (도표, 배지, 아이콘) 쉽게 추가\n반응형 디자인 적용으로 모바일 최적화\n  무료 다운로드 링크: \n지금 바로 적용해 보세요! 웹 콘텐츠의 가독성을 높이는 것이 곧 독자와의 소통을 강화하는 길입니다.\nhttps://www.threads.net/@gpt_patk/post/DHSGxlOSOmu?xmt=AQGzpWXDn8ymKaGTj8Z7rSyaW0ICjfaFLp6l6RaNLpHBNg\n \n \n 프로젝트 생성방법\n1. 클로드 첫 페이지에서 프로젝트 - 프로젝트 생성 클릭 ▼\n\n\n \n2. 프로젝트 제목과 목표 입력 ▼\n\n\n \n3. 프로젝트 지침 설정에서 다운로드한 텍스트 파일의 지침복사. ▼\n\n\n \n4. 파일첨부에서 다운로드한 템플릿 HTML 파일 등록하면 프로젝트 생성 완료▼ \n\n\n \n5. 사용법 : 해당 프로젝트 채팅창에 \"가로형,세로형  선택 /  작성자 / 시각화할 자료 입력\" 하면 시각화 진행\n\n\n\n  Q&A\nQ1. 시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?\nA. 고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있어요.\nQ2. 모바일에서도 동일한 효과를 얻을 수 있나요?\nA. 반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있어요.\nQ3. 무료 시각화 프로젝트는 누구나 사용할 수 있나요?\nA. 네! 누구나 무료로 다운로드해서 사용할 수 있습니다.\nQ4. 어떤 웹사이트에 적용하기 좋은가요?\nA. 블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합해요.\nQ5. 시각적 요소가 너무 많으면 산만해지지 않을까요?\nA. 적절한 균형이 중요해요. 핵심 정보만 강조하고 불필요한 요소는 줄이는 게 좋아요.\n```markdown\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"모바일에서도 동일한 효과를 얻을 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 시각화 프로젝트는 누구나 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 누구나 무료로 다운로드해서 사용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"어떤 웹사이트에 적용하기 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소가 너무 많으면 산만해지지 않을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"적절한 균형이 중요합니다. 핵심 정보만 강조하고 불필요한 요소는 줄이는 것이 좋습니다.\"\n      }\n    }\n  ]\n}\n\n```",
    "reviews": [],
    "syllabus": [],
    "link": "http://muzbox.tistory.com/483554",
    "pubDate": "Mon, 17 Mar 2025 11:01:17 +0900",
    "creator": "어떤오후의 프리웨어 이야기",
    "categories": [
      "AI, 미래기술/AI 콘텐츠 제작 및 글쓰기",
      "ux 개선",
      "가독성 향상",
      "데이터 시각화",
      "무료 시각화 프로젝트",
      "반응형 디자인",
      "시각적 콘텐츠",
      "웹 접근성",
      "웹 콘텐츠 시각화",
      "웹페이지 디자인",
      "콘텐츠 최적화"
    ]
  },
  {
    "id": 5,
    "imageUrl": "",
    "title": "数据科学中的数据清理",
    "description": "在本数据科学博文系列中，我们探讨了从哪里获取数据以及如何使用 pandas 探索数据，不过虽然这些数据对于学习非常有用，但它与我们所说的真实世界数据并不相似。 用于学习的数据通常已经过清理和整理，方便您快速学习而不必考虑数据清理，但真实世界数据存在问题并且很混乱。 真实世界数据需要清理才能提供有用的洞察，这就是本文的主题。  数据问题可能来自数据本身的行为、数据收集方式，甚至是数据输入方式。 流程的每个阶段都可能发生错误和疏忽。  我们在这里专门讨论数据清理而不是数据转换。 数据清理可以确保您从数据中得出的结论可以泛化到您定义的总体。 数据转换则涉及转换数据格式、对数据进行归一化和聚合数据等任务。  数据清理为什么重要？ 关于数据集，我们首先需要了解的是它们代表什么。 大多数数据集都是代表更广泛总体的样本，通过处理此样本，您能够将发现外推（或泛化）到该总体。 例如，我们在前两篇博文中使用了一个数据集。 这个数据集广泛涉及房屋销售，但只覆盖一小块地理区域、一小段时间，并且可能不是该区域和时间段内的所有房屋；它是一个更大总体的样本。  您的数据需要是更广泛总体的代表性样本，例如该地区在一段规定时间内的所有房屋销售情况。 为了确保我们的数据是更广泛总体的代表性样本，我们必须首先定义总体的边界。  您可能会想到，除了人口普查数据以外，使用整个总体往往不切实际，因此您需要确定您的边界。 这些边界可能是地理的、人口统计的、基于时间的、基于行动的（例如事务性）或特定于行业的。 您可以通过多种方式定义总体，但要可靠地泛化数据，必须在清理数据之前进行定义。 总体而言，如果您计划将数据用于任何类型的分析或机器学习，您都需要花时间清理数据，确保您可以依赖您的洞察并将其泛化到真实世界。 清理数据可以获得更准确的分析，并且在机器学习方面也可以提高性能。 如果不清理数据，您会面临许多风险，例如无法将研究结果可靠地泛化到更广泛的总体、不准确的汇总统计信息和不正确的可视化效果。 如果您使用数据训练机器学习模型，这也可能导致错误和不准确的预测。 免费试用 PyCharm Professional 数据清理示例 我们将介绍可用于清理数据的五项任务。 这份列表并不完整，但对于处理真实世界数据是一个很好的起点。 对数据去重 重复问题会扭曲您的数据。 假设，您正在绘制一个使用销售价格频率的直方图。 如果有相同值的重复项，最终会得到一个基于重复价格的不准确模式的直方图。  另外，当我们谈论数据集中的重复问题时，我们谈论的是整行的重复，每一行都是一个单独的观察值。 列中将有重复值，如我们所预料。 我们只谈论重复观察值。  好在我们可以使用一种 pandas 方法帮助我们检测数据中是否存在重复项。 如果需要提醒，我们可以使用 JetBrains AI 聊天编写提示，例如： Code to identify duplicate rows 得到代码： duplicate_rows = df[df.duplicated()] duplicate_rows 此代码假定您的 […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/pycharm/2025/03/data-cleaning-in-data-science",
    "pubDate": "Tue, 18 Mar 2025 10:00:12 +0000",
    "creator": "Sue",
    "categories": [
      "data-science"
    ]
  },
  {
    "id": 6,
    "imageUrl": "",
    "title": "Kling AI 로 뽑은 영상 02",
    "description": "이전글 : https://serverdown.tistory.com/1213\n지난번에 반대로 회전했었고\n화전 반향을 지정해봐야 안먹힌다는 사실을 알았습니다.\n그래서 천천히 움직이라고 추가했고 \n영상이 짧으니 천천히 움직이면 당연히 조금밖에 못움직입니다.\n \n프롬프트\nMove your head slowly.\nBlink your eyes.\nMove your mouth gently.\n천천히 고개를 움직이고\n눈을 깝박이고\n입을 부드럽게 움직여라\n이렇게 적은것입니다.\n결과물\n \n\n\n\n눈을 깜박임이 과하군요 횟수 까지 지정해줘야겠군요",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1218",
    "pubDate": "Fri, 21 Mar 2025 01:41:26 +0900",
    "creator": "이건개발",
    "categories": [
      "유튜브"
    ]
  },
  {
    "id": 7,
    "imageUrl": "",
    "title": "Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50%",
    "description": "Slow build times are a major headache for developers, especially in large, complex C++ codebases like game engines. Every minute spent waiting on a build is time that could be used to refine features, resolve issues, or push development forward. Activision faced this challenge with Call of Duty: Modern Warfare II, where prolonged build times […]\nThe post Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50% appeared first on C++ Team Blog.",
    "reviews": [],
    "syllabus": [],
    "link": "https://devblogs.microsoft.com/cppblog/optimizing-build-times-with-build-insights-how-activision-cut-call-of-dutys-build-time-by-50/",
    "pubDate": "Tue, 18 Mar 2025 13:51:17 +0000",
    "creator": "Moyo Okeremi",
    "categories": [
      "Build Insights",
      "Build Optimization",
      "C++",
      "Game Development",
      "Activision"
    ]
  },
  {
    "id": 8,
    "imageUrl": "",
    "title": "티스토리 유료화된다면? 블로거들이 꼭 알아야 할 변화와 대응법 - 티스토리의 미래 3부작 (2부)",
    "description": "티스토리가 유료화된다면, 블로거들에게 어떤 변화가 있을까요?\n무료 플랜과 유료 플랜이 도입될 가능성을 분석하고, 블로거들이 어떻게 대비해야 할지 실질적인 전략을 제공합니다.\n\n\n \n\"티스토리가 유료화되면, 블로그 운영을 계속할 수 있을까?\"\n \n최근 카카오가 다음을 분사를 결정하면서, 티스토리의 미래도 불투명해지고 있습니다.\n네이버 블로그, 브런치 등 경쟁 플랫폼과 차별성을 유지하려면,\n티스토리도 워드프레스처럼 유료 모델로 전환할 가능성이 있다는 전망이 나오고 있습니다.\n \n✅ 무료 & 유료 모델이 도입될까?\n✅ 어떤 방식으로 유료화될 가능성이 있을까?\n✅ 블로거들은 어떻게 대비해야 할까?\n \n티스토리가 유료화될 경우 예상되는 변화와 대응 전략을 분석해 보겠습니다.\n \n \n  티스토리, 왜 유료화 가능성이 거론될까?\n지금까지 티스토리는 무료 블로그 플랫폼으로 운영되어 왔습니다.\n그런데 카카오가 티스토리를 계속 운영할 경우, 수익 모델 강화를 위해 유료화할 가능성이 높아지고 있습니다.\n1️⃣ 카카오는 티스토리를 수익화해야 한다\n네이버 블로그는 네이버 검색과 통합되어 광고 수익을 창출\n워드프레스는 독립 블로그 운영 + 유료 플랜 도입으로 수익 모델 구축\n반면 티스토리는 광고 플랫폼으로서 경쟁력이 약해지고 있음\n  검색 트래픽이 줄어드는 상황에서, 티스토리는 새로운 수익 구조를 찾아야 합니다.\n2️⃣ 카카오는 콘텐츠 사업을 강화하고 있다\n카카오 브런치는 작가 중심의 프리미엄 콘텐츠 플랫폼\n카카오뷰는 큐레이션 서비스로 광고 수익을 창출\n티스토리도 단순 블로그가 아니라, 콘텐츠 수익 모델을 도입할 가능성 높음\n  즉, 티스토리는 기존 블로그 방식을 유지하기보다는, 새로운 방식의 유료 서비스로 전환될 수 있습니다.\n \n  티스토리가 유료화된다면, 어떤 방식이 될까?\n티스토리가 유료 모델을 도입한다면, 3가지 시나리오가 예상됩니다.\n  1) 무료 & 유료 플랜 병행 모델 (가장 가능성 높음)\n✅ 무료 플랜:\n기존 티스토리 블로그 운영 가능\n광고 포함 (애드센스 사용 제한 가능성)\n기능 일부 제한 (예: SEO 설정, 고급 테마 사용 불가)\n✅ 유료 플랜:\n광고 제거 옵션 제공\nSEO 최적화 기능 제공 (검색 노출 강화 기능 추가)\n고급 테마 지원 및 블로그 디자인 커스터마이징 가능\n개별 도메인 연결 가능\n  가능성이 높은 이유:\n  네이버 블로그는 애드센스 적용이 불가능하지만, 티스토리는 수익형 블로그 모델을 유지해야 함\n  카카오 입장에서 무료 사용자를 유지하면서, 고급 기능을 원하는 블로거들에게 유료 플랜을 제공하는 것이 현실적\n \n  2) 완전 유료화 (독립 블로그 플랫폼 전환)\n✅ 독립 블로그 운영 (호스팅 기반 모델)\n블로그를 직접 운영할 수 있도록, 월별 요금제 기반으로 제공\n워드프레스처럼 호스팅 방식으로 전환\n사용자들이 직접 블로그를 관리하고, 자체 서버 및 트래픽 비용을 부담\n❌ 위험 요소:\n블로거들의 이탈 가능성이 커짐\n유지 비용이 증가하면서, 초보 블로거들이 접근하기 어려워짐\n현재 카카오의 방향성과 일치하지 않을 가능성이 있음\n  가능성이 낮은 이유:\n  완전 유료화할 경우, 기존 블로거들의 대량 이탈이 발생할 수 있음\n  카카오는 플랫폼 기반 광고 수익을 원하기 때문에, 무료 사용자도 필요함\n \n  3) 프리미엄 콘텐츠 모델 (브런치 스타일 도입)\n✅ 블로그 기반 유료 콘텐츠 판매 기능 추가\n일부 글을 유료로 제공 (구독 모델 도입 가능성)\n크리에이터 지원 프로그램과 연계\n카카오페이와 연계하여 후원 및 구독 결제 기능 도입 가능\n❌ 위험 요소:\n기존 무료 블로그와의 차별성이 약해질 수 있음\n네이버 블로그 및 워드프레스와의 차별화 전략이 필요함\n  가능성이 있는 이유:\n  브런치와 유사한 방식으로, 티스토리를 프리미엄 블로그로 변화시키려 할 수도 있음\n \n \n  블로거들은 어떻게 대비해야 할까?\n✅ 1️⃣ 유료화 대비, 블로그 수익 모델 점검하기\n애드센스를 사용 중이라면, 무료 플랜에서 계속 허용될지 확인 필요\nSEO 기능이 제한될 가능성이 있으므로, 구글 검색 최적화를 미리 강화\n✅ 2️⃣ 티스토리 백업 및 마이그레이션 준비\n만약 유료화가 부담된다면, 워드프레스(독립 블로그), 네이버 블로그 등 대체 플랫폼 검토 필요\n블로그 데이터를 주기적으로 백업하여, 필요할 경우 다른 플랫폼으로 이전할 준비\n✅ 3️⃣ 대체 플랫폼 비교 분석\n플랫폼\n특징\n장점\n단점\n\n\n\n\n네이버 블로그\n네이버 검색 최적화\n트래픽 확보 쉬움\n애드센스 불가\n\n\n브런치 (카카오)\n프리미엄 콘텐츠\n브랜드 구축 가능\n광고 수익 불가\n\n\n워드프레스\n독립 운영 가능\n애드센스·광고 가능\n유지 비용 발생\n\n\n\n  티스토리를 계속 유지할지, 대체 플랫폼으로 이동할지는 유료화 방식에 따라 결정해야 합니다.\n \n  마무리: 티스토리, 유료화될까? 블로거들은 어떻게 준비해야 할까?\n✅ 티스토리는 네이버 블로그, 워드프레스와 차별화하기 위해 유료 모델을 도입할 가능성이 있다.\n✅ 가장 현실적인 시나리오는 ‘무료 & 유료 플랜 병행 모델’로, 광고 제거 및 SEO 강화 옵션을 제공하는 방식이 될 가능성이 크다.\n✅ 블로거들은 지금부터 블로그 데이터를 백업하고, SEO 최적화를 강화하면서 유료화에 대비해야 한다.\n  티스토리가 유료화될 경우, 블로거들이 생존할 방법을 미리 준비해야 합니다!\n \n \n\n \n다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\n한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\nmuzbox.tistory.com\n\n \n\n \n카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)\n카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생\nmuzbox.tistory.com\n\n \n❓ Q&A\nQ1. 티스토리가 유료화될 가능성이 있나요?\nA. 카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\nQ2. 유료화된다면 어떤 방식으로 진행될까요?\nA. 무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.\nQ3. 티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?\nA. 검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\nQ4. 티스토리가 완전 유료화될 가능성도 있나요?\nA. 완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.\nQ5. 유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?\nA. 대체 플랫폼으로는 네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능) 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화된다면 어떤 방식으로 진행될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 완전 유료화될 가능성도 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"대체 플랫폼으로는 네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능) 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.\"\n      }\n    }\n  ]\n}",
    "reviews": [],
    "syllabus": [],
    "link": "http://muzbox.tistory.com/483558",
    "pubDate": "Fri, 21 Mar 2025 08:34:34 +0900",
    "creator": "어떤오후의 프리웨어 이야기",
    "categories": [
      "NEWS/IT 뉴스",
      "블로그 마이그레이션",
      "블로그 유료 모델",
      "카카오 다음 분사",
      "티스토리 SEO",
      "티스토리 광고 정책",
      "티스토리 대체 플랫폼",
      "티스토리 미래",
      "티스토리 애드센스",
      "티스토리 워드프레스",
      "티스토리 유료화"
    ]
  },
  {
    "id": 9,
    "imageUrl": "",
    "title": "What’s New in TeamCity 2025.03: Recipes, Improved Docker and Podman Integration, UI Updates, and More",
    "description": "TeamCity’s first major release of the year, version 2025.03, is now available. It’s packed with new features, including massive UI updates, a new Run in Docker build feature, and JetBrains-crafted recipes available in our Marketplace. UI updates In line with our commitment to make TeamCity easier and more intuitive to use, this release introduces significant […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/teamcity/2025/03/teamcity-2025-03-release",
    "pubDate": "Thu, 20 Mar 2025 15:31:43 +0000",
    "creator": "Dmitrii Korovin",
    "categories": [
      "release",
      "teamcity"
    ]
  },
  {
    "id": 10,
    "imageUrl": "",
    "title": "어둠도 절망도 가르는 전사들, 나이트 슬래셔즈: 리메이크",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://bbs.ruliweb.com/news/board/11/read/2291",
    "pubDate": "Thu, 20 Mar 2025 22:01:29 +0900",
    "creator": "｜RULIWEB｜",
    "categories": [
      "게임툰"
    ]
  },
  {
    "id": 11,
    "imageUrl": "",
    "title": "원금을 3배 이상 불려주는 내일채움공제 3년형",
    "description": "월 10만 원씩 넣으면 3년 뒤 1,224만 원이 돼요.",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.toss.im/article/money-policies-36",
    "pubDate": "Mon, 17 Mar 2025 00:23:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 12,
    "imageUrl": "",
    "title": "토스, 자동차보험 비교추천 서비스 2.0 오픈",
    "description": "보험사와 동일한 보험료 안내",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.toss.im/article/carinsurance2",
    "pubDate": "Thu, 20 Mar 2025 02:12:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 13,
    "imageUrl": "",
    "title": "Enhance Pull Request Reviews with In-Depth Feedback",
    "description": "Visual Studio 2022 has taken the pull request experience to the next level by making reviews interactive. We previously enabled viewing your pull request comments inline in your working files. Now, the latest update empowers you to add comments directly within the IDE, streamlining the review process. Now, pull request reviewers can conduct deep reviews […]\nThe post Enhance Pull Request Reviews with In-Depth Feedback appeared first on Visual Studio Blog.",
    "reviews": [],
    "syllabus": [],
    "link": "https://devblogs.microsoft.com/visualstudio/enhance-pull-request-reviews-with-in-depth-feedback/",
    "pubDate": "Thu, 20 Mar 2025 15:00:02 +0000",
    "creator": "Jessie Houghton",
    "categories": [
      "Git",
      "Team and Development",
      "Visual Studio",
      "GitHub"
    ]
  },
  {
    "id": 14,
    "imageUrl": "",
    "title": "타입스크립트, 이제 Go로 다시 태어난다: 10배 빨라지는 이유와 커뮤니티 반응까지",
    "description": "마이크로소프트가 최근 TypeScript 컴파일러를 Go 언어로 포팅한다고 발표했습니다. 이 결정은 개발 커뮤니티에 큰 화제가 되었는데, 과연 왜 마이크로소프트는 TypeScript를 Go로 재작성하기로 했을까요? 기존 TypeScript의 한계, Go를 선택한 이유와 Rust가 아닌 Go인 이유, 그리고 앞으로의 로드맵과 커뮤니티의 반응까지 종합적으로 살펴보겠습니다.\n기존 타입스크립트의 한계: 성능과 유지보수 문제\n현재의 타입스크립트 컴파일러(tsc)는 JavaScript(정확히는 TypeScript로 작성된 JS)로 구현되어 Node.js 환경에서 동작합니다. 이는 간편한 배포와 쉬운 확장성이라는 장점이 있었지만, 다음과 같은 근본적인 성능 문제가 있었습니다.\n대규모 프로젝트에서의 느린 빌드 속도\n단일 스레드 동작으로 인해 멀티코어 CPU의 병렬성을 충분히 활용하지 못했습니다.\nNode.js의 가비지 컬렉션과 JIT 컴파일 오버헤드로 인해 최적화에 제약이 있었습니다.\n실제 VS Code 수준(약 150만 라인)의 프로젝트는 전체 빌드에 최대 1분 이상 걸리는 문제가 지속되어 왔습니다.\nGo 언어로의 전환: 10배 빨라지는 TypeScript\n이러한 문제를 근본적으로 해결하기 위해 타입스크립트 팀은 네이티브 언어로의 포팅을 결정했고, 선택된 언어는 Go였습니다. Go로 포팅하면 다음과 같은 이점이 명확히 나타납니다.\n컴파일 성능 대폭 향상 (최대 10배): 초기 테스트에서 VS Code 전체 빌드 시간을 77.8초에서 7.5초로 단축하여 약 10배의 성능 향상을 입증했습니다.\n멀티코어 활용 가능: Go의 멀티스레딩 지원 덕분에 병렬로 파싱, 바인딩, 타입 검사를 실행할 수 있게 되었습니다.\n메모리 효율성 향상: 네이티브 코드의 메모리 효율 개선과 공유 메모리 활용으로 메모리 사용량이 최대 50% 감소했습니다.\n간편한 배포 및 유지보수성 향상: Go는 정적 컴파일을 지원하여 단일 바이너리 형태로 배포할 수 있어 환경 설정 및 CI/CD가 간편해집니다. 또한, 정적 타입 덕분에 컴파일러 자체의 안정성도 높아집니다.\n결과적으로 개발자들이 더욱 빠르고 안정적인 개발 경험을 얻을 수 있게 되며, IDE의 초기 로딩과 코드 편집 응답 속도가 획기적으로 빨라질 것으로 기대됩니다.\n왜 Rust가 아니라 Go인가?\n발표 직후 가장 큰 논쟁거리는 왜 Rust가 아니라 Go를 선택했느냐는 것이었습니다. Rust는 최근 JavaScript 도구 생태계에서 성능을 높이는 새로운 표준처럼 여겨졌기 때문입니다. Rust를 선택하지 않은 이유는 다음과 같습니다.\n구조적 호환성 문제: 기존 TypeScript 컴파일러(tsc)는 JS의 GC와 가변 객체 그래프를 광범위하게 활용합니다. Rust로 옮기려면 공유 가변성(shared mutability) 문제로 인해 수많은 부분을 재설계해야 했고, 이는 호환성을 깨고 버그를 초래할 위험이 컸습니다.\n복잡성 증가: Rust의 엄격한 메모리 관리 규칙을 준수하면서 기존 기능을 그대로 구현하려면 과도하게 unsafe 코드를 사용하는 등 Rust의 장점을 살리지 못하는 결과를 초래할 수 있었습니다.\n개발자 경험의 일관성: 타입스크립트 설계자 Anders Hejlsberg는 \"새로운 패러다임으로 재설계하는 리스크보다는 기존의 동작 방식을 최대한 유지하는 것이 중요했다\"고 밝혔습니다. Go는 JS와 유사한 가비지 컬렉터를 사용하며 메모리 관리와 코드 스타일 측면에서 기존 코드베이스와 호환성이 높았습니다.\n실제 Rust 기반의 SWC 컴파일러 개발자(kdy1) 역시 과거 타입스크립트 컴파일러를 Rust로 포팅하는 시도를 했지만, 구조적 한계 때문에 중단한 사례도 있습니다.\n앞으로의 로드맵과 일정\n마이크로소프트는 이번 프로젝트를 TypeScript 7.0 버전에서 공식적으로 출시할 예정입니다. 구체적인 로드맵은 다음과 같습니다.\n2025년 중반까지 Go로 작성된 TypeScript 컴파일러의 프리뷰 버전 제공 예정\n2025년 말까지 타입 검사 및 언어 서비스까지 기능 완비(feature-complete) 예정\n이후 기존 JS 버전(TypeScript 6.x 버전)은 상당 기간 유지하면서 개발자가 점진적으로 전환하도록 지원\n현재 GitHub에 Go 포팅 버전의 초기 코드가 공개되어 있어, 개발자들이 직접 테스트하고 피드백을 줄 수 있습니다.\n커뮤니티 및 전문가들의 반응: 기대와 우려 사이\n커뮤니티에서는 대체로 긍정적인 평가가 많습니다. 특히 현업 개발자들은 \"10배 빨라진 컴파일 속도\"에 큰 기대를 나타냈습니다. 하지만 Rust가 아니라 Go를 선택한 것에 대한 일부 아쉬움과 우려도 있었습니다. 특히 WebAssembly 번들 크기나 성능 측면에서 Rust보다 불리할 수 있다는 점에 대한 지적도 나왔습니다.\n그럼에도 불구하고, 마이크로소프트가 공개한 포팅 이유와 기술적 설명을 접한 뒤에는 다수의 개발자가 납득하고 긍정적으로 평가했습니다. 무엇보다 \"중요한 건 컴파일러의 성능 향상과 안정성이며, 결과가 좋다면 언어 선택은 부차적이다\"라는 의견이 힘을 얻고 있습니다.\n결론: TypeScript의 새로운 도약을 기대하며\n결론적으로 마이크로소프트의 이번 선택은 TypeScript의 향후 10년을 대비한 전략적인 결정으로 평가됩니다. Go로의 포팅이 성공적으로 이루어진다면, 앞으로 더 많은 프로젝트들이 TypeScript의 강력한 타입 시스템과 함께 더욱 향상된 성능과 생산성을 경험할 수 있을 것입니다. Rust 등 다른 후보 언어를 둘러싼 초기 논쟁도 있었지만, 결과적으로 이번 포팅 결정은 실용적이고 현실적인 선택이라는 평가를 받고 있습니다.\n타입스크립트의 새로운 시대가 열리고 있습니다. 마이크로소프트의 이번 결정이 실제 어떤 성과로 이어질지, 커뮤니티와 함께 기대하며 지켜볼 일입니다.\n출처 및 참고자료\nGitHub 공식 저장소: microsoft/typescript-go\nMicrosoft 공식 블로그: A 10x Faster TypeScript\n \n개발자 커뮤니티 (Hacker News): A 10x Faster TypeScript\n개발자 커뮤니티 (Reddit): A 10x Faster TypeScript : r/typescript\n2ality 기술 블로그: A closer look at the details behind the Go port of the TypeScript compiler\nSimon Willison 기술 블로그: A quote from Ryan Cavanaugh\nYouTube 영상 요약 및 분석 (ChainDesk.ai 요약 페이지): Microsoft goes nuclear on TypeScript codebase…",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.gaerae.com/2025/03/a-10x-faster-typescript-go.html",
    "pubDate": "Mon, 17 Mar 2025 03:06:00 +0000",
    "creator": "noreply@blogger.com (Unknown)",
    "categories": [
      {
        "_": "go",
        "$": {
          "domain": "http://www.blogger.com/atom/ns#"
        }
      },
      {
        "_": "typescript",
        "$": {
          "domain": "http://www.blogger.com/atom/ns#"
        }
      }
    ]
  },
  {
    "id": 15,
    "imageUrl": "",
    "title": "TeamCity Roadmap 2025: Updating the UI, TeamCity Recipes, and Much More",
    "description": "This year, the TeamCity team is working on a number of new initiatives, including updating the UI, TeamCity recipes, Jenkins migration tools, and many others. Read on to learn what our focus is for 2025. Modernizing the TeamCity Enterprise interface In 2025, we’re taking a major step forward in enhancing the TeamCity experience. The modern […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/teamcity/2025/03/teamcity-roadmap-2025",
    "pubDate": "Wed, 19 Mar 2025 14:32:32 +0000",
    "creator": "Olga Bedrina",
    "categories": [
      "roadmap"
    ]
  }
]