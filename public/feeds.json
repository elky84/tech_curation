[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Augustin Popa",
        "title": "What’s New in vcpkg (June 2024)",
        "link": "https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-june-2024/",
        "pubDate": "Thu, 27 Jun 2024 00:35:53 +0000",
        "content:encodedSnippet": "This blog post summarizes changes to the vcpkg package manager as part of the 2024.06.15 release, 2024-06-10 tool release, as well as changes to vcpkg documentation throughout June. This month’s release includes some error message improvements and bug fixes.\nSome stats for this period:\nThere are now 2,441 total ports available in the vcpkg public registry. A port is a versioned recipe for building a package from source, such as a C or C++ library.\n9 new ports were added to the open-source registry.\n442 updates were made to existing ports. As always, we validate each change to a port by building all other ports that depend on or are depended by the library that is being updated for our 13 main triplets.\n26 contributors submitted PRs, issues, or participated in discussions in the main repo.\nThe main vcpkg repo has over 6,100 forks and 22,000 stars on GitHub.\n \nvcpkg changelog (2024.06.15 release)\nThe following meaningful changes were made in this release:\nFixed version export in SPDX module (PR: Microsoft/vcpkg-tool#1400, thanks @xvitaly!).\nAdded missing --keep-going switch to x-set-installed (PR: Microsoft/vcpkg-tool#1407, thanks @Neumann-A!).\nFixed misleading/incorrect error message triggering on an AWS S3 binary cache miss (PR: Microsoft/vcpkg-tool#1404, thanks @petamas!).\nAll post-build checks now have skip policies. Also made some error messages more consistent in format, improved their output, and removed some duplicate messages (PR: Microsoft/vcpkg-tool#1405).\n \nDocumentation changes\nMade references to the vcpkg curated registry more consistent throughout the docs. The curated registry is the main registry that ships with vcpkg and consists of 2400+ open-source ports (PR: Microsoft/vcpkg-docs#333).\nAdded clarification about why ports in the curated registry need to work simultaneously in the Maintainer guide (PR: Microsoft/vcpkg-docs#332).\nAdded mentions of IDEs/editors that officially support vcpkg in the Build system integration article (thanks @UnixY2K for providing the initial PR Microsoft/vcpkg-docs#325 for this effort!).\nAdded some recommended packages for pacman-based Linux distros (Article: Supported hosts; PR: Microsoft/vcpkg-docs#326, thanks @UnixY2K!).\nAdded some clarifications for binary caching ABI hashing (Article: Binary caching reference; PR: Microsoft/vcpkg-docs#330, thanks @Thomas1664!)\nRemoved some duplicate deprecation notices about CONTROL files in certain articles.\nFixed some typos (thanks @Thomas1664, @c8ef, and @pzychotic!).\nIf you have any suggestions for our documentation, please submit an issue in our GitHub repo or see the box at the bottom of a particular article.\n\n \nTotal ports available for tested triplets\ntriplet\nports available\n\n\nx64-windows\n2,306\n\n\nx86-windows\n2,215\n\n\nx64-windows-static\n2,190\n\n\nx64-windows-static-md\n2,223\n\n\narm64-windows\n1,873\n\n\nx64-uwp\n1,274\n\n\narm64-uwp\n1,240\n\n\nx64-linux\n2,273\n\n\nx64-osx\n2,155\n\n\narm64-osx\n2,074\n\n\narm-neon-android\n1,578\n\n\nx64-android\n1,651\n\n\narm64-android\n1,625\n\n\n\nWhile vcpkg supports a much larger variety of target platforms and architectures (as community triplets), the list above is validated exhaustively to ensure updated ports don’t break other ports in the catalog.\n \nThank you to our contributors\nvcpkg couldn’t be where it is today without contributions from our open-source community. Thank you for your continued support! The following people contributed to the vcpkg, vcpkg-tool, or vcpkg-docs repos in this release:\ndg0yt (35 commits)\nNeumann-A (8 commits)\nRT2Code (5 commits)\nAenBleidd (4 commits)\nThomas1664 (4 commits)\nxiaozhuai (3 commits)\nMehdiChinoune (2 commits)\nUnixY2K (2 commits)\nkafeg (1 commit)\nomarhogni (1 commit)\nalagoutte (1 commit)\nmiyanyan (1 commit)\ndanielaparker (1 commit)\nan-tao (1 commit)\nyurybura (1 commit)\ntalregev (1 commit)\nOsyotr (1 commit)\ntraversaro (1 commit)\nchausner (1 commit)\nc8ef (1 commit)\npzychotic (1 commit)\nxvitaly (1 commit)\nautoantwort (1 commit)\n \nLearn more\nYou can find the full 2024.06.15 release notes on GitHub for the main repo. Recent updates to the vcpkg tool can be viewed on the vcpkg-tool Releases page. To contribute to vcpkg documentation, visit the vcpkg-docs repo. If you’re new to vcpkg or curious about how a package manager can make your life easier as a C/C++ developer, check out the vcpkg website – vcpkg.io.\nIf you would like to contribute to vcpkg and its library catalog, or want to give us feedback on anything, check out our GitHub repo. Please report bugs or request updates to ports in our issue tracker or join more general discussion in our discussion forum.\n \nThe post What’s New in vcpkg (June 2024) appeared first on C++ Team Blog.",
        "dc:creator": "Augustin Popa",
        "comments": "https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-june-2024/#respond",
        "content": "<p>This blog post summarizes changes to the vcpkg package manager as part of the 2024.06.15 release, 2024-06-10 tool release, as well as changes to vcpkg documentation throughout June. This month’s release includes some error message improvements and bug fixes.<br />\nSome stats for this period:</p>\n<p>There are now 2,441 total ports available in the vcpkg public registry.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-june-2024/\">What&#8217;s New in vcpkg (June 2024)</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "This blog post summarizes changes to the vcpkg package manager as part of the 2024.06.15 release, 2024-06-10 tool release, as well as changes to vcpkg documentation throughout June. This month’s release includes some error message improvements and bug fixes.\nThere are now 2,441 total ports available in the vcpkg public registry.\nThe post What’s New in vcpkg (June 2024) appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=34374",
        "categories": [
          "Vcpkg",
          "vcpkg"
        ],
        "isoDate": "2024-06-27T00:35:53.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "The key to a happy Rust/C++ relationship",
        "link": "https://engineering.fb.com/2024/06/25/developer-tools/the-key-to-a-happy-rust-c-relationship/",
        "pubDate": "Tue, 25 Jun 2024 16:00:26 +0000",
        "content:encodedSnippet": "The history of Rust at Meta goes all the way back to 2016, when we first started using it for source control. Today, it has been widely embraced at Meta and is one of our primary supported server-side languages (along with C++, Python, and Hack).\nBut that doesn’t mean there weren’t any growing pains.\nAida G., a member of one of Meta’s first Rust teams, joins Pascal Hartig (@passy) on the latest Meta Tech Podcast to dive into the challenges of getting Rust to interact with Meta’s large amount of existing C++ code.\nFortunately, the release of cxx, safe interop between C++, and even async Rust have made things a lot easier.\nDownload or listen to the episode below:\n\nYou can also find the episode wherever you get your podcasts, including:\nApple Podcasts\nSpotify\nPocketCasts\nOvercast\nThe Meta Tech Podcast is a podcast, brought to you by Meta, where we highlight the work Meta’s engineers are doing at every level – from low-level frameworks to end-user features.\nSend us feedback on Instagram, Threads, or X.\nAnd if you’re interested in learning more about career opportunities at Meta visit the Meta Careers page.\nThe post The key to a happy Rust/C++ relationship appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>The history of Rust at Meta goes all the way back to 2016, when we first started using it for source control. Today, it has been widely embraced at Meta and is one of our primary supported server-side languages (along with C++, Python, and Hack). But that doesn’t mean there weren’t any growing pains. Aida [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/06/25/developer-tools/the-key-to-a-happy-rust-c-relationship/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/06/25/developer-tools/the-key-to-a-happy-rust-c-relationship/\">The key to a happy Rust/C++ relationship</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "The history of Rust at Meta goes all the way back to 2016, when we first started using it for source control. Today, it has been widely embraced at Meta and is one of our primary supported server-side languages (along with C++, Python, and Hack). But that doesn’t mean there weren’t any growing pains. Aida [...]\nRead More...\nThe post The key to a happy Rust/C++ relationship appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21409",
        "categories": [
          "DevInfra",
          "Open Source",
          "Meta Tech Podcast"
        ],
        "isoDate": "2024-06-25T16:00:26.000Z"
      },
      {
        "creator": "",
        "title": "Leveraging AI for efficient incident response",
        "link": "https://engineering.fb.com/2024/06/24/data-infrastructure/leveraging-ai-for-efficient-incident-response/",
        "pubDate": "Mon, 24 Jun 2024 16:00:57 +0000",
        "content:encodedSnippet": "We’re sharing how we streamline system reliability investigations using a new AI-assisted root cause analysis system.\nThe system uses a combination of heuristic-based retrieval and large language model-based ranking to speed up root cause identification during investigations.\nOur testing has shown this new system achieves 42% accuracy in identifying root causes for investigations at their creation time related to our web monorepo.\nInvestigation is a critical part of ensuring system reliability, and a prerequisite to mitigating issues quickly. This is why Meta is investing in advancing our suite of investigation tooling with tools like Hawkeye, which we use internally for debugging end-to-end machine learning workflows.\nNow, we’re leveraging AI to advance our investigation tools even further. We’ve streamlined our investigations through a combination of heuristic-based retrieval and large language model (LLM)-based ranking to provide AI-assisted root cause analysis. During backtesting, this system has achieved promising results: 42% accuracy in identifying root causes for investigations at their creation time related to our web monorepo.\n\nInvestigations at Meta\nEvery investigation is unique. But identifying the root cause of an issue is necessary to mitigate it properly.  Investigating issues in systems dependent on monolithic repositories can present scalability challenges due to the accumulating number of changes involved across many teams. In addition, responders need to build context on the investigation to start working on it, e.g., what is broken, which systems are involved, and who might be impacted. \nThese challenges can make investigating anomalies a complex and time consuming process. AI offers an opportunity to streamline the process, reducing the time needed and helping responders make better decisions. We focused on building a system capable of identifying potential code changes that might be the root cause for a given investigation.\nFigure 1: A responder’s view of an investigation journey.\nOur approach to root cause isolation\nThe system incorporates a novel heuristics-based retriever that is capable of reducing the search space from thousands of changes to a few hundred without significant reduction in accuracy using, for example., code and directory ownership or exploring the runtime code graph of impacted systems. Once we have reduced the search space to a few hundred changes relevant to the ongoing investigation, we rely on a LLM-based ranker system to identify the root cause across these changes.\nFigure 2: The system flow for our AI-assisted root cause analysis system.\nThe ranker system uses a Llama model to further reduce the search space from hundreds of potential code changes to a list of the top five. We explored different ranking algorithms and prompting scenarios and found that ranking through election was most effective to accommodate context window limitations and enable the model to reason across different changes. To rank the changes, we structure prompts to contain a maximum of 20 changes at a time, asking the LLM to identify the top five changes. The output across the LLM requests are aggregated and the process is repeated until we have only five candidates left. Based on exhaustive backtesting, with historical investigations and the information available at their start, 42% of these investigations had the root cause in the top five suggested code changes.\nFigure 3: Ranking possible code changes through election.\nTraining\nThe biggest lever to achieving 42% accuracy was fine-tuning a Llama 2 (7B) model using historical investigations for which we knew the underlying root cause. We started by running continued pre-training (CPT) using limited and approved internal wikis, Q&As, and code to expose the model to Meta artifacts. Later, we ran a supervised fine-tuning (SFT) phase where we mixed Llama 2’s original SFT data with more internal context and a dedicated investigation root cause analysis (RCA) SFT dataset to teach the model to follow RCA instructions.\nFigure 4: The Llama 2 (7B) root cause analysis training process.\nOur RCA SFT dataset consists of ~5,000 instruction-tuning examples with details of 2-20 changes from our retriever, including the known root cause, and information known about the investigation at its start, e.g., its title and observed impact. Naturally, the available information density is low at this point, however this allows us to perform better in similar real-world scenarios when we have limited information at the beginning of the investigation. \nUsing the same fine-tuning data format for each possible culprit then allows us to gather the model’s llog probabilities(logprobs) and rank our search space based on relevancy to a given investigation. We then curated a set of similar fine-tuning examples where we expect the model to yield a list of potential code changes likely responsible for the issue ordered by their logprobs-ranked relevance, with the expected root cause at the start. Appending this new dataset to the original RCA SFT dataset and re-running SFT gives the model the ability to respond appropriately to prompts asking for ranked lists of changes relevant to the investigation.\nFigure 5: The process for generating fine-tuning prompts to enable the LLM to produce ranked lists.\nThe future of AI-assisted Investigations\nThe application of AI in this context presents both opportunities and risks. For instance, it can reduce effort and time needed to root cause an investigation significantly, but it can potentially suggest wrong root causes and mislead engineers. To mitigate this, we ensure that all employee-facing features prioritize closed feedback loops and explainability of results. This strategy ensures that responders can independently reproduce the results generated by our systems to validate their results. We also rely on confidence measurement methodologies to detect low confidence answers and avoid recommending them to the users – sacrificing reach in favor of precision.\nBy integrating AI-based systems into our internal tools we’ve successfully leveraged them for tasks like onboarding engineers to investigations and root cause isolation. Looking ahead, we envision expanding the capabilities of these systems to autonomously execute full workflows and validate their results. Additionally, we anticipate that we can further streamline the development process by utilizing AI to detect potential incidents prior to code push, thereby proactively mitigating risks before they arise.\nAcknowledgements\nWe wish to thank contributors to this effort across many teams throughout Meta, particularly Alexandra Antiochou, Beliz Gokkaya, Julian Smida, Keito Uchiyama, Shubham Somani; and our leadership: Alexey Subach, Ahmad Mamdouh Abdou, Shahin Sefati, Shah Rahman, Sharon Zeng, and Zach Rait. \nThe post Leveraging AI for efficient incident response appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>We’re sharing how we streamline system reliability investigations using a new AI-assisted root cause analysis system. The system uses a combination of heuristic-based retrieval and large language model-based ranking to speed up root cause identification during investigations. Our testing has shown this new system achieves 42% accuracy in identifying root causes for investigations at their [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/06/24/data-infrastructure/leveraging-ai-for-efficient-incident-response/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/06/24/data-infrastructure/leveraging-ai-for-efficient-incident-response/\">Leveraging AI for efficient incident response</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "We’re sharing how we streamline system reliability investigations using a new AI-assisted root cause analysis system. The system uses a combination of heuristic-based retrieval and large language model-based ranking to speed up root cause identification during investigations. Our testing has shown this new system achieves 42% accuracy in identifying root causes for investigations at their [...]\nRead More...\nThe post Leveraging AI for efficient incident response appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21393",
        "categories": [
          "Data Infrastructure",
          "DevInfra",
          "ML Applications"
        ],
        "isoDate": "2024-06-24T16:00:57.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": [
      {
        "creator": "Netflix Technology Blog",
        "title": "Enhancing Netflix Reliability with Service-Level Prioritized Load Shedding",
        "link": "https://netflixtechblog.com/enhancing-netflix-reliability-with-service-level-prioritized-load-shedding-e735e6ce8f7d?source=rss----2615bd06b42e---4",
        "pubDate": "Tue, 25 Jun 2024 22:58:09 GMT",
        "content:encodedSnippet": "Applying Quality of Service techniques at the application level\nAnirudh Mendiratta, Kevin Wang, Joey Lynch, Javier Fernandez-Ivern, Benjamin Fedorka\nIntroduction\nIn November 2020, we introduced the concept of prioritized load shedding at the API gateway level in our blog post, Keeping Netflix Reliable Using Prioritized Load Shedding. Today, we’re excited to dive deeper into how we’ve extended this strategy to the individual service level, focusing on the video streaming control plane and data plane, to further enhance user experience and system resilience.\nThe Evolution of Load Shedding at Netflix\nAt Netflix, ensuring a seamless viewing experience for millions of users simultaneously is paramount. Our initial approach for prioritized load shedding was implemented at the Zuul API gateway layer. This system effectively manages different types of network traffic, ensuring that critical playback requests receive priority over less critical telemetry traffic.\nBuilding on this foundation, we recognized the need to apply a similar prioritization logic deeper within our architecture, specifically at the service layer where different types of requests within the same service could be prioritized differently. The advantages of applying these techniques at the service level in addition to our edge API gateway are:\n\nService teams can own their prioritization logic and can apply finer grained prioritization.\nThis can be used for backend to backend communication, i.e. for services not sitting behind our edge API gateway.\nServices can use cloud capacity more efficiently by combining different request types into one cluster and shedding low priority requests when necessary instead of maintaining separate clusters for failure isolation.\n\nIntroducing Service-Level Prioritized Load Shedding\nPlayAPI is a critical backend service on the video streaming control plane, responsible for handling device initiated manifest and license requests necessary to start playback. We categorize these requests into two types based on their criticality:\n\nUser-Initiated Requests (critical): These requests are made when a user hits play and directly impact the user’s ability to start watching a show or a movie.\nPre-fetch Requests (non-critical): These requests are made optimistically when a user browses content without the user hitting play, to reduce latency should the user decide to watch a particular title. A failure in only pre-fetch requests does not result in a playback failure, but slightly increases the latency between pressing play and video appearing on screen.\nNetflix on Chrome making pre-fetch requests to PlayAPI while the user is browsing content\nThe Problem\nIn order to handle large traffic spikes, high backend latency, or an under-scaled backend service, PlayAPI previously used a concurrency limiter to throttle requests that would reduce the availability of both user-initiated and prefetch requests equally. This was not ideal because:\n\nSpikes in pre-fetch traffic reduced availability for user-initiated requests\nIncreased backend latency reduced availability for user-initiated requests and pre-fetch requests equally, when the system had enough capacity to serve all user-initiated requests.\n\nSharding the critical and non-critical requests into separate clusters was an option, which addressed problem 1 and added failure isolation between the two types of requests, however it came with a higher compute cost. Another disadvantage of sharding is that it adds some operational overhead — engineers need to make sure CI/CD, auto-scaling, metrics, and alerts are enabled for the new cluster.\nOption 1 — No isolationOption 2 — Isolation but higher compute cost\nOur Solution\nWe implemented a concurrency limiter within PlayAPI that prioritizes user-initiated requests over prefetch requests without physically sharding the two request handlers. This mechanism uses the partitioning functionality of the open source Netflix/concurrency-limits Java library. We create two partitions in our limiter:\n\nUser-Initiated Partition: Guaranteed 100% throughput.\nPre-fetch Partition: Utilizes only excess capacity.\nOption 3 — Single cluster with prioritized load-shedding offers application-level isolation with lower compute cost. Each instance serves both types of requests and has a partition whose size adjusts dynamically to ensure that pre-fetch requests only get excess capacity. This allows user-initiated requests to “steal” pre-fetch capacity when necessary.\nThe partitioned limiter is configured as a pre-processing Servlet Filter that uses HTTP headers sent by devices to determine a request’s criticality, thus avoiding the need to read and parse the request body for rejected requests. This ensures that the limiter is not itself a bottleneck and can effectively reject requests while using minimal CPU. As an example, the filter can be initialized as\nFilter filter = new ConcurrencyLimitServletFilter(\n        new ServletLimiterBuilder()\n                .named(\"playapi\")\n                .partitionByHeader(\"X-Netflix.Request-Name\")\n                .partition(\"user-initiated\", 1.0)\n                .partition(\"pre-fetch\", 0.0)\n                .build());\nNote that in steady state, there is no throttling and the prioritization has no effect on the handling of pre-fetch requests. The prioritization mechanism only kicks in when a server is at the concurrency limit and needs to reject requests.\nTesting\nIn order to validate that our load-shedding worked as intended, we used Failure Injection Testing to inject 2 second latency in pre-fetch calls, where the typical p99 latency for these calls is < 200 ms. The failure was injected on one baseline instance with regular load shedding and one canary instance with prioritized load shedding. Some internal services that PlayAPI calls use separate clusters for user-initiated and pre-fetch requests and run pre-fetch clusters hotter. This test case simulates a scenario where a pre-fetch cluster for a downstream service is experiencing high latency.\nBaseline — Without prioritized load-shedding. Both pre-fetch and user-initiated see an equal drop in availabilityCanary — With prioritized load-shedding. Only pre-fetch availability drops while user-initiated availability stays at 100%\nWithout prioritized load-shedding, both user-initiated and prefetch availability drop when latency is injected. However, after adding prioritized load-shedding, user-initiated requests maintain a 100% availability and only prefetch requests are throttled.\nWe were ready to roll this out to production and see how it performed in the wild!\nReal-World Application and Results\nNetflix engineers work hard to keep our systems available, and it was a while before we had a production incident that tested the efficacy of our solution. A few months after deploying prioritized load shedding, we had an infrastructure outage at Netflix that impacted streaming for many of our users. Once the outage was fixed, we got a 12x spike in pre-fetch requests per second from Android devices, presumably because there was a backlog of queued requests built up.\nSpike in Android pre-fetch RPS\nThis could have resulted in a second outage as our systems weren’t scaled to handle this traffic spike. Did prioritized load-shedding in PlayAPI help us here?\nYes! While the availability for prefetch requests dropped as low as 20%, the availability for user-initiated requests was > 99.4% due to prioritized load-shedding.\nAvailability of pre-fetch and user-initiated requests\nAt one point we were throttling more than 50% of all requests but the availability of user-initiated requests continued to be > 99.4%.\nGeneric service work prioritization\nBased on the success of this approach, we have created an internal library to enable services to perform prioritized load shedding based on pluggable utilization measures, with multiple priority levels.\nUnlike API gateway, which needs to handle a large volume of requests with varying priorities, most microservices typically receive requests with only a few distinct priorities. To maintain consistency across different services, we have introduced four predefined priority buckets inspired by the Linux tc-prio levels:\n\nCRITICAL: Affect core functionality — These will never be shed if we are not in complete failure.\nDEGRADED: Affect user experience — These will be progressively shed as the load increases.\nBEST_EFFORT: Do not affect the user — These will be responded to in a best effort fashion and may be shed progressively in normal operation.\nBULK: Background work, expect these to be routinely shed.\n\nServices can either choose the upstream client’s priority or map incoming requests to one of these priority buckets by examining various request attributes, such as HTTP headers or the request body, for more precise control. Here is an example of how services can map requests to priority buckets:\nResourceLimiterRequestPriorityProvider requestPriorityProvider() {\n    return contextProvider -> {\n        if (contextProvider.getRequest().isCritical()) {\n              return PriorityBucket.CRITICAL;\n          } else if (contextProvider.getRequest().isHighPriority()) {\n              return PriorityBucket.DEGRADED;\n          } else if (contextProvider.getRequest().isMediumPriority()) {\n              return PriorityBucket.BEST_EFFORT;\n          } else {\n              return PriorityBucket.BULK;\n          }\n        };\n    }\nGeneric CPU based load-shedding\nMost services at Netflix autoscale on CPU utilization, so it is a natural measure of system load to tie into the prioritized load shedding framework. Once a request is mapped to a priority bucket, services can determine when to shed traffic from a particular bucket based on CPU utilization. In order to maintain the signal to autoscaling that scaling is needed, prioritized shedding only starts shedding load after hitting the target CPU utilization, and as system load increases, more critical traffic is progressively shed in an attempt to maintain user experience.\nFor example, if a cluster targets a 60% CPU utilization for auto-scaling, it can be configured to start shedding requests when the CPU utilization exceeds this threshold. When a traffic spike causes the cluster’s CPU utilization to significantly surpass this threshold, it will gradually shed low-priority traffic to conserve resources for high-priority traffic. This approach also allows more time for auto-scaling to add additional instances to the cluster. Once more instances are added, CPU utilization will decrease, and low-priority traffic will resume being served normally.\nPercentage of requests (Y-axis) being load-shed based on CPU utilization (X-axis) for different priority buckets\nExperiments with CPU based load-shedding\nWe ran a series of experiments sending a large request volume at a service which normally targets 45% CPU for auto scaling but which was prevented from scaling up for the purpose of monitoring CPU load shedding under extreme load conditions. The instances were configured to shed noncritical traffic after 60% CPU and critical traffic after 80%.\nAs RPS was dialed up past 6x the autoscale volume, the service was able to shed first noncritical and then critical requests. Latency remained within reasonable limits throughout, and successful RPS throughput remained stable.\nExperimental behavior of CPU based load-shedding using synthetic traffic.P99 latency stayed within a reasonable range throughout the experiment, even as RPS surpassed 6x the autoscale target.\nAnti-patterns with load-shedding\nAnti-pattern 1 — No shedding\nIn the above graphs, the limiter does a good job keeping latency low for the successful requests. If there was no shedding here, we’d see latency increase for all requests, instead of a fast failure in some requests that can be retried. Further, this can result in a death spiral where one instance becomes unhealthy, resulting in more load on other instances, resulting in all instances becoming unhealthy before auto-scaling can kick in.\nNo load-shedding: In the absence of load-shedding, increased latency can degrade all requests instead of rejecting some requests (that can be retried), and can make instances unhealthy\nAnti-pattern 2 — Congestive failure\nAnother anti-pattern to watch out for is congestive failure or shedding too aggressively. If the load-shedding is due to an increase in traffic, the successful RPS should not drop after load-shedding. Here is an example of what congestive failure looks like:\nCongestive failure: After 16:57, the service starts rejecting most requests and is not able to sustain a successful 240 RPS that it was before load-shedding kicked in. This can be seen in fixed concurrency limiters or when load-shedding consumes too much CPU preventing any other work from being done\nWe can see in the Experiments with CPU based load-shedding section above that our load-shedding implementation avoids both these anti-patterns by keeping latency low and sustaining as much successful RPS during load-shedding as before.\nGeneric IO based load-shedding\nSome services are not CPU-bound but instead are IO-bound by backing services or datastores that can apply back pressure via increased latency when they are overloaded either in compute or in storage capacity. For these services we re-use the prioritized load shedding techniques, but we introduce new utilization measures to feed into the shedding logic. Our initial implementation supports two forms of latency based shedding in addition to standard adaptive concurrency limiters (themselves a measure of average latency):\n\nThe service can specify per-endpoint target and maximum latencies, which allow the service to shed when the service is abnormally slow regardless of backend.\nThe Netflix storage services running on the Data Gateway return observed storage target and max latency SLO utilization, allowing services to shed when they overload their allocated storage capacity.\n\nThese utilization measures provide early warning signs that a service is generating too much load to a backend, and allow it to shed low priority work before it overwhelms that backend. The main advantage of these techniques over concurrency limits alone is they require less tuning as our services already must maintain tight latency service-level-objectives (SLOs), for example a p50 < 10ms and p100 < 500ms. So, rephrasing these existing SLOs as utilizations allows us to shed low priority work early to prevent further latency impact to high priority work. At the same time, the system will accept as much work as it can while maintaining SLO’s.\nTo create these utilization measures, we count how many requests are processed slower than our target and maximum latency objectives, and emit the percentage of requests failing to meet those latency goals. For example, our KeyValue storage service offers a 10ms target with 500ms max latency for each namespace, and all clients receive utilization measures per data namespace to feed into their prioritized load shedding. These measures look like:\nutilization(namespace) = {\n  overall = 12\n  latency = {\n    slo_target = 12,\n    slo_max = 0\n  }\n  system = {\n    storage = 17,\n    compute = 10,\n  }\n}\nIn this case, 12% of requests are slower than the 10ms target, 0% are slower than the 500ms max latency (timeout), and 17% of allocated storage is utilized. Different use cases consult different utilizations in their prioritized shedding, for example batches that write data daily may get shed when system storage utilization is approaching capacity as writing more data would create further instability.\nAn example where the latency utilization is useful is for one of our critical file origin services which accepts writes of new files in the AWS cloud and acts as an origin (serves reads) for those files to our Open Connect CDN infrastructure. Writes are the most critical and should never be shed by the service, but when the backing datastore is getting overloaded, it is reasonable to progressively shed reads to files which are less critical to the CDN as it can retry those reads and they do not affect the product experience.\nTo achieve this goal, the origin service configured a KeyValue latency based limiter that starts shedding reads to files which are less critical to the CDN when the datastore reports a target latency utilization exceeding 40%. We then stress tested the system by generating over 50Gbps of read traffic, some of it to high priority files and some of it to low priority files:\n\nIn this test, there are a nominal number of critical writes and a high number of reads to both low and high priority files. In the top-left graph we ramp to 2000 read/second of ~4MiB files until we can trigger overload of the backend store at over 50Gbps in the top-center graph. When that happens, the top-right graph shows that even under significant load, the origin only sheds low priority read work to preserve high-priority writes and reads. Before this change when we hit breaking points, critical writes and reads would fail along with low priority reads. During this test the CPU load of the file serving service was nominal (<10%), so in this case only IO based limiters are able to protect the system. It is also important to note that the origin will serve more traffic as long as the backing datastore continues accepting it with low latency, preventing the problems we had with concurrency limits in the past where they would either shed too early when nothing was actually wrong or too late when we had entered congestive failure.\nConclusion and Future Directions\nThe implementation of service-level prioritized load shedding has proven to be a significant step forward in maintaining high availability and excellent user experience for Netflix customers, even during unexpected system stress.\nStay tuned for more updates as we innovate to keep your favorite shows streaming smoothly, no matter what SLO busters lie in wait.\nAcknowledgements\nWe would like to acknowledge the many members of the Netflix consumer product, platform, and open connect teams who have designed, implemented, and tested these prioritization techniques. In particular: Xiaomei Liu, Raj Ummadisetty, Shyam Gala, Justin Guerra, William Schor, Tony Ghita et al.\n\nEnhancing Netflix Reliability with Service-Level Prioritized Load Shedding was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/e735e6ce8f7d",
        "categories": [
          "chaos-engineering",
          "load-shedding",
          "reliability",
          "distributed-systems",
          "netflix"
        ],
        "isoDate": "2024-06-25T22:58:09.000Z"
      }
    ]
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Oksana Mandryka",
        "title": "Enhance Your Writing with Grazie, Now Included in the AI Pro Subscription",
        "link": "https://blog.jetbrains.com/ai/2024/06/enhance-your-writing-with-grazie-now-included-in-the-ai-pro-subscription/",
        "pubDate": "Fri, 28 Jun 2024 15:43:12 +0000",
        "content:encodedSnippet": "This week, we announced the general availability of Grazie, our AI writing companion for people in tech. We’re also excited to share that Grazie is now part of the AI Pro subscription at no extra cost. Grazie streamlines your non-coding tasks by integrating generative AI into your JetBrains IDEs, browsers, and other tools. \n\n\n\n\n\n\nGrazie’s main features\nInstant proofreading. Grazie automatically checks your grammar, spelling, punctuation, and style, helping you write with fluency and accuracy.\nContext-aware AI chat. Accessible on any website, our new AI chat streamlines the drafting of contextual content and generates ideas on the fly.\nSummarization. Grazie’s Summarize feature enables you to quickly grasp key points without spending hours reading extensive texts.\nInline text completion. Grazie suggests contextually relevant words and phrases, boosting your writing speed. Our language models are trained specifically on high-tech industry texts, allowing our tools to understand your context. \nOn-the-fly translation. Ensure you’re always understood and connected to a global audience. Convert your text into your selected language while maintaining the original tone and context. \nParaphrase and Change tone. These features help you rework your text to align with your intended message and tone, all while maintaining consistency.\nGet more information about Grazi’s features in this blogpost. \nGeneral availability\nGrazie is now available as a plugin for your JetBrains IDEs and as an extension for Safari, Google Chrome, Arc, and other Chromium-based browsers. While there is a free version, it includes a basic volume limit for AI-powered functionality. AI Pro subscribers have access to the full volume for Grazie AI features, which is 500 times greater than the basic volume and replenishes weekly. A subscription also provides access to some additional features that are coming soon.\nGrazie is supported in Google Docs, Google Sheets, Gmail, Confluence, Jira, Bitbucket, GitHub, Slack (web), Zendesk, YouTrack, and other platforms.\nYour feedback is the cornerstone of our continuous improvement. Please share your thoughts with us by leaving a comment here or using our feedback form, which you can access by clicking on the browser extension icon or by going to the Grazie page on JetBrains Marketplace. \nTo learn more about Grazie, visit jetbrains.com/grazie.\nLet’s make your writing awesome together!\nYour JetBrains team\nGet Grazie\n                                                    \n\n\n\n\nPS\nThis text was proofread by Grazie.",
        "dc:creator": "Oksana Mandryka",
        "content": "This week, we announced the general availability of Grazie, our AI writing companion for people in tech. We&#8217;re also excited to share that Grazie is now part of the AI Pro subscription at no extra cost. Grazie streamlines your non-coding tasks by integrating generative AI into your JetBrains IDEs, browsers, and other tools.&#160; Grazie’s main [&#8230;]",
        "contentSnippet": "This week, we announced the general availability of Grazie, our AI writing companion for people in tech. We’re also excited to share that Grazie is now part of the AI Pro subscription at no extra cost. Grazie streamlines your non-coding tasks by integrating generative AI into your JetBrains IDEs, browsers, and other tools.  Grazie’s main […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=488657",
        "categories": [
          "jetbrains-ai",
          "news",
          "releases",
          "ai",
          "ai-assistance",
          "arc",
          "chrome",
          "intellij-idea-plugins",
          "plugin",
          "safari",
          "writing-plugins"
        ],
        "isoDate": "2024-06-28T15:43:12.000Z"
      },
      {
        "creator": "Maria Sharobaeva",
        "title": "JetBrains Academy – June Digest",
        "link": "https://blog.jetbrains.com/education/2024/06/28/jetbrains-academy-june-digest/",
        "pubDate": "Fri, 28 Jun 2024 13:56:17 +0000",
        "content:encodedSnippet": "Stay updated with the latest news in the JetBrains Academy Newsletter. Discover the newest version of the JetBrains Academy plugin, celebrate our students’ international achievements, and learn how to become a JetBrains ambassador. All this and more await you in this month’s newsletter\nJetBrains Academy Plugin Update\nInstall JetBrains Academy Plugin 2024.5\nLearn computer science for free right in your IDE with the new version of the JetBrains Academy Plugin. Enjoy enhanced features, including submission deletion for specific courses and enhanced GitHub integration.\nInstall Free Plugin\n                                                    \nAdvance Your Tech Skills\nMaster Object-Oriented Programming in C++\nExplore the updated “C++ Basics” course, now with a module on object-oriented programming! Develop a 2D arcade game while learning about classes, objects, and memory management. It’s perfect for both beginners and those refining their skills.\nCheck It Out\n                                                    \n“DevOps Engineer With AI” Course\nGain practical training to become a proficient DevOps engineer. Learn the principles of DevOps, CI/CD, and configuration management, as well as how to integrate AI technologies into DevOps processes.\nStart Learning\n                                                    \nParticipate Our Python Coding Workshop\nNew to Python? Join our free, beginner-friendly workshop on July 11, 2024, at 2:00 pm UTC. We’ll cover essential Python concepts and provide hands-on experience using IDEs. Join our Discord to stay up to date!\nJoin Now\n                                                    \nOur Students’ Achievements \nInternational Contest Victory\nAt the International Workshop on Logic and Synthesis, our team of students won the competition on Boolean circuit synthesis organized by experts from the University of California, Berkeley. If you want to learn computer science from practitioners, participate in international IT events, and train to win contests, read about JetBrains Academy’s university programs.\nLearn More\n                                                    \nWe’re on Instagram\nJoin JetBrains Academy on Instagram\nKeep up with the latest IT trends, JetBrains Academy news, career tips, and tech memes. Click that follow button!\nStart Following\n                                                    \nBecome JetBrains Ambassador\nJoin the JetBrains Content Creators Program\nLove creating tech content and sharing it with the IT community? If so, our new JetBrains Content Creators Program is just for you! Feature JetBrains products and get free access to our IDEs and exclusive offers for your followers!\nLearn More\n                                                    \nCareer Tips\nHow to Ask Your Manager for Upskilling Courses\nUpskilling benefits both you and your company. It allows you to close skill gaps, tackle new challenges, and deliver better results. Learn how to pitch upskilling courses effectively with examples from JetBrains Academy. \nRead Now",
        "dc:creator": "Maria Sharobaeva",
        "content": "Stay updated with the latest news in the JetBrains Academy Newsletter. Discover the newest version of the JetBrains Academy plugin, celebrate our students&#8217; international achievements, and learn how to become a JetBrains ambassador. All this and more await you in this month&#8217;s newsletter",
        "contentSnippet": "Stay updated with the latest news in the JetBrains Academy Newsletter. Discover the newest version of the JetBrains Academy plugin, celebrate our students’ international achievements, and learn how to become a JetBrains ambassador. All this and more await you in this month’s newsletter",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=488372",
        "categories": [
          "digest",
          "jetbrains-academy",
          "newsletter"
        ],
        "isoDate": "2024-06-28T13:56:17.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "10 Plugins to Enhance Your IntelliJ IDEA Experience in 2024",
        "link": "https://blog.jetbrains.com/idea/2024/06/10-plugins-to-enhance-your-intellij-idea-experience-in-2024/",
        "pubDate": "Fri, 28 Jun 2024 07:58:02 +0000",
        "content:encodedSnippet": "Even though IntelliJ IDEA is powerful and self-sufficient, we love to customize it a bit with plugins. Why? Because they’re fun! In this blog post, we’ll share a list of cool plugins that will help you liven things up in your IDE.\nLet’s go!\nJetBrains AI Assistant\nAI has touched every industry over the past few years, and programming is no exception. JetBrains AI Assistant is our take on deeply integrated, context-aware AI that speeds up your coding and boosts productivity. What started as a hackathon project has evolved into a full-fledged AI-powered coding companion.\nNow it offers a comprehensive AI chat to answer code-related questions based on your project’s context. It also provides various AI actions to explain code, find problems, suggest refactorings, generate tests, assist with commit messages and documentation, and more. \n\n\n\n    \nTry JetBrains AI Assistant \n                                    \nGrazie\nGrazie is an AI writing companion for tech professionals. It integrates seamlessly into your development workflows for efficient and clean writing. \nWith features like instant proofreading, context-aware AI chat, summarization, inline text completion, translation, and rephrasing, Grazie ensures your text is polished and professional. It supports multiple languages, maintains your data privacy, and enhances your productivity without interrupting your workflow. \n\n\n\n\n\n\nAvailable as both a browser extension and a JetBrains IDE plugin, Grazie allows you to focus on coding while it takes care of your text. If you’ve bought a JetBrains AI Pro subscription, you already have access to Grazie. \nSpace Invaders\nFeeling burnt out? Take a quick break and blast some aliens with the Space Invaders plugin! This classic arcade game is cleverly integrated right into your IDE, providing a fun and nostalgic way to de-stress. \n\n\n\n\nTranslation\nNeed to translate code snippets or comments on the fly? The Translation plugin integrates seamlessly with your IDE, allowing you to translate text in over 100 languages. It’s a powerful tool for developers working with multilingual applications or collaborating with international teams.\n\n\n\n\nKursor\nThis is another plugin for those using multiple keyboard languages in their projects. It provides a visual indicator at the cursor to show the current keyboard language, helping users avoid typing errors.\n\n\n\n\nGoogle Search\nNever leave your IDE again for quick Google searches – save time and keep your focus on development with the Google Search plugin. Highlight any piece of text right in the editor and search for it on Google without leaving your coding environment.\n\n\n\n\nYou can also write your question in the Search window and will be redirected to Google by a click on the query result. \n\n\n\n\nGitLink\nThe GitLink plugin offers quick shortcuts to open or copy files, directories, or commits in platforms like GitHub, Bitbucket, GitLab, and more. Perfect for code reviews and discussions, the GitLink plugin is simple, effective, and a real time-saver for anyone working with Git repositories.\n\n\n\n\nKey Promoter X\nThe Key Promoter X plugin helps you discover keyboard shortcuts you never knew existed, making your workflow smoother and faster. Whenever you use the mouse for an action that could’ve been done with a shortcut, the corresponding shortcut will be shown. With this plugin, you’ll have endless opportunities to learn and use shortcuts.\n\n\n\n\nBetter Highlights\nBetter Highlights allows you to improve code readability with better visual clarity and organization. It offers customizable syntax highlighting themes that make your code easier on the eyes, helping you focus on what matters most. \n\n\n\n\nDarkyen’s Time Tracker\nDo you struggle with time management? Darkyen’s Time Tracker is here to help! This lightweight status bar widget starts tracking your time with a click or keystroke, and it pauses automatically when you’re inactive. You can customize options like autostart, inactivity pauses, and time formats to fit your workflow. Additionally, the plugin seamlessly integrates with Git, automatically adding time spent on commits to your messages. Stay organized, boost your productivity, and make every minute count with Darkyen’s Time Tracker!\n\n\n\n\nSome of these plugins are designed to boost your productivity, while others are merely meant to add a touch of fun or novelty to your coding sessions. This way, you can stay in the zone while also enjoying a lighthearted approach to your work. \nWe hope you’ve enjoyed exploring this list of cool plugins and discovered some gems to enhance your developer experience!",
        "dc:creator": "Irina Mariasova",
        "content": "Even though IntelliJ IDEA is powerful and self-sufficient, we love to customize it a bit with plugins. Why? Because they’re fun! In this blog post, we’ll share a list of cool plugins that will help you liven things up in your IDE. Let’s go! JetBrains AI Assistant AI has touched every industry over the past [&#8230;]",
        "contentSnippet": "Even though IntelliJ IDEA is powerful and self-sufficient, we love to customize it a bit with plugins. Why? Because they’re fun! In this blog post, we’ll share a list of cool plugins that will help you liven things up in your IDE. Let’s go! JetBrains AI Assistant AI has touched every industry over the past […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=488307",
        "categories": [
          "idea",
          "plugins",
          "tips-tricks",
          "intellijidea-2",
          "plugin"
        ],
        "isoDate": "2024-06-28T07:58:02.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "TeamCity 2024.03.3 Bug Fix Is Now Available",
        "link": "https://blog.jetbrains.com/teamcity/2024/06/teamcity-2024-03-3-bug-fix/",
        "pubDate": "Thu, 27 Jun 2024 17:07:49 +0000",
        "content:encodedSnippet": "The 2024.03.3 bug fix for TeamCity On-Premises is now available for download! \nThis release includes a few performance and security fixes. Among others, we addressed the following issues:\nSome AWS EC2 instance agents couldn’t authorize on start.\n\n\n\n\nAgents running from Windows 2024.03-nanoserver-2022 Docker images were incompatible with some runners after a restart.\n\n\n\n\nAgent service under Windows didn’t use the bundled JRE and failed to start if JAVA_HOME wasn’t defined.\nFor the full list of the issues fixed in this version, please refer to our release notes.\nAs with other minor updates, TeamCity 2024.03.3 shares the same data format with all 2024.03.x releases, allowing you to easily upgrade or downgrade within these versions without the need to back up or restore.\nWe recommend upgrading to apply the latest improvements and security fixes to your TeamCity server.\nBefore you start, read our upgrade notes and use one of the following options to upgrade:\nUpgrade from your recent version with our automatic update.\nDownload the new version from the JetBrains website.\nPull the TeamCity Docker image.\nThank you for submitting issues and voting on them. Your feedback is invaluable in helping us improve TeamCity. \nIf you encounter any problems or have suggestions, please report them via our forum or issue tracker.\nHappy building!",
        "dc:creator": "Olga Bedrina",
        "content": "The 2024.03.3 bug fix for TeamCity On-Premises is now available for download!&#160; This release includes a few performance and security fixes. Among others, we addressed the following issues: For the full list of the issues fixed in this version, please refer to our release notes. As with other minor updates, TeamCity 2024.03.3 shares the same [&#8230;]",
        "contentSnippet": "The 2024.03.3 bug fix for TeamCity On-Premises is now available for download!  This release includes a few performance and security fixes. Among others, we addressed the following issues: For the full list of the issues fixed in this version, please refer to our release notes. As with other minor updates, TeamCity 2024.03.3 shares the same […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=488063",
        "categories": [
          "bug-fix",
          "news"
        ],
        "isoDate": "2024-06-27T17:07:49.000Z"
      },
      {
        "creator": "Khalid Abuhakmeh",
        "title": "How Where Conditions Work in Entity Framework Core",
        "link": "https://blog.jetbrains.com/dotnet/2024/06/26/how-where-conditions-work-in-entity-framework-core/",
        "pubDate": "Wed, 26 Jun 2024 13:36:38 +0000",
        "content:encodedSnippet": "Entity Framework Core is a popular data access library in the .NET space that makes it easier to write, execute, and process SQL statements and the resulting data. If you’re new to the .NET space, this blog post will help you understand how to create filtered result sets using the Where operator and how to get around some everyday situations you’ll find in most EF Core code bases.\nExplore JetBrains .NET tools\n                                                    \nGetting Started\nTo follow along, I’ve created a Database class with seed data. The following DbContext definition will help us execute some basic Where scenarios and better understand what’s happening inside the EF Core abstraction.\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel.DataAnnotations.Schema;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Logging;\n\nnamespace EFCorePlayground.Models;\n\npublic class Database: DbContext\n{\n    public DbSet<Advocate> Advocates => Set<Advocate>();\n    \n    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\n    {\n        optionsBuilder\n            .UseSqlite(\"Data Source=app.db\")\n            .EnableSensitiveDataLogging()\n            .LogTo(\n                Console.WriteLine,\n                new[] { DbLoggerCategory.Database.Command.Name },\n                LogLevel.Information);\n    }\n\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity<Advocate>()\n            .HasData([\n                new() { Id = 1, Name = \"Maarten Balliauw\", Products = [ \"IntelliJ IDEA\", \"Rider\", \"ReSharper\" ], Technologies = [\".NET\", \"Java\"]},\n                new() { Id = 2, Name = \"Matthias Koch\", Products = [\"ReSharper\", \"Rider\", \"Qodana\", \"Team City\"], Technologies = [\".NET\", \"CI\" ]},\n                new() { Id = 3, Name = \"Rachel Appel\", Products = [\"ReSharper\", \"Rider\"], Technologies = [\".NET\", \"JavaScript\"]},\n                new() { Id = 4, Name = \"Matt Ellis\", Products = [\"Rider\", \"Gateway\"], Technologies = [\".NET\", \"Unreal\", \"Unity\", \"Java\"]},\n                new() { Id = 5, Name = \"Khalid Abuhakmeh\", Products = [\"Rider\", \"RustRover\"], Technologies = [\".NET\", \"Rust\"]}\n            ]);\n    }\n}\n\n[Table(\"Advocates\")]\npublic class Advocate\n{\n    [Key]\n    public int Id { get; set; }\n    [MaxLength(250)]\n    public string Name { get; set; } = \"\";\n    public string[] Products { get; set; } = [];\n    public string[] Technologies { get; set; } = [];\n}\n\n\n\n\nYou can find the code and all queries in this GitHub Repository.\nIf you want to use a custom DbContext implementation, I suggest adding the following logging code to your implementation’s OnConfiguring method.\nprotected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)\n{\n    optionsBuilder\n        .UseSqlite(\"Data Source=app.db\")\n        .EnableSensitiveDataLogging()\n        .LogTo(\n            Console.WriteLine,\n            new[] { DbLoggerCategory.Database.Command.Name },\n            LogLevel.Information);\n}\nThe configuration will filter all logs only to include the SQL statements EF Core generates and logs them to the current console’s standard output. You can see these logs in Rider’s Run tool window.\n\n\n\n\nBe sure to remove the call to LogTo when using your DbContext in production environments. The Console is single-threaded and notorious for causing performance issues in production.\nThe Where Operator\nEF Core uses the LINQ syntax as a domain-specific language (DSL) within C# codebases as a starting point for translating your queries into SQL. The LINQ interface provides a common abstraction for constructing queries regardless of the underlying data storage choice. It’s important to note that while the abstraction can feel magical, it is anything but. What you write is the starting point for translation. So, it’s essential to be intentional about your queries and consider how EF Core may translate the code.\nLet’s start with the most basic query, the humble ToList, and discuss what happens.\nvar all = db.Advocates.ToList();\nThe resulting SQL is, not surprisingly, a SELECT statement with no filtering at all.\nSELECT \"a\".\"Id\", \"a\".\"Name\", \"a\".\"Products\", \"a\".\"Technologies\"\nFROM \"Advocates\" AS \"a\"\nWhile dependent on your context, this is typically a practice that can lead to issues of over-fetching, especially on tables with a large number of records.\nLet’s add a Where operator and look at the resulting SQL.\nvar maarten = db\n    .Advocates\n    .Where(a => a.Id == 1)\n    .ToList();\nIn this case, we use a LINQ expression known as a predicate to create a logical operation only to return a record with an Id of 1.\nSELECT \"a\".\"Id\", \"a\".\"Name\", \"a\".\"Products\", \"a\".\"Technologies\"\nFROM \"Advocates\" AS \"a\"\nWHERE \"a\".\"Id\" = 1\nCongratulations. You just filtered your first EF Core query. That was easy, right? The predicate passes in the EF Core model, allowing you to filter on any exposed property. These properties coincide with columns in your database.\nIf you take anything away from this post, it should be that EF Core and your models are representations of an underlying database. They are not so much C# objects as proxies for a schema in a data storage engine. Getting into this mindset helps you avoid the costly mistakes of using untranslatable .NET methods in constructing queries.\nLet’s get into some more advanced scenarios.\nAnd and Or Operations\nWhen building queries, you’ll likely have more than one filtering operation. You can break down most filtering operations into two categories: AND and OR. \nWith AND operations, all predicates compound and must be satisfied to match on a record. The AND operation is the default behavior of the Where operator in EF Core.\nvar riderAndResharper = db\n    .Advocates\n    .Where(a => a.Products.Contains(\"Rider\"))\n    .Where(a => a.Products.Contains(\"ReSharper\"))\n    .ToList();\nThe LINQ code produces the following SQL.\nSELECT \"a\".\"Id\", \"a\".\"Name\", \"a\".\"Products\", \"a\".\"Technologies\"\nFROM \"Advocates\" AS \"a\"\nWHERE 'Rider' IN (\n    SELECT \"p\".\"value\"\n    FROM json_each(\"a\".\"Products\") AS \"p\"\n) AND 'ReSharper' IN (\n    SELECT \"p0\".\"value\"\n    FROM json_each(\"a\".\"Products\") AS \"p0\"\n)\n\n\n\n\nWe used two Where operators, and EF Core translated our LINQ expression into a single SQL statement with AND combining the two conditions.\nWhat about an OR operation? How do we construct those queries? Well, we use the C# logical operator of||.\nvar dotnetOrRust = db\n    .Advocates\n    .Where(a => \n        a.Technologies.Contains(\"Rust\") ||\n        a.Technologies.Contains(\".NET\")\n    )\n    .ToList();\nWe have a single Where call, but the predicate is slightly more complex. The C# code translates to the following SQL.\nSELECT \"a\".\"Id\", \"a\".\"Name\", \"a\".\"Products\", \"a\".\"Technologies\"\nFROM \"Advocates\" AS \"a\"\nWHERE 'Rust' IN (\n    SELECT \"t\".\"value\"\n    FROM json_each(\"a\".\"Technologies\") AS \"t\"\n) OR '.NET' IN (\n    SELECT \"t0\".\"value\"\n    FROM json_each(\"a\".\"Technologies\") AS \"t0\"\n)\n\n\n\n\nNice! We can also use this similar construct with the && operator to get the same result as our first query.\nvar dotnetOrRustWithAnd = db\n    .Advocates\n    .Where(a => \n        a.Technologies.Contains(\"Rust\") &&\n        a.Technologies.Contains(\".NET\")\n    )\n    .ToList();\nWe’ve been using EF Core to translate C# to SQL, but what happens when we want to access database-specific functionality? Let’s examine that next.\nUsing Database Functions\nWhile EF Core has a lot of translations for C# code into SQL, there are times when you might want to call a particular database function. For example, many folks use the LIKE function to do fuzzy searches in a table. \nLuckily, the EF class exposes database functions for a Where operation.\nvar mAdvocates = db\n    .Advocates\n    .Where(a => EF.Functions.Like(a.Name, \"M%\"))\n    .ToList();\nEF Core and LINQ are only here to help you translate C# code into SQL and the EF.Functions.Like method call is representative of the LIKE database function.\nSELECT \"a\".\"Id\", \"a\".\"Name\", \"a\".\"Products\", \"a\".\"Technologies\"\nFROM \"Advocates\" AS \"a\"\nWHERE \"a\".\"Name\" LIKE 'M%'\nWhat happens when you can’t do everything in a SQL call?\nIn-Memory Filtering\nThroughout this post, we’ve been Materializing results. Materialization is the process of executing SQL, retrieving the results, and mapping them into object instances you can use during the lifetime of your application. So, if we have objects in memory, we should be able to do additional filtering in memory, right? Of course!\nbool ProductEndsWithEr(string product)\n    => product.EndsWith(\"er\");\n\nvar erProducts = db\n    .Advocates\n    .ToList() // execute SQL (all records)\n    // in memory now\n    .Where(a => a.Products.Any(ProductEndsWithEr))\n    .ToList();    \nHere, we materialize our initial dataset using the first call to ToList, and then use a C# method to filter our collection further.\nUsing in-memory filters is a valuable technique when logic is impossible to translate into SQL, but be mindful to filter your result set as much as possible using SQL. Doing so will reduce the data transferred from the database into your application’s memory and improve performance.\nConditional Filtering\nHere is a bonus section about the strength of C#’s extension methods and how they can help you build custom functionality on top of the existing LINQ syntax. \nOne of my favorite extension methods is the If operation. I use this method to apply a Where operator based on other conditions in my codebase.\nvar condition = Random.Shared.Next(1, 10) > 5;\n\nvar conditional = db\n    .Advocates\n    .If(condition, q => \n        q.Where(a => a.Name.StartsWith(\"K\"))\n    )\n    .ToList();\nExtension methods are typically applied to the IQueryable interface to ensure that we’re dealing with EF Core and that it will translate our operations into SQL.\nusing System.Linq.Expressions;\n\nnamespace EFCorePlayground;\n\npublic static class QueryableExtensions\n{\n    public static IQueryable<TSource> If<TSource>(\n        this IQueryable<TSource> source,\n        bool condition,\n        Func<IQueryable<TSource>, IQueryable<TSource>> queryable)\n    {\n        return condition ? queryable(source) : source;\n    }\n}\n\n\n\n\nExtension methods can help you control how an SQL statement is built before it executes against your data storage engine.\nIf you’re working with user input, this can be a powerful tool in empowering users to build their queries while you maintain control of the resulting SQL statements. For example, you can add search and filter conditions to your query based on arguments passed into your ASP.NET Core Minimal API. \nConclusion\nEntity Framework Core is a powerful tool for building database-powered .NET applications, and understanding the basics can help set you up for success. This post covered the basics of filtering data and how you may want to use these operations more efficiently in your solutions.\nIf you have any tips, tricks, or questions, please feel free to leave us a comment.\nimage credit: Hannes Richter",
        "dc:creator": "Khalid Abuhakmeh",
        "content": "Entity Framework Core is a popular data access library in the .NET space that makes it easier to write, execute, and process SQL statements and the resulting data. If you’re new to the .NET space, this blog post will help you understand how to create filtered result sets using the Where operator and how to [&#8230;]",
        "contentSnippet": "Entity Framework Core is a popular data access library in the .NET space that makes it easier to write, execute, and process SQL statements and the resulting data. If you’re new to the .NET space, this blog post will help you understand how to create filtered result sets using the Where operator and how to […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=474374",
        "categories": [
          "net-tools",
          "c",
          "entity-framework-core",
          "sql"
        ],
        "isoDate": "2024-06-26T13:36:38.000Z"
      },
      {
        "creator": "Oksana Mandryka",
        "title": "Introducing Grazie – The AI Writing Companion for People in Tech",
        "link": "https://blog.jetbrains.com/grazie/2024/06/introducing-grazie-the-ai-writing-companion-for-people-in-tech/",
        "pubDate": "Wed, 26 Jun 2024 13:01:12 +0000",
        "content:encodedSnippet": "Grazie, a new AI writing companion for people working in tech, is now generally available. With Grazie, you can streamline your non-coding tasks by integrating generative AI into your JetBrains IDEs, browsers, and other tools.\n\n\n\n\n\n\nGrazie helps transform your thoughts into clear, well-articulated text through features like instant proofreading, inline text completion, summarization, translation, rephrasing, and more. The next time you need to generate new ideas, draft documents, or explore different perspectives, why not see what our context-aware AI chat can offer? If you’re part of a global team, you’ll appreciate Grazie’s multilingual capabilities, which allow you to communicate effectively across borders. With Grazie, you can focus on coding and let us take care of the text.\nGrazie is built with user privacy and security at its core. We don’t use any text you type for training the language models, and none of it is stored in the memory or logs of our servers, giving you the confidence to write freely and securely.\nAs part of JetBrains AI, Grazie is included in the AI Pro subscription plan and is also available for free with some limitations to the AI-powered functionality.\nGrazie’s features\nInstant proofreading\nGrazie automatically checks your grammar, spelling, punctuation, and style, taking into account syntax, semantics, and context. It quickly suggests multiple alternative options to fix mistakes. Whether you’re working on a code comment, commit message, piece of documentation, or technical blog post, Grazie ensures a professional and polished result. Instant proofreading is currently supported for English, German, Russian, and Ukrainian.\n\n\n\n\nAI chat \nAccessible on any website, Grazie Chat streamlines the process of drafting contextual content and generates ideas on the fly, helping to boost your productivity and spark your creativity. It processes queries, provides relevant responses, and offers suggestions or instructions based on your input. Grazie chat and other AI-powered features such as Summarize, Translate, Improve, Change tone, and Paraphrase excel in English, but are also compatible with a range of other languages.\n\n\n\n\nSummarization\nGrazie’s Summarize feature provides you with concise summaries, allowing you to quickly grasp key points without spending hours reading extensive texts. \n\n\n\n\nInline text completion\nGrazie suggests contextually relevant words and phrases, boosting your writing speed. We combine a rule-based approach alongside machine learning models that are trained specifically on high-tech industry texts, enabling our tools to understand your context. \n\n\n\n\nTranslation\nOur on-the-fly Translate feature ensures you stay connected and understood. Grazie converts your text into your selected language, maintaining the original tone and context. Translation is currently available for English, German, French, Spanish, Russian, Korean, Chinese, and Japanese.\n\n\n\n\nImprovement \nThe Improve feature offers a range of options to refine your writing according to your specific requirements. Whether you need to elaborate on topics for depth, engage more effectively with your audience, or simplify your content for clarity, this tool adjusts your text seamlessly. It also enables you to make your phrasing sound more natural, shorten content, and improve a piece’s overall readability, ensuring your text resonates with its intended audience.\n\n\n\n\nTone correction\nThe Change tone feature is designed to fine-tune the emotional resonance of the text to match the intended audience. Choose from the following supported tones: Professional, Confident, Friendly, Technical, and Inclusive. You can even apply multiple tones in succession to capture just the right voice for your text.\n\n\n\n\nParaphrasing and synonymization\nThe Paraphrase feature reformulates and restructures your text, ensuring the main idea is maintained but expressed in a new and unique way. \n\n\n\n\nA separate synonymization option is also available, targeting single-word substitutions to enhance vocabulary without altering the intended meaning. \n\n\n\n\nTogether, these options ensure your writing is engaging, clear, and polished.\nWord definitions\nThe Look Up feature provides instant definitions of words and phrases so that every word has the precise impact you intend. This functionality is currently available for English and German.\n\n\n\n\nWhich LLMs are under the hood?\nGrazie’s AI features are powered by JetBrains’ proprietary models and by models from third-party providers such as OpenAI and Google. We continuously test new models and are considering adding more LLM providers in the future, provided they meet our security standards. The full list of LLM providers we work with can be found here. We also develop our own language models and plan to combine third-party LLMs, including open-source models, with our own. \nJetBrains’ proprietary models are used for:\nInstant proofreading\nInline text completion\nSynonymization\nDefinitions\n\n\n\n\nModels from third-party providers work for:\nGrazie Chat\nSummarization\nTranslation\nImprovement\nTone correction\nParaphrasing\nContinue Writing\nPrivacy\nGrazie is designed with privacy and security in mind. When we studied audience needs, we found that more than half of the respondents were concerned about how AI uses their texts, where it sends them, and other similar issues. New AI-based services are continually emerging, changing our lives by offering an increasingly wider range of possibilities. However, many companies restrict their employees’ use of these services due to data security concerns. That’s why we:\nDon’t use any of the text that users type to train language models, whether our own or those of third parties. \nDon’t retain any of your data in our servers’ memory or logs, ensuring your information stays private and secure.\nGeneral availability\nGrazie is now available as a plugin for your JetBrains IDEs and as an extension for Safari, Google Chrome, Arc, and other Chromium-based browsers. Both the browser extension and the plugin are free. They include a basic volume limit for AI-powered functionality. This free allowance is replenished weekly, and according to our research, it meets the writing needs of most professionals in tech.\nAI Pro subscribers have access to the full volume for Grazie AI features, which is 500 times greater than the basic volume and also replenishes weekly. A subscription also provides access to some additional features that are coming soon.\nGrazie is supported in Google Docs, Google Sheets, Gmail, Confluence, Jira, Bitbucket,  GitHub, Slack (web), Zendesk, YouTrack, and other platforms.\nPlease note that access to the AI service is restricted to the territories where our providers’ services are available. You can check the full list of territories here. \nYour feedback is the cornerstone of our continuous improvement. Please share your thoughts with us by leaving a comment here or using our feedback form, which you can access by clicking on the browser extension icon or by going to the Grazie page on JetBrains Marketplace. \nTo learn more about Grazie, visit jetbrains.com/grazie.\nLet’s make your writing awesome together!\nYour JetBrains team\nGet Grazie for Free\n                                                    \nPS\nThis text was proofread by Grazie.",
        "dc:creator": "Oksana Mandryka",
        "content": "Grazie, a new AI writing companion for people working in tech, is now generally available. With Grazie, you can streamline your non-coding tasks by integrating generative AI into your JetBrains IDEs, browsers, and other tools. Grazie helps transform your thoughts into clear, well-articulated text through features like instant proofreading, inline text completion, summarization, translation, rephrasing, [&#8230;]",
        "contentSnippet": "Grazie, a new AI writing companion for people working in tech, is now generally available. With Grazie, you can streamline your non-coding tasks by integrating generative AI into your JetBrains IDEs, browsers, and other tools. Grazie helps transform your thoughts into clear, well-articulated text through features like instant proofreading, inline text completion, summarization, translation, rephrasing, […]",
        "guid": "https://blog.jetbrains.com/?post_type=grazie&p=487430",
        "categories": [
          "jetbrains-ai",
          "news",
          "releases",
          "ai",
          "ai-assitance",
          "chrome",
          "grazie",
          "intellij-idea-plugins",
          "plugins",
          "release",
          "safari"
        ],
        "isoDate": "2024-06-26T13:01:12.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "TeamCity Pipelines Pulse, Issue #3: YAML Configuration Settings",
        "link": "https://blog.jetbrains.com/teamcity/2024/06/teamcity-pipelines-pulse-issue3/",
        "pubDate": "Wed, 26 Jun 2024 10:27:50 +0000",
        "content:encodedSnippet": "With this TeamCity Pipelines release, we’re introducing the option to store and load pipeline definitions in YAML format from your repositories. \nThe search panel for the YAML editor now looks better than ever. Bugs were squashed, improvements made, and our users are happier than ever.\nRead on to learn what’s new!\nStoring and loading configuration settings in YAML\nPreviously, you were able to edit your pipelines in YAML format, but couldn’t store and load settings in a .yml file within your repository.\nWe fixed this! Now, you can import existing YAML files from your repository when creating a pipeline.\n\n\n\n\nWhen you click Save or Save and Run within your existing pipeline, the pipeline settings will be committed to the selected .yml file in the repo.\n\n\n\n\nIn-style search panel for the YAML editor\nWe introduced the new in-style search panel for the YAML editor. It now matches our design library (with code highlights in hot pink!) and is more convenient to use. No more scrolling struggles – the panel stays put, even with loads of code.\n\n\n\n\nBugs and improvements\nWe’ve been busy squashing bugs to make your experience smoother. Here are the key fixes we’ve rolled out.\nIntegrations: Now, when you edit an existing integration, the UI clearly shows which one you’re actually editing.\n\n\n\n\nAt one point, it was impossible to edit an existing parameter. We’ve fixed this.\n\n\n\n\nWhen clicking on the artifact icon in a job, the artifact will now download onto your machine instead of giving you a 404 as it did before.\n\n\n\n\nArtifact suggestion popup: When you select an artifact file or folder for a job, they’re now conveniently organized by name.\n\n\n\n\nThe + icon used to be misleading in the Secrets editing section. Now, it’s active when you can add a new secret and clearly disabled when you can’t.\n\n\n\n\nUsers used to get the Error while loading data error message when opening the Edit pipelines page. We’ve fixed this now!\n\n\n\n\n\nThe Delete artifacts icon is now clearly visible, complying with A11Y standards.\nDid you know?\nAgent terminals in TeamCity Pipelines are designed to help you easily view system logs, check installed software, and debug agent issues directly from the UI.\n\n\n\n\nThat’s it for today! Feel free to share your feedback in the comment section below.",
        "dc:creator": "Olga Bedrina",
        "content": "With this TeamCity Pipelines release, we’re introducing the option to store and load pipeline definitions in YAML format from your repositories.&#160; The search panel for the YAML editor now looks better than ever. Bugs were squashed, improvements made, and our users are happier than ever. Read on to learn what’s new! Storing and loading configuration [&#8230;]",
        "contentSnippet": "With this TeamCity Pipelines release, we’re introducing the option to store and load pipeline definitions in YAML format from your repositories.  The search panel for the YAML editor now looks better than ever. Bugs were squashed, improvements made, and our users are happier than ever. Read on to learn what’s new! Storing and loading configuration […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=486730",
        "categories": [
          "news",
          "releases",
          "release",
          "teamcity-pipelines-pulse"
        ],
        "isoDate": "2024-06-26T10:27:50.000Z"
      },
      {
        "creator": "Maha Taqi",
        "title": "PyCharm 2024.1.4: What’s New!",
        "link": "https://blog.jetbrains.com/pycharm/2024/06/pycharm-2024-1-4/",
        "pubDate": "Tue, 25 Jun 2024 17:49:37 +0000",
        "content:encodedSnippet": "PyCharm 2024.1.4 is here! View and navigate to URLs directly from the Editor tab, get context-based model suggestions for Hugging Face, and enjoy smart code assistance for TypedDict (PEP 692).\nYou can download the latest version from our download page, or update your current version through our free Toolbox App. \nDownload PyCharm 2024.1.4\n                                                    \nKey Features \nGutter actions and inlay hints for URLs\nNew gutter icons provide an easy way to manage URLs in Flask, FastAPI, and Django projects. In just a few clicks, you can test an endpoint by running the request in the HTTP Client, view all lower-level endpoints, and more. \n\n\n\n\nFurthermore, new inlay hints with endpoint URLs further contribute to code readability for Python web frameworks.\n\n\n\n\nPEP 692: Smart code assistance for TypedDict\nWith support for PEP 692, keyword arguments defined as TypedDict are now available when you invoke parameter info (⌘P / Ctrl+P), in code completion, and in the quick documentation popup (F1 / Ctrl+Q). Now you have access to yet another tool that lets you use the latest type hinting capabilities in Python to develop an easy-to-understand codebase.\n\n\n\n    \nLearn more\n                                                    \nHugging Face: Model suggestions\nPyCharm can now suggest a list of relevant Hugging Face models that best suit your needs. This allows you to decide which model to use and install without ever having to leave the IDE. Decide what you would like the model to do, and PyCharm will provide a list of options to choose from! \nAfter selecting a model, PyCharm will suggest inserting a code snippet that allows you to use this model directly in the open file, and it will download and install all of the missing packages on which this model depends.\n\n\n\n\nWarnings for uninstalled packages in requirements.txt\nPyCharm now underlines packages that are listed in requirements.txt but that are not installed on the current Python interpreter with a yellow squiggly line. Hover over the package name and click Install all missing packages to immediately set up your development environment.\n\n\n\n    \nDownload PyCharm 2024.1.4\n                                                    \nGet all of the details in our release notes so you don’t miss out on anything new!\nIf you come across any bugs, please let us know in our issue tracker so we can fix them right away. Connect with us on X (formerly Twitter) and share your thoughts on PyCharm 2024.1.4!",
        "dc:creator": "Maha Taqi",
        "content": "PyCharm 2024.1.4 is here! View and navigate to URLs directly from the Editor tab, get context-based model suggestions for Hugging Face, and enjoy smart code assistance for TypedDict (PEP 692). You can download the latest version from our download page, or update your current version through our free Toolbox App.  Key Features&#160; Gutter actions and [&#8230;]",
        "contentSnippet": "PyCharm 2024.1.4 is here! View and navigate to URLs directly from the Editor tab, get context-based model suggestions for Hugging Face, and enjoy smart code assistance for TypedDict (PEP 692). You can download the latest version from our download page, or update your current version through our free Toolbox App.  Key Features  Gutter actions and […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=486612",
        "categories": [
          "releases",
          "endpoints",
          "hugging-face",
          "pep-692",
          "typeddict"
        ],
        "isoDate": "2024-06-25T17:49:37.000Z"
      },
      {
        "creator": "Alexander Kurakin",
        "title": "Rider 2024.2 EAP 4: Inline Rendering of Doc Comments and Tasks View ",
        "link": "https://blog.jetbrains.com/dotnet/2024/06/25/rider-2024-2-eap-4/",
        "pubDate": "Tue, 25 Jun 2024 13:23:58 +0000",
        "content:encodedSnippet": "Another week, another Rider 2024.2 Early Access Program build! \nThis EAP build is packed with highly anticipated features such as the Tasks view and inline rendering of documentation comments. Let’s have a look!\nInline rendering of documentation comments\nInstead of a wall of text mixed with tags, inline rendering changes these comments into a more visually appealing format, complete with links and code blocks. No more struggling with confusing tags – you’ll be able to read everything more clearly. It can be utilized in any C# or F# files to improve your reading experience. \n\n                        \n\n\nTasks tab and a task dependency graph\nA new Tasks tab has been added to the Debug tool window. This tab presents detailed insights into the System.Threading.Tasks.Task and ValueTask objects, enhancing your ability to manage and monitor asynchronous operations. The tasks can be displayed in either a table or graph format, and you can switch between the two views via a drop-down menu located at the top-right corner of the tab.\nThe table view offers in-depth insights into the current state of each task – whether it is running, completed, blocked, or faulty, along with pertinent metadata. Showing task dependencies and simplifying the identification of deadlocks, the graph view is valuable in the debugging process.\n\n                        \n\n\nFor the full list of changes included in this build, please go to our issue tracker.\nDownload Rider 2024.2 EAP",
        "dc:creator": "Alexander Kurakin",
        "content": "Another week, another Rider 2024.2 Early Access Program build!&#160; This EAP build is packed with highly anticipated features such as the Tasks view and inline rendering of documentation comments. Let’s have a look! Inline rendering of documentation comments Instead of a wall of text mixed with tags, inline rendering changes these comments into a more [&#8230;]",
        "contentSnippet": "Another week, another Rider 2024.2 Early Access Program build!  This EAP build is packed with highly anticipated features such as the Tasks view and inline rendering of documentation comments. Let’s have a look! Inline rendering of documentation comments Instead of a wall of text mixed with tags, inline rendering changes these comments into a more […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=486375",
        "categories": [
          "net-tools",
          "eap",
          "rider",
          "debugger",
          "doc-comments",
          "tasks"
        ],
        "isoDate": "2024-06-25T13:23:58.000Z"
      },
      {
        "creator": "Alena Guzharina",
        "title": "What’s New in Datalore 2024.3: Quality Improvements",
        "link": "https://blog.jetbrains.com/datalore/2024/06/25/what-s-new-in-datalore-2024-3-quality-improvements/",
        "pubDate": "Tue, 25 Jun 2024 09:41:56 +0000",
        "content:encodedSnippet": "Following a feature-rich 2024.2 release, we’ve focused on enhancing the quality and reliability of Datalore in our 2024.3 update. Datalore Community, Professional, and Team customers have already received the new update automatically, and Datalore Enterprise customers can upgrade by following these instructions.\nEnhanced file handling for scheduled runs\nWe’ve added an option that lets you save files generated by scheduled runs directly to /data/notebook_files, just like you can for files generated during regular notebook sessions. This new feature allows files to be overwritten, and you can easily find files from all of your previous runs in one directory. The option to save files to isolated artifacts still exists, giving you more flexibility for your scheduled workflows. \n\n\n\n\nSmoother environment setup for R and Scala\nFrom now on, the necessary environment setup for R and Scala will be completed before the execution of init.sh, ensuring a smoother initial run. This enhancement allows you to make meaningful changes to init.sh scripts with the knowledge that they will be applied correctly, streamlining environment configuration.\nEarly terminal access during setup\nThe terminal is now accessible before environment setup is complete, allowing for early troubleshooting.\nOther improvements and bug fixes\nExported workspaces now include both notebooks and their associated reports in the downloaded .zip file. \nDatalore now supports ipydatagrid versions 1.3.0 and 1.3.1. \nA new reportLink field has been added to the top-level metadata of downloaded notebooks. \nWhen refreshing a database schema, you will now see a spinner during the refresh process and receive a clear notification when it is finished, alerting you to any errors. \nFor improved security, Git repository pulls are now limited to 100 MB for Datalore Community, Professional, and Team plans. Datalore Enterprise customers can configure the maximum pull size via the GIT_REPOSITORY_SIZE_LIMIT environment variable.\nNotebooks created by non-owners of a workspace no longer have incorrect report links in the workspace view. \nThe correlation chart in the Visualize tab no longer blinks. \nIn scenarios where PyPi servers are not accessible, Datalore now provides clear messages to admins about connectivity issues, prevents infinite loading, and offers an improved troubleshooting process. Only Enterprise plan users were affected.\nWe’ve fixed a rendering issue that was causing ipywidgets outputs to shake in the report builder and on the report page. Only Community, Professional, and Team plans were affected. \nScheduled reports now update variables in Markdown cells. \n\n\n\n\nDatalore Community, Professional, and Team customers have already received these updates automatically. Datalore Enterprise customers can upgrade by following these instructions:\n      \n      Upgrade to 2024.3\n    \n\n\n\n\nKind regards,\nThe Datalore team",
        "dc:creator": "Alena Guzharina",
        "content": "Following a feature-rich 2024.2 release, we’ve focused on enhancing the quality and reliability of Datalore in our 2024.3 update. Datalore Community, Professional, and Team customers have already received the new update automatically, and Datalore Enterprise customers can upgrade by following these instructions. Enhanced file handling for scheduled runs We&#8217;ve added an option that lets you [&#8230;]",
        "contentSnippet": "Following a feature-rich 2024.2 release, we’ve focused on enhancing the quality and reliability of Datalore in our 2024.3 update. Datalore Community, Professional, and Team customers have already received the new update automatically, and Datalore Enterprise customers can upgrade by following these instructions. Enhanced file handling for scheduled runs We’ve added an option that lets you […]",
        "guid": "https://blog.jetbrains.com/?post_type=datalore&p=486569",
        "categories": [
          "releases"
        ],
        "isoDate": "2024-06-25T09:41:56.000Z"
      },
      {
        "creator": "Alexander Kurakin",
        "title": "Bug Fixes for ReSharper 2024.1.4 and Rider 2024.1.4 Are Now Available! ",
        "link": "https://blog.jetbrains.com/dotnet/2024/06/24/resharper-rider-2024-1-4/",
        "pubDate": "Mon, 24 Jun 2024 20:15:03 +0000",
        "content:encodedSnippet": "The new bug fixes for the 2024.1 release are available to download. \nReSharper\nReSharper 2024.1.4 fixes a couple of notable issues:\nWe’ve fixed a StackOverflow exception on calling Find Usages or Go to Declaration features on strings from resources (RSRP-496787).  \nWe’ve eliminated a code analysis error that occurred when referencing .NET Framework 4.8.1 in a .NET 8 project (RSRP-496682). \nYou can find the full list of fixed issues here.\nDownload ReSharper\n                                                    \nRider\nIn addition to fixed issues from ReSharper, Rider 2024.1.4 delivers several important fixes of its own: \nNo more deadlocks in solutions with .editorconfig files (RIDER-107157).\nRider doesn’t lose Blueprint usages in Unreal Engine solutions if changes are made to Blueprints (RIDER-112251).\nFor the full list of fixed issues, please refer to this page.\nDownload Rider",
        "dc:creator": "Alexander Kurakin",
        "content": "The new bug fixes for the 2024.1 release are available to download.&#160; ReSharper ReSharper 2024.1.4 fixes a couple of notable issues: You can find the full list of fixed issues here. Rider In addition to fixed issues from ReSharper, Rider 2024.1.4 delivers several important fixes of its own:&#160; For the full list of fixed issues, [&#8230;]",
        "contentSnippet": "The new bug fixes for the 2024.1 release are available to download.  ReSharper ReSharper 2024.1.4 fixes a couple of notable issues: You can find the full list of fixed issues here. Rider In addition to fixed issues from ReSharper, Rider 2024.1.4 delivers several important fixes of its own:  For the full list of fixed issues, […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=486485",
        "categories": [
          "net-tools",
          "releases",
          "rider",
          "resharper"
        ],
        "isoDate": "2024-06-24T20:15:03.000Z"
      },
      {
        "creator": "Ksenia Shneyveys",
        "title": "All KotlinConf Recordings Are Now Available. Enjoy!",
        "link": "https://blog.jetbrains.com/kotlin/2024/06/kotlinconf24-recordings/",
        "pubDate": "Mon, 24 Jun 2024 11:57:07 +0000",
        "content:encodedSnippet": "You can now find all of the session recordings from KotlinConf’24 on the conference website!\nSessions are also being added to the Kotlin YouTube channel:\n\n\n\n\n\n\nPhotos and slides from some of the sessions are also available – click on a talk and select “Download slides” for the latter.\nDon’t miss these additional materials from the conference:\nA roundup of the highlights from the keynote in this blog post.\nKotlinConfersations, interviews with speakers and attendees hosted by Huyen Tue Dao.\nKotlinConf 2024 was held in Copenhagen, Denmark, from May 22–24, drawing over 2,000 attendees, speakers, and partners. The event began with a workshop day and continued with two days of sessions. The powerful keynote featured Jeffrey van Gogh (Google), Michail Zarečenskij, Julie Gunderson (both Amazon Web Services), Eve Matthaey (Meta), and Egor Tolstoy, Ekaterina Petrova, Vsevolod Tolstopyatov, Sebastian Aigner, Svetlana Isakova (all JetBrains) as speakers. The event concluded with a closing panel hosted by Hadi Hariri, featuring different folks from the Kotlin community answering questions.\nCatch all of the action from KotlinConf’24 and keep up with the latest conference updates by following KotlinConf on X.",
        "dc:creator": "Ksenia Shneyveys",
        "content": "You can now find all of the session recordings from KotlinConf’24 on the conference website! Sessions are also being added to the Kotlin YouTube channel: Photos and slides from some of the sessions are also available – click on a talk and select &#8220;Download slides&#8221; for the latter. Don&#8217;t miss these additional materials from the [&#8230;]",
        "contentSnippet": "You can now find all of the session recordings from KotlinConf’24 on the conference website! Sessions are also being added to the Kotlin YouTube channel: Photos and slides from some of the sessions are also available – click on a talk and select “Download slides” for the latter. Don’t miss these additional materials from the […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=486500",
        "categories": [
          "news",
          "kotlinconf"
        ],
        "isoDate": "2024-06-24T11:57:07.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "article New updates to Planner comment notifications and settings in Planner Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "McKenna Barlow",
        "title": "Code Assessment with .NET Upgrade Assistant",
        "link": "https://devblogs.microsoft.com/visualstudio/code-assessment-with-net-upgrade-assistant/",
        "pubDate": "Tue, 25 Jun 2024 17:00:54 +0000",
        "content:encodedSnippet": "We are thrilled to announce the latest enhancements to the .NET Upgrade Assistant. .NET Upgrade Assistant helps upgrade solutions to newer versions of .NET. Whether you’re upgrading from .NET Framework to .NET 8 or just between .NET Core versions (from .NET 6 or 7 to .NET 8 or 9), .NET Upgrade Assistant can help you understand what changes will be needed. .NET Upgrade Assistant is available as a Visual Studio extension or as a command-line tool. Now as part of your upgrades to modern .NET, you’ll have access to powerful code assessment features.\n\n\nHere’s what’s new:\nOur code assessment tool scans your solution at the source code level and identifies potential issues and dependencies that could pose challenges during the upgrade process. You will be provided with a comprehensive dashboard that provides an overview of issues across your entire solution and estimates of how much effort will be required for each issue to be remediated.\nEach issue in the report is categorized by severity, allowing you to prioritize your efforts. Whether it’s a mandatory issue blocking upgrade or an optional issue identifying opportunities to take advantage of features available in the latest .NET framework, you’ll know exactly where you need to focus your attention.\n\nIssues can provide exact locations within your source code where issues were detected, making troubleshooting and fixing dependencies a breeze. Easily navigate through projects and pinpoint areas that need attention. You can jump to a line that requires your attention, address issues and mark them as fixed, and save the current state of the issues and report so you or your coworkers can pick up exactly where you left off, making collaboration easier than ever. We also include relevant links to documentation, best practices, and community discussions to give you the guidance you need to tackle each challenge.\n \nInstall the Visual Studio Extension\nPre-requisites:\nWindows operating system\nVisual Studio 2022 version 17.1 or later\nInstallation:\nIf you don’t already have the .NET Upgrade Assistant installed, you can download and install the extension from the Visual Studio Marketplace or install it from inside Visual Studio.\nNote: The .NET Upgrade Assistant extension now installs on a per-user basis so there’s no requirement for elevated admin permissions to install. This addresses a need voiced by some users who don’t have admin permissions on their dev machines. More information and troubleshooting suggestions may be found in this blog post. \n \nInstall the CLI tool\nPrerequisites:\n.NET SDK\nThe .NET Upgrade Assistant is also available as a .NET global tool. You can install the tool with the following command:\ndotnet tool install -g upgrade-assistant\nSimilarly, because the .NET Upgrade Assistant is installed as a .NET tool, it can be easily updated by running:\ndotnet tool update -g upgrade-assistant\n \nAnalyze applications with Visual Studio\nOnce you have installed the Visual Studio extension, you are all set to analyze your application in Visual Studio. You can do so by right clicking on your solution in the Solution Explorer and selecting Upgrade.\n\nThe tool will open a window offering you to either create a new report or open an existing one.\n\nTo start a new report, select the projects you want to analyze on the next screen. Web projects are already checked for you, but you may change the selection by checking or unchecking the boxes next to the projects. When the tool runs its assessment, it also analyzes the dependencies for your selected projects. \n\nOn the next screen you can select your preferred target framework for the upgrade. If you need help deciding which target framework is right for you, please check out this blog post.\n\nNext you will choose the components from the previously selected projects that you want to analyze. You can select just your source code and settings, or also include all your code’s binary dependencies for analysis. A custom config file may also be included to change the way that the rules for analysis work. After this selection, hit Analyze to begin the assessment of your application and receive your report\n\n \nAnalyze applications with the CLI\nAfter you’ve installed the .NET Upgrade Assistant CLI tool, open a terminal window and navigate to the directory that contains the project you want to analyze. You can use the following command to see the available options the CLI provides:\nupgrade-assistant --help\nRun analysis on your application with:\nupgrade-assistant analyze\nThe CLI tool provides an interactive way of choosing which project to analyze. Use the arrow keys to select an item, and press Enter to run the item. Select the project you want to analyze. Follow the prompts in the command terminal to make the same selections as outlined above in the Visual Studio extension. When the analysis is done, you will be provided with a report in the format you selected.\n \nInterpret Results\nAfter analysis in Visual Studio, the tool will provide you with a dashboard summary and detailed report. The report will show you information about the number of projects analyzed, issues and incidents found, and an estimate of how much effort each issue, incident, and project will take to be fixed.\n\nYou can view aggregate issues for the whole solution or dig into project specific views. Here you can see detailed information on each incident, get help on how to fix them, jump to their location in code, and so on. You can view these issues by type of issue or by component so that you can understand where the bulk of the issues in the report originate from.\n\n\n \nShare results\nBoth the CLI tool and Visual Studio allow you to save the results of the analysis in various formats so that you may share the report with others. In Visual Studio, just click the export icon in the top right corner of the tool window and select your desired export format. \n\nIn the CLI tool, the final selection before your report is generated will be to select your desired export format. Press Enter to select, then you will be prompted to enter a name for your report. The tool will then generate your report in the format you selected. \n\nThe tool can generate reports in HTML, CSV, and JSON formats. The HTML report looks very similar to the dashboard you’ll see in the Visual Studio after the analysis is completed.\n\nYou can export these reports with various privacy modes so that you can feel confident that those who receive the reports will have exactly the right amount of information required to understand what work needs to be done without risking exposing sensitive information.\n\n \nUseful Materials\nFor supported languages, project types, and upgrade paths, please refer to our Microsoft Learn documentation for the .NET Upgrade Assistant.\nDocumentation: Overview of the .NET Upgrade Assistant – .NET Core | Microsoft Learn\nInstall: How to install the .NET Upgrade Assistant – .NET Core | Microsoft Learn\nGetting started: .NET Upgrade Assistant | Get Started (microsoft.com)\n \nFeedback\nPlease give us your feedback or report any issues either by filing an issue directly in the .NET Upgrade Assistant repository, or via the Visual Studio feedback channel by choosing Help | Send Feedback in Visual Studio. Please mention “.NET Upgrade Assistant” in the title so it will get routed to our team quickly. We appreciate your input and want to build the best tools for you! \n \nThe post Code Assessment with .NET Upgrade Assistant appeared first on Visual Studio Blog.",
        "dc:creator": "McKenna Barlow",
        "content": "<p>We are thrilled to announce the latest enhancements to the .NET Upgrade Assistant. .NET Upgrade Assistant helps upgrade solutions to newer versions of .NET. Whether you’re upgrading from .NET Framework to .NET 8 or just between .NET Core versions (from .NET 6 or 7 to .NET 8 or 9),</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/code-assessment-with-net-upgrade-assistant/\">Code Assessment with .NET Upgrade Assistant</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "We are thrilled to announce the latest enhancements to the .NET Upgrade Assistant. .NET Upgrade Assistant helps upgrade solutions to newer versions of .NET. Whether you’re upgrading from .NET Framework to .NET 8 or just between .NET Core versions (from .NET 6 or 7 to .NET 8 or 9),\nThe post Code Assessment with .NET Upgrade Assistant appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=249505",
        "categories": [
          "Visual Studio",
          ".NET",
          "ASP.NET",
          "Extensions",
          "Update",
          "Upgrade",
          "Upgrade Assistant",
          "Visual Studio 2022"
        ],
        "isoDate": "2024-06-25T17:00:54.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "\r\n                            Dropbox Platform Team\r\n            \t\t\t",
        "title": "Dropbox API server root certificate changes coming in 2026",
        "link": "https://dropbox.tech/developers/api-server-certificate-changes",
        "pubDate": "Wed, 26 Jun 2024 07:30:00 -0700",
        "content:encodedSnippet": "The Dropbox API servers will be updated with certificates issued from a new root starting on or after January 1, 2026.\nSome of the official Dropbox SDKs implemented certificate pinning based on a list of root certificates included in the SDKs. These certificates will stop working in many web browsers and devices in 2026, so Dropbox needs to change which root is used to issue its server certificates. Apps using these SDKs need to be updated to the latest versions of the Dropbox SDKs to ensure uninterrupted access to the API.\nThe versions listed below have been updated to maintain compatibility with the Dropbox API servers going forward:\nJava SDK v7.0.0 or greater\n.NET SDK v7.0.0 or greater\nNote that apps using older versions of the .NET SDK are only affected if they call DropboxCertHelper.InitializeCertPinning().\nPython SDK v12.0.2 or greater\nIf you are using any of the above SDKs, please update your app(s) to use the latest versions of these SDKs as soon as possible to ensure continued access to the Dropbox API.\nThe following official Dropbox SDKs are not affected:\nJavaScript SDK\nObjective-C SDK\nSwift SDK\nThird party libraries may or may not be affected by these changes. Please consult their documentation for further information.\nIf you have any questions, you can always reach us on our forum or via our contact form.",
        "dc:creator": "\r\n                            Dropbox Platform Team\r\n            \t\t\t",
        "content": "Learn about planned changes to the root certificates used on the Dropbox API servers, and how that will affect SDKs used to access the Dropbox API.",
        "contentSnippet": "Learn about planned changes to the root certificates used on the Dropbox API servers, and how that will affect SDKs used to access the Dropbox API.",
        "guid": "https://dropbox.tech/developers/api-server-certificate-changes",
        "categories": [
          "Announcements"
        ],
        "isoDate": "2024-06-26T14:30:00.000Z"
      }
    ]
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": [
      {
        "creator": "sunyzero",
        "title": "AMD 7840HS 미니 PC, Firebat MN56 리뷰",
        "link": "http://sunyzero.tistory.com/298",
        "pubDate": "Sun, 30 Jun 2024 22:01:02 +0900",
        "author": "sunyzero",
        "comments": "http://sunyzero.tistory.com/298#entry298comment",
        "content": "<p data-ke-size=\"size16\">AMD의 7840HS CPU (내장 그래픽 780M)을 탑재한 미니PC Firebat mn56을 알리에서 구입했다. 지난번 n100 미니 PC도 좋지만 성능이 더 좋다는 미니PC도 궁금했기 때문이었다. 보통 Beelink나 GMKtek, Firebat 제품을 많이 구매하는데, Beelink는 약간 소음이 있다고 한다. 대형 플라워 팬을 가지고 있는 Firebat MN56이 조용하다길래 해당 제품으로 구매했다.</p>\n<p data-ke-size=\"size16\">보통 고성능 미니PC는 AMD의 7840HS나 7735HS를 많이 사용하는데, 비슷하게 보이지만 비교하면 CPU 세대가 다르고 7840HS쪽의 내장 그래픽이 훨씬 성능이 좋다는 것이 가장 큰 차이다. (AMD의 미니PC용 CPU는 십자리숫자가 세대를 의미한다. 따라서 77<span style=\"background-color: #f6e199;\">3</span>5 는 3세대, 77<span style=\"background-color: #f6e199;\">4</span>0은 4세대이다)</p>\n<p data-ke-size=\"size16\">24년 3월에 구입해서 4월초부터 사용해서 현재까지 약 2개월 정도 사용했고 그에 따라서 리뷰를 남긴다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size26\">1. 제품 스펙 및 특징</h2>\n<table style=\"background-color: #ffffff; color: #5c5c5c; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td style=\"color: #666666;\">제품명</td>\n<td style=\"color: #666666;\">Firebat MN56</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">CPU</td>\n<td style=\"color: #666666;\">AMD Ryzen 7840HS [1]<br />3.8GHz, 8 core, 16MB cache, Memory(DDR5 5600Mhz)</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">RAM</td>\n<td style=\"color: #666666;\"><span style=\"background-color: #ffffff; color: #666666; text-align: start;\">16GB</span>&nbsp; = 8GB (DDR5, 5600MHz) x2&nbsp;<br />= 램이 약간 부족한 듯 싶어서 따로 삼성 DDR5 16GB를 2개 구입해서 업그레이드 했다.</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">SSD</td>\n<td style=\"color: #666666;\">NVMe 512GB (양쯔 메모리)</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">Network (Wired)</td>\n<td style=\"color: #666666;\">intel i226 (2.5Ghz)<br />Realtek RTL8111H (1Gbps)</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">Network (Wireless)</td>\n<td style=\"color: #666666;\">Intel AX200<br />- WiFi 6E, Bluetooth 5.3</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">USB</td>\n<td style=\"color: #666666;\"><span style=\"background-color: #f6e199;\">USB-C (USB4 40Gbps, DP-Alt 디스플레이 지원) x1</span><br />USB-A 3.2 Gen1 (5Gbps) x2 (전면)<br />USB-A 2.0 x2 (후면)</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">디스플레이</td>\n<td style=\"color: #666666;\">HDMI 2.1 (4K 60Hz) <span style=\"background-color: #ffffff; color: #666666; text-align: start;\">x1</span> <br />DP 1.4&nbsp; (4K 60Hz) <span style=\"background-color: #ffffff; color: #666666; text-align: start;\">x1</span></td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">Audio</td>\n<td style=\"color: #666666;\">Realtek audio<br />마이크, 헤드폰 겸용 3극 단자 지원</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">Power</td>\n<td style=\"color: #666666;\">20V/5A DC 어댑터</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">Price</td>\n<td style=\"color: #666666;\">$300 초반 (세금 포함)</td>\n</tr>\n</tbody>\n</table>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">Firebat MN56에서 제공하는 전후면 인터페이스는 아래 그림을 보면 쉽게 이해할 수 있다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"mn56 front rear.jpg\" data-origin-width=\"1084\" data-origin-height=\"915\"><span data-url=\"https://blog.kakaocdn.net/dn/GAq2q/btsIhvX9IVN/JjQGwwyK1OIaKK6oKxVuI0/img.jpg\" data-phocus=\"phocus\" data-alt=\"Firebat mn56 7840HS - 후면(위), 전면(아래)\"><img src=\"https://blog.kakaocdn.net/dn/GAq2q/btsIhvX9IVN/JjQGwwyK1OIaKK6oKxVuI0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FGAq2q%2FbtsIhvX9IVN%2FJjQGwwyK1OIaKK6oKxVuI0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"mn56 front rear.jpg\" data-origin-width=\"1084\" data-origin-height=\"915\"/></span><figcaption>Firebat mn56 7840HS - 후면(위), 전면(아래)</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">위 사진에서 제품의 후면 및 전면 단자를 순서대로 적으면 아래와 같다.</p>\n<table style=\"background-color: #ffffff; color: #5c5c5c; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td style=\"color: #666666;\">후면 단자 <br />(왼쪽부터)</td>\n<td style=\"color: #666666;\">전원(20V, 5A), 2.5G LAN (i226-v), 1G LAN(Realtek), DP 1.4, HDMI 2.1, USB 2.0 2개</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">전면 단자<br /><span style=\"background-color: #ffffff; color: #666666; text-align: start;\">(왼쪽부터)</span> </td>\n<td style=\"color: #666666;\">전원 버튼, 헤드폰 3극 단자, USB 3.2 Gen1 (5Gbps) 2개, USB4 (DP-alt, PD지원), LED 버튼</td>\n</tr>\n</tbody>\n</table>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">후면의 USB-C 단자는 DC 전원 전용이므로 USB4나 TB4(썬더볼트4) 단자를 꼽으면 부팅하다가 그냥 꺼진다. 실제로 100W를 지원하는 썬더볼트4 독을 연결해봤는데 전원이 잠깐 들어왔다가 바로 꺼졌다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">원래 시스템에서 USB4 포트를 2개까지 지원하는데 1개만 만들어 둔 것은 좀 아쉽다고 생각한다. 만일 2개를 지원했다면 USB 허브 연결과 USB-C 외장 모니터까지 바로 연결할 수 있을텐데 말이다.</p>\n<p data-ke-size=\"size16\">전원 버튼이 매우 민감해서 헤드폰 잭이나 USB 단자를 꼽다가 눌러서 꺼트린 적이 있었다. 이건 좀 주의해야 할 듯 싶다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size26\">2. 내부 구조</h2>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">뒷판은 나사를 빼면 들어낼 수 있다. 딱히 조심해야 할 것은 없다. 뒷판은 VESA 홀 규격을 지원하고 있다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"resize_20240325_203029_mn56.jpg\" data-origin-width=\"1200\" data-origin-height=\"1600\"><span data-url=\"https://blog.kakaocdn.net/dn/b8A0gu/btsIigTrIUz/jXkxvbHk9TmdykIqxiAu31/img.jpg\" data-phocus=\"phocus\" data-alt=\"Firebat MN56 7840HS 뒷판 내부\"><img src=\"https://blog.kakaocdn.net/dn/b8A0gu/btsIigTrIUz/jXkxvbHk9TmdykIqxiAu31/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb8A0gu%2FbtsIigTrIUz%2FjXkxvbHk9TmdykIqxiAu31%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"resize_20240325_203029_mn56.jpg\" data-origin-width=\"1200\" data-origin-height=\"1600\"/></span><figcaption>Firebat MN56 7840HS 뒷판 내부</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">램은 삼성 DDR5 5600으로 장착되어있고, SSD는 NVMe 양쯔 메모리 제품인 듯 싶다. 디램리스로 보인다. NVMe를 들어내면 아랫쪽에 intel AX200NGW 무선 모듈이 존재한다. 무선 모듈과 NVMe SSD와 간격이 너무 좁아서 NVMe에 양면 방열판은 사용이 불가하다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"resize_20240325_203231 ax200ngw.jpg\" data-origin-width=\"1200\" data-origin-height=\"900\"><span data-url=\"https://blog.kakaocdn.net/dn/kU6cR/btsIgY7AYgB/eFqkfDa2jksh06E5djbYrk/img.jpg\" data-phocus=\"phocus\" data-alt=\"Firebat MN56 7840HS 무선 모듈 intel AX200\"><img src=\"https://blog.kakaocdn.net/dn/kU6cR/btsIgY7AYgB/eFqkfDa2jksh06E5djbYrk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FkU6cR%2FbtsIgY7AYgB%2FeFqkfDa2jksh06E5djbYrk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"resize_20240325_203231 ax200ngw.jpg\" data-origin-width=\"1200\" data-origin-height=\"900\"/></span><figcaption>Firebat MN56 7840HS 무선 모듈 intel AX200</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">CMOD clear 점퍼는 NVMe 슬롯 바로 근처에 빨간색 점퍼로 되어있다. 혹시라도 CMOS 설정을 잘못해서 부팅이 잘 안되면 클리어쪽으로 점퍼를 바꾸고 재부팅하면 된다. 물론 재부팅 후에는 다시 원상복구를 해야 한다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"resize_20240325_203139 cmos clear.jpg\" data-origin-width=\"1200\" data-origin-height=\"900\"><span data-url=\"https://blog.kakaocdn.net/dn/dDXbRc/btsIixOczL2/CSJGztrzRfwapT1udZ8ja1/img.jpg\" data-phocus=\"phocus\" data-alt=\"Firebat MN56 7840HS - CMOS clear jumper\"><img src=\"https://blog.kakaocdn.net/dn/dDXbRc/btsIixOczL2/CSJGztrzRfwapT1udZ8ja1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdDXbRc%2FbtsIixOczL2%2FCSJGztrzRfwapT1udZ8ja1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"resize_20240325_203139 cmos clear.jpg\" data-origin-width=\"1200\" data-origin-height=\"900\"/></span><figcaption>Firebat MN56 7840HS - CMOS clear jumper</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">참고로 메인보드의 바이오스는 AMI를 사용하며, 설정할 수 있는 것은 별로 없으며, 전원 설정을 BALANCED, QUIET, PERFORMANCE 정도로 설정할 수 있는 정도만 만질 수 있다. 오버 기능도 있긴 한데, 가뜩이나 발열도 못잡는데 오버하면 CPU나 메인보드가 죽을 수도 있다고 생각된다.</p>\n<p data-ke-size=\"size16\">시스템에 대한 자세한 정보는 CPU-Z로 확인해보면 다음과 같이 살펴볼 수 있다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"firebat mn56 7840hs CPU-z.jpg\" data-origin-width=\"606\" data-origin-height=\"603\"><span data-url=\"https://blog.kakaocdn.net/dn/eGuSGF/btsIhv4VmwU/mLSWXb0ocjZUzDBLa2oKa1/img.jpg\" data-phocus=\"phocus\" data-alt=\"AMD 7840HS - CPU-Z\"><img src=\"https://blog.kakaocdn.net/dn/eGuSGF/btsIhv4VmwU/mLSWXb0ocjZUzDBLa2oKa1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeGuSGF%2FbtsIhv4VmwU%2FmLSWXb0ocjZUzDBLa2oKa1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"firebat mn56 7840hs CPU-z.jpg\" data-origin-width=\"606\" data-origin-height=\"603\"/></span><figcaption>AMD 7840HS - CPU-Z</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"firebat mn56 7840hs mainboard.jpg\" data-origin-width=\"606\" data-origin-height=\"603\"><span data-url=\"https://blog.kakaocdn.net/dn/ySi4Q/btsIjaLP2nB/0kk3Q7saNv3zOSJoij4n7K/img.jpg\" data-phocus=\"phocus\" data-alt=\"Firebat MN56 mainboard, BIOS, PCIe\"><img src=\"https://blog.kakaocdn.net/dn/ySi4Q/btsIjaLP2nB/0kk3Q7saNv3zOSJoij4n7K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FySi4Q%2FbtsIjaLP2nB%2F0kk3Q7saNv3zOSJoij4n7K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"firebat mn56 7840hs mainboard.jpg\" data-origin-width=\"606\" data-origin-height=\"603\"/></span><figcaption>Firebat MN56 mainboard, BIOS, PCIe</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size26\">3. 발열 및 팬 소음</h2>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">전원 정책(power control policy)를 balanced로 두는 경우 유튜브나 음악을 틀어놓고, 구글 문서 작업을 할 경우 CPU 사용량은 10~20%이내를 유지했고, 온도도 매우 착했다. 아래 그림에서 볼 수 있듯이 평상시 온도는 CPU의 경우 40도 내외였고, 간혹 갑자기 로드가 치솟을 때도 70도를 넘지 않았다. CPU의 내장 그래픽인 GPU 코어의 경우 35~43도 정도로 매우 착했다. 그리고 삼성 DDR5 램의 경우 평상시에도 CPU보다 약간 더 높은 온도로서 약 45도 정도를 유지했다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"firebat mn56 7840hs HWmonitor - copy crop.jpg\" data-origin-width=\"942\" data-origin-height=\"1829\"><span data-url=\"https://blog.kakaocdn.net/dn/bORHss/btsIhw3QZSY/n8Y4KXBOD9V9lqbyVdAe7k/img.jpg\" data-phocus=\"phocus\" data-alt=\"Firebat MN56 7840HS - CPU, GPU, RAM temperature\"><img src=\"https://blog.kakaocdn.net/dn/bORHss/btsIhw3QZSY/n8Y4KXBOD9V9lqbyVdAe7k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbORHss%2FbtsIhw3QZSY%2Fn8Y4KXBOD9V9lqbyVdAe7k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"firebat mn56 7840hs HWmonitor - copy crop.jpg\" data-origin-width=\"942\" data-origin-height=\"1829\"/></span><figcaption>Firebat MN56 7840HS - CPU, GPU, RAM temperature</figcaption>\n</figure>\n</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">다만 게임을 실행하면 온도가 매우 높은 수준으로 올라갔다. 테스트용 게임으로는 GTA5를 실행했고, FHD 해상도에 60Hz 중옵으로도 최하 70에서 80도 중반 이상까지 올라갔다. 심각할 정도로 열이 높았다.</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">특히 DDR5 램도 엄청나게 뜨거워서 75도를 왔다갔다 했다. 아래는 열화상 카메라로 찍은 사진이다. 원래 DDR5가 발열이 있긴 한데, 노트북용 램은 더 뜨거운것 같다. 아마도 겹쳐있어서 그런 것이 아닐까 싶다. 나중에 얇은 구리형 노트북용 램 방열판을 붙여봤는데 전혀 효과가 없었다. 혹시라도 램 방열판을 붙이실 분들은 그냥 하지 마시라고 권해드리고 싶다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"resize_20240325_203029_firebat_mn56.jpg\" data-origin-width=\"1600\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/daVYnG/btsIgOcYJTm/RSq4dkTk1ucKaM1FL7x4y0/img.jpg\" data-phocus=\"phocus\" data-alt=\"Firebat MN56 7840HS - temperature (game playing)\"><img src=\"https://blog.kakaocdn.net/dn/daVYnG/btsIgOcYJTm/RSq4dkTk1ucKaM1FL7x4y0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdaVYnG%2FbtsIgOcYJTm%2FRSq4dkTk1ucKaM1FL7x4y0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"resize_20240325_203029_firebat_mn56.jpg\" data-origin-width=\"1600\" data-origin-height=\"960\"/></span><figcaption>Firebat MN56 7840HS - temperature (game playing)</figcaption>\n</figure>\n</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">특히 위 그림에 표시된 특정 부분이 뜨거웠다. 살펴보니 LR15 칩은 Vrms로 전원칩이고, 그 아래에 있는 JWH7030도 같은 전원쪽 칩셋인거 같은데, 특이하게 총 5개의 칩셋 중에 왼쪽의 2개만 뜨겁고 나머지는 미지근하다. 전원 칩셋 중에 2개만 열심히 일하는 것 같다. 그래서 라즈베리파이에 붙이는 용도로 샀던 방열판을 LR15에 붙여봤는데, 큰 효과는 없었다. 게다가 JWH7030은 너무 작아서 붙일 수 있는 방열판이 없었다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"resize_20240412_162752.jpg\" data-origin-width=\"1024\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/xcBNi/btsIhgtdjWN/tl3Yz7Fk9ZEwyVKXUal4y1/img.jpg\" data-phocus=\"phocus\" data-alt=\"Firebat MN56 - LR15, JWH7030 Vrms\"><img src=\"https://blog.kakaocdn.net/dn/xcBNi/btsIhgtdjWN/tl3Yz7Fk9ZEwyVKXUal4y1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FxcBNi%2FbtsIhgtdjWN%2Ftl3Yz7Fk9ZEwyVKXUal4y1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"resize_20240412_162752.jpg\" data-origin-width=\"1024\" data-origin-height=\"768\"/></span><figcaption>Firebat MN56 - LR15, JWH7030 Vrms</figcaption>\n</figure>\n</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">Firebat에서 뭔가 뒷판을 냉각할 수 있는 애드온 쿨러를 만들던지 해야지 이거 너무 뜨거워서 문제일 듯 싶다. 실제로 지금은 그냥 뒷판 따고 거기에 노트북 쿨러용 팬을 거치해서 쓰고 있다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size26\">4. 소프트웨어 드라이버</h2>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">n100의 경우 드라이버가 제대로 구비되지 않아서 좀 고생을 했는데, Firebat MN56 7840HS 제품은 거의 표준 드라이버를 사용해서 따로 드라이버를 백업 받을 필요가 없었다. 해당 제품은 AMD에서 종합 드라이버, 인텔 무선 드라이버를 다운로드해서 설치하면 끝이었다.[2] 나머지는 윈도우 기본 드라이버로 모두 인식되었다.</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">특히 i226-v 2.5Gbps LAN의 경우 드라이버를 다운로드 하는 방법과, 속도 저하 및 끊김 등의 문제가 생길 수 있으므로 이 글 아래에 있는 링크를 참고하기 바란다.</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">리눅스에서는 따로 드라이버를 설치해줄 필요가 없었다. Fedora 40 설치시 아무런 문제없이 잘 설치되었다. 현재는 윈도11, 리눅스를 듀얼 부팅으로 사용하고 있다.</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">참고로 미니 PC의 경우 기본으로 탑재되어있는 윈도우가 해킹 프로그램이 설치되어있는 경우도 있다고 하니, 그냥 밀어버리고 새롭게 설치하는 것이 좋다. 그런데 표준 드라이버를 사용하지 않는 경우에는 호환성에 문제가 있어서 드라이버를 미리 백업받는 것을 권장하지만, 이 제품(Firebat MN56)처럼 표준 드라이버를 사용하는 경우에는 그냥 포맷해도 문제가 없다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size26\">5. 총평</h2>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">전체적으로 발열이 문제인 것을 제외하면 호환성이나 관련 문제는 없었다. 이 제품은 장단점은 아래와 같다.</p>\n<table style=\"background-color: #ffffff; color: #5c5c5c; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td style=\"color: #666666;\">장점</td>\n<td style=\"color: #666666;\">윗면에 대형 플라워 팬을 사용해서 소음이 적다.<br />AMD나 intel의 표준 하드웨어 드라이버를 사용하므로 소프트웨어 호환성 걱정이 없다.<br />USB4를 지원하므로 USB-C로 모니터 출력이나 혹은 썬더볼트 독을 연결하면 엄청난 확장을 할 수 있다.<br />평상시에는 10W 수준으로 적은 전력을 소비하는 장점이 있다.</td>\n</tr>\n<tr>\n<td style=\"color: #666666;\">단점</td>\n<td style=\"color: #666666;\">게임 실행시 발열이 엄청나게 발생한다. 뒷판을 열어서 식히지 않으면 장기적인 사용에서 문제가 될 가능성이 있다고 생각된다. <br />다만 일반 오피스 사용이나 유튜브 시청 정도로는 발열이 거의 없다.</td>\n</tr>\n</tbody>\n</table>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">이 제품은 게임 실행시 발열이 심했기에 따로 냉각하지 않으면 고장날지도 모른다는 생각이 들었다. 솔직히 80~90도에 가까운 발열을 제품이 계속 버틸 수 있을까 의문이다. 하지만 리눅스 서버로 사용하면 게임 실행시와 달리 발열도 없으므로 꽤 괜찮다고 생각한다.</p>\n<p style=\"background-color: #ffffff; color: #5c5c5c; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">레퍼런스</h2>\n<p data-ke-size=\"size16\">[1] AMD 7840hs spec. <a href=\"https://www.amd.com/ko/products/processors/laptop/ryzen/7000-series/amd-ryzen-7-7840hs.html\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.amd.com/ko/products/processors/laptop/ryzen/7000-series/amd-ryzen-7-7840hs.html</a></p>\n<p data-ke-size=\"size16\">[2] i225-v, i226-v 드라이버 설치 및 끊김 문제 설정, <a href=\"https://sunyzero.tistory.com/276\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://sunyzero.tistory.com/276</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">히스토리</h2>\n<p data-ke-size=\"size16\">20240630 초안</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "AMD의 7840HS CPU (내장 그래픽 780M)을 탑재한 미니PC Firebat mn56을 알리에서 구입했다. 지난번 n100 미니 PC도 좋지만 성능이 더 좋다는 미니PC도 궁금했기 때문이었다. 보통 Beelink나 GMKtek, Firebat 제품을 많이 구매하는데, Beelink는 약간 소음이 있다고 한다. 대형 플라워 팬을 가지고 있는 Firebat MN56이 조용하다길래 해당 제품으로 구매했다.\n보통 고성능 미니PC는 AMD의 7840HS나 7735HS를 많이 사용하는데, 비슷하게 보이지만 비교하면 CPU 세대가 다르고 7840HS쪽의 내장 그래픽이 훨씬 성능이 좋다는 것이 가장 큰 차이다. (AMD의 미니PC용 CPU는 십자리숫자가 세대를 의미한다. 따라서 7735 는 3세대, 7740은 4세대이다)\n24년 3월에 구입해서 4월초부터 사용해서 현재까지 약 2개월 정도 사용했고 그에 따라서 리뷰를 남긴다.\n \n1. 제품 스펙 및 특징\n제품명\nFirebat MN56\n\n\nCPU\nAMD Ryzen 7840HS [1]\n3.8GHz, 8 core, 16MB cache, Memory(DDR5 5600Mhz)\n\n\nRAM\n16GB  = 8GB (DDR5, 5600MHz) x2 \n= 램이 약간 부족한 듯 싶어서 따로 삼성 DDR5 16GB를 2개 구입해서 업그레이드 했다.\n\n\nSSD\nNVMe 512GB (양쯔 메모리)\n\n\nNetwork (Wired)\nintel i226 (2.5Ghz)\nRealtek RTL8111H (1Gbps)\n\n\nNetwork (Wireless)\nIntel AX200\n- WiFi 6E, Bluetooth 5.3\n\n\nUSB\nUSB-C (USB4 40Gbps, DP-Alt 디스플레이 지원) x1\nUSB-A 3.2 Gen1 (5Gbps) x2 (전면)\nUSB-A 2.0 x2 (후면)\n\n\n디스플레이\nHDMI 2.1 (4K 60Hz) x1 \nDP 1.4  (4K 60Hz) x1\n\n\nAudio\nRealtek audio\n마이크, 헤드폰 겸용 3극 단자 지원\n\n\nPower\n20V/5A DC 어댑터\n\n\nPrice\n$300 초반 (세금 포함)\n\n\n\nFirebat MN56에서 제공하는 전후면 인터페이스는 아래 그림을 보면 쉽게 이해할 수 있다.\nFirebat mn56 7840HS - 후면(위), 전면(아래)\n\n\n위 사진에서 제품의 후면 및 전면 단자를 순서대로 적으면 아래와 같다.\n후면 단자 \n(왼쪽부터)\n전원(20V, 5A), 2.5G LAN (i226-v), 1G LAN(Realtek), DP 1.4, HDMI 2.1, USB 2.0 2개\n\n\n전면 단자\n(왼쪽부터) \n전원 버튼, 헤드폰 3극 단자, USB 3.2 Gen1 (5Gbps) 2개, USB4 (DP-alt, PD지원), LED 버튼\n\n\n\n후면의 USB-C 단자는 DC 전원 전용이므로 USB4나 TB4(썬더볼트4) 단자를 꼽으면 부팅하다가 그냥 꺼진다. 실제로 100W를 지원하는 썬더볼트4 독을 연결해봤는데 전원이 잠깐 들어왔다가 바로 꺼졌다.\n원래 시스템에서 USB4 포트를 2개까지 지원하는데 1개만 만들어 둔 것은 좀 아쉽다고 생각한다. 만일 2개를 지원했다면 USB 허브 연결과 USB-C 외장 모니터까지 바로 연결할 수 있을텐데 말이다.\n전원 버튼이 매우 민감해서 헤드폰 잭이나 USB 단자를 꼽다가 눌러서 꺼트린 적이 있었다. 이건 좀 주의해야 할 듯 싶다.\n \n2. 내부 구조\n뒷판은 나사를 빼면 들어낼 수 있다. 딱히 조심해야 할 것은 없다. 뒷판은 VESA 홀 규격을 지원하고 있다.\nFirebat MN56 7840HS 뒷판 내부\n\n\n램은 삼성 DDR5 5600으로 장착되어있고, SSD는 NVMe 양쯔 메모리 제품인 듯 싶다. 디램리스로 보인다. NVMe를 들어내면 아랫쪽에 intel AX200NGW 무선 모듈이 존재한다. 무선 모듈과 NVMe SSD와 간격이 너무 좁아서 NVMe에 양면 방열판은 사용이 불가하다.\nFirebat MN56 7840HS 무선 모듈 intel AX200\n\n\nCMOD clear 점퍼는 NVMe 슬롯 바로 근처에 빨간색 점퍼로 되어있다. 혹시라도 CMOS 설정을 잘못해서 부팅이 잘 안되면 클리어쪽으로 점퍼를 바꾸고 재부팅하면 된다. 물론 재부팅 후에는 다시 원상복구를 해야 한다.\nFirebat MN56 7840HS - CMOS clear jumper\n\n\n참고로 메인보드의 바이오스는 AMI를 사용하며, 설정할 수 있는 것은 별로 없으며, 전원 설정을 BALANCED, QUIET, PERFORMANCE 정도로 설정할 수 있는 정도만 만질 수 있다. 오버 기능도 있긴 한데, 가뜩이나 발열도 못잡는데 오버하면 CPU나 메인보드가 죽을 수도 있다고 생각된다.\n시스템에 대한 자세한 정보는 CPU-Z로 확인해보면 다음과 같이 살펴볼 수 있다.\nAMD 7840HS - CPU-Z\n\nFirebat MN56 mainboard, BIOS, PCIe\n\n\n \n \n3. 발열 및 팬 소음\n전원 정책(power control policy)를 balanced로 두는 경우 유튜브나 음악을 틀어놓고, 구글 문서 작업을 할 경우 CPU 사용량은 10~20%이내를 유지했고, 온도도 매우 착했다. 아래 그림에서 볼 수 있듯이 평상시 온도는 CPU의 경우 40도 내외였고, 간혹 갑자기 로드가 치솟을 때도 70도를 넘지 않았다. CPU의 내장 그래픽인 GPU 코어의 경우 35~43도 정도로 매우 착했다. 그리고 삼성 DDR5 램의 경우 평상시에도 CPU보다 약간 더 높은 온도로서 약 45도 정도를 유지했다.\nFirebat MN56 7840HS - CPU, GPU, RAM temperature\n\n\n다만 게임을 실행하면 온도가 매우 높은 수준으로 올라갔다. 테스트용 게임으로는 GTA5를 실행했고, FHD 해상도에 60Hz 중옵으로도 최하 70에서 80도 중반 이상까지 올라갔다. 심각할 정도로 열이 높았다.\n특히 DDR5 램도 엄청나게 뜨거워서 75도를 왔다갔다 했다. 아래는 열화상 카메라로 찍은 사진이다. 원래 DDR5가 발열이 있긴 한데, 노트북용 램은 더 뜨거운것 같다. 아마도 겹쳐있어서 그런 것이 아닐까 싶다. 나중에 얇은 구리형 노트북용 램 방열판을 붙여봤는데 전혀 효과가 없었다. 혹시라도 램 방열판을 붙이실 분들은 그냥 하지 마시라고 권해드리고 싶다.\nFirebat MN56 7840HS - temperature (game playing)\n\n\n특히 위 그림에 표시된 특정 부분이 뜨거웠다. 살펴보니 LR15 칩은 Vrms로 전원칩이고, 그 아래에 있는 JWH7030도 같은 전원쪽 칩셋인거 같은데, 특이하게 총 5개의 칩셋 중에 왼쪽의 2개만 뜨겁고 나머지는 미지근하다. 전원 칩셋 중에 2개만 열심히 일하는 것 같다. 그래서 라즈베리파이에 붙이는 용도로 샀던 방열판을 LR15에 붙여봤는데, 큰 효과는 없었다. 게다가 JWH7030은 너무 작아서 붙일 수 있는 방열판이 없었다.\nFirebat MN56 - LR15, JWH7030 Vrms\n\n\n \nFirebat에서 뭔가 뒷판을 냉각할 수 있는 애드온 쿨러를 만들던지 해야지 이거 너무 뜨거워서 문제일 듯 싶다. 실제로 지금은 그냥 뒷판 따고 거기에 노트북 쿨러용 팬을 거치해서 쓰고 있다.\n \n4. 소프트웨어 드라이버\nn100의 경우 드라이버가 제대로 구비되지 않아서 좀 고생을 했는데, Firebat MN56 7840HS 제품은 거의 표준 드라이버를 사용해서 따로 드라이버를 백업 받을 필요가 없었다. 해당 제품은 AMD에서 종합 드라이버, 인텔 무선 드라이버를 다운로드해서 설치하면 끝이었다.[2] 나머지는 윈도우 기본 드라이버로 모두 인식되었다.\n특히 i226-v 2.5Gbps LAN의 경우 드라이버를 다운로드 하는 방법과, 속도 저하 및 끊김 등의 문제가 생길 수 있으므로 이 글 아래에 있는 링크를 참고하기 바란다.\n \n리눅스에서는 따로 드라이버를 설치해줄 필요가 없었다. Fedora 40 설치시 아무런 문제없이 잘 설치되었다. 현재는 윈도11, 리눅스를 듀얼 부팅으로 사용하고 있다.\n참고로 미니 PC의 경우 기본으로 탑재되어있는 윈도우가 해킹 프로그램이 설치되어있는 경우도 있다고 하니, 그냥 밀어버리고 새롭게 설치하는 것이 좋다. 그런데 표준 드라이버를 사용하지 않는 경우에는 호환성에 문제가 있어서 드라이버를 미리 백업받는 것을 권장하지만, 이 제품(Firebat MN56)처럼 표준 드라이버를 사용하는 경우에는 그냥 포맷해도 문제가 없다.\n \n5. 총평\n전체적으로 발열이 문제인 것을 제외하면 호환성이나 관련 문제는 없었다. 이 제품은 장단점은 아래와 같다.\n장점\n윗면에 대형 플라워 팬을 사용해서 소음이 적다.\nAMD나 intel의 표준 하드웨어 드라이버를 사용하므로 소프트웨어 호환성 걱정이 없다.\nUSB4를 지원하므로 USB-C로 모니터 출력이나 혹은 썬더볼트 독을 연결하면 엄청난 확장을 할 수 있다.\n평상시에는 10W 수준으로 적은 전력을 소비하는 장점이 있다.\n\n\n단점\n게임 실행시 발열이 엄청나게 발생한다. 뒷판을 열어서 식히지 않으면 장기적인 사용에서 문제가 될 가능성이 있다고 생각된다. \n다만 일반 오피스 사용이나 유튜브 시청 정도로는 발열이 거의 없다.\n\n\n\n이 제품은 게임 실행시 발열이 심했기에 따로 냉각하지 않으면 고장날지도 모른다는 생각이 들었다. 솔직히 80~90도에 가까운 발열을 제품이 계속 버틸 수 있을까 의문이다. 하지만 리눅스 서버로 사용하면 게임 실행시와 달리 발열도 없으므로 꽤 괜찮다고 생각한다.\n \n레퍼런스\n[1] AMD 7840hs spec. https://www.amd.com/ko/products/processors/laptop/ryzen/7000-series/amd-ryzen-7-7840hs.html\n[2] i225-v, i226-v 드라이버 설치 및 끊김 문제 설정, https://sunyzero.tistory.com/276\n \n히스토리\n20240630 초안",
        "guid": "http://sunyzero.tistory.com/298",
        "categories": [
          "컴퓨터 관련/기타 등등",
          "amd 7840hs",
          "firebat mn56 mini pc",
          "미니PC",
          "알리 익스프레스"
        ],
        "isoDate": "2024-06-30T13:01:02.000Z"
      }
    ]
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": [
      {
        "creator": "xguru",
        "title": "보드게임 리뷰: Salton Sea – “이런 걸 게임으로 만들었다고?”",
        "link": "https://xguru.net/2331",
        "pubDate": "Wed, 26 Jun 2024 09:37:41 +0000",
        "content:encodedSnippet": "지열 에너지와 리튬을 동시에 추출 가능한 미국의 호수 “Salton Sea(솔턴 시)“를 기반으로 회사를 운영하는 보드게임.\n\n\n\n\n캘리포니아의 유명 휴양지 팜스프링스 동쪽으로 100km쯤 떨어져 있는 내륙 염수 호수 Salton Sea. 면적이 서울의 1.3배 크기인 889 km² 정도인데, 해수면보다 고도가 낮고 최고 수심이 13m 밖에 되지 않는다. \nSalton Sea from Wikipedia\n\n\n\n1905년 콜로라도 강의 범람으로 인해 우연히 형성된 이 호수는 염도가 44g/L로 태평양(35g/L)보다 짜고, 내륙에 있어서 매년 더 농도가 증가하고 있다. 한때 휴양지로 인기가 많았으나 농업 활동으로 인한 비료/농약 유입, 물공급 감소, 고온으로 염분이 증가하다가 90년대에는 물고기가 대규모로 폐사하는 등 생태계에 큰 피해를 주었다. 현재 Salton Sea는 환경 재앙의 상징으로 여겨지며, 생태계 복원과 환경 보호를 위한 노력이 진행 중인 곳인데 왜 여기를 기반으로 보드게임을 만들었을까? ( 이 내용들 중 일부는 매뉴얼 초반에 설명되어 있는 것임)\n재생 에너지를 이야기할 때 태양광/풍력이 주로 이야기 되지만, 요즘엔 지열 에너지(Geothermal energy)도 각광을 받기 시작하고 있다. \nfrom 미국 EPA(Environmental Protection Agency)\n지표 근처의 700~1200도에 달하는 마그마로 가열된 암석을 통해 끓어오른 지하수를 퍼올려 수증기 터빈을 통해 발전을 시키고, 온도가 낮아져 액체로 돌아가면 다시 지하로 주입해서 암석에 재가열시키는 순환이 가능하다. 지열 에너지의 장점은 태양광/풍력과 달리 24시간, 1년 내내 일정하게 전력 추출이 된다. 단점은 지구상에서 이렇게 고온을 가진 지점에 접근 가능한 장소가 희소하다는 것. 그래서 많은 나라들이 태양광/풍력을 주 재생 에너지원으로 선택한다.\n그러나 밤에는 태양이 뜨지않고, 바람이 불지 않을 때도 있으니 전기를 저장해둬야 한다. 현 시점에서 전력 저장에 가장 효율적인 것은 리튬 배터리를 이용하는 것. 전기차 덕분에 유명해져 버린 리튬은 에너지 순환의 중추적 요소. 리튬은 매우 흔한 원소이고, 지구상에 풍부하게 존재하지만 최근까지는 수요가 많지 않다가 갑자기 수요가 폭증하면서 광산이 부족해 져서 리튬 가격이 폭등하기도 했다.\n리튬을 가장 많이 함유하고 있는 곳은 바다이고, 물에 용해 되어 있다. 하지만 바다에 있는 리튬은 과하게 희석 되어있고 많은 양을 증발시켜 처리해야 하므로 수율이 좋지 않다. 그래서 요즘은 바다보다 염분이 높은 염수 기반으로 리튬을 얻는 메커니즘도 활용되고 있다. 물은 온도가 높을 수록 더 많은 염분을 용해시키는데, 앞서 말한 뜨거운 지하수를 퍼올려서 열과 함께 리튬도 추출이 가능한데, 물이 뜨거워질수록 리터당 추출할 수 있는 리튬이 양의 늘어난다. 즉 지열 발전소는 지구 내부의 열을 이용해 전력을 생산하며, 동시에 리튬의 잠재적인 공급원도 될 수 있다.\n솔턴 시는 이 모든 것이 어우러진 곳이다. 캘리포니아 지진의 원인인 산 안드레아스 단층의 끝자락에 붙어 있어서 화산과 지열 활동이 나타난다. 이 지열 활동이 활발한 지역을 시추해서 수증기와 뜨거운 물을 얻을수 있는데, 수증기로는 발전을 시키고, 뜨거운 물은 염수이므로 리튬을 추출해서 동시에 판매가 가능해 진다. 전력 생산과 저장을 동시에 하는 회사가 만들어질수 있다는 이야기.\n그래서 이제 실제 Salton Sea 보드게임 이야기로 들어가보면..\n각 플레이어는 염수를 퍼내어서 지열/리튬을 추출하는 기업의 대표고, 회사를 잘 경영해서 최고의 승점을 얻는 사람이 이기는 전형적인 일꾼 놓기에 약간의 덱빌딩을 섞은 전략게임.\n\n\n\n\n엔지니어 4명을 가지고 시작하여 회사가 발전하면서 총 7명까지 늘어나게 되는데, 엔지니어들로 할 수 있는 액션은 3개의 분야로 나눠진다.\n산업 행동 : 굴착 허가 획득하기, 드릴로 시추하기, 염수 추출하기, 리튬/지열에너지로 가공하기, 드릴과 공장 수리하기\n상업 행동 : 리튬/전력 판매하기, 계약 체결하기, 계약 수행하기\n경영 행동 : 연구, 주식 매입, 사업프로젝트 진행(회사 발전), 재정 지원 받기\n\n\n\n\n$1, $3, $5 로 가격이 매겨진 액션덱을 돈으로 쓰다보니 어떤 걸 돈으로 내고, 어떤걸 유지해서 액션으로 써야할지 미친듯이 고민하게 만드는 게임.\n굴착 허가 획득에서는 소유지 카드를 가져와서 차례대로 쌓게 되는데, 소유지 카드별로 염수/암반 등이 다르게 그려져 있음. 드릴로 시추할때 암반이 있으면 드릴의 내구도가 떨어지게 되고, 나중에 적절하게 수리하지 않으면 시추 행동을 하지 못할 수 있음. 드릴로 시추해서 염수가 있는 곳까지 파고 들어가면 염수 추출이 가능. 추출한 염수를 창고에 저장했다가 리튬/지열에너지로 가공하게 되는데 이를 위해서는 창고도 처음엔 두칸만 주고, 점차 확장해 나가야 함.\n리튬/전력을 만들고 판매하는 메커니즘이 조금 독특한데, 염수에서 리튬/전력을 만들때 기본 비용이 발생하므로 내 액션 카드를 금액으로 내서 써야함. 매입하는 회사별로 금액이 다르고 금액이 결정되면 현재 시장에 깔린 행동 카드를 금액에 맞게 골라서 가져오는 방식인데, 액션카드가 $1, $3, $5로 세가지인데 좋은 액션을 위해서는 비싼 카드로 받아야 하지만, 그러면 액션의 선택 범위가 줄어들어 버려서 어떤 카드를 돈으로 써서 다음 액션을 준비할 지가 엄청난 고민. 단순 판매가 아니라 계약을 체결하고 수행하면 돈과 승점, 주식, 사업 발전등의 혜택을 주기 때문에 이것도 승리를 위해서는 신경 써야 함.\n\n\n\n\n연구를 통해서는 기본으로 하는 동작들을 강화 가능. 염수나 리튬을 더 추출한다거나, 굴착 허가 받을때나 수리할때마다 할인해준다거나 하는 등. 그리고 이렇게 번 돈을 가지고, 우리가 리튬/전력을 사가는 회사의 주식을 구매해서 미래를 내다보는 재투자 전략이 녹아있다는게 놀라움. 우리꺼 사가서 니네 회사 잘나가면 나도 좋아!\n\n\n\n\nBGG 기준 난이도 3.74로 카네기와 거의 비슷한데, 미래 지향적인 테마가 너무 잘 녹아 있어서 칭찬하고 싶은 게임. 심지어 카네기의 1/4 사이즈로 박스도 작다. 한글판이 나오지 않았지만 보드게임 자체는 모두 아이콘이라 룰만 익히면 충분히 게임이 가능하다. 박스에 120분이라고 씌여 있는데, 액션 선택하기가 어려워서 첫플에 설명시간 포함해서 4시간 정도 걸린듯\nSaltonSea #보드게임 #솔턴시\nThe post 보드게임 리뷰: Salton Sea – “이런 걸 게임으로 만들었다고?” first appeared on Guru's Blog.",
        "dc:creator": "xguru",
        "comments": "https://xguru.net/2331#respond",
        "content": "<p>지열 에너지와 리튬을 동시에 추출 가능한 미국의 호수 &#8220;Salton Sea(솔턴 시)&#8220;를 기반으로 회사를 운영하는 보드게임. 캘리포니아의 유명 휴양지 팜스프링스 동쪽으로 100km쯤 떨어져 있는 내륙 염수 호수 Salton Sea. 면적이 서울의 1.3배 크기인 889 km² 정도인데, 해수면보다 고도가 낮고 최고 수심이 13m 밖에 되지 않는다. 1905년 콜로라도 강의 범람으로 인해 우연히 형성된 이 호수는 염도가 44g/L로 [&#8230;]</p>\n<p>The post <a href=\"https://xguru.net/2331\">보드게임 리뷰: Salton Sea – “이런 걸 게임으로 만들었다고?”</a> first appeared on <a href=\"https://xguru.net\">Guru's Blog</a>.</p>",
        "contentSnippet": "지열 에너지와 리튬을 동시에 추출 가능한 미국의 호수 “Salton Sea(솔턴 시)“를 기반으로 회사를 운영하는 보드게임. 캘리포니아의 유명 휴양지 팜스프링스 동쪽으로 100km쯤 떨어져 있는 내륙 염수 호수 Salton Sea. 면적이 서울의 1.3배 크기인 889 km² 정도인데, 해수면보다 고도가 낮고 최고 수심이 13m 밖에 되지 않는다. 1905년 콜로라도 강의 범람으로 인해 우연히 형성된 이 호수는 염도가 44g/L로 […]\nThe post 보드게임 리뷰: Salton Sea – “이런 걸 게임으로 만들었다고?” first appeared on Guru's Blog.",
        "guid": "https://xguru.net/?p=2331",
        "categories": [
          "보드게임"
        ],
        "isoDate": "2024-06-26T09:37:41.000Z"
      }
    ]
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "ROS2 로봇 패키지 프로그램 개발 방법 정리",
        "link": "http://daddynkidsmakers.blogspot.com/2024/06/ros2_27.html",
        "pubDate": "2024-06-28T06:44:00.000Z",
        "author": "Daddy Maker",
        "content": "<p>이 글은&nbsp;ROS2 로봇 패키지 프로그램 개발 방법 정리한다.</p><p><b>URDF 모델링</b></p><div>시뮬레이션을 위한&nbsp;<a href=\"http://wiki.ros.org/urdf/Tutorials\">Universal Robot Description Format (URDF)</a>&nbsp;을 사용해 모델링한다. URDF는 XML포맷으로 로봇을 물리적으로 정의한다. 이 모델은 주요 두 컴포넌트가 있다.&nbsp;</div><div><ul><li>LINKS: 강체(RIGID PIECE)를 정의한다. 링크는 뼈와 같은 역할을 하며 각 조인트로 연결된다.</li><li>JOINTS: 조인트는 연결된 링크 간에 운동이 가능하게 한다. 조인트는 서보 모터 등으로 구현된다.</li></ul></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjmlSGArtfXtKm8jLdQMdkbaMDaOCHYkMs6nFajpN5AfKfwjgUbUhKpivGVeYADUr03HfXvFYBp79KQWg_4jcIxgD05Wd_8JMWrwO4KCa9wYTrM7ZJwNln6q9Rtq2GVvxmLZsO4qlj03AGP492EabaEpxMCZOv5pBSxuprBCHUx-CMP9MV8_S-mL3Ig6c5g/s523/Screenshot%20from%202024-06-27%2019-04-49.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"403\" data-original-width=\"523\" height=\"215\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjmlSGArtfXtKm8jLdQMdkbaMDaOCHYkMs6nFajpN5AfKfwjgUbUhKpivGVeYADUr03HfXvFYBp79KQWg_4jcIxgD05Wd_8JMWrwO4KCa9wYTrM7ZJwNln6q9Rtq2GVvxmLZsO4qlj03AGP492EabaEpxMCZOv5pBSxuprBCHUx-CMP9MV8_S-mL3Ig6c5g/w278-h215/Screenshot%20from%202024-06-27%2019-04-49.png\" width=\"278\" /></a></div>회전 조인트는 라이다와 같이 회전 운동을 한다. 라이다를 가진 로버를 모델링을 위해, 터미널에서 다음을 설치한다.</div><div><div>sudo apt install ros-humble-joint-state-publisher-gui</div><div>sudo apt install ros-humble-xacro</div><br /></div><div><b>이동형 로버 모델링</b></div><div><div>연구를 위해, 간단한 이동형 로버를 모델링한다. 다음 명령을 실행한다.</div><div>cd ~/projects/ros2/src</div></div><div><div>ros2 pkg create --build-type ament_cmake basic_mobile_robot</div><div>mkdir config launch maps meshes models params rviz worlds</div><div>cd ~/projects/ros2</div><div>colcon build</div></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiVr7pRBJFjBnC8XyjTYcEXbbEPeby44CQj2y02RwQfJVqjZqjXQ7C6e-N0OgNPwYi-stoKNh3jS79pDOQ3dewFwEp5Duuor3goCh4vTL6VgVTwtLuJg5WK27iemLQBzv5YUsTH9faGOIDPMzbh0MZ2lwmLlGHZ2DfgFRbeJ_axeXpAJcroP5EF6HfdsB7_\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"135\" data-original-width=\"675\" height=\"80\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiVr7pRBJFjBnC8XyjTYcEXbbEPeby44CQj2y02RwQfJVqjZqjXQ7C6e-N0OgNPwYi-stoKNh3jS79pDOQ3dewFwEp5Duuor3goCh4vTL6VgVTwtLuJg5WK27iemLQBzv5YUsTH9faGOIDPMzbh0MZ2lwmLlGHZ2DfgFRbeJ_axeXpAJcroP5EF6HfdsB7_=w400-h80\" width=\"400\" /></a></div><br />이제 다음과 유사한&nbsp;<a href=\"https://automaticaddison.com/coordinate-frames-and-transforms-for-ros-based-mobile-robots/\">로버 모델</a>을 만든다.&nbsp;</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjyP0lfA6ttIr6N5N4FO6Yg7inkTYOYj-GPGaf3Ffznm0C_IWUQnpTp76BxDuv5kGCiMNVVMffMB_jzkgSaoRBjTDOhwRWLg6wa2vQFnss9FnMtOnNrMm3ib9wjxpOeAVH6FcrJbkiiQCeHQyOIUsh4SSa75WwS61JlSx9Xk7e_ErxLh9oqt1vJ1WlSU-i2\" style=\"margin-left: 1em; margin-right: 1em;\"></a><div class=\"separator\" style=\"clear: both;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjyP0lfA6ttIr6N5N4FO6Yg7inkTYOYj-GPGaf3Ffznm0C_IWUQnpTp76BxDuv5kGCiMNVVMffMB_jzkgSaoRBjTDOhwRWLg6wa2vQFnss9FnMtOnNrMm3ib9wjxpOeAVH6FcrJbkiiQCeHQyOIUsh4SSa75WwS61JlSx9Xk7e_ErxLh9oqt1vJ1WlSU-i2\" style=\"margin-left: 1em; margin-right: 1em;\"></a><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhpFeDg45tPiLpq2fJeH7IDZjiRuLcNDc_C0p5dnJh-hFeVgaYhrAb4wH3POV2_nJG5YM6drhyr5CasLLrm4MaudZIJr9Lyjdu_HIIkkVj0b1DP8BqwdXHwWn4V53ZM38zvZzoJvtf4JyTBO_YT1uki3XAo2o0wbvbX2V8fchHqpyvDGvNmdGjIiEveREML\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"376\" data-original-width=\"523\" height=\"144\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhpFeDg45tPiLpq2fJeH7IDZjiRuLcNDc_C0p5dnJh-hFeVgaYhrAb4wH3POV2_nJG5YM6drhyr5CasLLrm4MaudZIJr9Lyjdu_HIIkkVj0b1DP8BqwdXHwWn4V53ZM38zvZzoJvtf4JyTBO_YT1uki3XAo2o0wbvbX2V8fchHqpyvDGvNmdGjIiEveREML=w200-h144\" width=\"200\" /></a><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjyP0lfA6ttIr6N5N4FO6Yg7inkTYOYj-GPGaf3Ffznm0C_IWUQnpTp76BxDuv5kGCiMNVVMffMB_jzkgSaoRBjTDOhwRWLg6wa2vQFnss9FnMtOnNrMm3ib9wjxpOeAVH6FcrJbkiiQCeHQyOIUsh4SSa75WwS61JlSx9Xk7e_ErxLh9oqt1vJ1WlSU-i2\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"409\" data-original-width=\"570\" height=\"144\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjyP0lfA6ttIr6N5N4FO6Yg7inkTYOYj-GPGaf3Ffznm0C_IWUQnpTp76BxDuv5kGCiMNVVMffMB_jzkgSaoRBjTDOhwRWLg6wa2vQFnss9FnMtOnNrMm3ib9wjxpOeAVH6FcrJbkiiQCeHQyOIUsh4SSa75WwS61JlSx9Xk7e_ErxLh9oqt1vJ1WlSU-i2=w200-h144\" width=\"200\" /></a></div></div><br /></div><div>이 모델은 두개의 바퀴(revolute joints), 앞 바퀴(caster wheel), IMU, GPS를 가진다.&nbsp;&nbsp;</div><div>cd&nbsp;~/projects/ros2/src/basic_mobile_robot/models</div><div>subl basic_mobile_bot_v1.urdf</div><div><br /></div><div>다음 코드를 입력한다.&nbsp;</div><div><pre class=\"ndfHFb-c4YZDc-fmcmS-DARUcf\" style=\"background-color: white; font-family: &quot;Courier New&quot;, Courier, monospace, arial, sans-serif; margin-bottom: 0px; margin-top: 0px; overflow-wrap: break-word; text-wrap: wrap; user-select: text;\"><span style=\"font-size: x-small;\">&lt;?xml version=\"1.0\" ?&gt;\n&lt;robot name=\"basic_mobile_bot\" xmlns:xacro=\"http://ros.org/wiki/xacro\"&gt;\n\n  &lt;!-- ****************** ROBOT CONSTANTS *******************************  --&gt;\n  &lt;!-- Define the size of the robot's main chassis in meters --&gt;\n  &lt;xacro:property name=\"base_width\" value=\"0.39\"/&gt;\n  &lt;xacro:property name=\"base_length\" value=\"0.70\"/&gt;\n  &lt;xacro:property name=\"base_height\" value=\"0.20\"/&gt;\n\t\n  &lt;!-- Define the shape of the robot's two back wheels in meters --&gt;\n  &lt;xacro:property name=\"wheel_radius\" value=\"0.14\"/&gt;\n  &lt;xacro:property name=\"wheel_width\" value=\"0.06\"/&gt;\n\n  &lt;!-- x-axis points forward, y-axis points to left, z-axis points upwards --&gt;\n  &lt;!-- Define the gap between the wheel and chassis along y-axis in meters --&gt;\n  &lt;xacro:property name=\"wheel_ygap\" value=\"0.035\"/&gt;\n\n  &lt;!-- Position the wheels along the z-axis --&gt;\n  &lt;xacro:property name=\"wheel_zoff\" value=\"0.05\"/&gt;\n\n  &lt;!-- Position the wheels along the x-axis --&gt;\n  &lt;xacro:property name=\"wheel_xoff\" value=\"0.221\"/&gt;\n\n  &lt;!-- Position the caster wheel along the x-axis --&gt;\n  &lt;xacro:property name=\"caster_xoff\" value=\"0.217\"/&gt;\n\n  &lt;!-- Define intertial property macros  --&gt;\n  &lt;xacro:macro name=\"box_inertia\" params=\"m w h d\"&gt;\n    &lt;inertial&gt;\n      &lt;origin xyz=\"0 0 0\" rpy=\"${pi/2} 0 ${pi/2}\"/&gt;\n      &lt;mass value=\"${m}\"/&gt;\n      &lt;inertia ixx=\"${(m/12) * (h*h + d*d)}\" ixy=\"0.0\" ixz=\"0.0\" iyy=\"${(m/12) * (w*w + d*d)}\" iyz=\"0.0\" izz=\"${(m/12) * (w*w + h*h)}\"/&gt;\n    &lt;/inertial&gt;\n  &lt;/xacro:macro&gt;\n\n  &lt;xacro:macro name=\"cylinder_inertia\" params=\"m r h\"&gt;\n    &lt;inertial&gt;\n      &lt;origin xyz=\"0 0 0\" rpy=\"${pi/2} 0 0\" /&gt;\n      &lt;mass value=\"${m}\"/&gt;\n      &lt;inertia ixx=\"${(m/12) * (3*r*r + h*h)}\" ixy = \"0\" ixz = \"0\" iyy=\"${(m/12) * (3*r*r + h*h)}\" iyz = \"0\" izz=\"${(m/2) * (r*r)}\"/&gt;\n    &lt;/inertial&gt;\n  &lt;/xacro:macro&gt;\n\n  &lt;xacro:macro name=\"sphere_inertia\" params=\"m r\"&gt;\n    &lt;inertial&gt;\n      &lt;mass value=\"${m}\"/&gt;\n      &lt;inertia ixx=\"${(2/5) * m * (r*r)}\" ixy=\"0.0\" ixz=\"0.0\" iyy=\"${(2/5) * m * (r*r)}\" iyz=\"0.0\" izz=\"${(2/5) * m * (r*r)}\"/&gt;\n    &lt;/inertial&gt;\n  &lt;/xacro:macro&gt;\n\n  &lt;!-- ****************** ROBOT BASE FOOTPRINT ***************************  --&gt;\n  &lt;!-- Define the center of the main robot chassis projected on the ground --&gt;\t\n  &lt;link name=\"base_footprint\"/&gt;\n\n  &lt;!-- The base footprint of the robot is located underneath the chassis --&gt;\n  &lt;joint name=\"base_joint\" type=\"fixed\"&gt;\n    &lt;parent link=\"base_footprint\"/&gt;\n    &lt;child link=\"base_link\" /&gt;\n    &lt;origin xyz=\"0.0 0.0 ${(wheel_radius+wheel_zoff)}\" rpy=\"0 0 0\"/&gt;\n  &lt;/joint&gt;\n\n  &lt;!-- ********************** ROBOT BASE *********************************  --&gt;\n  &lt;link name=\"base_link\"&gt;\n    &lt;visual&gt;\n      &lt;origin xyz=\"0 0 -0.05\" rpy=\"1.5707963267949 0 3.141592654\"/&gt;\n      &lt;geometry&gt;\n        &lt;mesh filename=\"package://basic_mobile_robot/meshes/robot_base.stl\" /&gt;\n      &lt;/geometry&gt;\n      &lt;material name=\"Red\"&gt;\n        &lt;color rgba=\"${255/255} ${0/255} ${0/255} 1.0\"/&gt;\n      &lt;/material&gt;\n    &lt;/visual&gt;\n\n    &lt;collision&gt;\n      &lt;geometry&gt;\n        &lt;box size=\"${base_length} ${base_width} ${base_height}\"/&gt;\n      &lt;/geometry&gt;\n    &lt;/collision&gt;\n\n    &lt;xacro:box_inertia m=\"40.0\" w=\"${base_width}\" d=\"${base_length}\" h=\"${base_height}\"/&gt;\n    \n  &lt;/link&gt;\n\n  &lt;gazebo reference=\"base_link\"&gt;\n    &lt;material&gt;Gazebo/Red&lt;/material&gt;\n  &lt;/gazebo&gt;\n\n  &lt;!-- *********************** DRIVE WHEELS ******************************  --&gt;\n\n  &lt;xacro:macro name=\"wheel\" params=\"prefix x_reflect y_reflect\"&gt;\n    &lt;link name=\"${prefix}_link\"&gt;\n      &lt;visual&gt;\n        &lt;origin xyz=\"0 0 0\" rpy=\"1.5707963267949 0 0\"/&gt;\n        &lt;geometry&gt;\n            &lt;cylinder radius=\"${wheel_radius}\" length=\"${wheel_width}\"/&gt;\n        &lt;/geometry&gt;\n        &lt;material name=\"White\"&gt;\n          &lt;color rgba=\"${255/255} ${255/255} ${255/255} 1.0\"/&gt;\n        &lt;/material&gt;\n      &lt;/visual&gt;\n      \n      &lt;collision&gt;\n        &lt;origin xyz=\"0 0 0\" rpy=\"${pi/2} 0 0\"/&gt;\n        &lt;geometry&gt;\n          &lt;cylinder radius=\"${wheel_radius}\" length=\"${wheel_width}\"/&gt;\n        &lt;/geometry&gt;\n      &lt;/collision&gt;\n      \n      &lt;xacro:cylinder_inertia m=\"110.5\" r=\"${wheel_radius}\" h=\"${wheel_width}\"/&gt;\n      \n    &lt;/link&gt;\n\n    &lt;!-- Connect the wheels to the base_link at the appropriate location, and \n         define a continuous joint to allow the wheels to freely rotate about\n         an axis --&gt;\n    &lt;joint name=\"${prefix}_joint\" type=\"revolute\"&gt;\n      &lt;parent link=\"base_link\"/&gt;\n      &lt;child link=\"${prefix}_link\"/&gt;\n      &lt;origin xyz=\"${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}\" rpy=\"0 0 0\"/&gt;\n      &lt;limit upper=\"3.1415\" lower=\"-3.1415\" effort=\"30\" velocity=\"5.0\"/&gt;\n      &lt;axis xyz=\"0 1 0\"/&gt;\n    &lt;/joint&gt;\n  &lt;/xacro:macro&gt;\n\n  &lt;!-- Instantiate two wheels using the macro we just made through the \n       xacro:wheel tags. We also define the parameters to have one wheel\n       on both sides at the back of our robot (i.e. x_reflect=-1). --&gt;\n  &lt;xacro:wheel prefix=\"drivewhl_l\" x_reflect=\"-1\" y_reflect=\"1\" /&gt;\n  &lt;xacro:wheel prefix=\"drivewhl_r\" x_reflect=\"-1\" y_reflect=\"-1\" /&gt;\n\n  &lt;!-- *********************** CASTER WHEEL ******************************  --&gt;\n  &lt;!-- We add a caster wheel. It will be modeled as sphere.\n       We define the wheel’s geometry, material and the joint to connect it to \n       base_link at the appropriate location. --&gt;\n  &lt;link name=\"front_caster\"&gt;\n    &lt;visual&gt;\n      &lt;geometry&gt;\n        &lt;sphere radius=\"${(wheel_radius+wheel_zoff-(base_height/2))}\"/&gt;\n      &lt;/geometry&gt;\n      &lt;material name=\"White\"&gt;\n        &lt;color rgba=\"${255/255} ${255/255} ${255/255} 1.0\"/&gt;\n      &lt;/material&gt;\n    &lt;/visual&gt;\n    &lt;collision&gt;\n      &lt;origin xyz=\"0 0 0\" rpy=\"0 0 0\"/&gt;\n      &lt;geometry&gt;\n        &lt;sphere radius=\"${(wheel_radius+wheel_zoff-(base_height/2))}\"/&gt;\n      &lt;/geometry&gt;\n    &lt;/collision&gt;\n    &lt;xacro:sphere_inertia m=\"10.05\" r=\"${(wheel_radius+wheel_zoff-(base_height/2))}\"/&gt;\n  &lt;/link&gt;\n\n  &lt;gazebo reference=\"front_caster\"&gt;\n    &lt;mu1&gt;0.01&lt;/mu1&gt;\n    &lt;mu2&gt;0.01&lt;/mu2&gt;\n    &lt;material&gt;Gazebo/White&lt;/material&gt;\n  &lt;/gazebo&gt;\n\n  &lt;joint name=\"caster_joint\" type=\"fixed\"&gt;\n    &lt;parent link=\"base_link\"/&gt;\n    &lt;child link=\"front_caster\"/&gt;\n    &lt;origin xyz=\"${caster_xoff} 0.0 ${-(base_height/2)}\" rpy=\"0 0 0\"/&gt;\n  &lt;/joint&gt;\n  \n  &lt;!-- *********************** IMU SETUP *********************************  --&gt;\n  &lt;!-- Each sensor must be attached to a link.                              --&gt; \n  \n  &lt;joint name=\"imu_joint\" type=\"fixed\"&gt;\n    &lt;parent link=\"base_link\"/&gt;\n    &lt;child link=\"imu_link\"/&gt;\n    &lt;origin xyz=\"-0.10 0 0.05\" rpy=\"0 0 0\"/&gt;\n  &lt;/joint&gt;\n\n  &lt;link name=\"imu_link\"/&gt;\n\n  &lt;!-- *********************** GPS SETUP **********************************  --&gt;\n  &lt;joint name=\"gps_joint\" type=\"fixed\"&gt;\n    &lt;parent link=\"base_link\"/&gt;\n    &lt;child link=\"gps_link\"/&gt;\n    &lt;origin xyz=\"0.10 0 0.05\" rpy=\"0 0 0\"/&gt;\n  &lt;/joint&gt;\n\n  &lt;link name=\"gps_link\"/&gt;\n\n&lt;/robot&gt;</span></pre></div><div><br /></div><div>이제 보이는 형태를 표현할 메쉬 파일을 STL 형식으로 다음 폴더에 저장한다. 해당 메쉬파일은&nbsp;<a href=\"https://drive.google.com/drive/folders/1e9yB8f_LD7ty0M1h_mbd0kB8Hxr4TvfV\">여기</a>(<a href=\"https://drive.google.com/drive/folders/1e9yB8f_LD7ty0M1h_mbd0kB8Hxr4TvfV\">https://drive.google.com/drive/folders/1e9yB8f_LD7ty0M1h_mbd0kB8Hxr4TvfV</a>) 에서 다운로드한다.</div><div>cd&nbsp;~/projects/ros2/src/basic_mobile_robot/meshes</div><div><br /></div><div>참고로, 이 메쉬 파일은 블렌더(blander)로 모델링된 것이다. 메쉬 저장 결과는 다음과 같다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgyes9PvAn6Ecg_6QznGTSlViHCiGEIkEwe6EvVs9B_BxXQQBhdwYo52BfgIa4pVADvjK3QYlqMqdEKnzISrTqmwHOfZcl5oCyebiBG0bvmNotTse1aREXq04TBNKqZFwHYFwvkhqCnaLSWNt9LhNrzxVRXAeswQNPoN8YEnPbw59FP2-1B0PxL8XcIA7tD\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"350\" data-original-width=\"943\" height=\"149\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgyes9PvAn6Ecg_6QznGTSlViHCiGEIkEwe6EvVs9B_BxXQQBhdwYo52BfgIa4pVADvjK3QYlqMqdEKnzISrTqmwHOfZcl5oCyebiBG0bvmNotTse1aREXq04TBNKqZFwHYFwvkhqCnaLSWNt9LhNrzxVRXAeswQNPoN8YEnPbw59FP2-1B0PxL8XcIA7tD=w400-h149\" width=\"400\" /></a></div><div><br /></div><div>다음과 같이 명령 실행한다.</div><div>cd&nbsp;~/projects/ros2/src/basic_mobile_robot</div></div><div>subl package.xml</div><div><br /></div><div>이제 package.xml 파일을 다음과 같이 수정한다.</div><div><div>&nbsp; &lt;buildtool_depend&gt;ament_cmake&lt;/buildtool_depend&gt;</div><div>&nbsp; &lt;exec_depend&gt;<a href=\"https://automaticaddison.com/robot-state-publisher-vs-joint-state-publisher/\">joint_state_publisher</a>&lt;/exec_depend&gt;</div><div>&nbsp; &lt;exec_depend&gt;robot_state_publisher&lt;/exec_depend&gt;</div><div>&nbsp; &lt;exec_depend&gt;rviz&lt;/exec_depend&gt;</div><div>&nbsp; &lt;exec_depend&gt;xacro&lt;/exec_depend&gt;</div><div><br /></div>패키지 실행 파일(launch)을 생성한다.&nbsp;</div><div><div>cd ~/projects/ros2/src/basic_mobile_robot/launch</div><div>subl basic_mobile_bot_v1.launch.py</div></div><div><br /></div><div>실행 코드는 여기(<a href=\"https://drive.google.com/file/d/1pOgjTNuItNbn39nq0ztjxN0XBxj_v6H2/view\">https://drive.google.com/file/d/1pOgjTNuItNbn39nq0ztjxN0XBxj_v6H2/view</a>)서 다운로드해 넣는다.</div><div><div><span style=\"font-size: x-small;\">import os</span></div><div><span style=\"font-size: x-small;\">from launch import LaunchDescription</span></div><div><span style=\"font-size: x-small;\">from launch.actions import DeclareLaunchArgument</span></div><div><span style=\"font-size: x-small;\">from launch.conditions import IfCondition, UnlessCondition</span></div><div><span style=\"font-size: x-small;\">from launch.substitutions import Command, LaunchConfiguration</span></div><div><span style=\"font-size: x-small;\">from launch_ros.actions import Node</span></div><div><span style=\"font-size: x-small;\">from launch_ros.substitutions import FindPackageShare</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">def generate_launch_description():</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; # Set the path to different files and folders.</span></div><div><span style=\"font-size: x-small;\">&nbsp; pkg_share = FindPackageShare(package='basic_mobile_robot').find('basic_mobile_robot')</span></div><div><span style=\"font-size: x-small;\">&nbsp; default_launch_dir = os.path.join(pkg_share, 'launch')</span></div><div><span style=\"font-size: x-small;\">&nbsp; default_model_path = os.path.join(pkg_share, 'models/basic_mobile_bot_v1.urdf')</span></div><div><span style=\"font-size: x-small;\">&nbsp; robot_name_in_urdf = 'basic_mobile_bot'</span></div><div><span style=\"font-size: x-small;\">&nbsp; default_rviz_config_path = os.path.join(pkg_share, 'rviz/urdf_config.rviz')</span></div><div><span style=\"font-size: x-small;\">&nbsp;&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; # Launch configuration variables specific to simulation</span></div><div><span style=\"font-size: x-small;\">&nbsp; gui = LaunchConfiguration('gui')</span></div><div><span style=\"font-size: x-small;\">&nbsp; model = LaunchConfiguration('model')</span></div><div><span style=\"font-size: x-small;\">&nbsp; rviz_config_file = LaunchConfiguration('rviz_config_file')</span></div><div><span style=\"font-size: x-small;\">&nbsp; use_robot_state_pub = LaunchConfiguration('use_robot_state_pub')</span></div><div><span style=\"font-size: x-small;\">&nbsp; use_rviz = LaunchConfiguration('use_rviz')</span></div><div><span style=\"font-size: x-small;\">&nbsp; use_sim_time = LaunchConfiguration('use_sim_time')</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; # Declare the launch arguments&nbsp;&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; declare_model_path_cmd = DeclareLaunchArgument(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='model',&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; default_value=default_model_path,&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; description='Absolute path to robot urdf file')</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp;&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; declare_rviz_config_file_cmd = DeclareLaunchArgument(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='rviz_config_file',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; default_value=default_rviz_config_path,</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; description='Full path to the RVIZ config file to use')</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp;&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; declare_use_joint_state_publisher_cmd = DeclareLaunchArgument(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='gui',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; default_value='True',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; description='Flag to enable joint_state_publisher_gui')</span></div><div><span style=\"font-size: x-small;\">&nbsp;&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; declare_use_robot_state_pub_cmd = DeclareLaunchArgument(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='use_robot_state_pub',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; default_value='True',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; description='Whether to start the robot state publisher')</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; declare_use_rviz_cmd = DeclareLaunchArgument(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='use_rviz',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; default_value='True',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; description='Whether to start RVIZ')</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp;&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; declare_use_sim_time_cmd = DeclareLaunchArgument(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='use_sim_time',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; default_value='True',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; description='Use simulation (Gazebo) clock if true')</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; # Specify the actions</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; # Publish the joint state values for the non-fixed joints in the URDF file.</span></div><div><span style=\"font-size: x-small;\">&nbsp; start_joint_state_publisher_cmd = Node(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; condition=UnlessCondition(gui),</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; package='joint_state_publisher',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; executable='joint_state_publisher',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='joint_state_publisher')</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; # A GUI to manipulate the joint state values</span></div><div><span style=\"font-size: x-small;\">&nbsp; start_joint_state_publisher_gui_node = Node(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; condition=IfCondition(gui),</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; package='joint_state_publisher_gui',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; executable='joint_state_publisher_gui',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='joint_state_publisher_gui')</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; # Subscribe to the joint states of the robot, and publish the 3D pose of each link.</span></div><div><span style=\"font-size: x-small;\">&nbsp; start_robot_state_publisher_cmd = Node(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; condition=IfCondition(use_robot_state_pub),</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; package='robot_state_publisher',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; executable='robot_state_publisher',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; parameters=[{'use_sim_time': use_sim_time,&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; 'robot_description': Command(['xacro ', model])}],</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; arguments=[default_model_path])</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; # Launch RViz</span></div><div><span style=\"font-size: x-small;\">&nbsp; start_rviz_cmd = Node(</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; condition=IfCondition(use_rviz),</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; package='rviz2',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; executable='rviz2',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; name='rviz2',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; output='screen',</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; arguments=['-d', rviz_config_file])</span></div><div><span style=\"font-size: x-small;\">&nbsp;&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; # Create the launch description and populate</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld = LaunchDescription()</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; # Declare the launch options</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(declare_model_path_cmd)</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(declare_rviz_config_file_cmd)</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(declare_use_joint_state_publisher_cmd)</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(declare_use_robot_state_pub_cmd)&nbsp;&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(declare_use_rviz_cmd)&nbsp;</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(declare_use_sim_time_cmd)</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; # Add any actions</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(start_joint_state_publisher_cmd)</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(start_joint_state_publisher_gui_node)</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(start_robot_state_publisher_cmd)</span></div><div><span style=\"font-size: x-small;\">&nbsp; ld.add_action(start_rviz_cmd)</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; return ld</span></div></div><div><br /></div><div>RViz를 이용해 모델을 확인할 것이다. 그러므로, RViz 설정 파일을 다음과 같이 만든다.</div><div><div>cd ~/projects/ros2/src/basic_mobile_robot/rviz</div><div>subl urdf_config.rviz</div></div><div><br /></div><div>설정 파일 내용은 여기(<a href=\"https://drive.google.com/file/d/1YTjMqv9q12kP_JCPLgp03-WqjtJ6vyi7/view\">https://drive.google.com/file/d/1YTjMqv9q12kP_JCPLgp03-WqjtJ6vyi7/view</a>)에서 다운로드 한다. 상세 설정은 다음과 같다.&nbsp;</div><div><div><span style=\"font-size: x-small;\">Panels:</span></div><div><span style=\"font-size: x-small;\">&nbsp; - Class: rviz_common/Displays</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Help Height: 78</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Name: Displays</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Property Tree Widget:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Expanded:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; - /Global Options1</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; - /Status1</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; - /RobotModel1/Links1</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; - /TF1</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Splitter Ratio: 0.5</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Tree Height: 557</span></div><div><span style=\"font-size: x-small;\">Visualization Manager:</span></div><div><span style=\"font-size: x-small;\">&nbsp; Class: \"\"</span></div><div><span style=\"font-size: x-small;\">&nbsp; Displays:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Alpha: 0.5</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Cell Size: 1</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Class: rviz_default_plugins/Grid</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Color: 160; 160; 164</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Enabled: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Name: Grid</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Alpha: 0.6</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Class: rviz_default_plugins/RobotModel</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Description Topic:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Depth: 5</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Durability Policy: Volatile</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; History Policy: Keep Last</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Reliability Policy: Reliable</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Value: /robot_description</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Enabled: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Name: RobotModel</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Visual Enabled: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: rviz_default_plugins/TF</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Enabled: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Name: TF</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Marker Scale: 0.3</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Show Arrows: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Show Axes: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Show Names: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; Enabled: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; Global Options:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Background Color: 48; 48; 48</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Fixed Frame: base_link</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Frame Rate: 30</span></div><div><span style=\"font-size: x-small;\">&nbsp; Name: root</span></div><div><span style=\"font-size: x-small;\">&nbsp; Tools:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: rviz_default_plugins/Interact</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Hide Inactive Objects: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: rviz_default_plugins/MoveCamera</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: rviz_default_plugins/Select</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: rviz_default_plugins/FocusCamera</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: rviz_default_plugins/Measure</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Line color: 128; 128; 0</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: rviz_default_plugins/SetInitialPose</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Topic:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Depth: 5</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Durability Policy: Volatile</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; History Policy: Keep Last</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Reliability Policy: Reliable</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Value: /initialpose</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: rviz_default_plugins/PublishPoint</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Single click: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Topic:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Depth: 5</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Durability Policy: Volatile</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; History Policy: Keep Last</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Reliability Policy: Reliable</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; &nbsp; Value: /clicked_point</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; - Class: nav2_rviz_plugins/GoalTool</span></div><div><span style=\"font-size: x-small;\">&nbsp; Transformation:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Current:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Class: rviz_default_plugins/TF</span></div><div><span style=\"font-size: x-small;\">&nbsp; Value: true</span></div><div><span style=\"font-size: x-small;\">&nbsp; Views:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Current:</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Class: rviz_default_plugins/Orbit</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Name: Current View</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Target Frame: &lt;Fixed Frame&gt;</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; Value: Orbit (rviz)</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; Saved: ~</span></div></div><div><br /></div><div>빌드를 위한&nbsp; cmake 파일을 설정한다.</div><div><div>cd ~/projects/ros2/src/basic_mobile_robot</div><div>subl CMakeLists.txt</div></div><div><br /></div><div>다음 설정에서 적색 표시 부분을 추가한다.</div><div><div><span style=\"font-size: x-small;\">cmake_minimum_required(VERSION 3.8)</span></div><div><span style=\"font-size: x-small;\">project(basic_mobile_robot)</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")</span></div><div><span style=\"font-size: x-small;\">&nbsp; add_compile_options(-Wall -Wextra -Wpedantic)</span></div><div><span style=\"font-size: x-small;\">endif()</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\"># find dependencies</span></div><div><span style=\"font-size: x-small;\">find_package(ament_cmake REQUIRED)</span></div><div><span style=\"font-size: x-small;\"># uncomment the following section in order to fill in</span></div><div><span style=\"font-size: x-small;\"># further dependencies manually.</span></div><div><span style=\"font-size: x-small;\"># find_package(&lt;dependency&gt; REQUIRED)</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"color: red; font-size: x-small;\">install(</span></div><div><span style=\"color: red; font-size: x-small;\">&nbsp; DIRECTORY config launch maps meshes models params rviz src worlds</span></div><div><span style=\"color: red; font-size: x-small;\">&nbsp; DESTINATION share/${PROJECT_NAME}</span></div><div><span style=\"color: red; font-size: x-small;\">)</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">if(BUILD_TESTING)</span></div><div><span style=\"font-size: x-small;\">&nbsp; find_package(ament_lint_auto REQUIRED)</span></div><div><span style=\"font-size: x-small;\">&nbsp; # the following line skips the linter which checks for copyrights</span></div><div><span style=\"font-size: x-small;\">&nbsp; # comment the line when a copyright and license is added to all source files</span></div><div><span style=\"font-size: x-small;\">&nbsp; set(ament_cmake_copyright_FOUND TRUE)</span></div><div><span style=\"font-size: x-small;\">&nbsp; # the following line skips cpplint (only works in a git repo)</span></div><div><span style=\"font-size: x-small;\">&nbsp; # comment the line when this package is in a git repo and when</span></div><div><span style=\"font-size: x-small;\">&nbsp; # a copyright and license is added to all source files</span></div><div><span style=\"font-size: x-small;\">&nbsp; set(ament_cmake_cpplint_FOUND TRUE)</span></div><div><span style=\"font-size: x-small;\">&nbsp; ament_lint_auto_find_test_dependencies()</span></div><div><span style=\"font-size: x-small;\">endif()</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">ament_package()</span></div></div><div><br /></div><div><b>빌드 및 실행</b></div><div>다음과 같이 빌드한다.&nbsp;</div><div>cd ~/projects/ros2</div><div>colcon build</div><div><br /></div><div>다음과 같이 src 밑의 특정 패키지만 colcon 빌드할 수도 있다.</div><div>colcon build --packages-select basic_mobile_robot</div><div><div>colcon build --symlink-install --packages-select basic_mobile_robot</div><div><br /></div></div><div>다음과 같이 빌드 패키지 경로를 설정한다.</div><div>. install/setup.bash&nbsp;</div><div><br /></div><div>이제 새 터미널을 실행하고, 이 패키지를 실행해 본다.&nbsp;</div><div>ros2 launch -s basic_mobile_robot basic_mobile_bot_v1.launch.py</div><div><br /></div><div>rviz2를 실행한다.</div><div>rviz2 -d ./src/basic_mobile_robot/rviz/urdf_config.rviz&nbsp;</div><div><br /></div><div>다음과 같이 개발된 로버 모델이 보여진다.&nbsp;</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgrwLiWGckvjpHleqrVHdsN_dHBZ18gTbabtcVBsmrw4excWasNdO8EhuOrb1_9B7kwZ7Y2U6Aw9pwLtUwZ76spZfivJPkwAp8HYZ2UxvyWupocF31ucI2Nn1XRP97EHVCnGcljlgwkWjAPvgFlG2V-cZaX_RgENVW9YAmIok4x2WS36khB0o_9mBzA3Hmk\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"521\" data-original-width=\"1032\" height=\"162\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgrwLiWGckvjpHleqrVHdsN_dHBZ18gTbabtcVBsmrw4excWasNdO8EhuOrb1_9B7kwZ7Y2U6Aw9pwLtUwZ76spZfivJPkwAp8HYZ2UxvyWupocF31ucI2Nn1XRP97EHVCnGcljlgwkWjAPvgFlG2V-cZaX_RgENVW9YAmIok4x2WS36khB0o_9mBzA3Hmk\" width=\"320\" /></a></div><br />모델 좌표계를 확인하기 위해, 다음 명령을 실행한다.&nbsp;</div><div>sudo apt install ros-humble-tf2-tools</div><div>ros2 run tf2_tools view_frames.py</div><div>evince frames.pdf</div><div><br /></div><div>다음과 같이 각 링크와 조인트 좌표를 확인해 본다.&nbsp;</div><div>ros2 run tf2_ros tf2_echo base_link front_caster</div><div><br /></div><div><div><b>레퍼런스</b></div><div><ul><li><a href=\"https://automaticaddison.com/set-up-lidar-for-a-simulated-mobile-robot-in-ros-2/\">Set Up LIDAR for a Simulated Mobile Robot in ROS 2</a>&nbsp;(<a href=\"https://drive.google.com/drive/folders/1VrgqtETVSuheNITop0MXDy4BY3U8IphQ\">code</a>)</li><li><a href=\"https://automaticaddison.com/how-to-simulate-a-robot-using-gazebo-and-ros-2/\">Build the Warehouse Robot</a></li><li><a href=\"https://automaticaddison.com/how-to-simulate-a-robot-using-gazebo-and-ros-2/\">Create Model</a></li><li><a href=\"https://github.com/mgonzs13/ros2_rover\">ROS2 rover</a></li><li><a href=\"https://cafe.naver.com/openrt/24637\">ROS2 package development with python</a></li><li><a href=\"https://docs.ros.org/en/foxy/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.html\">Writing a simple publisher and subscriber (Python</a>)</li><li><a href=\"https://github.com/ros/urdf_tutorial/tree/ros2/\">URDF tutorial github</a>&nbsp;and&nbsp;<a href=\"https://docs.ros.org/en/rolling/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.html\">explain</a></li><li><a href=\"https://aleksandarhaber.com/how-to-create-urdf-and-launch-files-in-ros2-and-display-them-in-rviz/\">How to Create URDF and Launch Files in ROS2 and Display Them in Rviz</a></li><li><a href=\"https://www.theconstruct.ai/rviz2-tutorials-episode1-learn-tf/\">RVIZ2 Tutorials Episode Learn TF</a></li></ul></div></div>",
        "contentSnippet": "이 글은 ROS2 로봇 패키지 프로그램 개발 방법 정리한다.\nURDF 모델링\n시뮬레이션을 위한 Universal Robot Description Format (URDF) 을 사용해 모델링한다. URDF는 XML포맷으로 로봇을 물리적으로 정의한다. 이 모델은 주요 두 컴포넌트가 있다. \n\nLINKS: 강체(RIGID PIECE)를 정의한다. 링크는 뼈와 같은 역할을 하며 각 조인트로 연결된다.\nJOINTS: 조인트는 연결된 링크 간에 운동이 가능하게 한다. 조인트는 서보 모터 등으로 구현된다.\n\n\n\n회전 조인트는 라이다와 같이 회전 운동을 한다. 라이다를 가진 로버를 모델링을 위해, 터미널에서 다음을 설치한다.\n\nsudo apt install ros-humble-joint-state-publisher-gui\nsudo apt install ros-humble-xacro\n\n이동형 로버 모델링\n\n연구를 위해, 간단한 이동형 로버를 모델링한다. 다음 명령을 실행한다.\ncd ~/projects/ros2/src\n\nros2 pkg create --build-type ament_cmake basic_mobile_robot\nmkdir config launch maps meshes models params rviz worlds\ncd ~/projects/ros2\ncolcon build\n\n\n이제 다음과 유사한 로버 모델을 만든다. \n\n\n\n\n\n이 모델은 두개의 바퀴(revolute joints), 앞 바퀴(caster wheel), IMU, GPS를 가진다.  \ncd ~/projects/ros2/src/basic_mobile_robot/models\nsubl basic_mobile_bot_v1.urdf\n\n\n다음 코드를 입력한다. \n\n<?xml version=\"1.0\" ?>\n<robot name=\"basic_mobile_bot\" xmlns:xacro=\"http://ros.org/wiki/xacro\">\n\n  <!-- ****************** ROBOT CONSTANTS *******************************  -->\n  <!-- Define the size of the robot's main chassis in meters -->\n  <xacro:property name=\"base_width\" value=\"0.39\"/>\n  <xacro:property name=\"base_length\" value=\"0.70\"/>\n  <xacro:property name=\"base_height\" value=\"0.20\"/>\n\t\n  <!-- Define the shape of the robot's two back wheels in meters -->\n  <xacro:property name=\"wheel_radius\" value=\"0.14\"/>\n  <xacro:property name=\"wheel_width\" value=\"0.06\"/>\n\n  <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->\n  <!-- Define the gap between the wheel and chassis along y-axis in meters -->\n  <xacro:property name=\"wheel_ygap\" value=\"0.035\"/>\n\n  <!-- Position the wheels along the z-axis -->\n  <xacro:property name=\"wheel_zoff\" value=\"0.05\"/>\n\n  <!-- Position the wheels along the x-axis -->\n  <xacro:property name=\"wheel_xoff\" value=\"0.221\"/>\n\n  <!-- Position the caster wheel along the x-axis -->\n  <xacro:property name=\"caster_xoff\" value=\"0.217\"/>\n\n  <!-- Define intertial property macros  -->\n  <xacro:macro name=\"box_inertia\" params=\"m w h d\">\n    <inertial>\n      <origin xyz=\"0 0 0\" rpy=\"${pi/2} 0 ${pi/2}\"/>\n      <mass value=\"${m}\"/>\n      <inertia ixx=\"${(m/12) * (h*h + d*d)}\" ixy=\"0.0\" ixz=\"0.0\" iyy=\"${(m/12) * (w*w + d*d)}\" iyz=\"0.0\" izz=\"${(m/12) * (w*w + h*h)}\"/>\n    </inertial>\n  </xacro:macro>\n\n  <xacro:macro name=\"cylinder_inertia\" params=\"m r h\">\n    <inertial>\n      <origin xyz=\"0 0 0\" rpy=\"${pi/2} 0 0\" />\n      <mass value=\"${m}\"/>\n      <inertia ixx=\"${(m/12) * (3*r*r + h*h)}\" ixy = \"0\" ixz = \"0\" iyy=\"${(m/12) * (3*r*r + h*h)}\" iyz = \"0\" izz=\"${(m/2) * (r*r)}\"/>\n    </inertial>\n  </xacro:macro>\n\n  <xacro:macro name=\"sphere_inertia\" params=\"m r\">\n    <inertial>\n      <mass value=\"${m}\"/>\n      <inertia ixx=\"${(2/5) * m * (r*r)}\" ixy=\"0.0\" ixz=\"0.0\" iyy=\"${(2/5) * m * (r*r)}\" iyz=\"0.0\" izz=\"${(2/5) * m * (r*r)}\"/>\n    </inertial>\n  </xacro:macro>\n\n  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->\n  <!-- Define the center of the main robot chassis projected on the ground -->\t\n  <link name=\"base_footprint\"/>\n\n  <!-- The base footprint of the robot is located underneath the chassis -->\n  <joint name=\"base_joint\" type=\"fixed\">\n    <parent link=\"base_footprint\"/>\n    <child link=\"base_link\" />\n    <origin xyz=\"0.0 0.0 ${(wheel_radius+wheel_zoff)}\" rpy=\"0 0 0\"/>\n  </joint>\n\n  <!-- ********************** ROBOT BASE *********************************  -->\n  <link name=\"base_link\">\n    <visual>\n      <origin xyz=\"0 0 -0.05\" rpy=\"1.5707963267949 0 3.141592654\"/>\n      <geometry>\n        <mesh filename=\"package://basic_mobile_robot/meshes/robot_base.stl\" />\n      </geometry>\n      <material name=\"Red\">\n        <color rgba=\"${255/255} ${0/255} ${0/255} 1.0\"/>\n      </material>\n    </visual>\n\n    <collision>\n      <geometry>\n        <box size=\"${base_length} ${base_width} ${base_height}\"/>\n      </geometry>\n    </collision>\n\n    <xacro:box_inertia m=\"40.0\" w=\"${base_width}\" d=\"${base_length}\" h=\"${base_height}\"/>\n    \n  </link>\n\n  <gazebo reference=\"base_link\">\n    <material>Gazebo/Red</material>\n  </gazebo>\n\n  <!-- *********************** DRIVE WHEELS ******************************  -->\n\n  <xacro:macro name=\"wheel\" params=\"prefix x_reflect y_reflect\">\n    <link name=\"${prefix}_link\">\n      <visual>\n        <origin xyz=\"0 0 0\" rpy=\"1.5707963267949 0 0\"/>\n        <geometry>\n            <cylinder radius=\"${wheel_radius}\" length=\"${wheel_width}\"/>\n        </geometry>\n        <material name=\"White\">\n          <color rgba=\"${255/255} ${255/255} ${255/255} 1.0\"/>\n        </material>\n      </visual>\n      \n      <collision>\n        <origin xyz=\"0 0 0\" rpy=\"${pi/2} 0 0\"/>\n        <geometry>\n          <cylinder radius=\"${wheel_radius}\" length=\"${wheel_width}\"/>\n        </geometry>\n      </collision>\n      \n      <xacro:cylinder_inertia m=\"110.5\" r=\"${wheel_radius}\" h=\"${wheel_width}\"/>\n      \n    </link>\n\n    <!-- Connect the wheels to the base_link at the appropriate location, and \n         define a continuous joint to allow the wheels to freely rotate about\n         an axis -->\n    <joint name=\"${prefix}_joint\" type=\"revolute\">\n      <parent link=\"base_link\"/>\n      <child link=\"${prefix}_link\"/>\n      <origin xyz=\"${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}\" rpy=\"0 0 0\"/>\n      <limit upper=\"3.1415\" lower=\"-3.1415\" effort=\"30\" velocity=\"5.0\"/>\n      <axis xyz=\"0 1 0\"/>\n    </joint>\n  </xacro:macro>\n\n  <!-- Instantiate two wheels using the macro we just made through the \n       xacro:wheel tags. We also define the parameters to have one wheel\n       on both sides at the back of our robot (i.e. x_reflect=-1). -->\n  <xacro:wheel prefix=\"drivewhl_l\" x_reflect=\"-1\" y_reflect=\"1\" />\n  <xacro:wheel prefix=\"drivewhl_r\" x_reflect=\"-1\" y_reflect=\"-1\" />\n\n  <!-- *********************** CASTER WHEEL ******************************  -->\n  <!-- We add a caster wheel. It will be modeled as sphere.\n       We define the wheel’s geometry, material and the joint to connect it to \n       base_link at the appropriate location. -->\n  <link name=\"front_caster\">\n    <visual>\n      <geometry>\n        <sphere radius=\"${(wheel_radius+wheel_zoff-(base_height/2))}\"/>\n      </geometry>\n      <material name=\"White\">\n        <color rgba=\"${255/255} ${255/255} ${255/255} 1.0\"/>\n      </material>\n    </visual>\n    <collision>\n      <origin xyz=\"0 0 0\" rpy=\"0 0 0\"/>\n      <geometry>\n        <sphere radius=\"${(wheel_radius+wheel_zoff-(base_height/2))}\"/>\n      </geometry>\n    </collision>\n    <xacro:sphere_inertia m=\"10.05\" r=\"${(wheel_radius+wheel_zoff-(base_height/2))}\"/>\n  </link>\n\n  <gazebo reference=\"front_caster\">\n    <mu1>0.01</mu1>\n    <mu2>0.01</mu2>\n    <material>Gazebo/White</material>\n  </gazebo>\n\n  <joint name=\"caster_joint\" type=\"fixed\">\n    <parent link=\"base_link\"/>\n    <child link=\"front_caster\"/>\n    <origin xyz=\"${caster_xoff} 0.0 ${-(base_height/2)}\" rpy=\"0 0 0\"/>\n  </joint>\n  \n  <!-- *********************** IMU SETUP *********************************  -->\n  <!-- Each sensor must be attached to a link.                              --> \n  \n  <joint name=\"imu_joint\" type=\"fixed\">\n    <parent link=\"base_link\"/>\n    <child link=\"imu_link\"/>\n    <origin xyz=\"-0.10 0 0.05\" rpy=\"0 0 0\"/>\n  </joint>\n\n  <link name=\"imu_link\"/>\n\n  <!-- *********************** GPS SETUP **********************************  -->\n  <joint name=\"gps_joint\" type=\"fixed\">\n    <parent link=\"base_link\"/>\n    <child link=\"gps_link\"/>\n    <origin xyz=\"0.10 0 0.05\" rpy=\"0 0 0\"/>\n  </joint>\n\n  <link name=\"gps_link\"/>\n\n</robot>\n\n\n이제 보이는 형태를 표현할 메쉬 파일을 STL 형식으로 다음 폴더에 저장한다. 해당 메쉬파일은 여기(https://drive.google.com/drive/folders/1e9yB8f_LD7ty0M1h_mbd0kB8Hxr4TvfV) 에서 다운로드한다.\ncd ~/projects/ros2/src/basic_mobile_robot/meshes\n\n\n참고로, 이 메쉬 파일은 블렌더(blander)로 모델링된 것이다. 메쉬 저장 결과는 다음과 같다.\n\n\n\n\n다음과 같이 명령 실행한다.\ncd ~/projects/ros2/src/basic_mobile_robot\n\nsubl package.xml\n\n\n이제 package.xml 파일을 다음과 같이 수정한다.\n\n  <buildtool_depend>ament_cmake</buildtool_depend>\n  <exec_depend>joint_state_publisher</exec_depend>\n  <exec_depend>robot_state_publisher</exec_depend>\n  <exec_depend>rviz</exec_depend>\n  <exec_depend>xacro</exec_depend>\n\n패키지 실행 파일(launch)을 생성한다. \n\ncd ~/projects/ros2/src/basic_mobile_robot/launch\nsubl basic_mobile_bot_v1.launch.py\n\n\n실행 코드는 여기(https://drive.google.com/file/d/1pOgjTNuItNbn39nq0ztjxN0XBxj_v6H2/view)서 다운로드해 넣는다.\n\nimport os\nfrom launch import LaunchDescription\nfrom launch.actions import DeclareLaunchArgument\nfrom launch.conditions import IfCondition, UnlessCondition\nfrom launch.substitutions import Command, LaunchConfiguration\nfrom launch_ros.actions import Node\nfrom launch_ros.substitutions import FindPackageShare\n\n\ndef generate_launch_description():\n\n\n  # Set the path to different files and folders.\n  pkg_share = FindPackageShare(package='basic_mobile_robot').find('basic_mobile_robot')\n  default_launch_dir = os.path.join(pkg_share, 'launch')\n  default_model_path = os.path.join(pkg_share, 'models/basic_mobile_bot_v1.urdf')\n  robot_name_in_urdf = 'basic_mobile_bot'\n  default_rviz_config_path = os.path.join(pkg_share, 'rviz/urdf_config.rviz')\n  \n  # Launch configuration variables specific to simulation\n  gui = LaunchConfiguration('gui')\n  model = LaunchConfiguration('model')\n  rviz_config_file = LaunchConfiguration('rviz_config_file')\n  use_robot_state_pub = LaunchConfiguration('use_robot_state_pub')\n  use_rviz = LaunchConfiguration('use_rviz')\n  use_sim_time = LaunchConfiguration('use_sim_time')\n\n\n  # Declare the launch arguments  \n  declare_model_path_cmd = DeclareLaunchArgument(\n    name='model', \n    default_value=default_model_path, \n    description='Absolute path to robot urdf file')\n    \n  declare_rviz_config_file_cmd = DeclareLaunchArgument(\n    name='rviz_config_file',\n    default_value=default_rviz_config_path,\n    description='Full path to the RVIZ config file to use')\n    \n  declare_use_joint_state_publisher_cmd = DeclareLaunchArgument(\n    name='gui',\n    default_value='True',\n    description='Flag to enable joint_state_publisher_gui')\n  \n  declare_use_robot_state_pub_cmd = DeclareLaunchArgument(\n    name='use_robot_state_pub',\n    default_value='True',\n    description='Whether to start the robot state publisher')\n\n\n  declare_use_rviz_cmd = DeclareLaunchArgument(\n    name='use_rviz',\n    default_value='True',\n    description='Whether to start RVIZ')\n    \n  declare_use_sim_time_cmd = DeclareLaunchArgument(\n    name='use_sim_time',\n    default_value='True',\n    description='Use simulation (Gazebo) clock if true')\n   \n  # Specify the actions\n\n\n  # Publish the joint state values for the non-fixed joints in the URDF file.\n  start_joint_state_publisher_cmd = Node(\n    condition=UnlessCondition(gui),\n    package='joint_state_publisher',\n    executable='joint_state_publisher',\n    name='joint_state_publisher')\n\n\n  # A GUI to manipulate the joint state values\n  start_joint_state_publisher_gui_node = Node(\n    condition=IfCondition(gui),\n    package='joint_state_publisher_gui',\n    executable='joint_state_publisher_gui',\n    name='joint_state_publisher_gui')\n\n\n  # Subscribe to the joint states of the robot, and publish the 3D pose of each link.\n  start_robot_state_publisher_cmd = Node(\n    condition=IfCondition(use_robot_state_pub),\n    package='robot_state_publisher',\n    executable='robot_state_publisher',\n    parameters=[{'use_sim_time': use_sim_time, \n    'robot_description': Command(['xacro ', model])}],\n    arguments=[default_model_path])\n\n\n  # Launch RViz\n  start_rviz_cmd = Node(\n    condition=IfCondition(use_rviz),\n    package='rviz2',\n    executable='rviz2',\n    name='rviz2',\n    output='screen',\n    arguments=['-d', rviz_config_file])\n  \n  # Create the launch description and populate\n  ld = LaunchDescription()\n\n\n  # Declare the launch options\n  ld.add_action(declare_model_path_cmd)\n  ld.add_action(declare_rviz_config_file_cmd)\n  ld.add_action(declare_use_joint_state_publisher_cmd)\n  ld.add_action(declare_use_robot_state_pub_cmd)  \n  ld.add_action(declare_use_rviz_cmd) \n  ld.add_action(declare_use_sim_time_cmd)\n\n\n  # Add any actions\n  ld.add_action(start_joint_state_publisher_cmd)\n  ld.add_action(start_joint_state_publisher_gui_node)\n  ld.add_action(start_robot_state_publisher_cmd)\n  ld.add_action(start_rviz_cmd)\n\n\n  return ld\n\n\nRViz를 이용해 모델을 확인할 것이다. 그러므로, RViz 설정 파일을 다음과 같이 만든다.\n\ncd ~/projects/ros2/src/basic_mobile_robot/rviz\nsubl urdf_config.rviz\n\n\n설정 파일 내용은 여기(https://drive.google.com/file/d/1YTjMqv9q12kP_JCPLgp03-WqjtJ6vyi7/view)에서 다운로드 한다. 상세 설정은 다음과 같다. \n\nPanels:\n  - Class: rviz_common/Displays\n    Help Height: 78\n    Name: Displays\n    Property Tree Widget:\n      Expanded:\n        - /Global Options1\n        - /Status1\n        - /RobotModel1/Links1\n        - /TF1\n      Splitter Ratio: 0.5\n    Tree Height: 557\nVisualization Manager:\n  Class: \"\"\n  Displays:\n    - Alpha: 0.5\n      Cell Size: 1\n      Class: rviz_default_plugins/Grid\n      Color: 160; 160; 164\n      Enabled: true\n      Name: Grid\n    - Alpha: 0.6\n      Class: rviz_default_plugins/RobotModel\n      Description Topic:\n        Depth: 5\n        Durability Policy: Volatile\n        History Policy: Keep Last\n        Reliability Policy: Reliable\n        Value: /robot_description\n      Enabled: true\n      Name: RobotModel\n      Visual Enabled: true\n    - Class: rviz_default_plugins/TF\n      Enabled: true\n      Name: TF\n      Marker Scale: 0.3\n      Show Arrows: true\n      Show Axes: true\n      Show Names: true\n  Enabled: true\n  Global Options:\n    Background Color: 48; 48; 48\n    Fixed Frame: base_link\n    Frame Rate: 30\n  Name: root\n  Tools:\n    - Class: rviz_default_plugins/Interact\n      Hide Inactive Objects: true\n    - Class: rviz_default_plugins/MoveCamera\n    - Class: rviz_default_plugins/Select\n    - Class: rviz_default_plugins/FocusCamera\n    - Class: rviz_default_plugins/Measure\n      Line color: 128; 128; 0\n    - Class: rviz_default_plugins/SetInitialPose\n      Topic:\n        Depth: 5\n        Durability Policy: Volatile\n        History Policy: Keep Last\n        Reliability Policy: Reliable\n        Value: /initialpose\n    - Class: rviz_default_plugins/PublishPoint\n      Single click: true\n      Topic:\n        Depth: 5\n        Durability Policy: Volatile\n        History Policy: Keep Last\n        Reliability Policy: Reliable\n        Value: /clicked_point\n    - Class: nav2_rviz_plugins/GoalTool\n  Transformation:\n    Current:\n      Class: rviz_default_plugins/TF\n  Value: true\n  Views:\n    Current:\n      Class: rviz_default_plugins/Orbit\n      Name: Current View\n      Target Frame: <Fixed Frame>\n      Value: Orbit (rviz)\n    Saved: ~\n\n\n빌드를 위한  cmake 파일을 설정한다.\n\ncd ~/projects/ros2/src/basic_mobile_robot\nsubl CMakeLists.txt\n\n\n다음 설정에서 적색 표시 부분을 추가한다.\n\ncmake_minimum_required(VERSION 3.8)\nproject(basic_mobile_robot)\n\n\nif(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n  add_compile_options(-Wall -Wextra -Wpedantic)\nendif()\n\n\n# find dependencies\nfind_package(ament_cmake REQUIRED)\n# uncomment the following section in order to fill in\n# further dependencies manually.\n# find_package(<dependency> REQUIRED)\n\n\ninstall(\n  DIRECTORY config launch maps meshes models params rviz src worlds\n  DESTINATION share/${PROJECT_NAME}\n)\n\n\nif(BUILD_TESTING)\n  find_package(ament_lint_auto REQUIRED)\n  # the following line skips the linter which checks for copyrights\n  # comment the line when a copyright and license is added to all source files\n  set(ament_cmake_copyright_FOUND TRUE)\n  # the following line skips cpplint (only works in a git repo)\n  # comment the line when this package is in a git repo and when\n  # a copyright and license is added to all source files\n  set(ament_cmake_cpplint_FOUND TRUE)\n  ament_lint_auto_find_test_dependencies()\nendif()\n\n\nament_package()\n\n\n빌드 및 실행\n다음과 같이 빌드한다. \ncd ~/projects/ros2\ncolcon build\n\n\n다음과 같이 src 밑의 특정 패키지만 colcon 빌드할 수도 있다.\ncolcon build --packages-select basic_mobile_robot\n\ncolcon build --symlink-install --packages-select basic_mobile_robot\n\n\n다음과 같이 빌드 패키지 경로를 설정한다.\n. install/setup.bash \n\n\n이제 새 터미널을 실행하고, 이 패키지를 실행해 본다. \nros2 launch -s basic_mobile_robot basic_mobile_bot_v1.launch.py\n\n\nrviz2를 실행한다.\nrviz2 -d ./src/basic_mobile_robot/rviz/urdf_config.rviz \n\n\n다음과 같이 개발된 로버 모델이 보여진다. \n\n\n모델 좌표계를 확인하기 위해, 다음 명령을 실행한다. \nsudo apt install ros-humble-tf2-tools\nros2 run tf2_tools view_frames.py\nevince frames.pdf\n\n\n다음과 같이 각 링크와 조인트 좌표를 확인해 본다. \nros2 run tf2_ros tf2_echo base_link front_caster\n\n\n레퍼런스\n\nSet Up LIDAR for a Simulated Mobile Robot in ROS 2 (code)\nBuild the Warehouse Robot\nCreate Model\nROS2 rover\nROS2 package development with python\nWriting a simple publisher and subscriber (Python)\nURDF tutorial github and explain\nHow to Create URDF and Launch Files in ROS2 and Display Them in Rviz\nRVIZ2 Tutorials Episode Learn TF",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-9160893092522574980",
        "isoDate": "2024-06-28T06:44:00.000Z"
      },
      {
        "title": "LLM 모델 파닝튜닝 도중 만난 삽질 기록",
        "link": "http://daddynkidsmakers.blogspot.com/2024/06/huggingface-google-model-403-client.html",
        "pubDate": "2024-06-28T00:11:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\"><div>이 글은 LLM 모델 파닝튜닝 도중 만난 삽질을 기록한다. 이 상황은 GPU 24GB 내에서 3B 모델을 파인튜닝하는 과정에서 발생된 문제이다(GPU 거지). 각 모델에 따라 다양한 삽질이 있는 데 대표적인 것만 추려본다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhj8xIXvO3YqS5ssy2Vj62F947Kqfd5stducH4KJwRb12DEfXYOws25BluHfZaR3OhiCP5KC30ETR8SQutDnCotzI6-iRHjEhwKMIQbhlRuGJhi9gAptE7jN3MqnC0pvlH_M0iegXjuzMbIyLQK-POd1JPerfH64G3K4HzbR9MUAjKjoadlXSSz-MG-QBRs\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"604\" data-original-width=\"480\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhj8xIXvO3YqS5ssy2Vj62F947Kqfd5stducH4KJwRb12DEfXYOws25BluHfZaR3OhiCP5KC30ETR8SQutDnCotzI6-iRHjEhwKMIQbhlRuGJhi9gAptE7jN3MqnC0pvlH_M0iegXjuzMbIyLQK-POd1JPerfH64G3K4HzbR9MUAjKjoadlXSSz-MG-QBRs=w318-h400\" width=\"318\" /></a></div></div><div><br /></div></div><div style=\"text-align: left;\"><b>Google LLM model의 Huggingface google model 403 Client Error 문제 삽질</b></div><div style=\"text-align: left;\">이 글은&nbsp;403 Client Error: Forbidden for url: https://huggingface.co/google config.json 삽질을 기록한다.&nbsp;<br /></div><div style=\"text-align: left;\"><br />허깅페이스에서 구글 학습 모델을 다운로드 시도할 때 나오는 메시지인데, 이게 시도하는 상황에 따라 랜덤이라 문제이다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhUvxpcBMY9DaqkY2zbcwBSMF7-8ICBiLcj-vv09UxU8m0vN3auaeF1PoapFVDb_D-yFaFU9LfIJEKVagNN7773OI-rrlGsVMiXq-MIRJMo60AzikcLnBNNVYa0EMIcQ3R5FTyqXmF1DwbMZLiSTDTuaD05rzG9qaKse4ZaUWjravkt1BpNYz4JbwN8PR9G\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"120\" data-original-width=\"887\" height=\"86\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhUvxpcBMY9DaqkY2zbcwBSMF7-8ICBiLcj-vv09UxU8m0vN3auaeF1PoapFVDb_D-yFaFU9LfIJEKVagNN7773OI-rrlGsVMiXq-MIRJMo60AzikcLnBNNVYa0EMIcQ3R5FTyqXmF1DwbMZLiSTDTuaD05rzG9qaKse4ZaUWjravkt1BpNYz4JbwN8PR9G=w640-h86\" width=\"640\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">짜증(내 피 같은 시간을 낭비하다니T.T)</div><div style=\"text-align: left;\"><br /></div><div>물론 모델 사용은 허가를 받고 진행한 것이다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEi7d9X9Fr3BpG6LEBwxqsff6IKz_uKra2pDbhyRCmvRENbU3KnXBAfj8gcA72-vDQ8eEYJk8KCK8PRAk_mzHD65lThwlgtyjWlgyn8plTdzLWV_rjmmrLDq0frGQfcFkFvX1FmoxvmV1AvLnJYkmQzivFH7dAwKcH3rFKOZQMPcX8e3cyscXuwyM2j9g19z\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"397\" data-original-width=\"708\" height=\"224\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEi7d9X9Fr3BpG6LEBwxqsff6IKz_uKra2pDbhyRCmvRENbU3KnXBAfj8gcA72-vDQ8eEYJk8KCK8PRAk_mzHD65lThwlgtyjWlgyn8plTdzLWV_rjmmrLDq0frGQfcFkFvX1FmoxvmV1AvLnJYkmQzivFH7dAwKcH3rFKOZQMPcX8e3cyscXuwyM2j9g19z=w400-h224\" width=\"400\" /></a></div></div><div style=\"text-align: left;\"><br /></div>이 상황에서 물론 다음 질답과 같이 모든 것을 시도 해보았다. 각 답변을 보면 알겠지만, 다들 안되서 헤매고 있다.</div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li>https://huggingface.co/google/gemma-2b/discussions/28</li><li>https://huggingface.co/google/gemma-2b/discussions/11</li><li>https://huggingface.co/google/gemma-7b/discussions/31</li><li>https://huggingface.co/google/gemma-2b-it/discussions/31</li><li>https://huggingface.co/google/gemma-2b/discussions/25</li><li>https://github.com/huggingface/diffusers/issues/6223</li></ul><div>구글 모델은 개발자 접근성에 문제가 있어 보인다.&nbsp;</div><div><br /></div><div><b>패지키 설치 의존성 에러</b></div><div>작은 리소스에서 Lora를 파인튜닝 어답터로 사용하다 보니&nbsp;bitandbytes 등&nbsp;패키지를 기본으로 사용하는 데, 의존성 에러 문제가 발생하였다(최근에는 문제가 많이 해결된 것으로 보임).</div><div><br /></div><div><b>결론</b></div><div>세상에 공짜는 없는 듯.. 딥러닝 초창기 우분투, NVIDIA CUDA, 벽돌 PC 반복할 때 생각나네. 아직은 sLLM 개발이 초창기라 발생하는 문제인 듯 보인다.&nbsp;</div><div><br /></div><div>추신. 그래도, 라마, 파이는 잘 되는 것 같다.</div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEht8evcdHFV4EQlKPK737CxEI69-Mm8W_ktoXP8PNgeEwbAt7lXx17c6ltFZRTtMrSzl34ZBTVXndLAPZL_WHuIlw5x_tfdfjQAjgNoO1mX5_8tiVVKXI3s0Wj9-Qv3a9DMwP9x-bCu2zCtzh7lyo0k7Gv7a3Iyg6TVr3Cfl_ku68AhoPfhtpNeA8hLps-a\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"632\" data-original-width=\"1422\" height=\"285\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEht8evcdHFV4EQlKPK737CxEI69-Mm8W_ktoXP8PNgeEwbAt7lXx17c6ltFZRTtMrSzl34ZBTVXndLAPZL_WHuIlw5x_tfdfjQAjgNoO1mX5_8tiVVKXI3s0Wj9-Qv3a9DMwP9x-bCu2zCtzh7lyo0k7Gv7a3Iyg6TVr3Cfl_ku68AhoPfhtpNeA8hLps-a=w640-h285\" width=\"640\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgquO-JG_agJinpd_5S0434jGAAw5ZZi0T_CoG0KVLWE8o_LFq471Eu4RiQlpQCMX938zvi83VINn1DF9R5riHexnSfb-PwsChi6zJzqmuNPWKjNnryCB9-XLw6v2J8uG2Hx6k44S220ulFXQq5W8xGipBgXac0zUEvuXFfYrru56uFg8u96wKsgbsxH5bN\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"705\" data-original-width=\"1165\" height=\"389\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgquO-JG_agJinpd_5S0434jGAAw5ZZi0T_CoG0KVLWE8o_LFq471Eu4RiQlpQCMX938zvi83VINn1DF9R5riHexnSfb-PwsChi6zJzqmuNPWKjNnryCB9-XLw6v2J8uG2Hx6k44S220ulFXQq5W8xGipBgXac0zUEvuXFfYrru56uFg8u96wKsgbsxH5bN=w640-h389\" width=\"640\" /></a></div><br /><br /></div><br /></div></div>",
        "contentSnippet": "이 글은 LLM 모델 파닝튜닝 도중 만난 삽질을 기록한다. 이 상황은 GPU 24GB 내에서 3B 모델을 파인튜닝하는 과정에서 발생된 문제이다(GPU 거지). 각 모델에 따라 다양한 삽질이 있는 데 대표적인 것만 추려본다.\n\n\n\n\n\nGoogle LLM model의 Huggingface google model 403 Client Error 문제 삽질\n이 글은 403 Client Error: Forbidden for url: https://huggingface.co/google config.json 삽질을 기록한다. \n\n허깅페이스에서 구글 학습 모델을 다운로드 시도할 때 나오는 메시지인데, 이게 시도하는 상황에 따라 랜덤이라 문제이다. \n\n\n짜증(내 피 같은 시간을 낭비하다니T.T)\n\n\n물론 모델 사용은 허가를 받고 진행한 것이다.\n\n\n\n\n이 상황에서 물론 다음 질답과 같이 모든 것을 시도 해보았다. 각 답변을 보면 알겠지만, 다들 안되서 헤매고 있다.\n\nhttps://huggingface.co/google/gemma-2b/discussions/28\nhttps://huggingface.co/google/gemma-2b/discussions/11\nhttps://huggingface.co/google/gemma-7b/discussions/31\nhttps://huggingface.co/google/gemma-2b-it/discussions/31\nhttps://huggingface.co/google/gemma-2b/discussions/25\nhttps://github.com/huggingface/diffusers/issues/6223\n\n구글 모델은 개발자 접근성에 문제가 있어 보인다. \n\n\n패지키 설치 의존성 에러\n작은 리소스에서 Lora를 파인튜닝 어답터로 사용하다 보니 bitandbytes 등 패키지를 기본으로 사용하는 데, 의존성 에러 문제가 발생하였다(최근에는 문제가 많이 해결된 것으로 보임).\n\n\n결론\n세상에 공짜는 없는 듯.. 딥러닝 초창기 우분투, NVIDIA CUDA, 벽돌 PC 반복할 때 생각나네. 아직은 sLLM 개발이 초창기라 발생하는 문제인 듯 보인다. \n\n\n추신. 그래도, 라마, 파이는 잘 되는 것 같다.",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-5778477745220990780",
        "isoDate": "2024-06-28T00:11:00.000Z"
      },
      {
        "title": "ROS2, 가제보 설치 및 패키지 개발 테크트리",
        "link": "http://daddynkidsmakers.blogspot.com/2024/06/ros2.html",
        "pubDate": "2024-06-27T08:59:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;ROS2 및 가제보 설치 테크트리를 정리한 것이다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiZQf0SouBWmQhYdB4q3mU5icZD_6kfq7ipcYyLpRMGXGF3Syu5NFSU8Udgnq8aQgt1vmykb3RLwL-nYWOfIXS7eXD2tJd-eEn3BrgLCNEBX4uv-CLQ1jL5NLF58BL2qvzgBgfaXOS5HMpk_PgRUXVQ36oTDmQVxEBzVF02KJE9TTc2j67CQCI3K1RW7EtH\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"183\" data-original-width=\"150\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiZQf0SouBWmQhYdB4q3mU5icZD_6kfq7ipcYyLpRMGXGF3Syu5NFSU8Udgnq8aQgt1vmykb3RLwL-nYWOfIXS7eXD2tJd-eEn3BrgLCNEBX4uv-CLQ1jL5NLF58BL2qvzgBgfaXOS5HMpk_PgRUXVQ36oTDmQVxEBzVF02KJE9TTc2j67CQCI3K1RW7EtH\" width=\"197\" /></a></div><br /></div><div style=\"text-align: left;\">좀 더 상세한 내용은 참고한 레퍼런스를 확인한다.</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><b><span style=\"font-size: medium;\">ROS2 준비</span></b></div><div><b>환경 설정</b></div><div style=\"text-align: left;\">개발환경은 우분투 22.04이다. 윈도우 버전에서 설치해 보았으나, 너무 과도한 용량과 개인적으로 제일 싫어하는 라이센스 잔뜩 걸린 윈도우 버전 QT 패키지를 피해서 수동 설치해야 하는 문제가 있어, 우분투로 진행한다.&nbsp; 미리 vscode, sublime 도구가 설치되어 있다고 가정한다.</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">ROS2 버전은 HUBBLE을 사용한다.</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><b>설치</b></div><div style=\"text-align: left;\">ROS2 설치는 터미널 실행 후 다음과 같이 진행한다. 상세한 설명은 <a href=\"https://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debians.html\">여기(ROS2 설치 문서)</a>를 참고한다.</div><div style=\"text-align: left;\"><div>sudo apt update &amp;&amp; sudo apt install locales</div><div><br /></div><div>sudo locale-gen en_US en_US.UTF-8</div><div>sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8</div><div>export LANG=en_US.UTF-8</div><div><br /></div><div>apt-cache policy | grep universe</div><div><br /></div><div>sudo apt update &amp;&amp; sudo apt install curl gnupg lsb-release</div><div>sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg</div><div><br /></div><div>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null</div><div><br /></div><div>sudo apt update</div><div>sudo apt upgrade</div><div><br /></div><div>sudo apt install ros-humble-desktop</div><div><br /></div><div><div>echo \"source /opt/ros/humble/setup.bash\" &gt;&gt; ~/.bashrc</div></div><div><br /></div><div>설치된 폴더는 다음과 같다.</div><div>/opt/ros/humble 아래에,&nbsp;</div><div>/bin 실행파일</div><div>/cmake 빌드 설정</div><div>/include 헤더</div><div>/lib 라이브러리</div><div>/opt 기타 의존 패키지</div><div>/share 패키지 빌드 환경 설정</div><div><br /></div><div><b>설치 테스트</b></div><div>설치가 잘 되었는 지 터미널 창 두개를 띄워 각 창의 명령을 다음과 같이 실행한다.</div><div><div>ros2 run demo_nodes_cpp talker</div><div>ros2 run demo_nodes_py listener</div></div><div><br /></div><div>문제가 없다면, 제대로 설치된 것이다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEj9QJL0MOgufrvcwgRL1nQ4aLKxiThsyUpdn-Zkdu3TZZ--_nM9kBmIGFBgLKpDlXj76Oj_aSIWTXy1li1nvAIoZMrU3ir0Hl0fhsfiDYxArgR4Mh0n7pgZJ9g9fp3yQNR9tu4IaQRE92VNSLoPvOT6C41HxMFLzxI0wbVoLYzG1bLkvpNtyGWwK4eVFoEt\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"140\" data-original-width=\"797\" height=\"70\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEj9QJL0MOgufrvcwgRL1nQ4aLKxiThsyUpdn-Zkdu3TZZ--_nM9kBmIGFBgLKpDlXj76Oj_aSIWTXy1li1nvAIoZMrU3ir0Hl0fhsfiDYxArgR4Mh0n7pgZJ9g9fp3yQNR9tu4IaQRE92VNSLoPvOT6C41HxMFLzxI0wbVoLYzG1bLkvpNtyGWwK4eVFoEt=w400-h70\" width=\"400\" /></a></div></div><div><br /></div><div><b>개발도구 설치</b></div><div>다음과 같이 설치한다.</div><div><div>sudo apt update &amp;&amp; sudo apt install -y build-essential cmake git libbullet-dev python3-colcon-common-extensions python3-flake8 python3-pip python3-pytest-cov python3-rosdep python3-setuptools python3-vcstool wget</div><div>python3 -m pip install -U argcomplete flake8-blind-except flake8-builtins flake8-class-newline flake8-comprehensions flake8-deprecated flake8-docstrings flake8-import-order flake8-quotes pytest-repeat pytest-rerunfailures pytest</div><div>sudo apt install --no-install-recommends -y libasio-dev libtinyxml2-dev libcunit1-dev</div></div><div><br /></div><div><b>SLAM, NAVIGATION 패키지 설치</b></div><div>다음과 같이 설치한다.&nbsp;</div><div><div>sudo apt install ros-humble-gazebo-ros-pkgs</div><div>sudo apt install ros-humble-gazebo-ros2-control</div><div><br /></div><div>sudo apt install ros-humble-cartographer</div><div>sudo apt install ros-humble-cartographer-ros</div><div><br /></div><div>sudo apt install ros-humble-navigation2</div><div>sudo apt install ros-humble-nav2-bringup</div><div><br /></div><div>sudo apt-get install ros-humble-moveit</div><div><br /></div><div>sudo apt-get install pyqt5-dev-tools</div><div>python3 -m pip install --upgrade pip</div><div>python3 -m pip install -U catkin_pkg cryptography empy ifcfg lark-parser lxml netifaces numpy opencv-python pyparsing pyyaml setuptools rosdistro</div><div>python3 -m pip install -U pydot PyQt5</div></div><div><br /></div><div>이외, 외부 패키지는 다음과 같이 설치할 수 있다.</div><div>sudo apt install ros-humble-teleop-swist-joy</div><div><br /></div><div>혹은,&nbsp;</div><div>cd ~/projects/ros2/src</div><div>git clone https://github.com/ros2/teleop_twist_joy.git</div><div>cd ..</div><div>colcon build --symlink-install --packages-select teleop_twist_joy</div><div><br /></div><div><b>패키지 빌드, 기본 정보 확인 및 테스트</b></div><div>ROS2는 catkin_make 대신 colcon을 빌드 도구로 사용한다.&nbsp;</div><div><div>ROS2는 복수 개발 폴더를 제공한다. 빌드 후 devel폴더에 넣는 ROS1은 패키지 의존도를 높여 에러 발생 확률을 높였다. ROS2는 devel 폴더는 없애고, 사용자가 명시적으로 colcon build --symlink-install 명령으로 개발된 패키지를 설치하도록 정책이 변경되었다.&nbsp;</div><div><br /></div></div><div>다음과 같이 터미널 명령을 실행한다.</div><div><div>mkdir -p ~/projects/ros2/src/</div><div>cd ~/projects/ros2/</div><div>colcon build --symlink-install</div></div><div><br /></div><div>에러가 없다면, 성공한것이다. 폴더 구조는 다음과 같다.</div><div>/build&nbsp; 빌드 설정 파일</div><div>/install&nbsp; 빌드된 라이브러리, 실행 파일&nbsp;</div><div>/log&nbsp; 로그</div><div>/src&nbsp; 사용자 패키지 폴더</div><div><br /></div><div>다음과 같이, pkg create 명령으로 패키지를 하나 만든다.</div><div><div>ros2 pkg create my_first_ros_rclpy_pkg --build-type ament_python --dependencies rclpy std_msgs</div></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEheylC2UbR4w3_UWGaOhBH1Q0neVP2yM4i8x5L3Und3BYngSSKSgIqRJ2O91pXeV4l48G8HJeVV2zxmgImofQ-EJZDuw1wWjUvcOiXftCoahL0_Eiqov98sNGveAZzQkWRslWv3Za4MnR2yq71g8sah_yZSrIM_blA3wSK0AZPlDrfs--yRe-JMql-CIZen\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"68\" data-original-width=\"851\" height=\"42\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEheylC2UbR4w3_UWGaOhBH1Q0neVP2yM4i8x5L3Und3BYngSSKSgIqRJ2O91pXeV4l48G8HJeVV2zxmgImofQ-EJZDuw1wWjUvcOiXftCoahL0_Eiqov98sNGveAZzQkWRslWv3Za4MnR2yq71g8sah_yZSrIM_blA3wSK0AZPlDrfs--yRe-JMql-CIZen=w527-h42\" width=\"527\" /></a></div><div><br /></div><div>다음과 같이 소스 내에 setup.py를 다음과 같이 편집한다.</div><div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>'console_scripts': [</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t\t</span>'helloworld_publisher = my_first_ros_rclpy_pkg.helloworld_publisher:main',</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t\t</span>'helloworld_subscriber = my_first_ros_rclpy_pkg.helloworld_subscriber:main',</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>],</span></div></div><div><br /></div><div>my_first_ros_rclpy_pkg 폴더의 my_first_ros_rclpy_pkg/helloworld_publisher.py 를 다음과 같이 편집한다.</div><div><div>import rclpy</div><div>from rclpy.node import Node</div><div>from rclpy.qos import QoSProfile</div><div>from std_msgs.msg import String</div><div><br /></div><div>class HelloworldPublisher(Node):</div><div>&nbsp; &nbsp; def __init__(self):</div><div>&nbsp; &nbsp; &nbsp; &nbsp; super().__init__('helloworld_publisher')</div><div>&nbsp; &nbsp; &nbsp; &nbsp; qos_profile = QoSProfile(depth=10)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; self.helloworld_publisher = self.create_publisher(String, 'helloworld', qos_profile)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; self.timer = self.create_timer(1, self.publish_helloworld_msg)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; self.count = 0</div><div><br /></div><div>&nbsp; &nbsp; def publish_helloworld_msg(self):</div><div>&nbsp; &nbsp; &nbsp; &nbsp; msg = String()</div><div>&nbsp; &nbsp; &nbsp; &nbsp; msg.data = 'Hello World: {0}'.format(self.count)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; self.helloworld_publisher.publish(msg)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; self.get_logger().info('Published message: {0}'.format(msg.data))</div><div>&nbsp; &nbsp; &nbsp; &nbsp; self.count += 1</div><div><br /></div><div><br /></div><div>def main(args=None):</div><div>&nbsp; &nbsp; rclpy.init(args=args)</div><div>&nbsp; &nbsp; node = HelloworldPublisher()</div><div>&nbsp; &nbsp; try:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; rclpy.spin(node)</div><div>&nbsp; &nbsp; except KeyboardInterrupt:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; node.get_logger().info('Keyboard Interrupt (SIGINT)')</div><div>&nbsp; &nbsp; finally:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; node.destroy_node()</div><div>&nbsp; &nbsp; &nbsp; &nbsp; rclpy.shutdown()</div><div><br /></div><div>if __name__ == '__main__':</div><div>&nbsp; &nbsp; main()</div></div><div><br /></div><div>동일하게 helloworld_subscriber.py를 만들고, 다음과 같이 편집한다.</div><div><div>import rclpy</div><div>from rclpy.node import Node</div><div>from rclpy.qos import QoSProfile</div><div>from std_msgs.msg import String</div><div><br /></div><div>class HelloworldSubscriber(Node):</div><div>&nbsp; &nbsp; def __init__(self):</div><div>&nbsp; &nbsp; &nbsp; &nbsp; super().__init__('Helloworld_subscriber')</div><div>&nbsp; &nbsp; &nbsp; &nbsp; qos_profile = QoSProfile(depth=10)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; self.helloworld_subscriber = self.create_subscription(</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; String,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'helloworld',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; self.subscribe_topic_message,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; qos_profile)</div><div><br /></div><div>&nbsp; &nbsp; def subscribe_topic_message(self, msg):</div><div>&nbsp; &nbsp; &nbsp; &nbsp; self.get_logger().info('Received message: {0}'.format(msg.data))</div><div><br /></div><div><br /></div><div>def main(args=None):</div><div>&nbsp; &nbsp; rclpy.init(args=args)</div><div>&nbsp; &nbsp; node = HelloworldSubscriber()</div><div>&nbsp; &nbsp; try:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; rclpy.spin(node)</div><div>&nbsp; &nbsp; except KeyboardInterrupt:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; node.get_logger().info('Keyboard Interrupt (SIGINT)')</div><div>&nbsp; &nbsp; finally:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; node.destroy_node()</div><div>&nbsp; &nbsp; &nbsp; &nbsp; rclpy.shutdown()</div><div><br /></div><div>if __name__ == '__main__':</div><div>&nbsp; &nbsp; main()</div></div><br />다시 빌드해 본다.</div><div><div>colcon build --symlink-install</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEh_6dexYexPRheC_763sFVl2X3TOzTpTS9uzq28yE1kQDRYFs2J1HXJzKsKKjXDbLFjeRMGGvhRLVsb30KyySAkY0r0QSchU8S83MZAzeFZHV9b8FfYa_muAY-JhcHG6aCToyjHhb2m9T8HPuZrCFgA7w5ATortWb_ggAawUlojQE_5j4BUPQpFZOKaATAF\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"403\" data-original-width=\"893\" height=\"180\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEh_6dexYexPRheC_763sFVl2X3TOzTpTS9uzq28yE1kQDRYFs2J1HXJzKsKKjXDbLFjeRMGGvhRLVsb30KyySAkY0r0QSchU8S83MZAzeFZHV9b8FfYa_muAY-JhcHG6aCToyjHhb2m9T8HPuZrCFgA7w5ATortWb_ggAawUlojQE_5j4BUPQpFZOKaATAF=w400-h180\" width=\"400\" /></a></div><br /></div></div><div>이제 각 터미널에서 다음 명령으로 패키지의 각 노드를 실행한다.</div><div>. install/local_setup.bash&nbsp;</div><div><div>ros2 run my_first_ros_rclpy_pkg helloworld_subscriber&nbsp;</div></div><div><div>ros2 run my_first_ros_rclpy_pkg helloworld_publisher&nbsp;</div></div><div><br /></div><div>다음과 같이 메시지 토픽을 주고 받으며 잘 동작하는 것을 확인할 수 있다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhf0SKjeC1K4SM3phqmfl_S3YWGzs7Lp9DzBBwUbIh6WT-dZ0T7NFAth62hY-LBRRjBodYlIEHZc2vRVUBlaRJg-zI1pgoEb03Ega1Y-5WGRG0p0wEdroCL6QW8OeIjUjMW0bjmPPnrvraxeHhCet6PDSRhlQyOuZKnD2UJrETT_5I2SDPpX9Z2rN4PvFlr\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"560\" data-original-width=\"1963\" height=\"152\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhf0SKjeC1K4SM3phqmfl_S3YWGzs7Lp9DzBBwUbIh6WT-dZ0T7NFAth62hY-LBRRjBodYlIEHZc2vRVUBlaRJg-zI1pgoEb03Ega1Y-5WGRG0p0wEdroCL6QW8OeIjUjMW0bjmPPnrvraxeHhCet6PDSRhlQyOuZKnD2UJrETT_5I2SDPpX9Z2rN4PvFlr=w533-h152\" width=\"533\" /></a></div><br /></div><div>이제, 설치된 패키지를 확인해 보자.&nbsp;</div><div>ros2 pkg list</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjnM3gCY3Soli_PJy5Ibe8k-yWjGrCQiXpcgAtPfciW5xIpRk9Qysm07IDIQjOlWyt_pmPyfDOHCSOIA_mBHT-r0-kEf6ZmYANg3_hsvF8FUnEGpj6UwQePyg59M95GARX2sdzKRPx_UTdEmqYfmjqMhA_4Y-TLxePuaNMCif8IpitxHIKvuNrgFOy4wViI\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"154\" data-original-width=\"407\" height=\"98\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjnM3gCY3Soli_PJy5Ibe8k-yWjGrCQiXpcgAtPfciW5xIpRk9Qysm07IDIQjOlWyt_pmPyfDOHCSOIA_mBHT-r0-kEf6ZmYANg3_hsvF8FUnEGpj6UwQePyg59M95GARX2sdzKRPx_UTdEmqYfmjqMhA_4Y-TLxePuaNMCif8IpitxHIKvuNrgFOy4wViI=w258-h98\" width=\"258\" /></a></div><br /></div><div>다음과 같이 터틀봇을 각 터미널에서 실행해 본다.</div><div><div>ros2 run turtlesim turtlesim_node</div></div><div>ros2 run turtlesim turtle_teleop_key</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhdJ5n9s59ANHHDYAmxNGlJDkq5BSxKacJDCkstsNimJGOC61A_jdH49oqfqPbyDRtF3BkyOY_b_pzWe4JI1MSNEmQPbBreEyVW4VzT2oAREjbA0YmVpxZeLQlk7rKfMOwOL3RkpLSw09mCVwD2393sPFpt7ETvbXirEm_HrJQy7EaN3KQ9o4RX03IJWlgf\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"570\" data-original-width=\"1784\" height=\"127\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhdJ5n9s59ANHHDYAmxNGlJDkq5BSxKacJDCkstsNimJGOC61A_jdH49oqfqPbyDRtF3BkyOY_b_pzWe4JI1MSNEmQPbBreEyVW4VzT2oAREjbA0YmVpxZeLQlk7rKfMOwOL3RkpLSw09mCVwD2393sPFpt7ETvbXirEm_HrJQy7EaN3KQ9o4RX03IJWlgf=w400-h127\" width=\"400\" /></a></div><div><br /></div>다음과 같이 현재 실행중인 노드 정보도 확인할 수 있다.</div><div>ros2 node list</div><div>ros2 topic list</div><div>ros2 service list</div><div>ros2 node info /turtlesim</div><div>rqt_graph</div><div><br /></div><div>ROS2 패키지 노드는 서로 토픽, 서비스, 액션, 파라메터를 주고 받거나 공유한다. 패키지 개발 전에 미리 설계해야 하는 것이 좋다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhohQKnJswdadN4-acG83rpWVYVJ3ZJg0oanKCMGwNrZgSZtDLGp9YtyabG9cV3qo-ToVRKHw_kCi-qCJx2zpXMHi5fF2YuwIvoFV8_7NTBU5K95GC3UCTJTWcVU9XcxtyDr3yXZZ5ZmUKSSknSXRivMpTDtC-GNZXidpR9gIRJbE9tYJR2srsGomwsTFCj\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"540\" data-original-width=\"960\" height=\"295\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhohQKnJswdadN4-acG83rpWVYVJ3ZJg0oanKCMGwNrZgSZtDLGp9YtyabG9cV3qo-ToVRKHw_kCi-qCJx2zpXMHi5fF2YuwIvoFV8_7NTBU5K95GC3UCTJTWcVU9XcxtyDr3yXZZ5ZmUKSSknSXRivMpTDtC-GNZXidpR9gIRJbE9tYJR2srsGomwsTFCj=w525-h295\" width=\"525\" /></a></div><br /></div><div><b>가제보 설치</b></div><div><a href=\"https://gazebosim.org/docs/harmonic/install_ubuntu\">가제보</a>(GAZEBO)는 ROS 기반 시뮬레이션 도구로 유용하다. 다음과 같이 설치한다.</div><div><div>sudo apt-get -y install gazebo</div><div><br /></div></div><div><b>ROS2 및 도구 실행</b></div><div>다음과 같이 ROS2와 도구를 실행한다.</div><div><div>ros2 daemon start</div><div>ros2 daemon status</div><div><br /></div><div>gazebo --verbose</div><div><br /></div></div><div>다음과 같이 실행되면 성공한 것이다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjsumlumutjxG9RBgwnS1EQHMkGtRkqGBZo-Lz0OS0w5h12G8gcNllxnWw2BoIdS4afao9_1W_qUsul_-bFFdWf3mosK6IcuBtvLRiK67PGCfdmiWV4B7LlAAg76lw_cJxfqLZl48djzYAjEctjvv8fSVoa8eSI86c0U1mhWZ-kFgqFUVZ0DQ_BxsXFvrmR\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"778\" data-original-width=\"1349\" height=\"231\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjsumlumutjxG9RBgwnS1EQHMkGtRkqGBZo-Lz0OS0w5h12G8gcNllxnWw2BoIdS4afao9_1W_qUsul_-bFFdWf3mosK6IcuBtvLRiK67PGCfdmiWV4B7LlAAg76lw_cJxfqLZl48djzYAjEctjvv8fSVoa8eSI86c0U1mhWZ-kFgqFUVZ0DQ_BxsXFvrmR=w400-h231\" width=\"400\" /></a></div></div></div><br />이제, 가제보를 이용해, 물리 법칙에 따라, 설계한 모델을 테스트할 수 있다.&nbsp;</div><div><br /></div><div><b>URDF 모델 패키지 개발</b></div><div>URDF는 \" Unified Robotics Description Format\"을 나타낸다 . 이는 로봇의 형상 및 기타 속성을 지정하는 데 사용되는 파일 형식이다. URDF 모델을 지원하는 패키지 프로그램을 개발해 본다.</div><div><br /></div><div>다음 명령을 실행해 기본 패키지를 설치한다.</div><div><div>sudo apt install ros-humble-joint-state-publisher</div></div><div><div>sudo apt install ros-humble-joint-state-publisher-gui</div></div><div>sudo apt install ros-humble-xacro</div><div><br /></div><div>작업할 프로그램 패키지를 만든다.</div><div><div>ros2 pkg create --build-type ament_cmake urdf_test</div></div><div><br /></div><div>생성된 폴더 안에 다음과 같이 추가 폴더를 생성한다.</div><div>cd urdf_test/</div><div><div>mkdir launch urdf</div></div><div><br /></div><div>다음과 같이 URDF를 코딩한다.</div><div>cd urdf</div><div>gedit model.urdf</div><div><div>&lt;?xml version=\"1.0\"?&gt;</div><div>&lt;robot name=\"Robot1\"&gt;</div><div>&nbsp; &lt;link name=\"base_link\"&gt;</div><div>&nbsp; &nbsp; &lt;visual&gt;</div><div>&nbsp; &nbsp; &nbsp; &lt;geometry&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;cylinder length=\"1\" radius=\"0.4\"/&gt;</div><div>&nbsp; &nbsp; &nbsp; &lt;/geometry&gt;</div><div>&nbsp; &nbsp; &lt;/visual&gt;</div><div>&nbsp; &lt;/link&gt;</div><div>&lt;/robot&gt;</div></div><div><br /></div><div>다음과 같이 패키지 파일을 수정 추가한한다.</div><div>cd ..</div><div>gedit package.xml</div><div><br /></div><div><div>&nbsp; &lt;exec_depend&gt;joint_state_publisher&lt;/exec_depend&gt;</div><div>&nbsp; &lt;exec_depend&gt;robot_state_publisher&lt;/exec_depend&gt;</div><div>&nbsp; &lt;exec_depend&gt;rviz&lt;/exec_depend&gt;</div></div><div><br /></div><div>실행파일을 다음과 같이 생성한다.</div><div>cd launch</div><div>gedit display.launch.py</div><div><br /></div><div>이 파이썬 파일의 코드는 다음과 같다.</div><div><div>import launch</div><div>from launch.substitutions import Command, LaunchConfiguration</div><div>import launch_ros</div><div>import os</div><div><br /></div><div>def generate_launch_description():</div><div>&nbsp; &nbsp; pkgPath = launch_ros.substitutions.FindPackageShare(package='urdf_test').find('urdf_test')</div><div>&nbsp; &nbsp; urdfModelPath= os.path.join(pkgPath, 'urdf/model.urdf')</div><div>&nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; with open(urdfModelPath,'r') as infp:</div><div>&nbsp; &nbsp; <span style=\"white-space: pre;\">\t</span>robot_desc = infp.read()</div><div>&nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; params = {'robot_description': robot_desc}</div><div>&nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; robot_state_publisher_node =launch_ros.actions.Node(</div><div>&nbsp; &nbsp; package='robot_state_publisher',</div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>executable='robot_state_publisher',</span></div><div>&nbsp; &nbsp; output='screen',</div><div>&nbsp; &nbsp; parameters=[params])</div><div>&nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; joint_state_publisher_node = launch_ros.actions.Node(</div><div>&nbsp; &nbsp; &nbsp; &nbsp; package='joint_state_publisher',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; executable='joint_state_publisher',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; name='joint_state_publisher',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; parameters=[params],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; condition=launch.conditions.UnlessCondition(LaunchConfiguration('gui'))</div><div>&nbsp; &nbsp; )</div><div>&nbsp; &nbsp; joint_state_publisher_gui_node = launch_ros.actions.Node(</div><div>&nbsp; &nbsp; &nbsp; &nbsp; package='joint_state_publisher_gui',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; executable='joint_state_publisher_gui',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; name='joint_state_publisher_gui',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; condition=launch.conditions.IfCondition(LaunchConfiguration('gui'))</div><div>&nbsp; &nbsp; )</div><div>&nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; rviz_node = launch_ros.actions.Node(</div><div>&nbsp; &nbsp; &nbsp; &nbsp; package='rviz2',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; executable='rviz2',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; name='rviz2',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; output='screen'</div><div>&nbsp; &nbsp; )</div><div><br /></div><div>&nbsp; &nbsp; return launch.LaunchDescription([</div><div>&nbsp; &nbsp; &nbsp; &nbsp; launch.actions.DeclareLaunchArgument(name='gui', default_value='True',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; description='This is a flag for joint_state_publisher_gui'),</div><div>&nbsp; &nbsp; &nbsp; &nbsp; launch.actions.DeclareLaunchArgument(name='model', default_value=urdfModelPath,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; description='Path to the urdf model file'),</div><div>&nbsp; &nbsp; &nbsp; &nbsp; robot_state_publisher_node,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; joint_state_publisher_node,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; joint_state_publisher_gui_node,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; rviz_node</div><div>&nbsp; &nbsp; ])&nbsp;</div></div><div><br /></div><div>빌드를 위해 cmake 파일을 생성한다.</div><div>cd ..</div><div>gedit CMakeLists.txt</div><div><br /></div><div>if(BUILD_TESTING) 문장 위에 다음과 같이 수정한다.</div><div>install(</div><div><div>&nbsp; DIRECTORY launch urdf</div><div>&nbsp; DESTINATION share/${PROJECT_NAME}</div><div>)</div></div><div><br /></div><div><div>if(BUILD_TESTING)</div></div><div><br /></div><div>빌드한다.</div><div><div>colcon build</div></div><div>source ~/projects/ros2/install/setup.bash</div><div><br /></div><div>RVIZ를 시작한다.</div><div><div>ros2 launch urdf_test display.launch.py</div></div><div><br /></div><div>RVIZ 실행 후 설정은 다음과 같도록 한다. 그럼, 모델링된 URDF를 볼 수 있다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgCu05VA_pHN6EK8bgEudnVN857pHWd2ff2iJEP4XAswyyqHSE48zKfIs6-cYqq9K0Cd-jUJR4DqiflP2ApZdqpOGNf7zqLmiBOXoyeBW_2LZfdNILWRpzZXZOLM0Q8f9LBEUEfp6iMshEd4V9OPtaIUh8iCJDHwTJw6cpUdvFAwuHssdWn_ynqnX63QHHw\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"879\" data-original-width=\"1219\" height=\"231\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgCu05VA_pHN6EK8bgEudnVN857pHWd2ff2iJEP4XAswyyqHSE48zKfIs6-cYqq9K0Cd-jUJR4DqiflP2ApZdqpOGNf7zqLmiBOXoyeBW_2LZfdNILWRpzZXZOLM0Q8f9LBEUEfp6iMshEd4V9OPtaIUh8iCJDHwTJw6cpUdvFAwuHssdWn_ynqnX63QHHw\" width=\"320\" /></a></div></div><div><br /></div><div><b>부록: 가제보와 연결해 시뮬레이션하는 방법</b></div><div>이 내용은 정보가 많지는 않다. 다만,&nbsp;gazebo_ros_pkgs libgazebo_ros_laser 와 같은 패키지가 있으며, 다음과 같이 시뮬레이션 관련 프로젝트가 진행 중에 있어, 여기서 일부 내용을 확인할 수 있다.</div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhgFKqkd0bk2CfaxsPrEfP4MXiw5yUlzkFMlWpmx16VKcDE805JSfTJPi0C7YvLXJaT3Ba2yE7wQ5d8p7grXNQMPq_rX2X9ebUnCbG6em1UEXQ-dTwhIGkouPyPHuxolKgd076tBzP6W9afoV2nVBPZXsZtlkSjFJh_XK2-jiuzJpNL_PpPhfW1dIznxIsD\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"820\" data-original-width=\"1267\" height=\"207\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhgFKqkd0bk2CfaxsPrEfP4MXiw5yUlzkFMlWpmx16VKcDE805JSfTJPi0C7YvLXJaT3Ba2yE7wQ5d8p7grXNQMPq_rX2X9ebUnCbG6em1UEXQ-dTwhIGkouPyPHuxolKgd076tBzP6W9afoV2nVBPZXsZtlkSjFJh_XK2-jiuzJpNL_PpPhfW1dIznxIsD\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://github.com/ros-simulation\">ROS Simulation tool</a></div></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgiYmPfN_mfbuDfLovKd39HKGH-6DbdJG1b-cpTVJI4i-wzvnvCPO61ryoXxqXoinKcJYH30gVRZ4qG5TK-5r2JukDg1tZ48_Et2SfPiT5UyueTc3SMy5fhMtZnML98NGeb2XMmhUbsjqW37rTeUj7-o48sJjQKfDA72m9xDMWrsM2MVoiv7BjII5bSSdBE\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"531\" data-original-width=\"828\" height=\"205\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgiYmPfN_mfbuDfLovKd39HKGH-6DbdJG1b-cpTVJI4i-wzvnvCPO61ryoXxqXoinKcJYH30gVRZ4qG5TK-5r2JukDg1tZ48_Et2SfPiT5UyueTc3SMy5fhMtZnML98NGeb2XMmhUbsjqW37rTeUj7-o48sJjQKfDA72m9xDMWrsM2MVoiv7BjII5bSSdBE\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><span style=\"text-align: left;\"><a href=\"https://medium.com/@tevhitkarsli/working-with-point-cloud-library-in-ros-gazebo-pcl-1-70ba44beb443\">Working with Point Cloud Library in ROS &amp; Gazebo</a></span></div><br /></div><div><b>레퍼런스</b></div><div><ul style=\"text-align: left;\"><li><a href=\"https://automaticaddison.com/set-up-lidar-for-a-simulated-mobile-robot-in-ros-2/\">Set Up LIDAR for a Simulated Mobile Robot in ROS 2</a>&nbsp;(<a href=\"https://drive.google.com/drive/folders/1VrgqtETVSuheNITop0MXDy4BY3U8IphQ\">code</a>)</li><li><a href=\"https://automaticaddison.com/how-to-simulate-a-robot-using-gazebo-and-ros-2/\">Build the Warehouse Robot</a></li><li><a href=\"https://automaticaddison.com/how-to-simulate-a-robot-using-gazebo-and-ros-2/\">Create Model</a></li><li><a href=\"https://github.com/mgonzs13/ros2_rover\">ROS2 rover</a></li><li><a href=\"https://cafe.naver.com/openrt/24637\">ROS2 package development with python</a></li><li><a href=\"https://docs.ros.org/en/foxy/Tutorials/Beginner-Client-Libraries/Writing-A-Simple-Py-Publisher-And-Subscriber.html\">Writing a simple publisher and subscriber (Python</a>)</li><li><a href=\"https://github.com/ros/urdf_tutorial/tree/ros2/\">URDF tutorial github</a>&nbsp;and <a href=\"https://docs.ros.org/en/rolling/Tutorials/Intermediate/URDF/Building-a-Visual-Robot-Model-with-URDF-from-Scratch.html\">explain</a></li><li><a href=\"https://aleksandarhaber.com/how-to-create-urdf-and-launch-files-in-ros2-and-display-them-in-rviz/\">How to Create URDF and Launch Files in ROS2 and Display Them in Rviz</a></li><li><a href=\"https://www.theconstruct.ai/rviz2-tutorials-episode1-learn-tf/\">RVIZ2 Tutorials Episode Learn TF</a></li><li><a href=\"https://www.youtube.com/watch?v=7SPLEDyCrmw\">LiDAR Point Cloud Vectorization: 3D Python Tutorial (+ LoD City Models)</a></li></ul></div></div><div id=\"gtx-trans\" style=\"left: 326px; position: absolute; top: 8720.4px;\"><div class=\"gtx-trans-icon\"></div></div>",
        "contentSnippet": "이 글은 ROS2 및 가제보 설치 테크트리를 정리한 것이다. \n\n\n\n좀 더 상세한 내용은 참고한 레퍼런스를 확인한다.\n\n\nROS2 준비\n환경 설정\n개발환경은 우분투 22.04이다. 윈도우 버전에서 설치해 보았으나, 너무 과도한 용량과 개인적으로 제일 싫어하는 라이센스 잔뜩 걸린 윈도우 버전 QT 패키지를 피해서 수동 설치해야 하는 문제가 있어, 우분투로 진행한다.  미리 vscode, sublime 도구가 설치되어 있다고 가정한다.\n\n\nROS2 버전은 HUBBLE을 사용한다.\n\n\n설치\nROS2 설치는 터미널 실행 후 다음과 같이 진행한다. 상세한 설명은 여기(ROS2 설치 문서)를 참고한다.\n\nsudo apt update && sudo apt install locales\n\n\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n\n\napt-cache policy | grep universe\n\n\nsudo apt update && sudo apt install curl gnupg lsb-release\nsudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\n\n\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null\n\n\nsudo apt update\nsudo apt upgrade\n\n\nsudo apt install ros-humble-desktop\n\n\necho \"source /opt/ros/humble/setup.bash\" >> ~/.bashrc\n\n\n설치된 폴더는 다음과 같다.\n/opt/ros/humble 아래에, \n/bin 실행파일\n/cmake 빌드 설정\n/include 헤더\n/lib 라이브러리\n/opt 기타 의존 패키지\n/share 패키지 빌드 환경 설정\n\n\n설치 테스트\n설치가 잘 되었는 지 터미널 창 두개를 띄워 각 창의 명령을 다음과 같이 실행한다.\n\nros2 run demo_nodes_cpp talker\nros2 run demo_nodes_py listener\n\n\n문제가 없다면, 제대로 설치된 것이다.\n\n\n\n\n개발도구 설치\n다음과 같이 설치한다.\n\nsudo apt update && sudo apt install -y build-essential cmake git libbullet-dev python3-colcon-common-extensions python3-flake8 python3-pip python3-pytest-cov python3-rosdep python3-setuptools python3-vcstool wget\npython3 -m pip install -U argcomplete flake8-blind-except flake8-builtins flake8-class-newline flake8-comprehensions flake8-deprecated flake8-docstrings flake8-import-order flake8-quotes pytest-repeat pytest-rerunfailures pytest\nsudo apt install --no-install-recommends -y libasio-dev libtinyxml2-dev libcunit1-dev\n\n\nSLAM, NAVIGATION 패키지 설치\n다음과 같이 설치한다. \n\nsudo apt install ros-humble-gazebo-ros-pkgs\nsudo apt install ros-humble-gazebo-ros2-control\n\n\nsudo apt install ros-humble-cartographer\nsudo apt install ros-humble-cartographer-ros\n\n\nsudo apt install ros-humble-navigation2\nsudo apt install ros-humble-nav2-bringup\n\n\nsudo apt-get install ros-humble-moveit\n\n\nsudo apt-get install pyqt5-dev-tools\npython3 -m pip install --upgrade pip\npython3 -m pip install -U catkin_pkg cryptography empy ifcfg lark-parser lxml netifaces numpy opencv-python pyparsing pyyaml setuptools rosdistro\npython3 -m pip install -U pydot PyQt5\n\n\n이외, 외부 패키지는 다음과 같이 설치할 수 있다.\nsudo apt install ros-humble-teleop-swist-joy\n\n\n혹은, \ncd ~/projects/ros2/src\ngit clone https://github.com/ros2/teleop_twist_joy.git\ncd ..\ncolcon build --symlink-install --packages-select teleop_twist_joy\n\n\n패키지 빌드, 기본 정보 확인 및 테스트\nROS2는 catkin_make 대신 colcon을 빌드 도구로 사용한다. \n\nROS2는 복수 개발 폴더를 제공한다. 빌드 후 devel폴더에 넣는 ROS1은 패키지 의존도를 높여 에러 발생 확률을 높였다. ROS2는 devel 폴더는 없애고, 사용자가 명시적으로 colcon build --symlink-install 명령으로 개발된 패키지를 설치하도록 정책이 변경되었다. \n\n\n다음과 같이 터미널 명령을 실행한다.\n\nmkdir -p ~/projects/ros2/src/\ncd ~/projects/ros2/\ncolcon build --symlink-install\n\n\n에러가 없다면, 성공한것이다. 폴더 구조는 다음과 같다.\n/build  빌드 설정 파일\n/install  빌드된 라이브러리, 실행 파일 \n/log  로그\n/src  사용자 패키지 폴더\n\n\n다음과 같이, pkg create 명령으로 패키지를 하나 만든다.\n\nros2 pkg create my_first_ros_rclpy_pkg --build-type ament_python --dependencies rclpy std_msgs\n\n\n\n\n다음과 같이 소스 내에 setup.py를 다음과 같이 편집한다.\n\n\t\t'console_scripts': [\n\t\t\t'helloworld_publisher = my_first_ros_rclpy_pkg.helloworld_publisher:main',\n\t\t\t'helloworld_subscriber = my_first_ros_rclpy_pkg.helloworld_subscriber:main',\n\t\t],\n\n\nmy_first_ros_rclpy_pkg 폴더의 my_first_ros_rclpy_pkg/helloworld_publisher.py 를 다음과 같이 편집한다.\n\nimport rclpy\nfrom rclpy.node import Node\nfrom rclpy.qos import QoSProfile\nfrom std_msgs.msg import String\n\n\nclass HelloworldPublisher(Node):\n    def __init__(self):\n        super().__init__('helloworld_publisher')\n        qos_profile = QoSProfile(depth=10)\n        self.helloworld_publisher = self.create_publisher(String, 'helloworld', qos_profile)\n        self.timer = self.create_timer(1, self.publish_helloworld_msg)\n        self.count = 0\n\n\n    def publish_helloworld_msg(self):\n        msg = String()\n        msg.data = 'Hello World: {0}'.format(self.count)\n        self.helloworld_publisher.publish(msg)\n        self.get_logger().info('Published message: {0}'.format(msg.data))\n        self.count += 1\n\n\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = HelloworldPublisher()\n    try:\n        rclpy.spin(node)\n    except KeyboardInterrupt:\n        node.get_logger().info('Keyboard Interrupt (SIGINT)')\n    finally:\n        node.destroy_node()\n        rclpy.shutdown()\n\n\nif __name__ == '__main__':\n    main()\n\n\n동일하게 helloworld_subscriber.py를 만들고, 다음과 같이 편집한다.\n\nimport rclpy\nfrom rclpy.node import Node\nfrom rclpy.qos import QoSProfile\nfrom std_msgs.msg import String\n\n\nclass HelloworldSubscriber(Node):\n    def __init__(self):\n        super().__init__('Helloworld_subscriber')\n        qos_profile = QoSProfile(depth=10)\n        self.helloworld_subscriber = self.create_subscription(\n            String,\n            'helloworld',\n            self.subscribe_topic_message,\n            qos_profile)\n\n\n    def subscribe_topic_message(self, msg):\n        self.get_logger().info('Received message: {0}'.format(msg.data))\n\n\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = HelloworldSubscriber()\n    try:\n        rclpy.spin(node)\n    except KeyboardInterrupt:\n        node.get_logger().info('Keyboard Interrupt (SIGINT)')\n    finally:\n        node.destroy_node()\n        rclpy.shutdown()\n\n\nif __name__ == '__main__':\n    main()\n\n다시 빌드해 본다.\n\ncolcon build --symlink-install\n\n\n\n\n이제 각 터미널에서 다음 명령으로 패키지의 각 노드를 실행한다.\n. install/local_setup.bash \n\nros2 run my_first_ros_rclpy_pkg helloworld_subscriber \n\nros2 run my_first_ros_rclpy_pkg helloworld_publisher \n\n\n다음과 같이 메시지 토픽을 주고 받으며 잘 동작하는 것을 확인할 수 있다.\n\n\n\n이제, 설치된 패키지를 확인해 보자. \nros2 pkg list\n\n\n\n다음과 같이 터틀봇을 각 터미널에서 실행해 본다.\n\nros2 run turtlesim turtlesim_node\n\nros2 run turtlesim turtle_teleop_key\n\n\n\n다음과 같이 현재 실행중인 노드 정보도 확인할 수 있다.\nros2 node list\nros2 topic list\nros2 service list\nros2 node info /turtlesim\nrqt_graph\n\n\nROS2 패키지 노드는 서로 토픽, 서비스, 액션, 파라메터를 주고 받거나 공유한다. 패키지 개발 전에 미리 설계해야 하는 것이 좋다.\n\n\n\n가제보 설치\n가제보(GAZEBO)는 ROS 기반 시뮬레이션 도구로 유용하다. 다음과 같이 설치한다.\n\nsudo apt-get -y install gazebo\n\n\nROS2 및 도구 실행\n다음과 같이 ROS2와 도구를 실행한다.\n\nros2 daemon start\nros2 daemon status\n\n\ngazebo --verbose\n\n\n다음과 같이 실행되면 성공한 것이다.\n\n\n\n\n이제, 가제보를 이용해, 물리 법칙에 따라, 설계한 모델을 테스트할 수 있다. \n\n\nURDF 모델 패키지 개발\nURDF는 \" Unified Robotics Description Format\"을 나타낸다 . 이는 로봇의 형상 및 기타 속성을 지정하는 데 사용되는 파일 형식이다. URDF 모델을 지원하는 패키지 프로그램을 개발해 본다.\n\n\n다음 명령을 실행해 기본 패키지를 설치한다.\n\nsudo apt install ros-humble-joint-state-publisher\n\nsudo apt install ros-humble-joint-state-publisher-gui\n\nsudo apt install ros-humble-xacro\n\n\n작업할 프로그램 패키지를 만든다.\n\nros2 pkg create --build-type ament_cmake urdf_test\n\n\n생성된 폴더 안에 다음과 같이 추가 폴더를 생성한다.\ncd urdf_test/\n\nmkdir launch urdf\n\n\n다음과 같이 URDF를 코딩한다.\ncd urdf\ngedit model.urdf\n\n<?xml version=\"1.0\"?>\n<robot name=\"Robot1\">\n  <link name=\"base_link\">\n    <visual>\n      <geometry>\n        <cylinder length=\"1\" radius=\"0.4\"/>\n      </geometry>\n    </visual>\n  </link>\n</robot>\n\n\n다음과 같이 패키지 파일을 수정 추가한한다.\ncd ..\ngedit package.xml\n\n\n  <exec_depend>joint_state_publisher</exec_depend>\n  <exec_depend>robot_state_publisher</exec_depend>\n  <exec_depend>rviz</exec_depend>\n\n\n실행파일을 다음과 같이 생성한다.\ncd launch\ngedit display.launch.py\n\n\n이 파이썬 파일의 코드는 다음과 같다.\n\nimport launch\nfrom launch.substitutions import Command, LaunchConfiguration\nimport launch_ros\nimport os\n\n\ndef generate_launch_description():\n    pkgPath = launch_ros.substitutions.FindPackageShare(package='urdf_test').find('urdf_test')\n    urdfModelPath= os.path.join(pkgPath, 'urdf/model.urdf')\n    \n    with open(urdfModelPath,'r') as infp:\n    \trobot_desc = infp.read()\n    \n    params = {'robot_description': robot_desc}\n    \n    robot_state_publisher_node =launch_ros.actions.Node(\n    package='robot_state_publisher',\n\texecutable='robot_state_publisher',\n    output='screen',\n    parameters=[params])\n    \n    \n    joint_state_publisher_node = launch_ros.actions.Node(\n        package='joint_state_publisher',\n        executable='joint_state_publisher',\n        name='joint_state_publisher',\n        parameters=[params],\n        condition=launch.conditions.UnlessCondition(LaunchConfiguration('gui'))\n    )\n    joint_state_publisher_gui_node = launch_ros.actions.Node(\n        package='joint_state_publisher_gui',\n        executable='joint_state_publisher_gui',\n        name='joint_state_publisher_gui',\n        condition=launch.conditions.IfCondition(LaunchConfiguration('gui'))\n    )\n    \n    rviz_node = launch_ros.actions.Node(\n        package='rviz2',\n        executable='rviz2',\n        name='rviz2',\n        output='screen'\n    )\n\n\n    return launch.LaunchDescription([\n        launch.actions.DeclareLaunchArgument(name='gui', default_value='True',\n                                            description='This is a flag for joint_state_publisher_gui'),\n        launch.actions.DeclareLaunchArgument(name='model', default_value=urdfModelPath,\n                                            description='Path to the urdf model file'),\n        robot_state_publisher_node,\n        joint_state_publisher_node,\n        joint_state_publisher_gui_node,\n        rviz_node\n    ]) \n\n\n빌드를 위해 cmake 파일을 생성한다.\ncd ..\ngedit CMakeLists.txt\n\n\nif(BUILD_TESTING) 문장 위에 다음과 같이 수정한다.\ninstall(\n\n  DIRECTORY launch urdf\n  DESTINATION share/${PROJECT_NAME}\n)\n\n\n\nif(BUILD_TESTING)\n\n\n빌드한다.\n\ncolcon build\n\nsource ~/projects/ros2/install/setup.bash\n\n\nRVIZ를 시작한다.\n\nros2 launch urdf_test display.launch.py\n\n\nRVIZ 실행 후 설정은 다음과 같도록 한다. 그럼, 모델링된 URDF를 볼 수 있다.\n\n\n\n\n부록: 가제보와 연결해 시뮬레이션하는 방법\n이 내용은 정보가 많지는 않다. 다만, gazebo_ros_pkgs libgazebo_ros_laser 와 같은 패키지가 있으며, 다음과 같이 시뮬레이션 관련 프로젝트가 진행 중에 있어, 여기서 일부 내용을 확인할 수 있다.\n\n\n\n\nROS Simulation tool\n\n\nWorking with Point Cloud Library in ROS & Gazebo\n\n레퍼런스\n\nSet Up LIDAR for a Simulated Mobile Robot in ROS 2 (code)\nBuild the Warehouse Robot\nCreate Model\nROS2 rover\nROS2 package development with python\nWriting a simple publisher and subscriber (Python)\nURDF tutorial github and explain\nHow to Create URDF and Launch Files in ROS2 and Display Them in Rviz\nRVIZ2 Tutorials Episode Learn TF\nLiDAR Point Cloud Vectorization: 3D Python Tutorial (+ LoD City Models)",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-1324533825163093643",
        "isoDate": "2024-06-27T08:59:00.000Z"
      },
      {
        "title": "2024년 오픈소스 대형언어모델 소개",
        "link": "http://daddynkidsmakers.blogspot.com/2024/06/2024.html",
        "pubDate": "2024-06-25T03:51:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은 2024년 오픈소스 대형언어모델을 간략히 소개한다. LLM은 자연어 처리를 위해 개발되었지만, 현재는 멀티모달리티 모델로 발전하고 있다.<div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhwkLS_1Gsg670W-75GSRb_2513rWrvDMlJIQ3ll0Sv9PHXcVD_-UnzsmZG_r-R8a0AAXK94Js-0Tw8EI0gozDM0YJElswppM4ObtV5SuLO2msuznv4OMFxqNcas3I8zilQAzNiSoj7746K6CGm6YJJsSYy_8ZvCC8ForT1AOFFeBZqgG8PgFP2HlxiCYgk/s575/f3.PNG\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"448\" data-original-width=\"575\" height=\"311\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhwkLS_1Gsg670W-75GSRb_2513rWrvDMlJIQ3ll0Sv9PHXcVD_-UnzsmZG_r-R8a0AAXK94Js-0Tw8EI0gozDM0YJElswppM4ObtV5SuLO2msuznv4OMFxqNcas3I8zilQAzNiSoj7746K6CGm6YJJsSYy_8ZvCC8ForT1AOFFeBZqgG8PgFP2HlxiCYgk/w400-h311/f3.PNG\" width=\"400\" /></a></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiOvu8lJcHmhQISB2l5XMkXtrgZQ7uAGluD2aC2cmqfmtswBca8JJvryOqOrnz1NaVBZh_aMy_qMEwMsqnJfcpfx_jiOaGOpmfKanyjccicUvsy-q4YMPfvJJ8Hpd-5-2txvgf0DZSsYjtJddkGQZa5ews6VK9TLlNyfWC0IBVjCRjxul-vUhON-lPoVuWY/s1655/f5.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"775\" data-original-width=\"1655\" height=\"160\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiOvu8lJcHmhQISB2l5XMkXtrgZQ7uAGluD2aC2cmqfmtswBca8JJvryOqOrnz1NaVBZh_aMy_qMEwMsqnJfcpfx_jiOaGOpmfKanyjccicUvsy-q4YMPfvJJ8Hpd-5-2txvgf0DZSsYjtJddkGQZa5ews6VK9TLlNyfWC0IBVjCRjxul-vUhON-lPoVuWY/w341-h160/f5.png\" width=\"341\" /></a></div></div></div><div class=\"separator\" style=\"clear: both; text-align: center;\">다양한 LLM 모델과 자연어 처리</div><div><b>BERT&nbsp;</b></div><div>BERT 는 Google이 2018년에 도입한 LLM 제품군이다. BERT는 데이터 시퀀스를 다른 데이터 시퀀스로 변환할 수 있는 변환기 기반 모델이다. BERT의 아키텍처는 변압기 인코더의 스택이며 3억 4200만 개의 매개변수를 갖추고 있다. BERT는 대규모 데이터 코퍼스에 대해 사전 훈련된 후 자연어 추론 및 문장 텍스트 유사성과 함께 특정 작업을 수행하도록 미세 조정되었다. 이는 2019년 Google 검색 반복에서 쿼리 이해를 향상시키는 데 사용되었다.</div><div><br /></div><div><b>Claude&nbsp;&nbsp;</b></div><div>Claude&nbsp; LLM은&nbsp; AI 보조자가 유용하고 무해하며 정확하도록 돕는 일련의 원칙에 따라 AI 출력을 형성하는 헌법적 AI에 중점을 둔다. Claude는 Anthropic이라는 회사에서 만들어졌다. Claude LLM의 최신 버전은 Claude 3.5 Sonnet이다. LLM의 이전 버전보다 뉘앙스, 유머 및 복잡한 지침을 더 잘 이해하고 Claude 3 Opus의 두 배 속도로 작동하다. Claude.ai 및 Claude iOS 앱을 통해 무료로 사용할 수 있다.</div><div><br /></div><div><b>Cohere</b></div><div>Cohere는 Command, Rerank 및 Embed를 포함한 여러 LLM을 제공하는 엔터프라이즈 AI 플랫폼이다. 이러한 LLM은 특정 회사의 사용 사례에 맞게 맞춤 학습되고 미세 조정될 수 있다 . Cohere LLM을 만든 회사는 Attention Is All You Need의 저자 중 한 명이 설립했다. Cohere의 강점 중 하나는 Microsoft Azure 에 바인딩된 OpenAI와 달리 하나의 단일 클라우드에 바인딩되지 않는다는 것이다.</div><div><br /></div><div><b>Ernie</b></div><div>Ernie는 Ernie 4.0 챗봇을 지원하는 Baidu의 대규모 언어 모델이다. 이 봇은 2023년 8월에 출시되었으며 4,500만 명 이상의 사용자를 확보했다. 어니는 10조 개의 매개변수를 가지고 있다는 소문이 돌았다. 봇은 중국어에서 가장 잘 작동하지만 다른 언어로도 가능하다.</div><div><br /></div><div><b>Falcon 40B</b></div><div>Falcon 40B는 Technology Innovation Institute에서 개발한 변환기 기반의 인과 디코더 전용 모델이다. 오픈 소스이며 영어 데이터로 교육되었다. 이 모델은 Falcon 1B와 Falcon 7B(10억 및 70억 매개변수)의 두 가지 작은 변형으로도 제공된다. Amazon은 Amazon SageMaker 에서 Falcon 40B를 사용할 수 있게 만들었다 . GitHub에서도 무료로 사용할 수 있다.</div><div><br /></div><div><b>Gemini</b></div><div>Gemini는 동일한 이름의 회사 챗봇을 지원하는 Google의 LLM 제품군이다. 이 모델은 모델 전환 시 Bard에서 Gemini로 브랜드가 변경된 챗봇을 지원하는 데 Palm을 대체했다. Gemini 모델은 다중 모드이므로 이미지, 오디오, 비디오는 물론 텍스트도 처리할 수 있다. Gemini는 많은 Google 애플리케이션 및 제품에도 통합되어 있다. 울트라, 프로, 나노 세 가지 크기로 제공된다. Ultra는 가장 크고 성능이 뛰어난 모델이고 Pro는 중간 계층 모델이며 Nano는 가장 작은 모델로 기기 내 작업 효율성을 위해 설계되었다. Gemini는 대부분의 평가된 벤치마크에서 GPT-4를 능가하다.</div><div><br /></div><div><b>GPT-3</b></div><div>GPT-3는 2020년에 출시된 1,750억 개 이상의 매개변수를 갖춘 OpenAI의 대규모 언어 모델이다. GPT-3은 디코더 전용 변환기 아키텍처를 사용하다. 2022년 9월 Microsoft는 GPT-3의 기본 모델을 독점적으로 사용한다고 발표했다. GPT-3은 이전 제품보다 10배 더 커졌다. GPT-3의 학습 데이터에는 Common Crawl, WebText2, Books1, Books2 및 Wikipedia가 포함된다.</div><div><br /></div><div>GPT-3은 OpenAI가 매개변수 수를 공개적으로 제공한 GPT 시리즈 모델 중 마지막 모델이다. GPT 시리즈는 2018년 OpenAI의 논문 \"Improving Language Understanding by Generative Pre-Training\"으로 처음 소개되었다.</div><div><br /></div><div><b>GPT-4</b></div><div>GPT-4는 2023년에 출시된 OpenAI의 GPT 시리즈 중 가장 큰 모델이다. 다른 모델과 마찬가지로 트랜스포머 기반 모델 이다 . 다른 모델과 달리 매개변수 개수는 공개되지 않았지만 해당 모델에는 170조 개가 넘는다는 소문이 있다. OpenAI는 GPT-4를 다중 모드 모델로 설명하다. 즉, 언어로만 제한되는 것이 아니라 언어와 이미지를 모두 처리하고 생성 할 수 있다는 의미이다. GPT-4에는 사용자가 음성 톤과 작업을 지정할 수 있는 시스템 메시지도 도입되었다.</div><div><br /></div><div>GPT-4는 여러 학업 시험에서 인간 수준의 성능을 보여주었다. 모델 출시 당시 일각에서는 GPT-4가 인공지능 (AGI)에 가까워졌다는 추측이 나왔다. 이는 인간과 동등하거나 더 똑똑하다는 의미다. GPT-4는 Microsoft Bing 검색을 지원하며 ChatGPT Plus에서 사용할 수 있으며 최종적으로 Microsoft Office 제품에 통합될 예정이다.</div><div><br /></div><div><b>GPT-4o</b></div><div>GPT-4 Omni( GPT-4o )는 OpenAI의 GPT-4 후속 제품이며 이전 모델에 비해 몇 가지 향상된 기능을 제공하다. GPT-4o는 ChatGPT를 위한 보다 자연스러운 인간 상호 작용을 생성하며 오디오, 이미지 및 텍스트를 포함한 다양한 입력을 허용하는 대규모 다중 모드 모델이다. 대화를 통해 사용자는 일반적인 인간 대화처럼 참여할 수 있으며 실시간 상호 작용을 통해 감정을 포착할 수도 있다. GPT-4o는 사진이나 화면을 보고 상호 작용 중에 질문을 할 수 있다.</div><div><br /></div><div>GPT-4o는 인간의 응답 시간과 비슷하고 GPT-4 Turbo보다 ​​빠른 232밀리초 내에 응답할 수 있다. GPT-4o 모델은 무료이며 개발자 및 고객 제품에 사용할 수 있다.</div><div><br /></div><div><b>Lamda</b></div><div>대형 언어 모델 Meta AI(Llama)는 2023년에 출시된 Meta의 LLM이다. 가장 큰 버전은 매개변수 크기가 650억 개이다. Llama는 원래 승인된 연구원 및 개발자에게 출시되었지만 현재는 오픈 소스이다. Llama는 사용, 테스트 및 실험에 더 적은 컴퓨팅 성능이 필요한 더 작은 크기로 제공된다.</div><div><br /></div><div>Llama는 변환기 아키텍처를 사용하며 CommonCrawl, GitHub, Wikipedia 및 Project Gutenberg의 웹페이지를 포함한 다양한 공개 데이터 소스에 대해 교육을 받았다. Llama는 효과적으로 유출되어 Vicuna와 Orca를 포함한 많은 후손을 낳았다.</div><div><br /></div><div><b>Mistral</b></div><div>Mistral은 평가된 모든 벤치마크에서 비슷한 크기의 Llama의 언어 모델보다 성능이 뛰어난 70억 개의 매개변수 언어 모델이다. Mistral은 또한 지침을 따르도록 특화된 미세 조정 모델을 보유하고 있다. 크기가 작기 때문에 비즈니스 목적에 맞는 자체 호스팅 및 유능한 성능이 가능하다. Apache 2.0 라이센스로 출시되었다.</div><div><br /></div><div><b>Orca</b></div><div>Orca는 Microsoft에서 개발했으며 130억 개의 매개변수를 가지고 있다. 즉, 노트북에서 실행할 수 있을 만큼 작다. LLM이 달성한 추론 절차를 모방하여 다른 오픈 소스 모델의 발전을 개선하는 것을 목표로 하다. Orca는 훨씬 적은 수의 매개변수로 GPT-4와 동일한 성능을 달성하며 많은 작업에서 GPT-3.5와 동등하다. Orca는 LLaMA의 130억 매개변수 버전을 기반으로 구축되었다.</div><div><br /></div><div><b>Palm</b></div><div>Pathways 언어 모델은 AI 챗봇 Bard를 지원하는 Google의 5,400억 매개변수 변환기 기반 모델이다 . Google의 머신러닝용 맞춤 하드웨어인 여러 TPU 4 Pod 에서 학습되었다 . Palm은 코딩, 수학, 분류, 질문 답변 등의 추론 작업을 전문으로 하다. Palm은 복잡한 작업을 간단한 하위 작업으로 분해하는 데에도 탁월하다.</div><div><br /></div><div>PaLM은 Pathways를 구축하여 궁극적으로 여러 사용 사례의 기반이 되는 단일 모델을 만드는 Google 연구 이니셔티브에서 이름을 따왔다. 생명 과학 및 의료 정보를 위한 Med-Palm 2와 위협 분석 속도를 높이기 위한 사이버 보안 배포를 위한 Sec-Palm을 포함하여 여러 가지 정밀 조정된 버전 의 Palm이 있다 .</div><div><br /></div><div><b>Phi</b></div><div>Phi-1은 Microsoft의 변환기 기반 언어 모델이다. 단 13억 개의 매개변수로 Phi-1은 교과서 수준의 데이터 수집에 대해 4일 동안 훈련되었다. Phi-1은 더 나은 품질의 데이터와 합성 데이터에 대해 훈련된 더 작은 모델을 향한 추세의 예이다.</div><div>Phi-1은 Python 코딩을 전문으로 하며 크기가 작기 때문에 일반 기능이 적다.</div><div><br /></div><div><b>StableLM</b></div><div>StableLM은 이미지 생성기 Stable Diffusion을 개발한 Stability AI에서 개발한 오픈 소스 언어 모델 시리즈이다. 이 글을 쓰는 시점에는 30억, 70억 개의 매개변수 모델이 사용 가능하며 150억, 300억, 650억, 1,750억 개의 매개변수 모델이 진행 중이다. StableLM은 투명하고 접근 가능하며 지원을 제공하는 것을 목표로 하다.</div><div><br /></div><div><b>Vicuna</b></div><div>Vicuna는 Llama에서 파생된 또 다른 영향력 있는 오픈 소스 LLM이다. LMSYS에서 개발했으며 sharegpt.com의 데이터를 사용하여 미세 조정되었다. 여러 벤치마크에 따르면 GPT-4보다 작고 성능이 떨어지지만 해당 크기의 모델에는 적합하다. Vicuna에는 330억 개의 매개변수가 있는 반면 GPT-4에는 수조 개의 매개변수가 있다.</div><div><br /></div><div>이외에, Gemma, Phi2와 같이 3B이하 매개변수를 가지는 소형 LLM도 릴리즈되었다. 이들은 노트북과 같은 온디바이스에 설치되어 사용될 수 있다. 다음은 소형 LLM 간 성능 비교를 보여준다.</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFPomBnh3tYCvOI9OmdIM5whOXPvUVIlQFpNbT-ceNEQoaB-moPo3QJO1ognDXBDbizcKxNxoL-0C9Rn3vs3qQI5WmSLhvMgzBjV8PmIv8PysDy5xSLvnAq_FhKJqzSwK9633cIvE1Jsj3ZmMvdnzfKjL4ETKLrc39mnuRO8n5AV0OkIgT8YXPc5iEb1m1/s774/f1.PNG\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"454\" data-original-width=\"774\" height=\"235\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiFPomBnh3tYCvOI9OmdIM5whOXPvUVIlQFpNbT-ceNEQoaB-moPo3QJO1ognDXBDbizcKxNxoL-0C9Rn3vs3qQI5WmSLhvMgzBjV8PmIv8PysDy5xSLvnAq_FhKJqzSwK9633cIvE1Jsj3ZmMvdnzfKjL4ETKLrc39mnuRO8n5AV0OkIgT8YXPc5iEb1m1/w400-h235/f1.PNG\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgEbOKobtWUATJ5fdFWfgBFp5sMhFLDFgGK74poXqEFBDzevt7zJw8OoUG-NvCdtNgHC36P4-2gn-j-RtmgHXPOLFO-0KescWfO0MAIAtE-J-RkNieKN6-fixnwNfp-MBg6s_Jje7tA8TmnHdzw3qwkrlKtkpi_6xMDqbzzV9LtukEgc14hdHGTpzMdKaz8/s588/f2.PNG\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"341\" data-original-width=\"588\" height=\"233\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgEbOKobtWUATJ5fdFWfgBFp5sMhFLDFgGK74poXqEFBDzevt7zJw8OoUG-NvCdtNgHC36P4-2gn-j-RtmgHXPOLFO-0KescWfO0MAIAtE-J-RkNieKN6-fixnwNfp-MBg6s_Jje7tA8TmnHdzw3qwkrlKtkpi_6xMDqbzzV9LtukEgc14hdHGTpzMdKaz8/w400-h233/f2.PNG\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">소형 LLM 모델 간 성능 비교</div></div><div style=\"text-align: left;\"><br /><b>레퍼런스</b><br /><ul style=\"text-align: left;\"><li><a href=\"https://www.techtarget.com/whatis/feature/12-of-the-best-large-language-models\">best large language models</a></li><li><a href=\"https://developers.googleblog.com/ko/large-language-models-on-device-with-mediapipe-and-tensorflow-lite/\">MediaPipe</a></li><li><a href=\"https://medium.com/@nghihuynh_37300/exploring-gemma-a-google-lightweight-and-open-source-large-language-model-f984b1ccca85\">Exploring Gemma: A Google Lightweight and Open-Source Large Language Model</a></li><li><a href=\"https://artificialanalysis.ai/leaderboards/models\">LLM Leaderboard - Comparison of GPT-4o, Llama 3, Mistral, Gemini and over 30 models</a></li><li><a href=\"https://pub.towardsai.net/googles-gemma-vs-microsoft-s-phi-2-vs-mistral-on-summarisation-6877bc7b1a69\">Google’s Gemma vs Microsoft’s Phi-2 vs Mistral on Summarisation</a></li></ul></div>",
        "contentSnippet": "이 글은 2024년 오픈소스 대형언어모델을 간략히 소개한다. LLM은 자연어 처리를 위해 개발되었지만, 현재는 멀티모달리티 모델로 발전하고 있다.\n\n\n\n\n다양한 LLM 모델과 자연어 처리\nBERT \nBERT 는 Google이 2018년에 도입한 LLM 제품군이다. BERT는 데이터 시퀀스를 다른 데이터 시퀀스로 변환할 수 있는 변환기 기반 모델이다. BERT의 아키텍처는 변압기 인코더의 스택이며 3억 4200만 개의 매개변수를 갖추고 있다. BERT는 대규모 데이터 코퍼스에 대해 사전 훈련된 후 자연어 추론 및 문장 텍스트 유사성과 함께 특정 작업을 수행하도록 미세 조정되었다. 이는 2019년 Google 검색 반복에서 쿼리 이해를 향상시키는 데 사용되었다.\n\n\nClaude  \nClaude  LLM은  AI 보조자가 유용하고 무해하며 정확하도록 돕는 일련의 원칙에 따라 AI 출력을 형성하는 헌법적 AI에 중점을 둔다. Claude는 Anthropic이라는 회사에서 만들어졌다. Claude LLM의 최신 버전은 Claude 3.5 Sonnet이다. LLM의 이전 버전보다 뉘앙스, 유머 및 복잡한 지침을 더 잘 이해하고 Claude 3 Opus의 두 배 속도로 작동하다. Claude.ai 및 Claude iOS 앱을 통해 무료로 사용할 수 있다.\n\n\nCohere\nCohere는 Command, Rerank 및 Embed를 포함한 여러 LLM을 제공하는 엔터프라이즈 AI 플랫폼이다. 이러한 LLM은 특정 회사의 사용 사례에 맞게 맞춤 학습되고 미세 조정될 수 있다 . Cohere LLM을 만든 회사는 Attention Is All You Need의 저자 중 한 명이 설립했다. Cohere의 강점 중 하나는 Microsoft Azure 에 바인딩된 OpenAI와 달리 하나의 단일 클라우드에 바인딩되지 않는다는 것이다.\n\n\nErnie\nErnie는 Ernie 4.0 챗봇을 지원하는 Baidu의 대규모 언어 모델이다. 이 봇은 2023년 8월에 출시되었으며 4,500만 명 이상의 사용자를 확보했다. 어니는 10조 개의 매개변수를 가지고 있다는 소문이 돌았다. 봇은 중국어에서 가장 잘 작동하지만 다른 언어로도 가능하다.\n\n\nFalcon 40B\nFalcon 40B는 Technology Innovation Institute에서 개발한 변환기 기반의 인과 디코더 전용 모델이다. 오픈 소스이며 영어 데이터로 교육되었다. 이 모델은 Falcon 1B와 Falcon 7B(10억 및 70억 매개변수)의 두 가지 작은 변형으로도 제공된다. Amazon은 Amazon SageMaker 에서 Falcon 40B를 사용할 수 있게 만들었다 . GitHub에서도 무료로 사용할 수 있다.\n\n\nGemini\nGemini는 동일한 이름의 회사 챗봇을 지원하는 Google의 LLM 제품군이다. 이 모델은 모델 전환 시 Bard에서 Gemini로 브랜드가 변경된 챗봇을 지원하는 데 Palm을 대체했다. Gemini 모델은 다중 모드이므로 이미지, 오디오, 비디오는 물론 텍스트도 처리할 수 있다. Gemini는 많은 Google 애플리케이션 및 제품에도 통합되어 있다. 울트라, 프로, 나노 세 가지 크기로 제공된다. Ultra는 가장 크고 성능이 뛰어난 모델이고 Pro는 중간 계층 모델이며 Nano는 가장 작은 모델로 기기 내 작업 효율성을 위해 설계되었다. Gemini는 대부분의 평가된 벤치마크에서 GPT-4를 능가하다.\n\n\nGPT-3\nGPT-3는 2020년에 출시된 1,750억 개 이상의 매개변수를 갖춘 OpenAI의 대규모 언어 모델이다. GPT-3은 디코더 전용 변환기 아키텍처를 사용하다. 2022년 9월 Microsoft는 GPT-3의 기본 모델을 독점적으로 사용한다고 발표했다. GPT-3은 이전 제품보다 10배 더 커졌다. GPT-3의 학습 데이터에는 Common Crawl, WebText2, Books1, Books2 및 Wikipedia가 포함된다.\n\n\nGPT-3은 OpenAI가 매개변수 수를 공개적으로 제공한 GPT 시리즈 모델 중 마지막 모델이다. GPT 시리즈는 2018년 OpenAI의 논문 \"Improving Language Understanding by Generative Pre-Training\"으로 처음 소개되었다.\n\n\nGPT-4\nGPT-4는 2023년에 출시된 OpenAI의 GPT 시리즈 중 가장 큰 모델이다. 다른 모델과 마찬가지로 트랜스포머 기반 모델 이다 . 다른 모델과 달리 매개변수 개수는 공개되지 않았지만 해당 모델에는 170조 개가 넘는다는 소문이 있다. OpenAI는 GPT-4를 다중 모드 모델로 설명하다. 즉, 언어로만 제한되는 것이 아니라 언어와 이미지를 모두 처리하고 생성 할 수 있다는 의미이다. GPT-4에는 사용자가 음성 톤과 작업을 지정할 수 있는 시스템 메시지도 도입되었다.\n\n\nGPT-4는 여러 학업 시험에서 인간 수준의 성능을 보여주었다. 모델 출시 당시 일각에서는 GPT-4가 인공지능 (AGI)에 가까워졌다는 추측이 나왔다. 이는 인간과 동등하거나 더 똑똑하다는 의미다. GPT-4는 Microsoft Bing 검색을 지원하며 ChatGPT Plus에서 사용할 수 있으며 최종적으로 Microsoft Office 제품에 통합될 예정이다.\n\n\nGPT-4o\nGPT-4 Omni( GPT-4o )는 OpenAI의 GPT-4 후속 제품이며 이전 모델에 비해 몇 가지 향상된 기능을 제공하다. GPT-4o는 ChatGPT를 위한 보다 자연스러운 인간 상호 작용을 생성하며 오디오, 이미지 및 텍스트를 포함한 다양한 입력을 허용하는 대규모 다중 모드 모델이다. 대화를 통해 사용자는 일반적인 인간 대화처럼 참여할 수 있으며 실시간 상호 작용을 통해 감정을 포착할 수도 있다. GPT-4o는 사진이나 화면을 보고 상호 작용 중에 질문을 할 수 있다.\n\n\nGPT-4o는 인간의 응답 시간과 비슷하고 GPT-4 Turbo보다 ​​빠른 232밀리초 내에 응답할 수 있다. GPT-4o 모델은 무료이며 개발자 및 고객 제품에 사용할 수 있다.\n\n\nLamda\n대형 언어 모델 Meta AI(Llama)는 2023년에 출시된 Meta의 LLM이다. 가장 큰 버전은 매개변수 크기가 650억 개이다. Llama는 원래 승인된 연구원 및 개발자에게 출시되었지만 현재는 오픈 소스이다. Llama는 사용, 테스트 및 실험에 더 적은 컴퓨팅 성능이 필요한 더 작은 크기로 제공된다.\n\n\nLlama는 변환기 아키텍처를 사용하며 CommonCrawl, GitHub, Wikipedia 및 Project Gutenberg의 웹페이지를 포함한 다양한 공개 데이터 소스에 대해 교육을 받았다. Llama는 효과적으로 유출되어 Vicuna와 Orca를 포함한 많은 후손을 낳았다.\n\n\nMistral\nMistral은 평가된 모든 벤치마크에서 비슷한 크기의 Llama의 언어 모델보다 성능이 뛰어난 70억 개의 매개변수 언어 모델이다. Mistral은 또한 지침을 따르도록 특화된 미세 조정 모델을 보유하고 있다. 크기가 작기 때문에 비즈니스 목적에 맞는 자체 호스팅 및 유능한 성능이 가능하다. Apache 2.0 라이센스로 출시되었다.\n\n\nOrca\nOrca는 Microsoft에서 개발했으며 130억 개의 매개변수를 가지고 있다. 즉, 노트북에서 실행할 수 있을 만큼 작다. LLM이 달성한 추론 절차를 모방하여 다른 오픈 소스 모델의 발전을 개선하는 것을 목표로 하다. Orca는 훨씬 적은 수의 매개변수로 GPT-4와 동일한 성능을 달성하며 많은 작업에서 GPT-3.5와 동등하다. Orca는 LLaMA의 130억 매개변수 버전을 기반으로 구축되었다.\n\n\nPalm\nPathways 언어 모델은 AI 챗봇 Bard를 지원하는 Google의 5,400억 매개변수 변환기 기반 모델이다 . Google의 머신러닝용 맞춤 하드웨어인 여러 TPU 4 Pod 에서 학습되었다 . Palm은 코딩, 수학, 분류, 질문 답변 등의 추론 작업을 전문으로 하다. Palm은 복잡한 작업을 간단한 하위 작업으로 분해하는 데에도 탁월하다.\n\n\nPaLM은 Pathways를 구축하여 궁극적으로 여러 사용 사례의 기반이 되는 단일 모델을 만드는 Google 연구 이니셔티브에서 이름을 따왔다. 생명 과학 및 의료 정보를 위한 Med-Palm 2와 위협 분석 속도를 높이기 위한 사이버 보안 배포를 위한 Sec-Palm을 포함하여 여러 가지 정밀 조정된 버전 의 Palm이 있다 .\n\n\nPhi\nPhi-1은 Microsoft의 변환기 기반 언어 모델이다. 단 13억 개의 매개변수로 Phi-1은 교과서 수준의 데이터 수집에 대해 4일 동안 훈련되었다. Phi-1은 더 나은 품질의 데이터와 합성 데이터에 대해 훈련된 더 작은 모델을 향한 추세의 예이다.\nPhi-1은 Python 코딩을 전문으로 하며 크기가 작기 때문에 일반 기능이 적다.\n\n\nStableLM\nStableLM은 이미지 생성기 Stable Diffusion을 개발한 Stability AI에서 개발한 오픈 소스 언어 모델 시리즈이다. 이 글을 쓰는 시점에는 30억, 70억 개의 매개변수 모델이 사용 가능하며 150억, 300억, 650억, 1,750억 개의 매개변수 모델이 진행 중이다. StableLM은 투명하고 접근 가능하며 지원을 제공하는 것을 목표로 하다.\n\n\nVicuna\nVicuna는 Llama에서 파생된 또 다른 영향력 있는 오픈 소스 LLM이다. LMSYS에서 개발했으며 sharegpt.com의 데이터를 사용하여 미세 조정되었다. 여러 벤치마크에 따르면 GPT-4보다 작고 성능이 떨어지지만 해당 크기의 모델에는 적합하다. Vicuna에는 330억 개의 매개변수가 있는 반면 GPT-4에는 수조 개의 매개변수가 있다.\n\n\n이외에, Gemma, Phi2와 같이 3B이하 매개변수를 가지는 소형 LLM도 릴리즈되었다. 이들은 노트북과 같은 온디바이스에 설치되어 사용될 수 있다. 다음은 소형 LLM 간 성능 비교를 보여준다.\n\n\n소형 LLM 모델 간 성능 비교\n\n레퍼런스\n\nbest large language models\nMediaPipe\nExploring Gemma: A Google Lightweight and Open-Source Large Language Model\nLLM Leaderboard - Comparison of GPT-4o, Llama 3, Mistral, Gemini and over 30 models\nGoogle’s Gemma vs Microsoft’s Phi-2 vs Mistral on Summarisation",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-6277705680864866196",
        "isoDate": "2024-06-25T03:51:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김병환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "푸른 산호초",
        "link": "https://kangmyounghun.blogspot.com/2024/06/blog-post.html",
        "pubDate": "2024-06-30T10:09:00.002Z",
        "author": "강명훈",
        "content": "<div>알 수 없는 유튜브 알고리즘이 들려준 노래. 세간을 떠들썩하게 했던 '하이브 사태'로 알게 된 뉴진스의 멤버 하니가 일본 공연에서 부른 푸른 산호초.</div><div><br /></div>\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" frameborder=\"0\" height=\"315\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/Rj7N4ThLGQY?si=qhlyMn-h1B1edRRH\" title=\"YouTube video player\" width=\"560\"></iframe>\n<div><br /></div><div><span><a name='more'></a></span></div><div>원곡.</div><div><br /></div>\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" frameborder=\"0\" height=\"315\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/mrgApjHbRLw?si=ZK2RiFbPSKQyYXB-\" title=\"YouTube video player\" width=\"560\"></iframe>\n<div><br /></div><div>일본 버블 시대 풍요를 상징하는 노래라고 하는데 원곡도, 마츠다 세이코라는 가수도 처음이지만, 한껏 청량한 도입부가 인상적이면서도 아련하다. 마츠다 세이코는 뽕기가 있어서 좋고, 하니는 뽕기가 없어서 좋다.</div><div><br /></div>\n<div>노래와 가수가 서로의 청량함을 증폭시키는 시너지가 느껴진다. 마츠다 세이코의 무대를 보면 그 시절 제스쳐 하나하나가 새롭게 다가오는데, 하니가 기교 없이 깔끔하게 부르면서도 포인트를 잘 살린 것 같다.&nbsp;</div><div><br /></div><div>좋은날을 부르던 아이유의 치마 제스쳐도 떠오르고, 잘 모르는 분야지만 선곡, 스타일 등등 기획을 참 잘한 느낌. 영화는 봐도 일본 노래는 왠지 거부감이 있었는데, 이 노래는 귀에 잘 감긴다. 내가 일본 노래를 흥얼거리는 날이 오는구나. 그래 절반 남은 올해 노동요는 너다.</div><div><br /></div><div><div><i>아아 와타시노 코이와 미나미노 카제니 놋테 하시루와</i></div><div><i>아아 아오이 카제 키이테 하시레 아노 시마에</i></div><div><i>아나타토 아우타 비니</i></div><div><i>스베테오 와스레테 시마우노</i></div><div><i>하샤이다 와타시와 Little girl</i></div><div><i>아츠이 무네 키코에루데쇼</i></div><div><i>스하다니 키라키라 산 고쇼</i></div><div><i>후타릿 키리데 나가사레테모 이이노</i></div><div><i>아나타가 스키</i></div><div><i>아아 와타시노 코이와 미나미노 카제니 놋테 하시루와</i></div><div><i>아아 아오이 카제 키이테 하시레 아노 시마에</i></div><div><i><br /></i></div><div><i>나미다가 코보레 루노</i></div><div><i>야사시이 메오 시테 미나이데</i></div><div><i>우츠무키 카겐노 Little Rose</i></div><div><i>하나비라 후레테호시이노</i></div><div><i>나기사와 코이노 모스 그린</i></div><div><i>후타리노 호호가 치카즈이테 유쿠노요</i></div><div><i>아나타가 스키</i></div><div><i>아아 와타시노 코이와 미나미노 카제니 놋테 하시루와</i></div><div><i>아아 아오이 카제 키이테 하시레 아노 시마에</i></div></div><div><br /></div><div><b>관련 글</b></div><div><ul style=\"text-align: left;\"><li><a href=\"https://kangmyounghun.blogspot.com/2019/11/blog-post.html\">불티</a></li></ul></div>",
        "contentSnippet": "알 수 없는 유튜브 알고리즘이 들려준 노래. 세간을 떠들썩하게 했던 '하이브 사태'로 알게 된 뉴진스의 멤버 하니가 일본 공연에서 부른 푸른 산호초.\n\n\n\n\n\n\n원곡.\n\n\n\n\n\n일본 버블 시대 풍요를 상징하는 노래라고 하는데 원곡도, 마츠다 세이코라는 가수도 처음이지만, 한껏 청량한 도입부가 인상적이면서도 아련하다. 마츠다 세이코는 뽕기가 있어서 좋고, 하니는 뽕기가 없어서 좋다.\n\n\n노래와 가수가 서로의 청량함을 증폭시키는 시너지가 느껴진다. 마츠다 세이코의 무대를 보면 그 시절 제스쳐 하나하나가 새롭게 다가오는데, 하니가 기교 없이 깔끔하게 부르면서도 포인트를 잘 살린 것 같다. \n\n\n좋은날을 부르던 아이유의 치마 제스쳐도 떠오르고, 잘 모르는 분야지만 선곡, 스타일 등등 기획을 참 잘한 느낌. 영화는 봐도 일본 노래는 왠지 거부감이 있었는데, 이 노래는 귀에 잘 감긴다. 내가 일본 노래를 흥얼거리는 날이 오는구나. 그래 절반 남은 올해 노동요는 너다.\n\n\n아아 와타시노 코이와 미나미노 카제니 놋테 하시루와\n아아 아오이 카제 키이테 하시레 아노 시마에\n아나타토 아우타 비니\n스베테오 와스레테 시마우노\n하샤이다 와타시와 Little girl\n아츠이 무네 키코에루데쇼\n스하다니 키라키라 산 고쇼\n후타릿 키리데 나가사레테모 이이노\n아나타가 스키\n아아 와타시노 코이와 미나미노 카제니 놋테 하시루와\n아아 아오이 카제 키이테 하시레 아노 시마에\n\n\n나미다가 코보레 루노\n야사시이 메오 시테 미나이데\n우츠무키 카겐노 Little Rose\n하나비라 후레테호시이노\n나기사와 코이노 모스 그린\n후타리노 호호가 치카즈이테 유쿠노요\n아나타가 스키\n아아 와타시노 코이와 미나미노 카제니 놋테 하시루와\n아아 아오이 카제 키이테 하시레 아노 시마에\n\n\n관련 글\n\n불티",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-5155437865387451990",
        "isoDate": "2024-06-30T10:09:00.002Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "ZGC(Z Garbage Collector)",
        "link": "https://sungjk.github.io/2024/06/29/zgc.html",
        "pubDate": "2024-06-29T00:00:00+00:00",
        "content": "\n            \n            &lt;p&gt;ZGC(Z Garbage Collector)는 JVM 진영에서 Serial → Parallel → CMS → G1 이후에 새롭게 등장한 Garbage Collector 입니다. JDK 11에 Experimental로 추가되었고, JDK 15에서 Production Ready 상태로 전환되었으며, LDT 버전인 JDK 17에도 반영되었습니다. ZGC의 주요 목표 중 하나는 Stop-The-World(STW) 시간을 1ms 이하로 줄이는 것입니다.&lt;/p&gt;\n\n&lt;p&gt;과거에 CMS GC를 사용하는 애플리케이션을 운영하다보면 STW 시간이 길어지다 보면 요청을 제대로 처리하지 못하는 현상 때문에 애를 먹었던게 생각나네요. ZGC는 대용량 힙 메모리에서도 낮은 지연 시간(low latency)을 목표로 설계되었기 때문에, 이를 적용하는 것만으로도 충분한 가치가 있어보이는 GC 알고리즘이었습니다. 이번 글에서는 애플리케이션의 성능을 개선하면서 적용했던 ZGC에 대해 소개하려고 합니다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;zgc&quot;&gt;ZGC&lt;/h1&gt;\n\n&lt;p&gt;ZGC는 대용량 힙 메모리에서도 낮은 지연 시간(low latency)을 목표로 설계되었습니다. Heap Allocation, Compaction 등 거의 모든 면에서 변화가 있었기 때문에, 꼭 바로 이전에 나온 G1과 비교하지 않더라도 ZGC 자체로도 재미있는 피쳐들을 가지고 있습니다.&lt;/p&gt;\n\n&lt;p&gt;아래는 2023년 Oracle DevLive Level Up에서 발표된 &lt;a href=&quot;https://youtu.be/OnodHoNYE1Y?si=dtTtNzjkC-KK5ZIt&quot;&gt;Z Garbage Collector: The Next Generation&lt;/a&gt;에 소개된 ZGC의 특징들입니다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: 확장 가능하도록 설계되어 수백 MB에서 최대 수 TB 메모리 처리&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Low Latency&lt;/strong&gt;: 1MS 미만의 일정한 STW 시간(puase-time)&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Auto-tuning&lt;/strong&gt;: 성능 최적화에 필요한 튜닝의 양을 줄이기기 위해 GC의 많은 튜닝 설정들을 자동화&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Throughput&lt;/strong&gt;: 동일한 워크로드에서 전체 성능의 15% 내에서 성능 유지&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-00.png&quot; alt=&quot;ZGC&quot; title=&quot;ZGC&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-01.png&quot; alt=&quot;ZGC&quot; title=&quot;ZGC&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;strong&gt;Concurrent&lt;/strong&gt;:  ZGC는 대부분의 작업을 Java 애플리케이션 스레드가 실행되는 동안 동시에 수행. GC 동안 애플리케이션의 응답성을 유지하는 데 도움을 준다.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Constant pause times&lt;/strong&gt;:  GC 동안 발생하는 STW(pause-time)이 일정하게 유지되며, 힙 크기나 라이브 객체의 크기에 따라 비례적으로 증가하지 않는다.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Parallel&lt;/strong&gt;:  여러 스레드를 동시에 사용하여 GC 수행해서 더 빠르게 완료. Reference 할당마다 실행되는 Load Barrier를 통해 GC에 필요한 작업들을 멀티 스레드로 애플리케이션 스레드와 동시에 진행.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Compacting&lt;/strong&gt;:  메모리 단편화를 줄이기 위해 객체를 이동시켜서 메모리 할당 효율성을 높인다.\n    &lt;ul&gt;\n      &lt;li&gt;G1GC는 Compaction을 STW 동안 수행하는 반면, ZGC는 애플리케이션 스레드와 병렬로 수행.&lt;/li&gt;\n      &lt;li&gt;즉, 객체 이동 및 업데이트 작업을 애플리케이션이 실행되는 동안 동시에 수행한다.&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Region-based&lt;/strong&gt;:  메모리를 여러 영역으로 나누어 관리하며, 많은 가비지가 생성되는 영역에 집중하여 효율적으로 GC 수행&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;NUMA-aware&lt;/strong&gt;:  NUMA(Non-Uniform Memory Access) 아키텍처를 인식하고, CPU에 가까운 메모리에 객체를 할당하여 성능을 최적화&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Load barriers &amp;amp; Colored pointers&lt;/strong&gt;:\n    &lt;ul&gt;\n      &lt;li&gt;&lt;strong&gt;Load barriers&lt;/strong&gt;:  메모리 로드 시 특정 조건을 확인하는 메커니즘, G C중에도 안전한 메모리 접근을 보장&lt;/li&gt;\n      &lt;li&gt;&lt;strong&gt;Colored pointers&lt;/strong&gt;:  포인터에 색상을 지정하여 객체의 상태를 추적하고, 이를 통해 GC 효율적 수행&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Auto tuning&lt;/strong&gt;:  복잡한 설정 없이 자동으로 최적화되도록 설계되었다. 복잡한 설정을 조정할 필요 없이 ZGC의 혜택을 누릴 수 있다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-02.png&quot; alt=&quot;ZGC&quot; title=&quot;ZGC&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;heap-allocation&quot;&gt;Heap Allocation&lt;/h3&gt;\n\n&lt;p&gt;&lt;strong&gt;G1 GC(Garbage First Garbage Collector)&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;\n\n&lt;p&gt;G1GC는 Garbage Collection을 보다 효율적으로 수행하기 위해 Heap을 동일한 크기의 여러 힙 영역(Regions)으로 나눕니다. 그리고 각 Heap 영역은 서로 다른 역할을 담당합니다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Eden Space: 새로 생성된 객체들이 할당되는 공간.&lt;/li&gt;\n  &lt;li&gt;Survivor Space: Eden 영역에서 생존한 객체들이 이동되는 공간.&lt;/li&gt;\n  &lt;li&gt;Old Generation: Survivor 영역에서 생존한 오래된 객체들이 이동되는 공간.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/g1-heap-allocation.png&quot; alt=&quot;G1 Heap Allocation&quot; title=&quot;G1 Heap Allocation&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;ZGC (Z Garbage Collector)&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;\n\n&lt;p&gt;ZGC는 메모리 단편화를 줄이고 관리 효율성을 높이기 위해 다양한 크기의 메모리 블록으로 Heap을 나누어 사용합니다. 마찬가지로 각 Heap 영역은 서로 다른 역할을 담당합니다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Small: 작은 객체들이 할당되는 영역.&lt;/li&gt;\n  &lt;li&gt;Medium: 중간 크기 객체들이 할당되는 영역.&lt;/li&gt;\n  &lt;li&gt;Large(N x 2 MB): 큰 객체들이 할당되는 영역. N은 객체 크기에 따라 달라집니다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-heap-allocation.png&quot; alt=&quot;ZGC Heap Allocation&quot; title=&quot;ZGC Heap Allocation&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;zgc를-도입하며-발생하는-trade-off&quot;&gt;ZGC를 도입하며 발생하는 Trade-off&lt;/h3&gt;\n\n&lt;p&gt;ZGC는 별도 설정 없이 자동으로 최적화까지 해주니 모든 면에서 우수해보입니다. 그런데 ZGC를 도입하며 발생할 수 있는 trade-off가 몇가지 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1) CPU 자원 효율 문제&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;ZGC는 초당 1ms 이하의 pause time을 유지하면서도 최대 16TB 크기의 힙을 지원하는 것으로 설계되었습니다. 대부분의 작업을 Java 애플리케이션 스레드가 실행되는 동안 동시에 수행하기 때문에, 그만큼 CPU 자원을 사용하게 되고, 이는 &lt;strong&gt;애플리케이션의 처리량(Throughput) 감소에 영향&lt;/strong&gt;을 줄 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;특히 초기 ZGC(~JDK 21)는 단일 세대 ZGC(Single-generational ZGC 또는 Non-generational ZGC)라고도 부르는데, 이제 막 생성된 객체와 오래된 객체 간의 구분이 따로 없어서 단일 세대라고 부릅니다. 그러다보니 GC 수행 과정에서 모든 객체를 대상으로 정리가 발생하기 때문에, CPU 활용 효율면에서는 조금은 더 취약합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;2) 객체 할당 지연(Allocation stall) 문제(← 1번으로 인해 발생)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;새로운 객체가 메모리에 할당되는 속도가 GC가 메모리를 회수하는 속도보다 빠를 때 할당 지연(Allocation stall) 문제가 발생합니다. 이건 메모리가 부족하기 때문에 발생하는데, GC가 메모리를 회수하는 동안 애플리케이션은 새로운 객체를 할당하기 위해 기다려야되고, 이로 인해 애플리케이션의 성능이 저하될 수 있습니다. 이건 1번으로 인한 부수 효과인데, 전체 힙 대상으로 한 번에 GC를 수행하기 때문에 처리가 오래 걸리기 때문입니다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;generational-zgc&quot;&gt;Generational ZGC&lt;/h1&gt;\n\n&lt;p&gt;그래서 이 문제를 해결하기 위해 JDK 21에 Generational ZGC이 등장했습니다. ZGC와 동일한데 Heap을 논리적으로 두 세대로 분리한 차이가 있습니다(Young, Old). 객체가 할당되면 먼저 자주 스캔되는 Young Generation에 배치되고, 객체가 충분히 오래 살아남으면 Old Generation으로 승격됩니다.&lt;/p&gt;\n\n&lt;p&gt;처리량 측면에서, Generational ZGC는 JDK 17의 단일 세대 ZGC 대비 약 10%의 개선을 보였으며, 약간의 저하가 있었던 JDK 21의 단일 세대 ZGC 대비 약 10% 이상의 성능 향상을 보였다고 합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-young-old.png&quot; alt=&quot;ZGC Young &amp;amp; Old&quot; title=&quot;ZGC Young &amp;amp; Old&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;주요-차이점&quot;&gt;주요 차이점&lt;/h3&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-vs-generational-zgc.png&quot; alt=&quot;ZGC vs. Generational ZGC&quot; title=&quot;ZGC vs. Generational ZGC&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;performances&quot;&gt;Performances&lt;/h3&gt;\n\n&lt;p&gt;단일 세대와의 성능 차이는 &lt;a href=&quot;https://inside.java/2023/11/28/gen-zgc-explainer/&quot;&gt;Introducing Generational ZGC&lt;/a&gt;에 잘 소개되어 있으니 참고하시면 좋겠습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-performance-00.png&quot; alt=&quot;ZGC Performance&quot; title=&quot;ZGC Performance&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-performance-01.png&quot; alt=&quot;ZGC Performance&quot; title=&quot;ZGC Performance&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-performance-02.png&quot; alt=&quot;ZGC Performance&quot; title=&quot;ZGC Performance&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-performance-03.png&quot; alt=&quot;ZGC Performance&quot; title=&quot;ZGC Performance&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;generational-zgc-활성화&quot;&gt;Generational ZGC 활성화&lt;/h3&gt;\n\n&lt;p&gt;Generational ZGC를 활성화하려면 ZGC 사용을 위한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-XX:+UseZGC&lt;/code&gt; 옵션에 더해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-XX:+ZGenerational&lt;/code&gt; argument도 추가해줘야 합니다(JDK 버전은 21 이상).&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;참고로, JDK 21에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-XX:+ZGenerational&lt;/code&gt; 옵션이 없으면 Single-generation ZGC가 기본값입니다. 따라서 이 옵션을 추가하지 않으면 단일 세대의 ZGC가 동작합니다.&lt;/li&gt;\n  &lt;li&gt;미래에는 Generational ZGC가 기본값이 될 예정이라고 합니다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;jvm-메모리-할당량이-커보이는-현상&quot;&gt;JVM 메모리 할당량이 커보이는 현상&lt;/h3&gt;\n\n&lt;p&gt;ZGC 적용 이후에 메트릭을 살펴보면 선언한 Max Heap Size 보다 더 큰 메모리가 관측됩니다. JVM 애플리케이션의 Max Heap Size를 3GB로 설정했는데, Grafana(export by prometheus)에서 관측된 메트릭은 2배 정도인 6GB가 관측되었습니다. 의도하지 않았는데 재밌는 현상입니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-heap-metric.png&quot; alt=&quot;ZGC JVM Heap&quot; title=&quot;ZGC JVM Heap&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;`jvm_memory_max_bytes`: The total memory (in bytes) in the JVM runtime.&lt;/center&gt;\n\n&lt;p&gt;&lt;strong&gt;1. 다중 매핑&lt;/strong&gt;:&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;ZGC는 동일한 주소(메모리)를 3개의 다른 view로 매핑: marked0, marked1, remapped&lt;/li&gt;\n  &lt;li&gt;이 3개의 view는 virtual memory address에 반영되는데, 동일 물리 메모리를 3개의 다른 가상 메모리에 맵핑되는 형태. 즉, 각 물리 메모리 페이지에 3개의 가상 페이지가 맵핑됩니다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;2. 가상 메모리 사용 증가:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;이런 다중 매핑으로 인해 virtual memory 사용량이 실제 physical memory 사용량보다 크게 나타날 수 있어요.&lt;/li&gt;\n  &lt;li&gt;예를 들어, 힙 사이즈가 1GB인 경우 virtual memory는 최대 3GB까지 관측될 수 있어요.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;3. Generational GC 영향:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;만약 ZGC가 현재 Single-generation이 아닌 Young, Old 세대로 구성된 generational GC 으로 되면 맵핑 수가 6배까지 증가할 수 있어요.&lt;/li&gt;\n  &lt;li&gt;즉, max heap size의 6배에 해당하는 virtual memory 사용량이 관측될 수 있어요.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;결론은 ZGC의 다중 매핑으로 인해 memory 사용량이 실제보다 크게 관측되기 때문이다. 처음엔 Grafana JVM Metric만 보고 잘못 설정한게 있나 헷갈렸는데, 검색하다가 &lt;a href=&quot;https://stackoverflow.com/questions/57899020/zgc-max-heap-size-exceed-physical-memory/61470663#61470663&quot;&gt;Stackoverflow에 재미난 답변&lt;/a&gt;도 발견했다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-virtual-memory.png&quot; alt=&quot;ZGC Virtual Memory Space&quot; title=&quot;ZGC Virtual Memory Space&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;zgc-적용후-메트릭-변화&quot;&gt;ZGC 적용후 메트릭 변화&lt;/h1&gt;\n\n&lt;p&gt;ZGC를 적용하기 전에는 G1GC를 사용중이었고, Eden, Survivor 영역 그리고 jvm parameter 등에 대한 별도 튜닝은 하지 않고 기본 설정을 사용하고 있었습니다.&lt;/p&gt;\n\n&lt;h3 id=&quot;g1-gc-적용된-애플리케이션-메트릭&quot;&gt;G1 GC 적용된 애플리케이션 메트릭&lt;/h3&gt;\n\n&lt;p&gt;아래는 임의의 2개 Pod에서 CPU, Heap Memory와 STW에 의한 Pause Time을 관측한 결과다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/g1-0-memory.png&quot; alt=&quot;G1GC metric - memory&quot; title=&quot;G1GC metric - memory&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Eden used: max(1.79Gb), avg(958MB) | CPU usage: system avg(0.114), max(0.137)&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/g1-1-memory.png&quot; alt=&quot;G1GC metric - memory&quot; title=&quot;G1GC metric - memory&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Eden used: max(1.77Gb), avg(888MB) | CPU usage: system avg(0.105), max(0.161)&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/g1-0-pause-time.png&quot; alt=&quot;G1GC metric - pause time&quot; title=&quot;G1GC metric - pause time&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Pause Time: max(1.6ms), avg(259μs)&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/g1-1-pause-time.png&quot; alt=&quot;G1GC metric - pause time&quot; title=&quot;G1GC metric - pause time&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Pause Time: max(1.87ms), avg(223μs)&lt;/center&gt;\n\n&lt;h3 id=&quot;zgc-적용된-애플리케이션-메트릭&quot;&gt;ZGC 적용된 애플리케이션 메트릭&lt;/h3&gt;\n\n&lt;p&gt;아래 메트릭도 마찬가지로 ZGC를 적용한 이후에 임의의 2개 Pod에서 CPU, Heap Memory와 STW에 의한 Pause Time을 관측한 결과다. 그런데 이 메트릭은 Generational ZGC가 아닌 Single-generation ZGC가 적용되었을때의 결과다. 그래서 메트릭을 보면 JVM Heap Memory 영역이 ZHeap 하나만 표현된걸 볼 수 있다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-0-memory.png&quot; alt=&quot;ZGC metric - memory&quot; title=&quot;ZGC metric - memory&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Heap used: max(998MB), avg(616MB)  |  CPU usage: system avg(0.153), max(0.351)&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-1-memory.png&quot; alt=&quot;ZGC metric - memory&quot; title=&quot;ZGC metric - memory&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Heap used: max(1.37GB), avg(798MB)  |  CPU usage: system avg(0.137), max(0.263)&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-0-pause-time.png&quot; alt=&quot;ZGC metric - pause time&quot; title=&quot;ZGC metric - pause time&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Pause Time:  max(66.7μs) avg(4.49μs)&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-1-pause-time.png&quot; alt=&quot;ZGC metric - pause time&quot; title=&quot;ZGC metric - pause time&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Pause Time:  max(66.7μs) avg(5.51μs)&lt;/center&gt;\n\n&lt;h3 id=&quot;메트릭-변화g1--non-gernerational-zgc&quot;&gt;메트릭 변화(G1 → Non Gernerational ZGC):&lt;/h3&gt;\n\n&lt;p&gt;Non Gernerational(Single-generational) ZGC를 적용하고 나서 CPU 사용량을 증가하고, Memory 사용량과 STW에 의한 Pause Time은 감소했습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;memory usage:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;used 기준 약 1.68배 감소(1.16 GiB → 0.69 GiB)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;cpu usage:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;max 약 2배 증가 (0.137 → 0.351)&lt;/li&gt;\n  &lt;li&gt;avg 약 1.3배 증가 (0.105 → 0.137)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;pause time:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;max 약 28배 감소(1.87ms → 66.7μs)&lt;/li&gt;\n  &lt;li&gt;avg 약 47배 감소(259μs → 5.51μs)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;다양한-요소를-고려해서-gc-알고리즘-선택하기&quot;&gt;다양한 요소를 고려해서 GC 알고리즘 선택하기&lt;/h1&gt;\n\n&lt;p&gt;GC를 선택할 때 throughput, latency, 리소스 사용량 등 다양한 요소를 고려해야 합니다. 예를 들어, G1과 ZGC는 각각 throughput과 latency 기준으로 애플리케이션 영향도가 달라질 수 있어요.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;G1은 대부분의 시나리오에서 균형 잡힌 성능을 제공하지만, 변동 폭이 큰 객체 할당이나 오래 실행되는 작업에 적합한 경우가 있고,&lt;/li&gt;\n  &lt;li&gt;ZGC는 매우 짧은 pause time을 제공하지만 일부 시나리오에서는 G1보다 낮은 throuput을 보일 수 있습니다.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/gc-compare.png&quot; alt=&quot;GC&quot; title=&quot;GC&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;위에서 ZGC를 적용한 애플리케이션은 제품 특성상 Low Latency를 보장해야 하고 STW로 인한 영향을 최소화해야 하기 때문에 CPU 리소스를 조금 희생하더라도 Memory와 Pause Time 감소라는 이점을 챙길 수 있었습니다. 따라서 애플리케이션의 특성과 요구 사항에 따라 적당한 GC를 선택하기를 권장드립니다. 이런 내용을 고려하지 않고 기본 설정을 변경하면 예상치 못한 장애를 맞을 수 있으니…&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;1.Latency&lt;/strong&gt;:  애플리케이션의 빠른 응답이 중요한 경우, pause time을 최소화하는 GC 고려해보기&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;G1GC 또는 ZGC(Generational) 살펴보기&lt;/li&gt;\n  &lt;li&gt;힙 메모리 영역 조정해보기(ex. 객체 크기가 큰데 survivor 영역이 작으면 불필요하게 GC 자주 발생)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;2. Pause Time&lt;/strong&gt;:  STW에 따른 pause time이 중요한 경우, 마찬가지로 pause time을 최소화하는 GC 고려해보기&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;G1GC 또는 ZGC(Generational) 살펴보기&lt;/li&gt;\n  &lt;li&gt;실시간 데이터 스트리밍, 대규모 트랜잭션 시스템 등&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;3. Heap Memory capacity&lt;/strong&gt;:  애플리케이션의 메모리 사용량 및 힙 크기 중요한 경우&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;Parallel GC나 CMS GC 살펴보기&lt;/li&gt;\n  &lt;li&gt;Generational ZGC 살펴보기&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;4. Throughput&lt;/strong&gt;:  애플리케이션 처리량 최적화가 중요한 경우&lt;br /&gt;&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;Parallel GC 살펴보기&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;ps&quot;&gt;P.S.&lt;/h3&gt;\n\n&lt;p&gt;ZGC를 적용할 최초 시점에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-XX:+UseZGC&lt;/code&gt; 옵션만 사용해서 Single-generation ZGC를 사용했고, 메트릭 변화와 개선이 필요한 점들을 찾아보다가 Generational ZGC를 접하게 되어 지금은 Generational ZGC를 사용중입니다. Generational ZGC는 단일 세대에 비해 CPU 활용면에서 우수하기 때문에, JDK 21 버전 이상을 쓰고 있다면 (꼭) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-XX:+ZGenerational&lt;/code&gt; 옵션을 추가해서 Generational ZGC를 활성화하시길 바랍니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/06/29/zgc-generational-cpu.png&quot; alt=&quot;Generational ZGC CPU usage&quot; title=&quot;Generational ZGC CPU usage&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Generational 적용 이후 CPU Usage 변화&lt;/center&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;https://youtu.be/OnodHoNYE1Y?si=dtTtNzjkC-KK5ZIt&quot;&gt;Z Garbage Collector: The Next Generation&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://inside.java/2023/11/28/gen-zgc-explainer/&quot;&gt;Introducing Generational ZGC&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en/java/javase/21/gctuning/z-garbage-collector.html#GUID-FD855EE7-9ED3-46BF-8EA5-A73EB5096DDB&quot;&gt;The Z Garbage Collector&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://hub.packtpub.com/getting-started-with-z-garbage-collectorzgc-in-java-11-tutorial/&quot;&gt;Getting started with Z Garbage Collector (ZGC) in Java 11 [Tutorial]&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n            \n          ",
        "contentSnippet": "<p>ZGC(Z Garbage Collector)는 JVM 진영에서 Serial → Parallel → CMS → G1 이후에 새롭게 등장한 Garbage Collector 입니다. JDK 11에 Experimental로 추가되었고, JDK 15에서 Production Ready 상태로 전환되었으며, LDT 버전인 JDK 17에도 반영되었습니다. ZGC의 주요 목표 중 하나는 Stop-The-World(STW) 시간을 1ms 이하로 줄이는 것입니다.</p>\n\n<p>과거에 CMS GC를 사용하는 애플리케이션을 운영하다보면 STW 시간이 길어지다 보면 요청을 제대로 처리하지 못하는 현상 때문에 애를 먹었던게 생각나네요. ZGC는 대용량 힙 메모리에서도 낮은 지연 시간(low latency)을 목표로 설계되었기 때문에, 이를 적용하는 것만으로도 충분한 가치가 있어보이는 GC 알고리즘이었습니다. 이번 글에서는 애플리케이션의 성능을 개선하면서 적용했던 ZGC에 대해 소개하려고 합니다.</p>\n\n<hr />\n\n<h1 id=\"zgc\">ZGC</h1>\n\n<p>ZGC는 대용량 힙 메모리에서도 낮은 지연 시간(low latency)을 목표로 설계되었습니다. Heap Allocation, Compaction 등 거의 모든 면에서 변화가 있었기 때문에, 꼭 바로 이전에 나온 G1과 비교하지 않더라도 ZGC 자체로도 재미있는 피쳐들을 가지고 있습니다.</p>\n\n<p>아래는 2023년 Oracle DevLive Level Up에서 발표된 <a href=\"https://youtu.be/OnodHoNYE1Y?si=dtTtNzjkC-KK5ZIt\">Z Garbage Collector: The Next Generation</a>에 소개된 ZGC의 특징들입니다.</p>\n\n<ul>\n  <li><strong>Scalable</strong>: 확장 가능하도록 설계되어 수백 MB에서 최대 수 TB 메모리 처리</li>\n  <li><strong>Low Latency</strong>: 1MS 미만의 일정한 STW 시간(puase-time)</li>\n  <li><strong>Auto-tuning</strong>: 성능 최적화에 필요한 튜닝의 양을 줄이기기 위해 GC의 많은 튜닝 설정들을 자동화</li>\n  <li><strong>Throughput</strong>: 동일한 워크로드에서 전체 성능의 15% 내에서 성능 유지</li>\n</ul>\n\n<p><img src=\"/images/2024/06/29/zgc-00.png\" alt=\"ZGC\" title=\"ZGC\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/06/29/zgc-01.png\" alt=\"ZGC\" title=\"ZGC\" class=\"center-image\" /></p>\n\n<ul>\n  <li><strong>Concurrent</strong>:  ZGC는 대부분의 작업을 Java 애플리케이션 스레드가 실행되는 동안 동시에 수행. GC 동안 애플리케이션의 응답성을 유지하는 데 도움을 준다.</li>\n  <li><strong>Constant pause times</strong>:  GC 동안 발생하는 STW(pause-time)이 일정하게 유지되며, 힙 크기나 라이브 객체의 크기에 따라 비례적으로 증가하지 않는다.</li>\n  <li><strong>Parallel</strong>:  여러 스레드를 동시에 사용하여 GC 수행해서 더 빠르게 완료. Reference 할당마다 실행되는 Load Barrier를 통해 GC에 필요한 작업들을 멀티 스레드로 애플리케이션 스레드와 동시에 진행.</li>\n  <li><strong>Compacting</strong>:  메모리 단편화를 줄이기 위해 객체를 이동시켜서 메모리 할당 효율성을 높인다.\n    <ul>\n      <li>G1GC는 Compaction을 STW 동안 수행하는 반면, ZGC는 애플리케이션 스레드와 병렬로 수행.</li>\n      <li>즉, 객체 이동 및 업데이트 작업을 애플리케이션이 실행되는 동안 동시에 수행한다.</li>\n    </ul>\n  </li>\n  <li><strong>Region-based</strong>:  메모리를 여러 영역으로 나누어 관리하며, 많은 가비지가 생성되는 영역에 집중하여 효율적으로 GC 수행</li>\n  <li><strong>NUMA-aware</strong>:  NUMA(Non-Uniform Memory Access) 아키텍처를 인식하고, CPU에 가까운 메모리에 객체를 할당하여 성능을 최적화</li>\n  <li><strong>Load barriers &amp; Colored pointers</strong>:\n    <ul>\n      <li><strong>Load barriers</strong>:  메모리 로드 시 특정 조건을 확인하는 메커니즘, G C중에도 안전한 메모리 접근을 보장</li>\n      <li><strong>Colored pointers</strong>:  포인터에 색상을 지정하여 객체의 상태를 추적하고, 이를 통해 GC 효율적 수행</li>\n    </ul>\n  </li>\n  <li><strong>Auto tuning</strong>:  복잡한 설정 없이 자동으로 최적화되도록 설계되었다. 복잡한 설정을 조정할 필요 없이 ZGC의 혜택을 누릴 수 있다.</li>\n</ul>\n\n<p><img src=\"/images/2024/06/29/zgc-02.png\" alt=\"ZGC\" title=\"ZGC\" class=\"center-image\" /></p>\n\n<h3 id=\"heap-allocation\">Heap Allocation</h3>\n\n<p><strong>G1 GC(Garbage First Garbage Collector)</strong><br /></p>\n\n<p>G1GC는 Garbage Collection을 보다 효율적으로 수행하기 위해 Heap을 동일한 크기의 여러 힙 영역(Regions)으로 나눕니다. 그리고 각 Heap 영역은 서로 다른 역할을 담당합니다.</p>\n\n<ul>\n  <li>Eden Space: 새로 생성된 객체들이 할당되는 공간.</li>\n  <li>Survivor Space: Eden 영역에서 생존한 객체들이 이동되는 공간.</li>\n  <li>Old Generation: Survivor 영역에서 생존한 오래된 객체들이 이동되는 공간.</li>\n</ul>\n\n<p><img src=\"/images/2024/06/29/g1-heap-allocation.png\" alt=\"G1 Heap Allocation\" title=\"G1 Heap Allocation\" class=\"center-image\" /></p>\n\n<p><strong>ZGC (Z Garbage Collector)</strong><br /></p>\n\n<p>ZGC는 메모리 단편화를 줄이고 관리 효율성을 높이기 위해 다양한 크기의 메모리 블록으로 Heap을 나누어 사용합니다. 마찬가지로 각 Heap 영역은 서로 다른 역할을 담당합니다.</p>\n\n<ul>\n  <li>Small: 작은 객체들이 할당되는 영역.</li>\n  <li>Medium: 중간 크기 객체들이 할당되는 영역.</li>\n  <li>Large(N x 2 MB): 큰 객체들이 할당되는 영역. N은 객체 크기에 따라 달라집니다.</li>\n</ul>\n\n<p><img src=\"/images/2024/06/29/zgc-heap-allocation.png\" alt=\"ZGC Heap Allocation\" title=\"ZGC Heap Allocation\" class=\"center-image\" /></p>\n\n<h3 id=\"zgc를-도입하며-발생하는-trade-off\">ZGC를 도입하며 발생하는 Trade-off</h3>\n\n<p>ZGC는 별도 설정 없이 자동으로 최적화까지 해주니 모든 면에서 우수해보입니다. 그런데 ZGC를 도입하며 발생할 수 있는 trade-off가 몇가지 있습니다.</p>\n\n<p><strong>1) CPU 자원 효율 문제</strong></p>\n\n<p>ZGC는 초당 1ms 이하의 pause time을 유지하면서도 최대 16TB 크기의 힙을 지원하는 것으로 설계되었습니다. 대부분의 작업을 Java 애플리케이션 스레드가 실행되는 동안 동시에 수행하기 때문에, 그만큼 CPU 자원을 사용하게 되고, 이는 <strong>애플리케이션의 처리량(Throughput) 감소에 영향</strong>을 줄 수 있습니다.</p>\n\n<p>특히 초기 ZGC(~JDK 21)는 단일 세대 ZGC(Single-generational ZGC 또는 Non-generational ZGC)라고도 부르는데, 이제 막 생성된 객체와 오래된 객체 간의 구분이 따로 없어서 단일 세대라고 부릅니다. 그러다보니 GC 수행 과정에서 모든 객체를 대상으로 정리가 발생하기 때문에, CPU 활용 효율면에서는 조금은 더 취약합니다.</p>\n\n<p><strong>2) 객체 할당 지연(Allocation stall) 문제(← 1번으로 인해 발생)</strong></p>\n\n<p>새로운 객체가 메모리에 할당되는 속도가 GC가 메모리를 회수하는 속도보다 빠를 때 할당 지연(Allocation stall) 문제가 발생합니다. 이건 메모리가 부족하기 때문에 발생하는데, GC가 메모리를 회수하는 동안 애플리케이션은 새로운 객체를 할당하기 위해 기다려야되고, 이로 인해 애플리케이션의 성능이 저하될 수 있습니다. 이건 1번으로 인한 부수 효과인데, 전체 힙 대상으로 한 번에 GC를 수행하기 때문에 처리가 오래 걸리기 때문입니다.</p>\n\n<hr />\n\n<h1 id=\"generational-zgc\">Generational ZGC</h1>\n\n<p>그래서 이 문제를 해결하기 위해 JDK 21에 Generational ZGC이 등장했습니다. ZGC와 동일한데 Heap을 논리적으로 두 세대로 분리한 차이가 있습니다(Young, Old). 객체가 할당되면 먼저 자주 스캔되는 Young Generation에 배치되고, 객체가 충분히 오래 살아남으면 Old Generation으로 승격됩니다.</p>\n\n<p>처리량 측면에서, Generational ZGC는 JDK 17의 단일 세대 ZGC 대비 약 10%의 개선을 보였으며, 약간의 저하가 있었던 JDK 21의 단일 세대 ZGC 대비 약 10% 이상의 성능 향상을 보였다고 합니다.</p>\n\n<p><img src=\"/images/2024/06/29/zgc-young-old.png\" alt=\"ZGC Young &amp; Old\" title=\"ZGC Young &amp; Old\" class=\"center-image\" /></p>\n\n<h3 id=\"주요-차이점\">주요 차이점</h3>\n\n<p><img src=\"/images/2024/06/29/zgc-vs-generational-zgc.png\" alt=\"ZGC vs. Generational ZGC\" title=\"ZGC vs. Generational ZGC\" class=\"center-image\" /></p>\n\n<h3 id=\"performances\">Performances</h3>\n\n<p>단일 세대와의 성능 차이는 <a href=\"https://inside.java/2023/11/28/gen-zgc-explainer/\">Introducing Generational ZGC</a>에 잘 소개되어 있으니 참고하시면 좋겠습니다.</p>\n\n<p><img src=\"/images/2024/06/29/zgc-performance-00.png\" alt=\"ZGC Performance\" title=\"ZGC Performance\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/06/29/zgc-performance-01.png\" alt=\"ZGC Performance\" title=\"ZGC Performance\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/06/29/zgc-performance-02.png\" alt=\"ZGC Performance\" title=\"ZGC Performance\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/06/29/zgc-performance-03.png\" alt=\"ZGC Performance\" title=\"ZGC Performance\" class=\"center-image\" /></p>\n\n<h3 id=\"generational-zgc-활성화\">Generational ZGC 활성화</h3>\n\n<p>Generational ZGC를 활성화하려면 ZGC 사용을 위한 <code class=\"language-plaintext highlighter-rouge\">-XX:+UseZGC</code> 옵션에 더해 <code class=\"language-plaintext highlighter-rouge\">-XX:+ZGenerational</code> argument도 추가해줘야 합니다(JDK 버전은 21 이상).</p>\n\n<ul>\n  <li>참고로, JDK 21에서 <code class=\"language-plaintext highlighter-rouge\">-XX:+ZGenerational</code> 옵션이 없으면 Single-generation ZGC가 기본값입니다. 따라서 이 옵션을 추가하지 않으면 단일 세대의 ZGC가 동작합니다.</li>\n  <li>미래에는 Generational ZGC가 기본값이 될 예정이라고 합니다.</li>\n</ul>\n\n<h3 id=\"jvm-메모리-할당량이-커보이는-현상\">JVM 메모리 할당량이 커보이는 현상</h3>\n\n<p>ZGC 적용 이후에 메트릭을 살펴보면 선언한 Max Heap Size 보다 더 큰 메모리가 관측됩니다. JVM 애플리케이션의 Max Heap Size를 3GB로 설정했는데, Grafana(export by prometheus)에서 관측된 메트릭은 2배 정도인 6GB가 관측되었습니다. 의도하지 않았는데 재밌는 현상입니다.</p>\n\n<p><img src=\"/images/2024/06/29/zgc-heap-metric.png\" alt=\"ZGC JVM Heap\" title=\"ZGC JVM Heap\" class=\"center-image\" /></p>\n\n<center>`jvm_memory_max_bytes`: The total memory (in bytes) in the JVM runtime.</center>\n\n<p><strong>1. 다중 매핑</strong>:<br /></p>\n<ul>\n  <li>ZGC는 동일한 주소(메모리)를 3개의 다른 view로 매핑: marked0, marked1, remapped</li>\n  <li>이 3개의 view는 virtual memory address에 반영되는데, 동일 물리 메모리를 3개의 다른 가상 메모리에 맵핑되는 형태. 즉, 각 물리 메모리 페이지에 3개의 가상 페이지가 맵핑됩니다.</li>\n</ul>\n\n<p><strong>2. 가상 메모리 사용 증가:</strong><br /></p>\n<ul>\n  <li>이런 다중 매핑으로 인해 virtual memory 사용량이 실제 physical memory 사용량보다 크게 나타날 수 있어요.</li>\n  <li>예를 들어, 힙 사이즈가 1GB인 경우 virtual memory는 최대 3GB까지 관측될 수 있어요.</li>\n</ul>\n\n<p><strong>3. Generational GC 영향:</strong><br /></p>\n<ul>\n  <li>만약 ZGC가 현재 Single-generation이 아닌 Young, Old 세대로 구성된 generational GC 으로 되면 맵핑 수가 6배까지 증가할 수 있어요.</li>\n  <li>즉, max heap size의 6배에 해당하는 virtual memory 사용량이 관측될 수 있어요.</li>\n</ul>\n\n<p>결론은 ZGC의 다중 매핑으로 인해 memory 사용량이 실제보다 크게 관측되기 때문이다. 처음엔 Grafana JVM Metric만 보고 잘못 설정한게 있나 헷갈렸는데, 검색하다가 <a href=\"https://stackoverflow.com/questions/57899020/zgc-max-heap-size-exceed-physical-memory/61470663#61470663\">Stackoverflow에 재미난 답변</a>도 발견했다.</p>\n\n<p><img src=\"/images/2024/06/29/zgc-virtual-memory.png\" alt=\"ZGC Virtual Memory Space\" title=\"ZGC Virtual Memory Space\" class=\"center-image\" /></p>\n\n<hr />\n\n<h1 id=\"zgc-적용후-메트릭-변화\">ZGC 적용후 메트릭 변화</h1>\n\n<p>ZGC를 적용하기 전에는 G1GC를 사용중이었고, Eden, Survivor 영역 그리고 jvm parameter 등에 대한 별도 튜닝은 하지 않고 기본 설정을 사용하고 있었습니다.</p>\n\n<h3 id=\"g1-gc-적용된-애플리케이션-메트릭\">G1 GC 적용된 애플리케이션 메트릭</h3>\n\n<p>아래는 임의의 2개 Pod에서 CPU, Heap Memory와 STW에 의한 Pause Time을 관측한 결과다.</p>\n\n<p><img src=\"/images/2024/06/29/g1-0-memory.png\" alt=\"G1GC metric - memory\" title=\"G1GC metric - memory\" class=\"center-image\" /></p>\n\n<center>Eden used: max(1.79Gb), avg(958MB) | CPU usage: system avg(0.114), max(0.137)</center>\n\n<p><img src=\"/images/2024/06/29/g1-1-memory.png\" alt=\"G1GC metric - memory\" title=\"G1GC metric - memory\" class=\"center-image\" /></p>\n\n<center>Eden used: max(1.77Gb), avg(888MB) | CPU usage: system avg(0.105), max(0.161)</center>\n\n<p><img src=\"/images/2024/06/29/g1-0-pause-time.png\" alt=\"G1GC metric - pause time\" title=\"G1GC metric - pause time\" class=\"center-image\" /></p>\n\n<center>Pause Time: max(1.6ms), avg(259μs)</center>\n\n<p><img src=\"/images/2024/06/29/g1-1-pause-time.png\" alt=\"G1GC metric - pause time\" title=\"G1GC metric - pause time\" class=\"center-image\" /></p>\n\n<center>Pause Time: max(1.87ms), avg(223μs)</center>\n\n<h3 id=\"zgc-적용된-애플리케이션-메트릭\">ZGC 적용된 애플리케이션 메트릭</h3>\n\n<p>아래 메트릭도 마찬가지로 ZGC를 적용한 이후에 임의의 2개 Pod에서 CPU, Heap Memory와 STW에 의한 Pause Time을 관측한 결과다. 그런데 이 메트릭은 Generational ZGC가 아닌 Single-generation ZGC가 적용되었을때의 결과다. 그래서 메트릭을 보면 JVM Heap Memory 영역이 ZHeap 하나만 표현된걸 볼 수 있다.</p>\n\n<p><img src=\"/images/2024/06/29/zgc-0-memory.png\" alt=\"ZGC metric - memory\" title=\"ZGC metric - memory\" class=\"center-image\" /></p>\n\n<center>Heap used: max(998MB), avg(616MB)  |  CPU usage: system avg(0.153), max(0.351)</center>\n\n<p><img src=\"/images/2024/06/29/zgc-1-memory.png\" alt=\"ZGC metric - memory\" title=\"ZGC metric - memory\" class=\"center-image\" /></p>\n\n<center>Heap used: max(1.37GB), avg(798MB)  |  CPU usage: system avg(0.137), max(0.263)</center>\n\n<p><img src=\"/images/2024/06/29/zgc-0-pause-time.png\" alt=\"ZGC metric - pause time\" title=\"ZGC metric - pause time\" class=\"center-image\" /></p>\n\n<center>Pause Time:  max(66.7μs) avg(4.49μs)</center>\n\n<p><img src=\"/images/2024/06/29/zgc-1-pause-time.png\" alt=\"ZGC metric - pause time\" title=\"ZGC metric - pause time\" class=\"center-image\" /></p>\n\n<center>Pause Time:  max(66.7μs) avg(5.51μs)</center>\n\n<h3 id=\"메트릭-변화g1--non-gernerational-zgc\">메트릭 변화(G1 → Non Gernerational ZGC):</h3>\n\n<p>Non Gernerational(Single-generational) ZGC를 적용하고 나서 CPU 사용량을 증가하고, Memory 사용량과 STW에 의한 Pause Time은 감소했습니다.</p>\n\n<p><strong>memory usage:</strong><br /></p>\n<ul>\n  <li>used 기준 약 1.68배 감소(1.16 GiB → 0.69 GiB)</li>\n</ul>\n\n<p><strong>cpu usage:</strong><br /></p>\n<ul>\n  <li>max 약 2배 증가 (0.137 → 0.351)</li>\n  <li>avg 약 1.3배 증가 (0.105 → 0.137)</li>\n</ul>\n\n<p><strong>pause time:</strong><br /></p>\n<ul>\n  <li>max 약 28배 감소(1.87ms → 66.7μs)</li>\n  <li>avg 약 47배 감소(259μs → 5.51μs)</li>\n</ul>\n\n<hr />\n\n<h1 id=\"다양한-요소를-고려해서-gc-알고리즘-선택하기\">다양한 요소를 고려해서 GC 알고리즘 선택하기</h1>\n\n<p>GC를 선택할 때 throughput, latency, 리소스 사용량 등 다양한 요소를 고려해야 합니다. 예를 들어, G1과 ZGC는 각각 throughput과 latency 기준으로 애플리케이션 영향도가 달라질 수 있어요.</p>\n\n<ul>\n  <li>G1은 대부분의 시나리오에서 균형 잡힌 성능을 제공하지만, 변동 폭이 큰 객체 할당이나 오래 실행되는 작업에 적합한 경우가 있고,</li>\n  <li>ZGC는 매우 짧은 pause time을 제공하지만 일부 시나리오에서는 G1보다 낮은 throuput을 보일 수 있습니다.</li>\n</ul>\n\n<p><img src=\"/images/2024/06/29/gc-compare.png\" alt=\"GC\" title=\"GC\" class=\"center-image\" /></p>\n\n<p>위에서 ZGC를 적용한 애플리케이션은 제품 특성상 Low Latency를 보장해야 하고 STW로 인한 영향을 최소화해야 하기 때문에 CPU 리소스를 조금 희생하더라도 Memory와 Pause Time 감소라는 이점을 챙길 수 있었습니다. 따라서 애플리케이션의 특성과 요구 사항에 따라 적당한 GC를 선택하기를 권장드립니다. 이런 내용을 고려하지 않고 기본 설정을 변경하면 예상치 못한 장애를 맞을 수 있으니…</p>\n\n<p><strong>1.Latency</strong>:  애플리케이션의 빠른 응답이 중요한 경우, pause time을 최소화하는 GC 고려해보기<br /></p>\n<ul>\n  <li>G1GC 또는 ZGC(Generational) 살펴보기</li>\n  <li>힙 메모리 영역 조정해보기(ex. 객체 크기가 큰데 survivor 영역이 작으면 불필요하게 GC 자주 발생)</li>\n</ul>\n\n<p><strong>2. Pause Time</strong>:  STW에 따른 pause time이 중요한 경우, 마찬가지로 pause time을 최소화하는 GC 고려해보기<br /></p>\n<ul>\n  <li>G1GC 또는 ZGC(Generational) 살펴보기</li>\n  <li>실시간 데이터 스트리밍, 대규모 트랜잭션 시스템 등</li>\n</ul>\n\n<p><strong>3. Heap Memory capacity</strong>:  애플리케이션의 메모리 사용량 및 힙 크기 중요한 경우<br /></p>\n<ul>\n  <li>Parallel GC나 CMS GC 살펴보기</li>\n  <li>Generational ZGC 살펴보기</li>\n</ul>\n\n<p><strong>4. Throughput</strong>:  애플리케이션 처리량 최적화가 중요한 경우<br /></p>\n<ul>\n  <li>Parallel GC 살펴보기</li>\n</ul>\n\n<h3 id=\"ps\">P.S.</h3>\n\n<p>ZGC를 적용할 최초 시점에는 <code class=\"language-plaintext highlighter-rouge\">-XX:+UseZGC</code> 옵션만 사용해서 Single-generation ZGC를 사용했고, 메트릭 변화와 개선이 필요한 점들을 찾아보다가 Generational ZGC를 접하게 되어 지금은 Generational ZGC를 사용중입니다. Generational ZGC는 단일 세대에 비해 CPU 활용면에서 우수하기 때문에, JDK 21 버전 이상을 쓰고 있다면 (꼭) <code class=\"language-plaintext highlighter-rouge\">-XX:+ZGenerational</code> 옵션을 추가해서 Generational ZGC를 활성화하시길 바랍니다.</p>\n\n<p><img src=\"/images/2024/06/29/zgc-generational-cpu.png\" alt=\"Generational ZGC CPU usage\" title=\"Generational ZGC CPU usage\" class=\"center-image\" /></p>\n\n<center>Generational 적용 이후 CPU Usage 변화</center>\n\n<hr />\n\n<h1 id=\"references\">References</h1>\n<ul>\n  <li><a href=\"https://youtu.be/OnodHoNYE1Y?si=dtTtNzjkC-KK5ZIt\">Z Garbage Collector: The Next Generation</a></li>\n  <li><a href=\"https://inside.java/2023/11/28/gen-zgc-explainer/\">Introducing Generational ZGC</a></li>\n  <li><a href=\"https://docs.oracle.com/en/java/javase/21/gctuning/z-garbage-collector.html#GUID-FD855EE7-9ED3-46BF-8EA5-A73EB5096DDB\">The Z Garbage Collector</a></li>\n  <li><a href=\"https://hub.packtpub.com/getting-started-with-z-garbage-collectorzgc-in-java-11-tutorial/\">Getting started with Z Garbage Collector (ZGC) in Java 11 [Tutorial]</a></li>\n</ul>",
        "guid": "https://sungjk.github.io/2024/06/29/zgc.html",
        "isoDate": "2024-06-29T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": [
      {
        "creator": "고명환",
        "title": "강의안 | 라이프스타일 혁신과 소비자분석 - 창업(소상공인)",
        "link": "https://brunch.co.kr/@@LOc/236",
        "pubDate": "Sat, 29 Jun 2024 05:13:10 GMT",
        "author": "고명환",
        "content": "1. 라이프스타일 혁신과 소비자분석&nbsp;- Sample   2. 라이프스타일 혁신과 소비자분석 - 전체 강의안  https://docs.google.com/presentation/d/e/2PACX-1vRd9mQsLeUJt0WRSzN6GMeD_GsbGYKRhMXSU8VX8GUXqrpp_5tD_Qj-pkKgKGUTvw/pub?start=false&amp;loop=fals<img src= \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2FLOc%2Fimage%2Fl3HWT25jT8EdQwyjhYCBzhVks3Q.JPG\" width=\"500\" />",
        "contentSnippet": "1. 라이프스타일 혁신과 소비자분석 - Sample   2. 라이프스타일 혁신과 소비자분석 - 전체 강의안  https://docs.google.com/presentation/d/e/2PACX-1vRd9mQsLeUJt0WRSzN6GMeD_GsbGYKRhMXSU8VX8GUXqrpp_5tD_Qj-pkKgKGUTvw/pub?start=false&loop=fals",
        "guid": "https://brunch.co.kr/@@LOc/236",
        "isoDate": "2024-06-29T05:13:10.000Z"
      }
    ]
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "AI 사이트 추천, 'AI감지(AI Detection)' 부문 신규 업데이트 목록 24.06.28",
        "link": "http://muzbox.tistory.com/483444",
        "pubDate": "Fri, 28 Jun 2024 11:24:38 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483444#entry483444comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"AI Detection.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/Uateu/btsIfDA72wn/8omJXE7AdnlNPSOfG4CSZk/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/Uateu/btsIfDA72wn/8omJXE7AdnlNPSOfG4CSZk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FUateu%2FbtsIfDA72wn%2F8omJXE7AdnlNPSOfG4CSZk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"AI Detection.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p style=\"text-align: center;\" data-ke-size=\"size18\"><b>AI&nbsp;감지(AI&nbsp;Detection)</b>는&nbsp;데이터에서&nbsp;객체,&nbsp;패턴&nbsp;또는&nbsp;이상&nbsp;징후를&nbsp;식별하고&nbsp;탐지하기&nbsp;위해&nbsp;인공지능&nbsp;기술을&nbsp;적용하는&nbsp;것입니다.&nbsp;여기에는&nbsp;이미지,&nbsp;오디오,&nbsp;비디오,&nbsp;텍스트&nbsp;감지가&nbsp;포함됩니다.&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size18\">AI&nbsp;모델은&nbsp;이미지에서&nbsp;객체를&nbsp;인식&nbsp;및&nbsp;분류하고,&nbsp;오디오&nbsp;신호를&nbsp;분석하고,&nbsp;비디오&nbsp;콘텐츠를&nbsp;처리하고,&nbsp;텍스트에서&nbsp;정보를&nbsp;추출하도록&nbsp;학습됩니다.&nbsp;AI&nbsp;탐지는&nbsp;보안,&nbsp;의료,&nbsp;고객&nbsp;서비스&nbsp;및&nbsp;기타&nbsp;산업&nbsp;분야에서&nbsp;다양하게&nbsp;적용되어&nbsp;더&nbsp;나은&nbsp;의사&nbsp;결정을&nbsp;위한&nbsp;자동화되고&nbsp;정확한&nbsp;데이터&nbsp;분석을&nbsp;가능하게&nbsp;합니다.</p>\n<h2 style=\"text-align: center;\" data-ke-size=\"size26\">&nbsp;<b><span style=\"color: #ef6f53;\">24년 6월 28일 기준 업데이트</span>한&nbsp;AI기술을&nbsp;활용한</b><b><span style=\"color: #99cefa;\"> AI&nbsp;Detection&nbsp;부문</span>의 </b><b>유용한 서비스를 소개합니다.</b></h2>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/665f5222bc480ed6e32f4992_copyrightcheck-ai-logo.png\" alt=\"Thumbnail\" width=\"197\" height=\"54\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Copyright Check AI</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">소셜 미디어 프로필에서 저작권 위반을 식별하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">AI는 소셜 미디어 프로필의 저작권 위반으로 인한 법적 분쟁의 위험을 식별하고 완화하기 위해 고안된 종합 감사 서비스를 제공합니다. 이 서비스는 독점적인 AI 소프트웨어를 사용하여 소셜 미디어 계정을 스캔하여 게시물이나 인플루언서 캠페인에서 저작권이 있는 음악의 무단 사용을 강조 표시합니다. 음악 업계에서는 저작물의 무단 사용에 대해 수백만 달러에 달하는 법적 조치를 적극적으로 취하고 있기 때문에 브랜드와 법무팀은 이 도구를 사용하여 비용이 많이 드는 소송을 피할 수 있습니다. 이 서비스는 자세한 보고서, 지속적인 모니터링, 합법적인 음악 사용에 대한 지침을 제공하므로 소셜 미디어 콘텐츠를 보호하고 저작권법을 준수하려는 기업에게 필수적인 자산이 될 것입니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://copyrightcheck.ai\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/6639af4dc27df72f4a24edb7_Brand_Assets%252FgeoSpy_card.jpeg\" alt=\"Thumbnail\" width=\"196\" height=\"103\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;GeoSpy.ai</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">위성 이미지와 공간 데이터를 분석하고 해석하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">GeoSpy.ai는 인공 지능을 활용하여 위성 이미지와 공간 데이터를 분석하고 해석하는 최첨단 지리 공간 인텔리전스 도구입니다. 환경 모니터링, 도시 계획, 농업, 재난 대응, 군사 정찰 등 다양한 분야에 사용할 수 있습니다. 사람들은 토지 이용 패턴에 대한 인사이트를 얻고, 경관의 변화를 감지하고, 농작물의 상태를 모니터링하거나 전략적 계획을 세우기 위해 GeoSpy.ai를 사용할 수 있습니다. 대량의 복잡한 공간 정보를 빠르고 정확하게 처리하고 이해하는 능력은 지리적 맥락을 이해하는 것이 중요한 분야의 의사 결정자와 분석가에게 귀중한 자산이 될 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">베타테스트중</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://geospy.ai/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/661ddcc4b25c42854d0c18df_InstantID.png\" alt=\"Thumbnail\" width=\"197\" height=\"106\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;InstantID</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">즉각적인 신원 확인을 위한 허깅 페이스 스페이스.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">인스턴트엑스는 허깅 페이스 스페이스 플랫폼에서 호스팅되는 디지털 도구로, 신원 확인 또는 인식 목적으로 설계된 것으로 보입니다. 제공된 콘텐츠에 구체적인 기능이 자세히 설명되어 있지는 않지만, 이름에서 알 수 있듯이 인공지능과 머신러닝 알고리즘을 사용하여 즉각적인 신원 확인 서비스를 제공할 수 있는 것으로 보입니다. 사용자 신원 확인을 통한 보안 강화, 로그인 프로세스 간소화, 자격증명 검증 자동화 등 다양한 용도로 인스턴트아이디를 사용할 수 있습니다. 빠르고 정확한 신원 확인을 위한 잠재력은 금융, 의료, 온라인 서비스 등 신원 확인이 중요한 분야에서 특히 유용할 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">무료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://huggingface.co/spaces/InstantX/InstantID\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/66103966684fee69fcb0c201_thumbnail.png\" alt=\"Thumbnail\" width=\"195\" height=\"110\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Nuanced</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">AI가 생성한 이미지와 콘텐츠를 감지하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">온라인 서비스의 무결성과 신뢰성을 유지하기 위해 AI가 생성한 이미지와 콘텐츠를 탐지하는 최첨단 솔루션을 제공합니다. AI로 생성된 스팸, 어뷰징, 사기, 딥페이크가 증가함에 따라 사용자 생성 콘텐츠에 의존하는 플랫폼은 신뢰와 공신력을 유지하는 데 상당한 어려움을 겪고 있습니다. Nuanced의 알고리즘은 개인 식별 정보(PII)에 의존하지 않는 개인정보 보호 우선 접근 방식을 제공함으로써 AI 콘텐츠 생성의 급속한 발전에 앞서 나가도록 설계되었습니다. Nuanced의 API를 통합함으로써 기업은 사람이 직접 작성한 자료와 합성 창작물을 효율적으로 구분할 수 있으므로 콘텐츠 조정, 사기 탐지 및 콘텐츠의 진위 여부가 중요한 모든 서비스에 필수적인 도구가 될 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">부분 유료화</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.nuanced.dev\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/660ee1254e33ac830b800888_circle-to-search-logo.png\" alt=\"Thumbnail\" width=\"196\" height=\"93\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Circle to Search</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">텍스트 선택을 대화형 검색 대화로 전환하는 Google 크롬 확장 프로그램입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">AI를 통합하여 기존 검색 쿼리를 대화형 대화로 전환함으로써 웹 검색을 개선하는 브라우저 확장 프로그램입니다. 사용자는 텍스트를 드래그하고 선택하기만 하면 보다 정교한 검색 환경을 시작할 수 있어 정확하고 맥락에 맞는 정보를 빠르게 얻을 수 있습니다. 이 도구는 검색 프로세스를 간소화하고 웹에서 정보를 보다 직관적이고 효율적으로 찾을 수 있는 방법을 제공하기 때문에 자주 검색을 하거나 대량의 온라인 데이터를 살펴봐야 하는 개인에게 특히 유용합니다. 시간을 절약하고 검색 결과의 정확도를 높이며 필요에 따라 맞춤화된 검색 환경을 즐길 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.circlesearch.ai\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65f5225310210d3dbd8f5ccf_share.jpeg\" alt=\"Thumbnail\" width=\"199\" height=\"127\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;HealthKey</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">방대한 의료 기록을 간결한 환자 요약으로 종합하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">방대한 의료 기록을 간결한 환자 개요로 요약하여 환자 진료 준비 과정을 간소화하도록 설계된 AI 기반 도구입니다. 이 도구는 의료진에게 이해하기 쉬운 환자 일정과 건강 요약을 제공하며, 매일 아침 이메일로 전송할 수 있습니다. 기존 시스템과 통합할 수 있는 기능을 갖춘 HealthKey는 차트 준비에 소요되는 시간과 노력을 줄여 의료진이 수백 장의 의료 기록 대신 한 페이지 분량의 요약본을 검토할 수 있게 해줍니다. 이를 통해 의료진은 자신감과 효율성을 높여 환자 치료에 더 집중할 수 있습니다. HealthKey는 특히 관리 부담을 최소화하고, 환자 이력을 잘 파악하고, 제공하는 의료 서비스의 질을 개선하고자 하는 의료 서비스 제공자에게 유용합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://gethealthkey.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65decd804aa65b51438410f5_alex2.png\" alt=\"Thumbnail\" width=\"200\" height=\"141\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Extracta.ai</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">다양한 비정형 문서에서 정형 데이터를 추출하는 작업을 자동화하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">송장, 이력서, 계약서, 영수증과 같은 비정형 문서에서 정형 데이터를 추출하는 프로세스를 자동화하는 AI 기반 데이터 추출 플랫폼입니다. 사용자는 복잡한 교육 없이도 사용자 지정 추출 템플릿을 정의할 수 있으며, 스캔 이미지와 디지털 파일을 포함한 다양한 문서 유형을 지원합니다. Extracta.ai를 사용하면 데이터 처리를 간소화하고 수동 입력 오류를 줄이며 다양한 시스템과 원활하게 통합할 수 있어 재무 데이터 관리, 채용, 법률 운영, 비용 추적과 관련된 작업에서 시간을 절약하고 효율성을 높일 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://extracta.ai/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65d9154b842bc728187ea384_646cd976e45bf35c29907471_linkedin-blurb.png\" alt=\"Thumbnail\" width=\"196\" height=\"103\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;EyePop.ai</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">이미지 및 동영상 분석을 위한 노코드 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">사용자 친화적인 컴퓨터 비전 플랫폼으로, 사용자가 기술적 전문 지식이 없어도 시각 데이터 분석을 간소화하고 AI 기반 인사이트를 제공할 수 있도록 설계되었습니다. 사용자는 코드가 없거나 적은 도구를 사용하여 이미지, 동영상 또는 실시간 스트림으로 작업할 수 있는 맞춤형 애플리케이션, 즉 '팝'을 손쉽게 구축할 수 있습니다. 프로필 사진 인증, 미디어 참여도 분석, 실시간 동영상 콘텐츠 인사이트와 같은 작업에 사용할 수 있습니다. 사람들은 접근 가능하고 효율적인 AI 기반 분석을 통해 시각적 콘텐츠의 잠재력을 쉽게 실현하고, 사용자 경험을 개선하고, 참여도를 높이고, 데이터 기반 의사 결정을 내릴 수 있도록 EyePop.ai를 사용할 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">베타테스트중</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.eyepop.ai\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65b9d3366f73a813d5c5fc8c_opengraph.png\" alt=\"Thumbnail\" width=\"200\" height=\"109\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Content Credentials</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">온라인 콘텐츠를 검증하는 도구로, 출처와 편집 내역을 확인할 수 있습니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">딥페이크, 음성 복제, 합성 미디어로 인한 문제를 해결하기 위해 고안된 기술입니다. 온라인 콘텐츠의 출처, 제작 방법, 편집 이력에 대한 질문에 답하면서 온라인 콘텐츠에 대한 접근 가능하고 정확한 정보를 제공합니다. 사용자는 클릭 한 번으로 중요한 세부 정보를 확인할 수 있어 온라인 콘텐츠에 대한 신뢰를 높일 수 있습니다. 크리에이터는 콘텐츠 자격 증명을 통해 인지도 향상, 마케팅 및 잠재고객 확보가 가능하므로 적절한 크레딧을 받을 수 있습니다. 콘텐츠 크리덴셜 핀은 사용자가 콘텐츠에 대한 추가 정보를 탐색할 수 있도록 하는 지표 역할을 합니다. 공개 표준, 변조 탐지, 책임 소재를 기반으로 하는 콘텐츠 크리덴셜은 보다 투명한 인터넷을 위해 전 세계적으로 시행되고 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">무료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://contentcredentials.org/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65b2c64bd54b402a45065554_opengraph-image.png\" alt=\"Thumbnail\" width=\"200\" height=\"200\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;X-ray Interpreter</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">엑스레이 이미지의 예비 해석을 위한 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">흉부, 치과, 복부, 골격 구조 등 다양한 유형의 엑스레이 이미지에 대한 예비 판독을 제공하도록 설계된 AI 기반 도구입니다. 사용자는 적은 비용으로 AI가 생성한 보고서를 빠르게 받아볼 수 있으며, 별도의 구독 요건이 없어 편리합니다. 의료 전문가와 상담하기 전에 엑스레이 이미지를 빠르게 초기 평가하여 인사이트를 얻거나 엑스레이에 나타난 세부 사항을 더 잘 이해하고자 하는 사람들이 사용할 수 있습니다. 이 도구는 사용 편의성과 개인정보 보호를 강조하지만, 전문적인 의학적 조언을 대체하기 위한 도구는 아닙니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://xrayinterpreter.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65ad64601f80bf47a057cd6d_verisoul-ai-logo.png\" alt=\"Thumbnail\" width=\"198\" height=\"65\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Verisoul</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">웹사이트와 모바일 플랫폼에서 가짜 사용자, 봇, 사기 행위를 탐지하고 방지하는 디지털 보안 솔루션입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">기업에 가짜 사용자, 봇, 사기 행위를 방지할 수 있는 도구를 제공하는 디지털 보안 플랫폼입니다. 단일 SDK 및 API를 통해 웹 및 모바일 애플리케이션과 통합되어 기업이 사용자 데이터를 쉽게 수집할 수 있습니다. 이 플랫폼은 AI 기반 인텔리전스를 사용하여 사용자가 진짜인지, 고유한지, 신뢰할 수 있는지 실시간으로 판단하고 사용자 상호 작용을 관리하기 위한 사용자 지정 가능한 노코드 워크플로우를 제공합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.verisoul.ai/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/6595bd7951c5cd7719a49c9b_og-image.jpeg\" alt=\"Thumbnail\" width=\"199\" height=\"130\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;ShotSolve</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">GPT-4 Vision을 사용하여 macOS의 스크린샷에서 질문을 해결하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">사용자가 촬영한 스크린샷을 기반으로 문제를 해결하는 무료 macOS 메뉴바 앱으로, GPT-4 Vision을 사용합니다. 이 앱은 OpenAI와 통합되며 사용자 지정 API 호스트, 컨텍스트 제한, 시스템 명령 및 사용자 지정 GPT 매개변수와 같은 고급 구성 옵션을 제공합니다. 또한 친숙한 UI, 범용 단축키, 빠른 성능의 Apple M1/M2용 기본 앱을 제공합니다. 무료로 사용할 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">무료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://shotsolve.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/6593916d7c0c8d35467b2e47_5faca2dd77160e4a886bf0c932c3c46e.webp\" alt=\"Thumbnail\" width=\"200\" height=\"179\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Luxand.Cloud</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">얼굴 인식 및 검색을 애플리케이션에 통합하는 API입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">Luxand.cloud는 AI 기반 얼굴 검색 및 인식 API로, 사용자가 클라우드 API를 사용하여 웹사이트, 앱 또는 소프트웨어에 얼굴 인식을 통합할 수 있습니다. 사람의 얼굴을 정확하게 인식 및 비교하고, 이전에 이미지에 태그된 사람을 식별하고, 사진에서 나이, 성별, 감정을 감지할 수 있으며, 안전한 클라우드 스토리지를 제공합니다. 여러 프로그래밍 언어를 지원하며 비용 효율성과 확장성이 뛰어납니다. 또한 금융, 마케팅, 교육, 교통, 호텔, 소매업 등 다양한 산업에서 사용되고 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://luxand.cloud/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65959270f9a9e736e353170d_labelgpt-logo.png\" alt=\"Thumbnail\" width=\"199\" height=\"42\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;LabelGPT</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">레이블이 지정된 데이터를 생성하는 자동화된 데이터 주석 플랫폼입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">머신러닝 팀이 라벨이 지정된 대량의 데이터를 빠르게 생성할 수 있도록 지원하는 자동화된 데이터 주석 플랫폼입니다. 여러 기초 모델의 조합을 사용해 제로 샷 라벨링을 달성하므로 사용자는 데이터를 가져오고, 프롬프트로 클래스 이름을 지정하고, 높은 신뢰도 점수로 단 몇 분 만에 라벨을 생성할 수 있습니다. 또한 LabelGPT는 개방형 데이터 세트, 스마트 피드백 루프, 사전 라벨링 솔루션을 제공하여 프로세스 속도를 높입니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">부분 유료화</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.labellerr.com/labelgpt\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65259ef142f4b52a810f4b46_llava-hliu-cc-logo.png\" alt=\"Thumbnail\" width=\"199\" height=\"120\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;LLaVa</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">고급 언어 및 시각 이해를 위한 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">범용 시각 및 언어 이해를 위해 설계된 혁신적인 대규모 멀티모달 모델입니다. 비전 인코더와 대규모 언어 모델(LLM)인 Vicuna를 결합하여 엔드 투 엔드 학습이 이루어집니다. LLaVA는 멀티모달 GPT-4의 성능을 모방한 인상적인 채팅 기능을 보여주며 과학 QA 작업에서 새로운 최첨단 정확도를 설정합니다. 이 도구의 핵심 기능은 언어 전용 GPT-4를 사용하여 멀티모달 언어-이미지 명령어 팔로잉 데이터를 생성하는 기능입니다. LLaVA는 공개적으로 사용 가능한 데이터, 모델 및 코드가 포함된 오픈 소스입니다. 시각적 채팅 애플리케이션 및 과학 분야 추론과 같은 작업에 맞게 미세 조정되어 두 영역 모두에서 높은 성능을 달성합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">무료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://llava.hliu.cc/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/651c4e008df211820a46da25_astica-logo.png\" alt=\"Thumbnail\" width=\"200\" height=\"99\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;astica</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">이미지와 문서의 비전 및 음성 인식, 전사, 검토를 위한 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">음성 및 시각 AI 기능을 제공하는 astica.ai의 코그너티브 API 데모입니다. 이미지와 문서를 읽고, 설명하고, 분류하고, 조정하고, 어시스턴트를 생성하고, 오디오 파일을 전사하고, 설명 오디오를 실시간으로 생성하는 데 도움을 줄 수 있습니다. 또한 이미지에 대한 정확하고 상세한 설명을 생성하고, 얼굴과 물체를 감지하고, 업로드된 이미지를 조정할 수 있습니다. 강력한 컴퓨터 비전과 한 줄로 통합되어 이미지를 설명하고, 얼굴과 물체를 감지하고, 업로드된 이미지를 조정할 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">부분 유료화</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.astica.org/vision/describe\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/65166a72e414ce0e5dd52e97_wasitai-og-fb-share-image-v1.png\" alt=\"Thumbnail\" width=\"200\" height=\"105\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;wasitai</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">AI가 생성한 이미지를 감지하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">와시타이 도구를 사용하면 이미지가 기계에 의해 생성되었는지 확인할 수 있습니다. 사용자는 이미지를 드래그 앤 드롭하거나 디바이스에서 이미지를 선택하면 도구가 이미지를 처리하여 사람이 생성한 것인지 기계가 생성한 것인지 확인합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://wasitai.com/api\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/651513285b6ca98c170f94ca_sticker-logo-small.png\" alt=\"Thumbnail\" width=\"199\" height=\"199\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;LookRight</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">시각적 인사이트를 얻을 수 있는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">컴퓨터 비전과 GPT 기술을 활용하여 다양한 상황에서 귀중한 인사이트와 피드백을 제공하는 혁신적인 도구입니다. 패션 선택에 대한 두 번째 의견이 필요하거나, 이미지 캡션에 대한 영감을 구하거나, 요리 창작물에 대한 피드백이 필요할 때 LookRight가 도움을 드릴 수 있습니다. 사용자 친화적인 인터페이스를 통해 쉽게 사용할 수 있으며, 지침이 필요할 때마다 신뢰할 수 있는 편견 없는 눈 역할을 해줍니다. LookRight는 최첨단 기술과 다양한 시각 관련 질문에 대한 실용적인 지원을 결합합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">무료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://lookright.ai/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64f8b9475578d40953b69358_carbon-ai-logo.png\" alt=\"Thumbnail\" width=\"197\" height=\"115\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Carbon</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">llms 및 AI 개발을 위한 데이터 소스를 연결하고 관리하기 위한 통합 API입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">개발자가 모든 데이터 소스에 액세스하고 연결할 수 있는 통합된 LLM용 API입니다. 개발자가 일반 텍스트 검색, 청크 및 임베딩 생성, 데이터 소스 관리 등을 수행할 수 있는 AI 중심의 데이터 가져오기를 위한 풍부한 API 라이브러리를 제공합니다. 또한 Carbon에는 문서 관리, 임베딩 생성, 시맨틱 검색, SOC 2 규정 준수, 화이트 라벨, 자동 확장, 관리형 OAuth, 사용량 보고, 사용자 정의 빌드와 같은 기능도 포함되어 있습니다. 기업들은 수십 가지 파일 형식과 타사 서비스를 지원하여 비정형 데이터를 대규모로 활용할 수 있습니다. Carbon을 사용하면 10분 이내에 계정을 설정하고 한 달 동안 무제한으로 액세스할 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://carbon.ai/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64f8b19566cdaa77f4391570_automorphic-ai-logo.png\" alt=\"Thumbnail\" width=\"198\" height=\"70\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Automorphic</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">언어 모델, 빠른 로딩/적재 및 이지스 방화벽을 위한 솔루션 제품군입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">Automorphic은 단 10개의 샘플만으로 언어 모델에 지식을 주입하는 Infuse, 자체 개선 모델, 미세 조정된 어댑터의 빠른 로딩/적재, OpenAI API 호환, 공개적으로 공유되는 모델을 위한 Automorphic Hub 등 언어 모델을 위한 솔루션 제품군을 제공합니다. 또한 프롬프트 주입, 프롬프트 및 PII 유출, 유해한 언어 등을 감지할 수 있는 모델용 방화벽인 Aegis를 제공합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">부분 유료화</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://automorphic.ai/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"4545.jpeg\" data-origin-width=\"3360\" data-origin-height=\"2100\"><span data-url=\"https://blog.kakaocdn.net/dn/dAufO5/btsIe0DT1OP/hBwT2fqTuBBFpfds9xS3iK/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/dAufO5/btsIe0DT1OP/hBwT2fqTuBBFpfds9xS3iK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdAufO5%2FbtsIe0DT1OP%2FhBwT2fqTuBBFpfds9xS3iK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"199\" height=\"124\" data-filename=\"4545.jpeg\" data-origin-width=\"3360\" data-origin-height=\"2100\"/></span></figure>\n</td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Undetectable AI</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">AI 방지 콘텐츠를 작성하고 AI 탐지를 제거할 수 있는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">콘텐츠 제작자가 AI 탐지기를 우회하는 사람처럼 키워드가 풍부한 콘텐츠를 작성할 수 있도록 도와주는 AI 탐지 제거 도구입니다. 이 도구는 검색 엔진에 최적화되어 탐지를 피할 수 있는 고유한 자료를 제공하며 작가, 블로거, 연구원, 마케터 등에게 이상적입니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://undetectable.ai/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px; height: 114px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/6496384f4f3d1c67b63d3e5d_64504635c77e117db44fef6b_holly%2520banner.png\" alt=\"Thumbnail\" width=\"196\" height=\"103\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Holly</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">채용 프로세스를 자동화하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">기업이 채용 프로세스를 자동화할 수 있도록 지원하는 인공지능 기반의 가상 채용 도구입니다. 엄선된 후보자 목록을 제공하고, 사용자를 대신하여 후보자와 소통하며, 피드백을 통해 학습하여 최상의 매칭을 제공합니다. 여러 플랫폼과 통합되어 있으며 사람 채용 담당자처럼 생각하고 행동하도록 설계되었습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.hollyhires.ai\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64efc0addfc5e6f9797b3aad_cover.png\" alt=\"Thumbnail\" width=\"200\" height=\"105\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Airparser</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">이메일, PDF, 문서, 이미지 등에서 데이터 추출을 자동화하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">이메일, PDF, 문서, 이미지 등에서 데이터 추출을 자동화하는 도구입니다. GPT 기반 파서와 OCR 엔진을 사용해 구조화된 데이터를 실시간으로 추출하고, 6000개 이상의 앱으로 데이터를 내보낼 수 있습니다. 또한 웹후크, API, Excel로 다운로드와 같은 기능도 제공합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://airparser.com/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64e6a31d3a32dbd75a200a38_64ae7fb1a42fb7f226d01507_Preview.png\" alt=\"Thumbnail\" width=\"196\" height=\"103\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Rainbow.ai</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">일기 예보 및 알림을 제공하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">사용자에게 정확하고 신뢰할 수 있는 날씨 정보를 제공하는 AI 기반 일기 예보 도구로, 사용자가 정보를 얻고 안전하게 지낼 수 있도록 도와줍니다. 정확한 위치의 날씨 변화에 대한 적시 알림을 제공하며, 사용자는 앱을 다운로드하여 날씨를 미리 파악할 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">부분 유료화</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.rainbow.ai\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64dfb1b973cbf48a6da078e9_aijudge-pro-logo.png\" alt=\"Thumbnail\" width=\"198\" height=\"61\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;AI Judge</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">경합하는 두 당사자의 주장을 바탕으로 공정한 평결을 생성하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">인공지능 기술을 활용하여 분쟁 당사자 두 사람이 제시한 주장을 바탕으로 공정한 판결을 내리는 혁신적인 플랫폼입니다. 사용자가 분쟁에 대한 자신의 주장을 제출하면 AI 시스템이 각 당사자가 제시한 사실, 증거, 법적 원칙을 면밀히 분석하여 공정하고 공평한 판결을 내립니다. AI 알고리즘은 주장의 일관성, 증거의 강도, 법적 추론의 일관성 등 다양한 요소를 고려합니다. 또한, 사용자는 자격을 갖춘 법률 전문가에게 AI가 생성한 판결을 검토하도록 요청하여 추가적인 검토를 받을 수 있습니다. AI 판사는 제공된 정보를 바탕으로 객관적인 관점을 제시하여 분쟁 해결 프로세스를 용이하게 하도록 설계되었습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">무료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://aijudge.pro/\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64db111eb39c00515e4478a1_open-graph.png\" alt=\"Thumbnail\" width=\"198\" height=\"92\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Cerebrium</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">머신러닝 모델의 훈련, 배포 및 모니터링을 위한 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">단 몇 줄의 코드만으로 머신 러닝 모델을 쉽게 훈련, 배포, 모니터링할 수 있는 머신 러닝 프레임워크입니다. 사용자는 서버리스 GPU 모델을 배포하고, 모든 주요 프레임워크를 지원하고, LLM과 사용자 정의 모델을 연결하여 고유한 기능을 생성하고, 모델 전후에 로직을 추가하고, 모델을 자동으로 버전업하고, 1초 미만의 콜드 스타트를 할 수 있습니다. 또한 손쉬운 미세 조정, 최고의 ML 통합 가시성 플랫폼과의 통합, 기능 및 예측 드리프트 모니터링 기능도 제공합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">부분 유료화</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.cerebrium.ai\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64d91e72a7edce3ad6c5fa31_pi-exchange-logo.png\" alt=\"Thumbnail\" width=\"200\" height=\"145\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;PI.EXCHANGE</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">코딩 없이 원시 데이터를 예측으로 변환하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">엔드투엔드 머신러닝 도구로, 사용자가 코딩 없이도 몇 분 만에 원시 데이터에서 예측으로 빠르게 전환할 수 있도록 지원합니다. 데이터 준비, 모델 개발, 데이터 보안 및 개인정보 보호, 통합 등의 기능을 제공합니다. 마케팅 팀, 데이터 과학자, 소프트웨어 엔지니어, 데이터 분석가, 기업가 등 다양한 업계에서 사용할 수 있습니다. 지식 허브, API 및 SDK 문서, 블로그 등의 리소스를 제공합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.pi.exchange\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64d565c65cfb939c228aafb2_64b06c535a3bd010af0444cd_Screenshot%25202023-07-13%2520132007.png\" alt=\"Thumbnail\" width=\"200\" height=\"104\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Neum AI</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">AI 애플리케이션을 정확하고 최신 상태로 유지할 수 있는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">기업이 AI 애플리케이션을 최신의 정확한 상태로 유지할 수 있도록 도와주는 도구입니다. 이를 통해 사용자는 데이터 저장소를 연결하고, 벡터를 동기화하며, 데이터를 변환 및 임베드할 수 있습니다. 또한 역할 기반 액세스 제어 및 확장성과 같은 기능도 제공합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">부분 유료화</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.neum.ai\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64c4876bf17b5825fc73d01f_64c1009cff11582af44bb5f0_website-preview.png\" alt=\"Thumbnail\" width=\"199\" height=\"132\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;LiarLiar.AI</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">실시간 동영상 피드에서 거짓말과 심박수 변동을 감지하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">AI의 힘을 활용하여 거짓말과 심박수 변동을 감지하는 혁신적인 거짓말 탐지 도구입니다. 사용자 친화적인 인터페이스로 설계되었으며 Zoom, Google Meet, Skype 등과 같은 인기 있는 화상 통화 소프트웨어와 호환됩니다. 한정된 기간 동안, LiarLiar는 단 29.99달러에 베타 버전을 평생 이용할 수 있는 혜택을 제공합니다. LiarLiar AI 도구는 고급 AI 알고리즘을 사용하여 실시간 비디오 피드를 분석하고 미세한 표정, 심박수 변동, 미묘한 신체 언어의 변화를 감지하여 진실성을 평가합니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://liarliar.ai\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table style=\"border-collapse: collapse; width: 770px; border: 2px solid #000000; margin-bottom: 18px;\" border=\"1\" width=\"770px\" cellspacing=\"0\" cellpadding=\"0\" data-ke-align=\"alignLeft\"><colgroup><col style=\"mso-width-source: userset; mso-width-alt: 6368; width: 197.328px;\" width=\"197.328\" /><col style=\"width: 54pt;\" span=\"7\" width=\"72\" /></colgroup>\n<tbody>\n<tr style=\"height: 21px;\">\n<td class=\"xl63\" style=\"height: 114px; width: 197.328px; padding: 0; vertical-align: middle; text-align: center;\" rowspan=\"3\" height=\"147\"><img src=\"https://cdn.prod.website-files.com/63994dae1033718bee6949ce/64b7d752d2710c3c2ab6772b_agent-so-logo.png\" alt=\"Thumbnail\" width=\"199\" height=\"81\" /></td>\n<td class=\"xl64\" style=\"border-left: none; width: 214.625px; height: 21px; background-color: #ececec; font-weight: bold; font-size: 18px; padding-left: 5px;\" colspan=\"3\">&nbsp;Agent.so</td>\n<td class=\"xl65\" style=\"border-left: none; width: 286.703px; height: 21px; padding-left: 5px;\" colspan=\"4\">머신러닝 모델의 정확도와 성능을 평가하는 도구입니다.</td>\n</tr>\n<tr style=\"height: 77px;\">\n<td class=\"xl68\" style=\"height: 77px; border-left: none; width: 502.328px; padding-left: 5px;\" colspan=\"7\">머신러닝 모델의 성능을 평가하기 위한 도구입니다. 모델의 정확도는 물론 정확도, 리콜, F1 점수와 같은 기타 메트릭을 측정할 수 있습니다. 또한 기능 중요도 및 혼동 행렬과 같은 모델의 동작 및 특성에 대한 인사이트를 제공할 수 있습니다.</td>\n</tr>\n<tr style=\"height: 16px;\">\n<td class=\"xl67\" style=\"height: 16px; border-left: none; width: 214.625px; padding-left: 5px;\" colspan=\"3\">유료 (무료 체험판)</td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.75px; height: 16px; padding-left: 5px;\" colspan=\"2\"><a href=\"https://www.agent.so\" target=\"_blank\" rel=\"noopener\">바로가기</a></td>\n<td class=\"xl66\" style=\"border-left: none; width: 142.953px; height: 16px; padding-left: 5px;\" colspan=\"2\">&nbsp;</td>\n</tr>\n</tbody>\n</table>",
        "contentSnippet": "AI 감지(AI Detection)는 데이터에서 객체, 패턴 또는 이상 징후를 식별하고 탐지하기 위해 인공지능 기술을 적용하는 것입니다. 여기에는 이미지, 오디오, 비디오, 텍스트 감지가 포함됩니다. \n \nAI 모델은 이미지에서 객체를 인식 및 분류하고, 오디오 신호를 분석하고, 비디오 콘텐츠를 처리하고, 텍스트에서 정보를 추출하도록 학습됩니다. AI 탐지는 보안, 의료, 고객 서비스 및 기타 산업 분야에서 다양하게 적용되어 더 나은 의사 결정을 위한 자동화되고 정확한 데이터 분석을 가능하게 합니다.\n 24년 6월 28일 기준 업데이트한 AI기술을 활용한 AI Detection 부문의 유용한 서비스를 소개합니다.\n\n\n\n\n Copyright Check AI\n소셜 미디어 프로필에서 저작권 위반을 식별하는 도구입니다.\n\n\nAI는 소셜 미디어 프로필의 저작권 위반으로 인한 법적 분쟁의 위험을 식별하고 완화하기 위해 고안된 종합 감사 서비스를 제공합니다. 이 서비스는 독점적인 AI 소프트웨어를 사용하여 소셜 미디어 계정을 스캔하여 게시물이나 인플루언서 캠페인에서 저작권이 있는 음악의 무단 사용을 강조 표시합니다. 음악 업계에서는 저작물의 무단 사용에 대해 수백만 달러에 달하는 법적 조치를 적극적으로 취하고 있기 때문에 브랜드와 법무팀은 이 도구를 사용하여 비용이 많이 드는 소송을 피할 수 있습니다. 이 서비스는 자세한 보고서, 지속적인 모니터링, 합법적인 음악 사용에 대한 지침을 제공하므로 소셜 미디어 콘텐츠를 보호하고 저작권법을 준수하려는 기업에게 필수적인 자산이 될 것입니다.\n\n\n유료\n바로가기\n \n\n\n\n\n\n\n\n GeoSpy.ai\n위성 이미지와 공간 데이터를 분석하고 해석하는 도구입니다.\n\n\nGeoSpy.ai는 인공 지능을 활용하여 위성 이미지와 공간 데이터를 분석하고 해석하는 최첨단 지리 공간 인텔리전스 도구입니다. 환경 모니터링, 도시 계획, 농업, 재난 대응, 군사 정찰 등 다양한 분야에 사용할 수 있습니다. 사람들은 토지 이용 패턴에 대한 인사이트를 얻고, 경관의 변화를 감지하고, 농작물의 상태를 모니터링하거나 전략적 계획을 세우기 위해 GeoSpy.ai를 사용할 수 있습니다. 대량의 복잡한 공간 정보를 빠르고 정확하게 처리하고 이해하는 능력은 지리적 맥락을 이해하는 것이 중요한 분야의 의사 결정자와 분석가에게 귀중한 자산이 될 수 있습니다.\n\n\n베타테스트중\n바로가기\n \n\n\n\n\n\n\n\n InstantID\n즉각적인 신원 확인을 위한 허깅 페이스 스페이스.\n\n\n인스턴트엑스는 허깅 페이스 스페이스 플랫폼에서 호스팅되는 디지털 도구로, 신원 확인 또는 인식 목적으로 설계된 것으로 보입니다. 제공된 콘텐츠에 구체적인 기능이 자세히 설명되어 있지는 않지만, 이름에서 알 수 있듯이 인공지능과 머신러닝 알고리즘을 사용하여 즉각적인 신원 확인 서비스를 제공할 수 있는 것으로 보입니다. 사용자 신원 확인을 통한 보안 강화, 로그인 프로세스 간소화, 자격증명 검증 자동화 등 다양한 용도로 인스턴트아이디를 사용할 수 있습니다. 빠르고 정확한 신원 확인을 위한 잠재력은 금융, 의료, 온라인 서비스 등 신원 확인이 중요한 분야에서 특히 유용할 수 있습니다.\n\n\n무료\n바로가기\n \n\n\n\n\n\n\n\n Nuanced\nAI가 생성한 이미지와 콘텐츠를 감지하는 도구입니다.\n\n\n온라인 서비스의 무결성과 신뢰성을 유지하기 위해 AI가 생성한 이미지와 콘텐츠를 탐지하는 최첨단 솔루션을 제공합니다. AI로 생성된 스팸, 어뷰징, 사기, 딥페이크가 증가함에 따라 사용자 생성 콘텐츠에 의존하는 플랫폼은 신뢰와 공신력을 유지하는 데 상당한 어려움을 겪고 있습니다. Nuanced의 알고리즘은 개인 식별 정보(PII)에 의존하지 않는 개인정보 보호 우선 접근 방식을 제공함으로써 AI 콘텐츠 생성의 급속한 발전에 앞서 나가도록 설계되었습니다. Nuanced의 API를 통합함으로써 기업은 사람이 직접 작성한 자료와 합성 창작물을 효율적으로 구분할 수 있으므로 콘텐츠 조정, 사기 탐지 및 콘텐츠의 진위 여부가 중요한 모든 서비스에 필수적인 도구가 될 수 있습니다.\n\n\n부분 유료화\n바로가기\n \n\n\n\n\n\n\n\n Circle to Search\n텍스트 선택을 대화형 검색 대화로 전환하는 Google 크롬 확장 프로그램입니다.\n\n\nAI를 통합하여 기존 검색 쿼리를 대화형 대화로 전환함으로써 웹 검색을 개선하는 브라우저 확장 프로그램입니다. 사용자는 텍스트를 드래그하고 선택하기만 하면 보다 정교한 검색 환경을 시작할 수 있어 정확하고 맥락에 맞는 정보를 빠르게 얻을 수 있습니다. 이 도구는 검색 프로세스를 간소화하고 웹에서 정보를 보다 직관적이고 효율적으로 찾을 수 있는 방법을 제공하기 때문에 자주 검색을 하거나 대량의 온라인 데이터를 살펴봐야 하는 개인에게 특히 유용합니다. 시간을 절약하고 검색 결과의 정확도를 높이며 필요에 따라 맞춤화된 검색 환경을 즐길 수 있습니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n HealthKey\n방대한 의료 기록을 간결한 환자 요약으로 종합하는 도구입니다.\n\n\n방대한 의료 기록을 간결한 환자 개요로 요약하여 환자 진료 준비 과정을 간소화하도록 설계된 AI 기반 도구입니다. 이 도구는 의료진에게 이해하기 쉬운 환자 일정과 건강 요약을 제공하며, 매일 아침 이메일로 전송할 수 있습니다. 기존 시스템과 통합할 수 있는 기능을 갖춘 HealthKey는 차트 준비에 소요되는 시간과 노력을 줄여 의료진이 수백 장의 의료 기록 대신 한 페이지 분량의 요약본을 검토할 수 있게 해줍니다. 이를 통해 의료진은 자신감과 효율성을 높여 환자 치료에 더 집중할 수 있습니다. HealthKey는 특히 관리 부담을 최소화하고, 환자 이력을 잘 파악하고, 제공하는 의료 서비스의 질을 개선하고자 하는 의료 서비스 제공자에게 유용합니다.\n\n\n유료\n바로가기\n \n\n\n\n\n\n\n\n Extracta.ai\n다양한 비정형 문서에서 정형 데이터를 추출하는 작업을 자동화하는 도구입니다.\n\n\n송장, 이력서, 계약서, 영수증과 같은 비정형 문서에서 정형 데이터를 추출하는 프로세스를 자동화하는 AI 기반 데이터 추출 플랫폼입니다. 사용자는 복잡한 교육 없이도 사용자 지정 추출 템플릿을 정의할 수 있으며, 스캔 이미지와 디지털 파일을 포함한 다양한 문서 유형을 지원합니다. Extracta.ai를 사용하면 데이터 처리를 간소화하고 수동 입력 오류를 줄이며 다양한 시스템과 원활하게 통합할 수 있어 재무 데이터 관리, 채용, 법률 운영, 비용 추적과 관련된 작업에서 시간을 절약하고 효율성을 높일 수 있습니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n EyePop.ai\n이미지 및 동영상 분석을 위한 노코드 도구입니다.\n\n\n사용자 친화적인 컴퓨터 비전 플랫폼으로, 사용자가 기술적 전문 지식이 없어도 시각 데이터 분석을 간소화하고 AI 기반 인사이트를 제공할 수 있도록 설계되었습니다. 사용자는 코드가 없거나 적은 도구를 사용하여 이미지, 동영상 또는 실시간 스트림으로 작업할 수 있는 맞춤형 애플리케이션, 즉 '팝'을 손쉽게 구축할 수 있습니다. 프로필 사진 인증, 미디어 참여도 분석, 실시간 동영상 콘텐츠 인사이트와 같은 작업에 사용할 수 있습니다. 사람들은 접근 가능하고 효율적인 AI 기반 분석을 통해 시각적 콘텐츠의 잠재력을 쉽게 실현하고, 사용자 경험을 개선하고, 참여도를 높이고, 데이터 기반 의사 결정을 내릴 수 있도록 EyePop.ai를 사용할 수 있습니다.\n\n\n베타테스트중\n바로가기\n \n\n\n\n\n\n\n\n Content Credentials\n온라인 콘텐츠를 검증하는 도구로, 출처와 편집 내역을 확인할 수 있습니다.\n\n\n딥페이크, 음성 복제, 합성 미디어로 인한 문제를 해결하기 위해 고안된 기술입니다. 온라인 콘텐츠의 출처, 제작 방법, 편집 이력에 대한 질문에 답하면서 온라인 콘텐츠에 대한 접근 가능하고 정확한 정보를 제공합니다. 사용자는 클릭 한 번으로 중요한 세부 정보를 확인할 수 있어 온라인 콘텐츠에 대한 신뢰를 높일 수 있습니다. 크리에이터는 콘텐츠 자격 증명을 통해 인지도 향상, 마케팅 및 잠재고객 확보가 가능하므로 적절한 크레딧을 받을 수 있습니다. 콘텐츠 크리덴셜 핀은 사용자가 콘텐츠에 대한 추가 정보를 탐색할 수 있도록 하는 지표 역할을 합니다. 공개 표준, 변조 탐지, 책임 소재를 기반으로 하는 콘텐츠 크리덴셜은 보다 투명한 인터넷을 위해 전 세계적으로 시행되고 있습니다.\n\n\n무료\n바로가기\n \n\n\n\n\n\n\n\n X-ray Interpreter\n엑스레이 이미지의 예비 해석을 위한 도구입니다.\n\n\n흉부, 치과, 복부, 골격 구조 등 다양한 유형의 엑스레이 이미지에 대한 예비 판독을 제공하도록 설계된 AI 기반 도구입니다. 사용자는 적은 비용으로 AI가 생성한 보고서를 빠르게 받아볼 수 있으며, 별도의 구독 요건이 없어 편리합니다. 의료 전문가와 상담하기 전에 엑스레이 이미지를 빠르게 초기 평가하여 인사이트를 얻거나 엑스레이에 나타난 세부 사항을 더 잘 이해하고자 하는 사람들이 사용할 수 있습니다. 이 도구는 사용 편의성과 개인정보 보호를 강조하지만, 전문적인 의학적 조언을 대체하기 위한 도구는 아닙니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n Verisoul\n웹사이트와 모바일 플랫폼에서 가짜 사용자, 봇, 사기 행위를 탐지하고 방지하는 디지털 보안 솔루션입니다.\n\n\n기업에 가짜 사용자, 봇, 사기 행위를 방지할 수 있는 도구를 제공하는 디지털 보안 플랫폼입니다. 단일 SDK 및 API를 통해 웹 및 모바일 애플리케이션과 통합되어 기업이 사용자 데이터를 쉽게 수집할 수 있습니다. 이 플랫폼은 AI 기반 인텔리전스를 사용하여 사용자가 진짜인지, 고유한지, 신뢰할 수 있는지 실시간으로 판단하고 사용자 상호 작용을 관리하기 위한 사용자 지정 가능한 노코드 워크플로우를 제공합니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n ShotSolve\nGPT-4 Vision을 사용하여 macOS의 스크린샷에서 질문을 해결하는 도구입니다.\n\n\n사용자가 촬영한 스크린샷을 기반으로 문제를 해결하는 무료 macOS 메뉴바 앱으로, GPT-4 Vision을 사용합니다. 이 앱은 OpenAI와 통합되며 사용자 지정 API 호스트, 컨텍스트 제한, 시스템 명령 및 사용자 지정 GPT 매개변수와 같은 고급 구성 옵션을 제공합니다. 또한 친숙한 UI, 범용 단축키, 빠른 성능의 Apple M1/M2용 기본 앱을 제공합니다. 무료로 사용할 수 있습니다.\n\n\n무료\n바로가기\n \n\n\n\n\n\n\n\n Luxand.Cloud\n얼굴 인식 및 검색을 애플리케이션에 통합하는 API입니다.\n\n\nLuxand.cloud는 AI 기반 얼굴 검색 및 인식 API로, 사용자가 클라우드 API를 사용하여 웹사이트, 앱 또는 소프트웨어에 얼굴 인식을 통합할 수 있습니다. 사람의 얼굴을 정확하게 인식 및 비교하고, 이전에 이미지에 태그된 사람을 식별하고, 사진에서 나이, 성별, 감정을 감지할 수 있으며, 안전한 클라우드 스토리지를 제공합니다. 여러 프로그래밍 언어를 지원하며 비용 효율성과 확장성이 뛰어납니다. 또한 금융, 마케팅, 교육, 교통, 호텔, 소매업 등 다양한 산업에서 사용되고 있습니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n LabelGPT\n레이블이 지정된 데이터를 생성하는 자동화된 데이터 주석 플랫폼입니다.\n\n\n머신러닝 팀이 라벨이 지정된 대량의 데이터를 빠르게 생성할 수 있도록 지원하는 자동화된 데이터 주석 플랫폼입니다. 여러 기초 모델의 조합을 사용해 제로 샷 라벨링을 달성하므로 사용자는 데이터를 가져오고, 프롬프트로 클래스 이름을 지정하고, 높은 신뢰도 점수로 단 몇 분 만에 라벨을 생성할 수 있습니다. 또한 LabelGPT는 개방형 데이터 세트, 스마트 피드백 루프, 사전 라벨링 솔루션을 제공하여 프로세스 속도를 높입니다.\n\n\n부분 유료화\n바로가기\n \n\n\n\n\n\n\n\n LLaVa\n고급 언어 및 시각 이해를 위한 도구입니다.\n\n\n범용 시각 및 언어 이해를 위해 설계된 혁신적인 대규모 멀티모달 모델입니다. 비전 인코더와 대규모 언어 모델(LLM)인 Vicuna를 결합하여 엔드 투 엔드 학습이 이루어집니다. LLaVA는 멀티모달 GPT-4의 성능을 모방한 인상적인 채팅 기능을 보여주며 과학 QA 작업에서 새로운 최첨단 정확도를 설정합니다. 이 도구의 핵심 기능은 언어 전용 GPT-4를 사용하여 멀티모달 언어-이미지 명령어 팔로잉 데이터를 생성하는 기능입니다. LLaVA는 공개적으로 사용 가능한 데이터, 모델 및 코드가 포함된 오픈 소스입니다. 시각적 채팅 애플리케이션 및 과학 분야 추론과 같은 작업에 맞게 미세 조정되어 두 영역 모두에서 높은 성능을 달성합니다.\n\n\n무료\n바로가기\n \n\n\n\n\n\n\n\n astica\n이미지와 문서의 비전 및 음성 인식, 전사, 검토를 위한 도구입니다.\n\n\n음성 및 시각 AI 기능을 제공하는 astica.ai의 코그너티브 API 데모입니다. 이미지와 문서를 읽고, 설명하고, 분류하고, 조정하고, 어시스턴트를 생성하고, 오디오 파일을 전사하고, 설명 오디오를 실시간으로 생성하는 데 도움을 줄 수 있습니다. 또한 이미지에 대한 정확하고 상세한 설명을 생성하고, 얼굴과 물체를 감지하고, 업로드된 이미지를 조정할 수 있습니다. 강력한 컴퓨터 비전과 한 줄로 통합되어 이미지를 설명하고, 얼굴과 물체를 감지하고, 업로드된 이미지를 조정할 수 있습니다.\n\n\n부분 유료화\n바로가기\n \n\n\n\n\n\n\n\n wasitai\nAI가 생성한 이미지를 감지하는 도구입니다.\n\n\n와시타이 도구를 사용하면 이미지가 기계에 의해 생성되었는지 확인할 수 있습니다. 사용자는 이미지를 드래그 앤 드롭하거나 디바이스에서 이미지를 선택하면 도구가 이미지를 처리하여 사람이 생성한 것인지 기계가 생성한 것인지 확인합니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n LookRight\n시각적 인사이트를 얻을 수 있는 도구입니다.\n\n\n컴퓨터 비전과 GPT 기술을 활용하여 다양한 상황에서 귀중한 인사이트와 피드백을 제공하는 혁신적인 도구입니다. 패션 선택에 대한 두 번째 의견이 필요하거나, 이미지 캡션에 대한 영감을 구하거나, 요리 창작물에 대한 피드백이 필요할 때 LookRight가 도움을 드릴 수 있습니다. 사용자 친화적인 인터페이스를 통해 쉽게 사용할 수 있으며, 지침이 필요할 때마다 신뢰할 수 있는 편견 없는 눈 역할을 해줍니다. LookRight는 최첨단 기술과 다양한 시각 관련 질문에 대한 실용적인 지원을 결합합니다.\n\n\n무료\n바로가기\n \n\n\n\n\n\n\n\n Carbon\nllms 및 AI 개발을 위한 데이터 소스를 연결하고 관리하기 위한 통합 API입니다.\n\n\n개발자가 모든 데이터 소스에 액세스하고 연결할 수 있는 통합된 LLM용 API입니다. 개발자가 일반 텍스트 검색, 청크 및 임베딩 생성, 데이터 소스 관리 등을 수행할 수 있는 AI 중심의 데이터 가져오기를 위한 풍부한 API 라이브러리를 제공합니다. 또한 Carbon에는 문서 관리, 임베딩 생성, 시맨틱 검색, SOC 2 규정 준수, 화이트 라벨, 자동 확장, 관리형 OAuth, 사용량 보고, 사용자 정의 빌드와 같은 기능도 포함되어 있습니다. 기업들은 수십 가지 파일 형식과 타사 서비스를 지원하여 비정형 데이터를 대규모로 활용할 수 있습니다. Carbon을 사용하면 10분 이내에 계정을 설정하고 한 달 동안 무제한으로 액세스할 수 있습니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n Automorphic\n언어 모델, 빠른 로딩/적재 및 이지스 방화벽을 위한 솔루션 제품군입니다.\n\n\nAutomorphic은 단 10개의 샘플만으로 언어 모델에 지식을 주입하는 Infuse, 자체 개선 모델, 미세 조정된 어댑터의 빠른 로딩/적재, OpenAI API 호환, 공개적으로 공유되는 모델을 위한 Automorphic Hub 등 언어 모델을 위한 솔루션 제품군을 제공합니다. 또한 프롬프트 주입, 프롬프트 및 PII 유출, 유해한 언어 등을 감지할 수 있는 모델용 방화벽인 Aegis를 제공합니다.\n\n\n부분 유료화\n바로가기\n \n\n\n\n\n\n\n\n\n Undetectable AI\nAI 방지 콘텐츠를 작성하고 AI 탐지를 제거할 수 있는 도구입니다.\n\n\n콘텐츠 제작자가 AI 탐지기를 우회하는 사람처럼 키워드가 풍부한 콘텐츠를 작성할 수 있도록 도와주는 AI 탐지 제거 도구입니다. 이 도구는 검색 엔진에 최적화되어 탐지를 피할 수 있는 고유한 자료를 제공하며 작가, 블로거, 연구원, 마케터 등에게 이상적입니다.\n\n\n유료\n바로가기\n \n\n\n\n\n\n\n\n Holly\n채용 프로세스를 자동화하는 도구입니다.\n\n\n기업이 채용 프로세스를 자동화할 수 있도록 지원하는 인공지능 기반의 가상 채용 도구입니다. 엄선된 후보자 목록을 제공하고, 사용자를 대신하여 후보자와 소통하며, 피드백을 통해 학습하여 최상의 매칭을 제공합니다. 여러 플랫폼과 통합되어 있으며 사람 채용 담당자처럼 생각하고 행동하도록 설계되었습니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n Airparser\n이메일, PDF, 문서, 이미지 등에서 데이터 추출을 자동화하는 도구입니다.\n\n\n이메일, PDF, 문서, 이미지 등에서 데이터 추출을 자동화하는 도구입니다. GPT 기반 파서와 OCR 엔진을 사용해 구조화된 데이터를 실시간으로 추출하고, 6000개 이상의 앱으로 데이터를 내보낼 수 있습니다. 또한 웹후크, API, Excel로 다운로드와 같은 기능도 제공합니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n Rainbow.ai\n일기 예보 및 알림을 제공하는 도구입니다.\n\n\n사용자에게 정확하고 신뢰할 수 있는 날씨 정보를 제공하는 AI 기반 일기 예보 도구로, 사용자가 정보를 얻고 안전하게 지낼 수 있도록 도와줍니다. 정확한 위치의 날씨 변화에 대한 적시 알림을 제공하며, 사용자는 앱을 다운로드하여 날씨를 미리 파악할 수 있습니다.\n\n\n부분 유료화\n바로가기\n \n\n\n\n\n\n\n\n AI Judge\n경합하는 두 당사자의 주장을 바탕으로 공정한 평결을 생성하는 도구입니다.\n\n\n인공지능 기술을 활용하여 분쟁 당사자 두 사람이 제시한 주장을 바탕으로 공정한 판결을 내리는 혁신적인 플랫폼입니다. 사용자가 분쟁에 대한 자신의 주장을 제출하면 AI 시스템이 각 당사자가 제시한 사실, 증거, 법적 원칙을 면밀히 분석하여 공정하고 공평한 판결을 내립니다. AI 알고리즘은 주장의 일관성, 증거의 강도, 법적 추론의 일관성 등 다양한 요소를 고려합니다. 또한, 사용자는 자격을 갖춘 법률 전문가에게 AI가 생성한 판결을 검토하도록 요청하여 추가적인 검토를 받을 수 있습니다. AI 판사는 제공된 정보를 바탕으로 객관적인 관점을 제시하여 분쟁 해결 프로세스를 용이하게 하도록 설계되었습니다.\n\n\n무료\n바로가기\n \n\n\n\n\n\n\n\n Cerebrium\n머신러닝 모델의 훈련, 배포 및 모니터링을 위한 도구입니다.\n\n\n단 몇 줄의 코드만으로 머신 러닝 모델을 쉽게 훈련, 배포, 모니터링할 수 있는 머신 러닝 프레임워크입니다. 사용자는 서버리스 GPU 모델을 배포하고, 모든 주요 프레임워크를 지원하고, LLM과 사용자 정의 모델을 연결하여 고유한 기능을 생성하고, 모델 전후에 로직을 추가하고, 모델을 자동으로 버전업하고, 1초 미만의 콜드 스타트를 할 수 있습니다. 또한 손쉬운 미세 조정, 최고의 ML 통합 가시성 플랫폼과의 통합, 기능 및 예측 드리프트 모니터링 기능도 제공합니다.\n\n\n부분 유료화\n바로가기\n \n\n\n\n\n\n\n\n PI.EXCHANGE\n코딩 없이 원시 데이터를 예측으로 변환하는 도구입니다.\n\n\n엔드투엔드 머신러닝 도구로, 사용자가 코딩 없이도 몇 분 만에 원시 데이터에서 예측으로 빠르게 전환할 수 있도록 지원합니다. 데이터 준비, 모델 개발, 데이터 보안 및 개인정보 보호, 통합 등의 기능을 제공합니다. 마케팅 팀, 데이터 과학자, 소프트웨어 엔지니어, 데이터 분석가, 기업가 등 다양한 업계에서 사용할 수 있습니다. 지식 허브, API 및 SDK 문서, 블로그 등의 리소스를 제공합니다.\n\n\n유료 (무료 체험판)\n바로가기\n \n\n\n\n\n\n\n\n Neum AI\nAI 애플리케이션을 정확하고 최신 상태로 유지할 수 있는 도구입니다.\n\n\n기업이 AI 애플리케이션을 최신의 정확한 상태로 유지할 수 있도록 도와주는 도구입니다. 이를 통해 사용자는 데이터 저장소를 연결하고, 벡터를 동기화하며, 데이터를 변환 및 임베드할 수 있습니다. 또한 역할 기반 액세스 제어 및 확장성과 같은 기능도 제공합니다.\n\n\n부분 유료화\n바로가기\n \n\n\n\n\n\n\n\n LiarLiar.AI\n실시간 동영상 피드에서 거짓말과 심박수 변동을 감지하는 도구입니다.\n\n\nAI의 힘을 활용하여 거짓말과 심박수 변동을 감지하는 혁신적인 거짓말 탐지 도구입니다. 사용자 친화적인 인터페이스로 설계되었으며 Zoom, Google Meet, Skype 등과 같은 인기 있는 화상 통화 소프트웨어와 호환됩니다. 한정된 기간 동안, LiarLiar는 단 29.99달러에 베타 버전을 평생 이용할 수 있는 혜택을 제공합니다. LiarLiar AI 도구는 고급 AI 알고리즘을 사용하여 실시간 비디오 피드를 분석하고 미세한 표정, 심박수 변동, 미묘한 신체 언어의 변화를 감지하여 진실성을 평가합니다.\n\n\n유료\n바로가기\n \n\n\n\n\n\n\n\n Agent.so\n머신러닝 모델의 정확도와 성능을 평가하는 도구입니다.\n\n\n머신러닝 모델의 성능을 평가하기 위한 도구입니다. 모델의 정확도는 물론 정확도, 리콜, F1 점수와 같은 기타 메트릭을 측정할 수 있습니다. 또한 기능 중요도 및 혼동 행렬과 같은 모델의 동작 및 특성에 대한 인사이트를 제공할 수 있습니다.\n\n\n유료 (무료 체험판)\n바로가기",
        "guid": "http://muzbox.tistory.com/483444",
        "categories": [
          "AI, 미래기술/AI 검출",
          "AI Detection",
          "AI감지",
          "AI검출",
          "AI사이트 추천",
          "It",
          "이슈",
          "추천사이트",
          "테크플러스"
        ],
        "isoDate": "2024-06-28T02:24:38.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "GPT보다 뛰어난 인공지능은? 대형 언어 모델(LLMs) 비교",
        "link": "http://muzbox.tistory.com/2001",
        "pubDate": "Wed, 26 Jun 2024 14:56:29 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/2001#entry2001comment",
        "content": "<p data-ke-size=\"size16\">대형 언어 모델(Large Language Models, LLMs)은 방대한 데이터셋을 통해 학습된 인공지능 모델로, 다양한 언어 작업에서 혁신을 이끌고 있습니다. 주요 LLM들을 비교하고 평가하며, 이들의 기술적 특징과 활용 방안을 알아봅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"인공지능 모델 성능비교.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/bcKxjW/btsIcDIAXtg/lO7m7K3kB7Dglnuw5vzc81/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bcKxjW/btsIcDIAXtg/lO7m7K3kB7Dglnuw5vzc81/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbcKxjW%2FbtsIcDIAXtg%2FlO7m7K3kB7Dglnuw5vzc81%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"인공지능 모델 성능비교.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">최근 인공지능 분야에서 대형 언어 모델(Large Language Models, LLMs)이 큰 주목을 받고 있습니다. 이 모델들은 방대한 양의 데이터를 학습하여 인간과 유사한 언어 이해와 생성을 가능하게 합니다. 이번 기사에서는 GPT-4, Gemini, PaLM 2 등 주요 LLM들을 비교하고, 이들의 기술적 특징과 활용 방안을 살펴보겠습니다. 인공지능이 어떻게 우리의 삶과 산업에 혁신을 가져다주는지 알아보세요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>대형 언어 모델(LLMs)이란?</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">정의와 역할</span></h3>\n<p data-ke-size=\"size16\">대형 언어 모델(Large Language Models, LLMs)은 방대한 데이터셋을 바탕으로 학습하여 자연어를 이해하고 생성하는 모델입니다. 이러한 모델들은 텍스트 문서에서 통계적 패턴을 학습해 다양한 언어 관련 작업을 수행할 수 있습니다. 주요 응용 분야로는 텍스트 생성이 있으며, 이는 주어진 입력 텍스트를 기반으로 다음 단어를 예측하는 방식으로 작동합니다. LLMs는 인공지능 분야에서 중요한 진전을 이뤘으며, 여러 산업에서 혁신적으로 활용되고 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">기술적 특징</span></h3>\n<p data-ke-size=\"size16\">대형 언어 모델들은 주로 트랜스포머 기반의 아키텍처를 사용합니다. 트랜스포머는 순차적 데이터를 효과적으로 처리하고 문맥을 이해하는 데 뛰어난 성능을 발휘합니다. 이러한 모델들은 다층 신경망으로 구성되어 있으며, 각 층은 학습 과정에서 최적화된 조정 가능한 파라미터를 포함하고 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">어텐션 메커니즘(Attention Mechanism)</span></h3>\n<p data-ke-size=\"size16\">트랜스포머 기반 모델의 중요한 특징 중 하나는 어텐션&nbsp;메커니즘니다. 이 메커니즘은 문장 내의 다른 단어들의 중요도를 가중치로 계산하여 모델이 중요한 정보에 집중할 수 있도록 합니다. 이를 통해 문맥과 언어의 뉘앙스를 더 잘 이해할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">문맥적 단어 표현</span></h3>\n<p data-ke-size=\"size16\">기존 언어 모델들이 단어를 개별적으로 취급하는 것과 달리, 대형 언어 모델들은 단어의 문맥적 표현을 생성합니다. 이는 단어의 의미가 문맥에 따라 달라질 수 있음을 반영하여 더 정교한 언어 이해를 가능하게 합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">확장성</span></h3>\n<p data-ke-size=\"size16\">대형 언어 모델들은 제공되는 데이터의 양에 따라 확장 가능합니다. 더 많은 데이터를 학습할수록 언어를 이해하고 생성하는 능력이 향상됩니다. 이러한 확장성은 모델의 성공과 지속적인 발전의 핵심 요소입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>대형 언어 모델의 발전과 도전 과제</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">컴퓨팅 자원</span></h3>\n<p data-ke-size=\"size16\">대형 언어 모델을 훈련시키기 위해서는 막대한 컴퓨팅 자원이 필요합니다. 모델의 크기와 데이터의 양이 증가함에 따라 필요한 자원도 증가하여, 소규모 조직이 이를 활용하기 어려운 경우가 많습니다. 이러한 문제를 해결하기 위해 클라우드 기반의 컴퓨팅 자원이나 효율적인 알고리즘 개발이 중요합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">데이터 품질과 편향</span></h3>\n<p data-ke-size=\"size16\">훈련 데이터의 품질은 모델의 성능에 직접적인 영향을 미칩니다. 데이터 내의 편향은 모델 출력에 영향을 미칠 수 있으며, 이는 윤리적 문제와 공정성 문제를 야기할 수 있습니다. 따라서 데이터의 공정성과 다양성을 보장하기 위한 노력이 필요합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">해석 가능성</span></h3>\n<p data-ke-size=\"size16\">대형 언어 모델이 점점 복잡해짐에 따라, 모델이 어떻게 결정을 내리는지를 이해하는 것이 더욱 어려워집니다. 모델의 투명성과 해석 가능성을 보장하는 것은 계속되는 연구 분야입니다. 이는 모델의 신뢰성을 높이고, 사용자들이 모델의 결과를 이해하고 신뢰할 수 있도록 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>주요 대형 언어 모델들</b></span></h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1004\" data-origin-height=\"367\"><span data-url=\"https://blog.kakaocdn.net/dn/bNHnt6/btsIdJgYM6a/Idc3kzvRRnEvFHDev11Vu1/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bNHnt6/btsIdJgYM6a/Idc3kzvRRnEvFHDev11Vu1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbNHnt6%2FbtsIdJgYM6a%2FIdc3kzvRRnEvFHDev11Vu1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"1004\" data-origin-height=\"367\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">GPT-4</span></h3>\n<p data-ke-size=\"size16\">GPT-4는 OpenAI에서 개발한 대형 멀티모달 언어 모델로, 텍스트와 이미지를 처리할 수 있는 능력을 갖추고 있습니다. 이는 다양한 분야에서 활용될 수 있는 탁월한 성능을 자랑합니다. GPT-4는 이전 버전에 비해 향상된 이해력과 창의력을 보여줍니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Gemini</span></h3>\n<p data-ke-size=\"size16\">Gemini는 Google DeepMind에서 개발한 멀티모달 대형 언어 모델로, 텍스트, 이미지, 오디오, 비디오, 코드 등의 다양한 데이터 유형을 동시에 처리할 수 있는 능력을 갖추고 있습니다. 이는 인간-컴퓨터 상호작용, 콘텐츠 생성, 문제 해결 등 다양한 분야에서 혁신을 이끌고 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">PaLM 2</span></h3>\n<p data-ke-size=\"size16\">PaLM 2는 Google이 개발한 모델로, 코드 생성, 수학 문제 해결, 번역 등 다양한 복잡한 작업을 수행할 수 있습니다. 이 모델은 효율성, 속도, 비용 면에서 최적화되어 있습니다. 또한, PaLM 2는 다양한 언어와 과학 논문, 웹 페이지, 코드 등을 학습하여 다방면에서 뛰어난 성능을 보여줍니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Llama 2</span></h3>\n<p data-ke-size=\"size16\">Llama 2는 Meta AI에서 개발한 모델로, 대화 작업에 특히 강점을 가지고 있으며, 다양한 응용 분야에서 활용될 수 있습니다. 이 모델은 대규모 데이터셋을 학습하여 사용자와의 상호작용에서 높은 정확성과 자연스러움을 제공합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Vicuna</span></h3>\n<p data-ke-size=\"size16\">Vicuna는 AI 연구를 용이하게 하기 위해 설계된 모델로, 질문-응답 형식을 통해 다양한 LLM을 비교하고 평가할 수 있습니다. 이는 연구자들이 다양한 모델의 성능을 비교하고 개선하는 데 도움이 됩니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Claude</span></h3>\n<p data-ke-size=\"size16\">Claude 는 Anthropic에서 개발한 AI 모델로, 코딩, 수학, 논리적 추론 작업에서 뛰어난 성능을 보여줍니다. Claude 2는 사용자의 요청에 맞춰 긴 문서나 기술 매뉴얼 등을 처리할 수 있는 능력을 갖추고 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Falcon</span></h3>\n<p data-ke-size=\"size16\">Falcon은 다양한 크기의 모델로 구성되어 있으며, 멀티랭귀지 기능을 갖추고 있어 여러 언어로 작업을 수행할 수 있습니다. Falcon 모델은 높은 정확도와 효율성을 자랑하며, 다양한 산업에서 활용될 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">MPT</span></h3>\n<p data-ke-size=\"size16\">MPT는 MosaicML에서 개발한 모델로, 고급 AI 기술을 민주화하고 상업적으로 사용 가능한 플랫폼을 제공하는 것을 목표로 합니다. MPT 모델은 최적화된 아키텍처와 고급 기법을 사용하여 효율적이고 빠른 성능을 제공합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Mixtral 8x7B</span></h3>\n<p data-ke-size=\"size16\">Mixtral 8x7B는 Mistral AI에서 개발한 모델로, 혁신적인 전문가 혼합 아키텍처를 특징으로 합니다. 이 모델은 다중 언어 지원 및 코드 생성 작업에서 뛰어난 성능을 발휘합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Grok</span></h3>\n<p data-ke-size=\"size16\">Grok은 xAI에서 개발한 고급 챗봇으로, 유머러스하고 실시간 정보를 제공할 수 있는 독특한 대화 경험을 제공합니다. Grok은 다양한 작업을 수행할 수 있으며, 사용자와의 상호작용에서 높은 만족도를 제공합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">StableLM</span></h3>\n<p data-ke-size=\"size16\">StableLM은 Stability AI에서 개발한 오픈 소스 대형 언어 모델로, 대화 및 코딩 작업에서 뛰어난 성능을 보여줍니다. StableLM은 광범위한 데이터셋을 학습하여 높은 정확도와 효율성을 자랑합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>LLM 리더보드 ( LLMs 비교 사이트)</b></span></h2>\n<p data-ke-size=\"size16\">artificialanalysis.ai 의<span style=\"color: #ee2323;\"><b> 'LLM 리더보드'</b></span>에서는 GPT-4o, 라마 3, 미스트랄, 제미니 및 30개 이상의 모델 비교 결과를 확인할 수 있습니다.</p>\n<p data-ke-size=\"size16\">모델별 품질, 가격, 성능, 속도(출력 속도 - 초당 토큰 수 및 지연 시간 - TTFT), 컨텍스트 창 등 주요 지표에 걸쳐 30개 이상의 AI 모델(LLM)의 성능을 비교하고 순위를 매깁니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>6/26 현재</b></p>\n<p data-ke-size=\"size16\">싱글 병렬 쿼리, 1,000토큰 기준 성능 순위는 아래와 같습니다. 최근 출시된 클로드 3.5 소네트의 약진이 놀랍습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"인공지능 모델 비교.jpg\" data-origin-width=\"1363\" data-origin-height=\"250\"><span data-url=\"https://blog.kakaocdn.net/dn/sWNhp/btsIc0KigWz/Or9q70QQ8GgGsZ3ocGd2Gk/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/sWNhp/btsIc0KigWz/Or9q70QQ8GgGsZ3ocGd2Gk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FsWNhp%2FbtsIc0KigWz%2FOr9q70QQ8GgGsZ3ocGd2Gk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"LLM 리더보드\" data-filename=\"인공지능 모델 비교.jpg\" data-origin-width=\"1363\" data-origin-height=\"250\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1719381296144\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"LLM Leaderboard - Compare GPT-4o, Llama 3, Mistral, Gemini &amp; other models | Artificial Analysis\" data-og-description=\"Comparison and ranking the performance of over 30 AI models (LLMs) across key metrics including quality, price, performance and speed (output speed - tokens per second &amp; latency - TTFT), context window &amp; others.\" data-og-host=\"artificialanalysis.ai\" data-og-source-url=\"https://artificialanalysis.ai/leaderboards/models/prompt-options/multiple/medium\" data-og-url=\"https://artificialanalysis.ai/leaderboards/models/prompt-options/multiple/medium\" data-og-image=\"https://scrap.kakaocdn.net/dn/t0Iur/hyWoIW1Lu0/EWj1GRq1DVujeYMkjgLAD0/img.png?width=1260&amp;height=700&amp;face=0_0_1260_700,https://scrap.kakaocdn.net/dn/qxhAn/hyWoDOTAUa/Tf0m0elsr67KFqYlgm1LBk/img.png?width=1260&amp;height=700&amp;face=0_0_1260_700,https://scrap.kakaocdn.net/dn/bFBchE/hyWrZpf3qa/vGeQIdgLwSbrsKKkPJ8ec1/img.png?width=225&amp;height=225&amp;face=0_0_225_225\"><a href=\"https://artificialanalysis.ai/leaderboards/models/prompt-options/multiple/medium\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://artificialanalysis.ai/leaderboards/models/prompt-options/multiple/medium\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/t0Iur/hyWoIW1Lu0/EWj1GRq1DVujeYMkjgLAD0/img.png?width=1260&amp;height=700&amp;face=0_0_1260_700,https://scrap.kakaocdn.net/dn/qxhAn/hyWoDOTAUa/Tf0m0elsr67KFqYlgm1LBk/img.png?width=1260&amp;height=700&amp;face=0_0_1260_700,https://scrap.kakaocdn.net/dn/bFBchE/hyWrZpf3qa/vGeQIdgLwSbrsKKkPJ8ec1/img.png?width=225&amp;height=225&amp;face=0_0_225_225');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">LLM Leaderboard - Compare GPT-4o, Llama 3, Mistral, Gemini &amp; other models | Artificial Analysis</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Comparison and ranking the performance of over 30 AI models (LLMs) across key metrics including quality, price, performance and speed (output speed - tokens per second &amp; latency - TTFT), context window &amp; others.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">artificialanalysis.ai</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>결론</b></span></h2>\n<p data-ke-size=\"size16\">대형 언어 모델은 AI 발전의 핵심 요소로, 다양한 작업에서 혁신을 이끌고 있습니다. 각 모델은 고유한 강점과 특징을 가지고 있어, 특정 용도에 맞는 최적의 모델을 선택하는 것이 중요합니다. 앞으로도 대형 언어 모델의 발전은 계속될 것이며, 이는 우리의 일상과 산업 전반에 걸쳐 긍정적인 영향을 미칠 것입니다.</p>\n<div id=\"gtx-trans\" style=\"position: absolute; left: -59px; top: 4467.97px;\">\n<div class=\"gtx-trans-icon\">&nbsp;</div>\n</div>",
        "contentSnippet": "대형 언어 모델(Large Language Models, LLMs)은 방대한 데이터셋을 통해 학습된 인공지능 모델로, 다양한 언어 작업에서 혁신을 이끌고 있습니다. 주요 LLM들을 비교하고 평가하며, 이들의 기술적 특징과 활용 방안을 알아봅니다.\n\n\n최근 인공지능 분야에서 대형 언어 모델(Large Language Models, LLMs)이 큰 주목을 받고 있습니다. 이 모델들은 방대한 양의 데이터를 학습하여 인간과 유사한 언어 이해와 생성을 가능하게 합니다. 이번 기사에서는 GPT-4, Gemini, PaLM 2 등 주요 LLM들을 비교하고, 이들의 기술적 특징과 활용 방안을 살펴보겠습니다. 인공지능이 어떻게 우리의 삶과 산업에 혁신을 가져다주는지 알아보세요.\n \n대형 언어 모델(LLMs)이란?\n정의와 역할\n대형 언어 모델(Large Language Models, LLMs)은 방대한 데이터셋을 바탕으로 학습하여 자연어를 이해하고 생성하는 모델입니다. 이러한 모델들은 텍스트 문서에서 통계적 패턴을 학습해 다양한 언어 관련 작업을 수행할 수 있습니다. 주요 응용 분야로는 텍스트 생성이 있으며, 이는 주어진 입력 텍스트를 기반으로 다음 단어를 예측하는 방식으로 작동합니다. LLMs는 인공지능 분야에서 중요한 진전을 이뤘으며, 여러 산업에서 혁신적으로 활용되고 있습니다.\n기술적 특징\n대형 언어 모델들은 주로 트랜스포머 기반의 아키텍처를 사용합니다. 트랜스포머는 순차적 데이터를 효과적으로 처리하고 문맥을 이해하는 데 뛰어난 성능을 발휘합니다. 이러한 모델들은 다층 신경망으로 구성되어 있으며, 각 층은 학습 과정에서 최적화된 조정 가능한 파라미터를 포함하고 있습니다.\n어텐션 메커니즘(Attention Mechanism)\n트랜스포머 기반 모델의 중요한 특징 중 하나는 어텐션 메커니즘니다. 이 메커니즘은 문장 내의 다른 단어들의 중요도를 가중치로 계산하여 모델이 중요한 정보에 집중할 수 있도록 합니다. 이를 통해 문맥과 언어의 뉘앙스를 더 잘 이해할 수 있습니다.\n문맥적 단어 표현\n기존 언어 모델들이 단어를 개별적으로 취급하는 것과 달리, 대형 언어 모델들은 단어의 문맥적 표현을 생성합니다. 이는 단어의 의미가 문맥에 따라 달라질 수 있음을 반영하여 더 정교한 언어 이해를 가능하게 합니다.\n확장성\n대형 언어 모델들은 제공되는 데이터의 양에 따라 확장 가능합니다. 더 많은 데이터를 학습할수록 언어를 이해하고 생성하는 능력이 향상됩니다. 이러한 확장성은 모델의 성공과 지속적인 발전의 핵심 요소입니다.\n \n \n대형 언어 모델의 발전과 도전 과제\n컴퓨팅 자원\n대형 언어 모델을 훈련시키기 위해서는 막대한 컴퓨팅 자원이 필요합니다. 모델의 크기와 데이터의 양이 증가함에 따라 필요한 자원도 증가하여, 소규모 조직이 이를 활용하기 어려운 경우가 많습니다. 이러한 문제를 해결하기 위해 클라우드 기반의 컴퓨팅 자원이나 효율적인 알고리즘 개발이 중요합니다.\n데이터 품질과 편향\n훈련 데이터의 품질은 모델의 성능에 직접적인 영향을 미칩니다. 데이터 내의 편향은 모델 출력에 영향을 미칠 수 있으며, 이는 윤리적 문제와 공정성 문제를 야기할 수 있습니다. 따라서 데이터의 공정성과 다양성을 보장하기 위한 노력이 필요합니다.\n해석 가능성\n대형 언어 모델이 점점 복잡해짐에 따라, 모델이 어떻게 결정을 내리는지를 이해하는 것이 더욱 어려워집니다. 모델의 투명성과 해석 가능성을 보장하는 것은 계속되는 연구 분야입니다. 이는 모델의 신뢰성을 높이고, 사용자들이 모델의 결과를 이해하고 신뢰할 수 있도록 합니다.\n \n \n주요 대형 언어 모델들\n\n\nGPT-4\nGPT-4는 OpenAI에서 개발한 대형 멀티모달 언어 모델로, 텍스트와 이미지를 처리할 수 있는 능력을 갖추고 있습니다. 이는 다양한 분야에서 활용될 수 있는 탁월한 성능을 자랑합니다. GPT-4는 이전 버전에 비해 향상된 이해력과 창의력을 보여줍니다.\nGemini\nGemini는 Google DeepMind에서 개발한 멀티모달 대형 언어 모델로, 텍스트, 이미지, 오디오, 비디오, 코드 등의 다양한 데이터 유형을 동시에 처리할 수 있는 능력을 갖추고 있습니다. 이는 인간-컴퓨터 상호작용, 콘텐츠 생성, 문제 해결 등 다양한 분야에서 혁신을 이끌고 있습니다.\nPaLM 2\nPaLM 2는 Google이 개발한 모델로, 코드 생성, 수학 문제 해결, 번역 등 다양한 복잡한 작업을 수행할 수 있습니다. 이 모델은 효율성, 속도, 비용 면에서 최적화되어 있습니다. 또한, PaLM 2는 다양한 언어와 과학 논문, 웹 페이지, 코드 등을 학습하여 다방면에서 뛰어난 성능을 보여줍니다.\nLlama 2\nLlama 2는 Meta AI에서 개발한 모델로, 대화 작업에 특히 강점을 가지고 있으며, 다양한 응용 분야에서 활용될 수 있습니다. 이 모델은 대규모 데이터셋을 학습하여 사용자와의 상호작용에서 높은 정확성과 자연스러움을 제공합니다.\nVicuna\nVicuna는 AI 연구를 용이하게 하기 위해 설계된 모델로, 질문-응답 형식을 통해 다양한 LLM을 비교하고 평가할 수 있습니다. 이는 연구자들이 다양한 모델의 성능을 비교하고 개선하는 데 도움이 됩니다.\nClaude\nClaude 는 Anthropic에서 개발한 AI 모델로, 코딩, 수학, 논리적 추론 작업에서 뛰어난 성능을 보여줍니다. Claude 2는 사용자의 요청에 맞춰 긴 문서나 기술 매뉴얼 등을 처리할 수 있는 능력을 갖추고 있습니다.\nFalcon\nFalcon은 다양한 크기의 모델로 구성되어 있으며, 멀티랭귀지 기능을 갖추고 있어 여러 언어로 작업을 수행할 수 있습니다. Falcon 모델은 높은 정확도와 효율성을 자랑하며, 다양한 산업에서 활용될 수 있습니다.\nMPT\nMPT는 MosaicML에서 개발한 모델로, 고급 AI 기술을 민주화하고 상업적으로 사용 가능한 플랫폼을 제공하는 것을 목표로 합니다. MPT 모델은 최적화된 아키텍처와 고급 기법을 사용하여 효율적이고 빠른 성능을 제공합니다.\nMixtral 8x7B\nMixtral 8x7B는 Mistral AI에서 개발한 모델로, 혁신적인 전문가 혼합 아키텍처를 특징으로 합니다. 이 모델은 다중 언어 지원 및 코드 생성 작업에서 뛰어난 성능을 발휘합니다.\nGrok\nGrok은 xAI에서 개발한 고급 챗봇으로, 유머러스하고 실시간 정보를 제공할 수 있는 독특한 대화 경험을 제공합니다. Grok은 다양한 작업을 수행할 수 있으며, 사용자와의 상호작용에서 높은 만족도를 제공합니다.\nStableLM\nStableLM은 Stability AI에서 개발한 오픈 소스 대형 언어 모델로, 대화 및 코딩 작업에서 뛰어난 성능을 보여줍니다. StableLM은 광범위한 데이터셋을 학습하여 높은 정확도와 효율성을 자랑합니다.\n \n \nLLM 리더보드 ( LLMs 비교 사이트)\nartificialanalysis.ai 의 'LLM 리더보드'에서는 GPT-4o, 라마 3, 미스트랄, 제미니 및 30개 이상의 모델 비교 결과를 확인할 수 있습니다.\n모델별 품질, 가격, 성능, 속도(출력 속도 - 초당 토큰 수 및 지연 시간 - TTFT), 컨텍스트 창 등 주요 지표에 걸쳐 30개 이상의 AI 모델(LLM)의 성능을 비교하고 순위를 매깁니다.\n \n6/26 현재\n싱글 병렬 쿼리, 1,000토큰 기준 성능 순위는 아래와 같습니다. 최근 출시된 클로드 3.5 소네트의 약진이 놀랍습니다.\n\n\n \n\n \nLLM Leaderboard - Compare GPT-4o, Llama 3, Mistral, Gemini & other models | Artificial Analysis\nComparison and ranking the performance of over 30 AI models (LLMs) across key metrics including quality, price, performance and speed (output speed - tokens per second & latency - TTFT), context window & others.\nartificialanalysis.ai\n\n \n결론\n대형 언어 모델은 AI 발전의 핵심 요소로, 다양한 작업에서 혁신을 이끌고 있습니다. 각 모델은 고유한 강점과 특징을 가지고 있어, 특정 용도에 맞는 최적의 모델을 선택하는 것이 중요합니다. 앞으로도 대형 언어 모델의 발전은 계속될 것이며, 이는 우리의 일상과 산업 전반에 걸쳐 긍정적인 영향을 미칠 것입니다.",
        "guid": "http://muzbox.tistory.com/2001",
        "categories": [
          "AI, 미래기술",
          "ai 모델 비교",
          "Gemini",
          "gpt-4",
          "large language models",
          "LLM",
          "palm 2",
          "대형 언어 모델",
          "인공지능",
          "인공지능비교",
          "자연어 처리"
        ],
        "isoDate": "2024-06-26T05:56:29.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": [
      {
        "creator": "늑돌이",
        "title": "SKT, 중저가 5G폰 삼성 갤럭시 와이드7 37만원대 출시",
        "link": "http://lazion.com/2513711",
        "pubDate": "Thu, 27 Jun 2024 13:51:05 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513711#entry2513711comment",
        "content": "<h3 data-ke-size=\"size23\">SK텔레콤이 삼성전자의 중저가 5G폰 <b>갤럭시 와이드7</b>을 출시합니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">갤럭시 와이드 시리즈는 지난 2016년 SKT 전용 스마트폰으로 처음 선보인 후 지금까지 약 340만대가 팔린 SKT의 실속형 라인업입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 와이드7, 가격은?</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"001 - SKT-보도자료SKT-실속파-고객-위한-갤럭시-와이드7-단독-출시_1.jpg\" data-origin-width=\"1060\" data-origin-height=\"685\"><span data-url=\"https://blog.kakaocdn.net/dn/Nqu5X/btsIdNYKLcz/olVqlXiyk92Otgld11rjM0/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/Nqu5X/btsIdNYKLcz/olVqlXiyk92Otgld11rjM0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FNqu5X%2FbtsIdNYKLcz%2FolVqlXiyk92Otgld11rjM0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"001 - SKT-보도자료SKT-실속파-고객-위한-갤럭시-와이드7-단독-출시_1.jpg\" data-origin-width=\"1060\" data-origin-height=\"685\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">중저가 라인업인 이상 가장 중요한 <b>갤럭시 와이드7의 출고가는 37만 4천원</b>입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">6월 26일부터 공식 온라인몰 <a href=\"https://shop.tworld.co.kr/\" target=\"_blank\" rel=\"noopener\">T다이렉트샵</a>과 오프라인 매장 T월드에서 단독 출시합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 와이드7, 특징과 스펙<br /></b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"002 - SKT-보도자료SKT-실속파-고객-위한-갤럭시-와이드7-단독-출시_2.jpg\" data-origin-width=\"1060\" data-origin-height=\"685\"><span data-url=\"https://blog.kakaocdn.net/dn/IsmWf/btsIeGLmgWL/WtXut6fWsnI2akq1KIYgKK/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/IsmWf/btsIeGLmgWL/WtXut6fWsnI2akq1KIYgKK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FIsmWf%2FbtsIeGLmgWL%2FWtXut6fWsnI2akq1KIYgKK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"002 - SKT-보도자료SKT-실속파-고객-위한-갤럭시-와이드7-단독-출시_2.jpg\" data-origin-width=\"1060\" data-origin-height=\"685\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">중저가라도 갤럭시답게 한때 삼성페이로 불렸던 <b>삼성월렛</b>을 지원합니다. 아이들은 별로 좋아하지 않지만 부모는 좋아하는 ZEM 앱도 기본 설치되어 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">스펙에서 특징이랄만한 점은 <b>6,000mAh라는 대용량 배터리</b>와 최대 25W 고속 충전 기능을 갖췄다는 점입니다.</p>\n<p data-ke-size=\"size16\">이 밖에도 6.5인치 FHD+ 슈퍼 아몰레드 패널과 미디어텍 <b>디멘시티 6100+(MT6835V)</b> 프로세서가 내장되어 있습니다. 무게는 217g으로 가볍지는 않네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><a href=\"https://lazion.com/tag/램크루지\" target=\"_blank\" rel=\"noopener\">삼성 제품답게 RAM은 6GB</a>입니다. 저장소는 128GB, 마이크로SD 슬롯도 있습니다. 색상은 다크 블루, 라이트 블루, 그레이가 준비되어 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">정리해 보면 <b>삼성 갤럭시 A15 5G와 매우 닮은 제품</b>입니다. 배터리 용량이 6,000mAh로 늘어난 것을 빼면 많은 부분이 비슷하네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"002 - SKT-보도자료SKT-실속파-고객-위한-갤럭시-와이드7-단독-출시_4.png\" data-origin-width=\"1440\" data-origin-height=\"988\"><span data-url=\"https://blog.kakaocdn.net/dn/bmcB98/btsIeAYDDp4/L9XnwwcN2bCxZGNQkBF5e1/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bmcB98/btsIeAYDDp4/L9XnwwcN2bCxZGNQkBF5e1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbmcB98%2FbtsIeAYDDp4%2FL9XnwwcN2bCxZGNQkBF5e1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"002 - SKT-보도자료SKT-실속파-고객-위한-갤럭시-와이드7-단독-출시_4.png\" data-origin-width=\"1440\" data-origin-height=\"988\"/></span></figure>\n</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(자료 출처 : <a href=\"https://www.sktelecom.com/\" target=\"_blank\" rel=\"noopener\">SK텔레콤</a>)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">관련 글</h4>\n<figure id=\"og_1719463565051\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"삼성전자, 키 아일랜드 디자인의 보급형 갤럭시 A15/A15 5G/A25 5G 베트남에서 발매! 가격은?\" data-og-description=\"삼성전자가 자사의 보급형 스마트폰 제품군인 갤럭시 A15와 갤럭시 A25 5G를 베트남에서 출시했습니다. 갤럭시 A25 5G의 국내 출시 소식도 나왔습니다. 2024.01.04 - 삼성전자, 보급형 갤럭시 A25 5G 국내\" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513505\" data-og-url=\"https://lazion.com/2513505\" data-og-image=\"https://scrap.kakaocdn.net/dn/GvNyr/hyWrU9w57X/8VTSamJ9bZ6j2thul11QS1/img.png?width=800&amp;height=779&amp;face=0_0_800_779,https://scrap.kakaocdn.net/dn/cQtpgc/hyWrYc1nwE/H4aLYSrdz1LGao8C7v7V2K/img.png?width=800&amp;height=779&amp;face=0_0_800_779,https://scrap.kakaocdn.net/dn/bxaSKR/hyWrQlKxL7/Toblopx6Lj0emMvvEsYLxK/img.jpg?width=1600&amp;height=1067&amp;face=0_0_1600_1067\"><a href=\"https://lazion.com/2513505\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513505\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/GvNyr/hyWrU9w57X/8VTSamJ9bZ6j2thul11QS1/img.png?width=800&amp;height=779&amp;face=0_0_800_779,https://scrap.kakaocdn.net/dn/cQtpgc/hyWrYc1nwE/H4aLYSrdz1LGao8C7v7V2K/img.png?width=800&amp;height=779&amp;face=0_0_800_779,https://scrap.kakaocdn.net/dn/bxaSKR/hyWrQlKxL7/Toblopx6Lj0emMvvEsYLxK/img.jpg?width=1600&amp;height=1067&amp;face=0_0_1600_1067');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">삼성전자, 키 아일랜드 디자인의 보급형 갤럭시 A15/A15 5G/A25 5G 베트남에서 발매! 가격은?</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">삼성전자가 자사의 보급형 스마트폰 제품군인 갤럭시 A15와 갤럭시 A25 5G를 베트남에서 출시했습니다. 갤럭시 A25 5G의 국내 출시 소식도 나왔습니다. 2024.01.04 - 삼성전자, 보급형 갤럭시 A25 5G 국내</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<div class=\"notranslate\" style=\"all: initial;\">&nbsp;</div>",
        "contentSnippet": "SK텔레콤이 삼성전자의 중저가 5G폰 갤럭시 와이드7을 출시합니다.\n \n갤럭시 와이드 시리즈는 지난 2016년 SKT 전용 스마트폰으로 처음 선보인 후 지금까지 약 340만대가 팔린 SKT의 실속형 라인업입니다.\n \n갤럭시 와이드7, 가격은?\n \n\n\n \n중저가 라인업인 이상 가장 중요한 갤럭시 와이드7의 출고가는 37만 4천원입니다.\n \n6월 26일부터 공식 온라인몰 T다이렉트샵과 오프라인 매장 T월드에서 단독 출시합니다.\n \n \n갤럭시 와이드7, 특징과 스펙\n\n \n\n\n \n중저가라도 갤럭시답게 한때 삼성페이로 불렸던 삼성월렛을 지원합니다. 아이들은 별로 좋아하지 않지만 부모는 좋아하는 ZEM 앱도 기본 설치되어 있습니다.\n \n스펙에서 특징이랄만한 점은 6,000mAh라는 대용량 배터리와 최대 25W 고속 충전 기능을 갖췄다는 점입니다.\n이 밖에도 6.5인치 FHD+ 슈퍼 아몰레드 패널과 미디어텍 디멘시티 6100+(MT6835V) 프로세서가 내장되어 있습니다. 무게는 217g으로 가볍지는 않네요.\n \n삼성 제품답게 RAM은 6GB입니다. 저장소는 128GB, 마이크로SD 슬롯도 있습니다. 색상은 다크 블루, 라이트 블루, 그레이가 준비되어 있습니다.\n \n정리해 보면 삼성 갤럭시 A15 5G와 매우 닮은 제품입니다. 배터리 용량이 6,000mAh로 늘어난 것을 빼면 많은 부분이 비슷하네요.\n \n\n\n(자료 출처 : SK텔레콤)\n \n관련 글\n\n \n삼성전자, 키 아일랜드 디자인의 보급형 갤럭시 A15/A15 5G/A25 5G 베트남에서 발매! 가격은?\n삼성전자가 자사의 보급형 스마트폰 제품군인 갤럭시 A15와 갤럭시 A25 5G를 베트남에서 출시했습니다. 갤럭시 A25 5G의 국내 출시 소식도 나왔습니다. 2024.01.04 - 삼성전자, 보급형 갤럭시 A25 5G 국내\nlazion.com",
        "guid": "http://lazion.com/2513711",
        "categories": [
          "#더작은모바일/#스마트폰#PDA#PMP",
          "Galaxy",
          "galaxy wide7",
          "mt6835v",
          "News",
          "SKT",
          "smartphone",
          "램크루지"
        ],
        "isoDate": "2024-06-27T04:51:05.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "삼성, 위치 추적 가능한 IoT 신용카드 국내 최초 출시",
        "link": "http://lazion.com/2513710",
        "pubDate": "Thu, 27 Jun 2024 11:32:33 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513710#entry2513710comment",
        "content": "<h3 data-ke-size=\"size23\">삼성전자와 KB국민카드가 <b>IoT 신용카드</b>를 국내 최초로 출시합니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"001 - 삼성전자-기술-모바일-KB국민카드-IoT-신용카드-스마트싱스-파인드-1_web.jpg\" data-origin-width=\"1000\" data-origin-height=\"673\"><span data-url=\"https://blog.kakaocdn.net/dn/UU9AX/btsId9myr2r/CoK0iokUSXJzllpt2r11c1/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/UU9AX/btsId9myr2r/CoK0iokUSXJzllpt2r11c1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FUU9AX%2FbtsId9myr2r%2FCoK0iokUSXJzllpt2r11c1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"001 - 삼성전자-기술-모바일-KB국민카드-IoT-신용카드-스마트싱스-파인드-1_web.jpg\" data-origin-width=\"1000\" data-origin-height=\"673\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>삼성전자 IoT 신용카드란?</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">KB국민카드와 협업하여 내놓은 IoT 신용카드는 <b>저전력 블루투스(BLE, Bluetooth Low Energy)</b> 기술을 활용하는 <b>스마트싱스 파인드(SmartThings Find)</b>를 기반으로 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">스마트싱스 파인드는 갤럭시 스마트폰과 태블릿, 웨어러블, 태그 등 다양한 종류의 삼성 기기의 위치를 확인하는 서비스입니다.</p>\n<p data-ke-size=\"size16\">스마트싱스 파인드가 탑재된 삼성전자 IoT 신용카드는 해당 신용카드를 넣은 지갑의 분실 또는 카드를 둔 장소를 잊어버렸을 경우 신용카드의 국내외 위치를 확인할 수 있습니다. </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>삼성전자 IoT 신용카드로 할 수 있는 일</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">삼성전자 IoT 신용카드의 주요 활용 사례는 다음과 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>국내외 여행 중 IoT 신용카드가 들어있는 지갑이나 가방을 잃어 버렸을 때 위치 확인.</li>\n<li>갤럭시 스마트폰과 BLE 통신 연결이 해제된 마지막 장소나 최근 7일간의 위치 기록 확인.</li>\n<li>IoT 신용카드를 이용해 스마트폰 찾기 가능. 스마트싱스 파인드 서비스에서 찾기 및 알림 기능을 설정해 두면 IoT 신용카드의 하단 버튼을 눌러 스마트폰의 벨소리를 울리게 할 수 있음.</li>\n<li>IoT 신용카드와 연결된 갤럭시 스마트폰과 거리가 멀어지면 앱 푸쉬 알림을 해주고 빅스비(Bixby)를 통해 음성으로 카드 위치를 확인 가능.</li>\n</ul>\n<p data-ke-size=\"size16\"><br />IoT 신용카드는 <b>스마트폰 무선충전기로 충전</b>할 수 있으며, <b>1회 완충 시 약 30일 간 사용</b>할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>삼성전자 IoT 신용카드 발급 방법</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"002 - 삼성전자-기술-모바일-KB국민카드-IoT-신용카드-스마트싱스-파인드-3_web.jpg\" data-origin-width=\"1000\" data-origin-height=\"665\"><span data-url=\"https://blog.kakaocdn.net/dn/c3pprv/btsIeRFxc0t/WZb2QStTH9an6d9IMELJY0/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/c3pprv/btsIeRFxc0t/WZb2QStTH9an6d9IMELJY0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc3pprv%2FbtsIeRFxc0t%2FWZb2QStTH9an6d9IMELJY0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"002 - 삼성전자-기술-모바일-KB국민카드-IoT-신용카드-스마트싱스-파인드-3_web.jpg\" data-origin-width=\"1000\" data-origin-height=\"665\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">IoT 신용카드는 <b>아메리칸 익스프레스(아멕스, American Express) 브랜드의 KB국민 스카이패스 IoT 티타늄 카드로 1천매 선착순 한정 발매</b>되며, 발급 신청은 <b>6월 27일</b>부터 KB국민카드 홈페이지와 KB Pay 앱에서 가능합니다.<br /><br />참고로 삼성전자는 지난해 9월 KB국민카드, 아메리칸 익스프레스는 IoT카드 출시를 위한 업무협약(MOU)을 체결한 바 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">&nbsp;(출처 : <a href=\"https://www.samsung.com/sec/\" target=\"_blank\" rel=\"noopener\">삼성전자</a>)</p>",
        "contentSnippet": "삼성전자와 KB국민카드가 IoT 신용카드를 국내 최초로 출시합니다.\n \n\n\n \n \n삼성전자 IoT 신용카드란?\n \nKB국민카드와 협업하여 내놓은 IoT 신용카드는 저전력 블루투스(BLE, Bluetooth Low Energy) 기술을 활용하는 스마트싱스 파인드(SmartThings Find)를 기반으로 합니다.\n \n스마트싱스 파인드는 갤럭시 스마트폰과 태블릿, 웨어러블, 태그 등 다양한 종류의 삼성 기기의 위치를 확인하는 서비스입니다.\n스마트싱스 파인드가 탑재된 삼성전자 IoT 신용카드는 해당 신용카드를 넣은 지갑의 분실 또는 카드를 둔 장소를 잊어버렸을 경우 신용카드의 국내외 위치를 확인할 수 있습니다. \n \n \n삼성전자 IoT 신용카드로 할 수 있는 일\n \n삼성전자 IoT 신용카드의 주요 활용 사례는 다음과 같습니다.\n \n국내외 여행 중 IoT 신용카드가 들어있는 지갑이나 가방을 잃어 버렸을 때 위치 확인.\n갤럭시 스마트폰과 BLE 통신 연결이 해제된 마지막 장소나 최근 7일간의 위치 기록 확인.\nIoT 신용카드를 이용해 스마트폰 찾기 가능. 스마트싱스 파인드 서비스에서 찾기 및 알림 기능을 설정해 두면 IoT 신용카드의 하단 버튼을 눌러 스마트폰의 벨소리를 울리게 할 수 있음.\nIoT 신용카드와 연결된 갤럭시 스마트폰과 거리가 멀어지면 앱 푸쉬 알림을 해주고 빅스비(Bixby)를 통해 음성으로 카드 위치를 확인 가능.\nIoT 신용카드는 스마트폰 무선충전기로 충전할 수 있으며, 1회 완충 시 약 30일 간 사용할 수 있습니다.\n \n \n삼성전자 IoT 신용카드 발급 방법\n \n\n\n \nIoT 신용카드는 아메리칸 익스프레스(아멕스, American Express) 브랜드의 KB국민 스카이패스 IoT 티타늄 카드로 1천매 선착순 한정 발매되며, 발급 신청은 6월 27일부터 KB국민카드 홈페이지와 KB Pay 앱에서 가능합니다.\n참고로 삼성전자는 지난해 9월 KB국민카드, 아메리칸 익스프레스는 IoT카드 출시를 위한 업무협약(MOU)을 체결한 바 있습니다.\n \n (출처 : 삼성전자)",
        "guid": "http://lazion.com/2513710",
        "categories": [
          "#더작은모바일/#웨어러블#헬스케어#IoT",
          "IOT",
          "iot credit card",
          "News",
          "Samsung",
          "SEC"
        ],
        "isoDate": "2024-06-27T02:32:33.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "갤럭시 언팩  2024 두번째, 7월 10일 프랑스 파리에서 열린다",
        "link": "http://lazion.com/2513709",
        "pubDate": "Wed, 26 Jun 2024 10:06:16 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513709#entry2513709comment",
        "content": "<h3 data-ke-size=\"size23\">삼성전자가 폴더블 스마트폰인 <b>갤럭시 Z 시리즈를 위한 2024년 두번째 갤럭시 언팩 행사는 오는 7월 10일, 프랑스 파리에서 개최</b>합니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"001 - Static-Official-Release-Horizontal-16x9_2560x1440_Lettermark-2048x1152.jpg\" data-origin-width=\"2048\" data-origin-height=\"1152\"><span data-url=\"https://blog.kakaocdn.net/dn/cCzVhU/btsIbxBI0CO/kno8blHUAkGDKLm8xk2MNK/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/cCzVhU/btsIbxBI0CO/kno8blHUAkGDKLm8xk2MNK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcCzVhU%2FbtsIbxBI0CO%2Fkno8blHUAkGDKLm8xk2MNK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"001 - Static-Official-Release-Horizontal-16x9_2560x1440_Lettermark-2048x1152.jpg\" data-origin-width=\"2048\" data-origin-height=\"1152\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번 <b>갤럭시 언팩<b>(Galaxy Unpacked 2024: Galaxy AI is Here)</b> </b> 행사의 테마는 <span style=\"color: #0593d3;\"><b>Galaxy AI Is Here</b></span> 라는 문장으로, <b>갤럭시 AI가 여기에!</b> 정도로 해석할 수 있겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아마도 7월의 폴더블 스마트폰으로 새로 나오는 <b>갤럭시 Z 폴드6</b>(가칭)와 <b>갤럭시 Z 플립6</b>(가칭) 이외에도 갤럭시 AI에 대한 새로운 발표가 있을 것으로 보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그리고 이미 존재를 드러낸 <b>갤럭시 링</b>에 대해서도 더 많은 이야기가 나올 수 있겠네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번 갤럭시 언팩은 <b>2024년 7월 10일 오후 3시(프랑스 파리 현지시간 기준, 한국 기준 오후 10시)</b>에 시작합니다. 시청은 <a href=\"https://www.samsung.com/\" target=\"_blank\" rel=\"noopener\">삼닷컴</a>과 <a href=\"https://news.samsung.com/kr/\" target=\"_blank\" rel=\"noopener\">삼성 뉴스룸</a>, <a href=\"https://www.youtube.com/samsung\" target=\"_blank\" rel=\"noopener\">삼성전자 공식 유튜브 채널</a>을 통해 가능합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=vrQIqgPDw00\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bM9YPI/hyWrNPQsdi/IEpMEyr9wWLu2qSnzk0QG1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Invitation for Galaxy Unpacked July 2024 | Samsung\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/vrQIqgPDw00\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : <a href=\"https://www.samsung.com/us/\" target=\"_blank\" rel=\"noopener\">삼성전자</a>)</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">관련 글</h4>\n<figure id=\"og_1719363783869\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"삼성, 스마트 반지 갤럭시 링 디자인 MWC24에서 최초 공개 전시\" data-og-description=\"삼성전자가 차세대 웨어러블 디바이스인 갤럭시 링(Galaxy Ring)의 디자인을 MWC24에서 최초로 공개 전시했습니다. 스페인 바로셀로나에서 열리고 있는 MWC24 행사를 통해 현지시간 2월 26일 처음으로 \" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513592\" data-og-url=\"https://lazion.com/2513592\" data-og-image=\"https://scrap.kakaocdn.net/dn/t7Oev/hyWrREHELZ/HodTDpnFmOvEp6aLp1X2vk/img.jpg?width=800&amp;height=600&amp;face=0_0_800_600,https://scrap.kakaocdn.net/dn/it8Yj/hyWrY4U5sF/aWwFRsW9bGMdZpzf6nE2lK/img.jpg?width=800&amp;height=600&amp;face=0_0_800_600,https://scrap.kakaocdn.net/dn/XbeDI/hyWoN4179u/MLYkRI2pxUK5mrRPsVths1/img.jpg?width=1000&amp;height=750&amp;face=0_0_1000_750\"><a href=\"https://lazion.com/2513592\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513592\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/t7Oev/hyWrREHELZ/HodTDpnFmOvEp6aLp1X2vk/img.jpg?width=800&amp;height=600&amp;face=0_0_800_600,https://scrap.kakaocdn.net/dn/it8Yj/hyWrY4U5sF/aWwFRsW9bGMdZpzf6nE2lK/img.jpg?width=800&amp;height=600&amp;face=0_0_800_600,https://scrap.kakaocdn.net/dn/XbeDI/hyWoN4179u/MLYkRI2pxUK5mrRPsVths1/img.jpg?width=1000&amp;height=750&amp;face=0_0_1000_750');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">삼성, 스마트 반지 갤럭시 링 디자인 MWC24에서 최초 공개 전시</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">삼성전자가 차세대 웨어러블 디바이스인 갤럭시 링(Galaxy Ring)의 디자인을 MWC24에서 최초로 공개 전시했습니다. 스페인 바로셀로나에서 열리고 있는 MWC24 행사를 통해 현지시간 2월 26일 처음으로</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<figure id=\"og_1719363749852\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"삼성전자, 삼성 헬스 파트너 데이에서 SDK&middot;AI&middot;갤럭시 링 소개\" data-og-description=\"삼성전자가 삼성 헬스 파트너 데이(Samsung Health Partner Day)를 개최했습니다.&nbsp;삼성 헬스(Samsung Health)는 갤럭시 디바이스를 활용한 디지털 헬스 케어 서비스로, 삼성전자의 수많은 갤럭시 스마트폰\" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513679\" data-og-url=\"https://lazion.com/2513679\" data-og-image=\"https://scrap.kakaocdn.net/dn/vmGBZ/hyWoOXbL9v/wRukJtgjQLsDLFRzZRBfi0/img.jpg?width=800&amp;height=513&amp;face=0_0_800_513,https://scrap.kakaocdn.net/dn/brXAxu/hyWoEfVJtt/a9W8C90LnyZLRwWe9qS2S0/img.jpg?width=800&amp;height=513&amp;face=0_0_800_513,https://scrap.kakaocdn.net/dn/bYyzgQ/hyWrMpTnOT/OrEU5UzAh9AN6UkoRcRiCK/img.jpg?width=1700&amp;height=1214&amp;face=531_196_658_334\"><a href=\"https://lazion.com/2513679\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513679\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/vmGBZ/hyWoOXbL9v/wRukJtgjQLsDLFRzZRBfi0/img.jpg?width=800&amp;height=513&amp;face=0_0_800_513,https://scrap.kakaocdn.net/dn/brXAxu/hyWoEfVJtt/a9W8C90LnyZLRwWe9qS2S0/img.jpg?width=800&amp;height=513&amp;face=0_0_800_513,https://scrap.kakaocdn.net/dn/bYyzgQ/hyWrMpTnOT/OrEU5UzAh9AN6UkoRcRiCK/img.jpg?width=1700&amp;height=1214&amp;face=531_196_658_334');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">삼성전자, 삼성 헬스 파트너 데이에서 SDK&middot;AI&middot;갤럭시 링 소개</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">삼성전자가 삼성 헬스 파트너 데이(Samsung Health Partner Day)를 개최했습니다.&nbsp;삼성 헬스(Samsung Health)는 갤럭시 디바이스를 활용한 디지털 헬스 케어 서비스로, 삼성전자의 수많은 갤럭시 스마트폰</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>",
        "contentSnippet": "삼성전자가 폴더블 스마트폰인 갤럭시 Z 시리즈를 위한 2024년 두번째 갤럭시 언팩 행사는 오는 7월 10일, 프랑스 파리에서 개최합니다.\n \n\n\n \n이번 갤럭시 언팩(Galaxy Unpacked 2024: Galaxy AI is Here)  행사의 테마는 Galaxy AI Is Here 라는 문장으로, 갤럭시 AI가 여기에! 정도로 해석할 수 있겠습니다.\n \n아마도 7월의 폴더블 스마트폰으로 새로 나오는 갤럭시 Z 폴드6(가칭)와 갤럭시 Z 플립6(가칭) 이외에도 갤럭시 AI에 대한 새로운 발표가 있을 것으로 보입니다.\n \n그리고 이미 존재를 드러낸 갤럭시 링에 대해서도 더 많은 이야기가 나올 수 있겠네요.\n \n이번 갤럭시 언팩은 2024년 7월 10일 오후 3시(프랑스 파리 현지시간 기준, 한국 기준 오후 10시)에 시작합니다. 시청은 삼닷컴과 삼성 뉴스룸, 삼성전자 공식 유튜브 채널을 통해 가능합니다.\n \n\n\n\n \n \n(출처 : 삼성전자)\n \n \n관련 글\n\n \n삼성, 스마트 반지 갤럭시 링 디자인 MWC24에서 최초 공개 전시\n삼성전자가 차세대 웨어러블 디바이스인 갤럭시 링(Galaxy Ring)의 디자인을 MWC24에서 최초로 공개 전시했습니다. 스페인 바로셀로나에서 열리고 있는 MWC24 행사를 통해 현지시간 2월 26일 처음으로\nlazion.com\n\n\n \n삼성전자, 삼성 헬스 파트너 데이에서 SDK·AI·갤럭시 링 소개\n삼성전자가 삼성 헬스 파트너 데이(Samsung Health Partner Day)를 개최했습니다. 삼성 헬스(Samsung Health)는 갤럭시 디바이스를 활용한 디지털 헬스 케어 서비스로, 삼성전자의 수많은 갤럭시 스마트폰\nlazion.com",
        "guid": "http://lazion.com/2513709",
        "categories": [
          "#더작은모바일/#스마트폰#PDA#PMP",
          "Galaxy AI",
          "Galaxy Ring",
          "Galaxy Unpacked",
          "galaxy z flip6",
          "galaxy z fold6",
          "News",
          "Samsung",
          "SEC",
          "smartphone"
        ],
        "isoDate": "2024-06-26T01:06:16.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "LG디스플레이, 밝고 오래가는 13인치 탠덤 OLED 업계 최초 양산에 성공",
        "link": "http://lazion.com/2513708",
        "pubDate": "Mon, 24 Jun 2024 10:41:03 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513708#entry2513708comment",
        "content": "<h3 data-ke-size=\"size23\"><b>LG디스플레이</b>가 <b>업계 최초</b>로 수명과 밝기를 개선하고 소비전력은 줄인 <b>노트북용 13인치 탠덤(Tandem) OLED 양산</b>에 성공했습니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>탠덤(Tandem) OLED는 무엇?</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"56632.jpg\" data-origin-width=\"826\" data-origin-height=\"620\"><span data-url=\"https://blog.kakaocdn.net/dn/cJXrNs/btsIaG5dm1o/tPVHHyBmbNNjYc0v5dBcsk/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/cJXrNs/btsIaG5dm1o/tPVHHyBmbNNjYc0v5dBcsk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcJXrNs%2FbtsIaG5dm1o%2FtPVHHyBmbNNjYc0v5dBcsk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"56632.jpg\" data-origin-width=\"826\" data-origin-height=\"620\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">지난 2019년 LG디스플레이가 처음으로 상용화에 성공한 탠덤(Tandem) OLED는 <b>레드&middot;그린&middot;블루(RGB) 유기발광층을 2개 층으로 쌓는 방식</b>으로 <b>장수명, 고휘도</b>를 구현, 기존 1개 층인 OLED 패널 대비 내구성과 성능이 뛰어납니다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특히 OLED 소자에 가해지는 에너지를 분산시켜 보다 오랫동안 안정적으로 작동할 수 있어 품질 기준이 까다로운 차량용 OLED에 처음 적용되었으며, <b>노트북</b>, 모니터, <b>태블릿</b> 등 화면 사용 시간이 상대적으로 긴 IT 제품에도 잘 어울립니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고로 노트북 패널에 탠덤 OLED가 적용된 것은 이번이 처음으로, LG디스플레이는 노트북 사용 환경에 맞춘 탠덤 OLED를 새롭게 개발했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>LG디스플레이의 노트북용 탠덤 OLED 패널의 특징</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">LG디스플레이가 업계 최초로 양산을 시작한<b> 13인치 노트북용 탠덤 OLED 패널</b>의 주요 특징은 다음과 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>기존 OLED 패널 대비 <b>수명은 2배, 밝기는 3배</b>까지 향상시킬 수 있고, <b>소비전력은 최대 40% 저감</b> 가능해 일반 노트북뿐 아니라 AI 노트북 등 고성능 IT 기기에도 최적화되어 있습니다.<br /><br /></li>\n<li>부품 설계 및 구조 개선 등을 통해 기존 노트북용 OLED 대비 <b>약 40% 얇아지고, 28% 가벼워져</b> 날렵한 디자인을 구현하고 휴대성을 높일 수 있습니다.<br /><br /></li>\n<li><b>WQXGA+(2880x1800)</b> 고해상도, 디지털영화협회(DCI) 표준 색 영역 <b>DCI-P3를 100% 충족</b>하는 정확한 색 표현력으로 높은 화질을 자랑합니다.<br /><br /></li>\n<li>화소 스스로 빛을 내는 OLED 특유의 무한대의 명암비를 바탕으로 비디오전자공학표준협회(VESA)의 디스플레이 <b>HDR(High Dynamic Range) 트루 블랙 500</b> 기준을 충족합니다.<br /><br /></li>\n<li>터치 센서를 패널 안에 내장, 성능을 높인 고감도 토털 터치 솔루션을 탑재해 정확한 터치감을 구현합니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">LG디스플레이가 이미 양산에 들어간 만큼 조만간 13.3인치 탠덤 OLED 패널을 이용한 노트북이나 태블릿 제품을 만나볼 수 있을 것으로 보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : LG디스플레이)</p>",
        "contentSnippet": "LG디스플레이가 업계 최초로 수명과 밝기를 개선하고 소비전력은 줄인 노트북용 13인치 탠덤(Tandem) OLED 양산에 성공했습니다.\n \n탠덤(Tandem) OLED는 무엇?\n \n\n\n \n지난 2019년 LG디스플레이가 처음으로 상용화에 성공한 탠덤(Tandem) OLED는 레드·그린·블루(RGB) 유기발광층을 2개 층으로 쌓는 방식으로 장수명, 고휘도를 구현, 기존 1개 층인 OLED 패널 대비 내구성과 성능이 뛰어납니다. \n \n특히 OLED 소자에 가해지는 에너지를 분산시켜 보다 오랫동안 안정적으로 작동할 수 있어 품질 기준이 까다로운 차량용 OLED에 처음 적용되었으며, 노트북, 모니터, 태블릿 등 화면 사용 시간이 상대적으로 긴 IT 제품에도 잘 어울립니다.\n \n참고로 노트북 패널에 탠덤 OLED가 적용된 것은 이번이 처음으로, LG디스플레이는 노트북 사용 환경에 맞춘 탠덤 OLED를 새롭게 개발했습니다.\n \n \nLG디스플레이의 노트북용 탠덤 OLED 패널의 특징\n \nLG디스플레이가 업계 최초로 양산을 시작한 13인치 노트북용 탠덤 OLED 패널의 주요 특징은 다음과 같습니다.\n \n기존 OLED 패널 대비 수명은 2배, 밝기는 3배까지 향상시킬 수 있고, 소비전력은 최대 40% 저감 가능해 일반 노트북뿐 아니라 AI 노트북 등 고성능 IT 기기에도 최적화되어 있습니다.\n\n부품 설계 및 구조 개선 등을 통해 기존 노트북용 OLED 대비 약 40% 얇아지고, 28% 가벼워져 날렵한 디자인을 구현하고 휴대성을 높일 수 있습니다.\n\nWQXGA+(2880x1800) 고해상도, 디지털영화협회(DCI) 표준 색 영역 DCI-P3를 100% 충족하는 정확한 색 표현력으로 높은 화질을 자랑합니다.\n\n화소 스스로 빛을 내는 OLED 특유의 무한대의 명암비를 바탕으로 비디오전자공학표준협회(VESA)의 디스플레이 HDR(High Dynamic Range) 트루 블랙 500 기준을 충족합니다.\n\n터치 센서를 패널 안에 내장, 성능을 높인 고감도 토털 터치 솔루션을 탑재해 정확한 터치감을 구현합니다.\n \nLG디스플레이가 이미 양산에 들어간 만큼 조만간 13.3인치 탠덤 OLED 패널을 이용한 노트북이나 태블릿 제품을 만나볼 수 있을 것으로 보입니다.\n \n(출처 : LG디스플레이)",
        "guid": "http://lazion.com/2513708",
        "categories": [
          "#TV#디스플레이#프로젝터",
          "Display",
          "ipad",
          "Laptop",
          "LG Display",
          "News",
          "OLED",
          "tandem oled"
        ],
        "isoDate": "2024-06-24T01:41:03.000Z"
      }
    ]
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": []
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "khris'log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": []
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Hybrid's Notes",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "대용량 AI 실시간 임베딩 데이터를 효율적으로 다루기",
        "link": "https://techblog.lycorp.co.jp/ko/how-to-efficiently-handle-massive-ai-real-time-embedding",
        "pubDate": "Fri, 28 Jun 2024 02:00:00 GMT",
        "content": "안녕하세요. LINE VOOM AI 조직의 서버 개발자 박찬우, 양유성입니다. 이번 글의 제목은 'Massive AI Real-time Embedding을 효율적으로 다루기'입니다...",
        "contentSnippet": "안녕하세요. LINE VOOM AI 조직의 서버 개발자 박찬우, 양유성입니다. 이번 글의 제목은 'Massive AI Real-time Embedding을 효율적으로 다루기'입니다...",
        "guid": "https://techblog.lycorp.co.jp/ko/how-to-efficiently-handle-massive-ai-real-time-embedding",
        "isoDate": "2024-06-28T02:00:00.000Z"
      },
      {
        "title": "LINE 클라이언트 개발자들이 만드는 '코드 리뷰 문화'",
        "link": "https://techblog.lycorp.co.jp/ko/code-review-culture-of-line-client-developers",
        "pubDate": "Mon, 24 Jun 2024 02:00:00 GMT",
        "content": "LINE 개발 조직에서는 성숙한 개발 문화를 만들기 위해 다양한 시도를 하고 있습니다. 클라이언트 앱 품질을 향상시키기 위해 개발 프로세스를 개선하고 있는 LY Mobile Dev...",
        "contentSnippet": "LINE 개발 조직에서는 성숙한 개발 문화를 만들기 위해 다양한 시도를 하고 있습니다. 클라이언트 앱 품질을 향상시키기 위해 개발 프로세스를 개선하고 있는 LY Mobile Dev...",
        "guid": "https://techblog.lycorp.co.jp/ko/code-review-culture-of-line-client-developers",
        "isoDate": "2024-06-24T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": [
      {
        "title": "뱅크샐러드의 새로운 집(Home) 짓기 - 1편 | 기초공사",
        "link": "https://blog.banksalad.com/tech/building-brand-new-home-1/",
        "pubDate": "Wed, 26 Jun 2024 00:00:00 GMT",
        "content": "이제는 여러 사용자분들이 익숙해지셨을 뱅크샐러드의 홈 화면,\n\n그렇지만 2년 전의 뱅크샐러드에는 놀랍게도 ‘홈’이 없었다. 지금으로부터 2년 전인 202…",
        "contentSnippet": "이제는 여러 사용자분들이 익숙해지셨을 뱅크샐러드의 홈 화면,\n\n그렇지만 2년 전의 뱅크샐러드에는 놀랍게도 ‘홈’이 없었다. 지금으로부터 2년 전인 202…",
        "guid": "https://blog.banksalad.com/tech/building-brand-new-home-1/",
        "isoDate": "2024-06-26T00:00:00.000Z"
      },
      {
        "title": "뱅크샐러드의 새로운 집(Home) 짓기 - 3편 | 증축편",
        "link": "https://blog.banksalad.com/tech/building-brand-new-home-3/",
        "pubDate": "Wed, 26 Jun 2024 00:00:00 GMT",
        "content": "5. 출시 다음에는 ‘개선과 운영’ 홈탭을 출시하는 과정에서 팀 내에 많은 변동이 있었다. 커리어 개발・창업・이민 준비 등 다양한 이유로 팀원들은 회사를 떠났다. 초기 기획을 함께 이끌어주던 디자이너 동료도 떠나게 되었고, PM…",
        "contentSnippet": "5. 출시 다음에는 ‘개선과 운영’ 홈탭을 출시하는 과정에서 팀 내에 많은 변동이 있었다. 커리어 개발・창업・이민 준비 등 다양한 이유로 팀원들은 회사를 떠났다. 초기 기획을 함께 이끌어주던 디자이너 동료도 떠나게 되었고, PM…",
        "guid": "https://blog.banksalad.com/tech/building-brand-new-home-3/",
        "isoDate": "2024-06-26T00:00:00.000Z"
      },
      {
        "title": "뱅크샐러드의 새로운 집(Home) 짓기 - 2편 | 완공편",
        "link": "https://blog.banksalad.com/tech/building-brand-new-home-2/",
        "pubDate": "Wed, 26 Jun 2024 00:00:00 GMT",
        "content": "4. 홈 어떤 과정으로 만들어졌나 4-…",
        "contentSnippet": "4. 홈 어떤 과정으로 만들어졌나 4-…",
        "guid": "https://blog.banksalad.com/tech/building-brand-new-home-2/",
        "isoDate": "2024-06-26T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "이한",
    "category": "개인",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": [
      {
        "creator": "호돌맨",
        "title": "Next.js 서버 실행시 host가 private ip로 bind되는 경우",
        "link": "https://hodolman.com/60",
        "pubDate": "Thu, 27 Jun 2024 10:45:49 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.com/60#entry60comment",
        "content": "<h2>문제</h2>\n<p>Next.js는 애플리케이션을 실행(<code>next start</code>)하면 host가 127.0.0.1로 bind된다. 따라서 브라우저에 <code>http://127.0.0.1</code>을 입력하면 내가 만든 프론트 페이지로 이동할 수 있다. 또는 <code>/etc/hosts</code>에 localhost가 등록되어 있다면 <code>http://localhost</code>로 접속하는 것도 가능하다.</p>\n<p><figure class=\"imageblock alignCenter\" width=\"100%\"><span data-url=\"https://blog.kakaocdn.net/dn/b2w7Zy/btsIgO9KIBf/HN1qVAjhb2MKbMVaj3daa1/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/b2w7Zy/btsIgO9KIBf/HN1qVAjhb2MKbMVaj3daa1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb2w7Zy%2FbtsIgO9KIBf%2FHN1qVAjhb2MKbMVaj3daa1%2Fimg.png\" width=\"100%\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\"/></span></figure>\n</p>\n<p>그런데 Next.js 특정버전 이상부터 (v13.4.7 이상으로 추정) 애플리케이션 실행 시 host가 <code>192.168.x.x</code>과 같은 private ip로 bind되는 문제가 발생한다. 내부적으로 서버 실행 시 hostname 가져오는 방법이 달라진 것 같다. (소스 찾아봤는데 까먹음) 로컬에서 개발할 때야 <code>http://192.168.0.x..</code>로 접속해서 한다 쳐도 운영환경에서는 private ipadress가 얼마든지 달라질 수 있다.</p>\n<p>운영 환경에서는 PM2를 사용해 Next.js를 띄우고 앞단에서 Nginx Proxy Pass 방식을 사용하고 있다. Nginx 설정에서 upstream의 ip주소를 <code>127.0.0.1:3000</code>로 하면 Next.js는 <code>192.168.x.x</code>로 실행되고 있기 때문에 접속이 불가능하여 500에러가 발생한다. 이제는 Nginx의 upstream ip주소를 <code>192.168.x.x</code>와 같은 형태로 바꿔줘야 하지만 private ip주소는 고정값이 아니기 때문에 장담할 수 없는 문제가 있다.</p>\n<h2>해결</h2>\n<p>PM2의 ecosystem.config.js에서 HOST값을 바꿔줄 수 있다.</p>\n<pre><code>module.exports = {\n    apps: [\n        {\n            name: &#39;...&#39;,\n            exec_mode: &#39;cluster&#39;,\n            instances: &#39;1&#39;,\n            script: `${__dirname}/server.js`,\n            env: {\n                &quot;PORT&quot;: &quot;3000&quot;,\n                &quot;HOSTNAME&quot;: &quot;127.0.0.1&quot;\n            }\n        },\n    ],\n}</code></pre><h2>의문점</h2>\n<p>Next.js에서 특정 케이스에서만 private ip로 애플리케이션을 실행할 것 같은데, 소스를 다시 한 번 찾아봐야겠다.</p>",
        "contentSnippet": "문제\nNext.js는 애플리케이션을 실행(next start)하면 host가 127.0.0.1로 bind된다. 따라서 브라우저에 http://127.0.0.1을 입력하면 내가 만든 프론트 페이지로 이동할 수 있다. 또는 /etc/hosts에 localhost가 등록되어 있다면 http://localhost로 접속하는 것도 가능하다.\n\n\n그런데 Next.js 특정버전 이상부터 (v13.4.7 이상으로 추정) 애플리케이션 실행 시 host가 192.168.x.x과 같은 private ip로 bind되는 문제가 발생한다. 내부적으로 서버 실행 시 hostname 가져오는 방법이 달라진 것 같다. (소스 찾아봤는데 까먹음) 로컬에서 개발할 때야 http://192.168.0.x..로 접속해서 한다 쳐도 운영환경에서는 private ipadress가 얼마든지 달라질 수 있다.\n운영 환경에서는 PM2를 사용해 Next.js를 띄우고 앞단에서 Nginx Proxy Pass 방식을 사용하고 있다. Nginx 설정에서 upstream의 ip주소를 127.0.0.1:3000로 하면 Next.js는 192.168.x.x로 실행되고 있기 때문에 접속이 불가능하여 500에러가 발생한다. 이제는 Nginx의 upstream ip주소를 192.168.x.x와 같은 형태로 바꿔줘야 하지만 private ip주소는 고정값이 아니기 때문에 장담할 수 없는 문제가 있다.\n해결\nPM2의 ecosystem.config.js에서 HOST값을 바꿔줄 수 있다.\nmodule.exports = {\n    apps: [\n        {\n            name: '...',\n            exec_mode: 'cluster',\n            instances: '1',\n            script: `${__dirname}/server.js`,\n            env: {\n                \"PORT\": \"3000\",\n                \"HOSTNAME\": \"127.0.0.1\"\n            }\n        },\n    ],\n}\n의문점\nNext.js에서 특정 케이스에서만 private ip로 애플리케이션을 실행할 것 같은데, 소스를 다시 한 번 찾아봐야겠다.",
        "guid": "https://hodolman.com/60",
        "categories": [
          "개발/Frontend",
          "hostname",
          "Next.js",
          "Private IP"
        ],
        "isoDate": "2024-06-27T01:45:49.000Z"
      },
      {
        "creator": "호돌맨",
        "title": "광명찾는 Intellij vmoption 설정 값",
        "link": "https://hodolman.com/59",
        "pubDate": "Mon, 24 Jun 2024 10:17:29 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.com/59#entry59comment",
        "content": "<h2 data-ke-size=\"size26\">Intellij vmoption</h2>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>Zulu JDK 17버젼 사용중.</li>\n<li>Intellij 프로젝트 3~5개에서 자바 애플리케이션 6개정도 띄워놓는 게 일반적</li>\n<li>이 전에는 컴퓨타가 너무 버벅여서 작업하기가 너무 힘들었음</li>\n<li>아래 값으로 개발환경 광명찾음</li>\n<li>단 한번도 Intellij가 버벅이지 않음</li>\n</ul>\n<pre class=\"routeros\"><code>-ea\n-server\n-Xms1024m\n-Xmx5120m\n-Xss256k\n-XX:+UnlockExperimentalVMOptions\n-XX:-UseSerialGC\n-XX:-UseParallelGC\n-XX:-UseG1GC\n-XX:+UseZGC\n-XX:+IgnoreUnrecognizedVMOptions\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n-XX:ReservedCodeCacheSize=512m\n-XX:SoftRefLRUPolicyMSPerMB=50\n-XX:+UseStringCache\n-XX:+UseStringDeduplication\n-XX:+AggressiveOpts\n-XX:+AlwaysPreTouch\n-XX:+OptimizeStringConcat\n-XX:+UseFastAccessorMethods\n-Dide.no.platform.update=true\n-Djava.net.preferIPv4Stack=true\n-Djdk.attach.allowAttachSelf=true\n-Djdk.module.illegalAccess.silent=true\n-Dkotlinx.coroutines.debug=off\n-Dsun.io.useCanonCaches=false\n-Dsun.java2d.d3d=false\n-Dsun.java2d.metal=true\n-Dsun.java2d.opengl=false\n-Dsun.tools.attach.tmp.only=true\n-Dsun.awt.mac.a11y.enabled=false\n--add-exports=java.desktop/com.apple.eawt.event=ALL-UNNAMED\n--add-exports=java.desktop/com.apple.eawt=ALL-UNNAMED\n--add-exports=java.desktop/com.apple.laf=ALL-UNNAMED\n--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED\n--add-exports=java.desktop/sun.font=ALL-UNNAMED\n--add-opens=java.base/java.io=ALL-UNNAMED\n--add-opens=java.base/java.lang.reflect=ALL-UNNAMED\n--add-opens=java.base/java.lang=ALL-UNNAMED\n--add-opens=java.base/java.net=ALL-UNNAMED\n--add-opens=java.base/java.nio.charset=ALL-UNNAMED\n--add-opens=java.base/java.text=ALL-UNNAMED\n--add-opens=java.base/java.time=ALL-UNNAMED\n--add-opens=java.base/java.util.concurrent=ALL-UNNAMED\n--add-opens=java.base/java.util=ALL-UNNAMED\n--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED\n--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED\n--add-opens=java.base/jdk.internal.vm=ALL-UNNAMED\n--add-opens=java.base/sun.nio.ch=ALL-UNNAMED\n--add-opens=java.desktop/com.apple.eawt.event=ALL-UNNAMED\n--add-opens=java.desktop/com.apple.eawt=ALL-UNNAMED\n--add-opens=java.desktop/com.apple.laf=ALL-UNNAMED\n--add-opens=java.desktop/java.awt.dnd.peer=ALL-UNNAMED\n--add-opens=java.desktop/java.awt.event=ALL-UNNAMED\n--add-opens=java.desktop/java.awt.image=ALL-UNNAMED\n--add-opens=java.desktop/java.awt.peer=ALL-UNNAMED\n--add-opens=java.desktop/java.awt=ALL-UNNAMED\n--add-opens=java.desktop/javax.swing.plaf.basic=ALL-UNNAMED\n--add-opens=java.desktop/javax.swing.text.html=ALL-UNNAMED\n--add-opens=java.desktop/javax.swing=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt.datatransfer=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt.image=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt.windows=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt.X11=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt=ALL-UNNAMED\n--add-opens=java.desktop/sun.font=ALL-UNNAMED\n--add-opens=java.desktop/sun.java2d=ALL-UNNAMED\n--add-opens=java.desktop/sun.lwawt.macosx=ALL-UNNAMED\n--add-opens=java.desktop/sun.lwawt=ALL-UNNAMED\n--add-opens=java.desktop/sun.swing=ALL-UNNAMED\n--add-opens=jdk.attach/sun.tools.attach=ALL-UNNAMED\n&mdash;add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED\n&mdash;add-opens=jdk.jdi/com.sun.tools.jdi=ALL-UNNAMED\n-Dide.managed.by.toolbox=/Applications/JetBrains Toolbox.app/Contents/MacOS/jetbrains-toolbox\n-Dtoolbox.notification.token=96384ae9-2756-497b-8309-23240f1e3002\n-Dtoolbox.notification.portFile=/Users/hodolman/Library/Caches/JetBrains/Toolbox/ports/1732101961.port</code></pre>",
        "contentSnippet": "Intellij vmoption\nZulu JDK 17버젼 사용중.\nIntellij 프로젝트 3~5개에서 자바 애플리케이션 6개정도 띄워놓는 게 일반적\n이 전에는 컴퓨타가 너무 버벅여서 작업하기가 너무 힘들었음\n아래 값으로 개발환경 광명찾음\n단 한번도 Intellij가 버벅이지 않음\n-ea\n-server\n-Xms1024m\n-Xmx5120m\n-Xss256k\n-XX:+UnlockExperimentalVMOptions\n-XX:-UseSerialGC\n-XX:-UseParallelGC\n-XX:-UseG1GC\n-XX:+UseZGC\n-XX:+IgnoreUnrecognizedVMOptions\n-XX:+HeapDumpOnOutOfMemoryError\n-XX:-OmitStackTraceInFastThrow\n-XX:ReservedCodeCacheSize=512m\n-XX:SoftRefLRUPolicyMSPerMB=50\n-XX:+UseStringCache\n-XX:+UseStringDeduplication\n-XX:+AggressiveOpts\n-XX:+AlwaysPreTouch\n-XX:+OptimizeStringConcat\n-XX:+UseFastAccessorMethods\n-Dide.no.platform.update=true\n-Djava.net.preferIPv4Stack=true\n-Djdk.attach.allowAttachSelf=true\n-Djdk.module.illegalAccess.silent=true\n-Dkotlinx.coroutines.debug=off\n-Dsun.io.useCanonCaches=false\n-Dsun.java2d.d3d=false\n-Dsun.java2d.metal=true\n-Dsun.java2d.opengl=false\n-Dsun.tools.attach.tmp.only=true\n-Dsun.awt.mac.a11y.enabled=false\n--add-exports=java.desktop/com.apple.eawt.event=ALL-UNNAMED\n--add-exports=java.desktop/com.apple.eawt=ALL-UNNAMED\n--add-exports=java.desktop/com.apple.laf=ALL-UNNAMED\n--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED\n--add-exports=java.desktop/sun.font=ALL-UNNAMED\n--add-opens=java.base/java.io=ALL-UNNAMED\n--add-opens=java.base/java.lang.reflect=ALL-UNNAMED\n--add-opens=java.base/java.lang=ALL-UNNAMED\n--add-opens=java.base/java.net=ALL-UNNAMED\n--add-opens=java.base/java.nio.charset=ALL-UNNAMED\n--add-opens=java.base/java.text=ALL-UNNAMED\n--add-opens=java.base/java.time=ALL-UNNAMED\n--add-opens=java.base/java.util.concurrent=ALL-UNNAMED\n--add-opens=java.base/java.util=ALL-UNNAMED\n--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED\n--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED\n--add-opens=java.base/jdk.internal.vm=ALL-UNNAMED\n--add-opens=java.base/sun.nio.ch=ALL-UNNAMED\n--add-opens=java.desktop/com.apple.eawt.event=ALL-UNNAMED\n--add-opens=java.desktop/com.apple.eawt=ALL-UNNAMED\n--add-opens=java.desktop/com.apple.laf=ALL-UNNAMED\n--add-opens=java.desktop/java.awt.dnd.peer=ALL-UNNAMED\n--add-opens=java.desktop/java.awt.event=ALL-UNNAMED\n--add-opens=java.desktop/java.awt.image=ALL-UNNAMED\n--add-opens=java.desktop/java.awt.peer=ALL-UNNAMED\n--add-opens=java.desktop/java.awt=ALL-UNNAMED\n--add-opens=java.desktop/javax.swing.plaf.basic=ALL-UNNAMED\n--add-opens=java.desktop/javax.swing.text.html=ALL-UNNAMED\n--add-opens=java.desktop/javax.swing=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt.datatransfer=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt.image=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt.windows=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt.X11=ALL-UNNAMED\n--add-opens=java.desktop/sun.awt=ALL-UNNAMED\n--add-opens=java.desktop/sun.font=ALL-UNNAMED\n--add-opens=java.desktop/sun.java2d=ALL-UNNAMED\n--add-opens=java.desktop/sun.lwawt.macosx=ALL-UNNAMED\n--add-opens=java.desktop/sun.lwawt=ALL-UNNAMED\n--add-opens=java.desktop/sun.swing=ALL-UNNAMED\n--add-opens=jdk.attach/sun.tools.attach=ALL-UNNAMED\n—add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED\n—add-opens=jdk.jdi/com.sun.tools.jdi=ALL-UNNAMED\n-Dide.managed.by.toolbox=/Applications/JetBrains Toolbox.app/Contents/MacOS/jetbrains-toolbox\n-Dtoolbox.notification.token=96384ae9-2756-497b-8309-23240f1e3002\n-Dtoolbox.notification.portFile=/Users/hodolman/Library/Caches/JetBrains/Toolbox/ports/1732101961.port",
        "guid": "https://hodolman.com/59",
        "categories": [
          "개발/Linux,Server"
        ],
        "isoDate": "2024-06-24T01:17:29.000Z"
      }
    ]
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": [
      {
        "title": "결함과 부분 장애",
        "link": "https://velog.io/@ahngj96/%EA%B2%B0%ED%95%A8%EA%B3%BC-%EB%B6%80%EB%B6%84-%EC%9E%A5%EC%95%A0",
        "pubDate": "Sun, 30 Jun 2024 09:36:41 GMT",
        "content": "<p>단일 컴퓨터에서 실행되는 소프트웨어를 믿지 못할 근본적인 이유는 없다. 하드웨어가 올바르게 동작하면 같은 연산은 항상 같은 결과를 낸다(결정적이다).</p>\n<p>네트워크로 연결된 여러 컴퓨터에서 실행되는 소프트웨어를 작성할 때는 근본적으로 상황이 다르다. 분산 시스템에서는 더 이상 이상화된 시스템 모델에서 동작하지 않는다. 물리적 세계의 지저분한 현실(스위치 장애, 랙에서 주기적으로 일어나는 전원 사고, 데이터 센터 건물에 돌진하는 픽업 트럭 등)을 마주하게 된다.</p>\n<p>분산 시스템에서는 시스템의 어떤 부분은 잘 동작하지만 다른 부분은 예측할 수 없는 방식으로 고장 나는 것도 무리가 아니다. 이를 <strong>부분 장애</strong>라고 한다. 부분 장애는 <strong>비결정적</strong>이라서 어렵다.</p>\n<h1 id=\"클라우드-컴퓨팅과-슈퍼컴퓨팅\">클라우드 컴퓨팅과 슈퍼컴퓨팅</h1>\n<p>대규모 컴퓨팅 시스템 구축 방법에 관한 몇 가지 철학이 있다</p>\n<ul>\n<li>대규모 컴퓨팅의 한쪽 끝에는 고성능 컴퓨팅(high-performance computing, HPC) 분야가 있다. 수천 개의 CPU를 가진 슈퍼컴퓨터는 보통 일기예보나 원자와 분자의 움직임을 시뮬레이션하는 분자 동력학처럼 계산 비용이 매우 높은 과학 계산 작업에 쓰인다</li>\n<li>다른 극단에는 클라우드 컴퓨팅이 있다. 명확히 정의되지는 않지만 <a href=\"https://www.redhat.com/ko/topics/cloud-computing/what-is-multitenancy\">멀티 테넌트</a>(<a href=\"https://www.ibm.com/kr-ko/topics/multi-tenant\">참고</a>) 데이터센터, IP 네트워크로 연결된 상용 컴퓨터, 신축적/주문식 자원 할당, 계량 결제와 흔히 관려돼 있다.</li>\n<li>전통적인 기업형 데이터센터는 이 두 극단의 중간 지점에 있다.</li>\n</ul>\n<p>이런 철학에 따라 결함 처리 방법도 매우 다르다.</p>\n<p>슈퍼컴퓨터는 시스템의 어느 부분에 장애가 발생하면 단일 장바에서의 커널 패닉처럼 그냥 전체가 죽게 한다.</p>\n<p>인터넷 서비스를 구현하는 시스템은 보통 슈퍼컴퓨너와 매우 다르다.</p>\n<ul>\n<li>여러 인터넷 관련 애플리케이션은 언제라도 사용자에게 지연 시간이 낮은 서비스를 제공해야 한다. 반면 슈퍼컴퓨터는 오프라인 작업으로 멈췄다 재시작해도 인터넷 애플리케이션보다 충격이 덜하다.</li>\n<li>슈퍼컴퓨터는 전형적으로 특화된 하드웨어를 사용한다. 반면 클라우드 서비스의 노드는 사용 장비를 사용한다.</li>\n<li>거대한 데이터센터의 네트워크는 <a href=\"https://howdoesinternetwork.com/2019/clos-topology\">클로스 토폴로지</a>로 연결돼 있다. 슈퍼컴퓨터는 통신 패턴이 정해진 작업부하에서 높은 성능을 보여주는 <a href=\"https://en.wikipedia.org/wiki/Hypercube_internetwork_topology\">다차원 매시</a>나 <a href=\"https://en.wikipedia.org/wiki/Torus_interconnect\">토러스</a> 같은 특화된 네트워크 토폴로지를 자주 사용한다.</li>\n<li>클라우드 환경에서 가상 장비 하나의 성능이 좋지 않으면 그냥 그것을 죽이고 새 가상 장비를 요청할 수 있다.</li>\n<li>지리적으로 분산된 배포를 할 때 통신은 대부분 인터넷을 거치기 쉬운데 로컬 네트워크에 비해 느리고 신뢰성도 떨어진다. 슈퍼컴퓨터는 일반적으로 모든 노드가 가까운 곳에 함께 있다고 가정한다.</li>\n</ul>\n<blockquote>\n<p>분산 시스템이 동작하게 만들려면 부분 장애 가능성을 받아들이고 소프트웨어에 내결함성 메커니즘을 넣어야 한다.\n결함 처리는 소프트웨어 설계의 일부여야 하며 결함이 발생하면 소프트웨어가 어떻게 동작할지 알아야 한다.</p>\n</blockquote>\n<h2 id=\"reference\">Reference</h2>\n<p>데이터 중심 애플리케이션 설계 8장 분산 시스템의 골칫거리</p>\n",
        "contentSnippet": "단일 컴퓨터에서 실행되는 소프트웨어를 믿지 못할 근본적인 이유는 없다. 하드웨어가 올바르게 동작하면 같은 연산은 항상 같은 결과를 낸다(결정적이다).\n네트워크로 연결된 여러 컴퓨터에서 실행되는 소프트웨어를 작성할 때는 근본적으로 상황이 다르다. 분산 시스템에서는 더 이상 이상화된 시스템 모델에서 동작하지 않는다. 물리적 세계의 지저분한 현실(스위치 장애, 랙에서 주기적으로 일어나는 전원 사고, 데이터 센터 건물에 돌진하는 픽업 트럭 등)을 마주하게 된다.\n분산 시스템에서는 시스템의 어떤 부분은 잘 동작하지만 다른 부분은 예측할 수 없는 방식으로 고장 나는 것도 무리가 아니다. 이를 부분 장애라고 한다. 부분 장애는 비결정적이라서 어렵다.\n클라우드 컴퓨팅과 슈퍼컴퓨팅\n대규모 컴퓨팅 시스템 구축 방법에 관한 몇 가지 철학이 있다\n대규모 컴퓨팅의 한쪽 끝에는 고성능 컴퓨팅(high-performance computing, HPC) 분야가 있다. 수천 개의 CPU를 가진 슈퍼컴퓨터는 보통 일기예보나 원자와 분자의 움직임을 시뮬레이션하는 분자 동력학처럼 계산 비용이 매우 높은 과학 계산 작업에 쓰인다\n다른 극단에는 클라우드 컴퓨팅이 있다. 명확히 정의되지는 않지만 멀티 테넌트(참고) 데이터센터, IP 네트워크로 연결된 상용 컴퓨터, 신축적/주문식 자원 할당, 계량 결제와 흔히 관려돼 있다.\n전통적인 기업형 데이터센터는 이 두 극단의 중간 지점에 있다.\n이런 철학에 따라 결함 처리 방법도 매우 다르다.\n슈퍼컴퓨터는 시스템의 어느 부분에 장애가 발생하면 단일 장바에서의 커널 패닉처럼 그냥 전체가 죽게 한다.\n인터넷 서비스를 구현하는 시스템은 보통 슈퍼컴퓨너와 매우 다르다.\n여러 인터넷 관련 애플리케이션은 언제라도 사용자에게 지연 시간이 낮은 서비스를 제공해야 한다. 반면 슈퍼컴퓨터는 오프라인 작업으로 멈췄다 재시작해도 인터넷 애플리케이션보다 충격이 덜하다.\n슈퍼컴퓨터는 전형적으로 특화된 하드웨어를 사용한다. 반면 클라우드 서비스의 노드는 사용 장비를 사용한다.\n거대한 데이터센터의 네트워크는 클로스 토폴로지로 연결돼 있다. 슈퍼컴퓨터는 통신 패턴이 정해진 작업부하에서 높은 성능을 보여주는 다차원 매시나 토러스 같은 특화된 네트워크 토폴로지를 자주 사용한다.\n클라우드 환경에서 가상 장비 하나의 성능이 좋지 않으면 그냥 그것을 죽이고 새 가상 장비를 요청할 수 있다.\n지리적으로 분산된 배포를 할 때 통신은 대부분 인터넷을 거치기 쉬운데 로컬 네트워크에 비해 느리고 신뢰성도 떨어진다. 슈퍼컴퓨터는 일반적으로 모든 노드가 가까운 곳에 함께 있다고 가정한다.\n분산 시스템이 동작하게 만들려면 부분 장애 가능성을 받아들이고 소프트웨어에 내결함성 메커니즘을 넣어야 한다.\n결함 처리는 소프트웨어 설계의 일부여야 하며 결함이 발생하면 소프트웨어가 어떻게 동작할지 알아야 한다.\nReference\n데이터 중심 애플리케이션 설계 8장 분산 시스템의 골칫거리",
        "guid": "https://velog.io/@ahngj96/%EA%B2%B0%ED%95%A8%EA%B3%BC-%EB%B6%80%EB%B6%84-%EC%9E%A5%EC%95%A0",
        "isoDate": "2024-06-30T09:36:41.000Z"
      }
    ]
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "반짝 유행과 대세",
        "link": "https://www.thestartupbible.com/2024/07/hype-or-mainstream.html",
        "pubDate": "Sun, 30 Jun 2024 21:30:00 +0000",
        "content:encodedSnippet": "얼마 전에 ‘요즘 애들’이라는 책을 읽었다. 이 책의 부제는 “가장 학력은 높고, 가장 많이 일하지만, 가장 적게 버는 세대”인데, MZ 세대에 대한 책이고, 시중에 나온 수많은 비슷한 책과 같이 MZ 세대는 이렇다 저렇다는 표면적인 이야기보단, 작가는 왜 MZ 세대가 가장 공부는 많이 하고, 가장 열심히 일하지만, 가장 적게 버는지를 어느 정도까지 분석하고 과학적으로 설명하려고 시도한다. 솔직히 말해서 이 책의 내용에 나는 대부분 공감할 수 없었는데, 어쨌든 요즘 애들도 우리와 비슷하게 본인들만의 어려움이 있는 것 같다.\nMZ 세대의 대표적인 특징이 평균을 싫어하고, 자기만의 독특한 개성을 중시하고, 뭔가 항상 새로운 걸 시도하는 것 같다. 이런 이유로 남이 하면 따라 하고, 남이 좋아하면 나도 좋아하는 우리 세대한테 잘 어필되고 판매되던 상품과 브랜드가 더 이상 빛을 못 보고 있다. 새로운 세대에게 잘 마케팅하고 판매하기 위해서 기존 브랜드는 과거 수십 년 동안 잘 작동하던 전략을 버리고 있고, 신생 브랜드는 지금까지 없던 방식과 전략으로 새로운 실험을 계속하고 있다.\n며칠 전에 운동하면서 잠깐 TV를 봤는데, 성수동 팝업 매장에서 다른 산업군의 브랜드와 콜라보를 계속하는 의류 브랜드를 구입하기 위해서 사람들이 아주 길게 줄을 서고 있는 광경이 보였다. 나는 처음 들어보는 브랜드였는데, “브랜드 x 다른 브랜드” 식으로 신발부터 옷까지 다양한 패션 아이템을 소량으로 출시하는 전략을 구사하는 회사였고, 젊은 친구들이 매장 밖에 긴 줄을 형성하면서 이 가게 안에 들어가서 즐겁고 비싼 쇼핑을 하는 뉴스 내용이었다.\n기자가 매장 직원도 인터뷰하고, 젊은 커플 고객도 인터뷰했는데, 양쪽 다 하는 말이 비슷했다. MZ 세대는 기성세대와는 다르게 트렌드에 상당히 민감하기 때문에, 이들에게 주목받고, 이들의 지갑을 열기 위해서는 지금까지의 영업/마케팅 방법을 과감하게 버리고, 완전히 새로운 방식으로, 그리고 이 새로운 방식조차 지속적으로 변형하면서 이들을 공략해야 한다는 내용이었다.\n우리도 다양한 사업, 그리고 다양한 사람들을 만난다. 창업가들의 나이는 점점 더 어려지고 있어서 우리가 만나는 많은 창업가들이 MZ 세대인데, 이들이 트렌드에 민감하고, 새로운 걸 좋아하고, 나 같은 세대의 사람들과는 모든 걸 다르게 보는 건 나도 잘 알고 있다. 하지만, 그렇다고 모든 회사가 이들의 취향에 모든 전략을 맞출 필요는 전혀 없다고 생각한다. 오히려 그렇게 하면 수십 년 동안 잘하던 사업의 기반이 흔들릴 것이라고 생각한다.\n일단 트렌드에 민감하다는 말을 조금 더 깊게 해석해 보면, 너무 유행을 탄다는 의미가 될 수도 있다. 유행을 타는 고객들은 브랜드에 대한 충성도가 없기 때문에, 이들에게 지속적으로 사랑받고 아주 오랜 기간 동안 꾸준하게 돈을 쓰게 만드는 게 힘들다. 트렌드를 세팅하고 리딩하는 세대일 수도 있지만, 어떻게 보면 사업의 확장에는 도움이 안 되는 대규모 뜨내기 세대가 될 수도 있다. 그리고 이 글의 오프닝에서 썼듯이, MZ 세대는 전반적으로 돈이 별로 없다. 소셜미디어상에서는 파급력이 강할진 몰라도, 막상 구매력이 그렇게 어마어마하진 않다.\n어떤 분들은 2년 반짝 사업을 성장시키고 적당한 가격에 팔고 빠질 목적으로 창업하지만, 내가 아는 대부분의 창업가들은 지속 가능한 사업을 만들고 있고, 지속 가능한 사업은 최소 10년이 걸린다. 이렇게 장기적인 안목으로 사업을 할 때, 반짝 유행하다가 없어질 것들과 지속적으로 유행해서 대세가 될 것들을 잘 구분해야 한다.\n유행과 대세를 어떻게 구분할까? 구분할 수 있는 방법은 없다. 그냥 장기적인 방향을 정하고, 이쪽으로 꾸준히 가는 수밖에 없다. 중간 중간에 여러 가지 트렌드와 새로운 유행이 생길 것인데, 그때마다 아무 생각 없이 남들이 가는 쪽으로 방향을 틀지 말고, 진지하게 고민해 보고 일시적인 유행이 아닌, 장기적인 대세가 될 수 있는 트렌드를 잘 선택하길 바란다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/07/hype-or-mainstream.html#respond",
        "content": "얼마 전에 ‘요즘 애들’이라는 책을 읽었다. 이 책의 부제는 “가장 학력은 높고, 가장 많이 일하지만, 가장 적게 버는 세대”인데, MZ 세대에 대한 책이고, 시중에 나온 수많은 비슷한 책과 같이 MZ 세대는 이렇다 저렇다는 표면적인 이야기보단, 작가는 왜 MZ 세대가 가장 공부는 많이 하고, 가장 열심히 일하지만, 가장 적게 버는지를 어느 정도까지 분석하고 과학적으로 설명하려고 시도한다.(...)",
        "contentSnippet": "얼마 전에 ‘요즘 애들’이라는 책을 읽었다. 이 책의 부제는 “가장 학력은 높고, 가장 많이 일하지만, 가장 적게 버는 세대”인데, MZ 세대에 대한 책이고, 시중에 나온 수많은 비슷한 책과 같이 MZ 세대는 이렇다 저렇다는 표면적인 이야기보단, 작가는 왜 MZ 세대가 가장 공부는 많이 하고, 가장 열심히 일하지만, 가장 적게 버는지를 어느 정도까지 분석하고 과학적으로 설명하려고 시도한다.(...)",
        "guid": "https://www.thestartupbible.com/?p=9139",
        "categories": [
          "Uncategorized",
          "books",
          "FoundersAtWork",
          "strategy",
          "Strong",
          "스타트업 바이블 QA"
        ],
        "isoDate": "2024-06-30T21:30:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "헛똑똑이들",
        "link": "https://www.thestartupbible.com/2024/06/cynics-sound-smart-but-vcs-have-to-be-optimists.html",
        "pubDate": "Wed, 26 Jun 2024 21:27:00 +0000",
        "content:encodedSnippet": "스트롱 내부 미팅을 할 때 내가 요새 자주 언급하고 강조하는 게 있는데, 바로 투자하지 않을 이유를 찾는데 시간과 에너지를 허비하지 말고, 투자할 이유를 찾는데 시간과 에너지를 사용하자는 것이다.\n우리도 이제 나를 포함해서 투자 인력이 5명으로 커졌는데, 모두 다르게 생각하고, 세상을 다르게 보고, 지금까지의 경험도 다르기 때문에, 창업가나 회사에 관해서 이야기하다 보면 정말 다양한 의견이 나온다. 내가 아주 투자하고 싶은 회사에 대해서 다른 분들은 초부정적 피드백을 줄 때도 있고, 반대로 다른 분들이 너무 좋다고 생각하는 창업가에 대해서 나는 또 다른 시각으로 그 반대의 의견을 제공하는 경우도 많다. 실은, 이렇게 다양한 의견을 기반으로 이야기하면서 서로의 생각을 상대방에게 설득하는 과정에서 우린 상당히 많은 걸 배우고, VC로서 한 층 더 성장할 수 있다.\n이런 현상은 매우 바람직한데, 이렇게 서로의 논리와 주장을 남들과 공유하고 설득할 때 한가지 항상 유의해야 할 점이 있다. 이건 나도 자주 빠지는 함정이고, 스스로 너무 똑똑하다고 생각하는 투자자, 또는 경험이 계속 축적되고 있는 투자자들과 이야기하다 보면 자주 느끼는 점이기도 하다. 바로, 투자하지 않기 위한 논리를 만들고, 이를 합리화하고 또 정당화 하기 위해서 너무 많은 시간과 에너지를 사용한다는 점이다. 실은, 모든 스타트업은 투자하지 말아야 할 이유만 수백 가지이고, 투자해야 할 이유는 거의 없다. 이건 모든 VC들이 잘 아는 사실인데, 우리는 이런 상황에서 특정 회사가 성공할 수 있는 몇 개 되지 않는 이유를 찾아서 투자해야 하는 업에 있는 사람들이라는 걸 가끔 잊는 것 같다.\n그래서 너무 많은 투자자들이 시장 조사, 데이터, 본인의 경험 등을 기반으로 투자하지 않기 위한 멋진 논리를 만드는데 너무 많은 시간을 사용하는 것 같다. 이분들의 이야기를 들어보면 틀린 말이 하나도 없다. 이 사업은 이미 다른 회사들이 시도해 봤는데 잘 안됐고, 저 사업은 시장을 다 먹어도 100억이 안되고, 저 창업가는 본인이 하는 분야에 대한 전문 지식이 없고, 등등, 실은 구구절절 모두 맞는 말이다. 원래 뭔가를 반박하는 부정적인 이야기만큼 논리적이고 완벽한 게 없긴 하다.\n나는 이런 걸 헛똑똑이 증후군이라고 한다. 똑똑한 투자자이고, 더 똑똑한 부정적인 의견이긴 한데, 결국엔 이렇게 해서 투자하지 않는 회사 중에 엄청나게 잘하는 곳들이 나오기 때문이다. 많은 VC들이- 나를 포함 – 투자하다 보면 어느 시점에 이 헛똑똑이 증후군에 빠지는데, 이건 좋은 투자를 하기 위해서 반드시 경계해야 하는 마인드셋이다.\n실은 헛똑똑이 투자자들은 본인들이 창업가보다 똑똑하다는 걸 자꾸 증명하려고 하는 경향이 강하다. 그래서 여러 가지 수치와 논리를 기반으로 특정 창업가와 사업에 투자하면 안 되는 이유를 계속 만드는데, 이런 분들은 투자하지 말고 그냥 직접 창업하는 걸 권장한다. 우리가 하는 이 투자라는 업은 본인이 세상에서 가장 똑똑한 사람이 되는 게 목적이 아니라, 세상에서 가장 똑똑한 사람들을 잘 찾아서 이들에게 투자하는 것이기 때문에, 투자자들이 창업가보다 더 똑똑하다는 걸 이렇게 힘들게 계속 증명할 필요가 없는 직업이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/06/cynics-sound-smart-but-vcs-have-to-be-optimists.html#comments",
        "content": "스트롱 내부 미팅을 할 때 내가 요새 자주 언급하고 강조하는 게 있는데, 바로 투자하지 않을 이유를 찾는데 시간과 에너지를 허비하지 말고, 투자할 이유를 찾는데 시간과 에너지를 사용하자는 것이다. 우리도 이제 나를 포함해서 투자 인력이 5명으로 커졌는데, 모두 다르게 생각하고, 세상을 다르게 보고, 지금까지의 경험도 다르기 때문에, 창업가나 회사에 관해서 이야기하다 보면 정말 다양한 의견이 나온다.(...)",
        "contentSnippet": "스트롱 내부 미팅을 할 때 내가 요새 자주 언급하고 강조하는 게 있는데, 바로 투자하지 않을 이유를 찾는데 시간과 에너지를 허비하지 말고, 투자할 이유를 찾는데 시간과 에너지를 사용하자는 것이다. 우리도 이제 나를 포함해서 투자 인력이 5명으로 커졌는데, 모두 다르게 생각하고, 세상을 다르게 보고, 지금까지의 경험도 다르기 때문에, 창업가나 회사에 관해서 이야기하다 보면 정말 다양한 의견이 나온다.(...)",
        "guid": "https://www.thestartupbible.com/?p=9137",
        "categories": [
          "Uncategorized",
          "inspiring",
          "people",
          "Strong",
          "vc",
          "스타트업 바이블 QA"
        ],
        "isoDate": "2024-06-26T21:27:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": [
      {
        "creator": "지마켓 기술블로그",
        "title": "쿠버네티스 오퍼레이터를 Java로 개발해보기",
        "link": "https://dev.gmarket.com/112",
        "pubDate": "Mon, 1 Jul 2024 00:00:00 +0900",
        "author": "지마켓 기술블로그",
        "comments": "https://dev.gmarket.com/112#entry112comment",
        "content": "<p style=\"text-align: justify;\" data-ke-size=\"size16\">이전 포스트:<span>&nbsp;</span><a style=\"color: #000000;\" href=\"https://dev.gmarket.com/102\">쿠버네티스 오퍼레이터를 Golang으로 개발해보기</a></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">안녕하세요.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">Cloud Strategy팀 박규민입니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">지난번에 Golang으로 쿠버네티스 오퍼레이터를 간단하게 만들어 봤습니다. 하지만 국내에서는 아무래도 Golang보다는 Java의 수요가 압도적으로 많은데요. 이번 포스트로 Java로 오퍼레이터를 구현하는 과정을 보여드리겠습니다.</p>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">Java Operator SDK</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">Java Operator SDK는 Kubernetes Client Java API인<span>&nbsp;<a style=\"color: #000000;\" href=\"https://github.com/fabric8io/kubernetes-client\">fabric8io</a>를</span> 기반으로 작성되어 있습니다. 이는 세부적으로 쿠버네티스와 상호 작용하기 위한 Low Level 단에서의 코드 작성 걱정 없이 개발자에게 친숙한 Java API를 사용하여 오퍼레이터를 쉽게 작성할 수 있도록 설계되어 있습니다.</p>\n<h3 style=\"text-align: justify;\" data-ke-size=\"size23\">Architecture</h3>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">Operator는 Controller 클래스의 집합이며, Controller 클래스가 Kubernetes 단일 리소스를 조정(Reconciling)해주는 역할을 합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">EventSourceManager가 Controller와 관련된 여러 EventSource들의 수명 주기를 관리해 줍니다. 여기에서의 Event는 리소스 조정을 유발하는 사건을 의미합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">EventSource에서 EventProcessor에 전파되는 Event를 생성합니다. (Controller와 관련된 기본 리소스의 변경 사항을 감시할 때는 ControllerResourceEventSource를 통해 Event를 전파하여 관련 상태를 캐싱합니다) Event를 받은 EventProcessor에서 리소스가 아직 처리되지 않은 경우, 적절한 Reconciler 메소드로 호출하여 전달해 주는 ReconcilerDispatcher를 호출하여 필요한 모든 정보를 차례대로 전달합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">Reconciler 메소드가 끝났을 때 EventProcessor가 다시 호출되어 실행을 완료하고 Controller의 상태를 업데이트합니다. 그리고 Reconciler 메소드에서 반환한 결과에 따라서 필요한 경우, ReconcilerDispatcher는 Kubernetes API 서버에 호출합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">마지막으로 EventProcessor는 요청 재시도를 해야 할지, 그리고 동일한 리소스에 대해 수신된 후속 Event가 없는지 확인합니다. 이 중 어느 것도 일어나지 않으면, Event 처리가 완료됩니다.</p>\n<h3 style=\"text-align: justify;\" data-ke-size=\"size23\">직접 구현해야 할 포인트는?</h3>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">개발자들에게는 다음과 같은 구성 요소들을 Java Class로 만들 필요가 있습니다.</p>\n<ul style=\"list-style-type: disc; color: #24292f; text-align: start;\" data-ke-list-type=\"disc\">\n<li><b>Primary Resource</b>: k8s 클러스터에 배포할 CRD</li>\n<li><b>Spec, Status</b>: CRD에 필요한 내부 구성 요소\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>Spec</b>: 사용자가 CR에 적용할 상태 정의</li>\n<li><b>Status</b>: CR의 현재 상태</li>\n</ul>\n</li>\n<li><b>Reconciler</b>: Primary Resource의 변경사항을 감지하고 조정</li>\n<li><b>KubernetesDependentResource</b>: CRD 배포의 결과로 클러스터에서 만들고 싶은 각 K8s 리소스(DeploymentConfig, Service, Ingress 등)</li>\n</ul>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">Project 생성</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">먼저 Spring Boot 기반으로 프로젝트를 생성합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">Intellij 기준으로 Spring Initializr Generators 메뉴를 통해 프로젝트를 생성합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"729\" data-origin-height=\"731\"><span data-url=\"https://blog.kakaocdn.net/dn/HiMzu/btsIigFZuRe/5jnLQtlhXWIT8yQBUBb4b1/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/HiMzu/btsIigFZuRe/5jnLQtlhXWIT8yQBUBb4b1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHiMzu%2FbtsIigFZuRe%2F5jnLQtlhXWIT8yQBUBb4b1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"729\" data-origin-height=\"731\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"734\" data-origin-height=\"735\"><span data-url=\"https://blog.kakaocdn.net/dn/dyd2iO/btsIjb46AOl/3hI6EojwVlp29Uaky7z5ck/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/dyd2iO/btsIjb46AOl/3hI6EojwVlp29Uaky7z5ck/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdyd2iO%2FbtsIjb46AOl%2F3hI6EojwVlp29Uaky7z5ck%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"734\" data-origin-height=\"735\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">build.gradle에서 다음과 같이 수정합니다.</p>\n<pre id=\"code_1719759753788\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>plugins {\n  id 'java'\n  id 'org.springframework.boot' version '3.3.1'\n  id 'io.spring.dependency-management' version '1.1.5'\n}\n\ngroup = 'com.example'\nversion = '0.0.1-SNAPSHOT'\n\njava {\n  toolchain {\n    languageVersion = JavaLanguageVersion.of(21)\n  }\n}\n\nrepositories {\n  mavenCentral()\n}\n\ndependencies {\n  annotationProcessor 'io.fabric8:crd-generator-apt:6.13.0'\n\n  implementation 'org.springframework.boot:spring-boot-starter'\n  implementation 'io.javaoperatorsdk:operator-framework-spring-boot-starter:5.5.0'\n\n  testImplementation 'org.springframework.boot:spring-boot-starter-test'\n  testImplementation 'io.javaoperatorsdk:operator-framework-spring-boot-starter-test:5.5.0'\n  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'\n}\n\ntasks.named('test') {\n  useJUnitPlatform()\n}</code></pre>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">Custom Resource 작성</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">customresources라는 package를 만든 다음, 하위에 Spec, Status, Primary Resource Class를 만듭니다.</p>\n<h3 style=\"text-align: justify;\" data-ke-size=\"size23\">Spec Class</h3>\n<pre id=\"code_1719759819677\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava.customresources;\n\n// Lombok @Data로도 적용 가능\npublic class PetclinicSpec {\n  private String image;\n  private Integer size;\n\n  public String getImage() {\n    return image;\n  }\n\n  public void setImage(String image) {\n    this.image = image;\n  }\n\n  public Integer getSize() {\n    return size;\n  }\n\n  public void setSize(Integer size) {\n    this.size = size;\n  }\n\n  public Integer getPort() {\n    return port;\n  }\n\n  public void setPort(Integer port) {\n    this.port = port;\n  }\n\n  private Integer port;\n}</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"text-align: justify;\" data-ke-size=\"size23\">Status Class</h3>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">ObservedGenerationAwareStatus 클래스를 확장합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">이는 k8s의 controller가 Petclinic CR에 대한 변경사항을 추적할 수 있도록 Petclinic 오브젝트가 매번 변경될 때마다 Petclinic CR 내에 observedGeneration status 값을 증가시킵니다.</p>\n<pre id=\"code_1719759865901\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava.customresources;\n\nimport io.javaoperatorsdk.operator.api.ObservedGenerationAwareStatus;\n\npublic class PetclinicStatus extends ObservedGenerationAwareStatus {\n}</code></pre>\n<h3 style=\"text-align: justify;\" data-ke-size=\"size23\">Primary Resource Class</h3>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">Petclinic CR을 Class로 생성합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">CustomResource 추상클래스를 확장할 때 PetclinicSpec과 PetclinicStatus 클래스를 참조합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<pre id=\"code_1719759884406\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava.customresources;\n\nimport io.fabric8.kubernetes.api.model.Namespaced;\nimport io.fabric8.kubernetes.client.CustomResource;\nimport io.fabric8.kubernetes.model.annotation.Group;\nimport io.fabric8.kubernetes.model.annotation.Version;\n\n@Group(\"spring.my.domain\")\n@Version(\"v1\")\npublic class Petclinic extends CustomResource&lt;PetclinicSpec, PetclinicStatus&gt; implements Namespaced {\n\n  @Override\n  public String toString() {\n    return \"Petclinic{spec=\" + spec + \", status=\" + status + \"}\";\n  }\n}</code></pre>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">Dependent Resources 작성</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">dependentresources라는 package를 생성한 다음, 하위에 KubernetesDependentResource 클래스들을 만듭니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">CRUDKubernetesDependentResource 추상클래스를 확장하여 CRD에 필요한 k8s 리소스들의 manifest를 class로 정의합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">@KubernetesDependent 어노테이션을 통해 Petclinic CR의 변화에 대응하여 해당 k8s 리소스의 수명 주기를 관리합니다.</p>\n<h3 style=\"text-align: justify;\" data-ke-size=\"size23\">Deployment</h3>\n<pre id=\"code_1719759898458\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava.dependentresources;\n\nimport com.example.petclinicoperatorjava.customresources.Petclinic;\nimport io.fabric8.kubernetes.api.model.*;\nimport io.fabric8.kubernetes.api.model.apps.Deployment;\nimport io.fabric8.kubernetes.api.model.apps.DeploymentBuilder;\nimport io.javaoperatorsdk.operator.api.reconciler.Context;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.CRUDKubernetesDependentResource;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.KubernetesDependent;\n\n@KubernetesDependent\npublic class PetclinicDeploymentResource extends CRUDKubernetesDependentResource&lt;Deployment, Petclinic&gt; {\n\n  public PetclinicDeploymentResource() {\n    super(Deployment.class);\n  }\n\n  @Override\n  protected Deployment desired(Petclinic petclinic, Context&lt;Petclinic&gt; context) {\n    final ObjectMeta petclinicMetadata = petclinic.getMetadata();\n    final String petclinicName = petclinicMetadata.getName();\n\n    return new DeploymentBuilder()\n        .editMetadata()\n          .withName(petclinicName)\n          .withNamespace(petclinicMetadata.getNamespace())\n          .addToLabels(\"app\", petclinicName)\n          .endMetadata()\n        .editSpec()\n          .withSelector(new LabelSelectorBuilder()\n            .addToMatchLabels(\"app\", petclinicName)\n            .build())\n          .withReplicas(petclinic.getSpec().getSize())\n          .withTemplate(new PodTemplateSpecBuilder()\n            .editMetadata()\n            .addToLabels(\"app\", petclinicName)\n            .endMetadata()\n            .editSpec()\n            .withContainers(new ContainerBuilder()\n                .withName(petclinicName + \"-container\")\n                .withImage(petclinic.getSpec().getImage())\n                .addToPorts(new ContainerPortBuilder()\n                  .withContainerPort(petclinic.getSpec().getPort())\n                  .build())\n                .build())\n            .endSpec()\n            .build())\n        .endSpec()\n        .build();\n  }\n}</code></pre>\n<h3 style=\"text-align: justify;\" data-ke-size=\"size23\">Service</h3>\n<pre id=\"code_1719759910277\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava.dependentresources;\n\nimport com.example.petclinicoperatorjava.customresources.Petclinic;\nimport io.fabric8.kubernetes.api.model.*;\nimport io.javaoperatorsdk.operator.api.reconciler.Context;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.CRUDKubernetesDependentResource;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.KubernetesDependent;\n\n@KubernetesDependent\npublic class PetclinicServiceResource extends CRUDKubernetesDependentResource&lt;Service, Petclinic&gt; {\n\n  public PetclinicServiceResource() {\n    super(Service.class);\n  }\n\n  @Override\n  protected Service desired(Petclinic petclinic, Context&lt;Petclinic&gt; context) {\n    final ObjectMeta petclinicMetadata = petclinic.getMetadata();\n    final String petclinicName = petclinicMetadata.getName();\n\n    return new ServiceBuilder()\n        .editMetadata()\n          .withName(petclinicName)\n          .withNamespace(petclinicMetadata.getNamespace())\n          .addToLabels(\"app\", petclinicName)\n        .endMetadata()\n        .editSpec()\n          .withType(\"NodePort\")\n          .addToSelector(\"app\", petclinicName)\n          .addToPorts(new ServicePortBuilder().withName(\"http\").withPort(petclinic.getSpec().getPort()).withProtocol(\"TCP\").withTargetPort(new IntOrStringBuilder().withValue(petclinic.getSpec().getPort()).build()).build())\n        .endSpec()\n        .build();\n  }\n}</code></pre>\n<h3 style=\"text-align: justify;\" data-ke-size=\"size23\">Ingress</h3>\n<pre id=\"code_1719759921944\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava.dependentresources;\n\nimport com.example.petclinicoperatorjava.customresources.Petclinic;\nimport io.fabric8.kubernetes.api.model.ObjectMeta;\nimport io.fabric8.kubernetes.api.model.networking.v1.*;\nimport io.javaoperatorsdk.operator.api.reconciler.Context;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.CRUDKubernetesDependentResource;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.KubernetesDependent;\n\n@KubernetesDependent\npublic class PetclinicIngressResource extends CRUDKubernetesDependentResource&lt;Ingress, Petclinic&gt; {\n\n  public PetclinicIngressResource() {\n    super(Ingress.class);\n  }\n\n  @Override\n  protected Ingress desired(Petclinic petclinic, Context&lt;Petclinic&gt; context) {\n    final ObjectMeta petclinicMetadata = petclinic.getMetadata();\n    final String petclinicName = petclinicMetadata.getName();\n\n    return new IngressBuilder()\n        .editMetadata()\n          .withName(petclinicName)\n          .withNamespace(petclinicMetadata.getNamespace())\n          .addToLabels(\"app\", petclinicName)\n        .endMetadata()\n        .editSpec()\n          .withIngressClassName(\"nginx\")\n          .withRules(new IngressRuleBuilder()\n            .withHttp(new HTTPIngressRuleValueBuilder()\n              .withPaths(new HTTPIngressPathBuilder()\n                .withPath(\"/\")\n                .withPathType(\"Prefix\")\n                .withBackend(new IngressBackendBuilder()\n                  .withService(new IngressServiceBackendBuilder()\n                    .withName(petclinicName)\n                    .withPort(new ServiceBackendPortBuilder()\n                      .withNumber(petclinic.getSpec().getPort())\n                      .build())\n                    .build())\n                  .build())\n                .build())\n              .build())\n            .build())\n        .endSpec()\n        .build();\n  }\n}</code></pre>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">Reconciler 작성</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">Petclinic Primary Resource의 변경사항을 감지하고 조정을 해주는 Reconciler 클래스를 작성합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">@ControllerConfiguration 어노테이션을 붙여 dependents 속성을 통해 @KubernetesDependent 어노테이션을 붙인 KubernetesDependentResource 클래스를 @Dependent 어노테이션으로 여기에 연결합니다.</p>\n<pre id=\"code_1719759935194\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava;\n\nimport com.example.petclinicoperatorjava.customresources.Petclinic;\nimport com.example.petclinicoperatorjava.dependentresources.PetclinicDeploymentResource;\nimport com.example.petclinicoperatorjava.dependentresources.PetclinicIngressResource;\nimport com.example.petclinicoperatorjava.dependentresources.PetclinicServiceResource;\nimport io.javaoperatorsdk.operator.api.reconciler.*;\nimport io.javaoperatorsdk.operator.api.reconciler.dependent.Dependent;\nimport org.springframework.stereotype.Component;\n\n@ControllerConfiguration(\n    dependents = {\n        @Dependent(type = PetclinicDeploymentResource.class),\n        @Dependent(type = PetclinicServiceResource.class),\n        @Dependent(type = PetclinicIngressResource.class)\n    })\npublic class PetclinicReconciler implements Reconciler&lt;Petclinic&gt;, ErrorStatusHandler&lt;Petclinic&gt;, Cleaner&lt;Petclinic&gt; {\n\n  @Override\n  public UpdateControl&lt;Petclinic&gt; reconcile(Petclinic petclinic, Context&lt;Petclinic&gt; context) {\n    return UpdateControl.updateResourceAndPatchStatus(petclinic);\n  }\n\n  @Override\n  public DeleteControl cleanup(Petclinic petclinic, Context&lt;Petclinic&gt; context) {\n    return DeleteControl.defaultDelete();\n  }\n\n  @Override\n  public ErrorStatusUpdateControl&lt;Petclinic&gt; updateErrorStatus(Petclinic petclinic, Context&lt;Petclinic&gt; context, Exception e) {\n    return ErrorStatusUpdateControl.patchStatus(petclinic);\n  }\n\n}</code></pre>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">Config 작성</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">해당 Reconciler 클래스와 직접 구현한 PetclinicOperator를 각각 Bean으로 등록하도록 Config 클래스를 config package 하위에 만듭니다.</p>\n<pre id=\"code_1719759946510\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava.config;\n\nimport com.example.petclinicoperatorjava.PetclinicReconciler;\nimport io.javaoperatorsdk.operator.Operator;\nimport io.javaoperatorsdk.operator.api.reconciler.Reconciler;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport java.util.List;\n\n@Configuration\npublic class PetclinicOperatorConfig {\n\n  @Bean\n  public PetclinicReconciler petclinicReconciler() {\n    return new PetclinicReconciler();\n  }\n\n  @Bean(initMethod = \"start\", destroyMethod = \"stop\")\n  public Operator operator(List&lt;Reconciler&lt;?&gt;&gt; controllers) {\n    Operator operator = new Operator();\n    controllers.forEach(operator::register);\n    return operator;\n  }\n}</code></pre>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">k8s 클러스터에 CRD 적용</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">io.fabric8:crd-generator-apt 라이브러리에 의해 프로젝트 컴파일을 진행할 시 자동으로 build 디렉토리 내부에서 classpath/META-INF/fabric8 디렉토리에 yml 형식으로 생성됩니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">이를<span>&nbsp;</span><a style=\"color: #000000;\" href=\"https://dev.gmarket.com/102\">지난 시간</a>에 구축한 kind 기반의 로컬 k8s 클러스터에 CRD로 등록합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<pre id=\"code_1719759956884\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ kubectl apply -f ./build/classes/java/main/META-INF/fabric8/petclinics.spring.my.domain-v1.yml\ncustomresourcedefinition.apiextensions.k8s.io/petclinics.spring.my.domain created</code></pre>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">로컬 테스트</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">PetclinicOperatorJavaApplication에서 main 클래스를 실행합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"728\" data-origin-height=\"215\"><span data-url=\"https://blog.kakaocdn.net/dn/lsqqS/btsIhNYB4Bf/HmTCXy46H9VNZ93v6uyAvk/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/lsqqS/btsIhNYB4Bf/HmTCXy46H9VNZ93v6uyAvk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FlsqqS%2FbtsIhNYB4Bf%2FHmTCXy46H9VNZ93v6uyAvk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"728\" data-origin-height=\"215\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">kind cluster에 Petclinic manifest가 적용이 잘 되는지 확인합니다.</p>\n<pre id=\"code_1719759984359\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ kubectl config set-context --current --namespace=petclinic\n\n$ kubectl apply -f - &lt;&lt;EOF\napiVersion: spring.my.domain/v1\nkind: Petclinic\nmetadata:\n  name: sample\nspec:\n  image: springio/petclinic\n  size: 1\n  port: 8080\nEOF\npetclinic.spring.my.domain/sample created\n\n$ kubectl get all\nNAME                          READY   STATUS    RESTARTS   AGE\npod/sample-594c8976df-5gmzr   1/1     Running   0          47s\n\nNAME             TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE\nservice/sample   NodePort   10.96.34.237   &lt;none&gt;        8080:32494/TCP   48s\n\nNAME                     READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/sample   1/1     1            1           48s\n\nNAME                                DESIRED   CURRENT   READY   AGE\nreplicaset.apps/sample-594c8976df   1         1         1       48s\n\n$ kubectl get ing\nNAME     CLASS   HOSTS   ADDRESS     PORTS   AGE\nsample   nginx   *       localhost   80      69s</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><a style=\"color: #000000;\" href=\"http://xn--localhost-ji89a/\">http://localhost로</a><span>&nbsp;</span>접속하여 Petclinic 메인 화면이 나오는지 확인합니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"700\" data-origin-height=\"448\"><span data-url=\"https://blog.kakaocdn.net/dn/717xM/btsIhe3ukh6/kRMKf9MKzflqX8vyKB14J0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/717xM/btsIhe3ukh6/kRMKf9MKzflqX8vyKB14J0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F717xM%2FbtsIhe3ukh6%2FkRMKf9MKzflqX8vyKB14J0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"700\" data-origin-height=\"448\"/></span></figure>\n</p>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">Integration Test</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">@EnableMockOperator 어노테이션을 통해 k8s 클러스터를 mocking 하여 직접 구현한 Operator의 CRD를 적용하여 전용 통합 테스트를 작성할 수 있습니다.</p>\n<pre id=\"code_1719760008736\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>package com.example.petclinicoperatorjava;\n\nimport io.fabric8.kubernetes.client.KubernetesClient;\nimport io.javaoperatorsdk.operator.springboot.starter.test.EnableMockOperator;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n@SpringBootTest\n@EnableMockOperator(crdPaths = \"classpath:META-INF/fabric8/petclinics.spring.my.domain-v1.yml\")\npublic class PetclinicOperatorUnitTest {\n\n  @Autowired\n  KubernetesClient k8sClient;\n\n  @Test\n  void whenContextLoaded_thenCrdApplied() {\n    assertThat(\n        k8sClient\n            .apiextensions()\n            .v1()\n            .customResourceDefinitions()\n            .withName(\"petclinics.spring.my.domain\")\n            .get()\n    ).isNotNull();\n  }\n}</code></pre>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">마치면서...</h2>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">이번 포스트에서는 Java를 사용하여 Kubernetes Operator를 직접 구현해 보았습니다. Golang에 비해 구조가 비교적 간단하고 친숙하여 더 쉽게 접근할 수 있다는 느낌이 있는데요. 기존 Java/Spring Boot 기반 서비스와의 연계성, 개발자 커뮤니티의 폭넓은 지원까지 생각해 본다면 Kubernetes Operator를 개발할 때 Java라는 언어로도 꽤나 매력적인 선택이 될 수 있습니다. Java Operator SDK 활용에 작은 도움이 되었기를 바라면서 글을 마치겠습니다.</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">감사합니다.</p>\n<h2 style=\"text-align: justify;\" data-ke-size=\"size26\">참조</h2>\n<ul style=\"list-style-type: disc; color: #24292f; text-align: start;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://javaoperatorsdk.io/docs\">https://javaoperatorsdk.io/docs</a></li>\n<li><a href=\"https://github.com/operator-framework/java-operator-sdk/tree/main/sample-operators\">https://github.com/operator-framework/java-operator-sdk/tree/main/sample-operators</a></li>\n<li><a href=\"https://www.baeldung.com/java-kubernetes-operator-sdk\">https://www.baeldung.com/java-kubernetes-operator-sdk</a></li>\n<li><a href=\"https://techtalk.11stcorp.com/2022/pdf/TECH-TALK-2022_SESSION-02.pdf\">https://techtalk.11stcorp.com/2022/pdf/TECH-TALK-2022_SESSION-02.pdf</a></li>\n</ul>",
        "contentSnippet": "이전 포스트: 쿠버네티스 오퍼레이터를 Golang으로 개발해보기\n \n안녕하세요.\nCloud Strategy팀 박규민입니다.\n \n지난번에 Golang으로 쿠버네티스 오퍼레이터를 간단하게 만들어 봤습니다. 하지만 국내에서는 아무래도 Golang보다는 Java의 수요가 압도적으로 많은데요. 이번 포스트로 Java로 오퍼레이터를 구현하는 과정을 보여드리겠습니다.\nJava Operator SDK\nJava Operator SDK는 Kubernetes Client Java API인 fabric8io를 기반으로 작성되어 있습니다. 이는 세부적으로 쿠버네티스와 상호 작용하기 위한 Low Level 단에서의 코드 작성 걱정 없이 개발자에게 친숙한 Java API를 사용하여 오퍼레이터를 쉽게 작성할 수 있도록 설계되어 있습니다.\nArchitecture\nOperator는 Controller 클래스의 집합이며, Controller 클래스가 Kubernetes 단일 리소스를 조정(Reconciling)해주는 역할을 합니다.\nEventSourceManager가 Controller와 관련된 여러 EventSource들의 수명 주기를 관리해 줍니다. 여기에서의 Event는 리소스 조정을 유발하는 사건을 의미합니다.\n \nEventSource에서 EventProcessor에 전파되는 Event를 생성합니다. (Controller와 관련된 기본 리소스의 변경 사항을 감시할 때는 ControllerResourceEventSource를 통해 Event를 전파하여 관련 상태를 캐싱합니다) Event를 받은 EventProcessor에서 리소스가 아직 처리되지 않은 경우, 적절한 Reconciler 메소드로 호출하여 전달해 주는 ReconcilerDispatcher를 호출하여 필요한 모든 정보를 차례대로 전달합니다.\n \nReconciler 메소드가 끝났을 때 EventProcessor가 다시 호출되어 실행을 완료하고 Controller의 상태를 업데이트합니다. 그리고 Reconciler 메소드에서 반환한 결과에 따라서 필요한 경우, ReconcilerDispatcher는 Kubernetes API 서버에 호출합니다.\n마지막으로 EventProcessor는 요청 재시도를 해야 할지, 그리고 동일한 리소스에 대해 수신된 후속 Event가 없는지 확인합니다. 이 중 어느 것도 일어나지 않으면, Event 처리가 완료됩니다.\n직접 구현해야 할 포인트는?\n개발자들에게는 다음과 같은 구성 요소들을 Java Class로 만들 필요가 있습니다.\nPrimary Resource: k8s 클러스터에 배포할 CRD\nSpec, Status: CRD에 필요한 내부 구성 요소\n\nSpec: 사용자가 CR에 적용할 상태 정의\nStatus: CR의 현재 상태\nReconciler: Primary Resource의 변경사항을 감지하고 조정\nKubernetesDependentResource: CRD 배포의 결과로 클러스터에서 만들고 싶은 각 K8s 리소스(DeploymentConfig, Service, Ingress 등)\nProject 생성\n먼저 Spring Boot 기반으로 프로젝트를 생성합니다.\nIntellij 기준으로 Spring Initializr Generators 메뉴를 통해 프로젝트를 생성합니다.\n\n\n \n\n\n \n \n \nbuild.gradle에서 다음과 같이 수정합니다.\nplugins {\n  id 'java'\n  id 'org.springframework.boot' version '3.3.1'\n  id 'io.spring.dependency-management' version '1.1.5'\n}\n\ngroup = 'com.example'\nversion = '0.0.1-SNAPSHOT'\n\njava {\n  toolchain {\n    languageVersion = JavaLanguageVersion.of(21)\n  }\n}\n\nrepositories {\n  mavenCentral()\n}\n\ndependencies {\n  annotationProcessor 'io.fabric8:crd-generator-apt:6.13.0'\n\n  implementation 'org.springframework.boot:spring-boot-starter'\n  implementation 'io.javaoperatorsdk:operator-framework-spring-boot-starter:5.5.0'\n\n  testImplementation 'org.springframework.boot:spring-boot-starter-test'\n  testImplementation 'io.javaoperatorsdk:operator-framework-spring-boot-starter-test:5.5.0'\n  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'\n}\n\ntasks.named('test') {\n  useJUnitPlatform()\n}\nCustom Resource 작성\ncustomresources라는 package를 만든 다음, 하위에 Spec, Status, Primary Resource Class를 만듭니다.\nSpec Class\npackage com.example.petclinicoperatorjava.customresources;\n\n// Lombok @Data로도 적용 가능\npublic class PetclinicSpec {\n  private String image;\n  private Integer size;\n\n  public String getImage() {\n    return image;\n  }\n\n  public void setImage(String image) {\n    this.image = image;\n  }\n\n  public Integer getSize() {\n    return size;\n  }\n\n  public void setSize(Integer size) {\n    this.size = size;\n  }\n\n  public Integer getPort() {\n    return port;\n  }\n\n  public void setPort(Integer port) {\n    this.port = port;\n  }\n\n  private Integer port;\n}\n \nStatus Class\nObservedGenerationAwareStatus 클래스를 확장합니다.\n이는 k8s의 controller가 Petclinic CR에 대한 변경사항을 추적할 수 있도록 Petclinic 오브젝트가 매번 변경될 때마다 Petclinic CR 내에 observedGeneration status 값을 증가시킵니다.\npackage com.example.petclinicoperatorjava.customresources;\n\nimport io.javaoperatorsdk.operator.api.ObservedGenerationAwareStatus;\n\npublic class PetclinicStatus extends ObservedGenerationAwareStatus {\n}\nPrimary Resource Class\nPetclinic CR을 Class로 생성합니다.\nCustomResource 추상클래스를 확장할 때 PetclinicSpec과 PetclinicStatus 클래스를 참조합니다.\n \npackage com.example.petclinicoperatorjava.customresources;\n\nimport io.fabric8.kubernetes.api.model.Namespaced;\nimport io.fabric8.kubernetes.client.CustomResource;\nimport io.fabric8.kubernetes.model.annotation.Group;\nimport io.fabric8.kubernetes.model.annotation.Version;\n\n@Group(\"spring.my.domain\")\n@Version(\"v1\")\npublic class Petclinic extends CustomResource<PetclinicSpec, PetclinicStatus> implements Namespaced {\n\n  @Override\n  public String toString() {\n    return \"Petclinic{spec=\" + spec + \", status=\" + status + \"}\";\n  }\n}\nDependent Resources 작성\ndependentresources라는 package를 생성한 다음, 하위에 KubernetesDependentResource 클래스들을 만듭니다.\nCRUDKubernetesDependentResource 추상클래스를 확장하여 CRD에 필요한 k8s 리소스들의 manifest를 class로 정의합니다.\n@KubernetesDependent 어노테이션을 통해 Petclinic CR의 변화에 대응하여 해당 k8s 리소스의 수명 주기를 관리합니다.\nDeployment\npackage com.example.petclinicoperatorjava.dependentresources;\n\nimport com.example.petclinicoperatorjava.customresources.Petclinic;\nimport io.fabric8.kubernetes.api.model.*;\nimport io.fabric8.kubernetes.api.model.apps.Deployment;\nimport io.fabric8.kubernetes.api.model.apps.DeploymentBuilder;\nimport io.javaoperatorsdk.operator.api.reconciler.Context;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.CRUDKubernetesDependentResource;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.KubernetesDependent;\n\n@KubernetesDependent\npublic class PetclinicDeploymentResource extends CRUDKubernetesDependentResource<Deployment, Petclinic> {\n\n  public PetclinicDeploymentResource() {\n    super(Deployment.class);\n  }\n\n  @Override\n  protected Deployment desired(Petclinic petclinic, Context<Petclinic> context) {\n    final ObjectMeta petclinicMetadata = petclinic.getMetadata();\n    final String petclinicName = petclinicMetadata.getName();\n\n    return new DeploymentBuilder()\n        .editMetadata()\n          .withName(petclinicName)\n          .withNamespace(petclinicMetadata.getNamespace())\n          .addToLabels(\"app\", petclinicName)\n          .endMetadata()\n        .editSpec()\n          .withSelector(new LabelSelectorBuilder()\n            .addToMatchLabels(\"app\", petclinicName)\n            .build())\n          .withReplicas(petclinic.getSpec().getSize())\n          .withTemplate(new PodTemplateSpecBuilder()\n            .editMetadata()\n            .addToLabels(\"app\", petclinicName)\n            .endMetadata()\n            .editSpec()\n            .withContainers(new ContainerBuilder()\n                .withName(petclinicName + \"-container\")\n                .withImage(petclinic.getSpec().getImage())\n                .addToPorts(new ContainerPortBuilder()\n                  .withContainerPort(petclinic.getSpec().getPort())\n                  .build())\n                .build())\n            .endSpec()\n            .build())\n        .endSpec()\n        .build();\n  }\n}\nService\npackage com.example.petclinicoperatorjava.dependentresources;\n\nimport com.example.petclinicoperatorjava.customresources.Petclinic;\nimport io.fabric8.kubernetes.api.model.*;\nimport io.javaoperatorsdk.operator.api.reconciler.Context;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.CRUDKubernetesDependentResource;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.KubernetesDependent;\n\n@KubernetesDependent\npublic class PetclinicServiceResource extends CRUDKubernetesDependentResource<Service, Petclinic> {\n\n  public PetclinicServiceResource() {\n    super(Service.class);\n  }\n\n  @Override\n  protected Service desired(Petclinic petclinic, Context<Petclinic> context) {\n    final ObjectMeta petclinicMetadata = petclinic.getMetadata();\n    final String petclinicName = petclinicMetadata.getName();\n\n    return new ServiceBuilder()\n        .editMetadata()\n          .withName(petclinicName)\n          .withNamespace(petclinicMetadata.getNamespace())\n          .addToLabels(\"app\", petclinicName)\n        .endMetadata()\n        .editSpec()\n          .withType(\"NodePort\")\n          .addToSelector(\"app\", petclinicName)\n          .addToPorts(new ServicePortBuilder().withName(\"http\").withPort(petclinic.getSpec().getPort()).withProtocol(\"TCP\").withTargetPort(new IntOrStringBuilder().withValue(petclinic.getSpec().getPort()).build()).build())\n        .endSpec()\n        .build();\n  }\n}\nIngress\npackage com.example.petclinicoperatorjava.dependentresources;\n\nimport com.example.petclinicoperatorjava.customresources.Petclinic;\nimport io.fabric8.kubernetes.api.model.ObjectMeta;\nimport io.fabric8.kubernetes.api.model.networking.v1.*;\nimport io.javaoperatorsdk.operator.api.reconciler.Context;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.CRUDKubernetesDependentResource;\nimport io.javaoperatorsdk.operator.processing.dependent.kubernetes.KubernetesDependent;\n\n@KubernetesDependent\npublic class PetclinicIngressResource extends CRUDKubernetesDependentResource<Ingress, Petclinic> {\n\n  public PetclinicIngressResource() {\n    super(Ingress.class);\n  }\n\n  @Override\n  protected Ingress desired(Petclinic petclinic, Context<Petclinic> context) {\n    final ObjectMeta petclinicMetadata = petclinic.getMetadata();\n    final String petclinicName = petclinicMetadata.getName();\n\n    return new IngressBuilder()\n        .editMetadata()\n          .withName(petclinicName)\n          .withNamespace(petclinicMetadata.getNamespace())\n          .addToLabels(\"app\", petclinicName)\n        .endMetadata()\n        .editSpec()\n          .withIngressClassName(\"nginx\")\n          .withRules(new IngressRuleBuilder()\n            .withHttp(new HTTPIngressRuleValueBuilder()\n              .withPaths(new HTTPIngressPathBuilder()\n                .withPath(\"/\")\n                .withPathType(\"Prefix\")\n                .withBackend(new IngressBackendBuilder()\n                  .withService(new IngressServiceBackendBuilder()\n                    .withName(petclinicName)\n                    .withPort(new ServiceBackendPortBuilder()\n                      .withNumber(petclinic.getSpec().getPort())\n                      .build())\n                    .build())\n                  .build())\n                .build())\n              .build())\n            .build())\n        .endSpec()\n        .build();\n  }\n}\nReconciler 작성\nPetclinic Primary Resource의 변경사항을 감지하고 조정을 해주는 Reconciler 클래스를 작성합니다.\n@ControllerConfiguration 어노테이션을 붙여 dependents 속성을 통해 @KubernetesDependent 어노테이션을 붙인 KubernetesDependentResource 클래스를 @Dependent 어노테이션으로 여기에 연결합니다.\npackage com.example.petclinicoperatorjava;\n\nimport com.example.petclinicoperatorjava.customresources.Petclinic;\nimport com.example.petclinicoperatorjava.dependentresources.PetclinicDeploymentResource;\nimport com.example.petclinicoperatorjava.dependentresources.PetclinicIngressResource;\nimport com.example.petclinicoperatorjava.dependentresources.PetclinicServiceResource;\nimport io.javaoperatorsdk.operator.api.reconciler.*;\nimport io.javaoperatorsdk.operator.api.reconciler.dependent.Dependent;\nimport org.springframework.stereotype.Component;\n\n@ControllerConfiguration(\n    dependents = {\n        @Dependent(type = PetclinicDeploymentResource.class),\n        @Dependent(type = PetclinicServiceResource.class),\n        @Dependent(type = PetclinicIngressResource.class)\n    })\npublic class PetclinicReconciler implements Reconciler<Petclinic>, ErrorStatusHandler<Petclinic>, Cleaner<Petclinic> {\n\n  @Override\n  public UpdateControl<Petclinic> reconcile(Petclinic petclinic, Context<Petclinic> context) {\n    return UpdateControl.updateResourceAndPatchStatus(petclinic);\n  }\n\n  @Override\n  public DeleteControl cleanup(Petclinic petclinic, Context<Petclinic> context) {\n    return DeleteControl.defaultDelete();\n  }\n\n  @Override\n  public ErrorStatusUpdateControl<Petclinic> updateErrorStatus(Petclinic petclinic, Context<Petclinic> context, Exception e) {\n    return ErrorStatusUpdateControl.patchStatus(petclinic);\n  }\n\n}\nConfig 작성\n해당 Reconciler 클래스와 직접 구현한 PetclinicOperator를 각각 Bean으로 등록하도록 Config 클래스를 config package 하위에 만듭니다.\npackage com.example.petclinicoperatorjava.config;\n\nimport com.example.petclinicoperatorjava.PetclinicReconciler;\nimport io.javaoperatorsdk.operator.Operator;\nimport io.javaoperatorsdk.operator.api.reconciler.Reconciler;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport java.util.List;\n\n@Configuration\npublic class PetclinicOperatorConfig {\n\n  @Bean\n  public PetclinicReconciler petclinicReconciler() {\n    return new PetclinicReconciler();\n  }\n\n  @Bean(initMethod = \"start\", destroyMethod = \"stop\")\n  public Operator operator(List<Reconciler<?>> controllers) {\n    Operator operator = new Operator();\n    controllers.forEach(operator::register);\n    return operator;\n  }\n}\nk8s 클러스터에 CRD 적용\nio.fabric8:crd-generator-apt 라이브러리에 의해 프로젝트 컴파일을 진행할 시 자동으로 build 디렉토리 내부에서 classpath/META-INF/fabric8 디렉토리에 yml 형식으로 생성됩니다.\n이를 지난 시간에 구축한 kind 기반의 로컬 k8s 클러스터에 CRD로 등록합니다.\n \n$ kubectl apply -f ./build/classes/java/main/META-INF/fabric8/petclinics.spring.my.domain-v1.yml\ncustomresourcedefinition.apiextensions.k8s.io/petclinics.spring.my.domain created\n로컬 테스트\nPetclinicOperatorJavaApplication에서 main 클래스를 실행합니다.\n \n\n\nkind cluster에 Petclinic manifest가 적용이 잘 되는지 확인합니다.\n$ kubectl config set-context --current --namespace=petclinic\n\n$ kubectl apply -f - <<EOF\napiVersion: spring.my.domain/v1\nkind: Petclinic\nmetadata:\n  name: sample\nspec:\n  image: springio/petclinic\n  size: 1\n  port: 8080\nEOF\npetclinic.spring.my.domain/sample created\n\n$ kubectl get all\nNAME                          READY   STATUS    RESTARTS   AGE\npod/sample-594c8976df-5gmzr   1/1     Running   0          47s\n\nNAME             TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE\nservice/sample   NodePort   10.96.34.237   <none>        8080:32494/TCP   48s\n\nNAME                     READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/sample   1/1     1            1           48s\n\nNAME                                DESIRED   CURRENT   READY   AGE\nreplicaset.apps/sample-594c8976df   1         1         1       48s\n\n$ kubectl get ing\nNAME     CLASS   HOSTS   ADDRESS     PORTS   AGE\nsample   nginx   *       localhost   80      69s\n \nhttp://localhost로 접속하여 Petclinic 메인 화면이 나오는지 확인합니다.\n \n\n\nIntegration Test\n@EnableMockOperator 어노테이션을 통해 k8s 클러스터를 mocking 하여 직접 구현한 Operator의 CRD를 적용하여 전용 통합 테스트를 작성할 수 있습니다.\npackage com.example.petclinicoperatorjava;\n\nimport io.fabric8.kubernetes.client.KubernetesClient;\nimport io.javaoperatorsdk.operator.springboot.starter.test.EnableMockOperator;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n@SpringBootTest\n@EnableMockOperator(crdPaths = \"classpath:META-INF/fabric8/petclinics.spring.my.domain-v1.yml\")\npublic class PetclinicOperatorUnitTest {\n\n  @Autowired\n  KubernetesClient k8sClient;\n\n  @Test\n  void whenContextLoaded_thenCrdApplied() {\n    assertThat(\n        k8sClient\n            .apiextensions()\n            .v1()\n            .customResourceDefinitions()\n            .withName(\"petclinics.spring.my.domain\")\n            .get()\n    ).isNotNull();\n  }\n}\n마치면서...\n이번 포스트에서는 Java를 사용하여 Kubernetes Operator를 직접 구현해 보았습니다. Golang에 비해 구조가 비교적 간단하고 친숙하여 더 쉽게 접근할 수 있다는 느낌이 있는데요. 기존 Java/Spring Boot 기반 서비스와의 연계성, 개발자 커뮤니티의 폭넓은 지원까지 생각해 본다면 Kubernetes Operator를 개발할 때 Java라는 언어로도 꽤나 매력적인 선택이 될 수 있습니다. Java Operator SDK 활용에 작은 도움이 되었기를 바라면서 글을 마치겠습니다.\n감사합니다.\n참조\nhttps://javaoperatorsdk.io/docs\nhttps://github.com/operator-framework/java-operator-sdk/tree/main/sample-operators\nhttps://www.baeldung.com/java-kubernetes-operator-sdk\nhttps://techtalk.11stcorp.com/2022/pdf/TECH-TALK-2022_SESSION-02.pdf",
        "guid": "https://dev.gmarket.com/112",
        "categories": [
          "Infra"
        ],
        "isoDate": "2024-06-30T15:00:00.000Z"
      },
      {
        "creator": "지마켓 기술블로그",
        "title": "신규 서비스 &quot;꿀템&quot;을 만들기 위한 여정(네? 다음달까지요?) -2편",
        "link": "https://dev.gmarket.com/111",
        "pubDate": "Sun, 30 Jun 2024 19:09:53 +0900",
        "author": "지마켓 기술블로그",
        "comments": "https://dev.gmarket.com/111#entry111comment",
        "content": "<p data-ke-size=\"size16\">안녕하세요. Web Frontend팀 이민하입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">지난 편에서 꿀템 서비스를 기획하고 필요한 개념들의 이름을 지어주며 이를 바탕으로 데이터베이스를 설계해 보았습니다. 이번 편에서는 어떤 기술 스택을 선택했는지 소개하도록 하겠습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">기술 스택 선택과 개발</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_Attraction Data Flow.png\" data-origin-width=\"1243\" data-origin-height=\"1266\"><span data-url=\"https://blog.kakaocdn.net/dn/bfyI3c/btsIiqIljjt/9dRXV13rdEc1Xofxlkjg8K/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bfyI3c/btsIiqIljjt/9dRXV13rdEc1Xofxlkjg8K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbfyI3c%2FbtsIiqIljjt%2F9dRXV13rdEc1Xofxlkjg8K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_Attraction Data Flow.png\" data-origin-width=\"1243\" data-origin-height=\"1266\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">External 망에는 기존에 BSD 프론트엔드 영역 어플리케이션들이 있습니다. node.js와 경량 웹프레임워크인 fastify로 되어있습니다. 프론트에서 api를 호출하면 attraction 집계 어플리케이션이 메인 데이터 저장소인 Oracle DB에서 데이터를 조회해 옵니다. 구매내역, 링크루 등 외부 api를 호출한 결과도 전달해 줍니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">저장된 데이터는 Admin화면을 통해 관리할 수 있습니다. 누가 어떤 피드를 작성했고 누가 좋아요 버튼을 눌렀는지, 구매는 얼마나 일어났는지 등을 확인할 수 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">프론트엔드는 별도의 서버를 구축하지 않고 플러그인 형태로 개발되었습니다.</h4>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><i>event<span>&nbsp;</span></i>&nbsp;관련 어플리케이션은 프론트엔드 이름이 붙어있지만 여러 프로모션 영역의 비즈니스 로직이 많이 들어있는 어플리케이션입니다. 이번 BSD는 랭킹 탭 옆에 신규 탭으로 꿀템 탭이 신설될 것이므로 event 어플리케이션 안에 신규 생성한 attraction 어플리케이션을 번들 형태로 import 했습니다.&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"371\" data-origin-height=\"439\"><span data-url=\"https://blog.kakaocdn.net/dn/z8xti/btsIjdIx4rI/wiAfSitPETSfPkJKYuglA1/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/z8xti/btsIjdIx4rI/wiAfSitPETSfPkJKYuglA1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fz8xti%2FbtsIjdIx4rI%2FwiAfSitPETSfPkJKYuglA1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"371\" data-origin-height=\"439\"/></span></figure>\n</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>Typescript, React 18.2</li>\n<li><span style=\"color: #000000;\">Tanstack</span><span style=\"color: #000000;\"><span>&nbsp;</span>query (aka. react-query)&nbsp;</span></li>\n<li><span style=\"color: #000000;\">api</span><span style=\"color: #000000;\">&nbsp;fetching<span>&nbsp;</span></span><span style=\"color: #000000;\">기능을</span><span style=\"color: #000000;\">,&nbsp;</span><span style=\"color: #000000;\">꿀템의</span><span style=\"color: #000000;\"><span>&nbsp;</span>등록</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">편집</span><span style=\"color: #000000;\">/</span><span style=\"color: #000000;\">좋아요 처리에 개별적으로 상태를 관리하지 않아도&nbsp;</span><span style=\"color: #000000;\">되서</span><span style=\"color: #000000;\">&nbsp;개발에<span>&nbsp;</span></span><span style=\"color: #000000;\">유리하였고요</span></li>\n<li><span style=\"color: #000000;\"><span style=\"color: #000000;\">Tanstack</span><span style=\"color: #000000;\"><span>&nbsp;</span>virtual을 이용해 무한스크롤 기능을 구현하였습니다.</span></span></li>\n<li><span style=\"color: #000000;\"><span style=\"color: #000000;\"><span style=\"color: #000000; text-align: left;\">event-fe와 마찬가지로 Fastify 프레임워크를 사용하였습니다.</span></span></span></li>\n<li><span style=\"color: #000000;\"><span style=\"color: #000000;\"><span style=\"color: #000000; text-align: left;\"><span style=\"color: #000000; text-align: left;\">Vite로 번들링 하여 사내 배포시스템을 통해 배포하였습니다.</span></span></span></span></li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">또 아래의 특징을 갖고 있습니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>attraction 집계 api 호출 및 사용자 입력값 검증 (xss 방어)</li>\n<li><span>이벤트 프론트 저장소가 분리되어 있고 꿀템 저장소(attraction 프론트엔드)도 별도라서 꿀템 쪽 fastify용 코드는 attraction 프론트에서 개발하고 결과물을 fastify plugin 형태의 npm 패키지로 생성해서 이벤트 프론트 쪽에서 가져다 쓰는 방식으로 구현</span></li>\n<li>개발 중에는 attraction 프론트엔드에서 이벤트 프론트의 구성과 유사하게 dev server를 띄워서 개발하였습니다.</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">백엔드의 기술스택은 다음과 같습니다.</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1623\" data-origin-height=\"717\"><span data-url=\"https://blog.kakaocdn.net/dn/b9xMAI/btsIg5enoCW/BkfchCPLK2359lfY4jUPX0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/b9xMAI/btsIg5enoCW/BkfchCPLK2359lfY4jUPX0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb9xMAI%2FbtsIg5enoCW%2FBkfchCPLK2359lfY4jUPX0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"1623\" data-origin-height=\"717\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>이벤트 영역에서는 C#&nbsp;닷넷과&nbsp;Node.js로 이루어진 어플리케이션이 많은데 팀 내에서 처음으로&nbsp;Spring과&nbsp;Kotlin을 적용하여 어플리케이션을 개발했습니다. 오라클을 사용하니 Stored Procedure&nbsp;대신&nbsp;jpa와&nbsp;QueryDSL을 적용하였습니다.</li>\n<li>Admin 서비스는 스프링 멀티모듈로 만들어 웹 UI와 oracle에 접속할 api가 같은 도메인 모델을 공유하도록 하였습니다.</li>\n<li><span style=\"color: #000000;\">기존</span><span style=\"color: #000000;\"><span>&nbsp;</span>사내에서 사용되는<span>&nbsp;</span></span><span style=\"color: #000000;\">공통</span><span style=\"color: #000000;\"><span>&nbsp;</span>Admin 시스템은</span><span style=\"color: #000000;\"><span>&nbsp;</span>사용하는 모든 도메인이 관련 프론트엔드</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">저장소 한 곳에&nbsp;있다 보니&nbsp;개발</span><span style=\"color: #000000;\">,&nbsp;</span><span style=\"color: #000000;\">배포가 번거로울 때가 있습니다</span><span style=\"color: #000000;\">.&nbsp;</span><span style=\"color: #000000;\">프로젝트가 무거워 빌드에도 시간이 꽤 걸리고 어플리케이션 별로 자체 스케일링하기 어렵습니다</span><span style=\"color: #000000;\">. 관련 어드민</span><span style=\"color: #000000;\">에서는 외부 시스템과의 연동을 위해&nbsp;</span><span style=\"color: #000000;\">SSO(Single Sign On)</span><span style=\"color: #000000;\">을 지원합니다</span><span style=\"color: #000000;\">.&nbsp;</span><span style=\"color: #000000;\">이를 이용해 사내&nbsp;</span><span style=\"color: #000000;\">쿠버네티스</span><span style=\"color: #000000;\">&nbsp;시스템인&nbsp;</span><span style=\"color: #000000;\">fusion</span><span style=\"color: #000000;\">에 올릴 수 있는&nbsp;</span><span style=\"color: #000000;\">java/</span><span style=\"color: #000000;\">kotlin</span><span style=\"color: #000000;\">, node.js&nbsp;</span><span style=\"color: #000000;\">등으로 변경하면 관리포인트가 줄어 유지보수에 매우 도움이 됩니다</span><span style=\"color: #000000;\">.&nbsp;</span><span style=\"color: #000000;\">또한 닷넷&nbsp;</span><span style=\"color: #000000;\">프레임웍을</span><span style=\"color: #000000;\">&nbsp;쓰지 않기 때문에 맥북으로 개발이 가능해집니다</span><span style=\"color: #000000;\">.<span>&nbsp;</span></span>하지만<span style=\"color: #000000;\"><span>&nbsp;</span>사내 어드민</span><span style=\"color: #000000;\">&nbsp;공통 기능은 자체적으로 구현해야 하고 별도의&nbsp;</span><span style=\"color: #000000;\">admin&nbsp;</span><span style=\"color: #000000;\">qa</span><span style=\"color: #000000;\">를 거쳐야 하므로 개발기간이 길어질 수 있어 개발과 유지보수의&nbsp;</span><span style=\"color: #000000;\">trade off&nbsp;</span><span style=\"color: #000000;\">관계라고 생각합니다</span><span style=\"color: #000000;\">.&nbsp;</span><span style=\"color: #000000;\">팀 내에서는 같은&nbsp;</span><span style=\"color: #000000;\">기술스택이지만 다른</span><span style=\"color: #000000;\">&nbsp;어드민</span><span style=\"color: #000000;\">을 작업하고 있었기 때문에 수월하게 적용할 수 있었습니다</span><span style=\"color: #000000;\">.</span></li>\n<li>HTMX +&nbsp;<span style=\"color: #000000;\">Thymeleaf</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">&rarr; 마찬가지로&nbsp;</span><span style=\"color: #000000;\">cshtml</span><span style=\"color: #000000;\">이 아닌&nbsp;</span><span style=\"color: #000000;\">htmx</span><span style=\"color: #000000;\">를 이용하여&nbsp;</span><span style=\"color: #000000;\">admin&nbsp;</span><span style=\"color: #000000;\">ui</span><span style=\"color: #000000;\">를</span><span style=\"color: #000000;\">&nbsp;구성했습니다</span><span style=\"color: #000000;\">.</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">완성도보다는 빠르게 기능을 구현하는데 목적을 둔 어플리케이션이지만&nbsp;</span><span style=\"color: #000000;\">htmx</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">적용을 테크니컬 챌린지라고 말씀드릴 수 있습니다</span><span style=\"color: #000000;\">. (</span><span style=\"color: #000000;\">물론 일정이&nbsp;</span><span style=\"color: #000000;\">촉박해질수록</span><span style=\"color: #000000;\">&nbsp;후회를&nbsp;안 할 수가&nbsp;없었지만</span><span style=\"color: #000000;\">..)</span></li>\n</ul>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\"><span style=\"color: #000000;\">HTMX에 대해 한마디 하자면...</span></h4>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1819\" data-origin-height=\"786\"><span data-url=\"https://blog.kakaocdn.net/dn/5jSUV/btsIjc3VwUN/s6saFkuUonBYG6RwuTW15K/img.png\" data-phocus=\"phocus\" data-alt=\"html만 봐도 이해하기 쉽습니다.\"><img src=\"https://blog.kakaocdn.net/dn/5jSUV/btsIjc3VwUN/s6saFkuUonBYG6RwuTW15K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F5jSUV%2FbtsIjc3VwUN%2Fs6saFkuUonBYG6RwuTW15K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"1819\" data-origin-height=\"786\"/></span><figcaption>html만 봐도 이해하기 쉽습니다.</figcaption>\n</figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">htmx</span><span style=\"color: #000000;\">는 별도의<span>&nbsp;</span></span><span style=\"color: #000000;\">스크립트를<span>&nbsp;</span></span><span style=\"color: #000000;\">이용하지<span>&nbsp;</span></span><span style=\"color: #000000;\">않고 서버와</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">ajax&nbsp;</span><span style=\"color: #000000;\">통신을<span>&nbsp;</span></span><span style=\"color: #000000;\">도와주는</span><span style=\"color: #000000;\">&nbsp;프론트엔드&nbsp;웹&nbsp;</span><span style=\"color: #000000;\">프레임워크입니다</span><span style=\"color: #000000;\">.<span>&nbsp;</span></span><span style=\"color: #000000;\">기존에</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">통신하기</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">위해</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">수많은</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">js</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">코드를 만들어야<span>&nbsp;</span></span><span style=\"color: #000000;\">했는데 보일러 플레이트를 꽤<span>&nbsp;</span></span><span style=\"color: #000000;\">많이 없애&nbsp;코드량&nbsp;</span><span style=\"color: #000000;\">자체가 줄어드는 효과가 있습니다</span><span style=\"color: #000000;\">.</span></p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&ldquo;</span><span style=\"color: #000000;\">hx</span><span style=\"color: #000000;\">-&rdquo;</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">프리픽스가</span><span style=\"color: #000000;\">&nbsp;붙은 속성을</span><span style=\"color: #000000;\"><span>&nbsp;</span>선언해 간편하게<span>&nbsp;</span></span><span style=\"color: #000000;\">원하는 데이터를 만들어 낼 수 있습니다</span><span style=\"color: #000000;\">.&nbsp;</span><span style=\"color: #000000;\">필요한 기능은&nbsp;</span><span style=\"color: #000000;\">Extension</span><span style=\"color: #000000;\">으로&nbsp;만들 수 있어 사용성이 무궁무진합니다</span><span style=\"color: #000000;\">.<span>&nbsp;</span></span><span style=\"color: #000000;\">또 빌드 단계도 별도로 없어 즉시 개발할<span>&nbsp;</span></span><span style=\"color: #000000;\">수 있게 도와줍니다</span><span style=\"color: #000000;\">.</span></p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">장단점이 아주 명확한데요</span><span style=\"color: #000000;\">,&nbsp;</span><span style=\"color: #000000;\">장점은<span>&nbsp;</span></span><span style=\"color: #000000;\">서버 통신할 때&nbsp;</span><span style=\"color: #000000;\">js</span><span style=\"color: #000000;\">는<span>&nbsp;</span></span><span style=\"color: #000000;\">정말<span>&nbsp;</span></span><span style=\"color: #000000;\">사용하지 않고&nbsp;</span><span style=\"color: #000000;\">html</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">본연의 목적에 충실할 수 있다</span><span style=\"color: #000000;\">.&nbsp;</span></p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">특히&nbsp;</span><span style=\"color: #000000;\">thymeleaf</span><span style=\"color: #000000;\">와 결합하면 레이아웃 재사용으로&nbsp;</span><span style=\"color: #000000;\">리액트의</span><span style=\"color: #000000;\">&nbsp;컴포넌트 재사용과</span><span style=\"color: #000000;\"><span>&nbsp;</span>같은 효과를 가질 수 있습니다</span><span style=\"color: #000000;\">.&nbsp;</span><span style=\"color: #000000;\">백엔드</span><span style=\"color: #000000;\">&nbsp;개발자 혼자서 프론트를 만들 수 있다는 것도 장점입니다</span><span style=\"color: #000000;\">.&nbsp;</span></p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">단점은&nbsp;</span><span style=\"color: #000000;\">json</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">데이터로&nbsp;</span><span style=\"color: #000000;\">api</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">통신을 주고받았다 보니까 받았다 보니까&nbsp;</span><span style=\"color: #000000;\">html 시맨틱<span>&nbsp;</span></span><span style=\"color: #000000;\">태그를 응답받는 것에 적응할 시간이<span>&nbsp;</span></span><span style=\"color: #000000;\">필요하다는</span><span style=\"color: #000000;\"><span>&nbsp;</span>것과&nbsp; 간단한 통신을 해도 쉽지 않다는 것입니다. 특히 컨트롤러에서 @RequestBody만 주로 사용해 오다가 @RequestPart, @ModelAttribute로 바꾸고 data class가 바인딩되지 않는 이슈는 한참을 헤매게 만들었습니다.</span></p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">데이터를 주고받는 데이터&nbsp;</span><span style=\"color: #000000;\">패킷량도</span><span style=\"color: #000000;\">&nbsp;많아져 트래픽이 많이 몰리는 프론트 서비스에서는 사용이 부담스러울<span>&nbsp;</span></span><span style=\"color: #000000;\">수 있습니다</span><span style=\"color: #000000;\">.&nbsp;</span></p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">무엇보다 필요한 기능은 결국<span>&nbsp;</span></span><span style=\"color: #000000;\">js</span><span style=\"color: #000000;\">를&nbsp;써야 합니다 써야 합니다. Csv&nbsp;</span><span style=\"color: #000000;\">엑셀 다운로드</span><span style=\"color: #000000;\">, form reset</span><span style=\"color: #000000;\">이나&nbsp;</span><span style=\"color: #000000;\">date-picker</span><span style=\"color: #000000;\">를 사용하기&nbsp; 위한<span>&nbsp;</span></span><span style=\"color: #000000;\">공통 함수</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">작성</span><span style=\"color: #000000;\">..&nbsp;</span><span style=\"color: #000000;\">그리고&nbsp;</span><span style=\"color: #000000;\">typescript</span><span style=\"color: #000000;\">를 쓸 수 없다</span><span style=\"color: #000000;\">..는 것이 또 큰 단점이죠.<span>&nbsp;</span></span><span style=\"color: #000000;\">Htmx</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">레퍼런스가 많이 없어 거대한&nbsp;</span><span style=\"color: #000000;\">js</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">덩어리를 디버깅해 가며 입맛에 맞게 수정했던 경험도 있네요</span><span style=\"color: #000000;\">.&nbsp;</span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>htmx에 대해 아주 신랄하게 까는 아티클이 공식 홈페이지에 게시되어 있습니다..(<a href=\"https://htmx.org/essays/htmx-sucks/\">https://htmx.org/essays/htmx-sucks/</a>)</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">어플리케이션 구현할 때 기술스택에 있어서 정답은 없습니다. fastify 대신 express를 쓸 수도 있고 nest.js를 적용할 수도 있습니다. spring 대신에 ktor를 사용할 수도, htmx 대신에 handlebar나 rythm 템플릿, jsp를 쓸 수도 있고요. 다양한 기술들은 저마다의 다양한 장단점을 가지고 있습니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">2주간 매일 스크럼을 진행했습니다.</h4>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">짧게는 1분 길게는 10분 정도의 데일리 스크럼을 진행했습니다. 현재 진행하고 있는 작업과 진척 상황을 공유했습니다. 데일리 스크럼을 통해 프로젝트의 불확실성을 조율할 수 있었고, 짧은 시간 동안만 진행하기 때문에 불필요한 추가 업무나 의논이 생기지 않았습니다. 또 별도의 회의실이 필요하지 않아 자리에 모여 진행할 수 있었습니다.</p>\n<p><figure class=\"imagegridblock\">\n  <div class=\"image-container\"><span data-url=\"https://blog.kakaocdn.net/dn/byPaT4/btsIgN58gfC/GI4zwyatupJwuyrn74ya31/img.png\" data-phocus=\"phocus\" style=\"width: 37.1105%; margin-right: 10px;\" data-filename=\"blob\" data-widthpercent=\"37.55\" data-is-animation=\"false\" data-origin-height=\"971\" data-origin-width=\"619\"><img src=\"https://blog.kakaocdn.net/dn/byPaT4/btsIgN58gfC/GI4zwyatupJwuyrn74ya31/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbyPaT4%2FbtsIgN58gfC%2FGI4zwyatupJwuyrn74ya31%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\"/></span><span data-url=\"https://blog.kakaocdn.net/dn/b265Qm/btsIiRyXJGs/7KFWncvKYgvW45SBUKex20/img.png\" data-phocus=\"phocus\" style=\"width: 61.7267%;\" data-filename=\"edited_blob\" data-widthpercent=\"62.45\" data-is-animation=\"false\" data-origin-height=\"580\" data-origin-width=\"615\"><img src=\"https://blog.kakaocdn.net/dn/b265Qm/btsIiRyXJGs/7KFWncvKYgvW45SBUKex20/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb265Qm%2FbtsIiRyXJGs%2F7KFWncvKYgvW45SBUKex20%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\"/></span></div>\n</figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">팀 내에서 자체 QA를 진행했습니다.</h4>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">서비스가 론칭되려면&nbsp;</span><span style=\"color: #000000;\">QA(</span><span style=\"color: #000000;\">Quality Assurance) 단계를 거쳐 서비스의 이상은 없는지 확인을 하는데요&nbsp;</span><span style=\"color: #000000;\">QE</span><span style=\"color: #000000;\">팀과 담당&nbsp;</span><span style=\"color: #000000;\">PM</span><span style=\"color: #000000;\">분들이 같이 진행을 합니다</span><span style=\"color: #000000;\">. 사내</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">PM&nbsp;</span><span style=\"color: #000000;\">분들의 리소스가 넉넉한 편이 아닙니다</span><span style=\"color: #000000;\">.<span>&nbsp;</span></span><span style=\"color: #000000;\">이때 저희 팀원분들의 자체&nbsp;</span><span style=\"color: #000000;\">QA&nbsp;</span><span style=\"color: #000000;\">단계를 먼저 진행해 굉장히 많은 도움을 받을<span>&nbsp;</span></span><span style=\"color: #000000;\">수<span>&nbsp;</span></span><span style=\"color: #000000;\">있었습니다</span><span style=\"color: #000000;\">.&nbsp;</span><span style=\"color: #000000;\">서비스의 대략적인 프로세스만 설명하고 별도의 가이드가 제공되지 않은 상태로 자체&nbsp;</span><span style=\"color: #000000;\">QA</span><span style=\"color: #000000;\">를 진행했는데요</span><span style=\"color: #000000;\">,&nbsp;</span><span style=\"color: #000000;\">사소한 버그부터 불편하다고 생각하는 동선</span><span style=\"color: #000000;\">,&nbsp;</span><span style=\"color: #000000;\">혹은<span>&nbsp;</span></span><span style=\"color: #000000;\">추가<span>&nbsp;</span></span><span style=\"color: #000000;\">기획 아이디어 등 수준 높은 피드백을 받을<span>&nbsp;</span></span><span style=\"color: #000000;\">수 있었습니다</span><span style=\"color: #000000;\">.<span>&nbsp;</span></span><span style=\"color: #000000;\">또한 참여하신 모두가&nbsp;개발자이신 만큼&nbsp;이를 개선할 방법을 제시해주시기도 하셨습니다</span><span style=\"color: #000000;\">.<span>&nbsp;</span></span><span style=\"color: #000000;\">QA&nbsp;</span><span style=\"color: #000000;\">시나리오에 없는 내용들도 꼼꼼하게 봐주셨기 때문에 서비스가 더욱 견고해질<span>&nbsp;</span></span><span style=\"color: #000000;\">수<span>&nbsp;</span></span><span style=\"color: #000000;\">있었던 이유라고 생각합니다</span><span style=\"color: #000000;\">.<span>&nbsp;</span></span><span style=\"color: #000000;\">론칭 준비 중인 쇼룸도 자체<span>&nbsp;</span></span><span style=\"color: #000000;\">QA를</span><span style=\"color: #000000;\">&nbsp;진행해서 굉장히 큰 도움을 받았는데요, 개인적으로 저는 이런 팀 문화가 매우 만족스럽습니다.&nbsp;</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1495\" data-origin-height=\"1409\"><span data-url=\"https://blog.kakaocdn.net/dn/cSFANb/btsIhfOy67j/SBBVQKBuCLj5BNPXHbLfBk/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/cSFANb/btsIhfOy67j/SBBVQKBuCLj5BNPXHbLfBk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcSFANb%2FbtsIhfOy67j%2FSBBVQKBuCLj5BNPXHbLfBk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"1495\" data-origin-height=\"1409\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">개발을 하던 와중에 마주한 몇 가지 이슈 상황이 있었는데요, 몇 가지 소개해보도록 하겠습니다.</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">Oracle DB에서 pk가 순차적(serial)으로 채번 되지 않는 이유가 있었습니다.</h4>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"471\" data-origin-height=\"474\"><span data-url=\"https://blog.kakaocdn.net/dn/mWaQd/btsIhgUdCDf/Avu9Khhs4WB7TvSk43khtK/img.gif\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/mWaQd/btsIhgUdCDf/Avu9Khhs4WB7TvSk43khtK/img.gif\" srcset=\"https://blog.kakaocdn.net/dn/mWaQd/btsIhgUdCDf/Avu9Khhs4WB7TvSk43khtK/img.gif\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"471\" data-origin-height=\"474\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">기능을 구현하고&nbsp;</span><span style=\"color: #000000;\">dev&nbsp;</span><span style=\"color: #000000;\">테스트를 진행해 보니&nbsp;</span><span style=\"color: #000000;\">pk</span><span style=\"color: #000000;\">가 순차적이지 않고&nbsp;들쑥날쑥이었습니다들쑥날쑥 이었습니다.&nbsp;</span><span style=\"color: #000000;\">저는 주로 사용했던&nbsp;</span><span style=\"color: #000000;\">PostgreSQL</span><span style=\"color: #000000;\">에서는&nbsp;</span><span style=\"color: #000000;\">Serial&nbsp;</span><span style=\"color: #000000;\">데이터 타입이 존재해 기본적으로&nbsp;</span><span style=\"color: #000000;\">pk</span><span style=\"color: #000000;\">는 순서가 보장되었지만&nbsp;</span><span style=\"color: #000000;\">Oracle</span><span style=\"color: #000000;\">은 뭔가 달랐습니다</span><span style=\"color: #000000;\">.<span>&nbsp;</span></span><span style=\"color: #000000;\">OracleDB</span><span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">환경은&nbsp;</span><span style=\"color: #000000;\">RAC(Real Application Cluster)&nbsp;</span><span style=\"color: #000000;\">구조로 되어있습니다</span><span style=\"color: #000000;\">.&nbsp;</span><span style=\"color: #000000;\">네트워크 단의&nbsp;</span><span style=\"color: #000000;\">L4, L7&nbsp;</span><span style=\"color: #000000;\">스위치 같은&nbsp;</span><span style=\"color: #000000;\">로드밸런서와</span><span style=\"color: #000000;\">&nbsp;비슷한 역할을 하고 있는데요</span><span style=\"color: #000000;\">, N</span><span style=\"color: #000000;\">개의&nbsp;</span><span style=\"color: #000000;\">Instance</span><span style=\"color: #000000;\">를&nbsp;통해 동일&nbsp;</span><span style=\"color: #000000;\">DB</span><span style=\"color: #000000;\">에&nbsp;접근할 수 있는 방법입니다</span><span style=\"color: #000000;\">.</span></p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">N</span><span style=\"color: #000000;\">개의&nbsp;</span><span style=\"color: #000000;\">Instance DB</span><span style=\"color: #000000;\">의 자원을 이용하기 때문에</span><span style=\"color: #000000;\">,&nbsp;</span><span style=\"color: #000000;\">한&nbsp;node&nbsp;node의 부하를 분산시키는 효과를 갖습니다</span><span style=\"color: #000000;\">.</span></p>\n<p style=\"text-align: left;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">위 RAC 구조에서 Sequence를 생성하게 되면 설정되어 있는 CACHE 옵션만큼 채번을 해 메모리로 올려둡니다. (CACHE 옵션이 20이라면 1번 node에서 1~20까지, 2번 node에서 21~40까지...)</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">실제 트랜잭션에서는 커넥션을 맺은 Instance의 채번 된 sequence를 가져오게 됩니다. 그래서 순서가 보장되지 않을 수 있는 것이죠 (1, 21, 41...) pk 채번이 비즈니스 적으로 반드시 순차적인 Sequence가 보장되어야 할 때(주문, 결제 관련 트랜잭션 등)는 ORDER 옵션을 사용해 순서를 보장할 수 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">그러나 RAC 구조에서&nbsp;CACHE + ORDER 옵션을 설정하고 Sequence의 NEXTVAL()을 사용해 채번을 하게 되면 Data Dictionary가 자주 변경 되고 E<span><span>xclusive instance SV lock을 필요로 하게 됩니다. 이는 동일 세션에서 Hang을 유발할 수 있기 때문에 DB에 부하를 주게 됩니다.<span>&nbsp;</span></span></span><span><span>Cache 크기를 크게 잡는다면 메모리 휘발로 인해 오히려 사용되지 않을 수 있으므로 적절한 캐시 크기를 잡는 것이 중요합니다.</span></span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">따라서 보통의 경우 유일함(Unique)만을 보장하고 싶다면 NO ORDER 옵션을 통해 Sequence를 채번하는 것이 좋습니다. 오라클에서도 CACHE 크기는 크게 잡고 NO ORDER 옵션을 권장합니다. (캐싱을 하지 않는 NO CACHE 옵션은 Oracle에서도 사용하지 말라고 권고) RAC에 대해 더 알고 싶다면<span>&nbsp;</span><a style=\"color: #0070d1;\" href=\"https://docs.oracle.com/en/database/oracle/oracle-database/19/racad/introduction-to-oracle-rac.html#GUID-D04AA2A7-2E68-4C5C-BD6E-36C62427B98E\">Oracle 공식 가이드</a>를 참고하세요.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">SP 대신 JPA, QueryDSL을 사용했습니다.</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">MSSQL의 경우에는 SP(Stored Procedure)라고 불리는 방식의 쿼링을 하는데 native query를 미리 만들어두고 이를 검수, 배포하여 어플리케이션에서 사용합니다. 쿼리의 성능을 보장하고 전사적으로 모니터링을 하기 위함입니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Oracle / MySQL의 경우에는 SP를 사용을 권장하지 않기 때문에 다른 DB팀의 검수 및 배포하지 않습니다. 대신 DB Consulting Jira를 통해 검수를 진행합니다. 사내에서 JPA, queryDSL 적용 가이드가 있었는데 다만 저희는 이러한 프로세스를 인지하지 못했었는데요, 실제로 dev 테스트 중에 DB Index를 설정하지 않아 조회 시 Full Scan이 일어났고 실행 시간이 매우 길어졌습니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">그 후 실제 적용할 Query는 만들었으나 이를 queryDSL로 포팅하는 과정에서 애를 먹었습니다. Admin에서 구매건별 구매자, 구매 금액등을 검색조건과 매핑하기 위한 화면을 그릴 때 필요한 상황이 있었는데요, 구매데이터를 저희가 생성하는 게 아니라 링크루 서비스로부터 받아오기 때문에 join조건이 상당히 복잡한 쿼리였습니다. 그 와중에 from절과 join절에 서브 쿼리를 사용하는 것을 queryDSL에서 지원을 하지 않아 의도한 대로 쿼리를 만들어낼 수 없는 이슈였습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여러 자료를 찾다가 subQuery 자체를 마치 View처럼 Entity화 하는 방법을 발견했고 이를 적용해 해결할 수 있었습니다.&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1346\" data-origin-height=\"1626\"><span data-url=\"https://blog.kakaocdn.net/dn/btOYPp/btsIgOqqvcT/OWJEHYQvgKSjgIBNThVbtK/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/btOYPp/btsIgOqqvcT/OWJEHYQvgKSjgIBNThVbtK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbtOYPp%2FbtsIgOqqvcT%2FOWJEHYQvgKSjgIBNThVbtK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"1346\" data-origin-height=\"1626\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">사내에선 다양한 도구를 활용해 프러덕을 만들어갑니다.</h4>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1116\" data-origin-height=\"541\"><span data-url=\"https://blog.kakaocdn.net/dn/ecm9lG/btsIhArrUWA/WVZeDuwdz38blHp8SWnk8K/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/ecm9lG/btsIhArrUWA/WVZeDuwdz38blHp8SWnk8K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fecm9lG%2FbtsIhArrUWA%2FWVZeDuwdz38blHp8SWnk8K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"1116\" data-origin-height=\"541\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">사내에서 정말 다양한 개발도구를 이용해 업무를 진행합니다. it 인프라를 적극 활용하는 것이 빠르고 정확하게 서비스를 만드는 과정이라고 생각합니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">Git &amp; Github</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">개발소스는 형상관리 툴 중하나인 Git을 이용하고 있으며 사내 GitHub에서 소스 관리하고 있습니다. 협업을 하기 위한 필수 도구로 여러 개발자가 한 어플리케이션을 개발할 때 작업 내용, history 등을 볼 수 있습니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">Jira</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">모든 업무의 끝과 끝에는 Jira가 있습니다. 업무의 최소 단위이기에 History 관리가 잘되어야 합니다. 사내 Infra 요청에도 Jira를 사용하기에 익숙해지는 것이 좋을 것 같습니다. 각종 문의도 jira를 통합니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">Saturn Initializr</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">세상에는 다양한 개발 도구와 이를 도와주는 라이브러리들이 있는데 보안을 이유로 사내에서만 사용하는 패키지들이 있습니다. 백엔드 어플리케이션을 생성할 때 필요한 사내 패키지를 주입해 만들어주는 Saturn Initializr를 통해 더욱 빠르게 만들 수 있습니다.&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">Fusion &amp; 사내 VM 툴</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">사내 Cloud Native 오케스트레이션 툴인 Fusion은 RedHat이라는 회사에서 만든 Openshift라는 툴입니다. Github 주소로부터 개발소스를 불러와 빌드, 배포하고 라우팅 할 수 있는 강력한 도구입니다. BSD 같은 큰 이벤트를 앞두고 아주 쉽게 똑같은 서버를 복제해서 운영할 수 있기 때문에 개발자들에게 있어 필수로 다뤄야 하는 툴이라고 생각합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Cloud 자원이 아닌 가상 물리 서버인 Virtual Machine은 사내에선 다른 이름으로 제공해주고 있습니다. 저는 리눅스 서버를 다루는 게 편해서 해커톤이나 메세지큐 적용을 위한 poc를 해당 서비스를 통해 이용해 본 경험이 있습니다. 요새는 대부분의 툴들을 Docker 이미지로 받을 수 있으니 fusion을 이용하는 추세입니다. 사내에 docker 이미지 저장소에 원하는 이미지가 없다면 보안검수를 통해 등록하는 것이 가능합니다.&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">Kibana &amp; 사내 로그 모니터링 시스템</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">쿠버네티스 환경에서 최소 단위의 하드웨어, 즉 서버를 Pod라고 부르는데 이 Pod 개수가 수십, 수백 개가 되면 각 서버 내에 적재되는 로그를 찾기가 매우 어렵습니다. Pod에 쌓이는 로그를 Elastic Search라는 검색엔진을 통해 취합하고 이를 시각화하는 도구인 Kibana를 통해 타임라인별 로그를 확인할 수 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">개발자가 유의미하다고 판단되는 로그를 모아 볼 수 있게 한 사내 서비스도 있습니다. 개발 환경별로 패키지가 제공되어 매우 간편하며 fusion을 이용하지 않는 기존 C# 닷넷에서도 해당 로깅 시스템을 이용하고 있습니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">nGrinder</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">부하 테스트를 위한 툴입니다. Naver에서 오픈소스로 만들었고 서버가 견딜 수 있는 트래픽을 의도적으로 부하를 주어 성능 테스트를 진행할 때 사용합니다. 이번 꿀템의 경우도 실제 서비스에 얼마나 많은 사람들이 방문할지 모르기 때문에 아주 많은 성능 테스트를 진행했습니다. ride가 10만 건, 100만 건 일 때 스트레스 테스트도 문제없었습니다. nGrinder 환경 세팅은 fusion을 통해 세팅할 수 있습니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">Datadog</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">사내에서 사용하는 APM(Application Performance Monitoring) 툴입니다. 운영 중인 어플리케이션의 요청이 기록으로 남기 때문에 타임라인 별로 트래픽을 비교하고 에러 건수를 확인할 수 있습니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"626\" data-origin-height=\"893\"><span data-url=\"https://blog.kakaocdn.net/dn/Em7AC/btsIjdhsHcD/HSJ156CrAKphjQATvPK00K/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/Em7AC/btsIjdhsHcD/HSJ156CrAKphjQATvPK00K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FEm7AC%2FbtsIjdhsHcD%2FHSJ156CrAKphjQATvPK00K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"626\" data-origin-height=\"893\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Dependency Map 등을 통해 에러가 어느 지점에서 발생했는지 유추할 수 있어 에러 추적에 용이합니다. 또한 경보 체계를 만들어 장애 발생 시 Teams나 Slack으로 alert이 갈 수 있도록 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"306\" data-origin-height=\"593\"><span data-url=\"https://blog.kakaocdn.net/dn/bmbIPX/btsIioRixsp/pkYUzebQvjywqEm8kqlp3k/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bmbIPX/btsIioRixsp/pkYUzebQvjywqEm8kqlp3k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbmbIPX%2FbtsIioRixsp%2FpkYUzebQvjywqEm8kqlp3k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"306\" data-origin-height=\"593\"/></span></figure>\n</p>\n<h4 style=\"text-align: left;\" data-ke-size=\"size20\">&nbsp;</h4>\n<h4 style=\"text-align: left;\" data-ke-size=\"size20\"><span style=\"color: #000000;\">이번</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">서비스를</span><span style=\"color: #000000;\"><span>&nbsp;</span>런칭하면서<span>&nbsp;</span></span><span style=\"color: #000000;\">이런</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">의의가</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">있다고</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">생각합니다</span><span style=\"color: #000000;\">.</span></h4>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>급하게 POC를&nbsp;진행했음에도 불구하고&nbsp;빅스마일데이 기간 동안&nbsp;장애 없이 서비스했다는&nbsp;점</li>\n<li><span style=\"color: #000000;\">개발 조직으로부터 시작된 서비스 &rarr;<span>&nbsp;</span></span><span style=\"color: #000000;\">아이디어를</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">제시하는</span><span style=\"color: #000000;\"><span>&nbsp;것&nbsp;</span>뿐아니라<span>&nbsp;</span></span><span style=\"color: #000000;\">구현까지</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">단기간에</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">이루어진</span><span style=\"color: #000000;\"><span>&nbsp;</span></span><span style=\"color: #000000;\">케이스</span></li>\n<li>프러덕<span style=\"color: #000000;\">&nbsp;</span><span style=\"color: #000000;\">디벨롭은</span><span style=\"color: #000000;\">&nbsp;누구나 챌린지<span>&nbsp;</span></span><span style=\"color: #000000;\">할 수<span>&nbsp;</span></span><span style=\"color: #000000;\">있다</span><span style=\"color: #000000;\">. &rarr;&nbsp;</span><span style=\"color: #000000;\">긍정적인 영향 전파</span></li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">결국 꿀템이 오픈될 수 있었던 이유는 유관부서의 적극적인 협조가 있었기에 가능했습니다. 이 자리를 빌려 다시 한번 감사하다는 말씀드립니다.</span><span style=\"color: #000000;\">꿀템은 댓글 기능, 신고하기 기능 등 다양한 신규 기능을 가지고 한가위 빅세일에 다시 한번 진행할 예정입니다! 앞으로 성장할 꿀템 서비스를 잘 지켜봐 주세요!</span></p>",
        "contentSnippet": "안녕하세요. Web Frontend팀 이민하입니다.\n \n지난 편에서 꿀템 서비스를 기획하고 필요한 개념들의 이름을 지어주며 이를 바탕으로 데이터베이스를 설계해 보았습니다. 이번 편에서는 어떤 기술 스택을 선택했는지 소개하도록 하겠습니다.\n \n기술 스택 선택과 개발\n\n\n \nExternal 망에는 기존에 BSD 프론트엔드 영역 어플리케이션들이 있습니다. node.js와 경량 웹프레임워크인 fastify로 되어있습니다. 프론트에서 api를 호출하면 attraction 집계 어플리케이션이 메인 데이터 저장소인 Oracle DB에서 데이터를 조회해 옵니다. 구매내역, 링크루 등 외부 api를 호출한 결과도 전달해 줍니다. \n저장된 데이터는 Admin화면을 통해 관리할 수 있습니다. 누가 어떤 피드를 작성했고 누가 좋아요 버튼을 눌렀는지, 구매는 얼마나 일어났는지 등을 확인할 수 있습니다.\n \n프론트엔드는 별도의 서버를 구축하지 않고 플러그인 형태로 개발되었습니다.\nevent  관련 어플리케이션은 프론트엔드 이름이 붙어있지만 여러 프로모션 영역의 비즈니스 로직이 많이 들어있는 어플리케이션입니다. 이번 BSD는 랭킹 탭 옆에 신규 탭으로 꿀템 탭이 신설될 것이므로 event 어플리케이션 안에 신규 생성한 attraction 어플리케이션을 번들 형태로 import 했습니다. \n\n\n\nTypescript, React 18.2\nTanstack query (aka. react-query) \napi fetching 기능을, 꿀템의 등록/편집/좋아요 처리에 개별적으로 상태를 관리하지 않아도 되서 개발에 유리하였고요\nTanstack virtual을 이용해 무한스크롤 기능을 구현하였습니다.\nevent-fe와 마찬가지로 Fastify 프레임워크를 사용하였습니다.\nVite로 번들링 하여 사내 배포시스템을 통해 배포하였습니다.\n또 아래의 특징을 갖고 있습니다.\nattraction 집계 api 호출 및 사용자 입력값 검증 (xss 방어)\n이벤트 프론트 저장소가 분리되어 있고 꿀템 저장소(attraction 프론트엔드)도 별도라서 꿀템 쪽 fastify용 코드는 attraction 프론트에서 개발하고 결과물을 fastify plugin 형태의 npm 패키지로 생성해서 이벤트 프론트 쪽에서 가져다 쓰는 방식으로 구현\n개발 중에는 attraction 프론트엔드에서 이벤트 프론트의 구성과 유사하게 dev server를 띄워서 개발하였습니다.\n \n백엔드의 기술스택은 다음과 같습니다.\n\n\n \n이벤트 영역에서는 C# 닷넷과 Node.js로 이루어진 어플리케이션이 많은데 팀 내에서 처음으로 Spring과 Kotlin을 적용하여 어플리케이션을 개발했습니다. 오라클을 사용하니 Stored Procedure 대신 jpa와 QueryDSL을 적용하였습니다.\nAdmin 서비스는 스프링 멀티모듈로 만들어 웹 UI와 oracle에 접속할 api가 같은 도메인 모델을 공유하도록 하였습니다.\n기존 사내에서 사용되는 공통 Admin 시스템은 사용하는 모든 도메인이 관련 프론트엔드 저장소 한 곳에 있다 보니 개발, 배포가 번거로울 때가 있습니다. 프로젝트가 무거워 빌드에도 시간이 꽤 걸리고 어플리케이션 별로 자체 스케일링하기 어렵습니다. 관련 어드민에서는 외부 시스템과의 연동을 위해 SSO(Single Sign On)을 지원합니다. 이를 이용해 사내 쿠버네티스 시스템인 fusion에 올릴 수 있는 java/kotlin, node.js 등으로 변경하면 관리포인트가 줄어 유지보수에 매우 도움이 됩니다. 또한 닷넷 프레임웍을 쓰지 않기 때문에 맥북으로 개발이 가능해집니다. 하지만 사내 어드민 공통 기능은 자체적으로 구현해야 하고 별도의 admin qa를 거쳐야 하므로 개발기간이 길어질 수 있어 개발과 유지보수의 trade off 관계라고 생각합니다. 팀 내에서는 같은 기술스택이지만 다른 어드민을 작업하고 있었기 때문에 수월하게 적용할 수 있었습니다.\nHTMX + Thymeleaf → 마찬가지로 cshtml이 아닌 htmx를 이용하여 admin ui를 구성했습니다. 완성도보다는 빠르게 기능을 구현하는데 목적을 둔 어플리케이션이지만 htmx 적용을 테크니컬 챌린지라고 말씀드릴 수 있습니다. (물론 일정이 촉박해질수록 후회를 안 할 수가 없었지만..)\nHTMX에 대해 한마디 하자면...\nhtml만 봐도 이해하기 쉽습니다.\n\n\n \nhtmx는 별도의 스크립트를 이용하지 않고 서버와 ajax 통신을 도와주는 프론트엔드 웹 프레임워크입니다. 기존에 통신하기 위해 수많은 js 코드를 만들어야 했는데 보일러 플레이트를 꽤 많이 없애 코드량 자체가 줄어드는 효과가 있습니다.\n“hx-” 프리픽스가 붙은 속성을 선언해 간편하게 원하는 데이터를 만들어 낼 수 있습니다. 필요한 기능은 Extension으로 만들 수 있어 사용성이 무궁무진합니다. 또 빌드 단계도 별도로 없어 즉시 개발할 수 있게 도와줍니다.\n장단점이 아주 명확한데요, 장점은 서버 통신할 때 js는 정말 사용하지 않고 html 본연의 목적에 충실할 수 있다. \n특히 thymeleaf와 결합하면 레이아웃 재사용으로 리액트의 컴포넌트 재사용과 같은 효과를 가질 수 있습니다. 백엔드 개발자 혼자서 프론트를 만들 수 있다는 것도 장점입니다. \n단점은 json 데이터로 api 통신을 주고받았다 보니까 받았다 보니까 html 시맨틱 태그를 응답받는 것에 적응할 시간이 필요하다는 것과  간단한 통신을 해도 쉽지 않다는 것입니다. 특히 컨트롤러에서 @RequestBody만 주로 사용해 오다가 @RequestPart, @ModelAttribute로 바꾸고 data class가 바인딩되지 않는 이슈는 한참을 헤매게 만들었습니다.\n데이터를 주고받는 데이터 패킷량도 많아져 트래픽이 많이 몰리는 프론트 서비스에서는 사용이 부담스러울 수 있습니다. \n무엇보다 필요한 기능은 결국 js를 써야 합니다 써야 합니다. Csv 엑셀 다운로드, form reset이나 date-picker를 사용하기  위한 공통 함수 작성.. 그리고 typescript를 쓸 수 없다..는 것이 또 큰 단점이죠. Htmx 레퍼런스가 많이 없어 거대한 js 덩어리를 디버깅해 가며 입맛에 맞게 수정했던 경험도 있네요. \nhtmx에 대해 아주 신랄하게 까는 아티클이 공식 홈페이지에 게시되어 있습니다..(https://htmx.org/essays/htmx-sucks/)\n어플리케이션 구현할 때 기술스택에 있어서 정답은 없습니다. fastify 대신 express를 쓸 수도 있고 nest.js를 적용할 수도 있습니다. spring 대신에 ktor를 사용할 수도, htmx 대신에 handlebar나 rythm 템플릿, jsp를 쓸 수도 있고요. 다양한 기술들은 저마다의 다양한 장단점을 가지고 있습니다. \n \n2주간 매일 스크럼을 진행했습니다.\n짧게는 1분 길게는 10분 정도의 데일리 스크럼을 진행했습니다. 현재 진행하고 있는 작업과 진척 상황을 공유했습니다. 데일리 스크럼을 통해 프로젝트의 불확실성을 조율할 수 있었고, 짧은 시간 동안만 진행하기 때문에 불필요한 추가 업무나 의논이 생기지 않았습니다. 또 별도의 회의실이 필요하지 않아 자리에 모여 진행할 수 있었습니다.\n\n  \n\n \n팀 내에서 자체 QA를 진행했습니다.\n서비스가 론칭되려면 QA(Quality Assurance) 단계를 거쳐 서비스의 이상은 없는지 확인을 하는데요 QE팀과 담당 PM분들이 같이 진행을 합니다. 사내 PM 분들의 리소스가 넉넉한 편이 아닙니다. 이때 저희 팀원분들의 자체 QA 단계를 먼저 진행해 굉장히 많은 도움을 받을 수 있었습니다. 서비스의 대략적인 프로세스만 설명하고 별도의 가이드가 제공되지 않은 상태로 자체 QA를 진행했는데요, 사소한 버그부터 불편하다고 생각하는 동선, 혹은 추가 기획 아이디어 등 수준 높은 피드백을 받을 수 있었습니다. 또한 참여하신 모두가 개발자이신 만큼 이를 개선할 방법을 제시해주시기도 하셨습니다. QA 시나리오에 없는 내용들도 꼼꼼하게 봐주셨기 때문에 서비스가 더욱 견고해질 수 있었던 이유라고 생각합니다. 론칭 준비 중인 쇼룸도 자체 QA를 진행해서 굉장히 큰 도움을 받았는데요, 개인적으로 저는 이런 팀 문화가 매우 만족스럽습니다. \n\n\n \n개발을 하던 와중에 마주한 몇 가지 이슈 상황이 있었는데요, 몇 가지 소개해보도록 하겠습니다.\nOracle DB에서 pk가 순차적(serial)으로 채번 되지 않는 이유가 있었습니다.\n\n\n \n기능을 구현하고 dev 테스트를 진행해 보니 pk가 순차적이지 않고 들쑥날쑥이었습니다들쑥날쑥 이었습니다. 저는 주로 사용했던 PostgreSQL에서는 Serial 데이터 타입이 존재해 기본적으로 pk는 순서가 보장되었지만 Oracle은 뭔가 달랐습니다. OracleDB 환경은 RAC(Real Application Cluster) 구조로 되어있습니다. 네트워크 단의 L4, L7 스위치 같은 로드밸런서와 비슷한 역할을 하고 있는데요, N개의 Instance를 통해 동일 DB에 접근할 수 있는 방법입니다.\nN개의 Instance DB의 자원을 이용하기 때문에, 한 node node의 부하를 분산시키는 효과를 갖습니다.\n \n위 RAC 구조에서 Sequence를 생성하게 되면 설정되어 있는 CACHE 옵션만큼 채번을 해 메모리로 올려둡니다. (CACHE 옵션이 20이라면 1번 node에서 1~20까지, 2번 node에서 21~40까지...)\n실제 트랜잭션에서는 커넥션을 맺은 Instance의 채번 된 sequence를 가져오게 됩니다. 그래서 순서가 보장되지 않을 수 있는 것이죠 (1, 21, 41...) pk 채번이 비즈니스 적으로 반드시 순차적인 Sequence가 보장되어야 할 때(주문, 결제 관련 트랜잭션 등)는 ORDER 옵션을 사용해 순서를 보장할 수 있습니다.\n그러나 RAC 구조에서 CACHE + ORDER 옵션을 설정하고 Sequence의 NEXTVAL()을 사용해 채번을 하게 되면 Data Dictionary가 자주 변경 되고 Exclusive instance SV lock을 필요로 하게 됩니다. 이는 동일 세션에서 Hang을 유발할 수 있기 때문에 DB에 부하를 주게 됩니다. Cache 크기를 크게 잡는다면 메모리 휘발로 인해 오히려 사용되지 않을 수 있으므로 적절한 캐시 크기를 잡는 것이 중요합니다.\n따라서 보통의 경우 유일함(Unique)만을 보장하고 싶다면 NO ORDER 옵션을 통해 Sequence를 채번하는 것이 좋습니다. 오라클에서도 CACHE 크기는 크게 잡고 NO ORDER 옵션을 권장합니다. (캐싱을 하지 않는 NO CACHE 옵션은 Oracle에서도 사용하지 말라고 권고) RAC에 대해 더 알고 싶다면 Oracle 공식 가이드를 참고하세요.\n \nSP 대신 JPA, QueryDSL을 사용했습니다.\nMSSQL의 경우에는 SP(Stored Procedure)라고 불리는 방식의 쿼링을 하는데 native query를 미리 만들어두고 이를 검수, 배포하여 어플리케이션에서 사용합니다. 쿼리의 성능을 보장하고 전사적으로 모니터링을 하기 위함입니다.\nOracle / MySQL의 경우에는 SP를 사용을 권장하지 않기 때문에 다른 DB팀의 검수 및 배포하지 않습니다. 대신 DB Consulting Jira를 통해 검수를 진행합니다. 사내에서 JPA, queryDSL 적용 가이드가 있었는데 다만 저희는 이러한 프로세스를 인지하지 못했었는데요, 실제로 dev 테스트 중에 DB Index를 설정하지 않아 조회 시 Full Scan이 일어났고 실행 시간이 매우 길어졌습니다. \n그 후 실제 적용할 Query는 만들었으나 이를 queryDSL로 포팅하는 과정에서 애를 먹었습니다. Admin에서 구매건별 구매자, 구매 금액등을 검색조건과 매핑하기 위한 화면을 그릴 때 필요한 상황이 있었는데요, 구매데이터를 저희가 생성하는 게 아니라 링크루 서비스로부터 받아오기 때문에 join조건이 상당히 복잡한 쿼리였습니다. 그 와중에 from절과 join절에 서브 쿼리를 사용하는 것을 queryDSL에서 지원을 하지 않아 의도한 대로 쿼리를 만들어낼 수 없는 이슈였습니다.\n여러 자료를 찾다가 subQuery 자체를 마치 View처럼 Entity화 하는 방법을 발견했고 이를 적용해 해결할 수 있었습니다. \n\n\n \n사내에선 다양한 도구를 활용해 프러덕을 만들어갑니다.\n\n\n사내에서 정말 다양한 개발도구를 이용해 업무를 진행합니다. it 인프라를 적극 활용하는 것이 빠르고 정확하게 서비스를 만드는 과정이라고 생각합니다.\nGit & Github\n개발소스는 형상관리 툴 중하나인 Git을 이용하고 있으며 사내 GitHub에서 소스 관리하고 있습니다. 협업을 하기 위한 필수 도구로 여러 개발자가 한 어플리케이션을 개발할 때 작업 내용, history 등을 볼 수 있습니다.\nJira\n모든 업무의 끝과 끝에는 Jira가 있습니다. 업무의 최소 단위이기에 History 관리가 잘되어야 합니다. 사내 Infra 요청에도 Jira를 사용하기에 익숙해지는 것이 좋을 것 같습니다. 각종 문의도 jira를 통합니다.\nSaturn Initializr\n세상에는 다양한 개발 도구와 이를 도와주는 라이브러리들이 있는데 보안을 이유로 사내에서만 사용하는 패키지들이 있습니다. 백엔드 어플리케이션을 생성할 때 필요한 사내 패키지를 주입해 만들어주는 Saturn Initializr를 통해 더욱 빠르게 만들 수 있습니다. \nFusion & 사내 VM 툴\n사내 Cloud Native 오케스트레이션 툴인 Fusion은 RedHat이라는 회사에서 만든 Openshift라는 툴입니다. Github 주소로부터 개발소스를 불러와 빌드, 배포하고 라우팅 할 수 있는 강력한 도구입니다. BSD 같은 큰 이벤트를 앞두고 아주 쉽게 똑같은 서버를 복제해서 운영할 수 있기 때문에 개발자들에게 있어 필수로 다뤄야 하는 툴이라고 생각합니다.\nCloud 자원이 아닌 가상 물리 서버인 Virtual Machine은 사내에선 다른 이름으로 제공해주고 있습니다. 저는 리눅스 서버를 다루는 게 편해서 해커톤이나 메세지큐 적용을 위한 poc를 해당 서비스를 통해 이용해 본 경험이 있습니다. 요새는 대부분의 툴들을 Docker 이미지로 받을 수 있으니 fusion을 이용하는 추세입니다. 사내에 docker 이미지 저장소에 원하는 이미지가 없다면 보안검수를 통해 등록하는 것이 가능합니다. \nKibana & 사내 로그 모니터링 시스템\n쿠버네티스 환경에서 최소 단위의 하드웨어, 즉 서버를 Pod라고 부르는데 이 Pod 개수가 수십, 수백 개가 되면 각 서버 내에 적재되는 로그를 찾기가 매우 어렵습니다. Pod에 쌓이는 로그를 Elastic Search라는 검색엔진을 통해 취합하고 이를 시각화하는 도구인 Kibana를 통해 타임라인별 로그를 확인할 수 있습니다.\n개발자가 유의미하다고 판단되는 로그를 모아 볼 수 있게 한 사내 서비스도 있습니다. 개발 환경별로 패키지가 제공되어 매우 간편하며 fusion을 이용하지 않는 기존 C# 닷넷에서도 해당 로깅 시스템을 이용하고 있습니다.\nnGrinder\n부하 테스트를 위한 툴입니다. Naver에서 오픈소스로 만들었고 서버가 견딜 수 있는 트래픽을 의도적으로 부하를 주어 성능 테스트를 진행할 때 사용합니다. 이번 꿀템의 경우도 실제 서비스에 얼마나 많은 사람들이 방문할지 모르기 때문에 아주 많은 성능 테스트를 진행했습니다. ride가 10만 건, 100만 건 일 때 스트레스 테스트도 문제없었습니다. nGrinder 환경 세팅은 fusion을 통해 세팅할 수 있습니다.\nDatadog\n사내에서 사용하는 APM(Application Performance Monitoring) 툴입니다. 운영 중인 어플리케이션의 요청이 기록으로 남기 때문에 타임라인 별로 트래픽을 비교하고 에러 건수를 확인할 수 있습니다. \n \n\n\n \nDependency Map 등을 통해 에러가 어느 지점에서 발생했는지 유추할 수 있어 에러 추적에 용이합니다. 또한 경보 체계를 만들어 장애 발생 시 Teams나 Slack으로 alert이 갈 수 있도록 합니다.\n \n\n\n \n이번 서비스를 런칭하면서 이런 의의가 있다고 생각합니다.\n급하게 POC를 진행했음에도 불구하고 빅스마일데이 기간 동안 장애 없이 서비스했다는 점\n개발 조직으로부터 시작된 서비스 → 아이디어를 제시하는 것 뿐아니라 구현까지 단기간에 이루어진 케이스\n프러덕 디벨롭은 누구나 챌린지 할 수 있다. → 긍정적인 영향 전파\n결국 꿀템이 오픈될 수 있었던 이유는 유관부서의 적극적인 협조가 있었기에 가능했습니다. 이 자리를 빌려 다시 한번 감사하다는 말씀드립니다.꿀템은 댓글 기능, 신고하기 기능 등 다양한 신규 기능을 가지고 한가위 빅세일에 다시 한번 진행할 예정입니다! 앞으로 성장할 꿀템 서비스를 잘 지켜봐 주세요!",
        "guid": "https://dev.gmarket.com/111",
        "categories": [
          "Infra"
        ],
        "isoDate": "2024-06-30T10:09:53.000Z"
      },
      {
        "creator": "지마켓 기술블로그",
        "title": "신규 서비스 &quot;꿀템&quot;을 만들기 위한 여정(네? 다음달까지요?) -1편",
        "link": "https://dev.gmarket.com/110",
        "pubDate": "Sun, 30 Jun 2024 19:05:49 +0900",
        "author": "지마켓 기술블로그",
        "comments": "https://dev.gmarket.com/110#entry110comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"615\" data-origin-height=\"838\"><span data-url=\"https://blog.kakaocdn.net/dn/cjtYHr/btsIhLfkog7/C7WNooK1WGD670vhLOcSK0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/cjtYHr/btsIhLfkog7/C7WNooK1WGD670vhLOcSK0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcjtYHr%2FbtsIhLfkog7%2FC7WNooK1WGD670vhLOcSK0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"615\" data-origin-height=\"838\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">안녕하세요. Web Frontend팀 이민하입니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">지난 빅스마일데이에 첫 론칭한 꿀템 피드 서비스! 이 서비스를 만들기 위한 여정을 여러분께 소개드리려고 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">Intro</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">시작은 디지털 빅세일이 끝난 2월 말.. 저희 팀장님의&nbsp;한마디에서&nbsp;시작했습니다.</p>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">\"챗GBT를 우리만 보기에 아깝지 않아..!?\"</blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_chat-gbt.png\" data-origin-width=\"1280\" data-origin-height=\"803\"><span data-url=\"https://blog.kakaocdn.net/dn/9VXNT/btsIg1wtb5h/DNPWwHp5qiV7FwJN20xHF0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/9VXNT/btsIg1wtb5h/DNPWwHp5qiV7FwJN20xHF0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F9VXNT%2FbtsIg1wtb5h%2FDNPWwHp5qiV7FwJN20xHF0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_chat-gbt.png\" data-origin-width=\"1280\" data-origin-height=\"803\"/></span></figure>\n</p>\n<p style=\"text-align: center;\" data-ke-size=\"size16\">챗GBT(Gmarket Best iTem)는 임직원분들이 직접 추천하는 상품을 모아둔 페이지로 하나하나가 진짜 꿀템입니다!</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">아깝다고 생각했습니다. 저도 GBT를 보며 많이 샀기 때문에 고객도 이 페이지를 같이 보면 구매가 많이 일어날 것이라고 생각했습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">추가로 고객들이 게시글을 작성할 수 있다면..? 그러면 고객들이 우리 사이트에서 놀 수 있는 공간이 되지 않을까?</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">또한 사내에서도 우리 프러덕에 커뮤니티 기능을 넣어보자는 니즈가 있었다고 들었습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">자신감이 생기기 시작했습니다. 우리 사이트에 새로운 활기를 불어넣어 줄 수 있을 것 같은 그런 자신감이 생겼습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">만들 수 있을 것 같은 기대감에 하나 잊어버린 것이 있었습니다.</p>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">\"아 맞다 나 신규 서비스 만들어 본 적 없지!\"</blockquote>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">네. 저는 입사하고 이벤트 플랫폼, 한반도 기획전, 패턴6를 담당하면서 기존 서비스의 개선 작업을 주로 해왔고 \"쇼룸\"이라는 서비스를 준비 중이었으나 아직 신규 서비스를 론칭해 본 경험은 없었습니다.&nbsp;그렇기 때문에 어디서부터 무엇을 작업해야 할지 머릿속에 그려지지 않았습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이 발표는 신규 서비스를 개발하려고 할 때 무엇을 준비해야 할지 막막한 \"개발자\"분들이 시행착오를 줄일 수 있도록 도움을 드리고자 준비하게 되었습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">지속 가능한 개발을 위한 설계</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">지속 가능한 설계란 보통 환경의 수용능력 범위 내에서 개발하는 것을 말하는, 도시설계에서 사용하는 개념인데요, 어플리케이션 개발에 있어서 개발 비용이 너무 많이 소모되지 않으면서 꾸준히 디벨롭하고 개선할 수 있는 프러덕을 만드는 것과 일맥상통한다고 생각합니다. 그리고 이를 위해 확장성을 고려한 설계가 필요했습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">첫 번째로 고민한 것은<span>&nbsp;</span><b>\"네이밍\"이었습니다.</b></h4>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"kishore_programmer_hardest_job.jpg\" data-origin-width=\"1200\" data-origin-height=\"1091\"><span data-url=\"https://blog.kakaocdn.net/dn/E2VtU/btsIipvUaqc/EMMTQ3NdzKisNDPBhwywC0/img.jpg\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/E2VtU/btsIipvUaqc/EMMTQ3NdzKisNDPBhwywC0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FE2VtU%2FbtsIipvUaqc%2FEMMTQ3NdzKisNDPBhwywC0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"kishore_programmer_hardest_job.jpg\" data-origin-width=\"1200\" data-origin-height=\"1091\"/></span></figure>\n</p>\n<p style=\"text-align: center;\" data-ke-size=\"size16\"><span data-alt=\"개발자에게 가장 어려운 일들\" data-phocus=\"phocus\" data-url=\"https://blog.kakaocdn.net/dn/KYfFS/btsIiOB8Idy/NGDiipC3CHuwPZXQ0JQrw0/img.jpg\"></span>개발자에게 가장 어려운 일들</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">개발자에게 있어 이름을 짓는다는 행위는 단순히 부르기 위한 목적보다 더 큰 의미가 있습니다. 이름만 듣고도 직관적으로 만드는 의도를 이해하는데 도움이 되어야 합니다. 저희도 구현하고자 하는 개념을 포괄할 수 있어야 한다고 생각했습니다. 또한 기존 개념과 헷갈리지 않도록 사내에서 사용되지 않는 단어를 선택해야 했습니다.&nbsp;그러다 문득</p>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">우리 사이트에서 놀 수 있어야 한다.. &rarr; 즐길 거리!? 그러면 게시글을 \"놀이 기구\"에 비유하면 어떨까?</blockquote>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">챗GBT는 Padlet이라는 공유 게시판 서비스를 이용하였는데 그 padlet안에 게시글을 포스팅할 수 있는 빈 보드에 해당하는 영역을 \"<b>Attraction</b>\"이라 명명했습니다. 어트랙션은 놀이 공원의 놀이 기구라는 뜻으로 사용되곤 하지만 실제로는 매력,<span>&nbsp;</span><b>즐길 거리,</b><span>&nbsp;</span>명소 등의 뜻을 가지고 있습니다. 부동산 개발 업계에서는 도시의 랜드마크나 코엑스의 별마당 도서관처럼 상업 시설 내 차별화를 두는 장소를 어트랙션이라고 부르기도 합니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Attraction에 들어갈 게시글 하나하나는 놀이기구,<span>&nbsp;</span><b>탈 것</b>을 의미하는 \"<b>Ride</b>\"로 부르기로 하였습니다. Attraction 하위에 존재하며 등록, 수정이 가능한<span>&nbsp;<b>컨텐츠</b>입니다.해당</span> 프로젝트에서 가장 중요한 개념이며 Ride의 퀄리티에 따라 이 서비스의 흥행이 정해질 것이라 생각했습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">마지막으로 Ride를 업로드할 수 있는 사람을 지칭하는 개념이 필요했습니다. 이 사람은 지마켓, 옥션의 회원 일 수도, 셀러 고객일 수도, 임직원 일 수도 있기 때문에 이를 포괄하는 개념이어야 했습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">그러므로 Ride의 탑승객을 의미하는 \"<b>Passenger</b>\"로 명명했습니다.&nbsp;그렇게&nbsp;핵심 개념인&nbsp;<b>Attraction</b>,<span>&nbsp;</span><b>Ride</b>,<span>&nbsp;</span><b>Passenger<span>&nbsp;</span></b>가 탄생했고 자연스레 이 프로젝트의 이름은 지마켓의 놀이공원, \"<b>G-world</b>\"가 되었습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">확장성을 염두에 두고 하위 속성을 정의하기 시작했습니다.</h4>\n<div id=\"SE-7018a7de-76c5-48e8-a382-557a8c7a8fa1\" style=\"color: #333333; text-align: start;\" data-compid=\"SE-7018a7de-76c5-48e8-a382-557a8c7a8fa1\" data-a11y-title=\"사진\">\n<div data-unitid=\"\" data-compid=\"SE-7018a7de-76c5-48e8-a382-557a8c7a8fa1\" data-direction=\"top\">\n<div id=\"SE-7018a7de-76c5-48e8-a382-557a8c7a8fa1\">\n<div>&nbsp;</div>\n<div data-unitid=\"SE-7018a7de-76c5-48e8-a382-557a8c7a8fa1\" data-compid=\"\" data-direction=\"top\"><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"936\" data-origin-height=\"611\"><span data-url=\"https://blog.kakaocdn.net/dn/pAiKg/btsIiOvq2kI/hOJpRplG7xakZV6x816Qlk/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/pAiKg/btsIiOvq2kI/hOJpRplG7xakZV6x816Qlk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FpAiKg%2FbtsIiOvq2kI%2FhOJpRplG7xakZV6x816Qlk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"693\" data-origin-width=\"936\" data-origin-height=\"611\"/></span></figure>\n</div>\n</div>\n</div>\n</div>\n<p style=\"color: #333333; text-align: center;\" data-ke-size=\"size16\">프로젝트 이름을 정하고나서 머릿속에 있는 내용을 화이트보드에 정리해봤습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">팀원들과 본격적으로 G-world의 얼개를 짜기 시작했습니다. 개발자가 기획하는 것이다 보니 어떤 식으로 접근해야 할지 몰랐습니다. 해당 페이지를 어디에 노출시킬 것이며 어떤 속성이 필요한지를 고민했습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Attraction은 챗GBT처럼 저희 영업본부 임직원 분들이 올릴 수도 있고, 고객들도 업로드할 수 있어야 했고<span>&nbsp;</span><span>상품을 공유했을 때 구매 적립받을 수 있도록 Linkrew 와의 연동이 필요하다고 생각했습니다. (Linkrew 란 누구나 상품 링크를 공유해 수익을 셰어 받는 지마켓의 신규 제휴서비스입니다.)</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>Ride는 상품은 구매 내역에서 불러오거나, 구매 내역 없이 단순히 상품을 추천하거나, 임직원이 올릴 수 있는 3가지 형태가 있을 수 있다고 판단했습니다. 그리고 구매 기록에 기반한 태그(첫 구매시기, 재구매 횟수 표시 등)를 게시하여 Ride의 리뷰 신뢰도를 높일 수 있는 방안을 생각해 보았습니다. 또한 Ride 내에 승객이 직접 해시태그를 넣고 이를 필터링할 수 있는 기능, 좋아요 표시를 통한 인기 Ride에 대한 리스팅 기능 등 정말 다양한 방안이 나왔습니다.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Ride의 상품 카테고리를 통해 특정 기획전 콘셉트에 맞는, 혹은 유저가 원하는 상품의 Ride를 모아볼 수 있는 필터링 기능도 넣었습니다. 댓글 기능도 들어가야 커뮤니티로써 기능한다고 생각했습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Content Quality에 대한 우려가 가장 큰 고민이었는데, 이용약관 동의 하기 위한 동선, 동일 상품의 Ride가 올라올 경우 모아서 보여준다던지, 콘텐츠가 활발하게 업로드될 수 있도록 승인 대신 선 게시 후 모니터링이 필요하다고 생각했고 이를 위한 신고 기능도 개발할 필요가 있음을 인지했습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">사흘 동안 얼추 구상한 내용을 광현님께 말씀드리고 피드백을 받았습니다.&nbsp; 최초 아이디어를 광현님이 주신만큼 개발 가능한 범위와 설계 타당성에 대한 검증을 해주시고 조언에 따라 수정을 거쳤습니다.</p>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">이번 빅스마일데이(5월)에 적용할 POC(Proof of Concept)를 만들어보자!</blockquote>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이 때는 3월 초. 그리고 저는 3월 중순에 오랜 기간 염원해 오던 미국 여행을 앞두고 있었습니다....</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여행 가서 노트북을 펼치지 않으려면 지금 빠르게 설계를 마쳐야 한다는 위기의식이&nbsp;생겨났습니다. (<s><b>네? 다음 달까지요?)</b></s></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">본격적으로 테이블을 설계할 때가 됐습니다.</h4>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"926\" data-origin-height=\"435\"><span data-url=\"https://blog.kakaocdn.net/dn/ISiLd/btsIhW8LPZL/Y00ZE4UeOjkCCOZGwR6XL0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/ISiLd/btsIhW8LPZL/Y00ZE4UeOjkCCOZGwR6XL0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FISiLd%2FbtsIhW8LPZL%2FY00ZE4UeOjkCCOZGwR6XL0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"926\" data-origin-height=\"435\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><span data-alt=\"저는 개인적으로 PostgreSQL을 자주 사용해왔습니다.\" data-phocus=\"phocus\" data-url=\"https://blog.kakaocdn.net/dn/clHrBt/btsIiy0xi0b/3HWffXMx8ayaffsyidtw1K/img.png\"></span>저는 개인적으로 PostgreSQL을 자주 사용해 왔습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">가장 먼저 해야 할 일은 &ldquo;어떤 DBMS를 선택해야 하는가?&rdquo;입니다. 사내에선 다양한 DBMS를 이용해 다양한 프러덕을 만들고 있습니다. 각 DB는 저마다의 장단점을 가지고 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">저장할 데이터 양이 많지는 않으면서도 POC 끝나고 데이터의 사용성을 고려했을 때 정합성이 가장 중요하다고 생각했습니다. 따라서 팀 내에선 성능과 안전성을 고려하면 Oracle을 사용하는 데에 이견이 없었습니다.&nbsp;더불어 이번 BSD는 지마켓만 오픈하지만 옥션으로 확장할 수 있다는 생각도 있었습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">테이블 명은 ATTRACTION, RIDE, PASSENGER가 정해졌지만 테이블 내 속성을 의미하는 칼럼은 해당 키워드를 사용하기에 길다고 느껴졌습니다. 그래서 각 단어의 축약형이 필요했는데 보통 개발자들은 영어 단어의 첫 글자를 제외한 모음을 지워서 3~5글자로 만듭니다. Attraction의 모음을 없애면 Attr이죠. 제가 방금 네이밍에 있어서 기존 개념과 헷갈리지 않아야 한다고 말씀드렸습니다. 해당 단어를 현재 사내에서 사용하고 있는지 먼저 찾아볼 필요가 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"792\" data-origin-height=\"532\"><span data-url=\"https://blog.kakaocdn.net/dn/raUXU/btsIg221gxc/BhYTckFu5BRhlL7GKO4eZ0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/raUXU/btsIg221gxc/BhYTckFu5BRhlL7GKO4eZ0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FraUXU%2FbtsIg221gxc%2FBhYTckFu5BRhlL7GKO4eZ0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"792\" data-origin-height=\"532\"/></span></figure>\n</p>\n<p style=\"text-align: center;\" data-ke-size=\"size16\"><span data-alt=\"사내 메타 데이터 관리 사이트\" data-phocus=\"phocus\" data-url=\"https://blog.kakaocdn.net/dn/KFe1Y/btsIjaSy1YO/PJ9kfxYH8Td6WLhIXjHQOk/img.png\"></span>사내 메타 데이터 관리 사이트</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">사내 Meta data를 관리하는 사이트에서 표준 단어로 검색을 해봅니다. 이는 \"속성\"을 뜻하는 Attribute의 축약형과 동일합니다. 따라서 이 경우에는 \"<i>ATRC</i>\"로 축약형을 정하였습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Ride는 글자 수가 적기 때문에<span>&nbsp;</span><i>Ride</i><span>&nbsp;</span>그대로 사용해도 무방하다고 판단했고, Passenger는 탑승객의 항공업계 공식 약어인 \"<i>PAX</i>\"를 사용하기로 하였습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<div id=\"SE-edf0f392-5921-469f-8fbd-f17abe35c85f\" style=\"color: #333333; text-align: start;\" data-compid=\"SE-edf0f392-5921-469f-8fbd-f17abe35c85f\" data-a11y-title=\"사진\">\n<div>\n<div data-unitid=\"\" data-compid=\"SE-edf0f392-5921-469f-8fbd-f17abe35c85f\" data-direction=\"top\">\n<div>\n<div id=\"SE-edf0f392-5921-469f-8fbd-f17abe35c85f\">\n<div data-unitid=\"SE-edf0f392-5921-469f-8fbd-f17abe35c85f\" data-compid=\"\" data-direction=\"top\"><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"936\" data-origin-height=\"583\"><span data-url=\"https://blog.kakaocdn.net/dn/cTSUf5/btsIieuDaP9/goQwAD99fpdJccHkONTdS1/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/cTSUf5/btsIieuDaP9/goQwAD99fpdJccHkONTdS1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcTSUf5%2FbtsIieuDaP9%2FgoQwAD99fpdJccHkONTdS1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"693\" data-origin-width=\"936\" data-origin-height=\"583\"/></span></figure>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">테이블의 논리적인 칼럼명은 주로 한글 표기하고 물리적인 칼럼명은 영문으로 표기합니다. 칼럼의 Data Type은 DBMS 별로 조금씩 달라지긴 하나 보편적인 타입을 선언하였습니다. 그리고 해당 칼럼의 길이를 러프하게 정하고 Null 여부와 초기값 등을 설정하는 표를 만들었습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Attraction을 기획하면서 구상한 내용을 담기 위해 테이블에 콘텐츠의 생성, 조회 권한 칼럼을 두었습니다. 이는 추후 유니버스 클럽 고객 만을 위한 Attraction을 만들 수도 있게 하였습니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">디지털, 신선식품 등 특정 카테고리 상품군 만을 Ride로 올릴 수 있도록 Attraction Category 테이블을 설계했습니다. Attraction 테이블에 칼럼으로 넣지 않고 Category 테이블을 별도로 만든 이유는 Attraction이 기획전, 상품평, 코너 등에 사용될 수 있다고 판단하여 확장성을 고려한 설계가 필요하다고 느꼈기 때문입니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">데이터를 구조화하는 작업을 테이블의\"정규화\"라고 합니다. 중복 데이터를 없애기 위한 용도로도 사용되지만 여기서는<span>&nbsp;</span><b>데이터베이스의 구조 확장 시 재 디자인 하는 것을 최소화하기 위한 목적으로 사용</b>되었습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<div id=\"SE-277c7b5a-3ca0-4429-9688-91b54c0432ea\" style=\"color: #333333; text-align: start;\" data-compid=\"SE-277c7b5a-3ca0-4429-9688-91b54c0432ea\" data-a11y-title=\"사진\">\n<div>\n<div data-unitid=\"\" data-compid=\"SE-277c7b5a-3ca0-4429-9688-91b54c0432ea\" data-direction=\"top\">\n<div>\n<div id=\"SE-277c7b5a-3ca0-4429-9688-91b54c0432ea\">\n<div>&nbsp;</div>\n<div data-unitid=\"SE-277c7b5a-3ca0-4429-9688-91b54c0432ea\" data-compid=\"\" data-direction=\"top\"><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"936\" data-origin-height=\"457\"><span data-url=\"https://blog.kakaocdn.net/dn/b5q0cX/btsIg2IGGrl/B38UcYfAvDZ8P1KL9LoKU1/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/b5q0cX/btsIg2IGGrl/B38UcYfAvDZ8P1KL9LoKU1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb5q0cX%2FbtsIg2IGGrl%2FB38UcYfAvDZ8P1KL9LoKU1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"693\" data-origin-width=\"936\" data-origin-height=\"457\"/></span></figure>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Ride는 우리 사이트의 상품과 연동할 수 있어야 했습니다. 이번 BSD에서는 BSD 기간에 태그가 붙은 상품을 구매한 경우에만 구매 내역에서 불러와 Ride Goods로 등록할 수 있게 하였습니다. 그 외 좋아요를 저장하는 Ride Recommend 테이블과 신고할 수 있는 Ride Report 테이블, 댓글을 저장할 Ride Comment 테이블을 설계하였습니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"789\" data-origin-height=\"486\"><span data-url=\"https://blog.kakaocdn.net/dn/IvI1K/btsIhu5VM4R/cllKG7H66DWMeIDKbhLzR0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/IvI1K/btsIhu5VM4R/cllKG7H66DWMeIDKbhLzR0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FIvI1K%2FbtsIhu5VM4R%2FcllKG7H66DWMeIDKbhLzR0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"789\" data-origin-height=\"486\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Passenger의 경우에는 여태까지 사내에 없던 정말 생소한 개념이기에 테이블 설계하는데 애를 먹었습니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">기본적으로 아래의 문제 상황이 존재했습니다.</p>\n<ol style=\"list-style-type: decimal; color: #333333; text-align: start;\" data-ke-list-type=\"decimal\">\n<li style=\"list-style-type: decimal;\">Gmarket의 id 중복 문제 &rarr; 기본 id들이 있기 때문에 Gmarket은 유니크한 id 식별자를 봐야 함</li>\n<li style=\"list-style-type: decimal;\">G/A 간 회원 식별자가 다른 것 &rarr; Auction 에는 회원 식별자가 없음</li>\n<li style=\"list-style-type: decimal;\">Admin도 참여할 수 있는 서비스 &rarr; Admin id가 G/A와 중복될 수 있음</li>\n</ol>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; MyG, MyA 등의 내 정보와 연동하기 위해선 타 팀과의 논의가 필수불가결합니다. 하지만 커뮤니케이션 비용 절감 및 확장 가능성을 고려해 (지마켓 그 너머..) 유저아이디, 회원 식별자, 사이트 종류 세 가지 속성을 이용해 기존 지/옥/Admin 계정 정보와 논리적인 Relation을 맺는 것이 합리적이라 판단했습니다. 지마켓, 옥션, Admin 계정의 유저 id는 중복될 수가 있으므로 pax의 id 칼럼을 만들어 유저 id로 넣어두되 사이트 종류 칼럼으로 구분할 수 있습니다</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>따라서 Passenger 테이블의 pk</span><span>&nbsp;만을 보고 유일한 탑승객임을 보장할 수 있게 되었습니다.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">추후 해당 승객의 등급, 뱃지 등 게이미픽케이션 요소를 넣기 위한 칼럼도 정의하였습니다.<span>&nbsp;</span><span>해당 탑승객에 대한 정보는 Passenger 테이블에만 저장됩니다.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이 모든 속성은 G-world 서비스에서만 이용하는 것이기 때문에 개인정보를 저장하지 않는다는 것이 중요했습니다. (개인정보 보호테이블이 되면 Meta System 내에서 별도로 관리되어 관리 포인트가 많아집니다.)</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">기본적으로 모든 테이블에는 Insert Operator, Update Operator와 관련한 칼럼이 포함되어야 합니다. 그래서 해당 칼럼에 생성 승객과 수정 승객 번호를 넣으려고 했습니다. 그러나 담당 DA분께서 아래와 같은 가이드를 주셨습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">&nbsp;Insert Operator, Update Operator는 이 데이터를 (ROW) 만들거나 수정한 시스템(또는 플랫폼) 정보여야 합니다.<br />즉, 시스템명, Application명, Host 정보명(Pod명) 등을 뜻하며, 고객의 개인정보(로그인 ID 등)를 저장해서는 안됩니다.<br />(예외)&nbsp; Admin 시스템 - 직원의 직원번호, 사번 또는 AD-ID 등 (정책 등의 변경자를 확인하기 위함)</blockquote>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">따라서 별도로 공통 칼럼을 만들어 모든 테이블에 전부 넣어주었습니다.&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_edited_common-column.png\" data-origin-width=\"954\" data-origin-height=\"471\"><span data-url=\"https://blog.kakaocdn.net/dn/bwfs1w/btsIhurkrDl/sGZFl2RK61fQFdyxSElxM0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bwfs1w/btsIhurkrDl/sGZFl2RK61fQFdyxSElxM0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbwfs1w%2FbtsIhurkrDl%2FsGZFl2RK61fQFdyxSElxM0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_edited_common-column.png\" data-origin-width=\"954\" data-origin-height=\"471\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">설계는 항상 꼼꼼해야 하지만 칼럼 추가나 수정은 개발되는 기간 내내 발생할 수 있기 때문에 너무 완벽함을 추구해선 안됩니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">설계를 마치고 테이블을 생성했습니다.</h4>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">사내에서 주제영역으로 불리는 개념이 있는데 Database의 schema라고 생각해 주시면 이해가 잘 될 것 같습니다. 물리적인&nbsp;스키마명을&nbsp;통일해&nbsp;사용하지만&nbsp;실제&nbsp;주제영역은&nbsp;Meta&nbsp;데이터&nbsp;관리&nbsp;시스템을&nbsp;통해&nbsp;관리됩니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">G-world는 신규 서비스이므로 Attraction이라는 이름의 새로운 주제영역을 신청하였습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_edited_erd.png\" data-origin-width=\"2360\" data-origin-height=\"1727\"><span data-url=\"https://blog.kakaocdn.net/dn/bQVQLO/btsIhNRLYd7/Q5LlfPnWe5RrgFCKZotKI0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bQVQLO/btsIhNRLYd7/Q5LlfPnWe5RrgFCKZotKI0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbQVQLO%2FbtsIhNRLYd7%2FQ5LlfPnWe5RrgFCKZotKI0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_edited_erd.png\" data-origin-width=\"2360\" data-origin-height=\"1727\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">위처럼 Entity를 선언하고 Entity끼리의 Relationship을 맺어주면 ERD가 완성됩니다. 물리적, 논리적 ERD를 각각 구성해야 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">참고로 사내에서는 실제 테이블이 생성될 때 외래키(FK)를 반영하지 않습니다. 외래키 라고 하는 것은 두 테이블을 연결시켜 주는 다리라고 생각하면 이해가 빠른데 Ride 테이블에 상위 테이블인 Attraction의 키 값이 있거나 Ride Goods 테이블에 Ride의 키 값이 들어있는 것을 말합니다. 보통 관계형 데이터베이스에 대해 배울 때는 PK와 FK 설정을 통한 데이터 무결성, 정합성 보장을 한다고 하지만 성능, 개발, 유지보수에 있어서 trade off 관계이기 때문에 현업에서는 물리적인 fk는 정의하지 않는 편입니다. 그러므로 Meta 시스템을 통해 정합성을 보장하려고 하죠.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">이제 G-World를 소개하기로 했습니다.</h4>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">지난 일주일 간의 개발자들이 기획 / 설계한 것을 가지고 기획팀, 디자인팀과 자리를 마련해 광현님이 처음으로 G-World에 대해 말씀드렸습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_g월드 회의.png\" data-origin-width=\"724\" data-origin-height=\"446\"><span data-url=\"https://blog.kakaocdn.net/dn/uf6sg/btsIg6EmS4Q/tf3Nuy7u3dzKsWVUEkVq31/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/uf6sg/btsIg6EmS4Q/tf3Nuy7u3dzKsWVUEkVq31/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fuf6sg%2FbtsIg6EmS4Q%2Ftf3Nuy7u3dzKsWVUEkVq31%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_g월드 회의.png\" data-origin-width=\"724\" data-origin-height=\"446\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: center;\" data-ke-size=\"size16\">걱정반 기대반이었습니다. 기획 / 디자인 리소스가 부족하면 이번 BSD에 보여주기는 힘들 것 같았습니다.&nbsp;</p>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">해봅시다!</blockquote>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">다행히 긍정적으로 검토해 주시고 챌린지 해보자는 뜻이 모아졌습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이번 BSD는 5월 7일부터 시작했으므로 2달이 남아있었지만 QA 기간까지 끝내려면&nbsp;<b>한 달</b><span>&nbsp;</span>안에 기획 / 디자인 / 퍼블리싱 / 개발을 모두 마쳐야 했습니다.<s> (<b>네?! 다음 달 까지요!?</b>)</s></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>BSD에 진행하는 것이 확정이 되고 전 예정대로 휴가를 가게 되었습니다. 그 사이 팀원분들이 울퉁불퉁한 설계도에 필요한 테이블과 칼럼을 추가해 주시면서 무사히 G-world의 데이터베이스가 생성될 수 있었습니다.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>다음 편에는 전체적인 Data Flow와 기술스택에 대해 소개해드리겠습니다.</span></p>",
        "contentSnippet": "안녕하세요. Web Frontend팀 이민하입니다.\n \n지난 빅스마일데이에 첫 론칭한 꿀템 피드 서비스! 이 서비스를 만들기 위한 여정을 여러분께 소개드리려고 합니다.\n \nIntro\n시작은 디지털 빅세일이 끝난 2월 말.. 저희 팀장님의 한마디에서 시작했습니다.\n\"챗GBT를 우리만 보기에 아깝지 않아..!?\"\n\n\n챗GBT(Gmarket Best iTem)는 임직원분들이 직접 추천하는 상품을 모아둔 페이지로 하나하나가 진짜 꿀템입니다!\n \n아깝다고 생각했습니다. 저도 GBT를 보며 많이 샀기 때문에 고객도 이 페이지를 같이 보면 구매가 많이 일어날 것이라고 생각했습니다.\n추가로 고객들이 게시글을 작성할 수 있다면..? 그러면 고객들이 우리 사이트에서 놀 수 있는 공간이 되지 않을까?\n또한 사내에서도 우리 프러덕에 커뮤니티 기능을 넣어보자는 니즈가 있었다고 들었습니다.\n자신감이 생기기 시작했습니다. 우리 사이트에 새로운 활기를 불어넣어 줄 수 있을 것 같은 그런 자신감이 생겼습니다.\n만들 수 있을 것 같은 기대감에 하나 잊어버린 것이 있었습니다.\n\"아 맞다 나 신규 서비스 만들어 본 적 없지!\"\n \n네. 저는 입사하고 이벤트 플랫폼, 한반도 기획전, 패턴6를 담당하면서 기존 서비스의 개선 작업을 주로 해왔고 \"쇼룸\"이라는 서비스를 준비 중이었으나 아직 신규 서비스를 론칭해 본 경험은 없었습니다. 그렇기 때문에 어디서부터 무엇을 작업해야 할지 머릿속에 그려지지 않았습니다.\n \n이 발표는 신규 서비스를 개발하려고 할 때 무엇을 준비해야 할지 막막한 \"개발자\"분들이 시행착오를 줄일 수 있도록 도움을 드리고자 준비하게 되었습니다.\n \n \n지속 가능한 개발을 위한 설계\n지속 가능한 설계란 보통 환경의 수용능력 범위 내에서 개발하는 것을 말하는, 도시설계에서 사용하는 개념인데요, 어플리케이션 개발에 있어서 개발 비용이 너무 많이 소모되지 않으면서 꾸준히 디벨롭하고 개선할 수 있는 프러덕을 만드는 것과 일맥상통한다고 생각합니다. 그리고 이를 위해 확장성을 고려한 설계가 필요했습니다.\n \n첫 번째로 고민한 것은 \"네이밍\"이었습니다.\n\n\n개발자에게 가장 어려운 일들\n \n개발자에게 있어 이름을 짓는다는 행위는 단순히 부르기 위한 목적보다 더 큰 의미가 있습니다. 이름만 듣고도 직관적으로 만드는 의도를 이해하는데 도움이 되어야 합니다. 저희도 구현하고자 하는 개념을 포괄할 수 있어야 한다고 생각했습니다. 또한 기존 개념과 헷갈리지 않도록 사내에서 사용되지 않는 단어를 선택해야 했습니다. 그러다 문득\n우리 사이트에서 놀 수 있어야 한다.. → 즐길 거리!? 그러면 게시글을 \"놀이 기구\"에 비유하면 어떨까?\n \n챗GBT는 Padlet이라는 공유 게시판 서비스를 이용하였는데 그 padlet안에 게시글을 포스팅할 수 있는 빈 보드에 해당하는 영역을 \"Attraction\"이라 명명했습니다. 어트랙션은 놀이 공원의 놀이 기구라는 뜻으로 사용되곤 하지만 실제로는 매력, 즐길 거리, 명소 등의 뜻을 가지고 있습니다. 부동산 개발 업계에서는 도시의 랜드마크나 코엑스의 별마당 도서관처럼 상업 시설 내 차별화를 두는 장소를 어트랙션이라고 부르기도 합니다. \nAttraction에 들어갈 게시글 하나하나는 놀이기구, 탈 것을 의미하는 \"Ride\"로 부르기로 하였습니다. Attraction 하위에 존재하며 등록, 수정이 가능한 컨텐츠입니다.해당 프로젝트에서 가장 중요한 개념이며 Ride의 퀄리티에 따라 이 서비스의 흥행이 정해질 것이라 생각했습니다.\n마지막으로 Ride를 업로드할 수 있는 사람을 지칭하는 개념이 필요했습니다. 이 사람은 지마켓, 옥션의 회원 일 수도, 셀러 고객일 수도, 임직원 일 수도 있기 때문에 이를 포괄하는 개념이어야 했습니다.\n그러므로 Ride의 탑승객을 의미하는 \"Passenger\"로 명명했습니다. 그렇게 핵심 개념인 Attraction, Ride, Passenger 가 탄생했고 자연스레 이 프로젝트의 이름은 지마켓의 놀이공원, \"G-world\"가 되었습니다.\n \n확장성을 염두에 두고 하위 속성을 정의하기 시작했습니다.\n \n\n\n\n\n\n프로젝트 이름을 정하고나서 머릿속에 있는 내용을 화이트보드에 정리해봤습니다.\n \n \n팀원들과 본격적으로 G-world의 얼개를 짜기 시작했습니다. 개발자가 기획하는 것이다 보니 어떤 식으로 접근해야 할지 몰랐습니다. 해당 페이지를 어디에 노출시킬 것이며 어떤 속성이 필요한지를 고민했습니다.\nAttraction은 챗GBT처럼 저희 영업본부 임직원 분들이 올릴 수도 있고, 고객들도 업로드할 수 있어야 했고 상품을 공유했을 때 구매 적립받을 수 있도록 Linkrew 와의 연동이 필요하다고 생각했습니다. (Linkrew 란 누구나 상품 링크를 공유해 수익을 셰어 받는 지마켓의 신규 제휴서비스입니다.)\n \nRide는 상품은 구매 내역에서 불러오거나, 구매 내역 없이 단순히 상품을 추천하거나, 임직원이 올릴 수 있는 3가지 형태가 있을 수 있다고 판단했습니다. 그리고 구매 기록에 기반한 태그(첫 구매시기, 재구매 횟수 표시 등)를 게시하여 Ride의 리뷰 신뢰도를 높일 수 있는 방안을 생각해 보았습니다. 또한 Ride 내에 승객이 직접 해시태그를 넣고 이를 필터링할 수 있는 기능, 좋아요 표시를 통한 인기 Ride에 대한 리스팅 기능 등 정말 다양한 방안이 나왔습니다.\nRide의 상품 카테고리를 통해 특정 기획전 콘셉트에 맞는, 혹은 유저가 원하는 상품의 Ride를 모아볼 수 있는 필터링 기능도 넣었습니다. 댓글 기능도 들어가야 커뮤니티로써 기능한다고 생각했습니다.\n \nContent Quality에 대한 우려가 가장 큰 고민이었는데, 이용약관 동의 하기 위한 동선, 동일 상품의 Ride가 올라올 경우 모아서 보여준다던지, 콘텐츠가 활발하게 업로드될 수 있도록 승인 대신 선 게시 후 모니터링이 필요하다고 생각했고 이를 위한 신고 기능도 개발할 필요가 있음을 인지했습니다.\n \n사흘 동안 얼추 구상한 내용을 광현님께 말씀드리고 피드백을 받았습니다.  최초 아이디어를 광현님이 주신만큼 개발 가능한 범위와 설계 타당성에 대한 검증을 해주시고 조언에 따라 수정을 거쳤습니다.\n이번 빅스마일데이(5월)에 적용할 POC(Proof of Concept)를 만들어보자!\n \n이 때는 3월 초. 그리고 저는 3월 중순에 오랜 기간 염원해 오던 미국 여행을 앞두고 있었습니다....\n여행 가서 노트북을 펼치지 않으려면 지금 빠르게 설계를 마쳐야 한다는 위기의식이 생겨났습니다. (네? 다음 달까지요?)\n \n본격적으로 테이블을 설계할 때가 됐습니다.\n\n\n저는 개인적으로 PostgreSQL을 자주 사용해 왔습니다.\n \n가장 먼저 해야 할 일은 “어떤 DBMS를 선택해야 하는가?”입니다. 사내에선 다양한 DBMS를 이용해 다양한 프러덕을 만들고 있습니다. 각 DB는 저마다의 장단점을 가지고 있습니다.\n저장할 데이터 양이 많지는 않으면서도 POC 끝나고 데이터의 사용성을 고려했을 때 정합성이 가장 중요하다고 생각했습니다. 따라서 팀 내에선 성능과 안전성을 고려하면 Oracle을 사용하는 데에 이견이 없었습니다. 더불어 이번 BSD는 지마켓만 오픈하지만 옥션으로 확장할 수 있다는 생각도 있었습니다.\n \n테이블 명은 ATTRACTION, RIDE, PASSENGER가 정해졌지만 테이블 내 속성을 의미하는 칼럼은 해당 키워드를 사용하기에 길다고 느껴졌습니다. 그래서 각 단어의 축약형이 필요했는데 보통 개발자들은 영어 단어의 첫 글자를 제외한 모음을 지워서 3~5글자로 만듭니다. Attraction의 모음을 없애면 Attr이죠. 제가 방금 네이밍에 있어서 기존 개념과 헷갈리지 않아야 한다고 말씀드렸습니다. 해당 단어를 현재 사내에서 사용하고 있는지 먼저 찾아볼 필요가 있습니다.\n \n\n\n사내 메타 데이터 관리 사이트\n \n사내 Meta data를 관리하는 사이트에서 표준 단어로 검색을 해봅니다. 이는 \"속성\"을 뜻하는 Attribute의 축약형과 동일합니다. 따라서 이 경우에는 \"ATRC\"로 축약형을 정하였습니다.\nRide는 글자 수가 적기 때문에 Ride 그대로 사용해도 무방하다고 판단했고, Passenger는 탑승객의 항공업계 공식 약어인 \"PAX\"를 사용하기로 하였습니다.\n \n\n\n\n\n\n\n\n \n \n테이블의 논리적인 칼럼명은 주로 한글 표기하고 물리적인 칼럼명은 영문으로 표기합니다. 칼럼의 Data Type은 DBMS 별로 조금씩 달라지긴 하나 보편적인 타입을 선언하였습니다. 그리고 해당 칼럼의 길이를 러프하게 정하고 Null 여부와 초기값 등을 설정하는 표를 만들었습니다.\nAttraction을 기획하면서 구상한 내용을 담기 위해 테이블에 콘텐츠의 생성, 조회 권한 칼럼을 두었습니다. 이는 추후 유니버스 클럽 고객 만을 위한 Attraction을 만들 수도 있게 하였습니다. \n디지털, 신선식품 등 특정 카테고리 상품군 만을 Ride로 올릴 수 있도록 Attraction Category 테이블을 설계했습니다. Attraction 테이블에 칼럼으로 넣지 않고 Category 테이블을 별도로 만든 이유는 Attraction이 기획전, 상품평, 코너 등에 사용될 수 있다고 판단하여 확장성을 고려한 설계가 필요하다고 느꼈기 때문입니다.\n데이터를 구조화하는 작업을 테이블의\"정규화\"라고 합니다. 중복 데이터를 없애기 위한 용도로도 사용되지만 여기서는 데이터베이스의 구조 확장 시 재 디자인 하는 것을 최소화하기 위한 목적으로 사용되었습니다.\n \n \n\n\n\n\n\n\n\n \nRide는 우리 사이트의 상품과 연동할 수 있어야 했습니다. 이번 BSD에서는 BSD 기간에 태그가 붙은 상품을 구매한 경우에만 구매 내역에서 불러와 Ride Goods로 등록할 수 있게 하였습니다. 그 외 좋아요를 저장하는 Ride Recommend 테이블과 신고할 수 있는 Ride Report 테이블, 댓글을 저장할 Ride Comment 테이블을 설계하였습니다. \n \n\n\n \nPassenger의 경우에는 여태까지 사내에 없던 정말 생소한 개념이기에 테이블 설계하는데 애를 먹었습니다. \n기본적으로 아래의 문제 상황이 존재했습니다.\nGmarket의 id 중복 문제 → 기본 id들이 있기 때문에 Gmarket은 유니크한 id 식별자를 봐야 함\nG/A 간 회원 식별자가 다른 것 → Auction 에는 회원 식별자가 없음\nAdmin도 참여할 수 있는 서비스 → Admin id가 G/A와 중복될 수 있음\n \n  MyG, MyA 등의 내 정보와 연동하기 위해선 타 팀과의 논의가 필수불가결합니다. 하지만 커뮤니케이션 비용 절감 및 확장 가능성을 고려해 (지마켓 그 너머..) 유저아이디, 회원 식별자, 사이트 종류 세 가지 속성을 이용해 기존 지/옥/Admin 계정 정보와 논리적인 Relation을 맺는 것이 합리적이라 판단했습니다. 지마켓, 옥션, Admin 계정의 유저 id는 중복될 수가 있으므로 pax의 id 칼럼을 만들어 유저 id로 넣어두되 사이트 종류 칼럼으로 구분할 수 있습니다\n따라서 Passenger 테이블의 pk 만을 보고 유일한 탑승객임을 보장할 수 있게 되었습니다.\n추후 해당 승객의 등급, 뱃지 등 게이미픽케이션 요소를 넣기 위한 칼럼도 정의하였습니다. 해당 탑승객에 대한 정보는 Passenger 테이블에만 저장됩니다.\n이 모든 속성은 G-world 서비스에서만 이용하는 것이기 때문에 개인정보를 저장하지 않는다는 것이 중요했습니다. (개인정보 보호테이블이 되면 Meta System 내에서 별도로 관리되어 관리 포인트가 많아집니다.)\n기본적으로 모든 테이블에는 Insert Operator, Update Operator와 관련한 칼럼이 포함되어야 합니다. 그래서 해당 칼럼에 생성 승객과 수정 승객 번호를 넣으려고 했습니다. 그러나 담당 DA분께서 아래와 같은 가이드를 주셨습니다.\n \n Insert Operator, Update Operator는 이 데이터를 (ROW) 만들거나 수정한 시스템(또는 플랫폼) 정보여야 합니다.\n즉, 시스템명, Application명, Host 정보명(Pod명) 등을 뜻하며, 고객의 개인정보(로그인 ID 등)를 저장해서는 안됩니다.\n(예외)  Admin 시스템 - 직원의 직원번호, 사번 또는 AD-ID 등 (정책 등의 변경자를 확인하기 위함)\n \n따라서 별도로 공통 칼럼을 만들어 모든 테이블에 전부 넣어주었습니다. \n\n\n \n설계는 항상 꼼꼼해야 하지만 칼럼 추가나 수정은 개발되는 기간 내내 발생할 수 있기 때문에 너무 완벽함을 추구해선 안됩니다.\n \n설계를 마치고 테이블을 생성했습니다.\n사내에서 주제영역으로 불리는 개념이 있는데 Database의 schema라고 생각해 주시면 이해가 잘 될 것 같습니다. 물리적인 스키마명을 통일해 사용하지만 실제 주제영역은 Meta 데이터 관리 시스템을 통해 관리됩니다.\n \nG-world는 신규 서비스이므로 Attraction이라는 이름의 새로운 주제영역을 신청하였습니다.\n\n\n \n위처럼 Entity를 선언하고 Entity끼리의 Relationship을 맺어주면 ERD가 완성됩니다. 물리적, 논리적 ERD를 각각 구성해야 합니다.\n \n참고로 사내에서는 실제 테이블이 생성될 때 외래키(FK)를 반영하지 않습니다. 외래키 라고 하는 것은 두 테이블을 연결시켜 주는 다리라고 생각하면 이해가 빠른데 Ride 테이블에 상위 테이블인 Attraction의 키 값이 있거나 Ride Goods 테이블에 Ride의 키 값이 들어있는 것을 말합니다. 보통 관계형 데이터베이스에 대해 배울 때는 PK와 FK 설정을 통한 데이터 무결성, 정합성 보장을 한다고 하지만 성능, 개발, 유지보수에 있어서 trade off 관계이기 때문에 현업에서는 물리적인 fk는 정의하지 않는 편입니다. 그러므로 Meta 시스템을 통해 정합성을 보장하려고 하죠.\n \n이제 G-World를 소개하기로 했습니다.\n지난 일주일 간의 개발자들이 기획 / 설계한 것을 가지고 기획팀, 디자인팀과 자리를 마련해 광현님이 처음으로 G-World에 대해 말씀드렸습니다.\n \n\n\n걱정반 기대반이었습니다. 기획 / 디자인 리소스가 부족하면 이번 BSD에 보여주기는 힘들 것 같았습니다. \n해봅시다!\n \n다행히 긍정적으로 검토해 주시고 챌린지 해보자는 뜻이 모아졌습니다.\n이번 BSD는 5월 7일부터 시작했으므로 2달이 남아있었지만 QA 기간까지 끝내려면 한 달 안에 기획 / 디자인 / 퍼블리싱 / 개발을 모두 마쳐야 했습니다. (네?! 다음 달 까지요!?)\nBSD에 진행하는 것이 확정이 되고 전 예정대로 휴가를 가게 되었습니다. 그 사이 팀원분들이 울퉁불퉁한 설계도에 필요한 테이블과 칼럼을 추가해 주시면서 무사히 G-world의 데이터베이스가 생성될 수 있었습니다.\n \n다음 편에는 전체적인 Data Flow와 기술스택에 대해 소개해드리겠습니다.",
        "guid": "https://dev.gmarket.com/110",
        "categories": [
          "Backend"
        ],
        "isoDate": "2024-06-30T10:05:49.000Z"
      },
      {
        "creator": "지마켓 기술블로그",
        "title": "조회 속도 개선하기 (ESM '문의하기' 기능 개편)",
        "link": "https://dev.gmarket.com/109",
        "pubDate": "Fri, 28 Jun 2024 14:33:09 +0900",
        "author": "지마켓 기술블로그",
        "comments": "https://dev.gmarket.com/109#entry109comment",
        "content": "<p data-ke-size=\"size16\"><span style=\"color: #000000;\">안녕하세요.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">Seller &amp; SD Engineering팀의 김민우입니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">이번 글은 ESM(지마켓 판매자 사이트)&nbsp;<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Apple SD Gothic Neo', Arial, sans-serif; letter-spacing: 0px;\">개편 중 '문의하기' 개발을 맡으며 겪었던 어려움과 이를 해결해 나가는 몇 가지 방법들을 소개하고자 합니다. 제가 개발 맡은 부분은 판매자에게&nbsp;<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Apple SD Gothic Neo', Arial, sans-serif; letter-spacing: 0px;\">구매자의 문의내용을 담당하는 '게시판 문의', 그리고 CS(고객센터)에서 주는 '긴급 메시지'를 통합하여 지마켓과 옥션&nbsp; 두 사이트에 대해 각각 보여주는 통합 페이지를 개편시키는 일이었습니다.</span></span></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">각설하고 조회 성능을 올린 결과물부터 영상으로 보시죠.</span></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/447762747\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/uM4TY/hyWrN3VHEK/pIeDip5JAalfR0g4qhqofK/img.jpg?width=1920&amp;height=1080&amp;face=0_0_1920_1080,https://scrap.kakaocdn.net/dn/cYLBr1/hyWrMxdO3h/a3JB4tA88U0J5SvKlXEoQ0/img.jpg?width=1920&amp;height=1080&amp;face=0_0_1920_1080\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/447762747?service=daum_tistory\" width=\"860\" height=\"484\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 영상에서 보셨듯이, 대형 셀러의 경우 한 페이지를 로드하는 데 기본 몇십 초가 걸립니다. 페이지를 넘길 때조차 마찬가지입니다. 상품이 많아질수록 문의도 증가하기 마련인데, 모든 문의에 일일이 답변하기는 어렵기 때문에 미응답으로 남는 경우가 많습니다. 이러한 어드민 페이지를 개편할 때 보통 프론트엔드 중심으로 성과를 드러내는 경우가 많았고, 저 역시 해당 프로젝트를 처음 배정받았을 때는 성능 개선에 대한 기획은 없었습니다. 백엔드 로직은 그대로 두되 UI/UX를 고치는 것이 본래 목적이었습니다. 하지만 백엔드 개발이 메인인 저는 충격적인 성능을 목격하고서, 이번 프로젝트에서 백엔드에서도 성과를 낼 수 있음을 보여주기 위해, 두려움과 동시에 최선을 다해야겠다고 마음먹었습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">저에게 주어진 과제의 걸림돌이었던 점을 나열해보겠습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>1. 답변까지 복수로 조회</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 구버전에서는 문의를 클릭해야만 해당 문의에 대한 답변을 볼 수 있었습니다. 많은 판매자 분들이 답변을 일괄적으로 처리하지 못하고 하나하나 처리해야 한다는 어려움을 호소해 주셨습니다. 그래서 새로운 버전에서는 답변 칸을 문의 옆에 짝지어 나열하는 UI/UX로 변경하게 되었습니다. 그러나 개발자로서 이미 몇십 초가 걸리는 조회 로직에 답변까지 함께 짝지어서 조회하려면 얼마나 더 오래 걸릴지 막막하기만 했습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"968\" data-origin-height=\"573\"><span data-url=\"https://blog.kakaocdn.net/dn/v6B6B/btsIhiwoEzq/oKejEx2d3Ueb2Bbuqd2GB1/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/v6B6B/btsIhiwoEzq/oKejEx2d3Ueb2Bbuqd2GB1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fv6B6B%2FbtsIhiwoEzq%2FoKejEx2d3Ueb2Bbuqd2GB1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"698\" height=\"413\" data-origin-width=\"968\" data-origin-height=\"573\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>2. 네 가지의 도메인을 데이터 구조는 그대로 두고 통합</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">앞서 서두에서 언급했듯이, 지마켓/옥션 각각의 '게시판 문의'와 '긴급 메시지'라는 비슷하지만 엄연히 다른 도메인을 한 가지 표에 통합해야 했습니다. 흔히 1번에 이어서 ESM 전용으로 조회하기 좋은 단순한 데이터베이스를 구상해 본다면 다음과 같습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"609\" data-origin-height=\"333\"><span data-url=\"https://blog.kakaocdn.net/dn/3u6UT/btsIgn6mYkn/PtNTU1ZVXHxsQaDplur87K/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/3u6UT/btsIgn6mYkn/PtNTU1ZVXHxsQaDplur87K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F3u6UT%2FbtsIgn6mYkn%2FPtNTU1ZVXHxsQaDplur87K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"609\" data-origin-height=\"333\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">서로 다른 정책과 프로세스를 가진 제각각&nbsp;2000년대 중반에 아우르는 유서 깊은 레거시들을&nbsp;전부 다 조사하는 것도 일이었지만, 데이터 자체를 그대로 둔 채로 통합하면서 속도 성능을 내야 하는 건 생각보다 큰 과제였습니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"639\" data-origin-height=\"526\"><span data-url=\"https://blog.kakaocdn.net/dn/d1sfXD/btsIgMY6LQF/kjPI2CtcBxsdjjFTlu6FaK/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/d1sfXD/btsIgMY6LQF/kjPI2CtcBxsdjjFTlu6FaK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd1sfXD%2FbtsIgMY6LQF%2FkjPI2CtcBxsdjjFTlu6FaK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"639\" data-origin-height=\"526\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">데이터를&nbsp;분석하면서&nbsp;충격적이었던&nbsp;점은&nbsp;옥션&nbsp;긴급&nbsp;메시지를&nbsp;제외하고는&nbsp;'질문'과&nbsp;'답변'이&nbsp;같은&nbsp;테이블에&nbsp;섞여&nbsp;들어가&nbsp;있다는&nbsp;점이었습니다.&nbsp;한&nbsp;질문에&nbsp;대한&nbsp;답변을&nbsp;찾으려면&nbsp;셀프&nbsp;조인을&nbsp;해야&nbsp;했습니다.&nbsp;그렇다고&nbsp;파티션이&nbsp;되어&nbsp;있는&nbsp;것도&nbsp;아니었습니다.&nbsp;질문과&nbsp;답변이&nbsp;1:1&nbsp;관계도&nbsp;아니었고,&nbsp;한&nbsp;개의&nbsp;질문에&nbsp;대해&nbsp;여러&nbsp;번&nbsp;답변이&nbsp;가능한&nbsp;구조였습니다.&nbsp;가뜩이나&nbsp;답변&nbsp;하나&nbsp;가져오는&nbsp;데도&nbsp;몇십&nbsp;초가&nbsp;걸리는&nbsp;상황에서,&nbsp;같은&nbsp;테이블에서&nbsp;셀프&nbsp;조인하고&nbsp;여러&nbsp;답변&nbsp;중&nbsp;가장&nbsp;최신의&nbsp;답변을&nbsp;가져와야&nbsp;했습니다.</span><br /><br /><span style=\"color: #000000;\">통상적으로&nbsp;이런&nbsp;통합된&nbsp;페이지의&nbsp;성능을&nbsp;높이려면&nbsp;데이터&nbsp;구조부터&nbsp;바꾸거나&nbsp;기존&nbsp;테이블들을&nbsp;그대로&nbsp;두되,&nbsp;새로&nbsp;구상한&nbsp;테이블에&nbsp;기존&nbsp;테이블의&nbsp;데이터를&nbsp;배치나&nbsp;스트림을&nbsp;통해&nbsp;미리&nbsp;최신의&nbsp;답변을&nbsp;집계하고&nbsp;데이터를&nbsp;통합해서&nbsp;주기적으로&nbsp;업데이트하는&nbsp;것이&nbsp;최적의&nbsp;방법입니다.&nbsp;그러나&nbsp;개발&nbsp;공수&nbsp;기간이&nbsp;짧아&nbsp;이&nbsp;방법을&nbsp;적용할&nbsp;수&nbsp;없었습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>3. 대용량의 데이터베이스</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 해당 테이블들의 정확한 데이터양 수치를 서술하기에는 보안상의 이슈가 있을 것 같아 대략적으로 말씀드리자면, 상품 및 주문 도메인 관련 테이블들과 비슷하게 엄청난 볼륨을 가지고 있었습니다. 데이터베이스들의 생성 시기와 가장 오래된 데이터의 날짜를 비교해 보면, 그나마 한 번쯤은 데이터를 정리한 것 같습니다만, 근 10년간의 게시판 문의와 긴급 메시지들이 쌓여 있다는 점에서도 두려웠습니다. 대용량 데이터를 주로 다뤘던 경험상, 데이터베이스의 크기 자체는 대용량까지는 아니지만, 행(Row)의 수는 중견급 마켓의 상품 수와 맞먹을 정도였습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">이&nbsp;때문에&nbsp;인덱스를&nbsp;새로&nbsp;추가하는&nbsp;것도&nbsp;이미&nbsp;큰&nbsp;데이터베이스에&nbsp;무리가&nbsp;가기에&nbsp;리스크가&nbsp;있었고,&nbsp;오래된&nbsp;데이터를&nbsp;비우는&nbsp;일도&nbsp;마이그레이션과&nbsp;더불어&nbsp;파티셔닝에&nbsp;신경&nbsp;써야&nbsp;했기&nbsp;때문에&nbsp;개발&nbsp;공수를&nbsp;맞추기에는&nbsp;부족했습니다.&nbsp;따라서&nbsp;추후&nbsp;옵션으로&nbsp;고려할&nbsp;수는&nbsp;있으나,&nbsp;기존&nbsp;데이터베이스&nbsp;테이블들을&nbsp;건드는&nbsp;일&nbsp;자체가&nbsp;당장은&nbsp;어렵다는&nbsp;것이&nbsp;확실했습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1003\" data-origin-height=\"941\"><span data-url=\"https://blog.kakaocdn.net/dn/dl47UQ/btsIfv45NBO/KzztgMTJMe226HdN5EV5Uk/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/dl47UQ/btsIfv45NBO/KzztgMTJMe226HdN5EV5Uk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdl47UQ%2FbtsIfv45NBO%2FKzztgMTJMe226HdN5EV5Uk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"347\" height=\"326\" data-origin-width=\"1003\" data-origin-height=\"941\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">이런 비슷한 상황에서 조회 속도를 어떻게 올릴 것인가를 고민하는 다른 여러 개발자들을 위해 제가 해결해 나간 과정을 소개합니다.&nbsp;</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">우선 방법 소개에 앞서, 잠깐 언급할 개념이 있습니다. 개발을&nbsp;대학&nbsp;전공으로&nbsp;배울&nbsp;때&nbsp;가장&nbsp;먼저&nbsp;입문하게&nbsp;되는&nbsp;것이&nbsp;'자료구조'와&nbsp;'알고리즘'&nbsp;수업입니다.&nbsp;'자료구조'는&nbsp;주로&nbsp;공간(메모리)을&nbsp;어떻게&nbsp;효율적으로&nbsp;활용할&nbsp;것인지를&nbsp;다루고,&nbsp;'알고리즘'은&nbsp;소요&nbsp;시간을&nbsp;얼마나&nbsp;줄일&nbsp;수&nbsp;있는지를&nbsp;공부합니다.&nbsp;이&nbsp;둘의&nbsp;관계는&nbsp;시간과&nbsp;공간을&nbsp;대표하는&nbsp;과목들로,&nbsp;컴퓨팅에&nbsp;대한&nbsp;중요한&nbsp;법칙을&nbsp;내포하고&nbsp;있다고&nbsp;생각합니다.&nbsp;일반적으로&nbsp;이&nbsp;시간과&nbsp;공간은&nbsp;반비례&nbsp;관계에&nbsp;있다고&nbsp;보시면&nbsp;됩니다&nbsp;(꼭&nbsp;그런&nbsp;것은&nbsp;아닙니다만&nbsp;대체로&nbsp;그렇습니다).</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">아래 그림처럼 A &rarr; B로 가는 경우의 수를 구하는 문제를 보면, 직접 선을 하나씩 그려가며 A에서 시작해서 B로 가는 선을 10개 그려서 경우의 수를 구할 수도 있습니다. 하지만 이렇게 풀면 시간이 오래 걸리고 결국 OMR 마킹도 못하고 내는 경우도 있을 겁니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"258\" data-origin-height=\"157\"><span data-url=\"https://blog.kakaocdn.net/dn/Mms0t/btsIhgehy5x/JA15Ab5k0j6AL6pmVvyXi1/img.png\" data-phocus=\"phocus\" data-alt=\"출처 : https://blog.naver.com/dongmin9313/221712819012\"><img src=\"https://blog.kakaocdn.net/dn/Mms0t/btsIhgehy5x/JA15Ab5k0j6AL6pmVvyXi1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FMms0t%2FbtsIhgehy5x%2FJA15Ab5k0j6AL6pmVvyXi1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"347\" height=\"211\" data-origin-width=\"258\" data-origin-height=\"157\"/></span><figcaption>출처 : https://blog.naver.com/dongmin9313/221712819012</figcaption>\n</figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000; text-align: start;\">하지만 우리는 아래 그림과 같은 방법으로도 풀 수 있다는 것을 초등학교와 고등학교 수학 시간에 배웠습니다. 이 방법으로는 A와 B를 한 번씩만 보고 넘기며, 각 칸에 정보를 저장해 가며 한 번에 해결할 수 있습니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"350\" data-origin-height=\"225\"><span data-url=\"https://blog.kakaocdn.net/dn/tH6Cy/btsIhxz4Xly/c3TV5YN74ONYOL9lZl6Re0/img.png\" data-phocus=\"phocus\" data-alt=\"출처 : https://blog.naver.com/dongmin9313/221712819012\"><img src=\"https://blog.kakaocdn.net/dn/tH6Cy/btsIhxz4Xly/c3TV5YN74ONYOL9lZl6Re0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FtH6Cy%2FbtsIhxz4Xly%2Fc3TV5YN74ONYOL9lZl6Re0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"355\" height=\"228\" data-origin-width=\"350\" data-origin-height=\"225\"/></span><figcaption>출처 : https://blog.naver.com/dongmin9313/221712819012</figcaption>\n</figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Apple SD Gothic Neo', Arial, sans-serif; letter-spacing: 0px; color: #000000;\">&nbsp; 공교롭게도,&nbsp;이&nbsp;방법을&nbsp;다시&nbsp;자료구조나&nbsp;알고리즘&nbsp;전공&nbsp;수업&nbsp;때&nbsp;파스칼의&nbsp;삼각형을&nbsp;배우며&nbsp;익히게&nbsp;됩니다.&nbsp;이러한&nbsp;프로그래밍&nbsp;기법을&nbsp;DP(동적&nbsp;계획법,&nbsp;dynamic&nbsp;programming)이라고&nbsp;배웁니다.&nbsp;백트래킹을&nbsp;하지&nbsp;않고도&nbsp;메모리를&nbsp;조금&nbsp;더&nbsp;쓰면&nbsp;경우의&nbsp;수를&nbsp;좀&nbsp;더&nbsp;빨리&nbsp;구할&nbsp;수&nbsp;있다는&nbsp;것입니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Apple SD Gothic Neo', Arial, sans-serif; letter-spacing: 0px; color: #000000;\">&nbsp; 그러나 메모리와 같은 공간적인 개념은 저장공간의 효율적인 대중화로 인해 개발자들이 크게 신경 쓰지 않게 되었으며, 알고리즘 또한 다양한 라이브러리들이 많아서 코드에서는 잘 드러나지 않아 둘 다 간과되는 경우가 많습니다. 비즈니스에 직결되는 개발의 구현 여부만 신경 쓰다 보니, 구 ESM 문의하기도 처음에는 신경 써서 설계했겠지만, 10여 년이 지난 지금은 여러 요구사항들이 덧붙여져 땜질된 상태였습니다. 결과적으로 일부 구현에만 신경 쓴 여러 코드들이 전체적인 시간복잡도나 공간복잡도를 간과한 것들이 쌓이고 쌓여, 결국 어느새 엄청 느려진 조회 속도를 방치할 수밖에 없었습니다. 저 또한 이번에 개편한 코드가 몇십 년 후에는 땜질되어 느려질 수 있기 때문에, 이 프로젝트에 참여한 개발자들을 골라서 탓하는 것은 옳지 않다고 생각합니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">제가 이토록 시간과 공간의 반비례 관계를 강조해도 잊어버릴 수 있는 분들을 위해, 포켓몬스터 게임의 예를 들어 보겠습니다. 게임에는 '시간'을 관장하는 디아루가와 '공간'을 관장하는 펄기아라는 전설의 포켓몬이 항상 싸웁니다. (이 게임의 버전 이름이 공교롭게도 포켓몬스터 \"DP\"입니다.) 이 둘의 관계를 다시 떠올려 보면, 처리 시간을 줄이기 위해 어떤 방법을 선택해야 할지 판단이 더 빨리 설 것입니다.</span></p>\n<p style=\"color: #333333; text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"dialuga.jpg\" data-origin-width=\"578\" data-origin-height=\"327\"><span data-url=\"https://blog.kakaocdn.net/dn/LvHul/btsIfiZeEoF/wJKsHhJbphk8aNrKU68tn0/img.jpg\" data-phocus=\"phocus\" data-alt=\"출처 : https://www.pokemon.com\"><img src=\"https://blog.kakaocdn.net/dn/LvHul/btsIfiZeEoF/wJKsHhJbphk8aNrKU68tn0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FLvHul%2FbtsIfiZeEoF%2FwJKsHhJbphk8aNrKU68tn0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"642\" height=\"363\" data-filename=\"dialuga.jpg\" data-origin-width=\"578\" data-origin-height=\"327\"/></span><figcaption>출처 : https://www.pokemon.com</figcaption>\n</figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">다음은&nbsp;제가&nbsp;이와&nbsp;연관해서&nbsp;실마리를&nbsp;얻고&nbsp;구&nbsp;버전에서&nbsp;신&nbsp;버전으로&nbsp;로직을&nbsp;옮기며&nbsp;성능을&nbsp;해결해&nbsp;나가는&nbsp;부분에&nbsp;대한&nbsp;서술입니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>1. 인덱스를 활용하지 못한 경우</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 인덱스는 데이터베이스를 빠르게 조회할 수 있다는 장점이 있지만, 데이터베이스의 각 행(row)을 기준으로 많은 공간을 사용하게 된다는 단점이 있습니다. 이는 공간을 내어주고 시간을 절약한다는 제 본론과 매우 부합하는 개념 중 하나입니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 문의&nbsp;리스트를&nbsp;가져오는&nbsp;부분은&nbsp;신&nbsp;버전과&nbsp;구&nbsp;버전이&nbsp;대체로&nbsp;비슷합니다.&nbsp;두&nbsp;버전은&nbsp;동일한&nbsp;데이터베이스&nbsp;테이블을&nbsp;바라보고&nbsp;있으며,&nbsp;주로&nbsp;원하는&nbsp;검색&nbsp;필터를&nbsp;기준으로&nbsp;WHERE&nbsp;절에&nbsp;적용하고,&nbsp;테이블에&nbsp;없는&nbsp;추가적인&nbsp;데이터는&nbsp;따로&nbsp;JOIN을&nbsp;통해&nbsp;가져옵니다.&nbsp;그러나&nbsp;두&nbsp;버전의&nbsp;차이를&nbsp;만든&nbsp;원인&nbsp;중&nbsp;하나는&nbsp;SellerID를&nbsp;통합해서&nbsp;조회하는&nbsp;방법입니다.&nbsp;저희&nbsp;회사&nbsp;정책상&nbsp;ESM을&nbsp;보고&nbsp;있는&nbsp;한&nbsp;셀러는&nbsp;MasterID가&nbsp;있고,&nbsp;그&nbsp;아래에는&nbsp;여러&nbsp;하위&nbsp;SellerID들이&nbsp;있습니다.&nbsp;'문의하기'&nbsp;페이지는&nbsp;이러한&nbsp;MasterID에&nbsp;속한&nbsp;모든&nbsp;SellerID를&nbsp;가지고&nbsp;해당&nbsp;SellerID에게&nbsp;주어진&nbsp;문의들을&nbsp;전부&nbsp;조회해야&nbsp;합니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">가장 크리티컬 했던 요소 중 하나를 꼽자면 다음과 같은 코드입니다. (아래 코드는 예시입니다.)</span></p>\n<pre id=\"code_1719552499697\" class=\"cal\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"sql\"><code>foreach (string sellerId in request.sellerList.Split(','))\n{\n    GetList(request); // SQL 실행\n}\n\n//Stored Procedure (SQL)\n\nSELECT ~~~\nFROM TABLE\n//기타 JOIN 생략\nWHERE SELLER_ID = @SELLER_ID\n   AND ~~~~</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">반면 제 것은 다음과 같습니다.</span></p>\n<pre id=\"code_1719552499697\" class=\"pgsql\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"sql\"><code>SELECT ~~~~~\nFROM TABLE \n  JOIN STRING_SPLIT(@SELLER_ID_LIST, ',') AS SPLIT ON TABLE.SELLER_ID = SPLIT.value\n  //기타 JOIN 생략\n  WHERE ~~~~~~~</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">단순히 둘의 시간복잡도를 구상했을 때는 s를 셀러의 개수, q를 뽑아낸 문의 개수로 치환한다면 다음과 같습니다.</span><br /><br /></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li style=\"color: #000000;\"><span style=\"color: #000000;\"><b>기존 접근법</b>:</span>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><span style=\"color: #000000;\">판매자 ID 분리: O(s)</span></li>\n<li><span style=\"color: #000000;\">각&nbsp;판매자별&nbsp;데이터&nbsp;가져오기:&nbsp;O(s&nbsp;*&nbsp;q&nbsp;log&nbsp;q)</span></li>\n<li><span style=\"color: #000000;\">가져온 데이터들 병합: O(s*q)</span></li>\n</ul>\n</li>\n<li style=\"color: #000000;\"><span style=\"color: #000000;\"><b>개선된 접근법</b>:</span>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><span style=\"color: #000000;\">판매자 ID 합치기: O(s)</span></li>\n<li><span style=\"color: #000000;\">SQL 쿼리 실행 및 JOIN: O(s*q)&nbsp; or s가 인덱스가 되어있으면<span style=\"text-align: left;\">&nbsp;O(q log s)</span></span></li>\n</ul>\n</li>\n</ul>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">다행히&nbsp;해당&nbsp;테이블들은&nbsp;SellerID에&nbsp;인덱스가&nbsp;걸려&nbsp;있으므로&nbsp;최종적으로&nbsp;시간복잡도는&nbsp;O(s&nbsp;*&nbsp;q&nbsp;log&nbsp;q)&nbsp;vs&nbsp;O(q&nbsp;log&nbsp;s)가&nbsp;됩니다.&nbsp;아래&nbsp;그래프에서도&nbsp;알&nbsp;수&nbsp;있듯이,&nbsp;Big&nbsp;O의&nbsp;경우&nbsp;n^2이&nbsp;걸리는&nbsp;순간&nbsp;엄청난&nbsp;소요&nbsp;시간&nbsp;차이가&nbsp;발생합니다.&nbsp;개발자&nbsp;취준생들에게&nbsp;이중&nbsp;for&nbsp;loop를&nbsp;최대한&nbsp;피하라고&nbsp;하는&nbsp;이유도&nbsp;여기&nbsp;있습니다.&nbsp;코딩&nbsp;테스트에서&nbsp;수행&nbsp;시간&nbsp;테스트가&nbsp;점수에&nbsp;포함되는&nbsp;것도&nbsp;그&nbsp;때문입니다.&nbsp;MasterID에&nbsp;딸린&nbsp;셀러&nbsp;개수가&nbsp;많을수록,&nbsp;테이블&nbsp;자체에&nbsp;있는&nbsp;총&nbsp;문의&nbsp;개수가&nbsp;많아질수록&nbsp;조회&nbsp;속도가&nbsp;느려질&nbsp;수밖에&nbsp;없는&nbsp;상황이었던&nbsp;것입니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1342\" data-origin-height=\"1094\"><span data-url=\"https://blog.kakaocdn.net/dn/ckotRr/btsIe0xNjRb/FWx2gHJ4YRG31NyksUXMh0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/ckotRr/btsIe0xNjRb/FWx2gHJ4YRG31NyksUXMh0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FckotRr%2FbtsIe0xNjRb%2FFWx2gHJ4YRG31NyksUXMh0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"607\" height=\"495\" data-origin-width=\"1342\" data-origin-height=\"1094\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">제가&nbsp;제시한&nbsp;방법의&nbsp;단점은,&nbsp;그래도&nbsp;JOIN을&nbsp;위해&nbsp;해당&nbsp;SELLER_ID_LIST를&nbsp;내부적으로&nbsp;임시&nbsp;테이블로&nbsp;만들고&nbsp;JOIN 하기&nbsp;때문에&nbsp;공간을&nbsp;포기하는&nbsp;셈이라는&nbsp;점입니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>2. 임시 테이블과 JOIN 활용하기</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">또 다른 사례는 답변과의 임시테이블을 만들고 나서 JOIN 하는 방식입니다. 구버전에서 몇 SQL 들은 비록 답변을 하기 위해 질문을 클릭해야만 답변 내용을 표시해 주어서 답변 관련 JOIN은 필요 없을 줄 알았지만, 놀랍게도 답변 시각과 제목은 list로 같이 짝지어 보여주고 있었기 때문에 답변 관련 데이터들은 이미 답변과 짝도 짓고 있었던 셈입니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1552\" data-origin-height=\"249\"><span data-url=\"https://blog.kakaocdn.net/dn/bCzOqG/btsIhh5jTCf/HBIa2VI8tYF5npjk7WtudK/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bCzOqG/btsIhh5jTCf/HBIa2VI8tYF5npjk7WtudK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbCzOqG%2FbtsIhh5jTCf%2FHBIa2VI8tYF5npjk7WtudK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"972\" height=\"156\" data-origin-width=\"1552\" data-origin-height=\"249\"/></span></figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">기존 전략은 단순히 답변 테이블과 JOIN 한 후에 WHERE 절로 검색 필터에 들어온 값들을 걸러내는 방식이었습니다.</span></p>\n<pre id=\"code_1719552499698\" class=\"n1ql\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"sql\"><code>SELECT ~~~~\nFROM QUESTION\nLEFT JOIN ANSWER\nWHERE ~~~~~~</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 반면,&nbsp;저는&nbsp;인덱스가&nbsp;되는&nbsp;검색&nbsp;필터&nbsp;값들을&nbsp;먼저&nbsp;걸러낸&nbsp;임시&nbsp;테이블을&nbsp;만든&nbsp;후에&nbsp;JOIN을&nbsp;했습니다.&nbsp;이렇게&nbsp;하면&nbsp;한꺼번에&nbsp;JOIN 하는&nbsp;것보다&nbsp;후보지가&nbsp;줄어들고,&nbsp;나머지&nbsp;인덱스가&nbsp;걸리지&nbsp;않은&nbsp;것들은&nbsp;WHERE&nbsp;절에서&nbsp;거르더라도&nbsp;시간이&nbsp;덜&nbsp;걸립니다.&nbsp;이&nbsp;역시&nbsp;임시&nbsp;테이블을&nbsp;위해&nbsp;공간을&nbsp;더&nbsp;쓰는&nbsp;방식이지만,&nbsp;한편으로는&nbsp;더욱&nbsp;빠른&nbsp;속도를&nbsp;수행하게&nbsp;됩니다.</span></p>\n<pre id=\"code_1719552499699\" class=\"sql\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"sql\"><code>WITH FilteredQuestions AS (\n    SELECT ~~~~\n    FROM QUESTION\n    LEFT JOIN ANSWER ON ~~~~\n    WHERE ~~~~(여기는 인덱스값) AND ~~~~ AND ~~~~\n)\nSELECT ~~~~\nFROM QUESTION\nJOIN FilteredQuestions ON ~~~~\nWHERE ~~~~ AND ~~~~</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 게다가 이번 개편을 통해 한 가지 호재가 더 있었습니다. 답변의 타이틀을 없앤다는 정책이 새로 만들어졌고, 답변이 없는 '미처리' 상태로 조회하는 것이 디폴트가 되었습니다. 따라서 판매자가 '미처리'된 문의 건들을 조회할 때는 굳이 답변을 JOIN 할 필요가 없게 되었습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">그래서 저는 사용자가 검색 필터로 넣는 '처리 상태' 값에 따라 쿼리를 분기 처리하는 아이디어를 냈습니다. 만약 '미처리' 상태로 조회할 경우, 답변과 JOIN 하지 않는 쿼리를 사용하고, '처리 완료'나 '전체'라는 값이 들어올 때만 위의 쿼리를 사용하는 것입니다</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<pre id=\"code_1719552499699\" class=\"bash\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"bash\"><code>SELECT ~~~~\nFROM QUESTION\nWHERE ~~~~~~</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>2. Hash Table (Map, Dictionary 등)을 적극적으로 활용하기</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>1) Enum에서 Map 활용하기&nbsp;</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 사실&nbsp;이&nbsp;또한&nbsp;코딩테스트를&nbsp;보게&nbsp;되면&nbsp;지겹도록&nbsp;익히게&nbsp;되는&nbsp;법칙이지만,&nbsp;Hash&nbsp;Table을&nbsp;사용하면&nbsp;시간&nbsp;복잡도가&nbsp;O(1)로&nbsp;월등히&nbsp;줄어듭니다. 생각보다 많은&nbsp;개발자들이&nbsp;놓치는&nbsp;것&nbsp;중&nbsp;하나는&nbsp;Hash&nbsp;Table이&nbsp;매칭/매핑할&nbsp;때&nbsp;무엇보다&nbsp;큰&nbsp;성능을&nbsp;발휘한다는&nbsp;점입니다.&nbsp;가장&nbsp;큰&nbsp;예시로는&nbsp;Enum을&nbsp;사용할&nbsp;때입니다.&nbsp;Enum은&nbsp;일종의&nbsp;나열된&nbsp;집합체로,&nbsp;가독성과&nbsp;해시&nbsp;성질&nbsp;덕분에&nbsp;많은&nbsp;코드에서도&nbsp;여전히&nbsp;많이&nbsp;발견됩니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Helvetica Neue', 'Apple SD Gothic Neo', Arial, sans-serif; letter-spacing: 0px; color: #000000;\">아래의 예시는 실제 코드는 아니고 제가 임시로 만든 코드입니다.</span></p>\n<pre id=\"code_1719552499700\" class=\"aspectj\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"java\"><code>import lombok.Getter;\nimport lombok.RequiredArgsConstructor;\n\n@Getter\n@RequiredArgsConstructor\npublic enum PhoneAreaEnum {\n    SEOUL(\"서울\", \"02\"),\n    BUSAN(\"부산\", \"051\"),\n    DAEGU(\"대구\", \"053\"),\n    INCHEON(\"인천\", \"032\"),\n    GWANGJU(\"광주\", \"062\"),\n    DAEJEON(\"대전\", \"042\");\n\n    private final String koreanName;\n    private final String code;\n\n    public static String findByCode(String code) {\n        for (PhoneAreaEnum area : PhoneAreaEnum.values()) {\n            if (area.getCode().equals(code)) {\n                return area.getKoreanName();\n            }\n        }\n        return null;\n    }\n}</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 여기서 만약 조회한 문의 건들 안에 code만 있어서 이를 front에서 표시하기 위한 koreanName을 가져와야 한다면 다음과 같이&nbsp;<span style=\"text-align: start;\">PhoneAreaEnum.findByCode(entity.code)를 썼을 텐데요. 보다시피 해당 코드는 for를 돌아 O(문의 결과 리스트 * Enum 개수)을 돌게 됩니다.</span></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<pre id=\"code_1719552499701\" class=\"processing\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"java\"><code>import lombok.Getter;\nimport lombok.RequiredArgsConstructor;\n\nimport java.util.Arrays;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\n@Getter\n@RequiredArgsConstructor\npublic enum PhoneAreaEnum {\n    SEOUL(\"서울\", \"02\"),\n    BUSAN(\"부산\", \"051\"),\n    DAEGU(\"대구\", \"053\"),\n    INCHEON(\"인천\", \"032\"),\n    GWANGJU(\"광주\", \"062\"),\n    DAEJEON(\"대전\", \"042\");\n\n    private final String koreanName;\n    private final String code;\n\n    private static final Map&lt;String, PhoneAreaEnum&gt; codeToEnumMap = Arrays.stream(PhoneAreaEnum.values())\n            .collect(Collectors.toMap(PhoneAreaEnum::getCode, area -&gt; area));\n\n    public static String findByCode(String code) {\n        PhoneAreaEnum area = codeToEnumMap.get(code);\n        return (area != null) ? area.getKoreanName() : null;\n    }\n}</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">하지만&nbsp;이런&nbsp;식으로&nbsp;바꾸면&nbsp;처음에&nbsp;Map을&nbsp;세팅할&nbsp;때에만&nbsp;for&nbsp;loop가&nbsp;돌고,&nbsp;조회된&nbsp;건수를&nbsp;일일이&nbsp;매핑할&nbsp;때는&nbsp;미리&nbsp;만들어둔&nbsp;Map에서&nbsp;O(1)의&nbsp;시간&nbsp;복잡도로&nbsp;빠르게&nbsp;매핑해&nbsp;나갈&nbsp;수&nbsp;있습니다.&nbsp;특히,&nbsp;많은&nbsp;Enum&nbsp;값을&nbsp;다룰&nbsp;때&nbsp;이&nbsp;방법이&nbsp;유리합니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>2) 서비스 분기처리를 Map으로 하기</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">이&nbsp;외에도&nbsp;사소한&nbsp;시간&nbsp;영향을&nbsp;주는&nbsp;if/else에&nbsp;대한&nbsp;얘기를&nbsp;Map과&nbsp;연관시켜&nbsp;살펴보겠습니다.&nbsp;저는&nbsp;통합&nbsp;조회&nbsp;API를&nbsp;만들었고,&nbsp;서로&nbsp;다른&nbsp;사이트인&nbsp;'지마켓'과&nbsp;'옥션',&nbsp;그리고&nbsp;각각의&nbsp;'게시판&nbsp;문의'와&nbsp;'긴급&nbsp;메시지'의&nbsp;비즈니스&nbsp;로직을&nbsp;다르게&nbsp;처리하고자&nbsp;했습니다.&nbsp;절차지향적인&nbsp;코드라면&nbsp;한&nbsp;컨트롤러에&nbsp;한&nbsp;서비스를&nbsp;사용하고,&nbsp;if/else나&nbsp;switch&nbsp;문을&nbsp;통해&nbsp;분기&nbsp;처리를&nbsp;했을&nbsp;겁니다.&nbsp;예를&nbsp;들어,&nbsp;'옥션&nbsp;게시판&nbsp;문의'가&nbsp;요청으로&nbsp;들어왔다면&nbsp;if(옥션)&nbsp;안에&nbsp;if(게시판&nbsp;문의)로&nbsp;중첩해서&nbsp;로직을&nbsp;썼거나,&nbsp;else&nbsp;if&nbsp;(옥션&nbsp;게시판&nbsp;문의)&nbsp;식으로&nbsp;썼을&nbsp;수도&nbsp;있습니다.&nbsp;다만,&nbsp;이&nbsp;방법은&nbsp;미세하지만&nbsp;if,&nbsp;else&nbsp;if,&nbsp;else&nbsp;if&nbsp;혹은&nbsp;if&nbsp;안에&nbsp;if를&nbsp;거치기&nbsp;때문에&nbsp;불필요한&nbsp;시간이&nbsp;소요됩니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">그래서&nbsp;저는&nbsp;handler들을&nbsp;자체적으로&nbsp;만들고,&nbsp;Spring에&nbsp;내장된&nbsp;handlerMap을&nbsp;사용하는&nbsp;것을&nbsp;권장합니다.</span><br /><br /><span style=\"color: #000000;\">예시를&nbsp;들자면&nbsp;다음과&nbsp;같은&nbsp;코드입니다.</span><br /><br /><span style=\"color: #000000;\">먼저 저의 케이스를 코드로 대강 풀이하자면 다음과 같습니다. 먼저 다음과 같이 handler interface를 만들어둡니다. 다음 코드들은 변수명도 다른 임의의 코드입니다.</span></p>\n<div style=\"background-color: #282c34; color: #bbbbbb;\">\n<pre class=\"routeros\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-language=\"java\"><code>public interface QnaQueryListHandler {\n    List&lt;MappedEntity&gt; processList(HandlerRequest request);\n}</code></pre>\n</div>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">다음, 옥션과 지마켓 각각의 인터페이스 혹은 추상 클래스로 각각 사이트별로 처리하는 방식을 먼저 정합니다. 저는 FeignClient를 의존성 주입하기 위해 추상 클래스를 사용했고, 'AbstractAuctionQnaQueryListHandler'와 'AbstractGmarketQnaQueryListHandler'를 만들어 각각 사이트별로 다른 방법을 오버라이딩하여 분기합니다.</span></p>\n<div style=\"background-color: #282c34; color: #bbbbbb;\">\n<pre class=\"aspectj\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-language=\"java\"><code>@Service\npublic abstract class AbstractAuctionQnaQueryListHandler implements QnaQueryListHandler {\n\n    private String extractIds(HandlerRequest request) {\n        // 해당 방법은 지마켓 옥션이 다르기 때문에 분기될만함.\n        return \"\";\n    }\n\n    @Override\n    public List&lt;MappedEntity&gt; processList(HandlerRequest request) {\n        String ids = extractIds(request);\n        return handleIds(ids, request);\n    }\n\n    protected abstract List&lt;? extends MappedEntity&gt; handleIds(String ids, HandlerRequest request);\n}</code></pre>\n</div>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">그런 다음, 옥션에 해당되는 게시판 문의에 대한 비즈니스 로직을 작성합니다.</span></p>\n<div style=\"background-color: #282c34; color: #bbbbbb;\">\n<pre class=\"scala\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-language=\"java\"><code>@Service(\"AUCTION_BOARD_INQUIRY_QUERY_LIST_HANDLER\")\npublic class AuctionBoardQueryListHandler extends AbstractAuctionQnaQueryListHandler {\n\n    @Override\n    protected List&lt;? extends MappedEntity&gt; handleIds(String ids, HandlerRequest request) {\n        // 생략\n        return new ArrayList&lt;&gt;();\n    }\n}</code></pre>\n</div>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">이와&nbsp;같은&nbsp;방식으로&nbsp;지마켓&nbsp;긴급&nbsp;메시지,&nbsp;지마켓&nbsp;게시판&nbsp;문의,&nbsp;옥션&nbsp;긴급&nbsp;메시지도&nbsp;동일하게&nbsp;작성합니다.&nbsp;이렇게&nbsp;하면&nbsp;QnaQueryListHandler에&nbsp;묶인&nbsp;서비스들이&nbsp;하나의&nbsp;Map으로&nbsp;Spring에&nbsp;내장된&nbsp;기능에&nbsp;의해&nbsp;생성됩니다.&nbsp;이를&nbsp;서비스&nbsp;단에&nbsp;의존성&nbsp;주입하고&nbsp;사용하면&nbsp;됩니다.</span></p>\n<div style=\"background-color: #282c34; color: #bbbbbb;\">\n<pre class=\"dart\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-language=\"sql\"><code>@RequiredArgsConstructor\npublic class QnaQueryServiceImpl implements QnaQueryService {\n\n    private final Map&lt;String, QnaQueryListHandler&gt; qnaQueryListHandlerMap;\n    // 생략\n    \n    public QueryEntity&lt;QueryListQueryEntity&gt; getQueryList(QnaQueryListRequest qnaQueryListRequest) {\n        String handlerKey = String.format(\"%s_%s_QUERY_LIST_HANDLER\",\n            qnaQueryListRequest.getSite().name(), qnaQueryListRequest.getMessageType().name());\n        QnaQueryListHandler handler = qnaQueryListHandlerMap.get(handlerKey);\n        List&lt;QueryListJpaEntity&gt; jpaEntityList = handler.processList(qnaQueryListRequest);\n        // 생략\n    }\n}</code></pre>\n</div>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">해당 방법을 사용하면 서비스별로 if/else로 분기 처리하는 것을 보다는 가독성을 가져오면서도, 사이트별 혹은 문의 유형별 공통 기능들도 쉽게 유지보수하며 성능을 약간 더 향상할 수 있는 여지가 생깁니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>3. Multithread 활용하기</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; Java가&nbsp;Node&nbsp;계열의&nbsp;JavaScript나&nbsp;데이터&nbsp;구조화에&nbsp;유리한&nbsp;Python에&nbsp;밀리는&nbsp;추세라고는&nbsp;하지만,&nbsp;Interpreter&nbsp;언어들과&nbsp;달리&nbsp;Java가&nbsp;근본적으로&nbsp;가지고&nbsp;있는&nbsp;강점&nbsp;중&nbsp;하나는&nbsp;Multithread의&nbsp;활용성입니다.&nbsp;범용성이&nbsp;높다는&nbsp;Python도&nbsp;아직&nbsp;JVM의&nbsp;멀티스레딩과&nbsp;저용량&nbsp;성능을&nbsp;따라오지&nbsp;못하고&nbsp;있습니다.&nbsp;그러므로&nbsp;Java&nbsp;개발자라면&nbsp;Multithread를&nbsp;적재적소에&nbsp;활용해야&nbsp;한다고&nbsp;봅니다.&nbsp;특히&nbsp;성능을&nbsp;고려해야&nbsp;하는&nbsp;경우에는&nbsp;더욱&nbsp;그렇습니다.</span><br /><br /><span style=\"color: #000000;\">저의&nbsp;경우,&nbsp;웬만하면&nbsp;같은&nbsp;DB&nbsp;서버에&nbsp;묶여&nbsp;있고&nbsp;인덱스가&nbsp;있으면&nbsp;최대한&nbsp;JOIN을&nbsp;선호합니다.&nbsp;관계형&nbsp;데이터베이스는&nbsp;이를&nbsp;위해&nbsp;만들어진&nbsp;것이기&nbsp;때문입니다.&nbsp;하지만&nbsp;DB&nbsp;서버가&nbsp;같이&nbsp;묶여&nbsp;있지&nbsp;않거나&nbsp;인덱스가&nbsp;없다면&nbsp;JOIN은&nbsp;어렵습니다.&nbsp;따라서&nbsp;다른&nbsp;SQL이나&nbsp;API&nbsp;호출을&nbsp;통해&nbsp;데이터를&nbsp;얻은&nbsp;후,&nbsp;기존에&nbsp;조회된&nbsp;문의&nbsp;결과와&nbsp;매칭할&nbsp;수밖에&nbsp;없습니다.&nbsp;이럴&nbsp;때,&nbsp;문의&nbsp;결과&nbsp;리스트&nbsp;n개와&nbsp;다른&nbsp;데이터&nbsp;리스트&nbsp;m개를&nbsp;이중&nbsp;for문으로&nbsp;처리해서는&nbsp;안&nbsp;되고,&nbsp;아래&nbsp;예제와&nbsp;같이&nbsp;Map을&nbsp;먼저&nbsp;만들어줘야&nbsp;성능이&nbsp;나옵니다.</span><br /><br /></p>\n<pre id=\"code_1719552499704\" class=\"mipsasm\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"java\"><code>Map&lt;String, ExtraBasicInfoResponse&gt; extraInfoMap = extraUrlConfig.getExtraBasicInfoMap(extraNumbersList, siteId);</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">그&nbsp;후&nbsp;해당&nbsp;Map을&nbsp;가지고&nbsp;매칭을&nbsp;하면&nbsp;되는데,&nbsp;이때&nbsp;단순&nbsp;매칭을&nbsp;위해서는&nbsp;순서가&nbsp;중요하지&nbsp;않기&nbsp;때문에&nbsp;다음과&nbsp;같이&nbsp;Multithread를&nbsp;사용하여&nbsp;동시성&nbsp;있게&nbsp;처리하면&nbsp;조회&nbsp;성능을&nbsp;끌어올리는&nbsp;데&nbsp;도움이&nbsp;됩니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<pre id=\"code_1719552499704\" class=\"reasonml\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"java\"><code>return entityList.parallelStream()\n    .map(entity -&gt; {\n        TempEntity tempEntity = asEntity(entity);\n        ExtraBasicInfoResponse extraInfo = extraInfoMap.get(entity.getNo());\n        // 생략\n    });</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">다만, 단점은 메모리를 잡아먹기 때문에 해당 프로젝트에 같이 돌고 있는 다른 도메인들에게도 영향이 갈 수 있다는 점입니다. 제가 사용한 parallelStream은 단순하지만, 가독성을 위해 Stream 객체를 따로 만들어야 한다는 점과 Common ForkJoinPool을 사용하기 때문에 다른 곳에서도 해당 스레드풀을 사용하면 성능 향상이 예상보다 낮을 수 있습니다. 그렇다고 무작정 ForkJoinPool이나 ExecutorService와 같은 객체를 따로 만든다면 같은 parallelStream을 사용하는 도메인에는 영향을 주지 않지만 추가된 메모리 공간을 사용해야 합니다. 만약 여러 도메인들이 조회 성능만을 생각해 이런 식으로 풀을 추가했다가 총메모리를 초과해 GC 에러를 시켜 서버가 중단된다면 큰일입니다. 그러므로 더욱 신중하게 고려해야 합니다. 따라서 아무리 조회 성능을 향상한다 해도 메모리 공간을 지나치게 포기하면 안 됩니다. 다행히 저 코드 프로젝트는 parellelstream을 아직 쓰는 곳이 거의 없을뿐더러 '문의하기'처럼 규모가 있는 트래픽을 담당할만한 도메인이 아직까지는 없는 것으로 파악했습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\"><b>4. GROUP BY를 안 쓰고도 카운트 집계 성능 내는 방법</b></span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">가장&nbsp;문제가&nbsp;되는&nbsp;구버전의&nbsp;조회에는&nbsp;집계&nbsp;기능도&nbsp;포함되어&nbsp;있었습니다.&nbsp;집계를&nbsp;할&nbsp;때&nbsp;거의&nbsp;필수적으로&nbsp;쓰이는&nbsp;SQL문은&nbsp;GROUP&nbsp;BY입니다.&nbsp;GROUP&nbsp;BY는&nbsp;사용자에게&nbsp;다양한&nbsp;형태의&nbsp;데이터를&nbsp;제공하는&nbsp;유용한&nbsp;SQL문입니다.&nbsp;다만,&nbsp;GROUP&nbsp;BY를&nbsp;사용하면&nbsp;유형별&nbsp;임시&nbsp;공간이&nbsp;필요하고,&nbsp;그룹화를&nbsp;위해&nbsp;정렬을&nbsp;해야&nbsp;하므로&nbsp;일반적으로&nbsp;O(n&nbsp;log&nbsp;n)의&nbsp;시간복잡도를&nbsp;가집니다.</span><br /><br /><span style=\"color: #000000;\">예시로, 구버전이 사용하는 집계 함수는 다음과 같은 코드 형태입니다.</span></p>\n<pre id=\"code_1719552499704\" class=\"routeros\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"sql\"><code>SELECT TYPE_CODE,\n       COUNT(*) AS COUNT\nFROM EXAMPLE\nWHERE CREATION_DATE BETWEEN @START_DATE AND @END_DATE\nGROUP BY TYPE_CODE;</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">신버전에서는 다음과 같이 집계를 수행할 수 있습니다. 단, 이 방법은 고정된 TYPE_CODE가 정해져 있어야 합니다. 예를 들어, 성별과 같이 단순한 기준으로 row 개수를 구할 때는 유용하지만, 직업별 row 개수처럼 특정되지 않은 채로 다양한 유형별 개수를 파악할 때는 사용하기 어렵습니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<pre id=\"code_1719552499704\" class=\"sql\" style=\"background-color: #f8f8f8; color: #383a42;\" data-ke-type=\"codeblock\" data-ke-language=\"sql\"><code>SELECT ISNULL(SUM(CASE WHEN TYPE_CODE = '1' THEN 1 ELSE 0 END), 0) AS FATHER,\n       ISNULL(SUM(CASE WHEN TYPE_CODE = '2' THEN 1 ELSE 0 END), 0) AS MOTHER,\n       ISNULL(SUM(CASE WHEN TYPE_CODE = '3' THEN 1 ELSE 0 END), 0) AS SON,\n       ISNULL(SUM(CASE WHEN TYPE_CODE = '4' THEN 1 ELSE 0 END), 0) AS DAUGHTER\nFROM EXAMPLE\nWHERE CREATION_DATE BETWEEN @START_DATE AND @END_DATE;</code></pre>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">이렇게&nbsp;변경하면&nbsp;GROUP&nbsp;BY처럼&nbsp;추가적인&nbsp;임시&nbsp;공간을&nbsp;거의&nbsp;사용하지&nbsp;않으며,&nbsp;집계&nbsp;결과를&nbsp;저장할&nbsp;몇&nbsp;개의&nbsp;변수&nbsp;공간만&nbsp;필요하고,&nbsp;한&nbsp;번만&nbsp;순회하면&nbsp;끝나기&nbsp;때문에&nbsp;시간복잡도&nbsp;역시&nbsp;O(n)에&nbsp;그칩니다.&nbsp;이처럼&nbsp;무작정&nbsp;시간과&nbsp;공간이&nbsp;반비례하는&nbsp;것은&nbsp;아닙니다.&nbsp;포켓몬에서도&nbsp;간혹&nbsp;디아루가와&nbsp;펄기아가&nbsp;힘을&nbsp;합칠&nbsp;때가&nbsp;있듯이&nbsp;말입니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"K7GRKntDNhD8N-aF7wZqD61_7f7Ngdcs7AHgft29NzxcHB9MrktRZLsjZmJxGWD-O_i8QwgnCBExRLTDjUPehHhbylFQO98XEE-ZmYs8B7KXAZsDYlc-beQA1knuUa8UzYexLPZ_MfCnmbeGq9EDFw.webp\" data-origin-width=\"1000\" data-origin-height=\"694\"><span data-url=\"https://blog.kakaocdn.net/dn/bkpWwZ/btsIfKAUplX/edF4VW3i0unLLnqJ40d5n0/img.webp\" data-phocus=\"phocus\" data-alt=\"출처 : https://pokemon.fandom.com/\"><img src=\"https://blog.kakaocdn.net/dn/bkpWwZ/btsIfKAUplX/edF4VW3i0unLLnqJ40d5n0/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbkpWwZ%2FbtsIfKAUplX%2FedF4VW3i0unLLnqJ40d5n0%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"560\" height=\"389\" data-filename=\"K7GRKntDNhD8N-aF7wZqD61_7f7Ngdcs7AHgft29NzxcHB9MrktRZLsjZmJxGWD-O_i8QwgnCBExRLTDjUPehHhbylFQO98XEE-ZmYs8B7KXAZsDYlc-beQA1knuUa8UzYexLPZ_MfCnmbeGq9EDFw.webp\" data-origin-width=\"1000\" data-origin-height=\"694\"/></span><figcaption>출처 : https://pokemon.fandom.com/</figcaption>\n</figure>\n</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">&nbsp; 개편된&nbsp;ESM을&nbsp;오픈한&nbsp;지&nbsp;며칠&nbsp;안&nbsp;된&nbsp;지금,&nbsp;아직까지는&nbsp;큰&nbsp;문제가&nbsp;없어&nbsp;보입니다.&nbsp;더욱&nbsp;빨라진&nbsp;조회&nbsp;속도로&nbsp;인해&nbsp;조회&nbsp;빈도&nbsp;자체가&nbsp;예전에&nbsp;비해&nbsp;급속도로&nbsp;높아진&nbsp;점에서&nbsp;고무적이라고&nbsp;생각합니다.&nbsp;기획과&nbsp;UI/UX&nbsp;팀에서&nbsp;조회&nbsp;성능을&nbsp;위해&nbsp;적절한&nbsp;대안을&nbsp;찾고,&nbsp;정책적인&nbsp;변화를&nbsp;통해&nbsp;중복되는&nbsp;칼럼들을&nbsp;단건씩&nbsp;보이게&nbsp;하여&nbsp;조회&nbsp;성능에&nbsp;집중할&nbsp;수&nbsp;있게&nbsp;해준&nbsp;점에&nbsp;대해서도&nbsp;감사합니다.&nbsp;이러한&nbsp;변화는&nbsp;구매자의&nbsp;문의를&nbsp;보고&nbsp;싶어도&nbsp;답답한&nbsp;속도&nbsp;때문에&nbsp;못&nbsp;보고&nbsp;지나쳤던&nbsp;판매자들에게&nbsp;더&nbsp;큰&nbsp;기회를&nbsp;줄&nbsp;수&nbsp;있을&nbsp;것입니다.&nbsp;또한,&nbsp;물건을&nbsp;사기&nbsp;전에&nbsp;답변이&nbsp;오지&nbsp;않아&nbsp;망설였던&nbsp;고객들의&nbsp;발걸음을&nbsp;되돌릴&nbsp;수&nbsp;있을&nbsp;것이라&nbsp;기대합니다.</span></p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: justify;\" data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "안녕하세요.\nSeller & SD Engineering팀의 김민우입니다.\n \n이번 글은 ESM(지마켓 판매자 사이트) 개편 중 '문의하기' 개발을 맡으며 겪었던 어려움과 이를 해결해 나가는 몇 가지 방법들을 소개하고자 합니다. 제가 개발 맡은 부분은 판매자에게 구매자의 문의내용을 담당하는 '게시판 문의', 그리고 CS(고객센터)에서 주는 '긴급 메시지'를 통합하여 지마켓과 옥션  두 사이트에 대해 각각 보여주는 통합 페이지를 개편시키는 일이었습니다.\n \n각설하고 조회 성능을 올린 결과물부터 영상으로 보시죠.\n\n\n\n \n  영상에서 보셨듯이, 대형 셀러의 경우 한 페이지를 로드하는 데 기본 몇십 초가 걸립니다. 페이지를 넘길 때조차 마찬가지입니다. 상품이 많아질수록 문의도 증가하기 마련인데, 모든 문의에 일일이 답변하기는 어렵기 때문에 미응답으로 남는 경우가 많습니다. 이러한 어드민 페이지를 개편할 때 보통 프론트엔드 중심으로 성과를 드러내는 경우가 많았고, 저 역시 해당 프로젝트를 처음 배정받았을 때는 성능 개선에 대한 기획은 없었습니다. 백엔드 로직은 그대로 두되 UI/UX를 고치는 것이 본래 목적이었습니다. 하지만 백엔드 개발이 메인인 저는 충격적인 성능을 목격하고서, 이번 프로젝트에서 백엔드에서도 성과를 낼 수 있음을 보여주기 위해, 두려움과 동시에 최선을 다해야겠다고 마음먹었습니다.\n \n저에게 주어진 과제의 걸림돌이었던 점을 나열해보겠습니다.\n \n \n1. 답변까지 복수로 조회\n \n  구버전에서는 문의를 클릭해야만 해당 문의에 대한 답변을 볼 수 있었습니다. 많은 판매자 분들이 답변을 일괄적으로 처리하지 못하고 하나하나 처리해야 한다는 어려움을 호소해 주셨습니다. 그래서 새로운 버전에서는 답변 칸을 문의 옆에 짝지어 나열하는 UI/UX로 변경하게 되었습니다. 그러나 개발자로서 이미 몇십 초가 걸리는 조회 로직에 답변까지 함께 짝지어서 조회하려면 얼마나 더 오래 걸릴지 막막하기만 했습니다.\n \n \n\n\n \n \n \n2. 네 가지의 도메인을 데이터 구조는 그대로 두고 통합\n \n앞서 서두에서 언급했듯이, 지마켓/옥션 각각의 '게시판 문의'와 '긴급 메시지'라는 비슷하지만 엄연히 다른 도메인을 한 가지 표에 통합해야 했습니다. 흔히 1번에 이어서 ESM 전용으로 조회하기 좋은 단순한 데이터베이스를 구상해 본다면 다음과 같습니다.\n \n\n\n \n \n서로 다른 정책과 프로세스를 가진 제각각 2000년대 중반에 아우르는 유서 깊은 레거시들을 전부 다 조사하는 것도 일이었지만, 데이터 자체를 그대로 둔 채로 통합하면서 속도 성능을 내야 하는 건 생각보다 큰 과제였습니다.\n\n\n \n데이터를 분석하면서 충격적이었던 점은 옥션 긴급 메시지를 제외하고는 '질문'과 '답변'이 같은 테이블에 섞여 들어가 있다는 점이었습니다. 한 질문에 대한 답변을 찾으려면 셀프 조인을 해야 했습니다. 그렇다고 파티션이 되어 있는 것도 아니었습니다. 질문과 답변이 1:1 관계도 아니었고, 한 개의 질문에 대해 여러 번 답변이 가능한 구조였습니다. 가뜩이나 답변 하나 가져오는 데도 몇십 초가 걸리는 상황에서, 같은 테이블에서 셀프 조인하고 여러 답변 중 가장 최신의 답변을 가져와야 했습니다.\n통상적으로 이런 통합된 페이지의 성능을 높이려면 데이터 구조부터 바꾸거나 기존 테이블들을 그대로 두되, 새로 구상한 테이블에 기존 테이블의 데이터를 배치나 스트림을 통해 미리 최신의 답변을 집계하고 데이터를 통합해서 주기적으로 업데이트하는 것이 최적의 방법입니다. 그러나 개발 공수 기간이 짧아 이 방법을 적용할 수 없었습니다.\n \n \n3. 대용량의 데이터베이스\n \n  해당 테이블들의 정확한 데이터양 수치를 서술하기에는 보안상의 이슈가 있을 것 같아 대략적으로 말씀드리자면, 상품 및 주문 도메인 관련 테이블들과 비슷하게 엄청난 볼륨을 가지고 있었습니다. 데이터베이스들의 생성 시기와 가장 오래된 데이터의 날짜를 비교해 보면, 그나마 한 번쯤은 데이터를 정리한 것 같습니다만, 근 10년간의 게시판 문의와 긴급 메시지들이 쌓여 있다는 점에서도 두려웠습니다. 대용량 데이터를 주로 다뤘던 경험상, 데이터베이스의 크기 자체는 대용량까지는 아니지만, 행(Row)의 수는 중견급 마켓의 상품 수와 맞먹을 정도였습니다.\n \n이 때문에 인덱스를 새로 추가하는 것도 이미 큰 데이터베이스에 무리가 가기에 리스크가 있었고, 오래된 데이터를 비우는 일도 마이그레이션과 더불어 파티셔닝에 신경 써야 했기 때문에 개발 공수를 맞추기에는 부족했습니다. 따라서 추후 옵션으로 고려할 수는 있으나, 기존 데이터베이스 테이블들을 건드는 일 자체가 당장은 어렵다는 것이 확실했습니다.\n \n\n\n \n이런 비슷한 상황에서 조회 속도를 어떻게 올릴 것인가를 고민하는 다른 여러 개발자들을 위해 제가 해결해 나간 과정을 소개합니다. \n \n우선 방법 소개에 앞서, 잠깐 언급할 개념이 있습니다. 개발을 대학 전공으로 배울 때 가장 먼저 입문하게 되는 것이 '자료구조'와 '알고리즘' 수업입니다. '자료구조'는 주로 공간(메모리)을 어떻게 효율적으로 활용할 것인지를 다루고, '알고리즘'은 소요 시간을 얼마나 줄일 수 있는지를 공부합니다. 이 둘의 관계는 시간과 공간을 대표하는 과목들로, 컴퓨팅에 대한 중요한 법칙을 내포하고 있다고 생각합니다. 일반적으로 이 시간과 공간은 반비례 관계에 있다고 보시면 됩니다 (꼭 그런 것은 아닙니다만 대체로 그렇습니다).\n \n \n아래 그림처럼 A → B로 가는 경우의 수를 구하는 문제를 보면, 직접 선을 하나씩 그려가며 A에서 시작해서 B로 가는 선을 10개 그려서 경우의 수를 구할 수도 있습니다. 하지만 이렇게 풀면 시간이 오래 걸리고 결국 OMR 마킹도 못하고 내는 경우도 있을 겁니다.\n출처 : https://blog.naver.com/dongmin9313/221712819012\n\n\n \n하지만 우리는 아래 그림과 같은 방법으로도 풀 수 있다는 것을 초등학교와 고등학교 수학 시간에 배웠습니다. 이 방법으로는 A와 B를 한 번씩만 보고 넘기며, 각 칸에 정보를 저장해 가며 한 번에 해결할 수 있습니다.\n출처 : https://blog.naver.com/dongmin9313/221712819012\n\n\n \n  공교롭게도, 이 방법을 다시 자료구조나 알고리즘 전공 수업 때 파스칼의 삼각형을 배우며 익히게 됩니다. 이러한 프로그래밍 기법을 DP(동적 계획법, dynamic programming)이라고 배웁니다. 백트래킹을 하지 않고도 메모리를 조금 더 쓰면 경우의 수를 좀 더 빨리 구할 수 있다는 것입니다.\n \n  그러나 메모리와 같은 공간적인 개념은 저장공간의 효율적인 대중화로 인해 개발자들이 크게 신경 쓰지 않게 되었으며, 알고리즘 또한 다양한 라이브러리들이 많아서 코드에서는 잘 드러나지 않아 둘 다 간과되는 경우가 많습니다. 비즈니스에 직결되는 개발의 구현 여부만 신경 쓰다 보니, 구 ESM 문의하기도 처음에는 신경 써서 설계했겠지만, 10여 년이 지난 지금은 여러 요구사항들이 덧붙여져 땜질된 상태였습니다. 결과적으로 일부 구현에만 신경 쓴 여러 코드들이 전체적인 시간복잡도나 공간복잡도를 간과한 것들이 쌓이고 쌓여, 결국 어느새 엄청 느려진 조회 속도를 방치할 수밖에 없었습니다. 저 또한 이번에 개편한 코드가 몇십 년 후에는 땜질되어 느려질 수 있기 때문에, 이 프로젝트에 참여한 개발자들을 골라서 탓하는 것은 옳지 않다고 생각합니다.\n \n제가 이토록 시간과 공간의 반비례 관계를 강조해도 잊어버릴 수 있는 분들을 위해, 포켓몬스터 게임의 예를 들어 보겠습니다. 게임에는 '시간'을 관장하는 디아루가와 '공간'을 관장하는 펄기아라는 전설의 포켓몬이 항상 싸웁니다. (이 게임의 버전 이름이 공교롭게도 포켓몬스터 \"DP\"입니다.) 이 둘의 관계를 다시 떠올려 보면, 처리 시간을 줄이기 위해 어떤 방법을 선택해야 할지 판단이 더 빨리 설 것입니다.\n \n출처 : https://www.pokemon.com\n\n\n \n \n다음은 제가 이와 연관해서 실마리를 얻고 구 버전에서 신 버전으로 로직을 옮기며 성능을 해결해 나가는 부분에 대한 서술입니다.\n \n1. 인덱스를 활용하지 못한 경우\n \n  인덱스는 데이터베이스를 빠르게 조회할 수 있다는 장점이 있지만, 데이터베이스의 각 행(row)을 기준으로 많은 공간을 사용하게 된다는 단점이 있습니다. 이는 공간을 내어주고 시간을 절약한다는 제 본론과 매우 부합하는 개념 중 하나입니다.\n \n  문의 리스트를 가져오는 부분은 신 버전과 구 버전이 대체로 비슷합니다. 두 버전은 동일한 데이터베이스 테이블을 바라보고 있으며, 주로 원하는 검색 필터를 기준으로 WHERE 절에 적용하고, 테이블에 없는 추가적인 데이터는 따로 JOIN을 통해 가져옵니다. 그러나 두 버전의 차이를 만든 원인 중 하나는 SellerID를 통합해서 조회하는 방법입니다. 저희 회사 정책상 ESM을 보고 있는 한 셀러는 MasterID가 있고, 그 아래에는 여러 하위 SellerID들이 있습니다. '문의하기' 페이지는 이러한 MasterID에 속한 모든 SellerID를 가지고 해당 SellerID에게 주어진 문의들을 전부 조회해야 합니다.\n \n \n가장 크리티컬 했던 요소 중 하나를 꼽자면 다음과 같은 코드입니다. (아래 코드는 예시입니다.)\nforeach (string sellerId in request.sellerList.Split(','))\n{\n    GetList(request); // SQL 실행\n}\n\n//Stored Procedure (SQL)\n\nSELECT ~~~\nFROM TABLE\n//기타 JOIN 생략\nWHERE SELLER_ID = @SELLER_ID\n   AND ~~~~\n \n반면 제 것은 다음과 같습니다.\nSELECT ~~~~~\nFROM TABLE \n  JOIN STRING_SPLIT(@SELLER_ID_LIST, ',') AS SPLIT ON TABLE.SELLER_ID = SPLIT.value\n  //기타 JOIN 생략\n  WHERE ~~~~~~~\n \n단순히 둘의 시간복잡도를 구상했을 때는 s를 셀러의 개수, q를 뽑아낸 문의 개수로 치환한다면 다음과 같습니다.\n\n기존 접근법:\n\n판매자 ID 분리: O(s)\n각 판매자별 데이터 가져오기: O(s * q log q)\n가져온 데이터들 병합: O(s*q)\n개선된 접근법:\n\n판매자 ID 합치기: O(s)\nSQL 쿼리 실행 및 JOIN: O(s*q)  or s가 인덱스가 되어있으면 O(q log s)\n \n \n다행히 해당 테이블들은 SellerID에 인덱스가 걸려 있으므로 최종적으로 시간복잡도는 O(s * q log q) vs O(q log s)가 됩니다. 아래 그래프에서도 알 수 있듯이, Big O의 경우 n^2이 걸리는 순간 엄청난 소요 시간 차이가 발생합니다. 개발자 취준생들에게 이중 for loop를 최대한 피하라고 하는 이유도 여기 있습니다. 코딩 테스트에서 수행 시간 테스트가 점수에 포함되는 것도 그 때문입니다. MasterID에 딸린 셀러 개수가 많을수록, 테이블 자체에 있는 총 문의 개수가 많아질수록 조회 속도가 느려질 수밖에 없는 상황이었던 것입니다.\n\n\n제가 제시한 방법의 단점은, 그래도 JOIN을 위해 해당 SELLER_ID_LIST를 내부적으로 임시 테이블로 만들고 JOIN 하기 때문에 공간을 포기하는 셈이라는 점입니다.\n \n \n2. 임시 테이블과 JOIN 활용하기\n \n또 다른 사례는 답변과의 임시테이블을 만들고 나서 JOIN 하는 방식입니다. 구버전에서 몇 SQL 들은 비록 답변을 하기 위해 질문을 클릭해야만 답변 내용을 표시해 주어서 답변 관련 JOIN은 필요 없을 줄 알았지만, 놀랍게도 답변 시각과 제목은 list로 같이 짝지어 보여주고 있었기 때문에 답변 관련 데이터들은 이미 답변과 짝도 짓고 있었던 셈입니다.\n\n\n \n기존 전략은 단순히 답변 테이블과 JOIN 한 후에 WHERE 절로 검색 필터에 들어온 값들을 걸러내는 방식이었습니다.\nSELECT ~~~~\nFROM QUESTION\nLEFT JOIN ANSWER\nWHERE ~~~~~~\n \n  반면, 저는 인덱스가 되는 검색 필터 값들을 먼저 걸러낸 임시 테이블을 만든 후에 JOIN을 했습니다. 이렇게 하면 한꺼번에 JOIN 하는 것보다 후보지가 줄어들고, 나머지 인덱스가 걸리지 않은 것들은 WHERE 절에서 거르더라도 시간이 덜 걸립니다. 이 역시 임시 테이블을 위해 공간을 더 쓰는 방식이지만, 한편으로는 더욱 빠른 속도를 수행하게 됩니다.\nWITH FilteredQuestions AS (\n    SELECT ~~~~\n    FROM QUESTION\n    LEFT JOIN ANSWER ON ~~~~\n    WHERE ~~~~(여기는 인덱스값) AND ~~~~ AND ~~~~\n)\nSELECT ~~~~\nFROM QUESTION\nJOIN FilteredQuestions ON ~~~~\nWHERE ~~~~ AND ~~~~\n \n  게다가 이번 개편을 통해 한 가지 호재가 더 있었습니다. 답변의 타이틀을 없앤다는 정책이 새로 만들어졌고, 답변이 없는 '미처리' 상태로 조회하는 것이 디폴트가 되었습니다. 따라서 판매자가 '미처리'된 문의 건들을 조회할 때는 굳이 답변을 JOIN 할 필요가 없게 되었습니다.\n \n그래서 저는 사용자가 검색 필터로 넣는 '처리 상태' 값에 따라 쿼리를 분기 처리하는 아이디어를 냈습니다. 만약 '미처리' 상태로 조회할 경우, 답변과 JOIN 하지 않는 쿼리를 사용하고, '처리 완료'나 '전체'라는 값이 들어올 때만 위의 쿼리를 사용하는 것입니다\n \nSELECT ~~~~\nFROM QUESTION\nWHERE ~~~~~~\n \n \n2. Hash Table (Map, Dictionary 등)을 적극적으로 활용하기\n \n1) Enum에서 Map 활용하기 \n \n  사실 이 또한 코딩테스트를 보게 되면 지겹도록 익히게 되는 법칙이지만, Hash Table을 사용하면 시간 복잡도가 O(1)로 월등히 줄어듭니다. 생각보다 많은 개발자들이 놓치는 것 중 하나는 Hash Table이 매칭/매핑할 때 무엇보다 큰 성능을 발휘한다는 점입니다. 가장 큰 예시로는 Enum을 사용할 때입니다. Enum은 일종의 나열된 집합체로, 가독성과 해시 성질 덕분에 많은 코드에서도 여전히 많이 발견됩니다.\n \n아래의 예시는 실제 코드는 아니고 제가 임시로 만든 코드입니다.\nimport lombok.Getter;\nimport lombok.RequiredArgsConstructor;\n\n@Getter\n@RequiredArgsConstructor\npublic enum PhoneAreaEnum {\n    SEOUL(\"서울\", \"02\"),\n    BUSAN(\"부산\", \"051\"),\n    DAEGU(\"대구\", \"053\"),\n    INCHEON(\"인천\", \"032\"),\n    GWANGJU(\"광주\", \"062\"),\n    DAEJEON(\"대전\", \"042\");\n\n    private final String koreanName;\n    private final String code;\n\n    public static String findByCode(String code) {\n        for (PhoneAreaEnum area : PhoneAreaEnum.values()) {\n            if (area.getCode().equals(code)) {\n                return area.getKoreanName();\n            }\n        }\n        return null;\n    }\n}\n \n  여기서 만약 조회한 문의 건들 안에 code만 있어서 이를 front에서 표시하기 위한 koreanName을 가져와야 한다면 다음과 같이 PhoneAreaEnum.findByCode(entity.code)를 썼을 텐데요. 보다시피 해당 코드는 for를 돌아 O(문의 결과 리스트 * Enum 개수)을 돌게 됩니다.\n \nimport lombok.Getter;\nimport lombok.RequiredArgsConstructor;\n\nimport java.util.Arrays;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\n@Getter\n@RequiredArgsConstructor\npublic enum PhoneAreaEnum {\n    SEOUL(\"서울\", \"02\"),\n    BUSAN(\"부산\", \"051\"),\n    DAEGU(\"대구\", \"053\"),\n    INCHEON(\"인천\", \"032\"),\n    GWANGJU(\"광주\", \"062\"),\n    DAEJEON(\"대전\", \"042\");\n\n    private final String koreanName;\n    private final String code;\n\n    private static final Map<String, PhoneAreaEnum> codeToEnumMap = Arrays.stream(PhoneAreaEnum.values())\n            .collect(Collectors.toMap(PhoneAreaEnum::getCode, area -> area));\n\n    public static String findByCode(String code) {\n        PhoneAreaEnum area = codeToEnumMap.get(code);\n        return (area != null) ? area.getKoreanName() : null;\n    }\n}\n \n하지만 이런 식으로 바꾸면 처음에 Map을 세팅할 때에만 for loop가 돌고, 조회된 건수를 일일이 매핑할 때는 미리 만들어둔 Map에서 O(1)의 시간 복잡도로 빠르게 매핑해 나갈 수 있습니다. 특히, 많은 Enum 값을 다룰 때 이 방법이 유리합니다.\n \n \n2) 서비스 분기처리를 Map으로 하기\n \n이 외에도 사소한 시간 영향을 주는 if/else에 대한 얘기를 Map과 연관시켜 살펴보겠습니다. 저는 통합 조회 API를 만들었고, 서로 다른 사이트인 '지마켓'과 '옥션', 그리고 각각의 '게시판 문의'와 '긴급 메시지'의 비즈니스 로직을 다르게 처리하고자 했습니다. 절차지향적인 코드라면 한 컨트롤러에 한 서비스를 사용하고, if/else나 switch 문을 통해 분기 처리를 했을 겁니다. 예를 들어, '옥션 게시판 문의'가 요청으로 들어왔다면 if(옥션) 안에 if(게시판 문의)로 중첩해서 로직을 썼거나, else if (옥션 게시판 문의) 식으로 썼을 수도 있습니다. 다만, 이 방법은 미세하지만 if, else if, else if 혹은 if 안에 if를 거치기 때문에 불필요한 시간이 소요됩니다.\n \n그래서 저는 handler들을 자체적으로 만들고, Spring에 내장된 handlerMap을 사용하는 것을 권장합니다.\n예시를 들자면 다음과 같은 코드입니다.\n먼저 저의 케이스를 코드로 대강 풀이하자면 다음과 같습니다. 먼저 다음과 같이 handler interface를 만들어둡니다. 다음 코드들은 변수명도 다른 임의의 코드입니다.\npublic interface QnaQueryListHandler {\n    List<MappedEntity> processList(HandlerRequest request);\n}\n \n다음, 옥션과 지마켓 각각의 인터페이스 혹은 추상 클래스로 각각 사이트별로 처리하는 방식을 먼저 정합니다. 저는 FeignClient를 의존성 주입하기 위해 추상 클래스를 사용했고, 'AbstractAuctionQnaQueryListHandler'와 'AbstractGmarketQnaQueryListHandler'를 만들어 각각 사이트별로 다른 방법을 오버라이딩하여 분기합니다.\n@Service\npublic abstract class AbstractAuctionQnaQueryListHandler implements QnaQueryListHandler {\n\n    private String extractIds(HandlerRequest request) {\n        // 해당 방법은 지마켓 옥션이 다르기 때문에 분기될만함.\n        return \"\";\n    }\n\n    @Override\n    public List<MappedEntity> processList(HandlerRequest request) {\n        String ids = extractIds(request);\n        return handleIds(ids, request);\n    }\n\n    protected abstract List<? extends MappedEntity> handleIds(String ids, HandlerRequest request);\n}\n \n그런 다음, 옥션에 해당되는 게시판 문의에 대한 비즈니스 로직을 작성합니다.\n@Service(\"AUCTION_BOARD_INQUIRY_QUERY_LIST_HANDLER\")\npublic class AuctionBoardQueryListHandler extends AbstractAuctionQnaQueryListHandler {\n\n    @Override\n    protected List<? extends MappedEntity> handleIds(String ids, HandlerRequest request) {\n        // 생략\n        return new ArrayList<>();\n    }\n}\n \n이와 같은 방식으로 지마켓 긴급 메시지, 지마켓 게시판 문의, 옥션 긴급 메시지도 동일하게 작성합니다. 이렇게 하면 QnaQueryListHandler에 묶인 서비스들이 하나의 Map으로 Spring에 내장된 기능에 의해 생성됩니다. 이를 서비스 단에 의존성 주입하고 사용하면 됩니다.\n@RequiredArgsConstructor\npublic class QnaQueryServiceImpl implements QnaQueryService {\n\n    private final Map<String, QnaQueryListHandler> qnaQueryListHandlerMap;\n    // 생략\n    \n    public QueryEntity<QueryListQueryEntity> getQueryList(QnaQueryListRequest qnaQueryListRequest) {\n        String handlerKey = String.format(\"%s_%s_QUERY_LIST_HANDLER\",\n            qnaQueryListRequest.getSite().name(), qnaQueryListRequest.getMessageType().name());\n        QnaQueryListHandler handler = qnaQueryListHandlerMap.get(handlerKey);\n        List<QueryListJpaEntity> jpaEntityList = handler.processList(qnaQueryListRequest);\n        // 생략\n    }\n}\n \n해당 방법을 사용하면 서비스별로 if/else로 분기 처리하는 것을 보다는 가독성을 가져오면서도, 사이트별 혹은 문의 유형별 공통 기능들도 쉽게 유지보수하며 성능을 약간 더 향상할 수 있는 여지가 생깁니다.\n \n3. Multithread 활용하기\n \n  Java가 Node 계열의 JavaScript나 데이터 구조화에 유리한 Python에 밀리는 추세라고는 하지만, Interpreter 언어들과 달리 Java가 근본적으로 가지고 있는 강점 중 하나는 Multithread의 활용성입니다. 범용성이 높다는 Python도 아직 JVM의 멀티스레딩과 저용량 성능을 따라오지 못하고 있습니다. 그러므로 Java 개발자라면 Multithread를 적재적소에 활용해야 한다고 봅니다. 특히 성능을 고려해야 하는 경우에는 더욱 그렇습니다.\n저의 경우, 웬만하면 같은 DB 서버에 묶여 있고 인덱스가 있으면 최대한 JOIN을 선호합니다. 관계형 데이터베이스는 이를 위해 만들어진 것이기 때문입니다. 하지만 DB 서버가 같이 묶여 있지 않거나 인덱스가 없다면 JOIN은 어렵습니다. 따라서 다른 SQL이나 API 호출을 통해 데이터를 얻은 후, 기존에 조회된 문의 결과와 매칭할 수밖에 없습니다. 이럴 때, 문의 결과 리스트 n개와 다른 데이터 리스트 m개를 이중 for문으로 처리해서는 안 되고, 아래 예제와 같이 Map을 먼저 만들어줘야 성능이 나옵니다.\n\nMap<String, ExtraBasicInfoResponse> extraInfoMap = extraUrlConfig.getExtraBasicInfoMap(extraNumbersList, siteId);\n \n그 후 해당 Map을 가지고 매칭을 하면 되는데, 이때 단순 매칭을 위해서는 순서가 중요하지 않기 때문에 다음과 같이 Multithread를 사용하여 동시성 있게 처리하면 조회 성능을 끌어올리는 데 도움이 됩니다.\n \nreturn entityList.parallelStream()\n    .map(entity -> {\n        TempEntity tempEntity = asEntity(entity);\n        ExtraBasicInfoResponse extraInfo = extraInfoMap.get(entity.getNo());\n        // 생략\n    });\n \n \n다만, 단점은 메모리를 잡아먹기 때문에 해당 프로젝트에 같이 돌고 있는 다른 도메인들에게도 영향이 갈 수 있다는 점입니다. 제가 사용한 parallelStream은 단순하지만, 가독성을 위해 Stream 객체를 따로 만들어야 한다는 점과 Common ForkJoinPool을 사용하기 때문에 다른 곳에서도 해당 스레드풀을 사용하면 성능 향상이 예상보다 낮을 수 있습니다. 그렇다고 무작정 ForkJoinPool이나 ExecutorService와 같은 객체를 따로 만든다면 같은 parallelStream을 사용하는 도메인에는 영향을 주지 않지만 추가된 메모리 공간을 사용해야 합니다. 만약 여러 도메인들이 조회 성능만을 생각해 이런 식으로 풀을 추가했다가 총메모리를 초과해 GC 에러를 시켜 서버가 중단된다면 큰일입니다. 그러므로 더욱 신중하게 고려해야 합니다. 따라서 아무리 조회 성능을 향상한다 해도 메모리 공간을 지나치게 포기하면 안 됩니다. 다행히 저 코드 프로젝트는 parellelstream을 아직 쓰는 곳이 거의 없을뿐더러 '문의하기'처럼 규모가 있는 트래픽을 담당할만한 도메인이 아직까지는 없는 것으로 파악했습니다.\n \n \n \n4. GROUP BY를 안 쓰고도 카운트 집계 성능 내는 방법\n \n가장 문제가 되는 구버전의 조회에는 집계 기능도 포함되어 있었습니다. 집계를 할 때 거의 필수적으로 쓰이는 SQL문은 GROUP BY입니다. GROUP BY는 사용자에게 다양한 형태의 데이터를 제공하는 유용한 SQL문입니다. 다만, GROUP BY를 사용하면 유형별 임시 공간이 필요하고, 그룹화를 위해 정렬을 해야 하므로 일반적으로 O(n log n)의 시간복잡도를 가집니다.\n예시로, 구버전이 사용하는 집계 함수는 다음과 같은 코드 형태입니다.\nSELECT TYPE_CODE,\n       COUNT(*) AS COUNT\nFROM EXAMPLE\nWHERE CREATION_DATE BETWEEN @START_DATE AND @END_DATE\nGROUP BY TYPE_CODE;\n \n신버전에서는 다음과 같이 집계를 수행할 수 있습니다. 단, 이 방법은 고정된 TYPE_CODE가 정해져 있어야 합니다. 예를 들어, 성별과 같이 단순한 기준으로 row 개수를 구할 때는 유용하지만, 직업별 row 개수처럼 특정되지 않은 채로 다양한 유형별 개수를 파악할 때는 사용하기 어렵습니다.\n \nSELECT ISNULL(SUM(CASE WHEN TYPE_CODE = '1' THEN 1 ELSE 0 END), 0) AS FATHER,\n       ISNULL(SUM(CASE WHEN TYPE_CODE = '2' THEN 1 ELSE 0 END), 0) AS MOTHER,\n       ISNULL(SUM(CASE WHEN TYPE_CODE = '3' THEN 1 ELSE 0 END), 0) AS SON,\n       ISNULL(SUM(CASE WHEN TYPE_CODE = '4' THEN 1 ELSE 0 END), 0) AS DAUGHTER\nFROM EXAMPLE\nWHERE CREATION_DATE BETWEEN @START_DATE AND @END_DATE;\n \n이렇게 변경하면 GROUP BY처럼 추가적인 임시 공간을 거의 사용하지 않으며, 집계 결과를 저장할 몇 개의 변수 공간만 필요하고, 한 번만 순회하면 끝나기 때문에 시간복잡도 역시 O(n)에 그칩니다. 이처럼 무작정 시간과 공간이 반비례하는 것은 아닙니다. 포켓몬에서도 간혹 디아루가와 펄기아가 힘을 합칠 때가 있듯이 말입니다.\n \n \n출처 : https://pokemon.fandom.com/\n\n\n \n \n \n  개편된 ESM을 오픈한 지 며칠 안 된 지금, 아직까지는 큰 문제가 없어 보입니다. 더욱 빨라진 조회 속도로 인해 조회 빈도 자체가 예전에 비해 급속도로 높아진 점에서 고무적이라고 생각합니다. 기획과 UI/UX 팀에서 조회 성능을 위해 적절한 대안을 찾고, 정책적인 변화를 통해 중복되는 칼럼들을 단건씩 보이게 하여 조회 성능에 집중할 수 있게 해준 점에 대해서도 감사합니다. 이러한 변화는 구매자의 문의를 보고 싶어도 답답한 속도 때문에 못 보고 지나쳤던 판매자들에게 더 큰 기회를 줄 수 있을 것입니다. 또한, 물건을 사기 전에 답변이 오지 않아 망설였던 고객들의 발걸음을 되돌릴 수 있을 것이라 기대합니다.",
        "guid": "https://dev.gmarket.com/109",
        "categories": [
          "Backend"
        ],
        "isoDate": "2024-06-28T05:33:09.000Z"
      },
      {
        "creator": "지마켓 기술블로그",
        "title": "경력 입사자의 스크럼 스프린트 적응기 (with Jira software)",
        "link": "https://dev.gmarket.com/108",
        "pubDate": "Fri, 28 Jun 2024 14:22:21 +0900",
        "author": "지마켓 기술블로그",
        "comments": "https://dev.gmarket.com/108#entry108comment",
        "content": "<p data-ke-size=\"size16\">⚠️<span>&nbsp;</span><span style=\"color: red;\">본 글은 스크럼 표준 이론을 설명하는 것이 아닙니다.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">안녕하세요. Dev platform 팀 임진욱입니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">지마켓의 Jira, Wiki, GIthub, CI/CD 시스템을 담당하고 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">지마켓으로 이직 후, 1년간 업무를 진행하며 스크럼을 사용하는 경험기를 다룹니다.<br />(  스크럼에 대해서 더 알고 싶은 사람은<span>&nbsp;</span><a style=\"color: #0070d1;\" href=\"https://www.atlassian.com/ko/agile/scrum\">스크럼 설명 - Jira software</a><span>&nbsp;</span>문서를 참고하면 도움이 됩니다.)</p>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">\n<p style=\"color: #666666;\" data-ke-size=\"size16\">스크럼이란?<br />스크럼은 팀이 일련의 가치, 원칙 및 관행을 바탕으로 작업을 구조화하고 관리할 수 있도록 지원하는 애자일 프로젝트 관리 프레임워크입니다.<br />스크럼은 팀이 경험을 통해 배우고, 문제를 해결하면서 스스로 구성하며, 얻은 것과 잃은 것을 되돌아보며 지속적으로 개선하도록 유도합니다.</p>\n</blockquote>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;시스템 관리 엔지니어로서 연속적으로 이어지는 운영 업무들을 짧은 단위로 목표를 정해서 스크럼을 하는 것이 좋아하지 않았습니다. 억지스레 '완료' 처리를 하게 되는 경우가 생기거나, 연속적인 업무의 경우, 계획한 스프린트에서 끝내지 못하고 다음 스프린트로 연기하는 경우도 있었습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이직 후, 데일리 스크럼을 하는 것을 보고 \"여기도 스크럼을 하는구나!\" 하고 좋아하지 않았습니다. 하지만 팀에서 프로젝트를 이끌어 가는 것을 보고, 업무를 진행하는데 도움이 될 수 있겠다!라는 생각이 들었습니다. 이러한 생각이 들었던 이유는 아래와 같습니다.  </p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>⭐️ 팀장님이 회고때 관여를 하지 않습니다. (회고 운영 X, 팀원과 같은 위치에서 참여)</li>\n<li>플래닝 때 백로그 목표와 내용을 명확히 한다.</li>\n<li>데일리 미팅 시 짧게 진행되도록 노력한다. (스탠딩 미팅)</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">그럼 실제로 어떻게 일하고 있는지 보여드리도록 하겠습니다.</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">&nbsp;</h2>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">이렇게 일하고 있어요  &zwj; </h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">스크럼의 단계는 아래와 같이 진행하고 있으며, 각 단계별로 어떻게 진행하고 있는지에 대해 경험을 공유드리겠습니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">스크럼 단계</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Sprint planning -&gt; Daily scrum -&gt; Sprint review -&gt; Sprint retrospective</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">스프린트 플래닝</h3>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">\n<p style=\"color: #666666;\" data-ke-size=\"size16\">이번 스프린트에서 어떤 작업을 할 수 있으며, 선택한 작업은 어떻게 완료하는가?</p>\n</blockquote>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;위 목적을 달성하기 위하여 팀원들과 시간을 들여 논의를 합니다. 저희 팀은 스프린트를 진행할 때, 스크럼 단계에 따라 작업을 할 수 있도록 Jira board를 활용합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;스프린트가 달성해야 하는 목표 항목을<span>&nbsp;<b>백로그</b>&nbsp;로</span> 생성합니다. 계획을 잘하기 위해서는 백로그를 긴 시간을 할애하여 생성하여야 합니다. 백로그 생성 시 알 수 없는 부분이 많거나 위험도가 높은 작업을 백로그로 등록하는 것은 지양해야 합니다. 작업 범위가 크거나 불확실성이 높은 작업은 세분화하고, 다음 스프린트를 위해 작업의 일부를 남겨 두어도 좋습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;프로젝트 관리자는 달성해야 하는 목표에 따라 스프린트를 생성합니다. 이때, 목표와 스프린트 기간과 시작일을 설정합니다. 스크럼을 통해 업무를 다년간 하며, 팀 스타일에 맞춰가고 있습니다. 스프린트 기간의 경우도 초기에는 대중적으로 사용하는 2주로 설정하였습니다. 저희 팀의 경우, 2주의 스프린트 기간이 너무 짧다는 의견이 스프린트 회고 때 있었고, 현재는 4주 기준으로 스프린트를 진행하고 있습니다. 즉, 시작일은 월초, 끝나는 시간은 월 말으로 설정되어 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"856\"><span data-url=\"https://blog.kakaocdn.net/dn/ydamS/btsIgYLJ95I/jU7VEv8NLXDjkjYLYGMxbK/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/ydamS/btsIgYLJ95I/jU7VEv8NLXDjkjYLYGMxbK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FydamS%2FbtsIgYLJ95I%2FjU7VEv8NLXDjkjYLYGMxbK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"856\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"955\"><span data-url=\"https://blog.kakaocdn.net/dn/bwr47b/btsIfevIAf5/G1WuH8keJgZpqzI1tZcpgk/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bwr47b/btsIfevIAf5/G1WuH8keJgZpqzI1tZcpgk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbwr47b%2FbtsIfevIAf5%2FG1WuH8keJgZpqzI1tZcpgk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"955\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Jira board에서 스프린트가 생성되면 해당 스프린트에서 달성해야 하는 목표에 맞는 백로그를 스프린트에 등록하면 '스프린트 플래닝'을 위한 준비가 됩니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1680\" data-origin-height=\"636\"><span data-url=\"https://blog.kakaocdn.net/dn/p5i5X/btsIfGL3on9/zSHqcKnm3pKsJsI8sUtqj0/img.gif\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/p5i5X/btsIfGL3on9/zSHqcKnm3pKsJsI8sUtqj0/img.gif\" srcset=\"https://blog.kakaocdn.net/dn/p5i5X/btsIfGL3on9/zSHqcKnm3pKsJsI8sUtqj0/img.gif\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"1680\" data-origin-height=\"636\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;스프린트 플래닝 회의는 프로젝트에 관여된 모든 사람이 함께 모여 진행합니다. 스프린트 플래닝 회의는 아침부터 오후까지 길게 잡고, 스프린트 목표를 이루기 위하여 백로그를 공유합니다. 형식적인 브리핑이 아닌 함께 하는 팀원들이 업무 내용을 이해할 수 있도록 상세하게 설명을 해야 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;각 이슈마다 업무 설명이 끝난 후, '스토리 포인트'를 설정하게 되는데, '스토리 포인트'는 누가 해당 업무를 처리하는지 관계없이 해당 업무를 처리하는데 얼마큼 시간이 필요할지 생각하여 투표하고, 의견을 종합하여 최종 스토리 포인트를 결정합니다. 저희 팀은 'Planning Poker'를 이용하여 스토리 포인트를 측정합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"685\"><span data-url=\"https://blog.kakaocdn.net/dn/OQ7cC/btsIfV3haa3/IG5qq9RHLE3M4kkcBaIKoK/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/OQ7cC/btsIfV3haa3/IG5qq9RHLE3M4kkcBaIKoK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FOQ7cC%2FbtsIfV3haa3%2FIG5qq9RHLE3M4kkcBaIKoK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"685\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"640\" data-origin-height=\"345\"><span data-url=\"https://blog.kakaocdn.net/dn/P6AS7/btsIgGEzL6z/PVeTFM2sgVy6QgGGE3rc21/img.gif\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/P6AS7/btsIgGEzL6z/PVeTFM2sgVy6QgGGE3rc21/img.gif\" srcset=\"https://blog.kakaocdn.net/dn/P6AS7/btsIgGEzL6z/PVeTFM2sgVy6QgGGE3rc21/img.gif\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"640\" data-origin-height=\"345\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;이슈마다 '스토리 포인트' 할당이 끝나면, 이슈 담당자를 정합니다. 너무 많은 스토리를 가져오거나, 속도를 과대 평가하거나, 스프린트에서 완료할 수 없는 작업을 가져오지 말아야 합니다. 품질 또는 기술적 부채를 잊지 말아야 할 점입니다.</p>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">\n<p style=\"color: #666666;\" data-ke-size=\"size16\">\"자신 또는 팀이 실패할 수밖에 없는 계획을 세우지 말아야 합니다.\"</p>\n</blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"1170\"><span data-url=\"https://blog.kakaocdn.net/dn/bHyON5/btsIfVhTeqU/ncPYshvbUQKh4Q208PcBw0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bHyON5/btsIfVhTeqU/ncPYshvbUQKh4Q208PcBw0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbHyON5%2FbtsIfVhTeqU%2FncPYshvbUQKh4Q208PcBw0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"1170\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"1407\"><span data-url=\"https://blog.kakaocdn.net/dn/bhTTaT/btsIheOi07i/KBpMd0BVrujyWCBqhvKZ01/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/bhTTaT/btsIheOi07i/KBpMd0BVrujyWCBqhvKZ01/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbhTTaT%2FbtsIheOi07i%2FKBpMd0BVrujyWCBqhvKZ01%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"1407\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;이슈 담당자까지 지정이 완료되고 나면 프로젝트 관리자는 달성가능한 '스토리 포인트'가 할당된 지 확인하고 스프린트를 시작합니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">데일리 스크럼</h3>\n<blockquote style=\"color: #666666; text-align: left;\" data-ke-style=\"style2\">\n<p style=\"color: #666666;\" data-ke-size=\"size16\">데일리 스크럽은 핵심 팀(제품 소유자, 개발자 및 스크럼 마스터)이 매일 아침 참여하는 회의입니다. 진행률을 논의하고 업무 진행을 방해하는 요소를 파악하기 위한 짧은 회의입니다. 참석자들이 회의에 서서 참여하면 회의가 짧게 진행되기 때문에 '스탠드업 미팅'이라고도 불려집니다. 데일리 스크럼에서 중요한 점은 보고 형식이 되면 안 됩니다. 모두가 팀의 상태와 진행률을 알 수 있도록, \"우리\"라는 개념을 강조합니다.</p>\n</blockquote>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">저희 팀은 오전 10시에 회의를 진행하며 아래의 두 가지를 위주로 이야기하고 있습니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>어제 어떤 작업을 했습니다.</b></li>\n<li><b>오늘 무슨 일을 하고 있습니다.</b></li>\n<li><i>어떤 이슈가 나를 방해합니다. (위 두 개의 답변을 하며 함께 공유합니다)</i></li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;보고 형식으로 팀장님께 이야기하는 것이 아닌, 참여자들끼리 상황 공유를 하고 도움을 줄 수 있는 경우 의견을 냅니다. 또한 회의가 끝난 후 함께 문제를 해결하는 시간을 가지기도 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">스프린트 리뷰</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">저희 팀은 스프린트를 4주 단위로 하고 있으며, 스프린트 리뷰와 회고는 월 마지막주 화요일에 하고 있습니다. 스프린트 리뷰 포맷은 아래와 같습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_9review_fin.png\" data-origin-width=\"3000\" data-origin-height=\"867\"><span data-url=\"https://blog.kakaocdn.net/dn/ceF86t/btsIgFr7UuC/QRmh4MgL7z2eGmYERVzIik/img.png\" data-phocus=\"phocus\" data-alt=\"sprint review\"><img src=\"https://blog.kakaocdn.net/dn/ceF86t/btsIgFr7UuC/QRmh4MgL7z2eGmYERVzIik/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FceF86t%2FbtsIgFr7UuC%2FQRmh4MgL7z2eGmYERVzIik%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_9review_fin.png\" data-origin-width=\"3000\" data-origin-height=\"867\"/></span><figcaption>sprint review</figcaption>\n</figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">스프린트 리뷰는 스프린트 동안 달성하고자 했던 목표와 \"결과물\"에 중점을 두고 리뷰를 합니다. 발표자는 스프린트 기간 동안 작업한 내용을 시각적으로 보여주고, 팀원은 피드백과 KPT (Keep, Problem, Try)를 작성해 줍니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">저희가 하는 것 중, 특이점은 \"Story Point Check\" 항목이 있는데, 스프린트 회고 때 나온 의견의 결과물로 스토리 포인트를 잘 설정하기 위하여 스프린트 리뷰 때, 설정한 스토리 포인트와 실제 본인이 작업하며 느낀 스토리 포인트에 대한 확인을 하고 있습니다. (선택적으로 하고 싶은 사람만 하고 있습니다)</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">스프린트 회고 ⭐️⭐️⭐️</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">스프린트 회고는 업무 관련된 회고가 아닌, 스프린트를 진행하면서 작업방법, 프로세스, 환경 등 교훈을 정리하고 팀 프로세스 개선을 위한 활동입니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">스프린트가 성숙해지기 위해서는 회고가 가장 중요하다고 생각합니다. 개인적으로 팀이 스크럼에 잘 적응할 수 있었던 이유는 스프린트 회고 문화를 잘 정착시켰기 때문이라 생각됩니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>직책자(팀장/PM)의 주도로 회고를 하지 않는다.</li>\n<li>회고 진행자는 팀원이 돌아가며 진행한다.</li>\n<li>팀원들의 적극적인 참여가 필요합니다.</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">제가 생각하는 저희 팀이 회고를 잘 적응할 수 있었던 이유입니다. 한국의 문화적 특성상 직책자가 주도하는 회의에서는 자유로운 토론이 되지 않는 경우가 있습니다. 보통 스크럼 마스터가 회고를 진행하는데, 한 명의 고정된 진행자가 있을 경우, 팀원의 참여도가 점점 떨어질 수 있습니다. 팀원이 돌아가며 회고 진행을 할 경우, 진행자는 회고를 준비하고 이끌어 가기 위해 학습합니다. 이런 경험이 쌓이며 성숙된 문화가 정착되고 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">회고 툴은 회고 진행자가 전적으로 준비해오고 있습니다. 고정된 툴을 사용해야 하는 것도 아닙니다. 회고 툴을 사용한 것 중, 제일 좋았던 툴은<span>&nbsp;<a style=\"color: #0070d1;\" href=\"https://retrotool.io/\">retrotool</a>&nbsp;입니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"1670\"><span data-url=\"https://blog.kakaocdn.net/dn/VRQ4A/btsIgYEYWKV/ruv7R7A0DLsmYAwJfKUQn0/img.png\" data-phocus=\"phocus\" data-alt=\"스프린트 회고\"><img src=\"https://blog.kakaocdn.net/dn/VRQ4A/btsIgYEYWKV/ruv7R7A0DLsmYAwJfKUQn0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FVRQ4A%2FbtsIgYEYWKV%2Fruv7R7A0DLsmYAwJfKUQn0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"1670\"/></span><figcaption>스프린트 회고</figcaption>\n</figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">회고 진행자는<span>&nbsp;<a style=\"color: #0070d1;\" href=\"https://retrotool.io/\">retrotool</a>&nbsp;에서</span> 아래 칼럼을 생성하여 회고를 준비합니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>[잘한 점/성공의 원인] : 칭찬하거나, 스프린트 진행 중 긍정적이었던 부분</li>\n<li>[부족한 점/장애물] : 부족하거나, 스프린트 진행 중 방해 요소</li>\n<li>[개선 방법]</li>\n<li>[개선방법(누적)] : 누적된 개선 방법 (문화로 정착할 경우 졸업)</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">진행 방법은 아래와 같습니다.</p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-style=\"style8\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td style=\"width: 33.3333%; text-align: center;\">절차</td>\n<td style=\"width: 33.3333%; text-align: center;\">내용</td>\n<td style=\"width: 33.3333%; text-align: center;\">시간</td>\n</tr>\n<tr>\n<td style=\"width: 33.3333%;\">아이스브레이킹</td>\n<td style=\"width: 33.3333%;\">팀원과의 대화</td>\n<td style=\"width: 33.3333%;\">5 ~ 10분</td>\n</tr>\n<tr>\n<td style=\"width: 33.3333%;\">개선방법 (누적) 공유</td>\n<td style=\"width: 33.3333%;\">&nbsp;</td>\n<td style=\"width: 33.3333%;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"width: 33.3333%;\">잘한점</td>\n<td style=\"width: 33.3333%;\">잘한점 작성</td>\n<td style=\"width: 33.3333%;\">5분</td>\n</tr>\n<tr>\n<td style=\"width: 33.3333%;\">공유</td>\n<td style=\"width: 33.3333%;\">작성 내용 확인 및 공유</td>\n<td style=\"width: 33.3333%;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"width: 33.3333%;\">부족한점</td>\n<td style=\"width: 33.3333%;\">부족한점 작성</td>\n<td style=\"width: 33.3333%;\">5분</td>\n</tr>\n<tr>\n<td style=\"width: 33.3333%;\">공유</td>\n<td style=\"width: 33.3333%;\">작성 내용 확인 및 공유</td>\n<td style=\"width: 33.3333%;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"width: 33.3333%;\">개선점</td>\n<td style=\"width: 33.3333%;\">개선점 작성</td>\n<td style=\"width: 33.3333%;\">5분</td>\n</tr>\n<tr>\n<td style=\"width: 33.3333%;\">공유</td>\n<td style=\"width: 33.3333%;\">개선점 공유 및 평가</td>\n<td style=\"width: 33.3333%;\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;회고에 자유로운 대화를 하기 위하여 회고에 앞서 아이스브레이킹을 진행합니다. 밸런스 게임이나 이상형 월드컵 등으로 자유로운 분위기로 대화를 할 수 있는 환경을 준비합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;지금까지 누적된 개선방법(누적)을 공유하고, 이번 스프린트에 잘한 점을 '5분'동안 각자 작성합니다.<span>&nbsp;</span><a style=\"color: #0070d1;\" href=\"https://retrotool.io/\">retrotool</a><span>&nbsp;</span>툴은 포스트잇 형태로 익명으로 작성 가능합니다. 업무 내용 외 스프린트를 진행하며, 칭찬하고 싶은 사람이나 좋았던 것에 대한 작성을 합니다. 팀원들이 작성한 내용을 보고, 공감이 될 경우 포스트잇을 클릭(LIKE)합니다. 회고 진행자는 공감이 많이 된 순으로 작성된 내용에 대해서 팀원들의 의견을 듣는 시간을 가집니다. 이때, 꼭 작성자가 본인이 쓴 내용을 이야기하지 않아도 됩니다. 부족한 점도 좋은 점과 동일하게 작성하고 공유합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"1676\"><span data-url=\"https://blog.kakaocdn.net/dn/0Bfdj/btsIfte7Uy1/ZsIoFxLsSloKpaK50uDVb0/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/0Bfdj/btsIfte7Uy1/ZsIoFxLsSloKpaK50uDVb0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F0Bfdj%2FbtsIfte7Uy1%2FZsIoFxLsSloKpaK50uDVb0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"blob\" data-origin-width=\"3000\" data-origin-height=\"1676\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;잘한 점과 부족한 점에 대한 공유가 끝나면, 팀원들이 '5분'간 각자 개선점을 작성합니다. 개선점 작성이 끝나면 진행자는 개선점을 공유합니다. 누적된 개선 사항 중, 이미 문화로 정착되었거나 불필요하다고 느낄 경우 '졸업'을 시키고, 새로운 개선 사항을 추가해 줍니다. 회고에서 나온 개선사항은 언제든 팀원들이 볼 수 있는 공간에 정리해 둡니다. (저희의 경우 주간회의록 제일 상단에 정리해 둡니다.)</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">모든 회고가 완료되면, 회고 진행자는 회고록을 작성합니다.  </p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_blob\" data-origin-width=\"1496\" data-origin-height=\"1332\"><span data-url=\"https://blog.kakaocdn.net/dn/zqyzu/btsIeUqMjBm/hUD1ITk7EZqRD3XQKMNyTk/img.png\" data-phocus=\"phocus\"><img src=\"https://blog.kakaocdn.net/dn/zqyzu/btsIeUqMjBm/hUD1ITk7EZqRD3XQKMNyTk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fzqyzu%2FbtsIeUqMjBm%2FhUD1ITk7EZqRD3XQKMNyTk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_blob\" data-origin-width=\"1496\" data-origin-height=\"1332\"/></span></figure>\n</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">&nbsp;</h3>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">스프린트 종료</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">프로젝트 관리자는 지정된 날짜에 스프린트를 종료를 팀원에 알리고 종료를 합니다.<br />그 후, 새로운 스프린트를 작성하고, 플래닝을 준비합니다.</p>\n<h1 style=\"color: #000000; text-align: start;\">&nbsp;</h1>\n<h1 style=\"color: #000000; text-align: start;\">맺음말</h1>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">스크럼 이론이 존재하고, 이를 지원하는 Tool로 지원을 받을 수 있습니다.<span>&nbsp;</span><span style=\"color: #ef5369;\"><b>중요한 점은 협업하는 팀이 목표를 달성하기 위하여 사용하는 방법론이므로 정답이 존재하지 않는다는 것입니다.</b></span><span>&nbsp;</span>회사마다 팀마다 맞는 문화를 만들어 협업 및 업무에 도움이 되는 방법을 찾아가는 것이 좋습니다.</p>\n<h1 style=\"color: #000000; text-align: start;\">&nbsp;</h1>\n<h1 style=\"color: #000000; text-align: start;\">참고 자료</h1>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">용어 설명</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">백로그(Backlog) : 프로젝트 관리, 소프트웨어 개발, 업무 관리 등 다양한 분야에서 사용되는 용어로, 완료되지 않은 작업 항목들의 리스트나 목록을 가리킵니다.<br />스크럼 마스터 : 스크럼의 전문가로 스크럼 프레임워크를 따르도록 보장합니다</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">&nbsp;</h3>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">참고 문서</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a style=\"color: #0070d1;\" href=\"https://brunch.co.kr/@jhw28/34\">스크럼과 스프린트</a></li>\n<li><a style=\"color: #0070d1;\" href=\"https://www.atlassian.com/ko/agile/scrum\">스크럼 설명 - Jira software</a></li>\n<li><a style=\"color: #0070d1;\" href=\"https://www.atlassian.com/ko/agile/scrum/sprint-planning\">스프린트 계획</a></li>\n<li><a style=\"color: #0070d1;\" href=\"https://www.atlassian.com/ko/agile/scrum/standups\">데일리 스크럼</a></li>\n<li><a style=\"color: #0070d1;\" href=\"https://www.atlassian.com/ko/agile/scrum/scrum-master\">스크럼 마스터</a></li>\n<li><a style=\"color: #0070d1;\" href=\"https://www.atlassian.com/ko/agile/scrum/retrospectives\">회고</a></li>\n</ul>",
        "contentSnippet": "⚠️ 본 글은 스크럼 표준 이론을 설명하는 것이 아닙니다.\n \n안녕하세요. Dev platform 팀 임진욱입니다.\n지마켓의 Jira, Wiki, GIthub, CI/CD 시스템을 담당하고 있습니다.\n \n지마켓으로 이직 후, 1년간 업무를 진행하며 스크럼을 사용하는 경험기를 다룹니다.\n(  스크럼에 대해서 더 알고 싶은 사람은 스크럼 설명 - Jira software 문서를 참고하면 도움이 됩니다.)\n스크럼이란?\n스크럼은 팀이 일련의 가치, 원칙 및 관행을 바탕으로 작업을 구조화하고 관리할 수 있도록 지원하는 애자일 프로젝트 관리 프레임워크입니다.\n스크럼은 팀이 경험을 통해 배우고, 문제를 해결하면서 스스로 구성하며, 얻은 것과 잃은 것을 되돌아보며 지속적으로 개선하도록 유도합니다.\n \n \n 시스템 관리 엔지니어로서 연속적으로 이어지는 운영 업무들을 짧은 단위로 목표를 정해서 스크럼을 하는 것이 좋아하지 않았습니다. 억지스레 '완료' 처리를 하게 되는 경우가 생기거나, 연속적인 업무의 경우, 계획한 스프린트에서 끝내지 못하고 다음 스프린트로 연기하는 경우도 있었습니다.\n이직 후, 데일리 스크럼을 하는 것을 보고 \"여기도 스크럼을 하는구나!\" 하고 좋아하지 않았습니다. 하지만 팀에서 프로젝트를 이끌어 가는 것을 보고, 업무를 진행하는데 도움이 될 수 있겠다!라는 생각이 들었습니다. 이러한 생각이 들었던 이유는 아래와 같습니다.  \n⭐️ 팀장님이 회고때 관여를 하지 않습니다. (회고 운영 X, 팀원과 같은 위치에서 참여)\n플래닝 때 백로그 목표와 내용을 명확히 한다.\n데일리 미팅 시 짧게 진행되도록 노력한다. (스탠딩 미팅)\n그럼 실제로 어떻게 일하고 있는지 보여드리도록 하겠습니다.\n \n이렇게 일하고 있어요  ‍ \n스크럼의 단계는 아래와 같이 진행하고 있으며, 각 단계별로 어떻게 진행하고 있는지에 대해 경험을 공유드리겠습니다.\n스크럼 단계\nSprint planning -> Daily scrum -> Sprint review -> Sprint retrospective\n스프린트 플래닝\n이번 스프린트에서 어떤 작업을 할 수 있으며, 선택한 작업은 어떻게 완료하는가?\n \n 위 목적을 달성하기 위하여 팀원들과 시간을 들여 논의를 합니다. 저희 팀은 스프린트를 진행할 때, 스크럼 단계에 따라 작업을 할 수 있도록 Jira board를 활용합니다.\n \n 스프린트가 달성해야 하는 목표 항목을 백로그 로 생성합니다. 계획을 잘하기 위해서는 백로그를 긴 시간을 할애하여 생성하여야 합니다. 백로그 생성 시 알 수 없는 부분이 많거나 위험도가 높은 작업을 백로그로 등록하는 것은 지양해야 합니다. 작업 범위가 크거나 불확실성이 높은 작업은 세분화하고, 다음 스프린트를 위해 작업의 일부를 남겨 두어도 좋습니다.\n \n 프로젝트 관리자는 달성해야 하는 목표에 따라 스프린트를 생성합니다. 이때, 목표와 스프린트 기간과 시작일을 설정합니다. 스크럼을 통해 업무를 다년간 하며, 팀 스타일에 맞춰가고 있습니다. 스프린트 기간의 경우도 초기에는 대중적으로 사용하는 2주로 설정하였습니다. 저희 팀의 경우, 2주의 스프린트 기간이 너무 짧다는 의견이 스프린트 회고 때 있었고, 현재는 4주 기준으로 스프린트를 진행하고 있습니다. 즉, 시작일은 월초, 끝나는 시간은 월 말으로 설정되어 있습니다.\n\n\n\n \nJira board에서 스프린트가 생성되면 해당 스프린트에서 달성해야 하는 목표에 맞는 백로그를 스프린트에 등록하면 '스프린트 플래닝'을 위한 준비가 됩니다.\n\n\n 스프린트 플래닝 회의는 프로젝트에 관여된 모든 사람이 함께 모여 진행합니다. 스프린트 플래닝 회의는 아침부터 오후까지 길게 잡고, 스프린트 목표를 이루기 위하여 백로그를 공유합니다. 형식적인 브리핑이 아닌 함께 하는 팀원들이 업무 내용을 이해할 수 있도록 상세하게 설명을 해야 합니다.\n \n 각 이슈마다 업무 설명이 끝난 후, '스토리 포인트'를 설정하게 되는데, '스토리 포인트'는 누가 해당 업무를 처리하는지 관계없이 해당 업무를 처리하는데 얼마큼 시간이 필요할지 생각하여 투표하고, 의견을 종합하여 최종 스토리 포인트를 결정합니다. 저희 팀은 'Planning Poker'를 이용하여 스토리 포인트를 측정합니다.\n\n\n\n 이슈마다 '스토리 포인트' 할당이 끝나면, 이슈 담당자를 정합니다. 너무 많은 스토리를 가져오거나, 속도를 과대 평가하거나, 스프린트에서 완료할 수 없는 작업을 가져오지 말아야 합니다. 품질 또는 기술적 부채를 잊지 말아야 할 점입니다.\n\"자신 또는 팀이 실패할 수밖에 없는 계획을 세우지 말아야 합니다.\"\n\n\n\n 이슈 담당자까지 지정이 완료되고 나면 프로젝트 관리자는 달성가능한 '스토리 포인트'가 할당된 지 확인하고 스프린트를 시작합니다.\n데일리 스크럼\n데일리 스크럽은 핵심 팀(제품 소유자, 개발자 및 스크럼 마스터)이 매일 아침 참여하는 회의입니다. 진행률을 논의하고 업무 진행을 방해하는 요소를 파악하기 위한 짧은 회의입니다. 참석자들이 회의에 서서 참여하면 회의가 짧게 진행되기 때문에 '스탠드업 미팅'이라고도 불려집니다. 데일리 스크럼에서 중요한 점은 보고 형식이 되면 안 됩니다. 모두가 팀의 상태와 진행률을 알 수 있도록, \"우리\"라는 개념을 강조합니다.\n \n저희 팀은 오전 10시에 회의를 진행하며 아래의 두 가지를 위주로 이야기하고 있습니다.\n어제 어떤 작업을 했습니다.\n오늘 무슨 일을 하고 있습니다.\n어떤 이슈가 나를 방해합니다. (위 두 개의 답변을 하며 함께 공유합니다)\n 보고 형식으로 팀장님께 이야기하는 것이 아닌, 참여자들끼리 상황 공유를 하고 도움을 줄 수 있는 경우 의견을 냅니다. 또한 회의가 끝난 후 함께 문제를 해결하는 시간을 가지기도 합니다.\n \n스프린트 리뷰\n저희 팀은 스프린트를 4주 단위로 하고 있으며, 스프린트 리뷰와 회고는 월 마지막주 화요일에 하고 있습니다. 스프린트 리뷰 포맷은 아래와 같습니다.\n \nsprint review\n\n\n스프린트 리뷰는 스프린트 동안 달성하고자 했던 목표와 \"결과물\"에 중점을 두고 리뷰를 합니다. 발표자는 스프린트 기간 동안 작업한 내용을 시각적으로 보여주고, 팀원은 피드백과 KPT (Keep, Problem, Try)를 작성해 줍니다.\n저희가 하는 것 중, 특이점은 \"Story Point Check\" 항목이 있는데, 스프린트 회고 때 나온 의견의 결과물로 스토리 포인트를 잘 설정하기 위하여 스프린트 리뷰 때, 설정한 스토리 포인트와 실제 본인이 작업하며 느낀 스토리 포인트에 대한 확인을 하고 있습니다. (선택적으로 하고 싶은 사람만 하고 있습니다)\n \n스프린트 회고 ⭐️⭐️⭐️\n스프린트 회고는 업무 관련된 회고가 아닌, 스프린트를 진행하면서 작업방법, 프로세스, 환경 등 교훈을 정리하고 팀 프로세스 개선을 위한 활동입니다.\n \n스프린트가 성숙해지기 위해서는 회고가 가장 중요하다고 생각합니다. 개인적으로 팀이 스크럼에 잘 적응할 수 있었던 이유는 스프린트 회고 문화를 잘 정착시켰기 때문이라 생각됩니다.\n \n직책자(팀장/PM)의 주도로 회고를 하지 않는다.\n회고 진행자는 팀원이 돌아가며 진행한다.\n팀원들의 적극적인 참여가 필요합니다.\n \n제가 생각하는 저희 팀이 회고를 잘 적응할 수 있었던 이유입니다. 한국의 문화적 특성상 직책자가 주도하는 회의에서는 자유로운 토론이 되지 않는 경우가 있습니다. 보통 스크럼 마스터가 회고를 진행하는데, 한 명의 고정된 진행자가 있을 경우, 팀원의 참여도가 점점 떨어질 수 있습니다. 팀원이 돌아가며 회고 진행을 할 경우, 진행자는 회고를 준비하고 이끌어 가기 위해 학습합니다. 이런 경험이 쌓이며 성숙된 문화가 정착되고 있습니다.\n회고 툴은 회고 진행자가 전적으로 준비해오고 있습니다. 고정된 툴을 사용해야 하는 것도 아닙니다. 회고 툴을 사용한 것 중, 제일 좋았던 툴은 retrotool 입니다.\n스프린트 회고\n\n\n회고 진행자는 retrotool 에서 아래 칼럼을 생성하여 회고를 준비합니다.\n[잘한 점/성공의 원인] : 칭찬하거나, 스프린트 진행 중 긍정적이었던 부분\n[부족한 점/장애물] : 부족하거나, 스프린트 진행 중 방해 요소\n[개선 방법]\n[개선방법(누적)] : 누적된 개선 방법 (문화로 정착할 경우 졸업)\n진행 방법은 아래와 같습니다.\n절차\n내용\n시간\n\n\n아이스브레이킹\n팀원과의 대화\n5 ~ 10분\n\n\n개선방법 (누적) 공유\n \n \n\n\n잘한점\n잘한점 작성\n5분\n\n\n공유\n작성 내용 확인 및 공유\n \n\n\n부족한점\n부족한점 작성\n5분\n\n\n공유\n작성 내용 확인 및 공유\n \n\n\n개선점\n개선점 작성\n5분\n\n\n공유\n개선점 공유 및 평가\n \n\n\n\n \n 회고에 자유로운 대화를 하기 위하여 회고에 앞서 아이스브레이킹을 진행합니다. 밸런스 게임이나 이상형 월드컵 등으로 자유로운 분위기로 대화를 할 수 있는 환경을 준비합니다.\n \n \n 지금까지 누적된 개선방법(누적)을 공유하고, 이번 스프린트에 잘한 점을 '5분'동안 각자 작성합니다. retrotool 툴은 포스트잇 형태로 익명으로 작성 가능합니다. 업무 내용 외 스프린트를 진행하며, 칭찬하고 싶은 사람이나 좋았던 것에 대한 작성을 합니다. 팀원들이 작성한 내용을 보고, 공감이 될 경우 포스트잇을 클릭(LIKE)합니다. 회고 진행자는 공감이 많이 된 순으로 작성된 내용에 대해서 팀원들의 의견을 듣는 시간을 가집니다. 이때, 꼭 작성자가 본인이 쓴 내용을 이야기하지 않아도 됩니다. 부족한 점도 좋은 점과 동일하게 작성하고 공유합니다.\n\n\n 잘한 점과 부족한 점에 대한 공유가 끝나면, 팀원들이 '5분'간 각자 개선점을 작성합니다. 개선점 작성이 끝나면 진행자는 개선점을 공유합니다. 누적된 개선 사항 중, 이미 문화로 정착되었거나 불필요하다고 느낄 경우 '졸업'을 시키고, 새로운 개선 사항을 추가해 줍니다. 회고에서 나온 개선사항은 언제든 팀원들이 볼 수 있는 공간에 정리해 둡니다. (저희의 경우 주간회의록 제일 상단에 정리해 둡니다.)\n \n모든 회고가 완료되면, 회고 진행자는 회고록을 작성합니다.  \n \n\n\n \n스프린트 종료\n프로젝트 관리자는 지정된 날짜에 스프린트를 종료를 팀원에 알리고 종료를 합니다.\n그 후, 새로운 스프린트를 작성하고, 플래닝을 준비합니다.\n \n맺음말\n스크럼 이론이 존재하고, 이를 지원하는 Tool로 지원을 받을 수 있습니다. 중요한 점은 협업하는 팀이 목표를 달성하기 위하여 사용하는 방법론이므로 정답이 존재하지 않는다는 것입니다. 회사마다 팀마다 맞는 문화를 만들어 협업 및 업무에 도움이 되는 방법을 찾아가는 것이 좋습니다.\n \n참고 자료\n용어 설명\n백로그(Backlog) : 프로젝트 관리, 소프트웨어 개발, 업무 관리 등 다양한 분야에서 사용되는 용어로, 완료되지 않은 작업 항목들의 리스트나 목록을 가리킵니다.\n스크럼 마스터 : 스크럼의 전문가로 스크럼 프레임워크를 따르도록 보장합니다\n \n참고 문서\n스크럼과 스프린트\n스크럼 설명 - Jira software\n스프린트 계획\n데일리 스크럼\n스크럼 마스터\n회고",
        "guid": "https://dev.gmarket.com/108",
        "categories": [
          "Infra"
        ],
        "isoDate": "2024-06-28T05:22:21.000Z"
      }
    ]
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "편의점 갈 필요 없는 교통카드 충전하기: 토스로 티머니 충전하는 법 ",
        "link": "https://blog.toss.im/article/toss-tmoney",
        "pubDate": "Mon, 01 Jul 2024 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-oni540{position:relative;width:100%;height:0;padding-bottom:56.25%;}\n.css-122y91a{position:absolute;top:0;left:0;width:100%;height:100%;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}버스 곧 도착할 예정인데, 교통카드 잔액이 부족하다면? 편의점 갈 필요 없이 토스 이용해 티머니 충전 바로 할 수 있어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n토스 이용해 티머니 충전하는 법\n1. 오른쪽 하단 ‘전체’를 누른 후 ‘교통카드 조회 충전’ 메뉴를 선택해 주세요. \n.css-1pgssrp{max-width:100%;border-radius:16px;}.css-wgpbp3{display:block;margin-top:6px;}.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}토스로 티머니 충전하는 법\n2. 편의점에서 산 티머니 교통카드나 토스에서 발급받은 토스유스카드 중 잔액을 조회하거나 충전할 카드의 버튼을 눌러주세요. \n\n3. 티머니 로고가 있는 교통카드를 휴대폰 뒷면에 댄 상태로 3초 이상 기다려주세요. 이 때 너무 빨리 떼면 카드를 인식할 수 없어요.  \n\n4. 교통카드가 등록되면 충전을 시작할 수 있는데요. 충전할 금액을 입력한 다음 휴대폰 뒷면에 교통카드를 대면 충전을 진행할 수 있어요.",
        "content": "티머니 충전소 찾아 헤매지 않아도 돼요.",
        "contentSnippet": "티머니 충전소 찾아 헤매지 않아도 돼요.",
        "guid": "https://blog.toss.im/article/toss-tmoney",
        "isoDate": "2024-07-01T00:00:00.000Z"
      },
      {
        "title": "국내 여행할 때 숙박·식음료 할인받기: 디지털 관광주민증",
        "link": "https://blog.toss.im/article/money-policies-15",
        "pubDate": "Fri, 28 Jun 2024 05:32:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}국내 여행을 계획 중이라면 ‘디지털 관광주민증(이하 관광주민증)’을 활용해 보세요. 관광주민증은 인구 감소 위기 지역의 관광 활성화를 위해 발급하는 일종의 ‘명예주민증’이에요.\n관광주민증을 소지하면 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}여행 시 관람, 체험, 식음료, 숙박, 쇼핑 등 다양한 할인 혜택을 받을 수 있어요. 전국 34개 지역, 800여 곳에서 관광주민증을 사용할 수 있는데요. 대표적으로 경기 가평군 가평브릿지집라인 20% 할인, 전북 임실군 치즈테마파크 10% 할인, 충북 영동군 일라이트호텔 30% 할인, 경북 영덕 고래불국민야영장 20% 할인 등 혜택이 무척 다양해요. .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}대한민국 구석구석 누리집에서 지역별 혜택을 더 자세히 확인 할 수 있어요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}출처: 대한민국 구석구석 누리집 \n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}관광주민증 발급 방법\n➀ 대한민국 구석구석 누리집(korean.visitkorea.or.kr) 접속 후 로그인\n➁  ‘여행정보→디지털 관광주민증’ 메뉴에서 현재 거주 지역과 관광주민증 발급받을 지역 선택하면 끝\n*현재 거주지에서 관광주민증을 발급받는 것은 불가능해요.\n관광주민증 사용 방법\n할인 혜택 받을 방문지에서 QR코드를 스캔해 할인증 다운 받은 후 직원에게 제시\n교통비 할인도 놓치지 마세요. 코레일에서는 6월 30일까지 각종 할인 혜택을 제공해요. 열차 35% 할인, 역사 매장 이용권 5% 할인, KTX 2만 원 할인권 증정 등이에요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희",
        "content": "관람, 체험, 식음료, 숙박, 쇼핑 등 할인 혜택을 받을 수 있어요.",
        "contentSnippet": "관람, 체험, 식음료, 숙박, 쇼핑 등 할인 혜택을 받을 수 있어요.",
        "guid": "https://blog.toss.im/article/money-policies-15",
        "isoDate": "2024-06-28T05:32:00.000Z"
      },
      {
        "title": "내년부터 시행된다는 금융투자소득세, 연간 금융소득 5천만 원 이하여도 세금 늘어날 수 있어요",
        "link": "https://blog.toss.im/article/economic-terms-19-financial-investment-income-tax",
        "pubDate": "Thu, 27 Jun 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}💡 이 글에서 알 수 있는 것들\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}한 판 정리된 금융투자소득세에 대한 모든 것\n금융투자소득세 시행되면 내게 미치는 실질적인 영향\n\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-p4abj2{display:contents;line-height:1.55;}🔖 이번 주 경제 용어\n금융투자소득세\n이번 주 경제 용어는 노후에 잘 살기 위해 필요한 정보예요.\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n금융투자소득세(금투세)는 주식·채권·펀드·파생상품 등 금융 투자로 얻은 양도 소득에 대해 부과하는 세금을 말해요.\n\n\n금융투자소득세는 2020년에 기획재정부가 소득세법 개정안을 발의하면서 시작되었고, 2023년부터 시행될 예정이었는데요. 국내 증권 시장 활성화 목적으로 2년 유예된 상태입니다. 만약 올해 여야 합의가 없다면, 2025년 1월부터 과세될 전망이에요.\n금투세의 기본 취지는 모든 금융 투자 상품에서 발생한 수익에 대해 과세하겠다는 것입니다. 뒤죽박죽으로 섞여 있던 금융 투자에 일괄적인 세금을 매긴다는 건 좋은 의미입니다. 이는 금융 투자 시장의 투명성을 높이고, .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}조세 형평성을 강화할 수 있으니까요. 다만 기존에 비과세였던 국내 주식과 채권 투자에 과세가 추가되면서 개인 투자자들의 부담이 늘어난다는 우려가 있습니다.\n금융투자소득세에 대해 좀더 자세히 정리하면 아래와 같아요.\n.css-hokoge{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;counter-reset:numberedList;}.css-hokoge ul,.css-hokoge ol{margin:16px 0 0;}.css-hokoge>li{counter-increment:numberedList;margin-bottom:16px;padding-left:24px;}.css-hokoge>li:last-of-type{margin-bottom:0;}.css-hokoge>li>span{position:relative;}.css-hokoge>li>span>:first-child::before{content:counter(numberedList) '.';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n금융투자소득세란\n주식·채권·펀드·파생상품 등 금융상품에 투자하여 실현된 소득에 세금을 매기는 것을 말합니다. 원래 각 금융 상품별로 과세 체계가 각각 달랐는데요. 이 과세 체계를 새롭게 정립하여 만든 세금입니다.\n\n금융투자소득세 세율\n과세표준에 따라 금융투자 소득이 3억 원 이하일 경우 22%(금투세 20%+지방소득세 2%)의 세율, 3억 원을 초과하면 27.5%(금투세 25%+지방소득세 2.5%)의 합산 세율이 적용됩니다.\n\n금융투자소득세 주요 특징\n➀ 손익통산, ➁ 기본공제 적용, ➂ 결손금 이월공제 가능 등이 있어요.\n➀ 손익통산: 투자 이익과 손실을 합쳐서 계산 후 남은 ‘순이익’에 대해서 과세함을 의미하고요.\n➁ 기본공제 적용: 연 5,000만 원(1그룹)과 연 250만 원(2그룹)으로 나눠서 투자자가 얻은 금융투자소득 중 일부를 공제해줍니다. 금융투자소득세 기본공제를 받기 위해서는 반드시 투자자가 금융 회사에 신청해야 하는데요. 기본공제 한도 내에서 여러 금융 회사에 나눠서 신청할 수 있어요.\n\n\n1그룹 (기본공제 연 5,000만 원) : 코스피, 코스닥, 코넥스 상장주식, 국내주식형 공모펀드, 국내주식형 ETF, K-OTC 중소/중견기업 주식\n2그룹 (기본공제 연 250만 원) : 1그룹에 해당되지 않는 금융투자소득. 상장 및 비상장주식의 장외거래 등, 채권등(조건부자본증권, CP, CD, 전단채 등), 집합투자증권/집합투자기구(1그룹 제외), 파생결합증권(ELS, DLS, ETN, ELW 등), 해외주식, 자본시장법상 투자계약증권, 파생상품(선물, 옵션, 선도, 스왑 등)\n\n* 참고 자료 링크 (출처: 신한투자증권)\n\n➂ 결손금 이월공제 가능: 투자 손실이 이익보다 클 때, ‘금융투자 결손금’이 발생했다고 하는데요. 결손금이 발생하면 기본공제 등 세금 혜택을 받지 못합니다. 그래서 향후 5년 간 수익이 발생하는 해로 결손금을 이월하여 그 해의 소득에서 공제받을 수 있도록 하는 거예요. 이를 통해 전체적인 세금 부담을 줄일 수 있게 됩니다.\n\n기존에 내지 않던 세금 발생\n기존에는 내지 않던 세금을 내야 합니다. 지금까지 국내 투자 활성화를 위해 국내 주식과 국내 주식형 ETF·펀드(1그룹에 해당) 수익은 비과세였습니다. 또한 채권투자(2그룹에 해당) 수익에 대해서도 비과세였죠. 하지만 금투세가 시행되면 모두 과세 대상이 됩니다.\n파생결합증권과 펀드 등 수익에 대해서도 세금을 지금보다 더 많이 내야 하는데요. 배당소득세에서 금투세로 바뀌면서, 15.4%에서 22~27.5%(지방세 포함)로 세율이 오르게 됩니다.\n\n\n금융투자소득세 도입으로 인해 올해 연말까지 국내 주식 시장의 변동성이 높아질 수 있다는 우려가 있습니다. 세금 부담을 피하기 위해 국내 증시를 이탈하려는 큰손들의 주식 매도 현상이 심화될 수 있고, 내년에 과세되는 양도 차익 규모를 줄이기 위해 국내 주식을 매도하는 사람들이 늘어날 수 있기 때문입니다. 이런 분위기 속에서 아무래도 개인 투자자들의 투자 심리는 위축될 수 있겠습니다.\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}“딸 위해 가입한 펀드 팔 수밖에”…연말정산도 금투세 도입땐 손해\n(매일경제 2024.6.20)\n#5년 전에 딸 아이 이름으로 해외주식에 투자하는 어린이 펀드에 가입했던 김 모씨는 금융투자소득세가 시행되기 전인 올해에 펀드를 환매할 예정이다. 그동안 신경 안 쓰고 살았는데 금융투자소득세가 도입되면 일정 기준 이상 수익에 대한 연말공제 인적공제 혜택이 사라진다는 얘기를 들었기 때문이다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}오랫동안 가지고 있던 펀드라 100만 원 넘는 수익이 났는데 인적공제를 못받아 세금을 더 토해내느니 일단 올해 환매하는 게 낫겠다는 생각이다. 다만 당시 은행에서 펀드 가입할 때 이것저것 서류 작성할 게 너무 많아서 이번에는 펀드 환매 후 다른 투자를 할까 고민하고 있다.\n내년 금융투자소득세 시행을 앞두고 하반기 펀드 시장에 혼란이 불가피해졌다. 당초에는 투자자들이 국내 시장에서 이탈할 것이란 우려가 컸다면 이제는 국내주식 뿐만 아니라 채권, 해외주식, 펀드 모든 자산에 대해 연내 매도와 환매가 대거 일어날 우려가 커지고 있다. (중략)\n\n\n여러분, “나는 주식 투자로 연간 5,000만 원 못 벌어 들이니까 금융투자소득세와 상관없는 사람”이라 생각하시면 큰일입니다. 연간 금융소득이 5,000만 원 이하인 가구도 ‘실질적으로’ 내는 세금이 늘어날 가능성이 있으니까요.\n금투세가 시행되면, 일반 투자자들이 더이상 부양가족 인적공제 혜택을 받지 못하게 될 수 있다는 것이 주목해야 할 점인데요. 어떤 이유 때문인지 좀더 자세히 살펴볼게요.\n그동안 연말정산 인적공제는 배우자, 직계존비속, 형제자매까지 대상이 매우 넓어 많은 근로소득자들이 연말정산 때 1~3명의 인적공제를 받아왔어요. 부양가족 1인당 150만 원씩 인적공제를 받을 수 있는데, ‘인적공제 대상인 부양가족 구성원은 연 소득이 100만 원을 넘지 않아야 한다’는 중요한 요건이 있습니다.\n그런데 부양가족이 국내 주식과 채권, 펀드 등에 투자해 연간 100만 원 이상 이익을 얻으면 더이상 인적공제 혜택을 받을 수 없게 됩니다. 금투세가 도입되면 2,000만 원 이하의 금융투자 수익도 과세 대상에 포함되면서 ‘소득’으로 잡히게 되거든요. 즉, 그동안 부양가족으로 인적공제를 받을 수 있었던 요건에서 이탈되는 거예요.\n이렇게 되면 가정 주부나 자녀분들은 금융 투자를 하지 말라는 의미로도 해석될 수 있습니다. 가정 주부나 자녀 명의로 주식 계좌를 만들어 주는 경제 교육도 어려워지고, 대학생 자녀들에게도 함부로 주식 투자를 하면 안 된다고 말해야 하는 상황이 발생할 수 있습니다. 그래서 이게 가장 큰 문제입니다. 자산을 늘릴 수 있는 사다리가 또 한 번 사라지는 거니까요.\n이러한 문제를 해결하기 위해서는 금투세 설계가 적정한지 검토해야 한다는 목소리가 나오고 있어요. 또한 바뀌는 세법에 대해 정부 차원에서 금융 투자 교육을 강화하는 등의 노력도 병행해야 할 것으로 보입니다.\n\n\n금융소득종합과세: 금융소득(은행 예적금의 이자소득, 주식의 배당소득 등)을 종합소득(사업소득, 근로소득, 연금소득 등)에 합쳐서 세금을 매기는 제도. 개인별 연간 금융 소득의 합계액이 2,000만 원을 초과하는 경우에 금융소득종합과세를 적용하고, 누진세율이 적용돼요.\n양도소득세: 부동산이나 금융상품을 다른 사람에게 팔 때 생기는 세금. 개인이 토지, 건물, 분양권 등 부동산에 대한 권리를 양도하거나 주식, 채권 등 금융상품의 양도함으로 인해 생기는 이익에 세금이 매겨지게 됩니다.\nISA 계좌: 개인종합자산관리 계좌. ISA 계좌에서 발생하는 금융투자 소득은 200만 원(서민형 400만 원)까지 비과세되고, 초과분 소득은 9%의 세율로 분리과세(지방소득세 별도)되므로 일반 계좌에 비해 절세가 가능해요. 더 자세한 내용은 [여기]에서 확인할 수 있어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "“나는 주식 투자로 연간 5천만 원 못 벌어들이니 금융투자소득세와 상관없는 사람”이라 생각하시면 큰일입니다.",
        "contentSnippet": "“나는 주식 투자로 연간 5천만 원 못 벌어들이니 금융투자소득세와 상관없는 사람”이라 생각하시면 큰일입니다.",
        "guid": "https://blog.toss.im/article/economic-terms-19-financial-investment-income-tax",
        "isoDate": "2024-06-27T02:00:00.000Z"
      },
      {
        "title": "2024 상반기 주요 이슈 10가지 다시 보기",
        "link": "https://blog.toss.im/article/thefirsthalf-2024",
        "pubDate": "Wed, 26 Jun 2024 11:57:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}한해의 반이 훌쩍 지났습니다. 여러분의 상반기는 어떠했나요? 토스는 그동안 일상 속 금융·경제 이슈를 빠르고 깊게 전해왔는데요. 2024년 상반기에는 무슨 일들이 있었는지, 콘텐츠와 함께 지난 6개월을 돌아봅니다.\n\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}암표와의 전쟁\n새해부터 팬도 울리고, 아티스트도 울리는 암표 문제가 화제였습니다. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}임영웅 콘서트 암표는 500만 원, 롤드컵 결승전 티켓은 400만 원까지 치솟았습니다. 가수 장범준은 콘서트 암표가 성행하자 공연을 취소하고 공연 티켓을 NFT로 발행했어요. 무엇 때문에 웃돈 없이는 최애도 못 보러 가는 세상이 되었는지, 암표 문제를 집중 조명했습니다.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n🔗  콘텐츠 더 보기\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}임영웅 콘서트 티켓은 왜 500만 원이 되었을까? \n\n\n스타필드 수원\n1월 30일 문을 연 ‘스타필드 수원'과 함께 수원이 새로운 핫플레이스로 떠올랐습니다. 성수동에서 핫한 LCDC, 오롤리데이, 바이닐성수가 스타필드 수원에 매장을 열며 큰 주목을 받았어요. 스타필드가 들어서면 집값이 오른다는 이야기가 있는데요. 실제로 2016년, 스타필드 하남이 오픈한지 1년이 안 되어 주변 집값이 46% 오르고, 스타필드 고양 역시 오픈 후 2년 사이 삼송지구의 아파트 실거래가가 2억 원 정도 오르기도 했습니다. 때문에 수원이 왜 새로운 스타필드의 부지로 선정되었는지 관심이 쏠렸었죠.\n\n🔗  콘텐츠 더 보기\n\nLCDC, 오롤리데이, 바이닐성수는 왜 ‘스타필드 수원'으로 갔을까?\n\n\n\n\n기후동행카드\n기후동행카드는 65,000원을 충전하면 30일 동안 서울시 내 지하철, 버스, 따릉이를 무제한 이용할 수 있는 대중교통 정기권이에요. 약 50만 명의 시민이 1인당 연 34만 원 이상의 할인 혜택을 받을 것으로 예상됩니다. 카드 출시 후 약 한 달 만에 누적 판매량 46만 여장을 기록하며, 2030에게 큰 인기를 끌었습니다. 2024년 상반기 동안 시범사업으로 운영됐고, 7월 1일 하반기부터는 본격 가동될 예정입니다.\n\n🔗  콘텐츠 더 보기\n\n기후동행카드 시작된 지 한 달, 어디까지 왔을까\n\n\n\n\n사과값과 기후위기\n봄에는 “요즘 과일 먹어?”라는 말로 안부를 묻곤 했습니다. 특히 사과는 한 알에 5~6천 원으로 가격이 치솟으며 ‘금사과'라는 별명을 얻었습니다. 올해 3월의 사과는 작년보다 88%나 비싸졌어요. 사과뿐만 아니라 배와 귤 가격도 각각 87.8%, 68.8%로 크게 뛰었고요. 먹거리 가격이 오르는 다양한 이유 중, 토스는 ‘기후변동'을 주목했습니다. 기후위기는 어떻게 우리 식생활을 침략하고 있는지, 앞으로 우리 밥상 물가는 어떻게 될지 전문가에게 물었습니다.\n\n🔗  콘텐츠 더 보기\n\n기후위기가 한국인 밥상에 앞으로 일으킬 변화는?\n\n\nGTX와 출퇴근\n3월 말에는 GTX-A 노선 일부가 개통되었습니다. GTX는 수도권 출퇴근 30분 시대를 선사하겠다는 포부를 밝히며, 많은 직장인의 기대를 받았는데요. 수서~동탄 일부 노선만 개통되어, 개통 후 한달 이용객은 예상의 절반도 미치지 못해 아쉬움을 남겼습니다. 출퇴근에 긴 시간을 쏟으면, 실제 소득이 줄어드는 것과 비슷한 결과가 나타난다는 연구도 있습니다. 출퇴근 시간이 10분 길어질 때마다 근로자들은 총소득 19%가 감소하는 것과 같은 직장만족도 하락을 느낀다고 해요. 그렇다면 덜 괴롭고, 더 행복한 출퇴근을 위해 필요한 것은 무엇일까요?\n\n🔗  콘텐츠 더 보기\n\n‘출퇴근 시간'이 줄어들면 더 행복할까?\n\n\n\n\n\n비트코인 반감기\n4월 20일, 비트코인이 4번째 반감기를 맞았습니다. 비트코인의 총발행량은 2,100만 개로 정해져 있는데요. 채굴이 많이 돼서 비트코인 유통이 늘어나면 채굴 보상이 절반으로 줄어들게 설계되어 있습니다. 이 시기를 반감기라고 합니다. 반감기는 4년에 한 번 주기로 돌아오고, 반감기에는 유통되는 양자체가 줄어들기 때문에 비트코인 가격이 오르는 게 일반적입니다. 2016년 반감기 후에는 가격이 30배 이상 오르기도 했죠. 하지만 이번 반감기에는 이틀 바짝 가격이 올랐다가 그 이후부터는 하락세를 찍었는데요. 그 이유에 대해 전문가들은 어떻게 분석하고 있을까요?\n\n🔗  콘텐츠 더 보기\n\n비트코인 가격, 갑자기 하락한 이유는? .css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}(이 콘텐츠는 토스앱에서 볼 수 있습니다)\n비트코인 가격이 4년마다 급상승할 수밖에 없는 이유\n\n\n총선\n4월에는 제22대 국회의원선거가 있었습니다. 지역구와 비례 위성정당 의석을 합쳐 민주당은 175석, 국민의힘은 108석을 얻었어요. 조국혁신당 12석, 개혁신당 3석, 진보당과 새로운미래는 각각 1석을 얻었습니다. 선거를 치르면 당선자와 일정 비율 이상 득표를 한 후보자는 선거운동에 쓴 돈을 돌려받을 수 있습니다. 지역구 국회의원 선거는 후보자가 15% 이상 득표하면 선거비용의 전액을 돌려받습니다. 득표율이 10~15%일 경우에는 절반만 돌려받고요. 비례대표의 경우, 후보자가 당선될 경우 정당이 지출한 비용의 전액을 돌려받습니다. 왜 국민의 세금으로 선거운동에 쓴 돈을 돌려주는건지 궁금하다면 아래 콘텐츠를 읽어보세요. \n\n🔗  콘텐츠 더 보기\n\n선거운동 하면서 쓴 돈, 왜 세금으로 돌려주는 걸까?\n\n\n\n\n\n하이브와 민희진\n하이브가 산하 레이블인 어도어의 감사를 착수하면서 하이브와 민희진 어도어 대표 간의 갈등이 세상에 알려졌습니다. 민 대표가 어도어의 경원권을 탈취하려고 했다는 게 감사의 이유였습니다. 민 대표는 두 차례에 걸친 기자회견으로 맞대응했고 이 과정에서 하이브의 주가는 크게 출렁였어요. 감사 사실이 밝혀졌을 때는 주가의 약 8%가 하락했고, 1차 기자회견 이후에도 또 하락했습니다..css-1swx3yz{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;font-weight:bold;} 하이브와 민 대표의 사건은 한동안 뜨거운 감자였지만, 낯선 계약·금융 용어들이 등장해 맥락을 정확히 파악하기 어렵기도 했는데요. “주주간 계약이 뭐길래 저렇게 싸우는 거지?” “민희진 대표가 가만히 있어도 1,000억을 벌 수 있다는 게 무슨 말이야?” 눈치껏 이해했지만 정확하게 몰랐던 민희진 대표의 커리어, 계약 관계, 하이브의 사업 구조와 관련한 주요 용어를 총정리했습니다.\n\n🔗  콘텐츠 더 보기\n\n가만히 있어도 1,000억 번다는 민희진, 무슨 뜻일까?\n\n\n\n\n34년 만에 최저 기록한 엔화\n일본 통화인 엔화가 장기간 하락세를 면치 못하고 있습니다. 엔화가 하락한 요인으로는 일본의 마이너스 금리, 미국과의 기준금리 격차가 커지는 것, 그리고 일본의 1분기 국내총생산(GDP) 성장률이 마이너스를 기록한 것 등이 이야기됩니다. 엔화가 떨어지면, 일본으로부터 수입하는 원자재, 부품, 소비재 등의 비용이 저렴해집니다. 한국 기업들의 생산 비용이 절감되고, 소비자 가격 안정화로도 이어질 수도 있어요. 일본 물가가 저렴하게 느껴지기 때문에 일본 여행도 쉬워집니다. 하지만 반대로 한국 경제에 미치는 부정적인 영향도 있는데요. 전문가와 함께 엔저 현상에 대해 자세히 살펴봤습니다.\n\n🔗  콘텐츠 더 보기\n\n엔화가 떨어지면 한국 경제에 어떤 부정적 영향이 있을까?\n\n\n달라진 청약제도\n올해 상반기에는 청약제도에 큰 변화가 있었습니다. 올해 1월, 미성년자 청약통장 가입 인정 기간을 2년에서 5년으로 확대하고, 납입 인정 금액도 200만 원에서 600만 원으로 늘어났어요. 3월 말부터는 부부 동시 청약이 가능하고, 아이를 가진 사람들을 위한 신생아 특별공급 청약이 생기고, 다자녀 기준이 3명에서 2명으로 완화되었습니다. 본청약 전에 청약 신청을 미리 받는 사전청약 제도는 부활한 지 3년 만에 사라졌어요. 올 9월부터는 청약 월 납입 인정 한도가 올라갑니다. LH, SH 등이 분양하는 공공주택에 청약을 넣으면 납입 총액이 많은 사람을 우선해서 뽑는데요. 원래는 납입 총액을 계산할 때 한 달에 최대 10만 원까지만 인정됐지만, 앞으로는 25만 원까지 인정됩니다.\n\n🔗  콘텐츠 더 보기\n\n2024년 달라지는 청약제도 4가지 \n사전청약 제도가 사라져요 \n청약통장 월 납입 인정 한도가 올라가요 \n(위 콘텐츠들은 토스앱에서 볼 수 있습니다)\n\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nGraphic 조수희",
        "content": "금사과부터 하이브와 민희진 사건까지",
        "contentSnippet": "금사과부터 하이브와 민희진 사건까지",
        "guid": "https://blog.toss.im/article/thefirsthalf-2024",
        "isoDate": "2024-06-26T11:57:00.000Z"
      },
      {
        "title": "서울에 아파트 한 채가 있다면? 상속세 미리 대비하세요",
        "link": "https://blog.toss.im/article/inheritance-and-gift-tax-04",
        "pubDate": "Wed, 26 Jun 2024 09:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}부동산 가격이 지속적으로 오르면서, 부자들의 세금으로만 생각되었던 상속세가 일반 사람들도 부담할 수 있는 세금으로 인식되고 있는데요. ‘상속세 대중화’ 시대가 되어가고 있는 것 같습니다.\n그런데 상속세 내야 하는 대상은 늘어났지만, 막상 본인 혹은 직계 가족이 사망할 때 상속세가 얼마나 나오는지 제대로 알고 있는 사람은 드물어요. 인터넷으로 검색되는 대략적인 정보를 가지고 걱정을 하고 있거나, 반대로 상속세가 꽤 나오는데도 그 사실을 알지 못하고 태평하게 준비하지 않는 사람도 있고요.\n재산의 규모가 크지 않고 구성이 단순하다면, 대략적으로 상속세를 계산하는 것은 어렵지 않습니다. 그리고 상속세가 얼마나 나오는지 예상할 수 있다면 지나친 낙관도 걱정도 하지 않아도 될 것이고, 그에 맞는 적절한 대응을 할 수 있을 것입니다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}재산이 10억을 넘지 않으면?\n상속세 안 내도 된다\n상속세를 계산할 때에는 ‘가장 먼저 상속될 순자산이 얼마인가’부터 파악해야 합니다. 순자산이란 다음과 같이 총자산에서 부채를 뺀 값이에요.\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1swx3yz{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;font-weight:bold;}순자산 = 총자산 – 부채\n\n\n이렇게 순자산이 정해지면 다음은 공제 항목들을 차감해 .css-wi4a2c{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;font-weight:bold;}과세표준을 구해야 할 차례입니다. 공제 항목만 제대로 이해하고 적용하면 사실상 상속세 계산은 끝인데요. 상속 시 적용되는 공제는 일괄공제, 배우자상속공제, 금융재산공제 등이 있습니다.\n\n과세표준 = 순자산 – 상속공제\n\n\n상속공제 중 대표적인 공제가 일반적으로 특별한 요건 없이 적용받을 수 있는 일괄공제 5억 원입니다. 일괄공제 대신 기초공제 2억 원과 그 밖의 인적공제를 합한 금액을 적용할 수도 있는데요. 그 밖의 인적공제가 3억 원이 넘지 않는 경우가 대부분이라, 일괄공제를 적용받는 것이 유리합니다.\n배우자상속공제는 배우자가 생존해 있기만 해도 최소 5억 원에서 최대 30억 원까지 공제 가능합니다. 이렇게 일괄공제 5억 원과 배우자상속공제 5억 원을 더하면 최소 10억 원의 공제는 확보되는 셈이죠.\n‘재산이 10억이 넘지 않으면 상속세를 내지 않는다’는 말이 바로, 이 두 가지 공제를 두고 말한 것입니다.\n이제 상속공제까지 모두 완료된 과세표준에 세율을 적용하면 상속세가 계산되는데요. 상속세 세율은 아래 표를 참고해 계산할 수 있습니다.\n\n상속세 산출세액 = 과세표준 × 세율 - .css-12bq3a1{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey800);background-color:#3fd59936;-webkit-text-decoration:underline!important;text-decoration:underline!important;font-weight:bold;}누진공제액\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n상속인에게 배우자와 자녀가 있다면,\n상속세가 달라진다\n김토스 – 그럼 10억 원 이하인 아파트 한 채만 상속받는다면, 상속세 신경은 쓰지 않아도 되나요?\n택스코디 – 이때는 ‘상속인(상속받는 사람)의 현황’이 중요합니다. 결론부터 말하면 배우자와 자녀가 있으면 상속세는 발생하지 않습니다. 하지만 배우자 없이 자녀만 있다면 사정은 달라져요.\n똑같이 10억 원의 주택 한 채를 상속받아도, 배우자와 자녀 모두 있을 때는 최소 10억 원이 공제(일괄공제 5억 원 + 배우자 공제 5억 원)되기 때문에 상속세가 나오지 않습니다. 하지만 배우자 없이 자녀만 있다면 일괄공제 5억 원만 적용받아 같은 가격의 주택에 대해 상속세가 부과될 수 있습니다.\n상속공제가 어떻게 적용되는지에 따라 상속세가 부과될 수 있고 아닐 수도 있는 것입니다. 아래 표를 참고합시다.\n\n또 하나 고려해야 할 점은 취득세입니다. 상속세가 부과되지 않더라도 낼 세금이 없는 건 아닙니다. 상속받은 주택에 대한 취득세를 내야 하기 때문입니다.\n국민주택규모를 초과하는 집에 대해서는 3.16%(지방교육세, 농어촌특별세 포함)의 취득세율이 적용됩니다. 수도권 85㎡ 이하, 비수도권 100㎡ 이하 국민주택규모 집이라면 농어촌특별세 0.2%는 비과세되어 2.96%가 적용됩니다. 무주택 상속인 1가구가 상속주택을 취득한 경우엔 더 낮은 세율인 0.96%이 적용됩니다.\n자녀가 상속을 포기하면, \n배우자 공제 30억 전부를 받을 수 있다?\n‘배우자는 사망한 남편(또는 아내)과 재산을 형성하는 데 공동으로 기여’했기 때문에 배우자공제를 추가로 적용을 해 주고 있습니다. 최소 금액은 5억 원부터 최대 30억 원까지를 공제하는데, 실제 배우자가 받는 금액을 기준으로 해 주고 있습니다.\n김토스 – 그럼 상속인이 저와 어머니뿐일 때, 상속 재산이 30억 원이고 제가 상속을 포기해 어머니가 다 가져간다면 정말 배우자공제 최대 한도인 30억 원을 모두 적용받을 수 있는 건가요?\n택스코디 – 이때는 말이 조금 달라집니다. 먼저 법정 상속 비율에 대한 이해가 필요합니다. 법정 상속 비율이란, 상속인들끼리 재산 협의가 잘 안 되는 때에는 법에서 정해져 있는 비율대로 상속이 이뤄지는데, 그 비율을 의미합니다. 만약 상속인이 자녀만 3명이라면, 법정상속 비율은 1:1:1로 똑같습니다.\n그런데 배우자는 여기에 5할을 가산해서 1.5배 적용이 되고 있습니다. 따라서 김토스 씨 경우처럼 자녀와 배우자 1명이 상속인이라고 한다면, 법정상속 비율은 1(자녀):1.5(배우자)가 되고, 이 법정 상속 비율에 해당하는 금액을 한도로 해서 공제를 받을 수 있는 것이지요.\n김토스 – 그럼 30억 전부 공제받는 게 아니란 말인가요?\n택스코디 – 그렇습니다. 김토스 씨가 상속을 포기해 상속 재산 30억 원 모두 어머니가 다 가져갔다고 해도, 30억 원을 다 공제받을 수 있는 게 아닙니다.\n실제로는 18억 원(30억 원 × 1.5/2.5)까지를 한도로 적용해서 18억 원만 공제를 받을 수가 있습니다. 여기에 일괄공제 5억 원을 더해 총 23억 원을 공제받게 되는 것이지요.\n배우자 상속공제액은 5억 원 ~ 30억 원까지 공제 금액이 많고, 상속개시일 이후 협의 분할에 따라 공제 금액이 달라질 수 있어서 상속세 절세에 많이 활용됩니다.\n배우자 상속공제를 5억 원 초과해 받으려면 상속세 과세표준 신고 기한 다음날부터 9개월이 되는 날까지 배우자의 상속재산을 분할(부동산의 경우 등기까지 완료)하고, 납세지 관할 세무서장에게 신고해야 합니다. 해당 요건을 지키지 않으면 상속세 조사 시 공제가 일부 부인당할 수 있으므로 주의해야 합니다.\n참고로 현행 민법은 ‘직계비속(자녀나 손자 등) → 직계존속(부모·조부모 등) → 형제자매’ 등의 순서로 상속권을 부여하고 있습니다. 배우자는 사망한 사람의 직계비속이나 직계존속이 존재할 때는 공동상속인이 되며, 직계비속·존속이 없을 때는 단독 상속권을 갖습니다.\n상속세 절세를 위해\n종신보험도 활용할 수 있다?\n매달 떼가는 국민연금은 곧 고갈될지도 모른다는 말이 들리고, 기대수명은 자꾸 높아진다는데 돈 들어갈 일은 많아져만 갑니다. 이래저래 떼가는 세금은 또 왜 이렇게 많을까요. 확실한 수입이 있는 지금 미리 대비해 놓지 않으면 나중에 막막해질 것만 같습니다.\n많은 사람이 이럴 때 보험을 찾습니다. 다치거나 병에 걸리는 경우를 대비할 수도 있지만, 노후 개인연금이나 상속을 위한 용도로 활용할 수 있기 때문이죠.\n“나 죽은 뒤 목돈이 생기면 무슨 소용이냐\"는 인식도 있지만, 그럼에도 종신보험을 찾는 사람은 꾸준히 있습니다. 특히 최근엔 상속세 고민을 덜어주는 수단으로 종신보험이 주목받고 있습니다.\n과거만 해도 상속세는 ‘부자들이 내는 세금'으로 인식됐기 때문에 중산층은 크게 신경쓰지 않아도 됐는데, 최근 몇 년간 집값이 큰 폭으로 오르다 보니 예상치 못하게 상속세 걱정을 해야 하는 사람이 늘었습니다. 서울 아파트 평균 매매가가 10억 원을 넘길 정도로 집값이 치솟으면서 생긴 현상입니다.\n만약 배우자가 없는 사망자가 서울에 가지고 있던 15억 원짜리 아파트를 자녀가 상속받는 경우, 일괄공제 5억 원을 제외한 나머지 10억 원에 대해 상속세가 부과됩니다. 아파트 한 채만 상속받으려 해도 2억 원이 넘는 세금을 내야 하는 상황이 된 것입니다.\n이 때문에 시가 10억 원이 넘는 부동산 상속이 예상되면 종신보험을 보조 수단으로 사용하면 됩니다. 보통 자산의 70~80%가 부동산에 들어가 있어 한 번에 큰 돈을 마련하기 어려우니, 사망보험금으로 상속세를 대신하려는 것입니다.\n종신보험은 보험료가 높고 장기간 납입해야 해 점차 인기가 시들고 있는 보험상품이긴 하지만, 피보험자 사망 직후 한 번에 약정된 보험료를 받을 수 있다는 점에서 도움이 되는 건 사실입니다.\n가입할 때 주의해야 할 부분이 있습니다. 부모의 종신보험료를 직접 내다가 사망해 자녀가 사망보험금을 받을 때는 해당 보험금에 대해서도 상속세가 부과됩니다. 자녀가 직접 기여한 재산이 아니기 때문이죠.\n상속세를 피하기 위해서는 수입이 있는 자녀가 직접 오랜 기간 부모를 피보험자로 하는 종신보험에 가입해 보험료를 냈다는 사실이 증명돼야 합니다. 따라서 보험계약자도, 보험금 수익자도 자녀여야 한다는 말입니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 윤여진",
        "content": "상속세 내야 하는 대상은 늘어났지만, 막상 본인 혹은 직계 가족이 사망할 때 상속세가 얼마나 나오는지 제대로 알고 있는 사람은 드물어요.",
        "contentSnippet": "상속세 내야 하는 대상은 늘어났지만, 막상 본인 혹은 직계 가족이 사망할 때 상속세가 얼마나 나오는지 제대로 알고 있는 사람은 드물어요.",
        "guid": "https://blog.toss.im/article/inheritance-and-gift-tax-04",
        "isoDate": "2024-06-26T09:00:00.000Z"
      },
      {
        "title": "무조건 선택지가 많을수록 더 좋은 것일까?",
        "link": "https://blog.toss.im/article/everyday-economics-16-too-many-options",
        "pubDate": "Tue, 25 Jun 2024 11:24:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}💡 이 글에서 알 수 있는 것들\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}너무 많은 선택지가 주어질 때, 오히려 스트레스를 받는 이유\n넷플릭스, 유튜브 같은 스트리밍 서비스 홍수 속에서 오히려 볼 게 없다고 느끼는 이유\n수많은 선택지보다 엄선된 선택지 몇 개가 더 끌리는 이유\n\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-12p6bv8{white-space:pre-wrap;color:#15c47e;font-weight:bold;}교수 K (이하 K): 팬데믹이 한창일 때, 우리는 선택지가 줄어드는 경험을 했습니다. 전세계적으로 공급망 교란이 일어났기 때문이죠. 원하는 자동차 모델을 1년 넘게 기다려야 살 수 있었고, 그나마도 일부 옵션이 제외된 모델을 울며 겨자먹기로 구입해야 했습니다. '선택의 자유'가 줄어들면서, 사람들의 불편함도 증가하게 되었고요.\n.css-94on8q{white-space:pre-wrap;color:#c770e4;font-weight:bold;}에디터 G (이하 G): 맞아요. 팬데믹이 끝난 후 시간이 꽤 흘러서 지금은 좀 나아졌지만… 그 시기에는 어쩔 수 없이 선택해야 할 정도로 선택지가 적었던 것 같아요.\nK: 에디터 님도 선택지가 적은 환경보다 선택지가 많은 환경이 더 낫다고 생각하시듯, 우리는 보통 선택지가 많을수록 더 좋다고 생각합니다. 아무래도 더 많은 옵션이 있으면, 내게 딱 맞는 최적의 선택을 할 가능성이 높아지기 때문이죠.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}하지만, 선택의 다양성이 항상 좋은 것만은 아니예요. 너무 많은 선택지가 주어질 때 사람들은 오히려 더 큰 스트레스를 받고, 만족도가 낮아질 수 있거든요.\nG: 생각해보니 그런 것 같기도 해요. 점심 시간에 더 선호하게 되는 식당은 메뉴가 너무 다양한 곳보다 1~2개에 주력하는 곳이거든요.\nK: 맞아요. 정말 그런지 확인해보기 위해 컬럼비아 대학교의 쉬나 아이엔가(Sheena Iyengar) 교수와 스탠포드대학교의 마크 래퍼(Mark Lepper) 교수는 세 가지 실험을 실시합니다.\n.css-120saye{white-space:pre-wrap;font-style:italic;font-weight:bold;}1. 소비자들은 선택지가 적을 때 지갑을 열까, \n선택지가 많을 때 지갑을 열까?\n\n첫 번째 실험은 슈퍼마켓에서 6가지(제한된 선택지)의 잼을 시식할 수 있는 부스와 24가지(광범위한 선택지) 종류의 잼을 시식할 수 있는 부스를 운영하며, 소비자들의 행동을 비교하는 것입니다.\n관찰 결과, 24가지의 잼을 시식할 수 있는 부스에는 60%의 고객이 관심을 가진 반면, 6가지의 잼을 시식할 수 있는 부스에는 40%의 고객만이 관심을 보였습니다.\nG: 오호 그렇군요. 절반 넘는 사람들이 제한된 선택지보다 광범위한 선택지에 더 매력을 느꼈나 보네요.\nK: 그렇죠, 하지만 재미있게도 고객들의 최종 구매 결정에서는 반대의 결과가 나옵니다. 6가지 잼이 있는 부스에서는 시식한 고객들의 30%가 실제로 잼을 구매했지만, 24가지 잼이 있는 부스에서 시식한 고객들 중에서는 오직 3%만이 잼의 구매로 이어졌습니다.\nG: 헉! 그렇게나 차이가 많이 난다구요?\nK: 네, 재미있죠. 처음엔 다양한 종류의 잼이 사람들의 관심을 끄는 것에 성공했지만, 실제 제품 구입으로 이어지는 데에는 잼의 종류가 적은 것이 더 효과적이었던 거죠.\n2. 학생들은 선택지가 적을 때 더 높은 학업 성취도를 보일까, \n선택지가 많을 때 더 높은 학업 성취도를 보일까?\n\nK: 두 번째 실험은 같은 수업을 듣는 대학생들 대상으로 진행됐어요. 2장 분량의 에세이 과제를 제출하면, 추가 점수를 받을 수 있는 기회를 주는 것이었습니다.\n이 때 학생들을 두 그룹으로 나누게 되는데요. A 그룹은 6개의 주제(제한된 선택지) 가운데 하나를 에세이 주제로 정하고, B 그룹은 30개의 주제(광범위한 선택지) 중에서 하나를 골라야 했습니다. 결과는 어떻게 되었을까요?\nG: 음… 다양한 주제 중에서 고를 수 있었던 B 그룹 대학생들의 에세이가 더 좋았을 것 같아요. 주제가 다양한 만큼 생각의 폭도 넓어질 수 있으니까요.\nK: 좋은 추측이에요. 결과를 알려드릴게요. 먼저, 두 그룹의 과제 제출 비율을 비교해보죠. A 그룹(제한된 선택지)에 배정된 학생들 중 74%가 과제를 제출했던 반면, B 그룹(광범위한 선택지)에 배정된 학생들 중에서는 60%만이 과제를 제출했습니다.\nG: 오호, 첫 번째 실험과 비슷한 결과네요. 잼 실험에서도 제한된 선택지를 마주한 사람들의 결제율이 더 높았으니까요.\nK: 맞아요. 제출된 에세이의 퀄리티에서도 두 그룹 간 차이가 보였답니다. 에디터 님은 B 그룹(광범위한 선택지)에 배정된 학생들 에세이가 더 좋았을거라 예상하셨지만, A 그룹(제한된 선택지)에 배정된 학생들의 평균 점수가 B 그룹(광범위한 선택지)에 배정된 학생들의 평균 점수보다 더 높게 나왔답니다.\nG: 오, 제한된 선택지에 배정된 학생들의 과제 제출률도 높았고, 평균 점수도 더 높게 나오다니! 두 번째 실험에서는, 오히려 선택지가 제한된 상황에서 선택하는 것이 더 선호될 뿐 아니라 더 나은 성과도 만들어낸 다는 것을 보여준 거네요.\nK: 맞아요. 첫 번째 실험과는 살짝 다르게, 모든 면에서 제한된 선택지가 더 낫다는 결과가 나왔어요.\n3. 사람들은 선택지가 적을 때 더 만족감을 느낄까?\n선택지가 많을 때 더 만족감을 느낄까?\n\nK: 세 번째 실험에는 초콜릿이 등장합니다. 이번에도 참가자들을 두 그룹으로 나눴어요. A 그룹에서는 6개의 초콜릿(제한된 선택지) 가운데 한 가지를 골라 맛볼 수 있게 한 반면, B 그룹에서는 30개의 초콜릿(광범위한 선택지) 가운데 한 가지를 고를 수 있게 했습니다.\n세 번째 실험에서도 비슷한 결과가 나왔어요. 두 그룹의 초콜릿 맛에 대한 만족도를 비교해 본 결과, A 그룹(제한된 선택지)의 참가자들이 B 그룹(광범위한 선택지)의 참가자들보다 초콜릿 맛에 대해 더 만족한 것으로 나타났습니다.\n여기에 흥미로운 사실이 하나 더 발견되는데요. B 그룹의 참가자들은 30개 초콜릿 중 하나를 고르는 과정 자체는 즐겼지만, “30개 가운데 가장 맛있는 1개를 고르는 것”에 대한 부담감을 느꼈습니다. ‘더 맛있는 것을 골랐어야 했는데…’ 라며 자신이 내린 선택에 후회를 하거나, 잘못된 선택에 대해 불만족을 느끼는 모습도 나타났고요.\nG: 선택지가 많은 상황에서 고른 1개가 최선이 아닐까봐, 잘못된 선택일까봐, 오히려 불만족을 느끼는 거군요.\nK: 맞습니다. 이 세 번의 실험 결과는 ‘더 많은 선택지가 항상 유익하다’는 기존의 믿음을 뒤엎었습니다. 우리는 선택지가 별로 없는 상황에서는 별다른 대안이 없기 때문에, 오히려 최종 선택에 쉽게 만족할 수 있는거죠.\n반면 선택지가 많아지면 그 가운데 가장 완벽한 선택이 있을 것이라 믿고, 그것을 찾아내려 합니다. 만약 이때 성급하게 결정을 내린다면, 더 좋은 것이 있었을지도 모른다 후회하겠죠. 설령 좋은 대안들을 추려냈다고 하더라도, 그중 무엇이 가장 나은지 골라야 하고요. 그리고 시간이 지나면 ‘아, 그때 다른 것을 선택했어야 하는데' 하며 후회하게 되는 것이죠.\n이것을 ‘선택의 과부하(choice overload)’라고 하는데요. 너무 광범위한 선택지는 오히려 사람들의 결정을 힘들게 하고, 다양한 선택지 가운데 최선을 선택해야만 한다는 기대를 만들어냅니다. 결과적으로는 더 큰 후회를 초래하고 만족도를 낮추게 되는 것이죠.\nG: 저도 비슷한 경험이 있어요. 책 종류가 엄청 많은 대형 서점에서 고르고 고른 책보다, 책 종류는 적지만 책방 주인의 취향에 맞게 큐레이션 되어있는 동네 작은 책방에서 고른 책이 더 재미있을 때가 있었거든요.\nK: 그렇죠. 이 실험 연구는 경제적 관점에서도 흥미로운 시사점을 제공하는데요. 너무 많은 선택지는 소비자들의 구매 의욕을 떨어뜨릴 수 있다는 겁니다. 결정에 대한 피로가 따르기 때문이에요. 기업 입장에서는 너무 많은 선택지보다, 오히려 적절한 수의 선택지를 선보이는 것이 더 나을 수 있습니다. 결정해야 하는 피로도를 줄여주니 소비자의 만족도는 높아지고 더 나은 구매 경험을 제공할 수 있는 것이죠.\n예를 들어, 어떤 레스토랑의 메뉴판에 100개의 요리가 적혀 있다 가정해보죠. 아마 고객들은 어떤 음식을 주문해야 할지 혼란스러워 하고 최종 선택에 만족하지 못할 가능성이 높습니다. 이 레스토랑은 우선 음식 개수를 줄여야 하고요. 가장 인기 있는 10개 정도의 요리 중심으로 메뉴를 구성하거나, 계절별 특별 메뉴 혹은 오늘의 추천 메뉴를 제공하여 고객의 선택을 단순화할 수 있겠죠.\n우리에게 친숙한 스트리밍 서비스도 비슷합니다. 수천 개의 영화와 TV 프로그램을 제공하는 스트리밍 서비스를 구독하면서, ‘어떤 걸 봐야하나…’ 고르는 데만 상당한 시간을 쓴 경험 한 번쯤은 있을 것입니다.\nG: 저요! 메인 화면에서 이리 돌리고 저리 돌리면서 뭐 볼지 고민하다가 결국 꺼버리게 돼요.\nK: 너무 많은 콘텐츠는 무엇을 볼지 결정하는 데 어려움을 겪게 합니다. 그리고 힘들게 고른 콘텐츠가 기대했던 것보다 별로일 때 불만족을 느낄 가능성이 높고, 결국엔 에디터 님처럼 아무것도 보지 않게 될 수도 있고요.\n그래서 개인화된 추천 알고리즘이 사용되는 건데요. 고객이 선호할 만한 콘텐츠를 얼마나 잘 추천하는지, 인기 콘텐츠와 평가 좋은 콘텐츠를 얼마나 잘 강조해서 보여주는지에 따라 스트리밍 서비스를 이용하는 고객들의 만족도가 크게 달라질 수 있습니다.\nG: 혹시 ‘선택의 과부하’가 정부 정책과도 연결되는 부분이 있을까요?\nK: 물론입니다. 스웨덴은 2000년에 새로운 퇴직연금제도를 시행했는데요. 처음 시작할 땐 자유롭게 자신들이 원하는 펀드들로 연금 포트폴리오 구성을 선택할 수 있도록 했습니다. 제도 시행 초기에 가입자들이 선택할 수 있는 펀드의 개수는 무려 456개에 달했어요.\n물론 펀드를 직접 고르고 싶지 않은 사람들을 위한 기본 설정(default) 펀드도 있었지만, 스웨덴 정부는 적극적인 광고 캠페인을 통해 사람들이 기본설정 펀드보다는 주체적으로 자신만의 포트폴리오를 선택하도록 유도했습니다.\n그 결과, 전체 가입자의 3분의 2가 포트폴리오를 직접 선택하는 것으로 결정했고, 나머지 3분의 1은 기본 설정 펀드를 선택했어요. 자, 결과는 어땠을까요?\nG: 지금까지 살펴본 바로는… 포트폴리오를 직접 선택한 사람들의 성과가 더 안 좋을 것 같아요. 나중에 본인 선택을 후회하거나요.\nK: 맞아요. 포트폴리오를 직접 선택하기로 결정한 사람들은 수많은 펀드 중 ‘예상 수익은 비교적 낮은데 위험은 큰 펀드’를 선택하는 경향이 높은 것으로 나타났습니다. 이들이 직접 선택한 포트폴리오의 수익률은 기본설정 펀드에 비해 낮았고, 그 격차는 점점 벌어졌어요.\n이후 스웨덴 퇴직연금 가입자들이 선택할 수 있는 펀드의 개수는 900개 정도로 늘어났는데요. 이렇게 많은 펀드 중 뭐가 좋을지 직접 선택해야 한다고 상상만 해도 머리가 어지럽지 않으세요?\nG: 네… 지금 우리나라에 있는 연금 상품들도 언제 공부하고 선택하나 싶은데, 어질어질하네요.\nK: 이 사례도 많은 선택지가 반드시 바람직한 결과를 보장하지는 않다는 것을 말해줍니다.\n수백 개에 달하는 펀드 중 직접 선택하도록 하는 것보다는, 수수료가 상대적으로 낮고 위험이 적절하게 분산된 기본설정 펀드를 선택하는 쪽으로 ‘넛지(nudge)’하는 것이 차라리 나은 선택일 수 있었던 것이죠. 정부가 정책을 만들 때, 과도하게 많은 선택지가 주는 부정적 효과를 함께 고려해야만 하는 이유입니다.\n오늘은 선택지가 많은 상황과 적은 상황에 대한 실험 결과들과 실생활 사례들을 살펴봤어요. 선택지가 많다고 무조건 좋은 것은 아니고, 너무 많은 선택은 오히려 우리를 불행하게 만들 수 있다는 사실. 이해하셨지요?\n여러분은 일상 생활에서 선택지가 늘어나서 행복했던 경험이 많나요, 아니면 오히려 더 힘들었던 경험이 많나요? 쇼핑을 하거나 식당에서 메뉴를 고를 때, 오늘 소개해드린 연구를 한 번쯤 떠올려 보시면 좋을 것 같네요.\n\n.css-13d8cj1{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;margin:24px 0 8px;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:var(--adaptiveGrey700);}\n.css-1dzrkjz{width:16px;margin-right:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\n.svg-icon-wrapper{position:relative;display:inline-block;width:24px;height:24px;}.svg-icon-wrapper >.svg-icon:empty+.svg-icon-fallback{visibility:visible;z-index:inherit;}.svg-icon{color:var(--adaptiveGrey900);display:inline-block;width:24px;height:24px;display:block;width:100%;height:100%;}.svg-icon svg,.svg-icon img{display:block;width:100%;height:100%;}.svg-icon--hide{display:none;}.svg-icon-fallback{position:absolute;left:0;right:0;top:0;z-index:z-index(hidden);visibility:hidden;display:block;width:100%;height:100%;}.svg-icon-fallback--show{visibility:visible;z-index:inherit;}\n참고자료\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "사실 사람들은 너무 많은 선택지가 주어질 때 오히려 스트레스를 받는대요. 왜일까요?",
        "contentSnippet": "사실 사람들은 너무 많은 선택지가 주어질 때 오히려 스트레스를 받는대요. 왜일까요?",
        "guid": "https://blog.toss.im/article/everyday-economics-16-too-many-options",
        "isoDate": "2024-06-25T11:24:00.000Z"
      },
      {
        "title": "환전 없이 토스로 해외 결제 하는 법",
        "link": "https://blog.toss.im/article/tosspay-offline-pay",
        "pubDate": "Mon, 24 Jun 2024 06:15:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-oni540{position:relative;width:100%;height:0;padding-bottom:56.25%;}\n.css-122y91a{position:absolute;top:0;left:0;width:100%;height:100%;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}\n.css-1kxrhf3{white-space:pre-wrap;}일본 여행 가면 동전으로 계산하는 것도 어렵고, 환전한 돈 부족할까 봐 신경쓰였을 텐데요. 토스페이 해외결제 서비스를 이용하면 일본에서도 한국에서처럼 결제할 수 있어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n토스 해외 결제 사용 방법 \n1. 홈 화면 하단에 ‘토스페이’를 선택한 뒤 오른쪽 상단의 ‘현장결제’를 눌러주세요. \n.css-1pgssrp{max-width:100%;border-radius:16px;}.css-wgpbp3{display:block;margin-top:6px;}.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}토스 해외 결제 하는 법\n2. 해외 결제를 위한 동의를 진행하면 해외 결제 준비가 모두 끝나요. \n\n3. 결제하려는 나라를 눌러 선택하면 해외에서도 바로 결제할 수 있는 결제 바코드와 QR코드가 만들어지는데요. 편의점, 식당 등 알리페이+ 로고가 있는 모든 곳에서 바로 결제할 수 있어요.\n\n‘토스페이 해외결제’ 서비스를 이용하면 QR스캔으로 바로 결제할 수 있고, 원화로 결제되기 때문에 별도의 환전 절차도 필요 없어요.  현재 말레이시아, 일본, 싱가포르, 중국 등 총 42개 나라에서 토스페이로 결제할 수 있어요.",
        "content": "42개 나라의 알리페이+ 가맹점에서 사용할 수 있어요.",
        "contentSnippet": "42개 나라의 알리페이+ 가맹점에서 사용할 수 있어요.",
        "guid": "https://blog.toss.im/article/tosspay-offline-pay",
        "isoDate": "2024-06-24T06:15:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]