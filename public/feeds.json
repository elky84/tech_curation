[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Creating AI agent solutions for warehouse data access and security",
        "link": "https://engineering.fb.com/2025/08/13/data-infrastructure/agentic-solution-for-warehouse-data-access/",
        "pubDate": "Wed, 13 Aug 2025 22:05:07 +0000",
        "content:encodedSnippet": "In this post, we explore the ways we’re evolving Meta’s data warehouse to facilitate productivity and security to serve both human users and AI agents. \nWe detail how we’re developing agents that help users making data access requests to get to the data they need, and that help data owners process requests and maintain security. \nWe share how we’re using guardrails, including auditing and feedback systems, to ensure agents operate within set boundaries and to evaluate the overall process.\nAs part of its offline data systems, Meta operates a data warehouse that supports use cases across analytics, ML, and AI. Given the sheer volume of data, the scale of our systems, and the diverse use cases built on top, data warehouse security is very important. Teams across Meta both manage access and use that data in their day-to-day work. As the scale continues to grow and the data access patterns become more complex, the complexity of managing access and the time spent to obtain access keep increasing. How do we minimize security risks and enable teams to operate efficiently? With the rise of GenAI and agents, we needed to rethink how we can enhance security and productivity with agents, making them an integral part of our internal data products, capable of both streamlining data access and minimizing risk. In this post, we will share our work. \n\nBackground\nIn the past, we scaled data access and management by organizing the data warehouse into a hierarchical structure, as shown below in Figure 1. At the leaf of this hierarchy are tables, with pipelines producing them and dashboards consuming them. On-calls manage these assets, followed by teams and organizational hierarchies. Using role-based access control, we further modeled business needs as roles, aligning with this hierarchical structure and other dimensions, such as data semantics. \nHowever, with the growth in AI, timely access of data has become increasingly important. As the scale of data warehouses continues to grow and data access patterns become more complex, the complexity and amount of time spent on managing and obtaining access keep increasing. \nFigure 1: Data warehouse in resource hierarchy\nTo understand how we have handled this traditionally, and why that is becoming increasingly challenging, it helps to visualize the data flow through Meta’s offline infrastructure as a graph, as shown in Figure 2 below. Each node in this graph is an asset, such as a table, a column, or a dashboard, and each edge in this graph is an activity. \nTraditionally, when most of the data analytics was rules-driven, this graph was highly partitioned, and all data-access decisions were local. Engineers who wanted to use the data could discover the data by asking their teammates or looking at other people’s code. On the access-approval front, access could be granted to members of closely related teams. But with the ability of AI systems to process data across different portions of the data graph, such human-driven decisions are becoming challenging.\nFigure 2: Data warehouse as a data graph\nFigure 3 below illustrates that as humans and agents work more frequently across domains, the system complexity increases, both in terms of data scale and the dynamics of access, with AI being a major driver of these complex access patterns. However, we believe AI can also offer solutions to these challenges. With recent advancements in AI, particularly with agents, we’ve needed to evolve our previous approach to an agentic solution for data access. Additionally, while the system was originally designed for humans to operate and to serve both humans and services, we needed to adapt it for agents and humans working together. The new agentic workflow must natively integrate into data products and create a streamlined experience. We also must create strict guardrails, such as analytical rule-based risk assessment, to safeguard the agents.\nFigure 3: Challenges to scale and streamline data access\nUser and owner agents\nWe modeled the solution as a multi-agent system, as shown in Figure 4 below. Data-user agents assist data users in obtaining access, while data-owner agents help data owners manage access. These two agents also collaborate to streamline the process when both parties are involved. We intentionally separate the two agents to decompose the problem, allowing each to have its own focus.\nFigure 4: How to model the problem for agents to solve\nLook closer at the data-user agent illustrated below in Figure 5. It’s not a monolithic entity; instead, it’s composed of three specialized sub-agents, each focusing on a specific, separate task, and is coordinated by a triage agent.\nFigure 5: Data-user agent\nThe first sub-agent suggests alternatives. For instance, when users encounter restricted tables, alternative options are often available, including unrestricted or less-restrictive tables. The agent also assists users in rewriting queries to use only non-restricted columns or in utilizing curated analyses. These insights are often hidden or considered tribal knowledge. Large language models and agents allow us to synthesize this information and guide users at scale.\nThe second sub-agent facilitates low-risk data exploration. Typically, users often need access to only a small fraction of a table’s data, especially during the data-exploration phase of analysis workflows. This sub-agent provides context-aware, task-specific data access for low-risk exploration. We will dive deeper into this below.\nThe third sub-agent helps users obtain access by crafting permission requests and negotiating with data-owner agents. Currently, we maintain a human-in-the-loop for oversight, but over time, we expect these sub-agents will operate more autonomously.\nThe data-owner agent is also composed of several sub-agents, including one for handling security operations and another for assisting with access management, as shown below in Figure 6.\nFigure 6: Data-owner agent\nThe first data-owner sub-agent, focused on security operations, acts like a junior engineer who assists the team with security tasks. It follows the SOP (standard operating procedure) provided by the data owner, typically derived from documented rules or guidelines, to handle incoming permission requests.\nThe second sub-agent proactively configures access rules for the team. This represents an evolution from the traditional role-mining process, where agents enable us to better utilize semantics and content. \nData warehouse for agents\nAs we mentioned at the outset, we organized the data warehouse in a hierarchical structure to scale out access. How do we evolve it with the agentic system?\nLLMs communicate through text. The hierarchical structure of the data warehouse provides a convenient way to convert warehouse resources into text, much like a nested folder structure, as depicted in Figure 7 below. Here, organizing units are represented as folders, while leaf nodes such as tables, dashboards, policies, or other entities are represented as resources. This setup gives agents a read-only summarized view of the data warehouse. The SOP we discussed earlier, which documents data-access practices from rules, wikis, and past interactions, becomes a resource that can be represented in text format. It serves as input for both data-user agents to guide users and data-owner agents to manage access.\nFigure 7: Data warehouse as resources\nIn addition to organizing inputs for agents to use, another crucial aspect is context management. Here, we differentiate among three scenarios, as shown below in Figure 8. The first scenario is called “automatic context.” Imagine data users discovering data they want to access, only to find their access blocked by controls. The system is aware of who is trying to access what, allowing the agent to fetch the exact context. The second scenario is “static context.” This occurs when users choose to focus on a specific scope explicitly or expand the resource from an automatic context to a broader one. The last scenario is “dynamic context.” It allows agents to further filter resources by metadata, such as data semantics, or via similarity search.\nFigure 8: Context management\nAnother key area is intention management. In the context of data access, we often refer to this as  “business needs.” What drives a data user to access certain resources? As shown in Figure 9 below, we model user intention in two ways: explicit and implicit.\nFigure 9: Intention management\nIn explicit intention management, users explicitly communicate their intentions to the system. For example, when using certain data tools to access data, they can inform the system of their current task by assuming an associated role, which carries the context of the business needs. This approach captures standard intentions.\nThe second is implicit intention. Not every intention can be modeled by roles. That’s where dynamic intention comes in. The system infers intention from a data user’s activities over a short period. For example, if a data user is woken up at midnight to address a pipeline failure, any subsequent data access is likely related to resolving that issue.\nDeep dive: Partial data preview\nNow, let’s dive into how all these elements come together to enable a complete end-to-end use case, which we refer to as partial data preview.\nTo quickly recap: In our data-access agentic solution, we have data-user agents that assist data users in obtaining access, and data-owner agents that help data owners manage and operate data access. Typically, a data user’s workflow begins with data discovery, followed by data exploration, before diving into full-fledged data analysis. During the exploration phase, there’s usually interaction with a small amount of data exposure. So, how do we enable more task-specific, context-aware access at this stage of data access?\nTo make the system work seamlessly end to end, four key capabilities (illustrated below in Figure 10) are orchestrated by an agentic workflow: \nContext. We analyze data-user activities and other information to understand the business needs driving data access and align them with data controls. This enables us to provide task-specific, context-aware control. \nQuery-level access control at a granular level. We analyze the shape of queries, such as whether they involve aggregation or random sampling. \nData-access budget. Employees are given a data-access budget based on the amount of data they typically access, and this budget, which refreshes daily, is our first line of defense. \nRule-based risk management. We employ rule-based risk control. This defends against attacks against or malfunctions of the AI agent.\nFigure 10: Partial data preview overview\nFigure 11, below, illustrates how the system architecture works: The data-user agent taps into the user-activities tool to gather user activities across various platforms, including diffs, tasks, posts, SEVs, dashboards, and documents. It also uses the user-profile tool to fetch profile information. With this data, the data-user agent formulates the user’s intention based on their activities, profiles, and query shapes, and then calls upon the data-owner agent. The data-owner agent steps in to analyze the query, identifying the resources being accessed. It then fetches metadata related to these resources, such as table summaries, column descriptions, data semantics, and SOPs. The data-owner agent leverages an LLM model to generate the output decision and the reasoning behind it. The output guardrail ensures that the decision aligns with rule-based risk calculations. \nFigure 11: Partial data preview architecture\nAll decisions and logs are securely stored for future reference and analysis. While many of these building blocks might be familiar to some of you—after all, we’ve been working with query analyzers for decades—this is the first time we’re harnessing the language and reasoning capabilities of LLMs to build a multi-agent system for data users and data owners. LLMs have shown potential in this area because business needs are often context- and task-specific, making them difficult to model analytically. LLMs give us the ability to delve into these nuances, while the agents help us construct a dynamic, end-to-end workflow. At the same time, we employ guardrails, such as analytical rule-based risk computation, to ensure that the agents operate within set boundaries. Throughout the decision-making process, we also place a strong emphasis on transparency and tracing.\nBelow, Figure 12 shows the evaluation process. Evaluation is one of the most crucial steps in developing an agentic solution. To assess the system’s accuracy, recall, and other performance metrics, we curated an evaluation dataset using real requests. This involved compiling historical requests, collecting user activities and profile information, associating them with query runs, and then using this data for evaluation. We run the evaluation process daily to catch any potential regressions.\nFigure 12: Partial data preview evaluation\nWe’ve also developed a data flywheel for the process, as illustrated below in Figure 13. This means that data users’ queries, the agents’ processing traces, the context, and the final outputs are all securely stored for feedback and auditing purposes. Additionally, we’ve created a data tool for data owners, allowing them to view and review decisions and provide us with feedback. This feedback helps us update our evaluations and assess the overall process.\nFigure 13: Partial data preview feedback loop\nWhat’s ahead?\nThere’s still plenty of work ahead of us to become agent-ready. Here are just a few examples. \nFirst, agent collaboration. We’re seeing more and more scenarios where it’s not the users directly accessing data, but rather agents acting on their behalf. How can we support these use cases in the most efficient way?\nSecond, our data warehouse and tools were originally built for employees or services, not agents. How do we continue evolving them to be effectively used by other agents?\nLastly, evaluation and benchmarking are important, and we’ll need to keep developing these areas to ensure we stay on track.\nThe post Creating AI agent solutions for warehouse data access and security appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>In this post, we explore the ways we’re evolving Meta’s data warehouse to facilitate productivity and security to serve both human users and AI agents.  We detail how we’re developing agents that help users making data access requests to get to the data they need, and that help data owners process requests and maintain security.  [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/13/data-infrastructure/agentic-solution-for-warehouse-data-access/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/13/data-infrastructure/agentic-solution-for-warehouse-data-access/\">Creating AI agent solutions for warehouse data access and security</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "In this post, we explore the ways we’re evolving Meta’s data warehouse to facilitate productivity and security to serve both human users and AI agents.  We detail how we’re developing agents that help users making data access requests to get to the data they need, and that help data owners process requests and maintain security.  [...]\nRead More...\nThe post Creating AI agent solutions for warehouse data access and security appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22679",
        "categories": [
          "Data Infrastructure"
        ],
        "isoDate": "2025-08-13T22:05:07.000Z"
      },
      {
        "creator": "",
        "title": "Federation Platform and Privacy Waves: How Meta distributes compliance-related tasks at scale",
        "link": "https://engineering.fb.com/2025/08/11/security/federation-platform-privacy-waves-meta-distributes-compliance-tasks/",
        "pubDate": "Mon, 11 Aug 2025 16:00:21 +0000",
        "content:encodedSnippet": "We’re exploring Meta’s Federation Platform, a scalable set of tools for managing compliance-related tasks, along with Privacy Waves, our method for batching these tasks and ensuring accountability. \nTogether, the Federation Platform and Privacy Waves create a structured, effective, and sustainable approach to operationalizing privacy work, enabling Meta to safeguard user data for the billions of people that use our products.\nGiven its success in the privacy domain, we’re expanding this approach to other domains such as security and accessibility.\nAt Meta, we take a systematic approach to privacy-related compliance. Experts decode complex obligations into actionable product requirements, ensuring coverage and consistency across all Meta products. We then deploy technical solutions that address these requirements at scale through our Privacy Aware Infrastructure (PAI) initiative. Following that, our privacy teams centrally automate remediation of potential issues; and finally, if expert help is needed, they send tasks to product teams for distributed execution.\nOperationalizing this work at Meta’s scale – across tens of thousands of engineers and numerous products – requires robust coordination. To facilitate this, we developed the Federation Platform and Privacy Waves program:\nThe Federation Platform breaks down large compliance-related initiatives into smaller, manageable workstreams. It distributes tasks to the appropriate teams and enables them to track progress through to completion.\nThe Privacy Waves program organizes tasks for these initiatives into monthly batches, creating a predictable cadence that improves quality and accountability of task distribution and management. It helps teams plan and execute their compliance-related work systematically, rather than reactively. \nTogether, the Federation Platform and Privacy Waves program play a critical role in safeguarding user data and ensuring consistent, effective operations of our systems and solutions, supporting Meta’s compliance posture (for both existing and future obligations) while balancing internal engineering efficiency and experience. \nThey are significant levers in Meta’s compliance-related efforts, managing over 100,000 tasks annually within established timelines. Internal surveys reveal significantly higher positive sentiment for Privacy Waves tasks compared to ad-hoc tasks. And we estimate that the program has saved hundreds of thousands of engineering hours by enhancing strategy, tooling, and task quality. The success of this approach in the privacy domain has encouraged its expansion into other domains such as security, accessibility and our broader compliance efforts.\nThe need for a centralized work distribution and management system\nThere are several reasons why large organizations like Meta benefit from a centralized system to distribute and manage compliance-related work:\nMeeting privacy obligations at scale is complex because it often requires thousands of engineers to each complete small, specialized tasks across hundreds of global pressures and thematic areas.\nScalability and internal accountability are crucial. Doing this ad hoc can lead to task fatigue, difficulty meeting completion expectations, and diminished developer sentiment. Without centralized management and oversight, it becomes challenging to effectively prioritize, track, and execute work across organizational boundaries, or to deduplicate tasks across teams.\nDeveloper experience matters and can even increase output. A positive, well-managed task flow reduces operational burden, maintains morale, and sustains high productivity. \nExternal accountability is essential to operations. Meta must demonstrate consistent and effective operations to regulators and auditors. The Federation Platform enables clear, standardized practices along with consistent documentation and validation to uphold Meta’s compliance posture in response to external requirements.\nManaging privacy work with the Federation Platform\nWorkstream configuration: How engineers integrate with the platform\n\nImplementing a workstream on the Federation Platform requires defining in-code logic that mirrors the typical lifecycle of a potential privacy issue. This involves specifying how to detect, distribute, remediate, and verify resolution of these issues, ensuring their effective management. The resulting technical workstream configuration (code file) includes methods for:\nScraping flags: Scraping involves identifying the relevant set of privacy flags –  indications of potential issues that require attention. These flags are ingested into the Federation Platform based on the workstream’s configuration, which often leverages Meta’s reusable detection and verification frameworks. The scraping process can be automated to run daily using in-code methods or ad-hoc via the platform’s intake APIs. Scraping defines the scope of the workstream, with additional filters and linters configured as needed.\nOwnership resolution: This involves implementing logic to determine the ownership of privacy flags. Typically, this requires referencing Meta’s central catalog to map relevant assets, such as code files and data tables, to their respective owners.\nGrouping: Workstreams can optionally group related flags, such as those with a common owner or located in the same directory. This allows for efficient bulk remediation by bundling these flags into a single task or diff (code change).\nActioning (Task/Diff): Workstreams decide how to address each privacy flag or group of flags. The most common approach is to file a task, which is then assigned to the asset owner. Alternatively, they can choose to send automated code changes to directly resolve issues, which must be reviewed by the asset owner.\nTask content and distribution: Workstreams configure the content of tasks, providing context on why the task is necessary, its alignment with privacy initiatives, and instructions and workflows to fix the issue. Workstreams also configure how they want to distribute their tasks, which is most commonly done through the Privacy Waves program.\nResolution logic: Finally, workstreams define resolution logic to determine when a privacy flag is resolved. This allows the Federation Platform to automatically close tasks once the underlying issue is fixed or reopen tasks if they are prematurely closed.\nThe general-purpose configuration described above is versatile and extends well beyond privacy use cases. For instance, security and accessibility workstreams have started utilizing it to address potential vulnerabilities and product accessibility matters through task distribution. Similarly, engineering excellence initiatives operate workstreams to drive API migrations, code quality improvements, and the cleanup of obsolete experiments across numerous teams. This positions the Federation Platform as a powerful tool for driving diverse, large scale initiatives across the organization.\nIn addition to the technical configuration steps outlined above, privacy workstreams strive to adhere to the comprehensive end-to-end federation process detailed below, ensuring a holistic approach to managing privacy issues.\nAn overview of the end-to-end federation process\nStep 1: High-level strategy and planning\nBefore distributing work, a thorough review process evaluates the holistic strategy for a privacy area to ensure their plan efficiently meets applicable privacy-related obligations. This strategy often involves a combination of developing privacy aware infrastructure and controls through traditional project work, privacy teams centralizing bulk remediation via scripts and mass code changes, and – when automated solutions are not feasible – distributing work across the company via Federation Platform workstreams and Privacy Waves.\nProduct organizations (e.g., Facebook, Instagram, WhatsApp) receive advanced visibility into upcoming privacy work, allowing them to incorporate it into their roadmaps and commit to its delivery. While aligning work across organizational lines takes longer, it ultimately enables easier and more efficient completion of tasks.\nStep 2: Configuring efficient task experiences\nTasks for Federation Platform workstreams that participate in Privacy Waves must clearly communicate the nature of the work, due dates, link to relevant context and documentation, and contain the necessary steps for resolution. Structured tasks guide users through a wizard-like workflow with multiple-choice questions, often culminating in automated remediations (e.g., code changes, click-to-fix tools) based on user decisions. These ‘wizards’ facilitate appropriate decision-making by product engineers and, in some cases, have been shown to reduce the effort required to complete tasks by around 50%.\nTasks are enriched with links to support forums and similar tasks where assistance can be sought, if needed. AI-powered support agents are embedded within tasks which help task owners search through relevant resources and write code quickly, which requires human review before landing.\nStep 3: Reviewing and improving task quality\nA review committee provides feedback on task quality and content for workstreams participating in Privacy Waves, identifying areas for improvement and opportunities for automation. Automated health signals for each workstream, such as completion rates, open tasks, deferral rates, and developer friction (e.g., broken tooling, inadequate support), are measured and tracked. Workstreams and their reviewers monitor these metrics monthly and are held accountable for improvements.\nEngineering sentiment is captured for each workstream through task owner surveys, and AI is used to summarize their feedback, enabling workstream owners to learn from task owner input and enhance future tasks. These features contribute to improved work quality, developer sentiment, and completion rates.\nStep 4: Distributing the work\nLinting tools are employed to prevent the distribution of low-quality and low-risk work (e.g., for assets queued for deletion or lacking any data). Workstreams can configure the lints they wish to apply.\nTasks are sent in Privacy Waves, which are batches of privacy-related work distributed at a predefined, predictable cadence. Privacy Waves streamline execution, coordination, and reporting, since all tasks in a wave share the same deadline, allowing for timely reminders.\nA sophisticated matching algorithm aligns tasks with teams based on competing priorities related to assets they own. Combined with predictable task distribution, this approach ensures timely work assignment and enables teams to effectively prioritize, allowing them to balance responsibilities and make consistent progress towards addressing their workloads.\nStep 5: Ensuring accountability of execution\nTo ensure timely completion of tasks, deadlines are established with an aim at preventing deferral beyond these critical dates. Automated nudges and escalations are strategically used to remind individuals and teams to complete work on schedule, minimizing unnecessary noise and highlighting overdue tasks that require immediate attention.\nFurthermore, completion rates for privacy work are rigorously measured and reported at all organizational levels, fostering a culture of accountability from frontline teams to leadership. This transparent approach ensures that everyone is held responsible for executing their tasks in a timely manner, promoting a sense of ownership and urgency across the organization.\nStep 6: Reporting and recognition\nThe centralized distribution of tasks via Federation Platform and Privacy Waves streamline operational effectiveness and verification. These systems document completed tasks in a standardized format that aligns with expectations, providing clear and consistent evidence that supports Meta’s compliance posture in response to external requirements.\nAt Meta, executing on compliance-related work is an integral part of internal engineering expectations. To ensure that individuals receive the recognition they deserve, centralized recognition tooling is utilized to credit their contributions in performance evaluations. This approach not only motivates engineers to prioritize these efforts, but also reinforces the importance of this critical work in maintaining user trust and our compliance posture.\nExpansions for the Federation Platform and Waves\nAs Meta continues to evolve, the Federation Platform and Waves programs are actively being expanded into new domains like security, accessibility, and broader compliance-related efforts. This expansion presents unique challenges, including different types of tasks, complex multi-step remediation processes, varying deadlines, and more. However, our foundational principles of centralized task distribution, execution tracking, and accountability provide a robust framework to address these challenges effectively.\n\nTo ensure seamless extension into new areas, we’ll refine our tooling and processes, developing solutions that cater to each domain’s specific needs while maintaining high standards of quality and efficiency. By doing so, we aim to exceed expectations, reinforcing our commitment to safeguarding user data and ensuring efficient and consistent operations across all areas. This forward-looking approach underscores Meta’s dedication to innovation in compliance standardization, setting a benchmark for other tech companies to follow.\nAcknowledgments\nThe authors would like to express our gratitude to reviewers of this post, including (in last name alphabetical order): Chris Adams, Bob Baldwin, Denys Besedynskyy, Herb David, Dylan Drop, Katriel Cohn-Gordon, Xenia Habekoss, Mohit Jha, Ryan Pratt, Matt Pregozen, Jessica Retka, Thomas Richards, and Chris Wiltz, many of whom have made significant contributions to Federation Platform and Privacy Waves.\nAdditionally, we would also like to acknowledge the contributions of many current and former Meta employees, who have played a crucial role in developing and maturing Federation Platform and Privacy Waves over the years. In particular, we would like to extend special thanks to (in last name alphabetical order): Quinn Armstrong, Gunnar Arnesen, Cecilia Baek, Yashdeep Bindal, Chris Buckley, Adam Campbell, Katriel Cohn-Gordon, Ruo Ding, Jason Fennell, Andrew Fong, Riccardo Govoni, Abhishek Gulati, Tucker Hart, Aleksandar Ilic, AJ Jahansouz, Shruthi Katakam, Risa Kawai, Bruce Liu, Emile Litvak] Amira Malpass, Idan Michael, Jason Nawrocki, Anthony O’Sullivan, Yuval Oren, Disha Parekh, Uday Patireddy, Vimalkumar Patel, Riley Pinkerton, Matt Pregozen, Mateen Saifyan, Pallavi Saraswati, Jay Shah, Or Sperling, Sana Surani, Rajesh Vantipalli, Avi Varadarajulu, Michelle Xu, Robbin Xu, Rui Xue, Nikki Wasikowski, Sara Wei, Feiyue Wu, Anna Zeng, and Hansen Zhang.\nThe post Federation Platform and Privacy Waves: How Meta distributes compliance-related tasks at scale appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>We’re exploring Meta’s Federation Platform, a scalable set of tools for managing compliance-related tasks, along with Privacy Waves, our method for batching these tasks and ensuring accountability.  Together, the Federation Platform and Privacy Waves create a structured, effective, and sustainable approach to operationalizing privacy work, enabling Meta to safeguard user data for the billions of [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/11/security/federation-platform-privacy-waves-meta-distributes-compliance-tasks/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/11/security/federation-platform-privacy-waves-meta-distributes-compliance-tasks/\">Federation Platform and Privacy Waves: How Meta distributes compliance-related tasks at scale</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "We’re exploring Meta’s Federation Platform, a scalable set of tools for managing compliance-related tasks, along with Privacy Waves, our method for batching these tasks and ensuring accountability.  Together, the Federation Platform and Privacy Waves create a structured, effective, and sustainable approach to operationalizing privacy work, enabling Meta to safeguard user data for the billions of [...]\nRead More...\nThe post Federation Platform and Privacy Waves: How Meta distributes compliance-related tasks at scale appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22798",
        "categories": [
          "DevInfra",
          "ML Applications",
          "Security & Privacy"
        ],
        "isoDate": "2025-08-11T16:00:21.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Kerry Beetge",
        "title": "New Quarter, New Qodana 2025.2 Release Highlights ",
        "link": "https://blog.jetbrains.com/qodana/2025/08/qodana-2025-2-release/",
        "pubDate": "Thu, 14 Aug 2025 13:32:29 +0000",
        "content:encodedSnippet": "Following the recent rollout of our new Insights dashboard, Native mode, Self-Hosted Lite version, SSO functionality, and Visual Studio plugin, our Qodana 2025.2 update promises another round of improvements and extensions. Take a look at what we’ve been doing as we focus on providing greater access to code quality and security in your organization, and let us know what you’d like to see on the roadmap. \nNative mode is now available for Go and Python linters\n\n\n\n\nWe’ve expanded Native mode to three more linters:\nqodana-go\nqodana-python\nqodana-python-community\nTo learn more about the difference between Native mode and Dockerized execution, how the choice can be important for setting up the right environment, and how Native mode simplifies the use of Qodana throughout the development lifecycle, take a look at this blog post. It details how you don’t need to use Docker images anymore.\nNow qodana-cli supports scans like:\n```\nqodana scan --linter qodana-go --within-docker false \n```\nCheck out the documentation for details on how to specify a virtual environment for analysis, with qodana-python, for example.\nDeployment Documentation\nSecurity analysis has a new look with a redesigned Taint Trace Explorer\nVersion 2025.2 brings enhancements to the Taint Trace Explorer interface in the Security Analysis by Qodana plugin for IntelliJ IDEA. The updates are designed to improve trace readability, make navigation more efficient, and provide more information about traces.\n\n\n\n\nWe’ve redesigned the interface to offer you a more structured and informative layout. The updated UI simplifies the navigation of complex, multi-step traces, and a clearer visual hierarchy makes it easier to understand the results of the analysis.\nThe interface now provides descriptions for trace steps \nEach step in a taint trace now includes a contextual description explaining its role in the data propagation chain. The description clarifies the semantics of each transition, like variable assignments, method calls, and the propagation of tainted data through parameters. This simplifies understanding how tainted data moves through the application.\nAdditionally, taint traces now feature summary-level descriptions that provide quick overviews of the flow from source to sink. These summaries help show the significance of each trace at a glance, making it easier to assess the impact of a vulnerability and prioritize which issues to fix during large-scale reviews.\nView highlighted steps in the main editor\nEach step of a taint trace is now directly highlighted in the code editor. As you navigate through the trace, the corresponding step in the source code is highlighted. This allows you to easily context switch between trace and code, improving your understanding of the code as you go.\nWhat does this mean for you and your team? \n✓ Faster trace analysis through improved UI clarity and contextual insight.\n✓ Better trace triaging, with high-level context available up front.\n✓ Greater scalability for analyzing applications with complex or overlapping data flows.\n✓ Enhanced usability for both application security specialists and developers.\nRun Taint Analysis\nTaint analysis is faster and more accurate\nTaint analysis has become much faster thanks to the ability to pre-filter.\nA lightweight interprocedural finite distributive subset analysis (IFDS) now runs as a preprocessing step. It checks whether there are any potential paths from sources to sinks within the current scope.\nIf no paths exist through certain functions, those functions are eliminated from further analysis.\nThe IFDS algorithm operates in linear time and is field-sensitive, call-sensitive, and flow-sensitive thanks to SSA transformation.\nAnalysis is also more precise\nAfter filtering, the original, more precise taint analysis runs on the reduced scope, focusing only on potentially relevant paths.\nThis allows Qodana to analyze codebases of 7 million lines of code in just under half an hour.\nIFDS also makes the reported paths linear and unambiguous.\nWe’ve also increased accuracy by fixing a number of false positives and false negatives. And on top of all that, none of these improvements compromise analysis speed. \nView Documentation\nOWASP Top 10 coverage for Java and Kotlin has been enhanced\nQodana 2025.2 Owasp updates\n\n\n\nNot long ago, we announced that Qodana would increase its number of OWASP Top 10 checks. This release brings key improvements to Java and Kotlin support, with stronger detection across critical OWASP Top 10 categories. These updates help you dive deeper into your code, catch more issues, and work more reliably with large codebases.\nExpanded taint modeling for Java collections: We’ve added support for all standard Java collections, so taint information now flows more accurately through the data structures you use every day.\nCoverage for Kotlin collection APIs: With support for Kotlin’s standard collection APIs, you and your team can now surface more issues related to data flow and security in your Kotlin code.\nKotlin string taint propagation: We’ve added tracking for Kotlin string APIs to help you catch injection risks and data exposure problems in string operations.\nKotlin engine stability improvements: We fixed several behind-the-scenes issues to make Kotlin analysis more stable and consistent, especially in bigger projects.\nImproved field-sensitive data flow in Java: Taint tracking now follows data through class fields more effectively, giving you better visibility into complex object graphs and helping reduce missed issues.\nView Documentation\nCMake preset support in qodana-cpp\nQodana for C++ (EAP) now supports CMake presets, giving you greater control over compilers and environments. You can use the new cpp section in qodana.yaml to specify a CMake preset for your project:\nversion: \"1.0\"\ncpp:\n  cmakePreset: my-qodana-preset\nWhat is a CMake preset?\nIntroduced in version 3.19,  CMake presets allow for a structured way of versioning, modifying, and sharing various configuration options you would usually specify on the command line. They are defined in a CMakePresets.json file inside your project, which should be committed to VCS. In the context of Qodana, when we talk about “presets”, we are referring to “configuration presets” – those specified in the eponymous field inside the JSON file.\n\n\n\n\nEach preset allows you to specify options you would usually write in the command line when configuring CMake: target build directory, cache variables, preferred generator, compilers, etc. You can check out the CMake documentation for more information.\nHow do you use a CMake preset to customize analysis?\nFirst, you need to make some decisions about the environment you want to run your analysis in, for instance:\nDo you want the analysis to run when your project is configured for debugging or release?\nDo you care which compiler is used (GNU Compiler Collection, Clang, cross-compiler, etc.)?\nDo you want to set any CMake -D… variables?\nNow, create a CMakePresets.json file in the root of your project and specify this environment. Below is an example with comments added for clarity. Note that comments are not allowed in actual JSON files.\n{\n  \"version\": 3,\n  \"configurePresets\": [\n    {\n      \"name\": \"my-qodana-preset\",\n      // Specify generator.\n      \"generator\": \"Ninja\",\n      \"binaryDir\": \"build\",\n      \"cacheVariables\": {\n        // Specify build type.\n        \"CMAKE_BUILD_TYPE\": \"Release\",\n        // Use a specific C and C++ compiler.\n        // Check out the `bootstrap` secion in qodana.yaml to install your own compiler!\n        \"CMAKE_C_COMPILER\": \"clang-16\",\n        \"CMAKE_CXX_COMPILER\": \"clang++-16\",\n        // Set project-specific variables.\n        // Equivalent to `cmake ... -DUSE_OPENGL=1`\n        \"USE_OPENGL\": true,\n        \"BUILD_EXTENSION\": false\n      }\n    }\n  ]\n}\n\n\n\n\nWhat is the difference between a CMake preset and a CLion profile?\nCLion profiles perform a similar function to CMake presets, but are specific to the CLion IDE. \nWhen working in CLion, the IDE scans your CMake presets and creates an equivalent profile with the same name. Keep in mind that a CLion profile with the same name as a preset will override it. Using CLion profiles for analysis is not explicitly supported.\nWhat if I don’t use a preset? What happens to my current configuration?\nIf the cmakePreset field is missing from qodana.yaml, Qodana will try its best to analyze the project with the default settings. However, for best results, it’s recommended to use a preset.\nView Documentation\nCLI parameter updates for smoother setup\nIn this release, we reorganized the parameters available for configuring linter behavior. We’ve introduced two new parameters (--image and --within-docker), changed the available values for the --linter parameter, and deprecated the –ide parameter.\nWe’ve also simplified the --linter parameter. So, instead of writing:\nqodana scan --linter jetbrains/qodana-jvm:2025.2\nyou should use: \nqodana scan --image qodana-jvm\nIf the linter should be executed in Native mode, the only difference is that you need to add `--within-docker false` . So instead specifying it the old way:\nqodana scan --ide QDJVM\nuse this instead:\n\n\n\n\nqodana scan --linter qodana-jvm --within-docker false\nHere’s another example, this time of a case where the linter should be executed with a specific Qodana Docker image. In this case, you no longer need to use:\n\n\n\n\nqodana scan --linter %some-repo%/qodana-jvm:2025.2\nYou should instead use the –image parameter, like so:\nqodana scan --image %some-repo%/qodana-jvm:2025.2\nFor more detailed information, read the documentation or take a look at the qodana-cli repo on GitHub.\nParameter Documentation\nWhat to do next\nThose are the key updates for this release. If you’re using the latest release tag, you don’t need to do anything to enjoy the benefits of our new Qodana 2025.2 release. Otherwise, please switch from 2025.1 to 2025.2 to update. Users of GitHub Actions, Azure DevOps, and Circle CI can find the latest version of the extension here.\nFor more information, including detailed setup instructions for each feature, please refer to our official documentation. Click on the button below to speak to our team, and join our community on X for updates between releases.\nSwitch To Qodana",
        "dc:creator": "Kerry Beetge",
        "content": "Following the recent rollout of our new Insights dashboard, Native mode, Self-Hosted Lite version, SSO functionality, and Visual Studio plugin, our Qodana 2025.2 update promises another round of improvements and extensions. Take a look at what we’ve been doing as we focus on providing greater access to code quality and security in your organization, and [&#8230;]",
        "contentSnippet": "Following the recent rollout of our new Insights dashboard, Native mode, Self-Hosted Lite version, SSO functionality, and Visual Studio plugin, our Qodana 2025.2 update promises another round of improvements and extensions. Take a look at what we’ve been doing as we focus on providing greater access to code quality and security in your organization, and […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=589373",
        "categories": [
          "features",
          "releases",
          "go",
          "kotlin",
          "owasp",
          "python",
          "qodana",
          "security-reviews"
        ],
        "isoDate": "2025-08-14T13:32:29.000Z"
      },
      {
        "creator": "Dmitrii Korovin",
        "title": "TeamCity 2025.07.1 Is Here",
        "link": "https://blog.jetbrains.com/teamcity/2025/08/teamcity-2025-07-1-bug-fix/",
        "pubDate": "Thu, 14 Aug 2025 12:08:03 +0000",
        "content:encodedSnippet": "TeamCity On-Premises 2025.07.1, the first bug-fix for the recently released TeamCity 2025.07, is ready to be installed on your On-Premises servers. This update addresses a significant number of issues, including:\nCommit status publisher throws exceptions if its authentication settings are specified using parameters instead of raw values;\nIf multiple authentication modules are used, a user profile can display an incorrect OAuth account connected;\nTeamCity servers behind an IIS proxy may fail to show builds on the Project Overview page;\nMultiple Pipelines-related issues.\nBug-fix updates also include performance and security improvements, so we recommend installing them promptly. See TeamCity 2025.07.1 Release Notes for the complete list of resolved issues.\nWhy update?\nStaying up to date with minor releases ensures your TeamCity instance benefits from the following:\nPerformance improvements.\nBetter compatibility with integrations.\nFaster, more stable builds.\nEnhanced security for your workflows.\nCompatibility\nTeamCity 2025.07.1 shares the same data format as all 2025.07.x releases. You can upgrade or downgrade within this series without the need for backup and restoration.\nHow to upgrade\nUse the automatic update feature in your current TeamCity version.\nDownload the latest version directly from the JetBrains website.\nPull the updated TeamCity Docker image.\nNeed help?\nThank you for reporting issues and providing feedback! If you have questions or run into any problems, please let us know via the TeamCity Forum or Issue Tracker.\nHappy building!",
        "dc:creator": "Dmitrii Korovin",
        "content": "TeamCity On-Premises 2025.07.1, the first bug-fix for the recently released TeamCity 2025.07, is ready to be installed on your On-Premises servers. This update addresses a significant number of issues, including: Bug-fix updates also include performance and security improvements, so we recommend installing them promptly. See TeamCity 2025.07.1 Release Notes for the complete list of resolved [&#8230;]",
        "contentSnippet": "TeamCity On-Premises 2025.07.1, the first bug-fix for the recently released TeamCity 2025.07, is ready to be installed on your On-Premises servers. This update addresses a significant number of issues, including: Bug-fix updates also include performance and security improvements, so we recommend installing them promptly. See TeamCity 2025.07.1 Release Notes for the complete list of resolved […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=591855",
        "categories": [
          "bug-fix"
        ],
        "isoDate": "2025-08-14T12:08:03.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "Next-Level Performance Improvements in ReSharper 2025.2",
        "link": "https://blog.jetbrains.com/dotnet/2025/08/14/resharper-performance-improvements-2025/",
        "pubDate": "Thu, 14 Aug 2025 10:40:09 +0000",
        "content:encodedSnippet": "The 2025.2 release of ReSharper introduces a number of performance and responsiveness improvements across several key areas. This post outlines the most notable updates, including out-of-process support, improved solution startup, faster refactorings, and better Razor/Blazor handling.\nDownload ReSharper\n                                                    \nOut-of-Process mode Public Preview\nReSharper 2025.2 is the first stable release to support running ReSharper out of process (OOP) with Microsoft Visual Studio. This architectural change separates ReSharper from the Visual Studio process, improving performance and laying the groundwork for future stability improvements. You can learn all about the measurable typing latency improvements Out-of-Process mode brings from this blog post.\n\n\n\n\nTo enable Out-of-Process mode, go to ReSharper | Options | Environment | Products & Features, select Run ReSharper in separate process, then click Save and restart to reinitialize without restarting the IDE.\nShould you have any questions about this new mode, you can request assistance here.\nPerformance and quality updates for Razor/Blazor\nIn this release, Razor/Blazor support has been further optimized. Updates include reduced memory traffic and unnecessary processing for include files such as _ViewImports and _ViewStart, and improved performance for Find Usages on Razor component types.\nSeveral correctness issues have also been resolved, including false warnings in .razor and .cshtml files that previously disappeared only after editing.\nAdditionally, 2025.2 introduces import completion for Razor and Blazor components. ReSharper now automatically adds the necessary @using directives when referencing components.\nReSharper’s Razor and Blazor support has received further performance improvements in this release. If you work with large projects containing many .razor and .cshtml files, you’ll notice faster responsiveness throughout your development workflow.\nFaster, more transparent Rename refactoring\nIn this release, we’ve focused on improving the performance of one of ReSharper’s most widely used refactorings – Rename. While it may seem simple on the surface, renaming a symbol can be quite complex behind the scenes, and the time it takes often depends on the type of code element you’re renaming. We’ve greatly improved ReSharper’s progress reporting to provide clearer feedback during longer operations, keeping you informed throughout the process.\nThis improved visibility helped us identify some performance bottlenecks, leading to optimizations in conflict detection, reduced unnecessary processing, eliminated duplicate operations, and lowered memory consumption – all while fixing some correctness issues along the way.\nThe biggest performance gain comes from parallelizing the Verifying suspicious references phase. Since this step typically only validates safety without modifying code, we can now run it across multiple threads while keeping code modifications safely on a single thread, as required by the IDE’s architecture.\nNon-blocking inplace refactorings\nInplace refactorings such as Rename or Change Signature have been made asynchronous. Previously, when you started renaming something, ReSharper would have to pause to analyze your entire codebase before letting you continue typing. Now, ReSharper lets you type immediately and does all the heavy analysis work in the background after you’re done editing. This means no more typing delays during refactoring operations, particularly when working with large solutions. \nFaster solution loading and initial indexing\nWe’ve made indexing faster by updating how ReSharper reads files from your disk. In the past, ReSharper was designed to read files one at a time in sequence – this worked well for older hard drives (HDDs) that performed better with this approach. However, modern solid-state drives (SSDs) SSDs are free from physical limitations of the HDDs and enable parallel I/O operations with high throughput. We’ve removed the old restrictions on ReSharper, so it can now take full advantage of your SSD’s capabilities, reading multiple files at once for faster startup.\nBy streamlining how ReSharper coordinates its background work and removing outdated performance bottlenecks, indexing now runs more efficiently on modern computers. \nWe’ve also reduced the number of UI freezes during startup. While not eliminated entirely, these interruptions now occur less frequently and are shorter in duration. Additionally, several internal components that previously delayed background daemon activity have been reworked, resulting in faster initialization in many cases. The impact will vary depending on the solution, but the overall experience should feel smoother and more responsive.\nThis faster startup is then further enhanced by the introduction of the Early Go-to mode.\nInstant solution navigation with Early Go-to\nWe know that waiting for ReSharper to fully load your solution before you can start working can be frustrating, especially on large codebases. With this release, we’re introducing Early Go-to – a new startup mode that gets you productive immediately, even before your solution is fully indexed.\nWhat is Early Go-to?\nWhen you open a solution and press Ctrl+T (Search Everywhere/Go-to…), ReSharper now provides instant access to files before the full project model and symbols are loaded. This means you can search for and open files right away, without waiting for solution indexing to complete.\nThink of it as a sped-up Go To File experience that kicks in early, so you’re not stuck waiting during cold starts or when working with large solutions.\nHow it works\nThe feature activates automatically when you press Ctrl+T during solution startup. In this early mode, you can quickly find and open files by name and get straight to work. \nOnce ReSharper finishes loading symbols in the background, you’ll see an Update results button that switches you to the full Go-to-Everywhere experience with type, symbol, and text search capabilities.\nAfter ReSharper is fully loaded, subsequent searches in the same session will use the complete Go-to-Everywhere functionality, as early mode is specifically designed for that initial startup period where you need to get to work quickly.\nPerformance impact\nOn large solutions, this improvement can reduce your effective startup time by up to a full minute. Instead of waiting for complete indexing, you can immediately navigate to the files you need and begin coding while ReSharper continues its background processing.\nCurrent limitations\nEarly mode focuses exclusively on file navigation – it doesn’t support symbol or text search yet. However, once you click Update results after full loading is complete, you’ll have access to all the search capabilities you’re used to in Go-to-Everywhere.\nThese improvements aim to make ReSharper more responsive and efficient, especially when working with large solutions or refactor-heavy workflows. \nWe encourage you to give ReSharper 2025.2 a try and see if you notice a difference in day-to-day performance. If you do, we’d love to hear your impressions—feel free to share your experience and let us know how the latest update is working for you. \nDownload ReSharper",
        "dc:creator": "Sasha Ivanova",
        "content": "The 2025.2 release of ReSharper introduces a number of performance and responsiveness improvements across several key areas. This post outlines the most notable updates, including out-of-process support, improved solution startup, faster refactorings, and better Razor/Blazor handling. Out-of-Process mode Public Preview ReSharper 2025.2 is the first stable release to support running ReSharper out of process (OOP) [&#8230;]",
        "contentSnippet": "The 2025.2 release of ReSharper introduces a number of performance and responsiveness improvements across several key areas. This post outlines the most notable updates, including out-of-process support, improved solution startup, faster refactorings, and better Razor/Blazor handling. Out-of-Process mode Public Preview ReSharper 2025.2 is the first stable release to support running ReSharper out of process (OOP) […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=588533",
        "categories": [
          "news",
          "resharper",
          "oop",
          "out-of-process-2",
          "visual-studio"
        ],
        "isoDate": "2025-08-14T10:40:09.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "ReSharper and the .NET Tools 2025.2 Are Out!",
        "link": "https://blog.jetbrains.com/dotnet/2025/08/14/resharper-and-the-net-tools-2025-2-are-out/",
        "pubDate": "Thu, 14 Aug 2025 10:40:06 +0000",
        "content:encodedSnippet": "ReSharper and the .NET tools 2025.2 are available for download. This release introduces the public preview of ReSharper’s Out-of-Process mode, adds support for the latest C# 14 and C++26 features, and brings a range of improvements for performance, refactorings, and inspections.\nIf you’d like to try out what’s coming in the next stable release, you can download the RC build here:\nDownload ReSharper 2025.2\n                                                    \nOut-of-process mode Public Preview\nThe long-awaited Out-of-Process (OOP) mode is here. ReSharper can now run in a separate process from Visual Studio, improving stability and paving the way for more performance gains in future releases.\nSwitching to OOP mode is simple:\nGo to ReSharper’s Options | Environment | Products & Features.\nEnable the Run ReSharper in separate process option.\nClick the Save and restart button to apply the changes and reinitialize ReSharper without having to restart the IDE.\n\n\n\n\nYou can learn all about the measurable typing latency improvements Out-of-Process mode brings from this blog post.\nPerformance improvements you’ll notice\nWe’ve tuned ReSharper to work more efficiently across the board:\nInstant navigation at startup — Ctrl+T is available right away.\nFaster Rename refactoring with parallelized validation and lower memory use.\nSmoother inline refactorings that won’t slow down typing.\nQuicker solution loading on SSDs thanks to removal of outdated HDD-era logic.\nOptimized Razor/Blazor processing with less memory overhead and faster Find Usages.\n\n\n\n\n\nWe’ve put together a separate blog post for you to explore all of these performance gains in-depth. \nC# support\nReSharper 2025.2 adds initial support for the latest C# 14 features:\nExtension members (initial support).\nPartial events and constructors.\nNull-conditional assignments (e.g. a?.b = c).\nUser-defined compound assignment operators.\nNew preprocessor directives: #! and #:.\n\n\n\n\nLogging improvements\nReSharper now helps you write more efficient and maintainable logging code with ILogger:\nA new refactoring lets you convert standard logger calls into [LoggerMessage]-based methods.\nWhen using ILogger<T>, ReSharper suggests the current type automatically.\nCompletion is now available for parameters in [LoggerMessage] attributes.\nReSharper detects and highlights missing parameters or duplicates in logging declarations.\n\n                        \n\n\nCoding productivity\nSeveral new context actions and inspections are available in this release:\nInplace refactorings now appear via inlay hints.\nA new context action lets you convert a method to a local function.\nA new inspection detects duplicated switch arms and offers a fix to merge them.\nSupport has been added for [ConstantExpected], with warnings when non-constant values are used.\n\n                        \n\n\nC++ support\nReSharper C++ 2025.2 introduces the following updates for modern C++ development:\nInitial support for C++26 language features.\nCode insight and completion in code containing multiple #if directives.\nA new syntax style for keeping definitions sorted by declaration order.\nHighlighting for global constants, OpenMP variable support, and more.\n\n\n\n\nContinuous integration\nAs of this release, the TeamCity extension for Visual Studio is being discontinued. This change is intended to reduce long-term maintenance overheads and focus development on the most impactful tooling.\nCQRS validation Experimental\nReSharper 2025.2 introduces experimental support for validating compliance with the Command Query Responsibility Segregation (CQRS) architectural pattern. CQRS validation helps detect structural inconsistencies between commands and queries using a combination of naming conventions and explicit annotations. ReSharper can now identify and offer quick-fixes for the following issues:\nNaming mismatches – when a symbol’s name doesn’t align with its inferred context.\nContext intersections – when a method in one context calls a method from the opposite context.\nName vs. attribute conflicts – when the naming pattern and annotations suggest different contexts.\nCQRS validation is disabled by default and can be enabled in Options | Code Inspection | CQRS Validation. The required annotations are available in JetBrains.Annotations.\nWhat’s new in dotTrace and dotMemory 2025.2\nFor the 2025.2 release our efforts surrounding the .NET profiling tools have been focused on improving and elevating their integration into JetBrains Rider. The Monitoring tool inside Rider has been reimagined to provide a more seamless and informative experience when analyzing application performance during development.\n\n\n\n\nThe Monitoring tool window now offers interactive charts for CPU, memory, and Garbage Collection (GC) activity, and automatically highlights performance bottlenecks, UI freezes, and GC pressure issues. On Windows, you can analyze any time interval in dotTrace for detailed call stack and timing data, or capture a memory snapshot for inspection in dotMemory.\nThese improvements are part of a broader initiative to centralize performance diagnostics and reduce the need for external dashboards or separate profiling sessions during development.\nWhat’s new in dotCover 2025.2\nThis release introduces performance optimizations and removes support for some technologies with low usage. The following are no longer supported:\nMono and Unity projects.\nIIS Express, WCF, WinRT, external .NET processes, and MAUI.\n\n\n\n\nThe command-line runner has been updated and modernized:\ndotcover cover now handles all target types.\nXML configuration files have been replaced by text files with CLI arguments.\nThe .exe runner has been removed from the NuGet package.\ndotCover is now available as a .NET tool.\nShare your feedback\nYou can download the latest release from our website or install it via the JetBrains Toolbox App.\nDownload ReSharper 2025.2\n                                                    \nWe can’t wait to hear your feedback on the newest features and performance improvements! Tell us what you think in the comments below or by reaching out to us on X or Bluesky.",
        "dc:creator": "Sasha Ivanova",
        "content": "ReSharper and the .NET tools 2025.2 are available for download. This release introduces the public preview of ReSharper’s Out-of-Process mode, adds support for the latest C# 14 and C++26 features, and brings a range of improvements for performance, refactorings, and inspections. If you’d like to try out what’s coming in the next stable release, you [&#8230;]",
        "contentSnippet": "ReSharper and the .NET tools 2025.2 are available for download. This release introduces the public preview of ReSharper’s Out-of-Process mode, adds support for the latest C# 14 and C++26 features, and brings a range of improvements for performance, refactorings, and inspections. If you’d like to try out what’s coming in the next stable release, you […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=588974",
        "categories": [
          "net-tools",
          "releases",
          "c",
          "cpp",
          "logging",
          "out-of-process-2",
          "performance",
          "release"
        ],
        "isoDate": "2025-08-14T10:40:06.000Z"
      },
      {
        "creator": "Alexander Kurakin",
        "title": "Rider 2025.2 Is Here with Junie, In-IDE OpenTelemetry, Game Dev Upgrades, and More",
        "link": "https://blog.jetbrains.com/dotnet/2025/08/14/rider-2025-2-is-here-with-junie-in-ide-opentelemetry-game-dev-upgrades-and-more/",
        "pubDate": "Thu, 14 Aug 2025 10:39:57 +0000",
        "content:encodedSnippet": "Rider 2025.2 delivers a big step forward in intelligent development tooling, bringing AI deeper into your workflow with Junie – our AI coding agent – along with runtime observability through the new OpenTelemetry plugin, a reworked Monitoring tool window, and improved debugging across platforms. \nLet’s take a closer look at what’s new.\nDownload Rider 2025.2\n                                                    \nMeet Junie, your AI coding agent Beta\nRider now features Junie, a powerful AI agent designed to take on complex development tasks. You can use Ask mode for high-level brainstorming or Code mode for hands-on implementation. Junie can write and refactor code, generate files, and run tests – all while keeping you in control.\n\n\n\n\nThe latest version of Junie available in Rider 2025.2  is up to 30% faster than its previous iteration, supports remote development, and brings deeper context awareness through the Model Context Protocol (MCP).\nYou can also connect Junie to GitHub (Early Access) to manage pull requests without opening your IDE. When working asynchronously, Junie takes more time to reason through changes, providing thoughtful, context-aware responses.\nLearn all about the latest improvements to Junie you can now enjoy in Rider here. \nMCP server connectivity\nJetBrains IDEs now support one-click setup for the MCP server, allowing Rider to connect seamlessly to external AI clients. Once connected, you can use your preferred client to trigger unit tests, refactorings, or code generation — with Rider as the execution layer.\n\n\n\n\nLearn more from our documentation.\nA new look at performance: reworked Monitoring and OpenTelemetry\nThe Monitoring tool window has been entirely reimagined to make performance optimization for .NET applications simpler and more insightful. You’ll find new interactive charts, automatic performance issue detection on Windows, and seamless integration with Rider’s bundled profilers, dotTrace and dotMemory. With just a couple of clicks, you can navigate from a performance issue to the responsible method in the editor.\n\n\n\n\nTo complement this move towards easy performance optimization, Rider 2025.2 also introduces the OpenTelemetry plugin, bringing runtime metrics and logs directly into your IDE. You can visualize app behavior, generate architecture diagrams, and click through from logs to the exact source code – all without leaving Rider or opening an external dashboard. Learn more about the new tool here.\n\n\n\n\nThe OpenTelemetry plugin also integrates with MCP Servers, allowing AI tools to access logs, architecture diagrams, and other observability data.\nBetter debugging, on every level\nThe latest release expands your debugging options significantly:\n\n\n\n\n\nThe native debugger now lets you suppress low-level assertion exceptions and define step filters for smoother stepping through library code.\nThe new Pause All Processes action streamlines debugging of multi-process applications.\nYou can now debug native code remotely via SSH on Windows.\nSupport for mixed-mode debugging in Unity lets you set breakpoints in both C# and C++ and step seamlessly between them.\nLearn more.\nPerformance improvements\nFaster debugger stepping\nIn addition to the native debugger changes described above, for this release we’ve also worked on stepping performance. Stepping through code is now snappier, even when working with complex watches like large Unity objects or LINQ expressions. Rider now cancels unnecessary evaluations earlier for a smoother debugging experience.\nImproved memory consumption\nWe’ve fine-tuned Rider’s garbage collection settings, reducing peak managed memory usage by GC up to 20% – especially helpful when working on large codebases.\nGame development\nIf you use Rider to develop games, this release is packed with improvements you will enjoy:\nUnity\nShader debugging: Debug ShaderLab code in Rider using the integrated Frame Viewer with full support for breakpoints, draw calls, texture inspection, and more. Windows only\nMixed-mode debugging: Step seamlessly between managed (C#) and native (C++) code in Unity projects. Windows only\nUnity Profiler integration is now enabled by default to display profiling results directly in your editor.\n\n\n\n\nUnreal Engine\nShow Usages for UINTERFACE in Blueprints.\nCode completion for BlueprintGetters and Setters.\n.uproject loader suggestions: Use the native .uproject format instead of generating solution files, simplifying project setup on Windows, Mac, and Linux.\n\n\n\n\nGodot\nFor Godot development, Rider now bundles a new GDScript plugin, providing:\nSmarter completions for nodes and resources.\nCtrl+Click navigation, the Rename refactoring, and Find Usages.\nScene Preview tool window with interactive tree, parent method highlights, and performance monitors.\nDeeper code inspections, stricter untyped value handling, and many fixes for test running and C++ build scenarios.\n\n\n\n\nGo in-depth on the latest improvements to game development with Rider here. \nCode analysis and language support\nExtended C# 14 support\nRider 2025.2 brings initial support for the latest additions in C# 14, as well as a range of other improvements to code analysis. Here are some highlights:\nExtension members: Initial support for code completion, usage search, and refactorings.\nPartial events and constructors.\nNull-conditional assignments using a?.b = c and a?[i] = c.\nUser-defined compound assignment operators.\n\n\n\n\nRoslyn support\nRoslyn support in this release includes enhanced CompletionProvider functionality, enabling richer context-aware code completion through analyzers and community packages. It also introduces Roslyn suppressors, which silently suppress diagnostics in the background to reduce noise and improve clarity in the editor.\nF# improvements\nThe F# plugin brings better import suggestions, smarter code annotations, improved type inference, and fixes for interop issues and F# scripts. For the full list of updates and fixes, check the F# plugin release notes.\n\n\n\n\nWeb and database development\nExperimental support for the TypeScript-Go language server introduces a new way to work with TypeScript. Just install the @typescript/native-preview package and Rider will handle the rest.\n\n\n\n\nNew SQL database project support makes it easy to work with Microsoft.Build.Sql-style SDK projects. You’ll get templates, schema comparison, database import, and publishing capabilities.\nDeprecations and transitions\nCode coverage for Mono and Unity is now discontinued. This allows us to focus on performance and branch coverage while Unity transitions to CoreCLR.\nDynamic Program Analysis (DPA) will be sunset in 2025.3, with key analytic capabilities folded into the Monitoring tool window. dotUltimate license will be required to take full advantage of the investigative capabilities of the tool.\nPlease refer to this blog post for details. \nAs always, you will find the full overview of enhancements included in the release on our website’s What’s New in Rider 2025.2 page and the full list of resolved issues on our issue tracker.\nYou may also be interested in checking out the blog posts about the latest updates to ReSharper. \nDownload Rider 2025.2\n                                                    \nWe’d love to hear what you think. If you run into issues or have suggestions, please let us know via YouTrack or get in touch on X or Bluesky.",
        "dc:creator": "Alexander Kurakin",
        "content": "Rider 2025.2 delivers a big step forward in intelligent development tooling, bringing AI deeper into your workflow with Junie – our AI coding agent – along with runtime observability through the new OpenTelemetry plugin, a reworked Monitoring tool window, and improved debugging across platforms.&#160; Let’s take a closer look at what’s new. Meet Junie, your [&#8230;]",
        "contentSnippet": "Rider 2025.2 delivers a big step forward in intelligent development tooling, bringing AI deeper into your workflow with Junie – our AI coding agent – along with runtime observability through the new OpenTelemetry plugin, a reworked Monitoring tool window, and improved debugging across platforms.  Let’s take a closer look at what’s new. Meet Junie, your […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=589264",
        "categories": [
          "releases",
          "rider",
          "ai-agent",
          "c",
          "debugger",
          "gamedev",
          "godot",
          "junie",
          "mcp",
          "opentelemetry",
          "unity",
          "unreal-engine"
        ],
        "isoDate": "2025-08-14T10:39:57.000Z"
      },
      {
        "creator": "Oleg Zinovyev",
        "title": "Getting Started With Fuzz Testing in CLion",
        "link": "https://blog.jetbrains.com/clion/2025/08/fuzz-testing-in-clion/",
        "pubDate": "Thu, 14 Aug 2025 09:17:37 +0000",
        "content:encodedSnippet": "Fuzz testing is an effective technique for identifying bugs that are difficult to detect using unit tests or static analysis alone. This article will show you how to perform fuzz testing in CLion, analyze the results, and debug a tested function. We’ll use CI Fuzz, a fuzz testing tool developed by Code Intelligence, a company that specializes in C and C++ fuzz testing solutions. The Code Intelligence team also contributed to this article.\nIf you are already familiar with the concept of fuzz testing, feel free to skip the next two sections and jump straight to the practical part.\nWhat is fuzz testing?\nFuzz testing, also called fuzzing, is an automated dynamic software testing technique that provides a program with invalid, unexpected, or random data. The goal is to monitor the program’s runtime behavior and try to trigger bugs, such as crashes, hangs, or security vulnerabilities. By bombarding the software with a high volume and variety of incorrect inputs, fuzzing aims to uncover hidden bugs and weaknesses that might not be found through traditional testing methods.\nA useful mental model is to think of a fuzz test as similar to a unit test. But instead of feeding fixed inputs to the system, you supply it with inputs that are carefully selected and strategically mutated by the fuzzer to maximize code coverage.\nHow fuzz testing works\nLet’s assume we have an important function, ExploreSimpleChecks, in our codebase that we want to test:\nvoid ExploreSimpleChecks(int a, int b, std::string c) {\n  if (a >= 20000) {\n    if (b >= 2000000) {\n      if (b - a < 100000) {\n        if (c == “Attacker”) {\n          trigger_global_buffer_overflow(c);\n        }\n      }\n    }\n  }\n}\nThis function takes three parameters: two integers and one string. Under certain circumstances, it calls the vulnerable trigger_global_buffer_overflow function, which has a buffer overflow vulnerability. To trigger this vulnerability, we need:\nA test case that reaches the function call, meaning the two integers must be in a specific range, and the string must be “Attacker”.\nA check to see if a buffer overflow occurs, since these bugs don’t necessarily cause crashes.\n\n\n\n\nNow, let’s head over to the IDE and run a fuzz test on an example project to see how it works in practice.\nRunning fuzz testing in CLion\nFirst, we need to install the CI Fuzz tool and download an example project. After that, we’ll complete all the tasks in CLion.\n1. Install CI Fuzz\nInstall a free trial of CI Fuzz on your machine following the Code Intelligence documentation. Note that you also need to install a build system as a prerequisite. If you prefer CMake, you can use one shipped with CLion and install only CI Fuzz. Otherwise, refer to the Code Intelligence documentation.\n2. Open an example project in CLion\nClone the c-cpp-example project and open it in CLion. You can also clone and open the project when CLion is already running by selecting File | New | Project From Version Control in the main menu.\nWe’ll test the ExploreSimpleChecks function mentioned above, which is located in src/simple_examples/explore_me.cpp. For this, we’ll use the FUZZ_TEST function from simple_checks_test.cpp that takes two parameters – a byte buffer and its size:\nFUZZ_TEST(const uint8_t *data, size_t size) {\n  FuzzedDataProvider fdp(data, size);\n  int a = fdp.ConsumeIntegral<int>();\n  int b = fdp.ConsumeIntegral<int>();\n  std::string c = fdp.ConsumeRemainingBytesAsString();\n\n  ExploreSimpleChecks(a, b, c);\n}\nThis fuzz test tries all possible combinations of the a, b, and c parameters in the ExploreSimpleChecks function to find hidden bugs. The FuzzedDataProvider class enables the consumption of specific types of data from the raw fuzzer-generated byte buffer.\nThe mechanism looks very similar to how a unit test works. The only difference is that the function receives the data generated by the fuzzing engine as opposed to fixed, predefined inputs.\nTo test your own code, use the methods provided by the FuzzedDataProvider class to consume the required types of data.\n3. Run a fuzz test\nIn the simple_checks_test.cpp file, you can see the fuzz test alongside two unit tests written for the same function.\n\n\n\n\nTo run the test, open the IDE’s terminal (⌥F12 on macOS or Alt+F12 on Windows/Linux) and execute the command:\ncifuzz run simple_checks_fuzz_test\nThe output will include a report with the test summary. If a bug is found, the report will show its location in the source code.\nHere’s our report: \n\n\n\n\nAs it turns out, there’s a bug on line 40 in explore_me.cpp that causes a global buffer overflow. Severity 9 out of 10 indicates a rather critical issue, so it’s a good thing we caught it!\nAfter the test is complete, CI Fuzz also suggests checking how much code the fuzz test has covered, asking Do you want to collect coverage information?. This can be useful, for example, if you want to identify functionality that has not yet been tested. If you are ready to check the coverage, type Y, and you’ll see the coverage report:\n\n\n\n\nIn addition to the report in the terminal, you’ll see the HTML report that will open in your default browser:\n\n\n\n\nIf you don’t need the test coverage information at the moment, simply type N. Later, you can run the cifuzz coverage simple_checks_fuzz_test command separately. You can also get a combined coverage report that represents the merged coverage reached by all fuzz tests. To generate this report, either provide a list of fuzz tests to the coverage command or execute the command without specifying fuzz tests.\n4. Debug findings\nCI Fuzz provides actionable results, including the exact input that triggered the finding and the complete stack trace. This allows you to easily debug the issue and understand the root cause by observing how the code handles the crashing input step by step. CI Fuzz offers a DEBUG_FINDING macro to facilitate this process:\n\n\n\n\nThis macro registers a unit test that starts with the crashing input, triggering the finding. \nTo start debugging:\nAdd a DEBUG_FINDING macro with the finding name to your test code (as shown in line 16 above).\nClick the green Run Test button next to the macro.\nSelect the Debug configuration:\n\n\n\n\nWith this option, you can access a native debugging session in CLion that is similar to debugging any unit test:\n\n\n\n\nConclusion\nThrough fuzz testing, we’ve discovered a critical memory corruption bug – something that would have been difficult to catch with unit or integration tests. The latter typically rely on predefined inputs and expected outputs, whereas fuzz testing simulates more unpredictable, real-world scenarios. This simple example demonstrates the effectiveness of fuzz testing in finding bugs and security vulnerabilities beyond just testing the code functionality.\nThe combination of CI Fuzz and CLion offers a powerful and efficient way to find hidden bugs in your code through fuzz testing. As you’ve seen, integrating CI Fuzz into your CLion workflow is simple, enabling you to concentrate on developing high-quality software.\nWe encourage you to try out CI Fuzz for your projects and experience its capabilities firsthand. Your feedback is invaluable. Whether you discover new insights, encounter challenges, or have suggestions for improvements, we want to hear from you. Please share your thoughts in the comments!",
        "dc:creator": "Oleg Zinovyev",
        "content": "Fuzz testing is an effective technique for identifying bugs that are difficult to detect using unit tests or static analysis alone. This article will show you how to perform fuzz testing in CLion, analyze the results, and debug a tested function. We’ll use CI Fuzz, a fuzz testing tool developed by Code Intelligence, a company [&#8230;]",
        "contentSnippet": "Fuzz testing is an effective technique for identifying bugs that are difficult to detect using unit tests or static analysis alone. This article will show you how to perform fuzz testing in CLion, analyze the results, and debug a tested function. We’ll use CI Fuzz, a fuzz testing tool developed by Code Intelligence, a company […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=592484",
        "categories": [
          "tips-tricks",
          "cifuzz",
          "fuzz-testing",
          "security",
          "testing"
        ],
        "isoDate": "2025-08-14T09:17:37.000Z"
      },
      {
        "creator": "Maria Sharobaeva",
        "title": "JetBrains Academy – August Digest",
        "link": "https://blog.jetbrains.com/education/2025/08/13/jetbrains-academy-august/",
        "pubDate": "Wed, 13 Aug 2025 15:52:40 +0000",
        "content:encodedSnippet": "Your August learning boost is here – with free tools, career-launching courses, practical advice from the JetBrains Academy team, and your shot at winning a MacBook Pro.\nFree JetBrains tools for students\nJetBrains Student Pack\nLearn with the same tools trusted by MIT and Cambridge University students and used by expert engineers at NASA and Google. Apply by September 12 for a chance to win a MacBook Pro and other prizes!\nApply now\n                                                    \nCourses to kickstart your career\nAdd AI Agents to Your Team\nDemystify AI agents and put them to work for you. Discover core concepts, how to optimize their performance, and manage risks – so they become reliable members of your team. \nStart learning\n                                                    \n100 Exercises to Learn Rust\nMaster Rust through 100 expert-designed challenges from Luca Palmieri – powered by RustRover. Learn by fixing failing tests, getting instant feedback, and building clean, idiomatic Rust code with zero setup hassle.\nTry now\n                                                    \nTips and tricks\nShould You Use AI to Learn to Code? \nAI can supercharge your coding – or slow your progress. Learn when to use it, when to step back, and how to turn it into a skill-building ally instead of a crutch.\nGet your answer\n                                                    \nStack Overflow Developer Survey 2025\nStay on top of the latest trends with Stack Overflow’s 2025 Developer Survey. Discover the most popular technologies, employment patterns, and AI tools – along with developer sentiment and usage habits.\nLearn more",
        "dc:creator": "Maria Sharobaeva",
        "content": "Your August learning boost is here – with free tools, career-launching courses, practical advice from the JetBrains Academy team, and your shot at winning a MacBook Pro.",
        "contentSnippet": "Your August learning boost is here – with free tools, career-launching courses, practical advice from the JetBrains Academy team, and your shot at winning a MacBook Pro.",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=592290",
        "categories": [
          "digest",
          "jetbrains-academy",
          "newsletter"
        ],
        "isoDate": "2025-08-13T15:52:40.000Z"
      },
      {
        "creator": "Ilya Petrov",
        "title": "A Simpler, More Transparent Model for AI Quotas",
        "link": "https://blog.jetbrains.com/ai/2025/08/a-simpler-more-transparent-model-for-ai-quotas/",
        "pubDate": "Wed, 13 Aug 2025 15:10:17 +0000",
        "content:encodedSnippet": "TL;DR: Starting August 18, 2025, we’re rolling out a new AI quota model that makes AI subscriptions easier to understand and manage, while also letting you seamlessly extend your usage beyond your included quota with transparent pricing in real currency. The initial rollout will apply to individuals and organizations, with AI Enterprise updates to follow.\nWe are updating the quota system for JetBrains AI, as we recognize that the original system wasn’t crystal clear. In the rush to put powerful AI tooling in your hands, we made some numbers inaccessible. Over the past few months, we’ve been testing, listening to your feedback, and rethinking the cost structure, working to create a plan that’s easy to understand and built for the long haul.\nThe truth is, the AI market is shifting constantly. Prices change, models evolve, and every provider is still figuring out the best way forward. You told us you wanted more clarity regarding how much of your quota you have at any given time, what it’s worth, and how it’s being used. But you also just wanted more – the ability to continue using AI beyond the subscription limits. This update delivers exactly that – a transparent quota model tied directly to real currency that scales with your needs and lets you top up AI Credits to keep working without interruption.\nThe approach we’re introducing is designed to be fair to you and upfront about the cost of AI usage, without opaque calculations. That transparency helps us keep the JetBrains business model sustainable without external investment or subsidizing usage with VC money. We’re fully bootstrapped, and we plan to keep it that way.\nWhat’s changing\nSubscription tiers and prices will stay the same (minus original launch discount for AI Ultimate).\nEach subscription’s quota now matches its price. You’ll get AI Credits equal to the value of your plan, plus a small bonus with AI Ultimate. \nFor example, an individual AI Ultimate subscription costs USD 30.00 per month and now comes with USD 35.00 in AI Credits (USD 5 bonus credits). \nIn practice, this does mean that the quotas for some plans are getting smaller. If needed, you can purchase additional AI credits, allowing you to continue using the service even after reaching your quota.\n1 AI credit is equivalent to USD 1.00 (charged in your local currency).\nUsage is priced at LLM rates (charged in USD), reflecting the mix of models you use across tools. You only pay for what you consume.\nTop up anytime. You can buy any amount of AI Credits to extend your usage. They last for 12 months.\nFor organizations, top-up AI Credits are shared across the team and may be reallocated to different users.\nJunie is now included in the AI Enterprise plan, along with a BYOK (Bring Your Own Key) option.\nHow it works\nA monthly quota of AI Credits is included in your subscription, and you can purchase additional top-up credits at any time.\nCredits from your quota are used first.\nWhen they are gone, usage switches automatically to your top-up AI Credits (if you have any). You can top up your AI Credits in any amount via your JetBrains Account.\nTop-up AI Credits stay valid for 12 months.\nWhat this means for Junie and AI Assistant\nAI Assistant and Junie, our AI coding agent, continue to share the same credit system.\nThe AI Ultimate plan offers the best Junie experience, as it includes a larger quota, which is better for agentic workflows. If your quota runs out, you can easily top up.\nThe AI Pro plan works well if you are just getting started with Junie or use it only rarely, with the option to top up anytime.\nJunie is now included in the AI Enterprise plan, which includes a large quota suitable for regular use of the agent, advanced user management, AI audit logs, AI provider selection (through BYOK), and the option to run AI Enterprise on-premises.\nWhat’s next\nAugust 18 – The new quotas go live, with changes applying to your account at the start of your next 30-day quota refill cycle.\nLate September – We’ll implement real-time quota and usage tracking in JetBrains IDEs.\nSeptember and beyond – BYOK will be scaled to select subscription plans, meaning you’ll be able to use Junie either with all AI models included in the JetBrains AI subscription plans or with your own keys.\nThis is just the beginning. With transparent quotas now and detailed usage insights coming soon, you’ll be able to stay in control and never get surprised by your AI bill.",
        "dc:creator": "Ilya Petrov",
        "content": "TL;DR: Starting August 18, 2025, we’re rolling out a new AI quota model that makes AI subscriptions easier to understand and manage, while also letting you seamlessly extend your usage beyond your included quota with transparent pricing in real currency. The initial rollout will apply to individuals and organizations, with AI Enterprise updates to follow. [&#8230;]",
        "contentSnippet": "TL;DR: Starting August 18, 2025, we’re rolling out a new AI quota model that makes AI subscriptions easier to understand and manage, while also letting you seamlessly extend your usage beyond your included quota with transparent pricing in real currency. The initial rollout will apply to individuals and organizations, with AI Enterprise updates to follow. […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=592245",
        "categories": [
          "news",
          "ai-assistant",
          "ai-in-ides",
          "junie"
        ],
        "isoDate": "2025-08-13T15:10:17.000Z"
      },
      {
        "creator": "Will Vincent",
        "title": "Lightning-Fast Python: Mastering the uv Package Manager",
        "link": "https://blog.jetbrains.com/pycharm/2025/08/lightning-fast-python-mastering-the-uv-package-manager/",
        "pubDate": "Wed, 13 Aug 2025 13:13:15 +0000",
        "content:encodedSnippet": "Check out our recent livestream from August 7 on uv, a next-generation Python package manager revolutionizing Python development with speeds 10-100x faster than pip. Released just last year and written in Rust, uv replaces long-standing Python dependency management challenges with a single, lightning-fast tool that just works. \n\n\n\nOur speakers:\n* Michael Kennedy, host of Talk Python and Python Bytes podcasts, founder of Talk Python Training \n* William Vincent, PyCharm Developer Advocate, Django Chat podcast host\n\n\n\nJoin us as we demonstrate uv‘s game-changing capabilities live, explore practical migration strategies, and discuss advanced features. We’ll show you why Python developers are rapidly adopting this breakthrough tool as their go-to package manager.",
        "dc:creator": "Will Vincent",
        "content": "Check out our recent livestream from August 7 on uv, a next-generation Python package manager revolutionizing Python development with speeds 10-100x faster than pip. Released just last year and written in Rust, uv replaces long-standing Python dependency management challenges with a single, lightning-fast tool that just works. Join us as we demonstrate uv&#8216;s game-changing capabilities [&#8230;]",
        "contentSnippet": "Check out our recent livestream from August 7 on uv, a next-generation Python package manager revolutionizing Python development with speeds 10-100x faster than pip. Released just last year and written in Rust, uv replaces long-standing Python dependency management challenges with a single, lightning-fast tool that just works. Join us as we demonstrate uv‘s game-changing capabilities […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=591907",
        "categories": [
          "livestreams",
          "pycharm",
          "python",
          "uv"
        ],
        "isoDate": "2025-08-13T13:13:15.000Z"
      },
      {
        "creator": "Siva Katamreddy",
        "title": "Debugging Transactions? Let Spring Debugger Do the Heavy Lifting",
        "link": "https://blog.jetbrains.com/idea/2025/08/debugging-transactions-let-spring-debugger-do-the-heavy-lifting/",
        "pubDate": "Wed, 13 Aug 2025 10:08:24 +0000",
        "content:encodedSnippet": "Spring Framework’s declarative transaction management is incredibly powerful, allowing developers to simply add the @Transactional annotation to a method and let Spring handle the transaction details. However, misconfigurations or misunderstandings of how transactions work can lead to frustrating database transaction handling issues. Debugging these problems often means sifting through a lot of AOP proxy code, which is “not really a pleasant experience”.\nThis is where the Spring Debugger plugin comes to the rescue! It’s designed specifically to help you identify and fix these complex transaction management and JPA-related issues, making your debugging much smoother.\nYou can also watch the demonstration of Spring Debugger plugin’s database transaction debugging feature in this video.\n\n\n\n\n\n\nUnmasking Transactional Mysteries with Spring Debugger\nLet’s say we are building a bookmarks management application and consider a use case creating a new bookmark, which might also involve creating a new bookmark category if it doesn’t already exist. The goal is that if category creation succeeds but bookmark saving fails, only the bookmark changes should roll back, while the category creation should persist.\nA developer might implement this feature as follows:\n@Service\npublic class BookmarkService {\n   //....\n   @Transactional\n   public Bookmark createBookmark(CreateBookmarkCmd cmd) {\n       var bookmark = new Bookmark(cmd.title(), cmd.url());\n       if(cmd.categoryName() != null) {\n           Category category = categoryService.findByName(cmd.categoryName()).orElse(null);\n           if (category == null) {\n               category = this.createCategory(new Category(cmd.categoryName()));\n           }\n           bookmark.setCategory(category);\n       }\n       bookmarkRepository.save(bookmark);\n       log.info(\"Created bookmark with id: {}\", bookmark.getId());\n       return bookmark;\n   }\n\n   @Transactional(propagation = Propagation.REQUIRES_NEW)\n   public Category createCategory(Category category) {\n       category.setId(null);\n       return categoryRepository.save(category);\n   }\n}\nThe current implementation assumes that the createBookmark() method annotated with @Transactional will start a transaction. Inside, if a category needs to be created, call createCategory() method which is annotated with @Transactional(propagation = REQUIRES_NEW), hoping it will start a new, independent transaction. The expectation is that if createBookmark() fails (e.g., due to a NULL URL), the category should still be saved.\nLet’s validate this logic through the following test.\nimport com.sivalabs.bookmarks.TestcontainersConfig;\nimport org.assertj.core.api.Assertions;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.transaction.TransactionSystemException;\n\nimport java.util.Optional;\n\nimport static org.assertj.core.api.Assertions.assertThat;\nimport static org.assertj.core.api.Assertions.assertThatThrownBy;\n\n@SpringBootTest\n@Import(TestcontainersConfig.class)\nclass BookmarkServiceTest {\n   @Autowired\n   BookmarkService bookmarkService;\n   @Autowired\n   private CategoryRepository categoryRepository;\n\n   @Test\n   void shouldCreateCategoryEvenWhenBookmarkCreationFails() {\n       String categoryName = \"java25\";\n       Optional<Category> categoryOptional =\n               categoryRepository.findByNameEqualsIgnoreCase(categoryName);\n       assertThat(categoryOptional).isEmpty();\n\n       var cmd = new CreateBookmarkCmd(\n               \"My New Article\",\n               null,\n               categoryName);\n       assertThatThrownBy(()-> bookmarkService.createBookmark(cmd))\n               .isInstanceOf(TransactionSystemException.class);\n\n       categoryOptional = categoryRepository.findByNameEqualsIgnoreCase(categoryName);\n       assertThat(categoryOptional).isNotEmpty();\n   }\n}\nThe test will fail and the category was not saved, indicating that the intended separate transaction didn’t actually occur. Why?\nWithout Spring Debugger, figuring this out would involve painfully sifting through AOP proxy code. But with the plugin, it’s remarkably simple:\nSet breakpoints in your createBookmark() and createCategory() methods.\nRun your test in debug mode.\n\n\n\n\nAs you step through the code, the “Transaction” node in the debug tool window provides more insights.\nInitial Observation: When in the createBookmark() method, the debugger shows that the database transaction started there. Crucially, even after stepping into the createCategory() method, the debugger still indicates that the code is running in the same transaction that started in createBookmark().\nThe Revelation: This immediately highlights the problem! Even with @Transactional(propagation = REQUIRES_NEW) on createCategory(), it’s not starting a new transaction. The debugger helps us understand why: calling a method within the same class (a “local method call”) doesn’t go through the AOP proxy, meaning the @Transactional annotation on that internal method is not taken into consideration. This is why both bookmark and category creation were rolling back together when createBookmark() failed.\nThe Fix and Visual Validation\nThe solution is to move the createCategory() method into a separate service (e.g., CategoryService). When the createBookmark() method then calls categoryService.createCategory(), Spring’s AOP proxy can intercept this call.\nRunning the test in debug mode again with the Spring Debugger, you’ll see a profound difference.\n\n\n\n\n\nWhen in createBookmark(), the debugger shows the parent transaction starting there.\nWhen you step into CategoryService.createCategory(), the debugger now clearly indicates that the current method is running in a new transaction that started in CategoryService.createCategory().\nEven better, the debug window shows the hierarchy of transactions, detailing the parent transaction (BookmarkService.createBookmark()) and the newly started child transaction (CategoryService.createCategory()).\nYou also get comprehensive information about each transaction, including its isolation level, propagation behavior, and read-only status.\nYou can also see the entities in the Hibernate’s L1 cache.\nWith this change, the code behaves as expected: if bookmark creation fails, only those changes are rolled back, and the category is successfully persisted in the database.\nBeyond Transactions: Visualizing JPA Entity States\nSpring Debugger isn’t just for transactions. It also provides crucial visibility into JPA entity states, which can be incredibly helpful for debugging persistence-related issues.\nAs you step through your code, the debugger can show you an entity’s current state:\nTRANSIENT: A newly created object that has not yet been persisted to the database.\nDETACHED: An entity that was once managed by the persistence context but is no longer associated with it (e.g., after returning from a service method).\nMANAGED: An entity that is currently being tracked by the persistence context.\nFor example, our bookmark entity starts in a TRANSIENT state. The category entity, after being created and then returning from CategoryService to BookmarkService, is shown as DETACHED.\n\n\n\n\nAfter calling bookmarkRepository.save(bookmark), the debugger shows bookmark entity state changing to MANAGED.\n\n\n\n\nThis visualization of entity state changes is really helpful for debugging these JPA related issues.\nConclusion\nThe Spring Debugger plugin is an indispensable tool for any Spring developer. It takes the guesswork out of debugging complex database transaction management issues by visualizing transaction flow, parent-child transaction hierarchies, and detailed transaction information. Moreover, its ability to show JPA entity state changes provides deep insights into how your data is being managed.\nIf you’ve ever struggled with Spring transaction or JPA-related bugs, go ahead, install the Spring Debugger plugin today! You can find more documentation on it within IntelliJ IDEA documentation as well. Happy debugging!",
        "dc:creator": "Siva Katamreddy",
        "content": "Spring Framework&#8217;s declarative transaction management is incredibly powerful, allowing developers to simply add the @Transactional annotation to a method and let Spring handle the transaction details. However, misconfigurations or misunderstandings of how transactions work can lead to frustrating database transaction handling issues. Debugging these problems often means sifting through a lot of AOP proxy code, [&#8230;]",
        "contentSnippet": "Spring Framework’s declarative transaction management is incredibly powerful, allowing developers to simply add the @Transactional annotation to a method and let Spring handle the transaction details. However, misconfigurations or misunderstandings of how transactions work can lead to frustrating database transaction handling issues. Debugging these problems often means sifting through a lot of AOP proxy code, […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=590817",
        "categories": [
          "idea",
          "java",
          "spring-boot-2",
          "spring-data-jpa-2",
          "spring-debugger-2"
        ],
        "isoDate": "2025-08-13T10:08:24.000Z"
      },
      {
        "creator": "Kodee",
        "title": "Kodee’s Kotlin Roundup: 2.2.20-Beta2, Kotlin LSP Update, Shipaton 2025, and a New Face on the Foundation Board",
        "link": "https://blog.jetbrains.com/kotlin/2025/08/kodee-kotlin-roundup-july-25-edition/",
        "pubDate": "Wed, 13 Aug 2025 09:07:58 +0000",
        "content:encodedSnippet": "Kodee here – your ever-cheerful tour guide through the ever-bustling streets of Kotlin-land. Summer may be the season for vacations, but we’re not slowing down! Let’s take a stroll through the latest news.\nKodee-approved monthly spotlight\nKotlin 2.2.20-Beta2\nKotlin 2.2.20-Beta2 is here with smart upgrades ready for adventurous developers! Kotlin Multiplatform continues to show off its cross-platform muscles, with Swift export now available by default and a new target for web development, while Kotlin/Native gets cool improvements for managing binaries and debugging.\nRead the highlights\n                                                    \nKotlin ranks 15th among popular programming languages\nKotlin has officially claimed fifteenth place among the most-used programming languages, according to the 2025 Stack Overflow Developer Survey. We might not be in the top 10 (yet!), but this just means we have more room to surprise everyone later.\nKotlin Language Server Protocol update\nThe first post-KotlinConf release is worth the wait. The Kotlin Language Server Protocol is now much more polished in its core functionality, and while there’s still plenty of work ahead, it’s taking shape nicely. As for me? Let’s just say I’m very excited!\nCheck out the release notes\n                                                    \nShip, share, and win: The Kotlin Multiplatform award at Shipaton 2025\nGot an app idea itching to break free? Shipaton 2025 is your two-month chance to bring it to life – and for Kotlin developers, the timing couldn’t be better. With Compose Multiplatform for iOS now Stable, it’s a great moment to dive in. Build it, ship it, and you could snag the Kotlin Multiplatform Reach Award… plus a slice of a USD 55,000 prize pool. Now, if you’ll excuse me, I have an award to win.\nLearn more about Shipaton 2025\n                                                    \nThe Kotlin Foundation welcomes Sergei Rybalkin to the board\nBig news from the Kotlin Foundation boardroom – we’ve got a new face at the table! Please welcome Sergei Rybalkin, Senior Staff Software Engineer at Meta and longtime Kotlin champion. Before Meta, Sergei boosted Kotlin adoption at Alibaba Group, working on server-side architecture, function-as-a-service (FaaS) platforms, and JVM frameworks. Now Sergei is bringing that expertise (and probably a few good stories) to help steer Kotlin’s future.\nRead the full news\n                                                    \nWhat’s new in IntelliJ IDEA 2025.2\nThe latest IntelliJ IDEA is out! There’s a shiny new Spring debugger, support for Spring Modulith, and – drumroll 🥁 – your core Kotlin features stick around even if your Ultimate subscription runs out. Plus, plenty more under the hood to make your coding life smoother.\nGet the full details\n                                                    \nContext-sensitive resolution in Kotlin 2.2 \nNew on the Kotlin YouTube channel – context-sensitive resolution in Kotlin 2.2 is here to make your life easier on the quiet. This experimental feature lets you skip the extra type qualifiers when the compiler can already tell what you mean. It’s the kind of change you won’t notice until you realize your code just feels… neater.\nWatch now\n                                                    \nKotlinX RPC 0.9.1 is now available\nKotlinX RPC 0.9.1 is here, setting the stage for long-term stability and evolution. This release brings decoupling from KotlinX Serialization, cleaner API and lifetime management, and Strict mode by default.\nSee the details\n                                                    \nKoog corner\nBuilding better agents: What’s new in Koog 0.3.0\nNot aware that Koog is a Kotlin-based framework for building and running AI agents entirely in idiomatic Kotlin? Well, now you are – and version 0.3.0 just landed! It’s packed with improvements that make building, running, and managing intelligent agents a whole lot easier. This version brings better durability, faster execution, richer observability, and smoother integration with real-world systems. And with Koog, this is good. Why someone wouldn’t give it a try is beyond me.\nRead on\n                                                    \nWhen Tool-Calling Becomes an Addiction: Debugging LLM Patterns in Koog\nI’ll admit, I was reading this debugging story like it was a mystery novel. Our AI agent was doing great – until it suddenly stopped listening. What went wrong? A trail of subtle clues led us to an unexpected culprit: It had learned to ignore instructions. Learn how the JetBrains team cracked the case and fixed the pattern.\nRead the full story\n                                                    \nWhat else to read\nCase Study: Why Kakao Pay Chose Kotlin and Spring for Backend Development\nModular Ktor: Building Backends for Scale\nBreaking to Build: Fuzzing the Kotlin Compiler\nKtor 3.2.2 Is Now Available\nKotlin Notebook Meets IntelliJ Platform: Advancing IDE Plugin Development\nYouTube highlights\nCheck out some of the most popular videos on our Kotlin YouTube channel:\nCompose Prototyping in Kotlin Notebooks | Christian Melchior\nExposed 1.0: Stable, Scalable, and Looking Forward | Chantal Loncle\nThat’s Unpossible – A Full Stack Side Project Webapp (Including a High-fidelity UI!) aAll in Kotlin | Dan Kim\nKotlin and Spring: The Modern Server-side Stack | Rod Johnson\nAnd these are just a few of the treasures waiting for you. Head over to our channel to discover even more gems like these.",
        "dc:creator": "Kodee",
        "content": "Kodee here – your ever-cheerful tour guide through the ever-bustling streets of Kotlin-land. Summer may be the season for vacations, but we’re not slowing down! Let’s take a stroll through the latest news. What else to read YouTube highlights Check out some of the most popular videos on our Kotlin YouTube channel: And these are [&#8230;]",
        "contentSnippet": "Kodee here – your ever-cheerful tour guide through the ever-bustling streets of Kotlin-land. Summer may be the season for vacations, but we’re not slowing down! Let’s take a stroll through the latest news. What else to read YouTube highlights Check out some of the most popular videos on our Kotlin YouTube channel: And these are […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=591909",
        "categories": [
          "news",
          "ecosystem",
          "kotlin-news-2"
        ],
        "isoDate": "2025-08-13T09:07:58.000Z"
      },
      {
        "creator": "Stanislav Garkusha",
        "title": "DataSpell Is Now an AI-First Tool for Data Analysis",
        "link": "https://blog.jetbrains.com/dataspell/2025/08/dataspell-is-now-an-ai-first-tool-for-data-analysis/",
        "pubDate": "Tue, 12 Aug 2025 14:19:00 +0000",
        "content:encodedSnippet": "With the 2025.2 release, DataSpell sets off in a new direction as the AI-first environment for data analysis in the JetBrains for Data family. Starting with this version, DataSpell includes JetBrains AI Pro free for use in the product with every paid subscription, reflecting our commitment to bringing AI into our data products. Please note, however, that the included AI Pro subscription will be available for use in DataSpell only. \nRead on to learn about the features DataSpell offers for your data analysis work.\n\n\n\n\nDownload DataSpell 2025.2 \nAI Pro included at no extra cost!\nEvery paid DataSpell subscription now includes JetBrains AI Pro. Get advanced, data-focused AI tools and access to the latest models from Google, Anthropic, and OpenAI – including the recently released GPT-5! Whether you’re exploring data, writing code, or visualizing results, AI Pro has your back. Note: Some AI features may behave differently or be unavailable in certain regions\n\n\n\n\nPlease note that some AI features might work differently or be unavailable in some regions.\nEasier project creation\nAs AI Assistant can generate your project setup automatically, project onboarding is now simpler than ever.\nAt the same time, you can still spin up an environment pre-configured for Jupyter notebooks, Python scripts, or R scripts. You can also start by attaching existing files or data sources using the data connection template.\nCheck out our quick start guide for details.\n\n\n\n\nDedicated AI agents for data analysis\nIntegrated AI agents can handle common tasks without breaking your flow. Click the AI chat icon, enable DataSpell AI Agents, and tell it what you need. DataSpell will then pick the right agent automatically.\nDataSpell’s AI agents can:\nManage interpreters and packages.\nOrganize folders and files.\nConnect to and configure databases.\nWork with Jupyter notebooks (create cells, run notebooks, etc.).\nHandle export operations.\nTransform data with Data Wrangler.\n\n\n\n\nJetBrains AI improvements\nAI Edit Cell now generates code for Jupyter and SQL cells using the cell’s context.\n\n\n\n\n\nYou now have the ability to attach files or data source tables to AI chats for richer context.\n\n\n\n\n\nIn the AI chat, you can now also:\n\nAsk general questions.\nReference database objects by name.\nCreate inline chart visualizations from text prompts.\nImprovements for working with data and exporting results\nData Wrangler in notebooks – All Data Wrangler edits are visible in Jupyter cells. One click applies the changes to your DataFrame and inserts the code.\n\n\n\n\n\nSimpler tabular export – Copy data from DataSpell tables and paste it into Google Sheets, Docs, Slides, or any other tool, and the data stays editable. macOS support is coming soon.\n\n\n\n\n\nPDF export – Use the new icon  in the upper-right corner to export notebooks as one of the following options:\n\nEntire Notebook\nOnly Outputs\nMarkdown and Outputs\n\n\n\n\nDatabase improvements\nAbility to attach database objects to the AI chat\nInstead of adding a whole schema, you can now attach just the table or view you’re working with:\nIn the chat, type @ or # and select or enter dbObject:.\n\n\n\n\nThen select the object you want to attach from the list.\n\nWe hope you enjoy these updates! We are still in the beginning stages of becoming an AI-first tool for data analysts, so we would appreciate your feedback and reactions, which you can also share in our survey. If you come across a bug or have a feature suggestion, please share it on our issue tracker.\nWant to stay up to date on the latest features and receive DataSpell and data analysis tips? Subscribe to our blog and follow us on X!",
        "dc:creator": "Stanislav Garkusha",
        "content": "With the 2025.2 release, DataSpell sets off in a new direction as the AI-first environment for data analysis in the&#160;JetBrains for Data&#160;family. Starting with this version, DataSpell includes JetBrains AI Pro free for use in the product with every paid subscription, reflecting our&#160;commitment&#160;to bringing AI into our data products. Please note, however, that the included [&#8230;]",
        "contentSnippet": "With the 2025.2 release, DataSpell sets off in a new direction as the AI-first environment for data analysis in the JetBrains for Data family. Starting with this version, DataSpell includes JetBrains AI Pro free for use in the product with every paid subscription, reflecting our commitment to bringing AI into our data products. Please note, however, that the included […]",
        "guid": "https://blog.jetbrains.com/?post_type=dataspell&p=586967",
        "isoDate": "2025-08-12T14:19:00.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Pablo Gonzalez",
        "title": "Improving Codebase Awareness in Visual Studio Chat",
        "link": "https://devblogs.microsoft.com/visualstudio/improving-codebase-awareness-in-visual-studio-chat/",
        "pubDate": "Thu, 14 Aug 2025 12:00:59 +0000",
        "content:encodedSnippet": "Smarter Code Search in Visual Studio: From BM25 to Semantic Search \nIn our latest 17.14.11 release, we’ve made a significant leap forward in how we explore your code to retrieve meaningful context. Our new Remote Semantic Search integration helps you find exactly what you need faster and with greater precision than ever before. \nBy embedding Remote Semantic Search directly into the Visual Studio Copilot code search experience, we’ve combined the power of traditional keyword search (BM25) with the deep contextual understanding of cutting-edge AI models. This means your searches go beyond just matching words, they grasp the concepts and intent behind your search queries. \nLet’s dive into what’s new, why it’s a game-changer, and how you can start using it today. \nThe Legacy: BM25 + Reranking \nBefore this update, Visual Studio’s code search relied solely on a BM25-based search engine. BM25 is a well-established ranking algorithm that evaluates how closely each document, such as code files or symbols, matches your query. It does this by analyzing term frequency and document length, balancing how often a term appears within a document against how rare it is across the entire codebase. Simply put, the more a term shows up in a file (to a certain extent) and the less common it is overall, the more relevant that file is considered. \nOn top of that, we used reranking logic to fine-tune results. This step gave extra weight to certain matches, like hits in file names or symbols within active projects, so that the most likely relevant results would surface right at the top. \nThe limitations: \nBM25 is purely keyword-based. It doesn’t understand synonyms, concepts or context by itself. \nSearching for “get user authentication token” would only match files containing those exact words (authentication, token, etc), missing matches like RetrieveOAuthCredential or JWT.\nThe Upgrade: Semantic Search \nUnlike traditional search that focuses on matching exact words, semantic search matches meaning. Powered by advanced vector embeddings, it transforms both your query and every piece of code into points in a high-dimensional space. That’s where their semantic similarity can be measured. \nThis means it understands that phrases like “fetch user credentials” and “get authentication token” are closely related, even if they don’t share any exact words. Semantic search captures the purpose of functions, the intent behind variables, and even the context in code comments to deliver results that truly match what you’re looking for. \nUsing Semantic Code Search in Visual Studio \nThanks to our remote indexing, Semantic Code Search is available for solutions hosted in Azure DevOps and GitHub repositories that have been indexed. To learn more about the GitHub integration check out About GitHub Code Search – GitHub Docs.  \nTo try it out: \nOpen your Copilot Chat window  \nUse our #solution feature to ask questions like: \n“#solution Where are the API requests?”  \n“Where is Authentication Handled? #solution”  \nFeel free to use natural language, our semantic engine understands full sentences. For example: “Where do we generate the JWT token for API requests?” \nExamples in Action \nLet’s explore how this works using the Roslyn repository. We’ll run search queries in Copilot and compare the results side-by-side. In the table below, you’ll see results returned by the traditional BM25 algorithm on the left, and the new Semantic Search on the right. These examples highlight how much smarter and more relevant your code search can be. \nComparison table \n\n\nBM25 method \nSemantic Search \n\n\n\n \n\n\nWith semantic search, the results may be fewer, but they are significantly more accurate. The search engine was able to understand that “deleting not synchronous modifiers” and “removing Async modifiers” convey the same intent, even though the wording is different, demonstrating its deeper understanding of code meaning. \n\n\n \n \n\n\nBM25 tends to return files that contain matching terms, even if they are less relevant or potentially unrelated, such as corrupted or test files. For example, with BM25, an extra file named SmartIdenterEnterOnTokenTests was included in the results, which was not directly relevant to the query. \n\n\n\nWrapping Up \nRemote Semantic Search into Visual Studio Copilot marks a major step forward in how Copilot understands developer’s codebase. By combining the precision of traditional keyword search with the deep, context-aware insights of AI-driven semantic search, finding the right code has never been easier. \nWhether you’re digging into complex legacy projects or exploring unfamiliar repositories, this powerful new search experience helps get straight to the heart of what matters, saving time and reducing frustration. \nGive it a try today and experience a smarter way to search your code. \nHappy coding! \nThe post Improving Codebase Awareness in Visual Studio Chat appeared first on Visual Studio Blog.",
        "dc:creator": "Pablo Gonzalez",
        "comments": "https://devblogs.microsoft.com/visualstudio/improving-codebase-awareness-in-visual-studio-chat/#comments",
        "content": "<p>Smarter Code Search in Visual Studio: From BM25 to Semantic Search  In our latest 17.14.11 release, we’ve made a significant leap forward in how we explore your code to retrieve meaningful context. Our new Remote Semantic Search integration helps you find exactly what you need faster and with greater precision than ever before.  By embedding [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/improving-codebase-awareness-in-visual-studio-chat/\">Improving Codebase Awareness in Visual Studio Chat</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Smarter Code Search in Visual Studio: From BM25 to Semantic Search  In our latest 17.14.11 release, we’ve made a significant leap forward in how we explore your code to retrieve meaningful context. Our new Remote Semantic Search integration helps you find exactly what you need faster and with greater precision than ever before.  By embedding […]\nThe post Improving Codebase Awareness in Visual Studio Chat appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253857",
        "categories": [
          "GitHub Copilot",
          "Visual Studio",
          "GitHub Copilot Chat"
        ],
        "isoDate": "2025-08-14T12:00:59.000Z"
      },
      {
        "creator": "Jim Harrer",
        "title": "From Redmond to San Diego: VS Live! Highlights, Session Examples, and What’s Next",
        "link": "https://devblogs.microsoft.com/visualstudio/from-redmond-to-san-diego-vs-live-highlights-session-examples-and-whats-next/",
        "pubDate": "Thu, 14 Aug 2025 00:36:07 +0000",
        "content:encodedSnippet": "There’s something special about hosting developers at Microsoft HQ — and this year’s Visual Studio Live! Redmond reminded me why I love these events. The energy in every room was electric. From the moment the first session kicked off, developers leaned in, asked smart, challenging questions, and took every opportunity to connect with the Product Managers and engineers from Visual Studio, Azure, and GitHub Copilot.\nBetween sessions, the hallways were buzzing. Right after the Experts Meet & Greet, one speaker shared a story that stuck with me:\n“A customer came up to me and said: All those paper cuts that Mads showed that are being fixed with vNext are nothing compared to the complete gamechanger that Copilot is for developing. I’m going back and begging for it at my company.”\n\nMoments like that are exactly why these in-person events matter — they spark conversations that turn into real momentum back at the office.\nWatch the Microsoft Sessions On-Demand\nIf you couldn’t make it to Redmond (or just want to revisit your favorites), we’ve made the Microsoft-led sessions available on YouTube. You’ll find keynotes, deep dives, and practical demos from the teams behind Visual Studio, Azure, and GitHub Copilot.  Please note, the first 10 videos are available today and more will be added in the coming days, so keep checking back for new content or turn on YouTube notifications.\n Watch the playlist here — your front-row seat to Redmond’s best moments.\nVIEW THE FULL PLAYLIST\n\nSession Highlights – Just a Few Examples from a Packed Agenda\nWith more than 70 sessions led by 39 incredible Microsoft speakers, the week was filled with valuable insights, hands-on learning, and memorable moments. Every session had its own takeaways, but here are just a few examples to give you a taste of what you can expect from VS Live! events — it really was a fantastic lineup of talented, passionate speakers.  Here are just a few available now in the playlist, with more added every day. \nGetting the Most out of the Latest in Visual Studio – Harshada Hole & Jessie Houghton\nKicking off bright and early Tuesday morning, Harshada and Jessie energized the audience with demos of the latest productivity boosts, AI-assisted debugging, and smarter Git tooling — showing practical ways to make every day in the IDE more efficient.\nThe Future of Visual Studio – Mads Kristensen\nDevelopers loved seeing the little frustrations we’ve all lived with get smoothed away — and how those changes, paired with Copilot, can dramatically speed up the inner loop.\nBuild Next-Gen AI Apps with .NET and Azure – Jon Galloway\nA high-energy solo session that showed how to build cutting-edge, next-generation AI applications using .NET and Azure.\nGetting the Most Out of .NET Development with Visual Studio – Wendy Breiding & Allie Barry\nIn this demo-heavy session, come along on an end-to-end journey of the latest tools, tips, and Github Copilot tricks VS provides to help make you a more productive .NET developer.\nThe Next Generation of Developer Productivity with GitHub Copilot & Visual Studio – Etienne Baudoux, Simona Liao\nThis session highlights powerful AI features from recent updates that streamline everyday workflows, including both automatic agent modes and the seamlessly integrated Copilot experiences inside the editor.\nVIEW THE FULL PLAYLIST\n\nSee You in San Diego – And Save Big\nVisual Studio subscribers unlock exclusive pricing at https://my.visualstudio.com. Just sign in with your subscriber ID, click on Benefits | Professional Development – then grab the Priority code off the Visual Studio LIVE! Events tile.\nNot a subscriber? No problem. Use Priority Code VSLIVE2025 at checkout on the VS Live! San Diego event page to save up to $500 on registration.\nSan Diego offers a full week of deep technical learning, hands-on sessions, and the chance to connect directly with the engineers behind Visual Studio, Azure, and GitHub Copilot — and you can’t beat the San Diego venue in September.\nWhether you’re a long-time Visual Studio subscriber or just starting to explore GitHub Copilot and Azure AI, this is your chance to connect with the people building the tools you use every day — and the community that makes it all worth it.\nLEARN MORE ABOUT VS LIVE! SAN DIEGO\n\nThe post From Redmond to San Diego: VS Live! Highlights, Session Examples, and What’s Next appeared first on Visual Studio Blog.",
        "dc:creator": "Jim Harrer",
        "comments": "https://devblogs.microsoft.com/visualstudio/from-redmond-to-san-diego-vs-live-highlights-session-examples-and-whats-next/#respond",
        "content": "<p>There’s something special about hosting developers at Microsoft HQ — and this year’s Visual Studio Live! Redmond reminded me why I love these events. The energy in every room was electric. From the moment the first session kicked off, developers leaned in, asked smart, challenging questions, and took every opportunity to connect with the Product [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/from-redmond-to-san-diego-vs-live-highlights-session-examples-and-whats-next/\">From Redmond to San Diego: VS Live! Highlights, Session Examples, and What’s Next</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "There’s something special about hosting developers at Microsoft HQ — and this year’s Visual Studio Live! Redmond reminded me why I love these events. The energy in every room was electric. From the moment the first session kicked off, developers leaned in, asked smart, challenging questions, and took every opportunity to connect with the Product […]\nThe post From Redmond to San Diego: VS Live! Highlights, Session Examples, and What’s Next appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253874",
        "categories": [
          "Visual Studio",
          "Events",
          "Training",
          "Visual Studio Live!",
          "vslive"
        ],
        "isoDate": "2025-08-14T00:36:07.000Z"
      },
      {
        "creator": "Rhea Patel",
        "title": "GPT-5 Now Available in Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/gpt-5-now-available-in-visual-studio/",
        "pubDate": "Tue, 12 Aug 2025 17:10:52 +0000",
        "content:encodedSnippet": "We’re excited to share that GPT-5, OpenAI’s latest frontier model, is now rolling out in GitHub Copilot for Visual Studio.\nGPT-5 offers faster responses and even better performance for writing and understanding code. This release brings a new level of capability to your development workflow, making it easier to move from idea to implementation.\nTry it now: Click the Copilot badge in your IDE, open Chat, and select GPT-5 (Preview).\ndocument.createElement('video');\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/08/gpt5new-3.mp4\n\nWhy GPT-5 Matters to you\nGPT-5 is OpenAI’s most advanced model to date. It delivers substantial improvements in:\nReasoning and decision-making for complex coding tasks\nCode quality and maintainability, even for large implementations with minimal prompting\nClarity of explanations, giving you a better understanding of the changes it makes\nFrom building end-to-end features to understanding unfamiliar codebases, GPT-5 is designed to help you move faster while staying in control.\nAvailability\nGPT-5 is rolling out to all paid Copilot plans starting today. You can access it in both Agent Mode and Ask Mode. If you do not yet see GPT-5 in your model picker, check back soon as rollout continues. Note: As GPT‑5 becomes more widely available, GitHub has announced the phased deprecation of several older models, see: Upcoming deprecation of o1, GPT-4.5, o3-mini, and GPT-4o – GitHub Changelog. \nFor Copilot Enterprise and Business customers:\nAdministrators must enable the GPT-5 policy in Copilot settings. Once enabled, users in the organization will be able to select GPT-5 in the model picker in Visual Studio.\nThe post GPT-5 Now Available in Visual Studio appeared first on Visual Studio Blog.",
        "enclosure": {
          "url": "https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/08/gpt5new-3.mp4",
          "length": "176799",
          "type": "video/mp4"
        },
        "dc:creator": "Rhea Patel",
        "comments": "https://devblogs.microsoft.com/visualstudio/gpt-5-now-available-in-visual-studio/#comments",
        "content": "<p>We’re excited to share that GPT-5, OpenAI’s latest frontier model, is now rolling out in GitHub Copilot for Visual Studio. GPT-5 offers faster responses and even better performance for writing and understanding code. This release brings a new level of capability to your development workflow, making it easier to move from idea to implementation. Try [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/gpt-5-now-available-in-visual-studio/\">GPT-5 Now Available in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "We’re excited to share that GPT-5, OpenAI’s latest frontier model, is now rolling out in GitHub Copilot for Visual Studio. GPT-5 offers faster responses and even better performance for writing and understanding code. This release brings a new level of capability to your development workflow, making it easier to move from idea to implementation. Try […]\nThe post GPT-5 Now Available in Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253821",
        "categories": [
          "Visual Studio"
        ],
        "isoDate": "2025-08-12T17:10:52.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": [
      {
        "creator": "sunyzero",
        "title": "페도라42에서 docker 오류",
        "link": "http://sunyzero.tistory.com/317",
        "pubDate": "Thu, 14 Aug 2025 00:19:40 +0900",
        "author": "sunyzero",
        "comments": "http://sunyzero.tistory.com/317#entry317comment",
        "content": "<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">리눅스 중에 최신 버전을 사용하는 페도라 리눅스42에 docker를 설치하면 에러가 발생하면서 실행되지 않는다. 결론만 말하면 iptables-legacy 패키지를 설치하고 리부트하면 손쉽게 해결 된다. 그러면 Fedora42에서 docker 의 오류 증상과 해결법에 대해서 살펴보도록 하겠다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">참고로 페도라 리눅스 42는 2025년 4월 16일에 출시되었다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"docker_fedora42.png\" data-origin-width=\"773\" data-origin-height=\"438\"><span data-url=\"https://blog.kakaocdn.net/dn/cQnLZ1/btsPQyGYPXH/SwrFDY7PiEzSXty6hgwsFK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cQnLZ1/btsPQyGYPXH/SwrFDY7PiEzSXty6hgwsFK/img.png\" data-alt=\"Docker on Fedora 42\"><img src=\"https://blog.kakaocdn.net/dn/cQnLZ1/btsPQyGYPXH/SwrFDY7PiEzSXty6hgwsFK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcQnLZ1%2FbtsPQyGYPXH%2FSwrFDY7PiEzSXty6hgwsFK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"773\" height=\"438\" data-filename=\"docker_fedora42.png\" data-origin-width=\"773\" data-origin-height=\"438\"/></span><figcaption>Docker on Fedora 42</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">1. Fedora Linux 42에서 docker 오류</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">페도라 리눅스 42에 docker-ce를 설치하고, enable and start를 하면 다음과 같이 에러가 발생한다. 아래는 명령어 실행시 발생하는 에러 상황을 캡쳐한 것이다.</span></p>\n<pre id=\"code_1755097673705\" class=\"shell\" data-ke-language=\"shell\" data-ke-type=\"codeblock\"><code>$ sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n$ sudo systemctl enable --now docker\nCreated symlink '/etc/systemd/system/multi-user.target.wants/docker.service' &rarr; '/usr/lib/systemd/system/docker.service'.\nJob for docker.service failed because the control process exited with error code.\nSee \"systemctl status docker.service\" and \"journalctl -xeu docker.service\" for details.\n\n$ sudo systemctl status docker\n&times; docker.service - Docker Application Container Engine\n     Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; preset: disabled)\n    Drop-In: /usr/lib/systemd/system/service.d\n             └─10-timeout-abort.conf\n     Active: failed (Result: exit-code) since Thu 2025-07-10 15:22:14 KST; 17s ago\n Invocation: 226f2df11c4e4b67bdd829aa732b9f1d\nTriggeredBy: &times; docker.socket\n       Docs: https://docs.docker.com\n    Process: 177352 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock (code=exited, status=1/FAILURE)\n   Main PID: 177352 (code=exited, status=1/FAILURE)\n\nJul 10 15:22:14 fedora systemd[1]: docker.service: Scheduled restart job, restart counter is at 3.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Start request repeated too quickly.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Failed with result 'exit-code'.\nJul 10 15:22:14 fedora systemd[1]: Failed to start docker.service - Docker Application Container Engine.</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">먼저 dnf로 docker-ce를 비롯한 5개의 패키지를 설치한 뒤에, systemctl enable --now docker로 실행하였다. 그런데 systemctl status docker로 확인해보니 Active 상태에 failed (Result: exit-code)로 표시되어있다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">좀 더 자세한 정보를 얻기 위해 journalctl로 최근 30개의 docker unit 관련 로그를 살펴보았다.</span></p>\n<pre id=\"code_1755097826521\" class=\"shell\" data-ke-language=\"shell\" data-ke-type=\"codeblock\"><code>$ sudo journalctl -u docker -rn 30\nJul 10 15:22:14 fedora systemd[1]: Failed to start docker.service - Docker Application Container Engine.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Failed with result 'exit-code'.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Start request repeated too quickly.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Scheduled restart job, restart counter is at 3.\nJul 10 15:22:12 fedora systemd[1]: Failed to start docker.service - Docker Application Container Engine.\nJul 10 15:22:12 fedora systemd[1]: docker.service: Failed with result 'exit-code'.\nJul 10 15:22:12 fedora systemd[1]: docker.service: Main process exited, code=exited, status=1/FAILURE\nJul 10 15:22:12 fedora dockerd[177352]: failed to start daemon: Error initializing network controller: error obtaining controller instance: failed to register \"bridge\" driver: failed to create NAT chain DOCKER: COMMAND_FAILED: INVALID_IPV: 'ipv4' is not a valid backend or is unavailable\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.245077759+09:00\" level=info msg=\"stopping event stream following graceful shutdown\" error=\"&lt;nil&gt;\" module=libcontainerd namespace=moby\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.221133353+09:00\" level=warning msg=\"failed to find iptables\" error=\"exec: \\\"iptables\\\": executable file not found in $PATH\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.219303872+09:00\" level=info msg=\"Firewalld: docker zone already exists, returning\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.185940349+09:00\" level=error msg=\"failed to load container\" container=docker-mysqld-auth.log error=\"lstat /var/lib/docker/containers/docker-mysqld-auth.log/config.v2.json: not a directory\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.185855977+09:00\" level=info msg=\"Loading containers: start.\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.179171737+09:00\" level=info msg=\"[graphdriver] using prior storage driver: overlay2\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.125838950+09:00\" level=info msg=\"Creating a containerd client\" address=/run/containerd/containerd.sock timeout=1m0s\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.117090429+09:00\" level=info msg=\"detected 127.0.0.53 nameserver, assuming systemd-resolved, so using resolv.conf: /run/systemd/resolve/resolv.conf\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.116958491+09:00\" level=info msg=\"CDI directory does not exist, skipping: failed to monitor for changes: no such file or directory\" dir=/etc/cdi\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.116944136+09:00\" level=info msg=\"CDI directory does not exist, skipping: failed to monitor for changes: no such file or directory\" dir=/var/run/cdi\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.116850954+09:00\" level=info msg=\"OTEL tracing is not configured, using no-op tracer provider\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.116388190+09:00\" level=info msg=\"Starting up\"\nJul 10 15:22:12 fedora systemd[1]: Starting docker.service - Docker Application Container Engine...\nJul 10 15:22:12 fedora systemd[1]: docker.service: Scheduled restart job, restart counter is at 2.\nJul 10 15:22:09 fedora systemd[1]: Failed to start docker.service - Docker Application Container Engine.\nJul 10 15:22:09 fedora systemd[1]: docker.service: Failed with result 'exit-code'.\nJul 10 15:22:09 fedora systemd[1]: docker.service: Main process exited, code=exited, status=1/FAILURE\n==&gt; 여기 아래 부분이 중요한 로그\nJul 10 15:22:09 fedora dockerd[177328]: failed to start daemon: Error initializing network controller: error obtaining controller instance: failed to register \"bridge\" driver: failed to create NAT chain DOCKER: COMMAND_FAILED: INVALID_IPV: 'ipv4' is not a valid backend or is unavailable\nJul 10 15:22:09 fedora dockerd[177328]: time=\"2025-07-10T15:22:09.980772122+09:00\" level=info msg=\"stopping event stream following graceful shutdown\" error=\"&lt;nil&gt;\" module=libcontainerd namespace=moby\nJul 10 15:22:09 fedora dockerd[177328]: time=\"2025-07-10T15:22:09.954760374+09:00\" level=warning msg=\"failed to find iptables\" error=\"exec: \\\"iptables\\\": executable file not found in $PATH\"\nJul 10 15:22:09 fedora dockerd[177328]: time=\"2025-07-10T15:22:09.952882578+09:00\" level=info msg=\"Firewalld: docker zone already exists, returning\"\nJul 10 15:22:09 fedora dockerd[177328]: time=\"2025-07-10T15:22:09.933501286+09:00\" level=error msg=\"failed to load container\" container=docker-mysqld-auth.log error=\"lstat /var/lib/docker/containers/docker-mysqld-auth.log/config.v2.json: not a directory\"</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">뒤에서 3번째 로그에 <b><span style=\"background-color: #f7f3f7; color: #ff0000;\">failed to find iptables\" error=\"exec: \\\"iptables\\\": executable file not found in $PATH\"</span></b>&nbsp;이</span><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">라는 부분이 보인다. 그대로 해석하면 $PATH에서 iptables 실행 파일을 찾지 못했다는 뜻이다. 즉 시스템에 iptables 바이너리 파일이 없는 것이다. 이는 페도라 42가 nft (netfilter) 필터 기반의 방화벽을 사용하기 때문에 iptables는 호환성을 위해서만 제공되며 기본적으로는 설치하지 않기 때문에 발생한다. 그래서 iptables-legacy 패키지를 설치하면 iptables 명령어가 제공되면서 해결되는 것이다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">2. 해결방법 : iptables-legacy의 설치</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">해결 방법은 앞서 서두에 밝힌 것처럼 iptables-legacy를 설치하면 된다. 설치 방법은 아래처럼 dnf 명령을 사용한다.</span></p>\n<pre id=\"code_1755098077952\" class=\"shell\" data-ke-language=\"shell\" data-ke-type=\"codeblock\"><code>$ sudo dnf -y install iptables-legacy</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">설치 후 which iptables 명령을 내려서 iptables가 PATH에 걸려있는지 확인해본다. docker를 재시작하고 iptables의 초기화 같은 것들을 해줘야 하는데, 귀찮으니까 그냥 재부팅하는 것이 편하다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">재부팅 후에 systemctl status docker로 다시 한번 Active 상태를 확인해보도록 한다. 대부분은 문제없이 잘 실행될 것이다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">히스토리</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">2025-08-14 처음 글 올림</span></p>",
        "contentSnippet": "리눅스 중에 최신 버전을 사용하는 페도라 리눅스42에 docker를 설치하면 에러가 발생하면서 실행되지 않는다. 결론만 말하면 iptables-legacy 패키지를 설치하고 리부트하면 손쉽게 해결 된다. 그러면 Fedora42에서 docker 의 오류 증상과 해결법에 대해서 살펴보도록 하겠다.\n참고로 페도라 리눅스 42는 2025년 4월 16일에 출시되었다.\nDocker on Fedora 42\n\n\n \n1. Fedora Linux 42에서 docker 오류\n페도라 리눅스 42에 docker-ce를 설치하고, enable and start를 하면 다음과 같이 에러가 발생한다. 아래는 명령어 실행시 발생하는 에러 상황을 캡쳐한 것이다.\n$ sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n$ sudo systemctl enable --now docker\nCreated symlink '/etc/systemd/system/multi-user.target.wants/docker.service' → '/usr/lib/systemd/system/docker.service'.\nJob for docker.service failed because the control process exited with error code.\nSee \"systemctl status docker.service\" and \"journalctl -xeu docker.service\" for details.\n\n$ sudo systemctl status docker\n× docker.service - Docker Application Container Engine\n     Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; preset: disabled)\n    Drop-In: /usr/lib/systemd/system/service.d\n             └─10-timeout-abort.conf\n     Active: failed (Result: exit-code) since Thu 2025-07-10 15:22:14 KST; 17s ago\n Invocation: 226f2df11c4e4b67bdd829aa732b9f1d\nTriggeredBy: × docker.socket\n       Docs: https://docs.docker.com\n    Process: 177352 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock (code=exited, status=1/FAILURE)\n   Main PID: 177352 (code=exited, status=1/FAILURE)\n\nJul 10 15:22:14 fedora systemd[1]: docker.service: Scheduled restart job, restart counter is at 3.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Start request repeated too quickly.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Failed with result 'exit-code'.\nJul 10 15:22:14 fedora systemd[1]: Failed to start docker.service - Docker Application Container Engine.\n먼저 dnf로 docker-ce를 비롯한 5개의 패키지를 설치한 뒤에, systemctl enable --now docker로 실행하였다. 그런데 systemctl status docker로 확인해보니 Active 상태에 failed (Result: exit-code)로 표시되어있다.\n좀 더 자세한 정보를 얻기 위해 journalctl로 최근 30개의 docker unit 관련 로그를 살펴보았다.\n$ sudo journalctl -u docker -rn 30\nJul 10 15:22:14 fedora systemd[1]: Failed to start docker.service - Docker Application Container Engine.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Failed with result 'exit-code'.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Start request repeated too quickly.\nJul 10 15:22:14 fedora systemd[1]: docker.service: Scheduled restart job, restart counter is at 3.\nJul 10 15:22:12 fedora systemd[1]: Failed to start docker.service - Docker Application Container Engine.\nJul 10 15:22:12 fedora systemd[1]: docker.service: Failed with result 'exit-code'.\nJul 10 15:22:12 fedora systemd[1]: docker.service: Main process exited, code=exited, status=1/FAILURE\nJul 10 15:22:12 fedora dockerd[177352]: failed to start daemon: Error initializing network controller: error obtaining controller instance: failed to register \"bridge\" driver: failed to create NAT chain DOCKER: COMMAND_FAILED: INVALID_IPV: 'ipv4' is not a valid backend or is unavailable\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.245077759+09:00\" level=info msg=\"stopping event stream following graceful shutdown\" error=\"<nil>\" module=libcontainerd namespace=moby\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.221133353+09:00\" level=warning msg=\"failed to find iptables\" error=\"exec: \\\"iptables\\\": executable file not found in $PATH\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.219303872+09:00\" level=info msg=\"Firewalld: docker zone already exists, returning\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.185940349+09:00\" level=error msg=\"failed to load container\" container=docker-mysqld-auth.log error=\"lstat /var/lib/docker/containers/docker-mysqld-auth.log/config.v2.json: not a directory\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.185855977+09:00\" level=info msg=\"Loading containers: start.\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.179171737+09:00\" level=info msg=\"[graphdriver] using prior storage driver: overlay2\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.125838950+09:00\" level=info msg=\"Creating a containerd client\" address=/run/containerd/containerd.sock timeout=1m0s\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.117090429+09:00\" level=info msg=\"detected 127.0.0.53 nameserver, assuming systemd-resolved, so using resolv.conf: /run/systemd/resolve/resolv.conf\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.116958491+09:00\" level=info msg=\"CDI directory does not exist, skipping: failed to monitor for changes: no such file or directory\" dir=/etc/cdi\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.116944136+09:00\" level=info msg=\"CDI directory does not exist, skipping: failed to monitor for changes: no such file or directory\" dir=/var/run/cdi\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.116850954+09:00\" level=info msg=\"OTEL tracing is not configured, using no-op tracer provider\"\nJul 10 15:22:12 fedora dockerd[177352]: time=\"2025-07-10T15:22:12.116388190+09:00\" level=info msg=\"Starting up\"\nJul 10 15:22:12 fedora systemd[1]: Starting docker.service - Docker Application Container Engine...\nJul 10 15:22:12 fedora systemd[1]: docker.service: Scheduled restart job, restart counter is at 2.\nJul 10 15:22:09 fedora systemd[1]: Failed to start docker.service - Docker Application Container Engine.\nJul 10 15:22:09 fedora systemd[1]: docker.service: Failed with result 'exit-code'.\nJul 10 15:22:09 fedora systemd[1]: docker.service: Main process exited, code=exited, status=1/FAILURE\n==> 여기 아래 부분이 중요한 로그\nJul 10 15:22:09 fedora dockerd[177328]: failed to start daemon: Error initializing network controller: error obtaining controller instance: failed to register \"bridge\" driver: failed to create NAT chain DOCKER: COMMAND_FAILED: INVALID_IPV: 'ipv4' is not a valid backend or is unavailable\nJul 10 15:22:09 fedora dockerd[177328]: time=\"2025-07-10T15:22:09.980772122+09:00\" level=info msg=\"stopping event stream following graceful shutdown\" error=\"<nil>\" module=libcontainerd namespace=moby\nJul 10 15:22:09 fedora dockerd[177328]: time=\"2025-07-10T15:22:09.954760374+09:00\" level=warning msg=\"failed to find iptables\" error=\"exec: \\\"iptables\\\": executable file not found in $PATH\"\nJul 10 15:22:09 fedora dockerd[177328]: time=\"2025-07-10T15:22:09.952882578+09:00\" level=info msg=\"Firewalld: docker zone already exists, returning\"\nJul 10 15:22:09 fedora dockerd[177328]: time=\"2025-07-10T15:22:09.933501286+09:00\" level=error msg=\"failed to load container\" container=docker-mysqld-auth.log error=\"lstat /var/lib/docker/containers/docker-mysqld-auth.log/config.v2.json: not a directory\"\n뒤에서 3번째 로그에 failed to find iptables\" error=\"exec: \\\"iptables\\\": executable file not found in $PATH\" 이라는 부분이 보인다. 그대로 해석하면 $PATH에서 iptables 실행 파일을 찾지 못했다는 뜻이다. 즉 시스템에 iptables 바이너리 파일이 없는 것이다. 이는 페도라 42가 nft (netfilter) 필터 기반의 방화벽을 사용하기 때문에 iptables는 호환성을 위해서만 제공되며 기본적으로는 설치하지 않기 때문에 발생한다. 그래서 iptables-legacy 패키지를 설치하면 iptables 명령어가 제공되면서 해결되는 것이다.\n \n2. 해결방법 : iptables-legacy의 설치\n해결 방법은 앞서 서두에 밝힌 것처럼 iptables-legacy를 설치하면 된다. 설치 방법은 아래처럼 dnf 명령을 사용한다.\n$ sudo dnf -y install iptables-legacy\n설치 후 which iptables 명령을 내려서 iptables가 PATH에 걸려있는지 확인해본다. docker를 재시작하고 iptables의 초기화 같은 것들을 해줘야 하는데, 귀찮으니까 그냥 재부팅하는 것이 편하다.\n재부팅 후에 systemctl status docker로 다시 한번 Active 상태를 확인해보도록 한다. 대부분은 문제없이 잘 실행될 것이다.\n \n히스토리\n2025-08-14 처음 글 올림",
        "guid": "http://sunyzero.tistory.com/317",
        "categories": [
          "컴퓨터 관련/리눅스(유닉스) 일반",
          "docker on Fedora42",
          "Fedora42",
          "iptables",
          "iptables-legacy",
          "도커 페도라 리눅스",
          "페도라42"
        ],
        "isoDate": "2025-08-13T15:19:40.000Z"
      }
    ]
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "Claude Code 101",
        "link": "https://sungjk.github.io/2025/08/09/claude-code-101.html",
        "pubDate": "2025-08-09T00:00:00+00:00",
        "content": "\n            \n            &lt;p&gt;회사에서 AI 도구를 자유롭게 활용할 수 있도록 지원해 준 덕분에, 그동안 Cursor, Cline, Copilot 등 다양한 코딩 에이전트를 활용해 개발 생산성을 높일 수 있었습니다. 그러던 중 지난 2025년 6월 24일 Anthropic에서 터미널 기반의 코딩 에이전트인 Claude Code를 정식 출시했습니다.&lt;/p&gt;\n\n&lt;p&gt;터미널은 개발자가 컴퓨터와 직접 대화를 나눌 수 있는 창구라서 떼려야 뗄 수 없지만, GUI의 도움을 받아 개발 하다보면 터미널에 익숙하지 않을 수 있습니다. GUI가 편하기도 하고요. 그래서 별도 GUI 인터페이스를 갖추고 있는 Cursor, Cline 같은 도구를 사용해 오던 입장에서, 처음에 Claude Code 컨셉만 들었을땐 마냥 불편할 것만 같았습니다.&lt;/p&gt;\n\n&lt;p&gt;그런데 막상 써보니 인터페이스가 터미널이라 굉장히 가벼울 뿐 아니라, 특정 IDE에 종속되지 않고 어디서든 쓸 수 있다는 점이 장점으로 느껴졌습니다. 특히 JVM 환경에서 주로 개발하다 보니, 프로젝트 인덱싱, 컴파일, 빌드 등의 과정이 Cursor나 Cline에서는 다소 불편하게 느껴졌는데, Claude Code는 IntelliJ의 터미널에서 실행되니 마치 플러그인 하나 설치해 쓰는 듯한 경험이었습니다. 그래서 Cursor를 주로 사용하던 저는 이제 Claude Code만 쓰는 사람이 되었습니다.&lt;/p&gt;\n\n&lt;p&gt;코딩 에이전트를 포함한 AI 기술은 하루가 다르게 빠르게 발전하고 있습니다. 일주일, 한 달만 지나도 새로운 기술과 모델이 나오고, 이전 것은 금세 시야에서 사라집니다. 개발자는 그때마다 새로운 경험을 맞이하게 됩니다. Cursor, Cline 같은 도구를 쓰면서 이 다음에 뭐가 나올까 궁금했는데 Claude Code가 하나의 변곡점이 될 거라는 느낌을 받았습니다.&lt;/p&gt;\n\n&lt;p&gt;혼자서 스터디도 하고 사내 엔지니어들과 이야기를 나누면서 Claude Code를 더 잘 써보기 위한 방법들을 하나 둘 찾아나갔고, 지난 달 전사 테크 올핸즈에서 ‘&lt;strong&gt;한 번 쓰고 끝이 아니다. 끊임없이 진화하는 코딩 에이전트 활용법&lt;/strong&gt;’ 이라는 주제로 Claude Code 사용 방법에 대해 공유했습니다.&lt;/p&gt;\n\n&lt;p&gt;결국 코딩 에이전트를 사용하는 목적 중 하나는 생산성을 극대화 시키기 위함인데, 코딩 에이전트에게 무언가 시키고 나면 다시 제가 직접 수정하는 일이 생겼고 이건 목적에서 조금은 벗어난다는 생각이 들었습니다. ‘이럴 거면 내가 짜는 게 낫지‘ 라는 결론으로 이어질 수도 있고요. 그래서 Claude Code를 더 잘 활용하기 위해 Rules, Custom commands, Hooks 등을 작성했고, 머지 않아 또 다른 패러다임에 변화가 올거라 믿지만, 개인 블로그에도 간단하게 기록차 남겨봅니다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;claude-code-101&quot;&gt;Claude Code 101&lt;/h1&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-1.png&quot; alt=&quot;claude-code-101-1&quot; title=&quot;claude-code-101-1&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;다들 첫 출근날과 처음으로 업무 받은 날을 기억하나요? 만약 어떤 회사에 입사를 했는데 팀에 나 혼자라고 가정해봅시다. 업무를 받았으니 무언가 해야 되는데 참고할 만한 문서가 있긴 한데 많이 부실합니다. 그리고 작성된 코드 양은 너무 많아서 어디 부터 봐야 할 지 모르는 상황입니다. 이럴때 우리는 어떻게 해야할까요?&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-2.png&quot; alt=&quot;claude-code-101-2&quot; title=&quot;claude-code-101-2&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;‘어떤 것부터 알면 될까?’ 생각이 들텐데, 실제로는 내가 뭘 알아야 하는지도 모르는 상태입니다. 아는게 있어야 뭘 모르는지도 알게 될테니까요. 그렇다면 이 상황을 어떻게 해결하면 좋을까요? 간단한 방법은 2가지가 있습니다. 누군가에게 일단 물어보거나, 스스로 알아갈 때까지 고뇌하는 것입니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-3.png&quot; alt=&quot;claude-code-101-3&quot; title=&quot;claude-code-101-3&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;이런 상황을 해결하기 위해 회사는 ‘신규 입사자 온보딩’ 프로그램을 운영하곤 합니다. 신규 입사자가 왔을때 여기는 어떤 문화를 가지고 있고, 시스템은 어떻고, 나는 어떤 일을 어떻게 하면 되는지 방법을 알려줍니다. 새로 온 동료가 그동안의 오래된 제품에 대한 맥락과 팀의 일하는 방식을 알아가기 까지 스스로 한다면 더 오랜 시간이 걸릴텐데, 잘 정리되어 있는 문서나 참고해야 할 요소들이 많다면 더 빠르게 알아갈 수 있을거에요.&lt;/p&gt;\n\n&lt;p&gt;코딩 에이전트도 이와 크게 다르지 않습니다. 무작정 코딩 에이전트에게 ‘1000원 할인 코드 작성해줘’ 라고 하면 코딩 에이전트는 구체적인 정보를 찾기 위해 더 많은 시간을 쓰고 알지 못한다면 추측을 하기도 합니다. 그래서 코딩 에이전트가 나와 수년을 함께 한 동료가 되기 위해서는 알고 있는 모든 것을 알려줘야 합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-4.png&quot; alt=&quot;claude-code-101-4&quot; title=&quot;claude-code-101-4&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;우리 팀의 프로젝트 아키텍처는 어떤 형태로 구성되어 있는지 자세히 알려줘야 합니다. 의존성 규칙과 방향이 강제되어 있다면 이 또한 반드시 알려줘야 합니다.&lt;/p&gt;\n\n&lt;p&gt;코드 컨벤션이 있다면 이 또한 자세히 가이드 해줘야 합니다. 팀에서 사용중인 코드 컨벤션이 없다면 각 언어의 공식 컨벤션이라도 알려주면 좋습니다. 저희 팀은 클래스 네이밍에 Alistair Cockburn이 언급한 원칙인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;the name should be the goal as a short active verb phrase&lt;/code&gt; 을 준수합니다. 이름만 보고도 그 클래스의 역할과 책임이 명확히 드러나야 하고, 역할과 책임 그리고 의미있는 접미사/접두사를 사용합니다. 그래서 대부분의 클래스는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;동사 + 역할 + 접미사&lt;/code&gt; 의 조합으로 이름을 짓고 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-5.png&quot; alt=&quot;claude-code-101-5&quot; title=&quot;claude-code-101-5&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;팀에서 사용중인 테스트 작성법이 있다면 이것도 자세히 알려줍니다. 저희 팀은 외부 의존성이 필요한 Mocking Library 사용을 지양하고, 조금 더 Production Code 변화에 유연하게 대응하기 위해 Test Double을 직접 만들어서 사용합니다. 그리고 테스트 코드를 구조화해서 가독성, 유지보수성, 일관성을 끌어 올리기 위해 AAA(Arrange, Act, Assert) 패턴을 사용합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-6.png&quot; alt=&quot;claude-code-101-6&quot; title=&quot;claude-code-101-6&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;커밋을 작성할 때에도 기본 형식이 있습니다. 커밋 메시지의 맨 앞에는 이슈 티켓을 입력하고, 그 다음에는 어떤 유형의 커밋이고 어떤 모듈의 변화인지, 그리고 마지막에는 커밋의 설명을 간단하게 작성합니다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GZ-{티켓번호} {타입}({모듈}): {설명}&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-7.png&quot; alt=&quot;claude-code-101-7&quot; title=&quot;claude-code-101-7&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;Claude Code는 우리 팀이 이렇게 일한다는 사실을 알고 있을까요? 알 수 없으면 알려주면 됩니다. 팀의 일하는 방식을 알려주면 그 순간 수년을 함께 한 동료가 될 수 있습니다. 애자일하게 일하는 조직일수록 일하는 방식은 날이 갈수록 개선됩니다. 저희 팀도 마찬가지로 일하는 방식과 가이드가 그 때의 상황에 따라 더 나은 방향으로 계속해서 개선되고 있습니다. 과거에는 맞았지만 지금은 다를 수 있으니까요. 미래에는 더 다를거고요.&lt;/p&gt;\n\n&lt;p&gt;마찬가지로, 다양한 코드 작성 Rule을 통해 Claude Code는 어떻게 코드를 작성하면 되는지 알게 될텐데, 이 Rule은 계속해서 개선되고 진화해야 합니다. 개발 팀미팅에서 클래스 네이밍하는 방식이 변경됐다면 Rule에도 업데이트 하고 Claude Code에게도 이 사실을 알려줘야 합니다. 그래서 우스갯소리로 가이드 문서(Rule)가 얼마나 자주 업데이트 되는지 보면, 코딩 에이전트를 얼마나 잘 활용하고 있는지 알 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-8.png&quot; alt=&quot;claude-code-101-8&quot; title=&quot;claude-code-101-8&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;그래서 Claude Code 뿐만 아니라 코딩 에이전트에게 무언가 프롬프팅을 완료하고 나면 끝이 아니라 이제부터가 시작입니다. 코드를 원하는대로 잘 작성했다면 다음번에도 이처럼 잘 할 수 있도록 가이드 해줘야 합니다. 코딩 에이전트에게 준 피드백과 쌓여가는 Rule은 곧, 복리의 마법으로 다가올 것이라는걸 믿는게 중요하다고 생각합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-9.png&quot; alt=&quot;claude-code-101-9&quot; title=&quot;claude-code-101-9&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;발표 자료 중간에 Claude Code 기본 사용법과 소소한 팁이 있는데, 이 글에 담기엔 단순 정보라서 PDF를 참고해주시면 좋겠습니다.&lt;/p&gt;\n\n&lt;p&gt;아무튼.. 가장 중요한 것은 꺾이지 않는 마음입니다. 코딩 에이전트에게 무언가 명령을 했는데 잘 알아듣지 못하고 엉뚱한 코드를 작성한다거나 내가 작성하는 스타일과 다르게 코드를 작성한다거나, 마음에 들지 않을때 있습니다. 이 때 우리는 ‘그냥 내가 하는게 낫겠다’ 라는 생각이 들면서 갈림길에 놓이게 됩니다.&lt;/p&gt;\n\n&lt;p&gt;이 때 한 숨 크게 고르시고, 어떤게 잘못되었는지 어떻게 작성해야 하는지 알려주어야 합니다. 이건 마치 일을 빠르게 처리하지 못하고 있는 신규 입사자 동료에게 답답함을 느끼는 것과 같다고 생각합니다. 수정이 필요한 부분이 있다면 직접 고치지 않고, 어떤 코드를 어떻게 작성하면 되는지 알려주어야 합니다. 잘 해냈다면 다음 번에는 어떻게 하면 되는지 피드백을 통해 가이드와 Rule을 갱신합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-10.png&quot; alt=&quot;claude-code-101-10&quot; title=&quot;claude-code-101-10&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;마지막으로, 이 발표에서 전달하려고 했던 메시지 메시지입니다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;코딩 에이전트가 못하면 가르치자&lt;/li&gt;\n  &lt;li&gt;코딩 에이전트가 해냈으면 회고하자&lt;/li&gt;\n  &lt;li&gt;그리고 복리의 마법을 믿자&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;\n\n&lt;p&gt;코딩 에이전트를 접하고 나서 정말 많은 시간을 코드 작성법(Rule)을 만드는 일에 할애했습니다. 팀에서 수십개 서비스를 모노레포에 관리중인데, 오래전부터 아키틱체와 코드 컨벤션을 잘 유지하고 가이드를 다듬어 놓아서 초기 Rule을 작성하는데에 시간은 오래 걸렸지만 어렵지 않았습니다.&lt;/p&gt;\n\n&lt;p&gt;지금은 Claude Code를 사용하면서 N개의 일을 병렬로 할 수 있는 환경이 되었습니다. 커밋 메시지를 작성한다던가, Pull Request 본문을 작성하는 등 코드를 작성하고 나서 반복적으로 하는 작업들은 더이상 제가 하지 않습니다. Claude Code가 일을 잘 해서 그런것도 있지만, 초기에 Rule 셋팅하는 시간을 많이 투자한 덕분이라고 생각합니다.&lt;/p&gt;\n\n&lt;p&gt;단순한 기능을 만들 때에는 가이드 없이 Claude Code를 바로 사용해도 좋다고 생각합니다. 하지만 조금 복잡해지거나 도메인 규칙을 이해해야 한다거나, 우리 팀만의 가이드에 따라 코드 작성이 필요하다면 바로 사용하는건 멈추고 Rule 부터 정돈하기를 권장합니다.&lt;/p&gt;\n\n&lt;p&gt;마지막으로, 작성된 모든 내용은 제 개인적인 의견이고 소수의 인원이 작업을 하는 곳보다 다수의 인원이 같은 Repository에 작업을 할 때에는 더 빛을 보는 방법이니 참고해주세요. 모두 복리의 마법을 믿고 코딩 대탈출 하셨으면 좋겠습니다!&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;P.S. 발표 자료는 일부 내용 제거된 형태로 업로드 되어 있습니다. &lt;a href=&quot;https://github.com/sungjk/sungjk.github.io/tree/master/images/2025/08/09/ClaudeCode101_20250809.pdf&quot;&gt;ClaudeCode101_20250809.pdf&lt;/a&gt;를 참고하시면 됩니다. 궁금하신 점이 있으면 편하게 메일로 연락 주세요.&lt;/li&gt;\n&lt;/ul&gt;\n\n            \n          ",
        "contentSnippet": "<p>회사에서 AI 도구를 자유롭게 활용할 수 있도록 지원해 준 덕분에, 그동안 Cursor, Cline, Copilot 등 다양한 코딩 에이전트를 활용해 개발 생산성을 높일 수 있었습니다. 그러던 중 지난 2025년 6월 24일 Anthropic에서 터미널 기반의 코딩 에이전트인 Claude Code를 정식 출시했습니다.</p>\n\n<p>터미널은 개발자가 컴퓨터와 직접 대화를 나눌 수 있는 창구라서 떼려야 뗄 수 없지만, GUI의 도움을 받아 개발 하다보면 터미널에 익숙하지 않을 수 있습니다. GUI가 편하기도 하고요. 그래서 별도 GUI 인터페이스를 갖추고 있는 Cursor, Cline 같은 도구를 사용해 오던 입장에서, 처음에 Claude Code 컨셉만 들었을땐 마냥 불편할 것만 같았습니다.</p>\n\n<p>그런데 막상 써보니 인터페이스가 터미널이라 굉장히 가벼울 뿐 아니라, 특정 IDE에 종속되지 않고 어디서든 쓸 수 있다는 점이 장점으로 느껴졌습니다. 특히 JVM 환경에서 주로 개발하다 보니, 프로젝트 인덱싱, 컴파일, 빌드 등의 과정이 Cursor나 Cline에서는 다소 불편하게 느껴졌는데, Claude Code는 IntelliJ의 터미널에서 실행되니 마치 플러그인 하나 설치해 쓰는 듯한 경험이었습니다. 그래서 Cursor를 주로 사용하던 저는 이제 Claude Code만 쓰는 사람이 되었습니다.</p>\n\n<p>코딩 에이전트를 포함한 AI 기술은 하루가 다르게 빠르게 발전하고 있습니다. 일주일, 한 달만 지나도 새로운 기술과 모델이 나오고, 이전 것은 금세 시야에서 사라집니다. 개발자는 그때마다 새로운 경험을 맞이하게 됩니다. Cursor, Cline 같은 도구를 쓰면서 이 다음에 뭐가 나올까 궁금했는데 Claude Code가 하나의 변곡점이 될 거라는 느낌을 받았습니다.</p>\n\n<p>혼자서 스터디도 하고 사내 엔지니어들과 이야기를 나누면서 Claude Code를 더 잘 써보기 위한 방법들을 하나 둘 찾아나갔고, 지난 달 전사 테크 올핸즈에서 ‘<strong>한 번 쓰고 끝이 아니다. 끊임없이 진화하는 코딩 에이전트 활용법</strong>’ 이라는 주제로 Claude Code 사용 방법에 대해 공유했습니다.</p>\n\n<p>결국 코딩 에이전트를 사용하는 목적 중 하나는 생산성을 극대화 시키기 위함인데, 코딩 에이전트에게 무언가 시키고 나면 다시 제가 직접 수정하는 일이 생겼고 이건 목적에서 조금은 벗어난다는 생각이 들었습니다. ‘이럴 거면 내가 짜는 게 낫지‘ 라는 결론으로 이어질 수도 있고요. 그래서 Claude Code를 더 잘 활용하기 위해 Rules, Custom commands, Hooks 등을 작성했고, 머지 않아 또 다른 패러다임에 변화가 올거라 믿지만, 개인 블로그에도 간단하게 기록차 남겨봅니다.</p>\n\n<hr />\n\n<h1 id=\"claude-code-101\">Claude Code 101</h1>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-1.png\" alt=\"claude-code-101-1\" title=\"claude-code-101-1\" class=\"center-image\" /></p>\n\n<p>다들 첫 출근날과 처음으로 업무 받은 날을 기억하나요? 만약 어떤 회사에 입사를 했는데 팀에 나 혼자라고 가정해봅시다. 업무를 받았으니 무언가 해야 되는데 참고할 만한 문서가 있긴 한데 많이 부실합니다. 그리고 작성된 코드 양은 너무 많아서 어디 부터 봐야 할 지 모르는 상황입니다. 이럴때 우리는 어떻게 해야할까요?</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-2.png\" alt=\"claude-code-101-2\" title=\"claude-code-101-2\" class=\"center-image\" /></p>\n\n<p>‘어떤 것부터 알면 될까?’ 생각이 들텐데, 실제로는 내가 뭘 알아야 하는지도 모르는 상태입니다. 아는게 있어야 뭘 모르는지도 알게 될테니까요. 그렇다면 이 상황을 어떻게 해결하면 좋을까요? 간단한 방법은 2가지가 있습니다. 누군가에게 일단 물어보거나, 스스로 알아갈 때까지 고뇌하는 것입니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-3.png\" alt=\"claude-code-101-3\" title=\"claude-code-101-3\" class=\"center-image\" /></p>\n\n<p>이런 상황을 해결하기 위해 회사는 ‘신규 입사자 온보딩’ 프로그램을 운영하곤 합니다. 신규 입사자가 왔을때 여기는 어떤 문화를 가지고 있고, 시스템은 어떻고, 나는 어떤 일을 어떻게 하면 되는지 방법을 알려줍니다. 새로 온 동료가 그동안의 오래된 제품에 대한 맥락과 팀의 일하는 방식을 알아가기 까지 스스로 한다면 더 오랜 시간이 걸릴텐데, 잘 정리되어 있는 문서나 참고해야 할 요소들이 많다면 더 빠르게 알아갈 수 있을거에요.</p>\n\n<p>코딩 에이전트도 이와 크게 다르지 않습니다. 무작정 코딩 에이전트에게 ‘1000원 할인 코드 작성해줘’ 라고 하면 코딩 에이전트는 구체적인 정보를 찾기 위해 더 많은 시간을 쓰고 알지 못한다면 추측을 하기도 합니다. 그래서 코딩 에이전트가 나와 수년을 함께 한 동료가 되기 위해서는 알고 있는 모든 것을 알려줘야 합니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-4.png\" alt=\"claude-code-101-4\" title=\"claude-code-101-4\" class=\"center-image\" /></p>\n\n<p>우리 팀의 프로젝트 아키텍처는 어떤 형태로 구성되어 있는지 자세히 알려줘야 합니다. 의존성 규칙과 방향이 강제되어 있다면 이 또한 반드시 알려줘야 합니다.</p>\n\n<p>코드 컨벤션이 있다면 이 또한 자세히 가이드 해줘야 합니다. 팀에서 사용중인 코드 컨벤션이 없다면 각 언어의 공식 컨벤션이라도 알려주면 좋습니다. 저희 팀은 클래스 네이밍에 Alistair Cockburn이 언급한 원칙인 <code class=\"language-plaintext highlighter-rouge\">the name should be the goal as a short active verb phrase</code> 을 준수합니다. 이름만 보고도 그 클래스의 역할과 책임이 명확히 드러나야 하고, 역할과 책임 그리고 의미있는 접미사/접두사를 사용합니다. 그래서 대부분의 클래스는 <code class=\"language-plaintext highlighter-rouge\">동사 + 역할 + 접미사</code> 의 조합으로 이름을 짓고 있습니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-5.png\" alt=\"claude-code-101-5\" title=\"claude-code-101-5\" class=\"center-image\" /></p>\n\n<p>팀에서 사용중인 테스트 작성법이 있다면 이것도 자세히 알려줍니다. 저희 팀은 외부 의존성이 필요한 Mocking Library 사용을 지양하고, 조금 더 Production Code 변화에 유연하게 대응하기 위해 Test Double을 직접 만들어서 사용합니다. 그리고 테스트 코드를 구조화해서 가독성, 유지보수성, 일관성을 끌어 올리기 위해 AAA(Arrange, Act, Assert) 패턴을 사용합니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-6.png\" alt=\"claude-code-101-6\" title=\"claude-code-101-6\" class=\"center-image\" /></p>\n\n<p>커밋을 작성할 때에도 기본 형식이 있습니다. 커밋 메시지의 맨 앞에는 이슈 티켓을 입력하고, 그 다음에는 어떤 유형의 커밋이고 어떤 모듈의 변화인지, 그리고 마지막에는 커밋의 설명을 간단하게 작성합니다.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">GZ-{티켓번호} {타입}({모듈}): {설명}</code></li>\n</ul>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-7.png\" alt=\"claude-code-101-7\" title=\"claude-code-101-7\" class=\"center-image\" /></p>\n\n<p>Claude Code는 우리 팀이 이렇게 일한다는 사실을 알고 있을까요? 알 수 없으면 알려주면 됩니다. 팀의 일하는 방식을 알려주면 그 순간 수년을 함께 한 동료가 될 수 있습니다. 애자일하게 일하는 조직일수록 일하는 방식은 날이 갈수록 개선됩니다. 저희 팀도 마찬가지로 일하는 방식과 가이드가 그 때의 상황에 따라 더 나은 방향으로 계속해서 개선되고 있습니다. 과거에는 맞았지만 지금은 다를 수 있으니까요. 미래에는 더 다를거고요.</p>\n\n<p>마찬가지로, 다양한 코드 작성 Rule을 통해 Claude Code는 어떻게 코드를 작성하면 되는지 알게 될텐데, 이 Rule은 계속해서 개선되고 진화해야 합니다. 개발 팀미팅에서 클래스 네이밍하는 방식이 변경됐다면 Rule에도 업데이트 하고 Claude Code에게도 이 사실을 알려줘야 합니다. 그래서 우스갯소리로 가이드 문서(Rule)가 얼마나 자주 업데이트 되는지 보면, 코딩 에이전트를 얼마나 잘 활용하고 있는지 알 수 있습니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-8.png\" alt=\"claude-code-101-8\" title=\"claude-code-101-8\" class=\"center-image\" /></p>\n\n<p>그래서 Claude Code 뿐만 아니라 코딩 에이전트에게 무언가 프롬프팅을 완료하고 나면 끝이 아니라 이제부터가 시작입니다. 코드를 원하는대로 잘 작성했다면 다음번에도 이처럼 잘 할 수 있도록 가이드 해줘야 합니다. 코딩 에이전트에게 준 피드백과 쌓여가는 Rule은 곧, 복리의 마법으로 다가올 것이라는걸 믿는게 중요하다고 생각합니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-9.png\" alt=\"claude-code-101-9\" title=\"claude-code-101-9\" class=\"center-image\" /></p>\n\n<p>발표 자료 중간에 Claude Code 기본 사용법과 소소한 팁이 있는데, 이 글에 담기엔 단순 정보라서 PDF를 참고해주시면 좋겠습니다.</p>\n\n<p>아무튼.. 가장 중요한 것은 꺾이지 않는 마음입니다. 코딩 에이전트에게 무언가 명령을 했는데 잘 알아듣지 못하고 엉뚱한 코드를 작성한다거나 내가 작성하는 스타일과 다르게 코드를 작성한다거나, 마음에 들지 않을때 있습니다. 이 때 우리는 ‘그냥 내가 하는게 낫겠다’ 라는 생각이 들면서 갈림길에 놓이게 됩니다.</p>\n\n<p>이 때 한 숨 크게 고르시고, 어떤게 잘못되었는지 어떻게 작성해야 하는지 알려주어야 합니다. 이건 마치 일을 빠르게 처리하지 못하고 있는 신규 입사자 동료에게 답답함을 느끼는 것과 같다고 생각합니다. 수정이 필요한 부분이 있다면 직접 고치지 않고, 어떤 코드를 어떻게 작성하면 되는지 알려주어야 합니다. 잘 해냈다면 다음 번에는 어떻게 하면 되는지 피드백을 통해 가이드와 Rule을 갱신합니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-10.png\" alt=\"claude-code-101-10\" title=\"claude-code-101-10\" class=\"center-image\" /></p>\n\n<p>마지막으로, 이 발표에서 전달하려고 했던 메시지 메시지입니다.</p>\n\n<ul>\n  <li>코딩 에이전트가 못하면 가르치자</li>\n  <li>코딩 에이전트가 해냈으면 회고하자</li>\n  <li>그리고 복리의 마법을 믿자</li>\n</ul>\n\n<hr />\n\n<h3 id=\"마치며\">마치며</h3>\n\n<p>코딩 에이전트를 접하고 나서 정말 많은 시간을 코드 작성법(Rule)을 만드는 일에 할애했습니다. 팀에서 수십개 서비스를 모노레포에 관리중인데, 오래전부터 아키틱체와 코드 컨벤션을 잘 유지하고 가이드를 다듬어 놓아서 초기 Rule을 작성하는데에 시간은 오래 걸렸지만 어렵지 않았습니다.</p>\n\n<p>지금은 Claude Code를 사용하면서 N개의 일을 병렬로 할 수 있는 환경이 되었습니다. 커밋 메시지를 작성한다던가, Pull Request 본문을 작성하는 등 코드를 작성하고 나서 반복적으로 하는 작업들은 더이상 제가 하지 않습니다. Claude Code가 일을 잘 해서 그런것도 있지만, 초기에 Rule 셋팅하는 시간을 많이 투자한 덕분이라고 생각합니다.</p>\n\n<p>단순한 기능을 만들 때에는 가이드 없이 Claude Code를 바로 사용해도 좋다고 생각합니다. 하지만 조금 복잡해지거나 도메인 규칙을 이해해야 한다거나, 우리 팀만의 가이드에 따라 코드 작성이 필요하다면 바로 사용하는건 멈추고 Rule 부터 정돈하기를 권장합니다.</p>\n\n<p>마지막으로, 작성된 모든 내용은 제 개인적인 의견이고 소수의 인원이 작업을 하는 곳보다 다수의 인원이 같은 Repository에 작업을 할 때에는 더 빛을 보는 방법이니 참고해주세요. 모두 복리의 마법을 믿고 코딩 대탈출 하셨으면 좋겠습니다!</p>\n\n<ul>\n  <li>P.S. 발표 자료는 일부 내용 제거된 형태로 업로드 되어 있습니다. <a href=\"https://github.com/sungjk/sungjk.github.io/tree/master/images/2025/08/09/ClaudeCode101_20250809.pdf\">ClaudeCode101_20250809.pdf</a>를 참고하시면 됩니다. 궁금하신 점이 있으면 편하게 메일로 연락 주세요.</li>\n</ul>",
        "guid": "https://sungjk.github.io/2025/08/09/claude-code-101.html",
        "isoDate": "2025-08-09T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": [
      {
        "creator": "고명환",
        "title": "빌 게이츠가 선택한 미래 : 기후테크 - 기후테크로 지구를 구하는 스타트업 5選",
        "link": "https://brunch.co.kr/@@LOc/307",
        "pubDate": "Wed, 13 Aug 2025 03:00:13 GMT",
        "author": "고명환",
        "content": "2050년 넷제로(Net-Zero), 단순한 구호가 아닙니다. 전 세계가 기후위기에 대응하기 위해 본격적으로 탄소중립을 위한 기술혁신, 즉 *기후테크(Climate Tec)*에 투자하고 있습니다. 그리고 이 흐름으 중심에는 마이크로소프트 창업자이자 세계적인 추자자, 빌 게이츠가 있습니다. 그는 자신의 기수 천드인 브레이크스루 에너지 벤처스(Breakthro<img src= \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2FLOc%2Fimage%2FPipX3jzj6-JwiiqWQXyuvb8_VCI\" width=\"500\" />",
        "contentSnippet": "2050년 넷제로(Net-Zero), 단순한 구호가 아닙니다. 전 세계가 기후위기에 대응하기 위해 본격적으로 탄소중립을 위한 기술혁신, 즉 *기후테크(Climate Tec)*에 투자하고 있습니다. 그리고 이 흐름으 중심에는 마이크로소프트 창업자이자 세계적인 추자자, 빌 게이츠가 있습니다. 그는 자신의 기수 천드인 브레이크스루 에너지 벤처스(Breakthro",
        "guid": "https://brunch.co.kr/@@LOc/307",
        "isoDate": "2025-08-13T03:00:13.000Z"
      },
      {
        "creator": "고명환",
        "title": "'소버린 AI' 국가대표 5개 기업의 전략을 파헤치다.",
        "link": "https://brunch.co.kr/@@LOc/306",
        "pubDate": "Tue, 12 Aug 2025 03:00:07 GMT",
        "author": "고명환",
        "content": "2025년 8월, 정부는 우리나라 AI 기술 주권 확보를 위해 '소버린 AI 프로젝트'를 본격 추진하며, 이를 선도할 국가대표 AI 기업 5개 컨소시엄을 선정했습니다. 단순한 기술 개발이 아닌, 글로벌 수준의 초거대 AI 파운데이션 모델을 국산화하고 이를 산업 전반에 적용하여 대한민국의 디지털 경쟁력을 한 단계 끌어올리는 것이 이 프로젝트의 핵심 목표입니다<img src= \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2FLOc%2Fimage%2FXU0-eXYBaXKdZLWMIJ2HPCBpPXw.JPG\" width=\"500\" />",
        "contentSnippet": "2025년 8월, 정부는 우리나라 AI 기술 주권 확보를 위해 '소버린 AI 프로젝트'를 본격 추진하며, 이를 선도할 국가대표 AI 기업 5개 컨소시엄을 선정했습니다. 단순한 기술 개발이 아닌, 글로벌 수준의 초거대 AI 파운데이션 모델을 국산화하고 이를 산업 전반에 적용하여 대한민국의 디지털 경쟁력을 한 단계 끌어올리는 것이 이 프로젝트의 핵심 목표입니다",
        "guid": "https://brunch.co.kr/@@LOc/306",
        "isoDate": "2025-08-12T03:00:07.000Z"
      }
    ]
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "ChatGPT, 단순 챗봇에서 '완전한 생산성 도구'로의 진화 (엑셀, PPT 편집 기능 개발중)",
        "link": "http://muzbox.tistory.com/483642",
        "pubDate": "Thu, 14 Aug 2025 12:22:19 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483642#entry483642comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; color: #333; box-sizing: border-box;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><b>ChatGPT가 엑셀, 파워포인트를 직접 편집한다고?</b> 이제 별도 프로그램 없이 ChatGPT 안에서 모든 문서 작업이 가능해집니다. 마이크로소프트 오피스의 시대, 정말 끝나는 걸까요?</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GPT OFFICE 지원.jpg\" data-origin-width=\"1536\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/OwZz0/btsPRoc8qX8/sXIryIkdisLgB6BOKawaOk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/OwZz0/btsPRoc8qX8/sXIryIkdisLgB6BOKawaOk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/OwZz0/btsPRoc8qX8/sXIryIkdisLgB6BOKawaOk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FOwZz0%2FbtsPRoc8qX8%2FsXIryIkdisLgB6BOKawaOk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"CHAT GPT, OFFICE 기능 개발중\" loading=\"lazy\" width=\"1536\" height=\"1024\" data-filename=\"GPT OFFICE 지원.jpg\" data-origin-width=\"1536\" data-origin-height=\"1024\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;보고서 시즌만 되면 한숨부터 나오시나요? ChatGPT로 아이디어를 얻고, 다시 엑셀을 열어 데이터를 정리하고, 파워포인트로 옮겨 디자인하느라 지치셨죠. 저도 매번 그 과정이 번거로웠는데요. 이제 이런 불편함이 곧 사라질 것 같습니다. OpenAI가 ChatGPT에 엑셀과 파워포인트 파일을 직접 만들고 편집하는, 그야말로 '혁명적인' 기능을 추가할 예정이라고 하거든요!&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>이제 ChatGPT가 MS 오피스를 대체할까?&nbsp;</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">현재 ChatGPT를 이용해 스프레드시트나 슬라이드를 생성하면, 결과물은 사실상 Excel과 PowerPoint 파일의 '일반 텍스트 버전'에 가까웠습니다. 사용자는 이 텍스트 기반 결과물을 다운로드하거나 플랫폼의 Canvas 모드에서 수동으로 편집해야 했죠. 하지만 이 방식은 기능적 한계가 명확했습니다. 예를 들어, <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">스프레드시트에서는 복잡한 수식 지원이 부족했고, 프레젠테이션에서는 고급 시각 요소나 애니메이션을 구현할 수 없었습니다.</span> 결국 아이디어 구상 단계에서는 유용했지만, 완성도 높은 문서를 만들기 위해서는 다시 MS 오피스 프로그램을 열어 수작업을 해야만 했습니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">하지만 곧 공개될 업데이트는 이 모든 과정을 완전히 뒤바꿀 겁니다. 사용자는 이제 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">별도의 프로그램을 켤 필요 없이, ChatGPT 대화창 안에서 바로 .xlsx(엑셀)와 .pptx(파워포인트) 파일을 열고, 만들고, 편집</span>할 수 있게 됩니다. 마치 웹 브라우저에서 구글 독스나 오피스 365를 쓰는 것처럼 말이죠. 이제 정말 '원스톱' 문서 작업이 가능해지는 셈입니다.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />이게 어떻게 가능하냐고요? 사실 마이크로소프트는 엑셀(.xlsx)과 파워포인트(.pptx) 파일 형식을 오픈소스로 공개하고 있습니다. 덕분에 OpenAI는 법적인 문제 없이 MS 오피스와 완벽하게 호환되는 편집 환경을 구축할 수 있는 것이죠.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>AI 에이전트, 단순 반복 업무의 종말  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">단순히 파일 편집 기능만 추가되는 것이 아닙니다. OpenAI는 한 단계 더 나아가, 데이터 수집부터 분석, 보고서 작성까지 전 과정을 자동화하는 <b>AI 에이전트</b>를 개발하고 있습니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">예를 들어, \"지난 분기 우리 회사 온라인 매출 데이터를 분석해서, 핵심만 요약한 보고서를 파워포인트로 만들어줘\" 라고 명령만 내리면, AI 에이전트가 사내 데이터베이스에 접근해 데이터를 수집하고, 엑셀 파일로 보기 좋게 정리한 뒤, 핵심 내용을 담은 파워포인트 슬라이드까지 자동으로 생성해주는 시대가 열리는 겁니다. <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">단순 데이터 정리나 보고서 디자인에 쏟았던 시간이 획기적으로 줄어드는 거죠.</span></p>\n<div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 물론 아직은 시작 단계!</b><br />이 기능의 정확한 출시 시기는 아직 공개되지 않았습니다. 또한, 복잡한 매크로나 일부 고급 기능까지 완벽하게 지원할지는 지켜봐야 합니다. 하지만 업무 생산성의 패러다임을 바꿀 거라는 점은 분명해 보입니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>오피스 AI 에이전트, 춘추전국시대 개막 ⚔️</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">사실 오피스 문서 작업을 자동화하려는 시도는 OpenAI가 처음은 아닙니다. 이미 시장에는 강력한 경쟁자들이 존재합니다. 특히 <b>Genspark</b>는 AI 에이전트 중심의 올인원 워크스페이스로, 한 번의 프롬프트로 슬라이드, 시트, 문서를 모두 생성하고 편집할 수 있습니다. Super Agent라는 핵심 기술을 통해 자료 수집, 분석, 시각화는 물론 PPTX, PDF, Excel 파일로 내보내기까지 자동화하며 시장을 선도하고 있죠. 이들 서비스의 특징을 비교해볼까요?</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">구분</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">ChatGPT</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">Genspark (genspark.ai)</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">SKY WORK</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>파일 형식/호환</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">보도상 .xlsx/.pptx 네이티브 편집 지원 준비 중</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">슬라이드 PPTX/PDF, 표&middot;차트 Excel 내보내기 공식 지원</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Docs/Slides/Sheets 제작, 멀티모달 콘텐츠 지향</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>편집 방식</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">UI에서 스프레드시트/프레젠테이션 생성&middot;편집 가능 예정</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">AI Slides/Sheets/Docs 자체 편집기 제공 (프롬프트 &rarr; 결과)</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">클라우드 편집 + AI 보조 (실시간 동시 편집 수준 확인 필요)</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>에이전트/자동화</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">ChatGPT Agent: 웹 탐색, 코드 실행, 편집 가능한 결과물 생성</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Super Agent: 다중 LLM&middot;도구 오케스트레이션, 다운로드/전화걸기 등</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Workspace Agents 콘셉트 (문서, 슬라이드, 웹 등)</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>멀티모달</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">텍스트/웹/코드/표&middot;차트 생성, 커넥터 확대</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">이미지/영상 생성 포함 올인원 워크스페이스</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">텍스트&middot;이미지&middot;표&middot;그래프 결합 제작 지향</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>특기/강점</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Office 호환 네이티브 처리(예정) + 기업 커넥터 확대</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">에이전트 중심 자동화, PPTX/PDF/Excel 내보내기 활용</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">분석+제작 일체형 워크플로우</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>주의/제약</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">일부 기능은 정식 출시&middot;범위가 확정되기 전 단계</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">내보내기 품질/세부 서식은 콘텐츠에 따라 편차</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">음성명령&middot;일정관리 등은 핵심 기능 아님(업데이트 확인 필요)</td>\n</tr>\n</tbody>\n</table>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">ChatGPT의 가장 큰 차별점은 역시 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">기존 MS오피스 파일과의 완벽한 호환성</span>과 강력한 자연어 처리 능력을 바탕으로 한 '대화형 작업 환경'입니다. 이는 Office 라이선스 비용에 부담을 느끼는 스타트업이나 중소기업, 그리고 AI를 활용한 업무 혁신을 꿈꾸는 많은 직장인에게 매력적인 대안이 될 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>사용자가 얻는 실질적인 이점은?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">그렇다면 이 기능이 우리에게 가져다줄 구체적인 변화는 무엇일까요? 크게 세 가지로 나누어 볼 수 있습니다.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>시간 절약 및 효율성 증대:</b> 데이터 정리, 차트 생성, 슬라이드 디자인 등 시간이 많이 소요되던 작업을 AI가 대신 처리해줍니다. 사용자는 더 중요한 의사결정과 창의적인 기획에 집중할 수 있게 됩니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>비용 절감:</b> 특히 중소기업이나 스타트업의 경우, 고가의 오피스 소프트웨어 라이선스 비용을 절감할 수 있는 강력한 대안이 될 수 있습니다. 클라우드 기반으로 작동하므로 별도의 설치나 유지보수 비용도 들지 않습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>데이터 접근성 향상:</b> 복잡한 엑셀 함수나 데이터 분석 툴에 익숙하지 않은 사람도 자연어 명령을 통해 손쉽게 데이터 인사이트를 얻고, 이를 시각화된 보고서로 만들 수 있게 됩니다. 데이터 전문가가 아니어도 누구나 데이터 기반의 업무를 수행할 수 있게 되는 것이죠.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>미래 전망: 통합 생태계의 시작  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">OpenAI의 야심은 여기서 그치지 않을 것으로 보입니다. 최근에는 OpenAI가 자체 웹 브라우저를 개발하고 있다는 소식도 들려오고 있습니다. 만약 이 모든 것이 사실이라면, 우리는 거대한 그림을 그려볼 수 있습니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자체 브라우저로 웹에서 정보를 검색하고, 그 데이터를 AI 에이전트가 실시간으로 분석하여 ChatGPT 내에서 엑셀과 파워포인트로 보고서를 완성하는 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">완전히 새로운 '통합 업무 생태계'</span>가 탄생하는 것입니다. 이는 구글 워크스페이스나 마이크로소프트 365가 제공하는 경험을 뛰어넘는, 진정한 의미의 AI 중심 워크플로우가 될 수 있습니다.</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<style>\n        .single-summary-card-container {\n            font-family: 'Noto Sans KR', sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px 10px;\n            background-color: #f0f2f5;\n            margin: 20px 0;\n        }\n        .single-summary-card {\n            width: 100%;\n            max-width: 700px;\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n            padding: 25px;\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            border: 1px solid #e0e0e0;\n            box-sizing: border-box;\n            height: auto;\n        }\n        .single-summary-card .card-header {\n            display: flex;\n            align-items: center;\n            border-bottom: 2px solid #1a73e8;\n            padding-bottom: 12px;\n            margin-bottom: 12px;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 34px;\n            color: #1a73e8;\n            margin-right: 14px;\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 26px;\n            color: #1a73e8;\n            margin: 0;\n            line-height: 1.3;\n            font-weight: 700;\n        }\n        .single-summary-card .card-content {\n            flex-grow: 1;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-around;\n            font-size: 17px;\n            line-height: 1.65;\n            color: #333;\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 10px;\n        }\n        .single-summary-card .card-content strong {\n            color: #005cb2;\n            font-weight: 600;\n        }\n        .single-summary-card .card-content .highlight {\n            background-color: #fffde7;\n            padding: 2px 6px;\n            border-radius: 3px;\n            font-weight: bold;\n        }\n        .single-summary-card .card-footer {\n            font-size: 14px;\n            color: #777;\n            text-align: center;\n            padding-top: 12px;\n            border-top: 1px dashed #ddd;\n            margin-top: auto;\n        }\n        @media (max-width: 768px) {\n            .single-summary-card { padding: 18px; }\n            .single-summary-card .card-header-icon { font-size: 28px; margin-right: 10px; }\n            .single-summary-card .card-header h3 { font-size: 20px; }\n            .single-summary-card .card-content { font-size: 15px; line-height: 1.5; }\n        }\n        @media (max-width: 480px) {\n            .single-summary-card { padding: 15px; }\n            .single-summary-card .card-header h3 { font-size: 18px; }\n            .single-summary-card .card-content { font-size: 14px; line-height: 1.4; }\n        }\n    </style>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">ChatGPT 오피스 기능 핵심 요약</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 네이티브 편집:</b> <span class=\"highlight\">별도 프로그램 없이 ChatGPT 내에서 엑셀, 파워포인트 생성 및 편집 가능.</span></div>\n<div class=\"section\"><b>  AI 에이전트:</b> <span class=\"highlight\">단순 명령만으로 데이터 분석부터 보고서 작성까지 전 과정 자동화.</span></div>\n<div class=\"section\"><b>  비용 및 시간 절감:</b> <span class=\"highlight\">소프트웨어 라이선스 비용을 줄이고, 반복 업무 시간을 획기적으로 단축.</span></div>\n<div class=\"section\"><b>  통합 생태계:</b> <span class=\"highlight\">자체 브라우저와 결합하여 검색-분석-문서 작성을 잇는 새로운 워크플로우 제시.</span></div>\n</div>\n<div class=\"card-footer\">이제 AI가 당신의 직장 동료가 되는 시대가 오고 있습니다.</div>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 이 기능은 언제부터 사용할 수 있나요?</div>\n<div style=\"padding-left: 15px;\">A: 아직 OpenAI에서 정확한 출시 시기를 발표하지 않았습니다. 하지만 업계에서는 연내 또는 내년 초를 예상하고 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 유료 구독자(ChatGPT Plus)만 사용할 수 있나요?</div>\n<div style=\"padding-left: 15px;\">A: 초기에는 유료 구독자에게 먼저 공개될 가능성이 높습니다. 하지만 OpenAI의 정책에 따라 향후 무료 사용자에게도 제한적으로 기능이 제공될 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 마이크로소프트의 코파일럿(Copilot)과는 무엇이 다른가요?</div>\n<div style=\"padding-left: 15px;\">A: 코파일럿은 MS 365 앱 '내부'에서 작동하는 AI 비서에 가깝습니다. 반면 ChatGPT는 '자체 플랫폼'에서 MS 오피스 파일을 직접 다루는 방식이라, MS 생태계에서 독립적이라는 큰 차이가 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 회사 기밀 데이터나 개인정보를 다뤄도 안전할까요?</div>\n<div style=\"padding-left: 15px;\">A: 민감한 정보를 다룰 때는 항상 주의가 필요합니다. OpenAI는 데이터 보안을 강화하고 있지만, 기업용으로 사용하기 전에는 반드시 회사의 보안 정책을 확인하고, ChatGPT Enterprise와 같은 보안이 강화된 버전을 검토하는 것이 좋습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: OpenAI가 자체 웹 브라우저를 만든다는 게 사실인가요?</div>\n<div style=\"padding-left: 15px;\">A: 관련 보도가 나오고 있으며, 사실일 가능성이 높게 점쳐지고 있습니다. 만약 자체 브라우저와 오피스 편집 기능이 결합된다면, 정보 검색부터 문서 작성까지 하나의 플랫폼에서 모두 해결하는 강력한 생태계가 만들어질 수 있습니다.</div>\n</div>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">AI가 우리의 일하는 방식을 바꾸고 있는 지금, ChatGPT의 이번 업데이트는 그 변화의 중심에 서 있습니다. 단순 반복 업무는 AI에게 맡기고, 우리는 더 창의적이고 본질적인 일에 집중할 수 있는 날이 머지않았네요. 여러분은 이 새로운 기능을 어떻게 활용하고 싶으신가요? 댓글로 의견을 나눠주세요!  </p>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"ChatGPT의 엑셀, 파워포인트 편집 기능은 언제부터 사용할 수 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  아직 OpenAI에서 정확한 출시 시기를 발표하지 않았습니다. 하지만 업계에서는 연내 또는 내년 초를 예상하고 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"유료 구독자(ChatGPT Plus)만 사용할 수 있는 기능인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  초기에는 유료 구독자에게 먼저 공개될 가능성이 높습니다. 하지만 OpenAI의 정책에 따라 향후 무료 사용자에게도 제한적으로 기능이 제공될 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"마이크로소프트의 코파일럿(Copilot)과는 무엇이 다른가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  코파일럿은 MS 365 앱 '내부'에서 작동하는 AI 비서에 가깝습니다. 반면 ChatGPT는 '자체 플랫폼'에서 MS 오피스 파일을 직접 다루는 방식이라, MS 생태계에서 독립적이라는 큰 차이가 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"회사 기밀 데이터나 개인정보를 다뤄도 안전할까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  민감한 정보를 다룰 때는 항상 주의가 필요합니다. OpenAI는 데이터 보안을 강화하고 있지만, 기업용으로 사용하기 전에는 반드시 회사의 보안 정책을 확인하고, ChatGPT Enterprise와 같은 보안이 강화된 버전을 검토하는 것이 좋습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"OpenAI가 자체 웹 브라우저를 만든다는 게 사실인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  관련 보도가 나오고 있으며, 사실일 가능성이 높게 점쳐지고 있습니다. 만약 자체 브라우저와 오피스 편집 기능이 결합된다면, 정보 검색부터 문서 작성까지 하나의 플랫폼에서 모두 해결하는 강력한 생태계가 만들어질 수 있습니다.\"\n                }\n            }\n        ]\n    }\n    </script>\n</div>",
        "contentSnippet": "ChatGPT가 엑셀, 파워포인트를 직접 편집한다고? 이제 별도 프로그램 없이 ChatGPT 안에서 모든 문서 작업이 가능해집니다. 마이크로소프트 오피스의 시대, 정말 끝나는 걸까요?\n\n\n \n 보고서 시즌만 되면 한숨부터 나오시나요? ChatGPT로 아이디어를 얻고, 다시 엑셀을 열어 데이터를 정리하고, 파워포인트로 옮겨 디자인하느라 지치셨죠. 저도 매번 그 과정이 번거로웠는데요. 이제 이런 불편함이 곧 사라질 것 같습니다. OpenAI가 ChatGPT에 엑셀과 파워포인트 파일을 직접 만들고 편집하는, 그야말로 '혁명적인' 기능을 추가할 예정이라고 하거든요! \n \n이제 ChatGPT가 MS 오피스를 대체할까? \n현재 ChatGPT를 이용해 스프레드시트나 슬라이드를 생성하면, 결과물은 사실상 Excel과 PowerPoint 파일의 '일반 텍스트 버전'에 가까웠습니다. 사용자는 이 텍스트 기반 결과물을 다운로드하거나 플랫폼의 Canvas 모드에서 수동으로 편집해야 했죠. 하지만 이 방식은 기능적 한계가 명확했습니다. 예를 들어, 스프레드시트에서는 복잡한 수식 지원이 부족했고, 프레젠테이션에서는 고급 시각 요소나 애니메이션을 구현할 수 없었습니다. 결국 아이디어 구상 단계에서는 유용했지만, 완성도 높은 문서를 만들기 위해서는 다시 MS 오피스 프로그램을 열어 수작업을 해야만 했습니다.\n하지만 곧 공개될 업데이트는 이 모든 과정을 완전히 뒤바꿀 겁니다. 사용자는 이제 별도의 프로그램을 켤 필요 없이, ChatGPT 대화창 안에서 바로 .xlsx(엑셀)와 .pptx(파워포인트) 파일을 열고, 만들고, 편집할 수 있게 됩니다. 마치 웹 브라우저에서 구글 독스나 오피스 365를 쓰는 것처럼 말이죠. 이제 정말 '원스톱' 문서 작업이 가능해지는 셈입니다.\n  알아두세요!\n이게 어떻게 가능하냐고요? 사실 마이크로소프트는 엑셀(.xlsx)과 파워포인트(.pptx) 파일 형식을 오픈소스로 공개하고 있습니다. 덕분에 OpenAI는 법적인 문제 없이 MS 오피스와 완벽하게 호환되는 편집 환경을 구축할 수 있는 것이죠.\n \nAI 에이전트, 단순 반복 업무의 종말  \n단순히 파일 편집 기능만 추가되는 것이 아닙니다. OpenAI는 한 단계 더 나아가, 데이터 수집부터 분석, 보고서 작성까지 전 과정을 자동화하는 AI 에이전트를 개발하고 있습니다.\n예를 들어, \"지난 분기 우리 회사 온라인 매출 데이터를 분석해서, 핵심만 요약한 보고서를 파워포인트로 만들어줘\" 라고 명령만 내리면, AI 에이전트가 사내 데이터베이스에 접근해 데이터를 수집하고, 엑셀 파일로 보기 좋게 정리한 뒤, 핵심 내용을 담은 파워포인트 슬라이드까지 자동으로 생성해주는 시대가 열리는 겁니다. 단순 데이터 정리나 보고서 디자인에 쏟았던 시간이 획기적으로 줄어드는 거죠.\n⚠️ 물론 아직은 시작 단계!\n이 기능의 정확한 출시 시기는 아직 공개되지 않았습니다. 또한, 복잡한 매크로나 일부 고급 기능까지 완벽하게 지원할지는 지켜봐야 합니다. 하지만 업무 생산성의 패러다임을 바꿀 거라는 점은 분명해 보입니다.\n \n오피스 AI 에이전트, 춘추전국시대 개막 ⚔️\n사실 오피스 문서 작업을 자동화하려는 시도는 OpenAI가 처음은 아닙니다. 이미 시장에는 강력한 경쟁자들이 존재합니다. 특히 Genspark는 AI 에이전트 중심의 올인원 워크스페이스로, 한 번의 프롬프트로 슬라이드, 시트, 문서를 모두 생성하고 편집할 수 있습니다. Super Agent라는 핵심 기술을 통해 자료 수집, 분석, 시각화는 물론 PPTX, PDF, Excel 파일로 내보내기까지 자동화하며 시장을 선도하고 있죠. 이들 서비스의 특징을 비교해볼까요?\n구분\nChatGPT\nGenspark (genspark.ai)\nSKY WORK\n\n\n\n\n파일 형식/호환\n보도상 .xlsx/.pptx 네이티브 편집 지원 준비 중\n슬라이드 PPTX/PDF, 표·차트 Excel 내보내기 공식 지원\nDocs/Slides/Sheets 제작, 멀티모달 콘텐츠 지향\n\n\n편집 방식\nUI에서 스프레드시트/프레젠테이션 생성·편집 가능 예정\nAI Slides/Sheets/Docs 자체 편집기 제공 (프롬프트 → 결과)\n클라우드 편집 + AI 보조 (실시간 동시 편집 수준 확인 필요)\n\n\n에이전트/자동화\nChatGPT Agent: 웹 탐색, 코드 실행, 편집 가능한 결과물 생성\nSuper Agent: 다중 LLM·도구 오케스트레이션, 다운로드/전화걸기 등\nWorkspace Agents 콘셉트 (문서, 슬라이드, 웹 등)\n\n\n멀티모달\n텍스트/웹/코드/표·차트 생성, 커넥터 확대\n이미지/영상 생성 포함 올인원 워크스페이스\n텍스트·이미지·표·그래프 결합 제작 지향\n\n\n특기/강점\nOffice 호환 네이티브 처리(예정) + 기업 커넥터 확대\n에이전트 중심 자동화, PPTX/PDF/Excel 내보내기 활용\n분석+제작 일체형 워크플로우\n\n\n주의/제약\n일부 기능은 정식 출시·범위가 확정되기 전 단계\n내보내기 품질/세부 서식은 콘텐츠에 따라 편차\n음성명령·일정관리 등은 핵심 기능 아님(업데이트 확인 필요)\n\n\n\nChatGPT의 가장 큰 차별점은 역시 기존 MS오피스 파일과의 완벽한 호환성과 강력한 자연어 처리 능력을 바탕으로 한 '대화형 작업 환경'입니다. 이는 Office 라이선스 비용에 부담을 느끼는 스타트업이나 중소기업, 그리고 AI를 활용한 업무 혁신을 꿈꾸는 많은 직장인에게 매력적인 대안이 될 수 있습니다.\n \n사용자가 얻는 실질적인 이점은?  \n그렇다면 이 기능이 우리에게 가져다줄 구체적인 변화는 무엇일까요? 크게 세 가지로 나누어 볼 수 있습니다.\n시간 절약 및 효율성 증대: 데이터 정리, 차트 생성, 슬라이드 디자인 등 시간이 많이 소요되던 작업을 AI가 대신 처리해줍니다. 사용자는 더 중요한 의사결정과 창의적인 기획에 집중할 수 있게 됩니다.\n비용 절감: 특히 중소기업이나 스타트업의 경우, 고가의 오피스 소프트웨어 라이선스 비용을 절감할 수 있는 강력한 대안이 될 수 있습니다. 클라우드 기반으로 작동하므로 별도의 설치나 유지보수 비용도 들지 않습니다.\n데이터 접근성 향상: 복잡한 엑셀 함수나 데이터 분석 툴에 익숙하지 않은 사람도 자연어 명령을 통해 손쉽게 데이터 인사이트를 얻고, 이를 시각화된 보고서로 만들 수 있게 됩니다. 데이터 전문가가 아니어도 누구나 데이터 기반의 업무를 수행할 수 있게 되는 것이죠.\n \n미래 전망: 통합 생태계의 시작  \nOpenAI의 야심은 여기서 그치지 않을 것으로 보입니다. 최근에는 OpenAI가 자체 웹 브라우저를 개발하고 있다는 소식도 들려오고 있습니다. 만약 이 모든 것이 사실이라면, 우리는 거대한 그림을 그려볼 수 있습니다.\n자체 브라우저로 웹에서 정보를 검색하고, 그 데이터를 AI 에이전트가 실시간으로 분석하여 ChatGPT 내에서 엑셀과 파워포인트로 보고서를 완성하는 완전히 새로운 '통합 업무 생태계'가 탄생하는 것입니다. 이는 구글 워크스페이스나 마이크로소프트 365가 제공하는 경험을 뛰어넘는, 진정한 의미의 AI 중심 워크플로우가 될 수 있습니다.\n \n \nChatGPT 오피스 기능 핵심 요약\n✨ 네이티브 편집: 별도 프로그램 없이 ChatGPT 내에서 엑셀, 파워포인트 생성 및 편집 가능.\n  AI 에이전트: 단순 명령만으로 데이터 분석부터 보고서 작성까지 전 과정 자동화.\n  비용 및 시간 절감: 소프트웨어 라이선스 비용을 줄이고, 반복 업무 시간을 획기적으로 단축.\n  통합 생태계: 자체 브라우저와 결합하여 검색-분석-문서 작성을 잇는 새로운 워크플로우 제시.\n이제 AI가 당신의 직장 동료가 되는 시대가 오고 있습니다.\n자주 묻는 질문 ❓\nQ: 이 기능은 언제부터 사용할 수 있나요?\nA: 아직 OpenAI에서 정확한 출시 시기를 발표하지 않았습니다. 하지만 업계에서는 연내 또는 내년 초를 예상하고 있습니다.\nQ: 유료 구독자(ChatGPT Plus)만 사용할 수 있나요?\nA: 초기에는 유료 구독자에게 먼저 공개될 가능성이 높습니다. 하지만 OpenAI의 정책에 따라 향후 무료 사용자에게도 제한적으로 기능이 제공될 수 있습니다.\nQ: 마이크로소프트의 코파일럿(Copilot)과는 무엇이 다른가요?\nA: 코파일럿은 MS 365 앱 '내부'에서 작동하는 AI 비서에 가깝습니다. 반면 ChatGPT는 '자체 플랫폼'에서 MS 오피스 파일을 직접 다루는 방식이라, MS 생태계에서 독립적이라는 큰 차이가 있습니다.\nQ: 회사 기밀 데이터나 개인정보를 다뤄도 안전할까요?\nA: 민감한 정보를 다룰 때는 항상 주의가 필요합니다. OpenAI는 데이터 보안을 강화하고 있지만, 기업용으로 사용하기 전에는 반드시 회사의 보안 정책을 확인하고, ChatGPT Enterprise와 같은 보안이 강화된 버전을 검토하는 것이 좋습니다.\nQ: OpenAI가 자체 웹 브라우저를 만든다는 게 사실인가요?\nA: 관련 보도가 나오고 있으며, 사실일 가능성이 높게 점쳐지고 있습니다. 만약 자체 브라우저와 오피스 편집 기능이 결합된다면, 정보 검색부터 문서 작성까지 하나의 플랫폼에서 모두 해결하는 강력한 생태계가 만들어질 수 있습니다.\nAI가 우리의 일하는 방식을 바꾸고 있는 지금, ChatGPT의 이번 업데이트는 그 변화의 중심에 서 있습니다. 단순 반복 업무는 AI에게 맡기고, 우리는 더 창의적이고 본질적인 일에 집중할 수 있는 날이 머지않았네요. 여러분은 이 새로운 기능을 어떻게 활용하고 싶으신가요? 댓글로 의견을 나눠주세요!  \n\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"ChatGPT의 엑셀, 파워포인트 편집 기능은 언제부터 사용할 수 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  아직 OpenAI에서 정확한 출시 시기를 발표하지 않았습니다. 하지만 업계에서는 연내 또는 내년 초를 예상하고 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"유료 구독자(ChatGPT Plus)만 사용할 수 있는 기능인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  초기에는 유료 구독자에게 먼저 공개될 가능성이 높습니다. 하지만 OpenAI의 정책에 따라 향후 무료 사용자에게도 제한적으로 기능이 제공될 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"마이크로소프트의 코파일럿(Copilot)과는 무엇이 다른가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  코파일럿은 MS 365 앱 '내부'에서 작동하는 AI 비서에 가깝습니다. 반면 ChatGPT는 '자체 플랫폼'에서 MS 오피스 파일을 직접 다루는 방식이라, MS 생태계에서 독립적이라는 큰 차이가 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"회사 기밀 데이터나 개인정보를 다뤄도 안전할까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  민감한 정보를 다룰 때는 항상 주의가 필요합니다. OpenAI는 데이터 보안을 강화하고 있지만, 기업용으로 사용하기 전에는 반드시 회사의 보안 정책을 확인하고, ChatGPT Enterprise와 같은 보안이 강화된 버전을 검토하는 것이 좋습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"OpenAI가 자체 웹 브라우저를 만든다는 게 사실인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  관련 보도가 나오고 있으며, 사실일 가능성이 높게 점쳐지고 있습니다. 만약 자체 브라우저와 오피스 편집 기능이 결합된다면, 정보 검색부터 문서 작성까지 하나의 플랫폼에서 모두 해결하는 강력한 생태계가 만들어질 수 있습니다.\"\n                }\n            }\n        ]\n    }",
        "guid": "http://muzbox.tistory.com/483642",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "ai 보고서",
          "ai 생산성 도구",
          "ChatGPT",
          "MS 오피스 대체",
          "OpenAI 업데이트",
          "네이티브 파일 편집",
          "업무 자동화",
          "엑셀 편집",
          "오피스 에이전트",
          "파워포인트 편집"
        ],
        "isoDate": "2025-08-14T03:22:19.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "GPT-5 프롬프트 엔지니어링, 최적화된 무료 GPTS 공개",
        "link": "http://muzbox.tistory.com/483641",
        "pubDate": "Wed, 13 Aug 2025 08:18:52 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483641#entry483641comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><b>GPT-5 시대, 프롬프트 엔지니어링의 새로운 시작</b> GPT-5의 진화된 아키텍처에 맞춘 프롬프트 기법과 GPT-4와의 실질적인 차이점을 명확히 짚어드립니다. 새로운 AI 시대에 필요한 두 가지 맞춤형 GPTs도 함께 소개합니다.</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GPT5 프롬프트.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/lbvRe/btsPNOQOGpM/9JkNYBwZWrQovXfhDKHkAK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/lbvRe/btsPNOQOGpM/9JkNYBwZWrQovXfhDKHkAK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/lbvRe/btsPNOQOGpM/9JkNYBwZWrQovXfhDKHkAK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FlbvRe%2FbtsPNOQOGpM%2F9JkNYBwZWrQovXfhDKHkAK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"GPT-5 프롬프트 엔지니어링, 최적화된 무료 GPTS 공개\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"GPT5 프롬프트.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;최근 출시된 GPT-5, 다들 들어보셨죠? 저는 AI 기술의 발전 속도를 보면서 늘 놀라곤 하는데요. 특히 GPT-5는 기존 버전과 단순한 성능 향상을 넘어, 프롬프트 작성 방식에도 실질적인 변화를 가져왔다고 해요. 기존의 프롬프트 습관으로는 GPT-5의 잠재력을 100% 끌어내기 어렵게 된 거죠. 그래서 오늘은 저와 함께 GPT-5 시대에 맞는 새로운 프롬프트 기법과 GPT-4와의 결정적인 차이점을 속 시원하게 파헤쳐 보려고 합니다. 복잡한 용어는 최대한 쉽게 풀어 설명할 테니, 걱정 말고 따라오세요!&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>GPT-5 vs GPT-4, 프롬프트의 본질과 변화  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">결론부터 말하면, GPT-5는 기존 프롬프트의 기본 원칙은 그대로 유지하고 있어요. 즉, 명확하고 구체적인 지시, 충분한 맥락 제공, 그리고 제약조건 명시는 여전히 유효한 베스트 프랙티스입니다. 단계적 사고를 유도하는 문구나 출력 형식을 명확하게 지정하는 것도 여전히 효과적이고요. 하지만 GPT-5는 내부적인 구조와 기능이 달라지면서 프롬프트 작성에 있어 몇 가지 중요한 차이점이 생겼습니다. 특히, GPT-5는 단일 모델처럼 보이지만 내부적으로 작업 특성에 맞춰 하위 모드/서브모델로 자동 라우팅되는 '통합 라우팅' 기능을 전제로 작동합니다. 이는 프롬프트에서 문제의 난이도, 정확성 요구사항, 검증 단계를 분명히 언급하면 모델이 더 적합한 추론 모드로 전환되어 품질이 좋아지는 것을 의미합니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">또한, GPT-5는 복잡한 과제에서 자동으로 더 많은 계산을 쓰는 '딥 리즈닝(Thinking)' 모드가 동작하도록 설계되어, 고난도 문제에서 오류가 줄었다는 보고가 있습니다. 모호하거나 위험한 요청에 전면 거부 대신 안전 범위 내에서 유용한 답을 주려는 '세이프 컴플리션' 경향도 강화되었습니다. 이 때문에, 프롬프트에서 '허용 범위'와 '금지 범위', 그리고 원하는 추상화 레벨을 명확히 지정하는 것이 중요해졌습니다. 이제는 장황한 스타일 지시 대신에 '말수/Verbosity' 같은 새로운 API 매개변수를 활용하거나, '프리셋 퍼스낼리티'를 통해 대상 독자와 톤을 짧게 지정하는 것만으로도 원하는 결과물을 얻을 수 있게 되었습니다.</p>\n<h3 style=\"font-size: 18px; color: #dd3333; margin: 20px 0 10px;\" data-ke-size=\"size23\"><b>GPT-4와 GPT-5 프롬프팅 가이드의 핵심 차이점 비교</b></h3>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">구분</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">GPT-4</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">GPT-5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">API 레벨 제어</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">프롬프트 내 텍스트 지시로만 제어</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">`reasoning_effort` (minimal/medium/high), `verbosity` (low/medium/high) 매개변수 제공</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">컨텍스트 재사용</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">각 API 호출마다 처음부터 추론 재시작</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Responses API로 이전 추론 컨텍스트 재사용 가능 (`previous_response_id`)</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">에이전트 기능</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">프롬프트로만 유도, 일관성 부족</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Tool Preambles로 체계화된 도구 호출 계획 및 진행상황 업데이트 자동화</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">도구 호출 제어</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">상대적으로 어려운 행동 패턴 제어</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">명확한 예산 설정 (\"최대 2회 호출\") 및 에이전트 열의도 정교한 제어</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">코딩 최적화</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">일반적인 코딩 가이드라인</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Next.js, TypeScript, Tailwind CSS 등 특정 프레임워크별 최적화 권장사항</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">자체 성찰</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">기본적인 성찰 패턴</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">XML 구조화된 체계적 성찰 방식 (`` 태그)</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">지시 민감성</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">모순 지시를 임의로 처리하는 경향</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">지시사항 충돌 시 더 많은 추론, 프롬프트 품질에 더 민감</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">구조화</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">기본적인 마크다운 활용</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">XML 태그 체계적 활용 권장 (``, `` 등)</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">속도 옵션</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">고정된 추론 속도</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Minimal Reasoning 모드로 지연시간 최소화 옵션 제공</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">성능 투명성</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">일반적인 개선사항 언급</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">구체적 벤치마크 점수 공개 (Tau-Bench 73.9% &rarr; 78.2%)</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">메타프롬프팅</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">수동 프롬프트 최적화</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">GPT-5가 자신의 프롬프트를 자동 최적화하는 기능</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">토큰 효율성</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">기본적인 효율성</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">Responses API 활용으로 대폭 향상된 토큰 효율성</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>실전 프롬프트 작성 팁: 더 짧고 강하게!  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5의 새로운 특성들을 이해했다면, 이제 실제 프롬프트를 어떻게 작성해야 하는지 궁금하실 텐데요. 기존의 장황하고 복잡한 프롬프트는 오히려 비효율적일 수 있습니다. GPT-5에서는 '짧고 강한' 프롬프트로 목표를 명확히 제시하는 것이 중요해요. 다음은 GPT-5에 최적화된 실전 프롬프트 팁입니다.</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>과업 정의 먼저:</b> \"목표-성공 기준-제약(예산/길이/톤)-산출 형식\"을 간결하게 명시하세요. 길고 복잡한 배경 설명보다, 무엇을 원하는지 명확히 하는 것이 훨씬 중요합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>난이도 힌트 제공:</b> \"고정확도 필요, 단계별 검증&middot;반례 점검 포함\"과 같은 문구를 통해 AI에게 추론의 깊이를 요구하세요. 이는 GPT-5의 딥 리즈닝 모드를 유도하는 효과적인 방법입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>안전 범위 지정:</b> \"법률 자문 아님, 공개 자료 근거만, 위험 요소는 일반 원칙으로\"와 같이 경계선을 명확히 지정하여 AI가 불필요한 회피를 줄이고 유용한 답변을 하도록 유도하세요.</li>\n<li style=\"margin-bottom: 8px;\"><b>파라미터 활용:</b> \"말수를 줄여라\" 같은 반복 지시 대신, `verbosity` 같은 전용 API 매개변수를 활용해 상세도와 길이를 조절하세요.</li>\n<li style=\"margin-bottom: 8px;\"><b>도구 사용 조건 명시:</b> \"최신 데이터 필요 시 검색 사용, 인용 근거 요약\"처럼 툴 사용 조건을 과제에 포함시켜 AI가 필요한 도구를 적절히 사용하도록 유도할 수 있습니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>고급 프롬프트 생성기 프로: 실용적인 프롬프트의 자동화  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5의 강력한 기능을 제대로 활용하려면 새로운 접근법이 필요해요. 그래서 저는 GPT-5의 특성에 최적화된 두 가지 맞춤형 GPTs를 만들고 스마트스토어에 등록했습니다. 먼저, '고급 프롬프트 생성기 프로'는 최신 LLM 최적화 기법을 기반으로, 에이전트 워크플로우, 코딩, 창작 활동 등 다양한 시나리오에 맞는 고품질 프롬프트를 자동 생성하는 전문 도구입니다. 이 GPTs는 사용자의 키워드만으로도 전문적인 프롬프트를 만들어내는 것이 특징이죠.</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #333; margin: 0 0 10px;\" data-ke-size=\"size23\"><b>  고급 프롬프트 생성기 프로의 특별한 기능</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>스마트 분류:</b> 사용자의 키워드 입력을 분석해 에이전트, 코딩, 창작, 분석 등 최적의 프롬프트 유형을 자동으로 식별합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>고급 최적화:</b> GPT-5에 새로 도입된 `reasoning_effort` (추론 수준)나 `verbosity` (상세도) 같은 첨단 매개변수를 활용하여 프롬프트를 최적화합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>성능 향상 팁:</b> 생성된 프롬프트와 함께 성능을 극대화할 수 있는 추가 팁과 모범 사례를 제공해줍니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>다중 도메인 지원:</b> 코딩, 분석, 창작, 비즈니스 자동화 등 다양한 분야의 작업을 포괄하여 지원합니다.</li>\n</ul>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">이 GPTs는 특히 에이전트 작업 시 맥락 수집 전략, 도구 호출 예산, 진행 상황 업데이트 형식 등을 명확하게 정의하여 AI의 자율성을 효과적으로 제어할 수 있도록 도와줍니다. 코딩 작업의 경우 Next.js, TypeScript와 같은 특정 프레임워크에 최적화된 프롬프트도 제공합니다.</p>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1755040650398\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ChatGPT - 고급 프롬프트 생성기 프로\" data-og-description=\"최신 LLM 최적화 기법을 기반으로 최적화된 프롬프트를 생성하는 전문 도구입니다. 에이전트 워크플로우, 코딩, 지시 따르기, 도구 호출 등 다양한 시나리오에 맞는 고품질 프롬프트를 생성하여 \" data-og-host=\"chatgpt.com\" data-og-source-url=\"https://chatgpt.com/g/g-689b3d4bbf608191b411d57635a6333e-gogeub-peurompeuteu-saengseonggi-peuro\" data-og-url=\"https://chatgpt.com/g/g-689b3d4bbf608191b411d57635a6333e-gogeub-peurompeuteu-saengseonggi-peuro\" data-og-image=\"\"><a href=\"https://chatgpt.com/g/g-689b3d4bbf608191b411d57635a6333e-gogeub-peurompeuteu-saengseonggi-peuro\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://chatgpt.com/g/g-689b3d4bbf608191b411d57635a6333e-gogeub-peurompeuteu-saengseonggi-peuro\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ChatGPT - 고급 프롬프트 생성기 프로</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">최신 LLM 최적화 기법을 기반으로 최적화된 프롬프트를 생성하는 전문 도구입니다. 에이전트 워크플로우, 코딩, 지시 따르기, 도구 호출 등 다양한 시나리오에 맞는 고품질 프롬프트를 생성하여</p>\n<p class=\"og-host\" data-ke-size=\"size16\">chatgpt.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>스마트 프롬프트 아키텍트: 복잡한 작업을 위한 설계 전문가  ️</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">다음으로 소개해 드릴 '스마트 프롬프트 아키텍트'는 GPT-5의 특성에 맞게 '실행 전 계획 단계', '검증 체크포인트'를 포함한 완전한 프롬프트를 설계해주는 전문가입니다. 단순히 요청을 나열하는 것이 아니라, AI가 작업을 해결하기 위한 체계적인 사고 프로세스를 갖추도록 돕는 것이죠. 이 GPTs는 사용자의 키워드를 분석해 작업 유형을 분류하고, GPT-5 모델 특성에 맞는 구조화된 프롬프트를 설계합니다.</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #333; margin: 0 0 10px;\" data-ke-size=\"size23\"><b>  스마트 프롬프트 아키텍트의 설계 원칙</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>계획 단계 포함:</b> 요청을 분해하고, 모호성을 식별하며, 구조화된 접근법을 취하는 계획 단계를 프롬프트에 명시합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>완전한 작업 해결 지향:</b> 모든 하위 작업을 식별하고 순차적 완료를 확인하는 프로세스를 프롬프트에 담아 완전한 문제 해결을 지향합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>XML 구조화:</b> `request`, `task_spec`, `instructions`, `constraints`와 같은 XML 태그를 활용하여 프롬프트의 명확성을 극대화합니다.</li>\n</ul>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">특히 블로그 콘텐츠 생성 요청 시에는 타겟 독자층 명확화, 콘텐츠 길이 및 형식 지정, 경쟁사 차별화 포인트, SEO 최적화 등을 자동으로 포함시켜줍니다. 이러한 구조화된 프롬프트는 AI 모델의 병렬 처리 능력을 활용할 수 있게 하여, 복잡한 작업을 효율적으로 수행하도록 돕습니다.</p>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1755040675304\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ChatGPT - 스마트 프롬프트 아키텍트\" data-og-description=\"키워드를 입력하면 최신 언어모델에 최적화된 구조화된 프롬프트를 자동 생성하는 전문 도구입니다. AI 모델의 특성에 맞춘 명확한 지시사항, 계획 단계, 검증 체크포인트를 포함한 완전한 프롬\" data-og-host=\"chatgpt.com\" data-og-source-url=\"https://chatgpt.com/g/g-689b44aa83548191b49c090e507e85ef-seumateu-peurompeuteu-akitegteu\" data-og-url=\"https://chatgpt.com/g/g-689b44aa83548191b49c090e507e85ef-seumateu-peurompeuteu-akitegteu\" data-og-image=\"\"><a href=\"https://chatgpt.com/g/g-689b44aa83548191b49c090e507e85ef-seumateu-peurompeuteu-akitegteu\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://chatgpt.com/g/g-689b44aa83548191b49c090e507e85ef-seumateu-peurompeuteu-akitegteu\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ChatGPT - 스마트 프롬프트 아키텍트</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">키워드를 입력하면 최신 언어모델에 최적화된 구조화된 프롬프트를 자동 생성하는 전문 도구입니다. AI 모델의 특성에 맞춘 명확한 지시사항, 계획 단계, 검증 체크포인트를 포함한 완전한 프롬</p>\n<p class=\"og-host\" data-ke-size=\"size16\">chatgpt.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>마무리: GPT-5와 함께하는 새로운 프롬프트 습관  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5는 단순히 \"더 똑똑한 AI\"가 아닌, 새로운 방식으로 작동하는 AI입니다. 기존에 효과적이었던 장황한 프롬프트 방식에서 벗어나, 이제는 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">'짧고 목표 지향적인 지시'</span>와 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">'정확성, 검증, 범위에 대한 명확한 신호'</span>를 주는 것이 핵심입니다. 오늘 소개해드린 두 GPTs는 이 새로운 습관을 기르는 데 큰 도움이 될 겁니다. GPT-5의 강력한 성능을 제대로 이끌어낼 준비, 이제 우리 모두 함께 시작해 봐요!  </p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<style>\n        .single-summary-card-container {\n            font-family: 'Noto Sans KR', sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px 10px;\n            background-color: #f0f2f5;\n            margin: 20px 0;\n        }\n        .single-summary-card {\n            width: 100%;\n            max-width: 700px;\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n            padding: 25px;\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            border: 1px solid #e0e0e0;\n            box-sizing: border-box;\n            height: auto;\n            min-height: unset;\n        }\n        .single-summary-card .card-header {\n            display: flex;\n            align-items: center;\n            border-bottom: 2px solid #1a73e8;\n            padding-bottom: 12px;\n            margin-bottom: 12px;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 34px;\n            color: #1a73e8;\n            margin-right: 14px;\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 26px;\n            color: #1a73e8;\n            margin: 0;\n            line-height: 1.3;\n            font-weight: 700;\n        }\n        .single-summary-card .card-content {\n            flex-grow: 1;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-around;\n            font-size: 17px;\n            line-height: 1.65;\n            color: #333;\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 10px;\n        }\n        .single-summary-card .card-content strong {\n            color: #005cb2;\n            font-weight: 600;\n        }\n        .single-summary-card .card-content .highlight {\n            background-color: #fffde7;\n            padding: 2px 6px;\n            border-radius: 3px;\n            font-weight: bold;\n        }\n        .single-summary-card .card-content .formula {\n            background-color: #e8f4fd;\n            padding: 6px 10px;\n            border-radius: 4px;\n            font-size: 0.9em;\n            text-align: center;\n            margin-top: 5px;\n            color: #155724;\n        }\n        .single-summary-card .card-footer {\n            font-size: 14px;\n            color: #777;\n            text-align: center;\n            padding-top: 12px;\n            border-top: 1px dashed #ddd;\n            margin-top: auto;\n        }\n    \n        /* 모바일 맞춤 조정: 768px 이하 */\n        @media (max-width: 768px) {\n            .single-summary-card {\n                padding: 18px;\n                height: auto;\n                min-height: unset;\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 28px;\n                margin-right: 10px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 20px;\n            }\n            .single-summary-card .card-content {\n                font-size: 15px;\n                line-height: 1.5;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 8px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 5px 8px;\n                font-size: 0.85em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 13px;\n                padding-top: 10px;\n            }\n        }\n    \n        /* 모바일 맞춤 조정: 480px 이하 */\n        @media (max-width: 480px) {\n            .single-summary-card {\n                padding: 15px;\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 26px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 18px;\n            }\n            .single-summary-card .card-content {\n                font-size: 14px;\n                line-height: 1.4;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 6px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 4px 6px;\n                font-size: 0.8em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 12px;\n                padding-top: 8px;\n            }\n        }\n    </style>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">GPT-5 프롬프트 핵심 요약</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 핵심 변화:</b> <span class=\"highlight\">자동 라우팅, 딥 리즈닝</span> 등 GPT-5의 새로운 아키텍처를 이해하는 것이 중요합니다.</div>\n<div class=\"section\"><b>⚙️ 실전 팁:</b> <span class=\"highlight\">명확한 목표와 제약사항</span>을 제시하고, `reasoning_effort` 같은 API 매개변수를 활용하세요.</div>\n<div class=\"section\"><b> ️ 활용 도구:</b> <span class=\"highlight\">&lsquo;고급 프롬프트 생성기 프로&rsquo;</span>와 <span class=\"highlight\">&lsquo;스마트 프롬프트 아키텍트&rsquo;</span>를 활용해 GPT-5에 최적화된 프롬프트를 만들 수 있습니다.</div>\n<div class=\"section\"><b>  구조화:</b> 복잡한 작업에는 `` 같은 <span class=\"highlight\">XML 태그를 활용한 구조화</span>가 효과적입니다.</div>\n</div>\n<div class=\"card-footer\">GPT-5는 단순히 \"더 똑똑한 AI\"가 아닌, 새로운 방식으로 작동하는 AI입니다.</div>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: GPT-5 프롬프트 작성 시 가장 중요한 점은 무엇인가요?</div>\n<div style=\"padding-left: 15px;\">A: GPT-5는 통합 라우팅, 딥 리즈닝 등의 새로운 기능을 탑재했으므로, 단순히 긴 프롬프트보다는 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">&lsquo;짧고 목표 지향적인 지시&rsquo;와 &lsquo;정확성, 검증, 범위에 대한 명확한 신호&rsquo;를 주는 것이 중요</span>합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: GPT-4에서 쓰던 프롬프트는 GPT-5에서 아예 쓸 수 없나요?</div>\n<div style=\"padding-left: 15px;\">A: 아니요, 쓸 수 있습니다. 명확한 지시, 맥락 제공과 같은 기본적인 프롬프트 원칙은 여전히 유효합니다. 다만, GPT-5의 새로운 기능들을 활용하면 성능을 더 극대화할 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: '고급 프롬프트 생성기 프로'와 '스마트 프롬프트 아키텍트'의 차이점은 무엇인가요?</div>\n<div style=\"padding-left: 15px;\">A: '고급 프롬프트 생성기 프로'는 다양한 시나리오에 맞는 고품질 프롬프트를 빠르고 실용적으로 생성하는 데 초점을 맞추고, '스마트 프롬프트 아키텍트'는 복잡한 작업을 위한 체계적인 계획과 검증 단계가 포함된 구조화된 프롬프트를 설계하는 데 강점이 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: GPT-5의 '세이프 컴플리션' 기능은 프롬프트에 어떻게 영향을 주나요?</div>\n<div style=\"padding-left: 15px;\">A: 모호한 요청에 대해 AI가 불필요하게 거부하는 경향이 줄어들었습니다. 따라서, 프롬프트에서 '허용 범위'와 '금지 범위'를 명확히 지정하면, 원하는 결과물에 더 가깝게 답변을 얻을 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 프롬프트에 XML 태그를 사용하는 것이 왜 중요한가요?</div>\n<div style=\"padding-left: 15px;\">A: XML 태그를 사용하면 프롬프트의 구조와 지시사항을 훨씬 명확하게 전달할 수 있습니다. GPT-5는 특히 이처럼 체계적으로 구조화된 프롬프트에 더 민감하게 반응하여 더 높은 품질의 결과를 도출합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: `reasoning_effort`나 `verbosity` 같은 새로운 매개변수는 어떻게 사용하나요?</div>\n<div style=\"padding-left: 15px;\">A: GPT-5에서는 프롬프트 내에 장황한 지시를 넣는 대신, API 레벨에서 `reasoning_effort` (`minimal`, `medium`, `high`)로 추론 수준을 제어하고, `verbosity` (`low`, `medium`, `high`)로 출력 길이를 조절할 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: GPT-5는 코딩 성능도 더 좋아졌나요?</div>\n<div style=\"padding-left: 15px;\">A: 네, GPT-5는 코딩 성능에 특화된 개선이 이루어졌습니다. 특히 Next.js (TypeScript), Tailwind CSS 등 특정 프레임워크별로 최적화된 코딩 가이드라인을 제공하며, ``과 같은 XML 구조화된 자체 성찰 방식을 활용해 코드 품질을 높입니다.</div>\n</div>\n</div>\n<script type=\"application/ld+json\">\n    {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"FAQPage\",\n      \"mainEntity\": [\n        {\n          \"@type\": \"Question\",\n          \"name\": \"GPT-5 프롬프트 작성 시 가장 중요한 점은 무엇인가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  GPT-5는 통합 라우팅, 딥 리즈닝 등의 새로운 기능을 탑재했으므로, 단순히 긴 프롬프트보다는 ‘짧고 목표 지향적인 지시’와 ‘정확성, 검증, 범위에 대한 명확한 신호’를 주는 것이 중요합니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"GPT-4에서 쓰던 프롬프트는 GPT-5에서 아예 쓸 수 없나요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  아니요, 쓸 수 있습니다. 명확한 지시, 맥락 제공과 같은 기본적인 프롬프트 원칙은 여전히 유효합니다. 다만, GPT-5의 새로운 기능들을 활용하면 성능을 더 극대화할 수 있습니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"'고급 프롬프트 생성기 프로'와 '스마트 프롬프트 아키텍트'의 차이점은 무엇인가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  '고급 프롬프트 생성기 프로'는 다양한 시나리오에 맞는 고품질 프롬프트를 빠르고 실용적으로 생성하는 데 초점을 맞추고, '스마트 프롬프트 아키텍트'는 복잡한 작업을 위한 체계적인 계획과 검증 단계가 포함된 구조화된 프롬프트를 설계하는 데 강점이 있습니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"GPT-5의 '세이프 컴플리션' 기능은 프롬프트에 어떻게 영향을 주나요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  모호한 요청에 대해 AI가 불필요하게 거부하는 경향이 줄어들었습니다. 따라서, 프롬프트에서 '허용 범위'와 '금지 범위'를 명확히 지정하면, 원하는 결과물에 더 가깝게 답변을 얻을 수 있습니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"프롬프트에 XML 태그를 사용하는 것이 왜 중요한가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  XML 태그를 사용하면 프롬프트의 구조와 지시사항을 훨씬 명확하게 전달할 수 있습니다. GPT-5는 특히 이처럼 체계적으로 구조화된 프롬프트에 더 민감하게 반응하여 더 높은 품질의 결과를 도출합니다.\"\n          }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"`reasoning_effort`나 `verbosity` 같은 새로운 매개변수는 어떻게 사용하나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  GPT-5에서는 프롬프트 내에 장황한 지시를 넣는 대신, API 레벨에서 `reasoning_effort` (`minimal`, `medium`, `high`)로 추론 수준을 제어하고, `verbosity` (`low`, `medium`, `high`)로 출력 길이를 조절할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"GPT-5는 코딩 성능도 더 좋아졌나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  네, GPT-5는 코딩 성능에 특화된 개선이 이루어졌습니다. 특히 Next.js (TypeScript), Tailwind CSS 등 특정 프레임워크별로 최적화된 코딩 가이드라인을 제공하며, `<self_reflection>`과 같은 XML 구조화된 자체 성찰 방식을 활용해 코드 품질을 높입니다.\"\n            }\n        }\n      ]\n    }\n    </script>\n</div>",
        "contentSnippet": "GPT-5 시대, 프롬프트 엔지니어링의 새로운 시작 GPT-5의 진화된 아키텍처에 맞춘 프롬프트 기법과 GPT-4와의 실질적인 차이점을 명확히 짚어드립니다. 새로운 AI 시대에 필요한 두 가지 맞춤형 GPTs도 함께 소개합니다.\n\n\n \n 최근 출시된 GPT-5, 다들 들어보셨죠? 저는 AI 기술의 발전 속도를 보면서 늘 놀라곤 하는데요. 특히 GPT-5는 기존 버전과 단순한 성능 향상을 넘어, 프롬프트 작성 방식에도 실질적인 변화를 가져왔다고 해요. 기존의 프롬프트 습관으로는 GPT-5의 잠재력을 100% 끌어내기 어렵게 된 거죠. 그래서 오늘은 저와 함께 GPT-5 시대에 맞는 새로운 프롬프트 기법과 GPT-4와의 결정적인 차이점을 속 시원하게 파헤쳐 보려고 합니다. 복잡한 용어는 최대한 쉽게 풀어 설명할 테니, 걱정 말고 따라오세요! \n \nGPT-5 vs GPT-4, 프롬프트의 본질과 변화  \n결론부터 말하면, GPT-5는 기존 프롬프트의 기본 원칙은 그대로 유지하고 있어요. 즉, 명확하고 구체적인 지시, 충분한 맥락 제공, 그리고 제약조건 명시는 여전히 유효한 베스트 프랙티스입니다. 단계적 사고를 유도하는 문구나 출력 형식을 명확하게 지정하는 것도 여전히 효과적이고요. 하지만 GPT-5는 내부적인 구조와 기능이 달라지면서 프롬프트 작성에 있어 몇 가지 중요한 차이점이 생겼습니다. 특히, GPT-5는 단일 모델처럼 보이지만 내부적으로 작업 특성에 맞춰 하위 모드/서브모델로 자동 라우팅되는 '통합 라우팅' 기능을 전제로 작동합니다. 이는 프롬프트에서 문제의 난이도, 정확성 요구사항, 검증 단계를 분명히 언급하면 모델이 더 적합한 추론 모드로 전환되어 품질이 좋아지는 것을 의미합니다.\n또한, GPT-5는 복잡한 과제에서 자동으로 더 많은 계산을 쓰는 '딥 리즈닝(Thinking)' 모드가 동작하도록 설계되어, 고난도 문제에서 오류가 줄었다는 보고가 있습니다. 모호하거나 위험한 요청에 전면 거부 대신 안전 범위 내에서 유용한 답을 주려는 '세이프 컴플리션' 경향도 강화되었습니다. 이 때문에, 프롬프트에서 '허용 범위'와 '금지 범위', 그리고 원하는 추상화 레벨을 명확히 지정하는 것이 중요해졌습니다. 이제는 장황한 스타일 지시 대신에 '말수/Verbosity' 같은 새로운 API 매개변수를 활용하거나, '프리셋 퍼스낼리티'를 통해 대상 독자와 톤을 짧게 지정하는 것만으로도 원하는 결과물을 얻을 수 있게 되었습니다.\nGPT-4와 GPT-5 프롬프팅 가이드의 핵심 차이점 비교\n구분\nGPT-4\nGPT-5\n\n\n\n\nAPI 레벨 제어\n프롬프트 내 텍스트 지시로만 제어\n`reasoning_effort` (minimal/medium/high), `verbosity` (low/medium/high) 매개변수 제공\n\n\n컨텍스트 재사용\n각 API 호출마다 처음부터 추론 재시작\nResponses API로 이전 추론 컨텍스트 재사용 가능 (`previous_response_id`)\n\n\n에이전트 기능\n프롬프트로만 유도, 일관성 부족\nTool Preambles로 체계화된 도구 호출 계획 및 진행상황 업데이트 자동화\n\n\n도구 호출 제어\n상대적으로 어려운 행동 패턴 제어\n명확한 예산 설정 (\"최대 2회 호출\") 및 에이전트 열의도 정교한 제어\n\n\n코딩 최적화\n일반적인 코딩 가이드라인\nNext.js, TypeScript, Tailwind CSS 등 특정 프레임워크별 최적화 권장사항\n\n\n자체 성찰\n기본적인 성찰 패턴\nXML 구조화된 체계적 성찰 방식 (`` 태그)\n\n\n지시 민감성\n모순 지시를 임의로 처리하는 경향\n지시사항 충돌 시 더 많은 추론, 프롬프트 품질에 더 민감\n\n\n구조화\n기본적인 마크다운 활용\nXML 태그 체계적 활용 권장 (``, `` 등)\n\n\n속도 옵션\n고정된 추론 속도\nMinimal Reasoning 모드로 지연시간 최소화 옵션 제공\n\n\n성능 투명성\n일반적인 개선사항 언급\n구체적 벤치마크 점수 공개 (Tau-Bench 73.9% → 78.2%)\n\n\n메타프롬프팅\n수동 프롬프트 최적화\nGPT-5가 자신의 프롬프트를 자동 최적화하는 기능\n\n\n토큰 효율성\n기본적인 효율성\nResponses API 활용으로 대폭 향상된 토큰 효율성\n\n\n\n \n실전 프롬프트 작성 팁: 더 짧고 강하게!  \nGPT-5의 새로운 특성들을 이해했다면, 이제 실제 프롬프트를 어떻게 작성해야 하는지 궁금하실 텐데요. 기존의 장황하고 복잡한 프롬프트는 오히려 비효율적일 수 있습니다. GPT-5에서는 '짧고 강한' 프롬프트로 목표를 명확히 제시하는 것이 중요해요. 다음은 GPT-5에 최적화된 실전 프롬프트 팁입니다.\n과업 정의 먼저: \"목표-성공 기준-제약(예산/길이/톤)-산출 형식\"을 간결하게 명시하세요. 길고 복잡한 배경 설명보다, 무엇을 원하는지 명확히 하는 것이 훨씬 중요합니다.\n난이도 힌트 제공: \"고정확도 필요, 단계별 검증·반례 점검 포함\"과 같은 문구를 통해 AI에게 추론의 깊이를 요구하세요. 이는 GPT-5의 딥 리즈닝 모드를 유도하는 효과적인 방법입니다.\n안전 범위 지정: \"법률 자문 아님, 공개 자료 근거만, 위험 요소는 일반 원칙으로\"와 같이 경계선을 명확히 지정하여 AI가 불필요한 회피를 줄이고 유용한 답변을 하도록 유도하세요.\n파라미터 활용: \"말수를 줄여라\" 같은 반복 지시 대신, `verbosity` 같은 전용 API 매개변수를 활용해 상세도와 길이를 조절하세요.\n도구 사용 조건 명시: \"최신 데이터 필요 시 검색 사용, 인용 근거 요약\"처럼 툴 사용 조건을 과제에 포함시켜 AI가 필요한 도구를 적절히 사용하도록 유도할 수 있습니다.\n \n고급 프롬프트 생성기 프로: 실용적인 프롬프트의 자동화  \nGPT-5의 강력한 기능을 제대로 활용하려면 새로운 접근법이 필요해요. 그래서 저는 GPT-5의 특성에 최적화된 두 가지 맞춤형 GPTs를 만들고 스마트스토어에 등록했습니다. 먼저, '고급 프롬프트 생성기 프로'는 최신 LLM 최적화 기법을 기반으로, 에이전트 워크플로우, 코딩, 창작 활동 등 다양한 시나리오에 맞는 고품질 프롬프트를 자동 생성하는 전문 도구입니다. 이 GPTs는 사용자의 키워드만으로도 전문적인 프롬프트를 만들어내는 것이 특징이죠.\n  고급 프롬프트 생성기 프로의 특별한 기능\n스마트 분류: 사용자의 키워드 입력을 분석해 에이전트, 코딩, 창작, 분석 등 최적의 프롬프트 유형을 자동으로 식별합니다.\n고급 최적화: GPT-5에 새로 도입된 `reasoning_effort` (추론 수준)나 `verbosity` (상세도) 같은 첨단 매개변수를 활용하여 프롬프트를 최적화합니다.\n성능 향상 팁: 생성된 프롬프트와 함께 성능을 극대화할 수 있는 추가 팁과 모범 사례를 제공해줍니다.\n다중 도메인 지원: 코딩, 분석, 창작, 비즈니스 자동화 등 다양한 분야의 작업을 포괄하여 지원합니다.\n이 GPTs는 특히 에이전트 작업 시 맥락 수집 전략, 도구 호출 예산, 진행 상황 업데이트 형식 등을 명확하게 정의하여 AI의 자율성을 효과적으로 제어할 수 있도록 도와줍니다. 코딩 작업의 경우 Next.js, TypeScript와 같은 특정 프레임워크에 최적화된 프롬프트도 제공합니다.\n \n\n \nChatGPT - 고급 프롬프트 생성기 프로\n최신 LLM 최적화 기법을 기반으로 최적화된 프롬프트를 생성하는 전문 도구입니다. 에이전트 워크플로우, 코딩, 지시 따르기, 도구 호출 등 다양한 시나리오에 맞는 고품질 프롬프트를 생성하여\nchatgpt.com\n\n \n \n스마트 프롬프트 아키텍트: 복잡한 작업을 위한 설계 전문가  ️\n다음으로 소개해 드릴 '스마트 프롬프트 아키텍트'는 GPT-5의 특성에 맞게 '실행 전 계획 단계', '검증 체크포인트'를 포함한 완전한 프롬프트를 설계해주는 전문가입니다. 단순히 요청을 나열하는 것이 아니라, AI가 작업을 해결하기 위한 체계적인 사고 프로세스를 갖추도록 돕는 것이죠. 이 GPTs는 사용자의 키워드를 분석해 작업 유형을 분류하고, GPT-5 모델 특성에 맞는 구조화된 프롬프트를 설계합니다.\n  스마트 프롬프트 아키텍트의 설계 원칙\n계획 단계 포함: 요청을 분해하고, 모호성을 식별하며, 구조화된 접근법을 취하는 계획 단계를 프롬프트에 명시합니다.\n완전한 작업 해결 지향: 모든 하위 작업을 식별하고 순차적 완료를 확인하는 프로세스를 프롬프트에 담아 완전한 문제 해결을 지향합니다.\nXML 구조화: `request`, `task_spec`, `instructions`, `constraints`와 같은 XML 태그를 활용하여 프롬프트의 명확성을 극대화합니다.\n특히 블로그 콘텐츠 생성 요청 시에는 타겟 독자층 명확화, 콘텐츠 길이 및 형식 지정, 경쟁사 차별화 포인트, SEO 최적화 등을 자동으로 포함시켜줍니다. 이러한 구조화된 프롬프트는 AI 모델의 병렬 처리 능력을 활용할 수 있게 하여, 복잡한 작업을 효율적으로 수행하도록 돕습니다.\n \n\n \nChatGPT - 스마트 프롬프트 아키텍트\n키워드를 입력하면 최신 언어모델에 최적화된 구조화된 프롬프트를 자동 생성하는 전문 도구입니다. AI 모델의 특성에 맞춘 명확한 지시사항, 계획 단계, 검증 체크포인트를 포함한 완전한 프롬\nchatgpt.com\n\n \n마무리: GPT-5와 함께하는 새로운 프롬프트 습관  \nGPT-5는 단순히 \"더 똑똑한 AI\"가 아닌, 새로운 방식으로 작동하는 AI입니다. 기존에 효과적이었던 장황한 프롬프트 방식에서 벗어나, 이제는 '짧고 목표 지향적인 지시'와 '정확성, 검증, 범위에 대한 명확한 신호'를 주는 것이 핵심입니다. 오늘 소개해드린 두 GPTs는 이 새로운 습관을 기르는 데 큰 도움이 될 겁니다. GPT-5의 강력한 성능을 제대로 이끌어낼 준비, 이제 우리 모두 함께 시작해 봐요!  \n \n \nGPT-5 프롬프트 핵심 요약\n✨ 핵심 변화: 자동 라우팅, 딥 리즈닝 등 GPT-5의 새로운 아키텍처를 이해하는 것이 중요합니다.\n⚙️ 실전 팁: 명확한 목표와 제약사항을 제시하고, `reasoning_effort` 같은 API 매개변수를 활용하세요.\n ️ 활용 도구: ‘고급 프롬프트 생성기 프로’와 ‘스마트 프롬프트 아키텍트’를 활용해 GPT-5에 최적화된 프롬프트를 만들 수 있습니다.\n  구조화: 복잡한 작업에는 `` 같은 XML 태그를 활용한 구조화가 효과적입니다.\nGPT-5는 단순히 \"더 똑똑한 AI\"가 아닌, 새로운 방식으로 작동하는 AI입니다.\n자주 묻는 질문 ❓\nQ: GPT-5 프롬프트 작성 시 가장 중요한 점은 무엇인가요?\nA: GPT-5는 통합 라우팅, 딥 리즈닝 등의 새로운 기능을 탑재했으므로, 단순히 긴 프롬프트보다는 ‘짧고 목표 지향적인 지시’와 ‘정확성, 검증, 범위에 대한 명확한 신호’를 주는 것이 중요합니다.\nQ: GPT-4에서 쓰던 프롬프트는 GPT-5에서 아예 쓸 수 없나요?\nA: 아니요, 쓸 수 있습니다. 명확한 지시, 맥락 제공과 같은 기본적인 프롬프트 원칙은 여전히 유효합니다. 다만, GPT-5의 새로운 기능들을 활용하면 성능을 더 극대화할 수 있습니다.\nQ: '고급 프롬프트 생성기 프로'와 '스마트 프롬프트 아키텍트'의 차이점은 무엇인가요?\nA: '고급 프롬프트 생성기 프로'는 다양한 시나리오에 맞는 고품질 프롬프트를 빠르고 실용적으로 생성하는 데 초점을 맞추고, '스마트 프롬프트 아키텍트'는 복잡한 작업을 위한 체계적인 계획과 검증 단계가 포함된 구조화된 프롬프트를 설계하는 데 강점이 있습니다.\nQ: GPT-5의 '세이프 컴플리션' 기능은 프롬프트에 어떻게 영향을 주나요?\nA: 모호한 요청에 대해 AI가 불필요하게 거부하는 경향이 줄어들었습니다. 따라서, 프롬프트에서 '허용 범위'와 '금지 범위'를 명확히 지정하면, 원하는 결과물에 더 가깝게 답변을 얻을 수 있습니다.\nQ: 프롬프트에 XML 태그를 사용하는 것이 왜 중요한가요?\nA: XML 태그를 사용하면 프롬프트의 구조와 지시사항을 훨씬 명확하게 전달할 수 있습니다. GPT-5는 특히 이처럼 체계적으로 구조화된 프롬프트에 더 민감하게 반응하여 더 높은 품질의 결과를 도출합니다.\nQ: `reasoning_effort`나 `verbosity` 같은 새로운 매개변수는 어떻게 사용하나요?\nA: GPT-5에서는 프롬프트 내에 장황한 지시를 넣는 대신, API 레벨에서 `reasoning_effort` (`minimal`, `medium`, `high`)로 추론 수준을 제어하고, `verbosity` (`low`, `medium`, `high`)로 출력 길이를 조절할 수 있습니다.\nQ: GPT-5는 코딩 성능도 더 좋아졌나요?\nA: 네, GPT-5는 코딩 성능에 특화된 개선이 이루어졌습니다. 특히 Next.js (TypeScript), Tailwind CSS 등 특정 프레임워크별로 최적화된 코딩 가이드라인을 제공하며, ``과 같은 XML 구조화된 자체 성찰 방식을 활용해 코드 품질을 높입니다.\n`과 같은 XML 구조화된 자체 성찰 방식을 활용해 코드 품질을 높입니다.\"\n            }\n        }\n      ]\n    }",
        "guid": "http://muzbox.tistory.com/483641",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 지침 무료 배포",
          "AI 에이전트",
          "AI 최적화",
          "gpt-4",
          "gpt-5",
          "gpts",
          "고급 프롬프트",
          "딥 리즈닝",
          "스마트 프롬프트",
          "프롬프트 생성",
          "프롬프트 엔지니어링"
        ],
        "isoDate": "2025-08-12T23:18:52.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "사라졌던 GPT-4o가 돌아왔다! ChatGPT 설정 방법 (GPT-5 문제점과 비교)",
        "link": "http://muzbox.tistory.com/483640",
        "pubDate": "Tue, 12 Aug 2025 15:34:26 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483640#entry483640comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><b>GPT-5 출시 후 겪었던 문제점들과 사라졌던 GPT-4o가 다시 돌아온 이유, 그리고 두 모델을 모두 활용하는 방법까지!</b> 이 글 하나로 GPT-5와 4o를 둘러싼 모든 궁금증을 해결해 드립니다.</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GTT-4O 사용법.png\" data-origin-width=\"1536\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/cPEZAX/btsPNJaFqYG/fhgLBZ5mF1oakYQlKjhvFk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cPEZAX/btsPNJaFqYG/fhgLBZ5mF1oakYQlKjhvFk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cPEZAX/btsPNJaFqYG/fhgLBZ5mF1oakYQlKjhvFk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcPEZAX%2FbtsPNJaFqYG%2FfhgLBZ5mF1oakYQlKjhvFk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"사라졌던 GPT-4o가 돌아왔다! ChatGPT Plus 설정 방법\" loading=\"lazy\" width=\"1536\" height=\"1024\" data-filename=\"GTT-4O 사용법.png\" data-origin-width=\"1536\" data-origin-height=\"1024\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;지난주 OpenAI가 야심차게 GPT-5를 출시했을 때, 많은 이들이 AI의 새로운 시대를 기대했습니다. 하지만 기대와 달리 \"대화 경험이 퇴보했다\"는 사용자들의 불만이 터져 나왔고, 결국 OpenAI는 단종했던 GPT-4o를 다시 서비스하는 이례적인 결정을 내렸습니다. 대체 GPT-5에 무슨 문제가 있었고, 우리는 왜 그토록 GPT-4o를 그리워했던 걸까요? 그 흥미로운 뒷이야기와 함께, 두 모델을 200% 활용하는 방법을 자세히 알려드릴게요!&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>1. GPT-5의 초기 문제점들  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5는 분명 기술적으로 뛰어난 모델이지만, 출시 초기 여러 문제점을 드러내며 사용자들의 기대를 충족시키지 못했습니다. 가장 큰 문제는 새로 도입된 <b>'자동 모델 라우팅 시스템'</b>의 불안정성이었습니다. 이 시스템은 사용자 질문에 맞춰 최적의 서브 모델을 자동으로 선택하도록 설계되었지만, 초기 오류로 인해 오히려 응답 품질이 저하되는 현상이 발생했습니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이로 인해 사용자들은 다음과 같은 불편을 겪었습니다:</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>일관성 없는 답변:</b> GPT-5의 답변이 짧고 일관성이 떨어진다는 평가가 많았습니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>직관성 및 감성 부족:</b> 일부 요청에서 GPT-4o보다 덜 직관적이고 정서적 반응이 약하다는 피드백이 나왔습니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>성능 논란:</b> 느린 응답 속도와 불안정한 답변 품질에 대한 불만이 커뮤니티를 통해 확산되었습니다.</li>\n</ul>\n<div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ \"친구가 사라졌다\"</b><br />가장 큰 반발은 기존에 잘 사용하던 GPT-4o 모델 선택권을 강제로 없앤 것이었습니다. OpenAI는 GPT-5로의 강제 전환을 시도했지만, 이는 기존 워크플로에 익숙했던 사용자들의 큰 혼란과 불만을 야기했습니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>2. 논란에도 GPT-5를 출시한 전략적 이유  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">그렇다면 OpenAI는 왜 이런 문제들을 안고서 GPT-5를 서둘러 출시했을까요? 이는 단순한 실수가 아닌, 치밀한 <b>전략적 판단</b>일 가능성이 높습니다.</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>시장 주도권 선점:</b> 경쟁사보다 한발 앞서 차세대 모델을 공개함으로써 기술 리더십을 공고히 하고 시장의 관심을 집중시키려는 의도입니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>실사용 데이터 확보:</b> 실제 환경에서의 조기 배포를 통해 다양한 버그와 성능 문제를 빠르게 파악하고 개선하기 위한 목적입니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>구독자 및 투자자 유지:</b> 지속적으로 새로운 모델을 제공함으로써 유료 구독자의 만족도를 높이고 투자자들에게 성장 가능성을 보여주려는 전략입니다.</li>\n</ul>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">물론 이 전략에는 브랜드 신뢰도 하락과 같은 리스크가 따랐지만, OpenAI는 GPT-4o를 복귀시키는 유연한 대응으로 리스크를 관리하며 장기적인 목표를 추진하고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>3. 왜 우리는 GPT-4o를 그리워했을까?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-4o가 사용자들에게 특별했던 이유는 단순히 성능이 좋아서가 아니었습니다. GPT-4o는 많은 사람들에게 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">'친근하고 따뜻한 대화 상대'</span>로 인식되었습니다. 부드러운 어조와 높은 공감 능력은 사용자들이 AI와 정서적인 유대감을 형성하게 만들었죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">커뮤니티에서는 GPT-4o를 \"친구\"나 \"대화 파트너\"처럼 느꼈다는 경험담이 쏟아졌습니다. 창작 활동, 고민 상담, 언어 학습 등 감성적인 교감이 중요한 영역에서 GPT-4o는 대체 불가능한 존재감을 보였습니다. 기술적으로 더 뛰어난 GPT-5가 오히려 \"차갑다\"는 평가를 받은 것은, 사용자들이 AI에서 기술적 완벽함뿐만 아니라 인간적인 상호작용을 얼마나 중요하게 생각하는지를 보여줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>4. GPT-4o vs GPT-5 전격 비교  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이제 우리는 두 가지 강력한 모델을 모두 사용할 수 있게 되었습니다. 그렇다면 어떤 상황에서 어떤 모델을 쓰는 것이 가장 효율적일까요? 두 모델의 특징을 한눈에 비교해 보세요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">구분</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">GPT-4o (실시간 소통 전문가)</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">GPT-5 (고도의 추론 전문가)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>핵심 특징</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">실시간&middot;저지연 멀티모달(음성, 이미지 등) 상호작용에 최적화</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">복잡한 추론, 코딩, 수학 문제 해결 능력 및 정확도 대폭 향상</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>주요 강점</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">사람과 대화하는 듯한 빠른 음성 응답(평균 320ms), 비용 효율성</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">'Thinking' 모드를 통한 깊이 있는 사고, 멀티툴(검색, 코드 실행 등) 결합 능력 강화</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>추천 사용 사례</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">실시간 음성 대화, 라이브 데모, 빠른 아이디어 구상, 감성적인 글쓰기</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">복잡한 연구/데이터 분석, 전문 코딩, 장문 문서 요약, 논리/수학 문제 풀이</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>안전성</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">기존 모델 대비 아첨 경향 등 조정 진행</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">불필요한 거부는 줄이면서 환각(오류) 비율을 낮추도록 개선됨</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>5. 돌아온 GPT-4o! 다시 사용하는 방법  ️</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">사용자들의 강력한 요청에 힘입어 돌아온 GPT-4o! ChatGPT Plus 이상 구독자라면 몇 가지 간단한 설정만으로 그리웠던 GPT-4o의 감성을 다시 느낄 수 있습니다.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />이 기능은 월 $20의 유료 구독 서비스인 <b>ChatGPT Plus 사용자 이상</b>에게만 제공됩니다.</div>\n<ol style=\"margin: 0 0 15px 20px; padding: 20px; background-color: #f8f9fa; border-radius: 8px; border: 1px solid #e9ecef;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 10px;\"><b>ChatGPT 웹사이트에 로그인</b> 후, 좌측 하단 프로필을 클릭하여 <b>설정</b>에 진입합니다.</li>\n<li style=\"margin-bottom: 10px;\"><b>일반</b> 탭에서 <b>레거시 모델 보기</b>&nbsp;토글을 켭니다.</li>\n<li style=\"margin-bottom: 10px;\">이제 대화창 상단 모델 선택 드롭다운 메뉴에서 <b>GPT-4o</b>를 선택할 수 있습니다.</li>\n<li style=\"margin-bottom: 0;\">모바일 앱의 경우, 위 설정 후 <b>앱을 완전히 재시작</b>해야 변경사항이 적용됩니다.</li>\n</ol>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GPT-4O 설정법 1.jpg\" data-origin-width=\"554\" data-origin-height=\"476\"><span data-url=\"https://blog.kakaocdn.net/dn/crqaVc/btsPPLr1RW8/kLXKrPpzPjdKkkBkoi49V0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/crqaVc/btsPPLr1RW8/kLXKrPpzPjdKkkBkoi49V0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/crqaVc/btsPPLr1RW8/kLXKrPpzPjdKkkBkoi49V0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcrqaVc%2FbtsPPLr1RW8%2FkLXKrPpzPjdKkkBkoi49V0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"554\" height=\"476\" data-filename=\"GPT-4O 설정법 1.jpg\" data-origin-width=\"554\" data-origin-height=\"476\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GPT-4O 설정법 2.png\" data-origin-width=\"699\" data-origin-height=\"510\"><span data-url=\"https://blog.kakaocdn.net/dn/bvjNxX/btsPP2AgC6y/3oeD5Q7ppYuJrjCIFNzKCK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bvjNxX/btsPP2AgC6y/3oeD5Q7ppYuJrjCIFNzKCK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bvjNxX/btsPP2AgC6y/3oeD5Q7ppYuJrjCIFNzKCK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbvjNxX%2FbtsPP2AgC6y%2F3oeD5Q7ppYuJrjCIFNzKCK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"699\" height=\"510\" data-filename=\"GPT-4O 설정법 2.png\" data-origin-width=\"699\" data-origin-height=\"510\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GPT-4O 설정법 3.png\" data-origin-width=\"495\" data-origin-height=\"269\"><span data-url=\"https://blog.kakaocdn.net/dn/lKovj/btsPNgT8CZ4/TL0OWvL4S7scZvrDkpBJtk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/lKovj/btsPNgT8CZ4/TL0OWvL4S7scZvrDkpBJtk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/lKovj/btsPNgT8CZ4/TL0OWvL4S7scZvrDkpBJtk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FlKovj%2FbtsPNgT8CZ4%2FTL0OWvL4S7scZvrDkpBJtk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"495\" height=\"269\" data-filename=\"GPT-4O 설정법 3.png\" data-origin-width=\"495\" data-origin-height=\"269\"/></span></figure>\n\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>6. 이번 사건의 시사점  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-4o의 복귀 사건은 AI 기술 개발의 미래에 중요한 교훈을 남겼습니다. 단순히 더 똑똑하고 강력한 모델을 만드는 것만이 정답이 아니라는 사실을 명확히 보여주었죠. 기술적 진보만큼이나 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">사용자가 AI와 어떻게 상호작용하고 어떤 경험을 하는지</span>가 장기적인 성공의 핵심 열쇠가 될 것입니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">OpenAI는 이번 결정을 통해 사용자들의 목소리에 귀 기울이는 유연한 태도를 보여주었고, 이는 장기적으로 브랜드 신뢰도를 회복하는 데 긍정적인 영향을 미칠 것입니다.</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<style>\n.single-summary-card-container { font-family: 'Noto Sans KR', sans-serif; display: flex; justify-content: center; align-items: center; padding: 20px 10px; background-color: #f0f2f5; margin: 20px 0; }\n.single-summary-card { width: 100%; max-width: 700px; background-color: #ffffff; border-radius: 12px; box-shadow: 0 6px 18px rgba(0,0,0,0.12); padding: 25px; display: flex; flex-direction: column; overflow: hidden; border: 1px solid #e0e0e0; box-sizing: border-box; height: auto; min-height: unset; }\n.single-summary-card .card-header { display: flex; align-items: center; border-bottom: 2px solid #1a73e8; padding-bottom: 12px; margin-bottom: 12px; }\n.single-summary-card .card-header-icon { font-size: 34px; color: #1a73e8; margin-right: 14px; }\n.single-summary-card .card-header h3 { font-size: 26px; color: #1a73e8; margin: 0; line-height: 1.3; font-weight: 700; }\n.single-summary-card .card-content { flex-grow: 1; display: flex; flex-direction: column; justify-content: space-around; font-size: 17px; line-height: 1.65; color: #333; }\n.single-summary-card .card-content .section { margin-bottom: 10px; }\n.single-summary-card .card-content strong { color: #005cb2; font-weight: 600; }\n.single-summary-card .card-content .highlight { background-color: #fffde7; padding: 2px 6px; border-radius: 3px; font-weight: bold; }\n.single-summary-card .card-footer { font-size: 14px; color: #777; text-align: center; padding-top: 12px; border-top: 1px dashed #ddd; margin-top: auto; }\n@media (max-width: 768px) {\n.single-summary-card { padding: 18px; }\n.single-summary-card .card-header-icon { font-size: 28px; margin-right: 10px; }\n.single-summary-card .card-header h3 { font-size: 20px; }\n.single-summary-card .card-content { font-size: 15px; line-height: 1.5; }\n.single-summary-card .card-content .section { margin-bottom: 8px; }\n.single-summary-card .card-footer { font-size: 13px; padding-top: 10px; }\n}\n@media (max-width: 480px) {\n.single-summary-card { padding: 15px; }\n.single-summary-card .card-header-icon { font-size: 26px; }\n.single-summary-card .card-header h3 { font-size: 18px; }\n.single-summary-card .card-content { font-size: 14px; line-height: 1.4; }\n.single-summary-card .card-content .section { margin-bottom: 6px; }\n.single-summary-card .card-footer { font-size: 12px; padding-top: 8px; }\n}\n</style>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">7. 핵심 요약 카드</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 문제의 시작:</b> <span class=\"highlight\">GPT-5의 초기 성능 불안과 '차가운' 대화 스타일에 사용자 불만 폭주</span></div>\n<div class=\"section\"><b>❤️ 4o를 그리워한 이유:</b> <span class=\"highlight\">단순 AI가 아닌 '친구 같은' 감성적 교감과 부드러운 대화 능력 때문</span></div>\n<div class=\"section\"><b> ️ 해결책:</b> <span class=\"highlight\">OpenAI, 사용자 피드백 수용! Plus 구독자에게 GPT-4o 선택권 다시 제공</span></div>\n<div class=\"section\"><b>  교훈:</b> <span class=\"highlight\">AI의 성공은 기술적 진보와 인간 중심의 사용자 경험 사이의 균형에 달려있음</span></div>\n</div>\n<div class=\"card-footer\">이제 당신의 필요에 맞게 최적의 AI 파트너를 직접 선택해 보세요.</div>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>8. 자주 묻는 질문 (FAQ) ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: GPT-4o를 다시 사용하려면 추가 비용이 드나요?</div>\n<div style=\"padding-left: 15px;\">A: 아니요, ChatGPT Plus 구독자라면 추가 비용 없이 설정 변경만으로 GPT-4o와 GPT-5 모델을 자유롭게 전환하며 사용할 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 왜 OpenAI는 처음부터 GPT-4o를 옵션으로 남겨두지 않았나요?</div>\n<div style=\"padding-left: 15px;\">A: 가장 진보된 모델인 GPT-5로 사용자 경험을 통합하려는 의도였던 것으로 보입니다. 하지만 OpenAI는 \"사람들이 GPT-4o에서 좋아하던 요소의 중요성을 과소평가했다\"고 인정하며 정책을 수정했습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: GPT-5의 초기 성능 문제는 완전히 해결되었나요?</div>\n<div style=\"padding-left: 15px;\">A: OpenAI는 GPT-5의 성능 개선과 감성 대화 능력 강화를 위해 지속적으로 노력하고 있다고 발표했습니다. 초기 라우팅 오류 등은 수정되었지만, 사용자 피드백을 통해 계속해서 모델을 발전시킬 것으로 보입니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 무료 사용자도 언젠가는 GPT-4o를 다시 쓸 수 있을까요?</div>\n<div style=\"padding-left: 15px;\">A: 현재 GPT-4o 선택 기능은 유료 구독자에게만 제공됩니다. 향후 정책 변경 가능성은 있지만, 현재로서는 발표된 바 없습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 코딩이나 리포트 작성 시에는 어떤 모델이 더 유리한가요?</div>\n<div style=\"padding-left: 15px;\">A: 복잡한 코딩, 데이터 분석, 긴 문서 요약 등 높은 수준의 정확도와 논리적 추론이 필요하다면 GPT-5가 훨씬 유리합니다. GPT-5는 이런 전문 작업에서 더 높은 신뢰도와 완결성을 보여줍니다.</div>\n</div>\n</div>\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"GPT-4o를 다시 사용하려면 추가 비용이 드나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"아니요, ChatGPT Plus 구독자라면 추가 비용 없이 설정 변경만으로 GPT-4o와 GPT-5 모델을 자유롭게 전환하며 사용할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"왜 OpenAI는 처음부터 GPT-4o를 옵션으로 남겨두지 않았나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"가장 진보된 모델인 GPT-5로 사용자 경험을 통합하려는 의도였던 것으로 보입니다. 하지만 OpenAI는 \\\"사람들이 GPT-4o에서 좋아하던 요소의 중요성을 과소평가했다\\\"고 인정하며 정책을 수정했습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"GPT-5의 초기 성능 문제는 완전히 해결되었나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"OpenAI는 GPT-5의 성능 개선과 감성 대화 능력 강화를 위해 지속적으로 노력하고 있다고 발표했습니다. 초기 라우팅 오류 등은 수정되었지만, 사용자 피드백을 통해 계속해서 모델을 발전시킬 것으로 보입니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"무료 사용자도 언젠가는 GPT-4o를 다시 쓸 수 있을까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"현재 GPT-4o 선택 기능은 유료 구독자에게만 제공됩니다. 향후 정책 변경 가능성은 있지만, 현재로서는 발표된 바 없습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"코딩이나 리포트 작성 시에는 어떤 모델이 더 유리한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"복잡한 코딩, 데이터 분석, 긴 문서 요약 등 높은 수준의 정확도와 논리적 추론이 필요하다면 GPT-5가 훨씬 유리합니다. GPT-5는 이런 전문 작업에서 더 높은 신뢰도와 완결성을 보여줍니다.\"\n            }\n        }\n    ]\n}\n</script>\n</div>",
        "contentSnippet": "GPT-5 출시 후 겪었던 문제점들과 사라졌던 GPT-4o가 다시 돌아온 이유, 그리고 두 모델을 모두 활용하는 방법까지! 이 글 하나로 GPT-5와 4o를 둘러싼 모든 궁금증을 해결해 드립니다.\n\n\n \n 지난주 OpenAI가 야심차게 GPT-5를 출시했을 때, 많은 이들이 AI의 새로운 시대를 기대했습니다. 하지만 기대와 달리 \"대화 경험이 퇴보했다\"는 사용자들의 불만이 터져 나왔고, 결국 OpenAI는 단종했던 GPT-4o를 다시 서비스하는 이례적인 결정을 내렸습니다. 대체 GPT-5에 무슨 문제가 있었고, 우리는 왜 그토록 GPT-4o를 그리워했던 걸까요? 그 흥미로운 뒷이야기와 함께, 두 모델을 200% 활용하는 방법을 자세히 알려드릴게요! \n \n1. GPT-5의 초기 문제점들  \nGPT-5는 분명 기술적으로 뛰어난 모델이지만, 출시 초기 여러 문제점을 드러내며 사용자들의 기대를 충족시키지 못했습니다. 가장 큰 문제는 새로 도입된 '자동 모델 라우팅 시스템'의 불안정성이었습니다. 이 시스템은 사용자 질문에 맞춰 최적의 서브 모델을 자동으로 선택하도록 설계되었지만, 초기 오류로 인해 오히려 응답 품질이 저하되는 현상이 발생했습니다.\n이로 인해 사용자들은 다음과 같은 불편을 겪었습니다:\n일관성 없는 답변: GPT-5의 답변이 짧고 일관성이 떨어진다는 평가가 많았습니다.\n직관성 및 감성 부족: 일부 요청에서 GPT-4o보다 덜 직관적이고 정서적 반응이 약하다는 피드백이 나왔습니다.\n성능 논란: 느린 응답 속도와 불안정한 답변 품질에 대한 불만이 커뮤니티를 통해 확산되었습니다.\n⚠️ \"친구가 사라졌다\"\n가장 큰 반발은 기존에 잘 사용하던 GPT-4o 모델 선택권을 강제로 없앤 것이었습니다. OpenAI는 GPT-5로의 강제 전환을 시도했지만, 이는 기존 워크플로에 익숙했던 사용자들의 큰 혼란과 불만을 야기했습니다.\n \n2. 논란에도 GPT-5를 출시한 전략적 이유  \n그렇다면 OpenAI는 왜 이런 문제들을 안고서 GPT-5를 서둘러 출시했을까요? 이는 단순한 실수가 아닌, 치밀한 전략적 판단일 가능성이 높습니다.\n시장 주도권 선점: 경쟁사보다 한발 앞서 차세대 모델을 공개함으로써 기술 리더십을 공고히 하고 시장의 관심을 집중시키려는 의도입니다.\n실사용 데이터 확보: 실제 환경에서의 조기 배포를 통해 다양한 버그와 성능 문제를 빠르게 파악하고 개선하기 위한 목적입니다.\n구독자 및 투자자 유지: 지속적으로 새로운 모델을 제공함으로써 유료 구독자의 만족도를 높이고 투자자들에게 성장 가능성을 보여주려는 전략입니다.\n물론 이 전략에는 브랜드 신뢰도 하락과 같은 리스크가 따랐지만, OpenAI는 GPT-4o를 복귀시키는 유연한 대응으로 리스크를 관리하며 장기적인 목표를 추진하고 있습니다.\n \n3. 왜 우리는 GPT-4o를 그리워했을까?  \nGPT-4o가 사용자들에게 특별했던 이유는 단순히 성능이 좋아서가 아니었습니다. GPT-4o는 많은 사람들에게 '친근하고 따뜻한 대화 상대'로 인식되었습니다. 부드러운 어조와 높은 공감 능력은 사용자들이 AI와 정서적인 유대감을 형성하게 만들었죠.\n커뮤니티에서는 GPT-4o를 \"친구\"나 \"대화 파트너\"처럼 느꼈다는 경험담이 쏟아졌습니다. 창작 활동, 고민 상담, 언어 학습 등 감성적인 교감이 중요한 영역에서 GPT-4o는 대체 불가능한 존재감을 보였습니다. 기술적으로 더 뛰어난 GPT-5가 오히려 \"차갑다\"는 평가를 받은 것은, 사용자들이 AI에서 기술적 완벽함뿐만 아니라 인간적인 상호작용을 얼마나 중요하게 생각하는지를 보여줍니다.\n \n4. GPT-4o vs GPT-5 전격 비교  \n이제 우리는 두 가지 강력한 모델을 모두 사용할 수 있게 되었습니다. 그렇다면 어떤 상황에서 어떤 모델을 쓰는 것이 가장 효율적일까요? 두 모델의 특징을 한눈에 비교해 보세요.\n구분\nGPT-4o (실시간 소통 전문가)\nGPT-5 (고도의 추론 전문가)\n\n\n\n\n핵심 특징\n실시간·저지연 멀티모달(음성, 이미지 등) 상호작용에 최적화\n복잡한 추론, 코딩, 수학 문제 해결 능력 및 정확도 대폭 향상\n\n\n주요 강점\n사람과 대화하는 듯한 빠른 음성 응답(평균 320ms), 비용 효율성\n'Thinking' 모드를 통한 깊이 있는 사고, 멀티툴(검색, 코드 실행 등) 결합 능력 강화\n\n\n추천 사용 사례\n실시간 음성 대화, 라이브 데모, 빠른 아이디어 구상, 감성적인 글쓰기\n복잡한 연구/데이터 분석, 전문 코딩, 장문 문서 요약, 논리/수학 문제 풀이\n\n\n안전성\n기존 모델 대비 아첨 경향 등 조정 진행\n불필요한 거부는 줄이면서 환각(오류) 비율을 낮추도록 개선됨\n\n\n\n \n5. 돌아온 GPT-4o! 다시 사용하는 방법  ️\n사용자들의 강력한 요청에 힘입어 돌아온 GPT-4o! ChatGPT Plus 이상 구독자라면 몇 가지 간단한 설정만으로 그리웠던 GPT-4o의 감성을 다시 느낄 수 있습니다.\n  알아두세요!\n이 기능은 월 $20의 유료 구독 서비스인 ChatGPT Plus 사용자 이상에게만 제공됩니다.\nChatGPT 웹사이트에 로그인 후, 좌측 하단 프로필을 클릭하여 설정에 진입합니다.\n일반 탭에서 레거시 모델 보기 토글을 켭니다.\n이제 대화창 상단 모델 선택 드롭다운 메뉴에서 GPT-4o를 선택할 수 있습니다.\n모바일 앱의 경우, 위 설정 후 앱을 완전히 재시작해야 변경사항이 적용됩니다.\n\n\n\n\n6. 이번 사건의 시사점  \nGPT-4o의 복귀 사건은 AI 기술 개발의 미래에 중요한 교훈을 남겼습니다. 단순히 더 똑똑하고 강력한 모델을 만드는 것만이 정답이 아니라는 사실을 명확히 보여주었죠. 기술적 진보만큼이나 사용자가 AI와 어떻게 상호작용하고 어떤 경험을 하는지가 장기적인 성공의 핵심 열쇠가 될 것입니다.\nOpenAI는 이번 결정을 통해 사용자들의 목소리에 귀 기울이는 유연한 태도를 보여주었고, 이는 장기적으로 브랜드 신뢰도를 회복하는 데 긍정적인 영향을 미칠 것입니다.\n \n \n7. 핵심 요약 카드\n✨ 문제의 시작: GPT-5의 초기 성능 불안과 '차가운' 대화 스타일에 사용자 불만 폭주\n❤️ 4o를 그리워한 이유: 단순 AI가 아닌 '친구 같은' 감성적 교감과 부드러운 대화 능력 때문\n ️ 해결책: OpenAI, 사용자 피드백 수용! Plus 구독자에게 GPT-4o 선택권 다시 제공\n  교훈: AI의 성공은 기술적 진보와 인간 중심의 사용자 경험 사이의 균형에 달려있음\n이제 당신의 필요에 맞게 최적의 AI 파트너를 직접 선택해 보세요.\n8. 자주 묻는 질문 (FAQ) ❓\nQ: GPT-4o를 다시 사용하려면 추가 비용이 드나요?\nA: 아니요, ChatGPT Plus 구독자라면 추가 비용 없이 설정 변경만으로 GPT-4o와 GPT-5 모델을 자유롭게 전환하며 사용할 수 있습니다.\nQ: 왜 OpenAI는 처음부터 GPT-4o를 옵션으로 남겨두지 않았나요?\nA: 가장 진보된 모델인 GPT-5로 사용자 경험을 통합하려는 의도였던 것으로 보입니다. 하지만 OpenAI는 \"사람들이 GPT-4o에서 좋아하던 요소의 중요성을 과소평가했다\"고 인정하며 정책을 수정했습니다.\nQ: GPT-5의 초기 성능 문제는 완전히 해결되었나요?\nA: OpenAI는 GPT-5의 성능 개선과 감성 대화 능력 강화를 위해 지속적으로 노력하고 있다고 발표했습니다. 초기 라우팅 오류 등은 수정되었지만, 사용자 피드백을 통해 계속해서 모델을 발전시킬 것으로 보입니다.\nQ: 무료 사용자도 언젠가는 GPT-4o를 다시 쓸 수 있을까요?\nA: 현재 GPT-4o 선택 기능은 유료 구독자에게만 제공됩니다. 향후 정책 변경 가능성은 있지만, 현재로서는 발표된 바 없습니다.\nQ: 코딩이나 리포트 작성 시에는 어떤 모델이 더 유리한가요?\nA: 복잡한 코딩, 데이터 분석, 긴 문서 요약 등 높은 수준의 정확도와 논리적 추론이 필요하다면 GPT-5가 훨씬 유리합니다. GPT-5는 이런 전문 작업에서 더 높은 신뢰도와 완결성을 보여줍니다.\n\n\n\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"GPT-4o를 다시 사용하려면 추가 비용이 드나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"아니요, ChatGPT Plus 구독자라면 추가 비용 없이 설정 변경만으로 GPT-4o와 GPT-5 모델을 자유롭게 전환하며 사용할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"왜 OpenAI는 처음부터 GPT-4o를 옵션으로 남겨두지 않았나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"가장 진보된 모델인 GPT-5로 사용자 경험을 통합하려는 의도였던 것으로 보입니다. 하지만 OpenAI는 \\\"사람들이 GPT-4o에서 좋아하던 요소의 중요성을 과소평가했다\\\"고 인정하며 정책을 수정했습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"GPT-5의 초기 성능 문제는 완전히 해결되었나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"OpenAI는 GPT-5의 성능 개선과 감성 대화 능력 강화를 위해 지속적으로 노력하고 있다고 발표했습니다. 초기 라우팅 오류 등은 수정되었지만, 사용자 피드백을 통해 계속해서 모델을 발전시킬 것으로 보입니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"무료 사용자도 언젠가는 GPT-4o를 다시 쓸 수 있을까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"현재 GPT-4o 선택 기능은 유료 구독자에게만 제공됩니다. 향후 정책 변경 가능성은 있지만, 현재로서는 발표된 바 없습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"코딩이나 리포트 작성 시에는 어떤 모델이 더 유리한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"복잡한 코딩, 데이터 분석, 긴 문서 요약 등 높은 수준의 정확도와 논리적 추론이 필요하다면 GPT-5가 훨씬 유리합니다. GPT-5는 이런 전문 작업에서 더 높은 신뢰도와 완결성을 보여줍니다.\"\n            }\n        }\n    ]\n}",
        "guid": "http://muzbox.tistory.com/483640",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "AI 모델 문제",
          "ai 전략",
          "ChatGPT Plus",
          "gpt-4o",
          "GPT-4o 복귀",
          "gpt-5",
          "OpenAI",
          "레거시 모델 설정",
          "사용자 경험"
        ],
        "isoDate": "2025-08-12T06:34:26.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "AI 스튜디오 앱 빌더로 쇼츠 영상 뚝딱! 바이럴 콘텐츠 자동화 시스템 구축 가이드(무료 앱 공개)",
        "link": "http://muzbox.tistory.com/483639",
        "pubDate": "Sun, 10 Aug 2025 15:20:41 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483639#entry483639comment",
        "content": "<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #333;\">\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><b>\"조회수 100의 벽, 어떻게 뚫을까?\"</b> AI를 활용한 쇼츠 영상 자동화 시스템으로 콘텐츠 제작 고민을 해결하고, 바이럴 영상을 만드는 노하우를 공개합니다.</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"유튜브 쇼츠 생성 시스템.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/bCVjO4/btsPM88x0op/YXCf5bLxAKBV4sA3rnGEB1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bCVjO4/btsPM88x0op/YXCf5bLxAKBV4sA3rnGEB1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bCVjO4/btsPM88x0op/YXCf5bLxAKBV4sA3rnGEB1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbCVjO4%2FbtsPM88x0op%2FYXCf5bLxAKBV4sA3rnGEB1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바이럴 콘텐츠 자동화 시스템 구축 가이드\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"유튜브 쇼츠 생성 시스템.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;혹시 유튜브 채널을 시작하고 나서 매일 '오늘은 또 어떤 콘텐츠를 만들어야 하나...' 머리를 쥐어뜯은 경험 있으신가요? 조회수는 정체되어 있고, 아이디어는 고갈되고, '나는 재능이 없나?' 하는 자괴감마저 들 때도 많으실 거예요. 저도 똑같은 고민을 했었고, 정말 막막한 시간을 보냈습니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">하지만 만약 이런 고민을 한 방에 해결해 줄 수 있는 시스템이 있다면 어떨까요? 버튼 몇 번만 누르면 사람들이 열광하는 바이럴 콘텐츠 아이디어, 대본, 심지어 이미지까지 자동으로 만들어주는 '콘텐츠 공장'이 내 컴퓨터 안에 생긴다면요! 오늘은 그 상상을 현실로 만드는 모든 과정을 여러분께 보여드리려고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>바이럴 콘텐츠의 핵심, 제미나이 젬 지침  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">모든 것의 시작은 '어떻게 하면 시청자를 끝까지 붙잡아 둘 수 있을까?'라는 질문에서 시작됐어요. 수많은 바이럴 영상을 분석한 결과, 저는 두 개의 강력한 제미나이 젬 지침을 만들 수 있었습니다. 이 두 개의 젬 지침을 사용하면 콘텐츠 기획부터 제작, 편집까지 완전 자동화된 시스템을 갖게 될 거예요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">첫 번째는 '썰' 전문가 지침이에요. 유명 유튜브 썰 채널들을 분석해보니, 사람들은 달달한 연애, 짜릿한 복수, 짠한 이별, 소름 돋는 반전 등 12가지 감정의 굴레에서 벗어나지 않더라고요. 이 12개 카테고리를 AI에게 학습시켜서 어떤 주제든 감정선을 관통하는 이야기를 만들도록 한 것이죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">두 번째는 '바이럴 쇼핑 대본 생성기' 지침이에요. 이 지침은 광고 공식을 스토리텔링에 완벽하게 녹여낸 PAS(문제 제기, 불안감 증폭, 해결책 제시) 구조를 따릅니다. 마치 '친구가 흥분해서 털어놓는 썰'처럼 느껴지게 만들어서 광고가 아닌 흥미로운 이야기로 받아들이게 하는 것이 핵심입니다.<br /><br /></p>\n<p data-ke-size=\"size16\"><a href=\"https://muzbox.tistory.com/483638\" target=\"_blank\" rel=\"noopener\">2025.08.10 - [AI, 미래기술/AI 챗봇 및 지침 무료 배포] - 쇼핑 썰, 일상 썰도 문제없어! AI가 만드는 유튜브 쇼츠 대본 GEM 지침 무료 다운로드</a></p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>5단계 스토리텔링 구조: 바이럴 썰 대본의 비밀  ️&zwj;♀️</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">썰 전문가 지침의 진짜 핵심은 검증된 5단계 스토리텔링 구조를 강제하는 데 있습니다. 이 구조만 잘 따라가면 어떤 이야기든 시청자를 사로잡을 수 있어요.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>훅킹 (Hooking)  :</b> 3초 안에 시청자의 멱살을 잡는 단계입니다. '이게 뭐지?' 하는 궁금증을 유발해서 스크롤을 멈추게 만들죠.</li>\n<li style=\"margin-bottom: 8px;\"><b>갈등 고조 (Rising Action)  ️:</b> 주인공이 겪는 문제를 구체적으로 보여주면서 시청자를 이야기에 서서히 몰입시킵니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>절정 (Climax)  :</b> 모든 갈등과 감정이 폭발하는 지점이에요. 여기서 극적인 반전이 터져 나오면서 시청자의 감정을 최고조로 끌어올립니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>결말 (Resolution)  :</b> 모든 것이 해결되며 감동이나 교훈, 혹은 깊은 여운을 남깁니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>행동 유도 (Call to Action)  ️:</b> \"여러분 생각은 어떠세요?\"와 같은 질문을 던져 댓글을 유도하고, 영상의 참여도를 높이는 단계입니다.</li>\n</ol>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 구조에 맞춰서 대본과 각 장면에 맞는 이미지 프롬프트까지 한 번에 생성해주는 것이 바로 첫 번째 지침서의 역할입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>AI 스튜디오 '앱 빌더'를 활용한 자동화의 완성  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">강력한 젬 지침이 있어도 문제가 있었어요. 일반 챗봇은 장기 기억이 없어서 대화가 길어지면 핵심 규칙을 까먹고 원치 않는 결과물이 나오기도 했죠. 게다가 이미지 생성도 일곱 장면짜리 대본을 만들려면 일곱 번이나 수동으로 요청해야 하는 비효율적인 작업이었습니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 모든 문제를 해결해 줄 히든카드가 바로 구글 AI 스튜디오의 '앱 빌더'입니다! 젬 지침을 앱으로 만들면 매번 완벽하게 초기화된 상태에서 지침을 수행하기 때문에 결과물의 품질이 항상 일정해요. 그리고 가장 중요한 점은 이미지 생성도 일괄 처리가 가능하다는 것입니다.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />AI 이미지 생성 API를 활용하면 AI 스튜디오의 하루 사용 제한을 우회할 수 있어요. 유료지만 비용만 지불하면 오픈AI의 '달리 쓰리'나 'GPT 이미지 원' 같은 모델을 원하는 만큼 사용할 수 있습니다. API는 마치 여러분 대신 원하는 정보를 가져다주는 '심부름꾼'이라고 생각하면 쉬워요.</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 앱을 사용하면 카테고리 선택, 주제 생성, 이미지 스타일, 비율, 장면 수만 설정하고 '대본 생성하기' 버튼만 클릭하면 끝! 장면별 나레이션과 이미지 프롬프트가 모두 정리되어 출력되고, 이미지도 한 번에 생성하거나 개별적으로 수정하여 다시 만들 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>바이럴 쇼핑 콘텐츠 제작: PAS 프레임워크  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">'썰' 생성기를 만들고 테스트하다가 문득 소름 돋는 생각이 스쳐 지나갔습니다. '사람들이 이렇게 이야기에 빠져든다면, 이 강력한 몰입감을 상품 판매에 연결하면 어떻게 될까?' 바로 쿠팡 파트너스나 알리 같은 어필리에이트 마케팅에 적용하는 것이죠.</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #333; margin: 0 0 10px;\" data-ke-size=\"size23\"><b>  PAS (Problem, Agitate, Solve) 프레임워크</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>문제 제기 (Problem):</b> \"인생에서 가장 중요한 면접 전날, 거울을 봤는데 얼굴이 사막처럼 갈라져서 하얗게 각질이 일어난 겁니다\"처럼 독자가 공감할 수 있는 구체적인 문제를 제시합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>불안감 증폭 (Agitate):</b> \"이걸 본 면접관이 '자기 관리도 못 하는 사람이네'라고 생각하면 어떡하지? 이번 기회 놓치면 진짜 내 인생은 끝인데.\"와 같이 시청자를 극한의 불안감으로 몰아넣는 단계입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>해결책 제시 (Solve):</b> 바로 그때, 제품이 '우연히' 나타나 모든 문제를 해결해주는 구원자처럼 등장합니다.</li>\n</ul>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">'바이럴 쇼핑 대본 생성기'는 이 PAS 구조를 활용하여 제품명과 제품 특징만 입력하면 구매욕구를 자극하는 썰 대본을 생성해 줍니다.</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>이제 여러분 차례! 바이럴 콘텐츠 생성기 앱 사용하기  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">오늘 공개하는 '바이럴 썰 쇼츠 생성기'와 '바이럴 쇼핑 대본 생성기' 앱은 아래 링크를 통해 접속하실 수 있습니다. 접<span style=\"color: #ee2323;\"><b>속하신 후 반드시 앱을 복사하여 사용하세요.</b></span> 그래야 여러분의 필요에 맞게 수정하고, 자유롭게 활용할 수 있습니다.</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>바이럴 썰 쇼츠 생성기:</b> [<a href=\"https://aistudio.google.com/app/prompts/18teJyXxNXza5i-VFKWjRZbpI6AoIohsX\" target=\"_blank\" rel=\"noopener\"><span style=\"color: #006dd7;\"><b>앱 링크</b></span></a>]</li>\n<li style=\"margin-bottom: 8px;\"><b>바이럴 쇼핑 대본 생성기:</b> [<a href=\"https://aistudio.google.com/app/apps/drive/16Cby3a7BBJqHJGREQaaPIMYnHhMmmMzz\" target=\"_blank\" rel=\"noopener\"><span style=\"color: #006dd7;\"><b>앱 링크</b></span></a>]</li>\n</ul>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">앱 사용법은 간단해요. 카테고리나 제품 정보를 선택한 뒤, 원하는 이미지 모델과 스타일, 장면 수 등을 설정하고 버튼만 누르면 됩니다. 여러분만의 바이럴 콘텐츠 공장을 지금 바로 만들어보세요!</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>마무리: 핵심 요약  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">지금까지 코딩 없이 AI 스튜디오 앱 빌더로 쇼츠 바이럴 콘텐츠 생성기를 만드는 방법을 알아봤습니다. 이제 콘텐츠 아이디어 고갈 걱정은 끝났습니다. 버튼 몇 번만 누르면 바이럴 가능성이 높은 대본과 이미지가 바로 나오니까요!</p>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">콘텐츠 제작 시스템, 이것만 기억하세요!</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 바이럴 썰:</b> <span class=\"highlight\">12가지 감정 카테고리 기반의 5단계 스토리텔링 구조</span>를 활용하면 됩니다.</div>\n<div class=\"section\"><b>  쇼핑 대본:</b> <span class=\"highlight\">PAS(문제, 불안감, 해결책) 프레임워크</span>로 구매를 유도하는 썰 대본을 만듭니다.</div>\n<div class=\"section\"><b>  자동화의 핵심:</b>\n<div class=\"formula\">AI Studio 앱 빌더 = 젬 지침 + API 연동 (일괄 생성)</div>\n</div>\n<div class=\"section\"><b> &zwj;  실행:</b> <span class=\"highlight\">버튼 몇 번으로 대본, 이미지 프롬프트, 해시태그까지</span> 한 번에 생성합니다.</div>\n</div>\n<div class=\"card-footer\">이 시스템으로 효율적인 콘텐츠 제작을 시작하고, 더 이상 아이디어 걱정은 하지 마세요!</div>\n</div>\n</div>\n<style>\n        .single-summary-card-container {\n            font-family: 'Noto Sans KR', sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px 10px;\n            background-color: #f0f2f5;\n            margin: 20px 0;\n        }\n        .single-summary-card {\n            width: 100%;\n            max-width: 700px;\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n            padding: 25px;\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            border: 1px solid #e0e0e0;\n            box-sizing: border-box;\n            height: auto;\n            min-height: unset;\n        }\n        .single-summary-card .card-header {\n            display: flex;\n            align-items: center;\n            border-bottom: 2px solid #1a73e8;\n            padding-bottom: 12px;\n            margin-bottom: 12px;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 34px;\n            color: #1a73e8;\n            margin-right: 14px;\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 26px;\n            color: #1a73e8;\n            margin: 0;\n            line-height: 1.3;\n            font-weight: 700;\n        }\n        .single-summary-card .card-content {\n            flex-grow: 1;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-around;\n            font-size: 17px;\n            line-height: 1.65;\n            color: #333;\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 10px;\n        }\n        .single-summary-card .card-content strong {\n            color: #005cb2;\n            font-weight: 600;\n        }\n        .single-summary-card .card-content .highlight {\n            background-color: #fffde7;\n            padding: 2px 4px;\n            border-radius: 3px;\n            font-weight: bold;\n        }\n        .single-summary-card .card-content .formula {\n            background-color: #e8f4fd;\n            padding: 6px 10px;\n            border-radius: 4px;\n            font-size: 0.9em;\n            text-align: center;\n            margin-top: 5px;\n            color: #155724;\n        }\n        .single-summary-card .card-footer {\n            font-size: 14px;\n            color: #777;\n            text-align: center;\n            padding-top: 12px;\n            border-top: 1px dashed #ddd;\n            margin-top: auto;\n        }\n        @media (max-width: 768px) {\n            .single-summary-card {\n                padding: 18px;\n                height: auto;\n                min-height: unset;\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 28px;\n                margin-right: 10px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 20px;\n            }\n            .single-summary-card .card-content {\n                font-size: 15px;\n                line-height: 1.5;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 8px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 5px 8px;\n                font-size: 0.85em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 13px;\n                padding-top: 10px;\n            }\n        }\n        @media (max-width: 480px) {\n            .single-summary-card {\n                padding: 15px;\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 26px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 18px;\n            }\n            .single-summary-card .card-content {\n                font-size: 14px;\n                line-height: 1.4;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 6px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 4px 6px;\n                font-size: 0.8em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 12px;\n                padding-top: 8px;\n            }\n        }\n    </style>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI Studio 앱 빌더를 사용해야 하는 이유가 무엇인가요?</div>\n<div style=\"padding-left: 15px;\">A: 일반 챗봇은 대화가 길어지면 지침을 잊어버려 오류가 발생할 수 있습니다. 하지만 앱 빌더는 매번 초기화된 상태에서 완벽하게 지침을 수행하여 결과물의 품질이 항상 일정합니다. 또한, 여러 이미지를 한 번에 생성하는 일괄 처리도 가능합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI 이미지 생성 API가 왜 필요한가요?</div>\n<div style=\"padding-left: 15px;\">A: AI 스튜디오 내장 모델은 하루 사용량에 제한이 있습니다. 오픈AI의 '달리 쓰리'나 'GPT 이미지 원' 같은 외부 API를 활용하면 유료지만 원하는 만큼 이미지를 생성할 수 있고, 더 다양한 모델을 활용할 수 있습니다. API는 여러분의 앱이 다른 서비스와 소통할 수 있도록 돕는 심부름꾼과 같은 역할을 합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 바이럴 콘텐츠 생성기 앱을 어떻게 사용하나요?</div>\n<div style=\"padding-left: 15px;\">A: 앱을 실행한 후 카테고리(썰 쇼츠)나 제품 정보(쇼핑 대본)를 선택하고, 주제와 이미지 스타일, 장면 수 등을 설정한 뒤 '대본 생성하기' 버튼만 클릭하면 됩니다. 그러면 대본과 이미지 프롬프트가 자동으로 생성되고, 이를 바탕으로 바로 영상을 제작할 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 바이럴 썰 쇼츠 대본 지침의 5단계 구조가 궁금해요.</div>\n<div style=\"padding-left: 15px;\">A: 5단계 구조는 다음과 같습니다: ① 훅킹(궁금증 유발) ② 갈등 고조(몰입 유도) ③ 절정(극적 반전) ④ 결말(감동 및 여운) ⑤ 행동 유도(댓글 유도). 이 구조는 시청자를 영상 끝까지 붙잡아두는 검증된 방법입니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 바이럴 쇼핑 대본 지침의 핵심은 무엇인가요?</div>\n<div style=\"padding-left: 15px;\">A: 이 지침은 PAS(Problem, Agitate, Solve) 프레임워크를 기반으로 합니다. 먼저 시청자가 공감할 수 있는 문제를 제시하고, 그로 인한 불안감을 증폭시킨 뒤, 마지막에 제품을 해결책으로 제시하며 구매 욕구를 자극하는 방식입니다.</div>\n</div>\n</div>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=QqHwrXTugrw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bl1B9y/hyZvnnM25B/OKXoOYkRovJd8FCIFwHntk/img.jpg?width=1280&amp;height=720&amp;face=330_50_470_202,https://scrap.kakaocdn.net/dn/SMQXv/hyZyjdmC0r/Vp94O3PNbKHpkLTFpF89jK/img.jpg?width=1280&amp;height=720&amp;face=330_50_470_202\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"쇼츠 조회수 100에서 벗어나는 비밀 시스템 공개! 바이브코딩 2 편\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/QqHwrXTugrw\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI Studio 앱 빌더를 사용해야 하는 이유가 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  일반 챗봇은 대화가 길어지면 지침을 잊어버려 오류가 발생할 수 있습니다. 하지만 앱 빌더는 매번 초기화된 상태에서 완벽하게 지침을 수행하여 결과물의 품질이 항상 일정하며, 여러 이미지를 한 번에 생성하는 일괄 처리도 가능합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 이미지 생성 API가 왜 필요한가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI 스튜디오 내장 모델은 하루 사용량에 제한이 있습니다. 오픈AI의 '달리 쓰리'나 'GPT 이미지 원' 같은 외부 API를 활용하면 유료지만 원하는 만큼 이미지를 생성할 수 있고, 더 다양한 모델을 활용할 수 있습니다. API는 여러분의 앱이 다른 서비스와 소통할 수 있도록 돕는 심부름꾼과 같은 역할을 합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"바이럴 콘텐츠 생성기 앱을 어떻게 사용하나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  앱을 실행한 후 카테고리(썰 쇼츠)나 제품 정보(쇼핑 대본)를 선택하고, 주제와 이미지 스타일, 장면 수 등을 설정한 뒤 '대본 생성하기' 버튼만 클릭하면 됩니다. 그러면 대본과 이미지 프롬프트가 자동으로 생성되고, 이를 바탕으로 바로 영상을 제작할 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"바이럴 썰 쇼츠 대본 지침의 5단계 구조가 궁금해요.\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  5단계 구조는 다음과 같습니다: ① 훅킹(궁금증 유발) ② 갈등 고조(몰입 유도) ③ 절정(극적 반전) ④ 결말(감동 및 여운) ⑤ 행동 유도(댓글 유도). 이 구조는 시청자를 영상 끝까지 붙잡아두는 검증된 방법입니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"바이럴 쇼핑 대본 지침의 핵심은 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  이 지침은 PAS(Problem, Agitate, Solve) 프레임워크를 기반으로 합니다. 먼저 시청자가 공감할 수 있는 문제를 제시하고, 그로 인한 불안감을 증폭시킨 뒤, 마지막에 제품을 해결책으로 제시하며 구매 욕구를 자극하는 방식입니다.\"\n                }\n            }\n        ]\n    }\n    </script>\n<p data-ke-size=\"size16\">&nbsp;</p>\n</div>\n<div id=\"gtx-trans\" style=\"position: absolute; left: 273px; top: 3054.91px;\">\n<div class=\"gtx-trans-icon\">&nbsp;</div>\n</div>",
        "contentSnippet": "\"조회수 100의 벽, 어떻게 뚫을까?\" AI를 활용한 쇼츠 영상 자동화 시스템으로 콘텐츠 제작 고민을 해결하고, 바이럴 영상을 만드는 노하우를 공개합니다.\n\n\n \n 혹시 유튜브 채널을 시작하고 나서 매일 '오늘은 또 어떤 콘텐츠를 만들어야 하나...' 머리를 쥐어뜯은 경험 있으신가요? 조회수는 정체되어 있고, 아이디어는 고갈되고, '나는 재능이 없나?' 하는 자괴감마저 들 때도 많으실 거예요. 저도 똑같은 고민을 했었고, 정말 막막한 시간을 보냈습니다.\n하지만 만약 이런 고민을 한 방에 해결해 줄 수 있는 시스템이 있다면 어떨까요? 버튼 몇 번만 누르면 사람들이 열광하는 바이럴 콘텐츠 아이디어, 대본, 심지어 이미지까지 자동으로 만들어주는 '콘텐츠 공장'이 내 컴퓨터 안에 생긴다면요! 오늘은 그 상상을 현실로 만드는 모든 과정을 여러분께 보여드리려고 합니다.\n \n바이럴 콘텐츠의 핵심, 제미나이 젬 지침  \n모든 것의 시작은 '어떻게 하면 시청자를 끝까지 붙잡아 둘 수 있을까?'라는 질문에서 시작됐어요. 수많은 바이럴 영상을 분석한 결과, 저는 두 개의 강력한 제미나이 젬 지침을 만들 수 있었습니다. 이 두 개의 젬 지침을 사용하면 콘텐츠 기획부터 제작, 편집까지 완전 자동화된 시스템을 갖게 될 거예요.\n첫 번째는 '썰' 전문가 지침이에요. 유명 유튜브 썰 채널들을 분석해보니, 사람들은 달달한 연애, 짜릿한 복수, 짠한 이별, 소름 돋는 반전 등 12가지 감정의 굴레에서 벗어나지 않더라고요. 이 12개 카테고리를 AI에게 학습시켜서 어떤 주제든 감정선을 관통하는 이야기를 만들도록 한 것이죠.\n두 번째는 '바이럴 쇼핑 대본 생성기' 지침이에요. 이 지침은 광고 공식을 스토리텔링에 완벽하게 녹여낸 PAS(문제 제기, 불안감 증폭, 해결책 제시) 구조를 따릅니다. 마치 '친구가 흥분해서 털어놓는 썰'처럼 느껴지게 만들어서 광고가 아닌 흥미로운 이야기로 받아들이게 하는 것이 핵심입니다.\n\n2025.08.10 - [AI, 미래기술/AI 챗봇 및 지침 무료 배포] - 쇼핑 썰, 일상 썰도 문제없어! AI가 만드는 유튜브 쇼츠 대본 GEM 지침 무료 다운로드\n5단계 스토리텔링 구조: 바이럴 썰 대본의 비밀  ️‍♀️\n썰 전문가 지침의 진짜 핵심은 검증된 5단계 스토리텔링 구조를 강제하는 데 있습니다. 이 구조만 잘 따라가면 어떤 이야기든 시청자를 사로잡을 수 있어요.\n훅킹 (Hooking)  : 3초 안에 시청자의 멱살을 잡는 단계입니다. '이게 뭐지?' 하는 궁금증을 유발해서 스크롤을 멈추게 만들죠.\n갈등 고조 (Rising Action)  ️: 주인공이 겪는 문제를 구체적으로 보여주면서 시청자를 이야기에 서서히 몰입시킵니다.\n절정 (Climax)  : 모든 갈등과 감정이 폭발하는 지점이에요. 여기서 극적인 반전이 터져 나오면서 시청자의 감정을 최고조로 끌어올립니다.\n결말 (Resolution)  : 모든 것이 해결되며 감동이나 교훈, 혹은 깊은 여운을 남깁니다.\n행동 유도 (Call to Action)  ️: \"여러분 생각은 어떠세요?\"와 같은 질문을 던져 댓글을 유도하고, 영상의 참여도를 높이는 단계입니다.\n이 구조에 맞춰서 대본과 각 장면에 맞는 이미지 프롬프트까지 한 번에 생성해주는 것이 바로 첫 번째 지침서의 역할입니다.\n \nAI 스튜디오 '앱 빌더'를 활용한 자동화의 완성  \n강력한 젬 지침이 있어도 문제가 있었어요. 일반 챗봇은 장기 기억이 없어서 대화가 길어지면 핵심 규칙을 까먹고 원치 않는 결과물이 나오기도 했죠. 게다가 이미지 생성도 일곱 장면짜리 대본을 만들려면 일곱 번이나 수동으로 요청해야 하는 비효율적인 작업이었습니다.\n이 모든 문제를 해결해 줄 히든카드가 바로 구글 AI 스튜디오의 '앱 빌더'입니다! 젬 지침을 앱으로 만들면 매번 완벽하게 초기화된 상태에서 지침을 수행하기 때문에 결과물의 품질이 항상 일정해요. 그리고 가장 중요한 점은 이미지 생성도 일괄 처리가 가능하다는 것입니다.\n  알아두세요!\nAI 이미지 생성 API를 활용하면 AI 스튜디오의 하루 사용 제한을 우회할 수 있어요. 유료지만 비용만 지불하면 오픈AI의 '달리 쓰리'나 'GPT 이미지 원' 같은 모델을 원하는 만큼 사용할 수 있습니다. API는 마치 여러분 대신 원하는 정보를 가져다주는 '심부름꾼'이라고 생각하면 쉬워요.\n이 앱을 사용하면 카테고리 선택, 주제 생성, 이미지 스타일, 비율, 장면 수만 설정하고 '대본 생성하기' 버튼만 클릭하면 끝! 장면별 나레이션과 이미지 프롬프트가 모두 정리되어 출력되고, 이미지도 한 번에 생성하거나 개별적으로 수정하여 다시 만들 수 있습니다.\n \n바이럴 쇼핑 콘텐츠 제작: PAS 프레임워크  \n'썰' 생성기를 만들고 테스트하다가 문득 소름 돋는 생각이 스쳐 지나갔습니다. '사람들이 이렇게 이야기에 빠져든다면, 이 강력한 몰입감을 상품 판매에 연결하면 어떻게 될까?' 바로 쿠팡 파트너스나 알리 같은 어필리에이트 마케팅에 적용하는 것이죠.\n  PAS (Problem, Agitate, Solve) 프레임워크\n문제 제기 (Problem): \"인생에서 가장 중요한 면접 전날, 거울을 봤는데 얼굴이 사막처럼 갈라져서 하얗게 각질이 일어난 겁니다\"처럼 독자가 공감할 수 있는 구체적인 문제를 제시합니다.\n불안감 증폭 (Agitate): \"이걸 본 면접관이 '자기 관리도 못 하는 사람이네'라고 생각하면 어떡하지? 이번 기회 놓치면 진짜 내 인생은 끝인데.\"와 같이 시청자를 극한의 불안감으로 몰아넣는 단계입니다.\n해결책 제시 (Solve): 바로 그때, 제품이 '우연히' 나타나 모든 문제를 해결해주는 구원자처럼 등장합니다.\n'바이럴 쇼핑 대본 생성기'는 이 PAS 구조를 활용하여 제품명과 제품 특징만 입력하면 구매욕구를 자극하는 썰 대본을 생성해 줍니다.\n \n이제 여러분 차례! 바이럴 콘텐츠 생성기 앱 사용하기  \n오늘 공개하는 '바이럴 썰 쇼츠 생성기'와 '바이럴 쇼핑 대본 생성기' 앱은 아래 링크를 통해 접속하실 수 있습니다. 접속하신 후 반드시 앱을 복사하여 사용하세요. 그래야 여러분의 필요에 맞게 수정하고, 자유롭게 활용할 수 있습니다.\n바이럴 썰 쇼츠 생성기: [앱 링크]\n바이럴 쇼핑 대본 생성기: [앱 링크]\n앱 사용법은 간단해요. 카테고리나 제품 정보를 선택한 뒤, 원하는 이미지 모델과 스타일, 장면 수 등을 설정하고 버튼만 누르면 됩니다. 여러분만의 바이럴 콘텐츠 공장을 지금 바로 만들어보세요!\n \n마무리: 핵심 요약  \n지금까지 코딩 없이 AI 스튜디오 앱 빌더로 쇼츠 바이럴 콘텐츠 생성기를 만드는 방법을 알아봤습니다. 이제 콘텐츠 아이디어 고갈 걱정은 끝났습니다. 버튼 몇 번만 누르면 바이럴 가능성이 높은 대본과 이미지가 바로 나오니까요!\n \n콘텐츠 제작 시스템, 이것만 기억하세요!\n✨ 바이럴 썰: 12가지 감정 카테고리 기반의 5단계 스토리텔링 구조를 활용하면 됩니다.\n  쇼핑 대본: PAS(문제, 불안감, 해결책) 프레임워크로 구매를 유도하는 썰 대본을 만듭니다.\n  자동화의 핵심:\nAI Studio 앱 빌더 = 젬 지침 + API 연동 (일괄 생성)\n ‍  실행: 버튼 몇 번으로 대본, 이미지 프롬프트, 해시태그까지 한 번에 생성합니다.\n이 시스템으로 효율적인 콘텐츠 제작을 시작하고, 더 이상 아이디어 걱정은 하지 마세요!\n \n자주 묻는 질문 ❓\nQ: AI Studio 앱 빌더를 사용해야 하는 이유가 무엇인가요?\nA: 일반 챗봇은 대화가 길어지면 지침을 잊어버려 오류가 발생할 수 있습니다. 하지만 앱 빌더는 매번 초기화된 상태에서 완벽하게 지침을 수행하여 결과물의 품질이 항상 일정합니다. 또한, 여러 이미지를 한 번에 생성하는 일괄 처리도 가능합니다.\nQ: AI 이미지 생성 API가 왜 필요한가요?\nA: AI 스튜디오 내장 모델은 하루 사용량에 제한이 있습니다. 오픈AI의 '달리 쓰리'나 'GPT 이미지 원' 같은 외부 API를 활용하면 유료지만 원하는 만큼 이미지를 생성할 수 있고, 더 다양한 모델을 활용할 수 있습니다. API는 여러분의 앱이 다른 서비스와 소통할 수 있도록 돕는 심부름꾼과 같은 역할을 합니다.\nQ: 바이럴 콘텐츠 생성기 앱을 어떻게 사용하나요?\nA: 앱을 실행한 후 카테고리(썰 쇼츠)나 제품 정보(쇼핑 대본)를 선택하고, 주제와 이미지 스타일, 장면 수 등을 설정한 뒤 '대본 생성하기' 버튼만 클릭하면 됩니다. 그러면 대본과 이미지 프롬프트가 자동으로 생성되고, 이를 바탕으로 바로 영상을 제작할 수 있습니다.\nQ: 바이럴 썰 쇼츠 대본 지침의 5단계 구조가 궁금해요.\nA: 5단계 구조는 다음과 같습니다: ① 훅킹(궁금증 유발) ② 갈등 고조(몰입 유도) ③ 절정(극적 반전) ④ 결말(감동 및 여운) ⑤ 행동 유도(댓글 유도). 이 구조는 시청자를 영상 끝까지 붙잡아두는 검증된 방법입니다.\nQ: 바이럴 쇼핑 대본 지침의 핵심은 무엇인가요?\nA: 이 지침은 PAS(Problem, Agitate, Solve) 프레임워크를 기반으로 합니다. 먼저 시청자가 공감할 수 있는 문제를 제시하고, 그로 인한 불안감을 증폭시킨 뒤, 마지막에 제품을 해결책으로 제시하며 구매 욕구를 자극하는 방식입니다.",
        "guid": "http://muzbox.tistory.com/483639",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "AI 스튜디오",
          "API",
          "PAS 프레임워크",
          "바이럴 콘텐츠",
          "쇼츠 자동화",
          "숏폼 콘텐츠",
          "앱 빌더",
          "유튜브 쇼츠",
          "제미나이 젬",
          "콘텐츠 제작"
        ],
        "isoDate": "2025-08-10T06:20:41.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "쇼핑 썰, 일상 썰도 문제없어! AI가 만드는 유튜브 쇼츠 대본 GEM 지침 무료 다운로드",
        "link": "http://muzbox.tistory.com/483638",
        "pubDate": "Sun, 10 Aug 2025 15:07:16 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483638#entry483638comment",
        "content": "<div style=\"color: #333; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; font-family: 'Noto Sans KR', sans-serif; box-sizing: border-box;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><b>\"AI로 쇼츠 만드는 법\" 어디까지 해봤니?  </b> 단순한 텍스트만 뽑는 시대는 끝났어요! 바이럴 쇼츠를 위한 완벽한 대본과 이미지 프롬프트까지, AI를 활용한 두 가지 특급 지침을 공개합니다.</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"쇼츠 대본 생성 GEM 지침.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/p3Rh9/btsPMpJFAwN/QruOtktz7c1KDKytnFDxbK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/p3Rh9/btsPMpJFAwN/QruOtktz7c1KDKytnFDxbK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/p3Rh9/btsPMpJFAwN/QruOtktz7c1KDKytnFDxbK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fp3Rh9%2FbtsPMpJFAwN%2FQruOtktz7c1KDKytnFDxbK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"쇼핑 썰, 일상 썰도 문제없어! AI가 만드는 유튜브 쇼츠 대본 GEM 지침 무료 다운로드\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"쇼츠 대본 생성 GEM 지침.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;지금 이 순간에도 누군가는 단순한 1분짜리 쇼츠 영상 하나로 월 수백만 원의 수익을 만들어내고 있다고 해요. 그런데 열심히 만든 내 영상은 조회수 100에서 멈춰있을 때... 정말 속상하잖아요. 도대체 그들은 뭘 다르게 하는 걸까요? 바로 '시스템'의 차이라고 생각해요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">오늘은 그 시스템을 여러분께 통째로 공개하려고 합니다. 저는 Gemini를 활용해서 콘텐츠를 만드는데, 이 지침들을 사용한 이후로는 콘텐츠 제작이 훨씬 쉽고 재미있어졌어요. 오늘은 제가 발견한 두 가지 쇼츠 제작 지침, 그중에서도 특히 강력한 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">'바이럴 썰' 지침과 '바이럴 쇼핑 썰' 지침</span>을 파헤쳐 보려고 해요. 이 글을 끝까지 읽으시면 AI를 활용한 쇼츠 제작 전문가가 될 수 있을 거예요!&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>바이럴 썰 유튜브 쇼츠 생성 지침  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 지침은 특정 제품 홍보가 아닌, 다양한 주제의 '썰' 영상을 만드는 데 초점을 맞추고 있어요. 이 지침의 핵심은 AI에게 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">'바이럴 쇼츠 영상 대본을 전문으로 쓰는 천재 스토리텔러'라는 페르소나</span>를 부여하는 것입니다. AI는 수많은 바이럴 영상을 분석한 결과를 바탕으로, 12가지 감정의 굴레(달달한 연애, 짜릿한 복수, 소름 돋는 반전 등)를 관통하는 이야기를 만들어내죠.</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin: 0 0 10px;\" data-ke-size=\"size23\"><b>  구동 원리: 5단계 스토리텔링 구조</b></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 지침은 검증된 5단계 스토리텔링 구조를 강제하는 것이 핵심이에요.</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>1. 훅킹(Hook):</b> 3초 안에 시청자의 멱살을 잡아 스크롤을 멈추게 만듭니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>2. 갈등 고조(Rising Action):</b> 주인공이 겪는 문제를 구체적으로 보여주며 몰입도를 높입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>3. 절정(Climax):</b> 갈등과 감정이 폭발하며 극적인 반전이 터져 나옵니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>4. 결말(Resolution):</b> 모든 것이 해결되며 감동이나 교훈, 여운을 남기죠.</li>\n<li style=\"margin-bottom: 0;\"><b>5. 행동 유도(CTA):</b> \"여러분 생각은 어떠세요?\"와 같은 질문으로 댓글 참여를 유도합니다.</li>\n</ul>\n<p style=\"margin-top: 15px; font-weight: bold;\" data-ke-size=\"size16\">사용법:</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\">\"시작\"을 입력하고, 12개의 카테고리 중 하나를 선택해요.</li>\n<li style=\"margin-bottom: 8px;\">제시된 5개의 주제 중 하나를 선택한 후, 장면 수, 이미지 스타일, 비율을 정하면 대본과 프롬프트가 생성됩니다.</li>\n<li style=\"margin-bottom: 0;\">마지막으로 이미지를 생성해 달라고 요청하면 쇼츠 제작 준비가 끝나요.</li>\n</ol>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>바이럴 쇼핑 썰 쇼츠 제작 지침  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 지침은 '썰'의 강력한 몰입감을 상품 판매에 적용하기 위해 탄생했어요. AI에게 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">'스토리텔링 광고 전문가'라는 페르소나</span>를 부여해, 제품 홍보에 특화된 썰을 만들어주죠.</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin: 0 0 10px;\" data-ke-size=\"size23\"><b>  구동 원리: '문제-불안-해결' (Problem-Agitate-Solve)</b></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 지침은 광고 공식인 PAS(Problem, Agitate, Solve) 구조를 스토리텔링에 완벽하게 녹여낸 것이 특징이에요. 예를 들어, \"인생에서 가장 중요한 면접 전날, 거울을 봤는데 얼굴이 사막처럼 갈라진\" 문제를 제시하고, \"이걸 본 면접관이 자기 관리도 못 한다고 생각하면 어쩌지?\"라며 불안감을 극대화합니다. 마지막으로 제품이 우연히 나타나 구원자처럼 문제를 해결하는 식으로 이야기가 전개돼요.</p>\n<p style=\"font-weight: bold;\" data-ke-size=\"size16\">사용법:</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\">\"시작\"을 입력하고, 제품명, 제품 특징, 장면 수, 이미지 스타일을 입력합니다.</li>\n<li style=\"margin-bottom: 0;\">지침에 맞게 대본과 이미지 프롬프트가 생성되면, 이미지를 요청하여 쇼츠 제작 준비를 완료합니다.</li>\n</ol>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">대본의 톤앤매너는 마치 '친구가 흥분해서 쏟아내는 썰'처럼 극도로 비격식적인 구어체를 사용합니다. 그리고 이미지 생성에 있어서 일관된 캐릭터를 유지하도록 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">캐릭터 외형을 상세히 설정하고 모든 프롬프트에 반복해서 포함</span>시키는 방식도 적용되죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>두 지침의 주요 차이점 비교  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">두 지침이 쇼츠 제작에 특화되어 있지만, 사실 목적과 구동 원리에서 미묘한 차이가 있어요. 이 차이점을 제대로 이해하면 상황에 맞게 더 효과적인 콘텐츠를 만들 수 있답니다. 한눈에 비교할 수 있도록 표로 정리해 봤으니 참고해보세요!</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">구분</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">바이럴 썰 지침</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">바이럴 쇼핑 썰 지침</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>주요 목적</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">다양한 썰 기반의 스토리텔링</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">제품 홍보 및 광고</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>AI 페르소나</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">천재 스토리텔러</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">스토리텔링 광고 전문가</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>스토리 구조</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">훅-전개-클라이맥스-해결-행동유도</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">문제-불안-해결 (P-A-S)</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>핵심 특징</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">다양한 카테고리, 넓은 주제 범위</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">감정적 몰입 유도 및 제품 가치 증명</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>마무리 및 핵심 요약  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">두 지침 모두 콘텐츠 기획 단계의 막막함을 해결해주고, 제작 시간을 단축시켜주면서도 결과물의 퀄리티는 훨씬 높여주는 최고의 파트너였어요. 특히 일반 챗봇의 약점인 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">장기 기억 상실과 이미지 생성 비효율성 문제를 앱 빌더로 해결</span>할 수 있다는 점이 정말 중요했어요. 이제 콘텐츠 기획부터 제작, 편집까지 완전 자동화된 시스템을 갖출 수 있는 거죠.</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<style>\n        .single-summary-card-container {\n            font-family: 'Noto Sans KR', sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px 10px;\n            background-color: #f0f2f5;\n            margin: 20px 0;\n        }\n        .single-summary-card {\n            width: 100%;\n            max-width: 700px;\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n            padding: 25px;\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            border: 1px solid #e0e0e0;\n            box-sizing: border-box;\n            height: auto;\n            min-height: unset;\n        }\n        .single-summary-card .card-header {\n            display: flex;\n            align-items: center;\n            border-bottom: 2px solid #1a73e8;\n            padding-bottom: 12px;\n            margin-bottom: 12px;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 34px;\n            color: #1a73e8;\n            margin-right: 14px;\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 26px;\n            color: #1a73e8;\n            margin: 0;\n            line-height: 1.3;\n            font-weight: 700;\n        }\n        .single-summary-card .card-content {\n            flex-grow: 1;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-around;\n            font-size: 17px;\n            line-height: 1.65;\n            color: #333;\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 10px;\n        }\n        .single-summary-card .card-content strong {\n            color: #005cb2;\n            font-weight: 600;\n        }\n        .single-summary-card .card-content .highlight {\n            background-color: #fffde7;\n            padding: 2px 4px;\n            border-radius: 3px;\n            font-weight: bold;\n        }\n        .single-summary-card .card-content .formula {\n            background-color: #e8f4fd;\n            padding: 6px 10px;\n            border-radius: 4px;\n            font-size: 0.9em;\n            text-align: center;\n            margin-top: 5px;\n            color: #155724;\n        }\n        .single-summary-card .card-footer {\n            font-size: 14px;\n            color: #777;\n            text-align: center;\n            padding-top: 12px;\n            border-top: 1px dashed #ddd;\n            margin-top: auto;\n        }\n        @media (max-width: 768px) {\n            .single-summary-card {\n                padding: 18px;\n                height: auto;\n                min-height: unset;\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 28px;\n                margin-right: 10px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 20px;\n            }\n            .single-summary-card .card-content {\n                font-size: 15px;\n                line-height: 1.5;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 8px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 5px 8px;\n                font-size: 0.85em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 13px;\n                padding-top: 10px;\n            }\n        }\n        @media (max-width: 480px) {\n            .single-summary-card {\n                padding: 15px;\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 26px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 18px;\n            }\n            .single-summary-card .card-content {\n                font-size: 14px;\n                line-height: 1.4;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 6px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 4px 6px;\n                font-size: 0.8em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 12px;\n                padding-top: 8px;\n            }\n        }\n    </style>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">두 가지 쇼츠 지침 핵심 비교 ✨</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 바이럴 썰:</b> <span class=\"highlight\">다양한 일상 썰 스토리</span>, Hook-Climax-CTA 구조로 폭넓은 주제 제작!</div>\n<div class=\"section\"><b>  바이럴 쇼핑 썰:</b> <span class=\"highlight\">제품 광고 특화</span>, Problem-Agitate-Solve 구조로 감정 몰입 유도!</div>\n<div class=\"section\"><b>  공통 원리:</b>\n<div class=\"formula\">구어체 대본 &amp; 일관된 캐릭터를 유지하는 이미지 프롬프트 생성</div>\n</div>\n<div class=\"section\"><b> &zwj;  이점:</b> <span class=\"highlight\">콘텐츠 기획부터 제작까지 시간 단축</span>, 누구나 전문가처럼 만드는 마법 같은 도구!</div>\n</div>\n<div class=\"card-footer\">이 지침 원본을 다운받고 싶으시면 아래 다운로드 섹션을 확인해주세요!  </div>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 이 지침을 사용하려면 특별한 프로그램이 필요한가요?</div>\n<div style=\"padding-left: 15px;\">A: 아니요! Gemini와 같은 AI 챗봇만 있으면 누구나 사용할 수 있어요. 코딩 지식이 전혀 없어도 괜찮아요.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 지침으로 생성한 대본을 상업적으로 이용해도 되나요?</div>\n<div style=\"padding-left: 15px;\">A: 네, 지침을 통해 생성된 대본은 자유롭게 활용하실 수 있어요. 하지만 이미지 생성 시 AI 서비스의 이용 약관을 꼭 확인해주세요.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 두 지침의 주요 차이점은 무엇인가요?</div>\n<div style=\"padding-left: 15px;\">A: '바이럴 쇼핑 썰'은 제품 광고에, '바이럴 썰'은 다양한 일상 스토리에 특화되어 있습니다. 스토리 구조와 페르소나에서도 차이가 있어요.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI 스튜디오 앱 빌더를 사용하면 뭐가 좋은가요?</div>\n<div style=\"padding-left: 15px;\">A: 일반 챗봇의 장기 기억 상실 문제로 인한 오류를 방지하고, 여러 이미지를 한 번에 생성하는 등 콘텐츠 제작을 자동화할 수 있어요.</div>\n</div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>지침 원본 무료 다운로드  </b></h2>\n<p data-ke-size=\"size16\">압축을 푸신 후 GEMINI 에서 각각의 GEM 지침으로 등록하세요.</p>\n<figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/bcaQ7y/dJMb9fLEIXM/u7Xjy7HJ2b1iT1YH1K9KN1/%EC%9C%A0%ED%8A%9C%EB%B8%8C%20%EC%87%BC%EC%B8%A0%20%EC%A7%80%EC%B9%A8.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">유튜브 쇼츠 지침.zip</span></div>\n<div class=\"size\">0.01MB</div>\n</div>\n  </a></figure>\n\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px; text-align: center;\" data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"이 지침을 사용하려면 특별한 프로그램이 필요한가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  아니요! Gemini와 같은 AI 챗봇만 있으면 누구나 사용할 수 있어요. 코딩 지식이 전혀 없어도 괜찮습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"지침으로 생성한 대본을 상업적으로 이용해도 되나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  네, 지침을 통해 생성된 대본은 자유롭게 활용하실 수 있어요. 하지만 이미지 생성 시 AI 서비스의 이용 약관을 꼭 확인해주세요.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"두 지침의 주요 차이점은 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  '바이럴 쇼핑 썰'은 제품 광고에, '바이럴 썰'은 다양한 일상 스토리에 특화되어 있습니다. 스토리 구조와 페르소나에서도 차이가 있어요.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 스튜디오 앱 빌더를 사용하면 뭐가 좋은가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  일반 챗봇의 장기 기억 상실 문제로 인한 오류를 방지하고, 여러 이미지를 한 번에 생성하는 등 콘텐츠 제작을 자동화할 수 있습니다.\"\n                }\n            }\n        ]\n    }\n    </script>\n</div>",
        "contentSnippet": "\"AI로 쇼츠 만드는 법\" 어디까지 해봤니?   단순한 텍스트만 뽑는 시대는 끝났어요! 바이럴 쇼츠를 위한 완벽한 대본과 이미지 프롬프트까지, AI를 활용한 두 가지 특급 지침을 공개합니다.\n\n\n \n 지금 이 순간에도 누군가는 단순한 1분짜리 쇼츠 영상 하나로 월 수백만 원의 수익을 만들어내고 있다고 해요. 그런데 열심히 만든 내 영상은 조회수 100에서 멈춰있을 때... 정말 속상하잖아요. 도대체 그들은 뭘 다르게 하는 걸까요? 바로 '시스템'의 차이라고 생각해요.\n \n오늘은 그 시스템을 여러분께 통째로 공개하려고 합니다. 저는 Gemini를 활용해서 콘텐츠를 만드는데, 이 지침들을 사용한 이후로는 콘텐츠 제작이 훨씬 쉽고 재미있어졌어요. 오늘은 제가 발견한 두 가지 쇼츠 제작 지침, 그중에서도 특히 강력한 '바이럴 썰' 지침과 '바이럴 쇼핑 썰' 지침을 파헤쳐 보려고 해요. 이 글을 끝까지 읽으시면 AI를 활용한 쇼츠 제작 전문가가 될 수 있을 거예요! \n \n바이럴 썰 유튜브 쇼츠 생성 지침  \n이 지침은 특정 제품 홍보가 아닌, 다양한 주제의 '썰' 영상을 만드는 데 초점을 맞추고 있어요. 이 지침의 핵심은 AI에게 '바이럴 쇼츠 영상 대본을 전문으로 쓰는 천재 스토리텔러'라는 페르소나를 부여하는 것입니다. AI는 수많은 바이럴 영상을 분석한 결과를 바탕으로, 12가지 감정의 굴레(달달한 연애, 짜릿한 복수, 소름 돋는 반전 등)를 관통하는 이야기를 만들어내죠.\n  구동 원리: 5단계 스토리텔링 구조\n이 지침은 검증된 5단계 스토리텔링 구조를 강제하는 것이 핵심이에요.\n1. 훅킹(Hook): 3초 안에 시청자의 멱살을 잡아 스크롤을 멈추게 만듭니다.\n2. 갈등 고조(Rising Action): 주인공이 겪는 문제를 구체적으로 보여주며 몰입도를 높입니다.\n3. 절정(Climax): 갈등과 감정이 폭발하며 극적인 반전이 터져 나옵니다.\n4. 결말(Resolution): 모든 것이 해결되며 감동이나 교훈, 여운을 남기죠.\n5. 행동 유도(CTA): \"여러분 생각은 어떠세요?\"와 같은 질문으로 댓글 참여를 유도합니다.\n사용법:\n\"시작\"을 입력하고, 12개의 카테고리 중 하나를 선택해요.\n제시된 5개의 주제 중 하나를 선택한 후, 장면 수, 이미지 스타일, 비율을 정하면 대본과 프롬프트가 생성됩니다.\n마지막으로 이미지를 생성해 달라고 요청하면 쇼츠 제작 준비가 끝나요.\n \n바이럴 쇼핑 썰 쇼츠 제작 지침  \n이 지침은 '썰'의 강력한 몰입감을 상품 판매에 적용하기 위해 탄생했어요. AI에게 '스토리텔링 광고 전문가'라는 페르소나를 부여해, 제품 홍보에 특화된 썰을 만들어주죠.\n  구동 원리: '문제-불안-해결' (Problem-Agitate-Solve)\n이 지침은 광고 공식인 PAS(Problem, Agitate, Solve) 구조를 스토리텔링에 완벽하게 녹여낸 것이 특징이에요. 예를 들어, \"인생에서 가장 중요한 면접 전날, 거울을 봤는데 얼굴이 사막처럼 갈라진\" 문제를 제시하고, \"이걸 본 면접관이 자기 관리도 못 한다고 생각하면 어쩌지?\"라며 불안감을 극대화합니다. 마지막으로 제품이 우연히 나타나 구원자처럼 문제를 해결하는 식으로 이야기가 전개돼요.\n사용법:\n\"시작\"을 입력하고, 제품명, 제품 특징, 장면 수, 이미지 스타일을 입력합니다.\n지침에 맞게 대본과 이미지 프롬프트가 생성되면, 이미지를 요청하여 쇼츠 제작 준비를 완료합니다.\n대본의 톤앤매너는 마치 '친구가 흥분해서 쏟아내는 썰'처럼 극도로 비격식적인 구어체를 사용합니다. 그리고 이미지 생성에 있어서 일관된 캐릭터를 유지하도록 캐릭터 외형을 상세히 설정하고 모든 프롬프트에 반복해서 포함시키는 방식도 적용되죠.\n \n두 지침의 주요 차이점 비교  \n두 지침이 쇼츠 제작에 특화되어 있지만, 사실 목적과 구동 원리에서 미묘한 차이가 있어요. 이 차이점을 제대로 이해하면 상황에 맞게 더 효과적인 콘텐츠를 만들 수 있답니다. 한눈에 비교할 수 있도록 표로 정리해 봤으니 참고해보세요!\n구분\n바이럴 썰 지침\n바이럴 쇼핑 썰 지침\n\n\n\n\n주요 목적\n다양한 썰 기반의 스토리텔링\n제품 홍보 및 광고\n\n\nAI 페르소나\n천재 스토리텔러\n스토리텔링 광고 전문가\n\n\n스토리 구조\n훅-전개-클라이맥스-해결-행동유도\n문제-불안-해결 (P-A-S)\n\n\n핵심 특징\n다양한 카테고리, 넓은 주제 범위\n감정적 몰입 유도 및 제품 가치 증명\n\n\n\n \n마무리 및 핵심 요약  \n두 지침 모두 콘텐츠 기획 단계의 막막함을 해결해주고, 제작 시간을 단축시켜주면서도 결과물의 퀄리티는 훨씬 높여주는 최고의 파트너였어요. 특히 일반 챗봇의 약점인 장기 기억 상실과 이미지 생성 비효율성 문제를 앱 빌더로 해결할 수 있다는 점이 정말 중요했어요. 이제 콘텐츠 기획부터 제작, 편집까지 완전 자동화된 시스템을 갖출 수 있는 거죠.\n \n \n두 가지 쇼츠 지침 핵심 비교 ✨\n✨ 바이럴 썰: 다양한 일상 썰 스토리, Hook-Climax-CTA 구조로 폭넓은 주제 제작!\n  바이럴 쇼핑 썰: 제품 광고 특화, Problem-Agitate-Solve 구조로 감정 몰입 유도!\n  공통 원리:\n구어체 대본 & 일관된 캐릭터를 유지하는 이미지 프롬프트 생성\n ‍  이점: 콘텐츠 기획부터 제작까지 시간 단축, 누구나 전문가처럼 만드는 마법 같은 도구!\n이 지침 원본을 다운받고 싶으시면 아래 다운로드 섹션을 확인해주세요!  \n자주 묻는 질문 ❓\nQ: 이 지침을 사용하려면 특별한 프로그램이 필요한가요?\nA: 아니요! Gemini와 같은 AI 챗봇만 있으면 누구나 사용할 수 있어요. 코딩 지식이 전혀 없어도 괜찮아요.\nQ: 지침으로 생성한 대본을 상업적으로 이용해도 되나요?\nA: 네, 지침을 통해 생성된 대본은 자유롭게 활용하실 수 있어요. 하지만 이미지 생성 시 AI 서비스의 이용 약관을 꼭 확인해주세요.\nQ: 두 지침의 주요 차이점은 무엇인가요?\nA: '바이럴 쇼핑 썰'은 제품 광고에, '바이럴 썰'은 다양한 일상 스토리에 특화되어 있습니다. 스토리 구조와 페르소나에서도 차이가 있어요.\nQ: AI 스튜디오 앱 빌더를 사용하면 뭐가 좋은가요?\nA: 일반 챗봇의 장기 기억 상실 문제로 인한 오류를 방지하고, 여러 이미지를 한 번에 생성하는 등 콘텐츠 제작을 자동화할 수 있어요.\n \n지침 원본 무료 다운로드  \n압축을 푸신 후 GEMINI 에서 각각의 GEM 지침으로 등록하세요.\n\n    \n\n    \n유튜브 쇼츠 지침.zip\n0.01MB\n\n\n \n \n \n\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"이 지침을 사용하려면 특별한 프로그램이 필요한가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  아니요! Gemini와 같은 AI 챗봇만 있으면 누구나 사용할 수 있어요. 코딩 지식이 전혀 없어도 괜찮습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"지침으로 생성한 대본을 상업적으로 이용해도 되나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  네, 지침을 통해 생성된 대본은 자유롭게 활용하실 수 있어요. 하지만 이미지 생성 시 AI 서비스의 이용 약관을 꼭 확인해주세요.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"두 지침의 주요 차이점은 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  '바이럴 쇼핑 썰'은 제품 광고에, '바이럴 썰'은 다양한 일상 스토리에 특화되어 있습니다. 스토리 구조와 페르소나에서도 차이가 있어요.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 스튜디오 앱 빌더를 사용하면 뭐가 좋은가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  일반 챗봇의 장기 기억 상실 문제로 인한 오류를 방지하고, 여러 이미지를 한 번에 생성하는 등 콘텐츠 제작을 자동화할 수 있습니다.\"\n                }\n            }\n        ]\n    }",
        "guid": "http://muzbox.tistory.com/483638",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 지침 무료 배포",
          "ai 스토리텔링",
          "AI 이미지 생성",
          "ai 콘텐츠 제작",
          "gemini 활용법",
          "바이럴 쇼츠",
          "쇼츠 제작 꿀팁",
          "쇼핑 콘텐츠",
          "숏폼 콘텐츠",
          "유튜브 쇼츠",
          "콘텐츠 자동화"
        ],
        "isoDate": "2025-08-10T06:07:16.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 14화, 좋은 계획인데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2346",
        "pubDate": "Wed, 13 Aug 2025 20:58:36 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/08/13/198a30ece9651ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-08-13T11:58:36.000Z"
      },
      {
        "creator": "샤말란의눈",
        "title": "[NS2] 수채화처럼 그려진 한 여인의 인생, Dear me, I was...",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2345",
        "pubDate": "Wed, 13 Aug 2025 13:59:30 +0900",
        "author": "샤말란의눈",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/08/13/1989eed292e13b2a1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-08-13T04:59:30.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "NPU 대응을 포함한 25종류 이상의 로컬 AI 기능을 시험할 수 있는 AI Dev Gallery",
        "link": "https://jacking75.github.io/ai-llm_20250810/",
        "pubDate": "Sun, 10 Aug 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQLuikeUDrMGQnvOrVsNkggmdhx8vxzNfIkbeEPRKvnuIyTjCR3W8uYEBp5pFbcMTxWUO2UoeclgfhX/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-llm_20250810/",
        "isoDate": "2025-08-09T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "진짜 1인 개발자 전성시대",
        "link": "https://jeho.page/essay/2025/08/11/solo-developer.html",
        "pubDate": "2025-08-11T03:51:00.000Z",
        "author": "김재호",
        "content": "<p><a href=\"/essay/2022/09/14/successful-developer.html\">1인 개발자 전성시대</a>란 글을 2022년에 썼습니다.</p>\n\n<p>그때는 개발 환경과 생태계가 편리해진다는 이유로 많은 직장인 개발자들이 1인 개발자가 될 수 있다는 생각을 했습니다.<br />\n앱스토어, GitHub, AWS, Flutter, GA, Firebase, Let’s Encrypt, Cloudflare 등등.</p>\n\n<p>하지만 AI가 코딩을 해줄 날이 이렇게 빨리 올 줄은 전혀 예상을 못 했었습니다.<br />\n그러니깐… 개발자들이 1인 개발자가 될 수 있을 거라 생각했지, 디자이너, 마케터, 기획자들이 다 1인 개발자가 될 수 있을 거라 생각했던 건 아닙니다.</p>\n\n<p>그런데 진짜 그런 엄청난 세상이 와버렸습니다.<br />\n회사에서 여러 사람들이 모여 매일 야근하고 한땀한땀 코딩하던 시절이 진짜 있었나?<br />\n바로 몇 년 전 일인데 90년대 이야기 아닌가 싶을 정도로 아득하게 느껴집니다.</p>\n\n<p>직장인 개발자가 99.5%, 자기 서비스를 만드는 1인 개발자는 0.5%나 되려나요?<br />\n앞으로는 90대 10 정도까지는 올라올 수도 있지 않을까라는 생각을 합니다.<br />\n대기업이든 스타트업이든 개발자 개인이든 모두에게 엄청난 변화가 오고 있습니다.</p>\n\n<p>미리 자리를 잡아둔 게 정말 다행이라는 생각이 들면서도…<br />\n무수히 생기는 경쟁자들 덕분에 저도 멈춰있지 말고 만들어 보고 싶었던 것들을 모두 만들어보자는 생각이 듭니다.\n<br />\n<br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2020/11/10/앱스토어는-스티브잡스가-개발자들에게-주고간-선물.html\">앱스토어는 스티브잡스가 개발자들에게 주고간 선물</a></li>\n  <li><a href=\"/essay/2019/07/26/멀리-가려면-혼자-가라.html\">멀리 가려면 혼자 가라</a></li>\n  <li><a href=\"https://brunch.co.kr/@buildingking/68\">1인 개발자로 혼자 일하는 이유</a></li>\n</ul>",
        "contentSnippet": "1인 개발자 전성시대란 글을 2022년에 썼습니다.\n그때는 개발 환경과 생태계가 편리해진다는 이유로 많은 직장인 개발자들이 1인 개발자가 될 수 있다는 생각을 했습니다.\n하지만 AI가 코딩을 해줄 날이 이렇게 빨리 올 줄은 전혀 예상을 못 했었습니다.\n그런데 진짜 그런 엄청난 세상이 와버렸습니다.\n직장인 개발자가 99.5%, 자기 서비스를 만드는 1인 개발자는 0.5%나 되려나요?\n미리 자리를 잡아둔 게 정말 다행이라는 생각이 들면서도…\n함께 읽으면 좋은 글:\n앱스토어는 스티브잡스가 개발자들에게 주고간 선물\n멀리 가려면 혼자 가라\n1인 개발자로 혼자 일하는 이유",
        "summary": "1인 개발자 전성시대란 글을 2022년에 썼습니다.",
        "id": "https://jeho.page/essay/2025/08/11/solo-developer",
        "isoDate": "2025-08-11T03:51:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "셀트리온 일라이 릴리 미국 공장 인수 시도",
        "link": "http://serverdown.tistory.com/1373",
        "pubDate": "Fri, 8 Aug 2025 22:01:33 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1373#entry1373comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"395\" data-origin-height=\"201\"><span data-url=\"https://blog.kakaocdn.net/dn/dERzo4/btsPK2Bzl4P/dOeaqfXAUI1F6zUWxaXaOk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dERzo4/btsPK2Bzl4P/dOeaqfXAUI1F6zUWxaXaOk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dERzo4/btsPK2Bzl4P/dOeaqfXAUI1F6zUWxaXaOk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdERzo4%2FbtsPK2Bzl4P%2FdOeaqfXAUI1F6zUWxaXaOk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"395\" height=\"201\" data-origin-width=\"395\" data-origin-height=\"201\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=hvqc7R5p0l0&amp;t=294s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=hvqc7R5p0l0&amp;t=294s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=hvqc7R5p0l0\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/f9Fuq/hyZvkqFpwg/kwdSmp0ytcEGQq1B4KFak1/img.jpg?width=1280&amp;height=720&amp;face=518_102_708_308,https://scrap.kakaocdn.net/dn/btWQUK/hyZvm9RDdq/8IAvu7p2QkxKUEoJ3huZ4K/img.jpg?width=1280&amp;height=720&amp;face=518_102_708_308\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"셀트리온, 예상밖 인수 결정&hellip;&ldquo;일라이 릴리 품었다&rdquo;\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/hvqc7R5p0l0\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">주가 더럽게 안가지만 이번엔 진짜로 갈 수도 있겠습니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미국에서 생산을 하면 관세를 깎아주는 법안 때문에 인수 하는거 같군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">앱토즈마 라는게 좋다는군요 기대 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">8분14초에 앵커가 대본을 잘 못읽는거 같은데</p>\n<p data-ke-size=\"size16\">못알아 들었습니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=hvqc7R5p0l0&t=294s\n\n\n\n \n \n주가 더럽게 안가지만 이번엔 진짜로 갈 수도 있겠습니다.\n \n미국에서 생산을 하면 관세를 깎아주는 법안 때문에 인수 하는거 같군요\n \n앱토즈마 라는게 좋다는군요 기대 됩니다.\n \n8분14초에 앵커가 대본을 잘 못읽는거 같은데\n못알아 들었습니다.",
        "guid": "http://serverdown.tistory.com/1373",
        "categories": [
          "투자",
          "셀트리온"
        ],
        "isoDate": "2025-08-08T13:01:33.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "역설계",
        "link": "http://jojoldu.tistory.com/841",
        "pubDate": "Mon, 11 Aug 2025 09:50:18 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "http://jojoldu.tistory.com/841#entry841comment",
        "content": "<p data-ke-size=\"size16\">소프트웨어 엔지니어로 성장하면서 \"저 사람처럼 코드를 작성하고 싶다\" 라는 생각으로 프로젝트 코드를 그대로 따라친 적이 많다.<br />원어민의 발음을 쉐도잉 (Shadowing) 하듯이 그들의 프로젝트 코드를 처음 Git log부터 순서대로 따라 작성했다.</p>\n<p data-ke-size=\"size16\">테스트 주도 개발 책에 예제를 활용해서 <a href=\"https://jojoldu.tistory.com/231\">JUnit을 TDD로 직접 만들어 보거나</a>, 스프링 프레임워크를 따라치면서 로드 존슨을 비롯한 여러 개발자들이 왜 당시에 이렇게 작성했는지 고민해보곤 했다.<br />직접 하이버네이트의 기본 기능을 만들어보고 하이버네이트는 내부적으로 어떻게 구현했는지 비교해보기도 했다.</p>\n<p data-ke-size=\"size16\">이렇게 해당 프레임워크들의 Git log대로(고민의 흐름대로) 작성하다보면 그들의 생각을 조금은 엿볼 수 있었다.<br />실무에서 무언가 내 의도대로 안되었을 때, <b>되어야 하는데 안되는 건지, 애초에 안되야 하는게 맞는건지</b>를 조금은 구분할 수 있게 되어 문제가 발생하면 빠르게 예상 되는 지점을 좁힐 수 있었다.</p>\n<p data-ke-size=\"size16\">한때는 무라카미 하루키의 글을 필사하기도 했다.<br />\"달리기를 말할 때 내가 하고 싶은 이야기\", \"직업으로서의 소설가\" 같은 책들은 그 당시의 생생한 주변 풍경을 너무 잘 묘사해서 이 표현을 너무 닮고 싶었다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">히로시마의 선발 투수는 분명 다카하시였던 것으로 알고 있습니다.<br /><b>야쿠르트의 선발은 야스다였습니다. 1회 말, 다카하시가 제1구를 던지자 힐턴은 그것을 좌중간에 깔끔하게 띄워 올려 2루타를 만들었습니다. 방망이가 공에 맞는 상쾌한 소리가 진구 구장에 울려 퍼졌습니다. 띄엄띄엄 박수 소리가 주위에서 일었습니다</b>.<br />나는 그때 아무런 맥락도 없이, 아무런 근거도 없이 문득 이렇게 생각했습니다.<br />&lsquo;그래, 나도 소설을 쓸 수 있을지 모른다&rsquo;라고.</p>\n<p data-ke-size=\"size16\">그때의 감각을 나는 아직도 확실하게 기억합니다.<br /><b>하늘에서 뭔가가 하늘하늘 천천히 내려왔고 그것을 두 손으로 멋지게 받아낸 듯한 기분이었습니다</b>.<br />어째서 그것이 때마침 내 손안에 떨어졌는지, 그 이유는 잘 모르겠습니다. 그때도 몰랐고 지금도 모릅니다. 하지만 이유야 어찌 됐건 아무튼 그것이 일어났습니다.<br />그것은 뭐라고 해야 할까, 일종의 계시 같은 것이었습니다. 영어에 epiphany라는 말이 있습니다. 일본어로 번역하면 &lsquo;본질의 돌연한 현현顯現&rsquo; &lsquo;직감적인 진실 파악&rsquo;이라는 어려운 단어입니다.<br />알기 쉽게 말하자면, &lsquo;어느 날 돌연 뭔가가 눈앞에 쓱 나타나고 그것에 의해 모든 일의 양상이 확 바뀐다&rsquo;라는 느낌입니다.<br />바로 그것이 그날 오후에 내 신상에 일어났습니다.<br />그 일을 경계로 내 인생의 양상이 확 바뀐 것입니다.<br /><b>데이브 힐턴이 톱타자로 진구 구장에서 아름답고 날카로운 2루타를 날린 그 순간에</b>.</p>\n<p data-ke-size=\"size16\">[직업으로서의 소설가 - 제 2회 소설가가 된 무렵]</p>\n</blockquote>\n<p data-ke-size=\"size16\">컨퍼런스에서 누군가 이목을 끄는 장표를 만들었다면 그걸 사진을 찍어두고 적절한 때에 사용하기도 하고,<br />유튜브, 팟캐스트 등에서 좋은 인터뷰 질문이 있으면 그걸 기억해두고 다음 우리 촬영때 그 질문을 응용해서 사용하기도 했다.</p>\n<p data-ke-size=\"size16\">혼자서 창작하는데는 재능이 없다고 생각하고 주변의 많은 재료들을 최대한 흡수해서 응용하는 것을 주로 하던 입장에서는 위로와 함께 좀 더 구체적인 노하우를 얻을 수 있었다.</p>\n<p data-ke-size=\"size16\">1부까지는 역설계라는 말에 어울리는 내용들이였지만, 2부 부터는 탁월한 성과를 내는 사람이 되는 구체적인 방법들을 전달한다.<br />그래서 2부 부터는 역설계 내용과는 조금 거리가 있다고 느껴지긴 했지만, 그럼에도 2부 역시 배울게 많았다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>성장을 위해 선행지표, 후행지표를 제대로 정하는 방법</li>\n<li>최대한 실행에 대한 리스크를 줄이는 방법</li>\n<li>반복적 연습이 아닌 전략적 연습을 수행하는 방법</li>\n<li>전문가에게서 값진 조언을 얻는 법</li>\n</ul>\n<p data-ke-size=\"size16\">등등 그간 보았던 여러 탁월함에 대한 책들의 종합 개론서 같은 느낌이 2부였다.</p>\n<p data-ke-size=\"size16\">당장 실행해야할 액션 아이템들도 얻었다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">연구 팀은 중간고사 일주일 전에 학생들을 세 그룹으로 나눴다.<br />첫 번째 그룹에게는 <b>중간고사에서 좋은 성적을 받는 것</b>을 상상하라고 말했다.<br />두 번째 그룹에게는 <b>좋은 성적이 아니라 공부하는 과정</b>을 상상하라고 했다.<br />세 번째 그룹에게는 <b>일주일 동안 공부한 시간을 기록</b>하게 했다.<br />...<br />어느 그룹이 중간고사에서 가장 좋은 성적을 받았을까?<br />당연히 <b>공부하는 과정을 상상한 그룹이었다</b>.<br />이들은 실제로 더 열심히 공부했고 불안감이 줄었으며 성적도 더 높게 나왔다.<br />...<br />대조군과 비교할 때, 짐캐리처럼 성공을 상상한 그룹이 중간고사 성적이 가장 낮았다.<br />...<br /><b>바라는 결과를 달성한 모습을 상상할 때 경험하는 감정적 보상이 성공에 필요한 작업을 수행하려는 욕구를 감소시키기 때문</b>이다.<br />[6장 - 뻔한 연습이 아니라 전략적 연습이 필요하다]</p>\n</blockquote>\n<p data-ke-size=\"size16\">\"결과\"에 대한 상상이 아닌 \"과정\"에 대한 상상이 훨씬 더 높은 성취를 내는데 도움이 된다는 것에 확신이 생겼다.<br />프로젝트가 시작 되기 전에 \"이 프로젝트가 잘 되면 어떤 즐거운 결과가 있을 것인지\"를 이야기 했다면, 이제는 프로젝트 진행 과정 중에서 발생할만한 일을 좀 더 자주 이야기하고 팀원들이 미리 상상할 수 있도록 하는 것이 더 좋은 결과물을 낼 수 있겠다는 생각을 했다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">예컨대 중요한 기획서를 작성하는 중이라면 동료에게 그냥 \"피드백을 달라\"고 하지말고, 첫 단락이 읽는 이의 호기심을 끌어당기는지, 또는 프로젝트 스케줄이 의욕적으로 느껴지는지 물어보라\"<br />[7장 - 전문가에게서 값진 조언을 얻는 법]</p>\n</blockquote>\n<p data-ke-size=\"size16\">하반기 피드백 기간에는 셀프 피드백 항목에 \"동료에게 피드백을 받고 싶은 역량, 프로젝트 등이 있다면 작성해주세요\" 와 같이 <b>어떤 피드백을 받고 싶은지 스스로가 작성</b>하도록 해보는 것도 좋겠다는 생각을 했다.</p>\n<p data-ke-size=\"size16\">책의 마지막에 있는 \"반드시 기억해야 할 10가지\" 에 책의 각 챕터에서 이야기한 내용들을 요약 정리해준 것은 이 책에서 놓치지 말아야할 것들이 무엇인지 한번 더 집어준 것 같아 좀 더 기억에 오래 남을 것 같다.</p>\n<p data-ke-size=\"size16\">오랫만에 하루키의 책을 다시 필사해야겠다.</p>\n<h2 data-ke-size=\"size26\">책 속 문장</h2>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">\"날마다 그 책을 펴서 두 페이지를 필사했다.<br /><b>한 문장 한 문장 옮겨 적으면서 글의 리듬을 받아들이고 대화 처리 방식, 단 몇 줄로 인물의 성격을 암시하는 기법 등을 음미했다</b>.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\"><b>'낯설게' 느껴지는 음식에서 그런 맛의 추억을 떠올리게 하는 것이 훨씬 더 강렬한 효과</b>를 낸다.<br />낯선 맥락 속에서 그런 기본 패턴을 유지하는 것이 핵심이다.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">첫째, <b>창의성은 고립에서 나오는 것이 아니라 여러 아이디어의 융합에서 나온다</b>.<br />...<br />둘때, <b>독창성은 창의성과 동의어가 아니다</b>.<br />...<br />비즈니스 세계에는 시장을 선점하고도 더 진취적이고 창의적인 경쟁자들에게 밀려 뒤쳐진 사례가 허다하다.<br />셋째, <b>역설계는 창의성을 가로막는 방해물이 아니다</b>.<br />오히려 새로운 기술과 지식을 습득해 뭔가를 전과 다른 창의적인 방식으로 만들어 낼 수 있는 저력을 키워준다.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">모방을 위해서는 해당 작품을 만드는 동안 원작자가 내린 결정들에 대해 깊이 생각해보아야 한다.<br />또한 모방 작업을 하다 보면 평소에는 그냥 지나쳤을 요소나 기회를 민감하게 인식하게 된다.<br /><b>모방은 새로운 관점으로 가는 길을 열어주며, 우리 자신의 작업 방식에 숨겨진 창의적 기회를 찾게 도와준다</b>.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">로빈슨의 강연 방식은 물론 훌륭하다.<br />그러나 30초마다 농담이 나오고 풍부한 일화를 곁들인 강연을 누구나 할 수 있는 것은 아니고, 또 모두가 그런 강연을 하고 싶어 하는 것도 아니다.<br />본받고 싶은 강연 스타일은 사람마다 다를 수 있다.<br />그러니 당신이 선호하는 유형의 다른 강연자를 찾아라. <br /><b>그의 강연을 보면서 역방향 개요를 작성하고 특성들을 수치화하고 강연의 얼개를 구성해보라</b>.<br />이것은 다양한 결과물을 해부해 효과적인 구조를 발견하는 대단히 유용한 방법이며, 당신은 그 구조와 공식을 당신만의 방식으로 활용할 수 있다</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">요컨대 전문가는 비전문가와 생각하는 방식이 다르다.<br /><b>그들은 자신도 의식하지 못하는 지름길을 활용하고, 자신이 하는 행동을 깊게 생각하지 않으며, 자신이 아는 것을 모르는 상태를 상상하지 못한다</b>.<br />성공적인 작업에 필요한 행동을 분석해서 말해달라고 하면, 그들은 70퍼센트를 빼놓고 말한다.<br />그리고 설명해주는 30퍼센트는? 대다수 사람들이 조금 힘겨워하거나 또는 아예 이해하기 힘든 언어로 설명한다.</p>\n</blockquote>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">새로운 무언가를 창업하려고 하는 사람 중에서 이전의 직장에서 다니면서 하는 사람과, 직장을 관두고 전업으로 하는 사람 중에 누가 더 성공할 것인가?<br />전업으로 창업을 준비하는 사람이 더 확률이 높을 것이라고 직관적인 생각이 들지만 실상은 그 반대.<br /><b>안정적인 수입이 있는 사람이 여러가지 기회와 가능성을 충분히 살피고 선택하고 결정할 수 있기 때문에, 전자인 직장인으로서 준비하는 것이 더 확률이 높다는 것</b>이다.<br />이는 바로 리스크를 선택함에 여유가 있기 때문이며, 이러한 과정에서 아래의 4가지 방법을 모두 적용할 수 있다.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>규모가 작은 청중을 상대로 테스트하고</li>\n<li>가명 활용하기</li>\n<li>먼저 아이디어부터 판매하기</li>\n<li>포트폴리오 다양화하기</li>\n</ol>\n</blockquote>",
        "contentSnippet": "소프트웨어 엔지니어로 성장하면서 \"저 사람처럼 코드를 작성하고 싶다\" 라는 생각으로 프로젝트 코드를 그대로 따라친 적이 많다.\n원어민의 발음을 쉐도잉 (Shadowing) 하듯이 그들의 프로젝트 코드를 처음 Git log부터 순서대로 따라 작성했다.\n테스트 주도 개발 책에 예제를 활용해서 JUnit을 TDD로 직접 만들어 보거나, 스프링 프레임워크를 따라치면서 로드 존슨을 비롯한 여러 개발자들이 왜 당시에 이렇게 작성했는지 고민해보곤 했다.\n직접 하이버네이트의 기본 기능을 만들어보고 하이버네이트는 내부적으로 어떻게 구현했는지 비교해보기도 했다.\n이렇게 해당 프레임워크들의 Git log대로(고민의 흐름대로) 작성하다보면 그들의 생각을 조금은 엿볼 수 있었다.\n실무에서 무언가 내 의도대로 안되었을 때, 되어야 하는데 안되는 건지, 애초에 안되야 하는게 맞는건지를 조금은 구분할 수 있게 되어 문제가 발생하면 빠르게 예상 되는 지점을 좁힐 수 있었다.\n한때는 무라카미 하루키의 글을 필사하기도 했다.\n\"달리기를 말할 때 내가 하고 싶은 이야기\", \"직업으로서의 소설가\" 같은 책들은 그 당시의 생생한 주변 풍경을 너무 잘 묘사해서 이 표현을 너무 닮고 싶었다.\n히로시마의 선발 투수는 분명 다카하시였던 것으로 알고 있습니다.\n야쿠르트의 선발은 야스다였습니다. 1회 말, 다카하시가 제1구를 던지자 힐턴은 그것을 좌중간에 깔끔하게 띄워 올려 2루타를 만들었습니다. 방망이가 공에 맞는 상쾌한 소리가 진구 구장에 울려 퍼졌습니다. 띄엄띄엄 박수 소리가 주위에서 일었습니다.\n나는 그때 아무런 맥락도 없이, 아무런 근거도 없이 문득 이렇게 생각했습니다.\n‘그래, 나도 소설을 쓸 수 있을지 모른다’라고.\n그때의 감각을 나는 아직도 확실하게 기억합니다.\n하늘에서 뭔가가 하늘하늘 천천히 내려왔고 그것을 두 손으로 멋지게 받아낸 듯한 기분이었습니다.\n어째서 그것이 때마침 내 손안에 떨어졌는지, 그 이유는 잘 모르겠습니다. 그때도 몰랐고 지금도 모릅니다. 하지만 이유야 어찌 됐건 아무튼 그것이 일어났습니다.\n그것은 뭐라고 해야 할까, 일종의 계시 같은 것이었습니다. 영어에 epiphany라는 말이 있습니다. 일본어로 번역하면 ‘본질의 돌연한 현현顯現’ ‘직감적인 진실 파악’이라는 어려운 단어입니다.\n알기 쉽게 말하자면, ‘어느 날 돌연 뭔가가 눈앞에 쓱 나타나고 그것에 의해 모든 일의 양상이 확 바뀐다’라는 느낌입니다.\n바로 그것이 그날 오후에 내 신상에 일어났습니다.\n그 일을 경계로 내 인생의 양상이 확 바뀐 것입니다.\n데이브 힐턴이 톱타자로 진구 구장에서 아름답고 날카로운 2루타를 날린 그 순간에.\n[직업으로서의 소설가 - 제 2회 소설가가 된 무렵]\n컨퍼런스에서 누군가 이목을 끄는 장표를 만들었다면 그걸 사진을 찍어두고 적절한 때에 사용하기도 하고,\n유튜브, 팟캐스트 등에서 좋은 인터뷰 질문이 있으면 그걸 기억해두고 다음 우리 촬영때 그 질문을 응용해서 사용하기도 했다.\n혼자서 창작하는데는 재능이 없다고 생각하고 주변의 많은 재료들을 최대한 흡수해서 응용하는 것을 주로 하던 입장에서는 위로와 함께 좀 더 구체적인 노하우를 얻을 수 있었다.\n1부까지는 역설계라는 말에 어울리는 내용들이였지만, 2부 부터는 탁월한 성과를 내는 사람이 되는 구체적인 방법들을 전달한다.\n그래서 2부 부터는 역설계 내용과는 조금 거리가 있다고 느껴지긴 했지만, 그럼에도 2부 역시 배울게 많았다.\n성장을 위해 선행지표, 후행지표를 제대로 정하는 방법\n최대한 실행에 대한 리스크를 줄이는 방법\n반복적 연습이 아닌 전략적 연습을 수행하는 방법\n전문가에게서 값진 조언을 얻는 법\n등등 그간 보았던 여러 탁월함에 대한 책들의 종합 개론서 같은 느낌이 2부였다.\n당장 실행해야할 액션 아이템들도 얻었다.\n연구 팀은 중간고사 일주일 전에 학생들을 세 그룹으로 나눴다.\n첫 번째 그룹에게는 중간고사에서 좋은 성적을 받는 것을 상상하라고 말했다.\n두 번째 그룹에게는 좋은 성적이 아니라 공부하는 과정을 상상하라고 했다.\n세 번째 그룹에게는 일주일 동안 공부한 시간을 기록하게 했다.\n...\n어느 그룹이 중간고사에서 가장 좋은 성적을 받았을까?\n당연히 공부하는 과정을 상상한 그룹이었다.\n이들은 실제로 더 열심히 공부했고 불안감이 줄었으며 성적도 더 높게 나왔다.\n...\n대조군과 비교할 때, 짐캐리처럼 성공을 상상한 그룹이 중간고사 성적이 가장 낮았다.\n...\n바라는 결과를 달성한 모습을 상상할 때 경험하는 감정적 보상이 성공에 필요한 작업을 수행하려는 욕구를 감소시키기 때문이다.\n[6장 - 뻔한 연습이 아니라 전략적 연습이 필요하다]\n\"결과\"에 대한 상상이 아닌 \"과정\"에 대한 상상이 훨씬 더 높은 성취를 내는데 도움이 된다는 것에 확신이 생겼다.\n프로젝트가 시작 되기 전에 \"이 프로젝트가 잘 되면 어떤 즐거운 결과가 있을 것인지\"를 이야기 했다면, 이제는 프로젝트 진행 과정 중에서 발생할만한 일을 좀 더 자주 이야기하고 팀원들이 미리 상상할 수 있도록 하는 것이 더 좋은 결과물을 낼 수 있겠다는 생각을 했다.\n예컨대 중요한 기획서를 작성하는 중이라면 동료에게 그냥 \"피드백을 달라\"고 하지말고, 첫 단락이 읽는 이의 호기심을 끌어당기는지, 또는 프로젝트 스케줄이 의욕적으로 느껴지는지 물어보라\"\n[7장 - 전문가에게서 값진 조언을 얻는 법]\n하반기 피드백 기간에는 셀프 피드백 항목에 \"동료에게 피드백을 받고 싶은 역량, 프로젝트 등이 있다면 작성해주세요\" 와 같이 어떤 피드백을 받고 싶은지 스스로가 작성하도록 해보는 것도 좋겠다는 생각을 했다.\n책의 마지막에 있는 \"반드시 기억해야 할 10가지\" 에 책의 각 챕터에서 이야기한 내용들을 요약 정리해준 것은 이 책에서 놓치지 말아야할 것들이 무엇인지 한번 더 집어준 것 같아 좀 더 기억에 오래 남을 것 같다.\n오랫만에 하루키의 책을 다시 필사해야겠다.\n책 속 문장\n\"날마다 그 책을 펴서 두 페이지를 필사했다.\n한 문장 한 문장 옮겨 적으면서 글의 리듬을 받아들이고 대화 처리 방식, 단 몇 줄로 인물의 성격을 암시하는 기법 등을 음미했다.\n'낯설게' 느껴지는 음식에서 그런 맛의 추억을 떠올리게 하는 것이 훨씬 더 강렬한 효과를 낸다.\n낯선 맥락 속에서 그런 기본 패턴을 유지하는 것이 핵심이다.\n첫째, 창의성은 고립에서 나오는 것이 아니라 여러 아이디어의 융합에서 나온다.\n...\n둘때, 독창성은 창의성과 동의어가 아니다.\n...\n비즈니스 세계에는 시장을 선점하고도 더 진취적이고 창의적인 경쟁자들에게 밀려 뒤쳐진 사례가 허다하다.\n셋째, 역설계는 창의성을 가로막는 방해물이 아니다.\n오히려 새로운 기술과 지식을 습득해 뭔가를 전과 다른 창의적인 방식으로 만들어 낼 수 있는 저력을 키워준다.\n모방을 위해서는 해당 작품을 만드는 동안 원작자가 내린 결정들에 대해 깊이 생각해보아야 한다.\n또한 모방 작업을 하다 보면 평소에는 그냥 지나쳤을 요소나 기회를 민감하게 인식하게 된다.\n모방은 새로운 관점으로 가는 길을 열어주며, 우리 자신의 작업 방식에 숨겨진 창의적 기회를 찾게 도와준다.\n로빈슨의 강연 방식은 물론 훌륭하다.\n그러나 30초마다 농담이 나오고 풍부한 일화를 곁들인 강연을 누구나 할 수 있는 것은 아니고, 또 모두가 그런 강연을 하고 싶어 하는 것도 아니다.\n본받고 싶은 강연 스타일은 사람마다 다를 수 있다.\n그러니 당신이 선호하는 유형의 다른 강연자를 찾아라. \n그의 강연을 보면서 역방향 개요를 작성하고 특성들을 수치화하고 강연의 얼개를 구성해보라.\n이것은 다양한 결과물을 해부해 효과적인 구조를 발견하는 대단히 유용한 방법이며, 당신은 그 구조와 공식을 당신만의 방식으로 활용할 수 있다\n요컨대 전문가는 비전문가와 생각하는 방식이 다르다.\n그들은 자신도 의식하지 못하는 지름길을 활용하고, 자신이 하는 행동을 깊게 생각하지 않으며, 자신이 아는 것을 모르는 상태를 상상하지 못한다.\n성공적인 작업에 필요한 행동을 분석해서 말해달라고 하면, 그들은 70퍼센트를 빼놓고 말한다.\n그리고 설명해주는 30퍼센트는? 대다수 사람들이 조금 힘겨워하거나 또는 아예 이해하기 힘든 언어로 설명한다.\n새로운 무언가를 창업하려고 하는 사람 중에서 이전의 직장에서 다니면서 하는 사람과, 직장을 관두고 전업으로 하는 사람 중에 누가 더 성공할 것인가?\n전업으로 창업을 준비하는 사람이 더 확률이 높을 것이라고 직관적인 생각이 들지만 실상은 그 반대.\n안정적인 수입이 있는 사람이 여러가지 기회와 가능성을 충분히 살피고 선택하고 결정할 수 있기 때문에, 전자인 직장인으로서 준비하는 것이 더 확률이 높다는 것이다.\n이는 바로 리스크를 선택함에 여유가 있기 때문이며, 이러한 과정에서 아래의 4가지 방법을 모두 적용할 수 있다.\n규모가 작은 청중을 상대로 테스트하고\n가명 활용하기\n먼저 아이디어부터 판매하기\n포트폴리오 다양화하기",
        "guid": "http://jojoldu.tistory.com/841",
        "categories": [
          "도서",
          "쉐도잉",
          "역설계",
          "필사"
        ],
        "isoDate": "2025-08-11T00:50:18.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": [
      {
        "creator": "megayuchi",
        "title": "짭 서피스 아크 마우스 주의",
        "link": "https://megayuchi.com/2025/08/11/%ec%a7%ad-%ec%84%9c%ed%94%bc%ec%8a%a4-%ec%95%84%ed%81%ac-%eb%a7%88%ec%9a%b0%ec%8a%a4-%ec%a3%bc%ec%9d%98/",
        "pubDate": "Mon, 11 Aug 2025 08:30:05 +0000",
        "content:encodedSnippet": "2024년 7월 16일에 병행수입이라고 서피스 아크마우스를 하나 구입했었다. 국내 유통가 대비 1/2가격이었다. 박스에 중국어만 가득했지만 박스 디자인도 똑같았고 ms로고가 확실히 박혀있었으므로 중국 내수용이겠지…라고 찝찝하지만 넘어갔다.\n그리고 7월 19일에 여의도 더 현대에 서피스랩탑 스냅드래곤 버전 구경하러 갔다가 아크마우스를 떨이로 팔길래 그 때 저렴하게 하나 구입했었다. 이건 개봉하지 않고 그냥 묵혀뒀었다.\n병행수입이라 주장하던 아크 마우스를 계속 사용해오다가 최근 들어 클릭하면 자꾸 더블클릭이 되어버려서 오늘 드디어 쟁여뒀던 아크마우스를 개봉했다. 그런데 빈 박스에 먼저 사용하던 마우스를 넣으려고 하니 안들어가네?\n비교해보니 크기가 다름. 클릭부의 고무와 바디 플라스틱 만나는 위치도 다르다.\n첨부한 사진의 좌측이 정품, 우측이 짭이다.\n[결론]\n병행수입이라고 중국에서 들여오는 물건들 짭이다.\n\n\n\n\n\n\n\n\n\n\n\n\n\np.s:\n페북 기록을 뒤져서 당시에 써놨던 글을 찾아냈다. 따라서 정확한 날짜로 글을 수정했다.\n그 당시에도 이상하다고 적어놨네. 품질이 확실히 차이가 난다. 짭은 마우스를 굽혔을때 등쪽에 내부 골격이 고무를 압박해서 골격 모양이 드러난다. 그리고 마우스 발이 거칠다. 같은 마우스 패드에서 움직여보면 짭이 더 뻑뻑하다.",
        "dc:creator": "megayuchi",
        "comments": "https://megayuchi.com/2025/08/11/%ec%a7%ad-%ec%84%9c%ed%94%bc%ec%8a%a4-%ec%95%84%ed%81%ac-%eb%a7%88%ec%9a%b0%ec%8a%a4-%ec%a3%bc%ec%9d%98/#respond",
        "content": "2024년 7월 16일에 병행수입이라고 서피스 아크마우스를 하나 구입했었다. 국내 유통가 대비 1/2가격이었다. 박스에 중국어만 가득했지만 박스 디자인도 똑같았고 ms로고가 확실히 박혀있었으므로 중국 내수용이겠지&#8230;라고 찝찝하지만 넘어갔다. 그리고 7월 19일에 여의도 더 현대에 서피스랩탑 스냅드래곤 버전 구경하러 갔다가 아크마우스를 떨이로 팔길래 그 때 저렴하게 하나 구입했었다. 이건 개봉하지 않고 그냥 묵혀뒀었다. 병행수입이라 주장하던 아크 마우스를 계속 사용해오다가 &#8230; <a class=\"more-link\" href=\"https://megayuchi.com/2025/08/11/%ec%a7%ad-%ec%84%9c%ed%94%bc%ec%8a%a4-%ec%95%84%ed%81%ac-%eb%a7%88%ec%9a%b0%ec%8a%a4-%ec%a3%bc%ec%9d%98/\">More <span class=\"screen-reader-text\">짭 서피스 아크 마우스&#160;주의</span></a>",
        "contentSnippet": "2024년 7월 16일에 병행수입이라고 서피스 아크마우스를 하나 구입했었다. 국내 유통가 대비 1/2가격이었다. 박스에 중국어만 가득했지만 박스 디자인도 똑같았고 ms로고가 확실히 박혀있었으므로 중국 내수용이겠지…라고 찝찝하지만 넘어갔다. 그리고 7월 19일에 여의도 더 현대에 서피스랩탑 스냅드래곤 버전 구경하러 갔다가 아크마우스를 떨이로 팔길래 그 때 저렴하게 하나 구입했었다. 이건 개봉하지 않고 그냥 묵혀뒀었다. 병행수입이라 주장하던 아크 마우스를 계속 사용해오다가 … More 짭 서피스 아크 마우스 주의",
        "guid": "http://megayuchi.com/?p=7137",
        "categories": [
          "IT",
          "Pub",
          "마우스",
          "서피스 아크 마우스",
          "surface arc mouse"
        ],
        "isoDate": "2025-08-11T08:30:05.000Z"
      }
    ]
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "웹 애니메이션 API",
        "link": "https://hyeonseok.com/blog/939",
        "pubDate": "Sat, 09 Aug 2025 17:13:48 GMT",
        "content": "<p>시작은 제이쿼리로 되어 있는 코드를 바닐라로 변환이 필요해서 였다. 화면에서 보이지 않다가 특정 조건에서 화면에 나오는 애니메이션을 보여주는 기능이었다. 챗지피티에 물어보니 전반적인 변환은 잘 해줬는데 화면에 나오기 직전에 <code>display: none</code>을 <code>block</code>로 바꿔주다 보니 트랜지션 애니메이션이 작동하지 않았다. <code>element.offsetWidth;</code>같이 레이아웃을 참조하면 애니메이션이 되지만 다른 방법은 없는지 제미나이에게 물어보니 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\"><code>element.animate</code></a>를 사용해서 변환을 했다. <code>display</code> 조작의 영향을 받지 않고 의도대로 작 작동한다.</p>\r\n\r\n<p>키프레임 애니메이션을 자바스크립트로 구성하는 느낌이다. <code>element.animate(keyframes, options)</code>와 같이 사용하면 간단하게 이용할 수 있다.</p>\r\n\r\n<pre><code>document.querySelector('div').animate([\r\n\t{ width: '100px' },\r\n\t{ width: '200px' },\r\n], {\r\n\tduration: 500,\r\n\tfill: 'forwards',\r\n\teasing: 'ease'\r\n});</code></pre>\r\n\r\n<p><a href=\"https://caniuse.com/mdn-api_element_animate\">나온지 10년</a>이 다 되어가는데 잘 모르고 있었다. CSS로 애니메이션을 제어하는 것을 선호하기는 하는데 동적으로 변경되는 애니메이션을 만들어야 할 때에 유용하게 사용할 수 있다. <a href=\"https://caniuse.com/mdn-api_element_animate_options_timeline_parameter\">타임라인</a>이나 <a href=\"https://caniuse.com/mdn-api_element_animate_options_rangestart_parameter\">레인지</a>도 정의할 수 있는데 파이어폭스가 아직 지원을 안한다.</p>",
        "contentSnippet": "시작은 제이쿼리로 되어 있는 코드를 바닐라로 변환이 필요해서 였다. 화면에서 보이지 않다가 특정 조건에서 화면에 나오는 애니메이션을 보여주는 기능이었다. 챗지피티에 물어보니 전반적인 변환은 잘 해줬는데 화면에 나오기 직전에 display: none을 block로 바꿔주다 보니 트랜지션 애니메이션이 작동하지 않았다. element.offsetWidth;같이 레이아웃을 참조하면 애니메이션이 되지만 다른 방법은 없는지 제미나이에게 물어보니 element.animate를 사용해서 변환을 했다. display 조작의 영향을 받지 않고 의도대로 작 작동한다.\n\r\n\r\n키프레임 애니메이션을 자바스크립트로 구성하는 느낌이다. element.animate(keyframes, options)와 같이 사용하면 간단하게 이용할 수 있다.\n\r\n\r\ndocument.querySelector('div').animate([\r\n\t{ width: '100px' },\r\n\t{ width: '200px' },\r\n], {\r\n\tduration: 500,\r\n\tfill: 'forwards',\r\n\teasing: 'ease'\r\n});\n\r\n\r\n나온지 10년이 다 되어가는데 잘 모르고 있었다. CSS로 애니메이션을 제어하는 것을 선호하기는 하는데 동적으로 변경되는 애니메이션을 만들어야 할 때에 유용하게 사용할 수 있다. 타임라인이나 레인지도 정의할 수 있는데 파이어폭스가 아직 지원을 안한다.",
        "guid": "https://hyeonseok.com/blog/939",
        "isoDate": "2025-08-09T17:13:48.000Z"
      }
    ]
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": [
      {
        "creator": "dlehddus84",
        "title": "원더랜드워 도색",
        "link": "https://blog.naver.com/dlehddus84/223966884445?fromRss=true&trackingCode=rss",
        "pubDate": "Mon, 11 Aug 2025 17:44:32 +0900",
        "author": "dlehddus84",
        "content": "유니콘과 체셔캣 도색 기록 먼저 검은색으로 프라이밍 해준다. 다들 비추하는 붓으로 프라이밍 했다. 밖에나가서 뿌리기도 귀찮고 집에선 뿌리지 못하니... 붓으로 하면 디테일이 많이 죽는다. 프라이밍 후 검은색으로 한번 칠해줘 표면을 정리해주는데 벌써 두번이나 도색이 올라가 디테일이 많이 죽었다. 흰색으로 라인을 따주었다. 색상을 올리고 쉐이더와 하이라이팅을 추가하여 마무리 했다. 유니콘은 과정을 안찍어놔서 그냥 사용한 색만 보이도록 찍었다. <img src=\"https://blogthumb.pstatic.net/MjAyNTA4MTFfMTk3/MDAxNzU0OTAxNjEwOTIx.NQJiNzfA5MUmDg0Krd0oPjCA9NAgLPI059Z0W-lChRMg.2MgSnxEh5EQllHh0OfTHpeCZJmNPnUZRQF88lOp19JQg.JPEG/KakaoTalk_20250811_173903271_05.jpg?type=s3\" />",
        "contentSnippet": "유니콘과 체셔캣 도색 기록 먼저 검은색으로 프라이밍 해준다. 다들 비추하는 붓으로 프라이밍 했다. 밖에나가서 뿌리기도 귀찮고 집에선 뿌리지 못하니... 붓으로 하면 디테일이 많이 죽는다. 프라이밍 후 검은색으로 한번 칠해줘 표면을 정리해주는데 벌써 두번이나 도색이 올라가 디테일이 많이 죽었다. 흰색으로 라인을 따주었다. 색상을 올리고 쉐이더와 하이라이팅을 추가하여 마무리 했다. 유니콘은 과정을 안찍어놔서 그냥 사용한 색만 보이도록 찍었다.",
        "guid": "https://blog.naver.com/dlehddus84/223966884445",
        "categories": [
          "도색과 제작"
        ],
        "isoDate": "2025-08-11T08:44:32.000Z"
      },
      {
        "creator": "dlehddus84",
        "title": "25.08.10 - 반지의 제왕 가운데 땅에서의 대결, 사자를 잡아랏!",
        "link": "https://blog.naver.com/dlehddus84/223965773438?fromRss=true&trackingCode=rss",
        "pubDate": "Sun, 10 Aug 2025 19:51:13 +0900",
        "author": "dlehddus84",
        "content": "반지의 제왕 가운데 땅에서의 대결과 사자를 잡아랏!을 하였다. 이상하게 세듀랑 반듀 승률이 그다지 높지가 않다...오늘도 3판을 하였는데 간신히 1판 이겼다... 뒤집어진 카드를 열어야 할때라던지 동맹 토큰을 확인할때 딱 필요한 카드나 토큰이 와이프한테 간다. 모든 조건이 다 나한테 좋았던 첫판이었는데 허무하게 져버렸다. 가볍게 하기 좋은 동물장기이다. 이름이 사자를 잡아랏!으로 바뀌었는데 좁은 판과 간단한 룰로 비는 시간에 간단히 하기 좋다. 동물장기는 내가 3판 내리 이겼다 ㅋㅋ <img src=\"https://blogthumb.pstatic.net/MjAyNTA4MTBfMTcy/MDAxNzU0ODIyODM0OTgy.6RwxzeEKGKlGeHuB_iPKM3ogxLbxnJlF5atQ1QnA39Eg.HI6ImX96RZEL-RNIp8xJ3xBMLT9WChXap4Hy3lGDoV0g.JPEG/KakaoTalk_20250810_165002010_14.jpg?type=s3\" />",
        "contentSnippet": "반지의 제왕 가운데 땅에서의 대결과 사자를 잡아랏!을 하였다. 이상하게 세듀랑 반듀 승률이 그다지 높지가 않다...오늘도 3판을 하였는데 간신히 1판 이겼다... 뒤집어진 카드를 열어야 할때라던지 동맹 토큰을 확인할때 딱 필요한 카드나 토큰이 와이프한테 간다. 모든 조건이 다 나한테 좋았던 첫판이었는데 허무하게 져버렸다. 가볍게 하기 좋은 동물장기이다. 이름이 사자를 잡아랏!으로 바뀌었는데 좁은 판과 간단한 룰로 비는 시간에 간단히 하기 좋다. 동물장기는 내가 3판 내리 이겼다 ㅋㅋ",
        "guid": "https://blog.naver.com/dlehddus84/223965773438",
        "categories": [
          "플레이"
        ],
        "isoDate": "2025-08-10T10:51:13.000Z"
      },
      {
        "creator": "dlehddus84",
        "title": "네메시스 킥스 펀딩",
        "link": "https://blog.naver.com/dlehddus84/223965767228?fromRss=true&trackingCode=rss",
        "pubDate": "Sun, 10 Aug 2025 19:42:33 +0900",
        "author": "dlehddus84",
        "content": "작년초인가 제작년 말인가 들어갔던 네메시스 펀딩 직구가 드디어 왔다. 네메시스 3탄인 보복이 해외에 출시되었다. 한글판은 아직 소식이 없는데 아마 네메시스 2탄인 락다운 판매량이 그렇게 좋지가 않았나보다. 펀딩 당시 영판을 모두 한글화할 자신이 없어 있는거나 잘 즐기자고 생각하고 네메시스 1의 애드온과 2탄인 락다운 프로모를 구입했다. 원래 애프터매스와 메딕이 가지고 싶어서 들어갔던 펀딩이었다. 네메시스 킥스타터 한정으로만 팔았던 상품으로 국내 한글판엔 포함되지 않아 중고가가 10만원도 더했던 물품이었다. 하지만 3탄인 보복이 발매하면서 구매할 수 있게 되어 해당 제품만 사더라도 괜찮겠구나 라고 생각하고 들어갔....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA4MTBfMTQ5/MDAxNzU0ODIxNDg5NzM2.o-x3YUZtpukUrE_HPnefSa2u3x_QjSv5TeUs5aV8hFAg.GRoprkFlSyqdnzeRciNrXW3Bzf_LIeWoOwVI8FxyoFsg.JPEG/%C8%AD%B8%E9_%C4%B8%C3%B3_2025-08-10_182931.jpg?type=s3\" />",
        "contentSnippet": "작년초인가 제작년 말인가 들어갔던 네메시스 펀딩 직구가 드디어 왔다. 네메시스 3탄인 보복이 해외에 출시되었다. 한글판은 아직 소식이 없는데 아마 네메시스 2탄인 락다운 판매량이 그렇게 좋지가 않았나보다. 펀딩 당시 영판을 모두 한글화할 자신이 없어 있는거나 잘 즐기자고 생각하고 네메시스 1의 애드온과 2탄인 락다운 프로모를 구입했다. 원래 애프터매스와 메딕이 가지고 싶어서 들어갔던 펀딩이었다. 네메시스 킥스타터 한정으로만 팔았던 상품으로 국내 한글판엔 포함되지 않아 중고가가 10만원도 더했던 물품이었다. 하지만 3탄인 보복이 발매하면서 구매할 수 있게 되어 해당 제품만 사더라도 괜찮겠구나 라고 생각하고 들어갔.......",
        "guid": "https://blog.naver.com/dlehddus84/223965767228",
        "categories": [
          "정보/구매"
        ],
        "isoDate": "2025-08-10T10:42:33.000Z"
      }
    ]
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "LINE 통화의 영상 재생 품질 개선 사례",
        "link": "https://techblog.lycorp.co.jp/ko/improving-video-playback-quality-in-line-call",
        "pubDate": "Thu, 14 Aug 2025 09:00:00 GMT",
        "content": "들어가며LINE 앱은 전 세계 많은 사용자들이 이용하는 다양한 실시간 커뮤니케이션 서비스를 제공하고 있습니다. 저희 팀은 그중에서 1:1 통화와 그룹 통화, LINE 미팅과 같은 ...",
        "contentSnippet": "들어가며LINE 앱은 전 세계 많은 사용자들이 이용하는 다양한 실시간 커뮤니케이션 서비스를 제공하고 있습니다. 저희 팀은 그중에서 1:1 통화와 그룹 통화, LINE 미팅과 같은 ...",
        "guid": "https://techblog.lycorp.co.jp/ko/improving-video-playback-quality-in-line-call",
        "isoDate": "2025-08-14T09:00:00.000Z"
      },
      {
        "title": "LY의 AI 기술의 현재, Tech-Verse 2025 후기",
        "link": "https://techblog.lycorp.co.jp/ko/tech-verse-2025-recap-current-state-of-ly-ai-tech",
        "pubDate": "Tue, 12 Aug 2025 02:00:00 GMT",
        "content": "안녕하세요. LINE Plus의 LINE AI LAB에서 LLM 에이전트 관련 서비스를 개발하고 있는 신수민입니다.저는 지난 7월 도쿄에서 열린 Tech-Verse 2025에 Te...",
        "contentSnippet": "안녕하세요. LINE Plus의 LINE AI LAB에서 LLM 에이전트 관련 서비스를 개발하고 있는 신수민입니다.저는 지난 7월 도쿄에서 열린 Tech-Verse 2025에 Te...",
        "guid": "https://techblog.lycorp.co.jp/ko/tech-verse-2025-recap-current-state-of-ly-ai-tech",
        "isoDate": "2025-08-12T02:00:00.000Z"
      },
      {
        "title": "3년 차 앱 개발자가 일하는 순서를 공유합니다",
        "link": "https://techblog.lycorp.co.jp/ko/sharing-the-workflow-of-a-third-year-app-developer",
        "pubDate": "Fri, 08 Aug 2025 02:00:00 GMT",
        "content": "안녕하세요, LINE Plus에서 근무하고 있는 최연두입니다. 이 글에서는 시행착오 끝에 정착한 저만의 ‘일하는 방식’을 공유하려고 합니다. 다른 팀의 아무개가 일하는 방식이 궁금...",
        "contentSnippet": "안녕하세요, LINE Plus에서 근무하고 있는 최연두입니다. 이 글에서는 시행착오 끝에 정착한 저만의 ‘일하는 방식’을 공유하려고 합니다. 다른 팀의 아무개가 일하는 방식이 궁금...",
        "guid": "https://techblog.lycorp.co.jp/ko/sharing-the-workflow-of-a-third-year-app-developer",
        "isoDate": "2025-08-08T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": [
      {
        "creator": "호돌맨",
        "title": "동네 노을 - 2025년 8월 11일",
        "link": "https://hodolman.tistory.com/82",
        "pubDate": "Mon, 11 Aug 2025 22:37:43 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/82#entry82comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC03114-HDR5x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"1596\"><span data-url=\"https://blog.kakaocdn.net/dn/6FLxv/btsPP2T3xff/rtsANYkgWFk1L9bBZDNey0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/6FLxv/btsPP2T3xff/rtsANYkgWFk1L9bBZDNey0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/6FLxv/btsPP2T3xff/rtsANYkgWFk1L9bBZDNey0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F6FLxv%2FbtsPP2T3xff%2FrtsANYkgWFk1L9bBZDNey0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"1596\" data-filename=\"DSC03114-HDR5x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"1596\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC03125-HDR5x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/bQJHRN/btsPP0a6rbP/nSbJQ6ZsH9JiA0lA7z1Cok/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bQJHRN/btsPP0a6rbP/nSbJQ6ZsH9JiA0lA7z1Cok/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bQJHRN/btsPP0a6rbP/nSbJQ6ZsH9JiA0lA7z1Cok/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbQJHRN%2FbtsPP0a6rbP%2FnSbJQ6ZsH9JiA0lA7z1Cok%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2400\" height=\"3000\" data-filename=\"DSC03125-HDR5x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"/></span></figure>\n</p>",
        "contentSnippet": "",
        "guid": "https://hodolman.tistory.com/82",
        "categories": [
          "사진",
          "노을"
        ],
        "isoDate": "2025-08-11T13:37:43.000Z"
      },
      {
        "creator": "호돌맨",
        "title": "동네 야경 - 2025년 8월 2일",
        "link": "https://hodolman.tistory.com/81",
        "pubDate": "Mon, 11 Aug 2025 22:37:01 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/81#entry81comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC029195x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"><span data-url=\"https://blog.kakaocdn.net/dn/cbI5Gp/btsPP1U80dM/CmIb9thEBMJ2uELlqBbCgk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cbI5Gp/btsPP1U80dM/CmIb9thEBMJ2uELlqBbCgk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cbI5Gp/btsPP1U80dM/CmIb9thEBMJ2uELlqBbCgk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcbI5Gp%2FbtsPP1U80dM%2FCmIb9thEBMJ2uELlqBbCgk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2000\" data-filename=\"DSC029195x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"/></span></figure>\n</p>",
        "contentSnippet": "",
        "guid": "https://hodolman.tistory.com/81",
        "categories": [
          "사진"
        ],
        "isoDate": "2025-08-11T13:37:01.000Z"
      },
      {
        "creator": "호돌맨",
        "title": "한강대교 북단, 노들섬 - 2025년 8월 4일",
        "link": "https://hodolman.tistory.com/80",
        "pubDate": "Mon, 11 Aug 2025 22:35:59 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/80#entry80comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC029295x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"><span data-url=\"https://blog.kakaocdn.net/dn/c9QAkL/btsPQAQwimn/reR8dXeuDUAdpxzen6gyuK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c9QAkL/btsPQAQwimn/reR8dXeuDUAdpxzen6gyuK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/c9QAkL/btsPQAQwimn/reR8dXeuDUAdpxzen6gyuK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc9QAkL%2FbtsPQAQwimn%2FreR8dXeuDUAdpxzen6gyuK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2000\" data-filename=\"DSC029295x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC029395x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"><span data-url=\"https://blog.kakaocdn.net/dn/bDORsz/btsPPRys8JK/5BxGnU3chsVWLXijKluIw0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bDORsz/btsPPRys8JK/5BxGnU3chsVWLXijKluIw0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bDORsz/btsPPRys8JK/5BxGnU3chsVWLXijKluIw0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbDORsz%2FbtsPPRys8JK%2F5BxGnU3chsVWLXijKluIw0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2000\" data-filename=\"DSC029395x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC029455x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2578\"><span data-url=\"https://blog.kakaocdn.net/dn/balmhm/btsPP3MbXXs/rvaREN0BaQTKNl49hEDQEk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/balmhm/btsPP3MbXXs/rvaREN0BaQTKNl49hEDQEk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/balmhm/btsPP3MbXXs/rvaREN0BaQTKNl49hEDQEk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbalmhm%2FbtsPP3MbXXs%2FrvaREN0BaQTKNl49hEDQEk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2578\" data-filename=\"DSC029455x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2578\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC029535x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"><span data-url=\"https://blog.kakaocdn.net/dn/c1Dmln/btsPN4yNtWY/mAYwNByYwAZktBGSrJSky1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c1Dmln/btsPN4yNtWY/mAYwNByYwAZktBGSrJSky1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/c1Dmln/btsPN4yNtWY/mAYwNByYwAZktBGSrJSky1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc1Dmln%2FbtsPN4yNtWY%2FmAYwNByYwAZktBGSrJSky1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2000\" data-filename=\"DSC029535x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC029625x4.jpg\" data-origin-width=\"2000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/dQR7iv/btsPQH3a9yL/prAawBpqypIyT92UYHhI71/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dQR7iv/btsPQH3a9yL/prAawBpqypIyT92UYHhI71/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dQR7iv/btsPQH3a9yL/prAawBpqypIyT92UYHhI71/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdQR7iv%2FbtsPQH3a9yL%2FprAawBpqypIyT92UYHhI71%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2000\" height=\"3000\" data-filename=\"DSC029625x4.jpg\" data-origin-width=\"2000\" data-origin-height=\"3000\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC029885x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2223\"><span data-url=\"https://blog.kakaocdn.net/dn/bE95fv/btsPNNXRBxT/jkwUKf0AGGnDdml6ZVbWe1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bE95fv/btsPNNXRBxT/jkwUKf0AGGnDdml6ZVbWe1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bE95fv/btsPNNXRBxT/jkwUKf0AGGnDdml6ZVbWe1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbE95fv%2FbtsPNNXRBxT%2FjkwUKf0AGGnDdml6ZVbWe1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2223\" data-filename=\"DSC029885x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2223\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC030065x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2279\"><span data-url=\"https://blog.kakaocdn.net/dn/cDD4Pz/btsPOaFIS43/TEGK9G7hnop1KYOVIF5cFK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cDD4Pz/btsPOaFIS43/TEGK9G7hnop1KYOVIF5cFK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cDD4Pz/btsPOaFIS43/TEGK9G7hnop1KYOVIF5cFK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcDD4Pz%2FbtsPOaFIS43%2FTEGK9G7hnop1KYOVIF5cFK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2279\" data-filename=\"DSC030065x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2279\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC030165x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"><span data-url=\"https://blog.kakaocdn.net/dn/rWRtY/btsPQIHNARQ/J08hnUQv0T3zpzgkKvXQP0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/rWRtY/btsPQIHNARQ/J08hnUQv0T3zpzgkKvXQP0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/rWRtY/btsPQIHNARQ/J08hnUQv0T3zpzgkKvXQP0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FrWRtY%2FbtsPQIHNARQ%2FJ08hnUQv0T3zpzgkKvXQP0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2000\" data-filename=\"DSC030165x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"/></span></figure>\n</p>",
        "contentSnippet": "",
        "guid": "https://hodolman.tistory.com/80",
        "categories": [
          "사진",
          "노들섬",
          "노을",
          "야경",
          "한강대교북단"
        ],
        "isoDate": "2025-08-11T13:35:59.000Z"
      },
      {
        "creator": "호돌맨",
        "title": "태국 아유타야, 방콕 여행 사진",
        "link": "https://hodolman.tistory.com/79",
        "pubDate": "Mon, 11 Aug 2025 22:34:30 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/79#entry79comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC025345x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/nHMd4/btsPNoxiep6/MF9PoCE50ksINl1m28lZC1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/nHMd4/btsPNoxiep6/MF9PoCE50ksINl1m28lZC1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/nHMd4/btsPNoxiep6/MF9PoCE50ksINl1m28lZC1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FnHMd4%2FbtsPNoxiep6%2FMF9PoCE50ksINl1m28lZC1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"3000\" data-filename=\"DSC025345x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC025365x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/JFqQP/btsPP9r7B1Z/RgPu1CT8CAnsz7V1d4INwK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/JFqQP/btsPP9r7B1Z/RgPu1CT8CAnsz7V1d4INwK/img.jpg\" data-alt=\"아유타야 숙소 입구에서 바라본 여행의 시작\"><img src=\"https://blog.kakaocdn.net/dn/JFqQP/btsPP9r7B1Z/RgPu1CT8CAnsz7V1d4INwK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FJFqQP%2FbtsPP9r7B1Z%2FRgPu1CT8CAnsz7V1d4INwK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"3000\" data-filename=\"DSC025365x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"/></span><figcaption>아유타야 숙소 입구에서 바라본 여행의 시작</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC025375x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/bNB7f8/btsPMRs20Sq/bkuLdJh3w1SHy6pMJOXShK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bNB7f8/btsPMRs20Sq/bkuLdJh3w1SHy6pMJOXShK/img.jpg\" data-alt=\"고단함\"><img src=\"https://blog.kakaocdn.net/dn/bNB7f8/btsPMRs20Sq/bkuLdJh3w1SHy6pMJOXShK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbNB7f8%2FbtsPMRs20Sq%2FbkuLdJh3w1SHy6pMJOXShK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"3000\" data-filename=\"DSC025375x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"/></span><figcaption>고단함</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC025485x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/Pfmiv/btsPPLLM5lh/MSQ8kywSRLXqz9TwlPM5vK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/Pfmiv/btsPPLLM5lh/MSQ8kywSRLXqz9TwlPM5vK/img.jpg\" data-alt=\"아유타야\"><img src=\"https://blog.kakaocdn.net/dn/Pfmiv/btsPPLLM5lh/MSQ8kywSRLXqz9TwlPM5vK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FPfmiv%2FbtsPPLLM5lh%2FMSQ8kywSRLXqz9TwlPM5vK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2400\" height=\"3000\" data-filename=\"DSC025485x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"/></span><figcaption>아유타야</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC026025x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/Vimcc/btsPPOPgRoA/hTaLMDHXhzsVygi5fFMIa0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/Vimcc/btsPPOPgRoA/hTaLMDHXhzsVygi5fFMIa0/img.jpg\" data-alt=\"방콕 황금불사원 계단\"><img src=\"https://blog.kakaocdn.net/dn/Vimcc/btsPPOPgRoA/hTaLMDHXhzsVygi5fFMIa0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FVimcc%2FbtsPPOPgRoA%2FhTaLMDHXhzsVygi5fFMIa0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2400\" height=\"3000\" data-filename=\"DSC026025x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"/></span><figcaption>방콕 황금불사원 계단</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC026125x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"1955\"><span data-url=\"https://blog.kakaocdn.net/dn/HT9MC/btsPNglRlUD/xIpBjURiqRJnbQR4unYinK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/HT9MC/btsPNglRlUD/xIpBjURiqRJnbQR4unYinK/img.jpg\" data-alt=\"황금불 사원에서 바라본 방콕 도심\"><img src=\"https://blog.kakaocdn.net/dn/HT9MC/btsPNglRlUD/xIpBjURiqRJnbQR4unYinK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHT9MC%2FbtsPNglRlUD%2FxIpBjURiqRJnbQR4unYinK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"1955\" data-filename=\"DSC026125x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"1955\"/></span><figcaption>황금불 사원에서 바라본 방콕 도심</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC026275x4.jpg\" data-origin-width=\"2000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/boiCY4/btsPPJ8iKOC/E6NFFbL2eJPHd0so4gCQo1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/boiCY4/btsPPJ8iKOC/E6NFFbL2eJPHd0so4gCQo1/img.jpg\" data-alt=\"방콕 차이나 타운\"><img src=\"https://blog.kakaocdn.net/dn/boiCY4/btsPPJ8iKOC/E6NFFbL2eJPHd0so4gCQo1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FboiCY4%2FbtsPPJ8iKOC%2FE6NFFbL2eJPHd0so4gCQo1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2000\" height=\"3000\" data-filename=\"DSC026275x4.jpg\" data-origin-width=\"2000\" data-origin-height=\"3000\"/></span><figcaption>방콕 차이나 타운</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC026335x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/bzSby3/btsPPQl1qZn/Kg1XhGcOlRc2lCtkfkts8k/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bzSby3/btsPPQl1qZn/Kg1XhGcOlRc2lCtkfkts8k/img.jpg\" data-alt=\"차이나타운 근처 카페, 참 마음에 드는 사진\"><img src=\"https://blog.kakaocdn.net/dn/bzSby3/btsPPQl1qZn/Kg1XhGcOlRc2lCtkfkts8k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbzSby3%2FbtsPPQl1qZn%2FKg1XhGcOlRc2lCtkfkts8k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"3000\" data-filename=\"DSC026335x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"/></span><figcaption>차이나타운 근처 카페, 참 마음에 드는 사진</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC027155x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/dxbLtI/btsPOrtuhjO/Z2J4wap98zoqgqvQn1aHhk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dxbLtI/btsPOrtuhjO/Z2J4wap98zoqgqvQn1aHhk/img.jpg\" data-alt=\"타누싱하 베이커리가 있는 골목\"><img src=\"https://blog.kakaocdn.net/dn/dxbLtI/btsPOrtuhjO/Z2J4wap98zoqgqvQn1aHhk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdxbLtI%2FbtsPOrtuhjO%2FZ2J4wap98zoqgqvQn1aHhk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2400\" height=\"3000\" data-filename=\"DSC027155x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"/></span><figcaption>타누싱하 베이커리가 있는 골목</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC027515x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/bATOAY/btsPPBbAxBd/4hU8D0NCPY840RRuxVWgv1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bATOAY/btsPPBbAxBd/4hU8D0NCPY840RRuxVWgv1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bATOAY/btsPPBbAxBd/4hU8D0NCPY840RRuxVWgv1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbATOAY%2FbtsPPBbAxBd%2F4hU8D0NCPY840RRuxVWgv1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2400\" height=\"3000\" data-filename=\"DSC027515x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC028645x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/Ape9s/btsPPnq7Ps0/Lmb5eGepBMFB3mKc0L6I20/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/Ape9s/btsPPnq7Ps0/Lmb5eGepBMFB3mKc0L6I20/img.jpg\" data-alt=\"방콕 터미널21\"><img src=\"https://blog.kakaocdn.net/dn/Ape9s/btsPPnq7Ps0/Lmb5eGepBMFB3mKc0L6I20/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FApe9s%2FbtsPPnq7Ps0%2FLmb5eGepBMFB3mKc0L6I20%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"3000\" data-filename=\"DSC028645x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"/></span><figcaption>방콕 터미널21</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC028985x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"><span data-url=\"https://blog.kakaocdn.net/dn/bNpGee/btsPNDg9LGa/KvmUOr2DeTuFgww8p1EgXk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bNpGee/btsPNDg9LGa/KvmUOr2DeTuFgww8p1EgXk/img.jpg\" data-alt=\"벤짜낏띠 공원\"><img src=\"https://blog.kakaocdn.net/dn/bNpGee/btsPNDg9LGa/KvmUOr2DeTuFgww8p1EgXk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbNpGee%2FbtsPNDg9LGa%2FKvmUOr2DeTuFgww8p1EgXk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"2000\" data-filename=\"DSC028985x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"2000\"/></span><figcaption>벤짜낏띠 공원</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC029035x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/xojzw/btsPQy6eQ1I/FO8VTI1TknZgK8jdt7KYpK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/xojzw/btsPQy6eQ1I/FO8VTI1TknZgK8jdt7KYpK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/xojzw/btsPQy6eQ1I/FO8VTI1TknZgK8jdt7KYpK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fxojzw%2FbtsPQy6eQ1I%2FFO8VTI1TknZgK8jdt7KYpK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"3000\" data-filename=\"DSC029035x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"/></span></figure>\n</p>",
        "contentSnippet": "아유타야 숙소 입구에서 바라본 여행의 시작\n\n고단함\n\n아유타야\n\n방콕 황금불사원 계단\n\n황금불 사원에서 바라본 방콕 도심\n\n방콕 차이나 타운\n\n차이나타운 근처 카페, 참 마음에 드는 사진\n\n타누싱하 베이커리가 있는 골목\n\n\n방콕 터미널21\n\n벤짜낏띠 공원",
        "guid": "https://hodolman.tistory.com/79",
        "categories": [
          "여행",
          "방콕",
          "아유타야",
          "태국"
        ],
        "isoDate": "2025-08-11T13:34:30.000Z"
      }
    ]
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": [
      {
        "title": "트랜잭션 상태를 한눈에! AOP 활용 롤백 테스트 구현기",
        "link": "https://velog.io/@sweet_sumin/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%83%81%ED%83%9C%EB%A5%BC-%ED%95%9C%EB%88%88%EC%97%90-AOP-%ED%99%9C%EC%9A%A9-%EB%A1%A4%EB%B0%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%EA%B8%B0",
        "pubDate": "Fri, 08 Aug 2025 05:23:26 GMT",
        "content": "<h1 id=\"📌-개요\">📌 개요</h1>\n<p>트랜잭션은 데이터의 일관성을 보장하기 위한 핵심 메커니즘이다.특히 복잡한 비즈니스 로직에서 여러 서비스가 얽혀 있을 때, 어느 한 단계라도 실패하면 전체 작업이 롤백되어야 한다.</p>\n<p>이번 글에서는 스프링 트랜잭션 롤백이 잘 동작하는지 테스트하는 방법과\nAOP를 활용해 트랜잭션 상태(롤백 여부, 예외 발생 여부)를 실시간으로 추적하는 방법을 주문 기능과 함께 이야기해보려고 한다. </p>\n<p>사실 난 지금까지 부끄럽지만 롤백 테스트를 postman을 이용한 실테스트로 진행해왔다. 이번에는 롤백 테스트도 테스트 코드로 해낼 수 있지 않을까?에서 부터 시작된 이야기이다.</p>\n<h1 id=\"📌-트랜잭션-롤백-테스트의-필요성\">📌 트랜잭션 롤백 테스트의 필요성</h1>\n<p>예를 들어, 주문 생성 시 재고 차감과 결제 포인트 차감이 동시에 이루어진다.\n만약 재고 차감에서 예외가 발생하면, 결제 역시 취소되어야 한다.</p>\n<p>이를 보장하기 위해서는 전체 주문 프로세스가 하나의 트랜잭션 내에서 실행되어야 하며,한 부분이라도 실패하면 전체가 롤백되어야 한다.</p>\n<h1 id=\"📌-필요한-구성-요소\">📌 필요한 구성 요소</h1>\n<h3 id=\"1-트랜잭션-상태-정보-저장용-객체-transactiontraceinfo\">1. 트랜잭션 상태 정보 저장용 객체 (TransactionTraceInfo)</h3>\n<p>트랜잭션 실행 중 발생한 상태(어떤 메서드에서, 어떤 인자와 함께 실행됐고, 롤백 상태인지, 예외가 있었는지)를 한 곳에 모아 구조화된 데이터로 관리하기 위해 필요하다.</p>\n<ul>\n<li>메서드 이름과 인자를 기록해 어떤 트랜잭션인지 추적 가능</li>\n<li>롤백 여부를 알면 트랜잭션 성공/실패를 판단할 수 있음</li>\n<li>예외 발생 여부로 문제 발생 원인 분석 가능</li>\n</ul>\n<h3 id=\"2-저장소transactiontraceholder\">2. 저장소(TransactionTraceHolder)</h3>\n<p>트랜잭션 상태 정보를 스레드 로컬(ThreadLocal) 에 안전하게 저장하고 꺼내는 저장소 역할이다. 동시에 여러 요청이 병렬로 처리되는 서버 환경에서, 각 요청별로 트랜잭션 상태를 독립적으로 관리하기 위해 필요하다.\nThreadLocal은 각 스레드마다 독립된 저장 공간을 제공하기 때문에, 여러 스레드가 동시에 접근해도 데이터가 섞이지 않는다.</p>\n<ul>\n<li>ThreadLocal을 이용해 스레드별 독립 저장소 제공</li>\n<li>여러 스레드가 하나의 전역 변수나 공유 객체를 건드리는 것을 방지해 데이터 충돌, 혼선 방지</li>\n<li>테스트나 로그에서 각 트랜잭션의 상태를 정확히 조회하기 위한 안정적이고 안전한 상태 보관소 역할</li>\n<li>요청 처리가 끝나면 clear()로 상태 제거해 메모리 누수 및 정보 오염 방지\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/65264cc1-b522-459e-b627-dd3b7a7737bf/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"3-aop-처리기-transactiontraceaspect\">3. AOP 처리기 (TransactionTraceAspect)</h3>\n<p>Spring의 AOP(Aspect-Oriented Programming)를 사용해 @Transactional이 붙은 메서드 호출 시점에 개입하여 트랜잭션 상태(rollback 여부, 예외 발생 여부 등)를 추적하고 기록하는 클래스가 필요하다. 즉, 트랜잭션 동작을 감시하는 관찰자 역할을 하는 TransactionTraceAspect를 만들어냈다. \n이를 통해, 트랜잭션 내부에서 발생한 상태(성공, 실패, 롤백 여부)를 코드 변경 없이도 획득할 수 있어 테스트나 로깅등을 할 수 있다. </p>\n<ul>\n<li>트랜잭션 동작을 관찰하는 역할</li>\n<li>별도 코드 수정 없이 트랜잭션 상태 정보 획득 가능</li>\n<li>테스트 및 로깅에 활용 가능\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/206074e3-ab76-4d29-9b5d-faf03eded3c0/image.png\" alt=\"\"></li>\n</ul>\n<h1 id=\"📌-트랜잭션-롤백-테스트와-상태-추적-aop의-원리\">📌 트랜잭션 롤백 테스트와 상태 추적 AOP의 원리</h1>\n<ol>\n<li>스프링 트랜잭션 관리 원리\n스프링은 AOP를 구현하기 위해 프록시 패턴을 사용합니다. @Transactional이 붙은 클래스에 대해 동적 프록시를 생성하고, 이 프록시를 통해 메서드 호출을 가로채 트랜잭션 경계를 설정한다.</li>\n</ol>\n<ul>\n<li>스프링은 @Transactional이 붙은 클래스에 대해 프록시 객체를 생성한다.</li>\n<li>클라이언트가 실제 객체의 메서드를 호출하면, 스프링은 프록시 객체를 통해 호출을 가로챈다.</li>\n<li>프록시는 트랜잭션을 시작하고, 실제 객체의 메서드를 실행한다.</li>\n<li>메서드가 정상 종료되면 프록시는 트랜잭션을 커밋한다.</li>\n<li>메서드 실행 중 예외가 발생하면 프록시는 트랜잭션을 롤백하여 데이터 일관성을 보장한다.</li>\n</ul>\n<ol start=\"2\">\n<li>트랜잭션 롤백 테스트 원리</li>\n</ol>\n<ul>\n<li>테스트는 @Transactional이 적용된 최상위 메서드를 대상으로 한다.</li>\n<li>이때 모킹 프레임워크(Mockito 등)를 사용하여 내부 서비스 메서드에 강제로 예외를 발생시킨다.</li>\n<li>최상위 메서드는 이 예외를 감지하고, 스프링의 트랜잭션 관리자에 의해 롤백이 유도된다.</li>\n<li>테스트는 이 롤백이 실제로 발생했는지 검증하여 트랜잭션이 올바르게 동작하는지 확인한다.</li>\n</ul>\n<ol start=\"3\">\n<li>트랜잭션 상태 추적을 위한 AOP 원리</li>\n</ol>\n<ul>\n<li>AOP(Aspect Oriented Programming)를 이용해 @Transactional 메서드 실행 시점 전후에 추가 로직을 삽입한다.</li>\n<li>메서드 실행 전, AOP는 ThreadLocal 기반 저장소(TransactionTraceHolder)에 트랜잭션 추적 정보를 기록한다.</li>\n<li>메서드 실행 중 예외가 발생하면 AOP는 이를 감지하고, 트랜잭션 상태(TransactionAspectSupport.currentTransactionStatus())를 읽어와 롤백 여부, 예외 발생 여부를 추적 정보에 업데이트한다.</li>\n<li>이 상태 정보는 테스트 코드나 로깅 시스템에서 참조할 수 있어, 트랜잭션의 동작을 정확히 파악할 수 있다.</li>\n</ul>\n<h2 id=\"테스트-진행\">테스트 진행</h2>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/59f30e3c-3fc8-44e8-ad0f-52aac252c532/image.png\" alt=\"\">\n롤백 테스트 중 재고차감 실패시 전체 트랜잭션이 롤백되는지의 여부를 확인하는 테스트이다. </p>\n<h3 id=\"핵심-메커니즘\">핵심 메커니즘</h3>\n<ul>\n<li>TransactionAspectSupport.currentTransactionStatus()를 호출해 현재 스프링 트랜잭션의 상태를 얻는다.</li>\n<li>isRollbackOnly 값이 true면, 해당 트랜잭션은 롤백 대기 상태임을 의미한다.</li>\n<li>@Around 어드바이스는 예외 발생 여부를 감지하고, 메서드 실행 결과와 함께 상태 정보를 저장한다.</li>\n</ul>\n<h2 id=\"소감\">소감</h2>\n<p>처음에는 트랜잭션 롤백 테스트가 복잡하고 어려운 주제로 느껴졌다.특히 여러 서비스가 엮여 있고, 동시에 발생하는 예외 상황까지 고려해야 하다 보니 더욱 그랬다.\n하지만 이번에 직접 코드를 작성하고, AOP로 트랜잭션 상태를 추적하는 방식을 적용해보면서\n스프링이 제공하는 트랜잭션 관리의 강력함과 유연함을 다시 한번 체감할 수 있었다. \n테스트 코드로 롤백 동작을 검증하니, 수작업 테스트 대비 훨씬 신뢰도가 높고 반복 가능하다는 점도 큰 장점이었고, 이 덕분에 서비스 안정성을 높이는 데 큰 도움이 될 것이라 생각한다. \n또한, AOP를 활용해 트랜잭션 상태 정보를 실시간으로 수집하고 기록하는 구조는\n로깅이나 모니터링, 문제 발생 시 원인 분석에도 매우 유용하다는 점에서\n운영 환경에서 장애 대응에 큰 힘이 될 것이라는 생각이 들었다.</p>\n",
        "contentSnippet": "📌 개요\n트랜잭션은 데이터의 일관성을 보장하기 위한 핵심 메커니즘이다.특히 복잡한 비즈니스 로직에서 여러 서비스가 얽혀 있을 때, 어느 한 단계라도 실패하면 전체 작업이 롤백되어야 한다.\n이번 글에서는 스프링 트랜잭션 롤백이 잘 동작하는지 테스트하는 방법과\nAOP를 활용해 트랜잭션 상태(롤백 여부, 예외 발생 여부)를 실시간으로 추적하는 방법을 주문 기능과 함께 이야기해보려고 한다. \n사실 난 지금까지 부끄럽지만 롤백 테스트를 postman을 이용한 실테스트로 진행해왔다. 이번에는 롤백 테스트도 테스트 코드로 해낼 수 있지 않을까?에서 부터 시작된 이야기이다.\n📌 트랜잭션 롤백 테스트의 필요성\n예를 들어, 주문 생성 시 재고 차감과 결제 포인트 차감이 동시에 이루어진다.\n만약 재고 차감에서 예외가 발생하면, 결제 역시 취소되어야 한다.\n이를 보장하기 위해서는 전체 주문 프로세스가 하나의 트랜잭션 내에서 실행되어야 하며,한 부분이라도 실패하면 전체가 롤백되어야 한다.\n📌 필요한 구성 요소\n1. 트랜잭션 상태 정보 저장용 객체 (TransactionTraceInfo)\n트랜잭션 실행 중 발생한 상태(어떤 메서드에서, 어떤 인자와 함께 실행됐고, 롤백 상태인지, 예외가 있었는지)를 한 곳에 모아 구조화된 데이터로 관리하기 위해 필요하다.\n메서드 이름과 인자를 기록해 어떤 트랜잭션인지 추적 가능\n롤백 여부를 알면 트랜잭션 성공/실패를 판단할 수 있음\n예외 발생 여부로 문제 발생 원인 분석 가능\n2. 저장소(TransactionTraceHolder)\n트랜잭션 상태 정보를 스레드 로컬(ThreadLocal) 에 안전하게 저장하고 꺼내는 저장소 역할이다. 동시에 여러 요청이 병렬로 처리되는 서버 환경에서, 각 요청별로 트랜잭션 상태를 독립적으로 관리하기 위해 필요하다.\nThreadLocal은 각 스레드마다 독립된 저장 공간을 제공하기 때문에, 여러 스레드가 동시에 접근해도 데이터가 섞이지 않는다.\nThreadLocal을 이용해 스레드별 독립 저장소 제공\n여러 스레드가 하나의 전역 변수나 공유 객체를 건드리는 것을 방지해 데이터 충돌, 혼선 방지\n테스트나 로그에서 각 트랜잭션의 상태를 정확히 조회하기 위한 안정적이고 안전한 상태 보관소 역할\n요청 처리가 끝나면 clear()로 상태 제거해 메모리 누수 및 정보 오염 방지\n\n3. AOP 처리기 (TransactionTraceAspect)\nSpring의 AOP(Aspect-Oriented Programming)를 사용해 @Transactional이 붙은 메서드 호출 시점에 개입하여 트랜잭션 상태(rollback 여부, 예외 발생 여부 등)를 추적하고 기록하는 클래스가 필요하다. 즉, 트랜잭션 동작을 감시하는 관찰자 역할을 하는 TransactionTraceAspect를 만들어냈다. \n이를 통해, 트랜잭션 내부에서 발생한 상태(성공, 실패, 롤백 여부)를 코드 변경 없이도 획득할 수 있어 테스트나 로깅등을 할 수 있다. \n트랜잭션 동작을 관찰하는 역할\n별도 코드 수정 없이 트랜잭션 상태 정보 획득 가능\n테스트 및 로깅에 활용 가능\n\n📌 트랜잭션 롤백 테스트와 상태 추적 AOP의 원리\n스프링 트랜잭션 관리 원리\n스프링은 AOP를 구현하기 위해 프록시 패턴을 사용합니다. @Transactional이 붙은 클래스에 대해 동적 프록시를 생성하고, 이 프록시를 통해 메서드 호출을 가로채 트랜잭션 경계를 설정한다.\n스프링은 @Transactional이 붙은 클래스에 대해 프록시 객체를 생성한다.\n클라이언트가 실제 객체의 메서드를 호출하면, 스프링은 프록시 객체를 통해 호출을 가로챈다.\n프록시는 트랜잭션을 시작하고, 실제 객체의 메서드를 실행한다.\n메서드가 정상 종료되면 프록시는 트랜잭션을 커밋한다.\n메서드 실행 중 예외가 발생하면 프록시는 트랜잭션을 롤백하여 데이터 일관성을 보장한다.\n트랜잭션 롤백 테스트 원리\n테스트는 @Transactional이 적용된 최상위 메서드를 대상으로 한다.\n이때 모킹 프레임워크(Mockito 등)를 사용하여 내부 서비스 메서드에 강제로 예외를 발생시킨다.\n최상위 메서드는 이 예외를 감지하고, 스프링의 트랜잭션 관리자에 의해 롤백이 유도된다.\n테스트는 이 롤백이 실제로 발생했는지 검증하여 트랜잭션이 올바르게 동작하는지 확인한다.\n트랜잭션 상태 추적을 위한 AOP 원리\nAOP(Aspect Oriented Programming)를 이용해 @Transactional 메서드 실행 시점 전후에 추가 로직을 삽입한다.\n메서드 실행 전, AOP는 ThreadLocal 기반 저장소(TransactionTraceHolder)에 트랜잭션 추적 정보를 기록한다.\n메서드 실행 중 예외가 발생하면 AOP는 이를 감지하고, 트랜잭션 상태(TransactionAspectSupport.currentTransactionStatus())를 읽어와 롤백 여부, 예외 발생 여부를 추적 정보에 업데이트한다.\n이 상태 정보는 테스트 코드나 로깅 시스템에서 참조할 수 있어, 트랜잭션의 동작을 정확히 파악할 수 있다.\n테스트 진행\n\n롤백 테스트 중 재고차감 실패시 전체 트랜잭션이 롤백되는지의 여부를 확인하는 테스트이다. \n핵심 메커니즘\nTransactionAspectSupport.currentTransactionStatus()를 호출해 현재 스프링 트랜잭션의 상태를 얻는다.\nisRollbackOnly 값이 true면, 해당 트랜잭션은 롤백 대기 상태임을 의미한다.\n@Around 어드바이스는 예외 발생 여부를 감지하고, 메서드 실행 결과와 함께 상태 정보를 저장한다.\n소감\n처음에는 트랜잭션 롤백 테스트가 복잡하고 어려운 주제로 느껴졌다.특히 여러 서비스가 엮여 있고, 동시에 발생하는 예외 상황까지 고려해야 하다 보니 더욱 그랬다.\n하지만 이번에 직접 코드를 작성하고, AOP로 트랜잭션 상태를 추적하는 방식을 적용해보면서\n스프링이 제공하는 트랜잭션 관리의 강력함과 유연함을 다시 한번 체감할 수 있었다. \n테스트 코드로 롤백 동작을 검증하니, 수작업 테스트 대비 훨씬 신뢰도가 높고 반복 가능하다는 점도 큰 장점이었고, 이 덕분에 서비스 안정성을 높이는 데 큰 도움이 될 것이라 생각한다. \n또한, AOP를 활용해 트랜잭션 상태 정보를 실시간으로 수집하고 기록하는 구조는\n로깅이나 모니터링, 문제 발생 시 원인 분석에도 매우 유용하다는 점에서\n운영 환경에서 장애 대응에 큰 힘이 될 것이라는 생각이 들었다.",
        "guid": "https://velog.io/@sweet_sumin/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%83%81%ED%83%9C%EB%A5%BC-%ED%95%9C%EB%88%88%EC%97%90-AOP-%ED%99%9C%EC%9A%A9-%EB%A1%A4%EB%B0%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%EA%B8%B0",
        "isoDate": "2025-08-08T05:23:26.000Z"
      }
    ]
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "슈퍼앱의 허상",
        "link": "https://www.thestartupbible.com/2025/08/super-apps-are-not-built-in-a-day.html",
        "pubDate": "Wed, 13 Aug 2025 21:36:00 +0000",
        "content:encodedSnippet": "매우 적지만, 우리도 지금까지 몇 개의 엑싯을 경험한 적이 있다. 쿠팡 같이 IPO를 한 경우도 있지만, 더 큰 회사에 인수되거나 비슷한 규모의 회사와 합병하면서 M&A를 통해 엑싯 한 경우가 대부분이다. 많지 않은 M&A를 통해서 내가 배운 게 하나 있다면, 좋은 엑싯을 위해서는 회사가 팔려야지, 팔아서는 안 된다는 것이다. 이게 무슨 말이냐 하면, 좋은 회사는 엑싯을 굳이 하려고 노력하지 않아도 사업만 잘하면, 누군가 연락이 와서 인수의 관심을 표시하리라는 것이다. 안 되는 회사를 억지로 다른 회사에 인수나 합병시키려고 하면 아예 안 되거나, 아주 안 좋은 조건에 딜이 성사된다.\n그래서 나는 창업가를 만날 때, 이분이 회사를 시작하자마자 엑싯에 너무 꽂혀 있으면 매력도가 확 떨어진다. 이제 시작했고, 지금 매출 100만 원도 못 하는데, 사업에 집중하지 않고 3년 후에 회사를 네이버나 카카오에 얼마에 팔겠다는 생각만 한다면 이 회사는 금방 망하거나, 헐값에 팔릴 것이다. 반면에 엑싯은 크게 생각하지 않고 그냥 아주 좋은 사업을 만들고, 매출을 만들고, 고객의 목소리에 집중하는 창업가들은 언젠가는 네이버나 카카오 같은 회사가 먼저 연락이 와서 인수 의향을 밝힐 것이고, 이렇게 된다면 본인이 원하는 좋은 조건에 회사가 팔릴 수 있을 것이다.\n얼마 전에 슈퍼앱을 만들겠다는 한 창업가의 이야기를 들으면서 이 M&A에 대한 내 배움이 떠올랐다. 이분의 목표는 그 분야에서 모든 걸 다 처리할 수 있고, 모든 걸 다 가능케 하는 슈퍼앱이었다. 창업 첫날부터 슈퍼앱에 대한 생각만 하고 있고, 회사의 모든 결정의 – 제품, 펀드레이징, 채용 – 기준이 되는 건 슈퍼앱이었다. 아직 제대로 기어다니지도 못하는데, 처음부터 하늘을 나는 것에만 관심이 있고, 여기에만 꽂혀 있는 것이다. 이분의 슈퍼앱에 대한 야망에 관한 이야기를 계속 듣자니 짜증이 나기 시작했다. 그리고 결국 내가 입을 열고 이 창업가에게 진심 어린 충고를 하나 했다. “대표님, 슈퍼앱은 그렇게 처음부터 만들겠다고 해서 만들기보단, 그냥 작은 기능을 하나씩 완벽하게 만들다 보면 자연스럽게 만들어지는 것이에요.” 슈퍼앱에 꽂혀서 한 번에 너무 많은 걸 동시에 만들다 보면, 결과는 뭐 하나 제대로 작동하지 않는 C급의 저질 앱이다. 그냥 한 번에 하나씩, 천천히 만들지만, 그 하나하나를 완벽하게 만들다 보면, 복리의 힘이 작용하면서 결국엔 이게 슈퍼앱이 되는 것이다. 정작 본인은 이 제품이 슈퍼앱이 되는지도 모르는 사이에.\n이런 사례를 멀리서 찾을 필요도 없다. 한국을 대표하는 두 개의 슈퍼앱인 네이버와 카카오만 보더라도, 처음부터 슈퍼 앱을 만들겠다고 만든 게 아니다. 검색과 메신저라는 기능을 그 누구보다 뾰족하게 만든 후에, 그리고 다른 분야로 확장하더라도 기반이 되는 이 검색과 메신저 기능을 다른 경쟁사가 절대로 더 잘하지 못할 것이라는 확신을 가진 후에, 그제야 다른 분야로 확장하면서 본인들도 모르게 슈퍼앱이 된 것으로 알고 있다.\n그래서 나는 이제 사업을 시작했는데, 너무나 슈퍼앱에 꽂혀 있는 창업가들에겐 그다지 매력을 느끼지 못한다. 그리고 슈퍼 앱 이야기를 들은 후, 내게 아직도 에너지가 남아 있다면, 항상 비슷한 충고를 한다. 슈퍼앱은 만들고 싶다고 만드는 게 아니라, 작은 것들을 계속 반복하면서 고객들이 좋아하는 작은 기능과 제품을 잘 만들다 보면, 우리도 모르는 사이에 자연스럽게 만들어지는 것이라고. 그리고 창업가들이 우리 제품은 슈퍼앱이라고 떠드는 게 아니라, 고객들이 우리 제품은 슈퍼앱이라고 명명하면서 왕관을 씌워주는 거라고.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/08/super-apps-are-not-built-in-a-day.html#respond",
        "content": "매우 적지만, 우리도 지금까지 몇 개의 엑싯을 경험한 적이 있다. 쿠팡 같이 IPO를 한 경우도 있지만, 더 큰 회사에 인수되거나 비슷한 규모의 회사와 합병하면서 M&#38;A를 통해 엑싯 한 경우가 대부분이다. 많지 않은 M&#38;A를 통해서 내가 배운 게 하나 있다면, 좋은 엑싯을 위해서는 회사가 팔려야지, 팔아서는 안 된다는 것이다. 이게 무슨 말이냐 하면, 좋은 회사는 엑싯을(...)",
        "contentSnippet": "매우 적지만, 우리도 지금까지 몇 개의 엑싯을 경험한 적이 있다. 쿠팡 같이 IPO를 한 경우도 있지만, 더 큰 회사에 인수되거나 비슷한 규모의 회사와 합병하면서 M&A를 통해 엑싯 한 경우가 대부분이다. 많지 않은 M&A를 통해서 내가 배운 게 하나 있다면, 좋은 엑싯을 위해서는 회사가 팔려야지, 팔아서는 안 된다는 것이다. 이게 무슨 말이냐 하면, 좋은 회사는 엑싯을(...)",
        "guid": "https://www.thestartupbible.com/?p=9529",
        "categories": [
          "Uncategorized",
          "exit",
          "FoundersAtWork",
          "product",
          "strategy",
          "Strong"
        ],
        "isoDate": "2025-08-13T21:36:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "탁월해지기",
        "link": "https://www.thestartupbible.com/2025/08/being-extraordinary.html",
        "pubDate": "Sun, 10 Aug 2025 21:34:00 +0000",
        "content:encodedSnippet": "2001년도에 출간된 짐 콜린스의 책 ‘Good to Great’은 당시에 아주 화제가 됐다. 웬만한 경영대학원에서 가르치는 그 어떤 수업보다 더 생생하고, 이론적이면서도 동시에 실용적인 경영 서적이었다. 한국에서는 ‘좋은 기업을 넘어 위대한 기업으로’라는 이름으로 번역되어 출간됐고, 이 책이 어떤 내용인지는 책의 제목이 그대로 설명해 준다. 좋은 기업이 되는 것도 어렵지만, 왜 어떤 기업은 그냥 좋은 기업으로 남고, 어떤 극소수의 기업은 위대한 기업이 되는지, 꽤 괜찮은 프레임워크 기반의 연구와 조사를 통해서 위대한 기업의 특징을 쉽게 설명해 준다. 시간을 이기는 장사는 없다고, 안타깝게도 시간이 지나면서 이 책의 내용에도 허점이 많다는 게 계속 증명되고 있다.\n이 책보다 기업의 위대함과 탁월함에 대해서 먼저 나온 책은 1982년 출간된 ‘In Search of Excellence’이다. 개인적으론, 이 책이 정말 걸작이라고 생각한다. 한국에서는 ‘초우량 기업의 조건’이라고 번역됐는데, 나한테 만약에 이 번역을 맡겼다면 ‘탁월한 기업의 조건’이라고 했을 것 같다. 그리고 ‘Good to Great’도 ‘좋은 기업을 넘어 탁월한 기업으로’라고 했을 것 같다.\n일을 제대로 하고 싶어 하는 분들은, 대부분 탁월해지고 싶어 한다. 특히나 창업가들은 탁월해지고 싶어 하고, 모두 다 탁월한 회사를 만들고 싶어 한다. 탁월하다는 걸 의미하는 영어 단어가 몇 개 있지만 내가 가장 좋아하는 건 ‘extraordinary’이다. 모든 창업가들이 꿈꾸는 탁월함을 이 단어가 가장 잘 표현하는 게 아닐까 싶다.\nExtraordinary 한 회사를 만들고 싶다면 두 가지 방법이 있다. Extraordinary 한 사람들로만 회사를 구성하거나, 보통 사람들이 모두 extraordinary 하게 일해야 한다. 여기서 내가 말하는 extraordinary 한 사람이란 평범한 사람들보다 월등하게 능력이 좋고, 지능도 높은 천재들인데, 솔직히 일반 회사를 이런 사람들로 구성하는 건 쉽지 않다. 이 방법으로 extraordinary 한 회사를 만드는 건 거의 불가능하다. 하지만, 너와 나 같은 보통 사람들로 회사를 구성하고 이들이 extraordinary 하게 일해서 탁월한 회사를 만드는 건 조금 더 가능한 일이다. Extraordinary 한 회사를 만들고 싶다면, 전 직원이 extraordinary 하게 일해야 한다. 즉, 미친 듯이 열심히 일해야 한다.\n너무나 많은 사람들이 extraordinary 한 회사를 만들고 싶다고 하는데, 막상 이들이 일하는 걸 보면 그냥 다른 사람들이랑 비슷하게 일주일에 40시간만 일한다. 남들과 똑같이 일해서 어떻게 extraordinary 한 회사를 만들겠다는 말인가?\n탁월한 회사를 만들고 싶다면 개 같이 일해야 한다. 아주 개 같이 탁월하게 일하지 않으면 그냥 그렇고 그런 평범한 회사도 못 만들지도 모른다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/08/being-extraordinary.html#comments",
        "content": "2001년도에 출간된 짐 콜린스의 책 ‘Good to Great’은 당시에 아주 화제가 됐다. 웬만한 경영대학원에서 가르치는 그 어떤 수업보다 더 생생하고, 이론적이면서도 동시에 실용적인 경영 서적이었다. 한국에서는 ‘좋은 기업을 넘어 위대한 기업으로’라는 이름으로 번역되어 출간됐고, 이 책이 어떤 내용인지는 책의 제목이 그대로 설명해 준다. 좋은 기업이 되는 것도 어렵지만, 왜 어떤 기업은 그냥 좋은 기업으로 남고,(...)",
        "contentSnippet": "2001년도에 출간된 짐 콜린스의 책 ‘Good to Great’은 당시에 아주 화제가 됐다. 웬만한 경영대학원에서 가르치는 그 어떤 수업보다 더 생생하고, 이론적이면서도 동시에 실용적인 경영 서적이었다. 한국에서는 ‘좋은 기업을 넘어 위대한 기업으로’라는 이름으로 번역되어 출간됐고, 이 책이 어떤 내용인지는 책의 제목이 그대로 설명해 준다. 좋은 기업이 되는 것도 어렵지만, 왜 어떤 기업은 그냥 좋은 기업으로 남고,(...)",
        "guid": "https://www.thestartupbible.com/?p=9521",
        "categories": [
          "Uncategorized",
          "FoundersAtWork"
        ],
        "isoDate": "2025-08-10T21:34:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "토스, 2025년 상반기 연결 기준 영업수익 1.2조 원 돌파… 전년 동기 대비 35% 성장",
        "link": "https://toss.im/tossfeed/article/251H",
        "pubDate": "Thu, 14 Aug 2025 08:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}연결 기준 상반기 영업수익 1조 2,355억 원, 당기순이익 1,057억 원 기록\n3,000만 명 가입자 기반으로 사업 성장과 수익 다변화 성과 본격화\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 2025년 상반기 연결 기준 영업수익(매출) 1조 2,355억 원, 영업이익 1,546억 원을 기록했다고 14일 밝혔다. 연결 당기순이익은 1,057억 원으로, 2024년 연간 흑자 전환 이후 실적 상승 흐름이 이어지고 있다.\n상반기 매출은 전년 동기(9,141억 원) 대비 35.2% 증가한 수치다. 컨슈머와 머천트, 양대 서비스 사업 부문이 모두 성장한 가운데 수퍼앱 전략을 통한 두 부문의 시너지가 본격화되고 있다.\n컨슈머 서비스 부문 매출은 8,021억 원으로 상반기 연결 매출의 64.9%를 차지했다. 해당 부문에는 송금, 중개, 광고, 간편결제, 커머스, 증권, 세무, 인증 서비스 등이 포함되며, 약 3,000만 명의 가입자를 기반으로 서비스 이용률 증가에 따라 매출 비중이 확대됐다.\n머천트 서비스 부문 매출은 4,333억 원으로 상반기 연결 매출의 35.1%를 차지했다. 해당 부문은 PG(토스페이먼츠)와 오프라인 결제 단말기 판매(토스플레이스) 등 B2B 사업을 포괄한다. 토스 생태계 확장에 따른 기업 고객 증가, 거래 중심 수익 구조 등의 영향으로 안정적인 매출 흐름을 이어가고 있다.\n상반기 연결 당기순이익은 1,057억 원으로 수익 규모가 꾸준히 확대되는 추세다. 플랫폼 전반의 매출 증가와 주요 사업부문의 수익성 개선이 맞물리며 실현된 결과다. 특히, 매출 증가폭이 비용 증가를 상회하면서 영업 레버리지 효과가 실적에 더욱 뚜렷하게 반영됐다. 이는 단순한 외형 확대를 넘어 수익성 개선이 동반된 건강한 성장을 의미한다는 점에서 더욱 그 의미가 크다.\n토스 관계자는 “송금, 결제, 투자, 세무 등 다양한 금융 서비스를 하나의 앱에서 제공하는 통합 플랫폼으로서의 입지를 지속적으로 강화하고 있다”라며, “3,000만 가입자를 기반으로 하는 서비스 이용 증가와 핵심 사업 부문의 수익성 강화가 실적 개선으로 이어졌다”라고 밝혔다.",
        "content": "2025년 상반기 재무실적 발표",
        "contentSnippet": "2025년 상반기 재무실적 발표",
        "guid": "https://toss.im/tossfeed/article/251H",
        "isoDate": "2025-08-14T08:00:00.000Z"
      },
      {
        "title": "토스 페이스페이, 등록부터 결제까지 자주 묻는 질문들",
        "link": "https://toss.im/tossfeed/article/facepay-faq",
        "pubDate": "Tue, 12 Aug 2025 07:02:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}토스 페이스페이(이하 페이스페이)를 등록하고 사용하는 과정에서 가장 많이 하는 질문들을 모았어요. 여러분의 궁금증이 명확하게 해결될 수 있도록 차근차근 설명해드릴게요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}페이스페이를 등록하면서\n마주칠 수 있는 질문\nQ. 페이스페이를 이용하면 어떤 점이 좋은가요?\n페이스페이는 얼굴만으로 빠르고 편리하게 결제할 수 있어요. 지갑에서 카드를 꺼내거나 휴대전화 잠금을 해제할 필요 없이 1초 만에 편하게 결제할 수 있죠. 보안도 뛰어납니다. 토스의 철저한 보안 기술이 적용돼 본인만 결제할 수 있어, 결제 수단의 분실이나 도난 걱정 없이 안전하게 사용할 수 있어요.\nQ. 페이스페이는 어떻게 등록하나요?\n토스 앱에서 ‘페이스페이’를 검색해 등록할 수 있어요. 안내에 따라 얼굴을 인증하고 원하는 결제 수단을 연결하면 돼요. 단, 신분증이 발급된 17세 이상부터 등록이 가능합니다.\nQ. 등록할 때 신분증은 왜 필요한가요?\n페이스페이는 얼굴로 결제하는 서비스예요. 얼굴 정보를 등록할 땐, 그 얼굴이 본인이라는 걸 한 번 더 확인하는 과정이 필요해요. 신분증 인증을 통해 얼굴과 신원을 정확하게 연결해두면, 더 편하고 믿을 수 있게 서비스를 이용하실 수 있어요.\nQ. 신분증 촬영이 계속 실패해요\n‘쓸 수 없는 신분증’이라는 문구가 뜨는 건 빛 반사나 배경 때문인 경우가 많아요. 빛이 반사되지 않는 간접 조명 아래에서 촬영해보세요. 신분증이 너무 오래돼 글자나 사진이 닳은 경우에도 인식이 어려울 수 있으니, 상태가 좋은 신분증이나 모바일 신분증을 사용해 주세요.\nQ. 얼굴 인식이 잘 안 돼요\n얼굴 인식 오류의 가장 흔한 원인은 조명과 움직임이에요. 역광이 있으면 얼굴에 그림자가 생겨 인식이 어렵고, 얼굴을 너무 빠르게 움직이면 카메라가 정확히 인식하지 못해요. 조명을 앞에서 비추고, 좌우로 천천히 움직이는 것을 권해요.\nQ. 화면이 자꾸 처음으로 돌아가요\n등록 중 화면이 멈추거나 계속 초기 화면으로 돌아간다면, 토스 앱이 최신 버전인지 확인해보세요. 버전이 오래된 경우 일부 기능에서 오류가 날 수 있어요. 앱스토어나 플레이스토어에서 업데이트 후 다시 시도해 주세요.\nQ. 본인 확인을 하라는 화면이 뜨는데, 왜 그런거죠?\n일부 사용자에게는 등록 중 ‘본인 확인’ 화면이 뜰 수 있어요. 이 확인은 KYC(Know Your Customer)라는 금융기관이 고객의 신원을 확인하는 절차예요. 내국인은 3년마다, 외국인은 1년마다 진행해야 하는 법정 절차죠. 낯선 화면이 뜨더라도 걱정하지 않으셔도 돼요.\nQ. 토스뱅크 계좌가 꼭 있어야 하나요?\n페이스페이는 타사 은행 계좌나 카드와도 자유롭게 연결할 수 있어요. 지금 사용 중인 신용카드나 체크카드 그대로 연동해도 괜찮습니다.\n페이스페이를 사용하면서\n생길 수 있는 질문\nQ. 페이스페이는 어디에서 쓸 수 있나요?\n토스 프론트가 있는 곳이라면 페이스페이로 결제할 수 있어요. 토스 앱 페이스페이 메뉴의 ‘결제 가능 매장’을 통해 내 주변에 있는 페이스페이 결제 가능 매장을 지도로 확인할 수 있어요. 페이스페이를 지원하는 매장은 계속해서 늘어나고 있습니다.\nQ. 결제는 어떻게 하나요?\n페이스페이를 지원하는 매장에서 “토스 페이스페이로 결제할게요”라고 말해주세요. 토스 프론트에 설치된 카메라가 얼굴을 인식하고, 등록된 결제 수단으로 자동 결제가 이뤄져요. 토스 앱은 따로 열지 않아도 됩니다.\nQ. 외모가 변해도 인식이 잘 될까요?\n일상적인 변화는 괜찮아요. 같은 사람이라고 알아볼 수 있을 정도면 문제없이 인식돼요. 다만 모자나 안경이 눈이나 눈썹을 많이 가리면 인식이 어려울 수 있어요. 인식이 오래 걸리면 안경이나 모자를 벗고 결제를 시도해 주세요.\n외모가 크게 바뀌었다면, 토스 앱에서 얼굴을 다시 등록해 주세요. ‘전체’ 탭에서 ‘페이스페이’를 검색한 후,\n설정 메뉴에서 ‘얼굴 다시 인증하기’를 선택하면 됩니다.\nQ. 개인정보는 안전한가요?\n페이스페이에 등록된 정보는 모두 암호화되어 토스 서버에 안전하게 보관돼요. 토스는 24시간 이상거래탐지시스템(FDS)을 비롯한 최고 수준의 보안 기술을 적용하고 있습니다. 보안팀, 보안기술팀, 개인정보 보호팀이 함께 철저한 보안 체계를 운영하고 있으며, 개인정보 보호 관련 모든 공식 인증도 획득했어요. 안심하고 사용하셔도 좋아요.\nQ. 결제가 안 되거나 불편한 점이 있을 때는 어떻게 하나요?\n페이스페이 결제에 실패했거나 이용 중 불편한 점이 있다면 알려주세요. 결제 실패는 페이스페이 서포터즈 탭 안의 ‘제보’ 버튼을 통해 남기실 수 있어요. 그 외 불편사항이나 관련 문의는 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}고객센터에서 상담할 수 있어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 이은호 이동건",
        "content": "페이스페이를 등록하고 사용하며 마주치는 물음에 답해드릴게요",
        "contentSnippet": "페이스페이를 등록하고 사용하며 마주치는 물음에 답해드릴게요",
        "guid": "https://toss.im/tossfeed/article/facepay-faq",
        "isoDate": "2025-08-12T07:02:00.000Z"
      },
      {
        "title": "토스, ‘내 신용점수 리포트’ 서비스 오픈",
        "link": "https://toss.im/tossfeed/article/creditt",
        "pubDate": "Mon, 11 Aug 2025 15:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}KCB와 단독 제휴로 신용점수 변동 원인 분석 제공\n대출 상환액, 신용카드 이용금액 등 주요 항목도 확인 가능\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 ‘내 신용점수 리포트’ 서비스를 새롭게 출시했다고 12일 밝혔다. 해당 서비스는 올해 12월까지 KCB(코리아크레딧뷰로)와의 독점 계약을 기반으로 운영된다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n‘내 신용점수 리포트’는 토스가 KCB의 신용점수 및 기초 데이터를 분석, 점수에 영향을 준 주요 요인을 시각적으로 정리해 제공하는 서비스다. 단순 신용점수 조회를 넘어, 요인 분석 리포트를 무료로 제공하는 것은 국내 최초다.\n이용자는 본인의 신용점수에 긍정적인 영향을 준 요인 3가지, 부정적인 영향을 준 요인 3가지 등 최대 6가지의 주요 항목을 한눈에 확인할 수 있다. 또한 신용점수가 상승하거나 하락할 경우 변화의 원인을 바로 확인할 수 있는 알림을 발송한다.\n마이데이터를 연동한 경우, 신용점수 외에 추가적인 항목들을 함께 볼 수 있다. 추가 정보는 최근 대출 상환액, 신용카드 사용 금액, 체크카드 이용 기간, 신용 거래 기간 등이 포함된다.\n이용자는 본인의 신용점수에 어떤 금융 행동이 영향을 미쳤는지 확인하고, 이를 바탕으로 신용 개선 계획을 세울 수 있는 점에서 의미가 있다.\n이 서비스는 토스 앱 > ‘내 신용점수’ > ‘내 신용점수 리포트’ 메뉴에서 이용할 수 있다.\n토스 관계자는 “이용자들이 자신의 신용점수를 보다 잘 이해하고, 체계적으로 관리할 수 있도록 돕기 위해 이번 서비스를 선보이게 됐다”며, “앞으로도 금융 생활에 실질적인 도움을 주는 신용 관리 서비스를 지속 확대해 나갈 계획”이라고 밝혔다.",
        "content": "내 금융 행동 분석으로 신용점수 관리하세요",
        "contentSnippet": "내 금융 행동 분석으로 신용점수 관리하세요",
        "guid": "https://toss.im/tossfeed/article/creditt",
        "isoDate": "2025-08-11T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]