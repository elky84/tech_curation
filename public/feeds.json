[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Maria Sharobaeva",
        "title": "JetBrains Academy – June Digest",
        "link": "https://blog.jetbrains.com/education/2025/06/13/jetbrains-academy-june/",
        "pubDate": "Fri, 13 Jun 2025 14:26:54 +0000",
        "content:encodedSnippet": "This month, we’ve gathered fun plugins and a course to help you build your own, as well as AI updates, exciting news for C++ learners and professional developers. Dive in!\nFun learning for you\nVibe Coding with Junie for Developers\nDiscover Junie, your AI-powered coding agent in JetBrains IDEs. Learn how to boost your workflow and enjoy a more intuitive, fun development process.\nStart learning\n                                                    \nIDE Plugin Development Course\n Have you ever wanted to build a plugin that makes coding more fun, just like the Nyan Progress Bar or Power Mode II? Learn how to create your own plugin in this hands-on course.\nTry now\n                                                    \nFree Courses in Free CLion\nBig news for C and C++ learners! CLion is now free for non-commercial use. It’s the perfect moment to start learning C++ with our hands-on, beginner-friendly course.\nStart the course\n                                                    \nAI tips for you\n5 Lessons for Beginners\nGet 5 bite-sized lessons for working smarter with AI, avoiding common traps, and sharpening your coding mindset.\nRead more\n                                                    \nAI-Powered Learning\nDiscover new AI hints for your Kotlin and Python courses. Learn how to boost your progress and make coding more fun, fast, and interactive with the latest JetBrains Academy plugin features.\nRead now",
        "dc:creator": "Maria Sharobaeva",
        "content": "This month, we’ve gathered fun plugins and a course to help you build your own, as well as AI updates, exciting news for C++ learners and professional developers. Dive in!",
        "contentSnippet": "This month, we’ve gathered fun plugins and a course to help you build your own, as well as AI updates, exciting news for C++ learners and professional developers. Dive in!",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=575017",
        "categories": [
          "digest",
          "jetbrains-academy",
          "newsletter"
        ],
        "isoDate": "2025-06-13T14:26:54.000Z"
      },
      {
        "creator": "Anna Ruban",
        "title": "JetBrains GameDev Days 2025 – Call for Speakers",
        "link": "https://blog.jetbrains.com/dotnet/2025/06/13/jetbrains-gamedev-days-2025-call-for-speakers/",
        "pubDate": "Fri, 13 Jun 2025 09:48:43 +0000",
        "content:encodedSnippet": "JetBrains GameDev Day is back! Join us online on October 21, 2025, for a day dedicated to all things game development. We’re looking for speakers who are eager to share their knowledge, experience, tools, or creative approaches across the gamedev community.\nWhat is GameDev Day?\nGameDev Day is a free, live, online event hosted by JetBrains and shaped by the community. Talks are presented by developers from around the world who care deeply about their craft, from engine internals and CI/CD pipelines to debugging tips to game architecture, and everything in between.\nLast year, thousands of developers tuned in to hear community-driven, deeply practical sessions. This year, we’re keeping the same spirit. The event will be a single-day online experience, packed with fresh voices, practical tips, and deep dives into the topics that matter to game developers. Whether you’re working with Unity, Unreal, Godot, or your own game engine, we want to hear from you.\nSubmit a talk\n                                                    \nWhat kind of talks are we looking for?\nWe welcome topics that resonate with the wider gamedev community. These could include, but aren’t limited to:\nEngine-focused workflows and optimizations (Unity, Unreal, Godot, custom engines)\nPerformance optimization, memory management, debugging workflows\nGame architecture: balancing clean code with performance\nCI/CD pipelines, build automation, testing from unit to playtests\nArchitecture decisions, dev tools, or open-source libraries\nCloud-based workflows in gamedev\nLanguage features in C++, C#\nWe’re especially happy to see talks that showcase how JetBrains tools support your work, but that’s entirely optional. If you’ve got a story, idea, or experience that others can learn from, we’d love to hear about it.\nTalk format\nAll talks will be presented live and in English, with a length of 30, 45, or 60 minutes, followed by a short Q&A. We’ll work with you to find a time slot that fits your time zone, and we’re happy to support you with dry runs and feedback if needed.\nEvery session will be streamed and recorded, with videos published on our YouTube channel and promoted across our newsletters, blogs, and social media.\nAs a speaker, you’ll also receive a complimentary 1-year JetBrains All Products Pack and promotion of your personal blog, project, or course (if you’d like to share one).\nOne more thing\nThis year, we’re also supporting small, self-organized local meetups on the same day around the world. If you’re interested in bringing local devs together to co-watch the stream, stay tuned – we’ll be sharing more on that soon.\nReady to submit?\nWe’d love to hear what you’ve been working on, struggling with, or thinking deeply about. If you have something to share, head over to the submission form and send us your proposal. The Call for Speakers will remain open until July 15, 2025.\nSubmit a talk\n                                                    \nNot sure if your talk idea is a good fit? Drop us a line at matt.ellis@jetbrains.com and we’ll help shape it with you.\nMore information is available on our Call for Speakers page. Please make sure you read and adhere to the Code of Conduct prior to submitting.\nWe’re looking forward to your talk submissions!",
        "dc:creator": "Anna Ruban",
        "content": "JetBrains GameDev Day is back! Join us online on October 21, 2025, for a day dedicated to all things game development. We’re looking for speakers who are eager to share their knowledge, experience, tools, or creative approaches across the gamedev community. What is GameDev Day? GameDev Day is a free, live, online event hosted by [&#8230;]",
        "contentSnippet": "JetBrains GameDev Day is back! Join us online on October 21, 2025, for a day dedicated to all things game development. We’re looking for speakers who are eager to share their knowledge, experience, tools, or creative approaches across the gamedev community. What is GameDev Day? GameDev Day is a free, live, online event hosted by […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=575127",
        "categories": [
          "net-tools",
          "events",
          "rider",
          "teamcity-2"
        ],
        "isoDate": "2025-06-13T09:48:43.000Z"
      },
      {
        "creator": "Aleksandra Aganezova",
        "title": "Livestream: Building an MCP Server",
        "link": "https://blog.jetbrains.com/webstorm/2025/06/livestream-building-an-mcp-server/",
        "pubDate": "Thu, 12 Jun 2025 13:53:02 +0000",
        "content:encodedSnippet": "Join us on Tuesday, June 24, at 10 am EDT / 4 pm CEST (check other timezones) for our free livestream, Live Coding: Building an MCP Server.\n\n\n\n\nIn this livestream, we’ll team up with Max Kless, a senior engineer at Nx, to build a Model Context Protocol (MCP) server from scratch and seamlessly integrate it with JetBrains IDEs. Watch to learn how easy it is to build a tool that enhances AI model interaction within development environments, making advanced language models more accessible and useful for everyday coding tasks.\nRegister!\n                                                    \nHave questions? Bring them along – we’ll be answering them live. Looking forward to seeing you there!\nThe WebStorm team",
        "dc:creator": "Aleksandra Aganezova",
        "content": "Join us on Tuesday, June 24, at 10 am EDT / 4 pm CEST (check other timezones) for our free livestream, Live Coding: Building an MCP Server. In this livestream, we’ll team up with Max Kless, a senior engineer at Nx, to build a Model Context Protocol (MCP) server from scratch and seamlessly integrate it [&#8230;]",
        "contentSnippet": "Join us on Tuesday, June 24, at 10 am EDT / 4 pm CEST (check other timezones) for our free livestream, Live Coding: Building an MCP Server. In this livestream, we’ll team up with Max Kless, a senior engineer at Nx, to build a Model Context Protocol (MCP) server from scratch and seamlessly integrate it […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=574907",
        "categories": [
          "livestreams",
          "learn"
        ],
        "isoDate": "2025-06-12T13:53:02.000Z"
      },
      {
        "creator": "Ilia Afanasiev",
        "title": "Rust vs Go: Which one to choose in 2025",
        "link": "https://blog.jetbrains.com/rust/2025/06/12/rust-vs-go/",
        "pubDate": "Thu, 12 Jun 2025 13:16:42 +0000",
        "content:encodedSnippet": "The programming landscape continues to evolve, bringing forward languages like Rust and Go that not only challenge traditional paradigms but also cater to the sophisticated needs of modern computing. Both have carved significant niches for themselves, celebrated for their efficient handling of system-level operations and concurrency.\n\n\n\n\nRecent findings from the State of Developer Ecosystem Report 2024 highlight the dynamic growth and adoption rates of these languages. Rust celebrated a remarkable milestone by setting a usage record among the year’s most popular languages and boasted a user base of approximately 2.27 million developers, with 709,000 using it as their primary language. Meanwhile, Go’s user base remains robust and steady, with its simplicity and concurrency features attracting consistent interest. Notably, about one in six Go users is contemplating a shift toward Rust.\n\n\n\n\nThe choice between Rust and Go is pivotal and should be made with a thorough understanding of each language’s strengths and suitability to project requirements – whether it concerns performance, ease of use, or concurrent programming. In this article, we aim to equip you with the essential insights to help you make an informed decision between Rust and Go in 2025.\nRust overview\nRust development history\nRust was initially conceived by Graydon Hoare in 2006 as a side project. Officially sponsored by Mozilla Research in 2009, Rust was designed to create a safer, concurrent, and practical language that could rival C++ in terms of performance while ensuring higher security and thread safety. It underwent numerous iterations and improvements, with the first stable release, Rust 1.0, launched in May 2015. The language has been developed with contributions from a dedicated and vibrant open-source community, continually evolving with robust compiler improvements and features aimed at ensuring safety and efficiency.\nRust core philosophy\nThe core philosophy behind Rust is to provide memory safety without using garbage collection and to support concurrency without data races. It achieves these through ‘ownership’ and ‘borrowing’ concepts, which are enforced at compile-time by the Rust compiler. This strict enforcement of memory safety rules ensures that Rust programs are free of null pointer dereferences, dangling pointers, and buffer overflows, which are common vulnerabilities in system-level programming languages like C and C++. Additionally, Rust emphasizes zero-cost abstractions, iterator chains, and type inference, which allows high-level programming without sacrificing performance.\nPopular Rust use cases\nRust’s unique features make it particularly suitable for several crucial fields:\nSystems programming: Rust is popularly used for writing operating systems, embedded systems, and other foundational software where close control of hardware and system resources is crucial. Its ability to ensure memory safety and concurrency makes it an excellent choice for developing reliable and high-performance system-level software.\nInternet of Things (IoT): In IoT, devices often operate under resource constraints and require high-security measures. Rust’s efficient memory use and robustness help in building secure, fast, and reliable IoT applications.\nWebAssembly: Given its performance traits, Rust is also becoming a favored option for targeting WebAssembly, especially for web applications demanding high-speed performance beyond what traditional JavaScript can offer. This use-case is expanding as the web continues to evolve into a platform for more complex and performance-critical applications.\nBlockchain development: The demands for security and concurrency in blockchain development have also seen Rust being adopted here, where guaranteed memory safety and efficient execution are paramount.\nCloud Infrastructure: Rust is increasingly popular for developing cloud infrastructure across major cloud providers like AWS, Azure, and GCP. Its memory safety features and concurrency support make it ideal for building high-performance, secure cloud services that can scale efficiently and handle heavy workloads.\nNetwork Programming: Rust is also favored for network programming applications owing to its performance and reliable concurrency model. It’s used to build network utilities and systems that require high-speed data processing and transfer with minimal latency, benefiting from Rust’s efficiency and robust error handling.\nCommand-line Interfaces (CLIs): Rust is becoming a preferred choice for creating command-line interfaces due to its compilation to efficient binary code, which makes CLI tools fast and dependable. Developers value Rust for building CLI applications that require performance, precise error control, and support across multiple platforms.\n\n\n\n\nGo overview\nGo origins and development history\nGo, also known as Golang, was designed by Robert Griesemer, Rob Pike, and Ken Thompson at Google, and officially released in 2009. The driving force behind Go’s creation was addressing the scaling issues associated with software development at Google, which included slow build times, unwieldy codebases, and difficulties in managing dependencies while maintaining performance across large-scale distributed systems.\nGo was designed to combine the speed and ease of use of dynamically typed languages like Python with the performance and security advantages of statically typed languages like C++. Over the years, it has evolved with an emphasis on simplicity and efficiency, incorporating robust standard libraries and features that cater to concurrent processing and networking.\nGo core philosophy\nThe core philosophy of Go revolves around simplicity, efficiency, and readability. It incorporates a minimalistic syntax with only a small number of keywords, making the code easy to write and read. Go’s design excludes many features of modern OOP languages like type inheritance and generics (although generics have been introduced in recent versions), which purists argue can lead to complex and hard-to-maintain code. A significant feature of Go is its built-in support for concurrent programming, embodied in goroutines (lightweight threads managed by the Go runtime) and channels (which help in managing goroutines). This built-in concurrency model enables developers to easily write programs that get the most out of multicore and networked machines, enhancing Go’s utility in back-end and server-side applications.\nPopular Go use cases\nGo’s simplicity and powerful concurrency tools have led to its widespread adoption across several key domains:\nCloud infrastructure: Go’s efficient performance characteristics and robust standard library make it an ideal choice for building cloud services and infrastructure. Companies like Google, Dropbox, and Docker use Go to power large portions of their cloud computing solutions, benefiting from its easy maintenance and efficient scalability.\nWeb servers and API services: Go is extensively used in developing web servers and RESTful services due to its strong HTTP support and efficient concurrent processing capabilities. Its standard library includes powerful tools for building networked services, which makes Go a preferred choice for backend development.\nNetwork programming: The simplicity in handling concurrency and the rich set of networking libraries make Go a strong candidate for developing network tools and programs that require high performance and scalability, such as database brokers, message queues, and more.\nDevOps tools: Due to its simplicity and fast execution, Go is commonly chosen for creating tools used in DevOps practices, such as Kubernetes and Terraform. These tools manage containerized applications and orchestrate complex cloud environments, benefiting from Go’s efficiency and ease of deployment.\nCommand-line Interfaces (CLIs): Go’s ability to compile into a single binary across multiple platforms makes it an excellent choice for developing command-line tools that can be easily distributed and used across different operating systems without additional dependencies.\n\n\n\n\nRust vs Go: Performance comparison\nWhen choosing a programming language for a project, understanding how each language performs under different scenarios can drastically impact the efficiency and success of the application. Below, we explore the performance nuances of Rust and Go using benchmark data and real-world examples, discussing specific trade-offs to help guide decisions based on project requirements such as system-level applications versus web development.\nRust’s Low-level memory management:\nRust provides control over memory allocation without a garbage collector, which means it can operate closer to the hardware and manipulate memory with high precision. This is beneficial for systems programming where low latency and high throughput are crucial. For instance, a benchmark by benchmarks game shows that Rust implementations tend to have lower memory use and are often faster in computation-heavy tasks compared to Go.\nFor example, Servo, a high-performance browser engine developed by Mozilla, leverages Rust’s ability to manage memory efficiently to improve parallelism and ensure safety, significantly enhancing browsing speed.\nSpeed and efficiency of Rust in systems programming:\nRust’s zero-cost abstractions mean that abstractions cost nothing in terms of runtime performance. This makes Rust especially suitable for building performance-critical software such as game engines or simulation software where deterministic performance is key. For example, Veloren, an open-world game, utilizes Rust’s capability to handle complex calculations and graphics rendering efficiently without compromising on speed.\nTrade-offs: While Rust provides superior control and performance efficiency in system-level programming, its steep learning curve and strict compilation requirements can slow down development speed compared to Go, especially in projects where rapid development and iteration are crucial.\nGo’s garbage collection impact\nGo’s garbage collector is designed to maximize efficiency and minimize latency, providing a balance between performance and developer convenience. This is particularly visible in web environments where Go manages memory efficiently across thousands of lightweight goroutines. According to a TechEmpower benchmark, Go applications perform impressively well in web frameworks and platforms, often outperforming other compiled languages in concurrent access tests.\nFor example, Docker, a popular containerization platform, utilizes Go primarily due to its simplicity and the efficiency of its concurrency model, enabling it to manage thousands of microservices efficiently.\nStrengths in Go’s concurrent programming\nGo’s built-in support for concurrency allows developers to easily implement scalable server-side applications. Its simplicity in managing multiple threads of execution without the overhead typical of more verbose threading models is a significant advantage in web services and cloud applications.\nTrade-offs: Although Go provides substantial ease of use and satisfactory performance for web servers and simpler backend services, it may not reach the performance extremities required in low-level system programming or where granular control over memory and processing is essential, areas where Rust excels.\nRust vs Go: Ease of use\nBoth Rust and Go have distinct learning curves and ecosystems tailored to their respective strengths and philosophies. Choosing between them should consider the proficiency of everyone in a team and the specific needs of the project. Let’s explore the differences between Rust and Go in terms of how user-friendly and accessible each language is, considering their syntax, core philosophies, and the tools that support their ecosystems.\nRust’s steep learning curve\nRust is known for its stringent compiler and its unique approach to memory management through ownership and borrowing concepts. While these features contribute significantly to Rust’s performance and safety guarantees, they also steepen the learning curve. New programmers might find Rust challenging as they need to adhere strictly to its rules to even compile the code, a stark contrast to more lenient languages. However, once mastered, these same features make Rust exceedingly reliable and secure, particularly in concurrent and system-level programming contexts. \nFor newcomers to Rust or those looking to deepen their understanding, helpful resources are available in our new blog post on How to Learn Rust in 2024.\nChallenges and benefits of learning Rust\nOne of the main challenges of learning Rust is grappling with its borrow checker—a mechanism that ensures references do not outlive the data they refer to. While initially perplexing, mastering this feature teaches developers rigorous memory management, significantly reducing runtime errors and security vulnerabilities.\nThe benefits of enduring Rust’s steep learning curve manifest as high performance, memory safety, and concurrency without fear of data races. Furthermore, the robust tool ecosystem, including the RustRover IDE, enhances the learning and development process. RustRover, for instance, assists with code completion, error handling, and debugging, which simplifies some of the complexities involved in Rust development.\nTry RustRover\n                                                    \nGo’s beginner-friendly learning curve\nGo boasts simplicity in its design, advocating for minimalistic syntax and a small set of keywords. This design philosophy not only makes Go easy to learn but also aims to maintain readability and maintainability of code, making it an ideal choice for beginners. The absence of complicated language constructs like generics (until recently) and the simplified approach to object-oriented programming make Go an easy language for newcomers to grasp.\nPopularity of Go among startups and tech giants\nGo’s simplicity combined with its powerful built-in concurrency model has made it incredibly popular among startups and large corporations like Google, Uber, and Twitch. These companies benefit from Go’s fast compilation and execution that scales efficiently with multicore processors and large software systems. The language’s design aligns well with modern software development requirements such as microservices architectures and cloud services.\nFurthermore, the development experience in Go is boosted by tools like GoLand IDE, which provides a rich set of features designed to improve productivity and simplify code management. GoLand offers excellent support for Go’s concurrency patterns, integrated testing, and seamless editing tools that help developers navigate and write Go code more efficiently.\nTry GoLand\n                                                    \nRust vs Go: Concurrency and multithreading\nBoth Rust and Go provide robust solutions for handling concurrency, each through distinct approaches and constructs. As multithreading becomes increasingly crucial in modern applications, understanding how each language facilitates concurrent operations, alongside their respective strengths and weaknesses, is vital for developers.\nRust’s ownership model and safety in multithreading\nOwnership and memory safety\nRust’s ownership model is a foundational aspect of its approach to memory safety and concurrency. This model divides data into distinct ownerships and borrowing, ensuring that only one function or thread can own a particular piece of data at a time. This strict model prevents data races at compile time—a common source of bugs in concurrent programming.\nStrengths: The primary strength of this model is its ability to provide guaranteed thread safety without needing a garbage collector. This can result in performance improvements, as the overhead of garbage collection is eliminated. Rust’s compile-time checks enforce that any borrow of data maintains synchronization with the owner’s lifetime, preventing hanging pointers and other common concurrency errors.\nWeaknesses: The strictness of the ownership rules can also be a limiting factor, as it imposes a steeper learning curve and can complicate the design of certain types of concurrent architectures where shared mutable state is necessary.\nPractical examples of using Rust in high-performance applications\nRust is extensively used in scenarios where performance and safety are critical. Examples of real-world usage:\nCloudflare: As a leader in internet infrastructure, Cloudflare utilizes Rust to develop several of their system-critical components that require high performance and reliability. Rust’s safety and concurrency features are crucial for Cloudflare’s need to process significant amounts of data with minimal latency, helping ensure robust, secure delivery of web content. More about their use of Rust can be explored through Cloudflare’s dedicated discussions on their blog.\nServo Engine: Developed by Mozilla, the Servo engine is an experimental browser engine designed to take full advantage of Rust’s concurrency capabilities. It uses fine-grained parallelism to improve the performance of page loading and rendering tasks.\nripgrep: This is a line-oriented search tool that recursively searches the current directory for a regex pattern. By leveraging Rust’s concurrency features, ripgrep outperforms similar tools by efficiently parallelizing the search process across available CPU cores.\nGoroutines and ease of concurrent programming in Go\nGo introduces goroutines as a core part of its language design, which are functions capable of running concurrently with others. A goroutine is a lightweight thread managed by the Go runtime. The use of goroutines simplifies the implementation of concurrent and parallel systems.\nStrengths: Goroutines are inexpensive to create and have little overhead, with each taking up only a few kilobytes in stack space. This allows the creation of thousands of goroutines if needed. The Go runtime handles the scheduling and coordination, simplifying the model for the developer.\nWeaknesses: While the simplicity of goroutines is beneficial, it can also lead to challenges, particularly in managing synchronization and shared state. Without careful design, concurrent programming in Go can result in race conditions and deadlock issues as applications scale.\nCommon Go use cases in web services and cloud-based applications\nGo’s concurrency features make it particularly well-suited for building scalable web services and cloud applications. Examples include:\nKubernetes: An open-source platform designed to automate deploying, scaling, and operating application containers, Kubernetes uses Go to handle large-scale, high-concurrency services.\nDocker: Docker utilizes Go for building and running containerized applications. Go’s simplicity and built-in support for concurrent operations enable Docker to manage services efficiently.\nBoth Rust and Go provide powerful tools for building concurrent applications but do so in fundamentally different ways. Rust offers more stringent safety guarantees at the expense of a steeper learning curve, making it ideal for applications where safety is critical. Go offers a more straightforward approach to concurrency, making it better suited for applications that require rapid development and deployment with scalable performance. Understanding these differences should allow you to choose the right tool according to the specific demands and nature of your project.\nRust vs Go: Ecosystem and community support\nThe vitality of a programming language is often reflected by its ecosystem’s robustness and the vibrancy of its community. As Rust and Go continue to grow, both languages offer distinct advantages and challenges in terms of libraries, tools, and community engagement.\n\n\n\n\nMaturity of Rust libraries and tools\nRust’s ecosystem, though younger than Go’s, has rapidly matured with a strong focus on safety and performance. The availability of robust tools like Cargo, Rust’s package manager and build system, simplifies dependency management and compilation tasks. Cargo integrates seamlessly with crates.io, a large repository of community-contributed libraries, known as ‘crates’, that extend Rust’s capabilities.\nStrengths: Rust’s tooling is designed to enforce strict code safety standards, which is critical in systems where reliability and security are paramount. The language ecosystem also benefits from an active development community that prioritizes these attributes.\nWeaknesses: Despite significant growth, the Rust ecosystem is still evolving, and on occasion, developers might find the available libraries less comprehensive compared to those available in more mature ecosystems like Go’s. This can sometimes result in needing to develop custom solutions, which may increase project timelines and complexity.\nGrowth and support from Rust’s open-source community\nRust has cultivated a passionate and rapidly growing open-source community, which contributes not only to the development of the language itself but also to a broad spectrum of community-driven projects.\nStrengths: The community’s commitment is demonstrated through consistent improvements to the language, high-quality documentation, and the development of new tools and libraries. The annual Rust Survey and RustConf are indicators of the community’s robust engagement and dedication to evolving the language in response to user needs.\nWeaknesses: As the community is still expanding, some areas of the ecosystem might lack the same level of support or as many expert resources as those available in older, larger developer communities.\nGo’s rich standard library and tools\nGo’s standard library is widely praised for its comprehensiveness and effectiveness, providing well-designed packages for a variety of common tasks such as HTTP server implementation, cryptography, and data manipulation. This richness allows developers to achieve more with the standard library alone, reducing the reliance on external libraries.\nStrengths: The rich set of tools and a comprehensive standard library simplify many programming tasks, enhancing Go’s usability and speeding up the development process. Tools like GoLang’s native testing toolkit and benchmarking tools integrate seamlessly into the developer workflow.\nWeaknesses: While Go’s standard library covers a broad range of functionality, its approach can sometimes be too simplistic for complex applications, which may necessitate additional customization or external packages.\nIndustry adoption of Go\nGo has seen substantial industry adoption, with significant backing from tech giants such as Google, which designed the language. This corporate support not only validates the language’s capabilities but also ensures ongoing investment in its development.\nStrengths: High adoption rates in the tech industry, including by companies like Uber, Netflix, and Dropbox, contribute to a rich ecosystem of projects and third-party tools, fostering a reliable support network. This adoption speaks to its performance, scalability, and ease of use in production environments.\nWeaknesses: The popularity of Go in large-scale tech companies means there may sometimes be a bias towards solving problems at scale, which might not directly address the needs of smaller projects or teams.\nRust and Go in 2025\nBy 2025, both Rust and Go offer strong ecosystems supported by vibrant communities. Rust’s focus on safety and performance makes it ideal for applications where these factors are critical, while Go’s simplicity and rich set of libraries make it excellent for quickly developing scalable applications. The choice between Rust and Go should consider the specific technical needs of the project, the desired timeline for development, and the type of community and corporate support that will best enhance the project’s success. Each ecosystem presents compelling strengths and some limitations, making it essential to align language choice with project goals and team skills in 2025.",
        "dc:creator": "Ilia Afanasiev",
        "content": "The programming landscape continues to evolve, bringing forward languages like Rust and Go that not only challenge traditional paradigms but also cater to the sophisticated needs of modern computing. Both have carved significant niches for themselves, celebrated for their efficient handling of system-level operations and concurrency. Recent findings from the State of Developer Ecosystem Report [&#8230;]",
        "contentSnippet": "The programming landscape continues to evolve, bringing forward languages like Rust and Go that not only challenge traditional paradigms but also cater to the sophisticated needs of modern computing. Both have carved significant niches for themselves, celebrated for their efficient handling of system-level operations and concurrency. Recent findings from the State of Developer Ecosystem Report […]",
        "guid": "https://blog.jetbrains.com/?post_type=rust&p=574023",
        "categories": [
          "articles-2",
          "news"
        ],
        "isoDate": "2025-06-12T13:16:42.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "ReSharper and Rider 2025.1.3: Important Updates Released",
        "link": "https://blog.jetbrains.com/dotnet/2025/06/12/resharper-and-rider-2025-1-3-important-updates-released/",
        "pubDate": "Thu, 12 Jun 2025 13:01:21 +0000",
        "content:encodedSnippet": "A third set of updates for the 2025.1 versions of ReSharper and Rider has just been released. This release contains important bug-fixes as well as feature updates. \nLet’s take a look at what’s been improved.\nReSharper \nReSharper 2025.1.3 introduces support for SQL & NoSQL query languages\nYou can now edit and format SQL and NoSQL queries directly in ReSharper with smart features like code completion, inspections, and live templates. Supported dialects include MSSQL, PostgreSQL, MySQL, SQLite, MongoDB, Cassandra, and more.\n\n\n\n\nA 30-day trial with full access to all features is now available — no payment information required. \nLearn all about the new functionality from this blog post. \nDownload ReSharper 2025.1.3\n                                                    \nRider\nRider 2025.1.3 is out with the following updates:\nAI-powered features\nRider now supports .aiignore files, helping you manage which files are included in the AI Assistant’s scope when working on your solution. [RIDER-121794]\nSemantic search is now enabled for both Search Everywhere and the AI Assistant, making it easier to find classes, methods, parameters, and other code elements even when your query differs in case, punctuation, or formatting. [LLM-2266] \n\n\n\n\nCrucial fixes:\nStep over and Step into actions now work as expected when debugging ASP.NET projects with Docker Compose. [RIDER-120783]\nSticky selection now works correctly with all editor actions, including arrow key navigation in .cs files. [RIDER-125224]\nLocal edits across multiple files are now reliably preserved, even during formatting and undo/redo operations. [RIDER-124865]\nFiles excluded from indexing above the solution folder are now correctly omitted from search results. [RIDER-123858]\nEditing C++ code during debugging is now fully supported again when the Allow editing in debug mode option is enabled. [RIDER-125020]\nC++ run/debug configurations once again reliably detect projects. [RIDER-124829]  \n\n\n\n\nFor the full list of resolved issues, please refer to our issue tracker.\nDownload Rider 2025.1.3\n                                                    \nYou can download the latest builds from our website (Rider, ReSharper) or via the Toolbox App. You can also update Rider as a snap.",
        "dc:creator": "Sasha Ivanova",
        "content": "A third set of updates for the 2025.1 versions of ReSharper and Rider has just been released.&#160;This release contains important bug-fixes as well as feature updates. Let’s take a look at what’s been improved. ReSharper&#160; ReSharper 2025.1.3 introduces support for SQL &#38; NoSQL query languages You can now edit and format SQL and NoSQL queries [&#8230;]",
        "contentSnippet": "A third set of updates for the 2025.1 versions of ReSharper and Rider has just been released. This release contains important bug-fixes as well as feature updates. Let’s take a look at what’s been improved. ReSharper  ReSharper 2025.1.3 introduces support for SQL & NoSQL query languages You can now edit and format SQL and NoSQL queries […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=573009",
        "categories": [
          "net-tools",
          "minor-updates",
          "news",
          "releases",
          "resharper",
          "rider",
          "update"
        ],
        "isoDate": "2025-06-12T13:01:21.000Z"
      },
      {
        "creator": "Ekaterina Valeeva",
        "title": "Run HTTP Requests in Android Studio",
        "link": "https://blog.jetbrains.com/blog/2025/06/12/run-http-requests-in-android-studio/",
        "pubDate": "Thu, 12 Jun 2025 08:55:56 +0000",
        "content:encodedSnippet": "We are happy to announce that our HTTP Client plugin is now available in Android Studio!\nHTTP Client is a powerful tool for making HTTP, gRPC, GraphQL, and WebSocket requests. Its text-based interface offers seamless integration with the editor, along with extensive coding assistance including highlighting, code completion, refactorings, and inline documentation.\nWhile it was previously bundled with paid IDE subscriptions only, this powerful plugin is now free for Android Studio users – it just requires creating a JetBrains Account. Now you can test server API calls right from the IDE before implementing them in the application. \nThe HTTP Client plugin is available for Android Studio 2024.3.2 Meerkat from JetBrains Marketplace – either download it from the web or via the Android Studio Settings | Plugins, Marketplace tab.\nGenerate and run HTTP requests right from your code: Retrofit, OkHttp, and Ktor!\nWhenever you have a URL in your app source code, you can launch an HTTP request right away from the URL inlay or gutter indicator. \nThe generated request opens in the right split where you can run it, modify it, or add pre- and post-request scripts, all without switching away from your code and losing context. The request result will be shown in a dedicated tool window.\n\n\n\n\nConfigure environments\nEnvironment files allow you to define and store environment variables and configurations for HTTP requests. You can switch between different environments (for example – dev, prod, and test), apply environment-specific values to requests, and reuse previously defined configurations. \n\n\n\n\nRun integration tests and manage HTTP requests with scripts\nHTTP Client supports complex scenarios written in JavaScript. Pre-scripts allow you to generate data for requests. Response handler scripts run after receiving responses, allowing you to pass data to subsequent requests. With these scripts, you can also set up various tests and run them in the corresponding tab of the Services tool window.\n\n\n\n\nImport curl commands, convert Postman collections\ncurl commands copied to the clipboard can automatically be converted when pasted to an HTTP file or via the dedicated import action.\n\n\n\n\nIf you already have a Postman collection saved as a JSON file, it can also be imported and converted, so you can run requests from it in the IDE.\n\n\n\n\nWork with OpenAPI / Swagger specifications\nWith the OpenAPI Specifications plugin, you can:\nCreate HTTP requests directly from OpenAPI files.\nComplete URL and request bodies in HTTP requests based on the API specification.\n\n\n\n\nFor more details about HTTP request syntax and available features, please refer to the official documentation. There are also built-in examples demonstrating different scenarios using the test environment that you might want to try.\nHappy coding!",
        "dc:creator": "Ekaterina Valeeva",
        "content": "We are happy to announce that our HTTP Client plugin is now available in Android Studio! HTTP Client is a powerful tool for making HTTP, gRPC, GraphQL, and WebSocket requests. Its text-based interface offers seamless integration with the editor, along with extensive coding assistance including highlighting, code completion, refactorings, and inline documentation. While it was [&#8230;]",
        "contentSnippet": "We are happy to announce that our HTTP Client plugin is now available in Android Studio! HTTP Client is a powerful tool for making HTTP, gRPC, GraphQL, and WebSocket requests. Its text-based interface offers seamless integration with the editor, along with extensive coding assistance including highlighting, code completion, refactorings, and inline documentation. While it was […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=574828",
        "categories": [
          "ecosystem",
          "news",
          "android-studio"
        ],
        "isoDate": "2025-06-12T08:55:56.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "Migrate from Cursor to IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/06/migrate-cursor-to-intellij-idea/",
        "pubDate": "Thu, 12 Jun 2025 07:33:07 +0000",
        "content:encodedSnippet": "If you’re a developer working with Cursor, exploring alternatives for your growing project, and are curious to see what IntelliJ IDEA has to offer, this article is for you.\nWhile Cursor emphasizes a minimalistic setup approach, IntelliJ IDEA strikes a balance between out-of-the-box functionality and powerful customization, enabling developers to effortlessly scale from small projects to enterprise-grade applications.\nReady for an upgrade? Let’s explore how IntelliJ IDEA simplifies the migration process and why it’s worth the switch.\nDownload IntelliJ IDEA\nWhy migrate to IntelliJ IDEA\nBoost productivity with AI-powered tools\nCursor has gained popularity for its AI-centric design, leveraging third-party GPT models. IntelliJ IDEA takes AI integration to the next level by embedding its native AI capabilities directly into the IDE’s toolset.\nIntelliJ IDEA’s powerful AI Assistant provides context-aware code completion, helps you understand complex code and generate improvements, writes boilerplate code based on contextual understanding, and does much more – all in-editor or via an AI Chat.\n\n\n\n\nJunie takes things further by performing autonomous coding tasks. Unlike traditional code suggestions, Junie automates repetitive development tasks, such as writing unit tests, refactoring blocks of code, or even generating boilerplate configurations for frameworks like Spring.\n\n\n\n\nAn out-of-the-box experience with preconfigured environments\nCursor uses a blank canvas philosophy (without preconfigured environments), leaving developers to manually search and set up everything as they go, including libraries, frameworks, testing, and debugging tools.IntelliJ IDEA, on the other hand, provides a more guided experience. Its Project Wizard simplifies the setup process by configuring the environment based on the developer’s tasks and requirements. From JDKs to framework-specific libraries installed right within the IDE, it allows you to jump straight to coding rather than spending time on manual configuration.\n\n\n\n\nIntelliJ IDEA is ready to use right from the first launch. It offers a full suite of built-in tools and integrations designed to support all aspects of development and eliminates the need to search for and install external tools and plugins, like Database tools, Profiler, the HTTP Client for API testing, Version Control integration with Git, and many more.\n\n\n\n\nBeginner-friendly and professional development-ready\nCursor, with its AI-driven code completions and explanations, can lower the learning curve for beginners, helping them avoid switching between the IDE and external documentation. \nThis might work well for small projects, rapid prototyping, or for developers just starting out. However, as projects grow in size and complexity, Cursor’s limited scalability and lack of built-in tools can stall professional workflows, requiring extensive manual setup and reliance on external plugins.\nIntelliJ IDEA is both beginner-friendly and equipped for enterprise-level development. With built-in tools, interactive courses, and AI Assistant, beginners can quickly get started without feeling overwhelmed. At the same time, its scalability, integrated tools, and support for enterprise frameworks make it a powerful option for professional developers working on larger, more complex projects.\nHow to migrate to IntelliJ IDEA\nImport settings in just a few clicks\nIntelliJ IDEA allows you to easily import your customized settings, including keymaps, UI themes, installed extensions, and even recent projects from Cursor. During your first launch, IntelliJ IDEA scans your environment for IDE configurations and gives you the option to import settings directly, ensuring you can get started quickly.\n\n\n\n\n\nFor detailed instructions, check out our migration guide for Cursor.\nRecreating Cursor workflows\nMigrating doesn’t mean giving up the workflows you’re already used to. IntelliJ IDEA offers equivalent but enhanced features that replicate the familiar functionalities of Cursor while unlocking even greater productivity in the IDE. Below are some tips to make the transition smoother.\nCommand palette\nSimilar to Cursor’s command palette, IntelliJ IDEA’s Search Everywhere (⇧⇧ | Shift+Shift) enables you to quickly search across classes, files, symbols, actions within your project and beyond – all in one place.\n\n\n\n\nSearch and replace\nIntelliJ IDEA provides intuitive Find and Replace dialogs that can work on a single file or across your entire project. You’ll find these under Edit | Find and Edit | Replace.\n\n\n\n\nDebug (and run) code with gutter icons\nJust like in Cursor, you can debug directly from the gutter in IntelliJ IDEA. But that’s not all – IntelliJ IDEA also lets you run code, tests, and configurations right from the same interface, giving you even more flexibility during your development process.\n\n\n\n\n\n\n\n\nWhether you’re just starting out and need a guided setup or you’re a professional developer working on large-scale applications, IntelliJ IDEA provides the tools, performance, and intelligence to support your development at every stage.\nIf you’re looking for an IDE that grows with you, IntelliJ IDEA is certainly worth the switch.\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "If you’re a developer working with Cursor, exploring alternatives for your growing project, and are curious to see what IntelliJ IDEA has to offer, this article is for you. While Cursor emphasizes a minimalistic setup approach, IntelliJ IDEA strikes a balance between out-of-the-box functionality and powerful customization, enabling developers to effortlessly scale from small projects [&#8230;]",
        "contentSnippet": "If you’re a developer working with Cursor, exploring alternatives for your growing project, and are curious to see what IntelliJ IDEA has to offer, this article is for you. While Cursor emphasizes a minimalistic setup approach, IntelliJ IDEA strikes a balance between out-of-the-box functionality and powerful customization, enabling developers to effortlessly scale from small projects […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=574594",
        "categories": [
          "news"
        ],
        "isoDate": "2025-06-12T07:33:07.000Z"
      },
      {
        "creator": "Conrad Schwellnus",
        "title": "Deploy JetBrains Mellum Your Way: Now Available via NVIDIA NIM",
        "link": "https://blog.jetbrains.com/ai/2025/06/deploy-jetbrains-mellum-your-way-now-available-via-nvidia-nim/",
        "pubDate": "Wed, 11 Jun 2025 11:15:00 +0000",
        "content:encodedSnippet": "Deploy Mellum as a production-grade LLM inside your own infrastructure – with NVIDIA.\nJetBrains Mellum – our open, focused LLM specialized on code completion – is now available to run as a containerized microservice on NVIDIA AI Factories. Using the new NVIDIA universal LLM NIM container, Mellum can be deployed in minutes on any NVIDIA-accelerated infrastructure, whether in the cloud, on-premises, or across hybrid environments.\nMellum is part of the early launch cohort of models that showcase coding capabilities on AI factories. We’re proud to be among the first teams contributing to this new enterprise ecosystem.\nBut wait – isn’t Mellum already in JetBrains IDEs and on Hugging Face?\nYes – and that’s not changing. Mellum is tightly integrated into our developer tools via JetBrains AI Assistant and is also available on Hugging Face. But some teams often have very different requirements, such as:\nDeployment on their own hardware, in environments they control\nIntegration into custom pipelines, CI/CD flows, observability platforms\nFine-tuning or customization for domain-specific use cases\nSecurity, compliance, and performance guarantees\n\n\n\n\n\nThat’s where NVIDIA Enterprise AI Factory validated design comes in – it’s a reference platform for building full-stack enterprise AI systems. Mellum, available via NVIDIA NIM, becomes a plug-and-play model block that can fit directly into those pipelines. In our testing, we wanted to ensure that, as the Mellum family grows, we are able to offer JetBrains models on a performant inference solution that is enterprise-ready.\nWhat are NVIDIA NIM microservices?\nNVIDIA NIM microservices  are part of NVIDIA AI Enterprise, and do something very straightforward but invaluable: wrap complex AI model infrastructure into simple, fast-deployable containers optimized for inference. With the new universal LLM NIM container designed to work with a broad range of open and specialized LLMs, Mellum can now be deployed securely on NVIDIA-accelerated computing – on-premises, in the cloud, or across hybrid environments.\nFrom a technical standpoint, it means Mellum is now available through a single container interface that supports major backends like NVIDIA TensorRT-LLM, vLLM, and SGLang. This helps teams run inference efficiently and predictably using open-source models they can inspect, adapt, and improve.\nWe’re particularly excited about how this ecosystem can help enterprise users evolve from basic chatbot integrations to deeply integrated AI assistants embedded across software engineering workflows. \nDo I still need JetBrains AI Assistant if Mellum runs on NIM?\nSome users ask:\n“Is the open-source Mellum (via NIM) the same as what’s in JetBrains AI Assistant?”\nNot exactly.\nThe open-source Mellum,now deployable via NIM, is great for custom, self-hosted use cases. But JetBrains AI Assistant uses enhanced proprietary versions of Mellum, with deeper IDE integration and a more polished developer experience.\nIn short:\nUse NIM and Mellum for flexible, custom deployment.\nUse AI Assistant for the best out-of-the-box experience inside JetBrains tools.\nTry it now\nMellum deployment is now one button away from you, so check it out here.",
        "dc:creator": "Conrad Schwellnus",
        "content": "Deploy Mellum as a production-grade LLM inside your own infrastructure – with NVIDIA. JetBrains Mellum – our open, focused LLM specialized on code completion – is now available to run as a containerized microservice on NVIDIA AI Factories. Using the new NVIDIA universal LLM NIM container, Mellum can be deployed in minutes on any NVIDIA-accelerated [&#8230;]",
        "contentSnippet": "Deploy Mellum as a production-grade LLM inside your own infrastructure – with NVIDIA. JetBrains Mellum – our open, focused LLM specialized on code completion – is now available to run as a containerized microservice on NVIDIA AI Factories. Using the new NVIDIA universal LLM NIM container, Mellum can be deployed in minutes on any NVIDIA-accelerated […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=574068",
        "categories": [
          "jetbrains-ai",
          "news",
          "partners",
          "ai",
          "mellum",
          "partnership"
        ],
        "isoDate": "2025-06-11T11:15:00.000Z"
      },
      {
        "creator": "Cheuk Ting Ho",
        "title": "Faster Python: Concurrency in async/await and threading",
        "link": "https://blog.jetbrains.com/pycharm/2025/06/concurrency-in-async-await-and-threading/",
        "pubDate": "Tue, 10 Jun 2025 11:57:58 +0000",
        "content:encodedSnippet": "If you have been coding with Python for a while, especially if you have been using frameworks and libraries such as Fast API and discord.py, then you have probably been using async/await or asyncio. You may have heard statements like “multithreading in Python isn’t real”, and you may also know about the famous (or infamous) GIL in Python. In light of the denial about multithreading in Python, you might be wondering what the difference between async/await and multithreading actually is – especially in Python programming. If so, this is the blog post for you!\nWhat is multithreading?\nIn programming, multithreading refers to the ability of a program to execute multiple sequential tasks (called threads) concurrently. These threads can run on a single processor core or across multiple cores. However, due to the limitation of the Global Interpreter Lock (GIL), multithreading in Python is only processed on a single core. The exception is nogil (also called thread-free) Python, which removes the GIL and will be covered in part 2 of this series. For this blog post, we will assume that the GIL is always present.\nWhat is concurrency?\nConcurrency in programming means that the computer is doing more than one thing at a time, or seems to be doing more than one thing at a time, even if the different tasks are executed on a single processor. By managing resources and interactions between different parts of a program, different tasks are allowed to make progress independently and in overlapping time intervals.\nBoth asyncio and threading appear concurrent in Python\nLoosely speaking, both the asyncio and threading Python libraries enable the appearance of concurrency. However, your CPUs are not doing multiple things at the exact same time. It just seems like they are.\nImagine you are hosting a multi-course dinner for some guests. Some of the dishes take time to cook, for example, the pie that needs to be baked in the oven or the soup simmering on the stove. While we are waiting for those to cook, we do not just stand around and wait. We will do something else in the meantime. This is similar to concurrency in Python. Sometimes your Python process is waiting for something to get done. For example, some input/output (I/O) processes are being handled by the operating system, and in this time the Python process is just waiting. We can then use async to let another Python process run while it waits.\n\n\n\n\nThe difference is who is in charge\nIf both asyncio and threading appear concurrent, what is the difference between them? Well, the main difference is a matter of who is in charge of which process is running and when. For async/await, the approach is sometimes called cooperative concurrency. A coroutine or future gives up its control to another coroutine or future to let others have a go. On the other hand, in threading, the operating system’s manager will be in control of which process is running.\nCooperative concurrency is like a meeting with a microphone being passed around for people to speak. Whoever has the microphone can talk, and when they are done or have nothing else to say, they will pass the microphone to the next person. In contrast, multithreading is a meeting where there is a chairperson who will determine who has the floor at any given time. \nWriting concurrent code in Python\nLet’s have a look at how concurrency works in Python by writing some example code. We will create a fast food restaurant simulation using both asyncio and threading.\nHow async/await works in Python\nThe asyncio package was introduced in Python 3.4, while the async and await keywords were introduced in Python 3.5. One of the main things that make async/await possible is the use of coroutines. Coroutines in Python are actually generators repurposed to be able to pause and pass back to the main function.\nNow, imagine a burger restaurant where only one staff member is working. The orders are prepared according to a first-in-first-out queue, and no async operations can be performed:\nimport time\n\n\ndef make_burger(order_num):\n    print(f\"Preparing burger #{order_num}...\")\n    time.sleep(5) # time for making the burger\n    print(f\"Burger made #{order_num}\")\n\n\ndef main():\n    for i in range(3):\n        make_burger(i)\n\n\nif __name__ == \"__main__\":\n    s = time.perf_counter()\n    main()\n    elapsed = time.perf_counter() - s\n    print(f\"Orders completed in {elapsed:0.2f} seconds.\")\n\n\n\n\nThis will take a while to finish:\nPreparing burger #0...\n\nBurger made #0\n\nPreparing burger #1...\n\nBurger made #1\n\nPreparing burger #2...\n\nBurger made #2\n\nOrders completed in 15.01 seconds.\nNow, imagine the restaurant brings in more staff, so that it can perform work concurrently:\nimport asyncio\n\nimport time\n\nasync def make_burger(order_num):\n\n    print(f\"Preparing burger #{order_num}...\")\n\n    await asyncio.sleep(5) # time for making the burger\n\n    print(f\"Burger made #{order_num}\")\n\nasync def main():\n\n    order_queue = []\n\n    for i in range(3):\n\n        order_queue.append(make_burger(i))\n\n    await asyncio.gather(*(order_queue))\n\nif __name__ == \"__main__\":\n\n    s = time.perf_counter()\n\n    asyncio.run(main())\n\n    elapsed = time.perf_counter() - s\n\n    print(f\"Orders completed in {elapsed:0.2f} seconds.\")\nWe see the difference between the two:\nPreparing burger #0...\n\nPreparing burger #1...\n\nPreparing burger #2...\n\nBurger made #0\n\nBurger made #1\n\nBurger made #2\n\nOrders completed in 5.00 seconds.\nUsing the functions provided by asyncio, like run and gather, and the keywords async and await, we have created coroutines that can make burgers concurrently.\nNow, let’s take a step further and create a more complicated simulation. Imagine we only have two workers, and we can only make two burgers at a time.\nimport asyncio\n\nimport time\n\norder_queue = asyncio.Queue()\n\ndef take_order():\n\n  for i in range(3):\n\n      order_queue.put_nowait(make_burger(i))\n\nasync def make_burger(order_num):\n\n  print(f\"Preparing burger #{order_num}...\")\n\n  await asyncio.sleep(5)  # time for making the burger\n\n  print(f\"Burger made #{order_num}\")\n\nclass Staff:\n\n  def __init__(self, name):\n\n      self.name = name\n\n  async def working(self):\n\n      while order_queue.qsize() > 0:\n\n          print(f\"{self.name} is working...\")\n\n          task = await order_queue.get()\n\n          await task\n\n          print(f\"{self.name} finished a task...\")\n\nasync def main():\n\n  staff1 = Staff(name=\"John\")\n\n  staff2 = Staff(name=\"Jane\")\n\n  take_order()\n\n  await asyncio.gather(staff1.working(), staff2.working())\n\nif __name__ == \"__main__\":\n\n  s = time.perf_counter()\n\n  asyncio.run(main())\n\n  elapsed = time.perf_counter() - s\n\n  print(f\"Orders completed in {elapsed:0.2f} seconds.\")\nHere we will use a queue to hold the tasks, and the staff will pick them up.\nJohn is working...\n\nPreparing burger #0...\n\nJane is working...\n\nPreparing burger #1...\n\nBurger made #0\n\nJohn finished a task...\n\nJohn is working...\n\nPreparing burger #2...\n\nBurger made #1\n\nJane finished a task...\n\nBurger made #2\n\nJohn finished a task...\n\nOrders completed in 10.00 seconds.\nIn this example, we use asyncio.Queue to store the tasks, but it will be more useful if we have multiple types of tasks, as shown in the following example.\nimport asyncio\n\nimport time\n\ntask_queue = asyncio.Queue()\n\norder_num = 0\n\nasync def take_order():\n\n   global order_num\n\n   order_num += 1\n\n   print(f\"Order burger and fries for order #{order_num:04d}:\")\n\n   burger_num = input(\"Number of burgers:\")\n\n   for i in range(int(burger_num)):\n\n       await task_queue.put(make_burger(f\"{order_num:04d}-burger{i:02d}\"))\n\n   fries_num = input(\"Number of fries:\")\n\n   for i in range(int(fries_num)):\n\n       await task_queue.put(make_fries(f\"{order_num:04d}-fries{i:02d}\"))\n\n   print(f\"Order #{order_num:04d} queued.\")\n\n   await task_queue.put(take_order())\n\nasync def make_burger(order_num):\n\n   print(f\"Preparing burger #{order_num}...\")\n\n   await asyncio.sleep(5)  # time for making the burger\n\n   print(f\"Burger made #{order_num}\")\n\nasync def make_fries(order_num):\n\n   print(f\"Preparing fries #{order_num}...\")\n\n   await asyncio.sleep(2)  # time for making fries\n\n   print(f\"Fries made #{order_num}\")\n\nclass Staff:\n\n   def __init__(self, name):\n\n       self.name = name\n\n   async def working(self):\n\n       while True:\n\n           if task_queue.qsize() > 0:\n\n               print(f\"{self.name} is working...\")\n\n               task = await task_queue.get()\n\n               await task\n\n               print(f\"{self.name} finish task...\")\n\n           else:\n\n               await asyncio.sleep(1) #rest\n\nasync def main():\n\n   task_queue.put_nowait(take_order())\n\n   staff1 = Staff(name=\"John\")\n\n   staff2 = Staff(name=\"Jane\")\n\n   await asyncio.gather(staff1.working(), staff2.working())\n\nif __name__ == \"__main__\":\n\n   s = time.perf_counter()\n\n   asyncio.run(main())\n\n   elapsed = time.perf_counter() - s\n\n   print(f\"Orders completed in {elapsed:0.2f} seconds.\")\nIn this example, there are multiple tasks, including making fries, which takes less time, and taking orders, which involves getting input from the user. \nNotice that the program stops waiting for the user’s input, and even the other staff who are not taking the order stop working in the background. This is because the input function is not async and therefore is not awaited. Remember, control in async code is only released when it is awaited. To fix that, we can replace:\ninput(\"Number of burgers:\")\nWith \nawait asyncio.to_thread(input, \"Number of burgers:\")\nAnd we do the same for fries – see the code below. Note that now the program runs in an infinite loop. If we need to stop it, we can deliberately crash the program with an invalid input.\nimport asyncio\n\nimport time\n\ntask_queue = asyncio.Queue()\n\norder_num = 0\n\nasync def take_order():\n\n   global order_num\n\n   order_num += 1\n\n   print(f\"Order burger and fries for order #{order_num:04d}:\")\n\n   burger_num = await asyncio.to_thread(input, \"Number of burgers:\")\n\n   for i in range(int(burger_num)):\n\n       await task_queue.put(make_burger(f\"{order_num:04d}-burger{i:02d}\"))\n\n   fries_num = await asyncio.to_thread(input, \"Number of fries:\")\n\n   for i in range(int(fries_num)):\n\n       await task_queue.put(make_fries(f\"{order_num:04d}-fries{i:02d}\"))\n\n   print(f\"Order #{order_num:04d} queued.\")\n\n   await task_queue.put(take_order())\n\nasync def make_burger(order_num):\n\n   print(f\"Preparing burger #{order_num}...\")\n\n   await asyncio.sleep(5)  # time for making the burger\n\n   print(f\"Burger made #{order_num}\")\n\nasync def make_fries(order_num):\n\n   print(f\"Preparing fries #{order_num}...\")\n\n   await asyncio.sleep(2)  # time for making fries\n\n   print(f\"Fries made #{order_num}\")\n\nclass Staff:\n\n   def __init__(self, name):\n\n       self.name = name\n\n   async def working(self):\n\n       while True:\n\n           if task_queue.qsize() > 0:\n\n               print(f\"{self.name} is working...\")\n\n               task = await task_queue.get()\n\n               await task\n\n               print(f\"{self.name} finish task...\")\n\n           else:\n\n               await asyncio.sleep(1) #rest\n\nasync def main():\n\n   task_queue.put_nowait(take_order())\n\n   staff1 = Staff(name=\"John\")\n\n   staff2 = Staff(name=\"Jane\")\n\n   await asyncio.gather(staff1.working(), staff2.working())\n\nif __name__ == \"__main__\":\n\n   s = time.perf_counter()\n\n   asyncio.run(main())\n\n   elapsed = time.perf_counter() - s\n\n   print(f\"Orders completed in {elapsed:0.2f} seconds.\")\nBy using asyncio.to_thread, we have put the input function into a separate thread (see this reference). Do note, however, that this trick only unblocks I/O-bounded tasks if the Python GIL is present.\nIf you run the code above, you may also see that the standard I/O in the terminal is scrambled. The user I/O and the record of what is happening should be separate. We can put the record into a log to inspect later. \nimport asyncio\n\nimport logging\n\nimport time\n\nlogger = logging.getLogger(__name__)\n\nlogging.basicConfig(filename='pyburger.log', level=logging.INFO)\n\ntask_queue = asyncio.Queue()\n\norder_num = 0\n\nclosing = False\n\nasync def take_order():\n\n   global order_num, closing\n\n   try:\n\n       order_num += 1\n\n       logger.info(f\"Taking Order #{order_num:04d}...\")\n\n       print(f\"Order burger and fries for order #{order_num:04d}:\")\n\n       burger_num = await asyncio.to_thread(input, \"Number of burgers:\")\n\n       for i in range(int(burger_num)):\n\n           await task_queue.put(make_burger(f\"{order_num:04d}-burger{i:02d}\"))\n\n       fries_num = await asyncio.to_thread(input, \"Number of fries:\")\n\n       for i in range(int(fries_num)):\n\n           await task_queue.put(make_fries(f\"{order_num:04d}-fries{i:02d}\"))\n\n       logger.info(f\"Order #{order_num:04d} queued.\")\n\n       print(f\"Order #{order_num:04d} queued, please wait.\")\n\n       await task_queue.put(take_order())\n\n   except ValueError:\n\n       print(\"Goodbye!\")\n\n       logger.info(\"Closing down... stop taking orders and finish all tasks.\")\n\n       closing = True\n\nasync def make_burger(order_num):\n\n   logger.info(f\"Preparing burger #{order_num}...\")\n\n   await asyncio.sleep(5)  # time for making the burger\n\n   logger.info(f\"Burger made #{order_num}\")\n\nasync def make_fries(order_num):\n\n   logger.info(f\"Preparing fries #{order_num}...\")\n\n   await asyncio.sleep(2)  # time for making fries\n\n   logger.info(f\"Fries made #{order_num}\")\n\nclass Staff:\n\n   def __init__(self, name):\n\n       self.name = name\n\n   async def working(self):\n\n       while True:\n\n           if task_queue.qsize() > 0:\n\n               logger.info(f\"{self.name} is working...\")\n\n               task = await task_queue.get()\n\n               await task\n\n               task_queue.task_done()\n\n               logger.info(f\"{self.name} finish task.\")\n\n           elif closing:\n\n               return\n\n           else:\n\n               await asyncio.sleep(1) #rest\n\nasync def main():\n\n   global task_queue\n\n   task_queue.put_nowait(take_order())\n\n   staff1 = Staff(name=\"John\")\n\n   staff2 = Staff(name=\"Jane\")\n\n   print(\"Welcome to Pyburger!\")\n\n   logger.info(\"Ready for business!\")\n\n   await asyncio.gather(staff1.working(), staff2.working())\n\n   logger.info(\"All tasks finished. Closing now.\")\n\nif __name__ == \"__main__\":\n\n   s = time.perf_counter()\n\n   asyncio.run(main())\n\n   elapsed = time.perf_counter() - s\n\n   logger.info(f\"Orders completed in {elapsed:0.2f} seconds.\")\nIn this final code block, we have logged the simulation information in pyburger.log and reserved the terminal for messages for customers. We also catch invalid input during the ordering process and switch a closing flag to True if the input is invalid, assuming the user wants to quit. Once the closing flag is set to True, the worker will return, ending the coroutine’s infinite while loop.\nHow does threading work in Python?\nIn the example above, we put an I/O-bound task into another thread. You may wonder if we can put all tasks into separate threads and let them run concurrently. Let’s try using threading instead of asyncio.\nConsider the code we have as shown below, where we create burgers concurrently with no limitation put in place:\nimport asyncio\n\nimport time\n\nasync def make_burger(order_num):\n\n    print(f\"Preparing burger #{order_num}...\")\n\n    await asyncio.sleep(5) # time for making the burger\n\n    print(f\"Burger made #{order_num}\")\n\nasync def main():\n\n    order_queue = []\n\n    for i in range(3):\n\n        order_queue.append(make_burger(i))\n\n    await asyncio.gather(*(order_queue))\n\nif __name__ == \"__main__\":\n\n    s = time.perf_counter()\n\n    asyncio.run(main())\n\n    elapsed = time.perf_counter() - s\n\n    print(f\"Orders completed in {elapsed:0.2f} seconds.\")\n\n```\n\nInstead of creating async coroutines to make the burgers, we can just send functions down different threads like this:\n\n```\n\nimport threading\n\nimport time\n\ndef make_burger(order_num):\n\n   print(f\"Preparing burger #{order_num}...\")\n\n   time.sleep(5) # time for making the burger\n\n   print(f\"Burger made #{order_num}\")\n\ndef main():\n\n   order_queue = []\n\n   for i in range(3):\n\n       task = threading.Thread(target=make_burger, args=(i,))\n\n       order_queue.append(task)\n\n       task.start()\n\n   for task in order_queue:\n\n       task.join()\n\nif __name__ == \"__main__\":\n\n   s = time.perf_counter()\n\n   main()\n\n   elapsed = time.perf_counter() - s\n\n   print(f\"Orders completed in {elapsed:0.2f} seconds.\")\nIn the first for loop in main, tasks are created in different threads and get a kickstart. The second for loop makes sure all the burgers are made before the program moves on (that is, before it returns to main).\nIt is more complicated when we have only two staff members. Each member of the staff is represented with a thread, and they will take tasks from a normal list where they are all stored.\nimport threading\n\nimport time\n\norder_queue = []\n\ndef take_order():\n\n   for i in range(3):\n\n       order_queue.append(make_burger(i))\n\ndef make_burger(order_num):\n\n   def making_burger():\n\n       print(f\"Preparing burger #{order_num}...\")\n\n       time.sleep(5)  # time for making the burger\n\n       print(f\"Burger made #{order_num}\")\n\n   return making_burger\n\ndef working():\n\n     while len(order_queue) > 0:\n\n         print(f\"{threading.current_thread().name} is working...\")\n\n         task = order_queue.pop(0)\n\n         task()\n\n         print(f\"{threading.current_thread().name} finish task...\")\n\ndef main():\n\n   take_order()\n\n   staff1 = threading.Thread(target=working, name=\"John\")\n\n   staff1.start()\n\n   staff2 = threading.Thread(target=working, name=\"Jane\")\n\n   staff2.start()\n\n   staff1.join()\n\n   staff2.join()\n\nif __name__ == \"__main__\":\n\n s = time.perf_counter()\n\n main()\n\n elapsed = time.perf_counter() - s\n\n print(f\"Orders completed in {elapsed:0.2f} seconds.\")\nWhen you run the code above, an error may occur in one of the threads, saying that it is trying to get a task from an empty list. You may wonder why this is the case, since we have a condition in the while loop that causes it to continue only if the task_queue is not empty. Nevertheless, we still get an error because we have encountered race conditions.\nRace conditions\nRace conditions can occur when multiple threads attempt to access the same resource or data at the same time and cause problems in the system. The timing and order of when the resource is accessed are important to the program logic, and unpredictable timing or the interleaving of multiple threads accessing and modifying shared data can cause errors.\nTo solve the race condition in our program, we will deploy a lock to the task_queue:\nqueue_lock = threading.Lock()\nFor working, we need to make sure we have access rights to the queue when checking its length and getting tasks from it. While we have the rights, other threads cannot access the queue:\ndef working():\n\n   while True:\n\n       with queue_lock:\n\n           if len(order_queue) == 0:\n\n               return\n\n           else:\n\n               task = order_queue.pop(0)\n\n       print(f\"{threading.current_thread().name} is working...\")\n\n       task()\n\n       print(f\"{threading.current_thread().name} finish task...\")\n\n```\n\nBased on what we have learned so far, we can complete our final code with threading like this:\n\n```\n\nimport logging\n\nimport threading\n\nimport time\n\nlogger = logging.getLogger(__name__)\n\nlogging.basicConfig(filename=\"pyburger_threads.log\", level=logging.INFO)\n\nqueue_lock = threading.Lock()\n\ntask_queue = []\n\norder_num = 0\n\nclosing = False\n\ndef take_order():\n\n   global order_num, closing\n\n   try:\n\n       order_num += 1\n\n       logger.info(f\"Taking Order #{order_num:04d}...\")\n\n       print(f\"Order burger and fries for order #{order_num:04d}:\")\n\n       burger_num = input(\"Number of burgers:\")\n\n       for i in range(int(burger_num)):\n\n           with queue_lock:\n\n               task_queue.append(make_burger(f\"{order_num:04d}-burger{i:02d}\"))\n\n       fries_num = input(\"Number of fries:\")\n\n       for i in range(int(fries_num)):\n\n           with queue_lock:\n\n               task_queue.append(make_fries(f\"{order_num:04d}-fries{i:02d}\"))\n\n       logger.info(f\"Order #{order_num:04d} queued.\")\n\n       print(f\"Order #{order_num:04d} queued, please wait.\")\n\n       with queue_lock:\n\n           task_queue.append(take_order)\n\n   except ValueError:\n\n       print(\"Goodbye!\")\n\n       logger.info(\"Closing down... stop taking orders and finish all tasks.\")\n\n       closing = True\n\ndef make_burger(order_num):\n\n   def making_burger():\n\n       logger.info(f\"Preparing burger #{order_num}...\")\n\n       time.sleep(5)  # time for making the burger\n\n       logger.info(f\"Burger made #{order_num}\")\n\n   return making_burger\n\ndef make_fries(order_num):\n\n   def making_fries():\n\n       logger.info(f\"Preparing fried #{order_num}...\")\n\n       time.sleep(2)  # time for making fries\n\n       logger.info(f\"Fries made #{order_num}\")\n\n   return making_fries\n\ndef working():\n\n   while True:\n\n       with queue_lock:\n\n           if len(task_queue) == 0:\n\n               if closing:\n\n                   return\n\n               else:\n\n                   task = None\n\n           else:\n\n               task = task_queue.pop(0)\n\n       if task:\n\n           logger.info(f\"{threading.current_thread().name} is working...\")\n\n           task()\n\n           logger.info(f\"{threading.current_thread().name} finish task...\")\n\n       else:\n\n           time.sleep(1)  # rest\n\ndef main():\n\n   print(\"Welcome to Pyburger!\")\n\n   logger.info(\"Ready for business!\")\n\n   task_queue.append(take_order)\n\n   staff1 = threading.Thread(target=working, name=\"John\")\n\n   staff1.start()\n\n   staff2 = threading.Thread(target=working, name=\"Jane\")\n\n   staff2.start()\n\n   staff1.join()\n\n   staff2.join()\n\n   logger.info(\"All tasks finished. Closing now.\")\n\nif __name__ == \"__main__\":\n\n   s = time.perf_counter()\n\n   main()\n\n   elapsed = time.perf_counter() - s\n\n   logger.info(f\"Orders completed in {elapsed:0.2f} seconds.\")\nIf you compare the two code snippets using asyncio and threading, they should have similar results. You may wonder which one is better and why you should choose one over the other.\nPractically, writing asyncio code is easier than multithreading because we don’t have to take care of potential race conditions and deadlocks by ourselves. Controls are passed around coroutines by default, so no locks are needed. However, Python threads do have the potential to run in parallel, just not most of the time with the GIL in place. We can revisit this when we talk about nogil (thread-free) Python in the next blog post.\nBenefiting from concurrency\nWhy do we want to use concurrency in programming? There’s one main reason: speed. Like we have illustrated above, tasks can be completed faster if we can cut down the waiting time. There are different types of waiting in computing, and for each one, we tend to use different methods to save time.\nI/O-bound tasks\nA task or program is considered input/output (I/O) bound when its execution speed is primarily limited by the speed of I/O operations, such as reading from a file or network, or waiting for user input. I/O operations are generally slower than other CPU operations, and therefore, tasks that involve lots of them can take significantly more time. Typical examples of these tasks include reading data from a database, handling web requests, or working with large files.\nUsing async/await concurrency can help optimize the waiting time during I/O-bound tasks by unblocking the processing sequence and letting other tasks be taken care of while waiting.\nAsync/await concurrency is beneficial in many Python applications, such as web applications that involve a lot of communication with databases and handling web requests. GUIs (graphical user interfaces) can also benefit from async/await concurrency by allowing background tasks to be performed while the user is interacting with the application.\nCPU-bound tasks\nA task or program is considered CPU-bound when its execution speed is primarily limited by the speed of the CPU. Typical examples include image or video processing, like resizing or editing, and complex mathematical calculations, such as matrix multiplication or training machine learning models.\nContrary to I/O-bound tasks, CPU-bound tasks can rarely be optimised by using async/await concurrency, as the CPU is already busy working on the tasks. If you have more than one CPU in your machine, or if you can offload some of these tasks to one or more GPUs, then CPU-bound tasks can be finished faster by creating more threads and performing multiprocessing. Multiprocessing can optimise how these CPUs and GPUs are used, which is also why many machine learning and AI models these days are trained on multiple GPUs.\nThis, however, is tough to perform with pure Python code, as Python itself is designed to provide abstract layers so users do not have to control the lower-level computation processes. Moreover, Python’s GIL limits the sharing of Python resources across multiple threads on your computer. Recently, Python 3.13 made it possible to remove the GIL, allowing for true multithreading. We will discuss the GIL, and the ability to go without it, in the next blog post.\nSometimes, none of the methods we mentioned above are able to speed up CPU-bound tasks sufficiently. When that is the case, the CPU-bound tasks may need to be broken into smaller ones so that they can be performed simultaneously over multiple threads, multiple processors, or even multiple machines. This is parallel processing, and you may have to rewrite your code completely to implement it. In Python, the multiprocessing package offers both local and remote concurrency, which can be used to work around the limitation of the GIL. We will also look at some examples of that in the next blog post.\nDebugging concurrent code in PyCharm\nDebugging async or concurrent code can be hard, as the program is not executed in sequence, meaning it is hard to see where and when the code is being executed. Many developers use print to help trace the flow of the code, but this approach is not recommended, as it is very clumsy and using it to investigate a complex program, like a concurrent one, isn’t easy. Plus, it is messy to tidy up after.\nMany IDEs provide debuggers, which are great for inspecting variables and the flow of the program. Debuggers also provide a clear stack trace across multiple threads. Let’s see how we can track the task_queue of our example restaurant simulation in PyCharm.\nFirst, we will put down some breakpoints in our code. You can do that by clicking the line number of the line where you want the debugger to pause. The line number will turn into a red dot, indicating that a breakpoint is set there. We will put breakpoints at lines 23, 27, and 65, where the task_queue is changed in different threads.\n\n\n\n\n\n\n\n\nThen we can run the program in debug mode by clicking the little bug icon in the top right.\n\n\n\n\nAfter clicking on the icon, the Debug window will open up. The program will run until it hits the first breakpoint highlighted in the code.\n\n\n\n\nHere we see the John thread is trying to pick up the task, and line 65 is highlighted. At this point, the highlighted line has not been executed yet. This is useful when we want to inspect the variables before entering the breakpoint.\nLet’s inspect what’s in the task_queue. You can do so simply by starting to type in the Debug window, as shown below.\n\n\n\n\nSelect or type in “task_queue”, and then press Enter. You will see that the take_order task is in the queue.\n\n\n\n\nNow, let’s execute the breakpoint by clicking the Step in button, as shown below.\n\n\n\n\nAfter pressing that and inspecting the Special Variables window that pops up, we see that the task variable is now take_order in the John thread.\n\n\n\n\nWhen querying the task_queue again, we see that now the list is empty.\n\n\n\n\nNow let’s click the Resume Program button and let the program run.\n\n\n\n\nWhen the program hits the user input part, PyCharm will bring us to the Console window so we can provide the input. Let’s say we want two burgers. Type “2” and press Enter.\n\n\n\n\nNow we hit the second breakpoint. If we click on Threads & Variables to go back to that window, we’ll see that burger_num is two, as we entered.\n\n\n\n\nNow let’s step into the breakpoint and inspect the task_queue, just like we did before. We see that one make_burger task has been added.\n\n\n\n\nWe let the program run again, and if we step into the breakpoint when it stops, we see that Jane is picking up the task.\n\n\n\n\nYou can inspect the rest of the code yourself. When you are done, simply press the red Stop button at the top of the window.\n\n\n\n\nWith the debugger in PyCharm, you can follow the execution of your program across different threads and inspect different variables very easily.\nConclusion\nNow we have learned the basics of concurrency in Python, and I hope you will be able to master it with practice. In the next blog post, we will have a look at the Python GIL, the role it plays, and what changes when it is absent.\nPyCharm provides powerful tools for working with concurrent Python code. As demonstrated in this blog post, the debugger allows the step-by-step inspection of both async and threaded code, helping you track the execution flow, monitor shared resources, and detect issues. With intuitive breakpoints, real-time variable views, seamless console integration for user input, and robust logging support, PyCharm makes it easier to write, test, and debug applications with confidence and clarity.\nDownload PyCharm Now",
        "dc:creator": "Cheuk Ting Ho",
        "content": "If you have been coding with Python for a while, especially if you have been using frameworks and libraries such as Fast API and discord.py, then you have probably been using async/await or asyncio. You may have heard statements like “multithreading in Python isn’t real”, and you may also know about the famous (or infamous) [&#8230;]",
        "contentSnippet": "If you have been coding with Python for a while, especially if you have been using frameworks and libraries such as Fast API and discord.py, then you have probably been using async/await or asyncio. You may have heard statements like “multithreading in Python isn’t real”, and you may also know about the famous (or infamous) […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=571165",
        "categories": [
          "how-tos",
          "tutorials",
          "web-development",
          "concurrency",
          "python"
        ],
        "isoDate": "2025-06-10T11:57:58.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "Text Blocks in Java: Perfect for Multiline Strings",
        "link": "https://blog.jetbrains.com/idea/2025/06/text-blocks-in-java-perfect-for-multiline-strings/",
        "pubDate": "Tue, 10 Jun 2025 11:28:36 +0000",
        "content:encodedSnippet": "You’ve likely used String variables to store values that span multiple lines, such as LLM prompts, JSON, HTML, XML, code snippets, and other such values.\nSome of these, such as a JSON value, include double quotes as part of the data. Imagine the inconvenience of using backslashes (\\) to escape those quotes, indenting lines using newlines, tabs, or spaces, and adding a concatenation operator at the end of each line. Coding such string values is a nightmare. The resulting string is not just hard to write, but also hard to read. Language-specific errors, like a missing comma in a JSON value, can easily creep in.\nDon’t worry, there’s already a solution. Java 15 introduced Text Blocks, multiline strings that make it easier to define data that spans multiple lines. Text Blocks remove the need for concatenation operators or escape sequences when working with HTML, XML, JSON, or SQL queries stored as strings. The values are easier to read, and it’s simpler to spot issues like missing spaces in SQL queries or a missing comma in a JSON value.\nLet’s understand the benefits of using Text Blocks with an example.\nAn example – what are the existing pain points\nImagine you need to store the following JSON text in your Java code:\n{\n    \"name\": \"Sonam Wangchuk\"\n    \"movement\": \"#ILiveSimply\",\n    \"result\": \"Let planet simply live\"\n}\nThis JSON value can be stored as a multi line String value (without using a TextBlock) as follows:\n\n\n\nString myJson = \"{\\n\" +\n                \"    \\\"name\\\": \\\"Sonam Wangchuk\\\"\\n\" +\n                \"    \\\"movement\\\": \\\"#ILiveSimply\\\",\\n\" +\n                \"    \\\"result\\\": \\\"Let planet simply live\\\"\\n\" +\n                \"}\";\n\n\n\nWriting the preceding code manually can be a nightmare. Escape characters and concatenation operators make it hard to write and read. To include double quotes within a string, you must escape them using a backslash (since ” is also a string delimiter). To preserve the formatting of the JSON object, you need to add whitespace such as new lines, tabs, or spaces.\n\n\n\nWith all that formatting overhead, you probably missed that the JSON above is missing a comma at the end of the first line. This missing comma can cause a parsing error later if you try to convert the string into a JSON object.\n\n\n\nLet’s see how Text Blocks can help.\n\n\n\nUsing Text Blocks\n\n\n\nTextBlocks are multiline Strings (their type is java.lang.String). By using Text Blocks, you can store the previous String value, as follows:\n\n\n\nString myJson = \"\"\"\n                {\n                    \"name\": \"Sonam Wangchuk\"\n                    \"movement\": \"#ILiveSimply\",\n                    \"result\": \"Let planet simply live\"\n                }\"\"\";\n\n\n\nText Blocks are simple to create, read, and edit. They eliminate the need for concatenation operators and (most) escape sequences when working with String values that span more than one line, as shown below:\n\n\n\n\n\n\n\n\nThe next section covers the syntax details of text blocks. If you’re already familiar with them, feel free to skip ahead.\n\n\n\nSyntax of TextBlocks\n\n\n\nHere are a couple of syntax rules to follow when you are working with Text Blocks.\n\n\n\nOpening and closing delimiter – \"\"\"\n\n\n\nUnlike the single double quotes (\") used for regular String values, Text Blocks use three double quotes (\"\"\") as their opening and closing delimiters. The opening delimiter can be followed by zero or more whitespaces, but it must be followed by a line terminator. A Text Block value begins after this line terminator.\n\n\n\nIf a Text Block doesn’t include a newline character immediately after the opening \"\"\", IntelliJ IDEA can detect this and prompt you to correct it:\n\n\n\n\n\n\n\n\nIncidental white spaces\n\n\n\nWhat rules does the compiler follow to include or exclude leading and trailing whitespace in a Text Block? Before we answer this question, let’s first understand what whitespaces are. When we talk about a whitespace in Java Text Blocks, it can refer to different types of characters, such as:\n\n\nA space – The standard space character we use to separate words\nTabs – The popular Tab characters, that is, ('\\t'). Wars have been fought over whether to use tabs or space to indent code :)\nLine breaks – Newline characters ('\\n' on Unix/Linux/macOS, or '\\r\\n' on Windows)\nCarriage returns – ('\\r')\n\n\nFirst, let’s talk about how the leading white spaces are handled in a Text Block.\n\n\n\nLeading spaces\n\n\n\nWhy do you need leading spaces? You would usually add tabs or spaces to values, such as a JSON, to align them vertically in your code. In Text Blocks, the leftmost non-whitespace character on any of the lines or the leftmost closing delimiter defines where meaningful white space begins. IntelliJ IDEA helps you view this position – using a vertical line – a feature that I absolutely love about Text Block’s support in IntelliJ IDEA.\n\n\n\nHere’s how the vertical bar in IntelliJ IDEA lets you visualize the starting position of your Text Block values:\n\n\n\n\n\n\n\n\nJust in case you can’t view the vertical green line shown in the preceding image, use Shift+Shift, Find ‘Show indent guides’, and enable it in IntelliJ IDEA.\n\n\n\nThe following image shows another way to understand which leading spaces are included in your text blocks – blue rectangles represent the spaces that are not part of your textblock and the light green rectangles represent the leading spaces that are included in your text block:  \n\n\n\n\n\n\n\n\nIf you move the closing triple quotes to the left, the white spaces included in the textblock changes, as shown in the following image:\n\n\n\n\n\n\n\n\nTrailing white spaces\n\n\n\nBy default, the trailing white spaces are removed in Text Block values. IntelliJ IDEA can detect when you add trailing white spaces in your textblocks. It would highlight those spaces (to ensure you didn’t add them by mistake). \n\n\n\nWhen you click Alt + Enter, it could prompt you to either ‘Escape trailing whitespace characters’, or ‘Remove trailing whitespace characters’. If you choose the former option, IntelliJ IDEA will add \\s at the end (\\s represents a single space), as shown in the following gif:\n\n\n\n\n\n\n\n\nWhere would you use a trailing white space?\n\n\n\nImagine you are using a method from a library that reads the first 40 characters of a line to extract two values from it, and store it in a Map, as follows:\n\n\n\npublic Map<String, String> parseFixedWidthData(String fixedWidthData) {\n    Map<String, String> result = new HashMap<>();\n    String[] lines = fixedWidthData.split(\"\\n\");\n    for (String line : lines) {\n        String field1 = line.substring(0, 19).trim();\n        String field2 = line.substring(20, 39).trim();\n        result.put(field1, field2);\n    }\n    return result;\n}\n\n\n\nIf you are using a textblock to pass value to the method parseFixedWidthData, you should define it as follows, escaping the trailing whitespaces, so the the preceding method doesn’t throw an IndexOutOfBounds exception:\n\n\n\nString fixedWidthData = \"\"\"\n                        CUSTOMER_NAME       JOHN DOE           \\s\n                        ACCOUNT_NUMBER      12345678-9879      \\s\n                        AGE                      45            \\s\"\"\";\n\n\n\nContinuation char – \\\n\n\n\nWhen you place your text on a new line in a text block, a new line char is added to your String value. Imagine using a textblock to store a store long URL so that it is easy to read, as follows:\n\n\n\nString apiUrl = \"\"\"\n        https://www.alamy.com/stock-photo-abstract-geometric-pattern-hipster-fashion-design-print-hexagonal-175905258.html?\n        imageid=0DF26DE9-AC7B-4C78-8770-E1AC9EC8783A\n        &p=379271\n        &pn=1\n        &searchId=8cf93ae4926578c6f55e3756c4010a71&searchtype=0\"\"\";\n\n\n\nHowever, if you use the preceding text block to connect to a URL and retrieve a response, the code will throw an exception. Inclusion of \\n in the URL makes it an invalid URL. To address it, you can use the continuation character, that is, \\ at the end of a line in your text block (so that the resulting string doesn’t include a new line character):\n\n\n\nString apiUrl = \"\"\"\n        https://www.alamy.com/stock-photo-abstract-geometric-pattern-hipster-fashion-design-print-hexagonal-175905258.html?\\\n        imageid=0DF26DE9-AC7B-4C78-8770-E1AC9EC8783A\\\n        &p=379271\\\n        &pn=1\\\n        &searchId=8cf93ae4926578c6f55e3756c4010a71&searchtype=0\"\"\";\n\n\n\nMore about TextBlocks\n\n\n\nWith the syntax rules under your belt, let’s learn more about Text blocks.\n\n\n\nNot a String variation\n\n\n\nJava isn’t adding a variation of type String with Text Blocks. They are compiled to regular String instances (java.lang.String). You can think of Textblocks as syntactic sugar that allows you to write Strings without using the concatenating operators and escape sequences. If you decompile a class that defines a text block, you’ll see that they are compiled to regular strings with single pair of double quotes as the delimiter, as shown in the following gif (the top bar mentions that you are viewing a Decompiled .class file):\n\n\n\n\n\n\n\n\nCall any String method on a text block\n\n\n\nSince there is just one java.lang.String type (not a variation for Text blocks), it means that you can call all String methods on text blocks:\n\n\n\n\n\n\n\n\nConvert a text block to a regular string\n\n\n\nImagine you are migrating your codebase to a development environment that doesn’t support Textblocks (Java 14 or earlier versions). In such case, you can invoke Context Actions to convert a Text Block to a regular String literal:\n\n\n\n\n\n\n\n\nLanguage Injections in Textblocks\n\n\n\nInjecting a language into Text Blocks in IntelliJ IDEA enables syntax highlighting and real-time error detection, helping to catch issues such as unclosed JSON values or HTML tags, missing or mismatched quotes in attributes, inconsistent indentation, and unescaped special characters. You also get IntelliJ IDEA’s support like code completion, and value validation. \n\n\n\nThe following gif shows how you can inject JSON as a language in a text block (language injection in IntelliJ IDEA applies to regular strings too):\n\n\n\n\n\n\n\n\nAs you can see, the language injection option enables you to choose from multiple options (including JSON).\n\n\n\nPractical examples – where to use Text Blocks\n\n\n\nApart from using Textblocks to store JSON data (as shown in the preceding sections), you can think of using Text Blocks to store values that usually span multiple lines such as XML, HTML data, or code snippets written in other programming languages. This section highlights the practical examples where you can use text blocks.\n\n\n\n1. ASCII Art\n\n\n\nYou can use textblock to store and output ASCII art, such as the following:\n\n\n\nString textblock = \"\"\"\n        ╔═══════════════════════════════════════════════════════════════════════════════════════╗\n        ║                                                                                       ║\n        ║    ████████╗███████╗██╗  ██╗████████╗    ██████╗ ██╗      ██████╗  ██████╗██╗  ██╗    ║\n        ║    ╚══██╔══╝██╔════╝╚██╗██╔╝╚══██╔══╝    ██╔══██╗██║     ██╔═══██╗██╔════╝██║ ██╔╝    ║\n        ║       ██║   █████╗   ╚███╔╝    ██║       ██████╔╝██║     ██║   ██║██║     █████╔╝     ║\n        ║       ██║   ██╔══╝   ██╔██╗    ██║       ██╔══██╗██║     ██║   ██║██║     ██╔═██╗     ║\n        ║       ██║   ███████╗██╔╝ ██╗   ██║       ██████╔╝███████╗╚██████╔╝╚██████╗██║  ██╗    ║\n        ║       ╚═╝   ╚══════╝╚═╝  ╚═╝   ╚═╝       ╚═════╝ ╚══════╝ ╚═════╝  ╚═════╝╚═╝  ╚═╝    ║\n        ║                                                                                       ║\n        ╠═══════════════════════════════════════════════════════════════════════════════════════╣\"\"\";\n\n\n\n\n\n\n\n\n\n2. Logging data\n\n\n\nImagine while working with an online shopping application, you need to log a message with order details, if the quantity for a product in an order is 0 or negative. It is common to create a String that includes literals, such as, ‘Invalid order’, and order details that can be accessed using variables like orderId, etc. Here’s a sample code to accomplish this (focus on the concatenated String):\n\n\n\npublic void processOrder(int orderId, String product, int qty, LocalDate orderDate) {\n   if (qty <= 0) {\n       String errorMessage = \"Invalid order quantity:\" + qty + \n                             \"for product\" + product + \",order ID\" + orderId;\n       logger.error(errorMessage);\n       return;\n   }\n   //.. Remaining code\n}\n\n\n\nThe code seems harmless. However, I’ve often missed adding spaces before and after the literal text values in similar code, generating a log message similar to the following that is hard to read:\n\n\n\nInvalid order quantity: -5for productWidget,order ID12345\n\n\n\nA safer bet would be to use textblocks for this logging message that can help you spot the missing spaces. Even if you miss adding spaces, the new line characters can space out the log messages:\n\n\n\npublic void processOrder(int orderId, String product, int qty, LocalDate orderDate) {\n        if (qty <= 0) {\n            String errorMessage = (\"\"\"\n                                   Invalid order quantity:%d\n                                   for product %s, \n                                   order ID %d\"\"\").formatted(qty, product, orderId);\n            logger.info(errorMessage);\n            System.out.println(errorMessage);\n            return;\n        }\n        //.. Remaining code\n    }\n\n\n\n3. XML or HTML data\n\n\n\nHere’s an example of a Text Block storing a HTML value:\n\n\n\nString html = \"\"\"\n        <HTML>\n           <BODY>\n               <P>Stop generating 6 million tons of plastic waste</P>\n               <UL>\n                   <LI>Keep a spoon, fork, knife in your bag.</LI> \n                   <LI>Avoid using single use plastic cutlery.</LI>\n               </UL>\n           </BODY>\n        </HTML>\n        \"\"\";\n\n\n\n4. Complex JSON data\n\n\n\nIn the beginning of this blog post, I covered how text blocks can help eliminate the clutter. The clutter increases manifolds, when you start working with more complex JSON objects, as follows:\n\n\n\nString json = \"{\\n\" +\n              \"  \\\"cod\\\": \\\"200\\\",\\n\" +\n              \"  \\\"city\\\": {\\n\" +\n              \"    \\\"id\\\": 524901,,,,\\n\" +\n              \"    \\\"name\\\": \\\"GreatCity\\\",\\n\" +\n              \"    \\\"country\\\": \\\"AwesomeCountry\\\",\\n\" +\n              \"    \\\"coord\\\": {\\n\" +\n              \"      \\\"lat\\\": 55.7522,\\n\" +\n              \"      \\\"lon\\\": 37.6156\\n\" +\n              \"    }\\n\" +\n              \"  }\\n\" +\n              \"}\";\n\n\n\nWith textblocks, the cognitive load reduces, as you can see in the following code snippet:\n\n\n\nString json = \"\"\"\n              {\n                \"cod\": \"200\",\n                \"city\": {\n                  \"id\": 524901,,,,\n                  \"name\": \"GreatCity\",\n                  \"country\": \"AwesomeCountry\",\n                  \"coord\": {\n                    \"lat\": 55.7522,\n                    \"lon\": 37.6156\n                  }\n                }\n              }\"\"\";\n\n\n\nPerhaps you can inject language in the preceding text block and determine the syntax errors with the JSON value.\n\n\n\n5. Multiline String values\n\n\n\nHere’s just a long line of String, stored using Text Blocks: \n\n\n\nString aLongString = \"\"\"\n                     I'm a long String value, which can't fit on a \n                     Single line. \n                     \"Hey!\", would you prefer a cup of coffee?\n                     \"Yes, please\".\n                     \"\"\";\n\n\n\nText Blocks take off the visual clutter from multiline strings which existed in the form of concatenation operators and escape sequences. \n\n\n\n6. SQL Queries\n\n\n\nImagine using the following code to store a SQL query:\n\n\n\nString query = \n  \"SELECT name, age\" +\n  \"FROM EMP\" + \n  \"WHERE name = \\'John\\'\" +\n  \"AND age > 20\";\n\n\n\nThe preceding code represents an invalid query. Due to missing spaces at the end of each line, this query will be interpreted as the following:\n\n\n\nSELECT name, ageFROM EMPWHERE name = 'John'AND age > 20\nYou can address these issues by using text blocks:\nString query = \"\"\"\n  SELECT name, age\n  FROM EMP\n  WHERE name = 'John'\n    AND age > 20\n  \"\"\";\n\n\n\n7. Email templates – multiline string values with literal and variable values\n\n\n\nWhen concatenating string literals with variable values, it is easy to miss adding a single space in string literal, right before or after a variable value. It could result in poorly formatted output, or output that is not-so-readable. It could also result in displaying output you didn’t expect due to those missing spaces. Consider the following code that uses a combination of string literals and variable values to send a text to a customer:\n\n\n\nString username = \"Alice\";\n    String topic = \"Java Records\";\n    String previousContext = \"We were discussing immutable data classes.\";\n        \n    String email = \"Hi\" + username + \",\\n\\n\" +\n            \"Let's continue our discussion about \" + topic + \".\\n\" +\n            \"For context, \" + previousContext + \"\\n\\n\" +\n            \"Can you tell me more about what specific aspects of\" + topic + \"you're interested in?\";\n\n\n\nYou could use TextBlock and formatted(), so that the variable substitution is cleaner:\n\n\n\nString email = \"\"\"\n                Hi %s,\n                \n                Let's continue our discussion about %s.\n                For context, %s\n                \n                Can you tell me more about what specific aspects of %s you're interested in?\n                \"\"\".formatted(username, topic, previousContext, topic);\n\n\n\n\n\n   \n\n\n\n8. Creating simple bills \n\n\n\nYou can create simple bills (such as the following) to print using textblocks:\n\n\n\n--------------------------------------------------------------------------------------\n                            Your Neighbourhood Art Supplies Store\n--------------------------------------------------------------------------------------\nDate:               2023-10-20                               Invoice Number:     12345                 \nCustomer Details\nName:               John Smith            \nAddress:            123 Main Street       \nCity:               Smallville            \nPhone:              555-123-4567          \n--------------------------------------------------------------------------------------\nS.No.           Item Name                  Quantity        Unit Price($)      Total($)\n--------------------------------------------------------------------------------------\n1        Acrylic Paint Set                       1             20.00             20.00\n2        Watercolor Brushes                      5             15.00             75.00\n3        Sketchbook                             12             10.00            120.00\n4        Oil Paints Set                          1             25.00             25.00\n5        Canvas Panels (5-pack)                  6             12.00             72.00\n--------------------------------------------------------------------------------------\nSubtotal:       $82.0\nSales Tax (6%): $4.92\nTotal Amount:   $86.92;\n--------------------------------------------------------------------------------------\n                            Thank you for shopping with us!\n--------------------------------------------------------------------------------------\n\n\n\n\n\nCode Migrations – using text blocks instead of a regular string\n\n\n\nThe release of Java 25, the next LTS version, is around the corner. If you plan to migrate your existing codebases using JDK version 14 or earlier to a newer version, you can start using Text Blocks in your code.\n\n\n\nTo migrate all eligible multiline String values currently stored across multiple lines using concatenation operators to Text Blocks, you can proceed in two ways. The first approach is to run the inspection “Text blocks can be used” on your entire project or selected directories. In the Problems view window that opens, you can apply these changes individually or in a batch.\n\n\n\nTo demonstrate this feature, I forked an open-source project from GitHub, JSON-java, and ran the inspection “Text blocks can be used,” as shown in the following GIF:\n\n\n\n\n\n\n\n\nThe second approach is to create a new profile in Settings, say, ‘Migrate to 24’, and add all the migration inspections to this profile. Then, you can execute the ‘Inspect Code…’ command and run this inspection profile on your codebase. Use the Problems view window to accept multiple changes at once or review them individually.\n\n\n\nSummary\n\n\n\nText blocks in Java are syntactic sugar to make it easy for you to create string values that span multiple lines, without needing to use concatenation operators or escape sequences. This makes it easier to read and write such values, reducing cognitive load for us developers. Since the values are clutter-free, you can also spot syntax errors in these multiline values, such as a missing quote or comma. By injecting a language or a reference into these text blocks, IntelliJ IDEA can help you further by highlighting these errors and even suggesting how to fix them.\n\n\n\nText blocks start and end with three double quotes. By default, trailing whitespaces are ignored in text blocks. To include—or in other words, escape—the trailing whitespaces, use \\s. To join two lines, add a backslash (\\) at the end of the first line.\n\n\n\nText blocks are quite useful when you’re working with data that usually spans multiple lines, such as JSON, SQL queries, HTML, XML, and others. You could use text blocks to output beautiful line art, format log messages, or even generate simple bills for your neighbourhood stores.\n\n\n\nThe release of Java 25 is around the corner. If you’re still working with an older version of the JDK, such as 8 or 11, I recommend moving to a newer version so you can benefit from newer features like text blocks.\n\n\n\nHappy coding!",
        "dc:creator": "Irina Mariasova",
        "content": "You’ve likely used String variables to store values that span multiple lines, such as LLM prompts, JSON, HTML, XML, code snippets, and other such values. Some of these, such as a JSON value, include double quotes as part of the data. Imagine the inconvenience of using backslashes (\\) to escape those quotes, indenting lines using [&#8230;]",
        "contentSnippet": "You’ve likely used String variables to store values that span multiple lines, such as LLM prompts, JSON, HTML, XML, code snippets, and other such values. Some of these, such as a JSON value, include double quotes as part of the data. Imagine the inconvenience of using backslashes (\\) to escape those quotes, indenting lines using […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=573133",
        "categories": [
          "tutorials",
          "java",
          "textblocks"
        ],
        "isoDate": "2025-06-10T11:28:36.000Z"
      },
      {
        "creator": "Alyona Chernyaeva",
        "title": "Kotlin for Server-Side Development: Community Content Roundup #2",
        "link": "https://blog.jetbrains.com/kotlin/2025/06/kotlin-for-server-side-development-community-content-roundup-2/",
        "pubDate": "Tue, 10 Jun 2025 11:06:26 +0000",
        "content:encodedSnippet": "The Kotlin community keeps delivering valuable content for server-side development. From gRPC best practices to hands-on Ktor tutorials and Spring integrations, here are the latest highlights.\n📖 [Article] Kotlin Tips and Tricks You May Not Know: #6 — Inject Functions in Spring Boot – Elena van Engelen-Maslova shares how to inject functions in Spring Boot for cleaner and more flexible Kotlin code. A simple trick with real impact.\n📖 [Article] Learning Ktor Through a Spring Boot Lens. Part 1 – Rafał Maciak compares Spring Boot and Ktor to help developers familiar with Spring get up to speed with Kotlin-first backend development.\n🎥 [Video] Spring for GraphQL with Kotlin Coroutines – Piotr Wolak walks you through building reactive GraphQL APIs with Spring for GraphQL and Kotlin coroutines.\n📖 [Article series] Kotlin + gRPC by Lucas Fugisawa – A comprehensive series covering real-world practices for building gRPC services in Kotlin:\nBuild your first service in four steps\nEnhance Protobuf schema design with Optional, Repeated, Maps, Enums, Oneof and backwards compatibility\nNesting, Composition, Validations, and Idiomatic Builder DSL\nStreaming, Deadlines, and Structured Error Handling\nTooling, CI/CD, and Architectural Practices\n🎥 [Video] Ktor Server Full Crash Course For Beginners | Build a REST Api in Ktor with JWT Auth | Blog CRUD Api – Sunil Kumar shares a complete beginner-friendly guide to building a secure REST API with Ktor and JWT authentication.\nWant to be featured next?\nIf you’re building backends with Kotlin and sharing your knowledge – whether it’s a blog post, video, or sample project – tag it with #KotlinServerSide.\nWe regularly browse community content and highlight the most useful picks on our blog, @Kotlin X, and Kotlin Slack (get an invite here).\nKeep sharing, and we’ll keep amplifying.",
        "dc:creator": "Alyona Chernyaeva",
        "content": "The Kotlin community keeps delivering valuable content for server-side development. From gRPC best practices to hands-on Ktor tutorials and Spring integrations, here are the latest highlights. 📖 [Article] Kotlin Tips and Tricks You May Not Know: #6 — Inject Functions in Spring Boot – Elena van Engelen-Maslova shares how to inject functions in Spring Boot [&#8230;]",
        "contentSnippet": "The Kotlin community keeps delivering valuable content for server-side development. From gRPC best practices to hands-on Ktor tutorials and Spring integrations, here are the latest highlights. 📖 [Article] Kotlin Tips and Tricks You May Not Know: #6 — Inject Functions in Spring Boot – Elena van Engelen-Maslova shares how to inject functions in Spring Boot […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=574026",
        "isoDate": "2025-06-10T11:06:26.000Z"
      },
      {
        "creator": "Lena Morozova",
        "title": "How PhpStorm Helps Maintain PHP Open-Source Projects: Interviews and Real-World Examples",
        "link": "https://blog.jetbrains.com/blog/2025/06/10/how-phpstorm-helps-maintain-php-open-source-projects-interviews-and-real-world-examples/",
        "pubDate": "Tue, 10 Jun 2025 10:00:00 +0000",
        "content:encodedSnippet": "The PHP ecosystem is driven by passionate developers building tools that power everything from content management systems right the way through to testing libraries and database layers. Behind each project is a dedicated team working to modernize code, improve performance, and move the ecosystem forward.\nThe fact that many of these teams choose PhpStorm to support their work is a source of pride for all of us at JetBrains and serves as proof of the positive impact on the wider PHP community of our free and discounted license program for open-source contributors. This post highlights standout PHP projects and the people behind them. Whether they’re debugging complex systems or maintaining test suites, PhpStorm helps streamline workflows, reduce friction, and free up time for what matters most – building.\nPHPUnit\nSebastian Bergmann started PHPUnit as a university project, prompted by a discussion with a professor who thought that a tool like JUnit could not be implemented for PHP. Since then, PHPUnit has been the backbone of PHP testing for over two decades and has shaped how PHP developers write and maintain tests. It remains the go-to testing framework for PHP projects of all sizes.\nI tried every PHP IDE until I got my hands on PhpStorm – the first one that made me more productive, not less. It felt like home right away. I can’t imagine working without its code navigation and refactoring tools.\n— Sebastian Bergmann, PHPUnit creator\nThe latest release, PHPUnit 12, prioritizes code clarity. A major improvement is the clear distinction between test stubs and mock objects via dedicated APIs. This architectural shift simplifies test code maintenance and readability.\nLooking ahead, PHPUnit will introduce support for the Open Test Reporting format – a modern, extensible alternative to JUnit XML. Initial support is planned for PHPUnit 12.2 (June 2025), with JUnit XML being deprecated in PHPUnit 13 and removed in PHPUnit 14.\nDoctrine DBAL\nDoctrine DBAL is a widely used database abstraction layer that gives PHP developers a portable, object-oriented API to interact with SQL databases. It powers a wide range of applications and frameworks across the PHP ecosystem.\nI use PhpStorm daily to run PHPUnit tests locally with various configurations, interact with different databases, manage Docker containers, and run static analysis.\n— Sergei Morozov, Doctrine DBAL maintainer\nWhile the project is mature and provides most of the essential functionality, ongoing work includes a fundamental rework of schema management, addressing limitations of the original architecture, and ensuring better support for evolving SQL standards and database platforms.\nCodeIgniter\nCodeIgniter was created as a lightweight, high-performance PHP framework that prioritizes simplicity and developer freedom. It empowers developers to build on their own terms without rigid conventions – a core philosophy that continues to define its appeal.\nCodeIgniter v4 maintains the core principles of its predecessor while embracing modern software development practices, such as robust testing and integration with tools like PHPStan, Psalm, and Rector.\nOne of CodeIgniter v4’s key strengths is its alignment with PHP best practices, allowing PhpStorm to work seamlessly out of the box – no extra plugins needed. The IDE instantly understands CodeIgniter’s patterns and conventions, offering intelligent code completion that streamlines development. This built-in compatibility creates an exceptionally productive experience for our contributors.\n— Matt Gatner, CodeIgniter contributor\nThe team continues to evolve CI4, focusing on performance, modularity, and a smooth developer experience. Upcoming releases aim to stabilize task and queue packages, expand the modular package library, and improve compatibility with the latest PHP versions – all while maintaining the project’s original vision.\nJoomla!\nJoomla! is a powerful open-source content management system sustained by a global community of volunteers. Its mission is to provide a multilingual, flexible, and secure platform that empowers individuals, small businesses, and nonprofits to publish and collaborate online – all without the steep learning curve of alternative systems.\nPhpStorm’s static code analyzer helped me clean up docblocks and better manage the framework. It understands Joomla deeply, making development smoother.\n— Hannes Papenberg, Joomla Maintainer\nPhpStorm shows me how files are connected, catches syntax errors early, and allows me to focus on actual client needs. It gives me a massive advantage over other web developers who don’t see the value of using it in their daily processes.\n— Adam Melcher, Joomla Contributor\nAs a Joomla core developer, PhpStorm has helped me in so many ways. The step debugger, which I use pretty much every single day, helps track down bugs, understand code flows, and generally, seeing what is going on under the hood is precious. The Joomla plugin adds an extra layer of usability as it understands the Joomla codebase and makes navigating the code a lot easier.\n— Roland Dalmulder, Joomla Contributor\nLooking ahead, Joomla 6 is scheduled for release on October 14, 2025. It will bring further codebase modernization, better SEO tools, and a built-in health checker – continuing Joomla’s mission to make publishing on the web more inclusive and flexible.\nThese projects represent just a small part of the global open-source effort, but they reflect the values we admire most: curiosity, craftsmanship, and care for the developer community.\nWhile each project has its own focus, they all rely on consistent, powerful workflows to maintain high standards and move forward with clarity – and JetBrains is proud to support them in this endeavor. If you’re an open-source developer, you might be eligible for a free or discounted PhpStorm license – read more about the available options to see if you qualify.\nWhat’s more, we’re also delighted to be able to host a celebration of the passion and progress of the PHP community in the form of PHPverse 2025 – a free online event taking place on June 17, 2025, where PHP’s most influential voices will share their insights on the language’s evolution and its future. Join us for inspiring talks, discussions, Q&As, and a special PHP anniversary merch giveaway.\nSign Up for Free",
        "dc:creator": "Lena Morozova",
        "content": "The PHP ecosystem is driven by passionate developers building tools that power everything from content management systems right the way through to testing libraries and database layers. Behind each project is a dedicated team working to modernize code, improve performance, and move the ecosystem forward. The fact that many of these teams choose PhpStorm to [&#8230;]",
        "contentSnippet": "The PHP ecosystem is driven by passionate developers building tools that power everything from content management systems right the way through to testing libraries and database layers. Behind each project is a dedicated team working to modernize code, improve performance, and move the ecosystem forward. The fact that many of these teams choose PhpStorm to […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=568864",
        "categories": [
          "community",
          "community-support",
          "open-source-program",
          "oss-projects"
        ],
        "isoDate": "2025-06-10T10:00:00.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Simona Liao",
        "title": "Next edit suggestions available in Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/next-edit-suggestions-available-in-visual-studio-github-copilot/",
        "pubDate": "Mon, 09 Jun 2025 15:00:39 +0000",
        "content:encodedSnippet": "GitHub Copilot code completions, or gray text, are specialized in autocompleting unfinished code or providing helpful template code. In reality, coding activities are more diverse than writing new code. What if Copilot could better assist your coding not only with code generation, but your code editing activities as well?\nWe are excited to announce next edit suggestions, or NES for short, is now available in Visual Studio 2022 17.14 to further improve your coding experience. NES leverages the previous edits made and predicts the next edit to come, whether it’s an insertion, deletion, or mix of both. Unlike Copilot completions which are limited to generating suggestions at your caret location, NES can support you anywhere in your file, where the next edit is most likely to occur.\nExample usage scenarios\nNext edit suggestions can be helpful in a variety of scenarios, not only making obvious repetitive changes like renaming, but also more logical changes when you are adding/removing variables or changing the intention of a method. Here are some examples:\n1. Refactoring a 2D Point class to 3D Point:\ndocument.createElement('video');\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Point3-26-1.mp4\n\n2. Update the code syntax to modern C++ using STL:\nNote that NES is not just making repetitive changes to updating all “printf() “ to “std::cout“, but also updating other syntax such as “fgets()“.\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Migration3-28-1.mp4\n\n3. Make logical changes in response to a newly added variable:\nNES responds quickly to the new variable, which adds the maximum number of guesses a player can make in a game, and Copilot Completions also jumps in to help.\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/AddingVariable3-28.mp4\n\n\nGetting started with next edit suggestions\nEnable NES via Tools > Options > GitHub > Copilot > Copilot Completions > Enable Next Edit Suggestions.\nLike completions, all you need to do to get NES is to start coding!\nWhen there is an available edit suggestion, it could be presented in a diff view where the red diff indicates the original code you had, and the green indicates the new one suggested by Copilot to clearly shows any replacement or deletion of your original code.\nIf the edit is on a different line than the one you are on now, it will suggest you Tab to Navigate to the corresponding line first. The arrow in the hint bar indicates where the next edit is located. You won’t need to manually search for related edits anymore; NES will lead the way!\n\nAfter you are on the same line as the edit, you can Tab to Accept the suggestion.\n\nIn addition to the hint bars, an arrow in the gutter also pops up to indicate that there is an edit suggestion available. You can click on the arrow to explore the edit suggestion menu. This menu allows you to interact with NES using a mouse, when you don’t want to press the Tab key.\n\nSee next edit suggestions explained step-by-step:\n\nPlease give NES a try today to let it assist you in your logical editing flow! If you have any feedback, our team would love to hear from you through Developer Community to help us keep iterating on and improving NES!\nCheck out the new Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nAppreciation for your feedback\nYour feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post Next edit suggestions available in Visual Studio appeared first on Visual Studio Blog.",
        "enclosure": {
          "url": "https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/06/Point3-26-1.mp4",
          "length": "4636352",
          "type": "video/mp4"
        },
        "dc:creator": "Simona Liao",
        "comments": "https://devblogs.microsoft.com/visualstudio/next-edit-suggestions-available-in-visual-studio-github-copilot/#comments",
        "content": "<p>GitHub Copilot code completions, or gray text, are specialized in autocompleting unfinished code or providing helpful template code. In reality, coding activities are more diverse than writing new code. What if Copilot could better assist your coding not only with code generation, but your code editing activities as well? We are excited to announce next [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/next-edit-suggestions-available-in-visual-studio-github-copilot/\">Next edit suggestions available in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "GitHub Copilot code completions, or gray text, are specialized in autocompleting unfinished code or providing helpful template code. In reality, coding activities are more diverse than writing new code. What if Copilot could better assist your coding not only with code generation, but your code editing activities as well? We are excited to announce next […]\nThe post Next edit suggestions available in Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253452",
        "categories": [
          "Artificial Intelligence",
          "GitHub Copilot",
          "Productivity",
          "Visual Studio",
          "Copilot",
          "Next Edits Suggestion"
        ],
        "isoDate": "2025-06-09T15:00:39.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "데이터 노가다 실수담 - 11th",
        "link": "https://kangmyounghun.blogspot.com/2025/06/11th.html",
        "pubDate": "2025-06-08T05:22:00.002Z",
        "author": "강명훈",
        "content": "<div>3개의 필드로 이루어진 테이블. a가 있으면 c가 없고, c가 있으면 a가 없는 구조.&nbsp;</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEglTRqxRKnWtJ-nKPMgA45R3GK9Bg5Xr7RqruYmDlVvz_PrrrS-o_svtf1yPgHsE42PmV8OihxBvT6im71x5Gx9FXZgPZivA0ejBT0u52T73HmdTnuxDxSNp47oPcW4GXR03H31U7aPIHPFFyZ2MxV1OpVrz1cOBq_tsSfwuy-ObiHQ8hrgjVe2-aroht3K/s1246/table.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1246\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEglTRqxRKnWtJ-nKPMgA45R3GK9Bg5Xr7RqruYmDlVvz_PrrrS-o_svtf1yPgHsE42PmV8OihxBvT6im71x5Gx9FXZgPZivA0ejBT0u52T73HmdTnuxDxSNp47oPcW4GXR03H31U7aPIHPFFyZ2MxV1OpVrz1cOBq_tsSfwuy-ObiHQ8hrgjVe2-aroht3K/s16000/table.png\" /></a></div><div><br /></div><div><span><a name='more'></a></span>이때 a, c는 b와 연결해야 정확한 의미를 갖는다.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh7w1VvCJky1n8r2OOYC7ErAtrCNutJJU_0kXlZXALOIVBki6tw3vbeNcCxSWCon7bTY9HfxLkUDoczD12_YwvYQlne5fUxDPnzmjzB90S3JzWnHHyEeXt33XL23x1q-j2NildLwEFjlq5tBBlfVUM0AxrzbrkRpyUe8n4Skk_cm-UZiXGl_CqkX1XCELxj/s1914/table2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1914\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh7w1VvCJky1n8r2OOYC7ErAtrCNutJJU_0kXlZXALOIVBki6tw3vbeNcCxSWCon7bTY9HfxLkUDoczD12_YwvYQlne5fUxDPnzmjzB90S3JzWnHHyEeXt33XL23x1q-j2NildLwEFjlq5tBBlfVUM0AxrzbrkRpyUe8n4Skk_cm-UZiXGl_CqkX1XCELxj/s16000/table2.png\" /></a></div><div><br /></div><div>case 조건문으로 바꾸면 이런 식.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIPog9VDxccxwtbkuD8wj41LOcDs4PToJgrhpw6DHH4TeQxsvTyAWlIEXUjeYhfCYG3bDNFcigs1qKXCcUdw-dVdNWZgzuHkf_A-c3jSLEFNlgrGL3rtUKkJpFfLuuywMdH45P62sJFtcbrKzfito0EHCoLT97_jOevoBzZ8EtgB9RVKImbX1k1uVmk-7w/s1694/table3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1694\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIPog9VDxccxwtbkuD8wj41LOcDs4PToJgrhpw6DHH4TeQxsvTyAWlIEXUjeYhfCYG3bDNFcigs1qKXCcUdw-dVdNWZgzuHkf_A-c3jSLEFNlgrGL3rtUKkJpFfLuuywMdH45P62sJFtcbrKzfito0EHCoLT97_jOevoBzZ8EtgB9RVKImbX1k1uVmk-7w/s16000/table3.png\" /></a></div><br /><div><b><span style=\"font-size: x-large;\">b만 존재하는 상태</span></b><b><span style=\"font-size: x-large;\">도 추가하려면?&nbsp;</span></b></div><div><br /></div><div>다음 조건 로직은 동작하지 않는다. 원하는 마지막 조건은 a, c 모두 없는 상태인데, 선행 조건을 제외하면 남는 조건은 a, c 모두 존재하는 상태뿐이기 때문.&nbsp;</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgztZ_se-G3ivpGoM2dujOfN1OSh860H3e2MjQ87EVqzQZnWqDqRsNDfiC-2GOgSvsp58Z4hVqv866tuyisZDq8X57DQ-MWDwzz14Qi6LkshrGVnHX9PQhnob5O9pxk2asWB5csEngRqnAEd34kRmyQ7i7hbsB6z67EXCciE8bfnsf5CFREPWFyAbjMcqYG/s1634/table4.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1634\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgztZ_se-G3ivpGoM2dujOfN1OSh860H3e2MjQ87EVqzQZnWqDqRsNDfiC-2GOgSvsp58Z4hVqv866tuyisZDq8X57DQ-MWDwzz14Qi6LkshrGVnHX9PQhnob5O9pxk2asWB5csEngRqnAEd34kRmyQ7i7hbsB6z67EXCciE8bfnsf5CFREPWFyAbjMcqYG/s16000/table4.png\" /></a></div><br /><div>a, c 모두 없는 상태를 추가하려면 a, c가 존재하는 상태를 먼저 검사하거나</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWDkyy_xIHBpOlfm2Uh3SX1wZSvdGqc-89GeVgNUjePubq6p6gstsEmnhXwuh5A-qVcE7tGJlIqevqJgls9TiEy8vuNDexl6yn-1D33pbcxQpkKsUgBGsHFM5fPedGwwt8s2bPnk4GhHYxnzfl3i4AAshoB25jbqb3nfYIPRwBUIfJG8WiZbVVkBapZF_p/s1548/table5.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1548\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWDkyy_xIHBpOlfm2Uh3SX1wZSvdGqc-89GeVgNUjePubq6p6gstsEmnhXwuh5A-qVcE7tGJlIqevqJgls9TiEy8vuNDexl6yn-1D33pbcxQpkKsUgBGsHFM5fPedGwwt8s2bPnk4GhHYxnzfl3i4AAshoB25jbqb3nfYIPRwBUIfJG8WiZbVVkBapZF_p/s16000/table5.png\" /></a></div><div><br /></div><div>a, c 모두 없는 상태를 먼저 검사해야 한다. 별로 복잡한 로직도 아닌데 이걸 헤맸네. 이제 isnull과 isnotnull 안 헷갈릴 듯<span style=\"font-size: x-small;\">(..)</span></div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj5Jo9FrHisIOWhXoaWM0ifAjFo1jj7PZNZrOVVFUbSC3yV7oBoSGRSr886OGX0kEIiXznBEM_G8X144JvuJ3q9SxE173jOXtiFFuD0vRXKAnltZxTLOGUb-rql-TkID7-tq5SyId-6RFp6QXu1Nmfb5bWb7CXlJVUVxlxuRKZ1i6JD99N2RBEC-A1w6zC8/s1548/table6.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1548\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj5Jo9FrHisIOWhXoaWM0ifAjFo1jj7PZNZrOVVFUbSC3yV7oBoSGRSr886OGX0kEIiXznBEM_G8X144JvuJ3q9SxE173jOXtiFFuD0vRXKAnltZxTLOGUb-rql-TkID7-tq5SyId-6RFp6QXu1Nmfb5bWb7CXlJVUVxlxuRKZ1i6JD99N2RBEC-A1w6zC8/s16000/table6.png\" /></a></div><div><br /></div><div>규환님 커피 보내드립니다^^</div><div><br /></div><div><b>관련 글</b></div><div><ul style=\"text-align: left;\"><li><a href=\"https://kangmyounghun.blogspot.com/2025/04/10th.html\">데이터 노가다 실수담 - 10th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2019/01/blog-post_90.html\" target=\"\">데이터 노가다 실수담</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/06/blog-post.html\">평균의 함정</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/09/blog-post_27.html\" target=\"\">데이터 분석이 쉬워지는 비법</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/12/blog-post.html\" target=\"\">데이터 분석에 필요한 자질은 뭘까?</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2024/02/splunk_25.html\" target=\"\">Splunk의 조건문</a></li></ul></div>",
        "contentSnippet": "3개의 필드로 이루어진 테이블. a가 있으면 c가 없고, c가 있으면 a가 없는 구조. \n\n\n\n\n\n이때 a, c는 b와 연결해야 정확한 의미를 갖는다.\n\n\n\n\n\ncase 조건문으로 바꾸면 이런 식.\n\n\n\n\nb만 존재하는 상태도 추가하려면? \n\n\n다음 조건 로직은 동작하지 않는다. 원하는 마지막 조건은 a, c 모두 없는 상태인데, 선행 조건을 제외하면 남는 조건은 a, c 모두 존재하는 상태뿐이기 때문. \n\n\n\n\na, c 모두 없는 상태를 추가하려면 a, c가 존재하는 상태를 먼저 검사하거나\n\n\n\n\n\na, c 모두 없는 상태를 먼저 검사해야 한다. 별로 복잡한 로직도 아닌데 이걸 헤맸네. 이제 isnull과 isnotnull 안 헷갈릴 듯(..)\n\n\n\n\n\n규환님 커피 보내드립니다^^\n\n\n관련 글\n\n데이터 노가다 실수담 - 10th\n데이터 노가다 실수담\n평균의 함정\n데이터 분석이 쉬워지는 비법\n데이터 분석에 필요한 자질은 뭘까?\nSplunk의 조건문",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-2136228877451541718",
        "isoDate": "2025-06-08T05:22:00.002Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Lael's World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "AI 챗봇 vs 웹사이트, 어떤 정보원을 더 신뢰해야 할까?",
        "link": "http://muzbox.tistory.com/483605",
        "pubDate": "Wed, 11 Jun 2025 09:45:41 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483605#entry483605comment",
        "content": "<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #e0f7fa; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px; border: 1px solid #b2ebf2;\"><b>AI 챗봇 vs. 웹사이트, 어떤 정보원을 믿어야 할까요?</b> 온라인 정보의 홍수 속에서 AI 챗봇과 웹사이트 중 어떤 정보원을 더 신뢰해야 할지 고민해 본 적 있으신가요? 이 글을 통해 두 정보원의 장단점을 비교하고, 현명하게 정보를 얻는 방법을 알려드릴게요.</div>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/TOFLj/btsOw4MdKzB/RK5EsG1rQgP6Pa21ybP0Kk/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/TOFLj/btsOw4MdKzB/RK5EsG1rQgP6Pa21ybP0Kk/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/TOFLj/btsOw4MdKzB/RK5EsG1rQgP6Pa21ybP0Kk/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FTOFLj%2FbtsOw4MdKzB%2FRK5EsG1rQgP6Pa21ybP0Kk%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"AI 챗봇 vs 웹사이트, 어떤 정보원을 더 신뢰해야 할까?\" loading=\"lazy\" width=\"1280\" height=\"853\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;요즘 저는 자료 조사를 할 때마다 AI 챗봇의 편리함에 감탄하고 있어요. 궁금한 점을 질문하면 순식간에 답을 해주니 정말 신기하죠? 그런데 문득 이런 생각이 들었어요. '과연 이 정보들을 어디까지 믿을 수 있을까?' 여러분도 저와 같은 고민을 해보셨을 것 같아요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">인터넷이 발달하면서 정보의 양은 폭발적으로 늘었지만, 그만큼 어떤 정보가 진짜인지, 어떤 정보를 믿고 따라야 할지 혼란스러울 때가 많아요. 특히 AI 챗봇이 등장하면서 이 고민은 더 깊어진 것 같은데요. 웹사이트를 직접 찾아다니며 얻는 정보와, AI가 요약해주는 정보, 과연 어떤 쪽이 더 신뢰할 수 있을까요? 오늘 이 글에서는 AI 챗봇과 웹사이트의 장단점을 파헤쳐 보고, 여러분이 현명한 정보 탐색자가 될 수 있도록 저의 경험과 생각을 나눠볼까 합니다!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>AI 챗봇, 빠르고 편리하지만...  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">AI 챗봇은 정말 편리해요. 제가 예전에 어떤 주제에 대해 찾아야 할 때, 여러 웹사이트를 일일이 방문하고 필요한 정보를 취합하느라 시간이 오래 걸렸거든요. 그런데 챗봇은 딱! 제가 원하는 질문에 대한 핵심 정보만 쏙쏙 뽑아주더라고요. 이게 바로 AI 챗봇의 가장 큰 장점 같아요. <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">정보 접근성이 뛰어나고, 답변 속도가 엄청 빠르다는 점</span>이죠. 복잡한 내용을 간결하게 요약해주니 바쁜 현대인에게는 더할 나위 없이 좋고요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">하지만 편리함 뒤에는 늘 그림자가 있는 법! AI 챗봇은 아직 완벽하지 않아요. 때로는 잘못된 정보를 알려주거나, 맥락에 맞지 않는 답변을 하기도 해요. 제가 경험한 바로는, 특정 주제에 대한 깊이 있는 정보를 찾을 때는 한계가 있더라고요. 예를 들어, 전문적인 의학 정보나 법률 자문 같은 민감한 분야에서는 챗봇의 답변을 맹신하기 어렵죠.</p>\n<div style=\"background-color: #e0f2f7; border-left: 4px solid #4dd0e1; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />AI 챗봇은 방대한 데이터를 학습하지만, 그 데이터가 항상 최신이거나 100% 정확하다고 보장할 수는 없어요. 특히 논쟁의 여지가 있거나 빠르게 변화하는 정보는 꼭 교차 검증이 필요하답니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>전문 웹사이트, 깊이 있고 신뢰할 수 있지만...  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">그럼 전통적인 방식인 웹사이트는 어떨까요? 저는 예전부터 특정 분야의 정보를 찾을 때는 늘 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">권위 있는 기관이나 전문가가 운영하는 웹사이트</span>를 선호했어요. 왜냐하면 그런 곳들은 정보의 출처가 명확하고, 내용에 대한 책임감을 가지고 작성하기 때문이죠. 예를 들어, 질병에 대한 정보를 찾을 때는 대한의사협회나 건강보험심사평가원 같은 공식 웹사이트를 찾아보는 것이 가장 확실하잖아요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">웹사이트는 단순히 정보를 제공하는 것을 넘어, 때로는 특정 주제에 대한 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">깊이 있는 통찰력이나 다양한 관점</span>을 제시하기도 해요. 저도 블로그를 운영하면서 제 경험과 생각을 담아 글을 쓰는데, 이런 글들이 다른 사람들에게 도움이 될 때 큰 보람을 느끼거든요. 잘 알려진 웹사이트는 특정 주제에 대한 전문가의 섬세한 의견을 제공할 수 있다는 점이 정말 매력적이에요.</p>\n<h3 style=\"font-size: 20px; color: #00796b; margin: 25px 0 12px;\" data-ke-size=\"size23\"><b>AI 챗봇 vs. 전문 웹사이트 비교</b></h3>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0; background-color: #e0f7fa; font-weight: bold;\">구분</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0; background-color: #e0f7fa; font-weight: bold;\">AI 챗봇</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0; background-color: #e0f7fa; font-weight: bold;\">전문 웹사이트</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0; background-color: #e0f7fa; font-weight: bold;\">기타 정보</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">정보 취득 속도</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">매우 빠름 (즉각적인 답변)</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">상대적으로 느림 (탐색 필요)</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">빠른 검색이 필요한 경우</td>\n</tr>\n<tr style=\"background-color: #f5f5f5;\">\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">정보 신뢰도</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">주의 필요 (환각 현상 가능)</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">높음 (전문가 검토, 출처 명시)</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">중요 정보일수록 웹사이트 추천</td>\n</tr>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">정보의 깊이</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">요약 위주 (피상적일 수 있음)</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">깊이 있는 정보, 다양한 관점</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">전문 지식이 필요한 경우</td>\n</tr>\n<tr style=\"background-color: #f5f5f5;\">\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">활용 분야</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">빠른 질문, 아이디어 얻기</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">심층 학습, 검증된 정보 획득</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">용도에 맞게 선택</td>\n</tr>\n</tbody>\n</table>\n<div style=\"background-color: #fffde7; border-left: 4px solid #fbc02d; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 주의하세요!</b><br />웹사이트도 모든 정보가 100% 정확한 것은 아니에요. 특히 개인 블로그나 커뮤니티 게시글은 사실과 다른 정보가 있을 수 있으니, 항상 비판적인 시각으로 정보를 받아들이고 필요하다면 여러 출처를 확인하는 습관을 들이는 것이 중요해요.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>그렇다면, 현명한 정보 탐색법은?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">결론적으로, AI 챗봇과 웹사이트는 서로를 완벽하게 대체할 수 없어요. 각자의 장단점이 명확하기 때문에, 상황에 맞게 적절히 활용하는 지혜가 필요하다고 생각해요. 제가 주로 쓰는 방법은 이렇습니다!</p>\n<div style=\"background-color: #e0f7fa; padding: 18px; border-radius: 8px; margin: 20px 0; border: 1px solid #b2ebf2;\">\n<h3 style=\"font-size: 20px; color: #333; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>  질문 유형별 정보원 선택 가이드</b></h3>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\"><b>정보 탐색 효율을 높이는 공식 = AI 챗봇(빠른 정보) + 웹사이트(심층 검증)</b></p>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">제가 직접 시도해보며 얻은 정보 탐색 팁을 알려드릴게요:</p>\n<div style=\"background-color: #e0f7fa; padding: 18px; border-radius: 8px; margin: 20px 0; border: 1px solid #b2ebf2;\">\n<h3 style=\"font-size: 20px; color: #333; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>정보 유형별 솔루션</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>기본 지식/정의 (Basic Knowledge/Definition):</b>\n<ul style=\"margin: 5px 0 0 15px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>활용 도구:</b> AI 챗봇 (1차), 웹사이트 (2차)</li>\n<li style=\"margin-bottom: 5px;\"><b>활용 방법:</b> AI 챗봇에게 먼저 물어 기본적인 개념과 핵심 키워드를 빠르게 파악하세요. 이후, 검색된 키워드를 활용하여 위키백과, 지식백과 또는 관련 전문 기관의 웹사이트에서 상세 정의와 배경 정보를 확인하고 이해를 심화하세요.</li>\n</ul>\n</li>\n<li style=\"margin-bottom: 8px;\"><b>최신 뉴스/이슈 (Current News/Issues):</b>\n<ul style=\"margin: 5px 0 0 15px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>활용 도구:</b> 주요 언론사 웹사이트, 뉴스 포털 (1차), AI 챗봇 (2차)</li>\n<li style=\"margin-bottom: 5px;\"><b>활용 방법:</b> 실시간성이 중요한 정보이므로, 신뢰할 수 있는 언론사의 공식 웹사이트나 주요 뉴스 포털을 직접 방문하여 사실 관계를 파악하는 것이 우선입니다. AI 챗봇은 해당 이슈의 간략한 요약이나 관련 질문을 던지는 데 활용할 수 있습니다.</li>\n</ul>\n</li>\n<li style=\"margin-bottom: 8px;\"><b>건강/의료 정보 (Health/Medical Information):</b>\n<ul style=\"margin: 5px 0 0 15px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>활용 도구:</b> 공식 의료기관 웹사이트, 전문의 웹사이트 (필수)</li>\n<li style=\"margin-bottom: 5px;\"><b>활용 방법:</b> 생명과 직결될 수 있는 정보이므로, <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">반드시 대학병원, 대한의사협회, 질병관리청 등 공신력 있는 기관의 웹사이트</span>를 통해 정보를 얻어야 합니다. AI 챗봇의 답변은 참고용으로만 사용하고, 의심되는 내용은 반드시 전문가와 상담하세요.</li>\n</ul>\n</li>\n<li style=\"margin-bottom: 8px;\"><b>법률/재무 자문 (Legal/Financial Advice):</b>\n<ul style=\"margin: 5px 0 0 15px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>활용 도구:</b> 법무법인 웹사이트, 정부 법률/재무 정보 웹사이트 (필수)</li>\n<li style=\"margin-bottom: 5px;\"><b>활용 방법:</b> 전문성과 책임이 요구되는 분야이므로, <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">정부 법률정보센터, 금융감독원, 전문 법무법인/회계법인의 공식 웹사이트</span>를 통해 정확한 정보를 확인해야 합니다. AI 챗봇은 관련 법률 용어의 정의나 기본적인 절차를 이해하는 데 보조적으로 활용할 수 있습니다.</li>\n</ul>\n</li>\n<li style=\"margin-bottom: 0;\"><b>개인 의견/경험 (Personal Opinion/Experience):</b>\n<ul style=\"margin: 5px 0 0 15px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>활용 도구:</b> 개인 블로그, 커뮤니티, AI 챗봇</li>\n<li style=\"margin-bottom: 5px;\"><b>활용 방법:</b> 다양한 관점이나 실제 사용자 경험을 파악할 때 유용합니다. 하지만 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">주관적인 내용이 많으므로, 사실 여부는 반드시 다른 신뢰할 수 있는 출처를 통해 교차 검증</span>해야 합니다. AI 챗봇은 여러 사람의 의견을 종합하거나 유사한 사례를 찾아보는 데 도움을 줄 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>AI 시대의 현명한 정보 활용 전략  &zwj; &zwj; </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">지금까지 AI 챗봇과 웹사이트의 특징을 살펴봤는데요, 결국 중요한 건 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">어떤 도구를 어떻게 활용하느냐</span>인 것 같아요. 저는 개인적으로 이렇게 정보 활용 전략을 세웠어요.</p>\n<div style=\"background-color: #e0f2f7; border-left: 4px solid #4dd0e1; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />AI 챗봇이 제공하는 정보는 1차적인 참고 자료로 활용하고, 최종적인 판단이나 중요한 결정은 반드시 공신력 있는 웹사이트나 전문가의 도움을 받는 것이 안전해요.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>실전 예시: 논문 자료 찾기  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">제가 최근에 블로그 글을 쓰면서 '데이터 시각화 트렌드'에 대한 논문 자료가 필요했던 적이 있어요. 이때 제가 어떻게 정보를 찾아봤는지 예시를 들어볼게요.</p>\n<div style=\"background-color: #e0f7fa; padding: 18px; border-radius: 8px; margin: 20px 0; border: 1px solid #b2ebf2;\">\n<h3 style=\"font-size: 20px; color: #333; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>사례: 논문 자료 탐색 과정</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 6px;\">1단계: <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">AI 챗봇에게 질문</span> - \"데이터 시각화 최신 트렌드 논문 검색 키워드 알려줘\"</li>\n<li style=\"margin-bottom: 0;\">2단계: <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">키워드 조합 후 학술 검색 사이트 이동</span> - 챗봇이 추천해준 키워드를 바탕으로 Google Scholar, RISS 같은 학술 검색 사이트에 접속</li>\n</ul>\n<h3 style=\"font-size: 20px; color: #333; margin: 18px 0 12px;\" data-ke-size=\"size23\"><b>계산 과정</b></h3>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">1) 첫 번째 단계: 검색 결과에서 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">제목과 초록을 읽고 관련성 높은 논문 선별</span></p>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">2) 두 번째 단계: 선별된 논문의 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">본문 전체를 읽고 필요한 데이터와 주장 추출</span></p>\n<h3 style=\"font-size: 20px; color: #333; margin: 18px 0 12px;\" data-ke-size=\"size23\"><b>최종 결과</b></h3>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">- 결과 항목 1: AI 챗봇 덕분에 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">초기 검색 시간 절약</span> (방향성 제시)</p>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">- 결과 항목 2: 전문 웹사이트를 통해 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">신뢰할 수 있는 심층 정보 확보</span> (정확성 보장)</p>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이처럼 AI 챗봇은 정보 탐색의 시작점을 제공하고, 전문 웹사이트는 그 정보를 심화하고 검증하는 역할을 해준다고 생각해요. 두 가지를 함께 활용하면 훨씬 효율적이고 정확하게 정보를 얻을 수 있답니다!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>마무리: 핵심 내용 요약  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">오늘 우리는 AI 챗봇과 웹사이트 중 어떤 정보원을 더 신뢰해야 할지에 대해 이야기해 봤어요. 두 가지 모두 중요한 정보원이지만, 각자의 역할과 장단점을 이해하고 현명하게 활용하는 것이 가장 중요해요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">궁금한 점이 있다면 언제든지 댓글로 물어봐주세요! 여러분의 현명한 정보 생활을 응원합니다~  </p>\n<div style=\"border-top: 1px dashed #e0e0e0; margin: 30px 0;\">&nbsp;</div>\n<div>\n<style>\n    .single-summary-card-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 20px 10px;\n        background-color: #e0f7fa; /* Light Teal for container background */\n        margin: 20px 0;\n    }\n    .single-summary-card {\n        width: 100%;\n        max-width: 700px;\n        /* aspect-ratio: 16 / 9; */ /* 모바일 반응형을 위해 제거 */\n        background-color: #ffffff;\n        border-radius: 12px;\n        box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n        padding: 25px;\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n        border: 1px solid #b2ebf2; /* Teal border for card */\n        box-sizing: border-box; /* 패딩과 테두리가 요소의 전체 너비와 높이에 포함되도록 보장 */\n        height: auto; /* 기본 높이를 자동으로 설정하여 콘텐츠에 따라 유연하게 조절 */\n        min-height: unset; /* aspect-ratio로 인한 최소 높이 제한 해제 */\n    }\n    .single-summary-card .card-header {\n        display: flex;\n        align-items: center;\n        border-bottom: 2px solid #00796b; /* Dark Teal border for header */\n        padding-bottom: 12px;\n        margin-bottom: 12px;\n    }\n    .single-summary-card .card-header-icon {\n        font-size: 34px;\n        color: #00796b; /* Dark Teal icon */\n        margin-right: 14px;\n    }\n    .single-summary-card .card-header h3 {\n        font-size: 26px;\n        color: #00796b; /* Dark Teal header text */\n        margin: 0;\n        line-height: 1.3;\n        font-weight: 700;\n    }\n    .single-summary-card .card-content {\n        flex-grow: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        font-size: 17px;\n        line-height: 1.65;\n        color: #333; /* Main text color */\n    }\n    .single-summary-card .card-content .section {\n        margin-bottom: 10px;\n    }\n    .single-summary-card .card-content strong {\n        color: #004d40; /* Darker Teal for strong text */\n        font-weight: 600;\n    }\n    .single-summary-card .card-content .highlight {\n        background-color: #fff9c4; /* Yellow highlight as per original theme */\n        padding: 2px 6px;\n        border-radius: 3px;\n        font-weight: bold;\n    }\n    .single-summary-card .card-content .formula {\n        background-color: #e0f7fa; /* Light Teal formula background */\n        padding: 6px 10px;\n        border-radius: 4px;\n        font-size: 0.9em;\n        text-align: center;\n        margin-top: 5px;\n        color: #004d40; /* Darkest Teal for formula text */\n    }\n    .single-summary-card .card-footer {\n        font-size: 14px;\n        color: #777;\n        text-align: center;\n        padding-top: 12px;\n        border-top: 1px dashed #b2ebf2; /* Light Teal dashed border for footer */\n        margin-top: auto;\n    }\n\n    /* 모바일 맞춤 조정: 768px 이하 */\n    @media (max-width: 768px) {\n        .single-summary-card {\n            padding: 18px;\n            height: auto;\n            min-height: unset;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 28px;\n            margin-right: 10px;\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 20px;\n        }\n        .single-summary-card .card-content {\n            font-size: 15px;\n            line-height: 1.5;\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 8px;\n        }\n        .single-summary-card .card-content .formula {\n            padding: 5px 8px;\n            font-size: 0.85em;\n        }\n        .single-summary-card .card-footer {\n            font-size: 13px;\n            padding-top: 10px;\n        }\n    }\n\n    /* 모바일 맞춤 조정: 480px 이하 */\n    @media (max-width: 480px) {\n        .single-summary-card {\n            padding: 15px;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 26px;\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 18px;\n        }\n        .single-summary-card .card-content {\n            font-size: 14px;\n            line-height: 1.4;\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 6px;\n        }\n        .single-summary-card .card-content .formula {\n            padding: 4px 6px;\n            font-size: 0.8em;\n        }\n        .single-summary-card .card-footer {\n            font-size: 12px;\n            padding-top: 8px;\n        }\n    }\n</style>\n</div>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">AI 챗봇 vs. 웹사이트: 현명한 정보 활용 가이드</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ AI 챗봇 활용법:</b> <span class=\"highlight\">빠른 정보 탐색, 아이디어 얻기</span>에 최적화! 질문에 대한 핵심 답변을 즉시 얻을 수 있어요.</div>\n<div class=\"section\"><b>  웹사이트 활용법:</b> <span class=\"highlight\">심층 학습, 검증된 정보 획득</span>에 필수! 특히 전문적인 지식이나 신뢰도가 중요한 정보는 웹사이트를 이용하는 것이 좋아요.</div>\n<div class=\"section\"><b>  현명한 정보 탐색 공식:</b>\n<div class=\"formula\">AI 챗봇 (빠른 정보) + 웹사이트 (심층 검증) = 정확하고 효율적인 정보 습득!</div>\n</div>\n<div class=\"section\"><b> &zwj;  기억할 점:</b> <span class=\"highlight\">교차 검증은 필수</span>! AI 챗봇의 정보는 참고용, 중요한 내용은 항상 공신력 있는 출처에서 확인하세요.</div>\n</div>\n<div class=\"card-footer\">이 가이드를 통해 온라인 정보의 바다에서 길을 잃지 않고 현명하게 항해하시길 바랍니다!</div>\n</div>\n</div>\n<h2 style=\"font-size: 24px; color: #00796b; margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: AI 챗봇이 주는 정보는 믿을 수 없나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 아니요, 믿을 수 없는 것은 아니지만, <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">항상 100% 정확하다고 볼 수는 없습니다.</span> 특히 사실 확인이 필요한 정보나 중요한 결정과 관련된 정보는 반드시 웹사이트를 통해 교차 검증하는 것이 좋습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 특정 분야의 전문 정보는 어디서 찾는 게 좋을까요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">해당 분야의 공신력 있는 기관, 학술 단체, 전문 연구소 등에서 운영하는 공식 웹사이트</span>를 이용하는 것이 가장 좋습니다. 이런 곳들은 정보의 정확성과 신뢰성이 높습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: AI 챗봇과 웹사이트를 함께 활용하는 팁이 있나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 네! 챗봇에게는 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">간단한 질문이나 아이디어 얻기</span>를 요청하고, 챗봇이 제공한 키워드나 개념을 바탕으로 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">전문 웹사이트에서 심층 정보를 탐색하고 검증</span>하는 방식이 효율적입니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 개인 블로그나 커뮤니티 정보는 어떻게 걸러내야 할까요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 개인적인 의견이나 경험은 참고할 수 있지만, <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">객관적인 사실 여부를 항상 의심하고 여러 출처를 통해 교차 검증</span>해야 합니다. 특히 중요한 정보일수록 더욱 신중해야 해요.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 미래에는 AI 챗봇이 웹사이트를 완전히 대체할까요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 가까운 미래에는 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">완전히 대체하기는 어려울 것으로 보입니다.</span> AI 챗봇은 빠른 정보 요약에 강점이 있지만, 웹사이트는 깊이 있는 전문성과 인간적인 통찰력을 제공하는 데 강점이 있어 서로 보완하는 형태로 발전할 가능성이 높습니다.</div>\n</div>\n</div>\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"AI 챗봇이 주는 정보는 믿을 수 없나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  아니요, 믿을 수 없는 것은 아니지만, 항상 100% 정확하다고 볼 수는 없습니다. 특히 사실 확인이 필요한 정보나 중요한 결정과 관련된 정보는 반드시 웹사이트를 통해 교차 검증하는 것이 좋습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"특정 분야의 전문 정보는 어디서 찾는 게 좋을까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  해당 분야의 공신력 있는 기관, 학술 단체, 전문 연구소 등에서 운영하는 공식 웹사이트를 이용하는 것이 가장 좋습니다. 이런 곳들은 정보의 정확성과 신뢰성이 높습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"AI 챗봇과 웹사이트를 함께 활용하는 팁이 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  네! 챗봇에게는 간단한 질문이나 아이디어 얻기를 요청하고, 챗봇이 제공한 키워드나 개념을 바탕으로 전문 웹사이트에서 심층 정보를 탐색하고 검증하는 방식이 효율적입니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"개인 블로그나 커뮤니티 정보는 어떻게 걸러내야 할까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  개인적인 의견이나 경험은 참고할 수 있지만, 객관적인 사실 여부를 항상 의심하고 여러 출처를 통해 교차 검증해야 합니다. 특히 중요한 정보일수록 더욱 신중해야 해요.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"미래에는 AI 챗봇이 웹사이트를 완전히 대체할까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  가까운 미래에는 완전히 대체하기는 어려울 것으로 보입니다. AI 챗봇은 빠른 정보 요약에 강점이 있지만, 웹사이트는 깊이 있는 전문성과 인간적인 통찰력을 제공하는 데 강점이 있어 서로 보완하는 형태로 발전할 가능성이 높습니다.\"\n            }\n        }\n    ]\n}\n    </script>",
        "contentSnippet": "AI 챗봇 vs. 웹사이트, 어떤 정보원을 믿어야 할까요? 온라인 정보의 홍수 속에서 AI 챗봇과 웹사이트 중 어떤 정보원을 더 신뢰해야 할지 고민해 본 적 있으신가요? 이 글을 통해 두 정보원의 장단점을 비교하고, 현명하게 정보를 얻는 방법을 알려드릴게요.\n\n\n \n 요즘 저는 자료 조사를 할 때마다 AI 챗봇의 편리함에 감탄하고 있어요. 궁금한 점을 질문하면 순식간에 답을 해주니 정말 신기하죠? 그런데 문득 이런 생각이 들었어요. '과연 이 정보들을 어디까지 믿을 수 있을까?' 여러분도 저와 같은 고민을 해보셨을 것 같아요.\n \n인터넷이 발달하면서 정보의 양은 폭발적으로 늘었지만, 그만큼 어떤 정보가 진짜인지, 어떤 정보를 믿고 따라야 할지 혼란스러울 때가 많아요. 특히 AI 챗봇이 등장하면서 이 고민은 더 깊어진 것 같은데요. 웹사이트를 직접 찾아다니며 얻는 정보와, AI가 요약해주는 정보, 과연 어떤 쪽이 더 신뢰할 수 있을까요? 오늘 이 글에서는 AI 챗봇과 웹사이트의 장단점을 파헤쳐 보고, 여러분이 현명한 정보 탐색자가 될 수 있도록 저의 경험과 생각을 나눠볼까 합니다!  \n \nAI 챗봇, 빠르고 편리하지만...  \nAI 챗봇은 정말 편리해요. 제가 예전에 어떤 주제에 대해 찾아야 할 때, 여러 웹사이트를 일일이 방문하고 필요한 정보를 취합하느라 시간이 오래 걸렸거든요. 그런데 챗봇은 딱! 제가 원하는 질문에 대한 핵심 정보만 쏙쏙 뽑아주더라고요. 이게 바로 AI 챗봇의 가장 큰 장점 같아요. 정보 접근성이 뛰어나고, 답변 속도가 엄청 빠르다는 점이죠. 복잡한 내용을 간결하게 요약해주니 바쁜 현대인에게는 더할 나위 없이 좋고요.\n \n하지만 편리함 뒤에는 늘 그림자가 있는 법! AI 챗봇은 아직 완벽하지 않아요. 때로는 잘못된 정보를 알려주거나, 맥락에 맞지 않는 답변을 하기도 해요. 제가 경험한 바로는, 특정 주제에 대한 깊이 있는 정보를 찾을 때는 한계가 있더라고요. 예를 들어, 전문적인 의학 정보나 법률 자문 같은 민감한 분야에서는 챗봇의 답변을 맹신하기 어렵죠.\n  알아두세요!\nAI 챗봇은 방대한 데이터를 학습하지만, 그 데이터가 항상 최신이거나 100% 정확하다고 보장할 수는 없어요. 특히 논쟁의 여지가 있거나 빠르게 변화하는 정보는 꼭 교차 검증이 필요하답니다.\n \n전문 웹사이트, 깊이 있고 신뢰할 수 있지만...  \n그럼 전통적인 방식인 웹사이트는 어떨까요? 저는 예전부터 특정 분야의 정보를 찾을 때는 늘 권위 있는 기관이나 전문가가 운영하는 웹사이트를 선호했어요. 왜냐하면 그런 곳들은 정보의 출처가 명확하고, 내용에 대한 책임감을 가지고 작성하기 때문이죠. 예를 들어, 질병에 대한 정보를 찾을 때는 대한의사협회나 건강보험심사평가원 같은 공식 웹사이트를 찾아보는 것이 가장 확실하잖아요.\n \n웹사이트는 단순히 정보를 제공하는 것을 넘어, 때로는 특정 주제에 대한 깊이 있는 통찰력이나 다양한 관점을 제시하기도 해요. 저도 블로그를 운영하면서 제 경험과 생각을 담아 글을 쓰는데, 이런 글들이 다른 사람들에게 도움이 될 때 큰 보람을 느끼거든요. 잘 알려진 웹사이트는 특정 주제에 대한 전문가의 섬세한 의견을 제공할 수 있다는 점이 정말 매력적이에요.\nAI 챗봇 vs. 전문 웹사이트 비교\n구분\nAI 챗봇\n전문 웹사이트\n기타 정보\n\n\n\n\n정보 취득 속도\n매우 빠름 (즉각적인 답변)\n상대적으로 느림 (탐색 필요)\n빠른 검색이 필요한 경우\n\n\n정보 신뢰도\n주의 필요 (환각 현상 가능)\n높음 (전문가 검토, 출처 명시)\n중요 정보일수록 웹사이트 추천\n\n\n정보의 깊이\n요약 위주 (피상적일 수 있음)\n깊이 있는 정보, 다양한 관점\n전문 지식이 필요한 경우\n\n\n활용 분야\n빠른 질문, 아이디어 얻기\n심층 학습, 검증된 정보 획득\n용도에 맞게 선택\n\n\n\n⚠️ 주의하세요!\n웹사이트도 모든 정보가 100% 정확한 것은 아니에요. 특히 개인 블로그나 커뮤니티 게시글은 사실과 다른 정보가 있을 수 있으니, 항상 비판적인 시각으로 정보를 받아들이고 필요하다면 여러 출처를 확인하는 습관을 들이는 것이 중요해요.\n \n그렇다면, 현명한 정보 탐색법은?  \n결론적으로, AI 챗봇과 웹사이트는 서로를 완벽하게 대체할 수 없어요. 각자의 장단점이 명확하기 때문에, 상황에 맞게 적절히 활용하는 지혜가 필요하다고 생각해요. 제가 주로 쓰는 방법은 이렇습니다!\n  질문 유형별 정보원 선택 가이드\n정보 탐색 효율을 높이는 공식 = AI 챗봇(빠른 정보) + 웹사이트(심층 검증)\n제가 직접 시도해보며 얻은 정보 탐색 팁을 알려드릴게요:\n정보 유형별 솔루션\n기본 지식/정의 (Basic Knowledge/Definition):\n\n활용 도구: AI 챗봇 (1차), 웹사이트 (2차)\n활용 방법: AI 챗봇에게 먼저 물어 기본적인 개념과 핵심 키워드를 빠르게 파악하세요. 이후, 검색된 키워드를 활용하여 위키백과, 지식백과 또는 관련 전문 기관의 웹사이트에서 상세 정의와 배경 정보를 확인하고 이해를 심화하세요.\n최신 뉴스/이슈 (Current News/Issues):\n\n활용 도구: 주요 언론사 웹사이트, 뉴스 포털 (1차), AI 챗봇 (2차)\n활용 방법: 실시간성이 중요한 정보이므로, 신뢰할 수 있는 언론사의 공식 웹사이트나 주요 뉴스 포털을 직접 방문하여 사실 관계를 파악하는 것이 우선입니다. AI 챗봇은 해당 이슈의 간략한 요약이나 관련 질문을 던지는 데 활용할 수 있습니다.\n건강/의료 정보 (Health/Medical Information):\n\n활용 도구: 공식 의료기관 웹사이트, 전문의 웹사이트 (필수)\n활용 방법: 생명과 직결될 수 있는 정보이므로, 반드시 대학병원, 대한의사협회, 질병관리청 등 공신력 있는 기관의 웹사이트를 통해 정보를 얻어야 합니다. AI 챗봇의 답변은 참고용으로만 사용하고, 의심되는 내용은 반드시 전문가와 상담하세요.\n법률/재무 자문 (Legal/Financial Advice):\n\n활용 도구: 법무법인 웹사이트, 정부 법률/재무 정보 웹사이트 (필수)\n활용 방법: 전문성과 책임이 요구되는 분야이므로, 정부 법률정보센터, 금융감독원, 전문 법무법인/회계법인의 공식 웹사이트를 통해 정확한 정보를 확인해야 합니다. AI 챗봇은 관련 법률 용어의 정의나 기본적인 절차를 이해하는 데 보조적으로 활용할 수 있습니다.\n개인 의견/경험 (Personal Opinion/Experience):\n\n활용 도구: 개인 블로그, 커뮤니티, AI 챗봇\n활용 방법: 다양한 관점이나 실제 사용자 경험을 파악할 때 유용합니다. 하지만 주관적인 내용이 많으므로, 사실 여부는 반드시 다른 신뢰할 수 있는 출처를 통해 교차 검증해야 합니다. AI 챗봇은 여러 사람의 의견을 종합하거나 유사한 사례를 찾아보는 데 도움을 줄 수 있습니다.\nAI 시대의 현명한 정보 활용 전략  ‍ ‍ \n지금까지 AI 챗봇과 웹사이트의 특징을 살펴봤는데요, 결국 중요한 건 어떤 도구를 어떻게 활용하느냐인 것 같아요. 저는 개인적으로 이렇게 정보 활용 전략을 세웠어요.\n  알아두세요!\nAI 챗봇이 제공하는 정보는 1차적인 참고 자료로 활용하고, 최종적인 판단이나 중요한 결정은 반드시 공신력 있는 웹사이트나 전문가의 도움을 받는 것이 안전해요.\n \n실전 예시: 논문 자료 찾기  \n제가 최근에 블로그 글을 쓰면서 '데이터 시각화 트렌드'에 대한 논문 자료가 필요했던 적이 있어요. 이때 제가 어떻게 정보를 찾아봤는지 예시를 들어볼게요.\n사례: 논문 자료 탐색 과정\n1단계: AI 챗봇에게 질문 - \"데이터 시각화 최신 트렌드 논문 검색 키워드 알려줘\"\n2단계: 키워드 조합 후 학술 검색 사이트 이동 - 챗봇이 추천해준 키워드를 바탕으로 Google Scholar, RISS 같은 학술 검색 사이트에 접속\n계산 과정\n1) 첫 번째 단계: 검색 결과에서 제목과 초록을 읽고 관련성 높은 논문 선별\n2) 두 번째 단계: 선별된 논문의 본문 전체를 읽고 필요한 데이터와 주장 추출\n최종 결과\n- 결과 항목 1: AI 챗봇 덕분에 초기 검색 시간 절약 (방향성 제시)\n- 결과 항목 2: 전문 웹사이트를 통해 신뢰할 수 있는 심층 정보 확보 (정확성 보장)\n이처럼 AI 챗봇은 정보 탐색의 시작점을 제공하고, 전문 웹사이트는 그 정보를 심화하고 검증하는 역할을 해준다고 생각해요. 두 가지를 함께 활용하면 훨씬 효율적이고 정확하게 정보를 얻을 수 있답니다!\n \n마무리: 핵심 내용 요약  \n오늘 우리는 AI 챗봇과 웹사이트 중 어떤 정보원을 더 신뢰해야 할지에 대해 이야기해 봤어요. 두 가지 모두 중요한 정보원이지만, 각자의 역할과 장단점을 이해하고 현명하게 활용하는 것이 가장 중요해요.\n궁금한 점이 있다면 언제든지 댓글로 물어봐주세요! 여러분의 현명한 정보 생활을 응원합니다~  \n \n \nAI 챗봇 vs. 웹사이트: 현명한 정보 활용 가이드\n✨ AI 챗봇 활용법: 빠른 정보 탐색, 아이디어 얻기에 최적화! 질문에 대한 핵심 답변을 즉시 얻을 수 있어요.\n  웹사이트 활용법: 심층 학습, 검증된 정보 획득에 필수! 특히 전문적인 지식이나 신뢰도가 중요한 정보는 웹사이트를 이용하는 것이 좋아요.\n  현명한 정보 탐색 공식:\nAI 챗봇 (빠른 정보) + 웹사이트 (심층 검증) = 정확하고 효율적인 정보 습득!\n ‍  기억할 점: 교차 검증은 필수! AI 챗봇의 정보는 참고용, 중요한 내용은 항상 공신력 있는 출처에서 확인하세요.\n이 가이드를 통해 온라인 정보의 바다에서 길을 잃지 않고 현명하게 항해하시길 바랍니다!\n자주 묻는 질문 ❓\nQ: AI 챗봇이 주는 정보는 믿을 수 없나요?\nA: 아니요, 믿을 수 없는 것은 아니지만, 항상 100% 정확하다고 볼 수는 없습니다. 특히 사실 확인이 필요한 정보나 중요한 결정과 관련된 정보는 반드시 웹사이트를 통해 교차 검증하는 것이 좋습니다.\nQ: 특정 분야의 전문 정보는 어디서 찾는 게 좋을까요?\nA: 해당 분야의 공신력 있는 기관, 학술 단체, 전문 연구소 등에서 운영하는 공식 웹사이트를 이용하는 것이 가장 좋습니다. 이런 곳들은 정보의 정확성과 신뢰성이 높습니다.\nQ: AI 챗봇과 웹사이트를 함께 활용하는 팁이 있나요?\nA: 네! 챗봇에게는 간단한 질문이나 아이디어 얻기를 요청하고, 챗봇이 제공한 키워드나 개념을 바탕으로 전문 웹사이트에서 심층 정보를 탐색하고 검증하는 방식이 효율적입니다.\nQ: 개인 블로그나 커뮤니티 정보는 어떻게 걸러내야 할까요?\nA: 개인적인 의견이나 경험은 참고할 수 있지만, 객관적인 사실 여부를 항상 의심하고 여러 출처를 통해 교차 검증해야 합니다. 특히 중요한 정보일수록 더욱 신중해야 해요.\nQ: 미래에는 AI 챗봇이 웹사이트를 완전히 대체할까요?\nA: 가까운 미래에는 완전히 대체하기는 어려울 것으로 보입니다. AI 챗봇은 빠른 정보 요약에 강점이 있지만, 웹사이트는 깊이 있는 전문성과 인간적인 통찰력을 제공하는 데 강점이 있어 서로 보완하는 형태로 발전할 가능성이 높습니다.\n\n\n\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"AI 챗봇이 주는 정보는 믿을 수 없나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  아니요, 믿을 수 없는 것은 아니지만, 항상 100% 정확하다고 볼 수는 없습니다. 특히 사실 확인이 필요한 정보나 중요한 결정과 관련된 정보는 반드시 웹사이트를 통해 교차 검증하는 것이 좋습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"특정 분야의 전문 정보는 어디서 찾는 게 좋을까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  해당 분야의 공신력 있는 기관, 학술 단체, 전문 연구소 등에서 운영하는 공식 웹사이트를 이용하는 것이 가장 좋습니다. 이런 곳들은 정보의 정확성과 신뢰성이 높습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"AI 챗봇과 웹사이트를 함께 활용하는 팁이 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  네! 챗봇에게는 간단한 질문이나 아이디어 얻기를 요청하고, 챗봇이 제공한 키워드나 개념을 바탕으로 전문 웹사이트에서 심층 정보를 탐색하고 검증하는 방식이 효율적입니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"개인 블로그나 커뮤니티 정보는 어떻게 걸러내야 할까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  개인적인 의견이나 경험은 참고할 수 있지만, 객관적인 사실 여부를 항상 의심하고 여러 출처를 통해 교차 검증해야 합니다. 특히 중요한 정보일수록 더욱 신중해야 해요.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"미래에는 AI 챗봇이 웹사이트를 완전히 대체할까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  가까운 미래에는 완전히 대체하기는 어려울 것으로 보입니다. AI 챗봇은 빠른 정보 요약에 강점이 있지만, 웹사이트는 깊이 있는 전문성과 인간적인 통찰력을 제공하는 데 강점이 있어 서로 보완하는 형태로 발전할 가능성이 높습니다.\"\n            }\n        }\n    ]\n}",
        "guid": "http://muzbox.tistory.com/483605",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "AI 시대",
          "AI 챗봇",
          "데이터 검증",
          "온라인 정보",
          "웹사이트",
          "전문가 의견",
          "정보 신뢰도",
          "정보 탐색",
          "정보 활용 전략",
          "정보의 질"
        ],
        "isoDate": "2025-06-11T00:45:41.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "제미나이 멀티모달로 고품질 맛집 블로그 콘텐츠 초고속 제작 방법, 무료 지침 공개",
        "link": "http://muzbox.tistory.com/483604",
        "pubDate": "Sun, 8 Jun 2025 14:28:03 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483604#entry483604comment",
        "content": "<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #e0f7fa; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px; border: 1px solid #b2ebf2;\"><b>스마트폰 속 음식 사진, 블로그 수익으로 바꾸는 비법!</b> 용량 부족 걱정 없이 애드센스 수익까지 얻는 맛집 블로그, AI가 알아서 만들어줘요!</div>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/ccLAE3/btsOsO4nPt9/TZfczh3sQKgseiXJq3DeSK/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/ccLAE3/btsOsO4nPt9/TZfczh3sQKgseiXJq3DeSK/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/ccLAE3/btsOsO4nPt9/TZfczh3sQKgseiXJq3DeSK/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FccLAE3%2FbtsOsO4nPt9%2FTZfczh3sQKgseiXJq3DeSK%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"고품질 맛집 블로그 콘텐츠 초고속 제작 방법\" loading=\"lazy\" width=\"1280\" height=\"853\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;스마트폰에 쌓여만 가는 수많은 음식 사진들, 용량 부족 경고가 뜨면 결국 아깝지만 지워야 하죠?   그런데 이 사진들을 전문적인 맛집 블로그로 올리고, 여기에 애드센스 수익까지 얻는다면 금상첨화 아닐까요? 지금 보고 계신 이 블로그 포스팅처럼 말이죠!</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">놀라지 마세요. 이 모든 걸 이번에도 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">제미나이</span>로 가능합니다! 제가 지난번에 제미나이를 활용한 초고속 블로그 글쓰기 영상을 올렸는데요, 정말 많은 분들이 \"실제로 그 지침을 어떻게 만드는지\" 알고 싶다고 하셔서 이번에는 그 비하인드를 공개하는 심화 강의를 준비했습니다.  </p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">우리가 AI와 효과적으로 대화하기 위해서는 그저 \"맛집 글 써줘\"라고 하는 것보다 훨씬 더 체계적인 접근이 필요해요. 정확한 지시와 명확한 가이드라인이 있어야 원하는 결과를 얻을 수 있죠. 그래서 오늘은 이 특별한 '젬 지침'을 만드는 과정까지 여러분께 낱낱이 공개하려고 합니다! 그리고 이번 지침의 핵심에는 단순 글쓰기가 아닌 제미나이의 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">멀티모달 기능</span>이 있습니다. 이 기능이 왜 혁명적인지, 어떻게 하면 이를 최대한 활용할 수 있는지 함께 알아보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>AI 멀티모달 기능의 이해와 활용  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">여러분, 예전 AI는 텍스트만 읽을 수 있었어요. 하지만 최근에는 많은 LLM 모델들이 사진도 보고, 영상도 이해하는 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">'멀티모달'</span> 능력을 갖추게 되었습니다. 마치 우리가 식당에서 메뉴를 선택할 때 사진과 설명을 함께 보는 것처럼요! 멀티모달이란 쉽게 말해서 다양한 형태의 정보를 동시에 이해하고 처리할 수 있는 인공지능 기술을 의미하는데요. 예를 들어 맛집 사진을 AI에게 보여주면, 예전의 AI는 \"이것은 사진입니다\"라고만 인식했지만, 멀티모달 기능이 있으면 \"이 사진은 식당 내부이고, 테이블 위에는 해물칼국수가 있으며, 옆에는 김치가 놓여있고, 사람들이 즐겁게 식사하고 있네요\"라고 더 자세하고 종합적으로 이해할 수 있게 된 거죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">여기서 재미있는 점은 AI가 이제 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">'맥락'을 읽을 수 있다는 거예요.</span> 식당 내부 사진, 음식 사진, 메뉴판을 보고 \"아, 이건 맛집 리뷰를 위한 사진들이구나\"라고 파악합니다. 그래서 여러분이 찍은 맛집 사진을 몇 장만 넣어줘도 전문 블로거가 쓴 것 같은 리뷰를 뚝딱 만들어내는 것이 가능해진 겁니다.</p>\n<div style=\"background-color: #e0f2f7; border-left: 4px solid #4dd0e1; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />AI가 아무리 똑똑해도 여러분의 머릿속 생각을 알아서 척척 맞춰주진 않아요. 구체적인 지시가 없으면, 기대한 결과가 나오기 어렵습니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>프롬프트 엔지니어링의 중요성 (기본적인 시도와 한계)  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 이제 기본적인 방법으로 한번 시도해보겠습니다. 제가 천안에 사는데, 최근에 방문한 회사 근처 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">\"성거산 시골 막국수\"</span>라는 곳의 사진 일곱 장을 준비했습니다. 이 사진들을 제미나이에 업로드하고 간단하게 \"이 사진들로 맛집 블로그 포스팅을 작성해줘\"라고 요청해보겠습니다. 천안 오시면 꼭 한 번 방문해 보세요. 맛있어요!!</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">음... 나쁘지 않지만 뭔가 아쉬워요. '성거산 막국수: 막국수와 찰떡궁합 보쌈 맛집!'이라는 제목으로 기본적인 정보는 잘 담았지만, 뭔가 차별화된 느낌이 부족합니다. '식당은 넓은 주차 공간을 갖추고 있어, 차량으로 방문하기에 정말 편리했어요' '내부로 들어서니 생각보다 훨씬 넓고 쾌적한 공간이 펼쳐졌습니다'처럼 정보는 있지만 독자의 감성을 자극하는 생생한 묘사가 부족하죠.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0; background-color: #e0f7fa; font-weight: bold;\">구분</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0; background-color: #e0f7fa; font-weight: bold;\">설명</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0; background-color: #e0f7fa; font-weight: bold;\">기대 효과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">명확한 역할 부여</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">\"너는 지금부터 맛집 블로거야!\"</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">글의 톤앤매너와 방향 설정</td>\n</tr>\n<tr style=\"background-color: #f5f5f5;\">\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">구체적인 목표 제시</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">\"사진 분석해서 생생한 맛집 리뷰 써줘.\"</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">AI가 나아가야 할 명확한 길 제시</td>\n</tr>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">결과 형식 지정</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">\"HTML 코드로, 특정 스타일 적용해서.\"</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e0e0e0;\">일관성 있고 사용 가능한 결과물 도출</td>\n</tr>\n</tbody>\n</table>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이럴 때 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">프롬프트 엔지니어링</span>이 효과적인 것이죠. 프롬프트 엔지니어링은 AI에게 어떤 요청을 할 때, 원하는 결과물을 얻기 위해 질문이나 요청을 효과적으로 설계하는 기술입니다. 간단히 말해 AI와 잘 소통하는 방법을 찾는 거죠. 프롬프트 엔지니어링의 핵심은 AI에게 명확한 역할, 목표, 형식을 제공하는 것입니다. 이 프롬프트 엔지니어링을 기반으로 젬 지침을 만드는 것이죠.</p>\n<div style=\"background-color: #fffde7; border-left: 4px solid #fbc02d; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 주의하세요!</b><br />AI가 아무리 똑똑해도 여러분의 머릿속 생각을 알아서 척척 맞춰주지 않습니다. 구체적인 지시가 없으면, 기대한 결과가 나오기 어렵다는 점을 꼭 기억하세요!</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>Google AI Studio 활용 (젬 지침 제작 환경)  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">오늘 저는 이 젬 지침을 제미나이 2.5 모델을 이용해 만들려고 합니다. 하지만 제미나이 사이트가 아닌 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">AI Studio</span>라는 곳에서 지침을 만들게요.</p>\n<div style=\"background-color: #e0f7fa; padding: 18px; border-radius: 8px; margin: 20px 0; border: 1px solid #b2ebf2;\">\n<h3 style=\"font-size: 20px; color: #333; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>  AI Studio는?</b></h3>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\"><b>Google AI Studio</b>는 구글에서 제공하는 개발자 친화적인 플랫폼으로, AI 모델을 더 세밀하게 제어하고 실험할 수 있는 공간입니다. 개발자, 학생, 연구자들이 프롬프트를 테스트하고 최적화하며, API 통합까지 준비할 수 있는 전문적인 환경이죠. AI Studio도 무료로 사용할 수 있습니다.</p>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">특히 구글의 다양한 최신 AI 모델들을 가장 빨리 만날 수 있으니, 영상 설명란의 링크로 접속하셔서, 다양한 경험을 해 보세요. 흥미로운 사실은, 제가 이번에는 파라미터 조정 없이 기본값으로 진행했는데도 일반 제미나이와 결과가 달랐다는 점입니다. 왜 그럴까요?</p>\n<div style=\"background-color: #e0f7fa; padding: 18px; border-radius: 8px; margin: 20px 0; border: 1px solid #b2ebf2;\">\n<h3 style=\"font-size: 20px; color: #333; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>AI Studio vs. 일반 제미나이 차이점</b></h3>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">1) 첫 번째 단계: AI Studio는 기본 Temperature(창의성) 값이 1.0으로 설정되어 있어 더 다양하고 창의적인 결과물 생성</p>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">2) 두 번째 단계: 일반 제미나이는 일관된 답변을 위해 이 값을 더 낮게 설정 가능</p>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">&rarr; AI Studio는 모델의 '날 것 그대로'의 동작을 확인하고 제어하는 데 중점을 둡니다. 따라서, 전문적인 콘텐츠 제작이나 복잡한 지침을 만들 때는 AI Studio에서 작업하는 것을 추천합니다.</p>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>맛집 블로그 프롬프트 제작 과정 (1차 및 2차 수정)  &zwj; &zwj; </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 이제 본격적으로 맛집 블로그용 지침을 만들어 보겠습니다! AI STUDIO에 방문하신 후 우측에서 최신 AI 모델을 선택합니다. 아까 얘기한 것처럼 하단에 파라메터는 그대로 두고 첫 번째 프롬프트를 입력할게요. \"사용자 입력 정보와 사진을 기반으로 멀티모달 기능을 최대한 활용하여 구글 상위노출에 최적화된 맛집탐방 블로그 기사를 생성하고 그 결과물을 HTML 코드로 생성하는 젬 지침을 만들어\" 라고 요청하면 바로 맛집 블로거를 위한 지침을 생성합니다.</p>\n<div style=\"background-color: #e0f2f7; border-left: 4px solid #4dd0e1; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />1차 요청에서는 사용자에게 너무 많은 정보를 요구했습니다. 식당명, 주소, 키워드, 한 줄 평 등. 편리하게 쓰려고 AI를 활용하는데, 정보 입력에 시간을 다 쓰면 본말이 전도됩니다.</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">그래서 두 번째 요청에서는 복잡한 질문만 단순화했습니다. \"사용자에게 묻는 질문이 너무 많아. 처음에 식당명/지역, 주문음식/추가음식, 주변음식/반찬, 후식, 방문배경, 사진을 요청하면서 시작하고, 사용자가 입력을 하면 나머지 정보는 사진을 분석해서 대신 작성하게 지침을 수정해\" 이런 식으로 사용자가 5가지 질문과 사진 업로드만으로 맛집 블로그를 작성할 수 있도록 만들었어요. 중요한 점은, 제미나이의 멀티모달 기능을 활용해 사진을 직접 분석하여 블로그 내용에 반영하도록 한 것이죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>젬 지침 등록 및 테스트  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 이렇게 해서 나온 2차 결과물을, 제미나이로 돌아가서 젬 지침에 등록을 하고, 결과를 확인해볼게요. 젬 관리자의 샘 젬 만들기에서 예를 들어 제목을 \"맛집 블로그 전문가\"라고 입력을 합니다.</p>\n<div style=\"background-color: #e0f7fa; padding: 18px; border-radius: 8px; margin: 20px 0; border: 1px solid #b2ebf2;\">\n<h3 style=\"font-size: 20px; color: #333; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>사례 주인공의 상황: '성거산 시골 막국수' 테스트</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 6px;\">1. 식당명/지역: 천안 성거, 성거산 시골 막국수</li>\n<li style=\"margin-bottom: 0;\">2. 주문음식/추가음식: 비빔 막국수와 수육</li>\n</ul>\n<h3 style=\"font-size: 20px; color: #333; margin: 18px 0 12px;\" data-ke-size=\"size23\"><b>계산 과정: 간편한 입력으로 결과 확인</b></h3>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">1) 3. 주변 음식/반찬: 주변 음식 코너가 따로 있고 셀프임</p>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">2) 4. 후식: 후식 없음</p>\n<h3 style=\"font-size: 20px; color: #333; margin: 18px 0 12px;\" data-ke-size=\"size23\"><b>최종 결과: 블로그 글 자동 생성!</b></h3>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">- 5. 방문배경: 5월 중순 26도의 이른 더위 점심시간. 팀원들과 점심 식사</p>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">- 사진 업로드 &rarr; AI가 알아서 블로그 글 생성</p>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이런 식으로 결과를 확인하고 수정할 부분을 계속해서 AI와 대화를 해 나가면서 완성형으로 만들어 가는 것입니다. 완벽한 결과물은 처음부터 나오지 않습니다. AI와 지속적인 대화를 통해 결과를 확인하고 수정해나가는 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">'반복 최적화'</span> 과정이 핵심입니다. 제가 이전 영상에서 공유해드린 지침들도 수십 번의 시행착오와 세밀한 조정을 거쳐 완성된 것들이랍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>결과물 개선 (HTML 구조 및 디자인 문제점 해결)  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 지금 우리가 받은 결과물을 살펴보면 세 가지 중요한 문제점이 보입니다. 이런 세부 사항들이 블로그 포스팅의 품질을 좌우하게 됩니다.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>HTML 코드 생성 문제:</b> HTML 코드가 코드 블록 안에 제대로 생성되지 않았습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>불완전한 HTML 구조:</b> HTML이 완전한 형태의 웹페이지 구조(HTML, HEAD, BODY 태그 포함)로 표시되고 있습니다. 이는 블로그에 붙여넣을 때 구조적 충돌을 일으킵니다. 블로그 플랫폼은 이미 이 태그들을 가지고 있기 때문이죠.</li>\n<li style=\"margin-bottom: 8px;\"><b>H1 태그 중복 문제:</b> 블로그 플랫폼에서는 제목을 별도로 입력하는 필드가 있기 때문에, 본문 내에 H1 태그가 있으면 중복 제목이 생겨 SEO에 좋지 않고 디자인도 깨질 수 있습니다.</li>\n</ol>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이런 경우, AI에게 '<span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">블로그 본문에 추가해야 하므로 헤드, 바디 태그와 에이치원 태그가 없는 인라인 스타일로 변경해주세요. 제목은 별도로 입력할 것입니다.</span>'라고 요청하세요. 그러면 블로그 플랫폼에 바로 붙여넣을 수 있는 최적화된 HTML 코드를 받을 수 있습니다. 위의 2가지 문제 개선을 위해, 1. 이 지침의 출력물 중 HTML 코드로 생성되는 결과물은 \"코드 블록\"으로 출력해, 2. 블로그 본문에 추가해야 하므로 헤드, 바디 태그와 에이치원 태그가 없는 인라인 스타일로 변경해. 라고 다시 지침 수정을 요청합니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 수정된 지침으로 생성된 결과물을 보면 인라인 스타일의 에이치티엠엘 코드가 코드블록에서 생성되는 것을 확인할 수 있습니다. 그런데 이번엔 디자인이 별로입니다. 이럴 때는 \"좀 더 시각화된 결과물이 나올 수 있게 디자인을 개선해줘\" 또는 구체적인 디자인 지침을 주거나 이전 영상에서 소개한 디자인 템플릿을 업로드하고 \"첨부 디자인 스타일로 반영되게 수정해\"라고 요청하셔도 될 거 같습니다. 아, 그리고 디자인만 보시려면, 젬을 수정할 필요 없이, AI STUDIO의 수정된 지침의 코드만 복사해서 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">코드펜</span>으로 가서 확인하면 됩니다.</p>\n<div style=\"border-top: 1px dashed #e0e0e0; margin: 30px 0;\">&nbsp;</div>\n<div>\n<style>\n        .single-summary-card-container {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px 10px;\n            background-color: #e0f7fa; /* Light Teal for container background */\n            margin: 20px 0;\n        }\n        .single-summary-card {\n            width: 100%;\n            max-width: 700px;\n            /* aspect-ratio: 16 / 9; */ /* 모바일 반응형을 위해 제거 */\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n            padding: 25px;\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            border: 1px solid #b2ebf2; /* Teal border for card */\n            box-sizing: border-box; /* 패딩과 테두리가 요소의 전체 너비와 높이에 포함되도록 보장 */\n            height: auto; /* 기본 높이를 자동으로 설정하여 콘텐츠에 따라 유연하게 조절 */\n            min-height: unset; /* aspect-ratio로 인한 최소 높이 제한 해제 */\n        }\n        .single-summary-card .card-header {\n            display: flex;\n            align-items: center;\n            border-bottom: 2px solid #00796b; /* Dark Teal border for header */\n            padding-bottom: 12px;\n            margin-bottom: 12px;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 34px;\n            color: #00796b; /* Dark Teal icon */\n            margin-right: 14px;\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 26px;\n            color: #00796b; /* Dark Teal header text */\n            margin: 0;\n            line-height: 1.3;\n            font-weight: 700;\n        }\n        .single-summary-card .card-content {\n            flex-grow: 1;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-around;\n            font-size: 17px;\n            line-height: 1.65;\n            color: #333; /* Main text color */\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 10px;\n        }\n        .single-summary-card .card-content strong {\n            color: #004d40; /* Darker Teal for strong text */\n            font-weight: 600;\n        }\n        .single-summary-card .card-content .highlight {\n            background-color: #fff9c4; /* Yellow highlight as per original theme */\n            padding: 2px 6px;\n            border-radius: 3px;\n            font-weight: bold;\n        }\n        .single-summary-card .card-content .formula {\n            background-color: #e0f7fa; /* Light Teal formula background */\n            padding: 6px 10px;\n            border-radius: 4px;\n            font-size: 0.9em;\n            text-align: center;\n            margin-top: 5px;\n            color: #004d40; /* Darkest Teal for formula text */\n        }\n        .single-summary-card .card-footer {\n            font-size: 14px;\n            color: #777;\n            text-align: center;\n            padding-top: 12px;\n            border-top: 1px dashed #b2ebf2; /* Light Teal dashed border for footer */\n            margin-top: auto;\n        }\n\n        /* 모바일 맞춤 조정 */\n        @media (max-width: 768px) {\n            .single-summary-card {\n                padding: 18px; /* 작은 화면을 위해 패딩을 약간 줄임 */\n                height: auto; /* 콘텐츠에 맞춰 높이 자동 조절 */\n                min-height: unset; /* aspect-ratio로 인한 최소 높이 제한 해제 */\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 28px; /* 모바일에서 아이콘 크기 조정 */\n                margin-right: 10px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 20px; /* 모바일에서 헤더 제목 글꼴 크기 조정 */\n            }\n            .single-summary-card .card-content {\n                font-size: 15px; /* 모바일에서 내용 글꼴 크기 조정 */\n                line-height: 1.5;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 8px; /* 모바일에서 섹션 간 간격 조정 */\n            }\n            .single-summary-card .card-content .formula {\n                padding: 5px 8px; /* 수식 글꼴 크기 조정 */\n                font-size: 0.85em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 13px; /* 모바일에서 푸터 글꼴 크기 조정 */\n                padding-top: 10px;\n            }\n        }\n\n        @media (max-width: 480px) {\n            .single-summary-card {\n                padding: 15px; /* 매우 작은 화면을 위해 패딩 더 줄임 */\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 26px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 18px;\n            }\n            .single-summary-card .card-content {\n                font-size: 14px;\n                line-height: 1.4;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 6px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 4px 6px;\n                font-size: 0.8em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 12px;\n                padding-top: 8px;\n            }\n        }\n    </style>\n</div>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">맛집 블로그 생성 지침 핵심 요약!</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 프롬프트 엔지니어링:</b> <span class=\"highlight\">AI와 잘 소통하는 기술.</span> 명확한 역할, 목표, 형식을 제공하여 원하는 결과물을 얻는 것이 핵심이죠.</div>\n<div class=\"section\"><b>  멀티모달 기능 활용:</b> <span class=\"highlight\">사진을 직접 분석해서 생생한 리뷰를 작성</span>하도록 지시! 단순히 텍스트를 생성하는 것을 넘어, 시각 정보까지 통합하여 블로그 글의 퀄리티를 높입니다.</div>\n<div class=\"section\"><b>  HTML 구조 및 디자인 최적화:</b>\n<div class=\"formula\">HTML = (SEO 최적화) + (인라인 스타일) + (H1 태그 제외)</div>\n</div>\n<div class=\"section\"><b> &zwj;  반복 최적화의 중요성:</b> <span class=\"highlight\">완벽한 결과물은 한 번에 나오지 않아요!</span> AI와 지속적으로 대화하고, 결과를 수정하며 더 나은 지침을 만들어가는 과정이 필요합니다.</div>\n</div>\n<div class=\"card-footer\">이 지침으로 여러분도 전문 맛집 블로거로 거듭나세요!  </div>\n</div>\n</div>\n<h2 style=\"font-size: 24px; color: #00796b; margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 제미나이 멀티모달 기능은 어떤 점에서 혁신적인가요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A:   예전 AI는 텍스트만 이해했지만, 멀티모달 기능은 사진, 영상 등 다양한 형태의 정보를 동시에 이해하고 처리할 수 있어, AI가 맥락을 파악하고 더 풍부하고 정확한 콘텐츠를 생성할 수 있게 합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: AI Studio를 사용하는 이유가 무엇인가요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A:   AI Studio는 구글의 최신 AI 모델을 가장 먼저 접하고, Temperature(창의성) 값 등을 세밀하게 조정하며 프롬프트를 테스트하고 최적화할 수 있는 개발자 친화적인 환경을 제공합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 블로그 포스팅용 HTML 코드를 생성할 때 주의할 점은?</div>\n<div style=\"padding-left: 15px; color: #555;\">A:   블로그 플랫폼의 구조와 충돌하지 않도록 HEAD, BODY 태그와 H1 태그를 제외한 인라인 스타일로 코드를 생성해야 합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 맛집 블로그를 위한 '젬 지침'은 어떻게 만드나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A:   AI Studio에서 프롬프트 엔지니어링을 활용하여 AI에게 명확한 역할, 목표, 형식을 부여하고, 사용자가 최소한의 정보만 입력해도 되는 방식으로 반복 최적화 과정을 거쳐 만듭니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 12px; background-color: #f9f9f9; border-radius: 6px; border: 1px solid #eeeeee;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #00796b;\">Q: 완성된 블로그 콘텐츠를 어떻게 활용할 수 있나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A:   생성된 고품질의 블로그 포스팅을 꾸준히 업로드하여 블로그 방문자를 늘리고, 애드센스 수익을 창출하며, 스마트폰 용량 확보와 맛집 기록까지 일석삼조의 효과를 누릴 수 있습니다.</div>\n</div>\n</div>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #00796b, #004d40); margin: 35px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #b2ebf2; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>GEM 무료 지침 다운 로드</b></h2>\n<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-8195497734535830\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<p><figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/brYzeD/btsOtePfYzh/3LPJL5s7XQcrLhat3Co8EK/%EB%A7%9B%EC%A7%91%20%EB%B8%94%EB%A1%9C%EA%B7%B8%20%EC%83%9D%EC%84%B1%20GEM%20%EC%A7%80%EC%B9%A8.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">맛집 블로그 생성 GEM 지침.zip</span></div>\n<div class=\"size\">0.01MB</div>\n</div>\n  </a></figure>\n</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=wNdWROd050s\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/d2bLlO/hyY47yGEuV/SueTLLMQwMk5lb5AUtRuL0/img.jpg?width=1280&amp;height=720&amp;face=310_124_480_310,https://scrap.kakaocdn.net/dn/TJxgn/hyY449N6D3/B6yu46Ua7qc5mAS2K1oMdk/img.jpg?width=1280&amp;height=720&amp;face=310_124_480_310\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"사진만 있으면 5분 만에 맛집 블로그 생성!! | GEMINI 활용법 4편\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/wNdWROd050s\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"제미나이 멀티모달 기능은 어떤 점에서 혁신적인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  예전 AI는 텍스트만 이해했지만, 멀티모달 기능은 사진, 영상 등 다양한 형태의 정보를 동시에 이해하고 처리할 수 있어, AI가 맥락을 파악하고 더 풍부하고 정확한 콘텐츠를 생성할 수 있게 합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI Studio를 사용하는 이유가 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI Studio는 구글의 최신 AI 모델을 가장 먼저 접하고, Temperature(창의성) 값 등을 세밀하게 조정하며 프롬프트를 테스트하고 최적화할 수 있는 개발자 친화적인 환경을 제공합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"블로그 포스팅용 HTML 코드를 생성할 때 주의할 점은?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  블로그 플랫폼의 구조와 충돌하지 않도록 HEAD, BODY 태그와 H1 태그를 제외한 인라인 스타일로 코드를 생성해야 합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"맛집 블로그를 위한 '젬 지침'은 어떻게 만드나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI Studio에서 프롬프트 엔지니어링을 활용하여 AI에게 명확한 역할, 목표, 형식을 부여하고, 사용자가 최소한의 정보만 입력해도 되는 방식으로 반복 최적화 과정을 거쳐 만듭니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"완성된 블로그 콘텐츠를 어떻게 활용할 수 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  생성된 고품질의 블로그 포스팅을 꾸준히 업로드하여 블로그 방문자를 늘리고, 애드센스 수익을 창출하며, 스마트폰 용량 확보와 맛집 기록까지 일석삼조의 효과를 누릴 수 있습니다.\"\n                }\n            }\n        ]\n    }\n    </script>\n<div id=\"gtx-trans\" style=\"position: absolute; left: -67px; top: 6247.39px;\">\n<div class=\"gtx-trans-icon\">&nbsp;</div>\n</div>",
        "contentSnippet": "스마트폰 속 음식 사진, 블로그 수익으로 바꾸는 비법! 용량 부족 걱정 없이 애드센스 수익까지 얻는 맛집 블로그, AI가 알아서 만들어줘요!\n\n\n \n 스마트폰에 쌓여만 가는 수많은 음식 사진들, 용량 부족 경고가 뜨면 결국 아깝지만 지워야 하죠?   그런데 이 사진들을 전문적인 맛집 블로그로 올리고, 여기에 애드센스 수익까지 얻는다면 금상첨화 아닐까요? 지금 보고 계신 이 블로그 포스팅처럼 말이죠!\n놀라지 마세요. 이 모든 걸 이번에도 제미나이로 가능합니다! 제가 지난번에 제미나이를 활용한 초고속 블로그 글쓰기 영상을 올렸는데요, 정말 많은 분들이 \"실제로 그 지침을 어떻게 만드는지\" 알고 싶다고 하셔서 이번에는 그 비하인드를 공개하는 심화 강의를 준비했습니다.  \n \n우리가 AI와 효과적으로 대화하기 위해서는 그저 \"맛집 글 써줘\"라고 하는 것보다 훨씬 더 체계적인 접근이 필요해요. 정확한 지시와 명확한 가이드라인이 있어야 원하는 결과를 얻을 수 있죠. 그래서 오늘은 이 특별한 '젬 지침'을 만드는 과정까지 여러분께 낱낱이 공개하려고 합니다! 그리고 이번 지침의 핵심에는 단순 글쓰기가 아닌 제미나이의 멀티모달 기능이 있습니다. 이 기능이 왜 혁명적인지, 어떻게 하면 이를 최대한 활용할 수 있는지 함께 알아보겠습니다.\n \nAI 멀티모달 기능의 이해와 활용  \n여러분, 예전 AI는 텍스트만 읽을 수 있었어요. 하지만 최근에는 많은 LLM 모델들이 사진도 보고, 영상도 이해하는 '멀티모달' 능력을 갖추게 되었습니다. 마치 우리가 식당에서 메뉴를 선택할 때 사진과 설명을 함께 보는 것처럼요! 멀티모달이란 쉽게 말해서 다양한 형태의 정보를 동시에 이해하고 처리할 수 있는 인공지능 기술을 의미하는데요. 예를 들어 맛집 사진을 AI에게 보여주면, 예전의 AI는 \"이것은 사진입니다\"라고만 인식했지만, 멀티모달 기능이 있으면 \"이 사진은 식당 내부이고, 테이블 위에는 해물칼국수가 있으며, 옆에는 김치가 놓여있고, 사람들이 즐겁게 식사하고 있네요\"라고 더 자세하고 종합적으로 이해할 수 있게 된 거죠.\n \n여기서 재미있는 점은 AI가 이제 '맥락'을 읽을 수 있다는 거예요. 식당 내부 사진, 음식 사진, 메뉴판을 보고 \"아, 이건 맛집 리뷰를 위한 사진들이구나\"라고 파악합니다. 그래서 여러분이 찍은 맛집 사진을 몇 장만 넣어줘도 전문 블로거가 쓴 것 같은 리뷰를 뚝딱 만들어내는 것이 가능해진 겁니다.\n  알아두세요!\nAI가 아무리 똑똑해도 여러분의 머릿속 생각을 알아서 척척 맞춰주진 않아요. 구체적인 지시가 없으면, 기대한 결과가 나오기 어렵습니다.\n \n프롬프트 엔지니어링의 중요성 (기본적인 시도와 한계)  \n자, 이제 기본적인 방법으로 한번 시도해보겠습니다. 제가 천안에 사는데, 최근에 방문한 회사 근처 \"성거산 시골 막국수\"라는 곳의 사진 일곱 장을 준비했습니다. 이 사진들을 제미나이에 업로드하고 간단하게 \"이 사진들로 맛집 블로그 포스팅을 작성해줘\"라고 요청해보겠습니다. 천안 오시면 꼭 한 번 방문해 보세요. 맛있어요!!\n음... 나쁘지 않지만 뭔가 아쉬워요. '성거산 막국수: 막국수와 찰떡궁합 보쌈 맛집!'이라는 제목으로 기본적인 정보는 잘 담았지만, 뭔가 차별화된 느낌이 부족합니다. '식당은 넓은 주차 공간을 갖추고 있어, 차량으로 방문하기에 정말 편리했어요' '내부로 들어서니 생각보다 훨씬 넓고 쾌적한 공간이 펼쳐졌습니다'처럼 정보는 있지만 독자의 감성을 자극하는 생생한 묘사가 부족하죠.\n구분\n설명\n기대 효과\n\n\n\n\n명확한 역할 부여\n\"너는 지금부터 맛집 블로거야!\"\n글의 톤앤매너와 방향 설정\n\n\n구체적인 목표 제시\n\"사진 분석해서 생생한 맛집 리뷰 써줘.\"\nAI가 나아가야 할 명확한 길 제시\n\n\n결과 형식 지정\n\"HTML 코드로, 특정 스타일 적용해서.\"\n일관성 있고 사용 가능한 결과물 도출\n\n\n\n이럴 때 프롬프트 엔지니어링이 효과적인 것이죠. 프롬프트 엔지니어링은 AI에게 어떤 요청을 할 때, 원하는 결과물을 얻기 위해 질문이나 요청을 효과적으로 설계하는 기술입니다. 간단히 말해 AI와 잘 소통하는 방법을 찾는 거죠. 프롬프트 엔지니어링의 핵심은 AI에게 명확한 역할, 목표, 형식을 제공하는 것입니다. 이 프롬프트 엔지니어링을 기반으로 젬 지침을 만드는 것이죠.\n⚠️ 주의하세요!\nAI가 아무리 똑똑해도 여러분의 머릿속 생각을 알아서 척척 맞춰주지 않습니다. 구체적인 지시가 없으면, 기대한 결과가 나오기 어렵다는 점을 꼭 기억하세요!\n \nGoogle AI Studio 활용 (젬 지침 제작 환경)  \n오늘 저는 이 젬 지침을 제미나이 2.5 모델을 이용해 만들려고 합니다. 하지만 제미나이 사이트가 아닌 AI Studio라는 곳에서 지침을 만들게요.\n  AI Studio는?\nGoogle AI Studio는 구글에서 제공하는 개발자 친화적인 플랫폼으로, AI 모델을 더 세밀하게 제어하고 실험할 수 있는 공간입니다. 개발자, 학생, 연구자들이 프롬프트를 테스트하고 최적화하며, API 통합까지 준비할 수 있는 전문적인 환경이죠. AI Studio도 무료로 사용할 수 있습니다.\n특히 구글의 다양한 최신 AI 모델들을 가장 빨리 만날 수 있으니, 영상 설명란의 링크로 접속하셔서, 다양한 경험을 해 보세요. 흥미로운 사실은, 제가 이번에는 파라미터 조정 없이 기본값으로 진행했는데도 일반 제미나이와 결과가 달랐다는 점입니다. 왜 그럴까요?\nAI Studio vs. 일반 제미나이 차이점\n1) 첫 번째 단계: AI Studio는 기본 Temperature(창의성) 값이 1.0으로 설정되어 있어 더 다양하고 창의적인 결과물 생성\n2) 두 번째 단계: 일반 제미나이는 일관된 답변을 위해 이 값을 더 낮게 설정 가능\n→ AI Studio는 모델의 '날 것 그대로'의 동작을 확인하고 제어하는 데 중점을 둡니다. 따라서, 전문적인 콘텐츠 제작이나 복잡한 지침을 만들 때는 AI Studio에서 작업하는 것을 추천합니다.\n \n맛집 블로그 프롬프트 제작 과정 (1차 및 2차 수정)  ‍ ‍ \n자, 이제 본격적으로 맛집 블로그용 지침을 만들어 보겠습니다! AI STUDIO에 방문하신 후 우측에서 최신 AI 모델을 선택합니다. 아까 얘기한 것처럼 하단에 파라메터는 그대로 두고 첫 번째 프롬프트를 입력할게요. \"사용자 입력 정보와 사진을 기반으로 멀티모달 기능을 최대한 활용하여 구글 상위노출에 최적화된 맛집탐방 블로그 기사를 생성하고 그 결과물을 HTML 코드로 생성하는 젬 지침을 만들어\" 라고 요청하면 바로 맛집 블로거를 위한 지침을 생성합니다.\n  알아두세요!\n1차 요청에서는 사용자에게 너무 많은 정보를 요구했습니다. 식당명, 주소, 키워드, 한 줄 평 등. 편리하게 쓰려고 AI를 활용하는데, 정보 입력에 시간을 다 쓰면 본말이 전도됩니다.\n그래서 두 번째 요청에서는 복잡한 질문만 단순화했습니다. \"사용자에게 묻는 질문이 너무 많아. 처음에 식당명/지역, 주문음식/추가음식, 주변음식/반찬, 후식, 방문배경, 사진을 요청하면서 시작하고, 사용자가 입력을 하면 나머지 정보는 사진을 분석해서 대신 작성하게 지침을 수정해\" 이런 식으로 사용자가 5가지 질문과 사진 업로드만으로 맛집 블로그를 작성할 수 있도록 만들었어요. 중요한 점은, 제미나이의 멀티모달 기능을 활용해 사진을 직접 분석하여 블로그 내용에 반영하도록 한 것이죠.\n \n젬 지침 등록 및 테스트  \n자, 이렇게 해서 나온 2차 결과물을, 제미나이로 돌아가서 젬 지침에 등록을 하고, 결과를 확인해볼게요. 젬 관리자의 샘 젬 만들기에서 예를 들어 제목을 \"맛집 블로그 전문가\"라고 입력을 합니다.\n사례 주인공의 상황: '성거산 시골 막국수' 테스트\n1. 식당명/지역: 천안 성거, 성거산 시골 막국수\n2. 주문음식/추가음식: 비빔 막국수와 수육\n계산 과정: 간편한 입력으로 결과 확인\n1) 3. 주변 음식/반찬: 주변 음식 코너가 따로 있고 셀프임\n2) 4. 후식: 후식 없음\n최종 결과: 블로그 글 자동 생성!\n- 5. 방문배경: 5월 중순 26도의 이른 더위 점심시간. 팀원들과 점심 식사\n- 사진 업로드 → AI가 알아서 블로그 글 생성\n이런 식으로 결과를 확인하고 수정할 부분을 계속해서 AI와 대화를 해 나가면서 완성형으로 만들어 가는 것입니다. 완벽한 결과물은 처음부터 나오지 않습니다. AI와 지속적인 대화를 통해 결과를 확인하고 수정해나가는 '반복 최적화' 과정이 핵심입니다. 제가 이전 영상에서 공유해드린 지침들도 수십 번의 시행착오와 세밀한 조정을 거쳐 완성된 것들이랍니다.\n \n결과물 개선 (HTML 구조 및 디자인 문제점 해결)  \n자, 지금 우리가 받은 결과물을 살펴보면 세 가지 중요한 문제점이 보입니다. 이런 세부 사항들이 블로그 포스팅의 품질을 좌우하게 됩니다.\nHTML 코드 생성 문제: HTML 코드가 코드 블록 안에 제대로 생성되지 않았습니다.\n불완전한 HTML 구조: HTML이 완전한 형태의 웹페이지 구조(HTML, HEAD, BODY 태그 포함)로 표시되고 있습니다. 이는 블로그에 붙여넣을 때 구조적 충돌을 일으킵니다. 블로그 플랫폼은 이미 이 태그들을 가지고 있기 때문이죠.\nH1 태그 중복 문제: 블로그 플랫폼에서는 제목을 별도로 입력하는 필드가 있기 때문에, 본문 내에 H1 태그가 있으면 중복 제목이 생겨 SEO에 좋지 않고 디자인도 깨질 수 있습니다.\n이런 경우, AI에게 '블로그 본문에 추가해야 하므로 헤드, 바디 태그와 에이치원 태그가 없는 인라인 스타일로 변경해주세요. 제목은 별도로 입력할 것입니다.'라고 요청하세요. 그러면 블로그 플랫폼에 바로 붙여넣을 수 있는 최적화된 HTML 코드를 받을 수 있습니다. 위의 2가지 문제 개선을 위해, 1. 이 지침의 출력물 중 HTML 코드로 생성되는 결과물은 \"코드 블록\"으로 출력해, 2. 블로그 본문에 추가해야 하므로 헤드, 바디 태그와 에이치원 태그가 없는 인라인 스타일로 변경해. 라고 다시 지침 수정을 요청합니다.\n \n자, 수정된 지침으로 생성된 결과물을 보면 인라인 스타일의 에이치티엠엘 코드가 코드블록에서 생성되는 것을 확인할 수 있습니다. 그런데 이번엔 디자인이 별로입니다. 이럴 때는 \"좀 더 시각화된 결과물이 나올 수 있게 디자인을 개선해줘\" 또는 구체적인 디자인 지침을 주거나 이전 영상에서 소개한 디자인 템플릿을 업로드하고 \"첨부 디자인 스타일로 반영되게 수정해\"라고 요청하셔도 될 거 같습니다. 아, 그리고 디자인만 보시려면, 젬을 수정할 필요 없이, AI STUDIO의 수정된 지침의 코드만 복사해서 코드펜으로 가서 확인하면 됩니다.\n \n \n맛집 블로그 생성 지침 핵심 요약!\n✨ 프롬프트 엔지니어링: AI와 잘 소통하는 기술. 명확한 역할, 목표, 형식을 제공하여 원하는 결과물을 얻는 것이 핵심이죠.\n  멀티모달 기능 활용: 사진을 직접 분석해서 생생한 리뷰를 작성하도록 지시! 단순히 텍스트를 생성하는 것을 넘어, 시각 정보까지 통합하여 블로그 글의 퀄리티를 높입니다.\n  HTML 구조 및 디자인 최적화:\nHTML = (SEO 최적화) + (인라인 스타일) + (H1 태그 제외)\n ‍  반복 최적화의 중요성: 완벽한 결과물은 한 번에 나오지 않아요! AI와 지속적으로 대화하고, 결과를 수정하며 더 나은 지침을 만들어가는 과정이 필요합니다.\n이 지침으로 여러분도 전문 맛집 블로거로 거듭나세요!  \n자주 묻는 질문 ❓\nQ: 제미나이 멀티모달 기능은 어떤 점에서 혁신적인가요?\nA:   예전 AI는 텍스트만 이해했지만, 멀티모달 기능은 사진, 영상 등 다양한 형태의 정보를 동시에 이해하고 처리할 수 있어, AI가 맥락을 파악하고 더 풍부하고 정확한 콘텐츠를 생성할 수 있게 합니다.\nQ: AI Studio를 사용하는 이유가 무엇인가요?\nA:   AI Studio는 구글의 최신 AI 모델을 가장 먼저 접하고, Temperature(창의성) 값 등을 세밀하게 조정하며 프롬프트를 테스트하고 최적화할 수 있는 개발자 친화적인 환경을 제공합니다.\nQ: 블로그 포스팅용 HTML 코드를 생성할 때 주의할 점은?\nA:   블로그 플랫폼의 구조와 충돌하지 않도록 HEAD, BODY 태그와 H1 태그를 제외한 인라인 스타일로 코드를 생성해야 합니다.\nQ: 맛집 블로그를 위한 '젬 지침'은 어떻게 만드나요?\nA:   AI Studio에서 프롬프트 엔지니어링을 활용하여 AI에게 명확한 역할, 목표, 형식을 부여하고, 사용자가 최소한의 정보만 입력해도 되는 방식으로 반복 최적화 과정을 거쳐 만듭니다.\nQ: 완성된 블로그 콘텐츠를 어떻게 활용할 수 있나요?\nA:   생성된 고품질의 블로그 포스팅을 꾸준히 업로드하여 블로그 방문자를 늘리고, 애드센스 수익을 창출하며, 스마트폰 용량 확보와 맛집 기록까지 일석삼조의 효과를 누릴 수 있습니다.\nGEM 무료 지침 다운 로드\n반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n\n    \n\n    \n맛집 블로그 생성 GEM 지침.zip\n0.01MB",
        "guid": "http://muzbox.tistory.com/483604",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 지침 무료 배포",
          "ai 멀티모달",
          "google ai studio",
          "html 블로그",
          "SEO 최적화",
          "맛집 블로그",
          "블로그 수익",
          "제미나이",
          "지침 생성",
          "콘텐츠 제작",
          "프롬프트 엔지니어링"
        ],
        "isoDate": "2025-06-08T05:28:03.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 6화, 학교생활 예고인데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2320",
        "pubDate": "Wed, 11 Jun 2025 18:24:02 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/06/11/1975e4949ff51ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-06-11T09:24:02.000Z"
      },
      {
        "creator": "［RULIWEB］",
        "title": "[NS2] 작은 변화가 만든 거대한 점프 업과 도파민, 마리오 카트 월드",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2319",
        "pubDate": "Wed, 11 Jun 2025 13:08:02 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/06/11/1975d2bb3385104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-06-11T04:08:02.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "[NS2] 닌텐도 스위치 2 - 확실한 성능 체감, 아쉬운 출시 전략",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2318",
        "pubDate": "Mon, 09 Jun 2025 19:13:12 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/06/09/197526bf77351ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-06-09T10:13:12.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": [
      {
        "creator": "Reasontobe",
        "title": "영어 레벨의 함정 - 영포자 일병 구출작전 by 다독",
        "link": "https://brunch.co.kr/@@34qN/44",
        "pubDate": "Mon, 09 Jun 2025 07:25:19 GMT",
        "author": "Reasontobe",
        "content": "&quot;한 배에서 아롱이 다롱이 난다.&quot; 라는 이야기 처럼, 우리 둘째는 첫째와 아주 많이 다릅니다. 성격, 외모 뿐 아니라, 좋아하는 것도, 잘하는 것도 아주 다릅니다. 그 중, 요즘 제가 신경을 많이 쓰는 부분은 언어에 대한 감각입니다.  어려서 부터, 영어를 좋아하고 쉽게 깨우친 오빠와 달리, 둘째는 오빠 보다 더 빨리 시작했고, 많은 시간을 썼음에도 불구<img src= \"https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F34qN%2Fimage%2FCFSIaekoXrFFlJWQhL0tvKwiQj4.jpg\" width=\"500\" />",
        "contentSnippet": "\"한 배에서 아롱이 다롱이 난다.\" 라는 이야기 처럼, 우리 둘째는 첫째와 아주 많이 다릅니다. 성격, 외모 뿐 아니라, 좋아하는 것도, 잘하는 것도 아주 다릅니다. 그 중, 요즘 제가 신경을 많이 쓰는 부분은 언어에 대한 감각입니다.  어려서 부터, 영어를 좋아하고 쉽게 깨우친 오빠와 달리, 둘째는 오빠 보다 더 빨리 시작했고, 많은 시간을 썼음에도 불구",
        "guid": "https://brunch.co.kr/@@34qN/44",
        "isoDate": "2025-06-09T07:25:19.000Z"
      }
    ]
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "어쩌다 개발자가 되었나 했더니",
        "link": "https://jeho.page/essay/2025/06/13/my-grandmother.html",
        "pubDate": "2025-06-13T02:43:00.000Z",
        "author": "김재호",
        "content": "<p>개발자로 살고 있는 이유를 가만히 생각해보니,  <br />\n1989년? 1990년에 삼촌이 산 <a href=\"/essay/2021/08/23/첫-컴퓨터의-추억.html\">XT 컴퓨터</a>.<br />\n이 컴퓨터에서 모든 것이 시작되었습니다.</p>\n\n<p>아주 어릴 때부터 이 컴퓨터 앞에 붙어 살았고…<br />\n코딩에 대해선 전혀 몰랐지만 컴퓨터와는 매우 친숙하게 됐습니다.</p>\n\n<p>그리고 1994년도에 삼촌이 사준 <a href=\"/essay/2022/09/06/second-computer-486-dx2-50.html\">486 컴퓨터</a>.<br />\n고모가 2004년도에 사준 <a href=\"/essay/2023/08/06/my-fourth-computer.html\">펜티엄4 셀러론 2.4c 컴퓨터</a>. 바로 이 컴퓨터로 처음 코딩을 시작했습니다.</p>\n\n<p>어쩌다 개발자가 되었나 생각해보니 바로 이런 이유였습니다.<br />\n컴퓨터학과가 뭐하는 학과인지도 모르고 그냥 지원했습니다. 친숙하다는 이유만으로.<br />\n코딩을 배우기 시작하며 난 도저히 못 하겠다, 그만두고 도망쳐야겠다 생각하기도 했습니다만… 이건 또 다른 우연한 사건으로 극복할 수 있었습니다.</p>\n\n<p>우연하고 사소한 사건들에 의해서 내 인생이 이렇게 되어버렸구나.</p>\n\n<p>2004년, 아버지가 돌아가신 후 고모, 삼촌, 친할머니와 무려 21년 간이나 연락을 안 하고 살았습니다.<br />\n얼마 전 <a href=\"https://brunch.co.kr/@buildingking/196\">용기를 내서 그 분들을 찾아갔습니다</a>.</p>\n\n<p>고모와 삼촌 그리고 할머니에게 그동안 하고 싶었던 말들을 모두 했습니다. 주로 감사하다는 이야기를.<br />\n요즘엔 다시 만난 가족과 시간을 많이 보내며 지내고 있습니다. 편안하고 기분이 좋습니다.</p>\n\n<p><img src=\"/assets/img/grandmother1.jpg\" alt=\"태안 파도리 해수욕장\" /><br />\n<em>태안 파도리 해수욕장에서, 할머니, 고모와 함께</em></p>\n\n<p><img src=\"/assets/img/grandmother2.jpg\" alt=\"청와대\" /><br />\n<em>청와대에서, 할머니와 나</em></p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"https://brunch.co.kr/@buildingking/196\">21년만에 다시 찾은 가족</a></li>\n</ul>",
        "contentSnippet": "개발자로 살고 있는 이유를 가만히 생각해보니,  \nXT 컴퓨터.\n아주 어릴 때부터 이 컴퓨터 앞에 붙어 살았고…\n그리고 1994년도에 삼촌이 사준 486 컴퓨터.\n펜티엄4 셀러론 2.4c 컴퓨터. 바로 이 컴퓨터로 처음 코딩을 시작했습니다.\n어쩌다 개발자가 되었나 생각해보니 바로 이런 이유였습니다.\n우연하고 사소한 사건들에 의해서 내 인생이 이렇게 되어버렸구나.\n2004년, 아버지가 돌아가신 후 고모, 삼촌, 친할머니와 무려 21년 간이나 연락을 안 하고 살았습니다.\n용기를 내서 그 분들을 찾아갔습니다.\n고모와 삼촌 그리고 할머니에게 그동안 하고 싶었던 말들을 모두 했습니다. 주로 감사하다는 이야기를.\n\n태안 파도리 해수욕장에서, 할머니, 고모와 함께\n\n청와대에서, 할머니와 나\n\n함께 읽으면 좋은 글:\n21년만에 다시 찾은 가족",
        "summary": "개발자로 살고 있는 이유를 가만히 생각해보니, 1989년? 1990년에 삼촌이 산 XT 컴퓨터. 이 컴퓨터에서 모든 것이 시작되었습니다.",
        "id": "https://jeho.page/essay/2025/06/13/my-grandmother",
        "isoDate": "2025-06-13T02:43:00.000Z"
      },
      {
        "title": "레일즈 철학과 카카오 문화",
        "link": "https://jeho.page/essay/2025/06/13/rails-kakao-coc.html",
        "pubDate": "2025-06-13T01:03:00.000Z",
        "author": "김재호",
        "content": "<p>루비온레일즈에서는 CoC라는 게 있습니다.<br />\nConvention over Configuration.<br />\n그러니까 설정보다 컨벤션을 더 중시하게 본다는 겁니다.<br />\n설정 파일에다가 이것저것 적는 것이 아니라 그저 관행대로 하면 알아서 동작하는 거.</p>\n\n<p>예를 들어서 라우트에 <code class=\"language-plaintext highlighter-rouge\">articles</code>란 이름의 경로를 만들면, 이 경로는 <code class=\"language-plaintext highlighter-rouge\">articles_controller.rb</code> 와 자동으로 매핑이 됩니다. <br />\n그리고 <code class=\"language-plaintext highlighter-rouge\">articles_controller</code>의 <code class=\"language-plaintext highlighter-rouge\">index</code> 액션은 <code class=\"language-plaintext highlighter-rouge\">views/articles/index.html.erb</code> 을 자동으로 찾아서 렌더링 합니다.<br />\n이를 위한 어떤 설정도 필요 없습니다. 그저 관행일 뿐입니다.<br />\nDB 의 테이블 이름과 모델 클래스의 이름이 항상 동일하다는 것도 CoC의 한 예입니다.</p>\n\n<p>처음엔 이런 관행이 짜증 나기도 했습니다.<br />\n왜 모든 테이블 이름이 복수형이어야만 하지?<br />\nPerson 모델이 있으면 당연히 테이블 이름도 person이어야 직관적이지 않나? 왜 people이라는 복수형을 강제하는 거지?<br />\n이런 생각으로 반항하며 대들 때마다 레일즈는 고통을 돌려주었습니다.</p>\n\n<p>초반에는 Rails와 많이 다투면서 이런 고집스러운 녀석과는 같이 못 살겠다 생각을 했었습니다만…<br />\n그 장점을 받아들이고 나서 드디어 친하게 지낼 수 있게 되었습니다.<br />\n오히려 <strong>제약하고 강제하면서 코딩이 만사 편해질 수 있구나</strong> 하는 걸 배웠습니다.</p>\n\n<p>그런데 이게 꼭 코딩 시에만 적용되는 것은 아니었습니다.<br />\n사내 문화에 이런 걸 적용한 회사도 있었습니다.</p>\n\n<p>카카오에 처음 들어갔을 때 영어 닉네임을 정해야만 했습니다.<br />\n그 영어 닉네임은 사람들에게 불리는 내 호칭이기도 했지만, 내 이메일 주소가 되기도 했습니다. 사내 github 주소가 되었고 사내 게시판의 닉네임이 되었습니다.<br />\n동료의 메일 주소를 물어볼 필요가 없었습니다. <strong>부르는 이름이 메일 주소</strong>니까.<br />\n저는 <a href=\"/essay/2021/08/25/무슨-운영체제를-가장-좋아하나요.html\">Windows 컴퓨터를 사용해왔지만</a> 얄짤없었습니다. 모든 사람들에게 맥북이 지급되었습니다.<br />\n사람들의 자유를 너무 제약하고 강제하는 것 아닌가?</p>\n\n<p>돌아보니 이런 문화들이 마치 레일즈의 CoC처럼 느껴집니다.<br />\n회사 문화를 처음 만든 사람들이 레일즈를 워낙 좋아해서 영향을 받은 거 아닌가 하는 의심마저 들었습니다.(웃음)<br />\n엄격하게 강제하지만 구성원들이 잘 따르기만 하면 모두가 편해지는 관례.</p>\n\n<p>이런 것이 좋을 때도 있다는 사실을 이제는 받아들입니다.<br />\n<br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2025/06/09/neat-email-address.html\">깔끔한 이메일 주소</a></li>\n  <li><a href=\"/essay/2022/05/02/kakao-ten-years.html\">완성되지 않은 회사</a></li>\n  <li><a href=\"/essay/2022/10/16/kakaotalk-server-development.html\">카카오톡 서버 개발의 추억</a></li>\n</ul>",
        "contentSnippet": "루비온레일즈에서는 CoC라는 게 있습니다.\n예를 들어서 라우트에 articles란 이름의 경로를 만들면, 이 경로는 articles_controller.rb 와 자동으로 매핑이 됩니다. \narticles_controller의 index 액션은 views/articles/index.html.erb 을 자동으로 찾아서 렌더링 합니다.\n처음엔 이런 관행이 짜증 나기도 했습니다.\n초반에는 Rails와 많이 다투면서 이런 고집스러운 녀석과는 같이 못 살겠다 생각을 했었습니다만…\n제약하고 강제하면서 코딩이 만사 편해질 수 있구나 하는 걸 배웠습니다.\n그런데 이게 꼭 코딩 시에만 적용되는 것은 아니었습니다.\n카카오에 처음 들어갔을 때 영어 닉네임을 정해야만 했습니다.\n부르는 이름이 메일 주소니까.\nWindows 컴퓨터를 사용해왔지만 얄짤없었습니다. 모든 사람들에게 맥북이 지급되었습니다.\n돌아보니 이런 문화들이 마치 레일즈의 CoC처럼 느껴집니다.\n이런 것이 좋을 때도 있다는 사실을 이제는 받아들입니다.\n함께 읽으면 좋은 글:\n깔끔한 이메일 주소\n완성되지 않은 회사\n카카오톡 서버 개발의 추억",
        "summary": "루비온레일즈에서는 CoC라는 게 있습니다. Convention over Configuration. 그러니까 설정보다 컨벤션을 더 중시하게 본다는 겁니다. 설정 파일에다가 이것저것 적는 것이 아니라 그저 관행대로 하면 알아서 동작하는 거.",
        "id": "https://jeho.page/essay/2025/06/13/rails-kakao-coc",
        "isoDate": "2025-06-13T01:03:00.000Z"
      },
      {
        "title": "깔끔한 이메일 주소",
        "link": "https://jeho.page/essay/2025/06/09/neat-email-address.html",
        "pubDate": "2025-06-09T09:48:00.000Z",
        "author": "김재호",
        "content": "<p>이메일 주소가 깔끔한 사람을 보면 좋은 느낌이 듭니다.<br />\n자기 이름을 영어로 혹은 짧고 읽기 쉬운 닉네임으로 만든 이메일들.</p>\n\n<p>그렇지 않고 한글 이름을 영문 자판 그대로 rlawogh(김재호) 옮겨 쓴다거나,<br />\n숫자가 들어간 이메일을(rlawogh777) 보면 좋은 느낌이 들지 않습니다.</p>\n\n<p>가장 인상적이었던 이메일은 r@google.com 였습니다.<br />\nUTF-8과 Go 언어를 만든 <a href=\"https://en.wikipedia.org/wiki/Rob_Pike\">롭 파이크</a>.<br />\n그가 구글에 들어갈 때 선택한 이메일.<br />\n한 글자 이메일 주소라니. 센스 터지는 군.</p>\n\n<p>깔끔한 이메일을 보면 이 사람은 신중하고 좋은 결정을 하는 사람이라는 생각이 듭니다.  <br />\n이런 생각은 편견일 수 있다는 걸 알면서도… 이 편견에서 빠져나오기가 힘드네요.</p>\n\n<p>P.S 저는 wlsdudtm 라는 이메일을 쓰는 동생에게 메일 주소 좀 바꾸라고 잔소리를 하곤 합니다.<br />\n이제 좀 바꾸자 지녕쓰.😆</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2023/04/21/most-delightful-emails.html\">가장 기쁜 이메일</a></li>\n</ul>",
        "contentSnippet": "이메일 주소가 깔끔한 사람을 보면 좋은 느낌이 듭니다.\n그렇지 않고 한글 이름을 영문 자판 그대로 rlawogh(김재호) 옮겨 쓴다거나,\n가장 인상적이었던 이메일은 r@google.com 였습니다.\n롭 파이크.\n깔끔한 이메일을 보면 이 사람은 신중하고 좋은 결정을 하는 사람이라는 생각이 듭니다.  \nP.S 저는 wlsdudtm 라는 이메일을 쓰는 동생에게 메일 주소 좀 바꾸라고 잔소리를 하곤 합니다.\n\n함께 읽으면 좋은 글:\n가장 기쁜 이메일",
        "summary": "이메일 주소가 깔끔한 사람을 보면 좋은 느낌이 듭니다. 자기 이름을 영어로 혹은 짧고 읽기 쉬운 닉네임으로 만든 이메일들.",
        "id": "https://jeho.page/essay/2025/06/09/neat-email-address",
        "isoDate": "2025-06-09T09:48:00.000Z"
      },
      {
        "title": "최고의 사무실은 바로 우리집 방구석",
        "link": "https://jeho.page/essay/2025/06/09/my-office-is-my-room.html",
        "pubDate": "2025-06-09T02:44:00.000Z",
        "author": "김재호",
        "content": "<p>집에서는 도저히 일이 안 된다는 사람들을 많이 봤습니다.<br />\n사무실에 가서 하지 않으면 절대 집중이 안 된다고. 커피숍이라도 가야한다고.</p>\n\n<p>저도 그 기분을 압니다.<br />\n커피숍에서 코딩을 해보기도 했는데 변수가 많았습니다.<br />\n어느 날은 잘 되다가도 어느 날은 공치고 돌아오고.<br />\n이렇게 일 하는 건 안정적으로 오래할 수 없다는 걸 깨달았습니다.</p>\n\n<p>다행히 저는 집에서도 집중을 잘 하는 편입니다.<br />\n커피한잔 작업의 90%이상은 집에 있는 제 책상에서 이루어졌습니다.</p>\n\n<p>커다란 모니터도 2개나 있고, 책상과 의자의 높이, 키보드, 온도/습도. 소음.<br />\n출근 시간도 없지, 모든 면에서 집이 훨씬 편하니까.</p>\n\n<p>집에서 일을 잘하는 건 타고난 게 아닙니다. 하다보면 습관이 되어 편해지는 것.<br />\n집에서 일할 수 있는 습관을 들여놓으면 1인 개발에 다른 사람보다 한 발 유리해진 겁니다.<br />\n돈도 안 들지, 시간도 아낄 수 있지, 무엇보다 안정적으로 코딩할 수 있게 되니까.</p>\n\n<p>강력 추천하는 사무실은 바로 자기집 방구석입니다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2023/03/30/silence-in-the-office.html\">사무실의 고요함이 너무 좋아</a></li>\n  <li><a href=\"/essay/2022/09/14/successful-developer.html\">1인 개발자 전성시대</a></li>\n</ul>",
        "contentSnippet": "집에서는 도저히 일이 안 된다는 사람들을 많이 봤습니다.\n저도 그 기분을 압니다.\n다행히 저는 집에서도 집중을 잘 하는 편입니다.\n커다란 모니터도 2개나 있고, 책상과 의자의 높이, 키보드, 온도/습도. 소음.\n집에서 일을 잘하는 건 타고난 게 아닙니다. 하다보면 습관이 되어 편해지는 것.\n강력 추천하는 사무실은 바로 자기집 방구석입니다.\n\n함께 읽으면 좋은 글:\n사무실의 고요함이 너무 좋아\n1인 개발자 전성시대",
        "summary": "집에서는 도저히 일이 안 된다는 사람들을 많이 봤습니다. 사무실에 가서 하지 않으면 절대 집중이 안 된다고. 커피숍이라도 가야한다고.",
        "id": "https://jeho.page/essay/2025/06/09/my-office-is-my-room",
        "isoDate": "2025-06-09T02:44:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "AI 브라우저 'Dia' 베타 등장, 브라우저 시장 판도 바꾼다",
        "link": "https://blog.gaerae.com/2025/06/dia-browser-beta.html",
        "pubDate": "Fri, 13 Jun 2025 07:49:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<figure><img alt=\"\" border=\"0\" data-original-height=\"657\" data-original-width=\"1168\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiK0d6iU07gYzE9Y1LWOAn4884qnKjZAG9X-kkoQOJFJEBy77qHTq1HkUdr6CEHsd6kLCdsnP6s5H5FMsWSjxqkKSp3qA1-5A1gewsx_a85fiUSnOCqLwV2shMMRbZR2P-lMDRliPIMno4EgVamf-3GvufUK_JDRx0ZsB161_HxtwHBw8BaczVAAeWosyA/s1600/dia-browser.jpg\" style=\"width: 100%;\" />\n<figcation>Dia browser</figcation>\n</figure>\n<p>최근 웹 브라우저 시장의 판도를 바꿀 새로운 주자, 'Dia'가 베타 버전으로 공개됐다. AI(인공지능) 기능을 브라우저의 핵심으로 내세운 이 브라우저는, 기존의 Arc 브라우저를 개발한 The Browser Company가 선보인 차세대 제품으로 주목받고 있다.</p>\n<h2 id=\"ai를-브라우저-경험의-중심에-두다\">AI를 브라우저 경험의 중심에 두다</h2>\n<p>Dia는 기존의 웹 브라우저와 달리, 인공지능을 브라우저 경험의 중심에 두고 있다. 사용자는 별도의 AI 서비스(예: ChatGPT, Claude, Perplexity 등) 사이트를 방문하지 않고도, 브라우저 내에서 직접 AI와 상호작용할 수 있다. 특히, 주소창(URL bar)에서 웹사이트 접속, 검색, AI 챗봇 기능을 모두 처리할 수 있어, 브라우저 사용 흐름에서 AI를 자연스럽게 활용할 수 있다.</p>\n<p>주요 기능으로는 현재 열려 있는 모든 탭의 정보를 바탕으로 한 쿼리, 웹 페이지 요약, AI 챗봇을 통한 문서 작성 및 요약, 사용자 맞춤형 단축키 및 레이아웃 생성 등이 있다. 또한, 최근 7일간의 브라우징 기록을 참고해 더욱 정교한 AI 답변을 제공한다.</p>\n<p>특히 'Skills' 기능은 사용자가 원하는 작업(예: 리딩 모드 활성화, 웹 폼 자동 입력 등)에 맞춰 AI가 코드 스니펫을 생성해주는 독특한 기능이다. 이는 사용자의 브라우징 경험을 더욱 개인화하고 효율적으로 만들어준다.</p>\n<h2 id=\"arc-브라우저의-한계와-dia의-출발\">Arc 브라우저의 한계와 Dia의 출발</h2>\n<p>The Browser Company는 지난해 Arc 브라우저 개발을 중단했다. Arc는 매니아층에서 인기를 끌었지만, 복잡한 사용자 경험(UX)으로 인해 대중적 확산에는 한계가 있었다. 이에 따라, 회사는 AI를 브라우저의 핵심으로 내세운 Dia 개발에 집중하게 됐다.</p>\n<p>Dia는 구글의 오픈소스 크로미움 엔진을 기반으로 하여, 기존 브라우저와 유사한 인터페이스를 제공하면서도, AI 기능이 깊이 통합된 것이 특징이다. 사용자들은 Arc 브라우저의 복잡한 UI에 익숙하지 않은 일반 사용자도 쉽게 적응할 수 있다는 평가를 내리고 있다.</p>\n<h2 id=\"베타-출시-및-사용-환경\">베타 출시 및 사용 환경</h2>\n<p>현재 Dia는 초대장이 있는 사용자만 사용할 수 있는 베타 버전으로 공개됐다. 특히 기존 Arc 사용자들은 즉시 Dia 베타에 접근할 수 있으며, 추가로 다른 사용자를 초대할 수 있는 권한도 있다. 베타 버전은 현재 macOS 14 이상, Apple Silicon(M1 이상) 기기에서만 사용할 수 있다. 윈도우 및 리눅스 버전은 아직 출시 계획이 공개되지 않았다.</p>\n<h2 id=\"프라이버시와-사용자-경험\">프라이버시와 사용자 경험</h2>\n<p>Dia는 사용자의 프라이버시를 강조하며, AI 챗봇이 사용자의 계정과 연결되지 않고, 데이터는 30일 후 삭제된다고 밝혔다. 또한, 광고 및 트래커 차단 기능이 기본으로 제공된다. 사용자는 자신의 브라우징 데이터를 직접 관리할 수 있으며, AI 기능은 사용자의 경험을 더욱 개인화한다는 것이 회사 측의 설명이다.</p>\n<h2 id=\"브라우저-시장의-변화와-전망\">브라우저 시장의 변화와 전망</h2>\n<p>The Browser Company의 조시 밀러(CEO)는 \"사용자들이 더 이상 웹페이지를 통해 인터넷과 상호작용하지 않고, AI 모델을 통해 인터넷에 접근한다\"고 말하며, Dia가 미래 브라우저의 표준이 될 수 있음을 시사했다.</p>\n<p>현재 Opera, Google Chrome, Microsoft Edge 등 주요 브라우저들도 AI 기능을 도입하고 있지만, Dia는 AI를 선택적 기능이 아닌 브라우저의 핵심으로 내세운다는 점에서 차별화된다.</p>\n<h2 id=\"chatgpt-claude-perplexity의-브라우저-직접-개발-가능성\">ChatGPT, Claude, Perplexity의 브라우저 직접 개발 가능성</h2>\n<p>한편, ChatGPT, Claude, Perplexity 등 대형 AI 서비스가 직접 브라우저를 개발할 가능성도 시장에서 주목받고 있다. 이미 OpenAI(챗GPT) 관련 커뮤니티에서는 \"GPT 브라우저\"라는 이름의 AI 중심 브라우저 개발 제안이 등장한 바 있다. 이 브라우저는 사용자의 브라우징 패턴과 관심사에 따라 맞춤형 콘텐츠를 추천하고, AI가 주도적으로 인터넷 여행을 안내하는 것이 핵심 아이디어다.</p>\n<p>Perplexity 역시 'Comet'이라는 이름의 AI 브라우저를 개발 중이라는 소식이 공개된 바 있다. Comet은 향상된 보안, 스마트 탭 관리, 실시간 글쓰기 지원 등 다양한 AI 기능을 브라우저에 통합할 예정이다. 다만, 아직 공식 출시 일정은 발표되지 않았다.</p>\n<p>Claude는 아직 브라우저 직접 개발 소식은 없으나, 웹사이트 제작 및 코드 생성 등에서 사용자의 요구에 따라 높은 수준의 맞춤화가 가능하다는 점에서, 향후 브라우저 시장 진출 가능성도 열려 있다.</p>\n<p>이처럼 AI 서비스들이 브라우저를 직접 개발하거나, 브라우저에 더 깊게 통합되는 움직임이 활발해지면서, 앞으로 웹 브라우저 시장은 AI를 중심으로 한 경쟁이 본격화될 전망이다.</p>\n\n<h2 id=\"참고-링크\">참고 링크</h2>\n<ol>\n<li><a href=\"https://www.diabrowser.com/\">Dia browser: Official</a></li><li><a href=\"https://efficient.app/apps/dia\">Efficient App: Dia Browser Review 2025</a></li>\n<li><a href=\"https://dev.ua/en/news/brauzer-dia-1749731796\">dev.ua: Dia, an AI-powered browser, is now available in beta</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=NYgvDRR5bNA\">YouTube: Dia Browser Review: My First Impressions &amp; Test</a></li>\n<li><a href=\"https://appuals.com/dia-enters-public-beta-on-macos-and-it-can-read-your-tabs-using-ai/\">Appuals: Dia enters public beta on macOS and it can read your tabs using AI</a></li>\n<li><a href=\"https://community.openai.com/t/suggestiong-for-a-new-open-ai-browser/1120901\">OpenAI Community: Suggestion for a new Open AI Browser</a></li>\n<li><a href=\"https://www.davydovconsulting.com/post/how-claude-can-generate-and-launch-a-site\">Davydov Consulting: Build and Launch a Website Fast with Claude AI</a></li>\n<li><a href=\"https://devpost.com/software/perplexibrowse\">Devpost: PerplexiBrowse</a></li>\n<li><a href=\"https://www.analyticsinsight.net/news/perplexity-unveils-comet-the-ai-browser-ready-to-challenge-chrome-and-beyond\">Analytics Insight: Perplexity Unveils Comet: The AI Browser Ready to Challenge Chrome and Beyond</a></li>\n<li><a href=\"https://techcrunch.com/2025/06/11/the-browser-company-launches-its-ai-first-browser-dia-in-beta/\">TechCrunch: The Browser Company launches its AI-first browser, Dia, in beta</a></li>\n<li><a href=\"https://www.theverge.com/web/685232/dia-browser-ai-arc\">The Verge: Dia, the AI browser from the makers of Arc, is now available in beta</a></li>\n<li><a href=\"https://9to5mac.com/2025/06/11/dia-the-browser-companys-ai-first-browser-launches-mac-beta/\">9to5Mac: Dia, The Browser Company's AI-first browser, launches Mac beta</a></li>\n<li><a href=\"https://www.techrepublic.com/article/news-arc-dia-the-browser-company/\">TechRepublic: Will New AI Browser Dia Redefine How We Use the Web?</a></li>\n<li><a href=\"https://www.engadget.com/ai/the-browser-companys-new-ai-browser-rolls-out-to-private-beta-testers-170311014.html\">Engadget: The Browser Company's new AI browser rolls out to private beta testers</a></li>\n</ol>",
        "contentSnippet": "Dia browser\n\n최근 웹 브라우저 시장의 판도를 바꿀 새로운 주자, 'Dia'가 베타 버전으로 공개됐다. AI(인공지능) 기능을 브라우저의 핵심으로 내세운 이 브라우저는, 기존의 Arc 브라우저를 개발한 The Browser Company가 선보인 차세대 제품으로 주목받고 있다.\nAI를 브라우저 경험의 중심에 두다\nDia는 기존의 웹 브라우저와 달리, 인공지능을 브라우저 경험의 중심에 두고 있다. 사용자는 별도의 AI 서비스(예: ChatGPT, Claude, Perplexity 등) 사이트를 방문하지 않고도, 브라우저 내에서 직접 AI와 상호작용할 수 있다. 특히, 주소창(URL bar)에서 웹사이트 접속, 검색, AI 챗봇 기능을 모두 처리할 수 있어, 브라우저 사용 흐름에서 AI를 자연스럽게 활용할 수 있다.\n주요 기능으로는 현재 열려 있는 모든 탭의 정보를 바탕으로 한 쿼리, 웹 페이지 요약, AI 챗봇을 통한 문서 작성 및 요약, 사용자 맞춤형 단축키 및 레이아웃 생성 등이 있다. 또한, 최근 7일간의 브라우징 기록을 참고해 더욱 정교한 AI 답변을 제공한다.\n특히 'Skills' 기능은 사용자가 원하는 작업(예: 리딩 모드 활성화, 웹 폼 자동 입력 등)에 맞춰 AI가 코드 스니펫을 생성해주는 독특한 기능이다. 이는 사용자의 브라우징 경험을 더욱 개인화하고 효율적으로 만들어준다.\nArc 브라우저의 한계와 Dia의 출발\nThe Browser Company는 지난해 Arc 브라우저 개발을 중단했다. Arc는 매니아층에서 인기를 끌었지만, 복잡한 사용자 경험(UX)으로 인해 대중적 확산에는 한계가 있었다. 이에 따라, 회사는 AI를 브라우저의 핵심으로 내세운 Dia 개발에 집중하게 됐다.\nDia는 구글의 오픈소스 크로미움 엔진을 기반으로 하여, 기존 브라우저와 유사한 인터페이스를 제공하면서도, AI 기능이 깊이 통합된 것이 특징이다. 사용자들은 Arc 브라우저의 복잡한 UI에 익숙하지 않은 일반 사용자도 쉽게 적응할 수 있다는 평가를 내리고 있다.\n베타 출시 및 사용 환경\n현재 Dia는 초대장이 있는 사용자만 사용할 수 있는 베타 버전으로 공개됐다. 특히 기존 Arc 사용자들은 즉시 Dia 베타에 접근할 수 있으며, 추가로 다른 사용자를 초대할 수 있는 권한도 있다. 베타 버전은 현재 macOS 14 이상, Apple Silicon(M1 이상) 기기에서만 사용할 수 있다. 윈도우 및 리눅스 버전은 아직 출시 계획이 공개되지 않았다.\n프라이버시와 사용자 경험\nDia는 사용자의 프라이버시를 강조하며, AI 챗봇이 사용자의 계정과 연결되지 않고, 데이터는 30일 후 삭제된다고 밝혔다. 또한, 광고 및 트래커 차단 기능이 기본으로 제공된다. 사용자는 자신의 브라우징 데이터를 직접 관리할 수 있으며, AI 기능은 사용자의 경험을 더욱 개인화한다는 것이 회사 측의 설명이다.\n브라우저 시장의 변화와 전망\nThe Browser Company의 조시 밀러(CEO)는 \"사용자들이 더 이상 웹페이지를 통해 인터넷과 상호작용하지 않고, AI 모델을 통해 인터넷에 접근한다\"고 말하며, Dia가 미래 브라우저의 표준이 될 수 있음을 시사했다.\n현재 Opera, Google Chrome, Microsoft Edge 등 주요 브라우저들도 AI 기능을 도입하고 있지만, Dia는 AI를 선택적 기능이 아닌 브라우저의 핵심으로 내세운다는 점에서 차별화된다.\nChatGPT, Claude, Perplexity의 브라우저 직접 개발 가능성\n한편, ChatGPT, Claude, Perplexity 등 대형 AI 서비스가 직접 브라우저를 개발할 가능성도 시장에서 주목받고 있다. 이미 OpenAI(챗GPT) 관련 커뮤니티에서는 \"GPT 브라우저\"라는 이름의 AI 중심 브라우저 개발 제안이 등장한 바 있다. 이 브라우저는 사용자의 브라우징 패턴과 관심사에 따라 맞춤형 콘텐츠를 추천하고, AI가 주도적으로 인터넷 여행을 안내하는 것이 핵심 아이디어다.\nPerplexity 역시 'Comet'이라는 이름의 AI 브라우저를 개발 중이라는 소식이 공개된 바 있다. Comet은 향상된 보안, 스마트 탭 관리, 실시간 글쓰기 지원 등 다양한 AI 기능을 브라우저에 통합할 예정이다. 다만, 아직 공식 출시 일정은 발표되지 않았다.\nClaude는 아직 브라우저 직접 개발 소식은 없으나, 웹사이트 제작 및 코드 생성 등에서 사용자의 요구에 따라 높은 수준의 맞춤화가 가능하다는 점에서, 향후 브라우저 시장 진출 가능성도 열려 있다.\n이처럼 AI 서비스들이 브라우저를 직접 개발하거나, 브라우저에 더 깊게 통합되는 움직임이 활발해지면서, 앞으로 웹 브라우저 시장은 AI를 중심으로 한 경쟁이 본격화될 전망이다.\n참고 링크\nDia browser: Official\nEfficient App: Dia Browser Review 2025\ndev.ua: Dia, an AI-powered browser, is now available in beta\nYouTube: Dia Browser Review: My First Impressions & Test\nAppuals: Dia enters public beta on macOS and it can read your tabs using AI\nOpenAI Community: Suggestion for a new Open AI Browser\nDavydov Consulting: Build and Launch a Website Fast with Claude AI\nDevpost: PerplexiBrowse\nAnalytics Insight: Perplexity Unveils Comet: The AI Browser Ready to Challenge Chrome and Beyond\nTechCrunch: The Browser Company launches its AI-first browser, Dia, in beta\nThe Verge: Dia, the AI browser from the makers of Arc, is now available in beta\n9to5Mac: Dia, The Browser Company's AI-first browser, launches Mac beta\nTechRepublic: Will New AI Browser Dia Redefine How We Use the Web?\nEngadget: The Browser Company's new AI browser rolls out to private beta testers",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-981084775710475221",
        "categories": [
          {
            "_": "ai",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "browser",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "news",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-06-13T07:49:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": []
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "학습 플랫폼과 AI",
        "link": "https://jojoldu.tistory.com/831",
        "pubDate": "Sun, 8 Jun 2025 10:17:54 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/831#entry831comment",
        "content": "<blockquote data-ke-style=\"style1\"><p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Serif KR';\"><p>아래는 저희 제품팀 전체에게 공유한 내용 중 일부를 정리해서 공유합니다.</p>\n</span></p></blockquote><p>최근에 팀원과 함께 AI 요약 노트를 어떻게 제공할지에 대해 논의 논의하는 시간을 가졌다.  </p>\n<p>여러 아이디어가 나왔는데, <strong>퀴즈를 풀기 전에 요약 내용을 꼭 숙지</strong> 하도록 장치를 두는 것은 놓치지 말았으면 한다는 것을 조건으로 두었다.<br>다만, 그걸 덜 불편하게, 자연스럽게 전달할 수 있도록 고민을 더 할 필요는 있다고도 덧붙였다.  </p>\n<p>퀴즈를 풀려면 요약 노트를 꼭 봐야하는 것이 불편할 수 있다.<br>바로 퀴즈 풀고 싶은데, 요약 노트가 한번 등장하면 퀴즈까지 가는 퍼널이 증가하는 것이고, 고객은 최소 1번 이상은 클릭을 더 해야하니 퀴즈 자체가 목적인 분들께는 좀 더 귀찮은 요소가 될 수 있다.<br>그렇다 해도 잘 정리된 요약 노트를 보게 하는 것은 꼭 필수 과정으로 들어가야한다고 이야기드렸다.<br>고객이 불편해하는 것들은 모두 다 편한 것으로 개선하는 것도 중요하다고 생각한다.<br>그런 면에서는 넷플릭스, 에이비앤비, 유튜브에서 배울 점이 많다.<br>다만, 그것보다 더 양보할 수 없는 중요한 점이 있는데, 그건 바로 우리 플랫폼의 근본 목적인 <code>고객의 학습</code> 이다.    </p>\n<p><strong>아무리 편하더라도 그게 수강생분들의 학습, 성장에 전혀 도움이 안된다면 그건 우리의 목표에 방해</strong>되는 기능이다.  </p>\n<p>설령 조금 불편하더라도 훨씬 더 고객이 원하는 교육, 성장, 학습의 목표를 잘 달성할 수 있게하는 장치라면 그걸 지향해야하고 그로 인해 발생하는 불편한 점을 최대한 상쇄시키는 것이 저희 같은 제품가들이 해야하는 고민이라는 것이다.  </p>\n<hr>\n<p>(틀릴 수도 있지만) 요즘 AI 제품들에 대한 내 생각도 여기에서의 연장선에 있다.  </p>\n<p>요즘 여러 오픈카톡방과 커뮤니티에서 &quot;모든 서비스가 채팅 UI만 남고 다른 UI/UX는 모두 사라질 것이다&quot; 라는 이야기를 공공연하게 꺼내곤 한다.    </p>\n<p>그런 면에서 우리 학습 강의실 내에도 AI 채팅을 넣는 것고 고려해볼 수 있다.  </p>\n<p>다만, 이 부분에 대해서는 가능하면 최대한 유보하는 입장이다.<br>제품가로서 제품에 대한 고민이 너무 날카롭지 않고 무딘 감각으로 느껴지기 때문이다.  </p>\n<p>좋은 학습 플랫폼이라면 <strong>개개인이 갖고 있는 백그라운드에 따라 학습 성과가 천차만별이 되는 것을 최대한 지양</strong>해야하고, 백그라운드가 부족하더라도 최대한 많은 것을 가져갈 수 있는 방향으로 제품을 만들어야 한다고 생각한다.  </p>\n<p>물론 자질이 훌륭한 분들의 상방선을 열어두고 극대화 하는 것도 중요하지만 <strong>그런 분들은 학습 플랫폼의 도움 없이도 혼자서도 잘 할 수 있는 분들</strong>이기에 오히려 우리 같은 플랫폼의 도움이 필요로 하지 않는다.<br>진짜 우리의 도움이 필요한 분들은 <strong>부족한 백그라운드로 인해서 배우는데 어려움이 있거나 효율이 떨어지는 분들</strong>이다.<br>그들에게 학습에 대한 레버리지를 줄 수 있는 것을 지향해야한다고 보는 것이다.  </p>\n<p>그런 면에서 <strong>AI 채팅으로 모르는 것을 물어보세요</strong> 라는 것은 이 관점에서는 불합격인 제품이라고 본다.<br>왜냐면 <strong>프롬프트 역량에 따라 학습 효율이 천차만별</strong>로 나뉘기 때문이다.  </p>\n<p>지금도 대다수의 많은 사람들은 AI 채팅을 통해 제대로 학습하는 사람은 극 소수이다.<br>희노애락으로 AI를 쓰시는 분들은 많지만, 여전히 많은 분들이 학습하기 위해 AI를 쓰는 경우는 전체 인구에 비하면 소수이다.<br>AI는 틀린 답을 낸다고 생각해서 적당히 질문하다가 원하는 답이 안나와서 &quot;에잇&quot; 하고 다시 기존의 검색 서비스를 이용하시거나 AI가 틀린 답을 낸 건지도 모르고 사용 하시는 분들도 많다.<br>혹은 여전히 AI를 쓰지 않는 분들도 많다.  </p>\n<p>이런 관점에서는 <strong>개인의 프롬프트 역량에 따라 정확한 답변을 받을 수 있을 확률이 달라지는</strong> AI 채팅이란 기능이 진짜 백그라운드가 부족한, 독학이 어려운 분들에게 도움이 되는 제품인가?   </p>\n<p>&quot;AA&quot; 라는 주제를 공부하려고 강의를 결제했는데, <strong>그 주제를 잘 공부하기 위해서는 AI 프롬프트를 자세히 공부해야한다</strong> 라는 것이 과연 학습 플랫폼이 고객에게 전달해야할 가치인가? 라는 근본적인 의문인 것이다.  </p>\n<p>이는 얼핏보면 <strong>AI 이전 시대의 &#39;영어&#39; 와 비슷한 것 같단 생각</strong>도 든다.  </p>\n<p>영어를 잘 한다면 전세계의 모든 지식을 쉽게 배울 수 있다.<br>강의에서 전달하고자 하는 내용을 모두 영어로 설명한다면 관련된 내용을 추가적으로 찾아볼때도 훨씬 더 편하게 찾아 볼 수 있다.<br>모든 용어가 다 원래의 용어 그대로를 사용할테니 더 정확한 설명이 될 것이고, 영어로 배운 사람은 이후에도 그 주제에 대해서는 훨씬 더 정확히, 훨씬 더 확장성 있게 학습을 한 상태가 된다.  </p>\n<p>근데 그 서비스가 과연 <strong>학습 성장을 평등하게 제공한 것</strong>인가?<br>그 서비스는 영어를 잘 아는 사람들만을 위한 서비스이다.  </p>\n<p>학습 성장 평등을 지향하는 우리 같은 학습 플랫폼은 <strong>영어, 프롬프트 역량이 부족해도 잘 배울 수 있는 환경</strong>을 만드는 것에 집중해야 한다는 생각이 요즘 더 강하게 들었다.    </p>\n<p><strong>AI는 사업과 제품에 있어서 큰 곱하기 효과를 주는 것은 맞는데, 이것 자체가 제품이나 사업이 되어서는 안된다</strong>.  </p>\n<p>특히나 그 기능이 정말로 우리가 깊은 고민 없이 그냥 남들이 하니깐 하는 정도 수준에서의 기능이라면 더더욱 그 방향은 위험하다고 본다.  </p>\n<p>그건 뭘 위한 것인지 목표 없이 단순히 AI를 붙이고 &#39;해줘&#39;에 가까운 것인데, 그런건 좋은 제품의 기준에는 전혀 합당하다고 보진 않는다.  </p>\n<p>발전 방향도 어색하다고 본다.<br>AI 채팅의 답변이 좋으려면 그만큼 더 좋은 모델을 사용해야한다.<br>근데 좋은 모델을 사용할수록 대부분 BEP를 맞추기 힘들다.<br>그 많은 AI 토큰 비용을 다 플랫폼이 부담해야하고, 그러다 보면 플랫폼 수수료는 더욱 더 높아진다.  </p>\n<p>그렇다면 저렴한 모델을 고객에게 제공하고 <strong>별로인 AI 모델인데 쓸려면 써라</strong> 정도의 스탠스를 가지고 가는 것도 너무 웃긴다.<br>어차피 만족할만한 답변은 나오지 않는데 고객은 그걸 왜 써야하나.</p>\n<p>반면 이런 기능들은 좋다.  </p>\n<ul>\n<li>&quot;이 내용을 어디선가 봤는데, 그게 어느 강의의 어느 영상이였는지 모르겠다&quot; 라면 그걸 쉽게 찾을 수 있는 검색</li>\n<li>방금 전에 강사님이 &quot;이 내용은 다른 강의에서 자세히 이야기 하고 있으니 그 강의를 수강해보세요&quot; 라고 하는데 그게 어느 강의의 어느 영상 몇분째 인지 알려주는 학습 도우미</li>\n<li>&quot;남들을 가르치는 것이 가장 좋은 학습 방법&quot; 이라는 기준으로 방금 배운 내용을 토대로 누군갈 가르쳐보는 경험을 줄 수 있는 환경</li>\n</ul>\n<p>이런 기능들은 목표가 뚜렷하고 프롬프트 등의 백그라운드 지식과 관계없이 학습을 더 잘할 수 있도록 나름의 고민과 여러 학습 효과에 대한 자료를 기반으로 했기 때문에 좋다.<br>고객이 학습을 하는데 있어 방해되는 요소가 자연스레 해소 되는 것이기도 한다.  </p>\n<p>물론 이런 예시들을 전부 &quot;AI 채팅으로 물어보도록 하면 되지 않냐&quot; 고 할 수도 있다.<br>그건 세상에서 가장 똑똑한 과외 선생님을 붙여도 서울대를 못가는 수많은 학생들과 같다.  </p>\n<p>&quot;내가 뭘 모르는지도 모르고, 뭘 물어봐야하는지도 모르는&quot; 대다수의 학생들에겐 적합하지 않다.  </p>\n<p>고객에게 &quot;이런 것도 질문하세요&quot;, &quot;저런 것도 질문하세요&quot; 라고 하기 보다는 <strong>고객 스스로도 몰랐던 학습의 방해 요소들이 제품 안에서 자연스럽게 해결되고, 성장을 가속할 수 있는 장치가 자연스럽게 적용 되어있는 것</strong> 이 가장 좋다.  </p>\n<p>종국에는 &quot;인프런 써보기 전에는 몰랐는데 인프런 써보고 나니깐 다른 서비스는 못쓰겠다&quot; 라는 이야기가 나올 수 있다고 믿고 있다.  </p>\n<p>우리가 해야할 것은, <strong>AI를 어떻게하면 잘 사용할 수 있을지는 우리의 고민으로 가져오고, 고객들은 AI를 얼마나 잘 사용하는지에 관계없이 원했던 것 이상으로 성장시켜드리는 것</strong>이다.  </p>\n<p>그래서 직접 학습자가 되어보는 것이 중요하다.  </p>\n<ul>\n<li>나는 어떤 환경에서 학습이 잘 되었나,  </li>\n<li>나는 아예 처음 접하는 것을 배울때 어떻게 배우나,  </li>\n<li>내가 가장 만족스러웠던 학습 경험은 어떤 것이었나 등등  </li>\n</ul>\n<p>스스로가 고객이 되어서 &quot;있으면 좋은 것&quot; 이 아니라, &quot;이게 진짜 공부하는데 있어서 큰 도움이 되었다&quot; 라는 것을 계속해서 고민하고 시도해보는 것이 인프랩의 제품 팀으로서 중요하다.  </p>\n<p>그래서 이 부분에 대해 꼭 명심하고 어떤 제품을 만들던 좀 더 날카롭게 고민해야하는 시기인 것 같다.</p>",
        "contentSnippet": "아래는 저희 제품팀 전체에게 공유한 내용 중 일부를 정리해서 공유합니다.\n\n최근에 팀원과 함께 AI 요약 노트를 어떻게 제공할지에 대해 논의 논의하는 시간을 가졌다.  \n여러 아이디어가 나왔는데, 퀴즈를 풀기 전에 요약 내용을 꼭 숙지 하도록 장치를 두는 것은 놓치지 말았으면 한다는 것을 조건으로 두었다.\n다만, 그걸 덜 불편하게, 자연스럽게 전달할 수 있도록 고민을 더 할 필요는 있다고도 덧붙였다.  \n퀴즈를 풀려면 요약 노트를 꼭 봐야하는 것이 불편할 수 있다.\n바로 퀴즈 풀고 싶은데, 요약 노트가 한번 등장하면 퀴즈까지 가는 퍼널이 증가하는 것이고, 고객은 최소 1번 이상은 클릭을 더 해야하니 퀴즈 자체가 목적인 분들께는 좀 더 귀찮은 요소가 될 수 있다.\n그렇다 해도 잘 정리된 요약 노트를 보게 하는 것은 꼭 필수 과정으로 들어가야한다고 이야기드렸다.\n고객이 불편해하는 것들은 모두 다 편한 것으로 개선하는 것도 중요하다고 생각한다.\n그런 면에서는 넷플릭스, 에이비앤비, 유튜브에서 배울 점이 많다.\n다만, 그것보다 더 양보할 수 없는 중요한 점이 있는데, 그건 바로 우리 플랫폼의 근본 목적인 고객의 학습 이다.    \n아무리 편하더라도 그게 수강생분들의 학습, 성장에 전혀 도움이 안된다면 그건 우리의 목표에 방해되는 기능이다.  \n설령 조금 불편하더라도 훨씬 더 고객이 원하는 교육, 성장, 학습의 목표를 잘 달성할 수 있게하는 장치라면 그걸 지향해야하고 그로 인해 발생하는 불편한 점을 최대한 상쇄시키는 것이 저희 같은 제품가들이 해야하는 고민이라는 것이다.  \n(틀릴 수도 있지만) 요즘 AI 제품들에 대한 내 생각도 여기에서의 연장선에 있다.  \n요즘 여러 오픈카톡방과 커뮤니티에서 \"모든 서비스가 채팅 UI만 남고 다른 UI/UX는 모두 사라질 것이다\" 라는 이야기를 공공연하게 꺼내곤 한다.    \n그런 면에서 우리 학습 강의실 내에도 AI 채팅을 넣는 것고 고려해볼 수 있다.  \n다만, 이 부분에 대해서는 가능하면 최대한 유보하는 입장이다.\n제품가로서 제품에 대한 고민이 너무 날카롭지 않고 무딘 감각으로 느껴지기 때문이다.  \n좋은 학습 플랫폼이라면 개개인이 갖고 있는 백그라운드에 따라 학습 성과가 천차만별이 되는 것을 최대한 지양해야하고, 백그라운드가 부족하더라도 최대한 많은 것을 가져갈 수 있는 방향으로 제품을 만들어야 한다고 생각한다.  \n물론 자질이 훌륭한 분들의 상방선을 열어두고 극대화 하는 것도 중요하지만 그런 분들은 학습 플랫폼의 도움 없이도 혼자서도 잘 할 수 있는 분들이기에 오히려 우리 같은 플랫폼의 도움이 필요로 하지 않는다.\n진짜 우리의 도움이 필요한 분들은 부족한 백그라운드로 인해서 배우는데 어려움이 있거나 효율이 떨어지는 분들이다.\n그들에게 학습에 대한 레버리지를 줄 수 있는 것을 지향해야한다고 보는 것이다.  \n그런 면에서 AI 채팅으로 모르는 것을 물어보세요 라는 것은 이 관점에서는 불합격인 제품이라고 본다.\n왜냐면 프롬프트 역량에 따라 학습 효율이 천차만별로 나뉘기 때문이다.  \n지금도 대다수의 많은 사람들은 AI 채팅을 통해 제대로 학습하는 사람은 극 소수이다.\n희노애락으로 AI를 쓰시는 분들은 많지만, 여전히 많은 분들이 학습하기 위해 AI를 쓰는 경우는 전체 인구에 비하면 소수이다.\nAI는 틀린 답을 낸다고 생각해서 적당히 질문하다가 원하는 답이 안나와서 \"에잇\" 하고 다시 기존의 검색 서비스를 이용하시거나 AI가 틀린 답을 낸 건지도 모르고 사용 하시는 분들도 많다.\n혹은 여전히 AI를 쓰지 않는 분들도 많다.  \n이런 관점에서는 개인의 프롬프트 역량에 따라 정확한 답변을 받을 수 있을 확률이 달라지는 AI 채팅이란 기능이 진짜 백그라운드가 부족한, 독학이 어려운 분들에게 도움이 되는 제품인가?   \n\"AA\" 라는 주제를 공부하려고 강의를 결제했는데, 그 주제를 잘 공부하기 위해서는 AI 프롬프트를 자세히 공부해야한다 라는 것이 과연 학습 플랫폼이 고객에게 전달해야할 가치인가? 라는 근본적인 의문인 것이다.  \n이는 얼핏보면 AI 이전 시대의 '영어' 와 비슷한 것 같단 생각도 든다.  \n영어를 잘 한다면 전세계의 모든 지식을 쉽게 배울 수 있다.\n강의에서 전달하고자 하는 내용을 모두 영어로 설명한다면 관련된 내용을 추가적으로 찾아볼때도 훨씬 더 편하게 찾아 볼 수 있다.\n모든 용어가 다 원래의 용어 그대로를 사용할테니 더 정확한 설명이 될 것이고, 영어로 배운 사람은 이후에도 그 주제에 대해서는 훨씬 더 정확히, 훨씬 더 확장성 있게 학습을 한 상태가 된다.  \n근데 그 서비스가 과연 학습 성장을 평등하게 제공한 것인가?\n그 서비스는 영어를 잘 아는 사람들만을 위한 서비스이다.  \n학습 성장 평등을 지향하는 우리 같은 학습 플랫폼은 영어, 프롬프트 역량이 부족해도 잘 배울 수 있는 환경을 만드는 것에 집중해야 한다는 생각이 요즘 더 강하게 들었다.    \nAI는 사업과 제품에 있어서 큰 곱하기 효과를 주는 것은 맞는데, 이것 자체가 제품이나 사업이 되어서는 안된다.  \n특히나 그 기능이 정말로 우리가 깊은 고민 없이 그냥 남들이 하니깐 하는 정도 수준에서의 기능이라면 더더욱 그 방향은 위험하다고 본다.  \n그건 뭘 위한 것인지 목표 없이 단순히 AI를 붙이고 '해줘'에 가까운 것인데, 그런건 좋은 제품의 기준에는 전혀 합당하다고 보진 않는다.  \n발전 방향도 어색하다고 본다.\nAI 채팅의 답변이 좋으려면 그만큼 더 좋은 모델을 사용해야한다.\n근데 좋은 모델을 사용할수록 대부분 BEP를 맞추기 힘들다.\n그 많은 AI 토큰 비용을 다 플랫폼이 부담해야하고, 그러다 보면 플랫폼 수수료는 더욱 더 높아진다.  \n그렇다면 저렴한 모델을 고객에게 제공하고 별로인 AI 모델인데 쓸려면 써라 정도의 스탠스를 가지고 가는 것도 너무 웃긴다.\n어차피 만족할만한 답변은 나오지 않는데 고객은 그걸 왜 써야하나.\n반면 이런 기능들은 좋다.  \n\"이 내용을 어디선가 봤는데, 그게 어느 강의의 어느 영상이였는지 모르겠다\" 라면 그걸 쉽게 찾을 수 있는 검색\n방금 전에 강사님이 \"이 내용은 다른 강의에서 자세히 이야기 하고 있으니 그 강의를 수강해보세요\" 라고 하는데 그게 어느 강의의 어느 영상 몇분째 인지 알려주는 학습 도우미\n\"남들을 가르치는 것이 가장 좋은 학습 방법\" 이라는 기준으로 방금 배운 내용을 토대로 누군갈 가르쳐보는 경험을 줄 수 있는 환경\n이런 기능들은 목표가 뚜렷하고 프롬프트 등의 백그라운드 지식과 관계없이 학습을 더 잘할 수 있도록 나름의 고민과 여러 학습 효과에 대한 자료를 기반으로 했기 때문에 좋다.\n고객이 학습을 하는데 있어 방해되는 요소가 자연스레 해소 되는 것이기도 한다.  \n물론 이런 예시들을 전부 \"AI 채팅으로 물어보도록 하면 되지 않냐\" 고 할 수도 있다.\n그건 세상에서 가장 똑똑한 과외 선생님을 붙여도 서울대를 못가는 수많은 학생들과 같다.  \n\"내가 뭘 모르는지도 모르고, 뭘 물어봐야하는지도 모르는\" 대다수의 학생들에겐 적합하지 않다.  \n고객에게 \"이런 것도 질문하세요\", \"저런 것도 질문하세요\" 라고 하기 보다는 고객 스스로도 몰랐던 학습의 방해 요소들이 제품 안에서 자연스럽게 해결되고, 성장을 가속할 수 있는 장치가 자연스럽게 적용 되어있는 것 이 가장 좋다.  \n종국에는 \"인프런 써보기 전에는 몰랐는데 인프런 써보고 나니깐 다른 서비스는 못쓰겠다\" 라는 이야기가 나올 수 있다고 믿고 있다.  \n우리가 해야할 것은, AI를 어떻게하면 잘 사용할 수 있을지는 우리의 고민으로 가져오고, 고객들은 AI를 얼마나 잘 사용하는지에 관계없이 원했던 것 이상으로 성장시켜드리는 것이다.  \n그래서 직접 학습자가 되어보는 것이 중요하다.  \n나는 어떤 환경에서 학습이 잘 되었나,  \n나는 아예 처음 접하는 것을 배울때 어떻게 배우나,  \n내가 가장 만족스러웠던 학습 경험은 어떤 것이었나 등등  \n스스로가 고객이 되어서 \"있으면 좋은 것\" 이 아니라, \"이게 진짜 공부하는데 있어서 큰 도움이 되었다\" 라는 것을 계속해서 고민하고 시도해보는 것이 인프랩의 제품 팀으로서 중요하다.  \n그래서 이 부분에 대해 꼭 명심하고 어떤 제품을 만들던 좀 더 날카롭게 고민해야하는 시기인 것 같다.",
        "guid": "https://jojoldu.tistory.com/831",
        "categories": [
          "생각정리",
          "AI",
          "ai 채팅",
          "GPT",
          "교육 플랫폼",
          "인프런",
          "학습"
        ],
        "isoDate": "2025-06-08T01:17:54.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "AI와 글쟁이의 동행: 코드 주면 API 레퍼런스 써드려요",
        "link": "https://techblog.lycorp.co.jp/ko/give-me-the-code-and-then-ai-and-i-will-provide-the-api-reference-for-you",
        "pubDate": "Fri, 13 Jun 2025 02:00:00 GMT",
        "content": "기술 문서는 늘 부족합니다. 특히 좋은 기술 문서가 부족하죠.테크니컬 라이터는 좋은 기술 문서를 쓸 수 있지만, 사내 프로젝트를 모두 담당하기에는 수가 턱없이 모자랍니다. '개발자...",
        "contentSnippet": "기술 문서는 늘 부족합니다. 특히 좋은 기술 문서가 부족하죠.테크니컬 라이터는 좋은 기술 문서를 쓸 수 있지만, 사내 프로젝트를 모두 담당하기에는 수가 턱없이 모자랍니다. '개발자...",
        "guid": "https://techblog.lycorp.co.jp/ko/give-me-the-code-and-then-ai-and-i-will-provide-the-api-reference-for-you",
        "isoDate": "2025-06-13T02:00:00.000Z"
      },
      {
        "title": "코드 품질 개선 기법 15편: 문법은 이름을 나타낸다",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-15",
        "pubDate": "Wed, 11 Jun 2025 02:00:00 GMT",
        "content": "이 글은 2024년 2월 29일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 ...",
        "contentSnippet": "이 글은 2024년 2월 29일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 ...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-15",
        "isoDate": "2025-06-11T02:00:00.000Z"
      },
      {
        "title": "LINE 앱 영상 통화를 가장 많이 사용하는 나라, 태국에서 LINE 앱의 영상 통화 품질을 점검했습니다",
        "link": "https://techblog.lycorp.co.jp/ko/thailand-call-quality-report",
        "pubDate": "Mon, 09 Jun 2025 08:00:00 GMT",
        "content": "들어가며안녕하세요. LINE 메신저 앱의 통화 모듈을 개발하고 있는 곽정남입니다. 제가 속한 Platform Product Engineering 2 팀은 지난 2024년 11월 태...",
        "contentSnippet": "들어가며안녕하세요. LINE 메신저 앱의 통화 모듈을 개발하고 있는 곽정남입니다. 제가 속한 Platform Product Engineering 2 팀은 지난 2024년 11월 태...",
        "guid": "https://techblog.lycorp.co.jp/ko/thailand-call-quality-report",
        "isoDate": "2025-06-09T08:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": [
      {
        "title": "Cursor 에서 유용한 Setting",
        "link": "https://velog.io/@mdy0102/Cursor-%EC%97%90%EC%84%9C-%EC%9C%A0%EC%9A%A9%ED%95%9C-Setting",
        "pubDate": "Sun, 08 Jun 2025 09:16:16 GMT",
        "content": "<h2 id=\"개요\">개요</h2>\n<p>많은 개발자들이 바이브 코딩의 툴로서 Cursor를 선택하고 있습니다. 특히 VSCode에 익숙한 개발자라면 동일한 인터페이스로 더 높은 생산성을 얻을 수 있기 때문에 Cursor를 선택합니다.\n오늘은 Cursor 사용시 설정하면 좋을 Setting에 대해 알아보겠습니다.</p>\n<h2 id=\"docs---내-참고-문서-지정하기\">@Docs - 내 참고 문서 지정하기</h2>\n<p>Cursor에서 채팅하거나 코드 생성시 참고할만한 공식 문서를 지정할 수 있습니다. 채팅 시 @&lt;문서명&gt; 을 치고 질문을 하면 해당 문서를 참고해서 답변을 생성합니다.</p>\n<p><img src=\"https://velog.velcdn.com/images/mdy0102/post/d5a784b0-a4e4-4a9b-b3e4-59b22faab641/image.png\" alt=\"apply_docs\"></p>\n<p>만약 Cursor가 제공하는 문서에 내가 원하는 문서가 없다면, @doc 을 하면 맨 하단에 Add new doc이 나옵니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/1ff73d7c-3ed0-4677-87eb-25ebb230dd23/image.png\" alt=\"add_new_doc\">\n그 다음 원하는 공식문서를 추가하면 앞으로 채팅에서 공식문서를 참고할 수 있습니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/c0555572-8a98-4a5f-b786-684f47e67c90/image.png\" alt=\"add_langgraph\">\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/df91ea22-5bab-467f-9cc2-7acf6bfa40b8/image.png\" alt=\"add_langgraph_meta\">\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/08e498cb-f8a2-4059-a21e-a70af03018df/image.png\" alt=\"use_langgraph\"></p>\n<h2 id=\"cursor-rules\">Cursor Rules</h2>\n<p>Cursor에서 답변이나 코드를 생성할 때 참고해야할 나만의 룰이 있다면 프로젝트 폴더에 <code>.cursorrules</code> 파일을 만들어 프롬프트를 입력해보세요. 그럼 커서가 해당 프롬프트를 참고해서 코드를 생성합니다.</p>\n<p>저는 Cursor Rule에 다음과 같은 내용을 작성합니다.</p>\n<ul>\n<li>Coding Conventions</li>\n<li>Import 문 구조</li>\n<li>자주 사용하는 패키지 (langchain, langgraph 등)</li>\n<li>UI/ Styling (Shadcn, Tailwind 등을 사용해)</li>\n</ul>\n<h2 id=\"privacy-mode\">Privacy Mode</h2>\n<p>내 코드가 모델 학습에 활용되지 않도록 설정을 원한다면 프라이버시 모드를 활성화해야합니다.\nCursor Setting &gt; Privacy에 가면 Privacy Mode를 설정할 수 있습니다.<img src=\"https://velog.velcdn.com/images/mdy0102/post/8d38910c-3831-4d98-93a4-f990f1e45267/image.png\" alt=\"privacy_mode\"></p>\n<ol>\n<li>프라이버시 모드\n설정에서 &quot;Privacy Mode&quot; 활성화 시 데이터 저장이 전혀 되지 않음\n코드는 저장되거나 학습되지 않음</li>\n<li>일반 모드 (Privacy Mode OFF)\n원격 측정, 사용 데이터, 코드베이스 데이터 수집\n프롬프트, 에디터 작업, 코드 스니펫, 저장소 파일, 코드 편집 내용 포함\n자동완성 사용 시 Fireworks(추론 제공업체)가 추론 속도 개선을 위해 프롬프트 수집 가능</li>\n</ol>\n<h2 id=\"vertical-sidebar\">Vertical Sidebar</h2>\n<p>VS Code에 익숙한 사람이라면 세로방향의 Sidebar가 익숙할 것입니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/9ebcd037-ddda-4aa6-b4af-c2135e385ecd/image.png\" alt=\"vertical_sidebar\">\n사이드바 세팅을 하려면 Preference &gt; VS Code Settings &gt; Workbench › Activity Bar: Orientation 에 가서 Vertical로 선택해주시면 됩니다.\n<img src=\"https://velog.velcdn.com/images/mdy0102/post/98a0eafa-8279-4f12-af82-baa6972cc2be/image.png\" alt=\"activity_bar\"></p>\n<h2 id=\"마무리\">마무리</h2>\n<p>이처럼 몇가지 설정을 한다면 Cursor는 내가 원하는 정보와 Rule에 맞춰서 코드 생성 및 채팅 답변을 생성해줍니다. 다음 시간에는 Cursor에서 사용하기 좋은 MCP Tool과 Extension을 소개해보도록 하겠습니다.</p>\n",
        "contentSnippet": "개요\n많은 개발자들이 바이브 코딩의 툴로서 Cursor를 선택하고 있습니다. 특히 VSCode에 익숙한 개발자라면 동일한 인터페이스로 더 높은 생산성을 얻을 수 있기 때문에 Cursor를 선택합니다.\n오늘은 Cursor 사용시 설정하면 좋을 Setting에 대해 알아보겠습니다.\n@Docs - 내 참고 문서 지정하기\nCursor에서 채팅하거나 코드 생성시 참고할만한 공식 문서를 지정할 수 있습니다. 채팅 시 @<문서명> 을 치고 질문을 하면 해당 문서를 참고해서 답변을 생성합니다.\n\n만약 Cursor가 제공하는 문서에 내가 원하는 문서가 없다면, @doc 을 하면 맨 하단에 Add new doc이 나옵니다.\n\n그 다음 원하는 공식문서를 추가하면 앞으로 채팅에서 공식문서를 참고할 수 있습니다.\n\n\n\nCursor Rules\nCursor에서 답변이나 코드를 생성할 때 참고해야할 나만의 룰이 있다면 프로젝트 폴더에 .cursorrules 파일을 만들어 프롬프트를 입력해보세요. 그럼 커서가 해당 프롬프트를 참고해서 코드를 생성합니다.\n저는 Cursor Rule에 다음과 같은 내용을 작성합니다.\nCoding Conventions\nImport 문 구조\n자주 사용하는 패키지 (langchain, langgraph 등)\nUI/ Styling (Shadcn, Tailwind 등을 사용해)\nPrivacy Mode\n내 코드가 모델 학습에 활용되지 않도록 설정을 원한다면 프라이버시 모드를 활성화해야합니다.\nCursor Setting > Privacy에 가면 Privacy Mode를 설정할 수 있습니다.\n프라이버시 모드\n설정에서 \"Privacy Mode\" 활성화 시 데이터 저장이 전혀 되지 않음\n코드는 저장되거나 학습되지 않음\n일반 모드 (Privacy Mode OFF)\n원격 측정, 사용 데이터, 코드베이스 데이터 수집\n프롬프트, 에디터 작업, 코드 스니펫, 저장소 파일, 코드 편집 내용 포함\n자동완성 사용 시 Fireworks(추론 제공업체)가 추론 속도 개선을 위해 프롬프트 수집 가능\nVertical Sidebar\nVS Code에 익숙한 사람이라면 세로방향의 Sidebar가 익숙할 것입니다.\n\n사이드바 세팅을 하려면 Preference > VS Code Settings > Workbench › Activity Bar: Orientation 에 가서 Vertical로 선택해주시면 됩니다.\n\n마무리\n이처럼 몇가지 설정을 한다면 Cursor는 내가 원하는 정보와 Rule에 맞춰서 코드 생성 및 채팅 답변을 생성해줍니다. 다음 시간에는 Cursor에서 사용하기 좋은 MCP Tool과 Extension을 소개해보도록 하겠습니다.",
        "guid": "https://velog.io/@mdy0102/Cursor-%EC%97%90%EC%84%9C-%EC%9C%A0%EC%9A%A9%ED%95%9C-Setting",
        "isoDate": "2025-06-08T09:16:16.000Z"
      }
    ]
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "(꽤 중요한) 투자자와의 소통",
        "link": "https://www.thestartupbible.com/2025/06/why-regular-communication-with-your-investors-matters-more-than-you-think.html",
        "pubDate": "Wed, 11 Jun 2025 21:27:00 +0000",
        "content:encodedSnippet": "전에 내가 ‘투자자와 소통하기’라는 글을 썼다. 우리가 일하는 분야는 워낙 페이스가 빨라서 과거에 맞다고 했던 내용이 현재는 완전히 틀릴 수도 있고, 과거에 틀렸다고 했던 내용이 현재는 완전히 맞을 수도 있다. 하지만, 6년 전에 썼던 이 글은, 과거에도 맞았고 지금은 더 오지게 맞는 내용이라서 아무리 강조해도 지나치지가 않기 때문에, 비슷한 내용의 글을 한 번 더 쓴다.\n우리 모두 인생과 직장에서의 소통, 즉, 커뮤니케이션의 중요성을 잘 알고 있고, 인생은 피드백이고 인생은 커뮤니케이션이라는 말을 입에 달고 산다. 특히, 스타트업 창업가라면, 사람이 가장 중요한 자산이고, 이 가장 중요한 자산의 가치를 극대화하기 위해서 가장 중요한 건 대화와 커뮤니케이션이라는 걸 너무나 잘 안다. 아마도 대부분의 창업가에게 물어보면 사업에 있어서 제일 중요한 건 ‘사람’이라고 할 것이고, 이 사람들을 끈끈하게 본딩해줄 수 있는 건 소통이다.\n그런데, 참 아이러니한 건, 내가 아는 많은 창업가들이 입으로는 소통이 중요하다고 하면서, 정작 본인들은 이걸 참 못 한다. 아니, 어떤 분들은 일부러 안 하는 것 같다. 특히, 내부 소통보단 외부 소통, 외부 소통 중에서도 투자자들과의 소통에 있어서는, 어떤 분들의 – 우리 포트폴리오 포함 –  커뮤니케이션 점수는 빵점이다.\n우리 포트폴리오 대표님들은 잘 아실 텐데, 우린 워낙 많은 투자사가 있어서, 이들의 사업 현황을 잘 이해하기 위해서는 모든 회사를 매달 만나는 비현실적인 방법보단, 이메일로 월간 사업 업데이트를 받고, 이를 통해서 사업의 현황과 건강의 척도를 평가하는 방법을 사용한다. 그래서 나는 매달 대표님들에게 사업 업데이트를 부탁하는데, 이걸 받는 분들은 징글맞게 생각하는 분들도 있을 것이다. 하지만, 덕분에 대부분의 스트롱 대표님들은 이렇게 투자자들에게 월간 사업 업데이트하는 게 습관화되어 있다. 언젠가 우리와 몇 개 회사에 공동 투자한 다른 VC가 “스트롱 포트폴리오는 월간 업데이트를 정기적으로 잘하네요. 그리고 그 내용도 형식적인 보고가 아니라, 대표님의 고민, 생각, 그리고 투명한 회사의 실적을 공유해줘서 너무 좋습니다. 훈련이 잘된 것 같아요.”라는 이야기를 했는데, 실제로 그렇다고 생각한다.\n전에도 내가 여러 번 말했는데, 투자자와의 이런 정기적인 커뮤니케이션은 스타트업 생태계에 종사하는 모든 이해관계자에게 긍정적인 결과를 만들 수 있다.\n일단 회사가 투자를 받으면, 투자자들에게 사업 현황을 정기적으로 투명하게 공유하는 건 기본이자, 회사의 가장 중요한 책임이고 의무이다. 이 글을 보면, 너무나 당연한 거로 생각하겠지만, 이게 당연하다고 생각하는 창업가분들도 과연 본인의 투자자들과 소통이 제대로 되고 있는지 스스로 물어봐라. 안 그런 분들도 꽤 있을 것이다. 소통이 잘 안되는 사소한 문제가 나중에 엄청나게 커지고, 이게 서로의 감정싸움으로 번지면서 소송으로 가는 것까지 나는 본 적이 있다.\n소통이 중요한 또 다른 점은, 이렇게 매달 투자자들과 사업 현황을 공유하다 보면, 그냥 단순히 커뮤니케이션 빈도를 높이고, 정기적으로 할 수 있다는 것이다. 실은 투자자와 창업가의 관계는 한쪽이 다른 쪽에 원할 때 언제든지 연락할 수 있어야 하고, 또 실제로 대부분 그렇다. 투자자는 창업가에게 자금을 제공했기 때문에, 창업가는 싫든 좋든 투자자가 연락하면 언제든지 연락이 돼야 한다. 반대로, 창업가는 본인이 선장인 배에 탄 투자자들이 배가 목적지에 무사히 도달할 수 있도록 열심히 일하게 만들어야 하므로, 필요한 게 있으면 투자자에게 언제든지 연락할 수 있어야 하고, 그게 자정이든 주말이든 투자자는 무조건 연락이 돼야 한다. 다른 VC는 잘 모르겠지만, 스트롱 전체 팀은 우리 포트폴리오 대표님들이 연락하면 언제든지 연락이 된다.\n하지만, 실제로는 특별한 일이 없으면 서로 자주 연락을 안 하는 게 또 투자자와 창업가의 관계이다. 시간이 서로에게 가장 중요한 자원이며, 이 부분을 서로 존중하기 때문이다. 이 글을 읽는 창업가나 VC들도 비슷할 것 같은데, 아무리 서로 친해도 엄청나게 자주 만나거나 연락하진 않을 것이다. 이게 나쁜 건 아니지만, 그렇다고 좋은 것도 아니다. 어쨌든 사람은 자주 연락하고 봐야지 친해지니까. 그래서 월간 업데이트를 하면 매달 소통할 수 있기 때문에 서로에게 매우 좋다. 우리는 이 월간 업데이트를 자세히 읽고, 우리의 피드백과 생각을 공유하고, 질문도 하고, 이런저런 이야기를 상당히 많이 한다. 그러면 굳이 자주 만나지 않아도, 서로의 소식을 정기적으로 정하고, 포트폴리오의 사업 현황에 대해서 꽤 잘 숙지할 수 있다. 얼마 전에 우리 포트폴리오 대표님을 만났는데, 반갑게 이야기하다가 우리가 마지막으로 만났던 게 거의 1년 반 전이였다는 걸 알게 된 후에 깜짝 놀랐다. 매달 이메일로 소통하다 보니, 거의 매달 만난 것 같았으니.\n마지막으로, 투자자와의 소통이 정말 중요한 가장 실용적인 이유는, 정기적인 소통이 됐다면 회사가 어려울 때 투자자들이 지체하지 않고 바로 도움의 손길을 뻗을 수 있기 때문이다. 예를 들어, 10개월 동안 사업 업데이트가 없던 대표가 금요일 저녁에 다급하게 연락이 와서 다음 달 나갈 월급이 없다고 하거나, 경쟁사에게 소송을 당했다고 SOS를 치면 우리가 당장 해 줄 수 있는 게 없다. 우리 투자사이니 당연히 같이 고민하고 방법을 찾아보겠지만, 우리도 이 회사가 그동안 뭘 했고, 현황은 어떤지, 그리고 대표님은 어떤 고민과 생각을 하고 있는지 잘 모르기 때문에, 일단 회사의 현황을 파악하는 데만 시간이 어느 정도 걸리기 때문이다. 하지만, 지속적으로 소통하면서 회사의 상황에 대해서 잘 공유했다면, 회사에 현금이 고갈되고 있다는 사실을 수개월 전부터 알아서 즉각적인 조치를 취할 수 있었을 것이다. 또한, 이렇게 소통이 안 되는 대표는 우리도 우리와 친한 다른 VC에게 선뜻 소개해 주는 게 망설여진다. 다른 VC한테 투자받은 후에 또 이렇게 연락이 잘 안될 텐데, 이건 스트롱과 내가 욕먹을 일이기 때문이다.\n뭔가 우리가 대단한 걸 매달 요구할까? 그건 아니다. 우리가 포트폴리오 대표들에게 요구하는 건 다음과 같다:\n1/ 회사가 중요하게 생각하는 KPI(매출, UV, MAU 등…)\n2/ 영업, 마케팅, 유통, 제조 등 관련해서 특별히 나쁘거나, 좋았던 내용들\n3/ 특이 사항\n4/ full-time 임직원 수\n5/ 지금까지 유치한 총투자 금액\n6/ 현재 회사에 남은 cash 상황\n7/ 스트롱에게(또는 다른 투자사들) 부탁하고 싶은 내용\n이건 솔직히 제대로 된 회사, 제대로 된 대표라면 매달 결산하고 스스로 정리하고 고민하는 내용들이다. 그냥 이 내용이 정제되지 않은 포맷으로 편안하게 공유해달라고 부탁하는 정도이다.\n이 글을 읽는 창업가들은 모두 본인들의 투자자들과 월간 업데이트를 공유하면서 소통하는 걸 적극 권장한다. 한 일 년 이상 꾸준히 하다 보면, 커뮤니케이션의 빈도와 질에 매우 긍정적인 변화가 있을 것이고, 더 신뢰받는 대표가 되어 있을 것이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/06/why-regular-communication-with-your-investors-matters-more-than-you-think.html#respond",
        "content": "전에 내가 ‘투자자와 소통하기’라는 글을 썼다. 우리가 일하는 분야는 워낙 페이스가 빨라서 과거에 맞다고 했던 내용이 현재는 완전히 틀릴 수도 있고, 과거에 틀렸다고 했던 내용이 현재는 완전히 맞을 수도 있다. 하지만, 6년 전에 썼던 이 글은, 과거에도 맞았고 지금은 더 오지게 맞는 내용이라서 아무리 강조해도 지나치지가 않기 때문에, 비슷한 내용의 글을 한 번 더 쓴다.(...)",
        "contentSnippet": "전에 내가 ‘투자자와 소통하기’라는 글을 썼다. 우리가 일하는 분야는 워낙 페이스가 빨라서 과거에 맞다고 했던 내용이 현재는 완전히 틀릴 수도 있고, 과거에 틀렸다고 했던 내용이 현재는 완전히 맞을 수도 있다. 하지만, 6년 전에 썼던 이 글은, 과거에도 맞았고 지금은 더 오지게 맞는 내용이라서 아무리 강조해도 지나치지가 않기 때문에, 비슷한 내용의 글을 한 번 더 쓴다.(...)",
        "guid": "https://www.thestartupbible.com/?p=9465",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "fundraising",
          "general",
          "people",
          "Strong",
          "vc"
        ],
        "isoDate": "2025-06-11T21:27:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "잠수보단 거절",
        "link": "https://www.thestartupbible.com/2025/06/just-say-no-and-never-go-mia.html",
        "pubDate": "Sun, 08 Jun 2025 21:19:00 +0000",
        "content:encodedSnippet": "한국과 미국을 1대1로 비교하는 건 큰 의미가 없다. 문화가 다르고, 사람들이 다르고, 교육 내용과 환경이 다르므로 살아가는 방식과 일하는 방식이 너무 다르다. 그래서 무조건 미국은 좋고, 한국은 나쁘다고 하는 건 정말 구닥다리 사고방식이다. 오히려 나는 요새 무조건 한국은 좋고, 미국은 나쁘다는 말을 많이 하는데, 물론, 이 또한 유연하지 못한 사고와 발언이다.\n그래도 비즈니스 문화에서 한국이 미국보다 훨씬 못하다고 생각하는 게 바로 거절하는 문화다. 상대방이 나에게 뭔가를 간절하게 원하는데, 내가 못 하거나, 아니면 단순히 하기 싫다면, 그냥 거절하면 되는데, 이게 꽤 많은 한국 분에겐 참 어려운가 보다.\n내가 못 하는 거면, 그냥 솔직히 내 능력이 안 되거나, 시간이 안 되거나, 뭐 여러 가지 합당한 이유를 – 상대방이 합당하다고 생각해서 나한테 서운하게 생각하지 않는 – 대면서 그냥 못 한다고 하면 된다. 한국에서 태어나서, 한국에서 정규 교육을 받고, 한국의 기업에서 일을 해 본 많은 분들이 실은 이것도 힘들어한다.\n더 어려운 거절은 내가 할 수 있지만, 그냥 하기 싫을 때이다. 나도 이런 경우가 상당히 많다. 엄청 바쁘거나, 상대방의 부탁을 그냥 들어주기 싫거나, 아니면 그냥 굳이 내가 시간과 에너지를 쓰기 싫을 때가 있다. 상대방의 부탁을 그냥 들어주기 싫은 경우는, 그분이 미워서라기보단 그냥 잘 모르는 분이 불쑥 연락이 와서 뭔가를 해달라고 할 때다. 나한테 큰 도움이 되지도 않은데 굳이 내가 잘 모르는 분을 위해서 시간을 투자할 필요가 없고, 그냥 여기에 시간을 쓸 바에야 집에서 책을 읽거나 잠을 자는 게 더 좋을 때가 있다.\n나는 거절을 꽤 잘 한다고 생각한다. 실은 과거엔 나도 남들이 부탁하면 웬만하면 다 들어줬다. 한때는 모든 사람들에게 친절해야만 한다고 생각했고, 내가 거절했을 때 상대방이 나에 대해서 나쁘게 생각하는 걸 좀 두려워할 때가 있었다. 그런데, 이렇게 해보니, 내가 원하는 삶을 살기보단 어느 순간 남이 나에게 원하는 삶을 살고 있다는 느낌을 받아서 그 이후론 의식적으로 모든 걸 거절하기 시작했다. 못 하는 건 그냥 못 하므로 못 한다고 하고, 하기 싫은 건 그냥 하기 싫어서 안 한다고 한다. 이렇게 너무 직설적으로 이야기하면 꽤 많은 분들이 내가 인성이 나쁘고, 싸가지가 없다고 생각하는데, 뭐, 그렇게 신경 쓰지 않기 때문에 상관없다. 심지어 전엔 어떤 분이 뭔가를 부탁했는데, 내가 잘할 수 있는 일이었지만, 그냥 못 한다고 했다. 그러자 이분은 일정이 안 맞는 줄 알고, 다른 여러 날짜를 제시했는데, 그냥 전부 다 못 한다고 하면서, 시간은 가능한데 내가 하기 싫다고 했다. 그 이후로 이분은 나를 사람 취급하지 않았는데, 뭐, 나는 크게 신경 쓰지 않는다.\n내 경험상, 오히려 이렇게 대차게 거절하는 게 상대방이나 나를 위해서 가장 좋은 관계 유지 방법이다. 거절하는 사람으로서도 처음엔 불편하고, 거절당하는 사람으로서도 기분이 상할 수도 있지만 – 솔직히 나도 거절을 정말 많이 당하는데, 거절당하는 사람의 입장에서 기분이 상할 이유는 전혀 없다 – 결국엔 서로 깔끔하게 교통정리가 되고, 각자의 인생을 살 수 있고, 각자 그냥 move on 할 수 있다. 이런 분들은 오히려 평생 친구가 될 수도 있다.\n그런데 이 거절하는 걸 너무 힘들게 생각해서, 아예 상대방의 연락을 피하고 잠수 타는 분들이 의외로 많다. 내가 세상에서 가장 싫어하는 부류의 사람들이고, 인간관계에 있어서 잠수타기는 최악의 한 수이다. 이런 분들은 본인은 ‘원래’ 상대방에게 싫은 소리를 못 한다고 하는데, 이건 개소리다. 그냥 본인들이 상대방에게 싫은 소리를 하고 싶지 않기 때문이다. 싫은 소리 하거나, 거절하면 상대방이 본인을 안 좋게 생각하는 게 걱정되는 이런 분들의 또 다른 특성은 남이 그들에 대해서 어떻게 생각하는지에 지대한 관심이 많다는 점이다.\n나도 가끔 이런 분들을 만난다. 잘 이야기하다가 갑자기 연락이 끊기는데, 내 성격상 이렇게 연락이 안 되면 나는 계속 연락한다. 끝까지 잠수 타는 분들도 있지만 – 참고로, 나는 이런 사람들은 인간 취급 안 한다 – 대부분 몇 달 뒤에 다시 연락된다. 그리고 왜 갑자기 잠수 탔냐고 물어보면 돌아오는 답변은 “바빴어요” , “원래 내가 싫은 소리 못 하잖아요” 또는 “내가요?” 정도이다.\n하기 싫으면 그냥 하기 싫다고 해라. 못 하겠으면 그냥 못 한다고 해라. 그리고 만약 거절하는 게 내가 미안해야 할 일이라면, 아주 솔직하게 미안하다고 해라. 특히 나 같은 사람한텐 그냥 대차게 거절해야 한다. 안 그러면 나는 희망을 갖고 계속 귀찮게 하고, 계속 연락할 것이다. 어쨌든 절대로 잠수는 타지 마라. \n잠수 타면서 오랫동안 마음이 불안한 것보단, 그냥 거절하고 그때 한순간만 살짝 미안함을 느끼는 게 스트레스 관리에도 훨씬 좋다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/06/just-say-no-and-never-go-mia.html#comments",
        "content": "한국과 미국을 1대1로 비교하는 건 큰 의미가 없다. 문화가 다르고, 사람들이 다르고, 교육 내용과 환경이 다르므로 살아가는 방식과 일하는 방식이 너무 다르다. 그래서 무조건 미국은 좋고, 한국은 나쁘다고 하는 건 정말 구닥다리 사고방식이다. 오히려 나는 요새 무조건 한국은 좋고, 미국은 나쁘다는 말을 많이 하는데, 물론, 이 또한 유연하지 못한 사고와 발언이다. 그래도 비즈니스 문화에서 한국이(...)",
        "contentSnippet": "한국과 미국을 1대1로 비교하는 건 큰 의미가 없다. 문화가 다르고, 사람들이 다르고, 교육 내용과 환경이 다르므로 살아가는 방식과 일하는 방식이 너무 다르다. 그래서 무조건 미국은 좋고, 한국은 나쁘다고 하는 건 정말 구닥다리 사고방식이다. 오히려 나는 요새 무조건 한국은 좋고, 미국은 나쁘다는 말을 많이 하는데, 물론, 이 또한 유연하지 못한 사고와 발언이다. 그래도 비즈니스 문화에서 한국이(...)",
        "guid": "https://www.thestartupbible.com/?p=9463",
        "categories": [
          "Uncategorized",
          "general",
          "people"
        ],
        "isoDate": "2025-06-08T21:19:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "계약 전, 임대인 동의 없어도 정보를 볼 수 있어요 : 임대인 정보조회 방법",
        "link": "https://toss.im/tossfeed/article/money-policies-44",
        "pubDate": "Fri, 13 Jun 2025 00:43:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}\n.css-1kxrhf3{white-space:pre-wrap;}지난 5월 27일부터 임대인 정보조회 제도가 확대 시행됐어요.\n이제 임차인은 전세계약을 체결하기 전에 임대인의 정보를 더 쉽게 확인할 수 있어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}‘임대인 정보조회’로 확인할 수 있는 것들\n‘임대인 정보조회 제도’는 전세 계약을 하기 전 임차인이 임대인의 다주택자 여부, 전세금반환보증 사고 이력 등을 확인할 수 있게 한 제도예요. \n기존에는 전세계약 후 임대인의 동의를 받아야 전세보증금 관련 사고 이력 등 임대인 정보를 조회할 수 있었어요. 하지만 이제는 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}전세 계약 체결 전에 임대인의 동의 없이도 임차인이 임대인의 보증이력을 확인할 수 있답니다.\n임차인이 확인할 수 있는 임대인 정보에는 다음과 같은 내용이 포함돼요.\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n주택도시보증공사 (HUG) 전세금 반환보증 가입 주택 보유 건수\n보증 금지 대상 여부\n최근 3년간 대위변제 발생 건수\n\n임차인이 계약전에 임대인의 정보를 확인할 수 있게 되면서, 전세 사기 예방 효과가 기대돼요. 임차인이 보증사고 발생 가능성이 높은 임대인을 미리 확인하고 피할 수 있어, 안전한 계약을 체결할 수 있는 환경이 마련될 것으로 보여집니다.\n\n임대인 정보조회 방법\n공인중개사에게 계약의사를 밝힌 예비 임차인의 경우\n공인중개사가 확인서를 지참해 주택도시보증공사(HUG)를 방문하거나 ‘.css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}안심전세 앱’(6월 23일부터)으로 신청하면 돼요. HUG의 확인을 거쳐 최대 7일 이내에 임대인 정보를 확인할 수 있어요.\n전세계약 당일 임대인을 직접 만나는 경우\n‘안심전세 앱’ 을 이용해 임차인이 임대인 정보를 조회할 수 있어요. 임대인이 앱에서 본인 정보를 직접 조회해 임차인에게 보여주는 것도 가능해요.\n정보조회 제도의 신뢰도 제고와 남용을 방지하기 위한 장치도 있어요. 임대인 정보조회를 신청인당 월 3회로 제한하고, 임대인에게 정보 제공 사실을 알리는 문자 통지 시스템도 함께 운영해요. 전세계약을 할 생각이 없는데 ‘찔러보기’ 식의 무분별한 조회를 막기 위해 ‘부동산거래관리시스템(RTMS)’을 통한 계약 체결 여부 확인, 공인중개사를 통한 계약의사 검증 등도 시행해요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 권민지 이지영 Graphic 이제현",
        "content": "다주택자 여부부터 보증사고 이력까지 확인 가능",
        "contentSnippet": "다주택자 여부부터 보증사고 이력까지 확인 가능",
        "guid": "https://toss.im/tossfeed/article/money-policies-44",
        "isoDate": "2025-06-13T00:43:00.000Z"
      },
      {
        "title": "신용카드에 꼭 서명해야 하는 이유",
        "link": "https://toss.im/tossfeed/article/card_signature",
        "pubDate": "Thu, 12 Jun 2025 06:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}혹시 신용카드 뒷면에 서명해두셨나요? 서명이 없어도 일상적인 결제에는 문제가 없는 경우가 대부분이에요. 그렇더라도 반드시 서명을 해두는 게 좋아요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n신용카드 도난・분실했을 때 \n서명 여부가 중요해요\n신용카드를 분실하거나 도난당해 제3자가 부정 사용한 경우, 그 금액에 대해 카드사에 보상을 청구할 수 있어요. 이때 카드 뒷면에 서명이 되어 있는지가 보상 여부를 좌우하는 중요한 기준이에요. 만약 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}서명이 없다면 금액의 일부만 돌려받거나 아예 돌려받지 못할 수도 있기 때문이에요.\n신용카드 도난・분실, \n보상 받지 못하는 경우는\n분실, 도난 신고 접수한 날의 60일 이내에 발생한 부정사용 금액은 카드사가 보상해줘요. 하지만 아래와 같은 경우에는 보상 범위가 제한되거나, 아예 보상을 못 받을 수 있어요. \n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n카드 소유자가 직접 카드를 빌려주거나 가족이나 동거인을 통한 부정 사용한 경우\n카드의 분실, 도난을 인지하고도 정당한 사유 없이 바로 신고를 하지 않은 경우 \n카드에 서명이 없었거나, 카드 관리 소홀(예를 들어 양도, 불법 대출 등)로 발생한 사용액\n\n신용카드 분실, \n이렇게 대비하면 좋아요\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}1️⃣ 카드 뒷면에 서명한 후 사진을 찍어두세요\n이미 분실한 신용카드에 서명을 했다는 사실을 입증하기란 쉽지 않죠. 평소에 신용카드 뒷면에 서명한 후 뒷면 사진을 찍어두는 게 좋아요. \n2️⃣ 평소에 카드 뒷면 서명과 결제 서명을 동일하게 작성하세요\n카드 뒷면에 작성한 서명과 결제 시 사용하는 사인을 동일하게 하는 습관을 들여야 해요. 그래야 평소 사용하는 서명과 다른 것으로 부정 사용액을 빠르게 구별하고 입증할 수 있어요. 카드사 관계 없이 모든 카드의 서명을 동일하게 맞추는 것 또한 추천해요.",
        "content": "분실·도난 시 보상받으려면 서명이 필수예요",
        "contentSnippet": "분실·도난 시 보상받으려면 서명이 필수예요",
        "guid": "https://toss.im/tossfeed/article/card_signature",
        "isoDate": "2025-06-12T06:00:00.000Z"
      },
      {
        "title": "토스, 앱인토스 파트너사 모집…스타트업에 토스 앱 개방한다",
        "link": "https://toss.im/tossfeed/article/apps-in-toss",
        "pubDate": "Thu, 12 Jun 2025 05:28:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}파트너사 서비스 연동해 토스 앱 내에서 바로 운영할 수 있도록 구현\n스타트업 앱 테스트베드로 활용…앱 개발부터 이용자 분석까지 지원\n금융부터 일생생활 서비스를 하나의 앱에서 이용하는 수퍼앱으로의 진화\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 ‘앱인토스(App in Toss)’ 파트너사를 모집한다고 12일 밝혔다.\n앱인토스는 앱 하나에 여러 서비스를 제공하는 앱인앱(App in App) 형태로 파트너사가 운영하는 서비스를 토스 앱에서 바로 이용할 수 있도록 구현된다. 이용자는 토스가 기존에 제공하던 금융 서비스 뿐만 아니라 생활 밀착형 서비스, 온오프라인 매장 연계, 게임, 엔터테인먼트까지 토스 ‘미니앱’ 메뉴에서 이용할 수 있다.\n특히 토스는 앱인토스를 활용해 스타트업이 성장을 위한 발판을 마련할 수 있도록 적극적으로 앱을 개방한다. 개발, 디자인, 마케팅 등 앱 운영 전반에 걸친 노하우와 인프라를 공유하고, 파트너사가 토스 앱을 테스트베드로써 활용할 수 있는 기회를 제공한다.\n토스 앱 누적 가입자 수가 2800만명에 달하는 만큼, 스타트업 브랜드를 알리고 접근성을 높여 실질적인 고객을 확보하는 데에도 기여할 것으로 기대하고 있다. 또 파트너사가 앱인토스 내에서 자체적으로 인앱결제를 통한 유료 서비스나 광고도 운영할 수 있어 추가적인 매출 창출도 가능하다. 제휴 신청은 토스 앱인토스 홈페이지에서 가능하다.\n이용자에게는 앱 설치 없이 다양한 서비스를 한 곳에서 이용할 수 있는 편리한 모바일 경험을 제공한다. 현재 토스 미니앱 메뉴에서 ‘놓친 보험금 조회하기(라이프캐치)’, ‘가성비 좋은 집 찾기(안전집사)’, ‘가전∙생활용품 추천받기(노써치)’ 등이 베타 서비스로 운영 중이다. 별도로 앱 다운로드 없이 즐길 수 있는 모바일 게임도 미니앱에서 만나볼 수 있다.\n토스는 앞으로 더 다양한 파트너사와 앱인토스 생태계를 구축해 나갈 계획이다. 토스 앱 하나로 금융과 일상생활을 연결하는 이용자 경험을 제공하고, 파트너사와 함께 ‘일상의 수퍼앱’으로 도약한다는 목표다.\n토스 관계자는 “앱인토스는 스타트업이 빠르게 실사용자 반응을 확인하고, 제품 완성도를 높일 수 있는 실질적인 기회”라며 “이용자에게는 토스 앱 하나로 다양한 일상생활 서비스를 이용할 수 새로운 모바일 경험을 제공할 것”고 말했다.\n한편 토스는 지난 2월 앱 출시 10주년을 맞아 ‘일상의 수퍼앱’으로의 진화를 비전으로 발표한 바 있다. 이를 위한 전략으로 ‘개방’을 택하고 다양한 파트너사가 토스 인프라를 활용할 수 있도록 적극 지원하겠다는 계획을 밝혔다.",
        "content": "파트너사 서비스 연동해 토스 앱 내에서 바로 운영할 수 있도록 구현",
        "contentSnippet": "파트너사 서비스 연동해 토스 앱 내에서 바로 운영할 수 있도록 구현",
        "guid": "https://toss.im/tossfeed/article/apps-in-toss",
        "isoDate": "2025-06-12T05:28:00.000Z"
      },
      {
        "title": "토스, 페이스페이 가맹점 확대…서울 전역 2만 개 점포 시범 운영",
        "link": "https://toss.im/tossfeed/article/facepayseoul",
        "pubDate": "Tue, 10 Jun 2025 08:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}페이스페이 사전 가입자 대상 서울 전 자치구에서 시범 서비스 전개\n카페, 음식점, 미용실 등 생활 밀착형 가맹점으로 이용 가능 업종도 다변화\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 ‘페이스페이’ 가맹점을 확대한다고 10일 밝혔다. 서울 시내 2만 개 가맹점에서 페이스페이 시범 운영에 나선다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n토스 페이스페이는 얼굴 인식만으로 간편하게 결제할 수 있는 서비스다. 높은 정확도와 빠른 속도가 강점으로 토스 앱에서 본인 확인 절차를 거쳐 얼굴을 최초 1회 등록하면 신용카드, 체크카드, 계좌 중 원하는 수단으로 편리하게 결제할 수 있다.\n지난 2월 편의점에서 페이스페이를 처음 선보인 데 이어 서울 전 자치구 2만 개 점포에서 시범 운영에 나선다. 페이스페이를 사전 가입한 이용자 중 일부에게 먼저 서비스를 오픈하고, 결제 가능 대상은 점차 늘려갈 계획이다.\n페이스페이는 토스 결제 단말기 및 포스(POS) 솔루션 공급 자회사인 토스플레이스 단말기가 비치된 가맹점에서 이용할 수 있다. 가맹점 수 확대와 더불어 이용할 수 있는 업종도 다양해졌다. 카페, 음식점, 미용실, 학원, 헬스장 등 생활 밀착형 가맹점에서 페이스페이 이용이 가능하다.\n안전하고 편리한 페이스페이를 위한 노력도 기울이고 있다. 24시간 이상거래탐지시스템(FDS)을 가동해 부정 거래를 실시간으로 감지하고 바로 조치한다. ‘안심보상제’도 운영한다. 페이스페이 이용 중 부정 거래가 발생할 경우, 피해 금액을 토스가 선제적으로 보상한다.\n서비스 출시 전, 개인정보보호위원회 사전적정성 검토도 받았다. 사전적정성 검토는 신기술이나 신규 서비스를 출시하려는 기업이 개인정보보호위원회와 개인정보보호 원칙의 합리적인 적용 방안을 찾도록 한 제도다. 이 제도를 거쳐 안면식별정보, 고유식별정보 등을 개인정보보호법상 안전하게 처리할 방안을 마련했다.\n토스 관계자는 “페이스페이가 일상생활에 빠르게 자리 잡을 수 있도록 시범 운영을 통해 사용성과 안정성을 고도화해 나갈 계획”이라며 “안전하고 편리한 서비스를 기반으로 혁신적인 결제 경험을 제공하기 위해 노력하겠다”고 말했다.",
        "content": "페이스페이 사전 가입자 대상 서울 전 자치구에서 시범 서비스 전개",
        "contentSnippet": "페이스페이 사전 가입자 대상 서울 전 자치구에서 시범 서비스 전개",
        "guid": "https://toss.im/tossfeed/article/facepayseoul",
        "isoDate": "2025-06-10T08:00:00.000Z"
      },
      {
        "title": "헬스장 회원권은 신용카드 할부로 결제하면 좋은 이유",
        "link": "https://toss.im/tossfeed/article/installment_payments",
        "pubDate": "Tue, 10 Jun 2025 06:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}헬스장이나 에스테틱처럼 장기 이용권이나 다회권을 구매할 땐 신용카드 할부 결제를 활용하는 게 유리해요. 결제한 곳이 갑자기 폐업하는 등 문제가 생겨도 소비자가 보호 받을 수 있기 때문이에요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}할부 결제를 하면 2가지 소비자 권리가 생겨요\n바로 할부철회권과 할부항변권이에요. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}거래금액이 20만원 이상이면서 할부 기간이 3개월 이상이면, 이 2가지 권리를 행사할 수 있어요.\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n할부철회권 : 7일(방문 판매 14일) 이내에 계약을 철회할 수 있는 권리\n할부항변권 : 서비스 제공이 불가능하거나 계약이 해지될 경우, 할부금 납입을 거절할 수 있는 권리\n\n카드사에 할부항병권을 행사하겠다고 알리면, 카드사가 나머지 대금을 사업자에게 법적으로 청구할 수 있어요.\n예를 들어, 헬스장에서 12개월 회원권을 구입했는데 2달 뒤 헬스장이 폐업하는 경우 일시불로 구입했다면 이미 지급을 완료했기 때문에 방법이 없어요. 하지만 12개월 할부로 구입했다면 남은 10달 치 할부금에 대해 할부항병권을 행사할 수 있어요. 즉, 남은 할부금을 더이상 내지 않아도 되는 거예요. \n이런 경우엔 권리를 쓸 수 없어요\n아래 해당하는 제품은 제외예요. \n\n농수축산물처럼 제조되지 않은 자연산물 \n세탁기, 냉장고 등 설치 인력이 필요한 가전제품\n자동차, CD, 소프트웨어 등 단 한 번이라도 사용하면 가치가 떨어지는 제품\n의약품, 보험, 부동산 등\n\n또한 할부금을 이미 완납한 거래나 상거래(광고), 투자 목적 등의 거래에 대해서도 행사할 수 없어요. 일시불 결제 후 할부 분납 서비스로 전환한 경우도 제외되니, 처음부터 할부로 결제하는 것이 중요해요.",
        "content": "폐업해도 남은 금액 지킬 수 있는 법적 권리가 생겨요",
        "contentSnippet": "폐업해도 남은 금액 지킬 수 있는 법적 권리가 생겨요",
        "guid": "https://toss.im/tossfeed/article/installment_payments",
        "isoDate": "2025-06-10T06:00:00.000Z"
      },
      {
        "title": "토스페이먼츠, 이커머스 사업자 성장 위한 무료 웨비나 시리즈 개최",
        "link": "https://toss.im/tossfeed/article/tosspayments",
        "pubDate": "Mon, 09 Jun 2025 09:17:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}K-뷰티 브랜드 ‘VT코스메틱’, 대표 제품 ‘리들샷’ 글로벌 판매 전략 소개\n토스페이먼츠, “가맹점 사업 성장 돕는 실질적 파트너로 역할 확대”\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 전자지급결제대행(PG) 계열사 토스페이먼츠(대표 임한욱)가 이커머스 사업자의 성장을 돕기 위한 무료 웨비나 시리즈를 개최하고 있다고 9일 밝혔다. 이번 웨비나 시리즈는 단순한 결제 솔루션을 소개를 넘어 고객사들의 사업 성공 사례를 통해 실질적인 비즈니스 성장 전략을 제시하는 데 중점을 뒀다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n이달 25일에는 K-뷰티 브랜드 ‘VT코스메틱’의 글로벌 진출 성공 전략을 주제로 두 번째 웨비나를 연다. VT코스메틱 최철호 부사장이 연사로 나서 ‘리들샷’을 성공으로 이끈 비결을 소개한다. 인디 뷰티 브랜드로서 한국, 일본, 미국 등 시장에서 성과를 거둔 판매 전략과 성장 로드맵도 공개한다. 이어 토스페이먼츠 글로벌세일즈팀 황규호 리더가 국가별 현지 고객이 선호하는 결제 시스템 도입법을 소개한다.\n지난달 열린 첫 웨비나에서는 프리미엄 과일 브랜드 ‘온브릭스’가 자사몰 중심의 성장 전략을 소개했다. 온브릭스 허재성 대표는 자사몰 회원 수를 5천명에서 20만명으로 확대하고 외부 투자 없이 연매출 860억원을 달성한 과정을 공유했다. 당시 웨비나는 700여명이 참석했다.\n웨비나는 토스페이먼츠 공식 블로그를 통해 누구나 신청할 수 있다. 신청 후 별도 발송되는 이메일 내 ‘줌(Zoom)’ 링크를 통해 웨비나에 접속할 수 있다. 참가비는 무료다.\n토스페이먼츠 관계자는 “가맹점의 사업 성장을 돕는 실질적 파트너가 되기 위해 다양한 지원을 이어가고 있다”며 “앞으로도 고객사의 성장 사례를 바탕으로 성공 인사이트를 지속 공유할 계획”이라고 말했다.",
        "content": "가맹점 사업 성장 돕는 실질적 파트너로 역할 확대",
        "contentSnippet": "가맹점 사업 성장 돕는 실질적 파트너로 역할 확대",
        "guid": "https://toss.im/tossfeed/article/tosspayments",
        "isoDate": "2025-06-09T09:17:00.000Z"
      },
      {
        "title": "토스, 근로복지공단과 상생형 직장어린이집 업무 협약",
        "link": "https://toss.im/tossfeed/article/Preschool",
        "pubDate": "Mon, 09 Jun 2025 09:04:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}오는 12월까지 직장어린이집 설립… 인근 중소기업 자녀에게도 개방\n육아 전 단계 포용하는 실질적이고 지속가능한 복지 인프라 완성 노력\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 근로복지공단(이사장 박종길, 이하 공단)과 상생형 직장어린이집 확충을 위한 업무 협약을 체결했다고 9일 밝혔다. 협약식은 서울 강남구 소재 토스 본사에서 열렸으며, 토스 정희연 최고인사책임자와 근로복지공단 형희환 복지사업국장 등 주요 관계자들이 참석했다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n이번 협약을 통해 토스와 근로복지공단은 강남구 인근 근로자의 육아 부담을 덜 수 있도록 협력할 계획이다. 토스는 오는 12월 중 아동 49명을 수용할 수 있는 직장어린이집을 새로 설립하고, 이를 제휴한 중소기업 근로자에게도 개방해 지역 공동체와의 상생을 실현할 예정이다. 근로복지공단은 해당 어린이집의 설치와 운영을 위한 재정적·제도적 지원을 맡는다.\n토스는 이미 지난해 6월, 원아의 거주지 인근 어린이집과 제휴하는 거점형 ‘우리동네 토스 어린이집’ 제도를 도입해 팀원들의 육아 접근성 및 편의성을 높인 바 있다. 이번 추가 설립을 통해 단순한 의무 이행을 넘어 지역 기반 공동 양육 문화를 조성하고, 인근 중소기업에게 비상 돌봄 서비스를 포함한 육아 지원 혜택을 나누는 모델로 확대하게 된다.\n아울러 토스는 자녀 계획부터 출산, 육아까지 전 단계를 아우르는 포괄적 복지 인프라를 갖추고 있다. 난임 진단비 지원, 맘스 커뮤니티 운영, 베이비시터 고용 지원, 육아 휴직자와 복직자 대상 맞춤 제도, 출산 예정 팀원을 위한 맘스 키트와 출산 선물 등 다양한 제도가 마련돼 있다.\n정희연 토스 최고인사책임자는 “토스는 개인의 행복이 업무에 몰입을 가져온다는 조직 문화를 바탕으로, 모든 구성원이 육아와 업무를 균형 있게 병행할 수 있도록 실질적이고 진정성 있는 복지 제도를 설계해왔다”며 “이번 협약은 지역 사회와 돌봄 자원을 나누는 상생의 시작이자, 육아의 전 과정을 포용하는 토스의 복지 철학을 구체화하는 계기가 될 것”라고 밝혔다.",
        "content": "오는 12월까지 직장어린이집 설립… 인근 중소기업 자녀에게도 개방",
        "contentSnippet": "오는 12월까지 직장어린이집 설립… 인근 중소기업 자녀에게도 개방",
        "guid": "https://toss.im/tossfeed/article/Preschool",
        "isoDate": "2025-06-09T09:04:00.000Z"
      },
      {
        "title": "토스, 글로벌 채용 네트워킹 행사 ‘토스 USA 밋업’ 개최",
        "link": "https://toss.im/tossfeed/article/tossusameetup",
        "pubDate": "Sun, 08 Jun 2025 06:50:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}실리콘밸리 현역 엔지니어 초청… 사업 비전 및 개발 친화적 조직 문화 공유\n세계적 수준의 인재 집중 채용… AI 기반 서비스 고도화 시동\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 지난 6일(현지 시간) 미국 캘리포니아주 로스앨터스에서 첫 글로벌 채용 네트워킹 행사인 ‘토스 USA 밋업(Toss USA Meetup)’을 개최했다고 8일 밝혔다. 이번 행사는 실리콘밸리에서 활동 중인 엔지니어들을 초청해 진행했다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n이날 이승건 대표는 토스의 사업 비전과 엔지니어에게 최적화된 업무 환경을 소개했다. 현재 토스는 전사적으로 머신러닝(ML)과 인공지능(AI) 역량을 강화하고 있으며, 광고 및 커머스(Commerce) 분야를 시작으로 전사 서비스의 AI 기반 고도화를 추진하고 있다. 이 과정에서 엔지니어는 자율적인 실험 문화, 우수한 배포 시스템, 2,480만 월간 활성 사용자 수(MAU, 2024년 12월 기준) 기반의 방대한 데이터를 활용해 AI 전문가로 성장할 수 있다.\n행사가 열린 ‘토스 USA(Toss USA)’는 국내외 우수 인재 확보를 위해 올해 실리콘밸리에 설립한 토스의 글로벌 오피스다. 이곳에서 전 세계 엔지니어들과 교류의 장을 마련하고, 토스의 테크 역량을 소개하는 활동을 이어갈 예정이다. 이를 위해 대한무역투자진흥공사(KOTRA) 실리콘밸리 무역관, 창발(Changbal), 한인정보과학기술자협회(KOCSEA) 등 현지 단체와의 협력도 검토 중이다.\n토스는 올해 AI·데이터 직군에서 세 자릿수의 핵심 인력을 채용할 계획이다. 이를 위해 지난달 ‘데이터·AI 채용팀(Data & AI Recruiting Team)’을 신설했으며, 해당 팀은 토스의 데이터 기반 의사 결정과 약 100개가 넘는 제품 중심의 인프라를 책임지는 다양한 역할의 인재 영입에 집중하고 있다.\n이승건 토스 대표는 “토스는 뛰어난 엔지니어 확보를 최우선 과제로 삼고 있으며, 그에 걸맞은 최고 수준의 처우를 제공할 준비가 돼 있다”라며 “훌륭한 팀원들과 함께 AI 분야에서도 인정받는 기업으로 도약하겠다”고 밝혔다.",
        "content": "AI 인재 확보 본격화",
        "contentSnippet": "AI 인재 확보 본격화",
        "guid": "https://toss.im/tossfeed/article/tossusameetup",
        "isoDate": "2025-06-08T06:50:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]