[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Augustin Popa",
        "title": "What’s New in vcpkg (July 2025)",
        "link": "https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-july-2025/",
        "pubDate": "Tue, 05 Aug 2025 20:34:38 +0000",
        "content:encodedSnippet": "This blog post summarizes changes to the vcpkg package manager as part of the 2025.07.25 registry release, 2025-06-20, 2025-07-16, and 2025-07-21 tool releases, as well as changes to vcpkg documentation throughout July. This release includes a new command for printing package SPDX licenses, binary caching optimizations, and support for visionOS, Solaris, and illumos systems.\nSome stats for this period:\nThere are now 2,653 total ports available in the vcpkg curated registry. A port is a versioned recipe for building a package from source, such as a C or C++ library.\n34 new ports were added to the curated registry.\n282 ports were updated. As always, we validate each change to a port by building all other ports that depend on or are depended by the library that is being updated for our 15 main triplets.\n101 community contributors made commits.\nThe main vcpkg repo has over 7,000 forks and 25,300 stars on GitHub.\nvcpkg changelog (2025.07.25 release)\nThe following notable changes were made in this release:\nAdded new vcpkg command license-report, which prints the SPDX licenses from the Software Bill of Materials (SBOMs) of all installed packages. In addition, SPDX licenses now also get printed for packages being installed via classic mode vcpkg install <port names> (PR: Microsoft/vcpkg-tool#1514).\nBinary cache restore optimization: Now decompressing zip files ordered by size, resulting in time savings of up to 14% (PR: Microsoft/vcpkg-tool#1715, thanks @autoantwort!).\nvcpkg now uses azcopy to upload large artifacts for binary caching, which enables binary cache entries > 5GB in size (PRs: Microsoft/vcpkg-tool#1679, Microsoft/vcpkg-tool#1717, thanks @dg0yt!).\nAdded support for visionOS as an available target platform for vcpkg builds (PR: Microsoft/vcpkg-tool#1681, thanks @colincornaby!).\nAdded support for building and using vcpkg on Solaris and illumos systems (PR: Microsoft/vcpkg-tool#1684, thanks @trisk!).\nOther minor bug fixes and internal feature improvements.\nDocumentation changes\nMinor documentation fixes (thanks @bgilbert and @ impugachev!).\nIf you have any suggestions for our documentation, please submit an issue in our GitHub repo or see the box at the bottom of a particular article.\nTotal ports available for tested triplets\ntriplet\nports available\n\n\nx86-windows\n2442\n\n\nx64-windows\n2564\n\n\nx64-windows-release\n2564\n\n\nx64-windows-static\n2437\n\n\nx64-windows-static-md\n2494\n\n\nx64-uwp\n1439\n\n\narm64-windows\n2157\n\n\narm64-windows-static-md\n2138\n\n\narm64-uwp\n1406\n\n\nx64-osx\n2433\n\n\narm64-osx\n2359\n\n\nx64-linux\n2551\n\n\narm-neon-android\n1980\n\n\nx64-android\n2041\n\n\narm64-android\n2003\n\n\n\nWhile vcpkg supports a much larger variety of target platforms and architectures (as community triplets), the list above is validated exhaustively to ensure updated ports don’t break other ports in the catalog.\nThank you to our contributors\nvcpkg couldn’t be where it is today without contributions from our open-source community. Thank you for your continued support! The following people contributed to the vcpkg, vcpkg-tool, or vcpkg-docs repos in this release (listed by commit author or GitHub username):\nAditya Rao\nCraig Edwards\nKai Blaschke\nRussell Greene\n\n\nAlbert Lee\nDewey Dunnington\nKai Pastor\nS. M. Mohiuddin Khan Shiam\n\n\nAleksi Sapon\ndg0yt\nllm96\nSaad\n\n\nAlex Emirov\nDr. Patrick Urbanke\nLoïc Bartoletti\nSaikari\n\n\nAlexis La Goutte\nEgor Krugletsov\nLuca Longinotti\nSamuel Marks\n\n\nAlexis Placet\nEmployee_NO427\nLukas Dürrenberger\nSander Cox\n\n\nAli Mohammad Pur\nEthrynto\nLukey\nshixiong2333\n\n\nAlonso Schaich\nFidel Yin\nmatlabbe\nsidy3d\n\n\nAmin Ya\nFilippos Karapetis\nMatthias Zronek\nStefano Sinigardi\n\n\nAn Tao\ngav2xlin\nMichał Petryka\nStephen Eckels\n\n\nAnders Wind\nGioGio\nMichael MIGLIORE\nSunBlack\n\n\nAndrew Kaster\nIgor Pugachev\nmiyanyan\nSylvain Doremus\n\n\nAntony Peacock\nilya-fedin\nMzying2001\nTaewon Park\n\n\nautoantwort\nIvan\nNick D’Ademo\nTakatoshi Kondo\n\n\navaliente-evs\nIvan Sorokin\nNick Logozzo\ntalregev\n\n\nayeteadoe\nJörg Bornemann\nOliver\nTheodore Tsirpanis\n\n\nAzure SDK Bot\nJackeyLea\nOsyotr\nThomas Arcila\n\n\nBenjamin Gilbert\nJacopo Gasparetto\nPierre Wendling\nTim Flynn\n\n\nBenjamin Pearce\nJames Grant\nPratik Chowdhury\ntoge\n\n\nBranden Bonaby\nJeffrey Wardman\nRémy Tassoux\nVitalii Koshura\n\n\nBruce Mitchener\nJeremy Rifkin\nRafael Kitover\nWeihang Ding\n\n\nCarsten Rudolph\nJoergAtGithub\nRainChan\nYu SuiXian\n\n\nChristian Panov\nJohnny Willemsen\nRaul Metsma\nZXShady\n\n\nChuck Walbourn\njreichel-nvidia\nRippeR37\nRussell Greene\n\n\nColin Cornaby\nJuraj Zikmund\nRossmaxx\n\n\n\nCQ_Undefine\nKadir\nRuslanSemchenko\n\n\n\n\nLearn more\nYou can find the main release notes on GitHub. Recent updates to the vcpkg tool can be viewed on the vcpkg-tool Releases page. To contribute to vcpkg documentation, visit the vcpkg-docs repo. If you’re new to vcpkg or curious about how a package manager can make your life easier as a C/C++ developer, check out the vcpkg website – vcpkg.io.\nIf you would like to contribute to vcpkg and its library catalog, or want to give us feedback on anything, check out our GitHub repo. Please report bugs or request updates to ports in our issue tracker or join more general discussion in our discussion forum.\nThe post What’s New in vcpkg (July 2025) appeared first on C++ Team Blog.",
        "dc:creator": "Augustin Popa",
        "comments": "https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-july-2025/#respond",
        "content": "<p>This blog post summarizes changes to the vcpkg package manager as part of the 2025.07.25 registry release, 2025-06-20, 2025-07-16, and 2025-07-21 tool releases, as well as changes to vcpkg documentation throughout July. This release includes a new command for printing package SPDX licenses, binary caching optimizations, and support for visionOS, Solaris, and illumos systems. Some [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/whats-new-in-vcpkg-july-2025/\">What’s New in vcpkg (July 2025)</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "This blog post summarizes changes to the vcpkg package manager as part of the 2025.07.25 registry release, 2025-06-20, 2025-07-16, and 2025-07-21 tool releases, as well as changes to vcpkg documentation throughout July. This release includes a new command for printing package SPDX licenses, binary caching optimizations, and support for visionOS, Solaris, and illumos systems. Some […]\nThe post What’s New in vcpkg (July 2025) appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35637",
        "categories": [
          "C++",
          "Vcpkg",
          "vcpkg"
        ],
        "isoDate": "2025-08-05T20:34:38.000Z"
      },
      {
        "creator": "Sinem Akinci",
        "title": "Dynamically Update C++ syntax using Next Edit Suggestions",
        "link": "https://devblogs.microsoft.com/cppblog/dynamically-update-c-syntax-using-next-edit-suggestions/",
        "pubDate": "Mon, 04 Aug 2025 16:36:10 +0000",
        "content:encodedSnippet": "When working in a C++ repo, you often are maintaining and updating existing code just as often as you are writing new code. However, updating code in C++ can often require navigating to several different locations in a file to ensure consistency, which can disrupt your logical workflow. For example, changing a data member’s access level typically involves several steps: moving the member between the public and private sections of the class, adding getter/setter methods, and updating all references to respect this new access level.\nGitHub Copilot now supports Next Edit Suggestions (or NES for short) to predict the next edits to come. NES in GitHub Copilot helps you stay in flow by not only helping predict where you’ll need to make updates, but also what you’ll need to change next.\nExample: Converting C code to C++\nAt Microsoft Build, we showed how NES can dynamically update C++ code, including an example of updating code syntax that was using C functions to use the C++ Standard Template Library (STL).\nFor example, when updating code that reads from stdin from C-style code that uses raw character arrays to C++ code that uses the std::string type, NES predicts and suggests updates across all applicable areas near the cursor. NES replaces calls to fgets with calls to std::getline and replaces atoi with the C++ std::stoi, which has better error handling.\n\nYou can then review and make any relevant updates – for example, in this case, any other areas that call on strings.\nNext Edit Suggestions is now available in both Visual Studio and VS Code.  As you try out NES, we’d love to hear your feedback. Share your feedback on Developer Community for Visual Studio or on GitHub for VS Code to help shape what’s next and how we can improve. If NES streamlines your workflow or saves you time, let us know – drop a comment or email us at visualcpp@microsoft.com. We’re excited to see how you’re using NES for C++!\nAgent Mode and other new Copilot features\nGitHub Copilot is evolving beyond typical code completion, with features like Next Edit Suggestions, Agent Mode, and MCP transforming how developers interact with AI. The Visual Studio session at Build not only showcased NES in action, but also Agent Mode and MCP and how they each revolutionize the traditional Copilot interfaces. While NES predicts your next code edits in the editor, agent mode can work as an iterative AI assistant that understands your intent to provide dynamic edits and information.\nTo learn more about the C++ NES use cases detailed above and these other new features available for developers in Visual Studio, watch “Top GitHub Copilot features you missed in Visual Studio 2022”.\n\nWhat do you think?\nTry out the latest Copilot features for your C++ workflows today. To access these updates to Copilot, you’ll need an active GitHub Copilot subscription and the latest version of Visual Studio.\nOur team is working hard on improving C++ integrations with Copilot, so please let us know any other enhancements you’d like to see. Share your thoughts with us on Developer Community for Visual Studio or on GitHub for VS Code to help shape what’s next and how we can improve. You can also reach us via email at visualcpp@microsoft.com, via X at @VisualC, or via Bluesky at @msftcpp.bsky.social.\nThe post Dynamically Update C++ syntax using Next Edit Suggestions appeared first on C++ Team Blog.",
        "dc:creator": "Sinem Akinci",
        "comments": "https://devblogs.microsoft.com/cppblog/dynamically-update-c-syntax-using-next-edit-suggestions/#respond",
        "content": "<p>When working in a C++ repo, you often are maintaining and updating existing code just as often as you are writing new code. However, updating code in C++ can often require navigating to several different locations in a file to ensure consistency, which can disrupt your logical workflow. For example, changing a data member’s access [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/dynamically-update-c-syntax-using-next-edit-suggestions/\">Dynamically Update C++ syntax using Next Edit Suggestions</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "When working in a C++ repo, you often are maintaining and updating existing code just as often as you are writing new code. However, updating code in C++ can often require navigating to several different locations in a file to ensure consistency, which can disrupt your logical workflow. For example, changing a data member’s access […]\nThe post Dynamically Update C++ syntax using Next Edit Suggestions appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35626",
        "categories": [
          "C++",
          "Copilot",
          "New Feature"
        ],
        "isoDate": "2025-08-04T16:36:10.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Diff Risk Score: AI-driven risk-aware software development",
        "link": "https://engineering.fb.com/2025/08/06/developer-tools/diff-risk-score-drs-ai-risk-aware-software-development-meta/",
        "pubDate": "Wed, 06 Aug 2025 17:50:51 +0000",
        "content:encodedSnippet": "The state of the research\nDiff Risk Score (DRS) is an AI-powered technology built at Meta that predicts the likelihood of a code change causing a production incident, also known as a SEV. Built on a fine-tuned Llama LLM, DRS evaluates code changes and metadata to produce a risk score and highlight potentially risky code snippets. Today, DRS powers many risk-aware features that optimize product quality, developer productivity, and computational capacity efficiency. Notably, DRS has helped us eliminate major code freezes, letting developers ship code when they historically could not with minimal impact to customer experience and the business.\nWhy it matters\nSoftware development is fraught with risk, especially for intricate, rapidly evolving, and scaled products and technologies. Because Meta operates at a global scale, we need the best tools possible to mitigate risk and to protect both user experience and advertiser outcomes.\nAI is transforming how we build products, so we committed ourselves to applying AI to improve every aspect of the software development process. Production risk was one of the areas we tackled first. We theorized that, if equipped with a model that could predict if a code change might cause a SEV, we could build features and workflows to improve almost every aspect of writing and pushing code.\nSince DRS use cases are too numerous to cover in depth here, we’ll focus on one: code unfreeze. For Meta, production incidents can drive significant negative user experience and advertiser impact. For this reason, some teams have historically “frozen” major parts of the codebase for sensitive periods like Cyber 5 holiday shopping week, preventing engineers from shipping code to reduce incident risk. For certain teams, it has cut down their holiday shopping code freeze, leading to significant improvements in productivity.\nWhile this had clear reliability benefits, the tradeoff was a substantial reduction in productivity. DRS enabled a more nuanced approach, letting developers land lower-risk changes during these periods while minimizing production incidents, thus protecting the user experience, the business, and productivity. In fact, DRS has driven meaningful productivity gains across many sensitive periods. During one such period, a major partner event in 2024, we landed 10,000+ code changes (that previously could not have landed during a freeze) with minimal production impact, enabling continued innovation and customer success. What’s more, by managing productivity and risk in this way, we benefit twice: through more code landed and through less engineering time spent detecting, understanding, and mitigating production incidents.\nCode unfreeze works well, but it’s just the start of what the technology can do. Understanding risk, even imperfectly and at a statistical level, has driven improvements for Meta in more ways than we anticipated – there are 19 use cases for risk tooling and growing!\nWhere we’re headed next\nThe success of DRS has spurred the creation of new risk-aware features across Meta that span the entire development lifecycle, from planning to post-release monitoring. The demand to build such features also led us to build the Risk Awareness Platform to provide risk analysis APIs and tool integrations.\nWe envision four major directions for risk awareness in the coming months and years.\nFirst, while we’ve seen an explosion of DRS-powered features on the Risk Awareness Platform, from optimizing build and test selection to improving reliability, selecting code reviewers, and analyzing release risks, we believe this is only the beginning. A critical problem in software engineering is maximizing innovation rate subject to a reliability threshold, so the applications of risk understanding are virtually inexhaustible. We believe code risk can play a significant role in improving this tradeoff, so we will build more risk-aware features while improving their quality. As the risk model, feature data, and user experiences improve, we’ll see greater real-world benefits for people who use Meta’s products and businesses who advertise with Meta.\nSecond, we will expand beyond code change risk to configuration change risk. While code changes cause the plurality of SEVs at Meta, configuration changes are another large category. For this reason, we’ve expanded the RAP to include models that predict the risk of various config changes. These efforts are state of the art, focused on an open research area, and earlier on the research-to-production continuum, but we believe they will soon power feature families of their own, much like DRS does today.\nThird, we want to automate the risk mitigation step. Instead of flagging risky diffs and recommending appropriate reviewers or rollback mechanisms, we want to use AI agents to proactively generate risk-mitigating changes. This can be done for code in motion (i.e. diffs or pull requests) and for code at rest to lower baseline codebase risk. Additionally, once we are armed with a greater understanding of configuration risks, these agents will be able to operate flexibly across both code and config changes.\nFourth, we will increasingly use natural language outputs to show humans what these risk-aware technologies are doing and why. By helping engineers understand the rationale behind the risk score, we’ll empower them to either mitigate risks or give the model feedback to improve accuracy. This creates a learning loop for improving both our risk models and the end user experience. LLM explainability remains an open area of research, but our teams are actively working to offer answers to common questions.\nWe are excited for the future of risk-aware software development, and we look forward to learning from—and with—our colleagues in industry as we make progress in this valuable domain.\nRead the papers\n\n“Moving Faster and Reducing Risk: Using LLMs in Release Deployment“\n“Leveraging Risk Models to Improve Productivity for Effective Code Un-Freeze at Scale”\nAcknowledgements\nWe would like to thank all the team members and the leadership that contributed to making the DRS effort successful at Meta. Rui Abreu, David Amsallem, Parveen Bansal, Kaavya Chinniah, Brian Ellis, James Everingham, Peng Fan, Ford Garberson, Jun Ge, Kelly Hirano, Kosay Jabre, David Khavari, Sahil Kumar, Ajay Lingapuram, Yalin Liu, Audris Mockus, Megh Mehta, Vijayaraghavan Murali, Venus Montes, Aishwarya Girish Paraspatki, Akshay Patel, Brandon Reznicek, Peter C Rigby, Maher Saba, Babak Shakibi, Roy Shen, Gursharan Singh, Matt Steiner, Weiyan Sun, Ryan Tracy, Siri Uppalapati, and Nachiappan Nagappan.\nThe post Diff Risk Score: AI-driven risk-aware software development appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>The state of the research Diff Risk Score (DRS) is an AI-powered technology built at Meta that predicts the likelihood of a code change causing a production incident, also known as a SEV. Built on a fine-tuned Llama LLM, DRS evaluates code changes and metadata to produce a risk score and highlight potentially risky code [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/06/developer-tools/diff-risk-score-drs-ai-risk-aware-software-development-meta/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/06/developer-tools/diff-risk-score-drs-ai-risk-aware-software-development-meta/\">Diff Risk Score: AI-driven risk-aware software development</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "The state of the research Diff Risk Score (DRS) is an AI-powered technology built at Meta that predicts the likelihood of a code change causing a production incident, also known as a SEV. Built on a fine-tuned Llama LLM, DRS evaluates code changes and metadata to produce a risk score and highlight potentially risky code [...]\nRead More...\nThe post Diff Risk Score: AI-driven risk-aware software development appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22791",
        "categories": [
          "AI Research",
          "DevInfra",
          "ML Applications"
        ],
        "isoDate": "2025-08-06T17:50:51.000Z"
      },
      {
        "creator": "",
        "title": "Building a human-computer interface for everyone",
        "link": "https://engineering.fb.com/2025/08/04/virtual-reality/building-a-human-computer-interface-for-everyone-meta-tech-podcast/",
        "pubDate": "Mon, 04 Aug 2025 14:00:25 +0000",
        "content:encodedSnippet": "What if you could control any device using only subtle hand movements?\nNew research from Meta’s Reality Labs is pointing even more firmly toward wrist-worn devices using surface electromyography (sEMG) becoming the future of human-computer interaction.\nBut how do you develop a wrist-worn input device that works for everyone?\nGeneralization has been one of the most significant challenges in the field of human-computer interaction (HCI). The machine learning models that power a device can be trained to respond to an individual’s hand gestures, but they struggle to apply that same learning to someone else. Essentially, novel HCI devices are usually one-size-fits-one.\nOn the latest episode of the Meta Tech Podcast, Pascal Hartig sits down with Sean B., Lauren G., and Jesse M. — research scientists on Meta’s EMG engineering and research team — to discuss how their team is tackling the challenge of generalization and reimagining how we interact with technology. \nThey discuss the road to creating a first-of-its-kind, generic human-computer neuromotor interface, what happens when software and hardware engineering meet neuroscience, and more!\nDownload or listen to the episode below:\n\nSpotify\nApple Podcasts\nPocket Casts\nThe Meta Tech Podcast is a podcast, brought to you by Meta, where we highlight the work Meta’s engineers are doing at every level – from low-level frameworks to end-user features.\nSend us feedback on Instagram, Threads, or X.\nAnd if you’re interested in learning more about career opportunities at Meta visit the Meta Careers page.\nThe post Building a human-computer interface for everyone appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>What if you could control any device using only subtle hand movements? New research from Meta’s Reality Labs is pointing even more firmly toward wrist-worn devices using surface electromyography (sEMG) becoming the future of human-computer interaction. But how do you develop a wrist-worn input device that works for everyone? Generalization has been one of the [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/04/virtual-reality/building-a-human-computer-interface-for-everyone-meta-tech-podcast/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/04/virtual-reality/building-a-human-computer-interface-for-everyone-meta-tech-podcast/\">Building a human-computer interface for everyone</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "What if you could control any device using only subtle hand movements? New research from Meta’s Reality Labs is pointing even more firmly toward wrist-worn devices using surface electromyography (sEMG) becoming the future of human-computer interaction. But how do you develop a wrist-worn input device that works for everyone? Generalization has been one of the [...]\nRead More...\nThe post Building a human-computer interface for everyone appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22776",
        "categories": [
          "AI Research",
          "Culture",
          "ML Applications",
          "Virtual Reality",
          "Meta Tech Podcast"
        ],
        "isoDate": "2025-08-04T14:00:25.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Simon Vergauwen",
        "title": "KotlinX RPC 0.9.1 Is Now Available",
        "link": "https://blog.jetbrains.com/kotlin/2025/08/kotlinx-rpc-0-9-1-is-now-available/",
        "pubDate": "Fri, 08 Aug 2025 13:40:42 +0000",
        "content:encodedSnippet": "This release of kotlinx.rpc introduces significant improvements aimed at the long-term stability, maintenance, and evolution of the library. We’ve focused on decoupling dependencies and simplifying the API to create a more robust and user-friendly experience.\nReady to get started? Build your next project with the interactive generator at start.ktor.io, or check out our samples on GitHub. Your feedback and contributions are always welcome!\n🔗 Get Started With KotlinX RPC | 📢 Join the Community on Slack in #kotlinx-rpc\nGet Started With KotlinX RPC\n         \nDecoupling from KotlinX Serialization\nThe kotlinx-rpc-core module is no longer coupled with kotlinx.serialization. This major change allows you to use kotlinx.rpc without kotlinx.serialiation in a gRPC setup. The responsibility for serializing data is now handled by the implementer of the RpcClient and RpcServer interfaces. See the incompatible API changes guide for more information.\nSimplified lifetime management\nWe’ve simplified resource management and reduced the potential for common mistakes. The @Rpc generated implementations, RpcClient, and RpcServer, no longer extend CoroutineScope. Consequently, the CoroutineScope parameter has been removed from the RpcServer.registerService factory method, streamlining the overall API.\nStrict mode is now the default\nStrict mode, which was introduced in version 0.5.0 to simplify the APIs and guarantee correctness, is now enabled by default, and it cannot be disabled in versions after 0.8.0. For a detailed guide on adapting your project, please check out the Strict mode documentation.\nChangelog\nFeatures\nSerialization decoupling by Mr3zee in kotlinx-rpc/354\nUpdate Kotlin to 2.2.0 by Mr3zee in kotlinx-rpc/359\nBreaking changes\n[Meta] Strict mode, deprecations, lifetime by Mr3zee in kotlinx-rpc/353\nImprovements and fixes\nSupport nullable contextual serializers by @yakivy in #392\nMake WebSocket installation for Ktor server more flexible by @Mr3zee in #398\nMake KtorRpcClient inherit KrpcClient by @Mr3zee in #396\nGenerate Platform status labels in API documentation by Mr3zee in kotlinx-rpc/356\nGenerate API documentation with Dokka by Mr3zee in kotlinx-rpc/357\nInclude changelog on website  by Mr3zee in kotlinx-rpc/358\nAdd onboarding guide by Mr3zee in kotlinx-rpc/363\nFix compilation for standalone k2 module by Mr3zee in kotlinx-rpc/350\nUpdate README.md to use non-suspend flows by brokenhappy in kotlinx-rpc/342\nPropagate transport coroutine context by @yakivy in #374\nEnsure KrpcClient is created only once by @Mr3zee in #385\nGrpc sample update by @Mr3zee in #371\nThank you!\nWe want to say a huge thank-you to our community for all the valuable contributions and feedback!\nA special shout-out goes to @brokenhappy, @BierDav, and @yakivy  for their first contributions to KotlinX RPC.\n🔗 Get Started With KotlinX RPC | 📢 Join the Community on Slack in #kotlinx-rpc",
        "dc:creator": "Simon Vergauwen",
        "content": "This release of kotlinx.rpc introduces significant improvements aimed at the long-term stability, maintenance, and evolution of the library. We&#8217;ve focused on decoupling dependencies and simplifying the API to create a more robust and user-friendly experience. Ready to get started? Build your next project with the interactive generator at start.ktor.io, or check out our samples on [&#8230;]",
        "contentSnippet": "This release of kotlinx.rpc introduces significant improvements aimed at the long-term stability, maintenance, and evolution of the library. We’ve focused on decoupling dependencies and simplifying the API to create a more robust and user-friendly experience. Ready to get started? Build your next project with the interactive generator at start.ktor.io, or check out our samples on […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=590736",
        "categories": [
          "news",
          "releases",
          "release"
        ],
        "isoDate": "2025-08-08T13:40:42.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "How to Integrate Qodana Into TeamCity ",
        "link": "https://blog.jetbrains.com/qodana/2025/08/how-to-integrate-qodana-into-teamcity/",
        "pubDate": "Thu, 07 Aug 2025 20:33:30 +0000",
        "content:encodedSnippet": "Integrate Qodana into TeamCity\n\n\n\nThere are many compelling reasons to use TeamCity as your CI server. Thanks to its out-of-the-box features, smart test management capabilities, and great scalability for enterprises, TeamCity offers a robust and reliable CI solution. But if you’re really looking to increase compliance and improve code quality and security, you can couple it with Qodana. \nIntegrating Qodana’s static code analysis can significantly improve the quality of your codebase and help you enforce better standards in your CI/CD pipeline. With built-in support through a dedicated Qodana build runner, it’s becoming increasingly easy to embed code quality checks directly into your development workflow.\nIn this post, we’ll explore how Qodana and TeamCity complement each other and how to get started with your integration process.\nTable of Contents\n\nBringing Qodana into TeamCity\nConfiguring Qodana in your build pipeline\nQuality gates and baseline comparisons\nCustom configuration with scripts\nViewing results in TeamCity or Qodana Cloud\nSupporting pull requests and branch analysis\nTeamCity Cloud and Qodana Cloud for better quality software products\nFrequently Asked Questions\nHow do I use Qodana to analyze .NET projects?\nWhy is TeamCity often used with Qodana instead of other analyzers?\nWhere can I get assistance if I have an issue? \n\n\nBringing Qodana into TeamCity\nQodana is available as a build runner within TeamCity, making it simple to incorporate static analysis into your existing builds. To get started, make sure that your project is built using a language supported by Qodana, such as Java, Kotlin, PHP, Python, JavaScript, TypeScript, Go, or C#. \nQodana is compatible with various IDEs and any CI pipeline, including all JetBrains IDEs (like IntelliJ IDEA and Rider), VS Code, and Visual Studio, as well as platforms like Jenkins and .NET. You can find a list of Qodana linters here.\nIf you’re running your own TeamCity agents, ensure that Docker is installed and accessible. For users of TeamCity Cloud with JetBrains-hosted agents, this is already set up for you.\nIt’s worth noting that Qodana doesn’t currently support Windows-based build agents in TeamCity.\nConfiguring Qodana in your build pipeline\nSetting up Qodana in TeamCity is easy.\nWhile the recommended and most straightforward approach is to place your `qodana.yaml` configuration file directly in the repository, Qodana also supports dynamic configuration through TeamCity’s command-line runner. This can be helpful in edge cases, for example, if your team needs to tailor inspections dynamically based on project type, team preferences, or environment.\nThat said, for most teams, using a versioned `qodana.yaml` file ensures consistency, clarity, and traceability across builds.\nTo learn how to set up dynamic configuration in TeamCity, view our response to this query. \nPrefer something more visual? Explore Qodana’s code coverage reports in the TeamCity UI – no scripting required.\nStep 1: In TeamCity, go to the configuration page of your build and add a new build step. \nStep 2: Select the Qodana build runner, and then expand the advanced options to customize its behavior.\nStep 3: Define the linter you’d like to use, specify a version, and point to either a default or custom inspection profile. If you’re using Qodana Cloud, you can also add a project token at this stage. This is required for commercial linters, but optional for community ones.\nbuildType {\n    steps {\n        qodana {\n            name = \"Qodana analysis\"\n            linter = jvm {\n                version = Qodana.JVMVersion.LATEST\n            }\n            inspectionProfile = embedded {\n                name = \"qodana.starter\"\n            }\n            cloudToken = \"%qodana.cloud.token%\"\n            additionalQodanaArguments = \"--baseline qodana.sarif.json\"\n        }\n    }\n}\n\n\n\n\nOptional step: For more granular control, you can configure things like a unique report ID, working directory, or whether Qodana reports should be visible under the Tests tab in TeamCity. There’s also support for advanced parameters, such as Docker arguments or additional Qodana CLI options.\nFor more detailed instructions and more on the function of each step, view the docs. \nConfigure Qodana in TeamCity\n\n\n\n\nQuality gates and baseline comparisons\nQuality gates are tools that let you stop code from being merged to the main branch if it doesn’t meet specific requirements, or if too severe or too many issues are flagged. If a quality gate condition fails, Qodana terminates using exit code 255, which makes a CI/CD workflow or pipeline fail. \nQodana makes it easy to set up quality gates that fail a build when the number of issues exceeds a set threshold. It also supports baseline functionality, which allows you to compare the current analysis results with a previous state. This helps identify new problems instead of flagging the same issues with every analysis.\nBoth of these features are configured using simple command-line arguments in the Qodana runner. There are various ways you can set this up. For example, you can create a quality gate that considers the number of problems before allowing code to be merged (more flexible settings are available in `qodana.yaml`):\nfailureConditions:\n  severityThresholds:\n    any: 10 # Total problems\n    critical: 5 # Critical and other severities\n    high: 5\n    moderate: 10\n    low: 20\n    info: 20\n\n\n\n\nThis combination of quality gates and baseline functionality can help your team avoid a crisis as well as unnecessary noise from legacy issues.\nSet Up Quality Gates\nCustom configuration with scripts\nIf your project requires a custom inspection profile or specific exclusions, you can use a `qodana.yaml` file. You can either include this file in your repository or use a script in TeamCity to generate it on the fly.\n\n\n\n\nView Configuration Docs\nViewing results in TeamCity or Qodana Cloud\nOnce your build runs, Qodana offers flexible options for reviewing results. You can access detailed analysis directly in the Qodana tab within TeamCity, making it easy to spot issues alongside your other build diagnostics.\nAlternatively, you can explore the results in Qodana Cloud, which provides a web-based dashboard with collaboration tools, history tracking, and integration with issue trackers.\n\n\n\n\n\n\n\n\n\n\n\n\nSupporting pull requests and branch analysis\nQodana also works well in pull request workflows. The purpose of pull request analysis is to examine code changes in a pull request or merge request, detecting issues introduced or fixed by that specific change.\nQodana compares the current branch against the target branch (e.g. `main` or `develop`), and then it highlights issues only in the changed files or lines.\nBy configuring VCS triggers in TeamCity, you can analyze merge requests or specific branches before they’re integrated into your main codebase. This adds an essential layer of quality assurance to every code review.\nThen baseline track new problems introduced over time by comparing the current analysis results with a previous “clean” state.\nYou can generate a baseline file, and in future runs, Qodana compares the current issues against this baseline. Only new issues (not present in the baseline) are reported as problems.\nThese approaches can be combined for better quality gates and enforcement.\nTeamCity Cloud and Qodana Cloud for better quality software products\nIntegrating Qodana into your TeamCity pipeline gives you a solid foundation for a healthier codebase. With static analysis running automatically as part of your build process, you reduce the chance of bugs slipping through and can use Qodana to enforce quality as a team.\nTeamCity and Qodana compliment each other, with TeamCity managing your builds with Qodana ensuring that your code is clean and something you can be proud of. Both help prevent future issues, and together, they offer an automated, and scalable approach to CI/CD – with built-in code quality from day one.\nFrequently Asked Questions\nHow do I use Qodana to analyze .NET projects?\nTo analyze .NET projects, you can use the `qodana-dotnet` Docker image or the native solution based on Rider. There’s also a Community Edition available via the `qodana-cdnet` Docker image, but it’s better to use the trial version of a paid license for greater functionality.\nWhy is TeamCity often used with Qodana instead of other analyzers?\nTeamCity and Qodana are both created by JetBrains, which means deep integration that’s not easily reproduced by competitors. \nWhere can I get assistance if I have an issue? \nYou can visit this TeamCity Support page or email Qodana Support.\nDon’t have TeamCity? Click the button below to download it.\nIf you want to learn more about Qodana’s plans and pricing, see here. \nDownload TeamCity\nSpecial thanks to Irina Khromova and Pavel Sher for their contributions to this post.",
        "dc:creator": "Kerry Beetge",
        "content": "There are many compelling reasons to use TeamCity as your CI server. Thanks to its out-of-the-box features, smart test management capabilities, and great scalability for enterprises, TeamCity offers a robust and reliable CI solution. But if you’re really looking to increase compliance and improve code quality and security, you can couple it with Qodana.&#160; Integrating [&#8230;]",
        "contentSnippet": "There are many compelling reasons to use TeamCity as your CI server. Thanks to its out-of-the-box features, smart test management capabilities, and great scalability for enterprises, TeamCity offers a robust and reliable CI solution. But if you’re really looking to increase compliance and improve code quality and security, you can couple it with Qodana.  Integrating […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=590530",
        "categories": [
          "how-tos",
          "tutorials",
          "cicd",
          "teamcity"
        ],
        "isoDate": "2025-08-07T20:33:30.000Z"
      },
      {
        "creator": "Anna Maltseva",
        "title": "AI Assistant, Junie and Kineto Now Support GPT-5 by OpenAI",
        "link": "https://blog.jetbrains.com/blog/2025/08/07/gpt-5-support-in-ai-assistant-junie-kineto/",
        "pubDate": "Thu, 07 Aug 2025 17:00:07 +0000",
        "content:encodedSnippet": "At JetBrains, we are committed to delivering the best technologies to professional developers. We support multiple LLM providers across our AI products to ensure you have access to the right tools for your needs and the freedom to choose the ones you prefer.\nToday, we’re excited to announce that the latest model from OpenAI, GPT-5, is now available in our AI products: AI Assistant, Junie, and Kineto.\n\n\n\n\n\n\nA leap forward in developer AI\nIn one of the most exciting recent developments in AI news, OpenAI has just revealed the new GPT-5 model. At JetBrains, we had the opportunity to access and test GPT-5 early. \n“Iterative deployment helps ensure we approach and launch new model capabilities with the highest levels of rigor. Working with JetBrains on GPT-5 is the latest example of how their feedback and early testing will help us identify the API’s optimal impact where it matters most for their users.”\nOlivier Godement, Head of Business Products at OpenAI\nBased on our testing, we consider GPT-5 a game changer for coding. It can handle larger, more complex development tasks with greater accuracy and reliability.\nJunie, the coding agent, now powered by GPT-5\nWith GPT-5 integrated, Junie becomes significantly more capable. In our internal benchmarks, GPT-5 delivered 1.5× to 2× improvements in code quality, task complexity handling, and overall performance compared to the previous OpenAI models. GPT-5 is set as the default model for Junie, but you can always change it in the plugin’s settings. \nIn this example, Junie was asked to create a hidden snake game as an Easter egg in a footer. \n\n\n\n\nIt not only identified the precise place to inject the feature in a large codebase, but it also accounted for dependencies and layout constraints – delivering production-ready code, fully integrated and bug-free.\nJetBrains AI Assistant gets a boost with GPT-5\nWith the latest update, JetBrains AI Assistant now has GPT-5 selected as the default model for chat, as it offers the best generation quality currently available, balanced with optimized costs.\nIn the example below, we give AI Assistant a single prompt asking it to create an HTML5 page showing what a JetBrains IDE could look like in 2030. This single prompt was enough for GPT-5 to generate a fully responsive, styled, and interactive prototype, demonstrating its exceptional capabilities when paired with JetBrains AI Assistant.\n\n\n\n\nHow to try GPT-5 in your IDE\nYou can try GPT-5 in your JetBrains IDE (starting from version 2025.2) by updating to the latest versions of the AI Assistant and Junie plugins (Settings | Plugins). GPT-5 will be available in AI Assistant’s chat and Junie as your default model.\nGet Started\n                                                    \nPowering creators with no-code solutions via Kineto and GPT-5 \nGPT-5 is particularly useful when it comes to frontend-related tasks. This is why we set this model as the default for Kineto, our brand-new no-code AI platform for generating websites and apps. GPT-5 gave Kineto a significant boost in creating single-purpose apps from user prompts with no coding required. \n\n\n\n\n\n\nKineto is now in the Early Access Program. Join the waitlist to try it. \nHappy developing!",
        "dc:creator": "Anna Maltseva",
        "content": "At JetBrains, we are committed to delivering the best technologies to professional developers. We support multiple LLM providers across our AI products to ensure you have access to the right tools for your needs and the freedom to choose the ones you prefer. Today, we’re excited to announce that the latest model from OpenAI, GPT-5, [&#8230;]",
        "contentSnippet": "At JetBrains, we are committed to delivering the best technologies to professional developers. We support multiple LLM providers across our AI products to ensure you have access to the right tools for your needs and the freedom to choose the ones you prefer. Today, we’re excited to announce that the latest model from OpenAI, GPT-5, […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=590450",
        "categories": [
          "news",
          "ai-assistant",
          "ai-in-ides",
          "junie"
        ],
        "isoDate": "2025-08-07T17:00:07.000Z"
      },
      {
        "creator": "Alexey Totin",
        "title": "Configuration Drift: The Pitfall of Local Machines",
        "link": "https://blog.jetbrains.com/codecanvas/2025/08/configuration-drift-the-pitfall-of-local-machines/",
        "pubDate": "Wed, 06 Aug 2025 12:51:23 +0000",
        "content:encodedSnippet": "You’ve seen it before. Someone says, “It works on my machine,” and suddenly you’re deep in a rabbit hole trying to understand why a project that works perfectly on one machine fails to build or test on another.\nThat’s configuration drift – when a developer’s actual environment starts to deviate from the project’s intended configuration. It’s subtle, builds up over time, and can create serious issues.\nWhy it happens\nRarely intentional, configuration drift occurs when your development environment, including its associated packages, versions, system tools, and environment variables, slowly strays from the standard setup everyone is supposed to use.\nSome collaborators update their version of Node.js or Python, others don’t. Someone installs a CLI tool globally. Someone else tweaks a config file and forgets to share it. Files like .env.local or ignored setup scripts go out of sync. None of this is malicious – it’s just difficult to keep track of every little change you make to your setup over time. However, when it happens across a team, the differences pile up fast.\nWhy configuration drift is a real problem\nOn small projects, config drift is annoying. On larger ones, it can quickly cause major headaches. Some of the main issues that configuration drift can lead to include:\nConfiguration discrepancies\nThis is where the classic “But it works on my machine” comment typically arises. You get a bug report from a teammate, but you can’t reproduce it because your environment isn’t quite the same as theirs. Now the team is stuck hunting for invisible differences in local setups.\nInconsistent test results\nOne dev runs the test suite, and everything passes. Another runs it, and half the tests fail. It turns out they had slightly different dependency versions or a missing env var. Nobody wins.\nBroken CI/CD pipelines\nThe code works fine locally but breaks during deployment. CI environments generally enforce stricter and more consistent configurations than local machines. If you forget to commit a config or miss a setup step, the CI server will quickly expose the issue.\nWasted time debugging the setup\nMuch of the onboarding process for new developers involves tracking down weird setup issues. Every little obstacle – whether a misconfigured shell, a missing Python version, or a random global package – chips away at productivity.\nNo matter the symptom, the result is the same: hours lost on non-coding work, slower teams, frustrated devs, and harder-to-maintain projects. And none of this work involves the actual product. It’s about addressing environment-related issues.\nSo, how do people usually deal with it?\nMost teams try to keep developer environments consistent. Some methods help a lot, while others just mask the problem. Let’s look at the most common approaches and where they fall short.\nPinning tool versions and environment variables\nThis is where most projects start. You pin your Node.js or Python version using tools like nvm, pyenv, or asdf. You commit a .tool-versions or .nvmrc file so that everyone runs the same runtime.\nNext comes the .env file. You insert your API URLs, tokens, and maybe a couple of feature flags and call it a day.\nThis works until someone forgets to source the .env file, uses a newer tool version locally, or runs into a weird bug because their shell config or OS version is slightly different.\nThe bottom line is this tactic sets expectations but doesn’t enforce anything.\nAutomating setup with scripts\nWhatever your team uses, whether Makefiles, Bash scripts, just, or Ansible, the idea is the same: one command sets up your whole development environment.\nAs this approach gives you reproducible setup instructions and helps new teammates onboard faster, it’s more effective. But it’s not a silver bullet. These scripts aren’t idempotent. They assume a clean state. If a developer tweaks something manually later, the script won’t fix it. And it can’t stop configuration drift once it starts.\nUsing dev containers or declarative environments\nDockerfiles and devcontainer.json definitions let you standardize development at the system level. Add Nix, Guix, or Devbox to the mix, and now you can describe everything (dependencies, system packages, and tooling) in a single config file.\nAs this approach allows you to rebuild the same environment every time, it’s a big step forward with no surprises.\nHowever, working inside Docker can feel clunky. Performance isn’t always great, debugging can be painful, and advanced tools like Nix, while powerful, are notoriously hard to learn. One wrong expression and you’re staring at a wall of cryptic errors.\nSo yes, these approaches reduce drift, but they also add friction. And you’re still ultimately running things on different machines with different host systems, hardware, and edge cases.\nA better solution: Cloud dev environments\nImagine if your dev environment didn’t live on your laptop, but it felt like it did. With today’s cloud development environments (CDEs), your workspace runs remotely, but the UI is streamed using optimized protocols designed specifically for coding and development tasks – no clunky VDI. The result? A native-like IDE experience that’s fast, responsive, and consistent, no matter where you are – no hidden state or outdated dependencies! It’s like getting a fresh, clean laptop every time you open your IDE.\nBut running CDEs at scale requires a way to define, manage, and connect those environments to the tools your team already uses. That’s where orchestration solutions like GitHub Codespaces, Gitpod, and Coder come in, providing a control layer over CDEs.\nAt JetBrains, we’ve built our own CDE orchestrator: CodeCanvas. It gives you everything you’d expect from a CDE orchestration platform, including centralized templates, setup scripts, and security policies, but with one huge advantage – first-class support for JetBrains IDEs. And if you’re more into VS Code or Cursor, CodeCanvas supports those tools, too.\nJetBrains CodeCanvas\nIf you’re ready to give CDEs a try, install CodeCanvas in your AWS account. It takes only a few steps:\nLaunch the installation (an AWS account is required)\nFollow the installation instructions\n\n\n\n\nPlanning a more complex setup or looking to discuss how CodeCanvas can work in your infrastructure? Contact us – we’ll be happy to help!\nWant to learn more about the benefits of CDEs and whether your company should consider adopting them? Here are some of our recent blog posts:\nSolving Remote Development Challenges With CodeCanvas\nShould Your Company Adopt Remote Development?\nFrom VDI to CDEs\n10 Remote Development Best Practices",
        "dc:creator": "Alexey Totin",
        "content": "You’ve seen it before. Someone says, “It works on my machine,” and suddenly you’re deep in a rabbit hole trying to understand why a project that works perfectly on one machine fails to build or test on another. That’s configuration drift – when a developer’s actual environment starts to deviate from the project’s intended configuration. [&#8230;]",
        "contentSnippet": "You’ve seen it before. Someone says, “It works on my machine,” and suddenly you’re deep in a rabbit hole trying to understand why a project that works perfectly on one machine fails to build or test on another. That’s configuration drift – when a developer’s actual environment starts to deviate from the project’s intended configuration. […]",
        "guid": "https://blog.jetbrains.com/?post_type=codecanvas&p=586211",
        "categories": [
          "cloud-development-environments",
          "codecanvas",
          "configuration-drift",
          "remote-development"
        ],
        "isoDate": "2025-08-06T12:51:23.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "Java Annotated Monthly – August 2025",
        "link": "https://blog.jetbrains.com/idea/2025/08/java-annotated-monthly-august-2025/",
        "pubDate": "Wed, 06 Aug 2025 11:17:24 +0000",
        "content:encodedSnippet": "Welcome to this month’s Java Annotated Monthly – your pit stop for all things related to Java, Kotlin, frameworks, and the ever-shifting tech scene. From helpful reads to red-hot takes, we’ve lined up a range of articles for curious devs and ambitious teams.\nBut wait, there’s more! As always, our AI corner is here, and we’ve sprinkled in some thought-provoking, non-tech gems on building better teams and smarter products.\nOh, and don’t miss the special feature by A N M Bazlur Rahman! He’s bringing you his top picks, personal reflections, and sharp takes on where the dev world’s heading. Trust us, it’s a ride worth taking.\nLet’s go! \nFeatured Content\nA N M Bazlur Rahman\n\nA N M Bazlur Rahman is a Java Champion, Jakarta EE Ambassador, and Software Engineer with over 12 years of specialized experience in Java and related technologies. He is the founder and moderator of the Java User Group in Bangladesh, and has been organizing educational meetups and conferences since 2013. Bazlur is a veteran editor at InfoQ and a contributing editor at Foojay.io. He has authored six books on Java programming, including Modern Concurrency in Java with O’Reilly, scheduled for release in September. He is also working on his seventh book, Build Smart Java Applications with Large Language Models, with his friend Shaaf Syed and Manning Publications. When not coding or writing, you can find him speaking at conferences and Java User Groups, sharing his passion for Java, Jakarta EE, and the integration of AI technologies into enterprise applications.\n \n\n\nJava and AI integration takes center stage\nAs a Java developer with a recent interest in the AI integration space, I’m excited to share what I consider the most transformative period in Java’s 30-year history. The ecosystem has reached a tipping point where AI integration is no longer experimental. It’s production-ready, and Java developers are embracing it at an unprecedented pace. From my recent talk at GeeCON 2025 in Kraków to my hands-on experiments building AI-powered applications, I’ve witnessed firsthand how Java is becoming the go-to platform for enterprise AI development.\nThe foundation of this revolution lies in the language itself. JDK 25 is shaping up to be a landmark release, with features that directly benefit AI workloads. The game changer is JEP 519: Compact Object Headers, with Amazon reporting 22% less heap usage and 8% faster execution in production. However, what really excites me is JEP 505: Structured Concurrency (Fifth Preview), which I explored in depth in my article, Java’s Structured Concurrency: Finally Finding Its Footing. This feature simplifies concurrent programming by treating related tasks as single units, making them ideal for orchestrating multiple AI model calls. Combined with instance main methods becoming final in JDK 25, which provides a pleasing experience for beginners, Project Leyden and the evolving Vector API are positioning Java as a serious contender for AI workloads.\nThe framework landscape has me particularly excited. The general availability of Spring AI 1.0 streamlines AI app development with support for 20+ models and built-in RAG capabilities. LangChain4j’s 1.1.0 release introduces comprehensive guardrail support – something I’ve written about extensively in Building Robust AI Applications with LangChain4j Guardrails and Spring Boot, complete with plenty of code examples. Microsoft’s strategic partnership with LangChain4j has resulted in extensive security audits, making it truly enterprise-ready. However, the real showstopper is Rod Johnson’s Embabel agent framework, which he describes as “the most significant project since Spring Framework itself.” It brings goal-oriented action planning from gaming to create deterministic, explainable AI agents with strong typing. What’s equally exciting is seeing the integration of LangChain4j with MicroProfile and Jakarta specifications take shape, bringing AI capabilities to enterprise Java standards. \nTo help developers navigate this landscape, my friend Shaaf Syed and I created the llm-jakarta GitHub project, which provides a progressive learning path through Jakarta EE and LLM integration, comprising 10 practical steps. We plan to add more examples combining Spring Boot and Quarkus soon. \nFor those interested in GPU acceleration, I recommend checking out GPULlama3.java Brings GPU-Accelerated LLM Inference to Pure Java, which showcases how Java can leverage hardware acceleration for AI workloads.\nCloud providers are fully committed to Java’s AI future. Oracle launched generative AI with LangChain4j integration, and Google released their Agent Development Kit for Java, both of which are crucial for adopting modern AI features. Microsoft’s comprehensive Java and AI strategy includes native integration with Azure. \nI’ve been experimenting with these features extensively, documenting my findings in my newsletter, The Coding Café, where I share practical experiments, such as building FormPilot and creating an AI-powered flight tracker. Join me as we explore this exciting frontier where Java’s enterprise strengths meet cutting-edge AI capabilities!\nJava News\nCheck out the recent Java news: \nJava News Roundup 1, 2, 3, 4\nJava 25 is ALSO no LTS Version – Inside Java Newscast #94\nJava GPGPU Enablement: Are We There Yet?\nJava Gets a JSON API – Inside Java Newscast #95\n\n\n\n\nHere are the JEPs targeted to JDK 25: \nJEP 515: Ahead-of-Time Method Profiling\nJEP 518: JFR Cooperative Sampling\nJEP 520: JFR Method Timing & Tracing\nJava Tutorials and Tips\nLearn new things from our selection of Java tutorials and tips: \nA Bootiful Podcast: Dr. Heinz Kabutz, a legendary Java Champion, teacher, and author of the Java Specialists newsletter!\nJava Regex: Dynamic Replacements with Lambda Expressions\nJava Virtual Threads in Action: Optimizing MongoDB Operation\nModule Import Declarations: No More Import Hell \nBest of Java Feature Face-Off – Celebrating 30 Years of Java: The Programming Language That Changed the World\nMarshalling: Data-Oriented Serialization\nThe Java Ecosystem Remains Ever-Green By Continuously Adapting to Developers’ Needs\nA Sneak Peek at the Stable Values API\nJust Be Lazy\nJava 22 to 24: Level up your Java Code by embracing new features in a safe way \nFrom Async/Await to Virtual Threads \nEpisode 39 “Deprecations & Removals” with Stuart Marks \nA Bootiful Podcast: José Paumard, Java developer advocate and professor \nSix Months of Enterprise Java and Quarkus and What Comes Next \nA Sneak Peek at the Stable Values API \nJava Security Evolution – Out with the Old, In with the New \nKotlin Corner\nDon’t miss these Kotlin updates: \nTrying to typeclass in Kotlin\nKotlin adoption inside ING, five years later\nCase Study: Why Kakao Pay Chose Kotlin for Backend Development\nKodee’s Kotlin Roundup: A Carefully Curated June Edition\nModular Ktor: Building Backends for Scale\nWhen Tool-Calling Becomes an Addiction: Debugging LLM Patterns in Koog\nShip, Share, and Win: The Kotlin Multiplatform Award at Shipaton 2025\nKoog: Building and Scaling AI Agents – Join Our Livestream Series\nAI\nStay up to date with AI news and insights: \nMake Your Ideas Clickable With Kineto by JetBrains\nGoogle Launches Gemini CLI: Open-Source Terminal AI Agent for Developers\nEffective Practices for Coding with a Chat-Based AI\nAI Agents & LLMs: Scaling the Next Wave of Automation\nHugging Face Launches Reachy Mini Robots for Human-Robot Interaction\nThe Great Data Reimagination: From Static to Agile in the AI Era\nAI Agents, the New Frontier for LLMs\nBuilding a Product-First Engineering Culture in the Age of AI\nMastering agentic workflows with ADK for Java: Sequential agents\nRobust AI Applications with LangChain4j Guardrails and Spring Boot \nGenerative AI in software and essaying\nWhy AI Agents as Your Team Should Be Your Next Learning Move\nSmall Models, Big Impact: Why JetBrains is Betting on Focal LLMs\nThe Future of AI in Software Development\nWhat the Google x JetBrains Hackathon Tells Us About the Future of AI at JetBrains\nLanguages, Frameworks, Libraries, and Technologies\nRead about the most influential technologies and frameworks in the industry: \nThis Week in Spring 1, 2, 3, 4\nAccidental Time Travel with Wiremock, SimpleDateFormat and Fractional Seconds\nSpring Debugger 🚀 Instantly Fix Spring Boot Errors & Debug Everything On the Fly!\nSpring Debugger: A New Way To Demystify Spring Boot’s Magic by Marco Behler @ Spring I/O 2025\nTesting Java Applications with WireMock and Spring Boot\nData Modeling for Java Developers: Structuring With PostgreSQL and MongoDB\nAdvanced RAG — Hypothetical Question Embedding\nBuilding a Spring Boot CRUD Application Using MongoDB’s Relational Migrator\nFrom C to Rust: Inside Meta’s Developer-Led Messaging Migration\nHow Pair Programming Enhanced Development Speed, Focus, and Flow\nA Bootiful Podcast: API oracle Arjen Poutsma\nGetting Started With Scala\nHow to Make a RAG Application With LangChain4j\nGit default options \nSpring Cloud Stream: Event-Driven Architecture – Part 1\nImproving the prompt to the AI to get better code\nConferences and Events\nVisit these Java events in August and watch some helpful recordings: \nJVM Language Summit – Santa Clara, CA, USA, August 4–6\nJCrete – Crete, Greece, August 4–8\nSpringOne – Las Vegas, NV, USA, August 25–28\nIntelliJ IDEA Conf 2025 – Check out the full playlist with the talks\nCulture and Community\nBe a great leader and a perfect team player: \nA First-Timer’s Guide to Curating a Technical Conference Track\nTrust-first Leadership and Building Great Teams\nFrom Junior to Staff and beyond: Lessons Learned\nWhy Mirroring Production in Dev Helps You Avoid Costly Mistakes\nWelcoming The Next Generation of Programmers \nLeading your engineers towards an AI-assisted future\nAnd Finally…\nDon’t miss the most important updates from the IntellIJ IDEA team: \nSpring Debugger: Working With Dynamic Database Connections Just Got Simpler\nIntelliJ IDEA Moves to the Unified Distribution\nIntelliJ IDEA 2025.2 Beta: EAP Closure and Our New Approach to Release Updates\nThat’s it for today! We’re always collecting ideas for the next Java Annotated Monthly – send us your suggestions via email or X by August 20. Don’t forget to check out our archive of past JAM issues for any articles you might have missed!",
        "dc:creator": "Irina Mariasova",
        "content": "Welcome to this month’s Java Annotated Monthly – your pit stop for all things related to Java, Kotlin, frameworks, and the ever-shifting tech scene. From helpful reads to red-hot takes, we’ve lined up a range of articles for curious devs and ambitious teams. But wait, there&#8217;s more! As always, our AI corner is here, and [&#8230;]",
        "contentSnippet": "Welcome to this month’s Java Annotated Monthly – your pit stop for all things related to Java, Kotlin, frameworks, and the ever-shifting tech scene. From helpful reads to red-hot takes, we’ve lined up a range of articles for curious devs and ambitious teams. But wait, there’s more! As always, our AI corner is here, and […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=589949",
        "categories": [
          "news",
          "ai",
          "java",
          "java-annotated",
          "java-annotated-monthly",
          "kotlin",
          "spring",
          "spring-debugger"
        ],
        "isoDate": "2025-08-06T11:17:24.000Z"
      },
      {
        "creator": "Dmitriy Smirnov",
        "title": "What’s Fixed in IntelliJ IDEA 2025.2",
        "link": "https://blog.jetbrains.com/idea/2025/08/whats-fixed-intellij-idea-2025-2/",
        "pubDate": "Wed, 06 Aug 2025 10:39:05 +0000",
        "content:encodedSnippet": "Welcome to the first-ever standalone What’s Fixed overview of an IntelliJ IDEA release!\nWe are always working hard to make the IDE even more stable, reliable, and enjoyable to use. In previous releases, information about this work was blended into the What’s New content, making it very long and sometimes hard to grasp. To address this issue, we’ve decided to focus the What’s New only on the most impactful and noticeable changes and to introduce a dedicated What’s Fixed article that focuses on the stability and quality improvements.\nThe key areas we have been working on in this release are:\nSpring support\n\nKotlin support in Spring projects\nSpring Security and Spring Web\nRemote development\nSupport for WSL\nKotlin K2 mode\nKotlin Notebook\nMaven execution\nCloud tooling\nPerformance\nBut that’s not everything. For the full list of fixes and improvements, please refer to the release notes. \nImproved Kotlin support for Spring projects\nWith Kotlin proving itself as a good fit for the Spring Framework, more and more people are using it in Spring projects. To deliver the best developer experience, we formed a partnership between Kotlin and Spring, and we are actively improving IntelliJ IDEA’s Kotlin-Spring support. Version 2025.2 brings:\nLive templates and context menu actions for creating Spring beans quickly, along with improvements to the Logical structure view to make understanding the relations between application components easier.\nSmarter bean support: No more false injection points for constructor parameters for @SpringBootTest or for parameters with defaults, and improved handling of @ConditionalOnProperty beans.\nConfiguration made clear: The ability to go from @ConfigurationProperties to YAML or properties with a click, default values in code completion, and full support for nested properties.\nSpring MVC improvements: An easier experience with path variables in request handlers, thanks to clear feedback when something doesn’t match.\nSpring Data fixes: Better repository method completion for is properties, as well as cleaner support for varargs, projections, and named queries.\nSpring Framework support\nSpring Framework support is a key focus area for IntelliJ IDEA. In addition to new functionality such as Spring Debugger, we continue to enhance existing features.\nIn this release, we’ve resolved a couple of minor but frustrating issues related to rule parsing in Spring Security:\nCustom login and logout URLs are now processed correctly. \nComplex security configurations involving multiple role assignments for a single endpoint are now properly parsed.\nWe’ve also enhanced support for the widely used Spring Web library. URL references – especially in MockMvc tests – are now properly recognized and autocompleted.\nRemote development\nRemote development – connecting to a powerful remote host where the IDE runs from a thin frontend client – is becoming the norm, with many enterprises relying on it.\nWe are fully committed to making the remote development experience in IntelliJ IDEA equal to the local one. While it has proven to be a hard endeavor for such a complex product as IntelliJ IDEA, and achieving this goal is taking time, version 2025.2 marks a huge step in this direction:\nThe editor is now as responsive when working remotely as it is in a local setup.\nThis is also true for the Search Everywhere, Find in Files, and Git Branches popups.\nThe debugger has been reworked so that its backend is isolated from its frontend, making debugging work natively.\nPlugins and settings are properly synchronized between the client and host.\nLast but not least – remote development connections are now available directly in the Toolbox app, with support for all OS and OpenSSH connections. And you know what? They are at least 1.5x faster!\nFor more details, refer to this blog post.\nSupport for WSL\nThe majority of our users are on Windows, which is known to have some performance limitations and specific toolchains. That is where WSL comes in handy, and roughly one out of every five Windows users works with WSL eventually.\nIntelliJ IDEA has offered WSL support for some time. However, the way we chose to provide the integration proved unscalable and did not work well for large projects – with issues ranging from performance problems to the inability to run or even open projects.\nTo ensure you can stay productive regardless of where your project is, we started a rework of the WSL integration from the ground up. The IntelliJ Platform team created a new API that dramatically reduces communication overhead between the IDE and WSL and allows you to work with WSL projects natively as though they were in the same system as the host IntelliJ IDEA – without needing to spin up a full backend inside WSL.\nWhile this is still a work in progress, we have migrated significant parts of the integration to this new API. As a result, in 2025.2:\nMaven and Gradle projects can be reliably built and tested, with proper JDK detection and better overall performance.\nYou now have a consistent experience with application servers, whether you’re running Tomcat or WildFly servers locally or on WSL.\nFurther improvements to Kotlin K2 mode\nK2 mode, the new default implementation of Kotlin support that improves Kotlin code analysis stability and overall performance, continues to evolve. In this release, we’ve:\nProvided support for Kotlin 2.2 features.\nImproved the performance of code completion.\nAdded type-smart completion support. \nAdded new inspections with corresponding coroutine-specific quick-fixes and refactorings, like Convert Enum to Sealed Class, Extract Interface, Rearrange Code, and Create Test and Navigate for files and functions.\nResolved several false-positive errors in inspections.\nImproved the reliability of Kotlin script execution. \nLearn more about the state of K2 mode in our recent blog post.\nQuality upgrades for Kotlin Notebook\nKotlin Notebook is a go-to tool for performing ad hoc and prototyping tasks, presenting, writing documentation, and visualizing data, all while enjoying access to your project context and easy dependency management. Since its recent release, interest in it has been growing, and we’ve received a lot of feedback that we are now addressing, focusing on stability and the editing experience.\nAI Assistant cells now allow you to choose a model, view the prompt history, and get automatic suggestions.\nIncorrect syntax highlighting has been fixed.\nDependency management has been improved.\nKotlin intentions and inspections have been added to make the editing experience close to what you get in a regular .kt file. \nMaven execution\nMaven integration is used by half of our users. Historically, IntelliJ IDEA has additional configuration layers on top of Maven, and while they bring speed and control, some differences between execution from the IDE and from the CLI could occur. \nOne of the common reasons for such problems was that the specific environment configuration – the .m2/settings file, .mavenrc, or environment variables – was not properly inherited. Starting from 2025.2, IntelliJ IDEA starts Maven goals in such a way that the environment is fully respected.\nThanks to this change, it is now possible to use the Maven Daemon for goal execution. If you have one installed, specify it as a Maven home path in File | Settings | Build, Execution, Deployment | Build Tools | Maven, and all goals will be run using it, speeding things up a bit and reducing resource usage.\nProject sync and goal execution now also support plugins that supply custom M2E lifecycles, for example, Byte Buddy. When such plugins are present, the required pre-build and post-build steps will be configured and executed as necessary.\nCloud tooling\nInteraction with cloud services is now a major part of software development workflows. This includes the building, deployment, and sometimes managing remote environments. Terraform and Kubernetes are key tools in these scenarios, which is why they are our focus areas.\nFor Terraform, the 2025.2 update brings: \nBetter support for provider-defined functions:\n\nCorrect syntax highlighting.\nQuick navigation to provider definitions. \nOn-hover documentation.\nDefault code formatter.\nAuto-completion for object variables. \nSpecific support for the Keycloak provider.\nSupport for resources in Google Cloud Beta.\nAbility to use for_each in import blocks.\nAccurate binary detection on Windows.\nTerraform file recognition.\nFor Kubernetes, there are: \nImproved port-forwarding with automatic suggestions for ports and real-time checks for availability.\nBetter performance when working with large log files.\nMore information about pods.\nAuto-marking of the active cluster.\nOn top of that, this update improves the GitLab CI integration with: \nSmarter support for CI language variable expressions.\nRich code completion. \nOn-hover documentation. \nSupport for injecting shell code directly into your pipelines.\nDebugger\nDebugging and profiling are essential tools for developing high-quality software, and we strive to make sure that IntelliJ IDEA’s debugger remains best in class. On top of the huge rework to provide a native debugging experience when working remotely, we’ve also fixed issues and provided additional capabilities for existing use cases.\nYou can now evaluate code on any application pause during execution, not just at breakpoints.\nThe Analyze Stack Trace or Thread Dump action can now analyze outputs from the jstack and jcmd tools, including in the new JSON format.\nThe Collect Thread Dump action now works with the Eclipse OpenJ9 JVM.\nGraalVM debugger\nCompiling JVM applications to native code significantly reduces CPU and memory usage, but debugging native images remains challenging. In this release, we’ve improved the native image debugger:\nVariable rendering provides richer information, for example, full object content and details about proxy objects.\nExpression evaluation has been enhanced, making reflection calls such as clazz.getMethod(“myMethod”).invoke(instance) work correctly. \nProfiler \nThe profiling experience depends on the Java version, and there used to be cases when it didn’t work with Java 24 and the upcoming Java 25. We fixed the failures and implemented support for new language features. You can now reliably profile your application on any Java version and also easily integrate Async-Profiler 4 into your workflow.\nPerformance\nTerminal\nIn 2025.2, we’ve enabled the reworked terminal for all users. This change brings significant improvements in rendering and overall terminal performance. For bash and zsh, it also brings some minor visual changes, but without compromising the shells’ behavior. \nWorking with data sources\nWhen working with large databases, the IDE used to load the entire schema, which produced overhead and was rather slow. Now, PostgreSQL and Microsoft SQL Server are introspected by levels, so only specific parts of the schema are loaded, reducing this overhead.\nPostgreSQL users also benefit from smart refresh, which updates only the objects affected by DDL changes.\nDeveloper experience\nWe have also invested effort into small UX improvements, especially in areas related to reading code. For example, we’ve reworked the Parameter Info popup to make it cleaner, more readable, and easier to use across all supported languages.\nThat’s it for now \nLet us know what you think about the fixes and priorities in this release. Your feedback helps us steer the product so it works best for you.\nUpdate to IntelliJ IDEA 2025.2 now and see how it has improved. Don’t forget to join us on X, Bluesky, or LinkedIn and share your favorite updates. \nThank you for using IntelliJ IDEA!",
        "dc:creator": "Dmitriy Smirnov",
        "content": "Welcome to the first-ever standalone What’s Fixed overview of an IntelliJ IDEA release! We are always working hard to make the IDE even more stable, reliable, and enjoyable to use. In previous releases, information about this work was blended into the What’s New content, making it very long and sometimes hard to grasp. To address [&#8230;]",
        "contentSnippet": "Welcome to the first-ever standalone What’s Fixed overview of an IntelliJ IDEA release! We are always working hard to make the IDE even more stable, reliable, and enjoyable to use. In previous releases, information about this work was blended into the What’s New content, making it very long and sometimes hard to grasp. To address […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=590172",
        "categories": [
          "news",
          "releases",
          "2025-2",
          "intellij-idea",
          "intellij-idea-2025-2"
        ],
        "isoDate": "2025-08-06T10:39:05.000Z"
      },
      {
        "creator": "Jakub Chrzanowski",
        "title": "Kotlin Notebook Meets IntelliJ Platform: Advancing IDE Plugin Development",
        "link": "https://blog.jetbrains.com/platform/2025/08/kotlin-notebook-meets-intellij-platform-advancing-ide-plugin-development/",
        "pubDate": "Wed, 06 Aug 2025 10:32:10 +0000",
        "content:encodedSnippet": "The value of extensibility\nThe ability to extend and customize software, from game mods to browser extensions, gives users a sense of freedom and the chance to bring their ideas to life. JetBrains IDEs already provide this sense of freedom through their support for plugins.\nFor some time now, creating plugins for JetBrains IDEs has been possible, but getting started with these sorts of projects can be intimidating. Navigating documentation, project templates, IntelliJ Platform dependencies, and Gradle configurations can be overwhelming for those wanting to experiment and test their ideas in real-world scenarios. Luckily, there’s now a more efficient option!\nIntroducing Kotlin Notebook\nKotlin Notebook is an interactive platform for data analysis, visualization, and prototyping with Kotlin. Like Jupyter Notebook, it provides a robust environment for data scientists, engineers, and researchers to explore and showcase their work within a dynamic, executable document. It combines Kotlin’s capabilities with the interactiveness of notebooks, allowing you to write and run code while seeing the results and visualizations in the same environment. This encourages an iterative workflow, boosting productivity and collaboration on data projects.\nBuilding on the Kotlin Notebook plugin, we have started exploring how to connect it with the IntelliJ Platform. This enables the direct execution of IntelliJ Platform code from a notebook file within the active IDE runtime. The iterative workflow of Kotlin notebooks allows you to brainstorm, build, and test plugin features faster. The integration with the IntelliJ Platform makes moving the finished code into your plugin easy.\nThis initial idea has developed into a strong integration, and as of the 2025.2 release, the functionality is now available for use.\nGetting started: A practical guide\nTo get started, create a new Kotlin notebook either as a new file in your project or as a scratch file, using ⌘⇧N on macOS or Ctrl+Shift+N on Windows/Linux.\nNotebooks are based on the concept of cells. To start using this integration, switch to Run in IDE Process mode, create a new code cell, and declare:\n%use intellij-platform\nDue to the technical issues on Windows, it’s recommended to explicitly request the latest available version until the IntelliJ IDEA 2025.2.1 is released using:\n%useLatestDescriptors\n%use intellij-platform\nOnce you do this, the necessary IntelliJ Platform libraries will be loaded into the notebook’s classpaths, making them available for import in the subsequent cells.\n\nCore features\nUI rendering made simple\nThe ability to run code within the same IDE environment removes the need to build a full plugin project to test UI components. The runInEdt {} The helper ensures that the code runs on the Event Dispatch Thread (EDT), catching any exceptions and showing them below your cell.\n\nReturning UI elements as a response when working with the Kotlin UI DSL or standard Swing components renders them immediately. All rendered components stay fully interactive.\n\nResource management with the Disposer\nThe integration uses the Disposer mechanism available in the IntelliJ Platform. A dedicated global notebookDisposable variable allows for registering and later disposing of specific notebook elements, such as extensions, listeners, actions, or UI components. This ensures the IDE manages the lifetime of your objects when you close the project or restart the notebook.\n// Register something that needs cleanup\nDisposer.register(notebookDisposable, myDisposable)\n\nDisposer.register(notebookDisposable) {\n  // Cleanup components directly\n}\n\n\n\n\n\nLoading plugins\nWhen you integrate your notebook with the IntelliJ Platform, only the core platform is initially loaded into the classpath, similarly to when you’re working on a standalone plugin. However, you may need to depend on and use other plugins, whether bundled or installed from JetBrains Marketplace. To load plugins installed in your IDE, you must explicitly call the loadPlugins(vararg pluginIds: String) helper.\n// Load specific plugins\nloadPlugins(\"Git4Idea\", \"com.intellij.java\")\n\nExtension registration\nIn traditional plugin development, extensions are defined in the plugin.xml file. With Kotlin notebooks, you can dynamically register extensions using registerExtension(), avoiding the need for a structured plugin project.\nFor example, to register a custom ChatMessageHandler and ChatAgent for the AI Assistant plugin, you can simply run the following:\nloadPlugins(\"com.intellij.ml.llm\")\nclass MyChatMessageHandler : ChatMessageHandler {\n\n    override fun isApplicable(project: Project, kind: ChatKind, userMessage: UserMessage) = true\n\n    override fun createAnswerMessage(\n        project: Project,\n        chat: ChatSession,\n        userMessage: UserMessage,\n        kind: ChatKind,\n    ) = SimpleCompletableMessage(chat)\n\n    override suspend fun serveAnswerMessage(\n        project: Project,\n        chat: ChatSession,\n        answerMessage: ChatMessage,\n        smartChatEndpoints: List<SmartChatEndpoint>,\n    ) {\n        ChatAgent.EP_NAME.extensionList\n            .find { it.id == \"groot\" }\n            ?.serveAnswerMessage(project, chat, answerMessage)\n    }\n}\n\nregisterExtension(ChatMessageHandler.EP, MyChatMessageHandler())\nclass MyChatAgent : ChatAgent {\n\n    override val id = \"groot\"\n    override val name = \"I am Groot\"\n\n    override fun createAnswerMessage(\n        project: Project,\n        chat: ChatSession,\n        userMessage: UserMessage,\n        kind: ChatKind,\n    ) = SimpleCompletableMessage(chat)\n\n    override suspend fun serveAnswerMessage(\n        project: Project,\n        chat: ChatSession,\n        answerMessage: ChatMessage,\n    ) {\n        answerMessage as SimpleCompletableMessage\n        answerMessage.appendText(\"*I am Groot*\".privacyConst)\n    }\n}\n\nregisterExtension(ChatAgent.EP_NAME, MyChatAgent())\nSimilarly, you can register a custom UI theme as follows:\nimport com.intellij.ide.ui.UIThemeProvider\n\nval theme = UIThemeProvider().apply { \n    id = \"My Theme\"\n    path = \"Theme.json\"\n}\nregisterExtension(UIThemeProvider.EP_NAME, theme)\nThis approach allows you to experiment and test extensions instantly within the IDE runtime, streamlining development and saving time.\nExploring your IDE environment\nThe integration provides several ways to access the internal details of the currently running IDE, such as its build details and location in the file system. Exposed mechanisms such as the Plugin Manager and Plugin Repository allow for interacting with plugins available in JetBrains Marketplace, or even ones installed locally. All available variables and helper methods are documented in the relevant section in the IntelliJ Platform SDK documentation.\n// Access IDE information\nproductInfo.name        // \"IntelliJ IDEA\"\nproductInfo.version     // \"2025.3\"\nproductInfo.buildNumber // \"253.xxxx\"\n\nidePath // “/Users/hsz/Applications/IntelliJ IDEA Ultimate 2025.3 Nightly.app/Contents”\n\nide // com.jetbrains.plugin.structure.ide.Ide instance\n\n// Work with the plugin manager\npluginManager.findEnabledPlugin(PluginId.getId(\"com.intellij.java\"))\n\n// Request JetBrains Marketplace\npluginRepository.pluginManager.searchCompatibleUpdates(\n    build = \"${productInfo.productCode}-${productInfo.buildNumber}\",\n    xmlIds = listOf(“org.jetbrains.junie”),\n    channel = “default”,\n)\nOpportunities and improvements\nIntegrating Kotlin Notebook with the IntelliJ Platform represents a significant step forward for custom plugin development. With traditional barriers associated with project setup, compilation, and deployment removed, developers can now concentrate more effectively on implementing their ideas.\nWe already have great ideas for ways to improve this experience further:\nRapid prototyping of IDE features and plugins: This functionality allows for the development of features, with the potential for AI assistance in the refinement process. Once you’ve completed a scratch implementation of your plugin in your notebook file and it is ready to be adapted for use in a Plugin Template-based project, you can use Junie to convert it and give it a formal plugin structure.\nExpeditious testing of platform APIs and behaviors: The JetBrains QA teams are already using Kotlin notebooks to debug the IntelliJ Platform more quickly, achieving particular success when using them with a UI testing framework. Improving scripting and adding reusable helpers can make notebooks more adaptable and suited to this use case.\nInteractive documentation and tutorials for IntelliJ Platform development: The storytelling style of notebooks, combining runnable code snippets with explanatory comments, can create a more engaging learning experience.\nCompose/Jewel support: As development advances in this area, the ability to render Compose/Jewel components is a natural next step, mirroring the current functionality supplied by Java Swing or the Kotlin UI DSL. This can be especially useful for prototyping IDE-specific UI/UX elements, whether you’re developing plugins or working on an entire IDE based on the IntelliJ Platform.\nTake it for a spin and let us know what you think!\nFollow these simple steps to get started:\nCreate a new Kotlin Notebook.\nSwitch to Run in IDE Process mode.\nUnleash your creativity with %use intellij-platform.\nIf you’d like to share feedback, please visit the JetBrains Platform forum, where we can discuss any challenges and ideas for improving this integration. You can also join the #notebooks public Slack channel for discussions and questions.\nThe IntelliJ Platform integration and the examples featured in this article are now publicly accessible on GitHub, along with a dedicated section in the IntelliJ Platform SDK documentation. We welcome pull requests with ideas to improve the user experience.\nHappy hacking!\nJakub",
        "dc:creator": "Jakub Chrzanowski",
        "content": "The value of extensibility The ability to extend and customize software, from game mods to browser extensions, gives users a sense of freedom and the chance to bring their ideas to life. JetBrains IDEs already provide this sense of freedom through their support for plugins. For some time now, creating plugins for JetBrains IDEs has [&#8230;]",
        "contentSnippet": "The value of extensibility The ability to extend and customize software, from game mods to browser extensions, gives users a sense of freedom and the chance to bring their ideas to life. JetBrains IDEs already provide this sense of freedom through their support for plugins. For some time now, creating plugins for JetBrains IDEs has […]",
        "guid": "https://blog.jetbrains.com/?post_type=platform&p=589720",
        "categories": [
          "idea",
          "intellij-platform",
          "news",
          "intellij-idea",
          "kotlin-notebook",
          "plugin-development"
        ],
        "isoDate": "2025-08-06T10:32:10.000Z"
      },
      {
        "creator": "Kseniya Starodubtseva",
        "title": "RustRover 2025.2 Is Now Available",
        "link": "https://blog.jetbrains.com/rust/2025/08/05/rustrover-2025-2-is-now-available/",
        "pubDate": "Tue, 05 Aug 2025 15:19:01 +0000",
        "content:encodedSnippet": "This version introduces major debugger enhancements, including remote and on-chip support, a new color scheme, improved borrow checker assistance, additional Rust learning resources, and more.\nDownload RustRover 2025.2\n                                                    \n\n\n\n\nRustRover goes AI\nJunie, the in-IDE coding agent, is now 30% faster, connects to external sources via MCP, and supports remote development. AI Assistant adds even smarter code completion for Rust, project rules, and enhanced offline capabilities.\nIntall Junie\n                                                    \nAll of these features are available under the JetBrains AI free subscription, which includes Junie, AI Chat, unlimited code completion, and local workflows. Cloud-based features have credit-based limits.\nInstall AI Assistant\n                                                    \nDebugger: Remote targets, on-chip debugging, and more\nYou can now run the debugger on remote targets. Just start gdbserver and set up a remote debug configuration. That’s it; you’re all set to debug. Both GDB and LLDB are supported, as well as custom GDB executables.\n\n\n\n\nYou can also use the remote debug configuration to debug embedded targets using OpenOCD.\nOther new debugger features include:\nThe ability to attach to unstarted processes\nImproved assembly support\nA parallel stacks view\nShadow variable support\nSupport for self-referential types\n\n\n\n\nLast but not least, the Windows distribution now also comes with LLDB-19 bundled and enabled by default. If you prefer, you can always switch back to LLDB-9 in the settings. Read more about debugger updates. \nNew color scheme\nWith a language as tricky as Rust, we wanted the colors and font styles to aid understanding by emphasizing important constructs and helping differentiate between elements that may look confusingly similar. And now, we are excited to present the new color scheme to you! It is enabled by default and can be adjusted for users with red-green color vision deficiency. Give it a try and let us know what you think!\n\n\n\n\nInlays for tracking implicit mutable borrows\nWe want to help you address borrow checker errors. As implicit mutable borrows and reborrows are a common source of these issues, we decided to mark them with special inlays. These make them easier to spot and may assist with troubleshooting or help you avoid errors altogether.\n\n\n\n\nSimplified module creation\nWe have added a quick way to add Rust modules. Simply select the parent module (directory or file) and then use the + menu in the Project view to add your desired module. The popup dialog will ask you to name the new module and specify whether it should be a file or a directory. RustRover will add the necessary definition for you.\n\n\n\n\nEnhanced UI for comparing mismatched types\nTypes in Rust can be complicated, especially if they are compound and nested. To make it easier to spot mismatched types, we have changed the way they are presented in the error tooltip. Hopefully, this will help you troubleshoot!\n\n\n\n\nNew to Rust? RustRover has got you covered\nFor newcomers to Rust, RustRover provides great ways to start learning. Besides the Learn Rust course by JetBrains Academy, which is based on the popular Rustlings exercises, we now also provide 100 Exercises to Learn Rust, based on a course of the same name by Mainmatter’s Luca Palmieri. Both JetBrains Academy courses provide a fun, hands-on way to learn Rust fundamentals and practice coding in a professional environment. Give it a try or, if you’re already a seasoned Rustacean, spread the word to a friend!\n\n\n\n\nRust plugin: Now free for CLion\nGood news for those who prefer coding in Rust while also having C/C++ tools at hand – the Rust plugin is now free for CLion! And with CLion now free for non-commercial use, this is a great opportunity to practice combining these stacks.\nNew Rename Cargo Package action\nFrom your feedback, we learned that RustRover needed a specific action for renaming whole packages. So, in 2025.2, we’ve added a Rename CargoPackage action. It propagates the new name to Cargo.toml and related usages. For now, the action works unless the crate name is referenced in other Cargo.toml files, but we will keep working on supporting this case too.\n\n\n\n\nRemote development updates\nFor remote development, our goal is to provide a coding experience that is just as reliable and consistent as working locally. In version 2025.2, improvements include quicker editor responsiveness, smoother debugging, and easier plugin management. Plus, JetBrains Toolbox benefits from better connection quality via Gateway, making remote development even smoother.",
        "dc:creator": "Kseniya Starodubtseva",
        "content": "This version introduces major debugger enhancements, including remote and on-chip support, a new color scheme, improved borrow checker assistance, additional Rust learning resources, and more. RustRover goes AI Junie, the in-IDE coding agent, is now 30% faster, connects to external sources via MCP, and supports remote development. AI Assistant adds even smarter code completion for [&#8230;]",
        "contentSnippet": "This version introduces major debugger enhancements, including remote and on-chip support, a new color scheme, improved borrow checker assistance, additional Rust learning resources, and more. RustRover goes AI Junie, the in-IDE coding agent, is now 30% faster, connects to external sources via MCP, and supports remote development. AI Assistant adds even smarter code completion for […]",
        "guid": "https://blog.jetbrains.com/?post_type=rust&p=588644",
        "categories": [
          "releases",
          "rustrover"
        ],
        "isoDate": "2025-08-05T15:19:01.000Z"
      },
      {
        "creator": "Pavel Sher",
        "title": "Kotlin DSL: What’s New?",
        "link": "https://blog.jetbrains.com/teamcity/2025/08/kotlin-dsl-what-s-new/",
        "pubDate": "Tue, 05 Aug 2025 13:57:48 +0000",
        "content:encodedSnippet": "In the last few TeamCity releases, we made some improvements to the Kotlin DSL. This is a summary of these enhancements.\nCustom path for Kotlin DSL files\nTeamCity has always had strict requirements regarding the directory location for Kotlin DSL files. It insisted on saving the files under the .teamcity directory, which had some drawbacks. For instance, directories starting with . are hidden by default on some operating systems. \nIt is also not very convenient to have this directory in a repository that stores DSL files only. In such cases, it would be more convenient to place all the files in the root directory instead. This would also simplify working with IntelliJ IDEA, which will be able to see the pom.xml right in the root directory and offer to open it as a Maven project.\nAll of this is possible in TeamCity since the 2024.07 version. Read more about this feature in our documentation.\nFor the sake of simplicity in the subsequent sections of this post, we’ll assume that the DSL code is stored in the .teamcity directory.\nSimplified code reuse with DSL libraries\nIf you’re employing the Kotlin DSL in several projects, you’ll notice that you’re using the same code again and again. Wouldn’t it be nice to share it somehow?\nUsually, when the need to share code arises, we recommend creating a Java library and publishing it to a Maven repository as a Maven artifact. If your company writes Java code, then these Maven repositories are likely already set up, and the process to publish new artifacts there is already familiar. \nOnce a library is published to Maven, developers can add a dependency to the DSL pom.xml file. The TeamCity server also understands these dependencies, so when it needs to generate configuration files from this DSL, it will download necessary dependencies as well.\nIf your company doesn’t have a Maven repository or if it’s too cumbersome to publish something there, TeamCity can act as a repository where you can publish your libraries with standard Maven versioning. Starting with TeamCity 2024.12, the Administration area includes a new page: DSL Libraries. This is where system administrators can manage these libraries.\n\n\n\n\nThe uploaded DSL library can then be added as a regular Maven dependency to your pom.xml.\nRead more in our documentation.\nChanges in DSL files and their impact on build reuse\nIt’s quite common to store DSL code in the main project repository in the .teamcity directory. When a new branch is created, the DSL files are also branched, allowing for running builds in branches with modified settings. However, when DSL files are stored in the same repository as the main source code, one potentially frustrating drawback emerges. \nLet’s imagine that we have a build chain of two build configurations (Run tests depends on Compile):\n\n\n\n\nSomeone then makes a commit to the .teamcity directory, which changes the settings of Run tests only. Since it’s a commit to the main repository, TeamCity computes a new revision for checkout on the agent, so when you run Run tests, it will rebuild Compile too, even though the only changes in the repository were in the DSL files.\nExperienced TeamCity users remember that there are checkout rules that allow excluding directories from checkout on the agent, and they would try to add something like this to the Compile build configuration’s checkout rules:\n-:.teamcity\nBut this would not work because internally, TeamCity always adds +:.teamcity to ensure that it doesn’t miss a revision that affects the build configuration settings.\nStarting with 2025.07, this no longer happens. Now, if .teamcity is excluded via checkout rules, it won’t be checked out on the agent and the build revision won’t be affected by commits to this directory. This allows reusing Compile builds from our example, where changes in the DSL do not affect their settings. At the same time, if DSL changes affect the build settings, a new build will be started.\nSo far, so good, but if checkout rules exclude the .teamcity directory, TeamCity will hide any changes from this directory in the builds of this build configuration. This is not ideal, as it can complicate the analysis of the build problems. \nFortunately, to bring back the changes, you just need to enable the Show settings changes in builds option on the versioned settings page:\n\n\n\n\nRead more about all the build reuse conditions in our documentation.\nMore precise changes of DSL settings in builds\nWith the Kotlin DSL, it’s not easy to determine whether a change in a .kt or .kts file actually affects a build configuration’s settings. As the DSL can be considered a collection of Kotlin files, there’s no correspondence between a Kotlin file name and a specific build configuration. \nMoreover, the entire project can be generated by a single settings.kts file. Without actually executing the DSL code, how would you understand that changes in a .kt file affect the settings of a particular build configuration?\nYou may ask why this is important. We’ve already mentioned that if the Show settings changes in builds option is enabled, the builds start showing all the changes made in the DSL on the Changes page, or in the Changes popup. These changes usually have a special icon to distinguish them from other commits:\n\n\n\n\nGiven that it is not possible to determine which DSL changes affect a specific build configuration’s settings simply by looking at the file names, TeamCity simply shows all the changes related to the .teamcity directory in all of the project’s build configurations. This can be rather distracting and was often the reason why the Show settings changes in builds option remained disabled.\nHowever, TeamCity 2025.03 introduced a significant improvement in this area. If a commit affects the .teamcity directory, then it will initially be shown as pending in all of the project’s build configurations. \nThen, when the actual builds are triggered, and the DSL is executed, TeamCity will perform an additional analysis of the settings produced by the DSL execution. If the settings generated for a build configuration are the same as in previous builds, then the DSL commits will be hidden.\nIncremental compilation of the Kotlin DSL (teamcity-configs:generate)\nIf you’re using the Kotlin DSL, you can run the DSL locally with the following command:\nmvn teamcity-configs:generate.\nThis command executes a task that is provided by the TeamCity Kotlin DSL plugin for Maven. The task will first compile the Kotlin files, then execute them, and finally generate the XML files.\nDuring the compilation phase, the task always recompiles everything, which can be time-consuming, especially if there are thousands of .kt files. Starting with 2025.07, you can enable Kotlin incremental compilation in your pom.xml file:\n<project>\n  …\n  <parent>\n    <groupId>org.jetbrains.teamcity</groupId>\n    <artifactId>configs-dsl-kotlin-parent</artifactId>\n    <version>1.0-SNAPSHOT</version>\n  </parent>\n\n  <properties>\n    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>\n  </properties>\n\n  <repositories>\n    <repository>\n…\n</project>\nThe TeamCity Maven plugin will interpret this property and enable incremental Kotlin compilation. If properties are configured correctly, you should see the following output:\n[INFO] Generate TeamCity configs in <path to project>/target/generated-configs, format kotlin, dslDir: <path to project>\n\n[INFO] Kotlin incremental compilation enabled, compiler caches directory: <path to project>/target/kotlin-dsl-ic\nOur measurements show that incremental compilation can reduce the execution time of this task by as much as 50%!\nAdding build caches into the mix\nWe’ve improved the performance when locally generating TeamCity settings, but if you have a big DSL project where incremental compilation makes a difference, chances are you’re also running the same teamcity-configs:generate on your agents. There is often a validation build that is executed before merging changes to the default branch. \nEnabling incremental compilation can speed up this build, but only if it runs mostly on the same agents. This is because the Kotlin compiler needs caches produced by the previous compilation for incremental compilation to work. If the build runs on different agents, the caches will likely be empty, providing no benefit.\nFortunately, TeamCity comes with handy build caches. If you haven’t heard about this feature, now is a good time to try it out! \nThe typical build cache configuration in the DSL for our use case looks like this:\nfeatures {\n\n  buildCache {\n    name = \"DslCompilation-%teamcity.agent.jvm.os.name%\"\n    rules = \"\"\"\n        target/kotlin-dsl-ic\n        .m2\n    \"\"\".trimIndent()\n  }\n}\nThe corresponding Maven build step is defined as:\nsteps {\n  \n  maven {\n    goals = \"teamcity-configs:generate\"\n    runnerArgs = \"\"\"-Dmaven.repo.local=%teamcity.build.checkoutDir%/.m2\"\"\"\n    localRepoScope = MavenBuildStep.RepositoryScope.MAVEN_DEFAULT\n  }\n}\nNote that the cache name includes %teamcity.agent.jvm.os.name%. This allows using different caches for agents on different operating systems, which is important because the Kotlin compiler stores some OS specific information in the cache. Caches produced by the Windows agent won’t be used by the Kotlin compiler running on Linux. \nThe cache also includes the .m2 directory, allowing you to avoid re-downloading Maven dependencies again during the build.\nDue to additional overhead, like source code checkout or cache download, achieving a 50% performance boost with build caches on a freshly started TeamCity agent can be challenging. However, it’s still possible to experience a 20–30% improvement, which can be significant for large projects.\nConclusion\nFor your convenience, here’s a summary of the features discussed in this blog post alongside the corresponding TeamCity version in which they were introduced:\n\nCustom path to Kotlin DSL files2024.07\nDSL libraries2024.12\nMore precise changes in builds2025.03\nBetter reuse of builds2025.07\nIncremental Kotlin compilation for teamcity-configs:generate2025.07\nBuild caches2023.11\n\n\n\n\n\nWe hope that these features improve your day-to-day work as a Kotlin DSL developer. We look forward to your feedback, especially if you encounter any difficulties. Please share your experience in the comments below!\nAs always, happy building!",
        "dc:creator": "Pavel Sher",
        "content": "In the last few TeamCity releases, we made some improvements to the Kotlin DSL. This is a summary of these enhancements. Custom path for Kotlin DSL files TeamCity has always had strict requirements regarding the directory location for Kotlin DSL files. It insisted on saving the files under the .teamcity directory, which had some drawbacks. [&#8230;]",
        "contentSnippet": "In the last few TeamCity releases, we made some improvements to the Kotlin DSL. This is a summary of these enhancements. Custom path for Kotlin DSL files TeamCity has always had strict requirements regarding the directory location for Kotlin DSL files. It insisted on saving the files under the .teamcity directory, which had some drawbacks. […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=589734",
        "categories": [
          "kotlin",
          "news"
        ],
        "isoDate": "2025-08-05T13:57:48.000Z"
      },
      {
        "creator": "Stanislav Garkusha",
        "title": "Join the Livestream: How to work with SQL and Databases in JetBrains IDEs",
        "link": "https://blog.jetbrains.com/datagrip/2025/08/05/join-the-livestream-how-to-work-with-sql-and-databases-in-jetbrains-ides/",
        "pubDate": "Tue, 05 Aug 2025 13:50:39 +0000",
        "content:encodedSnippet": "We invite you to take part in our livestream How to Work With SQL and Databases in JetBrains IDEs, taking place on Thursday, August 14, at 4:00 pm UTC (6:00 pm CET / 12:00 pm ET).\n\n\n\nRegister\nDate: August 14, 2025\nTime: 4:00 pm UTC (6:00 pm CET / 12:00 pm ET).\nIn this demo session, we’ll show you how to write SQL queries and work with databases in JetBrains IDEs. We’ll explore a range of use cases for embedded database functionality, from simple queries to more advanced tasks.\nWe’ll cover:\nCreating simple queries: using various types of code completion and code snippets, expanding wildcards, and working with subqueries.\nUsing the data editor: editable result sets, bulk submit and multiple edit functionality, transposing data, and comparing data.\nImporting and exporting data: importing from CSV files, exporting to JSON or UPDATES and INSERTS, and exporting to other databases.\nNavigation: searching for database objects, data, SQL code, files, settings, and more.\nJetBrains AI: text-to-SQL, Fix with AI, and schema-aware AI chat\nOther features: user parameters, the diff tool, and query history.\n\n\n\n\nYou will have a chance to ask questions, and a recording of the livestream will be posted to our JetBrains For Data YouTube channel after the event.\nRegister now to receive notifications so you don’t miss the chance to take part.\nFor product news and details about upcoming livestreams, follow DataGrip on X (formerly Twitter) or keep an eye on our Blog.\nMaxim Sobolevskiy\nOriginally from Tashkent, Uzbekistan, Maksim Sobolevskiy now lives in Amsterdam, the Netherlands. He has worked as a PMM at JetBrains since 2015, where he has also been the team lead for DataGrip since 2020. Previously, he was an SQL developer for 10 years, working for the charity organization Foundation Source and the National Bank of Uzbekistan.",
        "dc:creator": "Stanislav Garkusha",
        "content": "We invite you to take part in our livestream How to Work With SQL and Databases in JetBrains IDEs, taking place on Thursday, August 14, at 4:00 pm UTC (6:00 pm CET / 12:00 pm ET). Register Date: August 14, 2025 Time: 4:00 pm UTC (6:00 pm CET / 12:00 pm ET). In this demo [&#8230;]",
        "contentSnippet": "We invite you to take part in our livestream How to Work With SQL and Databases in JetBrains IDEs, taking place on Thursday, August 14, at 4:00 pm UTC (6:00 pm CET / 12:00 pm ET). Register Date: August 14, 2025 Time: 4:00 pm UTC (6:00 pm CET / 12:00 pm ET). In this demo […]",
        "guid": "https://blog.jetbrains.com/?post_type=datagrip&p=589272",
        "categories": [
          "livestreams",
          "databases",
          "sql"
        ],
        "isoDate": "2025-08-05T13:50:39.000Z"
      },
      {
        "creator": "Hanna Yakush",
        "title": "PhpStorm 2025.2 Is Now Available",
        "link": "https://blog.jetbrains.com/phpstorm/2025/08/phpstorm-2025-2-is-now-available/",
        "pubDate": "Tue, 05 Aug 2025 13:45:17 +0000",
        "content:encodedSnippet": "Along with making Laravel Idea free for PhpStorm users, this release brings improvements to the remote development experience, JetBrains AI tools, and more.\nDownload PhpStorm 2025.2\n\n\n\n\nJunie coding agent\nMCP support \nSupport for the Model Context Protocol (MCP) allows you to connect Junie to external sources like databases, file systems, and APIs. You can now add or edit the configuration for MCP servers at a global or project level in the IDE settings (Tools | Junie | MCP Settings).\n\n\n\n\nWSL 2 support\nJunie can now work with projects that are located under the WSL 2 file system  (\\\\wsl$\\... or \\\\wsl.localhost\\.. ) and opened in PhpStorm directly (via File | Open).\n\n\n\n\nRemote development with Junie\nWith support for remote development environments, you can use the Junie plugin even if the IDE’s backend is running on a remote host.\n30% speed increase\nJunie can execute simple assignments, but it really shines when handling more complicated tasks, now with an up to 30% increase in prompt processing speed. \nUse Code mode to let Junie work on tasks autonomously, or switch to Ask mode to brainstorm about new features or solutions without making changes to your codebase.\nTry Junie\nJunie on GitHub EAP\nWe are excited to announce the opening of the EAP program for Junie on GitHub! \nTriggered from GitHub issues or issue comments, the Junie agent on GitHub has increased processing power and can handle multiple tasks simultaneously and without requiring the user to open the IDE.\nSign up to join the Early Access Program and be the first to try Junie on GitHub.\nJoin the waitlist\nAI Assistant\nJetBrains AI Assistant has also got a major upgrade. Whether you’re working online or offline, AI Assistant is now more capable, more flexible, and still free to use. \nAll JetBrains AI features are available for free, with unlimited code completion, powerful local workflows, and limited cloud-based features.\nHere’s what’s new:\nSmarter completion across all supported languages, now with support for SQL, YAML, JSON, Markdown, and more.\nExpanded offline flexibility – connect any OpenAI-compatible model server like llama.cpp or LiteLLM.\nJetBrains AI Assistant now supports image attachments in the chat when using Anthropic and OpenAI models.\nGet started\nPHP\nRemote development in PhpStorm, now out of Beta\nPhpStorm’s remote development functionality is out of Beta in version 2025.2, which means the experience of working with remotely hosted PhpStorm projects is steadily approaching that of working with source code locally. The removal of the Beta label comes along with quality improvements to:\nRemote editing. \nTool windows and dialogs, including the terminal, the VSC widget, Search Everywhere, and Find in Files.\nSupport for Windows host machines via the JetBrains Toolbox App.\n\n\n\n\nReworked PHP Include Path dialog\nIn PhpStorm 2025.2, we’ve reworked the Include Path settings dialog to make it easier to exclude PHP library folders from indexing by improving navigation and search.\nDespite being excluded from error checks, PHP libraries are still indexed. On the Include Path settings page, you can exclude specific folders within PHP libraries from indexing.\nNow the Include Path list shows only parent directories by default, and to exclude a specific child directory from indexing, you need to select its parent in the list and click the Exclude Under This Path icon on the toolbar.\n\n\n\n\nPHPUnit 12 support\nPhpStorm 2025.2 supports all the changes and deprecations introduced in PHPUnit 12. The IDE’s warnings and inspections will help you seamlessly upgrade projects to the latest version of the testing framework.\n\n\n\n\nOther improvements\nThe PHP Architecture and Robo Support plugins are now unbundled, meaning they are no longer shipped with PhpStorm out of the box. If you need project architecture inspections or the functionality of the Robo task runner, you can install these plugins from JetBrains Marketplace.\n\n\n\n\n\n\nThe class-string<T> type inference now properly displays the expected inferred type.\n\n\n\n\n\nPhpStorm 2025.2 further improves the .env file support with reference-aware renaming of nested variables.\n\n\n\n\n\nConfiguration options for PhpStorm’s built-in server, the always-running web server for static content like JavaScript, CSS, and HTML, have been moved to Tools | Web Browsers and Preview in the IDE settings.\n\n\n\n\nJavaScript and TypeScript\nExperimental TypeScript-Go language server support\nPhpStorm 2025.2 introduces experimental support for the new TypeScript-Go language server, bringing improved performance and modern architecture for TypeScript development.\nYou can enable it in your project by installing the @typescript/native-preview package as a dependency in place of typescript.\n\n\n\n\nBaseline support\nPhpStorm 2025.2 now displays Web Platform Baseline information directly in quick documentation.When you hover over a web platform API, you’ll see details about when the feature became reliably available across major browsers, based on web.dev’s Baseline data.\n\n\n\n\nBun improvements\nPhpStorm 2025.2 introduces smarter integration for Bun. When a bun.lockb or bun.lock file is present in your project, PhpStorm will automatically detect Bun and set it as the package manager. All relevant actions, such as running bun install, using context menu options for package.json, and resolving dependency suggestions, will default to Bun.\n\n\n\n\nUser experience\nParameter Info popup improvements\nPhpStorm 2025.2 introduces several improvements that make the Parameter Info popup easier to read and navigate.\n\n\n\n\nDatabases\nAbility to attach database objects to the AI chat\nThe database context you provide to the AI Assistant’s chat can now be more specific. Previously, only the whole schema could be attached. Now, you can attach the database object you need to work with – for example, a table or a view. \nTo attach a database object, type @ or # in the input field, select or type dbObject:, then select the object you want to attach from the list.\n\n\n\n\n[SQLite] WSL database file path\nPhpStorm now supports WSL file paths for SQLite database files.\nThis means that you can now access your SQLite database in WSL and work with it without the database file being locked for you. To do this, go to the Data Sources and Drivers dialog and use the following file path format: \\\\wsl$\\<os>\\home\\<username>\\<database_file_name>.sqlite. For example, \\\\wsl.localhost\\Ubuntu-24.04\\home\\john.smith\\identifier.sqlite.",
        "dc:creator": "Hanna Yakush",
        "content": "Along with making Laravel Idea free for PhpStorm users, this release brings improvements to the remote development experience, JetBrains AI tools, and more. Download PhpStorm 2025.2 Junie coding agent MCP support&#160; Support for the Model Context Protocol (MCP) allows you to connect Junie to external sources like databases, file systems, and APIs. You can now [&#8230;]",
        "contentSnippet": "Along with making Laravel Idea free for PhpStorm users, this release brings improvements to the remote development experience, JetBrains AI tools, and more. Download PhpStorm 2025.2 Junie coding agent MCP support  Support for the Model Context Protocol (MCP) allows you to connect Junie to external sources like databases, file systems, and APIs. You can now […]",
        "guid": "https://blog.jetbrains.com/?post_type=phpstorm&p=579514",
        "categories": [
          "releases",
          "2025-2",
          "release"
        ],
        "isoDate": "2025-08-05T13:45:17.000Z"
      },
      {
        "creator": "Artem Pronichev",
        "title": "GoLand 2025.2 Is Now Out!",
        "link": "https://blog.jetbrains.com/go/2025/08/05/goland-2025-2-is-now-out/",
        "pubDate": "Tue, 05 Aug 2025 12:22:27 +0000",
        "content:encodedSnippet": "GoLand 2025.2 introduces updates for working with HTTP servers, smarter inspections powered by data flow analysis (DFA), and a new non-blocking Welcome screen. This release also brings significant quality improvements to golangci-lint support, including version 2, making the integration more robust for real-time code analysis. Let’s take a closer look at all the new additions and improvements!\n\n\n\n    \nDownload GoLand 2025.2\n                                                    \nSmarter on-the-fly nil dereference detection with DFA\nGoLand 2025.2 adds interprocedural nil dereference analysis to help you catch potential issues before they cause runtime errors. The new inspections analyze how nil values move across function calls, files, and packages, and highlight risky pointer operations directly in the editor.\nYou’ll now see:\nNullability hints in quick documentation.\nWarnings for unsafe dereferences.\nA new Data Flow Analysis tab in the Problems tool window, showing the full path that leads to a nil dereference\n\n\n\n\nFaster start with the new non-blocking Welcome screen\nThe Welcome screen now opens as a tab inside the IDE instead of blocking startup. This gives you instant access to tools like the terminal, Docker, Kubernetes, the HTTP Client, and databases – no need to open a project. You can also create and edit standalone files without setting up a full workspace.\n\n\n\n\nSmarter endpoint discovery and request generation\nThe Endpoints tool window now offers improved support for modern net/http.ServeMux route patterns, including method-based and wildcard routes like GET /task/{id}/. It also displays the HTTP method next to each route for faster navigation.\nGoLand can now detect HTTP methods from:\nFunction names: r.GET(\"/path\", handler)\nMethod-prefixed strings: http.HandleFunc(\"POST /item\", handler)\nFunction arguments: r.Method(\"DELETE\", \"/item\", handler)\nChained method calls: r.HandleFunc(\"/item\", handler).Methods(\"PUT\")\nThis release also improves authority resolution for Gin and http.Server, with general refactoring to keep the system extensible.\n\n\n\n\nJunie: Your faster, smarter AI coding agent\nJunie, the coding agent by JetBrains, is available for GoLand users and has recently received several major updates to its functionality.\nJunie is a coding agent designed to help with professional tasks of any complexity. Now it’s significantly faster and includes MCP and remote development support.\nHere are the main updates: \nYour smart in-IDE coding agent is now 30% faster: we optimized Junie’s task completion speed without compromising on quality. \nMCP support is now available: the Model Context Protocol allows Junie to connect to external sources like databases, file systems, or APIs. \nRemote development is now supported in Junie: you can work remotely with your team and delegate tasks to Junie at the same time.\n\n\n\n\nUpdates for JetBrains AI Assistant\nJetBrains AI Assistant just got a major upgrade – bringing you faster and more project-aware AI assistance that is fully integrated into your development workflow. Whether you’re working online or offline, JetBrains AI is now more capable, more flexible, and still free to use.\nHere’s what’s new:\nSmarter completion across all supported languages, now with support for SQL, YAML, JSON, Markdown, and more.\nExpanded offline flexibility – connect any OpenAI-compatible model server like llama.cpp or LiteLLM.\nJetBrains AI Assistant now supports image attachments in the chat when using Anthropic models.\n\n\n\n\nInherited features from IntelliJ IDEA, WebStorm, and DataGrip\nGoLand also brings in many of the latest features from the IntelliJ Platform ecosystem. Explore what’s new in:\nIntelliJ IDEA\nWebStorm\nDataGrip\nWe’d love to hear your feedback on these new features so we can make them even better. Share your thoughts on X, leave a comment below, create an issue in our tracker, or chat with us in the #goland-gophers Slack channel.\nHappy developing!\nThe GoLand team",
        "dc:creator": "Artem Pronichev",
        "content": "GoLand 2025.2 introduces updates for working with HTTP servers, smarter inspections powered by data flow analysis (DFA), and a new non-blocking Welcome screen. This release also brings significant quality improvements to golangci-lint support, including version 2, making the integration more robust for real-time code analysis. Let’s take a closer look at all the new additions [&#8230;]",
        "contentSnippet": "GoLand 2025.2 introduces updates for working with HTTP servers, smarter inspections powered by data flow analysis (DFA), and a new non-blocking Welcome screen. This release also brings significant quality improvements to golangci-lint support, including version 2, making the integration more robust for real-time code analysis. Let’s take a closer look at all the new additions […]",
        "guid": "https://blog.jetbrains.com/?post_type=go&p=587179",
        "isoDate": "2025-08-05T12:22:27.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Paul Chapman",
        "title": "Visual Studio 2015 Retirement: Support reminder for older versions of Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/visual-studio-2015-retirement-support-reminder-for-older-versions-of-visual-studio/",
        "pubDate": "Tue, 05 Aug 2025 16:16:53 +0000",
        "content:encodedSnippet": "Support for Visual Studio 2015 will end on October 14, 2025. If you’re using an older version of Visual Studio, we want to keep you productive and secure when using Visual Studio, and strongly recommend you upgrade to Visual Studio 2022, which brings the power of Copilot to your development workflow. It also contains key productivity improvements in the editor, built-in support for Git version control and rich integration with GitHub, AI-powered code completions, and tools for .NET 8 and 9, and .NET MAUI.\nSupport Timeframe Reminders for older versions\nIf you’re still using an older version of Visual Studio, here’s a reminder of key support lifecycle dates.\nVisual Studio 2015 extended support ends October 14, 2025.\nVisual Studio 2017 version 15.9 remains in extended support until April 13, 2027. During extended support we provide fixes only for security issues. You must be using version 15.9 to receive security updates and support.\nVisual Studio 2019 version 16.11 remains in extended support through April 10, 2029. During extended support we provide fixes only for security issues. You must be using version 16.11 to receive security updates and support.\nVisual Studio 2022 version 17.14 is in mainstream support through January 12, 2027, and then transitions to extended support through January 13, 2032. Additionally, version 17.10 LTSC is supported until January 13, 2026, and version 17.12 is supported until July 14, 2026. You must be on one of these versions to receive updates and support.\nVisual Studio 2015 Retirement\nOn October 14, 2025, support will end for all Visual Studio 2015 editions, associated products, runtimes, and components, and they will no longer receive security or any other updates. These include:\nVisual Studio 2015 Enterprise, Professional, Community, Build Tools, Team Explorer, Test Professional editions, and Visual Studio 2015 Shell (Integrated and Isolated).\nVisual Studio SDK, Remote Tools, Agents, Feedback Client for Visual Studio Team Foundation Server 2015, Deployment Agent, Release Management, and Azure Tools.\nThe MSVC Tools v140 – Visual Studio 2015. When using Visual Studio 2017 or later, update any project using MSVC v140 to use the latest MSVC toolset.\nVisual C++ Redistributable for Visual Studio 2015. Update your applications to use the latest release of Visual C++ Redistributable.\nCheck out the Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nAppreciation for your feedback\nYour feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post Visual Studio 2015 Retirement: Support reminder for older versions of Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "Paul Chapman",
        "content": "<p>Support for Visual Studio 2015 will end on October 14, 2025. If you’re using an older version of Visual Studio, we want to keep you productive and secure when using Visual Studio, and strongly recommend you upgrade to Visual Studio 2022, which brings the power of Copilot to your development workflow. It also contains key [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/visual-studio-2015-retirement-support-reminder-for-older-versions-of-visual-studio/\">Visual Studio 2015 Retirement: Support reminder for older versions of Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Support for Visual Studio 2015 will end on October 14, 2025. If you’re using an older version of Visual Studio, we want to keep you productive and secure when using Visual Studio, and strongly recommend you upgrade to Visual Studio 2022, which brings the power of Copilot to your development workflow. It also contains key […]\nThe post Visual Studio 2015 Retirement: Support reminder for older versions of Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253779",
        "categories": [
          "Administration",
          "Installation and Updates",
          "Visual Studio Subscriptions",
          "Announcement",
          "lifecycle",
          "Support",
          "Visual Studio 2015"
        ],
        "isoDate": "2025-08-05T16:16:53.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "엘라스틱 Runtime field - 13th",
        "link": "https://kangmyounghun.blogspot.com/2025/08/runtime-field-13th.html",
        "pubDate": "2025-08-07T09:52:00.004Z",
        "author": "강명훈",
        "content": "<div>uri에서 변수를 추출하는 런타임 필드.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjWZxNsUqQk24QrguXpQ_0MXN1ceSON4LVBomhW4OsVAlGEd307CxoxV1Egj0MU7U-IxI_s2dui2ZdfcwH8DBjRlMYsqtwsBbREB4cG6kcs86QMoWyLdFcWwLQIv4dYfvJYnL2MyKvmKxrl3TickS636mPjAbkmXGZmPJXv5N53W5TqfXulk68GbBypv_I-/s1244/runtime_field.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1244\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjWZxNsUqQk24QrguXpQ_0MXN1ceSON4LVBomhW4OsVAlGEd307CxoxV1Egj0MU7U-IxI_s2dui2ZdfcwH8DBjRlMYsqtwsBbREB4cG6kcs86QMoWyLdFcWwLQIv4dYfvJYnL2MyKvmKxrl3TickS636mPjAbkmXGZmPJXv5N53W5TqfXulk68GbBypv_I-/s16000/runtime_field.png\" /></a></div><div><br /></div><div><span><a name='more'></a></span>이때 만든 param 필드는 2차 가공을 할 수 없다. 읽기 스키마 기반으로 동작하는 런타임 필드는 <a href=\"https://docs.splunk.com/Documentation/Splunk/9.4.2/Knowledge/Searchtimeoperationssequence#Calculated_fields\" target=\"_blank\">스플렁크의 계산 필드</a>처럼 검색 시점에 생성된다. paramlen 필드가 만들어지는 시점에 param 필드는 존재하지 않는다는 얘기.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWknw0PiqpzrTxLUc8STFR93SNduP1rP08YVuymx0j-ap2KjQ73n9Tc_PFKyvSPnx8EaZghIKkTa2U3IWoaGcQHHukuUxP0bbhBxwD-AKsl39Yr6MFqqbLVIM7JJwyfERUIve0342__mADBPGwdatHhitU-BeRNOtYrWB4PFE8XDvnamV9ahLfIbM8L1Vc/s1280/runtime_field2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"690\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiWknw0PiqpzrTxLUc8STFR93SNduP1rP08YVuymx0j-ap2KjQ73n9Tc_PFKyvSPnx8EaZghIKkTa2U3IWoaGcQHHukuUxP0bbhBxwD-AKsl39Yr6MFqqbLVIM7JJwyfERUIve0342__mADBPGwdatHhitU-BeRNOtYrWB4PFE8XDvnamV9ahLfIbM8L1Vc/s16000/runtime_field2.png\" /></a></div><div><br /></div><div>그래서 런타임 필드는 쓰기 스키마 기반 필드를 소스로 사용해야 한다.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjBfmv3X1iEkfEMv78iWAhuIZlRAwwtBV0ynWU3jvdj2u0m43C_7RV5YM9hhO2TNnWca79MAIEnQCQYi51kP0zagILWqyr9eWotVaTFBCJpPLuFO-U-GCn9eMk71nv7oFMHL1h1sAMTWFPzy9-gx7C96W5x9bd_4NEt3l9WPKYuxvmqDlwcBp9g2a3i-ESK/s1280/runtime_field3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"696\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjBfmv3X1iEkfEMv78iWAhuIZlRAwwtBV0ynWU3jvdj2u0m43C_7RV5YM9hhO2TNnWca79MAIEnQCQYi51kP0zagILWqyr9eWotVaTFBCJpPLuFO-U-GCn9eMk71nv7oFMHL1h1sAMTWFPzy9-gx7C96W5x9bd_4NEt3l9WPKYuxvmqDlwcBp9g2a3i-ESK/s16000/runtime_field3.png\" /></a></div><div><br /></div><div>그런데 REST API에서는 만들어짐<span style=\"font-size: x-small;\">(..)</span></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg690N0Xddl6Jd9qROQhpG8cKv0ATpRXF8trVDxmnM_KesAlpw6XXCPhiNqbykx7SKySa2eHSfo02v5CfjIzLB_ne3ts1wheb5X3sadX9KDXK2kNcWFKjUt_C_0EH7GoY_3KRVsCXUan1hdS3t1RRA9v1glrIXpKouDRMmPbOMONw7vqJ0Q9gNHt_OiLluc/s1170/runtime_field4.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1170\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg690N0Xddl6Jd9qROQhpG8cKv0ATpRXF8trVDxmnM_KesAlpw6XXCPhiNqbykx7SKySa2eHSfo02v5CfjIzLB_ne3ts1wheb5X3sadX9KDXK2kNcWFKjUt_C_0EH7GoY_3KRVsCXUan1hdS3t1RRA9v1glrIXpKouDRMmPbOMONw7vqJ0Q9gNHt_OiLluc/s16000/runtime_field4.png\" /></a></div><div><br /></div><div>물론 실제로는 만들어지지 않는다.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgXQy8zr6clKPJ0GsUiXHkPnQqzYpqxyYPPE6-mke0b_3CWvBv_NQbqcroocZT2aZtl9rPGJUA1HHk_om0rmUx77wJteff5fbgTL-aAA63Kbpu5zpNb5PzMlTv3IlccRlPPGpxYsyYmxWLgdo6GwltVY6vSnaHj7Vh4z-tGQetM4TMeCQK3qmJXN1YOrcVB/s1280/runtime_field5.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"662\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgXQy8zr6clKPJ0GsUiXHkPnQqzYpqxyYPPE6-mke0b_3CWvBv_NQbqcroocZT2aZtl9rPGJUA1HHk_om0rmUx77wJteff5fbgTL-aAA63Kbpu5zpNb5PzMlTv3IlccRlPPGpxYsyYmxWLgdo6GwltVY6vSnaHj7Vh4z-tGQetM4TMeCQK3qmJXN1YOrcVB/s16000/runtime_field5.png\" /></a></div><br /><div>v8 후기 버전부터 런타임 필드 만들 때 REST API가 웹UI와 따로 노는 느낌. 전체적인 안정성도 자꾸 떨어지는 것 같다. <a href=\"https://kangmyounghun.blogspot.com/2023/11/elasticsearch-811.html\" target=\"_blank\">ESQL</a> 나와서 찬밥 됐나?</div><div><br /></div><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/05/runtime-field-12th.html\">엘라스틱 Runtime field - 12th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/03/712.html\" target=\"\">엘라스틱 Runtime field</a></li><li><a href=\"http://kangmyounghun.blogspot.com/2018/07/elasticsearch-scripted-field.html\" target=\"\">엘라스틱 Sscripted field</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/09/2nd.html\" target=\"\">정규표현식 몰라도 된다 - 2nd</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/09/convert-ip-to-decimal.html\">convert ip to decimal</a></li></ul></div></div>",
        "contentSnippet": "uri에서 변수를 추출하는 런타임 필드.\n\n\n\n\n\n이때 만든 param 필드는 2차 가공을 할 수 없다. 읽기 스키마 기반으로 동작하는 런타임 필드는 스플렁크의 계산 필드처럼 검색 시점에 생성된다. paramlen 필드가 만들어지는 시점에 param 필드는 존재하지 않는다는 얘기.\n\n\n\n\n그래서 런타임 필드는 쓰기 스키마 기반 필드를 소스로 사용해야 한다.\n\n\n\n\n그런데 REST API에서는 만들어짐(..)\n\n\n\n\n물론 실제로는 만들어지지 않는다.\n\n\n\nv8 후기 버전부터 런타임 필드 만들 때 REST API가 웹UI와 따로 노는 느낌. 전체적인 안정성도 자꾸 떨어지는 것 같다. ESQL 나와서 찬밥 됐나?\n\n\n관련 글\n\n엘라스틱 Runtime field - 12th\n엘라스틱 Runtime field\n엘라스틱 Sscripted field\n정규표현식 몰라도 된다 - 2nd\nconvert ip to decimal",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-3974816435195879087",
        "isoDate": "2025-08-07T09:52:00.004Z"
      },
      {
        "title": "Elasticsearch 9.0의 변화 - 5th",
        "link": "https://kangmyounghun.blogspot.com/2025/08/elasticsearch-90-5th.html",
        "pubDate": "2025-08-06T14:38:00.000Z",
        "author": "강명훈",
        "content": "<div>단일 노드 조건에서 버전 업그레이드는 매우 간단하다. <a href=\"https://www.elastic.co/docs/deploy-manage/upgrade/deployment-or-cluster/elasticsearch#upgrade-process\" target=\"_blank\">data와 config 디렉토리만 덮어쓰면 됨</a>. 그런데 'v9.0.3 -&gt; v9.1.0' 업그레이드 과정에서 다음 에러 발생. 'v9.0.1 -&gt; v9.0.3' 과정에서는 문제가 없었는데<span style=\"font-size: x-small;\">(..)</span></div>\n<div><pre><code><div>PS D:\\ELK\\elasticsearch-9.1.0\\bin&gt; .\\elasticsearch</div><div>java.lang.RuntimeException: starting java failed with [1]</div><div>output:</div><div>[0.003s][error][logging] Error opening log file 'logs/gc.log': No such file or directory</div><div>[0.003s][error][logging] Initialization of output 'file=logs/gc.log' using options 'filecount=32,filesize=64m' failed.</div><div>error:</div><div>Invalid -Xlog option '-Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,level,pid,tags:filecount=32,filesize=64m', see error log for details.</div><div>Error: Could not create the Java Virtual Machine.</div></code></pre></div>\n<div><br /></div><div><span><a name='more'></a></span>분명 logs 경로가 있는데 왜 접근을 못하지?&nbsp;</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5LZkmgz-sZzZH39mIzYQdHCvXEtZyaogs-cU_nuCC19ncnSZS357hTl2wOZwREftWZqzawi8TICEwKaj8bjKRB83sEId5Zrcf3RFj2sXR5axIaovY34d3Kc0JGIi75L8AnHEtdi3JqB4OqUbFdwGcrBuTzgbqC_v0EzJ2FMsH2Q2k-2ZD-Bc_-Qp0AtYM/s1186/dir.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"616\" data-original-width=\"1186\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5LZkmgz-sZzZH39mIzYQdHCvXEtZyaogs-cU_nuCC19ncnSZS357hTl2wOZwREftWZqzawi8TICEwKaj8bjKRB83sEId5Zrcf3RFj2sXR5axIaovY34d3Kc0JGIi75L8AnHEtdi3JqB4OqUbFdwGcrBuTzgbqC_v0EzJ2FMsH2Q2k-2ZD-Bc_-Qp0AtYM/s16000/dir.png\" /></a></div><br /><div>확인해보니 JVM 로깅 경로 설정이 바뀌었다.</div><div><br /></div><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh9rLr-r50pkHM96Uis-SPqgbzB8uuToE-rf9f5teMpwLYYr_tGmIYw1MiICR-oU7xos9NcfKQFGn38_wBU9d15NL7Kv8T5-5N-zAXhqAeRUNEongwqttGyNYanbehIa6e66xwG3R9jMlcGG39S3NA5kjvCI7uQvIKTUZg1qohu99GNV81VvCwcZX8um0E0/s1280/jvm_v903.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"526\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh9rLr-r50pkHM96Uis-SPqgbzB8uuToE-rf9f5teMpwLYYr_tGmIYw1MiICR-oU7xos9NcfKQFGn38_wBU9d15NL7Kv8T5-5N-zAXhqAeRUNEongwqttGyNYanbehIa6e66xwG3R9jMlcGG39S3NA5kjvCI7uQvIKTUZg1qohu99GNV81VvCwcZX8um0E0/s16000/jvm_v903.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\"><b>v9.0.3</b></td></tr></tbody></table><table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\"><tbody><tr><td style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEinwk8DdyVgMJqz5ZMGUlCa-GY9oyWknL_4-4X-PeLHAc6CFcsTmH9vmXuEVt5pYuEf8tbleD1oGEvQ7fdOa50z0DpxlsKw8cNO30UGe65JWLy_4p9Rzkv5GOgbAt9iU3fOvusvWNOWW_mXTH5fHvXEngIAkJ5RMQErs1w2IiVttmY8qHFOhN31C9i9itmg/s1223/jvm_v910.png\" imageanchor=\"1\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"479\" data-original-width=\"1223\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEinwk8DdyVgMJqz5ZMGUlCa-GY9oyWknL_4-4X-PeLHAc6CFcsTmH9vmXuEVt5pYuEf8tbleD1oGEvQ7fdOa50z0DpxlsKw8cNO30UGe65JWLy_4p9Rzkv5GOgbAt9iU3fOvusvWNOWW_mXTH5fHvXEngIAkJ5RMQErs1w2IiVttmY8qHFOhN31C9i9itmg/s16000/jvm_v910.png\" /></a></td></tr><tr><td class=\"tr-caption\" style=\"text-align: center;\"><b>v9.1.0</b></td></tr></tbody></table><br /><div>v9.1.0에서 jvm.options의 %ES_HOME%\\logs 경로를 하드코딩해버린 모양. v9.0.3에서 카피한 파일도 같은 경로로 수정해주면 된다.</div><div><br /></div><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/06/elasticsearch-90-4th.html\">Elasticsearch 9.0의 변화 - 4th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2025/04/elasticsearch-90.html\">Elasticsearch 9.0의 변화</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/11/elasticsearch-811.html\">Elasticsearch 8.11의 변화</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2025/05/filebeat-90.html\">Filebeat 9.0의 변화</a></li></ul></div></div>",
        "contentSnippet": "단일 노드 조건에서 버전 업그레이드는 매우 간단하다. data와 config 디렉토리만 덮어쓰면 됨. 그런데 'v9.0.3 -> v9.1.0' 업그레이드 과정에서 다음 에러 발생. 'v9.0.1 -> v9.0.3' 과정에서는 문제가 없었는데(..)\n\nPS D:\\ELK\\elasticsearch-9.1.0\\bin> .\\elasticsearch\njava.lang.RuntimeException: starting java failed with [1]\noutput:\n[0.003s][error][logging] Error opening log file 'logs/gc.log': No such file or directory\n[0.003s][error][logging] Initialization of output 'file=logs/gc.log' using options 'filecount=32,filesize=64m' failed.\nerror:\nInvalid -Xlog option '-Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,level,pid,tags:filecount=32,filesize=64m', see error log for details.\nError: Could not create the Java Virtual Machine.\n\n\n\n\n분명 logs 경로가 있는데 왜 접근을 못하지? \n\n\n\n\n확인해보니 JVM 로깅 경로 설정이 바뀌었다.\n\n\n\n\nv9.0.3\n\n\n\nv9.1.0\n\n\nv9.1.0에서 jvm.options의 %ES_HOME%\\logs 경로를 하드코딩해버린 모양. v9.0.3에서 카피한 파일도 같은 경로로 수정해주면 된다.\n\n\n관련 글\n\nElasticsearch 9.0의 변화 - 4th\nElasticsearch 9.0의 변화\nElasticsearch 8.11의 변화\nFilebeat 9.0의 변화",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-8693136600215095353",
        "isoDate": "2025-08-06T14:38:00.000Z"
      },
      {
        "title": "VIM 꼼수의 발견 - 12th",
        "link": "https://kangmyounghun.blogspot.com/2025/08/vim-12th.html",
        "pubDate": "2025-08-03T06:30:00.000Z",
        "author": "강명훈",
        "content": "<div>vim 명령 모드에서는 운영체제 명령어를 실행할 수 있다.</div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNFEocy7ty8PqvJizD3TBa5YATh57vLNTPzyh8HIQQKyE3K-XiElcYZiq6Av1qJPcvD7SFakdHZ9QfYD8cqqUNmXleXw4zTsGop3Xf_Mj9Iv_TDSTRHe1_lcimQ4HGwsRrFIhXCvSbzvwwtgJ7qHK08j533hobNeXZcIUAZmSqlkveSEwiIEDgnpOQ-stk/s1253/vim_cmd.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"548\" data-original-width=\"1253\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjNFEocy7ty8PqvJizD3TBa5YATh57vLNTPzyh8HIQQKyE3K-XiElcYZiq6Av1qJPcvD7SFakdHZ9QfYD8cqqUNmXleXw4zTsGop3Xf_Mj9Iv_TDSTRHe1_lcimQ4HGwsRrFIhXCvSbzvwwtgJ7qHK08j533hobNeXZcIUAZmSqlkveSEwiIEDgnpOQ-stk/s16000/vim_cmd.png\" /></a></div><span><a name='more'></a></span><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgQUdxZVDm22-tjys9MPyiH6NpNy2B9kfv8Esinh2z3Lcmyy4DcR0tiFiGMX5VED2tuKrBzJapEzh3ntg-1WhlPgkLY6rSY5W10oXmJW99PBPC2-5u6QeJXMDE9wS6lgVIgqFBeMmYmk8KYdXXa2TzdS4w9PKtBdKXM-0TboKxgykb6Q4tgkKr4wW3FD-7S/s1253/vim_cmd2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"548\" data-original-width=\"1253\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgQUdxZVDm22-tjys9MPyiH6NpNy2B9kfv8Esinh2z3Lcmyy4DcR0tiFiGMX5VED2tuKrBzJapEzh3ntg-1WhlPgkLY6rSY5W10oXmJW99PBPC2-5u6QeJXMDE9wS6lgVIgqFBeMmYmk8KYdXXa2TzdS4w9PKtBdKXM-0TboKxgykb6Q4tgkKr4wW3FD-7S/s16000/vim_cmd2.png\" /></a></div><br /><div>그리고 치환 모드에서는 awk를 불러올 수 있다. 월별 발생량 집계.</div></div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjPiZBaU938C7gtRP2BYgnPj5z2-8hNIWPPhJN5mZ4M1-Dpr5vo1435H1eYyWJu0u7UznggiIbyLS8ZzwnR8BjMGy6typcVlnQRukS1cuhE42WmahC3QWzIjeSGU4n6hae6DINpS5OWC3ReVsY0_DnS8cnfcBBoro3HkKRjTJxiIjZy-euGsJv8U7fq5Wxo/s1111/vim_awk.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"479\" data-original-width=\"1111\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjPiZBaU938C7gtRP2BYgnPj5z2-8hNIWPPhJN5mZ4M1-Dpr5vo1435H1eYyWJu0u7UznggiIbyLS8ZzwnR8BjMGy6typcVlnQRukS1cuhE42WmahC3QWzIjeSGU4n6hae6DINpS5OWC3ReVsY0_DnS8cnfcBBoro3HkKRjTJxiIjZy-euGsJv8U7fq5Wxo/s16000/vim_awk.png\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjFVzO7-xy46KDDzy3RPto5yqyPj0F8IEQarIhbjt-dVhVJt_AeKqlVNJoLdAqbDTlIBlYBo2BiFULQivkgWcYoABLAIjhrSImXkk8sjjK4UAQ5bNpI7UR3ImYKkQQhtFm02XbLjx3UIeVs4LL0pxPv-uzAPCQvANmci8cTgwbK9BBmY1KXcDX0WTFqUkxk/s1111/vim_awk2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"479\" data-original-width=\"1111\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjFVzO7-xy46KDDzy3RPto5yqyPj0F8IEQarIhbjt-dVhVJt_AeKqlVNJoLdAqbDTlIBlYBo2BiFULQivkgWcYoABLAIjhrSImXkk8sjjK4UAQ5bNpI7UR3ImYKkQQhtFm02XbLjx3UIeVs4LL0pxPv-uzAPCQvANmci8cTgwbK9BBmY1KXcDX0WTFqUkxk/s16000/vim_awk2.png\" /></a></div><div><br /></div><div>프로세스별 발생량 집계.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhYK6vrpSWcSXxM7shfdVGa5IC4tWOs_R6pQYZmHvdhol-CPNsqSAAFHtU6PNwBx_jXAGyTEJA1xoAjDdNy4tdQ58jz-74w0R9qrXD_AZgyOWovjS5Y_dhySiO73_EvZNhg2aiX08tPCot-4xuNr9WyE7R1tHUyTPkZcwO5tsyk_VQfn9EepHWqAg7QuMIW/s1111/vim_awk3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"479\" data-original-width=\"1111\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhYK6vrpSWcSXxM7shfdVGa5IC4tWOs_R6pQYZmHvdhol-CPNsqSAAFHtU6PNwBx_jXAGyTEJA1xoAjDdNy4tdQ58jz-74w0R9qrXD_AZgyOWovjS5Y_dhySiO73_EvZNhg2aiX08tPCot-4xuNr9WyE7R1tHUyTPkZcwO5tsyk_VQfn9EepHWqAg7QuMIW/s16000/vim_awk3.png\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjlZBEi6qR-MsV3EO4Beig2ATYKvBwrOtZRdfAxanx0kj3GTDLWtOQN4H_ulJ8dpF0giK2tjT5JbqmzMSgAWQ8IFTKrpFuMp_udnV8cfaEa_ojiBHdIBDgDGnDMV0Kg4mfedi00FQ9siNGGpJK7jqviJuhzgzKl3Mx7uwIxv0m_8Nrm1yMUZxxFJvmrYrgU/s1111/vim_awk4.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"479\" data-original-width=\"1111\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjlZBEi6qR-MsV3EO4Beig2ATYKvBwrOtZRdfAxanx0kj3GTDLWtOQN4H_ulJ8dpF0giK2tjT5JbqmzMSgAWQ8IFTKrpFuMp_udnV8cfaEa_ojiBHdIBDgDGnDMV0Kg4mfedi00FQ9siNGGpJK7jqviJuhzgzKl3Mx7uwIxv0m_8Nrm1yMUZxxFJvmrYrgU/s16000/vim_awk4.png\" /></a></div><div><br /></div><div>메시지별 발생량 집계.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEin_7oBwZ3rM6vZTol8jUBHydvilM54BtmMZIARQRqBcRLdqfjH3s66BZEo6smilMVhQALthAmiUJUCaIhB58hycsx1U5yf4c0La5uJXFBf9qVveNJHJ1oZHt991JWy9USTt1pgO3F_qx2PcejLKW72Ifm5EG2tVxbi8ma7gfLXuVL9mj6q1-0X2OxC0cFf/s1111/vim_awk5.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"479\" data-original-width=\"1111\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEin_7oBwZ3rM6vZTol8jUBHydvilM54BtmMZIARQRqBcRLdqfjH3s66BZEo6smilMVhQALthAmiUJUCaIhB58hycsx1U5yf4c0La5uJXFBf9qVveNJHJ1oZHt991JWy9USTt1pgO3F_qx2PcejLKW72Ifm5EG2tVxbi8ma7gfLXuVL9mj6q1-0X2OxC0cFf/s16000/vim_awk5.png\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiTFTdNsKvP_MUMp4urCYV__AMx7-jEzahEA_JDTRGmrpQ1NSc5yVyvOV1d6ck4OyeeH9CYbRx0iLz33Y4BMhm4q4qO0mAsAW7pI9p9Cpiwx69uKlpdvUT7eFXhART3CYbnk8Ih0KLw69EFYBiud8P40ZdUqcsLOC5JQCF8IY5RU3nggZzplZc4W_d_MgdY/s1111/vim_awk6.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"479\" data-original-width=\"1111\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiTFTdNsKvP_MUMp4urCYV__AMx7-jEzahEA_JDTRGmrpQ1NSc5yVyvOV1d6ck4OyeeH9CYbRx0iLz33Y4BMhm4q4qO0mAsAW7pI9p9Cpiwx69uKlpdvUT7eFXhART3CYbnk8Ih0KLw69EFYBiud8P40ZdUqcsLOC5JQCF8IY5RU3nggZzplZc4W_d_MgdY/s16000/vim_awk6.png\" /></a></div><div><br /></div><div>정규표현식이 익숙치 않을 때 대안으로 쓰기엔 정규표현식보다 더 복잡해 보이는데<span style=\"font-size: x-small;\">(..)</span></div><div><br /></div><div><b>관련 글</b></div><div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2024/10/vim-11th.html\">VIM 꼼수의 발견 - 11th</a></li><li><a href=\"http://kangmyounghun.blogspot.com/2018/05/vim.html\" target=\"\">VIM 꼼수의 발견</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2016/07/vim.html\" target=\"\">VIM 사용 설명서</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2025/07/vim-vs-awk.html\">VIM vs AWK</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/06/apache-log-to-iis-format.html\">apache log to iis format</a></li></ul></div></div>",
        "contentSnippet": "vim 명령 모드에서는 운영체제 명령어를 실행할 수 있다.\n\n\n\n\n\n\n그리고 치환 모드에서는 awk를 불러올 수 있다. 월별 발생량 집계.\n\n\n\n\n\n\n프로세스별 발생량 집계.\n\n\n\n\n\n메시지별 발생량 집계.\n\n\n\n\n\n정규표현식이 익숙치 않을 때 대안으로 쓰기엔 정규표현식보다 더 복잡해 보이는데(..)\n\n\n관련 글\n\n\nVIM 꼼수의 발견 - 11th\nVIM 꼼수의 발견\nVIM 사용 설명서\nVIM vs AWK\napache log to iis format",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-8748129312160437278",
        "isoDate": "2025-08-03T06:30:00.000Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "Claude Code 101",
        "link": "https://sungjk.github.io/2025/08/09/claude-code-101.html",
        "pubDate": "2025-08-09T00:00:00+00:00",
        "content": "\n            \n            &lt;p&gt;회사에서 AI 도구를 자유롭게 활용할 수 있도록 지원해 준 덕분에, 그동안 Cursor, Cline, Copilot 등 다양한 코딩 에이전트를 활용해 개발 생산성을 높일 수 있었습니다. 그러던 중 지난 2025년 6월 24일 Anthropic에서 터미널 기반의 코딩 에이전트인 Claude Code를 정식 출시했습니다.&lt;/p&gt;\n\n&lt;p&gt;터미널은 개발자가 컴퓨터와 직접 대화를 나눌 수 있는 창구라서 떼려야 뗄 수 없지만, GUI의 도움을 받아 개발 하다보면 터미널에 익숙하지 않을 수 있습니다. GUI가 편하기도 하고요. 그래서 별도 GUI 인터페이스를 갖추고 있는 Cursor, Cline 같은 도구를 사용해 오던 입장에서, 처음에 Claude Code 컨셉만 들었을땐 마냥 불편할 것만 같았습니다.&lt;/p&gt;\n\n&lt;p&gt;그런데 막상 써보니 인터페이스가 터미널이라 굉장히 가벼울 뿐 아니라, 특정 IDE에 종속되지 않고 어디서든 쓸 수 있다는 점이 장점으로 느껴졌습니다. 특히 JVM 환경에서 주로 개발하다 보니, 프로젝트 인덱싱, 컴파일, 빌드 등의 과정이 Cursor나 Cline에서는 다소 불편하게 느껴졌는데, Claude Code는 IntelliJ의 터미널에서 실행되니 마치 플러그인 하나 설치해 쓰는 듯한 경험이었습니다. 그래서 Cursor를 주로 사용하던 저는 이제 Claude Code만 쓰는 사람이 되었습니다.&lt;/p&gt;\n\n&lt;p&gt;코딩 에이전트를 포함한 AI 기술은 하루가 다르게 빠르게 발전하고 있습니다. 일주일, 한 달만 지나도 새로운 기술과 모델이 나오고, 이전 것은 금세 시야에서 사라집니다. 개발자는 그때마다 새로운 경험을 맞이하게 됩니다. Cursor, Cline 같은 도구를 쓰면서 이 다음에 뭐가 나올까 궁금했는데 Claude Code가 하나의 변곡점이 될 거라는 느낌을 받았습니다.&lt;/p&gt;\n\n&lt;p&gt;혼자서 스터디도 하고 사내 엔지니어들과 이야기를 나누면서 Claude Code를 더 잘 써보기 위한 방법들을 하나 둘 찾아나갔고, 지난 달 전사 테크 올핸즈에서 ‘&lt;strong&gt;한 번 쓰고 끝이 아니다. 끊임없이 진화하는 코딩 에이전트 활용법&lt;/strong&gt;’ 이라는 주제로 Claude Code 사용 방법에 대해 공유했습니다.&lt;/p&gt;\n\n&lt;p&gt;결국 코딩 에이전트를 사용하는 목적 중 하나는 생산성을 극대화 시키기 위함인데, 코딩 에이전트에게 무언가 시키고 나면 다시 제가 직접 수정하는 일이 생겼고 이건 목적에서 조금은 벗어난다는 생각이 들었습니다. ‘이럴 거면 내가 짜는 게 낫지‘ 라는 결론으로 이어질 수도 있고요. 그래서 Claude Code를 더 잘 활용하기 위해 Rules, Custom commands, Hooks 등을 작성했고, 머지 않아 또 다른 패러다임에 변화가 올거라 믿지만, 개인 블로그에도 간단하게 기록차 남겨봅니다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;claude-code-101&quot;&gt;Claude Code 101&lt;/h1&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-1.png&quot; alt=&quot;claude-code-101-1&quot; title=&quot;claude-code-101-1&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;다들 첫 출근날과 처음으로 업무 받은 날을 기억하나요? 만약 어떤 회사에 입사를 했는데 팀에 나 혼자라고 가정해봅시다. 업무를 받았으니 무언가 해야 되는데 참고할 만한 문서가 있긴 한데 많이 부실합니다. 그리고 작성된 코드 양은 너무 많아서 어디 부터 봐야 할 지 모르는 상황입니다. 이럴때 우리는 어떻게 해야할까요?&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-2.png&quot; alt=&quot;claude-code-101-2&quot; title=&quot;claude-code-101-2&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;‘어떤 것부터 알면 될까?’ 생각이 들텐데, 실제로는 내가 뭘 알아야 하는지도 모르는 상태입니다. 아는게 있어야 뭘 모르는지도 알게 될테니까요. 그렇다면 이 상황을 어떻게 해결하면 좋을까요? 간단한 방법은 2가지가 있습니다. 누군가에게 일단 물어보거나, 스스로 알아갈 때까지 고뇌하는 것입니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-3.png&quot; alt=&quot;claude-code-101-3&quot; title=&quot;claude-code-101-3&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;이런 상황을 해결하기 위해 회사는 ‘신규 입사자 온보딩’ 프로그램을 운영하곤 합니다. 신규 입사자가 왔을때 여기는 어떤 문화를 가지고 있고, 시스템은 어떻고, 나는 어떤 일을 어떻게 하면 되는지 방법을 알려줍니다. 새로 온 동료가 그동안의 오래된 제품에 대한 맥락과 팀의 일하는 방식을 알아가기 까지 스스로 한다면 더 오랜 시간이 걸릴텐데, 잘 정리되어 있는 문서나 참고해야 할 요소들이 많다면 더 빠르게 알아갈 수 있을거에요.&lt;/p&gt;\n\n&lt;p&gt;코딩 에이전트도 이와 크게 다르지 않습니다. 무작정 코딩 에이전트에게 ‘1000원 할인 코드 작성해줘’ 라고 하면 코딩 에이전트는 구체적인 정보를 찾기 위해 더 많은 시간을 쓰고 알지 못한다면 추측을 하기도 합니다. 그래서 코딩 에이전트가 나와 수년을 함께 한 동료가 되기 위해서는 알고 있는 모든 것을 알려줘야 합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-4.png&quot; alt=&quot;claude-code-101-4&quot; title=&quot;claude-code-101-4&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;우리 팀의 프로젝트 아키텍처는 어떤 형태로 구성되어 있는지 자세히 알려줘야 합니다. 의존성 규칙과 방향이 강제되어 있다면 이 또한 반드시 알려줘야 합니다.&lt;/p&gt;\n\n&lt;p&gt;코드 컨벤션이 있다면 이 또한 자세히 가이드 해줘야 합니다. 팀에서 사용중인 코드 컨벤션이 없다면 각 언어의 공식 컨벤션이라도 알려주면 좋습니다. 저희 팀은 클래스 네이밍에 Alistair Cockburn이 언급한 원칙인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;the name should be the goal as a short active verb phrase&lt;/code&gt; 을 준수합니다. 이름만 보고도 그 클래스의 역할과 책임이 명확히 드러나야 하고, 역할과 책임 그리고 의미있는 접미사/접두사를 사용합니다. 그래서 대부분의 클래스는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;동사 + 역할 + 접미사&lt;/code&gt; 의 조합으로 이름을 짓고 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-5.png&quot; alt=&quot;claude-code-101-5&quot; title=&quot;claude-code-101-5&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;팀에서 사용중인 테스트 작성법이 있다면 이것도 자세히 알려줍니다. 저희 팀은 외부 의존성이 필요한 Mocking Library 사용을 지양하고, 조금 더 Production Code 변화에 유연하게 대응하기 위해 Test Double을 직접 만들어서 사용합니다. 그리고 테스트 코드를 구조화해서 가독성, 유지보수성, 일관성을 끌어 올리기 위해 AAA(Arrange, Act, Assert) 패턴을 사용합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-6.png&quot; alt=&quot;claude-code-101-6&quot; title=&quot;claude-code-101-6&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;커밋을 작성할 때에도 기본 형식이 있습니다. 커밋 메시지의 맨 앞에는 이슈 티켓을 입력하고, 그 다음에는 어떤 유형의 커밋이고 어떤 모듈의 변화인지, 그리고 마지막에는 커밋의 설명을 간단하게 작성합니다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GZ-{티켓번호} {타입}({모듈}): {설명}&lt;/code&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-7.png&quot; alt=&quot;claude-code-101-7&quot; title=&quot;claude-code-101-7&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;Claude Code는 우리 팀이 이렇게 일한다는 사실을 알고 있을까요? 알 수 없으면 알려주면 됩니다. 팀의 일하는 방식을 알려주면 그 순간 수년을 함께 한 동료가 될 수 있습니다. 애자일하게 일하는 조직일수록 일하는 방식은 날이 갈수록 개선됩니다. 저희 팀도 마찬가지로 일하는 방식과 가이드가 그 때의 상황에 따라 더 나은 방향으로 계속해서 개선되고 있습니다. 과거에는 맞았지만 지금은 다를 수 있으니까요. 미래에는 더 다를거고요.&lt;/p&gt;\n\n&lt;p&gt;마찬가지로, 다양한 코드 작성 Rule을 통해 Claude Code는 어떻게 코드를 작성하면 되는지 알게 될텐데, 이 Rule은 계속해서 개선되고 진화해야 합니다. 개발 팀미팅에서 클래스 네이밍하는 방식이 변경됐다면 Rule에도 업데이트 하고 Claude Code에게도 이 사실을 알려줘야 합니다. 그래서 우스갯소리로 가이드 문서(Rule)가 얼마나 자주 업데이트 되는지 보면, 코딩 에이전트를 얼마나 잘 활용하고 있는지 알 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-8.png&quot; alt=&quot;claude-code-101-8&quot; title=&quot;claude-code-101-8&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;그래서 Claude Code 뿐만 아니라 코딩 에이전트에게 무언가 프롬프팅을 완료하고 나면 끝이 아니라 이제부터가 시작입니다. 코드를 원하는대로 잘 작성했다면 다음번에도 이처럼 잘 할 수 있도록 가이드 해줘야 합니다. 코딩 에이전트에게 준 피드백과 쌓여가는 Rule은 곧, 복리의 마법으로 다가올 것이라는걸 믿는게 중요하다고 생각합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-9.png&quot; alt=&quot;claude-code-101-9&quot; title=&quot;claude-code-101-9&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;발표 자료 중간에 Claude Code 기본 사용법과 소소한 팁이 있는데, 이 글에 담기엔 단순 정보라서 PDF를 참고해주시면 좋겠습니다.&lt;/p&gt;\n\n&lt;p&gt;아무튼.. 가장 중요한 것은 꺾이지 않는 마음입니다. 코딩 에이전트에게 무언가 명령을 했는데 잘 알아듣지 못하고 엉뚱한 코드를 작성한다거나 내가 작성하는 스타일과 다르게 코드를 작성한다거나, 마음에 들지 않을때 있습니다. 이 때 우리는 ‘그냥 내가 하는게 낫겠다’ 라는 생각이 들면서 갈림길에 놓이게 됩니다.&lt;/p&gt;\n\n&lt;p&gt;이 때 한 숨 크게 고르시고, 어떤게 잘못되었는지 어떻게 작성해야 하는지 알려주어야 합니다. 이건 마치 일을 빠르게 처리하지 못하고 있는 신규 입사자 동료에게 답답함을 느끼는 것과 같다고 생각합니다. 수정이 필요한 부분이 있다면 직접 고치지 않고, 어떤 코드를 어떻게 작성하면 되는지 알려주어야 합니다. 잘 해냈다면 다음 번에는 어떻게 하면 되는지 피드백을 통해 가이드와 Rule을 갱신합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/08/09/claude-code-101-10.png&quot; alt=&quot;claude-code-101-10&quot; title=&quot;claude-code-101-10&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;마지막으로, 이 발표에서 전달하려고 했던 메시지 메시지입니다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;코딩 에이전트가 못하면 가르치자&lt;/li&gt;\n  &lt;li&gt;코딩 에이전트가 해냈으면 회고하자&lt;/li&gt;\n  &lt;li&gt;그리고 복리의 마법을 믿자&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;마치며&quot;&gt;마치며&lt;/h3&gt;\n\n&lt;p&gt;코딩 에이전트를 접하고 나서 정말 많은 시간을 코드 작성법(Rule)을 만드는 일에 할애했습니다. 팀에서 수십개 서비스를 모노레포에 관리중인데, 오래전부터 아키틱체와 코드 컨벤션을 잘 유지하고 가이드를 다듬어 놓아서 초기 Rule을 작성하는데에 시간은 오래 걸렸지만 어렵지 않았습니다.&lt;/p&gt;\n\n&lt;p&gt;지금은 Claude Code를 사용하면서 N개의 일을 병렬로 할 수 있는 환경이 되었습니다. 커밋 메시지를 작성한다던가, Pull Request 본문을 작성하는 등 코드를 작성하고 나서 반복적으로 하는 작업들은 더이상 제가 하지 않습니다. Claude Code가 일을 잘 해서 그런것도 있지만, 초기에 Rule 셋팅하는 시간을 많이 투자한 덕분이라고 생각합니다.&lt;/p&gt;\n\n&lt;p&gt;단순한 기능을 만들 때에는 가이드 없이 Claude Code를 바로 사용해도 좋다고 생각합니다. 하지만 조금 복잡해지거나 도메인 규칙을 이해해야 한다거나, 우리 팀만의 가이드에 따라 코드 작성이 필요하다면 바로 사용하는건 멈추고 Rule 부터 정돈하기를 권장합니다.&lt;/p&gt;\n\n&lt;p&gt;마지막으로, 작성된 모든 내용은 제 개인적인 의견이고 소수의 인원이 작업을 하는 곳보다 다수의 인원이 같은 Repository에 작업을 할 때에는 더 빛을 보는 방법이니 참고해주세요. 모두 복리의 마법을 믿고 코딩 대탈출 하셨으면 좋겠습니다!&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;P.S. 발표 자료는 일부 내용 제거된 형태로 업로드 되어 있습니다. &lt;a href=&quot;https://github.com/sungjk/sungjk.github.io/tree/master/images/2025/08/09/ClaudeCode101_20250809.pdf&quot;&gt;ClaudeCode101_20250809.pdf&lt;/a&gt;를 참고하시면 됩니다. 궁금하신 점이 있으면 편하게 메일로 연락 주세요.&lt;/li&gt;\n&lt;/ul&gt;\n\n            \n          ",
        "contentSnippet": "<p>회사에서 AI 도구를 자유롭게 활용할 수 있도록 지원해 준 덕분에, 그동안 Cursor, Cline, Copilot 등 다양한 코딩 에이전트를 활용해 개발 생산성을 높일 수 있었습니다. 그러던 중 지난 2025년 6월 24일 Anthropic에서 터미널 기반의 코딩 에이전트인 Claude Code를 정식 출시했습니다.</p>\n\n<p>터미널은 개발자가 컴퓨터와 직접 대화를 나눌 수 있는 창구라서 떼려야 뗄 수 없지만, GUI의 도움을 받아 개발 하다보면 터미널에 익숙하지 않을 수 있습니다. GUI가 편하기도 하고요. 그래서 별도 GUI 인터페이스를 갖추고 있는 Cursor, Cline 같은 도구를 사용해 오던 입장에서, 처음에 Claude Code 컨셉만 들었을땐 마냥 불편할 것만 같았습니다.</p>\n\n<p>그런데 막상 써보니 인터페이스가 터미널이라 굉장히 가벼울 뿐 아니라, 특정 IDE에 종속되지 않고 어디서든 쓸 수 있다는 점이 장점으로 느껴졌습니다. 특히 JVM 환경에서 주로 개발하다 보니, 프로젝트 인덱싱, 컴파일, 빌드 등의 과정이 Cursor나 Cline에서는 다소 불편하게 느껴졌는데, Claude Code는 IntelliJ의 터미널에서 실행되니 마치 플러그인 하나 설치해 쓰는 듯한 경험이었습니다. 그래서 Cursor를 주로 사용하던 저는 이제 Claude Code만 쓰는 사람이 되었습니다.</p>\n\n<p>코딩 에이전트를 포함한 AI 기술은 하루가 다르게 빠르게 발전하고 있습니다. 일주일, 한 달만 지나도 새로운 기술과 모델이 나오고, 이전 것은 금세 시야에서 사라집니다. 개발자는 그때마다 새로운 경험을 맞이하게 됩니다. Cursor, Cline 같은 도구를 쓰면서 이 다음에 뭐가 나올까 궁금했는데 Claude Code가 하나의 변곡점이 될 거라는 느낌을 받았습니다.</p>\n\n<p>혼자서 스터디도 하고 사내 엔지니어들과 이야기를 나누면서 Claude Code를 더 잘 써보기 위한 방법들을 하나 둘 찾아나갔고, 지난 달 전사 테크 올핸즈에서 ‘<strong>한 번 쓰고 끝이 아니다. 끊임없이 진화하는 코딩 에이전트 활용법</strong>’ 이라는 주제로 Claude Code 사용 방법에 대해 공유했습니다.</p>\n\n<p>결국 코딩 에이전트를 사용하는 목적 중 하나는 생산성을 극대화 시키기 위함인데, 코딩 에이전트에게 무언가 시키고 나면 다시 제가 직접 수정하는 일이 생겼고 이건 목적에서 조금은 벗어난다는 생각이 들었습니다. ‘이럴 거면 내가 짜는 게 낫지‘ 라는 결론으로 이어질 수도 있고요. 그래서 Claude Code를 더 잘 활용하기 위해 Rules, Custom commands, Hooks 등을 작성했고, 머지 않아 또 다른 패러다임에 변화가 올거라 믿지만, 개인 블로그에도 간단하게 기록차 남겨봅니다.</p>\n\n<hr />\n\n<h1 id=\"claude-code-101\">Claude Code 101</h1>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-1.png\" alt=\"claude-code-101-1\" title=\"claude-code-101-1\" class=\"center-image\" /></p>\n\n<p>다들 첫 출근날과 처음으로 업무 받은 날을 기억하나요? 만약 어떤 회사에 입사를 했는데 팀에 나 혼자라고 가정해봅시다. 업무를 받았으니 무언가 해야 되는데 참고할 만한 문서가 있긴 한데 많이 부실합니다. 그리고 작성된 코드 양은 너무 많아서 어디 부터 봐야 할 지 모르는 상황입니다. 이럴때 우리는 어떻게 해야할까요?</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-2.png\" alt=\"claude-code-101-2\" title=\"claude-code-101-2\" class=\"center-image\" /></p>\n\n<p>‘어떤 것부터 알면 될까?’ 생각이 들텐데, 실제로는 내가 뭘 알아야 하는지도 모르는 상태입니다. 아는게 있어야 뭘 모르는지도 알게 될테니까요. 그렇다면 이 상황을 어떻게 해결하면 좋을까요? 간단한 방법은 2가지가 있습니다. 누군가에게 일단 물어보거나, 스스로 알아갈 때까지 고뇌하는 것입니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-3.png\" alt=\"claude-code-101-3\" title=\"claude-code-101-3\" class=\"center-image\" /></p>\n\n<p>이런 상황을 해결하기 위해 회사는 ‘신규 입사자 온보딩’ 프로그램을 운영하곤 합니다. 신규 입사자가 왔을때 여기는 어떤 문화를 가지고 있고, 시스템은 어떻고, 나는 어떤 일을 어떻게 하면 되는지 방법을 알려줍니다. 새로 온 동료가 그동안의 오래된 제품에 대한 맥락과 팀의 일하는 방식을 알아가기 까지 스스로 한다면 더 오랜 시간이 걸릴텐데, 잘 정리되어 있는 문서나 참고해야 할 요소들이 많다면 더 빠르게 알아갈 수 있을거에요.</p>\n\n<p>코딩 에이전트도 이와 크게 다르지 않습니다. 무작정 코딩 에이전트에게 ‘1000원 할인 코드 작성해줘’ 라고 하면 코딩 에이전트는 구체적인 정보를 찾기 위해 더 많은 시간을 쓰고 알지 못한다면 추측을 하기도 합니다. 그래서 코딩 에이전트가 나와 수년을 함께 한 동료가 되기 위해서는 알고 있는 모든 것을 알려줘야 합니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-4.png\" alt=\"claude-code-101-4\" title=\"claude-code-101-4\" class=\"center-image\" /></p>\n\n<p>우리 팀의 프로젝트 아키텍처는 어떤 형태로 구성되어 있는지 자세히 알려줘야 합니다. 의존성 규칙과 방향이 강제되어 있다면 이 또한 반드시 알려줘야 합니다.</p>\n\n<p>코드 컨벤션이 있다면 이 또한 자세히 가이드 해줘야 합니다. 팀에서 사용중인 코드 컨벤션이 없다면 각 언어의 공식 컨벤션이라도 알려주면 좋습니다. 저희 팀은 클래스 네이밍에 Alistair Cockburn이 언급한 원칙인 <code class=\"language-plaintext highlighter-rouge\">the name should be the goal as a short active verb phrase</code> 을 준수합니다. 이름만 보고도 그 클래스의 역할과 책임이 명확히 드러나야 하고, 역할과 책임 그리고 의미있는 접미사/접두사를 사용합니다. 그래서 대부분의 클래스는 <code class=\"language-plaintext highlighter-rouge\">동사 + 역할 + 접미사</code> 의 조합으로 이름을 짓고 있습니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-5.png\" alt=\"claude-code-101-5\" title=\"claude-code-101-5\" class=\"center-image\" /></p>\n\n<p>팀에서 사용중인 테스트 작성법이 있다면 이것도 자세히 알려줍니다. 저희 팀은 외부 의존성이 필요한 Mocking Library 사용을 지양하고, 조금 더 Production Code 변화에 유연하게 대응하기 위해 Test Double을 직접 만들어서 사용합니다. 그리고 테스트 코드를 구조화해서 가독성, 유지보수성, 일관성을 끌어 올리기 위해 AAA(Arrange, Act, Assert) 패턴을 사용합니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-6.png\" alt=\"claude-code-101-6\" title=\"claude-code-101-6\" class=\"center-image\" /></p>\n\n<p>커밋을 작성할 때에도 기본 형식이 있습니다. 커밋 메시지의 맨 앞에는 이슈 티켓을 입력하고, 그 다음에는 어떤 유형의 커밋이고 어떤 모듈의 변화인지, 그리고 마지막에는 커밋의 설명을 간단하게 작성합니다.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">GZ-{티켓번호} {타입}({모듈}): {설명}</code></li>\n</ul>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-7.png\" alt=\"claude-code-101-7\" title=\"claude-code-101-7\" class=\"center-image\" /></p>\n\n<p>Claude Code는 우리 팀이 이렇게 일한다는 사실을 알고 있을까요? 알 수 없으면 알려주면 됩니다. 팀의 일하는 방식을 알려주면 그 순간 수년을 함께 한 동료가 될 수 있습니다. 애자일하게 일하는 조직일수록 일하는 방식은 날이 갈수록 개선됩니다. 저희 팀도 마찬가지로 일하는 방식과 가이드가 그 때의 상황에 따라 더 나은 방향으로 계속해서 개선되고 있습니다. 과거에는 맞았지만 지금은 다를 수 있으니까요. 미래에는 더 다를거고요.</p>\n\n<p>마찬가지로, 다양한 코드 작성 Rule을 통해 Claude Code는 어떻게 코드를 작성하면 되는지 알게 될텐데, 이 Rule은 계속해서 개선되고 진화해야 합니다. 개발 팀미팅에서 클래스 네이밍하는 방식이 변경됐다면 Rule에도 업데이트 하고 Claude Code에게도 이 사실을 알려줘야 합니다. 그래서 우스갯소리로 가이드 문서(Rule)가 얼마나 자주 업데이트 되는지 보면, 코딩 에이전트를 얼마나 잘 활용하고 있는지 알 수 있습니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-8.png\" alt=\"claude-code-101-8\" title=\"claude-code-101-8\" class=\"center-image\" /></p>\n\n<p>그래서 Claude Code 뿐만 아니라 코딩 에이전트에게 무언가 프롬프팅을 완료하고 나면 끝이 아니라 이제부터가 시작입니다. 코드를 원하는대로 잘 작성했다면 다음번에도 이처럼 잘 할 수 있도록 가이드 해줘야 합니다. 코딩 에이전트에게 준 피드백과 쌓여가는 Rule은 곧, 복리의 마법으로 다가올 것이라는걸 믿는게 중요하다고 생각합니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-9.png\" alt=\"claude-code-101-9\" title=\"claude-code-101-9\" class=\"center-image\" /></p>\n\n<p>발표 자료 중간에 Claude Code 기본 사용법과 소소한 팁이 있는데, 이 글에 담기엔 단순 정보라서 PDF를 참고해주시면 좋겠습니다.</p>\n\n<p>아무튼.. 가장 중요한 것은 꺾이지 않는 마음입니다. 코딩 에이전트에게 무언가 명령을 했는데 잘 알아듣지 못하고 엉뚱한 코드를 작성한다거나 내가 작성하는 스타일과 다르게 코드를 작성한다거나, 마음에 들지 않을때 있습니다. 이 때 우리는 ‘그냥 내가 하는게 낫겠다’ 라는 생각이 들면서 갈림길에 놓이게 됩니다.</p>\n\n<p>이 때 한 숨 크게 고르시고, 어떤게 잘못되었는지 어떻게 작성해야 하는지 알려주어야 합니다. 이건 마치 일을 빠르게 처리하지 못하고 있는 신규 입사자 동료에게 답답함을 느끼는 것과 같다고 생각합니다. 수정이 필요한 부분이 있다면 직접 고치지 않고, 어떤 코드를 어떻게 작성하면 되는지 알려주어야 합니다. 잘 해냈다면 다음 번에는 어떻게 하면 되는지 피드백을 통해 가이드와 Rule을 갱신합니다.</p>\n\n<p><img src=\"/images/2025/08/09/claude-code-101-10.png\" alt=\"claude-code-101-10\" title=\"claude-code-101-10\" class=\"center-image\" /></p>\n\n<p>마지막으로, 이 발표에서 전달하려고 했던 메시지 메시지입니다.</p>\n\n<ul>\n  <li>코딩 에이전트가 못하면 가르치자</li>\n  <li>코딩 에이전트가 해냈으면 회고하자</li>\n  <li>그리고 복리의 마법을 믿자</li>\n</ul>\n\n<hr />\n\n<h3 id=\"마치며\">마치며</h3>\n\n<p>코딩 에이전트를 접하고 나서 정말 많은 시간을 코드 작성법(Rule)을 만드는 일에 할애했습니다. 팀에서 수십개 서비스를 모노레포에 관리중인데, 오래전부터 아키틱체와 코드 컨벤션을 잘 유지하고 가이드를 다듬어 놓아서 초기 Rule을 작성하는데에 시간은 오래 걸렸지만 어렵지 않았습니다.</p>\n\n<p>지금은 Claude Code를 사용하면서 N개의 일을 병렬로 할 수 있는 환경이 되었습니다. 커밋 메시지를 작성한다던가, Pull Request 본문을 작성하는 등 코드를 작성하고 나서 반복적으로 하는 작업들은 더이상 제가 하지 않습니다. Claude Code가 일을 잘 해서 그런것도 있지만, 초기에 Rule 셋팅하는 시간을 많이 투자한 덕분이라고 생각합니다.</p>\n\n<p>단순한 기능을 만들 때에는 가이드 없이 Claude Code를 바로 사용해도 좋다고 생각합니다. 하지만 조금 복잡해지거나 도메인 규칙을 이해해야 한다거나, 우리 팀만의 가이드에 따라 코드 작성이 필요하다면 바로 사용하는건 멈추고 Rule 부터 정돈하기를 권장합니다.</p>\n\n<p>마지막으로, 작성된 모든 내용은 제 개인적인 의견이고 소수의 인원이 작업을 하는 곳보다 다수의 인원이 같은 Repository에 작업을 할 때에는 더 빛을 보는 방법이니 참고해주세요. 모두 복리의 마법을 믿고 코딩 대탈출 하셨으면 좋겠습니다!</p>\n\n<ul>\n  <li>P.S. 발표 자료는 일부 내용 제거된 형태로 업로드 되어 있습니다. <a href=\"https://github.com/sungjk/sungjk.github.io/tree/master/images/2025/08/09/ClaudeCode101_20250809.pdf\">ClaudeCode101_20250809.pdf</a>를 참고하시면 됩니다. 궁금하신 점이 있으면 편하게 메일로 연락 주세요.</li>\n</ul>",
        "guid": "https://sungjk.github.io/2025/08/09/claude-code-101.html",
        "isoDate": "2025-08-09T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": [
      {
        "creator": "고명환",
        "title": "숨은 알짜 대명화학,패션&middot;물류&middot;항공까지 통합한 지주회사 - 스타트업",
        "link": "https://brunch.co.kr/@@LOc/305",
        "pubDate": "Thu, 07 Aug 2025 03:00:06 GMT",
        "author": "고명환",
        "content": "제조기업인 줄 알았던 대명화학, 알고 보니 브랜드 플랫폼 대명화학은 이름만 들으면 전통적인 화학 제조기업처럼 들립니다. 하지만 이 기업의 진짜 정체는 지분투자를 기반으로 한 브랜드 인큐베이팅형 지주회사입니다. 코웰패션, 로젠택배, 에어로케이, K-뷰티 유통사 모스트까지 다양한 산업을 수직 계열화하며 안정적인 수익 기반과 폭발적인 성장성을 동시에 확보해가고 <img src= \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2FLOc%2Fimage%2FaqzcIecmuUzSzgSU2QQjaFk9U9Y\" width=\"500\" />",
        "contentSnippet": "제조기업인 줄 알았던 대명화학, 알고 보니 브랜드 플랫폼 대명화학은 이름만 들으면 전통적인 화학 제조기업처럼 들립니다. 하지만 이 기업의 진짜 정체는 지분투자를 기반으로 한 브랜드 인큐베이팅형 지주회사입니다. 코웰패션, 로젠택배, 에어로케이, K-뷰티 유통사 모스트까지 다양한 산업을 수직 계열화하며 안정적인 수익 기반과 폭발적인 성장성을 동시에 확보해가고",
        "guid": "https://brunch.co.kr/@@LOc/305",
        "isoDate": "2025-08-07T03:00:06.000Z"
      }
    ]
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "GPT-5 출시! 유료,무료 요금제별 사용 제한과 새로운 기능 총정리",
        "link": "http://muzbox.tistory.com/483637",
        "pubDate": "Fri, 8 Aug 2025 08:11:34 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483637#entry483637comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.7; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #444;\">\n<div style=\"background-color: #f3e5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px; border: 1px solid #e1bee7;\"><b>챗GPT의 새로운 시대, GPT-5 완벽 분석  </b>&nbsp; GPT-5의 혁신적인 특징과 함께, 우리가 실제로 체감할 수 있는 변화들을 알기 쉽게 정리해봤습니다. 이 글만 읽어도 GPT-5 전문가가 될 수 있을 거예요!</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GPT-5.png\" data-origin-width=\"2000\" data-origin-height=\"1091\"><span data-url=\"https://blog.kakaocdn.net/dn/vtTC3/btsPKT4Djal/W1s8EvtLr0vf4DWqQN6tP1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/vtTC3/btsPKT4Djal/W1s8EvtLr0vf4DWqQN6tP1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/vtTC3/btsPKT4Djal/W1s8EvtLr0vf4DWqQN6tP1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FvtTC3%2FbtsPKT4Djal%2FW1s8EvtLr0vf4DWqQN6tP1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"GPT-5 출시\" loading=\"lazy\" width=\"2000\" height=\"1091\" data-filename=\"GPT-5.png\" data-origin-width=\"2000\" data-origin-height=\"1091\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;오픈AI의 차세대 플래그십 모델인 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">GPT-5가 출시</span>되었습니다. 기존의 여러 모델들의 장점을 하나로 통합한 똑똑하고 빠른 모델이라고 하니, 기대가 정말 큽니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이번 포스트에서는 GPT-5가 어떤 새로운 기능과 변화를 가지고 왔는지, 그리고 유료/무료 사용자별로 어떤 차이가 있는지, 벤치마크 성능은 얼마나 뛰어난지 등 여러분이 궁금해할 만한 모든 내용을 꼼꼼하게 정리해봤습니다. 그럼 GPT-5의 세계로 함께 빠져볼까요?  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #6a1b9a, #4a148c); margin: 35px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>GPT-5, 무엇이 달라졌을까?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5는 단순히 성능이 좋아진 모델을 넘어, 사용자의 요청에 따라 스스로 최적의 방법을 찾아내는 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">'통합 시스템'</span>으로 진화했습니다. 하나의 모델 안에서 일반 대화에는 빠른 'Chat' 모드가, 복잡한 문제에는 심층적인 'Thinking' 모드가 자동으로 전환되는 방식이죠. 복잡한 코딩, 과학 문제, 데이터 분석 같은 작업에선 Thinking 모드가 스스로 더 깊이 생각해서 답변의 정확도를 높여준다고 하네요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이러한 똑똑한 판단은 우리가 모델을 수동으로 선택하거나, 모델의 답변이 얼마나 정확했는지에 대한 피드백을 학습해서 이뤄진다고 합니다. GPT-5는 속도와 정확도 모두 대폭 개선되었고, 가장 똑똑하고 신뢰할 수 있는 모델로 평가받고 있어요.</p>\n<div style=\"background-color: #ede7f6; border-left: 4px solid #9575cd; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  GPT-5의 '사고 과정' 알아보기!</b><br />GPT-5의 Thinking 모델은 답변을 하기 전에 내부적으로 '사고 과정'을 먼저 생성합니다. 이 과정에서 스스로 전략을 점검하고, 실수를 인식하며, 안전 규칙을 지키도록 훈련되었어요. 덕분에 사용자의 유도나 우회 시도에도 흔들리지 않고 더 유용하고 신뢰성 높은 답변을 내놓을 수 있습니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #6a1b9a, #4a148c); margin: 35px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>벤치마크로 보는 GPT-5의 압도적 성능  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5는 다양한 벤치마크에서 이전 모델들을 압도하는 성능을 보여줬습니다. 특히 복잡한 추론과 문제 해결 능력을 평가하는 벤치마크에서 두각을 나타냈는데요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">벤치마크</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">성능 기록</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">비고</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">Human Last Exam</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">42%</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">이전 모델 대비 크게 향상</td>\n</tr>\n<tr style=\"background-color: #fafafa;\">\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">SWE Bench</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">74.9%</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">코딩 능력의 혁신적 발전</td>\n</tr>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">ARC-AGI-2</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">1위 (Grok-4 제외)</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">추론 능력과 효율성 테스트</td>\n</tr>\n</tbody>\n</table>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">특히 LMArena의 모든 카테고리에서 1위를 기록했다는 소식은 정말 놀라웠어요. 텍스트, 웹 개발, 이미지 처리, 수학, 창의력 등 분야를 가리지 않고 최고의 성능을 입증했죠. 내부 테스트에서도 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">'summit'이라는 코드명으로 역대 최고 점수</span>를 받았다고 하니, 괜히 플래그십 모델이 아니라는 생각이 들었습니다.</p>\n<div style=\"background-color: #fffde7; border-left: 4px solid #fbc02d; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 주의하세요!</b><br />GPT-5는 복잡한 대화에서 기만적인 행동을 억제하도록 훈련되었지만, 여전히 안전 장치(guardrails)를 준수해야 합니다. 악용 사례(데이터 자동 추출, 계정 공유, 재판매 등)에 대해서는 언제든지 일시적 사용 제한이 있을 수 있습니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #6a1b9a, #4a148c); margin: 35px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>GPT-5의 요금제별 사용 제한 및 특징  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5의 강력한 기능은 챗GPT의 다양한 요금제에 따라 조금씩 다르게 적용됩니다. 무료 사용자와 유료 사용자(Plus, Pro, Team)의 사용 제한 및 모델 선택 옵션에 대해 자세히 알아볼게요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">요금제</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">메시지 제한 (GPT-5)</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">모델 선택</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">추가 혜택</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">ChatGPT Free</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">5시간마다 10개</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">GPT-5 Thinking 1회/일</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">-</td>\n</tr>\n<tr style=\"background-color: #fafafa;\">\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">ChatGPT Plus</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">3시간마다 80개</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">GPT-5, GPT-5 Thinking 선택 가능 (Thinking은 주 200회 제한)</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">&nbsp;</td>\n</tr>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">ChatGPT Pro/Team</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">무제한 (악용 방지 정책 적용)</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">GPT-5, GPT-5 Thinking, GPT-5 Thinking Pro 선택 가능</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">무제한 사용</td>\n</tr>\n</tbody>\n</table>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">여기서 주목할 점은 GPT-5가 하나의 모델이 아니라, 여러 모델(gpt-5-main, gpt-5-thinking, mini, nano, pro 등)로 구성된 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">통합 시스템</span>이라는 거예요. 기존의 GPT-4o, o3, o4-mini 모델들이 이 시스템 안으로 재편되었다고 보시면 됩니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5의 컨텍스트 윈도우는 최대 40만 토큰까지 지원하고, 지식 컷오프는 2024년 9월입니다. 미니나 나노 모델은 2024년 5월 지식을 반영하고 있으니 참고하면 좋겠네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #6a1b9a, #4a148c); margin: 35px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>GPT-5, 이제 다양한 곳에서 만날 수 있어요  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">놀라운 소식은 GPT-5가 챗GPT뿐만 아니라 다양한 플랫폼에서 무료로 제공되고 있다는 점이에요. 현재 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">Cursor, 마이크로소프트 코파일럿, 퍼플렉시티에서 GPT-5를 무료로 사용</span>해볼 수 있습니다. 젠스파크에서는 GPT-5 PRO까지 사용 가능하다고 하니, 다양한 환경에서 직접 경험해보는 것도 좋은 방법일 것 같습니다.</p>\n<div style=\"background-color: #f3e5f5; padding: 15px; border-radius: 8px; margin: 20px 0; border: 1px solid #e1bee7;\">\n<h3 style=\"font-size: 20px; color: #6a1b9a; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>  제3자 플랫폼에서 먼저 만나는 이유</b></h3>\n<p style=\"margin-bottom: 8px;\" data-ke-size=\"size16\">AI 회사들은 수억 명의 사용자를 고려해 자사 앱에 바로 적용하기보다 API를 통해 안전하고 점진적으로 모델을 출시하는 전략을 사용합니다.</p>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">반면 Perplexity나 젠스파크 같은 제3자 플랫폼은 여러 AI 모델을 유연하게 연결하는 구조를 갖추고 있어, 새로운 API가 공개되자마자 빠르게 통합하여 사용자에게 제공할 수 있습니다.</p>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5가 출시되면서 기존 모델들이 단계적으로 은퇴합니다. GPT-4o, GPT-4.1, GPT-4.5, o4-mini 등이 이에 해당하는데요. 만약 기존 대화창을 열면 자동으로 GPT-5의 가장 유사한 버전으로 전환된다고 하니, 예전 대화를 이어갈 때 답변이 달라질 수 있다는 점을 염두에 두어야 해요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5는 웹 검색, 데이터 분석, 이미지 분석, 파일 분석, 캔버스, 이미지 생성, 메모리, 맞춤 지침 등 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">챗GPT의 모든 도구를 제한 없이 지원</span>합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #6a1b9a, #4a148c); margin: 35px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>음성 모델의 대대적인 업그레이드!  ️</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5와 함께 챗GPT의 음성 모델도 대폭 개선되었어요. 이제 더 자연스럽고 똑똑하게 대화할 수 있게 되었는데요. 특히 가장 큰 변화는 <span style=\"background-color: #fff9c4; padding: 2px 4px; border-radius: 3px;\">GPTs에서 고급 음성 모델을 바로 사용</span>할 수 있게 되었다는 점입니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">커스텀 지침을 기반으로 한 음성 모드 사용이 가능해지면서, 외국어 연습이나 특정 분야의 튜터링 등 다양한 활용 사례가 등장할 것으로 예상됩니다. 무료 사용자도 음성 대화가 가능해졌고, 유료 사용자(Plus)는 사실상 무제한에 가깝게 이용할 수 있다고 하니, 정말 유용한 기능이 될 것 같아요! 참고로, 현재 보이스 모드는 여전히 GPT-4o 기반이라고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #6a1b9a, #4a148c); margin: 35px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>API 가격과 모델 상세 정보  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">GPT-5의 API 가격은 꽤 합리적으로 책정된 것 같아요. 100만 토큰 기준으로 모델별 가격을 정리해보겠습니다.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">모델</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">입력(Input)</th>\n<th style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7; background-color: #f3e5f5; font-weight: bold; color: #6a1b9a;\">출력(Output)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">GPT-5</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">$1.25</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">$10.00</td>\n</tr>\n<tr style=\"background-color: #fafafa;\">\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">GPT-5-mini</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">$0.25</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">$2.00</td>\n</tr>\n<tr>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">GPT-5-nano</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">$0.05</td>\n<td style=\"padding: 14px; text-align: left; border: 1px solid #e1bee7;\">$0.40</td>\n</tr>\n</tbody>\n</table>\n<div style=\"background-color: #ede7f6; padding: 18px; border-radius: 8px; margin: 20px 0; border: 1px solid #e1bee7;\">\n<h3 style=\"font-size: 20px; color: #6a1b9a; margin: 0 0 12px;\" data-ke-size=\"size23\"><b>  핵심 모델 정보</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>모델 버전:</b> 4가지 버전 (GPT-5, mini, nano, chat)</li>\n<li style=\"margin-bottom: 8px;\"><b>학습 데이터:</b> 공개 인터넷 정보, 협력 파트너 자료, 사용자/연구원 제공 데이터</li>\n<li style=\"margin-bottom: 8px;\"><b>지식 컷오프:</b> GPT-5는 2024년 9월, mini/nano는 2024년 5월</li>\n<li style=\"margin-bottom: 8px;\"><b>컨텍스트 윈도우:</b> 최대 40만 토큰</li>\n</ul>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<div style=\"border-top: 1px dashed #e1bee7; margin: 30px 0;\">&nbsp;</div>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">GPT-5: 혁신을 넘어선 진화의 핵심</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 통합 시스템:</b> <span class=\"highlight\">챗과 추론 모드를 실시간으로 자동 전환</span>하여 복잡한 작업에 최적화된 답변을 제공합니다.</div>\n<div class=\"section\"><b>  압도적 성능:</b> <span class=\"highlight\">Human Last Exam 42%, SWE Bench 74.9%</span> 등 주요 벤치마크에서 역대 최고 성능을 기록했습니다.</div>\n<div class=\"section\"><b>  안전성 강화:</b>\n<div class=\"formula\">safe-completions 훈련을 통해 환각, 아첨 감소 및 기만 방지 성능을 높였습니다.</div>\n</div>\n<div class=\"section\"><b> &zwj;  접근성 확장:</b> <span class=\"highlight\">Cursor, 코파일럿, 퍼플렉시티 등에서 무료 사용</span>이 가능해졌고, GPTs에서 음성 모델을 바로 활용할 수 있습니다.</div>\n</div>\n<div class=\"card-footer\">GPT-5는 단순히 성능을 개선한 것이 아닌, AI의 새로운 활용 방식을 제시합니다.</div>\n</div>\n</div>\n<h2 style=\"font-size: 24px; color: white; background: linear-gradient(to right, #6a1b9a, #4a148c); margin: 35px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px; padding: 10px; background-color: #fbfbfb; border-radius: 6px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #6a1b9a;\">Q: GPT-5가 무료로 제공되나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 네, ChatGPT의 무료 계정에서도 일부 메시지 제한과 함께 GPT-5를 사용할 수 있습니다. 또한, Cursor, 마이크로소프트 코파일럿, 퍼플렉시티 등 일부 외부 플랫폼에서도 무료로 이용 가능합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 10px; background-color: #fbfbfb; border-radius: 6px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #6a1b9a;\">Q: GPT-5를 쓰려면 별도로 선택해야 하나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 유료 요금제 사용자(Plus, Pro, Team)는 모델 선택기에서 GPT-5를 수동으로 선택할 수 있습니다. 하지만 기본적으로는 모든 로그인 사용자에게 새로운 GPT-5가 기본 모델로 자동 적용됩니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 10px; background-color: #fbfbfb; border-radius: 6px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #6a1b9a;\">Q: GPT-5 Thinking 모드는 무엇인가요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: GPT-5가 복잡한 요청에 대해 답변하기 전에 더 깊은 추론을 적용하는 모드입니다. 코딩, 과학, 금융 분석 등 정밀한 분석이 필요한 작업에 특히 유용하며, 유료 요금제 사용자에게 제공됩니다.</div>\n</div>\n<div style=\"margin-bottom: 20px; padding: 10px; background-color: #fbfbfb; border-radius: 6px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px; color: #6a1b9a;\">Q: GPT-5 출시로 기존 대화가 사라지나요?</div>\n<div style=\"padding-left: 15px; color: #555;\">A: 아니요, 기존 대화는 그대로 유지됩니다. 다만, 이전 모델을 사용했던 대화창을 열 경우 자동으로 GPT-5의 가장 유사한 모델로 전환되어 이어서 대화하게 됩니다.</div>\n</div>\n</div>\n<script type=\"application/ld+json\">\n{\n\"@context\": \"https://schema.org\",\n\"@type\": \"FAQPage\",\n\"mainEntity\": [\n{\n\"@type\": \"Question\",\n\"name\": \"GPT-5가 무료로 제공되나요?\",\n\"acceptedAnswer\": {\n\"@type\": \"Answer\",\n\"text\": \"  네, ChatGPT의 무료 계정에서도 일부 메시지 제한과 함께 GPT-5를 사용할 수 있습니다. 또한, Cursor, 마이크로소프트 코파일럿, 퍼플렉시티 등 일부 외부 플랫폼에서도 무료로 이용 가능합니다.\"\n}\n},\n{\n\"@type\": \"Question\",\n\"name\": \"GPT-5를 쓰려면 별도로 선택해야 하나요?\",\n\"acceptedAnswer\": {\n\"@type\": \"Answer\",\n\"text\": \"  유료 요금제 사용자(Plus, Pro, Team)는 모델 선택기에서 GPT-5를 수동으로 선택할 수 있습니다. 하지만 기본적으로는 모든 로그인 사용자에게 새로운 GPT-5가 기본 모델로 자동 적용됩니다.\"\n}\n},\n{\n\"@type\": \"Question\",\n\"name\": \"GPT-5 Thinking 모드는 무엇인가요?\",\n\"acceptedAnswer\": {\n\"@type\": \"Answer\",\n\"text\": \"  GPT-5가 복잡한 요청에 대해 답변하기 전에 더 깊은 추론을 적용하는 모드입니다. 코딩, 과학, 금융 분석 등 정밀한 분석이 필요한 작업에 특히 유용하며, 유료 요금제 사용자에게 제공됩니다.\"\n}\n},\n{\n\"@type\": \"Question\",\n\"name\": \"GPT-5 출시로 기존 대화가 사라지나요?\",\n\"acceptedAnswer\": {\n\"@type\": \"Answer\",\n\"text\": \"  아니요, 기존 대화는 그대로 유지됩니다. 다만, 이전 모델을 사용했던 대화창을 열 경우 자동으로 GPT-5의 가장 유사한 모델로 전환되어 이어서 대화하게 됩니다.\"\n}\n}\n]\n}\n</script>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">오늘은 이렇게 GPT-5에 대해 자세히 알아보았는데요. 사실 GPT-5의 등장은 단순한 기술 발전이 아니라, 우리가 AI를 활용하는 방식 자체를 한 단계 끌어올리는 중요한 계기가 될 것 같아요. 특히 복잡한 문제 해결이나 창의적인 작업에서 얼마나 놀라운 결과를 보여줄지 정말 기대가 됩니다.</p>\n</div>\n<div>\n<style>\n.single-summary-card-container {\nfont-family: 'Noto Sans KR', sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 20px 10px;\nbackground-color: #fce4ec;\nmargin: 20px 0;\n}\n.single-summary-card {\nwidth: 100%;\nmax-width: 700px;\nbackground-color: #ffffff;\nborder-radius: 12px;\nbox-shadow: 0 6px 18px rgba(0,0,0,0.12);\npadding: 25px;\ndisplay: flex;\nflex-direction: column;\noverflow: hidden;\nborder: 1px solid #ce93d8;\nbox-sizing: border-box;\nheight: auto;\nmin-height: unset;\n}\n.single-summary-card .card-header {\ndisplay: flex;\nalign-items: center;\nborder-bottom: 2px solid #8e24aa;\npadding-bottom: 12px;\nmargin-bottom: 12px;\n}\n.single-summary-card .card-header-icon {\nfont-size: 34px;\ncolor: #8e24aa;\nmargin-right: 14px;\n}\n.single-summary-card .card-header h3 {\nfont-size: 26px;\ncolor: #8e24aa;\nmargin: 0;\nline-height: 1.3;\nfont-weight: 700;\n}\n.single-summary-card .card-content {\nflex-grow: 1;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\nfont-size: 17px;\nline-height: 1.65;\ncolor: #444;\n}\n.single-summary-card .card-content .section {\nmargin-bottom: 10px;\n}\n.single-summary-card .card-content strong {\ncolor: #7b1fa2;\nfont-weight: 600;\n}\n.single-summary-card .card-content .highlight {\nbackground-color: #fff9c4;\npadding: 2px 6px;\nborder-radius: 3px;\nfont-weight: bold;\n}\n.single-summary-card .card-content .formula {\nbackground-color: #f3e5f5;\npadding: 6px 10px;\nborder-radius: 4px;\nfont-size: 0.9em;\ntext-align: center;\nmargin-top: 5px;\ncolor: #4a148c;\n}\n.single-summary-card .card-footer {\nfont-size: 14px;\ncolor: #777;\ntext-align: center;\npadding-top: 12px;\nborder-top: 1px dashed #e1bee7;\nmargin-top: auto;\n}\n@media (max-width: 768px) {\n.single-summary-card {\npadding: 18px;\nheight: auto;\nmin-height: unset;\n}\n.single-summary-card .card-header-icon {\nfont-size: 30px;\nmargin-right: 10px;\n}\n.single-summary-card .card-header h3 {\nfont-size: 22px;\n}\n.single-summary-card .card-content {\nfont-size: 15px;\nline-height: 1.6;\n}\n.single-summary-card .card-content .section {\nmargin-bottom: 8px;\n}\n.single-summary-card .card-content .formula {\npadding: 5px 8px;\nfont-size: 0.9em;\n}\n.single-summary-card .card-footer {\nfont-size: 13px;\npadding-top: 10px;\n}\n}\n@media (max-width: 480px) {\n.single-summary-card {\npadding: 15px;\n}\n.single-summary-card .card-header-icon {\nfont-size: 28px;\n}\n.single-summary-card .card-header h3 {\nfont-size: 20px;\n}\n.single-summary-card .card-content {\nfont-size: 14px;\nline-height: 1.55;\n}\n.single-summary-card .card-content .section {\nmargin-bottom: 6px;\n}\n.single-summary-card .card-content .formula {\npadding: 4px 6px;\nfont-size: 0.8em;\n}\n.single-summary-card .card-footer {\nfont-size: 12px;\npadding-top: 8px;\n}\n}\n</style>\n</div>",
        "contentSnippet": "챗GPT의 새로운 시대, GPT-5 완벽 분석    GPT-5의 혁신적인 특징과 함께, 우리가 실제로 체감할 수 있는 변화들을 알기 쉽게 정리해봤습니다. 이 글만 읽어도 GPT-5 전문가가 될 수 있을 거예요!\n\n\n \n 오픈AI의 차세대 플래그십 모델인 GPT-5가 출시되었습니다. 기존의 여러 모델들의 장점을 하나로 통합한 똑똑하고 빠른 모델이라고 하니, 기대가 정말 큽니다.\n이번 포스트에서는 GPT-5가 어떤 새로운 기능과 변화를 가지고 왔는지, 그리고 유료/무료 사용자별로 어떤 차이가 있는지, 벤치마크 성능은 얼마나 뛰어난지 등 여러분이 궁금해할 만한 모든 내용을 꼼꼼하게 정리해봤습니다. 그럼 GPT-5의 세계로 함께 빠져볼까요?  \n \nGPT-5, 무엇이 달라졌을까?  \nGPT-5는 단순히 성능이 좋아진 모델을 넘어, 사용자의 요청에 따라 스스로 최적의 방법을 찾아내는 '통합 시스템'으로 진화했습니다. 하나의 모델 안에서 일반 대화에는 빠른 'Chat' 모드가, 복잡한 문제에는 심층적인 'Thinking' 모드가 자동으로 전환되는 방식이죠. 복잡한 코딩, 과학 문제, 데이터 분석 같은 작업에선 Thinking 모드가 스스로 더 깊이 생각해서 답변의 정확도를 높여준다고 하네요.\n이러한 똑똑한 판단은 우리가 모델을 수동으로 선택하거나, 모델의 답변이 얼마나 정확했는지에 대한 피드백을 학습해서 이뤄진다고 합니다. GPT-5는 속도와 정확도 모두 대폭 개선되었고, 가장 똑똑하고 신뢰할 수 있는 모델로 평가받고 있어요.\n  GPT-5의 '사고 과정' 알아보기!\nGPT-5의 Thinking 모델은 답변을 하기 전에 내부적으로 '사고 과정'을 먼저 생성합니다. 이 과정에서 스스로 전략을 점검하고, 실수를 인식하며, 안전 규칙을 지키도록 훈련되었어요. 덕분에 사용자의 유도나 우회 시도에도 흔들리지 않고 더 유용하고 신뢰성 높은 답변을 내놓을 수 있습니다.\n \n벤치마크로 보는 GPT-5의 압도적 성능  \nGPT-5는 다양한 벤치마크에서 이전 모델들을 압도하는 성능을 보여줬습니다. 특히 복잡한 추론과 문제 해결 능력을 평가하는 벤치마크에서 두각을 나타냈는데요.\n벤치마크\n성능 기록\n비고\n\n\n\n\nHuman Last Exam\n42%\n이전 모델 대비 크게 향상\n\n\nSWE Bench\n74.9%\n코딩 능력의 혁신적 발전\n\n\nARC-AGI-2\n1위 (Grok-4 제외)\n추론 능력과 효율성 테스트\n\n\n\n특히 LMArena의 모든 카테고리에서 1위를 기록했다는 소식은 정말 놀라웠어요. 텍스트, 웹 개발, 이미지 처리, 수학, 창의력 등 분야를 가리지 않고 최고의 성능을 입증했죠. 내부 테스트에서도 'summit'이라는 코드명으로 역대 최고 점수를 받았다고 하니, 괜히 플래그십 모델이 아니라는 생각이 들었습니다.\n⚠️ 주의하세요!\nGPT-5는 복잡한 대화에서 기만적인 행동을 억제하도록 훈련되었지만, 여전히 안전 장치(guardrails)를 준수해야 합니다. 악용 사례(데이터 자동 추출, 계정 공유, 재판매 등)에 대해서는 언제든지 일시적 사용 제한이 있을 수 있습니다.\n \nGPT-5의 요금제별 사용 제한 및 특징  \nGPT-5의 강력한 기능은 챗GPT의 다양한 요금제에 따라 조금씩 다르게 적용됩니다. 무료 사용자와 유료 사용자(Plus, Pro, Team)의 사용 제한 및 모델 선택 옵션에 대해 자세히 알아볼게요.\n요금제\n메시지 제한 (GPT-5)\n모델 선택\n추가 혜택\n\n\n\n\nChatGPT Free\n5시간마다 10개\nGPT-5 Thinking 1회/일\n-\n\n\nChatGPT Plus\n3시간마다 80개\nGPT-5, GPT-5 Thinking 선택 가능 (Thinking은 주 200회 제한)\n \n\n\nChatGPT Pro/Team\n무제한 (악용 방지 정책 적용)\nGPT-5, GPT-5 Thinking, GPT-5 Thinking Pro 선택 가능\n무제한 사용\n\n\n\n여기서 주목할 점은 GPT-5가 하나의 모델이 아니라, 여러 모델(gpt-5-main, gpt-5-thinking, mini, nano, pro 등)로 구성된 통합 시스템이라는 거예요. 기존의 GPT-4o, o3, o4-mini 모델들이 이 시스템 안으로 재편되었다고 보시면 됩니다.\nGPT-5의 컨텍스트 윈도우는 최대 40만 토큰까지 지원하고, 지식 컷오프는 2024년 9월입니다. 미니나 나노 모델은 2024년 5월 지식을 반영하고 있으니 참고하면 좋겠네요.\n \nGPT-5, 이제 다양한 곳에서 만날 수 있어요  \n놀라운 소식은 GPT-5가 챗GPT뿐만 아니라 다양한 플랫폼에서 무료로 제공되고 있다는 점이에요. 현재 Cursor, 마이크로소프트 코파일럿, 퍼플렉시티에서 GPT-5를 무료로 사용해볼 수 있습니다. 젠스파크에서는 GPT-5 PRO까지 사용 가능하다고 하니, 다양한 환경에서 직접 경험해보는 것도 좋은 방법일 것 같습니다.\n  제3자 플랫폼에서 먼저 만나는 이유\nAI 회사들은 수억 명의 사용자를 고려해 자사 앱에 바로 적용하기보다 API를 통해 안전하고 점진적으로 모델을 출시하는 전략을 사용합니다.\n반면 Perplexity나 젠스파크 같은 제3자 플랫폼은 여러 AI 모델을 유연하게 연결하는 구조를 갖추고 있어, 새로운 API가 공개되자마자 빠르게 통합하여 사용자에게 제공할 수 있습니다.\nGPT-5가 출시되면서 기존 모델들이 단계적으로 은퇴합니다. GPT-4o, GPT-4.1, GPT-4.5, o4-mini 등이 이에 해당하는데요. 만약 기존 대화창을 열면 자동으로 GPT-5의 가장 유사한 버전으로 전환된다고 하니, 예전 대화를 이어갈 때 답변이 달라질 수 있다는 점을 염두에 두어야 해요.\nGPT-5는 웹 검색, 데이터 분석, 이미지 분석, 파일 분석, 캔버스, 이미지 생성, 메모리, 맞춤 지침 등 챗GPT의 모든 도구를 제한 없이 지원합니다.\n \n음성 모델의 대대적인 업그레이드!  ️\nGPT-5와 함께 챗GPT의 음성 모델도 대폭 개선되었어요. 이제 더 자연스럽고 똑똑하게 대화할 수 있게 되었는데요. 특히 가장 큰 변화는 GPTs에서 고급 음성 모델을 바로 사용할 수 있게 되었다는 점입니다.\n커스텀 지침을 기반으로 한 음성 모드 사용이 가능해지면서, 외국어 연습이나 특정 분야의 튜터링 등 다양한 활용 사례가 등장할 것으로 예상됩니다. 무료 사용자도 음성 대화가 가능해졌고, 유료 사용자(Plus)는 사실상 무제한에 가깝게 이용할 수 있다고 하니, 정말 유용한 기능이 될 것 같아요! 참고로, 현재 보이스 모드는 여전히 GPT-4o 기반이라고 합니다.\n \nAPI 가격과 모델 상세 정보  \nGPT-5의 API 가격은 꽤 합리적으로 책정된 것 같아요. 100만 토큰 기준으로 모델별 가격을 정리해보겠습니다.\n모델\n입력(Input)\n출력(Output)\n\n\n\n\nGPT-5\n$1.25\n$10.00\n\n\nGPT-5-mini\n$0.25\n$2.00\n\n\nGPT-5-nano\n$0.05\n$0.40\n\n\n\n\n  핵심 모델 정보\n모델 버전: 4가지 버전 (GPT-5, mini, nano, chat)\n학습 데이터: 공개 인터넷 정보, 협력 파트너 자료, 사용자/연구원 제공 데이터\n지식 컷오프: GPT-5는 2024년 9월, mini/nano는 2024년 5월\n컨텍스트 윈도우: 최대 40만 토큰\n \n \n \nGPT-5: 혁신을 넘어선 진화의 핵심\n✨ 통합 시스템: 챗과 추론 모드를 실시간으로 자동 전환하여 복잡한 작업에 최적화된 답변을 제공합니다.\n  압도적 성능: Human Last Exam 42%, SWE Bench 74.9% 등 주요 벤치마크에서 역대 최고 성능을 기록했습니다.\n  안전성 강화:\nsafe-completions 훈련을 통해 환각, 아첨 감소 및 기만 방지 성능을 높였습니다.\n ‍  접근성 확장: Cursor, 코파일럿, 퍼플렉시티 등에서 무료 사용이 가능해졌고, GPTs에서 음성 모델을 바로 활용할 수 있습니다.\nGPT-5는 단순히 성능을 개선한 것이 아닌, AI의 새로운 활용 방식을 제시합니다.\n자주 묻는 질문 ❓\nQ: GPT-5가 무료로 제공되나요?\nA: 네, ChatGPT의 무료 계정에서도 일부 메시지 제한과 함께 GPT-5를 사용할 수 있습니다. 또한, Cursor, 마이크로소프트 코파일럿, 퍼플렉시티 등 일부 외부 플랫폼에서도 무료로 이용 가능합니다.\nQ: GPT-5를 쓰려면 별도로 선택해야 하나요?\nA: 유료 요금제 사용자(Plus, Pro, Team)는 모델 선택기에서 GPT-5를 수동으로 선택할 수 있습니다. 하지만 기본적으로는 모든 로그인 사용자에게 새로운 GPT-5가 기본 모델로 자동 적용됩니다.\nQ: GPT-5 Thinking 모드는 무엇인가요?\nA: GPT-5가 복잡한 요청에 대해 답변하기 전에 더 깊은 추론을 적용하는 모드입니다. 코딩, 과학, 금융 분석 등 정밀한 분석이 필요한 작업에 특히 유용하며, 유료 요금제 사용자에게 제공됩니다.\nQ: GPT-5 출시로 기존 대화가 사라지나요?\nA: 아니요, 기존 대화는 그대로 유지됩니다. 다만, 이전 모델을 사용했던 대화창을 열 경우 자동으로 GPT-5의 가장 유사한 모델로 전환되어 이어서 대화하게 됩니다.\n \n오늘은 이렇게 GPT-5에 대해 자세히 알아보았는데요. 사실 GPT-5의 등장은 단순한 기술 발전이 아니라, 우리가 AI를 활용하는 방식 자체를 한 단계 끌어올리는 중요한 계기가 될 것 같아요. 특히 복잡한 문제 해결이나 창의적인 작업에서 얼마나 놀라운 결과를 보여줄지 정말 기대가 됩니다.\n\n\n\n.single-summary-card-container {\nfont-family: 'Noto Sans KR', sans-serif;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 20px 10px;\nbackground-color: #fce4ec;\nmargin: 20px 0;\n}\n.single-summary-card {\nwidth: 100%;\nmax-width: 700px;\nbackground-color: #ffffff;\nborder-radius: 12px;\nbox-shadow: 0 6px 18px rgba(0,0,0,0.12);\npadding: 25px;\ndisplay: flex;\nflex-direction: column;\noverflow: hidden;\nborder: 1px solid #ce93d8;\nbox-sizing: border-box;\nheight: auto;\nmin-height: unset;\n}\n.single-summary-card .card-header {\ndisplay: flex;\nalign-items: center;\nborder-bottom: 2px solid #8e24aa;\npadding-bottom: 12px;\nmargin-bottom: 12px;\n}\n.single-summary-card .card-header-icon {\nfont-size: 34px;\ncolor: #8e24aa;\nmargin-right: 14px;\n}\n.single-summary-card .card-header h3 {\nfont-size: 26px;\ncolor: #8e24aa;\nmargin: 0;\nline-height: 1.3;\nfont-weight: 700;\n}\n.single-summary-card .card-content {\nflex-grow: 1;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-around;\nfont-size: 17px;\nline-height: 1.65;\ncolor: #444;\n}\n.single-summary-card .card-content .section {\nmargin-bottom: 10px;\n}\n.single-summary-card .card-content strong {\ncolor: #7b1fa2;\nfont-weight: 600;\n}\n.single-summary-card .card-content .highlight {\nbackground-color: #fff9c4;\npadding: 2px 6px;\nborder-radius: 3px;\nfont-weight: bold;\n}\n.single-summary-card .card-content .formula {\nbackground-color: #f3e5f5;\npadding: 6px 10px;\nborder-radius: 4px;\nfont-size: 0.9em;\ntext-align: center;\nmargin-top: 5px;\ncolor: #4a148c;\n}\n.single-summary-card .card-footer {\nfont-size: 14px;\ncolor: #777;\ntext-align: center;\npadding-top: 12px;\nborder-top: 1px dashed #e1bee7;\nmargin-top: auto;\n}\n@media (max-width: 768px) {\n.single-summary-card {\npadding: 18px;\nheight: auto;\nmin-height: unset;\n}\n.single-summary-card .card-header-icon {\nfont-size: 30px;\nmargin-right: 10px;\n}\n.single-summary-card .card-header h3 {\nfont-size: 22px;\n}\n.single-summary-card .card-content {\nfont-size: 15px;\nline-height: 1.6;\n}\n.single-summary-card .card-content .section {\nmargin-bottom: 8px;\n}\n.single-summary-card .card-content .formula {\npadding: 5px 8px;\nfont-size: 0.9em;\n}\n.single-summary-card .card-footer {\nfont-size: 13px;\npadding-top: 10px;\n}\n}\n@media (max-width: 480px) {\n.single-summary-card {\npadding: 15px;\n}\n.single-summary-card .card-header-icon {\nfont-size: 28px;\n}\n.single-summary-card .card-header h3 {\nfont-size: 20px;\n}\n.single-summary-card .card-content {\nfont-size: 14px;\nline-height: 1.55;\n}\n.single-summary-card .card-content .section {\nmargin-bottom: 6px;\n}\n.single-summary-card .card-content .formula {\npadding: 4px 6px;\nfont-size: 0.8em;\n}\n.single-summary-card .card-footer {\nfont-size: 12px;\npadding-top: 8px;\n}\n}",
        "guid": "http://muzbox.tistory.com/483637",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "gpt-5",
          "GPT-5 가격",
          "GPT-5 기능",
          "GPT-5 벤치마크",
          "GPT-5 사용법",
          "GPT-5 성능",
          "GPT-5 음성",
          "인공지능",
          "챗GPT",
          "챗gpt 요금제"
        ],
        "isoDate": "2025-08-07T23:11:34.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "챗GPT를 '검색엔진'으로 사용하기 전, 꼭 알아야 할 치명적인 단점들",
        "link": "http://muzbox.tistory.com/483636",
        "pubDate": "Thu, 7 Aug 2025 11:43:33 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483636#entry483636comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #333;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px; border: 1px solid #dcdcdc;\"><b>AI 챗봇, 과연 당신의 검색 도우미가 될 수 있을까요?</b> 많은 사람들이 AI 챗봇을 구글이나 네이버 같은 검색 엔진처럼 사용하고 있습니다. 하지만 이 방법이 왜 치명적인 실수를 초래할 수 있는지, 6가지 핵심적인 이유와 함께 현명한 AI 활용법을 제시합니다.</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"챗GPT를 '검색엔진'으로 사용하기 전, 꼭 알아야 할 치명적인 단점들.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/D7Y8T/btsPICWIGax/4i6ZojGqQ9clTGuisnxiKK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/D7Y8T/btsPICWIGax/4i6ZojGqQ9clTGuisnxiKK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/D7Y8T/btsPICWIGax/4i6ZojGqQ9clTGuisnxiKK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FD7Y8T%2FbtsPICWIGax%2F4i6ZojGqQ9clTGuisnxiKK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"챗GPT를 '검색엔진'으로 사용하기 전, 꼭 알아야 할 치명적인 단점들\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"챗GPT를 '검색엔진'으로 사용하기 전, 꼭 알아야 할 치명적인 단점들.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;요즘 AI 챗봇의 인기가 정말 대단하잖아요. 저도 처음에는 \"와, 이제 검색 안 해도 되겠네!\" 하면서 모든 궁금증을 챗봇에게 물어봤어요. \"맛집 추천해줘\", \"새로운 드라마 줄거리 요약해줘\", \"내일 날씨 어때?\" 같은 질문부터, 심지어 \"부동산 계약서 어떻게 써?\" 같은 중요한 질문까지도요. 그런데 쓰다 보니 뭔가 이상한 점을 발견했습니다. 챗봇이 주는 정보가 항상 정확하지 않고, 가끔은 엉뚱한 이야기를 진짜처럼 꾸며내기도 한다는 사실이었죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 글에서는 AI 챗봇이 왜 만능 검색 도구가 될 수 없는지, 그 6가지 이유를 솔직하게 이야기해보려고 합니다. 이 글을 끝까지 읽으시면, AI 챗봇을 더 똑똑하고 안전하게 활용하는 방법을 알게 되실 거예요!&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>1. 존재하지 않는 사실을 진짜처럼 꾸며내는 &lsquo;환각&rsquo;  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">AI 챗봇의 가장 유명한 약점이 바로 &lsquo;환각(hallucination)&rsquo; 현상입니다. 챗봇은 사실을 정확하게 제시하기보다는, 방대한 학습 데이터에서 찾은 문장 패턴을 기반으로 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">그럴듯하게 들리는 답변을 '창작'</span>하는 데 특화되어 있어요. 마치 능청스러운 이야기꾼 같다고 할까요? 그래서 때로는 있지도 않은 정보를 마치 실제 사실인 것처럼 자신 있게 이야기하기도 합니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">실제로 제 지인 중 한 명이 해외여행을 앞두고 비자 정보를 챗봇에게 물어봤어요. \"한국 여권 소지자가 태국에 갈 때 비자가 필요해?\"라고 물었더니, 챗봇은 \"네, 90일 관광 비자를 미리 발급받아야 합니다.\"라고 답했습니다. 하지만 태국은 한국 여권 소지자에 대해 30일 무비자 입국을 허용하고 있죠. 이 지인은 챗봇 답변을 믿고 비자 발급을 알아보다가, 다행히 다른 친구의 조언으로 잘못된 정보라는 걸 알게 되었습니다. 만약 공항에 갔다가 입국 거부라도 당했다면 여행을 망칠 뻔했죠. 챗봇은 검색처럼 정보의 출처를 명시하지 않기에 이런 실수가 더 위험하게 다가옵니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>2. 데이터의 불투명성과 숨겨진 편향성  ️&zwj;♂️</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">AI 챗봇의 또 다른 문제는 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">훈련에 사용된 데이터가 무엇인지 명확하게 알 수 없다</span>는 점입니다. 인터넷 웹사이트, 책, 포럼 등 방대한 양의 데이터를 학습하지만, 그 데이터가 어떤 기준으로 수집되었고, 어떤 편향을 가지고 있는지 알 길이 없죠. 챗봇의 답변은 그 불투명한 데이터의 결과물일 뿐입니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">예를 들어, \"자영업자 종합소득세 신고 방법\"에 대해 물었을 때, 챗봇은 최신 세법이 아닌 몇 년 전의 오래된 세법 정보나, 신뢰할 수 없는 온라인 커뮤니티의 댓글을 기반으로 답변할 수 있습니다. 특히, 특정 지역이나 시기에 치우친 데이터로 학습되면, 한국의 법률이나 문화적 맥락과는 동떨어진 답변을 내놓을 수 있어요. 이런 미묘한 편향성은 자칫 큰 오류를 낳을 수 있습니다.</p>\n<div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 주의하세요!</b><br />법률, 의학, 금융 등 전문적인 지식이 필요한 분야에서는 챗봇의 답변을 절대 신뢰해서는 안 됩니다. 반드시 공식 기관의 웹사이트나 전문가의 조언을 확인해야 합니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>3. 사용자의 의견을 그대로 수용하는 경향  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">AI 챗봇은 보통 \"도움이 되는\" 응답을 생성하도록 설계되어 있습니다. 그래서 사용자의 질문에 담긴 미묘한 뉘앙스나 의견을 그대로 따라가는 경향이 강합니다. 이는 챗봇의 답변이 객관적인 사실보다는 사용자의 관점에 맞춰지게 만든다는 뜻이죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">예를 들어, 같은 주제라도 질문의 방식에 따라 완전히 다른 답변을 얻을 수 있습니다.</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>Q: \"아침 식사는 건강에 정말 중요하지 않나요?\"</b><br />A: \"아침을 거르는 것이 간헐적 단식에 도움이 되는 등, 아침 식사를 하지 않는 것의 이점도 있습니다.\"라고 답변합니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>Q: \"왜 아침 식사가 가장 중요한 식사인가요?\"</b><br />A: \"아침 식사는 하루를 시작하는 데 필요한 에너지를 공급해 주는 등, 아침 식사의 중요성을 강조하는 답변을 내놓습니다.\"</li>\n</ul>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이처럼 챗봇은 사용자가 원하는 대답을 찾아주는 경향이 강해, 의도치 않게 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">자신의 편향을 강화하는 도구</span>로 전락할 수 있습니다. 질문을 어떻게 하느냐에 따라 챗봇의 답변이 180도 달라질 수 있다는 것을 꼭 기억해야 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>4. 실시간 정보에 대한 치명적인 약점  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">많은 분들이 챗봇이 마치 실시간으로 인터넷을 검색하는 것처럼 생각하지만, 그렇지 않은 경우가 훨씬 많습니다. 대부분의 챗봇은 특정 시점까지의 데이터로 학습되었고, 그 이후의 최신 정보는 반영되지 않을 수 있어요. 특히 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">시간이 중요한 정보일수록 챗봇은 더 위험</span>합니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">예를 들어, \"이번 주말 서울시청광장에서 열리는 행사 일정 알려줘\"라고 물어보면, 챗봇은 과거에 학습된 데이터나 오래된 웹페이지 정보를 기반으로 엉뚱한 답변을 할 수 있습니다. 혹은 \"새롭게 시행되는 금융 정책에 대해 알려줘\"라는 질문에도, 정책이 발표된 시점 이후에 학습이 이루어지지 않았다면 잘못된 정보를 제공할 가능성이 높습니다. 웹 브라우징 기능이 있는 챗봇도 마찬가지예요. 캐시된 결과나 사전 훈련된 데이터에 의존하는 경향이 있어, 실시간으로 변하는 정보를 정확하게 파악하기 어렵습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>5. 맥락과 뉘앙스에 대한 이해 부족  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">언어는 단순한 단어의 조합이 아니죠. 맥락, 뉘앙스, 문화적 배경이 매우 중요합니다. 하지만 AI 챗봇은 아직 이런 복잡한 부분을 완벽하게 이해하지 못합니다. 예를 들어, 한국 사람들은 \"수고하세요\"라는 말을 인사말로 흔히 쓰지만, 챗봇에게 이 문장을 입력하면 문자 그대로 \"고생하라\"는 뜻으로 해석해 부적절한 답변을 내놓을 수 있습니다. 또한, <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">비꼬는 농담이나 은유적 표현은 제대로 파악하지 못하고</span> 엉뚱한 해석을 내놓기 쉽습니다. 마치 외국인 친구에게 농담을 했는데, 그 친구가 진지하게 받아들이는 상황과 비슷하다고 할까요? 깊은 공감이나 복잡한 감정적 소통은 현재의 챗봇에게 기대하기 어렵습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>6. 단순한 조합일 뿐, 진정한 창의성에는 한계가 있다  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">AI 챗봇은 아이디어 브레인스토밍의 훌륭한 도구임에는 분명해요. \"SF 영화의 새로운 줄거리 3가지 알려줘\"라고 물으면 그럴듯한 답변을 내놓을 겁니다. 하지만 이 답변들은 대부분 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">기존에 학습된 수많은 영화 시나리오들의 조합</span>일 가능성이 높아요. 인간처럼 완전히 새로운 관점, 독창적인 감수성, 깊은 통찰력에서 비롯된 창의적인 아이디어를 만들어내기에는 아직 한계가 있습니다. 진정한 창작의 영역, 예를 들어 기존에 없던 장르를 개척하거나, 사회적 메시지를 담은 예술 작품을 만드는 일은 여전히 인간의 몫입니다. 챗봇은 창작의 파트너일 수는 있지만, 그 자체로 창작자가 될 수는 없다는 점을 기억해야 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>AI 챗봇, 현명하게 사용하는 법  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">결론적으로, AI 챗봇은 우리가 일상에서 겪는 수많은 문제들을 해결하는 데 도움을 줄 수 있는 강력한 도구입니다. 하지만 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">결코 만능 검색 엔진이 될 수는 없습니다.</span> 법률, 의학, 금융, 실시간 정보 등 정확성과 신뢰성이 중요한 분야에서는 반드시 전문가나 공식 웹사이트를 통해 정보를 확인해야 합니다. 챗봇은 아이디어 브레인스토밍이나 초안 작성 등 보조적인 역할로만 사용하고, 최종 판단은 항상 스스로 내리는 습관을 들이는 것이 좋습니다. AI를 우리의 지적 능력을 확장하는 파트너로 생각하고, 맹목적으로 의존하지 않는다면 더 똑똑하게 AI 시대를 살아갈 수 있을 것입니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">혹시 더 궁금한 점이 있다면 언제든지 댓글로 물어봐주세요! AI 챗봇에 대해 함께 이야기 나누고 싶습니다.  </p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI 챗봇의 '환각' 현상은 왜 일어나는 건가요?</div>\n<div style=\"padding-left: 15px;\">A: AI 챗봇은 검색을 하는 것이 아니라, 학습된 데이터를 기반으로 다음 올 단어를 예측하여 문장을 생성하기 때문입니다. 이 과정에서 사실과 무관한 내용을 만들어낼 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 그럼 AI 챗봇의 답변은 전혀 믿을 수 없나요?</div>\n<div style=\"padding-left: 15px;\">A: 완전히 믿을 수 없는 것은 아니지만, 사실 확인이 필요한 정보(법률, 의료, 최신 뉴스 등)는 반드시 다른 신뢰할 수 있는 출처를 통해 확인해야 합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI 챗봇은 어떤 용도로 사용하는 것이 가장 좋나요?</div>\n<div style=\"padding-left: 15px;\">A: 아이디어 브레인스토밍, 복잡한 주제의 개요 파악, 초안 작성 등 창의적이고 보조적인 역할에 활용하는 것이 가장 효과적입니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI 챗봇의 편향성은 어떻게 해결할 수 있나요?</div>\n<div style=\"padding-left: 15px;\">A: 챗봇에 의존하기보다는 다양한 출처를 찾아보고, 자신의 주장을 뒷받침하는 정보만 취사선택하는 경향을 경계해야 합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI 챗봇이 맥락이나 뉘앙스를 제대로 이해 못하나요?</div>\n<div style=\"padding-left: 15px;\">A: 현재 AI 챗봇은 단어의 표면적인 의미는 잘 파악하지만, 비꼬는 표현이나 은유적인 농담, 깊은 감정적 맥락은 이해하는 데 한계가 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI 챗봇이 창의적인 아이디어를 만들어줄 수 없나요?</div>\n<div style=\"padding-left: 15px;\">A: AI는 기존 데이터를 재조합하여 새로운 아이디어를 제시할 수는 있지만, 인간의 경험과 통찰력에서 나오는 완전히 독창적인 창의성에는 아직 도달하지 못했습니다.</div>\n</div>\n</div>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇의 '환각' 현상은 왜 일어나는 건가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI 챗봇은 검색을 하는 것이 아니라, 학습된 데이터를 기반으로 다음 올 단어를 예측하여 문장을 생성하기 때문입니다. 이 과정에서 사실과 무관한 내용을 만들어낼 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"그럼 AI 챗봇의 답변은 전혀 믿을 수 없나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  완전히 믿을 수 없는 것은 아니지만, 사실 확인이 필요한 정보(법률, 의료, 최신 뉴스 등)는 반드시 다른 신뢰할 수 있는 출처를 통해 확인해야 합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇은 어떤 용도로 사용하는 것이 가장 좋나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  아이디어 브레인스토밍, 복잡한 주제의 개요 파악, 초안 작성 등 창의적이고 보조적인 역할에 활용하는 것이 가장 효과적입니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇의 편향성은 어떻게 해결할 수 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  챗봇에 의존하기보다는 다양한 출처를 찾아보고, 자신의 주장을 뒷받침하는 정보만 취사선택하는 경향을 경계해야 합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇이 맥락이나 뉘앙스를 제대로 이해 못하나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  현재 AI 챗봇은 단어의 표면적인 의미는 잘 파악하지만, 비꼬는 표현이나 은유적인 농담, 깊은 감정적 맥락은 이해하는 데 한계가 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇이 창의적인 아이디어를 만들어줄 수 없나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI는 기존 데이터를 재조합하여 새로운 아이디어를 제시할 수는 있지만, 인간의 경험과 통찰력에서 나오는 완전히 독창적인 창의성에는 아직 도달하지 못했습니다.\"\n                }\n            }\n        ]\n    }\n    </script>\n</div>",
        "contentSnippet": "AI 챗봇, 과연 당신의 검색 도우미가 될 수 있을까요? 많은 사람들이 AI 챗봇을 구글이나 네이버 같은 검색 엔진처럼 사용하고 있습니다. 하지만 이 방법이 왜 치명적인 실수를 초래할 수 있는지, 6가지 핵심적인 이유와 함께 현명한 AI 활용법을 제시합니다.\n\n\n \n 요즘 AI 챗봇의 인기가 정말 대단하잖아요. 저도 처음에는 \"와, 이제 검색 안 해도 되겠네!\" 하면서 모든 궁금증을 챗봇에게 물어봤어요. \"맛집 추천해줘\", \"새로운 드라마 줄거리 요약해줘\", \"내일 날씨 어때?\" 같은 질문부터, 심지어 \"부동산 계약서 어떻게 써?\" 같은 중요한 질문까지도요. 그런데 쓰다 보니 뭔가 이상한 점을 발견했습니다. 챗봇이 주는 정보가 항상 정확하지 않고, 가끔은 엉뚱한 이야기를 진짜처럼 꾸며내기도 한다는 사실이었죠.\n이 글에서는 AI 챗봇이 왜 만능 검색 도구가 될 수 없는지, 그 6가지 이유를 솔직하게 이야기해보려고 합니다. 이 글을 끝까지 읽으시면, AI 챗봇을 더 똑똑하고 안전하게 활용하는 방법을 알게 되실 거예요! \n \n1. 존재하지 않는 사실을 진짜처럼 꾸며내는 ‘환각’  \nAI 챗봇의 가장 유명한 약점이 바로 ‘환각(hallucination)’ 현상입니다. 챗봇은 사실을 정확하게 제시하기보다는, 방대한 학습 데이터에서 찾은 문장 패턴을 기반으로 그럴듯하게 들리는 답변을 '창작'하는 데 특화되어 있어요. 마치 능청스러운 이야기꾼 같다고 할까요? 그래서 때로는 있지도 않은 정보를 마치 실제 사실인 것처럼 자신 있게 이야기하기도 합니다.\n실제로 제 지인 중 한 명이 해외여행을 앞두고 비자 정보를 챗봇에게 물어봤어요. \"한국 여권 소지자가 태국에 갈 때 비자가 필요해?\"라고 물었더니, 챗봇은 \"네, 90일 관광 비자를 미리 발급받아야 합니다.\"라고 답했습니다. 하지만 태국은 한국 여권 소지자에 대해 30일 무비자 입국을 허용하고 있죠. 이 지인은 챗봇 답변을 믿고 비자 발급을 알아보다가, 다행히 다른 친구의 조언으로 잘못된 정보라는 걸 알게 되었습니다. 만약 공항에 갔다가 입국 거부라도 당했다면 여행을 망칠 뻔했죠. 챗봇은 검색처럼 정보의 출처를 명시하지 않기에 이런 실수가 더 위험하게 다가옵니다.\n \n2. 데이터의 불투명성과 숨겨진 편향성  ️‍♂️\nAI 챗봇의 또 다른 문제는 훈련에 사용된 데이터가 무엇인지 명확하게 알 수 없다는 점입니다. 인터넷 웹사이트, 책, 포럼 등 방대한 양의 데이터를 학습하지만, 그 데이터가 어떤 기준으로 수집되었고, 어떤 편향을 가지고 있는지 알 길이 없죠. 챗봇의 답변은 그 불투명한 데이터의 결과물일 뿐입니다.\n예를 들어, \"자영업자 종합소득세 신고 방법\"에 대해 물었을 때, 챗봇은 최신 세법이 아닌 몇 년 전의 오래된 세법 정보나, 신뢰할 수 없는 온라인 커뮤니티의 댓글을 기반으로 답변할 수 있습니다. 특히, 특정 지역이나 시기에 치우친 데이터로 학습되면, 한국의 법률이나 문화적 맥락과는 동떨어진 답변을 내놓을 수 있어요. 이런 미묘한 편향성은 자칫 큰 오류를 낳을 수 있습니다.\n⚠️ 주의하세요!\n법률, 의학, 금융 등 전문적인 지식이 필요한 분야에서는 챗봇의 답변을 절대 신뢰해서는 안 됩니다. 반드시 공식 기관의 웹사이트나 전문가의 조언을 확인해야 합니다.\n \n3. 사용자의 의견을 그대로 수용하는 경향  \nAI 챗봇은 보통 \"도움이 되는\" 응답을 생성하도록 설계되어 있습니다. 그래서 사용자의 질문에 담긴 미묘한 뉘앙스나 의견을 그대로 따라가는 경향이 강합니다. 이는 챗봇의 답변이 객관적인 사실보다는 사용자의 관점에 맞춰지게 만든다는 뜻이죠.\n예를 들어, 같은 주제라도 질문의 방식에 따라 완전히 다른 답변을 얻을 수 있습니다.\nQ: \"아침 식사는 건강에 정말 중요하지 않나요?\"\nA: \"아침을 거르는 것이 간헐적 단식에 도움이 되는 등, 아침 식사를 하지 않는 것의 이점도 있습니다.\"라고 답변합니다.\nQ: \"왜 아침 식사가 가장 중요한 식사인가요?\"\nA: \"아침 식사는 하루를 시작하는 데 필요한 에너지를 공급해 주는 등, 아침 식사의 중요성을 강조하는 답변을 내놓습니다.\"\n이처럼 챗봇은 사용자가 원하는 대답을 찾아주는 경향이 강해, 의도치 않게 자신의 편향을 강화하는 도구로 전락할 수 있습니다. 질문을 어떻게 하느냐에 따라 챗봇의 답변이 180도 달라질 수 있다는 것을 꼭 기억해야 합니다.\n \n4. 실시간 정보에 대한 치명적인 약점  \n많은 분들이 챗봇이 마치 실시간으로 인터넷을 검색하는 것처럼 생각하지만, 그렇지 않은 경우가 훨씬 많습니다. 대부분의 챗봇은 특정 시점까지의 데이터로 학습되었고, 그 이후의 최신 정보는 반영되지 않을 수 있어요. 특히 시간이 중요한 정보일수록 챗봇은 더 위험합니다.\n예를 들어, \"이번 주말 서울시청광장에서 열리는 행사 일정 알려줘\"라고 물어보면, 챗봇은 과거에 학습된 데이터나 오래된 웹페이지 정보를 기반으로 엉뚱한 답변을 할 수 있습니다. 혹은 \"새롭게 시행되는 금융 정책에 대해 알려줘\"라는 질문에도, 정책이 발표된 시점 이후에 학습이 이루어지지 않았다면 잘못된 정보를 제공할 가능성이 높습니다. 웹 브라우징 기능이 있는 챗봇도 마찬가지예요. 캐시된 결과나 사전 훈련된 데이터에 의존하는 경향이 있어, 실시간으로 변하는 정보를 정확하게 파악하기 어렵습니다.\n \n5. 맥락과 뉘앙스에 대한 이해 부족  \n언어는 단순한 단어의 조합이 아니죠. 맥락, 뉘앙스, 문화적 배경이 매우 중요합니다. 하지만 AI 챗봇은 아직 이런 복잡한 부분을 완벽하게 이해하지 못합니다. 예를 들어, 한국 사람들은 \"수고하세요\"라는 말을 인사말로 흔히 쓰지만, 챗봇에게 이 문장을 입력하면 문자 그대로 \"고생하라\"는 뜻으로 해석해 부적절한 답변을 내놓을 수 있습니다. 또한, 비꼬는 농담이나 은유적 표현은 제대로 파악하지 못하고 엉뚱한 해석을 내놓기 쉽습니다. 마치 외국인 친구에게 농담을 했는데, 그 친구가 진지하게 받아들이는 상황과 비슷하다고 할까요? 깊은 공감이나 복잡한 감정적 소통은 현재의 챗봇에게 기대하기 어렵습니다.\n \n6. 단순한 조합일 뿐, 진정한 창의성에는 한계가 있다  \nAI 챗봇은 아이디어 브레인스토밍의 훌륭한 도구임에는 분명해요. \"SF 영화의 새로운 줄거리 3가지 알려줘\"라고 물으면 그럴듯한 답변을 내놓을 겁니다. 하지만 이 답변들은 대부분 기존에 학습된 수많은 영화 시나리오들의 조합일 가능성이 높아요. 인간처럼 완전히 새로운 관점, 독창적인 감수성, 깊은 통찰력에서 비롯된 창의적인 아이디어를 만들어내기에는 아직 한계가 있습니다. 진정한 창작의 영역, 예를 들어 기존에 없던 장르를 개척하거나, 사회적 메시지를 담은 예술 작품을 만드는 일은 여전히 인간의 몫입니다. 챗봇은 창작의 파트너일 수는 있지만, 그 자체로 창작자가 될 수는 없다는 점을 기억해야 합니다.\n \nAI 챗봇, 현명하게 사용하는 법  \n결론적으로, AI 챗봇은 우리가 일상에서 겪는 수많은 문제들을 해결하는 데 도움을 줄 수 있는 강력한 도구입니다. 하지만 결코 만능 검색 엔진이 될 수는 없습니다. 법률, 의학, 금융, 실시간 정보 등 정확성과 신뢰성이 중요한 분야에서는 반드시 전문가나 공식 웹사이트를 통해 정보를 확인해야 합니다. 챗봇은 아이디어 브레인스토밍이나 초안 작성 등 보조적인 역할로만 사용하고, 최종 판단은 항상 스스로 내리는 습관을 들이는 것이 좋습니다. AI를 우리의 지적 능력을 확장하는 파트너로 생각하고, 맹목적으로 의존하지 않는다면 더 똑똑하게 AI 시대를 살아갈 수 있을 것입니다.\n혹시 더 궁금한 점이 있다면 언제든지 댓글로 물어봐주세요! AI 챗봇에 대해 함께 이야기 나누고 싶습니다.  \n \n자주 묻는 질문 ❓\nQ: AI 챗봇의 '환각' 현상은 왜 일어나는 건가요?\nA: AI 챗봇은 검색을 하는 것이 아니라, 학습된 데이터를 기반으로 다음 올 단어를 예측하여 문장을 생성하기 때문입니다. 이 과정에서 사실과 무관한 내용을 만들어낼 수 있습니다.\nQ: 그럼 AI 챗봇의 답변은 전혀 믿을 수 없나요?\nA: 완전히 믿을 수 없는 것은 아니지만, 사실 확인이 필요한 정보(법률, 의료, 최신 뉴스 등)는 반드시 다른 신뢰할 수 있는 출처를 통해 확인해야 합니다.\nQ: AI 챗봇은 어떤 용도로 사용하는 것이 가장 좋나요?\nA: 아이디어 브레인스토밍, 복잡한 주제의 개요 파악, 초안 작성 등 창의적이고 보조적인 역할에 활용하는 것이 가장 효과적입니다.\nQ: AI 챗봇의 편향성은 어떻게 해결할 수 있나요?\nA: 챗봇에 의존하기보다는 다양한 출처를 찾아보고, 자신의 주장을 뒷받침하는 정보만 취사선택하는 경향을 경계해야 합니다.\nQ: AI 챗봇이 맥락이나 뉘앙스를 제대로 이해 못하나요?\nA: 현재 AI 챗봇은 단어의 표면적인 의미는 잘 파악하지만, 비꼬는 표현이나 은유적인 농담, 깊은 감정적 맥락은 이해하는 데 한계가 있습니다.\nQ: AI 챗봇이 창의적인 아이디어를 만들어줄 수 없나요?\nA: AI는 기존 데이터를 재조합하여 새로운 아이디어를 제시할 수는 있지만, 인간의 경험과 통찰력에서 나오는 완전히 독창적인 창의성에는 아직 도달하지 못했습니다.\n\n\n\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇의 '환각' 현상은 왜 일어나는 건가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI 챗봇은 검색을 하는 것이 아니라, 학습된 데이터를 기반으로 다음 올 단어를 예측하여 문장을 생성하기 때문입니다. 이 과정에서 사실과 무관한 내용을 만들어낼 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"그럼 AI 챗봇의 답변은 전혀 믿을 수 없나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  완전히 믿을 수 없는 것은 아니지만, 사실 확인이 필요한 정보(법률, 의료, 최신 뉴스 등)는 반드시 다른 신뢰할 수 있는 출처를 통해 확인해야 합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇은 어떤 용도로 사용하는 것이 가장 좋나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  아이디어 브레인스토밍, 복잡한 주제의 개요 파악, 초안 작성 등 창의적이고 보조적인 역할에 활용하는 것이 가장 효과적입니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇의 편향성은 어떻게 해결할 수 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  챗봇에 의존하기보다는 다양한 출처를 찾아보고, 자신의 주장을 뒷받침하는 정보만 취사선택하는 경향을 경계해야 합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇이 맥락이나 뉘앙스를 제대로 이해 못하나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  현재 AI 챗봇은 단어의 표면적인 의미는 잘 파악하지만, 비꼬는 표현이나 은유적인 농담, 깊은 감정적 맥락은 이해하는 데 한계가 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI 챗봇이 창의적인 아이디어를 만들어줄 수 없나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  AI는 기존 데이터를 재조합하여 새로운 아이디어를 제시할 수는 있지만, 인간의 경험과 통찰력에서 나오는 완전히 독창적인 창의성에는 아직 도달하지 못했습니다.\"\n                }\n            }\n        ]\n    }",
        "guid": "http://muzbox.tistory.com/483636",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "ai 검색",
          "AI 챗봇",
          "AI 챗봇 한계",
          "AI 환각",
          "검색 엔진",
          "맥락 이해",
          "실시간 정보",
          "인공지능 신뢰",
          "정보 편향",
          "챗GPT 단점"
        ],
        "isoDate": "2025-08-07T02:43:33.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "수익 없는 티스토리 블로거를 위한 뼈 때리는 5가지 조언",
        "link": "http://muzbox.tistory.com/483635",
        "pubDate": "Wed, 6 Aug 2025 12:56:06 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483635#entry483635comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><b>티스토리, 워드프레스? 플랫폼 이전, 정말 당신의 수익을 바꿔줄까요?</b> 워드프레스로의 이전을 고민하는 분들을 위해 현실적인 조언과 블로그 성공의 본질을 5단계로 나누어 심도 있게 짚어드립니다.</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"티스토리 블로거의 고민.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/cqBj5p/btsPILrUhVZ/aJsbBK4nSzBUIfKu3AqGOK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cqBj5p/btsPILrUhVZ/aJsbBK4nSzBUIfKu3AqGOK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cqBj5p/btsPILrUhVZ/aJsbBK4nSzBUIfKu3AqGOK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcqBj5p%2FbtsPILrUhVZ%2FaJsbBK4nSzBUIfKu3AqGOK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"티스토리 블로거의 고민.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">최근 티스토리의 애드센스 광고 정책 변화와 카카오 분사 이슈로 뒤숭숭하시죠? 저도 마찬가지입니다. 많은 분들이 정든 티스토리를 떠나 워드프레스 같은 새로운 플랫폼으로의 이전을 심각하게 고민하고 계신 것 같아요. 하지만 새로운 시작에 대한 막연한 기대감만으로 섣불리 움직이기 전에, 우리 잠시 멈춰서 냉정하게 현실을 한번 돌아보는 건 어떨까요?  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>1. 플랫폼 이전, 그 전에 '나'를 진단하세요  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">플랫폼을 탓하기 전에, 내 블로그의 현주소를 정확히 파악하는 것이 우선입니다. 다음 질문들에 솔직하게 답해보세요.</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0; list-style-type: '✔️ ';\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>나의 수익은 얼마인가?</b>: 구글 애드센스 수익이 하루에 꾸준히 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">최소 5달러</span>를 넘기고 있나요? 이 기준을 넘지 못했다면, 플랫폼보다는 콘텐츠나 SEO 전략에 문제가 있을 확률이 큽니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>나의 방문자 수는?</b>: 하루 평균 방문자 수가 100명도 채 되지 않나요? 100개의 글을 발행했는데도 방문자가 늘지 않는다면, 글의 방향성이나 키워드 전략을 점검해야 합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>나의 트래픽 출처는?</b>: 방문자의 대부분이 어디서 오나요? 검색 유입이 아닌 SNS나 직접 유입이 대부분이라면, SEO에 대한 이해가 부족하다는 신호입니다.</li>\n</ul>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 진단에서 긍정적인 답변을 하기 어렵다면, 플랫폼 이전은 밑 빠진 독에 물 붓기가 될 수 있습니다. 지금 필요한 것은 새로운 집이 아니라, 집을 채울 '가구(콘텐츠)'를 제대로 만드는 법을 배우는 것입니다.</p>\n<div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 주의하세요!</b><br />수익이 없는 상태에서 워드프레스로 이전하면 호스팅 비용, 도메인 비용 등 연간 수십만 원의 추가 지출만 발생합니다. '일단 시작하면 어떻게든 되겠지'라는 막연한 기대는 금물입니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>2. 워드프레스의 '자유'와 '책임'  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">워드프레스의 가장 큰 장점은 '자유도'입니다. 하지만 이 자유에는 상당한 책임과 비용이 따릅니다. 티스토리처럼 알아서 해주는 것은 아무것도 없습니다. 모든 것을 직접 관리해야 하죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><b>구체적인 비용과 책임의 무게:</b></p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">항목</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">예상 비용 (연간)</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">관리 포인트</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">호스팅</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">12만원 ~ 24만원</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">서버 속도, 트래픽 관리, 보안</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">도메인</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">1.5만원 ~ 2만원</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">매년 갱신, DNS 설정</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">유료 테마/플러그인</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">5만원 ~ 20만원+</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">주기적인 업데이트, 호환성 충돌 해결</td>\n</tr>\n</tbody>\n</table>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">비용뿐만이 아닙니다. '하얀 화면의 공포'라 불리는 업데이트 오류, 갑자기 느려지는 사이트 속도, 끊임없이 들어오는 스팸 댓글과 해킹 시도 등 기술적인 문제에 직접 대응해야 합니다. 글쓰기보다 사이트 관리에 더 많은 시간을 쏟게 될 수도 있습니다.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  실용적인 방안</b><br />워드프레스를 시작한다면 처음에는 비용을 최소화하세요. 월 5천원 내외의 저렴한 공유 호스팅으로 시작하고, GeneratePress나 Kadence 같은 가볍고 빠른 무료 테마를 사용하세요. 필수 플러그인(SEO, 보안, 캐시) 몇 가지만 설치하여 관리 부담을 줄이는 것이 현명합니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>3. 한국 시장의 특수성을 이해하세요  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">\"워드프레스는 구글 SEO에 최적화되어 있으니 무조건 유리하다\"는 말은 반은 맞고 반은 틀립니다. 한국은 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">네이버의 검색 점유율이 여전히 높은 특수한 시장</span>입니다. 내 블로그의 주력 타겟 독자들이 네이버를 통해 정보를 얻는다면, 구글 SEO에만 '올인'하는 전략은 위험할 수 있습니다.<br /><br /></p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><b>네이버와 구글, 다른 공략법:</b></p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>네이버:</b> 최신성과 트렌드가 중요한 노출이 핵심입니다. 티스토리는 네이버 웹마스터 도구와의 연동이 원활하고, 비교적 노출에 유리한 측면이 있습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>구글:</b> 전문성과 신뢰도를 바탕으로 한 '정보성 콘텐츠'를 선호합니다. 잘 구축된 워드프레스 사이트는 기술적 SEO 설정을 통해 구글에 내 블로그의 전문성을 어필하기에 더 용이합니다.</li>\n</ul>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">따라서 실용적인 대안은 '투 트랙 전략'입니다. 네이버 검색 노출에 아직 강점이 있는 티스토리는 그대로 유지하면서, 구글 검색과 브랜딩을 위한 워드프레스 사이트를 별도로 개설하여 함께 운영하는 방식입니다. 모든 계란을 한 바구니에 담지 않는 것이죠.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  실용적인 방안: 투 트랙 전략 실행법</b><br />플랫폼을 '이사'가 아닌 '확장'의 개념으로 접근해보세요. 예를 들어, 워드프레스에 '2024년 연말정산 총정리'라는 깊이 있는 핵심 글을 발행했다면, 티스토리에는 '연말정산 부양가족 등록 방법', '신용카드 소득공제 꿀팁' 등 세부 주제의 글을 발행하고 워드프레스의 핵심 글로 링크를 걸어주는 방식입니다. 티스토리가 네이버 유입을 위한 전초기지 역할을, 워드프레스가 전문적인 브랜딩과 구글 유입을 위한 본진 역할을 하게 됩니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>4. '그릇'이 아닌 '음식'에 집중하세요  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">결국 블로그의 성패는 플랫폼이라는 '그릇'이 아닌, 그 안에 담긴 '음식', 즉 콘텐츠와 SEO 전략에 달려있습니다. 지금 당장 당신이 실천할 수 있는 현실적인 방안은 다음과 같습니다.<br /><br /></p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>'일기'가 아닌 '정보'를 쓰세요</b>: \"제주도 여행 후기\"가 아니라, \"50만원으로 즐기는 커플 제주도 2박 3일 코스 (숨은 맛집 포함)\"처럼 독자의 문제를 해결해주는 해결책 중심의 글을 작성하세요. 독자의 '검색 의도'를 파악하고 그에 맞는 답을 제공하는 것이 핵심입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>키워드 도구와 친해지세요</b>: '블랙키위', '키워드마스터' 같은 무료 키워드 도구를 활용하여 사람들이 무엇을 검색하는지, 경쟁은 얼마나 치열한지 분석하는 습관을 들이세요. 월간 검색량은 1000 이상이면서 블로그 문서 수는 1000 미만인 '황금 키워드'를 찾는 연습을 꾸준히 하세요.</li>\n<li style=\"margin-bottom: 8px;\"><b>내부 링크로 거미줄을 만드세요</b>: 발행한 글들을 서로 연결하는 내부 링크 작업을 통해 독자들이 내 블로그에 더 오래 머물게 하고, 검색엔진에게 내 블로그가 전문성이 있다는 신호를 보내세요. '연말정산'이라는 주제로 글을 썼다면, 과거에 썼던 '신용카드 소득공제' 글과 링크를 연결해주는 식입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>제목과 서론에 승부를 거세요</b>: 검색 결과 화면에서 독자의 클릭을 유도하는 매력적인 제목을 짓는 연습을 하세요. \"연말정산 하는 법\" 보다는 \"클릭 한 번으로 13월의 월급 2배 받는 연말정산 비법\"이 훨씬 클릭하고 싶어집니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>5. 당신의 레벨에 맞는 현명한 로드맵  ️</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 그럼 이제 우리는 무엇을 해야 할까요? 섣부른 플랫폼 이전으로 시간과 비용을 낭비하기보다는, 현재 자신의 상황에 맞는 전략을 세우는 것이 중요합니다.<br /><br /></p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>Lv.1 초보 블로거 (수익 0원 ~ 월 10만원):</b> 당신의 미션은 '수익'이 아니라 '기본기 훈련'입니다. 앞으로 3~6개월간 <span style=\"background-color: #e8f4fd; padding: 2px 4px; border-radius: 3px;\">키워드 기반의 양질의 글 50개 발행, 일 방문자 100명 달성</span>을 목표로 티스토리에서 훈련하세요.</li>\n<li style=\"margin-bottom: 8px;\"><b>Lv.2 중급 블로거 (월 30만원 이상 안정적 수익):</b> 이제 '확장'을 고민할 때입니다. 티스토리의 상위 노출된 효자 포스팅 몇 개를 워드프레스로 옮겨 심화 콘텐츠로 발전시켜보세요. 3개월간 두 플랫폼을 병행하며 데이터 추이를 분석한 후, 완전 이전 여부를 결정해도 늦지 않습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>Lv.3 워드프레스 체험 희망자:</b> 돈 쓰지 말고 연습부터 하세요. 'LocalWP' 같은 로컬 서버 환경 프로그램을 설치하면 내 컴퓨터에서 무료로 워드프레스를 마음껏 테스트할 수 있습니다.</li>\n</ol>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">플랫폼은 당신의 성공을 보장해주지 않습니다. 당신의 노력과 전략이 성공을 만듭니다. 지금 당신이 글을 쓰고 있는 바로 그곳에서 콘텐츠의 깊이를 더하고, SEO의 기본기를 탄탄하게 다지는 것에 집중해 보세요. 그것이 가장 확실하고 빠른 성공의 길일 수 있습니다.</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<style>\n        .single-summary-card-container { font-family: 'Noto Sans KR', sans-serif; display: flex; justify-content: center; align-items: center; padding: 20px 10px; background-color: #f0f2f5; margin: 20px 0; }\n        .single-summary-card { width: 100%; max-width: 700px; background-color: #ffffff; border-radius: 12px; box-shadow: 0 6px 18px rgba(0,0,0,0.12); padding: 25px; display: flex; flex-direction: column; overflow: hidden; border: 1px solid #e0e0e0; box-sizing: border-box; height: auto; }\n        .single-summary-card .card-header { display: flex; align-items: center; border-bottom: 2px solid #1a73e8; padding-bottom: 12px; margin-bottom: 12px; }\n        .single-summary-card .card-header-icon { font-size: 34px; color: #1a73e8; margin-right: 14px; }\n        .single-summary-card .card-header h3 { font-size: 26px; color: #1a73e8; margin: 0; line-height: 1.3; font-weight: 700; }\n        .single-summary-card .card-content { flex-grow: 1; display: flex; flex-direction: column; justify-content: space-around; font-size: 16px; line-height: 1.65; color: #333; }\n        .single-summary-card .card-content .section { margin-bottom: 10px; }\n        .single-summary-card .card-content strong { color: #005cb2; font-weight: 600; }\n        .single-summary-card .card-content .highlight { background-color: #e8f4fd; padding: 2px 6px; border-radius: 3px; font-weight: bold; }\n        .single-summary-card .card-footer { font-size: 14px; color: #777; text-align: center; padding-top: 12px; border-top: 1px dashed #ddd; margin-top: auto; }\n        @media (max-width: 768px) { .single-summary-card { padding: 18px; } .single-summary-card .card-header-icon { font-size: 28px; margin-right: 10px; } .single-summary-card .card-header h3 { font-size: 20px; } .single-summary-card .card-content { font-size: 15px; line-height: 1.5; } .single-summary-card .card-content .section { margin-bottom: 8px; } .single-summary-card .card-footer { font-size: 13px; padding-top: 10px; } }\n        @media (max-width: 480px) { .single-summary-card { padding: 15px; } .single-summary-card .card-header-icon { font-size: 26px; } .single-summary-card .card-header h3 { font-size: 18px; } .single-summary-card .card-content { font-size: 14px; line-height: 1.4; } .single-summary-card .card-content .section { margin-bottom: 6px; } .single-summary-card .card-footer { font-size: 12px; padding-top: 8px; } }\n    </style>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">티스토리 탈출? 5단계 자가진단</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>1. 현실 점검:</b> <span class=\"highlight\">나의 현재 수익은 얼마인가? (하루 5달러 이상?)</span></div>\n<div class=\"section\"><b>2. 비용 분석:</b> <span class=\"highlight\">워드프레스의 유지 비용을 감당할 수 있는가?</span></div>\n<div class=\"section\"><b>3. 시장 이해:</b> <span class=\"highlight\">네이버와 구글, 나의 타겟 시장은 어디인가?</span></div>\n<div class=\"section\"><b>4. 본질 집중:</b> <span class=\"highlight\">플랫폼 탓 대신, 콘텐츠와 SEO에 집중하고 있는가?</span></div>\n<div class=\"section\"><b>5. 로드맵 수립:</b> <span class=\"highlight\">현재 내 수준에 맞는 다음 스텝은 무엇인가?</span></div>\n</div>\n<div class=\"card-footer\">플랫폼 이전보다 중요한 것은 내실을 다지는 것입니다.</div>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 티스토리에서 수익이 안 나면 워드프레스로 가도 정말 소용없나요?</div>\n<div style=\"padding-left: 15px;\">A: 네, 그럴 가능성이 매우 높습니다. 수익의 핵심은 플랫폼이 아닌 '콘텐츠의 가치'와 'SEO'입니다. 좋은 콘텐츠는 어떤 플랫폼에서도 결국 빛을 발합니다. 반면, 경쟁력 없는 콘텐츠는 비싼 워드프레스에서도 수익을 내기 어렵고 오히려 비용 부담만 커질 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 워드프레스는 무조건 구글 SEO에 유리한가요?</div>\n<div style=\"padding-left: 15px;\">A: 워드프레스가 다양한 SEO 플러그인을 통해 세밀한 설정이 가능한 것은 사실이지만, 이것이 자동으로 상위 노출을 보장하지는 않습니다. SEO의 기본 원리(양질의 콘텐츠, 키워드 전략, 백링크 등)를 이해하고 적용하는 것이 훨씬 중요합니다. 티스토리에서도 이 원리들을 적용하면 충분히 구글 상위 노출이 가능합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 그럼 언제 워드프레스로 이전하는 것이 좋을까요?</div>\n<div style=\"padding-left: 15px;\">A: 티스토리에서 월 30~50만 원 이상의 안정적인 수익 파이프라인을 구축했을 때, 그리고 블로그를 통해 더 큰 사업(예: 강의, 컨설팅, 전자책 판매 등)으로 확장하고 싶을 때가 가장 좋은 시기입니다. 이때는 워드프레스의 강력한 확장성이 큰 무기가 될 수 있습니다.</div>\n</div>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">혹시 더 궁금한 점이 있으시거나 다른 의견이 있다면 언제든지 댓글로 남겨주세요. 함께 고민하고 성장해나가면 좋겠습니다!  </p>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"티스토리에서 수익이 안 나면 워드프레스로 가도 정말 소용없나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  네, 그럴 가능성이 매우 높습니다. 수익의 핵심은 플랫폼이 아닌 '콘텐츠의 가치'와 'SEO'입니다. 좋은 콘텐츠는 어떤 플랫폼에서도 결국 빛을 발합니다. 반면, 경쟁력 없는 콘텐츠는 비싼 워드프레스에서도 수익을 내기 어렵고 오히려 비용 부담만 커질 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"워드프레스는 무조건 구글 SEO에 유리한가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  워드프레스가 다양한 SEO 플러그인을 통해 세밀한 설정이 가능한 것은 사실이지만, 이것이 자동으로 상위 노출을 보장하지는 않습니다. SEO의 기본 원리(양질의 콘텐츠, 키워드 전략, 백링크 등)를 이해하고 적용하는 것이 훨씬 중요합니다. 티스토리에서도 이 원리들을 적용하면 충분히 구글 상위 노출이 가능합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"그럼 언제 워드프레스로 이전하는 것이 좋을까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  티스토리에서 월 30~50만 원 이상의 안정적인 수익 파이프라인을 구축했을 때, 그리고 블로그를 통해 더 큰 사업(예: 강의, 컨설팅, 전자책 판매 등)으로 확장하고 싶을 때가 가장 좋은 시기입니다. 이때는 워드프레스의 강력한 확장성이 큰 무기가 될 수 있습니다.\"\n                }\n            }\n        ]\n    }\n    </script>\n</div>",
        "contentSnippet": "티스토리, 워드프레스? 플랫폼 이전, 정말 당신의 수익을 바꿔줄까요? 워드프레스로의 이전을 고민하는 분들을 위해 현실적인 조언과 블로그 성공의 본질을 5단계로 나누어 심도 있게 짚어드립니다.\n\n\n \n최근 티스토리의 애드센스 광고 정책 변화와 카카오 분사 이슈로 뒤숭숭하시죠? 저도 마찬가지입니다. 많은 분들이 정든 티스토리를 떠나 워드프레스 같은 새로운 플랫폼으로의 이전을 심각하게 고민하고 계신 것 같아요. 하지만 새로운 시작에 대한 막연한 기대감만으로 섣불리 움직이기 전에, 우리 잠시 멈춰서 냉정하게 현실을 한번 돌아보는 건 어떨까요?  \n \n1. 플랫폼 이전, 그 전에 '나'를 진단하세요  \n플랫폼을 탓하기 전에, 내 블로그의 현주소를 정확히 파악하는 것이 우선입니다. 다음 질문들에 솔직하게 답해보세요.\n나의 수익은 얼마인가?: 구글 애드센스 수익이 하루에 꾸준히 최소 5달러를 넘기고 있나요? 이 기준을 넘지 못했다면, 플랫폼보다는 콘텐츠나 SEO 전략에 문제가 있을 확률이 큽니다.\n나의 방문자 수는?: 하루 평균 방문자 수가 100명도 채 되지 않나요? 100개의 글을 발행했는데도 방문자가 늘지 않는다면, 글의 방향성이나 키워드 전략을 점검해야 합니다.\n나의 트래픽 출처는?: 방문자의 대부분이 어디서 오나요? 검색 유입이 아닌 SNS나 직접 유입이 대부분이라면, SEO에 대한 이해가 부족하다는 신호입니다.\n이 진단에서 긍정적인 답변을 하기 어렵다면, 플랫폼 이전은 밑 빠진 독에 물 붓기가 될 수 있습니다. 지금 필요한 것은 새로운 집이 아니라, 집을 채울 '가구(콘텐츠)'를 제대로 만드는 법을 배우는 것입니다.\n⚠️ 주의하세요!\n수익이 없는 상태에서 워드프레스로 이전하면 호스팅 비용, 도메인 비용 등 연간 수십만 원의 추가 지출만 발생합니다. '일단 시작하면 어떻게든 되겠지'라는 막연한 기대는 금물입니다.\n \n2. 워드프레스의 '자유'와 '책임'  \n워드프레스의 가장 큰 장점은 '자유도'입니다. 하지만 이 자유에는 상당한 책임과 비용이 따릅니다. 티스토리처럼 알아서 해주는 것은 아무것도 없습니다. 모든 것을 직접 관리해야 하죠.\n구체적인 비용과 책임의 무게:\n항목\n예상 비용 (연간)\n관리 포인트\n\n\n\n\n호스팅\n12만원 ~ 24만원\n서버 속도, 트래픽 관리, 보안\n\n\n도메인\n1.5만원 ~ 2만원\n매년 갱신, DNS 설정\n\n\n유료 테마/플러그인\n5만원 ~ 20만원+\n주기적인 업데이트, 호환성 충돌 해결\n\n\n\n비용뿐만이 아닙니다. '하얀 화면의 공포'라 불리는 업데이트 오류, 갑자기 느려지는 사이트 속도, 끊임없이 들어오는 스팸 댓글과 해킹 시도 등 기술적인 문제에 직접 대응해야 합니다. 글쓰기보다 사이트 관리에 더 많은 시간을 쏟게 될 수도 있습니다.\n  실용적인 방안\n워드프레스를 시작한다면 처음에는 비용을 최소화하세요. 월 5천원 내외의 저렴한 공유 호스팅으로 시작하고, GeneratePress나 Kadence 같은 가볍고 빠른 무료 테마를 사용하세요. 필수 플러그인(SEO, 보안, 캐시) 몇 가지만 설치하여 관리 부담을 줄이는 것이 현명합니다.\n \n3. 한국 시장의 특수성을 이해하세요  \n\"워드프레스는 구글 SEO에 최적화되어 있으니 무조건 유리하다\"는 말은 반은 맞고 반은 틀립니다. 한국은 네이버의 검색 점유율이 여전히 높은 특수한 시장입니다. 내 블로그의 주력 타겟 독자들이 네이버를 통해 정보를 얻는다면, 구글 SEO에만 '올인'하는 전략은 위험할 수 있습니다.\n\n네이버와 구글, 다른 공략법:\n네이버: 최신성과 트렌드가 중요한 노출이 핵심입니다. 티스토리는 네이버 웹마스터 도구와의 연동이 원활하고, 비교적 노출에 유리한 측면이 있습니다.\n구글: 전문성과 신뢰도를 바탕으로 한 '정보성 콘텐츠'를 선호합니다. 잘 구축된 워드프레스 사이트는 기술적 SEO 설정을 통해 구글에 내 블로그의 전문성을 어필하기에 더 용이합니다.\n따라서 실용적인 대안은 '투 트랙 전략'입니다. 네이버 검색 노출에 아직 강점이 있는 티스토리는 그대로 유지하면서, 구글 검색과 브랜딩을 위한 워드프레스 사이트를 별도로 개설하여 함께 운영하는 방식입니다. 모든 계란을 한 바구니에 담지 않는 것이죠.\n  실용적인 방안: 투 트랙 전략 실행법\n플랫폼을 '이사'가 아닌 '확장'의 개념으로 접근해보세요. 예를 들어, 워드프레스에 '2024년 연말정산 총정리'라는 깊이 있는 핵심 글을 발행했다면, 티스토리에는 '연말정산 부양가족 등록 방법', '신용카드 소득공제 꿀팁' 등 세부 주제의 글을 발행하고 워드프레스의 핵심 글로 링크를 걸어주는 방식입니다. 티스토리가 네이버 유입을 위한 전초기지 역할을, 워드프레스가 전문적인 브랜딩과 구글 유입을 위한 본진 역할을 하게 됩니다.\n \n4. '그릇'이 아닌 '음식'에 집중하세요  \n결국 블로그의 성패는 플랫폼이라는 '그릇'이 아닌, 그 안에 담긴 '음식', 즉 콘텐츠와 SEO 전략에 달려있습니다. 지금 당장 당신이 실천할 수 있는 현실적인 방안은 다음과 같습니다.\n\n'일기'가 아닌 '정보'를 쓰세요: \"제주도 여행 후기\"가 아니라, \"50만원으로 즐기는 커플 제주도 2박 3일 코스 (숨은 맛집 포함)\"처럼 독자의 문제를 해결해주는 해결책 중심의 글을 작성하세요. 독자의 '검색 의도'를 파악하고 그에 맞는 답을 제공하는 것이 핵심입니다.\n키워드 도구와 친해지세요: '블랙키위', '키워드마스터' 같은 무료 키워드 도구를 활용하여 사람들이 무엇을 검색하는지, 경쟁은 얼마나 치열한지 분석하는 습관을 들이세요. 월간 검색량은 1000 이상이면서 블로그 문서 수는 1000 미만인 '황금 키워드'를 찾는 연습을 꾸준히 하세요.\n내부 링크로 거미줄을 만드세요: 발행한 글들을 서로 연결하는 내부 링크 작업을 통해 독자들이 내 블로그에 더 오래 머물게 하고, 검색엔진에게 내 블로그가 전문성이 있다는 신호를 보내세요. '연말정산'이라는 주제로 글을 썼다면, 과거에 썼던 '신용카드 소득공제' 글과 링크를 연결해주는 식입니다.\n제목과 서론에 승부를 거세요: 검색 결과 화면에서 독자의 클릭을 유도하는 매력적인 제목을 짓는 연습을 하세요. \"연말정산 하는 법\" 보다는 \"클릭 한 번으로 13월의 월급 2배 받는 연말정산 비법\"이 훨씬 클릭하고 싶어집니다.\n \n5. 당신의 레벨에 맞는 현명한 로드맵  ️\n자, 그럼 이제 우리는 무엇을 해야 할까요? 섣부른 플랫폼 이전으로 시간과 비용을 낭비하기보다는, 현재 자신의 상황에 맞는 전략을 세우는 것이 중요합니다.\n\nLv.1 초보 블로거 (수익 0원 ~ 월 10만원): 당신의 미션은 '수익'이 아니라 '기본기 훈련'입니다. 앞으로 3~6개월간 키워드 기반의 양질의 글 50개 발행, 일 방문자 100명 달성을 목표로 티스토리에서 훈련하세요.\nLv.2 중급 블로거 (월 30만원 이상 안정적 수익): 이제 '확장'을 고민할 때입니다. 티스토리의 상위 노출된 효자 포스팅 몇 개를 워드프레스로 옮겨 심화 콘텐츠로 발전시켜보세요. 3개월간 두 플랫폼을 병행하며 데이터 추이를 분석한 후, 완전 이전 여부를 결정해도 늦지 않습니다.\nLv.3 워드프레스 체험 희망자: 돈 쓰지 말고 연습부터 하세요. 'LocalWP' 같은 로컬 서버 환경 프로그램을 설치하면 내 컴퓨터에서 무료로 워드프레스를 마음껏 테스트할 수 있습니다.\n플랫폼은 당신의 성공을 보장해주지 않습니다. 당신의 노력과 전략이 성공을 만듭니다. 지금 당신이 글을 쓰고 있는 바로 그곳에서 콘텐츠의 깊이를 더하고, SEO의 기본기를 탄탄하게 다지는 것에 집중해 보세요. 그것이 가장 확실하고 빠른 성공의 길일 수 있습니다.\n \n \n티스토리 탈출? 5단계 자가진단\n1. 현실 점검: 나의 현재 수익은 얼마인가? (하루 5달러 이상?)\n2. 비용 분석: 워드프레스의 유지 비용을 감당할 수 있는가?\n3. 시장 이해: 네이버와 구글, 나의 타겟 시장은 어디인가?\n4. 본질 집중: 플랫폼 탓 대신, 콘텐츠와 SEO에 집중하고 있는가?\n5. 로드맵 수립: 현재 내 수준에 맞는 다음 스텝은 무엇인가?\n플랫폼 이전보다 중요한 것은 내실을 다지는 것입니다.\n자주 묻는 질문 ❓\nQ: 티스토리에서 수익이 안 나면 워드프레스로 가도 정말 소용없나요?\nA: 네, 그럴 가능성이 매우 높습니다. 수익의 핵심은 플랫폼이 아닌 '콘텐츠의 가치'와 'SEO'입니다. 좋은 콘텐츠는 어떤 플랫폼에서도 결국 빛을 발합니다. 반면, 경쟁력 없는 콘텐츠는 비싼 워드프레스에서도 수익을 내기 어렵고 오히려 비용 부담만 커질 수 있습니다.\nQ: 워드프레스는 무조건 구글 SEO에 유리한가요?\nA: 워드프레스가 다양한 SEO 플러그인을 통해 세밀한 설정이 가능한 것은 사실이지만, 이것이 자동으로 상위 노출을 보장하지는 않습니다. SEO의 기본 원리(양질의 콘텐츠, 키워드 전략, 백링크 등)를 이해하고 적용하는 것이 훨씬 중요합니다. 티스토리에서도 이 원리들을 적용하면 충분히 구글 상위 노출이 가능합니다.\nQ: 그럼 언제 워드프레스로 이전하는 것이 좋을까요?\nA: 티스토리에서 월 30~50만 원 이상의 안정적인 수익 파이프라인을 구축했을 때, 그리고 블로그를 통해 더 큰 사업(예: 강의, 컨설팅, 전자책 판매 등)으로 확장하고 싶을 때가 가장 좋은 시기입니다. 이때는 워드프레스의 강력한 확장성이 큰 무기가 될 수 있습니다.\n혹시 더 궁금한 점이 있으시거나 다른 의견이 있다면 언제든지 댓글로 남겨주세요. 함께 고민하고 성장해나가면 좋겠습니다!  \n\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"티스토리에서 수익이 안 나면 워드프레스로 가도 정말 소용없나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  네, 그럴 가능성이 매우 높습니다. 수익의 핵심은 플랫폼이 아닌 '콘텐츠의 가치'와 'SEO'입니다. 좋은 콘텐츠는 어떤 플랫폼에서도 결국 빛을 발합니다. 반면, 경쟁력 없는 콘텐츠는 비싼 워드프레스에서도 수익을 내기 어렵고 오히려 비용 부담만 커질 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"워드프레스는 무조건 구글 SEO에 유리한가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  워드프레스가 다양한 SEO 플러그인을 통해 세밀한 설정이 가능한 것은 사실이지만, 이것이 자동으로 상위 노출을 보장하지는 않습니다. SEO의 기본 원리(양질의 콘텐츠, 키워드 전략, 백링크 등)를 이해하고 적용하는 것이 훨씬 중요합니다. 티스토리에서도 이 원리들을 적용하면 충분히 구글 상위 노출이 가능합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"그럼 언제 워드프레스로 이전하는 것이 좋을까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  티스토리에서 월 30~50만 원 이상의 안정적인 수익 파이프라인을 구축했을 때, 그리고 블로그를 통해 더 큰 사업(예: 강의, 컨설팅, 전자책 판매 등)으로 확장하고 싶을 때가 가장 좋은 시기입니다. 이때는 워드프레스의 강력한 확장성이 큰 무기가 될 수 있습니다.\"\n                }\n            }\n        ]\n    }",
        "guid": "http://muzbox.tistory.com/483635",
        "categories": [
          "Google 이야기/애드센스 노하우",
          "seo",
          "네이버 seo",
          "블로그 수익화",
          "블로그 운영",
          "블로그 이전",
          "블로그스팟",
          "애드센스 수익",
          "워드프레스",
          "콘텐츠 마케팅",
          "티스토리"
        ],
        "isoDate": "2025-08-06T03:56:06.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "구글 노트북LM 동영상 개요, 한국어로 만드는 방법",
        "link": "http://muzbox.tistory.com/483634",
        "pubDate": "Mon, 4 Aug 2025 13:12:03 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483634#entry483634comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><b>Google NotebookLM 동영상 개요, 왜 아직도 영어만 지원할까요?</b> 한국 사용자를 위한 AI STUDIO 맞춤형 지침으로 완벽한 한국어 영상 개요를 만드는 비법을 담았습니다. 이제 언어의 장벽 없이 창의적인 콘텐츠를 만들어보세요!</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1003\" data-origin-height=\"671\"><span data-url=\"https://blog.kakaocdn.net/dn/blYVL3/btsPF8tLN83/xcLOotku4Co9yNPkvClGik/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/blYVL3/btsPF8tLN83/xcLOotku4Co9yNPkvClGik/img.png\"><img src=\"https://blog.kakaocdn.net/dn/blYVL3/btsPF8tLN83/xcLOotku4Co9yNPkvClGik/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FblYVL3%2FbtsPF8tLN83%2FxcLOotku4Co9yNPkvClGik%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"구글 노트북LM 동영상 개요, 한국어로 만드는 방법\" loading=\"lazy\" width=\"1003\" height=\"671\" data-origin-width=\"1003\" data-origin-height=\"671\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;혹시 Google NotebookLM의 동영상 개요 기능을 써보셨다가 저처럼 살짝 실망한 적 있으신가요? 정말 놀라운 기능인데, 막상 써보면 음성 요약이나 슬라이드 내용이 전부 영문으로만 나와서 '한국어 콘텐츠에는 쓸모없나?' 하는 생각이 들 때가 있더라고요. 제 주변에도 이런 고민을 하시는 분들이 정말 많았어요. 아마 저만 그런 건 아닐 거예요.  <br /><br /></p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">그런데 말이죠, 포기하기엔 이 기능이 너무 아깝잖아요? 그래서 제가 직접 AI STUDIO를 활용해 이 기능을 <b>우리말에 완벽하게 맞추는 방법</b>을 연구해봤어요. 기존의 텍스트 기반 요약 기능을 확장해서 영상 개요를 만드는 이 혁신적인 기능을, 이제 여러분도 한국어 문서로 마음껏 활용할 수 있도록 아주 쉽고 친절하게 알려드릴게요. 이 글만 읽으면 여러분의 작업 효율이 정말 비약적으로 상승할 거라고 장담합니다!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>1. Google NotebookLM의 놀라운 기능들 ✨</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><b>Google NotebookLM</b>은 Google Labs에서 개발한 AI 기반의 혁신적인 도구입니다. 이 도구는 단순히 검색 결과를 찾아주는 것을 넘어, 사용자가 업로드한 문서를 기반으로 상호작용하며 정보를 분석하고 정리하는 데 특화되어 있어요. Google의 강력한 AI 모델인 Gemini를 활용해 복잡한 자료를 명확하게 바꿔주고, 여러분의 연구와 학습 과정을 효율적으로 만들어주는 온라인 서비스라고 할 수 있습니다.<br /><br /></p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">NotebookLM은 여러분의 작업 효율을 극대화할 수 있도록 다양한 기능을 제공하고 있습니다. 어떤 기능들이 있는지 자세히 알아볼까요?</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>소스 업로드 및 분석:</b> PDF, 웹사이트, Google 문서, 슬라이드 등 다양한 형식의 소스를 올릴 수 있어요. 놀랍게도 최대 50개의 소스, 총 2,500만 단어까지 한 번에 처리할 수 있다고 하니, 방대한 양의 자료도 걱정 없겠죠!</li>\n<li style=\"margin-bottom: 8px;\"><b>요약 및 설명 생성:</b> 업로드된 콘텐츠를 바탕으로 핵심 내용을 요약하고, 상세한 설명을 생성해 줍니다. 특히, 답변의 출처를 원본 소스에 대한 인용으로 제공해 줘서 정보의 신뢰성을 확실하게 보장합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>오디오 오버뷰:</b> 2024년 9월에 출시되어 큰 주목을 받았던 기능이에요. 문서를 대화형 팟캐스트 형식으로 요약해 주기 때문에, 단순히 읽는 것보다 훨씬 재미있고 쉽게 내용을 파악할 수 있답니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>형식 변환:</b> 소스 문서를 학습 가이드, 브리핑 문서, 마인드맵 등 다양한 형식으로 변환해줘요. 복잡한 자료를 내가 원하는 형태로 즉시 바꿔주니, 콘텐츠 기획자나 학생들에게 정말 유용하겠죠.</li>\n<li style=\"margin-bottom: 8px;\"><b>채팅 및 질문:</b> 마치 친구와 대화하듯 노트북과 채팅하며 궁금한 점을 물어볼 수 있어요. 복잡한 추론이 필요한 질문에도 정확하고 신뢰성 있는 답변을 얻을 수 있습니다.</li>\n</ul>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이렇게 NotebookLM은 아이디어를 다듬고 정리하는 데 특화된 강력한 도구랍니다. 더 높은 한도와 프리미엄 기능을 제공하는 기업용 버전(NotebookLM Plus)도 있으니 참고하시면 좋을 것 같아요.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />NotebookLM은 업로드된 소스 자료에 근거해 답변을 생성하기 때문에, 잘못된 정보나 '환각' 현상(Hallucination)이 나타날 확률이 현저히 낮아요. 이 점이 NotebookLM의 가장 큰 장점 중 하나랍니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>2. 동영상 개요 기능, 한국어 사용자의 도전과제 ⚠️</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;최근 NotebookLM의 동영상 개요 기능이 처음 공개되었을 때, 저도 정말 기대가 컸어요. 그런데 사용해보니 한 가지 큰 벽에 부딪히더라고요. 바로 이 기능이 <b><span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">공식적으로 영문 콘텐츠에만 최적화</span></b>되어 있다는 점이었죠.&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;음성과 슬라이드에 나타나는 텍스트는 영문으로만 생성되어, 우리말 콘텐츠를 만드는 크리에이터나 기획자 입장에서는 정말 답답할 수밖에 없죠. 이 좋은 기능을 그림의 떡처럼 바라만 봐야 하는 상황이었답니다.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"449\" data-origin-height=\"306\"><span data-url=\"https://blog.kakaocdn.net/dn/cALfRe/btsPEuktwoo/mbm9zekiUozUkYQy6keis1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cALfRe/btsPEuktwoo/mbm9zekiUozUkYQy6keis1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cALfRe/btsPEuktwoo/mbm9zekiUozUkYQy6keis1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcALfRe%2FbtsPEuktwoo%2Fmbm9zekiUozUkYQy6keis1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"449\" height=\"306\" data-origin-width=\"449\" data-origin-height=\"306\"/></span></figure>\n\n<div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 주의하세요!</b><br />AI가 만들어준 결과물이라고 해서 맹신하면 안 됩니다. 특히 복잡하거나 전문적인 내용을 다룰 때는 AI가 놓친 맥락이나 세부 사항이 없는지 반드시 <b>최종 확인하는 과정</b>이 필요해요.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>3. AI STUDIO를 활용한 한국어 최적화 가이드의 핵심 원리  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">그럼 이제부터 AI STUDIO의 맞춤 설정을 활용해 Google NotebookLM의 동영상 개요 기능을 우리말에 맞게 '길들이는' 방법을 알려드릴게요. 핵심은 AI에게 우리가 원하는 결과물을 명확하게 지시하는 세 가지 원칙을 적용하는 것입니다. 이 원칙만 잘 이해하면 여러분의 한국어 문서도 전문적인 영상 개요로 재탄생할 수 있어요!</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 세 가지 핵심 원칙을 아래 표로 정리해 보았습니다.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">핵심 원칙</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">상세 내용</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>100% 한국어 현지화</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">음성, 슬라이드, 자막 등 영상의 모든 요소를 한국어로만 제공하고, 기술 고유명사를 제외한 외국어 사용을 엄격히 금지합니다. 예시 또한 한국의 상황과 문화에 맞게 구성하여 몰입감을 높이는 것이 핵심입니다.</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>시각적 디자인 강화</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">텍스트만 나열하는 대신, 각 슬라이드 내용에 맞는 [아이콘]이나 [인포그래픽] 등을 구체적으로 제안하도록 지시합니다. 또한, 핵심 키워드는 굵게 처리하고, 긍정/부정적 내용을 색상(파란색, 빨간색)으로 구분하여 메시지를 직관적으로 전달하게 합니다.</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\"><b>음성 나레이션 전달력</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">나레이션 스크립트를 작성할 때, 딱딱한 기계음이 아닌 전문가의 신뢰감과 친근한 어조를 동시에 갖추도록 유도합니다. 중요한 내용 앞뒤에 (잠시停)과 같은 쉼표시를 넣어 강조 효과를 더하고 시청자가 내용을 소화할 시간을 제공합니다.</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>핵심 내용 한눈에 보기  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">지금까지 설명드린 내용을 한눈에 보기 쉽게 요약해 보았습니다. 이 카드만 저장해 두셔도 AI STUDIO를 활용하는 데 큰 도움이 될 거예요.</p>\n<style>\n        .single-summary-card-container {\n            font-family: 'Noto Sans KR', sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px 10px;\n            background-color: #f0f2f5;\n            margin: 20px 0;\n        }\n        .single-summary-card {\n            width: 100%;\n            max-width: 700px;\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n            padding: 25px;\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n            border: 1px solid #e0e0e0;\n            box-sizing: border-box;\n            height: auto;\n        }\n        .single-summary-card .card-header {\n            display: flex;\n            align-items: center;\n            border-bottom: 2px solid #1a73e8;\n            padding-bottom: 12px;\n            margin-bottom: 12px;\n        }\n        .single-summary-card .card-header-icon {\n            font-size: 34px;\n            color: #1a73e8;\n            margin-right: 14px;\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 26px;\n            color: #1a73e8;\n            margin: 0;\n            line-height: 1.3;\n            font-weight: 700;\n        }\n        .single-summary-card .card-content {\n            flex-grow: 1;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-around;\n            font-size: 17px;\n            line-height: 1.65;\n            color: #333;\n        }\n        .single-summary-card .card-content .section {\n            margin-bottom: 10px;\n        }\n        .single-summary-card .card-content strong {\n            color: #005cb2;\n            font-weight: 600;\n        }\n        .single-summary-card .card-content .highlight {\n            background-color: #fffde7;\n            padding: 2px 6px;\n            border-radius: 3px;\n            font-weight: bold;\n        }\n        .single-summary-card .card-content .formula {\n            background-color: #e8f4fd;\n            padding: 6px 10px;\n            border-radius: 4px;\n            font-size: 0.9em;\n            text-align: center;\n            margin-top: 5px;\n            color: #155724;\n        }\n        .single-summary-card .card-footer {\n            font-size: 14px;\n            color: #777;\n            text-align: center;\n            padding-top: 12px;\n            border-top: 1px dashed #ddd;\n            margin-top: auto;\n        }\n        @media (max-width: 768px) {\n            .single-summary-card {\n                padding: 18px;\n                height: auto;\n                min-height: unset;\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 28px;\n                margin-right: 10px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 20px;\n            }\n            .single-summary-card .card-content {\n                font-size: 15px;\n                line-height: 1.5;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 8px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 5px 8px;\n                font-size: 0.85em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 13px;\n                padding-top: 10px;\n            }\n        }\n        @media (max-width: 480px) {\n            .single-summary-card {\n                padding: 15px;\n            }\n            .single-summary-card .card-header-icon {\n                font-size: 26px;\n            }\n            .single-summary-card .card-header h3 {\n                font-size: 18px;\n            }\n            .single-summary-card .card-content {\n                font-size: 14px;\n                line-height: 1.4;\n            }\n            .single-summary-card .card-content .section {\n                margin-bottom: 6px;\n            }\n            .single-summary-card .card-content .formula {\n                padding: 4px 6px;\n                font-size: 0.8em;\n            }\n            .single-summary-card .card-footer {\n                font-size: 12px;\n                padding-top: 8px;\n            }\n        }\n    </style>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">한국어 최적화 가이드 핵심 요약</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ 현지화:</b> <span class=\"highlight\">모든 요소를 100% 한국어로!</span> 문화적 배경에 맞는 예시를 활용해 몰입감을 높이세요.</div>\n<div class=\"section\"><b>  디자인:</b> <span class=\"highlight\">시각적 요소와 색상으로 강조!</span> [아이콘]이나 [인포그래픽]을 명시하고, 중요한 내용은 <b><span style=\"color: blue;\">파란색</span></b> 또는 <b><span style=\"color: red;\">빨간색</span></b>으로 구분해 메시지를 명확하게 전달하세요.</div>\n<div class=\"section\"><b> ️ 전달력:</b> <span class=\"highlight\">전문가적이면서 친근한 어조!</span> (잠시후)과 같은 쉼표시를 활용해 자연스러운 흐름을 만드세요.</div>\n</div>\n<div class=\"card-footer\">이 지침을 활용하면 NotebookLM으로 최적화된 한국어 영상 개요를 만들 수 있습니다.</div>\n</div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>4. AI STUDIO 맞춤 설정 지침 다운로드  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">위에 설명드린 핵심 원리를 직접 적용할 수 있는 맞춤 설정 지침 전문을 파일로 준비했습니다. 이 파일을 다운로드하여 AI STUDIO의 '맞춤 설정' 영역에 붙여넣기만 하면 됩니다. 이제 여러분의 한국어 문서도 전문가가 만든 것처럼 체계적인 영상 개요로 재탄생할 수 있습니다.</p>\n<figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/YtBNC/dJMb9ap2KkN/nbcEit28YJZWLlAJnVUnt1/%EB%85%B8%ED%8A%B8%EB%B6%81%20LM%20%EC%98%81%EC%83%81%20%EA%B0%9C%EC%9A%94%20%ED%95%9C%EA%B8%80%ED%99%94%20%EC%A7%80%EC%B9%A8.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">노트북 LM 영상 개요 한글화 지침.zip</span></div>\n<div class=\"size\">0.00MB</div>\n</div>\n  </a></figure>\n\n<h4 style=\"margin-bottom: 15px;\" data-ke-size=\"size20\"><span style=\"color: #ee2323;\"><i><b>&nbsp;사용법</b></i></span></h4>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">그림과 같이 동영상 개요 - 맞춤설정 에서 첨부한 지침을 붙여넣기 하면됩니다.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\"><span style=\"color: #ee2323;\"><i><b>단,&nbsp;기본값이&nbsp;영문&nbsp;강제&nbsp;설정이라.....&nbsp;가끔씩&nbsp;한글화가&nbsp;안되는&nbsp;경우가&nbsp;있습니다.</b></i></span></p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"동영상 개요 맟춤설정.png\" data-origin-width=\"871\" data-origin-height=\"494\"><span data-url=\"https://blog.kakaocdn.net/dn/bG7VWy/btsPFiqavKg/F80frEAvdfiXIcgbSfQoj1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bG7VWy/btsPFiqavKg/F80frEAvdfiXIcgbSfQoj1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bG7VWy/btsPFiqavKg/F80frEAvdfiXIcgbSfQoj1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbG7VWy%2FbtsPFiqavKg%2FF80frEAvdfiXIcgbSfQoj1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"871\" height=\"494\" data-filename=\"동영상 개요 맟춤설정.png\" data-origin-width=\"871\" data-origin-height=\"494\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"margin-bottom: 15px;\" data-ke-size=\"size20\"><span style=\"color: #ee2323;\"><i><b>결과물</b></i></span></h4>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/457023916\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/hBuKC/hyZuEPLwJm/llZ2dlKr8fFKjn0Y5s3Ex0/img.jpg?width=1402&amp;height=860&amp;face=0_0_1402_860,https://scrap.kakaocdn.net/dn/Ta0vT/hyZqPZHUGn/cCPcEeo2uCe4XdpVyrKr50/img.jpg?width=1402&amp;height=860&amp;face=0_0_1402_860\" data-video-width=\"860\" data-video-height=\"528\" data-video-origin-width=\"860\" data-video-origin-height=\"528\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/457023916?service=daum_tistory\" width=\"860\" height=\"528\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: Google NotebookLM의 동영상 개요 기능은 한국어를 지원하나요?</div>\n<div style=\"padding-left: 15px;\">A: 현재 정식 기능으로는 한국어 음성 및 슬라이더 생성을 지원하지 않습니다. 하지만 AI STUDIO의 맞춤 설정 지침을 활용하면 한국어 영상 개요를 생성할 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: AI STUDIO 맞춤 설정 지침의 핵심은 무엇인가요?</div>\n<div style=\"padding-left: 15px;\">A: '100% 한국어 현지화', '시각적 디자인 및 텍스트 효과 강화', '음성 나레이션 및 전달력' 세 가지 원칙을 바탕으로, AI에게 한국어 영상에 최적화된 개요를 생성하도록 구체적으로 지시하는 것입니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 지침에 따라 생성된 개요를 수정해야 할까요?</div>\n<div style=\"padding-left: 15px;\">A: 네, AI가 생성한 결과물은 항상 초안으로 간주하고, 최종 사용 전에 내용을 꼼꼼하게 검토하고 수정하는 것이 좋습니다. 특히 사실 관계나 어색한 표현이 없는지 확인해야 합니다.</div>\n</div>\n</div>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"Google NotebookLM의 동영상 개요 기능은 한국어를 지원하나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  현재 정식 기능으로는 한국어 음성 및 슬라이더 생성을 지원하지 않습니다. 하지만 AI STUDIO의 맞춤 설정 지침을 활용하면 한국어 영상 개요를 생성할 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI STUDIO 맞춤 설정 지침의 핵심은 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  '100% 한국어 현지화', '시각적 디자인 및 텍스트 효과 강화', '음성 나레이션 및 전달력' 세 가지 원칙을 바탕으로, AI에게 한국어 영상에 최적화된 개요를 생성하도록 구체적으로 지시하는 것입니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"지침에 따라 생성된 개요를 수정해야 할까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  네, AI가 생성한 결과물은 항상 초안으로 간주하고, 최종 사용 전에 내용을 꼼꼼하게 검토하고 수정하는 것이 좋습니다. 특히 사실 관계나 어색한 표현이 없는지 확인해야 합니다.\"\n                }\n            }\n        ]\n    }\n    </script>\n</div>",
        "contentSnippet": "Google NotebookLM 동영상 개요, 왜 아직도 영어만 지원할까요? 한국 사용자를 위한 AI STUDIO 맞춤형 지침으로 완벽한 한국어 영상 개요를 만드는 비법을 담았습니다. 이제 언어의 장벽 없이 창의적인 콘텐츠를 만들어보세요!\n\n\n \n 혹시 Google NotebookLM의 동영상 개요 기능을 써보셨다가 저처럼 살짝 실망한 적 있으신가요? 정말 놀라운 기능인데, 막상 써보면 음성 요약이나 슬라이드 내용이 전부 영문으로만 나와서 '한국어 콘텐츠에는 쓸모없나?' 하는 생각이 들 때가 있더라고요. 제 주변에도 이런 고민을 하시는 분들이 정말 많았어요. 아마 저만 그런 건 아닐 거예요.  \n\n그런데 말이죠, 포기하기엔 이 기능이 너무 아깝잖아요? 그래서 제가 직접 AI STUDIO를 활용해 이 기능을 우리말에 완벽하게 맞추는 방법을 연구해봤어요. 기존의 텍스트 기반 요약 기능을 확장해서 영상 개요를 만드는 이 혁신적인 기능을, 이제 여러분도 한국어 문서로 마음껏 활용할 수 있도록 아주 쉽고 친절하게 알려드릴게요. 이 글만 읽으면 여러분의 작업 효율이 정말 비약적으로 상승할 거라고 장담합니다!\n \n1. Google NotebookLM의 놀라운 기능들 ✨\nGoogle NotebookLM은 Google Labs에서 개발한 AI 기반의 혁신적인 도구입니다. 이 도구는 단순히 검색 결과를 찾아주는 것을 넘어, 사용자가 업로드한 문서를 기반으로 상호작용하며 정보를 분석하고 정리하는 데 특화되어 있어요. Google의 강력한 AI 모델인 Gemini를 활용해 복잡한 자료를 명확하게 바꿔주고, 여러분의 연구와 학습 과정을 효율적으로 만들어주는 온라인 서비스라고 할 수 있습니다.\n\nNotebookLM은 여러분의 작업 효율을 극대화할 수 있도록 다양한 기능을 제공하고 있습니다. 어떤 기능들이 있는지 자세히 알아볼까요?\n소스 업로드 및 분석: PDF, 웹사이트, Google 문서, 슬라이드 등 다양한 형식의 소스를 올릴 수 있어요. 놀랍게도 최대 50개의 소스, 총 2,500만 단어까지 한 번에 처리할 수 있다고 하니, 방대한 양의 자료도 걱정 없겠죠!\n요약 및 설명 생성: 업로드된 콘텐츠를 바탕으로 핵심 내용을 요약하고, 상세한 설명을 생성해 줍니다. 특히, 답변의 출처를 원본 소스에 대한 인용으로 제공해 줘서 정보의 신뢰성을 확실하게 보장합니다.\n오디오 오버뷰: 2024년 9월에 출시되어 큰 주목을 받았던 기능이에요. 문서를 대화형 팟캐스트 형식으로 요약해 주기 때문에, 단순히 읽는 것보다 훨씬 재미있고 쉽게 내용을 파악할 수 있답니다.\n형식 변환: 소스 문서를 학습 가이드, 브리핑 문서, 마인드맵 등 다양한 형식으로 변환해줘요. 복잡한 자료를 내가 원하는 형태로 즉시 바꿔주니, 콘텐츠 기획자나 학생들에게 정말 유용하겠죠.\n채팅 및 질문: 마치 친구와 대화하듯 노트북과 채팅하며 궁금한 점을 물어볼 수 있어요. 복잡한 추론이 필요한 질문에도 정확하고 신뢰성 있는 답변을 얻을 수 있습니다.\n이렇게 NotebookLM은 아이디어를 다듬고 정리하는 데 특화된 강력한 도구랍니다. 더 높은 한도와 프리미엄 기능을 제공하는 기업용 버전(NotebookLM Plus)도 있으니 참고하시면 좋을 것 같아요.\n  알아두세요!\nNotebookLM은 업로드된 소스 자료에 근거해 답변을 생성하기 때문에, 잘못된 정보나 '환각' 현상(Hallucination)이 나타날 확률이 현저히 낮아요. 이 점이 NotebookLM의 가장 큰 장점 중 하나랍니다.\n \n2. 동영상 개요 기능, 한국어 사용자의 도전과제 ⚠️\n 최근 NotebookLM의 동영상 개요 기능이 처음 공개되었을 때, 저도 정말 기대가 컸어요. 그런데 사용해보니 한 가지 큰 벽에 부딪히더라고요. 바로 이 기능이 공식적으로 영문 콘텐츠에만 최적화되어 있다는 점이었죠. \n \n 음성과 슬라이드에 나타나는 텍스트는 영문으로만 생성되어, 우리말 콘텐츠를 만드는 크리에이터나 기획자 입장에서는 정말 답답할 수밖에 없죠. 이 좋은 기능을 그림의 떡처럼 바라만 봐야 하는 상황이었답니다.\n\n\n⚠️ 주의하세요!\nAI가 만들어준 결과물이라고 해서 맹신하면 안 됩니다. 특히 복잡하거나 전문적인 내용을 다룰 때는 AI가 놓친 맥락이나 세부 사항이 없는지 반드시 최종 확인하는 과정이 필요해요.\n \n3. AI STUDIO를 활용한 한국어 최적화 가이드의 핵심 원리  \n그럼 이제부터 AI STUDIO의 맞춤 설정을 활용해 Google NotebookLM의 동영상 개요 기능을 우리말에 맞게 '길들이는' 방법을 알려드릴게요. 핵심은 AI에게 우리가 원하는 결과물을 명확하게 지시하는 세 가지 원칙을 적용하는 것입니다. 이 원칙만 잘 이해하면 여러분의 한국어 문서도 전문적인 영상 개요로 재탄생할 수 있어요!\n이 세 가지 핵심 원칙을 아래 표로 정리해 보았습니다.\n핵심 원칙\n상세 내용\n\n\n\n\n100% 한국어 현지화\n음성, 슬라이드, 자막 등 영상의 모든 요소를 한국어로만 제공하고, 기술 고유명사를 제외한 외국어 사용을 엄격히 금지합니다. 예시 또한 한국의 상황과 문화에 맞게 구성하여 몰입감을 높이는 것이 핵심입니다.\n\n\n시각적 디자인 강화\n텍스트만 나열하는 대신, 각 슬라이드 내용에 맞는 [아이콘]이나 [인포그래픽] 등을 구체적으로 제안하도록 지시합니다. 또한, 핵심 키워드는 굵게 처리하고, 긍정/부정적 내용을 색상(파란색, 빨간색)으로 구분하여 메시지를 직관적으로 전달하게 합니다.\n\n\n음성 나레이션 전달력\n나레이션 스크립트를 작성할 때, 딱딱한 기계음이 아닌 전문가의 신뢰감과 친근한 어조를 동시에 갖추도록 유도합니다. 중요한 내용 앞뒤에 (잠시停)과 같은 쉼표시를 넣어 강조 효과를 더하고 시청자가 내용을 소화할 시간을 제공합니다.\n\n\n\n \n핵심 내용 한눈에 보기  \n지금까지 설명드린 내용을 한눈에 보기 쉽게 요약해 보았습니다. 이 카드만 저장해 두셔도 AI STUDIO를 활용하는 데 큰 도움이 될 거예요.\n \n한국어 최적화 가이드 핵심 요약\n✨ 현지화: 모든 요소를 100% 한국어로! 문화적 배경에 맞는 예시를 활용해 몰입감을 높이세요.\n  디자인: 시각적 요소와 색상으로 강조! [아이콘]이나 [인포그래픽]을 명시하고, 중요한 내용은 파란색 또는 빨간색으로 구분해 메시지를 명확하게 전달하세요.\n ️ 전달력: 전문가적이면서 친근한 어조! (잠시후)과 같은 쉼표시를 활용해 자연스러운 흐름을 만드세요.\n이 지침을 활용하면 NotebookLM으로 최적화된 한국어 영상 개요를 만들 수 있습니다.\n \n4. AI STUDIO 맞춤 설정 지침 다운로드  \n위에 설명드린 핵심 원리를 직접 적용할 수 있는 맞춤 설정 지침 전문을 파일로 준비했습니다. 이 파일을 다운로드하여 AI STUDIO의 '맞춤 설정' 영역에 붙여넣기만 하면 됩니다. 이제 여러분의 한국어 문서도 전문가가 만든 것처럼 체계적인 영상 개요로 재탄생할 수 있습니다.\n\n    \n\n    \n노트북 LM 영상 개요 한글화 지침.zip\n0.00MB\n\n\n 사용법\n그림과 같이 동영상 개요 - 맞춤설정 에서 첨부한 지침을 붙여넣기 하면됩니다.\n단, 기본값이 영문 강제 설정이라..... 가끔씩 한글화가 안되는 경우가 있습니다.\n \n\n\n \n결과물\n\n\n\n \n \n \n자주 묻는 질문 ❓\nQ: Google NotebookLM의 동영상 개요 기능은 한국어를 지원하나요?\nA: 현재 정식 기능으로는 한국어 음성 및 슬라이더 생성을 지원하지 않습니다. 하지만 AI STUDIO의 맞춤 설정 지침을 활용하면 한국어 영상 개요를 생성할 수 있습니다.\nQ: AI STUDIO 맞춤 설정 지침의 핵심은 무엇인가요?\nA: '100% 한국어 현지화', '시각적 디자인 및 텍스트 효과 강화', '음성 나레이션 및 전달력' 세 가지 원칙을 바탕으로, AI에게 한국어 영상에 최적화된 개요를 생성하도록 구체적으로 지시하는 것입니다.\nQ: 지침에 따라 생성된 개요를 수정해야 할까요?\nA: 네, AI가 생성한 결과물은 항상 초안으로 간주하고, 최종 사용 전에 내용을 꼼꼼하게 검토하고 수정하는 것이 좋습니다. 특히 사실 관계나 어색한 표현이 없는지 확인해야 합니다.\n\n\n\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"Google NotebookLM의 동영상 개요 기능은 한국어를 지원하나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  현재 정식 기능으로는 한국어 음성 및 슬라이더 생성을 지원하지 않습니다. 하지만 AI STUDIO의 맞춤 설정 지침을 활용하면 한국어 영상 개요를 생성할 수 있습니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"AI STUDIO 맞춤 설정 지침의 핵심은 무엇인가요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  '100% 한국어 현지화', '시각적 디자인 및 텍스트 효과 강화', '음성 나레이션 및 전달력' 세 가지 원칙을 바탕으로, AI에게 한국어 영상에 최적화된 개요를 생성하도록 구체적으로 지시하는 것입니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"지침에 따라 생성된 개요를 수정해야 할까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  네, AI가 생성한 결과물은 항상 초안으로 간주하고, 최종 사용 전에 내용을 꼼꼼하게 검토하고 수정하는 것이 좋습니다. 특히 사실 관계나 어색한 표현이 없는지 확인해야 합니다.\"\n                }\n            }\n        ]\n    }",
        "guid": "http://muzbox.tistory.com/483634",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "ai studio",
          "AI 튜토리얼",
          "Ai 활용",
          "Google NotebookLM",
          "동영상 개요",
          "영상 스크립트",
          "영상 제작",
          "콘텐츠 기획",
          "한국어 슬라이더",
          "한국어 현지화"
        ],
        "isoDate": "2025-08-04T04:12:03.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "노코드의 미래: 구글 제미나이 앱 빌더 실전 가이드 (할일 앱, 게임, 챗봇 만들기)",
        "link": "http://muzbox.tistory.com/483633",
        "pubDate": "Sun, 3 Aug 2025 15:53:36 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483633#entry483633comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box;\">\n<div style=\"background-color: #e8f5e9; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px; border: 1px solid #dcdcdc;\"><b>코딩 1도 몰라도 앱 개발? 구글 제미나이 앱 빌더 사용법 총정리</b> 코딩 경험이 전혀 없는 분들도 채팅하듯 말만 하면 실제로 동작하는 앱, 심지어 게임까지 만들 수 있습니다. 구글의 제미나이 앱 빌더로 나만의 실용적인 무료 앱을 만드는 방법을 지금 바로 확인해 보세요.</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"노코드의 미래, 구글 제미나이 앱 빌더 실전 가이드.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/cAHljV/btsPGmdZWbH/zQqfyfhBF92gxxJJ509J91/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cAHljV/btsPGmdZWbH/zQqfyfhBF92gxxJJ509J91/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cAHljV/btsPGmdZWbH/zQqfyfhBF92gxxJJ509J91/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAHljV%2FbtsPGmdZWbH%2FzQqfyfhBF92gxxJJ509J91%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"노코드의 미래, 구글 제미나이 앱 빌더 실전 가이드\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"노코드의 미래, 구글 제미나이 앱 빌더 실전 가이드.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">코딩 경험이 1도 없는 초보분들도 마치 친구와 채팅하듯이 말만 하면 실제로 동작하는 앱을 만들 수 있다면 어떨까요? 그것도 단순한 앱이 아니라 진짜 게임까지 말이에요. 심지어 이 모든 과정이 완전 무료라면요? 오늘은 구글의 <b>제미나이 앱 빌더(Gemini App Builder)</b>를 활용해서, 여러분도 자신만의 실용적인 앱을 만드는 방법을 A부터 Z까지 알려드릴게요.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #28a745, #1e7e34); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>제미나이 앱 빌더, 대체 뭔가요?</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">먼저 제미나이 앱 빌더가 무엇인지 간단히 소개해 드릴게요. Google AI Studio에서 제공하는 생성형 AI 기반의 앱 개발 도구인데요. 쉽게 말해, 우리가 \"이런 앱 만들어줘!\" 하고 자연어로 설명하면, AI가 데이터 구조 설계부터 화면 디자인, 기능 코딩까지 알아서 다 해주는 혁신적인 도구예요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">솔직히 앱 하나 만들려면 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">React, TypeScript, Tailwind CSS</span> 같은 복잡한 기술들을 배워야 해서 시작도 전에 포기하는 경우가 많잖아요. 하지만 제미나이 앱 빌더는 이 모든 최신 기술을 내부적으로 사용하면서도, 사용자는 전혀 알 필요가 없다는 게 가장 놀라운 점이에요. 마치 자동차 엔진의 원리를 몰라도 운전할 수 있는 것처럼요!</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #333; margin: 0 0 10px;\" data-ke-size=\"size23\">AI가 사용하는 최신 기술 살짝 엿보기</h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>React (리액트)</b>: 화면을 '레고 블록(컴포넌트)'처럼 여러 개의 독립적인 부품으로 나누어 조립하는 방식이에요. 할 일 목록, 할 일 추가 버튼 등이 각각의 블록처럼 독립적으로 작동해서 한 곳에 오류가 생겨도 다른 곳에 영향을 주지 않죠.</li>\n<li style=\"margin-bottom: 8px;\"><b>TypeScript (타입스크립트)</b>: 코드의 '맞춤법 검사기' 같은 역할을 해요. 숫자만 입력해야 하는 곳에 문자를 넣으면 \"이거 타입이 안 맞아요!\" 하고 미리 알려줘서 버그를 줄여준답니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>Tailwind CSS (테일윈드 CSS)</b>: 미리 만들어진 디자인 조각들을 조합해서 빠르고 세련되게 앱을 꾸며주는 도구예요. 덕분에 디자인 감각이 없어도 깔끔한 앱을 만들 수 있어요.</li>\n</ul>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이런 복잡한 기술들을 제미나이가 알아서 처리해주니, 우리는 아이디어만 있으면 할 일 관리 도구, 재미있는 게임, AI 챗봇 등 상상하는 모든 것을 몇 분 만에 현실로 만들 수 있습니다. 정말 대단하지 않나요?</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #28a745, #1e7e34); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>앱 빌더 시작하기: 화면 구성 및 기본 사용법</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 그럼 함께 제미나이 앱 빌더를 사용해볼까요? 먼저 인터넷 브라우저에서 <b>Google AI Studio</b> 홈페이지로 접속해주세요. 구글 계정 로그인은 필수입니다!</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">로그인 후 왼쪽 메뉴에서 네 번째 <b>'빌드'</b> 메뉴를 클릭하면 앱 빌더의 세계로 들어갈 수 있습니다. 처음에는 여러 템플릿과 쇼케이스가 보일 텐데요, 우리는 빈 도화지에서 시작하기 위해 'Empty' 템플릿을 클릭해볼게요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">화면은 크게 세 부분으로 나뉩니다.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>코드 어시스턴트 (왼쪽)</b>: 제미나이와 대화하며 앱 개발을 요청하는 곳입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>코드 편집기 (가운데)</b>: AI가 생성한 코드를 직접 보거나 수정할 수 있는 곳입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>미리보기 (오른쪽)</b>: 만들어지고 있는 앱의 실제 모습을 실시간으로 확인하는 곳입니다.</li>\n</ol>\n<div style=\"background-color: #e8f5e9; border-left: 4px solid #28a745; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>알아두세요!</b><br />코드 어시스턴트 영역의 <b>'Checkpoint'</b> 기능은 개발 과정을 저장하는 스냅샷이에요. 코드를 수정하다 문제가 생겼을 때, 이전 체크포인트로 쉽게 돌아갈 수 있어서 정말 유용하답니다. 단, 페이지를 나가면 체크포인트는 사라지니 주의하세요!</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #28a745, #1e7e34); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>실전! 앱 만들어보기</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">백문이 불여일견이죠? 지금부터 저와 함께 3가지 앱을 직접 만들어 보겠습니다. 간단한 실용적인 앱부터 이미지로 게임을 만들고, 기존의 젬(Gem) 지침을 챗봇으로 변환하는 과정까지 단계별로 따라오시면 금방 감을 잡으실 수 있을 거예요!</p>\n<div style=\"border-top: 1px dashed #dcdcdc; margin: 30px 0;\">&nbsp;</div>\n<h3 style=\"font-size: 20px; color: #1e7e34; margin: 25px 0 12px;\" data-ke-size=\"size23\"><b>1. 할 일 관리(To-do) 앱 만들기</b></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">가장 기본적이면서도 실용적인 앱인 할 일 관리 앱부터 만들어 볼게요.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 12px;\"><b>1단계: 첫 번째 요청하기</b><br />우선, 어떤 앱을 만들고 싶은지 명확하고 구체적으로 요청하는 것이 중요해요. 코드 어시스턴트 대화창에 필요한 기능을 모두 담아 이렇게 입력해 보겠습니다.\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin: 10px 0; font-size: 15px;\">\"할 일을 추가하고 완료 상태를 체크할 수 있는 간단한 할 일 관리 앱을 만들어주세요. 할 일 제목, 설명, 우선순위, 완료 여부를 관리해야 하고, 할 일 목록을 볼 수 있어야 합니다.\"</div>\n</li>\n<li style=\"margin-bottom: 12px;\"><b>2단계: AI의 마법 확인하기</b><br />정말 놀랍게도, 2분도 채 되지 않아 AI가 모든 코드를 작성하고 오른쪽 미리보기 화면에 완전한 할 일 관리 앱을 보여줍니다. 할 일 추가, 목록 관리, 완료 체크, 삭제 기능까지 완벽하게 구현된 것을 확인할 수 있습니다.</li>\n<li style=\"margin-bottom: 12px;\"><b>3단계: 디테일 수정하기</b><br />기본 기능은 완벽하지만, 디자인이 조금 아쉽네요. 다시 대화창에 추가 요청을 해볼게요.\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin: 10px 0; font-size: 15px;\">\"할 일 추가 버튼 색상을 녹색으로 바꿔주고, 할 일 제목 앞에 내용에 맞는 이모지를 추가해줘.\"</div>\n이처럼 간단한 요청만으로 버튼 색상이 바뀌고, AI가 할 일 내용에 맞춰 자동으로 이모지를 붙여주는 것을 확인할 수 있습니다.</li>\n</ol>\n<a style=\"background-color: red; color: white; padding: 8px 16px; border-radius: 5px; text-decoration: none; display: inline-block; font-weight: bold; margin-top: 10px;\" href=\"https://aistudio.google.com/app/prompts?state=%7B%22ids%22:%5B%221TyFlARLvL0XNuXdL1d2IKyWKTSsgoHop%22%5D,%22action%22:%22open%22,%22userId%22:%22117950448820194414519%22,%22resourceKeys%22:%7B%7D%7D&amp;usp=sharing\" target=\"_blank\" rel=\"noopener\">할일 관리앱 예시 바로가기</a>\n<div style=\"border-top: 1px dashed #dcdcdc; margin: 30px 0;\">&nbsp;</div>\n<h3 style=\"font-size: 20px; color: #1e7e34; margin: 25px 0 12px;\" data-ke-size=\"size23\"><b>2. 버블 슈터 게임 만들기</b></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이번엔 좀 더 재미있는 게임을 만들어 볼까요? 이번에는 텍스트가 아닌 <b>이미지</b>를 활용하는 방법입니다.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 12px;\"><b>1단계: 이미지로 요청하기</b><br />인터넷에서 마음에 드는 '버블 슈터' 게임 스크린샷을 찾아 업로드한 후, 아주 간단하게 요청합니다.\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin: 10px 0; font-size: 15px;\">\"이 이미지와 같은 버블 슈터 캐주얼 게임을 만들어줘.\"</div>\n</li>\n<li style=\"margin-bottom: 12px;\"><b>2단계: 게임 플레이 및 개선</b><br />몇 분 뒤, 스크린샷과 제목만으로 바로 플레이가 가능한 수준의 게임이 완성되었습니다! 여기서 멈추지 않고 게임을 더 재미있게 만들어 볼게요.\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin: 10px 0; font-size: 15px;\">\"공을 좀 더 입체적으로 디자인하고, 공이 터질 때 폭발 효과를 추가해줘.\"</div>\n</li>\n</ol>\n<a style=\"background-color: red; color: white; padding: 8px 16px; border-radius: 5px; text-decoration: none; display: inline-block; font-weight: bold; margin-top: 10px;\" href=\"https://aistudio.google.com/app/prompts?state=%7B%22ids%22:%5B%221HW1-17lTeOLEECTaGre6Ulk5Yb26RcQ_%22%5D,%22action%22:%22open%22,%22userId%22:%22117950448820194414519%22,%22resourceKeys%22:%7B%7D%7D&amp;usp=sharing\" target=\"_blank\" rel=\"noopener\">버블 슈터 게임 예시 바로가기</a>\n<div style=\"background-color: #e8f5e9; border-left: 4px solid #28a745; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>알아두세요!</b><br />한 번에 너무 많은 것을 요청하기보다는, <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">이렇게 단계별로 조금씩 개선하고 수정하는 방식</span>이 훨씬 안정적이고 좋은 결과를 얻을 수 있습니다.</div>\n<div style=\"border-top: 1px dashed #dcdcdc; margin: 30px 0;\">&nbsp;</div>\n<h3 style=\"font-size: 20px; color: #1e7e34; margin: 25px 0 12px;\" data-ke-size=\"size23\"><b>3. 나만의 AI 코딩 도우미 챗봇 만들기</b></h3>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">마지막으로, 제가 실제로 만들어 사용 중인 '젬(Gem) 지침'을 안정적인 독립 앱으로 만들어 보겠습니다. 코딩 초보자가 만들고 싶은 앱을 말하면, 개발에 필요한 초기 질문 10개를 뽑아주는 챗봇이에요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><a href=\"https://muzbox.tistory.com/483632\" target=\"_blank\" rel=\"noopener\">2025.08.03 - [AI, 미래기술/AI 챗봇 및 지침 무료 배포] - 막막한 코딩, 이제 그만! AI 가 만들어주는 10가지 초기 개발 질문</a></p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 12px;\"><b>1단계: 지침을 앱으로 변환하기</b><br />기존에 사용하던 젬 지침 전체를 복사해서 앱 빌더에 붙여넣고, 그 앞에 우리가 만들고 싶은 앱의 형태와 목적을 명확하게 설명하는 문장을 추가합니다.<br />\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin: 10px 0; font-size: 15px;\">\"아래 젬 지침의 작동원리를 기반으로, 카카오톡 대화방 디자인의 채팅으로 사용자와 챗봇의 질의응답을 통해 바이브 코딩 빌더에게 할 초기 질문 10가지를 알려주는 앱을 만들어줘.\"<br /><br /><i>[여기에 기존 젬 지침 전문 붙여넣기]</i></div>\n</li>\n<li style=\"margin-bottom: 12px;\"><b>2단계: 테스트 및 디버깅</b><br />잠시 후 카카오톡을 닮은 챗봇이 만들어졌습니다. 바로 테스트를 해볼게요. \"테트리스 게임\"이라고 입력했는데, 전혀 관계없는 질문이 나왔습니다. AI가 아직 제 의도를 완벽히 파악하지 못한 거죠.</li>\n<li style=\"margin-bottom: 12px;\"><b>3단계: 구체적인 예시로 AI 가르치기</b><br />이럴 땐 구체적인 예시를 들어주는 것이 가장 효과적입니다. 이렇게 다시 요청해볼게요.\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin: 10px 0; font-size: 15px;\">\"예를 들어, '테트리스 게임'이라고 입력하면 다음 응답은 테트리스 게임과 관련된 추가 질문이어야 해.\"</div>\n이런 과정을 몇 번 거치자, 제가 요구한 대로 비교적 잘 작동하는 챗봇이 완성되었습니다.</li>\n</ol>\n<a style=\"background-color: red; color: white; padding: 8px 16px; border-radius: 5px; text-decoration: none; display: inline-block; font-weight: bold; margin-top: 10px;\" href=\"https://aistudio.google.com/app/prompts?state=%7B%22ids%22:%5B%2215EJeyISduEXQ5PRioiwNbY5LGxLcmif-%22%5D,%22action%22:%22open%22,%22userId%22:%22117950448820194414519%22,%22resourceKeys%22:%7B%7D%7D&amp;usp=sharing\" target=\"_blank\" rel=\"noopener\">바이브코딩 아이디어 챗봇 예시 바로가기</a>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #28a745, #1e7e34); margin: 30px 0 15px; padding: 10px 25px; border-radius: 10px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>제미나이 '지침' vs 앱 빌더, 뭐가 다를까?</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이쯤 되면 \"그냥 제미나이 채팅에서 '지침' 기능을 쓰는 거랑 뭐가 다르지?\" 하고 궁금해하실 텐데요. 결론부터 말씀드리면, <b>똑같은 지침이라도 AI Studio 앱 빌더에서 '앱'으로 만들었을 때 훨씬 안정적이고 일관된 결과</b>를 얻을 수 있습니다. 그 이유는 내부 작동 방식의 근본적인 차이 때문이에요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc; background-color: #e8f5e9; font-weight: bold;\">구분</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc; background-color: #e8f5e9; font-weight: bold;\">제미나이 채팅 (지침)</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc; background-color: #e8f5e9; font-weight: bold;\">AI Studio (앱 빌더)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\"><b>실행 환경</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\">대화형 (이전 대화가 누적되어 영향 O)</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\">API 호출형 (매번 독립적으로 실행, 영향 X)</td>\n</tr>\n<tr style=\"background-color: #edf7ed;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\"><b>지침의 역할</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\">대화의 가이드라인 (유연함)</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\">강력한 시스템 명령 (엄격함)</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\"><b>비유</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\">친한 개인 비서에게 말로 부탁</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\">회사의 공식 업무 매뉴얼 등록</td>\n</tr>\n<tr style=\"background-color: #edf7ed;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\"><b>최적 활용</b></td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\">개인화된 대화, 창의적 브레인스토밍</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #dcdcdc;\">안정적이고 반복적인 도구 제작</td>\n</tr>\n</tbody>\n</table>\n<div style=\"background-color: #ffe0b2; border-left: 4px solid #ff9800; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>주의하세요!</b><br />제미나이 채팅은 이전 대화의 맥락에 따라 지침이 희석될 수 있지만, AI Studio 앱은 매번 깨끗한 상태에서 지침을 시스템 명령으로 엄격하게 실행합니다. 따라서 특정 작업을 <b>안정적이고, 반복적이고, 예측 가능하게</b> 수행하는 도구를 만들고 싶다면, AI Studio 앱 빌더를 사용하는 것이 정답입니다!</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">물론 그렇다고 제미나이 지침 기능이 쓸모없는 것은 절대 아니에요. AI를 나만의 '대화 파트너'로 만들고 싶을 때, 창의적인 아이디어를 탐색할 때, 일시적인 작업을 간단히 시킬 때는 제미나이 지침이 훨씬 편리하고 효과적입니다. <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">'도구'를 만드느냐, '대화 파트너'를 만드느냐의 차이</span>로 이해하시면 쉽습니다.</p>\n<div style=\"border-top: 1px dashed #dcdcdc; margin: 30px 0;\">&nbsp;</div>\n<style>\n    .single-summary-card-container { font-family: 'Noto Sans KR', sans-serif; display: flex; justify-content: center; align-items: center; padding: 20px 10px; background-color: #f7f9f7; margin: 20px 0; }\n    .single-summary-card { width: 100%; max-width: 700px; background-color: #ffffff; border-radius: 12px; box-shadow: 0 6px 18px rgba(0,0,0,0.12); padding: 25px; display: flex; flex-direction: column; overflow: hidden; border: 1px solid #dcdcdc; box-sizing: border-box; height: auto; min-height: unset; }\n    .single-summary-card .card-header { display: flex; align-items: center; border-bottom: 2px solid #28a745; padding-bottom: 12px; margin-bottom: 12px; }\n    .single-summary-card .card-header-icon { font-size: 34px; color: #28a745; margin-right: 14px; }\n    .single-summary-card .card-header h3 { font-size: 26px; color: #28a745; margin: 0; line-height: 1.3; font-weight: 700; }\n    .single-summary-card .card-content { flex-grow: 1; display: flex; flex-direction: column; justify-content: space-around; font-size: 17px; line-height: 1.65; color: #333; }\n    .single-summary-card .card-content .section { margin-bottom: 10px; }\n    .single-summary-card .card-content strong { color: #1e88e5; font-weight: 600; }\n    .single-summary-card .card-content .highlight { background-color: #fff9c4; padding: 2px 6px; border-radius: 3px; font-weight: bold; }\n    .single-summary-card .card-content .formula { background-color: #e8f5e9; padding: 6px 10px; border-radius: 4px; font-size: 0.9em; text-align: center; margin-top: 5px; color: #1b5e20; }\n    .single-summary-card .card-footer { font-size: 14px; color: #777; text-align: center; padding-top: 12px; border-top: 1px dashed #dcdcdc; margin-top: auto; }\n    @media (max-width: 768px) {\n        .single-summary-card { padding: 18px; }\n        .single-summary-card .card-header-icon { font-size: 28px; margin-right: 10px; }\n        .single-summary-card .card-header h3 { font-size: 20px; }\n        .single-summary-card .card-content { font-size: 15px; line-height: 1.5; }\n        .single-summary-card .card-content .section { margin-bottom: 8px; }\n        .single-summary-card .card-content .formula { padding: 5px 8px; font-size: 0.85em; }\n        .single-summary-card .card-footer { font-size: 13px; padding-top: 10px; }\n    }\n    @media (max-width: 480px) {\n        .single-summary-card { padding: 15px; }\n        .single-summary-card .card-header-icon { font-size: 26px; }\n        .single-summary-card .card-header h3 { font-size: 18px; }\n        .single-summary-card .card-content { font-size: 14px; line-height: 1.4; }\n        .single-summary-card .card-content .section { margin-bottom: 6px; }\n        .single-summary-card .card-content .formula { padding: 4px 6px; font-size: 0.8em; }\n        .single-summary-card .card-footer { font-size: 12px; padding-top: 8px; }\n    }\n</style>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"></span>\n<h3 data-ke-size=\"size23\">제미나이 앱 빌더 핵심 요약</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>핵심 기능:</b> <span class=\"highlight\">자연어(채팅)만으로 코딩 없이 실제 작동하는 앱을 제작</span>할 수 있습니다.</div>\n<div class=\"section\"><b>제작 가능 앱:</b> <span class=\"highlight\">할 일 관리, 캐주얼 게임, AI 챗봇 등</span> 아이디어만 있다면 무엇이든 가능합니다.</div>\n<div class=\"section\"><b>기술 기반:</b> 최신 기술인 <span class=\"highlight\">React, TypeScript, Tailwind CSS</span>를 AI가 자동으로 적용하여 고품질 앱을 생성합니다.</div>\n<div class=\"section\"><b>앱 빌더 vs 지침:</b> <span class=\"highlight\">안정적이고 일관된 'AI 도구'</span>를 만들고 싶다면 제미나이 채팅의 '지침' 기능보다 앱 빌더가 훨씬 유리합니다.</div>\n</div>\n<div class=\"card-footer\">아이디어만 있다면 누구나 개발자가 될 수 있는 시대, 지금 바로 도전해보세요!</div>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: #28a745; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #dcdcdc;\" data-ke-size=\"size26\"><b>자주 묻는 질문</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 제미나이 앱 빌더는 완전히 무료인가요?</div>\n<div style=\"padding-left: 15px;\">A: 네, 기본적인 앱 개발 및 테스트는 Google AI Studio에서 무료로 사용할 수 있습니다. 다만, 'Cloud Run'을 통해 앱을 공개적으로 배포하고 많은 사람들이 사용하게 되면 구글 클라우드 정책에 따라 소량의 비용이 발생할 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 제가 만든 앱의 소스 코드를 직접 수정할 수도 있나요?</div>\n<div style=\"padding-left: 15px;\">A: 그럼요! AI가 생성한 코드는 React, TypeScript 기반의 실제 코드입니다. 다운로드 버튼을 통해 코드를 내려받아 Visual Studio Code와 같은 전문 코딩 프로그램에서 직접 수정하고 기능을 확장할 수 있습니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 복잡한 앱도 정말 만들 수 있나요? 한계는 없나요?</div>\n<div style=\"padding-left: 15px;\">A: 현재 단계에서는 데이터베이스 연동이 복잡하거나 매우 전문적인 기능을 가진 앱을 한 번에 만드는 데는 한계가 있을 수 있습니다. 하지만 아이디어를 빠르게 프로토타입으로 만들고 검증하는 용도로는 최고입니다. 간단한 요청부터 시작해서 단계적으로 기능을 추가하며 발전시키는 방식을 추천합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: '젬 지침'을 앱으로 만들면 왜 더 안정적인가요?</div>\n<div style=\"padding-left: 15px;\">A: 제미나이 채팅은 이전 대화의 영향을 받는 '대화형'이지만, 앱 빌더는 매번 독립적으로 실행되는 'API 호출형' 환경이기 때문입니다. 앱은 이전 대화에 방해받지 않고 오직 입력된 지침(시스템 명령)에 따라 엄격하게 작동하므로, 훨씬 더 예측 가능하고 일관된 결과를 보장합니다.</div>\n</div>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이것으로 AI 스튜디오의 제미나이 앱 빌더를 활용한 노코드 앱 개발 강의를 마치겠습니다. 오늘 배운 내용으로 여러분도 아이디어만 있다면 누구나 실용적인 앱을 만들 수 있는 시대가 열렸다는 것을 확인하셨을 거예요. 오늘 강의가 도움이 되셨다면 구독과 좋아요 꼭 눌러주시고, 여러분이 만드신 멋진 앱도 댓글로 자랑해주세요! 감사합니다!</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=oQyXtjNkBaI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ogPNc/hyZqQjUMjk/K1ZBtXSVR4hJ3Jv1l6DzJk/img.jpg?width=1280&amp;height=720&amp;face=764_96_880_224\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"초보도 쉽게 따라하는 재미나이 앱 개발 꿀팁! | 바이브코딩 1편\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/oQyXtjNkBaI\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"제미나이 앱 빌더는 완전히 무료인가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"네, 기본적인 앱 개발 및 테스트는 Google AI Studio에서 무료로 사용할 수 있습니다. 다만, 'Cloud Run'을 통해 앱을 공개적으로 배포하고 많은 사람들이 사용하게 되면 구글 클라우드 정책에 따라 소량의 비용이 발생할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"제가 만든 앱의 소스 코드를 직접 수정할 수도 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"그럼요! AI가 생성한 코드는 React, TypeScript 기반의 실제 코드입니다. 다운로드 버튼을 통해 코드를 내려받아 Visual Studio Code와 같은 전문 코딩 프로그램에서 직접 수정하고 기능을 확장할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"복잡한 앱도 정말 만들 수 있나요? 한계는 없나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"현재 단계에서는 데이터베이스 연동이 복잡하거나 매우 전문적인 기능을 가진 앱을 한 번에 만드는 데는 한계가 있을 수 있습니다. 하지만 아이디어를 빠르게 프로토타입으로 만들고 검증하는 용도로는 최고입니다. 간단한 요청부터 시작해서 단계적으로 기능을 추가하며 발전시키는 방식을 추천합니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"'젬 지침'을 앱으로 만들면 왜 더 안정적인가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"제미나이 채팅은 이전 대화의 영향을 받는 '대화형'이지만, 앱 빌더는 매번 독립적으로 실행되는 'API 호출형' 환경이기 때문입니다. 앱은 이전 대화에 방해받지 않고 오직 입력된 지침(시스템 명령)에 따라 엄격하게 작동하므로, 훨씬 더 예측 가능하고 일관된 결과를 보장합니다.\"\n            }\n        }\n    ]\n}\n</script>\n</div>\n<div id=\"gtx-trans\" style=\"position: absolute; left: -34px; top: 5951.34px;\">\n<div class=\"gtx-trans-icon\">&nbsp;</div>\n</div>",
        "contentSnippet": "코딩 1도 몰라도 앱 개발? 구글 제미나이 앱 빌더 사용법 총정리 코딩 경험이 전혀 없는 분들도 채팅하듯 말만 하면 실제로 동작하는 앱, 심지어 게임까지 만들 수 있습니다. 구글의 제미나이 앱 빌더로 나만의 실용적인 무료 앱을 만드는 방법을 지금 바로 확인해 보세요.\n\n\n \n코딩 경험이 1도 없는 초보분들도 마치 친구와 채팅하듯이 말만 하면 실제로 동작하는 앱을 만들 수 있다면 어떨까요? 그것도 단순한 앱이 아니라 진짜 게임까지 말이에요. 심지어 이 모든 과정이 완전 무료라면요? 오늘은 구글의 제미나이 앱 빌더(Gemini App Builder)를 활용해서, 여러분도 자신만의 실용적인 앱을 만드는 방법을 A부터 Z까지 알려드릴게요.\n제미나이 앱 빌더, 대체 뭔가요?\n먼저 제미나이 앱 빌더가 무엇인지 간단히 소개해 드릴게요. Google AI Studio에서 제공하는 생성형 AI 기반의 앱 개발 도구인데요. 쉽게 말해, 우리가 \"이런 앱 만들어줘!\" 하고 자연어로 설명하면, AI가 데이터 구조 설계부터 화면 디자인, 기능 코딩까지 알아서 다 해주는 혁신적인 도구예요.\n솔직히 앱 하나 만들려면 React, TypeScript, Tailwind CSS 같은 복잡한 기술들을 배워야 해서 시작도 전에 포기하는 경우가 많잖아요. 하지만 제미나이 앱 빌더는 이 모든 최신 기술을 내부적으로 사용하면서도, 사용자는 전혀 알 필요가 없다는 게 가장 놀라운 점이에요. 마치 자동차 엔진의 원리를 몰라도 운전할 수 있는 것처럼요!\nAI가 사용하는 최신 기술 살짝 엿보기\nReact (리액트): 화면을 '레고 블록(컴포넌트)'처럼 여러 개의 독립적인 부품으로 나누어 조립하는 방식이에요. 할 일 목록, 할 일 추가 버튼 등이 각각의 블록처럼 독립적으로 작동해서 한 곳에 오류가 생겨도 다른 곳에 영향을 주지 않죠.\nTypeScript (타입스크립트): 코드의 '맞춤법 검사기' 같은 역할을 해요. 숫자만 입력해야 하는 곳에 문자를 넣으면 \"이거 타입이 안 맞아요!\" 하고 미리 알려줘서 버그를 줄여준답니다.\nTailwind CSS (테일윈드 CSS): 미리 만들어진 디자인 조각들을 조합해서 빠르고 세련되게 앱을 꾸며주는 도구예요. 덕분에 디자인 감각이 없어도 깔끔한 앱을 만들 수 있어요.\n이런 복잡한 기술들을 제미나이가 알아서 처리해주니, 우리는 아이디어만 있으면 할 일 관리 도구, 재미있는 게임, AI 챗봇 등 상상하는 모든 것을 몇 분 만에 현실로 만들 수 있습니다. 정말 대단하지 않나요?\n앱 빌더 시작하기: 화면 구성 및 기본 사용법\n자, 그럼 함께 제미나이 앱 빌더를 사용해볼까요? 먼저 인터넷 브라우저에서 Google AI Studio 홈페이지로 접속해주세요. 구글 계정 로그인은 필수입니다!\n로그인 후 왼쪽 메뉴에서 네 번째 '빌드' 메뉴를 클릭하면 앱 빌더의 세계로 들어갈 수 있습니다. 처음에는 여러 템플릿과 쇼케이스가 보일 텐데요, 우리는 빈 도화지에서 시작하기 위해 'Empty' 템플릿을 클릭해볼게요.\n화면은 크게 세 부분으로 나뉩니다.\n코드 어시스턴트 (왼쪽): 제미나이와 대화하며 앱 개발을 요청하는 곳입니다.\n코드 편집기 (가운데): AI가 생성한 코드를 직접 보거나 수정할 수 있는 곳입니다.\n미리보기 (오른쪽): 만들어지고 있는 앱의 실제 모습을 실시간으로 확인하는 곳입니다.\n알아두세요!\n코드 어시스턴트 영역의 'Checkpoint' 기능은 개발 과정을 저장하는 스냅샷이에요. 코드를 수정하다 문제가 생겼을 때, 이전 체크포인트로 쉽게 돌아갈 수 있어서 정말 유용하답니다. 단, 페이지를 나가면 체크포인트는 사라지니 주의하세요!\n실전! 앱 만들어보기\n백문이 불여일견이죠? 지금부터 저와 함께 3가지 앱을 직접 만들어 보겠습니다. 간단한 실용적인 앱부터 이미지로 게임을 만들고, 기존의 젬(Gem) 지침을 챗봇으로 변환하는 과정까지 단계별로 따라오시면 금방 감을 잡으실 수 있을 거예요!\n \n1. 할 일 관리(To-do) 앱 만들기\n가장 기본적이면서도 실용적인 앱인 할 일 관리 앱부터 만들어 볼게요.\n1단계: 첫 번째 요청하기\n우선, 어떤 앱을 만들고 싶은지 명확하고 구체적으로 요청하는 것이 중요해요. 코드 어시스턴트 대화창에 필요한 기능을 모두 담아 이렇게 입력해 보겠습니다.\n\"할 일을 추가하고 완료 상태를 체크할 수 있는 간단한 할 일 관리 앱을 만들어주세요. 할 일 제목, 설명, 우선순위, 완료 여부를 관리해야 하고, 할 일 목록을 볼 수 있어야 합니다.\"\n2단계: AI의 마법 확인하기\n정말 놀랍게도, 2분도 채 되지 않아 AI가 모든 코드를 작성하고 오른쪽 미리보기 화면에 완전한 할 일 관리 앱을 보여줍니다. 할 일 추가, 목록 관리, 완료 체크, 삭제 기능까지 완벽하게 구현된 것을 확인할 수 있습니다.\n3단계: 디테일 수정하기\n기본 기능은 완벽하지만, 디자인이 조금 아쉽네요. 다시 대화창에 추가 요청을 해볼게요.\n\"할 일 추가 버튼 색상을 녹색으로 바꿔주고, 할 일 제목 앞에 내용에 맞는 이모지를 추가해줘.\"\n할일 관리앱 예시 바로가기\n \n2. 버블 슈터 게임 만들기\n이번엔 좀 더 재미있는 게임을 만들어 볼까요? 이번에는 텍스트가 아닌 이미지를 활용하는 방법입니다.\n1단계: 이미지로 요청하기\n인터넷에서 마음에 드는 '버블 슈터' 게임 스크린샷을 찾아 업로드한 후, 아주 간단하게 요청합니다.\n\"이 이미지와 같은 버블 슈터 캐주얼 게임을 만들어줘.\"\n2단계: 게임 플레이 및 개선\n몇 분 뒤, 스크린샷과 제목만으로 바로 플레이가 가능한 수준의 게임이 완성되었습니다! 여기서 멈추지 않고 게임을 더 재미있게 만들어 볼게요.\n\"공을 좀 더 입체적으로 디자인하고, 공이 터질 때 폭발 효과를 추가해줘.\"\n버블 슈터 게임 예시 바로가기\n알아두세요!\n한 번에 너무 많은 것을 요청하기보다는, 이렇게 단계별로 조금씩 개선하고 수정하는 방식이 훨씬 안정적이고 좋은 결과를 얻을 수 있습니다.\n \n3. 나만의 AI 코딩 도우미 챗봇 만들기\n마지막으로, 제가 실제로 만들어 사용 중인 '젬(Gem) 지침'을 안정적인 독립 앱으로 만들어 보겠습니다. 코딩 초보자가 만들고 싶은 앱을 말하면, 개발에 필요한 초기 질문 10개를 뽑아주는 챗봇이에요.\n \n2025.08.03 - [AI, 미래기술/AI 챗봇 및 지침 무료 배포] - 막막한 코딩, 이제 그만! AI 가 만들어주는 10가지 초기 개발 질문\n \n1단계: 지침을 앱으로 변환하기\n기존에 사용하던 젬 지침 전체를 복사해서 앱 빌더에 붙여넣고, 그 앞에 우리가 만들고 싶은 앱의 형태와 목적을 명확하게 설명하는 문장을 추가합니다.\n\"아래 젬 지침의 작동원리를 기반으로, 카카오톡 대화방 디자인의 채팅으로 사용자와 챗봇의 질의응답을 통해 바이브 코딩 빌더에게 할 초기 질문 10가지를 알려주는 앱을 만들어줘.\"\n[여기에 기존 젬 지침 전문 붙여넣기]\n2단계: 테스트 및 디버깅\n잠시 후 카카오톡을 닮은 챗봇이 만들어졌습니다. 바로 테스트를 해볼게요. \"테트리스 게임\"이라고 입력했는데, 전혀 관계없는 질문이 나왔습니다. AI가 아직 제 의도를 완벽히 파악하지 못한 거죠.\n3단계: 구체적인 예시로 AI 가르치기\n이럴 땐 구체적인 예시를 들어주는 것이 가장 효과적입니다. 이렇게 다시 요청해볼게요.\n\"예를 들어, '테트리스 게임'이라고 입력하면 다음 응답은 테트리스 게임과 관련된 추가 질문이어야 해.\"\n바이브코딩 아이디어 챗봇 예시 바로가기\n제미나이 '지침' vs 앱 빌더, 뭐가 다를까?\n이쯤 되면 \"그냥 제미나이 채팅에서 '지침' 기능을 쓰는 거랑 뭐가 다르지?\" 하고 궁금해하실 텐데요. 결론부터 말씀드리면, 똑같은 지침이라도 AI Studio 앱 빌더에서 '앱'으로 만들었을 때 훨씬 안정적이고 일관된 결과를 얻을 수 있습니다. 그 이유는 내부 작동 방식의 근본적인 차이 때문이에요.\n구분\n제미나이 채팅 (지침)\nAI Studio (앱 빌더)\n\n\n\n\n실행 환경\n대화형 (이전 대화가 누적되어 영향 O)\nAPI 호출형 (매번 독립적으로 실행, 영향 X)\n\n\n지침의 역할\n대화의 가이드라인 (유연함)\n강력한 시스템 명령 (엄격함)\n\n\n비유\n친한 개인 비서에게 말로 부탁\n회사의 공식 업무 매뉴얼 등록\n\n\n최적 활용\n개인화된 대화, 창의적 브레인스토밍\n안정적이고 반복적인 도구 제작\n\n\n\n주의하세요!\n제미나이 채팅은 이전 대화의 맥락에 따라 지침이 희석될 수 있지만, AI Studio 앱은 매번 깨끗한 상태에서 지침을 시스템 명령으로 엄격하게 실행합니다. 따라서 특정 작업을 안정적이고, 반복적이고, 예측 가능하게 수행하는 도구를 만들고 싶다면, AI Studio 앱 빌더를 사용하는 것이 정답입니다!\n물론 그렇다고 제미나이 지침 기능이 쓸모없는 것은 절대 아니에요. AI를 나만의 '대화 파트너'로 만들고 싶을 때, 창의적인 아이디어를 탐색할 때, 일시적인 작업을 간단히 시킬 때는 제미나이 지침이 훨씬 편리하고 효과적입니다. '도구'를 만드느냐, '대화 파트너'를 만드느냐의 차이로 이해하시면 쉽습니다.\n \n\n제미나이 앱 빌더 핵심 요약\n핵심 기능: 자연어(채팅)만으로 코딩 없이 실제 작동하는 앱을 제작할 수 있습니다.\n제작 가능 앱: 할 일 관리, 캐주얼 게임, AI 챗봇 등 아이디어만 있다면 무엇이든 가능합니다.\n기술 기반: 최신 기술인 React, TypeScript, Tailwind CSS를 AI가 자동으로 적용하여 고품질 앱을 생성합니다.\n앱 빌더 vs 지침: 안정적이고 일관된 'AI 도구'를 만들고 싶다면 제미나이 채팅의 '지침' 기능보다 앱 빌더가 훨씬 유리합니다.\n아이디어만 있다면 누구나 개발자가 될 수 있는 시대, 지금 바로 도전해보세요!\n자주 묻는 질문\nQ: 제미나이 앱 빌더는 완전히 무료인가요?\nA: 네, 기본적인 앱 개발 및 테스트는 Google AI Studio에서 무료로 사용할 수 있습니다. 다만, 'Cloud Run'을 통해 앱을 공개적으로 배포하고 많은 사람들이 사용하게 되면 구글 클라우드 정책에 따라 소량의 비용이 발생할 수 있습니다.\nQ: 제가 만든 앱의 소스 코드를 직접 수정할 수도 있나요?\nA: 그럼요! AI가 생성한 코드는 React, TypeScript 기반의 실제 코드입니다. 다운로드 버튼을 통해 코드를 내려받아 Visual Studio Code와 같은 전문 코딩 프로그램에서 직접 수정하고 기능을 확장할 수 있습니다.\nQ: 복잡한 앱도 정말 만들 수 있나요? 한계는 없나요?\nA: 현재 단계에서는 데이터베이스 연동이 복잡하거나 매우 전문적인 기능을 가진 앱을 한 번에 만드는 데는 한계가 있을 수 있습니다. 하지만 아이디어를 빠르게 프로토타입으로 만들고 검증하는 용도로는 최고입니다. 간단한 요청부터 시작해서 단계적으로 기능을 추가하며 발전시키는 방식을 추천합니다.\nQ: '젬 지침'을 앱으로 만들면 왜 더 안정적인가요?\nA: 제미나이 채팅은 이전 대화의 영향을 받는 '대화형'이지만, 앱 빌더는 매번 독립적으로 실행되는 'API 호출형' 환경이기 때문입니다. 앱은 이전 대화에 방해받지 않고 오직 입력된 지침(시스템 명령)에 따라 엄격하게 작동하므로, 훨씬 더 예측 가능하고 일관된 결과를 보장합니다.\n이것으로 AI 스튜디오의 제미나이 앱 빌더를 활용한 노코드 앱 개발 강의를 마치겠습니다. 오늘 배운 내용으로 여러분도 아이디어만 있다면 누구나 실용적인 앱을 만들 수 있는 시대가 열렸다는 것을 확인하셨을 거예요. 오늘 강의가 도움이 되셨다면 구독과 좋아요 꼭 눌러주시고, 여러분이 만드신 멋진 앱도 댓글로 자랑해주세요! 감사합니다!",
        "guid": "http://muzbox.tistory.com/483633",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "ai 앱 만들기",
          "ai 챗봇 만들기",
          "google ai studio",
          "react",
          "typescript",
          "노코드 앱 개발",
          "무료 앱 개발",
          "생성형 AI",
          "제미나이 앱 빌더",
          "코딩 없이 앱 만들기"
        ],
        "isoDate": "2025-08-03T06:53:36.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "막막한 코딩, 이제 그만! AI 가 만들어주는 10가지 초기 개발 질문",
        "link": "http://muzbox.tistory.com/483632",
        "pubDate": "Sun, 3 Aug 2025 15:16:23 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483632#entry483632comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\"><b>코딩 왕초보를 위한 Gemini 젬 지침 10가지 질문</b> 코딩을 처음 시작하는 분들을 위해 막연한 아이디어를 구체화하고, 개발 초기 단계에 필요한 지침을 만들어주는 Gemini 젬의 작동 원리와 사용법을 소개합니다.</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"코딩왕초보.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/boM5kC/btsPF9eRGv7/DBhWm0nbKgg60TcEJZl6Ik/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/boM5kC/btsPF9eRGv7/DBhWm0nbKgg60TcEJZl6Ik/img.png\"><img src=\"https://blog.kakaocdn.net/dn/boM5kC/btsPF9eRGv7/DBhWm0nbKgg60TcEJZl6Ik/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FboM5kC%2FbtsPF9eRGv7%2FDBhWm0nbKgg60TcEJZl6Ik%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"막막한 코딩, 이제 그만! AI 가 만들어주는 10가지 초기 개발 질문\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"코딩왕초보.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">코딩을 배우고 싶다는 생각에 가슴 설레며 시작했는데, 막상 무엇부터 해야 할지 막막했던 경험, 다들 한 번쯤 있으시죠? 저도 그랬어요. 머릿속에 번뜩이는 아이디어는 있는데 이걸 어떻게 코드로 옮겨야 할지 도저히 감이 안 잡히더라고요. 그래서 제가 코딩 왕초보 시절에 가장 필요했던 기능을 담은 Gemini 젬을 만들어봤어요. 이 젬은 마치 친절한 코딩 멘토처럼, 여러분의 아이디어를 구체적인 개발 지시사항으로 바꿔주는 역할을 한답니다. 이 글을 통해 젬의 작동 원리와 사용법을 상세히 알려드릴게요!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>코딩 왕초보 젬, 어떤 젬인가요?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 젬의 이름은 '바이브코딩 앱 아이디어 구체화 및 빌더 요청 생성 젬'이에요. 이름이 좀 길죠? 쉽게 말해, 여러분의 머릿속에 있는 막연한 앱 아이디어를 실제 개발자가 바로 작업에 착수할 수 있을 만큼 구체적인 지시사항으로 정리해주는 젬이랍니다. 이 젬은 두 가지 단계로 작동해요.</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>1. 아이디어 구체화 대화:</b> 사용자가 \"시작\"이라고 입력하면, 앱의 컨셉, 핵심 기능, 분위기 등을 파악하는 질문을 던져요.</li>\n<li style=\"margin-bottom: 5px;\"><b>2. 빌더 요청 생성:</b> 대화가 충분히 진행되면, 대화 내용을 바탕으로 개발에 필요한 구체적인 지시사항 10개를 만들어줍니다.</li>\n</ul>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 젬의 목표는 친절하고 통찰력 있는 AI 어시스턴트 역할을 하는 것이에요. 코딩을 처음 접하는 분들도 겁먹지 않고, 마치 멘토와 대화하듯 편안하게 아이디어를 발전시킬 수 있도록 돕는 거죠.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />이 젬은 \"바이브코딩(Vibecoding)\" 앱 프로젝트 아이디어를 구체화하도록 돕는 역할을 합니다. 막연한 아이디어를 명확하게 만들고, 실제 AI 코딩 도구가 사용할 수 있는 구체적인 개발 지시사항으로 변환하는 것이 핵심 목표입니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>젬 사용법: 3단계 질문으로 아이디어 구체화하기  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">사용법은 정말 간단해요! \"시작\"이라고 입력하는 순간 젬과의 대화가 시작됩니다. 젬은 여러분의 아이디어를 이끌어내기 위해 총 3단계의 질문을 던져요.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">코딩을 처음 접하는 분들이 가장 어려워하는 부분이 바로 '무엇을 만들지'와 '어떻게 시작할지'를 구체화하는 것인데, 이 젬은 그 막막함을 해소해주는 역할을 합니다.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>1. 앱의 정체성 질문:</b> \"어떤 종류의 앱을 만들고 싶으신가요?\"라는 질문으로 시작해 아이디어의 윤곽을 잡습니다. 예시를 통해 영감을 주기도 합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>2. 핵심 기능 질문:</b> \"그 앱의 가장 핵심적인 기능은 무엇일까요?\"라는 질문으로 앱의 필수적인 기능을 정의합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>3. 앱의 '바이브' 질문:</b> \"앱의 전반적인 분위기나 '바이브'는 어땠으면 좋겠나요?\"라는 질문으로 디자인과 사용자 경험에 대한 감각적인 부분을 구체화합니다.</li>\n</ol>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 3단계의 대화가 끝나면, 젬은 대화 내용을 종합해서 개발에 필요한 10가지 초기 요청을 생성할지 물어봅니다. 여러분이 \"네\"라고 대답하면 드디어 코딩의 첫걸음을 뗄 수 있는 결과물이 탄생하는 거죠!</p>\n<div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 주의하세요!</b><br />이 젬은 사용자의 아이디어를 바탕으로 코드를 생성하는 것이 아니라, 코딩을 시작하기 위한 구체적인 지시사항을 만들어주는 도구입니다. 이 요청을 기반으로 개발을 시작하면 됩니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>젬 지침의 작동 원리와 특징  &zwj; &zwj; </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 젬은 Gemini의 강력한 대화형 AI 기능을 활용해 사용자 맞춤형 결과를 도출합니다. 단순히 정해진 답변을 주는 것이 아니라, 대화 내용을 종합적으로 분석하여 여러분의 아이디어를 최대한 반영한 결과물을 내놓죠.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">구분</th>\n<th style=\"padding: 12px; text-align: left; border: 1px solid #ddd; background-color: #f5f5f5; font-weight: bold;\">특징</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">페르소나</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">친절하고 통찰력 있는 AI 어시스턴트 역할</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">핵심 기능</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">사용자 아이디어를 구체적인 10가지 개발 요청으로 변환</td>\n</tr>\n<tr>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">대화 방식</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">명확한 3단계 질문을 통해 아이디어를 구조화</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">결과물</td>\n<td style=\"padding: 12px; text-align: left; border: 1px solid #ddd;\">프로젝트 설정, UI/UX, 데이터 관리 등 개발의 전반적인 측면을 다룸</td>\n</tr>\n</tbody>\n</table>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 젬을 사용하면 더 이상 \"무엇부터 시작해야 할까?\"라는 고민에 시간을 낭비하지 않아도 됩니다. 여러분이 제공한 아이디어를 바탕으로 코딩의 첫 번째 로드맵을 그려주니까요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>실전 예시: '감정 일기 앱' 빌더 요청  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">예를 들어, \"매일의 기분과 생각을 간단한 이모티콘으로 기록하는 감정 일기 앱\"이라는 아이디어를 젬에게 구체화시키고 \"네\"라고 대답하면 다음과 같은 10가지 빌더 요청을 받을 수 있습니다.</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #333; margin: 0 0 10px;\" data-ke-size=\"size23\"><b>사례 주인공의 아이디어</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>앱의 정체성:</b> 매일의 감정을 기록하는 감정 일기 앱</li>\n<li style=\"margin-bottom: 5px;\"><b>핵심 기능:</b> 날짜별로 이모티콘과 한 줄 메모를 저장</li>\n<li style=\"margin-bottom: 5px;\"><b>앱의 '바이브':</b> 따뜻하고 아기자기한 파스텔톤 디자인</li>\n</ul>\n<h3 style=\"font-size: 18px; color: #333; margin: 15px 0 10px;\" data-ke-size=\"size23\"><b>젬이 생성한 10가지 빌더 요청</b></h3>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\">1. React Native와 Expo를 사용하여 '감정 일기' 앱의 기본 프로젝트를 설정해줘.</li>\n<li style=\"margin-bottom: 8px;\">2. 앱의 메인 컬러는 파스텔톤(#FFDDC1, #BEE3DB)으로, 기본 폰트는 손글씨 느낌의 'Gaegu' 폰트를 적용해줘.</li>\n<li style=\"margin-bottom: 8px;\">3. Firebase Authentication을 이용한 이메일/비밀번호 기반의 간단한 회원가입 및 로그인 화면을 만들어줘.</li>\n<li style=\"margin-bottom: 8px;\">4. 메인 화면에는 날짜를 선택할 수 있는 캘린더 UI를 구현해줘. 각 날짜에는 그날 기록한 대표 이모티콘이 작게 표시되어야 해.</li>\n<li style=\"margin-bottom: 8px;\">5. 사용자가 날짜를 탭하면 그날의 기록을 작성하는 '기록하기' 모달(Modal) 창을 띄워줘.</li>\n<li style=\"margin-bottom: 8px;\">6. '기록하기' 창에는 5가지 감정(기쁨, 슬픔, 화남, 평온, 놀람)을 나타내는 커스텀 이모티콘 버튼을 포함해줘.</li>\n<li style=\"margin-bottom: 8px;\">7. 이모티콘 선택 후, 해당 감정에 대한 생각을 200자 내외로 적을 수 있는 텍스트 입력 필드를 추가해줘.</li>\n<li style=\"margin-bottom: 8px;\">8. Firestore 데이터베이스에 'diaries' 컬렉션을 만들고, 각 문서는 사용자 ID, 날짜, 선택한 이모티콘, 텍스트 내용을 필드로 가지도록 스키마를 설계해줘.</li>\n<li style=\"margin-bottom: 8px;\">9. 월별 감정 통계를 보여주는 '통계' 탭을 만들어줘. 이번 달에 어떤 감정을 가장 많이 느꼈는지 원형 차트로 시각화해줘.</li>\n<li style=\"margin-bottom: 8px;\">10. 사용자가 앱을 처음 실행할 때, 앱의 사용법을 안내하는 3단계의 간단한 온보딩 스크린을 디자인해줘.</li>\n</ul>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 요청들을 기반으로 개발을 시작하면 됩니다. 코딩 초보자에게는 이 요청들이 마치 훌륭한 로드맵처럼 느껴질 거예요.</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>마무리: 코딩의 첫걸음을 함께해요  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">어떠세요? 코딩 왕초보 시절의 막막함이 조금은 사라지는 느낌이 들지 않나요? 이 젬을 활용하면 여러분의 아이디어가 현실로 한 걸음 더 다가갈 수 있을 거예요. 더 이상 무엇부터 시작해야 할지 고민하지 마시고, 이 젬과 함께 코딩의 재미를 느껴보세요!</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">아래에는 이 젬의 지침 원본을 공유해 드릴게요. 직접 지침을 살펴보면서 자신만의 젬을 만들어보는 것도 정말 재미있는 경험이 될 거예요! 더 궁금한 점이 있다면 댓글로 물어봐주세요~  </p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>코딩 왕초보 GEM 지침 무료배포</b></h2>\n<figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/Hcqce/dJMb9fdOGLy/Vk0i0qF1BjhTSIeyADK7l1/%EC%BD%94%EB%94%A9%EC%99%95%EC%B4%88%EB%B3%B4%20GEM%20%EC%A7%80%EC%B9%A8.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">코딩왕초보 GEM 지침.zip</span></div>\n<div class=\"size\">0.00MB</div>\n</div>\n  </a></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 이 젬은 어떤 사람에게 가장 유용할까요?</div>\n<div style=\"padding-left: 15px;\">A: 코딩을 처음 배우는 분들, 앱 아이디어는 있지만 구체적인 계획을 세우기 어려운 분들에게 가장 유용합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 왜 10가지 질문이 아닌 3단계 질문인가요?</div>\n<div style=\"padding-left: 15px;\">A: 10가지 질문은 최종 결과물에 해당하는 '빌더 요청'이며, 아이디어를 구체화하기 위한 대화는 3단계로 이루어집니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: \"빌더 요청\"은 정확히 무엇을 의미하나요?</div>\n<div style=\"padding-left: 15px;\">A: \"빌더 요청\"은 코딩 프로젝트를 시작하기 위해 필요한 구체적이고 실행 가능한 지시사항들을 의미합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 젬이 생성한 요청만으로 앱을 만들 수 있나요?</div>\n<div style=\"padding-left: 15px;\">A: 이 요청들은 개발의 초기 단계 지침이며, 실제 개발 과정에서는 더 많은 세부 사항이 필요합니다. 하지만 훌륭한 시작점이 될 수 있습니다.</div>\n</div>\n</div>\n<script type=\"application/ld+json\">\n    {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"FAQPage\",\n      \"mainEntity\": [\n        {\n          \"@type\": \"Question\",\n          \"name\": \"이 젬은 어떤 사람에게 가장 유용할까요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  코딩을 처음 배우는 분들, 앱 아이디어는 있지만 구체적인 계획을 세우기 어려운 분들에게 가장 유용합니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"왜 10가지 질문이 아닌 3단계 질문인가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  10가지 질문은 최종 결과물에 해당하는 '빌더 요청'이며, 아이디어를 구체화하기 위한 대화는 3단계로 이루어집니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"빌더 요청은 정확히 무엇을 의미하나요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  빌더 요청은 코딩 프로젝트를 시작하기 위해 필요한 구체적이고 실행 가능한 지시사항들을 의미합니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"젬이 생성한 요청만으로 앱을 만들 수 있나요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  이 요청들은 개발의 초기 단계 지침이며, 실제 개발 과정에서는 더 많은 세부 사항이 필요합니다. 하지만 훌륭한 시작점이 될 수 있습니다.\"\n          }\n        }\n      ]\n    }\n    </script>\n</div>",
        "contentSnippet": "코딩 왕초보를 위한 Gemini 젬 지침 10가지 질문 코딩을 처음 시작하는 분들을 위해 막연한 아이디어를 구체화하고, 개발 초기 단계에 필요한 지침을 만들어주는 Gemini 젬의 작동 원리와 사용법을 소개합니다.\n\n\n \n코딩을 배우고 싶다는 생각에 가슴 설레며 시작했는데, 막상 무엇부터 해야 할지 막막했던 경험, 다들 한 번쯤 있으시죠? 저도 그랬어요. 머릿속에 번뜩이는 아이디어는 있는데 이걸 어떻게 코드로 옮겨야 할지 도저히 감이 안 잡히더라고요. 그래서 제가 코딩 왕초보 시절에 가장 필요했던 기능을 담은 Gemini 젬을 만들어봤어요. 이 젬은 마치 친절한 코딩 멘토처럼, 여러분의 아이디어를 구체적인 개발 지시사항으로 바꿔주는 역할을 한답니다. 이 글을 통해 젬의 작동 원리와 사용법을 상세히 알려드릴게요!  \n \n코딩 왕초보 젬, 어떤 젬인가요?  \n이 젬의 이름은 '바이브코딩 앱 아이디어 구체화 및 빌더 요청 생성 젬'이에요. 이름이 좀 길죠? 쉽게 말해, 여러분의 머릿속에 있는 막연한 앱 아이디어를 실제 개발자가 바로 작업에 착수할 수 있을 만큼 구체적인 지시사항으로 정리해주는 젬이랍니다. 이 젬은 두 가지 단계로 작동해요.\n1. 아이디어 구체화 대화: 사용자가 \"시작\"이라고 입력하면, 앱의 컨셉, 핵심 기능, 분위기 등을 파악하는 질문을 던져요.\n2. 빌더 요청 생성: 대화가 충분히 진행되면, 대화 내용을 바탕으로 개발에 필요한 구체적인 지시사항 10개를 만들어줍니다.\n이 젬의 목표는 친절하고 통찰력 있는 AI 어시스턴트 역할을 하는 것이에요. 코딩을 처음 접하는 분들도 겁먹지 않고, 마치 멘토와 대화하듯 편안하게 아이디어를 발전시킬 수 있도록 돕는 거죠.\n  알아두세요!\n이 젬은 \"바이브코딩(Vibecoding)\" 앱 프로젝트 아이디어를 구체화하도록 돕는 역할을 합니다. 막연한 아이디어를 명확하게 만들고, 실제 AI 코딩 도구가 사용할 수 있는 구체적인 개발 지시사항으로 변환하는 것이 핵심 목표입니다.\n \n젬 사용법: 3단계 질문으로 아이디어 구체화하기  \n사용법은 정말 간단해요! \"시작\"이라고 입력하는 순간 젬과의 대화가 시작됩니다. 젬은 여러분의 아이디어를 이끌어내기 위해 총 3단계의 질문을 던져요.\n코딩을 처음 접하는 분들이 가장 어려워하는 부분이 바로 '무엇을 만들지'와 '어떻게 시작할지'를 구체화하는 것인데, 이 젬은 그 막막함을 해소해주는 역할을 합니다.\n1. 앱의 정체성 질문: \"어떤 종류의 앱을 만들고 싶으신가요?\"라는 질문으로 시작해 아이디어의 윤곽을 잡습니다. 예시를 통해 영감을 주기도 합니다.\n2. 핵심 기능 질문: \"그 앱의 가장 핵심적인 기능은 무엇일까요?\"라는 질문으로 앱의 필수적인 기능을 정의합니다.\n3. 앱의 '바이브' 질문: \"앱의 전반적인 분위기나 '바이브'는 어땠으면 좋겠나요?\"라는 질문으로 디자인과 사용자 경험에 대한 감각적인 부분을 구체화합니다.\n이 3단계의 대화가 끝나면, 젬은 대화 내용을 종합해서 개발에 필요한 10가지 초기 요청을 생성할지 물어봅니다. 여러분이 \"네\"라고 대답하면 드디어 코딩의 첫걸음을 뗄 수 있는 결과물이 탄생하는 거죠!\n⚠️ 주의하세요!\n이 젬은 사용자의 아이디어를 바탕으로 코드를 생성하는 것이 아니라, 코딩을 시작하기 위한 구체적인 지시사항을 만들어주는 도구입니다. 이 요청을 기반으로 개발을 시작하면 됩니다.\n \n젬 지침의 작동 원리와 특징  ‍ ‍ \n이 젬은 Gemini의 강력한 대화형 AI 기능을 활용해 사용자 맞춤형 결과를 도출합니다. 단순히 정해진 답변을 주는 것이 아니라, 대화 내용을 종합적으로 분석하여 여러분의 아이디어를 최대한 반영한 결과물을 내놓죠.\n구분\n특징\n\n\n\n\n페르소나\n친절하고 통찰력 있는 AI 어시스턴트 역할\n\n\n핵심 기능\n사용자 아이디어를 구체적인 10가지 개발 요청으로 변환\n\n\n대화 방식\n명확한 3단계 질문을 통해 아이디어를 구조화\n\n\n결과물\n프로젝트 설정, UI/UX, 데이터 관리 등 개발의 전반적인 측면을 다룸\n\n\n\n이 젬을 사용하면 더 이상 \"무엇부터 시작해야 할까?\"라는 고민에 시간을 낭비하지 않아도 됩니다. 여러분이 제공한 아이디어를 바탕으로 코딩의 첫 번째 로드맵을 그려주니까요!\n \n실전 예시: '감정 일기 앱' 빌더 요청  \n예를 들어, \"매일의 기분과 생각을 간단한 이모티콘으로 기록하는 감정 일기 앱\"이라는 아이디어를 젬에게 구체화시키고 \"네\"라고 대답하면 다음과 같은 10가지 빌더 요청을 받을 수 있습니다.\n사례 주인공의 아이디어\n앱의 정체성: 매일의 감정을 기록하는 감정 일기 앱\n핵심 기능: 날짜별로 이모티콘과 한 줄 메모를 저장\n앱의 '바이브': 따뜻하고 아기자기한 파스텔톤 디자인\n젬이 생성한 10가지 빌더 요청\n1. React Native와 Expo를 사용하여 '감정 일기' 앱의 기본 프로젝트를 설정해줘.\n2. 앱의 메인 컬러는 파스텔톤(#FFDDC1, #BEE3DB)으로, 기본 폰트는 손글씨 느낌의 'Gaegu' 폰트를 적용해줘.\n3. Firebase Authentication을 이용한 이메일/비밀번호 기반의 간단한 회원가입 및 로그인 화면을 만들어줘.\n4. 메인 화면에는 날짜를 선택할 수 있는 캘린더 UI를 구현해줘. 각 날짜에는 그날 기록한 대표 이모티콘이 작게 표시되어야 해.\n5. 사용자가 날짜를 탭하면 그날의 기록을 작성하는 '기록하기' 모달(Modal) 창을 띄워줘.\n6. '기록하기' 창에는 5가지 감정(기쁨, 슬픔, 화남, 평온, 놀람)을 나타내는 커스텀 이모티콘 버튼을 포함해줘.\n7. 이모티콘 선택 후, 해당 감정에 대한 생각을 200자 내외로 적을 수 있는 텍스트 입력 필드를 추가해줘.\n8. Firestore 데이터베이스에 'diaries' 컬렉션을 만들고, 각 문서는 사용자 ID, 날짜, 선택한 이모티콘, 텍스트 내용을 필드로 가지도록 스키마를 설계해줘.\n9. 월별 감정 통계를 보여주는 '통계' 탭을 만들어줘. 이번 달에 어떤 감정을 가장 많이 느꼈는지 원형 차트로 시각화해줘.\n10. 사용자가 앱을 처음 실행할 때, 앱의 사용법을 안내하는 3단계의 간단한 온보딩 스크린을 디자인해줘.\n이 요청들을 기반으로 개발을 시작하면 됩니다. 코딩 초보자에게는 이 요청들이 마치 훌륭한 로드맵처럼 느껴질 거예요.\n \n마무리: 코딩의 첫걸음을 함께해요  \n어떠세요? 코딩 왕초보 시절의 막막함이 조금은 사라지는 느낌이 들지 않나요? 이 젬을 활용하면 여러분의 아이디어가 현실로 한 걸음 더 다가갈 수 있을 거예요. 더 이상 무엇부터 시작해야 할지 고민하지 마시고, 이 젬과 함께 코딩의 재미를 느껴보세요!\n아래에는 이 젬의 지침 원본을 공유해 드릴게요. 직접 지침을 살펴보면서 자신만의 젬을 만들어보는 것도 정말 재미있는 경험이 될 거예요! 더 궁금한 점이 있다면 댓글로 물어봐주세요~  \n코딩 왕초보 GEM 지침 무료배포\n\n    \n\n    \n코딩왕초보 GEM 지침.zip\n0.00MB\n\n\n \n자주 묻는 질문 ❓\nQ: 이 젬은 어떤 사람에게 가장 유용할까요?\nA: 코딩을 처음 배우는 분들, 앱 아이디어는 있지만 구체적인 계획을 세우기 어려운 분들에게 가장 유용합니다.\nQ: 왜 10가지 질문이 아닌 3단계 질문인가요?\nA: 10가지 질문은 최종 결과물에 해당하는 '빌더 요청'이며, 아이디어를 구체화하기 위한 대화는 3단계로 이루어집니다.\nQ: \"빌더 요청\"은 정확히 무엇을 의미하나요?\nA: \"빌더 요청\"은 코딩 프로젝트를 시작하기 위해 필요한 구체적이고 실행 가능한 지시사항들을 의미합니다.\nQ: 젬이 생성한 요청만으로 앱을 만들 수 있나요?\nA: 이 요청들은 개발의 초기 단계 지침이며, 실제 개발 과정에서는 더 많은 세부 사항이 필요합니다. 하지만 훌륭한 시작점이 될 수 있습니다.\n\n\n\n    {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"FAQPage\",\n      \"mainEntity\": [\n        {\n          \"@type\": \"Question\",\n          \"name\": \"이 젬은 어떤 사람에게 가장 유용할까요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  코딩을 처음 배우는 분들, 앱 아이디어는 있지만 구체적인 계획을 세우기 어려운 분들에게 가장 유용합니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"왜 10가지 질문이 아닌 3단계 질문인가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  10가지 질문은 최종 결과물에 해당하는 '빌더 요청'이며, 아이디어를 구체화하기 위한 대화는 3단계로 이루어집니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"빌더 요청은 정확히 무엇을 의미하나요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  빌더 요청은 코딩 프로젝트를 시작하기 위해 필요한 구체적이고 실행 가능한 지시사항들을 의미합니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"젬이 생성한 요청만으로 앱을 만들 수 있나요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"  이 요청들은 개발의 초기 단계 지침이며, 실제 개발 과정에서는 더 많은 세부 사항이 필요합니다. 하지만 훌륭한 시작점이 될 수 있습니다.\"\n          }\n        }\n      ]\n    }",
        "guid": "http://muzbox.tistory.com/483632",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 지침 무료 배포",
          "Gemini 젬",
          "Gemini 지침",
          "개발 지시사항",
          "바이브코딩",
          "빌더 요청",
          "앱 개발",
          "앱 아이디어",
          "코딩 멘토",
          "코딩 왕초보",
          "프로젝트 시작"
        ],
        "isoDate": "2025-08-03T06:16:23.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "［RULIWEB］",
        "title": "[MULTI] 더 영화적인 이야기와 연출의 발전, 마피아 : 올드 컨트리",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2344",
        "pubDate": "Thu, 07 Aug 2025 21:00:21 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/08/07/198845560c55104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-08-07T12:00:21.000Z"
      },
      {
        "creator": "「RULIWEB」",
        "title": "[MULTI] 현재에 안주해버린 시리즈의 결과, 킬링 플로어 3",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2343",
        "pubDate": "Thu, 07 Aug 2025 14:45:35 +0900",
        "author": "「RULIWEB」",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/08/07/198830eced84cacdc.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-08-07T05:45:35.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 13화, 장래희망인데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2342",
        "pubDate": "Wed, 06 Aug 2025 16:02:33 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/08/06/1987e2eaaed51ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-08-06T07:02:33.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "NPU 대응을 포함한 25종류 이상의 로컬 AI 기능을 시험할 수 있는 AI Dev Gallery",
        "link": "https://jacking75.github.io/ai-llm_20250810/",
        "pubDate": "Sun, 10 Aug 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQLuikeUDrMGQnvOrVsNkggmdhx8vxzNfIkbeEPRKvnuIyTjCR3W8uYEBp5pFbcMTxWUO2UoeclgfhX/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-llm_20250810/",
        "isoDate": "2025-08-09T15:00:00.000Z"
      },
      {
        "title": "Ollama 에서 Gemma 3 사용하기",
        "link": "https://jacking75.github.io/ai-llm_20250804/",
        "pubDate": "Mon, 04 Aug 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vReo8Cptazx8kgE7d5evD6qJddBEzBG4NLoYLPIUUOiAqUMPuVMdgP57dX_H_tyXgeS3jzXngFZTghd/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-llm_20250804/",
        "isoDate": "2025-08-03T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "셀트리온 일라이 릴리 미국 공장 인수 시도",
        "link": "http://serverdown.tistory.com/1373",
        "pubDate": "Fri, 8 Aug 2025 22:01:33 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1373#entry1373comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"395\" data-origin-height=\"201\"><span data-url=\"https://blog.kakaocdn.net/dn/dERzo4/btsPK2Bzl4P/dOeaqfXAUI1F6zUWxaXaOk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dERzo4/btsPK2Bzl4P/dOeaqfXAUI1F6zUWxaXaOk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dERzo4/btsPK2Bzl4P/dOeaqfXAUI1F6zUWxaXaOk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdERzo4%2FbtsPK2Bzl4P%2FdOeaqfXAUI1F6zUWxaXaOk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"395\" height=\"201\" data-origin-width=\"395\" data-origin-height=\"201\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=hvqc7R5p0l0&amp;t=294s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=hvqc7R5p0l0&amp;t=294s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=hvqc7R5p0l0\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/f9Fuq/hyZvkqFpwg/kwdSmp0ytcEGQq1B4KFak1/img.jpg?width=1280&amp;height=720&amp;face=518_102_708_308,https://scrap.kakaocdn.net/dn/btWQUK/hyZvm9RDdq/8IAvu7p2QkxKUEoJ3huZ4K/img.jpg?width=1280&amp;height=720&amp;face=518_102_708_308\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"셀트리온, 예상밖 인수 결정&hellip;&ldquo;일라이 릴리 품었다&rdquo;\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/hvqc7R5p0l0\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">주가 더럽게 안가지만 이번엔 진짜로 갈 수도 있겠습니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미국에서 생산을 하면 관세를 깎아주는 법안 때문에 인수 하는거 같군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">앱토즈마 라는게 좋다는군요 기대 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">8분14초에 앵커가 대본을 잘 못읽는거 같은데</p>\n<p data-ke-size=\"size16\">못알아 들었습니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=hvqc7R5p0l0&t=294s\n\n\n\n \n \n주가 더럽게 안가지만 이번엔 진짜로 갈 수도 있겠습니다.\n \n미국에서 생산을 하면 관세를 깎아주는 법안 때문에 인수 하는거 같군요\n \n앱토즈마 라는게 좋다는군요 기대 됩니다.\n \n8분14초에 앵커가 대본을 잘 못읽는거 같은데\n못알아 들었습니다.",
        "guid": "http://serverdown.tistory.com/1373",
        "categories": [
          "투자",
          "셀트리온"
        ],
        "isoDate": "2025-08-08T13:01:33.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "문명의 문화 승리가 그냥 있는게 아닌가보다 / 북한 남한 사람 만나기만 해도 흡수되어버려 ...",
        "link": "http://serverdown.tistory.com/1372",
        "pubDate": "Wed, 6 Aug 2025 19:04:41 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1372#entry1372comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"300\" data-origin-height=\"168\"><span data-url=\"https://blog.kakaocdn.net/dn/ByiL8/btsPIftNJzw/9Rt4Pf5h94nLogVKz6Raj0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ByiL8/btsPIftNJzw/9Rt4Pf5h94nLogVKz6Raj0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ByiL8/btsPIftNJzw/9Rt4Pf5h94nLogVKz6Raj0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FByiL8%2FbtsPIftNJzw%2F9Rt4Pf5h94nLogVKz6Raj0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"300\" height=\"168\" data-origin-width=\"300\" data-origin-height=\"168\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=o972-zOENas\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=o972-zOENas</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=o972-zOENas\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/uTzVZ/hyZuKCOezH/QQ7nV9wKiOlRR6g3sLr0C1/img.jpg?width=1280&amp;height=720&amp;face=438_22_1184_300,https://scrap.kakaocdn.net/dn/QsMin/hyZuJKGEpb/4cIHM1B7T2SxhWuTOIly6k/img.jpg?width=1280&amp;height=720&amp;face=438_22_1184_300\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"&quot;돌변한 태도에 추측 난무&quot;김정은 결국 선을 넘었다. 이상기류 감지된 북한에 김정은 지금 미칠 \" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/o972-zOENas\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">문화 차이가 워낙 나다보니<br />이젠 그냥 만나기만해도 다 남한으로 흡수되어버린다고 ...</p>\n<p data-ke-size=\"size16\">옛날에는 좌파 구술려서 어떻게 해보려고 했는데<br />그것도 사람 살만한 여건이 되야 넘어가지<br />이제 설득도 안되니 만나지 말라고 지침이 바꼈넹</p>\n<p data-ke-size=\"size16\">그냥 왕정이였으면 이렇게 까진 안되는데<br />신격화 하면서 신이라서 틀릴리가 없다는 식으로 가니<br />임무를 수행하는 사람이 잘못되는걸로 귀결되니<br />바르게 돌릴 방법이 없다.</p>\n<p data-ke-size=\"size16\">길게가면 체제가 지닌 단점을 극복할 방법이 없네</p>\n<p data-ke-size=\"size16\">거기다 공산주의도 아니고 신정으로 가니 너무나 후퇴된 방식 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=o972-zOENas\n\n\n\n문화 차이가 워낙 나다보니\n이젠 그냥 만나기만해도 다 남한으로 흡수되어버린다고 ...\n옛날에는 좌파 구술려서 어떻게 해보려고 했는데\n그것도 사람 살만한 여건이 되야 넘어가지\n이제 설득도 안되니 만나지 말라고 지침이 바꼈넹\n그냥 왕정이였으면 이렇게 까진 안되는데\n신격화 하면서 신이라서 틀릴리가 없다는 식으로 가니\n임무를 수행하는 사람이 잘못되는걸로 귀결되니\n바르게 돌릴 방법이 없다.\n길게가면 체제가 지닌 단점을 극복할 방법이 없네\n거기다 공산주의도 아니고 신정으로 가니 너무나 후퇴된 방식 ...",
        "guid": "http://serverdown.tistory.com/1372",
        "categories": [
          "유튜브",
          "북한"
        ],
        "isoDate": "2025-08-06T10:04:41.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "cctv 에 찍힌 귀신 영상",
        "link": "http://serverdown.tistory.com/1371",
        "pubDate": "Wed, 6 Aug 2025 07:05:13 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1371#entry1371comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"460\" data-origin-height=\"253\"><span data-url=\"https://blog.kakaocdn.net/dn/sX0Ye/btsPIYYEuP6/CbnrxGHvEWSWs0OZMfCAeK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/sX0Ye/btsPIYYEuP6/CbnrxGHvEWSWs0OZMfCAeK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/sX0Ye/btsPIYYEuP6/CbnrxGHvEWSWs0OZMfCAeK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FsX0Ye%2FbtsPIYYEuP6%2FCbnrxGHvEWSWs0OZMfCAeK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"460\" height=\"253\" data-origin-width=\"460\" data-origin-height=\"253\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">썸네일은 관계 없는거 들고 왔구요</p>\n<p data-ke-size=\"size16\">진짜로 무섭습니다.</p>\n<p data-ke-size=\"size16\">심약하신분은 안보시는게 좋습니다.</p>\n<p data-ke-size=\"size16\">이거 기억 자꾸 나면 길 걷기도 힘듭니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/nC_0i2onolo?t=682\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/nC_0i2onolo?t=682</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=nC_0i2onolo\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/djlbpm/hyZq1lM08a/7qq9eGqLkh3rXn7XJ1Goe0/img.jpg?width=1280&amp;height=720&amp;face=982_500_1074_602,https://scrap.kakaocdn.net/dn/cc6Yuz/hyZuDjeqSm/QKNSQvK6neLtRdCVAARACk/img.jpg?width=1280&amp;height=720&amp;face=982_500_1074_602\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[대륙남]인구가 가장많은 나라에서 일어난 가장무서운 영상 TOP10! ※혼자보지 마세요\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/nC_0i2onolo\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">11분부터 개 깜놀합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "썸네일은 관계 없는거 들고 왔구요\n진짜로 무섭습니다.\n심약하신분은 안보시는게 좋습니다.\n이거 기억 자꾸 나면 길 걷기도 힘듭니다.\n \n영상: https://youtu.be/nC_0i2onolo?t=682\n\n\n\n11분부터 개 깜놀합니다.",
        "guid": "http://serverdown.tistory.com/1371",
        "categories": [
          "유튜브",
          "귀신영상"
        ],
        "isoDate": "2025-08-05T22:05:13.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "전세계 정세는 종교전쟁 상태다 / 미국 중국 러시아 유럽",
        "link": "http://serverdown.tistory.com/1370",
        "pubDate": "Tue, 5 Aug 2025 22:04:07 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1370#entry1370comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"255\" data-origin-height=\"197\"><span data-url=\"https://blog.kakaocdn.net/dn/cNjdN2/btsPJvu8Etm/Sjsv352f9LxPKq1zQWRQLK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cNjdN2/btsPJvu8Etm/Sjsv352f9LxPKq1zQWRQLK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cNjdN2/btsPJvu8Etm/Sjsv352f9LxPKq1zQWRQLK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcNjdN2%2FbtsPJvu8Etm%2FSjsv352f9LxPKq1zQWRQLK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"255\" height=\"197\" data-origin-width=\"255\" data-origin-height=\"197\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=S2anQSQ6eeg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=S2anQSQ6eeg</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=S2anQSQ6eeg\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/NTOKP/hyZuxcehKt/TSb9qxcT1BSzAf2AYZBVv1/img.jpg?width=1280&amp;height=720&amp;face=204_120_1160_360,https://scrap.kakaocdn.net/dn/VVQAm/hyZrtCkeE4/pJhk6Cj07I9ZvSYb1mrPh1/img.jpg?width=1280&amp;height=720&amp;face=204_120_1160_360\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"하나씩 드러나는 시진핑 권력 균열 신호. 곧 대륙에 피바람이 분다｜이춘근 박사 3부\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/S2anQSQ6eeg\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">민주주의와 조차 종교입니자. 기독교조 천주교가 여기에 포함되는지는 잘 모르겠습니다.</p>\n<p data-ke-size=\"size16\">중국은 민주주의가 아니죠 기독교도 아닙니다.</p>\n<p data-ke-size=\"size16\">그래서 미국이 조지는 중이구요</p>\n<p data-ke-size=\"size16\">현재는 돈으로 조질 수 있지만 커지면 진짜 전쟁을 해야할 수도 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">유럽은 러시아 독일이 기독교에 가깝다고 합니다.</p>\n<p data-ke-size=\"size16\">영국 프랑스는 이슬랑에 가깝다고 합니다.</p>\n<p data-ke-size=\"size16\">지금은 혼내주기 위해 독일을 무장시키지만</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">사긴이 더 걸려서 결국 이슬람을 선택한다면&nbsp;</p>\n<p data-ke-size=\"size16\">미국도 더 많은 선을 넘게 될 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이슬람 문화가 풍요롭게 한건 딱히 없지만</p>\n<p data-ke-size=\"size16\">우성과 열성을 따져볼때 우성일 수도 있기 때문에 조심하려나 봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미국이 기를 쓰고 막는데도 이슬람화를 막을 수 없다면 우성이 맞다고 보이네요</p>\n<p data-ke-size=\"size16\">국제 정세가 이렇게 전개되다니 놀랍습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=S2anQSQ6eeg\n\n\n\n \n민주주의와 조차 종교입니자. 기독교조 천주교가 여기에 포함되는지는 잘 모르겠습니다.\n중국은 민주주의가 아니죠 기독교도 아닙니다.\n그래서 미국이 조지는 중이구요\n현재는 돈으로 조질 수 있지만 커지면 진짜 전쟁을 해야할 수도 있습니다.\n \n유럽은 러시아 독일이 기독교에 가깝다고 합니다.\n영국 프랑스는 이슬랑에 가깝다고 합니다.\n지금은 혼내주기 위해 독일을 무장시키지만\n \n사긴이 더 걸려서 결국 이슬람을 선택한다면 \n미국도 더 많은 선을 넘게 될 것입니다.\n \n이슬람 문화가 풍요롭게 한건 딱히 없지만\n우성과 열성을 따져볼때 우성일 수도 있기 때문에 조심하려나 봅니다.\n \n미국이 기를 쓰고 막는데도 이슬람화를 막을 수 없다면 우성이 맞다고 보이네요\n국제 정세가 이렇게 전개되다니 놀랍습니다.",
        "guid": "http://serverdown.tistory.com/1370",
        "categories": [
          "유튜브",
          "국제"
        ],
        "isoDate": "2025-08-05T13:04:07.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "중국 배달 전쟁",
        "link": "http://serverdown.tistory.com/1369",
        "pubDate": "Sun, 3 Aug 2025 18:01:33 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1369#entry1369comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"450\" data-origin-height=\"295\"><span data-url=\"https://blog.kakaocdn.net/dn/llC5X/btsPHjH43x8/epKqYnKted0guLe2BLg3ik/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/llC5X/btsPHjH43x8/epKqYnKted0guLe2BLg3ik/img.png\"><img src=\"https://blog.kakaocdn.net/dn/llC5X/btsPHjH43x8/epKqYnKted0guLe2BLg3ik/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FllC5X%2FbtsPHjH43x8%2FepKqYnKted0guLe2BLg3ik%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"450\" height=\"295\" data-origin-width=\"450\" data-origin-height=\"295\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">비상식적인 내부 경쟁으로 어마어마한 배달 주문이 벌어지고 있다고 합니다.</p>\n<p data-ke-size=\"size16\">정상기업이라면 경쟁에서 나와서 다른 곳을 갈법한데</p>\n<p data-ke-size=\"size16\">이것들은 서로 가격을 낮추네요</p>\n<p data-ke-size=\"size16\">3개의 기업이 남을때까지 경쟁할 모양인거 같습니다.</p>\n<p data-ke-size=\"size16\">이럴때는 쉬었다가&nbsp;</p>\n<p data-ke-size=\"size16\">다 끝나고 다시 영업하면 되지 않나 싶군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=Q8JR9acxUwE\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=Q8JR9acxUwE</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=Q8JR9acxUwE\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/zY05e/hyZqUUat9w/82WkiUoQYAxuvA23yJivWK/img.jpg?width=1280&amp;height=720&amp;face=110_120_220_240,https://scrap.kakaocdn.net/dn/cHVk8A/hyZvjxMm16/YVR1wZR4hrvL09Yq3hKXk1/img.jpg?width=1280&amp;height=720&amp;face=110_120_220_240\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"중국 베이징에서 이런 일은 상상도 못 한다...90세 노인도 살면서 처음 본다고 한다!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/Q8JR9acxUwE\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">배달기사는 배달만하면 돈을 버는데</p>\n<p data-ke-size=\"size16\">가게에서 만들어 낼 수가 없어서</p>\n<p data-ke-size=\"size16\">가게 들어가 직접 만들어 배달 해버린다고 하네요 ㅋ</p>\n<p data-ke-size=\"size16\">(이게 무슨일이야)</p>\n<p data-ke-size=\"size16\">신나는 나라 입니당</p>",
        "contentSnippet": "비상식적인 내부 경쟁으로 어마어마한 배달 주문이 벌어지고 있다고 합니다.\n정상기업이라면 경쟁에서 나와서 다른 곳을 갈법한데\n이것들은 서로 가격을 낮추네요\n3개의 기업이 남을때까지 경쟁할 모양인거 같습니다.\n이럴때는 쉬었다가 \n다 끝나고 다시 영업하면 되지 않나 싶군요\n \n영상: https://www.youtube.com/watch?v=Q8JR9acxUwE\n\n\n\n배달기사는 배달만하면 돈을 버는데\n가게에서 만들어 낼 수가 없어서\n가게 들어가 직접 만들어 배달 해버린다고 하네요 ㅋ\n(이게 무슨일이야)\n신나는 나라 입니당",
        "guid": "http://serverdown.tistory.com/1369",
        "categories": [
          "중국"
        ],
        "isoDate": "2025-08-03T09:01:33.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "웹 애니메이션 API",
        "link": "https://hyeonseok.com/blog/939",
        "pubDate": "Sat, 09 Aug 2025 17:13:48 GMT",
        "content": "<p>시작은 제이쿼리로 되어 있는 코드를 바닐라로 변환이 필요해서 였다. 화면에서 보이지 않다가 특정 조건에서 화면에 나오는 애니메이션을 보여주는 기능이었다. 챗지피티에 물어보니 전반적인 변환은 잘 해줬는데 화면에 나오기 직전에 <code>display: none</code>을 <code>block</code>로 바꿔주다 보니 트랜지션 애니메이션이 작동하지 않았다. <code>element.offsetWidth;</code>같이 레이아웃을 참조하면 애니메이션이 되지만 다른 방법은 없는지 제미나이에게 물어보니 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\"><code>element.animate</code></a>를 사용해서 변환을 했다. <code>display</code> 조작의 영향을 받지 않고 의도대로 작 작동한다.</p>\r\n\r\n<p>키프레임 애니메이션을 자바스크립트로 구성하는 느낌이다. <code>element.animate(keyframes, options)</code>와 같이 사용하면 간단하게 이용할 수 있다.</p>\r\n\r\n<pre><code>document.querySelector('div').animate([\r\n\t{ width: '100px' },\r\n\t{ width: '200px' },\r\n], {\r\n\tduration: 500,\r\n\tfill: 'forwards',\r\n\teasing: 'ease'\r\n});</code></pre>\r\n\r\n<p><a href=\"https://caniuse.com/mdn-api_element_animate\">나온지 10년</a>이 다 되어가는데 잘 모르고 있었다. CSS로 애니메이션을 제어하는 것을 선호하기는 하는데 동적으로 변경되는 애니메이션을 만들어야 할 때에 유용하게 사용할 수 있다. <a href=\"https://caniuse.com/mdn-api_element_animate_options_timeline_parameter\">타임라인</a>이나 <a href=\"https://caniuse.com/mdn-api_element_animate_options_rangestart_parameter\">레인지</a>도 정의할 수 있는데 파이어폭스가 아직 지원을 안한다.</p>",
        "contentSnippet": "시작은 제이쿼리로 되어 있는 코드를 바닐라로 변환이 필요해서 였다. 화면에서 보이지 않다가 특정 조건에서 화면에 나오는 애니메이션을 보여주는 기능이었다. 챗지피티에 물어보니 전반적인 변환은 잘 해줬는데 화면에 나오기 직전에 display: none을 block로 바꿔주다 보니 트랜지션 애니메이션이 작동하지 않았다. element.offsetWidth;같이 레이아웃을 참조하면 애니메이션이 되지만 다른 방법은 없는지 제미나이에게 물어보니 element.animate를 사용해서 변환을 했다. display 조작의 영향을 받지 않고 의도대로 작 작동한다.\n\r\n\r\n키프레임 애니메이션을 자바스크립트로 구성하는 느낌이다. element.animate(keyframes, options)와 같이 사용하면 간단하게 이용할 수 있다.\n\r\n\r\ndocument.querySelector('div').animate([\r\n\t{ width: '100px' },\r\n\t{ width: '200px' },\r\n], {\r\n\tduration: 500,\r\n\tfill: 'forwards',\r\n\teasing: 'ease'\r\n});\n\r\n\r\n나온지 10년이 다 되어가는데 잘 모르고 있었다. CSS로 애니메이션을 제어하는 것을 선호하기는 하는데 동적으로 변경되는 애니메이션을 만들어야 할 때에 유용하게 사용할 수 있다. 타임라인이나 레인지도 정의할 수 있는데 파이어폭스가 아직 지원을 안한다.",
        "guid": "https://hyeonseok.com/blog/939",
        "isoDate": "2025-08-09T17:13:48.000Z"
      }
    ]
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": [
      {
        "creator": "dlehddus84",
        "title": "25.08.03 - 아를의 평원, 캐슬 콤보",
        "link": "https://blog.naver.com/dlehddus84/223957607677?fromRss=true&trackingCode=rss",
        "pubDate": "Sun, 03 Aug 2025 21:55:07 +0900",
        "author": "dlehddus84",
        "content": "게임을 하면서 사진을 잘 안찍어서 사진은 많지 않지만 간단히라도 평을 남겨보려고 한다. 아를의 평원 우베 로젠버그의 게임으로 2인 전용이고 확장을 넣으면 3인까지 할 수 있다. 아를이란 지역을 개발하여 여러 건물을 올리고 농사를 짖고 교역을 하면서 건물을 짖고 여행도 가고 하면서 점수를 모으면 된다. 여기저기 마이너스 점수가 있고 채우면 없어진다. 황무지를 개간하면 토탄이란 개념이 나오는데 그냥 석탄이라고 이해하면 편하다. 평소엔 잘 쓰지않는 단어지만 난 게임을 하면서 몇번 들었던 적이 있어서 어색하진 않았으나 처음듣는 사람은 그게 뭔데 ? 할 수 있다. 맨날 먹는 우베의 그런 맛이지만 역시 맛있는 그런 느낌이다. 와....... <img src=\"https://blogthumb.pstatic.net/MjAyNTA4MDNfMjg2/MDAxNzU0MjI1MDc1Mjkz.KrZ_B2HjCqvc1i0XbTcRAOvRgC7utPOeoapX07wNG_Mg.ryVI4iNb8nVGMpu32eLbhfkSPv9m2XgI7W53OVJRJz4g.JPEG/KakaoTalk_20250803_214247769.jpg?type=s3\" />",
        "contentSnippet": "게임을 하면서 사진을 잘 안찍어서 사진은 많지 않지만 간단히라도 평을 남겨보려고 한다. 아를의 평원 우베 로젠버그의 게임으로 2인 전용이고 확장을 넣으면 3인까지 할 수 있다. 아를이란 지역을 개발하여 여러 건물을 올리고 농사를 짖고 교역을 하면서 건물을 짖고 여행도 가고 하면서 점수를 모으면 된다. 여기저기 마이너스 점수가 있고 채우면 없어진다. 황무지를 개간하면 토탄이란 개념이 나오는데 그냥 석탄이라고 이해하면 편하다. 평소엔 잘 쓰지않는 단어지만 난 게임을 하면서 몇번 들었던 적이 있어서 어색하진 않았으나 처음듣는 사람은 그게 뭔데 ? 할 수 있다. 맨날 먹는 우베의 그런 맛이지만 역시 맛있는 그런 느낌이다. 와.......",
        "guid": "https://blog.naver.com/dlehddus84/223957607677",
        "categories": [
          "플레이"
        ],
        "isoDate": "2025-08-03T12:55:07.000Z"
      }
    ]
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "3년 차 앱 개발자가 일하는 순서를 공유합니다",
        "link": "https://techblog.lycorp.co.jp/ko/sharing-the-workflow-of-a-third-year-app-developer",
        "pubDate": "Fri, 08 Aug 2025 02:00:00 GMT",
        "content": "안녕하세요, LINE Plus에서 근무하고 있는 최연두입니다. 이 글에서는 시행착오 끝에 정착한 저만의 ‘일하는 방식’을 공유하려고 합니다. 다른 팀의 아무개가 일하는 방식이 궁금...",
        "contentSnippet": "안녕하세요, LINE Plus에서 근무하고 있는 최연두입니다. 이 글에서는 시행착오 끝에 정착한 저만의 ‘일하는 방식’을 공유하려고 합니다. 다른 팀의 아무개가 일하는 방식이 궁금...",
        "guid": "https://techblog.lycorp.co.jp/ko/sharing-the-workflow-of-a-third-year-app-developer",
        "isoDate": "2025-08-08T02:00:00.000Z"
      },
      {
        "title": "Nginx 설정 통합과 Loki 연동으로 설계한 유연한 멀티사이트 아키텍처",
        "link": "https://techblog.lycorp.co.jp/ko/flexible-multi-site-architecture-with-integrated-nginx-configuration-and-loki",
        "pubDate": "Thu, 07 Aug 2025 06:00:00 GMT",
        "content": "들어가며안녕하세요. LINE NEXT DevOps 팀에서 일하고 있는 이동원이라고 합니다. 현재 쿠버네티스 기반의 인프라 운영과 유지 보수, CI/CD 구축, 로그 수집 및 모니터...",
        "contentSnippet": "들어가며안녕하세요. LINE NEXT DevOps 팀에서 일하고 있는 이동원이라고 합니다. 현재 쿠버네티스 기반의 인프라 운영과 유지 보수, CI/CD 구축, 로그 수집 및 모니터...",
        "guid": "https://techblog.lycorp.co.jp/ko/flexible-multi-site-architecture-with-integrated-nginx-configuration-and-loki",
        "isoDate": "2025-08-07T06:00:00.000Z"
      },
      {
        "title": "자네, 해커가 되지 않겠나? Hack Day 2025에 다녀왔습니다!",
        "link": "https://techblog.lycorp.co.jp/ko/hack-day-2025-recap",
        "pubDate": "Thu, 07 Aug 2025 02:00:00 GMT",
        "content": "안녕하세요. LINE Plus 소속 Redis 팀의 김정훈입니다. 저는 지난 7월 2일부터 4일까지 사흘간 진행된 사내 해커톤 'Hack Day 2025'에 참가했습니다. Hack...",
        "contentSnippet": "안녕하세요. LINE Plus 소속 Redis 팀의 김정훈입니다. 저는 지난 7월 2일부터 4일까지 사흘간 진행된 사내 해커톤 'Hack Day 2025'에 참가했습니다. Hack...",
        "guid": "https://techblog.lycorp.co.jp/ko/hack-day-2025-recap",
        "isoDate": "2025-08-07T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": [
      {
        "title": "트랜잭션 상태를 한눈에! AOP 활용 롤백 테스트 구현기",
        "link": "https://velog.io/@sweet_sumin/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%83%81%ED%83%9C%EB%A5%BC-%ED%95%9C%EB%88%88%EC%97%90-AOP-%ED%99%9C%EC%9A%A9-%EB%A1%A4%EB%B0%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%EA%B8%B0",
        "pubDate": "Fri, 08 Aug 2025 05:23:26 GMT",
        "content": "<h1 id=\"📌-개요\">📌 개요</h1>\n<p>트랜잭션은 데이터의 일관성을 보장하기 위한 핵심 메커니즘이다.특히 복잡한 비즈니스 로직에서 여러 서비스가 얽혀 있을 때, 어느 한 단계라도 실패하면 전체 작업이 롤백되어야 한다.</p>\n<p>이번 글에서는 스프링 트랜잭션 롤백이 잘 동작하는지 테스트하는 방법과\nAOP를 활용해 트랜잭션 상태(롤백 여부, 예외 발생 여부)를 실시간으로 추적하는 방법을 주문 기능과 함께 이야기해보려고 한다. </p>\n<p>사실 난 지금까지 부끄럽지만 롤백 테스트를 postman을 이용한 실테스트로 진행해왔다. 이번에는 롤백 테스트도 테스트 코드로 해낼 수 있지 않을까?에서 부터 시작된 이야기이다.</p>\n<h1 id=\"📌-트랜잭션-롤백-테스트의-필요성\">📌 트랜잭션 롤백 테스트의 필요성</h1>\n<p>예를 들어, 주문 생성 시 재고 차감과 결제 포인트 차감이 동시에 이루어진다.\n만약 재고 차감에서 예외가 발생하면, 결제 역시 취소되어야 한다.</p>\n<p>이를 보장하기 위해서는 전체 주문 프로세스가 하나의 트랜잭션 내에서 실행되어야 하며,한 부분이라도 실패하면 전체가 롤백되어야 한다.</p>\n<h1 id=\"📌-필요한-구성-요소\">📌 필요한 구성 요소</h1>\n<h3 id=\"1-트랜잭션-상태-정보-저장용-객체-transactiontraceinfo\">1. 트랜잭션 상태 정보 저장용 객체 (TransactionTraceInfo)</h3>\n<p>트랜잭션 실행 중 발생한 상태(어떤 메서드에서, 어떤 인자와 함께 실행됐고, 롤백 상태인지, 예외가 있었는지)를 한 곳에 모아 구조화된 데이터로 관리하기 위해 필요하다.</p>\n<ul>\n<li>메서드 이름과 인자를 기록해 어떤 트랜잭션인지 추적 가능</li>\n<li>롤백 여부를 알면 트랜잭션 성공/실패를 판단할 수 있음</li>\n<li>예외 발생 여부로 문제 발생 원인 분석 가능</li>\n</ul>\n<h3 id=\"2-저장소transactiontraceholder\">2. 저장소(TransactionTraceHolder)</h3>\n<p>트랜잭션 상태 정보를 스레드 로컬(ThreadLocal) 에 안전하게 저장하고 꺼내는 저장소 역할이다. 동시에 여러 요청이 병렬로 처리되는 서버 환경에서, 각 요청별로 트랜잭션 상태를 독립적으로 관리하기 위해 필요하다.\nThreadLocal은 각 스레드마다 독립된 저장 공간을 제공하기 때문에, 여러 스레드가 동시에 접근해도 데이터가 섞이지 않는다.</p>\n<ul>\n<li>ThreadLocal을 이용해 스레드별 독립 저장소 제공</li>\n<li>여러 스레드가 하나의 전역 변수나 공유 객체를 건드리는 것을 방지해 데이터 충돌, 혼선 방지</li>\n<li>테스트나 로그에서 각 트랜잭션의 상태를 정확히 조회하기 위한 안정적이고 안전한 상태 보관소 역할</li>\n<li>요청 처리가 끝나면 clear()로 상태 제거해 메모리 누수 및 정보 오염 방지\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/65264cc1-b522-459e-b627-dd3b7a7737bf/image.png\" alt=\"\"></li>\n</ul>\n<h3 id=\"3-aop-처리기-transactiontraceaspect\">3. AOP 처리기 (TransactionTraceAspect)</h3>\n<p>Spring의 AOP(Aspect-Oriented Programming)를 사용해 @Transactional이 붙은 메서드 호출 시점에 개입하여 트랜잭션 상태(rollback 여부, 예외 발생 여부 등)를 추적하고 기록하는 클래스가 필요하다. 즉, 트랜잭션 동작을 감시하는 관찰자 역할을 하는 TransactionTraceAspect를 만들어냈다. \n이를 통해, 트랜잭션 내부에서 발생한 상태(성공, 실패, 롤백 여부)를 코드 변경 없이도 획득할 수 있어 테스트나 로깅등을 할 수 있다. </p>\n<ul>\n<li>트랜잭션 동작을 관찰하는 역할</li>\n<li>별도 코드 수정 없이 트랜잭션 상태 정보 획득 가능</li>\n<li>테스트 및 로깅에 활용 가능\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/206074e3-ab76-4d29-9b5d-faf03eded3c0/image.png\" alt=\"\"></li>\n</ul>\n<h1 id=\"📌-트랜잭션-롤백-테스트와-상태-추적-aop의-원리\">📌 트랜잭션 롤백 테스트와 상태 추적 AOP의 원리</h1>\n<ol>\n<li>스프링 트랜잭션 관리 원리\n스프링은 AOP를 구현하기 위해 프록시 패턴을 사용합니다. @Transactional이 붙은 클래스에 대해 동적 프록시를 생성하고, 이 프록시를 통해 메서드 호출을 가로채 트랜잭션 경계를 설정한다.</li>\n</ol>\n<ul>\n<li>스프링은 @Transactional이 붙은 클래스에 대해 프록시 객체를 생성한다.</li>\n<li>클라이언트가 실제 객체의 메서드를 호출하면, 스프링은 프록시 객체를 통해 호출을 가로챈다.</li>\n<li>프록시는 트랜잭션을 시작하고, 실제 객체의 메서드를 실행한다.</li>\n<li>메서드가 정상 종료되면 프록시는 트랜잭션을 커밋한다.</li>\n<li>메서드 실행 중 예외가 발생하면 프록시는 트랜잭션을 롤백하여 데이터 일관성을 보장한다.</li>\n</ul>\n<ol start=\"2\">\n<li>트랜잭션 롤백 테스트 원리</li>\n</ol>\n<ul>\n<li>테스트는 @Transactional이 적용된 최상위 메서드를 대상으로 한다.</li>\n<li>이때 모킹 프레임워크(Mockito 등)를 사용하여 내부 서비스 메서드에 강제로 예외를 발생시킨다.</li>\n<li>최상위 메서드는 이 예외를 감지하고, 스프링의 트랜잭션 관리자에 의해 롤백이 유도된다.</li>\n<li>테스트는 이 롤백이 실제로 발생했는지 검증하여 트랜잭션이 올바르게 동작하는지 확인한다.</li>\n</ul>\n<ol start=\"3\">\n<li>트랜잭션 상태 추적을 위한 AOP 원리</li>\n</ol>\n<ul>\n<li>AOP(Aspect Oriented Programming)를 이용해 @Transactional 메서드 실행 시점 전후에 추가 로직을 삽입한다.</li>\n<li>메서드 실행 전, AOP는 ThreadLocal 기반 저장소(TransactionTraceHolder)에 트랜잭션 추적 정보를 기록한다.</li>\n<li>메서드 실행 중 예외가 발생하면 AOP는 이를 감지하고, 트랜잭션 상태(TransactionAspectSupport.currentTransactionStatus())를 읽어와 롤백 여부, 예외 발생 여부를 추적 정보에 업데이트한다.</li>\n<li>이 상태 정보는 테스트 코드나 로깅 시스템에서 참조할 수 있어, 트랜잭션의 동작을 정확히 파악할 수 있다.</li>\n</ul>\n<h2 id=\"테스트-진행\">테스트 진행</h2>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/59f30e3c-3fc8-44e8-ad0f-52aac252c532/image.png\" alt=\"\">\n롤백 테스트 중 재고차감 실패시 전체 트랜잭션이 롤백되는지의 여부를 확인하는 테스트이다. </p>\n<h3 id=\"핵심-메커니즘\">핵심 메커니즘</h3>\n<ul>\n<li>TransactionAspectSupport.currentTransactionStatus()를 호출해 현재 스프링 트랜잭션의 상태를 얻는다.</li>\n<li>isRollbackOnly 값이 true면, 해당 트랜잭션은 롤백 대기 상태임을 의미한다.</li>\n<li>@Around 어드바이스는 예외 발생 여부를 감지하고, 메서드 실행 결과와 함께 상태 정보를 저장한다.</li>\n</ul>\n<h2 id=\"소감\">소감</h2>\n<p>처음에는 트랜잭션 롤백 테스트가 복잡하고 어려운 주제로 느껴졌다.특히 여러 서비스가 엮여 있고, 동시에 발생하는 예외 상황까지 고려해야 하다 보니 더욱 그랬다.\n하지만 이번에 직접 코드를 작성하고, AOP로 트랜잭션 상태를 추적하는 방식을 적용해보면서\n스프링이 제공하는 트랜잭션 관리의 강력함과 유연함을 다시 한번 체감할 수 있었다. \n테스트 코드로 롤백 동작을 검증하니, 수작업 테스트 대비 훨씬 신뢰도가 높고 반복 가능하다는 점도 큰 장점이었고, 이 덕분에 서비스 안정성을 높이는 데 큰 도움이 될 것이라 생각한다. \n또한, AOP를 활용해 트랜잭션 상태 정보를 실시간으로 수집하고 기록하는 구조는\n로깅이나 모니터링, 문제 발생 시 원인 분석에도 매우 유용하다는 점에서\n운영 환경에서 장애 대응에 큰 힘이 될 것이라는 생각이 들었다.</p>\n",
        "contentSnippet": "📌 개요\n트랜잭션은 데이터의 일관성을 보장하기 위한 핵심 메커니즘이다.특히 복잡한 비즈니스 로직에서 여러 서비스가 얽혀 있을 때, 어느 한 단계라도 실패하면 전체 작업이 롤백되어야 한다.\n이번 글에서는 스프링 트랜잭션 롤백이 잘 동작하는지 테스트하는 방법과\nAOP를 활용해 트랜잭션 상태(롤백 여부, 예외 발생 여부)를 실시간으로 추적하는 방법을 주문 기능과 함께 이야기해보려고 한다. \n사실 난 지금까지 부끄럽지만 롤백 테스트를 postman을 이용한 실테스트로 진행해왔다. 이번에는 롤백 테스트도 테스트 코드로 해낼 수 있지 않을까?에서 부터 시작된 이야기이다.\n📌 트랜잭션 롤백 테스트의 필요성\n예를 들어, 주문 생성 시 재고 차감과 결제 포인트 차감이 동시에 이루어진다.\n만약 재고 차감에서 예외가 발생하면, 결제 역시 취소되어야 한다.\n이를 보장하기 위해서는 전체 주문 프로세스가 하나의 트랜잭션 내에서 실행되어야 하며,한 부분이라도 실패하면 전체가 롤백되어야 한다.\n📌 필요한 구성 요소\n1. 트랜잭션 상태 정보 저장용 객체 (TransactionTraceInfo)\n트랜잭션 실행 중 발생한 상태(어떤 메서드에서, 어떤 인자와 함께 실행됐고, 롤백 상태인지, 예외가 있었는지)를 한 곳에 모아 구조화된 데이터로 관리하기 위해 필요하다.\n메서드 이름과 인자를 기록해 어떤 트랜잭션인지 추적 가능\n롤백 여부를 알면 트랜잭션 성공/실패를 판단할 수 있음\n예외 발생 여부로 문제 발생 원인 분석 가능\n2. 저장소(TransactionTraceHolder)\n트랜잭션 상태 정보를 스레드 로컬(ThreadLocal) 에 안전하게 저장하고 꺼내는 저장소 역할이다. 동시에 여러 요청이 병렬로 처리되는 서버 환경에서, 각 요청별로 트랜잭션 상태를 독립적으로 관리하기 위해 필요하다.\nThreadLocal은 각 스레드마다 독립된 저장 공간을 제공하기 때문에, 여러 스레드가 동시에 접근해도 데이터가 섞이지 않는다.\nThreadLocal을 이용해 스레드별 독립 저장소 제공\n여러 스레드가 하나의 전역 변수나 공유 객체를 건드리는 것을 방지해 데이터 충돌, 혼선 방지\n테스트나 로그에서 각 트랜잭션의 상태를 정확히 조회하기 위한 안정적이고 안전한 상태 보관소 역할\n요청 처리가 끝나면 clear()로 상태 제거해 메모리 누수 및 정보 오염 방지\n\n3. AOP 처리기 (TransactionTraceAspect)\nSpring의 AOP(Aspect-Oriented Programming)를 사용해 @Transactional이 붙은 메서드 호출 시점에 개입하여 트랜잭션 상태(rollback 여부, 예외 발생 여부 등)를 추적하고 기록하는 클래스가 필요하다. 즉, 트랜잭션 동작을 감시하는 관찰자 역할을 하는 TransactionTraceAspect를 만들어냈다. \n이를 통해, 트랜잭션 내부에서 발생한 상태(성공, 실패, 롤백 여부)를 코드 변경 없이도 획득할 수 있어 테스트나 로깅등을 할 수 있다. \n트랜잭션 동작을 관찰하는 역할\n별도 코드 수정 없이 트랜잭션 상태 정보 획득 가능\n테스트 및 로깅에 활용 가능\n\n📌 트랜잭션 롤백 테스트와 상태 추적 AOP의 원리\n스프링 트랜잭션 관리 원리\n스프링은 AOP를 구현하기 위해 프록시 패턴을 사용합니다. @Transactional이 붙은 클래스에 대해 동적 프록시를 생성하고, 이 프록시를 통해 메서드 호출을 가로채 트랜잭션 경계를 설정한다.\n스프링은 @Transactional이 붙은 클래스에 대해 프록시 객체를 생성한다.\n클라이언트가 실제 객체의 메서드를 호출하면, 스프링은 프록시 객체를 통해 호출을 가로챈다.\n프록시는 트랜잭션을 시작하고, 실제 객체의 메서드를 실행한다.\n메서드가 정상 종료되면 프록시는 트랜잭션을 커밋한다.\n메서드 실행 중 예외가 발생하면 프록시는 트랜잭션을 롤백하여 데이터 일관성을 보장한다.\n트랜잭션 롤백 테스트 원리\n테스트는 @Transactional이 적용된 최상위 메서드를 대상으로 한다.\n이때 모킹 프레임워크(Mockito 등)를 사용하여 내부 서비스 메서드에 강제로 예외를 발생시킨다.\n최상위 메서드는 이 예외를 감지하고, 스프링의 트랜잭션 관리자에 의해 롤백이 유도된다.\n테스트는 이 롤백이 실제로 발생했는지 검증하여 트랜잭션이 올바르게 동작하는지 확인한다.\n트랜잭션 상태 추적을 위한 AOP 원리\nAOP(Aspect Oriented Programming)를 이용해 @Transactional 메서드 실행 시점 전후에 추가 로직을 삽입한다.\n메서드 실행 전, AOP는 ThreadLocal 기반 저장소(TransactionTraceHolder)에 트랜잭션 추적 정보를 기록한다.\n메서드 실행 중 예외가 발생하면 AOP는 이를 감지하고, 트랜잭션 상태(TransactionAspectSupport.currentTransactionStatus())를 읽어와 롤백 여부, 예외 발생 여부를 추적 정보에 업데이트한다.\n이 상태 정보는 테스트 코드나 로깅 시스템에서 참조할 수 있어, 트랜잭션의 동작을 정확히 파악할 수 있다.\n테스트 진행\n\n롤백 테스트 중 재고차감 실패시 전체 트랜잭션이 롤백되는지의 여부를 확인하는 테스트이다. \n핵심 메커니즘\nTransactionAspectSupport.currentTransactionStatus()를 호출해 현재 스프링 트랜잭션의 상태를 얻는다.\nisRollbackOnly 값이 true면, 해당 트랜잭션은 롤백 대기 상태임을 의미한다.\n@Around 어드바이스는 예외 발생 여부를 감지하고, 메서드 실행 결과와 함께 상태 정보를 저장한다.\n소감\n처음에는 트랜잭션 롤백 테스트가 복잡하고 어려운 주제로 느껴졌다.특히 여러 서비스가 엮여 있고, 동시에 발생하는 예외 상황까지 고려해야 하다 보니 더욱 그랬다.\n하지만 이번에 직접 코드를 작성하고, AOP로 트랜잭션 상태를 추적하는 방식을 적용해보면서\n스프링이 제공하는 트랜잭션 관리의 강력함과 유연함을 다시 한번 체감할 수 있었다. \n테스트 코드로 롤백 동작을 검증하니, 수작업 테스트 대비 훨씬 신뢰도가 높고 반복 가능하다는 점도 큰 장점이었고, 이 덕분에 서비스 안정성을 높이는 데 큰 도움이 될 것이라 생각한다. \n또한, AOP를 활용해 트랜잭션 상태 정보를 실시간으로 수집하고 기록하는 구조는\n로깅이나 모니터링, 문제 발생 시 원인 분석에도 매우 유용하다는 점에서\n운영 환경에서 장애 대응에 큰 힘이 될 것이라는 생각이 들었다.",
        "guid": "https://velog.io/@sweet_sumin/%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%EC%83%81%ED%83%9C%EB%A5%BC-%ED%95%9C%EB%88%88%EC%97%90-AOP-%ED%99%9C%EC%9A%A9-%EB%A1%A4%EB%B0%B1-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84%EA%B8%B0",
        "isoDate": "2025-08-08T05:23:26.000Z"
      }
    ]
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "농부의 마음",
        "link": "https://www.thestartupbible.com/2025/08/from-seeds-to-weeds.html",
        "pubDate": "Wed, 06 Aug 2025 21:21:00 +0000",
        "content:encodedSnippet": "스트롱을 처음 시작할 때, 주위의 선배 VC 분들이 투자는 농부가 씨를 뿌리고, 식물이 죽지 않고 잘 자라기를 바라는 농부의 마음이 있어야 한다는 조언을 해줬다. 경험한 만큼만 알고, 아는 만큼만 안다는 말처럼, 그땐 이게 무슨 말인지 몰랐는데, 13년 동안 VC를 해보니 이제 이 농부의 마음이 어떤 건지 조금씩 알 것 같고, 실제로 매일 농사를 짓는 마음으로 투자하고, 투자사를 대하고 있다.\n이건 한국이나 미국이나 마찬가지라서 가장 초기에 투자하는 걸 시드(=seed) 투자라고 하는가 보다. 우리 같은 시드 투자자는 말 그대로 씨가 잘 자라기 위한 초기 자금을 제공하거나, 아니면 우리가 이 씨를 뿌린다고 생각할 수 있다. 우리는 농부와 같이 아주 넓은 농장이나 밭에 아주 랜덤하게 많은 씨를 뿌리고, 이 씨들이 잘 자랄 수 있게 다양한 지원을 한다. 일단 이 씨들이 잘 자라기 위한 필수 요소인 물과 토양은 VC들이 제공하는 자금이다. 씨앗이 자라서 큰 나무가 되려면 더욱더 많은 수분이 필요하고, 더 많은 영양소가 시기적절하게 필요한데, 스타트업이 성장하려면 더 많은 자금이 필요한 것과 비슷하다고 보면 된다.\n물과 비료는 농부가 제공할 수도 있다. 하지만, 씨앗이 나무가 되기 위해선 이 외에도 많은 게 필요하다. 비도 와야 하고, 충분한 햇빛도 필요하고, 바람도 불어야 하는데 날씨는 농부가 컨트롤할 수 없는 시장 상황과 비슷하다. 유동성이 풍부해서 투자를 잘 받는 시장 환경이 있는가 하면, 최근 몇 년과 같이 돈이 말라서 가뭄인 환경도 있는데, 이건 우리가 어떻게 할 수 없어서 그때마다 시장 상황에 따라서 적응하고 조절해야 한다. 아무리 노련한 농부도 항상 풍년만 경험하는 게 아니다. 농사하다 보면 날씨와 같은 여러 가지 외부 요소 때문에 풍년과 흉년을 번갈아 경험하는데, 노련한 농부는 이때마다 잘 적응하고 조절한다.\n농부의 마음으로 뿌린 씨가 잘 자라길 간절히 바라지만, 솔직히 이 중 어떤 씨앗이 생존해서 큰 나무가 될 진 아무도 모른다. 재수 없는 흉년이면 모든 씨앗이 전멸하고, 토양이 오염되거나 비가 너무 많이 오거나, 부족하거나, 또는 햇빛이 부족하면 씨는 작은 나무에서 성장을 멈춘다. 하지만, 모든 게 잘 맞아떨어지면, 시간이 지나면서 씨앗에도 복리의 힘이 작용하고, 작은 씨앗이 엄청나게 튼튼하고 큰 나무로 자라는 경우도 있다. 물론, 이런 회사들은 아웃라이어다. 일단 이렇게 나무가 무럭무럭 자라려면 시간이 엄청 많이 걸리고 그 긴 기간 동안 이 나무가 중간에 죽을 수 있는 수백만 가지의 일들이 일어날 수 있다. 농부는 매일 일어나서 하늘을 보면서 날씨를 확인하고, 나뭇잎을 확인하고, 물을 주고, 해충을 죽이고, 정기적으로 토양을 교체해 준다. 마치 우리가 경기의 맥을 확인하고, 투자사의 현금흐름을 확인하고, KPI를 확인하고, 창업가의 정신 상태를 확인하는 것과 비슷한 것 같다.\n가끔은 오랫동안 새싹이 안 올라와서 죽은 줄 알고 방치하는 경우도 있다. 물도 안 주고, 비료도 안 주는데, 어느 날 밭에 가보니까 잡초같이 잘 자라서 아주 큰 나무가 되는 경우도 있다. 크게 기대하지 않았고, 사업을 잘 못 해서 별로 신경 쓰지 않거나, 손실 처리한 회사가 갑자기 엄청나게 빠르게 성장하고, 아주 좋은 VC에게 후속 투자를 받는 게 이런 경우다. 솔직히 우리도 이런 잡초의 케이스를 몇 번 경험했는데, 아주 기분이 좋다. 이런 경우가 더 많으면 좋겠다.\n참고로, 우리같이 많은 스타트업에 투자하는 모델을 미국에서는 ‘spray and pray’ 모델이라고 한다. 많이 뿌리고, 이 중 몇 개가 잘 되길 기도한다는 의미인데, 대화의 컨텍스트에 따라서 많이 투자하고 무책임하게 기도만 하는 도박이라는 부정적인 의미일 수도 있고, 많이 투자하고 열심히 기도한다는(=도와준다는) 긍정적인 의미가 될 수도 있다. 나는 그래서 항상 농담처럼 “우린 spray and pray를 하는데, 나는 pray 하는데 더 많은 시간을 보낸다.”라고도 한다. 그만큼 어떤 회사가 잘 될지 아무도 모르고, 워낙 초기 회사라서 VC가 아무리 이 회사들을 도와줘도 그 결과는 항상 불확실하다는 의미이기도 하다.\n오늘도 열심히 일하러 밭으로 향하고 있고, 기도도 많이 하고 있다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/08/from-seeds-to-weeds.html#respond",
        "content": "스트롱을 처음 시작할 때, 주위의 선배 VC 분들이 투자는 농부가 씨를 뿌리고, 식물이 죽지 않고 잘 자라기를 바라는 농부의 마음이 있어야 한다는 조언을 해줬다. 경험한 만큼만 알고, 아는 만큼만 안다는 말처럼, 그땐 이게 무슨 말인지 몰랐는데, 13년 동안 VC를 해보니 이제 이 농부의 마음이 어떤 건지 조금씩 알 것 같고, 실제로 매일 농사를 짓는 마음으로(...)",
        "contentSnippet": "스트롱을 처음 시작할 때, 주위의 선배 VC 분들이 투자는 농부가 씨를 뿌리고, 식물이 죽지 않고 잘 자라기를 바라는 농부의 마음이 있어야 한다는 조언을 해줬다. 경험한 만큼만 알고, 아는 만큼만 안다는 말처럼, 그땐 이게 무슨 말인지 몰랐는데, 13년 동안 VC를 해보니 이제 이 농부의 마음이 어떤 건지 조금씩 알 것 같고, 실제로 매일 농사를 짓는 마음으로(...)",
        "guid": "https://www.thestartupbible.com/?p=9519",
        "categories": [
          "Uncategorized",
          "strategy",
          "Strong",
          "unicorn",
          "vc"
        ],
        "isoDate": "2025-08-06T21:21:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "느린 죽음",
        "link": "https://www.thestartupbible.com/2025/08/slow-death.html",
        "pubDate": "Sun, 03 Aug 2025 21:32:00 +0000",
        "content:encodedSnippet": "바로 이전 포스팅에 이어 비슷한 맥락의 글을 또 써본다.\n할 수 있는 여건이 되는데도 두려움과 매너리즘 때문에 국도에서 고속도로로 진입하지 못하는 많은 회사들은 언젠가는 망할 확률이 높다. 좋은 비즈니스 모델을 찾아서 돈을 버는 사업 구조를 만들긴 했지만, 이 상황에서는 수익성이 엄청나게 좋진 않을 것이고, 이런 사업은 너무나 다양한 내, 외부 요소의 변화에 대한 면역력이 떨어지기 때문이다. 갑자기 돈이 많은 경쟁사가 시장에 나타나서 시장점유율을 뺐을 수도 있고, 직원들이 대거 퇴사하면서 막대한 퇴직금으로 회복할 수 없는 수준으로 비용이 증가할 수도 있고, 의존하던 유통 채널에 큰 변화가 생길 수도 있고, 그냥 너무 성장이 없어서 직원들이 하나둘씩 떠나면서 사업의 규모가 쪼그라들 수도 있다.\n또한, 이런 비즈니스는 위에서 말한 대로 면역력이 그렇게 높지 않기 때문에, 매번, 매달, 매년 흑자를 내진 못할 것이다. 어떤 달은 살짝 적자가 날 수도 있고, 어떤 달은 일회성 비용이 확 증가할 수도 있다. 또한, 현금 보유량은 계속 유지되거나, 조금씩 증가할 수도 있지만, 물가상승률을 고려했을 때 임직원들의 연봉도 같이 올라야 하는데, 성장 없이 현 상태에서 이것저것 맞추다 보면 서서히 비즈니스는 줄어들 것이다. 이런 상황에서 갑자기 새로운 경쟁사가 출현하거나, 대기업이 이 시장으로 진입하면, 면역력이 약한 사람이 단순 감기 탓에 사망할 수 있듯이, 이 사업은 한 방에 망할 수 있다.\n즉, 계속 국도로만 가다 보면, 영어로 말하는 slow death를 맞이할 확률이 매우 높다. 그 속도가 너무 느려서 잘 못 느낄 뿐이지, 시간이 갈수록 이 사업은 천천히 침몰하는 배와 같이 천천히 속력이 줄어서 멈출 것이다. 우리 사업도 현재 느리게 죽고 있다면, 대표들은 아주 과감한 결정을 내릴 필요가 있다. 즉, 빨리 고속도로로 진입해야 한다.\n과감한 결정을 했는데 그 방향이 잘못됐다면, 빨리 죽을 수도 있지만, 어쩌면 이게 느린 죽음보다 더 나을 수 있다. 바로 죽든, 느리게 죽든, 어차피 결론은 똑같이 망하는 것이라면, 그냥 지금 당장 망해서 대표와 임직원들이 하루라도 젊었을 때 다른 곳에 취직하거나, 다른 시도를 하는 게 모두에게 더 좋을 수도 있기 때문이다.\n이 글을 다시 읽어보니, 조금 극단적이긴 하다. 어쨌든 우리 사업이 이렇게 천천히 죽어가는 건 아닌지, 대표들은 냉정하게 판단해 볼 필요가 있다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/08/slow-death.html#comments",
        "content": "바로 이전 포스팅에 이어 비슷한 맥락의 글을 또 써본다. 할 수 있는 여건이 되는데도 두려움과 매너리즘 때문에 국도에서 고속도로로 진입하지 못하는 많은 회사들은 언젠가는 망할 확률이 높다. 좋은 비즈니스 모델을 찾아서 돈을 버는 사업 구조를 만들긴 했지만, 이 상황에서는 수익성이 엄청나게 좋진 않을 것이고, 이런 사업은 너무나 다양한 내, 외부 요소의 변화에 대한 면역력이 떨어지기(...)",
        "contentSnippet": "바로 이전 포스팅에 이어 비슷한 맥락의 글을 또 써본다. 할 수 있는 여건이 되는데도 두려움과 매너리즘 때문에 국도에서 고속도로로 진입하지 못하는 많은 회사들은 언젠가는 망할 확률이 높다. 좋은 비즈니스 모델을 찾아서 돈을 버는 사업 구조를 만들긴 했지만, 이 상황에서는 수익성이 엄청나게 좋진 않을 것이고, 이런 사업은 너무나 다양한 내, 외부 요소의 변화에 대한 면역력이 떨어지기(...)",
        "guid": "https://www.thestartupbible.com/?p=9517",
        "categories": [
          "Uncategorized",
          "failure",
          "FoundersAtWork",
          "strategy"
        ],
        "isoDate": "2025-08-03T21:32:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "모두를 위한 스포츠가 된 F1(포뮬러 원)",
        "link": "https://toss.im/tossfeed/article/moneyball-5",
        "pubDate": "Thu, 07 Aug 2025 03:42:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}F1은 부자들이 즐기는 고급 취미이자, 해외 뉴스에서나 간간이 접하는 낯선 스포츠였습니다. 그런데 지금은 분위기가 완전히 바뀌었어요. \n브래드 피트가 F1 머신을 몰고 달리는 영화가 전 세계 박스오피스를 휩쓸고 있고, 넷플릭스 다큐멘터리는 ‘레이싱을 몰라도 재밌다’는 반응을 얻고 있어요. <F1 더 무비>는 개봉 한 달 만에 5억 달러, 우리 돈으로 약 7,000억 원 가까운 수익을 기록하며 역대급 흥행작이 됐습니다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}F1은 더 이상 소수를 위한 고급 취향이 아닙니다. 콘텐츠, 엔터테인먼트, 지역 경제까지 아우르는 모두를 위한 스포츠 산업이 되었죠.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}영화 <F1: 더 무비> 스틸컷 / 사진: Apple TV\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}부자들의 놀이터이자\n레이싱 팀의 머니 게임\nF1이 오랫동안 ‘부자들의 스포츠’라는 이미지를 굳히게 된 데는 경기장 가장 좋은 자리에 위치한 ‘패독 클럽’의 영향이 큽니다. 드라이버와 머신을 가장 가까이서 볼 수 있고, 랍스터와 샴페인을 곁들인 최고급 식사가 제공되는 이 공간은 전 세계 부호들과 셀럽들의 사교장이자 비즈니스 미팅 장소로 활용됩니다.\n입장권 가격은 3일 기준 1인당 약 600만 원. 한 대회에만 4,000명 가까운 VIP들이 이곳을 찾습니다. 패독 클럽에서 발생하는 매출은 F1 전체 수입의 약 10%에 불과하지만, 이곳에서 맺어지는 후원 계약과 기업 간 거래는 그 이상의 가치를 지닙니다. 말 그대로 ‘부자들의 놀이터’라 불릴 만한 공간이죠.\n\n모나코 그랑프리 서킷의 패독 클럽 / 사진: 로이터\n이 놀이터를 유지하는 데 필요한 건 결국 돈입니다. 최고 시속 350km를 넘나드는 F1 머신을 만들고, 매 시즌 24개 도시를 돌며 레이스를 치르려면 천문학적인 운영비가 필요하기 때문이죠. \n2019년, 메르세데스 팀이 쓴 운영비는 무려 6,680억 원. 페라리와 레드불도 비슷한 수준이었고, 이들의 운영비는 유럽의 대표적인 부자 축구 클럽 레알 마드리드의 2024-2025 시즌 선수 연봉 총액(4,428억 원)과 비교해도 훨씬 많습니다.\n이런 이유로 돈을 많이 쓰는 팀이 챔피언이 될 가능성도 높습니다. 자연스럽게 F1 챔피언을 향한 팀들의 경쟁은 머니 게임이 되었고, 특정 팀이 우승을 독식하는 구조가 이어졌습니다. 이를 견제하기 위해 2021년부터 F1은 코스트 캡* 제도를 도입했습니다.\n* 팀당 한 해 동안 사용할 수 있는 총 지출 한도를 정한 제도로, 2025년 기준으로 F1의 연간 코스트 캡은 약 1,939억 원이에요.\n하지만 제도의 효과는 아직 미미합니다. 머신 개발비, 드라이버 연봉, 팀 내 고액 연봉자 3명의 급여는 코스트 캡 대상에서 제외돼 있고, 팀마다 예외 조항을 활용해 여전히 많은 돈을 쓰고 있기 때문입니다. 계열사를 통한 아웃소싱, 회계상 지출 축소, 정규직 직원 대신 파트타이머 고용 확대 등 다양한 방식으로 규제를 피하고 있는 겁니다. 실제로 레드불은 제도 시행 이후 정규직 직원 90명을 정리해고하기도 했습니다.\n레드불은 코스트 캡 제도를 도입한 첫해부터 금액을 초과했고, 약 113억 원의 벌금만 낸 뒤 2021년부터 2024년까지 4년 연속 챔피언에 올랐습니다. 우승으로 얻는 수익을 고려하면 벌금은 충분히 감당할 수 있는 수준이었습니다. 이 때문에 제도의 실효성에 대한 의문이 계속 제기되고 있습니다.\n리버티 미디어는\n어떻게 F1을 대중 스포츠로 바꿨을까\nF1이 대중 스포츠로 거듭나는 데 있어 가장 큰 전환점은 2016년, 미국의 미디어 그룹 리버티 미디어가 F1을 인수하면서부터입니다. 이들은 F1을 ‘부자들의 스포츠’가 아닌 ‘모두를 위한 콘텐츠’로 만들겠다는 목표를 세웠습니다.\n첫 번째 신호탄은 2017년 F1의 나스닥 상장이었습니다. 리버티 미디어는 주식 시장을 통해 더 많은 자본을 확보하고, 새로운 투자자들을 끌어들이는 전략으로 F1의 성장 기반을 넓혀갔습니다.\nF1의 대중화를 위한 핵심 전략 중 하나는 ‘개방’이었습니다. 기존에는 엄격하게 제한되던 대회 영상 사용을 완화해 팬들이 직접 찍은 장면을 SNS에 자유롭게 올릴 수 있도록 했고, 자체 OTT 서비스인 ‘F1 TV’도 출시했습니다.\n\n경주용 차량 내부 카메라 뷰, 실시간 데이터 보드 등 다양한 F1 콘텐츠를 즐길 수 있는 F1 TV\n가장 결정적인 한 방은 2019년 넷플릭스와의 협업으로 탄생한 다큐멘터리 <F1: 본능의 질주(Drive to Survive)>였습니다. F1을 잘 몰랐던 시청자들도 이 시리즈를 통해 드라이버 간 경쟁과 팀 내부의 긴장감을 실감 나게 접할 수 있었고, F1을 하나의 콘텐츠로 받아들이기 시작했죠. 시즌 7까지 이어지고 있는 이 시리즈는 F1 관중 수 증가로도 이어졌어요. 2018년 410만 명이던 F1 대회 관중은 2024년 650만 명을 넘겼습니다.\n\n이 변화는 스폰서십 구조도 바꿔놓았습니다. 기존의 F1 매니아나 부자들이 아닌 대중들이 F1 대회에 큰 관심을 갖게 됐기 때문입니다. F1은 전통적으로 자동차, 에너지, 정유, 명품 브랜드 중심의 후원 구성이 많았습니다. 루이비통, 롤렉스 등이 대표적이었죠. \n하지만 대중적인 관심이 높아지자, 이제는 소비재 브랜드도 적극적으로 F1에 뛰어들고 있습니다. 펩시, 하이네켄, 네슬레 같은 기업들이 F1을 새로운 마케팅 무대로 삼았고, 태그호이어는 롤렉스를 대신해 공식 타임키퍼가 되었으며, 아디다스는 메르세데스 팀과 협업을 맺었습니다. 더 많은 사람들이 F1을 보기 시작하자, 다양한 브랜드가 F1을 찾기 시작한 겁니다.\n\n하이네켄 광고로 가득 찬 F1 서킷 광고판 / 사진: 로이터\n미국인은 F1을 안 본다는\n편견을 깬 신의 한 수\n리버티 미디어는 미국 기업답게 F1의 불모지였던 미국 시장 공략에 나섰습니다. F1을 대중 스포츠로 만들기 위해서는 글로벌 확장이 필수였고, 그 중심에는 미국이 있었습니다.\nF1은 미국 시장에서 철저히 외면받던 종목이었습니다. 미국인들은 내스카(NASCAR)나 인디카 같은 자국 중심의 레이스를 더 좋아했거든요. 하지만 리버티 미디어는 이 판을 흔들었습니다. 2022년 마이애미, 2023년 라스베이거스에 신규 그랑프리를 신설했고, 특히 라스베이거스에서는 결승전을 일요일이 아닌 토요일 밤에 열어 도시의 파티 문화와 F1을 연결하는 전략을 택했습니다.\n이는 일요일에 결선 레이스를 펼치는 다른 F1 대회와 차별화 되는 부분인데요. 결선 레이스를 토요일 밤에 배치함으로써 라스베이거스 특유의 야간 관광, 파티, 쇼 비즈니스와의 시너지를 극대화할 수 있었기 때문이죠.\n이 전략은 대성공을 거뒀습니다. 2024년 라스베이거스 F1 대회의 총수입은 1조 2,877억 원으로, 이는 내스카나 인디카 전체 연간 수입을 뛰어넘는 수준이었습니다. 평균 티켓 가격은 약 139만 원으로 24개 F1 대회 중 가장 비쌌고, 지역 경제에 미친 영향도 막대했습니다. 단 3일간 라스베이거스가 벌어들인 세금 수입만 620억 원에 달했죠.\n미국에서 F1에 대한 관심이 커지면서 중계권료도 크게 상승할 것으로 보여요. ESPN이 지불하는 현재 연간 중계권료는 약 1,254억 원 수준이지만, 넷플릭스와 애플TV가 차기 입찰에 뛰어들며 2배 이상 상승할 것이라는 전망이 나옵니다. 여기에 2026년부터는 미국 자동차 브랜드 캐딜락이 F1에 참가할 예정이고, 미국 출신 스타급 드라이버가 탄생한다면 F1에 대한 미국 내 열기는 더욱 커질 것으로 보입니다.\nF1 수익의 숨은 핵심\n레이스 프로모션 비용\n리버티 미디어가 디지털 플랫폼을 통한 대중화 전략과 미국 시장 공략에 성공하면서, F1의 매출 규모는 빠르게 성장했습니다. 2017년 약 2조 4,800억 원이었던 매출은 2024년 기준 약 4조 7,500억 원으로 늘었죠. 7년 동안 91%나 증가한 셈입니다.\n2024년 F1의 수익 구조를 살펴보면, 중계권료가 전체의 약 33%를 차지해 가장 큰 비중을 기록합니다. 이어서 29%는 레이스 프로모션 비용, 나머지 38%는 스폰서십과 패독 클럽을 포함한 기타 수익으로 구성됩니다.\n이 가운데 ‘레이스 프로모션 비용’은 F1만의 독특한 수익 모델이에요. F1은 전 세계 도시와 계약을 맺고, 그 도시에 대회를 열 수 있는 ‘개최권’을 판매합니다. 대회를 유치하려는 도시나 사업자는 매년 수백억 원에 달하는 비용을 F1에 지불해야 하죠. 이 비용이 바로 레이스 프로모션 비용입니다. 다른 프로 스포츠에서 찾아 볼 수 없는 중요한 비즈니스 모델이죠.\n\n2025년 기준, 레이스 프로모션 비용은 대회가 열리는 도시마다 다릅니다. 가장 많은 비용을 지불하는 도시는 아제르바이잔의 수도 바쿠로, 연간 793억 원에 달합니다. 사우디아라비아와 카타르도 각각 764억 원 수준의 비용을 부담하고 있죠.\n흥미로운 점은, 이들 국가에서 열리는 F1 대회는 관중 수가 매우 적다는 것입니다. 바쿠 그랑프리는 연간 7만 5,000명 수준으로 전체 F1 대회 중 최하위권에 머뭅니다. 관중이 적음에도 높은 비용을 지불하는 이유는, 국가 브랜드 홍보 목적이 크기 때문입니다. 오일머니를 기반으로 한 중동 국가들은 F1을 통해 자국의 이미지를 바꾸려는 전략을 취하고 있는 거죠.\n전 세계 도시들이수백억을 들여 F1을 유치하는 이유\nF1 대회를 개최하려면 수백억 원의 비용을 지불해야 합니다. 게다가 대부분의 경우 장기 계약이 필요하기 때문에, 한 도시가 수천억 원에 이르는 비용을 부담하는 일도 흔하죠. 그런데도 전 세계 많은 도시들이 F1 유치에 열을 올리는 이유는 무엇일까요? 답은 간단합니다. 관광 수입과 도시 브랜딩입니다.\n\n모나코 항구에서 펼쳐지는 F1 경기 모습 / 사진: 로이터\n대표적인 성공 사례는 인구 4만 명도 안 되는 도시국가 모나코입니다. 아름다운 항구 도시를 배경으로 펼쳐지는 모나코 그랑프리는 F1 역사상 가장 상징적인 대회로 꼽힙니다. 모나코 그랑프리는 1950년부터 시작돼 지금까지 이어지고 있고, 대회 기간 동안 전체 관광 수입의 약 30%를 벌어들일 만큼 경제적 효과도 큽니다. F1 역시 모나코를 특별하게 생각합니다. 상징성과 흥행력이 높기 때문에, 때로는 개최권료를 거의 받지 않거나 276억 원 수준의 상대적으로 낮은 비용만 받고 대회를 개최하기도 하죠.\n싱가포르 역시 F1 하면 빼놓을 수 없는 도시입니다. 2008년부터 시작된 싱가포르 그랑프리는 도심 스트리트 서킷에서 야간에 펼쳐지는 ‘나이트 레이스’로 유명합니다. 루프탑 바나 고층 빌딩에서도 경기를 관람할 수 있어 도시 전체가 축제 분위기로 바뀌죠. 지난 10년간 이 대회를 보기 위해 싱가포르를 찾은 관광객은 약 45만 명, 이들이 쓴 돈은 약 2조 원에 달합니다. 싱가포르 정부가 매년 487억 원의 개최권료를 기꺼이 지불하는 이유가 여기에 있습니다.\n한 번 실패했던 한국,\n다시 F1에 도전할 수 있을까\n한국도 한때 F1 대회를 개최한 적이 있습니다. 2010년부터 2013년까지 전남 영암에서 열렸지만, F1에 대한 낮은 인지도, 접근성 부족, 열악한 인프라 탓에 흥행에 실패했고, 높은 개최권 비용(약 480억 원)과 수익성 악화로 2014년부터 대회 개최를 포기했습니다. 영암 F1 대회조직위원회의 발표에 따르면 2010년에는 700억 원, 2011년에는 600억 원의 적자를 기록했습니다.\n\n2012년 영암에서 펼쳐진 코리아 그랑프리에 참가한 레드불 팀 / 사진: 로이터\n그런데 최근 인천시가 다시 F1 대회 유치에 나섰습니다. 싱가포르처럼 도심 스트리트 서킷을 고려하고 있고, 이를 위해 인천시는 전체 사업비의 30%를 국비로 지원받기 위해 노력 중입니다. 인천은 국제공항과 수도권 접근성이라는 이점을 갖췄고, 무엇보다 지금은 한국에서도 F1 콘텐츠의 팬층이 꽤 형성됐다는 점에서 성공 가능성이 있어 보입니다.\nF1 대회는 지구상에서 가장 빠른 스포츠 대회입니다. 하지만 F1 대회 개최 여부에 대한 논의는 다양한 문제를 검토해야 하기 때문에 빠르게 하면 안 됩니다. 인천의 F1 대회가 싱가포르 대회와 같은 성공을 거두려면 더더욱 그렇죠. 싱가포르도 F1 대회 유치를 결정하기까지 5~6년 동안 면밀한 검토를 했습니다.\n과연 한 차례 실패를 경험했던 한국에서 F1 대회는 성공할 수 있을까요?\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 이은호 이제현",
        "content": "부자들의 놀이터가 대중 스포츠가 되기까지",
        "contentSnippet": "부자들의 놀이터가 대중 스포츠가 되기까지",
        "guid": "https://toss.im/tossfeed/article/moneyball-5",
        "isoDate": "2025-08-07T03:42:00.000Z"
      },
      {
        "title": "토스, 누적 가입자 수 3,000만 시대 열다",
        "link": "https://toss.im/tossfeed/article/RU3000",
        "pubDate": "Tue, 05 Aug 2025 22:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}2030세대 10명 중 9명 토스 가입…금융 생활 진입점에서 높은 선택 비율\n생산연령인구에서도 가입률 76% 달성…소득 및 소비 주도층 중심으로 사용자 확산\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 지난 7월 말 기준 누적 가입자 3,000만 명을 돌파했다고 6일 밝혔다. 10주년을 맞은 올해, 대한민국 국민 10명 중 6명이 사용하는 대표 금융 플랫폼으로 자리매김했다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n금융 활동을 본격적으로 시작하는 2030세대에서의 가입률은 특히 높았다. 7월 행정안전부 주민등록인구통계를 기준으로 토스 연령대별 가입자 수를 분석한 결과, 20대 가입률은 약 95%(554만 명), 30대는 약 87%(580만 명)로, 2030세대 전체 가입률은 91%를 넘어섰다. 이는 금융 생활을 주도적으로 꾸려나가기 시작하는 2030세대가 토스를 주로 선택하고 있음을 의미한다.\n이러한 흐름은 2030세대에 국한되지 않는다. 경제 활동을 가장 활발히 하는 생산연령인구(15~64세) 전체로 범위를 확장해도 약 2,674만 명이 토스에 가입한 것으로 확인되며, 가입률은 76%에 달한다. 금융 거래가 가장 집중되는 집단에서 10명 중 7명 이상이 토스를 선택했다는 점은 폭넓은 연령층에서 사용자 기반을 안정적으로 확보하고 있다는 사실을 뒷받침한다.\n토스는 현재 하나의 앱 안에서 송금, 결제, 투자, 뱅킹, 신용조회, 인증, 세무, 대출 및 보험 중개까지 다양한 금융 서비스를 통합해 제공하고 있다. 사용자는 별도의 기관 방문이나 복잡한 절차 없이 여러 금융 활동을 하나의 흐름 안에서 이어갈 수 있으며, 토스는 이러한 구조를 기반으로 ‘금융 수퍼앱’의 입지를 다져왔다.\n이 같은 성장에는 사용자 중심의 금융 경험 설계가 뒷받침됐다. 공인인증서 없는 간편송금, 1원 인증, 무료 신용점수 조회, 대출 비교 서비스, 사기 의심 알림, 안심보상제 등 토스는 금융업계 최초로 선보이는 다양한 혁신을 통해 금융 서비스에 대한 접근성과 편의성을 높이는 데 기여해왔다.\n향후 토스는 ‘금융을 넘어 일상 수퍼앱’으로의 비전을 더욱 본격화할 예정이다. 지난 2월 10주년 기념 기자간담회에서는 ‘금융을 넘어 일상, 온라인을 넘어 오프라인, 대한민국을 넘어 글로벌’이라는 방향성을 제시하며 서비스 확장의 전환점을 알렸다. 실제로 토스는 ‘앱인토스’ 생태계를 구축해 다양한 파트너사의 일상 서비스를 토스 앱 안에 연결하는 등 전략 실행에 속도를 내고 있다.\n토스 관계자는 “누적 가입자 3,000만 돌파는 향후 비전을 뒷받침할 수 있는 든든한 지표”라며, “보내주신 신뢰에 보답할 수 있도록 사용자 경험의 기준을 높이는 혁신을 거듭해 나갈 것”이라고 밝혔다.",
        "content": "대한민국 국민 10명 중 6명이 사용하는 대표 금융 플랫폼으로 자리매김",
        "contentSnippet": "대한민국 국민 10명 중 6명이 사용하는 대표 금융 플랫폼으로 자리매김",
        "guid": "https://toss.im/tossfeed/article/RU3000",
        "isoDate": "2025-08-05T22:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]