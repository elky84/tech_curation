[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sy Brand",
        "title": "Sign Up for the free Pure Virtual C++ 2025 Conference",
        "link": "https://devblogs.microsoft.com/cppblog/sign-up-for-the-free-pure-virtual-c-2025-conference/",
        "pubDate": "Fri, 21 Mar 2025 11:34:23 +0000",
        "content:encodedSnippet": "Every year we run Pure Virtual C++: a free one-day virtual conference for the whole C++ community. Next month we’re doing it again! Sign-up for free to get access to our five live sessions and a host of pre-conference content.\nThe live event will start at April 30th 14:00 UTC. Videos will be available to stream for free on YouTube after the conference. The speakers and topics will be announced soon.\nHope to see you there!\nThe post Sign Up for the free Pure Virtual C++ 2025 Conference appeared first on C++ Team Blog.",
        "dc:creator": "Sy Brand",
        "comments": "https://devblogs.microsoft.com/cppblog/sign-up-for-the-free-pure-virtual-c-2025-conference/#respond",
        "content": "<p>Every year we run Pure Virtual C++: a free one-day virtual conference for the whole C++ community. Next month we’re doing it again! Sign-up for free to get access to our five live sessions and a host of pre-conference content. The live event will start at April 30th 14:00 UTC. Videos will be available to [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/sign-up-for-the-free-pure-virtual-c-2025-conference/\">Sign Up for the free Pure Virtual C++ 2025 Conference</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Every year we run Pure Virtual C++: a free one-day virtual conference for the whole C++ community. Next month we’re doing it again! Sign-up for free to get access to our five live sessions and a host of pre-conference content. The live event will start at April 30th 14:00 UTC. Videos will be available to […]\nThe post Sign Up for the free Pure Virtual C++ 2025 Conference appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35266",
        "categories": [
          "Announcement",
          "Pure Virtual C++"
        ],
        "isoDate": "2025-03-21T11:34:23.000Z"
      },
      {
        "creator": "David Li",
        "title": "C++ Dynamic Debugging: Full Debuggability for Optimized Builds",
        "link": "https://devblogs.microsoft.com/cppblog/cpp-dynamic-debugging-full-debuggability-for-optimized-builds/",
        "pubDate": "Wed, 19 Mar 2025 18:33:52 +0000",
        "content:encodedSnippet": "Over the past 5 years, we’ve had many incredible opportunities to engage with game developers. From AAA studios to indie developers, the passion for slashing iteration times is significant. Amidst all the fantastic feedback we’ve received for Visual Studio, one sentiment has rung loud and clear: a desire to debug optimized C++ code without sacrificing performance. Although game developers have voiced this need the loudest, we know that solving this issue will benefit many other C++ workflows. While we’ve consistently rolled out many productivity and performance enhancements over the years, debugging optimized code has always been at the top of everyone’s wish list.\nCurrent Issues with Debugging Optimized Code\nThrough our conversations with game developers, we’ve heard about some common problems when debugging optimized code:\nTrying to inspect locals often yields the “Variable is optimized away” message in the watch window.\nStep-over and step-into don’t always step over, or into, the expected code paths.\nLosing time while iterating with #pragma optimize to try and undo optimizations, requiring a rebuild and restart of the debugger.\nThanks to your feedback, the team has been hard at work to come up with a creative solution.\nAnnouncing: C++ Dynamic Debugging\nWe are thrilled to announce that C++ Dynamic Debugging is now available as a preview feature exclusively with the MSVC toolset. This feature dynamically deoptimizes code that you set breakpoints on or step into, giving you the performance of optimized code with the debugging experience of unoptimized code.\nTry C++ Dynamic Debugging today in Visual Studio 2022 version 17.14 Preview 2.\nDownload\n\nWithout C++ Dynamic Debugging\nWith C++ Dynamic Debugging\n“The new feature is exceptional. I now have reliable stepwise debugging, variable inspection, and program counter jumping without needing to recompile with pragma optimize.”\n– Jess Kube, Principal Software Engineer, The Coalition\nUsing it daily, the new feature improved my ability to debug and investigate quicker. I don’t need to manually deoptimize my files anymore”\n– Matthew Koch, Principal Software Engineer, Halo Studios\n“With the new feature, breakpoints in inlined functions will now be hit. Previously, I had to use a debug build or #pragma optimize and remember to remove it before code review”\n– Keith Stockdale, Senior Software Engineer, Rare\n\nGetting Started with C++ Dynamic Debugging\nYou only need a few short clicks to turn on C++ Dynamic Debugging for your project. After activating these options, you must rebuild to start using C++ Dynamic Debugging.\nMSBuild C++ Projects\nTo begin, change your configuration to Release mode. Next, right-click on your project and click on Properties to open the Configuration Properties menu. In this menu, click on Advanced > Use C++ Dynamic Debugging > Yes. Lastly, rebuild your project.\nSetting this property will turn off Whole Program Optimization.\nConfiguration Properties\nOther Build Systems\nPass the new /dynamicdeopt switch to cl.exe, lib.exe, and link.exe\nFor Unreal Engine developers, UE 5.6 will support the bDynamicDebugging Windows platform flag.\nPlease see documentation for more details.\nSystem Requirements\nVisual Studio 2022 Version 17.14 Preview 2\nMSVC Toolset 19.44\nX64 architecture\nNot compatible with LTCG, PGO, OPT-ICF flags\nUsing C++ Dynamic Debugging\nTurning on C++ Dynamic Debugging and rebuilding unlocks familiar debugging patterns for optimized code without compromising on performance.\nBreakpoints\nYour breakpoints will get hit in deoptimized code. Look for the [Deoptimized] tag in the Call Stack window to know that you can view all your locals.\nConditional and Dependent Breakpoints\nSet Conditional and Dependent Breakpoints as if the code was unoptimized; you can add conditional breakpoints to variables that have been optimized away in your optimized binaries.\nStepping Actions\nStep Over to the next line of your source code as if the code was unoptimized.\nStepping Actions\nStep In to any function, and those functions will be deoptimized as well. In addition, Step In will now step into __forceinline functions.\nStep Into __forceinline functions\nSet Next Statement\nUsing Set Next Statement in a deoptimized frame works as if the code was unoptimized.\nSet Next Statement\nCall Stack Window\nIn your Call Stack window, you will see that any frames that have been deoptimized will have a [deoptimized] tag.\nCall Stack Window\nVisual Studio only deoptimizes the frame corresponding to your breakpoint or functions stepped into. Frames higher up in the call stack remain optimized for performance. You can select additional frames in the Call Stack window and click “Deoptimize on next entry” to deoptimize those functions when they are entered the next time.\n\nManaging “Deoptimize on next entry” breakpoints\nBreakpoints added through “Deoptimize on next entry” are listed in the Breakpoints window. You can export these Breakpoints for later use. To return your application to full optimization, delete these breakpoints.\nDeoptimized Breakpoints\nMiddleware Support\nWe have been working closely with our middleware partners to ensure that C++ Dynamic Debugging works with popular middleware tools.\nUnreal Engine\nIn Unreal Engine version 5.6, Unreal Build Tool and Unreal Build Accelerator will support C++ Dynamic Debugging natively. To try the feature today, please manually apply the change, temporarily disable Unreal Build Accelerator, and see our documentation for more details.\nIncrediBuild\nIncrediBuild 10.24 or later supports C++ Dynamic Debugging.\nFastBuild\nTo use C++ Dynamic Debugging with FastBuild, please see this Pull Request.\nXbox GDK\nOut-of-the-box support for C++ Dynamic Debugging will be available in an April 2025 update. To try this feature today, please refer to the official GDK documentation.\nOverhead Considerations\nWhile using C++ Dynamic Debugging, it’s important to acknowledge the following considerations. Despite these overhead costs, we are confident that your overall iteration time will benefit significantly.\nFile Output Size\nIn our assessments, using a modified version of the Lyra Sample project, we observed a 2.4x increase in the build output size.\nBuild Time\nEnd-to-end Build Time\nDepending on the project, we saw an increase in end-to-end build time ranging from 1.05x to 1.15x.\nIteration Build Time\nFor small and medium-sized binaries, the increase in iteration build time was less than 1.2x. For larger binaries, such as monolithic games, the increase was up to 1.8x.\nMitigations for Iteration Build Time\nIf the increase in iteration time is too burdensome for large binaries, you can try the undocumented /d2DDTrimInlines compiler switch. This switch, subject-to-change and removal, reduces the iteration time overhead from 1.8x to 1.4x at the cost of increased end-to-end build time. The switch also removes the ability to step into small __forceinline/inline functions.\nKnown Issues\nBy design:\nUnexpected PDB error, LIMIT (12), check for insufficient disk space, invalid path, or insufficient privilege.\nStepping in disassembly window remains optimized.\nFixed in Visual Studio 2022 17.4 Preview 3:\nCrash with memcmp and other intrinsic imports with /MD\nIncorrect emission of C4714\nMissing feature from x86_x64 compiler\nInstrumentation-based profiling doesn’t work\nCrash stepping past C++ exception catch handlers\nActive Issues:\nStarting the debugger with F10 or F11 keeps main() optimized\nImageBase is 0 when debugging\nCrash stepping into __try block that has access violation\nConclusion\nTry C++ Dynamic Debugging today: Experience the benefits of debug builds and the speed of optimized builds.\nDownload\n\nC++ Dynamic Debugging is a preview feature. Thank you to everyone who gave us feedback on debugging optimized code. This feature would not have been possible without your feedback. We love to hear how much time this feature has saved you and how you’re incorporating it into your workflow. Furthermore, we invite you to keep sending feedback so we can make C++ Dynamic Debugging even better. We truly appreciate your feedback and encourage you to keep sharing your thoughts and ideas with us through Developer Community, X (@VisualC), or email at visualcpp@microsoft.com.\n \n \n \n \n \n \n \n \n \n \n \n \nThe post C++ Dynamic Debugging: Full Debuggability for Optimized Builds appeared first on C++ Team Blog.",
        "dc:creator": "David Li",
        "comments": "https://devblogs.microsoft.com/cppblog/cpp-dynamic-debugging-full-debuggability-for-optimized-builds/#comments",
        "content": "<p>Over the past 5 years, we’ve had many incredible opportunities to engage with game developers. From AAA studios to indie developers, the passion for slashing iteration times is significant. Amidst all the fantastic feedback we&#8217;ve received for Visual Studio, one sentiment has rung loud and clear: a desire to debug optimized C++ code without sacrificing [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/cpp-dynamic-debugging-full-debuggability-for-optimized-builds/\">C++ Dynamic Debugging: Full Debuggability for Optimized Builds</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Over the past 5 years, we’ve had many incredible opportunities to engage with game developers. From AAA studios to indie developers, the passion for slashing iteration times is significant. Amidst all the fantastic feedback we’ve received for Visual Studio, one sentiment has rung loud and clear: a desire to debug optimized C++ code without sacrificing […]\nThe post C++ Dynamic Debugging: Full Debuggability for Optimized Builds appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35229",
        "categories": [
          "C++",
          "Game Development",
          "debugging",
          "Optimized Builds"
        ],
        "isoDate": "2025-03-19T18:33:52.000Z"
      },
      {
        "creator": "Moyo Okeremi",
        "title": "Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50%",
        "link": "https://devblogs.microsoft.com/cppblog/optimizing-build-times-with-build-insights-how-activision-cut-call-of-dutys-build-time-by-50/",
        "pubDate": "Tue, 18 Mar 2025 13:51:17 +0000",
        "content:encodedSnippet": "Slow build times are a major headache for developers, especially in large, complex C++ codebases like game engines. Every minute spent waiting on a build is time that could be used to refine features, resolve issues, or push development forward. Activision faced this challenge with Call of Duty: Modern Warfare II, where prolonged build times were slowing down iteration and impeding workflows. By leveraging Build Insights, they identified key inefficiencies, optimized bottlenecks, and successfully reduced build times from 27:49 minutes to just 14:25 minutes—cutting them in half. Read more about their journey in our detailed breakdown on Microsoft Game Dev.\n\nBuild times impact every aspect of development. When builds are slow, valuable engineering time is lost—time that could be spent improving features, optimizing performance, or debugging critical issues. Slow builds also create bottlenecks in our continuous integration pipelines, delaying the verification of every piece of code and content that goes into our games. To keep our development workflow efficient, we need our builds to be as fast as possible, and Build Insights provides that capability to our teams. — Michael Vance, SVP & Fellow Software Engineer, Activision\n\nThrough a collaboration between Activision, the Xbox Advanced Technology Group (ATG), and the MSVC team, optimizations were made to force inlining, linker efficiency, and whole-program analysis, leading to dramatic improvements in build performance. These insights not only benefited Call of Duty but also contributed to broader enhancements in MSVC’s LTCG and linker performance, positively impacting other major projects like Fortnite, Chrome, and TensorFlow.\nTo dive deeper into how these optimizations were achieved and how Build Insights can help your own development workflow, read the full article on How Build Insights Reduced Call of Duty: Modern Warfare II’s Build Times by 50%. You can also check out our YouTube Video, explore our blog post, or dive into our documentation to start optimizing your builds today.\nThe post Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50% appeared first on C++ Team Blog.",
        "dc:creator": "Moyo Okeremi",
        "comments": "https://devblogs.microsoft.com/cppblog/optimizing-build-times-with-build-insights-how-activision-cut-call-of-dutys-build-time-by-50/#respond",
        "content": "<p>Slow build times are a major headache for developers, especially in large, complex C++ codebases like game engines. Every minute spent waiting on a build is time that could be used to refine features, resolve issues, or push development forward. Activision faced this challenge with Call of Duty: Modern Warfare II, where prolonged build times [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/optimizing-build-times-with-build-insights-how-activision-cut-call-of-dutys-build-time-by-50/\">Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50%</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Slow build times are a major headache for developers, especially in large, complex C++ codebases like game engines. Every minute spent waiting on a build is time that could be used to refine features, resolve issues, or push development forward. Activision faced this challenge with Call of Duty: Modern Warfare II, where prolonged build times […]\nThe post Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50% appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35227",
        "categories": [
          "Build Insights",
          "Build Optimization",
          "C++",
          "Game Development",
          "Activision"
        ],
        "isoDate": "2025-03-18T13:51:17.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Olga Bedrina",
        "title": "What Is SAST? A Guide to Static Application Security Testing",
        "link": "https://blog.jetbrains.com/teamcity/2025/03/what-is-sast/",
        "pubDate": "Sat, 22 Mar 2025 13:33:25 +0000",
        "content:encodedSnippet": "This article is brought to you by Thinus Swart, draft.dev.\nStatic application security testing (SAST) is a method for identifying vulnerabilities in application source code, binaries, or bytecode early in the software development lifecycle (SDLC). By analyzing code before it’s compiled or run, SAST allows developers to catch potential security flaws before they can be exploited in production.\nWith cybersecurity threats on the rise, companies without SAST are at risk of significant financial and reputational damage if their applications or systems are breached. According to IBM’s Cost of a Data Breach Report 2024, the global average cost of a data breach is USD 4.88 million.\nIntegrating SAST into the SDLC aligns with the shift-left approach that’s being embraced by modern development teams. Shifting left involves addressing code security and code quality concerns much earlier in the development process, rather than when the project has already gone live. It embraces a proactive approach to code and application security that can also lead to better code quality and a faster time to market.\nIn this article, we’ll explore:\nWhy SAST matters\nKey considerations when choosing an SAST tool\nBest practices when implementing an SAST tool\nWhat is SAST and why does it matter?\nSAST is a code analysis method that checks an application’s source code without running it. It helps find security issues like SQL injection, cross-site scripting (XSS), and buffer overflows by analyzing the code’s structure and logic during development. This allows developers to fix problems early, reducing security risks.\nUnlike reactive security measures that address vulnerabilities after an attack or late in the development cycle, SAST takes a proactive approach. By integrating automated scans into CI/CD pipelines using tools like SonarQube or Snyk, teams can continuously validate security and minimize the attack surface from the outset.\n💡 Read our Building the Snyk Plugin for TeamCity blog post for more information about how this works in TeamCity.\nThe early detection of security vulnerabilities minimizes the risk of costly incidents, data breaches, and compliance violations, while protecting against reputational damage, which can be difficult to recover from.\nSAST not only strengthens your application’s security but also helps your organization avoid fines and legal risks from noncompliance by:\nComplying with regulatory standards: SAST helps organizations meet regulatory standards by identifying security vulnerabilities that could impact customer data protection. \nFor example, it supports compliance with the General Data Protection Regulation (GDPR) for data privacy in Europe and HIPAA for safeguarding medical health information in the US. By proactively addressing security risks in code, SAST can help you avoid hefty fines for noncompliance with these regulations.\nAligning with OWASP best practices: The OWASP Top Ten is a widely recognized standard for identifying the most critical web application security risks. Following OWASP guidelines helps developers write more secure code and mitigate common vulnerabilities that attackers frequently exploit. \nMany SAST tools are designed to detect OWASP Top Ten issues, making compliance with these best practices easier.\nMitigating the risk of financial and reputational damage: SAST’s early identification of code vulnerabilities can help mitigate the risk of cybersecurity breaches, which are costly both in monetary terms and in potential damage to brand reputation and customer trust. The average cost of a data breach has risen to millions of dollars, with the added risk of losing customer loyalty and investor confidence.\n💡 Read also: What Is DAST? A Guide to Dynamic Application Statis Security\nKey considerations when choosing an SAST tool\nSelecting the right SAST tool is crucial to your SDLC. Not all tools are created equal, and choosing one that aligns with your team’s needs can significantly increase adoption and usage.\nKey factors like language support, detection accuracy, and seamless integration into your CI/CD pipelines should guide your decision-making.\nLanguage coverage\nOne of the more important things to consider is the language and framework support a potential SAST tool can offer. A few basic steps can significantly help when deciding on an SAST tool:\nInventory your codebases: Begin by cataloging the programming languages, frameworks, and libraries currently in use across your projects. Consider legacy applications and codebases as well, since these applications might not have had a code security review in the past and could benefit from the use of an SAST tool.\nAnticipate future needs: Consider upcoming projects or new clients that might require the adoption of different languages or frameworks. \nAn SAST tool with broad language coverage would be advantageous if your projects span different languages. Conversely, if your organization specializes in a specific language, it might be best to look for an SAST tool that specializes in it as well.\nEvaluate framework-specific support: Many modern applications rely heavily on frameworks like Django for Python or React for JavaScript. While these frameworks usually do a good job of minimizing developer error, introducing misconfiguration issues can be easy. An SAST tool that covers a specific framework would be able to pick up these misconfigurations and insecure patterns.\nBy following these steps, you can ensure your chosen SAST tool provides comprehensive language and framework coverage and reduces the risk of missed vulnerabilities in critical parts of the application.\nLow false positive rate/high true positive rate\nDetection accuracy is a very important factor when selecting an SAST tool for your organization. Tools with high false positive rates can overwhelm developers and increase the time to release, as they end up chasing nonexistent or trivial issues. \nThis high false positive rate can also lead to alert fatigue, which in turn can lead to noncompliance. Conversely, a tool with a high true positive rate provides actionable results, helping developers focus on real security risks.\nWhile you can use sample reports and benchmarks to measure the accuracy of these tools, doing so doesn’t replace the experience of conducting a trial run of an SAST tool you’re considering on your existing code. \nPay attention to how well the tool distinguishes between actual vulnerabilities and benign code patterns. Tools that provide good remedies for each finding can further improve code quality by reducing the guesswork for developers.\nHow to choose a SAST tool\n\n\n\nIt’s also strongly recommended to look for tools that allow you to customize and fine-tune detection rule sets to better fit your projects. For example, you might want to suppress specific warning messages due to customer limitations that you have to work around. \nThe flexibility to fine-tune your scanning parameters can help further improve the signal-to-noise ratio, making it easier for developers to focus on real security issues and integrate security checks into their workflow.\nEase of integration into CI/CD pipelines\nTo make the most effective use of an SAST tool, you need to scan early and scan often. Automating your security checks is key to enabling your developers to fix issues as early as possible in the development lifecycle.\nSAST SDLC\n\n\n\nAny SAST tool that can integrate with a CI/CD platform like JetBrains TeamCity will allow you to automate your security checks at important phases in the development cycle – for example, every time a new branch needs to be merged into the main branch or a pull request is submitted for a software patch.\nThis can supply developers with feedback directly within the workflow they’re used to, and they can respond to vulnerabilities immediately.\nBest practices when implementing an SAST tool\nWhile integrating an SAST tool into your development process is an important step, ensuring it’s configured properly and used effectively further enhances your developers’ experience. This can foster a culture of being vigilant and employing secure coding practices as early as possible.\nFor this to happen, keep these best practices in mind when advocating for and deploying an SAST tool in your environment.\nBest practices for implementing SAST tools\n\n\n\nScan your codebase regularly\nRegular scanning is key to identifying vulnerabilities as they occur. Automating your scanning at different stages of the development lifecycle allows you to catch and remediate issues before the code gets put into production.\nWhile incremental scans of commits and pull requests are a great idea, you should also schedule full scans of the entire code repository at regular intervals. Full scans can reveal vulnerabilities in legacy code or parts of the application that are rarely accessed and that wouldn’t show up in a pull request or code commit.\nAutomate as much of the process as possible\nA lot of what has been discussed so far, like full codebase scans and CI/CD integration, only makes sense once you make the move to automating as much of the process as possible. As previously discussed, automation is key to driving the adoption of an SAST tool, as it provides your developers with immediate feedback that they can act upon.\nIn addition to automating scans, you can automate monthly reports or implement dashboards or notification systems to help your team monitor and track their code quality trends over time.\nPrioritize critical vulnerabilities\nNot all vulnerabilities carry the same level of risk, and teams must focus their efforts on the critical ones first. SAST tools generally supply a severity rating for vulnerabilities that have been identified. This severity rating should align with your organization’s risk management strategies and help you decide which vulnerabilities to prioritize. Issues that could lead to data breaches or significant system compromise should be addressed immediately, while less pressing ones can be addressed during regular patching schedules.\nEducate developers about secure programming practices\nEven the best SAST tool is only as effective as the team using it. Developers must understand how to interpret scan results and recognize how adopting secure coding practices can help speed up the development process for the entire team. If the SAST tool you’re adopting offers training, you should invest in that training for your developers to familiarize them with the tool’s interface, features, and reporting capabilities.\nWork on fostering a security-first mindset in your development team and the team culture in general. Encourage collaboration between your security and your development teams, and emphasize that security is a shared responsibility across the entire organization.\nConclusion\nStatic application security testing is an essential component of a secure software development lifecycle. In this article, we explored what SAST is, why it matters, and the key considerations for selecting the right SAST tool for your organization. \nWe also identified some best practices to optimize SAST implementation and ensure that security scans are both effective and automated. If you implement SAST correctly, your teams will be able to identify vulnerabilities earlier in the development lifecycle, reduce risks in general, and ensure compliance with industry standards.To streamline your SAST implementation efforts, consider integrating it with a CI/CD platform like JetBrains TeamCity, which offers support for many SAST tools and SAST providers via its plugin marketplace.",
        "dc:creator": "Olga Bedrina",
        "content": "This article is brought to you by Thinus Swart, draft.dev. Static application security testing (SAST) is a method for identifying vulnerabilities in application source code, binaries, or bytecode early in the software development lifecycle (SDLC). By analyzing code before it’s compiled or run, SAST allows developers to catch potential security flaws before they can be [&#8230;]",
        "contentSnippet": "This article is brought to you by Thinus Swart, draft.dev. Static application security testing (SAST) is a method for identifying vulnerabilities in application source code, binaries, or bytecode early in the software development lifecycle (SDLC). By analyzing code before it’s compiled or run, SAST allows developers to catch potential security flaws before they can be […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=553947",
        "categories": [
          "testing",
          "automated-testing",
          "continuous-testing"
        ],
        "isoDate": "2025-03-22T13:33:25.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "The Impact of Code Analysis in STEM: Protecting Work That Affects the World",
        "link": "https://blog.jetbrains.com/qodana/2025/03/code-analysis-in-stem/",
        "pubDate": "Sat, 22 Mar 2025 08:25:25 +0000",
        "content:encodedSnippet": "At Qodana, we champion code quality for businesses and enterprise development teams, but it has other crucial applications, and implications. Not only can good (and bad!) code be felt in the digital products we all know and use every day, but its impact also extends to science, technology, engineering, and mathematics (STEM).\nAs STEM disciplines increasingly rely on software tools and algorithms for research, data analysis, and product development, code quality has emerged as a cornerstone for innovation, efficiency, and reliability.\nIn this post, we’ll explore the roles that code quality plays in STEM, as well as the crucial impact code analysis has in these fields.\nWhat is code analysis?\nCode analysis is the process of reviewing computer code to find errors, improve performance, and ensure it follows best practices. It can be broadly categorized into two types: static and dynamic.\nStatic analysis involves examining the code without executing it, allowing developers to identify potential bugs, vulnerabilities, and code smells early in the development cycle. This is where Qodana shines. You can use it to adhere to coding standards, spot logical errors and potential security risks, and ensure a clean and well-structured codebase before deployment.\n\n\n\n\nDynamic analysis, on the other hand, involves analyzing the code while it’s running, which helps identify runtime errors and performance bottlenecks.\nThis means that teams working in STEM fields, where compliance, information security, and system maintainability are particularly important, can use code analysis to improve and secure their work in multiple ways.\nApplications of code analysis in STEM fields\nThe quality, reliability, maintainability, and security of various codebases directly impacts many of the most important societal functions, including government processes and workflows in healthcare, research, climate management, and beyond. Let’s explore some of the use cases for each industry.\nAssisting with model simulation for research and development\nVarious scientific disciplines use complex algorithms and simulations to model natural phenomena. For instance, in biology, simulations are used to understand genetic algorithms, while in physics, researchers might model the behavior of particles. Code analysis helps validate these algorithms, ensuring that they produce accurate and reliable results. Tools like linting and formatting can maintain code quality, which is crucial for reproducible research.\n\n\n\n\nHandling large datasets\nIn data-driven fields, code analysis becomes essential for handling large datasets and complex models. During exploratory data analysis (EDA) and model training phases, data scientists must ensure that their code is efficient and free of logical errors. Static analysis tools can also help identify inefficient algorithms or unnecessary computations that may otherwise lead to increased processing time and resource consumption.\nSupport for designing, simulating, and testing engineering systems\nThe engineering sector increasingly relies on software for designing, simulating, and testing systems. For instance, civil engineers use software for structural analysis, while aerospace engineers use it for flight simulation. Code analysis can help make sure that these critical applications function correctly, adhere to safety standards, and produce reliable simulations, as well as saving time and costs in the design process.\nIncreasing the ability to solve complex problems in computational mathematics\nIn computational mathematics, algorithms are often developed to solve complex mathematical problems. Code analysis plays a critical role in verifying these algorithms, checking for numerical stability, and ensuring they follow mathematical principles. Tools that perform static analysis can also help in optimizing algorithms for better performance.\nSupporting mechanisms for robotic function\nAs robotics technology advances, code analysis remains imperative in ensuring that robotic systems function safely and effectively. Analyzing the code that governs robot behavior, such as navigation algorithms and sensor integration, is crucial to mitigating risks associated with automation, particularly in industrial applications.\nImproved reliability from higher-quality analysis\nBy catching errors early in the development lifecycle, code analysis increases the reliability of STEM applications. This minimizes the potential for costly errors or safety hazards, thereby fostering a culture of safety and dependability in technology-driven fields.\nEnhanced collaboration: In multidisciplinary STEM environments, codebases often outgrow individual contributions. Code analysis ensures that coding standards are upheld, facilitating easier collaboration and understanding among team members with varying levels of coding expertise.\nTime and resource efficiency: Automated code analysis tools can significantly reduce the manual effort required in code reviews, enabling teams to focus their time on more critical tasks, such as developing new features or conducting experiments.\nFostering innovation: With reliable and efficient code, researchers and engineers can push the boundaries of their respective fields. Whether it’s developing a new technology, gaining new scientific insights, or creating advanced models, code analysis empowers professionals to innovate without the fear of unforeseen errors or inefficiencies.\n\n\n\n\n\nAs the intersection of technology and the scientific community continues to grow, the applications of code analysis in STEM fields become increasingly important. By ensuring code quality, enhancing collaboration, and fostering innovation, code analysis acts as a powerful enabler for advancements in research and technology.\nAs we look into the future, embracing these practices will be essential for future innovations across STEM disciplines, driving the next wave of discoveries and technological advancements.\nQodana supports critical quality in STEM-related applications\nIn a world where we strive for precision and reliability, code analysis stands out as an important component that helps bridge the gap between theoretical knowledge and practical applications in STEM. And as more workers rely on AI to support development, checks and failsafes become more important still.\nTry Qodana for STEM applications",
        "dc:creator": "Kerry Beetge",
        "content": "At Qodana, we champion code quality for businesses and enterprise development teams, but it has other crucial applications, and implications. Not only can good (and bad!) code be felt in the digital products we all know and use every day, but its impact also extends to science, technology, engineering, and mathematics (STEM). As STEM disciplines [&#8230;]",
        "contentSnippet": "At Qodana, we champion code quality for businesses and enterprise development teams, but it has other crucial applications, and implications. Not only can good (and bad!) code be felt in the digital products we all know and use every day, but its impact also extends to science, technology, engineering, and mathematics (STEM). As STEM disciplines […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=553907",
        "categories": [
          "code-review",
          "code-analysis",
          "inellij",
          "learning",
          "science",
          "stem"
        ],
        "isoDate": "2025-03-22T08:25:25.000Z"
      },
      {
        "creator": "Daniela Bentrup",
        "title": "Fleet 1.47 Is Here With Folding Support for Multiline Comments, New AI Chat Functionality, and More Enhancements",
        "link": "https://blog.jetbrains.com/fleet/2025/03/fleet-1-47-is-here-with-folding-support-for-multiline-comments-new-ai-chat-functionality-and-more-enhancements/",
        "pubDate": "Fri, 21 Mar 2025 13:48:35 +0000",
        "content:encodedSnippet": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using our Toolbox App.\nLet’s take a closer look at the highlights.\nDownload Fleet 1.47\nNew features\nIn this release, we’ve enhanced code readability and navigation by introducing folding support for multiline comments in Java, JavaScript, TypeScript, Kotlin, C#, C++, Python, Swift, and XML. This feature allows you to collapse and expand lengthy comment blocks.\n\n\n\n\n\nWe’ve introduced two new abilities to the AI chat. You can now search for content on the web directly via the chat and retrieve content from links.\n\n\n\nImprovements\nFor improved clarity and usability, we’ve added a read-only indicator to the clipboard when working with the editor or Git diff tool. This new visual cue helps you quickly identify files that cannot be modified, reducing confusion and preventing accidental edits. Whether comparing changes in your clipboard or reviewing version differences in Git, the read-only status is now clearly displayed.\nWe’ve introduced a navigation bar to the Text Search preview window that displays the full file path of each file. This enhancement provides better context, allowing you to quickly understand where a file is located within your project.\n\n\n\nBug fixes\nWe’ve also fixed several bugs:\nDeleting files from the Files view on Windows when using the IntelliJ IDEA keymap now works as expected [FL-29860].\nWhen using remote workspaces in Fleet, changing general settings now works as expected [FL-31852].\nWhen hovering over themes during theme selection, the respective theme is now shown as expected [FL-24198].\nSee the full release notes for more details about Fleet 1.47.\nPlease report any problems you encounter to our issue tracker, and stay tuned for further exciting announcements.\nJoin the JetBrains Tech Insights Lab to participate in surveys, interviews, and UX studies, and help us make JetBrains Fleet better!",
        "dc:creator": "Daniela Bentrup",
        "content": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using our Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.47 New features Improvements Bug fixes We&#8217;ve also fixed several bugs: See the full release notes for more details about [&#8230;]",
        "contentSnippet": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using our Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.47 New features Improvements Bug fixes We’ve also fixed several bugs: See the full release notes for more details about […]",
        "guid": "https://blog.jetbrains.com/?post_type=fleet&p=553076",
        "categories": [
          "news",
          "releases"
        ],
        "isoDate": "2025-03-21T13:48:35.000Z"
      },
      {
        "creator": "Dmitry Mareychev",
        "title": "What’s New in TeamCity 2025.03: Recipes, Improved Docker and Podman Integration, UI Updates, and More",
        "link": "https://blog.jetbrains.com/teamcity/2025/03/what-s-new-in-teamcity-2025-03-recipes-improved-docker-and-podman-integration-ui-updates-and-more/",
        "pubDate": "Thu, 20 Mar 2025 15:31:00 +0000",
        "content:encodedSnippet": "TeamCity’s first major release of the year, version 2025.03, is now available. It’s packed with new features, including massive UI updates, a new Run in Docker build feature, and JetBrains-crafted recipes available in our Marketplace.\nUI updates\nIn line with our commitment to make TeamCity easier and more intuitive to use, this release introduces significant UI improvements:\nSimplified navigation: The Edit Project/Configuration button is now a Settings toggle, with distinct accent colors for View and Edit modes. Once you switch to Edit mode, you can navigate across multiple projects without exiting it.\n\n\n\n\n\nOrganized settings: Project settings are now grouped into categories for easier navigation, while build configuration settings are arranged as tabs.\n\n\n\n\n\nRefined layout: The headers of project, configuration, and build pages are now more compact, and build pages highlight key details like the repository branch, build time, and queue time. The Actions menu is now conveniently accessible via an ellipsis button next to Run.\n\n\n\n\nIntroducing recipes (goodbye meta-runners!)\nThis release marks the beginning of meta-runners’ evolution into recipes. While the core idea remains, recipes offer new advantages. For example, you can:\nDefine them in XML or, in future TeamCity versions, YAML\nUse ones hand-crafted by JetBrains from Marketplace\n\n\n\n\nIn upcoming releases, we plan to add support for sharing your own recipes on Marketplace. Share your feedback and public recipe design ideas in the comments under this YouTrack ticket: TW-91941.\nEnhanced parameter control\nThe Parameters tab now separates input and output parameters:\nInput parameters are your standard pre-2025.03 parameters designed to be used directly by their parent configurations.\nOutput parameters are parameters with explicit access permissions, shareable with dependent configurations via the dep.<config_name>.<parameter_name> syntax.\n\n\n\n\nThis clear separation serves two purposes: enhancing security by keeping parameters that were never meant to be shared private, and allowing configuration developers to focus on adjusting their input parameters without worrying about breaking other configurations that import them.\nPerforce manual and automatic merge support\nTeamCity now supports manual and automatic code merges between Perforce streams:\nThe automatic merge feature supports configurations that use Perforce VCS roots.\nThe Actions build menu includes an option to merge changes to a target Perforce stream manually.\nImproved Docker and Podman integration\nVersion 2025.03 also includes a few updates that widen your options for running builds inside containers.\nYou can run all configuration steps in a single container using the new Run in Docker build feature.\nKotlin script build steps now support the Container Wrapper, which allows them to run in Docker and Podman containers.\nThe Docker Support feature is now called Docker Registry Connections, better reflecting its role in managing private container registry logins and image cleanup.\nThe complete list of implemented features and fixed issues is available in our documentation: \nWhat’s New \nRelease Notes\nIf you have any questions, feel free to get in touch with us in the comments below or via the support form. We do our best to answer them all!",
        "dc:creator": "Dmitry Mareychev",
        "content": "TeamCity&#8217;s first major release of the year, version 2025.03, is now available. It’s packed with new features, including massive UI updates, a new Run in Docker build feature, and JetBrains-crafted recipes available in our Marketplace. UI updates In line with our commitment to make TeamCity easier and more intuitive to use, this release introduces significant [&#8230;]",
        "contentSnippet": "TeamCity’s first major release of the year, version 2025.03, is now available. It’s packed with new features, including massive UI updates, a new Run in Docker build feature, and JetBrains-crafted recipes available in our Marketplace. UI updates In line with our commitment to make TeamCity easier and more intuitive to use, this release introduces significant […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=553821",
        "categories": [
          "release",
          "teamcity"
        ],
        "isoDate": "2025-03-20T15:31:00.000Z"
      },
      {
        "creator": "Daniel Csorba",
        "title": "Kotlin 2.1.20 Released",
        "link": "https://blog.jetbrains.com/kotlin/2025/03/kotlin-2-1-20-released-2/",
        "pubDate": "Thu, 20 Mar 2025 11:59:00 +0000",
        "content:encodedSnippet": "The Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0. Here are some highlights from this release:\nK2 compiler updates: New default kapt compiler plugin.\nKotlin Multiplatform: A new DSL to replace Gradle’s Application plugin in multiplatform projects.\nKotlin/Native: Inlining optimization to improve runtime performance.\nKotlin/Wasm: Custom formatters are now enabled by default in development builds.\nGradle support: Support for adding custom publication variants in multiplatform and JVM projects.\nStandard library: Introduction of common atomic types, improved UUID support, and a new time-tracking functionality.\nCompose compiler: Now includes source information by default across all platforms.\nFor the complete list of changes, refer to What’s new in Kotlin 2.1.20 or the release notes on GitHub.\nHow to install Kotlin 2.1.20\nStarting from IntelliJ IDEA 2023.3 and Android Studio Iguana (2023.2.1) Canary 15, the Kotlin plugin is distributed as a bundled plugin included in your IDE. This means that you can’t install the plugin from JetBrains Marketplace anymore.\nTo update to the new Kotlin version, change the Kotlin version to 2.1.20 in your build scripts.\nIf you need the command-line compiler, download it from the GitHub release page.\nIf you run into any problems\nFind help on Slack (get an invite).\nReport issues to our issue tracker, YouTrack.\nStay up to date with the latest Kotlin features! Subscribe to receive Kotlin updates by filling out the form at the bottom of this post. ⬇️\nSpecial thanks to our EAP Champions\nZac Sweers\nAlexander Nozik\nBenoit ‘BoD’ Lubek\nYang\nJake Wharton\nRick Clephas\nRussell Wolf\nJohannes Svensson\nŁukasz Wasylkowski\nDavid Lopez\nArtyom Shendrik\nFlorian Schreiber\nSechaba Mofokeng\nAmr Yousef\nKacper Wojciechowski\nBernd Prünster\nAnderson Lameck\nWhat else to read\nWhat’s new in Kotlin 2.1.20 documentation\nKotlin 2.1.0 compatibility guide\nK2 compiler migration guide\nK2 Compiler Performance Benchmarks and How to Measure Them on Your Projects\nKotlin EAP Champions",
        "dc:creator": "Daniel Csorba",
        "content": "The Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0. Here are some highlights from this release: For the complete list of changes, refer to What&#8217;s new in Kotlin 2.1.20 or the release notes on GitHub. How to install Kotlin 2.1.20 Starting from IntelliJ IDEA 2023.3 and Android [&#8230;]",
        "contentSnippet": "The Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0. Here are some highlights from this release: For the complete list of changes, refer to What’s new in Kotlin 2.1.20 or the release notes on GitHub. How to install Kotlin 2.1.20 Starting from IntelliJ IDEA 2023.3 and Android […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=553853",
        "categories": [
          "releases"
        ],
        "isoDate": "2025-03-20T11:59:00.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "TeamCity Roadmap 2025: Updating the UI, TeamCity Recipes, and Much More",
        "link": "https://blog.jetbrains.com/teamcity/2025/03/teamcity-roadmap-2025/",
        "pubDate": "Wed, 19 Mar 2025 14:32:32 +0000",
        "content:encodedSnippet": "This year, the TeamCity team is working on a number of new initiatives, including updating the UI, TeamCity recipes, Jenkins migration tools, and many others. Read on to learn what our focus is for 2025.\nModernizing the TeamCity Enterprise interface\nIn 2025, we’re taking a major step forward in enhancing the TeamCity experience. The modern TeamCity Pipelines interface is making its way to TeamCity Enterprise, bringing a fresh, intuitive UI to enterprise users.\n\n\n\n\nThis move aligns with our broader vision of making Pipelines accessible to all TeamCity Enterprise customers. Why? Because we believe it delivers value on multiple levels:\nSimplifies project setup. Getting started should be effortless, whether you’re a new user or an experienced DevOps engineer.\nEnhances the build chain editing experience. We’re improving how you configure and visualize your CI/CD pipelines.\nProvides YAML support. YAML is a popular way of configuring pipelines as code, and we want to provide this option to those customers who need it.\nIntroduces full branching support. Work seamlessly with feature branches, pull requests, and complex Git workflows to improve collaboration and automation.\n\n\n\n\n\nStay tuned for more improvements as we continue updating the product UI!\nVCS integrations: UX improvements\nThis year, we’re focusing on redesigning the user experience to make it easier to configure connections, manage VCS roots, and streamline repository setup. \nWe’re also enhancing TeamCity’s integration with Perforce, GitHub, and other VCS roots.\nTeamCity recipes\nRecipes are reusable YAML-based actions that simplify build configuration by handling tasks like setting up tools, running tests, or validating source files.\n\n\n\n\nHow it works\nWhen adding a build step, you can search for actions that fit your needs (e.g. “lint”).\nTeamCity suggests matching actions, and you can then select and apply the desired action. \nThis feature will make the build configuration process faster, more flexible, and easier to share, as we’re planning to make recipes shareable.\nDependency cache\nTeamCity’s dependency cache enhances the existing build caching mechanism by automatically managing commonly used build system directories. Currently, you must manually specify which directories to cache between build agents within the artifact storage. \nWith this improvement, TeamCity will automatically detect and cache well-known directories for supported build systems, reducing manual setup and ensuring a seamless experience. This is particularly beneficial for teams using ephemeral cloud agents and TeamCity Pipelines, where maintaining persistent build data is crucial. \nFor now, the feature will support Maven, Gradle, and NuGet build runners.\nThere are two main benefits that the feature brings:\nSignificantly improved out-of-the-box usability, aligning with our goal of delivering a top-tier CI/CD experience with minimal configuration.\n\n\n\n\nMinimized end-user spending. By caching dependencies, you can significantly reduce build duration, thus reducing costs.\nImproving build feature usability\nMany important build features in TeamCity are hard to discover and configure due to their placement in the Build Features list. To improve discoverability and usability, we’re integrating build features directly into the execution page, making them easier to access and configure. \nThis update streamlines workflows while maintaining compatibility with plugins and the Kotlin DSL, ensuring a more intuitive and efficient setup.\n[Experimental] Jenkins migration tool\nJenkins remains one of the most popular CI/CD solutions. According to the State of Developer Ecosystem Report, 46% of respondents reported using it regularly in their organization.\nWhile it’s a great open-source product, it comes with its limitations, including a cumbersome UI, complex setup, and numerous plugins to handle – all this can be a hassle to manage. \nWe’re building a migration tool to make it easier for teams to switch from Jenkins to TeamCity. If you’re looking for a powerful CI/CD solution that supports complex workflows, this tool will help you migrate your pipelines without the hassle of moving everything manually.\nMeanwhile, if you’d like to explore how you can migrate your CI/CD projects from Jenkins to TeamCity, we can help! Please reach out to us via this form.\nDynamic pipelines: flexible build chains in TeamCity\nCurrently, build chains in TeamCity are static, requiring manual updates to build configurations and dependencies when changes are needed. While this works well for stable pipelines, it becomes cumbersome in scenarios requiring flexibility.\nFor example, if test suites are distributed across multiple build configurations, adding a new suite means modifying the build chain for all branches and ensuring the new configuration is disabled where it’s not needed. This manual process makes it difficult to efficiently manage dynamic workflows.\nTo address this, we are exploring the ability to dynamically generate pipelines at runtime, allowing build configurations to be defined programmatically based on branch-specific logic, test distribution strategies, or other dynamic factors. This would eliminate the need for rigid, pre-defined build chains and offer more adaptability for complex CI/CD workflows.\nSimilar to Jenkins’ Pipeline plugin, this approach could introduce a DSL-based scripting mechanism that allows teams to define pipelines in version control, ensuring greater flexibility and automation in pipeline execution.\nFollow our progress on YouTrack.\nEnhancing the Kotlin DSL with the K2 compiler\nKotlin is introducing the K2 compiler, a next-generation compiler that brings improved performance and new language features. One key benefit for TeamCity is the reduced compilation time for versioned settings, minimizing the delay between configuration changes and their application.\nTo leverage these improvements, we plan to adopt the K2 compiler for processing the Kotlin DSL. However, since K2 introduces some breaking changes, we will carefully evaluate its impact on existing configurations to ensure a smooth transition for users.\nReading configurations from Git for multi-node setups\nIn multi-node TeamCity installations, configuration files are currently stored on a shared disk, which introduces several challenges. Nodes simultaneously reading and modifying configuration files can cause consistency issues, and setting up a shared disk with acceptable performance is often complex.\nTo address these challenges, we plan to store and synchronize configuration files in Git, leveraging the existing repository used by TeamCity for tracking configuration changes. This approach will ensure reliable, conflict-free configuration management across multiple nodes while eliminating the need for a dedicated shared disk.\nAlibaba Cloud support\nWe are exploring Alibaba Cloud integration to expand TeamCity’s support for diverse cloud environments. This will enable users to seamlessly connect TeamCity with Alibaba Cloud services, improving scalability, resource management, and automation for CI/CD workflows. \nWe hope that the integration will be especially valuable for teams leveraging Alibaba Cloud’s infrastructure for build agents, storage, and deployments, ensuring a smoother experience for users in the Asia-Pacific market and beyond. If you’re using Alibaba Cloud, we’d love to talk with you!\nAgent autoscaling\nTo enhance efficiency and flexibility in TeamCity, we are introducing agent autoscaling, allowing users to better manage cloud-based build agents. This feature addresses two key user needs:\nMinimum available agents. Ensures a baseline number of agents are always ready, reducing wait times, especially when agents have long startup durations.\nScheduled scaling. Allows users to adjust the maximum number of agents dynamically based on a predefined schedule, optimizing resource allocation during peak and off-peak hours.\nBy automating agent availability, this feature improves CI/CD performance, reduces manual scaling efforts, and helps teams control costs while ensuring builds run smoothly.\nTeamCity Pipelines\nAt the moment, TeamCity Pipelines is a lightweight, easy-to-use, yet powerful CI/CD product for smaller teams. It cuts your runtime by up to 40%, helping you build and deliver faster, thanks to smart features like the visual pipeline editor and optimization center.\nHere’s what we’re working on this year for TeamCity Pipelines.\nJob debugging: pause and investigate failures in real time\nDebugging failed builds often means reacting after the fact – opening the terminal and investigating what went wrong. But what if you could pause a job right at the moment an issue occurs?\nWith our new job debugging feature, you’ll be able to set breakpoints before or after specific build steps, making it easier to pinpoint problems as they happen.\n\n\n\n\nThis brings a more interactive debugging experience inspired by familiar concepts from IntelliJ IDEA, such as breakpoint toggling and a dedicated Debug button.\nIn the future, we plan to refine this further by allowing breakpoints within individual CLI script commands.\nMore VCS integration options\nYou can now build your GitHub, GitLab, Bitbucket, and Git projects in TeamCity Pipelines. This year, we’ll be expanding VCS integration functionality to include the Commit Status Publisher and other powerful features. Stay tuned!\nPersonal notifications\nYou can now subscribe to receive notifications when a pipeline fails. Sometimes, however, you might want to receive more (or less) information about build statuses, etc. You’ll be able to choose the events that you want to be notified about, for example, when a pipeline fails to start, when the first build error occurs, and others.\nIntegration with IntelliJ IDEA\nWe’re working on a seamless integration between IntelliJ IDEA and TeamCity Pipelines. The integration will make it easier to manage CI/CD workflows directly from the IDE. Developers will be able to trigger builds and monitor results without leaving their coding environment. \nThis seamless connection helps streamline development, reducing context switching and making CI/CD an integral part of the development process.\nRestricting incoming dependencies for enhanced security\nTo improve security and control, we are working on a feature that will allow project administrators to restrict and view incoming snapshots and artifact dependencies for build configurations.\nThe new restriction mechanism will empower administrators to define and control which projects and configurations can establish dependencies, reducing security risks and ensuring better oversight of build relationships.\nThat’s it for now! If you have a feature request, please feel free to share it with us via this form.\nSubmit feature request",
        "dc:creator": "Olga Bedrina",
        "content": "This year, the TeamCity team is working on a number of new initiatives, including updating the UI, TeamCity recipes, Jenkins migration tools, and many others. Read on to learn what our focus is for 2025. Modernizing the TeamCity Enterprise interface In 2025, we’re taking a major step forward in enhancing the TeamCity experience. The modern [&#8230;]",
        "contentSnippet": "This year, the TeamCity team is working on a number of new initiatives, including updating the UI, TeamCity recipes, Jenkins migration tools, and many others. Read on to learn what our focus is for 2025. Modernizing the TeamCity Enterprise interface In 2025, we’re taking a major step forward in enhancing the TeamCity experience. The modern […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=553716",
        "categories": [
          "roadmap"
        ],
        "isoDate": "2025-03-19T14:32:32.000Z"
      },
      {
        "creator": "Galina Ryazanskaya",
        "title": "Using AI Agents for Notebook Debugging",
        "link": "https://blog.jetbrains.com/ai/2025/03/using-ai-agents-for-notebook-debugging/",
        "pubDate": "Wed, 19 Mar 2025 12:53:50 +0000",
        "content:encodedSnippet": "Debugging computational notebooks can be quite frustrating for a variety of reasons, including issues like out-of-order cell execution, missing data files, and library conflicts. Traditional AI tools often struggle with these problems due to the interactive nature of notebooks, but at JetBrains, we are exploring new solutions.\nOur research team has developed a prototype of an AI agent that autonomously fixes notebook errors by modifying and executing cells until the problems are solved. \nIn this post, we’ll explore how the prototype works, how it improves the debugging process, and how it compares to simpler LLM-based solutions in terms of cost and user experience.\nWhy automate notebook debugging\nComputational notebooks are widely used for data analysis, research, and hypothesis testing because they allow users to integrate different data types and execute cells non-linearly. This creates vast opportunities for experimentation and use in data science.\nHowever, this flexibility and interactivity come at the cost of reproducibility and having to deal with frequent bugs. Studies show that up to 75% of Jupyter notebooks cannot be re-run without issues. At the same time, debugging them is particularly difficult, as it requires the interactive, iterative inspection of errors and their context rather than simple static analysis.\nUsing LLMs like GPT-4 is standard practice for other debugging tasks. However, for notebook debugging, it is rather challenging due to context size limitations. Notebooks require runtime information to reflect their state, which means they often need a large context window for error resolution. AI agents address this by interacting with notebooks iteratively – much like humans do, but significantly faster.\nThe JetBrains Research team has created a prototype of just such an AI agent for Datalore. It is capable of creating, editing, and executing cells to resolve runtime exceptions.\nHere’s a short demo showcasing the debugging AI agent in action:\n\n\n\n\n\n\nIf you want to see a detailed report on this project, check out this preprint. These results were also presented at EMNLP, a leading conference for natural language processing and artificial intelligence.\nHow does the debugging AI agent work?\n\nLet’s start with a broad overview of our AI agent system. It consists of three main components – the LLM module, the environment, and the user interface – which work together as follows:\nStart: Whenever the execution of a cell results in an exception, the debugging AI agent can be called with a Fix with AI Agent button that appears below the error message. When clicked, it starts the agentic debugging cycle, which is shown as an interaction with an LLM in a separate window. \n\n\n\n\n\nCycle: At each iteration of the debugging cycle, the LLM module collects the required information and adds it to the debugging prompt passed to the LLM, in this case, GPT-4. The LLM then generates an answer, which includes some reasoning as well as the next action, such as editing and executing cells or finishing the debugging process once the error has been resolved. The action suggested by the model is then executed in the environment, and the results are added to the prompt for the next round of debugging. \n\n\n\n\n\nFinish: This iterative loop continues until the error is resolved or until the limit on time or the number of iterations is reached. In our experiments, most of the debugging runs ended in the error being successfully resolved after only a few steps, so the limits were rarely required in practice.\nHow does the AI agent prompt the LLM?\nLet’s take a closer look at the core of our AI agent system, namely, the LLM module. Our AI agent prompts the LLM using a “system prompt” that covers the general approach to the task and a “user prompt” containing specific details about the current stage of the debugging run. Below, you can see shortened versions of the two prompts.\n\nSystem prompt\nGeneral purposeYou are a coding assistant that should help solve the user’s error in a computational notebook. You should use functions to help handle real-time user queries and return outputs only in the form of valid JSON.\nAvailable toolsYou have a few ways of interacting with the environment:\nchange the code of the existing cells, run it, and give the output.add a new cell with your own code, run it, and give the output.run any cell as is and give the output.If you’re sure the error won’t show up in the cell where it was found, you can run finish.\nWorkflow guidelinesKeep trying for at least 10 steps before you stop, but if you think you’ve solved the problem, you can run finish right away.If you can fix the error without changing any code, do that. Don’t edit the existing code or add new code unless you really need to.Use only the functions given to you. If you have many functions to choose from, pick the one that solves the problem quickest.When you think you’ve fixed the problem, run finish to say you’re done.\nHacksJust adding try – except is not a solution. Commenting out the code that produced the error is not a solution. You should propose only meaningful solutions. \n\n\n\n\n\n\n\nInitial user promptHere’s a Jupyter notebook. It uses {separator} as a separator between cells. Note that cell indexes START FROM 1! {notebook} An error occurred in the cell with num {cell_num}. The error trace is the following: {error} Please resolve the error. You must use only the tools defined above to resolve the error. Return output only as valid JSON. \n\n\n\n\n\nThe system prompt opens with a general description of the problem, provides some guidelines on how it should be solved, and then closes with instructions about actions. We use reflection as the algorithm for choosing the next action, asking the LLM to reflect on the outcomes of the previous actions taken before selecting the next tool to call. The reflections are output as comments for each selected action and are available at all following steps. The guidelines also encourage the LLM to explore the environment and discourage large outputs and “hacks”, such as deleting the error cell or commenting out the problematic code. \nThe user prompt initially consists of the notebook code and the error cell number, again accompanied by a short task description. After each step, the actions suggested by the LLM are converted into commands and executed, and the result is collected as an input for the next user prompt, along with the conversation history.\nYou can observe the entire debugging process in real time via the interface where the conversation and the actions are visualized.\nHow costly is the AI agent?\nA significant cost with any AI system comes from running large language models, with costs primarily driven by the number of request and response tokens processed.\nTo compare costs, we evaluated the AI agent against a simpler zero-shot debugging approach in Datalore, using 100 hours of hackathon coding records. The dataset featured an extensive notebook action history, so the errors that occurred could be reproduced and addressed by either of the AI solutions. On average, resolving an error with the AI agent was 2.5 times as expensive, costing $0.22 per error with GPT-4 versus $0.09 with the simpler method.\nThe AI agent’s higher cost came mainly from using three times as many request tokens for its memory stack, while the number of response tokens was similar between methods. Nevertheless, the cost remained practical for industry use since input tokens are cheaper and most errors were fixed on the first step.\nUser feedback about the AI agent\nWe used the same zero-shot baseline to compare the user experiences with these two AI algorithms. In particular, we wanted to know how well users thought the AI agent resolved problems and how much they believed it could improve their productivity. We had two groups of programmers complete the same data-filtering task. One group used the zero-shot baseline, and the other used our agentic solution.\n\n\n\n\nWe found that the users were quite satisfied with both solutions, rating them either good or excellent, and they slightly favored the AI agent. The users also seemed to rely more on the AI agent. However, the participants also reported that the agentic solution was less easy to use. We suspect this may be due to the lack of user control over its actions as well as the speed at which it acts. \nIn the feedback, the users suggested that slowing down the conversation and highlighting the introduced changes in the notebook would provide more insight into the AI agent’s thought process and solution. They also proposed making the agentic solution process more interactive so they have a way of interrupting or changing the actions suggested by the AI agent. Finally, they asked for a way to access the agent before any error has occurred.\nBenefits of AI debugging: Looking forward\nFinally, we compared the AI agent to the unaided human debugging process that comprised our dataset. In this comparison, the agentic solution offers obvious benefits:\nFaster debugging: The AI agent typically fixed issues in under a minute, while humans took an average of 3.5 minutes and up to 20 minutes for more complex cases.\nEffectiveness for common small errors: The agent quickly resolved small bugs, like incorrect pandas functions or arguments.\nInsights into root causes: The agent highlighted and explained changes, which helped to identify root causes of and solutions for errors.\nThe main takeaways of the study for the agentic debugging research concern the areas of improvement:\nReduced cost: One solution to the higher cost of the agentic approach could be history caching, which can reduce the number of request tokens used. \nIncreased user control: The study of user experience highlighted that users would prefer to have more control over the process, such as the option to call the agent before any error occurs. \nBuilding on top of this work, we will continue making Datalore smarter with AI-based features.",
        "dc:creator": "Galina Ryazanskaya",
        "content": "Debugging computational notebooks can be quite frustrating for a variety of reasons, including issues like out-of-order cell execution, missing data files, and library conflicts. Traditional AI tools often struggle with these problems due to the interactive nature of notebooks, but at JetBrains, we are exploring new solutions. Our research team has developed a prototype of [&#8230;]",
        "contentSnippet": "Debugging computational notebooks can be quite frustrating for a variety of reasons, including issues like out-of-order cell execution, missing data files, and library conflicts. Traditional AI tools often struggle with these problems due to the interactive nature of notebooks, but at JetBrains, we are exploring new solutions. Our research team has developed a prototype of […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=553433",
        "categories": [
          "research",
          "ai-agent",
          "ai-agents",
          "debug",
          "debugging"
        ],
        "isoDate": "2025-03-19T12:53:50.000Z"
      },
      {
        "creator": "Alyona Chernyaeva",
        "title": "Shout-Out to Kotlin for Server-Side Content Creators! ",
        "link": "https://blog.jetbrains.com/kotlin/2025/03/shout-out-to-kotlin-for-server-side-content-creators/",
        "pubDate": "Tue, 18 Mar 2025 13:13:03 +0000",
        "content:encodedSnippet": "If you’re using Kotlin for server-side development and sharing your experiences – whether through blog posts, videos, or sample projects – know that we see you, and we want to highlight your work!\nRecent picks from the community\n📖 [Article] From Java to Kotlin — a practical example of how to convert code – Paul Newport shows how to convert Java code to idiomatic Kotlin, improve null safety, and migrate tests to Kotest.\n🎥 [Video series] Ktor Server Fundamentals – Akash Kamati covers Ktor fundamentals, routing, authentication, and more to help you build robust backend applications with Kotlin.\n🎥 [Video series]  Ktor and MongoDB – Akash Kamati walks through setting up MongoDB with Ktor, covering CRUD operations, full-text search, aggregation, and query optimization for scalable Kotlin applications.\n💻 [Project] Kotlin WoT & Agent ReaCtor (ARC) Framework – Robert Winkler is developing a Kotlin-based client/server framework for AI agents and tools, integrating W3C WoT compatibility with Ktor.\n📖 [Article] Integrating Firebase JWT token verification in Ktor – Part 1 – Jamie Craane explains how to integrate Firebase JWT authentication in Ktor, covering secure token verification, authentication setup, and best practices for handling JWTs.\n📖 [Article] Integrating Firebase JWT token verification in Ktor – Part 2 – In part two, Jamie Craane explores linking Firebase users to a database, using custom tokens, Exposed SQL, and Kotlin context. \n💻 [Project]  Stove – E2E Testing for JVM Backends – Oğuzhan Soykan introduces Stove, a Kotlin-based framework for testing Ktor, Spring Boot, and Micronaut, with built-in support for Kafka, PostgreSQL, and more.\nIf you’re creating something like this, we’d love to see it!\nWhat’s in it for you?\nCreating high-quality content takes time and effort, and we want to make sure it gets the recognition it deserves. Every few months, the Kotlin team will pick standout content and help amplify it by:\nFeaturing it on the Kotlin blog.\nSharing it on @Kotlin X, Kotlin Slack (get an invite here), and YouTube.\nNeed content ideas?\nNot sure what to cover? Here are some of the most requested topics:\nBest practices for using Kotlin in backend development.\nMigrating an existing Java Spring backend to Kotlin.\nOptimizing microservices with Kotlin.\nBuilding with Ktor or Spring Boot in Kotlin.\nUsing Kotlin for AI-powered backend systems.\nOf course, these are just suggestions – if you’ve got insights or experiences to share, we’d love to see them!\nHow to share your work\nTo make your content easier to find, use the tag #KotlinServerSide on platforms that support it.\nWe’re excited to see what you create!",
        "dc:creator": "Alyona Chernyaeva",
        "content": "If you&#8217;re using Kotlin for server-side development and sharing your experiences – whether through blog posts, videos, or sample projects – know that we see you, and we want to highlight your work! Recent picks from the community 📖 [Article] From Java to Kotlin — a practical example of how to convert code – Paul [&#8230;]",
        "contentSnippet": "If you’re using Kotlin for server-side development and sharing your experiences – whether through blog posts, videos, or sample projects – know that we see you, and we want to highlight your work! Recent picks from the community 📖 [Article] From Java to Kotlin — a practical example of how to convert code – Paul […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=553532",
        "isoDate": "2025-03-18T13:13:03.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "AI Code Completion: Less Is More",
        "link": "https://blog.jetbrains.com/ai/2025/03/ai-code-completion-less-is-more/",
        "pubDate": "Tue, 18 Mar 2025 10:55:26 +0000",
        "content:encodedSnippet": "If you’ve been following our journey, you might’ve read our recent blog post on the Complete the Un-Completable: The State of AI Completion in JetBrains IDEs. From that post, you might remember this cool chart on code completions. In April, something exciting happened: our acceptance rate went up while the explicit cancel rate dropped.\n\n\n\n\nIn this blog post, we’ll break down why and how we got the results without retraining our generation model. \nMan shall not live on LLM alone\nThe LLM that provides your code suggestions is the heart of AI-powered code completion, but it’s not the whole show. There’s a ton happening behind the scenes, in particular on the plugin side, like deciding:\nWhen to show a suggestion. \nIf a suggestion should be single-line or multi-line.\nWhich suggestions to show or conceal – for instance, a suggestion could be semantically incorrect, score too low, or use offensive or inappropriate language. \nBut sometimes, defining the filtering rules is not that straightforward.\nWhat we are trying to achieve\nSimply put, we want to show you only the suggestions you’ll actually use. That means fewer unwanted suggestions – ones you’ll cancel, edit, or delete – without losing the power of our code completion feature. In terms of metrics, we’re working to: \nIncrease the acceptance rate.\nCut down the explicit cancel rate and the percentage of edited/deleted suggestions.\nMaintain or increase the ratio of completed code. \nAll you need is logs\nSo, how do we achieve all of this? The obvious answer is to improve the completion model. \nHowever, it’s not that simple:\nIt’s expensive and time-consuming. Training a better model takes a lot of resources.\nWe can’t see where things go wrong. We don’t store users’ code, so we can’t analyze bad suggestions.\nContext alone isn’t enough – things like user behavior and how a suggestion fits with nearby lines also matter.\nLightweight local filter model\nInstead of going down that long road of improving the completion LLM, we took a different approach: a lightweight local filter model.\nThis model runs on top of the completion LLM and is trained using anonymized logs.\nThe model helps decide whether a suggestion should be shown by analyzing:\nContext: The file/project context (like the language used as well as the number and type of imports) and the completion context (like features that describe a caret location). \nUser behavior: The typing speed and the time spent since last typing.\nThe suggestion itself: Whether references are resolved, if the suggestion repeats itself or is similar to surrounding lines, and additional model outputs like token scores and token entropy.\n\n\n\n\nThe job of the lightweight local filter model is simple: it decides whether to accept or reject a suggestion based on your actions. However, we’ve guided the model a bit during training. We gave extra weight to explicit user actions, like when you explicitly accept or cancel a suggestion. If you edit or delete a suggestion after accepting it, we treat it as less of a win – the more you change, the less weight it gets.\nTechnically speaking, the model is built with CatBoost, which is efficient and doesn’t need tons of data. The model is specifically designed to be lightweight – once trained, it becomes a compact 2.5 MB file and runs directly in Kotlin on users’ machines, making predictions in 1–2 milliseconds.\nWhat we have achieved\nOur A/B tests in the EAP showed great results, and they’re getting even better. The filter model boosted the acceptance rate by ~50% and cut the explicit cancel rate by ~40%, all while keeping the ratio of completed code steady.\nWe officially rolled out the filter model in version 2024.1 of JetBrains IDEs for a range of languages, including Java, Kotlin, Python, PHP, JavaScript/TypeScript, Go, CSS, and Ruby. In later versions we also covered C#, C++, Rust, and HCL, plus the local filter model for cloud completion with Mellum in Python, Java, and Kotlin. We plan to cover even more languages soon.\nMeanwhile, both the local code completion model and the lightweight local filter model continue to evolve and improve together.\n\n\n\n\nWhat we have learned\nEven if your LLM is already doing a great job, there’s always room for improvement. You don’t always need massive, complex models to make a difference. Sometimes, the smart use of extra data like logs can do the trick. So, what’s next for AI-powered code completion? How far can we push it?\nShare your thoughts and ideas in the comments below!",
        "dc:creator": "Irina Mariasova",
        "content": "If you&#8217;ve been following our journey, you might&#8217;ve read our recent blog post on the Complete the Un-Completable: The State of AI Completion in JetBrains IDEs. From that post, you might remember this cool chart on code completions. In April, something exciting happened: our acceptance rate went up while the explicit cancel rate dropped. In [&#8230;]",
        "contentSnippet": "If you’ve been following our journey, you might’ve read our recent blog post on the Complete the Un-Completable: The State of AI Completion in JetBrains IDEs. From that post, you might remember this cool chart on code completions. In April, something exciting happened: our acceptance rate went up while the explicit cancel rate dropped. In […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=553317",
        "categories": [
          "ai-assistant",
          "ai",
          "ai-code-completion",
          "code-completion",
          "llm"
        ],
        "isoDate": "2025-03-18T10:55:26.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2024.3.5 Is Out!",
        "link": "https://blog.jetbrains.com/idea/2025/03/intellij-idea-2024-3-5/",
        "pubDate": "Tue, 18 Mar 2025 10:38:35 +0000",
        "content:encodedSnippet": "We’ve released another update for v2024.3! \nYou can update to this version from inside the IDE, using the Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our website.\nThis new version that brings the following valuable improvements: \nThe code completion popup once again includes a dropdown menu, allowing for quick access to additional actions and settings. [IJPL-177749]\nYou can now customize the hostname length in HostLabelDropdown, improving usability for infrastructures with longer hostnames. [IJPL-178086]\nBreakpoints in Dart code can once again be set and hit. [IDEA-367839]\n\n\n\n\nTo see the full list of issues addressed in this version, please refer to the release notes. \nIf you encounter any issues, please submit a report using our issue tracker. \nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "We’ve released another update for v2024.3! You can update to this version from inside the IDE, using the&#160;Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our&#160;website. This new version that brings the following valuable improvements:&#160; To see the full list of issues addressed in this [&#8230;]",
        "contentSnippet": "We’ve released another update for v2024.3! You can update to this version from inside the IDE, using the Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our website. This new version that brings the following valuable improvements:  To see the full list of issues addressed in this […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=552833",
        "categories": [
          "releases",
          "2024-3",
          "bug-fix-update",
          "intellij-idea-2024-3"
        ],
        "isoDate": "2025-03-18T10:38:35.000Z"
      },
      {
        "creator": "Mala Gupta",
        "title": "Java 24 and IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/03/java-24-and-intellij-idea/",
        "pubDate": "Tue, 18 Mar 2025 08:35:35 +0000",
        "content:encodedSnippet": "IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases!\nI’m often asked, “What’s the best feature of Java 24?” My answer? Why pick just one? 🙂\nJava 24 continues to enhance the language with improvements like Simple source files and instance main methods, Primitive Types in Patterns, instanceof, and switch, Module Import Declarations, Flexible constructor bodies, and API enhancements such as Stream Gatherers – plus many more.\nOne of Java’s greatest strengths is its predictable six-month release cadence, allowing developers to explore both production and preview features regularly. However, keeping up with new features every six months can feel overwhelming. In this blog post, I’ll walk you through a few key Java 24 features – what they are, how you can use them, and how IntelliJ IDEA supports them. But first, let’s make sure you have the right setup in place.\nSimple source files and instance main methods (JEP 495)\nImplicit classes and import statements, shorter main() method, ‘println()’, to output values – make it easier for beginners to get started in Java. If you are an experienced developer, these features can help you create scripts, games, and utilities using fewer lines of code.\nIf you are new to this feature, I’d recommend you to check out my introductory blog post – Java 24: ‘HelloWorld’ and ‘main()’ meet minimalistic and detailed blog post – Java 24: Build Games, Prototypes, Utilities, and More –With Less Boilerplate, that talks about its practical use cases. This feature can not only help new developers get started with writing programs like simple calculations, printing patterns, enjoy joy of programming by creating simple console and gui based games, but also help create utilities for experienced developers such as processing files, or access web resources.\nIn this section, I’ll focus on IntelliJ IDEA’s support for this Java feature.\nCreate a simple source file with instance main method\nWhen you use IntelliJ IDEA to create and run your simple files, you could run it like any other executable class (saves you from specifying the compilation or run time command line parameters that you must use otherwise). If you miss setting the language level to 24, IntelliJ IDEA can detect that and prompt you to do so (as shown below):\n\n\n\n\nChanging an implicit class to a regular class\nWhen you are ready to level up and work with other concepts like user defined classes, you might want to convert your implicit classes to a regular class. You can use context action ‘Convert implicitly declared class into regular class‘, as shown below (this action will add relevant import statements):\n\n\n\n\nConverting a regular class to an implicit class\nSometimes a packaged class might be better off as an implicit class because it might not be using the concepts meant for a regular class. If so, you could do that by using the action ‘Convert into implicitly declared class’ (as shown below). During the conversion, IntelliJ IDEA will remove the import statements that are no longer required:\n\n\n\n\nBehind the scenes – implicit class with instance method main()\nBehind the scenes, the Java compiler creates an implicit top level class, with a no-argument constructor, so that these classes don’t need to be treated in a way that is different to the regular classes.\nHere’s a gif that shows a decompiled class for you (via Decompiler feature in IntelliJ IDEA) for the source code file AnimateText.java:\n\n\n\n\nInteracting with console – println() vs. System.out.println() calls\nTo make it simpler for new developers to interact with the console, that is, output messages to console and to read input from it, a new class – java.io.IO was created in Java 23. It contains just a handful of overloaded readln() and println() methods (as shown below):\n\n\n\nClass java.io.IO is automatically imported in implicit classes. So, instead of using System.out.println(), you can now use println() to output messages to a console (and readln() to read from console). Interestingly, println() was added to this class in Java 24.\nOverloaded main method in the implicit class\nWhen you overload main() method in an implicit class, there would be an order of preference to be considered ‘the’ main() method. All of these following methods are valid signatures of main() methods in an implicit class:\npublic static void main(String args[]) {}\npublic void main(String args[]) {}\npublic static void main() {}\nstatic void main() {}\npublic void main() {}\nvoid main() {}\n\n\n\nWhen you have overloaded main() method in your implicit class, IntelliJ IDEA would show the run icon next to the correct or preferred ‘main’ method:\n\n\n\n\nMissing main method in an implicit class\nIf there is no valid main method detected in an implicit class, IntelliJ IDEA could add one for you, as shown in the following gif:\n\n\n\n\nPrimitive Types in Patterns, instanceof, and switch (Preview Feature)\nCurrently in its second preview, the feature Primitive Types in Patterns, instanceof, and switch enhances Java’s pattern matching capabilities by incorporating primitive types across all pattern. This allows you to use primitive type patterns directly with instanceof and switch expressions (which was earlier restricted to objects), streamlining code and reducing the need for manual type conversions.\nA quick example\nThis feature enables you to use primitive types in switch expressions with guard patterns, as follows:\npublic String getHTTPCodeDesc(int code) {\n   return switch(code) {\n       case 100 -> \"Continue\";\n       case 200 -> \"OK\";\n       case 301 -> \"Moved Permanently\";\n       case 302 -> \"Found\";\n       case 400 -> \"Bad Request\";\n       case 500 -> \"Internal Server Error\";\n       case 502 -> \"Bad Gateway\";\n       case int i when i > 100 && i < 200 -> \"Informational\";\n       case int i when i > 200 && i < 300 -> \"Successful\";\n       case int i when i > 302 && i < 400 -> \"Redirection\";\n       case int i when i > 400 && i < 500 -> \"Client Error\";\n       case int i when i > 502 && i < 600 -> \"Server Error\";\n       default                            -> \"Unknown error\";\n   };\n}\n\n\n\nSimilarly, you could use primitives with instanceof operator. \nThis feature is being previewed again without any change. I covered this feature together with how IntelliJ IDEA supports it in my previous blog post – Java 23 and IntelliJ IDEA. I’d suggest you check it out for details. This blog post answers questions, such as what does it mean to add primitive types to Pattern Matching, to multiple examples and robust data flow analysis in IntelliJ IDEA.\nInterview with creators of this feature\nWe also interviewed the owner of this feature, Aggelos Biboudis, Principal Member Technical Staff, Oracle, Brian Goetz, Java language Architect with Oracle, Tagir Valeev, Java Team Technical Lead, JetBrains.\n\n    \nCheck it out to find out the bigger picture of why primitive data types are being added to the Java language and the finer details of the changes they propose. \nModule Import Declarations\nIn its second preview, Module Import Declarations enables you to import all packages exported by a module in a single declaration. It simplifies the reuse of modular libraries without requiring the importing code to be modularized itself. For example, the declaration import module java.base; imports all public top-level classes and interfaces from packages exported by the java.base module, eliminating the need for multiple individual import statements. This improves readability of code, especially when working with extensive APIs.\nA quick example\nImagine your code includes multiple import statements, such as the following:\nimport java.io.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.lang.reflect.*;\nimport java.nio.*;\nThese could be replaced by an import module statement, as follows:\nimport java.base.*;\nWhich packages are exported by the module java.base (or other modules)?\nIt is simple to answer this question when you are using IntelliJ IDEA. Click on the module name in the editor or use the relevant shortcut (Go to Declaration or Usages) and you could view the definition of this module to find out all the modules exported by this module. This is shown in the following gif:\n\n\n\n\nInterview with creators of this feature\nWe also interviewed the owner of this feature, GavinBierman, Programming Language Designer at Oracle.\n\n    \nGavin covered the differences between single-type import and type-import-on-demand declarations, explaining what they are and why individuals and organizations prefer one style over the other. He also talked about how the “Module Import Declarations” feature automatically imports on demand from transitive dependencies of modules. He covered ambiguous imports and how to deal with them, name ambiguity, and how to submit relevant feedback on this feature to the teams at OpenJDK. \nFlexible Constructor bodies\nIn its third preview, this feature is useful when a superclass calls a method from its constructor and you want to override this method in a subclass and want to access a field from the subclass inside this method. Previously, the subclass field would not be initialized when the method was called from the superclass constructor. Now it is possible to initialize the field and prevent surprises. Here’s an example code to show this feature:\nabstract class Action {\n   public Action() {\n       System.out.println(\"performing \" + getText());\n   }\n   public abstract String getText();\n}\nclass DoubleAction extends Action {\n   private final String text;\n   private DoubleAction(String text) {\n       this.text = text; // this did not compile before Java 23 with preview features enabled.\n       super();\n   }\n   @Override public String getText() {\n       return text + text;\n   }\n}\n\n\n\nIf you are new to this feature, don’t miss checking out my detailed blog post on this feature, Constructor Makeover in Java 22 | The IntelliJ IDEA Blog, which talks about the why and how of this feature.\nPreview Features\nThe features covered in this blog post are preview and not production features. With Java’s new release cadence of six months, new language features are released as preview features. They may be reintroduced in later Java versions in the second or more preview, with or without changes. Once they are stable enough, they may be added to Java as a standard language feature.\nPreview language features are complete but not permanent, which essentially means that these features are ready to be used by developers, although their finer details could change in future Java releases depending on developer feedback. Unlike an API, language features can’t be deprecated in the future. So, if you have feedback about any of the preview language features, feel free to share it on the JDK mailing list (free registration required).\nBecause of how these features work, IntelliJ IDEA is committed to only supporting preview features for the current JDK. Preview language features can change across Java versions, until they are dropped or added as a standard language feature. Code that uses a preview language feature from an older release of the Java SE Platform might not compile or run on a newer release.\nSummary\nJava 24 introduces key enhancements like Simple Source Files, Primitive Type Patterns, Module Import Declarations, and Flexible Constructor Bodies. IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases!\nWith intelligent assistance, IntelliJ IDEA simplifies adopting Java 24’s features by offering smart code suggestions, seamless conversions, and robust analysis. Its support ensures a smooth development experience as Java evolves.",
        "dc:creator": "Mala Gupta",
        "content": "IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases! I’m often asked, “What’s the best feature of Java 24?” My answer? Why pick just one? 🙂 Java 24 continues to enhance the language with improvements like Simple source files and instance main methods, Primitive Types [&#8230;]",
        "contentSnippet": "IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases! I’m often asked, “What’s the best feature of Java 24?” My answer? Why pick just one? 🙂 Java 24 continues to enhance the language with improvements like Simple source files and instance main methods, Primitive Types […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=552955",
        "categories": [
          "idea",
          "java",
          "intellijidea",
          "java24",
          "whatsnew-2"
        ],
        "isoDate": "2025-03-18T08:35:35.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "How the IntelliJ Infrastructure Team Cuts Build Execution Time by 30% With TeamCity",
        "link": "https://blog.jetbrains.com/teamcity/2025/03/how-intellij-uses-teamcity/",
        "pubDate": "Mon, 17 Mar 2025 09:44:31 +0000",
        "content:encodedSnippet": "Introduction\nJetBrains is known for developing some of the world’s most popular IDEs, including IntelliJ IDEA, PyCharm, and WebStorm. Supporting this development is a dedicated infrastructure team that ensures hundreds of developers can efficiently build, test, and release these products.\nAt the core of their workflow is TeamCity, JetBrains’ own CI/CD solution, which powers build automation, testing, and scalable infrastructure management.\nExample of a build chain in TeamCity\n\n\n\nTo understand how TeamCity supports this large-scale development process, we spoke with the IntelliJ Infrastructure team about their approach to managing CI/CD pipelines for 700–800 developers, running thousands of daily builds, and optimizing workflows to deliver fast and reliable releases.\nThe challenge: scaling CI/CD for hundreds of developers\nWith a large team continuously pushing changes, maintaining fast, reliable, and scalable CI/CD pipelines is a complex task. The IntelliJ Infrastructure team requires a solution capable of handling thousands of builds per day without overloading resources while leveraging smart automation to reduce manual effort and ensure high-quality code delivery.\nAdditionally, their CI/CD setup must support a diverse infrastructure, including on-premises servers, AWS, and macOS, Linux, and Windows agents. Managing hundreds of thousands of automated tests while minimizing flaky test failures is another critical challenge.\nTeamCity Grafana dashboard\n\n\n\nTo meet these demands, the team relies on TeamCity, JetBrains’ own powerful CI/CD solution, which provides the scalability, flexibility, and automation needed to streamline their development workflows.\n    \n“We build IDEs and everything related to them in TeamCity, like internal services, services for statistics, etc. I’m very used to TeamCity and feel like it’s a hammer in my hand: you can do anything with it.”\n\n            \nDmitry Panov, IntelliJ Infrastructure Technical Team Lead\n                                                        \nRead the full case study to learn how TeamCity helps the IntelliJ Infrastructure team to manage the CI/CD process for 700+ engineers, while cutting the build time by 30%.\nRead the case study",
        "dc:creator": "Olga Bedrina",
        "content": "Introduction JetBrains is known for developing some of the world’s most popular IDEs, including IntelliJ IDEA, PyCharm, and WebStorm. Supporting this development is a dedicated infrastructure team that ensures hundreds of developers can efficiently build, test, and release these products. At the core of their workflow is TeamCity, JetBrains’ own CI/CD solution, which powers build [&#8230;]",
        "contentSnippet": "Introduction JetBrains is known for developing some of the world’s most popular IDEs, including IntelliJ IDEA, PyCharm, and WebStorm. Supporting this development is a dedicated infrastructure team that ensures hundreds of developers can efficiently build, test, and release these products. At the core of their workflow is TeamCity, JetBrains’ own CI/CD solution, which powers build […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=553206",
        "categories": [
          "intellij",
          "teamcity-2",
          "case-study",
          "news"
        ],
        "isoDate": "2025-03-17T09:44:31.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Jessie Houghton",
        "title": "Enhance Pull Request Reviews with In-Depth Feedback",
        "link": "https://devblogs.microsoft.com/visualstudio/enhance-pull-request-reviews-with-in-depth-feedback/",
        "pubDate": "Thu, 20 Mar 2025 15:00:02 +0000",
        "content:encodedSnippet": "Visual Studio 2022 has taken the pull request experience to the next level by making reviews interactive. We previously enabled viewing your pull request comments inline in your working files. Now, the latest update empowers you to add comments directly within the IDE, streamlining the review process. Now, pull request reviewers can conduct deep reviews with the navigational power of the IDE and stay in their focused environment.\n\nWe heard from your feedback that the web experience for reviewing pull requests can only go so far. When you need to really understand your colleagues’ proposed changes, it’s best to checkout their branch and use the navigation and build tools in VS. Once you’re on their branch and you’ve identified some feedback, you can add the comment directly without having to map it back to the code in the web. This extends previous functionality where you could view and reply to only existing comments.\nEnabling this feature\nTo start using the new commenting feature, first ensure you have enabled the feature flags:\nTools > Options > Preview Features > Pull Request Comments \nTools > Options > Pull Request Add Comment.\nOnce these are activated, checkout any branch with an active pull request and click on Show comments in files in the InfoBar to activate the pull request comments experience in the editor. Alternatively, you can enable comments by using the top level menu Git > ADO/GitHub > Show Comments in Files or from the PR dropdown menu next to the view all commits link in the Git Changes window.\n\nAdding comments to pull request files\nSimply click on the Add Comment icon in the margin, or right-click the line you’d like to comment on and select Git > Add Comment from the context menu.\n\nThe comment icon will only appear in files that are part of the pull request. For GitHub pull requests, comments can only be added to lines surrounding and including the changes.\nWe appreciate your feedback!\nThis is another step in our journey to deliver a powerful and integrated pull request experience. We started with supporting the create a pull request workflow, enabled viewing pull request comments on your checked out branches, and now, you can add new review comments, as well!\nWe won’t stop there. Your continuous suggestions and insights play a crucial role in shaping the tools we build. We’re thrilled to bring you this enhancement and are eager to hear how it improves your workflow.\nThe post Enhance Pull Request Reviews with In-Depth Feedback appeared first on Visual Studio Blog.",
        "dc:creator": "Jessie Houghton",
        "content": "<p>Visual Studio 2022 has taken the pull request experience to the next level by making reviews interactive. We previously enabled viewing your pull request comments inline in your working files. Now, the latest update empowers you to add comments directly within the IDE, streamlining the review process. Now, pull request reviewers can conduct deep reviews [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/enhance-pull-request-reviews-with-in-depth-feedback/\">Enhance Pull Request Reviews with In-Depth Feedback</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 2022 has taken the pull request experience to the next level by making reviews interactive. We previously enabled viewing your pull request comments inline in your working files. Now, the latest update empowers you to add comments directly within the IDE, streamlining the review process. Now, pull request reviewers can conduct deep reviews […]\nThe post Enhance Pull Request Reviews with In-Depth Feedback appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252766",
        "categories": [
          "Git",
          "Team and Development",
          "Visual Studio",
          "GitHub"
        ],
        "isoDate": "2025-03-20T15:00:02.000Z"
      },
      {
        "creator": "Leah Tran",
        "title": "Find the IDE features you need with GitHub Copilot and Search",
        "link": "https://devblogs.microsoft.com/visualstudio/find-the-ide-features-you-need-with-github-copilot-and-search/",
        "pubDate": "Wed, 19 Mar 2025 15:00:29 +0000",
        "content:encodedSnippet": "Ever find yourself needing to locate a specific menu item, command, or option in Visual Studio, but you don’t know its name or location? Do you often struggle to find detailed instructions on using certain features effectively?\nNow, there’s a solution to get you the information you need right in the IDE.\n\nVisual Studio now makes it easy to access GitHub Copilot Chat from Feature Search (Ctrl+Q). Clicking “Ask Copilot” will send your query to GitHub Copilot Chat and get detailed responses, without leaving Visual Studio and search for docs online.\nThis tool interprets the semantic meaning of your query, considers your Visual Studio version, and provides accurate answers. This means no more guessing the correct terminology or navigating through multiple menus.\nFor instance, typing ‘prettify file’ in the traditional search might not bring up the ‘format document’ option. However, GitHub Copilot Chat understands the intent behind your query and can guide you to the correct setting with all the information you need to use it.\nHow it works\nNotice the @vs label in the sent chat message? When your search query gets sent over to the GitHub Copilot chat, the @vs agent is called. This @vs agent has in-depth knowledge about the workings of Visual Studio, with strong context on the features available in the current version you’re using and how those work.\nThe @vs agent works in the Visual Studio GitHub Copilot Chat even if you’re not starting from Feature Search. You can invoke the agent on your own by adding @vs to your chat message.\nAppreciation for your feedback\nYour insights help us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support.\nYour feedback is invaluable in shaping Visual Studio’s future. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post Find the IDE features you need with GitHub Copilot and Search appeared first on Visual Studio Blog.",
        "dc:creator": "Leah Tran",
        "content": "<p>Ever find yourself needing to locate a specific menu item, command, or option in Visual Studio, but you don&#8217;t know its name or location? Do you often struggle to find detailed instructions on using certain features effectively? Now, there’s a solution to get you the information you need right in the IDE. Visual Studio now [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/find-the-ide-features-you-need-with-github-copilot-and-search/\">Find the IDE features you need with GitHub Copilot and Search</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Ever find yourself needing to locate a specific menu item, command, or option in Visual Studio, but you don’t know its name or location? Do you often struggle to find detailed instructions on using certain features effectively? Now, there’s a solution to get you the information you need right in the IDE. Visual Studio now […]\nThe post Find the IDE features you need with GitHub Copilot and Search appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252762",
        "categories": [
          "GitHub Copilot",
          "Visual Studio",
          "GitHub Copilot Chat",
          "Search"
        ],
        "isoDate": "2025-03-19T15:00:29.000Z"
      },
      {
        "creator": "Ruben Rios",
        "title": "Boost your GitHub productivity with our new multi-account support!",
        "link": "https://devblogs.microsoft.com/visualstudio/boost-your-github-productivity-with-our-new-multi-account-support/",
        "pubDate": "Tue, 18 Mar 2025 14:00:56 +0000",
        "content:encodedSnippet": "Managing your GitHub identity in Visual Studio 2022 just got easier! Our latest update overhauls the GitHub account management experience and improves how you work with multiple accounts, especially for GitHub Copilot and version control scenarios. In this post, we’ll detail how these changes will make your GitHub workflow smoother, from the moment you start using Visual Studio to your everyday coding.\nOnboarding Improvements\nThe latest Visual Studio 2022 update streamlines your GitHub experience right from the very start. You can now Sign in with your GitHub account during the first launch experience:\n\nIf you would rather configure your account at a later stage, you can also sign in with GitHub accounts directly from the Visual Studio shell, regardless of whether a Microsoft account is present.\n\nPlease note that roaming settings are not currently available for GitHub accounts. You’ll need to add a Microsoft account if you want to roam your Visual Studio settings across devices.\nMultiple GitHub Accounts\nWe’re happy to announce that you can now add and manage multiple GitHub accounts! Multi-account support was a top request from you, and the latest update enables it for all Visual Studio 2022 users.\nYou can add multiple public GitHub accounts effortlessly from all the same identity controls you normally interact with. For instance, you can open the profile card, click on “Add another account,” sign in to your GitHub account, and repeat as needed!\n\nSeamless Switching Between Accounts\nOnce you successfully add your first GitHub account, Visual Studio will automatically If you have multiple accounts, switching the active accounts is effortless; just open the profile card, access the account options and select the “Set as active account” button.\n\nGitHub Copilot Integration\nThe active GitHub account drives the activation of GitHub Copilot. If your active account is subscribed to GitHub Copilot Free, GitHub Copilot for Individuals or GitHub Copilot for Business, the Copilot feature will activate automatically.\nYou can check the GitHub Copilot badge to quickly assess if your active account has valid entitlements, as its status will indicate whether GitHub Copilot is active.\n\nVersion Control Integration\nManaging multiple accounts also impacts version control-related scenarios. If you are working on GitHub pull requests or issues, Visual Studio prompt you to set a GitHub account and will remember your preference for each repository.\n\nThat means that you won’t need to worry about switching accounts for regular Git operations like push, pull, and fetch. between it and the repository preferences,\nConclusion\nWe’ve been working hard to make your GitHub experience in Visual Studio 2022 even better, and we think you’ll love these updates!  From easier onboarding and managing multiple GitHub accounts to automatic GitHub Copilot activation and smart Git handling, this update has you covered.\nThank you for your continuous feedback, which helps us make Visual Studio better with every release.  Please remember that you can keep sharing your thoughts and suggestions by visiting our developer community portal.\nThe post Boost your GitHub productivity with our new multi-account support! appeared first on Visual Studio Blog.",
        "dc:creator": "Ruben Rios",
        "content": "<p>Managing your GitHub identity in Visual Studio 2022 just got easier! Our latest update overhauls the GitHub account management experience and improves how you work with multiple accounts, especially for GitHub Copilot and version control scenarios. In this post, we&#8217;ll detail how these changes will make your GitHub workflow smoother, from the moment you start [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/boost-your-github-productivity-with-our-new-multi-account-support/\">Boost your GitHub productivity with our new multi-account support!</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Managing your GitHub identity in Visual Studio 2022 just got easier! Our latest update overhauls the GitHub account management experience and improves how you work with multiple accounts, especially for GitHub Copilot and version control scenarios. In this post, we’ll detail how these changes will make your GitHub workflow smoother, from the moment you start […]\nThe post Boost your GitHub productivity with our new multi-account support! appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252688",
        "categories": [
          "Artificial Intelligence",
          "Copilot",
          "Git",
          "GitHub",
          "GitHub Copilot",
          "Productivity",
          "Visual Studio",
          "Sign in"
        ],
        "isoDate": "2025-03-18T14:00:56.000Z"
      },
      {
        "creator": "Sinem Akinci, Allie Barry",
        "title": "Introducing automatic documentation comment generation in Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/introducing-automatic-documentation-comment-generation-in-visual-studio/",
        "pubDate": "Mon, 17 Mar 2025 15:00:10 +0000",
        "content:encodedSnippet": "We are excited to announce that Copilot is now automatically integrated into Visual Studio’s editor to help you generate doc comments for functions. This new feature aims to streamline your documentation process and enhance your coding experience.\nTo access these updates, you will need a GitHub Copilot subscription. If you don’t already have GitHub Copilot, you can sign up for free here.\nAI doc comment generation\nIf you have automatic doc comment generation enabled via your settings, you can simply type what would trigger your doc comment format (such as ///) and Copilot suggestions will automatically fill out the function description based on the contents of the function, including a summary and any parameters and return types (if available). You can then accept these suggestions using a single tab, just like regular Copilot code completions.\n\nHow to enable doc comments\nTo access this feature, you will need to have automatically generating doc comments enabled.\nFor C++ projects, you can configure the generated documentation comment styles using the following setting in Tools > Options. Both XML and Doxygen style comments are supported by this feature.\n\nFor C#, you would need to enable the following setting in your Tools > Options\n\nShare your feedback\nThis feature is available for Visual Studio 17.14 Preview 2 for both C# and C++ project files. We encourage you to explore this feature and see how GitHub Copilot can transform and simplify your coding experience.\nWe deeply appreciate the continuous feedback from our users, which drives us to improve and innovate. Your input is invaluable in making Visual Studio better with each update. Happy coding!\nThe post Introducing automatic documentation comment generation in Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "Sinem Akinci, Allie Barry",
        "content": "<p>We are excited to announce that Copilot is now automatically integrated into Visual Studio’s editor to help you generate doc comments for functions. This new feature aims to streamline your documentation process and enhance your coding experience. To access these updates, you will need a GitHub Copilot subscription. If you don’t already have GitHub Copilot, [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/introducing-automatic-documentation-comment-generation-in-visual-studio/\">Introducing automatic documentation comment generation in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "We are excited to announce that Copilot is now automatically integrated into Visual Studio’s editor to help you generate doc comments for functions. This new feature aims to streamline your documentation process and enhance your coding experience. To access these updates, you will need a GitHub Copilot subscription. If you don’t already have GitHub Copilot, […]\nThe post Introducing automatic documentation comment generation in Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252739",
        "categories": [
          "Copilot",
          "Productivity",
          "Visual Studio",
          "Docs"
        ],
        "isoDate": "2025-03-17T15:00:10.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": [
      {
        "creator": "sunyzero",
        "title": "리눅스 절전 모드 비활성화 - systemd sleep",
        "link": "http://sunyzero.tistory.com/313",
        "pubDate": "Fri, 21 Mar 2025 16:43:46 +0900",
        "author": "sunyzero",
        "comments": "http://sunyzero.tistory.com/313#entry313comment",
        "content": "<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">리눅스 워크스테이션이나 데스크탑 버전을 설치하면 기본적으로 절전 기능이 활성화 되어있다. 예를 들어 Fedora workstation을 설치했다면 기본으로 절전 기능이 활성화되어있을 것이다. 만일 ssh로 외부에서 접속해서 작업하다가는 아래와 같은 메시지와 함께 절전으로 전환(suspend) 될 수도 있다. 이렇게 절전 모드로 빠지면 외부 접속은 모두 끊긴다.</span></p>\n<pre id=\"code_1742542215668\" class=\"shell\" data-ke-language=\"shell\" data-ke-type=\"codeblock\"><code>$ Broadcast message from gdm@fedora on tty1:\n\nThe system will suspend now!</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">이런 문제를 겪지 않으려면 다음과 같이 설정하도록 한다. (관련 매뉴얼 페이지 : systemd-sleep.conf) </span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">1. systemd/sleep.conf 설정 확인</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">먼저 현재 설정을 systemd-analyze cat-config systemd/sleep.conf 명령으로 확인해본다.</span></p>\n<pre id=\"code_1742542296903\" class=\"shell\" data-ke-language=\"shell\" data-ke-type=\"codeblock\"><code>$ sudo systemd-analyze cat-config systemd/sleep.conf\n# /etc/systemd/sleep.conf\n#  This file is part of systemd.\n#\n#  systemd is free software; you can redistribute it and/or modify it under the\n#  terms of the GNU Lesser General Public License as published by the Free\n#  Software Foundation; either version 2.1 of the License, or (at your option)\n#  any later version.\n#\n# Entries in this file show the compile time defaults. Local configuration\n# should be created by either modifying this file, or by creating \"drop-ins\" in\n# the sleep.conf.d/ subdirectory. The latter is generally recommended.\n# Defaults can be restored by simply deleting this file and all drop-ins.\n#\n# See systemd-sleep.conf(5) for details.\n\n[Sleep]\n#AllowSuspend=yes\n#AllowHibernation=yes\n#AllowSuspendThenHibernate=yes\n#AllowHybridSleep=yes\n#SuspendMode=\n#SuspendState=mem standby freeze\n#HibernateMode=platform shutdown\n#HibernateState=disk\n#HybridSleepMode=suspend platform shutdown\n#HybridSleepState=disk\n#HibernateDelaySec=\n#SuspendEstimationSec=60min</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">위에 보면 모든 값들이 해시문자(#)로 막혀있는데, 이는 기본값을 의미한다. 그 중에 AllowSuspend=yes로 되어있는 부분이 바로 자동 절전 모드이다. 이를 no로 바꾸면 되는데, 편집을 직접하는게 아니라 overriding config를 만드는 방법을 사용하게 된다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">2. AllowSuspend=no 설정 방법</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">해당 설정은 관리자인 <span style=\"background-color: #ffc9af;\">root 계정</span>으로 명령해야 한다. 먼저 overriding config file을 저장할 디렉토리로 /etc/systemd/sleep.conf.d를 만들어야 한다. 그리고 해당 디렉토리에 넣을 설정 파일을 vi 같은 에디터로 만들어주면 된다. 즉 아래와 같이 명령한다.</span></p>\n<pre id=\"code_1742542636320\" class=\"shell\" data-ke-language=\"shell\" data-ke-type=\"codeblock\"><code>mkdir /etc/systemd/sleep.conf.d\ncd $!\nvi nosuspend.conf</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">vi nosuspend.conf 명령어를 실행한 다음에는 아래의 내용을 넣는다. 핵심 설정 부분은 <span style=\"background-color: #9feec3;\">AllowSuspend=no</span> 라는 부분이다.</span></p>\n<pre id=\"code_1742542672781\" class=\"shell\" data-ke-language=\"shell\" data-ke-type=\"codeblock\"><code>[Sleep]\nAllowSuspend=no\nAllowHibernation=no\nAllowSuspendThenHibernate=no\nAllowHybridSleep=no</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">설정이 제대로 되었는지 확인하기 위해 <span style=\"background-color: #f6e199;\">systemd-analyze cat-config systemd/sleep.conf</span> 명령을 다시 내려본다. 만일 가장 하단에 <span style=\"color: #ee2323;\">/etc/systemd/sleep.conf.d/nosuspend.conf</span>로부터 파일을 읽혀졌다면 제대로 설정된 것이다.</span></p>\n<pre id=\"code_1742542737320\" class=\"shell\" data-ke-language=\"shell\" data-ke-type=\"codeblock\"><code>root user# systemd-analyze cat-config systemd/sleep.conf\n...생략...\n\n[Sleep]\n#AllowSuspend=yes\n#AllowHibernation=yes\n#AllowSuspendThenHibernate=yes\n#AllowHybridSleep=yes\n#SuspendMode=\n#SuspendState=mem standby freeze\n#HibernateMode=platform shutdown\n#HibernateState=disk\n#HybridSleepMode=suspend platform shutdown\n#HybridSleepState=disk\n#HibernateDelaySec=\n#SuspendEstimationSec=60min\n\n# /etc/systemd/sleep.conf.d/nosuspend.conf\n[Sleep]\nAllowSuspend=no\n...</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">해당 설정은 즉시 적용되므로 따로 restart나 reload해줘야 하는 것은 없다. 다만 정 불안하다면 systemctl daemon-reload 명령을 한번 해주면 될 것이다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">히스토리</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">2025-03-21 글 작성</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "리눅스 워크스테이션이나 데스크탑 버전을 설치하면 기본적으로 절전 기능이 활성화 되어있다. 예를 들어 Fedora workstation을 설치했다면 기본으로 절전 기능이 활성화되어있을 것이다. 만일 ssh로 외부에서 접속해서 작업하다가는 아래와 같은 메시지와 함께 절전으로 전환(suspend) 될 수도 있다. 이렇게 절전 모드로 빠지면 외부 접속은 모두 끊긴다.\n$ Broadcast message from gdm@fedora on tty1:\n\nThe system will suspend now!\n이런 문제를 겪지 않으려면 다음과 같이 설정하도록 한다. (관련 매뉴얼 페이지 : systemd-sleep.conf) \n \n1. systemd/sleep.conf 설정 확인\n먼저 현재 설정을 systemd-analyze cat-config systemd/sleep.conf 명령으로 확인해본다.\n$ sudo systemd-analyze cat-config systemd/sleep.conf\n# /etc/systemd/sleep.conf\n#  This file is part of systemd.\n#\n#  systemd is free software; you can redistribute it and/or modify it under the\n#  terms of the GNU Lesser General Public License as published by the Free\n#  Software Foundation; either version 2.1 of the License, or (at your option)\n#  any later version.\n#\n# Entries in this file show the compile time defaults. Local configuration\n# should be created by either modifying this file, or by creating \"drop-ins\" in\n# the sleep.conf.d/ subdirectory. The latter is generally recommended.\n# Defaults can be restored by simply deleting this file and all drop-ins.\n#\n# See systemd-sleep.conf(5) for details.\n\n[Sleep]\n#AllowSuspend=yes\n#AllowHibernation=yes\n#AllowSuspendThenHibernate=yes\n#AllowHybridSleep=yes\n#SuspendMode=\n#SuspendState=mem standby freeze\n#HibernateMode=platform shutdown\n#HibernateState=disk\n#HybridSleepMode=suspend platform shutdown\n#HybridSleepState=disk\n#HibernateDelaySec=\n#SuspendEstimationSec=60min\n위에 보면 모든 값들이 해시문자(#)로 막혀있는데, 이는 기본값을 의미한다. 그 중에 AllowSuspend=yes로 되어있는 부분이 바로 자동 절전 모드이다. 이를 no로 바꾸면 되는데, 편집을 직접하는게 아니라 overriding config를 만드는 방법을 사용하게 된다.\n \n2. AllowSuspend=no 설정 방법\n해당 설정은 관리자인 root 계정으로 명령해야 한다. 먼저 overriding config file을 저장할 디렉토리로 /etc/systemd/sleep.conf.d를 만들어야 한다. 그리고 해당 디렉토리에 넣을 설정 파일을 vi 같은 에디터로 만들어주면 된다. 즉 아래와 같이 명령한다.\nmkdir /etc/systemd/sleep.conf.d\ncd $!\nvi nosuspend.conf\nvi nosuspend.conf 명령어를 실행한 다음에는 아래의 내용을 넣는다. 핵심 설정 부분은 AllowSuspend=no 라는 부분이다.\n[Sleep]\nAllowSuspend=no\nAllowHibernation=no\nAllowSuspendThenHibernate=no\nAllowHybridSleep=no\n설정이 제대로 되었는지 확인하기 위해 systemd-analyze cat-config systemd/sleep.conf 명령을 다시 내려본다. 만일 가장 하단에 /etc/systemd/sleep.conf.d/nosuspend.conf로부터 파일을 읽혀졌다면 제대로 설정된 것이다.\nroot user# systemd-analyze cat-config systemd/sleep.conf\n...생략...\n\n[Sleep]\n#AllowSuspend=yes\n#AllowHibernation=yes\n#AllowSuspendThenHibernate=yes\n#AllowHybridSleep=yes\n#SuspendMode=\n#SuspendState=mem standby freeze\n#HibernateMode=platform shutdown\n#HibernateState=disk\n#HybridSleepMode=suspend platform shutdown\n#HybridSleepState=disk\n#HibernateDelaySec=\n#SuspendEstimationSec=60min\n\n# /etc/systemd/sleep.conf.d/nosuspend.conf\n[Sleep]\nAllowSuspend=no\n...\n해당 설정은 즉시 적용되므로 따로 restart나 reload해줘야 하는 것은 없다. 다만 정 불안하다면 systemctl daemon-reload 명령을 한번 해주면 될 것이다.\n \n히스토리\n2025-03-21 글 작성",
        "guid": "http://sunyzero.tistory.com/313",
        "categories": [
          "컴퓨터 관련/리눅스(유닉스) 일반",
          "Fedora",
          "linux suspend",
          "systemctl",
          "systemd sleep",
          "리눅스 절전 모드 해제",
          "리눅스 하이버네이션"
        ],
        "isoDate": "2025-03-21T07:43:46.000Z"
      }
    ]
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": [
      {
        "creator": "boyism",
        "title": "데드락 기록 - 2025.03.05",
        "link": "https://blog.naver.com/boyism/223805433497?fromRss=true&trackingCode=rss",
        "pubDate": "Sat, 22 Mar 2025 00:19:11 +0900",
        "author": "boyism",
        "content": "https://github.com/boyism80/fb/commit/36d155582b85733f95c559f11b5824b025052a96",
        "contentSnippet": "https://github.com/boyism80/fb/commit/36d155582b85733f95c559f11b5824b025052a96",
        "guid": "https://blog.naver.com/boyism/223805433497",
        "categories": [
          "동기화"
        ],
        "isoDate": "2025-03-21T15:19:11.000Z"
      }
    ]
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": [
      {
        "creator": "강철 벼룩",
        "title": "Azure 파일 공유에서 리눅스용 연결 스크립트 문제 해결",
        "link": "http://www.dokyun.pe.kr/360",
        "pubDate": "Tue, 18 Mar 2025 21:21:40 +0900",
        "author": "강철 벼룩",
        "comments": "http://www.dokyun.pe.kr/360#entry360comment",
        "content": "<h3 data-ke-size=\"size23\">Troubleshooting connection scripts for Linux in Azure Files</h3>\n<p data-ke-size=\"size18\">최근 (2025년 3월 기준) 스토리지 계정의 파일 공유의 리눅스 연결 스크립트에 문제가 있음을 확인했다 (아래 그림 참조).</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"1397\" data-origin-height=\"1210\"><span data-url=\"https://blog.kakaocdn.net/dn/ObxxW/btsMPKu4JXx/xShMlTBHTayyo527kW8myK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ObxxW/btsMPKu4JXx/xShMlTBHTayyo527kW8myK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ObxxW/btsMPKu4JXx/xShMlTBHTayyo527kW8myK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FObxxW%2FbtsMPKu4JXx%2FxShMlTBHTayyo527kW8myK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1397\" height=\"1210\" data-filename=\"1.png\" data-origin-width=\"1397\" data-origin-height=\"1210\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\"><span style=\"font-family: 'Noto Serif KR';\"><b><span style=\"color: #ee2323;\">[문제 및 원인]</span></b></span></p>\n<p data-ke-size=\"size18\">빨간색 상자의 내용과 녹색 상자의 내용 불일치로 파일 공유 마운트 실패.</p>\n<p data-ke-size=\"size18\">마운트용으로 생성한 디렉터리와 mount 명령을 수행할 마운트 포인트의 경로가 다르다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\"><span style=\"font-family: 'Noto Serif KR';\"><b><span style=\"color: #006dd7;\">[솔루션]</span></b></span></p>\n<p data-ke-size=\"size18\">빨간색 상자의 \"media\"를 \"mnt\"로 바꾸거나, 녹색 상자의 \"mnt\"를 \"media\"로 바꿔야 한다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "Troubleshooting connection scripts for Linux in Azure Files\n최근 (2025년 3월 기준) 스토리지 계정의 파일 공유의 리눅스 연결 스크립트에 문제가 있음을 확인했다 (아래 그림 참조).\n\n\n[문제 및 원인]\n빨간색 상자의 내용과 녹색 상자의 내용 불일치로 파일 공유 마운트 실패.\n마운트용으로 생성한 디렉터리와 mount 명령을 수행할 마운트 포인트의 경로가 다르다. \n \n[솔루션]\n빨간색 상자의 \"media\"를 \"mnt\"로 바꾸거나, 녹색 상자의 \"mnt\"를 \"media\"로 바꿔야 한다.",
        "guid": "http://www.dokyun.pe.kr/360",
        "categories": [
          "Azure &amp; Windows/Azure",
          "azure files",
          "azure storage",
          "스토리지계정",
          "파일공유"
        ],
        "isoDate": "2025-03-18T12:21:40.000Z"
      }
    ]
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "ingest pipeline - 6th",
        "link": "https://kangmyounghun.blogspot.com/2025/03/ingest-pipeline-6th.html",
        "pubDate": "2025-03-17T08:49:00.000Z",
        "author": "강명훈",
        "content": "<div><a href=\"https://www.elastic.co/guide/en/logstash/current/event-dependent-configuration.html#conditionals\" target=\"_blank\">로그스태시는 조건문</a>으로 필터의 유기적인 실행 관계를 설정할 수 있다. <a href=\"https://www.elastic.co/guide/en/beats/filebeat/current/defining-processors.html#conditions\" target=\"_blank\">beat processor</a>도 마찬가지. 다음은 데이터 조건에 따라 달라지는 로그스태시 필터.</div>\n<div><pre><code><span style=\"font-family: courier;\"><div>filter {</div><div><span style=\"white-space: normal;\">&nbsp;mutate {</span></div><div><span style=\"white-space: normal;\">&nbsp; remove_field =&gt; [\"@timestamp\", \"@version\", \"path\", \"host\"]</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;dissect {</span></div><div><span style=\"white-space: normal;\">&nbsp; mapping =&gt; {\"message\" =&gt; '%{} \"%{} %{uri} %{}\" %{}'}</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><span style=\"white-space: normal;\">&nbsp;</span></div><div><span style=\"white-space: normal;\"><span><a name='more'></a></span>if [uri] =~ '\\?' {</span></div><div><span style=\"white-space: normal;\">&nbsp; grok {</span></div><div><span style=\"white-space: normal;\">&nbsp; &nbsp;match =&gt; {'uri' =&gt; '(?&lt;url&gt;[^?]+)\\?(?&lt;param&gt;.*)'}</span></div><div><span style=\"white-space: normal;\">&nbsp; }</span></div><div><span style=\"white-space: normal;\">&nbsp;} else {</span></div><div><span style=\"white-space: normal;\">&nbsp; mutate {</span></div><div><span style=\"white-space: normal;\">&nbsp; &nbsp;copy =&gt; {'uri' =&gt; 'url'}</span></div><div><span style=\"white-space: normal;\">&nbsp; }</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div>}</div></span></code></pre></div>\n<div><pre><code><span style=\"font-family: courier;\"><div>{</div><div>&nbsp; &nbsp; \"message\" =&gt; \"1.2.3.4 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.html HTTP/1.1\\\" 200 37727\\r\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"uri\" =&gt; \"/bbs/view.html\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"url\" =&gt; \"/bbs/view.html\"</div><div>}</div><div>{</div><div>&nbsp; &nbsp; \"message\" =&gt; \"192.168.56.1 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.php?board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4 HTTP/1.1\\\" 200 37727\\r\",</div><div>&nbsp; &nbsp; &nbsp; \"param\" =&gt; \"board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"uri\" =&gt; \"/bbs/view.php?board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"url\" =&gt; \"/bbs/view.php\"</div><div>}</div></span></code></pre></div>\n<div><br /></div>\n<div>역시 데이터 조건에 따라 달라지는 beat processor.</div>\n<div><pre><code><span style=\"font-family: courier;\"><div>processors:</div><div>&nbsp; - include_fields:</div><div>&nbsp; &nbsp; &nbsp; fields: \"message\"</div><div>&nbsp; - dissect:</div><div>&nbsp; &nbsp; &nbsp; tokenizer: '%{} \"%{} %{uri} %{}\" %{}'</div><div>&nbsp; &nbsp; &nbsp; target_prefix: \"\"</div><div>&nbsp; - if:</div><div>&nbsp; &nbsp; &nbsp; contains.uri: \"?\"</div><div>&nbsp; &nbsp; then:</div><div>&nbsp; &nbsp; &nbsp; - dissect:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; field: \"uri\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tokenizer: \"%{url}?%{param}\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target_prefix: \"\"</div><div>&nbsp; &nbsp; else:</div><div>&nbsp; &nbsp; &nbsp; copy_fields:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; fields:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; - from: uri</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; to: url</div></span></code></pre></div>\n<div><pre><code><span style=\"font-family: courier;\"><div>{</div><div>&nbsp; \"@timestamp\": \"2025-03-17T08:13:47.537Z\",</div><div>&nbsp; \"@metadata\": {</div><div>&nbsp; &nbsp; \"beat\": \"filebeat\",</div><div>&nbsp; &nbsp; \"type\": \"_doc\",</div><div>&nbsp; &nbsp; \"version\": \"8.17.0\"</div><div>&nbsp; },</div><div>&nbsp; \"message\": \"1.2.3.4 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.html HTTP/1.1\\\" 200 37727\",</div><div>&nbsp; \"uri\": \"/bbs/view.html\",</div><div>&nbsp; \"url\": \"/bbs/view.html\"</div><div>}</div><div>{</div><div>&nbsp; \"@timestamp\": \"2025-03-17T08:13:47.537Z\",</div><div>&nbsp; \"@metadata\": {</div><div>&nbsp; &nbsp; \"beat\": \"filebeat\",</div><div>&nbsp; &nbsp; \"type\": \"_doc\",</div><div>&nbsp; &nbsp; \"version\": \"8.17.0\"</div><div>&nbsp; },</div><div>&nbsp; \"message\": \"192.168.56.1 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.php?board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4 HTTP/1.1\\\" 200 37727\",</div><div>&nbsp; \"uri\": \"/bbs/view.php?board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4\",</div><div>&nbsp; \"param\": \"board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4\",</div><div>&nbsp; \"url\": \"/bbs/view.php\"</div><div>}</div></span></code></pre></div>\n<div><br /></div><div>그런데 ingest pipeline은 <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html#conditionally-run-processor\" target=\"_blank\">processor에 종속된 조건문</a>만을 지원한다. 다음은 <span style=\"font-family: courier;\">?</span>가 없는 데이터를 처리하지 못하는 ingest pipeline.&nbsp;</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [<span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div>\n<div><pre><code><span style=\"font-family: courier;\"><div>{</div><div>&nbsp; \"docs\": [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; \"doc\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_index\": \"_index\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_version\": \"-3\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_id\": \"_id\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_source\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"uri\": \"index.php?a=b\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"param\": \"a=b\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"url\": \"index.php\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_ingest\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"timestamp\": \"2025-03-17T08:23:55.1105587Z\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; \"error\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"root_cause\": [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"type\": \"illegal_argument_exception\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"reason\": \"Provided Grok expressions do not match field value: [index.html]\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; ],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"type\": \"illegal_argument_exception\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"reason\": \"Provided Grok expressions do not match field value: [index.html]\"</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></span></code></pre></div>\n<div><br /></div><div><span style=\"font-family: courier;\">?</span> 조건을 주면 <span style=\"font-family: courier;\">?</span>가 있는 데이터만을 처리한다.</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [<span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"if\"</span>: <span style=\"color: #bd271e;\">\"ctx.uri.contains('?')\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:27:14.3998071Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:27:14.3998071Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div>이때 해법은 정규표현식을 추가하거나,</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>, </div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #bd271e;\">\"(?&lt;url&gt;.*)\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:35:46.6631911Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:35:46.6631911Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html#handling-pipeline-failures\" target=\"_blank\">on_failure</a> 옵션으로 예외처리를 하거나,</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [<span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"on_failure\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"set\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"url\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"copy_from\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:38:37.0469351Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:38:37.0469351Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/script-processor.html\" target=\"_blank\">script processor</a>를 사용하거나.</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"script\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"source\"</span>: \"\"\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">if</span> <span style=\"color: #69707d;\">(</span>ctx<span style=\"color: #69707d;\">.</span>uri<span style=\"color: #69707d;\">.</span>contains<span style=\"color: #69707d;\">(</span><span style=\"color: #bd271e;\">'?'</span><span style=\"color: #69707d;\">))</span> <span style=\"color: #69707d;\">{</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #007e77;\">def</span> str = /<span style=\"color: #69707d;\">([</span>^?<span style=\"color: #69707d;\">]</span>+<span style=\"color: #69707d;\">)</span><span style=\"color: #c4407c;\">\\</span>?<span style=\"color: #69707d;\">(.</span>*<span style=\"color: #69707d;\">)</span>/<span style=\"color: #69707d;\">.</span>matcher<span style=\"color: #69707d;\">(</span>ctx<span style=\"color: #69707d;\">.</span>uri<span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">if</span> <span style=\"color: #69707d;\">(</span>str<span style=\"color: #69707d;\">.</span>find<span style=\"color: #69707d;\">())</span> <span style=\"color: #69707d;\">{</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ctx<span style=\"color: #69707d;\">.</span>url = str<span style=\"color: #69707d;\">.</span><span style=\"color: #0071c2;\">group</span><span style=\"color: #69707d;\">(</span><span style=\"color: #c4407c;\">1</span><span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ctx<span style=\"color: #69707d;\">.</span>param = str<span style=\"color: #69707d;\">.</span><span style=\"color: #0071c2;\">group</span><span style=\"color: #69707d;\">(</span><span style=\"color: #c4407c;\">2</span><span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #69707d;\">}</span> &nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #69707d;\">}</span> <span style=\"color: #0071c2;\">else</span> <span style=\"color: #69707d;\">{</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ctx<span style=\"color: #69707d;\">.</span>url = ctx<span style=\"color: #69707d;\">.</span>uri</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #69707d;\">}</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"\"\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:41:08.5446373Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:41:08.5446373Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><b>관련 글</b><br /><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/03/ingest-pipeline-5th.html\">ingest pipeline - 5th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/04/ingest-pipeline.html\" target=\"\">ingest pipeline</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2022/04/logstash-fingerprint-2nd.html\">엘라스틱의 해시 변환</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/09/convert-ip-to-decimal.html\">convert ip to decimal</a></li></ul></div>",
        "contentSnippet": "로그스태시는 조건문으로 필터의 유기적인 실행 관계를 설정할 수 있다. beat processor도 마찬가지. 다음은 데이터 조건에 따라 달라지는 로그스태시 필터.\n\nfilter {\n mutate {\n  remove_field => [\"@timestamp\", \"@version\", \"path\", \"host\"]\n }\n\n\n dissect {\n  mapping => {\"message\" => '%{} \"%{} %{uri} %{}\" %{}'}\n }\n \nif [uri] =~ '\\?' {\n  grok {\n   match => {'uri' => '(?<url>[^?]+)\\?(?<param>.*)'}\n  }\n } else {\n  mutate {\n   copy => {'uri' => 'url'}\n  }\n }\n}\n\n\n\n\n{\n    \"message\" => \"1.2.3.4 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.html HTTP/1.1\\\" 200 37727\\r\",\n        \"uri\" => \"/bbs/view.html\",\n        \"url\" => \"/bbs/view.html\"\n}\n{\n    \"message\" => \"192.168.56.1 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.php?board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4 HTTP/1.1\\\" 200 37727\\r\",\n      \"param\" => \"board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4\",\n        \"uri\" => \"/bbs/view.php?board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4\",\n        \"url\" => \"/bbs/view.php\"\n}\n\n\n\n\n역시 데이터 조건에 따라 달라지는 beat processor.\n\nprocessors:\n  - include_fields:\n      fields: \"message\"\n  - dissect:\n      tokenizer: '%{} \"%{} %{uri} %{}\" %{}'\n      target_prefix: \"\"\n  - if:\n      contains.uri: \"?\"\n    then:\n      - dissect:\n          field: \"uri\"\n          tokenizer: \"%{url}?%{param}\"\n          target_prefix: \"\"\n    else:\n      copy_fields:\n        fields:\n          - from: uri\n            to: url\n\n\n\n\n{\n  \"@timestamp\": \"2025-03-17T08:13:47.537Z\",\n  \"@metadata\": {\n    \"beat\": \"filebeat\",\n    \"type\": \"_doc\",\n    \"version\": \"8.17.0\"\n  },\n  \"message\": \"1.2.3.4 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.html HTTP/1.1\\\" 200 37727\",\n  \"uri\": \"/bbs/view.html\",\n  \"url\": \"/bbs/view.html\"\n}\n{\n  \"@timestamp\": \"2025-03-17T08:13:47.537Z\",\n  \"@metadata\": {\n    \"beat\": \"filebeat\",\n    \"type\": \"_doc\",\n    \"version\": \"8.17.0\"\n  },\n  \"message\": \"192.168.56.1 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.php?board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4 HTTP/1.1\\\" 200 37727\",\n  \"uri\": \"/bbs/view.php?board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4\",\n  \"param\": \"board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4\",\n  \"url\": \"/bbs/view.php\"\n}\n\n\n\n\n그런데 ingest pipeline은 processor에 종속된 조건문만을 지원한다. 다음은 ?가 없는 데이터를 처리하지 못하는 ingest pipeline. \n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"uri\",\n          \"patterns\": [\"(?<url>[^?]+)\\\\?(?<param>.*)\"]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:23:55.1105587Z\"\n        }\n      }\n    },\n    {\n      \"error\": {\n        \"root_cause\": [\n          {\n            \"type\": \"illegal_argument_exception\",\n            \"reason\": \"Provided Grok expressions do not match field value: [index.html]\"\n          }\n        ],\n        \"type\": \"illegal_argument_exception\",\n        \"reason\": \"Provided Grok expressions do not match field value: [index.html]\"\n      }\n    }\n  ]\n}\n\n\n\n\n? 조건을 주면 ?가 있는 데이터만을 처리한다.\n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"uri\",\n          \"patterns\": [\"(?<url>[^?]+)\\\\?(?<param>.*)\"],\n          \"if\": \"ctx.uri.contains('?')\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:27:14.3998071Z\"\n        }\n      }\n    },\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.html\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:27:14.3998071Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n\n이때 해법은 정규표현식을 추가하거나,\n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"uri\",\n          \"patterns\": [\n            \"(?<url>[^?]+)\\\\?(?<param>.*)\", \n            \"(?<url>.*)\"\n          ]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:35:46.6631911Z\"\n        }\n      }\n    },\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.html\",\n          \"url\": \"index.html\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:35:46.6631911Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n\non_failure 옵션으로 예외처리를 하거나,\n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"uri\",\n          \"patterns\": [\"(?<url>[^?]+)\\\\?(?<param>.*)\"],\n          \"on_failure\": [\n            {\n              \"set\": {\n                \"field\": \"url\",\n                \"copy_from\": \"uri\"\n              }\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:38:37.0469351Z\"\n        }\n      }\n    },\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.html\",\n          \"url\": \"index.html\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:38:37.0469351Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n\nscript processor를 사용하거나.\n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"script\": {\n          \"source\": \"\"\"\n            if (ctx.uri.contains('?')) {\n              def str = /([^?]+)\\?(.*)/.matcher(ctx.uri);\n              if (str.find()) {\n                ctx.url = str.group(1);\n                ctx.param = str.group(2);\n              }  \n            } else {\n              ctx.url = ctx.uri\n            }\n          \"\"\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:41:08.5446373Z\"\n        }\n      }\n    },\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.html\",\n          \"url\": \"index.html\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:41:08.5446373Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n\n관련 글\n\ningest pipeline - 5th\ningest pipeline\n엘라스틱의 해시 변환\nconvert ip to decimal",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-6511765529749776728",
        "isoDate": "2025-03-17T08:49:00.000Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "기술주 투자 절대 원칙 | 마크 마하니",
        "link": "https://sungjk.github.io/2025/03/23/nothing-but-net.html",
        "pubDate": "2025-03-23T00:00:00+00:00",
        "content": "\n            \n            &lt;p&gt;재밌다.. 기술주 투자를 잘하기 위해 읽기 시작한거 아니고 제품을 만드는 사람으로서 제품과 회사의 성장이 시장에는 어떻게 반영되는지 궁금해서 읽었는데 많은 것들을 배울 수 있었다. 기술주를 어떻게 투자하면 좋은지에 대해서 이야기하는 책인데, 창업가가 기업을 성공시키고 더 스케일업 하기 위해 어떤 것들을 신경써야 하는지도 알려준다. 결국엔 기업의 Fundamental 너무 중요하다. 매출, 매출, 매출, 그리고 성장성, 경쟁력, 경영진의 역량, 그리고 얼마나 고객 지향적인지.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/03/23/nothing-but-net.png&quot; alt=&quot;Nothing But Net&quot; title=&quot;Nothing But Net&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;1-종목-선택의-함정을-피하라&quot;&gt;1. 종목 선택의 함정을 피하라&lt;/h3&gt;\n\n&lt;p&gt;주식 시장에 투자하면 이따금 손실을 입을 것이다. 좋은 주식을 고르려면 매출과 이익을 정확히 예측하는 훌륭한 펀더멘털리스트가 되어야 하는 동시에 기업의 매출과 이익에 시장이 얼마나 멀티플을 줄 지 정확히 예측할 수 있는 훌륭한 심리학자가 되어야 한다. 훌륭한 펀더멘털리스트이자 훌륭한 심리학자가 되는 것은 대부분 아주아주 어려운 일이다. 그리고 언제나 잘 짜인 종목 선정 계획을 흔드는 예측 불가능한 시장 충격이 있다. 투자에는 배짱이 필요하다.&lt;/p&gt;\n\n&lt;p&gt;또 아주 높은 확률로 잘못된 판단을 내려 돈을 잃기도 할 것이다. 줄릴리에 대해 잘못 판단했을 때 나는 거의 15년 동안 전문적으로 주식을 분석해왔고 경영진도 잘 알고 있었다. 그러나 고객 가치 제안이 어떻게 총 도달 가능 시장과 성장 전망을 제한하는지 충분히 알지 못했다. 블루 에이프런에 대해 잘못 판단했을 떄는 거의 20년째 경력을 이어가고 있었다. 나는 경영진의 능력을 과대평가했거나 이 회사의 유례없는 성장과 매우 혁신적인 비즈니스 모델이 시장의 관심과 투자 자금을 엄청나게 끌어들였다. 투자자는 모든 주식에 대해 올바른 판단을 할 수 없으며 ‘확실한’ 주식일지라도 70퍼센트, 80퍼센트, 심지어 90퍼센트 까지도 하락할 수 있다는 사실을 기억하라.&lt;/p&gt;\n\n&lt;h3 id=&quot;2-펀더멜털과-추세는-완전히-별개다&quot;&gt;2. 펀더멜털과 추세는 완전히 별개다&lt;/h3&gt;\n\n&lt;p&gt;특정 업종에서 가장 좋은 종목일지라도 기업 고유의 대규모 매도세는 피해갈 수 없다. 2015년부터 2020년까지 최고의 수익률을 거둔 페이스북, 구글, 넷플릭스 등 3개 주식은 모두 해당 기간 대규모 조정(20퍼센트에서 40퍼센트까지)을 경험했다. 넷플릭스는 12개월 동안 두 번의 대규모 조정을 받았다. 펀더멘털이 다른 기술주(S&amp;amp;P 500에 속한 종목 중 95퍼센트 이상)보다 월등히 좋았음에도 이들 종목은 큰 하락을 겪었고, 이후 회복되어 시장 수익률을 크게 앞질렀다.&lt;/p&gt;\n\n&lt;p&gt;업계에서 가장 좋은 종목일지라도 광범위한 시장의 대규모 매도세를 피해 갈 수는 없다. 2018년 말, 무역 전쟁에 대한 우려와 글로벌 GDP 성장률 둔화, 금리 인상과 관련한 광범위한 시장 조정의 여파로 아마존은 기업의 실적 추정이나 성장 전망에 변화가 없음에도 시가총액의 3분의 1을 잃었다. 투자자는 업계 최고의 기업과 종목을 골랐더라도 상당한 하락을 견뎌낼 준비가 되어 있어야 한다. 때로는 완전히 고유 회사의 통제 밖에 있는 이유 때문에 손실을 입게 될 것이다.&lt;/p&gt;\n\n&lt;h3 id=&quot;3-때때로-주가는-펀더멘털과-전혀-상관없이-움직인다&quot;&gt;3. 때때로 주가는 펀더멘털과 전혀 상관없이 움직인다&lt;/h3&gt;\n\n&lt;p&gt;실적 발표를 이용해 단기 투자에 몰두하지 마라. 실적 발표를 이용한 단기 투자에 성공하려면 펀더멘탈을 정확히 읽고 가까운 미래의 수치에 대해 올바른 평가를 내릴 수 있어야 한다. 그런데 이는 개인 투자자는 물론 전문 투자자도 대부분 해내기 어려운 일이다. 분기 실적 발표를 중심으로 한 단기 거래 시에는 잘못된 판단을 내리기 쉬우며, 이런 단기 거래를 하다가 장기적인 펀더멘털과 주가 동향을 놓치기도 한다. 2015년에서 2018년까지 아마존은 386퍼센트 상승했지만 총 16번의 실적 발표 중 4번만 하루 상승 폭이 10퍼센트 이상이었고, 4번은 하루 하락 폭이 5퍼센트 이상이었다. 펀더멘털이 좋은 기업에 장기로 투자하고 단기 주가 변동은 무시한다면 높은 수익률을 거둘 수 있다.&lt;/p&gt;\n\n&lt;p&gt;실적 발표를 이용한 단기 투자는 기대감에 따라 크게 좌우된다. (매출 성장률이 가속화되고 영업이익률이 확대되어) 펀더멘털이 분명히 개선되고 있어도 실제 실적이 ‘비공식적인’ 시장의 기대를 충족시키지 못한다면 주식은 하락할 수 있다. 이것이 스냅의 2019년 1분기 실적 발표와 추이의 2020년 1분기 실적 발표 때 일어났던 일이다. 기업공개 의무보호예수 해제처럼 펀더멘털 동향과 결부되지 않고 단기적인 주가 변동을 유발하는 이례적인 이벤트도 있을 수 있다. 2019년 11월 우버가 그런 사례였다. 과민 반응이나 단기적인 주가 변동 등의 이벤트 때문에 장기 투자를 단념하지 마라. 대신 실적 발표를 이용한 단기 투자에 대한 환상을 버려라..&lt;/p&gt;\n\n&lt;h3 id=&quot;4-20퍼센트의-법칙과-2퍼센트의-법칙을-기억하라&quot;&gt;4. ‘20퍼센트의 법칙’과 ‘2퍼센트의 법칙’을 기억하라&lt;/h3&gt;\n\n&lt;p&gt;장기적으로 펀더멘털은 주식을 움직이며 기술주의 경우 가장 중요한 펀더멘털은 매출, 매출, 매출이다. 매출이나 주요 고객 지표 측면에서 지속적으로 20퍼센트 이상의 성장률을 창출해내는 기업은 단기 수익성 전망에 관계없이 잠재적으로 양호한 주식 수익률을 제공할 수 있다. 이것이 내가 높은 성장률이라고 말하는 20퍼센트 매출 성장률의 ‘법칙’이다. 20퍼센트 이상의 일관된 매출 성장률은 S&amp;amp;P 500 기업의 매출 성장률보다 3~4배 높은 성과이며 지속하기 어렵다. 20퍼센트 이상의 일관된 매출 성장률은 종종 커다란 시장 기회, 끈질기고 성공적인 제품 혁신, 강력한 가치 제안, 최고의 경영진이 반영된 결과다. 그리고 이것이 장기적으로 좋은 투자 기회에서 투자자들이 찾아야 하는 요소다. 우선 다섯 분기 또는 여섯 분기 연속으로 20퍼센트 이상 성장률을 달성한 기업을 찾아라. 때때로 과거의 성과는 미래 성과를 보여주는 지표가 될 수 있다.&lt;/p&gt;\n\n&lt;p&gt;가령 세 분기나 네 분기에 걸쳐 매출 성장률이 절반으로 감소하는 경우처럼 어떤 기업의 매출 성장률이 급격히 둔화된다면, 이 기업의 주가는 제대로 상승하지 못할 가능성이 높다. 특히  시장점유율 하락, 시장 포화, 경영진의 잘못된 경영이 성장률 둔화의 원인이라면 더욱 그렇다. 다만 코로나19 위기처럼 중대한 블랙 스완이 성장률 둔화의 원인이라면 문제가 다르다. 반대로 성장 곡선 증대 계획을 성공적으로 시행해 매출 성장률을 가속화한 기업은, 그렇지 않은 기업보다 높은 수익률을 창출할 수 있다. 성장 곡선 증대 계획은 특히 주가 상승에 큰 촉매제가 되므로 투자자는 이를 잘 활용해야 한다. 신제품 출시, 지리적 시장 확대, 가격 인상 등 성장 곡선 증대 계획이 효과를 발휘하면 매출 성장률이 가속화된다. 또 종종 마진 확대로 이어져 이익 성장 틈이 열리며 멀티플에 대한 재평가가 이루어진다. 그러므로 성장 곡선 증대 계획을 찾아라.&lt;/p&gt;\n\n&lt;p&gt;성송적인 기술주 투자가 이익을 신경 쓰지 않는다는 뜻은 아니다. 수익성 없는 성장은 장기적으로 아무런 가치도 창출해내지 못한다. 그러나 지난 20년 동안 많은 주요 기술 기업의 역사를 보면 높은 매출 성장률은 미래의 수익성을 가리키는 훌륭한 지표였다. 매출이 커지면 회사는 대규모 고정비용에 대해 레버리지를 얻기 시작하거나 규모가 커지면서 공급 업체에 대한 레버리지를 확보하고, 증가된 경험과 규모를 통해 비용을 보다 효율적으로 관리할 수 있게 되어 단위 경제성을 개선할 수 있다.&lt;/p&gt;\n\n&lt;h3 id=&quot;5-혁신은-그대로-숫자에-반영된다&quot;&gt;5. 혁신은 그대로 숫자에 반영된다&lt;/h3&gt;\n\n&lt;p&gt;제품 혁신은 중요하다. 성공적인 제품 혁신은 펀더멘털, 특히 매출을 성장시키는 가장 큰 원동력이며 주가를 움직이는 요인이다. 성공적인 제품 혁신은 완전히 새로운 매출원을 창출하기도 하고(아마존의 클라우드 컴퓨팅), 기존 매출원을 대체할 수도 있으며(넷플릭스의 DVD 사업과 스트리밍 서비스), 기존 매출원과 주요 고객 지표를 강화할 수도 있다(스포티파이의 팟캐스트, 스티치 픽스의 직접 구매 기능). 성공적인 제품 혁신은 발견할 수 있다면 시간이 지남에 따라 주가를 움직이는 중요한 동인이 된다.&lt;/p&gt;\n\n&lt;p&gt;제품 혁신은 알아차릴 수 있다. 나를 포함한 몇몇 전문 투자자는 클라우드 컴퓨팅이 얼마나 혁신적인지, 얼마나 큰 시장 기회가 있는지 일찍부터 깨달았다. 아마존 웹 서비스가 출시된 후 몇 년 동안 클라우드 컴퓨팅은 트렌드로 널리 보도되었고, 투자자는 클라우드 컴퓨팅이 엄청난 기회가 될 거라는 사실과 이 서비스를 주도하는 회사가 처음에는 온라인 서점으로 유명했던 곳이라는 것을 알고 아마존이 혁신적인 회사라는 결론을 내리면 되었다. 넷플릭스의 스트리밍 혁신에 대한 실사 비용은 고작 7.99달려였다. 10년 전만 해도 거의 존재하지 않았던 에어비엔비, 도어대시, 리프트, 우버 같은 긱 이코노미(기업이 정규직보다 계약직이나 임시직으로 직원을 고용하는 경향이 커지는 것을 일컫는 용어) 기업을 생각해보면, 오늘날 일어나고 있는 가장 흥미로운 제품 혁신은 소비자 중심으로 이뤄진다고 할 수 있다. 여러분은 소비자다. 따라서 서비스를 이용해 보고 정말 마음에 드는 것을 찾았다면 그것이 훌륭한 투자 아이디어가 될 수 있다. 마지막으로 경쟁사가 어떤 회사의 혁신을 공격적으로 모방한다면 모방당한 기업은 진정한 혁신가일 가능성이 높다.&lt;/p&gt;\n\n&lt;p&gt;제품 혁신은 반복해서 일어날 수 있다. 한 두 가지 인상적인 제품 혁신을 이루어낸 회사 또는 경영진은 계속해서 더 많은 혁신을 만들어낼 수 있다. 아마존 같은 회사가 온라인 쇼핑, 클라우드 컴퓨팅, 킨들을 ‘발명’했다면 성공적인 제품 혁신을 촉진하는 준비된 프로세스나 문화 또는 경영진이 있기 때문에 다른 분야(광고 매출이나 에코 기기, 계산원 없는 상점 등)에서도 혁신을 일으키기 쉽다. 언어로 된 오리지널 콘텐츠에 대해서도 성공적으로 혁신할 수 있을 것이다. 실제로도 넷플릭스는 그렇게 했다. 때로는 과거의 성공이 미래의 성과를 보여주는 지표가 된다.&lt;/p&gt;\n\n&lt;h3 id=&quot;6-주가는-결국-사이즈가-키운다&quot;&gt;6. 주가는 결국 사이즈가 키운다&lt;/h3&gt;\n\n&lt;p&gt;총 도달 가능 시장의 규모가 크면 클수록 기술주와 성장주의 주요 동인의 높은 매출 성장률을 달성할 기회도 더 커진다. 제품의 혁신성, 고객에 대한 제품이나 상품의 강력한 가치 제안, 경영진의 능력 등 다른 중요한 요소가 많지만, 대규모 총 도달 가능 시장은 무엇보다 큰 성장을 이룰 기회를 가져온다. 1조 달러 규모의 총 도달 가능 시장(구글이 활약하고 있는 글로벌 광고 시장처럼)은 기업이 규모를 확장한 후에도 상당한 성장률을 달성할 기회를 제공할 수 있다. 1조 달러 규모의 총 도달 가능 시장을 확보한 기업은 매우 드물지만 ‘구글을 따라잡을 수 있는’, 즉 성장 이후에도 높은 매출 성장률을 창출할 수 있는 잠재력을 지닌 기업을 찾아야 한다. 이 때 큰 총 도달 가능 시장을 확보했지만 점유율이 한 자릿수인 기업이 이상적인 후보가 될 수 있다.&lt;/p&gt;\n\n&lt;p&gt;총 도달 가능 시장은 확대될 수 있다. 불편함을 없애고 새로운 사용자 경험을 추가함으로써 총 도달 가능 시장이 확대될 수 있다. 이것이 리프트와 우버가 몇년 동안 해온 일이다. 우버는 가격을 낮추고, 플랫폼에 있는 드라이버 수를 늘리고, 대기 시간을 줄이고, 결제 시스템을 만들어 팁을 원활히 지급할수 있게 함으로써 결국 승차 공유의 사용자 경험과 편리성을 확장했다. 두 회사 모두 불편을 제거해 사용자 경험을 확장했고, 이에 따라 도달 가능한 승차 공유 시장도 커졌다.&lt;/p&gt;\n\n&lt;p&gt;총 도달 가능 시장을 확대하기 위해 기업이 취할 수 있는 구체적인 방법은 두 가지다. 새로운 지역으로 진출하는 것과 새로운 매출원을 창출하는 것이다. 2021년 초 현재 도어대시는 이 두 가지를 모두 진행하고 있다. 장기적으로 이 일에 성공한다면 기존 총 도달 가능 시장과 성장률의 잠재력에 큰 영향을 미칠 것이고, 따라서 주식시장에서도 성공하게 될 것이다.&lt;/p&gt;\n\n&lt;p&gt;간혹 총 도달 시장은 특정하기가 어려운데, 전통적 산업이 파괴될 때 특히 그렇다. 이럴 때는 창의적이고 새로운 접근법이 필요하다. 스포티타이가 이런 사례다. 스포티파이는 음반 산업과 라디오 광고라는 익히 알려진 2개 시장을 공략했지만 그 방식은 처음 들었던 것보다 훨씬 더 큰 시장을 확보할 수 있는 것이었다. 스마트폰이 확산되면서 미디어 시장은 매우 크게 변화했고, 모든 미디어 모델의 총 도달 가능 시장이 확대되었다. 그리고 바로 이 지점에서 불편함이 제거되었다. 이제는 손쉽게 일주일에 24시간 동안 미디어를 소비할 수 있게 된 것이다. 최고의 미디어 서비스에 더 큰 시장 기회와 성장 기회가 주어졌다고 할 수 있다.&lt;/p&gt;\n\n&lt;p&gt;총 도달 가능 시장 규모가 크면 성장을 촉진해 기업이 확장할 수 있으며, 여기에는 내재적 이익이 존재한다. 구체적으로 경험 곡선, 단위 경제성의 이점, 경제적 해자, 네트워크 효과라는 네 가지 이익이다. 규모가 커지면 더 똑똑하게 운영할 수 있는 학습 기회, 보다 비용 효과적으로 운영할 기회, 새로운 경쟁자의 진입 비용을 높일 기회, 네트워크 효과를 얻을 기회가 생긴다. 전부 다르지만 모두 규모의 이익이다. 규모는 경쟁에서의 승리를 가져다준다. 그러므로 총 도달 가능 시장이 크면 규모의 이익을 활용할 기회도 커진다.&lt;/p&gt;\n\n&lt;h3 id=&quot;7-투자자를-위하는-회사의-주식을-버려라&quot;&gt;7. 투자자를 위하는 회사의 주식을 버려라&lt;/h3&gt;\n\n&lt;p&gt;지난 1년간 수익률이 가장 좋았던 종목은 단기적인 투자자의 관심사보다 ‘고객 만족’에 훨씬 더 큰 우선순위를 두는 기업이었다. 아마존이 전형적인 예다. 아마존은 단기적인 이익을 희생하더라도 보다 고객에게 매력적인 가치를 제공하기 위해 공격적으로 투자하겠다는 의지를 일관되게 보였다. 2005년 초 출시한 프라임 서비스가 대표적인 에다. 프라임 서비스를 도입하면서 아마존의 마진은 감소했고 자본적 지출은 2배 이상 증가했다. 하지만 그 덕분에 인터넷 역사상 고객 충성도가 가장 높은 프로그램이 나왔다. ‘쇼핑 역사상 가장 싼 제품’이기도 했다. 업계의 선도적인 고객 가치 제안을 유지하기 위해 꾸준히 개발하고 적극적으로 투자한 온라인 유통업체가 펀더멘털과 주가 수익률 측면에서 모두 승자가 된 것이다.&lt;/p&gt;\n\n&lt;p&gt;투자자 중심적인 회사는 형편없는 투자를 한다. 이베이와 그럽허브는 수익성 높은 비즈니스 모델을 지키려는 욕구가 강해서 고객의 요구를 만족시키기 위한 혁신에 충분히 집중하지 않은 사례다. 그 때문에 결국 이베이와 그럽허브는 장기 투자자들에게 희비가 뒤섞인 결과를 제공하게 되었다. 그럽허브는 2016년 초부터 2018년 말까지 화려하게 상승했다. 이베이는 기업공개 후 5년 동안은 눈부신 성장률을 기록했고, 이후 5년 동안은 선택적으로 괜찮은 수익률을 기록했다. 하지만 두 기업의 가장 큰 경쟁자로 고객의 요구를 우선시했던 아마존과 도어대시가 획득한 놀라운 시장점유율과 시가총액을 생각하면, 이베이와 그럽허브가 얼마나 많은 것을 놓쳤는지 놀라게 된다. 나는 이 두 기업이나 투자자 중심적인 다른 기업에 관련해 게임이 아직 끝났다고 생각하지 않는다. 고객 중심 기업으로의 피벗은 비용도 많이 들고 어려운 일인데다 처음에는 주식시장에서 외면받을 가능성도 높다. 하지만 직접 매입으로 피벗한 질로가 증명하듯 성공할 수도 있다.&lt;/p&gt;\n\n&lt;p&gt;매력적인 고객 가치 제안을 개발하고 유지하는 데는 비용이 많이 들지만 결국 비즈니스 모델에 긍정적인 효과를 가져올 수 있다. 먼저 고객 충성도와 고객 유지율이 높아지고 이탈이 낮아지는 효과가 있다. 이는 모두 비즈니스 모델에 장기적으로 이익이 된다. 여기에 더해 매력적인 가치 제안으로 아마존과 넷플릭스도 도움을 받았던 가격 결정력의 플라이휠을 돌릴 수 있다. 소비자를 대상으로 사업 활동을 벌이는 기업이 가격 결정력을 갖춘 경우는 드물다. 상품이나 서비스에 돈을 더 지불하고 싶은 사람이 어디 있겠는가? 그러나 어떤 상품이나 서비스가 매력적이라면 소비자는 가격 인상을 받아들일 것이고, 기업은 가격을 인상함으로써 상품이나 서비스 개선에 다시 투자할 수 있는 선순환의 플라이휠을 돌리게 된다. 이를 통해 고객 중심 기업은 장기 투자자에게 높은 수익률을 안겨줄 수 있다.&lt;/p&gt;\n\n&lt;h3 id=&quot;8-사람을-보면-미래의-주가가-보인다&quot;&gt;8. 사람을 보면 미래의 주가가 보인다&lt;/h3&gt;\n\n&lt;p&gt;경영진의 자질은 기술주 투자에서 가장 중요한 요소 중 하나다. 장기적으로 주식은 펀더멜털이 이끌고 펀터멘털은 경영진이 이끌기 때문이다. 경영진을 제대로 고른다면 주식을 제대로 고를 수 있다. 총 도달 가능 시장도 중요하다. 끊임없는 제품 혁신과 올바른 가치 제안도 마찬가지로 중요하다. 그러나 제품 혁신과 올바른 가치 제안을 관리하는 것이 경영진이다. 따라서 경영진을 제대로 고르면 그 기업은 펀더멘털이 좋을 가능성이 높고, 따라서 투자할 종목도 제대로 고르게 된다. 아마도 가장 중요한 주식 티커는 CEO일지도 모른다.&lt;/p&gt;\n\n&lt;p&gt;경영진에게서 따져봐야 할 요소는 다음과 같다. 창립자가 이끄는 회사인가(거의 모든 대형 기술주는 창립자가 이끄는 회사다)? 장기적 지향성을 지니고 있는가(저커버그의 1-5-10년 목표처럼)? 탁월한 산업 비전을 지니고 있는가(스트리밍 서비스를 시작한 헤이스팅스처럼)? 고객 만족에 집착하는가(아마존의 주주 서한)? 기술적 배경과 운영 능력이 있는가? 제품 혁신에 집중하는가? 인재를 영입하고 유지하는 능력이 있는가? 직원과 투자자에게 실수와 어려움을 솔직하게 털어놓을 수 있는 능력이 있는가? 한 기업의 경영진에게서 이 모든 요소를 찾기란 어려울 것이고 다 찾을 필요도 없다. 그러나 경영진의 자질을 신뢰하려면 이 요소 중 다수를 갖추고 있어야 한다.&lt;/p&gt;\n\n&lt;p&gt;투자 펀드와 달리 경영진은  과거 성과가 미래 성과를 보여주는 지표가 된다. 그러니 성공적인 실적을 쌓아온 경영진을 찾았다면 그가 재임 중인 기업의 주식을 반드시 쥐고 있어라. 성공적인 실적을 냈다는 것은 월가의 분기 이익 추정치를 꾸준히 상회한다는 뜻이 아니다. 그것은 예상치를 관리하는 것이지 펀더멘털을 창출하는 것은 아니다. 성공적인 실적을 냈다는 것은 기막히게 멋진 주식 차트를 그렸다는 의미도 아니다. 단기적 주가 변동에는 수많은 요소가 영향을 미치기 때문이다. 성공적 실적이란 꾸준히 높은 매출 성장률을 달성하는 것, 성공적으로 새로운 상품과 기능 개선을 발표하는 것, 마지막으로 점점 더 큰 고객 만족과 충성도를 이끌어내는 것을 의미한다.&lt;/p&gt;\n\n&lt;p&gt;이러한 펀더멘털 측면의 성과와 그 성과를 이끌어낸 핵심 동인은 장기적으로 훌륭한 지식 차트를 그리게 할 가능성이 높다. 그리고이 부분에 대해 가장 큰 책임을 지는 주체는 바로 경영진이다.&lt;/p&gt;\n\n&lt;h3 id=&quot;9-밸류에이션은-종목-선택의-절대적-기준이-아니다&quot;&gt;9. 밸류에이션은 종목 선택의 절대적 기준이 아니다&lt;/h3&gt;\n\n&lt;p&gt;매수 종목을 선택하는 과정에서 밸류에이션이 가장 중요한 요소가 돼서는 안된다. 밸류에이션을 판단하는 프레임워크는 기술주를 고르는 데 도움을 주지만 밸류에이션은 과학이 아니며, 정확성을 띠는 것이 비현실적이거나 불가능하거나 정당하지 않을 때조차 정확한 답을 내놓는 정확성의 함정을 가져온다. 투자를 결정하는 질문은 기업이 탄탄한 이익을 창출하고 있는지, 최소한의 이익을 창출하고 있는지, 아니면 전혀 이익을 내지 못하고 있는지에 따라 달라진다. 하지만 언제나 가장 중요한 질문은 “현재 밸류에이션이 대략 합리적인 것처럼 보이는가?”가 되어야 한다.&lt;/p&gt;\n\n&lt;p&gt;때때로 기술주는 비싸 보일 때가 있지만 그렇다고 나쁜 주식이 되는 것은 아니다. 진공 상태에서 PER은 그리 도움이 되지 않는다. PER은 성장성을 감안하고 봐야 한다. 자본 집약도와 현금 흐름이 비슷하다는 가정하에, 고성장 기업의 이익 흐름이 저성장 기업의 이익 흐름보다 더 크기 때문에 고성장주의 PER이 더 높은 것이 타당하다. 매출 성장과 영업이익률의 확대로 발생해 바로 잉여현긍흐름으로 전환되는 양질의 이익도 높은 PER을 보장한다.&lt;/p&gt;\n\n&lt;p&gt;견조한 이익을 창출하는 기업의 경우 기업의 선행 EPS 성장률과 비슷하거나 약간의 프리미엄이 붙은 PER이 합리적이다. 예를 들어 EPS 성장률 전망이 20퍼센터인 회사는 PER 20배에서 30배 또는 40배까지 거래될 수 있으며, 이런 경우느 여전히 합리적으로 평가되었다고 여겨진다. 그러므로 투자를 결정하는 핵심적인 질문은 “이익 성장률이 얼마나 지속 가능한가?”다. 보기 드물게 높은 성장률인 20퍼센트 성장률을 얼마나 확신하는지, 기업의 총 도달 가능 시장-경영진-제품 혁신 수준-고객 가치 제안이 이 정도 성장을 뒷받침하는지 생각해봐야 한다.&lt;/p&gt;\n\n&lt;p&gt;높은 성장률에 비해 싸게 거래되는 우량주는 장기 투자자에게 훌륭한 투자 대상이다. 이런 경우가 드물긴 하지만 존재하기는 한다. 프라이스라인과 페이스북은 오랜 기간 성장률에 비해 할인된 가격으로 거래되었고, 이는 두 종복에 대한 훌륭한 장기 투자 기회를 창출해냈다. 높은 성장률에 비해 싸게 거래되는 우량주는 투자자들에게 높은 매출 성장률이라는 동인을 제공하는 반면, PER이 낮아질 위험은 제한적이고 PER이 확대될 가능성은 높은 주식이다. 긍정적인 이중 효과가 있는 것이다.&lt;/p&gt;\n\n&lt;p&gt;최소한의 이익만 내는 기업은 PER이 매우 높은(40배 이상) 경우가 많지만 이런 주식도 여전히 좋은 투자 대상이 될 수 있다. 아마존과 넷플릭스가 그 증거다. 대규모 투자로 현재 이익이 크게 축소되고 있는가? 기업의 장기적인 영업이익률이 현재 수준보다 크게 높아질 거라고 생각할 만한 이유가 있는가? 이 회사는 상당한 기간에 높은 매출 성장률을 유지할 수 있는가? 이것이 투자를 결정하는 핵심적인 질문들이다. 이 질문들에 대한 대답이 긍정적이라면 엄청나게 높은 PER도 정당화될 수 있다.&lt;/p&gt;\n\n&lt;p&gt;이익을 내지 못한는 기업의 경우 밸류에이션을 평가하기가 가장 어렵지만 네가지 타당성 테스트와 매출(주가매출액비율) 같은 요소를 바탕으로 한 밸류에이션 비교를 통해 배률에이션의 합리성을 판단할 수 있다. 현재 이익을 내지 못하는 기업을 평가할 때 이용할 수 있는 네 가지 타당성 테스트는 다음과 같다.&lt;/p&gt;\n\n&lt;ol&gt;\n  &lt;li&gt;비슷한 비즈니스 모델로 이익을 내는 상장 기업이 있는가?&lt;/li&gt;\n  &lt;li&gt;회가 전체적으로 수익성이 높지 않다면 사업 내에 수익성이 있는 다른 부문이 있는가?&lt;/li&gt;\n  &lt;li&gt;규모가 기업을 수익성으로 이끌지 못하는 이유가 있는가?&lt;/li&gt;\n  &lt;li&gt;수익성을 높이기 위해 경영진이 취할 수 있는 구체적인 조치가 있는가?&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h3 id=&quot;10-이탈한-우량주를-사냥하라-맹렬하게&quot;&gt;10. 이탈한 우량주를 사냥하라, 맹렬하게&lt;/h3&gt;\n\n&lt;p&gt;이탈한 우량주를 찾아라. 고성장 기술주 투자자로서 돈을 벌 수 있는 가장 좋은 방법 중 하나는 우량주를 찾아 이들이 이탈했을 때 매수하거나 포지션을 늘리는 것이다. 높은매출 성장률, 넓은 총 도달 가능 시장, 끊임없는 제품 혁신과 매력적인 고객 가치 제안, 뛰어난 경영진을 갖춘 우량 기업에 투자하면 펀더멘털 위험이 줄어든다. 우량한 기업이 이탈했을 때, 즉 주가가 20~30퍼센트 하락했을 때나 성장률에 비해 할인된 가격으로 거래될 때 매수한다면 밸류에이션 멀티플 위험이 줄어든다.&lt;/p&gt;\n\n&lt;p&gt;언제가 주식이 이탈한 때인가? 이에 관련해 두 가지 경험칙이 있다.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;주가가 20~30퍼센트 하락했을 때&lt;/li&gt;\n  &lt;li&gt;성장률에 비해 할인된 가격으로 거래될 때, 즉 PER 배수가 예상 EPS 성장률보다 낮은 경우 또는 PEG &amp;lt; 1인 경우&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;약간의 추가적인 판단이 필요하다. 예를 들어 3개월 동안 100퍼센트 급등한 후 20퍼센트 하락했다면 이탈한 주식이라고 볼 수 없다. 그러나 이러한 규칙은 이탈한 주식을 알아보는 데 도움이 된다. 경험상 모든 우량 기업은 어느 순간 이탈해서 인내심 있는 장기 투자자들에게 큰 기회를 제공하는 때가 있었다. 심지어 내가 지난 5년 동안 분석해온 우량주(페이스북, 아마존, 넷플릭스, 구글)도 해당 기간에 몇 번씩 이탈했다.&lt;/p&gt;\n\n&lt;p&gt;경험 많은 기술주 애널리스트의 관점에서 봤을때 우량주임을 알 수 있는 가장 확실한 펀더멘털 증거는 일관되게 매출 성장률(20퍼센트 이상)이다. 그리고 높은 매출 성장률은 끊임없는 제품 혁신, 넓은 총 도달 가능 시장, 매력적인 고객 가치 제안, 훌륭한 경영진이라는 네 가지 핵심적인 요소가 이끈다. 바로 이것들이 회사의 장기적인 펀더멘탈 전망을 결정하는 데 있어 가장 중요한 요소다.&lt;/p&gt;\n\n&lt;p&gt;내가 알아낸 가장 중요한 매도 지표는 펀더멘털의 상당한 악화다. 보다 구체적으로 말하자면 매출 성장률이 크게 둔화될 때(코로나19 팬데믹 같은 거시적 충격 없이 1년 이내 50퍼센트 감소)나, 또는 업계와 거시 경제에 일어난 충격을 감안하고 매출 성장률이 20퍼센트 이하로 현저히 하락할 때다. 이런 지표는 특히 고성장 기술주에 적용되지만 매출 성장률이 크게 감소했을 때 장기간 시장 대비 높은 수익률을 보이던 주식이 시장 대비 낮은 수익률을 보이게 된 경우는 상당히 많다. 부킹, 크리테오, 이베이, 스냅, 셔터스톡, 트립어드바이저, 트루카, 트위터, 야후, 옐프 등이 여기에 해당한다. 그러므로 기술주 투자자는 기업의 매출 성장률에 급격히 둔화되는 것을 경계해야 한다. 성장은 설렌다. 하지만 (상당한) 둔화는 주가를 죽인다.&lt;/p&gt;\n\n            \n          ",
        "contentSnippet": "<p>재밌다.. 기술주 투자를 잘하기 위해 읽기 시작한거 아니고 제품을 만드는 사람으로서 제품과 회사의 성장이 시장에는 어떻게 반영되는지 궁금해서 읽었는데 많은 것들을 배울 수 있었다. 기술주를 어떻게 투자하면 좋은지에 대해서 이야기하는 책인데, 창업가가 기업을 성공시키고 더 스케일업 하기 위해 어떤 것들을 신경써야 하는지도 알려준다. 결국엔 기업의 Fundamental 너무 중요하다. 매출, 매출, 매출, 그리고 성장성, 경쟁력, 경영진의 역량, 그리고 얼마나 고객 지향적인지.</p>\n\n<p><img src=\"/images/2025/03/23/nothing-but-net.png\" alt=\"Nothing But Net\" title=\"Nothing But Net\" class=\"center-image\" /></p>\n\n<h3 id=\"1-종목-선택의-함정을-피하라\">1. 종목 선택의 함정을 피하라</h3>\n\n<p>주식 시장에 투자하면 이따금 손실을 입을 것이다. 좋은 주식을 고르려면 매출과 이익을 정확히 예측하는 훌륭한 펀더멘털리스트가 되어야 하는 동시에 기업의 매출과 이익에 시장이 얼마나 멀티플을 줄 지 정확히 예측할 수 있는 훌륭한 심리학자가 되어야 한다. 훌륭한 펀더멘털리스트이자 훌륭한 심리학자가 되는 것은 대부분 아주아주 어려운 일이다. 그리고 언제나 잘 짜인 종목 선정 계획을 흔드는 예측 불가능한 시장 충격이 있다. 투자에는 배짱이 필요하다.</p>\n\n<p>또 아주 높은 확률로 잘못된 판단을 내려 돈을 잃기도 할 것이다. 줄릴리에 대해 잘못 판단했을 때 나는 거의 15년 동안 전문적으로 주식을 분석해왔고 경영진도 잘 알고 있었다. 그러나 고객 가치 제안이 어떻게 총 도달 가능 시장과 성장 전망을 제한하는지 충분히 알지 못했다. 블루 에이프런에 대해 잘못 판단했을 떄는 거의 20년째 경력을 이어가고 있었다. 나는 경영진의 능력을 과대평가했거나 이 회사의 유례없는 성장과 매우 혁신적인 비즈니스 모델이 시장의 관심과 투자 자금을 엄청나게 끌어들였다. 투자자는 모든 주식에 대해 올바른 판단을 할 수 없으며 ‘확실한’ 주식일지라도 70퍼센트, 80퍼센트, 심지어 90퍼센트 까지도 하락할 수 있다는 사실을 기억하라.</p>\n\n<h3 id=\"2-펀더멜털과-추세는-완전히-별개다\">2. 펀더멜털과 추세는 완전히 별개다</h3>\n\n<p>특정 업종에서 가장 좋은 종목일지라도 기업 고유의 대규모 매도세는 피해갈 수 없다. 2015년부터 2020년까지 최고의 수익률을 거둔 페이스북, 구글, 넷플릭스 등 3개 주식은 모두 해당 기간 대규모 조정(20퍼센트에서 40퍼센트까지)을 경험했다. 넷플릭스는 12개월 동안 두 번의 대규모 조정을 받았다. 펀더멘털이 다른 기술주(S&amp;P 500에 속한 종목 중 95퍼센트 이상)보다 월등히 좋았음에도 이들 종목은 큰 하락을 겪었고, 이후 회복되어 시장 수익률을 크게 앞질렀다.</p>\n\n<p>업계에서 가장 좋은 종목일지라도 광범위한 시장의 대규모 매도세를 피해 갈 수는 없다. 2018년 말, 무역 전쟁에 대한 우려와 글로벌 GDP 성장률 둔화, 금리 인상과 관련한 광범위한 시장 조정의 여파로 아마존은 기업의 실적 추정이나 성장 전망에 변화가 없음에도 시가총액의 3분의 1을 잃었다. 투자자는 업계 최고의 기업과 종목을 골랐더라도 상당한 하락을 견뎌낼 준비가 되어 있어야 한다. 때로는 완전히 고유 회사의 통제 밖에 있는 이유 때문에 손실을 입게 될 것이다.</p>\n\n<h3 id=\"3-때때로-주가는-펀더멘털과-전혀-상관없이-움직인다\">3. 때때로 주가는 펀더멘털과 전혀 상관없이 움직인다</h3>\n\n<p>실적 발표를 이용해 단기 투자에 몰두하지 마라. 실적 발표를 이용한 단기 투자에 성공하려면 펀더멘탈을 정확히 읽고 가까운 미래의 수치에 대해 올바른 평가를 내릴 수 있어야 한다. 그런데 이는 개인 투자자는 물론 전문 투자자도 대부분 해내기 어려운 일이다. 분기 실적 발표를 중심으로 한 단기 거래 시에는 잘못된 판단을 내리기 쉬우며, 이런 단기 거래를 하다가 장기적인 펀더멘털과 주가 동향을 놓치기도 한다. 2015년에서 2018년까지 아마존은 386퍼센트 상승했지만 총 16번의 실적 발표 중 4번만 하루 상승 폭이 10퍼센트 이상이었고, 4번은 하루 하락 폭이 5퍼센트 이상이었다. 펀더멘털이 좋은 기업에 장기로 투자하고 단기 주가 변동은 무시한다면 높은 수익률을 거둘 수 있다.</p>\n\n<p>실적 발표를 이용한 단기 투자는 기대감에 따라 크게 좌우된다. (매출 성장률이 가속화되고 영업이익률이 확대되어) 펀더멘털이 분명히 개선되고 있어도 실제 실적이 ‘비공식적인’ 시장의 기대를 충족시키지 못한다면 주식은 하락할 수 있다. 이것이 스냅의 2019년 1분기 실적 발표와 추이의 2020년 1분기 실적 발표 때 일어났던 일이다. 기업공개 의무보호예수 해제처럼 펀더멘털 동향과 결부되지 않고 단기적인 주가 변동을 유발하는 이례적인 이벤트도 있을 수 있다. 2019년 11월 우버가 그런 사례였다. 과민 반응이나 단기적인 주가 변동 등의 이벤트 때문에 장기 투자를 단념하지 마라. 대신 실적 발표를 이용한 단기 투자에 대한 환상을 버려라..</p>\n\n<h3 id=\"4-20퍼센트의-법칙과-2퍼센트의-법칙을-기억하라\">4. ‘20퍼센트의 법칙’과 ‘2퍼센트의 법칙’을 기억하라</h3>\n\n<p>장기적으로 펀더멘털은 주식을 움직이며 기술주의 경우 가장 중요한 펀더멘털은 매출, 매출, 매출이다. 매출이나 주요 고객 지표 측면에서 지속적으로 20퍼센트 이상의 성장률을 창출해내는 기업은 단기 수익성 전망에 관계없이 잠재적으로 양호한 주식 수익률을 제공할 수 있다. 이것이 내가 높은 성장률이라고 말하는 20퍼센트 매출 성장률의 ‘법칙’이다. 20퍼센트 이상의 일관된 매출 성장률은 S&amp;P 500 기업의 매출 성장률보다 3~4배 높은 성과이며 지속하기 어렵다. 20퍼센트 이상의 일관된 매출 성장률은 종종 커다란 시장 기회, 끈질기고 성공적인 제품 혁신, 강력한 가치 제안, 최고의 경영진이 반영된 결과다. 그리고 이것이 장기적으로 좋은 투자 기회에서 투자자들이 찾아야 하는 요소다. 우선 다섯 분기 또는 여섯 분기 연속으로 20퍼센트 이상 성장률을 달성한 기업을 찾아라. 때때로 과거의 성과는 미래 성과를 보여주는 지표가 될 수 있다.</p>\n\n<p>가령 세 분기나 네 분기에 걸쳐 매출 성장률이 절반으로 감소하는 경우처럼 어떤 기업의 매출 성장률이 급격히 둔화된다면, 이 기업의 주가는 제대로 상승하지 못할 가능성이 높다. 특히  시장점유율 하락, 시장 포화, 경영진의 잘못된 경영이 성장률 둔화의 원인이라면 더욱 그렇다. 다만 코로나19 위기처럼 중대한 블랙 스완이 성장률 둔화의 원인이라면 문제가 다르다. 반대로 성장 곡선 증대 계획을 성공적으로 시행해 매출 성장률을 가속화한 기업은, 그렇지 않은 기업보다 높은 수익률을 창출할 수 있다. 성장 곡선 증대 계획은 특히 주가 상승에 큰 촉매제가 되므로 투자자는 이를 잘 활용해야 한다. 신제품 출시, 지리적 시장 확대, 가격 인상 등 성장 곡선 증대 계획이 효과를 발휘하면 매출 성장률이 가속화된다. 또 종종 마진 확대로 이어져 이익 성장 틈이 열리며 멀티플에 대한 재평가가 이루어진다. 그러므로 성장 곡선 증대 계획을 찾아라.</p>\n\n<p>성송적인 기술주 투자가 이익을 신경 쓰지 않는다는 뜻은 아니다. 수익성 없는 성장은 장기적으로 아무런 가치도 창출해내지 못한다. 그러나 지난 20년 동안 많은 주요 기술 기업의 역사를 보면 높은 매출 성장률은 미래의 수익성을 가리키는 훌륭한 지표였다. 매출이 커지면 회사는 대규모 고정비용에 대해 레버리지를 얻기 시작하거나 규모가 커지면서 공급 업체에 대한 레버리지를 확보하고, 증가된 경험과 규모를 통해 비용을 보다 효율적으로 관리할 수 있게 되어 단위 경제성을 개선할 수 있다.</p>\n\n<h3 id=\"5-혁신은-그대로-숫자에-반영된다\">5. 혁신은 그대로 숫자에 반영된다</h3>\n\n<p>제품 혁신은 중요하다. 성공적인 제품 혁신은 펀더멘털, 특히 매출을 성장시키는 가장 큰 원동력이며 주가를 움직이는 요인이다. 성공적인 제품 혁신은 완전히 새로운 매출원을 창출하기도 하고(아마존의 클라우드 컴퓨팅), 기존 매출원을 대체할 수도 있으며(넷플릭스의 DVD 사업과 스트리밍 서비스), 기존 매출원과 주요 고객 지표를 강화할 수도 있다(스포티파이의 팟캐스트, 스티치 픽스의 직접 구매 기능). 성공적인 제품 혁신은 발견할 수 있다면 시간이 지남에 따라 주가를 움직이는 중요한 동인이 된다.</p>\n\n<p>제품 혁신은 알아차릴 수 있다. 나를 포함한 몇몇 전문 투자자는 클라우드 컴퓨팅이 얼마나 혁신적인지, 얼마나 큰 시장 기회가 있는지 일찍부터 깨달았다. 아마존 웹 서비스가 출시된 후 몇 년 동안 클라우드 컴퓨팅은 트렌드로 널리 보도되었고, 투자자는 클라우드 컴퓨팅이 엄청난 기회가 될 거라는 사실과 이 서비스를 주도하는 회사가 처음에는 온라인 서점으로 유명했던 곳이라는 것을 알고 아마존이 혁신적인 회사라는 결론을 내리면 되었다. 넷플릭스의 스트리밍 혁신에 대한 실사 비용은 고작 7.99달려였다. 10년 전만 해도 거의 존재하지 않았던 에어비엔비, 도어대시, 리프트, 우버 같은 긱 이코노미(기업이 정규직보다 계약직이나 임시직으로 직원을 고용하는 경향이 커지는 것을 일컫는 용어) 기업을 생각해보면, 오늘날 일어나고 있는 가장 흥미로운 제품 혁신은 소비자 중심으로 이뤄진다고 할 수 있다. 여러분은 소비자다. 따라서 서비스를 이용해 보고 정말 마음에 드는 것을 찾았다면 그것이 훌륭한 투자 아이디어가 될 수 있다. 마지막으로 경쟁사가 어떤 회사의 혁신을 공격적으로 모방한다면 모방당한 기업은 진정한 혁신가일 가능성이 높다.</p>\n\n<p>제품 혁신은 반복해서 일어날 수 있다. 한 두 가지 인상적인 제품 혁신을 이루어낸 회사 또는 경영진은 계속해서 더 많은 혁신을 만들어낼 수 있다. 아마존 같은 회사가 온라인 쇼핑, 클라우드 컴퓨팅, 킨들을 ‘발명’했다면 성공적인 제품 혁신을 촉진하는 준비된 프로세스나 문화 또는 경영진이 있기 때문에 다른 분야(광고 매출이나 에코 기기, 계산원 없는 상점 등)에서도 혁신을 일으키기 쉽다. 언어로 된 오리지널 콘텐츠에 대해서도 성공적으로 혁신할 수 있을 것이다. 실제로도 넷플릭스는 그렇게 했다. 때로는 과거의 성공이 미래의 성과를 보여주는 지표가 된다.</p>\n\n<h3 id=\"6-주가는-결국-사이즈가-키운다\">6. 주가는 결국 사이즈가 키운다</h3>\n\n<p>총 도달 가능 시장의 규모가 크면 클수록 기술주와 성장주의 주요 동인의 높은 매출 성장률을 달성할 기회도 더 커진다. 제품의 혁신성, 고객에 대한 제품이나 상품의 강력한 가치 제안, 경영진의 능력 등 다른 중요한 요소가 많지만, 대규모 총 도달 가능 시장은 무엇보다 큰 성장을 이룰 기회를 가져온다. 1조 달러 규모의 총 도달 가능 시장(구글이 활약하고 있는 글로벌 광고 시장처럼)은 기업이 규모를 확장한 후에도 상당한 성장률을 달성할 기회를 제공할 수 있다. 1조 달러 규모의 총 도달 가능 시장을 확보한 기업은 매우 드물지만 ‘구글을 따라잡을 수 있는’, 즉 성장 이후에도 높은 매출 성장률을 창출할 수 있는 잠재력을 지닌 기업을 찾아야 한다. 이 때 큰 총 도달 가능 시장을 확보했지만 점유율이 한 자릿수인 기업이 이상적인 후보가 될 수 있다.</p>\n\n<p>총 도달 가능 시장은 확대될 수 있다. 불편함을 없애고 새로운 사용자 경험을 추가함으로써 총 도달 가능 시장이 확대될 수 있다. 이것이 리프트와 우버가 몇년 동안 해온 일이다. 우버는 가격을 낮추고, 플랫폼에 있는 드라이버 수를 늘리고, 대기 시간을 줄이고, 결제 시스템을 만들어 팁을 원활히 지급할수 있게 함으로써 결국 승차 공유의 사용자 경험과 편리성을 확장했다. 두 회사 모두 불편을 제거해 사용자 경험을 확장했고, 이에 따라 도달 가능한 승차 공유 시장도 커졌다.</p>\n\n<p>총 도달 가능 시장을 확대하기 위해 기업이 취할 수 있는 구체적인 방법은 두 가지다. 새로운 지역으로 진출하는 것과 새로운 매출원을 창출하는 것이다. 2021년 초 현재 도어대시는 이 두 가지를 모두 진행하고 있다. 장기적으로 이 일에 성공한다면 기존 총 도달 가능 시장과 성장률의 잠재력에 큰 영향을 미칠 것이고, 따라서 주식시장에서도 성공하게 될 것이다.</p>\n\n<p>간혹 총 도달 시장은 특정하기가 어려운데, 전통적 산업이 파괴될 때 특히 그렇다. 이럴 때는 창의적이고 새로운 접근법이 필요하다. 스포티타이가 이런 사례다. 스포티파이는 음반 산업과 라디오 광고라는 익히 알려진 2개 시장을 공략했지만 그 방식은 처음 들었던 것보다 훨씬 더 큰 시장을 확보할 수 있는 것이었다. 스마트폰이 확산되면서 미디어 시장은 매우 크게 변화했고, 모든 미디어 모델의 총 도달 가능 시장이 확대되었다. 그리고 바로 이 지점에서 불편함이 제거되었다. 이제는 손쉽게 일주일에 24시간 동안 미디어를 소비할 수 있게 된 것이다. 최고의 미디어 서비스에 더 큰 시장 기회와 성장 기회가 주어졌다고 할 수 있다.</p>\n\n<p>총 도달 가능 시장 규모가 크면 성장을 촉진해 기업이 확장할 수 있으며, 여기에는 내재적 이익이 존재한다. 구체적으로 경험 곡선, 단위 경제성의 이점, 경제적 해자, 네트워크 효과라는 네 가지 이익이다. 규모가 커지면 더 똑똑하게 운영할 수 있는 학습 기회, 보다 비용 효과적으로 운영할 기회, 새로운 경쟁자의 진입 비용을 높일 기회, 네트워크 효과를 얻을 기회가 생긴다. 전부 다르지만 모두 규모의 이익이다. 규모는 경쟁에서의 승리를 가져다준다. 그러므로 총 도달 가능 시장이 크면 규모의 이익을 활용할 기회도 커진다.</p>\n\n<h3 id=\"7-투자자를-위하는-회사의-주식을-버려라\">7. 투자자를 위하는 회사의 주식을 버려라</h3>\n\n<p>지난 1년간 수익률이 가장 좋았던 종목은 단기적인 투자자의 관심사보다 ‘고객 만족’에 훨씬 더 큰 우선순위를 두는 기업이었다. 아마존이 전형적인 예다. 아마존은 단기적인 이익을 희생하더라도 보다 고객에게 매력적인 가치를 제공하기 위해 공격적으로 투자하겠다는 의지를 일관되게 보였다. 2005년 초 출시한 프라임 서비스가 대표적인 에다. 프라임 서비스를 도입하면서 아마존의 마진은 감소했고 자본적 지출은 2배 이상 증가했다. 하지만 그 덕분에 인터넷 역사상 고객 충성도가 가장 높은 프로그램이 나왔다. ‘쇼핑 역사상 가장 싼 제품’이기도 했다. 업계의 선도적인 고객 가치 제안을 유지하기 위해 꾸준히 개발하고 적극적으로 투자한 온라인 유통업체가 펀더멘털과 주가 수익률 측면에서 모두 승자가 된 것이다.</p>\n\n<p>투자자 중심적인 회사는 형편없는 투자를 한다. 이베이와 그럽허브는 수익성 높은 비즈니스 모델을 지키려는 욕구가 강해서 고객의 요구를 만족시키기 위한 혁신에 충분히 집중하지 않은 사례다. 그 때문에 결국 이베이와 그럽허브는 장기 투자자들에게 희비가 뒤섞인 결과를 제공하게 되었다. 그럽허브는 2016년 초부터 2018년 말까지 화려하게 상승했다. 이베이는 기업공개 후 5년 동안은 눈부신 성장률을 기록했고, 이후 5년 동안은 선택적으로 괜찮은 수익률을 기록했다. 하지만 두 기업의 가장 큰 경쟁자로 고객의 요구를 우선시했던 아마존과 도어대시가 획득한 놀라운 시장점유율과 시가총액을 생각하면, 이베이와 그럽허브가 얼마나 많은 것을 놓쳤는지 놀라게 된다. 나는 이 두 기업이나 투자자 중심적인 다른 기업에 관련해 게임이 아직 끝났다고 생각하지 않는다. 고객 중심 기업으로의 피벗은 비용도 많이 들고 어려운 일인데다 처음에는 주식시장에서 외면받을 가능성도 높다. 하지만 직접 매입으로 피벗한 질로가 증명하듯 성공할 수도 있다.</p>\n\n<p>매력적인 고객 가치 제안을 개발하고 유지하는 데는 비용이 많이 들지만 결국 비즈니스 모델에 긍정적인 효과를 가져올 수 있다. 먼저 고객 충성도와 고객 유지율이 높아지고 이탈이 낮아지는 효과가 있다. 이는 모두 비즈니스 모델에 장기적으로 이익이 된다. 여기에 더해 매력적인 가치 제안으로 아마존과 넷플릭스도 도움을 받았던 가격 결정력의 플라이휠을 돌릴 수 있다. 소비자를 대상으로 사업 활동을 벌이는 기업이 가격 결정력을 갖춘 경우는 드물다. 상품이나 서비스에 돈을 더 지불하고 싶은 사람이 어디 있겠는가? 그러나 어떤 상품이나 서비스가 매력적이라면 소비자는 가격 인상을 받아들일 것이고, 기업은 가격을 인상함으로써 상품이나 서비스 개선에 다시 투자할 수 있는 선순환의 플라이휠을 돌리게 된다. 이를 통해 고객 중심 기업은 장기 투자자에게 높은 수익률을 안겨줄 수 있다.</p>\n\n<h3 id=\"8-사람을-보면-미래의-주가가-보인다\">8. 사람을 보면 미래의 주가가 보인다</h3>\n\n<p>경영진의 자질은 기술주 투자에서 가장 중요한 요소 중 하나다. 장기적으로 주식은 펀더멜털이 이끌고 펀터멘털은 경영진이 이끌기 때문이다. 경영진을 제대로 고른다면 주식을 제대로 고를 수 있다. 총 도달 가능 시장도 중요하다. 끊임없는 제품 혁신과 올바른 가치 제안도 마찬가지로 중요하다. 그러나 제품 혁신과 올바른 가치 제안을 관리하는 것이 경영진이다. 따라서 경영진을 제대로 고르면 그 기업은 펀더멘털이 좋을 가능성이 높고, 따라서 투자할 종목도 제대로 고르게 된다. 아마도 가장 중요한 주식 티커는 CEO일지도 모른다.</p>\n\n<p>경영진에게서 따져봐야 할 요소는 다음과 같다. 창립자가 이끄는 회사인가(거의 모든 대형 기술주는 창립자가 이끄는 회사다)? 장기적 지향성을 지니고 있는가(저커버그의 1-5-10년 목표처럼)? 탁월한 산업 비전을 지니고 있는가(스트리밍 서비스를 시작한 헤이스팅스처럼)? 고객 만족에 집착하는가(아마존의 주주 서한)? 기술적 배경과 운영 능력이 있는가? 제품 혁신에 집중하는가? 인재를 영입하고 유지하는 능력이 있는가? 직원과 투자자에게 실수와 어려움을 솔직하게 털어놓을 수 있는 능력이 있는가? 한 기업의 경영진에게서 이 모든 요소를 찾기란 어려울 것이고 다 찾을 필요도 없다. 그러나 경영진의 자질을 신뢰하려면 이 요소 중 다수를 갖추고 있어야 한다.</p>\n\n<p>투자 펀드와 달리 경영진은  과거 성과가 미래 성과를 보여주는 지표가 된다. 그러니 성공적인 실적을 쌓아온 경영진을 찾았다면 그가 재임 중인 기업의 주식을 반드시 쥐고 있어라. 성공적인 실적을 냈다는 것은 월가의 분기 이익 추정치를 꾸준히 상회한다는 뜻이 아니다. 그것은 예상치를 관리하는 것이지 펀더멘털을 창출하는 것은 아니다. 성공적인 실적을 냈다는 것은 기막히게 멋진 주식 차트를 그렸다는 의미도 아니다. 단기적 주가 변동에는 수많은 요소가 영향을 미치기 때문이다. 성공적 실적이란 꾸준히 높은 매출 성장률을 달성하는 것, 성공적으로 새로운 상품과 기능 개선을 발표하는 것, 마지막으로 점점 더 큰 고객 만족과 충성도를 이끌어내는 것을 의미한다.</p>\n\n<p>이러한 펀더멘털 측면의 성과와 그 성과를 이끌어낸 핵심 동인은 장기적으로 훌륭한 지식 차트를 그리게 할 가능성이 높다. 그리고이 부분에 대해 가장 큰 책임을 지는 주체는 바로 경영진이다.</p>\n\n<h3 id=\"9-밸류에이션은-종목-선택의-절대적-기준이-아니다\">9. 밸류에이션은 종목 선택의 절대적 기준이 아니다</h3>\n\n<p>매수 종목을 선택하는 과정에서 밸류에이션이 가장 중요한 요소가 돼서는 안된다. 밸류에이션을 판단하는 프레임워크는 기술주를 고르는 데 도움을 주지만 밸류에이션은 과학이 아니며, 정확성을 띠는 것이 비현실적이거나 불가능하거나 정당하지 않을 때조차 정확한 답을 내놓는 정확성의 함정을 가져온다. 투자를 결정하는 질문은 기업이 탄탄한 이익을 창출하고 있는지, 최소한의 이익을 창출하고 있는지, 아니면 전혀 이익을 내지 못하고 있는지에 따라 달라진다. 하지만 언제나 가장 중요한 질문은 “현재 밸류에이션이 대략 합리적인 것처럼 보이는가?”가 되어야 한다.</p>\n\n<p>때때로 기술주는 비싸 보일 때가 있지만 그렇다고 나쁜 주식이 되는 것은 아니다. 진공 상태에서 PER은 그리 도움이 되지 않는다. PER은 성장성을 감안하고 봐야 한다. 자본 집약도와 현금 흐름이 비슷하다는 가정하에, 고성장 기업의 이익 흐름이 저성장 기업의 이익 흐름보다 더 크기 때문에 고성장주의 PER이 더 높은 것이 타당하다. 매출 성장과 영업이익률의 확대로 발생해 바로 잉여현긍흐름으로 전환되는 양질의 이익도 높은 PER을 보장한다.</p>\n\n<p>견조한 이익을 창출하는 기업의 경우 기업의 선행 EPS 성장률과 비슷하거나 약간의 프리미엄이 붙은 PER이 합리적이다. 예를 들어 EPS 성장률 전망이 20퍼센터인 회사는 PER 20배에서 30배 또는 40배까지 거래될 수 있으며, 이런 경우느 여전히 합리적으로 평가되었다고 여겨진다. 그러므로 투자를 결정하는 핵심적인 질문은 “이익 성장률이 얼마나 지속 가능한가?”다. 보기 드물게 높은 성장률인 20퍼센트 성장률을 얼마나 확신하는지, 기업의 총 도달 가능 시장-경영진-제품 혁신 수준-고객 가치 제안이 이 정도 성장을 뒷받침하는지 생각해봐야 한다.</p>\n\n<p>높은 성장률에 비해 싸게 거래되는 우량주는 장기 투자자에게 훌륭한 투자 대상이다. 이런 경우가 드물긴 하지만 존재하기는 한다. 프라이스라인과 페이스북은 오랜 기간 성장률에 비해 할인된 가격으로 거래되었고, 이는 두 종복에 대한 훌륭한 장기 투자 기회를 창출해냈다. 높은 성장률에 비해 싸게 거래되는 우량주는 투자자들에게 높은 매출 성장률이라는 동인을 제공하는 반면, PER이 낮아질 위험은 제한적이고 PER이 확대될 가능성은 높은 주식이다. 긍정적인 이중 효과가 있는 것이다.</p>\n\n<p>최소한의 이익만 내는 기업은 PER이 매우 높은(40배 이상) 경우가 많지만 이런 주식도 여전히 좋은 투자 대상이 될 수 있다. 아마존과 넷플릭스가 그 증거다. 대규모 투자로 현재 이익이 크게 축소되고 있는가? 기업의 장기적인 영업이익률이 현재 수준보다 크게 높아질 거라고 생각할 만한 이유가 있는가? 이 회사는 상당한 기간에 높은 매출 성장률을 유지할 수 있는가? 이것이 투자를 결정하는 핵심적인 질문들이다. 이 질문들에 대한 대답이 긍정적이라면 엄청나게 높은 PER도 정당화될 수 있다.</p>\n\n<p>이익을 내지 못한는 기업의 경우 밸류에이션을 평가하기가 가장 어렵지만 네가지 타당성 테스트와 매출(주가매출액비율) 같은 요소를 바탕으로 한 밸류에이션 비교를 통해 배률에이션의 합리성을 판단할 수 있다. 현재 이익을 내지 못하는 기업을 평가할 때 이용할 수 있는 네 가지 타당성 테스트는 다음과 같다.</p>\n\n<ol>\n  <li>비슷한 비즈니스 모델로 이익을 내는 상장 기업이 있는가?</li>\n  <li>회가 전체적으로 수익성이 높지 않다면 사업 내에 수익성이 있는 다른 부문이 있는가?</li>\n  <li>규모가 기업을 수익성으로 이끌지 못하는 이유가 있는가?</li>\n  <li>수익성을 높이기 위해 경영진이 취할 수 있는 구체적인 조치가 있는가?</li>\n</ol>\n\n<h3 id=\"10-이탈한-우량주를-사냥하라-맹렬하게\">10. 이탈한 우량주를 사냥하라, 맹렬하게</h3>\n\n<p>이탈한 우량주를 찾아라. 고성장 기술주 투자자로서 돈을 벌 수 있는 가장 좋은 방법 중 하나는 우량주를 찾아 이들이 이탈했을 때 매수하거나 포지션을 늘리는 것이다. 높은매출 성장률, 넓은 총 도달 가능 시장, 끊임없는 제품 혁신과 매력적인 고객 가치 제안, 뛰어난 경영진을 갖춘 우량 기업에 투자하면 펀더멘털 위험이 줄어든다. 우량한 기업이 이탈했을 때, 즉 주가가 20~30퍼센트 하락했을 때나 성장률에 비해 할인된 가격으로 거래될 때 매수한다면 밸류에이션 멀티플 위험이 줄어든다.</p>\n\n<p>언제가 주식이 이탈한 때인가? 이에 관련해 두 가지 경험칙이 있다.</p>\n\n<ul>\n  <li>주가가 20~30퍼센트 하락했을 때</li>\n  <li>성장률에 비해 할인된 가격으로 거래될 때, 즉 PER 배수가 예상 EPS 성장률보다 낮은 경우 또는 PEG &lt; 1인 경우</li>\n</ul>\n\n<p>약간의 추가적인 판단이 필요하다. 예를 들어 3개월 동안 100퍼센트 급등한 후 20퍼센트 하락했다면 이탈한 주식이라고 볼 수 없다. 그러나 이러한 규칙은 이탈한 주식을 알아보는 데 도움이 된다. 경험상 모든 우량 기업은 어느 순간 이탈해서 인내심 있는 장기 투자자들에게 큰 기회를 제공하는 때가 있었다. 심지어 내가 지난 5년 동안 분석해온 우량주(페이스북, 아마존, 넷플릭스, 구글)도 해당 기간에 몇 번씩 이탈했다.</p>\n\n<p>경험 많은 기술주 애널리스트의 관점에서 봤을때 우량주임을 알 수 있는 가장 확실한 펀더멘털 증거는 일관되게 매출 성장률(20퍼센트 이상)이다. 그리고 높은 매출 성장률은 끊임없는 제품 혁신, 넓은 총 도달 가능 시장, 매력적인 고객 가치 제안, 훌륭한 경영진이라는 네 가지 핵심적인 요소가 이끈다. 바로 이것들이 회사의 장기적인 펀더멘탈 전망을 결정하는 데 있어 가장 중요한 요소다.</p>\n\n<p>내가 알아낸 가장 중요한 매도 지표는 펀더멘털의 상당한 악화다. 보다 구체적으로 말하자면 매출 성장률이 크게 둔화될 때(코로나19 팬데믹 같은 거시적 충격 없이 1년 이내 50퍼센트 감소)나, 또는 업계와 거시 경제에 일어난 충격을 감안하고 매출 성장률이 20퍼센트 이하로 현저히 하락할 때다. 이런 지표는 특히 고성장 기술주에 적용되지만 매출 성장률이 크게 감소했을 때 장기간 시장 대비 높은 수익률을 보이던 주식이 시장 대비 낮은 수익률을 보이게 된 경우는 상당히 많다. 부킹, 크리테오, 이베이, 스냅, 셔터스톡, 트립어드바이저, 트루카, 트위터, 야후, 옐프 등이 여기에 해당한다. 그러므로 기술주 투자자는 기업의 매출 성장률에 급격히 둔화되는 것을 경계해야 한다. 성장은 설렌다. 하지만 (상당한) 둔화는 주가를 죽인다.</p>",
        "guid": "https://sungjk.github.io/2025/03/23/nothing-but-net.html",
        "isoDate": "2025-03-23T00:00:00.000Z"
      },
      {
        "title": "프롬프트 엔지니어링(Prompt Engineering)",
        "link": "https://sungjk.github.io/2025/03/22/prompt-engineering.html",
        "pubDate": "2025-03-22T00:00:00+00:00",
        "content": "\n            \n            &lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;\n\n&lt;p&gt;LLM Settings&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;temperature&lt;/code&gt;: 토큰의 선택 비중을 결정. 높을수록 창의적인 결과 생성. 낮을수록 사실을 기반한 결과 생성&lt;/li&gt;\n  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;top_p&lt;/code&gt;: 낮으면 사실적인 결과 생성.&lt;/li&gt;\n  &lt;li&gt;일반적으로 temperature 나 top_p 둘 중 하나만 변경&lt;/li&gt;\n  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;max length&lt;/code&gt;: 모델이 생성하는 토큰 수 관리. 결과 연관성 및 비용 관리.&lt;/li&gt;\n  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Stop Sequence&lt;/code&gt;\n    &lt;ul&gt;\n      &lt;li&gt;특정 문자열을 만나면 출력을 멈추기 위해 사용&lt;/li&gt;\n      &lt;li&gt;모델이 불필요하게 길거나 중복된 응답을 생성하지 않게 만들기 위해 사용함&lt;/li&gt;\n      &lt;li&gt;코드, 목록, 대화 스타일 같은 특정 형식을 강제할 때 유용함&lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;p&gt;Example:&lt;/p&gt;\n\n    &lt;ol&gt;\n      &lt;li&gt;&lt;strong&gt;리스트 제한&lt;/strong&gt;:\n        &lt;ul&gt;\n          &lt;li&gt;“10개의 아이템으로 이루어진 리스트”를 생성하고 싶다면, Stop Sequence로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;11.&quot;&lt;/code&gt;을 지정&lt;/li&gt;\n          &lt;li&gt;모델이 “11.”을 생성하지 못하게 해서 10개의 아이템으로만 리스트를 제한&lt;/li&gt;\n        &lt;/ul&gt;\n\n        &lt;p&gt;&lt;strong&gt;예시&lt;/strong&gt;:&lt;/p&gt;\n\n        &lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Input: Generate a list of fruits:\n Output:\n&lt;span class=&quot;p&quot;&gt; 1.&lt;/span&gt; Apple\n&lt;span class=&quot;p&quot;&gt; 2.&lt;/span&gt; Banana\n ...\n&lt;span class=&quot;p&quot;&gt; 3.&lt;/span&gt;  Kiwi\n&lt;span class=&quot;p&quot;&gt; 4.&lt;/span&gt;  (멈춤)  --&amp;gt; &quot;11.&quot;이 Stop Sequence라면 여기서 중단됨.\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;\n      &lt;/li&gt;\n      &lt;li&gt;&lt;strong&gt;대화 종료&lt;/strong&gt;:\n        &lt;ul&gt;\n          &lt;li&gt;챗봇이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;[End]&quot;&lt;/code&gt;를 만나면 대화를 끝내도록 설정&lt;/li&gt;\n        &lt;/ul&gt;\n\n        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Input: End the conversation after the farewell.\n Output:\n User: Thank you!\n Bot: You&apos;re welcome. Have a great day! [End]\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;\n      &lt;/li&gt;\n    &lt;/ol&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Max Length vs. Stop Sequence\n    &lt;ul&gt;\n      &lt;li&gt;Max Length:\n        &lt;ul&gt;\n          &lt;li&gt;응답 길이의 상한선. 모델이 토큰을 생성하다가 이 길이에 도달하면 무조건 멈춤.&lt;/li&gt;\n          &lt;li&gt;예) Max Length가 50이면 50개 토큰까지만 생성&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/li&gt;\n      &lt;li&gt;Stop Sequence:\n        &lt;ul&gt;\n          &lt;li&gt;특정 문자열을 생성하는 순간 멈춤&lt;/li&gt;\n          &lt;li&gt;예) “###”라는 Stop Sequence가 있으면, 모델이 20번째 토큰에서 “###”를 생성하면 즉시 멈춤&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Frequency Penalty vs. Presence Penalty\n    &lt;ul&gt;\n      &lt;li&gt;Frequency Penalty:\n        &lt;ul&gt;\n          &lt;li&gt;특정 토큰(단어)가 반복적으로 등장할수록 그 토큰을 선택할 확률을 낮추는 패널티&lt;/li&gt;\n          &lt;li&gt;사용 목적: 단어 중복 방지, 정확성, 간결함&lt;/li&gt;\n          &lt;li&gt;예시: FAQ 답변, 정보 요약 등&lt;/li&gt;\n        &lt;/ul&gt;\n\n        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  입력: Write a sentence about cats.\n  결과 (Frequency Penalty 낮음): &quot;Cats are cute. Cats are playful. Cats love to sleep.&quot;\n  결과 (Frequency Penalty 높음): &quot;Cats are cute, playful, and love to sleep.&quot;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;\n      &lt;/li&gt;\n      &lt;li&gt;Presence Penalty:\n        &lt;ul&gt;\n          &lt;li&gt;특정 토큰이 한 번이라도 등장했다면 그 토큰을 선택할 확률을 낮추는 패널티&lt;/li&gt;\n          &lt;li&gt;사용 목적: 컨텐츠 다양성 확보(같은 단어를 여러 번 쓰는 대신 새로운 단어를 사용하도록 유도), 다양성&lt;/li&gt;\n          &lt;li&gt;예시: 창의적 글쓰기, 스토리 생성, 광고 카피 작성 등&lt;/li&gt;\n        &lt;/ul&gt;\n\n        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  입력: Write a sentence about cats.\n  결과 (Presence Penalty 낮음): &quot;Cats are cute. Cats are playful. Cats love to sleep.&quot;\n  결과 (Presence Penalty 높음): &quot;Cats are cute. They are playful and love to sleep.&quot;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;table&gt;\n      &lt;thead&gt;\n        &lt;tr&gt;\n          &lt;th&gt;&lt;strong&gt;특징&lt;/strong&gt;&lt;/th&gt;\n          &lt;th&gt;&lt;strong&gt;Frequency Penalty&lt;/strong&gt;&lt;/th&gt;\n          &lt;th&gt;&lt;strong&gt;Presence Penalty&lt;/strong&gt;&lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n      &lt;tbody&gt;\n        &lt;tr&gt;\n          &lt;td&gt;&lt;strong&gt;기준&lt;/strong&gt;&lt;/td&gt;\n          &lt;td&gt;등장한 토큰의 &lt;strong&gt;반복 횟수&lt;/strong&gt;에 따라 적용&lt;/td&gt;\n          &lt;td&gt;등장한 토큰의 &lt;strong&gt;존재 여부&lt;/strong&gt;에 따라 적용&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;&lt;strong&gt;페널티 적용 방식&lt;/strong&gt;&lt;/td&gt;\n          &lt;td&gt;반복 횟수가 많을수록 페널티가 더 커짐&lt;/td&gt;\n          &lt;td&gt;한 번이라도 등장하면 동일하게 페널티 부과&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;&lt;strong&gt;목적&lt;/strong&gt;&lt;/td&gt;\n          &lt;td&gt;특정 단어의 &lt;strong&gt;중복 사용을 줄임&lt;/strong&gt;&lt;/td&gt;\n          &lt;td&gt;더 &lt;strong&gt;다양한 표현&lt;/strong&gt;을 유도&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;&lt;strong&gt;적용 효과&lt;/strong&gt;&lt;/td&gt;\n          &lt;td&gt;깔끔하고 중복 없는 텍스트&lt;/td&gt;\n          &lt;td&gt;창의적이고 다양한 텍스트&lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;general-tips-for-designing-prompts&quot;&gt;General Tips for Designing Prompts&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;The more descriptive and detailed the prompt is, the better the results.&lt;/li&gt;\n  &lt;li&gt;Need to experiment with a lot.&lt;/li&gt;\n  &lt;li&gt;Encourage a lot of experimentation and iteration to optimize prompts.&lt;/li&gt;\n  &lt;li&gt;Avoid saying what not to do but say what to do instead.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;examples-of-prompts&quot;&gt;Examples of Prompts&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Text Summarization&lt;/li&gt;\n  &lt;li&gt;Information Extraction&lt;/li&gt;\n  &lt;li&gt;Question Answering&lt;/li&gt;\n  &lt;li&gt;Text Classification&lt;/li&gt;\n  &lt;li&gt;Conversation(Role prompting)&lt;/li&gt;\n  &lt;li&gt;Code Generation&lt;/li&gt;\n  &lt;li&gt;Reasoning&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;zero-shot-prompting&quot;&gt;Zero-Shot Prompting&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;the prompt used to interact with the model won’t contain examples or demonstrations.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;few-shot-prompting&quot;&gt;Few-Shot Prompting&lt;/h3&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;the label space and the distribution of the input text specified by the demonstrations are both important (regardless of whether the labels are correct for individual inputs).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;h3 id=&quot;label-space와-few-shot-prompting&quot;&gt;Label Space와 Few-shot prompting&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Label Space&lt;/code&gt;: 주어진 문제에서 가능한 출력값(라벨)의 집합\n    &lt;ul&gt;\n      &lt;li&gt;ex) 영화 리뷰 감성 분석에서는 출력값이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Positive&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Negative&lt;/code&gt; 같은 감정 라벨 사용&lt;/li&gt;\n      &lt;li&gt;Label Space는 모델이 어떤 선택지를 예상해야 하는지 알려주는 역할&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;모델이 학습을 잘 하려면 input &amp;amp; label 쌍이 일관된 구조를 가져야 함.&lt;/li&gt;\n  &lt;li&gt;라벨이 실제로 맞는지 틀린지는 덜 중요하고, 예시들 사이에서 입력과 출력의 관계(패턴)와 라벨 공간의 정의가 중요한 역할&lt;/li&gt;\n  &lt;li&gt;Input Text Distribution(입력 텍스트의 분포): 프롬프트에 포함된 예시가 특정 스타일이나 패턴을 유지해야 모델이 더 잘 학습함.&lt;/li&gt;\n  &lt;li&gt;라벨의 정확성은 덜 중요: 라벨이 틀렸더라도 형식과 구조가 명확하면 모델이 작업의 맥락을 이해할 수 있음.&lt;/li&gt;\n  &lt;li&gt;Few-shot Prompting 한계: 모델이 학습한 지식으로 충분하지 않은 경우\n    &lt;ul&gt;\n      &lt;li&gt;복잡한 수학적 추론, 다단계 논리 문제, 세부적인 도메인 지식이 필요한 작업 등.&lt;/li&gt;\n      &lt;li&gt;Few-shot prompting은 모델이 이미 학습한 지식을 기반으로 동작하므로, 모델의 학습 데이터에 없는 복잡한 작업에서는 한계에 부딪힐 수 있음.&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h3 id=&quot;대안&quot;&gt;대안:&lt;/h3&gt;\n&lt;ul&gt;\n  &lt;li&gt;Fine-tuning: 모델을 특정 작업에 맞게 추가 학습시키는 과정\n    &lt;ul&gt;\n      &lt;li&gt;특정 작업에서 더 나은 성능을 발휘할 수 있도록 모델의 파라미터를 조정&lt;/li&gt;\n      &lt;li&gt;특정 도메인(예: 의학, 법률, 금융)에서 높은 정확도가 필요한 경우에 유용&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Chain-of-Thought (CoT) Prompting: 복잡한 추론 문제를 단계별로 나누어 해결하는 방식\n    &lt;ul&gt;\n      &lt;li&gt;ex) 모델이 수학 문제를 풀 때 답을 바로 생성하도록 요청하는 대신, 문제를 단계적으로 해결하는 과정을 먼저 보여주도록 설정&lt;/li&gt;\n      &lt;li&gt;장점: 모델이 단계적이고 논리적 사고를 통해 더 정확한 답을 생성할 가능성이 높아짐.&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;chain-of-thought-prompting&quot;&gt;Chain-of-Thought Prompting&lt;/h3&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Let’s think step by step&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;문장 하나 추가했는데 결과가 달라지는게 신기&lt;/li&gt;\n  &lt;li&gt;Demonstrations: 모델이 작업을 수행하는 방식을 학습하도록 도와주는 예시&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;meta-prompting&quot;&gt;Meta Prompting&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Structure-oriented: 특정 내용보다는 문제 해결의 전반적인 구조/형식/패턴에 초점을 맞춤&lt;/li&gt;\n  &lt;li&gt;Syntax-focused: 문법적 템플릿으로 응답의 형식을 유도(ex. Let’s think step by step.)&lt;/li&gt;\n  &lt;li&gt;Abstract examples: 구체적인 내용 대신 구조를 보여주는 추상적 예시를 사용하여 다양한 작업에 적용 가능&lt;/li&gt;\n  &lt;li&gt;Versatile: 수학, 프로그래밍, 이론적 질문 등 여러 도메인에서 사용&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;self-consistency&quot;&gt;Self-Consistency&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Greedy Decoding: 가장 높은 확률의 답변을 한 번만 생성&lt;/li&gt;\n  &lt;li&gt;모델이 다양한 추론 경로(reasoning paths)를 통해 여러 답변을 생성하고, 가장 일관성 있는 답변을 선택&lt;/li&gt;\n  &lt;li&gt;산술적 문제나 상식 추론 문제에서 효과적&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;generate-knowledge-prompting&quot;&gt;Generate Knowledge Prompting&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;모델이 답변을 생성하기 전에 문제와 관련된 지식을 먼저 생성&lt;/li&gt;\n  &lt;li&gt;이 지식은 이후 예측 과정에서 프롬프트로 통합되어 모델의 이해와 예측 정확도를 높이는 데 사용&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;prompt-chaining&quot;&gt;Prompt Chaining&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Divide and Conquer&lt;/li&gt;\n  &lt;li&gt;복잡한 작업을 여러 단계로 나누어 한 번에 하나씩 해결.&lt;/li&gt;\n  &lt;li&gt;하위 작업의 결과를 다음 작업의 입력으로 사용&lt;/li&gt;\n  &lt;li&gt;ex. 텍스트 요약 → 주요 정보 추출 → 답변 생성&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;tree-of-thoughts-tot&quot;&gt;Tree of Thoughts (ToT)&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;CS 알고리즘 나와서 반가웠음.&lt;/li&gt;\n  &lt;li&gt;복잡한 문제를 해결하기 위해 트리 구조를 사용하여 여러 사고 과정(thoughts)을 탐색&lt;/li&gt;\n  &lt;li&gt;Thoughts: 문제 해결을 위한 중간 단계의 사고 과정(언어 시퀀스).\n    &lt;ul&gt;\n      &lt;li&gt;예: 산수 문제에서 각 중간 계산 과정&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;각 노드: 중간 단계의 사고 과정.&lt;/li&gt;\n  &lt;li&gt;루트 노드: 초기 문제 진술.&lt;/li&gt;\n  &lt;li&gt;리프 노드: 최종 답변.&lt;/li&gt;\n  &lt;li&gt;DFS, BFS 또는 Beam Search 알고리즘을 사용하여 탐색.&lt;/li&gt;\n  &lt;li&gt;사고 과정이 트리 구조로 나타나므로 각 단계에서 무엇이 잘못되었는지 추적 가능&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;retrieval-augmented-generation-rag&quot;&gt;Retrieval Augmented Generation (RAG)&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;정보 검색 (Retrieval): 외부 데이터베이스(예: Wikipedia)에서 관련 문서를 검색하여 입력과 함께 사용&lt;/li&gt;\n  &lt;li&gt;텍스트 생성 (Generation): 검색된 문서를 컨텍스트로 사용하여 최종 응답을 생성&lt;/li&gt;\n  &lt;li&gt;모델의 내부 지식(parametric knowledge)이 고정된 문제를 해결&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;automatic-reasoning-and-tool-use-art&quot;&gt;Automatic Reasoning and Tool-use (ART)&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;LLM이 새로운 작업을 수행하기 위해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;스스로&lt;/code&gt; 중간 추론 단계를 생성하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;외부 도구&lt;/code&gt;를 사용하는 방법&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://youtu.be/6KEnz_Bdmcs?si=Yf5eV132YtXAvsJ_&quot;&gt;Youtube - 프롬프트 엔지니어링 - Automatic Reasoning and Tool-use (ART, 자동추론&amp;amp;도구사용)&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;스스로 CoT 생성&lt;/li&gt;\n  &lt;li&gt;외부 도구: 추론 과정들이 데이터셋으로 만들어져 있는 것(라이브러리, 패키지)\n    &lt;ul&gt;\n      &lt;li&gt;예) GSM8K(초등 수학 단어 문제 8,500개 세트), AQuA(딥러닝 기술의 상태를 시험하기 위한 객관식 대수 단어 문제)&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;예시\n    &lt;ul&gt;\n      &lt;li&gt;사용자의 질문을 분석한다.&lt;/li&gt;\n      &lt;li&gt;사용자의 요청을 해결할 최적의 추론 경로와 외부 도구가 무엇인지 탐색한다.&lt;/li&gt;\n      &lt;li&gt;필요에 따라 사용자가 외부 도구 라이브러리를 추가하거나 수정한다.&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;automatic-prompt-engineer-ape&quot;&gt;Automatic Prompt Engineer (APE)&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;automatic instruction generation and selection&lt;/li&gt;\n  &lt;li&gt;사람이 설계한 CoT Prompt 보다 더 나은 Zero-shot Cot Prompt 발견\n    &lt;ul&gt;\n      &lt;li&gt;예) 사람이 작성한 “Let’s think step by step” 프롬프트보다 “Let’s work this out in a step by step way to be sure we have the right answer.” 라는 프롬프트가 더 나은 성능&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;instruction 설계 과정에서 사람의 개입을 줄이고 최적화하게 도와주는 프레임워크&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;active-prompt&quot;&gt;Active-Prompt&lt;/h3&gt;\n\n&lt;p&gt;불확실한 답변에 사람이 피드백을 주고 모델 학습을 강화하는 방식. 모든 질문에 피드백을 주지 않아도 되므로 효율적임.&lt;/p&gt;\n\n&lt;ol&gt;\n  &lt;li&gt;Uncertainty Estimation: 불확실성은 답변이 얼마나 일관되었는지로 평가. 답변이 모두 동일하면 불확실성이 낮고, 답변이 다양하면 불확실성 높음.&lt;/li&gt;\n  &lt;li&gt;Selection: 모든 질문의 불확실성 점수를 정렬해서 가장 불확실한 질문 선택&lt;/li&gt;\n  &lt;li&gt;Annotation: 불확실한 질문에 대해 사람이 정확한 답변 작성. 모델이 더 나은 추론을 할 수 있도록 새로운 학습 예제 추가&lt;/li&gt;\n  &lt;li&gt;Inference: 새로 추가된 예제를 학습한 후 질문에 대해 추론을 수행&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/03/22/active-prompt.png&quot; alt=&quot;Active Prompt&quot; title=&quot;active-prompt&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;directional-stimulus-prompting&quot;&gt;Directional Stimulus Prompting&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;DSP: 프롬프트에 힌트를 명시적으로 제공해서 중요한 요소를 더 쉽게 식별할 수 있게 도와주는 방식&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Black-box Frozen LLM:&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Black-box: 내부 동작을 알거나 수정할 수 없는 시스템&lt;/li&gt;\n  &lt;li&gt;Frozen LLM: LLM이 사전 학습된 상태로 고정되어 있는것. Fine-tuning이 이루어지지 않는 상태&lt;/li&gt;\n  &lt;li&gt;모델의 파라미터나 학습 방식에 접근하거나 변경할 수 없어서 프롬프트 엔지니어링이 중요&lt;/li&gt;\n  &lt;li&gt;장점:\n    &lt;ul&gt;\n      &lt;li&gt;사전 학습된 모델을 그대로 사용해서 추가적인 학습이나 리소스 필요하지 않음.&lt;/li&gt;\n      &lt;li&gt;모델 파라미터가 고정되어 있어서 예측 가능한 동작을 수행함.&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;한계:\n    &lt;ul&gt;\n      &lt;li&gt;특정 작업에 대해 최적화 되어 있지 않을 수 있음. 특정 도메인에 맞는 성능을 보장하기 어려움(Fine-tuning 불가)&lt;/li&gt;\n      &lt;li&gt;프롬프트와 라이브러리에 의존이 높음.&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;pal-program-aided-language-models&quot;&gt;PAL (Program-Aided Language Models)&lt;/h3&gt;\n\n&lt;p&gt;프로그래밍 지원 모델. 코드나 수식을 사용해 논리적인 작업을 수행하는 방식&lt;/p&gt;\n\n&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;openai&lt;/span&gt;\n&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;\n&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;langchain_openai&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OpenAI&lt;/span&gt;\n&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;\n&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;dateutil.relativedelta&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relativedelta&lt;/span&gt;\n\n&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;llm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OpenAI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;gpt-3.5-turbo-instruct&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;question&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Today is 27 February 2023. I was born exactly 25 years ago. What is the date I was born in MM/DD/YYYY?&quot;&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;DATE_UNDERSTANDING_PROMPT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;\n    # Q: 2015년이 36시간 후에 옵니다. 오늘로부터 1주일 후의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 2015년이 36시간 후에 오므로, 오늘은 36시간 전입니다.\n    today = datetime(2015, 1, 1) - relativedelta(hours=36)\n    # 오늘로부터 1주일 후,\n    one_week_from_today = today + relativedelta(weeks=1)\n    # %m/%d/%Y 형식으로 표시된 답은\n    one_week_from_today.strftime(&apos;%m/%d/%Y&apos;)\n    # Q: 2019년의 첫 번째 날은 화요일이고, 오늘은 2019년의 첫 번째 월요일입니다. 오늘 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 2019년의 첫 번째 날이 화요일이고, 오늘이 첫 번째 월요일이라면, 오늘은 6일 후입니다.\n    today = datetime(2019, 1, 1) + relativedelta(days=6)\n    # %m/%d/%Y 형식으로 표시된 답은\n    today.strftime(&apos;%m/%d/%Y&apos;)\n    # Q: 콘서트가 06/01/1943에 예정되어 있었지만 하루 늦게 오늘로 연기되었습니다. 오늘로부터 10일 전의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 콘서트가 06/01/1943에 예정되었지만 하루 연기되었으므로 오늘은 하루 뒤입니다.\n    today = datetime(1943, 6, 1) + relativedelta(days=1)\n    # 오늘로부터 10일 전,\n    ten_days_ago = today - relativedelta(days=10)\n    # %m/%d/%Y 형식으로 표시된 답은\n    ten_days_ago.strftime(&apos;%m/%d/%Y&apos;)\n    # Q: 오늘은 1969년 4월 19일입니다. 24시간 후의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 오늘은 1969년 4월 19일입니다.\n    today = datetime(1969, 4, 19)\n    # 24시간 후,\n    later = today + relativedelta(hours=24)\n    # %m/%d/%Y 형식으로 표시된 답은\n    today.strftime(&apos;%m/%d/%Y&apos;)\n    # Q: 제인은 오늘이 2002년 3월 11일이라고 생각했지만, 사실 오늘은 하루 후인 3월 12일입니다. 24시간 후의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 제인이 오늘이 2002년 3월 11일이라고 생각했지만, 실제로 오늘은 하루 후인 3월 12일입니다.\n    today = datetime(2002, 3, 12)\n    # 24시간 후,\n    later = today + relativedelta(hours=24)\n    # %m/%d/%Y 형식으로 표시된 답은\n    later.strftime(&apos;%m/%d/%Y&apos;)\n    # Q: 제인은 2001년 2월의 마지막 날에 태어났습니다. 오늘은 제인의 16번째 생일입니다. 어제의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 제인이 2001년 2월의 마지막 날에 태어났고 오늘이 16번째 생일이라면, 오늘은 16년 후입니다.\n    today = datetime(2001, 2, 28) + relativedelta(years=16)\n    # 어제,\n    yesterday = today - relativedelta(days=1)\n    # %m/%d/%Y 형식으로 표시된 답은\n    yesterday.strftime(&apos;%m/%d/%Y&apos;)\n    # Q: {question}\n    &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;\n    \n    &lt;span class=&quot;n&quot;&gt;llm_out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;llm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATE_UNDERSTANDING_PROMPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;LLM output:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;llm_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    \n    &lt;span class=&quot;n&quot;&gt;cleaned_output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;llm_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;local_vars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cleaned_output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local_vars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    \n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;today&apos;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local_vars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Birth date:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local_vars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;today&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;%m/%d/%Y&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Error: Could not calculate the birth date&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;openai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;OPENAI_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;react-prompting&quot;&gt;ReAct Prompting&lt;/h3&gt;\n\n&lt;p&gt;추론(Reasoning) + 행동(Acting) + 관찰(Observation) 반복적으로 수행&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;Reasoning: 문제 해결을 위해 단계별 논리적 과정 생성(CoT)&lt;/li&gt;\n  &lt;li&gt;Acting: 모델이 외부에 필요한 정보 검색&lt;/li&gt;\n  &lt;li&gt;Observation: 외부 결과를 바탕으로 추론 또는 행동 결정&lt;/li&gt;\n  &lt;li&gt;외부 정보의 품질에 따라 모델 추론이 방해받을 수 있음&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;openai&lt;/span&gt;\n&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;\n&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;langchain_openai&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OpenAI&lt;/span&gt;\n&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;langchain.agents&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_tools&lt;/span&gt;\n&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;langchain.agents&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialize_agent&lt;/span&gt;\n\n    \n&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;# temperature=0: 더 결정론적이고 일관된 답변을 생성\n&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;llm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OpenAI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;gpt-3.5-turbo-instruct&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    \n    &lt;span class=&quot;c1&quot;&gt;# tools: 에이전트가 사용할 라이브러리 로드용\n&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# google-serper: Google 검색 도구 https://serper.dev/\n&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# llm-math: 수학 계산을 수행하는 도구\n&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;tools&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load_tools&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;google-serper&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;llm-math&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;llm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;llm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    \n    &lt;span class=&quot;c1&quot;&gt;# 위 도구와 LLM을 결합한 에이전트 생성\n&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# zero-shot-react-description: ReAct 프롬프팅 방식으로 질문 처리\n&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialize_agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tools&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;llm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;zero-shot-react-description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n                &lt;span class=&quot;n&quot;&gt;user_input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;\n                &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n                &lt;span class=&quot;n&quot;&gt;user_input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Please enter your query (or type &apos;exit&apos; to quit): &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;exit&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n                    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;\n            &lt;span class=&quot;c1&quot;&gt;# 입력이 한국어인 경우 에이전트에게 한국어로 답변하도록 지시\n&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\u3131&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\u3163&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\uac00&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\ud7a3&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;\n                &lt;span class=&quot;n&quot;&gt;user_input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;답변을 한국어로 해주세요: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_input&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;\n            &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;KeyboardInterrupt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Exiting...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n\n&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;openai&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;OPENAI_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;SERPER_API_KEY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;reflexion&quot;&gt;Reflexion&lt;/h3&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;self-reflection 을 통해 LangChain Agent가 과거 실수를 학습하고 성과를 개선할 수 있도록 설계된 프레임워크&lt;/li&gt;\n  &lt;li&gt;Verbal feedback을 활용하여 에이전트가 작업을 반복적으로 개선&lt;/li&gt;\n  &lt;li&gt;Actor:\n    &lt;ul&gt;\n      &lt;li&gt;LLM이 Environment(에이전트가 목표를 달성하기 위해 상호작용하는 외부 시스템)에서 행동하고 관찰 결과를 통해 추론과 작업을 수행&lt;/li&gt;\n      &lt;li&gt;행동 결과와 관찰이 단기 메모리(short-term memory)로 저장&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Evaluator:\n    &lt;ul&gt;\n      &lt;li&gt;Actor가 생성한 경로(trajectory)를 평가하여 성과 점수(reward)를 제공&lt;/li&gt;\n      &lt;li&gt;평가 방식: 규칙 기반(heuristic) 평가. LLM을 활용한 질적 평가.&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Self-Reflection:\n    &lt;ul&gt;\n      &lt;li&gt;Actor의 행동과 평가 결과를 기반으로 언어적 피드백을 생성&lt;/li&gt;\n      &lt;li&gt;피드백은 장기 메모리(long-term memory)에 저장되고, Actor가 다음 반복에서 더 나은 행동을 하도록 도움&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Define a task → Generate a trajectory → Evaluate → Perform reflection → Generate the next trajectory&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2025/03/22/reflexion.png&quot; alt=&quot;Reflexion&quot; title=&quot;Reflexion&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;When to Use Reflexion?&lt;/p&gt;\n\n&lt;p&gt;(전통적인 강화학습의 대체제, 세밀한 피드백, 메모리 활용)&lt;/p&gt;\n\n&lt;ol&gt;\n  &lt;li&gt;An agent needs to learn from trial and error:\n    &lt;ul&gt;\n      &lt;li&gt;로봇이 물체를 이동시키기 위해 최적의 경로를 찾는 과정&lt;/li&gt;\n      &lt;li&gt;잘못된 괄호 매칭 코드를 수정하며 올바른 코드를 도출&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Traditional reinforcement learning methods are impractical:\n    &lt;ul&gt;\n      &lt;li&gt;전통적인 RL은 대규모 학습 데이터와 긴 훈련 시간이 필요하며, 종종 비용이 많이 든다.&lt;/li&gt;\n      &lt;li&gt;HotPotQA와 같은 다단계 추론 작업에서 빠르고 효율적인 해결 방식을 제공&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Nuanced feedback is required:\n    &lt;ul&gt;\n      &lt;li&gt;괄호의 개수는 맞지만 순서가 잘못되었습니다”와 같은 피드백&lt;/li&gt;\n      &lt;li&gt;숫자 보상이 제공하지 못하는 세부 사항까지 전달 가능&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n  &lt;li&gt;Interpretability and explicit memory are important:\n    &lt;ul&gt;\n      &lt;li&gt;에이전트가 이전 시도에서 잘못된 행동을 한 이유를 기록하고, 이를 기반으로 새로운 계획을 세움&lt;/li&gt;\n      &lt;li&gt;예: 의사결정 작업에서 잘못된 경로를 선택한 이유를 문서화&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;multimodal-cot-prompting&quot;&gt;Multimodal CoT Prompting&lt;/h3&gt;\n\n&lt;p&gt;Text &amp;amp; Vision 결합된 상황에서 모델이 논리적 추론 과정을 통해 답변을 도출하는 방식&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h3 id=&quot;graphprompts&quot;&gt;GraphPrompts&lt;/h3&gt;\n\n&lt;p&gt;Graph 기반의 논리적 추론&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;사용자와 항목 간의 관계를 그래프로 표현하고, GraphPrompts를 사용해 개인화된 추천 생성: A 사용자가 좋아할 만한 영화는 무엇인가요?&lt;/li&gt;\n  &lt;li&gt;그래프에서 최단 경로나 특정 경로를 탐색하는 작업: Node A에서 Node B로 가는 최단 경로를 알려주세요.&lt;/li&gt;\n  &lt;li&gt;노드 간 연결 관계를 분석하여 네트워크의 특징 추출: 이 네트워크에서 가장 영향력 있는 노드는 누구인가요?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;https://www.promptingguide.ai/&quot;&gt;Prompt Engineering Guide&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n            \n          ",
        "contentSnippet": "<h3 id=\"introduction\">Introduction</h3>\n\n<p>LLM Settings</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">temperature</code>: 토큰의 선택 비중을 결정. 높을수록 창의적인 결과 생성. 낮을수록 사실을 기반한 결과 생성</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">top_p</code>: 낮으면 사실적인 결과 생성.</li>\n  <li>일반적으로 temperature 나 top_p 둘 중 하나만 변경</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">max length</code>: 모델이 생성하는 토큰 수 관리. 결과 연관성 및 비용 관리.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Stop Sequence</code>\n    <ul>\n      <li>특정 문자열을 만나면 출력을 멈추기 위해 사용</li>\n      <li>모델이 불필요하게 길거나 중복된 응답을 생성하지 않게 만들기 위해 사용함</li>\n      <li>코드, 목록, 대화 스타일 같은 특정 형식을 강제할 때 유용함</li>\n    </ul>\n\n    <p>Example:</p>\n\n    <ol>\n      <li><strong>리스트 제한</strong>:\n        <ul>\n          <li>“10개의 아이템으로 이루어진 리스트”를 생성하고 싶다면, Stop Sequence로 <code class=\"language-plaintext highlighter-rouge\">\"11.\"</code>을 지정</li>\n          <li>모델이 “11.”을 생성하지 못하게 해서 10개의 아이템으로만 리스트를 제한</li>\n        </ul>\n\n        <p><strong>예시</strong>:</p>\n\n        <div class=\"language-markdown highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> Input: Generate a list of fruits:\n Output:\n<span class=\"p\"> 1.</span> Apple\n<span class=\"p\"> 2.</span> Banana\n ...\n<span class=\"p\"> 3.</span>  Kiwi\n<span class=\"p\"> 4.</span>  (멈춤)  --&gt; \"11.\"이 Stop Sequence라면 여기서 중단됨.\n</code></pre></div>        </div>\n      </li>\n      <li><strong>대화 종료</strong>:\n        <ul>\n          <li>챗봇이 <code class=\"language-plaintext highlighter-rouge\">\"[End]\"</code>를 만나면 대화를 끝내도록 설정</li>\n        </ul>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> Input: End the conversation after the farewell.\n Output:\n User: Thank you!\n Bot: You're welcome. Have a great day! [End]\n</code></pre></div>        </div>\n      </li>\n    </ol>\n  </li>\n  <li>Max Length vs. Stop Sequence\n    <ul>\n      <li>Max Length:\n        <ul>\n          <li>응답 길이의 상한선. 모델이 토큰을 생성하다가 이 길이에 도달하면 무조건 멈춤.</li>\n          <li>예) Max Length가 50이면 50개 토큰까지만 생성</li>\n        </ul>\n      </li>\n      <li>Stop Sequence:\n        <ul>\n          <li>특정 문자열을 생성하는 순간 멈춤</li>\n          <li>예) “###”라는 Stop Sequence가 있으면, 모델이 20번째 토큰에서 “###”를 생성하면 즉시 멈춤</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>Frequency Penalty vs. Presence Penalty\n    <ul>\n      <li>Frequency Penalty:\n        <ul>\n          <li>특정 토큰(단어)가 반복적으로 등장할수록 그 토큰을 선택할 확률을 낮추는 패널티</li>\n          <li>사용 목적: 단어 중복 방지, 정확성, 간결함</li>\n          <li>예시: FAQ 답변, 정보 요약 등</li>\n        </ul>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  입력: Write a sentence about cats.\n  결과 (Frequency Penalty 낮음): \"Cats are cute. Cats are playful. Cats love to sleep.\"\n  결과 (Frequency Penalty 높음): \"Cats are cute, playful, and love to sleep.\"\n</code></pre></div>        </div>\n      </li>\n      <li>Presence Penalty:\n        <ul>\n          <li>특정 토큰이 한 번이라도 등장했다면 그 토큰을 선택할 확률을 낮추는 패널티</li>\n          <li>사용 목적: 컨텐츠 다양성 확보(같은 단어를 여러 번 쓰는 대신 새로운 단어를 사용하도록 유도), 다양성</li>\n          <li>예시: 창의적 글쓰기, 스토리 생성, 광고 카피 작성 등</li>\n        </ul>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  입력: Write a sentence about cats.\n  결과 (Presence Penalty 낮음): \"Cats are cute. Cats are playful. Cats love to sleep.\"\n  결과 (Presence Penalty 높음): \"Cats are cute. They are playful and love to sleep.\"\n</code></pre></div>        </div>\n      </li>\n    </ul>\n\n    <table>\n      <thead>\n        <tr>\n          <th><strong>특징</strong></th>\n          <th><strong>Frequency Penalty</strong></th>\n          <th><strong>Presence Penalty</strong></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td><strong>기준</strong></td>\n          <td>등장한 토큰의 <strong>반복 횟수</strong>에 따라 적용</td>\n          <td>등장한 토큰의 <strong>존재 여부</strong>에 따라 적용</td>\n        </tr>\n        <tr>\n          <td><strong>페널티 적용 방식</strong></td>\n          <td>반복 횟수가 많을수록 페널티가 더 커짐</td>\n          <td>한 번이라도 등장하면 동일하게 페널티 부과</td>\n        </tr>\n        <tr>\n          <td><strong>목적</strong></td>\n          <td>특정 단어의 <strong>중복 사용을 줄임</strong></td>\n          <td>더 <strong>다양한 표현</strong>을 유도</td>\n        </tr>\n        <tr>\n          <td><strong>적용 효과</strong></td>\n          <td>깔끔하고 중복 없는 텍스트</td>\n          <td>창의적이고 다양한 텍스트</td>\n        </tr>\n      </tbody>\n    </table>\n  </li>\n</ul>\n\n<h3 id=\"general-tips-for-designing-prompts\">General Tips for Designing Prompts</h3>\n\n<ul>\n  <li>The more descriptive and detailed the prompt is, the better the results.</li>\n  <li>Need to experiment with a lot.</li>\n  <li>Encourage a lot of experimentation and iteration to optimize prompts.</li>\n  <li>Avoid saying what not to do but say what to do instead.</li>\n</ul>\n\n<h3 id=\"examples-of-prompts\">Examples of Prompts</h3>\n\n<ul>\n  <li>Text Summarization</li>\n  <li>Information Extraction</li>\n  <li>Question Answering</li>\n  <li>Text Classification</li>\n  <li>Conversation(Role prompting)</li>\n  <li>Code Generation</li>\n  <li>Reasoning</li>\n</ul>\n\n<hr />\n\n<h3 id=\"zero-shot-prompting\">Zero-Shot Prompting</h3>\n\n<ul>\n  <li>the prompt used to interact with the model won’t contain examples or demonstrations.</li>\n</ul>\n\n<hr />\n\n<h3 id=\"few-shot-prompting\">Few-Shot Prompting</h3>\n\n<blockquote>\n  <p>the label space and the distribution of the input text specified by the demonstrations are both important (regardless of whether the labels are correct for individual inputs).</p>\n</blockquote>\n\n<h3 id=\"label-space와-few-shot-prompting\">Label Space와 Few-shot prompting</h3>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">Label Space</code>: 주어진 문제에서 가능한 출력값(라벨)의 집합\n    <ul>\n      <li>ex) 영화 리뷰 감성 분석에서는 출력값이 <code class=\"language-plaintext highlighter-rouge\">Positive</code>, <code class=\"language-plaintext highlighter-rouge\">Negative</code> 같은 감정 라벨 사용</li>\n      <li>Label Space는 모델이 어떤 선택지를 예상해야 하는지 알려주는 역할</li>\n    </ul>\n  </li>\n  <li>모델이 학습을 잘 하려면 input &amp; label 쌍이 일관된 구조를 가져야 함.</li>\n  <li>라벨이 실제로 맞는지 틀린지는 덜 중요하고, 예시들 사이에서 입력과 출력의 관계(패턴)와 라벨 공간의 정의가 중요한 역할</li>\n  <li>Input Text Distribution(입력 텍스트의 분포): 프롬프트에 포함된 예시가 특정 스타일이나 패턴을 유지해야 모델이 더 잘 학습함.</li>\n  <li>라벨의 정확성은 덜 중요: 라벨이 틀렸더라도 형식과 구조가 명확하면 모델이 작업의 맥락을 이해할 수 있음.</li>\n  <li>Few-shot Prompting 한계: 모델이 학습한 지식으로 충분하지 않은 경우\n    <ul>\n      <li>복잡한 수학적 추론, 다단계 논리 문제, 세부적인 도메인 지식이 필요한 작업 등.</li>\n      <li>Few-shot prompting은 모델이 이미 학습한 지식을 기반으로 동작하므로, 모델의 학습 데이터에 없는 복잡한 작업에서는 한계에 부딪힐 수 있음.</li>\n    </ul>\n  </li>\n</ul>\n\n<h3 id=\"대안\">대안:</h3>\n<ul>\n  <li>Fine-tuning: 모델을 특정 작업에 맞게 추가 학습시키는 과정\n    <ul>\n      <li>특정 작업에서 더 나은 성능을 발휘할 수 있도록 모델의 파라미터를 조정</li>\n      <li>특정 도메인(예: 의학, 법률, 금융)에서 높은 정확도가 필요한 경우에 유용</li>\n    </ul>\n  </li>\n  <li>Chain-of-Thought (CoT) Prompting: 복잡한 추론 문제를 단계별로 나누어 해결하는 방식\n    <ul>\n      <li>ex) 모델이 수학 문제를 풀 때 답을 바로 생성하도록 요청하는 대신, 문제를 단계적으로 해결하는 과정을 먼저 보여주도록 설정</li>\n      <li>장점: 모델이 단계적이고 논리적 사고를 통해 더 정확한 답을 생성할 가능성이 높아짐.</li>\n    </ul>\n  </li>\n</ul>\n\n<hr />\n\n<h3 id=\"chain-of-thought-prompting\">Chain-of-Thought Prompting</h3>\n\n<blockquote>\n  <p>Let’s think step by step</p>\n</blockquote>\n\n<ul>\n  <li>문장 하나 추가했는데 결과가 달라지는게 신기</li>\n  <li>Demonstrations: 모델이 작업을 수행하는 방식을 학습하도록 도와주는 예시</li>\n</ul>\n\n<hr />\n\n<h3 id=\"meta-prompting\">Meta Prompting</h3>\n\n<ul>\n  <li>Structure-oriented: 특정 내용보다는 문제 해결의 전반적인 구조/형식/패턴에 초점을 맞춤</li>\n  <li>Syntax-focused: 문법적 템플릿으로 응답의 형식을 유도(ex. Let’s think step by step.)</li>\n  <li>Abstract examples: 구체적인 내용 대신 구조를 보여주는 추상적 예시를 사용하여 다양한 작업에 적용 가능</li>\n  <li>Versatile: 수학, 프로그래밍, 이론적 질문 등 여러 도메인에서 사용</li>\n</ul>\n\n<hr />\n\n<h3 id=\"self-consistency\">Self-Consistency</h3>\n\n<ul>\n  <li>Greedy Decoding: 가장 높은 확률의 답변을 한 번만 생성</li>\n  <li>모델이 다양한 추론 경로(reasoning paths)를 통해 여러 답변을 생성하고, 가장 일관성 있는 답변을 선택</li>\n  <li>산술적 문제나 상식 추론 문제에서 효과적</li>\n</ul>\n\n<hr />\n\n<h3 id=\"generate-knowledge-prompting\">Generate Knowledge Prompting</h3>\n\n<ul>\n  <li>모델이 답변을 생성하기 전에 문제와 관련된 지식을 먼저 생성</li>\n  <li>이 지식은 이후 예측 과정에서 프롬프트로 통합되어 모델의 이해와 예측 정확도를 높이는 데 사용</li>\n</ul>\n\n<hr />\n\n<h3 id=\"prompt-chaining\">Prompt Chaining</h3>\n\n<ul>\n  <li>Divide and Conquer</li>\n  <li>복잡한 작업을 여러 단계로 나누어 한 번에 하나씩 해결.</li>\n  <li>하위 작업의 결과를 다음 작업의 입력으로 사용</li>\n  <li>ex. 텍스트 요약 → 주요 정보 추출 → 답변 생성</li>\n</ul>\n\n<hr />\n\n<h3 id=\"tree-of-thoughts-tot\">Tree of Thoughts (ToT)</h3>\n\n<ul>\n  <li>CS 알고리즘 나와서 반가웠음.</li>\n  <li>복잡한 문제를 해결하기 위해 트리 구조를 사용하여 여러 사고 과정(thoughts)을 탐색</li>\n  <li>Thoughts: 문제 해결을 위한 중간 단계의 사고 과정(언어 시퀀스).\n    <ul>\n      <li>예: 산수 문제에서 각 중간 계산 과정</li>\n    </ul>\n  </li>\n  <li>각 노드: 중간 단계의 사고 과정.</li>\n  <li>루트 노드: 초기 문제 진술.</li>\n  <li>리프 노드: 최종 답변.</li>\n  <li>DFS, BFS 또는 Beam Search 알고리즘을 사용하여 탐색.</li>\n  <li>사고 과정이 트리 구조로 나타나므로 각 단계에서 무엇이 잘못되었는지 추적 가능</li>\n</ul>\n\n<hr />\n\n<h3 id=\"retrieval-augmented-generation-rag\">Retrieval Augmented Generation (RAG)</h3>\n\n<ul>\n  <li>정보 검색 (Retrieval): 외부 데이터베이스(예: Wikipedia)에서 관련 문서를 검색하여 입력과 함께 사용</li>\n  <li>텍스트 생성 (Generation): 검색된 문서를 컨텍스트로 사용하여 최종 응답을 생성</li>\n  <li>모델의 내부 지식(parametric knowledge)이 고정된 문제를 해결</li>\n</ul>\n\n<hr />\n\n<h3 id=\"automatic-reasoning-and-tool-use-art\">Automatic Reasoning and Tool-use (ART)</h3>\n\n<ul>\n  <li>LLM이 새로운 작업을 수행하기 위해 <code class=\"language-plaintext highlighter-rouge\">스스로</code> 중간 추론 단계를 생성하고 <code class=\"language-plaintext highlighter-rouge\">외부 도구</code>를 사용하는 방법</li>\n  <li><a href=\"https://youtu.be/6KEnz_Bdmcs?si=Yf5eV132YtXAvsJ_\">Youtube - 프롬프트 엔지니어링 - Automatic Reasoning and Tool-use (ART, 자동추론&amp;도구사용)</a></li>\n  <li>스스로 CoT 생성</li>\n  <li>외부 도구: 추론 과정들이 데이터셋으로 만들어져 있는 것(라이브러리, 패키지)\n    <ul>\n      <li>예) GSM8K(초등 수학 단어 문제 8,500개 세트), AQuA(딥러닝 기술의 상태를 시험하기 위한 객관식 대수 단어 문제)</li>\n    </ul>\n  </li>\n  <li>예시\n    <ul>\n      <li>사용자의 질문을 분석한다.</li>\n      <li>사용자의 요청을 해결할 최적의 추론 경로와 외부 도구가 무엇인지 탐색한다.</li>\n      <li>필요에 따라 사용자가 외부 도구 라이브러리를 추가하거나 수정한다.</li>\n    </ul>\n  </li>\n</ul>\n\n<hr />\n\n<h3 id=\"automatic-prompt-engineer-ape\">Automatic Prompt Engineer (APE)</h3>\n\n<ul>\n  <li>automatic instruction generation and selection</li>\n  <li>사람이 설계한 CoT Prompt 보다 더 나은 Zero-shot Cot Prompt 발견\n    <ul>\n      <li>예) 사람이 작성한 “Let’s think step by step” 프롬프트보다 “Let’s work this out in a step by step way to be sure we have the right answer.” 라는 프롬프트가 더 나은 성능</li>\n    </ul>\n  </li>\n  <li>instruction 설계 과정에서 사람의 개입을 줄이고 최적화하게 도와주는 프레임워크</li>\n</ul>\n\n<hr />\n\n<h3 id=\"active-prompt\">Active-Prompt</h3>\n\n<p>불확실한 답변에 사람이 피드백을 주고 모델 학습을 강화하는 방식. 모든 질문에 피드백을 주지 않아도 되므로 효율적임.</p>\n\n<ol>\n  <li>Uncertainty Estimation: 불확실성은 답변이 얼마나 일관되었는지로 평가. 답변이 모두 동일하면 불확실성이 낮고, 답변이 다양하면 불확실성 높음.</li>\n  <li>Selection: 모든 질문의 불확실성 점수를 정렬해서 가장 불확실한 질문 선택</li>\n  <li>Annotation: 불확실한 질문에 대해 사람이 정확한 답변 작성. 모델이 더 나은 추론을 할 수 있도록 새로운 학습 예제 추가</li>\n  <li>Inference: 새로 추가된 예제를 학습한 후 질문에 대해 추론을 수행</li>\n</ol>\n\n<p><img src=\"/images/2025/03/22/active-prompt.png\" alt=\"Active Prompt\" title=\"active-prompt\" class=\"center-image\" /></p>\n\n<hr />\n\n<h3 id=\"directional-stimulus-prompting\">Directional Stimulus Prompting</h3>\n\n<ul>\n  <li>DSP: 프롬프트에 힌트를 명시적으로 제공해서 중요한 요소를 더 쉽게 식별할 수 있게 도와주는 방식</li>\n</ul>\n\n<p>Black-box Frozen LLM:</p>\n\n<ul>\n  <li>Black-box: 내부 동작을 알거나 수정할 수 없는 시스템</li>\n  <li>Frozen LLM: LLM이 사전 학습된 상태로 고정되어 있는것. Fine-tuning이 이루어지지 않는 상태</li>\n  <li>모델의 파라미터나 학습 방식에 접근하거나 변경할 수 없어서 프롬프트 엔지니어링이 중요</li>\n  <li>장점:\n    <ul>\n      <li>사전 학습된 모델을 그대로 사용해서 추가적인 학습이나 리소스 필요하지 않음.</li>\n      <li>모델 파라미터가 고정되어 있어서 예측 가능한 동작을 수행함.</li>\n    </ul>\n  </li>\n  <li>한계:\n    <ul>\n      <li>특정 작업에 대해 최적화 되어 있지 않을 수 있음. 특정 도메인에 맞는 성능을 보장하기 어려움(Fine-tuning 불가)</li>\n      <li>프롬프트와 라이브러리에 의존이 높음.</li>\n    </ul>\n  </li>\n</ul>\n\n<hr />\n\n<h3 id=\"pal-program-aided-language-models\">PAL (Program-Aided Language Models)</h3>\n\n<p>프로그래밍 지원 모델. 코드나 수식을 사용해 논리적인 작업을 수행하는 방식</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">openai</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">langchain_openai</span> <span class=\"kn\">import</span> <span class=\"n\">OpenAI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dateutil.relativedelta</span> <span class=\"kn\">import</span> <span class=\"n\">relativedelta</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">llm</span> <span class=\"o\">=</span> <span class=\"n\">OpenAI</span><span class=\"p\">(</span><span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s\">'gpt-3.5-turbo-instruct'</span><span class=\"p\">,</span> <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">question</span> <span class=\"o\">=</span> <span class=\"s\">\"Today is 27 February 2023. I was born exactly 25 years ago. What is the date I was born in MM/DD/YYYY?\"</span>\n    <span class=\"n\">DATE_UNDERSTANDING_PROMPT</span> <span class=\"o\">=</span> <span class=\"s\">\"\"\"\n    # Q: 2015년이 36시간 후에 옵니다. 오늘로부터 1주일 후의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 2015년이 36시간 후에 오므로, 오늘은 36시간 전입니다.\n    today = datetime(2015, 1, 1) - relativedelta(hours=36)\n    # 오늘로부터 1주일 후,\n    one_week_from_today = today + relativedelta(weeks=1)\n    # %m/%d/%Y 형식으로 표시된 답은\n    one_week_from_today.strftime('%m/%d/%Y')\n    # Q: 2019년의 첫 번째 날은 화요일이고, 오늘은 2019년의 첫 번째 월요일입니다. 오늘 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 2019년의 첫 번째 날이 화요일이고, 오늘이 첫 번째 월요일이라면, 오늘은 6일 후입니다.\n    today = datetime(2019, 1, 1) + relativedelta(days=6)\n    # %m/%d/%Y 형식으로 표시된 답은\n    today.strftime('%m/%d/%Y')\n    # Q: 콘서트가 06/01/1943에 예정되어 있었지만 하루 늦게 오늘로 연기되었습니다. 오늘로부터 10일 전의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 콘서트가 06/01/1943에 예정되었지만 하루 연기되었으므로 오늘은 하루 뒤입니다.\n    today = datetime(1943, 6, 1) + relativedelta(days=1)\n    # 오늘로부터 10일 전,\n    ten_days_ago = today - relativedelta(days=10)\n    # %m/%d/%Y 형식으로 표시된 답은\n    ten_days_ago.strftime('%m/%d/%Y')\n    # Q: 오늘은 1969년 4월 19일입니다. 24시간 후의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 오늘은 1969년 4월 19일입니다.\n    today = datetime(1969, 4, 19)\n    # 24시간 후,\n    later = today + relativedelta(hours=24)\n    # %m/%d/%Y 형식으로 표시된 답은\n    today.strftime('%m/%d/%Y')\n    # Q: 제인은 오늘이 2002년 3월 11일이라고 생각했지만, 사실 오늘은 하루 후인 3월 12일입니다. 24시간 후의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 제인이 오늘이 2002년 3월 11일이라고 생각했지만, 실제로 오늘은 하루 후인 3월 12일입니다.\n    today = datetime(2002, 3, 12)\n    # 24시간 후,\n    later = today + relativedelta(hours=24)\n    # %m/%d/%Y 형식으로 표시된 답은\n    later.strftime('%m/%d/%Y')\n    # Q: 제인은 2001년 2월의 마지막 날에 태어났습니다. 오늘은 제인의 16번째 생일입니다. 어제의 날짜는 MM/DD/YYYY 형식으로 무엇인가요?\n    # 제인이 2001년 2월의 마지막 날에 태어났고 오늘이 16번째 생일이라면, 오늘은 16년 후입니다.\n    today = datetime(2001, 2, 28) + relativedelta(years=16)\n    # 어제,\n    yesterday = today - relativedelta(days=1)\n    # %m/%d/%Y 형식으로 표시된 답은\n    yesterday.strftime('%m/%d/%Y')\n    # Q: {question}\n    \"\"\"</span><span class=\"p\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span>\n    \n    <span class=\"n\">llm_out</span> <span class=\"o\">=</span> <span class=\"n\">llm</span><span class=\"p\">(</span><span class=\"n\">DATE_UNDERSTANDING_PROMPT</span><span class=\"p\">.</span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">question</span><span class=\"o\">=</span><span class=\"n\">question</span><span class=\"p\">))</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"LLM output:\"</span><span class=\"p\">,</span> <span class=\"n\">llm_out</span><span class=\"p\">)</span>\n    \n    <span class=\"n\">cleaned_output</span> <span class=\"o\">=</span> <span class=\"s\">'</span><span class=\"se\">\\n</span><span class=\"s\">'</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">llm_out</span><span class=\"p\">.</span><span class=\"n\">splitlines</span><span class=\"p\">())</span>\n    <span class=\"n\">local_vars</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"k\">exec</span><span class=\"p\">(</span><span class=\"n\">cleaned_output</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"n\">local_vars</span><span class=\"p\">)</span>\n    \n    <span class=\"k\">if</span> <span class=\"s\">'today'</span> <span class=\"ow\">in</span> <span class=\"n\">local_vars</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Birth date:\"</span><span class=\"p\">,</span> <span class=\"n\">local_vars</span><span class=\"p\">[</span><span class=\"s\">'today'</span><span class=\"p\">].</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s\">'%m/%d/%Y'</span><span class=\"p\">))</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Error: Could not calculate the birth date\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">openai</span><span class=\"p\">.</span><span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n    <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s\">\"OPENAI_API_KEY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div></div>\n\n<hr />\n\n<h3 id=\"react-prompting\">ReAct Prompting</h3>\n\n<p>추론(Reasoning) + 행동(Acting) + 관찰(Observation) 반복적으로 수행</p>\n\n<ul>\n  <li>Reasoning: 문제 해결을 위해 단계별 논리적 과정 생성(CoT)</li>\n  <li>Acting: 모델이 외부에 필요한 정보 검색</li>\n  <li>Observation: 외부 결과를 바탕으로 추론 또는 행동 결정</li>\n  <li>외부 정보의 품질에 따라 모델 추론이 방해받을 수 있음</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">openai</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">langchain_openai</span> <span class=\"kn\">import</span> <span class=\"n\">OpenAI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">langchain.agents</span> <span class=\"kn\">import</span> <span class=\"n\">load_tools</span>\n<span class=\"kn\">from</span> <span class=\"nn\">langchain.agents</span> <span class=\"kn\">import</span> <span class=\"n\">initialize_agent</span>\n\n    \n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># temperature=0: 더 결정론적이고 일관된 답변을 생성\n</span>    <span class=\"n\">llm</span> <span class=\"o\">=</span> <span class=\"n\">OpenAI</span><span class=\"p\">(</span><span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s\">'gpt-3.5-turbo-instruct'</span><span class=\"p\">,</span> <span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    \n    <span class=\"c1\"># tools: 에이전트가 사용할 라이브러리 로드용\n</span>    <span class=\"c1\"># google-serper: Google 검색 도구 https://serper.dev/\n</span>    <span class=\"c1\"># llm-math: 수학 계산을 수행하는 도구\n</span>    <span class=\"n\">tools</span> <span class=\"o\">=</span> <span class=\"n\">load_tools</span><span class=\"p\">([</span><span class=\"s\">\"google-serper\"</span><span class=\"p\">,</span> <span class=\"s\">\"llm-math\"</span><span class=\"p\">],</span> <span class=\"n\">llm</span><span class=\"o\">=</span><span class=\"n\">llm</span><span class=\"p\">)</span>\n    \n    <span class=\"c1\"># 위 도구와 LLM을 결합한 에이전트 생성\n</span>    <span class=\"c1\"># zero-shot-react-description: ReAct 프롬프팅 방식으로 질문 처리\n</span>    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">initialize_agent</span><span class=\"p\">(</span><span class=\"n\">tools</span><span class=\"p\">,</span> <span class=\"n\">llm</span><span class=\"p\">,</span> <span class=\"n\">agent</span><span class=\"o\">=</span><span class=\"s\">\"zero-shot-react-description\"</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"p\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n                <span class=\"n\">user_input</span> <span class=\"o\">=</span> <span class=\"s\">' '</span><span class=\"p\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"p\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:])</span>\n                <span class=\"n\">sys</span><span class=\"p\">.</span><span class=\"n\">argv</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sys</span><span class=\"p\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">user_input</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"Please enter your query (or type 'exit' to quit): \"</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">user_input</span><span class=\"p\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s\">'exit'</span><span class=\"p\">:</span>\n                    <span class=\"k\">break</span>\n            <span class=\"c1\"># 입력이 한국어인 경우 에이전트에게 한국어로 답변하도록 지시\n</span>            <span class=\"k\">if</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"s\">'</span><span class=\"se\">\\u3131</span><span class=\"s\">'</span> <span class=\"o\">&lt;=</span> <span class=\"n\">char</span> <span class=\"o\">&lt;=</span> <span class=\"s\">'</span><span class=\"se\">\\u3163</span><span class=\"s\">'</span> <span class=\"ow\">or</span> <span class=\"s\">'</span><span class=\"se\">\\uac00</span><span class=\"s\">'</span> <span class=\"o\">&lt;=</span> <span class=\"n\">char</span> <span class=\"o\">&lt;=</span> <span class=\"s\">'</span><span class=\"se\">\\ud7a3</span><span class=\"s\">'</span> <span class=\"k\">for</span> <span class=\"n\">char</span> <span class=\"ow\">in</span> <span class=\"n\">user_input</span><span class=\"p\">):</span>\n                <span class=\"n\">user_input</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s\">\"답변을 한국어로 해주세요: </span><span class=\"si\">{</span><span class=\"n\">user_input</span><span class=\"si\">}</span><span class=\"s\">\"</span>\n            <span class=\"n\">agent</span><span class=\"p\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">user_input</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"nb\">KeyboardInterrupt</span><span class=\"p\">:</span>\n        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"</span><span class=\"se\">\\n</span><span class=\"s\">Exiting...\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"n\">__name__</span> <span class=\"o\">==</span> <span class=\"s\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">openai</span><span class=\"p\">.</span><span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n    <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s\">\"OPENAI_API_KEY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n    <span class=\"n\">os</span><span class=\"p\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s\">\"SERPER_API_KEY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"\"</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div></div>\n\n<hr />\n\n<h3 id=\"reflexion\">Reflexion</h3>\n\n<ul>\n  <li>self-reflection 을 통해 LangChain Agent가 과거 실수를 학습하고 성과를 개선할 수 있도록 설계된 프레임워크</li>\n  <li>Verbal feedback을 활용하여 에이전트가 작업을 반복적으로 개선</li>\n  <li>Actor:\n    <ul>\n      <li>LLM이 Environment(에이전트가 목표를 달성하기 위해 상호작용하는 외부 시스템)에서 행동하고 관찰 결과를 통해 추론과 작업을 수행</li>\n      <li>행동 결과와 관찰이 단기 메모리(short-term memory)로 저장</li>\n    </ul>\n  </li>\n  <li>Evaluator:\n    <ul>\n      <li>Actor가 생성한 경로(trajectory)를 평가하여 성과 점수(reward)를 제공</li>\n      <li>평가 방식: 규칙 기반(heuristic) 평가. LLM을 활용한 질적 평가.</li>\n    </ul>\n  </li>\n  <li>Self-Reflection:\n    <ul>\n      <li>Actor의 행동과 평가 결과를 기반으로 언어적 피드백을 생성</li>\n      <li>피드백은 장기 메모리(long-term memory)에 저장되고, Actor가 다음 반복에서 더 나은 행동을 하도록 도움</li>\n    </ul>\n  </li>\n  <li>Define a task → Generate a trajectory → Evaluate → Perform reflection → Generate the next trajectory</li>\n</ul>\n\n<p><img src=\"/images/2025/03/22/reflexion.png\" alt=\"Reflexion\" title=\"Reflexion\" class=\"center-image\" /></p>\n\n<p>When to Use Reflexion?</p>\n\n<p>(전통적인 강화학습의 대체제, 세밀한 피드백, 메모리 활용)</p>\n\n<ol>\n  <li>An agent needs to learn from trial and error:\n    <ul>\n      <li>로봇이 물체를 이동시키기 위해 최적의 경로를 찾는 과정</li>\n      <li>잘못된 괄호 매칭 코드를 수정하며 올바른 코드를 도출</li>\n    </ul>\n  </li>\n  <li>Traditional reinforcement learning methods are impractical:\n    <ul>\n      <li>전통적인 RL은 대규모 학습 데이터와 긴 훈련 시간이 필요하며, 종종 비용이 많이 든다.</li>\n      <li>HotPotQA와 같은 다단계 추론 작업에서 빠르고 효율적인 해결 방식을 제공</li>\n    </ul>\n  </li>\n  <li>Nuanced feedback is required:\n    <ul>\n      <li>괄호의 개수는 맞지만 순서가 잘못되었습니다”와 같은 피드백</li>\n      <li>숫자 보상이 제공하지 못하는 세부 사항까지 전달 가능</li>\n    </ul>\n  </li>\n  <li>Interpretability and explicit memory are important:\n    <ul>\n      <li>에이전트가 이전 시도에서 잘못된 행동을 한 이유를 기록하고, 이를 기반으로 새로운 계획을 세움</li>\n      <li>예: 의사결정 작업에서 잘못된 경로를 선택한 이유를 문서화</li>\n    </ul>\n  </li>\n</ol>\n\n<hr />\n\n<h3 id=\"multimodal-cot-prompting\">Multimodal CoT Prompting</h3>\n\n<p>Text &amp; Vision 결합된 상황에서 모델이 논리적 추론 과정을 통해 답변을 도출하는 방식</p>\n\n<hr />\n\n<h3 id=\"graphprompts\">GraphPrompts</h3>\n\n<p>Graph 기반의 논리적 추론</p>\n\n<ul>\n  <li>사용자와 항목 간의 관계를 그래프로 표현하고, GraphPrompts를 사용해 개인화된 추천 생성: A 사용자가 좋아할 만한 영화는 무엇인가요?</li>\n  <li>그래프에서 최단 경로나 특정 경로를 탐색하는 작업: Node A에서 Node B로 가는 최단 경로를 알려주세요.</li>\n  <li>노드 간 연결 관계를 분석하여 네트워크의 특징 추출: 이 네트워크에서 가장 영향력 있는 노드는 누구인가요?</li>\n</ul>\n\n<hr />\n\n<h1 id=\"reference\">Reference</h1>\n\n<ul>\n  <li><a href=\"https://www.promptingguide.ai/\">Prompt Engineering Guide</a></li>\n</ul>",
        "guid": "https://sungjk.github.io/2025/03/22/prompt-engineering.html",
        "isoDate": "2025-03-22T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "티스토리를 떠나야 할까? 대체 플랫폼 5곳 비교 분석 - 티스토리의 미래 3부작 (3부)",
        "link": "https://muzbox.tistory.com/483559",
        "pubDate": "Sat, 22 Mar 2025 21:23:04 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483559#entry483559comment",
        "content": "<p data-ke-size=\"size16\">티스토리를 떠나야 할지 고민하는 요즘, 마음이 참 복잡해요. 블로그 플랫폼이라는 게 한번 정착하면 옮기기가 쉽지 않잖아요. 글, 이미지, 댓글, 그리고 무엇보다 그동안 쌓아온 포스팅들... 다 옮긴다고 생각하면 머리가 지끈지끈 아파옵니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_티스토리를 떠나야 할까.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/edjmKC/btsMSlD3M9o/1CceHTivOMKhxLDI8u0zp0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/edjmKC/btsMSlD3M9o/1CceHTivOMKhxLDI8u0zp0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/edjmKC/btsMSlD3M9o/1CceHTivOMKhxLDI8u0zp0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FedjmKC%2FbtsMSlD3M9o%2F1CceHTivOMKhxLDI8u0zp0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"티스토리를 떠나야 할까? 대체 플랫폼 5곳 비교 분석\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_티스토리를 떠나야 할까.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">티스토리의 미래가 불안하다는 소식이 들리면서부터 '이제 어디로 가야 하나' 하는 고민이 시작됐어요. 여러분도 비슷한 고민하고 계시죠? 오늘은 제가 여러 블로그 플랫폼을 직접 사용해보고 비교 분석한 내용을 솔직하게 공유해 드릴게요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리 이사를 고민해야 할 신호들</b></span></h2>\n<p data-ke-size=\"size16\">티스토리가 당장 문을 닫진 않겠지만, 몇 가지 불안한 징후들이 나타나고 있어요. 이런 신호들이 보인다면 슬슬 대안을 준비해야 할 때입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>플랫폼 불안정성의 징후</i></span></h3>\n<p data-ke-size=\"size16\">요즘 티스토리에 로그인하려면 가끔 오류가 뜨더라고요. 글 작성 중에 튕기는 경우도 있고, 이미지 업로드가 예전보다 확실히 느려진 것 같아요. 이런 사소한 문제들이 쌓이다 보면 결국 큰 문제로 이어질 수 있어요.</p>\n<p data-ke-size=\"size16\">더 걱정되는 건, 관리자 측의 공지가 점점 줄어들고 있다는 점이에요. 예전엔 업데이트나 변화에 대해 미리 알려주곤 했는데, 요즘은 갑자기 바뀌어 있는 경우가 많아요. 고객센터 응답도 전보다 느려진 것 같고요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>SEO 및 트래픽 감소</i></span></h3>\n<p data-ke-size=\"size16\">제 블로그는 2년 전부터 네이버와 구글 검색 노출이 점점 줄어들고 있어요. 똑같은 콘텐츠 품질인데도 검색 순위가 자꾸 밀리는 느낌이랄까? 특히 네이버는 자사 블로그 우대 정책이 강화되면서 티스토리 블로그의 상위 노출이 점점 어려워지고 있어요.</p>\n<p data-ke-size=\"size16\">이런 검색 노출 감소는 당연히 광고 수익 감소로 이어지죠. 방문자 수가 줄면 애드센스 수익도 감소하니까요. 블로그로 부수입을 올리시는 분들이라면 이 부분이 특히 고민될 거예요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>유료화 정책 도입 가능성</i></span></h3>\n<p data-ke-size=\"size16\">솔직히 말해서, 유료화는 피할 수 없는 흐름인 것 같아요. 문제는 그 비용이 얼마나 될지, 그리고 무료 버전에선 어떤 기능이 제한될지예요. 만약 티스토리가 주요 기능을 대부분 유료로 전환한다면, 블로그 수익보다 유지비가 더 나올 수도 있잖아요?</p>\n<p data-ke-size=\"size16\">이 세 가지 중에서 <b>두 가지 이상 해당된다면</b>, 다른 플랫폼으로의 이전을 진지하게 고민해볼 때예요. 당장 무언가를 결정하기보다는, 천천히 대안을 탐색해보는 과정이 필요할 것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리 대체 플랫폼 5곳 비교</b></span></h2>\n<p data-ke-size=\"size16\">제가 직접 사용해본 5개의 플랫폼을 비교해봤어요. 각각의 특징과 장단점을 솔직하게 분석했습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>1️⃣ 네이버 블로그</i></span></h3>\n<p data-ke-size=\"size16\">네이버 블로그는 국내 검색 점유율 1위 포털에서 운영하는 만큼, 검색 최적화에 최고의 강점을 가지고 있어요. 특히 네이버 검색에서는 자사 플랫폼 우대 정책이 있어서 검색 유입에 확실히 유리합니다.</p>\n<p data-ke-size=\"size16\"><b>장점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>네이버 검색 노출이 압도적으로 유리</li>\n<li>대부분의 사용자에게 친숙한 인터페이스</li>\n<li>스마트에디터가 직관적이고 사용하기 쉬움</li>\n<li>네이버 아이디로 쉽게 시작할 수 있음</li>\n</ul>\n<p data-ke-size=\"size16\"><b>단점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>구글 애드센스 연동이 불가능해 수익화에 제한</li>\n<li>디자인 자유도가 낮고 템플릿이 제한적</li>\n<li>네이버의 정책 변화에 취약함</li>\n<li>타 플랫폼에 비해 전문적인 기능이 부족</li>\n</ul>\n<p data-ke-size=\"size16\">실제로 제 지인 중에는 티스토리에서 네이버로 옮긴 후 트래픽이 3배 이상 증가했다는 분도 있어요. 검색 최적화가 우선이라면 고려해볼 만한 옵션입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>2️⃣ 브런치 (카카오)</i></span></h3>\n<p data-ke-size=\"size16\">브런치는 카카오에서 운영하는 플랫폼으로, 감성적인 콘텐츠와 작가 중심의 커뮤니티가 특징이에요. 티스토리와 같은 카카오 계열이지만, 보다 '작품' 지향적인 플랫폼이라고 할 수 있죠.</p>\n<p data-ke-size=\"size16\"><b>장점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>깔끔하고 세련된 디자인으로 콘텐츠 집중도 높음</li>\n<li>작가로서의 브랜딩에 유리한 구조</li>\n<li>추천 시스템을 통한 새로운 독자층 확보 가능</li>\n<li>모바일 최적화가 잘 되어 있음</li>\n</ul>\n<p data-ke-size=\"size16\"><b>단점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>입점 심사가 필요해 진입 장벽이 있음</li>\n<li>광고 수익화가 거의 불가능</li>\n<li>SEO 최적화가 티스토리보다 약함</li>\n<li>콘텐츠 형식에 제한이 많음 (주로 글 중심)</li>\n</ul>\n<p data-ke-size=\"size16\">브런치는 광고 수익보다는 작가로서의 브랜딩이나 책 출간 등을 목표로 하는 분들에게 더 적합해요. 감성 에세이나 전문 지식을 공유하는 글이 주를 이루죠.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>3️⃣ 워드프레스 (독립형)</i></span></h3>\n<p data-ke-size=\"size16\">워드프레스는 전 세계에서 가장 많이 사용되는 CMS(콘텐츠 관리 시스템)로, 완전한 독립 블로그를 운영할 수 있어요. 호스팅과 도메인을 직접 구매해 설치하는 방식입니다.</p>\n<p data-ke-size=\"size16\"><b>장점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>완전한 자유도와 소유권</li>\n<li>SEO 최적화에 매우 강력</li>\n<li>다양한 플러그인으로 확장성 무한대</li>\n<li>광고, 아필리에이트, 회원제 등 수익화 방식 다양</li>\n</ul>\n<p data-ke-size=\"size16\"><b>단점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>초기 설정과 관리가 상대적으로 어려움</li>\n<li>호스팅, 도메인 비용 등 유지 비용 발생</li>\n<li>보안, 백업 등을 직접 관리해야 함</li>\n<li>기술적 지식이 어느 정도 필요함</li>\n</ul>\n<p data-ke-size=\"size16\">제가 티스토리와 병행해서 운영 중인 플랫폼이 바로 워드프레스인데요. 처음엔 설정이 복잡했지만, 익숙해지니 그 자유도가 정말 매력적이에요. 특히 수익화 면에서는 어떤 플랫폼보다 유리합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>4️⃣ 미디움 (Medium)</i></span></h3>\n<p data-ke-size=\"size16\">미디움은 글로벌 콘텐츠 플랫폼으로, 깔끔한 디자인과 강력한 커뮤니티가 특징이에요. 영어 콘텐츠가 주를 이루지만, 한글 콘텐츠도 점점 늘어나고 있습니다.</p>\n<p data-ke-size=\"size16\"><b>장점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>세련된 미니멀 디자인</li>\n<li>글로벌 독자층 접근 가능</li>\n<li>소셜 미디어 공유 및 확산에 유리</li>\n<li>파트너 프로그램을 통한 수익화 가능</li>\n</ul>\n<p data-ke-size=\"size16\"><b>단점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>한글 콘텐츠 검색 노출이 약함</li>\n<li>국내 독자층 확보가 어려움</li>\n<li>유료 구독 모델이 국내 사용자에게 생소함</li>\n<li>번역 기능이 완벽하지 않음</li>\n</ul>\n<p data-ke-size=\"size16\">영어로 콘텐츠를 작성하거나 글로벌 시장을 겨냥한다면 고려해볼 만하지만, 국내 독자를 대상으로 한다면 다소 제한적입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>5️⃣ 구글 블로거 (Blogger)</i></span></h3>\n<p data-ke-size=\"size16\">구글에서 제공하는 무료 블로그 서비스로, 간단한 설정으로 시작할 수 있어요. 애드센스와의 연동이 쉽고 안정적인 서비스가 특징입니다.</p>\n<p data-ke-size=\"size16\"><b>장점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>구글 애드센스 연동이 매우 쉬움</li>\n<li>무료로 사용 가능하며 추가 비용 없음</li>\n<li>구글 검색 최적화에 유리</li>\n<li>안정적인 서버와 속도</li>\n</ul>\n<p data-ke-size=\"size16\"><b>단점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>디자인 템플릿이 제한적</li>\n<li>네이버 검색 노출이 약함</li>\n<li>커스터마이징 옵션이 티스토리보다 적음</li>\n<li>국내 사용자층이 적어 커뮤니티 형성이 어려움</li>\n</ul>\n<p data-ke-size=\"size16\">구글 블로거는 특히 해외 트래픽을 노리거나 애드센스 수익에 집중하는 블로거에게 적합해요. 하지만 국내 검색 엔진에서의 노출은 상대적으로 약한 편입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리 유지 vs 이전: 고민의 기로</b></span></h2>\n<p data-ke-size=\"size16\">이제 가장 어려운 결정의 시간이네요. 티스토리를 계속 유지할지, 아니면 다른 플랫폼으로 이전할지 비교해봅시다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>티스토리 계속 운영할 경우</i></span></h3>\n<p data-ke-size=\"size16\"><b>장점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>지금까지 쌓아온 콘텐츠와 SEO 자산을 유지할 수 있어요</li>\n<li>익숙한 관리 환경에서 계속 작업할 수 있어 편리해요</li>\n<li>기존 구독자와 댓글 커뮤니티를 유지할 수 있죠</li>\n<li>애드센스 및 기존 수익 구조를 그대로 이어갈 수 있어요</li>\n</ul>\n<p data-ke-size=\"size16\"><b>단점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>카카오의 정책 변화에 따라 유료화될 가능성이 높아요</li>\n<li>기능 개선이나 업데이트가 느려질 수 있어요</li>\n<li>검색 엔진에서의 노출이 점점 줄어들 위험이 있죠</li>\n<li>플랫폼 자체의 불안정성 위험이 있어요</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>다른 플랫폼으로 이전할 경우</i></span></h3>\n<p data-ke-size=\"size16\"><b>장점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>새로운 검색 최적화 전략을 구사할 수 있어요</li>\n<li>브랜딩과 수익화 모델을 재설계할 기회가 됩니다</li>\n<li>새로운 UI/UX로 독자들에게 신선한 경험을 제공할 수 있어요</li>\n<li>플랫폼 종속성에서 벗어날 수 있어요 (특히 워드프레스)</li>\n</ul>\n<p data-ke-size=\"size16\"><b>단점:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>글, 이미지, 댓글 등의 백업과 이전 작업이 매우 번거로워요</li>\n<li>기존 방문자와 구독자 중 일부는 이탈할 가능성이 높아요</li>\n<li>새로운 플랫폼에 적응하는 데 시간과 노력이 필요해요</li>\n<li>SEO 순위가 처음부터 다시 시작되어 트래픽 감소가 있을 수 있어요</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  블로거 유형별 추천 플랫폼</b></span></h2>\n<p data-ke-size=\"size16\">모든 블로거에게 딱 맞는 하나의 플랫폼은 없어요. 각자의 운영 목적과 스타일에 따라 다른 선택이 필요합니다.</p>\n<p data-ke-size=\"size16\">블로거 유형 추천 플랫폼 추천 이유</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4a86e8; color: white; font-weight: bold; text-align: center;\">\n<th style=\"border: 1px solid #dddddd; padding: 8px;\">블로거 유형</th>\n<th style=\"border: 1px solid #dddddd; padding: 8px;\">추천 플랫폼</th>\n<th style=\"border: 1px solid #dddddd; padding: 8px;\">추천 이유</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"border: 1px solid #dddddd; padding: 8px; font-weight: bold;\">수익형 블로그 운영자</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">워드프레스, 구글 블로거</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">광고 배치 자유도가 높고, 애드센스 최적화가 용이함</td>\n</tr>\n<tr style=\"background-color: #f2f2f2;\">\n<td style=\"border: 1px solid #dddddd; padding: 8px; font-weight: bold;\">감성 콘텐츠 작가</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">브런치</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">깔끔한 UI로 글 자체에 집중할 수 있고, 감성 콘텐츠에 최적화됨</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #dddddd; padding: 8px; font-weight: bold;\">검색 유입이 중요한 블로거</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">네이버 블로그</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">국내 최대 포털에서의 검색 노출이 압도적으로 유리함</td>\n</tr>\n<tr style=\"background-color: #f2f2f2;\">\n<td style=\"border: 1px solid #dddddd; padding: 8px; font-weight: bold;\">글로벌 대상 콘텐츠 제작자</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">미디움</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">영어 기반 콘텐츠의 확산력이 우수하고 국제적 독자층 접근 가능</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #dddddd; padding: 8px; font-weight: bold;\">커뮤니티 중심 블로거</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">네이버 블로그, 티스토리</td>\n<td style=\"border: 1px solid #dddddd; padding: 8px;\">댓글과 소통 기능이 활성화되어 있고, 국내 사용자에게 친숙함</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>✅ 결론: 당장의 결정보다 중요한 것</b></span></h2>\n<p data-ke-size=\"size16\">솔직히 말해서, 저는 티스토리를 10년 가까이 운영해왔지만 최근에는 워드프레스도 병행하고 있어요. 왜냐하면 <b>플랫폼 하나에만 의존하는 것이 얼마나 위험한지</b> 깨달았기 때문이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">지금 고민하고 계신다면, 단순히 불안하다는 감정만으로 서둘러 결정하기보다는 <b>\"내 블로그 운영 목적과 전략에 따라 이사 여부를 판단하는 것\"</b>이 중요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그리고 무엇보다 중요한 건, <b>백업은 지금 당장 하셔야 합니다!</b> 어떤 결정을 내리든, 소중한 콘텐츠는 반드시 안전하게 보관해두세요. 또한 <b>대체 플랫폼을 미리 테스트해보는 것</b>도 현명한 전략입니다. 소규모로 새 플랫폼을 시작해 경험을 쌓아보세요.</p>\n<p data-ke-size=\"size16\">결국 플랫폼은 도구일 뿐이고, 가장 중요한 건 콘텐츠의 가치라는 점을 잊지 마세요. 어디서 글을 쓰든, 여러분의 진정성과 전문성이 담긴 콘텐츠는 언제나 가치가 있을 거예요.</p>\n<p data-ke-size=\"size16\">여러분은 어떤 플랫폼으로 옮길 생각이 있으신가요? 아니면 티스토리를 계속 지킬 준비가 되어 있으신가요? 댓글로 여러분의 고민과 선택을 나눠주세요!  &zwj;♂️ &zwj;♀️</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1742646237194\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\" data-og-description=\"한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483556\" data-og-url=\"https://muzbox.tistory.com/483556\" data-og-image=\"https://scrap.kakaocdn.net/dn/rW6Bo/hyYrXLbJNS/SZ8S302eGzbjBbvskddeK0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/diq7Dy/hyYvk52bjG/Ymuyx8jfzsvPYsJpdbr6Y1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/PGIeY/hyYvrYpm3t/XzOPKog4AnvT8k1aR0bohK/img.png?width=1408&amp;height=768&amp;face=411_330_459_382\"><a href=\"https://muzbox.tistory.com/483556\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483556\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/rW6Bo/hyYrXLbJNS/SZ8S302eGzbjBbvskddeK0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/diq7Dy/hyYvk52bjG/Ymuyx8jfzsvPYsJpdbr6Y1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/PGIeY/hyYvrYpm3t/XzOPKog4AnvT8k1aR0bohK/img.png?width=1408&amp;height=768&amp;face=411_330_459_382');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<figure id=\"og_1742646215625\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)\" data-og-description=\"카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483557\" data-og-url=\"https://muzbox.tistory.com/483557\" data-og-image=\"https://scrap.kakaocdn.net/dn/DJ2ul/hyYvqLWz0c/kiwevNkszpkihiZWp7l3DK/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/cdZnYM/hyYulYTzOs/mHWfJLJZnK89pSke8NJot1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/hRBUa/hyYr4jkNm0/qmQ7NNXn4Ol069YesAwhuK/img.png?width=1408&amp;height=768&amp;face=0_0_1408_768\"><a href=\"https://muzbox.tistory.com/483557\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483557\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/DJ2ul/hyYvqLWz0c/kiwevNkszpkihiZWp7l3DK/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/cdZnYM/hyYulYTzOs/mHWfJLJZnK89pSke8NJot1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/hRBUa/hyYr4jkNm0/qmQ7NNXn4Ol069YesAwhuK/img.png?width=1408&amp;height=768&amp;face=0_0_1408_768');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1742646227786\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"티스토리 유료화된다면? 블로거들이 꼭 알아야 할 변화와 대응법 - 티스토리의 미래 3부작 (2부)\" data-og-description=\"티스토리가 유료화된다면, 블로거들에게 어떤 변화가 있을까요?무료 플랜과 유료 플랜이 도입될 가능성을 분석하고, 블로거들이 어떻게 대비해야 할지 실질적인 전략을 제공합니다.&nbsp;&quot;티스토리\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483558\" data-og-url=\"https://muzbox.tistory.com/483558\" data-og-image=\"https://scrap.kakaocdn.net/dn/tyrRk/hyYr4jkOk0/hMIhob5n9M4WhJkLzlzbS1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/I3Xni/hyYr3kq9kl/5m35yaHhWosAiwkoyR2oH1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/smxDa/hyYuj05rnQ/TPRDKyTQY83gCoDfgSmJsk/img.png?width=1408&amp;height=768&amp;face=642_178_782_332\"><a href=\"https://muzbox.tistory.com/483558\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483558\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/tyrRk/hyYr4jkOk0/hMIhob5n9M4WhJkLzlzbS1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/I3Xni/hyYr3kq9kl/5m35yaHhWosAiwkoyR2oH1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/smxDa/hyYuj05rnQ/TPRDKyTQY83gCoDfgSmJsk/img.png?width=1408&amp;height=768&amp;face=642_178_782_332');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">티스토리 유료화된다면? 블로거들이 꼭 알아야 할 변화와 대응법 - 티스토리의 미래 3부작 (2부)</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">티스토리가 유료화된다면, 블로거들에게 어떤 변화가 있을까요?무료 플랜과 유료 플랜이 도입될 가능성을 분석하고, 블로거들이 어떻게 대비해야 할지 실질적인 전략을 제공합니다.&nbsp;\"티스토리</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>❓ 자주 묻는 질문</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1: 티스토리에서 다른 플랫폼으로 글을 옮기는 가장 쉬운 방법은?</b></p>\n<p data-ke-size=\"size16\">티스토리의 백업 기능을 이용해 XML 파일을 다운로드한 후, 워드프레스나 블로거 같은 플랫폼에서 가져오기 기능을 사용하는 것이 가장 효율적이에요. 다만 이미지나 댓글은 완벽하게 이전되지 않을 수 있으니 확인이 필요합니다.</p>\n<p data-ke-size=\"size16\"><b>Q2: 티스토리 백업은 어떻게 하나요?</b></p>\n<p data-ke-size=\"size16\">관리자 화면 &gt; 설정 &gt; 기타 설정 &gt; 백업 메뉴에서 XML 형태로 백업할 수 있어요. 이미지는 별도로 다운로드해야 하며, 정기적인 백업을 추천합니다.</p>\n<p data-ke-size=\"size16\"><b>Q3: SEO 관점에서 가장 유리한 플랫폼은?</b></p>\n<p data-ke-size=\"size16\">국내 검색엔진 최적화는 네이버 블로그, 해외 및 구글 검색 최적화는 워드프레스가 가장 유리합니다. 목표 시장에 따라 선택하세요.</p>\n<p data-ke-size=\"size16\"><b>Q4: 워드프레스 초기 비용은 얼마나 들까요?</b></p>\n<p data-ke-size=\"size16\">도메인 비용(연 1~2만원)과 호스팅 비용(월 5천원~2만원)이 기본적으로 발생합니다. 테마나 플러그인에 따라 추가 비용이 있을 수 있으나, 무료 옵션도 많이 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q5: 티스토리가 유료화된다면 비용은 어느 정도가 될까요?</b></p>\n<p data-ke-size=\"size16\">아직 정확한 정보는 없지만, 비슷한 서비스인 워드프레스닷컴이나 외국 블로그 플랫폼을 참고하면 월 5천원~2만원 선으로 예상할 수 있습니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리에서 다른 플랫폼으로 글을 옮기는 가장 쉬운 방법은?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리의 백업 기능을 이용해 XML 파일을 다운로드한 후, 워드프레스나 블로거 같은 플랫폼에서 가져오기 기능을 사용하는 것이 가장 효율적이에요. 다만 이미지나 댓글은 완벽하게 이전되지 않을 수 있으니 확인이 필요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 백업은 어떻게 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"관리자 화면 > 설정 > 기타 설정 > 백업 메뉴에서 XML 형태로 백업할 수 있어요. 이미지는 별도로 다운로드해야 하며, 정기적인 백업을 추천합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"SEO 관점에서 가장 유리한 플랫폼은?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"국내 검색엔진 최적화는 네이버 블로그, 해외 및 구글 검색 최적화는 워드프레스가 가장 유리합니다. 목표 시장에 따라 선택하세요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"워드프레스 초기 비용은 얼마나 들까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"도메인 비용(연 1~2만원)과 호스팅 비용(월 5천원~2만원)이 기본적으로 발생합니다. 테마나 플러그인에 따라 추가 비용이 있을 수 있으나, 무료 옵션도 많이 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화된다면 비용은 어느 정도가 될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아직 정확한 정보는 없지만, 비슷한 서비스인 워드프레스닷컴이나 외국 블로그 플랫폼을 참고하면 월 5천원~2만원 선으로 예상할 수 있습니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "티스토리를 떠나야 할지 고민하는 요즘, 마음이 참 복잡해요. 블로그 플랫폼이라는 게 한번 정착하면 옮기기가 쉽지 않잖아요. 글, 이미지, 댓글, 그리고 무엇보다 그동안 쌓아온 포스팅들... 다 옮긴다고 생각하면 머리가 지끈지끈 아파옵니다.\n\n\n \n티스토리의 미래가 불안하다는 소식이 들리면서부터 '이제 어디로 가야 하나' 하는 고민이 시작됐어요. 여러분도 비슷한 고민하고 계시죠? 오늘은 제가 여러 블로그 플랫폼을 직접 사용해보고 비교 분석한 내용을 솔직하게 공유해 드릴게요.\n \n  티스토리 이사를 고민해야 할 신호들\n티스토리가 당장 문을 닫진 않겠지만, 몇 가지 불안한 징후들이 나타나고 있어요. 이런 신호들이 보인다면 슬슬 대안을 준비해야 할 때입니다.\n플랫폼 불안정성의 징후\n요즘 티스토리에 로그인하려면 가끔 오류가 뜨더라고요. 글 작성 중에 튕기는 경우도 있고, 이미지 업로드가 예전보다 확실히 느려진 것 같아요. 이런 사소한 문제들이 쌓이다 보면 결국 큰 문제로 이어질 수 있어요.\n더 걱정되는 건, 관리자 측의 공지가 점점 줄어들고 있다는 점이에요. 예전엔 업데이트나 변화에 대해 미리 알려주곤 했는데, 요즘은 갑자기 바뀌어 있는 경우가 많아요. 고객센터 응답도 전보다 느려진 것 같고요.\nSEO 및 트래픽 감소\n제 블로그는 2년 전부터 네이버와 구글 검색 노출이 점점 줄어들고 있어요. 똑같은 콘텐츠 품질인데도 검색 순위가 자꾸 밀리는 느낌이랄까? 특히 네이버는 자사 블로그 우대 정책이 강화되면서 티스토리 블로그의 상위 노출이 점점 어려워지고 있어요.\n이런 검색 노출 감소는 당연히 광고 수익 감소로 이어지죠. 방문자 수가 줄면 애드센스 수익도 감소하니까요. 블로그로 부수입을 올리시는 분들이라면 이 부분이 특히 고민될 거예요.\n유료화 정책 도입 가능성\n솔직히 말해서, 유료화는 피할 수 없는 흐름인 것 같아요. 문제는 그 비용이 얼마나 될지, 그리고 무료 버전에선 어떤 기능이 제한될지예요. 만약 티스토리가 주요 기능을 대부분 유료로 전환한다면, 블로그 수익보다 유지비가 더 나올 수도 있잖아요?\n이 세 가지 중에서 두 가지 이상 해당된다면, 다른 플랫폼으로의 이전을 진지하게 고민해볼 때예요. 당장 무언가를 결정하기보다는, 천천히 대안을 탐색해보는 과정이 필요할 것 같습니다.\n \n \n  티스토리 대체 플랫폼 5곳 비교\n제가 직접 사용해본 5개의 플랫폼을 비교해봤어요. 각각의 특징과 장단점을 솔직하게 분석했습니다.\n1️⃣ 네이버 블로그\n네이버 블로그는 국내 검색 점유율 1위 포털에서 운영하는 만큼, 검색 최적화에 최고의 강점을 가지고 있어요. 특히 네이버 검색에서는 자사 플랫폼 우대 정책이 있어서 검색 유입에 확실히 유리합니다.\n장점:\n네이버 검색 노출이 압도적으로 유리\n대부분의 사용자에게 친숙한 인터페이스\n스마트에디터가 직관적이고 사용하기 쉬움\n네이버 아이디로 쉽게 시작할 수 있음\n단점:\n구글 애드센스 연동이 불가능해 수익화에 제한\n디자인 자유도가 낮고 템플릿이 제한적\n네이버의 정책 변화에 취약함\n타 플랫폼에 비해 전문적인 기능이 부족\n실제로 제 지인 중에는 티스토리에서 네이버로 옮긴 후 트래픽이 3배 이상 증가했다는 분도 있어요. 검색 최적화가 우선이라면 고려해볼 만한 옵션입니다.\n2️⃣ 브런치 (카카오)\n브런치는 카카오에서 운영하는 플랫폼으로, 감성적인 콘텐츠와 작가 중심의 커뮤니티가 특징이에요. 티스토리와 같은 카카오 계열이지만, 보다 '작품' 지향적인 플랫폼이라고 할 수 있죠.\n장점:\n깔끔하고 세련된 디자인으로 콘텐츠 집중도 높음\n작가로서의 브랜딩에 유리한 구조\n추천 시스템을 통한 새로운 독자층 확보 가능\n모바일 최적화가 잘 되어 있음\n단점:\n입점 심사가 필요해 진입 장벽이 있음\n광고 수익화가 거의 불가능\nSEO 최적화가 티스토리보다 약함\n콘텐츠 형식에 제한이 많음 (주로 글 중심)\n브런치는 광고 수익보다는 작가로서의 브랜딩이나 책 출간 등을 목표로 하는 분들에게 더 적합해요. 감성 에세이나 전문 지식을 공유하는 글이 주를 이루죠.\n3️⃣ 워드프레스 (독립형)\n워드프레스는 전 세계에서 가장 많이 사용되는 CMS(콘텐츠 관리 시스템)로, 완전한 독립 블로그를 운영할 수 있어요. 호스팅과 도메인을 직접 구매해 설치하는 방식입니다.\n장점:\n완전한 자유도와 소유권\nSEO 최적화에 매우 강력\n다양한 플러그인으로 확장성 무한대\n광고, 아필리에이트, 회원제 등 수익화 방식 다양\n단점:\n초기 설정과 관리가 상대적으로 어려움\n호스팅, 도메인 비용 등 유지 비용 발생\n보안, 백업 등을 직접 관리해야 함\n기술적 지식이 어느 정도 필요함\n제가 티스토리와 병행해서 운영 중인 플랫폼이 바로 워드프레스인데요. 처음엔 설정이 복잡했지만, 익숙해지니 그 자유도가 정말 매력적이에요. 특히 수익화 면에서는 어떤 플랫폼보다 유리합니다.\n4️⃣ 미디움 (Medium)\n미디움은 글로벌 콘텐츠 플랫폼으로, 깔끔한 디자인과 강력한 커뮤니티가 특징이에요. 영어 콘텐츠가 주를 이루지만, 한글 콘텐츠도 점점 늘어나고 있습니다.\n장점:\n세련된 미니멀 디자인\n글로벌 독자층 접근 가능\n소셜 미디어 공유 및 확산에 유리\n파트너 프로그램을 통한 수익화 가능\n단점:\n한글 콘텐츠 검색 노출이 약함\n국내 독자층 확보가 어려움\n유료 구독 모델이 국내 사용자에게 생소함\n번역 기능이 완벽하지 않음\n영어로 콘텐츠를 작성하거나 글로벌 시장을 겨냥한다면 고려해볼 만하지만, 국내 독자를 대상으로 한다면 다소 제한적입니다.\n5️⃣ 구글 블로거 (Blogger)\n구글에서 제공하는 무료 블로그 서비스로, 간단한 설정으로 시작할 수 있어요. 애드센스와의 연동이 쉽고 안정적인 서비스가 특징입니다.\n장점:\n구글 애드센스 연동이 매우 쉬움\n무료로 사용 가능하며 추가 비용 없음\n구글 검색 최적화에 유리\n안정적인 서버와 속도\n단점:\n디자인 템플릿이 제한적\n네이버 검색 노출이 약함\n커스터마이징 옵션이 티스토리보다 적음\n국내 사용자층이 적어 커뮤니티 형성이 어려움\n구글 블로거는 특히 해외 트래픽을 노리거나 애드센스 수익에 집중하는 블로거에게 적합해요. 하지만 국내 검색 엔진에서의 노출은 상대적으로 약한 편입니다.\n \n \n  티스토리 유지 vs 이전: 고민의 기로\n이제 가장 어려운 결정의 시간이네요. 티스토리를 계속 유지할지, 아니면 다른 플랫폼으로 이전할지 비교해봅시다.\n티스토리 계속 운영할 경우\n장점:\n지금까지 쌓아온 콘텐츠와 SEO 자산을 유지할 수 있어요\n익숙한 관리 환경에서 계속 작업할 수 있어 편리해요\n기존 구독자와 댓글 커뮤니티를 유지할 수 있죠\n애드센스 및 기존 수익 구조를 그대로 이어갈 수 있어요\n단점:\n카카오의 정책 변화에 따라 유료화될 가능성이 높아요\n기능 개선이나 업데이트가 느려질 수 있어요\n검색 엔진에서의 노출이 점점 줄어들 위험이 있죠\n플랫폼 자체의 불안정성 위험이 있어요\n다른 플랫폼으로 이전할 경우\n장점:\n새로운 검색 최적화 전략을 구사할 수 있어요\n브랜딩과 수익화 모델을 재설계할 기회가 됩니다\n새로운 UI/UX로 독자들에게 신선한 경험을 제공할 수 있어요\n플랫폼 종속성에서 벗어날 수 있어요 (특히 워드프레스)\n단점:\n글, 이미지, 댓글 등의 백업과 이전 작업이 매우 번거로워요\n기존 방문자와 구독자 중 일부는 이탈할 가능성이 높아요\n새로운 플랫폼에 적응하는 데 시간과 노력이 필요해요\nSEO 순위가 처음부터 다시 시작되어 트래픽 감소가 있을 수 있어요\n \n  블로거 유형별 추천 플랫폼\n모든 블로거에게 딱 맞는 하나의 플랫폼은 없어요. 각자의 운영 목적과 스타일에 따라 다른 선택이 필요합니다.\n블로거 유형 추천 플랫폼 추천 이유\n블로거 유형\n추천 플랫폼\n추천 이유\n\n\n\n\n수익형 블로그 운영자\n워드프레스, 구글 블로거\n광고 배치 자유도가 높고, 애드센스 최적화가 용이함\n\n\n감성 콘텐츠 작가\n브런치\n깔끔한 UI로 글 자체에 집중할 수 있고, 감성 콘텐츠에 최적화됨\n\n\n검색 유입이 중요한 블로거\n네이버 블로그\n국내 최대 포털에서의 검색 노출이 압도적으로 유리함\n\n\n글로벌 대상 콘텐츠 제작자\n미디움\n영어 기반 콘텐츠의 확산력이 우수하고 국제적 독자층 접근 가능\n\n\n커뮤니티 중심 블로거\n네이버 블로그, 티스토리\n댓글과 소통 기능이 활성화되어 있고, 국내 사용자에게 친숙함\n\n\n\n \n✅ 결론: 당장의 결정보다 중요한 것\n솔직히 말해서, 저는 티스토리를 10년 가까이 운영해왔지만 최근에는 워드프레스도 병행하고 있어요. 왜냐하면 플랫폼 하나에만 의존하는 것이 얼마나 위험한지 깨달았기 때문이에요.\n \n지금 고민하고 계신다면, 단순히 불안하다는 감정만으로 서둘러 결정하기보다는 \"내 블로그 운영 목적과 전략에 따라 이사 여부를 판단하는 것\"이 중요합니다.\n \n그리고 무엇보다 중요한 건, 백업은 지금 당장 하셔야 합니다! 어떤 결정을 내리든, 소중한 콘텐츠는 반드시 안전하게 보관해두세요. 또한 대체 플랫폼을 미리 테스트해보는 것도 현명한 전략입니다. 소규모로 새 플랫폼을 시작해 경험을 쌓아보세요.\n결국 플랫폼은 도구일 뿐이고, 가장 중요한 건 콘텐츠의 가치라는 점을 잊지 마세요. 어디서 글을 쓰든, 여러분의 진정성과 전문성이 담긴 콘텐츠는 언제나 가치가 있을 거예요.\n여러분은 어떤 플랫폼으로 옮길 생각이 있으신가요? 아니면 티스토리를 계속 지킬 준비가 되어 있으신가요? 댓글로 여러분의 고민과 선택을 나눠주세요!  ‍♂️ ‍♀️\n \n \n\n \n다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\n한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\nmuzbox.tistory.com\n\n\n \n카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)\n카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생\nmuzbox.tistory.com\n\n \n\n \n티스토리 유료화된다면? 블로거들이 꼭 알아야 할 변화와 대응법 - 티스토리의 미래 3부작 (2부)\n티스토리가 유료화된다면, 블로거들에게 어떤 변화가 있을까요?무료 플랜과 유료 플랜이 도입될 가능성을 분석하고, 블로거들이 어떻게 대비해야 할지 실질적인 전략을 제공합니다. \"티스토리\nmuzbox.tistory.com\n\n \n❓ 자주 묻는 질문\nQ1: 티스토리에서 다른 플랫폼으로 글을 옮기는 가장 쉬운 방법은?\n티스토리의 백업 기능을 이용해 XML 파일을 다운로드한 후, 워드프레스나 블로거 같은 플랫폼에서 가져오기 기능을 사용하는 것이 가장 효율적이에요. 다만 이미지나 댓글은 완벽하게 이전되지 않을 수 있으니 확인이 필요합니다.\nQ2: 티스토리 백업은 어떻게 하나요?\n관리자 화면 > 설정 > 기타 설정 > 백업 메뉴에서 XML 형태로 백업할 수 있어요. 이미지는 별도로 다운로드해야 하며, 정기적인 백업을 추천합니다.\nQ3: SEO 관점에서 가장 유리한 플랫폼은?\n국내 검색엔진 최적화는 네이버 블로그, 해외 및 구글 검색 최적화는 워드프레스가 가장 유리합니다. 목표 시장에 따라 선택하세요.\nQ4: 워드프레스 초기 비용은 얼마나 들까요?\n도메인 비용(연 1~2만원)과 호스팅 비용(월 5천원~2만원)이 기본적으로 발생합니다. 테마나 플러그인에 따라 추가 비용이 있을 수 있으나, 무료 옵션도 많이 있어요.\nQ5: 티스토리가 유료화된다면 비용은 어느 정도가 될까요?\n아직 정확한 정보는 없지만, 비슷한 서비스인 워드프레스닷컴이나 외국 블로그 플랫폼을 참고하면 월 5천원~2만원 선으로 예상할 수 있습니다.\n 설정 > 기타 설정 > 백업 메뉴에서 XML 형태로 백업할 수 있어요. 이미지는 별도로 다운로드해야 하며, 정기적인 백업을 추천합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"SEO 관점에서 가장 유리한 플랫폼은?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"국내 검색엔진 최적화는 네이버 블로그, 해외 및 구글 검색 최적화는 워드프레스가 가장 유리합니다. 목표 시장에 따라 선택하세요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"워드프레스 초기 비용은 얼마나 들까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"도메인 비용(연 1~2만원)과 호스팅 비용(월 5천원~2만원)이 기본적으로 발생합니다. 테마나 플러그인에 따라 추가 비용이 있을 수 있으나, 무료 옵션도 많이 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화된다면 비용은 어느 정도가 될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아직 정확한 정보는 없지만, 비슷한 서비스인 워드프레스닷컴이나 외국 블로그 플랫폼을 참고하면 월 5천원~2만원 선으로 예상할 수 있습니다.\"\n      }\n    }\n  ]\n}",
        "guid": "https://muzbox.tistory.com/483559",
        "categories": [
          "NEWS/IT 뉴스",
          "구글 블로거",
          "네이버 블로그 vs 티스토리",
          "미디움 한국어",
          "브런치 블로그",
          "블로그 백업 방법",
          "블로그 수익화",
          "블로그 이전",
          "워드프레스 장단점",
          "티스토리 대체 플랫폼",
          "티스토리 유료화"
        ],
        "isoDate": "2025-03-22T12:23:04.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "티스토리 유료화된다면? 블로거들이 꼭 알아야 할 변화와 대응법 - 티스토리의 미래 3부작 (2부)",
        "link": "https://muzbox.tistory.com/483558",
        "pubDate": "Fri, 21 Mar 2025 08:34:34 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483558#entry483558comment",
        "content": "<p data-ke-size=\"size16\">티스토리가 유료화된다면, 블로거들에게 어떤 변화가 있을까요?<br />무료 플랜과 유료 플랜이 도입될 가능성을 분석하고, 블로거들이 어떻게 대비해야 할지 실질적인 전략을 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_티스토리 유료화된다면.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/bq2adb/btsMSandWVj/Up8Bxny6fnn6CbQTSDPoZk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bq2adb/btsMSandWVj/Up8Bxny6fnn6CbQTSDPoZk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bq2adb/btsMSandWVj/Up8Bxny6fnn6CbQTSDPoZk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbq2adb%2FbtsMSandWVj%2FUp8Bxny6fnn6CbQTSDPoZk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"티스토리 유료화된다면? 블로거들이 꼭 알아야 할 변화와 대응법\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_티스토리 유료화된다면.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style1\"><span style=\"font-family: 'Noto Serif KR';\">\"티스토리가 유료화되면, 블로그 운영을 계속할 수 있을까?\"</span></blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">최근 <b>카카오가 다음을 분사를 결정</b>하면서, 티스토리의 미래도 불투명해지고 있습니다.<br />네이버 블로그, 브런치 등 경쟁 플랫폼과 차별성을 유지하려면,<br /><b>티스토리도 워드프레스처럼 유료 모델로 전환할 가능성이 있다</b>는 전망이 나오고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>무료 &amp; 유료 모델이 도입될까?</b><br />✅ <b>어떤 방식으로 유료화될 가능성이 있을까?</b><br />✅ <b>블로거들은 어떻게 대비해야 할까?</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">티스토리가 유료화될 경우 예상되는 변화와 대응 전략을 분석해 보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리, 왜 유료화 가능성이 거론될까?</b></span></h2>\n<p data-ke-size=\"size16\">지금까지 티스토리는 <b>무료 블로그 플랫폼</b>으로 운영되어 왔습니다.<br />그런데 <b>카카오가 티스토리를 계속 운영할 경우, 수익 모델 강화를 위해 유료화할 가능성이 높아지고 있습니다.</b></p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>1️⃣ 카카오는 티스토리를 수익화해야 한다</b></span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>네이버 블로그는 <b>네이버 검색과 통합되어 광고 수익을 창출</b></li>\n<li>워드프레스는 <b>독립 블로그 운영 + 유료 플랜 도입</b>으로 수익 모델 구축</li>\n<li>반면 티스토리는 광고 플랫폼으로서 경쟁력이 약해지고 있음</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>검색 트래픽이 줄어드는 상황에서, 티스토리는 새로운 수익 구조를 찾아야 합니다.</b></p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>2️⃣ 카카오는 콘텐츠 사업을 강화하고 있다</b></span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>카카오 브런치는 <b>작가 중심의 프리미엄 콘텐츠 플랫폼</b></li>\n<li>카카오뷰는 <b>큐레이션 서비스로 광고 수익을 창출</b></li>\n<li>티스토리도 단순 블로그가 아니라, 콘텐츠 수익 모델을 도입할 가능성 높음</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>즉, 티스토리는 기존 블로그 방식을 유지하기보다는, 새로운 방식의 유료 서비스로 전환될 수 있습니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리가 유료화된다면, 어떤 방식이 될까?</b></span></h2>\n<p data-ke-size=\"size16\">티스토리가 유료 모델을 도입한다면, <b>3가지 시나리오</b>가 예상됩니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  1) 무료 &amp; 유료 플랜 병행 모델 (가장 가능성 높음)</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>무료 플랜:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>기존 티스토리 블로그 운영 가능</li>\n<li><b>광고 포함 (애드센스 사용 제한 가능성)</b></li>\n<li><b>기능 일부 제한 (예: SEO 설정, 고급 테마 사용 불가)</b></li>\n</ul>\n<p data-ke-size=\"size16\">✅ <b>유료 플랜:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>광고 제거 옵션 제공</b></li>\n<li><b>SEO 최적화 기능 제공</b> (검색 노출 강화 기능 추가)</li>\n<li><b>고급 테마 지원 및 블로그 디자인 커스터마이징 가능</b></li>\n<li><b>개별 도메인 연결 가능</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>가능성이 높은 이유:</b><br />  네이버 블로그는 애드센스 적용이 불가능하지만, 티스토리는 수익형 블로그 모델을 유지해야 함<br />  카카오 입장에서 무료 사용자를 유지하면서, <b>고급 기능을 원하는 블로거들에게 유료 플랜을 제공하는 것이 현실적</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  2) 완전 유료화 (독립 블로그 플랫폼 전환)</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>독립 블로그 운영 (호스팅 기반 모델)</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>블로그를 직접 운영할 수 있도록, <b>월별 요금제 기반으로 제공</b></li>\n<li>워드프레스처럼 <b>호스팅 방식으로 전환</b></li>\n<li>사용자들이 직접 블로그를 관리하고, <b>자체 서버 및 트래픽 비용을 부담</b></li>\n</ul>\n<p data-ke-size=\"size16\">❌ <b>위험 요소:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>블로거들의 이탈 가능성이 커짐</li>\n<li>유지 비용이 증가하면서, <b>초보 블로거들이 접근하기 어려워짐</b></li>\n<li>현재 카카오의 방향성과 일치하지 않을 가능성이 있음</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>가능성이 낮은 이유:</b><br />  <b>완전 유료화할 경우, 기존 블로거들의 대량 이탈이 발생할 수 있음</b><br />  <b>카카오는 플랫폼 기반 광고 수익을 원하기 때문에, 무료 사용자도 필요함</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  3) 프리미엄 콘텐츠 모델 (브런치 스타일 도입)</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>블로그 기반 유료 콘텐츠 판매 기능 추가</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>일부 글을 유료로 제공 (구독 모델 도입 가능성)</li>\n<li>크리에이터 지원 프로그램과 연계</li>\n<li>카카오페이와 연계하여 <b>후원 및 구독 결제 기능 도입 가능</b></li>\n</ul>\n<p data-ke-size=\"size16\">❌ <b>위험 요소:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>기존 무료 블로그와의 차별성이 약해질 수 있음</li>\n<li>네이버 블로그 및 워드프레스와의 차별화 전략이 필요함</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>가능성이 있는 이유:</b><br />  브런치와 유사한 방식으로, <b>티스토리를 프리미엄 블로그로 변화시키려 할 수도 있음</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  블로거들은 어떻게 대비해야 할까?</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>✅ 1️⃣ 유료화 대비, 블로그 수익 모델 점검하기</b></span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>애드센스를 사용 중이라면, <b>무료 플랜에서 계속 허용될지 확인 필요</b></li>\n<li>SEO 기능이 제한될 가능성이 있으므로, <b>구글 검색 최적화를 미리 강화</b></li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>✅ 2️⃣ 티스토리 백업 및 마이그레이션 준비</b></span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>만약 유료화가 부담된다면, <b>워드프레스(독립 블로그), 네이버 블로그 등 대체 플랫폼 검토 필요</b></li>\n<li>블로그 데이터를 주기적으로 백업하여, <b>필요할 경우 다른 플랫폼으로 이전할 준비</b></li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>✅ 3️⃣ 대체 플랫폼 비교 분석</b></span></h3>\n<div>\n<style>\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    text-align: left;\n  }\n  th {\n    background-color: #333333; /* 타이틀 행 배경색 */\n    color: #FFFFFF; /* 글자색 */\n    padding: 12px;\n  }\n  td {\n    border: 1px solid #dddddd;\n    padding: 10px;\n  }\n  tr:nth-child(even) {\n    background-color: #f9f9f9; /* 짝수 행 배경색 */\n  }\n</style>\n</div>\n<table data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th>플랫폼</th>\n<th>특징</th>\n<th>장점</th>\n<th>단점</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><b>네이버 블로그</b></td>\n<td>네이버 검색 최적화</td>\n<td>트래픽 확보 쉬움</td>\n<td>애드센스 불가</td>\n</tr>\n<tr>\n<td><b>브런치 (카카오)</b></td>\n<td>프리미엄 콘텐츠</td>\n<td>브랜드 구축 가능</td>\n<td>광고 수익 불가</td>\n</tr>\n<tr>\n<td><b>워드프레스</b></td>\n<td>독립 운영 가능</td>\n<td>애드센스&middot;광고 가능</td>\n<td>유지 비용 발생</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">  <b>티스토리를 계속 유지할지, 대체 플랫폼으로 이동할지는 유료화 방식에 따라 결정해야 합니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  마무리: 티스토리, 유료화될까? 블로거들은 어떻게 준비해야 할까?</b></span></h2>\n<p data-ke-size=\"size16\">✅ <b>티스토리는 네이버 블로그, 워드프레스와 차별화하기 위해 유료 모델을 도입할 가능성이 있다.</b><br />✅ <b>가장 현실적인 시나리오는 &lsquo;무료 &amp; 유료 플랜 병행 모델&rsquo;로, 광고 제거 및 SEO 강화 옵션을 제공하는 방식이 될 가능성이 크다.</b><br />✅ <b>블로거들은 지금부터 블로그 데이터를 백업하고, SEO 최적화를 강화하면서 유료화에 대비해야 한다.</b></p>\n<p data-ke-size=\"size16\">  <b>티스토리가 유료화될 경우, 블로거들이 생존할 방법을 미리 준비해야 합니다!</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1742513416014\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\" data-og-description=\"한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483556\" data-og-url=\"https://muzbox.tistory.com/483556\" data-og-image=\"https://scrap.kakaocdn.net/dn/FilE6/hyYuqS2ZY0/b2cfgZLyRxhKqGxykHKum0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/8nl3Z/hyYvimD8St/EN81cRzQOOgSTKpBiiKNKK/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/A7DKC/hyYvrKFqx7/XGJC1XKn2gretd02R6OTnK/img.png?width=1408&amp;height=768&amp;face=411_330_459_382\"><a href=\"https://muzbox.tistory.com/483556\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483556\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/FilE6/hyYuqS2ZY0/b2cfgZLyRxhKqGxykHKum0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/8nl3Z/hyYvimD8St/EN81cRzQOOgSTKpBiiKNKK/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/A7DKC/hyYvrKFqx7/XGJC1XKn2gretd02R6OTnK/img.png?width=1408&amp;height=768&amp;face=411_330_459_382');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1742513426556\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)\" data-og-description=\"카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483557\" data-og-url=\"https://muzbox.tistory.com/483557\" data-og-image=\"https://scrap.kakaocdn.net/dn/TZ24Y/hyYujzAQ8G/d81MYS8HI2ghUN3t3dnLlk/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/pKNWY/hyYuqyIQtc/6mJ2G3SRgZbndmbWYa7FA0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/dYzppk/hyYvqLJLZu/mEk7Gc1cuOlzxR7kXQ9Yg0/img.png?width=1408&amp;height=768&amp;face=0_0_1408_768\"><a href=\"https://muzbox.tistory.com/483557\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483557\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/TZ24Y/hyYujzAQ8G/d81MYS8HI2ghUN3t3dnLlk/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/pKNWY/hyYuqyIQtc/6mJ2G3SRgZbndmbWYa7FA0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/dYzppk/hyYvqLJLZu/mEk7Gc1cuOlzxR7kXQ9Yg0/img.png?width=1408&amp;height=768&amp;face=0_0_1408_768');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>❓ Q&amp;A</b></span></h3>\n<p data-ke-size=\"size16\"><b>Q1. 티스토리가 유료화될 가능성이 있나요?</b><br />A. 카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 유료화된다면 어떤 방식으로 진행될까요?</b><br />A. 무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?</b><br />A. 검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. 티스토리가 완전 유료화될 가능성도 있나요?</b><br />A. 완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.</p>\n<p data-ke-size=\"size16\"><b>Q5. 유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?</b><br />A. 대체 플랫폼으로는 <b>네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능)</b> 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.<b></b></p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화된다면 어떤 방식으로 진행될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 완전 유료화될 가능성도 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"대체 플랫폼으로는 네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능) 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "티스토리가 유료화된다면, 블로거들에게 어떤 변화가 있을까요?\n무료 플랜과 유료 플랜이 도입될 가능성을 분석하고, 블로거들이 어떻게 대비해야 할지 실질적인 전략을 제공합니다.\n\n\n \n\"티스토리가 유료화되면, 블로그 운영을 계속할 수 있을까?\"\n \n최근 카카오가 다음을 분사를 결정하면서, 티스토리의 미래도 불투명해지고 있습니다.\n네이버 블로그, 브런치 등 경쟁 플랫폼과 차별성을 유지하려면,\n티스토리도 워드프레스처럼 유료 모델로 전환할 가능성이 있다는 전망이 나오고 있습니다.\n \n✅ 무료 & 유료 모델이 도입될까?\n✅ 어떤 방식으로 유료화될 가능성이 있을까?\n✅ 블로거들은 어떻게 대비해야 할까?\n \n티스토리가 유료화될 경우 예상되는 변화와 대응 전략을 분석해 보겠습니다.\n \n \n  티스토리, 왜 유료화 가능성이 거론될까?\n지금까지 티스토리는 무료 블로그 플랫폼으로 운영되어 왔습니다.\n그런데 카카오가 티스토리를 계속 운영할 경우, 수익 모델 강화를 위해 유료화할 가능성이 높아지고 있습니다.\n1️⃣ 카카오는 티스토리를 수익화해야 한다\n네이버 블로그는 네이버 검색과 통합되어 광고 수익을 창출\n워드프레스는 독립 블로그 운영 + 유료 플랜 도입으로 수익 모델 구축\n반면 티스토리는 광고 플랫폼으로서 경쟁력이 약해지고 있음\n  검색 트래픽이 줄어드는 상황에서, 티스토리는 새로운 수익 구조를 찾아야 합니다.\n2️⃣ 카카오는 콘텐츠 사업을 강화하고 있다\n카카오 브런치는 작가 중심의 프리미엄 콘텐츠 플랫폼\n카카오뷰는 큐레이션 서비스로 광고 수익을 창출\n티스토리도 단순 블로그가 아니라, 콘텐츠 수익 모델을 도입할 가능성 높음\n  즉, 티스토리는 기존 블로그 방식을 유지하기보다는, 새로운 방식의 유료 서비스로 전환될 수 있습니다.\n \n  티스토리가 유료화된다면, 어떤 방식이 될까?\n티스토리가 유료 모델을 도입한다면, 3가지 시나리오가 예상됩니다.\n  1) 무료 & 유료 플랜 병행 모델 (가장 가능성 높음)\n✅ 무료 플랜:\n기존 티스토리 블로그 운영 가능\n광고 포함 (애드센스 사용 제한 가능성)\n기능 일부 제한 (예: SEO 설정, 고급 테마 사용 불가)\n✅ 유료 플랜:\n광고 제거 옵션 제공\nSEO 최적화 기능 제공 (검색 노출 강화 기능 추가)\n고급 테마 지원 및 블로그 디자인 커스터마이징 가능\n개별 도메인 연결 가능\n  가능성이 높은 이유:\n  네이버 블로그는 애드센스 적용이 불가능하지만, 티스토리는 수익형 블로그 모델을 유지해야 함\n  카카오 입장에서 무료 사용자를 유지하면서, 고급 기능을 원하는 블로거들에게 유료 플랜을 제공하는 것이 현실적\n \n  2) 완전 유료화 (독립 블로그 플랫폼 전환)\n✅ 독립 블로그 운영 (호스팅 기반 모델)\n블로그를 직접 운영할 수 있도록, 월별 요금제 기반으로 제공\n워드프레스처럼 호스팅 방식으로 전환\n사용자들이 직접 블로그를 관리하고, 자체 서버 및 트래픽 비용을 부담\n❌ 위험 요소:\n블로거들의 이탈 가능성이 커짐\n유지 비용이 증가하면서, 초보 블로거들이 접근하기 어려워짐\n현재 카카오의 방향성과 일치하지 않을 가능성이 있음\n  가능성이 낮은 이유:\n  완전 유료화할 경우, 기존 블로거들의 대량 이탈이 발생할 수 있음\n  카카오는 플랫폼 기반 광고 수익을 원하기 때문에, 무료 사용자도 필요함\n \n  3) 프리미엄 콘텐츠 모델 (브런치 스타일 도입)\n✅ 블로그 기반 유료 콘텐츠 판매 기능 추가\n일부 글을 유료로 제공 (구독 모델 도입 가능성)\n크리에이터 지원 프로그램과 연계\n카카오페이와 연계하여 후원 및 구독 결제 기능 도입 가능\n❌ 위험 요소:\n기존 무료 블로그와의 차별성이 약해질 수 있음\n네이버 블로그 및 워드프레스와의 차별화 전략이 필요함\n  가능성이 있는 이유:\n  브런치와 유사한 방식으로, 티스토리를 프리미엄 블로그로 변화시키려 할 수도 있음\n \n \n  블로거들은 어떻게 대비해야 할까?\n✅ 1️⃣ 유료화 대비, 블로그 수익 모델 점검하기\n애드센스를 사용 중이라면, 무료 플랜에서 계속 허용될지 확인 필요\nSEO 기능이 제한될 가능성이 있으므로, 구글 검색 최적화를 미리 강화\n✅ 2️⃣ 티스토리 백업 및 마이그레이션 준비\n만약 유료화가 부담된다면, 워드프레스(독립 블로그), 네이버 블로그 등 대체 플랫폼 검토 필요\n블로그 데이터를 주기적으로 백업하여, 필요할 경우 다른 플랫폼으로 이전할 준비\n✅ 3️⃣ 대체 플랫폼 비교 분석\n플랫폼\n특징\n장점\n단점\n\n\n\n\n네이버 블로그\n네이버 검색 최적화\n트래픽 확보 쉬움\n애드센스 불가\n\n\n브런치 (카카오)\n프리미엄 콘텐츠\n브랜드 구축 가능\n광고 수익 불가\n\n\n워드프레스\n독립 운영 가능\n애드센스·광고 가능\n유지 비용 발생\n\n\n\n  티스토리를 계속 유지할지, 대체 플랫폼으로 이동할지는 유료화 방식에 따라 결정해야 합니다.\n \n  마무리: 티스토리, 유료화될까? 블로거들은 어떻게 준비해야 할까?\n✅ 티스토리는 네이버 블로그, 워드프레스와 차별화하기 위해 유료 모델을 도입할 가능성이 있다.\n✅ 가장 현실적인 시나리오는 ‘무료 & 유료 플랜 병행 모델’로, 광고 제거 및 SEO 강화 옵션을 제공하는 방식이 될 가능성이 크다.\n✅ 블로거들은 지금부터 블로그 데이터를 백업하고, SEO 최적화를 강화하면서 유료화에 대비해야 한다.\n  티스토리가 유료화될 경우, 블로거들이 생존할 방법을 미리 준비해야 합니다!\n \n \n\n \n다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\n한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\nmuzbox.tistory.com\n\n \n\n \n카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)\n카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생\nmuzbox.tistory.com\n\n \n❓ Q&A\nQ1. 티스토리가 유료화될 가능성이 있나요?\nA. 카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\nQ2. 유료화된다면 어떤 방식으로 진행될까요?\nA. 무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.\nQ3. 티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?\nA. 검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\nQ4. 티스토리가 완전 유료화될 가능성도 있나요?\nA. 완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.\nQ5. 유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?\nA. 대체 플랫폼으로는 네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능) 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화된다면 어떤 방식으로 진행될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 완전 유료화될 가능성도 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"대체 플랫폼으로는 네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능) 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.\"\n      }\n    }\n  ]\n}",
        "guid": "https://muzbox.tistory.com/483558",
        "categories": [
          "NEWS/IT 뉴스",
          "블로그 마이그레이션",
          "블로그 유료 모델",
          "카카오 다음 분사",
          "티스토리 SEO",
          "티스토리 광고 정책",
          "티스토리 대체 플랫폼",
          "티스토리 미래",
          "티스토리 애드센스",
          "티스토리 워드프레스",
          "티스토리 유료화"
        ],
        "isoDate": "2025-03-20T23:34:34.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)",
        "link": "https://muzbox.tistory.com/483557",
        "pubDate": "Thu, 20 Mar 2025 10:57:22 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483557#entry483557comment",
        "content": "<p data-ke-size=\"size16\">카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생존 전략을 살펴봅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_카카오, 다음과 결별하다 티스토리의 앞날은.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/cw0jkl/btsMPtO890X/IDCMp1KnpuSlRlU3EbWYu0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cw0jkl/btsMPtO890X/IDCMp1KnpuSlRlU3EbWYu0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cw0jkl/btsMPtO890X/IDCMp1KnpuSlRlU3EbWYu0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcw0jkl%2FbtsMPtO890X%2FIDCMp1KnpuSlRlU3EbWYu0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"카카오, 다음과 결별하다! 티스토리의 앞날은?\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_카카오, 다음과 결별하다 티스토리의 앞날은.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">얼마 전, 카카오가 포털 서비스 &lsquo;다음(Daum)&rsquo;을 분사한다고 발표했습니다. 이로 인해 <b>다음과 함께 운영되던 블로그 플랫폼, 티스토리의 미래도 불확실해졌습니다. </b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다음이 독립하면 <b>티스토리가 다음과 함께 가는 것인지</b>,아니면 <b>카카오가 유지하는 것인지에 따라 </b>블로거들에게 미치는 영향이 크게 달라질 것입니다. 그렇다면, 티스토리는 어디로 향하게 될까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  카카오와 다음의 분사, 왜 일어났을까?</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>1️⃣ 다음, 한때 &lsquo;국민 포털&rsquo;에서 잊힌 존재로</b></span></h3>\n<p data-ke-size=\"size16\">다음은 2000년대 초반만 해도 네이버보다 먼저 시장을 선점한 강력한 포털이었습니다.<br /><b>한메일(Hanmail)</b>, <b>다음 카페</b>, <b>블로그</b> 등을 통해 커뮤니티 중심의 서비스를 제공하며 많은 사용자층을 확보했죠.</p>\n<p data-ke-size=\"size16\">하지만, 2010년대 이후 <b>네이버의 통합 검색과 구글의 부상</b>으로 인해 점유율이 계속 하락했습니다.<br />2024년 2월 기준, 다음의 국내 검색 시장 점유율은 <b>2.72%</b>로 네이버(약 60%)와 구글(약 40%)에 크게 밀린 상태입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>2️⃣ 카카오는 왜 다음을 버릴까?</b></span></h3>\n<p data-ke-size=\"size16\">카카오는 이제 <b>포털보다 &lsquo;AI&rsquo;와 &lsquo;카카오톡&rsquo; 중심의 전략을 펼치고 있습니다.</b><br />카카오 대표인 정신아는 &ldquo;카톡과 AI가 핵심 사업이며, 관련 없는 분야는 정리하겠다&rdquo;고 밝혔습니다.</p>\n<p data-ke-size=\"size16\">즉, <b>검색과 포털 사업이 카카오의 핵심이 아니게 되었고</b>,<br />경영 효율화를 위해 <b>다음을 떼어내는 것</b>이 불가피한 선택이었던 것입니다.</p>\n<p data-ke-size=\"size16\">  <b>그렇다면, 티스토리는 어떻게 될까요?</b></p>\n<figure id=\"og_1742435760521\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\" data-og-description=\"한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483556\" data-og-url=\"https://muzbox.tistory.com/483556\" data-og-image=\"https://scrap.kakaocdn.net/dn/bvEi85/hyYvfcfkad/j7N7Aa3J8U4qexLcyKtGVk/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/JwuYZ/hyYrPsDNe7/qtM77YkyfXbHnzkLhwyfu1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/bfvsXt/hyYvqSnDRJ/odUkJq95rCqUrrADUntzdk/img.png?width=1408&amp;height=768&amp;face=411_330_459_382\"><a href=\"https://muzbox.tistory.com/483556\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483556\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bvEi85/hyYvfcfkad/j7N7Aa3J8U4qexLcyKtGVk/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/JwuYZ/hyYrPsDNe7/qtM77YkyfXbHnzkLhwyfu1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/bfvsXt/hyYvqSnDRJ/odUkJq95rCqUrrADUntzdk/img.png?width=1408&amp;height=768&amp;face=411_330_459_382');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리의 미래, 다음이 가져갈까? 카카오가 유지할까?</b></span></h2>\n<p data-ke-size=\"size16\">티스토리는 원래 <b>다음이 2007년에 인수한 블로그 서비스</b>입니다.<br />이후 다음-카카오 합병으로 인해 카카오 소속이 되었지만,<br />검색 점유율이 떨어지면서 점점 홀대받아 온 것이 사실입니다.</p>\n<p data-ke-size=\"size16\">이번 분사 결정으로 <b>티스토리가 다음으로 가게 될지, 아니면 카카오가 유지할지</b>가 최대 관건입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  시나리오 1: 티스토리가 &lsquo;다음&rsquo; 소속이 된다면?</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>가능한 변화:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>다음 검색과의 연계 강화</b> &rarr; 티스토리 블로그가 다음 검색에서 우선 노출될 가능성</li>\n<li><b>검색 최적화(SEO) 기능 개선</b> &rarr; 네이버 블로그와 경쟁하기 위한 전략 추진</li>\n</ul>\n<p data-ke-size=\"size16\">❌ <b>위험 요소:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>다음 자체의 점유율이 낮아 티스토리 트래픽이 오히려 감소할 수도 있음</b></li>\n<li><b>다음이 독립 법인으로 성공하지 못하면, 티스토리도 불안정해질 가능성</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>결론:</b><br />  다음이 티스토리를 가져간다면 <b>검색 노출을 강화하려 할 가능성이 크지만</b>,<br />  다음 자체의 점유율이 낮아 <b>블로그 트래픽 확보가 어려울 수 있다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  시나리오 2: 티스토리를 &lsquo;카카오&rsquo;가 유지한다면?</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>가능한 변화:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>카카오의 AI 검색과 연계</b> &rarr; 카카오톡, 브런치, 카카오뷰와 통합될 가능성</li>\n<li><b>유료화 가능성 증가</b> &rarr; 워드프레스처럼 유료 블로그 모델 도입 가능</li>\n</ul>\n<p data-ke-size=\"size16\">❌ <b>위험 요소:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>카카오가 티스토리에 대한 관심이 크지 않다면, 방치될 가능성도 있음</b></li>\n<li><b>카카오뷰&middot;브런치에 흡수될 경우, 기존 블로그 방식이 사라질 수도 있음</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>결론:</b><br />  <b>카카오가 유지한다면, 티스토리는 검색보다는 &lsquo;콘텐츠 플랫폼&rsquo;으로 변할 가능성이 크다.</b><br />  <b>유료화될 경우, 블로거들의 비용 부담이 커질 수 있다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  블로거들이 지금 준비해야 할 것!</b></span></h2>\n<p data-ke-size=\"size16\">티스토리가 어디로 가든, <b>블로거들은 대비해야 합니다.</b><br />트래픽과 수익을 유지하려면 <b>지금부터 대체 전략을 고민해야 합니다.</b></p>\n<h3 data-ke-size=\"size23\"><b>✅ 1️⃣ 검색 트래픽 변화 대비하기</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>티스토리가 다음 소속이 된다면, 구글 SEO 최적화가 더 중요해짐</b></li>\n<li><b>카카오가 유지한다면, 카카오톡 및 카카오뷰 활용이 중요</b></li>\n</ul>\n<h3 data-ke-size=\"size23\"><b>✅ 2️⃣ 블로그 백업 및 데이터 관리 필수</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>백업을 정기적으로 진행해 만일의 사태에 대비하기</b></li>\n<li><b>티스토리가 급격히 변화할 경우, 빠르게 대체 플랫폼으로 이동할 준비</b></li>\n</ul>\n<h3 data-ke-size=\"size23\"><b>✅ 3️⃣ 대체 블로그 플랫폼 고려하기</b></h3>\n<p data-ke-size=\"size16\">티스토리가 변할 경우를 대비해, <b>다른 블로그 플랫폼을 미리 알아두는 것도 중요합니다.</b><br />  <b>티스토리를 계속 사용할지, 떠날지는 상황을 보면서 신중하게 결정해야 합니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  마무리: 티스토리, 변화 속에서 살아남을 수 있을까?</b></span></h2>\n<p data-ke-size=\"size16\">카카오와 다음의 결별로 인해 <b>티스토리는 변화를 피할 수 없습니다.</b><br /><b>다음과 함께 독립하든, 카카오가 유지하든, 기존 블로거들에게 미치는 영향은 상당할 것입니다.</b></p>\n<p data-ke-size=\"size16\">✅ <b>티스토리가 검색 최적화로 가든, 콘텐츠 플랫폼으로 변화하든, 블로거들은 유입 전략을 다시 짜야 합니다.</b><br />✅ <b>유료화 가능성, 검색 노출 변화, 플랫폼 통합 여부 등을 면밀히 주시해야 합니다.</b><br />✅ <b>무엇보다, 백업과 대체 플랫폼을 준비하는 것이 가장 중요한 생존 전략이 될 것입니다.</b><b></b></p>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><b>❓ Q&amp;A</b></h3>\n<p data-ke-size=\"size16\"><b>Q1. 카카오가 다음을 분사한 이유는 무엇인가요?</b><br />A. 카카오는 AI와 카카오톡 중심의 전략을 추진하면서, 검색&middot;포털 사업이 핵심이 아니라고 판단했습니다. 다음의 검색 점유율이 2.72%로 급락하면서, 독립 운영이 더 효율적이라는 결론을 내렸습니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 티스토리는 다음과 함께 가나요, 아니면 카카오가 유지하나요?</b><br />A. 아직 확정되지 않았지만, 다음과 함께 독립할 경우 검색 최적화 전략을 강화할 가능성이 크고, 카카오가 유지하면 브런치&middot;카카오뷰와 결합되면서 콘텐츠 플랫폼으로 변화할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 티스토리 블로거들은 지금 무엇을 준비해야 할까요?</b><br />A. 검색 트래픽 변화를 대비해 <b>구글 SEO 최적화</b>를 강화하고, <b>블로그 백업을 주기적으로 진행</b>해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. 티스토리가 유료화될 가능성이 있나요?</b><br />A. 카카오가 티스토리를 유지한다면, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오가 다음을 분사한 이유는 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오는 AI와 카카오톡 중심의 전략을 추진하면서, 검색·포털 사업이 핵심이 아니라고 판단했습니다. 다음의 검색 점유율이 2.72%로 급락하면서, 독립 운영이 더 효율적이라는 결론을 내렸습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리는 다음과 함께 가나요, 아니면 카카오가 유지하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 확정된 것은 없지만, 다음이 티스토리를 운영할 경우 검색 최적화 전략을 강화할 가능성이 크며, 반면 카카오가 유지하면 브런치·카카오뷰와 통합될 가능성이 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 지금 무엇을 준비해야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생존 전략을 살펴봅니다.\n\n\n \n얼마 전, 카카오가 포털 서비스 ‘다음(Daum)’을 분사한다고 발표했습니다. 이로 인해 다음과 함께 운영되던 블로그 플랫폼, 티스토리의 미래도 불확실해졌습니다. \n \n다음이 독립하면 티스토리가 다음과 함께 가는 것인지,아니면 카카오가 유지하는 것인지에 따라 블로거들에게 미치는 영향이 크게 달라질 것입니다. 그렇다면, 티스토리는 어디로 향하게 될까요?\n \n  카카오와 다음의 분사, 왜 일어났을까?\n1️⃣ 다음, 한때 ‘국민 포털’에서 잊힌 존재로\n다음은 2000년대 초반만 해도 네이버보다 먼저 시장을 선점한 강력한 포털이었습니다.\n한메일(Hanmail), 다음 카페, 블로그 등을 통해 커뮤니티 중심의 서비스를 제공하며 많은 사용자층을 확보했죠.\n하지만, 2010년대 이후 네이버의 통합 검색과 구글의 부상으로 인해 점유율이 계속 하락했습니다.\n2024년 2월 기준, 다음의 국내 검색 시장 점유율은 2.72%로 네이버(약 60%)와 구글(약 40%)에 크게 밀린 상태입니다.\n2️⃣ 카카오는 왜 다음을 버릴까?\n카카오는 이제 포털보다 ‘AI’와 ‘카카오톡’ 중심의 전략을 펼치고 있습니다.\n카카오 대표인 정신아는 “카톡과 AI가 핵심 사업이며, 관련 없는 분야는 정리하겠다”고 밝혔습니다.\n즉, 검색과 포털 사업이 카카오의 핵심이 아니게 되었고,\n경영 효율화를 위해 다음을 떼어내는 것이 불가피한 선택이었던 것입니다.\n  그렇다면, 티스토리는 어떻게 될까요?\n\n \n다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\n한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\nmuzbox.tistory.com\n\n \n \n  티스토리의 미래, 다음이 가져갈까? 카카오가 유지할까?\n티스토리는 원래 다음이 2007년에 인수한 블로그 서비스입니다.\n이후 다음-카카오 합병으로 인해 카카오 소속이 되었지만,\n검색 점유율이 떨어지면서 점점 홀대받아 온 것이 사실입니다.\n이번 분사 결정으로 티스토리가 다음으로 가게 될지, 아니면 카카오가 유지할지가 최대 관건입니다.\n  시나리오 1: 티스토리가 ‘다음’ 소속이 된다면?\n✅ 가능한 변화:\n다음 검색과의 연계 강화 → 티스토리 블로그가 다음 검색에서 우선 노출될 가능성\n검색 최적화(SEO) 기능 개선 → 네이버 블로그와 경쟁하기 위한 전략 추진\n❌ 위험 요소:\n다음 자체의 점유율이 낮아 티스토리 트래픽이 오히려 감소할 수도 있음\n다음이 독립 법인으로 성공하지 못하면, 티스토리도 불안정해질 가능성\n  결론:\n  다음이 티스토리를 가져간다면 검색 노출을 강화하려 할 가능성이 크지만,\n  다음 자체의 점유율이 낮아 블로그 트래픽 확보가 어려울 수 있다.\n \n  시나리오 2: 티스토리를 ‘카카오’가 유지한다면?\n✅ 가능한 변화:\n카카오의 AI 검색과 연계 → 카카오톡, 브런치, 카카오뷰와 통합될 가능성\n유료화 가능성 증가 → 워드프레스처럼 유료 블로그 모델 도입 가능\n❌ 위험 요소:\n카카오가 티스토리에 대한 관심이 크지 않다면, 방치될 가능성도 있음\n카카오뷰·브런치에 흡수될 경우, 기존 블로그 방식이 사라질 수도 있음\n  결론:\n  카카오가 유지한다면, 티스토리는 검색보다는 ‘콘텐츠 플랫폼’으로 변할 가능성이 크다.\n  유료화될 경우, 블로거들의 비용 부담이 커질 수 있다.\n \n \n  블로거들이 지금 준비해야 할 것!\n티스토리가 어디로 가든, 블로거들은 대비해야 합니다.\n트래픽과 수익을 유지하려면 지금부터 대체 전략을 고민해야 합니다.\n✅ 1️⃣ 검색 트래픽 변화 대비하기\n티스토리가 다음 소속이 된다면, 구글 SEO 최적화가 더 중요해짐\n카카오가 유지한다면, 카카오톡 및 카카오뷰 활용이 중요\n✅ 2️⃣ 블로그 백업 및 데이터 관리 필수\n백업을 정기적으로 진행해 만일의 사태에 대비하기\n티스토리가 급격히 변화할 경우, 빠르게 대체 플랫폼으로 이동할 준비\n✅ 3️⃣ 대체 블로그 플랫폼 고려하기\n티스토리가 변할 경우를 대비해, 다른 블로그 플랫폼을 미리 알아두는 것도 중요합니다.\n  티스토리를 계속 사용할지, 떠날지는 상황을 보면서 신중하게 결정해야 합니다.\n \n \n  마무리: 티스토리, 변화 속에서 살아남을 수 있을까?\n카카오와 다음의 결별로 인해 티스토리는 변화를 피할 수 없습니다.\n다음과 함께 독립하든, 카카오가 유지하든, 기존 블로거들에게 미치는 영향은 상당할 것입니다.\n✅ 티스토리가 검색 최적화로 가든, 콘텐츠 플랫폼으로 변화하든, 블로거들은 유입 전략을 다시 짜야 합니다.\n✅ 유료화 가능성, 검색 노출 변화, 플랫폼 통합 여부 등을 면밀히 주시해야 합니다.\n✅ 무엇보다, 백업과 대체 플랫폼을 준비하는 것이 가장 중요한 생존 전략이 될 것입니다.\n❓ Q&A\nQ1. 카카오가 다음을 분사한 이유는 무엇인가요?\nA. 카카오는 AI와 카카오톡 중심의 전략을 추진하면서, 검색·포털 사업이 핵심이 아니라고 판단했습니다. 다음의 검색 점유율이 2.72%로 급락하면서, 독립 운영이 더 효율적이라는 결론을 내렸습니다.\nQ2. 티스토리는 다음과 함께 가나요, 아니면 카카오가 유지하나요?\nA. 아직 확정되지 않았지만, 다음과 함께 독립할 경우 검색 최적화 전략을 강화할 가능성이 크고, 카카오가 유지하면 브런치·카카오뷰와 결합되면서 콘텐츠 플랫폼으로 변화할 수 있습니다.\nQ3. 티스토리 블로거들은 지금 무엇을 준비해야 할까요?\nA. 검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\nQ4. 티스토리가 유료화될 가능성이 있나요?\nA. 카카오가 티스토리를 유지한다면, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오가 다음을 분사한 이유는 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오는 AI와 카카오톡 중심의 전략을 추진하면서, 검색·포털 사업이 핵심이 아니라고 판단했습니다. 다음의 검색 점유율이 2.72%로 급락하면서, 독립 운영이 더 효율적이라는 결론을 내렸습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리는 다음과 함께 가나요, 아니면 카카오가 유지하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 확정된 것은 없지만, 다음이 티스토리를 운영할 경우 검색 최적화 전략을 강화할 가능성이 크며, 반면 카카오가 유지하면 브런치·카카오뷰와 통합될 가능성이 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 지금 무엇을 준비해야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    }\n  ]\n}",
        "guid": "https://muzbox.tistory.com/483557",
        "categories": [
          "NEWS/IT 뉴스",
          "다음 분사",
          "블로그 플랫폼",
          "카카오 다음 관계",
          "카카오 티스토리",
          "티스토리 SEO",
          "티스토리 검색 노출",
          "티스토리 대체",
          "티스토리 미래",
          "티스토리 블로거 대비",
          "티스토리 유료화"
        ],
        "isoDate": "2025-03-20T01:57:22.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지",
        "link": "https://muzbox.tistory.com/483556",
        "pubDate": "Wed, 19 Mar 2025 09:40:40 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483556#entry483556comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제 다시 독립할 가능성이 제기되고 있는데요. 그렇다면 티스토리의 운명은 어떻게 될까요?</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_다음(Daum)의 굴곡진 역사.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/l4TPg/btsMOothjzM/ib7j5WoZ5RA5MhukKQEgq0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/l4TPg/btsMOothjzM/ib7j5WoZ5RA5MhukKQEgq0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/l4TPg/btsMOothjzM/ib7j5WoZ5RA5MhukKQEgq0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fl4TPg%2FbtsMOothjzM%2Fib7j5WoZ5RA5MhukKQEgq0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_다음(Daum)의 굴곡진 역사.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style1\"><span style=\"font-family: 'Noto Serif KR';\">\"다음 카페에서 찾아볼게.\"</span></blockquote>\n<p data-ke-size=\"size16\"><br />이 말이 인터넷에서 자연스럽게 오가던 시절이 있었습니다. 2000년대 초반까지만 해도 다음(Daum)은 대한민국에서 가장 인기 있는 포털이었어요. <b>검색하면 네이버가 아니라 다음이 먼저 나왔고</b>, 이메일도 다음의 한메일이 대세였습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 지금은 다릅니다. 포털 1위 자리는 네이버에게 완전히 내줬고, 뉴스&middot;검색&middot;커뮤니티 서비스도 예전만 못합니다. 한때 포털의 제왕이었던 다음은 어떻게 지금의 상황에 처하게 된 걸까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저 역시 인터넷 초창기부터 다음을 사용해왔고, 지금도 티스토리를 운영하는 블로거로서 이 변화가 남의 일처럼 느껴지지 않아요. 오늘은 <b>다음이 어떻게 성장하고 쇠퇴했으며, 티스토리가 앞으로 어떤 길을 걷게 될지</b> 이야기해보려고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>1. 다음(Daum)의 전성기: 한메일과 포털의 제왕 (1995~2000년대 초반)</b></span></h2>\n<p data-ke-size=\"size16\">1995년, 대한민국의 인터넷 환경은 지금과 많이 달랐습니다. 인터넷이 보급되기 시작하던 시절, 기업과 연구기관을 중심으로 이메일이 사용되었지만, 일반 사용자는 쉽게 접근할 방법이 없었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이때 <b>이재웅 대표가 창업한 &lsquo;다음커뮤니케이션&rsquo;</b>은 <b>무료 이메일 서비스 &lsquo;한메일(Hanmail)&rsquo;</b>을 선보이며 인터넷 대중화를 이끌었습니다. 당시 이메일을 무료로 제공하는 것은 혁신적인 서비스였고, 이 덕분에 다음은 급속도로 성장할 수 있었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"600\" data-origin-height=\"288\"><span data-url=\"https://blog.kakaocdn.net/dn/c6Rzt3/btsMO9vzbgw/cIH54N58l4Kvq9H1cbzCmK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c6Rzt3/btsMO9vzbgw/cIH54N58l4Kvq9H1cbzCmK/img.jpg\" data-alt=\"&amp;lt;다음이 출범한 1999년은 야후(Yahoo)의 위상이 인터넷 업계에서 세계 최고 정점에 이르렀던 시기였다!!&amp;gt;\"><img src=\"https://blog.kakaocdn.net/dn/c6Rzt3/btsMO9vzbgw/cIH54N58l4Kvq9H1cbzCmK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc6Rzt3%2FbtsMO9vzbgw%2FcIH54N58l4Kvq9H1cbzCmK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"675\" height=\"324\" data-origin-width=\"600\" data-origin-height=\"288\"/></span><figcaption>&lt;다음이 출범한 1999년은 야후(Yahoo)의 위상이 인터넷 업계에서 세계 최고 정점에 이르렀던 시기였다!!&gt;</figcaption>\n</figure>\n</p>\n<h3 data-ke-size=\"size23\">✅ <b>다음의 성공 요인</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>무료 이메일 서비스(한메일) 제공</b> &rarr; 국내 최초의 대중화된 이메일 서비스</li>\n<li><b>카페, 뉴스, 커뮤니티 중심 포털 구축</b> &rarr; 정보 검색과 온라인 커뮤니티 활성화</li>\n<li><b>한국 시장에 최적화된 서비스 제공</b> &rarr; 야후, 라이코스 등 해외 포털과의 차별화</li>\n</ul>\n<p data-ke-size=\"size16\">1999년, 다음은 이메일을 기반으로 <b>&lsquo;다음(Daum) 포털 사이트&rsquo;</b>를 오픈하면서 대한민국 최대 포털로 자리 잡았습니다.</p>\n<p data-ke-size=\"size16\">특히 <b>다음 카페</b>는 온라인 커뮤니티 문화의 중심이었습니다. 네이버의 &lsquo;지식iN&rsquo;이 등장하기 전까지, 많은 사용자들이 정보를 얻기 위해 다음 카페를 이용했어요.</p>\n<p data-ke-size=\"size16\">하지만 이런 성공은 오래가지 않았습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>2. 네이버와 구글에 밀려난 다음 (2000년대 중반~2010년대 초반)</b></span></h2>\n<p data-ke-size=\"size16\">2000년대 중반부터 다음의 하락세가 시작되었습니다. 가장 큰 이유는 <b>검색 엔진 경쟁에서 밀려났기 때문</b>이에요.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>네이버의 &lsquo;지식iN&rsquo;과 검색 기술 강화</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>네이버는 2002년 &lsquo;지식iN&rsquo;을 출시하며 검색 점유율을 급격히 끌어올렸어요.</li>\n<li>당시 검색 기술이 부족했던 상황에서, 사용자들이 직접 답변을 달아주는 &lsquo;지식iN&rsquo; 서비스는 검색의 패러다임을 바꿨죠.</li>\n<li>다음의 검색 서비스는 상대적으로 뒤처지면서 점점 사용자들의 이탈이 가속화되었습니다.</li>\n</ul>\n</li>\n<li><b>구글의 광고 모델(애드센스) 도입</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>구글이 애드센스를 도입하면서 온라인 광고 시장이 급변했어요.</li>\n<li>하지만 다음은 이에 효과적으로 대응하지 못했고, 네이버 역시 자체 광고 시스템을 구축하면서 다음의 수익 모델이 흔들리기 시작했습니다.</li>\n</ul>\n</li>\n<li><b>모바일 시장 대응 부족</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>2010년 이후 스마트폰이 대중화되면서 모바일 검색이 중요해졌습니다.</li>\n<li>네이버는 &lsquo;모바일 최적화&rsquo;를 빠르게 진행했지만, 다음은 대응이 늦었어요.</li>\n</ul>\n</li>\n</ol>\n<p data-ke-size=\"size16\">  <b>이 시점에서 다음의 웹 검색 점유율은 10%대로 추락</b>했고, 네이버가 70% 이상을 차지하는 독점적 구조가 형성되었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>3. 티스토리의 탄생과 성장 (2006~2010년대 초반)</b></span></h2>\n<p data-ke-size=\"size16\">2000년대 중반, 블로그가 새로운 콘텐츠 플랫폼으로 주목받기 시작했어요.</p>\n<p data-ke-size=\"size16\"><b>2006년, 태터앤컴퍼니(TNC)가 개발한 티스토리(Tistory)는 기존 블로그 서비스와 차별화된 특징을 갖고 있었습니다.</b></p>\n<h3 data-ke-size=\"size23\">✅ <b>티스토리의 차별점</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>HTML/CSS 편집 가능</b> &rarr; 완전한 자유도 제공</li>\n<li><b>애드센스(AdSense) 및 자체 광고 운영 가능</b> &rarr; 수익형 블로그 운영 가능</li>\n<li><b>개방형 플랫폼</b> &rarr; 검색 엔진 최적화(SEO) 강점</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>2007년, 다음이 TNC를 인수하면서 티스토리는 다음의 공식 블로그 서비스가 되었습니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이후 많은 블로거들이 네이버 블로그 대신 티스토리를 선택했어요. 하지만 2010년대 이후 유튜브, SNS 중심의 콘텐츠 소비가 늘어나면서 블로그 시장도 점차 변화를 맞이하게 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>4. 카카오의 다음 인수 (2014년)와 티스토리의 변화</b></span></h2>\n<p data-ke-size=\"size16\">2014년, <b>카카오는 다음을 인수하며 &lsquo;다음카카오&rsquo;라는 새로운 기업을 출범했습니다.</b></p>\n<p data-ke-size=\"size16\">카카오는 다음을 인수하면서 <b>검색 트래픽과 콘텐츠 플랫폼을 강화하려는 전략</b>을 내세웠습니다.</p>\n<p data-ke-size=\"size16\">하지만 시간이 지나면서 카카오는 점점 <b>카카오톡, AI, 금융(카카오페이), 콘텐츠(브런치&middot;카카오뷰) 사업에 집중</b>하며, <b>다음과 티스토리는 점점 우선순위에서 밀려났습니다.</b><b></b></p>\n<blockquote data-end=\"234\" data-start=\"0\" data-ke-style=\"style3\">결국, <b>카카오는 2023년, 포털 서비스 '다음(Daum)'을 사내독립기업(CIC, Company-in-Company)으로 전환</b>했습니다. 이는 급변하는 인터넷 환경 속에서 포털 사업의 자율성을 높이고, 독립적인 의사 결정을 통해 경쟁력을 강화하려는 목적이었습니다. 당시 카카오는 다음의 검색, 뉴스, 커뮤니티 서비스 등을 최적화하는 한편, 자사 핵심 서비스인 카카오톡, AI, 금융 사업에 더욱 집중하는 전략을 펼쳤습니다.<br /><br />그러나 <b>2025년 3월, 카카오는 결국 다음의 분사를 공식 발표</b>했습니다. 정확한 분사 시점은 아직 정해지지 않았지만, 이번 결정은 포털 사업의 독립성을 더욱 강화하고, 다음의 새로운 성장 가능성을 모색하기 위한 움직임으로 해석됩니다. 이에 따라 다음과 티스토리의 향후 운영 방향과 서비스 구조에도 큰 변화가 예상되며, 기존 사용자들도 이에 대한 대비가 필요할 것으로 보입니다.</blockquote>\n<p data-is-only-node=\"\" data-is-last-node=\"\" data-end=\"448\" data-start=\"236\" data-ke-size=\"size16\">&nbsp;</p>\n<p data-is-only-node=\"\" data-is-last-node=\"\" data-end=\"448\" data-start=\"236\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>5. 다음(Daum)과 티스토리, 앞으로 어떻게 될까?</b></span></h2>\n<p data-ke-size=\"size16\">다음과 티스토리가 처한 현재 상황을 이해했다면, 이제 앞으로의 미래가 궁금해질 텐데요.</p>\n<p data-ke-size=\"size16\">다음과 티스토리의 미래는 단순히 한 번의 분석으로 끝날 문제가 아닙니다. 이에 따라, 보다 심층적으로 다룰 예정입니다.</p>\n<h4 data-ke-size=\"size20\"><b>  다음 연재 시리즈에서 다룰 주제</b></h4>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>1. 다음의 분사가 티스토리에 미치는 영향</b></li>\n<li><b>2. 티스토리의 유료화 가능성과 블로거들의 대응 전략</b></li>\n<li><b>3. 티스토리를 대체할 수 있는 플랫폼 비교 분석</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>앞으로의 연재 시리즈에서 티스토리의 미래를 보다 깊이 있게 다룰 예정이니, 계속 지켜봐 주세요!</b>  </p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  Q&amp;A</b></span></h3>\n<p data-ke-size=\"size16\"><b>Q1. 다음(Daum)은 왜 네이버에게 1위 자리를 빼앗겼나요?</b><br />A. 네이버가 검색 엔진을 강화하고, &lsquo;지식iN&rsquo; 같은 차별화된 서비스를 제공하면서 검색 점유율을 급격히 끌어올렸기 때문입니다. 또한 모바일 시장 대응이 늦어지면서 점유율을 잃었습니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 티스토리는 왜 네이버 블로그보다 인기가 많았나요?</b><br />A. 티스토리는 HTML/CSS 편집이 가능하고, 애드센스를 통한 수익화가 가능했기 때문에 많은 블로거들에게 인기가 있었습니다. 반면, 네이버 블로그는 폐쇄적인 운영 방식을 고수했습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 카카오는 왜 다음을 인수했나요?</b><br />A. 카카오는 다음을 인수하여 포털 검색 트래픽을 활용하고, 뉴스&middot;커뮤니티&middot;광고 플랫폼을 강화하려 했습니다. 하지만 시간이 지나면서 검색보다는 카카오톡, AI, 금융 등 다른 사업에 집중하게 되었습니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. 다음이 카카오에서 분리되면 티스토리는 어떻게 될까요?</b><br />A. 티스토리가 다음과 함께 독립할지, 아니면 카카오가 유지할지가 관건입니다. 카카오가 유지하면 브런치, 카카오뷰와의 연계가 강화될 가능성이 높고, 다음과 함께 독립한다면 기존 포털 검색 기반 블로그로 남을 가능성이 큽니다.</p>\n<p data-ke-size=\"size16\"><b>Q5. 티스토리를 떠나야 할까요?</b><br />A. 티스토리의 미래가 불확실한 만큼, 워드프레스, 브런치, 네이버 블로그 같은 대체 플랫폼을 고려해 대비하는 것이 좋습니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다음(Daum)은 왜 네이버에게 1위 자리를 빼앗겼나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네이버가 검색 엔진을 강화하고, ‘지식iN’ 같은 차별화된 서비스를 제공하면서 검색 점유율을 급격히 끌어올렸기 때문입니다. 또한 모바일 시장 대응이 늦어지면서 점유율을 잃었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리는 왜 네이버 블로그보다 인기가 많았나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리는 HTML/CSS 편집이 가능하고, 애드센스를 통한 수익화가 가능했기 때문에 많은 블로거들에게 인기가 있었습니다. 반면, 네이버 블로그는 폐쇄적인 운영 방식을 고수했습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오는 왜 다음을 인수했나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오는 다음을 인수하여 포털 검색 트래픽을 활용하고, 뉴스·커뮤니티·광고 플랫폼을 강화하려 했습니다. 하지만 시간이 지나면서 검색보다는 카카오톡, AI, 금융 등 다른 사업에 집중하게 되었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다음이 카카오에서 분리되면 티스토리는 어떻게 될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리가 다음과 함께 독립할지, 아니면 카카오가 유지할지가 관건입니다. 카카오가 유지하면 브런치, 카카오뷰와의 연계가 강화될 가능성이 높고, 다음과 함께 독립한다면 기존 포털 검색 기반 블로그로 남을 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리를 떠나야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리의 미래가 불확실한 만큼, 워드프레스, 브런치, 네이버 블로그 같은 대체 플랫폼을 고려해 대비하는 것이 좋습니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제 다시 독립할 가능성이 제기되고 있는데요. 그렇다면 티스토리의 운명은 어떻게 될까요?\n\n\n \n\"다음 카페에서 찾아볼게.\"\n이 말이 인터넷에서 자연스럽게 오가던 시절이 있었습니다. 2000년대 초반까지만 해도 다음(Daum)은 대한민국에서 가장 인기 있는 포털이었어요. 검색하면 네이버가 아니라 다음이 먼저 나왔고, 이메일도 다음의 한메일이 대세였습니다.\n \n하지만 지금은 다릅니다. 포털 1위 자리는 네이버에게 완전히 내줬고, 뉴스·검색·커뮤니티 서비스도 예전만 못합니다. 한때 포털의 제왕이었던 다음은 어떻게 지금의 상황에 처하게 된 걸까요?\n \n저 역시 인터넷 초창기부터 다음을 사용해왔고, 지금도 티스토리를 운영하는 블로거로서 이 변화가 남의 일처럼 느껴지지 않아요. 오늘은 다음이 어떻게 성장하고 쇠퇴했으며, 티스토리가 앞으로 어떤 길을 걷게 될지 이야기해보려고 합니다.\n \n \n1. 다음(Daum)의 전성기: 한메일과 포털의 제왕 (1995~2000년대 초반)\n1995년, 대한민국의 인터넷 환경은 지금과 많이 달랐습니다. 인터넷이 보급되기 시작하던 시절, 기업과 연구기관을 중심으로 이메일이 사용되었지만, 일반 사용자는 쉽게 접근할 방법이 없었어요.\n \n이때 이재웅 대표가 창업한 ‘다음커뮤니케이션’은 무료 이메일 서비스 ‘한메일(Hanmail)’을 선보이며 인터넷 대중화를 이끌었습니다. 당시 이메일을 무료로 제공하는 것은 혁신적인 서비스였고, 이 덕분에 다음은 급속도로 성장할 수 있었어요.\n \n<다음이 출범한 1999년은 야후(Yahoo)의 위상이 인터넷 업계에서 세계 최고 정점에 이르렀던 시기였다!!>\n\n\n✅ 다음의 성공 요인\n무료 이메일 서비스(한메일) 제공 → 국내 최초의 대중화된 이메일 서비스\n카페, 뉴스, 커뮤니티 중심 포털 구축 → 정보 검색과 온라인 커뮤니티 활성화\n한국 시장에 최적화된 서비스 제공 → 야후, 라이코스 등 해외 포털과의 차별화\n1999년, 다음은 이메일을 기반으로 ‘다음(Daum) 포털 사이트’를 오픈하면서 대한민국 최대 포털로 자리 잡았습니다.\n특히 다음 카페는 온라인 커뮤니티 문화의 중심이었습니다. 네이버의 ‘지식iN’이 등장하기 전까지, 많은 사용자들이 정보를 얻기 위해 다음 카페를 이용했어요.\n하지만 이런 성공은 오래가지 않았습니다.\n \n2. 네이버와 구글에 밀려난 다음 (2000년대 중반~2010년대 초반)\n2000년대 중반부터 다음의 하락세가 시작되었습니다. 가장 큰 이유는 검색 엔진 경쟁에서 밀려났기 때문이에요.\n네이버의 ‘지식iN’과 검색 기술 강화\n\n네이버는 2002년 ‘지식iN’을 출시하며 검색 점유율을 급격히 끌어올렸어요.\n당시 검색 기술이 부족했던 상황에서, 사용자들이 직접 답변을 달아주는 ‘지식iN’ 서비스는 검색의 패러다임을 바꿨죠.\n다음의 검색 서비스는 상대적으로 뒤처지면서 점점 사용자들의 이탈이 가속화되었습니다.\n구글의 광고 모델(애드센스) 도입\n\n구글이 애드센스를 도입하면서 온라인 광고 시장이 급변했어요.\n하지만 다음은 이에 효과적으로 대응하지 못했고, 네이버 역시 자체 광고 시스템을 구축하면서 다음의 수익 모델이 흔들리기 시작했습니다.\n모바일 시장 대응 부족\n\n2010년 이후 스마트폰이 대중화되면서 모바일 검색이 중요해졌습니다.\n네이버는 ‘모바일 최적화’를 빠르게 진행했지만, 다음은 대응이 늦었어요.\n  이 시점에서 다음의 웹 검색 점유율은 10%대로 추락했고, 네이버가 70% 이상을 차지하는 독점적 구조가 형성되었습니다.\n \n3. 티스토리의 탄생과 성장 (2006~2010년대 초반)\n2000년대 중반, 블로그가 새로운 콘텐츠 플랫폼으로 주목받기 시작했어요.\n2006년, 태터앤컴퍼니(TNC)가 개발한 티스토리(Tistory)는 기존 블로그 서비스와 차별화된 특징을 갖고 있었습니다.\n✅ 티스토리의 차별점\nHTML/CSS 편집 가능 → 완전한 자유도 제공\n애드센스(AdSense) 및 자체 광고 운영 가능 → 수익형 블로그 운영 가능\n개방형 플랫폼 → 검색 엔진 최적화(SEO) 강점\n  2007년, 다음이 TNC를 인수하면서 티스토리는 다음의 공식 블로그 서비스가 되었습니다.\n \n이후 많은 블로거들이 네이버 블로그 대신 티스토리를 선택했어요. 하지만 2010년대 이후 유튜브, SNS 중심의 콘텐츠 소비가 늘어나면서 블로그 시장도 점차 변화를 맞이하게 됩니다.\n \n4. 카카오의 다음 인수 (2014년)와 티스토리의 변화\n2014년, 카카오는 다음을 인수하며 ‘다음카카오’라는 새로운 기업을 출범했습니다.\n카카오는 다음을 인수하면서 검색 트래픽과 콘텐츠 플랫폼을 강화하려는 전략을 내세웠습니다.\n하지만 시간이 지나면서 카카오는 점점 카카오톡, AI, 금융(카카오페이), 콘텐츠(브런치·카카오뷰) 사업에 집중하며, 다음과 티스토리는 점점 우선순위에서 밀려났습니다.\n결국, 카카오는 2023년, 포털 서비스 '다음(Daum)'을 사내독립기업(CIC, Company-in-Company)으로 전환했습니다. 이는 급변하는 인터넷 환경 속에서 포털 사업의 자율성을 높이고, 독립적인 의사 결정을 통해 경쟁력을 강화하려는 목적이었습니다. 당시 카카오는 다음의 검색, 뉴스, 커뮤니티 서비스 등을 최적화하는 한편, 자사 핵심 서비스인 카카오톡, AI, 금융 사업에 더욱 집중하는 전략을 펼쳤습니다.\n그러나 2025년 3월, 카카오는 결국 다음의 분사를 공식 발표했습니다. 정확한 분사 시점은 아직 정해지지 않았지만, 이번 결정은 포털 사업의 독립성을 더욱 강화하고, 다음의 새로운 성장 가능성을 모색하기 위한 움직임으로 해석됩니다. 이에 따라 다음과 티스토리의 향후 운영 방향과 서비스 구조에도 큰 변화가 예상되며, 기존 사용자들도 이에 대한 대비가 필요할 것으로 보입니다.\n \n \n5. 다음(Daum)과 티스토리, 앞으로 어떻게 될까?\n다음과 티스토리가 처한 현재 상황을 이해했다면, 이제 앞으로의 미래가 궁금해질 텐데요.\n다음과 티스토리의 미래는 단순히 한 번의 분석으로 끝날 문제가 아닙니다. 이에 따라, 보다 심층적으로 다룰 예정입니다.\n  다음 연재 시리즈에서 다룰 주제\n1. 다음의 분사가 티스토리에 미치는 영향\n2. 티스토리의 유료화 가능성과 블로거들의 대응 전략\n3. 티스토리를 대체할 수 있는 플랫폼 비교 분석\n  앞으로의 연재 시리즈에서 티스토리의 미래를 보다 깊이 있게 다룰 예정이니, 계속 지켜봐 주세요!  \n  Q&A\nQ1. 다음(Daum)은 왜 네이버에게 1위 자리를 빼앗겼나요?\nA. 네이버가 검색 엔진을 강화하고, ‘지식iN’ 같은 차별화된 서비스를 제공하면서 검색 점유율을 급격히 끌어올렸기 때문입니다. 또한 모바일 시장 대응이 늦어지면서 점유율을 잃었습니다.\nQ2. 티스토리는 왜 네이버 블로그보다 인기가 많았나요?\nA. 티스토리는 HTML/CSS 편집이 가능하고, 애드센스를 통한 수익화가 가능했기 때문에 많은 블로거들에게 인기가 있었습니다. 반면, 네이버 블로그는 폐쇄적인 운영 방식을 고수했습니다.\nQ3. 카카오는 왜 다음을 인수했나요?\nA. 카카오는 다음을 인수하여 포털 검색 트래픽을 활용하고, 뉴스·커뮤니티·광고 플랫폼을 강화하려 했습니다. 하지만 시간이 지나면서 검색보다는 카카오톡, AI, 금융 등 다른 사업에 집중하게 되었습니다.\nQ4. 다음이 카카오에서 분리되면 티스토리는 어떻게 될까요?\nA. 티스토리가 다음과 함께 독립할지, 아니면 카카오가 유지할지가 관건입니다. 카카오가 유지하면 브런치, 카카오뷰와의 연계가 강화될 가능성이 높고, 다음과 함께 독립한다면 기존 포털 검색 기반 블로그로 남을 가능성이 큽니다.\nQ5. 티스토리를 떠나야 할까요?\nA. 티스토리의 미래가 불확실한 만큼, 워드프레스, 브런치, 네이버 블로그 같은 대체 플랫폼을 고려해 대비하는 것이 좋습니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다음(Daum)은 왜 네이버에게 1위 자리를 빼앗겼나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네이버가 검색 엔진을 강화하고, ‘지식iN’ 같은 차별화된 서비스를 제공하면서 검색 점유율을 급격히 끌어올렸기 때문입니다. 또한 모바일 시장 대응이 늦어지면서 점유율을 잃었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리는 왜 네이버 블로그보다 인기가 많았나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리는 HTML/CSS 편집이 가능하고, 애드센스를 통한 수익화가 가능했기 때문에 많은 블로거들에게 인기가 있었습니다. 반면, 네이버 블로그는 폐쇄적인 운영 방식을 고수했습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오는 왜 다음을 인수했나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오는 다음을 인수하여 포털 검색 트래픽을 활용하고, 뉴스·커뮤니티·광고 플랫폼을 강화하려 했습니다. 하지만 시간이 지나면서 검색보다는 카카오톡, AI, 금융 등 다른 사업에 집중하게 되었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다음이 카카오에서 분리되면 티스토리는 어떻게 될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리가 다음과 함께 독립할지, 아니면 카카오가 유지할지가 관건입니다. 카카오가 유지하면 브런치, 카카오뷰와의 연계가 강화될 가능성이 높고, 다음과 함께 독립한다면 기존 포털 검색 기반 블로그로 남을 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리를 떠나야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리의 미래가 불확실한 만큼, 워드프레스, 브런치, 네이버 블로그 같은 대체 플랫폼을 고려해 대비하는 것이 좋습니다.\"\n      }\n    }\n  ]\n}",
        "guid": "https://muzbox.tistory.com/483556",
        "categories": [
          "NEWS/IT 뉴스",
          "검색 엔진",
          "네이버",
          "다음",
          "다음 카페",
          "카카오",
          "카카오 다음 분사",
          "티스토리",
          "티스토리 유료화",
          "포털 역사",
          "한메일"
        ],
        "isoDate": "2025-03-19T00:40:40.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "ChatGPT로 시간 절약! 더 효율적인 하루를 만드는 4가지 방법",
        "link": "https://muzbox.tistory.com/483555",
        "pubDate": "Tue, 18 Mar 2025 08:28:00 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483555#entry483555comment",
        "content": "<p data-ke-size=\"size16\">ChatGPT를 활용해 시간을 절약하고 생산성을 높이는 방법을 소개합니다. 일정 관리, 식단 계획, 운동 루틴, 그리고 자기 성찰까지! 스마트한 생활을 위한 실용적인 팁을 확인하세요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_ChatGPT로 시간 절약, 더 효율적인 하루를 만드는 4가지 방법.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/bqlNc4/btsMMlYjaaq/exPcqfv9i2lgnypl56jfv1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bqlNc4/btsMMlYjaaq/exPcqfv9i2lgnypl56jfv1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bqlNc4/btsMMlYjaaq/exPcqfv9i2lgnypl56jfv1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbqlNc4%2FbtsMMlYjaaq%2FexPcqfv9i2lgnypl56jfv1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"ChatGPT로 시간 절약! 더 효율적인 하루를 만드는 4가지 방법\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_ChatGPT로 시간 절약, 더 효율적인 하루를 만드는 4가지 방법.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아침에 눈 뜨자마자 \"오늘 뭐부터 해야 하지?\" 고민하는 시간이 많다면, 이 글이 딱입니다. 저도 매일 바쁜 일정 속에서 <b>효율적으로 시간을 쓰는 방법</b>을 고민했어요. 그러다 보니 <b>ChatGPT를 활용하면 불필요한 고민 없이 하루를 더 알차게 보낼 수 있다는 걸 깨달았죠.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오늘은 제가 실제로 활용하는 <b>ChatGPT 기반의 시간 절약 꿀팁 4가지</b>를 소개할게요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>1. 일정 관리 &amp; 우선순위 정하기</b></span></h2>\n<p data-ke-size=\"size16\">  <b>\"해야 할 일이 많을 때, 어디서부터 시작해야 할까?\"</b></p>\n<p data-ke-size=\"size16\">예전에는 <b>단순한 할 일 리스트(To-Do List)</b>를 만들었는데, <b>어떤 일을 먼저 해야 할지 정하는 데만도 시간이 걸렸어요.</b> 그래서 ChatGPT에게 도움을 요청해 봤습니다.</p>\n<p data-ke-size=\"size16\">예를 들어, 이렇게 입력하면?</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"오늘 할 일: 고객 미팅, 보고서 작성, 헬스장 가기, 친구 생일 선물 사기, 저녁 요리하기. 우선순위를 고려해 하루 일정을 짜줘!\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">그러면 ChatGPT는<br />✅ <b>급한 일과 중요한 일을 구분</b>하고<br />✅ <b>적절한 휴식 시간까지 포함된 일정</b>을 추천해 줍니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"654\" data-origin-height=\"685\"><span data-url=\"https://blog.kakaocdn.net/dn/cLQz3T/btsMMy4gqSp/5fJJ1tKmda9gjNgDG6EUNk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cLQz3T/btsMMy4gqSp/5fJJ1tKmda9gjNgDG6EUNk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cLQz3T/btsMMy4gqSp/5fJJ1tKmda9gjNgDG6EUNk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcLQz3T%2FbtsMMy4gqSp%2F5fJJ1tKmda9gjNgDG6EUNk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"654\" height=\"685\" data-filename=\"blob\" data-origin-width=\"654\" data-origin-height=\"685\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">  <b>실제 예시</b><br />제가 아는 분은 매일 <b>10개 이상의 업무</b>를 처리해야 했어요. 그는 ChatGPT에게 \"<b>내 직업은 마케팅 매니저이고, 출퇴근 시간이 9시~6시야. 가장 효과적인 일정 짜줘.</b>\"라고 요청했더니, <b>업무 집중 시간이 높은 오전에 중요한 작업을 배치하고, 오후에는 회의와 이메일 업무를 집중적으로 배치하는 일정</b>을 추천받아 시간을 훨씬 효율적으로 쓸 수 있었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>꿀팁</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>ChatGPT에게 <b>내 직업, 업무 스타일</b> 등을 입력하면 더 맞춤형 일정이 가능해요.</li>\n<li><b>캘린더 자동 추가 가능</b>   \"Google 캘린더 이벤트 링크 만들어줘!\"라고 입력하면 일정 정리도 간편하게!</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>2. 맞춤형 식단 &amp; 장보기 리스트</b></span></h2>\n<p data-ke-size=\"size16\"> ️ <b>\"매일 뭘 먹을지 고민하는 시간이 아깝다면?\"</b></p>\n<p data-ke-size=\"size16\">바쁜 하루를 보내다 보면, 식단 고민이 은근히 시간을 많이 잡아먹어요. 그래서 저는 ChatGPT에게 <b>영양 균형을 고려한 식단을 요청</b>해요.</p>\n<p data-ke-size=\"size16\">예를 들어, 이렇게 입력하면?</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"나는 채식주의자야. 단백질을 충분히 포함한 일주일 식단과 장보기 리스트를 만들어 줘.\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">ChatGPT는<br />✅ 아침, 점심, 저녁 + 간식 추천<br />✅ 필요한 장보기 리스트 자동 생성<br />✅ 예산이 필요하면 \"5만 원 이하로 가능하게 만들어줘!\"라고 추가 가능</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"699\" data-origin-height=\"756\"><span data-url=\"https://blog.kakaocdn.net/dn/7cYSx/btsMNfb20j5/3wzbOj9K8qEETKjmNxq48k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/7cYSx/btsMNfb20j5/3wzbOj9K8qEETKjmNxq48k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/7cYSx/btsMNfb20j5/3wzbOj9K8qEETKjmNxq48k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F7cYSx%2FbtsMNfb20j5%2F3wzbOj9K8qEETKjmNxq48k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"699\" height=\"756\" data-filename=\"blob\" data-origin-width=\"699\" data-origin-height=\"756\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">  <b>실제 예시</b><br />제 친구 중 한 명은 <b>회사 근처에서 사 먹는 식비가 부담스러워</b> ChatGPT를 활용했어요. \"<b>한 달 식비 20만 원 예산으로 건강한 식단 추천해 줘!</b>\"라고 요청했더니, <b>비용을 고려한 재료 목록과 요리법까지 제공</b>받아 비용 절감 효과를 봤습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>꿀팁</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>냉장고 속 재료 활용</b>   \"냉장고에 양배추, 두부, 고구마 있어. 이걸로 저녁 메뉴 추천해 줘!\"</li>\n<li><b>시간 절약용 빠른 요리 추천</b>   \"30분 안에 만들 수 있는 한식 메뉴 추천해 줘!\"</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>3. 맞춤형 운동 계획 만들기</b></span></h2>\n<p data-ke-size=\"size16\"> ️ <b>\"어떤 운동을 해야 할지 고민된다면?\"</b></p>\n<p data-ke-size=\"size16\">운동도 그냥 하는 게 아니라 <b>목표에 따라 계획을 세우면 더 효과적</b>이죠. 저는 ChatGPT를 활용해서 <b>운동 루틴을 자동으로 짜고 있어요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 이렇게 입력하면?</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"나는 초보자야. 주 3회, 30분 안에 할 수 있는 체지방 감량 운동 루틴을 만들어 줘!\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">그러면 ChatGPT는<br />✅ 운동 루틴(스트레칭 + 본운동 + 마무리)을 구성해 주고<br />✅ 필요하면 <b>\"집에서 할 수 있는 운동\"</b> 또는 <b>\"헬스장 기구를 활용한 운동\"</b>도 추천해 줘요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"691\" data-origin-height=\"709\"><span data-url=\"https://blog.kakaocdn.net/dn/b57AaK/btsMNdSUwWe/V9nBpi8Dg7BVH5TrXGxYO0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b57AaK/btsMNdSUwWe/V9nBpi8Dg7BVH5TrXGxYO0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b57AaK/btsMNdSUwWe/V9nBpi8Dg7BVH5TrXGxYO0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb57AaK%2FbtsMNdSUwWe%2FV9nBpi8Dg7BVH5TrXGxYO0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"691\" height=\"709\" data-filename=\"blob\" data-origin-width=\"691\" data-origin-height=\"709\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">  <b>실제 예시</b><br />운동을 시작한 지 얼마 안 된 지인은 <b>출퇴근이 바빠 헬스장에 갈 시간이 없었어요.</b> 그래서 ChatGPT에게 \"<b>아파트에서도 조용히 할 수 있는 운동 추천해 줘.</b>\"라고 요청했더니, <b>점프 없는 유산소 운동과 맨몸 근력 운동 루틴을 제공받아 집에서도 쉽게 운동을 시작</b>할 수 있었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>꿀팁</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>목표별 운동 계획 세우기</b>   \"팔 근력 강화 루틴 추천해 줘.\"</li>\n<li><b>기구 사용 여부 설정 가능</b>   \"덤벨과 요가 매트를 활용한 홈트 계획 짜줘!\"</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">4. 자기 성찰 &amp; 일기 쓰기</h2>\n<p data-ke-size=\"size16\">  <b>\"자기 성찰을 위한 질문이 필요하다면?\"</b></p>\n<p data-ke-size=\"size16\">매일 일기를 쓰고 싶지만, 막상 펜을 들면 무슨 내용을 적어야 할지 막막할 때가 많아요. 그럴 때 ChatGPT를 활용하면 <b>매일 새로운 질문을 던져줘서 더 깊은 생각을 할 수 있어요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 이렇게 요청하면?</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"오늘의 일기 주제 추천해 줘!\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">그러면 ChatGPT는<br />✅ \"오늘 하루 중 가장 감사했던 순간은?\"<br />✅ \"최근 도전했던 일 중 가장 의미 있었던 경험은?\"<br />✅ \"내가 앞으로 더 성장하기 위해 필요한 것은?\"</p>\n<p data-ke-size=\"size16\">이런 질문을 던져주면서 <b>일기를 더욱 의미 있게 작성할 수 있도록 도와줍니다.</b></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"675\" data-origin-height=\"692\"><span data-url=\"https://blog.kakaocdn.net/dn/wTCdR/btsMMlKLzvN/VaZfhzyck5VzDB0lqkjlsK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/wTCdR/btsMMlKLzvN/VaZfhzyck5VzDB0lqkjlsK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/wTCdR/btsMMlKLzvN/VaZfhzyck5VzDB0lqkjlsK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FwTCdR%2FbtsMMlKLzvN%2FVaZfhzyck5VzDB0lqkjlsK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"675\" height=\"692\" data-filename=\"blob\" data-origin-width=\"675\" data-origin-height=\"692\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>실제 예시</b><br />제 지인 중 한 명은 매일 ChatGPT에게 <b>\"오늘 나를 돌아볼 수 있는 질문 추천해 줘.\"</b>라고 요청했어요. 그러면서 자연스럽게 <b>자신의 감정을 기록하고, 스트레스도 줄일 수 있었다고 해요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>꿀팁</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>자기 성장 목표 설정</b>   \"매일 나를 성장시킬 수 있는 질문 추천해 줘!\"</li>\n<li><b>긍정적인 마인드셋 형성</b>   \"오늘 감사할 일을 생각할 수 있도록 도와줘!\"</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마무리</b></span></h2>\n<p data-ke-size=\"size16\">ChatGPT를 활용하면, <b>고민하는 시간을 줄이고 더 중요한 일에 집중할 수 있어요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>  오늘 소개한 ChatGPT 활용법 정리!</b><br />✅ 일정 관리 &amp; 우선순위 정하기<br />✅ 맞춤형 식단 &amp; 장보기 리스트<br />✅ 개인 맞춤 운동 루틴<br />✅ 자기 성찰을 위한 일기 질문 제공</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이제 ChatGPT를 활용해 <b>더 스마트하고 생산적인 하루</b>를 만들어 보세요!  </p>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  Q&amp;A 섹션</b></span></h3>\n<p data-ke-size=\"size16\"><b>1. ChatGPT가 내 일정을 자동으로 캘린더에 추가할 수 있나요?</b><br />아직 직접 추가는 불가능하지만, <b>Google 캘린더 이벤트 링크를 생성하는 방법</b>을 활용하면 쉽게 추가할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>2. ChatGPT가 식단을 추천해 줄 때, 알러지나 식이 제한도 반영할 수 있나요?</b><br />네! 예를 들어, <b>\"나는 채식주의자야\" 또는 \"유제품을 먹지 않아\"</b>라고 입력하면, 이를 반영한 식단을 추천해 줍니다.</p>\n<p data-ke-size=\"size16\"><b>3. 운동 루틴을 세울 때, 내 체력 수준을 고려할 수 있나요?</b><br />네! \"나는 초보자야\" 또는 \"나는 헬스를 2년 정도 했어\"라고 추가하면 <b>레벨에 맞춘 운동 루틴을 제공합니다.</b></p>\n<p data-ke-size=\"size16\"><b>4. ChatGPT로 맞춤형 저녁 메뉴를 추천받으려면 어떻게 해야 하나요?</b><br /><b>\"냉장고에 닭가슴살, 감자, 브로콜리 있어. 간단한 저녁 메뉴 추천해 줘!\"</b>라고 입력하면, <b>보유한 재료를 활용한 맞춤형 메뉴</b>를 추천받을 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>5. ChatGPT로 꾸준히 일기 쓰는 습관을 만들 수 있을까요?</b><br />네! <b>\"매일 아침 나에게 맞는 자기 성찰 질문을 추천해 줘\"</b>라고 설정하면, ChatGPT가 매일 새로운 질문을 제공해 <b>꾸준한 일기 습관을 유지할 수 있도록 도와줍니다.</b></p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 내 일정을 자동으로 캘린더에 추가할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아직 직접 추가는 불가능하지만, Google 캘린더 이벤트 링크를 생성하는 방법을 활용하면 쉽게 추가할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 식단을 추천해 줄 때, 알러지나 식이 제한도 반영할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 예를 들어, '나는 채식주의자야' 또는 '유제품을 먹지 않아'라고 입력하면, 이를 반영한 식단을 추천해 줍니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"운동 루틴을 세울 때, 내 체력 수준을 고려할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! '나는 초보자야' 또는 '나는 헬스를 2년 정도 했어'라고 추가하면 레벨에 맞춘 운동 루틴을 제공합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT로 맞춤형 저녁 메뉴를 추천받으려면 어떻게 해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"'냉장고에 닭가슴살, 감자, 브로콜리 있어. 간단한 저녁 메뉴 추천해 줘!'라고 입력하면 됩니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT로 꾸준히 일기 쓰는 습관을 만들 수 있을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! '매일 아침 나에게 맞는 자기 성찰 질문을 추천해 줘'라고 설정하면 꾸준한 습관을 만들 수 있습니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "ChatGPT를 활용해 시간을 절약하고 생산성을 높이는 방법을 소개합니다. 일정 관리, 식단 계획, 운동 루틴, 그리고 자기 성찰까지! 스마트한 생활을 위한 실용적인 팁을 확인하세요.\n\n\n \n아침에 눈 뜨자마자 \"오늘 뭐부터 해야 하지?\" 고민하는 시간이 많다면, 이 글이 딱입니다. 저도 매일 바쁜 일정 속에서 효율적으로 시간을 쓰는 방법을 고민했어요. 그러다 보니 ChatGPT를 활용하면 불필요한 고민 없이 하루를 더 알차게 보낼 수 있다는 걸 깨달았죠.\n \n오늘은 제가 실제로 활용하는 ChatGPT 기반의 시간 절약 꿀팁 4가지를 소개할게요.\n \n \n1. 일정 관리 & 우선순위 정하기\n  \"해야 할 일이 많을 때, 어디서부터 시작해야 할까?\"\n예전에는 단순한 할 일 리스트(To-Do List)를 만들었는데, 어떤 일을 먼저 해야 할지 정하는 데만도 시간이 걸렸어요. 그래서 ChatGPT에게 도움을 요청해 봤습니다.\n예를 들어, 이렇게 입력하면?\n\"오늘 할 일: 고객 미팅, 보고서 작성, 헬스장 가기, 친구 생일 선물 사기, 저녁 요리하기. 우선순위를 고려해 하루 일정을 짜줘!\"\n그러면 ChatGPT는\n✅ 급한 일과 중요한 일을 구분하고\n✅ 적절한 휴식 시간까지 포함된 일정을 추천해 줍니다.\n\n\n  실제 예시\n제가 아는 분은 매일 10개 이상의 업무를 처리해야 했어요. 그는 ChatGPT에게 \"내 직업은 마케팅 매니저이고, 출퇴근 시간이 9시~6시야. 가장 효과적인 일정 짜줘.\"라고 요청했더니, 업무 집중 시간이 높은 오전에 중요한 작업을 배치하고, 오후에는 회의와 이메일 업무를 집중적으로 배치하는 일정을 추천받아 시간을 훨씬 효율적으로 쓸 수 있었어요.\n \n✅ 꿀팁\nChatGPT에게 내 직업, 업무 스타일 등을 입력하면 더 맞춤형 일정이 가능해요.\n캘린더 자동 추가 가능   \"Google 캘린더 이벤트 링크 만들어줘!\"라고 입력하면 일정 정리도 간편하게!\n \n2. 맞춤형 식단 & 장보기 리스트\n ️ \"매일 뭘 먹을지 고민하는 시간이 아깝다면?\"\n바쁜 하루를 보내다 보면, 식단 고민이 은근히 시간을 많이 잡아먹어요. 그래서 저는 ChatGPT에게 영양 균형을 고려한 식단을 요청해요.\n예를 들어, 이렇게 입력하면?\n\"나는 채식주의자야. 단백질을 충분히 포함한 일주일 식단과 장보기 리스트를 만들어 줘.\"\n \nChatGPT는\n✅ 아침, 점심, 저녁 + 간식 추천\n✅ 필요한 장보기 리스트 자동 생성\n✅ 예산이 필요하면 \"5만 원 이하로 가능하게 만들어줘!\"라고 추가 가능\n\n\n  실제 예시\n제 친구 중 한 명은 회사 근처에서 사 먹는 식비가 부담스러워 ChatGPT를 활용했어요. \"한 달 식비 20만 원 예산으로 건강한 식단 추천해 줘!\"라고 요청했더니, 비용을 고려한 재료 목록과 요리법까지 제공받아 비용 절감 효과를 봤습니다.\n \n✅ 꿀팁\n냉장고 속 재료 활용   \"냉장고에 양배추, 두부, 고구마 있어. 이걸로 저녁 메뉴 추천해 줘!\"\n시간 절약용 빠른 요리 추천   \"30분 안에 만들 수 있는 한식 메뉴 추천해 줘!\"\n \n3. 맞춤형 운동 계획 만들기\n ️ \"어떤 운동을 해야 할지 고민된다면?\"\n운동도 그냥 하는 게 아니라 목표에 따라 계획을 세우면 더 효과적이죠. 저는 ChatGPT를 활용해서 운동 루틴을 자동으로 짜고 있어요.\n \n예를 들어, 이렇게 입력하면?\n\"나는 초보자야. 주 3회, 30분 안에 할 수 있는 체지방 감량 운동 루틴을 만들어 줘!\"\n그러면 ChatGPT는\n✅ 운동 루틴(스트레칭 + 본운동 + 마무리)을 구성해 주고\n✅ 필요하면 \"집에서 할 수 있는 운동\" 또는 \"헬스장 기구를 활용한 운동\"도 추천해 줘요.\n\n\n  실제 예시\n운동을 시작한 지 얼마 안 된 지인은 출퇴근이 바빠 헬스장에 갈 시간이 없었어요. 그래서 ChatGPT에게 \"아파트에서도 조용히 할 수 있는 운동 추천해 줘.\"라고 요청했더니, 점프 없는 유산소 운동과 맨몸 근력 운동 루틴을 제공받아 집에서도 쉽게 운동을 시작할 수 있었습니다.\n \n✅ 꿀팁\n목표별 운동 계획 세우기   \"팔 근력 강화 루틴 추천해 줘.\"\n기구 사용 여부 설정 가능   \"덤벨과 요가 매트를 활용한 홈트 계획 짜줘!\"\n \n4. 자기 성찰 & 일기 쓰기\n  \"자기 성찰을 위한 질문이 필요하다면?\"\n매일 일기를 쓰고 싶지만, 막상 펜을 들면 무슨 내용을 적어야 할지 막막할 때가 많아요. 그럴 때 ChatGPT를 활용하면 매일 새로운 질문을 던져줘서 더 깊은 생각을 할 수 있어요.\n \n예를 들어, 이렇게 요청하면?\n\"오늘의 일기 주제 추천해 줘!\"\n그러면 ChatGPT는\n✅ \"오늘 하루 중 가장 감사했던 순간은?\"\n✅ \"최근 도전했던 일 중 가장 의미 있었던 경험은?\"\n✅ \"내가 앞으로 더 성장하기 위해 필요한 것은?\"\n이런 질문을 던져주면서 일기를 더욱 의미 있게 작성할 수 있도록 도와줍니다.\n\n\n \n  실제 예시\n제 지인 중 한 명은 매일 ChatGPT에게 \"오늘 나를 돌아볼 수 있는 질문 추천해 줘.\"라고 요청했어요. 그러면서 자연스럽게 자신의 감정을 기록하고, 스트레스도 줄일 수 있었다고 해요.\n \n✅ 꿀팁\n자기 성장 목표 설정   \"매일 나를 성장시킬 수 있는 질문 추천해 줘!\"\n긍정적인 마인드셋 형성   \"오늘 감사할 일을 생각할 수 있도록 도와줘!\"\n \n마무리\nChatGPT를 활용하면, 고민하는 시간을 줄이고 더 중요한 일에 집중할 수 있어요.\n \n  오늘 소개한 ChatGPT 활용법 정리!\n✅ 일정 관리 & 우선순위 정하기\n✅ 맞춤형 식단 & 장보기 리스트\n✅ 개인 맞춤 운동 루틴\n✅ 자기 성찰을 위한 일기 질문 제공\n \n이제 ChatGPT를 활용해 더 스마트하고 생산적인 하루를 만들어 보세요!  \n  Q&A 섹션\n1. ChatGPT가 내 일정을 자동으로 캘린더에 추가할 수 있나요?\n아직 직접 추가는 불가능하지만, Google 캘린더 이벤트 링크를 생성하는 방법을 활용하면 쉽게 추가할 수 있습니다.\n2. ChatGPT가 식단을 추천해 줄 때, 알러지나 식이 제한도 반영할 수 있나요?\n네! 예를 들어, \"나는 채식주의자야\" 또는 \"유제품을 먹지 않아\"라고 입력하면, 이를 반영한 식단을 추천해 줍니다.\n3. 운동 루틴을 세울 때, 내 체력 수준을 고려할 수 있나요?\n네! \"나는 초보자야\" 또는 \"나는 헬스를 2년 정도 했어\"라고 추가하면 레벨에 맞춘 운동 루틴을 제공합니다.\n4. ChatGPT로 맞춤형 저녁 메뉴를 추천받으려면 어떻게 해야 하나요?\n\"냉장고에 닭가슴살, 감자, 브로콜리 있어. 간단한 저녁 메뉴 추천해 줘!\"라고 입력하면, 보유한 재료를 활용한 맞춤형 메뉴를 추천받을 수 있습니다.\n5. ChatGPT로 꾸준히 일기 쓰는 습관을 만들 수 있을까요?\n네! \"매일 아침 나에게 맞는 자기 성찰 질문을 추천해 줘\"라고 설정하면, ChatGPT가 매일 새로운 질문을 제공해 꾸준한 일기 습관을 유지할 수 있도록 도와줍니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 내 일정을 자동으로 캘린더에 추가할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아직 직접 추가는 불가능하지만, Google 캘린더 이벤트 링크를 생성하는 방법을 활용하면 쉽게 추가할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 식단을 추천해 줄 때, 알러지나 식이 제한도 반영할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 예를 들어, '나는 채식주의자야' 또는 '유제품을 먹지 않아'라고 입력하면, 이를 반영한 식단을 추천해 줍니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"운동 루틴을 세울 때, 내 체력 수준을 고려할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! '나는 초보자야' 또는 '나는 헬스를 2년 정도 했어'라고 추가하면 레벨에 맞춘 운동 루틴을 제공합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT로 맞춤형 저녁 메뉴를 추천받으려면 어떻게 해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"'냉장고에 닭가슴살, 감자, 브로콜리 있어. 간단한 저녁 메뉴 추천해 줘!'라고 입력하면 됩니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT로 꾸준히 일기 쓰는 습관을 만들 수 있을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! '매일 아침 나에게 맞는 자기 성찰 질문을 추천해 줘'라고 설정하면 꾸준한 습관을 만들 수 있습니다.\"\n      }\n    }\n  ]\n}",
        "guid": "https://muzbox.tistory.com/483555",
        "categories": [
          "AI, 미래기술/AI 생산성 및 업무 효율화",
          "ai 도우미",
          "ChatGPT 활용법",
          "생산성 향상",
          "스마트한 생활",
          "시간 관리",
          "식단 짜기",
          "업무 효율화",
          "운동 루틴",
          "일정 계획",
          "자기 계발"
        ],
        "isoDate": "2025-03-17T23:28:00.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "콘텐츠를 더 매력적으로! 무료 시각화 클로드 프로젝트 공개",
        "link": "https://muzbox.tistory.com/483554",
        "pubDate": "Mon, 17 Mar 2025 11:01:17 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483554#entry483554comment",
        "content": "<p data-ke-size=\"size16\">웹 콘텐츠를 효과적으로 시각화하면 독자들의 관심을 끌고 정보 전달력을 극대화할 수 있습니다. 단순한 텍스트에서 벗어나, 가독성을 높이는 핵심 요소와 실전 가이드를 소개합니다. 특히, 시각적 콘텐츠를 쉽게 제작할 수 있도록 <b>클로드용 시각화 프로젝트를 무료 공개</b>하니 놓치지 마세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_클로드로 시각화 자료 만들기.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/b6TQHt/btsMLIFPKZd/k3CTJdY5vEHQ1PZuPmxsi1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b6TQHt/btsMLIFPKZd/k3CTJdY5vEHQ1PZuPmxsi1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b6TQHt/btsMLIFPKZd/k3CTJdY5vEHQ1PZuPmxsi1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb6TQHt%2FbtsMLIFPKZd%2Fk3CTJdY5vEHQ1PZuPmxsi1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"콘텐츠를 더 매력적으로! 무료 시각화 클로드 프로젝트 공개\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_클로드로 시각화 자료 만들기.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">블로그나 뉴스 사이트를 운영하다 보면, 아무리 좋은 글을 써도 독자들이 끝까지 읽지 않는 경우가 많아요. 사람들이 정보를 빨리 습득하려 하고, 스크롤을 내리면서 중요한 부분만 훑어보는 경우가 많기 때문이죠. 그래서 콘텐츠를 <b>텍스트에서 &lsquo;시각적 경험&rsquo;으로 바꾸는 것</b>이 점점 더 중요해지고 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저도 한동안 이런 고민을 했어요. 어떻게 하면 독자들이 글을 더 오래 머물며 집중할 수 있을까? 그러다가 웹 콘텐츠의 시각적 구조를 개선하면 <b>체류 시간과 이해도가 크게 증가한다는 사실</b>을 발견했어요. 오늘은 <b>기사를 매력적인 웹페이지로 변환하는 핵심 가이드</b>를 소개하면서, 이를 쉽게 적용할 수 있도록 <b>클로드용 시각화 프로젝트도 무료 공개</b>할 예정이니 끝까지 읽어보세요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  효과적인 웹 콘텐츠 시각화의 핵심 요소</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 시각적 계층 구조를 명확히 하자</span></h3>\n<p data-ke-size=\"size16\">  <b>제목과 부제목이 가장 중요합니다.</b><br />웹페이지를 열었을 때, 가장 먼저 보이는 것이 제목이죠. 제목은 <b>본문 폰트보다 2~3배 크게</b>, 부제목은 <b>1.5배 크기</b>로 설정해 독자가 한눈에 내용을 파악할 수 있도록 해야 해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>발행 정보</b>도 중요해요.<br />기사의 신뢰도를 높이려면 날짜와 출처 정보를 추가해야 해요. 보통 <b>작은 글씨로 우측 정렬</b>하면 깔끔한 인상을 줄 수 있어요.</p>\n<p data-ke-size=\"size16\">⚡ <b>섹션 구분을 확실하게!</b><br />문단이 끝없이 이어지면 독자가 쉽게 지칠 수 있어요. 섹션마다 <b>구분선을 넣거나 배경색을 다르게 설정</b>하면 훨씬 깔끔한 레이아웃이 됩니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 핵심 정보를 &lsquo;눈에 띄게&rsquo; 강조하자</span></h3>\n<p data-ke-size=\"size16\">단순한 텍스트보다 시각적인 요소를 추가하면 독자들이 정보를 쉽게 이해할 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>도표와 다이어그램 활용</b><br />숫자나 개념이 많을 때는 <b>표나 인포그래픽</b>을 추가하세요. 단순한 설명보다 훨씬 직관적이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>시각적 불릿 포인트 사용</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>✅ 단순한 리스트보다 <b>아이콘이 들어간 불릿 포인트</b>가 가독성이 좋아요.</li>\n<li>✅ 중요한 내용은   같은 이모지로 강조해도 좋아요.</li>\n<li>✅ 파란색 원형 마커를 사용하면 깔끔하고 전문가 느낌이 납니다.</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>강조 배지 활용</b><br />예를 들어, <b>&ldquo;50% 증가&rdquo;</b> 같은 주요 데이터를 보여줄 때, <b>둥근 배지나 컬러 박스</b>를 사용하면 한눈에 눈에 띄어요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 보조 정보를 효과적으로 구성하자</span></h3>\n<p data-ke-size=\"size16\">모든 정보가 같은 비중을 가질 필요는 없어요. 핵심 내용과 추가 정보를 분리하면 독자가 쉽게 원하는 정보를 찾을 수 있어요.</p>\n<p data-ke-size=\"size16\">  <b>사이드바 활용하기</b><br />관련 정보나 부가 자료는 <b>메인 콘텐츠와 분리된 사이드바</b>에 배치하는 게 좋아요.</p>\n<p data-ke-size=\"size16\">  <b>설명 상자 사용하기</b><br />전문 용어나 중요한 개념이 나올 때 <b>라이트 블루 박스</b>로 구분하면 읽기 편해요.</p>\n<p data-ke-size=\"size16\">  <b>탭 형태로 정리하기</b><br />긴 설명이 필요한 경우, <b>탭 형식으로 정보를 정리</b>하면 독자가 원하는 정보만 빠르게 확인할 수 있어요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">4. 데이터는 차트와 그래프로 변환하자</span></h3>\n<p data-ke-size=\"size16\">숫자가 많으면 가독성이 떨어져요. 그래프와 다이어그램을 활용하면 정보 전달력이 극대화됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>차트 활용하기</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>선 그래프: <b>트렌드 변화</b>를 보여줄 때</li>\n<li>막대 그래프: <b>비교 데이터</b>를 정리할 때</li>\n<li>원형 차트: <b>비율을 설명할 때</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>프로세스 다이어그램 활용하기</b><br />단계별 과정이나 절차를 설명할 때 <b>순서도를 활용하면 직관적</b>이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  웹페이지 구조의 모범 사례</b></span></h2>\n<p data-ke-size=\"size16\">잘 만들어진 웹페이지는 일정한 구조를 가지고 있어요.</p>\n<h3 data-ke-size=\"size23\">  최상단 섹션</h3>\n<p data-ke-size=\"size16\">✅ 제목 (본문 폰트의 2~3배 크기)<br />✅ 설명적인 부제목 (1.5배 크기)<br />✅ 날짜 및 출처 정보 (작은 글씨, 우측 정렬)</p>\n<h3 data-ke-size=\"size23\">  주요 섹션 구조</h3>\n<p data-ke-size=\"size16\">✅ 명확한 섹션 제목 (관련 아이콘 포함)<br />✅ 주요 내용을 요약한 박스 (라이트 블루 배경)<br />✅ 시각적 구분선 삽입</p>\n<h3 data-ke-size=\"size23\">  핵심 시각 요소</h3>\n<p data-ke-size=\"size16\">✅ 개념이나 프로세스를 보여주는 다이어그램<br />✅ 주요 수치를 강조하는 배지 요소<br />✅ 시각적 불릿 포인트 (파란색 원형 마커)</p>\n<h3 data-ke-size=\"size23\">  보조 정보 영역</h3>\n<p data-ke-size=\"size16\">✅ 사이드바에 관련 정보 배치<br />✅ 탭 형태로 추가 정보 구성</p>\n<h3 data-ke-size=\"size23\">  하단부 구성</h3>\n<p data-ke-size=\"size16\">✅ 요약 정보 또는 결론<br />✅ 추가 자료 링크 제공<br />✅ 저작권 정보 표시</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b> 시각화 작성예시</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 가로형</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"653\" data-origin-height=\"843\"><span data-url=\"https://blog.kakaocdn.net/dn/cko57p/btsMMbAK8Hx/BECUwy6FCAjFg2AYUeTsT0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cko57p/btsMMbAK8Hx/BECUwy6FCAjFg2AYUeTsT0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cko57p/btsMMbAK8Hx/BECUwy6FCAjFg2AYUeTsT0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcko57p%2FbtsMMbAK8Hx%2FBECUwy6FCAjFg2AYUeTsT0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"653\" height=\"843\" data-origin-width=\"653\" data-origin-height=\"843\"/></span></figure>\n</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2 세로형</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"548\" data-origin-height=\"834\"><span data-url=\"https://blog.kakaocdn.net/dn/yxjbz/btsMLyiXxUH/0WKKDWW3hwDL6iKxyW8s9K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/yxjbz/btsMLyiXxUH/0WKKDWW3hwDL6iKxyW8s9K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/yxjbz/btsMLyiXxUH/0WKKDWW3hwDL6iKxyW8s9K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fyxjbz%2FbtsMLyiXxUH%2F0WKKDWW3hwDL6iKxyW8s9K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"548\" height=\"834\" data-origin-width=\"548\" data-origin-height=\"834\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  클로드용 시각화 프로젝트 무료 공개!</b></span></h2>\n<p data-ke-size=\"size16\">이 모든 걸 직접 구현하려면 시간이 많이 걸리겠죠? 그래서 여러분을 위해 <b>시각화 프로젝트를 무료로 공개합니다!</b></p>\n<p data-ke-size=\"size16\">  <b>이 프로젝트로 할 수 있는 것:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>자동으로 가독성 높은 웹 콘텐츠 변환</li>\n<li>시각적 요소 (도표, 배지, 아이콘) 쉽게 추가</li>\n<li>반응형 디자인 적용으로 모바일 최적화</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>무료 다운로드 링크:&nbsp;</b></p>\n<p data-ke-size=\"size16\">지금 바로 적용해 보세요! 웹 콘텐츠의 가독성을 높이는 것이 곧 독자와의 소통을 강화하는 길입니다.</p>\n<p data-ke-size=\"size16\"><a href=\"https://www.threads.net/@gpt_patk/post/DHSGxlOSOmu?xmt=AQGzpWXDn8ymKaGTj8Z7rSyaW0ICjfaFLp6l6RaNLpHBNg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.threads.net/@gpt_patk/post/DHSGxlOSOmu?xmt=AQGzpWXDn8ymKaGTj8Z7rSyaW0ICjfaFLp6l6RaNLpHBNg</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><b><span style=\"color: #009a87;\"> 프로젝트 생성방법</span></b></h2>\n<p data-ke-size=\"size16\">1. 클로드 첫 페이지에서 프로젝트 - 프로젝트 생성 클릭 ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"01.jpg\" data-origin-width=\"958\" data-origin-height=\"505\"><span data-url=\"https://blog.kakaocdn.net/dn/cfTL9d/btsML930nbn/FVrjKnNlEGv2mZaPwIKduk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cfTL9d/btsML930nbn/FVrjKnNlEGv2mZaPwIKduk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cfTL9d/btsML930nbn/FVrjKnNlEGv2mZaPwIKduk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcfTL9d%2FbtsML930nbn%2FFVrjKnNlEGv2mZaPwIKduk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"958\" height=\"505\" data-filename=\"01.jpg\" data-origin-width=\"958\" data-origin-height=\"505\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. 프로젝트 제목과 목표 입력 ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"02.jpg\" data-origin-width=\"959\" data-origin-height=\"573\"><span data-url=\"https://blog.kakaocdn.net/dn/t431r/btsMLWw3Qyc/qJEKV2917K7V8aeORrinrK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/t431r/btsMLWw3Qyc/qJEKV2917K7V8aeORrinrK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/t431r/btsMLWw3Qyc/qJEKV2917K7V8aeORrinrK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Ft431r%2FbtsMLWw3Qyc%2FqJEKV2917K7V8aeORrinrK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"959\" height=\"573\" data-filename=\"02.jpg\" data-origin-width=\"959\" data-origin-height=\"573\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">3. 프로젝트 지침 설정에서 다운로드한 텍스트 파일의 지침복사. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"03.jpg\" data-origin-width=\"950\" data-origin-height=\"574\"><span data-url=\"https://blog.kakaocdn.net/dn/dgxyn9/btsMLITlV4n/Weh2rKLz4c3GIoMikICQPK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dgxyn9/btsMLITlV4n/Weh2rKLz4c3GIoMikICQPK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dgxyn9/btsMLITlV4n/Weh2rKLz4c3GIoMikICQPK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdgxyn9%2FbtsMLITlV4n%2FWeh2rKLz4c3GIoMikICQPK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"950\" height=\"574\" data-filename=\"03.jpg\" data-origin-width=\"950\" data-origin-height=\"574\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"color: #333333; text-align: start;\">4. 파일첨부에서 다운로드한 템플릿 HTML 파일 등록하면 프로젝트 생성 완료▼ </span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"04.jpg\" data-origin-width=\"956\" data-origin-height=\"567\"><span data-url=\"https://blog.kakaocdn.net/dn/d08fmZ/btsMLsDih98/mqbHKRlVPSNCdcLrk1gws1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/d08fmZ/btsMLsDih98/mqbHKRlVPSNCdcLrk1gws1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/d08fmZ/btsMLsDih98/mqbHKRlVPSNCdcLrk1gws1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd08fmZ%2FbtsMLsDih98%2FmqbHKRlVPSNCdcLrk1gws1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"956\" height=\"567\" data-filename=\"04.jpg\" data-origin-width=\"956\" data-origin-height=\"567\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">5. 사용법 : 해당 프로젝트 채팅창에 \"가로형,세로형&nbsp; 선택 /&nbsp; 작성자 / 시각화할 자료 입력\" 하면 시각화 진행</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"05.jpg\" data-origin-width=\"958\" data-origin-height=\"510\"><span data-url=\"https://blog.kakaocdn.net/dn/cNIarG/btsMM5Gz2xK/2vE7fYUMRFtKjd6ioqgIvK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cNIarG/btsMM5Gz2xK/2vE7fYUMRFtKjd6ioqgIvK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cNIarG/btsMM5Gz2xK/2vE7fYUMRFtKjd6ioqgIvK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcNIarG%2FbtsMM5Gz2xK%2F2vE7fYUMRFtKjd6ioqgIvK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"958\" height=\"510\" data-filename=\"05.jpg\" data-origin-width=\"958\" data-origin-height=\"510\"/></span></figure>\n</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\">  Q&amp;A</h2>\n<p data-ke-size=\"size16\"><b>Q1. 시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?</b><br />A. 고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q2. 모바일에서도 동일한 효과를 얻을 수 있나요?</b><br />A. 반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q3. 무료 시각화 프로젝트는 누구나 사용할 수 있나요?</b><br />A. 네! 누구나 무료로 다운로드해서 사용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. 어떤 웹사이트에 적용하기 좋은가요?</b><br />A. 블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합해요.</p>\n<p data-ke-size=\"size16\"><b>Q5. 시각적 요소가 너무 많으면 산만해지지 않을까요?</b><br />A. 적절한 균형이 중요해요. 핵심 정보만 강조하고 불필요한 요소는 줄이는 게 좋아요.</p>\n```markdown\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"모바일에서도 동일한 효과를 얻을 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 시각화 프로젝트는 누구나 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 누구나 무료로 다운로드해서 사용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"어떤 웹사이트에 적용하기 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소가 너무 많으면 산만해지지 않을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"적절한 균형이 중요합니다. 핵심 정보만 강조하고 불필요한 요소는 줄이는 것이 좋습니다.\"\n      }\n    }\n  ]\n}\n</script>\n```",
        "contentSnippet": "웹 콘텐츠를 효과적으로 시각화하면 독자들의 관심을 끌고 정보 전달력을 극대화할 수 있습니다. 단순한 텍스트에서 벗어나, 가독성을 높이는 핵심 요소와 실전 가이드를 소개합니다. 특히, 시각적 콘텐츠를 쉽게 제작할 수 있도록 클로드용 시각화 프로젝트를 무료 공개하니 놓치지 마세요!\n\n\n \n블로그나 뉴스 사이트를 운영하다 보면, 아무리 좋은 글을 써도 독자들이 끝까지 읽지 않는 경우가 많아요. 사람들이 정보를 빨리 습득하려 하고, 스크롤을 내리면서 중요한 부분만 훑어보는 경우가 많기 때문이죠. 그래서 콘텐츠를 텍스트에서 ‘시각적 경험’으로 바꾸는 것이 점점 더 중요해지고 있어요.\n \n저도 한동안 이런 고민을 했어요. 어떻게 하면 독자들이 글을 더 오래 머물며 집중할 수 있을까? 그러다가 웹 콘텐츠의 시각적 구조를 개선하면 체류 시간과 이해도가 크게 증가한다는 사실을 발견했어요. 오늘은 기사를 매력적인 웹페이지로 변환하는 핵심 가이드를 소개하면서, 이를 쉽게 적용할 수 있도록 클로드용 시각화 프로젝트도 무료 공개할 예정이니 끝까지 읽어보세요!\n \n  효과적인 웹 콘텐츠 시각화의 핵심 요소\n1. 시각적 계층 구조를 명확히 하자\n  제목과 부제목이 가장 중요합니다.\n웹페이지를 열었을 때, 가장 먼저 보이는 것이 제목이죠. 제목은 본문 폰트보다 2~3배 크게, 부제목은 1.5배 크기로 설정해 독자가 한눈에 내용을 파악할 수 있도록 해야 해요.\n \n✅ 발행 정보도 중요해요.\n기사의 신뢰도를 높이려면 날짜와 출처 정보를 추가해야 해요. 보통 작은 글씨로 우측 정렬하면 깔끔한 인상을 줄 수 있어요.\n⚡ 섹션 구분을 확실하게!\n문단이 끝없이 이어지면 독자가 쉽게 지칠 수 있어요. 섹션마다 구분선을 넣거나 배경색을 다르게 설정하면 훨씬 깔끔한 레이아웃이 됩니다.\n2. 핵심 정보를 ‘눈에 띄게’ 강조하자\n단순한 텍스트보다 시각적인 요소를 추가하면 독자들이 정보를 쉽게 이해할 수 있어요.\n \n  도표와 다이어그램 활용\n숫자나 개념이 많을 때는 표나 인포그래픽을 추가하세요. 단순한 설명보다 훨씬 직관적이에요.\n \n  시각적 불릿 포인트 사용\n✅ 단순한 리스트보다 아이콘이 들어간 불릿 포인트가 가독성이 좋아요.\n✅ 중요한 내용은   같은 이모지로 강조해도 좋아요.\n✅ 파란색 원형 마커를 사용하면 깔끔하고 전문가 느낌이 납니다.\n  강조 배지 활용\n예를 들어, “50% 증가” 같은 주요 데이터를 보여줄 때, 둥근 배지나 컬러 박스를 사용하면 한눈에 눈에 띄어요.\n3. 보조 정보를 효과적으로 구성하자\n모든 정보가 같은 비중을 가질 필요는 없어요. 핵심 내용과 추가 정보를 분리하면 독자가 쉽게 원하는 정보를 찾을 수 있어요.\n  사이드바 활용하기\n관련 정보나 부가 자료는 메인 콘텐츠와 분리된 사이드바에 배치하는 게 좋아요.\n  설명 상자 사용하기\n전문 용어나 중요한 개념이 나올 때 라이트 블루 박스로 구분하면 읽기 편해요.\n  탭 형태로 정리하기\n긴 설명이 필요한 경우, 탭 형식으로 정보를 정리하면 독자가 원하는 정보만 빠르게 확인할 수 있어요.\n4. 데이터는 차트와 그래프로 변환하자\n숫자가 많으면 가독성이 떨어져요. 그래프와 다이어그램을 활용하면 정보 전달력이 극대화됩니다.\n \n  차트 활용하기\n선 그래프: 트렌드 변화를 보여줄 때\n막대 그래프: 비교 데이터를 정리할 때\n원형 차트: 비율을 설명할 때\n  프로세스 다이어그램 활용하기\n단계별 과정이나 절차를 설명할 때 순서도를 활용하면 직관적이에요.\n \n \n  웹페이지 구조의 모범 사례\n잘 만들어진 웹페이지는 일정한 구조를 가지고 있어요.\n  최상단 섹션\n✅ 제목 (본문 폰트의 2~3배 크기)\n✅ 설명적인 부제목 (1.5배 크기)\n✅ 날짜 및 출처 정보 (작은 글씨, 우측 정렬)\n  주요 섹션 구조\n✅ 명확한 섹션 제목 (관련 아이콘 포함)\n✅ 주요 내용을 요약한 박스 (라이트 블루 배경)\n✅ 시각적 구분선 삽입\n  핵심 시각 요소\n✅ 개념이나 프로세스를 보여주는 다이어그램\n✅ 주요 수치를 강조하는 배지 요소\n✅ 시각적 불릿 포인트 (파란색 원형 마커)\n  보조 정보 영역\n✅ 사이드바에 관련 정보 배치\n✅ 탭 형태로 추가 정보 구성\n  하단부 구성\n✅ 요약 정보 또는 결론\n✅ 추가 자료 링크 제공\n✅ 저작권 정보 표시\n \n 시각화 작성예시\n1. 가로형\n\n\n2 세로형\n\n\n \n \n  클로드용 시각화 프로젝트 무료 공개!\n이 모든 걸 직접 구현하려면 시간이 많이 걸리겠죠? 그래서 여러분을 위해 시각화 프로젝트를 무료로 공개합니다!\n  이 프로젝트로 할 수 있는 것:\n자동으로 가독성 높은 웹 콘텐츠 변환\n시각적 요소 (도표, 배지, 아이콘) 쉽게 추가\n반응형 디자인 적용으로 모바일 최적화\n  무료 다운로드 링크: \n지금 바로 적용해 보세요! 웹 콘텐츠의 가독성을 높이는 것이 곧 독자와의 소통을 강화하는 길입니다.\nhttps://www.threads.net/@gpt_patk/post/DHSGxlOSOmu?xmt=AQGzpWXDn8ymKaGTj8Z7rSyaW0ICjfaFLp6l6RaNLpHBNg\n \n \n 프로젝트 생성방법\n1. 클로드 첫 페이지에서 프로젝트 - 프로젝트 생성 클릭 ▼\n\n\n \n2. 프로젝트 제목과 목표 입력 ▼\n\n\n \n3. 프로젝트 지침 설정에서 다운로드한 텍스트 파일의 지침복사. ▼\n\n\n \n4. 파일첨부에서 다운로드한 템플릿 HTML 파일 등록하면 프로젝트 생성 완료▼ \n\n\n \n5. 사용법 : 해당 프로젝트 채팅창에 \"가로형,세로형  선택 /  작성자 / 시각화할 자료 입력\" 하면 시각화 진행\n\n\n\n  Q&A\nQ1. 시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?\nA. 고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있어요.\nQ2. 모바일에서도 동일한 효과를 얻을 수 있나요?\nA. 반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있어요.\nQ3. 무료 시각화 프로젝트는 누구나 사용할 수 있나요?\nA. 네! 누구나 무료로 다운로드해서 사용할 수 있습니다.\nQ4. 어떤 웹사이트에 적용하기 좋은가요?\nA. 블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합해요.\nQ5. 시각적 요소가 너무 많으면 산만해지지 않을까요?\nA. 적절한 균형이 중요해요. 핵심 정보만 강조하고 불필요한 요소는 줄이는 게 좋아요.\n```markdown\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"모바일에서도 동일한 효과를 얻을 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 시각화 프로젝트는 누구나 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 누구나 무료로 다운로드해서 사용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"어떤 웹사이트에 적용하기 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소가 너무 많으면 산만해지지 않을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"적절한 균형이 중요합니다. 핵심 정보만 강조하고 불필요한 요소는 줄이는 것이 좋습니다.\"\n      }\n    }\n  ]\n}\n\n```",
        "guid": "https://muzbox.tistory.com/483554",
        "categories": [
          "AI, 미래기술/AI 콘텐츠 제작 및 글쓰기",
          "ux 개선",
          "가독성 향상",
          "데이터 시각화",
          "무료 시각화 프로젝트",
          "반응형 디자인",
          "시각적 콘텐츠",
          "웹 접근성",
          "웹 콘텐츠 시각화",
          "웹페이지 디자인",
          "콘텐츠 최적화"
        ],
        "isoDate": "2025-03-17T02:01:17.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "｜RULIWEB｜",
        "title": "어둠도 절망도 가르는 전사들, 나이트 슬래셔즈: 리메이크",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2291",
        "pubDate": "Thu, 20 Mar 2025 22:01:29 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/03/20/195b3a3ca8a51ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2025-03-20T13:01:29.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "Visual Studio Code 1.97 공개. 새로운 AI 지원 기능 Copilot NES 프리뷰",
        "link": "https://jacking75.github.io/ai-github_copilot_20250321/",
        "pubDate": "Fri, 21 Mar 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vThImQ4uAis3gwImZtL0n4yM0hU5xHYoWN0qdzRPkng7VecJaOpcpbS8kPmr-2dzWhKZODfwJsGOyPu/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-github_copilot_20250321/",
        "isoDate": "2025-03-20T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "프로그래머의 손톱",
        "link": "https://jeho.page/essay/2025/03/17/programmer-nails.html",
        "pubDate": "2025-03-17T03:29:00.000Z",
        "author": "김재호",
        "content": "<p>신입 사원 때 회사의 CTO 이자 수석 프로그래머였던 분이 말씀하셨습니다.<br />\n프로그래머는 손톱이 짧아야 한다고. 손톱이 길면 코딩하는 사람이 아니라고.<br />\n그래서 면접 땐 손톱도 살펴본다고.</p>\n\n<p>완전히 동감했습니다.<br />\n개발자라면 다들 알겁니다. 손톱이 길 때 키보드에 닿는 그 느낌이 얼마나 싫은지.<br />\n손톱을 일주일에 두 번쯤 자릅니다. 아주 조금만 튀어나와도 그 느낌 때문에 코딩을 할 수가 없거든요.</p>\n\n<p>예전에 어떤 대기업에 다닐 때 일입니다.<br />\n누군가 전체 게시판에 손톱에 대해 글을 썼습니다.<br />\n제발 사무실에서 손톱 좀 자르지 말라고. 딱딱 거리는 소리 아주 듣기 싫어 죽겠다고.<br />\n댓글이 무척이나 뜨거웠던 걸로 기억합니다. 모두가 볼 수 있는 전체 게시판이었으니까요.</p>\n\n<p>말투가 너무 공격적이었기 때문에 비추를 많이 받았던 걸로 기억하지만… <br />\n생각해 보면 의견 자체는 타당한 것 같았습니다.<br />\n저 정도로 듣기 싫어하는 사람들이 있는데 내 약간의 편의를 위해서 손톱을 사무실에서 잘라야 하는가?</p>\n\n<p>솔직히 말하면 저도 사무실에서 손톱을 자르는 사람 중 하나였습니다.<br />\n그 글을 본 이후 손톱을 자를 때마다 미안한 마음이 들었습니다. 결국 손톱깎이를 집으로 다시 가져왔습니다. 😂</p>\n\n<p>어릴 땐 손톱 자르는 걸 지독히도 귀찮아했습니다.<br />\n잔뜩 길어진 손톱을 수업시간에 물어뜯어서 잘라내곤 했던 기억이 납니다. 아우 드러워.<br />\n프로그래머가 되고 나서 공짜로 생긴 좋은 습관이 하나 있다면 바로 손톱 관리네요. (웃음)</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2024/02/01/programmer-pain.html\">프로그래머의 고통</a></li>\n  <li><a href=\"/essay/2023/10/13/marriage-and-programmers.html\">결혼과 프로그래머</a></li>\n</ul>",
        "contentSnippet": "신입 사원 때 회사의 CTO 이자 수석 프로그래머였던 분이 말씀하셨습니다.\n완전히 동감했습니다.\n예전에 어떤 대기업에 다닐 때 일입니다.\n말투가 너무 공격적이었기 때문에 비추를 많이 받았던 걸로 기억하지만… \n솔직히 말하면 저도 사무실에서 손톱을 자르는 사람 중 하나였습니다.\n어릴 땐 손톱 자르는 걸 지독히도 귀찮아했습니다.\n\n함께 읽으면 좋은 글:\n프로그래머의 고통\n결혼과 프로그래머",
        "summary": "신입 사원 때 회사의 CTO 이자 수석 프로그래머였던 분이 말씀하셨습니다. 프로그래머는 손톱이 짧아야 한다고. 손톱이 길면 코딩하는 사람이 아니라고. 그래서 면접 땐 손톱도 살펴본다고.",
        "id": "https://jeho.page/essay/2025/03/17/programmer-nails",
        "isoDate": "2025-03-17T03:29:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "타입스크립트, 이제 Go로 다시 태어난다: 10배 빨라지는 이유와 커뮤니티 반응까지",
        "link": "https://blog.gaerae.com/2025/03/a-10x-faster-typescript-go.html",
        "pubDate": "Mon, 17 Mar 2025 03:06:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<div class=\"separator\" style=\"clear: both;\"><img border=\"0\" data-original-height=\"700\" data-original-width=\"1124\" height=\"399\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgX__314nKNgfp-DeE9nJFB-jgTt73QCCV7mB2ORMD9I5vhtznqrw29xue9rFnfZHSnSBPgjARcWxonk1xXqwyiI5xFSaO1cw0kgGfnrEHP2pj_UEMxQ5HriKhhWOy3_SPmFHOXBg1f8qrJLTpN1EperIwh6RE-bxLfCMzJJXQW32G9Ey70seB50T1vk8g/w640-h399/typescript-go.png\" width=\"640\" /></div>\n<p>마이크로소프트가 최근 TypeScript 컴파일러를 Go 언어로 포팅한다고 발표했습니다. 이 결정은 개발 커뮤니티에 큰 화제가 되었는데, 과연 왜 마이크로소프트는 TypeScript를 Go로 재작성하기로 했을까요? 기존 TypeScript의 한계, Go를 선택한 이유와 Rust가 아닌 Go인 이유, 그리고 앞으로의 로드맵과 커뮤니티의 반응까지 종합적으로 살펴보겠습니다.</p>\n<h2>기존 타입스크립트의 한계: 성능과 유지보수 문제</h2>\n<p>현재의 타입스크립트 컴파일러(<code inline=\"\">tsc</code>)는 JavaScript(정확히는 TypeScript로 작성된 JS)로 구현되어 Node.js 환경에서 동작합니다. 이는 간편한 배포와 쉬운 확장성이라는 장점이 있었지만, 다음과 같은 근본적인 성능 문제가 있었습니다.</p>\n<ul>\n<li><strong>대규모 프로젝트에서의 느린 빌드 속도</strong><br />\n프로젝트가 커질수록 로딩 및 타입 검사에 걸리는 시간이 급격히 증가해 개발 생산성을 저하시켰습니다.</li>\n<li><strong>단일 스레드 동작</strong>으로 인해 멀티코어 CPU의 병렬성을 충분히 활용하지 못했습니다.</li>\n<li>Node.js의 가비지 컬렉션과 JIT 컴파일 오버헤드로 인해 최적화에 제약이 있었습니다.</li>\n</ul>\n<p>실제 VS Code 수준(약 150만 라인)의 프로젝트는 전체 빌드에 최대 1분 이상 걸리는 문제가 지속되어 왔습니다.</p>\n<h2>Go 언어로의 전환: 10배 빨라지는 TypeScript</h2>\n<p>이러한 문제를 근본적으로 해결하기 위해 타입스크립트 팀은 네이티브 언어로의 포팅을 결정했고, 선택된 언어는 Go였습니다. Go로 포팅하면 다음과 같은 이점이 명확히 나타납니다.</p>\n<ul>\n<li><strong>컴파일 성능 대폭 향상 (최대 10배)</strong>: 초기 테스트에서 VS Code 전체 빌드 시간을 77.8초에서 7.5초로 단축하여 약 10배의 성능 향상을 입증했습니다.</li>\n<li><strong>멀티코어 활용 가능</strong>: Go의 멀티스레딩 지원 덕분에 병렬로 파싱, 바인딩, 타입 검사를 실행할 수 있게 되었습니다.</li>\n<li><strong>메모리 효율성 향상</strong>: 네이티브 코드의 메모리 효율 개선과 공유 메모리 활용으로 메모리 사용량이 최대 50% 감소했습니다.</li>\n<li><strong>간편한 배포 및 유지보수성 향상</strong>: Go는 정적 컴파일을 지원하여 단일 바이너리 형태로 배포할 수 있어 환경 설정 및 CI/CD가 간편해집니다. 또한, 정적 타입 덕분에 컴파일러 자체의 안정성도 높아집니다.</li>\n</ul>\n<p>결과적으로 개발자들이 더욱 빠르고 안정적인 개발 경험을 얻을 수 있게 되며, IDE의 초기 로딩과 코드 편집 응답 속도가 획기적으로 빨라질 것으로 기대됩니다.</p>\n<h2>왜 Rust가 아니라 Go인가?</h2>\n<p>발표 직후 가장 큰 논쟁거리는 왜 Rust가 아니라 Go를 선택했느냐는 것이었습니다. Rust는 최근 JavaScript 도구 생태계에서 성능을 높이는 새로운 표준처럼 여겨졌기 때문입니다. Rust를 선택하지 않은 이유는 다음과 같습니다.</p>\n<ul>\n<li><strong>구조적 호환성 문제</strong>: 기존 TypeScript 컴파일러(tsc)는 JS의 GC와 가변 객체 그래프를 광범위하게 활용합니다. Rust로 옮기려면 공유 가변성(shared mutability) 문제로 인해 수많은 부분을 재설계해야 했고, 이는 호환성을 깨고 버그를 초래할 위험이 컸습니다.</li>\n<li><strong>복잡성 증가</strong>: Rust의 엄격한 메모리 관리 규칙을 준수하면서 기존 기능을 그대로 구현하려면 과도하게 <code inline=\"\">unsafe</code> 코드를 사용하는 등 Rust의 장점을 살리지 못하는 결과를 초래할 수 있었습니다.</li>\n<li><strong>개발자 경험의 일관성</strong>: 타입스크립트 설계자 Anders Hejlsberg는 \"새로운 패러다임으로 재설계하는 리스크보다는 기존의 동작 방식을 최대한 유지하는 것이 중요했다\"고 밝혔습니다. Go는 JS와 유사한 가비지 컬렉터를 사용하며 메모리 관리와 코드 스타일 측면에서 기존 코드베이스와 호환성이 높았습니다.</li>\n</ul>\n<p>실제 Rust 기반의 SWC 컴파일러 개발자(kdy1) 역시 과거 타입스크립트 컴파일러를 Rust로 포팅하는 시도를 했지만, 구조적 한계 때문에 중단한 사례도 있습니다.</p>\n<h2>앞으로의 로드맵과 일정</h2>\n<p>마이크로소프트는 이번 프로젝트를 TypeScript 7.0 버전에서 공식적으로 출시할 예정입니다. 구체적인 로드맵은 다음과 같습니다.</p>\n<ul>\n<li>2025년 중반까지 Go로 작성된 TypeScript 컴파일러의 <strong>프리뷰 버전</strong> 제공 예정</li>\n<li>2025년 말까지 타입 검사 및 언어 서비스까지 기능 완비(feature-complete) 예정</li>\n<li>이후 기존 JS 버전(TypeScript 6.x 버전)은 상당 기간 유지하면서 개발자가 점진적으로 전환하도록 지원</li>\n</ul>\n<p>현재 GitHub에 Go 포팅 버전의 초기 코드가 공개되어 있어, 개발자들이 직접 테스트하고 피드백을 줄 수 있습니다.</p>\n<h2>커뮤니티 및 전문가들의 반응: 기대와 우려 사이</h2>\n<p>커뮤니티에서는 대체로 긍정적인 평가가 많습니다. 특히 현업 개발자들은 \"10배 빨라진 컴파일 속도\"에 큰 기대를 나타냈습니다. 하지만 Rust가 아니라 Go를 선택한 것에 대한 일부 아쉬움과 우려도 있었습니다. 특히 WebAssembly 번들 크기나 성능 측면에서 Rust보다 불리할 수 있다는 점에 대한 지적도 나왔습니다.</p>\n<p>그럼에도 불구하고, 마이크로소프트가 공개한 포팅 이유와 기술적 설명을 접한 뒤에는 다수의 개발자가 납득하고 긍정적으로 평가했습니다. 무엇보다 \"중요한 건 컴파일러의 성능 향상과 안정성이며, 결과가 좋다면 언어 선택은 부차적이다\"라는 의견이 힘을 얻고 있습니다.</p>\n<h2>결론: TypeScript의 새로운 도약을 기대하며</h2>\n<p>결론적으로 마이크로소프트의 이번 선택은 TypeScript의 향후 10년을 대비한 전략적인 결정으로 평가됩니다. Go로의 포팅이 성공적으로 이루어진다면, 앞으로 더 많은 프로젝트들이 TypeScript의 강력한 타입 시스템과 함께 더욱 향상된 성능과 생산성을 경험할 수 있을 것입니다. Rust 등 다른 후보 언어를 둘러싼 초기 논쟁도 있었지만, 결과적으로 이번 포팅 결정은 실용적이고 현실적인 선택이라는 평가를 받고 있습니다.</p>\n<p>타입스크립트의 새로운 시대가 열리고 있습니다. 마이크로소프트의 이번 결정이 실제 어떤 성과로 이어질지, 커뮤니티와 함께 기대하며 지켜볼 일입니다.</p>\n<hr />\n<h2>출처 및 참고자료</h2>\n<ul>\n<li>GitHub 공식 저장소: <a href=\"https://github.com/microsoft/typescript-go\">microsoft/typescript-go</a></li>\n<li>Microsoft 공식 블로그: <a href=\"https://devblogs.microsoft.com/typescript/typescript-native-port/\">A 10x Faster TypeScript</a></li> \n<li>개발자 커뮤니티 (Hacker News): <a href=\"https://news.ycombinator.com/item?id=43333156\">A 10x Faster TypeScript</a></li>\n<li>개발자 커뮤니티 (Reddit): <a href=\"https://www.reddit.com/r/typescript/comments/1j8s467/a_10x_faster_typescript/\">A 10x Faster TypeScript : r/typescript</a></li>\n<li>2ality 기술 블로그: <a href=\"https://2ality.com/2025/03/typescript-in-go.html\">A closer look at the details behind the Go port of the TypeScript compiler</a></li>\n<li>Simon Willison 기술 블로그: <a href=\"https://simonwillison.net/2025/Mar/11/ryan-cavanaugh/\">A quote from Ryan Cavanaugh</a></li>\n<li>YouTube 영상 요약 및 분석 (ChainDesk.ai 요약 페이지): <a href=\"https://www.chaindesk.ai/tools/youtube-summarizer/microsoft-goes-nuclear-on-type-script-codebase-PQ2WjtaPfXU\">Microsoft goes nuclear on TypeScript codebase…</a></li>\n</ul>",
        "contentSnippet": "마이크로소프트가 최근 TypeScript 컴파일러를 Go 언어로 포팅한다고 발표했습니다. 이 결정은 개발 커뮤니티에 큰 화제가 되었는데, 과연 왜 마이크로소프트는 TypeScript를 Go로 재작성하기로 했을까요? 기존 TypeScript의 한계, Go를 선택한 이유와 Rust가 아닌 Go인 이유, 그리고 앞으로의 로드맵과 커뮤니티의 반응까지 종합적으로 살펴보겠습니다.\n기존 타입스크립트의 한계: 성능과 유지보수 문제\n현재의 타입스크립트 컴파일러(tsc)는 JavaScript(정확히는 TypeScript로 작성된 JS)로 구현되어 Node.js 환경에서 동작합니다. 이는 간편한 배포와 쉬운 확장성이라는 장점이 있었지만, 다음과 같은 근본적인 성능 문제가 있었습니다.\n대규모 프로젝트에서의 느린 빌드 속도\n단일 스레드 동작으로 인해 멀티코어 CPU의 병렬성을 충분히 활용하지 못했습니다.\nNode.js의 가비지 컬렉션과 JIT 컴파일 오버헤드로 인해 최적화에 제약이 있었습니다.\n실제 VS Code 수준(약 150만 라인)의 프로젝트는 전체 빌드에 최대 1분 이상 걸리는 문제가 지속되어 왔습니다.\nGo 언어로의 전환: 10배 빨라지는 TypeScript\n이러한 문제를 근본적으로 해결하기 위해 타입스크립트 팀은 네이티브 언어로의 포팅을 결정했고, 선택된 언어는 Go였습니다. Go로 포팅하면 다음과 같은 이점이 명확히 나타납니다.\n컴파일 성능 대폭 향상 (최대 10배): 초기 테스트에서 VS Code 전체 빌드 시간을 77.8초에서 7.5초로 단축하여 약 10배의 성능 향상을 입증했습니다.\n멀티코어 활용 가능: Go의 멀티스레딩 지원 덕분에 병렬로 파싱, 바인딩, 타입 검사를 실행할 수 있게 되었습니다.\n메모리 효율성 향상: 네이티브 코드의 메모리 효율 개선과 공유 메모리 활용으로 메모리 사용량이 최대 50% 감소했습니다.\n간편한 배포 및 유지보수성 향상: Go는 정적 컴파일을 지원하여 단일 바이너리 형태로 배포할 수 있어 환경 설정 및 CI/CD가 간편해집니다. 또한, 정적 타입 덕분에 컴파일러 자체의 안정성도 높아집니다.\n결과적으로 개발자들이 더욱 빠르고 안정적인 개발 경험을 얻을 수 있게 되며, IDE의 초기 로딩과 코드 편집 응답 속도가 획기적으로 빨라질 것으로 기대됩니다.\n왜 Rust가 아니라 Go인가?\n발표 직후 가장 큰 논쟁거리는 왜 Rust가 아니라 Go를 선택했느냐는 것이었습니다. Rust는 최근 JavaScript 도구 생태계에서 성능을 높이는 새로운 표준처럼 여겨졌기 때문입니다. Rust를 선택하지 않은 이유는 다음과 같습니다.\n구조적 호환성 문제: 기존 TypeScript 컴파일러(tsc)는 JS의 GC와 가변 객체 그래프를 광범위하게 활용합니다. Rust로 옮기려면 공유 가변성(shared mutability) 문제로 인해 수많은 부분을 재설계해야 했고, 이는 호환성을 깨고 버그를 초래할 위험이 컸습니다.\n복잡성 증가: Rust의 엄격한 메모리 관리 규칙을 준수하면서 기존 기능을 그대로 구현하려면 과도하게 unsafe 코드를 사용하는 등 Rust의 장점을 살리지 못하는 결과를 초래할 수 있었습니다.\n개발자 경험의 일관성: 타입스크립트 설계자 Anders Hejlsberg는 \"새로운 패러다임으로 재설계하는 리스크보다는 기존의 동작 방식을 최대한 유지하는 것이 중요했다\"고 밝혔습니다. Go는 JS와 유사한 가비지 컬렉터를 사용하며 메모리 관리와 코드 스타일 측면에서 기존 코드베이스와 호환성이 높았습니다.\n실제 Rust 기반의 SWC 컴파일러 개발자(kdy1) 역시 과거 타입스크립트 컴파일러를 Rust로 포팅하는 시도를 했지만, 구조적 한계 때문에 중단한 사례도 있습니다.\n앞으로의 로드맵과 일정\n마이크로소프트는 이번 프로젝트를 TypeScript 7.0 버전에서 공식적으로 출시할 예정입니다. 구체적인 로드맵은 다음과 같습니다.\n2025년 중반까지 Go로 작성된 TypeScript 컴파일러의 프리뷰 버전 제공 예정\n2025년 말까지 타입 검사 및 언어 서비스까지 기능 완비(feature-complete) 예정\n이후 기존 JS 버전(TypeScript 6.x 버전)은 상당 기간 유지하면서 개발자가 점진적으로 전환하도록 지원\n현재 GitHub에 Go 포팅 버전의 초기 코드가 공개되어 있어, 개발자들이 직접 테스트하고 피드백을 줄 수 있습니다.\n커뮤니티 및 전문가들의 반응: 기대와 우려 사이\n커뮤니티에서는 대체로 긍정적인 평가가 많습니다. 특히 현업 개발자들은 \"10배 빨라진 컴파일 속도\"에 큰 기대를 나타냈습니다. 하지만 Rust가 아니라 Go를 선택한 것에 대한 일부 아쉬움과 우려도 있었습니다. 특히 WebAssembly 번들 크기나 성능 측면에서 Rust보다 불리할 수 있다는 점에 대한 지적도 나왔습니다.\n그럼에도 불구하고, 마이크로소프트가 공개한 포팅 이유와 기술적 설명을 접한 뒤에는 다수의 개발자가 납득하고 긍정적으로 평가했습니다. 무엇보다 \"중요한 건 컴파일러의 성능 향상과 안정성이며, 결과가 좋다면 언어 선택은 부차적이다\"라는 의견이 힘을 얻고 있습니다.\n결론: TypeScript의 새로운 도약을 기대하며\n결론적으로 마이크로소프트의 이번 선택은 TypeScript의 향후 10년을 대비한 전략적인 결정으로 평가됩니다. Go로의 포팅이 성공적으로 이루어진다면, 앞으로 더 많은 프로젝트들이 TypeScript의 강력한 타입 시스템과 함께 더욱 향상된 성능과 생산성을 경험할 수 있을 것입니다. Rust 등 다른 후보 언어를 둘러싼 초기 논쟁도 있었지만, 결과적으로 이번 포팅 결정은 실용적이고 현실적인 선택이라는 평가를 받고 있습니다.\n타입스크립트의 새로운 시대가 열리고 있습니다. 마이크로소프트의 이번 결정이 실제 어떤 성과로 이어질지, 커뮤니티와 함께 기대하며 지켜볼 일입니다.\n출처 및 참고자료\nGitHub 공식 저장소: microsoft/typescript-go\nMicrosoft 공식 블로그: A 10x Faster TypeScript\n \n개발자 커뮤니티 (Hacker News): A 10x Faster TypeScript\n개발자 커뮤니티 (Reddit): A 10x Faster TypeScript : r/typescript\n2ality 기술 블로그: A closer look at the details behind the Go port of the TypeScript compiler\nSimon Willison 기술 블로그: A quote from Ryan Cavanaugh\nYouTube 영상 요약 및 분석 (ChainDesk.ai 요약 페이지): Microsoft goes nuclear on TypeScript codebase…",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-82293066507303412",
        "categories": [
          {
            "_": "go",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "typescript",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-03-17T03:06:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "이건개발",
        "title": "C# 황당한 코딩 오류 / 점이 빠졌는데 동작하였다.",
        "link": "https://serverdown.tistory.com/1223",
        "pubDate": "Sun, 23 Mar 2025 01:12:00 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1223#entry1223comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"300\" data-origin-height=\"168\"><span data-url=\"https://blog.kakaocdn.net/dn/bZpKeD/btsMUzG8iIj/xlfWRFWs5e6ptukfKTZYo0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bZpKeD/btsMUzG8iIj/xlfWRFWs5e6ptukfKTZYo0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bZpKeD/btsMUzG8iIj/xlfWRFWs5e6ptukfKTZYo0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbZpKeD%2FbtsMUzG8iIj%2FxlfWRFWs5e6ptukfKTZYo0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"300\" height=\"168\" data-origin-width=\"300\" data-origin-height=\"168\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"519\" data-origin-height=\"82\"><span data-url=\"https://blog.kakaocdn.net/dn/bGzfRo/btsMTIY7F9M/TCGeeOYNHD8lECnyYeQN81/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bGzfRo/btsMTIY7F9M/TCGeeOYNHD8lECnyYeQN81/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bGzfRo/btsMTIY7F9M/TCGeeOYNHD8lECnyYeQN81/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbGzfRo%2FbtsMTIY7F9M%2FTCGeeOYNHD8lECnyYeQN81%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"519\" height=\"82\" data-origin-width=\"519\" data-origin-height=\"82\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">코드:&nbsp;</h2>\n<p data-ke-size=\"size16\">var fullsize = go.AddComponent&lt;Fullsize&gt;(); <br /><span style=\"text-align: start;\">Fullsize</span> Inst = fullsize; <br />Debug.LogError(\"fullsize&nbsp;create\"); </p>\n<p data-ke-size=\"size16\">유니티 구요&nbsp;</p>\n<p data-ke-size=\"size16\">Fullsize 를 생성해서&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">Fullsize 의 static 변수 </span><span style=\"text-align: start;\">Inst 에; 넣는 싱클톤 코드 입니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">Fullsize.Inst 를 사용하려고 하니 없다고 에러가 나고 있었구요</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">한참 로그 넣고 이것저것 찾아보다 알았습니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"344\" data-origin-height=\"103\"><span data-url=\"https://blog.kakaocdn.net/dn/YdHjc/btsMUz8c3BV/qbAbCYAkWYpBBUEeKEEC91/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/YdHjc/btsMUz8c3BV/qbAbCYAkWYpBBUEeKEEC91/img.png\"><img src=\"https://blog.kakaocdn.net/dn/YdHjc/btsMUz8c3BV/qbAbCYAkWYpBBUEeKEEC91/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FYdHjc%2FbtsMUz8c3BV%2FqbAbCYAkWYpBBUEeKEEC91%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"344\" height=\"103\" data-origin-width=\"344\" data-origin-height=\"103\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">점이 빠져있었습니다.&nbsp;</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">그래서 static 변수에 넣는게 아니고 지역 변수에 넣네요&nbsp;</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">황당해서 적어봤습니다.</span></p>",
        "contentSnippet": "코드: \nvar fullsize = go.AddComponent<Fullsize>(); \nFullsize Inst = fullsize; \nDebug.LogError(\"fullsize create\"); \n유니티 구요 \nFullsize 를 생성해서 \nFullsize 의 static 변수 Inst 에; 넣는 싱클톤 코드 입니다.\nFullsize.Inst 를 사용하려고 하니 없다고 에러가 나고 있었구요\n한참 로그 넣고 이것저것 찾아보다 알았습니다.\n \n\n\n점이 빠져있었습니다. \n그래서 static 변수에 넣는게 아니고 지역 변수에 넣네요 \n황당해서 적어봤습니다.",
        "guid": "https://serverdown.tistory.com/1223",
        "categories": [
          "프로그래밍/개발메모",
          "CSharp"
        ],
        "isoDate": "2025-03-22T16:12:00.000Z"
      },
      {
        "creator": "이건개발",
        "title": "SUI MOVE 로 서비스를 개발해보자 01",
        "link": "https://serverdown.tistory.com/1221",
        "pubDate": "Sat, 22 Mar 2025 02:49:53 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1221#entry1221comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"200\" data-origin-height=\"68\"><span data-url=\"https://blog.kakaocdn.net/dn/qYrPl/btsMS9CJTPf/ptiPlsz01UNd5UKLWlpBx0/tfile.dat\" data-phocus=\"https://blog.kakaocdn.net/dn/qYrPl/btsMS9CJTPf/ptiPlsz01UNd5UKLWlpBx0/tfile.dat\"><img src=\"https://blog.kakaocdn.net/dn/qYrPl/btsMS9CJTPf/ptiPlsz01UNd5UKLWlpBx0/tfile.dat\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FqYrPl%2FbtsMS9CJTPf%2FptiPlsz01UNd5UKLWlpBx0%2Ftfile.dat\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"200\" height=\"68\" data-origin-width=\"200\" data-origin-height=\"68\"/></span></figure>\n</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"519\" data-origin-height=\"82\"><span data-url=\"https://blog.kakaocdn.net/dn/0HQfw/btsMSwk4Spn/3eUtkKUR3pI6uwfxYu14E0/tfile.dat\" data-phocus=\"https://blog.kakaocdn.net/dn/0HQfw/btsMSwk4Spn/3eUtkKUR3pI6uwfxYu14E0/tfile.dat\"><img src=\"https://blog.kakaocdn.net/dn/0HQfw/btsMSwk4Spn/3eUtkKUR3pI6uwfxYu14E0/tfile.dat\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F0HQfw%2FbtsMSwk4Spn%2F3eUtkKUR3pI6uwfxYu14E0%2Ftfile.dat\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"519\" height=\"82\" data-origin-width=\"519\" data-origin-height=\"82\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2022년엔 크레이튼으로 개발하다 망한적이 있어서&nbsp;</p>\n<p data-ke-size=\"size16\">망하지 않을 좋은 걸로 골랐습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">앱토스도 MOVE 를 이용하긴하는데 차트를 보니 수이가 강하네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">업그레이드가 가능하다.</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"702\" data-origin-height=\"228\"><span data-url=\"https://blog.kakaocdn.net/dn/cNkPlz/btsMTb1AM3f/uxLDcGaqykVJm64OKk61K1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cNkPlz/btsMTb1AM3f/uxLDcGaqykVJm64OKk61K1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cNkPlz/btsMTb1AM3f/uxLDcGaqykVJm64OKk61K1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcNkPlz%2FbtsMTb1AM3f%2FuxLDcGaqykVJm64OKk61K1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"702\" height=\"228\" data-origin-width=\"702\" data-origin-height=\"228\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">문서: <a href=\"https://docs.sui.io/concepts/sui-move-concepts/packages\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://docs.sui.io/concepts/sui-move-concepts/packages</a></p>\n<p data-ke-size=\"size16\">MOVE 는 업그레이드가 가능하다고 홍보하고 있습니다.<br />이것 만으로도 어마어마한것입니다.<br />진짜라면 좋겠군요</p>\n<p data-ke-size=\"size16\">이더리움때도 언어를 아주 꼬아가지고 억지로 되긴 했었지만<br />(이정도면 거의 미래를 예측하는 수준이라 안된다고 봐야겠지요.)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">따라 해보기 문서</h2>\n<p data-ke-size=\"size16\">링크: <a href=\"https://docs.sui.io/guides/developer/getting-started\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://docs.sui.io/guides/developer/getting-started</a></p>\n<figure id=\"og_1742579369471\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Getting Started | Sui Documentation\" data-og-description=\"Sui is the first internet-scale programmable blockchain platform. That might read like marketing speak, but as you peruse the documentation to understand the technology, you will discover that Sui addresses many of the problems that hold blockchains back f\" data-og-host=\"docs.sui.io\" data-og-source-url=\"https://docs.sui.io/guides/developer/getting-started\" data-og-url=\"https://docs.sui.io/guides/developer/getting-started\" data-og-image=\"https://scrap.kakaocdn.net/dn/dozask/hyYvp0tWT6/KCMiHRAuel9fzXc5oj9RE1/img.png?width=1920&amp;height=1080&amp;face=0_0_1920_1080,https://scrap.kakaocdn.net/dn/eCNHz8/hyYrV7Irxe/lJXHbbcIVtKeYGPpNENhuK/img.png?width=1920&amp;height=1080&amp;face=0_0_1920_1080\"><a href=\"https://docs.sui.io/guides/developer/getting-started\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://docs.sui.io/guides/developer/getting-started\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/dozask/hyYvp0tWT6/KCMiHRAuel9fzXc5oj9RE1/img.png?width=1920&amp;height=1080&amp;face=0_0_1920_1080,https://scrap.kakaocdn.net/dn/eCNHz8/hyYrV7Irxe/lJXHbbcIVtKeYGPpNENhuK/img.png?width=1920&amp;height=1080&amp;face=0_0_1920_1080');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Getting Started | Sui Documentation</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Sui is the first internet-scale programmable blockchain platform. That might read like marketing speak, but as you peruse the documentation to understand the technology, you will discover that Sui addresses many of the problems that hold blockchains back f</p>\n<p class=\"og-host\" data-ke-size=\"size16\">docs.sui.io</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">목표</h2>\n<p data-ke-size=\"size16\">1. 가위바위보 게임 개발 &lt;-- 진행중</p>\n<p data-ke-size=\"size16\">2. NFT 자판기 개발</p>\n<p data-ke-size=\"size16\">3. 게임에 연동</p>\n<p data-ke-size=\"size16\">(매번 하는 식으로 목표를 정했습니다.)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">개발환경 세팅</h2>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">choco 설치</h2>\n<p data-ke-size=\"size16\">윈도우즈 개발자는 choco 를</p>\n<p data-ke-size=\"size16\">mac 이나 리눅스는 brew 를 사용한다는군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1. choco 사이트 이동: <a href=\"https://chocolatey.org/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://chocolatey.org/</a></p>\n<p data-ke-size=\"size16\">2. 우측 상단에&nbsp; Try It Now 클릭</p>\n<p data-ke-size=\"size16\">3. step1 은 넘어갑니다. 하단에 Take The Install~~ 클릭</p>\n<p data-ke-size=\"size16\">4. 상단에 설치 방법은 잘모르니 Basic ~~&nbsp;</p>\n<p data-ke-size=\"size16\">5. 설치 명령어를 알려줍니다. 복사해서 cmd 창 열여서 돌립니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">choco 설치 방법</h2>\n<p data-ke-size=\"size16\">여러번의 실패 끝에 설치했습니다.</p>\n<p data-ke-size=\"size16\">- cmd 창은 관리자 권한으로 열어야합니다.<br />- C:\\ProgramData\\chocolatey&nbsp;폴더를 삭제해야합니다.&nbsp;<br />- C:\\Users\\gunil\\AppData\\Local\\Temp\\chocolatey 폴더 안에 비어있어야합니다.</p>\n<p data-ke-size=\"size16\">이 다음 실행하면 설치가 성공했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">6. <span style=\"text-align: start;\">choco install sui 로 sui 설치</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"565\" data-origin-height=\"262\"><span data-url=\"https://blog.kakaocdn.net/dn/csn5WI/btsMUqpItGD/DXN4R9qzq9Fkm8lUp7j73K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/csn5WI/btsMUqpItGD/DXN4R9qzq9Fkm8lUp7j73K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/csn5WI/btsMUqpItGD/DXN4R9qzq9Fkm8lUp7j73K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcsn5WI%2FbtsMUqpItGD%2FDXN4R9qzq9Fkm8lUp7j73K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"565\" height=\"262\" data-origin-width=\"565\" data-origin-height=\"262\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이미 설치되어있다는군요 ㄷㄷ</p>\n<p data-ke-size=\"size16\">basic 에 포함되어있나봅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"251\" data-origin-height=\"73\"><span data-url=\"https://blog.kakaocdn.net/dn/cPo1LJ/btsMTIYRGHj/VLKiftQKibLaWP28DdyoEK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cPo1LJ/btsMTIYRGHj/VLKiftQKibLaWP28DdyoEK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cPo1LJ/btsMTIYRGHj/VLKiftQKibLaWP28DdyoEK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcPo1LJ%2FbtsMTIYRGHj%2FVLKiftQKibLaWP28DdyoEK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"251\" height=\"73\" data-origin-width=\"251\" data-origin-height=\"73\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">sui --version 치면</p>\n<p data-ke-size=\"size16\">sui&nbsp;1.45.0-3ef5cc5b5c90</p>\n<p data-ke-size=\"size16\">버전도 나오네요 설치는 끝났나봅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"359\" data-origin-height=\"335\"><span data-url=\"https://blog.kakaocdn.net/dn/bt7f01/btsMTNyWsYo/wV5ftT9AwCUDBiS9dkQWCK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bt7f01/btsMTNyWsYo/wV5ftT9AwCUDBiS9dkQWCK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bt7f01/btsMTNyWsYo/wV5ftT9AwCUDBiS9dkQWCK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbt7f01%2FbtsMTNyWsYo%2FwV5ftT9AwCUDBiS9dkQWCK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"359\" height=\"335\" data-origin-width=\"359\" data-origin-height=\"335\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">끝난 다음엔 코인 개발 기본 루트를 탈 수 있는거 같습니다.</p>\n<p data-ke-size=\"size16\">다음글: <a href=\"https://serverdown.tistory.com/1222\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://serverdown.tistory.com/1222</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "2022년엔 크레이튼으로 개발하다 망한적이 있어서 \n망하지 않을 좋은 걸로 골랐습니다. \n앱토스도 MOVE 를 이용하긴하는데 차트를 보니 수이가 강하네요\n \n업그레이드가 가능하다.\n\n\n문서: https://docs.sui.io/concepts/sui-move-concepts/packages\nMOVE 는 업그레이드가 가능하다고 홍보하고 있습니다.\n이것 만으로도 어마어마한것입니다.\n진짜라면 좋겠군요\n이더리움때도 언어를 아주 꼬아가지고 억지로 되긴 했었지만\n(이정도면 거의 미래를 예측하는 수준이라 안된다고 봐야겠지요.)\n \n \n따라 해보기 문서\n링크: https://docs.sui.io/guides/developer/getting-started\n\n \nGetting Started | Sui Documentation\nSui is the first internet-scale programmable blockchain platform. That might read like marketing speak, but as you peruse the documentation to understand the technology, you will discover that Sui addresses many of the problems that hold blockchains back f\ndocs.sui.io\n\n \n목표\n1. 가위바위보 게임 개발 <-- 진행중\n2. NFT 자판기 개발\n3. 게임에 연동\n(매번 하는 식으로 목표를 정했습니다.)\n \n개발환경 세팅\n \nchoco 설치\n윈도우즈 개발자는 choco 를\nmac 이나 리눅스는 brew 를 사용한다는군요\n \n1. choco 사이트 이동: https://chocolatey.org/\n2. 우측 상단에  Try It Now 클릭\n3. step1 은 넘어갑니다. 하단에 Take The Install~~ 클릭\n4. 상단에 설치 방법은 잘모르니 Basic ~~ \n5. 설치 명령어를 알려줍니다. 복사해서 cmd 창 열여서 돌립니다.\n \nchoco 설치 방법\n여러번의 실패 끝에 설치했습니다.\n- cmd 창은 관리자 권한으로 열어야합니다.\n- C:\\ProgramData\\chocolatey 폴더를 삭제해야합니다. \n- C:\\Users\\gunil\\AppData\\Local\\Temp\\chocolatey 폴더 안에 비어있어야합니다.\n이 다음 실행하면 설치가 성공했습니다.\n \n \n6. choco install sui 로 sui 설치\n\n\n이미 설치되어있다는군요 ㄷㄷ\nbasic 에 포함되어있나봅니다.\n\n\nsui --version 치면\nsui 1.45.0-3ef5cc5b5c90\n버전도 나오네요 설치는 끝났나봅니다.\n\n\n끝난 다음엔 코인 개발 기본 루트를 탈 수 있는거 같습니다.\n다음글: https://serverdown.tistory.com/1222",
        "guid": "https://serverdown.tistory.com/1221",
        "categories": [
          "프로그래밍/개발메모",
          "Move",
          "Sui",
          "수이"
        ],
        "isoDate": "2025-03-21T17:49:53.000Z"
      },
      {
        "creator": "이건개발",
        "title": "heroku 는 유료였군요. 맛만본 개발자 체험기",
        "link": "https://serverdown.tistory.com/1220",
        "pubDate": "Fri, 21 Mar 2025 20:14:58 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1220#entry1220comment",
        "content": "<p data-ke-size=\"size16\">vercel 은 망했구요</p>\n<p data-ke-size=\"size16\">heroku 가 잘된다고 해서 들어가봤습니다.</p>\n<p data-ke-size=\"size16\">가입절차가 많이 길군요</p>\n<p data-ke-size=\"size16\">일반 바갑</p>\n<p data-ke-size=\"size16\">-&gt; OTP 등록 (세일즈포스 인증기)</p>\n<p data-ke-size=\"size16\">-&gt; 대시보드</p>\n<p data-ke-size=\"size16\">-&gt; new app 을 하면 그때결제 방법 등록하라고 합니다..</p>\n<p data-ke-size=\"size16\">당장 돈이 들지는 않고 사용료에 따라 돈을 내야한다고합니다.</p>\n<p data-ke-size=\"size16\">글을 보니 7달러 내본 사람이 있다고 합니다.</p>\n<p data-ke-size=\"size16\">클라우드 타입의 최소비용이 2.5만원</p>\n<p data-ke-size=\"size16\">cafe24 클라우드 비용은 만원</p>\n<p data-ke-size=\"size16\">정도이니 왠만하면 cafe24 클라우드가 나을 수도 있겠군요</p>\n<p data-ke-size=\"size16\">어차피 돈만 내면 제약을 없을태니</p>\n<p data-ke-size=\"size16\">적당한 방식의 사용은 괜찮아보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">장점</h2>\n<p data-ke-size=\"size16\">웹소켓은 트래픽이 적으니 비용이 작을 것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">단점</h2>\n<p data-ke-size=\"size16\">서버 위치가 미국만 있는거 같습니다.</p>",
        "contentSnippet": "vercel 은 망했구요\nheroku 가 잘된다고 해서 들어가봤습니다.\n가입절차가 많이 길군요\n일반 바갑\n-> OTP 등록 (세일즈포스 인증기)\n-> 대시보드\n-> new app 을 하면 그때결제 방법 등록하라고 합니다..\n당장 돈이 들지는 않고 사용료에 따라 돈을 내야한다고합니다.\n글을 보니 7달러 내본 사람이 있다고 합니다.\n클라우드 타입의 최소비용이 2.5만원\ncafe24 클라우드 비용은 만원\n정도이니 왠만하면 cafe24 클라우드가 나을 수도 있겠군요\n어차피 돈만 내면 제약을 없을태니\n적당한 방식의 사용은 괜찮아보입니다.\n \n장점\n웹소켓은 트래픽이 적으니 비용이 작을 것 같습니다.\n \n단점\n서버 위치가 미국만 있는거 같습니다.",
        "guid": "https://serverdown.tistory.com/1220",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-21T11:14:58.000Z"
      },
      {
        "creator": "이건개발",
        "title": "유니티 2D 애니메이션 / 스프타라이트 말고 다른 방식",
        "link": "https://serverdown.tistory.com/1219",
        "pubDate": "Fri, 21 Mar 2025 03:56:54 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1219#entry1219comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/yDhKM/btsMTIY3VfS/WHXfWmICshNUvEa2u4DcF0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/yDhKM/btsMTIY3VfS/WHXfWmICshNUvEa2u4DcF0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/yDhKM/btsMTIY3VfS/WHXfWmICshNUvEa2u4DcF0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FyDhKM%2FbtsMTIY3VfS%2FWHXfWmICshNUvEa2u4DcF0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1280\" height=\"720\" data-origin-width=\"1280\" data-origin-height=\"720\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"519\" data-origin-height=\"82\"><span data-url=\"https://blog.kakaocdn.net/dn/dO6inj/btsMUxia1zC/yKDpTMoFKirMBUkLKZjl6k/tfile.dat\" data-phocus=\"https://blog.kakaocdn.net/dn/dO6inj/btsMUxia1zC/yKDpTMoFKirMBUkLKZjl6k/tfile.dat\"><img src=\"https://blog.kakaocdn.net/dn/dO6inj/btsMUxia1zC/yKDpTMoFKirMBUkLKZjl6k/tfile.dat\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdO6inj%2FbtsMUxia1zC%2FyKDpTMoFKirMBUkLKZjl6k%2Ftfile.dat\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"519\" height=\"82\" data-origin-width=\"519\" data-origin-height=\"82\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=-7r9fZSmZJw&amp;t=443s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=-7r9fZSmZJw&amp;t=443s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=-7r9fZSmZJw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cQ2EHI/hyYvrjAiHe/Glv3PIp5b3DOlhyqqipT3K/img.jpg?width=1280&amp;height=720&amp;face=702_348_834_492,https://scrap.kakaocdn.net/dn/7tliX/hyYvqrp22J/1wKQ9WVGzamsjaGXMIkiE1/img.jpg?width=1280&amp;height=720&amp;face=702_348_834_492\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Unity 2022 Basic 2D Animation\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/-7r9fZSmZJw\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">캐릭터가 맹한게 귀엽군요</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=-7r9fZSmZJw&t=443s\n\n\n\n캐릭터가 맹한게 귀엽군요",
        "guid": "https://serverdown.tistory.com/1219",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-20T18:56:54.000Z"
      },
      {
        "creator": "이건개발",
        "title": "Kling AI 로 뽑은 영상 02",
        "link": "https://serverdown.tistory.com/1218",
        "pubDate": "Fri, 21 Mar 2025 01:41:26 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1218#entry1218comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"225\" data-origin-height=\"225\"><span data-url=\"https://blog.kakaocdn.net/dn/XfRel/btsMUm8TyYI/bowDDLszBADWVeEqdJMqG0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/XfRel/btsMUm8TyYI/bowDDLszBADWVeEqdJMqG0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/XfRel/btsMUm8TyYI/bowDDLszBADWVeEqdJMqG0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FXfRel%2FbtsMUm8TyYI%2FbowDDLszBADWVeEqdJMqG0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"225\" height=\"225\" data-origin-width=\"225\" data-origin-height=\"225\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"519\" data-origin-height=\"82\"><span data-url=\"https://blog.kakaocdn.net/dn/yfWEd/btsMS2Kw5VV/lDUTqERQVG7iVTRdc05Xek/tfile.dat\" data-phocus=\"https://blog.kakaocdn.net/dn/yfWEd/btsMS2Kw5VV/lDUTqERQVG7iVTRdc05Xek/tfile.dat\"><img src=\"https://blog.kakaocdn.net/dn/yfWEd/btsMS2Kw5VV/lDUTqERQVG7iVTRdc05Xek/tfile.dat\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FyfWEd%2FbtsMS2Kw5VV%2FlDUTqERQVG7iVTRdc05Xek%2Ftfile.dat\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"519\" height=\"82\" data-origin-width=\"519\" data-origin-height=\"82\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이전글 : <a href=\"https://serverdown.tistory.com/1213\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://serverdown.tistory.com/1213</a></p>\n<p data-ke-size=\"size16\">지난번에 반대로 회전했었고</p>\n<p data-ke-size=\"size16\">화전 반향을 지정해봐야 안먹힌다는 사실을 알았습니다.</p>\n<p data-ke-size=\"size16\">그래서 천천히 움직이라고 추가했고 <br />영상이 짧으니 천천히 움직이면 당연히 조금밖에 못움직입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">프롬프트</h2>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">Move your head slowly.<br />Blink your eyes.<br />Move your mouth gently.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">천천히 고개를 움직이고<br />눈을 깝박이고<br />입을 부드럽게 움직여라</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이렇게 적은것입니다.</span></p>\n<h2 data-ke-size=\"size26\"><span style=\"text-align: start;\">결과물</span></h2>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/453818638\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/oVTrr/hyYufjC1ht/nlojj7YizW0XytSi186LjK/img.jpg?width=1080&amp;height=1080&amp;face=339_492_565_738,https://scrap.kakaocdn.net/dn/ceiSmG/hyYrTIEfPi/n51Ps5MuFUwJPfyqePF4J0/img.jpg?width=1080&amp;height=1080&amp;face=339_492_565_738\" data-video-width=\"860\" data-video-height=\"860\" data-video-origin-width=\"860\" data-video-origin-height=\"860\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/453818638?service=daum_tistory\" width=\"860\" height=\"860\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">눈을 깜박임이 과하군요 횟수 까지 지정해줘야겠군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "이전글 : https://serverdown.tistory.com/1213\n지난번에 반대로 회전했었고\n화전 반향을 지정해봐야 안먹힌다는 사실을 알았습니다.\n그래서 천천히 움직이라고 추가했고 \n영상이 짧으니 천천히 움직이면 당연히 조금밖에 못움직입니다.\n \n프롬프트\nMove your head slowly.\nBlink your eyes.\nMove your mouth gently.\n천천히 고개를 움직이고\n눈을 깝박이고\n입을 부드럽게 움직여라\n이렇게 적은것입니다.\n결과물\n \n\n\n\n눈을 깜박임이 과하군요 횟수 까지 지정해줘야겠군요",
        "guid": "https://serverdown.tistory.com/1218",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-03-20T16:41:26.000Z"
      },
      {
        "creator": "이건개발",
        "title": "vercel 처음 써보고 분노한 개발자 사용기 / 배포 deploy / setInterval 안됨",
        "link": "https://serverdown.tistory.com/1217",
        "pubDate": "Thu, 20 Mar 2025 23:32:53 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1217#entry1217comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"344\" data-origin-height=\"147\"><span data-url=\"https://blog.kakaocdn.net/dn/u87uh/btsMUwwN16e/BLbjYw96xwIqoKf0QGK9t0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/u87uh/btsMUwwN16e/BLbjYw96xwIqoKf0QGK9t0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/u87uh/btsMUwwN16e/BLbjYw96xwIqoKf0QGK9t0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fu87uh%2FbtsMUwwN16e%2FBLbjYw96xwIqoKf0QGK9t0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"344\" height=\"147\" data-origin-width=\"344\" data-origin-height=\"147\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"519\" data-origin-height=\"82\"><span data-url=\"https://blog.kakaocdn.net/dn/OadVr/btsMTgaEVkJ/kYgxdRAQSrgwVzvpSe3V40/tfile.dat\" data-phocus=\"https://blog.kakaocdn.net/dn/OadVr/btsMTgaEVkJ/kYgxdRAQSrgwVzvpSe3V40/tfile.dat\"><img src=\"https://blog.kakaocdn.net/dn/OadVr/btsMTgaEVkJ/kYgxdRAQSrgwVzvpSe3V40/tfile.dat\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FOadVr%2FbtsMTgaEVkJ%2FkYgxdRAQSrgwVzvpSe3V40%2Ftfile.dat\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"519\" height=\"82\" data-origin-width=\"519\" data-origin-height=\"82\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">vercel 에서 express 나 웹소켓 서버를 공짜로 띄워볼 수 있다고 해서 만져봤는데 ...<br />지옥의 시간으로 변했습니다.</p>\n<p data-ke-size=\"size16\">6시간째 배포를 못해서 해보고 있었으며<br />결과도 내가 원했던 것은 안되었다.</p>\n<p data-ke-size=\"size16\">- 서버 내부에서 setInterval<br />- 웹소켓 버서</p>\n<p data-ke-size=\"size16\">- rest api 는 가능했습니다. 만 firebase 쓰면 되니 의미 없음</p>\n<p data-ke-size=\"size16\">그래서 이 글은 분노한 개발자의 사용기 입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">vercel 에서는 next.js 로 배포를 할 수 있는데 next.js 는 프론트엔드 백엔드가 다 통합되어있다고 들었다.&nbsp;<br />(처음 써본다.)</p>\n<p data-ke-size=\"size16\">어차피 웹소켓으로 실시간 통신만 공짜로 할 수 있으면 장땡이였다.</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=E8xaV6fiTaA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=E8xaV6fiTaA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=E8xaV6fiTaA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dalw8a/hyYub2wgQI/i52KKnQKs7ZoiLAEYd8mQ1/img.jpg?width=1280&amp;height=720&amp;face=830_138_1210_552,https://scrap.kakaocdn.net/dn/b1Gbvg/hyYupGvJHy/1ekRbhA5maKpn0fDiaHvv1/img.jpg?width=1280&amp;height=720&amp;face=830_138_1210_552\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"How To Deploy GitHub Project on Vercel (Step By Step)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/E8xaV6fiTaA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 영상을 보면 가입부터 github 연결 배포 까지 끝내고 있다.</p>\n<p data-ke-size=\"size16\">내용안에는 vercel 은 git 에 push 만하면 최신 빌드를 하는 배포 시스템이 있다고 했다.</p>\n<p data-ke-size=\"size16\">클라우드 플레이어도 그런식이라 적응이 쉬울줄 알았다.</p>\n<p data-ke-size=\"size16\">그러나 ...</p>\n<p data-ke-size=\"size16\">자동빌드가 엄청 띄엄띄엄 되는거 같다</p>\n<p data-ke-size=\"size16\">거의 1시간 후에 다시보니 \"바꼈있더라\" 느낌</p>\n<p data-ke-size=\"size16\">즉시 되는건줄 알고 \"왜 안되지를 외치며\" 몇시간을 낭비했다.<br />진전된건 없었고 누웠다 일어나 다시 와보니 배포되어있었다.<br />너무나 허무했다.</p>\n<p data-ke-size=\"size16\">결국 알아낸것은 명령어를 통해 수동 배포가 가능하다는 것을 알았다.<br />관리페이지에는 배포 버튼이 없기 때문에 페이지를 보는데 너무 시간을 많이 써서<br />지금은 녹초가 되어버렸다. 아무것도 하기 싫다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">명령어로 배포하기</h2>\n<p data-ke-size=\"size16\">문서: <a href=\"https://vercel.com/docs/cli/link\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://vercel.com/docs/cli/link</a></p>\n<figure id=\"og_1742480845437\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"vercel link\" data-og-description=\"Learn how to link a local directory to a Vercel Project using the vercel link CLI command.\" data-og-host=\"vercel.com\" data-og-source-url=\"https://vercel.com/docs/cli/link\" data-og-url=\"https://vercel.com/docs/cli/link\" data-og-image=\"https://scrap.kakaocdn.net/dn/kRqGi/hyYrZhM5IA/cP0zwqkgGzW45KOm89rm61/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628,https://scrap.kakaocdn.net/dn/Fh1nh/hyYurxzVJ2/FuQWj0VHR48mWnrWoShq61/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628\"><a href=\"https://vercel.com/docs/cli/link\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://vercel.com/docs/cli/link\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/kRqGi/hyYrZhM5IA/cP0zwqkgGzW45KOm89rm61/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628,https://scrap.kakaocdn.net/dn/Fh1nh/hyYurxzVJ2/FuQWj0VHR48mWnrWoShq61/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">vercel link</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Learn how to link a local directory to a Vercel Project using the vercel link CLI command.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">vercel.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">firebase 처럼 vercel deploy 하면 된다. 그전에</p>\n<p data-ke-size=\"size16\">vercel login<br />소유자임을 확인해야하니 로그인 해야겠죠</p>\n<p data-ke-size=\"size16\">vercel link<br />이미 받아둔 소스폴더를 vercel project 와 연결시켜주어야한다.</p>\n<p data-ke-size=\"size16\">이 작업이 끝나면 배포할 수 있다.</p>\n<p data-ke-size=\"size16\">vercel deploy<br />빌드하는동안 프리뷰 페이지를 볼 수 있는데<br />로그인한 브라우저에서 보여진다. 특이하고 불편하다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\">이제 rest api 서버와 웹소켓이 가능한지 확인해야겠다.<br />하지만 오늘은 아무것도 하기 싫다.</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: GungSeo, serif;\">정말 시간아깝다.</span></h2>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">vercel dashboard 로 가면 최근 배포된것에 대한 내용이 나온다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"705\" data-origin-height=\"574\"><span data-url=\"https://blog.kakaocdn.net/dn/n7DF5/btsMQcAnzJM/66nl7nEj5bzjvHJ2CRG4T0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/n7DF5/btsMQcAnzJM/66nl7nEj5bzjvHJ2CRG4T0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/n7DF5/btsMQcAnzJM/66nl7nEj5bzjvHJ2CRG4T0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fn7DF5%2FbtsMQcAnzJM%2F66nl7nEj5bzjvHJ2CRG4T0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"705\" height=\"574\" data-origin-width=\"705\" data-origin-height=\"574\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">자기전에 v4 를 push 했다.<br />내일 보면 배포되어있으려나 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">웹소켓 서버를 돌릴 수는 없다.</h2>\n<p data-ke-size=\"size16\">웹소켓 서버를 돌릴 수 있는줄 알았으나...</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"862\" data-origin-height=\"164\"><span data-url=\"https://blog.kakaocdn.net/dn/b5DcTW/btsMRJcwSiN/MAJROwdTh4mKnI2gT43Kkk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b5DcTW/btsMRJcwSiN/MAJROwdTh4mKnI2gT43Kkk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b5DcTW/btsMRJcwSiN/MAJROwdTh4mKnI2gT43Kkk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb5DcTW%2FbtsMRJcwSiN%2FMAJROwdTh4mKnI2gT43Kkk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"862\" height=\"164\" data-origin-width=\"862\" data-origin-height=\"164\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">문서 링크: <a href=\"https://socket.io/how-to/use-with-nextjs\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://socket.io/how-to/use-with-nextjs</a></p>\n<p data-ke-size=\"size16\">안된다고 문서에 적혀있네요 시간 낭비였습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">RES API 응답은 가능</h2>\n<p data-ke-size=\"size16\">rest api 가 가능한지 확인해야겠군요</p>\n<p data-ke-size=\"size16\">그런데 firebase 쓰면되는데 ...&nbsp; <br />아 시간 아까워<br />하루종인 시간들여서 안된다는걸 배웠군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">deploy 랑 출시는 다르다.</h2>\n<p data-ke-size=\"size16\">제일 짜증나는 계념인데요</p>\n<p data-ke-size=\"size16\">deploy 한다고 다른 유저가 볼 수 있는게 아닙니다.</p>\n<p data-ke-size=\"size16\">다시 production 이라는 과정을 거쳐야합니다.</p>\n<p data-ke-size=\"size16\">vercel 에서 접속되는 페이지는 preview 라고 해서 권한 있는 사람들만 볼 수 있는 페이지 입니다.<br />빌드마다 주소도 다르구요<br />개발자랑 테스트하는 사람이 분리된 큰 프로젝트라면 모를까</p>\n<p data-ke-size=\"size16\">배포하기에 한두 단계가 있으면 너무 불편합니다.</p>\n<h3 data-ke-size=\"size23\">출시 과정</h3>\n<p data-ke-size=\"size16\">대시보드로 가면 최근 프리뷰 정보가 표시됩니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"398\" data-origin-height=\"266\"><span data-url=\"https://blog.kakaocdn.net/dn/b8N706/btsMRIZ0NxW/4Aj3lNXLFousRT6ewTsHr1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b8N706/btsMRIZ0NxW/4Aj3lNXLFousRT6ewTsHr1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b8N706/btsMRIZ0NxW/4Aj3lNXLFousRT6ewTsHr1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb8N706%2FbtsMRIZ0NxW%2F4Aj3lNXLFousRT6ewTsHr1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"398\" height=\"266\" data-origin-width=\"398\" data-origin-height=\"266\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">여기서 이상한곳을 클리하면 안되고 내모로 표시된 커밋 코드를 눌러야합니다.<br />(불편)</p>\n<p data-ke-size=\"size16\">다른곳을 누르면 다른 페이지로 가니 주의</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1114\" data-origin-height=\"211\"><span data-url=\"https://blog.kakaocdn.net/dn/dkBgqp/btsMTbNa59M/RUqJ2GRDu11PJU12t0M4p1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dkBgqp/btsMTbNa59M/RUqJ2GRDu11PJU12t0M4p1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dkBgqp/btsMTbNa59M/RUqJ2GRDu11PJU12t0M4p1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdkBgqp%2FbtsMTbNa59M%2FRUqJ2GRDu11PJU12t0M4p1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1114\" height=\"211\" data-origin-width=\"1114\" data-origin-height=\"211\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">배포 세부 정보창이 뜨는데 [...] 버튼을 누릅니다.</p>\n<p data-ke-size=\"size16\">참고로 이페이지는 창크기가 작으면 버튼의 위치가 바뀌니<br />창크기를 잘 조절하세요<br />(개 불편)</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"312\" data-origin-height=\"258\"><span data-url=\"https://blog.kakaocdn.net/dn/biIq5o/btsMTD3K9ak/VmgFT1Kz3lbKGoLCeMKzo1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/biIq5o/btsMTD3K9ak/VmgFT1Kz3lbKGoLCeMKzo1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/biIq5o/btsMTD3K9ak/VmgFT1Kz3lbKGoLCeMKzo1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbiIq5o%2FbtsMTD3K9ak%2FVmgFT1Kz3lbKGoLCeMKzo1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"312\" height=\"258\" data-origin-width=\"312\" data-origin-height=\"258\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">출시 로 승급해줘야합니다.&nbsp;<br />(자동으로 좀 해달라고)</p>\n<p data-ke-size=\"size16\">엄청 번거롭습니다.</p>\n<p data-ke-size=\"size16\">저는 도메인을 연결해뒀는데요</p>\n<p data-ke-size=\"size16\">도메인이 없으면 어떤 주소로 나오는지 잘 모르겠네요<br />(vercel 은 불편해야하니까 접속할 주소를 안줄 수도 있을꺼 같군요)</p>\n<p style=\"background-color: #000000; color: #000000;\" data-ke-size=\"size16\">출시 링크:<span>&nbsp;</span><a style=\"background-color: #000000; color: #000000;\" href=\"https://next.sidnft.com/api/hello2\">next.sidnft.com/</a></p>\n<p style=\"background-color: #000000; color: #000000;\" data-ke-size=\"size16\">내부 카운터 있는 API:<span>&nbsp;</span><a style=\"background-color: #000000; color: #000000;\" href=\"https://next.sidnft.com/api/hello2\">next.sidnft.com/api/hello</a></p>\n<p style=\"background-color: #000000; color: #000000;\" data-ke-size=\"size16\"><span style=\"text-align: start;\">setInterval 이 들어있는 API:</span><span style=\"background-color: #000000; color: #000000; text-align: start;\"> <a href=\"https://next.sidnft.com/api/hello2\">next.sidnft.com/api/hello2</a> </span></p>\n<p style=\"background-color: #000000; color: #000000;\" data-ke-size=\"size16\">내부 카운터가 있는 api 호출할때마다 변수를 ++ 해줬습니다.<br />1분정도 안쓰면 서버가 내려갔다 올라오는지<br />변수값이 날아갔습니다.<br />이것도 사용 못하겠군요</p>\n<p style=\"background-color: #000000; color: #000000;\" data-ke-size=\"size16\">setInterval 로 서버 내부는 실시간으로 동작하는가 테스트 해봤는데<br />안되었습니다. 호출할때 살아나서 잡시 업데이트 돌고 멈추는거 같았습니다.</p>\n<p style=\"background-color: #000000; color: #000000;\" data-ke-size=\"size16\">이러니 웹소켓이 안되는거 같습니다. <br />성능 때문에 서버 속도를 제어하는거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">결론</h2>\n<p data-ke-size=\"size16\">더이상은 확인안해보도 될꺼 같군요<br />heroku 로 넘어가겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "vercel 에서 express 나 웹소켓 서버를 공짜로 띄워볼 수 있다고 해서 만져봤는데 ...\n지옥의 시간으로 변했습니다.\n6시간째 배포를 못해서 해보고 있었으며\n결과도 내가 원했던 것은 안되었다.\n- 서버 내부에서 setInterval\n- 웹소켓 버서\n- rest api 는 가능했습니다. 만 firebase 쓰면 되니 의미 없음\n그래서 이 글은 분노한 개발자의 사용기 입니다.\n \nvercel 에서는 next.js 로 배포를 할 수 있는데 next.js 는 프론트엔드 백엔드가 다 통합되어있다고 들었다. \n(처음 써본다.)\n어차피 웹소켓으로 실시간 통신만 공짜로 할 수 있으면 장땡이였다.\n영상: https://www.youtube.com/watch?v=E8xaV6fiTaA\n\n\n\n \n이 영상을 보면 가입부터 github 연결 배포 까지 끝내고 있다.\n내용안에는 vercel 은 git 에 push 만하면 최신 빌드를 하는 배포 시스템이 있다고 했다.\n클라우드 플레이어도 그런식이라 적응이 쉬울줄 알았다.\n그러나 ...\n자동빌드가 엄청 띄엄띄엄 되는거 같다\n거의 1시간 후에 다시보니 \"바꼈있더라\" 느낌\n즉시 되는건줄 알고 \"왜 안되지를 외치며\" 몇시간을 낭비했다.\n진전된건 없었고 누웠다 일어나 다시 와보니 배포되어있었다.\n너무나 허무했다.\n결국 알아낸것은 명령어를 통해 수동 배포가 가능하다는 것을 알았다.\n관리페이지에는 배포 버튼이 없기 때문에 페이지를 보는데 너무 시간을 많이 써서\n지금은 녹초가 되어버렸다. 아무것도 하기 싫다.\n \n명령어로 배포하기\n문서: https://vercel.com/docs/cli/link\n\n \nvercel link\nLearn how to link a local directory to a Vercel Project using the vercel link CLI command.\nvercel.com\n\n \nfirebase 처럼 vercel deploy 하면 된다. 그전에\nvercel login\n소유자임을 확인해야하니 로그인 해야겠죠\nvercel link\n이미 받아둔 소스폴더를 vercel project 와 연결시켜주어야한다.\n이 작업이 끝나면 배포할 수 있다.\nvercel deploy\n빌드하는동안 프리뷰 페이지를 볼 수 있는데\n로그인한 브라우저에서 보여진다. 특이하고 불편하다.\n \n이제 rest api 서버와 웹소켓이 가능한지 확인해야겠다.\n하지만 오늘은 아무것도 하기 싫다.\n정말 시간아깝다.\n \n \nvercel dashboard 로 가면 최근 배포된것에 대한 내용이 나온다.\n\n\n자기전에 v4 를 push 했다.\n내일 보면 배포되어있으려나 ...\n \n웹소켓 서버를 돌릴 수는 없다.\n웹소켓 서버를 돌릴 수 있는줄 알았으나...\n\n\n문서 링크: https://socket.io/how-to/use-with-nextjs\n안된다고 문서에 적혀있네요 시간 낭비였습니다.\n \nRES API 응답은 가능\nrest api 가 가능한지 확인해야겠군요\n그런데 firebase 쓰면되는데 ...  \n아 시간 아까워\n하루종인 시간들여서 안된다는걸 배웠군요\n \ndeploy 랑 출시는 다르다.\n제일 짜증나는 계념인데요\ndeploy 한다고 다른 유저가 볼 수 있는게 아닙니다.\n다시 production 이라는 과정을 거쳐야합니다.\nvercel 에서 접속되는 페이지는 preview 라고 해서 권한 있는 사람들만 볼 수 있는 페이지 입니다.\n빌드마다 주소도 다르구요\n개발자랑 테스트하는 사람이 분리된 큰 프로젝트라면 모를까\n배포하기에 한두 단계가 있으면 너무 불편합니다.\n출시 과정\n대시보드로 가면 최근 프리뷰 정보가 표시됩니다.\n\n\n여기서 이상한곳을 클리하면 안되고 내모로 표시된 커밋 코드를 눌러야합니다.\n(불편)\n다른곳을 누르면 다른 페이지로 가니 주의\n \n\n\n배포 세부 정보창이 뜨는데 [...] 버튼을 누릅니다.\n참고로 이페이지는 창크기가 작으면 버튼의 위치가 바뀌니\n창크기를 잘 조절하세요\n(개 불편)\n\n\n출시 로 승급해줘야합니다. \n(자동으로 좀 해달라고)\n엄청 번거롭습니다.\n저는 도메인을 연결해뒀는데요\n도메인이 없으면 어떤 주소로 나오는지 잘 모르겠네요\n(vercel 은 불편해야하니까 접속할 주소를 안줄 수도 있을꺼 같군요)\n출시 링크: next.sidnft.com/\n내부 카운터 있는 API: next.sidnft.com/api/hello\nsetInterval 이 들어있는 API: next.sidnft.com/api/hello2 \n내부 카운터가 있는 api 호출할때마다 변수를 ++ 해줬습니다.\n1분정도 안쓰면 서버가 내려갔다 올라오는지\n변수값이 날아갔습니다.\n이것도 사용 못하겠군요\nsetInterval 로 서버 내부는 실시간으로 동작하는가 테스트 해봤는데\n안되었습니다. 호출할때 살아나서 잡시 업데이트 돌고 멈추는거 같았습니다.\n이러니 웹소켓이 안되는거 같습니다. \n성능 때문에 서버 속도를 제어하는거 같습니다.\n \n결론\n더이상은 확인안해보도 될꺼 같군요\nheroku 로 넘어가겠습니다.",
        "guid": "https://serverdown.tistory.com/1217",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-20T14:32:53.000Z"
      },
      {
        "creator": "이건개발",
        "title": "(작업중﻿) C# async await 사용햅자 /Unity",
        "link": "https://serverdown.tistory.com/1215",
        "pubDate": "Thu, 20 Mar 2025 12:36:22 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1215#entry1215comment",
        "content": "<p data-ke-size=\"size16\">이런 코딩은 준비물이 필요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Sleep 같이 쉬었다 가는 함수</p>\n<p data-ke-size=\"size16\">awit Task.Delay(시간)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">인자값으로 async 함수 받기</p>\n<p data-ke-size=\"size16\">아직 모름</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">현재 앱 초기화 코드에서</p>\n<p data-ke-size=\"size16\">애널리틱스_초기화();</p>\n<p data-ke-size=\"size16\">광고_초기화(delegate {</p>\n<p data-ke-size=\"size16\">&nbsp; &nbsp; // 광고 초기화 완료</p>\n<p data-ke-size=\"size16\">&nbsp; &nbsp; 광고_표시();</p>\n<p data-ke-size=\"size16\">});</p>\n<p data-ke-size=\"size16\">이런식인데 광고 표시할때 애널리틱스 로그를 남기고 싶다면</p>\n<p data-ke-size=\"size16\">애널리틱스 초기화가 완료되기 전에 광고가 먼저 초기화 될 수 있어</p>\n<p data-ke-size=\"size16\">타이밍상 완벽하지 않다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그래서 async 이전엔 이런식으로 고쳤다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">애널리틱스_초기화(delegate {</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; // 애널리틱스 초기화 완료 후</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; <span style=\"text-align: start;\">광고_초기화(delegate {</span> </span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\">&nbsp; &nbsp; &nbsp; &nbsp; // 광고 초기화 완료</span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\">&nbsp; &nbsp; &nbsp; &nbsp; 애널리틱스_로그남기기(\"광고 초기화완료\");</span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"text-align: start;\">광고_표시();</span> </span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; });</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">});</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이런식으로 짜게 되는데 이러면 괄호 안에 괄호가 중첩으로 들어간다 더많은 모듈이 들어가면 더 깊어질 것이다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">그래서 아래의 방식으로 개선할 예정이다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">async 모듈_초기화() {</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 애널리틱스_초기화();</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 광고_초기화();</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; <span style=\"text-align: start;\">애널리틱스_로그남기기(\"광고 초기화완료\");</span> </span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 광고_표시();</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 또다른모듈_초기화();</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 또또다른모듈_초기화();</span> <span style=\"text-align: start;\"></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">}</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이런식으로 괄호를 펼수 있다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">(작업중)</span></p>",
        "contentSnippet": "이런 코딩은 준비물이 필요합니다.\n \nSleep 같이 쉬었다 가는 함수\nawit Task.Delay(시간)\n \n인자값으로 async 함수 받기\n아직 모름\n \n현재 앱 초기화 코드에서\n애널리틱스_초기화();\n광고_초기화(delegate {\n    // 광고 초기화 완료\n    광고_표시();\n});\n이런식인데 광고 표시할때 애널리틱스 로그를 남기고 싶다면\n애널리틱스 초기화가 완료되기 전에 광고가 먼저 초기화 될 수 있어\n타이밍상 완벽하지 않다.\n \n그래서 async 이전엔 이런식으로 고쳤다.\n애널리틱스_초기화(delegate {\n    // 애널리틱스 초기화 완료 후\n    광고_초기화(delegate { \n        // 광고 초기화 완료\n        애널리틱스_로그남기기(\"광고 초기화완료\");\n        광고_표시(); \n    });\n});\n \n이런식으로 짜게 되는데 이러면 괄호 안에 괄호가 중첩으로 들어간다 더많은 모듈이 들어가면 더 깊어질 것이다.\n그래서 아래의 방식으로 개선할 예정이다.\nasync 모듈_초기화() {\n    await 애널리틱스_초기화();\n \n    await 광고_초기화();\n \n    애널리틱스_로그남기기(\"광고 초기화완료\"); \n    await 광고_표시();\n \n    await 또다른모듈_초기화();\n    await 또또다른모듈_초기화(); \n}\n이런식으로 괄호를 펼수 있다.\n(작업중)",
        "guid": "https://serverdown.tistory.com/1215",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-20T03:36:22.000Z"
      },
      {
        "creator": "이건개발",
        "title": "유니티 애셋 / Block Blast / 데모게임 / 유",
        "link": "https://serverdown.tistory.com/1214",
        "pubDate": "Wed, 19 Mar 2025 10:58:49 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1214#entry1214comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=LYECrh_MYOw&amp;t=55s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=LYECrh_MYOw&amp;t=55s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=LYECrh_MYOw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bokl7x/hyYvtanz77/ULlx8dToyGLLnYqZqtg63k/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/yyJC8/hyYrPTzm4O/rOyH5oBRuhRzk5aAPdQHEk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Blast Puzzle | Template Demonstration\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/LYECrh_MYOw\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">유니티 애셋 스토어 링크: <a href=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175</a></p>\n<figure id=\"og_1742349411381\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Blast Puzzle | Template + Editor | 패키지 | Unity Asset Store\" data-og-description=\"Use Blast Puzzle | Template + Editor from Watermelon Games to elevate your next project. Find this &amp; more 패키지 and templates on the Unity Asset Store.\" data-og-host=\"assetstore.unity.com\" data-og-source-url=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\" data-og-url=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\" data-og-image=\"https://scrap.kakaocdn.net/dn/bCy27N/hyYqPs0SVL/9q99pBE3Ku1PwHeokz9Ink/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/0r2ge/hyYp8GaV1z/9UUE9y4Cek211xa8MMZva0/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630\"><a href=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bCy27N/hyYqPs0SVL/9q99pBE3Ku1PwHeokz9Ink/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/0r2ge/hyYp8GaV1z/9UUE9y4Cek211xa8MMZva0/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Blast Puzzle | Template + Editor | 패키지 | Unity Asset Store</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Use Blast Puzzle | Template + Editor from Watermelon Games to elevate your next project. Find this &amp; more 패키지 and templates on the Unity Asset Store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">assetstore.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">비싸긴한데 카피게임 올리기엔 쉽겠군요</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">거의 비슷하군요</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">기억해 둬야겠습니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=LYECrh_MYOw&t=55s\n\n\n\n \n유니티 애셋 스토어 링크: https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\n\n \nBlast Puzzle | Template + Editor | 패키지 | Unity Asset Store\nUse Blast Puzzle | Template + Editor from Watermelon Games to elevate your next project. Find this & more 패키지 and templates on the Unity Asset Store.\nassetstore.unity.com\n\n \n비싸긴한데 카피게임 올리기엔 쉽겠군요\n거의 비슷하군요\n기억해 둬야겠습니다.",
        "guid": "https://serverdown.tistory.com/1214",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰"
        ],
        "isoDate": "2025-03-19T01:58:49.000Z"
      },
      {
        "creator": "이건개발",
        "title": "Kling AI 로 뽑은 영상 01",
        "link": "https://serverdown.tistory.com/1213",
        "pubDate": "Wed, 19 Mar 2025 01:48:41 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1213#entry1213comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"266\" data-origin-height=\"163\"><span data-url=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHMJwl%2FbtsMNN726qN%2FfZkVsGnDZ7taRjB9rdzAkk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"266\" height=\"163\" data-origin-width=\"266\" data-origin-height=\"163\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"519\" data-origin-height=\"82\"><span data-url=\"https://blog.kakaocdn.net/dn/PsSsx/btsMSlYnbbH/ylK4ftfk3vytsdMtq4JHpk/tfile.dat\" data-phocus=\"https://blog.kakaocdn.net/dn/PsSsx/btsMSlYnbbH/ylK4ftfk3vytsdMtq4JHpk/tfile.dat\"><img src=\"https://blog.kakaocdn.net/dn/PsSsx/btsMSlYnbbH/ylK4ftfk3vytsdMtq4JHpk/tfile.dat\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FPsSsx%2FbtsMSlYnbbH%2FylK4ftfk3vytsdMtq4JHpk%2Ftfile.dat\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"519\" height=\"82\" data-origin-width=\"519\" data-origin-height=\"82\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이미지로 영상을 뽑아보았습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"266\" data-origin-height=\"163\"><span data-url=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHMJwl%2FbtsMNN726qN%2FfZkVsGnDZ7taRjB9rdzAkk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"266\" height=\"163\" data-origin-width=\"266\" data-origin-height=\"163\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">시작 종료 프레임을 넣고 고개를 살짝 돌리가고 했는데 ....</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/453768877\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bfjl2u/hyYrW6aD8E/68P7xnMko2hWMNBDALEcxk/img.jpg?width=1080&amp;height=1080&amp;face=0_0_1080_1080,https://scrap.kakaocdn.net/dn/bmWOU3/hyYrWSC8c4/LGMuvm6EmVvmpUtFsswjcK/img.jpg?width=1080&amp;height=1080&amp;face=0_0_1080_1080\" data-video-width=\"860\" data-video-height=\"860\" data-video-origin-width=\"860\" data-video-origin-height=\"860\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/453768877?service=daum_tistory\" width=\"860\" height=\"860\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">반대로 돌려버리네요 ㄷㄷㄷ</p>\n<p data-ke-size=\"size16\">반대로 돌리라고 해서 하나 더 뽑아봤습니다.</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/453768883\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/DjZUh/hyYr3K1HBF/KGa8MHEd5P6kfmun1EcAT0/img.jpg?width=1080&amp;height=1080&amp;face=0_0_1080_1080,https://scrap.kakaocdn.net/dn/crbWcE/hyYqbJDjH9/E2B1weJo3xruI7lJK7MWbK/img.jpg?width=1080&amp;height=1080&amp;face=0_0_1080_1080\" data-video-width=\"860\" data-video-height=\"860\" data-video-origin-width=\"860\" data-video-origin-height=\"860\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/453768883?service=daum_tistory\" width=\"860\" height=\"860\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">안고쳐지네요</p>\n<p data-ke-size=\"size16\">그래도 마지막에 웃는 타이밍이 좀 나아졌습니다.</p>\n<p data-ke-size=\"size16\">수동으로 좀 잘랐습니다.</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/453768906\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/6j732/hyYvofNDgg/IMCwFvIk9yITYzOuJljFgK/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/0meB6/hyYqNPsnaA/9Zx8v8ewQUNcQzOpM6U2VK/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512\" data-video-width=\"512\" data-video-height=\"512\" data-video-origin-width=\"512\" data-video-origin-height=\"512\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/453768906?service=daum_tistory\" width=\"512\" height=\"512\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">자연스럽게 ㅋ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">만든시간이 아까워서 쇼츠에 올렸습니다.</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/shorts/V5gwZjCiEMI\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/shorts/V5gwZjCiEMI</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/shorts/V5gwZjCiEMI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/T0fRT/hyYvu1oiEb/kOIzEeu9hs6HqquxV89bh0/img.jpg?width=480&amp;height=480&amp;face=0_0_480_480,https://scrap.kakaocdn.net/dn/blfIia/hyYuiUx6Fm/MQDCuEcZeayeIo9rZKIwo0/img.jpg?width=480&amp;height=480&amp;face=0_0_480_480\" data-video-width=\"480\" data-video-height=\"480\" data-video-origin-width=\"480\" data-video-origin-height=\"480\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"KlingAI 로 영상을 뽑아보았다\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/V5gwZjCiEMI\" width=\"480\" height=\"480\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "이미지로 영상을 뽑아보았습니다.\n\n\n시작 종료 프레임을 넣고 고개를 살짝 돌리가고 했는데 ....\n \n\n\n\n반대로 돌려버리네요 ㄷㄷㄷ\n반대로 돌리라고 해서 하나 더 뽑아봤습니다.\n\n\n\n안고쳐지네요\n그래도 마지막에 웃는 타이밍이 좀 나아졌습니다.\n수동으로 좀 잘랐습니다.\n\n\n\n \n자연스럽게 ㅋ\n \n만든시간이 아까워서 쇼츠에 올렸습니다.\n영상: https://www.youtube.com/shorts/V5gwZjCiEMI",
        "guid": "https://serverdown.tistory.com/1213",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-03-18T16:48:41.000Z"
      },
      {
        "creator": "이건개발",
        "title": "파이어 베이스 functions 로컬 실행 및 자동 실행 / Typescript",
        "link": "https://serverdown.tistory.com/1212",
        "pubDate": "Tue, 18 Mar 2025 21:21:50 +0900",
        "author": "이건개발",
        "comments": "https://serverdown.tistory.com/1212#entry1212comment",
        "content": "<p data-ke-size=\"size16\">typescript 로 작업하는데 저장하니까 새로고침이 안되는군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">노드몬 설치합니다. <br />(필요 없을꺼 같군요)<br />npm install nodemon -g&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">package.json 에 script 부분을 수정해야합니다.</p>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #ffffff;\">&nbsp; </span><span style=\"color: #d4d4d4;\">\"scripts\"</span><span style=\"color: #ffffff;\">: {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"build\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"tsc\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"build:watch\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"tsc --watch\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"serve2\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"npm run build &amp;&amp; firebase emulators:start --only functions\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"serve\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"npm run build &amp;&amp; --watch | firebase emulators:start --only functions\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"shell\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"npm run build &amp;&amp; firebase functions:shell\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"start\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"npm run shell\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"deploy\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"firebase deploy --only functions\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"logs\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"firebase functions:log\"</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; },</span></div>\n</div>\n<p data-ke-size=\"size16\">serve2 가 기존 명령 보관해둔거구요<br />serve 가 새로 넣은 명령입니다. --watch 가 들어간걸 알 수 있습니다.</p>\n<p data-ke-size=\"size16\"><br /><span style=\"text-align: start;\">테스트 서버 실행<br /><span style=\"text-align: start;\">firebase emulators:start</span> </span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다시 실행 해주긴하는데<br />반응이 겁나 느립니다.</p>\n<p data-ke-size=\"size16\">이런 환경에서 개발하다니 놀랍습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "typescript 로 작업하는데 저장하니까 새로고침이 안되는군요\n \n노드몬 설치합니다. \n(필요 없을꺼 같군요)\nnpm install nodemon -g \n \npackage.json 에 script 부분을 수정해야합니다.\n  \"scripts\": {\n    \"build\": \"tsc\",\n    \"build:watch\": \"tsc --watch\",\n    \"serve2\": \"npm run build && firebase emulators:start --only functions\",\n    \"serve\": \"npm run build && --watch | firebase emulators:start --only functions\",\n    \"shell\": \"npm run build && firebase functions:shell\",\n    \"start\": \"npm run shell\",\n    \"deploy\": \"firebase deploy --only functions\",\n    \"logs\": \"firebase functions:log\"\n  },\nserve2 가 기존 명령 보관해둔거구요\nserve 가 새로 넣은 명령입니다. --watch 가 들어간걸 알 수 있습니다.\n테스트 서버 실행\nfirebase emulators:start \n \n다시 실행 해주긴하는데\n반응이 겁나 느립니다.\n이런 환경에서 개발하다니 놀랍습니다.",
        "guid": "https://serverdown.tistory.com/1212",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-18T12:21:50.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "상위 조직장의 관심",
        "link": "https://jojoldu.tistory.com/822",
        "pubDate": "Sat, 22 Mar 2025 18:29:15 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/822#entry822comment",
        "content": "<p data-ke-size=\"size16\">요즘 회사 두 곳의 이야기를 들으며, 상위 조직장(최고 리더)이 프로젝트에 얼마나 관여하느냐에 따라 조직 문화가 얼마나 달라질 수 있는지 새삼 깨닫고 있다.<br />흥미롭게도 두 회사 모두 &lsquo;스쿼드&rsquo; 형태로 팀을 운영하지만, 최고 리더의 개입 정도는 전혀 다르다.</p>\n<h2 data-ke-size=\"size26\">A 회사 이야기</h2>\n<p data-ke-size=\"size16\">A 회사는 최고 리더들의 관여가 매우 높다.<br />전사적 관점에서 임팩트가 큰 작업은 <b>빠르게 우선순위가 정리</b>되고, <b>여러 팀 간 의사결정도 순식간에 이뤄진다</b>.<br />프로젝트가 <b>신속하게 진행</b>된다는 점에서는 장점이 많다.<br />전사적인 프로젝트가 항상 최순위가 되고, 전사적인 임팩트에 모든 팀이 일사분란하게 움직인다.</p>\n<p data-ke-size=\"size16\">그렇지만 이 상황이 이어지니 구성원들이 자발적으로 아이디어를 내거나 실패를 통해 배울 기회가 줄어든다.<br />어느 순간부터 팀원들은 &ldquo;<b>이게 최고 리더가 좋아할 만한 방식인가?</b>&rdquo;만을 고민하게 되고, 자연스럽게 리더가 선호할 것 같은 방향으로 디자인과 기획이 편중되는 분위기가 형성된다.</p>\n<p data-ke-size=\"size16\">결국 조직 내에서 &ldquo;최고 리더의 오더를 수행하는 것&rdquo;이 주된 업무 패턴이 되어버렸다.<br />리더의 관여 덕분에 프로젝트 진행은 빠르지만, <b>조직원들의 주 관심사는 더이상 고객이 아니라 최고 리더</b>가 된 것이다.</p>\n<p data-ke-size=\"size16\">A 팀의 조직장들은 HR과 미팅때마다 최고 리더들의 관심을 줄이고 위임을 요청한다.</p>\n<h2 data-ke-size=\"size26\">B 회사 이야기</h2>\n<p data-ke-size=\"size16\">반면 B 회사는 완전히 다르다.<br /><b>최고 리더가 각 스쿼드에 거의 개입</b>하지 않는다.<br />초기에 각 조직별 KPI를 설정할 때 한 번 리더들의 확인을 거치는 정도이며, 이후 실행에 있어서는 전적으로 자율성을 부여받는다.</p>\n<p data-ke-size=\"size16\">이렇다 보니 <b>승인 절차가 없고 내부에서 합의만 되면 바로 실행</b>할 수 있어 속도는 놀라울 정도로 빠르다.<br />하지만 오히려 이게 문제가 되기 시작했다.<br />회사 내 다른 팀과 협업이 필요할 때, 각 스쿼드가 자기 팀의 KPI에 집중하다 보니 <b>협력보다는 &lsquo;내 팀 일 먼저&rsquo;</b> 로 흐르는 경우가 잦다.</p>\n<p data-ke-size=\"size16\">더 큰 임팩트를 낼 수 있는 프로젝트라도 다른 조직을 설득하기가 번거롭고, 일정 맞추기가 쉽지 않으니 <b>본인 조직에서 해결할 수 있는 스펙으로만 기획</b>하게 된다.<br />대부분의 작업은 전사적인 임팩트가 부족한 것들로 이루어진다.<br />결국 <b>큰 그림을 보는 전사적 시너지는 잘 이뤄지지 않는다</b>.</p>\n<p data-ke-size=\"size16\">말을 빌리자면 팀의 규모가 아무리 커져도 <code>플러스</code> 효과는 있지만 <code>곱하기</code> 효과는 내지못하는 상황이 계속 이어지는 것이다.</p>\n<p data-ke-size=\"size16\">B 팀의 조직장들은 HR과 미팅때마다 최고 리더들이 여러 조직의 업무에 관여해서 더 큰 임팩트를 내야만 한다고 요청한다.</p>\n<h2 data-ke-size=\"size26\">리더의 개입, 방임, 위임 그 사이 어딘가</h2>\n<p data-ke-size=\"size16\">근 6개월 내 스타트업에서 가장 핫한 주제가 바로 \"창업자 모드\" 일 것이다.<br />에이비엔비의 CEO, 브라이언 체스키가 여러 스타트업 행사에서 이야기하는 개념으로 \"<b>기업을 운영하면서 창업자가 모든 업무를 관리자에게 위임하지 말고, 사소한 부분까지 매우 적극적으로 개입하자는 주장</b>\" 이다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://maily.so/josh/posts/c1a96712?mid=db22974c\">브라이언 체스키가 &lsquo;창업자 모드'를 선택한 이유</a></li>\n<li><a href=\"https://news.hada.io/topic?id=16567\">폴 그레이엄이 이야기하는 창업자 모드</a></li>\n<li><a href=\"https://news.hada.io/topic?id=16614\">Instacart CEO인 Fidji Simo가 \"완전 동의\" 한다는 글</a></li>\n</ul>\n<p data-ke-size=\"size16\">Y Combinator의 창업가 폴 그레이엄은 직접 블로그까지 써가면서, 브라이언의 <code>창업자 모드</code> 라는 개념이 '스타트업 경영의 중대한 인사이트' 라고 극찬을 했다고 한다.</p>\n<p data-ke-size=\"size16\">다만 브라이언 체스키도 '마이크로 매니징' 과 '세부 사항 관여'는 다른거라고 한다.<br />즉, 무엇을 해야하는지 하나하나 지시하는 것(마이크로 매니징) 이 아니라 <b>상위 리더가 디테일한 내용을 직접 '알고' 의사결정을 하거나 지원하는 것이 중요하고 효과적</b>이라는 것이다.</p>\n<hr data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">A, B 회사의 사례가 비단 두 회사만의 이야기는 아니다.<br />대단히 많은 회사가 이 두 회사 사이 어느즘에 있다.<br />결국 최고 리더가 디테일을 자세히 파악하고 있으면서 어디까지 결정에 참여할 것인지 조절하는 것이 중요한 것 같다.</p>\n<p data-ke-size=\"size16\">위임과 방임은 다르다.<br />최고 리더 혹은 상위 리더는 여러 의사결정에서 분명히 본인들이 이해하고 있고, 필요하면 여러 팀 간의 의사결정에서 회사를 위한 가장 좋은 결정을 내려야 한다.<br />다만, 그 사이에서 너무 세세한 것들까지, 혹은 필요 이상으로 <code>How</code> 에 관해 이야기하는 것은 조심해야 한다.</p>\n<p data-ke-size=\"size16\">이걸 잘 지킬 수 있다면 너무나 성과내기 좋은 조직이 될 수 있지 않을까?</p>",
        "contentSnippet": "요즘 회사 두 곳의 이야기를 들으며, 상위 조직장(최고 리더)이 프로젝트에 얼마나 관여하느냐에 따라 조직 문화가 얼마나 달라질 수 있는지 새삼 깨닫고 있다.\n흥미롭게도 두 회사 모두 ‘스쿼드’ 형태로 팀을 운영하지만, 최고 리더의 개입 정도는 전혀 다르다.\nA 회사 이야기\nA 회사는 최고 리더들의 관여가 매우 높다.\n전사적 관점에서 임팩트가 큰 작업은 빠르게 우선순위가 정리되고, 여러 팀 간 의사결정도 순식간에 이뤄진다.\n프로젝트가 신속하게 진행된다는 점에서는 장점이 많다.\n전사적인 프로젝트가 항상 최순위가 되고, 전사적인 임팩트에 모든 팀이 일사분란하게 움직인다.\n그렇지만 이 상황이 이어지니 구성원들이 자발적으로 아이디어를 내거나 실패를 통해 배울 기회가 줄어든다.\n어느 순간부터 팀원들은 “이게 최고 리더가 좋아할 만한 방식인가?”만을 고민하게 되고, 자연스럽게 리더가 선호할 것 같은 방향으로 디자인과 기획이 편중되는 분위기가 형성된다.\n결국 조직 내에서 “최고 리더의 오더를 수행하는 것”이 주된 업무 패턴이 되어버렸다.\n리더의 관여 덕분에 프로젝트 진행은 빠르지만, 조직원들의 주 관심사는 더이상 고객이 아니라 최고 리더가 된 것이다.\nA 팀의 조직장들은 HR과 미팅때마다 최고 리더들의 관심을 줄이고 위임을 요청한다.\nB 회사 이야기\n반면 B 회사는 완전히 다르다.\n최고 리더가 각 스쿼드에 거의 개입하지 않는다.\n초기에 각 조직별 KPI를 설정할 때 한 번 리더들의 확인을 거치는 정도이며, 이후 실행에 있어서는 전적으로 자율성을 부여받는다.\n이렇다 보니 승인 절차가 없고 내부에서 합의만 되면 바로 실행할 수 있어 속도는 놀라울 정도로 빠르다.\n하지만 오히려 이게 문제가 되기 시작했다.\n회사 내 다른 팀과 협업이 필요할 때, 각 스쿼드가 자기 팀의 KPI에 집중하다 보니 협력보다는 ‘내 팀 일 먼저’ 로 흐르는 경우가 잦다.\n더 큰 임팩트를 낼 수 있는 프로젝트라도 다른 조직을 설득하기가 번거롭고, 일정 맞추기가 쉽지 않으니 본인 조직에서 해결할 수 있는 스펙으로만 기획하게 된다.\n대부분의 작업은 전사적인 임팩트가 부족한 것들로 이루어진다.\n결국 큰 그림을 보는 전사적 시너지는 잘 이뤄지지 않는다.\n말을 빌리자면 팀의 규모가 아무리 커져도 플러스 효과는 있지만 곱하기 효과는 내지못하는 상황이 계속 이어지는 것이다.\nB 팀의 조직장들은 HR과 미팅때마다 최고 리더들이 여러 조직의 업무에 관여해서 더 큰 임팩트를 내야만 한다고 요청한다.\n리더의 개입, 방임, 위임 그 사이 어딘가\n근 6개월 내 스타트업에서 가장 핫한 주제가 바로 \"창업자 모드\" 일 것이다.\n에이비엔비의 CEO, 브라이언 체스키가 여러 스타트업 행사에서 이야기하는 개념으로 \"기업을 운영하면서 창업자가 모든 업무를 관리자에게 위임하지 말고, 사소한 부분까지 매우 적극적으로 개입하자는 주장\" 이다.\n브라이언 체스키가 ‘창업자 모드'를 선택한 이유\n폴 그레이엄이 이야기하는 창업자 모드\nInstacart CEO인 Fidji Simo가 \"완전 동의\" 한다는 글\nY Combinator의 창업가 폴 그레이엄은 직접 블로그까지 써가면서, 브라이언의 창업자 모드 라는 개념이 '스타트업 경영의 중대한 인사이트' 라고 극찬을 했다고 한다.\n다만 브라이언 체스키도 '마이크로 매니징' 과 '세부 사항 관여'는 다른거라고 한다.\n즉, 무엇을 해야하는지 하나하나 지시하는 것(마이크로 매니징) 이 아니라 상위 리더가 디테일한 내용을 직접 '알고' 의사결정을 하거나 지원하는 것이 중요하고 효과적이라는 것이다.\nA, B 회사의 사례가 비단 두 회사만의 이야기는 아니다.\n대단히 많은 회사가 이 두 회사 사이 어느즘에 있다.\n결국 최고 리더가 디테일을 자세히 파악하고 있으면서 어디까지 결정에 참여할 것인지 조절하는 것이 중요한 것 같다.\n위임과 방임은 다르다.\n최고 리더 혹은 상위 리더는 여러 의사결정에서 분명히 본인들이 이해하고 있고, 필요하면 여러 팀 간의 의사결정에서 회사를 위한 가장 좋은 결정을 내려야 한다.\n다만, 그 사이에서 너무 세세한 것들까지, 혹은 필요 이상으로 How 에 관해 이야기하는 것은 조심해야 한다.\n이걸 잘 지킬 수 있다면 너무나 성과내기 좋은 조직이 될 수 있지 않을까?",
        "guid": "https://jojoldu.tistory.com/822",
        "categories": [
          "생각정리",
          "리더십",
          "마이크로 매니징",
          "브라이언 체스키",
          "위임",
          "창업자 모드"
        ],
        "isoDate": "2025-03-22T09:29:15.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "코드 품질 개선 기법 6편: 마구 자를 것인가 반듯하게 자를 것인가",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-6",
        "pubDate": "Wed, 19 Mar 2025 02:00:00 GMT",
        "content": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.\n저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰...",
        "contentSnippet": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.\n저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-6",
        "isoDate": "2025-03-19T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": [
      {
        "title": "Hash..라니~!!",
        "link": "https://velog.io/@sweet_sumin/Hash..%EB%9D%BC%EB%8B%88",
        "pubDate": "Thu, 20 Mar 2025 12:52:34 GMT",
        "content": "<p>따끈따끈한 이번 작업을 소개하려고 한다. \n오늘의 주인공은 상용데이터의 Hash 마이그레이션이다.</p>\n<h2 id=\"📌-등장-배경\">📌 등장 배경</h2>\n<p>🌞 화창한 아침..운영 실무자에 의해 데이터 변경 요청이 떨어졌다\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/8a2c842f-be64-4341-a56a-8d704cd00eaa/image.png\" alt=\"\"></p>\n<p>현재 요청된 내용은 프로덕트에 매핑된 속성을 변경하되 그 속성 옵션값은 그대로 유지해달라는 요청이다. \n좀 더 구체적으로 말해보자면, 상품1에 속성으로 PRADA 컬러라는 속성이 있고 그 값으로 빨강, 주황이 있는데 상품 1의 속성을 GUCCI 컬러라는 속성으로 변경하되 값은 그대로 빨강, 주황으로 유지 해달라는 것이다.</p>\n<blockquote>\n<ul>\n<li>운영팀의 요청: 특정 상품의 속성을 다른 속성으로 변경해야 하지만, 속성 값은 유지해야 한다.</li>\n</ul>\n</blockquote>\n<ul>\n<li>문제: 기존 정책상 노출 속성은 수정할 수 없으므로, 마이그레이션 작업이 필요하다.</li>\n</ul>\n<p>현재 정책상 노출 속성은 한번 상품에 매핑되면 수정불가한 정책을 가지고 있기 때문에 우리가 마이그레이션을 해줄 수밖에 없다. </p>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/ceb0d43c-ecd6-4a02-ba54-441068935140/image.png\" alt=\"\"></p>\n<p>내가 할일은 </p>\n<ol>\n<li>product_attribute에서 attribute를 변경해주고</li>\n<li>item_attribute_option에서 attribute와 attributeOption을 변경해줘야한다. \n바꿀 attributeOption은 기존의 attributeOption 값과 일치한 것을 찾아다가 변경해주면된다. </li>\n</ol>\n<p>사실 여기까지보면 뭐.. 쿼리 돌려주면 되지 한다. 맞다 이 일은 어렵지 않다. 근데 문제는 hash이다. 이번 이야기에서 나오는 주제의 주인공은 HASH이다. </p>\n<p>우리는 상품과 아이템의 중복확인을 hash로 구별한다. </p>\n<ul>\n<li><strong>상품 중복 조건</strong> : 카테고리 + 상품이름 + 노출속성목록 + 브랜드Id + 모델명</li>\n<li><strong>아이템 중복 조건</strong> : 상품 Id + 노출속성목록 + 속성값목록</li>\n</ul>\n<p>이렇게 되어 있다. \n이번에 이 조건들 중에 상품에는 노출 속성 목록이, 아이템에는 노출속성목록과 속성값 목록이 변경되기 때문에 Hash를 새로 변경해줄 수밖에 없다. \n그럼 변경된 상품과 아이템만 변경하면되잖아? 하기에는 이번 작업부터 중복 조건이 일부 변경되었다. 위에 언급한 조건은 이번에 변경되는 조건에 해당된다.\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/ccb56ec1-a4d5-4a1b-854b-1bd4a3331b4d/image.png\" alt=\"\"></p>\n<p>에이 변경하면 되지..하기엔 단순히 몇백개가 아니고 몇십만 단위다..ㅎ 거기다가 상품 중복 조건이 이번 작업부터 변경된 조건이라 해시 충돌이 안날래야 안날 수가 없는 작업이다 ㄸㄹㄹ,, </p>\n<p>💡 정리하자면, 상품과 아이템의 중복 여부를 확인하는 데 해시를 사용하는 이번 속성 변경하면서 그 기준이 되는 값 또한 변경이 되었기에 hash 작업이 필요하다</p>\n<h2 id=\"📌-hash\">📌 Hash?</h2>\n<blockquote>\n<p>💡 해시\n임의의 크기를 가진 데이터를 고정된 크기의 데이터로 변화시켜 저장하는 것</p>\n</blockquote>\n<p>결론부터 말하자면, 동일한 입력값이면 항상 동일한 해시값이 생성되므로, 데이터를 직접 비교하지 않고도 빠르게 중복을 판별할 수 있다. 즉, 중복 체크하는데 성능적으로 해시가 더 빠르다고 판단한 것이다. </p>\n<h3 id=\"🐳-직접-비교-vs-해시-비교\">🐳 직접 비교 Vs 해시 비교</h3>\n<p>상품을 등록하는 걸 예시로 들어보자. \n상품을 등록하기 전 위 중복조건에 의해 중복된 상품이 있는지 확인해야 한다. </p>\n<p>만약 직접 비교해야 한다면?</p>\n<blockquote>\n<p>EXPLAIN SELECT * FROM product \nWHERE category_id = ? \nAND product_name = ? \nAND brand_id = ? \nAND model_no = ? \nAND displayed_attribute_ids = ?;</p>\n</blockquote>\n<p>해당 쿼리를 돌려 보면\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/565877f3-9c95-4456-b970-512710898d43/image.png\" alt=\"\">\n실행계획에 테이블 풀스캔하고 있음을 확인할 수 있었다. \n즉, 상품을 추가할때 기존 상품과 하나씩 비교한다는 것이다. -&gt; 최악의 경우 O(N)\n풀 스캔하는 것을 보니 데이터가 많을수록 성능이 저하됨을 의미하는데 현재 우리 상품은 몇십만개이다. 그럼.. 성능은 아주 최악이 되는 것이다. </p>\n<p>그럼 Hash의 경우는?</p>\n<blockquote>\n<p>EXPLAIN SELECT * FROM product_identity pi\n               WHERE pi.hash = ?;</p>\n</blockquote>\n<p>해당 쿼리를 돌려보면\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/2e614f7a-084b-4774-b37b-da9eca313b45/image.png\" alt=\"\"></p>\n<p>const row lookup으로 인덱스를 확용한 상수 조회를 하고 있음을 확인할 수 있다. \n해당 스캔 방식은 단일 행을 대상으로 하는 상수 값을 기반으로 하는데 Primary Key 또는 Unique Key에 대한 WHERE 절의 상수 값 비교가 있을 때 나타난다. \nhash에 의해 unique를 걸 수 있기 때문에 인덱스를 걸 수 있는 것이다. \n즉, 테이블의 유니크 인덱스 (uk_hash)를 사용하여 단 한개의 행만 조회하고 있다. \n-&gt; 시간 복잡도 O(1) ~ O(logN)</p>\n<p>결과적으로 직접 비교보다 해시비교가 풀스캔 방지가 될 뿐만아니라 속도도 훨씬 빠르기 때문에 중복 검사에 해시를 적용하는 것이 성능상 최적이라는 것을 알 수 있다. </p>\n<p>정리하자면,</p>\n<blockquote>\n<ul>\n<li>직접 비교\n풀스캔, 시간복잡도 : O(N), 데이터 많을수록 성능 저하</li>\n</ul>\n</blockquote>\n<ul>\n<li>Hash 비교\nO(1) ~ O(logN), 인덱스를 활용해 빠른 조회 가능</li>\n</ul>\n<h2 id=\"📌-마이그레이션-작업에-대한-회고\">📌 마이그레이션 작업에 대한 회고</h2>\n<p>작업에 대한 플로우를 말해보자면,</p>\n<ol>\n<li>속성 변경에 대한 프로덕트-속성 매핑 데이터, 아이템-속성 매핑 데이터 변경 </li>\n<li>중복 조건에 의한 해시 충돌 테스트</li>\n<li>충돌된 상품에 대한 실무자 전달 및 데이터 정리</li>\n<li>프로덕트, 아이템 해시 테이블에 생성 -&gt; 임시 테이블에 생성</li>\n<li>기존 해시 테이블 백업 후 임시테이블을 기존 테이블 명으로 변환</li>\n<li>product, item 해시 캐시의 기존 데이터 삭제 후 새로 생성</li>\n</ol>\n<p>상용 데이터를 다루기도 하고, 내 기준상 데이터가 많아서 사실 두렵기도 하고 어려움도 많았던 작업이었다. 이 작업을 하면서 흥미로웠던 구간은 기존의 데이터에 대한 해시 생성 구간이었다. </p>\n<p>아이템만 해도 현재 활성화된 아이템이 몇십만개인데 이걸 어떻게 생성을 하느냐?\n방법은 page를 활용해서 한번에 3000개씩 가져와서 배치를 돌리는 것이다. \n( 이건 그냥 여담인데 아무생각없이 10개씩 가져오도록 했다가 반나절이되어도 안끝났다..ㅎ 그래서 확 3000개씩 가져오는 걸로 바꾸었더니 5도 안되어서 끝났다. ㅎㅎ 네트워크 비용에 대한 체감이 확 드는 순간이었다. )</p>\n<h3 id=\"🐳-내부-코드-분석\">🐳 내부 코드 분석</h3>\n<p>가장 흥미로웠던 코드를 분석해보자.\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/ddea23cc-6019-432c-8c39-cbfd60477291/image.png\" alt=\"\"></p>\n<p>해당 코드는 대량 데이터를 한번에 삽입해야 할때 사용한다. \n먼저 excute 내부 코드를 살펴보면, ( Spring 내부 코드 )\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/348b9c0c-25df-40ad-bcc9-a02f927e60f8/image.png\" alt=\"\"></p>\n<p>1) getTransaction() : 직접 트랜잭션을 가져오고,\n2) commit() : 트랜잭션을 직접 커밋하고\n3) rollbackOnException() : 트랜잭션을 수동으로 롤백하고\n이를 통해 excute() 메소드는 트랜잭션 관리 로직을 직접 실행하는 메서드임을 확인할 수 있다. \n-&gt; 예외 발생시 전체 롤백이 되게 됨을 알 수 있다. 실제로 테스트할때 충돌로 인한 예외 발생시 전체 롤백된 것을 확인하였다. </p>\n<p>대망의 batchUpdate 메소드를 살펴보자면,  ( Spring 내부 코드 ) \n이 메소드는 JDBC 기반 배치 업데이트 메서드로 여러개의 데이터를 한번에 업데이트하는 기능을 함을 알 수 있다.</p>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/ea79583c-b9f7-4d18-86b8-33277175c5c8/image.png\" alt=\"\">\n실제로 Sql에 해당 하는 코드가\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/8b50ed9f-b19b-40af-a12a-810e964783e7/image.png\" alt=\"\">\n이렇게 앞전에 선언해놓았고, 이것을 매개변수로 받아서 hash 생성을 한꺼번에 하는 것을 알 수 있었다. </p>\n<h3 id=\"🐳-회고\">🐳 회고</h3>\n<p>이 작업을 수행하면서, 역시 직접해봐야 좀더 와닿음을 다시 한번 확인하는 순간이었다. 내가 이번에 작업한 해시는 이전부터 중복 검사를 위해 해놓았던 조치였다. 그러나 내가 한게 아니다보니, 해시 작업에 대한 이해도가 낮았다. \n이번에 해시 생성 작업을 하다보니, 왜 필요하고 어떤 코드를 사용했는지 나를 납득해가면서 작업을 하다보니 얻어가는 것도 많고 이해도도 높아짐을 알 수 있었다. 나중에 중복 검사가 필요할때 이 작업을 떠올리며 해시를 생각해내지 않을까? ㅎㅎ😄</p>\n<p>처음에 이 작업이 주어졌을때, 상용 데이터를 만진다는 것에 대한 두려움이 있었는데, &#39;이 연차에 어떤 누가 몇십만개의 상용 데이터를 다루는 경험을 하겠어?&#39; 하는 마음으로 임했다. 그래도 무서웠다. 혹시 내가 잘못할까봐 덜덜 떨면서 했다. 며칠 지난 지금, 이 작업을 회고하면 간단한데? 싶다. </p>\n<p><strong>이 작업에서 가장 오래 시간이 걸렸던 부분은 해시 충돌 부분이었다.</strong> \n사실 상품 해시 충돌은 예상했지만, <strong>아이템 해시 충돌은 예상 못했다.</strong> <strong>왜냐면 상품 해시 충돌된 것을 해결하면(상품 충돌난 아이템까지 삭제했기에) 아이템 중복 기준에 상품 ID가 있기 때문에 아이템 해시 충돌은 전혀 나지 않을 것이라 예상했기 때문이다.</strong> 그런데 아이템 해시 충돌이 발생했다.</p>\n<p>앞선 코드에 보여줬던 것이 하나라도 충돌되면 멈추는 로직이기때문에 몇십만개의 아이템을 다 돌리면서 충돌날때마다 에러나는 상황은 너무나도 시간이 많이 들기때문에 \n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/57fd8d2d-b37a-4a6c-a4fb-692a9b950591/image.png\" alt=\"\"></p>\n<p>에러나더라도 계속 돌아가도록 해당 부분을 try-Catch로 감싸서 충돌나서 에러가 나더라도 멈추지 않도록 했고, 페이지네이션으로 3000개씩 데이터를 돌렸더니 몇십만개의 데이터가 모두 거의 5분만에 다 돌아가서 모든 충돌을 잡아낼 수 있었다. 덕분에 빠르게 어떤 아이템들이 충돌났는지 확인할 수 있었다.</p>\n<p> 거의 40개의 아이템이 충돌났고, 상품으로 따지자면 3개 상품에 대한 아이템들이었다. 알고보니 임의로 수동으로 넣은 아이템 데이터에서 발생한 것이다. 따라서 해당 아이템들과 상품들을 삭제하니 해결되었던 문제였다. </p>\n<p>해시 충돌된 상품들과 아이템들이 다행히 모두 주문이 나간적이 없거나 테스트 상품이라서 삭제하기 어렵지 않았다. 물론 해당 상품과 아이템들을 삭제하기 위해 그 하위 집단인 벤더아이템, 딜벤더아이템, 딜 등의 삭제 작업들을 추가로 해줘야 하지만 오더가 없었기에 스위칭이 아닌 삭제로 해결할 수 있었던 작업이었다. 이번 작업을 통해 실무자와 커뮤니케이션도 해야하고 배포 작업도 걸려있어서 부담이 많이 가는 작업이었다. 하지만, 정말 값진 경험이었다. 앞으로 중복검사나 데이터 마이그레이션이 필요할때 이번 경험이 큰 도움이 될 것 같다. </p>\n",
        "contentSnippet": "따끈따끈한 이번 작업을 소개하려고 한다. \n오늘의 주인공은 상용데이터의 Hash 마이그레이션이다.\n📌 등장 배경\n🌞 화창한 아침..운영 실무자에 의해 데이터 변경 요청이 떨어졌다\n\n현재 요청된 내용은 프로덕트에 매핑된 속성을 변경하되 그 속성 옵션값은 그대로 유지해달라는 요청이다. \n좀 더 구체적으로 말해보자면, 상품1에 속성으로 PRADA 컬러라는 속성이 있고 그 값으로 빨강, 주황이 있는데 상품 1의 속성을 GUCCI 컬러라는 속성으로 변경하되 값은 그대로 빨강, 주황으로 유지 해달라는 것이다.\n운영팀의 요청: 특정 상품의 속성을 다른 속성으로 변경해야 하지만, 속성 값은 유지해야 한다.\n문제: 기존 정책상 노출 속성은 수정할 수 없으므로, 마이그레이션 작업이 필요하다.\n현재 정책상 노출 속성은 한번 상품에 매핑되면 수정불가한 정책을 가지고 있기 때문에 우리가 마이그레이션을 해줄 수밖에 없다. \n\n내가 할일은 \nproduct_attribute에서 attribute를 변경해주고\nitem_attribute_option에서 attribute와 attributeOption을 변경해줘야한다. \n바꿀 attributeOption은 기존의 attributeOption 값과 일치한 것을 찾아다가 변경해주면된다. \n사실 여기까지보면 뭐.. 쿼리 돌려주면 되지 한다. 맞다 이 일은 어렵지 않다. 근데 문제는 hash이다. 이번 이야기에서 나오는 주제의 주인공은 HASH이다. \n우리는 상품과 아이템의 중복확인을 hash로 구별한다. \n상품 중복 조건 : 카테고리 + 상품이름 + 노출속성목록 + 브랜드Id + 모델명\n아이템 중복 조건 : 상품 Id + 노출속성목록 + 속성값목록\n이렇게 되어 있다. \n이번에 이 조건들 중에 상품에는 노출 속성 목록이, 아이템에는 노출속성목록과 속성값 목록이 변경되기 때문에 Hash를 새로 변경해줄 수밖에 없다. \n그럼 변경된 상품과 아이템만 변경하면되잖아? 하기에는 이번 작업부터 중복 조건이 일부 변경되었다. 위에 언급한 조건은 이번에 변경되는 조건에 해당된다.\n\n에이 변경하면 되지..하기엔 단순히 몇백개가 아니고 몇십만 단위다..ㅎ 거기다가 상품 중복 조건이 이번 작업부터 변경된 조건이라 해시 충돌이 안날래야 안날 수가 없는 작업이다 ㄸㄹㄹ,, \n💡 정리하자면, 상품과 아이템의 중복 여부를 확인하는 데 해시를 사용하는 이번 속성 변경하면서 그 기준이 되는 값 또한 변경이 되었기에 hash 작업이 필요하다\n📌 Hash?\n💡 해시\n임의의 크기를 가진 데이터를 고정된 크기의 데이터로 변화시켜 저장하는 것\n결론부터 말하자면, 동일한 입력값이면 항상 동일한 해시값이 생성되므로, 데이터를 직접 비교하지 않고도 빠르게 중복을 판별할 수 있다. 즉, 중복 체크하는데 성능적으로 해시가 더 빠르다고 판단한 것이다. \n🐳 직접 비교 Vs 해시 비교\n상품을 등록하는 걸 예시로 들어보자. \n상품을 등록하기 전 위 중복조건에 의해 중복된 상품이 있는지 확인해야 한다. \n만약 직접 비교해야 한다면?\nEXPLAIN SELECT * FROM product \nWHERE category_id = ? \nAND product_name = ? \nAND brand_id = ? \nAND model_no = ? \nAND displayed_attribute_ids = ?;\n해당 쿼리를 돌려 보면\n\n실행계획에 테이블 풀스캔하고 있음을 확인할 수 있었다. \n즉, 상품을 추가할때 기존 상품과 하나씩 비교한다는 것이다. -> 최악의 경우 O(N)\n풀 스캔하는 것을 보니 데이터가 많을수록 성능이 저하됨을 의미하는데 현재 우리 상품은 몇십만개이다. 그럼.. 성능은 아주 최악이 되는 것이다. \n그럼 Hash의 경우는?\nEXPLAIN SELECT * FROM product_identity pi\n               WHERE pi.hash = ?;\n해당 쿼리를 돌려보면\n\nconst row lookup으로 인덱스를 확용한 상수 조회를 하고 있음을 확인할 수 있다. \n해당 스캔 방식은 단일 행을 대상으로 하는 상수 값을 기반으로 하는데 Primary Key 또는 Unique Key에 대한 WHERE 절의 상수 값 비교가 있을 때 나타난다. \nhash에 의해 unique를 걸 수 있기 때문에 인덱스를 걸 수 있는 것이다. \n즉, 테이블의 유니크 인덱스 (uk_hash)를 사용하여 단 한개의 행만 조회하고 있다. \n-> 시간 복잡도 O(1) ~ O(logN)\n결과적으로 직접 비교보다 해시비교가 풀스캔 방지가 될 뿐만아니라 속도도 훨씬 빠르기 때문에 중복 검사에 해시를 적용하는 것이 성능상 최적이라는 것을 알 수 있다. \n정리하자면,\n직접 비교\n풀스캔, 시간복잡도 : O(N), 데이터 많을수록 성능 저하\nHash 비교\nO(1) ~ O(logN), 인덱스를 활용해 빠른 조회 가능\n📌 마이그레이션 작업에 대한 회고\n작업에 대한 플로우를 말해보자면,\n속성 변경에 대한 프로덕트-속성 매핑 데이터, 아이템-속성 매핑 데이터 변경 \n중복 조건에 의한 해시 충돌 테스트\n충돌된 상품에 대한 실무자 전달 및 데이터 정리\n프로덕트, 아이템 해시 테이블에 생성 -> 임시 테이블에 생성\n기존 해시 테이블 백업 후 임시테이블을 기존 테이블 명으로 변환\nproduct, item 해시 캐시의 기존 데이터 삭제 후 새로 생성\n상용 데이터를 다루기도 하고, 내 기준상 데이터가 많아서 사실 두렵기도 하고 어려움도 많았던 작업이었다. 이 작업을 하면서 흥미로웠던 구간은 기존의 데이터에 대한 해시 생성 구간이었다. \n아이템만 해도 현재 활성화된 아이템이 몇십만개인데 이걸 어떻게 생성을 하느냐?\n방법은 page를 활용해서 한번에 3000개씩 가져와서 배치를 돌리는 것이다. \n( 이건 그냥 여담인데 아무생각없이 10개씩 가져오도록 했다가 반나절이되어도 안끝났다..ㅎ 그래서 확 3000개씩 가져오는 걸로 바꾸었더니 5도 안되어서 끝났다. ㅎㅎ 네트워크 비용에 대한 체감이 확 드는 순간이었다. )\n🐳 내부 코드 분석\n가장 흥미로웠던 코드를 분석해보자.\n\n해당 코드는 대량 데이터를 한번에 삽입해야 할때 사용한다. \n먼저 excute 내부 코드를 살펴보면, ( Spring 내부 코드 )\n\n1) getTransaction() : 직접 트랜잭션을 가져오고,\n2) commit() : 트랜잭션을 직접 커밋하고\n3) rollbackOnException() : 트랜잭션을 수동으로 롤백하고\n이를 통해 excute() 메소드는 트랜잭션 관리 로직을 직접 실행하는 메서드임을 확인할 수 있다. \n-> 예외 발생시 전체 롤백이 되게 됨을 알 수 있다. 실제로 테스트할때 충돌로 인한 예외 발생시 전체 롤백된 것을 확인하였다. \n대망의 batchUpdate 메소드를 살펴보자면,  ( Spring 내부 코드 ) \n이 메소드는 JDBC 기반 배치 업데이트 메서드로 여러개의 데이터를 한번에 업데이트하는 기능을 함을 알 수 있다.\n\n실제로 Sql에 해당 하는 코드가\n\n이렇게 앞전에 선언해놓았고, 이것을 매개변수로 받아서 hash 생성을 한꺼번에 하는 것을 알 수 있었다. \n🐳 회고\n이 작업을 수행하면서, 역시 직접해봐야 좀더 와닿음을 다시 한번 확인하는 순간이었다. 내가 이번에 작업한 해시는 이전부터 중복 검사를 위해 해놓았던 조치였다. 그러나 내가 한게 아니다보니, 해시 작업에 대한 이해도가 낮았다. \n이번에 해시 생성 작업을 하다보니, 왜 필요하고 어떤 코드를 사용했는지 나를 납득해가면서 작업을 하다보니 얻어가는 것도 많고 이해도도 높아짐을 알 수 있었다. 나중에 중복 검사가 필요할때 이 작업을 떠올리며 해시를 생각해내지 않을까? ㅎㅎ😄\n처음에 이 작업이 주어졌을때, 상용 데이터를 만진다는 것에 대한 두려움이 있었는데, '이 연차에 어떤 누가 몇십만개의 상용 데이터를 다루는 경험을 하겠어?' 하는 마음으로 임했다. 그래도 무서웠다. 혹시 내가 잘못할까봐 덜덜 떨면서 했다. 며칠 지난 지금, 이 작업을 회고하면 간단한데? 싶다. \n이 작업에서 가장 오래 시간이 걸렸던 부분은 해시 충돌 부분이었다. \n사실 상품 해시 충돌은 예상했지만, 아이템 해시 충돌은 예상 못했다. 왜냐면 상품 해시 충돌된 것을 해결하면(상품 충돌난 아이템까지 삭제했기에) 아이템 중복 기준에 상품 ID가 있기 때문에 아이템 해시 충돌은 전혀 나지 않을 것이라 예상했기 때문이다. 그런데 아이템 해시 충돌이 발생했다.\n앞선 코드에 보여줬던 것이 하나라도 충돌되면 멈추는 로직이기때문에 몇십만개의 아이템을 다 돌리면서 충돌날때마다 에러나는 상황은 너무나도 시간이 많이 들기때문에 \n\n에러나더라도 계속 돌아가도록 해당 부분을 try-Catch로 감싸서 충돌나서 에러가 나더라도 멈추지 않도록 했고, 페이지네이션으로 3000개씩 데이터를 돌렸더니 몇십만개의 데이터가 모두 거의 5분만에 다 돌아가서 모든 충돌을 잡아낼 수 있었다. 덕분에 빠르게 어떤 아이템들이 충돌났는지 확인할 수 있었다.\n 거의 40개의 아이템이 충돌났고, 상품으로 따지자면 3개 상품에 대한 아이템들이었다. 알고보니 임의로 수동으로 넣은 아이템 데이터에서 발생한 것이다. 따라서 해당 아이템들과 상품들을 삭제하니 해결되었던 문제였다. \n해시 충돌된 상품들과 아이템들이 다행히 모두 주문이 나간적이 없거나 테스트 상품이라서 삭제하기 어렵지 않았다. 물론 해당 상품과 아이템들을 삭제하기 위해 그 하위 집단인 벤더아이템, 딜벤더아이템, 딜 등의 삭제 작업들을 추가로 해줘야 하지만 오더가 없었기에 스위칭이 아닌 삭제로 해결할 수 있었던 작업이었다. 이번 작업을 통해 실무자와 커뮤니케이션도 해야하고 배포 작업도 걸려있어서 부담이 많이 가는 작업이었다. 하지만, 정말 값진 경험이었다. 앞으로 중복검사나 데이터 마이그레이션이 필요할때 이번 경험이 큰 도움이 될 것 같다.",
        "guid": "https://velog.io/@sweet_sumin/Hash..%EB%9D%BC%EB%8B%88",
        "isoDate": "2025-03-20T12:52:34.000Z"
      }
    ]
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "선을 긋기",
        "link": "https://www.thestartupbible.com/2025/03/where-to-draw-the-line.html",
        "pubDate": "Wed, 19 Mar 2025 21:33:00 +0000",
        "content:encodedSnippet": "이 공간을 통해서도 과거에 몇 번 글을 쓴 적이 있는데, 내가 2012년에 스트롱을 시작하고 첫 2년 동안 투자자로서 가장 스트레스를 많이 받았던 건, 우리가 투자한 회사의 창업가보다 내가 그 사업에 대해서 더 많이 알고, 내가 그 사업을 하면 더 잘할 수 있을 것 같은데, 대표가 항상 내 생각과 말과 다르게 생각하고 행동할 때였다. 아마도 이걸 보면 공감하는 투자자들이 꽤 있을 것이다.\n예를 들면, B2C를 해야 하는데 B2B를 하고 있거나, 아주 좁고 깊게 시장을 공략해야 하는데 넓고 얕게 공략하거나, 싸게 많이 팔아야 하는데 비싸게 적게 팔고 있거나, 뭐, 이런 것부터, 제품을 만드는 방법, 펀딩 전략, 채용 전략 등과 같은 중, 장기적인 회사의 방향에 대해서 하나부터 열까지 내가 동의하지 못하는 경우가 지금도 많지만, VC 초창기 시절에는 투자하는 회사마다 이런 갈등이 있었다. 지금 생각해 보면, 그땐 나는 VC가 아니라 VC 흉내를 내는 거였는데, 하루 종일 일하고 집에 와서 침대에 누우면, 엄청난 고민과 스트레스 때문에 잠을 설쳤는데, “왜 저분은 사업을 저렇게 할까? 내가 하면 훨씬 더 잘할 수 있을 것 같은데 왜 내 말을 안 들을까?”와 같은 생각을 하면서 참 괴로웠다.\n그런데, 더 많은 회사에 투자하고, 훨씬 더 많은 창업가들을 만나면서 이 부분에 대한 생각이 완전히 바뀌었다. 그리고 다행히도, 점점 더 시간이 지나면서 내가 VC 초창기에 스트레스받았던 이런 고민이 쓸데없고, 시간이 지나면서 내가 완전히 틀렸다는 게 점점 더 증명되고 있어서 다행이다.\n시간이 지나면서 우리가 과거에 투자한 회사들의 실적과 결과가 조금씩 명확해지고 있는데, 잘되고 있는 회사들은 실은 내가 주장했던 이 회사들이 가야 하는 방향과 취해야 하는 전략과는 완전히 다른 방법으로 사업을 하는 회사들이 훨씬 더 많다. 즉, 내가 창업가들에게 “사업은 이렇게 해야 한다.”라고 훈수했던 내용과 완전히 다른, 창업가들이 주장한 방식으로 사업한 회사들이 잘 되고 있다. 내가 주장했던 방식으로 사업을 했다면, 아마도 망했을 것이다. 이와 반대로, 내가 너무 세게 주장해서, 내 말을 듣고 본인의 의지와는 다르게 사업했던 창업가들은 지금은 회사가 망했거나 잘 못 하고 있다. 나 때문에 사업이 잘 안됐다고 할 것까진 아니지만, 그래도 이분들이 내 말은 무시하고, 본인이 생각하는 대로만 사업을 했다면, 어쩌면 더 잘 할텐데라는 생각을 요새 가끔 한다.\n내가 맞을 확률보단, 틀릴 확률이 훨씬 높다는 걸 직접 몸으로 체험하면서 요새 나는 내가 창업가들보다 사업을 더 잘 한다는 틀린 믿음으로 인한 고민을 잘 안 하고, 스트레스도 거의 안 받는다. 이건 생각해 보면 너무 당연한 건데, 나는 VC 초반에는 정말 아마추어 같은 생각을 했던 것 같다. 나 같이 수백 개 회사에 투자해서 한 회사에 대해 진지하게 고민하고 생각하는 시간이 짧고 얕은 초기 VC가 어떻게 1년 365일, 하루 24시간 한가지 사업과 제품에 대해서만 고민하는 창업가보다 그 사업을 더 잘 알거나, 잘할 수가 있겠는가? 솔직히 과거에 내가 몇몇 대표님들에게 “나 같으면 그렇게 안 할 것 같은데요” , “그 사업은 이렇게 해야죠” 등의 발언을 했던 걸 생각해 보면 얼굴이 약간 화끈거린다.\n그래서 어느 순간부터 나는 선을 명확하게 긋기 시작했다. 나는 사업을 운영하는 사람이 아니라 그 사업을 운영하는 믿을만한 창업가들에게 투자하고 이들을 응원하는 사람이라는 선을. 흑백논리로 따져보면 이건 네 사업이지, 내 사업이 아니라는 사고다. 그리고 이렇게 선을 명확하게 그으니까 긍정적인 일들이 생기고 있다. 일단, 내 스트레스 관리 차원에서 너무 좋다. 투자한 회사 대표가 사업을 잘 못 해도, 내가 할 수 있는 건 많이 없다고 명확하게 구분하니까 스트레스를 잘 안 받는다. 그리고, 내가 창업가들보다 사업을 못하는 게 명백하기 때문에, 내가 하는 이야기를 그들이 듣지 않아도 스트레스가 없다. 이런 생각으로 창업가들을 대하다 보니, 서로 웃는 얼굴로 할 말을 편안하게 할 수 있고, professional 한 관계가 오래 유지되는 걸 요새 직접 경험하고 있다.\n주주총회나 이사회에 가보면, 아직도 내가 투자한 회사의 대표보다 내가 사업을 더 잘할 수 있고, 시장을 더 잘 알고, 제품을 더 잘 만들 수 있다고 생각하는 VC가 있는데, 이들에게 같은 조언을 드리고 싶다. 투자자와 창업가 사이에는 명확한 선이 있고, 그 선을 되도록 넘지 않길 바란다. 왜냐하면, VC가 창업가보다 사업을 더 잘 알고, 잘할 수 있다는 생각은 100% 착각이기 때문이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/03/where-to-draw-the-line.html#respond",
        "content": "이 공간을 통해서도 과거에 몇 번 글을 쓴 적이 있는데, 내가 2012년에 스트롱을 시작하고 첫 2년 동안 투자자로서 가장 스트레스를 많이 받았던 건, 우리가 투자한 회사의 창업가보다 내가 그 사업에 대해서 더 많이 알고, 내가 그 사업을 하면 더 잘할 수 있을 것 같은데, 대표가 항상 내 생각과 말과 다르게 생각하고 행동할 때였다. 아마도 이걸(...)",
        "contentSnippet": "이 공간을 통해서도 과거에 몇 번 글을 쓴 적이 있는데, 내가 2012년에 스트롱을 시작하고 첫 2년 동안 투자자로서 가장 스트레스를 많이 받았던 건, 우리가 투자한 회사의 창업가보다 내가 그 사업에 대해서 더 많이 알고, 내가 그 사업을 하면 더 잘할 수 있을 것 같은데, 대표가 항상 내 생각과 말과 다르게 생각하고 행동할 때였다. 아마도 이걸(...)",
        "guid": "https://www.thestartupbible.com/?p=9400",
        "categories": [
          "Uncategorized",
          "inspiring",
          "people",
          "Strong",
          "vc"
        ],
        "isoDate": "2025-03-19T21:33:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "소프트웨어는 방법을 찾는다",
        "link": "https://www.thestartupbible.com/2025/03/software-will-find-a-way.html",
        "pubDate": "Sun, 16 Mar 2025 21:22:00 +0000",
        "content:encodedSnippet": "2월 26일 엔비디아가 4Q 실적 발표를 했다. 이렇게 큰 회사가 아직도 이렇게 빠르게 성장하면서 AI 시장을 장악하는 동시에 스스로 시장을 만들어가고 있다는 점에서 대단하다고 생각했다. 이때 나는 출장 중이었는데, 호텔에서 CNBC의 실적 발표 후 젠승황과의 인터뷰를 봤다. 여러 가지 재미있는 내용, 젠슨황의 자신감, AI가 가져올 큰 변화 등이 그대로 느껴지는 인터뷰 내용이었다.\n젠슨은 일도 잘하고, 영어도 완전히 미국인처럼 유창하게 하고, 자기 관리도 철저해서 언론에 나오면 항상 보기도 좋고 듣기도 좋은 CEO라고 생각한다. 그와의 인터뷰는 항상 배울 점이 많다고 생각하는데, 이 인터뷰에서 가장 기억에 남는 이런 의미심장한 말을 했다.\n“소프트웨어는 알아서 방법을 찾는다(software finds a way)”\n대충 무슨 말인진 모두 다 알 것이다. 엔비디아 하면 대부분의 사람이 GPU 칩을 만드는 하드웨어 회사라고 생각하는데, 실제로 엔비디아는 소프트웨어 회사라고 하는 게 더 정확한 설명이다. 이들은 사람들이 별로 관심을 두지 않을 때, 일찍이 GPU를 만들기 시작했고, 남들보다 너무 일찍 시작했기 때문에 지난 30년 동안 GPU 하드웨어에 대한 독보적인 경험과 노하우를 축적했다. 실은, 이 하드웨어 경험만으로도 따라잡기 힘들 텐데, 여기에 세계 최고의 소프트웨어 실력도 그동안 연마할 수 있었다. 결국엔 하드웨어를 잘 구동 시켜서 같은 환경에서 더 높은 성능을 뽑기 위해선 소프트웨어가 더 중요하다는 걸 그동안 배웠기 때문에, 내가 여기저기서 듣기로는, 엔비디아의 높은 기업가치는 하드웨어보단 이런 소프트웨어 실력 덕분인 것 같다.\n하드웨어는 한 번 만들면 고치기 힘들고, 그 구조 자체가 경직되어 있어서 유연성과는 거리가 멀다. 반면에, 소프트웨어는 추가 비용 없이 초기 버전을 얼마든지 수정하면서 비약적인 개선이 가능하다. 유연한 소프트웨어는 물과 같이 흐르면서, 물리적으로 제한된 하드웨어, 나라마다 다른 산업적 규제, 그리고 계속 변화하는 세상 속에서 기술을 진화시키고 최적화하면서 지금, 이 시점에 우리에게 가장 필요한 제품을 만들 수 있는 방향으로 제자리를 항상 찾아간다.\n그런데, 젠슨의 이 말을 조금 더 깊게 들어가서 해석해 본다면, 아마도 이분은 항상 방법을 찾는 소프트웨어를 찬양한 게 아니라, 이 소프트웨어를 직접 만드는 엔지니어들을 찬양하기 위해서 이 말을 한 게 아니었을까 생각한다.\n우리 투자사 창업가분들과 오랫동안 같이 일하다 보면, 항상 많은 걸 배우면서 느끼는데, 역시 가장 놀라운 건 이들의 생존력과 적응력이다. 아무리 상황이 좋지 않아도, 이들은 절대로 망하지 않고, 어떻게든 사업을 지속하기 위한 방법을 알아서 찾는다. 내가 이런 분들을 보고 바퀴벌레 같다는 존경의 비유를 자주 하는데, 절대로 빠져나갈 수 없는 공간에 바퀴벌레를 가두어도 결국엔 방법을 찾아서 탈출하는 상황과 비슷하다. 큰 위기에 봉착해서 더 이상 길이 안 보이는데, 우리의 창업가들은 무조건 방법을 찾는다.\n이런 사람들이 만든 소프트웨어는 젠슨이 말 한대로, 불가능을 가능케 할 것이고, 길이 없는 곳에서 길을 만들 것이다. 나는 젠슨의 인터뷰를 보면서, 이분이 엔비디아의 뛰어난 소프트웨어를 칭찬하는 게 아니라, 실제로는 뛰어난 엔지니어들을 찬양한다는 느낌을 강하게 받았다.\n알아서 방법을 찾는 사람들은 엔비디아의 소프트웨어 엔지니어만 있는 게 아니다. 우리가 매일 만나고 투자하는 창업가들이야말로 항상 알아서 방법을 찾는 사람들이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/03/software-will-find-a-way.html#respond",
        "content": "2월 26일 엔비디아가 4Q 실적 발표를 했다. 이렇게 큰 회사가 아직도 이렇게 빠르게 성장하면서 AI 시장을 장악하는 동시에 스스로 시장을 만들어가고 있다는 점에서 대단하다고 생각했다. 이때 나는 출장 중이었는데, 호텔에서 CNBC의 실적 발표 후 젠승황과의 인터뷰를 봤다. 여러 가지 재미있는 내용, 젠슨황의 자신감, AI가 가져올 큰 변화 등이 그대로 느껴지는 인터뷰 내용이었다. 젠슨은 일도 잘하고,(...)",
        "contentSnippet": "2월 26일 엔비디아가 4Q 실적 발표를 했다. 이렇게 큰 회사가 아직도 이렇게 빠르게 성장하면서 AI 시장을 장악하는 동시에 스스로 시장을 만들어가고 있다는 점에서 대단하다고 생각했다. 이때 나는 출장 중이었는데, 호텔에서 CNBC의 실적 발표 후 젠승황과의 인터뷰를 봤다. 여러 가지 재미있는 내용, 젠슨황의 자신감, AI가 가져올 큰 변화 등이 그대로 느껴지는 인터뷰 내용이었다. 젠슨은 일도 잘하고,(...)",
        "guid": "https://www.thestartupbible.com/?p=9395",
        "categories": [
          "Uncategorized",
          "ai",
          "failure",
          "FoundersAtWork",
          "hardware",
          "hustle",
          "people",
          "software",
          "Strong"
        ],
        "isoDate": "2025-03-16T21:22:00.000Z"
      }
    ]
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "나도 모르게 개설되는 계좌, 사전에 차단하기: 비대면 계좌개설 안심차단",
        "link": "https://blog.toss.im/article/money-policies-37",
        "pubDate": "Fri, 21 Mar 2025 03:19:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}보이스피싱 피해 방지를 위한 ‘비대면 계좌개설 안심차단’ 서비스가 3월 12일부터 시행됐어요. 이 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}서비스에 가입하면 한국신용정보원에 정보가 즉시 등록돼 본인이 원하지 않는 수시입출식 계좌가 비대면으로 개설되는 것을 막을 수 있어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}서비스 신청 방법\n1.금융사 직접 방문\n본인이 거래 중인 금융사 영업점을 직접 방문해 신청할 수 있어요. 비대면 계좌개설 안심차단 서비스 신청 이후 신규 계좌 개설이 필요할 경우, 가까운 금융회사 영업점을 방문해 해제 후 즉시 계좌개설을 하면 돼요.\n2.비대면 신청\n은행 및 금융결제원(어카운트 인포) 앱을 통해 신청할 수 있어요.\n서비스 신청 내역 확인 방법\n한국신용정보원이 운영하는 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}본인 신용정보 열람 서비스 홈페이지(www.credit4u.or.kr)에서 언제든 확인할 수 있어요.\n함께 신청하면 좋은 ‘여신거래 안심차단 서비스’\n‘여신거래 안심차단'서비스는 신용대출, 카드론, 신용카드 발급 등 신규 여신거래를 사전에 차단할 수 있는 서비스예요. 여신거래는 금융기관이 고객에게 돈을 빌려주는 거래를 뜻해요. 대출이나 신용카드 발급 등이 해당돼요. 여신거래 안심차단 서비스에 가입하는 즉시, 한국신용정보원에 정보가 등록돼 신규 여신거래가 실시간으로 차단돼요.\n여신거래 안심차단 서비스는 출시 7개월 만에 31만 명이 가입했어요. 60대 이상이 전체 가입자의 53%로 보이스피싱 범죄에 취약한 고령층이 많이 가입했어요.\n여신거래 안심차단 서비스 가입방법이 궁금하다면 아래 버튼을 눌러 확인해 보세요.\n.css-1lvcgm8{padding:22px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border-radius:20px;}\n.css-13ko30i{width:375px;}나도 모르는 불법대출 예방하기\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희",
        "content": "보이스피싱 피해 방지를 위한 서비스예요. ",
        "contentSnippet": "보이스피싱 피해 방지를 위한 서비스예요.",
        "guid": "https://blog.toss.im/article/money-policies-37",
        "isoDate": "2025-03-21T03:19:00.000Z"
      },
      {
        "title": "토스 사내 봉사단 '토스피스', 세계 산림의 날 맞아 우면산 플로깅 진행",
        "link": "https://blog.toss.im/article/plogging",
        "pubDate": "Fri, 21 Mar 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}숲의 소중함과 환경 보호의 중요성을 되새기며 지역 환경 정화 활동 실시\n18L 봉투 30개 분량의 쓰레기 수거… 일상 속 환경 보호 실천 다짐\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)의 사내 봉사단 ‘토스피스(Toss Peace)’가 국제연합(UN)에서 지정한 세계 산림의 날을 맞아 서울 서초구 우면산에서 ‘플로깅(Plogging)’ 활동을 진행했다고 21일 밝혔다. 플로깅은 조깅하며 쓰레기를 줍는 친환경 활동을 뜻한다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n이번 활동은 지난 14일 토스와 토스뱅크, 토스증권 등 계열사 및 관계사 소속 팀원 약 40명이 모여 무장애숲길 입구부터 소망탑 주변까지 등산로를 정화하는 방식으로 진행됐다. 참여자들은 토스 만보기 기준 총 276,519걸음을 걸으며, 18L(리터) 생분해 봉투 30개 분량의 쓰레기를 수거했다.\n\n토스피스의 첫 지역 환경 정화 활동으로 진행된 이번 플로깅은 세계 산림의 날을 맞아 숲의 가치를 되새기고 환경 보호의 중요성을 알리기 위해 마련됐다. 활동을 마친 팀원들은 “작은 노력만으로도 자연을 보호하는 데 기여할 수 있다는 것을 실감했다”, “쓰레기를 줄이고 환경을 위하는 습관을 길러야겠다고 다짐했다” 등의 소감을 전했다. 토스 관계자는 “앞으로 토스피스는 환경 보호 실천 외에도 다양한 활동을 이어갈 계획”이라고 말했다.\n토스피스는 토스 팀원들이 자율적으로 참여하는 사내 봉사단으로 토스의 브랜드명인 토스(Toss)와 평화(Peace)의 합성어다. 2023년 6월 출범 이후, 푸르메재단 산하 ‘푸르메소셜팜’과 중증장애인 시설 ‘한사랑마을’에서 활동한 바 있다.",
        "content": "숲의 소중함과 환경 보호의 중요성을 되새기며 지역 환경 정화 활동 실시",
        "contentSnippet": "숲의 소중함과 환경 보호의 중요성을 되새기며 지역 환경 정화 활동 실시",
        "guid": "https://blog.toss.im/article/plogging",
        "isoDate": "2025-03-21T01:00:00.000Z"
      },
      {
        "title": "어떻게 하면 세금 환급 많이 받을까?",
        "link": "https://blog.toss.im/article/tossmoment-4",
        "pubDate": "Thu, 20 Mar 2025 11:52:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}연말정산이나 종합소득세 신고를 통해 누구는 세금을 돌려받는가 하면, 또 어떤 사람은 추가로 내야 하는 일이 일어나요. 심지어 같은 월급을 받더라도 이런 차이가 생기기도 하죠. 이는 미리 낸 세금과 실제 부담해야 할 세금이 다르기 때문이에요.\n언뜻 들으면 이게 무슨 말인가 싶지만, 나라에서 세금을 어떻게 걷어가는지 조금만 이해하면 세금 환급 구조를 쉽게 이해할 수 있어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}우리는 세금을\n미리 내고 있어요\n우리나라는 납세의 의무가 있어 소득이 있는 대한민국 국민이라면 누구나 세금을 내야 합니다. 하지만 전국에서 동시다발적으로 발생하는 세금을 실시간으로 정확하게 계산하기란 현실적으로 어려운 일이겠죠. \n그래서 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}국세청은 효율적으로 세금을 걷기 위해 원천징수라는 방식을 사용합니다. 원천징수란 소득을 지급하는 쪽에서 소득세, 보험료 등을 포함해 일정 금액을 미리 떼고 세금으로 대신 납부하는 제도예요. 근로자의 세전·세후 월급의 차이가 큰 이유, 프리랜서가 돈을 받을 때 3.3%를 떼고 받는 이유가 바로 이 때문입니다.\n다만, 원천징수는 편의상 추정해 낸 세금이기 때문에 연말정산이나 종합소득세 신고를 통해 납세자가 1년 동안 실제로 부담했어야 할 세금을 정확히 산정하게 됩니다. 이렇게 최종적으로 결정된 세금을 결정세액이라고 하고, 1년간 원천징수로 미리 냈던 세금은 기납부세액이라고 불러요. 이 둘을 비교해 기납부세액이 더 크다면 환급을 받고, 반대로 적다면 세금을 추가로 납부해야 합니다. \n연말정산과 종합소득세 신고는 미리 낸 세금과 실제 부담해야 할 세금을 비교하고 조정하는 과정인 셈이에요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n내야 할 세금은\n이렇게 매겨져요\n소득금액, 과세표준, 산출세액, 결정세액. 이 네 가지만 알면 세금이 산출되는 구조를 쉽게 이해할 수 있어요.\n사람들은 돈을 버는 과정에서 일하는 데 꼭 필요한 비용을 쓰기도 하고, 매달 기본적인 생활비도 부담하며 살아가요. 그래서 나라에서는 일정 금액을 어느 정도 소득에서 빼주는데, 이를 소득공제라고 해요. 소득금액에서 소득공제를 적용한 금액을 과세표준이라고 합니다. 말 그대로 세금이 부과되는 기준이죠. 그리고 과세표준에 소득세율을 곱하면 산출세액이 정해져요.\n산출세액을 계산한 후에는 세액공제를 적용해 일정 금액을 차감합니다. 세액공제는 특정한 소비나 투자를 유도하기 위해 세금 자체를 줄여주는 제도예요. 세액공제까지 반영되면 내야 할 세금이 정해지는데, 이게 바로 결정세액이에요.\n한 문장으로 정리해볼게요. 소득공제로 과세표준을 정한 뒤 산출세액을 계산하고, 세액공제를 적용하면 납세자가 최종적으로 부담할 결정세액이 산출된다. 단계별로 차근차근 살펴보니 복잡하지 않죠?\n\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}과세표준이 높아질수록 세율도 높아지는 이유가 궁금하다면 .css-114ityv{white-space:pre-wrap;cursor:pointer;-webkit-text-decoration:underline!important;text-decoration:underline!important;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}이 아티클을 통해 확인해보세요.\n세금 환급,\n이렇게 하면 잘 받을 수 있어요\n같은 소득을 얻었더라도, 소득공제와 세액공제를 어떻게 활용하느냐에 따라 부과되는 세금은 크게 달라져요. 따라서 세금 환급을 잘 받으려면 소득공제를 활용해 과세표준은 최대한 줄이고, 다양한 세액공제 항목을 적용해 결정세액을 낮추는 게 중요해요.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n✅ 근로소득자라면 연말정산 때 꼭 챙기세요!\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n주요 소득공제 항목: 인적공제, 카드 사용액, 현금영수증 사용액, 주택마련저축액, 전통시장 이용액\n주요 세액공제 항목: 연금저축·IRP 납입액, 기부금, 의료비, 교육비, 월세액\n\n\n✅ 프리랜서·사업자라면 종합소득세 신고할 때 꼭 챙기세요!\n\n주요 소득공제 항목: 필요경비, 인적공제, 주택마련저축액, 노랑우산공제\n주요 세액공제 항목: 연금계좌, 기장세액, 보험료, 의료비, 교육비\n\n\n각 공제 항목은 납세자의 소득 수준에 따라 적용 여부가 달라져요. 연말정산 공제에 대한 자세한 안내는 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}이곳에서, 종합소득세에 안내는 여기에서 확인할 수 있어요. \n세금 환급이 많다고\n꼭 좋은 걸까요?\n세금 환급을 많이 받으면 보너스를 받은 것 처럼 기분은 좋지만, 사실 환급금이 많은 게 꼭 좋은 것만은 아닙니다. 세금을 돌려받았다는 건 그만큼 내가 실제로 내야 할 세금보다 더 냈었다는 뜻이니까요. \n결국, 세금을 많이 낸 뒤 돌려받든, 적게 내고 추가로 납부하든 결과적으로는 같은 돈을 내는 셈이죠. 오히려 처음부터 세금을 덜 냈다면, 그 돈을 투자금으로 활용하거나 예·적금에 넣어 이자를 받을 수도 있었을 겁니다.\n그럼에도 불구하고\n내가 놓친 환급금\n세금 신고 기간이 지나면 작년 세금에 대해서는 다 끝났다고 생각하기 쉬워요. 하지만 그동안 미처 챙기지 못한 세금 환급액이 남아 있을 수도 있습니다. 전문가가 아닌 이상 공제 혜택을 매번 완벽하게 챙기기는 쉽지 않으니까요. 혹시 내가 더 돌려받을 수 있었던 세금을 놓친 건 아닐까 걱정된다면, 토스에서 확인해 보세요.\n토스 앱에서는 지난 5년간 납부한 세금 중 돌려받을 수 있는 금액이 있는지, 있다면 얼마나 받을 수 있는지 쉽게 확인할 수 있어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 조수희 이제현",
        "content": "연말정산과 종합소득세 신고로 세금을 돌려받는 이유 ",
        "contentSnippet": "연말정산과 종합소득세 신고로 세금을 돌려받는 이유",
        "guid": "https://blog.toss.im/article/tossmoment-4",
        "isoDate": "2025-03-20T11:52:00.000Z"
      },
      {
        "title": "토스, 자동차보험 비교추천 서비스 2.0 오픈",
        "link": "https://blog.toss.im/article/carinsurance2",
        "pubDate": "Thu, 20 Mar 2025 02:12:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}보험사와 동일한 보험료 안내\n간단한 본인 인증 절차만으로 내 자동차 정보 불러오기 가능\n놓치지 쉬운 특약 일괄 조회 시스템 도입으로 금융소비자 편익 증대\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 ‘자동차보험 비교추천 서비스 2.0(이하 차 보험 비교하기)’을 시작한다고 20일 밝혔다. 지난해 1월 19일 첫 선을 보인 ‘차 보험 비교하기’를 보다 직관적이고 편리하게 고도화했다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n차 보험 비교하기는 토스에서 보험사 상품을 한눈에 비교하고 추천받을 수 있는 서비스다. 자동차 보험 신규 가입 또는 갱신을 원하는 금융소비자는 복잡한 절차 없이 간편하게 보험료를 확인하고 가입을 진행할 수 있다.\n이번 개선에서 가장 눈에 띄는 변화는 보험사와 동일한 보험료를 확인할 수 있다는 점이다. 자동차 보험은 의무가입 보험으로, 일반적으로 만료 30일 전부터 갱신 안내가 이루어진다. 토스도 동일 시점부터 갱신 대상자가 보험료를 확인할 수 있도록 했다. 즉, 자동차 보험 만기일이 4월 19일인 계약자부터 보험사 플랫폼과 같은 금액을 조회할 수 있다.\n기존에는 소비자가 자동차 모델, 보험 시작일, 예상 주행 거리 등을 직접 입력해야 했으나, 개선된 서비스에서는 이름과 주민등록번호 등 간단한 정보만 입력하면 본인이 소유한 자동차 모델, 보험 가입 만기일 등 정보를 자동으로 불러올 수 있다.\n또한, 걸음 수나 대중교통 이용 내역을 기반 등으로 추가 할인이 적용된 특약도 토스에서 별도 절차 없이 확인할 수 있다. 관련 데이터를 자동으로 연동해 이용자가 직접 정보를 입력하지 않아도 최종 금액을 안내받을 수 있도록 검증 시스템을 개선했기 때문이다. 과거에는 보험사 홈페이지에서 수동으로 입력해야 했기 때문에 혜택을 온전히 받기 어려웠던 불편함도 해결했다.\n토스와 제휴한 보험사는 총 10개로, ▲삼성화재다이렉트보험 ▲DB손해보험 ▲현대해상다이렉트보험 ▲KB손해보험 ▲메리츠화재보험 ▲캐롯손해보험 ▲AXA다이렉트보험 ▲하나손해보험 ▲흥국화재보험 ▲롯데손해보험(4/1입점)이 있다.\n이 서비스는 토스 앱 > 전체 탭 > 자동차 > ‘차 보험 비교하기’ 또는 토스 앱 > 검색(돋보기) > ‘차 보험 비교하기’ 로 이용 가능하다.\n토스 관계자는 “이용자가 보다 쉽고 정확하게 자동차 보험을 비교하고 선택할 수 있도록 서비스를 개선했다”며 “앞으로도 사용자 편익을 극대화할 수 있도록 자동차 금융 서비스를 지속적으로 혁신해 나아갈 것”이라고 말했다.",
        "content": "보험사와 동일한 보험료 안내",
        "contentSnippet": "보험사와 동일한 보험료 안내",
        "guid": "https://blog.toss.im/article/carinsurance2",
        "isoDate": "2025-03-20T02:12:00.000Z"
      },
      {
        "title": "토스플레이스, 사장님 고객 확보 비법 전수…무료 웨비나 성료",
        "link": "https://blog.toss.im/article/Tossplacewebinar",
        "pubDate": "Thu, 20 Mar 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}지난 19일 열린 ‘비즈니스 스쿨’ 1회, 손님 유치 실전 전략 강연 제공\n예비 창업자 및 초기 창업자의 뜨거운 호응으로 만족도 4.5점 기록\n“앞으로도 소상공인과의 동반 성장 위해 다양한 프로그램 개최할 것”\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 결제 단말기 및 포스(POS) 솔루션 공급 자회사 토스플레이스(대표 최재호)가 제 1회 비즈니스 스쿨 웨비나를 성공적으로 마쳤다고 20일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n지난 19일 열린 비즈니스 스쿨은 도움이 필요한 예비 창업자와 초기 창업자에게 고객 유치 전략에 대한 실전 강연을 제공하는 자리였다. 신규 고객 확보와 SNS 홍보 비법, 단골 유치 및 운영 방법 등 현실적인 고민을 덜어주고 전문가의 노하우를 전수해주고자 온라인 무료 강의를 열었다.\n1부는 창업을 준비 중인 예비 창업자를 위해 브레멘 F&B 김찬우 대표가 연사로 나섰다. 동네 장사에서 시작해 연매출 50억 원을 달성한 그는 신규 고객을 사로잡는 방법과 SNS 마케팅 꿀팁을 제공했다. 2부는 토스플레이스 김민주 프로젝트 매니저(PM)가 단골은 늘리고 비용은 줄이는 대박집들의 매장 운영법을 전달했다.\n강연 신청을 받기 시작함과 동시에 3,000명 이상의 신청자가 몰려 드는 등 처음 열린 웨비나임에도 반응이 뜨거웠다. 유튜브 라이브가 진행되는 오후 3시부터 5시까지 2시간 동안 오픈 초기 추천 이벤트, 인플루언서 협업 노하우, 직원 관리 노하우 등 실질적으로 매장 운영 시 궁금했던 질문들이 쏟아졌다.\n특히 토스플레이스가 직접 운영하는 카페 ‘심플리시티’를 통해 얻은 고객 재방문 노하우를 가감없이 나눠 좋았다는 댓글도 있었다. 강연이 끝난 후 진행한 만족도 조사 또한 4.5점(5점 만점 기준)을 기록하며 창업자의 고민을 해결하는 데 큰 도움을 준 것으로 나타났다. 해당 강연은 다시보기를 통해 언제든 재시청 가능하다.\n토스플레이스는 앞으로도 정기적인 비즈니스 스쿨 강연을 개최하는 등 창업에 어려움을 겪고 있는 소상공인과의 동반 성장을 위해 긴밀한 협력을 이어갈 예정이다.\n토스플레이스 신중희 사업총괄은 \"이번 비즈니스 스쿨 웨비나를 통해 고객 확보에 어려움을 겪는 사장님들께 도움을 드릴 수 있어 기쁘다”며 “앞으로도 다양한 맞춤형 프로그램을 통해 소상공인의 성장을 지원하고자 한다\"고 말했다.",
        "content": "손님 유치 실전 전략 강연 제공으로 만족도 4.5점 기록",
        "contentSnippet": "손님 유치 실전 전략 강연 제공으로 만족도 4.5점 기록",
        "guid": "https://blog.toss.im/article/Tossplacewebinar",
        "isoDate": "2025-03-20T01:00:00.000Z"
      },
      {
        "title": "원금을 3배 이상 불려주는 내일채움공제 3년형",
        "link": "https://blog.toss.im/article/money-policies-36",
        "pubDate": "Mon, 17 Mar 2025 00:23:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}내일채움공제란?\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}중소·중견기업 근로자의 장기 재직과 자산 형성을 지원하기 위한 정책금융 상품이에요. 중소·중견기업 근로자가 일정 기간 납부금을 적립하면, 기업의 지원금이 더해져 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}만기 시 원금의 세 배가 넘는 환급금을 돌려받을 수 있어요. 이번에 출시된 신규 ‘내일채움공제’는 최소 가입기간이 5년에서 3년으로 축소됐어요.\n\n월 10만 원씩 넣으면 3년 뒤 1,224만 원이 돼요\n내일채움공제는 근로자와 기업이 1:2 이상의 비율로 금액을 납부하게 돼요. 월 10만 원씩을 납부한 근로자는 원금 360만 원에 기업 지원금 864만 원(24만 원×36개월)을 더한 1,224만 원을 돌려받을 수 있어요.\n복리 이자 수익까지 더하면 최종 금액은 1,277만 원(세전, 변동 가능)으로 불어나요. 재직자 입장에선 360만 원을 내고 세 배가 넘는 목돈을 환급받을 수 있으니 연이율로 따지면 100%를 넘는 초고금리 상품인 셈이에요.\n가입 대상 및 조건\n중소기업 및 중견기업에 재직자를 대상으로 해요. 근로자의 경우 기간제 및 단시간 근로자가 아니어야 해요. \n다만 임신 및 육아, 가족 돌봄 등을 이유로 근로시간을 단축한 경우라면 가입이 가능해요. 만 34세 이하만 가입할 수 있었던 청년내일채움공제(2024년 폐지)와 달리 별도의 나이 제한은 없어요.\n가입 기간\n최소 3년 ~ 10년\n가입 방법\n내일채움공제는 근로자와 기업이 모두 신청해야 이용할 수 있는 상품이에요. 중소벤처기업진흥공단 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}내일채움공제 홈페이지(www.sbcplan.or.kr)에서 기업과 근로자 모두 회원가입 후 신청할 수 있어요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n내일채움공제 관련 자주묻는 질문\nQ. 중소·중견기업 사업주와 재직자가 매월 납입하는 금액은 고정인가요?\n가입할 때 사업주와 재직자가 각각 나눠서 낼 금액을 정해요. 월 최소 34만 원부터 300만 원까지 가능해요. 가입 기간 중에도 납입 금액을 조정할 수 있어요. 변경은 내일채움공제 누리집이나 관할지역본(지)부 담당자를 통해 신청할 수 있어요.\nQ. 가입 기간을 중간에 연장할 수도 있는지 궁금해요.\n1년 단위로 연장이 가능해요. 다만 기간을 줄이는 건 불가하니 처음 가입 시 가입 기간을 신중히 선택해주세요.\nQ. 원하는 날짜에 납입하면 되나요? 정해진 날짜가 있나요?\n매월 지정일(5·15·25일 중 선택)에 자동이체 방식으로 납입금을 낼 수 있어요. 다만 최초 가입 후 1회차 납입은 지정일과 상관없이 청약이 승인된 날로부터 3영업일에 이뤄져요.\nQ. 이체 예정일에 돈을 내지 못하면 어떡하죠?\n자동이체 지정일에 내지 못한 공제부금은 다음 납부일까지 총 2회에 한해 자동이체 방식으로 수납돼요. 예를 들어 매월 15일이 납부일인데 이날 내지 못했다면 다음달 15일이 돌아오기 전 25일과 5일, 두 차례에 걸쳐 자동이체돼요. 만일 25일에 전액 납입하면 익월 5일에는 수납이 되지 않으니 안심하세요.\n다만 익월 5일까지도 납입이 이뤄지지 않으면 해당 월은 내지 않은 것으로 처리돼요. 미납금은 홈페이지를 통해 납부 신청을 할 수 있어요. 이외 별도 납입을 원할 경우에는 고객센터(1588-6259) 또는 지역본(지)부로 문의해주세요. 기업 또는 재직자가 6개월 이상 공제부금을 내지 못할 경우에는 공제계약이 끝날 수 있으니 주의해야 해요.\nQ. 납입금을 미리 내거나 납부를 미루는 것도 가능한가요?\n둘 다 가능해요. 최소 1개월분 이상부터 잔여 계약 기간 내 총 납입금까지 미리 내는 것이 가능합니다. 재직자가 가입 기간 동안 병역의무를 이행하거나 육아휴직에 돌입한 경우 근로를 제공할 수 없기 때문에 해당 기간 동안은 납부가 유예돼요. 질병·상해로 입원하거나 회사 사정으로 일할 수 없는 경우에도 최대 6개월간 납부를 미룰 수 있어요. 재직자에게 일시적으로 납입금을 내지 못할 만한 경제적 사정이 생겼을 때도 12개월 동안 납부 유예가 가능해요.\nQ. 참여 기업에는 어떤 혜택이 있나요?\n참여 기업은 최소 3년 이상 일할 수 있는 근로자를 선발, 업무의 연속성을 확보할 수 있어요. 세금 혜택도 무시할 수 없어요. 기업 납입금 전액을 비용으로 인정받을 수 있고 연구인력개발비 세액공제 혜택도 적용받을 수 있어요. 중진공 지원 사업 평가·선정 시 우대 혜택도 받을 수 있죠.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희 윤자영",
        "content": "월 10만 원씩 넣으면 3년 뒤 1,224만 원이 돼요.",
        "contentSnippet": "월 10만 원씩 넣으면 3년 뒤 1,224만 원이 돼요.",
        "guid": "https://blog.toss.im/article/money-policies-36",
        "isoDate": "2025-03-17T00:23:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]