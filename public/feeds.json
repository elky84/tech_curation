[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": [
      {
        "creator": "리승환",
        "title": "25년 CRM 외길 인생, 커스토머인사이트 임도영 전무 인터뷰",
        "link": "https://ppss.kr/archives/267563",
        "pubDate": "Sat, 19 Oct 2024 04:48:37 +0000",
        "content:encodedSnippet": "CRM의 진가를 발휘하려면 온/오프라인 행동과 레거시 데이터를 통합해서 활용해야\n이승환: 자기소개를 부탁드립니다.\n임도영: 커스토머인사이트 임도영 전무입니다. 데이터 기반 CRM을 20년 이상 하고 있습니다. 주 고객으로는 한국인삼공사, 로레알코리아, 롯데하이마트 및 롯데 계열사 다수, 라코스테코리아 등이 있습니다.\n마음씨 좋은 동네 아저씨 인상\n이승환: CRM을 제대로 하면 보통 어느 정도 매출이 늘어나나요?\n임도영: 어느 마케팅이나 그렇듯, 산업이나 기업마다 차이가 큽니다. 그래도 평균을 보면 보통 15~20% 정도 매출이 늘어납니다.\n이승환: 요즘 CRM 이야기 많던데 뭐가 다른가요?\n임도영: 주로 e커머스에서 사용하는 SaaS CRM 프로그램은 쇼핑몰에 태그를 삽입하는 것에서 시작합니다. 이후 고객의 행동을 체크하고, 이벤트를 제시해주지요. 예로 이 고객이 살펴본 옷이 여행용 폴로셔츠면 이와 유사한 옷을 추천하자… 하지만 이 고객이 과거에 어떤 행동을 해왔었는지, 또 무엇을 구매했는지를 살피지는 않죠.\n요즘 유행하는 SaaS류 SW는 ‘설치 이전’의 데이터는 활용할 수 없다는 한계도 있다. 작은 커머스는 상관없지만 대기업은 기존 레거시 데이터를 놓치기 너무 아깝다\n이승환: 데이터가 있어야 살피지 않겠습니까?\n임도영: 네. 그런데 저희는 기존 데이터를 분석하는 것에서 시작합니다. 롱텀 CRM이라 할까요? 주로 대기업이나 글로벌 기업 일을 맡는데, 거기에는 기업 내부에 고객 DB가 있습니다. 그 데이터부터 훨씬 딥하게 들어가는 거죠. 이 사람이 몇 년 전 어떤 제품을 언제 구매했는지, 상담이나 AS 이력이 있는지 등등을 하나하나 따지고 현재는 어떤 제품에 관심을 갖고 온라인 행동을 하는지 함께 분석합니다. 그러니 좀 더 정확한 추천과 고객 관리가 가능합니다.\n이승환: 오, 빡세네요…\n임도영: 네. 그리고 온라인 뿐 아니라 오프라인 데이터도 통합합니다. 한국이 e커머스가 엄청나게 잘 된 나라이긴 한데, 그래도 오프라인 매출이 여전히 절반 이상을 차지합니다. 여기에 축적된 과거 데이터의 의미가 굉장히 크거든요.\nCRM은 온라인과 오프라인이 합쳐질 때 훨씬 파워풀해진다\n \n온라인뿐 아니라 오프라인 데이터도 함께 활용하는 CRM\n이승환: 오프라인까지요? 예시를 들어주실 수 있을까요?\n임도영: 지금 고객사인 하이마트를 예로 들면, 자사몰인 하이마트 몰, 하이마트 앱도 있어요. 동시에 전국에 300개가 넘는 매장이 있죠. 하이마트 연 매출이 3조가 넘는데, 이 중 오프라인에서 90% 이상 구매가 일어납니다. 그런데 자사몰 데이터만 봐서 되겠어요? 온오프라인 데이터를 통합해야겠죠. 수천만 명이 넘는 고객을 ID별로 통합 데이터 웨어하우스(DW)라는 전문 분석 솔루션에 저장하고 분석합니다.\n데이터 웨어하우스, 데이터를 가지고 뽑아낼 수 있는 건 모두 뽑아낸다고 보면 된다\n이승환: 오프라인은 온라인만큼 행동 수집이 힘들지 않나요? 어떤 걸 수집하세요?\n임도영: 맞습니다. 대신 그만큼 가치가 높은 이력이죠. 구매, 상담, AS 이런 정보들은 아주 결정적이거든요. 10년 이상의 오프라인 데이터를 기반으로, 온라인 자사몰에서 고객들의 다양한 행동, 어떤 제품에 관심을 가졌고 찜했고 상품 별점 몇 개 줬고… 이런 온라인 정보가 더해지면, 정밀한 고객 분석과 추천이 가능합니다.\n이승환: 그 데이터들은 어떻게 활용하나요?\n임도영: 예로 A라는 사람이 매장에 와서 냉장고 상담을 받아요. 그러면 태블릿으로 고객 데이터를 불러오겠죠. 어? 10년 전 매장에서 냉장고를 산 기록이 있네? 그때 신혼부부였나, 더 큰 집으로 이사할 때였나, 아이가 초등학교에 들어갈 때였나, 이런 과거의 구매 이력을 가지고 있으면, 더욱 정밀하고 세분화한 추천이 가능해요. 마찬가지로 온라인에서도 ID를 매칭시켜 이런 추천이 가능하고요.\n삶의 궤적에 따라 제품을 추천 경우 고객 가치는 더욱 높아진다 / 출처: Webngage\n이승환: 오… 신박하네요.\n임도영: 네. 그래서 온오프 통합 CRM이 강력한 거고요. 우리는 리얼 CRM이라고도 합니다. 온라인에 보이지 않는 바닥에 있는 데이터의 힘이죠.\n \n고객 분류와 행동 분석을 정밀하게 반복한다\n이승환: 하이마트 외에도, CRM을 활용한 또 다른 예를 들어주실 수 있을까요?\n임도영: 디지털 마케팅으로 유명한 나이키도 저희 고객사였는데요. 기본적으로는 고객의 제품 탐색만으로도 구매율을 높일 수 있어요. 예로 여성들은 제품을 바로 구매하는 경우는 드물어요. 4~5번 봐야 구매 전환되는 경우가 많죠. 그래서 제품을 3번 본 고객에게 팝업을 띄웁니다. 하지만 이건 기본이고, 찜이나 장바구니 담기, 이런 온라인에서의 액션에 더해 ‘고객 라이프스타일’ 포지셔닝을 대입하면 훨씬 더 구매전환율을 높일 수 있어요.\n이승환: 고객 라이프스타일은 뭐죠? 연령이나 성별 같은 건가요?\n임도영: 연령과 성별은 매우 중요하지만, 대부분 사람들은 여기에 딱 맞게 행동하지는 않습니다. 같은 나이라도 소비 패턴은 완전히 다르잖아요? 4사분면으로 단순한 예를 들어 볼게요. 위와 아래는 고객의 가격민감도, 할인에 얼마나 민감한지를 뜻합니다. 예로 가격은 전혀 신경 쓰지 않는 고객층 있잖아요? 이분들은 특정 브랜드 매니아입니다. 일단 신제품 나오면 사는 거죠.\n굉장히 다양한 팩터를 복합적으로 사용해 고객 맞춤형 CRM을 강화한다\n이승환: 오, 신기하네요. 또 어떤 고객 분류가 있나요?\n임도영: 기능성 제품만 찾는 사람에게 디자인 예쁜 신제품 들이민다고 사지 않겠죠. 또 할인에 민감한 분들은 보통 젊은 분들인데, 이분들에게 할인 없는 비싼 신제품 소개해봐야 안 살테니, 할인 쿠폰으로 구매를 유도해야겠죠. 이런 식으로 고객 한분한분의 구매 이력, 웹사이트 행동 이력, 프로파일 등 여러 정보를 가지고 고객 세그먼트를 한 50개 만들었고, 이런 개인화 마케팅 덕에 당시 나이키 자사몰 매출이 확 높아졌죠.\n이승환: 와… 엄청 빡센 걸 하시는군요. 근데 브랜드, 카테고리, 제품마다 다 좀 다르지 않나요?\n임도영: 맞습니다. 저희가 로레알을 오래 했는데, 로레알 산하에 여러 브랜드가 있잖아요? 이 중 랑콤은 로열티와 연령대가 있는 브랜드예요. 재구매나 지속 구매가 잘 이뤄집니다. 이분들 중에는 아직까지 백화점이 메인인 분들도 많아서, 오히려 온라인으로 접점을 만들어드리는 게 중요합니다. 반면 키엘이나 YSL은 좀 젊은 고객들이 좀 많이 이용합니다. 이분들은 스팟성 할인을 통해 제품을 구매하는 경우가 많아요. 이분들의 경우 브랜드 로열티를 어떻게 높일지가 관건입니다.\n로열티를 높이기 위해서는 다양한 세분화가 필수다\n이승환: 어떻게 브랜드 로열티를 올릴 수 있죠?\n임도영: 사실 ‘구매’라는 행위만큼 로열티를 올리는 건 없습니다. ‘구매한 제품’ 데이터에 근거해, 어떤 제품을 쓸 가능성이 높을지 찾아보고 때에 맞춰 추천합니다. 그러다 1개를 더 사면 훨씬 수월해져요. ‘2의 법칙’이라고 보통 첫 구매자가 이탈하는 비중은 평균 60~70% 정도입니다. 그런데 두 번을 샀다. 그러면 반대로 또 구매할 확률이 60~70%로 올라요. 그렇기 때문에 브랜드와 고객에 맞게 2차 구매, 3차 구매를 유도시키기 위한 마케팅 프로그램들을 데이터 기반으로 설계하는 거죠.\n온갖 팩터를 다 활용해서 구매와 재구매율을 높인다\n☞ 커스토머인사이트 홈페이지 바로가기\n \n컨설팅, 운영, 심지어 파견까지 모두 해주는 커스토머인사이트\n이승환: 그런데 보통 SaaS CRM 업체들은 SW를 설치하고 끝이잖아요? 커스토머인사이트는 컨설팅을 하는 건가요?\n임도영: 컨설팅도 하고 직접 운영하는 경우도 있습니다. 보통의 SaaS 업체들은 솔루션을 판매한다면, 저희는 컨설팅 뿐 아니라 시스템 구축, 실제 운영까지 해드리는 거죠. 실제 직원들이 투입돼서 일하는 겁니다. 필요에 따라서는 파견도 나가요. 자사 데이터를 외부 유출하기 힘든 경우도 있으니까요.\n이승환: 컨설팅과 운영은 어떻게 다른가요?\n임도영: 신세계인터내셔날 같은 회사는 CRM 전체 전략 컨설팅을 진행한 적이 있어요. 마케팅 전략을 짜고, 업무 프로세스도 설계하죠. 요즘은 AI를 활용한 ‘미래 예측 모델’도 만들고 있습니다. 지금 뭘 어떻게 해야 어떤 제품이 잘 팔릴 거야, 이걸 넘어서 미래에 어떤 제품군을 메인으로 내놓거나 어떤 고객에 집중해야 할지, 이런 걸 예측하는 거죠.\n이 중 일부만 실행하는 게 아니라 전체를 다 해준다, 보안 등이 필요할 경우 고객사에 파견까지 가능하다\n이승환: 운영은 아예 A to Z를 다 해주는 건가요?\n임도영: 네. 저희가 아예 내부에 들어가서 데이터를 하나하나 분석하고 결과를 도출해 실행까지 해드립니다. 운영은 아무래도 외국계 클라이언트가 많아요. 로레알이나 엘카는 저희와 10년 이상 함께 하며 성장하고 있지요. 아무래도 국내 대기업들은 내부 인하우스에 인력을 채용하는 경우가 많은데, 외국계 회사들은 전문인력 확보에 어려움을 겪는 경우가 많다 보니 저희가 파트너로 많이 함께하게 됐죠.\n이승환: 운영은 주로 어떤 식으로 이뤄지나요?\n임도영: 회의를 통해 매주/매월 지표 관리를 하죠. 지난 주에 어떤 고객들이 어떤 채널로 유입됐는지, 이들이 어떤 부분에서 많은 매출이 일어났는지, 쿠폰은 누가 많이 사용했고, 신상품에 반응한 사람은 누구이고 등을 분석하고 이에 필요한 대응 전략을 마련합니다.\n캠페인 유형별 계\n \n세일즈포스, 애피어 등 고객사에 딱 맞는 툴을 추천하고 설치해 준다\n이승환: 그러면 그 데이터를 활용하는 툴은 주로 무엇인가요?\n임도영: 아무래도 대기업, 글로벌 기업이 주 클라이언트이다 보니 세일즈포스를 가장 많이 씁니다. 그 이유로 우선 이들은 글로벌 본사에서 기본적으로 세일즈포스를 사용한 지 오래됐어요. 본사에서 쓰던 걸 그대로 쓰는 경우가 많죠. 데이터 사이즈가 커지고 마케팅과 서비스, 데이터 분석 업무가 통합적으로 운영되면서 그 니즈에 맞도록 세일즈포스가 우선적으로 진화되었다고 생각됩니다. 마지막으로 저희를 비롯한 여러 업체들이 기술 지원까지도 잘해줘서 안정성이 높습니다.\n이승환: 여러모로 가장 좋은 솔루션이란 거군요.\n임도영: 네, 세일즈포스만큼 온갖 기능을 수행 가능한 컴포넌트를 가지고 있는 솔루션이 없어요. 하나의 생태계인 거죠. 이제 편의성도 높아졌어요. 예전에는 세일즈포스를 잘 쓰려면 SQL이나 프로그래밍이 필수였는데요. 요즘은 세일즈포스도 노코드로 이것저것 가능해요. 세일즈포스가 인수한 태블로(Tableau)나 슬랙(Slack)이 그 예인데요. 슬랙에 “작년 매출 보여줘”라고 하면, 바로 태블로를 활용해 막대그래프를 도출해 내는 식이죠.\n커스토머인사이트는 다양한 툴 활용이 가능하도록 조직이 세팅돼 있다\n이승환: 와, 개쩌네여…\n임도영: 그렇습니다. 그래서 아직까지는 회사가 커지다 보면 다 세일즈포스로 갈 수밖에 없습니다. 그래서 지금도 빠르게 성장 중이죠. 개인적으로 세일즈포스 CRM 전문가가 되지 말고 세일즈포스 주식을 살 걸 하며 후회할 때가 있습니다(…) 대신 그만큼 비용도 많이 들죠. 저 컴포넌트 라이선스 하나하나가 다 비용이거든요. 물론 리셀러 통해 다양한 할인이 들어가긴 하지만, 그래도 작은 회사에서 쓸 수준은 아닙니다.\n이승환: 그러면 작은 회사는 뭘 쓰면 될까요?\n임도영: 처리할 데이터가 그렇게 많지 않으면 굳이 세일즈포스를 쓸 필요는 없어요. 저희가 주로 추천해 드리는 건 애피어(Appier)라는 SaaS 솔루션입니다. 굉장히 가벼운 툴로, 애피어만으로도 어지간한 수준의 풀퍼널 CRM이 가능해요.\n애피어는 비교적 저렴한 가격으로도 CRM을 도입할 수 있다\n이승환: 아무튼 맡기기만 하면 회사에 맡게 해준다.\n임도영: 네. 일반적으로 큰 회사는 세일즈포스, 작은 회사는 애피어를 추천합니다. 그런데 또 고객사 니즈 따라 다른 경우도 있어요. 예로 세일즈포스도 SaaS이다 보니, 클라우드에서 움직입니다. 그래서 공공이나 금융사 같은 곳은 사용하기 힘들죠. 이런 곳은 또 국내에서 개발한, 사내 서버에 직접 설치하는 온프로미스 SW를 구축해 드립니다. MS 다이나믹스365 등, 이미 쓰고 있는 솔루션에 맞추는 경우도 있고요. 저희가 설치부터 운영까지 다 해드리기에, 어려운 부분이 전혀 없습니다.\n \n엽서부터 시작한 25년간 CRM 외길 인생\n이승환: 그나저나 어쩌다 이런 일을 하게 되셨나요?\n임도영: 2003년, 그러니 20년 전 당시 제가 오길비에서 데이터베이스 마케팅을 하고 있었어요. 그때 제 전직 사수인 정해동 당시 인컴브로더 부사장님께서 창업하자고 꼬드기더라고요. 그렇게 고객사 없이 창업해서 한 6개월 손가락만 빨았어요. 영업하고 제안서 쓰고 당구장 가고…\n나름 한국 CRM 업계 아버지 격인 존재 정해동 대표\n이승환: 데이터베이스 마케팅이라고 하면 좀 생소한데 어떤 걸 하셨던 거죠?\n임도영: 예로 저희 첫 번째 고객사가 동아제약의 ‘서큐란’이라는 브랜드였어요. 약국에서 판매되는데 자기네 직영 채널이 아니니 고객 정보를 받을 수가 없잖아요? 그때는 어떻게 했냐? 제품 안에 엽서가 들어 있어요. 회사에서 이 엽서를 받으면 약이 떨어질 때쯤 전화해서 재구매를 유도하는 거죠. 고객 개개인별로 메시지를 짜서 처음 연락할 때는 무슨 메시지, 두 번째 연락할 때는 무슨 메시지… 접촉 단계별 메시지 전략을 만들고 실행했죠.\n이승환: 와, 기발하네요. 기억납니다. 생각해 보니까 그게 다 CRM이었군요.\n임도영: 네. 또 약을 먹고 몸이 좋아졌는지에 이야기를 받아서 책자를 만들어서 보내요. 어찌 보면 요즘 리뷰 마케팅의 시초인 셈이죠. VIP 카탈로그도 있었네요… 럭스 브랜드 같은 곳은 지금도 일부 고객들에게 나가요. 고급스러운 제품 사진이랑 특징 등이 설명된 안내 책자 같은 거 있잖아요. 그 책자를 받는 게 좀 VIP의 상징이었다고 할까요. 지금도 명품 회사는 일부 고객들에게는 여전히 카탈로그를 활용하고 있어요.\n젊은이들은 잘 모르지만 이런 게 있었다…\n이승환: 인터넷으로는 어떻게 넘어간 거죠?\n임도영: 멤버십의 영향이 컸어요. 요즘도 매대에서 이마트 매대 가면 할인이나 포인트를 통해, 멤버십 가입을 유도하잖아요? 이런 멤버십이 인터넷을 통해 전국 단위로 작동할 수 있게 됐고, 기존 고객에게 재구매를 유도하는 개념이 생겨났지요. 그런데 지금도 CRM 솔루션을 잘 다루는 전문가가 적은데, 그때는 정말 거의 없었거든요. 덕택에 저희 회사가 꾸준히 성장하게 된 거죠. 어떻게 보면 운때가 좋았습니다.\n이승환: 문자나 이메일로 넘어간 건 언제쯤이죠?\n임도영: 휴대전화 보급은 90년대 말부터 시작됐고, 2000년대 초반부터 문자 마케팅이 조금씩 늘어났어요. 카탈로그나 엽서나 다 돈이잖아요. 만들고 보내고… 근데 문자는 반응률은 낮지만 비용이 거의 안 들어요. 이메일은 그보다 반응률은 낮지만, 비용은 더욱 낮았고요. 그러다 사진 붙이는 MMS, 지금의 카톡 메시지까지 쭉 이어진 거죠.\n문자와 카톡은 10원 내외라 높은 효율을 보일 수 있다\n \n다시금 자사몰의 CRM이 각광받는 이유\n이승환: 요즘 CRM이 다시금 각광 받는데 어떻게 보시나요?\n임도영: 호황기에 플랫폼끼리 박차게 붙었잖아요? 그때 커머스 업체들이 너무 네이버나 쿠팡에 의존하다 보니, 고객을 알 수 없게 돼버렸어요. 플랫폼에 의존하면 당장 매출이야 오르겠지만, 고객 정보를 알 수 없기에 재구매율이 높지 않고 광고비를 계속 써야 합니다. 이제 광고비도 많이 올랐으니 자연히 CRM으로 넘어온 거죠. 결국 CRM은 고객을 아는 것에서 시작하는 것이니, 플랫폼에만 의존하지 말고 자사몰에 힘을 줘야죠.\n점점 네이버와 쿠팡이 다 해먹는 중이지만, 그렇기에 역설적으로 자사몰이 중요하다\n이승환: 그러면 자사몰에서 어떻게 CRM을 잘 활용할 수 있을까요?\n임도영: 좀 건방진 얘기긴 하지만, 결국 의지가 필요합니다. 플랫폼의 요구조건이 점점 빡빡해지는 데도 계속 플랫폼에 머무르는 건 편해서거든요. 그럼에도 자사몰을 살리려는 의지를 가지고, CRM에 맞는 전략을 짜고 실행해야죠. 예로 나이키도 정말 많은 채널에서 판매를 하고 있어요. 그럼에도 나이키 앱에 들어올 수밖에 없는 이유는 자사몰에서 한정판을 팔고 있기 때문이에요. 그런 자사몰 만의 다양한 혜택과 이벤트를 제공하고 있어요.\n이승환: 결국 전략 단에서부터 데이터 친화적으로 가야 하는군요.\n임도영: 물론 현실적으로 다 가능하지는 않습니다. 회사마다 상황이 있으니까요. 저희 고객사만 해도 내부 제품전략과 MD가 있는데, 외부 데이터 컨설팅으로 전략을 뒤흔들면 안 되지요. 대신 그런 경우, 회사에서 전략적으로 미는 신제품군이 있다면, 저희가 어떤 고객층이 살지 분석해 드리고, 그분들에게 어떤 이벤트를 열어 어떤 메시지를 보내야 할지, 이런 세부적인 실행안을 챙겨드리는 형태로 진행합니다.\n수많은 쟁쟁한 고객사가 커스토머인사이트를 거쳐 갔다\n이승환: 요즘 플랫폼이 너무 강해져서 자사몰이 힘들다는 분들에게 팁을 주신다면?\n임도영: 플랫폼과 공존도 중요합니다. 예로 쿠팡, SSG, 컬리 등 타 플랫폼과 ‘공동 프로모션’을 할 수 있어요. 원래 플랫폼은 우리에게 고객 정보를 안 줘요. 그냥 너네 물건 A 몇 개 팔았고 B 몇 개 팔았다만 주죠. 근데 예로 컬리와 함께 공동 프로모션을 해요. 컬리에서 제품을 사되, 양사 모두에 정보를 제공하는 데 동의하면 적립금을 양쪽 앱 모두에서 주는 거죠. 그러면 플랫폼은 매출이 올라서 좋고, 우리는 고객 정보를 모아서 좋죠. 해보면 고객 10명 중 3~4명은 이쪽을 선택하니 상황이 된다면 추천하는 방법입니다.\n이승환: 감사합니다. 마지막으로 한마디 부탁 드립니다.\n임도영: 요즘은 탑 티어 컨설팅 펌까지 끼어들 정도로 CRM이 활황인 것 같습니다. 그래도 20년 이상 CRM을 전문으로 했고, 온오프라인 연결에 다양한 솔루션을 모두 활용한 저희 노하우를 따라잡기는 쉽지 않을 겁니다. 요즘은 AI로 앞으로 어떤 제품군이나 제품이 잘 팔릴지 시장 예측까지 하는 솔루션으로 시장을 키워가고 있는데요. 이미 하이마트, 정관장, 롯데백화점 등 굴지의 기업들이 도입 테스트 중입니다. CRM에 관심이 있다면 언제든 커스토머인사이트를 찾아주십시오. 감사합니다.\n\n☞ 커스토머인사이트 홈페이지 바로가기",
        "enclosure": {
          "type": "image/jpeg",
          "length": "0",
          "url": "https://ppss.kr/wp-content/uploads/2024/10/18-2.jpg"
        },
        "dc:creator": "리승환",
        "content": "CRM의 진가를 발휘하려면 온/오프라인 행동과 레거시 데이터를 통합해서 활용해야 이승환: 자기소개를 부탁드립니다. 임도영: 커스토머인사이트 임도영 전무입니다. 데이터 기반 CRM을 20년 이상 하고 있습니다. 주 고객으로는 한국인삼공사, 로레알코리아, 롯데하이마트 및 롯데 계열사 다수, 라코스테코리아 등이 있습니다. 이승환: CRM을 제대로 하면 보통 어느 정도 매출이 늘어나나요? 임도영: 어느 마케팅이나 그렇듯, 산업이나 기업마다 차이가 큽니다. 그래도 평균을 보면 [&#8230;]",
        "contentSnippet": "CRM의 진가를 발휘하려면 온/오프라인 행동과 레거시 데이터를 통합해서 활용해야 이승환: 자기소개를 부탁드립니다. 임도영: 커스토머인사이트 임도영 전무입니다. 데이터 기반 CRM을 20년 이상 하고 있습니다. 주 고객으로는 한국인삼공사, 로레알코리아, 롯데하이마트 및 롯데 계열사 다수, 라코스테코리아 등이 있습니다. 이승환: CRM을 제대로 하면 보통 어느 정도 매출이 늘어나나요? 임도영: 어느 마케팅이나 그렇듯, 산업이나 기업마다 차이가 큽니다. 그래도 평균을 보면 […]",
        "guid": "https://ppss.kr/?p=267563",
        "categories": [
          "IT",
          "마케팅",
          "sponsored"
        ],
        "isoDate": "2024-10-19T04:48:37.000Z"
      }
    ]
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Mryam Girmay",
        "title": "Enhanced Breakpoint Expressions for C++ Debugging in Visual Studio",
        "link": "https://devblogs.microsoft.com/cppblog/enhanced-breakpoint-expressions-for-c-debugging-in-visual-studio/",
        "pubDate": "Thu, 17 Oct 2024 22:02:48 +0000",
        "content:encodedSnippet": "Conditional Breakpoints Performance Improvement\nDebugging C++ code can be a time-consuming process, especially when dealing with complex scenarios. As a developer, it’s frustrating to go through extensive setup and wait for a specific conditional breakpoint to trigger so you can analyze your application in a specific state. In Visual Studio 2022 version 17.10, we optimized the implementation of conditional breakpoints in C++ to enhance performance. We further improved this in version 17.11 to boost performance even more. \nKey Improvements \nConditional breakpoints in Visual Studio for C++ pause code execution when specific conditions are met, making debugging targeted and efficient. For more details on how conditional breakpoints work, please refer to the Breakpoint Condition documentation. \n\nOur goal was to reduce the runtime overhead of conditional breakpoints and get you to a triggered breakpoint faster. We achieved this by implementing several key improvements:\nCaching Fetch Operations: Previously, every time a breakpoint was hit, expensive fetch operations accessed memory and CPU registers. These operations were time-consuming and impacted overall debugging performance. Now, Visual Studio caches these fetch operations during the same break state, benefiting both conditional breakpoints and regular debugging scenarios. \nNotifications to the Debugger: Previously, when a breakpoint was hit, the debugger was immediately notified before the condition was evaluated. This often led to unnecessary overhead and slower debugging performance. Now, we delay debugger notifications until after the breakpoint condition is evaluated. If the condition is false, the notification and related operations are skipped entirely, speeding up the debugging process. \nMinimal Information Retrieval: Visual Studio now retrieves minimal, crucial information for evaluating breakpoint conditions.  \nPerformance Gains \nSo, how much faster are conditional breakpoints now? Our assessment reveals the following improvements: \nVisual Studio version 17.10: At least a 35% performance boost compared to Visual Studio version 17.9. \nVisual Studio version 17.11 Preview 2: 70% improvement compared to Visual Studio version 17.10. \nTo put this into perspective, we have tested this perf improvement in a benchmark application with an 80,000-iteration while loop. The breakpoint triggers once the specified condition is met. Previously, this process took 80 seconds. However, with the enhancements,  the execution time is 21 seconds. We conducted our performance measurements on the same local machine, comparing different versions of Visual Studio while executing the same breakpoint activity.  \n\nFor detailed instructions on how to try out this performance improvement, please visit the Accelerate C++ Debugging with Enhanced Conditional Breakpoints blog post. \nGitHub Copilot Generated Breakpoint Expressions \nIn Visual Studio version 17.11 Preview 1, we’ve introduced AI-generated expressions for breakpoints and tracepoints. These tools  allow GitHub Copilot to analyze your code and suggest expressions for breakpoints and tracepoints. By leveraging this feature, you can save time and discover new approaches.  For further details, check out our blog post on Supercharge C++ Debugging with AI-Generated breakpoint expressions. \n\nLet us know what you think \nTo access these enhanced conditional breakpoints, make sure you have Visual Studio 2022 version 17.11 or later.   We hope you enjoy these new updates. Your valuable input continuously helps us improve our product, so please share your thoughts in the comment section below, through the Developer Community, via email at visualcpp@microsoft.com, or via X at @VisualC. \nLooking forward to your feedback! \nThe post Enhanced Breakpoint Expressions for C++ Debugging in Visual Studio appeared first on C++ Team Blog.",
        "dc:creator": "Mryam Girmay",
        "comments": "https://devblogs.microsoft.com/cppblog/enhanced-breakpoint-expressions-for-c-debugging-in-visual-studio/#comments",
        "content": "<p>Conditional Breakpoints Performance Improvement Debugging C++ code can be a time-consuming process, especially when dealing with complex scenarios. As a developer, it&#8217;s frustrating to go through extensive setup and wait for a specific conditional breakpoint to trigger so you can analyze your application in a specific state. In Visual Studio 2022 version 17.10, we optimized [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/enhanced-breakpoint-expressions-for-c-debugging-in-visual-studio/\">Enhanced Breakpoint Expressions for C++ Debugging in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Conditional Breakpoints Performance Improvement Debugging C++ code can be a time-consuming process, especially when dealing with complex scenarios. As a developer, it’s frustrating to go through extensive setup and wait for a specific conditional breakpoint to trigger so you can analyze your application in a specific state. In Visual Studio 2022 version 17.10, we optimized […]\nThe post Enhanced Breakpoint Expressions for C++ Debugging in Visual Studio appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=34774",
        "categories": [
          "C++"
        ],
        "isoDate": "2024-10-17T22:02:48.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "IPLS: Privacy-preserving storage for your WhatsApp contacts",
        "link": "https://engineering.fb.com/2024/10/22/security/ipls-privacy-preserving-storage-for-your-whatsapp-contacts/",
        "pubDate": "Tue, 22 Oct 2024 12:59:46 +0000",
        "content:encodedSnippet": "Your contact list is fundamental to the experiences you love and enjoy on WhatsApp. With contacts, you know which of your friends and family are on WhatsApp, you can easily message or call them, and it helps give you context on who is in your groups. But losing your phone could mean losing your contact list as well. Traditionally, WhatsApp has lacked the ability to store your contact list in a way that can be easily and automatically restored in the event you lose it. What’s more, the only place you were able to add contacts was from your mobile device, by either typing in a phone number or scanning a QR code.\nAs part of WhatsApp’s new feature to privately add and manage your contacts on WhatsApp across linked devices, we’re announcing a novel encrypted storage system we’ve designed called Identity Proof Linked Storage (IPLS). IPLS allows you to save your contacts and automatically restore them directly through WhatsApp. With IPLS in place, you can now create contacts directly within WhatsApp and choose to sync them to your phone or securely save them only to WhatsApp – giving you the ability to create contacts that are specific to your account. If you use linked devices, this also allows you to add and manage contacts seamlessly regardless of which device you’re on.\nAdditionally, if you have multiple accounts on the same phone, such as a work and personal account, you can now customize your contact list for each account. If you lose your phone, your contact list can be restored on a newly registered device. \nContact names are stored encrypted within WhatsApp, and we’ve built this with additional, robust protections by using IPLS to deter access to contacts to anyone except the user.\nIPLS incorporates new privacy technology that protects your contact lists in a privacy-preserving fashion. To further ensure the safety and security of this system, we’ve partnered with Cloudflare to provide independent third-party auditing of its cryptographic properties. The new technology stack was reviewed by external researchers and NCC Group Cryptography Services, an independent cybersecurity consultancy. \nWhat is Identity Proof Linked Storage?\nIPLS is a novel system at WhatsApp that allows users to store their contact names in an encrypted way. IPLS allows the client device to save the contact information using a strong encryption key generated on the client device. Its retrieval is based on the client authenticating its primary device identity.\nIPLS is based on two existing pieces of technology that are already used at scale by WhatsApp: key transparency and our hardware security module (HSM). \nCertain events associated with your phone’s WhatsApp application (such as installing or reinstalling) trigger the creation of a new cryptographic keypair that is associated with your phone number. WhatsApp’s key transparency system publishes records of these primary device identity key changes to an append-only, cryptographic Auditable Key Directory (AKD) that allows WhatsApp clients to automatically verify a user’s encryption key. \nKey transparency allows WhatsApp, and the public at large, to cryptographically verify if a given phone number used for a WhatsApp account is tied to a given identity key.\nThe HSMs are employed by WhatsApp end-to-end encrypted backups and allow for private, tamper-resistant execution of application logic within WhatsApp data centers in a privacy-preserving way. Data processing within HSM’s security boundary remains opaque even to WhatsApp insiders with the highest privilege and physical access to the hardware. \nThe components of IPLS\nThe AKD and Cloudflare integration\nAs mentioned, the first building block of IPLS is WhatsApp’s AKD, which maps a client phone number to a client identity key. Primary device identity is used to authenticate the client to ensure that only the owner of the contact encryption key is allowed to restore the contacts.\nTo strengthen the single instance nature of AKD, WhatsApp has engaged Cloudflare to act as an additional witness of the additions to AKD. Cloudflare digitally signs each epoch, and associated root hash, and returns a digital signature validation confirming that the directory was not tampered with. The HSM-based Key Vault validates Cloudflare signature using Cloudflare’s public key.\nWhatsApp relies on the availability of the Cloudflare signing service and cannot proceed with the updates to AKD in the absence of the digital signature of each update.\n\nIn addition, WhatsApp provides auditable proofs of consistency for the transitions between epochs. The auditable proofs are published to a write-once, read-many enabled Amazon S3 instance, which has a public interface for any entity to retrieve the proofs.\nUsing AKD and partnering with Cloudflare ensures that there is only a single instance of the directory that is validated by a 3rd party.\nHSM-based key storage\nTo ensure privacy for user contacts registered on WhatsApp, contact names are first encrypted using a symmetric encryption key generated by the user’s device, and then stored in the HSM-based Key Vault. Storage and retrieval of the contact encryption key occurs via an end-to-end encrypted channel between the client and the HSM-based Key Vault, ensuring that the data in transit remains opaque to WhatsApp.  \n\nStoring the contact key in the HSM-based Key Vault ensures its availability even when the user loses their phone. If a user loses their client device and wants to restore their contacts, the new client device can retrieve the contact key by establishing a secure session with the HSM-based Key Vault. The Key Vault verifies the client identity key by accessing AKD via a secure cryptographic protocol and verifying that the client has the corresponding private key.\n\nOnce the client is verified, the new client is allowed to access the contact key in the HSM-based Key Vault using the secure channel established with the client identity key and the HSM key.\nPrivacy-preserving contacts storage at WhatsApp scale\nIPLS is a new system that deters unauthorized access to sensitive data by effectively coupling any data access to publicly auditable identity key changes published to WhatsApp’s key transparency infrastructure. This approach is similar to how a QR code scanning technology can be used to detect a public key compromise in an end-to-end encrypted messaging system.\nWhatsApp’s new approach on contacts will give users more ways to easily manage contacts across devices and accounts and store them securely without losing them if they change phones or reinstall WhatsApp. We’re excited about how IPLS has helped enable this new feature and will help ensure WhatsApp contacts are encrypted and can easily move with users when they get a new phone. \nThe post IPLS: Privacy-preserving storage for your WhatsApp contacts appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Your contact list is fundamental to the experiences you love and enjoy on WhatsApp. With contacts, you know which of your friends and family are on WhatsApp, you can easily message or call them, and it helps give you context on who is in your groups. But losing your phone could mean losing your contact [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/10/22/security/ipls-privacy-preserving-storage-for-your-whatsapp-contacts/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/10/22/security/ipls-privacy-preserving-storage-for-your-whatsapp-contacts/\">IPLS: Privacy-preserving storage for your WhatsApp contacts</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Your contact list is fundamental to the experiences you love and enjoy on WhatsApp. With contacts, you know which of your friends and family are on WhatsApp, you can easily message or call them, and it helps give you context on who is in your groups. But losing your phone could mean losing your contact [...]\nRead More...\nThe post IPLS: Privacy-preserving storage for your WhatsApp contacts appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21812",
        "categories": [
          "Security",
          "WhatsApp"
        ],
        "isoDate": "2024-10-22T12:59:46.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Olga Bedrina",
        "title": "Exclusive Interview: Nana Janashia on Her Journey to DevOps and First Impressions of TeamCity Pipelines",
        "link": "https://blog.jetbrains.com/teamcity/2024/10/exclusive-interview-nana-janashia-teamcity-pipelines/",
        "pubDate": "Tue, 22 Oct 2024 16:28:31 +0000",
        "content:encodedSnippet": "We’re excited to bring you an exclusive interview with Nana Janashia, the mastermind behind the largest DevOps YouTube channel – TechWorld with Nana. Nana has built an incredible career, sharing valuable insights about automation, cloud-native technologies, and everything DevOps with her global audience. But did you know that her journey started in marketing?\nIn this interview, Nana shares her personal story of how she went from being a marketing student to a DevOps expert. She’ll cover how she navigated the challenges of learning programming, landed her first internship, and eventually discovered her passion for DevOps and Kubernetes. It’s an inspiring journey for anyone considering a career shift or diving into the tech industry.\n\n\n\n\n\n\nNana sat down with Marco Behler, Product Manager for TeamCity Pipelines, to explore JetBrains’ latest CI/CD solution – TeamCity Pipelines. Watch as Nana tries out the tool for the first time and shares her candid thoughts on its features, ease of use, and how it compares to the competition. From CI/CD pain points to the latest DevOps trends, Nana and Marco cover it all, wrapping up with her final verdict on how TeamCity Pipelines stacks up.\nCurious to hear her thoughts on TeamCity Pipelines? Check out the full video to get her live review and verdict on our newest CI/CD platform!",
        "dc:creator": "Olga Bedrina",
        "content": "We’re excited to bring you an exclusive interview with Nana Janashia, the mastermind behind the largest DevOps YouTube channel – TechWorld with Nana. Nana has built an incredible career, sharing valuable insights about automation, cloud-native technologies, and everything DevOps with her global audience. But did you know that her journey started in marketing? In this [&#8230;]",
        "contentSnippet": "We’re excited to bring you an exclusive interview with Nana Janashia, the mastermind behind the largest DevOps YouTube channel – TechWorld with Nana. Nana has built an incredible career, sharing valuable insights about automation, cloud-native technologies, and everything DevOps with her global audience. But did you know that her journey started in marketing? In this […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=520111",
        "categories": [
          "devops",
          "interview",
          "news"
        ],
        "isoDate": "2024-10-22T16:28:31.000Z"
      },
      {
        "creator": "Alena Gupaisova",
        "title": "Youth Challenge Returns in November!",
        "link": "https://blog.jetbrains.com/education/2024/10/22/youth-challenge-returns-in-november/",
        "pubDate": "Tue, 22 Oct 2024 13:04:07 +0000",
        "content:encodedSnippet": "Prepare yourselves for the second season of the JetBrains Academy Youth Challenge, the competition for young coders and mathematicians. If you missed out last time or are ready to prove yourself again, this is your chance to win special prizes and compete with students worldwide.\nRegister now\n                                                    \n\n\n\n\nChoose your track\nThe challenge continues with two tracks: math and coding. Participate in both or focus on your specialty.\nRules recap:\nThis challenge is for young and creative *human* minds.\nYou must be between 13 and 18 years old.\nYou must be currently enrolled in secondary education.\n\n\n\n\n\nMath track: United we solve\nMode: Multiplayer (up to three team members). Remember, you can only be on one team at a time. All participants should register individually.\nTime limit: 4 hours.\nChallenge type: Automated problem checking and oral defense.\nFinal round: November 17, 2024.\nPrize: Your mathematical prowess will be rewarded with an invitation to the second exclusive semester of the Youth Math Club.\nRegistration is open until 10:00 am UTC on November 11.\n\n\n\n\n\nCoder track: Solo quest\nMode: Single-player (individual participation).\nTime limit: 3 hours.\nChallenge type: A contest with ten algorithmic tasks.\nFinal round: November 24, 2024.\nPrize: Winners will get the chance to earn a spot in our exclusive on-site programming camp in early 2025.\nRegistration is open until 10:00 am UTC on November 18.\nRegister now\n                                                    \n\n\n\n\nGet prepared\nStart preparing for the competition with us! Join our free online Youth Clubs. They are designed for high schoolers but can also be interesting for younger students who have experience solving tasks outside the standard school curriculum. Registration is open until October 31.\nSign up for our Math, AI, and Coding Clubs to gear up for the journey.\n\n\n\n\nGet set, code, and solve!\nYour JetBrains Academy team",
        "dc:creator": "Alena Gupaisova",
        "content": "Prepare yourselves for the second season of the JetBrains Academy Youth Challenge, the competition for young coders and mathematicians. If you missed out last time or are ready to prove yourself again, this is your chance to win special prizes and compete with students worldwide. Choose your track The challenge continues with two tracks: math [&#8230;]",
        "contentSnippet": "Prepare yourselves for the second season of the JetBrains Academy Youth Challenge, the competition for young coders and mathematicians. If you missed out last time or are ready to prove yourself again, this is your chance to win special prizes and compete with students worldwide. Choose your track The challenge continues with two tracks: math […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=520187",
        "categories": [
          "jetbrains-academy",
          "offline-programs",
          "jetbrainsacademy",
          "jetbrains-academy-youth-challenge"
        ],
        "isoDate": "2024-10-22T13:04:07.000Z"
      },
      {
        "creator": "Valerie Kuzmina",
        "title": "Introducing Mellum: JetBrains’ New LLM Built for Developers",
        "link": "https://blog.jetbrains.com/blog/2024/10/22/introducing-mellum-jetbrains-new-llm-built-for-developers/",
        "pubDate": "Tue, 22 Oct 2024 13:01:38 +0000",
        "content:encodedSnippet": "JetBrains has taken a major step forward in advancing AI-driven development tools with the launch of Mellum, a proprietary large language model (LLM) specifically designed to assist software developers. Currently available only with JetBrains AI Assistant, Mellum provides faster, smarter, and more contextually aware code completion.\nThere are hundreds of LLMs. Why Mellum?\nUnlike typical large language models, Mellum is built specifically for coding. We are focused on creating a smaller, optimized model that significantly reduces latency, offering developers suggestions almost instantly. This makes Mellum more efficient than many of the third-party models currently available on the market.\nMellum already supports code completion for popular programming languages like Java, Kotlin, Python, Go, and PHP. To get support for even more languages, join our Early Access Program. \nHow does Mellum perform?\nSince its release, Mellum has already shown impressive results:\n\n\n\n\n\nCompletion latency has been reduced to one third of its previous time, reflecting a significant decrease in the time taken to complete tasks.\nThe acceptance rate of the completion suggestions powered by the Mellum model is about 40%, which is considered a solid benchmark in the industry.\nThe cancel rate is now three to four times lower compared to the previous version of AI Assistant.\nThe total number of completions shown has more than doubled compared to the previous version.\n\n\n\n\nMellum’s performance is also backed up by user reviews. By the way, thanks for being so active in the comments. We read each and every piece of feedback you give us!\n\n\n\n\nFor more on how Mellum enhances code completion, visit our latest blog post.\nDeep integration with JetBrains IDEs\nMellum’s power isn’t just in its speed and accuracy; it also benefits from deep integration with JetBrains IDEs. This synergy between the client-side IDE and server-side AI logic allows Mellum to deliver contextually aware code suggestions that are tailored to each project’s needs.\nA commitment to privacy\nJetBrains has always been committed to privacy, and Mellum continues this tradition. The model has been trained solely on publicly available, permissively licensed code. \nMellum represents a new era in developer tools, combining speed, precision, and privacy to improve the coding experience. Ready to see what Mellum can do for you? Check out Mellum’s capabilities in JetBrains AI Assistant today.\nTry AI Assistant for free",
        "dc:creator": "Valerie Kuzmina",
        "content": "JetBrains has taken a major step forward in advancing AI-driven development tools with the launch of Mellum, a proprietary large language model (LLM) specifically designed to assist software developers. Currently available only with JetBrains AI Assistant, Mellum provides faster, smarter, and more contextually aware code completion. There are hundreds of LLMs. Why Mellum? Unlike typical [&#8230;]",
        "contentSnippet": "JetBrains has taken a major step forward in advancing AI-driven development tools with the launch of Mellum, a proprietary large language model (LLM) specifically designed to assist software developers. Currently available only with JetBrains AI Assistant, Mellum provides faster, smarter, and more contextually aware code completion. There are hundreds of LLMs. Why Mellum? Unlike typical […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=519470",
        "categories": [
          "ai-assistant",
          "jetbrains-ai",
          "news",
          "ai"
        ],
        "isoDate": "2024-10-22T13:01:38.000Z"
      },
      {
        "creator": "Dmitry Romanov",
        "title": "DataGrip User Experience Survey Results",
        "link": "https://blog.jetbrains.com/datagrip/2024/10/22/datagrip-user-experience-survey-results/",
        "pubDate": "Tue, 22 Oct 2024 11:23:18 +0000",
        "content:encodedSnippet": "Introduction\nRecently, we conducted our first DataGrip UX Survey to better understand and prioritize the pain points that have the greatest impact on your experience. The data and feedback we gathered have helped us refine our plans to focus on what matters most to you.\nIn this post, we’ll highlight the key findings from the survey, outline our immediate plans for addressing the most significant issues you identified, and share a few tips to help enhance your experience right away.\nOverall DataGrip satisfaction\nOne of the goals of this research was to understand the current level of satisfaction among DataGrip users. This data enables us to track progress and ensure that the improvements we make have a positive impact on your experience.\nTo measure user satisfaction, we used the Customer Satisfaction Score (CSAT), which invites respondents to rate their experience on a linear scale. The CSAT is calculated as the percentage of positive responses (‘Very Satisfied’ and ‘Satisfied’) relative to the total number of responses:\nCSAT (%) = (Number of positive responses / Total number of responses) * 100\nWe discovered that 90% of respondents are “Satisfied” or “Very Satisfied” with their overall experience with DataGrip over the last six months. This is a notably high score for our industry, and we would like to express our gratitude for your positive feedback.\n\nResponse OptionPercentage\nVery satisfied39%\nSatisfied51%\nNeutral7%\nDissatisfied2%\nVery dissatisfied1%\n\nHow do you feel about your experience with DataGrip over the last six months?\n\n\n\nExperience with different DataGrip aspects\nTo gain deeper insights, we asked you to rate your satisfaction with several key aspects of DataGrip. Here’s what we discovered:\n\nAspectVery satisfied (%)Satisfied (%)Neutral (%)Dissatisfied (%)Very dissatisfied (%)CSAT (%)\nQuality and stability504351193\nFeature completeness3151134182\nPerformance and responsiveness3840163378\nUser interface3646143172\nDocumentation2533383158\n\nHow do you feel about your experience with each of the following aspects of DataGrip?\n\n\n\nBased on the CSAT results, the majority of DataGrip users are satisfied with the quality, stability, and feature completeness. However, there is significant room for improvement in the areas of performance, user interface and documentation.\nFor those who rated any aspect as “neutral” or lower, we asked a few follow-up questions to help us gain a better understanding of the specific issues encountered. \nLet’s dive into each of these areas in the following sections.\nDocumentation\nDocumentation received the most mixed feedback. More than one-third of respondents (38%) rated their satisfaction with it as “neutral.” \nThe comments section suggests that most respondents gave this rating because they have either never used the DataGrip documentation or were unaware of its existence. We’d like to take this opportunity to remind you that DataGrip’s documentation is available and contains a wealth of valuable information. You can always find it here.\nMoreover, we are constantly improving and updating it. Recently, we added new tutorials covering several ways to store your queries and how to import the data that you have in Excel files into your database. Currently, we are working on new materials, including a fresh “Getting Started” tutorial to replace the existing one here. \nUser interface\nRespondents dissatisfied with the DataGrip user interface highlighted several related issues. Here are the top three concerns:\nUsability: Ease of finding and using features – 50%\nLayout: Arrangement and organization of tools and panels – 29%\nNavigation: Ease of navigating between different features and menus – 26%\nDataGrip is a powerful and complex product, covering a wide range of use cases for different user roles. However, this power and versatility come with a learning curve. The complexity of the product can sometimes make it challenging to find the features and workflows you require.\nTo address these concerns, we will enhance the usability, layout, and navigation of the DataGrip user interface by systematically simplifying the most demanded workflows and scenarios.\nIn upcoming versions, we aim to improve the discoverability of frequently overlooked features and scenarios, including:\n​​Configuring the SQL code style to adjust the SQL code formatter according to your preferences.\nUsing the Query Execution plan to analyze and optimize query performance.\nUsing the Files Tool Window to manage query consoles, scratches, and files.\nUsing JetBrains AI Assistant to save time on repetitive tasks.\nFurthermore, we’ll help you get the most out of DataGrip with new tutorials in our documentation and videos on our YouTube channel.\nUseful tips:\nExplore DataGrip’s features: Visit this section for a quick overview of the most important tools and features that DataGrip has to offer.\nUse ”Find Action”: The Find Action feature (press ⇧⌘A on macOS or Control+Shift+A on Windows/Linux) allows you to quickly locate any setting, tool, or action, even if you’re not sure where it’s located in the menus. This feature is incredibly helpful for navigating the complexity of the DataGrip user interface.\nWatch the “DataGrip Overview” video: Though slightly outdated (and soon to be updated), our YouTube video provides a comprehensive walkthrough of DataGrip’s features and common use cases. It covers everything from basic navigation to more advanced functionality, making it a valuable resource for both new and experienced users who want to deepen their understanding of the tool.\nPerformance and responsiveness\nRespondents who were dissatisfied with DataGrip’s performance and responsiveness primarily highlighted the following issues:\nIntrospections: Speed of loading metadata for database objects and source code – 61%\nIDE Responsiveness: Overall speed and responsiveness of the interface – 42%\nIndexing: Speed and efficiency of indexing operations – 39%\nIntrospection in DataGrip refers to retrieving metadata from a database, including object names, column types, and source code. This process is essential for features like coding assistance, offline work, navigation, and search functionalities. However, performance can slow down when working with large numbers of objects, such as databases, schemas, and tables.\nTo address this, DataGrip is introducing the level-by-level introspection feature, which is designed to improve introspection speed by progressively loading metadata. This feature allows DataGrip to retrieve only the essential metadata first, such as database and schema names, and then delve deeper into table structures, column types, and source code only when necessary. By avoiding loading everything at once, this approach significantly reduces the performance burden for users working with large or complex databases.\nYou can find more information about introspection levels, already implemented for Oracle, here.\nCurrently, we are working on extending this feature to other popular database management systems (DBMS), starting with MySQL and PostgreSQL.\nWe are also carefully investigating and addressing the IDE responsiveness and Indexing performance issues highlighted by respondents. Your feedback is crucial in helping us resolve these issues, and you can assist us by reporting any performance problems you encounter.\nUseful tips:\nReduce the number of objects: Unselect schemas or databases that don’t need to be introspected. This can be done through the Database Explorer or by editing the data source properties in the Data Sources and Drivers dialog. Reducing the number of selected databases and schemas will minimize the queries performed by DataGrip, leading to better introspection performance.\nStay updated: Make sure you regularly update DataGrip to the latest version. Updates often include performance improvements, bug fixes, and new features that can enhance your experience.\nReport performance issues: Help us identify and resolve performance bottlenecks by reporting them via the DataGrip issue tracker.\nFeature completeness\nThe vast majority of respondents are satisfied with DataGrip’s feature set. We want to highlight that our team is continuously working to introduce new capabilities and address emerging use cases, ensuring our product stays up to date. \nYou can always learn about upcoming changes by visiting the DataGrip Early Access Program page. It’s also a great opportunity to explore new features and provide feedback to our team before their official release.\nIf you feel that a particular feature or scenario is missing, you can submit a feature request via the DataGrip issue tracker or vote on existing requests to help us prioritize them.\nQuality and stability\nSurvey results show that the quality and stability of DataGrip are the least problematic aspects. However, we recognize that occasional issues can still occur and are committed to addressing them promptly.\nIf you encounter any bugs or technical issues, please report them via the DataGrip issue tracker. Detailed bug reports, which include steps to reproduce the issue, are especially helpful in diagnosing and resolving problems.\nYou can further contribute to DataGrip’s quality and stability by participating in our Early Access Program (EAP). By using the EAP versions, you gain early access to new features and improvements, and your feedback allows us to identify and resolve issues before the official release.\nThank you!\nWe’d like to express our gratitude to all DataGrip users, especially those who participate in our surveys, share their feedback, and report issues. Your input is invaluable in helping us better understand your needs and expectations. \nWe plan to run this survey regularly to track the impact of our updates and ensure we continue meeting your evolving needs. If you weren’t able to participate in the first DataGrip UX Survey, please feel free to share your feedback with us using our feedback form.",
        "dc:creator": "Dmitry Romanov",
        "content": "Introduction Recently, we conducted our first DataGrip UX Survey to better understand and prioritize the pain points that have the greatest impact on your experience. The data and feedback we gathered have helped us refine our plans to focus on what matters most to you. In this post, we&#8217;ll highlight the key findings from the [&#8230;]",
        "contentSnippet": "Introduction Recently, we conducted our first DataGrip UX Survey to better understand and prioritize the pain points that have the greatest impact on your experience. The data and feedback we gathered have helped us refine our plans to focus on what matters most to you. In this post, we’ll highlight the key findings from the […]",
        "guid": "https://blog.jetbrains.com/?post_type=datagrip&p=518118",
        "categories": [
          "survey",
          "datagrip",
          "ux"
        ],
        "isoDate": "2024-10-22T11:23:18.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "Automating Godot Game Builds With TeamCity",
        "link": "https://blog.jetbrains.com/teamcity/2024/10/automating-godot-game-builds-with-teamcity/",
        "pubDate": "Tue, 22 Oct 2024 08:59:07 +0000",
        "content:encodedSnippet": "Godot, an open-source game engine known for its versatility and simplicity, is gaining popularity among both indie developers and the broader game development community. While Godot comes with its own scripting language, GDScript, it also supports the widely-used C# language, familiar to Unity and Unreal Engine developers.\nIn this tutorial, we will use “Dodge the Creeps”, a popular beginner project for learning the Godot game engine. “Dodge the Creeps” is a simple 2D game where players avoid enemies (creeps) while learning essential game development concepts. We will set up automated build pipelines to build, test, and publish the game using TeamCity and work with both the GDScript and C# versions of the game.\n\n\n\n\nGodot with GDScript\nBuild and export GDScript game for Windows target\nIn TeamCity, there are two primary ways to configure build chains: through the UI or using the Kotlin DSL (Configuration as Code). Each method has its advantages depending on your needs.\nUI configuration is the more traditional approach, where users set up and manage build configurations directly within TeamCity’s graphical interface. It’s intuitive and accessible, making it easy to quickly define builds, adjust settings, and link build steps together without needing any coding skills. The downside is that this approach can be cumbersome for larger, more complex pipelines.\nThe TeamCity Kotlin DSL allows you to define build chains programmatically. This approach offers version control and reusability, making it ideal for complex build setups and automation.\nIn these examples, we will show you how to set up Godot pipelines both ways. We will use the barichello/godot-ci Docker images (barichello/godot-ci:4.2.1) to set up the Godot environment. This includes the Godot engine itself, export templates, and the Butler utility for publishing games to Itch.io.\n UI configuration:\nIn the TeamCity UI, create a new build configuration.\nSet up your version control system (VCS) settings to pull the code from your repository.\nAdd a build step using the Command Line runner.\nConfigure the build step with the following commands to build your Godot game:\ngodot -v -e --quit --headless\ngodot -v --export-release --headless \"Windows\" Dodge-Windows.zip\nThe first command is necessary to open the editor in headless mode to import all assets, and the second command is then used to export the game for a specific platform (like Windows) in release mode, packaging everything into the final build.\n\n\n\n\nKotlin DSL configuration:\nIf you’re working with the Kotlin DSL (Configuration as Code), you can define the build configuration programmatically:\nscript {\n    \tname = \"Build for Windows\"\n    \tscriptContent = \"\"\"\n        \tgodot -v -e --quit --headless\n        \tgodot -v --export-release --headless \"Windows\" Dodge-Windows.zip\n    \t\"\"\".trimIndent()\n    \tdockerImage = \"barichello/godot-ci:4.2.1\"\n}\nThis process can be easily adapted for other platforms by adjusting the export target from Windows to Linux, WebGL HTML5, etc.\nYou can find more information about exporting projects here:\nhttps://docs.godotengine.org/en/stable/tutorials/export/exporting_projects.html\n\n\n\n\nHere, we see the result of a build as a published artifact. To publish the artifact, it must be configured in the “General settings” tab of the build configuration.\n\n\n\n\nAs you can see, building a Godot game in TeamCity is a straightforward process. For smaller or simpler projects, the UI-based configuration offers an intuitive way to quickly set up build pipelines without the need for coding. However, for more complex build setups, the Kotlin DSL provides a more powerful, scalable, and reusable solution through code-based configuration.\nUnit tests reporting\nIn recent examples, we used the command line runner, which means tests aren’t detected automatically by TeamCity as they usually would be. However, we can still use the XML Report Processing build feature to handle the test results.\nFor the GDScript version of Godot, several unit testing frameworks are available, with the most popular being GdUnit, WAT, and GUT. All of these frameworks support JUnit standard XML reporting, which TeamCity can easily import and process using its XML Report Processing feature.\n\n\n\n\nKotlin DSL configuration:\nfeatures {\n    xmlReport {\n        reportType = XmlReport.XmlReportType.JUNIT\n        rules = \"**/report.xml\"\n    }\n}\nGodot with C#\nWhy choose C# scripting in Godot? \nWhile GDScript offers strong integration with Godot as a default language, C# provides distinct advantages. Since C# is compiled, it performs significantly better, often running up to four times faster than the interpreted GDScript, which can be crucial for gameplay optimization. \nAs a strongly typed language, C# reduces potential coding errors, making it easier to understand and maintain complex code. Additionally, using .NET opens up access to powerful development tools like JetBrains Rider, dotTrace, and dotMemory, improving workflow and debugging.\nBuilding and Exporting a .NET 8 game \nBuilding a .NET project in Godot is similar to building a GDScript project. The main difference is that we will use a different Docker image (barichello/godot-ci:mono-4.2.1), and we will need to install .NET separately, because the image contains only mono.\n\n\n\n\nscript {\n        \tname = \"Build Game\"\n        \tscriptContent = \"\"\"\n            \tset -e\n            \twget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\n            \tdpkg -i packages-microsoft-prod.deb\n            \tapt-get update\n            \tapt-get install -y dotnet-sdk-8.0\n               \n            \tgodot --headless --verbose --editor --quit\n            \tgodot --headless --verbose --export-release \"Windows Desktop\" Dodge-Windows.zip\n        \t\"\"\".trimIndent()\n        \tdockerImage = \"barichello/godot-ci:mono-4.2.1\"\n   }\nUnit testing C# game with on-the-fly test reporting\n\n\n\n\nFirst, we add the TeamCity.VSTest.TestAdapter NuGet package to get on-the-fly test reporting during the build. Unit tests project file should look like this:\n<ItemGroup>\n  <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.10.0\" />\n  <PackageReference Include=\"gdUnit4.api\" Version=\"4.2.3\" />\n  <PackageReference Include=\"gdUnit4.test.adapter\" Version=\"1.1.1\" />\n  <PackageReference Include=\"TeamCity.VSTest.TestAdapter\" Version=\"1.0.40\" />\n</ItemGroup>\nKotlin DSL configuration:\nscript {\n        \tname = \"Build Game\"\n        \tscriptContent = \"\"\"\n            \tset -e\n               \n            \techo \"##teamcity[blockOpened name='Setup .NET']\"\n            \twget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\n            \tdpkg -i packages-microsoft-prod.deb\n            \tapt-get update\n            \tapt-get install -y dotnet-sdk-8.0\n            \techo \"##teamcity[blockClosed name='Setup .NET']\"\n               \n            \techo \"##teamcity[blockOpened name='Import assets']\"\n            \tgodot --headless --verbose --editor --quit\n            \techo \"##teamcity[blockClosed name='Import assets']\"\n            \t                \n            \techo \"##teamcity[blockOpened name='Run tests']\"\n            \texport GODOT_BIN=/usr/local/bin/godot\n            \tdotnet test --settings .runsettings\n            \techo \"##teamcity[blockClosed name='Run tests']\"\n \n            \techo \"##teamcity[blockOpened name='Export game']\"\n            \tgodot --headless --verbose --export-release \"Windows Desktop\" Dodge-Windows.zip\n            \techo \"##teamcity[blockClosed name='Export game']\"\n        \t\"\"\".trimIndent()\n        \tdockerImage = \"barichello/godot-ci:mono-4.2.1\"\n   }\nIn this example, the script begins by setting up the .NET environment, downloading the necessary dotnet-sdk (version 8.0 in this case). It then imports the game assets into Godot, runs the unit tests, and finally exports the game to a Windows executable. TeamCity’s blockOpened and blockClosed service messages allow developers to clearly see each stage of the process in the build logs, making it easier to debug and track.\n\n\n\n\nPublish the game\nWebGL to S3\nThe next step is distributing the game to your players. In this case, we’re automating the upload of the game to platforms like S3 for HTML5 builds.\nscript {\n        \tname = \"Publish to S3 bucket\"\n        \tscriptContent = \"\"\"\n            \tmv DodgeTheCreeps.html index.html\n               \n            \taws s3 sync . s3://danielgallo-gdc-unity-game/Godot-DodgeTheCreeps\n        \t\"\"\".trimIndent()\n}\nPublish exported Windows game to iItch.io using butler tool\nButler is a command-line tool created for developers to easily upload, update, and manage their games or digital projects on the indie game platform itch.io. Instead of manually uploading files through the website, Butler automates the process, ensuring smooth, incremental updates without re-uploading entire files. \nIt also provides version control, allowing developers to push only changes, which reduces upload time. Ideal for game developers who frequently update their projects, it simplifies deployment, improves workflow efficiency, and ensures users always have the latest version of their content.\nparams {\n    \tparam(\"env.ITCHIO_USERNAME\", \"teamcity-demo\")\n    \tpassword(\"env.BUTLER_API_KEY\", \"******\")\n    \tparam(\"env.ITCHIO_GAME\", \"dodge-the-creeps\")\n}\n…\nsteps {\n    \tscript {\n        \tname = \"Publish to Itch.io\"\n        \tscriptContent = \"butler push build %env.ITCHIO_USERNAME%/%env.ITCHIO_GAME%:windows\"\n        \tdockerImage = \"barichello/godot-ci:4.2.1\"\n    \t}\n}\nUploaded game on https://teamcity-demo.itch.io/dodge-the-creeps\n\n\n\nAs you can see, setting up a Godot build pipeline with TeamCity is relatively straightforward, largely because of the Godot engine simplicity. This is the reason why we don’t provide dedicated support in the form of a runner. \nHowever, if your scenario is more complex and you believe better support is needed, please feel free to share your suggestions in the comments section of this blog post.",
        "dc:creator": "Olga Bedrina",
        "content": "Godot, an open-source game engine known for its versatility and simplicity, is gaining popularity among both indie developers and the broader game development community. While Godot comes with its own scripting language, GDScript, it also supports the widely-used C# language, familiar to Unity and Unreal Engine developers. In this tutorial, we will use &#8220;Dodge the [&#8230;]",
        "contentSnippet": "Godot, an open-source game engine known for its versatility and simplicity, is gaining popularity among both indie developers and the broader game development community. While Godot comes with its own scripting language, GDScript, it also supports the widely-used C# language, familiar to Unity and Unreal Engine developers. In this tutorial, we will use “Dodge the […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=519917",
        "categories": [
          "news",
          "tutorials",
          "game-developement",
          "tutorial"
        ],
        "isoDate": "2024-10-22T08:59:07.000Z"
      },
      {
        "creator": "Oleg Zinovyev",
        "title": "CLion 2024.3 EAP 5: Support for the Call Hierarchy in CLion Nova and the New Project Status Widget",
        "link": "https://blog.jetbrains.com/clion/2024/10/clion-2024-3-eap-5/",
        "pubDate": "Mon, 21 Oct 2024 16:53:00 +0000",
        "content:encodedSnippet": "A new CLion 2024.3 EAP build, 243.20847.43, is out. You can download it for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu.\nDOWNLOAD CLION 2024.3 EAP\nThis build introduces two major features: support for function call hierarchy in CLion Nova and a new project status widget in the status bar, replacing the banner notifications in the editor. Some important bug fixes also improve the debugger and CMake project behavior.\nSupport for the call hierarchy in CLion Nova\nFunction call hierarchy support was one of the most requested features in CLion Nova (CPP-22675), and we’ve added it in this EAP build. The call hierarchy is available in the Hierarchy tool window, showing all the places where a given function is used, caller and callee hierarchies, new icons to indicate recursive calls, and more.\n\n\n\n\nThis feature helps you better understand how your functions interact. It’s particularly handy when you’re working on projects with multiple functions that call one another non-trivially. The call hierarchy is also useful as a debugging aid. For example, when you make changes to functions, you can easily see the impact of those changes.\nTo view the call hierarchy, select a function in the editor, and then choose Navigate | Call Hierarchy from the main menu or use the shortcut ⌃⌥H (macOS) or Ctrl+Alt+H (Windows/Linux). To learn more about other code hierarchies available in CLion, see this web help article.\nProject status widget\nProject status notifications inform you of potential problems with your project configuration and offer ways to resolve them. In version 2024.2, they are displayed as yellow banners in the editor until the problem is resolved.\nWe’ve received a number of complaints suggesting that these notifications are irrelevant in various use cases. For example, some users just want to open a .cpp file from a third-party project to test or read the code. Some deliberately use a build system that CLion doesn’t support. In such cases, it makes no sense to have a notification banner hanging in the editor all the time. So, we’ve decided to make these notifications less distracting by moving them from the top of the editor to a new widget in the status bar.\n\n\n\n\nNow, if you create a new .cpp file in your project, for example, the ⚠️ icon will appear. The notification that your file doesn’t belong to any project won’t appear until you hover over the icon. When you click on the icon, the widget will offer to add the file to the CMake project. If you don’t need it, you can close the pop-up, leaving only the icon in the status bar. Additionally, when the widget sees a Makefile, Bazel, or compilation database file, it gives you the option to load the corresponding project.\nOther improvements\nA couple of bug fixes are also worth highlighting:\nWhen attaching to an unstarted process while debugging, the IDE now only selects processes that belong to the current user. This prevents situations where you accidentally try to attach to someone else’s process and get an error.\nReloading a CMake project using the Reset Cache and Reload Project option no longer results in an error when the FTP/SFTP/WebDAV Connectivity plugin is disabled.\n\n\n\n\nDOWNLOAD CLION 2024.3 EAP\nCall for feedback\nYour feedback is important to us, as your experiences and insights are essential to our mission of continuously improving CLion. Please share your ideas in the comments section below or submit them to our issue tracker. We would also be interested in setting up a quick call with you to learn more about your specific use cases. Let us know if you would like to participate!\nYour CLion team\nJetBrains\nThe Drive to Develop",
        "dc:creator": "Oleg Zinovyev",
        "content": "A new CLion 2024.3 EAP build, 243.20847.43, is out. You can download it for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2024.3 EAP This build introduces two major features: support for function call hierarchy in CLion Nova and a new project status [&#8230;]",
        "contentSnippet": "A new CLion 2024.3 EAP build, 243.20847.43, is out. You can download it for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu. DOWNLOAD CLION 2024.3 EAP This build introduces two major features: support for function call hierarchy in CLion Nova and a new project status […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=518937",
        "categories": [
          "eap",
          "news",
          "clionnova",
          "cmake",
          "debugger"
        ],
        "isoDate": "2024-10-21T16:53:00.000Z"
      },
      {
        "creator": "Ekaterina Valeeva",
        "title": "Bridging the Gap Between the Classic and New UIs",
        "link": "https://blog.jetbrains.com/idea/2024/10/bridging-the-gap-between-the-classic-and-new-uis/",
        "pubDate": "Mon, 21 Oct 2024 15:30:01 +0000",
        "content:encodedSnippet": "Any significant update to the UI and UX of a professional tool is likely to pose challenges for its users. We recognize that the new UI of JetBrains IDEs represents a major change and understand how unsettling it can be when the software you rely on for productivity is significantly reworked. However, in order for us to evolve and innovate in line with global trends and emerging insights, change is essential.\nIn this post, we will tell you more about the motivation behind the new UI and how it was developed. We’ll also provide some useful tips for configuring it if you are used to the classic one.\nEvolution of the UI and UX\nIn version 2024.2, the new UI became the default in JetBrains IDEs after being optional for several releases. Still, time flies and this may have happened sooner than expected. The classic UI was moved to an unbundled plugin, and our in-IDE tips and onboarding tour weren’t always enough for those who had to adjust during their busy workdays. However, this significant change was the natural final step in the long process of the UI’s evolution.\nThe idea for the new UI was born over four years ago, around the 20th anniversary of JetBrains in 2020. Our goal was to create a modern, lightweight interface that follows current industry trends while maintaining the powerful features our tools are known for.\nWe started working on this new interface in 2022 with a limited preview program joined by over 5000 users. We gathered feedback from Reddit, X, and a dedicated Slack channel, which allowed us to fix key usability issues raised by program participants. By the end of the year, with version 2022.3, the new UI was available in Beta for everyone to try. \nTen months later, in version 2023.2, we made the new UI the default for new users, and its adoption rate has steadily increased. We conducted several UX studies to understand user perceptions and address any remaining usability issues. Working with all the feedback, we improved the new UI to its final form and released it as the default for everyone in version 2024.2.\nWhile we appreciate the mostly positive feedback we received during the development of the new UI, we know that some users may be disappointed. We understand that adapting to significant changes in your trusted tools can be challenging. However, all the powerful features you rely on are still there, and you can configure the new UI to suit your preferences.\nDogfooding the new UI inside JetBrains\nAt JetBrains, developers create tools for developers. That’s why we involved our own development teams in the evaluation process of the new UI from the very beginning. We gathered extensive internal feedback and engaged in spirited discussions, allowing us to assess the impact of each change and quickly address any pain points.\nInitially, many of our colleagues were skeptical about the new UI. However, the current internal adoption rates for the latest major IntelliJ IDEA version (2024.2) show a significant preference for it, with 98.8% of our team using it compared to just 1.2% using the classic UI.\nWhat’s next for the classic UI?\nStarting with version 2024.2, the classic UI is available as a plugin that you can download from JetBrains Marketplace. We are committed to maintaining it until at least July 2025. This means that it will be tested and supported for all IDE versions we release until then.\nMaintaining two different UIs places a significant load on our development and testing resources that we cannot continue to bear indefinitely. We plan to evaluate your feedback, fix more issues, and implement support for missing use cases in the new UI, but at some point, the classic UI will be deprecated.\nHow to configure familiar behavior in the new UI\nWhile we want to move forward with this new UI, we recognize people are still adapting to it. To ease the transition, we’ve made sure it is possible to configure the new UI to behave more like the classic one. Let’s look at some configuration tweaks you may want to make. \nIn addition to outlining configuration options that are already available, we’ve also provided links to several tickets where you can vote for options you would like us to implement.\nUse Compact mode\nEnable Compact mode to reduce the heights of toolbars and tool window headers, scale down spacings and paddings, and make icons and buttons smaller. Just go to the main menu and select View | Appearance | Compact Mode.\n\n\n\n\nShow the main menu in a separate toolbar (Windows and Linux)\nTo display the horizontally expanded main menu at the top of the window, go to View | Appearance in the main menu and enable the corresponding option. Alternatively, you can right-click on the main toolbar and enable Show Main Menu in Separate Toolbar.\n\n\n\n\nNote: There’s a request to always show the expanded menu in the main toolbar – IJPL-43725.\nNative OS window title (Linux)\nTo restore the native window title, go to Settings | Appearance & Behavior | Appearance, and disable the Merge main menu with window title option.\n\n\n\n\nAdd missing action buttons to the main toolbar\nTo add action buttons to the main toolbar, simply right-click on the toolbar, point to Add to Main Toolbar, and select the actions you want to add. If your desired action is not on the list, you can use the Customize Main Toolbar dialog to add it.\n\n\n\n\nMove the navigation bar to the top of the window\nTo put the navigation bar containing project breadcrumbs at the top of the window, from the main menu, go to View | Appearance | Navigation Bar, then select Top.\n\n\n\n\nShow tool window names on sidebars\nTo add labels to the tool window buttons, right-click the tool window bar and select Show Tool Window Names.\n\n\n\n\nNote: There’s a request to restore vertical tool window names – IJPL-158776.\nAlways show folding arrows and tool window header icons\nIn the new UI, tool window header icons and code folding arrows in the editor gutter appear on hover and disappear when you move the mouse away.\n\n\n\n\nTo make them always visible:\nIn Settings | Advanced settings | Tool windows, enable Always show tool window header icons.\nIn Settings | Editor | General | Code Folding, select Always next to the Show code folding arrows.\n\n\n\n\nSelect a line in the editor by clicking the line number\nIn the new UI, clicking on a line number sets a breakpoint instead of selecting the line. To revert to the previous behavior, right-click the gutter and disable Appearance | Breakpoints Over Line Numbers.\n\n\n\n\nAdd actions to the Debug window toolbar\nSome actions, like Evaluate Expression and Show Execution Point, have been moved into the three-dot menu. To make them visible on the toolbar, right-click the header of the Debug tool window and select Add Actions…, then simply select the action you want to add from the list.\n\n\n\n\nNote: There is a request to restore the Show Execution Point and Evaluate Expression buttons to the toolbar by default – IJPL-83483.\nReturn tool windows to the sidebar\nSome tool windows are no longer shown by default. To bring the missing tool windows back, right-click the More tool windows button in the sidebar and select the tool windows you need. Alternatively, in the main menu, go to View | Tool Windows and select the ones you want there.\n\n\n\n\nNote: There are currently unsupported configurations for tool windows that we are collecting votes for and may consider implementing in the future:\nHorizontal tool window bar at the bottom of the window – IJPL-43772.\nTool windows placed horizontally at the top of the window – IJPL-59816.\nIs something still missing?\nThere might be configurations that are not easy to set up or that aren’t supported at all in the new UI. If you’re struggling to configure the IDE to suit your particular scenario, we encourage you to contact JetBrains support or file a new issue in our tracker.",
        "dc:creator": "Ekaterina Valeeva",
        "content": "Any significant update to the UI and UX of a professional tool is likely to pose challenges for its users. We recognize that the new UI of JetBrains IDEs represents a major change and understand how unsettling it can be when the software you rely on for productivity is significantly reworked. However, in order for [&#8230;]",
        "contentSnippet": "Any significant update to the UI and UX of a professional tool is likely to pose challenges for its users. We recognize that the new UI of JetBrains IDEs represents a major change and understand how unsettling it can be when the software you rely on for productivity is significantly reworked. However, in order for […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=519477",
        "categories": [
          "news",
          "new-ui"
        ],
        "isoDate": "2024-10-21T15:30:01.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "IntelliJ IDEA 2024.3 EAP 6: Updated Structure Tool Window, Streamlined GraalVM Native Image Debugging, and More",
        "link": "https://blog.jetbrains.com/idea/2024/10/intellij-idea-2024-3-eap-6/",
        "pubDate": "Mon, 21 Oct 2024 10:33:52 +0000",
        "content:encodedSnippet": "The latest IntelliJ IDEA 2024.3 EAP build is here, bringing new features and improvements for you to explore!\nYou can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu.\nDownload IntelliJ IDEA 2024.3 EAP 6\nIn this update, we’ve introduced a revamped Structure tool window, added method generation for Spring Data repositories, simplified GraalVM native image debugging, and much more. To catch up on the previous updates introduced throughout the Early Access Program for v2024.3, check out the dedicated section of our blog. \nLet’s take a closer look at what’s new in this build!\nFrameworks and technologies\nRevamped Structure tool window\nFor the upcoming 2024.2 version, we’ve revised the Structure tool window to include a Logical code structure alongside the familiar Physical structure. You can now view not only classes, methods, and fields but also the links and interactions between the components of your project.\nFor example, when you open a controller in a Spring Boot application, you can see its endpoints and the autowired application components. This enhanced view aids in understanding the project structure and enables developers to navigate through the code by following not just code usages but also meaningful connections.\n\n\n\n\nSupport for $env.ENV_VAR syntax in the HTTP Client\nIntelliJ IDEA 2024.3 EAP 6 introduces the ability to access environment variables directly within the HTTP Client using the $env.ENV_VAR syntax. This allows for more flexibility in managing and using variables within your requests and scripts.\n\n\n\n\n\n\n\n\nDerived method generation for Spring Data repositories\nIn this release, IntelliJ IDEA adds support for automatically generating derived query methods in Spring Data repositories. If you need a derived query method, you no longer need to manually update the repository source code. Just start typing the method name where it’s needed, and IntelliJ IDEA will suggest possible method names, provide the proper method signature and return type, and update the repository code for you.\n\n\n\n\nStreamlined GraalVM native image debugging\nWe’ve greatly simplified GraalVM native image debugging with Docker containers, which means you can now build and debug native Java applications on any platform. Simply specify one container for building your application and another for running it in the run configuration.\nOnce the application is running, you can debug the app not only in the Java code but also at the assembler level. To make the setup easier, we provide Docker images preconfigured with all the necessary software and libraries. For more information on how to fine-tune your environment, refer to our guide on building a Docker image for debugging.\n\n\n\n\nDebugger\nAsync stack trace for exceptions display \nTroubleshooting asynchronous code is particularly tricky because tasks are often scheduled in one thread but executed in another. Each thread maintains its own stack trace, which makes it harder to trace the events that happened before the worker thread started.\nIntelliJ IDEA 2024.3 EAP 6 offers a solution to this problem by printing a merged stack trace in the console instead of only printing the worker’s stack trace. This feature is enabled by default for tests. For more information on async stack traces, refer to the documentation.\n\n\n\n\nUser experience\nUpdated New popup for Java source roots\nWe’ve updated the New popup for adding new files within Java source roots to display only the most relevant options, reducing clutter and streamlining your workflow.\n\n\n\n\nIf you prefer the previous extended list of templates, you can easily restore it by going to Settings | Advanced Settings | Java.\n\n\n\n\nThese are the most notable updates in the latest EAP build, and we’d love to hear your thoughts on them! For the full list of the changes, refer to the release notes.\nWe encourage you to try out these features and share your feedback with us in the comments section below or on X. If you encounter any bugs, please report them via our issue tracker. Your insights help us make IntelliJ IDEA better for you!\nStay tuned for more updates next week. Happy developing!",
        "dc:creator": "Irina Mariasova",
        "content": "The latest IntelliJ IDEA 2024.3 EAP build is here, bringing new features and improvements for you to explore! You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. Download IntelliJ IDEA 2024.3 EAP 6 In this update, we’ve [&#8230;]",
        "contentSnippet": "The latest IntelliJ IDEA 2024.3 EAP build is here, bringing new features and improvements for you to explore! You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. Download IntelliJ IDEA 2024.3 EAP 6 In this update, we’ve […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=518446",
        "categories": [
          "eap",
          "2024-3-eap",
          "intellij-idea",
          "intellij-idea-2024-3",
          "intellij-idea-2024-3-eap"
        ],
        "isoDate": "2024-10-21T10:33:52.000Z"
      },
      {
        "creator": "Margarita Shadrina",
        "title": "JetBrains at the ICPC World Finals 2024 Astana",
        "link": "https://blog.jetbrains.com/blog/2024/10/17/jetbrains-icpc-world-finals-2024-astana/",
        "pubDate": "Thu, 17 Oct 2024 18:01:26 +0000",
        "content:encodedSnippet": "This year’s ICPC World Finals Astana was remarkable, and we were thrilled to be a part of it. The event brought together the world’s brightest young minds in competitive programming. Engaging with students, coaches, and the community was a valuable experience that reinforced our commitment to supporting emerging talent.\nThe Opening Ceremony held at the Presidential Center kicked off an incredible week. We were honored to receive an ICPC Foundation Global Service Award in recognition of our service as an ICPC Global Programming Tools Sponsor, providing outstanding programming tools for the global programming community and sponsoring ICPC regional and global contests, including the ICPC World Finals Astana.\n\n\n\n\nAndrey Ivanov, Senior VP of Investments, Research, and Education, accepted the award and delivered a speech that perfectly sums up the reason behind JetBrains’ lasting commitment to the ICPC: \n\nI strongly believe that the challenges we’re facing now require all the talented humans of the world to work together as a community. The ICPC unites people from around the globe, guided by the golden rules and Bill Poucher’s leadership. And that is the reason why we, JetBrains, are together with the ICPC, and will be together for as long as we can. Because it’s something that resonates profoundly with our beliefs. We’d like to expand the community, because community and friendship are what really matter. I actually met some of my friends who I’ve known for 20+ years, and they are part of the ICPC community. So come to us, talk to us, and become our friends; that’s why we’re here. Thank you, and good luck!\nThroughout the whole week, an expo area was open for participants to get to know the local culture, relax, and talk with sponsors. We had a great team at the ICPC World Finals, with our colleagues from university relations, development, advocacy, events, internships, and HR teams. We enjoyed meeting people at our booth, talking about JetBrains IDEs, team tools, Kotlin, and more, sharing insights into our latest projects and advancements, and discussing the results of the Kotlin challenge that we offered as a fun activity to test their problem-solving skills.\n\n\n\n\nAt every World Finals, we host a presentation called the JetBrains Tech Trek, where we provide an overview of our products and feature famous figures from the programming community to demonstrate them. \n\n\n\n\n\n\nThis year, we invited Gennady “tourist” Korotkevich and Andrew “ecnerwala” He, two of the world’s most decorated competitive programmers, to join us on stage and solve problems from our own Kotlin Heroes competition. Check it out here.\n\n\n\n\nMatt Ellis, Developer Advocate at JetBrains, also gave several presentations targeted specifically at coaches and Regional Contest Directors. These talks focused on the tools and resources we offer to educators and learners, including free licenses, IDEs, AI Assistant, benefits of using Kotlin for teaching, as well as information about our ICPC Pafos Camps, internships, contests, and much more.\nThe ICPC World Finals in Astana was truly impressive, with teams from universities around the world tackling complex problems with great skill. Congratulations to the team from Peking University for winning the 48th ICPC World Finals, to the teams from the Moscow Institute of Physics and Technology, Tsinghua University, and Tokyo Institute of Technology for securing the gold medals, and to all of the other teams who made it to Astana and competed.\n\n\n\n\nLooking back at a year that featured three World Finals (check out our post celebrating the ICPC World Finals Luxor that took place this April), plenty of regional contests, and the first European Championship, where we’ve met so many great teams and coaches, we’re excited for the next ICPC season – expanding our outreach and finding new ways to support students and educators alike. To every participant, coach, and organizer we met, thank you for your dedication, passion, and willingness to push the boundaries of what’s possible. You are the true stars of this event, and we are honored to be a part of your journey. \nHere’s to another successful year at the ICPC – and many more to come! Subscribe here to receive updates about ICPC-related events.",
        "dc:creator": "Margarita Shadrina",
        "content": "This year’s ICPC World Finals Astana was remarkable, and we were thrilled to be a part of it. The event brought together the world’s brightest young minds in competitive programming. Engaging with students, coaches, and the community was a valuable experience that reinforced our commitment to supporting emerging talent. The Opening Ceremony held at the [&#8230;]",
        "contentSnippet": "This year’s ICPC World Finals Astana was remarkable, and we were thrilled to be a part of it. The event brought together the world’s brightest young minds in competitive programming. Engaging with students, coaches, and the community was a valuable experience that reinforced our commitment to supporting emerging talent. The Opening Ceremony held at the […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=518849",
        "categories": [
          "news",
          "competitive-programming",
          "icpc"
        ],
        "isoDate": "2024-10-17T18:01:26.000Z"
      },
      {
        "creator": "Kodee",
        "title": "Kodee’s Kotlin Roundup: Exciting News + Special Announcement!",
        "link": "https://blog.jetbrains.com/kotlin/2024/10/kodee-s-kotlin-roundup-exciting-news-special-announcement/",
        "pubDate": "Thu, 17 Oct 2024 12:37:23 +0000",
        "content:encodedSnippet": "Hello, it’s Kodee here, your favorite Kotlin mascot. I thought, who would be better to bring you all the exciting news from the Kotlin ecosystem than the cutest member of the team – me.\n\n\n\n\nSo, without further ado, let’s jump right in!\nThe updated Kotlin roadmap is here!\nHold on to your keyboards, because the updated Kotlin roadmap has landed, and it’s packed with plenty of fantastic plans from the JetBrains team. From language improvements to a faster K2-based IntelliJ IDEA plugin, Kotlin Multiplatform advancements, and better support for third-party ecosystem authors, there’s a lot to look forward to. Trust me, the future of Kotlin is looking brighter than ever! In the meantime, a dedicated Kotlin Multiplatform roadmap is on its way. Stay tuned!\nSee the future of Kotlin\n                                                    \nKodee goes plush!\nAlright, folks, now for the really important news – drumroll, please… The plushie version of yours truly has officially arrived at the JetBrains Merchandise Store! That’s right. I’m now available in soft, cuddly form, ready to join all you awesome Kotlin fans in your coding adventures. With my big, adorable eyes and mega cozy feel, I’m here to make those tough debugging sessions a bit more fun and a lot more huggable. So, what are you waiting for? Grab your very own Kodee plushie and bring some extra cuteness to your workspace!\nKodee.getYours()\n                                                    \nKotlin 2.0.21 and 2.1.0-Beta2 released\nIn case you missed it, Kotlin 2.0.21 is out! Alongside essential bug fixes, this release brings support for Xcode 16 – great news for Kotlin Multiplatform developers targeting Apple platforms! And guess what? While you’re enjoying these updates, you can also get a sneak peek of what’s coming next with Kotlin 2.1.0-Beta2!\nCheck out what’s new\n                                                    \nCompose Multiplatform 1.7.0 is out\nCompose Multiplatform 1.7.0 is now officially out! It comes packed with plenty of fantastic updates, such as more components in common code, support for type-safe navigation, and some major performance boosts for iOS. Plus, we’ve sprinkled in a few of the latest changes from the latest Jetpack Compose update. Want to know more? Just follow the link below to check out all the details in our recent blog post!\nExplore Compose Multiplatform 1.7.0\n                                                    \nKotlin Multiplatform Contest for students and recent graduates\nCalling all students and recent graduates! The Kotlin Foundation is hosting the Kotlin Multiplatform Contest, and personally, I think this is a plush opportunity to make your creativity shine. Build a cross-platform project using Kotlin Multiplatform and submit it by January 14, 2025, for a chance to win one of three all-expenses-paid (travel and accommodation) trips to KotlinConf 2025 in Copenhagen, Denmark! Plus, every valid entry will receive some cool Kotlin souvenirs. Winners will be announced on January 24, 2025! Also, meet our last contest winners and see what they created. \nBy the way, where’s my KotlinConf ’25 invitation? 🤔\nJoin the contest! \n                                                    \nBeyond the Success of Kotlin [Documentary]\nHave you heard the news? There’s a brand-new documentary by the community all about Kotlin, and it’s incredible! From its origins to how Kotlin became the much-loved language used by millions of developers, you’ll hear some pretty cool stories from the folks who helped shape it into what it is today. But wait a second… I didn’t see myself anywhere in this film! Anyway, grab some popcorn, get comfy, and check it out!\nWatch the Kotlin documentary\n                                                    \nCall to action: Gradle Developer Survey\nJust so you know, Gradle’s elephant and I are great pals! We sometimes have a bit of friendly competition to see who can handle the heaviest workload. But when it comes to improving your developer tools, we’re always in sync. Gradle, a proud Silver Member of the Kotlin Foundation, is running a developer survey and wants to hear from you. Your feedback can help shape the future of Gradle, so take a moment to share your thoughts and enhance the developer experience!\nShare your thoughts\n                                                    \nKtor 101: Efficient JVM HTTP toolkit\nI decided to visit the IntelliJ IDEA blog and stumbled upon a fantastic beginner tutorial on Ktor. If you know anyone new to Ktor, feel free to share it! This post covers everything from setting up a simple ‘Hello, World!’ app to diving into advanced features like content negotiation and plugins. I’m sure it’s the perfect resource for anyone just getting started.\nCheck out Ktor 101\n                                                    \nKotlin Foundation Grants Program winners\nTime to celebrate some Kotlin awesomeness! I may not have been on the judging panel (I’d probably just pick everyone! 😅), but the Kotlin Foundation’s Ecosystem Committee has chosen five lucky winners for the second round of the Kotlin Foundation Grants Program! Out of 59 brilliant applications from library authors across the Kotlin ecosystem, these standout projects stole the limelight. Give these winners some well-deserved love: Konsist, Compose Rich Editor, Multiplatform Settings, Ultron, and Orbit MVI.\nCheck out the winners\n                                                    \nAn overview of the Kotlin Evolution and Enhancement Process\nDid you know that Kotlin’s evolution is significantly influenced by the community? That’s right – our team works closely with you to bring new features to life, and we’ve got a process for that called KEEP (the Kotlin Evolution and Enhancement Process). From early ideas to final releases, KEEP ensures everything runs smoothly, with clear goals of efficiency, transparency, and collaboration. Want to help shape Kotlin’s future? We’ll show you how!\nLearn all about KEEP\n                                                    \nTrack and analyze GitHub star growth with Kandy and Kotlin DataFrame\nYou know I’ve got some serious data skills, right? With Kotlin DataFrame and Kandy, powerful tools for data analysis in Kotlin, you can dive deep into manipulating and visualizing data like a pro – just like me! Our latest tutorial will guide you through using these tools in Kotlin Notebook to analyze and visualize the GitHub star history of repositories. You’ll see how to analyze growth, spot key moments that affect popularity, and even create some super cool visualizations.\nLevel up your data game",
        "dc:creator": "Kodee",
        "content": "Hello, it’s Kodee here, your favorite Kotlin mascot. I thought, who would be better to bring you all the exciting news from the Kotlin ecosystem than the cutest member of the team – me. So, without further ado, let’s jump right in!",
        "contentSnippet": "Hello, it’s Kodee here, your favorite Kotlin mascot. I thought, who would be better to bring you all the exciting news from the Kotlin ecosystem than the cutest member of the team – me. So, without further ado, let’s jump right in!",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=516422",
        "categories": [
          "news",
          "kotlin-roundup-2"
        ],
        "isoDate": "2024-10-17T12:37:23.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "IntelliJ IDEA 2024.1.7 Is Out",
        "link": "https://blog.jetbrains.com/idea/2024/10/intellij-idea-2024-1-7/",
        "pubDate": "Thu, 17 Oct 2024 09:09:32 +0000",
        "content:encodedSnippet": "We’ve just released a minor version for IntelliJ IDEA 2024.1 – 2024.1.7.\nYou can update to this version from inside the IDE or via the Toolbox App.\nThis version brings the following fix:\nThe modules.xml file is now properly updated upon project reopening after an .iml module file was removed. [IJPL-867]\n\n\n\n\n\nFor details, refer to the release notes. If you encounter any issues or would like to make a suggestion or a feature request, please submit them to our issue tracker.\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "We’ve just released a minor version for IntelliJ IDEA 2024.1 – 2024.1.7. You can update to this version from inside the IDE or via the Toolbox App. This version brings the following fix: For details, refer to the release notes. If you encounter any issues or would like to make a suggestion or a feature [&#8230;]",
        "contentSnippet": "We’ve just released a minor version for IntelliJ IDEA 2024.1 – 2024.1.7. You can update to this version from inside the IDE or via the Toolbox App. This version brings the following fix: For details, refer to the release notes. If you encounter any issues or would like to make a suggestion or a feature […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=518129",
        "categories": [
          "releases",
          "2024-1",
          "bug-fix-update",
          "intellij-idea-2024-1",
          "intellij-idea-2024-1-7"
        ],
        "isoDate": "2024-10-17T09:09:32.000Z"
      },
      {
        "creator": "Alexandra Kolesova",
        "title": "Rider Reveal Livestream: Big News for .NET and Game Devs",
        "link": "https://blog.jetbrains.com/dotnet/2024/10/16/rider-reveal-livestream-big-news-for-dotnet-and-game-devs/",
        "pubDate": "Wed, 16 Oct 2024 12:07:10 +0000",
        "content:encodedSnippet": "Join us on October 24 for a special livestream where our Developer Advocates will reveal exciting news about JetBrains Rider. You won’t want to miss this! Set a reminder on YouTube and subscribe to our JetBrains channel to get notified when the livestream is about to start.\nSet a Reminder\n                                                    \nWe would appreciate it if you could spread the word about this event! Share this link with anyone who might be interested. Here’s also a handy template for X 😉.\nWho should attend?\n.​NET developers\nGame developers\nAnyone interested in the future of software development\nJetBrains Rider is a leading .​NET and game dev IDE. Its robust feature set allows you to develop a wide range of applications, including ASP.​NET and ASP.​NET Core web apps, .​NET desktop applications, services and libraries, Unity and Unreal Engine games, Xamarin apps, MAUI apps, and more.",
        "dc:creator": "Alexandra Kolesova",
        "content": "Join us on October 24 for a special livestream where our Developer Advocates will reveal exciting news about JetBrains Rider. You won&#8217;t want to miss this! Set a reminder on YouTube and subscribe to our JetBrains channel to get notified when the livestream is about to start. We would appreciate it if you could spread [&#8230;]",
        "contentSnippet": "Join us on October 24 for a special livestream where our Developer Advocates will reveal exciting news about JetBrains Rider. You won’t want to miss this! Set a reminder on YouTube and subscribe to our JetBrains channel to get notified when the livestream is about to start. We would appreciate it if you could spread […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=518505",
        "categories": [
          "net-tools",
          "livestreams",
          "rider",
          "net",
          "game-developement",
          "webinars"
        ],
        "isoDate": "2024-10-16T12:07:10.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "article New updates to Planner comment notifications and settings in Planner Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sinem Akinci",
        "title": "Debug CMake Scripts on Linux with Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/debug-cmake-scripts-on-linux-with-visual-studio/",
        "pubDate": "Tue, 22 Oct 2024 12:00:20 +0000",
        "content:encodedSnippet": "If you are working on a CMake project that targets Linux, you may have encountered some challenges when trying to debug your CMake scripts and CMakeLists.txt files. You may have wondered why your variables are not set correctly, or why your custom commands are not executed as expected. Or you may have simply wanted to step through your CMake scripts and see what is happening behind the scenes of the configure step.\nWe are excited to announce that the CMake debugger in Visual Studio now has support for CMake projects targeting Linux via WSL or SSH. The CMake debugger allows you to debug your CMake scripts and CMakeLists.txt files using the familiar Visual Studio debugger experience.\nYou will need CMake version 3.27 or greater installed on your remote Linux machine to have access to the CMake debugging feature.\n\nHow to use the CMake debugger\nUsing the CMake debugger is straightforward in Visual Studio. All you need to do is set a breakpoint in your CMakeLists.txt file or any .cmake script file and then navigate to Project > Configure Cache with CMake Debugging.\n\nThis will launch the CMake debugger and stop at your breakpoint. You can then inspect the values of your CMake variables, evaluate expressions, watch the output of your custom commands, and step through your CMake code using the familiar Visual Studio debugger.\nLinux Machine Compatibility\nThe CMake debugger works for both WSL and SSH connections. WSL connections are automatically detected in Visual Studio and you can add SSH connections via the Connection Manager under Tools > Options and then Cross Platform > Connection Manager.\n\nYou can always toggle the target machine in your CMake projects by using the Target System dropdown in the top of Visual Studio.\n\nWhat’s next?\nWe hope you enjoy using the CMake debugger and find it useful for your CMake projects. We would love to hear your feedback and suggestions on how to improve it further. Please let us know what you think by using the Send Feedback button in Visual Studio.\nThank you for your continuous feedback and support that make Visual Studio better every day.\nThe post Debug CMake Scripts on Linux with Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "Sinem Akinci",
        "content": "<p>If you are working on a CMake project that targets Linux, you may have encountered some challenges when trying to debug your CMake scripts and CMakeLists.txt files. You may have wondered why your variables are not set correctly, or why your custom commands are not executed as expected. Or you may have simply wanted to [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/debug-cmake-scripts-on-linux-with-visual-studio/\">Debug CMake Scripts on Linux with Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "If you are working on a CMake project that targets Linux, you may have encountered some challenges when trying to debug your CMake scripts and CMakeLists.txt files. You may have wondered why your variables are not set correctly, or why your custom commands are not executed as expected. Or you may have simply wanted to […]\nThe post Debug CMake Scripts on Linux with Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251054",
        "categories": [
          "Cross-Platform",
          "Debug",
          "Visual Studio",
          "CMake",
          "Debugger",
          "Linux"
        ],
        "isoDate": "2024-10-22T12:00:20.000Z"
      },
      {
        "creator": "Junyu Wang",
        "title": "Improve your debugger game with editable expressions",
        "link": "https://devblogs.microsoft.com/visualstudio/improve-your-debugger-game-with-editable-expressions/",
        "pubDate": "Wed, 16 Oct 2024 18:00:28 +0000",
        "content:encodedSnippet": "Do you ever wish you could quickly test different queries on your collections or datasets while debugging? Do you want to save time and avoid writing code just to inspect your data? If you answered yes, then you will love the new editable expression feature in the Visual Studio debugger.\nThis feature allows you to modify the expressions textbox on the top of the IEnumerable visualizer dialog with your desired LINQ expressions. The visualizer updates in real-time, reflecting the data change resulting from your query. You can easily apply different filters or sort orders to your collections based on your needs.\nIn this blog post, we will show you how to use this powerful feature and how it can help you debug more efficiently and effectively.\nGetting started\nIn a debugging session, launch the IEnumerable visualizer by hovering over a collection or dataset variable in the debugger and clicking on the magnifying glass icon. Alternatively, you can right-click on the variable and select View Visualizer from the context menu.\n\nThis will open the IEnumerable visualizer dialog, where you will see the expressions textbox on the top. You can type any valid LINQ expression in this textbox and hit <ENTER> to apply it to your collection. The visualizer will update the data grid below with the result of your query.\n\nUse cases for editable expressions\nThe editable expression feature can be very useful for debugging dense datasets and complex collection manipulations. You can experiment with different data transformations and filters directly within the Visual Studio debugger, without having to write any code or switch to another tool.\nFor example, suppose you have a collection of products that you want to inspect. You can use the editable expression feature to filter out the products that are out of stock, sort them by price, and select only the name and price properties. Here is how you can do that:\n\nAs you can see, the editable expression feature allows you to quickly and easily manipulate your data and see the results in the visualizer. You can also copy the expression from the textbox and paste it into your code if you want to use it in your application logic.\nGive us your feedback\nWe hope you enjoy using the editable expression feature in the Visual Studio debugger. We would love to hear your feedback and suggestions on how we can improve it further. Please leave a comment below or use the Report a Problem tool in Visual Studio to let us know what you think.\nWe also want to thank you for your continuous feedback and support, which helps us make Visual Studio better for you. Stay tuned for more exciting features and updates coming soon!\nHappy debugging!\nThe post Improve your debugger game with editable expressions appeared first on Visual Studio Blog.",
        "dc:creator": "Junyu Wang",
        "content": "<p>Do you ever wish you could quickly test different queries on your collections or datasets while debugging? Do you want to save time and avoid writing code just to inspect your data? If you answered yes, then you will love the new editable expression feature in the Visual Studio debugger. This feature allows you to [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/improve-your-debugger-game-with-editable-expressions/\">Improve your debugger game with editable expressions</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Do you ever wish you could quickly test different queries on your collections or datasets while debugging? Do you want to save time and avoid writing code just to inspect your data? If you answered yes, then you will love the new editable expression feature in the Visual Studio debugger. This feature allows you to […]\nThe post Improve your debugger game with editable expressions appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251007",
        "categories": [
          "Debug",
          "Visual Studio"
        ],
        "isoDate": "2024-10-16T18:00:28.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": [
      {
        "creator": "sunyzero",
        "title": "페도라 리눅스 nvidia 드라이버 설치 (RPM Fusion akmods, 24년 10월 기준)",
        "link": "http://sunyzero.tistory.com/304",
        "pubDate": "Sat, 19 Oct 2024 20:39:32 +0900",
        "author": "sunyzero",
        "comments": "http://sunyzero.tistory.com/304#entry304comment",
        "content": "<p data-ke-size=\"size16\"><span style=\"color: #000000;\">이 문서는 페도라 리눅스에서 nvidia 드라이버를 손쉽게 설치하고, 커널 업데이트시 자동으로 드라이버를 업데이트 및 빌드하는 akmods 기반의 드라이버 설치를 다룬다. <span style=\"background-color: #f6e199;\">여기서 사용된 리눅스는 </span></span><span style=\"color: #000000;\"><span style=\"background-color: #f6e199;\">Fedora Linux 40 버전을 기준으로 작성하였다</span>. 일반적으로 페도라 35 이후는 이 문서의 방법대로 작업하면 된다. 만일 페도라 34 이전의 구형 버전이라면 다른 방법을 사용해야 하는데, 오래된 페도라 버전의 경우는 굳이 문서화가 필요 없다고 판단되어 생략하였다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><b>명령어 권한</b></h3>\n<p data-ke-size=\"size16\"><b></b><span style=\"color: #000000;\">이 문서에서 내리는 모든 명령어는 root 권한으로 작업한다. 따라서 터미널을 열고 \"su -\" 를 실행하여 root로 권한을 변경하는 것을 권장한다. (sudo 권한이 주어져 있다면 sudo를 사용해도 되지만 계속 sudo를 타이핑하려면 귀찮으니까 su - 를 권장한다)</span><b></b><span style=\"color: #000000;\"></span></p>\n<p data-ke-size=\"size16\"><span style=\"color: #000000;\">명령어는 아래 순서대로 작업하도록 하고, 특별히 주의해야 하는 부분은 형광색으로 색칠 해두었으니 참고하자.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #000000;\">1. 커널 및 관련 패키지를 업데이트</span></h2>\n<p data-ke-size=\"size16\"><span style=\"color: #000000;\">커널의 버전을 lock할 수 있는 고급 숙련자는 이 과정이 필요없지만 일반적인 사용자는 커널 버전 및 관련 패키지를 최신 버전으로 업데이트하고 재부팅해야 한다. 이를 위해 아래와 같은 명령어를 사용한다.</span></p>\n<pre id=\"code_1729336124009\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>dnf -y update</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"color: #000000;\">dnf update 명령이 성공한 뒤에 kernel module이나 ramdisk가 리빌드 되는 경우가 있을 수 있기 때문에 <span style=\"background-color: #f6e199;\">약 1분 정도 기다렸다가 reboot 한다</span>.(잊지말고 리부트하자) 리부트는 터미널에서 reboot라고 명령하면 된다.</span></p>\n<pre id=\"code_1729336210239\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>reboot</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #000000;\">2. rpmfusion 저장소 활성화</span></h2>\n<p data-ke-size=\"size16\"><span style=\"color: #000000;\">설치할 nvidia driver를 제공하는 곳이 rpmfusion repository이므로 해당 저장소를 활성화 해야 한다. 활성화 방법은 저장소 설정파일 패키지를 설치하는 것으로 아래 명령어를 실행하면 된다. </span></p>\n<p data-ke-size=\"size16\">원래 아래 dnf install 명령어는 패키지를 한 라인에 붙어 써도 되지만 가독성이 안좋아서 2개의 명령어로 쪼개놓았다. 아래 2개의 <span style=\"color: #000000; letter-spacing: 0px;\">명령어는 길기 때문에 직접 </span><span style=\"color: #000000; text-align: start;\">타이핑하다가 오타 가능성이 높으니,</span><span style=\"color: #000000; letter-spacing: 0px;\"><span style=\"background-color: #f6e199;\"> 복사해서 붙어넣기를 권장한다.</span> [1]</span></p>\n<pre id=\"code_1729336437221\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>dnf -y install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm\n\ndnf -y install https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저장소는 금방 설치가 끝날 것이다. 설치 완료 후 cache를 업데이트 하기 위해 아래의 makecache 명령어를 실행한다.&nbsp;<span style=\"color: #000000;\">사실 makecache는 안해도 상관은 없지만 하는 편이 좋기는 하다.</span></p>\n<pre id=\"code_1729336631409\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>dnf makecache</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b><br /><br /><br /></b></p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #000000;\">3. nvidia 드라이버 설치</span></h2>\n<p data-ke-size=\"size16\"><span style=\"color: #000000;\">원문 = <a href=\"https://rpmfusion.org/Howto/NVIDIA?highlight=%28CategoryHowto%29\">https://rpmfusion.org/Howto/NVIDIA</a></span></p>\n<p data-ke-size=\"size16\">nvidia 드라이버 설치는 akmod-nvidia 와 xorg-x11-drv-nvidia-cuda를 설치하면 끝이다. 아래의 명령어를 실행한다. (앞서와 마찬가지로 복붙하자)</p>\n<pre id=\"code_1729336739199\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>dnf -y install akmod-nvidia xorg-x11-drv-nvidia-cuda</code></pre>\n<p data-ke-size=\"size16\">위 명령어로 설치하면 akmod-nvidia와 의존성이 있는 수십 개의 패키지가 같이 설치될 것이다. 주의할 점은 akmods 설치 후 nvidia driver를 빌드하기 위해 C 컴파일러가 실행되므로 CPU 사용량이 갑자기 올라갈 것이다. 드라이버 빌드는 시스템 성능에 따라 다르지만 대개 1분에서 최대 5분까지도 걸린다. <span style=\"background-color: #ffc9af;\">따라서 즉각 <span style=\"background-color: #9feec3;\">reboot</span>하면 절대로 안되고, <span style=\"background-color: #ffc1c8;\">약 <span style=\"background-color: #9feec3;\">1~3분</span> 정도</span>는 기다려야 한다.</span> 무작정 기다리기보다는 빌드가 언제 끝나는지는 top을 실행해보면 쉽게 알 수 있다.</p>\n<p data-ke-size=\"size16\"><span style=\"background-color: #9feec3;\">dnf로 akmod-nvidia를 설치 완료 후, top을 실행하면 백그라운드에서 dnf나 akmods, cc1 등의 각종 프로세스들이 새로 실행되면서 CPU 사용량이 올라가는 것을 볼 수 있다. <span style=\"background-color: #f6e199;\">그리고 1~2분 정도 지나면 dnf나 akmods, cc1 등의 프로그램이 종료되고 CPU 사용량이 뚝 떨어질 것이다. CPU 사용량이 뚝 떨어진 것을 확인한 후에 reboot하면 정확하다</span></span>. 참고로 라이젠 5000번 CPU에서는 약 1분 30초 정도 시간이 걸렸다. (만일 드라이버 빌드가 되기 전에 재부팅하더라도 재부팅 과정에서 드라이버를 다시 빌드하기 때문에 문제가 없을 수도 있다. 하지만 안전성을 위해 되도록이면 기다렸다가 재부팅하는 것이 좋다.)</p>\n<div data-ke-type=\"moreLess\" data-text-more=\"더보기\" data-text-less=\"닫기\"><a class=\"btn-toggle-moreless\">더보기</a>\n<div class=\"moreless-content\">\n<p data-ke-size=\"size16\">akmods 명령어</p>\n<p data-ke-size=\"size16\">차후 수동으로 akmods로 작동되는 드라이버를 직접 rebuild하려면 \"akmods --rebuild --force\"명령을 내리면 즉각 리빌드하도록 되어있다. 자세한 사용법은 akmods --help 명령으로 확인하도록 하자.</p>\n</div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">4. 재부팅 후 nvidia 드라이버 확인</h2>\n<p data-ke-size=\"size16\">재부팅하면 nvidia 드라이버가 올라왔는지 2가지 방법으로 확인할 수 있다. 첫번째 방법은 터미널에서 nvidia-smi를 실행하는 것이다. 아래는 실제 페도라 40 시스템에서 akmod-nvidia 설치 후 재부팅한 뒤에 <span style=\"background-color: #f6e199;\">nvidia-smi</span>를 실행한 것이다.</p>\n<pre id=\"code_1729337104657\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ nvidia-smi \nSat Oct 19 19:45:55 2024       \n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 560.35.03              Driver Version: 560.35.03      CUDA Version: 12.6     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 3080        Off |   00000000:3C:00.0  On |                  N/A |\n|  0%   32C    P8             16W /  340W |     414MiB /  10240MiB |      3%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n                                                                                         \n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|    0   N/A  N/A      4709      G   /usr/libexec/Xorg                             163MiB |\n|    0   N/A  N/A      5433      G   /usr/bin/gnome-shell                          203MiB |\n+-----------------------------------------------------------------------------------------+</code></pre>\n<p data-ke-size=\"size16\">두번째 방법은 터미널에서 <span style=\"background-color: #f6e199;\">nvidia-settings</span>를 실행하는 것이다. 이 프로그램은 nvidia 제어판의 리눅스 버전이며 아래와 같이 나타난다. (터미널에서 실행하지 않고 Super키(윈도 키) 누르고 nvidia만 쳐도 Nvidia 서버 설정인가? 하는 이름으로 프로그램이 보일 것이다)</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"736\" data-origin-height=\"576\"><span data-url=\"https://blog.kakaocdn.net/dn/P0AUz/btsKdDFdO7L/McJwzeOwELscPjupsb4UXK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/P0AUz/btsKdDFdO7L/McJwzeOwELscPjupsb4UXK/img.png\" data-alt=\"nvidia-settings\"><img src=\"https://blog.kakaocdn.net/dn/P0AUz/btsKdDFdO7L/McJwzeOwELscPjupsb4UXK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FP0AUz%2FbtsKdDFdO7L%2FMcJwzeOwELscPjupsb4UXK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"736\" height=\"576\" data-origin-width=\"736\" data-origin-height=\"576\"/></span><figcaption>nvidia-settings</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><br />5. Fedora 커널 업데이트 후 nvidia가 작동하지 않는 경우</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">간혹 Fedora 커널 업데이트 후에 akmod가 버전에 맞는 nvidia kernel module을 생성하지 못하여 그래픽이 잘 안나오는 경우에는 다음과 같이 작업한다. 이 방법 외에 akmods가 제대로 설치되어있다는 가정하에 akmods만 재컴파일하는 방법도 있다. 이는 아래 Failed to initialize NVML 에러를 해결하는 글에 설명되어있다. (아래 과정은 과거 문제가 있었던 페도라 36에서 캡쳐한 것으로 버전이 다르게 보이는 것이다)</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><a style=\"color: #0070d1;\" href=\"https://sunyzero.tistory.com/272\">2020.11.28 - [컴퓨터 관련/리눅스, 유닉스] - Failed to initialize NVML (Fedora 리눅스)</a></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">akmods만 재컴파일하는 경우가 아닌, 아예 nvidia kernel module관련 전부를 재설치하는 방법을 살펴보자. 먼저 현재 커널 버전에 맞는 nvidia kernel module(kmod-nvidia)가 존재하는지 확인해본다.</p>\n<pre id=\"code_1729402606546\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ uname -r\n5.17.9-300.fc36.x86_64\n\n$ rpm -qa kmod-nvidia*\nkmod-nvidia-5.17.5-200.fc36.x86_64-510.68.02-1.fc36.x86_64\nkmod-nvidia-5.17.6-300.fc36.x86_64-510.68.02-1.fc36.x86_64</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">위에 보면 현재 커널 버전은 5.17.9-300.fc36.x86_64인데, kmod-nvidia는 5.17.6과 5.17.5만 존재하고 있다. 원래 kmod-nvidia는 따로 설치되는 커널이 아니라 akmod-nvidia가 자동으로 빌드해서 만드는 패키지이므로 akmod-nvidia가 문제가 있는 경우가 많다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">따라서 akmod-nvidia 패키지가 설치되어있는지 확인하고 삭제되어있거나 혹은 깨져있다면 재설치 해준다. 예를 들어 기존의 파일을 삭제하고 재설치하려면 아래와 같이 명령한다. (명령시 관리자 권한인 root로 명령한다)</p>\n<pre id=\"code_1729402631888\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code># dnf remove akmod-nvidia\n... 중간에 y 해주거나 아니면 애초에 dnf에 -y 옵션을 추가해서 명령\n\n# dnf install akmod-nvidia</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">akmod-nvidia는 패키지를 빌드하기 때문에 처음 설치 후 X윈도우 작동시에 몇십초에서 2~3분 정도 시간이 걸릴 수 있다. 따라서 반응이 없어도 좀 끈기를 가지고 기다려보자. 아무리 오래 걸려도 5분 이상은 걸리지는 않는다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">모든 작업을 완료하고 로그인이 잘 되었다면 rpm -qa kmod-nvidia* 에 새로운 커널 버전에 맞는 패키지가 자동으로 생성되어있을 것이다. (예를 들어 아래 화면은 kmod-nvidia-5.17.9-300 버전에 맞는 파일이 생성된 화면이다)</p>\n<pre id=\"code_1729402680576\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ rpm -qa kmod-nvidia*\nkmod-nvidia-5.17.5-200.fc36.x86_64-510.68.02-1.fc36.x86_64\nkmod-nvidia-5.17.6-300.fc36.x86_64-510.68.02-1.fc36.x86_64\nkmod-nvidia-5.17.9-300.fc36.x86_64-510.68.02-2.fc36.x86_64</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">만일 5~10분이상 걸려도 화면이 안나오거나 문제가 생겼다면 CTRL-ALT-F5나 F6 정도로 다른 console을 열고 root로 로그인한 뒤에 journalctl -xe 로 확인해보자.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">5.1. 그래픽 화면이 잘 작동하지 않는 경우(grubby로 확인)</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">간혹 모든 설정을 제대로 했음에도 불구하고 제대로 작동하지 않는 경우가 있다. 이런 경우는 boot loader 설정을 건드린 경우가 대부분이다. 따라서 boot loader인 grub2 설정을 확인하고 수정하는 방법을 알아둘 필요가 있다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Fedora나 RedHat계열에서는 boot loader를 관리하는 아주 편리한 툴인 grubby가 있다. grubby로 현재 부트 설정을 모두 보려면<span>&nbsp;</span><span style=\"background-color: #c0d1e7;\">grubby --info=ALL</span><span>&nbsp;</span>로 명령하면 된다. ALL 대신에 0을 넣으면 0번째 커널 버전(가장 최근 커널)을 보여준다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">grubby를 사용하지 않는 경우에는 수동으로 커널 엔트리 설정을 찾아야 하는데, 커널 엔트리 설정 파일은 다음과 같다.</p>\n<pre id=\"code_1729402708652\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>/etc/default/grub : 부트 로더인 GRUB의 기본 설정 파일\n\n/boot/loader/entries/*.conf : kernel 버전별 커널 설정 파일 (grubby가 보여주는 설정 ★)</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">특히 /boot/loader/entries에 존재하는 파일들의 내용을 보면 아래와 같이 되어있다. (아래는 과거 Fedora 36에서 캡쳐한 것이다)</p>\n<pre id=\"code_1729402723374\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code># ls /boot/loader/entries/\n1dbd4d32815b4ee7bbe3f2a41f9317c8-0-rescue.conf\n1dbd4d32815b4ee7bbe3f2a41f9317c8-5.17.5-200.fc36.x86_64.conf\n1dbd4d32815b4ee7bbe3f2a41f9317c8-5.17.6-300.fc36.x86_64.conf\n1dbd4d32815b4ee7bbe3f2a41f9317c8-5.17.9-300.fc36.x86_64.conf\n\n# cd /boot/loader/entries/\n# cat 1dbd4d32815b4ee7bbe3f2a41f9317c8-5.17.9-300.fc36.x86_64.conf\ntitle Fedora Linux (5.17.9-300.fc36.x86_64) 36 (Server Edition)\nversion 5.17.9-300.fc36.x86_64\nlinux /vmlinuz-5.17.9-300.fc36.x86_64\ninitrd /initramfs-5.17.9-300.fc36.x86_64.img $tuned_initrd\noptions root=/dev/mapper/fedora00-root ro rd.lvm.lv=fedora00/root systemd.unified_cgroup_hierarchy=0 $tuned_params rd.driver.blacklist=nouveau modprobe.blacklist=nouveau nvidia-drm.modeset=1 initcall_blacklist=simpledrm_platform_driver_init systemd.unit=multi-user.target\ngrub_users $grub_users\ngrub_arg --unrestricted\ngrub_class fedora</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">위의 경우 options에 systemd.unit=multi-user.target이 설정되어있기 때문에 부팅하면서 자동으로 그래픽이 로딩되지 않는 것이다. 이런 문제를 없애려면 grubby의 --remove-args 옵션을 사용할수도 있고, 아니면 vim 에디터로 해당 파일을 열어서 해당 부분을 삭제하면 된다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">히스토리</h2>\n<p data-ke-size=\"size16\">2024.10.19 초고</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #333333; text-align: start;\" data-ke-size=\"size26\">레퍼런스</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"color: #000000;\">[1] RPM Fusion configuration,&nbsp;</span><a href=\"https://rpmfusion.org/Configuration\">https://rpmfusion.org/Configuration</a></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">[2] RPM Fusion nvidia driver, <a href=\"https://rpmfusion.org/Howto/NVIDIA\">https://rpmfusion.org/Howto/NVIDIA</a></p>",
        "contentSnippet": "이 문서는 페도라 리눅스에서 nvidia 드라이버를 손쉽게 설치하고, 커널 업데이트시 자동으로 드라이버를 업데이트 및 빌드하는 akmods 기반의 드라이버 설치를 다룬다. 여기서 사용된 리눅스는 Fedora Linux 40 버전을 기준으로 작성하였다. 일반적으로 페도라 35 이후는 이 문서의 방법대로 작업하면 된다. 만일 페도라 34 이전의 구형 버전이라면 다른 방법을 사용해야 하는데, 오래된 페도라 버전의 경우는 굳이 문서화가 필요 없다고 판단되어 생략하였다.\n \n명령어 권한\n이 문서에서 내리는 모든 명령어는 root 권한으로 작업한다. 따라서 터미널을 열고 \"su -\" 를 실행하여 root로 권한을 변경하는 것을 권장한다. (sudo 권한이 주어져 있다면 sudo를 사용해도 되지만 계속 sudo를 타이핑하려면 귀찮으니까 su - 를 권장한다)\n명령어는 아래 순서대로 작업하도록 하고, 특별히 주의해야 하는 부분은 형광색으로 색칠 해두었으니 참고하자.\n \n1. 커널 및 관련 패키지를 업데이트\n커널의 버전을 lock할 수 있는 고급 숙련자는 이 과정이 필요없지만 일반적인 사용자는 커널 버전 및 관련 패키지를 최신 버전으로 업데이트하고 재부팅해야 한다. 이를 위해 아래와 같은 명령어를 사용한다.\ndnf -y update\n \ndnf update 명령이 성공한 뒤에 kernel module이나 ramdisk가 리빌드 되는 경우가 있을 수 있기 때문에 약 1분 정도 기다렸다가 reboot 한다.(잊지말고 리부트하자) 리부트는 터미널에서 reboot라고 명령하면 된다.\nreboot\n \n2. rpmfusion 저장소 활성화\n설치할 nvidia driver를 제공하는 곳이 rpmfusion repository이므로 해당 저장소를 활성화 해야 한다. 활성화 방법은 저장소 설정파일 패키지를 설치하는 것으로 아래 명령어를 실행하면 된다. \n원래 아래 dnf install 명령어는 패키지를 한 라인에 붙어 써도 되지만 가독성이 안좋아서 2개의 명령어로 쪼개놓았다. 아래 2개의 명령어는 길기 때문에 직접 타이핑하다가 오타 가능성이 높으니, 복사해서 붙어넣기를 권장한다. [1]\ndnf -y install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm\n\ndnf -y install https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm\n \n저장소는 금방 설치가 끝날 것이다. 설치 완료 후 cache를 업데이트 하기 위해 아래의 makecache 명령어를 실행한다. 사실 makecache는 안해도 상관은 없지만 하는 편이 좋기는 하다.\ndnf makecache\n \n\n\n\n3. nvidia 드라이버 설치\n원문 = https://rpmfusion.org/Howto/NVIDIA\nnvidia 드라이버 설치는 akmod-nvidia 와 xorg-x11-drv-nvidia-cuda를 설치하면 끝이다. 아래의 명령어를 실행한다. (앞서와 마찬가지로 복붙하자)\ndnf -y install akmod-nvidia xorg-x11-drv-nvidia-cuda\n위 명령어로 설치하면 akmod-nvidia와 의존성이 있는 수십 개의 패키지가 같이 설치될 것이다. 주의할 점은 akmods 설치 후 nvidia driver를 빌드하기 위해 C 컴파일러가 실행되므로 CPU 사용량이 갑자기 올라갈 것이다. 드라이버 빌드는 시스템 성능에 따라 다르지만 대개 1분에서 최대 5분까지도 걸린다. 따라서 즉각 reboot하면 절대로 안되고, 약 1~3분 정도는 기다려야 한다. 무작정 기다리기보다는 빌드가 언제 끝나는지는 top을 실행해보면 쉽게 알 수 있다.\ndnf로 akmod-nvidia를 설치 완료 후, top을 실행하면 백그라운드에서 dnf나 akmods, cc1 등의 각종 프로세스들이 새로 실행되면서 CPU 사용량이 올라가는 것을 볼 수 있다. 그리고 1~2분 정도 지나면 dnf나 akmods, cc1 등의 프로그램이 종료되고 CPU 사용량이 뚝 떨어질 것이다. CPU 사용량이 뚝 떨어진 것을 확인한 후에 reboot하면 정확하다. 참고로 라이젠 5000번 CPU에서는 약 1분 30초 정도 시간이 걸렸다. (만일 드라이버 빌드가 되기 전에 재부팅하더라도 재부팅 과정에서 드라이버를 다시 빌드하기 때문에 문제가 없을 수도 있다. 하지만 안전성을 위해 되도록이면 기다렸다가 재부팅하는 것이 좋다.)\n더보기\n\nakmods 명령어\n차후 수동으로 akmods로 작동되는 드라이버를 직접 rebuild하려면 \"akmods --rebuild --force\"명령을 내리면 즉각 리빌드하도록 되어있다. 자세한 사용법은 akmods --help 명령으로 확인하도록 하자.\n \n4. 재부팅 후 nvidia 드라이버 확인\n재부팅하면 nvidia 드라이버가 올라왔는지 2가지 방법으로 확인할 수 있다. 첫번째 방법은 터미널에서 nvidia-smi를 실행하는 것이다. 아래는 실제 페도라 40 시스템에서 akmod-nvidia 설치 후 재부팅한 뒤에 nvidia-smi를 실행한 것이다.\n$ nvidia-smi \nSat Oct 19 19:45:55 2024       \n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 560.35.03              Driver Version: 560.35.03      CUDA Version: 12.6     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 3080        Off |   00000000:3C:00.0  On |                  N/A |\n|  0%   32C    P8             16W /  340W |     414MiB /  10240MiB |      3%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n                                                                                         \n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|    0   N/A  N/A      4709      G   /usr/libexec/Xorg                             163MiB |\n|    0   N/A  N/A      5433      G   /usr/bin/gnome-shell                          203MiB |\n+-----------------------------------------------------------------------------------------+\n두번째 방법은 터미널에서 nvidia-settings를 실행하는 것이다. 이 프로그램은 nvidia 제어판의 리눅스 버전이며 아래와 같이 나타난다. (터미널에서 실행하지 않고 Super키(윈도 키) 누르고 nvidia만 쳐도 Nvidia 서버 설정인가? 하는 이름으로 프로그램이 보일 것이다)\nnvidia-settings\n\n\n \n5. Fedora 커널 업데이트 후 nvidia가 작동하지 않는 경우\n간혹 Fedora 커널 업데이트 후에 akmod가 버전에 맞는 nvidia kernel module을 생성하지 못하여 그래픽이 잘 안나오는 경우에는 다음과 같이 작업한다. 이 방법 외에 akmods가 제대로 설치되어있다는 가정하에 akmods만 재컴파일하는 방법도 있다. 이는 아래 Failed to initialize NVML 에러를 해결하는 글에 설명되어있다. (아래 과정은 과거 문제가 있었던 페도라 36에서 캡쳐한 것으로 버전이 다르게 보이는 것이다)\n2020.11.28 - [컴퓨터 관련/리눅스, 유닉스] - Failed to initialize NVML (Fedora 리눅스)\nakmods만 재컴파일하는 경우가 아닌, 아예 nvidia kernel module관련 전부를 재설치하는 방법을 살펴보자. 먼저 현재 커널 버전에 맞는 nvidia kernel module(kmod-nvidia)가 존재하는지 확인해본다.\n$ uname -r\n5.17.9-300.fc36.x86_64\n\n$ rpm -qa kmod-nvidia*\nkmod-nvidia-5.17.5-200.fc36.x86_64-510.68.02-1.fc36.x86_64\nkmod-nvidia-5.17.6-300.fc36.x86_64-510.68.02-1.fc36.x86_64\n위에 보면 현재 커널 버전은 5.17.9-300.fc36.x86_64인데, kmod-nvidia는 5.17.6과 5.17.5만 존재하고 있다. 원래 kmod-nvidia는 따로 설치되는 커널이 아니라 akmod-nvidia가 자동으로 빌드해서 만드는 패키지이므로 akmod-nvidia가 문제가 있는 경우가 많다.\n따라서 akmod-nvidia 패키지가 설치되어있는지 확인하고 삭제되어있거나 혹은 깨져있다면 재설치 해준다. 예를 들어 기존의 파일을 삭제하고 재설치하려면 아래와 같이 명령한다. (명령시 관리자 권한인 root로 명령한다)\n# dnf remove akmod-nvidia\n... 중간에 y 해주거나 아니면 애초에 dnf에 -y 옵션을 추가해서 명령\n\n# dnf install akmod-nvidia\nakmod-nvidia는 패키지를 빌드하기 때문에 처음 설치 후 X윈도우 작동시에 몇십초에서 2~3분 정도 시간이 걸릴 수 있다. 따라서 반응이 없어도 좀 끈기를 가지고 기다려보자. 아무리 오래 걸려도 5분 이상은 걸리지는 않는다.\n모든 작업을 완료하고 로그인이 잘 되었다면 rpm -qa kmod-nvidia* 에 새로운 커널 버전에 맞는 패키지가 자동으로 생성되어있을 것이다. (예를 들어 아래 화면은 kmod-nvidia-5.17.9-300 버전에 맞는 파일이 생성된 화면이다)\n$ rpm -qa kmod-nvidia*\nkmod-nvidia-5.17.5-200.fc36.x86_64-510.68.02-1.fc36.x86_64\nkmod-nvidia-5.17.6-300.fc36.x86_64-510.68.02-1.fc36.x86_64\nkmod-nvidia-5.17.9-300.fc36.x86_64-510.68.02-2.fc36.x86_64\n만일 5~10분이상 걸려도 화면이 안나오거나 문제가 생겼다면 CTRL-ALT-F5나 F6 정도로 다른 console을 열고 root로 로그인한 뒤에 journalctl -xe 로 확인해보자.\n \n5.1. 그래픽 화면이 잘 작동하지 않는 경우(grubby로 확인)\n간혹 모든 설정을 제대로 했음에도 불구하고 제대로 작동하지 않는 경우가 있다. 이런 경우는 boot loader 설정을 건드린 경우가 대부분이다. 따라서 boot loader인 grub2 설정을 확인하고 수정하는 방법을 알아둘 필요가 있다.\nFedora나 RedHat계열에서는 boot loader를 관리하는 아주 편리한 툴인 grubby가 있다. grubby로 현재 부트 설정을 모두 보려면 grubby --info=ALL 로 명령하면 된다. ALL 대신에 0을 넣으면 0번째 커널 버전(가장 최근 커널)을 보여준다.\ngrubby를 사용하지 않는 경우에는 수동으로 커널 엔트리 설정을 찾아야 하는데, 커널 엔트리 설정 파일은 다음과 같다.\n/etc/default/grub : 부트 로더인 GRUB의 기본 설정 파일\n\n/boot/loader/entries/*.conf : kernel 버전별 커널 설정 파일 (grubby가 보여주는 설정 ★)\n특히 /boot/loader/entries에 존재하는 파일들의 내용을 보면 아래와 같이 되어있다. (아래는 과거 Fedora 36에서 캡쳐한 것이다)\n# ls /boot/loader/entries/\n1dbd4d32815b4ee7bbe3f2a41f9317c8-0-rescue.conf\n1dbd4d32815b4ee7bbe3f2a41f9317c8-5.17.5-200.fc36.x86_64.conf\n1dbd4d32815b4ee7bbe3f2a41f9317c8-5.17.6-300.fc36.x86_64.conf\n1dbd4d32815b4ee7bbe3f2a41f9317c8-5.17.9-300.fc36.x86_64.conf\n\n# cd /boot/loader/entries/\n# cat 1dbd4d32815b4ee7bbe3f2a41f9317c8-5.17.9-300.fc36.x86_64.conf\ntitle Fedora Linux (5.17.9-300.fc36.x86_64) 36 (Server Edition)\nversion 5.17.9-300.fc36.x86_64\nlinux /vmlinuz-5.17.9-300.fc36.x86_64\ninitrd /initramfs-5.17.9-300.fc36.x86_64.img $tuned_initrd\noptions root=/dev/mapper/fedora00-root ro rd.lvm.lv=fedora00/root systemd.unified_cgroup_hierarchy=0 $tuned_params rd.driver.blacklist=nouveau modprobe.blacklist=nouveau nvidia-drm.modeset=1 initcall_blacklist=simpledrm_platform_driver_init systemd.unit=multi-user.target\ngrub_users $grub_users\ngrub_arg --unrestricted\ngrub_class fedora\n위의 경우 options에 systemd.unit=multi-user.target이 설정되어있기 때문에 부팅하면서 자동으로 그래픽이 로딩되지 않는 것이다. 이런 문제를 없애려면 grubby의 --remove-args 옵션을 사용할수도 있고, 아니면 vim 에디터로 해당 파일을 열어서 해당 부분을 삭제하면 된다.\n \n \n \n히스토리\n2024.10.19 초고\n \n레퍼런스\n[1] RPM Fusion configuration, https://rpmfusion.org/Configuration\n[2] RPM Fusion nvidia driver, https://rpmfusion.org/Howto/NVIDIA",
        "guid": "http://sunyzero.tistory.com/304",
        "categories": [
          "컴퓨터 관련/리눅스(유닉스) 일반",
          "akmods",
          "fedora linux nvidia",
          "nvidia-settings",
          "nvidia-smi",
          "rpmfusion fedora",
          "리눅스",
          "리눅스 그래픽 드라이버 설치",
          "페도라 리눅스 엔비디아"
        ],
        "isoDate": "2024-10-19T11:39:32.000Z"
      }
    ]
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "가성비 있는 웹 서비스 호스팅 Fly.IO 사용하기",
        "link": "http://daddynkidsmakers.blogspot.com/2024/10/flyio.html",
        "pubDate": "2024-10-21T02:21:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;가성비 있는 웹 서비스 호스팅이 가능한 Fly.IO 사용방법을 정리한다. 이 글은 다음 글의 후속편으로, DNA, 호스팅 등 개념은 이 글을 참고하길 바란다.</div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://daddynkidsmakers.blogspot.com/2020/09/dns.html\">간단하게 포트포워드로 외부 접속 가능한 공개 웹서버 인터넷 서비스 및 DNS 설정 방법</a></li></ul><div><br /></div><div><b>머리말</b></div><div>FLY.IO는 Kurt Mackey가 공동 설립한 회사로 개발되었다. 그는 이전에 Compose.io라는 데이터베이스 호스팅 플랫폼을 공동 창업했으며, 이를 IBM에 매각한 경험이 있다. FLY.IO는 주로 개발자 친화적인 글로벌 애플리케이션 호스팅 서비스를 제공하기 위해 설립되었다.</div><div><div><br /></div><div>FLY.IO의 장단점은 다음과 같다.</div><div><br /></div><div>장점</div><div>1. 글로벌 배포: 애플리케이션을 여러 지역에 쉽게 배포할 수 있어 지리적으로 분산된 사용자에게 낮은 지연 시간을 제공한다.</div><div>2. 간단한 사용성: 간단한 명령어로 애플리케이션을 배포할 수 있으며, 설정도 비교적 쉬운 편이다.</div><div>3. 자동 확장: 필요에 따라 인프라를 자동으로 확장할 수 있어, 트래픽이 급증할 때도 유연하게 대응 가능하다.</div><div>4. 애플리케이션 근접 배치: 사용자 근처에 애플리케이션을 배치할 수 있어 성능 향상과 지연 시간 감소에 효과적이다.</div><div>5. 무료 계층 제공: 제한적이지만 무료로 사용할 수 있는 계층을 제공해, 작은 프로젝트나 테스트에 유용하다. 평소에는 배포 앱이 비활성화되었다가 URL 접속하면 자동 활성화되는&nbsp;Pay As You Go Plan (기존 Hobby Plan) 을 지원한다.</div><div><br /></div><div>단점</div><div>1. 제한된 문서화: 다른 클라우드 서비스에 비해 문서화가 부족한 편이며, 일부 기능에 대한 정보가 불충분할 수 있다.</div><div>2. 복잡한 설정: 고급 기능을 사용할 때 설정이 복잡해질 수 있으며, 초보자에게는 어려울 수 있다.</div><div>3. 비교적 작은 생태계: AWS나 Google Cloud와 비교하면 생태계가 작아, 지원되는 서비스나 도구가 제한적이다.</div><div>4. 무료 계층 한계: 무료 계층의 자원이 제한적이므로, 트래픽이 많은 애플리케이션에는 적합하지 않다.</div><div>5. 서비스 안정성: 일부 사용자들은 특정 상황에서 예기치 않은 중단을 경험할 수 있다고 보고했다.</div></div><div><br /></div><div><b>환경 설치</b></div><div><div>FLY.IO 사용법을 다음과 같다.</div><div><br /></div><div>1. 회원가입 및 설치</div><div>FLY.IO 웹사이트(https://fly.io)에 접속하여 회원가입을 한다.</div></div><div><br /></div><div>2. <a href=\"https://github.com/PowerShell/PowerShell/releases/tag/v7.4.5\">파워셀</a>에서 설치 스크립트 실행</div><div><div>pwsh -Command \"iwr https://fly.io/install.ps1 -useb | iex\"</div></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEj7bXEiHPGREcRvcj4T4Z8wW7LHwg8YYe_P58WzUh2AcH3vyQBzY_89PJIfF5bkOu5zZ0GetBFHS0F8GibVoUJwdhkOKyp2qfuC260vqAd1LQEzVQxvZlv54yV4rxdNaAjiMicCJC4ovLw7-fK7WN3NB7YZwMq_-qLYENd0LUsFexrQ7WYvq_-LQGB8f_mp\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"66\" data-original-width=\"642\" height=\"33\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEj7bXEiHPGREcRvcj4T4Z8wW7LHwg8YYe_P58WzUh2AcH3vyQBzY_89PJIfF5bkOu5zZ0GetBFHS0F8GibVoUJwdhkOKyp2qfuC260vqAd1LQEzVQxvZlv54yV4rxdNaAjiMicCJC4ovLw7-fK7WN3NB7YZwMq_-qLYENd0LUsFexrQ7WYvq_-LQGB8f_mp\" width=\"320\" /></a></div><br />3. 터미널에서 로그인 실행</div><div>fly auth login</div><div><br /></div><div>로그인 결과는 다음과 같다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEj268pgDk7QHZV8lDFK--DxvWZr_7yiV1VkIiisKy69AKxN84i5ce-UA0s9CcJtJKOGnX-8HUwq-26W-V2V9ZF1EyLHXPQo2Ur_k8kLbgGl62QT6adIbJD8GmMrnBne4X8koqa3Tt4hYxWYlJPDlrscfG5SLWQ-oOMbJ7ONl-3dtj_95cBzsDRMgL4IU__o\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"906\" data-original-width=\"1022\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEj268pgDk7QHZV8lDFK--DxvWZr_7yiV1VkIiisKy69AKxN84i5ce-UA0s9CcJtJKOGnX-8HUwq-26W-V2V9ZF1EyLHXPQo2Ur_k8kLbgGl62QT6adIbJD8GmMrnBne4X8koqa3Tt4hYxWYlJPDlrscfG5SLWQ-oOMbJ7ONl-3dtj_95cBzsDRMgL4IU__o\" width=\"271\" /></a></div><div><br /></div>4. Github 로그인함<br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgsb6aWz5dHoOr_e-diTlk--m0cF4VuQ0miT73bmQrZJuHIjdg1WX9yRtbY1bsWarPuK1dZYLCgtBeB-K2PsfW0iZxLoy3FZjnq7kRm3SFyKPKk0eQM9JJzDh2F5FZymVn7tvGrG6qOmW9NiAYLFWOHOFGV9yIt5m-AdoTkxa34yIFD9aIX62xfa5ML6s-y\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"646\" data-original-width=\"983\" height=\"210\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgsb6aWz5dHoOr_e-diTlk--m0cF4VuQ0miT73bmQrZJuHIjdg1WX9yRtbY1bsWarPuK1dZYLCgtBeB-K2PsfW0iZxLoy3FZjnq7kRm3SFyKPKk0eQM9JJzDh2F5FZymVn7tvGrG6qOmW9NiAYLFWOHOFGV9yIt5m-AdoTkxa34yIFD9aIX62xfa5ML6s-y\" width=\"320\" /></a></div><div><b><br /></b></div><div><b>소스코드에서 데모앱 빌드, 배포 및 실행</b></div><div>FLY.IO에서 제공하는 데모앱을 간단히 실행해 보자.&nbsp;</div><div>다음 예제를 터미널에서 실행한다.</div><div>git clone https://github.com/fly-apps/hello-fly.git</div><div>cd hello-fly</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgqO6OfjN0FxR2WhzHGAhc593d0veaUwOqpmUulLFdgT3hmsHNZBVM3vraC296n0zqrNfeca2yX1F8wGiPemOUyqcSohKnIPH7SVATeU8mxJdkTHGa0Wr0aqwPMHUVky3k_MIAX5F97a-9PjWciy11nFLOtOBkSJ01iFJ7DFynViXWq-4hZZHjusB6UxKEF\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"657\" data-original-width=\"712\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgqO6OfjN0FxR2WhzHGAhc593d0veaUwOqpmUulLFdgT3hmsHNZBVM3vraC296n0zqrNfeca2yX1F8wGiPemOUyqcSohKnIPH7SVATeU8mxJdkTHGa0Wr0aqwPMHUVky3k_MIAX5F97a-9PjWciy11nFLOtOBkSJ01iFJ7DFynViXWq-4hZZHjusB6UxKEF\" width=\"260\" /></a></div></div><div class=\"separator\" style=\"clear: both; text-align: center;\">코드 예시</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div><div>앱을 배포하고 실행한다.</div><div>fly launch --now</div><div><br /></div><div>그 결과, 도커를 자동 빌드한다. 다음은 이미지 스크립트이다.&nbsp;</div><div><div><span style=\"font-size: x-small;\">FROM node:16.19.0-slim</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">WORKDIR /usr/src/app</span></div><div><span style=\"font-size: small;\">COPY package*.json ./</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">RUN npm install</span></div><div><span style=\"font-size: x-small;\">COPY . .</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">EXPOSE 8080</span></div><div><span style=\"font-size: x-small;\">CMD [ \"npm\", \"start\" ]</span></div></div><div><br /></div><div>도커 이미지는 자동으로 FLY.IO 클라우드에 업로드되고, 설정파일대로 웹 인터페이스를 연결한다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEis7_Ti1O6Dt8SkFeGQfse_16Ng_DnOwWnH8Y4Mpv-Qlhz6McwcgCESSODTCB3AGYJcdDdGfGM1Npgytw5Plqlf8PMktFbbK9j7DhxyyiFUIfT-Olt4Ma-Wm-q73cgTb8lIoyneeAUgoRlPZgzbu7Z4AaCbpwrIAjeAbOnTZc53Iu-wIQlrwNd2vT6-VpdJ\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"548\" data-original-width=\"751\" height=\"293\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEis7_Ti1O6Dt8SkFeGQfse_16Ng_DnOwWnH8Y4Mpv-Qlhz6McwcgCESSODTCB3AGYJcdDdGfGM1Npgytw5Plqlf8PMktFbbK9j7DhxyyiFUIfT-Olt4Ma-Wm-q73cgTb8lIoyneeAUgoRlPZgzbu7Z4AaCbpwrIAjeAbOnTZc53Iu-wIQlrwNd2vT6-VpdJ=w400-h293\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">도커 이미지 생성 화면</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiVZIiIyCXbK6ElEISi9mkm8ztwtUcmcSieREiH1e8nNdxoJuVGamyvwRhCF1oihaFlNKeJ0NZziCmpuFzf5uuapwmQjjWuGCbjt9IEUCuKFdY-lK-6uqmbIwUCDm6ukstXtBKWhR0KdUcwQORtRcJdZ4ZbB8c1Fp8k0JGYnZ9Oydb_KxnITKNqIVPjWB7E\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"726\" data-original-width=\"955\" height=\"304\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiVZIiIyCXbK6ElEISi9mkm8ztwtUcmcSieREiH1e8nNdxoJuVGamyvwRhCF1oihaFlNKeJ0NZziCmpuFzf5uuapwmQjjWuGCbjt9IEUCuKFdY-lK-6uqmbIwUCDm6ukstXtBKWhR0KdUcwQORtRcJdZ4ZbB8c1Fp8k0JGYnZ9Oydb_KxnITKNqIVPjWB7E=w400-h304\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">Fly.IO의 웹 앱 배포된 모습</div></div><div><br /></div>여기서 배포된 링크를 클릭한다.</div><div><a href=\"https://hello-fly-divine-river-1002.fly.dev/\">https://hello-fly-divine-river-1002.fly.dev/</a></div><div><br /></div><div>결과는 다음과 같다. 웹 앱이 정상 서비스된 것을 확인할 수 있다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEi9bZxLRjeZo_-ZwHxpcKsz5N9uFTcuy0oVfTgEncwDuEhiRubju312BpWrgHTma95L2S1Nv7v98Vx0UH9YHIXDro11-2Ne6fZTuYyRkeEDdp1RKLjl7LLyg8TDc_X3qp97GLHzHuNooRoExMd-HoIH12JjWNmNozVq-lEFL_0r2LMKBRI_ALagzC7sCJCf\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"249\" data-original-width=\"651\" height=\"122\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEi9bZxLRjeZo_-ZwHxpcKsz5N9uFTcuy0oVfTgEncwDuEhiRubju312BpWrgHTma95L2S1Nv7v98Vx0UH9YHIXDro11-2Ne6fZTuYyRkeEDdp1RKLjl7LLyg8TDc_X3qp97GLHzHuNooRoExMd-HoIH12JjWNmNozVq-lEFL_0r2LMKBRI_ALagzC7sCJCf\" width=\"320\" /></a></div><div><br /></div><div><b>이미 개발된 도커 이미지에서 데모앱 빌드, 배포 및 실행</b></div><div>Fly Launch를 사용해 도커 이미지로 앱을 배포할 수 있다. 미리 빌드된 Docker이미지를 이용해 데모앱을 만들고 배포해 본다.&nbsp;</div></div></div><div><br /></div><div>도커가 설치되었다는 가정 하에 다음 명령을 실행한다.</div><div>fly launch --image flyio/hellofly:latest</div><div>fly launch</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiN-ej7NUOghMKRIc7r4N80IRIigmY6e7rLdWStK9WxaKPsHHFeU3O9b_rQmRR1Oc4x3ID250OOzyNW4FzVsgvvE1D0wQBgjV41vGmX4foVYptsb4qhRDElsM6yo-D-SfGO49hssvQQ4xEYkr75DY15B80v2ijbHOP2qUkIz9x3Uvg2zzjnFy8RM5ZE5ndX\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"433\" data-original-width=\"593\" height=\"293\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiN-ej7NUOghMKRIc7r4N80IRIigmY6e7rLdWStK9WxaKPsHHFeU3O9b_rQmRR1Oc4x3ID250OOzyNW4FzVsgvvE1D0wQBgjV41vGmX4foVYptsb4qhRDElsM6yo-D-SfGO49hssvQQ4xEYkr75DY15B80v2ijbHOP2qUkIz9x3Uvg2zzjnFy8RM5ZE5ndX=w400-h293\" width=\"400\" /></a></div><br /></div><div><div>이 결과 fly.toml 설정파일이 생성된다. 참고로, 웹 인터페이스는 다음과 같은 fly.toml 구성파일을 통해 설정된다.&nbsp;</div><div><div>app = 'fly-io-delicate-surf-7133'</div><div>primary_region = 'nrt'</div><div><br /></div><div>[http_service]</div><div>&nbsp; internal_port = 8080</div><div>&nbsp; force_https = true</div><div>&nbsp; auto_stop_machines = 'stop'</div><div>&nbsp; auto_start_machines = true</div><div>&nbsp; min_machines_running = 0</div><div>&nbsp; processes = ['app']</div><div><br /></div><div>[[vm]]</div><div>&nbsp; memory = '1gb'</div><div>&nbsp; cpu_kind = 'shared'</div><div>&nbsp; cpus = 1</div></div></div><div><br /></div><div>앱을 배포한 후 상태를 확인한다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjO-LQTl8X5gYguPcdoQJmOTDi3RSmdguOcENohK5aozPNXzT8xuTSN9OL_Kc7y9pg9wUWqI9sQd4lUfVvSmDr3vfMywvLvHVBPj0xvtjYnr6NVusPU-QXfBoaeydTvNn99mKr6FIzyIfIw_5uo6k-JBzQE-Da--Jc-fJLB49t1G0UiBvcZ6I-i89m1cXDo\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"97\" data-original-width=\"335\" height=\"93\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjO-LQTl8X5gYguPcdoQJmOTDi3RSmdguOcENohK5aozPNXzT8xuTSN9OL_Kc7y9pg9wUWqI9sQd4lUfVvSmDr3vfMywvLvHVBPj0xvtjYnr6NVusPU-QXfBoaeydTvNn99mKr6FIzyIfIw_5uo6k-JBzQE-Da--Jc-fJLB49t1G0UiBvcZ6I-i89m1cXDo\" width=\"320\" /></a></div>앱 링크를 클릭해 오픈하거나 다음 명령을 이용해 방문한다.</div><div><div>fly apps open /fred</div></div><div><br /></div><div>그럼, 다음 웹 페이지를 확인할 수 있다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiyhG9a9fWOvJlduCnFpShJZKcRkWigYMzGM5wNJw2f_ltWijiZUz1M5dr55slcfjWfdCWGupZoynT2BiWDO3DQIGxUl2Ou1pmKY0TFYosOPmi7_Yi2rcLJZHzA3Lwo6_e_eVSslqLMK6-frnox3JhsRZGUTSiJkIUNzfq7YLnBDjnTbSDQEd5I0rmS1T0W\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"212\" data-original-width=\"673\" height=\"101\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiyhG9a9fWOvJlduCnFpShJZKcRkWigYMzGM5wNJw2f_ltWijiZUz1M5dr55slcfjWfdCWGupZoynT2BiWDO3DQIGxUl2Ou1pmKY0TFYosOPmi7_Yi2rcLJZHzA3Lwo6_e_eVSslqLMK6-frnox3JhsRZGUTSiJkIUNzfq7YLnBDjnTbSDQEd5I0rmS1T0W\" width=\"320\" /></a></div><div><br /></div>이외, 변경사항 배포는 fly deploy, 데모 앱 삭제는 fly apps destory 명령을 사용할 수 있다.<br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjj0EcdEYkpgsN94eDalQeOae-GCcR1c6lsPlgIe4MoS_opQvoAc4nKovJdyTUlIO-1VIlm5cZVDQDLOOuQxa5QkDOJwpmSqQA_MVxX39R3Q9FD_uIqGbFGlZN9WFROZ0CCTGkrWgxpFMQFZ4V0fyRKs0e0Uhwz34n1seH0FCgc1VRTTChXFTokxXJdWNrS\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"114\" data-original-width=\"384\" height=\"95\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjj0EcdEYkpgsN94eDalQeOae-GCcR1c6lsPlgIe4MoS_opQvoAc4nKovJdyTUlIO-1VIlm5cZVDQDLOOuQxa5QkDOJwpmSqQA_MVxX39R3Q9FD_uIqGbFGlZN9WFROZ0CCTGkrWgxpFMQFZ4V0fyRKs0e0Uhwz34n1seH0FCgc1VRTTChXFTokxXJdWNrS\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">변경사항 배포 예</div><br /></div><div><b>원격 터미널 접속</b></div><div>Fly.IO는 SSH 터미널 접속을 제공한다. 다음과 같이, SSH 키를 생성한다.</div><div>ssh-keygen -t rsa -b 4096 -C \"your email@gmail.com\"</div><div><br /></div><div>그럼. id_rsa 암호키가 생성될 것이다.</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjM3dpFa_wywfUruDlxh5MtMNFpOB7lbj6j40S_k-9996Y7ZuPMoFS5PA5e3-xuKu3LlDP-ARKKsvxTI6-r_BcZNBLoLVLxeSzJeLVJ2s-Z45dTQvCYpyC59vPfnQKAIxFb0KypIkrt9OJbO7doEaHTzzSlbm2aumoOOmbXUZTEcXVZ5mfYFRgFeuMRqkxd\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"336\" data-original-width=\"533\" height=\"202\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjM3dpFa_wywfUruDlxh5MtMNFpOB7lbj6j40S_k-9996Y7ZuPMoFS5PA5e3-xuKu3LlDP-ARKKsvxTI6-r_BcZNBLoLVLxeSzJeLVJ2s-Z45dTQvCYpyC59vPfnQKAIxFb0KypIkrt9OJbO7doEaHTzzSlbm2aumoOOmbXUZTEcXVZ5mfYFRgFeuMRqkxd\" width=\"320\" /></a></div><div><br /></div>원격 터미널에 접속한다. 도커 이미지의 리눅스가 접속된 것을 확인할 수 있다.</div><div>fly ssh console</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjmaOb96wFAkf86dQnWbai9TmvdSpgsBqCn4NzeYCU275BVe6S5vvyYzeoSHWk9NLmHKIBBFANR4BpbFUd_2pPuWbgJf42xOqbASHqOTiUcF3Z7sVhUMDkluS74PyWZAp7S5TSS8nak2SWPiX6yw-4ciSLWMUdpBgjCXYmmXN6vlRSXg-gPNiK7MnJC_FZr\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"66\" data-original-width=\"669\" height=\"40\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjmaOb96wFAkf86dQnWbai9TmvdSpgsBqCn4NzeYCU275BVe6S5vvyYzeoSHWk9NLmHKIBBFANR4BpbFUd_2pPuWbgJf42xOqbASHqOTiUcF3Z7sVhUMDkluS74PyWZAp7S5TSS8nak2SWPiX6yw-4ciSLWMUdpBgjCXYmmXN6vlRSXg-gPNiK7MnJC_FZr=w400-h40\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEj4FRt50srOu7ZLJhBek1J5ITfmuXBYf8PV13Epa4ZyYLFrf0sCxkB0vIVZY4JudoYGZ1aeiXpen-Pm8zzAC51buoS0Mym3f1e-mgO5c-KQsA_fc7D6_pgEV_hhGyYJ8R9WxSeJggbEemcIakcc4qTsKIkmwtj7LRHX8dUAowRTtYe-E1qFYyQX5dgSiuwB\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"453\" data-original-width=\"744\" height=\"244\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEj4FRt50srOu7ZLJhBek1J5ITfmuXBYf8PV13Epa4ZyYLFrf0sCxkB0vIVZY4JudoYGZ1aeiXpen-Pm8zzAC51buoS0Mym3f1e-mgO5c-KQsA_fc7D6_pgEV_hhGyYJ8R9WxSeJggbEemcIakcc4qTsKIkmwtj7LRHX8dUAowRTtYe-E1qFYyQX5dgSiuwB=w400-h244\" width=\"400\" /></a></div></div><div><br /></div><div><b>결론</b></div><div><div>Kurt Mackey는 소프트웨어 엔지니어이자 창업가로, 클라우드 인프라와 개발자 도구 분야에서 주목받는 인물이다. 그는 여러 기술 회사에서 경력을 쌓아왔고, Compose.io 등 두 개의 성공적인 스타트업을 공동 창업했다. 2015년, IBM이 Compose.io를 인수하면서 Mackey는 IBM에서 기술 리더십 역할을 맡았다.&nbsp;</div><div><br /></div><div>Mackey는 오랜 시간 소프트웨어 엔지니어로 활동해왔으며, 주로 인프라 서비스와 클라우드 컴퓨팅에 대한 깊은 전문성을 보유하고 있다. 그의 작업 철학은 개발자가 인프라 관리에 신경 쓰지 않고도 효율적으로 작업할 수 있도록 도와주는 도구와 플랫폼을 제공하는 데 중점을 두고 있다.</div><div><br /></div><div>Kurt Mackey는 기술 커뮤니티 내에서 활발하게 활동하며, 개발자 도구의 발전과 클라우드 기반 서비스의 미래에 대해 꾸준히 발언하고 있다. 그의 비전은 애플리케이션이 물리적 서버나 데이터 센터에 묶이지 않고, 사용자 근처에서 자동으로 최적화되고 배포될 수 있는 환경을 조성하는 것이다.</div></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhZaZ9oBGdLd5IHt5bfIVB6-wLcr4ilX75jUbdvfCSzLg_M1MMd02P2UX4b2ioNf2PLKDuSmb8sqoHRxVXHC4Phn-hWNm-c0p4E4fUZBy7STAL33PxzON5cgrkNjL3eOTQSmxwmwL_fALnS0zeo1br58Ydfei7HfFD0H2g0AMF34BnnVmB9ktm6B1oZniXK\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"200\" data-original-width=\"200\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhZaZ9oBGdLd5IHt5bfIVB6-wLcr4ilX75jUbdvfCSzLg_M1MMd02P2UX4b2ioNf2PLKDuSmb8sqoHRxVXHC4Phn-hWNm-c0p4E4fUZBy7STAL33PxzON5cgrkNjL3eOTQSmxwmwL_fALnS0zeo1br58Ydfei7HfFD0H2g0AMF34BnnVmB9ktm6B1oZniXK\" width=\"240\" /></a></div><br /><br /></div><div><b>레퍼런스</b></div><div><ul style=\"text-align: left;\"><li><a href=\"https://fly.io/docs/getting-started/launch-demo/\">Launch a demo app · Fly Docs</a></li><li><a href=\"https://fly.io/dashboard#\">Dashboard · Fly</a></li></ul></div><div><br /></div></div>",
        "contentSnippet": "이 글은 가성비 있는 웹 서비스 호스팅이 가능한 Fly.IO 사용방법을 정리한다. 이 글은 다음 글의 후속편으로, DNA, 호스팅 등 개념은 이 글을 참고하길 바란다.\n\n간단하게 포트포워드로 외부 접속 가능한 공개 웹서버 인터넷 서비스 및 DNS 설정 방법\n\n\n머리말\nFLY.IO는 Kurt Mackey가 공동 설립한 회사로 개발되었다. 그는 이전에 Compose.io라는 데이터베이스 호스팅 플랫폼을 공동 창업했으며, 이를 IBM에 매각한 경험이 있다. FLY.IO는 주로 개발자 친화적인 글로벌 애플리케이션 호스팅 서비스를 제공하기 위해 설립되었다.\n\n\nFLY.IO의 장단점은 다음과 같다.\n\n\n장점\n1. 글로벌 배포: 애플리케이션을 여러 지역에 쉽게 배포할 수 있어 지리적으로 분산된 사용자에게 낮은 지연 시간을 제공한다.\n2. 간단한 사용성: 간단한 명령어로 애플리케이션을 배포할 수 있으며, 설정도 비교적 쉬운 편이다.\n3. 자동 확장: 필요에 따라 인프라를 자동으로 확장할 수 있어, 트래픽이 급증할 때도 유연하게 대응 가능하다.\n4. 애플리케이션 근접 배치: 사용자 근처에 애플리케이션을 배치할 수 있어 성능 향상과 지연 시간 감소에 효과적이다.\n5. 무료 계층 제공: 제한적이지만 무료로 사용할 수 있는 계층을 제공해, 작은 프로젝트나 테스트에 유용하다. 평소에는 배포 앱이 비활성화되었다가 URL 접속하면 자동 활성화되는 Pay As You Go Plan (기존 Hobby Plan) 을 지원한다.\n\n\n단점\n1. 제한된 문서화: 다른 클라우드 서비스에 비해 문서화가 부족한 편이며, 일부 기능에 대한 정보가 불충분할 수 있다.\n2. 복잡한 설정: 고급 기능을 사용할 때 설정이 복잡해질 수 있으며, 초보자에게는 어려울 수 있다.\n3. 비교적 작은 생태계: AWS나 Google Cloud와 비교하면 생태계가 작아, 지원되는 서비스나 도구가 제한적이다.\n4. 무료 계층 한계: 무료 계층의 자원이 제한적이므로, 트래픽이 많은 애플리케이션에는 적합하지 않다.\n5. 서비스 안정성: 일부 사용자들은 특정 상황에서 예기치 않은 중단을 경험할 수 있다고 보고했다.\n\n\n환경 설치\n\nFLY.IO 사용법을 다음과 같다.\n\n\n1. 회원가입 및 설치\nFLY.IO 웹사이트(https://fly.io)에 접속하여 회원가입을 한다.\n\n\n2. 파워셀에서 설치 스크립트 실행\n\npwsh -Command \"iwr https://fly.io/install.ps1 -useb | iex\"\n\n\n3. 터미널에서 로그인 실행\nfly auth login\n\n\n로그인 결과는 다음과 같다.\n\n\n\n4. Github 로그인함\n\n\n\n소스코드에서 데모앱 빌드, 배포 및 실행\nFLY.IO에서 제공하는 데모앱을 간단히 실행해 보자. \n다음 예제를 터미널에서 실행한다.\ngit clone https://github.com/fly-apps/hello-fly.git\ncd hello-fly\n\n\n\n코드 예시\n\n\n앱을 배포하고 실행한다.\nfly launch --now\n\n\n그 결과, 도커를 자동 빌드한다. 다음은 이미지 스크립트이다. \n\nFROM node:16.19.0-slim\n\n\nWORKDIR /usr/src/app\nCOPY package*.json ./\n\n\nRUN npm install\nCOPY . .\n\n\nEXPOSE 8080\nCMD [ \"npm\", \"start\" ]\n\n\n도커 이미지는 자동으로 FLY.IO 클라우드에 업로드되고, 설정파일대로 웹 인터페이스를 연결한다.\n\n\n도커 이미지 생성 화면\n\n\nFly.IO의 웹 앱 배포된 모습\n\n\n여기서 배포된 링크를 클릭한다.\nhttps://hello-fly-divine-river-1002.fly.dev/\n\n\n결과는 다음과 같다. 웹 앱이 정상 서비스된 것을 확인할 수 있다.\n\n\n\n\n이미 개발된 도커 이미지에서 데모앱 빌드, 배포 및 실행\nFly Launch를 사용해 도커 이미지로 앱을 배포할 수 있다. 미리 빌드된 Docker이미지를 이용해 데모앱을 만들고 배포해 본다. \n\n\n\n도커가 설치되었다는 가정 하에 다음 명령을 실행한다.\nfly launch --image flyio/hellofly:latest\nfly launch\n\n\n\n\n이 결과 fly.toml 설정파일이 생성된다. 참고로, 웹 인터페이스는 다음과 같은 fly.toml 구성파일을 통해 설정된다. \n\napp = 'fly-io-delicate-surf-7133'\nprimary_region = 'nrt'\n\n\n[http_service]\n  internal_port = 8080\n  force_https = true\n  auto_stop_machines = 'stop'\n  auto_start_machines = true\n  min_machines_running = 0\n  processes = ['app']\n\n\n[[vm]]\n  memory = '1gb'\n  cpu_kind = 'shared'\n  cpus = 1\n\n\n\n앱을 배포한 후 상태를 확인한다.\n\n\n앱 링크를 클릭해 오픈하거나 다음 명령을 이용해 방문한다.\n\nfly apps open /fred\n\n\n그럼, 다음 웹 페이지를 확인할 수 있다.\n\n\n\n이외, 변경사항 배포는 fly deploy, 데모 앱 삭제는 fly apps destory 명령을 사용할 수 있다.\n\n변경사항 배포 예\n\n원격 터미널 접속\nFly.IO는 SSH 터미널 접속을 제공한다. 다음과 같이, SSH 키를 생성한다.\nssh-keygen -t rsa -b 4096 -C \"your email@gmail.com\"\n\n\n그럼. id_rsa 암호키가 생성될 것이다.\n\n\n\n원격 터미널에 접속한다. 도커 이미지의 리눅스가 접속된 것을 확인할 수 있다.\nfly ssh console\n\n\n\n\n\n결론\n\nKurt Mackey는 소프트웨어 엔지니어이자 창업가로, 클라우드 인프라와 개발자 도구 분야에서 주목받는 인물이다. 그는 여러 기술 회사에서 경력을 쌓아왔고, Compose.io 등 두 개의 성공적인 스타트업을 공동 창업했다. 2015년, IBM이 Compose.io를 인수하면서 Mackey는 IBM에서 기술 리더십 역할을 맡았다. \n\n\nMackey는 오랜 시간 소프트웨어 엔지니어로 활동해왔으며, 주로 인프라 서비스와 클라우드 컴퓨팅에 대한 깊은 전문성을 보유하고 있다. 그의 작업 철학은 개발자가 인프라 관리에 신경 쓰지 않고도 효율적으로 작업할 수 있도록 도와주는 도구와 플랫폼을 제공하는 데 중점을 두고 있다.\n\n\nKurt Mackey는 기술 커뮤니티 내에서 활발하게 활동하며, 개발자 도구의 발전과 클라우드 기반 서비스의 미래에 대해 꾸준히 발언하고 있다. 그의 비전은 애플리케이션이 물리적 서버나 데이터 센터에 묶이지 않고, 사용자 근처에서 자동으로 최적화되고 배포될 수 있는 환경을 조성하는 것이다.\n\n\n\n\n레퍼런스\n\nLaunch a demo app · Fly Docs\nDashboard · Fly",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-7982409685671607386",
        "isoDate": "2024-10-21T02:21:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": [
      {
        "title": "MySQL Connection Pool 관리 - HikariCP 설정 및 타임아웃 처리",
        "link": "https://cheese10yun.github.io/mysql-connection-pool-timeout/",
        "pubDate": "2024-10-20T16:15:31.000Z",
        "content": "<h2><span id=\"connection-pool이란\">Connection Pool이란?</span></h2><p>애플리케이션에서 MySQL 데이터베이스와의 효율적인 연결을 위해 <strong>커넥션 풀</strong>을 사용합니다. 커넥션 풀은 미리 일정한 수의 데이터베이스 연결을 생성해 두고, 애플리케이션이 필요할 때마다 이 연결들을 재사용함으로써 성능을 향상시키는 기법입니다. 이 방식은 데이터베이스와의 연결을 매번 새로 생성하는 대신 이미 준비된 연결을 재사용하여 애플리케이션의 응답 시간을 줄이는 데 매우 유용합니다.</p><h2><span id=\"java-jdbc와-hikaricp\">Java JDBC와 HikariCP</span></h2><p>Java 애플리케이션에서 가장 널리 사용되는 커넥션 풀 중 하나는 <strong>HikariCP</strong>입니다. HikariCP는 가볍고 빠른 커넥션 풀로, 대규모 트래픽이 발생하는 상황에서도 효율적인 연결 관리를 지원합니다. HikariCP는 <strong>HikariPoolMXBean</strong>과 <strong>HikariConfigMXBean</strong>이라는 JMX(Java Management Extensions)를 통해 커넥션 풀의 상태 및 설정을 관리할 수 있습니다.</p><h3><span id=\"spring-boot에서의-hikaricp-설정과-기본값\">Spring Boot에서의 HikariCP 설정과 기본값</span></h3><table><thead><tr><th>설정 항목</th><th>설명</th><th>기본값</th></tr></thead><tbody><tr><td><strong>maximum-pool-size</strong></td><td>커넥션 풀에서 유지할 수 있는 최대 커넥션 수입니다. 이 수치를 초과하는 요청은 대기 상태로 들어갑니다.</td><td>10</td></tr><tr><td><strong>minimum-idle</strong></td><td>풀에서 유지할 유휴 커넥션의 최소 개수입니다. 유휴 커넥션이 이 수치 이하로 떨어지면 새로운 커넥션이 생성됩니다.</td><td><code>maximum-pool-size</code> 값과 동일</td></tr><tr><td><strong>connection-timeout</strong></td><td>커넥션을 가져오기 위해 스레드가 대기할 수 있는 최대 시간입니다. 이 시간이 초과되면 예외가 발생합니다.</td><td>30,000ms (30초)</td></tr><tr><td><strong>max-lifetime</strong></td><td>커넥션이 유지될 수 있는 최대 시간입니다. 이 시간이 지나면 커넥션은 폐기되고 새 커넥션으로 교체됩니다.</td><td>1,800,000ms (30분)</td></tr><tr><td><strong>idle-timeout</strong></td><td>유휴 상태의 커넥션이 풀에서 유지될 수 있는 최대 시간입니다. 이 시간이 지나면 유휴 커넥션이 풀에서 제거됩니다.</td><td>600,000ms (10분)</td></tr><tr><td><strong>leak-detection-threshold</strong></td><td>지정된 시간(밀리초) 동안 사용되지 않은 커넥션을 감지하는 데 사용됩니다. 이 시간이 지나면 커넥션 리크(leak)를 의심하고 경고를 남깁니다.</td><td>0 (비활성화)</td></tr><tr><td><strong>pool-name</strong></td><td>커넥션 풀의 이름을 지정합니다. 기본적으로 HikariCP는 자동으로 이름을 생성하지만, 필요에 따라 지정할 수 있습니다.</td><td>자동 생성된 이름</td></tr><tr><td><strong>auto-commit</strong></td><td>새 커넥션이 자동 커밋 모드로 시작할지를 결정합니다. 각 쿼리 후 자동으로 커밋됩니다.</td><td><code>true</code></td></tr><tr><td><strong>validation-timeout</strong></td><td>커넥션이 유효한지 검증할 때 사용할 최대 시간입니다. 이 시간이 초과되면 커넥션은 유효하지 않다고 판단하고 폐기됩니다.</td><td>5,000ms (5초)</td></tr><tr><td><strong>read-only</strong></td><td>커넥션이 읽기 전용 모드에서 작동할지를 결정합니다.</td><td><code>false</code></td></tr><tr><td><strong>isolate-internal-queries</strong></td><td>내부 쿼리(예: 커넥션 풀의 유지 관리 쿼리)가 애플리케이션의 쿼리와 격리되는지를 설정합니다.</td><td><code>false</code></td></tr><tr><td><strong>allow-pool-suspension</strong></td><td>커넥션 풀의 일시 정지 기능을 활성화합니다. 이 설정이 활성화되면 풀을 일시 정지하거나 다시 시작할 수 있습니다.</td><td><code>false</code></td></tr><tr><td><strong>initialization-fail-timeout</strong></td><td>풀을 시작할 때 초기화에 실패하는 경우를 대비한 타임아웃 시간입니다. 이 시간이 지나면 예외가 발생합니다.</td><td>1초 (1,000ms)</td></tr></tbody></table><h2><span id=\"커넥션-풀-시나리오-설명\">커넥션 풀 시나리오 설명</span></h2><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-1.png\" alt=\"\"></p><p><code>maximumPoolSize</code>가 10인 커넥션 풀을 가진 애플리케이션에서, 10명의 사용자가 각각 1초에 한 번씩 요청을 보낸다고 가정해보겠습니다. 각 요청은 약 1초가 소요됩니다. 아래 시나리오는 커넥션 풀의 상태를 각 단계별로 설명합니다.</p><h3><span id=\"커넥션-풀의-주요-필드-및-동작-시나리오-분석\">커넥션 풀의 주요 필드 및 동작 시나리오 분석</span></h3><ul><li><strong>maximumPoolSize</strong>:<ul><li><strong>설명</strong>: 커넥션 풀에서 관리할 수 있는 최대 커넥션 수를 나타냅니다. 이 시나리오에서는 10개로 설정되어 있어, 동시에 최대 10개의 요청을 처리할 수 있습니다.</li><li><strong>이미지 설명</strong>: 이미지에서 <code>totalConnections = 10</code>으로 설정되어 있으며, 이는 커넥션 풀에서 관리할 수 있는 총 커넥션이 10개임을 의미합니다.</li></ul></li><li><strong>activeConnections</strong>:<ul><li><strong>설명</strong>: 현재 요청을 처리 중인 커넥션의 수입니다. 동시 요청이 10건 발생하면 <code>activeConnections</code>는 10이 됩니다. 더 이상 여유가 없는 상태에서 추가 요청이 들어오면 대기 상태가 됩니다.</li><li><strong>이미지 설명</strong>: 첫 번째 그림에서 <code>activeConnections = 1</code>로, 한 개의 요청이 활성화된 상태입니다. 두 번째 그림에서는 <code>activeConnections = 5</code>로, 5명이 동시에 요청을 보내고 있습니다. 세 번째 그림에서는 <code>activeConnections = 10</code>으로, 모든 커넥션이 활성화되어 추가 요청을 처리할 수 없는 상태입니다.</li></ul></li><li><strong>idleConnections</strong>:<ul><li><strong>설명</strong>: 유휴 상태로 대기 중인 커넥션의 수를 나타냅니다. 예를 들어, 첫 번째 요청이 처리될 때 <code>idleConnections</code>는 9개이며, 모든 커넥션이 활성화되면 <code>idleConnections</code>는 0이 됩니다.</li><li><strong>이미지 설명</strong>: 첫 번째 그림에서 <code>idleConnections = 9</code>로, 9개의 커넥션이 대기 상태입니다. 두 번째 그림에서는 <code>idleConnections = 5</code>, 세 번째 그림에서는 <code>idleConnections = 0</code>으로, 모든 커넥션이 사용 중인 상태입니다.</li></ul></li><li><strong>totalConnections</strong>:<ul><li><strong>설명</strong>: 커넥션 풀에서 관리하고 있는 총 커넥션 수로, <code>activeConnections</code>와 <code>idleConnections</code>의 합입니다. 이 값은 <code>maximumPoolSize</code> 내에서 유지되며, 동시 요청이 많을수록 <code>idleConnections</code>가 줄어듭니다.</li><li><strong>이미지 설명</strong>: 세 개의 그림 모두 <code>totalConnections = 10</code>으로, 이는 커넥션 풀에서 관리하는 커넥션이 총 10개임을 나타냅니다.</li></ul></li><li><strong>threadsAwaitingConnection</strong>:<ul><li><strong>설명</strong>: 커넥션이 모두 사용 중일 때 대기 중인 요청의 수를 나타냅니다. 예를 들어, 10명의 사용자가 모두 커넥션을 사용 중일 때 추가 요청이 발생하면, 그 요청은 대기 상태로 들어가 <code>threadsAwaitingConnection</code>이 증가합니다.</li><li><strong>이미지 설명</strong>: 마지막 그림에서는 모든 커넥션이 사용 중이기 때문에, 추가 요청이 발생하면 대기 상태로 들어가게 됩니다.</li></ul></li><li><strong>connectionTimeout</strong>:<ul><li><strong>설명</strong>: 대기 중인 요청이 커넥션을 얻기 위해 기다릴 수 있는 최대 시간을 나타냅니다. 예를 들어, <code>connectionTimeout</code>이 2초로 설정된 경우, 대기 중인 요청이 2초 내에 커넥션을 할당받지 못하면 요청은 실패하게 됩니다.</li><li><strong>이미지 설명</strong>: 마지막 그림에서 모든 커넥션이 사용 중인 상태에서 추가 요청이 들어오면, <code>connectionTimeout</code> 내에 커넥션을 할당받지 못할 경우 해당 요청은 실패하게 됩니다.</li></ul></li><li><strong>validationTimeout</strong>:<ul><li><strong>설명</strong>: 풀에서 커넥션을 빌려올 때 해당 커넥션이 유효한지 확인하는 시간입니다. 이 시간이 초과되면 해당 커넥션은 사용되지 않고 새로운 커넥션이 할당됩니다.</li><li><strong>이미지 설명</strong>: 유휴 상태로 오래 있던 커넥션은 유효성 검사에서 실패할 수 있으며, 이 경우 새로운 커넥션이 할당됩니다. 이미지에서는 유휴 상태의 커넥션들이 대기 중인 상태를 보여줍니다.</li></ul></li></ul><h2><span id=\"hikaricp-설정-및-상태-측정-샘플-코드\">HikariCP 설정 및 상태 측정 샘플 코드</span></h2><p>Spring Boot 애플리케이션에서 HikariCP를 사용하는 방법을 설명합니다. HikariCP는 Spring Boot에서 기본적으로 사용하는 커넥션 풀로, 설정을 통해 다양한 커넥션 관리 옵션을 제공합니다. 또한, HikariCP의 상태를 측정할 수 있는 방법을 추가하여 커넥션 풀의 효율적인 관리가 가능합니다.</p><h3><span id=\"hikaricp-properties-설정\">HikariCP Properties 설정</span></h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    datasource:</span></span><br><span class=\"line\"><span class=\"attr\">        hikari:</span></span><br><span class=\"line\"><span class=\"attr\">            maximum-pool-size:</span> <span class=\"number\">10</span>           <span class=\"comment\"># 최대 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            minimum-idle:</span> <span class=\"number\">10</span>                <span class=\"comment\"># 최소 유휴 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            connection-timeout:</span> <span class=\"number\">30000</span>       <span class=\"comment\"># 커넥션을 가져올 때 대기할 최대 시간 (밀리초)</span></span><br><span class=\"line\"><span class=\"attr\">            max-lifetime:</span> <span class=\"number\">1800000</span>           <span class=\"comment\"># 커넥션이 유지될 최대 시간 (밀리초)</span></span><br><span class=\"line\"><span class=\"attr\">            idle-timeout:</span> <span class=\"number\">600000</span>            <span class=\"comment\"># 유휴 커넥션이 유지될 최대 시간 (밀리초)</span></span><br><span class=\"line\"><span class=\"attr\">            leak-detection-threshold:</span> <span class=\"number\">2000</span>  <span class=\"comment\"># 커넥션 리크를 감지할 기준 시간 (밀리초)</span></span><br><span class=\"line\"><span class=\"attr\">            pool-name:</span> <span class=\"string\">Sample-HikariPool</span>    <span class=\"comment\"># 커넥션 풀 이름</span></span><br><span class=\"line\"><span class=\"attr\">            auto-commit:</span> <span class=\"literal\">true</span>               <span class=\"comment\"># 자동 커밋 여부</span></span><br><span class=\"line\"><span class=\"attr\">            validation-timeout:</span> <span class=\"number\">5000</span>        <span class=\"comment\"># 커넥션 유효성 검사를 위한 최대 시간 (밀리초)</span></span><br><span class=\"line\"><span class=\"attr\">            read-only:</span> <span class=\"literal\">false</span>                <span class=\"comment\"># 읽기 전용 모드 여부</span></span><br><span class=\"line\"><span class=\"attr\">            isolate-internal-queries:</span> <span class=\"literal\">false</span> <span class=\"comment\"># 내부 쿼리 격리 여부</span></span><br><span class=\"line\"><span class=\"attr\">            allow-pool-suspension:</span> <span class=\"literal\">false</span>    <span class=\"comment\"># 커넥션 풀 일시 정지 허용 여부</span></span><br><span class=\"line\"><span class=\"attr\">            initialization-fail-timeout:</span> <span class=\"number\">1</span>  <span class=\"comment\"># 초기화 실패 시 타임아웃 (밀리초)</span></span><br></pre></td></tr></table></figure><h3><span id=\"hikaricp-상태-측정-코드\">HikariCP 상태 측정 코드</span></h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SampleService</span></span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> dataSource: DataSource,</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> memberRepository: MemberRepository</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> log = LoggerFactory.getLogger(javaClass)!!</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Transactional</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">getMember</span><span class=\"params\">()</span></span>: Member &#123;</span><br><span class=\"line\">        <span class=\"keyword\">val</span> member = memberRepository.findById(Random.nextInt(<span class=\"number\">1</span>, <span class=\"number\">101</span>).toLong()).<span class=\"keyword\">get</span>()</span><br><span class=\"line\">        runBlocking &#123; delay(<span class=\"number\">1000</span>) &#125;</span><br><span class=\"line\">        <span class=\"keyword\">val</span> targetDataSource = dataSource.unwrap(HikariDataSource::<span class=\"class\"><span class=\"keyword\">class</span>.<span class=\"title\">java</span>)</span></span><br><span class=\"line\">        <span class=\"keyword\">val</span> hikariDataSource = targetDataSource <span class=\"keyword\">as</span> HikariDataSource</span><br><span class=\"line\">        <span class=\"keyword\">val</span> hikariPoolMXBean = hikariDataSource.hikariPoolMXBean</span><br><span class=\"line\">        <span class=\"keyword\">val</span> hikariConfigMXBean = hikariDataSource.hikariConfigMXBean</span><br><span class=\"line\">        <span class=\"keyword\">val</span> log =</span><br><span class=\"line\">            <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">            totalConnections : <span class=\"subst\">$&#123;hikariPoolMXBean.totalConnections&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            activeConnections : <span class=\"subst\">$&#123;hikariPoolMXBean.activeConnections&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            idleConnections : <span class=\"subst\">$&#123;hikariPoolMXBean.idleConnections&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            threadsAwaitingConnection : <span class=\"subst\">$&#123;hikariPoolMXBean.threadsAwaitingConnection&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            \"\"\"</span>.trimIndent()</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">this</span>.log.info(log)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> member</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>이 코드에서는 먼저 <code>DataSource</code>를 <code>HikariDataSource</code>로 변환한 후, <code>HikariPoolMXBean</code>과 <code>HikariConfigMXBean</code>을 사용하여 커넥션 풀의 상태를 확인합니다. 이를 통해 총 커넥션 수, 활성 커넥션 수, 유휴 커넥션 수, 그리고 대기 중인 스레드 수와 같은 정보를 가져옵니다. 또한, <code>runBlocking { delay(1000) }</code>을 사용하여 1초간의 지연을 추가함으로써, 실제 요청이 처리되는 동안 커넥션 풀의 상태를 보다 명확하게 모니터링할 수 있습니다. 마지막으로, 이러한 커넥션 풀의 상태를 로그로 출력하여 애플리케이션의 성능을 모니터링하고, 필요한 경우 성능을 조정할 수 있는 정보를 제공합니다.</p><h2><span id=\"connection-pool-측정\">Connection Pool 측정</span></h2><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-2.png\" alt=\"\"></p><p>애플리케이션에서 커넥션 풀을 사용할 때, 커넥션 풀의 상태를 지속적으로 모니터링하는 것은 매우 중요합니다. 아래와 같은 로그는 **10 TPS (초당 트랜잭션)**를 지속적으로 유지할 때 발생한 로그입니다. 이때 평균 응답 시간은 약 1,000ms로 나타나며, 이는 TPS 수준을 고려했을 때 시스템이 적정 수준에서 작동하고 있음을 보여줍니다.</p><ul><li><p><strong>로그 1</strong>:</p><ul><li><code>totalConnections = 10</code></li><li><code>activeConnections = 7</code></li><li><code>idleConnections = 3</code></li><li><code>threadsAwaitingConnection = 0</code></li></ul><p>이 상태는 <strong>총 10개의 커넥션</strong> 중 <strong>7개가 활성화</strong>되어 요청을 처리하고 있으며, <strong>3개의 유휴 커넥션</strong>이 대기 중인 상황입니다. 모든 요청이 원활하게 처리되고 있기 때문에, 대기 중인 스레드는 없습니다.</p></li><li><p><strong>로그 2</strong>:</p><ul><li><code>totalConnections = 10</code></li><li><code>activeConnections = 10</code></li><li><code>idleConnections = 0</code></li><li><code>threadsAwaitingConnection = 4</code></li></ul><p>이 상태는 <strong>모든 10개의 커넥션이 활성화</strong>되어 요청을 처리 중이며, 더 이상 유휴 커넥션이 남아있지 않습니다. 이때 <strong>4개의 추가 요청이 들어와 대기</strong> 중입니다. <code>threadsAwaitingConnection</code> 값이 4로 증가한 이유는, 요청을 처리할 수 있는 유휴 커넥션이 없기 때문입니다.</p></li></ul><h3><span id=\"커넥션-풀-동작-및-타임아웃-발생\">커넥션 풀 동작 및 타임아웃 발생</span></h3><p>커넥션 풀이 설정된 <code>maximumPoolSize</code>만큼 활성화된 경우, 그 이후에 들어오는 요청은 <strong>대기 상태</strong>에 들어가게 됩니다. 이때 <strong>대기 시간이 길어질 수 있으며</strong>, 이러한 대기 시간이 너무 길어지면 <strong>타임아웃</strong>이 발생할 수 있습니다. 타임아웃이 발생하는 주요 원인은 다음과 같습니다.</p><p><strong>connection-timeout</strong>은 커넥션을 얻기 위해 스레드가 대기할 수 있는 최대 시간을 의미합니다. 예를 들어, <code>connection-timeout</code>이 30초로 설정되어 있다면, 커넥션 풀이 사용 가능한 커넥션을 30초 동안 제공하지 못할 경우 타임아웃이 발생하게 됩니다. 이 설정은 대기 중인 요청이 얼마 동안 기다릴 수 있는지를 제한합니다.</p><p>커넥션 풀은 <strong>한정된 자원</strong>을 효율적으로 관리하여 시스템의 안정성을 유지하는 좋은 방법입니다. 그러나, 만약 요청량이 설정된 <code>maximumPoolSize</code>를 초과하게 되면 대기 상태가 발생할 수 있습니다. 이러한 상황을 방지하기 위해 적절한 <strong>타임아웃</strong> 값을 설정하고, 필요에 따라 풀 크기를 조정하는 것이 중요합니다.</p><h3><span id=\"connection-timeout-설정과-tps-증가로-인한-오류-발생\">connection-timeout 설정과 TPS 증가로 인한 오류 발생</span></h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    datasource:</span></span><br><span class=\"line\"><span class=\"attr\">        hikari:</span></span><br><span class=\"line\"><span class=\"attr\">            maximum-pool-size:</span> <span class=\"number\">10</span>         <span class=\"comment\"># 최대 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            minimum-idle:</span> <span class=\"number\">10</span>              <span class=\"comment\"># 최소 유휴 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            connection-timeout:</span> <span class=\"number\">250</span>       <span class=\"comment\"># 커넥션을 가져올 때 대기할 최대 시간 (밀리초)</span></span><br></pre></td></tr></table></figure><p>위 설정에서 <code>connection-timeout</code>을 250ms로 지정한 경우, <strong>TPS</strong>가 10을 초과하게 되면 <strong>threadsAwaitingConnection</strong>에 대기하는 시간이 250ms를 넘을 수 있습니다. 이 상황이 발생하면, 커넥션 풀은 설정된 대기 시간보다 오래 걸리기 때문에 타임아웃 오류가 발생하게 됩니다.</p><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-3.png\" alt=\"\"></p><p>이미지에서와 같이, <code>RPS</code>(Request Per Second)가 10 이상일 때 커넥션 풀의 한계로 인해 대기 중인 요청이 발생하고, 그 대기 시간이 <code>250ms</code>를 초과하면 오류가 발생합니다. 이때 <code>Failures/s</code>가 증가하는 것을 확인할 수 있습니다. 이는 타임아웃 설정과 관련이 있으며, 커넥션 풀의 자원 한계와 처리량을 적절히 맞춰야 하는 이유를 보여줍니다.</p><p><strong>오류 메시지 예시</strong>:</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.sql.SQLTransientConnectionException: Sample-HikariPool - Connection is not available, request timed out after 251ms.</span><br><span class=\"line\">at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:696) ~[HikariCP-4.0.3.jar:na]</span><br><span class=\"line\">at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:197)</span><br></pre></td></tr></table></figure><p>이 오류는 대기 시간이 설정된 <code>connection-timeout</code>을 초과했음을 의미하며, 커넥션 풀이 추가 요청을 처리할 수 없다는 것을 나타냅니다. 이 문제를 해결하기 위해 여러 가지 방법을 고려할 수 있습니다.</p><h2><span id=\"connection-pool-문제-해결방법\">Connection Pool 문제 해결방법</span></h2><p>애플리케이션에서 <strong>Connection Pool</strong>은 안정적인 데이터베이스 연결을 관리하는 데 매우 중요한 역할을 합니다. 하지만 시스템 부하가 높거나 설정이 적절하지 않은 경우, 커넥션 풀에서 발생하는 문제로 인해 성능 저하나 타임아웃 오류가 발생할 수 있습니다. 이러한 문제를 해결하기 위해서는 몇 가지 핵심적인 접근 방식을 취할 수 있습니다.</p><ol><li><strong>쿼리 최적화</strong>: 데이터베이스 성능 문제는 종종 비효율적인 쿼리로 인해 발생합니다. 쿼리 최적화는 애플리케이션의 응답 시간을 줄이고, 커넥션이 오랫동안 점유되는 상황을 방지할 수 있는 중요한 방법입니다. 인덱스를 추가하거나 복잡한 쿼리 구조를 단순화하는 것 등이 이에 해당합니다.</li><li><strong>connection-timeout 시간 조정</strong>: 커넥션 타임아웃은 대기 중인 요청이 커넥션을 얻기 위해 얼마나 오랜 시간 기다릴 수 있는지를 결정합니다. 이 시간을 적절히 설정함으로써 대기 중인 요청들이 효율적으로 처리되도록 할 수 있습니다. 너무 짧은 타임아웃은 오류를 유발할 수 있고, 너무 긴 타임아웃은 응답 지연을 초래할 수 있으므로, 상황에 맞게 타임아웃을 조정해야 합니다.</li><li><strong>maximum-pool-size 증가</strong>: 예상되는 트래픽에 맞춰 커넥션 풀의 최대 크기를 늘림으로써 동시 요청 처리 성능을 향상시킬 수 있습니다. 그러나 자원 낭비를 방지하기 위해 시스템의 메모리와 CPU 사용량을 신중하게 고려하여 최적의 크기를 설정하는 것이 중요합니다.</li></ol><p>이와 같은 방법을 적절히 적용하면 Connection Pool 문제를 해결하고, 애플리케이션의 성능과 안정성을 크게 향상시킬 수 있습니다. 아래에서는 이 세 가지 접근 방법을 구체적으로 다루고, 실제 적용 사례를 통해 성능 최적화 방법을 설명합니다.</p><h3><span id=\"쿼리-최적화\">쿼리 최적화</span></h3><p><strong>쿼리 최적화</strong>는 데이터베이스 성능 향상에 있어 중요한 단계입니다. 특히, 애플리케이션에서 <code>activeConnections</code>가 빠르게 응답하지 못하는 경우, 그 원인이 복잡한 쿼리 처리에 있다면 쿼리 최적화를 통해 성능을 크게 개선할 수 있습니다. 잘못 설계된 쿼리나 불필요하게 긴 실행 시간을 가진 쿼리는 시스템 전반의 성능에 영향을 미치고, 커넥션 풀의 자원을 오래 점유하게 되어 <strong>대기 중인 요청</strong>들이 지연되는 상황을 초래할 수 있습니다.</p><p>다음과 같은 방식으로 쿼리를 최적화함으로써 응답 속도를 개선할 수 있습니다:</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">getMember</span><span class=\"params\">()</span></span>: Member &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> member = memberRepository.findById(Random.nextInt(<span class=\"number\">1</span>, <span class=\"number\">101</span>).toLong()).<span class=\"keyword\">get</span>()</span><br><span class=\"line\">    <span class=\"comment\">// runBlocking &#123; delay(1000) &#125; 블록킹 코드 제거</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"keyword\">return</span> member</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>위 코드에서 불필요한 블로킹 코드인 <code>runBlocking { delay(1000) }</code>를 제거함으로써 쿼리 실행 지연을 없앴습니다. 이와 같이, 쿼리 최적화는 단순히 코드 내의 블로킹 요소를 제거하는 것뿐만 아니라, <strong>인덱스 추가</strong>, <strong>복잡한 조인 구조 단순화</strong>, <strong>캐싱</strong> 등을 통해 데이터베이스에 대한 부하를 줄이는 방법도 포함됩니다. 이러한 최적화 작업을 통해 쿼리 실행 시간이 줄어들면 커넥션이 더 빨리 반환되고, <strong>대기 중인 요청이 빠르게 처리</strong>될 수 있습니다.</p><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-4.png\" alt=\"\"></p><p>쿼리 최적화를 통해 성능이 향상되면, <strong>connection-timeout</strong>이 250ms로 설정된 상황에서도 <strong>RPS가 20</strong>인 경우처럼 높은 요청 처리량에서도 타임아웃 오류가 발생하지 않게 됩니다. 이는 쿼리가 최적화되면 커넥션이 더 빠르게 반환되기 때문에, 커넥션 풀 내에서 더 많은 요청을 동시에 처리할 수 있기 때문입니다.</p><p>최적화된 쿼리는 커넥션 점유 시간을 줄여 <strong>connection-timeout</strong> 설정의 제한을 넘지 않도록 도와주며, 결과적으로 더 많은 트랜잭션을 안정적으로 처리할 수 있게 됩니다. 따라서, 쿼리 최적화는 애플리케이션 성능을 유지하고 향상시키는 중요한 방법입니다.</p><p>결론적으로, <strong>쿼리 최적화</strong>는 데이터베이스 성능 개선뿐만 아니라, 커넥션 풀 자원 관리에도 매우 중요한 역할을 합니다. 불필요한 대기 시간을 줄이고, 시스템이 고부하 상황에서도 원활하게 작동할 수 있도록 돕습니다.</p><h3><span id=\"connection-timeout-시간-조정\">connection-timeout 시간 조정</span></h3><p><code>connection-timeout</code> 설정은 대기 중인 요청이 커넥션을 얻기 위해 기다릴 수 있는 시간을 조정하는 중요한 요소입니다. 만약 요청량이 많아 <strong>maximumPoolSize</strong>에 도달했을 때, <code>connection-timeout</code>을 적절히 늘려주면 대기 중인 요청이 커넥션을 할당받기까지 더 오랜 시간을 허용할 수 있습니다. 예를 들어, <code>connection-timeout</code>을 250ms에서 2,500ms로 늘리면, 커넥션 반환 대기 시간을 더 길게 설정함으로써 <strong>타임아웃 오류</strong>를 줄일 수 있습니다. 하지만, 너무 긴 대기 시간을 설정하면 그만큼 <strong>응답 시간이 지연</strong>될 수 있으므로 신중하게 설정해야 합니다.</p><p>아래는 <code>connection-timeout</code>을 2,500ms로 설정하고 테스트한 설정 예시입니다:</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    datasource:</span></span><br><span class=\"line\"><span class=\"attr\">        hikari:</span></span><br><span class=\"line\"><span class=\"attr\">            maximum-pool-size:</span> <span class=\"number\">10</span>         <span class=\"comment\"># 최대 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            minimum-idle:</span> <span class=\"number\">10</span>              <span class=\"comment\"># 최소 유휴 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            connection-timeout:</span> <span class=\"number\">2500</span>      <span class=\"comment\"># 커넥션을 가져올 때 대기할 최대 시간 (밀리초)</span></span><br></pre></td></tr></table></figure><p>이 설정에서, <code>delay(1000)</code>는 유지하면서 <code>connection-timeout</code>을 2,500ms로 변경한 후 테스트를 진행하였습니다.</p><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-6.png\" alt=\"\"></p><p>테스트 결과는 아래와 같습니다:</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totalConnections : 10</span><br><span class=\"line\">maximumPoolSize : 10</span><br><span class=\"line\">activeConnections : 10</span><br><span class=\"line\">idleConnections : 0</span><br><span class=\"line\">threadsAwaitingConnection : 20</span><br></pre></td></tr></table></figure><ul><li><strong>totalConnections</strong>: 10개 커넥션이 모두 사용 중입니다.</li><li><strong>maximumPoolSize</strong>: 설정된 최대 커넥션 수는 10개입니다.</li><li><strong>activeConnections</strong>: 현재 10개의 커넥션이 활성화되어 있습니다.</li><li><strong>idleConnections</strong>: 유휴 커넥션이 없으며, 모든 커넥션이 사용 중입니다.</li><li><strong>threadsAwaitingConnection</strong>: 20개의 요청이 대기 중입니다.</li></ul><p><strong>connection-timeout</strong> 설정이 2,500ms로 변경됨에 따라, <strong>threadsAwaitingConnection</strong>에서 대기하는 시간이 길어졌습니다. 결과적으로 <strong>타임아웃 오류는 발생하지 않았지만</strong>, 응답 시간이 더 길어졌습니다. 이는 각 요청에 대해 <code>delay(1000)</code>으로 인한 1,000ms의 블로킹 시간과 <strong>threadsAwaitingConnection</strong>에서 대기한 시간이 합쳐져 응답 시간이 느려진 것입니다.</p><p>이런 경우, 타임아웃을 길게 설정하는 것은 타임아웃 오류를 방지할 수 있지만, 동시에 <strong>응답 속도</strong>가 저하될 수 있습니다. 따라서, <strong>connection-timeout</strong>은 요청의 특성과 트래픽 패턴에 맞추어 적절한 값을 설정하는 것이 매우 중요합니다.</p><h3><span id=\"maximum-pool-size-증가\">maximum-pool-size 증가</span></h3><p>애플리케이션에서 처리할 수 있는 동시 요청 수가 많아질 것으로 예상된다면, <code>maximum-pool-size</code>를 늘려 커넥션 풀에서 더 많은 커넥션을 생성하고 유지할 수 있도록 설정할 수 있습니다. 예를 들어, 트래픽이 예상보다 많아지거나, 동시성 처리가 많이 요구되는 상황에서는 커넥션 풀 크기를 늘려주는 것이 유리합니다. 이를 통해 더 많은 요청을 동시에 처리할 수 있게 됩니다. 그러나, 무작정 풀 크기를 크게 설정하는 것은 <strong>자원 낭비</strong>를 초래할 수 있습니다. 커넥션 풀 크기가 커지면 더 많은 메모리와 CPU가 필요하기 때문에, <strong>시스템의 자원 사용량</strong>을 신중히 고려한 후에 조정하는 것이 중요합니다.</p><p>예를 들어, <code>maximum-pool-size</code>를 100으로 설정하고, 1,000ms 대기 코드를 다시 활성화시키며 <code>connection-timeout</code>을 250ms로 유지했음에도 불구하고, 오류가 발생하지 않는 상황을 가정해보겠습니다.</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Transactional</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">getMember</span><span class=\"params\">()</span></span>: Member &#123;</span><br><span class=\"line\">  <span class=\"keyword\">val</span> member = memberRepository.findById(Random.nextInt(<span class=\"number\">1</span>, <span class=\"number\">101</span>).toLong()).<span class=\"keyword\">get</span>()</span><br><span class=\"line\">  runBlocking &#123; delay(<span class=\"number\">1000</span>) &#125;  <span class=\"comment\">// 1,000ms 대기</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"keyword\">return</span> member</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>이 코드에서는 <code>runBlocking { delay(1000) }</code>를 통해 각 요청마다 1초의 지연을 발생시키고 있지만, <code>maximum-pool-size</code>를 충분히 높게 설정함으로써 동시 요청이 몰리는 상황에서도 타임아웃 오류가 발생하지 않습니다. 아래와 같은 로그를 통해 확인할 수 있습니다.</p><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-5.png\" alt=\"\"></p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">totalConnections : 30</span><br><span class=\"line\">maximumPoolSize : 100</span><br><span class=\"line\">activeConnections : 13</span><br><span class=\"line\">idleConnections : 17</span><br></pre></td></tr></table></figure><ul><li><strong>totalConnections</strong>: 현재 커넥션 풀에서 관리되고 있는 커넥션의 총 개수로, 현재 30개가 할당되어 있는 상태입니다.</li><li><strong>maximumPoolSize</strong>: 커넥션 풀에서 설정된 최대 커넥션 수는 100입니다. 하지만, 모든 커넥션이 필요하지 않기 때문에 100까지 차지 않고 있는 상황입니다.</li><li><strong>activeConnections</strong>: 현재 요청을 처리 중인 활성 커넥션 수는 13개입니다.</li><li><strong>idleConnections</strong>: 유휴 상태로 대기 중인 커넥션 수는 17개로, 요청이 추가로 들어오면 이 커넥션들이 활성화될 수 있습니다.</li></ul><p>이 상황에서는 <strong>maximumPoolSize</strong>가 100으로 설정되어 있지만, 모든 커넥션이 사용 중이지 않기 때문에 <strong>자원 낭비를 최소화</strong>할 수 있습니다. 요청이 몰리지 않는 상태에서는 <code>activeConnections</code>가 13개에 머무르고, 나머지 17개는 유휴 상태로 남아있습니다. 이처럼 <strong>최대 커넥션 수</strong>는 설정했지만, 필요할 때만 커넥션이 활성화되고 나머지는 유휴 상태를 유지하는 방식으로 효율적인 자원 관리가 가능합니다.</p><p>따라서, <code>maximum-pool-size</code>는 트래픽이 몰릴 경우를 대비해 충분히 큰 값으로 설정할 수 있지만, 시스템 자원에 부담을 주지 않도록 <strong>실제 트래픽</strong>과 <strong>자원 사용량</strong>을 분석하여 적절한 값으로 설정하는 것이 중요합니다.</p><h2><span id=\"결론\">결론</span></h2><p>HikariCP를 사용한 <strong>MySQL 커넥션 풀 관리</strong>는 애플리케이션 성능 최적화의 핵심 요소입니다. 적절한 커넥션 풀 설정을 통해 데이터베이스와의 연결을 효율적으로 관리하고, 불필요한 연결 재생성을 피하며, 응답 시간을 단축할 수 있습니다. 그러나, <strong>maximumPoolSize</strong>와 <strong>connection-timeout</strong>과 같은 설정이 적절하지 않으면, 트래픽이 증가할 때 커넥션 풀에서 대기 시간이 늘어나거나 타임아웃 오류가 발생할 수 있습니다.</p><p>이를 방지하고 시스템 성능을 최적화하기 위해 다음과 같은 중요한 포인트를 기억해야 합니다.</p><ol><li><strong>쿼리 최적화</strong>: 쿼리의 성능이 느릴 경우 <code>activeConnections</code>가 불필요하게 오래 점유되며, 전체 시스템의 성능을 저하시킬 수 있습니다. 쿼리를 최적화하여 커넥션을 빠르게 반환하면 대기 중인 요청도 신속하게 처리할 수 있습니다.</li><li><strong>maximum-pool-size 설정</strong>: <strong>maximum-pool-size</strong>는 동시 처리할 수 있는 최대 요청 수를 결정합니다. 트래픽 예측에 맞춰 적절히 풀 크기를 늘리는 것은 중요하지만, 자원 낭비를 방지하기 위해 너무 크게 설정하지 않는 것이 좋습니다. 실제로 필요할 때만 커넥션이 활성화되는 방식으로 자원을 효율적으로 관리해야 합니다.</li><li><strong>connection-timeout 설정</strong>: <strong>connection-timeout</strong> 값은 대기 중인 요청이 커넥션을 얻기 위해 기다릴 수 있는 최대 시간을 결정합니다. 이 값을 너무 낮게 설정하면 트래픽이 몰릴 때 타임아웃 오류가 자주 발생할 수 있으며, 반대로 너무 길게 설정하면 응답 시간이 지연될 수 있습니다. 트래픽 패턴에 맞춰 적절한 값을 설정하는 것이 중요합니다.</li><li><strong>TPS 모니터링</strong>: 초당 처리량(TPS)을 지속적으로 모니터링하고, 트래픽 패턴을 기반으로 HikariCP 설정을 조정해야 합니다. 이를 통해 애플리케이션이 다양한 부하 상황에서도 원활하게 작동할 수 있도록 합니다.</li></ol><p>최종적으로, 커넥션 풀 설정을 조정할 때는 트래픽 패턴과 시스템 자원을 고려하여 <strong>최적화된 값</strong>을 설정하는 것이 필수적입니다. 이를 통해 <strong>응답 속도 지연</strong> 및 <strong>타임아웃 오류</strong>를 최소화할 수 있으며, 안정적인 시스템 운영과 함께 애플리케이션의 성능을 극대화할 수 있습니다.</p>",
        "contentSnippet": "Connection Pool이란?\n애플리케이션에서 MySQL 데이터베이스와의 효율적인 연결을 위해 커넥션 풀을 사용합니다. 커넥션 풀은 미리 일정한 수의 데이터베이스 연결을 생성해 두고, 애플리케이션이 필요할 때마다 이 연결들을 재사용함으로써 성능을 향상시키는 기법입니다. 이 방식은 데이터베이스와의 연결을 매번 새로 생성하는 대신 이미 준비된 연결을 재사용하여 애플리케이션의 응답 시간을 줄이는 데 매우 유용합니다.\nJava JDBC와 HikariCP\nJava 애플리케이션에서 가장 널리 사용되는 커넥션 풀 중 하나는 HikariCP입니다. HikariCP는 가볍고 빠른 커넥션 풀로, 대규모 트래픽이 발생하는 상황에서도 효율적인 연결 관리를 지원합니다. HikariCP는 HikariPoolMXBean과 HikariConfigMXBean이라는 JMX(Java Management Extensions)를 통해 커넥션 풀의 상태 및 설정을 관리할 수 있습니다.\nSpring Boot에서의 HikariCP 설정과 기본값\n\n설정 항목설명기본값\n\nmaximum-pool-size커넥션 풀에서 유지할 수 있는 최대 커넥션 수입니다. 이 수치를 초과하는 요청은 대기 상태로 들어갑니다.10\nminimum-idle풀에서 유지할 유휴 커넥션의 최소 개수입니다. 유휴 커넥션이 이 수치 이하로 떨어지면 새로운 커넥션이 생성됩니다.maximum-pool-size 값과 동일\nconnection-timeout커넥션을 가져오기 위해 스레드가 대기할 수 있는 최대 시간입니다. 이 시간이 초과되면 예외가 발생합니다.30,000ms (30초)\nmax-lifetime커넥션이 유지될 수 있는 최대 시간입니다. 이 시간이 지나면 커넥션은 폐기되고 새 커넥션으로 교체됩니다.1,800,000ms (30분)\nidle-timeout유휴 상태의 커넥션이 풀에서 유지될 수 있는 최대 시간입니다. 이 시간이 지나면 유휴 커넥션이 풀에서 제거됩니다.600,000ms (10분)\nleak-detection-threshold지정된 시간(밀리초) 동안 사용되지 않은 커넥션을 감지하는 데 사용됩니다. 이 시간이 지나면 커넥션 리크(leak)를 의심하고 경고를 남깁니다.0 (비활성화)\npool-name커넥션 풀의 이름을 지정합니다. 기본적으로 HikariCP는 자동으로 이름을 생성하지만, 필요에 따라 지정할 수 있습니다.자동 생성된 이름\nauto-commit새 커넥션이 자동 커밋 모드로 시작할지를 결정합니다. 각 쿼리 후 자동으로 커밋됩니다.true\nvalidation-timeout커넥션이 유효한지 검증할 때 사용할 최대 시간입니다. 이 시간이 초과되면 커넥션은 유효하지 않다고 판단하고 폐기됩니다.5,000ms (5초)\nread-only커넥션이 읽기 전용 모드에서 작동할지를 결정합니다.false\nisolate-internal-queries내부 쿼리(예: 커넥션 풀의 유지 관리 쿼리)가 애플리케이션의 쿼리와 격리되는지를 설정합니다.false\nallow-pool-suspension커넥션 풀의 일시 정지 기능을 활성화합니다. 이 설정이 활성화되면 풀을 일시 정지하거나 다시 시작할 수 있습니다.false\ninitialization-fail-timeout풀을 시작할 때 초기화에 실패하는 경우를 대비한 타임아웃 시간입니다. 이 시간이 지나면 예외가 발생합니다.1초 (1,000ms)\n\n커넥션 풀 시나리오 설명\n\nmaximumPoolSize가 10인 커넥션 풀을 가진 애플리케이션에서, 10명의 사용자가 각각 1초에 한 번씩 요청을 보낸다고 가정해보겠습니다. 각 요청은 약 1초가 소요됩니다. 아래 시나리오는 커넥션 풀의 상태를 각 단계별로 설명합니다.\n커넥션 풀의 주요 필드 및 동작 시나리오 분석\n\nmaximumPoolSize:\n설명: 커넥션 풀에서 관리할 수 있는 최대 커넥션 수를 나타냅니다. 이 시나리오에서는 10개로 설정되어 있어, 동시에 최대 10개의 요청을 처리할 수 있습니다.\n이미지 설명: 이미지에서 totalConnections = 10으로 설정되어 있으며, 이는 커넥션 풀에서 관리할 수 있는 총 커넥션이 10개임을 의미합니다.\n\nactiveConnections:\n설명: 현재 요청을 처리 중인 커넥션의 수입니다. 동시 요청이 10건 발생하면 activeConnections는 10이 됩니다. 더 이상 여유가 없는 상태에서 추가 요청이 들어오면 대기 상태가 됩니다.\n이미지 설명: 첫 번째 그림에서 activeConnections = 1로, 한 개의 요청이 활성화된 상태입니다. 두 번째 그림에서는 activeConnections = 5로, 5명이 동시에 요청을 보내고 있습니다. 세 번째 그림에서는 activeConnections = 10으로, 모든 커넥션이 활성화되어 추가 요청을 처리할 수 없는 상태입니다.\n\nidleConnections:\n설명: 유휴 상태로 대기 중인 커넥션의 수를 나타냅니다. 예를 들어, 첫 번째 요청이 처리될 때 idleConnections는 9개이며, 모든 커넥션이 활성화되면 idleConnections는 0이 됩니다.\n이미지 설명: 첫 번째 그림에서 idleConnections = 9로, 9개의 커넥션이 대기 상태입니다. 두 번째 그림에서는 idleConnections = 5, 세 번째 그림에서는 idleConnections = 0으로, 모든 커넥션이 사용 중인 상태입니다.\n\ntotalConnections:\n설명: 커넥션 풀에서 관리하고 있는 총 커넥션 수로, activeConnections와 idleConnections의 합입니다. 이 값은 maximumPoolSize 내에서 유지되며, 동시 요청이 많을수록 idleConnections가 줄어듭니다.\n이미지 설명: 세 개의 그림 모두 totalConnections = 10으로, 이는 커넥션 풀에서 관리하는 커넥션이 총 10개임을 나타냅니다.\n\nthreadsAwaitingConnection:\n설명: 커넥션이 모두 사용 중일 때 대기 중인 요청의 수를 나타냅니다. 예를 들어, 10명의 사용자가 모두 커넥션을 사용 중일 때 추가 요청이 발생하면, 그 요청은 대기 상태로 들어가 threadsAwaitingConnection이 증가합니다.\n이미지 설명: 마지막 그림에서는 모든 커넥션이 사용 중이기 때문에, 추가 요청이 발생하면 대기 상태로 들어가게 됩니다.\n\nconnectionTimeout:\n설명: 대기 중인 요청이 커넥션을 얻기 위해 기다릴 수 있는 최대 시간을 나타냅니다. 예를 들어, connectionTimeout이 2초로 설정된 경우, 대기 중인 요청이 2초 내에 커넥션을 할당받지 못하면 요청은 실패하게 됩니다.\n이미지 설명: 마지막 그림에서 모든 커넥션이 사용 중인 상태에서 추가 요청이 들어오면, connectionTimeout 내에 커넥션을 할당받지 못할 경우 해당 요청은 실패하게 됩니다.\n\nvalidationTimeout:\n설명: 풀에서 커넥션을 빌려올 때 해당 커넥션이 유효한지 확인하는 시간입니다. 이 시간이 초과되면 해당 커넥션은 사용되지 않고 새로운 커넥션이 할당됩니다.\n이미지 설명: 유휴 상태로 오래 있던 커넥션은 유효성 검사에서 실패할 수 있으며, 이 경우 새로운 커넥션이 할당됩니다. 이미지에서는 유휴 상태의 커넥션들이 대기 중인 상태를 보여줍니다.\n\n\nHikariCP 설정 및 상태 측정 샘플 코드\nSpring Boot 애플리케이션에서 HikariCP를 사용하는 방법을 설명합니다. HikariCP는 Spring Boot에서 기본적으로 사용하는 커넥션 풀로, 설정을 통해 다양한 커넥션 관리 옵션을 제공합니다. 또한, HikariCP의 상태를 측정할 수 있는 방법을 추가하여 커넥션 풀의 효율적인 관리가 가능합니다.\nHikariCP Properties 설정\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\nspring:\n    datasource:\n        hikari:\n            maximum-pool-size: 10           # 최대 커넥션 수\n            minimum-idle: 10                # 최소 유휴 커넥션 수\n            connection-timeout: 30000       # 커넥션을 가져올 때 대기할 최대 시간 (밀리초)\n            max-lifetime: 1800000           # 커넥션이 유지될 최대 시간 (밀리초)\n            idle-timeout: 600000            # 유휴 커넥션이 유지될 최대 시간 (밀리초)\n            leak-detection-threshold: 2000  # 커넥션 리크를 감지할 기준 시간 (밀리초)\n            pool-name: Sample-HikariPool    # 커넥션 풀 이름\n            auto-commit: true               # 자동 커밋 여부\n            validation-timeout: 5000        # 커넥션 유효성 검사를 위한 최대 시간 (밀리초)\n            read-only: false                # 읽기 전용 모드 여부\n            isolate-internal-queries: false # 내부 쿼리 격리 여부\n            allow-pool-suspension: false    # 커넥션 풀 일시 정지 허용 여부\n            initialization-fail-timeout: 1  # 초기화 실패 시 타임아웃 (밀리초)\n\n\nHikariCP 상태 측정 코드\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n@Service\nclass SampleService(\n    private val dataSource: DataSource,\n    private val memberRepository: MemberRepository\n) {\n\n    private val log = LoggerFactory.getLogger(javaClass)!!\n\n    @Transactional\n    fun getMember(): Member {\n        val member = memberRepository.findById(Random.nextInt(1, 101).toLong()).get()\n        runBlocking { delay(1000) }\n        val targetDataSource = dataSource.unwrap(HikariDataSource::class.java)\n        val hikariDataSource = targetDataSource as HikariDataSource\n        val hikariPoolMXBean = hikariDataSource.hikariPoolMXBean\n        val hikariConfigMXBean = hikariDataSource.hikariConfigMXBean\n        val log =\n            \"\"\"\n            totalConnections : ${hikariPoolMXBean.totalConnections}\n            activeConnections : ${hikariPoolMXBean.activeConnections}\n            idleConnections : ${hikariPoolMXBean.idleConnections}\n            threadsAwaitingConnection : ${hikariPoolMXBean.threadsAwaitingConnection}\n            \"\"\".trimIndent()\n\n        this.log.info(log)\n\n        return member\n    }\n}\n\n\n이 코드에서는 먼저 DataSource를 HikariDataSource로 변환한 후, HikariPoolMXBean과 HikariConfigMXBean을 사용하여 커넥션 풀의 상태를 확인합니다. 이를 통해 총 커넥션 수, 활성 커넥션 수, 유휴 커넥션 수, 그리고 대기 중인 스레드 수와 같은 정보를 가져옵니다. 또한, runBlocking { delay(1000) }을 사용하여 1초간의 지연을 추가함으로써, 실제 요청이 처리되는 동안 커넥션 풀의 상태를 보다 명확하게 모니터링할 수 있습니다. 마지막으로, 이러한 커넥션 풀의 상태를 로그로 출력하여 애플리케이션의 성능을 모니터링하고, 필요한 경우 성능을 조정할 수 있는 정보를 제공합니다.\nConnection Pool 측정\n\n애플리케이션에서 커넥션 풀을 사용할 때, 커넥션 풀의 상태를 지속적으로 모니터링하는 것은 매우 중요합니다. 아래와 같은 로그는 **10 TPS (초당 트랜잭션)**를 지속적으로 유지할 때 발생한 로그입니다. 이때 평균 응답 시간은 약 1,000ms로 나타나며, 이는 TPS 수준을 고려했을 때 시스템이 적정 수준에서 작동하고 있음을 보여줍니다.\n\n로그 1:\n\ntotalConnections = 10\nactiveConnections = 7\nidleConnections = 3\nthreadsAwaitingConnection = 0\n\n이 상태는 총 10개의 커넥션 중 7개가 활성화되어 요청을 처리하고 있으며, 3개의 유휴 커넥션이 대기 중인 상황입니다. 모든 요청이 원활하게 처리되고 있기 때문에, 대기 중인 스레드는 없습니다.\n\n로그 2:\n\ntotalConnections = 10\nactiveConnections = 10\nidleConnections = 0\nthreadsAwaitingConnection = 4\n\n이 상태는 모든 10개의 커넥션이 활성화되어 요청을 처리 중이며, 더 이상 유휴 커넥션이 남아있지 않습니다. 이때 4개의 추가 요청이 들어와 대기 중입니다. threadsAwaitingConnection 값이 4로 증가한 이유는, 요청을 처리할 수 있는 유휴 커넥션이 없기 때문입니다.\n\n커넥션 풀 동작 및 타임아웃 발생\n커넥션 풀이 설정된 maximumPoolSize만큼 활성화된 경우, 그 이후에 들어오는 요청은 대기 상태에 들어가게 됩니다. 이때 대기 시간이 길어질 수 있으며, 이러한 대기 시간이 너무 길어지면 타임아웃이 발생할 수 있습니다. 타임아웃이 발생하는 주요 원인은 다음과 같습니다.\nconnection-timeout은 커넥션을 얻기 위해 스레드가 대기할 수 있는 최대 시간을 의미합니다. 예를 들어, connection-timeout이 30초로 설정되어 있다면, 커넥션 풀이 사용 가능한 커넥션을 30초 동안 제공하지 못할 경우 타임아웃이 발생하게 됩니다. 이 설정은 대기 중인 요청이 얼마 동안 기다릴 수 있는지를 제한합니다.\n커넥션 풀은 한정된 자원을 효율적으로 관리하여 시스템의 안정성을 유지하는 좋은 방법입니다. 그러나, 만약 요청량이 설정된 maximumPoolSize를 초과하게 되면 대기 상태가 발생할 수 있습니다. 이러한 상황을 방지하기 위해 적절한 타임아웃 값을 설정하고, 필요에 따라 풀 크기를 조정하는 것이 중요합니다.\nconnection-timeout 설정과 TPS 증가로 인한 오류 발생\n\n\n1\n2\n3\n4\n5\n6\n\nspring:\n    datasource:\n        hikari:\n            maximum-pool-size: 10         # 최대 커넥션 수\n            minimum-idle: 10              # 최소 유휴 커넥션 수\n            connection-timeout: 250       # 커넥션을 가져올 때 대기할 최대 시간 (밀리초)\n\n\n위 설정에서 connection-timeout을 250ms로 지정한 경우, TPS가 10을 초과하게 되면 threadsAwaitingConnection에 대기하는 시간이 250ms를 넘을 수 있습니다. 이 상황이 발생하면, 커넥션 풀은 설정된 대기 시간보다 오래 걸리기 때문에 타임아웃 오류가 발생하게 됩니다.\n\n이미지에서와 같이, RPS(Request Per Second)가 10 이상일 때 커넥션 풀의 한계로 인해 대기 중인 요청이 발생하고, 그 대기 시간이 250ms를 초과하면 오류가 발생합니다. 이때 Failures/s가 증가하는 것을 확인할 수 있습니다. 이는 타임아웃 설정과 관련이 있으며, 커넥션 풀의 자원 한계와 처리량을 적절히 맞춰야 하는 이유를 보여줍니다.\n오류 메시지 예시:\n\n\n1\n2\n3\n\njava.sql.SQLTransientConnectionException: Sample-HikariPool - Connection is not available, request timed out after 251ms.\nat com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:696) ~[HikariCP-4.0.3.jar:na]\nat com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:197)\n\n\n이 오류는 대기 시간이 설정된 connection-timeout을 초과했음을 의미하며, 커넥션 풀이 추가 요청을 처리할 수 없다는 것을 나타냅니다. 이 문제를 해결하기 위해 여러 가지 방법을 고려할 수 있습니다.\nConnection Pool 문제 해결방법\n애플리케이션에서 Connection Pool은 안정적인 데이터베이스 연결을 관리하는 데 매우 중요한 역할을 합니다. 하지만 시스템 부하가 높거나 설정이 적절하지 않은 경우, 커넥션 풀에서 발생하는 문제로 인해 성능 저하나 타임아웃 오류가 발생할 수 있습니다. 이러한 문제를 해결하기 위해서는 몇 가지 핵심적인 접근 방식을 취할 수 있습니다.\n\n쿼리 최적화: 데이터베이스 성능 문제는 종종 비효율적인 쿼리로 인해 발생합니다. 쿼리 최적화는 애플리케이션의 응답 시간을 줄이고, 커넥션이 오랫동안 점유되는 상황을 방지할 수 있는 중요한 방법입니다. 인덱스를 추가하거나 복잡한 쿼리 구조를 단순화하는 것 등이 이에 해당합니다.\nconnection-timeout 시간 조정: 커넥션 타임아웃은 대기 중인 요청이 커넥션을 얻기 위해 얼마나 오랜 시간 기다릴 수 있는지를 결정합니다. 이 시간을 적절히 설정함으로써 대기 중인 요청들이 효율적으로 처리되도록 할 수 있습니다. 너무 짧은 타임아웃은 오류를 유발할 수 있고, 너무 긴 타임아웃은 응답 지연을 초래할 수 있으므로, 상황에 맞게 타임아웃을 조정해야 합니다.\nmaximum-pool-size 증가: 예상되는 트래픽에 맞춰 커넥션 풀의 최대 크기를 늘림으로써 동시 요청 처리 성능을 향상시킬 수 있습니다. 그러나 자원 낭비를 방지하기 위해 시스템의 메모리와 CPU 사용량을 신중하게 고려하여 최적의 크기를 설정하는 것이 중요합니다.\n\n이와 같은 방법을 적절히 적용하면 Connection Pool 문제를 해결하고, 애플리케이션의 성능과 안정성을 크게 향상시킬 수 있습니다. 아래에서는 이 세 가지 접근 방법을 구체적으로 다루고, 실제 적용 사례를 통해 성능 최적화 방법을 설명합니다.\n쿼리 최적화\n쿼리 최적화는 데이터베이스 성능 향상에 있어 중요한 단계입니다. 특히, 애플리케이션에서 activeConnections가 빠르게 응답하지 못하는 경우, 그 원인이 복잡한 쿼리 처리에 있다면 쿼리 최적화를 통해 성능을 크게 개선할 수 있습니다. 잘못 설계된 쿼리나 불필요하게 긴 실행 시간을 가진 쿼리는 시스템 전반의 성능에 영향을 미치고, 커넥션 풀의 자원을 오래 점유하게 되어 대기 중인 요청들이 지연되는 상황을 초래할 수 있습니다.\n다음과 같은 방식으로 쿼리를 최적화함으로써 응답 속도를 개선할 수 있습니다:\n\n\n1\n2\n3\n4\n5\n6\n7\n\n@Transactional\nfun getMember(): Member {\n    val member = memberRepository.findById(Random.nextInt(1, 101).toLong()).get()\n    // runBlocking { delay(1000) } 블록킹 코드 제거\n    ...\n    return member\n}\n\n\n위 코드에서 불필요한 블로킹 코드인 runBlocking { delay(1000) }를 제거함으로써 쿼리 실행 지연을 없앴습니다. 이와 같이, 쿼리 최적화는 단순히 코드 내의 블로킹 요소를 제거하는 것뿐만 아니라, 인덱스 추가, 복잡한 조인 구조 단순화, 캐싱 등을 통해 데이터베이스에 대한 부하를 줄이는 방법도 포함됩니다. 이러한 최적화 작업을 통해 쿼리 실행 시간이 줄어들면 커넥션이 더 빨리 반환되고, 대기 중인 요청이 빠르게 처리될 수 있습니다.\n\n쿼리 최적화를 통해 성능이 향상되면, connection-timeout이 250ms로 설정된 상황에서도 RPS가 20인 경우처럼 높은 요청 처리량에서도 타임아웃 오류가 발생하지 않게 됩니다. 이는 쿼리가 최적화되면 커넥션이 더 빠르게 반환되기 때문에, 커넥션 풀 내에서 더 많은 요청을 동시에 처리할 수 있기 때문입니다.\n최적화된 쿼리는 커넥션 점유 시간을 줄여 connection-timeout 설정의 제한을 넘지 않도록 도와주며, 결과적으로 더 많은 트랜잭션을 안정적으로 처리할 수 있게 됩니다. 따라서, 쿼리 최적화는 애플리케이션 성능을 유지하고 향상시키는 중요한 방법입니다.\n결론적으로, 쿼리 최적화는 데이터베이스 성능 개선뿐만 아니라, 커넥션 풀 자원 관리에도 매우 중요한 역할을 합니다. 불필요한 대기 시간을 줄이고, 시스템이 고부하 상황에서도 원활하게 작동할 수 있도록 돕습니다.\nconnection-timeout 시간 조정\nconnection-timeout 설정은 대기 중인 요청이 커넥션을 얻기 위해 기다릴 수 있는 시간을 조정하는 중요한 요소입니다. 만약 요청량이 많아 maximumPoolSize에 도달했을 때, connection-timeout을 적절히 늘려주면 대기 중인 요청이 커넥션을 할당받기까지 더 오랜 시간을 허용할 수 있습니다. 예를 들어, connection-timeout을 250ms에서 2,500ms로 늘리면, 커넥션 반환 대기 시간을 더 길게 설정함으로써 타임아웃 오류를 줄일 수 있습니다. 하지만, 너무 긴 대기 시간을 설정하면 그만큼 응답 시간이 지연될 수 있으므로 신중하게 설정해야 합니다.\n아래는 connection-timeout을 2,500ms로 설정하고 테스트한 설정 예시입니다:\n\n\n1\n2\n3\n4\n5\n6\n\nspring:\n    datasource:\n        hikari:\n            maximum-pool-size: 10         # 최대 커넥션 수\n            minimum-idle: 10              # 최소 유휴 커넥션 수\n            connection-timeout: 2500      # 커넥션을 가져올 때 대기할 최대 시간 (밀리초)\n\n\n이 설정에서, delay(1000)는 유지하면서 connection-timeout을 2,500ms로 변경한 후 테스트를 진행하였습니다.\n\n테스트 결과는 아래와 같습니다:\n\n\n1\n2\n3\n4\n5\n\ntotalConnections : 10\nmaximumPoolSize : 10\nactiveConnections : 10\nidleConnections : 0\nthreadsAwaitingConnection : 20\n\n\ntotalConnections: 10개 커넥션이 모두 사용 중입니다.\nmaximumPoolSize: 설정된 최대 커넥션 수는 10개입니다.\nactiveConnections: 현재 10개의 커넥션이 활성화되어 있습니다.\nidleConnections: 유휴 커넥션이 없으며, 모든 커넥션이 사용 중입니다.\nthreadsAwaitingConnection: 20개의 요청이 대기 중입니다.\n\nconnection-timeout 설정이 2,500ms로 변경됨에 따라, threadsAwaitingConnection에서 대기하는 시간이 길어졌습니다. 결과적으로 타임아웃 오류는 발생하지 않았지만, 응답 시간이 더 길어졌습니다. 이는 각 요청에 대해 delay(1000)으로 인한 1,000ms의 블로킹 시간과 threadsAwaitingConnection에서 대기한 시간이 합쳐져 응답 시간이 느려진 것입니다.\n이런 경우, 타임아웃을 길게 설정하는 것은 타임아웃 오류를 방지할 수 있지만, 동시에 응답 속도가 저하될 수 있습니다. 따라서, connection-timeout은 요청의 특성과 트래픽 패턴에 맞추어 적절한 값을 설정하는 것이 매우 중요합니다.\nmaximum-pool-size 증가\n애플리케이션에서 처리할 수 있는 동시 요청 수가 많아질 것으로 예상된다면, maximum-pool-size를 늘려 커넥션 풀에서 더 많은 커넥션을 생성하고 유지할 수 있도록 설정할 수 있습니다. 예를 들어, 트래픽이 예상보다 많아지거나, 동시성 처리가 많이 요구되는 상황에서는 커넥션 풀 크기를 늘려주는 것이 유리합니다. 이를 통해 더 많은 요청을 동시에 처리할 수 있게 됩니다. 그러나, 무작정 풀 크기를 크게 설정하는 것은 자원 낭비를 초래할 수 있습니다. 커넥션 풀 크기가 커지면 더 많은 메모리와 CPU가 필요하기 때문에, 시스템의 자원 사용량을 신중히 고려한 후에 조정하는 것이 중요합니다.\n예를 들어, maximum-pool-size를 100으로 설정하고, 1,000ms 대기 코드를 다시 활성화시키며 connection-timeout을 250ms로 유지했음에도 불구하고, 오류가 발생하지 않는 상황을 가정해보겠습니다.\n\n\n1\n2\n3\n4\n5\n6\n7\n\n@Transactional\nfun getMember(): Member {\n  val member = memberRepository.findById(Random.nextInt(1, 101).toLong()).get()\n  runBlocking { delay(1000) }  // 1,000ms 대기\n  ...\n  return member\n}\n\n\n이 코드에서는 runBlocking { delay(1000) }를 통해 각 요청마다 1초의 지연을 발생시키고 있지만, maximum-pool-size를 충분히 높게 설정함으로써 동시 요청이 몰리는 상황에서도 타임아웃 오류가 발생하지 않습니다. 아래와 같은 로그를 통해 확인할 수 있습니다.\n\n\n\n1\n2\n3\n4\n\ntotalConnections : 30\nmaximumPoolSize : 100\nactiveConnections : 13\nidleConnections : 17\n\n\ntotalConnections: 현재 커넥션 풀에서 관리되고 있는 커넥션의 총 개수로, 현재 30개가 할당되어 있는 상태입니다.\nmaximumPoolSize: 커넥션 풀에서 설정된 최대 커넥션 수는 100입니다. 하지만, 모든 커넥션이 필요하지 않기 때문에 100까지 차지 않고 있는 상황입니다.\nactiveConnections: 현재 요청을 처리 중인 활성 커넥션 수는 13개입니다.\nidleConnections: 유휴 상태로 대기 중인 커넥션 수는 17개로, 요청이 추가로 들어오면 이 커넥션들이 활성화될 수 있습니다.\n\n이 상황에서는 maximumPoolSize가 100으로 설정되어 있지만, 모든 커넥션이 사용 중이지 않기 때문에 자원 낭비를 최소화할 수 있습니다. 요청이 몰리지 않는 상태에서는 activeConnections가 13개에 머무르고, 나머지 17개는 유휴 상태로 남아있습니다. 이처럼 최대 커넥션 수는 설정했지만, 필요할 때만 커넥션이 활성화되고 나머지는 유휴 상태를 유지하는 방식으로 효율적인 자원 관리가 가능합니다.\n따라서, maximum-pool-size는 트래픽이 몰릴 경우를 대비해 충분히 큰 값으로 설정할 수 있지만, 시스템 자원에 부담을 주지 않도록 실제 트래픽과 자원 사용량을 분석하여 적절한 값으로 설정하는 것이 중요합니다.\n결론\nHikariCP를 사용한 MySQL 커넥션 풀 관리는 애플리케이션 성능 최적화의 핵심 요소입니다. 적절한 커넥션 풀 설정을 통해 데이터베이스와의 연결을 효율적으로 관리하고, 불필요한 연결 재생성을 피하며, 응답 시간을 단축할 수 있습니다. 그러나, maximumPoolSize와 connection-timeout과 같은 설정이 적절하지 않으면, 트래픽이 증가할 때 커넥션 풀에서 대기 시간이 늘어나거나 타임아웃 오류가 발생할 수 있습니다.\n이를 방지하고 시스템 성능을 최적화하기 위해 다음과 같은 중요한 포인트를 기억해야 합니다.\n\n쿼리 최적화: 쿼리의 성능이 느릴 경우 activeConnections가 불필요하게 오래 점유되며, 전체 시스템의 성능을 저하시킬 수 있습니다. 쿼리를 최적화하여 커넥션을 빠르게 반환하면 대기 중인 요청도 신속하게 처리할 수 있습니다.\nmaximum-pool-size 설정: maximum-pool-size는 동시 처리할 수 있는 최대 요청 수를 결정합니다. 트래픽 예측에 맞춰 적절히 풀 크기를 늘리는 것은 중요하지만, 자원 낭비를 방지하기 위해 너무 크게 설정하지 않는 것이 좋습니다. 실제로 필요할 때만 커넥션이 활성화되는 방식으로 자원을 효율적으로 관리해야 합니다.\nconnection-timeout 설정: connection-timeout 값은 대기 중인 요청이 커넥션을 얻기 위해 기다릴 수 있는 최대 시간을 결정합니다. 이 값을 너무 낮게 설정하면 트래픽이 몰릴 때 타임아웃 오류가 자주 발생할 수 있으며, 반대로 너무 길게 설정하면 응답 시간이 지연될 수 있습니다. 트래픽 패턴에 맞춰 적절한 값을 설정하는 것이 중요합니다.\nTPS 모니터링: 초당 처리량(TPS)을 지속적으로 모니터링하고, 트래픽 패턴을 기반으로 HikariCP 설정을 조정해야 합니다. 이를 통해 애플리케이션이 다양한 부하 상황에서도 원활하게 작동할 수 있도록 합니다.\n\n최종적으로, 커넥션 풀 설정을 조정할 때는 트래픽 패턴과 시스템 자원을 고려하여 최적화된 값을 설정하는 것이 필수적입니다. 이를 통해 응답 속도 지연 및 타임아웃 오류를 최소화할 수 있으며, 안정적인 시스템 운영과 함께 애플리케이션의 성능을 극대화할 수 있습니다.",
        "summary": "\n    \n      \n      \n        <h2><span id=\"connection-pool이란\">Connection Pool이란?</span></h2>\n<p>애플리케이션에서 MySQL 데이터베이스와의 효율적인 연결을 위해 <strong>커넥션 풀</strong>을 사용합니다. 커넥션 풀은\n      \n    \n    ",
        "id": "https://cheese10yun.github.io/mysql-connection-pool-timeout/",
        "isoDate": "2024-10-20T16:15:31.000Z"
      }
    ]
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": [
      {
        "title": "Android에서 효율적인 모듈 디펜던시 관리하기, build-logic으로 전환하기?",
        "link": "https://thdev.tech/android/2024/10/20/Android-dependency-manage/",
        "pubDate": "Sun, 20 Oct 2024 00:00:00 +0000",
        "content": "<p>모듈을 지속적으로 추가하는 요즘 개발에서는 디펜던시 관리는 어떻게 하는 것이 좋을까?</p>\n\n<p>필자는 모듈 240개 정도를 회사 프로젝트에서 활용하고 있는데 아래와 같다.</p>\n\n<ul>\n  <li>test 모듈</li>\n  <li>구현체에 대한 인터페이스 정의하는 모듈</li>\n  <li>구현체 모듈</li>\n</ul>\n\n<p>초점은 최대한 손 안 대고 자동으로 모듈을 import 하고, 디펜던시를 관리하는 것이다.</p>\n\n<p>build-logic을 활용하고, version catalog을 활용하여 디펜던시를 관리하고, 추가되는 모듈은 자동 import 되도록 하는 방법을 소개한다.</p>\n\n<!--more-->\n\n<h2>읽기 전에</h2>\n\n<p>사용하던 기존 환경을 소개한다.</p>\n\n<ul>\n  <li>versionCatalog</li>\n  <li>build-logic</li>\n  <li>gradle kts</li>\n</ul>\n\n<p>build-logic을 활용하였고, app 모듈에서의 import 자동화를 하기 위한 프로젝트를 구성하였다. 이를 buildSrc로 변경하면서 불편하게 활용하던 부분을 제거하였던 부분을 소개하는 글이다.</p>\n\n<p><br /></p>\n\n<h2>기존엔 어떻게 했을까?</h2>\n\n<p>build-logic을 활용하기 전에는 buildSrc를 활용하여 관리하였다.</p>\n\n<p>이때는 build-logic에서 Project object 클래스를 별도로 생성하고 여기에 앱 내의 모든 모듈 정보를 정의하였는데 아래와 같은 형식이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">object</span> <span class=\"nc\">Projects</span> <span class=\"p\">{</span>\n    <span class=\"kd\">object</span> <span class=\"nc\">Core</span> <span class=\"p\">{</span>\n        <span class=\"k\">const</span> <span class=\"kd\">val</span> <span class=\"py\">core</span> <span class=\"p\">=</span> <span class=\"s\">\":core:data:home\"</span>\n        <span class=\"k\">const</span> <span class=\"kd\">val</span> <span class=\"py\">coreApi</span> <span class=\"p\">=</span> <span class=\"s\">\":core:data:homeApi\"</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">object</span> <span class=\"nc\">Feature</span> <span class=\"p\">{</span>\n        <span class=\"k\">const</span> <span class=\"kd\">val</span> <span class=\"py\">feature</span> <span class=\"p\">=</span> <span class=\"s\">\":feature:home\"</span>\n        <span class=\"k\">const</span> <span class=\"kd\">val</span> <span class=\"py\">featureApi</span> <span class=\"p\">=</span> <span class=\"s\">\":feature:homeApi\"</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">object</span> <span class=\"nc\">Test</span> <span class=\"p\">{</span>\n        <span class=\"n\">cont</span> <span class=\"kd\">val</span> <span class=\"py\">test</span> <span class=\"p\">=</span> <span class=\"s\">\":test\"</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">object</span> <span class=\"nc\">Flavor</span> <span class=\"p\">{</span>\n        <span class=\"k\">const</span> <span class=\"kd\">val</span> <span class=\"py\">api</span> <span class=\"p\">=</span> <span class=\"s\">\":flavor:api\"</span>\n        <span class=\"k\">const</span> <span class=\"kd\">val</span> <span class=\"py\">release</span> <span class=\"p\">=</span> <span class=\"s\">\":flavor:release\"</span>\n        <span class=\"k\">const</span> <span class=\"kd\">val</span> <span class=\"py\">debug</span> <span class=\"p\">=</span> <span class=\"s\">\":flavor:debug\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>당연하지만 <code class=\"language-plaintext highlighter-rouge\">settings.gradle.kts</code>에도 이를 정의해야 한다.</p>\n\n<p>그리고 Project exteions 함수를 정의하여 활용하였다. 이제 이 부분이 바뀔 일은 없다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">fun</span> <span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nf\">localProjects</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nf\">dependencies</span> <span class=\"p\">{</span>\n        <span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Core</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"nf\">loadLibrary</span> <span class=\"p\">{</span> <span class=\"n\">projectName</span> <span class=\"p\">-&gt;</span>\n            <span class=\"s\">\"implementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"n\">projectName</span><span class=\"p\">))</span>\n        <span class=\"p\">}</span>\n        <span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Feature</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"nf\">loadLibrary</span> <span class=\"p\">{</span> <span class=\"n\">projectName</span> <span class=\"p\">-&gt;</span>\n            <span class=\"s\">\"implementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"n\">projectName</span><span class=\"p\">))</span>\n        <span class=\"p\">}</span>\n        <span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Test</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"nf\">loadLibrary</span> <span class=\"p\">{</span> <span class=\"n\">projectName</span> <span class=\"p\">-&gt;</span>\n            <span class=\"s\">\"testImplementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"n\">projectName</span><span class=\"p\">))</span>\n        <span class=\"p\">}</span>\n        <span class=\"s\">\"implementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Flavor</span><span class=\"p\">.</span><span class=\"n\">api</span><span class=\"p\">))</span>\n        <span class=\"s\">\"relaseImplementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Flavor</span><span class=\"p\">.</span><span class=\"n\">release</span><span class=\"p\">))</span>\n        <span class=\"s\">\"debugImplementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Flavor</span><span class=\"p\">.</span><span class=\"n\">debug</span><span class=\"p\">))</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>참고로 loadLibrary는 아래와 같다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nf\">KClass</span><span class=\"p\">&lt;</span><span class=\"k\">out</span> <span class=\"nc\">Any</span><span class=\"p\">&gt;.</span><span class=\"nf\">loadLibrary</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">projectName</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nf\">buildLocalProjects</span><span class=\"p\">().</span><span class=\"nf\">forEach</span> <span class=\"p\">{</span> <span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">projectName</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span>\n        <span class=\"nf\">body</span><span class=\"p\">(</span><span class=\"n\">projectName</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">private</span> <span class=\"k\">fun</span> <span class=\"nf\">KClass</span><span class=\"p\">&lt;</span><span class=\"k\">out</span> <span class=\"nc\">Any</span><span class=\"p\">&gt;.</span><span class=\"nf\">buildLocalProjects</span><span class=\"p\">():</span> <span class=\"nc\">HashMap</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">String</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">val</span> <span class=\"py\">locals</span> <span class=\"p\">=</span> <span class=\"n\">hashMapOf</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">String</span><span class=\"p\">&gt;()</span>\n\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">member</span> <span class=\"k\">in</span> <span class=\"n\">declaredMembers</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">locals</span><span class=\"p\">[</span><span class=\"n\">member</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"n\">member</span><span class=\"p\">.</span><span class=\"nf\">call</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"nc\">String</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">locals</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위에서 정의한 Project extensions 함수를 app 모듈에 한 줄 추가하면 끝이 난다.</p>\n\n<div class=\"language-gradle highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">plugins</span> <span class=\"o\">{</span>\n    <span class=\"n\">id</span><span class=\"o\">(</span><span class=\"s2\">\"kotlin-android\"</span><span class=\"o\">)</span>\n    <span class=\"n\">kotlin</span><span class=\"o\">(</span><span class=\"s2\">\"kapt\"</span><span class=\"o\">)</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">android</span> <span class=\"o\">{</span>\n    <span class=\"n\">localProjects</span><span class=\"o\">()</span> <span class=\"c1\">// extensions 확장 함수</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2>전혀 이점이 없다.</h2>\n\n<p>이런 방식은 사실 전혀 이점이 없다. 모듈 하나 추가하면 다음 작업을 항상 필요로 한다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">settings.gradle.kts</code> 파일과 build-logic에 정의해둔 Projects 파일에 항상 새로운 모듈 이름을 추가해야 한다.</p>\n\n<p>그리고 동기화해야 한다. 그래야 app 모듈에 알아서 포함되어 빌드가 완료될 수 있다.</p>\n\n<p>얼마나 귀찮은 작업을 편하다고 사용하고 있던 걸까 싶다.</p>\n\n<p><br /></p>\n\n<h2>가장 쉬운 방법</h2>\n\n<p>build-logic을 사용하든 buildSrc를 사용하던 가장 쉬운 방법을 소개하겠다.</p>\n\n<ol>\n  <li>enableFeaturePreview(“TYPESAFE_PROJECT_ACCESSORS”)을 활성화한다.</li>\n  <li>app 모듈에서 forEach {} 문을 활용해 자동 implementation을 활용한다.</li>\n  <li>이제 settings.gradle.kts 파일에 새로운 모듈 정보만 추가하면 자동 import를 한다. 이제 app 모듈은 신경 쓰지 않아도 된다.</li>\n</ol>\n\n<h3>settings.gradle.kts 파일에 옵션 추가</h3>\n\n<p>최신 프로젝트를 생성했다면 이미 포함되어 있을 것이다. 없다면 아래와 같이 추가한다. 위치는 상관없고, 워닝이 뜨긴 하지만 무시한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">enableFeaturePreview</span><span class=\"p\">(</span><span class=\"s\">\"TYPESAFE_PROJECT_ACCESSORS\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h3>2번째 단계</h3>\n\n<p>여기가 중요한 부분이다. 모듈화를 하면</p>\n\n<ul>\n  <li>feature 모듈 모음</li>\n  <li>data 모듈 모음</li>\n  <li>core 모듈 모음</li>\n</ul>\n\n<p>등 다양한 방식으로 접근하게 될 것인데 이와 같을 수 있다.</p>\n\n<p>그럼 이제 이 형태를 1번에서 활성화한 feature preview를 통해 쉽게 사용할 수 있는데 아래와 같다.</p>\n\n<p>app 모듈 내의 <code class=\"language-plaintext highlighter-rouge\">build.gradle.kts</code> 파일을 열고</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">plugins</span> <span class=\"p\">{</span>\n    <span class=\"nf\">id</span><span class=\"p\">(</span><span class=\"s\">\"kotlin-android\"</span><span class=\"p\">)</span>\n    <span class=\"nf\">kotlin</span><span class=\"p\">(</span><span class=\"s\">\"kapt\"</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"nf\">android</span> <span class=\"p\">{</span>\n    <span class=\"n\">projects</span><span class=\"p\">.</span><span class=\"nc\">Core</span><span class=\"p\">.</span><span class=\"nf\">filterImplementation</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"nf\">contains</span><span class=\"p\">(</span><span class=\"s\">\"assertion\"</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n            <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"nf\">implementation</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">projects</span><span class=\"p\">.</span><span class=\"nc\">Feature</span><span class=\"p\">.</span><span class=\"nf\">filterImplementation</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"nf\">contains</span><span class=\"p\">(</span><span class=\"s\">\"assertion\"</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n            <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"nf\">implementation</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">projects</span><span class=\"p\">.</span><span class=\"nc\">Test</span><span class=\"p\">.</span><span class=\"nf\">filterImplementation</span> <span class=\"p\">{</span>\n        <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"s\">\"implementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Flavor</span><span class=\"p\">.</span><span class=\"n\">api</span><span class=\"p\">))</span>\n    <span class=\"s\">\"relaseImplementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Flavor</span><span class=\"p\">.</span><span class=\"n\">release</span><span class=\"p\">))</span>\n    <span class=\"s\">\"debugImplementation\"</span><span class=\"p\">(</span><span class=\"nf\">project</span><span class=\"p\">(</span><span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nc\">Flavor</span><span class=\"p\">.</span><span class=\"n\">debug</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>필자는 filter가 필요해서 아래와 같이 extensions을 추가하여 사용하고 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">fun</span> <span class=\"nc\">DelegatingProjectDependency</span><span class=\"p\">.</span><span class=\"nf\">filterImplementation</span><span class=\"p\">(</span>\n    <span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nc\">Project</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">dependencyProject</span><span class=\"p\">.</span><span class=\"n\">allprojects</span><span class=\"p\">.</span><span class=\"nf\">forEach</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">.</span><span class=\"n\">buildFile</span><span class=\"p\">.</span><span class=\"n\">isFile</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nf\">body</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>앞에서 사용하던 이전 방식은 build-logic에 포함되어 있던 <code class=\"language-plaintext highlighter-rouge\">Projects.kt</code> 파일에 항상 디펜던시 한 줄 더 추가했어야 하지만 이젠 <code class=\"language-plaintext highlighter-rouge\">settings.gradle.kts</code> 파일만 수정해 주면 알아서 반영하게 된다.</p>\n\n<p><br /></p>\n\n<h2>buildSrc에서 build-logic으로</h2>\n\n<p><code class=\"language-plaintext highlighter-rouge\">buildSrc</code>이 있는 상태에서 <code class=\"language-plaintext highlighter-rouge\">build-logic</code>가 처음 나왔을 때는 크게 장점이 있진 않았다. 성능이 유사하다 보니 특별히 바꿔야 할 이유가 많지 않았다.</p>\n\n<p>하지만 지금은 증분 옵션을 제공함으로써 성능적 이점을 가진다. 완전히 코틀린 문법을 통해 사용할 수 있다는 장점도 있지만 gradle로 작성하는 것 역시 가능하다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">buildSrc</code> 한 줄 수정하면 모든 <code class=\"language-plaintext highlighter-rouge\">buildSrc</code> 파일 내의 gradle 파일도 전부 재확인 작업이 들어가는데 이때 시간의 소요가 발생한다.</p>\n\n<p>반면 <code class=\"language-plaintext highlighter-rouge\">build-logic</code>을 활용하는 경우는 증분 옵션을 통해 수정한 부분만 빌드 반영할 수 있어 조금 더 빠른 빌드가 가능하다.</p>\n\n<p><br /></p>\n\n<h3>buildSrc을 build-logic로 변경하는 작업은 사실 쉬운 작업은 아니다.</h3>\n\n<p>빌드 자체를 수정해야 하는 부분이다 보니 폭 넓게 사용하는 buildSrc를 수정하는 일은 쉽게 할 수 있는 일은 아니다.</p>\n\n<p>잘못 수정하면 빌드가 가능해질 때까지 걸리는 시간 역시 그만큼 지연 발생 가능하다.</p>\n\n<ul>\n  <li>전체 프로젝트를 기반하는 모든 코드를 수정하고 갈 것인가?</li>\n  <li>buildSrc를 build-logic에서 최대한 활용하고 갈 것인가?</li>\n</ul>\n\n<p>를 잘 선택하고 가야 한다. 혼자 하는 프로젝트야 이렇게 하든 저렇게 하든 사실 상관없지만 작업이 진행 중인 협업 프로젝트에서는 영향도가 매우 크다.</p>\n\n<p>그대로 활용할 순 있지만 아래의 규칙을 미리 바꿔두는 것도 좋다.</p>\n\n<ul>\n  <li>plugins 적용할 네이밍 규칙을 미리 정의한다.\n    <ul>\n      <li>Now in android에서는 네이밍 규칙을 2단계로 재 정의한다.</li>\n      <li>build-logic 내부에서 정의하는 kotlin 파일과 <code class=\"language-plaintext highlighter-rouge\">build.gradle</code>에서 이를 gradle.kts로 컴파일 하기 위한 정의</li>\n      <li>versionCatalog에서 build-logic에서 정의한 이름을 내부에서 활용하기 위한 규칙으로 변경한다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p>build-logic 코틀린 파일명</p>\n<ul>\n  <li>AndroidApplicationConventionPlugin.kt</li>\n</ul>\n\n<p>build-logic에서 정의하는 빌드 할 파일 명</p>\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">gradlePlugin</span> <span class=\"p\">{</span>\n    <span class=\"nf\">plugins</span> <span class=\"p\">{</span>\n        <span class=\"nf\">register</span><span class=\"p\">(</span><span class=\"s\">\"androidApplication\"</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">id</span> <span class=\"p\">=</span> <span class=\"s\">\"my.android.application\"</span> <span class=\"c1\">// gradle 파일 매칭 id</span>\n            <span class=\"n\">implementationClass</span> <span class=\"p\">=</span> <span class=\"s\">\"AndroidApplicationConventionPlugin\"</span> <span class=\"c1\">// 파일명</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>마지막으로 versionCatalog에서 한 번 더 매핑해서 각 모듈에서 alias로 활용할 이름</p>\n\n<p>// libs.versions.toml 에 정의</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">my-android-application</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"n\">id</span> <span class=\"p\">=</span> <span class=\"s\">\"my.android.application\"</span><span class=\"p\">,</span> <span class=\"n\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"unspecified\"</span> <span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>최종적으로 각 build.gradle.kts 파일에 아래와 같이 적용하여 사용할 수 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">plugins</span> <span class=\"p\">{</span>\n    <span class=\"nf\">alias</span><span class=\"p\">(</span><span class=\"n\">my</span><span class=\"p\">.</span><span class=\"n\">android</span><span class=\"p\">.</span><span class=\"n\">application</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이런 과정을 진행하기 때문에 alias만이라도 미리 정의해둘 수 있는데, <code class=\"language-plaintext highlighter-rouge\">my.android.application.kts.kt</code>을 kts 파일로 정의하였다면 <code class=\"language-plaintext highlighter-rouge\">libs.version.toml</code>에 아래와 같이 미리 정의해두고 사용할 수 있다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">my-android-application</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"n\">id</span> <span class=\"p\">=</span> <span class=\"s\">\"my.android.application\"</span><span class=\"p\">,</span> <span class=\"n\">version</span> <span class=\"p\">=</span> <span class=\"s\">\"unspecified\"</span> <span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>최소한 파일명 변경되어야 하는 걸 미리 대응할 수 있다.</p>\n\n<p>추가로 gradle 9.0부터 buildConfig가 자동 비활성화된다. 필요한 feature에서 만 buildConfig를 활성화할 수 있는데 이런 부분은 위 작업이 끝나고 적용할 수 있다.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">buildConfig</code> 옵션을 미리 재정의</li>\n</ul>\n\n<p><br /></p>\n\n<h2>gradle.kts에서 kt 파일로 변환</h2>\n\n<p>이런 예는 google now in android를 잘 참고하여 적용할 수 있다.</p>\n\n<p>convention 모듈을 build-logic 내부에 따로 두고 있다는 점이 또 다른데 몇 가지 설정을 추가할 수 있다.</p>\n\n<ul>\n  <li><a href=\"https://github.com/android/nowinandroid/blob/main/build-logic/convention/src/main/kotlin/AndroidApplicationComposeConventionPlugin.kt\">NIA AndroidApplicationComposeConventionPlugin 링크</a></li>\n</ul>\n\n<p>application에서 활용할 <code class=\"language-plaintext highlighter-rouge\">my.application.gradle.kts</code> 파일이 아래와 같다. 이를 kt로 변환해 보겠다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">plugins</span> <span class=\"p\">{</span>\n    <span class=\"nf\">id</span><span class=\"p\">(</span><span class=\"s\">\"com.android.application\"</span><span class=\"p\">)</span>\n    <span class=\"nf\">kotlin</span><span class=\"p\">(</span><span class=\"s\">\"android\"</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">val</span> <span class=\"py\">versionCatalog</span> <span class=\"p\">=</span> <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"n\">extensions</span><span class=\"p\">.</span><span class=\"n\">getByType</span><span class=\"p\">&lt;</span><span class=\"nc\">VersionCatalogsExtension</span><span class=\"p\">&gt;()</span>\n<span class=\"kd\">val</span> <span class=\"py\">libs</span> <span class=\"p\">=</span> <span class=\"n\">versionCatalog</span><span class=\"p\">.</span><span class=\"nf\">named</span><span class=\"p\">(</span><span class=\"s\">\"libs\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nf\">android</span> <span class=\"p\">{</span>\n    <span class=\"n\">compileSdk</span> <span class=\"p\">=</span> <span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"s\">\"compileSdk\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">().</span><span class=\"n\">requiredVersion</span><span class=\"p\">.</span><span class=\"nf\">toInt</span><span class=\"p\">()</span>\n    <span class=\"n\">buildToolsVersion</span> <span class=\"p\">=</span> <span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"s\">\"buildToolsVersion\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">().</span><span class=\"n\">requiredVersion</span>\n\n    <span class=\"nf\">defaultConfig</span> <span class=\"p\">{</span>\n        <span class=\"n\">minSdk</span> <span class=\"p\">=</span> <span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"s\">\"minSdk\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">().</span><span class=\"n\">requiredVersion</span><span class=\"p\">.</span><span class=\"nf\">toInt</span><span class=\"p\">()</span>\n        <span class=\"n\">targetSdk</span> <span class=\"p\">=</span> <span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"s\">\"targetSdk\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">().</span><span class=\"n\">requiredVersion</span><span class=\"p\">.</span><span class=\"nf\">toInt</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">kotlinOptions</span> <span class=\"p\">{</span>\n        <span class=\"n\">jvmTarget</span> <span class=\"p\">=</span> <span class=\"s\">\"17\"</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">compileOptions</span> <span class=\"p\">{</span>\n        <span class=\"n\">sourceCompatibility</span> <span class=\"p\">=</span> <span class=\"nc\">JavaVersion</span><span class=\"p\">.</span><span class=\"nc\">VERSION_17</span>\n        <span class=\"n\">targetCompatibility</span> <span class=\"p\">=</span> <span class=\"nc\">JavaVersion</span><span class=\"p\">.</span><span class=\"nc\">VERSION_17</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nf\">dependencies</span> <span class=\"p\">{</span>\n    <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.mockito\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">())</span>\n    <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.mockitoKotlin\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">())</span>\n\n    <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.junit5\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">())</span>\n    <span class=\"nf\">testRuntimeOnly</span><span class=\"p\">(</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.junit5.engine\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">())</span>\n    <span class=\"nf\">testRuntimeOnly</span><span class=\"p\">(</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.junit5.vintage\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">())</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>참고로 이 코드에는 build-logic에서 <code class=\"language-plaintext highlighter-rouge\">libs</code>에 쉽게 접근하기 위한 exteions 코드를 포함하고 있는데 아래와 같다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">val</span> <span class=\"py\">versionCatalog</span> <span class=\"p\">=</span> <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"n\">extensions</span><span class=\"p\">.</span><span class=\"n\">getByType</span><span class=\"p\">&lt;</span><span class=\"nc\">VersionCatalogsExtension</span><span class=\"p\">&gt;()</span>\n<span class=\"kd\">val</span> <span class=\"py\">libs</span> <span class=\"p\">=</span> <span class=\"n\">versionCatalog</span><span class=\"p\">.</span><span class=\"nf\">named</span><span class=\"p\">(</span><span class=\"s\">\"libs\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// 사용할 때는</span>\n<span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.mockito\"</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">())</span>\n</code></pre></div></div>\n\n<p>이 파일을 build-logic에서 Project를 상속받는 구조로 변경하면 아래와 같이 변경되는데 먼저 아래의 코드가 필요하다. Library 인지 Application 인지 구분하고,</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">internal</span> <span class=\"kd\">val</span> <span class=\"py\">Project</span><span class=\"p\">.</span><span class=\"n\">applicationExtension</span><span class=\"p\">:</span> <span class=\"nc\">CommonExtension</span><span class=\"p\">&lt;</span><span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">&gt;</span>\n    <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"n\">extensions</span><span class=\"p\">.</span><span class=\"n\">getByType</span><span class=\"p\">&lt;</span><span class=\"nc\">ApplicationExtension</span><span class=\"p\">&gt;()</span>\n\n<span class=\"k\">internal</span> <span class=\"kd\">val</span> <span class=\"py\">Project</span><span class=\"p\">.</span><span class=\"n\">libraryExtension</span><span class=\"p\">:</span> <span class=\"nc\">CommonExtension</span><span class=\"p\">&lt;</span><span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">&gt;</span>\n    <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"n\">extensions</span><span class=\"p\">.</span><span class=\"n\">getByType</span><span class=\"p\">&lt;</span><span class=\"nc\">LibraryExtension</span><span class=\"p\">&gt;()</span>\n\n<span class=\"k\">internal</span> <span class=\"kd\">val</span> <span class=\"py\">Project</span><span class=\"p\">.</span><span class=\"n\">androidExtension</span><span class=\"p\">:</span> <span class=\"nc\">CommonExtension</span><span class=\"p\">&lt;</span><span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">,</span> <span class=\"err\">*</span><span class=\"p\">&gt;</span>\n    <span class=\"k\">get</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"nf\">runCatching</span> <span class=\"p\">{</span> <span class=\"n\">libraryExtension</span> <span class=\"p\">}</span>\n        <span class=\"p\">.</span><span class=\"nf\">recoverCatching</span> <span class=\"p\">{</span> <span class=\"n\">applicationExtension</span> <span class=\"p\">}</span>\n        <span class=\"p\">.</span><span class=\"nf\">onFailure</span> <span class=\"p\">{</span> <span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"s\">\"Could not find Library or Application extension from this project\"</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n        <span class=\"p\">.</span><span class=\"nf\">getOrThrow</span><span class=\"p\">()</span>\n</code></pre></div></div>\n\n<p>또 하나의 코드가 필요한데 libs에 쉽게 접근하기 위한 2개의 코드이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">):</span> <span class=\"nc\">Provider</span><span class=\"p\">&lt;</span><span class=\"nc\">MinimalExternalModuleDependency</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span>\n    <span class=\"n\">extensions</span><span class=\"p\">.</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">()</span>\n\n<span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">=</span>\n    <span class=\"n\">extensions</span><span class=\"p\">.</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">).</span><span class=\"k\">get</span><span class=\"p\">().</span><span class=\"n\">requiredVersion</span>\n</code></pre></div></div>\n\n<p>공통 코드로 활용될 거니 아래와 같이 사전 작업해둔다.</p>\n\n<p>이 코드는 now in android 코드에 있으니 그대로 참고 <a href=\"https://github.com/android/nowinandroid/blob/main/build-logic/convention/src/main/kotlin/com/google/samples/apps/nowinandroid/KotlinAndroid.kt\">NIA - KotlinAndroid</a></p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nf\">configureKotlinAndroid</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Plugins</span>\n    <span class=\"n\">pluginManager</span><span class=\"p\">.</span><span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"s\">\"org.jetbrains.kotlin.android\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">// Android settings</span>\n    <span class=\"n\">androidExtension</span><span class=\"p\">.</span><span class=\"nf\">apply</span> <span class=\"p\">{</span>\n        <span class=\"n\">compileSdk</span> <span class=\"p\">=</span> <span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"s\">\"compileSdk\"</span><span class=\"p\">).</span><span class=\"nf\">toInt</span><span class=\"p\">()</span>\n        <span class=\"n\">buildToolsVersion</span> <span class=\"p\">=</span> <span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"s\">\"buildToolsVersion\"</span><span class=\"p\">)</span>\n\n        <span class=\"nf\">defaultConfig</span> <span class=\"p\">{</span>\n            <span class=\"n\">minSdk</span> <span class=\"p\">=</span> <span class=\"nf\">findVersion</span><span class=\"p\">(</span><span class=\"s\">\"minSdk\"</span><span class=\"p\">).</span><span class=\"nf\">toInt</span><span class=\"p\">()</span>\n            <span class=\"n\">vectorDrawables</span><span class=\"p\">.</span><span class=\"n\">useSupportLibrary</span> <span class=\"p\">=</span> <span class=\"k\">true</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"nf\">buildFeatures</span> <span class=\"p\">{</span>\n            <span class=\"n\">buildConfig</span> <span class=\"p\">=</span> <span class=\"k\">false</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"nf\">compileOptions</span> <span class=\"p\">{</span>\n            <span class=\"n\">sourceCompatibility</span> <span class=\"p\">=</span> <span class=\"nc\">JavaVersion</span><span class=\"p\">.</span><span class=\"nc\">VERSION_17</span>\n            <span class=\"n\">targetCompatibility</span> <span class=\"p\">=</span> <span class=\"nc\">JavaVersion</span><span class=\"p\">.</span><span class=\"nc\">VERSION_17</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">configureKotlin</span><span class=\"p\">&lt;</span><span class=\"nc\">KotlinAndroidProjectExtension</span><span class=\"p\">&gt;()</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/**\n * Configure base Kotlin options\n */</span>\n<span class=\"k\">private</span> <span class=\"k\">inline</span> <span class=\"k\">fun</span> <span class=\"p\">&lt;</span><span class=\"k\">reified</span> <span class=\"nc\">T</span> <span class=\"p\">:</span> <span class=\"nc\">KotlinTopLevelExtension</span><span class=\"p\">&gt;</span> <span class=\"nc\">Project</span><span class=\"p\">.</span><span class=\"nf\">configureKotlin</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"n\">configure</span><span class=\"p\">&lt;</span><span class=\"nc\">T</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Treat all Kotlin warnings as errors (disabled by default)</span>\n    <span class=\"c1\">// Override by setting warningsAsErrors=true in your ~/.gradle/gradle.properties</span>\n    <span class=\"kd\">val</span> <span class=\"py\">warningsAsErrors</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">?</span> <span class=\"k\">by</span> <span class=\"n\">project</span>\n    <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">is</span> <span class=\"nc\">KotlinAndroidProjectExtension</span> <span class=\"p\">-&gt;</span> <span class=\"n\">compilerOptions</span>\n        <span class=\"k\">is</span> <span class=\"nc\">KotlinJvmProjectExtension</span> <span class=\"p\">-&gt;</span> <span class=\"n\">compilerOptions</span>\n        <span class=\"k\">else</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">TODO</span><span class=\"p\">(</span><span class=\"s\">\"Unsupported project extension $this ${T::class}\"</span><span class=\"p\">)</span>\n    <span class=\"p\">}.</span><span class=\"nf\">apply</span> <span class=\"p\">{</span>\n        <span class=\"n\">jvmTarget</span> <span class=\"p\">=</span> <span class=\"nc\">JvmTarget</span><span class=\"p\">.</span><span class=\"nc\">JVM_11</span>\n        <span class=\"n\">allWarningsAsErrors</span> <span class=\"p\">=</span> <span class=\"n\">warningsAsErrors</span><span class=\"p\">.</span><span class=\"nf\">toBoolean</span><span class=\"p\">()</span>\n        <span class=\"n\">freeCompilerArgs</span><span class=\"p\">.</span><span class=\"nf\">add</span><span class=\"p\">(</span>\n            <span class=\"c1\">// Enable experimental coroutines APIs, including Flow</span>\n            <span class=\"s\">\"-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi\"</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>최종적으론 아래와 같다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">MyApplicationConventionPlugin</span> <span class=\"p\">:</span> <span class=\"nc\">Plugin</span><span class=\"p\">&lt;</span><span class=\"nc\">Project</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nc\">Project</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nf\">with</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nf\">with</span><span class=\"p\">(</span><span class=\"n\">pluginManager</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"s\">\"com.android.application\"</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n\n            <span class=\"nf\">configureKotlinAndroid</span><span class=\"p\">()</span>\n\n            <span class=\"nf\">dependencies</span> <span class=\"p\">{</span>\n                <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.mockito\"</span><span class=\"p\">))</span>\n                <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.mockitoKotlin\"</span><span class=\"p\">))</span>\n\n                <span class=\"nf\">testImplementation</span><span class=\"p\">(</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.junit5\"</span><span class=\"p\">))</span>\n                <span class=\"s\">\"testRuntimeOnly\"</span><span class=\"p\">(</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.junit5.engine\"</span><span class=\"p\">))</span>\n                <span class=\"s\">\"testRuntimeOnly\"</span><span class=\"p\">(</span><span class=\"nf\">findLibrary</span><span class=\"p\">(</span><span class=\"s\">\"test.junit5.vintage\"</span><span class=\"p\">))</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>그리고 이를 <code class=\"language-plaintext highlighter-rouge\">build-logic</code>에서 <code class=\"language-plaintext highlighter-rouge\">build.gradle.kts</code>에 아래와 같이 추가 정의한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">gradlePlugin</span> <span class=\"p\">{</span>\n    <span class=\"nf\">plugins</span> <span class=\"p\">{</span>\n        <span class=\"nf\">register</span><span class=\"p\">(</span><span class=\"s\">\"androidApplication\"</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">id</span> <span class=\"p\">=</span> <span class=\"s\">\"my.android.application\"</span>\n            <span class=\"n\">implementationClass</span> <span class=\"p\">=</span> <span class=\"s\">\"MyApplicationConventionPlugin\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>alias 활용에 사전에 정의했던 부분이 있다면 이름을 교체하고, app의 <code class=\"language-plaintext highlighter-rouge\">build.gradle.kts</code>에 아래와 같이 정의 추가한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">plugins</span> <span class=\"p\">{</span>\n    <span class=\"nf\">alias</span><span class=\"p\">(</span><span class=\"n\">libs</span><span class=\"p\">.</span><span class=\"n\">plugins</span><span class=\"p\">.</span><span class=\"n\">my</span><span class=\"p\">.</span><span class=\"n\">application</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2>마무리</h2>\n\n<p>개발할 때 가장 귀찮은 부분이 설정 부분이다. 이를 일부 자동화하고, app 모듈을 손 안 대는 것이 목적이었다.</p>\n\n<p>hilt를 쓰면 이건 자연스럽게 해결되지만, <code class=\"language-plaintext highlighter-rouge\">settings.gradle.kts</code>에 추가하고 이 역시 자동화 시켜 자동 import 처리할 수 있다.</p>\n\n<p>이 작업을 하기 전에는 모듈을 추가한다면 아래와 같다.</p>\n\n<ul>\n  <li>새로운 모듈을 추가</li>\n  <li>settings.gradle.kts에 새로운 모듈 정보 추가</li>\n  <li>app 모듈에서 새로운 모듈 정보 추가</li>\n</ul>\n\n<p>필자는 마지막 작업이 귀찮아서 이를 줄이기 위한 코드 작업을 하였다. gradle feature만으로도 충분히 간단하게 작업하는 것이 가능했다.</p>\n\n<p>더 나가면 flover마다 빌드에 포함이거나 제외를 해야하는데 이 역시 자동화가 가능하다는 점이다.</p>\n\n<p>폴더 레벨로 모듈 관리해 주면 귀찮은 작업이 줄어단다.</p>\n\n<p>보통 개발 화면이 포함되어야 하는 모듈과 그렇지 않은 모듈이 있으니 그에 맞게 분리한 것이다.</p>\n\n<p>이와 관련한 좋은 영상과 발표 자료들이 있으니 아래에 링크를 포함한다.</p>\n\n<ul>\n  <li><a href=\"https://www.youtube.com/watch?v=zQAGIQzOJcg\">[DroidKnights 2023] 차영호 - Gradle Version Catalog 적용하기</a></li>\n  <li><a href=\"https://speakerdeck.com/fornewid/android-modularization-recipe?slide=21\">안성용 - buildConfig 관리하기</a></li>\n</ul>\n",
        "contentSnippet": "모듈을 지속적으로 추가하는 요즘 개발에서는 디펜던시 관리는 어떻게 하는 것이 좋을까?\n필자는 모듈 240개 정도를 회사 프로젝트에서 활용하고 있는데 아래와 같다.\ntest 모듈\n구현체에 대한 인터페이스 정의하는 모듈\n구현체 모듈\n초점은 최대한 손 안 대고 자동으로 모듈을 import 하고, 디펜던시를 관리하는 것이다.\nbuild-logic을 활용하고, version catalog을 활용하여 디펜던시를 관리하고, 추가되는 모듈은 자동 import 되도록 하는 방법을 소개한다.\n읽기 전에\n사용하던 기존 환경을 소개한다.\nversionCatalog\nbuild-logic\ngradle kts\nbuild-logic을 활용하였고, app 모듈에서의 import 자동화를 하기 위한 프로젝트를 구성하였다. 이를 buildSrc로 변경하면서 불편하게 활용하던 부분을 제거하였던 부분을 소개하는 글이다.\n\n기존엔 어떻게 했을까?\nbuild-logic을 활용하기 전에는 buildSrc를 활용하여 관리하였다.\n이때는 build-logic에서 Project object 클래스를 별도로 생성하고 여기에 앱 내의 모든 모듈 정보를 정의하였는데 아래와 같은 형식이다.\n\nobject Projects {\n    object Core {\n        const val core = \":core:data:home\"\n        const val coreApi = \":core:data:homeApi\"\n    }\n\n    object Feature {\n        const val feature = \":feature:home\"\n        const val featureApi = \":feature:homeApi\"\n    }\n\n    object Test {\n        cont val test = \":test\"\n    }\n\n    object Flavor {\n        const val api = \":flavor:api\"\n        const val release = \":flavor:release\"\n        const val debug = \":flavor:debug\"\n    }\n}\n\n\n당연하지만 settings.gradle.kts에도 이를 정의해야 한다.\n그리고 Project exteions 함수를 정의하여 활용하였다. 이제 이 부분이 바뀔 일은 없다.\n\nfun Project.localProjects() {\n    dependencies {\n        Project.Core::class.loadLibrary { projectName ->\n            \"implementation\"(project(projectName))\n        }\n        Project.Feature::class.loadLibrary { projectName ->\n            \"implementation\"(project(projectName))\n        }\n        Project.Test::class.loadLibrary { projectName ->\n            \"testImplementation\"(project(projectName))\n        }\n        \"implementation\"(project(Project.Flavor.api))\n        \"relaseImplementation\"(project(Project.Flavor.release))\n        \"debugImplementation\"(project(Project.Flavor.debug))\n    }\n}\n\n\n참고로 loadLibrary는 아래와 같다.\n\ninternal fun KClass<out Any>.loadLibrary(body: (projectName: String) -> Unit) {\n    buildLocalProjects().forEach { (_, projectName) ->\n        body(projectName)\n    }\n}\n\nprivate fun KClass<out Any>.buildLocalProjects(): HashMap<String, String> {\n    val locals = hashMapOf<String, String>()\n\n    for (member in declaredMembers) {\n        locals[member.name] = member.call() as String\n    }\n\n    return locals\n}\n\n\n위에서 정의한 Project extensions 함수를 app 모듈에 한 줄 추가하면 끝이 난다.\n\nplugins {\n    id(\"kotlin-android\")\n    kotlin(\"kapt\")\n}\n\nandroid {\n    localProjects() // extensions 확장 함수\n}\n\n\n\n전혀 이점이 없다.\n이런 방식은 사실 전혀 이점이 없다. 모듈 하나 추가하면 다음 작업을 항상 필요로 한다.\nsettings.gradle.kts 파일과 build-logic에 정의해둔 Projects 파일에 항상 새로운 모듈 이름을 추가해야 한다.\n그리고 동기화해야 한다. 그래야 app 모듈에 알아서 포함되어 빌드가 완료될 수 있다.\n얼마나 귀찮은 작업을 편하다고 사용하고 있던 걸까 싶다.\n\n가장 쉬운 방법\nbuild-logic을 사용하든 buildSrc를 사용하던 가장 쉬운 방법을 소개하겠다.\nenableFeaturePreview(“TYPESAFE_PROJECT_ACCESSORS”)을 활성화한다.\napp 모듈에서 forEach {} 문을 활용해 자동 implementation을 활용한다.\n이제 settings.gradle.kts 파일에 새로운 모듈 정보만 추가하면 자동 import를 한다. 이제 app 모듈은 신경 쓰지 않아도 된다.\nsettings.gradle.kts 파일에 옵션 추가\n최신 프로젝트를 생성했다면 이미 포함되어 있을 것이다. 없다면 아래와 같이 추가한다. 위치는 상관없고, 워닝이 뜨긴 하지만 무시한다.\n\nenableFeaturePreview(\"TYPESAFE_PROJECT_ACCESSORS\")\n\n\n2번째 단계\n여기가 중요한 부분이다. 모듈화를 하면\nfeature 모듈 모음\ndata 모듈 모음\ncore 모듈 모음\n등 다양한 방식으로 접근하게 될 것인데 이와 같을 수 있다.\n그럼 이제 이 형태를 1번에서 활성화한 feature preview를 통해 쉽게 사용할 수 있는데 아래와 같다.\napp 모듈 내의 build.gradle.kts 파일을 열고\n\nplugins {\n    id(\"kotlin-android\")\n    kotlin(\"kapt\")\n}\n\nandroid {\n    projects.Core.filterImplementation {\n        if (it.name.contains(\"assertion\")) {\n            testImplementation(it)\n        } else {\n            implementation(it)\n        }\n    }\n    projects.Feature.filterImplementation {\n        if (it.name.contains(\"assertion\")) {\n            testImplementation(it)\n        } else {\n            implementation(it)\n        }\n    }\n    projects.Test.filterImplementation {\n        testImplementation(it)\n    }\n    \"implementation\"(project(Project.Flavor.api))\n    \"relaseImplementation\"(project(Project.Flavor.release))\n    \"debugImplementation\"(project(Project.Flavor.debug))\n}\n\n\n필자는 filter가 필요해서 아래와 같이 extensions을 추가하여 사용하고 있다.\n\nfun DelegatingProjectDependency.filterImplementation(\n    body: (target: Project) -> Unit,\n) {\n    dependencyProject.allprojects.forEach {\n        if (it.buildFile.isFile) {\n            body(it)\n        }\n    }\n}\n\n\n앞에서 사용하던 이전 방식은 build-logic에 포함되어 있던 Projects.kt 파일에 항상 디펜던시 한 줄 더 추가했어야 하지만 이젠 settings.gradle.kts 파일만 수정해 주면 알아서 반영하게 된다.\n\nbuildSrc에서 build-logic으로\nbuildSrc이 있는 상태에서 build-logic가 처음 나왔을 때는 크게 장점이 있진 않았다. 성능이 유사하다 보니 특별히 바꿔야 할 이유가 많지 않았다.\n하지만 지금은 증분 옵션을 제공함으로써 성능적 이점을 가진다. 완전히 코틀린 문법을 통해 사용할 수 있다는 장점도 있지만 gradle로 작성하는 것 역시 가능하다.\nbuildSrc 한 줄 수정하면 모든 buildSrc 파일 내의 gradle 파일도 전부 재확인 작업이 들어가는데 이때 시간의 소요가 발생한다.\n반면 build-logic을 활용하는 경우는 증분 옵션을 통해 수정한 부분만 빌드 반영할 수 있어 조금 더 빠른 빌드가 가능하다.\n\nbuildSrc을 build-logic로 변경하는 작업은 사실 쉬운 작업은 아니다.\n빌드 자체를 수정해야 하는 부분이다 보니 폭 넓게 사용하는 buildSrc를 수정하는 일은 쉽게 할 수 있는 일은 아니다.\n잘못 수정하면 빌드가 가능해질 때까지 걸리는 시간 역시 그만큼 지연 발생 가능하다.\n전체 프로젝트를 기반하는 모든 코드를 수정하고 갈 것인가?\nbuildSrc를 build-logic에서 최대한 활용하고 갈 것인가?\n를 잘 선택하고 가야 한다. 혼자 하는 프로젝트야 이렇게 하든 저렇게 하든 사실 상관없지만 작업이 진행 중인 협업 프로젝트에서는 영향도가 매우 크다.\n그대로 활용할 순 있지만 아래의 규칙을 미리 바꿔두는 것도 좋다.\nplugins 적용할 네이밍 규칙을 미리 정의한다.\n    \nNow in android에서는 네이밍 규칙을 2단계로 재 정의한다.\nbuild-logic 내부에서 정의하는 kotlin 파일과 build.gradle에서 이를 gradle.kts로 컴파일 하기 위한 정의\nversionCatalog에서 build-logic에서 정의한 이름을 내부에서 활용하기 위한 규칙으로 변경한다.\nbuild-logic 코틀린 파일명\nAndroidApplicationConventionPlugin.kt\nbuild-logic에서 정의하는 빌드 할 파일 명\n\ngradlePlugin {\n    plugins {\n        register(\"androidApplication\") {\n            id = \"my.android.application\" // gradle 파일 매칭 id\n            implementationClass = \"AndroidApplicationConventionPlugin\" // 파일명\n        }\n    }\n}\n\n\n마지막으로 versionCatalog에서 한 번 더 매핑해서 각 모듈에서 alias로 활용할 이름\n// libs.versions.toml 에 정의\n\nmy-android-application = { id = \"my.android.application\", version = \"unspecified\" }\n\n\n최종적으로 각 build.gradle.kts 파일에 아래와 같이 적용하여 사용할 수 있다.\n\nplugins {\n    alias(my.android.application)\n}\n\n\n이런 과정을 진행하기 때문에 alias만이라도 미리 정의해둘 수 있는데, my.android.application.kts.kt을 kts 파일로 정의하였다면 libs.version.toml에 아래와 같이 미리 정의해두고 사용할 수 있다.\n\nmy-android-application = { id = \"my.android.application\", version = \"unspecified\" }\n\n\n최소한 파일명 변경되어야 하는 걸 미리 대응할 수 있다.\n추가로 gradle 9.0부터 buildConfig가 자동 비활성화된다. 필요한 feature에서 만 buildConfig를 활성화할 수 있는데 이런 부분은 위 작업이 끝나고 적용할 수 있다.\nbuildConfig 옵션을 미리 재정의\n\ngradle.kts에서 kt 파일로 변환\n이런 예는 google now in android를 잘 참고하여 적용할 수 있다.\nconvention 모듈을 build-logic 내부에 따로 두고 있다는 점이 또 다른데 몇 가지 설정을 추가할 수 있다.\nNIA AndroidApplicationComposeConventionPlugin 링크\napplication에서 활용할 my.application.gradle.kts 파일이 아래와 같다. 이를 kt로 변환해 보겠다.\n\nplugins {\n    id(\"com.android.application\")\n    kotlin(\"android\")\n}\n\nval versionCatalog = project.extensions.getByType<VersionCatalogsExtension>()\nval libs = versionCatalog.named(\"libs\")\n\n\nandroid {\n    compileSdk = libs.findVersion(\"compileSdk\").get().requiredVersion.toInt()\n    buildToolsVersion = libs.findVersion(\"buildToolsVersion\").get().requiredVersion\n\n    defaultConfig {\n        minSdk = libs.findVersion(\"minSdk\").get().requiredVersion.toInt()\n        targetSdk = libs.findVersion(\"targetSdk\").get().requiredVersion.toInt()\n    }\n\n    kotlinOptions {\n        jvmTarget = \"17\"\n    }\n\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }\n}\n\ndependencies {\n    testImplementation(libs.findLibrary(\"test.mockito\").get())\n    testImplementation(libs.findLibrary(\"test.mockitoKotlin\").get())\n\n    testImplementation(libs.findLibrary(\"test.junit5\").get())\n    testRuntimeOnly(libs.findLibrary(\"test.junit5.engine\").get())\n    testRuntimeOnly(libs.findLibrary(\"test.junit5.vintage\").get())\n}\n\n\n참고로 이 코드에는 build-logic에서 libs에 쉽게 접근하기 위한 exteions 코드를 포함하고 있는데 아래와 같다.\n\nval versionCatalog = project.extensions.getByType<VersionCatalogsExtension>()\nval libs = versionCatalog.named(\"libs\")\n\n// 사용할 때는\ntestImplementation(libs.findLibrary(\"test.mockito\").get())\n\n\n이 파일을 build-logic에서 Project를 상속받는 구조로 변경하면 아래와 같이 변경되는데 먼저 아래의 코드가 필요하다. Library 인지 Application 인지 구분하고,\n\ninternal val Project.applicationExtension: CommonExtension<*, *, *, *, *, *>\n    get() = extensions.getByType<ApplicationExtension>()\n\ninternal val Project.libraryExtension: CommonExtension<*, *, *, *, *, *>\n    get() = extensions.getByType<LibraryExtension>()\n\ninternal val Project.androidExtension: CommonExtension<*, *, *, *, *, *>\n    get() = runCatching { libraryExtension }\n        .recoverCatching { applicationExtension }\n        .onFailure { println(\"Could not find Library or Application extension from this project\") }\n        .getOrThrow()\n\n\n또 하나의 코드가 필요한데 libs에 쉽게 접근하기 위한 2개의 코드이다.\n\ninternal fun Project.findLibrary(name: String): Provider<MinimalExternalModuleDependency> =\n    extensions.libs.findLibrary(name).get()\n\ninternal fun Project.findVersion(name: String): String =\n    extensions.libs.findVersion(name).get().requiredVersion\n\n\n공통 코드로 활용될 거니 아래와 같이 사전 작업해둔다.\n이 코드는 now in android 코드에 있으니 그대로 참고 NIA - KotlinAndroid\n\ninternal fun Project.configureKotlinAndroid() {\n    // Plugins\n    pluginManager.apply(\"org.jetbrains.kotlin.android\")\n\n    // Android settings\n    androidExtension.apply {\n        compileSdk = findVersion(\"compileSdk\").toInt()\n        buildToolsVersion = findVersion(\"buildToolsVersion\")\n\n        defaultConfig {\n            minSdk = findVersion(\"minSdk\").toInt()\n            vectorDrawables.useSupportLibrary = true\n        }\n\n        buildFeatures {\n            buildConfig = false\n        }\n\n        compileOptions {\n            sourceCompatibility = JavaVersion.VERSION_17\n            targetCompatibility = JavaVersion.VERSION_17\n        }\n    }\n\n    configureKotlin<KotlinAndroidProjectExtension>()\n}\n\n/**\n * Configure base Kotlin options\n */\nprivate inline fun <reified T : KotlinTopLevelExtension> Project.configureKotlin() = configure<T> {\n    // Treat all Kotlin warnings as errors (disabled by default)\n    // Override by setting warningsAsErrors=true in your ~/.gradle/gradle.properties\n    val warningsAsErrors: String? by project\n    when (this) {\n        is KotlinAndroidProjectExtension -> compilerOptions\n        is KotlinJvmProjectExtension -> compilerOptions\n        else -> TODO(\"Unsupported project extension $this ${T::class}\")\n    }.apply {\n        jvmTarget = JvmTarget.JVM_11\n        allWarningsAsErrors = warningsAsErrors.toBoolean()\n        freeCompilerArgs.add(\n            // Enable experimental coroutines APIs, including Flow\n            \"-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi\",\n        )\n    }\n}\n\n\n최종적으론 아래와 같다.\n\nclass MyApplicationConventionPlugin : Plugin<Project> {\n\n    override fun apply(target: Project) {\n        with(target) {\n            with(pluginManager) {\n                apply(\"com.android.application\")\n            }\n\n            configureKotlinAndroid()\n\n            dependencies {\n                testImplementation(findLibrary(\"test.mockito\"))\n                testImplementation(findLibrary(\"test.mockitoKotlin\"))\n\n                testImplementation(findLibrary(\"test.junit5\"))\n                \"testRuntimeOnly\"(findLibrary(\"test.junit5.engine\"))\n                \"testRuntimeOnly\"(findLibrary(\"test.junit5.vintage\"))\n            }\n        }\n    }\n}\n\n\n그리고 이를 build-logic에서 build.gradle.kts에 아래와 같이 추가 정의한다.\n\ngradlePlugin {\n    plugins {\n        register(\"androidApplication\") {\n            id = \"my.android.application\"\n            implementationClass = \"MyApplicationConventionPlugin\"\n        }\n    }\n}\n\n\nalias 활용에 사전에 정의했던 부분이 있다면 이름을 교체하고, app의 build.gradle.kts에 아래와 같이 정의 추가한다.\n\nplugins {\n    alias(libs.plugins.my.application)\n}\n\n\n\n마무리\n개발할 때 가장 귀찮은 부분이 설정 부분이다. 이를 일부 자동화하고, app 모듈을 손 안 대는 것이 목적이었다.\nhilt를 쓰면 이건 자연스럽게 해결되지만, settings.gradle.kts에 추가하고 이 역시 자동화 시켜 자동 import 처리할 수 있다.\n이 작업을 하기 전에는 모듈을 추가한다면 아래와 같다.\n새로운 모듈을 추가\nsettings.gradle.kts에 새로운 모듈 정보 추가\napp 모듈에서 새로운 모듈 정보 추가\n필자는 마지막 작업이 귀찮아서 이를 줄이기 위한 코드 작업을 하였다. gradle feature만으로도 충분히 간단하게 작업하는 것이 가능했다.\n더 나가면 flover마다 빌드에 포함이거나 제외를 해야하는데 이 역시 자동화가 가능하다는 점이다.\n폴더 레벨로 모듈 관리해 주면 귀찮은 작업이 줄어단다.\n보통 개발 화면이 포함되어야 하는 모듈과 그렇지 않은 모듈이 있으니 그에 맞게 분리한 것이다.\n이와 관련한 좋은 영상과 발표 자료들이 있으니 아래에 링크를 포함한다.\n[DroidKnights 2023] 차영호 - Gradle Version Catalog 적용하기\n안성용 - buildConfig 관리하기",
        "guid": "https://thdev.tech/android/2024/10/20/Android-dependency-manage/",
        "isoDate": "2024-10-20T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "데이터 노가다 실수담 - 7th",
        "link": "https://kangmyounghun.blogspot.com/2024/10/7th.html",
        "pubDate": "2024-10-20T05:48:00.001Z",
        "author": "강명훈",
        "content": "<div>1시간 동안 발생한 로그는 1,959개.</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh-_HAD1mgeQYDoPIlgxJ8b4TA_HNpgPGSNNu-U59Yedk7IiRSD4QWkcQkpm2e5okXe9ycZaILb-qHequFDBHiV6VfhMGEjTeHoIKQ9j1UxFfcXydiB24dLKUa5tHJIfXZIU1x1qdOkySQB8yYgRzkEfVIw7Jx15BYBTwmvwGSvfAqvkij_51YhCVspvRLO/s1267/weblog.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1267\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh-_HAD1mgeQYDoPIlgxJ8b4TA_HNpgPGSNNu-U59Yedk7IiRSD4QWkcQkpm2e5okXe9ycZaILb-qHequFDBHiV6VfhMGEjTeHoIKQ9j1UxFfcXydiB24dLKUa5tHJIfXZIU1x1qdOkySQB8yYgRzkEfVIw7Jx15BYBTwmvwGSvfAqvkij_51YhCVspvRLO/s16000/weblog.png\" /></a></div>\n<br />\n<span><a name='more'></a></span>\n이중 변수가 존재하는 로그는 373개.<div><br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjhHVLYA7oCYGLUuvRIsm2bFGdSvqHYZo-xO28hR-MuOdT0Sh0WI4wk2tTvFDBCKje-PyVGdwDUXw1XfrQ7WnwitpI0dsE4S0T7-6PIsbmPkK8-3kLY0Go-b4zwn9ZJ5zH0rk35rYZUx4rXnJ_bdstdeq_5XEHQoeKFRlLw3G4sK-rSZjVtPcvwYhiwh92k/s1266/weblog2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1266\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjhHVLYA7oCYGLUuvRIsm2bFGdSvqHYZo-xO28hR-MuOdT0Sh0WI4wk2tTvFDBCKje-PyVGdwDUXw1XfrQ7WnwitpI0dsE4S0T7-6PIsbmPkK8-3kLY0Go-b4zwn9ZJ5zH0rk35rYZUx4rXnJ_bdstdeq_5XEHQoeKFRlLw3G4sK-rSZjVtPcvwYhiwh92k/s16000/weblog2.png\" /></a></div>\n  <br />\n  <div>변수 길이 합산 추이.</div><div><br /></div>\n  <div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjRR4se5MvW7ZnBjsAhGktD409ydqHnGweuI1pPVvY4ZOQ6bm0tGdLOFN5WGTRxabsx02z1Rta5e9c_DZDA9gokXvPenmNv855fwqU5ym4-0VxAcc8O61NSrlxqVmycoK3PNpdGOYbU1qHcVOpAcMtjW582b5_qC_tbwS4fH4CcUoT3WETnO7asAy0YFsbi/s1267/length_sum.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1267\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjRR4se5MvW7ZnBjsAhGktD409ydqHnGweuI1pPVvY4ZOQ6bm0tGdLOFN5WGTRxabsx02z1Rta5e9c_DZDA9gokXvPenmNv855fwqU5ym4-0VxAcc8O61NSrlxqVmycoK3PNpdGOYbU1qHcVOpAcMtjW582b5_qC_tbwS4fH4CcUoT3WETnO7asAy0YFsbi/s16000/length_sum.png\" /></a></div>\n  <br />\n  <div>엑셀로 집계한 변수 길이 합산 추이. 스플렁크와 거의 같은 결과를 보여준다.</div>\n  <div><br /></div>\n  <div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijlyvA3GTouoqetgkGJ32gdCRrkgGNjNwgvU4UcdfqQzLsJnB2_nKmBDwpYMby7umVSvE5-Q4Xk1e04CbTggE1av44GbrVvBVXfJvEqknvx9y_qTJy8F3XcYnaBTnpY9k2FNf3kXJNJxx29BKMLRci3rvWx_El-TInoYCJoeoMGu0FPjBcxgfv4HTzgx4p/s1880/length_sum_excel.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1880\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEijlyvA3GTouoqetgkGJ32gdCRrkgGNjNwgvU4UcdfqQzLsJnB2_nKmBDwpYMby7umVSvE5-Q4Xk1e04CbTggE1av44GbrVvBVXfJvEqknvx9y_qTJy8F3XcYnaBTnpY9k2FNf3kXJNJxx29BKMLRci3rvWx_El-TInoYCJoeoMGu0FPjBcxgfv4HTzgx4p/s16000/length_sum_excel.png\" /></a></div>\n  <br />\n  <div>변수가 없는, 즉 변수 길이값이 없는 필드를 제외해도 결과는 동일. 원래 null이었으니까.</div><div><br /></div>\n  <div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgyLKEeCUg4Lqwkrydzy-N707F_jrWSydQULVvVU4EZ8Q85SoGKsFjOEftQ62d-Vfv3aipwiQIzLZfNeNM6ccACeuxrm9_dfusStXXtCVGxvxXUS-PJoBx8mfKI2Ke7ghVXExNnD0T3CJMGZmN1eg5xS8F2ggXI-8vF0iAntc0VGg11u3XSE74XJJ7s8DFe/s1880/length_sum_excel2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1880\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgyLKEeCUg4Lqwkrydzy-N707F_jrWSydQULVvVU4EZ8Q85SoGKsFjOEftQ62d-Vfv3aipwiQIzLZfNeNM6ccACeuxrm9_dfusStXXtCVGxvxXUS-PJoBx8mfKI2Ke7ghVXExNnD0T3CJMGZmN1eg5xS8F2ggXI-8vF0iAntc0VGg11u3XSE74XJJ7s8DFe/s16000/length_sum_excel2.png\" /></a></div>\n  <br />\n  <div>변수 길이 평균 추이.</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiUbps1sqjyUwHw97N4V-po_cQEcT-9KPII6FuvyjA38DixHpjrVjuTnhyphenhyphenjFkRlLxvdaEWigZP37H0jx7aM0iWPv_tnOwnvuWCg47pswpMW89_JauFrWXy8x57a0aybzoCAish8hithF-bf6I_RNEp89HqPmjUnUK2k9_AR_D7PqSFF0p6wlJKtDQ1pnng6/s1266/length_avg.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1266\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiUbps1sqjyUwHw97N4V-po_cQEcT-9KPII6FuvyjA38DixHpjrVjuTnhyphenhyphenjFkRlLxvdaEWigZP37H0jx7aM0iWPv_tnOwnvuWCg47pswpMW89_JauFrWXy8x57a0aybzoCAish8hithF-bf6I_RNEp89HqPmjUnUK2k9_AR_D7PqSFF0p6wlJKtDQ1pnng6/s16000/length_avg.png\" /></a></div>\n  <br />\n  <div>스플렁크와 엑셀로 집계한 변수 길이 평균 추이가 서로 다름.</div><div><br /></div>\n  <div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhrYKkUS1s4VuMKXG7n5LWctJRqZLUTJQhifdX-9e4d4sgEfV2W5IdBINDgrSF_4fTATo5Yc7Ch95U8iAMd0QSYCVPCEl5Yt2NJK9TDDOXv3nZ9pGzRltNiDoNFCRTjYYKH8BaREB4JtC7cjHqY3DYWEHx-86Rf2YLbqW2GO-bs1gyVDJ_hCy42EURrNG6C/s1880/length_avg_excel.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1880\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhrYKkUS1s4VuMKXG7n5LWctJRqZLUTJQhifdX-9e4d4sgEfV2W5IdBINDgrSF_4fTATo5Yc7Ch95U8iAMd0QSYCVPCEl5Yt2NJK9TDDOXv3nZ9pGzRltNiDoNFCRTjYYKH8BaREB4JtC7cjHqY3DYWEHx-86Rf2YLbqW2GO-bs1gyVDJ_hCy42EURrNG6C/s16000/length_avg_excel.png\" /></a></div>\n  <br />\n  <div>null을 제거하니 추이가 비슷해진다.</div><div><br /></div>\n  <div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhVfZ5pOptPln9zPeQ2wu4OrbW2bGY9drcbthfTsRYp7JrnsRbmAZrY-g5wczEC4twd5AkgzY5Z8UIMlQZZ-iohNH1I6-STPaY-HxDn07rgWO-PCDaAWbOfo3DE3Vcmj7SbNgeZhgvlnhNzoDXYPx4OJ1RGC2EV2gMEQGOuUQW_xZYfCWNVYfEt4Wylk3Ok/s1880/length_avg_excel2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1880\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhVfZ5pOptPln9zPeQ2wu4OrbW2bGY9drcbthfTsRYp7JrnsRbmAZrY-g5wczEC4twd5AkgzY5Z8UIMlQZZ-iohNH1I6-STPaY-HxDn07rgWO-PCDaAWbOfo3DE3Vcmj7SbNgeZhgvlnhNzoDXYPx4OJ1RGC2EV2gMEQGOuUQW_xZYfCWNVYfEt4Wylk3Ok/s16000/length_avg_excel2.png\" /></a></div>\n  <br />\n  <div>합산은 계산 간격<span style=\"font-size: x-small;\">(bin)</span> 내에 null값이 있으나 없으나 똑같다. 그러나 평균은 null값 포함 여부에 따라 결과가 달라진다. 153/4와 153/2의 차이가 발생한다는 얘기. 엑셀로 차트 그릴 때 주의.&nbsp;</div><div><br /></div>\n  <div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg2M8_YeZm5UxexHh61t2Oa8P4GNwclHR7k2iQG7ij_hb8WR9ZeTXZEidsUeX-UWhic2w5Q6UtbUHGhpV1YjY9Q6MLH2t7ojDpwyWeV3FRlDnNiUk5IfOGZdHFppMDPPRrbiBuwBnBRw0E50LqUIseGUlNytZU4ZePH58Lf6Dk1W3XVBgcO-V_xpqjMgS71/s1280/bin.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"560\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg2M8_YeZm5UxexHh61t2Oa8P4GNwclHR7k2iQG7ij_hb8WR9ZeTXZEidsUeX-UWhic2w5Q6UtbUHGhpV1YjY9Q6MLH2t7ojDpwyWeV3FRlDnNiUk5IfOGZdHFppMDPPRrbiBuwBnBRw0E50LqUIseGUlNytZU4ZePH58Lf6Dk1W3XVBgcO-V_xpqjMgS71/s16000/bin.png\" /></a></div><br /><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2024/08/6th.html\">데이터 노가다 실수담 - 6th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2019/01/blog-post_90.html\" target=\"\">데이터 노가다 실수담</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/06/blog-post.html\">평균의 함정</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/09/blog-post_27.html\" target=\"\">데이터 분석이 쉬워지는 비법</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/12/blog-post.html\" target=\"\">데이터 분석에 필요한 자질은 뭘까?</a></li></ul></div></div>",
        "contentSnippet": "1시간 동안 발생한 로그는 1,959개.\n\n\n\n\n이중 변수가 존재하는 로그는 373개.\n\n\n변수 길이 합산 추이.\n\n\n  \n\n엑셀로 집계한 변수 길이 합산 추이. 스플렁크와 거의 같은 결과를 보여준다.\n\n\n변수가 없는, 즉 변수 길이값이 없는 필드를 제외해도 결과는 동일. 원래 null이었으니까.\n\n\n  \n\n변수 길이 평균 추이.\n\n\n\n스플렁크와 엑셀로 집계한 변수 길이 평균 추이가 서로 다름.\n\n\n  \n\nnull을 제거하니 추이가 비슷해진다.\n\n\n  \n\n합산은 계산 간격(bin) 내에 null값이 있으나 없으나 똑같다. 그러나 평균은 null값 포함 여부에 따라 결과가 달라진다. 153/4와 153/2의 차이가 발생한다는 얘기. 엑셀로 차트 그릴 때 주의. \n\n\n  \n\n\n관련 글\n\n데이터 노가다 실수담 - 6th\n데이터 노가다 실수담\n평균의 함정\n데이터 분석이 쉬워지는 비법\n데이터 분석에 필요한 자질은 뭘까?",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-1418420778292041628",
        "isoDate": "2024-10-20T05:48:00.001Z"
      },
      {
        "title": "VIM 꼼수의 발견 - 11th",
        "link": "https://kangmyounghun.blogspot.com/2024/10/vim-11th.html",
        "pubDate": "2024-10-17T06:52:00.003Z",
        "author": "강명훈",
        "content": "<div>문자열 길이를 측정해보자. 어떻게?</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjC1hpxW5xDBjXP0lfa2LfmW_ktgwX2tBAKpeO86XIj_L68jp7Om8TsUNPm7xp1M4Ug7DihoXIYBxDTqBF_XkwPutiO6-In3RIlJhXo6UHs2suSq_mIcfDzwlQUU5rjYwhKRsU7ZtcWO8MYAMdyJsbH0mkFqRblA2bfPRMtSGgx-8xaTjANU8r0F9KXAtX3/s1280/vim_strlen.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"470\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjC1hpxW5xDBjXP0lfa2LfmW_ktgwX2tBAKpeO86XIj_L68jp7Om8TsUNPm7xp1M4Ug7DihoXIYBxDTqBF_XkwPutiO6-In3RIlJhXo6UHs2suSq_mIcfDzwlQUU5rjYwhKRsU7ZtcWO8MYAMdyJsbH0mkFqRblA2bfPRMtSGgx-8xaTjANU8r0F9KXAtX3/s16000/vim_strlen.png\" /></a></div><div><br /></div><div><span><a name='more'></a></span>vim은 strlen 함수도 지원한다. 전체 검색 결과인 <span style=\"font-family: courier;\">submatch(0)</span>에 strlen 함수 적용 후 치환.&nbsp;</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPhT_2gb9NMHwunuIiZ_xRQikLpeMjcISfe0iVjImxcrp4xPktAbH9Ltxa4IhJtW20O2up1fiVTxJ7mya3VCe8pckWrYpIpYxyyKkU6sfeaGkJAupnDVqkW-tdgef2fAip2hzPSRX-WyXu-Q3hbcsUgkotFoYQhRAns_dihA55IZ7o2qmuHXB2jXOe7Fi7/s1280/vim_strlen2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"470\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPhT_2gb9NMHwunuIiZ_xRQikLpeMjcISfe0iVjImxcrp4xPktAbH9Ltxa4IhJtW20O2up1fiVTxJ7mya3VCe8pckWrYpIpYxyyKkU6sfeaGkJAupnDVqkW-tdgef2fAip2hzPSRX-WyXu-Q3hbcsUgkotFoYQhRAns_dihA55IZ7o2qmuHXB2jXOe7Fi7/s16000/vim_strlen2.png\" /></a></div><br /><div><b><span style=\"font-size: x-large;\">원본을 보존하면서 측정값을 추가하고 싶다면?&nbsp;</span></b></div><div><span style=\"font-family: courier;\"><br /></span></div><div><span style=\"font-family: courier;\">\\zs</span>의 검색 결과는 선행하는 <span style=\"font-family: courier;\">(.*)</span>의 종료 위치.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhuS-eQgVlb1Ckav0EevH01iXa7uUUP2uGpPBkcO0BNpwAztv_iN1P2qeGsmsMAnyI_Ql4A8wzyzIBB_AT0D0Cp_istxX9B-PLLBZsrvIAdLTP47_n3Tq7O4IJxIZsGB6mT2w6D6rV8qAKNcUE-5XgEe7kW7y8hJwmKRrYQ2TSt7mhaRPA-gBj1o1htMZSB/s1280/vim_strlen3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"470\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhuS-eQgVlb1Ckav0EevH01iXa7uUUP2uGpPBkcO0BNpwAztv_iN1P2qeGsmsMAnyI_Ql4A8wzyzIBB_AT0D0Cp_istxX9B-PLLBZsrvIAdLTP47_n3Tq7O4IJxIZsGB6mT2w6D6rV8qAKNcUE-5XgEe7kW7y8hJwmKRrYQ2TSt7mhaRPA-gBj1o1htMZSB/s16000/vim_strlen3.png\" /></a></div><br /><div>검색 결과인 전체 문자열 종료 위치에 문자열&nbsp;<span style=\"font-family: courier;\">\" -&gt; \"</span>와 캡쳐그룹에 저장된 측정값을 이어서 추가하는 방식으로 치환.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjN86kFOwyKO9H6KMIqqtfA1ZQmMiGpOPj4zF0wpIIIru5DEu2qrTVqNg9I4pMu_Yh30ZmpS7t1SKkPGobKtk2JFBDEsP-msHSso0e_DjpjBoZpVhwPde1yGa49MxZJP_FLpvOIdwghHQAXo5SGK55HupvFujdPpu19u6o4YVid1eqVoWEIqTmnUVJ71yCM/s1280/vim_strlen4.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"470\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjN86kFOwyKO9H6KMIqqtfA1ZQmMiGpOPj4zF0wpIIIru5DEu2qrTVqNg9I4pMu_Yh30ZmpS7t1SKkPGobKtk2JFBDEsP-msHSso0e_DjpjBoZpVhwPde1yGa49MxZJP_FLpvOIdwghHQAXo5SGK55HupvFujdPpu19u6o4YVid1eqVoWEIqTmnUVJ71yCM/s16000/vim_strlen4.png\" /></a></div><br /><div><b><span style=\"font-size: x-large;\">변수 개수를 측정하고 싶다면?&nbsp;</span></b></div><div><br /></div><div>변수는 <span style=\"font-family: courier;\">key=value</span> 구조를 가지며, 둘 이상은 <span style=\"font-family: courier;\">&amp;</span>로 구분한다. <span style=\"font-family: courier;\">&amp;</span>가 아닌 모든 문자 검사.</div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh6XvripIue0LNcBJlh9yw4jqmFCnE0JSihQx3AtcyQ67v1EVwpj-91gvdSkwTL4gUm0WRDVuYKdAMcnXRKRmMdQfw0LmU5ICc72tN_REZvKjlY_EqUX7ffPD6ccB04mo0pkPRbc-62-_OvViOPlsZmjANLihd-NyUdgNzWo1P0kGEaemAQY9OPChuVfbua/s1280/vim_strlen5.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"470\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh6XvripIue0LNcBJlh9yw4jqmFCnE0JSihQx3AtcyQ67v1EVwpj-91gvdSkwTL4gUm0WRDVuYKdAMcnXRKRmMdQfw0LmU5ICc72tN_REZvKjlY_EqUX7ffPD6ccB04mo0pkPRbc-62-_OvViOPlsZmjANLihd-NyUdgNzWo1P0kGEaemAQY9OPChuVfbua/s16000/vim_strlen5.png\" /></a></div><br /><div>검사 범위에 <span style=\"font-family: courier;\">&amp;</span>를 포함시키면 마지막 변수는 검사 실패.</div></div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjCyHl1kqiexsrhyUf8rTAwN6TyOcSF0y63Rmp0rVH34yQDn0J9ooV9h0R-cjiDwyDqWkAxeQpmf7mOX2VOO8O-w1j20C27oiQfub9dyUhGBE_o23n4vJOqKPaQXIIkx2EBrjuU5U7mfdxBOkGtauzGBMR5vJoLX7gbzSMb9zHQNCkyg7ft-q2FtPfs_xPW/s1280/vim_strlen6.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"470\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjCyHl1kqiexsrhyUf8rTAwN6TyOcSF0y63Rmp0rVH34yQDn0J9ooV9h0R-cjiDwyDqWkAxeQpmf7mOX2VOO8O-w1j20C27oiQfub9dyUhGBE_o23n4vJOqKPaQXIIkx2EBrjuU5U7mfdxBOkGtauzGBMR5vJoLX7gbzSMb9zHQNCkyg7ft-q2FtPfs_xPW/s16000/vim_strlen6.png\" /></a></div><div><br /></div><div><span style=\"font-family: courier;\">&amp;</span>가 있을 때와 없을 때 모두를 검사하도록 수량자 <span style=\"font-family: courier;\">?</span> 추가.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjp0JAsb3dhMPqN8VBKinGx2QXCnNbPVvwQSiFDR3-v-o39zm1JiCMhYLRYmnUKd9HvqywcRWROQgfMHz2GzQMXLBZo062m5Cc-GvJTCHUod2Lrs5xq7NIZLo-PCLBWIfKXnN4LPIrVhTOfBMmGs3g40zA10Mhlz4ql7T1x2vG3u3XlhcHOHm29htLdUTlw/s1280/vim_strlen7.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"471\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjp0JAsb3dhMPqN8VBKinGx2QXCnNbPVvwQSiFDR3-v-o39zm1JiCMhYLRYmnUKd9HvqywcRWROQgfMHz2GzQMXLBZo062m5Cc-GvJTCHUod2Lrs5xq7NIZLo-PCLBWIfKXnN4LPIrVhTOfBMmGs3g40zA10Mhlz4ql7T1x2vG3u3XlhcHOHm29htLdUTlw/s16000/vim_strlen7.png\" /></a></div><div><br /></div><div>검사 결과를 @로 치환. 변수 단위로 검사했기 때문에 변수 개수만큼 생성됨.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiEVg80zNMKQCrFHhTkH_dvXTZJK0HBP56vxIvsT2YTxpvC2ZS3YgyjzMREwcNGS7OX-y20NEDu5_YYIasSEnFdu5KcoLzTlQQ-vqmbiuKUTwe9wprgpnvOZvdjKmithcDG-Cs63L25M6sCr1ZyRXfwjwZYQDIWCJhMjkJURsodPTVJOf4ML9_7jo2mC64Z/s1280/vim_strlen8.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"471\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiEVg80zNMKQCrFHhTkH_dvXTZJK0HBP56vxIvsT2YTxpvC2ZS3YgyjzMREwcNGS7OX-y20NEDu5_YYIasSEnFdu5KcoLzTlQQ-vqmbiuKUTwe9wprgpnvOZvdjKmithcDG-Cs63L25M6sCr1ZyRXfwjwZYQDIWCJhMjkJURsodPTVJOf4ML9_7jo2mC64Z/s16000/vim_strlen8.png\" /></a></div><div><br /></div><div>길이 측정값으로 치환.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0rIEnhu-kcJKIFd71bwBven5V8S311Ro6-io4XJm-7rye_VNmd512lravkSFpdoHQQSUhVfoOMs5FhTiFbKcVDPpQwCrdlB6tvr9ZnxZEH2Pg4lFWLudVR4oZ_GilsfEE3ROc6BIfkckqSGZceLGvR0LcYeJgeF3OB8353R9HqTGbAJO9QMgaHkKh79qJ/s1280/vim_strlen9.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"470\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh0rIEnhu-kcJKIFd71bwBven5V8S311Ro6-io4XJm-7rye_VNmd512lravkSFpdoHQQSUhVfoOMs5FhTiFbKcVDPpQwCrdlB6tvr9ZnxZEH2Pg4lFWLudVR4oZ_GilsfEE3ROc6BIfkckqSGZceLGvR0LcYeJgeF3OB8353R9HqTGbAJO9QMgaHkKh79qJ/s16000/vim_strlen9.png\" /></a></div><br /><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2023/06/vim-10th.html\">VIM 꼼수의 발견 - 10th</a></li><li><a href=\"http://kangmyounghun.blogspot.com/2018/05/vim.html\" target=\"\">VIM 꼼수의 발견</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2016/07/vim.html\" target=\"\">VIM 사용 설명서</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/06/apache-log-to-iis-format.html\">apache log to iis format</a></li></ul></div>",
        "contentSnippet": "문자열 길이를 측정해보자. 어떻게?\n\n\n\n\n\nvim은 strlen 함수도 지원한다. 전체 검색 결과인 submatch(0)에 strlen 함수 적용 후 치환. \n\n\n\n원본을 보존하면서 측정값을 추가하고 싶다면? \n\n\n\\zs의 검색 결과는 선행하는 (.*)의 종료 위치.\n\n\n\n\n검색 결과인 전체 문자열 종료 위치에 문자열 \" -> \"와 캡쳐그룹에 저장된 측정값을 이어서 추가하는 방식으로 치환.\n\n\n\n\n변수 개수를 측정하고 싶다면? \n\n\n변수는 key=value 구조를 가지며, 둘 이상은 &로 구분한다. &가 아닌 모든 문자 검사.\n\n\n\n\n검사 범위에 &를 포함시키면 마지막 변수는 검사 실패.\n\n\n\n\n\n&가 있을 때와 없을 때 모두를 검사하도록 수량자 ? 추가.\n\n\n\n\n검사 결과를 @로 치환. 변수 단위로 검사했기 때문에 변수 개수만큼 생성됨.\n\n\n\n\n길이 측정값으로 치환.\n\n\n\n\n관련 글\n\nVIM 꼼수의 발견 - 10th\nVIM 꼼수의 발견\nVIM 사용 설명서\napache log to iis format",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-1911170802758150482",
        "isoDate": "2024-10-17T06:52:00.003Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": [
      {
        "creator": "minieetea",
        "title": "누구나 발작버튼 하나를 숨기고 산다",
        "link": "https://minieetea.com/20241021-keep-calm/",
        "pubDate": "Mon, 21 Oct 2024 14:41:32 GMT",
        "content:encodedSnippet": "누구나 삶을 살아가다보면 화가 나는 순간들이 있습니다. 말을 하고 싶지 않을 때도 있습니다. 자리를 피하거나, 어쩔줄 몰라할 때도, 감정적으로 반응하는 순간들 모두요. 어떤 때는 ‘내가 왜 그 때 그 얘기를 못했을까’ 밤새 이불을 차는 날도 있고, 어떤 날은 ‘왜 그렇게 화를 내버리고 말았을까’ 자책하는 날도 있죠. 저는 이런 순간을 기억하기를 ‘어른답지 못했다’라는 잔상으로 남아버려서 며칠을 곱씹게 됩니다. \n저는 이런 자극과 반응을 묶어서 '발작버튼'이라고 부르고 있습니다. 평온한 바다에도 핵폭탄이 터진 것처럼 감정의 폭발을 만들어버리니까요. 저에게 이 발작버튼이 있다는 것을 알게 된 것은 사실 얼마 되지 않았습니다. 이전에는 발작버튼의 존재를 몰랐기 때문에 시간이 기분을 정화해줄 때까지 마냥 기다리는 수 밖에 없었어요. \n하지만 지금은 어떤 것이 발작버튼인지 압니다. 그리고 그 버튼이 눌렀을 때 어떻게 행동하고 대처해야되는지도 알고 있습니다. 일부러 시간을 내서 훈련을 하기도 합니다. 굉장히 효과적이고 그로 인해 감정의 동요없이 평화전선을 유지하는 나날을 영유할 수 있게 되었습니다. \n대부분의 인간 관계에서 발생하는 발작버튼의 경우는 인지행동 분야에서 분노를 다스리는 수 많은 연구와 임상들이 진행되어 왔기 때문에 심리학분야에서 다양한 훈련방법들을 찾을 수 있습니다. 저는 아예 책을 한권 샀어요. \n\n분노를 다스리는 인지행동 워크북\n분노를 다스리는 인지행동 워크북 작품소개: 분노에 대해 실용적이고 현실적이며, 경험적으로 입증되었으며, 우리가 실행할 수 있는 접근법을 알려주는 책이다. 저자는 분노의 문제를 다루는 데 있어 자신만의 기술, 즉 자신에게 적합한 기술을 개발하는 데 적용할 수 있는 다양한 검증된 솔루션을 제공한다. 인지행동 치료의 기초에 대한 철저한 근거, 분노의 9가지 핵심 요소에 대한 인식, 분노에 대한 자신의 생…\n북스타윌리엄 J.너스, EdD\n\n\n\n코로나 이후로는 비대면으로 일할 때도 많기 때문에 요즈음에는 대부분 무례한 말이 대부분이다 보니 저는 언어적 훈련위주로 진행했고, 한번씩 마음을 다스리기 위해 워크북을 따라해보는 것만으로도 감정을 통제한다는 느낌이 만족스럽더라구요. 최근에는 회사에서 동료들과도 이런 활동들을 시간을 내어서 함께 하고 있습니다. 하지만 최근에 다시 한번 제 발작버튼이 다시 눌리는 일이 있었습니다.",
        "dc:creator": "minieetea",
        "content": "\"저에게는 OO하지 말아주세요\"",
        "contentSnippet": "\"저에게는 OO하지 말아주세요\"",
        "guid": "67165e4de7b1be00018235ad",
        "categories": [
          "Problem"
        ],
        "isoDate": "2024-10-21T14:41:32.000Z"
      },
      {
        "creator": "minieetea",
        "title": "적극적이기만 한 사람",
        "link": "https://minieetea.com/20241021-initiative-activeness/",
        "pubDate": "Sun, 20 Oct 2024 15:10:00 GMT",
        "content:encodedSnippet": "엄청 적극적인 사람과 함께하지만 뭔가 잘 안 되는 느낌, 조용하고 소극적인 것 같은 사람인데 뭔가 잘 되는 느낌을 받았던 경험이 있나요? 저도 그런 것들을 느낄 때마다 '이게 뭔지 모르겠는데 묘하다', '어떤 사람은 일하기에 편하고 어떤 사람은 어렵다'와 같은 생각을 하곤 했습니다. 우연한 기회에 저는 그것이 어떤 차이에서 오는지 깨달은 순간이 있었습니다. 적극적인 말이나 행동 속에서 '네가 결정하는 대로 하겠다'라는 속뜻이 반복적으로 나오는 패턴을 알아차리게 된 것입니다.\n우리는 종종 '적극적인 사람'과 '능동적인 사람'이라는 표현을 혼용합니다. 겉으로는 비슷해 보입니다. 적극적인 것도 나서고, 능동적인 것도 나서는 면이 있으니까요. \n적극성은 주어진 상황이나 과제에 열정적으로 참여하는 태도를 의미합니다. 에너지 수준도 높아서 자주 의견을 제시하고 토론에도 어렵지 않게 참여합니다. 그리고 무엇보다 빠른 행동과 결정을 하기도 하죠. 하지만 이러한 적극성 자체에는 방향성이나 주도권이 담겨있지 않습니다.\n반면 능동성은 상황을 주도적으로 이끌어가는 태도를 말합니다. 스스로 목표를 설정하고 계획을 수립하는 것, 문제를 예측하고 선제적으로 대응하는 것, 의사결정을 하고 결과도 받아들이는 것이 포함됩니다. 변화를 주도하면서도 혁신을 추구합니다. 즉, 능동성의 경우 단순히 열심히 일하는 것이 아니라 무엇을, 왜, 어떻게 해야 하는지까지 깊이 이해하고 주도적으로 행동하는 것 입니다.\n'적극'이 만드는 착각\n우리가 쉽게 속는 사람은 바로 '적극적이지만 수동적인 사람'입니다. '빈 수레가 요란하다'는 속담이 여기서도 적용될 수 있지 않을까요? 이런 부류의 사람들은 주어진 일에 열정적으로 임하지만, 그 일의 필요성이나 방향성에 대해 깊이 고민하지 않습니다. 또 의견을 제시하지만 대부분 다른 사람의 아이디어에 반응하는 수준에 그칠 때가 많습니다. 빠르게 행동하고 결정도 하지만, 그 결정이 타인이나 외부 환경의 피드백에 의해 크게 좌우됩니다. 본인의 중심과 방향성이 없을 때 벌어지는 일이죠. 열심히 일하는 사람들이지만 자신의 경력이나 미래에 대한 장기적인 계획이 부족한 경우도 있겠죠?\n저는 이 차이를 알게 된 이후로 예능 <백패커>에서 쓰이는 자막들이 조금 더 눈에 들어오기 시작했습니다. 시즌2에 들어서 안보현, 고경표 씨는 능동인의 캐릭터를, 이수근 씨와 허경환 씨는 수동인 캐릭터가 만들어졌는데요. 예전에는 단순히 주방일에 대한 자신감의 차이 정도라고만 생각했습니다. 하지만 목표에 맞춰 능동적으로 주방일을 찾아하는 것과 누군가의 지시나 가이드가 있어야 일을 하게 되는 차이가 눈에 보이기 시작한 것입니다. 특히 이번 20화의 경우는 정말 무릎을 탁 치는 장면이 두 개나 나왔습니다.\n\n\n\n\n\n\ntvN 예능 <백패커> EP.20\n\n같은 수동인에겐 절대 묻지 않는다\n언제나 확인받고 싶어하는 습성이 있는 수동인들\n\n상대가 자신에게 가이드를 줄 수 있는 사람이 아니라면 질문하지 않는 것, 그리고 확인받고 싶은 마음에 질문을 하는 것. 반대로, 능동인을 살펴보면 딱히 질문하지도 않습니다. 해야 할 주방 일들에 대한 브리핑이 되어 있으니, 순간순간 눈으로 해야 할 일을 수집하고 판단하고 결정하여 그냥 하는 것이죠. 질문을 하고 하지 않고로 수동과 능동을 판단할 수는 없지만 그 의도가 무엇이냐는 한번 쯤 생각해 봐야하지 않을까요?\n예능이지만 능동인들과 수동인들의 모습들이 구체적으로 언급되는 이런 장면을 계기로 회사에서 일하면서 겪었던 수많은 장면들이 주마등처럼 스쳤던 것 같습니다. 특히 ‘어떤 사람은 일하기 편하고, 어떤 사람은 불편하거나 어려운지’에 대해서는 명확해졌습니다. 그 사람과의 관계가 불편해서가 아니라 모든 질문에 다음 할 일, 어떻게 결정해야 되는지 방향성에 대해 물어보는 사람이 일하기 어렵다고 느꼈던 것입니다. \n예능을 보다가 여기까지 생각이 닿고보니 '나는 상대를 가려가면서 질문하고 있지는 않은가', '무언가를 확인하고 싶을 때 어떻게 행동하는가', '전체의 목표 달성을 위해 나는 스스로 결정하고 있는가'와 같은 질문까지 이어진 것 같습니다. 벌써 월요일이 되었습니다. 여러분은 이 시작하는 에너지를 적극적인 것에 쓰고 싶으신가요, 능동적인 것에 쓰고 싶으신가요?",
        "dc:creator": "minieetea",
        "content": "<p>&#xC5C4;&#xCCAD; &#xC801;&#xADF9;&#xC801;&#xC778; &#xC0AC;&#xB78C;&#xACFC; &#xD568;&#xAED8;&#xD558;&#xC9C0;&#xB9CC; &#xBB54;&#xAC00; &#xC798; &#xC548; &#xB418;&#xB294; &#xB290;&#xB08C;, &#xC870;&#xC6A9;&#xD558;&#xACE0; &#xC18C;&#xADF9;&#xC801;&#xC778; &#xAC83; &#xAC19;&#xC740; &#xC0AC;&#xB78C;&#xC778;&#xB370; &#xBB54;&#xAC00; &#xC798; &#xB418;&#xB294; &#xB290;&#xB08C;&#xC744; &#xBC1B;&#xC558;&#xB358; &#xACBD;&#xD5D8;</p>",
        "contentSnippet": "엄청 적극적인 사람과 함께하지만 뭔가 잘 안 되는 느낌, 조용하고 소극적인 것 같은 사람인데 뭔가 잘 되는 느낌을 받았던 경험",
        "guid": "67150521e7b1be0001823339",
        "categories": [
          "People"
        ],
        "isoDate": "2024-10-20T15:10:00.000Z"
      },
      {
        "creator": "minieetea",
        "title": "10년만의 블로그 이사",
        "link": "https://minieetea.com/20241020-blog-migration/",
        "pubDate": "Sun, 20 Oct 2024 13:55:12 GMT",
        "content:encodedSnippet": "워드프레스 설치형으로 오랫동안 블로그를 해왔다. 2013년부터 카페24에서 쓰다가, 가끔씩 논란의 여지가 있는 글을 쓰면 서버가 자주 죽어서 2016년에 디지털오션으로 이사했다. 별 어려움 없이 쓰다가 한 번씩 로그인하면 PHP 버전이 낮다는 경고 메시지가 자꾸 눈에 거슬려서 할 줄도 모르는 서버를 띄웠다 죽였다 하며 난리를 쳤었다. 그게 2020년이었다.\n이제 또 4년이 지났다. 얼추 3~4년마다 한 번씩 전세집 옮기듯 이사를 하다가 이제는 블로그를 호스팅해 주는 곳으로 아예 옮겼다. 이번에는 고스트(Ghost.io) 블로그다.\n옮기게 된 건 큰 계기가 있었던 것은 아니었다. 또 PHP 업그레이드를 하라고... 매번 서버 띄우고 죽이고 별탈 없이 이관하는 게 쉬운 일이 아니다. 내가 개발자도 아니고... 그리고 한 번 옮긴 블로그 포스팅은 이미지 주소가 전부 달라져서 모두 표시가 되지 않았다. 블로그 테마를 오랫동안 유지할 수 있고, 내 뜻대로 여러 플러그인을 설치할 수 있다 보니 커스터마이징에 만족을 했지만, 비개발자인 나에게 사이트 유지보수성이 너무 좋지 않아서 이번에 크게 마음 먹고 이사를 했다.\n늘 그렇듯 같은 실수와 시행착오들\n\n이번에는 플랫폼을 갈아치우는 거다 보니, 낯설기도 하고 역시나 수월하지는 않았다.\n테마는 정말 별로 없었다. 커스터마이징이 쉽지 않은 사이트니까 예쁜 유료 테마를 사려고 했지만 테마 자체가 너무 없다. 그나마 마음에 드는 것 하나를 결제하고 마음의 평온을 잠시 찾았다. 시간이 좀 더 지나면 눈에 거슬리는 것 투성이겠지만 급하니까 일단 쓴다.\n기존에 사용하던 카테고리와 태그들을 모두 정리하지 않고 넘어온 터라 아주 난리가 났다. 당연히 블로그 썸네일 등으로 쓰던 이미지들은 또 표시가 제대로 되지 않았다. 보이는 족족 하나씩 이미지를 넣어주고 있다. 썸네일은 안 뜨면 삭제하면 그만인데, 본문에 들어간 이미지들은 하... 할 말이 없다. 당분간은 기존 블로그에서 하나씩 찾아다 꽂아줘야 하지 않을까 싶다. 기존 포스팅들이 전부 본문에 HTML 태그로 들어와 앉아서 수정하는 것도 쉽지 않다. 이래서 콘텐츠 DB는 마이그레이션이 어렵다.\nDNS는 더 난리였다. Hover에서 Cloudflare로, Ghost Pro까지 연결되는 과정이 너무 험난했다. 네트워크 설정 자체에 대한 이해도가 낮고, 우리 집 와이파이는 가끔 끊기고, 심지어 맥북 컴퓨터조차 인터넷이 종종 끊기기에 정말 인내심을 가지고 계속 잡아주느라 정말 고생 많이 했다. 하지만 안 되는 건 안 돼... 전 직장 동료인 성한 님께 주말 저녁에 전화해서 원격 지원도 받았다. 결론은 KT가... !@#$@#%\n왜 에디터는 또 명조체인지. 워드프레스에서도 고통받았는데 여기서까지 시각적 고통이 계속된다. 그래도 다행인 건 일반 사용자향 폰트는 고딕에 가깝다. 글씨도 좀 키워야 할 텐데, 커스터마이징... 또 삽질의 시작이겠지.\n그래도 좋은 점 몇 가지\n고스트를 예전에 봤던 기억으로는 블로그 플랫폼인지만 알았는데 최근에 블로거들의 글쓰기 생태계에 맞춰 많이 발전했다고 느낀다. 특히 뉴스레터와 블로그를 한 번에 할 수 있다는 점이 매력적이었다.\nMaily.so를 통해 블로그 글을 사전 퍼블리싱하고 있었는데, 이게 나눠져 있으니 어느 글을 홍보해야될지 헷갈리고 트래픽도 분산되는 것 같고 독자들을 모으는 데도 어려움이 있었다. 이제는 고스트에서 한 번에 지원해 주니, 훨씬 편하게 운영할 수 있지 않을까 한다. 최근에 막 메일링에 등록한 기존 사용자들은 어떻게 옮겨와야 하나 싶은데... 이번달까지만 두 벌로 운영하다가 한쪽으로 옮겨와야겠다.\n회원제 기반으로 블로그를 운영할 수 있다는 점도 매력적이었다. 특정 포스팅은 유료 회원에게만 노출되도록 할 수 있다. 뉴스레터와 블로그를 동시에 할 수 있다는 점, 그리고 따로 할 수도 있다는 점(post only, mail only)도 매력적이라고 느꼈다.\n다만 단점은 Stripe 연동이 필요하고 한국은 지원하지 않는다는 점인데 이건 이미 유료 블로그를 운영하고 계시는 휘동 님께 도움을 받았다.\n\n짧은 주말 동안 정말 열심히 입주 청소하고, 짐 싸고, 다시 짐 정리 시작하는 기분이라 리프레시가 되는 기분이 확실하게 든다. 앞으로는, 정말 글을 자주 써야겠다.",
        "dc:creator": "minieetea",
        "content": "10년동안 둥지가 되어주었던 워드프레스를 떠났다.",
        "contentSnippet": "10년동안 둥지가 되어주었던 워드프레스를 떠났다.",
        "guid": "671505bfe7b1be0001823345",
        "categories": [
          "Personal"
        ],
        "isoDate": "2024-10-20T13:55:12.000Z"
      }
    ]
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "비디오스튜, AI로 빠르게 동영상 제작하는 가장 편리한 방법",
        "link": "http://muzbox.tistory.com/483488",
        "pubDate": "Tue, 22 Oct 2024 07:38:03 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483488#entry483488comment",
        "content": "<p data-ke-size=\"size16\">비디오스튜는 전문가 수준의 도구 없이도 빠르고 쉽게 동영상을 제작할 수 있는 서비스입니다. 이 블로그는 비디오스튜의 장점, 활용사례, 위자드 모드 튜토리얼을 소개합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"AI 동영상 만들기 비디오 스튜.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/c4i0og/btsKdZ3w8ba/HXbr7CJdhrcA6GKvVmUpik/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c4i0og/btsKdZ3w8ba/HXbr7CJdhrcA6GKvVmUpik/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/c4i0og/btsKdZ3w8ba/HXbr7CJdhrcA6GKvVmUpik/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc4i0og%2FbtsKdZ3w8ba%2FHXbr7CJdhrcA6GKvVmUpik%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"비디오스튜, AI로 빠르게 동영상 제작하는 가장 편리한 방법\" data-filename=\"AI 동영상 만들기 비디오 스튜.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>시작하며</b></span></h2>\n<p data-ke-size=\"size16\">여러분은 동영상을 만들 때 어려움을 느끼신 적이 있나요? 복잡한 편집 프로그램을 배우는 데 시간이 많이 들거나, 전문가 수준의 결과물을 만들기 위해 많은 노력이 필요한 경우가 있죠. 비디오스튜는 그런 고민을 해결해주기 위해 탄생했습니다. 이 글에서는 비디오스튜의 주요 장점과 다양한 활용 사례, 그리고 초보자도 쉽게 따라 할 수 있는 위자드 모드 튜토리얼을 소개합니다. 이 서비스를 통해 여러분도 멋진 동영상을 빠르게 만들 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>어떤 비디오를 요리할 수 있을까?</b></span></h2>\n<p data-ke-size=\"size16\">비디오스튜는 다양한 상황에서 사용할 수 있는 동영상을 손쉽게 제작할 수 있도록 돕습니다. 유튜브 채널 운영자부터 회사 홍보, 인스타그램 릴스와 같은 소셜미디어 콘텐츠 제작까지 가능합니다. 유저가 쉽게 동영상을 요리하듯이 만들 수 있다는 점이 큰 매력입니다. 몇 가지 실제 활용사례를 통해 어떻게 비디오스튜가 효과적으로 사용되는지 확인해볼까요?</p>\n<h3 data-ke-size=\"size20\"><i><b>활용사례 1: 유튜브 인트로</b></i></h3>\n<p data-ke-size=\"size16\">유튜브 채널 운영자들이 쉽게 자신만의 개성 있는 인트로 영상을 제작할 수 있습니다.</p>\n<h3 data-ke-size=\"size20\"><i><b>활용사례 2: 회사 홍보</b></i></h3>\n<p data-ke-size=\"size16\">비디오스튜는 회사 홍보 영상도 손쉽게 제작할 수 있도록 다양한 템플릿을 제공합니다.</p>\n<h3 data-ke-size=\"size20\"><i><b>활용사례 3: 인스타그램 릴스</b></i></h3>\n<p data-ke-size=\"size16\">SNS에서 빠르게 사용할 수 있는 짧고 강렬한 영상을 비디오스튜로 쉽게 만들 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>어떤 장점이 있을까?</b></span></h2>\n<p data-ke-size=\"size16\">비디오스튜는 여러 가지 강력한 기능들을 통해 동영상 제작을 보다 간편하게 만듭니다. 특히 손쉬운 <b>위자드 모드</b>는 초보자들도 동영상을 쉽게 만들 수 있도록 도와줍니다. 이 모드를 통해 대본 입력만으로도 자동으로 동영상이 완성되며, 타임라인 편집이 어려운 사용자를 위해 슬라이드 기반의 간편한 편집 방식을 제공합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한, <b>AI보이스 기능</b>은 텍스트를 자동으로 자연스럽게 음성으로 변환해주는 혁신적인 기능입니다. 나레이션 녹음이 번거로운 경우 이 기능을 통해 높은 품질의 음성을 쉽게 삽입할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>바로가기 및 요금제</b></span></h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">아래 링크를 방문하여 간단한 절차만 거치면 바로 가입이 됩니다. 사용요금제는 개인의 경우 29,700원으로 시작하는 퍼스널 요금제부터 3개의 플랜이 있으니 참고하세요.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">또한, 비디오스튜에 가입하는 순간부터 14일간 무료 이용권이 제공되며, 체험판에서 제작된 영상도 비디오스튜 약관에 따라 자유롭게 원하시는 채널에 배포하실 수 있으니 미리 사용해보시고 가입하는 것을 추천합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"비용.png\" data-origin-width=\"1132\" data-origin-height=\"585\"><span data-url=\"https://blog.kakaocdn.net/dn/baGJXc/btsKcWUitB2/sN5NJSn1K45frMbDak499K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/baGJXc/btsKcWUitB2/sN5NJSn1K45frMbDak499K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/baGJXc/btsKcWUitB2/sN5NJSn1K45frMbDak499K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbaGJXc%2FbtsKcWUitB2%2FsN5NJSn1K45frMbDak499K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"비용.png\" data-origin-width=\"1132\" data-origin-height=\"585\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #333333; text-align: start;\" data-ke-size=\"size20\"><span style=\"color: #ee2323;\"><i><b>비디오 스튜바로가기</b></i></span></h3>\n<figure id=\"og_1729497085692\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"온라인 동영상 편집기 | 비디오스튜\" data-og-description=\"AI 온라인 동영상 편집기 비디오스튜입니다. 저작권 걱정없는 AI보이스, 배경음악(BGM), 스톡 동영상/이미지, 움짤과 함께 슬라이드 기반의 간편한 영상 편집을 시작하세요. 비디오스튜는 블로그 \" data-og-host=\"videostew.com\" data-og-source-url=\"https://videostew.com/\" data-og-url=\"https://videostew.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/bVCmZi/hyXlVzBRsg/JroDVoGvfZOejkycRzaG9K/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628,https://scrap.kakaocdn.net/dn/baOmPh/hyXlLX5mRb/59OBfQ3uHFxwYIJLCXAW7k/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628\"><a href=\"https://videostew.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://videostew.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bVCmZi/hyXlVzBRsg/JroDVoGvfZOejkycRzaG9K/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628,https://scrap.kakaocdn.net/dn/baOmPh/hyXlLX5mRb/59OBfQ3uHFxwYIJLCXAW7k/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">온라인 동영상 편집기 | 비디오스튜</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">AI 온라인 동영상 편집기 비디오스튜입니다. 저작권 걱정없는 AI보이스, 배경음악(BGM), 스톡 동영상/이미지, 움짤과 함께 슬라이드 기반의 간편한 영상 편집을 시작하세요. 비디오스튜는 블로그</p>\n<p class=\"og-host\" data-ke-size=\"size16\">videostew.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>위자드 따라하기: 비디오 제작 시작하기</b></span></h2>\n<p data-ke-size=\"size16\">비디오스튜에서 위자드를 활용하여 동영상을 제작하는 과정은 매우 간단합니다. 본 포스팅에서는 <span style=\"color: #006dd7;\"><b>아래 블로그 기사를 이용,</b></span> <span style=\"color: #ee2323;\"><b>웹페이지에 있는 내용을 영상으로 변경하는 방법</b></span>을 소개합니다. (참고로 해당 기사의 사용 승인을 받고 진행합니다.)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1729496260801\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"흑백요리사, 불공정 탈락 규칙에 시청자들 분노\" data-og-description=\"넷플릭스의 인기 요리 서바이벌 프로그램 '흑백요리사'는 한국 시청자들 사이에서 큰 인기를 얻었으나, 최근 미션 방식과 갑작스러운 탈락으로 인한 논란으로 민심이 급격히 돌아섰습니다. 시\" data-og-host=\"bakong.tistory.com\" data-og-source-url=\"https://bakong.tistory.com/1462\" data-og-url=\"https://bakong.tistory.com/1462\" data-og-image=\"https://scrap.kakaocdn.net/dn/jdjmW/hyXlH9ebI6/73fxABdHaKX8RWn6zqnQLk/img.jpg?width=797&amp;height=473&amp;face=0_0_797_473,https://scrap.kakaocdn.net/dn/EaMBk/hyXlSiA44c/GvHarUD9ST1lvUE7PktUbK/img.jpg?width=797&amp;height=473&amp;face=0_0_797_473,https://scrap.kakaocdn.net/dn/cuc00A/hyXlH2sd3U/1uxbvZR3y87MJyltEkk5K0/img.jpg?width=797&amp;height=473&amp;face=0_0_797_473\"><a href=\"https://bakong.tistory.com/1462\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://bakong.tistory.com/1462\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/jdjmW/hyXlH9ebI6/73fxABdHaKX8RWn6zqnQLk/img.jpg?width=797&amp;height=473&amp;face=0_0_797_473,https://scrap.kakaocdn.net/dn/EaMBk/hyXlSiA44c/GvHarUD9ST1lvUE7PktUbK/img.jpg?width=797&amp;height=473&amp;face=0_0_797_473,https://scrap.kakaocdn.net/dn/cuc00A/hyXlH2sd3U/1uxbvZR3y87MJyltEkk5K0/img.jpg?width=797&amp;height=473&amp;face=0_0_797_473');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">흑백요리사, 불공정 탈락 규칙에 시청자들 분노</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">넷플릭스의 인기 요리 서바이벌 프로그램 '흑백요리사'는 한국 시청자들 사이에서 큰 인기를 얻었으나, 최근 미션 방식과 갑작스러운 탈락으로 인한 논란으로 민심이 급격히 돌아섰습니다. 시</p>\n<p class=\"og-host\" data-ke-size=\"size16\">bakong.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1. 워크스페이스에서 \"+ 새로운 요리 시작하기\"를 선택 ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"01 시작하기.png\" data-origin-width=\"1234\" data-origin-height=\"642\"><span data-url=\"https://blog.kakaocdn.net/dn/cWHZSN/btsKd09dP77/yErRyJ509CYHKJPFa46so1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cWHZSN/btsKd09dP77/yErRyJ509CYHKJPFa46so1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cWHZSN/btsKd09dP77/yErRyJ509CYHKJPFa46so1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcWHZSN%2FbtsKd09dP77%2FyErRyJ509CYHKJPFa46so1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"01 시작하기.png\" data-origin-width=\"1234\" data-origin-height=\"642\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. \"웹사이트로 시작하기\"를 선택합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"02 웹사이트 입력.png\" data-origin-width=\"1233\" data-origin-height=\"645\"><span data-url=\"https://blog.kakaocdn.net/dn/ecy3OB/btsKdgkDCJD/Pu0AmLoIqKruiqUVHgKT8K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ecy3OB/btsKdgkDCJD/Pu0AmLoIqKruiqUVHgKT8K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ecy3OB/btsKdgkDCJD/Pu0AmLoIqKruiqUVHgKT8K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fecy3OB%2FbtsKdgkDCJD%2FPu0AmLoIqKruiqUVHgKT8K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"02 웹사이트 입력.png\" data-origin-width=\"1233\" data-origin-height=\"645\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">3. \"프로젝트 제목\"을 입력합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"02 프로젝트 제목 입력.png\" data-origin-width=\"1231\" data-origin-height=\"642\"><span data-url=\"https://blog.kakaocdn.net/dn/4Ackq/btsKcVugQhs/KMMVOoINfy3KWkit1hSkKk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/4Ackq/btsKcVugQhs/KMMVOoINfy3KWkit1hSkKk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/4Ackq/btsKcVugQhs/KMMVOoINfy3KWkit1hSkKk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F4Ackq%2FbtsKcVugQhs%2FKMMVOoINfy3KWkit1hSkKk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"02 프로젝트 제목 입력.png\" data-origin-width=\"1231\" data-origin-height=\"642\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">4. 참고할 웹사이트의 URL 을 입력합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"03 URL 입력.png\" data-origin-width=\"1185\" data-origin-height=\"640\"><span data-url=\"https://blog.kakaocdn.net/dn/b6NUQD/btsKdO81qFh/G07IkkvBIbV4aKNfg646R1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b6NUQD/btsKdO81qFh/G07IkkvBIbV4aKNfg646R1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b6NUQD/btsKdO81qFh/G07IkkvBIbV4aKNfg646R1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb6NUQD%2FbtsKdO81qFh%2FG07IkkvBIbV4aKNfg646R1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"03 URL 입력.png\" data-origin-width=\"1185\" data-origin-height=\"640\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">5. 조금 기다리면 그림과 같이 대본이 생성됩니다. 여기서 '글다듬기\"를 선택 ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"04 위자드 모드.png\" data-origin-width=\"1920\" data-origin-height=\"1032\"><span data-url=\"https://blog.kakaocdn.net/dn/cAEEKs/btsKdGb5WKA/FM2vbe3rfGu5zM8KVkWvp0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cAEEKs/btsKdGb5WKA/FM2vbe3rfGu5zM8KVkWvp0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cAEEKs/btsKdGb5WKA/FM2vbe3rfGu5zM8KVkWvp0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAEEKs%2FbtsKdGb5WKA%2FFM2vbe3rfGu5zM8KVkWvp0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"04 위자드 모드.png\" data-origin-width=\"1920\" data-origin-height=\"1032\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">6. \"글다듬기\"화면에서 사용자가 원하는 옵션을 선택합니다. 예를 들어 '숏폼'을 선택하면 숏폼 분량에 맞게 내용이 최적화되니 정말 편리합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"05 글다듬기.png\" data-origin-width=\"1920\" data-origin-height=\"1032\"><span data-url=\"https://blog.kakaocdn.net/dn/bhdHSj/btsKed1z5H9/5ctgrV6Vw7h6TlOmnwi061/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bhdHSj/btsKed1z5H9/5ctgrV6Vw7h6TlOmnwi061/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bhdHSj/btsKed1z5H9/5ctgrV6Vw7h6TlOmnwi061/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbhdHSj%2FbtsKed1z5H9%2F5ctgrV6Vw7h6TlOmnwi061%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"05 글다듬기.png\" data-origin-width=\"1920\" data-origin-height=\"1032\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">7. 글다듬기까지 완료되면 내용을 확인한 후 다음단계로 넘어 갑니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"06 글다듬기 완료.png\" data-origin-width=\"1920\" data-origin-height=\"936\"><span data-url=\"https://blog.kakaocdn.net/dn/beXMW6/btsKdO2dTlC/BN8FGw4kW5pAIkQzzP4xIK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/beXMW6/btsKdO2dTlC/BN8FGw4kW5pAIkQzzP4xIK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/beXMW6/btsKdO2dTlC/BN8FGw4kW5pAIkQzzP4xIK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbeXMW6%2FbtsKdO2dTlC%2FBN8FGw4kW5pAIkQzzP4xIK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"06 글다듬기 완료.png\" data-origin-width=\"1920\" data-origin-height=\"936\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">8. 이제 템플릿과 배경음악, 나레이션 음성 등을 선택합니다. 템플릿 선택은 레시피 선택에서 할 수 있습니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"06-1 레시피선택A.png\" data-origin-width=\"1920\" data-origin-height=\"925\"><span data-url=\"https://blog.kakaocdn.net/dn/bkmuL8/btsKdmrnoEo/I0pUMluRePtxKW2YxZcKK0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bkmuL8/btsKdmrnoEo/I0pUMluRePtxKW2YxZcKK0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bkmuL8/btsKdmrnoEo/I0pUMluRePtxKW2YxZcKK0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbkmuL8%2FbtsKdmrnoEo%2FI0pUMluRePtxKW2YxZcKK0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"06-1 레시피선택A.png\" data-origin-width=\"1920\" data-origin-height=\"925\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">9. 원하는 템플릿을 선택합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"06-2 레시피선택B.png\" data-origin-width=\"1920\" data-origin-height=\"1032\"><span data-url=\"https://blog.kakaocdn.net/dn/Y8MSf/btsKcl02iRt/chGmDlT71iR6KROxYiUZ2k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Y8MSf/btsKcl02iRt/chGmDlT71iR6KROxYiUZ2k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Y8MSf/btsKcl02iRt/chGmDlT71iR6KROxYiUZ2k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FY8MSf%2FbtsKcl02iRt%2FchGmDlT71iR6KROxYiUZ2k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"06-2 레시피선택B.png\" data-origin-width=\"1920\" data-origin-height=\"1032\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">10. 이제 사용자가 지정한 옵션에 맞춰 비디오가 자동으로 생성됩니다. 잠시만 기다려 주세요. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"06-3 영상생성.png\" data-origin-width=\"1920\" data-origin-height=\"1032\"><span data-url=\"https://blog.kakaocdn.net/dn/cPNcU3/btsKeRQ10vJ/vpPpD0CrtjCMuvZiVMfFK1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cPNcU3/btsKeRQ10vJ/vpPpD0CrtjCMuvZiVMfFK1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cPNcU3/btsKeRQ10vJ/vpPpD0CrtjCMuvZiVMfFK1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcPNcU3%2FbtsKeRQ10vJ%2FvpPpD0CrtjCMuvZiVMfFK1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"06-3 영상생성.png\" data-origin-width=\"1920\" data-origin-height=\"1032\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">11. 비디오 작업이 완료되었습니다. 여기서 각 장면에 추가되 이미지나 비디오가 내용에 맞지 않을 수 있으니 좌측 콘텐츠 선택화면에서 내용에 적합한 것으로 변경이 가능합니다. 이때 사용자가 보유중인 콘테츠를 업로드 하거나, pixbay 같은 이미지,영상 무료공유사이트에서 찾을수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">모든 작업이 완료되면 \"저장\"을 선택합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"07 생성완료.png\" data-origin-width=\"1234\" data-origin-height=\"640\"><span data-url=\"https://blog.kakaocdn.net/dn/JzqwD/btsKeE5CSfj/KICvP4uHRtVr5QLYxhGpq1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/JzqwD/btsKeE5CSfj/KICvP4uHRtVr5QLYxhGpq1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/JzqwD/btsKeE5CSfj/KICvP4uHRtVr5QLYxhGpq1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FJzqwD%2FbtsKeE5CSfj%2FKICvP4uHRtVr5QLYxhGpq1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"07 생성완료.png\" data-origin-width=\"1234\" data-origin-height=\"640\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">12. 마지막으로 렌더링을 클릭 조금만 기다리시면 다운로드 버튼이 활성화 됩니다. 제작한 영상을 다운로드 하신후 사용하시면 됩니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"08 렌더링 및 저장.png\" data-origin-width=\"1224\" data-origin-height=\"635\"><span data-url=\"https://blog.kakaocdn.net/dn/bXevEv/btsKcSK6Q5l/x5ZkdZ9PRE4WpEQRNZYuK0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bXevEv/btsKcSK6Q5l/x5ZkdZ9PRE4WpEQRNZYuK0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bXevEv/btsKcSK6Q5l/x5ZkdZ9PRE4WpEQRNZYuK0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbXevEv%2FbtsKcSK6Q5l%2Fx5ZkdZ9PRE4WpEQRNZYuK0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"08 렌더링 및 저장.png\" data-origin-width=\"1224\" data-origin-height=\"635\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size16\">비디오스튜는 복잡한 동영상 제작 과정을 간편하게 만들어주는 혁신적인 도구입니다. 초보자부터 전문가까지 누구나 쉽고 빠르게 동영상을 제작할 수 있는 기능들을 제공하며, 손쉽게 팬과 소통하고, 마케팅과 광고 영상을 제작할 수 있습니다. 이제 비디오스튜를 통해 여러분의 창의력을 발휘해보세요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>Q&amp;A</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1. 비디오스튜에서 제작한 동영상은 어디에 사용할 수 있나요?</b><br />A1. 비디오스튜에서 제작한 동영상은 유튜브, 인스타그램, 회사 홍보 등 다양한 플랫폼에서 사용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 위자드 모드는 초보자도 쉽게 사용할 수 있나요?</b><br />A2. 네, 위자드 모드는 동영상 제작 경험이 없는 초보자도 쉽게 사용할 수 있도록 설계되었습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 비디오스튜에서 제공하는 AI보이스 기능이 있나요?</b><br />A3. 네, 비디오스튜는 250개 이상의 다양한 AI보이스를 제공하며, 상황에 맞게 음성을 선택할 수 있습니다.</p>",
        "contentSnippet": "비디오스튜는 전문가 수준의 도구 없이도 빠르고 쉽게 동영상을 제작할 수 있는 서비스입니다. 이 블로그는 비디오스튜의 장점, 활용사례, 위자드 모드 튜토리얼을 소개합니다.\n \n\n\n \n시작하며\n여러분은 동영상을 만들 때 어려움을 느끼신 적이 있나요? 복잡한 편집 프로그램을 배우는 데 시간이 많이 들거나, 전문가 수준의 결과물을 만들기 위해 많은 노력이 필요한 경우가 있죠. 비디오스튜는 그런 고민을 해결해주기 위해 탄생했습니다. 이 글에서는 비디오스튜의 주요 장점과 다양한 활용 사례, 그리고 초보자도 쉽게 따라 할 수 있는 위자드 모드 튜토리얼을 소개합니다. 이 서비스를 통해 여러분도 멋진 동영상을 빠르게 만들 수 있습니다.\n \n \n어떤 비디오를 요리할 수 있을까?\n비디오스튜는 다양한 상황에서 사용할 수 있는 동영상을 손쉽게 제작할 수 있도록 돕습니다. 유튜브 채널 운영자부터 회사 홍보, 인스타그램 릴스와 같은 소셜미디어 콘텐츠 제작까지 가능합니다. 유저가 쉽게 동영상을 요리하듯이 만들 수 있다는 점이 큰 매력입니다. 몇 가지 실제 활용사례를 통해 어떻게 비디오스튜가 효과적으로 사용되는지 확인해볼까요?\n활용사례 1: 유튜브 인트로\n유튜브 채널 운영자들이 쉽게 자신만의 개성 있는 인트로 영상을 제작할 수 있습니다.\n활용사례 2: 회사 홍보\n비디오스튜는 회사 홍보 영상도 손쉽게 제작할 수 있도록 다양한 템플릿을 제공합니다.\n활용사례 3: 인스타그램 릴스\nSNS에서 빠르게 사용할 수 있는 짧고 강렬한 영상을 비디오스튜로 쉽게 만들 수 있습니다.\n \n \n어떤 장점이 있을까?\n비디오스튜는 여러 가지 강력한 기능들을 통해 동영상 제작을 보다 간편하게 만듭니다. 특히 손쉬운 위자드 모드는 초보자들도 동영상을 쉽게 만들 수 있도록 도와줍니다. 이 모드를 통해 대본 입력만으로도 자동으로 동영상이 완성되며, 타임라인 편집이 어려운 사용자를 위해 슬라이드 기반의 간편한 편집 방식을 제공합니다.\n \n또한, AI보이스 기능은 텍스트를 자동으로 자연스럽게 음성으로 변환해주는 혁신적인 기능입니다. 나레이션 녹음이 번거로운 경우 이 기능을 통해 높은 품질의 음성을 쉽게 삽입할 수 있습니다.\n \n \n바로가기 및 요금제\n아래 링크를 방문하여 간단한 절차만 거치면 바로 가입이 됩니다. 사용요금제는 개인의 경우 29,700원으로 시작하는 퍼스널 요금제부터 3개의 플랜이 있으니 참고하세요.\n \n또한, 비디오스튜에 가입하는 순간부터 14일간 무료 이용권이 제공되며, 체험판에서 제작된 영상도 비디오스튜 약관에 따라 자유롭게 원하시는 채널에 배포하실 수 있으니 미리 사용해보시고 가입하는 것을 추천합니다.\n\n\n \n비디오 스튜바로가기\n\n \n온라인 동영상 편집기 | 비디오스튜\nAI 온라인 동영상 편집기 비디오스튜입니다. 저작권 걱정없는 AI보이스, 배경음악(BGM), 스톡 동영상/이미지, 움짤과 함께 슬라이드 기반의 간편한 영상 편집을 시작하세요. 비디오스튜는 블로그\nvideostew.com\n\n \n \n위자드 따라하기: 비디오 제작 시작하기\n비디오스튜에서 위자드를 활용하여 동영상을 제작하는 과정은 매우 간단합니다. 본 포스팅에서는 아래 블로그 기사를 이용, 웹페이지에 있는 내용을 영상으로 변경하는 방법을 소개합니다. (참고로 해당 기사의 사용 승인을 받고 진행합니다.)\n \n\n \n흑백요리사, 불공정 탈락 규칙에 시청자들 분노\n넷플릭스의 인기 요리 서바이벌 프로그램 '흑백요리사'는 한국 시청자들 사이에서 큰 인기를 얻었으나, 최근 미션 방식과 갑작스러운 탈락으로 인한 논란으로 민심이 급격히 돌아섰습니다. 시\nbakong.tistory.com\n\n \n \n1. 워크스페이스에서 \"+ 새로운 요리 시작하기\"를 선택 ▼\n\n\n \n \n2. \"웹사이트로 시작하기\"를 선택합니다. ▼\n\n\n \n \n3. \"프로젝트 제목\"을 입력합니다. ▼\n\n\n \n \n4. 참고할 웹사이트의 URL 을 입력합니다. ▼\n\n\n \n \n5. 조금 기다리면 그림과 같이 대본이 생성됩니다. 여기서 '글다듬기\"를 선택 ▼\n\n\n \n \n6. \"글다듬기\"화면에서 사용자가 원하는 옵션을 선택합니다. 예를 들어 '숏폼'을 선택하면 숏폼 분량에 맞게 내용이 최적화되니 정말 편리합니다. ▼\n\n\n \n \n7. 글다듬기까지 완료되면 내용을 확인한 후 다음단계로 넘어 갑니다. ▼\n\n\n \n \n8. 이제 템플릿과 배경음악, 나레이션 음성 등을 선택합니다. 템플릿 선택은 레시피 선택에서 할 수 있습니다. ▼\n\n\n \n \n9. 원하는 템플릿을 선택합니다. ▼\n\n\n \n \n10. 이제 사용자가 지정한 옵션에 맞춰 비디오가 자동으로 생성됩니다. 잠시만 기다려 주세요. ▼\n\n\n \n \n11. 비디오 작업이 완료되었습니다. 여기서 각 장면에 추가되 이미지나 비디오가 내용에 맞지 않을 수 있으니 좌측 콘텐츠 선택화면에서 내용에 적합한 것으로 변경이 가능합니다. 이때 사용자가 보유중인 콘테츠를 업로드 하거나, pixbay 같은 이미지,영상 무료공유사이트에서 찾을수 있습니다.\n \n모든 작업이 완료되면 \"저장\"을 선택합니다. ▼\n\n\n \n \n12. 마지막으로 렌더링을 클릭 조금만 기다리시면 다운로드 버튼이 활성화 됩니다. 제작한 영상을 다운로드 하신후 사용하시면 됩니다. ▼\n\n\n \n마치며\n비디오스튜는 복잡한 동영상 제작 과정을 간편하게 만들어주는 혁신적인 도구입니다. 초보자부터 전문가까지 누구나 쉽고 빠르게 동영상을 제작할 수 있는 기능들을 제공하며, 손쉽게 팬과 소통하고, 마케팅과 광고 영상을 제작할 수 있습니다. 이제 비디오스튜를 통해 여러분의 창의력을 발휘해보세요!\n \nQ&A\nQ1. 비디오스튜에서 제작한 동영상은 어디에 사용할 수 있나요?\nA1. 비디오스튜에서 제작한 동영상은 유튜브, 인스타그램, 회사 홍보 등 다양한 플랫폼에서 사용할 수 있습니다.\nQ2. 위자드 모드는 초보자도 쉽게 사용할 수 있나요?\nA2. 네, 위자드 모드는 동영상 제작 경험이 없는 초보자도 쉽게 사용할 수 있도록 설계되었습니다.\nQ3. 비디오스튜에서 제공하는 AI보이스 기능이 있나요?\nA3. 네, 비디오스튜는 250개 이상의 다양한 AI보이스를 제공하며, 상황에 맞게 음성을 선택할 수 있습니다.",
        "guid": "http://muzbox.tistory.com/483488",
        "categories": [
          "추천 사이트",
          "Ai 보이스",
          "동영상 제작",
          "마케팅 영상",
          "비디오스튜",
          "소셜미디어 콘텐츠",
          "위자드 모드",
          "유튜브 인트로",
          "유튜브 편집",
          "자동 렌더링",
          "초보자용 도구"
        ],
        "isoDate": "2024-10-21T22:38:03.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "(AI 프롬프트 다이어리) 효과적인 스케쥴 재구성으로 바쁜 하루를 관리하는 법",
        "link": "http://muzbox.tistory.com/483487",
        "pubDate": "Mon, 21 Oct 2024 09:57:34 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483487#entry483487comment",
        "content": "<p data-ke-size=\"size16\">하루의 주요일정을 재구성해 휴식과 준비 시간을 포함한 효과적인 스케쥴을 만들어보세요. 프롬프트 소개와 실제 예시로 쉽게 따라할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/dnuoYp/btsKcMpTBtV/pBUuMRYAB1fMlnJbAYE7o0/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/dnuoYp/btsKcMpTBtV/pBUuMRYAB1fMlnJbAYE7o0/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/dnuoYp/btsKcMpTBtV/pBUuMRYAB1fMlnJbAYE7o0/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdnuoYp%2FbtsKcMpTBtV%2FpBUuMRYAB1fMlnJbAYE7o0%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"효과적인 스케쥴 재구성으로 바쁜 하루를 관리하는 법\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>시작하며</b></span></h2>\n<p data-ke-size=\"size16\">바쁜 일정을 관리하면서 효과적으로 시간을 활용하는 것은 많은 사람들이 고민하는 부분입니다. 특히, 휴식과 준비 시간을 포함해 스케쥴을 잘 짜는 것은 하루의 생산성을 크게 높여줍니다. 이번 글에서는 하루 주요일정을 효과적으로 재구성하기 위한 프롬프트와 그 사용법을 소개하고, 실제 사례를 통해 어떻게 적용할 수 있는지 알아보겠습니다.</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>프롬프트 소개 및 사용 방법</b></span></h2>\n<p data-ke-size=\"size16\">프롬프트는 사용자가 제공하는 일정, 시간, 목표 등을 기반으로 휴식과 준비 시간을 포함한 효율적인 스케쥴을 재구성해주는 강력한 도구입니다. 복잡한 일정 속에서도 시간 관리가 어려운 사람들을 돕기 위해 설계되었으며, 각 활동 사이에 적절한 휴식과 준비 시간을 배치하여 보다 생산적이고 균형 잡힌 하루를 보낼 수 있도록 도와줍니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/eDxtKd/btsKcUadZZP/o2cd9Sl9LR2v1DtzBkrQt0/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/eDxtKd/btsKcUadZZP/o2cd9Sl9LR2v1DtzBkrQt0/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/eDxtKd/btsKcUadZZP/o2cd9Sl9LR2v1DtzBkrQt0/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeDxtKd%2FbtsKcUadZZP%2Fo2cd9Sl9LR2v1DtzBkrQt0%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"일정관리\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><i><b>프롬프트 사용의 장점</b></i></h3>\n<p data-ke-size=\"size16\">프롬프트는 사용자가 단순히 일정을 나열하는 것을 넘어, 일정 사이에 필요한 <b>휴식 시간</b>과 <b>준비 시간</b>을 자동으로 포함시켜 하루를 재구성합니다. 이로 인해 단순한 일정 작성만으로는 얻기 힘든 <b>높은 생산성</b>과 <b>효율성</b>을 가져올 수 있습니다. 특히, 중요한 업무와 일정을 더 잘 준비할 수 있도록 돕고, <b>번아웃</b>을 예방할 수 있는 휴식 시간을 확보해 줍니다.</p>\n<h3 data-ke-size=\"size23\"><i><b>사용 방법</b></i></h3>\n<p data-ke-size=\"size16\"><b>1. 오늘의 일정을 구체적으로 입력하기</b><br />먼저 사용자는 하루의 주요일정 및 업무 내용을 구체적으로 입력해야 합니다. 예를 들어, 회의 시간, 업무 마감 시간, 개인적인 일정 등을 적어도 됩니다. 이때, 구체적인 시간과 활동을 명시하는 것이 중요합니다. 예를 들어:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>주간회의: 10:00</li>\n<li>점심시간: 12:30~13:30</li>\n<li>팀원 교육: 14:00~16:00</li>\n<li>퇴근시간: 17:30</li>\n</ul>\n<p data-ke-size=\"size16\"><b>2. 프롬프트에 스케쥴 요청하기</b><br />입력된 일정을 프롬프트에 제공하면, 자동으로 휴식과 준비 시간을 포함한 <b>최적의 스케쥴</b>을 제안해줍니다. 예를 들어, 주간회의가 끝난 후 다음 일정을 준비할 시간을 할당하거나, 업무 사이에 잠시 쉬어갈 수 있도록 휴식 시간을 배치해줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>3. 스케쥴을 확인하고 맞춤형으로 수정하기</b><br />제안된 스케쥴을 검토한 후 사용자는 필요에 따라 일정을 맞춤형으로 조정할 수 있습니다. 만약 더 많은 시간을 할애하고 싶은 활동이 있거나, 추가적인 휴식이 필요하다면 시간을 조정해 <b>유연한 일정</b>을 구성할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><i><span style=\"color: #ee2323;\"><b>예시 프롬프트 입력</b></span></i></h3>\n<pre class=\"angelscript\"><code>오늘 2024년 10월 21일 월요일 주요일정은 아래와 같습니다. 효과적인 오늘 스케쥴을 만들어 주세요.  \n1. 주간회의: 10:00  \n2. 월간 보고자료 작성: 수요일까지  \n3. 점심식사: 12:30~13:30  \n4. 팀원 교육: 14:00~16:00  \n5. 퇴근시간: 17:30  </code></pre>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i><b>응답결과</b></i></span></h3>\n<pre class=\"angelscript\"><code>오늘을 효과적으로 보내기 위해 다음과 같이 스케줄을 구성해 보세요.\n\n1.  08:00 - 09:30: 하루를 계획하는 시간을 가지면서 월간 보고자료의 초안을 시작합니다. 조용한 아침 시간을 활용하여 집중력을 높이는 것이 좋습니다.\n2.  09:30 - 09:50: 간단한 스트레칭을 하고 잠시 휴식하여 머리를 맑게 합니다.\n3.  10:00 - 11:00: 주간회의에 참석합니다. 중요한 포인트를 적어두고, 각 업무의 우선순위를 다시 확인합니다.\n4.  11:00 - 12:30: 월간 보고자료 초안을 계속 진행하거나, 회의에서 나온 중요한 작업을 우선적으로 처리합니다.\n5.  12:30 - 13:30: 점심식사를 하며 잠시 휴식을 취합니다. 가능하면 가벼운 산책을 통해 오후를 대비한 에너지를 충전하세요.\n6.  13:30 - 14:00: 교육 준비 및 교육 진행 계획을 최종 점검합니다.\n7.  14:00 - 16:00: 팀원 교육을 진행합니다. 교육 후 피드백을 받아 개선할 점을 체크합니다.\n8.  16:00 - 16:15: 잠깐 휴식을 취합니다. 커피를 한 잔 하면서 교육에 대한 메모와 생각을 정리하세요.\n9.  16:15 - 17:15: 월간 보고자료 작업을 다시 진행하여 세부사항을 다듬습니다. 혹은 오늘 완료해야 할 기타 미뤄진 업무를 처리합니다.\n10. 17:15 - 17:30: 오늘 하루의 업무를 간단히 리뷰하고 내일의 업무를 위한 준비를 합니다.\n\n이 스케줄은 주요 업무에 집중하면서도 적절한 휴식과 준비 시간을 포함하여 생산성을 극대화할 수 있도록 설계되었습니다.</code></pre>\n<h3 data-ke-size=\"size23\"><b>휴식과 준비 시간의 중요성</b></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/GrGdN/btsKb7OIebr/neQW3d1926a1R4gXzXiJO1/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/GrGdN/btsKb7OIebr/neQW3d1926a1R4gXzXiJO1/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/GrGdN/btsKb7OIebr/neQW3d1926a1R4gXzXiJO1/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FGrGdN%2FbtsKb7OIebr%2FneQW3d1926a1R4gXzXiJO1%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"효율적인 시간 관리와 스트레스 관리\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;이 프롬프트는 단순한 시간표 작성 도구가 아닌, <b>효율적인 시간 관리</b>와 <b>스트레스 관리</b>를 돕기 위한 도구입니다. 각 업무 사이에 휴식과 준비 시간을 자연스럽게 배치함으로써, 작업에 대한 집중력을 유지할 수 있고, 보다 체계적이고 효과적인 하루를 계획할 수 있습니다.</p>\n<p data-ke-size=\"size16\">프롬프트를 통해 시간 관리를 최적화하고, 더욱 생산적이고 스트레스 없는 하루를 만들어 보세요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>이 프롬프트의 유용성</b></span></h2>\n<p data-ke-size=\"size16\">이 프롬프트는 단순한 시간표 생성 기능을 넘어, 휴식 시간과 준비 시간을 포함하여 스케쥴을 보다 유연하고 효과적으로 관리할 수 있는 도구입니다. 중요한 일정 사이에 휴식 시간을 배치함으로써, 일의 효율성을 높이고 피로를 줄일 수 있습니다. 또한, 준비 시간을 통해 각 일정에 대한 집중력을 높일 수 있어, 중요한 회의나 업무에서도 최고의 성과를 낼 수 있습니다.</p>\n<p data-ke-size=\"size16\">프롬프트를 활용하면 하루를 보다 체계적으로 계획할 수 있으며, 이를 통해 스트레스를 줄이고 보다 생산적인 하루를 보낼 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size16\">하루 일정을 재구성하는 것은 우리의 시간 관리 능력을 크게 향상시킵니다. 프롬프트를 사용하여 휴식과 준비 시간을 포함한 효과적인 스케쥴을 만들면, 하루를 보다 유연하게 관리할 수 있고 생산성 또한 높일 수 있습니다. 여러분도 이 프롬프트를 통해 더욱 효율적인 하루를 만들어 보세요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/t1w32/btsKd2rygdM/loLXyOlrttUNx2nEPLBoF0/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/t1w32/btsKd2rygdM/loLXyOlrttUNx2nEPLBoF0/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/t1w32/btsKd2rygdM/loLXyOlrttUNx2nEPLBoF0/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Ft1w32%2FbtsKd2rygdM%2FloLXyOlrttUNx2nEPLBoF0%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"효과적인 스케쥴관리\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>Q&amp;A</b></span></h2>\n<h3 data-ke-size=\"size23\">Q1: 프롬프트는 모든 일정에 적용 가능한가요?</h3>\n<p data-ke-size=\"size16\">A1: 네, 프롬프트는 회의, 업무, 개인 일정 등 다양한 일정을 관리할 수 있도록 설계되어 있어 모든 상황에 유용합니다.</p>\n<h3 data-ke-size=\"size23\">Q2: 스케쥴 재구성 시 자동으로 휴식 시간을 포함시키나요?</h3>\n<p data-ke-size=\"size16\">A2: 네, 휴식 시간은 자동으로 일정 사이에 배치되며, 이는 하루의 효율성을 높이는 데 도움이 됩니다.</p>\n<h3 data-ke-size=\"size23\">Q3: 프롬프트가 제안하는 스케쥴을 수정할 수 있나요?</h3>\n<p data-ke-size=\"size16\">A3: 네, 제안된 스케쥴은 사용자가 상황에 맞게 조정할 수 있습니다. 필요에 따라 시간을 변경하거나 추가 일정을 삽입할 수 있습니다.</p>",
        "contentSnippet": "하루의 주요일정을 재구성해 휴식과 준비 시간을 포함한 효과적인 스케쥴을 만들어보세요. 프롬프트 소개와 실제 예시로 쉽게 따라할 수 있습니다.\n\n\n시작하며\n바쁜 일정을 관리하면서 효과적으로 시간을 활용하는 것은 많은 사람들이 고민하는 부분입니다. 특히, 휴식과 준비 시간을 포함해 스케쥴을 잘 짜는 것은 하루의 생산성을 크게 높여줍니다. 이번 글에서는 하루 주요일정을 효과적으로 재구성하기 위한 프롬프트와 그 사용법을 소개하고, 실제 사례를 통해 어떻게 적용할 수 있는지 알아보겠습니다.\n프롬프트 소개 및 사용 방법\n프롬프트는 사용자가 제공하는 일정, 시간, 목표 등을 기반으로 휴식과 준비 시간을 포함한 효율적인 스케쥴을 재구성해주는 강력한 도구입니다. 복잡한 일정 속에서도 시간 관리가 어려운 사람들을 돕기 위해 설계되었으며, 각 활동 사이에 적절한 휴식과 준비 시간을 배치하여 보다 생산적이고 균형 잡힌 하루를 보낼 수 있도록 도와줍니다.\n\n\n프롬프트 사용의 장점\n프롬프트는 사용자가 단순히 일정을 나열하는 것을 넘어, 일정 사이에 필요한 휴식 시간과 준비 시간을 자동으로 포함시켜 하루를 재구성합니다. 이로 인해 단순한 일정 작성만으로는 얻기 힘든 높은 생산성과 효율성을 가져올 수 있습니다. 특히, 중요한 업무와 일정을 더 잘 준비할 수 있도록 돕고, 번아웃을 예방할 수 있는 휴식 시간을 확보해 줍니다.\n사용 방법\n1. 오늘의 일정을 구체적으로 입력하기\n먼저 사용자는 하루의 주요일정 및 업무 내용을 구체적으로 입력해야 합니다. 예를 들어, 회의 시간, 업무 마감 시간, 개인적인 일정 등을 적어도 됩니다. 이때, 구체적인 시간과 활동을 명시하는 것이 중요합니다. 예를 들어:\n주간회의: 10:00\n점심시간: 12:30~13:30\n팀원 교육: 14:00~16:00\n퇴근시간: 17:30\n2. 프롬프트에 스케쥴 요청하기\n입력된 일정을 프롬프트에 제공하면, 자동으로 휴식과 준비 시간을 포함한 최적의 스케쥴을 제안해줍니다. 예를 들어, 주간회의가 끝난 후 다음 일정을 준비할 시간을 할당하거나, 업무 사이에 잠시 쉬어갈 수 있도록 휴식 시간을 배치해줍니다.\n \n3. 스케쥴을 확인하고 맞춤형으로 수정하기\n제안된 스케쥴을 검토한 후 사용자는 필요에 따라 일정을 맞춤형으로 조정할 수 있습니다. 만약 더 많은 시간을 할애하고 싶은 활동이 있거나, 추가적인 휴식이 필요하다면 시간을 조정해 유연한 일정을 구성할 수 있습니다.\n예시 프롬프트 입력\n오늘 2024년 10월 21일 월요일 주요일정은 아래와 같습니다. 효과적인 오늘 스케쥴을 만들어 주세요.  \n1. 주간회의: 10:00  \n2. 월간 보고자료 작성: 수요일까지  \n3. 점심식사: 12:30~13:30  \n4. 팀원 교육: 14:00~16:00  \n5. 퇴근시간: 17:30  \n응답결과\n오늘을 효과적으로 보내기 위해 다음과 같이 스케줄을 구성해 보세요.\n\n1.  08:00 - 09:30: 하루를 계획하는 시간을 가지면서 월간 보고자료의 초안을 시작합니다. 조용한 아침 시간을 활용하여 집중력을 높이는 것이 좋습니다.\n2.  09:30 - 09:50: 간단한 스트레칭을 하고 잠시 휴식하여 머리를 맑게 합니다.\n3.  10:00 - 11:00: 주간회의에 참석합니다. 중요한 포인트를 적어두고, 각 업무의 우선순위를 다시 확인합니다.\n4.  11:00 - 12:30: 월간 보고자료 초안을 계속 진행하거나, 회의에서 나온 중요한 작업을 우선적으로 처리합니다.\n5.  12:30 - 13:30: 점심식사를 하며 잠시 휴식을 취합니다. 가능하면 가벼운 산책을 통해 오후를 대비한 에너지를 충전하세요.\n6.  13:30 - 14:00: 교육 준비 및 교육 진행 계획을 최종 점검합니다.\n7.  14:00 - 16:00: 팀원 교육을 진행합니다. 교육 후 피드백을 받아 개선할 점을 체크합니다.\n8.  16:00 - 16:15: 잠깐 휴식을 취합니다. 커피를 한 잔 하면서 교육에 대한 메모와 생각을 정리하세요.\n9.  16:15 - 17:15: 월간 보고자료 작업을 다시 진행하여 세부사항을 다듬습니다. 혹은 오늘 완료해야 할 기타 미뤄진 업무를 처리합니다.\n10. 17:15 - 17:30: 오늘 하루의 업무를 간단히 리뷰하고 내일의 업무를 위한 준비를 합니다.\n\n이 스케줄은 주요 업무에 집중하면서도 적절한 휴식과 준비 시간을 포함하여 생산성을 극대화할 수 있도록 설계되었습니다.\n휴식과 준비 시간의 중요성\n\n\n \n 이 프롬프트는 단순한 시간표 작성 도구가 아닌, 효율적인 시간 관리와 스트레스 관리를 돕기 위한 도구입니다. 각 업무 사이에 휴식과 준비 시간을 자연스럽게 배치함으로써, 작업에 대한 집중력을 유지할 수 있고, 보다 체계적이고 효과적인 하루를 계획할 수 있습니다.\n프롬프트를 통해 시간 관리를 최적화하고, 더욱 생산적이고 스트레스 없는 하루를 만들어 보세요!\n \n이 프롬프트의 유용성\n이 프롬프트는 단순한 시간표 생성 기능을 넘어, 휴식 시간과 준비 시간을 포함하여 스케쥴을 보다 유연하고 효과적으로 관리할 수 있는 도구입니다. 중요한 일정 사이에 휴식 시간을 배치함으로써, 일의 효율성을 높이고 피로를 줄일 수 있습니다. 또한, 준비 시간을 통해 각 일정에 대한 집중력을 높일 수 있어, 중요한 회의나 업무에서도 최고의 성과를 낼 수 있습니다.\n프롬프트를 활용하면 하루를 보다 체계적으로 계획할 수 있으며, 이를 통해 스트레스를 줄이고 보다 생산적인 하루를 보낼 수 있습니다.\n \n마치며\n하루 일정을 재구성하는 것은 우리의 시간 관리 능력을 크게 향상시킵니다. 프롬프트를 사용하여 휴식과 준비 시간을 포함한 효과적인 스케쥴을 만들면, 하루를 보다 유연하게 관리할 수 있고 생산성 또한 높일 수 있습니다. 여러분도 이 프롬프트를 통해 더욱 효율적인 하루를 만들어 보세요!\n \n\n\nQ&A\nQ1: 프롬프트는 모든 일정에 적용 가능한가요?\nA1: 네, 프롬프트는 회의, 업무, 개인 일정 등 다양한 일정을 관리할 수 있도록 설계되어 있어 모든 상황에 유용합니다.\nQ2: 스케쥴 재구성 시 자동으로 휴식 시간을 포함시키나요?\nA2: 네, 휴식 시간은 자동으로 일정 사이에 배치되며, 이는 하루의 효율성을 높이는 데 도움이 됩니다.\nQ3: 프롬프트가 제안하는 스케쥴을 수정할 수 있나요?\nA3: 네, 제안된 스케쥴은 사용자가 상황에 맞게 조정할 수 있습니다. 필요에 따라 시간을 변경하거나 추가 일정을 삽입할 수 있습니다.",
        "guid": "http://muzbox.tistory.com/483487",
        "categories": [
          "AI, 미래기술/프롬프트 다이어리",
          "스케쥴 관리",
          "시간 관리",
          "시간 배분",
          "일정 관리",
          "준비 시간",
          "하루 일정",
          "효과적인 스케쥴",
          "효율성",
          "휴식",
          "휴식 시간"
        ],
        "isoDate": "2024-10-21T00:57:34.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "윈도우를 맥OS 처럼 꾸미는 방법 Winstep Nexus",
        "link": "http://muzbox.tistory.com/483486",
        "pubDate": "Fri, 18 Oct 2024 12:55:44 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483486#entry483486comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;Winstep Nexus는 윈도우용 강력한 무료 독(Dock) 프로그램으로, 자주 사용하는 애플리케이션과 폴더에 빠르게 접근할 수 있게 도와주며, 다양한 시각적 효과와 위젯을 통해 작업 생산성을 높입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"border-collapse: collapse; width: 95.6979%; height: 248px;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"height: 62px;\"><!-- 첫 번째 열에 배경색을 노란색으로 설정 -->\n<td style=\"width: 13.1835%; height: 62px; text-align: center; background-color: #555555;\"><span style=\"color: #ffffff;\"><b>분류</b></span></td>\n<td style=\"width: 22.4483%; height: 62px; text-align: center;\">시스템/테마</td>\n<td style=\"width: 64.3682%; height: 248px; text-align: center;\" rowspan=\"4\"><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Winstep Nexus.png\" data-origin-width=\"640\" data-origin-height=\"400\"><span data-url=\"https://blog.kakaocdn.net/dn/cFDEz4/btsKa6abS8Z/mzG10rxmo0HUE5FoTWiui1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cFDEz4/btsKa6abS8Z/mzG10rxmo0HUE5FoTWiui1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cFDEz4/btsKa6abS8Z/mzG10rxmo0HUE5FoTWiui1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcFDEz4%2FbtsKa6abS8Z%2FmzG10rxmo0HUE5FoTWiui1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Winstep Nexus.png\" data-origin-width=\"640\" data-origin-height=\"400\"/></span></figure>\n</td>\n</tr>\n<tr style=\"height: 62px;\"><!-- 첫 번째 열에 배경색을 노란색으로 설정 -->\n<td style=\"width: 13.1835%; height: 62px; text-align: center; background-color: #555555;\"><span style=\"color: #ffffff;\"><b>사용범위</b></span></td>\n<td style=\"width: 22.4483%; height: 62px; text-align: center;\">무료(개인)</td>\n</tr>\n<tr style=\"height: 62px;\"><!-- 첫 번째 열에 배경색을 노란색으로 설정 -->\n<td style=\"width: 13.1835%; height: 62px; text-align: center; background-color: #555555;\"><span style=\"color: #ffffff;\"><b>사용환경</b></span></td>\n<td style=\"width: 22.4483%; height: 62px; text-align: center;\">Windows</td>\n</tr>\n<tr style=\"height: 62px;\"><!-- 첫 번째 열에 배경색을 노란색으로 설정 -->\n<td style=\"width: 13.1835%; height: 62px; text-align: center; background-color: #555555;\"><span style=\"color: #ffffff;\"><b>제작사</b></span></td>\n<td style=\"width: 22.4483%; height: 62px; text-align: center;\"><a href=\"https://www.winstep.net/nexus.asp\" target=\"_blank\" rel=\"noopener\">winstep</a></td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;컴퓨터에서 여러 애플리케이션을 자주 사용하는 사용자는 작업의 효율성을 높일 수 있는 도구가 필수입니다. Winstep Nexus는 이러한 요구에 부합하는 강력한 무료 독(Dock) 프로그램으로, 사용자가 자주 사용하는 애플리케이션, 폴더, 파일 등을 손쉽게 접근할 수 있도록 도와줍니다. 이 프로그램은 사용자 경험을 크게 향상시키며, 데스크톱을 깔끔하고 직관적으로 정리할 수 있는 다양한 기능을 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"윈도우를 맥OS처럼 꾸미기 Winstep Nexus.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/dO796d/btsKabDzAIk/JWStZff9okutkwYUH9Ovp1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dO796d/btsKabDzAIk/JWStZff9okutkwYUH9Ovp1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dO796d/btsKabDzAIk/JWStZff9okutkwYUH9Ovp1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdO796d%2FbtsKabDzAIk%2FJWStZff9okutkwYUH9Ovp1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"윈도우를 맥OS 처럼 꾸미는 방법 Winstep Nexus\" data-filename=\"윈도우를 맥OS처럼 꾸미기 Winstep Nexus.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특히, Nexus는 시각적으로 매력적이며, 다양한 커스터마이징 옵션을 통해 사용자에게 최적화된 환경을 제공합니다. 이 글에서는 Winstep Nexus의 주요 기능과 함께 생산성을 높이는 사용 방법에 대해 자세히 알아보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>프로그램 개요</b></span></h2>\n<p data-ke-size=\"size16\">&nbsp;Winstep Nexus는 Windows 사용자를 위한 무료 독(Dock) 프로그램으로, 주로 애플리케이션 실행과 빠른 전환을 지원하는 도구입니다. Nexus를 사용하면 자주 사용하는 프로그램이나 폴더에 즉시 접근할 수 있으며, 단순한 작업 관리에서부터 시각적 만족감까지 다양한 혜택을 제공합니다. 무료로 제공되는 Nexus 버전 외에도, 더욱 고급 기능을 포함한 Nexus Ultimate 버전도 제공됩니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"928\" data-origin-height=\"293\"><span data-url=\"https://blog.kakaocdn.net/dn/u7AvN/btsKaApj3kk/myOLQ9vrcOxTZaNcnDGSQk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/u7AvN/btsKaApj3kk/myOLQ9vrcOxTZaNcnDGSQk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/u7AvN/btsKaApj3kk/myOLQ9vrcOxTZaNcnDGSQk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fu7AvN%2FbtsKaApj3kk%2FmyOLQ9vrcOxTZaNcnDGSQk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"928\" data-origin-height=\"293\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>주요 기능</b></span></h2>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><i><b>앱과 파일에 빠르게 접근</b></i><br />Nexus는 사용자에게 자주 사용하는 애플리케이션, 폴더, 파일 등에 단 한 번의 클릭으로 접근할 수 있도록 구성됩니다. 독에 원하는 요소를 추가하고 관리할 수 있어, 반복적인 검색 과정을 줄일 수 있습니다.</li>\n<li><i><b>작업 표시줄 대체 기능</b></i><br />Nexus는 단순한 런처 역할을 넘어 작업 표시줄을 대체할 수 있는 기능도 제공합니다. 이를 통해 실행 중인 프로그램들을 독에서 관리하고, 그룹화하거나 필터링하여 더욱 체계적으로 정리할 수 있습니다.</li>\n<li><i><b>시각 효과 및 애니메이션</b></i><br />Nexus는 사용자 인터페이스에 다양한 시각적 효과와 애니메이션을 제공합니다. 마우스를 독 위에 올리면 아이콘이 확대되거나, 실행 중인 앱에 애니메이션 효과를 추가하는 등, 보다 다이나믹한 환경을 즐길 수 있습니다.<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"900\" data-origin-height=\"285\"><span data-url=\"https://blog.kakaocdn.net/dn/bsQoji/btsKay56Hh6/LEk9rXclaqlwpouECKkbHk/img.gif\" data-phocus=\"https://blog.kakaocdn.net/dn/bsQoji/btsKay56Hh6/LEk9rXclaqlwpouECKkbHk/img.gif\"><img src=\"https://blog.kakaocdn.net/dn/bsQoji/btsKay56Hh6/LEk9rXclaqlwpouECKkbHk/img.gif\" srcset=\"https://blog.kakaocdn.net/dn/bsQoji/btsKay56Hh6/LEk9rXclaqlwpouECKkbHk/img.gif\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"900\" data-origin-height=\"285\"/></span></figure>\n</li>\n<li><i><b>블러 효과 및 반사 효과</b></i><br />독의 배경을 반투명 블러로 설정할 수 있으며, 아이콘이 움직이거나 변경될 때 실시간 반사 효과가 적용됩니다. 이러한 비주얼 요소는 Nexus만의 독특한 매력으로, 작업 환경을 한층 더 세련되게 만들어 줍니다.</li>\n<li><i><b>모듈과 위젯 지원</b></i><br />Nexus는 CPU, 메모리, 네트워크 사용량을 보여주는 모듈과 날씨 위젯, 이메일 알림 등을 포함한 다양한 내장 위젯을 지원합니다. 이러한 모듈을 활용하면 시스템 상태를 실시간으로 확인할 수 있어, 더욱 효율적인 작업이 가능합니다.</li>\n<li><b><i>멀티 모니터 및 고해상도 지원</i></b><br />Nexus는 다중 모니터 환경을 완벽히 지원하며, 고해상도 디스플레이에서도 최적화된 아이콘과 인터페이스를 제공합니다. 따라서 어떤 작업 환경에서도 원활하게 사용할 수 있습니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>Winstep Nexus의 장점과 단점</b></span></h2>\n<h3 data-ke-size=\"size23\"><b>1. 장점</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>직관적인 사용자 인터페이스</b><br />Nexus는 매우 직관적인 인터페이스를 제공하여, 처음 사용하는 사용자도 쉽게 독을 구성하고 활용할 수 있습니다. 드래그 앤 드롭 방식으로 애플리케이션을 추가하거나 정리하는 등, 간편한 설정이 가능합니다. 한국어도 지원합니다.</li>\n<li><b>높은 커스터마이징 가능성</b><br />사용자는 Nexus의 다양한 시각 효과와 애니메이션, 아이콘 크기, 배경 등을 개인 취향에 맞게 자유롭게 커스터마이징할 수 있습니다. 덕분에 자신의 작업 스타일과 미적 감각에 맞춘 독을 만들 수 있습니다.</li>\n<li><b>작업 생산성 향상</b><br />Nexus를 통해 자주 사용하는 애플리케이션, 폴더 등에 빠르게 접근할 수 있어, 작업 흐름이 훨씬 원활해집니다. 독에 자주 사용하는 도구를 배치함으로써 불필요한 검색 시간을 절약할 수 있습니다.</li>\n<li><b>무료로 제공되는 고급 기능</b><br />Nexus는 무료 버전에서조차 다양한 고급 기능을 제공하며, 이를 통해 많은 사용자가 별도의 비용 없이 강력한 독 기능을 사용할 수 있습니다. 시스템 자원을 최소화하면서도 생산성을 크게 높이는 데 기여합니다.</li>\n<li><b>애니메이션과 시각 효과</b><br />Nexus의 독특한 애니메이션 효과는 작업 환경을 더욱 재미있고 매력적으로 만들어줍니다. 확대, 회전, 반사 등의 시각적 효과는 단순한 기능적 독 이상의 사용자 경험을 제공합니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><b>2. 단점</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>다양한 기능에 대한 학습 곡선</b><br />Nexus는 커스터마이징 옵션이 매우 다양하고 복잡할 수 있습니다. 따라서 초보자는 모든 기능을 활용하는 데 다소 시간이 걸릴 수 있으며, 사용자 가이드나 도움말을 참조해야 할 필요가 있습니다.</li>\n<li><b>일부 고급 기능은 유료</b><br />Nexus 무료 버전에서는 기본적인 독 기능을 사용할 수 있지만, 여러 독 사용, 하위 독(서브독), 그리드 스택 등 고급 기능은 Nexus Ultimate 버전에서만 사용할 수 있습니다. 더 많은 기능을 필요로 하는 경우, 유료 버전을 구매해야 합니다.</li>\n<li><b>비즈니스 환경에서는 무료 사용 불가</b><br />Nexus는 개인 사용자에게는 무료로 제공되지만, 비즈니스 및 상업적 사용자는 라이선스 구매가 필요합니다. 따라서 회사나 조직에서 사용할 경우, 무료로 사용하기 어렵습니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=JTlF8m32w6U&amp;list=PLklCRu1mBphWFVRyqPExEfmOY04PvYwnC\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/mrzsP/hyXhYEhTvu/IxCv6FwrjQFoXBRhgmKGk0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/zx4IA/hyXlIme0CO/h0wy8BEPMHZgnZDp1HARk1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Nexus Ultimate Dock Overview &quot;Organize your Desktop&quot;\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/JTlF8m32w6U\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>Winstep Nexus 사용을 위한 간단한 가이드</b></span></h2>\n<h3 data-ke-size=\"size23\"><b>1. Winstep Nexus 설치 방법</b></h3>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>Winstep Nexus 다운로드\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>공식 웹사이트에서 Winstep Nexus의 설치 파일을 다운로드합니다. Nexus는 Windows 2000부터 Windows 11까지 다양한 운영 체제에서 사용이 가능합니다.</li>\n</ul>\n</li>\n<li>설치 파일 실행\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>다운로드한 설치 파일을 실행하여 설치 마법사를 따라 프로그램을 설치합니다. 설치 과정에서 독의 기본 설정을 선택할 수 있으며, 설치가 완료되면 자동으로 프로그램이 실행됩니다.</li>\n</ul>\n</li>\n<li>Nexus 실행\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>설치가 완료되면 독이 화면 하단(혹은 다른 설정된 위치)에 나타납니다. 기본적으로 Nexus는 몇 가지 애플리케이션과 시스템 아이콘이 포함된 상태로 제공됩니다.</li>\n</ul>\n</li>\n</ol>\n<h3 data-ke-size=\"size23\"><b>2. 독에 애플리케이션 추가하기</b></h3>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>애플리케이션 아이콘 추가\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>원하는 애플리케이션이나 폴더를 독에 추가하려면, 해당 아이콘을 마우스로 드래그하여 독에 떨어뜨립니다. 이렇게 간단한 드래그 앤 드롭 방식으로 독을 구성할 수 있습니다.</li>\n</ul>\n</li>\n<li>아이콘 순서 변경\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>독에 추가된 아이콘은 마우스로 드래그하여 자유롭게 위치를 변경할 수 있습니다. 사용자 편의에 맞춰 자주 사용하는 프로그램을 좌우로 배치해 보세요.</li>\n</ul>\n</li>\n<li>아이콘 삭제\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>독에서 특정 아이콘을 제거하려면, 제거할 아이콘을 마우스 오른쪽 버튼으로 클릭한 후 &lsquo;삭제&rsquo; 옵션을 선택하면 됩니다.</li>\n</ul>\n</li>\n</ol>\n<h3 data-ke-size=\"size23\"><b>3. 시각 효과 및 애니메이션 설정</b></h3>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>애니메이션 설정\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>마우스 우클릭 후 '환경 설정' 메뉴로 이동하여, 독의 애니메이션 및 시각 효과를 설정할 수 있습니다. 확대, 회전, 반사 등의 효과를 활성화하거나 비활성화할 수 있습니다.</li>\n</ul>\n</li>\n<li>테마 변경\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>독의 전체적인 테마나 배경 이미지를 변경하려면, 환경 설정 메뉴에서 다양한 테마 옵션을 선택할 수 있습니다. 기본 제공 테마 외에도 추가로 다운로드하여 적용할 수 있습니다.</li>\n</ul>\n</li>\n</ol>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Winstep Nexus 02.jpg\" data-origin-width=\"763\" data-origin-height=\"509\"><span data-url=\"https://blog.kakaocdn.net/dn/MeAjN/btsKbFCZKyI/emhCkxrAQoPpCKZnPINPpk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/MeAjN/btsKbFCZKyI/emhCkxrAQoPpCKZnPINPpk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/MeAjN/btsKbFCZKyI/emhCkxrAQoPpCKZnPINPpk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FMeAjN%2FbtsKbFCZKyI%2FemhCkxrAQoPpCKZnPINPpk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Winstep Nexus 02.jpg\" data-origin-width=\"763\" data-origin-height=\"509\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><b>4. 독 자동 숨김 및 고정 설정</b></h3>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>자동 숨김 기능\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>독이 항상 화면에 표시되길 원하지 않는다면, 자동 숨김 기능을 활성화할 수 있습니다. 설정 메뉴에서 자동 숨김을 켜면, 마우스를 독에 가까이 대기 전까지 화면에서 독이 사라집니다.</li>\n</ul>\n</li>\n<li>독 고정\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>독을 화면의 상단, 하단, 좌우 등 원하는 위치에 고정할 수 있습니다. 멀티 모니터 환경에서도 독을 특정 모니터에 고정하여 사용 가능합니다.</li>\n</ul>\n</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>Winstep Nexus 라이선스 정책</b></span></h2>\n<p data-ke-size=\"size16\">Winstep Nexus는 개인 사용자에게 무료로 제공되며, 사용자의 편의를 위해 무료 버전에서도 다양한 기능을 제공합니다. 하지만 비즈니스 또는 상업적 목적으로 프로그램을 사용하려면, 별도의 라이선스 구매가 필요합니다. 라이선스 정책에 대해 자세히 살펴보겠습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>1. 무료 버전 (개인 사용자)</b></span></h3>\n<p data-ke-size=\"size16\">Winstep Nexus의 무료 버전은 개인적인 용도에 한해 사용이 가능하며, 별도의 비용 없이 다운로드하고 설치할 수 있습니다. 개인 사용자는 Nexus를 통해 기본적인 독 기능을 포함하여, 다양한 커스터마이징 옵션과 기본 위젯을 사용할 수 있습니다. Nexus 무료 버전만으로도 상당한 수준의 생산성 향상을 기대할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><b>2. Nexus Ultimate (유료 버전)</b></h3>\n<p data-ke-size=\"size16\">Winstep Nexus의 확장된 기능을 필요로 하는 경우, Nexus Ultimate 버전을 유료로 구매할 수 있습니다. Nexus Ultimate는 $29.95에 구매할 수 있으며, 무료 버전에서 제공되지 않는 다중 독, 하위 독(서브독), 그리드 스택, 추가 위젯 및 모듈 등의 고급 기능을 포함하고 있습니다. 이 유료 버전은 특히 복잡한 작업 환경에서 더욱 생산성을 높일 수 있는 도구입니다.</p>\n<h3 data-ke-size=\"size23\"><b>3. 상업적 사용 및 기업 사용자</b></h3>\n<p data-ke-size=\"size16\">Nexus 무료 버전은 비즈니스 및 상업적 용도로는 사용이 불가능합니다. 회사나 조직에서 Winstep Nexus를 사용하고자 한다면, 라이선스를 구매해야 합니다. 비즈니스 사용자는 Nexus Ultimate를 통해 고급 기능을 이용하며, 대규모 작업 환경에서도 안정적인 독 기능을 활용할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><b>4. 업데이트 및 지원</b></h3>\n<p data-ke-size=\"size16\">Nexus Ultimate 버전은 평생 무료 업데이트를 제공합니다. 또한, 유료 사용자에게는 추가적인 기술 지원이 제공되며, 프로그램의 새로운 버전이나 패치가 출시될 때마다 무료로 업데이트할 수 있는 혜택이 주어집니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>Winstep Nexus의 효과적인 활용 방법</b></span></h2>\n<p data-ke-size=\"size16\">Winstep Nexus는 간단한 독 기능을 넘어, 다양한 방법으로 사용자의 작업 환경을 개선하고 생산성을 높일 수 있습니다. 여기서는 Nexus를 최대한 활용할 수 있는 몇 가지 방법을 소개합니다.</p>\n<h3 data-ke-size=\"size23\"><b>1. 작업 흐름 최적화</b></h3>\n<p data-ke-size=\"size16\">Nexus는 자주 사용하는 애플리케이션과 폴더에 한 번의 클릭으로 접근할 수 있도록 지원합니다. 특히 여러 개의 독을 설정할 수 있는 Nexus Ultimate 버전에서는 각 독을 특정 작업 그룹에 맞춰 구성할 수 있습니다. 예를 들어, 하나의 독에는 업무 관련 프로그램을, 다른 독에는 멀티미디어 도구를 배치하여 작업 전환이 빠르고 효율적으로 이루어지도록 설정할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><b>2. 바탕화면 정리 및 집중도 향상</b></h3>\n<p data-ke-size=\"size16\">많은 아이콘으로 가득한 바탕화면은 오히려 작업의 집중력을 방해할 수 있습니다. Nexus의 독을 사용해 바탕화면 아이콘을 대체하면, 작업을 위한 깔끔한 환경을 유지하면서 필요한 프로그램에 신속하게 접근할 수 있습니다. 또한 Nexus Ultimate의 그리드 스택 기능을 사용하면, 독에서 폴더를 열었을 때 그 내용을 그리드 형태로 정리해 보여주어 파일 관리가 더욱 편리해집니다.</p>\n<h3 data-ke-size=\"size23\"><b>3. 시각적 만족과 동기 부여</b></h3>\n<p data-ke-size=\"size16\">Nexus의 애니메이션 및 시각 효과를 적극적으로 활용하여, 작업하는 동안 눈의 피로를 줄이고, 더 재미있고 동기 부여되는 작업 환경을 만들 수 있습니다. 아이콘의 확대, 반사, 애니메이션 등 다양한 효과는 사용자의 기호에 맞게 조정할 수 있으며, 이를 통해 작업 자체가 더욱 흥미로워질 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><b>4. 위젯을 통한 시스템 모니터링</b></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"673\" data-origin-height=\"433\"><span data-url=\"https://blog.kakaocdn.net/dn/9iS78/btsKbjf9Y0e/XFZcgWQqhVSUnC19bKpcK1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/9iS78/btsKbjf9Y0e/XFZcgWQqhVSUnC19bKpcK1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/9iS78/btsKbjf9Y0e/XFZcgWQqhVSUnC19bKpcK1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F9iS78%2FbtsKbjf9Y0e%2FXFZcgWQqhVSUnC19bKpcK1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"673\" data-origin-height=\"433\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">Nexus에 포함된 CPU, 메모리, 네트워크 사용량 모니터링 위젯을 통해 시스템 성능을 실시간으로 확인할 수 있습니다. 이는 특히 자원이 많이 소모되는 작업을 할 때 유용하며, 시스템 자원 관리를 쉽게 할 수 있게 도와줍니다. 또한, 날씨 위젯이나 이메일 알림 위젯 등을 추가하여 더욱 개인화된 작업 환경을 조성할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><b>5. 멀티 모니터 환경에서의 활용</b></h3>\n<p data-ke-size=\"size16\">Nexus는 멀티 모니터를 완벽히 지원하여, 여러 모니터를 사용하는 환경에서 특히 유용합니다. 각각의 모니터에 맞춤형 독을 배치하여 작업 영역을 나눠 사용할 수 있으며, 이를 통해 생산성을 극대화할 수 있습니다. 예를 들어, 주 모니터에는 주요 애플리케이션 독을, 보조 모니터에는 미디어나 파일 관리 독을 배치해 효율적인 멀티태스킹이 가능합니다.</p>\n<h3 data-ke-size=\"size23\"><b>6. 자동 숨김 및 팝업 독 활용</b></h3>\n<p data-ke-size=\"size16\">Nexus는 독을 화면의 가장자리에 배치하고 자동 숨김 기능을 활성화하면, 독이 작업 공간을 차지하지 않으면서도 필요할 때마다 쉽게 불러올 수 있습니다. 이러한 자동 팝업 독은 많은 창을 사용하는 작업 환경에서 매우 유용하며, 독이 화면에 계속 나타나지 않도록 해 작업 공간을 최대한 활용할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>Winstep Nexus 다운로드</b></span></h2>\n<figure id=\"og_1729223734127\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Winstep Nexus Dock and Nexus Ultimate - The Advanced Docking System for Windows\" data-og-description=\"\" data-og-host=\"www.winstep.net\" data-og-source-url=\"https://www.winstep.net/nexus.asp\" data-og-url=\"https://www.winstep.net/nexus.asp\" data-og-image=\"\"><a href=\"https://www.winstep.net/nexus.asp\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.winstep.net/nexus.asp\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Winstep Nexus Dock and Nexus Ultimate - The Advanced Docking System for Windows</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">&nbsp;</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.winstep.net</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>결론</b></span></h2>\n<p data-ke-size=\"size16\">Winstep Nexus는 윈도우 사용자를 위한 강력하고 직관적인 독(Dock) 프로그램으로, 작업 생산성을 크게 높여줍니다. Nexus를 통해 자주 사용하는 애플리케이션, 폴더, 시스템 기능에 빠르게 접근할 수 있어, 반복적인 작업을 줄이고 효율적으로 작업 흐름을 관리할 수 있습니다. 특히, 다양한 커스터마이징 옵션과 시각적 효과를 통해 개별 사용자에게 최적화된 작업 환경을 제공하며, 멀티 모니터 환경에서도 그 유용성이 더욱 빛납니다.</p>\n<p data-ke-size=\"size16\">무료로 제공되는 Nexus 버전만으로도 충분한 기능을 제공하지만, 고급 기능을 필요로 하는 경우에는 Nexus Ultimate를 통해 더 많은 기능을 사용할 수 있습니다. 작업 환경을 정리하고 생산성을 높이고자 한다면, Winstep Nexus는 확실한 선택이 될 것입니다.</p>",
        "contentSnippet": "Winstep Nexus는 윈도우용 강력한 무료 독(Dock) 프로그램으로, 자주 사용하는 애플리케이션과 폴더에 빠르게 접근할 수 있게 도와주며, 다양한 시각적 효과와 위젯을 통해 작업 생산성을 높입니다.\n \n\n분류\n시스템/테마\n\n\n\n\n사용범위\n무료(개인)\n\n\n사용환경\nWindows\n\n\n제작사\nwinstep\n\n\n\n \n \n 컴퓨터에서 여러 애플리케이션을 자주 사용하는 사용자는 작업의 효율성을 높일 수 있는 도구가 필수입니다. Winstep Nexus는 이러한 요구에 부합하는 강력한 무료 독(Dock) 프로그램으로, 사용자가 자주 사용하는 애플리케이션, 폴더, 파일 등을 손쉽게 접근할 수 있도록 도와줍니다. 이 프로그램은 사용자 경험을 크게 향상시키며, 데스크톱을 깔끔하고 직관적으로 정리할 수 있는 다양한 기능을 제공합니다.\n\n\n \n특히, Nexus는 시각적으로 매력적이며, 다양한 커스터마이징 옵션을 통해 사용자에게 최적화된 환경을 제공합니다. 이 글에서는 Winstep Nexus의 주요 기능과 함께 생산성을 높이는 사용 방법에 대해 자세히 알아보겠습니다.\n \n \n프로그램 개요\n Winstep Nexus는 Windows 사용자를 위한 무료 독(Dock) 프로그램으로, 주로 애플리케이션 실행과 빠른 전환을 지원하는 도구입니다. Nexus를 사용하면 자주 사용하는 프로그램이나 폴더에 즉시 접근할 수 있으며, 단순한 작업 관리에서부터 시각적 만족감까지 다양한 혜택을 제공합니다. 무료로 제공되는 Nexus 버전 외에도, 더욱 고급 기능을 포함한 Nexus Ultimate 버전도 제공됩니다.\n\n\n \n주요 기능\n앱과 파일에 빠르게 접근\nNexus는 사용자에게 자주 사용하는 애플리케이션, 폴더, 파일 등에 단 한 번의 클릭으로 접근할 수 있도록 구성됩니다. 독에 원하는 요소를 추가하고 관리할 수 있어, 반복적인 검색 과정을 줄일 수 있습니다.\n작업 표시줄 대체 기능\nNexus는 단순한 런처 역할을 넘어 작업 표시줄을 대체할 수 있는 기능도 제공합니다. 이를 통해 실행 중인 프로그램들을 독에서 관리하고, 그룹화하거나 필터링하여 더욱 체계적으로 정리할 수 있습니다.\n시각 효과 및 애니메이션\nNexus는 사용자 인터페이스에 다양한 시각적 효과와 애니메이션을 제공합니다. 마우스를 독 위에 올리면 아이콘이 확대되거나, 실행 중인 앱에 애니메이션 효과를 추가하는 등, 보다 다이나믹한 환경을 즐길 수 있습니다.\n\n블러 효과 및 반사 효과\n독의 배경을 반투명 블러로 설정할 수 있으며, 아이콘이 움직이거나 변경될 때 실시간 반사 효과가 적용됩니다. 이러한 비주얼 요소는 Nexus만의 독특한 매력으로, 작업 환경을 한층 더 세련되게 만들어 줍니다.\n모듈과 위젯 지원\nNexus는 CPU, 메모리, 네트워크 사용량을 보여주는 모듈과 날씨 위젯, 이메일 알림 등을 포함한 다양한 내장 위젯을 지원합니다. 이러한 모듈을 활용하면 시스템 상태를 실시간으로 확인할 수 있어, 더욱 효율적인 작업이 가능합니다.\n멀티 모니터 및 고해상도 지원\nNexus는 다중 모니터 환경을 완벽히 지원하며, 고해상도 디스플레이에서도 최적화된 아이콘과 인터페이스를 제공합니다. 따라서 어떤 작업 환경에서도 원활하게 사용할 수 있습니다.\n \n \nWinstep Nexus의 장점과 단점\n1. 장점\n직관적인 사용자 인터페이스\nNexus는 매우 직관적인 인터페이스를 제공하여, 처음 사용하는 사용자도 쉽게 독을 구성하고 활용할 수 있습니다. 드래그 앤 드롭 방식으로 애플리케이션을 추가하거나 정리하는 등, 간편한 설정이 가능합니다. 한국어도 지원합니다.\n높은 커스터마이징 가능성\n사용자는 Nexus의 다양한 시각 효과와 애니메이션, 아이콘 크기, 배경 등을 개인 취향에 맞게 자유롭게 커스터마이징할 수 있습니다. 덕분에 자신의 작업 스타일과 미적 감각에 맞춘 독을 만들 수 있습니다.\n작업 생산성 향상\nNexus를 통해 자주 사용하는 애플리케이션, 폴더 등에 빠르게 접근할 수 있어, 작업 흐름이 훨씬 원활해집니다. 독에 자주 사용하는 도구를 배치함으로써 불필요한 검색 시간을 절약할 수 있습니다.\n무료로 제공되는 고급 기능\nNexus는 무료 버전에서조차 다양한 고급 기능을 제공하며, 이를 통해 많은 사용자가 별도의 비용 없이 강력한 독 기능을 사용할 수 있습니다. 시스템 자원을 최소화하면서도 생산성을 크게 높이는 데 기여합니다.\n애니메이션과 시각 효과\nNexus의 독특한 애니메이션 효과는 작업 환경을 더욱 재미있고 매력적으로 만들어줍니다. 확대, 회전, 반사 등의 시각적 효과는 단순한 기능적 독 이상의 사용자 경험을 제공합니다.\n \n2. 단점\n다양한 기능에 대한 학습 곡선\nNexus는 커스터마이징 옵션이 매우 다양하고 복잡할 수 있습니다. 따라서 초보자는 모든 기능을 활용하는 데 다소 시간이 걸릴 수 있으며, 사용자 가이드나 도움말을 참조해야 할 필요가 있습니다.\n일부 고급 기능은 유료\nNexus 무료 버전에서는 기본적인 독 기능을 사용할 수 있지만, 여러 독 사용, 하위 독(서브독), 그리드 스택 등 고급 기능은 Nexus Ultimate 버전에서만 사용할 수 있습니다. 더 많은 기능을 필요로 하는 경우, 유료 버전을 구매해야 합니다.\n비즈니스 환경에서는 무료 사용 불가\nNexus는 개인 사용자에게는 무료로 제공되지만, 비즈니스 및 상업적 사용자는 라이선스 구매가 필요합니다. 따라서 회사나 조직에서 사용할 경우, 무료로 사용하기 어렵습니다.\n \n\n\n\n \n \nWinstep Nexus 사용을 위한 간단한 가이드\n1. Winstep Nexus 설치 방법\nWinstep Nexus 다운로드\n\n공식 웹사이트에서 Winstep Nexus의 설치 파일을 다운로드합니다. Nexus는 Windows 2000부터 Windows 11까지 다양한 운영 체제에서 사용이 가능합니다.\n설치 파일 실행\n\n다운로드한 설치 파일을 실행하여 설치 마법사를 따라 프로그램을 설치합니다. 설치 과정에서 독의 기본 설정을 선택할 수 있으며, 설치가 완료되면 자동으로 프로그램이 실행됩니다.\nNexus 실행\n\n설치가 완료되면 독이 화면 하단(혹은 다른 설정된 위치)에 나타납니다. 기본적으로 Nexus는 몇 가지 애플리케이션과 시스템 아이콘이 포함된 상태로 제공됩니다.\n2. 독에 애플리케이션 추가하기\n애플리케이션 아이콘 추가\n\n원하는 애플리케이션이나 폴더를 독에 추가하려면, 해당 아이콘을 마우스로 드래그하여 독에 떨어뜨립니다. 이렇게 간단한 드래그 앤 드롭 방식으로 독을 구성할 수 있습니다.\n아이콘 순서 변경\n\n독에 추가된 아이콘은 마우스로 드래그하여 자유롭게 위치를 변경할 수 있습니다. 사용자 편의에 맞춰 자주 사용하는 프로그램을 좌우로 배치해 보세요.\n아이콘 삭제\n\n독에서 특정 아이콘을 제거하려면, 제거할 아이콘을 마우스 오른쪽 버튼으로 클릭한 후 ‘삭제’ 옵션을 선택하면 됩니다.\n3. 시각 효과 및 애니메이션 설정\n애니메이션 설정\n\n마우스 우클릭 후 '환경 설정' 메뉴로 이동하여, 독의 애니메이션 및 시각 효과를 설정할 수 있습니다. 확대, 회전, 반사 등의 효과를 활성화하거나 비활성화할 수 있습니다.\n테마 변경\n\n독의 전체적인 테마나 배경 이미지를 변경하려면, 환경 설정 메뉴에서 다양한 테마 옵션을 선택할 수 있습니다. 기본 제공 테마 외에도 추가로 다운로드하여 적용할 수 있습니다.\n\n\n4. 독 자동 숨김 및 고정 설정\n자동 숨김 기능\n\n독이 항상 화면에 표시되길 원하지 않는다면, 자동 숨김 기능을 활성화할 수 있습니다. 설정 메뉴에서 자동 숨김을 켜면, 마우스를 독에 가까이 대기 전까지 화면에서 독이 사라집니다.\n독 고정\n\n독을 화면의 상단, 하단, 좌우 등 원하는 위치에 고정할 수 있습니다. 멀티 모니터 환경에서도 독을 특정 모니터에 고정하여 사용 가능합니다.\n \nWinstep Nexus 라이선스 정책\nWinstep Nexus는 개인 사용자에게 무료로 제공되며, 사용자의 편의를 위해 무료 버전에서도 다양한 기능을 제공합니다. 하지만 비즈니스 또는 상업적 목적으로 프로그램을 사용하려면, 별도의 라이선스 구매가 필요합니다. 라이선스 정책에 대해 자세히 살펴보겠습니다.\n1. 무료 버전 (개인 사용자)\nWinstep Nexus의 무료 버전은 개인적인 용도에 한해 사용이 가능하며, 별도의 비용 없이 다운로드하고 설치할 수 있습니다. 개인 사용자는 Nexus를 통해 기본적인 독 기능을 포함하여, 다양한 커스터마이징 옵션과 기본 위젯을 사용할 수 있습니다. Nexus 무료 버전만으로도 상당한 수준의 생산성 향상을 기대할 수 있습니다.\n2. Nexus Ultimate (유료 버전)\nWinstep Nexus의 확장된 기능을 필요로 하는 경우, Nexus Ultimate 버전을 유료로 구매할 수 있습니다. Nexus Ultimate는 $29.95에 구매할 수 있으며, 무료 버전에서 제공되지 않는 다중 독, 하위 독(서브독), 그리드 스택, 추가 위젯 및 모듈 등의 고급 기능을 포함하고 있습니다. 이 유료 버전은 특히 복잡한 작업 환경에서 더욱 생산성을 높일 수 있는 도구입니다.\n3. 상업적 사용 및 기업 사용자\nNexus 무료 버전은 비즈니스 및 상업적 용도로는 사용이 불가능합니다. 회사나 조직에서 Winstep Nexus를 사용하고자 한다면, 라이선스를 구매해야 합니다. 비즈니스 사용자는 Nexus Ultimate를 통해 고급 기능을 이용하며, 대규모 작업 환경에서도 안정적인 독 기능을 활용할 수 있습니다.\n4. 업데이트 및 지원\nNexus Ultimate 버전은 평생 무료 업데이트를 제공합니다. 또한, 유료 사용자에게는 추가적인 기술 지원이 제공되며, 프로그램의 새로운 버전이나 패치가 출시될 때마다 무료로 업데이트할 수 있는 혜택이 주어집니다.\n \n \nWinstep Nexus의 효과적인 활용 방법\nWinstep Nexus는 간단한 독 기능을 넘어, 다양한 방법으로 사용자의 작업 환경을 개선하고 생산성을 높일 수 있습니다. 여기서는 Nexus를 최대한 활용할 수 있는 몇 가지 방법을 소개합니다.\n1. 작업 흐름 최적화\nNexus는 자주 사용하는 애플리케이션과 폴더에 한 번의 클릭으로 접근할 수 있도록 지원합니다. 특히 여러 개의 독을 설정할 수 있는 Nexus Ultimate 버전에서는 각 독을 특정 작업 그룹에 맞춰 구성할 수 있습니다. 예를 들어, 하나의 독에는 업무 관련 프로그램을, 다른 독에는 멀티미디어 도구를 배치하여 작업 전환이 빠르고 효율적으로 이루어지도록 설정할 수 있습니다.\n2. 바탕화면 정리 및 집중도 향상\n많은 아이콘으로 가득한 바탕화면은 오히려 작업의 집중력을 방해할 수 있습니다. Nexus의 독을 사용해 바탕화면 아이콘을 대체하면, 작업을 위한 깔끔한 환경을 유지하면서 필요한 프로그램에 신속하게 접근할 수 있습니다. 또한 Nexus Ultimate의 그리드 스택 기능을 사용하면, 독에서 폴더를 열었을 때 그 내용을 그리드 형태로 정리해 보여주어 파일 관리가 더욱 편리해집니다.\n3. 시각적 만족과 동기 부여\nNexus의 애니메이션 및 시각 효과를 적극적으로 활용하여, 작업하는 동안 눈의 피로를 줄이고, 더 재미있고 동기 부여되는 작업 환경을 만들 수 있습니다. 아이콘의 확대, 반사, 애니메이션 등 다양한 효과는 사용자의 기호에 맞게 조정할 수 있으며, 이를 통해 작업 자체가 더욱 흥미로워질 수 있습니다.\n4. 위젯을 통한 시스템 모니터링\n\n\nNexus에 포함된 CPU, 메모리, 네트워크 사용량 모니터링 위젯을 통해 시스템 성능을 실시간으로 확인할 수 있습니다. 이는 특히 자원이 많이 소모되는 작업을 할 때 유용하며, 시스템 자원 관리를 쉽게 할 수 있게 도와줍니다. 또한, 날씨 위젯이나 이메일 알림 위젯 등을 추가하여 더욱 개인화된 작업 환경을 조성할 수 있습니다.\n5. 멀티 모니터 환경에서의 활용\nNexus는 멀티 모니터를 완벽히 지원하여, 여러 모니터를 사용하는 환경에서 특히 유용합니다. 각각의 모니터에 맞춤형 독을 배치하여 작업 영역을 나눠 사용할 수 있으며, 이를 통해 생산성을 극대화할 수 있습니다. 예를 들어, 주 모니터에는 주요 애플리케이션 독을, 보조 모니터에는 미디어나 파일 관리 독을 배치해 효율적인 멀티태스킹이 가능합니다.\n6. 자동 숨김 및 팝업 독 활용\nNexus는 독을 화면의 가장자리에 배치하고 자동 숨김 기능을 활성화하면, 독이 작업 공간을 차지하지 않으면서도 필요할 때마다 쉽게 불러올 수 있습니다. 이러한 자동 팝업 독은 많은 창을 사용하는 작업 환경에서 매우 유용하며, 독이 화면에 계속 나타나지 않도록 해 작업 공간을 최대한 활용할 수 있습니다.\n \n \nWinstep Nexus 다운로드\n\n \nWinstep Nexus Dock and Nexus Ultimate - The Advanced Docking System for Windows\n \nwww.winstep.net\n\n \n \n결론\nWinstep Nexus는 윈도우 사용자를 위한 강력하고 직관적인 독(Dock) 프로그램으로, 작업 생산성을 크게 높여줍니다. Nexus를 통해 자주 사용하는 애플리케이션, 폴더, 시스템 기능에 빠르게 접근할 수 있어, 반복적인 작업을 줄이고 효율적으로 작업 흐름을 관리할 수 있습니다. 특히, 다양한 커스터마이징 옵션과 시각적 효과를 통해 개별 사용자에게 최적화된 작업 환경을 제공하며, 멀티 모니터 환경에서도 그 유용성이 더욱 빛납니다.\n무료로 제공되는 Nexus 버전만으로도 충분한 기능을 제공하지만, 고급 기능을 필요로 하는 경우에는 Nexus Ultimate를 통해 더 많은 기능을 사용할 수 있습니다. 작업 환경을 정리하고 생산성을 높이고자 한다면, Winstep Nexus는 확실한 선택이 될 것입니다.",
        "guid": "http://muzbox.tistory.com/483486",
        "categories": [
          "추천 프리웨어/시스템관리,보안",
          "nexus ultimate 기능",
          "windows 작업 효율성 향상",
          "winstep nexus",
          "공개자료실",
          "무료 dock 소프트웨어",
          "바탕화면 정리",
          "애플리케이션 관리 도구",
          "윈도우 독 프로그램",
          "프리웨어"
        ],
        "isoDate": "2024-10-18T03:55:44.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "유튜브의 새 기능, 협업형 재생목록과 세밀한 플레이백 설정",
        "link": "http://muzbox.tistory.com/483485",
        "pubDate": "Thu, 17 Oct 2024 09:13:55 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483485#entry483485comment",
        "content": "<p data-ke-size=\"size16\">2024년 유튜브는 사용자와 크리에이터를 위한 세밀한 플레이백 속도 조정, 협업형 재생목록, 슬립 타이머 등 다양한 신규 기능을 도입하여 더 나은 사용자 경험을 제공합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"youtube-1158693_1280.jpg\" data-origin-width=\"1280\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/ONLGV/btsJ8SQHtUr/dF21QKMiKKoTd17EPUfFxK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ONLGV/btsJ8SQHtUr/dF21QKMiKKoTd17EPUfFxK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ONLGV/btsJ8SQHtUr/dF21QKMiKKoTd17EPUfFxK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FONLGV%2FbtsJ8SQHtUr%2FdF21QKMiKKoTd17EPUfFxK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"700\" height=\"394\" data-filename=\"youtube-1158693_1280.jpg\" data-origin-width=\"1280\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;2024년, 유튜브는 사용자와 크리에이터 모두에게 더 나은 경험을 제공하기 위해 다양한 신규 기능과 업데이트를 발표했습니다. 유튜브는 매년 사용자의 피드백을 바탕으로 플랫폼을 개선하고, 그 결과 올해도 주목할 만한 업데이트가 여러 가지 추가되었습니다. 웹, 모바일, TV, 그리고 유튜브 뮤직에 이르기까지 새로운 기능들이 순차적으로 적용되며, 사용자들이 보다 직관적으로 콘텐츠를 탐색하고 활용할 수 있는 방법들이 강화되었습니다. 이번 블로그에서는 유튜브의 주요 기능 개선 사항들을 중점적으로 소개하며, 각 기능이 어떤 가치를 제공하는지 살펴보겠습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>주요 업데이트: 플레이백 속도 세부 조정과 비주얼 개선</b></h2>\n<p data-ke-size=\"size16\">&nbsp;유튜브는 사용자의 편의성을 높이기 위해 세밀한 플레이백 속도 조정 기능을 도입했습니다. 이제 0.05 단위로 재생 속도를 조절할 수 있으며, 이를 통해 자신에게 맞는 최적의 속도로 콘텐츠를 시청할 수 있습니다. 특히 모바일과 웹 환경에서 썸네일 크기가 커지고, 텍스트가 더욱 직관적으로 개선되어 보다 편리한 탐색이 가능합니다. 이러한 시각적 개선은 유튜브 앱 전반에 걸쳐 적용되며, 사용자들이 콘텐츠에 쉽게 접근하고 몰입할 수 있도록 돕습니다. 또한, iOS 사용자들을 위한 향상된 가로 탐색 기능도 올해 말에 출시될 예정입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>개선된 미니 플레이어와 협업형 재생목록 기능</b></h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Miniplayer_on_YouTube.gif\" data-origin-width=\"540\" data-origin-height=\"540\"><span data-url=\"https://blog.kakaocdn.net/dn/bgmCHN/btsJ7M5ghTd/lUdtuq01achFF47I5xdvT1/img.gif\" data-phocus=\"https://blog.kakaocdn.net/dn/bgmCHN/btsJ7M5ghTd/lUdtuq01achFF47I5xdvT1/img.gif\"><img src=\"https://blog.kakaocdn.net/dn/bgmCHN/btsJ7M5ghTd/lUdtuq01achFF47I5xdvT1/img.gif\" srcset=\"https://blog.kakaocdn.net/dn/bgmCHN/btsJ7M5ghTd/lUdtuq01achFF47I5xdvT1/img.gif\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"유튜브 미니플레이어\" data-filename=\"Miniplayer_on_YouTube.gif\" data-origin-width=\"540\" data-origin-height=\"540\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">유튜브의 미니 플레이어는 이제 더 큰 자유도를 제공합니다. 사용자는 미니 플레이어를 크기 조절하고 위치를 이동시킬 수 있어, 비디오를 시청하면서도 추가 영상을 탐색하거나 검색할 수 있습니다. 이러한 변화는 다중 작업을 즐기는 사용자들에게 큰 도움이 될 것입니다. 또한, 재생목록 협업 기능도 도입되어 친구나 가족과 함께 재생목록을 만들고, 나만의 맞춤형 썸네일을 AI로 생성할 수 있는 기능이 추가됩니다. 이 기능은 유튜브의 모바일, 웹, TV 그리고 뮤직 플랫폼에서 모두 사용할 수 있으며, QR 코드를 통해 TV에서도 간편하게 협업이 가능합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"800\" data-origin-height=\"496\"><span data-url=\"https://blog.kakaocdn.net/dn/bdlJFA/btsJ8r69VQW/jeP2A73Fhyl4m6vAbThTC1/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/bdlJFA/btsJ8r69VQW/jeP2A73Fhyl4m6vAbThTC1/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/bdlJFA/btsJ8r69VQW/jeP2A73Fhyl4m6vAbThTC1/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbdlJFA%2FbtsJ8r69VQW%2FjeP2A73Fhyl4m6vAbThTC1%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"QR 코드를 통해 TV에서도 간편하게 협업\" width=\"700\" height=\"434\" data-origin-width=\"800\" data-origin-height=\"496\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>잠들기 전 유튜브: 슬립 타이머 도입</b></h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"596\" data-origin-height=\"1291\"><span data-url=\"https://blog.kakaocdn.net/dn/0f6J4/btsJ74Y1xMC/BePhBJFe6G4wmkcLoyGqo0/img.gif\" data-phocus=\"https://blog.kakaocdn.net/dn/0f6J4/btsJ74Y1xMC/BePhBJFe6G4wmkcLoyGqo0/img.gif\"><img src=\"https://blog.kakaocdn.net/dn/0f6J4/btsJ74Y1xMC/BePhBJFe6G4wmkcLoyGqo0/img.gif\" srcset=\"https://blog.kakaocdn.net/dn/0f6J4/btsJ74Y1xMC/BePhBJFe6G4wmkcLoyGqo0/img.gif\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"유튜브 취침예약\" width=\"400\" height=\"866\" data-origin-width=\"596\" data-origin-height=\"1291\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">유튜브를 시청하다가 의도치 않게 잠드는 경우가 많으신가요? 이를 해결하기 위해 슬립 타이머 기능이 새롭게 추가되었습니다. 사용자는 특정 시간 후 자동으로 영상이 멈추도록 설정할 수 있어, 수면 패턴을 방해하지 않고도 유튜브를 즐길 수 있습니다. 이 기능은 먼저 프리미엄 사용자들에게 제공되었으나, 이제 모든 사용자들이 모바일 기기에서 사용할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>유튜브 뱃지 시스템 도입</b></h2>\n<p data-ke-size=\"size16\">&nbsp;유튜브는 크리에이터와의 상호작용을 중요하게 생각하며, 사용자들에게 더 많은 참여 기회를 제공하기 위해 뱃지 시스템을 도입했습니다. 이 뱃지는 특정 크리에이터의 첫 유료 회원이 되거나 퀴즈를 완수하는 등의 활동에 따라 획득할 수 있습니다. 또한, 자신이 좋아하는 아티스트의 상위 청취자가 되거나, 댓글에 크리에이터의 하트를 받는 등 다양한 상황에서 뱃지를 얻을 수 있습니다. 이 뱃지들은 'You' 탭에서 확인할 수 있으며, 앞으로도 더 많은 뱃지가 추가될 예정입니다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>결론</b></h2>\n<p data-ke-size=\"size16\">유튜브의 2024년 업데이트는 사용자 경험을 한층 더 풍부하게 만드는 다양한 기능을 제공합니다. 플레이어 조작의 세밀한 조정부터 협업형 재생목록, 슬립 타이머, 그리고 뱃지 시스템까지, 유튜브는 모든 사용자들이 자신만의 방식으로 플랫폼을 활용할 수 있도록 꾸준히 발전하고 있습니다.&nbsp;</p>",
        "contentSnippet": "2024년 유튜브는 사용자와 크리에이터를 위한 세밀한 플레이백 속도 조정, 협업형 재생목록, 슬립 타이머 등 다양한 신규 기능을 도입하여 더 나은 사용자 경험을 제공합니다.\n \n\n\n \n 2024년, 유튜브는 사용자와 크리에이터 모두에게 더 나은 경험을 제공하기 위해 다양한 신규 기능과 업데이트를 발표했습니다. 유튜브는 매년 사용자의 피드백을 바탕으로 플랫폼을 개선하고, 그 결과 올해도 주목할 만한 업데이트가 여러 가지 추가되었습니다. 웹, 모바일, TV, 그리고 유튜브 뮤직에 이르기까지 새로운 기능들이 순차적으로 적용되며, 사용자들이 보다 직관적으로 콘텐츠를 탐색하고 활용할 수 있는 방법들이 강화되었습니다. 이번 블로그에서는 유튜브의 주요 기능 개선 사항들을 중점적으로 소개하며, 각 기능이 어떤 가치를 제공하는지 살펴보겠습니다. \n \n \n주요 업데이트: 플레이백 속도 세부 조정과 비주얼 개선\n 유튜브는 사용자의 편의성을 높이기 위해 세밀한 플레이백 속도 조정 기능을 도입했습니다. 이제 0.05 단위로 재생 속도를 조절할 수 있으며, 이를 통해 자신에게 맞는 최적의 속도로 콘텐츠를 시청할 수 있습니다. 특히 모바일과 웹 환경에서 썸네일 크기가 커지고, 텍스트가 더욱 직관적으로 개선되어 보다 편리한 탐색이 가능합니다. 이러한 시각적 개선은 유튜브 앱 전반에 걸쳐 적용되며, 사용자들이 콘텐츠에 쉽게 접근하고 몰입할 수 있도록 돕습니다. 또한, iOS 사용자들을 위한 향상된 가로 탐색 기능도 올해 말에 출시될 예정입니다.\n \n \n개선된 미니 플레이어와 협업형 재생목록 기능\n\n\n유튜브의 미니 플레이어는 이제 더 큰 자유도를 제공합니다. 사용자는 미니 플레이어를 크기 조절하고 위치를 이동시킬 수 있어, 비디오를 시청하면서도 추가 영상을 탐색하거나 검색할 수 있습니다. 이러한 변화는 다중 작업을 즐기는 사용자들에게 큰 도움이 될 것입니다. 또한, 재생목록 협업 기능도 도입되어 친구나 가족과 함께 재생목록을 만들고, 나만의 맞춤형 썸네일을 AI로 생성할 수 있는 기능이 추가됩니다. 이 기능은 유튜브의 모바일, 웹, TV 그리고 뮤직 플랫폼에서 모두 사용할 수 있으며, QR 코드를 통해 TV에서도 간편하게 협업이 가능합니다.\n\n\n \n \n잠들기 전 유튜브: 슬립 타이머 도입\n\n\n유튜브를 시청하다가 의도치 않게 잠드는 경우가 많으신가요? 이를 해결하기 위해 슬립 타이머 기능이 새롭게 추가되었습니다. 사용자는 특정 시간 후 자동으로 영상이 멈추도록 설정할 수 있어, 수면 패턴을 방해하지 않고도 유튜브를 즐길 수 있습니다. 이 기능은 먼저 프리미엄 사용자들에게 제공되었으나, 이제 모든 사용자들이 모바일 기기에서 사용할 수 있습니다.\n \n \n유튜브 뱃지 시스템 도입\n 유튜브는 크리에이터와의 상호작용을 중요하게 생각하며, 사용자들에게 더 많은 참여 기회를 제공하기 위해 뱃지 시스템을 도입했습니다. 이 뱃지는 특정 크리에이터의 첫 유료 회원이 되거나 퀴즈를 완수하는 등의 활동에 따라 획득할 수 있습니다. 또한, 자신이 좋아하는 아티스트의 상위 청취자가 되거나, 댓글에 크리에이터의 하트를 받는 등 다양한 상황에서 뱃지를 얻을 수 있습니다. 이 뱃지들은 'You' 탭에서 확인할 수 있으며, 앞으로도 더 많은 뱃지가 추가될 예정입니다. \n \n \n결론\n유튜브의 2024년 업데이트는 사용자 경험을 한층 더 풍부하게 만드는 다양한 기능을 제공합니다. 플레이어 조작의 세밀한 조정부터 협업형 재생목록, 슬립 타이머, 그리고 뱃지 시스템까지, 유튜브는 모든 사용자들이 자신만의 방식으로 플랫폼을 활용할 수 있도록 꾸준히 발전하고 있습니다.",
        "guid": "http://muzbox.tistory.com/483485",
        "categories": [
          "유튜브,넷플릭스 사용법/유튜브(YOUTUBE) 사용법",
          "유튜브 2024",
          "유튜브 ai 썸네일",
          "유튜브 미니 플레이어",
          "유튜브 뱃지",
          "유튜브 사용자 경험",
          "유튜브 새 기능",
          "유튜브 슬립 타이머",
          "유튜브 업데이트",
          "유튜브 재생목록",
          "유튜브 협업"
        ],
        "isoDate": "2024-10-17T00:13:55.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "「RULIWEB」",
        "title": "[MULTI] 명작으로 배우는 공포 게임의 역사, 사일런트 힐 2 리메이크",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2260",
        "pubDate": "Sat, 19 Oct 2024 17:20:42 +0900",
        "author": "「RULIWEB」",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/24/10/19/192a3dd1b6a4cacdc.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2024-10-19T08:20:42.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "[NS] 그래 내가 젤다다, 젤다의 전설 지혜의 투영",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2259",
        "pubDate": "Fri, 18 Oct 2024 14:06:09 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/24/10/17/1929863cc9051ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2024-10-18T05:06:09.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": [
      {
        "creator": "summerandwinter",
        "title": "내가 쓰는 AHK",
        "link": "http://sacstory.tistory.com/entry/%EB%82%B4%EA%B0%80-%EC%93%B0%EB%8A%94-AHK",
        "pubDate": "Sat, 19 Oct 2024 21:07:58 +0900",
        "author": "summerandwinter",
        "comments": "http://sacstory.tistory.com/entry/%EB%82%B4%EA%B0%80-%EC%93%B0%EB%8A%94-AHK#entry389comment",
        "content": "Autohotkey의 V1버전을 쓴지가 몇년 되었다.\n&nbsp;\nV1버전에서 V2버전으로 변경된지도 꾀나 오래 되었는데,&nbsp;지금까지 귀차니즘 때문에 미뤄두고 있었다.\n&nbsp;\n기존 스크립트를 간간히 수정만 하면서 사용했었는데, 이제 슬슬 PC도 바꿔야되고 해서 주말에 시간나는김에 기존 코드를 V2로 변경했다.\n&nbsp;\n다른데서도 종종 사용하는 코드니 참고용도이자 공유로 여기에 올려둔다.\n&nbsp;\n코드는 쉬우니까, 기능은 코드 주석을 ..",
        "contentSnippet": "Autohotkey의 V1버전을 쓴지가 몇년 되었다.\n \nV1버전에서 V2버전으로 변경된지도 꾀나 오래 되었는데, 지금까지 귀차니즘 때문에 미뤄두고 있었다.\n \n기존 스크립트를 간간히 수정만 하면서 사용했었는데, 이제 슬슬 PC도 바꿔야되고 해서 주말에 시간나는김에 기존 코드를 V2로 변경했다.\n \n다른데서도 종종 사용하는 코드니 참고용도이자 공유로 여기에 올려둔다.\n \n코드는 쉬우니까, 기능은 코드 주석을 ..",
        "guid": "http://sacstory.tistory.com/389",
        "categories": [
          "소프트웨어 가이드/AutoHotKey"
        ],
        "isoDate": "2024-10-19T12:07:58.000Z"
      }
    ]
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "Git for Windows에서 여러 인증 정보를 다룰 때 Tips",
        "link": "https://jacking75.github.io/tech_20241022/",
        "pubDate": "Tue, 22 Oct 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/1EcQy6hg1JQBjfOJPWbF5JU5CkEq4-X3mzRJqdMXn-Qw/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech_20241022/",
        "isoDate": "2024-10-21T15:00:00.000Z"
      },
      {
        "title": "SkipList 설명",
        "link": "https://jacking75.github.io/tech_20241019/",
        "pubDate": "Sat, 19 Oct 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/16b1OzOk1UQ8sSWRDn-J4fsPFIDtC22bbusurbnTJADo/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech_20241019/",
        "isoDate": "2024-10-18T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "면접관이 내 트위터를 살펴본다면?",
        "link": "https://jeho.page/essay/2024/10/23/tweet-inspector.html",
        "pubDate": "2024-10-22T23:31:00.000Z",
        "author": "김재호",
        "content": "<p>면접관이 2,3년 전 트윗글까지 살펴보면서 질문했다는 사건으로 논란입니다.</p>\n\n<p><img src=\"/assets/img/tweet_inspector.png\" alt=\"논란의 트윗\" /></p>\n\n<p>트위터에서는 회사가 어떻게 개인 SNS를 사찰할 수 있냐며 말들이 많은데…<br />\n저는 그렇게 생각하지 않습니다.</p>\n\n<p>트위터를 살펴보면 사찰인가?<br />\n블로그를 살펴보면 사찰이 아닌가?<br />\n면접자가 이력서에 트윗 주소를 적지 않았는데 면접관이 어떻게든 찾아내서 살펴봤으면 사찰인가?<br />\n블로그와 깃헙 주소를 적지 않았는데 어떻게든 찾아내서 살펴봤으면 그건 사찰이 아닌가?</p>\n\n<p>만약 정치, 종교, 이념과 같은 내용으로 딴지를 건다면 적절하지 않다고 생각합니다만,<br />\n기술적인 것들. 이전 동료와의 관계. 특히 사람들과의 관계에서 어떤 성향인지. (공격적이진 않은가?)<br />\n이런 것들에 대해 물었다면 충분히 할 수 있는 일인 것 같습니다.<br />\n(당사자께서 기분이 나빴다는 걸로 봐서 예민한 부분이었던 것 같긴 합니다만… 무엇인지 알 수는 없습니다.)</p>\n\n<p>면접관이 제 트위터와 블로그 글을 2년 전 것, 혹은 10년 전 것까지 다 읽어보고 질문하는 상황을 상상해 봅니다.</p>\n\n<p><a href=\"/essay/2023/01/05/why-async.html\">일과 상관 없는 질문을 한다면</a> 저도 짜증이 나서 자리를 박차고 나올 것 같습니다만…<br />\n기술적인 질문이나 관계, 태도에 대한 질문이라면 기분 나쁘지 않을 것 같습니다.</p>\n\n<p>오히려 이렇게 생각할 것 같습니다.<br />\n와 이놈들 열심히 조사했네?<br />\n진짜 신중하게 사람 뽑으려 하는구나.<br />\n나에게만 이런 걸까, 모든 사람을 이렇게 뽑는 걸까?<br />\n(나도 한 번 뒷조사 해봐야지)</p>\n\n<p>모든 사람을 이렇게 뽑는거라면 얘네들하고 같은 팀 하고 싶다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2023/01/05/why-async.html\">왜 비동기 프로그래밍을 하나요?</a></li>\n  <li><a href=\"/essay/2023/01/06/i-was-also-rude-interviewer.html\">나 또한 무례한 면접관</a></li>\n</ul>",
        "contentSnippet": "면접관이 2,3년 전 트윗글까지 살펴보면서 질문했다는 사건으로 논란입니다.\n\n트위터에서는 회사가 어떻게 개인 SNS를 사찰할 수 있냐며 말들이 많은데…\n트위터를 살펴보면 사찰인가?\n만약 정치, 종교, 이념과 같은 내용으로 딴지를 건다면 적절하지 않다고 생각합니다만,\n면접관이 제 트위터와 블로그 글을 2년 전 것, 혹은 10년 전 것까지 다 읽어보고 질문하는 상황을 상상해 봅니다.\n일과 상관 없는 질문을 한다면 저도 짜증이 나서 자리를 박차고 나올 것 같습니다만…\n오히려 이렇게 생각할 것 같습니다.\n모든 사람을 이렇게 뽑는거라면 얘네들하고 같은 팀 하고 싶다.\n\n함께 읽으면 좋은 글:\n왜 비동기 프로그래밍을 하나요?\n나 또한 무례한 면접관",
        "summary": "면접관이 2,3년 전 트윗글까지 살펴보면서 질문했다는 사건으로 논란입니다.",
        "id": "https://jeho.page/essay/2024/10/23/tweet-inspector",
        "isoDate": "2024-10-22T23:31:00.000Z"
      },
      {
        "title": "정부의 창업 지원 (비대면 바우처)",
        "link": "https://jeho.page/essay/2024/10/21/government-sponsored.html",
        "pubDate": "2024-10-21T03:31:00.000Z",
        "author": "김재호",
        "content": "<p>지난 글에 이런 의견이 있었습니다.</p>\n\n<p><img src=\"/assets/img/gorvenment_sponsored.png\" alt=\"\" /></p>\n\n<p>굉장히 좋은 포인트입니다.</p>\n\n<p>생애 최초로 주택을 구입할 때는 혜택(세금, 청약 등)이 있듯이,<br />\n생애 최초 창업에도 지원이 있습니다.<br />\n보통 첫 창업 부터 3~5년 정도의 기간까지 혜택이 주어지는 것 같습니다.<br />\n소득세 감면, 대출 혹은 사무실 지원 등.</p>\n\n<p>댓글로 지적해 주신 것처럼 법인을 만들어 보는 게 좋은 경험이라는 말만 듣고 무턱대고 만들어 버리면 이런 혜택을 받지 못하게 됩니다.</p>\n\n<p>저는 잘 몰라서 이런 혜택을 받질 못했습니다.<br />\n커피한잔이 처음 사업자를 내고 3년 정도 거의 돈을 못 벌어서…<br />\n낼 세금이 별로 없으니 잘 알아보지 않은 이유도 있습니다.<br />\n나중에야 이런 게 있다는 걸 알고 찾아봤는데, 이미 지원 기간이 다 지나버렸더군요.(웃음)</p>\n\n<p>아, 딱 한 번 정부의 돈을 받은 적이 있습니다.<br />\n2021년에 <a href=\"https://www.k-voucher.kr/\">비대면 바우처</a> 사업 지원.</p>\n\n<p>도대체 비대면 바우처가 뭐야?</p>\n\n<p>나라에서 코로나 시절 중소기업을 지원해 주는 방식 중 하나였는데,<br />\n공급 기업(제품을 제공하는 곳)과 수요 기업(제품을 구매하는 곳)을 모아서 연결해 주는 플랫폼입니다.<br />\n수요 기업으로 선정되면 400만 원의 지원을 받아 공급 기업의 제품들을 구매할 수 있습니다.<br />\n다만 10%는 자신의 돈을 사용해야 합니다. 100만 원짜리 물건을 사면 10만 원 만 내면 나머지는 정부가 내주는 방식.</p>\n\n<p>우와, 꽤나 좋군.\n그럼 살 수 있는 것들이 어떤 것들이 있었냐?</p>\n\n<p>잘 기억이 안 나지만…\n화상 채팅 솔루션. 보안 솔루션.<br />\n재택 근무를 위한 메타버스 솔루션.<br />\n교육 서비스 등등.<br />\n비대면으로 뭔가 할 수 있는 서비스들.</p>\n\n<p>이런 서비스를 공급 기업이 제공하고, 수요 기업은 이걸 정부 지원금과 함께 구매하는 것입니다.</p>\n\n<p>이런 세상이 있었다니.<br />\n놀랍고 고마운 마음이 들었습니다.<br />\n이렇게라도 중소기업들에 대해 지원 사업을 해주고 있었구나. 전혀 모르고 살았었네.</p>\n\n<p>한편으로 걱정되는 마음도 있었습니다.<br />\n구매할 수 있는 제품 목록을 훑어보면…<br />\n그냥 무료로 쓰라고 해도 안 쓸 것 같은, 설치하면 오히려 내 컴퓨터가 걱정될 것 같은 솔루션들.<br />\n세금이 도대체 어떻게 쓰이고 있는 거야?</p>\n\n<p>커피한잔만해도 모르는 사람들로 부터 자꾸만 전화를 받는데.<br />\n비대면 바우처 공급 기업에 선정되게 도와주겠다고. (커미션을 달라는 소립니다)<br />\n얼마나 큰 돈이 엮어 있으면 여기서 파생 비즈니스들이 다 생기냐.<br />\n어떤 부정들이 있었을지 아래 배너를 보면 상상해 볼 수 있습니다.</p>\n\n<p><img src=\"/assets/img/voucher.png\" alt=\"\" /></p>\n\n<p>저는 그럼 지원금을 어디에 썼을까요?<br />\n2021년만 해도 쓸만한 곳들이 몇 개 있었습니다.<br />\n인프런에 100만 원. 패스트캠퍼스에 100만 원, 윙크에 100만 원. 자란다에 100만 원.<br />\n아주 감사하게 잘 사용했습니다. (공급 기업 입장에서 얼마나 꿀이었을지 상상해 보십시오.)<br />\n위 4개 서비스는 2022년 부터는 공급 기업에서 사라졌고, 저도 2022년 부터는 더 이상 비대면 바우처를 받으려고 지원 조차 안 했네요. 살 것이 없으니까.</p>\n\n<p>이런 세상이 있다는 걸 알게 된 것도 법인을 만들어보고 나서부터 입니다.<br />\n첫 창업 혜택의 지원을 받지 않더라도… 일찍 경험해 본다면 좋을 거라는 제 생각은 여전합니다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2024/10/18/business-registration.html\">개인 사업자와 법인 사업자</a></li>\n</ul>",
        "contentSnippet": "지난 글에 이런 의견이 있었습니다.\n\n굉장히 좋은 포인트입니다.\n생애 최초로 주택을 구입할 때는 혜택(세금, 청약 등)이 있듯이,\n댓글로 지적해 주신 것처럼 법인을 만들어 보는 게 좋은 경험이라는 말만 듣고 무턱대고 만들어 버리면 이런 혜택을 받지 못하게 됩니다.\n저는 잘 몰라서 이런 혜택을 받질 못했습니다.\n아, 딱 한 번 정부의 돈을 받은 적이 있습니다.\n비대면 바우처 사업 지원.\n도대체 비대면 바우처가 뭐야?\n나라에서 코로나 시절 중소기업을 지원해 주는 방식 중 하나였는데,\n우와, 꽤나 좋군.\n그럼 살 수 있는 것들이 어떤 것들이 있었냐?\n잘 기억이 안 나지만…\n화상 채팅 솔루션. 보안 솔루션.\n이런 서비스를 공급 기업이 제공하고, 수요 기업은 이걸 정부 지원금과 함께 구매하는 것입니다.\n이런 세상이 있었다니.\n한편으로 걱정되는 마음도 있었습니다.\n커피한잔만해도 모르는 사람들로 부터 자꾸만 전화를 받는데.\n\n저는 그럼 지원금을 어디에 썼을까요?\n이런 세상이 있다는 걸 알게 된 것도 법인을 만들어보고 나서부터 입니다.\n\n함께 읽으면 좋은 글:\n개인 사업자와 법인 사업자",
        "summary": "지난 글에 이런 의견이 있었습니다.",
        "id": "https://jeho.page/essay/2024/10/21/government-sponsored",
        "isoDate": "2024-10-21T03:31:00.000Z"
      },
      {
        "title": "개인 사업자와 법인 사업자",
        "link": "https://jeho.page/essay/2024/10/18/business-registration.html",
        "pubDate": "2024-10-18T03:48:00.000Z",
        "author": "김재호",
        "content": "<p>개인 앱을 처음 만드는 사람들이 물어보는 질문입니다.<br />\n사업자 등록 꼭 해야 하나요?</p>\n\n<p>당연히 해야 합니다.<br />\n돈을 얼마를 벌든.</p>\n\n<p>이런 질문은 하는 데는</p>\n\n<ul>\n  <li>세금을 내기 싫은 마음</li>\n  <li>회사에 들키면 어쩌지 하는 걱정</li>\n  <li>사업자 등록을 어떻게 하는지 몰라서</li>\n</ul>\n\n<p>이런 마음들이 섞여 있을 것입니다.</p>\n\n<p>개인 사업자 등록을 하는 것은 어렵지 않습니다. 집에서 홈택스로 하루 만에 할 수 있습니다.  <br />\n인앱 결제 서비스가 있는 앱을 만들었다면 사업자 등록에 추가로 통신판매업 허가를 받으면 됩니다.</p>\n\n<p>개인 사업자 등록을 하면 연말 정산 시 회사에 들키게 되는가?<br />\n이런 저런 말이 많습니다만, 정확한 사실은 잘 모르겠습니다.<br />\n다만… 회사에서 알게 되는 게 걱정이라면 그 일을 안 하거나, 회사를 그만두고 하는 게 좋다 생각합니다.</p>\n\n<p>최근에는 구글과 애플에서 사업자 인증이 되지 않으면 개발자 프로필을 삭제하려 하고 있습니다.<br />\n잘 하고 있다 생각합니다.</p>\n\n<h3 id=\"법인으로-시작하는-게-좋아요-개인으로-시작하는-게-좋아요\">법인으로 시작하는 게 좋아요, 개인으로 시작하는 게 좋아요?</h3>\n<p>이것도 단골 질문입니다.</p>\n\n<p>혼자 앱을 만든다면 개인 사업자로 시작하는 것을 추천합니다.<br />\n법인으로 변경하면 귀찮고 불편한 일들이 많아집니다.<br />\n나중에 이익이 많이 생기면 그때 가서 변경을 고민해 보면 됩니다.</p>\n\n<p>여럿이서 만든다면 처음부터 법인으로 시작하는 것도 좋습니다.<br />\n약간의 불편함이 있긴 하지만…<br />\n법인이라는 보이지 않은 끈이 서로를 묶어주어 어려운 일이 생겼을 때 쉽게 흩어지지 않게 도와줄 수 있습니다.</p>\n\n<p>법인을 만들어보는 건 좋은 경험입니다.<br />\n돈을 벌든 못 벌든 간에.</p>\n\n<p>커피한잔으로 법인을 만들어 보면서 많은 걸 배웠습니다.<br />\n회사 다니면서 전혀 이해하지 못했던 것들.<br />\n국민연금, 건강보험, 부가세, 소득세.<br />\n제가 세금을 얼마를 내는지도 모르고 살았고 세금을 왜 내는 건지 생각해 본 적도 없었던 것 같습니다.</p>\n\n<p>유발 하라리가 말하는 법인, 국가라는 건 허구다 라는 말도 이해할 수 있게 됐습니다.<br />\n뭔가 몰랐던 세상의 비밀을 알게 된 기분이랄까?<br />\n그 비밀이라는 게.. 사실 별것도 아니지만요.<br />\n몰랐을 땐 뭔가 대단한 게 있을 거라 생각했습니다.</p>\n\n<p>고등학생 때 법인을 만들어서 조그만 장사라도 해봤다면 어땠을까 가끔 생각해 봅니다.<br />\n굉장히 좋은 경험이었을 것 같습니다. 학교 공부도 재밌게 할 수 있지 않았을까?<br />\n나중에 아이와 함께 해보고 싶은 일입니다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2023/09/29/give-back-more-than-take.html\">사회에서 받은 것보다 많이 돌려주기</a></li>\n</ul>",
        "contentSnippet": "개인 앱을 처음 만드는 사람들이 물어보는 질문입니다.\n당연히 해야 합니다.\n이런 질문은 하는 데는\n세금을 내기 싫은 마음\n회사에 들키면 어쩌지 하는 걱정\n사업자 등록을 어떻게 하는지 몰라서\n이런 마음들이 섞여 있을 것입니다.\n개인 사업자 등록을 하는 것은 어렵지 않습니다. 집에서 홈택스로 하루 만에 할 수 있습니다.  \n개인 사업자 등록을 하면 연말 정산 시 회사에 들키게 되는가?\n최근에는 구글과 애플에서 사업자 인증이 되지 않으면 개발자 프로필을 삭제하려 하고 있습니다.\n법인으로 시작하는 게 좋아요, 개인으로 시작하는 게 좋아요?\n이것도 단골 질문입니다.\n혼자 앱을 만든다면 개인 사업자로 시작하는 것을 추천합니다.\n여럿이서 만든다면 처음부터 법인으로 시작하는 것도 좋습니다.\n법인을 만들어보는 건 좋은 경험입니다.\n커피한잔으로 법인을 만들어 보면서 많은 걸 배웠습니다.\n유발 하라리가 말하는 법인, 국가라는 건 허구다 라는 말도 이해할 수 있게 됐습니다.\n고등학생 때 법인을 만들어서 조그만 장사라도 해봤다면 어땠을까 가끔 생각해 봅니다.\n\n함께 읽으면 좋은 글:\n사회에서 받은 것보다 많이 돌려주기",
        "summary": "개인 앱을 처음 만드는 사람들이 물어보는 질문입니다. 사업자 등록 꼭 해야 하나요?",
        "id": "https://jeho.page/essay/2024/10/18/business-registration",
        "isoDate": "2024-10-18T03:48:00.000Z"
      },
      {
        "title": "사용자의 목소리",
        "link": "https://jeho.page/essay/2024/10/17/user-voice.html",
        "pubDate": "2024-10-17T08:19:00.000Z",
        "author": "김재호",
        "content": "<p>앱 시작 화면에 개발자 핸드폰 전화번호를 적어놔봐라. 그래도 전화 안 온다.<br />\n예전에 누군가에게 들었던 이야기.</p>\n\n<p>인상적이었습니다.<br />\n사용자 전화 같은건 피하고 싶어하는 사람들이 대부분인데,<br />\n얼마나 사용자의 이야기를 듣고 싶으면 앱 시작화면에 전화번호를 넣을 생각을 해봤을까 싶어서.<br />\n그런데 전화 안 온다는 말이 사실일까?</p>\n\n<p>커피한잔도 앱 시작 화면 정도는 아니지만 <a href=\"https://withcoffee.app\">홈페이지 하단에</a> 고객센터 전화번호를 노출해두고 있습니다.<br />\n말이 고객 센터지, 제가 가진 <a href=\"/essay/2022/02/12/ios-android.html\">두 개의 핸드폰</a> 번호 중 하나입니다.</p>\n\n<p>가끔 전화가 오면 긴장 반 설렘 반으로 전화를 받습니다.<br />\n하지만 열에 아홉은 스팸 전화 입니다.<br />\n난 사용자들 목소리가 듣고 싶은 건데.<br />\n전화가 거의 안 온다는 말은 사실이었습니다.</p>\n\n<p>비슷한 내용으로…<br />\n커피한잔에서 사용자들에게 보내는 메일은 발신 전용 메일이 없습니다.<br />\n발신 전용으로 보낸다는 건 사용자들에게 답장을 보내지 말라는 뜻.<br />\n사용자들 목소리 듣기가 얼마나 어려운데…</p>\n\n<p>이야기를 더 많이 들어보기 위해 정말 스플래시 화면에 전화번호를 노출해 봐야겠습니다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2022/02/12/ios-android.html\">아이폰과 안드로이드</a></li>\n  <li><a href=\"/essay/2024/08/08/defense-fun.html\">수비수 개발자</a></li>\n</ul>",
        "contentSnippet": "앱 시작 화면에 개발자 핸드폰 전화번호를 적어놔봐라. 그래도 전화 안 온다.\n인상적이었습니다.\n커피한잔도 앱 시작 화면 정도는 아니지만 홈페이지 하단에 고객센터 전화번호를 노출해두고 있습니다.\n두 개의 핸드폰 번호 중 하나입니다.\n가끔 전화가 오면 긴장 반 설렘 반으로 전화를 받습니다.\n비슷한 내용으로…\n이야기를 더 많이 들어보기 위해 정말 스플래시 화면에 전화번호를 노출해 봐야겠습니다.\n\n함께 읽으면 좋은 글:\n아이폰과 안드로이드\n수비수 개발자",
        "summary": "앱 시작 화면에 개발자 핸드폰 전화번호를 적어놔봐라. 그래도 전화 안 온다. 예전에 누군가에게 들었던 이야기.",
        "id": "https://jeho.page/essay/2024/10/17/user-voice",
        "isoDate": "2024-10-17T08:19:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "이번 시대의 새로운 단어들과 게임이야기 / PC / LGBT / DEI / 콘코드 / 언노운 9",
        "link": "http://serverdown.tistory.com/890",
        "pubDate": "Wed, 23 Oct 2024 06:37:48 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/890#entry890comment",
        "content": "<p data-ke-size=\"size16\">PC / &nbsp;Political&nbsp;Correctness</p>\n<p data-ke-size=\"size16\">영상이 있군요 영상부터 하나보시죠<br />링크: <a href=\"https://www.youtube.com/watch?v=slxo5mWWuSQ\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=slxo5mWWuSQ</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=slxo5mWWuSQ\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/eIEP1/hyXlIU5ORK/MWN33bi3SWS0m45acqEtG1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/cHY6Ro/hyXlOHLIE2/z86OXpim1sK9VCitqYnKLk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[특별기획] &lsquo;PC주의&rsquo;를 아십니까? [GOODTV NEWS 20240902]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/slxo5mWWuSQ\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">직영하면 \"정치적 올바름\" 이라는 뜻인데</p>\n<p data-ke-size=\"size16\">차별하지 말라는 의미로 쓰려고 했는데<br />몇번 꼬다보니 공격의 수단이 된거 같습니다.</p>\n<p data-ke-size=\"size16\">A: 1 와 2 는 다릅니다.<br />B: 둘다 숫자자나 차별하지마라.</p>\n<p data-ke-size=\"size16\">이런식의 싸움이 날 수 있습니다.<br />게임에서 미남 미녀만 나오면 차별이라면서 리메이크 할 때 주인공이 점점 못생겨저버리는 문제가 그런류 인거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">LGBT / <span style=\"text-align: start;\">Lesbian <span style=\"text-align: start;\">Gay <span style=\"text-align: start;\">Bisexual <span style=\"text-align: start;\">Transgender</span> </span> </span></span></h2>\n<p data-ke-size=\"size16\">LGBT는&nbsp;성소수자&nbsp;중&nbsp;레즈비언(Lesbian),&nbsp;게이(Gay),&nbsp;양성애자(Bisexual),&nbsp;트랜스젠더(Transgender)를&nbsp;합하여&nbsp;부르는&nbsp;단어다.&nbsp;퀴어(Queer)에&nbsp;비해&nbsp;논쟁이&nbsp;덜한&nbsp;용어로&nbsp;알려져&nbsp;있다.</p>\n<p data-ke-size=\"size16\">현재는 뒤에 Q 까지 붙여서 LGBTQ 로 부르나 봅니다.</p>\n<p data-ke-size=\"size16\">성소수자의 종류를 나열한 단어였군요</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1200\" data-origin-height=\"360\"><span data-url=\"https://blog.kakaocdn.net/dn/ETRKT/btsKf7fMsej/TH2rRZmVAP26OK5ysaRkVk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ETRKT/btsKf7fMsej/TH2rRZmVAP26OK5ysaRkVk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ETRKT/btsKf7fMsej/TH2rRZmVAP26OK5ysaRkVk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FETRKT%2FbtsKf7fMsej%2FTH2rRZmVAP26OK5ysaRkVk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"1200\" data-origin-height=\"360\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">뉴욕에서는 LGBT 행사가 많이 있었나봅니다.&nbsp;</p>\n<p data-ke-size=\"size16\">스타벅스에 무지개색 모양으로 꾸며놯다 라는 뉴스들이 있군요</p>\n<p data-ke-size=\"size16\">상업적으로 크개 망한 회사가 있군요</p>\n<p data-ke-size=\"size16\">스타벅스 와&nbsp;버드와이저</p>\n<p data-ke-size=\"size16\">스타벅스는 노조 때문도 있는데 좀 근로 시스템이 문제인거 같구요<br />직원이 만들어야하는 종류가 너무 많다거나<br />부동산 침체에 회사가 영향을 많이 받는 점도 있습니다.</p>\n<p data-ke-size=\"size16\">버드와이저는 버드와이저 라이트를 LGBT 와 연계된 마케팅을 시작하니<br />원래 마시던 사람들이 반발 하게 되었고 여기서 한발 더 나가 버드와이저라이트에 대해 사과를 하니<br />이젠 LGBT 쪽에서 난리를 피워 두마리 토끼를 모두 놓치는 사례로 유명해졌습니다.</p>\n<p data-ke-size=\"size16\">이전엔 숨어지내던 사람들이 차별 받는거 아니냐며 드래내기 시작하면서 시대적 혼란이 시작된것 같습니다.</p>\n<p data-ke-size=\"size16\">드러낸 사람들이 다시 숨기겠냐는 생각이 들면서 수~수십년 흘러서 해결될 문제 같군요.</p>\n<p data-ke-size=\"size16\">아니면 흑인백인 갈등처럼 생전엔 해결나는걸 볼수 없을지도 모르겠군요</p>\n<p data-ke-size=\"size16\">게임에선 별다른 사례가 없군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">DEI / <span style=\"text-align: start;\">Diversity, Equity and Inclusion</span></h2>\n<p data-ke-size=\"size16\">시대적 변화에 따라 자연스럽게 DEI(Diversity, Equity and Inclusion; 다양성, 공정성 및 포용성)이 강조되고 있습니다.</p>\n<p data-ke-size=\"size16\">간단히 설명하자면 판타지 게임을 만들면 길쭉이&nbsp; <span style=\"text-align: start;\">난쟁이<span> </span></span>홀쭉이 뚱땡이 이렇게 다양하게 넣으라는 것입니다.</p>\n<p data-ke-size=\"size16\">그런데 이게 몇가지를 섞게되면 게임어 큰일이 나기 시작하는데&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">길쭉이 </span><span style=\"text-align: start;\">난쟁이<span style=\"background-color: #000000; color: #000000;\"><span>&nbsp;<br /></span></span></span><span style=\"text-align: start;\">홀쭉이 뚱땡이</span> <br />흑인 백인 파랭이 노랭이<span style=\"text-align: start;\"></span></p>\n<p data-ke-size=\"size16\">이런식으로 여러 요소가 섞이게 되면 ... 정도가 아니라 PC 요소 때문에 섞여야된다. 까지 논의가 진행되면<br /><br />길쭉이 + 홀쭉이 + 흑인&nbsp;</p>\n<p data-ke-size=\"size16\">이런식의 모든 조하이 다 되어야하는 거 같습니다. 다 안되면 \"차별이디\" 로 이단 신문을 받게 됩니다.<br />그리고 이단 신문은 받아봐야 수익성엔 도움이 안되구요 일만 들너아게 됩니다.</p>\n<p data-ke-size=\"size16\">다영성은 다이나믹한 컨텐츠인 게임분야락 잘 엮여서 큰일을 만들어내었습니다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">2024년 현재 콘코드 와 언노운 9 란 게임이 한달 차이로 나왕 연속으로 망하고있습니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">콘코드리뷰: <a href=\"https://www.youtube.com/watch?v=MdkWbDjqkLk\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=MdkWbDjqkLk</a></span></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=MdkWbDjqkLk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/kfMSH/hyXlNWoqfD/pRkVE8gXCu3Cwt8fgVzDp1/img.jpg?width=1280&amp;height=720&amp;face=598_80_678_168,https://scrap.kakaocdn.net/dn/gm6pq/hyXlJfoPAN/KhUPMVFWxWEdW91UKzMzTk/img.jpg?width=1280&amp;height=720&amp;face=598_80_678_168\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"소니 최고의 기대작이 콩고기로 불리는 이유! 콘코드 솔직한 리뷰\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/MdkWbDjqkLk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">언노운 0 리뷰: <a href=\"https://www.youtube.com/watch?v=CJ4Gb8dmccQ\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=CJ4Gb8dmccQ</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=CJ4Gb8dmccQ\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bvDWfN/hyXlN9VGdf/xzV5quTceAHsHu1GEJKnH0/img.jpg?width=1280&amp;height=720&amp;face=484_198_726_462,https://scrap.kakaocdn.net/dn/9A2qv/hyXlPs9SVz/7dwSXcYms3kKJ0dLSW4LVK/img.jpg?width=1280&amp;height=720&amp;face=484_198_726_462\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"콘코드마저 능가한 폭망, 이딴 식이면 게임판은 다 죽는다(언노운 9: 어웨이크닝) 외 | 게임 헤드\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/CJ4Gb8dmccQ\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">콘코드 와 언노운 9 은 이 이슈에 휘말렸습니다.<br />공통적으로 게임이 출시하자 마자 폭망한 상태입니다.<br />두 게임 모두 8년 정도의 긴 제작기간이 들어갔지만 모두 손실 처리될 형편입니다.</p>\n<p data-ke-size=\"size16\">폭망하고나니 과거의 발언들을 찾게되고<br />그러다보니 다양성에 대한 발언도 발견할 수 있게됩니다.</p>\n<p data-ke-size=\"size16\">2020년 이후로 다양성에 대한 발언을 하는 유행이 있어서 그런지 찾으면 다 한마디씩 해버려서 ...</p>\n<p data-ke-size=\"size16\">당연히 \"사람을 차별합시다\" 라던가 \"우리는 일부만 구현할 것\" 이라는 리더는 없고<br />\"이것 저것 다 구현된다\" 로 말하다보니 이렇게 된거 같습니다.</p>\n<p data-ke-size=\"size16\">콘코드는 다양성 넣다 망하긴했는데<br />언노운 9 은 그냥 덜 만든걸 내놓은 느낌이긴합니다. 8년 만들었으니 더 시간을 넣어도 나아질 기미가 없다고 판단했을 수도 있겠군요</p>\n<p data-ke-size=\"size16\">게임이나 영화같은건 한정된 자원들로 만들어야해서 이런식으로 다양한 요소를 넣으려고 하면 제대로 다듬을 단계까지 갈 시간이 부족해집니다. 이 요소들이 잘만들 시간을 더 줄여버리는 역활을 하는거 같습니다.</p>\n<p data-ke-size=\"size16\">영화도 다양성 이전에 헐리우드 영화에 중국이 묻게되는 현상이 2000 ~ 2020 정도에 많이 있었습니다.<br />중국 흥행 때문에 중국 배우가 나와야한다거나 중국어가 나와야한다거나<br />중국이 아니더라도 제품 광고를 넣어야한다거나 ...</p>\n<p data-ke-size=\"size16\">보통 헐리우드는 이런 게 한번 유행하면 퀄리티가 마구 낮아지는대신 스폰서를 많이 받아서 영화가 쏙다지는 시기가 중간중간 있었습니다.</p>\n<p data-ke-size=\"size16\">요즘은 중국이랑 대립하는 상황이라 잘만든 영화가 늘어나는거 같습니다만&nbsp;</p>\n<p data-ke-size=\"size16\">조커1은 잘되었는데 조커2가 죽쓰고 있군요.<br />혹시 조커2는 다양성 문제 !?<br /><br /></p>\n<p data-ke-size=\"size16\">한국 게임에선 다양성 문제는 없어보이고<br />이부분을 반대로 돌파한 시프트업 이라는 회사도 있습니다.</p>\n<p data-ke-size=\"size16\">대신 게임업계가 불황인 상황입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저도 게임을 만들고 있어서 문화의 변화에 민감합니다.&nbsp;<br />(잘되는거 빨리 따라 만들어야해서 그렇습니다.)</p>\n<p data-ke-size=\"size16\">이런 유행을 따라가기 쉽지 않아보입니다.</p>",
        "contentSnippet": "PC /  Political Correctness\n영상이 있군요 영상부터 하나보시죠\n링크: https://www.youtube.com/watch?v=slxo5mWWuSQ\n\n\n\n \n직영하면 \"정치적 올바름\" 이라는 뜻인데\n차별하지 말라는 의미로 쓰려고 했는데\n몇번 꼬다보니 공격의 수단이 된거 같습니다.\nA: 1 와 2 는 다릅니다.\nB: 둘다 숫자자나 차별하지마라.\n이런식의 싸움이 날 수 있습니다.\n게임에서 미남 미녀만 나오면 차별이라면서 리메이크 할 때 주인공이 점점 못생겨저버리는 문제가 그런류 인거 같습니다.\n \nLGBT / Lesbian Gay Bisexual Transgender  \nLGBT는 성소수자 중 레즈비언(Lesbian), 게이(Gay), 양성애자(Bisexual), 트랜스젠더(Transgender)를 합하여 부르는 단어다. 퀴어(Queer)에 비해 논쟁이 덜한 용어로 알려져 있다.\n현재는 뒤에 Q 까지 붙여서 LGBTQ 로 부르나 봅니다.\n성소수자의 종류를 나열한 단어였군요\n\n\n뉴욕에서는 LGBT 행사가 많이 있었나봅니다. \n스타벅스에 무지개색 모양으로 꾸며놯다 라는 뉴스들이 있군요\n상업적으로 크개 망한 회사가 있군요\n스타벅스 와 버드와이저\n스타벅스는 노조 때문도 있는데 좀 근로 시스템이 문제인거 같구요\n직원이 만들어야하는 종류가 너무 많다거나\n부동산 침체에 회사가 영향을 많이 받는 점도 있습니다.\n버드와이저는 버드와이저 라이트를 LGBT 와 연계된 마케팅을 시작하니\n원래 마시던 사람들이 반발 하게 되었고 여기서 한발 더 나가 버드와이저라이트에 대해 사과를 하니\n이젠 LGBT 쪽에서 난리를 피워 두마리 토끼를 모두 놓치는 사례로 유명해졌습니다.\n이전엔 숨어지내던 사람들이 차별 받는거 아니냐며 드래내기 시작하면서 시대적 혼란이 시작된것 같습니다.\n드러낸 사람들이 다시 숨기겠냐는 생각이 들면서 수~수십년 흘러서 해결될 문제 같군요.\n아니면 흑인백인 갈등처럼 생전엔 해결나는걸 볼수 없을지도 모르겠군요\n게임에선 별다른 사례가 없군요\n \n \nDEI / Diversity, Equity and Inclusion\n시대적 변화에 따라 자연스럽게 DEI(Diversity, Equity and Inclusion; 다양성, 공정성 및 포용성)이 강조되고 있습니다.\n간단히 설명하자면 판타지 게임을 만들면 길쭉이  난쟁이 홀쭉이 뚱땡이 이렇게 다양하게 넣으라는 것입니다.\n그런데 이게 몇가지를 섞게되면 게임어 큰일이 나기 시작하는데 \n길쭉이 난쟁이 \n홀쭉이 뚱땡이 \n흑인 백인 파랭이 노랭이\n이런식으로 여러 요소가 섞이게 되면 ... 정도가 아니라 PC 요소 때문에 섞여야된다. 까지 논의가 진행되면\n길쭉이 + 홀쭉이 + 흑인 \n이런식의 모든 조하이 다 되어야하는 거 같습니다. 다 안되면 \"차별이디\" 로 이단 신문을 받게 됩니다.\n그리고 이단 신문은 받아봐야 수익성엔 도움이 안되구요 일만 들너아게 됩니다.\n다영성은 다이나믹한 컨텐츠인 게임분야락 잘 엮여서 큰일을 만들어내었습니다.\n2024년 현재 콘코드 와 언노운 9 란 게임이 한달 차이로 나왕 연속으로 망하고있습니다.\n \n콘코드리뷰: https://www.youtube.com/watch?v=MdkWbDjqkLk\n\n\n\n \n언노운 0 리뷰: https://www.youtube.com/watch?v=CJ4Gb8dmccQ\n\n\n\n \n콘코드 와 언노운 9 은 이 이슈에 휘말렸습니다.\n공통적으로 게임이 출시하자 마자 폭망한 상태입니다.\n두 게임 모두 8년 정도의 긴 제작기간이 들어갔지만 모두 손실 처리될 형편입니다.\n폭망하고나니 과거의 발언들을 찾게되고\n그러다보니 다양성에 대한 발언도 발견할 수 있게됩니다.\n2020년 이후로 다양성에 대한 발언을 하는 유행이 있어서 그런지 찾으면 다 한마디씩 해버려서 ...\n당연히 \"사람을 차별합시다\" 라던가 \"우리는 일부만 구현할 것\" 이라는 리더는 없고\n\"이것 저것 다 구현된다\" 로 말하다보니 이렇게 된거 같습니다.\n콘코드는 다양성 넣다 망하긴했는데\n언노운 9 은 그냥 덜 만든걸 내놓은 느낌이긴합니다. 8년 만들었으니 더 시간을 넣어도 나아질 기미가 없다고 판단했을 수도 있겠군요\n게임이나 영화같은건 한정된 자원들로 만들어야해서 이런식으로 다양한 요소를 넣으려고 하면 제대로 다듬을 단계까지 갈 시간이 부족해집니다. 이 요소들이 잘만들 시간을 더 줄여버리는 역활을 하는거 같습니다.\n영화도 다양성 이전에 헐리우드 영화에 중국이 묻게되는 현상이 2000 ~ 2020 정도에 많이 있었습니다.\n중국 흥행 때문에 중국 배우가 나와야한다거나 중국어가 나와야한다거나\n중국이 아니더라도 제품 광고를 넣어야한다거나 ...\n보통 헐리우드는 이런 게 한번 유행하면 퀄리티가 마구 낮아지는대신 스폰서를 많이 받아서 영화가 쏙다지는 시기가 중간중간 있었습니다.\n요즘은 중국이랑 대립하는 상황이라 잘만든 영화가 늘어나는거 같습니다만 \n조커1은 잘되었는데 조커2가 죽쓰고 있군요.\n혹시 조커2는 다양성 문제 !?\n\n한국 게임에선 다양성 문제는 없어보이고\n이부분을 반대로 돌파한 시프트업 이라는 회사도 있습니다.\n대신 게임업계가 불황인 상황입니다.\n \n저도 게임을 만들고 있어서 문화의 변화에 민감합니다. \n(잘되는거 빨리 따라 만들어야해서 그렇습니다.)\n이런 유행을 따라가기 쉽지 않아보입니다.",
        "guid": "http://serverdown.tistory.com/890",
        "categories": [
          "게임"
        ],
        "isoDate": "2024-10-22T21:37:48.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "대학원에서 논문이 나오는 이야기 / 사람이 성공하는 이야기",
        "link": "http://serverdown.tistory.com/889",
        "pubDate": "Wed, 23 Oct 2024 05:27:17 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/889#entry889comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=JJHK-WYmeTU\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=JJHK-WYmeTU</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=JJHK-WYmeTU\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/SGxWP/hyXlWFNZNd/NdXH1kyWIRBkVGsCL8vtQ0/img.jpg?width=480&amp;height=360&amp;face=65_112_134_187,https://scrap.kakaocdn.net/dn/Z4tQr/hyXlJsVyQV/JQkzZHkQpwor9Qlu9rxKh0/img.jpg?width=480&amp;height=360&amp;face=65_112_134_187\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"1차원과 2차원, 경계 기준을 어떻게 발견했을까?! 김갑진 교수의 스핀트로닉스 연구와 비하인드 \" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/JJHK-WYmeTU\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">처음은 하드디스크가 전기를 너무 먹는다로 출발합니다.</p>\n<p data-ke-size=\"size16\">이유는 모터가 디스크를 돌려야 해서 입니다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다른 방식이 발견되었습니다. <br />모터가 필요없고 데이터를 저장하는 방식의 아이디어가 생겨납니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">당연히 실험을 마지막 샘플까지 다 태워먹고 할게 없어서<br />다른걸 테스트합니다.</p>\n<p data-ke-size=\"size16\">원래 해야하는 것과 다른 실험이었고 여기서 작은 성과를 얻습니다.<br />원래 의도한 실험과는 다른것 입니다.</p>\n<p data-ke-size=\"size16\">나중에 태워먹은 샘플을 새로 받아서 또 실험하는데 이번엔 성공합니다.<br />전엔 안되고 이번엔 되고 ...</p>\n<p data-ke-size=\"size16\">논문은 그것이 설명되어야하기 때문에 통과되지 못하고 4년이 흐릅니다.</p>\n<p data-ke-size=\"size16\">그리고 밝혀지는 이유와 영광을 얻게 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">투자에도 많은 시행 착오가 있습니다. 이것은 발표할만한 논문 같은건 아니지만 인건이 발전하는 순서를 그대로 따릅니다.</p>\n<p data-ke-size=\"size16\">투자에 처음부터 성공하면 그방법으로 계속 가면되고</p>\n<p data-ke-size=\"size16\">투자에 계속 실패한다면 원금을 까먹게됩니다. 그러다보면 바닥까지 내려가는 순간이 오게됩니다.</p>\n<p data-ke-size=\"size16\">바닥이 빨리 오면 덜 잃을 것이고 오래걸린다면 상당한 금액을 잃어야할 것입니다.</p>\n<p data-ke-size=\"size16\">지나보면 그때가 바닥이었고 이젠 좋아져있겠지만 그 당시엔 그것이 바닥인지 알 수 없습니다.</p>\n<p data-ke-size=\"size16\">바닥에 빠지는 일을 계속 하고 있을 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번이 마지막 바닥이면 좋겠다고 생각하지만 전혀 나아지지않는 나의 투자실력을 다시 느끼게되는 안해였습니다.</p>\n<p data-ke-size=\"size16\">언젠간 바닥을 잡고 반복하던 실수를 하지 않도록 오늘도 반성해봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=JJHK-WYmeTU\n\n\n\n처음은 하드디스크가 전기를 너무 먹는다로 출발합니다.\n이유는 모터가 디스크를 돌려야 해서 입니다. \n \n다른 방식이 발견되었습니다. \n모터가 필요없고 데이터를 저장하는 방식의 아이디어가 생겨납니다.\n \n당연히 실험을 마지막 샘플까지 다 태워먹고 할게 없어서\n다른걸 테스트합니다.\n원래 해야하는 것과 다른 실험이었고 여기서 작은 성과를 얻습니다.\n원래 의도한 실험과는 다른것 입니다.\n나중에 태워먹은 샘플을 새로 받아서 또 실험하는데 이번엔 성공합니다.\n전엔 안되고 이번엔 되고 ...\n논문은 그것이 설명되어야하기 때문에 통과되지 못하고 4년이 흐릅니다.\n그리고 밝혀지는 이유와 영광을 얻게 됩니다.\n \n투자에도 많은 시행 착오가 있습니다. 이것은 발표할만한 논문 같은건 아니지만 인건이 발전하는 순서를 그대로 따릅니다.\n투자에 처음부터 성공하면 그방법으로 계속 가면되고\n투자에 계속 실패한다면 원금을 까먹게됩니다. 그러다보면 바닥까지 내려가는 순간이 오게됩니다.\n바닥이 빨리 오면 덜 잃을 것이고 오래걸린다면 상당한 금액을 잃어야할 것입니다.\n지나보면 그때가 바닥이었고 이젠 좋아져있겠지만 그 당시엔 그것이 바닥인지 알 수 없습니다.\n바닥에 빠지는 일을 계속 하고 있을 것입니다.\n \n이번이 마지막 바닥이면 좋겠다고 생각하지만 전혀 나아지지않는 나의 투자실력을 다시 느끼게되는 안해였습니다.\n언젠간 바닥을 잡고 반복하던 실수를 하지 않도록 오늘도 반성해봅니다.",
        "guid": "http://serverdown.tistory.com/889",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-10-22T20:27:17.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "전자담배 시장에 절망이 와버렸다.",
        "link": "http://serverdown.tistory.com/888",
        "pubDate": "Wed, 23 Oct 2024 02:44:09 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/888#entry888comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=i8de3T5jMpg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=i8de3T5jMpg</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=i8de3T5jMpg\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bd3xJi/hyXlSwCnRY/Sp0XCidyDDMhNRkSEjNaw1/img.jpg?width=1280&amp;height=720&amp;face=704_154_1190_418,https://scrap.kakaocdn.net/dn/cb22S6/hyXlOAYo7D/L9ZopeTxNjclksnNnUbdP0/img.jpg?width=1280&amp;height=720&amp;face=704_154_1190_418\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"&quot;100% 한국에 들어옵니다&quot;... 잇몸으로 담배 피운다는 미국 Z세대 근황 / 스브스뉴스\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/i8de3T5jMpg\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">새로나온 필립모리스의 담배 입니다.</p>\n<p data-ke-size=\"size16\">잇몸과 입술사이에 두면 흡수 되나봅니다.</p>\n<p data-ke-size=\"size16\">여러가지 맛도 나는거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">장점</h2>\n<p data-ke-size=\"size16\">청소년들이 좋아함</p>\n<p data-ke-size=\"size16\">담배보다 싸다</p>\n<p data-ke-size=\"size16\">불도 필요 없습니다. &lt;-- 전담에겐 치명적입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">중간에 위험성 경고하는 사람나오는데 그냥 균형 맞추려고 나온 수준이구요<br />청소년들이 좋다면 하는거지 암 걱정하면서 안할리가 없죠<br />에휴... 그놈의 중립성</p>\n<p data-ke-size=\"size16\">암문제는 해결 했을 가능성이 높습니다. 이분은 옛날 논문 가지고 이야기 하는거라 무시하셔도 됩니다.</p>\n<p data-ke-size=\"size16\">중립성 문제는 커피믹스의 카제인나트룸 논란이나 MSG 의 위험성 논란 등에서 주제를 정하면 논문은 어떤식으로도 만들어낼 수 있습니다.</p>\n<p data-ke-size=\"size16\">예전엔 가습기 살충제 문제도 안전하다는 논문을 만들어 냈었으니 말 다했죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">청소년도 써도 되고 불을 붙이는 과정이 없어서 편리합니다.</p>\n<p data-ke-size=\"size16\">전자담배는 충전도 해야하고 사용하고나면 플라스틱 카트리지도 나옵니다.<br />베터리를 사용하니 불이나 폭발의 안전 문제로 제조사에 프리미엄이 있을 것이라고 생각했는데<br />그런 시작이 없어져버리게 생겼습니다.</p>\n<p data-ke-size=\"size16\">이엠텍을 열심히 투자해왔는데 이젠 의지가 꺽여버렸습니다.<br />아저씨들은 전담을 싫어하고<br />청소년은 파우치형을 쓰니<br />전담 시장의 종말로 보입니다.</p>\n<p data-ke-size=\"size16\">이엠텍을 전담 외의 회사로 보고 투자한 사람은 모를까<br />저는 전담으로 보고 투자해와서 나와야할 시점이 된거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"827\" data-origin-height=\"523\"><span data-url=\"https://blog.kakaocdn.net/dn/Te44l/btsKeDgcWwu/nBXaEg3wKIvCMg13pVrXxk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Te44l/btsKeDgcWwu/nBXaEg3wKIvCMg13pVrXxk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Te44l/btsKeDgcWwu/nBXaEg3wKIvCMg13pVrXxk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FTe44l%2FbtsKeDgcWwu%2FnBXaEg3wKIvCMg13pVrXxk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"827\" data-origin-height=\"523\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">화살표는 제가 접한 정보를 처음 안 시점이였고</p>\n<p data-ke-size=\"size16\">돌그라미 부분은 집중 매수한 부분입니다. 현재 평단가는 3만원 정도이고</p>\n<p data-ke-size=\"size16\">내려올때 팔지를 못해서 어마어마한 실패가 되었습니다.</p>\n<p data-ke-size=\"size16\">어마허마한 수익율이 생겼을때도 있었지만</p>\n<p data-ke-size=\"size16\">그놈의 욕심 때문에 더 간다고 팔지를 못했네요</p>\n<p data-ke-size=\"size16\">내일은 눈물의 손절을 해야할거 같습니다.</p>\n<p data-ke-size=\"size16\">진짜 매매 못하네요 ㅠㅠ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"829\" data-origin-height=\"641\"><span data-url=\"https://blog.kakaocdn.net/dn/ULq4O/btsKfLYlJiK/H6hhKncjgp00kUF9XPsuMk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ULq4O/btsKfLYlJiK/H6hhKncjgp00kUF9XPsuMk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ULq4O/btsKfLYlJiK/H6hhKncjgp00kUF9XPsuMk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FULq4O%2FbtsKfLYlJiK%2FH6hhKncjgp00kUF9XPsuMk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"829\" data-origin-height=\"641\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">세계 1위 담배회사 필립모리스 차트입니다.</span></p>\n<p data-ke-size=\"size16\">거의 2년을 내리다 한방에 돌려버렸군요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2년이라는 긴 하락구간을 견딜 수 없었을꺼라 생각은 하지만 오르는거 보니 좋아보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=i8de3T5jMpg\n\n\n\n새로나온 필립모리스의 담배 입니다.\n잇몸과 입술사이에 두면 흡수 되나봅니다.\n여러가지 맛도 나는거 같습니다.\n \n장점\n청소년들이 좋아함\n담배보다 싸다\n불도 필요 없습니다. <-- 전담에겐 치명적입니다.\n \n중간에 위험성 경고하는 사람나오는데 그냥 균형 맞추려고 나온 수준이구요\n청소년들이 좋다면 하는거지 암 걱정하면서 안할리가 없죠\n에휴... 그놈의 중립성\n암문제는 해결 했을 가능성이 높습니다. 이분은 옛날 논문 가지고 이야기 하는거라 무시하셔도 됩니다.\n중립성 문제는 커피믹스의 카제인나트룸 논란이나 MSG 의 위험성 논란 등에서 주제를 정하면 논문은 어떤식으로도 만들어낼 수 있습니다.\n예전엔 가습기 살충제 문제도 안전하다는 논문을 만들어 냈었으니 말 다했죠\n \n청소년도 써도 되고 불을 붙이는 과정이 없어서 편리합니다.\n전자담배는 충전도 해야하고 사용하고나면 플라스틱 카트리지도 나옵니다.\n베터리를 사용하니 불이나 폭발의 안전 문제로 제조사에 프리미엄이 있을 것이라고 생각했는데\n그런 시작이 없어져버리게 생겼습니다.\n이엠텍을 열심히 투자해왔는데 이젠 의지가 꺽여버렸습니다.\n아저씨들은 전담을 싫어하고\n청소년은 파우치형을 쓰니\n전담 시장의 종말로 보입니다.\n이엠텍을 전담 외의 회사로 보고 투자한 사람은 모를까\n저는 전담으로 보고 투자해와서 나와야할 시점이 된거 같습니다.\n \n\n\n화살표는 제가 접한 정보를 처음 안 시점이였고\n돌그라미 부분은 집중 매수한 부분입니다. 현재 평단가는 3만원 정도이고\n내려올때 팔지를 못해서 어마어마한 실패가 되었습니다.\n어마허마한 수익율이 생겼을때도 있었지만\n그놈의 욕심 때문에 더 간다고 팔지를 못했네요\n내일은 눈물의 손절을 해야할거 같습니다.\n진짜 매매 못하네요 ㅠㅠ\n \n \n\n\n세계 1위 담배회사 필립모리스 차트입니다.\n거의 2년을 내리다 한방에 돌려버렸군요.\n \n2년이라는 긴 하락구간을 견딜 수 없었을꺼라 생각은 하지만 오르는거 보니 좋아보입니다.",
        "guid": "http://serverdown.tistory.com/888",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-10-22T17:44:09.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "목소리가 대시하는 AI 가 필요한 이유",
        "link": "http://serverdown.tistory.com/887",
        "pubDate": "Wed, 23 Oct 2024 02:20:05 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/887#entry887comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=qc06HRMNl6E\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=qc06HRMNl6E</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=qc06HRMNl6E\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/JONII/hyXlKL7QRQ/3HR3kHKhByg4diPiI0PkJK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/151Nn/hyXlLEfZGh/qDxabeQ21opwN7BSaKkVuK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"끝 모르는 금 랠리 | 줄어드는 Fed 인하 기대 | 미 정부, 중국 AI 섹터 투자금지 조항 최종 검토중 | \" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/qc06HRMNl6E\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이분들은 미국 현지에서 활동하시면서 미장 방송을 하시는데</p>\n<p data-ke-size=\"size16\">사람들이 매번 교체되지만 목소리 갈라지는 문제가 계속 발생하고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">내용이 좋기 때문에 시청자들은 길게 해달라고 하는데</p>\n<p data-ke-size=\"size16\">기업 규모가 좀 애매하다보니 여러명이 돌려가며 할 수도 없고 ..</p>\n<p data-ke-size=\"size16\">기자 입장에서도 미국까지 왔는데 유튜브 방송만 하고 있을 수도 없고 유명인 취재도 하고싶고 <br />애매합니다.</p>\n<p data-ke-size=\"size16\">그래서 대사를 열심히 쳐주면 말해주는 ai 가 필요할꺼 같군요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그러다보면 나중엔 대사를 사람이 안치려나요 ㅎ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=qc06HRMNl6E\n\n\n\n \n이분들은 미국 현지에서 활동하시면서 미장 방송을 하시는데\n사람들이 매번 교체되지만 목소리 갈라지는 문제가 계속 발생하고 있습니다.\n \n내용이 좋기 때문에 시청자들은 길게 해달라고 하는데\n기업 규모가 좀 애매하다보니 여러명이 돌려가며 할 수도 없고 ..\n기자 입장에서도 미국까지 왔는데 유튜브 방송만 하고 있을 수도 없고 유명인 취재도 하고싶고 \n애매합니다.\n그래서 대사를 열심히 쳐주면 말해주는 ai 가 필요할꺼 같군요.\n \n그러다보면 나중엔 대사를 사람이 안치려나요 ㅎ",
        "guid": "http://serverdown.tistory.com/887",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-10-22T17:20:05.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "META 페이스북이 계속 인기 있는 이유 / 반드시 가야만하는 이유 / 음모론",
        "link": "http://serverdown.tistory.com/886",
        "pubDate": "Tue, 22 Oct 2024 18:39:06 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/886#entry886comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=Q5sgQI0gocs\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=Q5sgQI0gocs</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=Q5sgQI0gocs\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/chFOjS/hyXlHIvVVQ/RiKcUPMpxUQtC15yfsxMg1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/nMjy6/hyXlNPtqXk/99ut4G5JFxWjlNQQz2Rl6k/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"프론트맨 - 대중들을 설득 시키기 위해 만들어진 영웅\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/Q5sgQI0gocs\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미국 정부에선 미국의 적을 찾기위해 소셜 서비스를 만들었지만</p>\n<p data-ke-size=\"size16\">당연이 이러면 사람들이 안쓸꺼라 페이스북을 앞세웠다고 합니다.</p>\n<p data-ke-size=\"size16\">그리고 페이스북을 사람들이 열심히 사용해줘야 미국의 적을 바로 찾을 수 있기 때문입니다.</p>\n<p data-ke-size=\"size16\">페이스북이 곧 미국이며 잘나갈 수 밖에 없는 이유입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"839\" data-origin-height=\"655\"><span data-url=\"https://blog.kakaocdn.net/dn/sHwqK/btsKeCOVZma/Lres6Uj3UcjmFwav2MAMS1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/sHwqK/btsKeCOVZma/Lres6Uj3UcjmFwav2MAMS1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/sHwqK/btsKeCOVZma/Lres6Uj3UcjmFwav2MAMS1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FsHwqK%2FbtsKeCOVZma%2FLres6Uj3UcjmFwav2MAMS1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"839\" data-origin-height=\"655\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">2023년은 미국 금리인상시키였습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">또한 메타버스 버블이 꺼진 해이기도 하구요</p>\n<p data-ke-size=\"size16\">반등을 크게 해버렸네요 빠졌을때 살껄 ㅠㅠ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">영화</h2>\n<h3 data-ke-size=\"size23\">본시지르</h3>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=FqtdHC_9eqI&amp;t=1440s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=FqtdHC_9eqI&amp;t=1440s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=FqtdHC_9eqI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bTSTZW/hyXlWltRxa/pFM3O6TDY2GiovwxlKlRF0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/FnSnQ/hyXlPmjKdC/1U4PD1h4OGKU2uGv6VK3kk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"한 시대를 풍미했던 첩보 영화의 교과서 《본 시리즈》 한방에 보기[영화리뷰/결말포함]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/FqtdHC_9eqI\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">제인슨 본이 나오는 본시리즈 입니다.</p>\n<p data-ke-size=\"size16\">2016년 마지막 영화 제이슨본에서 목표물이 소셜네트워크 회사 CEO 입니다.</p>\n<p data-ke-size=\"size16\">41분부터 \"제이슨 본\" 영화입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">킹스맨</h3>\n<p data-ke-size=\"size16\">영성: <a href=\"https://www.youtube.com/watch?v=wfmIlhqZVnk&amp;t=2386s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=wfmIlhqZVnk&amp;t=2386s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=wfmIlhqZVnk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cfpjIR/hyXlPGDL6J/62zTOujM0lObNfjoZJEKGK/img.jpg?width=1280&amp;height=720&amp;face=624_144_716_246,https://scrap.kakaocdn.net/dn/dI8SNN/hyXlVmzUTD/msjiUQHSJkvSjYzbXJX60k/img.jpg?width=1280&amp;height=720&amp;face=624_144_716_246\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"영국의 비밀조직 킹스맨의 탄생부터 현재까지!! 킹스맨 시리즈를 한번에 몰아보기!!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/wfmIlhqZVnk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">킹스맨 1편도 있습니다.\\</p>\n<p data-ke-size=\"size16\">소셜 네트워크는 아니고 전세계 휴대전화 를 독점하려는 음모를 다루는 내용입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=Q5sgQI0gocs\n\n\n\n \n미국 정부에선 미국의 적을 찾기위해 소셜 서비스를 만들었지만\n당연이 이러면 사람들이 안쓸꺼라 페이스북을 앞세웠다고 합니다.\n그리고 페이스북을 사람들이 열심히 사용해줘야 미국의 적을 바로 찾을 수 있기 때문입니다.\n페이스북이 곧 미국이며 잘나갈 수 밖에 없는 이유입니다.\n \n\n\n2023년은 미국 금리인상시키였습니다. \n또한 메타버스 버블이 꺼진 해이기도 하구요\n반등을 크게 해버렸네요 빠졌을때 살껄 ㅠㅠ\n \n영화\n본시지르\n영상: https://www.youtube.com/watch?v=FqtdHC_9eqI&t=1440s\n\n\n\n제인슨 본이 나오는 본시리즈 입니다.\n2016년 마지막 영화 제이슨본에서 목표물이 소셜네트워크 회사 CEO 입니다.\n41분부터 \"제이슨 본\" 영화입니다.\n \n킹스맨\n영성: https://www.youtube.com/watch?v=wfmIlhqZVnk&t=2386s\n\n\n\n킹스맨 1편도 있습니다.\\\n소셜 네트워크는 아니고 전세계 휴대전화 를 독점하려는 음모를 다루는 내용입니다.",
        "guid": "http://serverdown.tistory.com/886",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-10-22T09:39:06.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "쿠팡에서 시켜 먹을꺼 모음",
        "link": "http://serverdown.tistory.com/885",
        "pubDate": "Tue, 22 Oct 2024 17:18:24 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/885#entry885comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=DJgBw1RoHIY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=DJgBw1RoHIY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=DJgBw1RoHIY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cntHh4/hyXlMXkhhY/hCKP3GJGmGYzs1eQ93f9gk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bIjZka/hyXlOAQcGz/HDc4T7QZDSIKfeWStWkFg0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"쿠팡 가성비 맛도리 재입고알림 품절템 24가지｜월회비 뽑는 식품 24가지 몰아보기｜맛과 품질 \" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/DJgBw1RoHIY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">영상에 있는걸로는</h2>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">양배추</h3>\n<p data-ke-size=\"size16\">아무데나 넣으면 양이 불어납니다. 싸고 좋습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">쿵딘 베트남 쌀국수</h3>\n<p data-ke-size=\"size16\">매우 쌉니다. 1개 천원 정도</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">고메 소바바 치킨</h3>\n<p data-ke-size=\"size16\">은 안타게 먹을려면 140도에서 에어프라이기 돌리라는군요 <br />max 로 돌려서 잘타더군요 ㅠㅠ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">마라샹궈소</h3>\n<p data-ke-size=\"size16\">아무데나 넣으면 됩니다.<br />뽁음우동 좋네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"text-align: start;\">연탄불고기</span></h3>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">싼거는 싸네요 800g 9,000 원도 있군요</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">싸고 좋네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">영상에 없는걸로는</h2>\n<h3 data-ke-size=\"size23\">샘표 얼큰칼국</h3>\n<p data-ke-size=\"size16\">싸고 여기다 이것저것 넣으면 양이 불어납니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">빕스 디트로이트 냉동 피자 ... 는 비싸구요<br />고메 <span style=\"text-align: start;\">디트로이트 냉동 피자</span></h3>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">피자중엔 좋았습니다. 네모난 피자를 디트로이트 피자라고 합니다.</span></p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=DJgBw1RoHIY\n\n\n\n \n영상에 있는걸로는\n \n양배추\n아무데나 넣으면 양이 불어납니다. 싸고 좋습니다.\n \n쿵딘 베트남 쌀국수\n매우 쌉니다. 1개 천원 정도\n \n고메 소바바 치킨\n은 안타게 먹을려면 140도에서 에어프라이기 돌리라는군요 \nmax 로 돌려서 잘타더군요 ㅠㅠ\n \n마라샹궈소\n아무데나 넣으면 됩니다.\n뽁음우동 좋네요\n \n연탄불고기\n싼거는 싸네요 800g 9,000 원도 있군요\n \n싸고 좋네요\n \n영상에 없는걸로는\n샘표 얼큰칼국\n싸고 여기다 이것저것 넣으면 양이 불어납니다.\n \n빕스 디트로이트 냉동 피자 ... 는 비싸구요\n고메 디트로이트 냉동 피자\n피자중엔 좋았습니다. 네모난 피자를 디트로이트 피자라고 합니다.",
        "guid": "http://serverdown.tistory.com/885",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-10-22T08:18:24.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "raspberry pi rust / 라즈베리파이 에서 rust 돌려보자",
        "link": "http://serverdown.tistory.com/884",
        "pubDate": "Tue, 22 Oct 2024 02:30:50 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/884#entry884comment",
        "content": "<p data-ke-size=\"size16\">링크: <a href=\"https://harmonicss.co.uk/rust/rust-on-a-raspberry-pi-part-1/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://harmonicss.co.uk/rust/rust-on-a-raspberry-pi-part-1/</a></p>\n<p data-ke-size=\"size16\">이 문서 참고 했습니다.</p>\n<p data-ke-size=\"size16\">root 로 들어가야합니다.</p>\n<p data-ke-size=\"size16\">sudo su -&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">설치 명령어 입니다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">curl --proto '=https' --tlsv1.3 <a href=\"https://sh.rustup.rs\">https://sh.rustup.rs</a> -sSf | sh</span></p>\n<p data-ke-size=\"size16\">1번 기본 설치 입니다. 1 하고 엔터 치세요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">링커 설치합니다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\"><span>&nbsp;</span>apt install build-essential</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">snap 을 써야합니다.</p>\n<p data-ke-size=\"size16\">apt install snapd -y</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\"><span style=\"text-align: start;\">snapd<span>&nbsp;</span></span> 설치후엔 한번 재부팅 해야한다는군요</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">reboot</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">rustup 설치합니다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">snap install rustup --classic</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">rustup install stable</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">rustup default stable</span></p>\n<p data-ke-size=\"size16\">rustup&nbsp;target&nbsp;add&nbsp;armv7a-none-eabi</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여기까지 설치했더니 cargo 까진 실행되었다.</p>\n<p data-ke-size=\"size16\">이제 러스트 코드를 빌드해보자</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">테스트 프로젝트 생성</p>\n<p data-ke-size=\"size16\">cargo&nbsp;new&nbsp;myrust</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">폴더가 생성된다 안에 들어가자</p>\n<p data-ke-size=\"size16\">cd myrust</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">src 폴더와 Cargo 파일이 포일 것이다.</p>\n<p data-ke-size=\"size16\">cargo build</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">빌드가 되면 target/debug/myrust 라는 실행파일이 생긴다.<br />실행해보자</p>\n<p data-ke-size=\"size16\">./target/debug/myrust</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"606\" data-origin-height=\"104\"><span data-url=\"https://blog.kakaocdn.net/dn/bOI5IU/btsKeQybX5K/fZGnRXbnX8BHfgK14VbHD1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bOI5IU/btsKeQybX5K/fZGnRXbnX8BHfgK14VbHD1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bOI5IU/btsKeQybX5K/fZGnRXbnX8BHfgK14VbHD1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbOI5IU%2FbtsKeQybX5K%2FfZGnRXbnX8BHfgK14VbHD1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"606\" data-origin-height=\"104\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">해치웠다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "링크: https://harmonicss.co.uk/rust/rust-on-a-raspberry-pi-part-1/\n이 문서 참고 했습니다.\nroot 로 들어가야합니다.\nsudo su - \n \n설치 명령어 입니다.\ncurl --proto '=https' --tlsv1.3 https://sh.rustup.rs -sSf | sh\n1번 기본 설치 입니다. 1 하고 엔터 치세요\n \n링커 설치합니다.\n apt install build-essential\n \nsnap 을 써야합니다.\napt install snapd -y\n \nsnapd  설치후엔 한번 재부팅 해야한다는군요\nreboot\n \nrustup 설치합니다.\nsnap install rustup --classic\nrustup install stable\nrustup default stable\nrustup target add armv7a-none-eabi\n \n여기까지 설치했더니 cargo 까진 실행되었다.\n이제 러스트 코드를 빌드해보자\n \n테스트 프로젝트 생성\ncargo new myrust\n \n폴더가 생성된다 안에 들어가자\ncd myrust\n \nsrc 폴더와 Cargo 파일이 포일 것이다.\ncargo build\n \n빌드가 되면 target/debug/myrust 라는 실행파일이 생긴다.\n실행해보자\n./target/debug/myrust\n \n\n\n해치웠다.",
        "guid": "http://serverdown.tistory.com/884",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2024-10-21T17:30:50.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "waglayla / 와그라일라 웨그레일라 코인 채굴 중이신분",
        "link": "http://serverdown.tistory.com/883",
        "pubDate": "Tue, 22 Oct 2024 01:22:35 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/883#entry883comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"300\" data-origin-height=\"168\"><span data-url=\"https://blog.kakaocdn.net/dn/ppgWD/btsKdTQa6LE/Ao6ndfQYcpDN4dtERr5cY0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ppgWD/btsKdTQa6LE/Ao6ndfQYcpDN4dtERr5cY0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ppgWD/btsKdTQa6LE/Ao6ndfQYcpDN4dtERr5cY0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FppgWD%2FbtsKdTQa6LE%2FAo6ndfQYcpDN4dtERr5cY0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"300\" data-origin-height=\"168\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2024-10-20 상황<br /><span style=\"color: initial; letter-spacing: 0px;\"></span></h2>\n<p data-ke-size=\"size16\"><span style=\"color: initial; letter-spacing: 0px;\">github 에서 받아서 빌드해봤는데 실패했습니다.<br /></span>라즈베리파이가 지원을 못해서 일 수 도 있거나 아직은 불안정한가봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">본문</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=LRAlArQ7Ceg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=LRAlArQ7Ceg</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=LRAlArQ7Ceg\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/MEcGR/hyXlH9m7DG/FOoyaF6t7JpFiTdVSj5UC1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bRFoJR/hyXlMW7wZm/CKCsskYA9Izl9NvuaoUa20/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"이코인이 성공 할려나?  #waglayla #신규코인 #채굴하는방법\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/LRAlArQ7Ceg\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">이분은 신규코인을 찾으셔서 채굴부터 시작하시는분이십니다.</p>\n<p data-ke-size=\"size16\">와그라일라 코인이 어딘가 상장될 가능성이 있다고 하시네요</p>\n<p data-ke-size=\"size16\">찾아봤더니 rust 로 개발된거 같습니다.</p>\n<p data-ke-size=\"size16\">환경이 되는 한 저도 라즈베리파이로 좀 돌려봐야겠습니다.</p>\n<p data-ke-size=\"size16\">코인에 대한 정보는 딱히 없고 웹지갑도 없어서 명령어로 지갑을 생성해야하는거 같습니다.</p>\n<p data-ke-size=\"size16\">완전 초창기 상황이라는 거 말곤 알 수 있는게 없군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">소스코드 위치구요</p>\n<p data-ke-size=\"size16\"><a href=\"https://github.com/waglayla/waglaylad-rusty\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://github.com/waglayla/waglaylad-rusty</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 영상에서 영어오 읽어주는군요 <a href=\"https://www.youtube.com/watch?v=8F2WE3zzGSI\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=8F2WE3zzGSI</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=8F2WE3zzGSI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/t0caE/hyXlJzkenE/EsZlMTcFRxW6BAw7Ls6qjk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bHjpR4/hyXlLYdOsk/842vjtO3TP1BqTLcmbgPl1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"WagLayla a New GPU Mineable Cryptocurrency\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/8F2WE3zzGSI\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">웨그 레일라&nbsp;</p>\n<p data-ke-size=\"size16\">그림보니 무슨 왕관쓴 개코인이군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"753\" data-origin-height=\"205\"><span data-url=\"https://blog.kakaocdn.net/dn/0QveD/btsKdZCPBb5/iPkd3K9tpIcYoJ2BwiJWl0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/0QveD/btsKdZCPBb5/iPkd3K9tpIcYoJ2BwiJWl0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/0QveD/btsKdZCPBb5/iPkd3K9tpIcYoJ2BwiJWl0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F0QveD%2FbtsKdZCPBb5%2FiPkd3K9tpIcYoJ2BwiJWl0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"753\" data-origin-height=\"205\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">구글에 뭔가 설명하는 글이 있었던거 같은데 지금 들어가보니 글이 없어졌습니다.</p>\n<p data-ke-size=\"size16\">신뢰할 수준은 아닌 코인일 수도 있습니다.</p>\n<p data-ke-size=\"size16\">티커는 WALA 왈라 군요.</p>\n<p data-ke-size=\"size16\">저는 rust 배운김에 어떻게 돌아가는건지 한번 써봐야겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "2024-10-20 상황\n\ngithub 에서 받아서 빌드해봤는데 실패했습니다.\n라즈베리파이가 지원을 못해서 일 수 도 있거나 아직은 불안정한가봅니다.\n \n본문\n영상: https://www.youtube.com/watch?v=LRAlArQ7Ceg\n\n\n\n이분은 신규코인을 찾으셔서 채굴부터 시작하시는분이십니다.\n와그라일라 코인이 어딘가 상장될 가능성이 있다고 하시네요\n찾아봤더니 rust 로 개발된거 같습니다.\n환경이 되는 한 저도 라즈베리파이로 좀 돌려봐야겠습니다.\n코인에 대한 정보는 딱히 없고 웹지갑도 없어서 명령어로 지갑을 생성해야하는거 같습니다.\n완전 초창기 상황이라는 거 말곤 알 수 있는게 없군요\n \n \n소스코드 위치구요\nhttps://github.com/waglayla/waglaylad-rusty\n \n이 영상에서 영어오 읽어주는군요 https://www.youtube.com/watch?v=8F2WE3zzGSI\n\n\n\n웨그 레일라 \n그림보니 무슨 왕관쓴 개코인이군요\n \n\n\n구글에 뭔가 설명하는 글이 있었던거 같은데 지금 들어가보니 글이 없어졌습니다.\n신뢰할 수준은 아닌 코인일 수도 있습니다.\n티커는 WALA 왈라 군요.\n저는 rust 배운김에 어떻게 돌아가는건지 한번 써봐야겠습니다.",
        "guid": "http://serverdown.tistory.com/883",
        "categories": [
          "코인"
        ],
        "isoDate": "2024-10-21T16:22:35.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "미국에 상장된 MSCI ETF 를 한번 보자 / QUAL  CSUS  EWY",
        "link": "http://serverdown.tistory.com/882",
        "pubDate": "Tue, 22 Oct 2024 00:32:17 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/882#entry882comment",
        "content": "<p data-ke-size=\"size16\">QUAL 이것은 전세계 MSCI 종목에 투자하는 ETF 입니다.</p>\n<p data-ke-size=\"size16\">전세계적으로는 그렇지 않은가 봅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"828\" data-origin-height=\"276\"><span data-url=\"https://blog.kakaocdn.net/dn/bd7IHv/btsKeLKxW4h/F2zkSq2JJXxISuUjNHjO11/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bd7IHv/btsKeLKxW4h/F2zkSq2JJXxISuUjNHjO11/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bd7IHv/btsKeLKxW4h/F2zkSq2JJXxISuUjNHjO11/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbd7IHv%2FbtsKeLKxW4h%2FF2zkSq2JJXxISuUjNHjO11%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"828\" data-origin-height=\"276\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">14년 11월에 상장되었으니 딱 10년 되었군요 그동안 15 -&gt; 56 으로 4배 정도 올랐군요</p>\n<p data-ke-size=\"size16\">우리들은 보통 10년에 10배를 상정하지만 이것도 괜찮아보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">CSUS 는 미국 MSCI 입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"824\" data-origin-height=\"275\"><span data-url=\"https://blog.kakaocdn.net/dn/ZSfoM/btsKezcBvr0/EJg7Kv8oAuIgRR5VCcCWh1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ZSfoM/btsKezcBvr0/EJg7Kv8oAuIgRR5VCcCWh1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ZSfoM/btsKezcBvr0/EJg7Kv8oAuIgRR5VCcCWh1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FZSfoM%2FbtsKezcBvr0%2FEJg7Kv8oAuIgRR5VCcCWh1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"824\" data-origin-height=\"275\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">비슷하게 성장합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">EWY&nbsp; 이 것은 한국 MSCI ETF 입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"823\" data-origin-height=\"266\"><span data-url=\"https://blog.kakaocdn.net/dn/bil2j5/btsKdZv2okH/clCcDiZ7jNnfK3LAoXVrDk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bil2j5/btsKdZv2okH/clCcDiZ7jNnfK3LAoXVrDk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bil2j5/btsKdZv2okH/clCcDiZ7jNnfK3LAoXVrDk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbil2j5%2FbtsKdZv2okH%2FclCcDiZ7jNnfK3LAoXVrDk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"823\" data-origin-height=\"266\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">처참합니다.</p>\n<p data-ke-size=\"size16\">제 경험상 한국은 무슨일이 생기면 부동산을 부양하기 때문에&nbsp;산업으로 돈이 들어가질 못하는 구조인거 같습니다.</p>\n<p data-ke-size=\"size16\">이번에도 금리를 내렸는데<br />부동산 대출자들의 연체 때문인것으로 보였습니다.<br />그래서인지 기준금리는 내렸지만 시중금리는 내려가지 못했지요.<br />연체가 발생하면 금리를 올려 미리 돈을 쌓는 대비해야하기 때문입니다.</p>\n<p data-ke-size=\"size16\">금리를 이런식으로 내려버리면 외국인 투자자들은 환율 문제로 투자를 할 수 없게 됩니다.<br />또 연체 문제가 생기면 금리를 내려버려 환율에 문제가 생기고 이러면 외국인들이 돈을 가지고 나가술 없기 때문입니다.</p>\n<p data-ke-size=\"size16\">이상입니다.</p>",
        "contentSnippet": "QUAL 이것은 전세계 MSCI 종목에 투자하는 ETF 입니다.\n전세계적으로는 그렇지 않은가 봅니다.\n\n\n14년 11월에 상장되었으니 딱 10년 되었군요 그동안 15 -> 56 으로 4배 정도 올랐군요\n우리들은 보통 10년에 10배를 상정하지만 이것도 괜찮아보입니다.\n \nCSUS 는 미국 MSCI 입니다.\n\n\n비슷하게 성장합니다.\n \nEWY  이 것은 한국 MSCI ETF 입니다.\n\n\n처참합니다.\n제 경험상 한국은 무슨일이 생기면 부동산을 부양하기 때문에 산업으로 돈이 들어가질 못하는 구조인거 같습니다.\n이번에도 금리를 내렸는데\n부동산 대출자들의 연체 때문인것으로 보였습니다.\n그래서인지 기준금리는 내렸지만 시중금리는 내려가지 못했지요.\n연체가 발생하면 금리를 올려 미리 돈을 쌓는 대비해야하기 때문입니다.\n금리를 이런식으로 내려버리면 외국인 투자자들은 환율 문제로 투자를 할 수 없게 됩니다.\n또 연체 문제가 생기면 금리를 내려버려 환율에 문제가 생기고 이러면 외국인들이 돈을 가지고 나가술 없기 때문입니다.\n이상입니다.",
        "guid": "http://serverdown.tistory.com/882",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-10-21T15:32:17.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "미국 유아체널 코코멜론 의 위험성 /  Cocomelon",
        "link": "http://serverdown.tistory.com/881",
        "pubDate": "Mon, 21 Oct 2024 20:24:13 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/881#entry881comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=_h7GLbdsC7Q&amp;t=83s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=_h7GLbdsC7Q&amp;t=83s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=_h7GLbdsC7Q\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/1RHQj/hyXlQLVTZJ/63dddKSMqlUtwrihKOwTuk/img.jpg?width=1280&amp;height=720&amp;face=88_108_1240_294,https://scrap.kakaocdn.net/dn/ndBLl/hyXlXdc7OH/t7otyxKsO9F6AaifQx7Udk/img.jpg?width=1280&amp;height=720&amp;face=88_108_1240_294\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"미국 국민 유아채널이 아이들을 중독시키는 방법 | 티니핑은 안전할까?\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/_h7GLbdsC7Q\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">바로 이전글이 크럼블의 추천글이였는데 이제 안좋은 이야기를 이글에서 하게되는군요 ㄷㄷ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">코코멜론은 티니핑 같은 유아들이 보라고 만든 채널입니다.</p>\n<p data-ke-size=\"size16\">이들은 유아들 쉽게 중독될 수 있도록 많은 연구를 하고 있고 영상에 적용중입니다.</p>\n<p data-ke-size=\"size16\">원색 계열 색과 플레이 타임을 맞추기위해&nbsp;</p>\n<p data-ke-size=\"size16\">일상생활에 좋지 않은 배치를 한다고 합니다.</p>\n<p data-ke-size=\"size16\">전반부는 부정적인걸로 시작해서 긍정적인걸로 끝 내는 식이라 애들이 일단 no 를 먼저 외친다는 주장이 영상에 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">적어도 한국은 언어 문제로 들어오진 못했지만 뭐 언젠간 더빙해서 들어오겠죠</p>\n<p data-ke-size=\"size16\">유해한 영상일 수 있으니 주의를 기울여합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=_h7GLbdsC7Q&t=83s\n\n\n\n바로 이전글이 크럼블의 추천글이였는데 이제 안좋은 이야기를 이글에서 하게되는군요 ㄷㄷ\n \n코코멜론은 티니핑 같은 유아들이 보라고 만든 채널입니다.\n이들은 유아들 쉽게 중독될 수 있도록 많은 연구를 하고 있고 영상에 적용중입니다.\n원색 계열 색과 플레이 타임을 맞추기위해 \n일상생활에 좋지 않은 배치를 한다고 합니다.\n전반부는 부정적인걸로 시작해서 긍정적인걸로 끝 내는 식이라 애들이 일단 no 를 먼저 외친다는 주장이 영상에 있습니다.\n \n적어도 한국은 언어 문제로 들어오진 못했지만 뭐 언젠간 더빙해서 들어오겠죠\n유해한 영상일 수 있으니 주의를 기울여합니다.",
        "guid": "http://serverdown.tistory.com/881",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-10-21T11:24:13.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": [
      {
        "creator": "megayuchi",
        "title": "‘Hatsune Miku’ in VOXEL HORIZON.",
        "link": "https://megayuchi.com/2024/10/20/hatsune-miku-in-voxel-horizon/",
        "pubDate": "Sat, 19 Oct 2024 17:36:44 +0000",
        "content:encodedSnippet": "VOXEL HORIZON 개인맵에서의 하츠네 미쿠.\n복셀 데이터는 L0st P4inting님이 작업해주셨습니다.",
        "dc:creator": "megayuchi",
        "comments": "https://megayuchi.com/2024/10/20/hatsune-miku-in-voxel-horizon/#respond",
        "content": "VOXEL HORIZON 개인맵에서의 하츠네 미쿠.복셀 데이터는 L0st P4inting님이 작업해주셨습니다.",
        "contentSnippet": "VOXEL HORIZON 개인맵에서의 하츠네 미쿠.복셀 데이터는 L0st P4inting님이 작업해주셨습니다.",
        "guid": "http://megayuchi.com/?p=7050",
        "categories": [
          "Development",
          "Game Development",
          "Game Engine Development",
          "Voxel Horizon"
        ],
        "isoDate": "2024-10-19T17:36:44.000Z"
      }
    ]
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "Puppeteer에서 SSH 터널링 프록시 사용하기",
        "link": "https://hyeonseok.com/blog/923",
        "pubDate": "Sat, 19 Oct 2024 10:39:03 GMT",
        "content": "<p>한국 공공 사이트들은 해외 접속을 차단한 경우가 참 많다. 해외에 있는 서버에서 접근이 안된다. 외국에 나가 있으면 국민이 아닌건지 세금으로 만든 사이트를 왜 그렇게 운영하는지 모르겠는데, 그래서 국내에 프록시를 두고 접근하게 설정을 해봤다.</p>\r\n\r\n<p>프록시 서버를 만드는 방법은 다양하지만 SSH 터널링이 가능하다면 가장 간단한 방법으로 생각된다. SSH 터널링은 SSH 포트 포워딩이라고도 하는데 SSH를 통해 임의의 데이터를 전송하는 방법을 말한다. SSH 서버가 이쪽에 있는지 저쪽에 있는지에 따라서 설정이 달라지고 특정 포트가 아니라 여러 포트를 포워딩하게 되면 프록시 서버로도 사용할 수 있다. 브라우저에서 프록시로 사용하려면 후자인 다중 포트 포워딩을 사용하면 된다.</p>\r\n\r\n<pre><code>ssh -D localhost:33333 username@192.168.0.1</code></pre>\r\n\r\n<p>이렇게 하면 SSH 접속이 되는데 포트 포워딩이 활성화 되어 localhost:33333로 트래픽을 보내면 192.168.0.1를 경유해 보내게 된다.</p>\r\n\r\n<p>퍼피티어(puppeteer)에서 브라우저를 열 때 이 프록시를 설정해주면 이를 경유해 브라우징을 할 수 있게 된다.</p>\r\n\r\n<pre><code>const browser = await puppeteer.launch(['--proxy-server=socks5://localhost:33333']);</code></pre>\r\n\r\n<p>시스템 데몬으로 만들어두면 편하다. <code>vi /etc/systemd/system/krproxy.service</code></p>\r\n\r\n<pre><code>[Unit]\r\nDescription=KR proxy\r\nAfter=network.target\r\n\r\n[Service]\r\nRestart=on-failure\r\nRestartSec=5\r\nExecStart=/usr/bin/ssh -N -D localhost:33333 username@192.168.0.1 -p 2222\r\n\r\n[Install]\r\nWantedBy=multi-user.target</code></pre>\r\n\r\n<p>그런데 다른 문제가 있어서 계속 사용은 못 하고 결국 국내로 서버를 이전했다.</p>",
        "contentSnippet": "한국 공공 사이트들은 해외 접속을 차단한 경우가 참 많다. 해외에 있는 서버에서 접근이 안된다. 외국에 나가 있으면 국민이 아닌건지 세금으로 만든 사이트를 왜 그렇게 운영하는지 모르겠는데, 그래서 국내에 프록시를 두고 접근하게 설정을 해봤다.\n\r\n\r\n프록시 서버를 만드는 방법은 다양하지만 SSH 터널링이 가능하다면 가장 간단한 방법으로 생각된다. SSH 터널링은 SSH 포트 포워딩이라고도 하는데 SSH를 통해 임의의 데이터를 전송하는 방법을 말한다. SSH 서버가 이쪽에 있는지 저쪽에 있는지에 따라서 설정이 달라지고 특정 포트가 아니라 여러 포트를 포워딩하게 되면 프록시 서버로도 사용할 수 있다. 브라우저에서 프록시로 사용하려면 후자인 다중 포트 포워딩을 사용하면 된다.\n\r\n\r\nssh -D localhost:33333 username@192.168.0.1\n\r\n\r\n이렇게 하면 SSH 접속이 되는데 포트 포워딩이 활성화 되어 localhost:33333로 트래픽을 보내면 192.168.0.1를 경유해 보내게 된다.\n\r\n\r\n퍼피티어(puppeteer)에서 브라우저를 열 때 이 프록시를 설정해주면 이를 경유해 브라우징을 할 수 있게 된다.\n\r\n\r\nconst browser = await puppeteer.launch(['--proxy-server=socks5://localhost:33333']);\n\r\n\r\n시스템 데몬으로 만들어두면 편하다. vi /etc/systemd/system/krproxy.service\n\r\n\r\n[Unit]\r\nDescription=KR proxy\r\nAfter=network.target\r\n\r\n[Service]\r\nRestart=on-failure\r\nRestartSec=5\r\nExecStart=/usr/bin/ssh -N -D localhost:33333 username@192.168.0.1 -p 2222\r\n\r\n[Install]\r\nWantedBy=multi-user.target\n\r\n\r\n그런데 다른 문제가 있어서 계속 사용은 못 하고 결국 국내로 서버를 이전했다.",
        "guid": "https://hyeonseok.com/blog/923",
        "isoDate": "2024-10-19T10:39:03.000Z"
      }
    ]
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": []
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": [
      {
        "title": "멀티 테넌트 데이터를 격리하고 더 안전하게 만드는 방법",
        "link": "https://meetup.nhncloud.com/posts/388",
        "pubDate": "Mon, 21 Oct 2024 05:48:39 GMT",
        "content": "![대지 1.png](https://image.toast.com/aaaadh/real/2024/techblog/uB300uC9C0%201.png)\r\r\n\r\r\n# 들어가며\r\r\n\r\r\n이번 글에서는 멀티 테넌트 서비스에서 테넌트 데이터 격리 방법과 격리 수준을 높일 수 있는 몇 가지 방법에 대해 알아봅니다. \r\r\n\r\r\n# 1. 테넌트 데이터 격리\r\r\n\r\r\n**테넌트(tenant)**는 하나의 플랫폼을 사용하는 사용자나 조직, 프로젝트를 의미합니다. 일반적인 클라우드 서비스나 플랫폼 서비스는 각 테넌트에게 독립적인 데이터 접근과 관리 기능을 제공하면서도, 서버나 데이터베이스 같은 인프라 자원은 서비스에 요구되는 보안 수준, 성능, 비용에 따라 구성합니다. \r\r\n\r\r\n이번 글에서는 테넌트 데이터를 저장하는 데이터베이스의 테넌트 데이터 격리 수준에 대해 알아봅니다. **테넌트 데이터 격리 수준**은 크게 3가지로 나눌 수 있습니다.\r\r\n\r\r\n## 테넌트 데이터 격리 수준\r\r\n\r\r\n| 레벨 1 - 행 단위 | 레벨 2 - 테이블 단위 | 레벨 3 - 데이터베이스 단위 |\r\r\n| - | - | - |\r\r\n| ![자산 3.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%203.png)<br>- 각 테넌트 데이터를 하나의 데이터베이스, 하나의 테이블에 테넌트 아이디를 다르게 부여해 저장합니다.<br>- 여러 테넌트의 데이터는 하나의 데이터베이스 테이블에 행 단위로 격리됩니다. | ![자산 4.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%204.png)<br>-각 테넌트 데이터를 하나의 데이터베이스에서 테넌트 단위로 분리된 테이블에 저장합니다. |![자산 5-2.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%2052.png)<br>- 각 테넌트 데이터를 분리된 데이터베이스에 저장합니다. |\r\r\n\r\r\n\r\r\n**레벨 3, 데이터베이스 단위 격리**가 격리 수준이 가장 높습니다. 하지만, 테넌트마다 데이터베이스가 할당되어 데이터베이스 운영 및 관리 비용이 크고, 테넌트 수에 따라 비용이 선형적으로 증가할 수 있습니다. 반대로 레벨 1은 테넌트 데이터 격리 수준이 가장 낮습니다. 하지만, 하나의 데이터베이스만 존재하기 때문에 운영 및 관리 비용이 저렴해 경제적입니다. 그에 따라 고객에게 저렴한 가격에 서비스를 제공할 수 있습니다.\r\r\n\r\r\n각 방법은 고유한 장점과 단점을 가지는데요. 아래에서 **레벨 1인 행 단위 격리** 수준의 장점과 단점에 대해 더 자세히 알아보고 단점을 극복할 수 있는 방법을 살펴보겠습니다.\r\r\n\r\r\n이 글에서도 어느 정도 다루겠지만 멀티 테넌트 데이터 관리 방법에 대해 더 많은 지식을 원하시는 분은 Microsoft Azure 글을 읽어보시는 것을 추천합니다. 제가 멀티 테넌트 데이터를 효과적으로 관리하기 위해 고민했던 부분에 대해서 잘 정리되어 있습니다.\r\r\n\r\r\n* [Multi Tenant SaaS Pattern](https://learn.microsoft.com/en-us/azure/azure-sql/database/saas-tenancy-app-design-patterns?view=azuresql)\r\r\n* [Architectural approaches for storage and data in multitenant solutions](https://learn.microsoft.com/en-us/azure/architecture/guide/multitenant/approaches/storage-data)\r\r\n\r\r\n<br>\r\r\n\r\r\n## 레벨 1, 행 단위 격리 수준의 장점과 단점\r\r\n\r\r\n서비스에 요구되는 성능과 보안 관련 요구 사항에서 이슈가 없다면 테넌트 데이터 격리 수준을 레벨 1로 하는 것이 가장 경제적이고 서비스 구조를 단순하게 가져갈 수 있습니다. 테넌트 데이터 격리 수준 레벨 1의 장점과 단점에 대해 더 알아보겠습니다.\r\r\n\r\r\n#### 레벨 1, 행 단위 격리 수준 테이블 예시\r\r\n\r\r\n| tenant_id | sender | recipient | title | body |\r\r\n| --------- | ------ | --------- | ----- | ---- |\r\r\n| 629 | no-reply@nhn.com | [recipient1@example.com](mailto:recipient1@example.com) | Title | Body |\r\r\n| 39 | ... | ... | ... | ... |\r\r\n| 1234 | ... | ... | ... | ... |\r\r\n| 927 | ... | ... | ... | ... |\r\r\n\r\r\n하나의 데이터베이스 안에 하나의 테이블에 여러 테넌트들의 데이터를 저장하기 때문에 각 테이블마다 테넌트를 식별할 수 있는 테넌트 ID 칼럼이 필요합니다.\r\r\n\r\r\n### 장점 - 비용 절감\r\r\n\r\r\n하나의 데이터베이스와 테이블에 많은 수의 테넌트의 데이터를 저장할 수 있습니다. 이는 적은 자원으로 많은 수의 테넌트를 수용할 수 있어 경제적입니다. 개발 및 운영에 들어가는 자원도 낮게 유지할 수 있습니다.\r\r\n\r\r\n### 단점 - 보안 위험 증가, 성능 저하\r\r\n\r\r\n여러 테넌트가 동일한 데이터베이스와 테이블을 공유하고 있기 때문에, 예기치 않은 버그나 취약점 공격으로 인해 다른 테넌트의 데이터에 접근할 위험이 있습니다. 이러한 리스크를 방지하기 위해 보안 측면에서 고려해야 할 사항들이 많아지며, 그중 하나가 멀티 테넌트 데이터 격리 방법입니다. \r\r\n\r\r\n일부 고객은 낮은 격리 수준을 꺼려 할 수도 있습니다. 특히 금융이나 공공과 같이 높은 보안 수준을 요구하는 산업에서 다른 테넌트 데이터에 접근할 리스크 때문에 테넌트 데이터 격리 수준이 레벨 1인 클라우드 서비스 도입에 주저할 가능성이 있습니다. 또한 여러 테넌트가 같은 데이터베이스를 공유하기 때문에 시끄러운 이웃 효과로 특정 테넌트가 전체적인 성능을 저하시킬 수 있습니다.\r\r\n\r\r\n> 시끄러운 이웃 효과: 하나의 테넌트가 클라우드 자원을 과도하게 점유해 다른 테넌트가 정상적으로 자신의 자원을 이용하지 못하는 것을 뜻합니다.\r\r\n\r\r\n# 2. 레벨 1, 행 단위 격리 수준의 단점 개선 방법\r\r\n\r\r\n위에서 설명했지만 레벨 1에서 다른 테넌트의 데이터에 접근하는 것을 방지하기 위한 방법 중 가장 간단하고 강력한 방법 중 하나는 애플리케이션 개발 시 항상 테넌트를 식별하는 테넌트 아이디를 필수로 사용하도록 강제화하는 것입니다. 테넌트 데이터는 다양한 곳에 다양한 형태로 저장될 수 있습니다. 이번 글에서는 데이터베이스에 저장하는 사례에서 멀티 테넌트 데이터 격리를 강화하는 방법에 대해 알아보겠습니다. \r\r\n\r\r\n## 멀티 테넌트 데이터 격리 실패 사례\r\r\n\r\r\n설계 및 코드 리뷰 시 데이터 격리를 중요하게 생각하고, 항상 고려해 개발을 해도 시스템적으로 강제화하지 못한다면 테넌트 데이터 격리가 실패할 가능성이 있습니다.\r\r\n\r\r\n다음은 테넌트 데이터 격리가 실패한 예시입니다.\r\r\n\r\r\n아래는 메시지 단건 조회 API입니다. 테넌트 아이디와 메시지 아이디를 전달받아 데이터베이스에서 메시지를 조회합니다.\r\r\n\r\r\n```\r\r\nGET /notification/v1.0/tenants/{tenantId}/messages/{messageId}\r\r\n```\r\r\n\r\r\n메시지를 저장하는 테이블은 다음과 같이 정의되어 있었습니다.\r\r\n\r\r\n| tenant_id | message_id | title | body |\r\r\n| --------- | ---------- | ----- | ---- |\r\r\n| 629 | 1234 | 제목 | 내용 |\r\r\n| 123 | 4567 | 다른 테넌트 데이터 | 다른 테넌트 데이터 |\r\r\n| ... | ... | ... | ... |\r\r\n\r\r\n하지만, 테넌트 데이터 격리에서 문제가 되는 부분은 메시지를 조회하는 쿼리입니다.\r\r\n\r\r\n#### 테넌트 데이터 격리에 실패한 쿼리\r\r\n```\r\r\nSELECT * FROM message WHERE message_id = #{messageId};\r\r\n```\r\r\n\r\r\n위 쿼리에서 테넌트 데이터 격리가 실패한 원인은 테넌트 아이디가 메시지를 조회하는 쿼리에서 사용되지 않았다는 것입니다. API 요청을 받을 때, 테넌트 아이디 인증을 수행한다 하더라도 문제가 됩니다. 공격자는 자신의 테넌트 식별자를 사용하고 다른 테넌트의 메시지 아이디를 입력해 자신의 테넌트가 아닌 테넌트 메시지를 조회할 수 있습니다. \r\r\n\r\r\n애플리케이션 로직에서 테넌트의 아이디와 메시지 아이디와 관계를 검증하는 로직을 추가해 보완할 수 있겠지만, 제일 단순하며 근본적으로 이런 보안 위협을 제거하는 방법은 쿼리에 항상 테넌트 아이디가 들어가는 지 검증해 테넌트 아이디 사용을 강제화하는 것입니다.\r\r\n\r\r\n#### 테넌트 데이터 격리에 성공한 쿼리\r\r\n```\r\r\nSELECT * FROM message WHERE tenant_id = #{tenantId} AND message_id = #{messageId};\r\r\n```\r\r\n\r\r\n## 테넌트 아이디 검증을 통한 테넌트 아이디 강제화 방법\r\r\n\r\r\n멀티 테넌트 데이터를 다루기 때문에 코드 리뷰에서도 항상 테넌트 데이터 격리를 달성하기 위한 시큐어 코딩에 대해 생각하는 것은 매우 중요합니다. 앞서 말씀드린 것처럼 시스템적으로 강제화하지 못한다면 테넌트 데이터 격리가 실패할 보안 리스크가 항상 존재합니다. 멀티 테넌트 기반 클라우드 서비스에서 테넌트 데이터 격리가 실패하면 서비스의 안정성과 신뢰 하락에 큰 영향을 미칩니다.\r\r\n\r\r\n쿼리에 테넌트 아이디가 사용되도록 강제화하는 방법으로 애플리케이션 레벨에서는 JDBC DataSource를 확장하는 방법, Spring AOP나 AspectJ를 이용한 방법도 고려해 볼 수 있습니다. 그리고 시스템 아키텍처 레벨에서는 데이터베이스 미들웨어인 Apache ShardingSphere도 고려해 볼 수 있습니다. 개인적으로 이런 테넌트 데이터 격리를 클라우드 서비스 전체의 거버넌스로 가져가 중앙에서 관리를 한다면 Apache ShardingSphere와 같은 데이터베이스 미들웨어를 사용하는 것이 더 적절하다고 생각합니다.\r\r\n\r\r\n \r\r\n| 애플레케이션 레벨 | 시스템 아키텍쳐 레벨 |\r\r\n| - | - |\r\r\n|  ![자산 7.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%207.png)|![자산 9-2.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%2092.png) |\r\r\n\r\r\n상대적으로 단순하고 적용하기 쉬운 JDBC DataSource를 확장해 Spring 애플리케이션에서 테넌트 아이디를 강제화하는 방법에 대해 아래에서 알아봅니다.  \r\r\n\r\r\n## JDBC DataSource Wrapper 클래스 구현과  Spring BeanPostProcessor 이용해 테넌트 아이디 강제화\r\r\nSpring에서 쿼리 실행 시 쿼리를 검증하는 방법에는 여러 가지가 있습니다. 여기에서는 쿼리에서 테넌트 아이디 칼럼을 검증하는 `JDBC DataSource Wrapper` 클래스를 구현하고 Spring의 BeanPostProcessor를 이용해 원래 Bean으로 등록된 DataSource를 `Wraper` 클래스로 감싸서 다시 Bean으로 등록해 쿼리의 테넌트 아이디 강제화를 달성하는 방법에 대해 알아보겠습니다. \r\r\n\r\r\n아래 코드는 설명을 위한 예시이므로 실제 구현에서는 추가적인 작업이 필요할 수 있습니다.\r\r\n\r\r\n\r\r\n#### 1. PreparedStatement Wrapper 클래스 구현\r\r\n제일 먼저 PreparedStatement Wrapper 클래스인 `TenantIsolationPreparedStatementWrapper`를 구현합니다. 생성자에서 PreparedSatement와 쿼리를 파라미터로 받아 쿼리를 검증하는 역할을 합니다. \r\r\n\r\r\n아래 코드에서 쿼리를 검사하는 로직은 예시를 위해 단순하게 구현된 코드입니다. 실제 구현에서는 복잡한 쿼리도 검사해야 하기 때문에 SQL Parser를 이용해 쿼리를 검사하는 방법이 더 좋을 수 있습니다. \r\r\n```java\r\r\npublic static class TenantIsolationPreparedStatementWrapper implements PreparedStatement {\r\r\n\tprivate static final String WHERE_CLAUSE = \" tenant_id = ? \";\r\r\n\r\r\n\tprivate final PreparedStatement preparedStatement;\r\r\n\r\r\n\tpublic TenantIsolationPreparedStatementWrapper(PreparedStatement preparedStatement, String sql) {\r\r\n\t\tthis.preparedStatement = preparedStatement;\r\r\n\r\r\n\t\tif (notContainsTenantIdIn(sql)) {\r\r\n\t\t\tthrow new IllegalArgumentException(\"SQL statement must contain tenant_id column in where clause. SQL: \" + sql);\r\r\n\t\t}\r\r\n\t}\r\r\n\r\r\n\tprotected boolean notContainsTenantIdIn(String sql) {\r\r\n\t\tsql = sql.toLowerCase();\r\r\n\r\r\n\t\tif (sql.startsWith(\"show \") || sql.startsWith(\"insert \")) {\r\r\n\t\t\treturn false;\r\r\n\t\t}\r\r\n\r\r\n\t\tint indexOfWhereClause = sql.indexOf(\"where\");\r\r\n\t\tif (indexOfWhereClause == -1) {\r\r\n\t\t\treturn true;\r\r\n\t\t}\r\r\n\r\r\n\t\treturn !sql.substring(indexOfWhereClause).contains(WHERE_CLAUSE);\r\r\n\r\r\n\t}\r\r\n\t\r\r\n\t...\r\r\n\t\r\r\n}\r\r\n```\r\r\n\r\r\n#### 2. Connection Wrapper 클래스 구현\r\r\n두 번째로 PreparedStatement를 생성하는 Connection에 대한 Wrapper 클래스 `TenantIsolationConnectionWrapper`를 구현합니다. 쿼리를 파라미터로 받아 PreparedStatement를 리턴하는 메서드를 오버라이딩해 `TenantIsolationPreparedStatementWrapper`로 감싸서 리턴합니다.\r\r\n\r\r\n\r\r\n```java\r\r\npublic static class TenantIsolationConnectionWrapper implements Connection {\r\r\n\r\r\n\tprivate final Connection connection;\r\r\n\r\r\n\tpublic TenantIsolationConnectionWrapper(Connection connection) {\r\r\n\t\tthis.connection = connection;\r\r\n\t}\r\r\n\r\r\n\r\r\n\t@Override\r\r\n\tpublic Statement createStatement() throws SQLException {\r\r\n\t\tthrow new UnsupportedOperationException(\"Statement is unsafe. Use PreparedStatement.\");\r\r\n\t}\r\r\n\r\r\n\t@Override\r\r\n\tpublic PreparedStatement prepareStatement(String sql) throws SQLException {\r\r\n\t\treturn new TenantIsolationPreparedStatementWrapper(connection.prepareStatement(sql), sql);  // Connection의 PreparedStatement를 감쌉니다.\r\r\n\t}\r\r\n\r\r\n\r\r\n\t... // 이하 생략\r\r\n\t\r\r\n}\r\r\n```\r\r\n\r\r\n#### 3. TenantIsolationDataSourceWrapper\r\r\n세 번째로 DataSource를 감싸 `TenantIsolationConnectionWrapper`를 사용하도록 하는 `TenantIsolationDataSourceWrapper` 클래스를 구현합니다. \r\r\n```java\r\r\npublic class TenantIsolationDataSourceWrapper implements DataSource {\r\r\n    private final DataSource dataSource;\r\r\n\r\r\n    public TenantIsolationDataSourceWrapper(DataSource dataSource) {\r\r\n        this.dataSource = dataSource;\r\r\n    }\r\r\n\t\r\r\n    @Override\r\r\n    public Connection getConnection() throws SQLException {\r\r\n        return new TenantIsolationConnectionWrapper(dataSource.getConnection()); \r\r\n    }\r\r\n\r\r\n    @Override\r\r\n    public Connection getConnection(String username, String password) throws SQLException {\r\r\n        return new TenantIsolationConnectionWrapper(dataSource.getConnection(username, password));\r\r\n    }\r\r\n\t\r\r\n\t... // 이하 생략\r\r\n}\r\r\n```\r\r\n\r\r\n#### 4. TenantIsolationBeanPostProcessor\r\r\n먼저 등록된 DataSource Bean을 받아 `TenantIsolationDataSourceWrapper`로 감싸서 리턴합니다. 이렇게 하면 DataSource Bean으로 `TenantIsolationDataSourceWrapper`가 사용되어 실행되는 쿼리를 검증해 테넌트 데이터 격리를 강제화할 수 있습니다.\r\r\n\r\r\n```java\r\r\n@Component\r\r\npublic class TenantIsolationBeanPostProcessor implements BeanPostProcessor {\r\r\n    @Override\r\r\n    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\r\r\n        if (bean instanceof DataSource && !(bean instanceof TenantIsolationDataSourceWrapper)) { // TenantIsolationDataSourceWrapper가 아닌 DataSource를 감쌉니다.\r\r\n            return new TenantIsolationDataSourceWrapper((DataSource) bean);\r\r\n        }\r\r\n        return bean;\r\r\n    }\r\r\n}\r\r\n```\r\r\n\r\r\n위에서 언급한 '테넌트 데이터 격리에 실패한 쿼리'처럼 WHERE에 **tenant_id** 칼럼이 없다면 아래와 같이 예외를 발생시킵니다.\r\r\n\r\r\n```\r\r\nCaused by: java.lang.IllegalArgumentException: SQL statement must contain tenant_id column in where clause. SQL: SELECT * FROM message WHERE message_id = #{messageId};\r\r\n\tat com.nhncloud.tenant.isolation.datasource.TenantIsolationDataSourceWrapper$TenantIsolationPreparedStatementWrapper.<init>(TenantIsolationDataSourceWrapper.java:391)\r\r\n\tat com.nhncloud.tenant.isolation.datasource.TenantIsolationDataSourceWrapper$TenantIsolationConnectionWrapper.prepareStatement(TenantIsolationDataSourceWrapper.java:110)\r\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\r\n```\r\r\n \r\r\n\r\r\n\r\r\n# 3. 테넌트 데이터 보호\r\r\n\r\r\n멀티 테넌트 데이터 격리를 위해 테넌트 아이디 강제화도 중요하지만, 멀티 테넌트 데이터 격리가 실패했을 때 리스크를 최소화하기 위한 방법도 중요합니다. 제일 일반적인 방법은 테넌트 데이터를 테넌트별 고유 키로 암호화하여 저장하는 것입니다. 이렇게 하면 테넌트 데이터 격리에 실패하더라도 다른 테넌트는 해당 데이터를 해석할 수 없게 되어 테넌트 데이터를 보호할 수 있습니다. 아래에서 이러한 방법에 대해 더 구체적으로 알아보겠습니다.\r\r\n\r\r\n## 테넌트별 키를 통한 암복호화\r\r\n\r\r\n멀티 테넌트 환경에서 데이터 격리가 실패한 경우, 다른 테넌트의 데이터가 노출되는 리스크를 최소화하기 위한 한 가지 방법 중 하나는 테넌트 별로 고유 키를 부여하고 이 키를 이용해 암호화하는 것입니다. 이 방법은 같은 데이터베이스 및 테이블을 공유하는 상황에서도 각 테넌트의 데이터는 각 테넌트의 암호화 키로 암호화되어 저장되기 때문에 다른 테넌트의 데이터가 노출되어도 해석할 수 없습니다. \r\r\n\r\r\n\r\r\n| 테넌트 아이디를 이용한 암호화 | 외부 키 관리 서비스를 이용한 암호화 |\r\r\n| - | - |\r\r\n|![자산 10.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%2010.png)<br>- 제일 단순한 방법입니다.<br>- 보안 측면에서는 다소 취약할 수 있지만, 구조가 단순하여 성능 면에서 이점이 있을 수 있습니다.  |![자산 11.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%2011.png)<br>- NHN Cloud SKM(Secure Key Manager), Vault, AWS KMS, 같은 기밀 데이터나 키를 관리하는 서비스에 테넌트의 암호화 키를 관리하면 보안을 더 강화할 수 있습니다.<br>- 키 저장소가 외부에 있기 때문에 장애 상황 시 결함 허용성(fault tolerance) 등 고려해야 될 부분이 많아 집니다.<br>- 만약,  키 관리 서비스에서 테넌트 데이터의 암/복호화를 진행한다면 성능적인 부분도 고려해야 합니다.  |\r\r\n\r\r\n# 결론\r\r\n멀티 테넌트 환경에서 테넌트 데이터 격리는 보안을 보장하기 위한 필수 요소입니다. 특히 여러 테넌트가 동일한 데이터베이스와 테이블을 공유하는 상황에서 테넌트 간의 데이터 접근을 방지하고 격리 수준을 강화하는 것은 클라우드 서비스의 신뢰성을 높이는 중요한 과제입니다.\r\r\n\r\r\n행 단위, 테이블 단위, 데이터베이스 단위의 격리 방법은 각각 장단점이 있으며, 각 서비스의 요구 사항에 따라 적합한 방식을 선택해야 합니다. 더 높은 수준의 데이터 격리를 제공하는 방법은 보안성과 안정성을 높일 수 있지만, 운영 비용의 증가도 고려해야 합니다.\r\r\n\r\r\n시큐어 코딩 원칙을 적용하여 쿼리 내에서 테넌트 아이디를 강제하는 것과 같은 기술적 조치는 데이터 격리 실패로 인한 보안 위험을 크게 줄일 수 있습니다. 그리고 이러한 기술적 접근과 더불어 테넌트별 암호화 키를 사용하여 데이터를 보호하는 방법은 데이터 노출 리스크를 최소화하는 추가적인 보안 장치로 작용합니다.\r\r\n\r\r\n결론적으로, 멀티 테넌트 환경에서 성공적인 데이터 격리는 보안성, 비용 효율성, 성능의 균형을 고려하는 전략적인 접근을 요구하며, 이를 통해 안정적이고 신뢰할 수 있는 서비스를 제공할 수 있습니다.",
        "contentSnippet": "![대지 1.png](https://image.toast.com/aaaadh/real/2024/techblog/uB300uC9C0%201.png)\r\r\n\r\r\n# 들어가며\r\r\n\r\r\n이번 글에서는 멀티 테넌트 서비스에서 테넌트 데이터 격리 방법과 격리 수준을 높일 수 있는 몇 가지 방법에 대해 알아봅니다. \r\r\n\r\r\n# 1. 테넌트 데이터 격리\r\r\n\r\r\n**테넌트(tenant)**는 하나의 플랫폼을 사용하는 사용자나 조직, 프로젝트를 의미합니다. 일반적인 클라우드 서비스나 플랫폼 서비스는 각 테넌트에게 독립적인 데이터 접근과 관리 기능을 제공하면서도, 서버나 데이터베이스 같은 인프라 자원은 서비스에 요구되는 보안 수준, 성능, 비용에 따라 구성합니다. \r\r\n\r\r\n이번 글에서는 테넌트 데이터를 저장하는 데이터베이스의 테넌트 데이터 격리 수준에 대해 알아봅니다. **테넌트 데이터 격리 수준**은 크게 3가지로 나눌 수 있습니다.\r\r\n\r\r\n## 테넌트 데이터 격리 수준\r\r\n\r\r\n| 레벨 1 - 행 단위 | 레벨 2 - 테이블 단위 | 레벨 3 - 데이터베이스 단위 |\r\r\n| - | - | - |\r\r\n| ![자산 3.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%203.png)\n- 각 테넌트 데이터를 하나의 데이터베이스, 하나의 테이블에 테넌트 아이디를 다르게 부여해 저장합니다.\n- 여러 테넌트의 데이터는 하나의 데이터베이스 테이블에 행 단위로 격리됩니다. | ![자산 4.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%204.png)\n-각 테넌트 데이터를 하나의 데이터베이스에서 테넌트 단위로 분리된 테이블에 저장합니다. |![자산 5-2.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%2052.png)\n- 각 테넌트 데이터를 분리된 데이터베이스에 저장합니다. |\r\r\n\r\r\n\r\r\n**레벨 3, 데이터베이스 단위 격리**가 격리 수준이 가장 높습니다. 하지만, 테넌트마다 데이터베이스가 할당되어 데이터베이스 운영 및 관리 비용이 크고, 테넌트 수에 따라 비용이 선형적으로 증가할 수 있습니다. 반대로 레벨 1은 테넌트 데이터 격리 수준이 가장 낮습니다. 하지만, 하나의 데이터베이스만 존재하기 때문에 운영 및 관리 비용이 저렴해 경제적입니다. 그에 따라 고객에게 저렴한 가격에 서비스를 제공할 수 있습니다.\r\r\n\r\r\n각 방법은 고유한 장점과 단점을 가지는데요. 아래에서 **레벨 1인 행 단위 격리** 수준의 장점과 단점에 대해 더 자세히 알아보고 단점을 극복할 수 있는 방법을 살펴보겠습니다.\r\r\n\r\r\n이 글에서도 어느 정도 다루겠지만 멀티 테넌트 데이터 관리 방법에 대해 더 많은 지식을 원하시는 분은 Microsoft Azure 글을 읽어보시는 것을 추천합니다. 제가 멀티 테넌트 데이터를 효과적으로 관리하기 위해 고민했던 부분에 대해서 잘 정리되어 있습니다.\r\r\n\r\r\n* [Multi Tenant SaaS Pattern](https://learn.microsoft.com/en-us/azure/azure-sql/database/saas-tenancy-app-design-patterns?view=azuresql)\r\r\n* [Architectural approaches for storage and data in multitenant solutions](https://learn.microsoft.com/en-us/azure/architecture/guide/multitenant/approaches/storage-data)\r\r\n\r\r\n\r\r\n\r\r\n## 레벨 1, 행 단위 격리 수준의 장점과 단점\r\r\n\r\r\n서비스에 요구되는 성능과 보안 관련 요구 사항에서 이슈가 없다면 테넌트 데이터 격리 수준을 레벨 1로 하는 것이 가장 경제적이고 서비스 구조를 단순하게 가져갈 수 있습니다. 테넌트 데이터 격리 수준 레벨 1의 장점과 단점에 대해 더 알아보겠습니다.\r\r\n\r\r\n#### 레벨 1, 행 단위 격리 수준 테이블 예시\r\r\n\r\r\n| tenant_id | sender | recipient | title | body |\r\r\n| --------- | ------ | --------- | ----- | ---- |\r\r\n| 629 | no-reply@nhn.com | [recipient1@example.com](mailto:recipient1@example.com) | Title | Body |\r\r\n| 39 | ... | ... | ... | ... |\r\r\n| 1234 | ... | ... | ... | ... |\r\r\n| 927 | ... | ... | ... | ... |\r\r\n\r\r\n하나의 데이터베이스 안에 하나의 테이블에 여러 테넌트들의 데이터를 저장하기 때문에 각 테이블마다 테넌트를 식별할 수 있는 테넌트 ID 칼럼이 필요합니다.\r\r\n\r\r\n### 장점 - 비용 절감\r\r\n\r\r\n하나의 데이터베이스와 테이블에 많은 수의 테넌트의 데이터를 저장할 수 있습니다. 이는 적은 자원으로 많은 수의 테넌트를 수용할 수 있어 경제적입니다. 개발 및 운영에 들어가는 자원도 낮게 유지할 수 있습니다.\r\r\n\r\r\n### 단점 - 보안 위험 증가, 성능 저하\r\r\n\r\r\n여러 테넌트가 동일한 데이터베이스와 테이블을 공유하고 있기 때문에, 예기치 않은 버그나 취약점 공격으로 인해 다른 테넌트의 데이터에 접근할 위험이 있습니다. 이러한 리스크를 방지하기 위해 보안 측면에서 고려해야 할 사항들이 많아지며, 그중 하나가 멀티 테넌트 데이터 격리 방법입니다. \r\r\n\r\r\n일부 고객은 낮은 격리 수준을 꺼려 할 수도 있습니다. 특히 금융이나 공공과 같이 높은 보안 수준을 요구하는 산업에서 다른 테넌트 데이터에 접근할 리스크 때문에 테넌트 데이터 격리 수준이 레벨 1인 클라우드 서비스 도입에 주저할 가능성이 있습니다. 또한 여러 테넌트가 같은 데이터베이스를 공유하기 때문에 시끄러운 이웃 효과로 특정 테넌트가 전체적인 성능을 저하시킬 수 있습니다.\r\r\n\r\r\n> 시끄러운 이웃 효과: 하나의 테넌트가 클라우드 자원을 과도하게 점유해 다른 테넌트가 정상적으로 자신의 자원을 이용하지 못하는 것을 뜻합니다.\r\r\n\r\r\n# 2. 레벨 1, 행 단위 격리 수준의 단점 개선 방법\r\r\n\r\r\n위에서 설명했지만 레벨 1에서 다른 테넌트의 데이터에 접근하는 것을 방지하기 위한 방법 중 가장 간단하고 강력한 방법 중 하나는 애플리케이션 개발 시 항상 테넌트를 식별하는 테넌트 아이디를 필수로 사용하도록 강제화하는 것입니다. 테넌트 데이터는 다양한 곳에 다양한 형태로 저장될 수 있습니다. 이번 글에서는 데이터베이스에 저장하는 사례에서 멀티 테넌트 데이터 격리를 강화하는 방법에 대해 알아보겠습니다. \r\r\n\r\r\n## 멀티 테넌트 데이터 격리 실패 사례\r\r\n\r\r\n설계 및 코드 리뷰 시 데이터 격리를 중요하게 생각하고, 항상 고려해 개발을 해도 시스템적으로 강제화하지 못한다면 테넌트 데이터 격리가 실패할 가능성이 있습니다.\r\r\n\r\r\n다음은 테넌트 데이터 격리가 실패한 예시입니다.\r\r\n\r\r\n아래는 메시지 단건 조회 API입니다. 테넌트 아이디와 메시지 아이디를 전달받아 데이터베이스에서 메시지를 조회합니다.\r\r\n\r\r\n```\r\r\nGET /notification/v1.0/tenants/{tenantId}/messages/{messageId}\r\r\n```\r\r\n\r\r\n메시지를 저장하는 테이블은 다음과 같이 정의되어 있었습니다.\r\r\n\r\r\n| tenant_id | message_id | title | body |\r\r\n| --------- | ---------- | ----- | ---- |\r\r\n| 629 | 1234 | 제목 | 내용 |\r\r\n| 123 | 4567 | 다른 테넌트 데이터 | 다른 테넌트 데이터 |\r\r\n| ... | ... | ... | ... |\r\r\n\r\r\n하지만, 테넌트 데이터 격리에서 문제가 되는 부분은 메시지를 조회하는 쿼리입니다.\r\r\n\r\r\n#### 테넌트 데이터 격리에 실패한 쿼리\r\r\n```\r\r\nSELECT * FROM message WHERE message_id = #{messageId};\r\r\n```\r\r\n\r\r\n위 쿼리에서 테넌트 데이터 격리가 실패한 원인은 테넌트 아이디가 메시지를 조회하는 쿼리에서 사용되지 않았다는 것입니다. API 요청을 받을 때, 테넌트 아이디 인증을 수행한다 하더라도 문제가 됩니다. 공격자는 자신의 테넌트 식별자를 사용하고 다른 테넌트의 메시지 아이디를 입력해 자신의 테넌트가 아닌 테넌트 메시지를 조회할 수 있습니다. \r\r\n\r\r\n애플리케이션 로직에서 테넌트의 아이디와 메시지 아이디와 관계를 검증하는 로직을 추가해 보완할 수 있겠지만, 제일 단순하며 근본적으로 이런 보안 위협을 제거하는 방법은 쿼리에 항상 테넌트 아이디가 들어가는 지 검증해 테넌트 아이디 사용을 강제화하는 것입니다.\r\r\n\r\r\n#### 테넌트 데이터 격리에 성공한 쿼리\r\r\n```\r\r\nSELECT * FROM message WHERE tenant_id = #{tenantId} AND message_id = #{messageId};\r\r\n```\r\r\n\r\r\n## 테넌트 아이디 검증을 통한 테넌트 아이디 강제화 방법\r\r\n\r\r\n멀티 테넌트 데이터를 다루기 때문에 코드 리뷰에서도 항상 테넌트 데이터 격리를 달성하기 위한 시큐어 코딩에 대해 생각하는 것은 매우 중요합니다. 앞서 말씀드린 것처럼 시스템적으로 강제화하지 못한다면 테넌트 데이터 격리가 실패할 보안 리스크가 항상 존재합니다. 멀티 테넌트 기반 클라우드 서비스에서 테넌트 데이터 격리가 실패하면 서비스의 안정성과 신뢰 하락에 큰 영향을 미칩니다.\r\r\n\r\r\n쿼리에 테넌트 아이디가 사용되도록 강제화하는 방법으로 애플리케이션 레벨에서는 JDBC DataSource를 확장하는 방법, Spring AOP나 AspectJ를 이용한 방법도 고려해 볼 수 있습니다. 그리고 시스템 아키텍처 레벨에서는 데이터베이스 미들웨어인 Apache ShardingSphere도 고려해 볼 수 있습니다. 개인적으로 이런 테넌트 데이터 격리를 클라우드 서비스 전체의 거버넌스로 가져가 중앙에서 관리를 한다면 Apache ShardingSphere와 같은 데이터베이스 미들웨어를 사용하는 것이 더 적절하다고 생각합니다.\r\r\n\r\r\n \r\r\n| 애플레케이션 레벨 | 시스템 아키텍쳐 레벨 |\r\r\n| - | - |\r\r\n|  ![자산 7.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%207.png)|![자산 9-2.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%2092.png) |\r\r\n\r\r\n상대적으로 단순하고 적용하기 쉬운 JDBC DataSource를 확장해 Spring 애플리케이션에서 테넌트 아이디를 강제화하는 방법에 대해 아래에서 알아봅니다.  \r\r\n\r\r\n## JDBC DataSource Wrapper 클래스 구현과  Spring BeanPostProcessor 이용해 테넌트 아이디 강제화\r\r\nSpring에서 쿼리 실행 시 쿼리를 검증하는 방법에는 여러 가지가 있습니다. 여기에서는 쿼리에서 테넌트 아이디 칼럼을 검증하는 `JDBC DataSource Wrapper` 클래스를 구현하고 Spring의 BeanPostProcessor를 이용해 원래 Bean으로 등록된 DataSource를 `Wraper` 클래스로 감싸서 다시 Bean으로 등록해 쿼리의 테넌트 아이디 강제화를 달성하는 방법에 대해 알아보겠습니다. \r\r\n\r\r\n아래 코드는 설명을 위한 예시이므로 실제 구현에서는 추가적인 작업이 필요할 수 있습니다.\r\r\n\r\r\n\r\r\n#### 1. PreparedStatement Wrapper 클래스 구현\r\r\n제일 먼저 PreparedStatement Wrapper 클래스인 `TenantIsolationPreparedStatementWrapper`를 구현합니다. 생성자에서 PreparedSatement와 쿼리를 파라미터로 받아 쿼리를 검증하는 역할을 합니다. \r\r\n\r\r\n아래 코드에서 쿼리를 검사하는 로직은 예시를 위해 단순하게 구현된 코드입니다. 실제 구현에서는 복잡한 쿼리도 검사해야 하기 때문에 SQL Parser를 이용해 쿼리를 검사하는 방법이 더 좋을 수 있습니다. \r\r\n```java\r\r\npublic static class TenantIsolationPreparedStatementWrapper implements PreparedStatement {\r\r\n\tprivate static final String WHERE_CLAUSE = \" tenant_id = ? \";\r\r\n\r\r\n\tprivate final PreparedStatement preparedStatement;\r\r\n\r\r\n\tpublic TenantIsolationPreparedStatementWrapper(PreparedStatement preparedStatement, String sql) {\r\r\n\t\tthis.preparedStatement = preparedStatement;\r\r\n\r\r\n\t\tif (notContainsTenantIdIn(sql)) {\r\r\n\t\t\tthrow new IllegalArgumentException(\"SQL statement must contain tenant_id column in where clause. SQL: \" + sql);\r\r\n\t\t}\r\r\n\t}\r\r\n\r\r\n\tprotected boolean notContainsTenantIdIn(String sql) {\r\r\n\t\tsql = sql.toLowerCase();\r\r\n\r\r\n\t\tif (sql.startsWith(\"show \") || sql.startsWith(\"insert \")) {\r\r\n\t\t\treturn false;\r\r\n\t\t}\r\r\n\r\r\n\t\tint indexOfWhereClause = sql.indexOf(\"where\");\r\r\n\t\tif (indexOfWhereClause == -1) {\r\r\n\t\t\treturn true;\r\r\n\t\t}\r\r\n\r\r\n\t\treturn !sql.substring(indexOfWhereClause).contains(WHERE_CLAUSE);\r\r\n\r\r\n\t}\r\r\n\t\r\r\n\t...\r\r\n\t\r\r\n}\r\r\n```\r\r\n\r\r\n#### 2. Connection Wrapper 클래스 구현\r\r\n두 번째로 PreparedStatement를 생성하는 Connection에 대한 Wrapper 클래스 `TenantIsolationConnectionWrapper`를 구현합니다. 쿼리를 파라미터로 받아 PreparedStatement를 리턴하는 메서드를 오버라이딩해 `TenantIsolationPreparedStatementWrapper`로 감싸서 리턴합니다.\r\r\n\r\r\n\r\r\n```java\r\r\npublic static class TenantIsolationConnectionWrapper implements Connection {\r\r\n\r\r\n\tprivate final Connection connection;\r\r\n\r\r\n\tpublic TenantIsolationConnectionWrapper(Connection connection) {\r\r\n\t\tthis.connection = connection;\r\r\n\t}\r\r\n\r\r\n\r\r\n\t@Override\r\r\n\tpublic Statement createStatement() throws SQLException {\r\r\n\t\tthrow new UnsupportedOperationException(\"Statement is unsafe. Use PreparedStatement.\");\r\r\n\t}\r\r\n\r\r\n\t@Override\r\r\n\tpublic PreparedStatement prepareStatement(String sql) throws SQLException {\r\r\n\t\treturn new TenantIsolationPreparedStatementWrapper(connection.prepareStatement(sql), sql);  // Connection의 PreparedStatement를 감쌉니다.\r\r\n\t}\r\r\n\r\r\n\r\r\n\t... // 이하 생략\r\r\n\t\r\r\n}\r\r\n```\r\r\n\r\r\n#### 3. TenantIsolationDataSourceWrapper\r\r\n세 번째로 DataSource를 감싸 `TenantIsolationConnectionWrapper`를 사용하도록 하는 `TenantIsolationDataSourceWrapper` 클래스를 구현합니다. \r\r\n```java\r\r\npublic class TenantIsolationDataSourceWrapper implements DataSource {\r\r\n    private final DataSource dataSource;\r\r\n\r\r\n    public TenantIsolationDataSourceWrapper(DataSource dataSource) {\r\r\n        this.dataSource = dataSource;\r\r\n    }\r\r\n\t\r\r\n    @Override\r\r\n    public Connection getConnection() throws SQLException {\r\r\n        return new TenantIsolationConnectionWrapper(dataSource.getConnection()); \r\r\n    }\r\r\n\r\r\n    @Override\r\r\n    public Connection getConnection(String username, String password) throws SQLException {\r\r\n        return new TenantIsolationConnectionWrapper(dataSource.getConnection(username, password));\r\r\n    }\r\r\n\t\r\r\n\t... // 이하 생략\r\r\n}\r\r\n```\r\r\n\r\r\n#### 4. TenantIsolationBeanPostProcessor\r\r\n먼저 등록된 DataSource Bean을 받아 `TenantIsolationDataSourceWrapper`로 감싸서 리턴합니다. 이렇게 하면 DataSource Bean으로 `TenantIsolationDataSourceWrapper`가 사용되어 실행되는 쿼리를 검증해 테넌트 데이터 격리를 강제화할 수 있습니다.\r\r\n\r\r\n```java\r\r\n@Component\r\r\npublic class TenantIsolationBeanPostProcessor implements BeanPostProcessor {\r\r\n    @Override\r\r\n    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\r\r\n        if (bean instanceof DataSource && !(bean instanceof TenantIsolationDataSourceWrapper)) { // TenantIsolationDataSourceWrapper가 아닌 DataSource를 감쌉니다.\r\r\n            return new TenantIsolationDataSourceWrapper((DataSource) bean);\r\r\n        }\r\r\n        return bean;\r\r\n    }\r\r\n}\r\r\n```\r\r\n\r\r\n위에서 언급한 '테넌트 데이터 격리에 실패한 쿼리'처럼 WHERE에 **tenant_id** 칼럼이 없다면 아래와 같이 예외를 발생시킵니다.\r\r\n\r\r\n```\r\r\nCaused by: java.lang.IllegalArgumentException: SQL statement must contain tenant_id column in where clause. SQL: SELECT * FROM message WHERE message_id = #{messageId};\r\r\n\tat com.nhncloud.tenant.isolation.datasource.TenantIsolationDataSourceWrapper$TenantIsolationPreparedStatementWrapper.(TenantIsolationDataSourceWrapper.java:391)\r\r\n\tat com.nhncloud.tenant.isolation.datasource.TenantIsolationDataSourceWrapper$TenantIsolationConnectionWrapper.prepareStatement(TenantIsolationDataSourceWrapper.java:110)\r\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\r\n```\r\r\n \r\r\n\r\r\n\r\r\n# 3. 테넌트 데이터 보호\r\r\n\r\r\n멀티 테넌트 데이터 격리를 위해 테넌트 아이디 강제화도 중요하지만, 멀티 테넌트 데이터 격리가 실패했을 때 리스크를 최소화하기 위한 방법도 중요합니다. 제일 일반적인 방법은 테넌트 데이터를 테넌트별 고유 키로 암호화하여 저장하는 것입니다. 이렇게 하면 테넌트 데이터 격리에 실패하더라도 다른 테넌트는 해당 데이터를 해석할 수 없게 되어 테넌트 데이터를 보호할 수 있습니다. 아래에서 이러한 방법에 대해 더 구체적으로 알아보겠습니다.\r\r\n\r\r\n## 테넌트별 키를 통한 암복호화\r\r\n\r\r\n멀티 테넌트 환경에서 데이터 격리가 실패한 경우, 다른 테넌트의 데이터가 노출되는 리스크를 최소화하기 위한 한 가지 방법 중 하나는 테넌트 별로 고유 키를 부여하고 이 키를 이용해 암호화하는 것입니다. 이 방법은 같은 데이터베이스 및 테이블을 공유하는 상황에서도 각 테넌트의 데이터는 각 테넌트의 암호화 키로 암호화되어 저장되기 때문에 다른 테넌트의 데이터가 노출되어도 해석할 수 없습니다. \r\r\n\r\r\n\r\r\n| 테넌트 아이디를 이용한 암호화 | 외부 키 관리 서비스를 이용한 암호화 |\r\r\n| - | - |\r\r\n|![자산 10.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%2010.png)\n- 제일 단순한 방법입니다.\n- 보안 측면에서는 다소 취약할 수 있지만, 구조가 단순하여 성능 면에서 이점이 있을 수 있습니다.  |![자산 11.png](https://image.toast.com/aaaadh/real/2024/techblog/uC790uC0B0%2011.png)\n- NHN Cloud SKM(Secure Key Manager), Vault, AWS KMS, 같은 기밀 데이터나 키를 관리하는 서비스에 테넌트의 암호화 키를 관리하면 보안을 더 강화할 수 있습니다.\n- 키 저장소가 외부에 있기 때문에 장애 상황 시 결함 허용성(fault tolerance) 등 고려해야 될 부분이 많아 집니다.\n- 만약,  키 관리 서비스에서 테넌트 데이터의 암/복호화를 진행한다면 성능적인 부분도 고려해야 합니다.  |\r\r\n\r\r\n# 결론\r\r\n멀티 테넌트 환경에서 테넌트 데이터 격리는 보안을 보장하기 위한 필수 요소입니다. 특히 여러 테넌트가 동일한 데이터베이스와 테이블을 공유하는 상황에서 테넌트 간의 데이터 접근을 방지하고 격리 수준을 강화하는 것은 클라우드 서비스의 신뢰성을 높이는 중요한 과제입니다.\r\r\n\r\r\n행 단위, 테이블 단위, 데이터베이스 단위의 격리 방법은 각각 장단점이 있으며, 각 서비스의 요구 사항에 따라 적합한 방식을 선택해야 합니다. 더 높은 수준의 데이터 격리를 제공하는 방법은 보안성과 안정성을 높일 수 있지만, 운영 비용의 증가도 고려해야 합니다.\r\r\n\r\r\n시큐어 코딩 원칙을 적용하여 쿼리 내에서 테넌트 아이디를 강제하는 것과 같은 기술적 조치는 데이터 격리 실패로 인한 보안 위험을 크게 줄일 수 있습니다. 그리고 이러한 기술적 접근과 더불어 테넌트별 암호화 키를 사용하여 데이터를 보호하는 방법은 데이터 노출 리스크를 최소화하는 추가적인 보안 장치로 작용합니다.\r\r\n\r\r\n결론적으로, 멀티 테넌트 환경에서 성공적인 데이터 격리는 보안성, 비용 효율성, 성능의 균형을 고려하는 전략적인 접근을 요구하며, 이를 통해 안정적이고 신뢰할 수 있는 서비스를 제공할 수 있습니다.",
        "isoDate": "2024-10-21T05:48:39.000Z"
      }
    ]
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": [
      {
        "title": "작은것에도 관심을 기울이자 - Float, Double, BigDecimal 편",
        "link": "https://velog.io/@sweet_sumin/%EC%9E%91%EC%9D%80%EA%B2%83%EC%97%90%EB%8F%84-%EA%B4%80%EC%8B%AC%EC%9D%84-%EA%B8%B0%EC%9A%B8%EC%9D%B4%EC%9E%90-Float-Double-BigDecimal-%ED%8E%B8",
        "pubDate": "Fri, 18 Oct 2024 15:22:24 GMT",
        "content": "<p>float과 double에 관심을 기울인적 있는가?\nfloat과 double은 우리가 프로그래밍을 배우면서 정말 바로 나오는 애들 중 하나이다. \n그냥 있는거고 원래 있었던 애들.. 회사에서도 사실 잘 사용하지 않아왔었는데 문득 이런 생각이 들었다 </p>\n<blockquote>\n<p>도대체 왜 만들었지? 🤔</p>\n</blockquote>\n<p>사실 프로그래밍 공부를 하면서 점점 중요하다가 느끼는 것 중 하나가 &#39;호기심을 잃지 않는 것이다&#39; 처음에 공부를 시작할때는 모든 것이 새로웠고 신기했기에 어디에나 호기심이 가득한 상태로 공부해왔다. 그러나, 시간이 지나고 직장 생활을 하다보니 기존에 존재를 알고 있던 것을 정말 깊숙히 알고 있는 것으로 착각하고, 어렵고 신기한것만 탐구하려는 성향이 강해짐을 느껴진다. 이번에 float과 double에 대해 공부하면서 이런 기초적인 것에도 많은 것이 담겨있는데 난 이제까지 알고 있다고 착각하고 있었구나 라는 것을 느낀다. </p>\n<p>자, 본격적으로 이제 내가 공부한 내용을 차근차근 읊어볼까~?</p>\n<h3 id=\"float과-double-차이점에-대해-알고-있어\">Float과 Double 차이점에 대해 알고 있어?</h3>\n<p>float과 double은 모두 숫자를 저장하기 위한 기본 자료형이다. \nfloat은 32비트의 저장소로 소수점 이하 약 7자리의 정확도를 가지고 있고, double은 64비트의 저장소로 소수점 이하 약 15자리의 정확도를 가진다. </p>\n<p>여기서 우리가 주목해야 할 점은 </p>\n<ul>\n<li>정확도에 차이가 있다. </li>\n<li><blockquote>\n<p>double이 float보다 정확도가 높구나?</p>\n</blockquote>\n</li>\n<li>메모리에 차이가 있다 </li>\n<li><blockquote>\n<p>float이 double의 절반의 메모리를 사용한다. 따라서 메모리 효율성이 float이 더 높다. 그럼 double보다 더 많은 데이터를 다룰 수 있다는 것이고 연산속도도 더 빠르겠네~!</p>\n</blockquote>\n</li>\n<li>부동소수점을 위한 기본 자료형이 float과 double이다. </li>\n</ul>\n<h3 id=\"부동소수점\">부동소수점?</h3>\n<ul>\n<li>실수를 표현하는 방식 중 하나</li>\n<li>숫자를 지수와 가수로 나누어 저장하여 소수점의 위치가 자유롭게 변할 수 있는 방식</li>\n</ul>\n<p>&quot;부동&quot;은 &quot;떠다니다&quot; 라는 의미로, 소수점의 위치가 고정되어 있지 않고 숫자의 크기에 따라 위치가 변할 수 있음을 나타낸다.그래서 부동소수점은 매우 큰 수나 작은 수를 지수의 크기에 따라 동적으로 표현 할 수 있다. 즉, 넓은 수자 범위를 효율적으로 표현할 수 있다는 것</p>\n<p>-&gt; 모든 실수를 정확하게 표현 할 수 없다</p>\n<h3 id=\"부동소수점의-한계-예시\">부동소수점의 한계 예시</h3>\n<p>난 이거 알아볼때 사실 감동이었다.ㅎㅎ </p>\n<p>1) 0.1\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/9cb35b6a-7b0d-4111-9e5d-d58bdcd3de8c/image.png\" alt=\"\">\n( 아, 이건 번외인데 +라는 기호는 쓰지말자..ㅎ)</p>\n<p>단순히 작동하면 출력 결과가\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/72f9a531-018b-4cec-ae5a-6d0b2d8cd79e/image.png\" alt=\"\">\n0.1로 나온다. 그럼 정확한거잖아?? 라고 생각할 수 있다. 하지만 이는 반올림의 결과이다 실제로 내부의 값을 bigDecimal을 이용해 확인해보면</p>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/40b50a5d-fe2e-4ff4-abed-c443f38e5b37/image.png\" alt=\"\">\n결과는? 두둥\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/1276f475-27a1-480f-915d-0b21e863f62f/image.png\" alt=\"\"></p>\n<p>정확히 0.1이 아님을 알 수 있다. </p>\n<p>2) 0.2와 0.1의 덧셈\n부동소수점의 정밀도로 인해 기대값이 0.3이 아닐 수 있다. \n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/e2c58e4b-793d-45a3-80cf-42a63e06ff63/image.png\" alt=\"\"></p>\n<p>의 결과는?\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/5fcf21bb-46eb-421d-87fa-cdb9a0a2d6ca/image.png\" alt=\"\"></p>\n<p>정확히 0.3이 안나오는데 정확성이 중요한 곳에서는 어떻게 부동소수점을 쓰겠는가?</p>\n<p>그럼 정확성이 중요할 때는 뭘 사용해야하지? \nBigDecimal을 사용해야한다.</p>\n<h3 id=\"bigdecimal\">BigDecimal</h3>\n<p>위의 덧셈 연산을 그대로 bigDecimal을 적용해보자면\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/2ea58fa1-3c53-4cd3-bba7-e94c233aa37c/image.png\" alt=\"\"></p>\n<p>의 결과는\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/5cd35798-e547-4228-b7d6-777501e8def4/image.png\" alt=\"\">\n으로 정확한 숫자가 나오는 것을 확인할 수 있다. 그래서 정확도가 필요한 상황이라면 BigDecimal을 사용해야한다. 하지만 단점도 존재한다. </p>\n<ul>\n<li>연산 속도가 float, double보다 느리다. </li>\n<li>메모리 사용량이 높다</li>\n<li>성능 저하</li>\n</ul>\n<p>BigDecimal은 참조형이다. 즉 매번 덧셈, 곱셈, 나눗셈과 같은 기본 연산에서도 객체를 생성해야한다. 객체를 새로 생성한다는 말은 즉, 메모리를 추가로 사용한다는 말이다. 이는 곧 숫자의 크기가 커질 수록 더많은 연산 자원을 소모해서 성능 저하를 발생시킬 가능성이 있다는 말이다.</p>\n<h3 id=\"선택-정리\">선택 정리</h3>\n<ul>\n<li>느리지만 높은 정확도가 필요하다면?\nBigDecimal</li>\n<li>높은 정밀도는 필요하지 않지만 많은 소수점 연산을 빠르게 처리해야하거나 메모리 효율이 중요한 경우? \nfloat</li>\n<li>float보다는 정밀도가 높고 성능 저하가 없으며 메모리에 대한 여유가 있으면? \nDouble</li>\n</ul>\n",
        "contentSnippet": "float과 double에 관심을 기울인적 있는가?\nfloat과 double은 우리가 프로그래밍을 배우면서 정말 바로 나오는 애들 중 하나이다. \n그냥 있는거고 원래 있었던 애들.. 회사에서도 사실 잘 사용하지 않아왔었는데 문득 이런 생각이 들었다 \n도대체 왜 만들었지? 🤔\n사실 프로그래밍 공부를 하면서 점점 중요하다가 느끼는 것 중 하나가 '호기심을 잃지 않는 것이다' 처음에 공부를 시작할때는 모든 것이 새로웠고 신기했기에 어디에나 호기심이 가득한 상태로 공부해왔다. 그러나, 시간이 지나고 직장 생활을 하다보니 기존에 존재를 알고 있던 것을 정말 깊숙히 알고 있는 것으로 착각하고, 어렵고 신기한것만 탐구하려는 성향이 강해짐을 느껴진다. 이번에 float과 double에 대해 공부하면서 이런 기초적인 것에도 많은 것이 담겨있는데 난 이제까지 알고 있다고 착각하고 있었구나 라는 것을 느낀다. \n자, 본격적으로 이제 내가 공부한 내용을 차근차근 읊어볼까~?\nFloat과 Double 차이점에 대해 알고 있어?\nfloat과 double은 모두 숫자를 저장하기 위한 기본 자료형이다. \nfloat은 32비트의 저장소로 소수점 이하 약 7자리의 정확도를 가지고 있고, double은 64비트의 저장소로 소수점 이하 약 15자리의 정확도를 가진다. \n여기서 우리가 주목해야 할 점은 \n정확도에 차이가 있다. \n\ndouble이 float보다 정확도가 높구나?\n메모리에 차이가 있다 \n\nfloat이 double의 절반의 메모리를 사용한다. 따라서 메모리 효율성이 float이 더 높다. 그럼 double보다 더 많은 데이터를 다룰 수 있다는 것이고 연산속도도 더 빠르겠네~!\n부동소수점을 위한 기본 자료형이 float과 double이다. \n부동소수점?\n실수를 표현하는 방식 중 하나\n숫자를 지수와 가수로 나누어 저장하여 소수점의 위치가 자유롭게 변할 수 있는 방식\n\"부동\"은 \"떠다니다\" 라는 의미로, 소수점의 위치가 고정되어 있지 않고 숫자의 크기에 따라 위치가 변할 수 있음을 나타낸다.그래서 부동소수점은 매우 큰 수나 작은 수를 지수의 크기에 따라 동적으로 표현 할 수 있다. 즉, 넓은 수자 범위를 효율적으로 표현할 수 있다는 것\n-> 모든 실수를 정확하게 표현 할 수 없다\n부동소수점의 한계 예시\n난 이거 알아볼때 사실 감동이었다.ㅎㅎ \n1) 0.1\n\n( 아, 이건 번외인데 +라는 기호는 쓰지말자..ㅎ)\n단순히 작동하면 출력 결과가\n\n0.1로 나온다. 그럼 정확한거잖아?? 라고 생각할 수 있다. 하지만 이는 반올림의 결과이다 실제로 내부의 값을 bigDecimal을 이용해 확인해보면\n\n결과는? 두둥\n\n정확히 0.1이 아님을 알 수 있다. \n2) 0.2와 0.1의 덧셈\n부동소수점의 정밀도로 인해 기대값이 0.3이 아닐 수 있다. \n\n의 결과는?\n\n정확히 0.3이 안나오는데 정확성이 중요한 곳에서는 어떻게 부동소수점을 쓰겠는가?\n그럼 정확성이 중요할 때는 뭘 사용해야하지? \nBigDecimal을 사용해야한다.\nBigDecimal\n위의 덧셈 연산을 그대로 bigDecimal을 적용해보자면\n\n의 결과는\n\n으로 정확한 숫자가 나오는 것을 확인할 수 있다. 그래서 정확도가 필요한 상황이라면 BigDecimal을 사용해야한다. 하지만 단점도 존재한다. \n연산 속도가 float, double보다 느리다. \n메모리 사용량이 높다\n성능 저하\nBigDecimal은 참조형이다. 즉 매번 덧셈, 곱셈, 나눗셈과 같은 기본 연산에서도 객체를 생성해야한다. 객체를 새로 생성한다는 말은 즉, 메모리를 추가로 사용한다는 말이다. 이는 곧 숫자의 크기가 커질 수록 더많은 연산 자원을 소모해서 성능 저하를 발생시킬 가능성이 있다는 말이다.\n선택 정리\n느리지만 높은 정확도가 필요하다면?\nBigDecimal\n높은 정밀도는 필요하지 않지만 많은 소수점 연산을 빠르게 처리해야하거나 메모리 효율이 중요한 경우? \nfloat\nfloat보다는 정밀도가 높고 성능 저하가 없으며 메모리에 대한 여유가 있으면? \nDouble",
        "guid": "https://velog.io/@sweet_sumin/%EC%9E%91%EC%9D%80%EA%B2%83%EC%97%90%EB%8F%84-%EA%B4%80%EC%8B%AC%EC%9D%84-%EA%B8%B0%EC%9A%B8%EC%9D%B4%EC%9E%90-Float-Double-BigDecimal-%ED%8E%B8",
        "isoDate": "2024-10-18T15:22:24.000Z"
      }
    ]
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "바퀴벌레의 길",
        "link": "https://www.thestartupbible.com/2024/10/the-cockroach-way.html",
        "pubDate": "Sun, 20 Oct 2024 21:34:00 +0000",
        "content:encodedSnippet": "지난주 화, 수 이틀 동안 우리의 가장 큰 연례행사인 조합원총회(AGM: Annual General Meeting)를 서울에서 했다. 한국뿐만이 아니라 외국에서도 투자자분들이 많이 참석했고, 우리가 투자한 창업가분들도 꽤 많이 참석해서 참 바쁘기도 했지만, 나도 재미있었고, 우리 모두 의미 있고 보람찬 48시간이었던 것 같다.\n이 행사에서 나는 해마다 스트롱벤처스가 그해에 했던 일들을 요약해서 투자자분들과 공유하는데, 이번 행사에서도 올해 좋았던 하이라이트와 별로 안 좋았던 로우라이트를 정리해서 발표해 봤다. 올해 내가 뽑은 최고의 하이라이트는 바로 우리가 투자하는 우리의 창업가들이었다. 12년 동안 우리의 포트폴리오 창업가분들과 같이 일했는데, 이렇게 incredible하고 extraordinary한 사람들이 존재한다는 게 신기할 정도로 내가 깊게 존경하는 분들이다. 이분들이 없으면 스트롱이 존재할 수 없다.\n올해같이 어려운 환경에서 잘 버티면서 사업을 운영하는 우리 창업가분들을 나는 다시 “바퀴벌레”라고 부르기 시작했다. 실은, 그동안 주위 사람들이 바퀴벌레라는 단어가 혐오감을 준다고 싫어해서 잘 사용하지 않았는데, 이제 나는 우리 창업가들은 바퀴벌레 창업가라고 공개적으로 말하고 다닌다. 물론, 엄청 좋은 의미에서.\n바퀴벌레라고 하면 다들 싫어하지만, 이 곤충들은 대단한 특징을 몇 가지 가지고 있고, 신기하게도 우리 창업가들도 아주 비슷한, 다음과 같은 특징이 있다:\n1/ 강한 골격 – 바퀴벌레는 아주 견고하지만, 동시에 유연한 골격을 갖고 있다. 우리 창업가분들도 강한 정신력, 그리고 강한 체력을 갖고 있다. 동시에 이들은 충격을 완화하고 흡수할 수 있는 유연함도 있다.\n2/ 강한 면역력 – 시간이 지날수록 바퀴벌레는 웬만한 살충제에 대한 내성을 스스로 만들어낸다. 우리 창업가들도 웬만한 어려움에 대한 내성이 생겨서 고난과 역경에 대한 강한 면역력을 갖고 있다.\n3/ 강한 적응력 – 바퀴벌레와 창업가 모두 완벽하게 일치하는 속성이다. 바퀴벌레는 외부 환경에 따라서 DNA를 스스로 바꿀 수 있는 놀라운 능력이 있는데, 실은 우리 창업가들도 외부 환경에 따라서 지속적으로 스스로를 변화시킨다. 목표와 비전은 명확하지만, 상황에 따라서 전략을 수정하고, 실행 방법을 계속 바꾸는 게, 마치 자신의 DNA를 외부 환경에 따라서 바꾸는 바퀴벌레랑 크게 다르지 않다.\n4/ 강한 생존력 – 바퀴벌레는 오랜 기간 동안 음식이나 물 없이 생존할 수 있다. 우리 창업가들은 음식이나 물 없이 살 순 없지만, 아주 적은 자원으로 매우 많은 일을 할 수 있는 능력을 갖췄다. 어쨌든, 이들은 척박한 환경에서 해야 할 일을 하기 위해서 모든 방법을 동원해서 살아남을 수 있다. 특히, 바퀴벌레들은 머리가 날아가도 최대 일주일 동안 살 수 있다고 하는데, 뭐, 사람은 이렇게 할 순 없지만, 어쨌든 우리 창업가들은 이가 없으면 잇몸으로 살아남을 수 있다.\n5/ 강한 기동력 – 이건 내가 강조할 필요도 없다. 바퀴벌레가 빠르다는 건 누구나 다 알고 있다. 우리 창업가들도 엄청 빠르고 민첩하게 움직이기 때문에 가끔 이들보다 훨씬 더 돈과 인력이 많은 대기업도 이길 수 있다.\n이 다섯 가지 놀라운 특징을 한 문장으로 요약하면, “바퀴벌레 창업가는 절대로 죽지 않는다.”이다. 이들은 아무리 밟아도 죽지 않고, 계속 다시 찾아오고, 계속 성장한다. 지난 12년 동안 매일 매일 이런 바퀴벌레 창업가들과 시간을 보내고 있는데, 이들을 만나면 만날수록 대단하다는 생각과 존경심이 생긴다.\n우리는 이런 바퀴벌레들을 지원해 주는 사람들이다. 가끔은 이들이 한계를 뛰어넘을 수 있게 뒤에서 계속 푸쉬한다. 어떤 날은 이들이 벼랑에서 떨어지지 않게 앞에서 끌어준다. 하지만, 주로 이들이 뒤로 처지지 않고, 번아웃 되지 않게, 옆에서 같이 걷거나 뛰면서 응원해 준다. 나는 어릴 적 바퀴벌레를 정말 싫어했는데, 투자하면 할수록 이들이 대단한 생명체라는 생각을 하게 됐다.\n오늘도 바퀴벌레같이 절대로 죽지 않고 허슬하는 한국의 모든 창업가들 파이팅하길. Never die!",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/10/the-cockroach-way.html#respond",
        "content": "지난주 화, 수 이틀 동안 우리의 가장 큰 연례행사인 조합원총회(AGM: Annual General Meeting)를 서울에서 했다. 한국뿐만이 아니라 외국에서도 투자자분들이 많이 참석했고, 우리가 투자한 창업가분들도 꽤 많이 참석해서 참 바쁘기도 했지만, 나도 재미있었고, 우리 모두 의미 있고 보람찬 48시간이었던 것 같다. 이 행사에서 나는 해마다 스트롱벤처스가 그해에 했던 일들을 요약해서 투자자분들과 공유하는데, 이번 행사에서도 올해 좋았던(...)",
        "contentSnippet": "지난주 화, 수 이틀 동안 우리의 가장 큰 연례행사인 조합원총회(AGM: Annual General Meeting)를 서울에서 했다. 한국뿐만이 아니라 외국에서도 투자자분들이 많이 참석했고, 우리가 투자한 창업가분들도 꽤 많이 참석해서 참 바쁘기도 했지만, 나도 재미있었고, 우리 모두 의미 있고 보람찬 48시간이었던 것 같다. 이 행사에서 나는 해마다 스트롱벤처스가 그해에 했던 일들을 요약해서 투자자분들과 공유하는데, 이번 행사에서도 올해 좋았던(...)",
        "guid": "https://www.thestartupbible.com/?p=9246",
        "categories": [
          "Uncategorized",
          "failure",
          "FoundersAtWork",
          "hustle",
          "inspiring",
          "Strong"
        ],
        "isoDate": "2024-10-20T21:34:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "브랜드가 되기까지",
        "link": "https://www.thestartupbible.com/2024/10/on-becoming-a-brand.html",
        "pubDate": "Wed, 16 Oct 2024 21:36:00 +0000",
        "content:encodedSnippet": "우리는 소프트웨어가 핵심인, 소위 말하는 전통적인 테크 회사에도 많이 투자하지만, 겉으로 봤을 땐 테크가 핵심이 아닌 회사에도 많이 투자한다. 대표적인 사례가 소비자들이 일상생활에서 구매해서 사용하는 제품을 만드는 소비재 브랜드 회사들인데, 화장품, 음식, 의류 등이 이 카테고리에 포함된다. 우린 이 카테고리에 상당히 많이 투자했고, 지금도 계속 좋은 창업가가 있으면 투자하고 있는데, 이 분야에 투자하면 할수록 돈도 많이 들고, 안정적인 사업으로 성장하는 길이 멀고 험하다는 걸 매일 느끼면서 매일 새로운 것들을 배우고 있다.\n뭔가를 제조해서 판매한다는 건, 소프트웨어 사업의 큰 장점 중 하나인 “zero 한계 비용”의 이점이 없다는 뜻이다. 소프트웨어는 만드는 과정이 힘들고, 돈이 들지만, 일단 만들어 놓으면 한 개를 판매하나 10,000개를 판매하나 생산비는 증가하지 않지만, 반려동물 사료를 만드는 사업을 하면 1개 만들어서 판매하는 것과 10,000개 만들어서 판매하는 건, 들어가는 비용에 큰 차이가 난다.\n그리고 초기 스타트업이 자체적인 생산 시스템을 갖추는 건 어렵기 때문에 대부분 외부 공장에 OEM 제조를 위탁하는데, 이런 제조 방식에는 회사에 여러 가지로 불리한 단점이 존재한다. 일단 미래에 만들어질 매출에 대해서 오늘 제품을 만들어야 하는데, 그 제조 비용은 대부분 매출이 만들어지기 전에 100% 집행되어야 한다. 또한, 제조 수량이 많지 않으면 최소 주문 수량이라는 게 있어서 최소로 반드시 나가야 하는 비용이 발생한다. 예를 들어 제조 비용이 3,000원이고, 실제 판매가는 10,000원인 사료를 10,000개 만들기 위해서는 공장에 오늘 즉시 지급해야 하는 비용은 3,000만 원이다. 물론 이 3,000만 원으로 만드는 제품이 다 팔리면 우리에게 들어오는 매출은 1억 원이라서 두 개의 숫자만 비교해 보면 좋은 사업이지만, 1억 원이라는 매출이 앞으로 3개월에 걸쳐서 입금될지, 2년에 걸쳐서 입금될지 모르기 때문에 항상 현금이 잠기는 문제가 발생한다. 그리고 중간 중간에 계속 여러 가지 제품을 제조해야 하므로 나가는 돈은 항상 발생하는데, 이게 매출로 회수되려면 너무 오랜 시간이 걸려서 항상 재정 상태는 좋지 않다. 여기에다가 시장의 인지도가 낮은 새로운 제품이기 때문에 계속 마케팅해야 하는데, 이렇게 따져보면 어느 정도 인지도가 발생하고, 어느 정도 판매 물량이 항상 보장되기 전까지, 이런 사업은 절대로 돈을 벌 수가 없는 악성 사이클에 빠지게 된다.\n이런 사업이 조금이라도 현금 걱정 없이 사업을 하기 위해서는 그 회사 자체가 좋은 브랜드가 돼야 한다. 단순히 좋은 제품을 팔기 위해서는 이 제품이 왜 좋고, 어떤 장점들이 있는지를 한없이 홍보해야 한다. 여기엔 그만큼 마케팅 비용이 필요한데, 좋은 제품이 잘 팔리는 건 회사엔 축복이지만, 그 뒤의 현금 흐름은 축복이 아니라 저주가 될 수 있다. 제품이 계속 팔리면, 결국엔 이 제품을 계속 주문하고 만들어야 하는데 이게 다 돈이다. 그리고 계속 마케팅해야 하는데 이 또한 다 돈이다. 그렇다고 다른 회사들은 가만히 있을까. 경쟁사들이 계속 출현해서 서로 더 좋은 제품이라고 마케팅하므로 마케팅 비용은 계속 오른다. 아마도 이런 사업을 하는 대표들은 내가 무슨 말을 하는지 잘 알 것이다. 매일매일 경험하는 현상이니까.\n이 악성 고리를 끊기 위해서는, 우리 제품이 좋다고 마케팅할 필요가 없는 뭔가 강력한 한 방이 필요한데, 이게 바로 좋은 브랜드가 되는 것이다. 좋은 브랜드는 좋은 제품보다 한 단계 위에 있는 강력한 무형의 권력이다. 좋은 브랜드가 되어 소비자들의 머리와 가슴속에 그 브랜드가 각인되는 순간, 엄청난 해자가 만들어진다. 명품들이 그 대표적인 사례라고 난 생각한다. 샤넬이나 에르메스 같은 명품은 워낙 강력한 브랜드가 됐기 때문에, 이들이 만드는 제품은 소비자들이 웬만하면 따지지도 않고 묻지도 않고 그냥 구매한다. 그냥 “저 브랜드가 만드는 제품은 당연히 좋지.”라는 생각이 아주 강하게 뇌리에 박히고, 그 생각은 자연스럽게 손으로 이어지면서 지갑을 열게 된다.\n그래서 우리가 투자사 대표들에게 항상 이야기하는 게 있는데, “가장 강력한 해자는 특정 분야에 대해서 생각하자마자 가장 먼저 떠오르는 브랜드가 되는 것이에요. 즉, 영어에서 말하는 household brand가 되는 것만큼 강력한 진입장벽은 없습니다.”이다.\n하지만, 스타트업이 강력한 브랜드를 만들기 위해서 우리가 아는 많은 명품처럼 수백 년을 기다릴 순 없다. 한정된 돈, 시간, 자원을 기반으로 가장 빠른 시간 내에 가장 강력한 브랜드를 만들기 위해선 나만의 방식과 노력이 필요하다. 다시 원점으로 돌아오는 것 같지만, 좋은 브랜드가 되기 위해서는 기본적으로 가장 좋은 제품을 만들어야 하고, 가장 좋은 마케팅을 해야 한다. 그리고 일단은 소비자들에게 많이 노출돼야 하고, 많이 팔려야 한다. 제품이 좋지 않으면 아무리 많이 노출돼도 잘 안 팔리지만, 좋은 제품이라면 많이 노출되면 많이 팔린다. 이런 식으로 가면서 중간마다 계속 찾아오는 현금 흐름의 문제를 잘 해결하고, 망하지 않고 계속 링에서 버티다 보면 결국엔 누구나 다 알고 인정하는 브랜드를 만들 수 있다. \nGood luck.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/10/on-becoming-a-brand.html#comments",
        "content": "우리는 소프트웨어가 핵심인, 소위 말하는 전통적인 테크 회사에도 많이 투자하지만, 겉으로 봤을 땐 테크가 핵심이 아닌 회사에도 많이 투자한다. 대표적인 사례가 소비자들이 일상생활에서 구매해서 사용하는 제품을 만드는 소비재 브랜드 회사들인데, 화장품, 음식, 의류 등이 이 카테고리에 포함된다. 우린 이 카테고리에 상당히 많이 투자했고, 지금도 계속 좋은 창업가가 있으면 투자하고 있는데, 이 분야에 투자하면 할수록 돈도(...)",
        "contentSnippet": "우리는 소프트웨어가 핵심인, 소위 말하는 전통적인 테크 회사에도 많이 투자하지만, 겉으로 봤을 땐 테크가 핵심이 아닌 회사에도 많이 투자한다. 대표적인 사례가 소비자들이 일상생활에서 구매해서 사용하는 제품을 만드는 소비재 브랜드 회사들인데, 화장품, 음식, 의류 등이 이 카테고리에 포함된다. 우린 이 카테고리에 상당히 많이 투자했고, 지금도 계속 좋은 창업가가 있으면 투자하고 있는데, 이 분야에 투자하면 할수록 돈도(...)",
        "guid": "https://www.thestartupbible.com/?p=9241",
        "categories": [
          "Uncategorized",
          "competition",
          "FoundersAtWork",
          "hardware",
          "marketing",
          "software",
          "Strong",
          "technology"
        ],
        "isoDate": "2024-10-16T21:36:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "kimchihill",
        "title": "10 Key Strategies for Success at Retail Conferences: Lessons from Shoptalk 2024",
        "link": "https://kimchihill.com/2024/10/21/10-key-strategies-for-success-at-retail-conferences-lessons-from-shoptalk-2024/?utm_source=rss&utm_medium=rss&utm_campaign=10-key-strategies-for-success-at-retail-conferences-lessons-from-shoptalk-2024",
        "pubDate": "Sun, 20 Oct 2024 22:29:53 +0000",
        "content:encodedSnippet": "I recently attended Shoptalk, the largest retail conference in the U.S., held in Chicago. After spending a week there, I wanted to share 10 key takeaways I learned from the event. \nOver the past decade, I’ve participated in numerous conferences, but this time felt different. Unlike in the past when I introduced Sendbird as the communication platforms or chat APIs, the response to our AI chatbot—especially with generative AI—was far more intuitive and engaging. I realized once again how important it is to be in a market that’s not only large but also timely, capturing widespread attention.\nHowever, not everyone attending these events is a true buyer. It’s crucial to target conferences where genuine buyers are present. For example, while Sendbird often participates in Product Manager-focused events because they are key users of our solutions, these attendees are usually there to network, not to make purchasing decisions. In contrast, at Shoptalk, many decision-makers attended with the specific goal of exploring technology purchases, making a significant difference.\nWhen presenting various product lines, always start with the simplest and easiest-to-understand offering. For instance, saying, “Sendbird offers AI chatbot solutions, along with a range of conversational UI services favored by younger consumers,” proved to be an effective approach.\nAnother important strategy is offering personalized demos, even from a small booth. Although Sendbird has traditionally sold communication platform services (cPaaS), which limited us to showcasing APIs, SDKs, and UI kits, this time, we saw great success by tailoring personalized demos to visitors’ specific needs.\nBooth design and giveaways also play a vital role in attracting attention. Everything should be tailored to suit a retail audience. For this event, we chose luxury items like Chanel wallets and La Mer face cream as giveaways, which resonated strongly with retail attendees. This was in stark contrast to other tech vendors who leaned into Silicon Valley aesthetics and developer swag like stress balls and tumblers.\nSecuring meetings before the event was another critical success factor. Before Shoptalk, we locked in 29 meetings, making around 200-300 outbound efforts. Whether or not all meetings happened as planned, the outreach resulted in many people visiting our booth, leading to stronger relationships.\nConferences are not just a marketing activity—they are a sales opportunity too. Successful sales is not only about providing business value but also about creating enjoyable interactions. Warmly greeting booth visitors, understanding their needs, and engaging in meaningful conversations led to positive outcomes.\nWhen preparing for a conference, managing jet lag is key. Relying solely on adrenaline without proper adjustment will drain your energy at crucial moments. It’s essential to arrive 2-3 days early to adapt to the time zone or, at the very least, start preparing several days ahead.\nAt this event, some vendors attempted to draw visitors with snacks like coffee or popcorn. However, since Shoptalk provided ample food and beverages, these efforts were less effective. Ironically, Bigcommerce’s freshly baked chocolate chip cookies were a big hit despite the abundance of other options.\nPromoting your brand outside the booth is equally important. On the last day, we gave away leftover Starbucks gift cards to Shoptalk staff, which boosted booth traffic. Additionally, placing Sendbird-branded items like wipes or notepads in dining or quiet meeting areas could be an innovative marketing strategy. This would allow us to reach areas not typically targeted by other vendors, providing a unique opportunity to stand out.\nI’ll wrap this up with a 30-second video I made at the airport on my way home, capturing the fun and memorable moments of the event.\n\n\n\n\n\n\nThe post 10 Key Strategies for Success at Retail Conferences: Lessons from Shoptalk 2024 appeared first on Kimchi hill.",
        "dc:creator": "kimchihill",
        "comments": "https://kimchihill.com/2024/10/21/10-key-strategies-for-success-at-retail-conferences-lessons-from-shoptalk-2024/#respond",
        "content": "<p>I recently attended Shoptalk, the largest retail conference in the U.S., held in Chicago. After spending a week there, I wanted to share 10 key takeaways I learned from the event. Over the past decade, I’ve participated in numerous conferences, but this time felt different. Unlike in the past when I introduced Sendbird as the<a class=\"more-link\" href=\"https://kimchihill.com/2024/10/21/10-key-strategies-for-success-at-retail-conferences-lessons-from-shoptalk-2024/\">Continue reading <span class=\"screen-reader-text\">\"10 Key Strategies for Success at Retail Conferences: Lessons from Shoptalk 2024\"</span></a></p>\nThe post <a href=\"https://kimchihill.com/2024/10/21/10-key-strategies-for-success-at-retail-conferences-lessons-from-shoptalk-2024/\">10 Key Strategies for Success at Retail Conferences: Lessons from Shoptalk 2024</a> appeared first on <a href=\"https://kimchihill.com\">Kimchi hill</a>.",
        "contentSnippet": "I recently attended Shoptalk, the largest retail conference in the U.S., held in Chicago. After spending a week there, I wanted to share 10 key takeaways I learned from the event. Over the past decade, I’ve participated in numerous conferences, but this time felt different. Unlike in the past when I introduced Sendbird as theContinue reading \"10 Key Strategies for Success at Retail Conferences: Lessons from Shoptalk 2024\"\n10 Key Strategies for Success at Retail Conferences: Lessons from Shoptalk 2024 appeared first on Kimchi hill.",
        "guid": "https://kimchihill.com/?p=2804",
        "categories": [
          "Korean essay"
        ],
        "isoDate": "2024-10-20T22:29:53.000Z"
      },
      {
        "creator": "kimchihill",
        "title": "Shoptalk 2024에서 배운 10가지 리테일 컨퍼런스 성공 전략",
        "link": "https://kimchihill.com/2024/10/21/ko-10-lessons-learned-for-winning-retail-conferences-at-shoptalk-2024/?utm_source=rss&utm_medium=rss&utm_campaign=ko-10-lessons-learned-for-winning-retail-conferences-at-shoptalk-2024",
        "pubDate": "Sun, 20 Oct 2024 22:22:03 +0000",
        "content:encodedSnippet": "지난 일주일 동안 시카고에서 열린 미국 최대의 리테일 컨퍼런스인 Shoptalk에 다녀왔다. 이번 행사에서 느낀 10가지 중요한 점을 정리해 보았다.\n지난 10년간 여러 컨퍼런스에 참여했지만, 과거 커뮤니케이션 플랫폼이나 챗 API를 소개하던 때와는 달리, 이번에 AI 챗봇, 특히 생성형 AI 기반 챗봇을 소개할 때 고객의 반응은 훨씬 직관적이고 흥미로웠다. 내가 속한 시장의 크기와 그 시장이 시의성을 가지고 있어 많은 이들의 주목을 받는지가 매우 중요하다는 점을 다시 한번 느꼈다.\n또한, 행사에 참석한다고 해서 모두가 ‘바이어’가 되는 것은 아니다. 진정한 바이어가 참여할 만한 행사를 잘 타겟팅하는 것이 중요하다. 예를 들어, Sendbird는 Product Manager들이 주요 타겟이어서 Product Manager 컨퍼런스에 많이 참여했었지만, 실제로 그들이 그 자리에서 친목을 위주로 참여하지 구매 결정을 내리는 경우는 드물었다. 반면, Shoptalk에서는 많은 의사결정자들이 기술 구매를 목적으로 참석했고, 이 점이 큰 차이를 만들었다.\n다양한 제품 라인을 소개할 때는 반드시 가장 이해하기 쉬운 제품부터 시작해야 한다. 예를 들어 “센드버드는 AI 챗봇 솔루션을 제공합니다. 더 나아가, 젊은 소비자들이 선호하는 대화형 UI 및 다양한 서비스를 제공하는 제품군도 보유하고 있습니다.”와 같은 방식으로 접근하는 것이 효과적이다.\n또한, 작은 부스라도 방문객의 정보에 맞춘 개인화된 데모를 제공하는 것이 매우 강력한 도구였다. 지금까지는 API, SDK, UI 킷과 같은 cPaaS(커뮤니케이션 플랫폼 서비스)를 중심으로 판매했기 때문에 SaaS와 같은 데모를 제공하는 데 한계가 있었지만, 이번에는 개인화된 데모를 통해 큰 성과를 거둘 수 있었다.\n부스 디자인과 경품 등 행사 기획도 중요하다. 모든 것을 리테일 관객에 맞춰 재구성해야 했다. 이번에 센드버드는 샤넬 지갑과 라메르 수분크림을 경품으로 준비해 큰 반향을 일으켰다. 다른 테크 벤더들이 실리콘밸리 방식의 부스 디자인과 개발자 취향의 Swag (e.g., 스트레스 볼, 텀블러) 를 준비했던 것과는 대조적이었다.\n행사 전에 사전 미팅을 확정하는 것 역시 성공의 중요한 요소였다. 이번에도 행사 전에 29개의 미팅을 확정했으며, 이를 위해 약 2-300번의 아웃바운드 시도가 있었다. 미팅 확정 여부와 관계없이 연락을 받은 사람들이 행사장에서 우리 부스를 방문해 더욱 친밀한 관계로 발전했다.\n컨퍼런스 참여는 마케팅의 기능일 뿐만 아니라 영업의 기능이기도 하다. 성공적인 영업은 상대에게 사업적 가치를 제공하는 것뿐만 아니라, 만남 동안의 대화를 즐겁게 이끌어 나가는 데 있다. 부스를 방문한 사람들을 따뜻하게 맞이하고, 그들의 요구를 파악해 좋은 대화를 나누는 것이 좋은 결과로 이어졌다.\n컨퍼런스 준비에 있어서는 시차 적응도 매우 중요한 요소다. 시차 적응 없이 무작정 체력에 의존하려고 하면 중요한 순간에 에너지를 소진하게 된다. 최소 2-3일 전에는 미리 도착해 시차에 적응하거나, 최소한 행사 몇 일 전부터 준비가 필요하다.\n이번 행사에서는 몇몇 업체가 커피나 팝콘과 같은 간식을 제공해 방문객의 이목을 끌려 했으나, Shoptalk 주최 측에서 너무 풍부한 식음료를 제공해 오히려 효과가 떨어졌다. 역설적으로, Bigcommerce가 부스에서 오븐에 직접 구운 초콜릿 칩 쿠키는 큰 인기를 끌었다.\n부스 밖에서의 홍보도 중요하다는 것을 느꼈다. 행사 마지막 날, 남은 스타벅스 기프트 카드를 Shoptalk 스태프들에게 나눠주었더니 큰 호응을 얻으며 부스를 찾는 발걸음이 늘었다. 또, 식사 공간이나 조용한 회의 공간 같은 곳에 센드버드 브랜딩이 된 물티슈나 노트패드를 비치하는 것도 새로운 마케팅 전략이 될 수 있다는 아이디어가 떠올랐다. 이는 다른 벤더들이 공략하지 않는 틈새를 공략하는 효과적인 방법이 될 것이다.\n\b돌아오는 공항에서 만든 행사에서 느낀 즐거운 기억을 담은 30초짜리 동영상으로  이 글을 마무리한다.\n \n\n\n\n\n\nThe post Shoptalk 2024에서 배운 10가지 리테일 컨퍼런스 성공 전략 appeared first on Kimchi hill.",
        "dc:creator": "kimchihill",
        "comments": "https://kimchihill.com/2024/10/21/ko-10-lessons-learned-for-winning-retail-conferences-at-shoptalk-2024/#respond",
        "content": "<p>지난 일주일 동안 시카고에서 열린 미국 최대의 리테일 컨퍼런스인 Shoptalk에 다녀왔다. 이번 행사에서 느낀 10가지 중요한 점을 정리해 보았다. 지난 10년간 여러 컨퍼런스에 참여했지만, 과거 커뮤니케이션 플랫폼이나 챗 API를 소개하던 때와는 달리, 이번에 AI 챗봇, 특히 생성형 AI 기반 챗봇을 소개할 때 고객의 반응은 훨씬 직관적이고 흥미로웠다. 내가 속한 시장의 크기와 그 시장이 시의성을 가지고<a class=\"more-link\" href=\"https://kimchihill.com/2024/10/21/ko-10-lessons-learned-for-winning-retail-conferences-at-shoptalk-2024/\">Continue reading <span class=\"screen-reader-text\">\"Shoptalk 2024에서 배운 10가지 리테일 컨퍼런스 성공 전략\"</span></a></p>\nThe post <a href=\"https://kimchihill.com/2024/10/21/ko-10-lessons-learned-for-winning-retail-conferences-at-shoptalk-2024/\">Shoptalk 2024에서 배운 10가지 리테일 컨퍼런스 성공 전략</a> appeared first on <a href=\"https://kimchihill.com\">Kimchi hill</a>.",
        "contentSnippet": "지난 일주일 동안 시카고에서 열린 미국 최대의 리테일 컨퍼런스인 Shoptalk에 다녀왔다. 이번 행사에서 느낀 10가지 중요한 점을 정리해 보았다. 지난 10년간 여러 컨퍼런스에 참여했지만, 과거 커뮤니케이션 플랫폼이나 챗 API를 소개하던 때와는 달리, 이번에 AI 챗봇, 특히 생성형 AI 기반 챗봇을 소개할 때 고객의 반응은 훨씬 직관적이고 흥미로웠다. 내가 속한 시장의 크기와 그 시장이 시의성을 가지고Continue reading \"Shoptalk 2024에서 배운 10가지 리테일 컨퍼런스 성공 전략\"\nShoptalk 2024에서 배운 10가지 리테일 컨퍼런스 성공 전략 appeared first on Kimchi hill.",
        "guid": "https://kimchihill.com/?p=2783",
        "categories": [
          "Korean essay"
        ],
        "isoDate": "2024-10-20T22:22:03.000Z"
      }
    ]
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "토스, LG유플러스와 AI 기술 제휴 업무협약 체결",
        "link": "https://blog.toss.im/article/AI-MOU",
        "pubDate": "Tue, 22 Oct 2024 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}토스 앱에서 AI 기술 익시(ixi) 활용한 콘텐츠 제공 등 전략적 제휴 마케팅 추진\n익시와 토스 IP 접목 방안 논의… 토스 B2B 서비스에도 익시 적용 협력 방침\n\n\n모바일 금융 서비스 ‘토스’를 운영하는 비바리퍼블리카(대표 이승건, 이하 토스)가 LG유플러스(대표 황현식)와 ‘AI 기술 제휴’ 업무협약을 체결했다고 22일 밝혔다.\n이번 업무협약으로 양사는 AI 기술을 제휴하고 전략적 제휴 마케팅을 위해 상호 협력키로 했다. LG유플러스의 AI 기술 익시(ixi)를 활용해 제작한 콘텐츠를 토스 앱에서 제공하는 것이 협약의 골자다.\n이를 통해 토스는 금융 서비스에 AI를 접목시켜 새롭고 차별화된 고객 경험을 제공하고, LG유플러스는 익시를 활용한 다양한 콘텐츠로 마케팅과 브랜딩 측면에서 긍정적인 효과를 기대할 수 있게 됐다.\n협약에 앞서 양사는 지난 9월부터 토스 앱을 통해 AI 콘텐츠의 선호도와 효과를 파악하기 위한 A/B 테스트를 진행한 바 있다. A/B 테스트는 다양한 시안 중 최적안을 선정하는 방법 중 하나로, 사용자를 두 집단으로 나눠 각기 다른 시안을 랜덤으로 보여주고 반응을 분석한다. 양사는 이러한 분석 결과를 향후 진행하는 공동 마케팅에 반영할 계획이다.\n양사는 익시와 토스의 IP를 접목하는 방안도 논의하고 있으며, 향후 토스의 B2B 서비스에도 익시의 기능을 적용할 수 있도록 지속 협력할 방침이다.\n한편 전날 오후 LG유플러스 용산사옥에서 열린 업무협약식에는 토스 이승건 대표, 김형빈 광고부문장(부사장)과 LG유플러스 정수헌 컨슈머부문장(부사장), 정혜윤 마케팅그룹장(상무), 한영섭 AI테크랩장(담당), 김희진 통합브랜드마케팅팀장 등 주요 관계자가 참석했다.\n협약식에서 토스 이승건 대표는 “LG유플러스와 협력해 토스 앱 사용자 경험을 한층 더 발전시킬 수 있게 됐다”며 “전 연령대를 아우르는 폭넓은 사용자 기반의 토스와 탁월한 AI 기술력을 보유한 LG유플러스가 새로운 디지털 혁신의 역사를 함께 써 내려가기를 기대한다”고 말했다.\nLG유플러스 정수헌 부사장은 “토스와의 협력으로 또 하나의 AI 마케팅 선도 사례를 구축하게 되어 의미가 크다”며 “금융업에 디지털 혁신을 불러일으킨 토스와 디지털 온리(Digital Only) 세대인 ‘잘파(Zalpha)’ 세대 고객에 기존에 접해보지 못한 차별화된 디지털 경험을 제공하겠다”고 말했다.",
        "content": " LG유플러스 AI 기술 익시(ixi)와 협력한 콘텐츠 토스 앱에서 제공 예정",
        "contentSnippet": "LG유플러스 AI 기술 익시(ixi)와 협력한 콘텐츠 토스 앱에서 제공 예정",
        "guid": "https://blog.toss.im/article/AI-MOU",
        "isoDate": "2024-10-22T00:00:00.000Z"
      },
      {
        "title": "5년 동안 4,000만 원 만들기: 중소기업 재직자 우대 저축공제",
        "link": "https://blog.toss.im/article/money-policies-28",
        "pubDate": "Mon, 21 Oct 2024 06:47:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}10월 말, 중소기업 재직자 우대 저축공제가 출시될 예정이에요. 중소기업 재직자가 월 최대 50만 원을 적립하면 기업이 납입액의 20%를 기업 지원금으로 주고 은행에서 우대금리 혜택을 제공하는 것이 핵심이에요. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}5년간 매월 50만 원씩 총 3,000만 원을 적립하면 약 4,027만 원을 수령할 수 있습니다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}가입대상\n중소기업에 다니는 재직자라면 근속연수, 나이 등에 관계없이 누구나 가입할 수 있어요.\n지원 내용\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n최소 납입액은 월 10만 원으로 최대 50만 원까지 1만 원 단위로 적립할 수 있어요.\n만기는 총 5년, 약 5% 수준의 금리 혜택을 받을 수 있어요.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*우대금리는 1~2%포인트 수준이에요. 참여 은행(IBK기업은행, 하나은행)의 5년형 저축상품의 평균 금리가 3.5%인 점을 감안하면 약 5% 수준의 금리 혜택을 받을 수 있어요.\n5년간 매월 50만 원씩 총 3,000만 원을 적립하면 약 4,027만 원을 수령할 수 있어요.\n\n가입방법\n근로자와 기업주가 사전에 월 납입금액 등에 대한 협의를 해야 해요. 이후 중소벤처기업진흥공단에 이를 알리고 IBK기업은행 혹은 하나은행을 방문해 저축상품에 가입하면 돼요.\n중소기업 재직자 우대 저축공제에 참여하는 중소기업은  기업 지원금에 대한 소득세와 법인세 감면 혜택을 받을 수 있어요. 재직자는 자산형성을, 중소기업은 우수인력을 유치할 수 있는 정책이 될 것으로 기대하고 있어요.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n📞 문의 \n\n중소벤처기업부 중소기업정책실 인력정책과(044-204-7796)\n중소벤처기기업진흥공단 성과보상처(055-751-2971, 2980)\nIBK기업은행 개인고객부(02-6322-5144)\n하나은행 리테일상품부(02-2002-1298)\n\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희",
        "content": "매월 50만 원씩 5년간 3,000만 원을 적립하면 4,027만 원을 만들 수 있어요. ",
        "contentSnippet": "매월 50만 원씩 5년간 3,000만 원을 적립하면 4,027만 원을 만들 수 있어요.",
        "guid": "https://blog.toss.im/article/money-policies-28",
        "isoDate": "2024-10-21T06:47:00.000Z"
      },
      {
        "title": "CD를 듣지 않는 시대에 여전히 음반이 중요한 이유",
        "link": "https://blog.toss.im/article/fandustry-02",
        "pubDate": "Fri, 18 Oct 2024 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}“세븐틴이 진짜로 인기가 많아요?”\n어느 기업 특강 중에 이런 질문을 받았다. 마침 2024년 상반기에 세븐틴의 음반 판매량이 530만 장 이상을 기록했다는 뉴스가 나온 후였다. 2024년 4월 29일 발매된 [17 IS RIGHT HERE]의 판매량 외에 이전 앨범들도 108만 장 이상 판매되며 세운 기록이다. 이로써 세븐틴은 2024년 기준, 예전 앨범을 100만 장 이상 판매한 최초의 케이팝 그룹이 되었다.\n테일러 스위프트의 최신 앨범 [The Tortured Poets Department]는 2024년 상반기에 미국에서만 466만 장 (스트리밍/다운로드 등 총합, 앨범만 집계하면 247만 장)이 판매되었다. 세계 최고 가수라고 불리는 테일러 스위프트의 앨범 판매량보다 세븐틴 앨범의 판매량이 더 높은 것이다.\n그런데 실감은 나지 않는다. 주변에서 실제로 음반을 구매하는 사람들을 거의 찾아볼 수 없기 때문이다. “세븐틴이 진짜로 인기가 많냐?”라는 질문을 한 사람도 바로 이게 의아했을 것이다.\n“음반 판매량은 중요하지만 실제로는 중요하지 않을 수 있어요.” 나는 이렇게 답했다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}음반 판매량의 딜레마 \n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}음반 판매량이 중요했던 건 아티스트의 성장과 음악 회사의 수익성을 판단하는 데 핵심적인 지표였기 때문이다. 20세기의 대표적인 아티스트들을 찾아보면 제일 먼저 나오는 게 음반 판매량이다. 비틀스의 누적 앨범 판매량은 4억 2,500만 장이고, 마이클 잭슨은 3억 4,000만 장이다. 엘비스 프레슬리, 퀸, 마돈나 등 20세기의 가장 성공한 가수들은 대부분 1억 장 이상의 음반 판매량을 기록하고 있다. 특히 마이클 잭슨의 대표작 [Thriller]는 1억 2,000만 장의 판매량을 기록해 20세기 최고의 판매 기록을 보유하고 있다. 앨범 판매량이 곧 스타성, 완성도, 영향력 등을 판단하던 기준이던 20세기에 메인스트림 팝스타는 보통 천만 장 이상의 앨범을 판매했다. 그때는 좋아하는 음악을 마음껏 들으려면 반드시 음반을 구매해야 했기 때문이다.\n지금은 다르다. 무료 혹은 유료로 음악 스트리밍 서비스를 이용할 수 있고, 뮤직비디오도 음원을 대체하고 있다. 초연결 시대에 음악은 언제든 쉽게 접할 수 있는 콘텐츠가 되었다. 이렇게 낮아진 접근성은 음원의 가격을 거의 무료에 가깝게 만들었다. 지금 음반을 구매하는 것은 음악을 듣기 위해서라기보다는 다른 이유가 더 크다.\n이런 상황 때문에 음반 판매량이 사실상 중요하지 않다고 말한다. 과거에 음반 판매량은 음악과 아티스트의 대중적인 영향력과 수익성을 파악할 수 있는 핵심 데이터였지만, 지금은 음반을 ‘굳이' 구매하는 사람들, 다시 말해 팬의 규모를 가늠하는 데이터 중 일부로 여겨진다.\n그런데 제아무리 열성팬이라도 음반을 수집하는 기쁨 때문에 같은 앨범을 여러 장 중복해서 사는 건 아니다. 특히 케이팝의 팬들은 같은 앨범을 여러 장 사야 할 이유가 따로 있다. 많이들 알고 있듯, 멤버들의 포토카드를 모으기 위해서, 혹은 팬 사인회 추첨에 응모하기 위해서다. 이런 경우에 음반은 ‘음악이 담긴 종합 선물 세트'인 동시에 ‘포토카드의 부록'이거나 ‘추첨을 위한 입장권'이 된다. 음반샵 주변이나 길거리에 케이팝 그룹의 음반들이 대량으로 버려지는 건 그 때문이다. (예전엔 보육원이나 아동후원단체 등에 ‘기부'했지만 거기서도 CD는 처치 곤란한 ‘물건'이었기 때문에 요즘엔 그냥 버려진다.)\n음반의 가치가 떨어진 건 인터넷과 MP3 때문이다. 이전에는 음반이 곧 음악이었다. 하지만 음악이 디지털 파일 형태로 음반에서 분리되자, 음반은 플라스틱 쪼가리에 불과해졌다. 그런데도 가격은 1만 원이 넘었다. 2000년대 초반에는 이렇게 애매해진 음반을 판매하기 위해 여러 실험이 벌어졌다. MP3 추출을 막기 위해 복제 방지 기술을 반영하거나, 고급 소재로 음반을 제작하거나, 음반에서만 들을 수 있는 미공개 트랙을 숨겨 놓거나, 심지어 관련된 소설책을 함께 묶어서 판매하기도 했다.\n그러나 모두 실패했다. 이후 미국과 한국의 대응 방향이 달라진다. 미국의 음악 산업은 ‘콘서트'로 이 위기를 돌파했지만, 한국은 어떻게든 음반을 판매하는 방향을 고수했다. 앨범을 포토북으로 만들거나, 포토카드를 넣거나, 커버를 다양하게 만들거나 등등. 이런 방향은 강력한 팬덤이 있었기 때문에 가능했다.\n케이팝을 ‘육성 시스템'이나 ‘엔터테인먼트 패키지' 등으로 정의할 수 있겠지만, 나는 케이팝이야말로 팬덤 기반의 사업 구조를 매우 촘촘하게 구축한, ‘팬에 최적화된 비즈니스 모델'이라고 정의한다. 그리고 이 구조에서 음반은 ‘반드시 팔리는 제품이자 마진율*도 높은 제품'이 된다. 케이팝 산업은 이런 구조에서 20년간 성장할 수 있었다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*.css-114ityv{white-space:pre-wrap;cursor:pointer;-webkit-text-decoration:underline!important;text-decoration:underline!important;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}한 기사에 따르면, 4대 기획사의 대표 그룹 앨범 마진율은 평균 170%에 달한다.\n음반 판매량으로 본 케이팝,\n계속 성장할 수 있을까?\n.css-2sk6rv{font-size:19px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);white-space:pre-wrap;margin:24px 0;padding-left:20px;position:relative;}.css-2sk6rv::before{content:'';display:block;position:absolute;top:4px;left:0;width:2px;height:calc(100% - 4px * 2);padding:4px 0;background-color:var(--adaptiveGrey800);}\n“랜덤 카드 만들고, 밀어내기 하고 이런 짓 좀 안 했으면 좋겠어요, 제발. (중략) 알음알음 다 하고 있거든요. 그러면 이게 뭐 때문에 수치가 올라가는지… 시장이 비정상이 되고 나중에는 주식시장도 교란돼요. 그거 다 팬들한테 부담으로 전가돼. 럭키 드로우로 소진해야지, 팬 사인회 해야지…” .css-7mseny>*{margin-left:0;margin-right:0;}.css-7mseny>:last-child{margin-bottom:0;}blockquote>.css-7mseny:first-child>:first-child{margin-top:0;}\n민희진 전 어도어 대표는 기자회견 중에 이렇게 얘기했다. 랜덤 포토카드, 앨범 밀어내기 등 케이팝 산업의 관행을 직설적으로 비판한 것이다. ‘(음반)밀어내기'는 기획사가 판매자에게 미리 판매 수량과 비용을 받은 뒤 그 물량을 공급하는 관행이다. 사입 방식 같지만, 판매량을 맞춘다는 점에서 불합리하다. 판매자는 미리 구매한 물량을 소진하기 위해 팬 사인회 같은 이벤트를 포함해 진행한다.\n예를 들어 어떤 케이팝 그룹의 팬 사인회 비용이 최소 5억 원이라면, 음반 판매처는 이 그룹의 음반 5억 원어치를 매입한 뒤 팬 사인회 추첨을 통해 물량을 소진*할 수밖에 없다. 다시 말해 ‘5억 원'은 케이팝 그룹이 팬 사인회에 출연하는 출연료가 된다. 팬도, 판매자도, 아티스트도 행복하지 않은 구조다. 이렇게 집계된 판매량은 특히 발매 첫 주의 판매량, 즉 초동 판매량의 데이터가 되고, 보도자료로 기사화되어 케이팝 그룹의 영향력을 과시하는 지표가 된다. 이런 구조에서 팬들은 본의 아니게 음반 판매량 경쟁에 적극적으로 개입하게 된다.\n*판매처는 음반을 소진하기 위해 음반 한 장당 추첨권 한 장을 제공한다. 이 구조에서 팬은 당첨되기 위해 여러 장의 음반을 구매할 수밖에 없다. \n민희진 전 대표의 지적대로, 케이팝 음반의 판매량은 팬들의 반복 구입으로 달성되는 경우가 많다. 2023년 3월, 한국소비자원이 조사한 ‘팬덤 마케팅 소비자 실태조사*’에서 음반 구매 목적 1위는 음반 수집(75.9%), 2위는 음악 감상(66.7%), 3위는 굿즈 수집(52.7%), 4위는 이벤트 응모(25.4%)로 나타났다.\n*2021~2022년 사이에 발매된 주요 케이팝 음반 50종과 관련한 조사로 응답자는 500명이었다.\n이 결과는 팬들이 다양한 목적으로 음반을 구매하고 있음을 보여주는데, 3위를 차지한 ‘굿즈 수집(52.7%)’ 중 랜덤 굿즈를 얻기 위한 구매 경험은 194명이었고, 평균 4.1개의 같은 앨범을 구매한 것으로 나타났다. 그 외 팬 사인회 등 이벤트 응모를 목적으로 음반을 구입한 경우는 102명으로, 평균 6.7개를 구매한 것으로 조사됐다. 반면, 실물 CD를 통한 음악 감상은 5.7%에 불과했고, 83.3%가 음원 및 동영상 스트리밍으로 음악을 듣는다고 답했다. ‘음악 감상'이라는 음반의 기능은 이제 사라졌다고 봐도 무방할 것이다. 한편 팬덤 마케팅과 관련해 개선해야 할 사항으로는 15.2%가 ‘굿즈의 랜덤 지급 방식'을 꼽았고, 67.8%가 ‘환경에 부정적인 영향을 미친다'라고 답했다.\n음반 판매량 중심의 케이팝 산업에 팬들만 회의적인 건 아니다. 2024년 4월, 골드만 삭스는 “케이팝의 음반 판매량은 오염되었다\"는 제목의 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}리포트를 발행했다. 케이팝의 성장 잠재성은 매우 높지만, 음반 판매량을 성장 지표로 삼기는 어렵다는 내용이었다. “우리는 앨범 중심의 사고방식에 이의를 제기한다. 그 대신 오프라인 콘서트 관객이야말로 케이팝의 성장세를 측정하기에 더 좋은 지표라고 생각한다.”라고 썼다. 특히 팬데믹 동안 오프라인 활동의 부재로 앨범 판매량이 급증했고, 지표가 더 왜곡되었다고도 말했다.\n지난 20년간 케이팝 산업은 앨범 판매량에 의존하는 구조를 가졌는데, 이제는 바야흐로 한계에 다다르고 있다고 해도 과언이 아닐 것이다.\n그럼에도 불구하고, 음반은 중요하다\n그런데 과연 이런 이유로 음반은 시장에서 퇴출되어야 할까? 나는 아니라고 생각한다. 케이팝의 음반 판매량은 판매량 자체가 아니라 반강제로 판매하는 방식이 문제다. 음반은 여전히 레이블에게는 수익성 높은 상품이자, 팬들에게는 의미 있는 수집품이다. 스트리밍 시대에 음반을 구매한다는 것은 의미 있는 제품을 소장하고, 아티스트를 후원한다는 의미를 가진다. 그리고 이건 수십 년 동안 달라지지 않은 앨범 구매의 동기다.\n2024년 9월 21일과 22일, 서울 마포구의 문화비축기지에서는 제13회 서울레코드페어가 열렸다. 서울레코드페어는 음악 애호가들과 레코드 수집가들에게 인기 있는 이벤트로 케이팝보다는 재즈, 인디, 록, 힙합 등 장르 음악 레코드가 주로 판매되는데 한정판을 구매하기 위한 줄이 아침부터 늘어섰다. 이런 문화가 한국에만 있는 것도 아니다. 미국에서는 2008년부터 수백 개의 로컬 레코드 샵이 참여하는 레코드 스토어 데이(Record Store Day)가 이어지고 있다. 2008년은 아이튠즈가 미국 음악 산업의 최강자로 자리매김한 해였고, 미국 음악 산업의 구조가 음반에서 음원으로 전환되던 시점이었다. 처음에는 음악계에 불어닥친 디지털 혁신의 위협에 대응하기 위한 행사였지만, 현재는 레코드 문화를 장려하는 행사가 되고 있다.\n실제로 음반 판매량도 늘고 있다. CD와 바이닐(LP)을 포함한 물리적 음반 매출은 3년 연속 증가해 2023년 51억 달러(6조 7549억 5000만 원)를 기록했다. 심지어 바이닐*은 3년 연속 CD 판매량을 앞지르고 있다. 물론 이 음반을 구매한 사람들이 모두 음반으로 음악을 듣는 것은 아니다. 턴테이블도 없으면서 바이닐을 구매하고, 벽에 걸어놓는다. 대부분의 음악 팬들에게 바이닐은 특별한 상품이라는 가치를 갖기 때문이다.\n*2024년 3월에 개봉한 다큐멘터리 [힙노시스 : LP 커버의 전설]에 출연한 오아시스의 노엘 갤러거는 바이닐 커버를 ‘작은 미술품'이라고 정의한다. 고가의 예술품을 살 수 없는 젊은이들에게 바이닐의 커버 아트는 미술품과 같은 의미를 가진다는 뜻이다.\n스트리밍 시대에 음반이 중요한 이유는, 팬이 음반을 사기 때문이다. 팬들의 구매 행위는 결국 아티스트와 음악의 영향력을 시장에서 증명하는 지표로 이어지며 팬을 음악 산업을 움직이는 주체로 만든다. 음악 산업은 애초에 불확실성이 높은 분야다. 한 번 성공한 음악이 계속 성공하지 않는다. 그런데 팬들은 굳이 듣지도 않을 음반을 사고, 먼 길을 돌아 콘서트장과 페스티벌에 간다. 불특정 다수의 대중이 아니라 뚜렷하고 분명한 동기를 가진 팬이 중요한 이유다.\n팬이 시장을 움직이고, \n팬이 문화를 만든다\n음악 산업은 아티스트, 사업자, 팬으로 구성된다. 이 중에서 아티스트는 음악을 만들고 완성하는 존재다. 작곡, 작사, 편곡, 퍼포먼스, 연주가 모두 포함된다. 사업자는 이런 음악을 판매하고 유통하고 아티스트의 권리를 보장하며 시장을 형성하는 주체다. 그리고 팬은, 이 모든 비즈니스 구조 위에서 비로소 문화를 만드는 존재다. 팬이 음악을 소비하고 아티스트를 지원하는 방식이 곧 문화다. 케이팝이든 힙합이든 록이든 국악이든 마찬가지다.\n그렇기 때문에 나는 사업자야말로 아티스트와 팬에게 헌신해야 한다고 믿는다. 아티스트가 좋은 커리어와 결과물을 만들도록 지원하고, 팬들이 건강한 문화를 유지하도록 후원할 때 전체 음악 산업은 성장할 수 있다. 이것은 단지 음반 판매 관행을 줄이거나 없애는 것과는 다른 문제다. 플라스틱 사용과 탄소 배출을 줄여 지구 환경을 회복시키는 방법을 찾고, 여러모로 불편한 팬 경험을 향상하고, 몇 세대에 걸쳐 이어질 문화적 유산과 책임을 고민하는 것과 같은 얘기다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 송수아 Graphic 이은호",
        "content": "음반이 많이 팔리면 인기가 많은 건가요? ",
        "contentSnippet": "음반이 많이 팔리면 인기가 많은 건가요?",
        "guid": "https://blog.toss.im/article/fandustry-02",
        "isoDate": "2024-10-18T00:00:00.000Z"
      },
      {
        "title": "물가는 왜 계속 오르기만 하는 걸까?",
        "link": "https://blog.toss.im/article/monthly-tosspick-2024-9",
        "pubDate": "Thu, 17 Oct 2024 02:10:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}“요즘 A드라마 재밌더라.” “그래? 집에 가서 앞부분 요약본 달려야겠다!” 같은 대화가 흔해질 만큼 ‘요약본으로 몰아보기'는 드라마를 감상하는 새로운 방법으로 자리 잡았습니다. 요약본 몰아보기의 묘미는 신드롬을 일으켰던 옛날 명작들을 섭렵하는 것인데요, .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}〈내 이름은 김삼순〉, 〈커피프린스 1호점〉, 〈궁〉, 〈거침없이 하이킥〉, 〈순풍산부인과〉 등 1990년대 후반~2000년대 초반 작품들이 수백만 회의 조회수를 기록하며 특히 인기입니다.\n뜨거운 반응에 힘입어 온라인동영상플랫폼 웨이브에서는 지난 9월 ‘뉴클래식 프로젝트'의 첫 작품으로 〈내 이름은 김삼순 2024〉를 공개했습니다. 원작 연출자인 김윤철 감독이 직접 16부작을 8부작으로 축약하며 김삼순의 일과 사랑 이야기에 집중한 버전을 선보였어요. 감독판 축약본의 탄생은 또 한 번 화제에 오르며 신작들을 제치고 웨이브 유료 가입 기여 1위를 기록했습니다.\n20여 년 전 드라마를 보는 사람들의 흥미를 끄는 것은 ‘격세지감의 순간들’입니다. “삼식이(극중 남주인공 현진헌의 별명)는 지금 보니 잘생긴 똥차\"라는 댓글이 달리는 등 사회적 분위기와 인식 차이를 짚어내며 재미를 느끼는 거죠. 뿐만 아니라 극중 김삼순(김선아 분)은 현진헌(현빈 분)과 고용 관계이자 계약 연애를 약속하다 보니 연봉, 계약금 등 돈 이야기가 자주 나와 그 시절 물가나 인건비에 대해서도 자주 상기하게 됩니다. 최근 급격한 물가 상승으로 일상 소비에서도 스트레스를 받다 보니 주인공들이 돈을 쓸 때마다 자연스레 나의 현재와 비교해보기도 하고요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}삼순이가 삼식이 얼굴에 집어던진 케이크는 얼마였을까?\n”물가 차이 엄청나다”는 느낌의 실제를 들여다보면, 〈내 이름은 김삼순〉이 방영된 2005년과 비교해 2024년의 물가는 약 50% 상승했습니다.* 일상적인 소비를 일일이 비교하면 더 크게 체감되는데, 삼순의 마음을 돌리기 위해 진헌이 따라 탄 택시의 기본요금은 1,600원에서 4,800원으로 올랐고, 지하철 기본 요금은 600~700원에서 1,400원으로 올랐어요.** 포장마차에서 둘이 마시던 소주의 가격은 1,500~2,000원에서 4,000~5,000원으로 올랐고, 카페에서 파는 아메리카노 한 잔의 가격은 평균 2,500~3,000원이던 것이 4,500~6,000원 수준으로 올랐습니다. \n그럼 화가 난 삼순이 진헌의 얼굴에 던져버린 직접 만든 케이크는 얼마였을까요? 극중 프랑스 파리로 요리 유학을 다녀온 파티시에임을 감안해 고급 디저트 가격을 가늠해보자면, 신라호텔의 망고빙수는 2008년 27,000원에서 2024년 102,000원으로 올랐습니다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*대한민국 통계청이 제공하는 소비자물가지수(CPI) 기준\n**서울 기준\n\n팬데믹으로 인해 최저치를 기록했던 물가 상승률은 이후 세계 각지의 전쟁으로 인한 유통망의 위기, 기후 변화 등에 따라 빠르게 치솟고 있어요. 일상 속 작은 것들까지 영향을 미치는 물가는 왜 매년 오르기만 하는 것일까요? 너무 오르면 생활 안정성 걱정, 너무 안 오르면 경기 침체 걱정인 물가에 적정선은 존재할까요? 이번 달 ‘월간 토스픽'에서는 물가가 오르는 근본적인 원인과 적정선을 지키는 노력에 대해 물었습니다.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n🎙️ Interviewee 이 현\n\n듣똑라 유튜브와 팟캐스트, 중앙일보와 JTBC에서 경제 뉴스 콘텐츠를 만들어왔다. 어려운 경제 용어와 숫자에 좌절해 본 경험을 살려 경제 뉴스와 지식을 쉽게 풀어내는 ‘경제 커뮤니케이터’ 같은 기자가 되기 위해 노력 중이다. 10대, 20대를 위한 금융 기초 상식을 정리한 책 《금융 프렌즈가 우릴 기다려》를 써냈다.\n\n인플레이션의 뒷이야기 \n물가가 오르는 진짜 이유\n눈 깜짝할 사이에 오른 생필품 가격에 흠칫 놀랐던 경험이 많습니다. 기자님은 어떨 때 오른 물가를 체감하시나요?\n올해 초에 저희 회사 구내식당 식권 가격이 6,000원으로 올랐어요. 문득 입사했을 때 식권 가격이 얼마였지 궁금해져서 동기들이랑 이야기해 보니 2011년 입사 당시 2,600원이었더라고요. 2.3배가 됐어요! 물가도 많이 올랐고, 회사도 오래 다녔다 싶습니다.\n물가가 오르는 근본적인 원인은 무엇인가요?\n물가가 오르는 이유를 설명할 때 가장 기본적으로는 ‘수요와 공급'을 이야기해요. 물건을 사려는 사람은 많은데 물건이 별로 없을 때 가격이 오르는 거죠. 이런 물건이 많을수록 물가 상승률이 높아집니다. 여름철 폭염과 홍수로 채소·과일 가격이 급등할 때, 중동에서 전쟁 때문에 석유 공급에 차질이 생길 때 물가 상승률이 높은 이유이기도 하죠. 이렇게 지속적으로 물가가 오르는 현상을 ‘인플레이션'이라고 하는데요. 어떤 경우에는 인플레이션이 올 것 같은 예감, 촉감만으로도 실제로 물가가 오르기도 합니다.\n인플레이션이 단순한 예상만으로도 실제로 발생할 수 있다는 건가요? ‘경제는 심리다'라는 말과도 연관이 있어 보여요.\n맞아요. 물가가 계속 오를 것 같다는 판단이 들면 ‘어차피 언젠가 살 것 같은데, 1만 원이라도 쌀 때 사두자'라는 마음이 들기 쉽잖아요. 나 말고 다른 사람들도 같은 생각으로 지갑을 열기 시작하면 가격이 더 가파르게 오를 수 있죠. 이런 것을 ‘기대 인플레이션'이라고 합니다.\n기대 인플레이션이 강하면 노동자들도 임금 인상을 더 강하게 요구해요. 회사 앞 국밥집에서 한 그릇에 1만 원 하던 순대 국밥 가격이 1만 1,000원으로 올랐다고 생각해 볼게요. 들깨가루를 뿌리면서 ‘내년 내 월급도 10%는 올려야겠네'라는 생각이 자연스럽게 들겠죠? 물가는 올랐는데 내 월급은 그대로라면 오히려 월급이 깎인 것처럼 느껴질 거예요. 직원 임금을 올려주게 된 기업들은 생산 비용이 증가했다며 또 물건 가격을 올립니다. 이런 식으로 ‘기대 인플레이션'이 진짜 인플레이션을 부추기기도 해요.\n자연재해나 전쟁 같은 특수한 상황이 없어도 물가는 장기적으로 계속 오르잖아요. 수요와 공급 말고 물가 상승을 설명할 수 있는 다른 이유가 있을까요? \n경제학에 ‘화폐수량설’이라는 이론이 있어요. 간단히 말하면 통화량이 늘어나면 인플레이션이 생긴다는 이론이에요. 통화량이 얼마나 늘면 물가가 얼마나 오르는 것인지 딱 잘라 말하기는 어려워요. 경제 상황에 따라 수중에 돈이 생겨도 쓰지 않고 저축하는 사람이 더 많을 수도 있고, 반대로 실제 구매력보다 소비를 더 할 수도 있으니까요. 그렇지만 시중에 돈이 늘어나면 인플레이션이 뒤따르는 경향성은 분명하다고 봅니다.\n우리가 체감할 만한 사례가 있을까요?\n지난 2~3년간 우리가 경험한 인플레이션만 봐도 그렇습니다. 2020년, 코로나19라는 듣도 보도 못한 전염병이 세계를 휩쓸면서 경제도 어려워졌잖아요. 공장이 멈추고, 교역량이 줄어들고, 가게들은 문을 닫았습니다. 재난지원금 기억하시죠? 갑자기 찾아온 경제 위기에 각국 정부와 중앙은행은 돈을 엄청나게 풀었고요. 시중에 돈이 많아지다 보니 사람들의 소비 수요는 크게 늘었어요.\n하지만 공급망은 팬데믹 충격에서 벗어나지 못한 상태였죠. 설상가상 러시아-우크라이나 전쟁까지 터지면서 천연가스, 밀가루 공급이 원활하지 않았고요. 결국 우리나라를 포함해 전 세계가 2021~2023년 인플레이션을 경험하게 됐죠. 21세기 들어 처음 본 물가 고공행진이었어요.\n\n통화량이 늘어나지 않으면 물가도 덜 오를 텐데, 왜 통화량은 계속 늘어나는 건가요?\n통화량은 경제의 활력과 연관이 있습니다. 통화량이 많아질수록 활력이 생긴다고 봐요. 통화량은 금리가 낮을수록 늘어나기 쉬운데요. 금리가 낮으면 대출 이자 부담이 적어서 돈을 빌리고자 하는 사람들이 많아지기 때문에, 중앙은행은 그만큼 돈을 더 찍어낼 수 있어요.\n이자 부담이 덜한 기업들은 돈을 빌려 공장도 더 짓고, 생산도 늘리고, 많은 사람들을 고용할 수 있죠. 사람들은 은행에 저축해도 이자가 적게 붙으니까 돈을 묶어두기보다는 소비를 하게 되고요. 소비자가 돈을 쓰면 기업 매출이 오르고, 그 기업은 더 많은 제품을 생산하며 선순환이 생깁니다. 그래서 중앙은행은 ‘디플레이션보다는 약간의 인플레이션이 경제에 도움이 된다'라는 생각으로 통화량 증가를 유도하는 면도 있습니다.\n또 정부가 돈 쓸 일이 많으면 통화량이 늘어나게 됩니다. 사실 일부 국가를 제외하고 세계 거의 모든 국가는 재정 적자를 기록중인데요. 정부의 수입보다 지출이 더 많은 것을 뜻해요. 정부가 걷히는 세금보다 더 많은 돈을 쓰려면 국채를 발행하든, 국가 자산을 팔든, 아무튼 시중에 돈이 늘어날 수밖에 없습니다. 정부가 국채를 민간에 팔기도 하지만, 시장에서 소화가 안 되면 중앙은행이 국채를 사줍니다. 중앙은행 금고에서 잠자던 돈이 정부 정책을 통해 시중에 풀리게 되는 것이죠.\n인플레이션은 나쁜 놈, \n디플레이션은 좋은 놈?\n소비자 입장에서는 물가가 오르는 것이 야속하긴 한데요. 적정한 인플레이션이 가져다주는 또 다른 긍정적인 효과도 있을까요?\n앞서 중앙은행이 약간의 인플레이션이 경제에 도움이 된다고 생각한다고 했잖아요. 인플레이션의 장점 중 하나는 빚 부담이 줄어든다는 거예요. 예를 들어, 은행에서 100만 원을 연 5% 금리로 대출받아 내년까지 105만 원을 상환해야 하는 사람이 있다고 해볼게요. 내년까지 물가가 5% 오른다면, 올해 100만 원으로 살 수 있던 것을 내년에는 105만 원을 줘야 살 수 있는 셈입니다. 올해의 100만 원과 내년의 105만 원의 실질적인 값어치가 같아지는 거예요. 그러면 내년에 이자 5%를 붙여 갚더라도, 결국 빌린 만큼 갚는 것이나 마찬가지입니다. 만약 물가 상승률이 두 배가 되어 10%라면 올해 100만 원과 내년의 110만 원이 같은 가치를 갖는데, 은행에 돌려줄 돈은 105만 원 밖에 안되니까 대출을 받아 먼저 쓴 게 이득이 되는 셈이죠.\n반대로 인플레이션의 부정적인 영향도 있을 텐데요. 구체적으로 어떤 것들이 있을까요?\n현실 경제는 이론대로만 움직이지 않는다는 함정이 있죠. 물가가 오른 만큼 월급도 오르면 좋을 텐데, 보통 임금은 물가 오르는 속도를 바로 따라잡지 못합니다. 물가가 오르는데 임금은 안 오르면, 실제 가치로 따진 내 월급은 오히려 깎인 셈이 됩니다. 이런 식으로 인플레이션이 소득을 실질적으로 줄이기 때문에, 월급에서 세금 원천징수 하는 것과 비슷하다고 '인플레이션 세금'이라고 부르기도 합니다.\n가게나 회사 운영도 인플레이션 때문에 힘들어질 수 있습니다. 음식점을 예로 들어 볼게요. 물가가 자꾸 오르면 음식의 가격을 올리거나, 가격을 유지하되 포장지를 바꾸든, 메뉴 구성을 바꾸든 수지타산을 맞추기 위한 수고가 들죠. 이런 것을 ‘메뉴비용'이라고 합니다. 인플레이션으로 메뉴 가격이 올라서 메뉴판을 새로 만드는 데에서 유래한 용어라고 해요.\n그렇다고 물가가 내려가는 ‘디플레이션' 또한 마냥 좋은 일도 아니겠죠?\n처음에야 사람들이 살까 말까 고민하던 물건이 싸져서 기분 좋게 소비하고 분위기가 좋을 수도 있지만, 디플레이션이 계속되면 사람들은 소비를 미룹니다. 시간이 지나면 더 싸진다고 생각하니까요. 소비자 개인에게는 현명한 선택이지만 경제 전체로 보면 시장에서 수요가 줄어드는 것이죠. 그러면 판매가 안 되니 경영이 어려워진 기업들은 인건비를 줄이기 위해 임금을 동결하거나 인력 정리를 할 테고, 일자리가 불안해지면 사람들은 소비를 더 안 하게 됩니다.\n그래서 한국은행을 비롯해 각국의 중앙은행은 ‘적당한 수준’의 인플레이션을 유지하는 것을 목표로 통화정책을 결정합니다. 뉴스에 가끔 '물가 상승률 목표치' 혹은 '타겟 인플레이션'이라는 표현이 나올 텐데, 대부분의 선진국 중앙은행들은 연간 2% 정도의 인플레이션이 적당한 목표라고 정해뒀습니다.\n물가가 너무 오르지도, \n내려가지도 않게 노력하는 이유\n적정 인플레이션 목표를 2%로 잡는 이유는 무엇인가요?\n중앙은행이 인플레이션 목표치를 0%가 아니라, 연간 2% 상승으로 두는 이유 중 하나는 ‘삭감할 여지’가 필요하기 때문입니다. 중앙은행이 경기 침체에 대응하는 주무기 중 하나가 ‘기준금리 인하’거든요. 금리를 낮춰서 시중에 돈이 더 돌도록 유도하는 방법이죠. 앞서 살펴본 것처럼 금리가 낮으면, 기업들은 돈을 빌려 쓰기 쉽고 개인 역시 돈을 은행에 묶어두기보다는 소비하는 경향을 보이니까요.\n그런데 이미 물가 상승률이 0%라서 시중 금리도 0%에 가까운 수준이라면 중앙은행이 이럴 때 쓸 수 있는 카드가 없습니다. 당근마켓에 중고 물건을 팔 때, 물건이 잘 안 팔리면 가격을 내려서 수요를 끌어올리는 방법을 쓰는데, 이미 충분히 낮은 가격이나 ‘나눔’으로 올린 물건은 기다리는 것 외에 쓸 수 있는 카드가 없는 것과 비슷한 느낌입니다.\n나라마다 경제 상황이 다를 텐데, 선진국 중앙은행들이 비슷하게 2% 목표를 유지하는 이유도 궁금해요.\n글로벌 경제 시스템의 통합성이나, 금융시장의 연관성을 생각해 보면 목표치를 서로 비슷하게 잡는 것이 유리할 수 있거든요. 우리나라의 경우, 한국은행(이하 한은)은 1998년 물가 안정제 목표제를 채택했어요. 원래 목표치는 2.5~3.5%였는데, 우리도 2016년에 2%로 내렸습니다. 경제성장률이 선진국과 비슷하게 안정되면서 목표치를 조정한 거죠.\n지난 30여 년간 선진국은 2%, 성장 중인 신흥국에서는 이것보다는 조금 높은 수준인 4~6%의 인플레이션 목표를 추구하는 것에 공식적으로든 비공식적으로는 동의하는 분위기였어요. 경제 성장이 한창인 나라에서는 높은 GDP 성장률만큼 물가도 비교적 가파르게 오를 수밖에 없기 때문에 물가 목표도 조금 높게 잡습니다.\n앞으로도 매년 2% 물가 상승률을 목표로 두게 될까요?\n팬데믹은 이전까지 '상식'이라고 여겨온 많은 것에 의문을 제기했고, 물가 상승률 목표치에도 물음표가 붙었죠. 제가 어른이 된 이후로, 이렇게 높은 물가 상승률과 이렇게 낮은 기준금리는 처음 봤거든요.\n우리나라의 경우, 팬데믹 이전에는 한국은행이 오히려 2%를 밑도는 물가 상승률 때문에 고민이 많았습니다. 물가 상승률이 0%대까지 내려가면서, ‘저금리·저물가·저성장’ 3저 현상이 ‘뉴노멀(새로운 표준)’이라는 표현도 자주 등장했고요.\n그러나 엔데믹이 오기도 전에, 경기가 스스로 살아나기 전에 물가가 먼저 고개를 들기 시작했죠. 목표치인 2%를 넘어 5%, 6%에 다다랐습니다. 원래는 물가 상승률이 2%를 훌쩍 넘기면 고민 없이 시중 통화량을 인위적으로 줄여 경기를 안정화 시켜야 했지만, 팬데믹처럼 경기 회복이 급선무인 상황에서는 어느 정도의 인플레이션은 용인해야 한다는 목소리가 커졌죠. 아예 중앙은행이 임시적으로 인플레이션 목표치를 높이는 것이 도움이 된다는 주장도 보여요.\n최근 우리나라 물가상승률이 3년 반 만에 1%대로 내려왔어요. 좋은 신호로 볼 수 있을까요?\n지난했던 물가와의 싸움이 끝난 셈이니 일단은 '좋은 신호'라고 볼 수 있겠습니다. 지난달(9월) 소비자물가 상승률은 전년 동월 대비 1.6%에 그쳤습니다. 2022년 7월 6.3% 기록과 비교하면 2년 사이 물가가 정말 많이 내렸죠. 덕분에 지난 11일 한국은행도 3년 2개월 만에 기준금리를 3.50%에서 3.25%로 내릴 수 있었습니다. 금리가 내려가면 대출이 있는 사람들, 그리고 부채가 많은 기업들 부담이 전보다 덜해지겠죠.\n문제는 물가만 문제가 아니었다는 것인데요. 집값은 여전히 높고 가계부채도 많이 쌓여 있습니다. 기준금리가 아직 내려가기 전인 8월에도 가계대출이 10조 원 가까이 늘었습니다. 금리가 내려가면 이미 위험 신호가 들어온 가계부채가 더 빠르게 늘어날 위험도 있습니다.\n경제는 항상 돌고 돕니다. 버는 돈이 늘어만 가고, 사고 싶은 것은 다 살 수 있는 시기가 천년만년 이어진다면 기업도, 노동자도, 정부도 걱정이 없겠지만 그렇지가 않습니다. 올라가는 힘이 세지면 내려가기도 하고, 너무 많이 내려가면 저절로 올라오기도 하는 것이 경기죠. 너무 낮은 물가 상승률 때문에 고민하는 때가 또 오고, 물가가 너무 올라 고민일 때가 또 올 것입니다. 물가 고공행진은 멈춰서 다행이지만, 1%라도 오르긴 오르는 것이죠. 티 안 나게 계속 오르는 물가만큼 우리 월급도 은은하게라도 따라 오르길 바라겠습니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 주소은 Graphic 조수희 이제현",
        "content": "월간 토스픽 09. 삼순이와 물가상승",
        "contentSnippet": "월간 토스픽 09. 삼순이와 물가상승",
        "guid": "https://blog.toss.im/article/monthly-tosspick-2024-9",
        "isoDate": "2024-10-17T02:10:00.000Z"
      },
      {
        "title": "전기요금 누진제, 예상치 못한 여름철 요금 폭탄의 이유는?",
        "link": "https://blog.toss.im/article/economic-terms-32-progressive-electricity-billing",
        "pubDate": "Thu, 17 Oct 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}이 글에서 알 수 있는 것들\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}우리집 9~10월 관리비, 유난히 전기 요금이 많이 나온 이유\n7년 째 그대로인 전기요금 누진제, 현재 상황에 맞게 수정되어야 한다는 의견이 나오는 이유\n\n.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-p4abj2{display:contents;line-height:1.55;}🔖 이번 주 경제 용어\n전기요금 누진제\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n전기 사용량이 늘어날수록, 구간별 더 높은 단가를 적용하는 전기요금 제도를 말해요.\n\n\n혹시 올여름, 폭염 때문에 에어컨을 계속 틀어두느라 예상보다 높은 전기요금에 놀라신 적 있으신가요? 8월에 사용한 전기 요금이 9월 관리비에 포함된 고지서를 받고 당황하신 분들도 많으실 겁니다. \n예상보다 크게 늘어난 요금 때문에 속상하셨을 텐데요. 이는 올해 기록적인 폭염으로 인해 수많은 가정이 경험한 현실이기도 합니다. 이 현상의 원인은 바로 전기요금 누진제 때문입니다. \n누진이란 뜻이 가격, 수량 따위가 더해짐에 따라 상대적으로 그에 대한 비율이 점점 높아지는 것을 의미하는데요. 전기요금 누진제는 전력 소비가 많아질수록 요금이 급격히 증가하는 구조로, 전기 과소비를 억제하려는 목적으로 도입되었습니다.\n현재 전기요금 누진제는 여름철(7월~8월)에 주택용 전기 사용량을 3단계로 나누어 요금을 부과합니다. \n예를 들어, 300kWh 이하의 전력을 사용하면 kWh당 120원(1단계) 요금을 부과하지만, 300kWh를 넘으면 kWh당 214.6원(2단계), 450kWh 이상을 사용하면 kWh당 307.3원(3단계)의 요금이 적용됩니다.\n기본요금도 300kWh 이하일 때는 910원이지만, 이를 초과하면 1,600원, 450kWh를 넘으면 무려 7,300원이 부과됩니다. 기울기가 가파른 곡선처럼 요금이 증가하는 거죠.\n\n이 때문에 더운 여름철에는 에어컨 사용 등으로 인해 전기 사용량이 크게 늘어, 전기요금이 급격히 상승하게 됩니다. 특히 역대급 무더위가 계속된 올해 여름에는 에어컨을 장시간 틀게 되면서 전기요금 구간이 바뀐 가정이 많았습니다.\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}\"내가 전기 과소비라고?\"…8월 최고누진요금 1천만세대 돌파\n(연합뉴스 2024.9.30)\n일반 가정의 여름 전기 사용량이 빠르게 늘어나는 추세 속에서 지난 8월 이례적 폭염까지 닥쳐 가정용 전기요금 누진제 최고 요금을 적용받는 가구가 1천만 가구를 넘어 가장 흔한 유형이 된 것으로 나타났다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}특별히 다른 집보다 전기를 많이 쓰지 않는 평균적 가정 다수가 '전기 과소비'로 경제적 불이익을 받는 최고 누진 구간에 해당하게 되면서 7년째 그대로인 누진 구간을 현실에 맞게 조정해야 한다는 지적이 나온다.\n30일 한국전력이 국회 산업통상자원중소벤처기업위원회 소속 더불어민주당 장철민 의원에게 제출한 자료에 따르면 국내 2천512만가구 중 지난 8월 전기요금 최고 누진 구간인 3단계 가구는 1천22만가구로 전체 가구의 약 40.5%를 차지해 가장 많았다.\n가장 싼 요금을 적용받는 1단계 가구는 895만가구, 중간인 2단계 가구는 604만 가구였다.\n올해 여름 폭염 여파로 3단계 가구는 작년의 844만명에서 약 21% 급증했다. 작년 8월에는 가장 낮은 요금이 적용되는 1단계 가구가 전체 2천521만 가구 중 993만 가구로 가장 많았다. 2단계, 3단계 적용 대상은 각각 684만가구, 844만가구였다. (중략)\n\n\n한국전력이 공개한 자료에 따르면, 지난 8월 전기요금 최고 누진 구간인 3단계, 450kWh를 넘는 전기를 사용한 가구는 1,022만 가구로 전체의 40.5%를 차지했습니다. \n이는 이제 ‘전기 과소비자’로 간주되는 3단계 가구가 평범한 가정에서도 흔하게 나타나고 있다는 것을 의미합니다. 전기를 특별히 많이 쓰지 않는 가정도 여름에 에어컨을 좀 더 틀면 전기 요금을 과하게 내야 하는 겁니다.\n또한, 누진제는 가구원이 많을수록 더 불리하게 작용하는 경향이 있습니다. 예를 들어, 1인 가구가 300kWh를 사용하고 4인 가구가 600kWh를 사용했을 때를 볼게요. 4인 가구의 1인당 사용량은 150kWh로 1인 가구의 절반 수준임에도 불구하고, 더 높은 요금을 내야 하는 구조입니다. 이는 여러 세대가 함께 사는 가정에게는 매우 불합리한 측면이 있죠.\n다만, 3자녀 이상의 다자녀 가구일 경우 전기요금 할인을 신청해 요금을 감면받을 수 있습니다. 16,000원 한도 내에서 월 전기요금의 30%를 감면받을 수 있어요. (*신청 방법은 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}여기를 참고하시면 됩니다)\n이처럼 현재의 누진제는 최근 현대 사회의 변화한 생활 방식과 경제 환경을 충분히 반영하지 못하고 있어, 조정이 필요하다는 목소리가 높습니다. 특히, 냉방 수요와 전자기기 사용이 늘어난 상황에서 누진제의 최고 구간을 적용받는 가구가 크게 증가하면서, 전기 과소비에 대한 처벌적 구조의 전기요금 누진제는 더 이상 현실에 맞지 않는다는 비판이 제기되고 있습니다.\n하지만 전기요금 누진제가 현실에 발맞추기까지는 시간이 걸릴 수 있으니, 당장 각 가정에서 전기요금 부담을 줄이기 위해 실천할 수 있는 절전 방법을 찾아보는 것이 현명해 보입니다. 한국전력공사에서 제안하는 여름철 절전 요령을 참고해볼게요. 어떤 것들이 있을까요?\n[전기 절약 행동 요령 및 절전 권장 사항]\n\n여름철 전력 피크 시간대(오후 2시~5시)에는 전기 사용을 최대한 자제합니다.\n사용하지 않는 전자기기의 플러그는 뽑아둡니다. TV, 컴퓨터, 충전기 등이 여기에 포함됩니다.\n실내 온도는 26도 이상으로 유지합니다.\n사용하지 않는 공간의 조명은 완전히 꺼두어야 합니다.\n실내 냉방기기의 온도를 한 단계 낮게 설정합니다. ‘강’ 대신 ‘약’으로 설정하는 것이죠.\n세탁기는 한 번에 모아서, 식기세척기도 한 번에 가득 채워 사용하는 것이 효율적입니다.\n냉장고의 음식물은 60%만 채워 냉기 순환이 원활하게 하세요. 냉장고는 벽과 거리를 두고 설치하며, 뒷면 방열판은 주기적으로 청소해 에너지를 절약합니다.\n가전제품을 구입할 때는 가구 구성원 수에 맞는 적정 용량과 1등급 에너지 효율 제품을 선택하세요.\n백열등을 형광등이나 LED 조명으로 교체해 전기 사용량을 줄일 수 있습니다.\n\n귀찮은 일들이 많아지겠지만 이러한 작은 노력들이 모이면, 전기요금 부담은 물론이고 불필요한 전력 소비를 크게 줄일 수 있을 것입니다. 함께 노력해봐요.\n\n\nkWh(킬로와트시): 전력 사용량을 나타내는 단위. 1kWh는 1시간 동안 1킬로와트의 전력을 사용하는 것을 의미해요. 예를 들어, 1kW의 전력을 사용하는 에어컨을 1시간 동안 가동하면 1kWh를 소비하는 것입니다.\n에너지 효율 등급: 전자제품의 에너지 소비 효율을 나타내는 등급. 1등급에서 5등급까지 나뉩니다. 숫자가 적을수록 에너지 효율이 좋고, 전력 소비가 적은 제품이에요. 가전제품을 구매할 때 에너지 효율 등급이 높은 제품을 선택하면 전기요금을 절약할 수 있어요.\n전력 피크 시간대: 하루 중 전기 사용량이 가장 많은 시간대. 여름철에는 오후 2시에서 5시 사이가 전력 피크 시간대로, 이때는 많은 가정과 산업체에서 냉방기기 등을 사용하기 때문에 전기 사용량이 급증해요. 전력 피크 시간대에는 전력 수요가 공급을 초과할 수 있어 가급적 전기 사용을 자제하는 것이 권장됩니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "폭염 속 늘어난 전기요금, 우리 집만의 문제가 아니었다",
        "contentSnippet": "폭염 속 늘어난 전기요금, 우리 집만의 문제가 아니었다",
        "guid": "https://blog.toss.im/article/economic-terms-32-progressive-electricity-billing",
        "isoDate": "2024-10-17T02:00:00.000Z"
      },
      {
        "title": "공연 티켓값은 왜 비쌀까?",
        "link": "https://blog.toss.im/article/everyday-economics-19-concert-ticket",
        "pubDate": "Wed, 16 Oct 2024 05:40:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}이 글에서 알 수 있는 것들\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}공연 좌석/시간에 따라 티켓 가격이 다르게 매겨지는 이유\n오페라, 연극, 클래식 음악회 등 공연 종류에 따라 가격이 다르게 매겨지는 이유\n해외 유명 오케스트라 공연 티켓이 국내 오케스트라 공연 티켓보다 비싼 이유\n\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-94on8q{white-space:pre-wrap;color:#c770e4;font-weight:bold;}에디터 G (이하 G): 교수님, 가을이 시작되면서 공연의 계절 또한 시작된 것 같아요. 클래식 음악회부터 뮤지컬, 연극, 페스티벌 등 다양한 문화예술 공연 소식이 들리더라고요.\n.css-12p6bv8{white-space:pre-wrap;color:#15c47e;font-weight:bold;}교수 K (이하 K):.css-1p9vrlv{white-space:pre-wrap;color:#15c47e;} 그러게요. 나들이하기 좋은 날씨에 점점 공연을 즐기는 분들이 많아지겠군요. 에디터 님은 어떤 공연을 가장 좋아하시나요?\nG: 사실 공연을 아주 즐기는 편은 아닌데요. 얼마 전 여름휴가 때 런던 웨스트엔드에서 뮤지컬을 보고 정말 감동받은 경험이 있어요. 이야기도 풍부하고 볼 거리, 들을 거리가 많은 뮤지컬을 선택할 수 있겠어요.\nK: 그렇군요. 저는 종종 내한 공연을 오는 해외 오케스트라의 공연에 관심을 가지는 편인데요. 2023년에 내한한 베를린 필하모닉 오케스트라의 공연이 클래식 음악 애호가들 사이에서 큰 화제를 모았었어요. ‘베를린 필하모닉’은 전 세계에서 가장 권위 있는 오케스트라 중 하나이기 때문에, 클래식 음악을 즐겨 듣는 사람이라면 누구나 한번 쯤은 직접 공연장에 가서 연주를 들어보고 싶어하겠죠.\n그러나, 유명한 오케스트라인 만큼 티켓 가격이 만만치 않았습니다. 가장 비싼 좌석의 가격은 50만 원이 넘었는데요. 유럽 현지에서 같은 오케스트라의 공연을 관람하는 것과 비교해보면 훨씬 높은 금액이었습니다.\nG: 맞아요. 뮤지컬도 해외에서 잘 된 공연이 국내에 들어올 때 가격이 더 높아지는 것 같았어요.\nK: 도대체 공연 티켓 가격은 어떻게 결정되는 것일까요? 오늘은 공연 티켓의 가격에 숨어 있는 경제학 원리를 한번 살펴보도록 하겠습니다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n1. 공연 티켓의 가격 차별화 원리\nK: 공연 티켓은 ‘가격 차별’이 발생할 수 있는 대표적인 재화인데요. 예전에 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}학생 할인 아티클에서 살펴본 것처럼, 가격 차별은 동일한 재화나 서비스에 대해 소비자의 지불 능력이나 선호도에 따라 서로 다른 가격을 부과하는 전략입니다.\nG: 기억나요. 왜 항상 학생들은 할인 가격을 적용받는지에 대해, 각 구매자가 지불하려는 혹은 지불할 수 있는 가격에 맞춰 서로 다른 판매 가격을 책정하는 가격 차별 원리에 대해 설명해주셨었어요. 학생들은 직장인들에 비해 소득이 낮고 상대적으로 구매력이 떨어지니, 이런 특성을 고려해 학생과 일반인에게 서로 다른 가격을 매길 수 있다고요.\nK: 맞아요. 잘 기억하고 계시네요. 공연 티켓에서도 주로 사용되는 가격 차별화 역시 소비자를 여러 그룹으로 나누고, 각 그룹마다 서로 다른 가격을 책정하는 방식으로 이루어지는데요.\n가장 대표적인 것이 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}좌석 위치에 따른 가격의 차별화입니다. 소비자들의 지불 의사(willingness to pay)는 좌석의 위치에 따라 달라지며, 공급자는 이를 기반으로 다양한 가격대를 설정하게 됩니다. 예를 들어, 무대와 가까운 중앙 좌석은 관객들이 가장 선호하는 자리이므로 지불 의사가 가장 높습니다. 따라서 더 높은 가격을 부과할 수 있는 것이죠.\n다음으로, 무대와 어느 정도 거리가 있거나, 측면에 위치한 좌석은 시야와 음향에서 다소 불리하지만 여전히 관람 가치가 있는 자리로, 중간 가격대를 형성합니다. 반면, 무대에서 멀거나, 시야가 제한된 좌석은 공연을 감상하기에 최적의 위치가 아니므로, 관객의 지불 의사가 낮습니다. 이를 반영해 티켓 가격이 저렴하게 설정됩니다.\nG: 어떤 좌석에서 보는지에 따라 공연 경험이 달라질 수 있으니, 더 좋은 자리일 수록 더 비싸게 팔릴 수밖에 없겠어요.\nK: 그렇죠. 다음으로 생각해 볼 수 있는 것은 시간에 따른 가격 차별화입니다. 예를 들어, 공연 당일에 판매 되는 공연 티켓인 데이 시트(Day Seat)는 미리 예약된 티켓보다 저렴하게 제공되는 경우가 많습니다.\n일반적으로 공연장의 좌석 수는 한정되어 있고, 공연 날짜와 시간 역시 고정되어 있습니다. 공연일이 다가오는데 판매되지 않은 티켓은 그 자체로 매몰 비용(sunk cost)이 되는데요. 만약 남은 좌석이 판매되지 않으면, 그 좌석은 공연이 끝날 때까지 빈자리로 남아서 아무런 수익을 창출하지 못하게 됩니다.\n따라서 남은 좌석을 저렴하게라도 판매하여 수익을 확보하는 것이 공연 제작자에게는 더 유리합니다. 이와 같이 데이 시트 티켓은 공연 당일 남은 좌석을 저렴하게 판매함으로써 수익을 회수하는 전략입니다.\nG: 아무리 뮤지컬 본고장인 런던이라 해도 미리 예매하려니 너무 비싸서, 저도 데이 시트를 노렸었거든요. <라이온 킹> 뮤지컬을 Royal Circle 자리에서 봤는데, 50% 가까이 할인된 가격으로 구매할 수 있었어요. 데이시트 좌석은 대부분 한 자리씩 남는지라 일행과 떨어져서 봐야한다는 단점이 있지만… 그래도 저렴한 가격에 좋은 자리에서 멋진 뮤지컬을 감상할 수 있으니, 어느 정도 감수할 수 있었답니다.\nK: 데이 시트 장점을 정말 잘 활용하셨네요. 에디터 님처럼 당일에 티켓을 구매하는 사람들도 있지만, 좋은 자리를 미리 사수하고 싶어하는 사람들은 티켓을 미리 구매하려 할텐데요.\n이렇게 미리 티켓을 구매하는 소비자에게 할인을 제공할 수도 있답니다. 조기 예매 할인은 공연 기획자에게 초기 수요를 파악할 수 있다는 이점이 있거든요. 공연 티켓 판매가 어떻게 진행될지 미리 알 수 없는 상황에서, 조기 예매를 통해 수요를 예측하고 그에 따라 공연의 마케팅 및 운영 전략을 조정할 수 있는 것이죠.\n만약, 초기 판매가 부진하면 더 적극적인 홍보나 추가 할인을 고려할 수 있고, 수요가 높다면 가격을 유지하거나 인상할 수 있습니다. 공연이 임박한 시점에 티켓이 남아 있으면 매진되지 않을 위험이 있지만, 조기 예매로 일부 티켓을 미리 판매하면 이러한 위험을 줄일 수도 있고요.\n또한, 조기 예매 할인은 초기 매출을 확보하는 중요한 방법입니다. 공연 준비에는 상당한 비용(대관료, 인건비, 홍보비 등)이 들어가며, 이러한 비용을 충당하기 위해서는 초기 자금이 필요합니다. 조기 예매를 통해 일찍 매출을 확보함으로써, 공연 운영에 필요한 현금 흐름을 안정적으로 유지할 수 있는 것이죠.\nG: 얼마 전에 관심있는 사진전 티켓을 사전예약 판매한다는 광고를 봤는데, 정가의 50% 가격으로 판매하더라고요. 원래도 가고 싶었던 사진전이기도 하고 전시 기간 동안만 방문하면 되니, 어차피 갈거면 미리 구매하는게 이득이겠다 싶어서 티켓을 샀어요. 전시, 공연 기획자들에게 사전예약 판매는 여러모로 큰 장점이 있기 때문에 이 정도 할인율을 매기는 거군요!\nK: 맞아요. 공연 티켓 뿐 아니라 수많은 기업, 판매자들이 사전예약을 진행하는 이유가 다 여기에 있다 보시면 돼요.\n앞서 설명한 것과 같이, 좌석 위치와 시간에 따라서 공연 티켓의 가격을 다르게 매기는 현상의 기저에는 수요의 가격 탄력성(elasticity)이라는 경제학 원리가 숨어 있습니다. 수요의 가격 탄력성은 가격 변화에 따라 수요가 변하는 정도를 나타내는 개념입니다. 즉, 가격이 오르거나 내릴 때, 소비자의 수요가 얼마나 민감하게 반응하는지를 나타내는 것이죠.\nG: 가격 변화에 따라 수요가 변하는 정도를 나타낸다면, 각각의 상황을 어떻게 이해하는 것이 좋을까요?\nK: 탄력적(elastic) 수요는 가격이 조금만 올라가도 수요가 크게 줄어드는 경우인데요. 가격에 민감한 소비자들이 많을 때, 수요는 탄력적입니다.\n반면, 비탄력적(inelastic) 수요는 가격이 올라도 수요가 크게 변하지 않는 경우를 말합니다. 가격에 덜 민감한 소비자들이 많을 때, 수요는 비탄력적이죠.\nG: 아하! 그럼 공연 티켓도 이런 특성을 이용해 차별화된 가격이 설정될 수 있겠군요?\nK: 맞습니다. 조금 전 살펴본 것처럼 공연 주최자는 좌석 위치와 공연 시간에 따라 차별화된 가격을 책정함으로써 수익을 극대화하는데요. 이때 각 소비자 그룹의 수요의 ‘가격 탄력성’을 고려하게 됩니다.\n예를 들어, 무대와 가까운 프리미엄 좌석은 일반적으로 수요가 비탄력적입니다. 이 좌석을 원하는 관객들은 좋은 시야와 경험을 위해 더 높은 가격을 기꺼이 지불하려는 경향이 강하고, 가격 상승에 덜 민감해요. 즉, 티켓 가격이 높게 책정될 수 있습니다.\n반면, 무대에서 멀거나 시야가 제한된 좌석에 대한 수요는 일반적으로 탄력적입니다. 꼭 특정한 자리를 선호하는 것이 아니라, 공연 자체를 편하게 즐기러 오는 관객들이 많기 때문에 가격에 비교적 민감하게 반응할 수 있어요. 이 경우, 티켓 가격이 오르면 좌석에 대한 수요가 크게 줄어들 수 있겠죠. 따라서 공연 주최 측은 이 좌석들의 티켓 가격을 상대적으로 낮게 책정하여 더 많은 수요를 유도하려고 한답니다.\n실제로 작년에 내한한 베를린필의 공연 티켓의 경우, 가장 비싼 좌석의 가격은 50만 원이 넘었지만, 가장 낮은 등급의 좌석은 10만 원으로 책정되었어요. 좌석 위치에 따른 가격 차별화의 대표적인 예라고 할 수 있겠죠.\nG: 좌석 위치에 따라 소비자 그룹 수요의 가격 탄력성을 고려한다는 것은 이해가 됐어요. 그럼 공연 시간에 따라 다른 가격을 책정하는 것도 가격 탄력성 때문이라 볼 수 있나요?\nK: 그럼요. 공연 시간에 따라서도 수요의 가격 탄력성이 달라질 수 있습니다. 주말이나 저녁 시간대 공연에 대한 수요는 비탄력적인 경향이 있습니다. 이 시간대는 대부분의 사람들이 일하지 않는 시간대기 때문에, 관람을 선호하는 사람들이 많습니다. 이 시간대를 선택해야 하는 관객은 가격이 다소 오르더라도 여전히 티켓을 구매하려는 경향이 있습니다. 따라서 공연 주최 측은 이러한 시간대에 더 높은 가격을 설정할 수 있죠.\n반면, 평일 낮 시간대나 당일에 상연하는 공연 티켓은 상대적으로 탄력적 수요를 가집니다. 낮 시간이나 당일 티켓의 잠재적 구매자들은 상대적으로 가격에 민감하며, 가격이 높으면 수요가 크게 줄어들 수 있습니다. 이 때문에 공연 주최 측은 티켓 가격을 할인해서 더 많은 관람객을 유도하려고 하는 것이죠.\n2. 공연 종류 별로 티켓 가격에 차이가 나는 이유\nG: 교수님, 그렇다면 오페라, 연극, 클래식 콘서트 등 각 공연의 종류별로 티켓 가격에 차이가 나는 이유는 무엇일까요?\nK: 각 공연의 티켓 가격은 해당 공연의 특성, 비용 구조, 수요와 공급, 그리고 시장 경쟁 상황에 의해 결정되는데요.\n예를 들어, 오페라는 공연 예술 중에서도 가장 비싼 티켓 가격을 형성하는 경우가 많습니다. 대규모 오케스트라, 성악가, 무대 세트, 의상 등 다양한 측면에서 큰 비용이 발생하기 때문입니다.\n특히, 유명 성악가의 출연료와 화려한 무대 장치는 비용을 크게 증가시키는 요인입니다. 또한, 오페라 공연은 한정된 기간 동안만 열리며, 특정 작곡가의 작품이나 전 세계적으로 유명한 성악가가 참여하는 경우 희소성이 높아집니다.\n그리고 오페라 관객들은 상대적으로 가격 변화에 민감하지 않은 경향성이 있어요. 그 결과, 오페라 티켓의 가격은 다른 공연들에 비해 비싸게 매겨집니다.\n반면, 연극의 티켓 가격은 보통 오페라보다는 낮은 편입니다. 연극은 오페라에 비해 상대적으로 적은 인원과 기술적 장비를 요구하는 경우가 많습니다. 배우의 인건비를 제외하고는 세트, 음향, 조명 등의 비용이 상대적으로 적게 들어가기 때문에, 총 제작비가 낮습니다.\n또한, 연극 관객들은 오페라 관객보다 상대적으로 가격에 민감할 수 있습니다. 특히 실험적이거나 덜 알려진 작품일 경우 수요가 탄력적이기 때문에, 가격을 높게 설정하면 수요가 급감할 위험이 큽니다. 이는 연극 티켓 가격이 다른 공연들에 비해 상대적으로 낮게 설정되는 이유 중 하나입니다.\n클래식 콘서트의 경우, 공연의 규모나 연주자의 명성에 따라 티켓 가격에 차이가 납니다. 클래식 음악 연주는 고도의 기술을 요구하기 때문에 연주자들에게 지불해야 하는 인건비가 높습니다. 특히 유명 지휘자나 솔리스트의 출연료는 상당히 비싸기 때문에, 이 비용이 티켓 가격에 반영됩니다.\n또한, 특정 유명 오케스트라나 지휘자가 이끄는 클래식 공연은 자주 열리지 않기 때문에, 이러한 희소성이 티켓 가격을 높이는 요인이 됩니다. 수요가 공급을 초과하면 티켓 가격이 올라가기 때문이죠.\n다만, 일부 클래식 공연은 공공 또는 민간의 후원으로 보조를 받을 수 있어 티켓 가격이 상대적으로 낮게 책정될 수도 있습니다. 후원이 부족한 경우, 가격이 높게 유지될 가능성이 있고요.\n3. 해외 유명 오케스트라 공연 티켓이 비싼 이유\nG: 지금까지 교수님께서 알려주신 사실들을 바탕으로, 해외 오케스트라의 내한 공연이 왜 국내 오케스트라 공연보다 상대적으로 비싼지 설명할 수 있겠어요. 바로 ‘희소성' 때문이겠네요.\nK: 정확해요. 한국에서 해외 유명 오케스트라 공연에 대한 수요는 매우 높은 반면, 해외 오케스트라가 한국을 자주 방문할 수 없기 때문에 공급은 상대적으로 제한적입니다. 조금 전 말씀드린 것처럼, 수요와 공급의 불균형은 티켓 가격을 자연스럽게 끌어올리는 대표적인 요인이죠.\n다음으로 생각해볼 수 있는 것은 비용입니다. 세계적으로 유명한 오케스트라를 한국으로 초청하는 데는 출연료, 항공료, 악기 운반료, 숙박, 식사, 그리고 공연 준비 비용 등과 같은 막대한 비용이 발생합니다. 이렇게 비용이 높다 보니 티켓 가격도 자연스럽게 올라갈 수 밖에 없는 것이죠. 그러나 아무리 티켓 가격이 높아도 티켓 판매만으로는 이 비용들을 다 충당하기에는 역부족인데요. 해외 유명 오케스트라의 경우 티켓을 전부 판매해도 제작비의 50% 수준 정도만 커버할 수 있는 것으로 알려져 있습니다.\nG: 헉, 그럼 나머지 50%는 어떻게 커버하나요?\nK: 이런 상황에서 기업의 후원이 중요한 역할을 합니다. 기업은 공연을 후원함으로써 공연 제작사에게 상당한 재정적 지원을 제공합니다. 기업의 후원으로 공연 주최자는 높은 제작비를 충당할 수 있고, 티켓 가격을 낮출 여유가 생깁니다. 후원의 대가로 기업은 자사의 고객, 임직원, 파트너들에게 공연 관람 혜택을 제공할 수 있는 초대권을 대량으로 확보해서 마케팅 도구로 활용할 수 있고요.\nG: 아하…! 간혹 카드사에서 유명한 공연을 정가보다 훨씬 저렴한 가격에 예약할 수 있다는 혜택 알림 문자가 왔었는데, 바로 이런 경우였군요.\nK: 에디터 님도 받아본 적 있으시군요. 맞아요. 해당 카드사가 후원한 공연일 가능성이 높겠죠. 다만, 경제학적으로 바라 보면 기업의 후원이 오히려 티켓 가격을 올리는 유인으로 작용할 가능성도 존재할 수 있습니다.\n예를 들어, 공연 티켓 가격이 오르면 동일한 초대권의 금전적 가치가 상승하게 됩니다. 이는 초대권을 제공하는 기업에게는 더 높은 가치를 지닌 혜택을 제공하는 것으로 해석될 수 있습니다. 초대권은 비용을 지불하지 않고 얻는 혜택이기 때문에, 티켓 가격이 높을수록 그 혜택의 상대적 가치는 더욱 커지게 됩니다. 즉, 초대권을 받은 사람들(고객, 임직원 등)에게 더 큰 보상으로 인식될 가능성이 큰 것이죠.\n또한 공연 후원을 통해 고가의 공연 티켓을 확보할 수 있는 기업이라는 사실은 해당 기업의 브랜드 이미지를 강화하는 데 기여할 수 있습니다. 프리미엄 공연에 초대권을 제공하는 기업은 그만큼 고객이나 파트너에게 특별한 경험을 선사하는 회사로 인식되는 것이죠. 그리고 초대권의 금전적 가치 상승을 통해 기업이 후원에 지출한 금액에 대한 투자 대비 수익률(ROI)도 향상될 수도 있습니다.\nG: 그렇군요. 후원 기업 입장에서는 이왕이면 티켓 가격이 높아야 생색(?)도 낼 수 있으니 티켓 가격이 높을수록 이득이 되겠어요.\nK: 맞아요. 이를 반영하여 공연 주최측에서는 해외 유명 오케스트라의 티켓 가격을 높은 수준에서 설정할 유인이 존재하는 것입니다.\n결국, 우리가 보게 되는 해외 유명 오케스트라의 최종 티켓 가격에는 가격 차별화, 수요의 가격 탄력성, 수요와 공급의 원리, 공연 비용, 기업의 후원 등이 복합적으로 반영된 것임을 알 수 있습니다.\n이제 날씨가 많이 선선해져서 공연 보러 가기 참 좋은 계절이에요. 이번 가을에 공연을 관람할 예정이라면, 내가 구매하는 티켓의 가격에는 어떤 요소들이 반영되었는지를 한번쯤 생각해보면 좋을 것 같습니다.\n.css-13d8cj1{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;margin:24px 0 8px;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:var(--adaptiveGrey700);}\n.css-1dzrkjz{width:16px;margin-right:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\n.svg-icon-wrapper{position:relative;display:inline-block;width:24px;height:24px;}.svg-icon-wrapper >.svg-icon:empty+.svg-icon-fallback{visibility:visible;z-index:inherit;}.svg-icon{color:var(--adaptiveGrey900);display:inline-block;width:24px;height:24px;display:block;width:100%;height:100%;}.svg-icon svg,.svg-icon img{display:block;width:100%;height:100%;}.svg-icon--hide{display:none;}.svg-icon-fallback{position:absolute;left:0;right:0;top:0;z-index:z-index(hidden);visibility:hidden;display:block;width:100%;height:100%;}.svg-icon-fallback--show{visibility:visible;z-index:inherit;}\n참고자료\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이제현",
        "content": "특히 공연장의 ‘그’ 자리, 왜 유독 비싼 걸까?",
        "contentSnippet": "특히 공연장의 ‘그’ 자리, 왜 유독 비싼 걸까?",
        "guid": "https://blog.toss.im/article/everyday-economics-19-concert-ticket",
        "isoDate": "2024-10-16T05:40:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]