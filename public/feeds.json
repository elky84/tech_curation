[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Indexing code at scale with Glean",
        "link": "https://engineering.fb.com/2024/12/19/developer-tools/glean-open-source-code-indexing/",
        "pubDate": "Thu, 19 Dec 2024 14:00:29 +0000",
        "content:encodedSnippet": "We’re sharing details about Glean, Meta’s open source system for collecting, deriving, and working with facts about source code.\nIn this blog post we’ll talk about why a system like Glean is important, explain the rationale for Glean’s design, and run through some of the ways we’re using Glean to supercharge our developer tooling at Meta.\nIn August 2021 we open-sourced our code indexing system Glean. Glean collects information about source code and provides it to developer tools through an efficient and flexible query language. We use Glean widely within Meta to power a range of developer tools including code browsing, code search, and documentation generation.\nCode Indexing\nMany tools that developers use rely on information extracted from the code they’re working on. For example:\nCode navigation (“Go to definition”) in an IDE or a code browser;\nCode search;\nAutomatically-generated documentation;\nCode analysis tools, such as dead code detection or linting.\nThe job of collecting information from code is often called code indexing. A code indexing system’s job is to efficiently answer the questions your tools need to ask, such as, “Where is the definition of MyClass?” or “Which functions are defined in myfile.cpp?”\nAn IDE will typically do indexing as needed, when you load a new file or project for example. But the larger your codebase, the more important it becomes to do code indexing ahead of time. For large projects it becomes impractical to have the IDE process all the code of your project at startup and, depending on what language you’re using, that point may come earlier or later: C++ in particular is problematic due to the long compile times.\nMoreover, with a larger codebase and many developers working on it, it makes sense to have a shared centralized indexing system so that we don’t repeat the work of indexing on every developer’s machine. And as the data produced by indexing can become large, we want to make it available over the network through a query interface rather than having to download it.\nThis leads to an architecture like this:\nIn practice the real architecture is highly distributed:\nIndexing can be heavily parallelized and we may have many indexing jobs running concurrently;\nThe query service will be widely distributed to support load from many clients that are also distributed;\nThe databases will be replicated across the query service machines and also backed up centrally.\nWe’ve found that having a centralized indexing infrastructure enables a wide range of powerful developer tools. We’ll talk about some of the ways we’ve deployed Glean shortly, but first we’ll dive into the rationale for Glean’s design.\nHow is Glean different?\nCode indexing systems have been around for a while. For example, there’s a well-established format called LSIF used by IDEs that caches information about code navigation.\nWhen we designed Glean we wanted a system that wasn’t tied either to particular programming languages or to any particular use case. While we had some use cases in mind that we wanted to support—primarily code navigation of course—we didn’t want to design the system around one use case, in the hope that a more general system would support emerging requirements further into the future.\nTherefore:\nGlean doesn’t decide for you what data you can store. Indeed, most languages that Glean indexes have their own data schema and Glean can store arbitrary non-programming-language data too. The data is ultimately stored using RocksDB, providing good scalability and efficient retrieval.\nGlean’s query language is very general. It’s a declarative logic-based query language that we call Angle (“Angle” is an anagram of “Glean”, and means “to fish”). Angle supports deriving information automatically, either on-the-fly at query time or ahead of time; this is a powerful mechanism that enables Glean to abstract over language-specific data and provide a language-neutral view of the data.\nStoring arbitrary language-specific data can be very powerful. For example, in C++ we use the detailed data to detect dead code such as unused #include or using statements. The latter in particular is rather tricky to do correctly and requires the data to include some C++-specific details, such as which using statement is used to resolve each symbol reference.\nOn the other hand, clients often don’t want the full language-specific data. They want to work at a higher level of abstraction. Imagine asking questions like, “Give me the names and locations of all the declarations in this file”, which should work for any language, and which you could use to implement a code outline feature in a code browser. Glean can provide this language-neutral view of the data by defining an abstraction layer in the schema itself – the mechanism is similar to SQL views if you’re familiar with those. This means that we don’t have to compromise between having detailed language-specific data or a lowest-common-denominator language-neutral view; we can have both.\nThis generality has allowed Glean to extend to a number of use cases beyond what we originally envisaged. We’ll cover some of those later in this post.\nA taste of Angle\nGlean has a unified language, Angle, for specifying both schemas and queries. As mentioned above, each language that we index has its own schema. To give you a flavor of this, here’s a fragment of the schema for C++ function declarations:\n\nDefining a schema for Glean is just like writing a set of type definitions. The braces surround a record definition, with a set of fields and their types. \nA FunctionDeclaration is a predicate (roughly equivalent to a table in SQL). \nThe instances of a predicate are called facts (roughly equivalent to rows in SQL). \nA predicate is a thing that you can query, and a query returns facts. \nTo query efficiently you specify a prefix of the fields. So, for example, we can retrieve a particular FunctionDeclaration efficiently if we know its name.\nLet’s write a query to find the function folly::parseJson:\n\nWithout going into all the details, at a high level this query specifies that we want to find FunctionDeclaration facts that have a particular name and namespace. Glean can return results for this query in about a millisecond.\nAngle supports more complex queries too. For example, to find all classes that inherit from a class called exception and have a method called what that overrides a method in a base class:\n\nThis query returns the first results in a few milliseconds, and because there might be a lot of results we can fetch the results incrementally from the query server.\nIncremental indexing\nAn important innovation in Glean is the ability to index incrementally. As the codebase grows, and the rate of change of the codebase increases (a monorepo suffers from both of these problems) we find that we can’t provide up-to-date information about the latest code because indexing the entire repository can take a long time. The index is perpetually out of date, perhaps by many hours.\nThe solution to this scaling problem is to process just the changes. In terms of computer science big-O notation, we want the cost of indexing to be O(changes) rather than O(repository).\nBut actually achieving this is not as straightforward as it might sound.\nWe don’t want to destructively modify the original data, because we would like to be able to provide data at multiple revisions of the repository, and to do that without storing multiple full-sized copies of the data. So we would like to store the changes in such a way that we can view the whole index at both revisions simultaneously.\nEven if we figure out a way to represent the changes, in practice it isn’t possible to achieve O(changes) for many programming languages. For example, in C++ if a header file is modified, we have to reprocess every source file that depends on it (directly or indirectly). We call this the fanout. So in practice the best we can do is O(fanout).\nGlean solves the first problem with an ingenious method of stacking immutable databases on top of each other. A stack of databases behaves just like a single database from the client’s perspective, but each layer in the stack can non-destructively add information to, or hide information from, the layers below. \n\nThe full details are beyond the scope of this post, for more on how incrementality works see: Incremental indexing with Glean.\nFinding the fanout of a set of changes is different for each language.  Interestingly the fanout can often be obtained using Glean queries: for example for C++, the fanout is calculated by finding all the files that #include one of the changed files, and then repeating that query until there are no more files to find.\nHow we use Glean at Meta\nCode navigation\nCode navigation at scale, on large monorepos containing millions of lines in diverse programming languages, is a challenging problem. But what makes it different from the code navigation support available in modern IDEs, other than scale? In our experience, code indexing a la Glean offers the following advantages over IDEs:\nInstantly available: Just open the code browser web app (our internal tool uses Monaco) and navigate without waiting for the IDE, build system, and LSP server to initialize\nMore widely available: You can integrate code navigation in pretty much any app that shows code! One particularly useful integration is in your code review tool (ours is called Phabricator), but more on that later.\nFull repo visibility: Glean allows you to, for example, find all the references to a function, not just the ones visible to the IDE. This is particularly useful for finding dead code, or finding clients of an API that you want to change.\nSymbol search for all the languages across the whole repository.\nCross language navigation: A common situation that comes up is a remote procedure call (RPC). When browsing the code you might want to jump to the service definition or, indeed, to the service implementation itself. Another case is languages with a foreign function interface (FFI), where you would like to browse from an FFI call to the corresponding definition in the target language.\nOur architecture for code navigation is based on Glass, a symbol server that abstracts all the complexities of Glean by implementing the usual code navigation logic in a simple but powerful API. The code browser needs only a single Glass API call, documentSymbols(repo,path,revision), to obtain a list of all the definitions and references in a source file, including source and target spans. The list of definitions is used to render an outline of the file, and the list of references to render underlines that can be hovered over or clicked to navigate. Finally, other code browser features like Find References or Call Hierarchy are also driven by API calls to Glass. \n\nThe code for Glass is also open-source, you can find it in glean/glass on GitHub.\nSpeeding up the IDE\nUsing an IDE such as VS Code on a large project, or a project with a large set of dependencies, or in a large monorepo tends to lead to a degraded experience as the IDE isn’t able to analyze all the code that you might want to explore. At Meta we’re using Glean to plug this gap for C++ developers: Because Glean has already analyzed the whole repository, C++ developers have access to basic functionality such as go-to-definition, find-references, and doc comment hovercards for the whole repository immediately on startup. As the IDE loads the files the developer is working on, the C++ language service seamlessly blends the Glean-provided data with that provided by the native clangd backend.\nOur target was C++ developers initially because that group typically has the worst IDE experience due to the long compile times, but the approach is not specific to C++ and we imagine other languages following the same path in the future.\nDocumentation generation\nThe data we store in Glean includes enough information to reconstruct the full details of an API: classes, methods, type signatures, inheritance, and so on. Glean also collects documentation from the source code when it uses the standard convention for the language, e.g., in C++ the convention is /// comment or /** comment */. With API data and documentation strings in Glean we can produce automatically-generated documentation on demand. \nHere’s an example page for the folly::Singleton type:\n\nThe data for these pages is produced by Glass and rendered by a client-side UI. The documentation is fully hyperlinked so the user can navigate around all the APIs throughout the repository easily. Meta engineers get consistent code documentation integrations across all the programming languages supported by Glean.\nSymbol IDs\nGlass assigns every symbol a symbol ID, a unique string that identifies the symbol. For example, the symbol ID for folly::Singleton would be something like, REPOSITORY/cpp/folly/Singleton. The symbol ID can be used to link directly to the documentation page for the symbol, so there’s a URL for every symbol that doesn’t change even if the symbol’s definition moves around. \nWe can use the symbol ID to request information about a symbol from Glass, for example to find all the references to the symbol throughout the repository. All of this works for every language, although the exact format for a symbol ID varies per language.\nAnalyzing code changes\nGlean indexing runs on diffs (think, “pull requests”) to extract a mechanical summary of the changeset that we call a diff sketch. For example, a diff might introduce a new class, remove a method, add a field to a type, introduce a new call to a function, and so on. The diff sketch lists all of these changes in a machine-readable form.\nDiff sketches are used to drive a simple static analysis that can identify potential issues that might require further review. They can also be used to drive non-trivial lint rules, rich notifications, and semantic search over commits. One example of the latter is connecting a production stack trace to recent commits that modified the affected function(s), to help root-cause performance issues or new failures.\nIndexing diffs also powers code navigation in our code review tools, giving code reviewers access to accurate go-to-definition on the code changes being reviewed, along with other code insights such as type-on-hover and documentation. This is a powerful lift to the code review process, making it easier for reviewers to understand the changes and provide valuable review feedback. At Meta this is enabled for a variety of different languages, including C++, Python, PHP, Javascript, Rust, Erlang, Thrift, and even Haskell.\nMore applications for Glean\nAside from the primary applications described above, Glean is also used to\nAnalyse build dependency graphs.\nDetect and remove dead code.\nTrack the progress of API migrations.\nMeasure various metrics that contribute to code complexity.\nTrack test coverage and select tests to run.\nAutomate data removal.\nRetrieval Augmented Generation (RAG) in AI coding assistants\nFurthermore, there are an ever-growing number of ad-hoc queries made by various people and systems to solve a variety of problems. Having a system like Glean means you can ask questions about your code: we don’t know all the questions we might want to ask, nor do we know all the data we might want to store, so Glean deliberately aims to be as general as possible on both of these fronts.\nTry Glean today\nVisit the Glean site for more details, technical documentation, and information on how to get started.\nThe post Indexing code at scale with Glean appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>We’re sharing details about Glean, Meta’s open source system for collecting, deriving, and working with facts about source code. In this blog post we’ll talk about why a system like Glean is important, explain the rationale for Glean’s design, and run through some of the ways we’re using Glean to supercharge our developer tooling at [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/12/19/developer-tools/glean-open-source-code-indexing/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/12/19/developer-tools/glean-open-source-code-indexing/\">Indexing code at scale with Glean</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "We’re sharing details about Glean, Meta’s open source system for collecting, deriving, and working with facts about source code. In this blog post we’ll talk about why a system like Glean is important, explain the rationale for Glean’s design, and run through some of the ways we’re using Glean to supercharge our developer tooling at [...]\nRead More...\nThe post Indexing code at scale with Glean appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22095",
        "categories": [
          "DevInfra",
          "Open Source"
        ],
        "isoDate": "2024-12-19T14:00:29.000Z"
      },
      {
        "creator": "",
        "title": "Translating Java to Kotlin at Scale",
        "link": "https://engineering.fb.com/2024/12/18/android/translating-java-to-kotlin-at-scale/",
        "pubDate": "Wed, 18 Dec 2024 17:00:18 +0000",
        "content:encodedSnippet": "Meta has been on a years-long undertaking to translate our entire Android codebase from Java to Kotlin.\nToday, despite having one of the largest Android codebases in the world, we’re well past the halfway point and still going.\nWe’re sharing some of the tradeoffs we’ve made to support automating our transition to Kotlin, seemingly simple transformations that are surprisingly tricky, and how we’re collaborating with other companies to capture hundreds more corner cases.\nAndroid development at Meta has been Kotlin-first since 2020, and developers have been saying they prefer Kotlin as a language for even longer.\nBut, adoption doesn’t necessarily entail translation. We could simply decide to write all new code in Kotlin and leave our existing Java code as is, just as many other companies have. Or we could take it a little further and translate just the most important files. Instead, we decided that the only way to leverage the full value of Kotlin was to go all in on conversion, even if it meant building our own infrastructure to automate translation at scale. So, a few years ago, engineers at Meta decided to take roughly ten million lines of perfectly good Java code and rewrite them in Kotlin.\nOf course, we had to solve problems beyond translation, such as slow build speeds and insufficient linters. To learn more about Meta’s broader adoption effort, see Omer Strulovich’s 2022 blog post on our migration from Java to Kotlin or Lisa Watkin’s talk about Kotlin adoption at Instagram.\n\nHow much translation is enough?\nTo maximize our gains in developer productivity and null safety, we’re aiming to translate virtually all of our actively developed code, plus any code that’s central in the dependency graph. Not surprisingly, that’s most of our code, which adds up to tens of millions of lines, including some of the most complex files.\nIt’s pretty intuitive that if we want to maximize productivity gains, we should translate our actively developed code. It’s a little less obvious why translating beyond that provides incremental null-safety benefits. The short answer is that any remaining Java code can be an agent of nullability chaos, especially if it’s not null safe and even more so if it’s central to the dependency graph. (For a more detailed explanation, see the section below on null safety.)\nWe also want to minimize the drawbacks of a mixed codebase. As long as we have substantial amounts of Java, we need to continue supporting parallel tool chains. There’s also the much-lamented issue of slower build speeds: Compiling Kotlin is slower than compiling Java, but compiling both together is the slowest of all. \nHow did we get here?\nLike most folks in the industry, we started migrating incrementally by repeatedly clicking a button in the Intellij IDE. This button would trigger Intellij’s translation tool, commonly known as J2K. It quickly became clear that this approach wasn’t going to scale for a codebase of our size: We would have to click that button—and then wait the couple of minutes it takes to run—almost 100,000 times to translate our Android codebase. \nWith this in mind, we set out to automate the conversion process and minimize interference with our developers’ daily work. The result was a tool we call the Kotlinator that we built around J2K. It’s now comprised of six phases:\n“Deep” build: Building the code we’re about to translate helps the IDE resolve all the symbols, especially when third-party dependencies or generated code are involved.\nPreprocessing: This phase is built on top of our custom tool, Editus. It contains about 50 steps for nullability, J2K workarounds, changes to support our custom DI framework, and more.\nHeadless J2K: The J2K we know and love, but server-friendly!\nPostprocessing: This phase is similar in architecture to our preprocessing. It consists of about 150 steps for Android-specific changes, as well as more nullability changes, and tweaks to make the resulting Kotlin more idiomatic.\nLinters: Running our linters with autofixes allows us to implement perennial fixes in a way that benefits both conversion diffs and regular diffs going forward.\nBuild error-based fixes: Finally, the Kotlinator makes even more fixes based on build errors. After a failed build of the just-translated code, we parse the errors and apply further fixes (e.g., adding a missing import or inserting a !!).\nWe’ll dive into more detail on the most interesting phases below.\nGoing headless with J2K\nThe first step was creating a headless version of J2K that could run on a remote machine—not easy, given how tightly coupled J2K and the rest of the Intellij IDE are. We considered a few approaches, including running J2K using a setup similar to Intellij’s testing environment, but after talking to JetBrains’ J2K expert, Ilya Kirillov, we eventually settled on something more like a headless inspection. To implement this approach, we created an Intellij plugin that includes a class extending ApplicationStarter and calling directly into the JavaToKotlinConverter class that’s also referenced by the IDE’s conversion button.\nOn top of not blocking developers’ local IDEs, the headless approach allowed us to translate multiple files at once, and it unblocked all sorts of helpful but time-consuming steps, like the “build and fix errors” process detailed below. Overall conversion time grew longer (a typical remote conversion now takes about 30 minutes to run), but time spent by the developers decreased substantially.\nOf course, going headless presents another conundrum: If developers aren’t clicking the button themselves, who decides what to translate, and how does it get reviewed and shipped? The answer turned out to be pretty easy: Meta has an internal system that allows developers to set up what is essentially a cron job that produces a daily batch of diffs (our version of pull requests) based on user-defined selection criteria. This system also helps choose relevant reviewers, ensures that tests and other validations pass, and ships the diff once it’s approved by a human. We also offer a web UI for developers to trigger a remote conversion of a specific file or module; behind the scenes, it runs the same process as the cron job.\nAs for choosing what and when to translate, we don’t enforce any particular order beyond prioritizing actively developed files. At this point, the Kotlinator is sophisticated enough to handle most compatibility changes required in external files (for example, changing Kotlin dependents’ references of foo.getName() to foo.name), so there’s no need to order our translations based on the dependency graph. \nAdding custom pre- and post-conversion steps\nDue to the size of our codebase and the custom frameworks we use, the vast majority of conversion diffs produced by the vanilla J2K would not build. To address this problem, we added two custom phases to our conversion process, preprocessing and postprocessing. Both phases contain dozens of steps that take in the file being translated, analyze it (and sometimes its dependencies and dependents, too), and perform a Java->Java or Kotlin->Kotlin transformation if needed. A few of our postprocessing transformations have been open-sourced.\nThese custom translation steps are built on top of an internal metaprogramming tool that leverages Jetbrains’ PSI libraries for both Java and Kotlin. Unlike most metaprogramming tools, it is very much not a compiler plugin, so it can analyze broken code across both languages, and does so very quickly. This is especially helpful for postprocessing because it’s often running on code with compilation errors, doing analysis that requires type information. Some postprocessing steps that deal with dependents may need to resolve symbols across several thousand unbuildable Java and Kotlin files. For example, one of our postprocessing steps helps translate interfaces by examining its Kotlin implementers and updating overridden getter functions to instead be overridden properties, like in the example below.\ninterface JustConverted {\r\n  val name: String // I used to be a method called `getName`\r\n}\r\n\nclass ConvertedAWhileAgo : JustConverted {\r\n  override fun getName(): String = \"JustConvertedImpl\"\r\n}\nclass ConvertedAWhileAgo : JustConverted {\r\n  override val name: String = \"JustConvertedImpl\"\r\n}\nThe downside to this tool’s speed and flexibility is that it can’t always provide answers about type information, especially when symbols are defined in third-party libraries. In those cases, it bails quickly and obviously, so we don’t execute a transformation with false confidence. The resulting Kotlin code might not build, but the appropriate fix is usually pretty obvious to a human (if a little tedious).\nWe originally added these custom phases to reduce developer effort, but over time we also leveraged them to reduce developer unreliability. Contrary to popular belief, we’ve found it’s often safer to leave the most delicate transformations to bots. There are certain fixes we’ve automated as part of postprocessing, even though they aren’t strictly necessary, because we want to minimize the temptation for human (i.e., error-prone) intervention. One example is condensing long chains of null checks: The resulting Kotlin code isn’t more correct, but it’s less susceptible to a well-meaning developer accidentally dropping a negation. \nLeveraging build errors\nIn the course of doing our own conversions, we noticed that we spent a lot of time at the end repeatedly building and fixing our code based on the compiler’s error messages. In theory, we could fix many of these problems in our custom postprocessing, but doing so would require us to reimplement a lot of complex logic that’s baked into the Kotlin compiler. \nInstead, we added a new, final step in the Kotlinator that leverages the compiler’s error messages the same way a human would. Like postprocessing, these fixes are performed with a metaprogramming that can analyze unbuildable code.\nThe limitations of custom tooling\nBetween the preprocessing, postprocessing, and post-build phases, the Kotlinator contains well over 200 custom steps. Unfortunately, some conversion issues simply can’t be solved by adding even more steps.\nOriginally we treated J2K as a black box—even though it was open sourced—because its code was complex and not actively developed; diving in and submitting PRs didn’t seem worth the effort. That changed early in 2024, however, when JetBrains began work to make J2K compatible with the new Kotlin compiler, K2. We took the opportunity to work with JetBrains to improve J2K and address problems that had been plaguing us for years, such as disappearing override keywords.\nCollaborating with JetBrains also gave us the opportunity to insert hooks into J2K that would allow clients like Meta to run their own custom steps directly in the IDE before and after conversion. This may sound strange, given the number of custom processing steps we’ve already written, but there are a couple of major benefits:\nImproved symbol resolution. Our custom symbol resolution is fast and flexible, but it’s less precise than J2K’s, especially when it comes to resolving symbols defined in third-party libraries. Porting some of our preprocessing and postprocessing steps over to leverage J2K’s extension points will make them more accurate, and allow us to use Intellij’s more sophisticated static-analysis tooling.\nEasier open sourcing and collaboration. Some of our custom steps are too Android-specific to be incorporated into J2K but might still be useful to other companies. Unfortunately, most of them depend on our custom symbol resolution. Porting these steps over to instead rely on J2K’s symbol resolution gives us the option to open-source them and benefit from the community’s pooled efforts.\nBut first, null safety!\nIn order to translate our code without spewing null-pointer exceptions (NPEs) everywhere, it first needs to be null safe (by “null safe” we mean code checked by a static analyzer such as Nullsafe or NullAway). Null safety still isn’t sufficient to eliminate the possibility of NPEs, but it’s an excellent start. Unfortunately, making code null safe is easier said than done.\nEven null-safe Java throws NPEs sometimes\nAnyone who has worked with null-safe Java code long enough knows that while it’s more reliable than vanilla Java code, it’s still prone to NPEs. Unfortunately static analysis is only 100% effective for 100% code coverage, which is simply not viable in any large mobile codebase that interacts with the server and third-party libraries.\nHere’s a canonical example of a seemingly innocuous change that can introduce an NPE:\nMyNullsafeClass.java\n@Nullsafe\r\npublic class MyNullsafeClass {\r\n\r\n  void doThing(String s) {\r\n    // can we safely add this dereference?\r\n    // s.length;\r\n  }\r\n}\nSay there are a dozen dependents that call MyNullsafeJava::doThing. A single non-null-safe dependent could pass in a null argument (for example,  MyNullsafeJava().doThing(null)), which would lead to an NPE if a dereference is inserted in the body of doThing. \nOf course, while we can’t eliminate NPEs in Java via null-safety coverage, we can greatly reduce their frequency. In the example above, NPEs are possible but fairly rare when there’s only one non-null-safe dependent. If multiple transitive dependents lacked null safety, or if one of the more central dependent nodes did, the NPE risk would be much higher.\nWhat makes Kotlin different\nThe biggest difference between null-safe Java and Kotlin is the presence of runtime validation in Kotlin bytecode at the interlanguage boundary. This validation is invisible but powerful because it allows developers to trust the stated nullability annotations in any code they’re modifying or calling.\nIf we return to our earlier example, MyNullsafeClass.java, and translate it to Kotlin, we get something like:\nMyNullsafeClass.kt\nclass MyNullsafeClass {\r\n\r\n  fun doThing(s: String) {\r\n    // there's an invisible `checkNotNull(s)` here in the bytecode\r\n    // so adding this dereference is now risk-free!\r\n    // s.length\r\n  }\r\n}\nNow there’s an invisible checkNotNull(s) in the bytecode at the start of doThing’s body, so we can safely add a dereference to s, because if s were nullable, this code would already be crashing. As you can imagine, this certainty makes for much smoother, safer development.\nThere are also some differences at the static analysis level: The Kotlin compiler enforces a slightly stricter set of null safety rules than Nullsafe does when it comes to concurrency. More specifically, the Kotlin compiler throws an error for dereferences of class-level properties that could have been set to null in another thread. This difference isn’t terribly important to us, but it does lead to more !! than one might expect when translating null-safe code.\nGreat, let’s translate it all to Kotlin!\nNot so fast. As is always the case, going from more ambiguity to less ambiguity doesn’t come for free. For a case like MyNullsafeClass, development is much easier after Kotlin translation, but someone has to take that initial risk of effectively inserting a nonnull assertion for its hopefully-really-not-nullable parameter s. That “someone” is whichever developer or bot ends up shipping the Kotlin conversion.\nWe can take a number of steps to minimize the risk of introducing new NPEs during conversion, the simplest of which is erring on the side of “more nullable” when translating parameters and return types. In the case of MyNullsafeClass, the Kotlinator would have used context clues (in this case, the absence of any dereferences in the body of doThing) to infer that String s should be translated to s: String?.\nOne of the changes we ask developers to scrutinize most when reviewing conversion diffs is the addition of !! outside of preexisting dereferences. Funnily enough, we’re not worried about an expression like foo!!.name, because it’s not any more likely to crash in Kotlin than it was in Java. An expression such as someMethodDefinedInJava(foo!!) is much more concerning, however, because it’s possible that someMethodDefinedInJava is simply missing a @Nullable on its parameter, and so adding !! will introduce a very unnecessary NPE.\nTo avoid problems like adding unnecessary !! during conversion, we run over a dozen complementary codemods that comb through the codebase looking for parameters, return types, and member variables that might be missing @Nullable. More accurate nullability across the codebase—even in Java files that we may never translate—is not only safer, it’s also conducive to more successful conversions, especially as we approach the final stretch in this project.\nOf course, the last remaining null safety issues in our Java code have usually stuck around because they’re very hard to solve. Previous attempts to resolve them relied mostly on static analysis, so we decided to borrow an idea from the Kotlin compiler and create a Java compiler plugin that helps us collect runtime nullability data. This plugin allows us to collect data on all return types and parameters that are receiving/returning a null value and are not annotated as such. Whether these are from Java/Kotlin interop or classes that were annotated incorrectly at a local level, we can determine ultimate sources of truth and use codemods to finally fix the annotations.\nOther ways to break your code\nOn top of the risks of regressing null safety, there are dozens of other ways to break your code during conversion. In the course of shipping over 40,000 conversions, we’ve learned about many of these the hard way and now have several layers of validation to prevent them. Here are a couple of our favorites:\nConfusing initialization with getters\n// Incorrect!\r\nval name: String = getCurrentUser().name\r\n\r\n// Correct\r\nval name: String\r\n  get() = getCurrentUser().name\nNullable booleans\n// Original\r\nif (foo != null && !foo.isEnabled) println(\"Foo is not null and disabled\")\r\n\r\n// Incorrect!\r\nif (foo?.isEnabled != true) println(\"Foo is not null and disabled\")\r\n\r\n// Correct\r\nif (foo?.isEnabled == false) println(\"Foo is not null and disabled\")\nThe fun part\nAt this point, more than half of Meta’s Android Java code has been translated to Kotlin (or, more rarely, deleted). But that was the easy half! The really fun part lies ahead of us, and it’s a doozy. There are still thousands of fully automated conversions we hope to unblock by adding and refining custom steps and by contributing to J2K. And there are thousands more semi-automated conversions we hope to ship smoothly and safely as a result of other Kotlinator improvements.\nMany of the problems we face also affect other companies translating their Android codebases. If this sounds like you, we’d love for you to leverage our fixes and share some of your own. Come chat with us and others in the #j2k channel of the Kotlinlang Slack.\nThe post Translating Java to Kotlin at Scale appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Meta has been on a years-long undertaking to translate our entire Android codebase from Java to Kotlin. Today, despite having one of the largest Android codebases in the world, we&#8217;re well past the halfway point and still going. We&#8217;re sharing some of the tradeoffs we&#8217;ve made to support automating our transition to Kotlin, seemingly simple [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/12/18/android/translating-java-to-kotlin-at-scale/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/12/18/android/translating-java-to-kotlin-at-scale/\">Translating Java to Kotlin at Scale</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Meta has been on a years-long undertaking to translate our entire Android codebase from Java to Kotlin. Today, despite having one of the largest Android codebases in the world, we’re well past the halfway point and still going. We’re sharing some of the tradeoffs we’ve made to support automating our transition to Kotlin, seemingly simple [...]\nRead More...\nThe post Translating Java to Kotlin at Scale appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22074",
        "categories": [
          "Android",
          "DevInfra"
        ],
        "isoDate": "2024-12-18T17:00:18.000Z"
      },
      {
        "creator": "",
        "title": "How we think about Threads’ iOS performance",
        "link": "https://engineering.fb.com/2024/12/18/ios/how-we-think-about-threads-ios-performance/",
        "pubDate": "Wed, 18 Dec 2024 15:00:44 +0000",
        "content:encodedSnippet": "How did the Threads iOS team maintain the app’s performance during its incredible growth?\nHere’s how Meta’s Threads team thinks about performance, including the key metrics we monitor to keep the app healthy.\nWe’re also diving into some case studies that impact publish reliability and navigation latency.\nWhen Meta launched Threads in 2023, it became the fastest-growing app in history, gaining 100 million users in only five days. The app now has grown to more than 300 million monthly international users, and its development team has expanded from a small group of scrappy engineers to an organization with more than a hundred contributors.\nLooking back on where the Threads iOS app was a year ago, so much has changed: We’ve expanded into Europe, integrated with the Fediverse, launched a public API, developed many new ways for people to share what’s going on in their world, and introduced new methods to find and read the best content being produced. We even celebrated our first birthday with party hats and scratch-off app icons! \nTo make sure the app is easy and delightful to use—and to scale with a quickly growing user base and development team—it has to be performant. Here’s how we think about performance in the Threads iOS app, what we’ve learned in our first year, and how we’ve tackled a few of our biggest performance challenges.\n\nHow Threads measures performance at scale\nHaving a fast and performant app is critical to providing the best user experience. We want Threads to be the best place for live, creative commentary about what’s happening now; that means Threads also needs to be the fastest and most responsive app in its class. If the app doesn’t feel lightning fast, or if it hangs or drains a phone’s battery, no one will want to use it. Our features have to work reliably and fail infrequently no matter what kind of phone someone is using, or how much memory their phone has, or whether they’re using Threads somewhere that has robust cellular coverage or a network that keeps dropping out.\nSome performance issues are encountered only rarely but still can be frustrating. As the iOS app’s usage grew rapidly during our first year after release, we wanted to learn what the biggest pain points were for most people as well as the extreme performance issues experienced by a small percentage of users. We measured how quickly the app launches, how long it takes to post a photo or video, how often we would experience crashes, and how many bug reports were filed by people. \n%FIRE: Frustrating image-render experience\nIn addition to all the text updates people share, we have a lot of photos shared on Threads. When images load slowly or not at all, that can cause someone to stop using the app. That’s why we monitor an important metric to alert when there’s a regression in how images are loading for our users. That metric, %FIRE, is the percentage of people who experience a frustrating image-render experience, and it’s calculated as shown in Figure 1, below.\nFigure 1: %FIRE calculation.\nAll kinds of things can regress %FIRE, both on the client end and the backend, but not all image-rendering bugs are covered by this metric. For example, in Threads iOS, we had a bug earlier this year where user profile photos would flicker because of how we were comparing view models when reusing them. That triggered a frustrating user experience, but not one where users would contribute to %FIRE.\nTime-to-network content (TTNC)\nHow fast the app starts and how fast we deliver a user’s feed to them is also important. We know if someone has to stare at an app launch screen, activity spinner, or loading shimmer for too long, they’ll just close the app. This is all measured in something we call TTNC, or time-to-network content. In addition to having the app start fast, people also want us to show them what’s happening now, so TTNC measures how fast we’re able to load a fresh, personalized feed, not just cached, locally stored posts.\nThe Threads iOS team has also improved the app launch time by keeping the app’s binary size small. Every time someone tries to commit code to Threads, they’re alerted if that code change would increase our app’s binary size above a configured threshold. Code that violates our binary size policy isn’t allowed to be merged. \nWe’re proactive, too: To help reduce TTNC, we have spent a lot of time since Threads launched removing unnecessary code and graphics assets from our app bundle, resulting in a binary one-quarter the size of Instagram. It doesn’t hurt that this also can reduce our iOS app’s build time, which makes the app more fun to develop! Threads compiles two times faster than Instagram for our non-incremental builds.\nCreation-publish success rate (cPSR)\nWhere %FIRE and TTNC measure how content is presented to a user, we have one other important metric: cPSR, the creation-publish success rate. We measure this separately for text posts, photos, and video published to Threads. When someone tries to post a photo or video, many things can prevent it from succeeding. Photos and videos are locally transcoded into formats we want to upload, which happens asynchronously as part of the publishing process. They both use a lot more data and take longer than text to upload, so there’s more time for something to go wrong. A user might background the app after they tap “Post” without waiting for it to succeed, which on iOS might give us only a few seconds to complete the upload before we’re terminated by the operating system. \nLater in this blog post, we’ll go into some of the strategies we’re using to improve cPSR.\nDeep dive: Navigation latency\nNavigation latency is important to the user experience because it’s tied to how fast the app starts and everything the user does once the app has launched. When we measure navigation latency, we want to know how long it takes to finish rendering content after a user navigates to part of the app. That could be after app start, either from launching Threads directly on your phone, or by tapping on a push notification from Threads, or by simply tapping on a post in your Feed and navigating to the conversation view. \nEarly in 2024, the Threads Performance team knew we wanted to focus on a few key areas, but which ones? Data from Instagram suggested navigation latency is important, but Threads is used differently than Instagram. Having been available to download for only six months at the time, we knew that to prioritize areas of improvement we would first have to spend some time learning.\nLearning from a boundary test\nWe started by creating a boundary test to measure latency, focusing on a few key places that people visit when they launch Threads or use the app. A boundary test is one where we measure extreme ends of a boundary to learn what the effect is. In our case, we introduced a slight bit of latency when a small percentage of our users would navigate to a user profile, to the conversion view for a post, or to their activity feed. \nLatency injection\n\nDaily Active Users\nForeground sessions\nLikes\nConversation views\n\n\nActivity: 0.12s\nConversation: 0.29s\nProfile: 0.28s\nIn-app navigation\n\n\n\n\n\n\nActivity: 0.15s\nConversation: 0.36s\nProfile: 0.35s\n\n\n-0.68%\n\n\n\nActivity: 0.19s\nConversation: 0.54s\nProfile: 0.53s\n-0.54%\n\n-0.81%\n\n\n\nActivity: 0.12s\nConversation: 0.29s\nProfile: 0.28s\nApp launch\n-0.37%\n-0.67%\n\n-1.63%\n\n\nActivity: 0.15s\nConversation: 0.36s\nProfile: 0.35s\n\n-0.67%\n\n-2.55%\n\n\nActivity: 0.19s\nConversation: 0.54s\nProfile: 0.53s\n-0.52%\n-0.65%\n\n\n\n\n\nTable 1: Navigation latency boundary test results.\nThis latency would allow us to extrapolate what the effect would be if we similarly improved how we delivered content to those views.\nWe already had robust analytics logging, but we didn’t have the ability to differentiate between navigation to these views from a cold app launch and from within the app. After adding that, we injected latency into three buckets, each with slight variability depending on surface. \nWe learned that iOS users don’t tolerate a lot of latency. The more we added, the less often they would launch the app and the less time they would stay in it. With the smallest latency injection, the impact was small or negligible for some views, but the largest injections had negative effects across the board. People would read fewer posts, post less often themselves, and in general interact less with the app. Remember, we weren’t injecting latency into the core feed, either; just into the profile, permalink, and activity.\nMeasuring navigation latency with SLATE\nThe SLATE debugger.\nNavigation latency is difficult to measure consistently. If you have a big app that does many different things, you have to have a consistent way of “starting” your timer, measuring time to render a view across many different surfaces with different types of content and behavior, and finally “stopping” your timer. Also, you have to be aware of error states and empty views, which need to be considered terminal states. There can be many permutations and custom implementations across all of an app’s surfaces.\nTo solve this problem and measure navigation latency consistently, we developed a new tool we call SLATE: the “Systemic LATEncy” logger. It gives us the ability to observe events that trigger a new navigation when the user interface (UI) is being built, when activity spinners or shimmers are displayed, when content is displayed from the network, and when a user sees an error condition. It’s implemented using a set of common components that are the foundation for a lot of our UI and a system that measures performance by setting “markers” in code for specific events. Typically these markers are created with a specific purpose in mind. The great thing about SLATE is that it automatically creates these markers for a developer, as long as they’re using common components. This makes the system highly scalable and maintainable in a very large code base such as Threads or Instagram.\nWhen our iOS developers are creating a new feature, it’s easy to see if it has an effect on navigation latency. Anyone can enable the SLATE debugger (depicted in Image 1, below) right in the internal build of our app, and it’s easy to create a dashboard so they can get a report about how their code is running in production.\nCase study: Using SLATE to validate GraphQL adoption\nOver the last year, both Instagram and Threads have been adopting GraphQL for network requests. Even though Meta created GraphQL back in 2012, we built Instagram on a network stack based on REST, so Threads for iOS and Android originally inherited that technical legacy.\nWhen Threads for Web was developed, it was a fresh code base built on the modern GraphQL standard instead of REST. While this was great for web, it meant that new features delivered to both web and iOS/Android had to be written twice: once to support the GraphQL endpoints and once for REST. We wanted to move new development to GraphQL, but because the implementation was unproven for Threads, we first needed to measure and make sure it was ready to be adopted. We expected GraphQL to result in less data that would need to be moved over the network, but to parse and store the data, the infrastructure to support it might introduce additional latency.\nWe decided to run a test where we took one of our views and implemented its network delivery code using GraphQL. Then we could run the REST and GraphQL implementations side by side and compare the results. We opted to run the test for the “user list” views that power Followers and Following lists and determine if the new code that delivered and parsed GraphQL responses was at least as fast as the legacy REST code.\nThis was easy to do using Swift. We created an abstraction that extracted the existing API into a protocol that both the REST and GraphQL code could use; then when the code would be called, a factory method generated the appropriate provider.\nOnce the code was running, we needed to measure the impact on the end-to-end latency of fetching results from the network and rendering the content on screen. SLATE to the rescue! Using SLATE’s performance markers, we could easily compare latency data for each of the different user view network implementations. \nBelow is an example graph of the latency data (p95) for when a user views the list of their followers. The blue line compares the REST and GraphQL latency data, which are very similar. We saw similar results across all the different views, which gave the Threads iOS team confidence to adopt GraphQL for all new endpoints.\nFigure 2: Latency (p95) loading Following and Followers lists via REST and GraphQL.\nDeep dive: Publish reliability and latency\nAs mentioned previously, cPSR is one of the top metrics we’re trying to improve on Threads, because if people can’t reliably post what they want, they’ll have a terrible user experience. We also know from reading user-submitted bug reports that posting can be a source of frustration for people.\nLet’s dive into two features added to Threads iOS that approach improving the posting experience in very different ways: Drafts, and reducing the perceived latency of text posts.\nDrafts\nIn early 2024, Threads introduced basic saving of drafts on iOS and Android. In addition to being one of our most user-requested features, Drafts provides resiliency to unexpected failures such as bad network connectivity. Looking at user-filed bug reports, we had seen that the top concern was being unable to post. Often users didn’t know why they couldn’t post. We knew a draft feature would help with some of these concerns.\nThese user bug reports were used to measure the success of Drafts. Drafts doesn’t directly move cPSR, which measures the reliability of posting in a single session, but we theorized it might result in either more posts being created or less overall user frustration with posting. We released Drafts to a small group of people and compared the number of subsequent bug reports related to posting they submitted compared to reports from people who didn’t have Drafts. We discovered that 26 percent fewer people submitted bug reports about posting if they had Drafts. The feature was clearly making a difference.\nWe quickly followed up with a small but necessary improvement. Previously, if a user ran into a network issue while posting, they would be asked if they wanted to retry or discard their post,  but were given no option to save it as a draft. This meant a lot of people who couldn’t send were losing their post, which was frustrating. Unfortunately, measuring the impact of this resiliency feature was also difficult because not many people ran into it.\nThen, a surprising thing happened: A serious bug took down all of Threads for a short period of time. Though this was bad, it had the side effect of testing some of our resiliency features, including Drafts. We saw a huge spike in usage during the short outage, which confirmed that people were benefiting from being able to save their posts if there was a serious problem.\nYou can see in Figure 3 below the spike in Drafts usage during the outage around noon on March 31.\nFigure 3: A spike in Drafts usage during a brief outage.\nMinimizing Drafts’ local storage\nAfter Drafts was released to the public, we discovered an unfortunate bug: The average amount of storage Threads used was increasing dramatically. People on Threads noticed, too, and posted a lot of complaints about it. Some of these people reported that Threads was taking up many gigabytes of storage space. Maintaining a low disk footprint helps performance, and addressing this bug provided an opportunity to learn about the impact of excessive disk usage in Threads.\nFigure 4: Disk usage in Threads after Drafts launched.\nThe culprit was Drafts. In the iOS app, we use PHPickerViewController, introduced in iOS 14, to power the photo and video gallery presented in the Composer. \nPHPickerViewController is a nice component that runs out of process and provides users with privacy and safety by allowing them to give an app access to exactly the media they want. When a photo is selected, an app receives a URL that points to the image asset on the device. We found, however, that access to this image is only temporary; between sessions, Threads would lose permission to read an image that had been attached to a draft. In addition, if a user deleted an image from the gallery, it would also disappear from a draft, which was not ideal.\nThe solution was to copy photos and videos to an area in the application container that was specific to Drafts. Unfortunately, copied media wasn’t being cleaned up entirely, leading disk usage to grow, sometimes dramatically, over time.\nCleaning up this excessive disk usage had dramatic results in areas we didn’t expect. App launch became faster (-0.35%), our daily active users grew (+0.21%), and people posted additional original content (+0.76%)—quite a lot more.\nThreads’ Posted toast.\nBlazing fast text posts\nSimilar to doing the navigation latency boundary test, the performance team had previously measured the impact of latency on text replies and knew we wanted to improve them. In addition to implementing improvements to reduce absolute latency, we decided to reduce perceived latency. \nA new feature in Threads’ network stack allows the server to notify a client when a posting request has been fully received, but before it’s been processed and published. Most failures happen between the mobile client and Threads’ servers, so once a request is received, it’s very likely to succeed.\nUsing the new server-acknowledgement callback, the iOS client could now present the “Posted” toast when a publish request was received, but before it was fully created in the backend. It would appear as if text posts were publishing a little faster. The result is a better user experience that makes the app feel more conversational.\nAdopting Swift Concurrency for more stable code\nMigrating the Threads iOS publishing code from a synchronous model to an asynchronous one also revealed the potential for race conditions. In addition to the asynchronous transcoding step mentioned previously, there were some new ones related to management of the upload tasks and media metadata. We noticed some mysterious malformed payloads that turned up only occasionally in our analytics and dashboards. Operating at massive scale tends to turn up some rare edge cases that can have negative consequences on performance metrics and give people a bad user experience.\nOne of the best things about working in the Threads code base is that it’s mostly in Swift. Some of the publishing code was written in Objective-C, though. While Objective-C has a lot of benefits, Swift’s strong data-race protections and type safety would be an improvement, so we decided to migrate Threads’ publishing code to Swift.\niOS teams throughout Meta are adopting Swift’s “complete concurrency” in preparation for moving to Swift 6. On the Threads team, we’ve been migrating older Swift code and using complete concurrency in new frameworks that we’re building. Moving to complete concurrency is probably the biggest change to iOS development since Automatic Reference Counting (ARC) was introduced way back in iOS 4. When you adopt complete concurrency, Swift does a great job at preventing pesky data races, such as some that were causing issues with our optimistic uploader. If you haven’t started adopting Swift’s strict concurrency by enabling complete concurrency in your code, you might find that your code is more stable and less prone to hard-to-debug problems caused by data races.\nThe future of Threads iOS performance\nAs Threads continues to scale in its second year and beyond, the iOS app will have to adapt to meet new challenges. As we add new product features, we will keep monitoring our time-worn metrics such as %FIRE, TTNC, and cPSR to make sure the user experience doesn’t degrade. We’re updating the code that delivers posts to you, so you see content faster and experience fewer loading indicators. We’ll continue to take advantage of the most modern language features in Swift, which will make the app more stable and faster to build and load into memory. Meanwhile, we’re going to iterate and evolve tools like SLATE that help us improve our testing and debug regressions. \nAs part of the Threads community, you can also contribute to making the app better. We mentioned earlier that user-submitted bug reports were used to identify areas for the development team to focus on and verify that features like Drafts were actually solving user frustrations. In both Threads and Instagram, you can long-press on the Home tab or shake your phone to submit a bug report. We really do read them.\nThe post How we think about Threads’ iOS performance appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>How did the Threads iOS team maintain the app&#8217;s performance during its incredible growth? Here&#8217;s how Meta&#8217;s Threads team thinks about performance, including the key metrics we monitor to keep the app healthy. We&#8217;re also diving into some case studies that impact publish reliability and navigation latency. When Meta launched Threads in 2023, it became [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/12/18/ios/how-we-think-about-threads-ios-performance/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/12/18/ios/how-we-think-about-threads-ios-performance/\">How we think about Threads&#8217; iOS performance</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "How did the Threads iOS team maintain the app’s performance during its incredible growth? Here’s how Meta’s Threads team thinks about performance, including the key metrics we monitor to keep the app healthy. We’re also diving into some case studies that impact publish reliability and navigation latency. When Meta launched Threads in 2023, it became [...]\nRead More...\nThe post How we think about Threads’ iOS performance appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22060",
        "categories": [
          "iOS",
          "Production Engineering",
          "Threads"
        ],
        "isoDate": "2024-12-18T15:00:44.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": [
      {
        "creator": "Netflix Technology Blog",
        "title": "Part 1: A Survey of Analytics Engineering Work at Netflix",
        "link": "https://netflixtechblog.com/part-1-a-survey-of-analytics-engineering-work-at-netflix-d761cfd551ee?source=rss----2615bd06b42e---4",
        "pubDate": "Tue, 17 Dec 2024 23:26:37 GMT",
        "content:encodedSnippet": "This article is the first in a multi-part series sharing a breadth of Analytics Engineering work at Netflix, recently presented as part of our annual internal Analytics Engineering conference. We kick off with a few topics focused on how we’re empowering Netflix to efficiently produce and effectively deliver high quality, actionable analytic insights across the company. Subsequent posts will detail examples of exciting analytic engineering domain applications and aspects of the technical craft.\nAt Netflix, we seek to entertain the world by ensuring our members find the shows and movies that will thrill them. Analytics at Netflix powers everything from understanding what content will excite and bring members back for more to how we should produce and distribute a content slate that maximizes member joy. Analytics Engineers deliver these insights by establishing deep business and product partnerships; translating business challenges into solutions that unblock critical decisions; and designing, building, and maintaining end-to-end analytical systems.\nEach year, we bring the Analytics Engineering community together for an Analytics Summit — a 3-day internal conference to share analytical deliverables across Netflix, discuss analytic practice, and build relationships within the community. We covered a broad array of exciting topics and wanted to spotlight a few to give you a taste of what we’re working on across Analytics Engineering at Netflix!\nDataJunction: Unifying Experimentation and Analytics\nYian Shang, Anh Le\nAt Netflix, like in many organizations, creating and using metrics is often more complex than it should be. Metric definitions are often scattered across various databases, documentation sites, and code repositories, making it difficult for analysts and data scientists to find reliable information quickly. This fragmentation leads to inconsistencies and wastes valuable time as teams end up reinventing metrics or seeking clarification on definitions that should be standardized and readily accessible.\nEnter DataJunction (DJ). DJ acts as a central store where metric definitions can live and evolve. Once a metric owner has registered a metric into DJ, metric consumers throughout the organization can apply that same metric definition to a set of filtered records and aggregate to any dimensional grain.\nAs an example, imagine an analyst wanting to create a “Total Streaming Hours” metric. To add this metric to DJ, they need to provide two pieces of information:\n\nThe fact table that the metric comes from:\n\nSELECT\n account_id, country_iso_code, streaming_hours\nFROM streaming_fact_table\n\nThe metric expression:\n\n`SUM(streaming_hours)`\nThen metric consumers throughout the organization can call DJ to request either the SQL or the resulting data. For example,\n\ntotal_streaming_hours of each account:\n\ndj.sql(metrics=[“total_streaming_hours”], dimensions=[“account_id”]))\n\ntotal_streaming_hours of each country:\n\ndj.sql(metrics=[“total_streaming_hours”], dimensions=[“country_iso_code”]))\n\ntotal_streaming_hours of each account in the US:\n\ndj.sql(metrics=[“total_streaming_hours”], dimensions=[“country_iso_code”], filters=[“country_iso_code = ‘US’”]))\nThe key here is that DJ can perform the dimensional join on users’ behalf. If country_iso_code doesn’t already exist in the fact table, the metric owner only needs to tell DJ that account_id is the foreign key to an `users_dimension_table` (we call this process “dimension linking”). DJ then can perform the joins to bring in any requested dimensions from `users_dimension_table`.\nThe Netflix Experimentation Platform heavily leverages this feature today by treating cell assignment as just another dimension that it asks DJ to bring in. For example, to compare the average streaming hours in cell A vs cell B, the Experimentation Platform relies on DJ to bring in “cell_assignment” as a user’s dimension (no different from country_iso_code). A metric can therefore be defined once in DJ and be made available across analytics dashboards and experimentation analysis.\nDJ has a strong pedigree–there are several prior semantic layers in the industry (e.g. Minerva at Airbnb; dbt Transform, Looker, and AtScale as paid solutions). DJ stands out as an open source solution that is actively developed and stress-tested at Netflix. We’d love to see DJ easing your metric creation and consumption pain points!\nLORE: How we’re democratizing analytics at Netflix\nApurva Kansara\nAt Netflix, we rely on data and analytics to inform critical business decisions. Over time, this has resulted in large numbers of dashboard products. While such analytics products are tremendously useful, we noticed a few trends:\n\nA large portion of such products have less than 5 MAU (monthly active users)\nWe spend a tremendous amount of time building and maintaining business metrics and dimensions\nWe see inconsistencies in how a particular metric is calculated, presented, and maintained across the Data & Insights organization.\nIt is challenging to scale such bespoke solutions to ever-changing and increasingly complex business needs.\n\nAnalytics Enablement is a collection of initiatives across Data & Insights all focused on empowering Netflix analytic practitioners to efficiently produce and effectively deliver high-quality, actionable insights.\nSpecifically, these initiatives are focused on enabling analytics rather than on the activities that produce analytics (e.g., dashboarding, analysis, research, etc.).\n\nAs part of broad analytics enablement across all business domains, we invested in a chatbot to provide real insights to our end users using the power of LLM. One reason LLMs are well suited for such problems is that they tie the versatility of natural language with the power of data query to enable our business users to query data that would otherwise require sophisticated knowledge of underlying data models.\nBesides providing the end user with an instant answer in a preferred data visualization, LORE instantly learns from the user’s feedback. This allows us to teach LLM a context-rich understanding of internal business metrics that were previously locked in custom code for each of the dashboard products.\n\nSome of the challenges we run into:\n\nGaining user trust: To gain our end users’ trust, we focused on our model’s explainability. For example, LORE provides human-readable reasoning on how it arrived at the answer that users can cross-verify. LORE also provides a confidence score to our end users based on its grounding in the domain space.\nTraining: We created easy-to-provide feedback using 👍 and 👎 with a fully integrated fine-tuning loop to allow end-users to teach new domains and questions around it effectively. This allowed us to bootstrap LORE across several domains within Netflix.\n\nDemocratizing analytics can unlock the tremendous potential of data for everyone within the company. With Analytics enablement and LORE, we’ve enabled our business users to truly have a conversation with the data.\nLeveraging Foundational Platform Data to enable Cloud Efficiency Analytics\nJ Han, Pallavi Phadnis\nAt Netflix, we use Amazon Web Services (AWS) for our cloud infrastructure needs, such as compute, storage, and networking to build and run the streaming platform that we love. Our ecosystem enables engineering teams to run applications and services at scale, utilizing a mix of open-source and proprietary solutions. In order to understand how efficiently we operate in this diverse technological landscape, the Data & Insights organization partners closely with our engineering teams to share key efficiency metrics, empowering internal stakeholders to make informed business decisions.\nThis is where our team, Platform DSE (Data Science Engineering), comes in to enable our engineering partners to understand what resources they’re using, how effectively they utilize those resources, and the cost associated with their resource usage. By creating curated datasets and democratizing access via a custom insights app and various integration points, downstream users can gain granular insights essential for making data-driven, cost-effective decisions for the business.\nTo address the numerous analytic needs in a scalable way, we’ve developed a two-component solution:\n\nFoundational Platform Data (FPD): This component provides a centralized data layer for all platform data, featuring a consistent data model and standardized data processing methodology. We work with different platform data providers to get inventory, ownership, and usage data for the respective platforms they own.\nCloud Efficiency Analytics (CEA): Built on top of FPD, this component offers an analytics data layer that provides time series efficiency metrics across various business use cases. Once the foundational data is ready, CEA consumes inventory, ownership, and usage data and applies the appropriate business logic to produce cost and ownership attribution at various granularities.\n\nAs the source of truth for efficiency metrics, our team’s tenants are to provide accurate, reliable, and accessible data, comprehensive documentation to navigate the complexity of the efficiency space, and well-defined Service Level Agreements (SLAs) to set expectations with downstream consumers during delays, outages, or changes.\nLooking ahead, we aim to continue onboarding platforms, striving for nearly complete cost insight coverage. We’re also exploring new use cases, such as tailored reports for platforms, predictive analytics for optimizing usage and detecting anomalies in cost, and a root cause analysis tool using LLMs.\nUltimately, our goal is to enable our engineering organization to make efficiency-conscious decisions when building and maintaining the myriad of services that allows us to enjoy Netflix as a streaming service. For more detail on our modeling approach and principles, check out this post!\nAnalytics Engineering is a key contributor to building our deep data culture at Netflix, and we are proud to have a large group of stunning colleagues that are not only applying but advancing our analytical capabilities at Netflix. The 2024 Analytics Summit continued to be a wonderful way to give visibility to one another on work across business verticals, celebrate our collective impact, and highlight what’s to come in analytics practice at Netflix.\nTo learn more, follow the Netflix Research Site, and if you are also interested in entertaining the world, have a look at our open roles!\n\nPart 1: A Survey of Analytics Engineering Work at Netflix was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/d761cfd551ee",
        "categories": [
          "analytics-engineering",
          "analytics"
        ],
        "isoDate": "2024-12-17T23:26:37.000Z"
      },
      {
        "creator": "Netflix Technology Blog",
        "title": "Cloud Efficiency at Netflix",
        "link": "https://netflixtechblog.com/cloud-efficiency-at-netflix-f2a142955f83?source=rss----2615bd06b42e---4",
        "pubDate": "Tue, 17 Dec 2024 22:17:29 GMT",
        "content:encodedSnippet": "By J Han, Pallavi Phadnis\nContext\nAt Netflix, we use Amazon Web Services (AWS) for our cloud infrastructure needs, such as compute, storage, and networking to build and run the streaming platform that we love. Our ecosystem enables engineering teams to run applications and services at scale, utilizing a mix of open-source and proprietary solutions. In turn, our self-serve platforms allow teams to create and deploy, sometimes custom, workloads more efficiently. This diverse technological landscape generates extensive and rich data from various infrastructure entities, from which, data engineers and analysts collaborate to provide actionable insights to the engineering organization in a continuous feedback loop that ultimately enhances the business.\nOne crucial way in which we do this is through the democratization of highly curated data sources that sunshine usage and cost patterns across Netflix’s services and teams. The Data & Insights organization partners closely with our engineering teams to share key efficiency metrics, empowering internal stakeholders to make informed business decisions.\nData is Key\nThis is where our team, Platform DSE (Data Science Engineering), comes in to enable our engineering partners to understand what resources they’re using, how effectively and efficiently they use those resources, and the cost associated with their resource usage. We want our downstream consumers to make cost conscious decisions using our datasets.\nTo address these numerous analytic needs in a scalable way, we’ve developed a two-component solution:\n\nFoundational Platform Data (FPD): This component provides a centralized data layer for all platform data, featuring a consistent data model and standardized data processing methodology.\nCloud Efficiency Analytics (CEA): Built on top of FPD, this component offers an analytics data layer that provides time series efficiency metrics across various business use cases.\n\nFoundational Platform Data (FPD)\nWe work with different platform data providers to get inventory, ownership, and usage data for the respective platforms they own. Below is an example of how this framework applies to the Spark platform. FPD establishes data contracts with producers to ensure data quality and reliability; these contracts allow the team to leverage a common data model for ownership. The standardized data model and processing promotes scalability and consistency.\n\nCloud Efficiency Analytics (CEA Data)\nOnce the foundational data is ready, CEA consumes inventory, ownership, and usage data and applies the appropriate business logic to produce cost and ownership attribution at various granularities. The data model approach in CEA is to compartmentalize and be transparent; we want downstream consumers to understand why they’re seeing resources show up under their name/org and how those costs are calculated. Another benefit to this approach is the ability to pivot quickly as new or changes in business logic is/are introduced.\n\n* For cost accounting purposes, we resolve assets to a single owner, or distribute costs when assets are multi-tenant. However, we do also provide usage and cost at different aggregations for different consumers.\nData Principles\nAs the source of truth for efficiency metrics, our team’s tenants are to provide accurate, reliable, and accessible data, comprehensive documentation to navigate the complexity of the efficiency space, and well-defined Service Level Agreements (SLAs) to set expectations with downstream consumers during delays, outages or changes.\nWhile ownership and cost may seem straightforward, the complexity of the datasets is considerably high due to the breadth and scope of the business infrastructure and platform specific features. Services can have multiple owners, cost heuristics are unique to each platform, and the scale of infra data is large. As we work on expanding infrastructure coverage to all verticals of the business, we face a unique set of challenges:\nA Few Sizes to Fit the Majority\nDespite data contracts and a standardized data model on transforming upstream platform data into FPD and CEA, there is usually some degree of customization that is unique to that particular platform. As the centralized source of truth, we feel the constant tension of where to place the processing burden. Decision-making involves ongoing transparent conversations with both our data producers and consumers, frequent prioritization checks, and alignment with business needs as informed captains in this space.\nData Guarantees\nFor data correctness and trust, it’s crucial that we have audits and visibility into health metrics at each layer in the pipeline in order to investigate issues and root cause anomalies quickly. Maintaining data completeness while ensuring correctness becomes challenging due to upstream latency and required transformations to have the data ready for consumption. We continuously iterate our audits and incorporate feedback to refine and meet our SLAs.\nAbstraction Layers\nWe value people over process, and it is not uncommon for engineering teams to build custom SaaS solutions for other parts of the organization. Although this fosters innovation and improves development velocity, it can create a bit of a conundrum when it comes to understanding and interpreting usage patterns and attributing cost in a way that makes sense to the business and end consumer. With clear inventory, ownership, and usage data from FPD, and precise attribution in the analytical layer, we aim to provide metrics to downstream users regardless of whether they utilize and build on top of internal platforms or on AWS resources directly.\nFuture Forward\nLooking ahead, we aim to continue onboarding platforms to FPD and CEA, striving for nearly complete cost insight coverage in the upcoming year. Longer term, we plan to extend FPD to other areas of the business such as security and availability. We aim to move towards proactive approaches via predictive analytics and ML for optimizing usage and detecting anomalies in cost.\nUltimately, our goal is to enable our engineering organization to make efficiency-conscious decisions when building and maintaining the myriad of services that allow us to enjoy Netflix as a streaming service.\nAcknowledgments\nThe FPD and CEA work would not have been possible without the cross functional input of many outstanding colleagues and our dedicated team building these important data assets.\n—\nA bit about the authors:\nJHan enjoys nature, reading fantasy, and finding the best chocolate chip cookies and cinnamon rolls. She is adamant about writing the SQL select statement with leading commas.\nPallavi enjoys music, travel and watching astrophysics documentaries. With 15+ years working with data, she knows everything’s better with a dash of analytics and a cup of coffee!\n\nCloud Efficiency at Netflix was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/f2a142955f83",
        "categories": [
          "cost",
          "data-modeling",
          "infrastructure",
          "cloud-efficiency",
          "engineering"
        ],
        "isoDate": "2024-12-17T22:17:29.000Z"
      },
      {
        "creator": "Netflix Technology Blog",
        "title": "Title Launch Observability at Netflix Scale",
        "link": "https://netflixtechblog.com/title-launch-observability-at-netflix-scale-c88c586629eb?source=rss----2615bd06b42e---4",
        "pubDate": "Tue, 17 Dec 2024 21:54:37 GMT",
        "content:encodedSnippet": "Part 1: Understanding The Challenges\nBy: Varun Khaitan\nWith special thanks to my stunning colleagues: Mallika Rao, Esmir Mesic, Hugo Marques\nIntroduction\nAt Netflix, we manage over a thousand global content launches each month, backed by billions of dollars in annual investment. Ensuring the success and discoverability of each title across our platform is a top priority, as we aim to connect every story with the right audience to delight our members. To achieve this, we are committed to building robust systems that deliver comprehensive observability, enabling us to take full accountability for every title on our service.\nThe Challenge of Title Launch Observability\nAs engineers, we’re wired to track system metrics like error rates, latencies, and CPU utilization — but what about metrics that matter to a title’s success?\nConsider the following example of two different Netflix Homepages:\nSample Homepage ASample Homepage B\nTo a basic recommendation system, the two sample pages might appear equivalent as long as the viewer watches the top title. Yet, these pages couldn’t be more different. Each title represents countless hours of effort and creativity, and our systems need to honor that uniqueness.\nHow do we bridge this gap? How can we design systems that recognize these nuances and empower every title to shine and bring joy to our members?\nThe Operational Needs of a Personalization System\nIn the early days of Netflix Originals, our launch team would huddle together at midnight, manually verifying that titles appeared in all the right places. While this hands-on approach worked for a handful of titles, it quickly became clear that it couldn’t scale. As Netflix expanded globally and the volume of title launches skyrocketed, the operational challenges of maintaining this manual process became undeniable.\nOperating a personalization system for a global streaming service involves addressing numerous inquiries about why certain titles appear or fail to appear at specific times and places. \nSome examples:\n\nWhy is title X not showing on the Coming Soon row for a particular member?\nWhy is title Y missing from the search page in Brazil?\nIs title Z being displayed correctly in all product experiences as intended?\n\nAs Netflix scaled, we faced the mounting challenge of providing accurate, timely answers to increasingly complex queries about title performance and discoverability. This led to a suite of fragmented scripts, runbooks, and ad hoc solutions scattered across teams — an approach that was neither sustainable nor efficient.\nThe stakes are even higher when ensuring every title launches flawlessly. Metadata and assets must be correctly configured, data must flow seamlessly, microservices must process titles without error, and algorithms must function as intended. The complexity of these operational demands underscored the urgent need for a scalable solution.\nAutomating the Operations\nIt becomes evident over time that we need to automate our operations to scale with the business. As we thought more about this problem and possible solutions, two clear options emerged.\nOption 1: Log Processing\nLog processing offers a straightforward solution for monitoring and analyzing title launches. By logging all titles as they are displayed, we can process these logs to identify anomalies and gain insights into system performance. This approach provides a few advantages:\n\nLow burden on existing systems: Log processing imposes minimal changes to existing infrastructure. By leveraging logs, which are already generated during regular operations, we can scale observability without significant system modifications. This allows us to focus on data analysis and problem-solving rather than managing complex system changes.\nUsing the source of truth: Logs serve as a reliable “source of truth” by providing a comprehensive record of system events. They allow us to verify whether titles are presented as intended and investigate any discrepancies. This capability is crucial for ensuring our recommendation systems and user interfaces function correctly, supporting successful title launches.\n\nHowever, taking this approach also presents several challenges:\n\nCatching Issues Ahead of Time: Logging primarily addresses post-launch scenarios, as logs are generated only after titles are shown to members. To detect issues proactively, we need to simulate traffic and predict system behavior in advance. Once artificial traffic is generated, discarding the response object and relying solely on logs becomes inefficient.\nAppropriate Accuracy: Comprehensive logging requires services to log both included and excluded titles, along with reasons for exclusion. This could lead to an exponential increase in logged data. Utilizing probabilistic logging methods could compromise accuracy, making it difficult to ascertain whether a title’s absence in logs is due to exclusion or random chance.\nSLA and Cost Considerations: Our existing online logging systems do not natively support logging at the title granularity level. While reengineering these systems to accommodate this additional axis is possible, it would entail increased costs. Additionally, the time-sensitive nature of these investigations precludes the use of cold storage, which cannot meet the stringent SLAs required.\n\nOption 2: Observability Endpoints in Our Personalization Systems\nTo prioritize title launch observability, we could adopt a centralized approach. By introducing observability endpoints across all systems, we can enable real-time data flow into a dedicated microservice for title launch observability. This approach embeds observability directly into the very fabric of services managing title launches and personalization, ensuring seamless monitoring and insights. Key benefits and strategies include:\n\nReal-Time Monitoring: Observability endpoints enable real-time monitoring of system performance and title placements, allowing us to detect and address issues as they arise.\nProactive Issue Detection: By simulating future traffic(an aspect we call “time travel”) and capturing system responses ahead of time, we can preemptively identify potential issues before they impact our members or the business.\nEnhanced Accuracy: Observability endpoints provide precise data on title inclusions and exclusions, allowing us to make accurate assertions about system behavior and title visibility. It also provides us with advanced debugability information needed to fix identified issues.\nScalability and Cost Efficiency: While initial implementation required some investment, this approach ultimately offers a scalable and cost-effective solution to managing title launches at Netflix scale.\n\nChoosing this option also comes with some tradeoffs:\n\nSignificant Initial Investment: Several systems would need to create new endpoints and refactor their codebases to adopt this new method of prioritizing launches.\nSynchronization Risk: There would be a potential risk that these new endpoints may not accurately represent production behavior, thus necessitating conscious efforts to ensure all endpoints remain synchronized.\n\nUp Next\nBy adopting a comprehensive observability strategy that includes real-time monitoring, proactive issue detection, and source of truth reconciliation, we’ve significantly enhanced our ability to ensure the successful launch and discovery of titles across Netflix, enriching the global viewing experience for our members. In the next part of this series, we’ll dive into how we achieved this, sharing key technical insights and details.\nStay tuned for a closer look at the innovation behind the scenes!\n\nTitle Launch Observability at Netflix Scale was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/c88c586629eb",
        "categories": [
          "netflix",
          "observability"
        ],
        "isoDate": "2024-12-17T21:54:37.000Z"
      }
    ]
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Oleg Zinovyev",
        "title": "What’s Next for CLion: The 2025.1 Roadmap",
        "link": "https://blog.jetbrains.com/clion/2024/12/2025-1-roadmap/",
        "pubDate": "Thu, 19 Dec 2024 08:59:47 +0000",
        "content:encodedSnippet": "We’ve begun work on our next major release, 2025.1, which we’ll introduce early next year. After reading through your valuable feedback and feature requests, and taking into account our own strategic goals, we’ve prioritized the following areas for development:\n🚀 The CLion Nova language engine\n🛠️ The debugger \n🤖 Embedded development\n🏗️ Project formats and build tools\nRead on to learn more about our planned updates.\nOur team is committed to creating an IDE that makes development smooth and productive. However, the following is a preliminary roadmap only – we can’t guarantee that all the issues listed below will be addressed in CLion 2025.1. It’s possible that unforeseen circumstances could require us to modify our plans or implementation timelines for some items.\nCLion Nova\nWe’re still working to improve our new, faster, and more powerful CLion Nova language engine by optimizing its performance and expanding its feature set. With each passing day, it’s becoming even more capable of serving as the default engine for all users, new and existing.\nFor the 2025.1 release, our CLion Nova development efforts will focus on some of the most requested features, including out-of-project file support, multiple settings and actions, and smart keys.\nOut-of-project files\nCLion Nova doesn’t properly support header and source files that are not included in a project and, therefore, doesn’t provide the necessary information about a compiler. This causes various problems with code analysis and code assistance.\nSupport for these kinds of out-of-project files in CLion Nova is one of the most anticipated features we’ve been working on for upcoming releases (CPP-38040). We’re pleased to report that we’ve made some progress in this area and hope to introduce this feature in 2025.1. \nIt’s worth mentioning that, historically, the ReSharper C++ backend used in CLion Nova was designed to work with projects where every file, including header files, is explicitly mentioned in the build scripts. This is not the case for most build systems CLion supports. For this reason, we need to restore the set of tradeoffs and heuristics that CLion Classic uses for such cases.\nWith this in mind, it would be helpful if you could share any use cases involving header files that are not included anywhere else in your project or source files that are not used during the build process. Would you like for them to be included in project-wide actions like Find Usages? Or would you like to see error highlighting there? Please share your use cases in the ticket or in the comments section below.\nSettings and actions\nWe plan to implement several settings and actions available in CLion Classic but missing in CLion Nova, which will make development with the new engine more convenient. These include:\nC/C++ auto-import options, such as Auto import local files with quotes and Auto import on completion (CPP-35360).\nStyle settings for header guards, which help keep their names according to the format you prefer and allow you to create custom templates (CPP-36933).\nThe ability to move a caret to a code block end or start using a shortcut (CPP-36147).\nSmart keys\nSmart keys are editor actions that allow you to write code faster and make working in the IDE even smoother. Several of these actions are available in CLion Classic but are still missing in CLion Nova. Here are some of the smart keys we’ll be adding in the next release:\nJump outside closing bracket/quote with Tab when typing (CPP-24705).\nUnindent on Backspace (CPP-35995).\nReformat block on typing `}` (CPP-38777).\nDebugger\nRegarding new debugger features for v2025.1, we plan to focus on some of the most long-awaited, such as:\nQt pretty printers: We’ll add support for Qt pretty printers to improve the readability of Qt variables, arrays, and other data types during debugging (CPP-605).\nCustom LLDB binary: Users who can’t use the CLion’s bundled LLDB will soon be able to switch to a custom LLDB binary (CPP-3589).\nEmbedded development\nFor embedded development, we’re focusing on improving debug servers and adding the ability to monitor variables and memory values in real-time while debugging.\nDebug servers\nWe’re continuing to refine our experimental Debug Servers configuration option introduced in v2024.3. This option allows you to configure a debug server for a specific debug probe and use it to run or debug a build target. As a result, debug servers make it easier to set up and run debugging for embedded and remote development.\nFor the next release, we’ll make the feature easier to configure by adding the following:\nESP32 Debug Server: In addition to the Generic and SEGGER J-Link preconfigured debug server templates, we’ll add a new template for ESP32 MCUs. This will simplify flashing these chips and debugging applications.\nUX improvements: We also plan to improve the user experience when working with debug servers, focusing on streamlining the setup process and the Debug Servers dialog UI.\n\n\n\n\nWe encourage you to try the Debug Servers option and share your feedback. To do so, use Help | Submit Feedback… in the main IDE menu or leave a comment under this post.\nWatching variable values and memory changes in real time\nObserving variable values and memory changes in real time without stopping a program is critical for many embedded developers. It allows them to monitor the device state and application performance, which is especially helpful for testing and error detection.\nIf you’re a developer waiting for this feature, or are interested in trying it, we’d appreciate it if you’d take a few minutes to fill out our survey and share your use cases and challenges. This will help us address the most important user needs and improve the feature.\nProject formats and build tools\nAmong the many enhancements to project formats and build tools, the most significant relate to support for Zephyr, Bazel, and a remote Docker toolchain.\nSysbuild support for Zephyr\nOne of the Zephyr-related updates planned for the upcoming release is support for sysbuild. This is a high-level build system that combines other build systems, such as West and CMake. The main strength of sysbuild is that it provides the ability to build multiple images for boards with multiple SoCs (systems on chip) or SoCs with multiple CPU cores. Another popular example of using sysbuild is when one application is built for a boot loader while another is built for the core CPU.\nBazel plugin enhancements\nWe’re planning several improvements to CLion’s Bazel support, the most important of which are as follows:\nSupport for qsync to import C/C++ projects: Query sync, or qsync, is one of the two ways to import Bazel projects for C/C++. The other is aspect sync, which CLion currently uses. In short, qsync is faster because it allows you to import only the parts of a project that you need. We aim to add basic support for qsync in the next release (CPP-42253).\nSupport for Google Test and Catch2 when working with Bazel projects using CLion Nova. We’ve already added this to v2024.12.17 of the Bazel plugin, and it will be available in CLion Nova soon.\nThe latest CMake and CMake Presets versions\nIn the previous release, we updated the CMake bundle to 3.30. For CLion v2025.1, we plan to update the build system to the latest CMake, v3.31, which will also include support for CMake Prestes v10. CMake Presets are useful when you want to specify common build options and share them with other users.\nRemote Docker toolchain\nCurrently, CLion’s Docker toolchain only allows working with containers locally. There are two modes for working with containers running remotely: via Gateway and with local sources. In v2025.1, we plan to add support for a remote Docker toolchain, allowing users to work with remote containers via an SSH connection (CPP-42340).\nCall for feedback\nWe value your feedback – your experiences and insights are essential to our mission to continuously improve CLion. Please share your ideas in the comments section below or submit them to our issue tracker.\nThe free Early Access Program, which will give you the chance to try all of the new features planned for the next major release, is just around the corner. In the meantime, upgrade to CLion 2024.3 if you haven’t already done so, and let us know what you think!\nDOWNLOAD CLION 2024.3",
        "dc:creator": "Oleg Zinovyev",
        "content": "We’ve begun work on our next major release, 2025.1, which we’ll introduce early next year. After reading through your valuable feedback and feature requests, and taking into account our own strategic goals, we’ve prioritized the following areas for development: 🚀 The CLion Nova language engine 🛠️ The debugger&#160; 🤖 Embedded development 🏗️ Project formats and [&#8230;]",
        "contentSnippet": "We’ve begun work on our next major release, 2025.1, which we’ll introduce early next year. After reading through your valuable feedback and feature requests, and taking into account our own strategic goals, we’ve prioritized the following areas for development: 🚀 The CLion Nova language engine 🛠️ The debugger  🤖 Embedded development 🏗️ Project formats and […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=535817",
        "categories": [
          "news",
          "roadmap",
          "bazel",
          "clionnova",
          "debugger",
          "embedded",
          "qt",
          "zephyr-west"
        ],
        "isoDate": "2024-12-19T08:59:47.000Z"
      },
      {
        "creator": "Daniela Bentrup",
        "title": "Introducing Fleet’s New Islands UI",
        "link": "https://blog.jetbrains.com/fleet/2024/12/introducing-fleets-new-islands-ui/",
        "pubDate": "Wed, 18 Dec 2024 21:10:04 +0000",
        "content:encodedSnippet": "We envisioned Fleet as a coding tool with a clear minimalist design that doesn’t overwhelm and helps keep you focused. Today we’re introducing a new, bolder look for Fleet. We believe that this new direction in Fleet’s UI will help make your developer experience more cohesive, intuitive, and, of course, productive.\nNew islands layout\nThe most notable change introduced in this update is the islands layout. The new design visually separates the editor and tool panels, creating a cleaner and more focused workspace. This update not only gives Fleet a sleek, organic look but also helps you focus on the task at hand by minimizing distractions and guiding your attention to the content within each panel.\n\n\n\n\nWe’ve placed the island-like panels on a single canvas to build a modular and scalable layout system. The UI is split into easily distinguishable areas and elements like editor and tools that represent different parts of the development workflow and can be easily rearranged.\nFleet’s tab-based navigation further enhances the smooth and intuitive user experience. By allowing for flexible content arrangement, you can easily switch between different files, streamlining your workflow.\nEnhanced editor\nThe editor has also seen significant updates, including a more streamlined and lightweight Search and Replace and an improved, visually refined Problems widget.\n\n\n\nPinned tabs\nFleet now also offers you the ability to pin tabs, allowing you to keep your most important tabs open at all times. Without a close icon, pinned tabs can’t be closed accidentally. To pin or unpin a tab, just right-click it and select Pin or Unpin from the popup menu. You can also drag a pinned tab outside a pinned group to unpin it.\n\n\n\nUpdated UI kit\nThe UI kit has been fully revamped for the islands UI. All components have been refined to ensure a more polished and cohesive look aligned with the new visual style. The transparent style is used in buttons, tabs, and other components, ensuring clarity and strong contrast with backgrounds and text labels.\n\n\n\nNew color palette\nFor the new UI, we’ve designed a balanced color system that is scalable and allows you to create custom color palettes.\nThe UI’s color scheme ensures accessibility, as all text is clearly readable and compliant with Web Content Accessibility Guidelines (WCAG) guidelines.\n\n\n\nRefined typography\nOur new typographic system now uses the Inter variable, providing improved control over weight adjustments for optimal readability in both dark and light themes.\nThe updated font styles follow a unified type scale, ensuring harmony and visual appeal.\n\n\n\nImproved inline diff preview\nThe inline diff preview in the editor has been updated with a new floating toolbar, allowing for quick access to popular actions.\n\n\n\nRedesigned Goto popup\nTo align with the new design, we’ve reworked the Goto popup, which now separates information more clearly.\n\n\n\nUpdated interlines\nWe’ve also updated interlines by better separating the file preview and adding a status bar, clarifying the file’s source.\n\n\n\nDrag-and-drop and resize\nNew drag-and-drop and resize functionality now includes improved visual accents, enhancing usability and providing clearer feedback for user actions.\n\n\n\nRefreshed default themes\nThe new UI comes with updated dark, light, and purple themes. Any existing custom themes will revert to these new defaults, but you can personalize them as desired.\nWe want to hear from you!\nDownload and explore the new UI today, and let us know what you think in the comments below.",
        "dc:creator": "Daniela Bentrup",
        "content": "We envisioned Fleet as a coding tool with a clear minimalist design that doesn’t overwhelm and helps keep you focused. Today we’re introducing a new, bolder look for Fleet. We believe that this new direction in Fleet’s UI will help make your developer experience more cohesive, intuitive, and, of course, productive. New islands layout The [&#8230;]",
        "contentSnippet": "We envisioned Fleet as a coding tool with a clear minimalist design that doesn’t overwhelm and helps keep you focused. Today we’re introducing a new, bolder look for Fleet. We believe that this new direction in Fleet’s UI will help make your developer experience more cohesive, intuitive, and, of course, productive. New islands layout The […]",
        "guid": "https://blog.jetbrains.com/?post_type=fleet&p=535461",
        "categories": [
          "news"
        ],
        "isoDate": "2024-12-18T21:10:04.000Z"
      },
      {
        "creator": "Daniela Bentrup",
        "title": "Fleet 1.44 Is Here With New UI, Zig Language Support, and More Enhancements",
        "link": "https://blog.jetbrains.com/fleet/2024/12/fleet-1-44-is-here-with-new-ui-zig-language-support-and-more-enhancements/",
        "pubDate": "Wed, 18 Dec 2024 21:09:01 +0000",
        "content:encodedSnippet": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using Toolbox App.\nLet’s take a closer look at the highlights.\nDownload Fleet 1.44\nNew features\nWith version 1.44, we’ve enabled a new UI for all Fleet users. It introduces impactful modifications to enhance your user experience, increase workflow organization, and make Fleet easier to navigate. The new UI has a unique visual identity, providing a consistent color palette, increased contrast, updated typography, and better accents. The tab-based navigation further enhances the smooth and intuitive user experience.\nFor more information about the new UI, please read this blog post.\n\n\n\n\n\nZig language support for Fleet is here. Zig is a free and open-source general-purpose programming language, often referred to as the better C language. Zig has been widely adopted due to its simplicity, and Fleet 1.44 introduces a frontend implementation for .zig and .zon files. This includes indentation, commenting, typing assistance, highlighting, file templates, and an LSP-based formatter (.zig files only). Fleet also supports basic run tasks based on the Zig Build System and the processing of the build output to find Zig file references. Fleet further provides the auto download of ZLS (the LSP implementation for Zig) and launches it for Smart Mode. This enables code completion, better access to docs, navigation to definitions and usages, and more.\nImprovements\nFleet now notifies you when opening a Kotlin Multiplatform (KMP) project where the Android SDK is needed  but not yet installed. Just click the Fix button in the notification to easily install the missing Android SDK.\nWe’ve resolved the issue that prevented some KMP Gradle projects from completing the import process.\n\n\n\n\n\nWith Fleet 1.44, smooth caret animation becomes the default. This feature can be configured via Settings | Editor | Caret.\n\n\n\nBug fixes\nWe’ve also fixed several bugs:\nCreating a dev container now works as expected [FL-29032].\nWhen using remote workspaces in Fleet, copy-pasting works as expected in the file tree [FL-30260].\nThe documentation popup no longer hides the quick-fix popup [FL-29023].\nSee the full release notes for more details about Fleet 1.44.\nPlease report any problems you encounter to our issue tracker, and stay tuned for further exciting announcements.\nJoin the JetBrains Tech Insights Lab to participate in surveys, interviews, and UX studies, and help us make JetBrains Fleet better!",
        "dc:creator": "Daniela Bentrup",
        "content": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.44 New features Improvements Bug fixes We&#8217;ve also fixed several bugs: See the full release notes for more details about Fleet [&#8230;]",
        "contentSnippet": "Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.44 New features Improvements Bug fixes We’ve also fixed several bugs: See the full release notes for more details about Fleet […]",
        "guid": "https://blog.jetbrains.com/?post_type=fleet&p=534895",
        "categories": [
          "news",
          "releases"
        ],
        "isoDate": "2024-12-18T21:09:01.000Z"
      },
      {
        "creator": "Ekaterina Petrova",
        "title": "Introducing klibs.io: A New Way to Discover Kotlin Multiplatform Libraries",
        "link": "https://blog.jetbrains.com/kotlin/2024/12/introducing-klibs-io-a-new-way-to-discover-kotlin-multiplatform-libraries/",
        "pubDate": "Tue, 17 Dec 2024 15:22:54 +0000",
        "content:encodedSnippet": "Kotlin Multiplatform is growing rapidly, with its ecosystem expanding and the number of libraries increasing by 35% in 2024 alone. However, with more libraries available than ever, finding the right one for your use case and target platforms can still be a challenge. Whether you’re looking for a solution to handle permissions on iOS and Android or searching for a Compose Multiplatform calendar component that supports both mobile and web, the challenge isn’t just finding one library – it’s having all of the options clearly presented so you can compare and choose the best fit. Today, we’re excited to introduce klibs.io – our new service designed to make finding Kotlin Multiplatform libraries faster and easier.\n\n\n\n\nWhat is klibs.io?\nKlibs.io is an easy web service that allows you to find a Kotlin Multiplatform library for a specific purpose that supports selected platforms (JVM, Android JVM, Wasm, JS, Kotlin/Native). The website indexes data from GitHub and Maven Central and uses AI-generated metadata to enhance search results. It aims to make it easier to evaluate libraries by providing KMP-related information.\n\n\n\n\nWith klibs.io, developers will spend less time searching and more time building, while library authors benefit from increased visibility for their work. Learn how to make your library visible on klibs.io.\nWhat’s next for klibs.io?\nWhile klibs.io is already live as an alpha version, this is just the beginning. We already have a significant backlog of ideas, including features for both developers and library authors. However, before moving forward, we want to hear from our Kotlin Multiplatform users.\nHow you can help\nYour feedback is crucial in shaping the future of klibs.io. Here’s how you can contribute:\nTry it out: Explore the functionality at klibs.io.\nShare your thoughts: What features would you like to see next? (e.g., Gradle plugin indexing, GitLab/Bitbucket support, etc.).\nJoin the discussion: Leave your feedback in the comments or join our Slack.\nWe’d love for you to try klibs.io and share your feedback to help us improve it. Together, we can make finding Kotlin Multiplatform libraries simpler and more efficient. Check out klibs.io now!",
        "dc:creator": "Ekaterina Petrova",
        "content": "Kotlin Multiplatform is growing rapidly, with its ecosystem expanding and the number of libraries increasing by 35% in 2024 alone. However, with more libraries available than ever, finding the right one for your use case and target platforms can still be a challenge. Whether you’re looking for a solution to handle permissions on iOS and [&#8230;]",
        "contentSnippet": "Kotlin Multiplatform is growing rapidly, with its ecosystem expanding and the number of libraries increasing by 35% in 2024 alone. However, with more libraries available than ever, finding the right one for your use case and target platforms can still be a challenge. Whether you’re looking for a solution to handle permissions on iOS and […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=535570",
        "isoDate": "2024-12-17T15:22:54.000Z"
      },
      {
        "creator": "Julia Amatuni",
        "title": "AI Inspires Learners, IDEs Drive Them: Computer Science Education Trends 2024",
        "link": "https://blog.jetbrains.com/education/2024/12/17/computer-science-education-trends-2024/",
        "pubDate": "Tue, 17 Dec 2024 14:04:57 +0000",
        "content:encodedSnippet": "Computer science education and literacy are skyrocketing in demand worldwide. To understand the latest trends, challenges, and motivations driving learners, as well as other factors shaping the field, we conducted the 2024 Computer Science Learning Curve Survey. More than 23,991 learners from 16 countries and seven broader regions completed our detailed questionnaire – equivalent to over a year of collective effort. Dive in to discover what we’ve learned!\nRead the Full Report\n                                                    \nArtificial Intelligence (AI) is a magnet for new computer science learners\nWhile programming, algorithms, and databases may still dominate the curriculum, AI sparks fresh interest in computer science. Nearly 28% of learners plan to dive into AI for their next course, while 33%–34% are already exploring it – including 18% who are taking their very first steps in computer science.\nAI is democratizing computer science education\nAI-powered translation tools for learning are especially popular in regions with diverse or non-English speaking populations (Northern Eurasia, Turkey, Asia, Latin America).\nIntegrated development environments (IDEs) reign supreme, even for beginners\nContrary to the belief that beginners prefer simpler tools, 46% of learners wrote their first line of code in an IDE – outpacing text editors (28%) and browser-based editors (11%). IDE users report fewer challenges, less isolation, and lower rates of imposter syndrome, feeling better equipped to keep pace with the rapid evolution of technology without becoming overwhelmed.\nQuality assurance (QA) roles are an undervalued entry point\nDespite being a potential entry point into tech, QA/Tester remains generally less sought-after than other tech roles. However, it stands out, alongside user interface (UI) and user experience (UX) designer (16%) and business analyst (14%), as a role with higher-than-average female representation in the industry.\nComputer science is about passion and creativity, not just paychecks\nPassion fuels tech learners much like it does artists or musicians. Nearly half (46%) enter computer science to tackle challenges, automate processes, or turn a hobby into a career. The drive to create – whether crafting games, websites, or innovative solutions – surpasses practical motivators like salary (41%) or remote work flexibility (34%).\nHands-on projects trump all\nA whopping 76% of learners consider hands-on projects the most important aspect of educational courses, far outweighing other factors like structured curriculum or clear learning objectives.\nWomen prioritize flexibility and support \nFemale learners value time flexibility, remote learning options, technical support, and accessible study spaces more than their male counterparts.\nProductivity-boosting strategies have regional quirks\nGetting enough sleep is the second most popular productivity booster globally, but Germans prioritize listening to music over it. North and South Americans embrace pet time – a tactic almost unheard of in Nigeria, China, South Korea, and the Middle East.\nCareer switching is a rising trend\nThe stereotypical image of a young, single male computer science learner under 30, balancing late-night coding with a software engineering day job still holds true – particularly in India and China. However, an increasing number of learners aged 30 and above are breaking the mold, transitioning into tech from diverse fields, from engineering and finance to healthcare and creative arts.\nDiscover More Insights\n                                                    \nShare, discuss and collaborate with us\nWe’re excited to collaborate with professionals from diverse fields – whether you’re an educator, developer, or researcher – for projects like hackathons, research initiatives, and more. Reach out to us at academy@jetbrains.com to get involved.\nShare your thoughts on the survey results on social media using #JetBrainsAcademySurvey24.\nYour JetBrains Academy team",
        "dc:creator": "Julia Amatuni",
        "content": "Computer science education and literacy are skyrocketing in demand worldwide. To understand the latest trends, challenges, and motivations driving learners, as well as other factors shaping the field, we conducted the 2024 Computer Science Learning Curve Survey. More than 23,991 learners from 16 countries and seven broader regions completed our detailed questionnaire – equivalent to [&#8230;]",
        "contentSnippet": "Computer science education and literacy are skyrocketing in demand worldwide. To understand the latest trends, challenges, and motivations driving learners, as well as other factors shaping the field, we conducted the 2024 Computer Science Learning Curve Survey. More than 23,991 learners from 16 countries and seven broader regions completed our detailed questionnaire – equivalent to […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=535217",
        "categories": [
          "coding",
          "community",
          "data",
          "general",
          "insights",
          "jetbrains",
          "jetbrains-academy",
          "survey",
          "jetbrainsacademy",
          "survey-2",
          "computer-science",
          "education",
          "news"
        ],
        "isoDate": "2024-12-17T14:04:57.000Z"
      },
      {
        "creator": "Siva Katamreddy",
        "title": "Testing Spring Boot Applications Using Testcontainers",
        "link": "https://blog.jetbrains.com/idea/2024/12/testing-spring-boot-applications-using-testcontainers/",
        "pubDate": "Mon, 16 Dec 2024 14:50:37 +0000",
        "content:encodedSnippet": "Testing is a crucial part of software development, verifying that a system functions as intended. Developers create unit tests to validate the behavior of individual components, isolating them from external dependencies such as file systems, databases, message brokers, and third-party APIs. However, since many applications rely on these external components, developers write integration tests to ensure an application interacts correctly with its dependencies in a more complete environment.\nIntegration testing can be challenging if developers rely on shared environments, mock systems, or manual configuration of dependencies, all of which can lead to brittle tests and undetected issues in production.\nTestcontainers for Java is an open-source Java library that provides lightweight, disposable containers as test fixtures, enabling developers to run real instances of databases, message brokers, web servers, and other dependencies during testing. By leveraging Docker, Testcontainers ensures that tests run in isolated and consistent environments, independent of the host machine’s configuration. Testcontainers integrates seamlessly with popular testing libraries like JUnit and TestNG, making it easy for developers to write integration tests.\nThis blog post covers the following topics:\nGetting started with Testcontainers\nWriting tests with Testcontainers and JUnit 5\nTesting Spring Data JPA repositories using Testcontainers\nTesting Spring Boot REST APIs using Testcontainers\nLet’s get started by setting up Testcontainers. If you already know how to do that, feel free to skip ahead to the Writing tests with Testcontainers and JUnit 5 section.\nGetting started with Testcontainers\nThe Testcontainers library provides a higher-level API to manage the container life cycle, extract information about running containers, and more. While it is predominantly used for testing, Testcontainers can also be used for local development.\nThe Testcontainers library needs a container runtime to create the container instances. To find the supporting container runtimes, see this doc.\nLet’s look at how you can use the Testcontainers API to create a Redis Docker container instance using a GenericContainer abstraction.\nFirst, add the testcontainers dependency to your build file:\n// Gradle build.gradle\ntestImplementation 'org.testcontainers:testcontainers:1.20.4'\n\n//Maven pom.xml\n<dependency>\n   <groupId>org.testcontainers</groupId>\n   <artifactId>testcontainers</artifactId>\n   <version>1.20.4</version>\n   <scope>test</scope>\n</dependency>\nNow, you can use the GenericContainer API to create a container from the redis:7 Docker image exposing the container’s port 6379 to the host and use the container as follows:\nimport org.testcontainers.containers.GenericContainer;\n\n\nGenericContainer<?> container = new GenericContainer<>(\"redis:7\").withExposedPorts(6379);\ncontainer.start();\nString host = container.getHost();\nint hostPort = container.getMappedPort(6379);\nSystem.out.println(\"Redis started on \" + host + \":\" + hostPort);\ncontainer.stop();\nTestcontainers maps the exposed container ports to randomly available ports on the host machine so there won’t be any conflicts with other containers running in parallel. You can use the container.getMappedPort(port) method to get the mapped port on the host machine.\nThe GenericContainer provides a generic API for managing containers, but it doesn’t provide any container-specific methods. To streamline working with various technologies, Testcontainers offers technology-specific modules and additional API methods. You can see the full list of available Testcontainers modules here.\nNow, let’s look at how you can use the Testcontainers PostgreSQL module and the additional methods it provides.\nAdd the Testcontainer postgresql module dependency to your build file:\n// Gradle build.gradle\ntestImplementation 'org.testcontainers:postgresql:1.20.4'\n\n//Maven pom.xml\n<dependency>\n   <groupId>org.testcontainers</groupId>\n   <artifactId>postgresql</artifactId>\n   <version>1.20.4</version>\n   <scope>test</scope>\n</dependency>\nNow, you can use the PostgreSQLContainer class to create an instance of a PostgreSQL container:\nPostgreSQLContainer<?> postgres = new PostgreSQLContainer<>(\"postgres:17\");\npostgres.start();\n\nhost = postgres.getHost();\nhostPort = postgres.getMappedPort(5432);\n//If you expose only one port, then you can use getFirstMappedPort()\nhostPort = postgres.getFirstMappedPort();\n\n// container-specific methods\nString jdbcUrl = postgres.getJdbcUrl();\nString username = postgres.getUsername();\nString password = postgres.getPassword();\nString databaseName = postgres.getDatabaseName();\n\npostgres.stop();\nPostgreSQLContainer abstracts the details of the container port number, database credentials, and readiness checks and provides you with a high-level API to interact with it. You can also see that this class provides additional methods to get information about the PostgreSQL container, such as getJdbcUrl() and getDatabaseName().\nNOTE: Even if you don’t explicitly destroy the containers by calling the container.stop() method, Testcontainers will automatically destroy the container upon exiting the JVM or by using the Moby Ryuk sidecar container behind the scenes.\nNow that we’ve explored setting up the Testcontainers library to create, start, and stop Docker containers, as well as extract information about them, let’s see how to use Testcontainers for testing.\nWriting tests with Testcontainers and JUnit 5\nTypically, the Testcontainers library is used for integration testing in conjunction with testing libraries like JUnit. The components, such as databases and message brokers, that are required for tests will be started before running any test cases​​ and destroyed after the test execution is completed.\nYou can use JUnit test life cycle callback methods to start and stop the containers:\nimport org.junit.jupiter.api.AfterAll;\nimport org.junit.jupiter.api.BeforeAll;\nimport org.junit.jupiter.api.Test;\nimport org.testcontainers.containers.PostgreSQLContainer;\n\nclass TestcontainersWithJunit5Callbacks {\n   static PostgreSQLContainer postgres = new PostgreSQLContainer(\"postgres:17\");\n  \n   @BeforeAll\n   static void beforeAll() {\n       postgres.start();\n       // configure your application to talk to the PostgreSQL container\n   }\n\n   @AfterAll\n   static void afterAll() {\n       postgres.stop();\n   }\n\n   @Test\n   void test1() {\n       // test code that uses postgres\n   }\n\n   @Test\n   void test2() {\n       // test code that uses postgres\n   }\n}\nA common practice is starting the containers before test execution and destroying those containers after test execution is completed. The Testcontainers JUnit 5 Jupiter extension is created to simplify this process by using an annotation-based approach.\nFirst, add the following Testcontainers junit-jupiter dependency:\n// Gradle build.gradle\ntestImplementation 'org.testcontainers:junit-jupiter:1.20.4'\n\n//Maven pom.xml\n<dependency>\n   <groupId>org.testcontainers</groupId>\n   <artifactId>junit-jupiter</artifactId>\n   <version>1.20.4</version>\n   <scope>test</scope>\n</dependency>\nNow, you can write integration tests using the Testcontainers JUnit Jupiter extension:\nimport org.testcontainers.junit.jupiter.Container;\nimport org.testcontainers.junit.jupiter.Testcontainers;\n\n@Testcontainers\nclass TestcontainersWithJuperExtension {\n  \n   @Container\n   static PostgreSQLContainer postgres =\n           new PostgreSQLContainer(\"postgres:17\");\n\n   @Test\n   void test1() {\n       // test talking to postgres\n   }\n\n   @Test\n   void test2() {\n       // test talking to postgres\n   }\n}\nBy adding the @Testcontainers annotation on the class and @Container annotation on the container declaration field, JUnit will automatically start the container before running tests and automatically destroy it after the test has been executed.\nNOTE: When you use the @Container annotation on static container declarations, like in the example above, only one instance of that container is created for all test cases within a single test class. If you want to create a separate instance for each test case, make it a non-static field. Remember that spinning up a new container instance for every test case is not recommended, as it slows down the test execution.\nIntegration testing Spring Boot applications using Testcontainers\nWhile Testcontainers can be used with any Java application, frameworks like Spring Boot provide out-of-the-box support for Testcontainers to make integration testing easier.\nLet’s explore how you can test Spring Data JPA repositories and Spring Boot REST APIs that use a PostgreSQL database with Testcontainers.\nIf you want to learn how to build a Spring Boot REST API with Spring Data JPA, PostgreSQL, and Flyway, read the following blog posts:\nHow to Build a CRUD REST API Using Spring Boot \nHow to Use Flyway for Database Migrations in Spring Boot Applications\n\n\n\n\nLet’s use the bookmarks Spring Boot application that was created in the above blog posts and write tests for the Spring Data JPA repository and REST API using Testcontainers.\nFirst, clone the flyway branch of the bookmarks repository and create a new branch called testcontainers. The flyway branch uses Flyway database migrations to manage database schema changes.\n$ git clone --branch flyway https://github.com/sivaprasadreddy/bookmarks.git\n$ git checkout -b testcontainers\nNow, add the following Testcontainers PostgreSQL module and junit-jupiter dependencies:\n// Gradle build.gradle\ntestImplementation 'org.testcontainers:postgresql'\ntestImplementation 'org.testcontainers:junit-jupiter'\n\n//Maven pom.xml\n<dependency>\n   <groupId>org.testcontainers</groupId>\n   <artifactId>postgresql</artifactId>\n   <scope>test</scope>\n</dependency>\n<dependency>\n   <groupId>org.testcontainers</groupId>\n   <artifactId>junit-jupiter</artifactId>\n   <scope>test</scope>\n</dependency>\nSpring Boot provides slice test annotations such as @DataJpaTest, @DataMongoTest, and @WebMvcTest to test a slice of the application. By using these slice test annotations, you can write tests that load only the necessary components of the application. To write integration tests, Spring Boot’s @SpringBootTest annotation bootstraps the entire application context, loading all the components.\nTesting Spring Data JPA repositories\nHere’s the BookmarkRepository interface within the bookmarks project:\npackage com.jetbrains.bookmarks;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface BookmarkRepository extends JpaRepository<Bookmark, Long> {\n List<BookmarkInfo> findAllByOrderByCreatedAtDesc();\n\n Optional<BookmarkInfo> findBookmarkById(Long id);\n}\nA common mistake when testing repositories is using an in-memory database like H2 for testing while using a different type of database like PostgreSQL or Oracle Database in production. There is no guarantee that the implementation that worked with an in-memory database will work in the same way with other databases. Additionally, the in-memory database may not have all the features provided by your production database and vice versa.\nFor example, the following is a valid query for PostgreSQL:\nINSERT INTO items(id, code, name) VALUES(?,?,?) ON CONFLICT DO NOTHING;\nHowever, this query doesn’t work with the H2 database by default. Executing the above query with the H2 database results in the following exception:\nCaused by: org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement \"INSERT INTO items (id, code, name) VALUES (?, ?, ?) ON[*] CONFLICT DO NOTHING\";\"\nFurthermore, the H2 database supports the ROWNUM() function, whereas PostgreSQL does not.\nTo ensure consistent behavior between testing and production, using the same database type is recommended. Testcontainers is useful because it facilitates this approach.\nNow, let’s write tests for the BookmarkRepository using the @DataJpaTest slice test annotation using Testcontainers:\npackage com.jetbrains.bookmarks;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\nimport org.springframework.test.context.DynamicPropertyRegistry;\nimport org.springframework.test.context.DynamicPropertySource;\nimport org.testcontainers.containers.PostgreSQLContainer;\nimport org.testcontainers.junit.jupiter.Container;\nimport org.testcontainers.junit.jupiter.Testcontainers;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n@DataJpaTest\n@Testcontainers\nclass BookmarkRepositoryTest {\n   @Container\n   static PostgreSQLContainer<?> postgres = new PostgreSQLContainer<>(\"postgres:17\");\n\n   @DynamicPropertySource\n   static void configureProperties(DynamicPropertyRegistry registry) {\n       registry.add(\"spring.datasource.url\", postgres::getJdbcUrl);\n       registry.add(\"spring.datasource.username\", postgres::getUsername);\n       registry.add(\"spring.datasource.password\", postgres::getPassword);\n   }\n\n   @Autowired\n   BookmarkRepository bookmarkRepository;\n\n   @Test\n   void shouldFindBookmarkById() {\n       var bookmark = new Bookmark(\"JetBrains Blog\",\"https://blog.jetbrains.com\");\n       Long bookmarkId = bookmarkRepository.save(bookmark).getId();\n\n       var bookmarkInfo = bookmarkRepository.findBookmarkById(bookmarkId).orElseThrow();\n       assertThat(bookmarkInfo.getTitle()).isEqualTo(\"JetBrains Blog\");\n       assertThat(bookmarkInfo.getUrl()).isEqualTo(\"https://blog.jetbrains.com\");\n   }\n}\nWe are using the @Testcontainers and @Container annotations to start the PostgreSQL container before running tests and destroying it afterward. Once the PostgreSQL container is started, we can configure our Spring Boot application data source properties to connect to the PostgreSQL container using @DynamicPropertySource – this allows us to override the default properties.\nIf you run the test, you can see that a PostgreSQL container starts, and the test executes against the PostgreSQL database container.\nSpring Boot 3.1.0 introduced ServiceConnection support, simplifying the usage of Testcontainers for testing and local development. To use this feature, add the following dependency:\n// Gradle build.gradle\ntestImplementation 'org.springframework.boot:spring-boot-testcontainers'\n\n//Maven pom.xml\n<dependency>\n   <groupId>org.springframework.boot</groupId>\n   <artifactId>spring-boot-testcontainers</artifactId>\n   <scope>test</scope>\n</dependency>\nNow, let’s update the BookmarkRepositoryTest to use the ServiceConnection support:\nimport org.springframework.boot.testcontainers.service.connection.ServiceConnection;\n\n@DataJpaTest\n@Testcontainers\nclass BookmarkRepositoryTest {\n   \n   @Container\n   @ServiceConnection\n   static PostgreSQLContainer<?> postgres = new PostgreSQLContainer<>(\"postgres:17\");\n\n   @Autowired\n   BookmarkRepository bookmarkRepository;\n\n   @Test\n   void shouldFindBookmarkById() {\n       //...\n   }\n}\nBy adding the @ServiceConnection annotation to the container field definition, Spring Boot will automatically configure the data source properties pointing to the PostgreSQL database container. There is no need to explicitly configure the data source properties using @DynamicPropertySource.\nIf you create a Spring Boot project with PostgreSQL and Testcontainers dependencies, a class with the name TestcontainersConfiguration will be created under the src/test/java directory:\npackage com.jetbrains.bookmarks;\n\nimport org.springframework.boot.test.context.TestConfiguration;\nimport org.springframework.boot.testcontainers.service.connection.ServiceConnection;\nimport org.springframework.context.annotation.Bean;\nimport org.testcontainers.containers.PostgreSQLContainer;\nimport org.testcontainers.utility.DockerImageName;\n\n@TestConfiguration(proxyBeanMethods = false)\nclass TestcontainersConfiguration {\n\n   @Bean\n   @ServiceConnection\n   PostgreSQLContainer<?> postgresContainer() {\n      return new PostgreSQLContainer<>(DockerImageName.parse(\"postgres:17\"));\n   }\n}\nIf you introduce Testcontainers in an existing application, you need to manually create this class.\nInstead of defining the PostgreSQLContainer in each test class, you can import the TestcontainersConfiguration class and use it in your test:\n@DataJpaTest\n@Import(TestcontainersConfiguration.class)\nclass BookmarkRepositoryTest {\n\n   @Autowired\n   BookmarkRepository bookmarkRepository;\n\n   @Test\n   void shouldFindBookmarkById() {\n       //...\n   }\n}\nThe PostgreSQLContainer bean definition and the @ServiceConnection annotation defined in TestcontainersConfiguration will take care of spinning up a PostgreSQL database container and configure the application to connect to that database.\nTesting Spring Boot REST APIs\nWhile slice tests are valuable, integration tests with real dependencies, like databases and message brokers, are crucial for verifying overall system behavior.\nSimilar to how we used Testcontainers to test Spring Data JPA repositories, you can write integration tests with the @SpringBootTest annotation and use Testcontainers to spin up the dependencies required by your application.\nIn the bookmarks application, there is the GET /api/bookmarks API endpoint, which returns all the bookmarks ordered from newest to oldest.\nLet’s write an integration test to test this endpoint:\npackage com.jetbrains.bookmarks;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.boot.test.web.client.TestRestTemplate;\nimport org.springframework.context.annotation.Import;\n\nimport static org.assertj.core.api.Assertions.assertThat;\nimport static org.springframework.boot.test.context.SpringBootTest.WebEnvironment.RANDOM_PORT;\n\n@SpringBootTest(webEnvironment = RANDOM_PORT)\n@Import(TestcontainersConfiguration.class)\nclass BookmarkControllerTest {\n\n   @Autowired\n   private TestRestTemplate restTemplate;\n\n   @Autowired\n   private BookmarkRepository bookmarkRepository;\n\n   @BeforeEach\n   void setUp() {\n       bookmarkRepository.deleteAllInBatch();\n   }\n\n   @Test\n   void shouldGetAllBookmarks() {\n       bookmarkRepository.save(new Bookmark(\"JetBrains Blog\",\"https://blog.jetbrains.com\"));\n       bookmarkRepository.save(new Bookmark(\"IntelliJ IDEA Blog\",\"https://blog.jetbrains.com/idea/\"));\n\n       Bookmark[] bookmarks = restTemplate.getForObject(\"/api/bookmarks\", Bookmark[].class);\n\n       assertThat(bookmarks.length).isEqualTo(2);\n       assertThat(bookmarks[0].getTitle()).isEqualTo(\"IntelliJ IDEA Blog\");\n       assertThat(bookmarks[1].getTitle()).isEqualTo(\"JetBrains Blog\");\n   }\n}\nWe used the @SpringBootTest annotation, which loads the entire application context and is configured to start the server on a random available port on the host machine. We also imported the TestcontainersConfiguration class so that the required dependencies (in our case, PostgreSQL) are provisioned using Testcontainers. We then autowired TestRestTemplate to make calls to our API endpoints. We also deleted all existing bookmarks before running tests using the setUp() JUnit callback method, so we have fresh data for each test run.\nIn the test case, we saved two new bookmarks and fetched them, invoking the GET /api/bookmarks endpoint, and asserting the expected results.\nYou can find the complete code here.\nConclusion\nTestcontainers helps you test applications using real dependencies instead of relying on mock objects or in-memory alternatives, giving you more confidence in your test suite and your application’s behavior. Additionally, Spring Boot’s out-of-the-box support for Testcontainers makes it even easier to write integration tests.\nSpring Boot’s @ServiceConnection support is available for the most commonly used technologies. Even if there is no direct support provided by Spring Boot, you can use the Testcontainers GenericContainer abstraction to work with any containerized dependency. You can find more information about Testcontainers and its features here.",
        "dc:creator": "Siva Katamreddy",
        "content": "Testing is a crucial part of software development, verifying that a system functions as intended. Developers create unit tests to validate the behavior of individual components, isolating them from external dependencies such as file systems, databases, message brokers, and third-party APIs. However, since many applications rely on these external components, developers write integration tests to [&#8230;]",
        "contentSnippet": "Testing is a crucial part of software development, verifying that a system functions as intended. Developers create unit tests to validate the behavior of individual components, isolating them from external dependencies such as file systems, databases, message brokers, and third-party APIs. However, since many applications rely on these external components, developers write integration tests to […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=533539",
        "categories": [
          "idea",
          "java",
          "testing",
          "tutorials",
          "intellij-idea",
          "spring-data-jpa",
          "springboot",
          "testcontainers-2"
        ],
        "isoDate": "2024-12-16T14:50:37.000Z"
      },
      {
        "creator": "Stanislav Garkusha",
        "title": "7 Reasons You Should Use dbt Core in PyCharm",
        "link": "https://blog.jetbrains.com/pycharm/2024/12/dbt/",
        "pubDate": "Mon, 16 Dec 2024 12:58:55 +0000",
        "content:encodedSnippet": "dbt Core is a modern data transformation framework. It doesn’t extract or load data and is only responsible for the T in the ELT (extract-load-transform) process. dbt connects to your data warehouse and helps you prepare your data so it can later be used to answer business questions.\nIn this blog post, we’ll talk about the top benefits of dbt and the advantages of using it in PyCharm Professional. To make the most of these features, you should be familiar with the framework. If you know SQL well, you’ll likely find it easy to use, and if you are a total novice in the field, you can use the dbt portal to get acquainted with it.\nWhy you should use dbt\nModularity and code reusability – Transformations can be saved into modular, reusable models. For instance, in this example the model int_count_customer.sql has a reference to stg_day_customer.sql and reuses its code.\n\n\n\n\n\nVersioning – dbt projects can be stored in version control systems like Git or GitHub. This allows you to track changes, collaborate with other team members, and maintain a record of all transformations.\n\n\n\n\n\nTesting – dbt allows you to write tests for your data models easily and check whether the data has any duplicates or null values. Additionally, you can even create specific rules to test against, and you can perform tests on both the model and the project levels.\n\n\n\n\n\nDocumentation – dbt auto-generates documentation for data models, ensuring that team members and stakeholders all understand the data lineage and model definitions in the same way.\n\n\n\n\nTo summarize, dbt brings best practices in engineering to the field of data analysis, allowing you to produce higher-quality results while providing you with a straightforward and intuitive workflow.\nThese benefits are just the tip of the iceberg when it comes to what the tool can do.\nHow PyCharm streamlines your dbt workflow\nHaving established the benefits of dbt, we can now turn to the 7 key reasons to use it in PyCharm:\n1. User-friendly onboarding – PyCharm streamlines the initial setup. As demonstrated in this video, setting up a project and configuring the necessary settings is straightforward. \n\n\n\n\n2. Unified workspace for databases and dbt – PyCharm’s integrated database plugin powered by JetBrains DataGrip makes handling SQL databases significantly easier. Since it’s compatible with all databases that dbt works with, you don’t have to worry about juggling multiple tools. You can focus on data modeling and instantly view outcomes all in one place. To cover even a small number of the plugin’s features would take hours, but luckily we have a nice set of webinars dedicated to PyCharm’s functionality for databases:  Visual SQL Development with PyCharm.\n\n\n\n\n3. Git and dbt integration – In one interface, you can easily clone the repo, track any changes, manage branches, resolve conflicts, and collaborate with teammates.\n\n\n\n\n4. Autocompletion for your .yml  and jinja-template SQL files – People love using PyCharm because of its smart autocompletion, which it, of course, offers for dbt as well.\n\n\n\n\n5. Local history –This feature lets you undo recent changes if they cause problems. You can also compare different versions to see what was changed and check whether updates were made correctly.\n\n\n\n\n6. AI Assistant – AI Assistant is really helpful, especially if you’re just starting with dbt Core. It is context-aware, and in addition to having it answer your questions in the AI chat, you can have it generate code and fix problems for you, streamlining your work with data models. It also saves you from worrying about what to write in commit messages by composing them for you.\n\n\n\n\n7. Project navigation – PyCharm excels in project navigation, offering features like fast search functionality and the Go to Declaration feature, both of which allow you to navigate through your dbt models effortlessly.\n\n\n\n\nThat’s just a glimpse of the benefits PyCharm already offers for dbt, and our support is still in its early stages. We invite you to test it out and share your insights. Whether you have suggestions for features or want to let us know about areas for improvement, we’re eager to hear from you. \nGet started with PyCharm by using the promo code dbt-PyCharm to get a 3-month free trial.\nRedeem your code\n                                                    \nWant to learn how to use dbt in PyCharm? Head to the documentation page to learn more about the IDE’s dbt support.\nEager to learn more about dbt in general? Take a look at this post on the experience of using dbt and this analysis of deeper dbt concepts by Pavel Finkelshteyn.",
        "dc:creator": "Stanislav Garkusha",
        "content": "dbt Core is a modern data transformation framework. It doesn&#8217;t extract or load data and is only responsible for the T in the ELT (extract-load-transform) process. dbt connects to your data warehouse and helps you prepare your data so it can later be used to answer business questions. In this blog post, we&#8217;ll talk about [&#8230;]",
        "contentSnippet": "dbt Core is a modern data transformation framework. It doesn’t extract or load data and is only responsible for the T in the ELT (extract-load-transform) process. dbt connects to your data warehouse and helps you prepare your data so it can later be used to answer business questions. In this blog post, we’ll talk about […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=535013",
        "categories": [
          "data-science",
          "how-tos",
          "dbt"
        ],
        "isoDate": "2024-12-16T12:58:55.000Z"
      },
      {
        "creator": "Vitaly Bragilevsky",
        "title": "Getting Started With the JetBrains Bazel Plugin",
        "link": "https://blog.jetbrains.com/idea/2024/12/getting-started-with-the-jetbrains-bazel-plugin/",
        "pubDate": "Fri, 13 Dec 2024 09:42:02 +0000",
        "content:encodedSnippet": "Large Bazel projects are becoming increasingly common in modern software development. Unfortunately, the IDE experience for these projects often leaves much to be desired. In this blog post, we’ll explore the new JetBrains Bazel plugin and how it can enhance your daily work with Bazel projects. We’ll begin with an overview of what Bazel users typically expect from IDEs and then dive into the features you can start using right away.\nBazel in your IDE\nBazel is a fast, scalable, and extensible build and test system that helps you manage complex codebases efficiently. It works with multi-language projects, offering support for C++, Java, Kotlin, Python, Rust, and other languages, and ensures consistent, reproducible builds across environments. With incremental build capabilities that recompile only what’s necessary and rich caching and parallel execution features, Bazel significantly enhances performance. Designed with extensibility in mind, it allows you to define custom build rules and scales seamlessly for monorepos and large-scale projects.\nWhen it comes to Bazel support in IDEs, a variety of features are essential for streamlining workflows and boosting productivity. Seamless integration with Bazel configuration files (such as BUILD, MODULE.bazel, and WORKSPACE files) is a key requirement, with crucial support including syntax highlighting, code completion, and error checking to simplify the creation and maintenance of build rules. IDEs should also manage dependencies intelligently, automatically resolving them to ensure accurate project structures and robust code navigation, refactoring, and search capabilities.\nIncremental build execution is another critical feature, enabling you to trigger and monitor Bazel builds directly from the IDE while leveraging performance-oriented features such as incremental compilation. Integrated test support is equally important, allowing developers to run and debug Bazel tests with tools like breakpoints and test filters. For multi-language projects, IDEs must handle cross-language dependencies effectively to ensure a smooth workflow.\nSupport for custom Bazel rules and plugins is extremely valuable, as it lets developers tailor the build process without sacrificing IDE functionality. Efficient indexing and caching are also essential for maintaining responsiveness, especially in large monorepos or with complex configurations. Finally, seamless integration with complementary tools like debuggers and profilers creates a cohesive and efficient development environment. These capabilities allow you to focus on writing code while Bazel manages the complexities of builds and dependencies.\nIntroducing our sample project\nTo demonstrate the features available in the JetBrains Bazel plugin and help you get started with it, we’ll take a look at the CLI implementation of an oversimplified calculator. Despite its simplicity, this calculator has evolved over years of development into a large monorepo with an advanced architecture, containing six packages implemented in Java and Kotlin – the languages the plugin currently supports:\n\n\n\n\nFrom this diagram, you can see that some packages are nested while others are on the first level. The calc_core package serves as the foundation, with every other package in the project depending on it. Some packages, such as kotlin-div and kotlin-sub, can be developed independently of others, but they still require a dependency on calc_core. The developer of kotlin-div has also provided JUnit 5 tests that can be executed using Bazel. Tests for calc_add, on the other hand, are generated by Bazel.\nFor this project, we use the Bzlmod approach. The Bazel-related files are located within the project as follows:\n.\n├── .bazelrc\n├── BUILD\n├── MODULE.bazel\n├── calc_cli\n│   ├── BUILD\n│   ├── rules.bzl\n│   └── src\n├── calc_core\n│   ├── BUILD\n│   ├── operations\n│   │   ├── addition\n│   │   │   ├── BUILD\n│   │   │   ├── gen_tests.bzl\n│   │   │   └── src\n│   │   └── multiplication\n│   │   \t├── BUILD\n│   │   \t└── src\n│   └── src\n├── calc_div\n│   ├── BUILD\n│   └── src\n└── calc_sub\n    ├── BUILD\n    └── src\n\n\n\n\nNote that we have MODULE.bazel (which defines the whole Bazel repository), a collection of BUILD files defining various targets, and files with rule definitions (*.bzl) here and there. \nWorking with a Bazel project in IntelliJ IDEA\nLet’s install the JetBrains Bazel plugin and see how it can assist by exploring the most common workflows in Bazel projects.\nOpening the project: Exploring the structure and project views\nWhen we first open our Bazel project in IntelliJ IDEA, the Bazel plugin works with both Bazel and IDE to map Bazel packages onto IntelliJ IDEA’s workspace model. The JetBrains Bazel plugin aims to minimize the time required for the initial sync by waiting until a later stage to load all dependencies and metadata.\nHere’s what we get as a result:\n\n\n\n\nIntelliJ IDEA’s ability to properly recognize the project structure significantly enhances its performance for routine tasks like code completion and navigation. Several tools are available to help us examine the structure, including the Project tool window’s Packages view and the Bazel tool window:\n\n\n\n\nThe Bazel tool window gives us access to the project-wide operations (such as resyncing, building, and configuring) and lists all the Bazel targets discovered during the latest sync. At some point, we might be interested in a subset of targets, for example tests, or in filtering targets by name:\n\n\n\n\nThe filtered target view can be plain or hierarchical, and when searching through targets, we can use case-sensitive prompts or regular expressions. \nEven with the improved mapping of Bazel projects onto the IntelliJ IDEA workspace, very large projects might be too big for IDE support. For those cases, we support project views, special configuration files that restrict the area for which the IDE is responsible. \nWhen you open a Bazel project without .bazelproject files, the JetBrains Bazel plugin creates a default view in the .bazelbsp  directory. Alternatively, you can create one yourself, for example, projectview.bazelproject:\nderive_targets_from_directories: true\ndirectories: .\nHere, we include all the project’s directories and derive all the targets from them.\nFor another example, with the following div-dev.bazelproject file, we can create a project view that provides support to only the directories needed for developers working on a Kotlin library that implements a division operation for our calculator:\nderive_targets_from_directories: true\ndirectories:\n  calc_div\n  calc_core\n  -calc_core/operations\nThese declarations mean that we include only two directories: calc_div and calc_core (excluding everything below calc_core/operations). Setting derive_targets_from_directories to true instructs the plugin also to include all the targets found in the specified directories. \nLet’s put the div-dev.bazelproject file in the root folder of the project and execute the Load Project View action:\n\n\n\n\nAs a result, the following subset of targets becomes available in the project, while the previous subset becomes unavailable:\n\n\n\n\nReducing IDE support for packages outside the project view in this way should improve performance. \nIn general, you can have more than one project view file in the root folder of your project. The one that is currently in effect is highlighted in the Project tool window:\n\n\n\n\nTo get back to the full project, we can load the default .bazelbsp/.bazelproject file or the  projectview.bazelproject file we created earlier. Switching between project views may take some time because it requires resyncing the whole project.\nEditing, building, running, debugging, and testing\nOnce IntelliJ IDEA has loaded all the information from the Bazel configuration, we can use the IDE as usual. Among other things, project configuration makes it possible to provide a smoother code editing experience, as the IDE is aware of available libraries, provides meaningful completion suggestions, and supports navigation through the codebase:\n\n\n\n\nWe can also use Bazel to run or debug an application or test:\n\n\n\n\n\n\n\n\nAnother option is to run a test from the Bazel tool window:\n\n\n\n\nFrom the Bazel tool window, we can also initiate a build for a particular target or jump to the corresponding BUILD file to tweak any configuration options:\n\n\n\n\nReconfiguring or extending the project\nChanges in Bazel configuration files might require the project to be resynced with IntelliJ IDEA. The plugin detects such changes and suggests syncing with the IDE:\n\n\n\n\nAdding files or packages to our repository is also detected and requires syncing for IntelliJ IDEA to work correctly. \nWorking with Starlark code\nThe JetBrains Bazel plugin also provides code completion, navigation, and debugging support for Starlark code. \nIn the following two screenshots, we change the name of tests generated for the addition operation, set a breakpoint, and launch a Starlark debugging session. Once we’re suspended on the breakpoint, we can inspect the available variables, and then we can continue the debugging session by using Step Into or Step Over or resuming execution. \n\n\n\n\n\n\n\n\nWhen debugging Starlark code, it’s always helpful to remember that Bazel checks if there are any changes since the last time the code was executed. Before we can start debugging, we need to have changed something in the corresponding files. \nConclusion\nIn this blog post, we’ve reviewed how the JetBrains Bazel plugin integrates Bazel projects into IntelliJ IDEA, covering everything from project setup to debugging Starlark code. The plugin provides tools to help manage large and complex codebases, such as project views, target filtering, and incremental builds.\nThese features aim to simplify working with Bazel projects by improving navigation, build management, and test execution within the IDE. While it may require some initial setup, the plugin can make handling Bazel configurations and workflows more straightforward over time. If you’re working with Bazel, check out the plugin to see how it can complement your development process.",
        "dc:creator": "Vitaly Bragilevsky",
        "content": "Large Bazel projects are becoming increasingly common in modern software development. Unfortunately, the IDE experience for these projects often leaves much to be desired. In this blog post, we’ll explore the new JetBrains Bazel plugin and how it can enhance your daily work with Bazel projects. We’ll begin with an overview of what Bazel users [&#8230;]",
        "contentSnippet": "Large Bazel projects are becoming increasingly common in modern software development. Unfortunately, the IDE experience for these projects often leaves much to be desired. In this blog post, we’ll explore the new JetBrains Bazel plugin and how it can enhance your daily work with Bazel projects. We’ll begin with an overview of what Bazel users […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=534477",
        "categories": [
          "news",
          "tutorials",
          "bazel",
          "intellij-idea"
        ],
        "isoDate": "2024-12-13T09:42:02.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": [
      {
        "creator": "Malay Haldar",
        "title": "Improving Search Ranking for Maps",
        "link": "https://medium.com/airbnb-engineering/improving-search-ranking-for-maps-13b03f2c2cca?source=rss----53c7c27702d5---4",
        "pubDate": "Wed, 18 Dec 2024 18:02:37 GMT",
        "content:encodedSnippet": "How Airbnb is adapting ranking for our map interface.\n\nMalay Haldar, Hongwei Zhang, Kedar Bellare Sherry Chen\nSearch is the core mechanism that connects guests with Hosts at Airbnb. Results from a guest’s search for listings are displayed through two interfaces: (1) as a list of rectangular cards that contain the listing image, price, rating, and other details on it, referred to as list-results and (2) as oval pins on a map showing the listing price, called map-results. Since its inception, the core of the ranking algorithm that powered both these interfaces was the same — ordering listings by their booking probabilities and selecting the top listings for display.\nBut some of the basic assumptions underlying ranking, built for a world where search results are presented as lists, simply break down for maps.\nWhat Is Different About Maps?\nThe central concept that drives ranking for list-results is that user attention decays starting from the top of the list, going down towards the bottom. A plot of rank vs click-through rates in Figure 1 illustrates this concept. X-axis represents the rank of listings in search results. Y-axis represents the click-through rate (CTR) for listings at the particular rank.\nFigure 1: Click-through rates by listing search rank\nTo maximize the connections between guests and Hosts, the ranking algorithm sorts listings by their booking probabilities based on a number of factors and sequentially assigns their position in the list-results. This often means that the larger a listing’s booking probability, the more attention it receives from searchers.\nBut in map-results, listings are scattered as pins over an area (see Figure 2). There is no ranked list, and there is no decay of user attention by ranking position. Therefore, for listings that are shown on the map, the strategy of sorting by booking probabilities is no longer applicable.\nFigure 2: Map results\nUniform User Attention\nTo adapt ranking to the map interface, we look at new ways of modeling user attention flow across a map. We start with the most straightforward assumption that user attention is spread equally across the map pins. User attention is a very precious commodity and most searchers only click through a few map pins (see Figure 3). A large number of pins on the map means those limited clicks may miss discovering the best options available. Conversely, limiting the number of pins to the topmost choices increases the probability of the searcher finding something suitable, but runs the risk of removing their preferred choice.\nFigure 3: Number of distinct map pins clicked by percentage of searchers\nWe test this hypothesis, controlled by a parameter . The parameter serves as an upper bound on the ratio of the highest booking probability vs the lowest booking probability when selecting the map pins. The bounds set by the parameter controls the booking probability of the listings behind the map pins. The more restricted the bounds, the higher the average booking probability of the listings presented as map pins. Figure 4 summarizes the results from A/B testing a range of parameters.\nThe reduction in the average impressions to discovery metric in Figure 4 denotes the fewer number of map pins a searcher has to process before clicking the listing that they eventually book. Similarly, the reduction in average clicks to discovery shows the fewer number of map pins a searcher has to click through to find the listing they booked.\nFigure 4: Exploring through online A/B experiments\nLaunching the restricted version resulted in one of the largest bookings improvement in Airbnb ranking history. More importantly, the gains were not only for bookings, but for quality bookings. This could be seen by the increase in trips that resulted in 5-star rating after the stay from the treatment group, in comparison to trips from the control group.\nTiered User Attention\nIn our next iteration of modeling user attention, we separate the map pins into two tiers. The listings with the highest booking probabilities are displayed as regular oval pins with price. Listings with comparatively lower booking probabilities are displayed as smaller ovals without price, referred to as mini-pins (Figure 5). By design, mini-pins draw less user attention, with click-through rates about 8x less than regular pins.\nFigure 5: Oval pins with price and mini-pins\nThis comes in handy particularly for searches on desktop where 18 results are shown in a grid on the left, each of them requiring a map pin on the right (Figure 6).\nFigure 6: Search results on desktop\nThe number of map pins is fixed in this case, and limiting them, as we did in the previous section, is not an option. Creating the two tiers prioritizes user attention towards the map pins with the highest probabilities of getting booked. Figure 7 shows the results of testing the idea through an online A/B experiment.\nFigure 7: Experiment results for tiered map pins\nDiscounted User Attention\nIn our final iteration, we refine our understanding of how user attention is distributed over the map by plotting the click-through rate of map pins located at different coordinates on the map. Figure 8 shows these plots for the mobile (top) and the desktop apps (bottom).\nFigure 8: Click-through rates of map pins across map coordinates.\nTo maximize the chances that a searcher will discover the listings with the highest booking probabilities, we design an algorithm that re-centers the map such that the listings with the highest booking probabilities appear closer to the center. The steps of this algorithm are illustrated in Figure 9, where a range of potential coordinates are evaluated and the one which is closer to the listings with the highest booking probabilities is chosen as the new center.\nFigure 9: Algorithm for finding optimal center\nWhen tested in an online A/B experiment, the algorithm improved uncancelled bookings by 0.27%. We also observed a reduction of 1.5% in map moves, indicating less effort from the searchers to use the map.\nConclusion\nUsers interact with maps in a way that’s fundamentally different from interacting with items in a list. By modeling the user interaction with maps in a progressively sophisticated manner, we were able to improve the user experience for guests in the real world. However, the current approach has a challenge that remains unsolved: how can we represent the full range of available listings on the map? This is part of our future work. A more in-depth discussion of the topics covered here, along with technical details, is presented in our research paper that was published at the KDD ’24 conference. We welcome all feedback and suggestions.\nIf this type of work interests you, we encourage you to apply for an open position today.\n\nImproving Search Ranking for Maps was originally published in The Airbnb Tech Blog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Malay Haldar",
        "guid": "https://medium.com/p/13b03f2c2cca",
        "categories": [
          "machine-learning",
          "data-science",
          "engineering",
          "artificial-intelligence",
          "technology"
        ],
        "isoDate": "2024-12-18T18:02:37.000Z"
      },
      {
        "creator": "Huiji Gao",
        "title": "Airbnb at KDD 2024",
        "link": "https://medium.com/airbnb-engineering/airbnb-at-kdd-2024-d5c2fa81a119?source=rss----53c7c27702d5---4",
        "pubDate": "Tue, 17 Dec 2024 18:02:43 GMT",
        "content:encodedSnippet": "Airbnb had a large presence at the 2024 KDD conference hosted in Barcelona, Spain. Our Data Scientist and Engineers presented on topics like Deep Learning & Search Ranking, Online Experimentation & Measurement, Product Quality & Customer Journey, and Two-sided Marketplaces. This blog post summarizes our contributions to KDD for 2024 and provides access to the academic papers presented during the conference.\n\nAuthors: Huiji Gao, Peter Coles, Carolina Barcenas, Sanjeev Katariya\nKDD (Knowledge and Data Mining) is one of the most prestigious global conferences in data mining and machine learning. Hosted annually by a special interest group of the Association for Computing Machinery (ACM), it’s where attendees learn about some of the most ground-breaking AI developments in data mining, machine learning, knowledge discovery, and large-scale data analytics.\nThis year, the 30th KDD conference was held at Barcelona, Spain, attracting thousands of researchers and scientists from academia and industry. Various companies contributed to and attended the conference including Google, Meta, Apple, Amazon, Airbnb, Pinterest, LinkedIn, Booking, Expedia, ByteDance etc. There were 151 Applied Data Science (ADS) track papers and 411 Research track papers accepted, 34 tutorials, and 30 workshops.\nAirbnb had a significant presence at KDD 2024 with three full ADS track papers (acceptance rate under 20%), one workshop, and seven workshop papers and invited talks accepted into the main conference proceedings. The topics of our work spanned Deep learning & Search Ranking, Online Experimentation & Measurement, Causal Inference & Machine Learning, and Two-sided Marketplaces.\nIn this blog post, we will summarize our teams’ contributions and share highlights from an exciting week-long conference with research and industry talks, workshops, panel discussions, and more.\nDeep Learning and Search Ranking\nIntelligent search ranking — the process of accurately matching a guest with a listing based on their preference, a listing’s features, and additional search context — still remains a nuanced challenge that researchers are constantly trying to solve.\nMaking optimal guest-host matches has remained an issue in a two-sided marketplace for a variety of reasons — the timespan of guest searches (ranging between days and weeks), unpredictable host behavior and ratings (the potential for hosts to cancel a booking or receive low ratings), and limited understanding of guest preference across multiple interfaces. We published several papers addressing the issue of search ranking as part of our presence at KDD.\nLearning to Rank for Maps at Airbnb\nAirbnb brings together hosts who rent listings to prospective guests from around the globe. Results from a guest’s search for listings are displayed primarily through two interfaces: (1) as a list of rectangular cards that contain on them the listing image, price, rating, and other details, referred to as list-results, and (2) as oval pins on a map showing the listing price, called map-results. Both these interfaces, since their inception, have used the same ranking algorithm that orders listings by their booking probabilities and selects the top listings for display.\nHowever, some of the basic assumptions underlying ranking are built for a world where search results are presented as lists and simply break down for map-results. In this work, we rebuilt ranking for maps by revising the mathematical foundations of how users interact with map search results. Our iterative and experiment-driven approach led us through a path full of twists and turns, ending in a unified theory for the two interfaces.\nOur journey shows how assumptions taken for granted when designing machine learning algorithms may not apply equally across all user interfaces, and how they can be adapted. The net impact was one of the largest improvements in user experience for Airbnb which we discuss as a series of experimental validations. The work introduced in this paper is merely the beginning of future exciting research projects, such as making learning to rank unbiased for map-results and demarcating the map pins to direct the user attention towards more relevant ones.\nMulti-objective Learning to Rank by Model Distillation\nIn online marketplaces, the objective of search ranking is not only on optimizing purchasing or conversion rate (primary objective), but also the purchase outcomes (secondary objectives), e.g. order cancellation, review rating, customer service inquiries, platform long term growth. To balance these primary and secondary objectives, several multi-objective learning to rank approaches have been widely studied\nTraditional approaches in industrial search and recommender systems encounter challenges such as expensive parameter tuning that leads to sub-optimal solutions, suffering from imbalanced data sparsity issues, and lack of compatibility with ad-hoc objectives. In this work, we propose a distillation-based ranking solution for multi-objective ranking, which optimizes the end-to-end ranking system at Airbnb across multiple ranking models on different objectives, along with various considerations to optimize training and serving efficiency that meets industry standards.\nCompared with traditional approaches, the proposed solution not only significantly meets and increases the primary objective of conversion by a large margin, but also addresses the secondary objective constraints while improving model stability. Furthermore, we demonstrated the proposed system could be further simplified by model self-distillation. We also did additional simulations to show that this approach could help us efficiently inject ad-hoc non-differentiable business objectives into the ranking system, while enabling us to balance our optimization objectives.\nOnline Experimentation and Measurement\nOnline experimentation (e.g., A/B testing) is a common way for organizations like Airbnb to make data-driven decisions. But high variance is frequently a challenge. For example, it’s hard to prove that a change in our search UX will drive value because bookings can be infrequent and depend on a large number of interactions over a long period of time.\nMetric Decomposition in A/B Tests\nMore than a decade ago, CUPED (Controlled Experiments Utilizing Pre-Experiment Data) mainstreamed the idea of variance reduction leveraging pre-experiment covariates. Since its introduction, it has been implemented, extended, and modernized by major online experimentation platforms. Despite the wide adoption, it is known by practitioners that the variance reduction rate from CUPED, utilizing pre-experimental data, varies case by case and has a theoretical limit. In theory, CUPED can be extended to augment a treatment effect estimator utilizing in-experiment data, but practical guidance on how to construct such an augmentation is lacking.\nIn this work, we fill this gap by proposing a new direction for sensitivity improvement via treatment effect augmentation, whereby a target metric of interest is decomposed into\ntwo or more components in an attempt to isolate those with high signal and low noise from those with low signal and high noise. We show through theory, simulation, and empirical examples that if such a decomposition exists (or can be engineered), sensitivity may be increased via approximately null augmentation (in a frequentist setting) and reduced posterior variance (in a Bayesian setting).\nWe provide three real world applications demonstrating different flavors of metric decomposition. These applications illustrate the gain in agility metric decomposition yields relative to an un-decomposed analysis, indicating both empirically and theoretically the value of this practice in both frequentist and Bayesian settings. An important extension to this work would be to next consider sample size determination in both the frequentist or Bayesian contexts; while a boost in sensitivity typically means less data is required for a given analysis, a methodology that determines the smallest sample size required to control various operating characteristics in this context would be of practical value.\nTwo-sided Marketplace Optimization\nAirbnb employees hosted a workshop on Two-sided Marketplace Optimization: Search, Pricing, Matching & Growth. This workshop brought practitioners of two-sided marketplaces together and discussed the evolution of content ranking, recommendation systems, and data mining when solving for producers and consumers on these platforms.\nTwo-sided marketplaces have recently emerged as viable business models for many real-world applications. They model transactions as a network with two distinct types of participants: one type to represent the supply and another the demand of a specific good. Traditionally, research related to online marketplaces focused on how to better satisfy demand. But with two-sided marketplaces, there is more nuance at play. Modern global examples, like Airbnb, operate platforms where users provide services; users may be hosts,or guests. Such platforms must develop models that address all their users’ needs and goals at scale. Machine learning-powered methods and algorithms are essential in every aspect of such complex, internet-scale-sized, two-sided marketplaces.\nAirbnb is a community based on connection and belonging–we strive to connect people and places. Our contributions to this workshop showcase the work we’re doing to support this mission by optimizing guest experiences, finding equilibrium spots for listing prices, reducing the incidence of poor interactions (and customer support costs as a side effect), detecting when operational staff should follow up on activity at scale, and more.\nGuest Intention Modeling for Personalization\nAirbnb has transformed the way people travel by offering unique and personalized stays in destinations worldwide. To provide a seamless and tailored experience, understanding user intent plays an important role.\nHowever, limited user data and unpredictable guest behavior can make it difficult to understand the essential intent from guests on listings from hosts. Our work shows how we approach this challenging problem. We describe how we apply a deep learning approach to predict difficult-to-infer details for a user’s travel plan, such as the next destination and travel dates. The framework analyzes high-level information from users’ in-app browsing history, booking history, search queries, and other engagement signals, and produces multiple user intent signals.\n\nMarketing emails, flexible travel search (e.g., for “Europe in the summer”), and recommendations on the app home page are three guest interactions that benefit from correct intention modeling. Hosts also benefit, since a clear understanding of guest demand can help them optimize listings to increase satisfaction and bookings.\nGuest Demand Understanding\nHosts can find it difficult to correctly price their listings in two-sided marketplaces serviced by end users. Most hosts are not professional hospitality workers, and would benefit from access to data and advice on how guests see their listings and how they compare to other listings in their neighborhood. We constantly look for ways to give guidance on how hosts can optimally price their listings. The same information can then be used to help guests find their ideal stay.\nIn our paper, we presented an example of how this problem can be solved in general.\n\nAs illustrated above, both demand and supply change over time, influencing the equilibrium price for a property at a specific point. A historical optimum (such as A above) has to be adjusted to find the current optimum (point C). It is difficult to run experiments since any large-scale experiment we might run will cause the environment to change in complex ways. We tackle this problem by combining economic modeling with causal inference techniques. We segment guests and estimate how price-sensitive each guest segment is, and fine-tune them with empirical data from small targeted experiments and larger-scale natural ones, which are used to adjust estimates for the price sensitivity of each guest segment. Hosts can then use the models’ output to make informed tradeoffs between higher occupancy and higher nightly rates.\nListing Embedding for Host-side Products\nIn order to facilitate the matching of listings and guests, Airbnb provides numerous products and services to both hosts and guests. Many of these tools are based on the ability to compare listings, i.e. finding similar listings or listings that may be viewed as equivalent substitutes. Our work presents a study on the application and learning of listing embeddings in Airbnb’s two-sided marketplace. Specifically, we discuss the architecture and training of a neural network embedding model using guest side engagement data, which is then applied to host-side product surfaces. We address the key technical challenges we encountered, including the formulation of negative training examples, correction of training data sampling bias, and the scaling and speeding up training with the help of in-model caching. Additionally, we discuss our comprehensive approach to evaluation, which ranges from in-batch metrics and vocabulary-based evaluation to the properties of similar listings. Finally, we share our insights from utilizing listing embeddings in Airbnb products, such as host calendar similar listings.\nCustomer Support Optimization in Search Ranking\nAs of the date of the paper, Airbnb had more than 7.7 million listings from more than 5 million hosts worldwide. Airbnb is investing both in rapid growth and in making sure that the booking experience is pleasant for hosts and guests. It would, however, be ideal to avoid poor experiences in the first place. Our work highlights how we prevent poor experiences without significantly reducing growth.\nWe use the mass of accumulated support data at Airbnb to model the probability that, if the current user were to book a listing, they would require CS support. Our model discovered multiple features about the searcher, home, and hosts that accurately predict CS requirements. For example, same-day bookings tend to require more support, and a responsive host tends to reduce support needs. So, if a guest chooses a same-day booking, matching them with a highly responsive host can lead to a better experience overall. We incorporate the output of our CS support model in search result rankings; booked homes will sometimes rank lower if we predict a booking will lead to a negative experience.\nLLM Pretraining using Activity Logs\nIt’s often important to follow up with users after they’ve had a long series of interactions with a two-sided marketplace to help make sure that their experiences are of high quality. When user interactions meet certain business criteria, operations agents create tickets to follow up with them. For example, user retention and reactivation agents might review user activity logs and decide to follow up with the user, to encourage them to re-engage with the platform.\nWe propose transforming structured data (activity logs) into a more manageable text format and then leveraging modern language models (i.e., BERT) to pretrain a large language model based on user activities. We then performed fine-tuning on the model using historical data about which users were followed up with and checked its predictions. Our work demonstrates the large language model trained on pre-processed activity can successfully identify when a user should be followed up with, at an experimentally significant rate. Our preliminary results suggest that our framework may outperform by 80% the average precision of a similar model that was designed relying heavily on feature engineering.\nProduct Quality and Customer Journey Optimization\nTypically, product quality is evaluated based on structured data. Customer ratings, types of support issues, resolution times, and other factors are used as a proxy for how someone booking on Airbnb might value a listing. This kind of data has limitations — more popular listings have more data, often users don’t leave feedback, and feedback is usually biased towards the positive (users with negative experiences tend to churn and not give feedback).\nIn the Workshop on Causal Inference and Machine Learning in Practice, we highlighted an example of how we push the boundaries of product quality assessment techniques and applications, mixing traditional casual inference with cutting-edge machine learning research. In our work “Understanding Product Quality with Unstructured Data: An Application of LLMs and Embeddings at Airbnb”, we presented how an approach based on text embeddings and LLMs can be combined with approaches based on structured data to significantly improve product quality evaluations. We generate text embeddings on a mix of listing and review texts, then cluster the embeddings based on rebooking and churn rates. Once we have clear clusters, we extract keywords from the original data, and use these keywords to calculate a listing quality score, based on their similarity to the keyword list.\nIn addition, we were invited to give a talk on Quality Foundations at Airbnb, at KDD’s 3rd Workshop on End-End Customer Journey Optimization. It’s often hard to differentiate the quality of customer experiences using simple review ratings, in part due to the tightness of their distribution. In this talk, we present an alternative notion of quality based on customer revealed preference: did a customer return to use the platform again after their experience? We describe how a metric — Guest Return Propensity (GRP) — leverages this concept and can differentiate quality, capture platform externalities, and predict future returns.\nIn practice, this measure may not be suited to many common business use cases due to its lagging nature and an inability to easily explain why it has changed. We describe a quality measurement system that builds on the conceptual foundation of GRP by modeling it as an outcome of upstream realized quality signals. These signals — from sources like reviews and customer support — are weighted by their impact on return propensity and mapped to a quality taxonomy to aid in explainability. The resulting score is capable of finely differentiating the quality of customer experiences, aiding tradeoff decisions, and providing timely insights.\nConclusion\nThe 2024 edition of KDD was an amazing opportunity for data scientists and machine learning engineers from across the globe and industry, government, and academia, to connect and exchange learnings and discoveries. We were honored to have the opportunity to share some of our knowledge and techniques, generalizing what we have been learning when we apply machine learning to problems we see at Airbnb. We continue to focus on improving our customers’ experience and growing our business, and the information we’ve shared has been crucial to our success. We’re excited to continue learning from peers and contribute our work back to our community. We eagerly await advancements and improvements that might come about as others build upon the work we’ve shared.\nBelow, you’ll find a complete list of the talks and papers shared in this article along with the team members who contributed. If this type of work interests you, we encourage you to apply for an open position today.\nList of papers and talks\nLearning to Rank for Maps at Airbnb (link)\nAuthors: Malay Haldar, Hongwei Zhang, Kedar Bellare, Sherry Chen, Soumyadip Banerjee, Xiaotang Wang, Mustafa Abdool, Huiji Gao, Pavan Tapadia, Liwei He, Sanjeev Katariya\nMulti-objective Learning to Rank by Model Distillation (link)\nAuthors: Jie Tang, Huiji Gao, Liwei He, Sanjeev Katariya\nMetric Decomposition in A/B Tests (link)\nAuthors: Alex Deng (former employee at Airbnb), Luke Hagar (University of Waterloo), Nathaniel T. Stevens (University of Waterloo), Tatiana Xifara (Airbnb), Amit Gandhi (University of Pennsylvania)\nUnderstanding Guest Preferences and Optimizing Two-sided Marketplaces: Airbnb as an Example (link)\nAuthors: Yufei Wu, Daniel Schmierer\nPredicting Potential Customer Support Needs and Optimizing Search Ranking in a Two-Sided Marketplace (link)\nAuthors: Do-kyum Kim, Han Zhao, Huiji Gao, Liwei He, Malay Haldar, Sanjeev Katariya\n​​Understanding User Booking Intent at Airbnb (link)\nAuthors: Xiaowei Liu, Weiwei Guo, Jie Tang, Sherry Chen, Huiji Gao, Liwei He, Pavan Tapadia, Sanjeev Katariya\nCan Language Models Accelerate Prototyping for Non-Language Data? Classification & Summarization of Activity Logs as Text (link)\nAuthors: José González-Brenes\nLearning and Applying Airbnb Listing Embeddings in Two-Sided Marketplace (link)\nAuthors: Siarhei Bykau, Dekun Zou\nUnderstanding Product Quality with Unstructured Data: An Application of LLMs and Embeddings at Airbnb (link)\nAuthors: Jikun Zhu, Zhiying Gu, Brad Li, Linsha Chen\nInvited Talk: Quality Foundations at Airbnb\nSpeakers: Peter Coles, Mike Egesdal\n\nAirbnb at KDD 2024 was originally published in The Airbnb Tech Blog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Huiji Gao",
        "guid": "https://medium.com/p/d5c2fa81a119",
        "categories": [
          "machine-learning",
          "engineering",
          "deep-learning",
          "artificial-intelligence",
          "data-science"
        ],
        "isoDate": "2024-12-17T18:02:43.000Z"
      }
    ]
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Rhea Patel",
        "title": "GitHub Copilot Free is here in Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/github-copilot-free-is-here-in-visual-studio/",
        "pubDate": "Wed, 18 Dec 2024 18:14:49 +0000",
        "content:encodedSnippet": "If you haven’t already heard, GitHub just announced Copilot Free! And great news: you can already start using Copilot Free right now in Visual Studio. It’s available now, and we’re putting the finishing touches on a more streamlined experience in January.\nWe’re excited to bring these benefits to the entire Visual Studio family. With Copilot Free, you’ll have AI-powered tools right at your fingertips—smarter debugging, AI generated commit messages, AI-breakpoint placement, and of course, direct access to Completions, Chat, and much more. Developers have seen a 25% speed increase with Copilot—and now you can experience that boost firsthand in Visual Studio.\nReady to give it a try?\n Sign up for GitHub Copilot Free\n\nA couple of recommendations\nTry it now: Don’t wait to experience the benefits. Give GitHub Copilot Free a spin in Visual Studio today. Just note that for now, you won’t be notified when you hit your usage limit, but we’ve got you covered with updates coming in January.\nStay Updated: Keep your Visual Studio installation current and subscribe to the preview channels. By staying on the cutting edge, you’ll be among the first to enjoy the latest updates, ensuring you get the most out of Copilot Free as we roll out new features.\nLooking ahead to January\nCopilot Free will be even easier to use in Visual Studio. You’ll see clear indicators when you hit your usage limits—no more guesswork. And if you find yourself needing more, upgrading to a no-limits plan will be smooth and seamless, so you can keep your ideas flowing.\nKeep an eye on the latest previews for these updates, and don’t forget to share your feedback through Developer Community!\nThe post GitHub Copilot Free is here in Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "Rhea Patel",
        "content": "<p>If you haven’t already heard, GitHub just announced Copilot Free! And great news: you can already start using Copilot Free right now in Visual Studio. It&#8217;s available now, and we&#8217;re putting the finishing touches on a more streamlined experience in January. We’re excited to bring these benefits to the entire Visual Studio family. With Copilot [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/github-copilot-free-is-here-in-visual-studio/\">GitHub Copilot Free is here in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "If you haven’t already heard, GitHub just announced Copilot Free! And great news: you can already start using Copilot Free right now in Visual Studio. It’s available now, and we’re putting the finishing touches on a more streamlined experience in January. We’re excited to bring these benefits to the entire Visual Studio family. With Copilot […]\nThe post GitHub Copilot Free is here in Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251812",
        "categories": [
          "Copilot",
          "GitHub Copilot",
          "Visual Studio",
          "GitHub",
          "GitHub Copilot Chat"
        ],
        "isoDate": "2024-12-18T18:14:49.000Z"
      },
      {
        "creator": "Leah Tran",
        "title": "Refresh your Find results",
        "link": "https://devblogs.microsoft.com/visualstudio/refresh-your-find-results/",
        "pubDate": "Tue, 17 Dec 2024 13:00:35 +0000",
        "content:encodedSnippet": "Are you tired of having to repeatedly launch the Find window in Visual Studio to update your search results? Whether you’ve just refactored some code or pulled recent changes, having to redo a search to get updated results is no longer necessary. With the new refresh option, you can now update your Find results without the hassle of starting over.\n\nThe Refresh search results button in Visual Studio 2022 will save you time and effort when searching through your code.\nRefresh your previous Find\nNo more friction when updating your earlier Find results! After completing a Find, you can click the clockwise arrow icon to refresh the results instantly. This ensures all changes you’ve made since the last Find are reflected without having to reopen the Find window.\n\nModify Find to refine search parameters\nTo avoid confusion, we’ve also relabeled the former Repeat Find to Modify Find, now represented with a pencil icon.\nClicking Modify Find reopens Find in Files with your prior search criteria for that set of results, making it easier to refine your searches and get the results you need.\n\nConclusion\nWe are thrilled to bring you these improvements in Visual Studio 2022, aimed at making your development process more efficient and less cumbersome. Your continuous feedback helps us make Visual Studio even better, and we appreciate your ongoing support.\nThank you for being a valued user of Visual Studio. We look forward to hearing more about your experiences with the Refresh functionality in Find Results and are always open to your suggestions for further enhancements.\nThe post Refresh your Find results appeared first on Visual Studio Blog.",
        "dc:creator": "Leah Tran",
        "content": "<p>Are you tired of having to repeatedly launch the Find window in Visual Studio to update your search results? Whether you&#8217;ve just refactored some code or pulled recent changes, having to redo a search to get updated results is no longer necessary. With the new refresh option, you can now update your Find results without [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/refresh-your-find-results/\">Refresh your Find results</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Are you tired of having to repeatedly launch the Find window in Visual Studio to update your search results? Whether you’ve just refactored some code or pulled recent changes, having to redo a search to get updated results is no longer necessary. With the new refresh option, you can now update your Find results without […]\nThe post Refresh your Find results appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251787",
        "categories": [
          "Productivity",
          "Visual Studio",
          "Find",
          "Search"
        ],
        "isoDate": "2024-12-17T13:00:35.000Z"
      },
      {
        "creator": "Jessie Houghton",
        "title": "Create internal GitHub repos for your team",
        "link": "https://devblogs.microsoft.com/visualstudio/create-internal-github-repos-for-your-team/",
        "pubDate": "Mon, 16 Dec 2024 13:00:09 +0000",
        "content:encodedSnippet": "Visual Studio 2022 now includes support for creating internal repositories for GitHub organizations. This feature allows developers to work within their GitHub organization’s guidelines within the Visual Studio environment more effectively.\n\nManaging repositories involves configuring varying levels of visibility and permissions. Visual Studio 2022’s new feature aims to smooth this process by providing support for internal repositories, ensuring that developers can be aligned with their organization’s polices when they create new repositories.\nHow it works\nIn the Create a Git repository dialog, the visibility of your new repository now includes the new internal option if you’ve selected an account where internal repositories are available. Additionally, Visual Studio now offers detailed guidance for each type of repository. This guidance clarifies the visibility settings of new projects based on the account being used, helping developers ensure the correct setup of their repositories from the outset. If you try to create a repository with the wrong visibility, the action will fail, so that you don’t share your sourcecode with anyone you didn’t mean to.\nThis functionality reduces the need for leaving Visual Studio to create internal repositories from GitHub – an unfamiliar flow, allowing developers to focus more on coding and less on managing repository settings.\nContinuous improvement with your feedback\nThe feedback from Visual Studio users has been instrumental in developing these features. This continuous input helps enhance the functionality of Visual Studio, making it a more efficient tool for developers. Leave your thoughts on this feature here.\nThank you for your ongoing feedback, which continues to improve Visual Studio with every update.\nThe post Create internal GitHub repos for your team appeared first on Visual Studio Blog.",
        "dc:creator": "Jessie Houghton",
        "content": "<p>Visual Studio 2022 now includes support for creating internal repositories for GitHub organizations. This feature allows developers to work within their GitHub organization&#8217;s guidelines within the Visual Studio environment more effectively. Managing repositories involves configuring varying levels of visibility and permissions. Visual Studio 2022’s new feature aims to smooth this process by providing support for [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/create-internal-github-repos-for-your-team/\">Create internal GitHub repos for your team</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 2022 now includes support for creating internal repositories for GitHub organizations. This feature allows developers to work within their GitHub organization’s guidelines within the Visual Studio environment more effectively. Managing repositories involves configuring varying levels of visibility and permissions. Visual Studio 2022’s new feature aims to smooth this process by providing support for […]\nThe post Create internal GitHub repos for your team appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251783",
        "categories": [
          "Git",
          "Visual Studio",
          "GitHub"
        ],
        "isoDate": "2024-12-16T13:00:09.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": [
      {
        "creator": "고명환",
        "title": "2025년을 준비하는 스타트업을 위한 경영전략 - 스타트업",
        "link": "https://brunch.co.kr/@@LOc/240",
        "pubDate": "Thu, 19 Dec 2024 01:42:00 GMT",
        "author": "고명환",
        "content": "2025년에는 고환율과 경기불황 속에서 VC투자 또한 위축이 예상됩니다. 과거 유동성이 풍부했던 시장 환경과 다르게 면밀한 시장 분석에 따른 스타트업의 세부 전략이 요구되는 시기에 도래하였습니다. 2025년을 준비하는 스타트업의 입장에서는 조금이나마 도움이 되면 좋을 듯합니다.  1. 환경 분석 : 고환율 경기 불황 VC 투자 위축 대응 필요   2025년<img src= \"https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2FLOc%2Fimage%2FfmWhfsdViV-gw1SINmTzm_5rJEs.jpg\" width=\"500\" />",
        "contentSnippet": "2025년에는 고환율과 경기불황 속에서 VC투자 또한 위축이 예상됩니다. 과거 유동성이 풍부했던 시장 환경과 다르게 면밀한 시장 분석에 따른 스타트업의 세부 전략이 요구되는 시기에 도래하였습니다. 2025년을 준비하는 스타트업의 입장에서는 조금이나마 도움이 되면 좋을 듯합니다.  1. 환경 분석 : 고환율 경기 불황 VC 투자 위축 대응 필요   2025년",
        "guid": "https://brunch.co.kr/@@LOc/240",
        "isoDate": "2024-12-19T01:42:00.000Z"
      }
    ]
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": [
      {
        "creator": "bahamoth",
        "title": "macOS에서 특정 단축어를 누를 때만 들리는 beep음 없애기",
        "link": "https://01010011.blog/2024/12/16/weired-beep-on-macos/",
        "pubDate": "Mon, 16 Dec 2024 13:01:10 +0000",
        "content:encodedSnippet": "맥북을!! 샀다!! (!! m4!! pro!! max!! 64GB!! )\n새 맥북에 이전 맥북 설정을 마이그레이션하는 대신 처음부터 맥북을 세팅하기로 결정, 기존에 써보지 못했던 도구들도 하나 둘 알아가는 재미를 즐기고 있다.\n터미널 프로그램도 iterm2에서 다른걸 써보려고 Warp를 설치했는데 아주 만족도가 높다.\n그런데 황당한 문제가 발생했다. Split pane(Horizontal) 의 크기를 줄이려고 cmd + ctrl + ↓ 키를 눌렀더니,\n“삑”\nbeep음이 들리는 것이다.\ncmd + ctrl + ↓ cmd + ctrl + ↓\n“삑” “삑”\n희한하게도 cmd + ctrl + ↑ 키를 누를 때는 아무 소리가 나지 않았다.\nWarp 뭐야. 시끄럽게. 분할창 크기 조절을 얼마나 자주하는데 이러면 곤란하지. 안타깝지만 곧 나올 Ghostty 나오면 Warp는 폐기다.\n라고 생각하고 무심결에 같은 단축키(cmd + ctrl + ↓)를 vs code에서 눌러봤다.\n“삑”\n어라? vs code에서도 beep음이 나는데? chrome에서도?\n평소에 음소거 상태에서 맥북을 이용하기 때문에 & 저 단축키를 누를 일이 없어서 이런 거슬리는 소음 문제가 있다는걸 처음 알게 되었다.\n찾아보니 이 문제는 2019년도부터 Warp 터미널 뿐 아니라 다른 앱에서도 여러 차례 보고된 것으로, macOS에서 제대로 키바인딩 처리를 하지 못해 발생하는 것이 원인으로 추정된다. (링크: https://issues.chromium.org/issues/41432539#comment10)\n해결방법은 다음과 같다.\n~/Library/KeyBindings/DefaultKeyBinding.dict 파일을 생성하고 아래와 같이 설정, 어플리케이션을 재시작하면 beep음이 꺼진 것을 확인할 수 있다.\n{\n    \"@^\\UF701\" = \"noop:\";\n    \"@^\\UF702\" = \"noop:\";\n    \"@^\\UF703\" = \"noop:\";\n}",
        "dc:creator": "bahamoth",
        "comments": "https://01010011.blog/2024/12/16/weired-beep-on-macos/#respond",
        "content": "맥북을!! 샀다!! (!! m4!! pro!! max!! 64GB!! 🎉🎉🎉) 새 맥북에 이전 맥북 설정을 마이그레이션하는 대신 처음부터 맥북을 세팅하기로 결정, 기존에 써보지 못했던 도구들도 하나 둘 알아가는 재미를 즐기고 있다.터미널 프로그램도 iterm2에서 다른걸 써보려고 Warp를 설치했는데 아주 만족도가 높다. 그런데 황당한 문제가 발생했다. Split pane(Horizontal) 의 크기를 줄이려고 cmd + ctrl + ↓ 키를 눌렀더니, &#8220;삑&#8221; [&#8230;]",
        "contentSnippet": "맥북을!! 샀다!! (!! m4!! pro!! max!! 64GB!! 🎉🎉🎉) 새 맥북에 이전 맥북 설정을 마이그레이션하는 대신 처음부터 맥북을 세팅하기로 결정, 기존에 써보지 못했던 도구들도 하나 둘 알아가는 재미를 즐기고 있다.터미널 프로그램도 iterm2에서 다른걸 써보려고 Warp를 설치했는데 아주 만족도가 높다. 그런데 황당한 문제가 발생했다. Split pane(Horizontal) 의 크기를 줄이려고 cmd + ctrl + ↓ 키를 눌렀더니, “삑” […]",
        "guid": "https://01010011.blog/?p=2242",
        "categories": [
          "programming"
        ],
        "isoDate": "2024-12-16T13:01:10.000Z"
      }
    ]
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": [
      {
        "creator": "minieetea",
        "title": "27가지 PM의 고민과 답변",
        "link": "https://minieetea.com/woowacon-2024-pm-mentoring/",
        "pubDate": "Mon, 16 Dec 2024 14:00:49 GMT",
        "content:encodedSnippet": "💾\n안녕하세요, 우아콘 2024에서 진행된 PM 오픈형 멘토링 세션 발표 내용을 블로그에 공유하고자 합니다. 발표 전체 영상도 공개되어 있으니, 우아콘 홈페이지나 우아한테크 유튜브 채널에서 더 많은 이야기를 확인해 보세요! 😊\n\n멘토에 대해서 ▶️ 여기서부터 보기\n\n커리어 패스에서 어떤 고민을 가졌고, 어떤 결정을 했는지 궁금합니다.\n본인의 강점과 성장 방향성을 어떻게 정하셨나요?\nPM으로서 역할과 PM팀의 리더(매니저)로서의 역할은 어떻게 다른가요?\n스스로를 어떤 PM으로 정의하시나요?\n\n역량에 대해서 ▶️ 여기서부터 보기\n\n함께 일하고 싶은 PM은 어떤 사람인가요?\n신입 PM이 갖춰야 할 역량과 태도는 무엇인가요?\n중니어~시니어 사이 연차에서 꼭 경험해봐야 할 것들은 무엇인가요?\n7~8년 차 팀원들에게 리더로서 어떤 부분들을 기대하시나요?\n10년 차 PM은 어떤 부분에 더 집중해야 할까요?\nPM으로서 어디까지의 하드스킬이 필수적(should have)이고, 선택적(good to have) 인가요?\n\n이직에 대해서 ▶️ 여기서부터 보기\n\n개발자에서 PM으로 직무 전환을 하려고 하는데 어떤 능력들이 필요할까요?\n다른 도메인으로 이직을 하고 싶은데 어떤 역량이 중요할까요?   특히 우아한형제들에서 바라보는 PM으로서 중요한 역량이 궁금합니다.\n\n커리어 방향성에 대해서 ▶️ 여기서부터 보기\n\n다양한 도메인 경험과 특정 도메인 전문성 사이에 어떻게 균형을 잡아야 할까요?\n주니어 PM 육성과 직접적인 프로젝트 기여 사이에서 어떻게 균형을 잡아야 할까요?\nPM으로서 커리어 성장은 어떻게 이루어져야 할까요?\n회사에서 맡은 업무가 가시적인 성과를 보여주기 어려운데(가입자수 증가, 거래액 증진 등) 어떻게 성장하고 성과를 낼 수 있을까요?\n모바일 서비스를 하다가 웹 서비스를 담당하게 되었는데, 모바일 서비스와 멀어지는 것이 앞으로의 커리어에 좋지 않은 영향을 미치게 될 것 같아   우려됩니다. 조언을 해주실 수 있나요?\n\n실무 노하우와 문제 해결에 대해서 ▶️ 여기서부터 보기 \n\n예상치 못한 문제가 발생했을 때 어떻게 대응하셨나요?\n고객 분석 후 개선 사항들의 우선순위를 설정하는 기준은 무엇인가요?\nPM으로서 서비스를 바라볼 때 가장 중요하게 생각하는 요소는 무엇인가요?\n문제 원인 분석과 해결 과정에서 객관적인 기준을 어떻게 세우나요?\n데이터에 기반한 기획은 어떻게 하시나요?\n\n커뮤니케이션과 협업에 대해서 ▶️ 여기서부터 보기\n\nPM으로서 가장 중요하게 생각하는 커뮤니케이션 스킬이나 팁은   무엇인가요?\n다양한 이해관계자와 협업할 때, 갈등을 최소화하고 모두가 만족할 수 있는 방향으로 어떻게 조율할 수 있을까요?\n스몰톡을 어려워하는 성격인데, 동료와의 친밀한(사적인) 관계가 PM으로서 큰 영향을 미칠까요?\n\n우아한형제들의 PM에 대해서 ▶️ 여기서부터 보기\n\n우아한형제들 PM의 레벨별로 업무 범위가 궁금합니다.\n프로덕트 매니저, 기획자와 우아한형제들 PM은 어떻게 다르고 어떤 강점이 있나요?\n\n\nWOOWACON 2024 | 오픈형 멘토링: PM - 강미경 멘토\n우아한형제들 멘토와 함께한 멘토링 세션입니다.\nWOOWACON 2024\n\n\n\n귀한 시간을 내어 오프라인과 온라인으로 멘토링 세션에 참여해 주신 여러분께 진심으로 감사드립니다.\n한정된 시간 안에서 진행된 멘토링이다 보니, 각자가 안고 계신 고민과 과제들을 충분히 깊이 있게 다루지 못한 아쉬움이 있습니다. 특히 본인의 상황에 맞는 구체적인 해결책을 찾고자 하셨던 분들께서는 시간적 제약으로 인해 답변이 다소 불충분하게 느끼셨을 지도 모르겠습니다. \n이러한 아쉬움을 해소하고, 보다 심도 있는 문제 해결을 원하시는 분들을 위해 1:1 코칭 프로그램을 준비했습니다. 개별적인 상황과 고민에 초점을 맞춘 맞춤형 코칭을 통해, 여러분이 직면한 문제들을 더욱 구체적이고 실질적으로 해결해 나가실 수 있을 거예요. 함께 성장하고 발전하는 여정에 동참하고 싶으신 분들의 1:1 코칭 신청을 기다리겠습니다.\n1:1 코칭 신청하기",
        "dc:creator": "minieetea",
        "content": "우아콘 2024 오픈형 멘토링 영상공개",
        "contentSnippet": "우아콘 2024 오픈형 멘토링 영상공개",
        "guid": "67601cde0bae3e0001ea8871",
        "categories": [
          "Product manager"
        ],
        "isoDate": "2024-12-16T14:00:49.000Z"
      }
    ]
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "매일 윈도우 노트북을 종료해야 하는 이유, 계속 켜두지 마세요",
        "link": "https://muzbox.tistory.com/483515",
        "pubDate": "Fri, 20 Dec 2024 09:46:43 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483515#entry483515comment",
        "content": "<p data-ke-size=\"size16\">매일 윈도우 노트북을 종료해야 하는 이유와 이점에 대해 소개합니다. 성능 향상, 시스템 수명 연장, 과열 방지까지! 간단한 습관으로 노트북을 보호하세요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1312\" data-origin-height=\"736\"><span data-url=\"https://blog.kakaocdn.net/dn/cjkzVj/btsLqNNuMeD/gwViyXY0wV9cb0WPpBJejk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cjkzVj/btsLqNNuMeD/gwViyXY0wV9cb0WPpBJejk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cjkzVj/btsLqNNuMeD/gwViyXY0wV9cb0WPpBJejk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcjkzVj%2FbtsLqNNuMeD%2FgwViyXY0wV9cb0WPpBJejk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"매일 윈도우 노트북을 종료해야 하는 이유\" width=\"700\" height=\"393\" data-origin-width=\"1312\" data-origin-height=\"736\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;여러분은 노트북을 사용할 때 작업이 끝나면 어떻게 하시나요? 많은 사람이 간단히 노트북 뚜껑을 닫아 절전 모드로 전환한 뒤 다시 사용할 준비를 합니다. 이런 방식이 편리한 건 사실입니다. 하지만 이 편리함이 노트북에 문제를 일으킬 수 있다는 사실을 알고 계셨나요? 노트북도 사람처럼 매일 \"휴식\"이 필요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번 포스팅에서는 노트북을 매일 종료해야 하는 이유와 이를 통해 얻을 수 있는 장점을 자세히 알아보겠습니다. 성능 최적화와 시스템 수명을 연장하는 방법, 그리고 절전 모드와 종료의 차이를 명확히 구분해드립니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  노트북을 매일 종료해야 하는 이유</b></span></h2>\n<h3 data-ke-size=\"size23\"><b> ️ 성능 향상</b></h3>\n<p data-ke-size=\"size16\">노트북을 종료하면 시스템은 다음과 같은 작업을 수행합니다:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>캐시 정리</b>: 작업 중 생성된 임시 파일이나 데이터를 삭제하여 저장 공간을 확보합니다.</li>\n<li><b>메모리 초기화</b>: 사용된 RAM을 비워 시스템 리소스를 확보합니다.</li>\n<li><b>업데이트 적용</b>: 윈도우는 종료와 부팅 시 업데이트를 적용하거나 시스템 상태를 점검합니다.</li>\n</ul>\n<p data-ke-size=\"size16\">이러한 작업은 노트북이 최상의 상태로 유지되도록 돕습니다. 특히 장시간 사용 후 성능이 저하되거나 오류가 발생하는 경우, 종료는 문제를 해결하는 가장 효과적인 방법 중 하나입니다. IT 전문가들이 문제 발생 시 가장 먼저 권장하는 방법이 \"재시작\"인 이유가 여기에 있습니다. 시스템 초기화를 통해 더 나은 성능을 얻을 수 있습니다.<br /><br /></p>\n<h3 data-ke-size=\"size23\"><b>⏳ 시스템 수명 연장</b></h3>\n<p data-ke-size=\"size16\">노트북을 종료하는 것은 하드웨어 보호 측면에서도 중요합니다. 노트북을 계속 절전 모드로 두거나 켜진 상태로 유지하면 다음과 같은 문제가 발생할 수 있습니다:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>열 손상</b>: 노트북 내부 부품은 작동 중 열을 발생시킵니다. 특히 절전 모드 상태에서 팬이 계속 작동하면 열이 쌓이면서 부품에 손상을 줄 수 있습니다.</li>\n<li><b>하드웨어 마모</b>: 하드 디스크와 같은 기계적 부품은 계속 작동 시 마모될 가능성이 높습니다.</li>\n</ul>\n<p data-ke-size=\"size16\">특히, 노트북을 가방에 넣어 이동할 때 팬이 계속 작동하면 과열로 인해 심각한 손상이 발생할 수 있습니다. 이는 데이터 손실이나 하드웨어 교체와 같은 비용이 많이 드는 문제로 이어질 수 있습니다.<br /><br /></p>\n<h3 data-ke-size=\"size23\"><b>  절전 모드와의 차이점</b></h3>\n<p data-ke-size=\"size16\">절전 모드는 짧은 시간 동안 노트북을 다시 사용할 계획이 있을 때 유용합니다. 절전 모드에서는 현재 작업 상태가 저장되고 시스템은 최소한의 전력을 소비하며 대기 상태로 전환됩니다. 하지만 절전 모드는 시스템 리소스를 완전히 초기화하지 않습니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>절전 모드의 적합한 경우</b>: 커피를 마시러 나가거나 1~2시간 정도 자리를 비울 때.</li>\n<li><b>종료가 필요한 경우</b>: 하루를 마무리하거나, 장시간 사용할 계획이 없을 때.</li>\n</ul>\n<p data-ke-size=\"size16\">장기적으로 시스템의 안정성과 성능을 유지하려면 반드시 정기적으로 종료해야 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b> ️ 노트북 종료의 주요 이점</b></span></h2>\n<h3 data-ke-size=\"size23\"><b>1. 문제 해결</b></h3>\n<p data-ke-size=\"size16\">종료와 재부팅은 시스템 오류를 최소화하는 간단한 방법입니다. 소프트웨어 충돌, 메모리 누수와 같은 문제는 종료 시 자동으로 해결될 수 있습니다. 윈도우는 종료 시 필요 없는 데이터를 정리하고, 다시 부팅하면서 초기 상태로 돌아갑니다. 이는 소프트웨어와 하드웨어 간의 충돌을 방지하고, 부팅 후 원활한 작업 환경을 제공합니다.</p>\n<h3 data-ke-size=\"size23\"><b>2. 배터리 효율</b></h3>\n<p data-ke-size=\"size16\">노트북 배터리는 사용 패턴에 따라 수명이 결정됩니다. 절전 모드는 미세한 전력을 소비하기 때문에 장시간 사용할 경우 배터리 소모가 계속됩니다. 특히 게임용 노트북과 같이 강력한 하드웨어를 갖춘 기기는 배터리 수명이 짧아 절전 모드보다 종료를 통해 에너지를 절약하는 것이 좋습니다.</p>\n<h3 data-ke-size=\"size23\"><b>3. 안전한 이동</b></h3>\n<p data-ke-size=\"size16\">노트북을 절전 모드 상태로 가방에 넣고 이동하면 팬 작동과 과열로 인해 내부 부품이 손상될 가능성이 있습니다. 종료를 통해 노트북이 완전히 꺼진 상태로 유지되면 이러한 위험을 방지할 수 있습니다. 특히 여름철과 같이 온도가 높은 환경에서는 더욱 중요합니다.</p>\n<h3 data-ke-size=\"size23\"><b>4. 업데이트 및 유지 관리</b></h3>\n<p data-ke-size=\"size16\">종료 시 윈도우는 시스템 업데이트를 적용하거나 드라이버를 점검합니다. 이는 시스템의 보안을 강화하고 최신 상태로 유지하는 데 도움이 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"윈도우11 종료.jpg\" data-origin-width=\"532\" data-origin-height=\"265\"><span data-url=\"https://blog.kakaocdn.net/dn/zoPkZ/btsLoKraZZ1/sHUELl582cqD7EHQLoE9Bk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/zoPkZ/btsLoKraZZ1/sHUELl582cqD7EHQLoE9Bk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/zoPkZ/btsLoKraZZ1/sHUELl582cqD7EHQLoE9Bk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzoPkZ%2FbtsLoKraZZ1%2FsHUELl582cqD7EHQLoE9Bk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"윈도우11 종료.jpg\" data-origin-width=\"532\" data-origin-height=\"265\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size16\">노트북은 우리의 작업과 여가를 지원하는 중요한 도구입니다. 이를 잘 관리하고 장기적으로 성능과 수명을 유지하기 위해 매일 한 번씩 종료하는 습관을 들이는 것이 중요합니다. 절전 모드는 짧은 휴식을 위해 유용하지만, 하루를 마무리할 때는 시스템을 완전히 종료하는 것이 가장 바람직합니다. 오늘부터 여러분의 노트북에게 \"휴식\"을 선물해보세요. 이런 작은 습관이 큰 차이를 만들어낼 것입니다!  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1. 노트북을 얼마나 자주 종료해야 하나요?</b><br />A1. 하루 한 번, 작업을 마치고 장시간 사용하지 않을 때 종료하는 것이 이상적입니다.<br /><br /></p>\n<p data-ke-size=\"size16\"><b>Q2. 절전 모드와 종료의 차이를 쉽게 이해할 방법은?</b><br />A2. 절전 모드는 작업 상태를 유지하며 전력을 최소화하는 것이고, 종료는 시스템을 완전히 초기화하고 모든 작업을 끝내는 것입니다.<br /><br /><b>Q3. 노트북을 재부팅하면 정말 문제가 해결되나요?</b><br />A3. 예, 재부팅은 메모리 초기화와 시스템 충돌 해결에 효과적입니다. 종료와 재부팅을 통해 많은 소프트웨어 문제가 자동으로 해결됩니다.</p>",
        "contentSnippet": "매일 윈도우 노트북을 종료해야 하는 이유와 이점에 대해 소개합니다. 성능 향상, 시스템 수명 연장, 과열 방지까지! 간단한 습관으로 노트북을 보호하세요.\n\n\n \n 여러분은 노트북을 사용할 때 작업이 끝나면 어떻게 하시나요? 많은 사람이 간단히 노트북 뚜껑을 닫아 절전 모드로 전환한 뒤 다시 사용할 준비를 합니다. 이런 방식이 편리한 건 사실입니다. 하지만 이 편리함이 노트북에 문제를 일으킬 수 있다는 사실을 알고 계셨나요? 노트북도 사람처럼 매일 \"휴식\"이 필요합니다.\n \n이번 포스팅에서는 노트북을 매일 종료해야 하는 이유와 이를 통해 얻을 수 있는 장점을 자세히 알아보겠습니다. 성능 최적화와 시스템 수명을 연장하는 방법, 그리고 절전 모드와 종료의 차이를 명확히 구분해드립니다.\n \n \n  노트북을 매일 종료해야 하는 이유\n ️ 성능 향상\n노트북을 종료하면 시스템은 다음과 같은 작업을 수행합니다:\n캐시 정리: 작업 중 생성된 임시 파일이나 데이터를 삭제하여 저장 공간을 확보합니다.\n메모리 초기화: 사용된 RAM을 비워 시스템 리소스를 확보합니다.\n업데이트 적용: 윈도우는 종료와 부팅 시 업데이트를 적용하거나 시스템 상태를 점검합니다.\n이러한 작업은 노트북이 최상의 상태로 유지되도록 돕습니다. 특히 장시간 사용 후 성능이 저하되거나 오류가 발생하는 경우, 종료는 문제를 해결하는 가장 효과적인 방법 중 하나입니다. IT 전문가들이 문제 발생 시 가장 먼저 권장하는 방법이 \"재시작\"인 이유가 여기에 있습니다. 시스템 초기화를 통해 더 나은 성능을 얻을 수 있습니다.\n\n⏳ 시스템 수명 연장\n노트북을 종료하는 것은 하드웨어 보호 측면에서도 중요합니다. 노트북을 계속 절전 모드로 두거나 켜진 상태로 유지하면 다음과 같은 문제가 발생할 수 있습니다:\n열 손상: 노트북 내부 부품은 작동 중 열을 발생시킵니다. 특히 절전 모드 상태에서 팬이 계속 작동하면 열이 쌓이면서 부품에 손상을 줄 수 있습니다.\n하드웨어 마모: 하드 디스크와 같은 기계적 부품은 계속 작동 시 마모될 가능성이 높습니다.\n특히, 노트북을 가방에 넣어 이동할 때 팬이 계속 작동하면 과열로 인해 심각한 손상이 발생할 수 있습니다. 이는 데이터 손실이나 하드웨어 교체와 같은 비용이 많이 드는 문제로 이어질 수 있습니다.\n\n  절전 모드와의 차이점\n절전 모드는 짧은 시간 동안 노트북을 다시 사용할 계획이 있을 때 유용합니다. 절전 모드에서는 현재 작업 상태가 저장되고 시스템은 최소한의 전력을 소비하며 대기 상태로 전환됩니다. 하지만 절전 모드는 시스템 리소스를 완전히 초기화하지 않습니다.\n절전 모드의 적합한 경우: 커피를 마시러 나가거나 1~2시간 정도 자리를 비울 때.\n종료가 필요한 경우: 하루를 마무리하거나, 장시간 사용할 계획이 없을 때.\n장기적으로 시스템의 안정성과 성능을 유지하려면 반드시 정기적으로 종료해야 합니다.\n \n \n ️ 노트북 종료의 주요 이점\n1. 문제 해결\n종료와 재부팅은 시스템 오류를 최소화하는 간단한 방법입니다. 소프트웨어 충돌, 메모리 누수와 같은 문제는 종료 시 자동으로 해결될 수 있습니다. 윈도우는 종료 시 필요 없는 데이터를 정리하고, 다시 부팅하면서 초기 상태로 돌아갑니다. 이는 소프트웨어와 하드웨어 간의 충돌을 방지하고, 부팅 후 원활한 작업 환경을 제공합니다.\n2. 배터리 효율\n노트북 배터리는 사용 패턴에 따라 수명이 결정됩니다. 절전 모드는 미세한 전력을 소비하기 때문에 장시간 사용할 경우 배터리 소모가 계속됩니다. 특히 게임용 노트북과 같이 강력한 하드웨어를 갖춘 기기는 배터리 수명이 짧아 절전 모드보다 종료를 통해 에너지를 절약하는 것이 좋습니다.\n3. 안전한 이동\n노트북을 절전 모드 상태로 가방에 넣고 이동하면 팬 작동과 과열로 인해 내부 부품이 손상될 가능성이 있습니다. 종료를 통해 노트북이 완전히 꺼진 상태로 유지되면 이러한 위험을 방지할 수 있습니다. 특히 여름철과 같이 온도가 높은 환경에서는 더욱 중요합니다.\n4. 업데이트 및 유지 관리\n종료 시 윈도우는 시스템 업데이트를 적용하거나 드라이버를 점검합니다. 이는 시스템의 보안을 강화하고 최신 상태로 유지하는 데 도움이 됩니다.\n \n\n\n마치며\n노트북은 우리의 작업과 여가를 지원하는 중요한 도구입니다. 이를 잘 관리하고 장기적으로 성능과 수명을 유지하기 위해 매일 한 번씩 종료하는 습관을 들이는 것이 중요합니다. 절전 모드는 짧은 휴식을 위해 유용하지만, 하루를 마무리할 때는 시스템을 완전히 종료하는 것이 가장 바람직합니다. 오늘부터 여러분의 노트북에게 \"휴식\"을 선물해보세요. 이런 작은 습관이 큰 차이를 만들어낼 것입니다!  \nQ&A\nQ1. 노트북을 얼마나 자주 종료해야 하나요?\nA1. 하루 한 번, 작업을 마치고 장시간 사용하지 않을 때 종료하는 것이 이상적입니다.\n\nQ2. 절전 모드와 종료의 차이를 쉽게 이해할 방법은?\nA2. 절전 모드는 작업 상태를 유지하며 전력을 최소화하는 것이고, 종료는 시스템을 완전히 초기화하고 모든 작업을 끝내는 것입니다.\nQ3. 노트북을 재부팅하면 정말 문제가 해결되나요?\nA3. 예, 재부팅은 메모리 초기화와 시스템 충돌 해결에 효과적입니다. 종료와 재부팅을 통해 많은 소프트웨어 문제가 자동으로 해결됩니다.",
        "guid": "https://muzbox.tistory.com/483515",
        "categories": [
          "윈도우 사용팁/윈도우11 사용법",
          "PC 관리",
          "과열 방지",
          "노트북 종료",
          "배터리 효율",
          "성능 최적화",
          "시스템 수명",
          "업데이트 관리",
          "윈도우 팁",
          "윈도우사용법",
          "절전 모드"
        ],
        "isoDate": "2024-12-20T00:46:43.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "파워포인트 바닥글 일괄 수정하기",
        "link": "https://muzbox.tistory.com/483514",
        "pubDate": "Wed, 18 Dec 2024 12:09:01 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483514#entry483514comment",
        "content": "<p data-ke-size=\"size18\">파워포인트에서 슬라이드 바닥글을 손쉽게 삽입하고 슬라이드 마스터로 서식을 일괄 수정하는 방법을 소개합니다. 바닥글 설정과 서식 변경을 통해 전문적인 발표 자료를 만들어 보세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"파워포인트 바닥글 수정법.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/bwQdK7/btsLlNaAv79/tMHmKEovQNW6iNfRai6vB1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bwQdK7/btsLlNaAv79/tMHmKEovQNW6iNfRai6vB1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bwQdK7/btsLlNaAv79/tMHmKEovQNW6iNfRai6vB1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbwQdK7%2FbtsLlNaAv79%2FtMHmKEovQNW6iNfRai6vB1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"파워포인트 바닥글 일괄 수정하기\" data-filename=\"파워포인트 바닥글 수정법.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;파워포인트로 프레젠테이션을 준비하다 보면 슬라이드 하단에 번호, 회사 이름, 날짜 등 추가적인 정보를 삽입해야 할 때가 많습니다. 이때 사용하는 것이 <b>바닥글 기능</b>입니다. 바닥글은 슬라이드의 정체성을 명확히 하고, 깔끔한 정보 전달을 가능하게 합니다. 하지만 슬라이드가 많아질수록 개별적으로 수정하기는 번거롭습니다. 이 문제를 해결하기 위해 <b>슬라이드 마스터</b>를 활용하면 효율적으로 작업할 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  바닥글 텍스트 삽입하기</b></span></h2>\n<p data-ke-size=\"size18\">파워포인트에서 <b>바닥글을 삽입하는 방법</b>은 매우 간단합니다. 다음 단계를 차근차근 따라 하면 모든 슬라이드에 동일한 바닥글을 손쉽게 적용할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 바닥글 텍스트 추가 단계</span></h3>\n<ol style=\"list-style-type: decimal; font-size: 16px;\" data-ke-list-type=\"decimal\">\n<li><b>삽입 탭</b> 클릭 &rarr; 상단의 <b>텍스트 그룹</b>에서 <b>머리글/바닥글</b> 선택.</li>\n<li><b>바닥글 항목</b>을 체크한 뒤 추가하고 싶은 텍스트를 입력.</li>\n<li>모든 슬라이드에 적용하려면 <b>모두 적용 버튼</b> 클릭.</li>\n</ol>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"파워포인트 바닥글 추가 01.jpg\" data-origin-width=\"1020\" data-origin-height=\"662\"><span data-url=\"https://blog.kakaocdn.net/dn/kVihB/btsLljOnOnP/ElXdI3doyjPYaHchPnKxWK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/kVihB/btsLljOnOnP/ElXdI3doyjPYaHchPnKxWK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/kVihB/btsLljOnOnP/ElXdI3doyjPYaHchPnKxWK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FkVihB%2FbtsLljOnOnP%2FElXdI3doyjPYaHchPnKxWK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"파워포인트 바닥글 일괄 수정하기 1\" data-filename=\"파워포인트 바닥글 추가 01.jpg\" data-origin-width=\"1020\" data-origin-height=\"662\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"파워포인트 바닥글 추가 02.jpg\" data-origin-width=\"608\" data-origin-height=\"458\"><span data-url=\"https://blog.kakaocdn.net/dn/Z7HTK/btsLnHmeriY/DHWwvTuiKFdTeom27MHFSK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/Z7HTK/btsLnHmeriY/DHWwvTuiKFdTeom27MHFSK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/Z7HTK/btsLnHmeriY/DHWwvTuiKFdTeom27MHFSK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FZ7HTK%2FbtsLnHmeriY%2FDHWwvTuiKFdTeom27MHFSK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"파워포인트 바닥글 일괄 수정하기 2\" data-filename=\"파워포인트 바닥글 추가 02.jpg\" data-origin-width=\"608\" data-origin-height=\"458\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"파워포인트 바닥글 추가 03.jpg\" data-origin-width=\"1020\" data-origin-height=\"662\"><span data-url=\"https://blog.kakaocdn.net/dn/bL5vJ0/btsLljVcKAk/7zws7qPg9zE5vJN7tHxBRK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bL5vJ0/btsLljVcKAk/7zws7qPg9zE5vJN7tHxBRK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bL5vJ0/btsLljVcKAk/7zws7qPg9zE5vJN7tHxBRK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbL5vJ0%2FbtsLljVcKAk%2F7zws7qPg9zE5vJN7tHxBRK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"파워포인트 바닥글 일괄 수정하기 3\" data-filename=\"파워포인트 바닥글 추가 03.jpg\" data-origin-width=\"1020\" data-origin-height=\"662\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">이 과정을 거치면 슬라이드 하단에 원하는 텍스트가 자동으로 입력됩니다. 특히 회사 로고, 슬로건, 발표 날짜 등을 추가할 때 매우 유용합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 특정 슬라이드에만 적용하기</span></h3>\n<p data-ke-size=\"size18\">모든 슬라이드가 아닌, 특정 슬라이드에만 바닥글을 삽입하고 싶다면 <b>적용 버튼</b>을 사용하세요. 이 버튼은 현재 선택한 슬라이드에만 텍스트를 추가합니다. 이를 활용하면 더 세부적으로 작업을 설정할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 적용 후 확인하기</span></h3>\n<p data-ke-size=\"size18\">바닥글 삽입 후 슬라이드 하단을 확인해 보세요. 모든 슬라이드에 동일한 텍스트가 들어가야 하며, 한눈에 확인 가능한 깔끔한 디자인이 완성됩니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b> ️ 바닥글 서식 일괄 변경하기</b></span></h2>\n<p data-ke-size=\"size18\">바닥글 텍스트를 추가한 후, 폰트 크기나 색상을 일괄적으로 수정하고 싶을 때 <b>슬라이드 마스터</b>를 활용하면 됩니다. 슬라이드 마스터는 전체 슬라이드 디자인을 통합 관리할 수 있는 강력한 도구로, 특히 많은 슬라이드 작업 시 시간을 절약해 줍니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 슬라이드 마스터 접근 방법</span></h3>\n<ol style=\"list-style-type: decimal; font-size: 16px;\" data-ke-list-type=\"decimal\">\n<li>상단 <b>보기 탭</b> 클릭.</li>\n<li><b>마스터 보기</b> 그룹에서 <b>슬라이드 마스터</b> 선택.</li>\n<li>좌측 사이드바에서 가장 상단의 <b>마스터 슬라이드</b> 클릭.</li>\n</ol>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"파워포인트 바닥글 추가 04.jpg\" data-origin-width=\"1020\" data-origin-height=\"662\"><span data-url=\"https://blog.kakaocdn.net/dn/bl5QFF/btsLlP7cPGl/ULAQbBXMxLbiDm4bLTzu2K/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bl5QFF/btsLlP7cPGl/ULAQbBXMxLbiDm4bLTzu2K/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bl5QFF/btsLlP7cPGl/ULAQbBXMxLbiDm4bLTzu2K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbl5QFF%2FbtsLlP7cPGl%2FULAQbBXMxLbiDm4bLTzu2K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"파워포인트 바닥글 일괄 수정하기 4\" data-filename=\"파워포인트 바닥글 추가 04.jpg\" data-origin-width=\"1020\" data-origin-height=\"662\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">마스터 슬라이드는 슬라이드 디자인의 기본 설정을 포함하며, 여기에서 수정한 내용은 모든 슬라이드에 자동으로 반영됩니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 바닥글 서식 변경하기</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>바닥글 텍스트 도형 선택</b>: 슬라이드 하단에서 바닥글 텍스트 상자를 클릭.</li>\n<li><b>서식 변경</b>: 상단 <b>홈 탭</b>에서 폰트 크기, 스타일, 색상 등을 수정.</li>\n<li><b>즉시 적용</b>: 텍스트 서식 변경 사항이 전체 슬라이드에 일괄적으로 적용됩니다.</li>\n</ul>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"파워포인트 바닥글 추가 05.jpg\" data-origin-width=\"1020\" data-origin-height=\"662\"><span data-url=\"https://blog.kakaocdn.net/dn/crWu3F/btsLlOUP8o5/Y8jTEVXvO7ibU3pWUqkCA0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/crWu3F/btsLlOUP8o5/Y8jTEVXvO7ibU3pWUqkCA0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/crWu3F/btsLlOUP8o5/Y8jTEVXvO7ibU3pWUqkCA0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcrWu3F%2FbtsLlOUP8o5%2FY8jTEVXvO7ibU3pWUqkCA0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"파워포인트 바닥글 일괄 수정하기 5\" data-filename=\"파워포인트 바닥글 추가 05.jpg\" data-origin-width=\"1020\" data-origin-height=\"662\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  슬라이드 마스터 활용의 장점</b></span></h2>\n<p data-ke-size=\"size18\">슬라이드 마스터를 이용하면 다음과 같은 이점을 누릴 수 있습니다:</p>\n<h3 data-ke-size=\"size23\">1. <b>시간 절약</b></h3>\n<p data-ke-size=\"size18\">개별적으로 바닥글을 수정하지 않아도 돼 작업 시간을 크게 줄일 수 있습니다. 특히 슬라이드가 많을수록 이점이 커집니다.</p>\n<h3 data-ke-size=\"size23\">2. <b>일관성 유지</b></h3>\n<p data-ke-size=\"size18\">모든 슬라이드의 디자인이 통일되어 깔끔하고 전문적인 프레젠테이션을 제작할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\">3. <b>효율성 향상</b></h3>\n<p data-ke-size=\"size18\">한 번의 설정으로 전체 프레젠테이션의 서식을 관리할 수 있어 작업 효율성이 증가합니다.</p>\n<p data-ke-size=\"size18\">슬라이드 마스터는 단순히 시간 절약 도구를 넘어, 발표 자료의 완성도를 한 단계 끌어올리는 중요한 기능입니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size18\">이번 글에서는 파워포인트에서 <b>바닥글 텍스트를 삽입하고 서식을 일괄적으로 수정하는 방법</b>을 알아보았습니다. 슬라이드 마스터를 활용하면 더 깔끔하고 통일성 있는 디자인을 만들 수 있으며, 작업 시간을 줄이는 데 큰 도움이 됩니다.</p>\n<p data-ke-size=\"size18\">다음 발표 준비 시, 이 방법을 활용해 보세요. 슬라이드의 프로페셔널한 변화를 경험할 수 있을 것입니다. 궁금한 점이 있다면 아래 Q&amp;A 섹션에서 확인해 보세요!  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>Q&amp;A</b></span></h2>\n<p data-ke-size=\"size18\"><b>Q1: 바닥글 수정 시 일부 슬라이드에 반영되지 않는 이유는?</b><br /><b>A1:</b> 슬라이드 마스터에서 수정하지 않거나 특정 슬라이드에 개별 설정이 적용된 경우 반영되지 않을 수 있습니다. 이를 해결하려면 슬라이드 마스터를 확인하세요.<br /><br /></p>\n<p data-ke-size=\"size18\"><b>Q2: 바닥글 대신 로고를 넣을 수 있나요?</b><br /><b>A2:</b> 네, 슬라이드 마스터를 통해 로고나 이미지를 바닥글 위치에 삽입하면 전체 슬라이드에 적용할 수 있습니다.<br /><br /></p>\n<p data-ke-size=\"size18\"><b>Q3: 바닥글이 필요한 이유는 무엇인가요?</b><br /><b>A3:</b> 바닥글은 슬라이드 번호, 발표 일자, 회사 이름 등 기본 정보를 제공해 발표 자료의 명확성과 전문성을 높입니다.</p>",
        "contentSnippet": "파워포인트에서 슬라이드 바닥글을 손쉽게 삽입하고 슬라이드 마스터로 서식을 일괄 수정하는 방법을 소개합니다. 바닥글 설정과 서식 변경을 통해 전문적인 발표 자료를 만들어 보세요!\n\n\n \n 파워포인트로 프레젠테이션을 준비하다 보면 슬라이드 하단에 번호, 회사 이름, 날짜 등 추가적인 정보를 삽입해야 할 때가 많습니다. 이때 사용하는 것이 바닥글 기능입니다. 바닥글은 슬라이드의 정체성을 명확히 하고, 깔끔한 정보 전달을 가능하게 합니다. 하지만 슬라이드가 많아질수록 개별적으로 수정하기는 번거롭습니다. 이 문제를 해결하기 위해 슬라이드 마스터를 활용하면 효율적으로 작업할 수 있습니다.\n \n  바닥글 텍스트 삽입하기\n파워포인트에서 바닥글을 삽입하는 방법은 매우 간단합니다. 다음 단계를 차근차근 따라 하면 모든 슬라이드에 동일한 바닥글을 손쉽게 적용할 수 있습니다.\n1. 바닥글 텍스트 추가 단계\n삽입 탭 클릭 → 상단의 텍스트 그룹에서 머리글/바닥글 선택.\n바닥글 항목을 체크한 뒤 추가하고 싶은 텍스트를 입력.\n모든 슬라이드에 적용하려면 모두 적용 버튼 클릭.\n\n\n\n\n \n이 과정을 거치면 슬라이드 하단에 원하는 텍스트가 자동으로 입력됩니다. 특히 회사 로고, 슬로건, 발표 날짜 등을 추가할 때 매우 유용합니다.\n2. 특정 슬라이드에만 적용하기\n모든 슬라이드가 아닌, 특정 슬라이드에만 바닥글을 삽입하고 싶다면 적용 버튼을 사용하세요. 이 버튼은 현재 선택한 슬라이드에만 텍스트를 추가합니다. 이를 활용하면 더 세부적으로 작업을 설정할 수 있습니다.\n3. 적용 후 확인하기\n바닥글 삽입 후 슬라이드 하단을 확인해 보세요. 모든 슬라이드에 동일한 텍스트가 들어가야 하며, 한눈에 확인 가능한 깔끔한 디자인이 완성됩니다.\n \n \n ️ 바닥글 서식 일괄 변경하기\n바닥글 텍스트를 추가한 후, 폰트 크기나 색상을 일괄적으로 수정하고 싶을 때 슬라이드 마스터를 활용하면 됩니다. 슬라이드 마스터는 전체 슬라이드 디자인을 통합 관리할 수 있는 강력한 도구로, 특히 많은 슬라이드 작업 시 시간을 절약해 줍니다.\n1. 슬라이드 마스터 접근 방법\n상단 보기 탭 클릭.\n마스터 보기 그룹에서 슬라이드 마스터 선택.\n좌측 사이드바에서 가장 상단의 마스터 슬라이드 클릭.\n\n\n마스터 슬라이드는 슬라이드 디자인의 기본 설정을 포함하며, 여기에서 수정한 내용은 모든 슬라이드에 자동으로 반영됩니다.\n2. 바닥글 서식 변경하기\n바닥글 텍스트 도형 선택: 슬라이드 하단에서 바닥글 텍스트 상자를 클릭.\n서식 변경: 상단 홈 탭에서 폰트 크기, 스타일, 색상 등을 수정.\n즉시 적용: 텍스트 서식 변경 사항이 전체 슬라이드에 일괄적으로 적용됩니다.\n\n\n \n  슬라이드 마스터 활용의 장점\n슬라이드 마스터를 이용하면 다음과 같은 이점을 누릴 수 있습니다:\n1. 시간 절약\n개별적으로 바닥글을 수정하지 않아도 돼 작업 시간을 크게 줄일 수 있습니다. 특히 슬라이드가 많을수록 이점이 커집니다.\n2. 일관성 유지\n모든 슬라이드의 디자인이 통일되어 깔끔하고 전문적인 프레젠테이션을 제작할 수 있습니다.\n3. 효율성 향상\n한 번의 설정으로 전체 프레젠테이션의 서식을 관리할 수 있어 작업 효율성이 증가합니다.\n슬라이드 마스터는 단순히 시간 절약 도구를 넘어, 발표 자료의 완성도를 한 단계 끌어올리는 중요한 기능입니다.\n \n \n마치며\n이번 글에서는 파워포인트에서 바닥글 텍스트를 삽입하고 서식을 일괄적으로 수정하는 방법을 알아보았습니다. 슬라이드 마스터를 활용하면 더 깔끔하고 통일성 있는 디자인을 만들 수 있으며, 작업 시간을 줄이는 데 큰 도움이 됩니다.\n다음 발표 준비 시, 이 방법을 활용해 보세요. 슬라이드의 프로페셔널한 변화를 경험할 수 있을 것입니다. 궁금한 점이 있다면 아래 Q&A 섹션에서 확인해 보세요!  \nQ&A\nQ1: 바닥글 수정 시 일부 슬라이드에 반영되지 않는 이유는?\nA1: 슬라이드 마스터에서 수정하지 않거나 특정 슬라이드에 개별 설정이 적용된 경우 반영되지 않을 수 있습니다. 이를 해결하려면 슬라이드 마스터를 확인하세요.\n\nQ2: 바닥글 대신 로고를 넣을 수 있나요?\nA2: 네, 슬라이드 마스터를 통해 로고나 이미지를 바닥글 위치에 삽입하면 전체 슬라이드에 적용할 수 있습니다.\n\nQ3: 바닥글이 필요한 이유는 무엇인가요?\nA3: 바닥글은 슬라이드 번호, 발표 일자, 회사 이름 등 기본 정보를 제공해 발표 자료의 명확성과 전문성을 높입니다.",
        "guid": "https://muzbox.tistory.com/483514",
        "categories": [
          "오피스 프로그램 사용법/파워포인트",
          "PPT 기초",
          "PPT 바닥글",
          "PPT서식",
          "바닥글",
          "슬라이드마스터",
          "파워포인트",
          "파워포인트 기초"
        ],
        "isoDate": "2024-12-18T03:09:01.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "강력한 화면 녹화 프로그램 Abelssoft ScreenVideo 2025 무료 인증 방법",
        "link": "https://muzbox.tistory.com/483513",
        "pubDate": "Tue, 17 Dec 2024 08:43:50 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483513#entry483513comment",
        "content": "<p data-ke-size=\"size16\">Abelssoft ScreenVideo 2025는 고화질 화면 녹화와 다양한 설정 옵션을 제공하는 무료 프로그램입니다. 게임 녹화, 강의 제작에 적합한 최고의 도구입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Abelssoft-ScreenVideo-2025-Box-Shot.webp\" data-origin-width=\"271\" data-origin-height=\"329\"><span data-url=\"https://blog.kakaocdn.net/dn/dliVxj/btsLkYWPyFg/x68wHEm7YINBi6k0ffST6K/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/dliVxj/btsLkYWPyFg/x68wHEm7YINBi6k0ffST6K/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/dliVxj/btsLkYWPyFg/x68wHEm7YINBi6k0ffST6K/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdliVxj%2FbtsLkYWPyFg%2Fx68wHEm7YINBi6k0ffST6K%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Abelssoft ScreenVideo 2025 무료 인증 방법\" width=\"345\" height=\"419\" data-filename=\"Abelssoft-ScreenVideo-2025-Box-Shot.webp\" data-origin-width=\"271\" data-origin-height=\"329\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;화면 녹화 소프트웨어를 찾고 있다면 Abelssoft ScreenVideo 2025를 주목하세요! 누구나 쉽고 간편하게 사용할 수 있는 이 프로그램은 <b>강의 영상, 게임 플레이, 소프트웨어 테스트</b>를 녹화하는 데 최적화된 기능을 제공합니다. 특히 복잡한 설치 과정이나 별도의 라이센스 코드 없이 <b>무료로 사용할 수 있다는 점</b>이 큰 장점입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">프로그램의 사용법은 매우 간단하지만 고급 사용자도 만족할 수 있는 다양한 옵션이 제공됩니다. 프레임 레이트, 해상도 조정은 물론이고 특정 영역만 녹화할 수 있는 기능까지 갖추고 있어 용도에 따라 자유롭게 커스터마이징이 가능합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번 포스팅에서는 <b>Abelssoft ScreenVideo 2025</b>의 기능과 사용법을 알아보고 무료 설치 방법까지 소개하겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Abelssoft ScreenVideo 주요 기능</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 사용자 친화적인 인터페이스</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"682\" data-origin-height=\"395\"><span data-url=\"https://blog.kakaocdn.net/dn/cb7zGM/btsLlKReu7p/HCW9l0KzES8q6k2cKkMAFk/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/cb7zGM/btsLlKReu7p/HCW9l0KzES8q6k2cKkMAFk/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/cb7zGM/btsLlKReu7p/HCW9l0KzES8q6k2cKkMAFk/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcb7zGM%2FbtsLlKReu7p%2FHCW9l0KzES8q6k2cKkMAFk%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Abelssoft ScreenVideo 인터페이스\" data-origin-width=\"682\" data-origin-height=\"395\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">Abelssoft ScreenVideo는 <b>모두를 위한 직관적인 화면 녹화 도구</b>입니다. 복잡한 설정이나 메뉴를 찾아 헤맬 필요 없이 설치 후 바로 사용할 수 있습니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>단일 화면 제어 패널</b>: 프로그램을 실행하면 핵심 기능이 한눈에 보이는 간단한 인터페이스를 제공합니다.</li>\n<li><b>사각형 선택 기능</b>: 전체 화면이 아닌 특정 영역만 녹화할 수 있어 작업의 효율을 높여줍니다.</li>\n<li><b>단축키 설정</b>: 사용자가 원하는 키 조합을 통해 녹화를 시작하거나 일시 중지하는 등의 빠른 제어가 가능합니다.</li>\n</ul>\n<p data-ke-size=\"size16\">이 기능은 특히 <b>튜토리얼 제작, 소프트웨어 테스트, 비즈니스 프레젠테이션</b> 등에서 큰 도움을 줍니다. 단축키를 활용하면 작업의 흐름을 방해하지 않고 자연스럽게 화면을 녹화할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 고품질 영상 녹화</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"650\"><span data-url=\"https://blog.kakaocdn.net/dn/bHNdAG/btsLlO0ozTU/TF0VhJeLYuoLbUU8RKS730/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bHNdAG/btsLlO0ozTU/TF0VhJeLYuoLbUU8RKS730/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bHNdAG/btsLlO0ozTU/TF0VhJeLYuoLbUU8RKS730/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbHNdAG%2FbtsLlO0ozTU%2FTF0VhJeLYuoLbUU8RKS730%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Abelssoft ScreenVideo 화면녹화\" width=\"697\" height=\"354\" data-origin-width=\"1280\" data-origin-height=\"650\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">영상의 품질은 화면 녹화 프로그램을 평가하는 중요한 기준입니다. Abelssoft ScreenVideo는 고화질 녹화를 제공하면서도 저장 용량을 효율적으로 관리할 수 있도록 다양한 설정을 지원합니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>5가지 품질 프로파일</b>: 저화질부터 고화질까지 사용 목적에 따라 최적의 품질을 선택할 수 있습니다.</li>\n<li><b>맞춤형 설정</b>: 프레임 레이트, 비트레이트, 해상도를 세부적으로 조정할 수 있습니다.</li>\n<li><b>지원 포맷</b>: 녹화된 영상은 <b>MP4, WEBM, WMV</b> 포맷으로 저장되며, 원하는 포맷을 선택할 수 있습니다.</li>\n</ul>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"484\" data-origin-height=\"361\"><span data-url=\"https://blog.kakaocdn.net/dn/bdOAEb/btsLldGcDsy/kBqiK04iINiBxVMkbzgkgk/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/bdOAEb/btsLldGcDsy/kBqiK04iINiBxVMkbzgkgk/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/bdOAEb/btsLldGcDsy/kBqiK04iINiBxVMkbzgkgk/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbdOAEb%2FbtsLldGcDsy%2FkBqiK04iINiBxVMkbzgkgk%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Abelssoft ScreenVideo 저장옵션\" data-origin-width=\"484\" data-origin-height=\"361\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;예를 들어, 강의 영상을 제작할 때는 고화질과 함께 안정적인 프레임 레이트가 중요하지만, 게임 녹화의 경우 용량을 고려해 <b>저용량-고화질</b> 옵션을 선택하면 효율적입니다. 또한, <b>비트레이트 조정</b>을 통해 영상의 크기를 최적화할 수 있어 장시간 녹화 시에도 부담이 없습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 다재다능한 녹화 기능</span></h3>\n<p data-ke-size=\"size16\">Abelssoft ScreenVideo는 다양한 상황에서 활용할 수 있는 강력한 기능을 제공합니다.</p>\n<h4 data-ke-size=\"size20\"><i><b>1) 게임 플레이 녹화</b></i></h4>\n<p data-ke-size=\"size16\">게임 화면을 실시간으로 녹화하고, 중요한 장면은 단축키를 사용해 빠르게 기록할 수 있습니다. 고해상도 옵션을 통해 <b>선명한 게임 플레이 영상</b>을 저장할 수 있어 유튜브 업로드용으로도 적합합니다.</p>\n<h4 data-ke-size=\"size20\"><i><b>2) 강의 및 튜토리얼 제작</b></i></h4>\n<p data-ke-size=\"size16\">프로그램이나 소프트웨어 사용법을 설명하는 영상을 만들 때 특정 화면만 선택하여 녹화할 수 있습니다. 마우스 커서 강조 기능이나 텍스트 오버레이를 사용하면 <b>더욱 이해하기 쉬운 강의 영상</b>을 제작할 수 있습니다.</p>\n<h4 data-ke-size=\"size20\"><i><b>3) 소프트웨어 테스트 및 개발</b></i></h4>\n<p data-ke-size=\"size16\">소프트웨어 테스터나 개발자는 Abelssoft ScreenVideo의 녹화 기능을 사용해 버그 리포트나 기능 시연 영상을 쉽게 제작할 수 있습니다. 특히 안드로이드 에뮬레이터 화면을 녹화할 때 <b>세로 화면 모드</b>로 녹화하는 기능은 매우 유용합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>설치 및 무료 인증 방법</b></span></h2>\n<p data-ke-size=\"size16\"><b>Abelssoft ScreenVideo 2025</b>를 무료로 사용하는 방법은 매우 간단합니다.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>아래 3개의 다운로드 링크</b>&nbsp;중에 한 곳을 통해 설치 파일을 받습니다.</li>\n<li>프로그램을 실행하고 설치 과정을 완료합니다.</li>\n<li>신규 사용자라면 이름과 이메일 주소를 입력하고 <b>이메일 인증</b>을 진행합니다.</li>\n<li>이메일로 받은 인증 링크를 클릭하면 <b>자동으로 활성화</b>됩니다.</li>\n</ol>\n<p data-ke-size=\"size16\"><b>[ 다운로드 ]</b>  <a href=\"https://gofile.io/d/1xv0u2\" target=\"_blank\" rel=\"noopener\"><span style=\"color: #006dd7;\"><u><b>링크1</b></u></span></a>&nbsp;  <span style=\"color: #006dd7;\"><u><b><a style=\"color: #006dd7;\" href=\"https://www.dropbox.com/scl/fi/slb27jss419qfap67oqrf/Abelssoft_ScreenVideo_v2025_Giveaway.exe?rlkey=8r0nk0erwsuyoh8wurljylq7n&amp;st=c7y82gue&amp;dl=0\" target=\"_blank\" rel=\"noopener\">링크2</a></b></u></span>&nbsp;  <b><u><span style=\"color: #006dd7;\"><a style=\"color: #006dd7;\" href=\"https://app.box.com/s/90oi8nk96bqlypleiy283e5wy2j98v81\" target=\"_blank\" rel=\"noopener\">링크3</a></span></u></b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 과정은 불과 몇 분이면 완료되며, 복잡한 라이센스 코드 입력이나 추가 설정은 필요 없습니다. 프로그램을 설치한 직후부터 모든 기능을 <b>무료로 사용할 수 있습니다</b>.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size16\">Abelssoft ScreenVideo 2025는 화면 녹화 프로그램의 <b>새로운 기준</b>을 제시합니다. 사용자 친화적인 인터페이스, 다양한 맞춤형 설정, 그리고 강력한 기능 덕분에 누구나 손쉽게 고화질 영상을 제작할 수 있습니다.</p>\n<p data-ke-size=\"size16\">특히 게임 플레이 녹화, 강의 영상 제작, 소프트웨어 테스트 등 다양한 용도로 활용할 수 있어 <b>프리랜서, 콘텐츠 크리에이터, 개발자</b>들에게 매우 유용한 도구입니다. 무엇보다 무료로 제공되는 프로그램이라는 점이 큰 매력입니다.</p>\n<p data-ke-size=\"size16\"><b>지금 바로 Abelssoft ScreenVideo를 다운로드하고, 고화질 화면 녹화의 세계를 경험해보세요!  </b></p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1. Abelssoft ScreenVideo는 어떤 포맷을 지원하나요?</b><br />MP4, WEBM, WMV와 같은 인기 있는 비디오 포맷을 지원합니다. 저장된 영상은 유튜브, 페이스북 등 다양한 플랫폼에 바로 업로드할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 프로그램은 정말 무료인가요?</b><br />네, ScreenVideo 2025 버전은 <b>완전 무료</b>로 제공됩니다. 설치 후 이메일 인증만 하면 모든 기능을 사용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 녹화 영상의 품질을 조정할 수 있나요?</b><br />물론입니다! 프레임 레이트, 해상도, 비트레이트 등 다양한 품질 설정을 제공하여 용도에 맞게 조정할 수 있습니다.</p>\n<div id=\"gtx-trans\" style=\"position: absolute; left: -90px; top: 3862.8px;\">\n<div class=\"gtx-trans-icon\">&nbsp;</div>\n</div>",
        "contentSnippet": "Abelssoft ScreenVideo 2025는 고화질 화면 녹화와 다양한 설정 옵션을 제공하는 무료 프로그램입니다. 게임 녹화, 강의 제작에 적합한 최고의 도구입니다.\n\n\n \n 화면 녹화 소프트웨어를 찾고 있다면 Abelssoft ScreenVideo 2025를 주목하세요! 누구나 쉽고 간편하게 사용할 수 있는 이 프로그램은 강의 영상, 게임 플레이, 소프트웨어 테스트를 녹화하는 데 최적화된 기능을 제공합니다. 특히 복잡한 설치 과정이나 별도의 라이센스 코드 없이 무료로 사용할 수 있다는 점이 큰 장점입니다.\n \n프로그램의 사용법은 매우 간단하지만 고급 사용자도 만족할 수 있는 다양한 옵션이 제공됩니다. 프레임 레이트, 해상도 조정은 물론이고 특정 영역만 녹화할 수 있는 기능까지 갖추고 있어 용도에 따라 자유롭게 커스터마이징이 가능합니다.\n \n이번 포스팅에서는 Abelssoft ScreenVideo 2025의 기능과 사용법을 알아보고 무료 설치 방법까지 소개하겠습니다.\n \n \n  Abelssoft ScreenVideo 주요 기능\n1. 사용자 친화적인 인터페이스\n\n\nAbelssoft ScreenVideo는 모두를 위한 직관적인 화면 녹화 도구입니다. 복잡한 설정이나 메뉴를 찾아 헤맬 필요 없이 설치 후 바로 사용할 수 있습니다.\n단일 화면 제어 패널: 프로그램을 실행하면 핵심 기능이 한눈에 보이는 간단한 인터페이스를 제공합니다.\n사각형 선택 기능: 전체 화면이 아닌 특정 영역만 녹화할 수 있어 작업의 효율을 높여줍니다.\n단축키 설정: 사용자가 원하는 키 조합을 통해 녹화를 시작하거나 일시 중지하는 등의 빠른 제어가 가능합니다.\n이 기능은 특히 튜토리얼 제작, 소프트웨어 테스트, 비즈니스 프레젠테이션 등에서 큰 도움을 줍니다. 단축키를 활용하면 작업의 흐름을 방해하지 않고 자연스럽게 화면을 녹화할 수 있습니다.\n2. 고품질 영상 녹화\n\n\n영상의 품질은 화면 녹화 프로그램을 평가하는 중요한 기준입니다. Abelssoft ScreenVideo는 고화질 녹화를 제공하면서도 저장 용량을 효율적으로 관리할 수 있도록 다양한 설정을 지원합니다.\n5가지 품질 프로파일: 저화질부터 고화질까지 사용 목적에 따라 최적의 품질을 선택할 수 있습니다.\n맞춤형 설정: 프레임 레이트, 비트레이트, 해상도를 세부적으로 조정할 수 있습니다.\n지원 포맷: 녹화된 영상은 MP4, WEBM, WMV 포맷으로 저장되며, 원하는 포맷을 선택할 수 있습니다.\n\n\n \n 예를 들어, 강의 영상을 제작할 때는 고화질과 함께 안정적인 프레임 레이트가 중요하지만, 게임 녹화의 경우 용량을 고려해 저용량-고화질 옵션을 선택하면 효율적입니다. 또한, 비트레이트 조정을 통해 영상의 크기를 최적화할 수 있어 장시간 녹화 시에도 부담이 없습니다.\n3. 다재다능한 녹화 기능\nAbelssoft ScreenVideo는 다양한 상황에서 활용할 수 있는 강력한 기능을 제공합니다.\n1) 게임 플레이 녹화\n게임 화면을 실시간으로 녹화하고, 중요한 장면은 단축키를 사용해 빠르게 기록할 수 있습니다. 고해상도 옵션을 통해 선명한 게임 플레이 영상을 저장할 수 있어 유튜브 업로드용으로도 적합합니다.\n2) 강의 및 튜토리얼 제작\n프로그램이나 소프트웨어 사용법을 설명하는 영상을 만들 때 특정 화면만 선택하여 녹화할 수 있습니다. 마우스 커서 강조 기능이나 텍스트 오버레이를 사용하면 더욱 이해하기 쉬운 강의 영상을 제작할 수 있습니다.\n3) 소프트웨어 테스트 및 개발\n소프트웨어 테스터나 개발자는 Abelssoft ScreenVideo의 녹화 기능을 사용해 버그 리포트나 기능 시연 영상을 쉽게 제작할 수 있습니다. 특히 안드로이드 에뮬레이터 화면을 녹화할 때 세로 화면 모드로 녹화하는 기능은 매우 유용합니다.\n \n \n설치 및 무료 인증 방법\nAbelssoft ScreenVideo 2025를 무료로 사용하는 방법은 매우 간단합니다.\n아래 3개의 다운로드 링크 중에 한 곳을 통해 설치 파일을 받습니다.\n프로그램을 실행하고 설치 과정을 완료합니다.\n신규 사용자라면 이름과 이메일 주소를 입력하고 이메일 인증을 진행합니다.\n이메일로 받은 인증 링크를 클릭하면 자동으로 활성화됩니다.\n[ 다운로드 ]  링크1   링크2   링크3\n \n이 과정은 불과 몇 분이면 완료되며, 복잡한 라이센스 코드 입력이나 추가 설정은 필요 없습니다. 프로그램을 설치한 직후부터 모든 기능을 무료로 사용할 수 있습니다.\n \n마치며\nAbelssoft ScreenVideo 2025는 화면 녹화 프로그램의 새로운 기준을 제시합니다. 사용자 친화적인 인터페이스, 다양한 맞춤형 설정, 그리고 강력한 기능 덕분에 누구나 손쉽게 고화질 영상을 제작할 수 있습니다.\n특히 게임 플레이 녹화, 강의 영상 제작, 소프트웨어 테스트 등 다양한 용도로 활용할 수 있어 프리랜서, 콘텐츠 크리에이터, 개발자들에게 매우 유용한 도구입니다. 무엇보다 무료로 제공되는 프로그램이라는 점이 큰 매력입니다.\n지금 바로 Abelssoft ScreenVideo를 다운로드하고, 고화질 화면 녹화의 세계를 경험해보세요!  \nQ&A\nQ1. Abelssoft ScreenVideo는 어떤 포맷을 지원하나요?\nMP4, WEBM, WMV와 같은 인기 있는 비디오 포맷을 지원합니다. 저장된 영상은 유튜브, 페이스북 등 다양한 플랫폼에 바로 업로드할 수 있습니다.\nQ2. 프로그램은 정말 무료인가요?\n네, ScreenVideo 2025 버전은 완전 무료로 제공됩니다. 설치 후 이메일 인증만 하면 모든 기능을 사용할 수 있습니다.\nQ3. 녹화 영상의 품질을 조정할 수 있나요?\n물론입니다! 프레임 레이트, 해상도, 비트레이트 등 다양한 품질 설정을 제공하여 용도에 맞게 조정할 수 있습니다.",
        "guid": "https://muzbox.tistory.com/483513",
        "categories": [
          "NEWS/프리웨어 뉴스",
          "abelssoft screenvideo",
          "mp4 화면 녹화",
          "screenvideo",
          "강의 영상 제작",
          "게임 화면 녹화",
          "고화질 녹화",
          "무료 화면 녹화",
          "비디오 포맷 지원",
          "화면 녹화 프로그램",
          "화면 영역 선택"
        ],
        "isoDate": "2024-12-16T23:43:50.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "스마트폰의 게임 체인저, 실리콘-카본 배터리",
        "link": "https://muzbox.tistory.com/483512",
        "pubDate": "Mon, 16 Dec 2024 10:41:28 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483512#entry483512comment",
        "content": "<p data-ke-size=\"size18\">스마트폰&nbsp;배터리&nbsp;기술의&nbsp;새로운&nbsp;혁명!&nbsp;실리콘-카본&nbsp;배터리가&nbsp;기존&nbsp;리튬이온&nbsp;배터리를&nbsp;넘어&nbsp;더&nbsp;빠르고&nbsp;오래가는&nbsp;성능을&nbsp;제공합니다.&nbsp;삼성과&nbsp;애플의&nbsp;대응&nbsp;및&nbsp;주요&nbsp;제조사의&nbsp;혁신&nbsp;사례를&nbsp;확인하세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1024\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/cskfUR/btsLjdmBIm9/EM3QtbwmAkHdNqtT4l3W00/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/cskfUR/btsLjdmBIm9/EM3QtbwmAkHdNqtT4l3W00/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/cskfUR/btsLjdmBIm9/EM3QtbwmAkHdNqtT4l3W00/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcskfUR%2FbtsLjdmBIm9%2FEM3QtbwmAkHdNqtT4l3W00%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"스마트폰의 게임 체인저, 실리콘-카본 배터리\" width=\"500\" height=\"500\" data-origin-width=\"1024\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;스마트폰 구매를 고민할 때 대부분의 사람들이 주목하는 것은 화면 해상도, 카메라 성능, 혹은 최신 프로세서일 것입니다. 그러나 정작 일상에서 우리를 가장 괴롭히는 것은 <b>배터리 성능</b> 문제입니다. 하루를 온전히 스마트폰과 함께하기 위해서는 자주 충전을 해야 하거나 보조 배터리에 의존해야 하는 경우가 많습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">이런 문제를 해결하기 위해 <b>실리콘-카본 배터리</b>라는 새로운 기술이 등장하며, 스마트폰 배터리의 한계를 극복하려는 노력이 본격화되고 있습니다. 오늘은 실리콘-카본 배터리의 기술적 배경과 주요 제조사들의 대응, 그리고 소비자가 체감할 변화까지 구체적으로 살펴보겠습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>실리콘-카본 배터리의 핵심 기술</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">기존 리튬이온 배터리의 한계</span></h3>\n<p data-ke-size=\"size18\">리튬이온 배터리는 지난 수십 년간 스마트폰, 노트북, 전기차 등 다양한 분야에서 표준으로 자리 잡은 기술입니다. 그러나 기술 발전에도 불구하고 다음과 같은 한계가 명확합니다:</p>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li><b>성능 저하</b>: 충&middot;방전 주기가 늘어날수록 배터리 수명이 빠르게 줄어듦.</li>\n<li><b>충전 속도</b>: 고속 충전을 지원하더라도 발열 문제로 인해 한계 존재.</li>\n<li><b>공간 활용성</b>: 대용량 배터리를 탑재하려면 스마트폰의 두께와 무게가 증가.</li>\n</ul>\n<p data-ke-size=\"size18\">이러한 문제는 우리가 스마트폰을 오래 사용할수록 더욱 체감하게 됩니다. 특히, 최신 스마트폰이 더 많은 기능과 고사양 화면을 갖추면서 배터리 성능의 중요성이 더욱 강조되고 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">실리콘-카본 배터리란 무엇인가?</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"실리콘카본배터리.jpg\" data-origin-width=\"640\" data-origin-height=\"350\"><span data-url=\"https://blog.kakaocdn.net/dn/dmv8uA/btsLkbVIP2W/RCzV49MabYRRjDDWbvQU7k/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dmv8uA/btsLkbVIP2W/RCzV49MabYRRjDDWbvQU7k/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dmv8uA/btsLkbVIP2W/RCzV49MabYRRjDDWbvQU7k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdmv8uA%2FbtsLkbVIP2W%2FRCzV49MabYRRjDDWbvQU7k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"실리콘카본배터리.jpg\" data-origin-width=\"640\" data-origin-height=\"350\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">실리콘-카본 배터리는 기존 리튬이온 배터리의 <b>음극 물질</b>을 흑연에서 실리콘으로 대체한 기술입니다. 실리콘은 흑연보다 에너지를 최대 10배 더 저장할 수 있기 때문에 <b>배터리 용량</b>과 <b>전력 밀도</b>가 크게 향상됩니다.</p>\n<p data-ke-size=\"size18\">하지만 실리콘은 충&middot;방전 과정에서 부피가 팽창하고 수축하면서 물리적 손상이 쉽게 발생하는 단점이 있었습니다. 이를 극복하기 위해 실리콘에 카본을 혼합해 내구성을 높이고 안정성을 확보했습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">기술적 장점</span></h3>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li><b>에너지 밀도 증가</b>: 동일한 크기의 배터리로 더 많은 전력을 저장 가능.</li>\n<li><b>고속 충전 지원</b>: 높은 충전 전력을 처리할 수 있어 빠른 시간 안에 충전 가능.</li>\n<li><b>더 긴 수명</b>: 실리콘-카본 배터리는 충&middot;방전 시 소재의 안정성을 유지해 수명이 더 길어짐.</li>\n<li><b>스마트폰 크기와 무게 감소</b>: 대용량 배터리도 더 얇고 가벼운 디자인으로 구현 가능.</li>\n</ul>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  주요 제조사의 도입 사례</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">중국 제조사의 선두 주자</span></h3>\n<p data-ke-size=\"size18\">중국 제조사들은 혁신적인 기술 도입에 적극적으로 나서며 <b>실리콘-카본 배터리</b>를 이미 상용화하고 있습니다. 대표적인 사례로 <b>Realme GT7 Pro</b>, <b>Xiaomi 15 시리즈</b>, <b>OnePlus 13</b> 등을 들 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Realme GT7 Pro Xiaomi 15.jpg\" data-origin-width=\"1032\" data-origin-height=\"642\"><span data-url=\"https://blog.kakaocdn.net/dn/bbtHW4/btsLjklFOyE/xdaWRlfh5fS2EKqEKrswc0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bbtHW4/btsLjklFOyE/xdaWRlfh5fS2EKqEKrswc0/img.jpg\" data-alt=\"&amp;lt; Realme GT7 Pro ,&amp;nbsp; Xiaomi 15 &amp;gt;\"><img src=\"https://blog.kakaocdn.net/dn/bbtHW4/btsLjklFOyE/xdaWRlfh5fS2EKqEKrswc0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbbtHW4%2FbtsLjklFOyE%2FxdaWRlfh5fS2EKqEKrswc0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Realme GT7 Pro, Xiaomi 15\" width=\"700\" height=\"435\" data-filename=\"Realme GT7 Pro Xiaomi 15.jpg\" data-origin-width=\"1032\" data-origin-height=\"642\"/></span><figcaption>&lt; Realme GT7 Pro ,&nbsp; Xiaomi 15 &gt;</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">이들 제품의 특징은 다음과 같습니다:</p>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li><b>대용량 배터리</b>: 6,500mAh 이상의 대용량 배터리를 탑재.</li>\n<li><b>초고속 충전 지원</b>: 최대 120W 이상의 충전 속도로 15분 내에 완전 충전 가능.</li>\n<li><b>슬림한 디자인 유지</b>: 대용량 배터리에도 불구하고 무게와 두께를 줄임.</li>\n</ul>\n<p data-ke-size=\"size18\">이외에도 OPPO, Vivo, iQOO 같은 브랜드들도 빠르게 실리콘-카본 배터리를 채택하며, 글로벌 시장에서 주목받고 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">삼성과 애플의 느린 대응</span></h3>\n<h4 data-ke-size=\"size20\"><i><b>삼성의 현실: 혁신의 정체</b></i></h4>\n<p data-ke-size=\"size18\">삼성은 현재 세계 스마트폰 시장에서 가장 강력한 브랜드 중 하나입니다. 하지만 <b>갤럭시 S25 시리즈</b>와 관련된 유출 정보를 살펴보면, <b>실리콘-카본 배터리</b> 기술을 적용할 계획이 보이지 않습니다. 삼성은 여전히 리튬이온 배터리에 의존하며, 기존의 소프트웨어 최적화와 배터리 관리 기술로 배터리 문제를 해결하려는 접근을 유지하고 있습니다.</p>\n<p data-ke-size=\"size18\">이러한 접근 방식은 스마트폰 시장에서 더 이상 충분하지 않을 수 있습니다. 중국 제조사들이 이미 6,000mAh 이상의 대용량 배터리와 120W 이상의 충전 속도를 도입하고 있는 상황에서, 삼성의 상대적 정체는 시장 점유율을 위협할 가능성이 큽니다.</p>\n<h4 data-ke-size=\"size20\"><i><b>애플의 전략: 천천히, 그러나 안정적으로</b></i></h4>\n<p data-ke-size=\"size18\">애플은 항상 보수적인 기술 도입으로 유명합니다. 그러나 최근 <b>아이폰 17 시리즈</b>에 대한 소문을 보면, 실리콘-카본 배터리와 같은 획기적인 변화는 기대하기 어렵습니다. 대신 애플은 기존 리튬이온 배터리의 <b>충전 효율</b>과 <b>수명 관리</b>를 개선하는 데 초점을 맞추고 있습니다.</p>\n<p data-ke-size=\"size18\">예를 들어, 애플은 소프트웨어를 통해 충전 속도를 자동으로 조절해 배터리의 장기적인 수명을 연장하는 기능을 제공하고 있습니다. 하지만 이런 접근은 경쟁사의 대규모 기술 혁신과 비교했을 때 소비자들에게 매력적으로 보이지 않을 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  소비자에게 주는 의미</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">더 나은 사용자 경험 제공</span></h3>\n<p data-ke-size=\"size18\">실리콘-카본 배터리는 소비자들의 일상적인 스마트폰 사용 경험을 크게 바꿀 수 있는 잠재력을 가지고 있습니다. 다음은 소비자들이 체감할 주요 혜택입니다:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>더 긴 사용 시간</b>: 하루 종일 충전 없이도 스마트폰을 사용할 수 있어 더 큰 편리함 제공.</li>\n<li><b>더 빠른 충전</b>: 초고속 충전을 통해 아침 준비 시간 동안 하루를 사용할 수 있는 배터리 충전 가능.</li>\n<li><b>더 오래가는 기기 수명</b>: 배터리의 성능 저하가 줄어들어 기기의 교체 주기를 연장.</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">경쟁 심화가 가져오는 기술 발전</span></h3>\n<p data-ke-size=\"size18\">중국 제조사들의 빠른 기술 도입은 삼성과 애플에게도 큰 압박으로 작용하고 있습니다. 이로 인해 글로벌 스마트폰 시장은 더욱 치열해질 것이며, 결국 소비자는 더 나은 제품을 더 빠르게 접할 수 있을 것입니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size18\">스마트폰의 주요 혁신 포인트가 카메라나 프로세서에서 <b>배터리 기술</b>로 이동하고 있습니다. <b>실리콘-카본 배터리</b>는 기존 리튬이온 배터리의 한계를 뛰어넘으며 새로운 표준이 될 가능성이 높습니다. 앞으로 삼성과 애플이 어떻게 이 기술에 대응할지 주목되며, 소비자들은 치열한 경쟁 속에서 더욱 뛰어난 스마트폰을 기대할 수 있습니다.</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\">Q&amp;A</h2>\n<p data-ke-size=\"size18\"><b>1. 실리콘-카본 배터리는 기존 기술보다 얼마나 더 나은가요?</b><br />실리콘-카본 배터리는 기존 리튬이온 배터리보다 최대 10배의 에너지를 저장할 수 있으며, 충전 속도와 수명에서도 월등히 뛰어납니다.</p>\n<p data-ke-size=\"size18\"><b>2. 삼성과 애플은 이 기술을 왜 아직 도입하지 않았나요?</b><br />삼성과 애플은 안정성을 중시하는 접근 방식을 취하고 있으며, 기술의 성숙도를 확인한 후 신기술을 도입하는 전략을 유지하고 있습니다.</p>\n<p data-ke-size=\"size18\"><b>3. 실리콘-카본 배터리를 사용한 스마트폰을 어디서 구매할 수 있나요?</b><br />Realme, Xiaomi, OPPO 등 중국 브랜드에서 이미 실리콘-카본 배터리를 탑재한 스마트폰을 출시했으며, 곧 글로벌 시장에서도 쉽게 만나볼 수 있을 것입니다.</p>",
        "contentSnippet": "스마트폰 배터리 기술의 새로운 혁명! 실리콘-카본 배터리가 기존 리튬이온 배터리를 넘어 더 빠르고 오래가는 성능을 제공합니다. 삼성과 애플의 대응 및 주요 제조사의 혁신 사례를 확인하세요!\n\n\n \n 스마트폰 구매를 고민할 때 대부분의 사람들이 주목하는 것은 화면 해상도, 카메라 성능, 혹은 최신 프로세서일 것입니다. 그러나 정작 일상에서 우리를 가장 괴롭히는 것은 배터리 성능 문제입니다. 하루를 온전히 스마트폰과 함께하기 위해서는 자주 충전을 해야 하거나 보조 배터리에 의존해야 하는 경우가 많습니다.\n \n이런 문제를 해결하기 위해 실리콘-카본 배터리라는 새로운 기술이 등장하며, 스마트폰 배터리의 한계를 극복하려는 노력이 본격화되고 있습니다. 오늘은 실리콘-카본 배터리의 기술적 배경과 주요 제조사들의 대응, 그리고 소비자가 체감할 변화까지 구체적으로 살펴보겠습니다.\n \n실리콘-카본 배터리의 핵심 기술\n기존 리튬이온 배터리의 한계\n리튬이온 배터리는 지난 수십 년간 스마트폰, 노트북, 전기차 등 다양한 분야에서 표준으로 자리 잡은 기술입니다. 그러나 기술 발전에도 불구하고 다음과 같은 한계가 명확합니다:\n성능 저하: 충·방전 주기가 늘어날수록 배터리 수명이 빠르게 줄어듦.\n충전 속도: 고속 충전을 지원하더라도 발열 문제로 인해 한계 존재.\n공간 활용성: 대용량 배터리를 탑재하려면 스마트폰의 두께와 무게가 증가.\n이러한 문제는 우리가 스마트폰을 오래 사용할수록 더욱 체감하게 됩니다. 특히, 최신 스마트폰이 더 많은 기능과 고사양 화면을 갖추면서 배터리 성능의 중요성이 더욱 강조되고 있습니다.\n실리콘-카본 배터리란 무엇인가?\n\n\n \n실리콘-카본 배터리는 기존 리튬이온 배터리의 음극 물질을 흑연에서 실리콘으로 대체한 기술입니다. 실리콘은 흑연보다 에너지를 최대 10배 더 저장할 수 있기 때문에 배터리 용량과 전력 밀도가 크게 향상됩니다.\n하지만 실리콘은 충·방전 과정에서 부피가 팽창하고 수축하면서 물리적 손상이 쉽게 발생하는 단점이 있었습니다. 이를 극복하기 위해 실리콘에 카본을 혼합해 내구성을 높이고 안정성을 확보했습니다.\n기술적 장점\n에너지 밀도 증가: 동일한 크기의 배터리로 더 많은 전력을 저장 가능.\n고속 충전 지원: 높은 충전 전력을 처리할 수 있어 빠른 시간 안에 충전 가능.\n더 긴 수명: 실리콘-카본 배터리는 충·방전 시 소재의 안정성을 유지해 수명이 더 길어짐.\n스마트폰 크기와 무게 감소: 대용량 배터리도 더 얇고 가벼운 디자인으로 구현 가능.\n \n  주요 제조사의 도입 사례\n중국 제조사의 선두 주자\n중국 제조사들은 혁신적인 기술 도입에 적극적으로 나서며 실리콘-카본 배터리를 이미 상용화하고 있습니다. 대표적인 사례로 Realme GT7 Pro, Xiaomi 15 시리즈, OnePlus 13 등을 들 수 있습니다.\n< Realme GT7 Pro ,  Xiaomi 15 >\n\n\n \n이들 제품의 특징은 다음과 같습니다:\n대용량 배터리: 6,500mAh 이상의 대용량 배터리를 탑재.\n초고속 충전 지원: 최대 120W 이상의 충전 속도로 15분 내에 완전 충전 가능.\n슬림한 디자인 유지: 대용량 배터리에도 불구하고 무게와 두께를 줄임.\n이외에도 OPPO, Vivo, iQOO 같은 브랜드들도 빠르게 실리콘-카본 배터리를 채택하며, 글로벌 시장에서 주목받고 있습니다.\n삼성과 애플의 느린 대응\n삼성의 현실: 혁신의 정체\n삼성은 현재 세계 스마트폰 시장에서 가장 강력한 브랜드 중 하나입니다. 하지만 갤럭시 S25 시리즈와 관련된 유출 정보를 살펴보면, 실리콘-카본 배터리 기술을 적용할 계획이 보이지 않습니다. 삼성은 여전히 리튬이온 배터리에 의존하며, 기존의 소프트웨어 최적화와 배터리 관리 기술로 배터리 문제를 해결하려는 접근을 유지하고 있습니다.\n이러한 접근 방식은 스마트폰 시장에서 더 이상 충분하지 않을 수 있습니다. 중국 제조사들이 이미 6,000mAh 이상의 대용량 배터리와 120W 이상의 충전 속도를 도입하고 있는 상황에서, 삼성의 상대적 정체는 시장 점유율을 위협할 가능성이 큽니다.\n애플의 전략: 천천히, 그러나 안정적으로\n애플은 항상 보수적인 기술 도입으로 유명합니다. 그러나 최근 아이폰 17 시리즈에 대한 소문을 보면, 실리콘-카본 배터리와 같은 획기적인 변화는 기대하기 어렵습니다. 대신 애플은 기존 리튬이온 배터리의 충전 효율과 수명 관리를 개선하는 데 초점을 맞추고 있습니다.\n예를 들어, 애플은 소프트웨어를 통해 충전 속도를 자동으로 조절해 배터리의 장기적인 수명을 연장하는 기능을 제공하고 있습니다. 하지만 이런 접근은 경쟁사의 대규모 기술 혁신과 비교했을 때 소비자들에게 매력적으로 보이지 않을 수 있습니다.\n \n \n  소비자에게 주는 의미\n더 나은 사용자 경험 제공\n실리콘-카본 배터리는 소비자들의 일상적인 스마트폰 사용 경험을 크게 바꿀 수 있는 잠재력을 가지고 있습니다. 다음은 소비자들이 체감할 주요 혜택입니다:\n더 긴 사용 시간: 하루 종일 충전 없이도 스마트폰을 사용할 수 있어 더 큰 편리함 제공.\n더 빠른 충전: 초고속 충전을 통해 아침 준비 시간 동안 하루를 사용할 수 있는 배터리 충전 가능.\n더 오래가는 기기 수명: 배터리의 성능 저하가 줄어들어 기기의 교체 주기를 연장.\n경쟁 심화가 가져오는 기술 발전\n중국 제조사들의 빠른 기술 도입은 삼성과 애플에게도 큰 압박으로 작용하고 있습니다. 이로 인해 글로벌 스마트폰 시장은 더욱 치열해질 것이며, 결국 소비자는 더 나은 제품을 더 빠르게 접할 수 있을 것입니다.\n \n \n마치며\n스마트폰의 주요 혁신 포인트가 카메라나 프로세서에서 배터리 기술로 이동하고 있습니다. 실리콘-카본 배터리는 기존 리튬이온 배터리의 한계를 뛰어넘으며 새로운 표준이 될 가능성이 높습니다. 앞으로 삼성과 애플이 어떻게 이 기술에 대응할지 주목되며, 소비자들은 치열한 경쟁 속에서 더욱 뛰어난 스마트폰을 기대할 수 있습니다.\nQ&A\n1. 실리콘-카본 배터리는 기존 기술보다 얼마나 더 나은가요?\n실리콘-카본 배터리는 기존 리튬이온 배터리보다 최대 10배의 에너지를 저장할 수 있으며, 충전 속도와 수명에서도 월등히 뛰어납니다.\n2. 삼성과 애플은 이 기술을 왜 아직 도입하지 않았나요?\n삼성과 애플은 안정성을 중시하는 접근 방식을 취하고 있으며, 기술의 성숙도를 확인한 후 신기술을 도입하는 전략을 유지하고 있습니다.\n3. 실리콘-카본 배터리를 사용한 스마트폰을 어디서 구매할 수 있나요?\nRealme, Xiaomi, OPPO 등 중국 브랜드에서 이미 실리콘-카본 배터리를 탑재한 스마트폰을 출시했으며, 곧 글로벌 시장에서도 쉽게 만나볼 수 있을 것입니다.",
        "guid": "https://muzbox.tistory.com/483512",
        "categories": [
          "NEWS/IT 뉴스",
          "고속 충전",
          "리튬이온 배터리",
          "배터리 발전",
          "배터리 수명",
          "삼성 애플",
          "스마트폰 기술",
          "스마트폰 배터리",
          "실리콘-카본 배터리",
          "중국 스마트폰",
          "혁신 기술"
        ],
        "isoDate": "2024-12-16T01:41:28.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "2025년 IT 블로그 유입량 폭발 전략 수립, GPT 프롬프트 기법",
        "link": "https://muzbox.tistory.com/483511",
        "pubDate": "Fri, 13 Dec 2024 10:52:49 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483511#entry483511comment",
        "content": "<p data-ke-size=\"size18\">2025년 IT/컴퓨팅 블로그 유입량 극대화 전략! Role Prompting, Few-Shot, Chain-of-Thought, Style Prompting을 활용한 AI 기반 콘텐츠 기획 방법을 제안합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/cZsCgu/btsLhsi3NDf/0JiyOLwQOV8CBNVYif9Jz0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cZsCgu/btsLhsi3NDf/0JiyOLwQOV8CBNVYif9Jz0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cZsCgu/btsLhsi3NDf/0JiyOLwQOV8CBNVYif9Jz0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcZsCgu%2FbtsLhsi3NDf%2F0JiyOLwQOV8CBNVYif9Jz0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"2025년 IT 블로그 유입량 폭발 전략 수립, GPT 프롬프트 기법\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">  <b>2025년 IT/컴퓨팅 블로그 운영 전략</b>은 기술 트렌드에 민감한 독자와의 연결 고리를 만드는 핵심 요소입니다. 오늘날 AI 기술이 발전하면서, 블로그 운영자들은 새로운 콘텐츠 제작 기법을 통해 유입량을 극대화할 수 있는 기회를 맞이하고 있습니다. 그중에서도 AI 프롬프트 기법은 효율적이고 창의적인 콘텐츠 생산을 가능하게 합니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">이번 글에서는 <b>Role Prompting, Few-Shot Prompting, Chain-of-Thought Prompting, Style Prompting</b>의 네 가지 기법을 중심으로, 유입량을 극대화하는 전략을 구체적으로 살펴보겠습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  Role Prompting: AI에게 역할 부여하기</b></span></h2>\n<p data-ke-size=\"size18\">Role Prompting은 AI가 특정 역할(예: 디지털 마케팅 전문가)을 맡아 관련 전략을 제시하도록 유도하는 기법입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>활용 방법</i></span></h3>\n<ol style=\"list-style-type: decimal; font-size: 16px;\" data-ke-list-type=\"decimal\">\n<li><b>AI 역할 설정</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>프롬프트에 명확한 역할을 정의합니다. 예: \"당신은 2025년 디지털 마케팅 전문가입니다.\"</li>\n</ul>\n</li>\n<li><b>핵심 질문 제시</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>구체적인 목표를 전달합니다. 예: \"블로그 유입량을 극대화하기 위해 콘텐츠 주제와 SEO 전략을 설계하세요.\"</li>\n</ul>\n</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>전략 예시</i></span></h3>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li><b>주제 선정</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>\"2025년 IT/컴퓨팅 트렌드\"</li>\n<li>\"AI와 클라우드 기술의 융합\"</li>\n</ul>\n</li>\n<li><b>SEO 최적화</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>주요 키워드: \"클라우드 컴퓨팅\", \"웹 3.0\", \"IT 혁신\"</li>\n<li>구체적인 메타디스크립션 작성: \"2025년의 클라우드 기술과 웹 3.0 트렌드를 심층 분석합니다.\"</li>\n</ul>\n</li>\n<li><b>배포 채널</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>LinkedIn, Twitter, 기술 관련 커뮤니티 활용.</li>\n<li>웹 세미나와 블로그를 연계한 마케팅.</li>\n</ul>\n</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>프롬프트 예시</i></span></h3>\n<pre id=\"code_1734053832465\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>당신은 2025년의 디지털 마케팅 전문가입니다. IT/컴퓨팅 블로그의 유입량을 극대화하기 위한 종합적인 전략을 수립해야 합니다. 다음을 고려하여 답변해 주세요:  \n1. 블로그 콘텐츠 전략: 어떤 주제와 키워드를 중심으로 작성할지.  \n2. SEO 최적화: 검색 엔진 순위를 높이기 위한 구체적인 방법.  \n3. 마케팅 채널: 어떤 SNS나 광고 플랫폼을 활용할지.  \n4. 데이터 분석: 유입량을 측정하고 개선점을 도출하는 방법.  \n5. 트렌드 반영: 2025년에 주목받는 IT/컴퓨팅 트렌드를 반영한 전략.  \n\n결과를 간결하고 실행 가능한 단계로 나누어 작성해 주세요.</code></pre>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  Few-Shot Prompting: 성공 사례 기반 학습</b></span></h2>\n<p data-ke-size=\"size18\">Few-Shot Prompting은 성공적인 사례를 통해 AI가 최적의 전략을 학습하도록 돕는 기법입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>성공 사례 활용</i></span></h3>\n<ol style=\"list-style-type: decimal; font-size: 16px;\" data-ke-list-type=\"decimal\">\n<li><b>사례 제공</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>블로그 성공 사례를 프롬프트에 포함시켜 유사한 전략을 제안하도록 유도합니다.</li>\n</ul>\n</li>\n<li><b>유사한 접근법 설계</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>제시된 사례를 기반으로 독창적인 콘텐츠 기획을 유도합니다.</li>\n</ul>\n</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>사례 적용</i></span></h3>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li><b>사례 1</b>:\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li><b>주제</b>: \"클라우드 컴퓨팅 초보자를 위한 가이드\"</li>\n<li><b>전략</b>: 초보자 중심의 콘텐츠와 핵심 키워드 활용.</li>\n</ul>\n</li>\n<li><b>사례 2</b>:\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li><b>주제</b>: \"IT 기술 트렌드 2025\"</li>\n<li><b>전략</b>: 심층 분석 및 기술 커뮤니티 공유.</li>\n</ul>\n</li>\n</ul>\n<p data-ke-size=\"size18\">이 사례를 기반으로 <b>\"2025년 주목할 IT 기술 TOP 10\"</b> 같은 주제를 기획하고 SEO 키워드와 데이터를 포함한 전략을 수립할 수 있습니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>프롬프트 예시</i></span></h3>\n<pre id=\"code_1734053868991\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>### 사례 1:  \n- **주제**: 클라우드 컴퓨팅 초보자를 위한 가이드  \n- **전략**:  \n  1. 초보자 친화적인 제목 작성: \"클라우드 컴퓨팅이란? 쉽게 이해하는 클라우드의 모든 것\"  \n  2. SEO 키워드 활용: \"클라우드 컴퓨팅\", \"클라우드 서비스란\", \"클라우드 장점\"  \n  3. 소셜 미디어 공유 캠페인 진행.  \n\n### 사례 2:  \n- **주제**: 2025년 주목해야 할 IT 기술 트렌드  \n- **전략**:  \n  1. 고급 독자를 겨냥한 심층 분석 글 작성.  \n  2. SEO 키워드 활용: \"IT 트렌드 2025\", \"미래 IT 기술\", \"AI 기술 전망\"  \n  3. LinkedIn과 Tech 포럼에서 게시물 공유.  \n\n위 사례를 참고하여, 2025년 IT/컴퓨팅 블로그 유입량을 극대화하기 위한 새로운 전략을 제안해 주세요. 다음 항목을 포함하세요:  \n- 제안할 블로그 주제  \n- 사용할 SEO 키워드  \n- 마케팅 및 공유 전략  \n- 성공을 측정하기 위한 방법</code></pre>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  Chain-of-Thought Prompting: 단계적 사고 적용</b></span></h2>\n<p data-ke-size=\"size18\">Chain-of-Thought Prompting은 복잡한 문제를 논리적으로 나누어 각 단계별 전략을 구체화하는 방법입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>단계별 접근</i></span></h3>\n<ol style=\"list-style-type: decimal; font-size: 16px;\" data-ke-list-type=\"decimal\">\n<li><b>목표 설정</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>월 50,000명의 유입량 달성.</li>\n</ul>\n</li>\n<li><b>주제 선택</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>\"생성 AI와 IT 인프라 통합\", \"IoT와 클라우드의 미래\".</li>\n</ul>\n</li>\n<li><b>SEO 전략</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>키워드: \"클라우드 AI\", \"IT 혁신 사례\".</li>\n<li>구조화된 콘텐츠: 블로그 + 동영상 콘텐츠.</li>\n</ul>\n</li>\n<li><b>콘텐츠 제작 및 배포</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>블로그 포스팅, 인포그래픽 제작, 기술 포럼 공유.</li>\n</ul>\n</li>\n<li><b>데이터 분석 및 피드백</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>Google Analytics 활용, 유입량 분석 및 A/B 테스트.</li>\n</ul>\n</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>프롬프트 예시</i></span></h3>\n<pre id=\"code_1734053885446\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>2025년 IT/컴퓨팅 블로그의 유입량을 극대화하기 위해 체계적인 접근 방식을 제안해 주세요. 다음과 같은 단계를 통해 논리적으로 설명해 주세요:  \n\n1. **목표 설정**  \n   - 블로그 유입량 목표를 설정합니다. (예: 월 방문자 수 50,000명)  \n\n2. **목표 달성을 위한 주제 선택**  \n   - IT/컴퓨팅 분야에서 2025년에 가장 주목받을 주제를 제시하고, 이를 선택한 이유를 설명합니다.  \n   - 예: \"생성 AI와 IT 인프라 통합\", \"웹 3.0 기술의 진화\"  \n\n3. **SEO 및 키워드 전략**  \n   - 유입량 증가를 위한 효과적인 SEO 키워드와 메타데이터 작성 방법을 제안합니다.  \n   - 예: \"IT 혁신 사례\", \"클라우드 컴퓨팅 트렌드\", \"AI 자동화 도구\"  \n\n4. **콘텐츠 제작**  \n   - 선택된 주제와 SEO 전략에 따라 콘텐츠를 작성하는 방법과 콘텐츠 포맷을 제안합니다.  \n   - 예: \"블로그 포스팅\", \"인포그래픽\", \"동영상 콘텐츠\"  \n\n5. **마케팅 및 배포**  \n   - 유입량을 극대화하기 위해 소셜 미디어 및 기타 채널에서 배포할 방법을 설명합니다.  \n   - 예: LinkedIn, Twitter, 기술 커뮤니티 포럼 활용  \n\n6. **데이터 분석 및 피드백**  \n   - 블로그 유입량을 분석하고 전략을 개선하기 위한 데이터 수집 및 피드백 활용 방법을 제시합니다.  \n   - 예: Google Analytics, A/B 테스트  \n\n각 단계에 대해 세부적인 실행 계획과 이유를 설명해 주세요. 모든 단계가 연계되어 최종 목표를 달성할 수 있도록 작성해 주세요.</code></pre>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>✨ Style Prompting: 독자 맞춤형 콘텐츠 제작</b></span></h2>\n<p data-ke-size=\"size18\">Style Prompting은 대상 독자에 맞춘 콘텐츠 스타일을 설계하여 더 나은 독자 경험을 제공합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>스타일 설계</i></span></h3>\n<ol style=\"list-style-type: decimal; font-size: 16px;\" data-ke-list-type=\"decimal\">\n<li><b>대상 독자 정의</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>IT 전문가와 기술 초보자 모두를 타겟팅.</li>\n</ul>\n</li>\n<li><b>콘텐츠 포맷</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>명확하고 간결한 섹션 구성.</li>\n<li>이미지, 차트, 코드 스니펫 활용.</li>\n</ul>\n</li>\n<li><b>SEO 전략</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>키워드와 메타 태그 활용.</li>\n</ul>\n</li>\n<li><b>전달 방식</b>\n<ul style=\"list-style-type: disc; font-size: 16px;\" data-ke-list-type=\"disc\">\n<li>친근한 어조와 실생활 예시 사용.</li>\n</ul>\n</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i>프롬프트 예시</i></span></h3>\n<pre id=\"code_1734053897291\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>당신은 2025년 IT/컴퓨팅 블로그를 운영하며 유입량을 극대화하고자 합니다. 다음 조건에 맞는 블로그 콘텐츠 전략을 제안해 주세요:  \n\n1. **스타일**:  \n   - 독자가 전문적이면서도 친근하게 느낄 수 있는 어조를 사용합니다.  \n   - 복잡한 기술 용어는 초보 독자도 이해할 수 있도록 간단하고 명확하게 설명합니다.  \n\n2. **포맷**:  \n   - 블로그 포스팅은 짧고 간결한 섹션으로 나누고, 각 섹션에 시각적 요소(이미지, 차트, 코드 스니펫)를 포함합니다.  \n   - 읽기 쉬운 글머리 기호와 숫자 목록을 사용합니다.  \n\n3. **대상 독자**:  \n   - IT 전문가와 기술에 관심이 있는 일반 독자를 모두 타겟으로 합니다.  \n   - 초보와 전문가 모두에게 유용한 정보를 제공하는 균형 잡힌 콘텐츠를 제안합니다.  \n\n4. **전달 방식**:  \n   - 독자와 직접 대화하듯이 글을 작성하며, 실생활 예시를 포함합니다.  \n   - 예: \"2025년에 주목해야 할 클라우드 컴퓨팅 트렌드는 무엇일까요? 지금 알아보세요!\"  \n\n5. **SEO 전략**:  \n   - 선택된 키워드와 메타 태그를 기반으로, 검색 엔진에 최적화된 제목과 부제목을 작성합니다.  \n   - 예: \"2025년 IT 트렌드 분석: AI, 클라우드, 그리고 웹 3.0\"  \n\n위의 스타일 조건을 반영하여 블로그 콘텐츠를 기획하는 방법과 실제 글의 구성 예제를 제안해 주세요.</code></pre>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/DEyW5/btsLho10O8w/SFmQcKIGAvHPLn80Pk5pVk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/DEyW5/btsLho10O8w/SFmQcKIGAvHPLn80Pk5pVk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/DEyW5/btsLho10O8w/SFmQcKIGAvHPLn80Pk5pVk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FDEyW5%2FbtsLho10O8w%2FSFmQcKIGAvHPLn80Pk5pVk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"IT 블로그 전략 수립, GPT 프롬프트 기법\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size18\">&nbsp;  2025년 IT/컴퓨팅 블로그 운영은 AI 프롬프트 기법을 활용해 더 큰 유입량을 달성할 수 있는 가능성을 열어줍니다. Role Prompting, Few-Shot Prompting, Chain-of-Thought Prompting, Style Prompting은 각각의 장점을 살려 창의적이고 체계적인 콘텐츠를 제작할 수 있습니다. 이를 바탕으로 목표 유입량을 달성하고, 기술 트렌드에 맞춘 블로그 운영을 성공적으로 이끌어보세요.</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q&amp;A</b></span></h2>\n<p data-ke-size=\"size18\"><b>Q1. AI 프롬프트는 블로그 운영에 어떻게 활용되나요?</b><br />AI 프롬프트는 콘텐츠 주제를 설정하고, SEO 전략을 기획하며, 독자 맞춤형 콘텐츠를 제작하는 데 유용합니다.</p>\n<p data-ke-size=\"size18\"><b>Q2. 2025년 주목할 IT/컴퓨팅 트렌드는 무엇인가요?</b><br />생성 AI, 웹 3.0, 클라우드 컴퓨팅, IoT가 주요 트렌드로 주목받고 있습니다.</p>\n<p data-ke-size=\"size18\"><b>Q3. 유입량 증대를 위한 분석 도구는 무엇이 있나요?</b><br />Google Analytics, A/B 테스트 도구, SEO 분석 도구 등이 효과적입니다.</p>",
        "contentSnippet": "2025년 IT/컴퓨팅 블로그 유입량 극대화 전략! Role Prompting, Few-Shot, Chain-of-Thought, Style Prompting을 활용한 AI 기반 콘텐츠 기획 방법을 제안합니다.\n\n\n \n  2025년 IT/컴퓨팅 블로그 운영 전략은 기술 트렌드에 민감한 독자와의 연결 고리를 만드는 핵심 요소입니다. 오늘날 AI 기술이 발전하면서, 블로그 운영자들은 새로운 콘텐츠 제작 기법을 통해 유입량을 극대화할 수 있는 기회를 맞이하고 있습니다. 그중에서도 AI 프롬프트 기법은 효율적이고 창의적인 콘텐츠 생산을 가능하게 합니다.\n \n이번 글에서는 Role Prompting, Few-Shot Prompting, Chain-of-Thought Prompting, Style Prompting의 네 가지 기법을 중심으로, 유입량을 극대화하는 전략을 구체적으로 살펴보겠습니다.\n \n  Role Prompting: AI에게 역할 부여하기\nRole Prompting은 AI가 특정 역할(예: 디지털 마케팅 전문가)을 맡아 관련 전략을 제시하도록 유도하는 기법입니다.\n활용 방법\nAI 역할 설정\n\n프롬프트에 명확한 역할을 정의합니다. 예: \"당신은 2025년 디지털 마케팅 전문가입니다.\"\n핵심 질문 제시\n\n구체적인 목표를 전달합니다. 예: \"블로그 유입량을 극대화하기 위해 콘텐츠 주제와 SEO 전략을 설계하세요.\"\n전략 예시\n주제 선정\n\n\"2025년 IT/컴퓨팅 트렌드\"\n\"AI와 클라우드 기술의 융합\"\nSEO 최적화\n\n주요 키워드: \"클라우드 컴퓨팅\", \"웹 3.0\", \"IT 혁신\"\n구체적인 메타디스크립션 작성: \"2025년의 클라우드 기술과 웹 3.0 트렌드를 심층 분석합니다.\"\n배포 채널\n\nLinkedIn, Twitter, 기술 관련 커뮤니티 활용.\n웹 세미나와 블로그를 연계한 마케팅.\n프롬프트 예시\n당신은 2025년의 디지털 마케팅 전문가입니다. IT/컴퓨팅 블로그의 유입량을 극대화하기 위한 종합적인 전략을 수립해야 합니다. 다음을 고려하여 답변해 주세요:  \n1. 블로그 콘텐츠 전략: 어떤 주제와 키워드를 중심으로 작성할지.  \n2. SEO 최적화: 검색 엔진 순위를 높이기 위한 구체적인 방법.  \n3. 마케팅 채널: 어떤 SNS나 광고 플랫폼을 활용할지.  \n4. 데이터 분석: 유입량을 측정하고 개선점을 도출하는 방법.  \n5. 트렌드 반영: 2025년에 주목받는 IT/컴퓨팅 트렌드를 반영한 전략.  \n\n결과를 간결하고 실행 가능한 단계로 나누어 작성해 주세요.\n \n \n  Few-Shot Prompting: 성공 사례 기반 학습\nFew-Shot Prompting은 성공적인 사례를 통해 AI가 최적의 전략을 학습하도록 돕는 기법입니다.\n성공 사례 활용\n사례 제공\n\n블로그 성공 사례를 프롬프트에 포함시켜 유사한 전략을 제안하도록 유도합니다.\n유사한 접근법 설계\n\n제시된 사례를 기반으로 독창적인 콘텐츠 기획을 유도합니다.\n사례 적용\n사례 1:\n\n주제: \"클라우드 컴퓨팅 초보자를 위한 가이드\"\n전략: 초보자 중심의 콘텐츠와 핵심 키워드 활용.\n사례 2:\n\n주제: \"IT 기술 트렌드 2025\"\n전략: 심층 분석 및 기술 커뮤니티 공유.\n이 사례를 기반으로 \"2025년 주목할 IT 기술 TOP 10\" 같은 주제를 기획하고 SEO 키워드와 데이터를 포함한 전략을 수립할 수 있습니다.\n프롬프트 예시\n### 사례 1:  \n- **주제**: 클라우드 컴퓨팅 초보자를 위한 가이드  \n- **전략**:  \n  1. 초보자 친화적인 제목 작성: \"클라우드 컴퓨팅이란? 쉽게 이해하는 클라우드의 모든 것\"  \n  2. SEO 키워드 활용: \"클라우드 컴퓨팅\", \"클라우드 서비스란\", \"클라우드 장점\"  \n  3. 소셜 미디어 공유 캠페인 진행.  \n\n### 사례 2:  \n- **주제**: 2025년 주목해야 할 IT 기술 트렌드  \n- **전략**:  \n  1. 고급 독자를 겨냥한 심층 분석 글 작성.  \n  2. SEO 키워드 활용: \"IT 트렌드 2025\", \"미래 IT 기술\", \"AI 기술 전망\"  \n  3. LinkedIn과 Tech 포럼에서 게시물 공유.  \n\n위 사례를 참고하여, 2025년 IT/컴퓨팅 블로그 유입량을 극대화하기 위한 새로운 전략을 제안해 주세요. 다음 항목을 포함하세요:  \n- 제안할 블로그 주제  \n- 사용할 SEO 키워드  \n- 마케팅 및 공유 전략  \n- 성공을 측정하기 위한 방법\n \n \n  Chain-of-Thought Prompting: 단계적 사고 적용\nChain-of-Thought Prompting은 복잡한 문제를 논리적으로 나누어 각 단계별 전략을 구체화하는 방법입니다.\n단계별 접근\n목표 설정\n\n월 50,000명의 유입량 달성.\n주제 선택\n\n\"생성 AI와 IT 인프라 통합\", \"IoT와 클라우드의 미래\".\nSEO 전략\n\n키워드: \"클라우드 AI\", \"IT 혁신 사례\".\n구조화된 콘텐츠: 블로그 + 동영상 콘텐츠.\n콘텐츠 제작 및 배포\n\n블로그 포스팅, 인포그래픽 제작, 기술 포럼 공유.\n데이터 분석 및 피드백\n\nGoogle Analytics 활용, 유입량 분석 및 A/B 테스트.\n프롬프트 예시\n2025년 IT/컴퓨팅 블로그의 유입량을 극대화하기 위해 체계적인 접근 방식을 제안해 주세요. 다음과 같은 단계를 통해 논리적으로 설명해 주세요:  \n\n1. **목표 설정**  \n   - 블로그 유입량 목표를 설정합니다. (예: 월 방문자 수 50,000명)  \n\n2. **목표 달성을 위한 주제 선택**  \n   - IT/컴퓨팅 분야에서 2025년에 가장 주목받을 주제를 제시하고, 이를 선택한 이유를 설명합니다.  \n   - 예: \"생성 AI와 IT 인프라 통합\", \"웹 3.0 기술의 진화\"  \n\n3. **SEO 및 키워드 전략**  \n   - 유입량 증가를 위한 효과적인 SEO 키워드와 메타데이터 작성 방법을 제안합니다.  \n   - 예: \"IT 혁신 사례\", \"클라우드 컴퓨팅 트렌드\", \"AI 자동화 도구\"  \n\n4. **콘텐츠 제작**  \n   - 선택된 주제와 SEO 전략에 따라 콘텐츠를 작성하는 방법과 콘텐츠 포맷을 제안합니다.  \n   - 예: \"블로그 포스팅\", \"인포그래픽\", \"동영상 콘텐츠\"  \n\n5. **마케팅 및 배포**  \n   - 유입량을 극대화하기 위해 소셜 미디어 및 기타 채널에서 배포할 방법을 설명합니다.  \n   - 예: LinkedIn, Twitter, 기술 커뮤니티 포럼 활용  \n\n6. **데이터 분석 및 피드백**  \n   - 블로그 유입량을 분석하고 전략을 개선하기 위한 데이터 수집 및 피드백 활용 방법을 제시합니다.  \n   - 예: Google Analytics, A/B 테스트  \n\n각 단계에 대해 세부적인 실행 계획과 이유를 설명해 주세요. 모든 단계가 연계되어 최종 목표를 달성할 수 있도록 작성해 주세요.\n \n \n✨ Style Prompting: 독자 맞춤형 콘텐츠 제작\nStyle Prompting은 대상 독자에 맞춘 콘텐츠 스타일을 설계하여 더 나은 독자 경험을 제공합니다.\n스타일 설계\n대상 독자 정의\n\nIT 전문가와 기술 초보자 모두를 타겟팅.\n콘텐츠 포맷\n\n명확하고 간결한 섹션 구성.\n이미지, 차트, 코드 스니펫 활용.\nSEO 전략\n\n키워드와 메타 태그 활용.\n전달 방식\n\n친근한 어조와 실생활 예시 사용.\n프롬프트 예시\n당신은 2025년 IT/컴퓨팅 블로그를 운영하며 유입량을 극대화하고자 합니다. 다음 조건에 맞는 블로그 콘텐츠 전략을 제안해 주세요:  \n\n1. **스타일**:  \n   - 독자가 전문적이면서도 친근하게 느낄 수 있는 어조를 사용합니다.  \n   - 복잡한 기술 용어는 초보 독자도 이해할 수 있도록 간단하고 명확하게 설명합니다.  \n\n2. **포맷**:  \n   - 블로그 포스팅은 짧고 간결한 섹션으로 나누고, 각 섹션에 시각적 요소(이미지, 차트, 코드 스니펫)를 포함합니다.  \n   - 읽기 쉬운 글머리 기호와 숫자 목록을 사용합니다.  \n\n3. **대상 독자**:  \n   - IT 전문가와 기술에 관심이 있는 일반 독자를 모두 타겟으로 합니다.  \n   - 초보와 전문가 모두에게 유용한 정보를 제공하는 균형 잡힌 콘텐츠를 제안합니다.  \n\n4. **전달 방식**:  \n   - 독자와 직접 대화하듯이 글을 작성하며, 실생활 예시를 포함합니다.  \n   - 예: \"2025년에 주목해야 할 클라우드 컴퓨팅 트렌드는 무엇일까요? 지금 알아보세요!\"  \n\n5. **SEO 전략**:  \n   - 선택된 키워드와 메타 태그를 기반으로, 검색 엔진에 최적화된 제목과 부제목을 작성합니다.  \n   - 예: \"2025년 IT 트렌드 분석: AI, 클라우드, 그리고 웹 3.0\"  \n\n위의 스타일 조건을 반영하여 블로그 콘텐츠를 기획하는 방법과 실제 글의 구성 예제를 제안해 주세요.\n \n\n\n마치며\n   2025년 IT/컴퓨팅 블로그 운영은 AI 프롬프트 기법을 활용해 더 큰 유입량을 달성할 수 있는 가능성을 열어줍니다. Role Prompting, Few-Shot Prompting, Chain-of-Thought Prompting, Style Prompting은 각각의 장점을 살려 창의적이고 체계적인 콘텐츠를 제작할 수 있습니다. 이를 바탕으로 목표 유입량을 달성하고, 기술 트렌드에 맞춘 블로그 운영을 성공적으로 이끌어보세요.\nQ&A\nQ1. AI 프롬프트는 블로그 운영에 어떻게 활용되나요?\nAI 프롬프트는 콘텐츠 주제를 설정하고, SEO 전략을 기획하며, 독자 맞춤형 콘텐츠를 제작하는 데 유용합니다.\nQ2. 2025년 주목할 IT/컴퓨팅 트렌드는 무엇인가요?\n생성 AI, 웹 3.0, 클라우드 컴퓨팅, IoT가 주요 트렌드로 주목받고 있습니다.\nQ3. 유입량 증대를 위한 분석 도구는 무엇이 있나요?\nGoogle Analytics, A/B 테스트 도구, SEO 분석 도구 등이 효과적입니다.",
        "guid": "https://muzbox.tistory.com/483511",
        "categories": [
          "AI, 미래기술/프롬프트 다이어리",
          "2025 트렌드",
          "gpt 프롬프트",
          "IT 블로그",
          "SEO 전략",
          "디지털 마케팅",
          "블로그 성장",
          "유입 분석",
          "유입량 극대화",
          "콘텐츠 기획",
          "트래픽 증가"
        ],
        "isoDate": "2024-12-13T01:52:49.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": [
      {
        "creator": "늑돌이",
        "title": "고가 폰과 저가 폰으로 양극화한 2024년 3분기 스마트폰 시장",
        "link": "http://lazion.com/2513727",
        "pubDate": "Thu, 19 Dec 2024 10:12:52 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513727#entry2513727comment",
        "content": "<h3 data-ke-size=\"size23\">세계 스마트폰 시장이 고급 폰과 저가 폰으로 양극화하는 상황을 보이고 있습니다. 글로벌 마켓 인텔리전스 기업 GfK - An NIQ Company(지에프케이)가 2024년 3분기 스마트폰 판매 동향을 발표했습니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\"><span style=\"color: #006dd7;\"><b> 2024년 3분기 스마트폰 판매 동향</b> </span></h4>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">지에프케이가 세계 주요 60여 개국의 소매점 판매 실적 데이터 등을 바탕으로 세계 시장 규모로 확대 추계하여 발표한 자료에 따르면 2024년 7~9월 세계 스마트폰 판매량은 전년 동기 대비 3% 증가하며 1~6월에 이어 플러스 성장세를 보였습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2322375178_20241217152945_7231732262.jpg\" data-origin-width=\"640\" data-origin-height=\"272\"><span data-url=\"https://blog.kakaocdn.net/dn/perhF/btsLmWFmxX9/KPYbk3diG8RQKQ3qKkNTd1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/perhF/btsLmWFmxX9/KPYbk3diG8RQKQ3qKkNTd1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/perhF/btsLmWFmxX9/KPYbk3diG8RQKQ3qKkNTd1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FperhF%2FbtsLmWFmxX9%2FKPYbk3diG8RQKQ3qKkNTd1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"2322375178_20241217152945_7231732262.jpg\" data-origin-width=\"640\" data-origin-height=\"272\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">지역별로는 일부 신흥시장은 성장세를 보였으나 선진시장은 전년 동기 대비 소폭 감소하였습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\"><span style=\"color: #006dd7;\"><b>고가폰과 저가폰은 성장, 중가폰은 하락</b></span></h4>\n<p data-ke-size=\"size16\">가격대별로는 저가대(USD-250)의 제품이 시장 전체를 상회하는 성장세를 보였는데, 신흥시장뿐만 아니라 많은 지역에서 성장세를 보였습니다.</p>\n<p data-ke-size=\"size16\">고가대(USD500+)의 제품 또한 전체 시장을 상회하는 성장세를 보였습니다만 중가대(USD250-500) 제품군의 판매량은 전년 대비 하락했습니다. 고물가와 고금리로 인해 가처분 소득이 압박을 받으면서 중저가대에서 저가대로 수요가 이동하고 있는 것으로 추정된다고 하네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\"><span style=\"color: #006dd7;\"><b>2025년 스마트폰 시장, 전망은?</b></span></h4>\n<p data-ke-size=\"size16\">이어지는 2024년 10월에서 12월까지의 스마트폰 시장은 하락 폭이 축소되었던 작년 같은 기간과 비교해서 소폭 상할 것으로 예상됩니다만 2024년 1~9월의 성장세와 비교하면 속도는 다소 둔화될 전망이라고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다가오는 2025년에는 선진시장을 중심으로 소비 회복에 따른 훈풍을 예상하는 반면, 지금까지의 높은 성장률에 대한 반동으로 신흥시장은 성장률 상승이 어려워져 현재로서는 2024년 수준의 판매량이 예상되고 있다고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특히 미국 정권 교체에 따른 영향 등 불확실한 요인도 여전히 존재하여 시장을 주시할 것을 권하고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : GfK&nbsp;-&nbsp;An&nbsp;NIQ&nbsp;Company)</p>",
        "contentSnippet": "세계 스마트폰 시장이 고급 폰과 저가 폰으로 양극화하는 상황을 보이고 있습니다. 글로벌 마켓 인텔리전스 기업 GfK - An NIQ Company(지에프케이)가 2024년 3분기 스마트폰 판매 동향을 발표했습니다.\n \n 2024년 3분기 스마트폰 판매 동향 \n \n지에프케이가 세계 주요 60여 개국의 소매점 판매 실적 데이터 등을 바탕으로 세계 시장 규모로 확대 추계하여 발표한 자료에 따르면 2024년 7~9월 세계 스마트폰 판매량은 전년 동기 대비 3% 증가하며 1~6월에 이어 플러스 성장세를 보였습니다.\n \n\n\n \n지역별로는 일부 신흥시장은 성장세를 보였으나 선진시장은 전년 동기 대비 소폭 감소하였습니다.\n \n고가폰과 저가폰은 성장, 중가폰은 하락\n가격대별로는 저가대(USD-250)의 제품이 시장 전체를 상회하는 성장세를 보였는데, 신흥시장뿐만 아니라 많은 지역에서 성장세를 보였습니다.\n고가대(USD500+)의 제품 또한 전체 시장을 상회하는 성장세를 보였습니다만 중가대(USD250-500) 제품군의 판매량은 전년 대비 하락했습니다. 고물가와 고금리로 인해 가처분 소득이 압박을 받으면서 중저가대에서 저가대로 수요가 이동하고 있는 것으로 추정된다고 하네요.\n \n2025년 스마트폰 시장, 전망은?\n이어지는 2024년 10월에서 12월까지의 스마트폰 시장은 하락 폭이 축소되었던 작년 같은 기간과 비교해서 소폭 상할 것으로 예상됩니다만 2024년 1~9월의 성장세와 비교하면 속도는 다소 둔화될 전망이라고 합니다.\n \n다가오는 2025년에는 선진시장을 중심으로 소비 회복에 따른 훈풍을 예상하는 반면, 지금까지의 높은 성장률에 대한 반동으로 신흥시장은 성장률 상승이 어려워져 현재로서는 2024년 수준의 판매량이 예상되고 있다고 합니다.\n \n특히 미국 정권 교체에 따른 영향 등 불확실한 요인도 여전히 존재하여 시장을 주시할 것을 권하고 있습니다.\n \n \n(출처 : GfK - An NIQ Company)",
        "guid": "http://lazion.com/2513727",
        "categories": [
          "#더작은모바일/#스마트폰#PDA#PMP",
          "GfK",
          "market",
          "News",
          "Report",
          "Research",
          "smartphone"
        ],
        "isoDate": "2024-12-19T01:12:52.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "노트북에도 하드케이스? 보이아 삼성 갤럭시북5 프로360, 갤럭시북4 울트라 하드 케이스 출시",
        "link": "http://lazion.com/2513726",
        "pubDate": "Mon, 16 Dec 2024 18:52:36 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513726#entry2513726comment",
        "content": "<p data-ke-size=\"size16\">파란마당 보이아(VOIA)에서 하드 케이스를 출시했습니다. 독특하게도 삼성 갤럭시북5 프로360과 갤럭시북4 울트라 노트북PC 전용 하드 케이스입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_3551777327_20241216102310_9548222635.jpg\" data-origin-width=\"1759\" data-origin-height=\"1726\"><span data-url=\"https://blog.kakaocdn.net/dn/ArKxT/btsLkJ6qZcl/edhJkUOEoKjkppuv4hAcHK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ArKxT/btsLkJ6qZcl/edhJkUOEoKjkppuv4hAcHK/img.png\" data-alt=\"보이아 갤럭시북5 프로360 노트북 하드 케이스\"><img src=\"https://blog.kakaocdn.net/dn/ArKxT/btsLkJ6qZcl/edhJkUOEoKjkppuv4hAcHK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FArKxT%2FbtsLkJ6qZcl%2FedhJkUOEoKjkppuv4hAcHK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_3551777327_20241216102310_9548222635.jpg\" data-origin-width=\"1759\" data-origin-height=\"1726\"/></span><figcaption>보이아 갤럭시북5 프로360 노트북 하드 케이스</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특히 갤럭시북5 프로360 노트북 전용 하드 케이스는 일반 케이스보다 내구성이 높은 PC(Polycarbonate) 소재로 외부에서 오는 충격, 생활 스크래치에서 제품을 보호합니다. 특히 장착한 상태에서 최대 350도까지 회전되도록 디자인되었으며, 하단 통풍구가 있어 발열을 줄이고 논 슬립 패드 적용으로 미끄럼을 방지합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"3551777327_20241216102309_9277701945.jpg\" data-origin-width=\"1000\" data-origin-height=\"1000\"><span data-url=\"https://blog.kakaocdn.net/dn/PSZIB/btsLlLWFOo7/40e3uWGXTKK3t2uzEmlR4K/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/PSZIB/btsLlLWFOo7/40e3uWGXTKK3t2uzEmlR4K/img.jpg\" data-alt=\"보이아의 삼성 갤럭시북4 울트라 하드 케이스\"><img src=\"https://blog.kakaocdn.net/dn/PSZIB/btsLlLWFOo7/40e3uWGXTKK3t2uzEmlR4K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FPSZIB%2FbtsLlLWFOo7%2F40e3uWGXTKK3t2uzEmlR4K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"3551777327_20241216102309_9277701945.jpg\" data-origin-width=\"1000\" data-origin-height=\"1000\"/></span><figcaption>보이아의 삼성 갤럭시북4 울트라 하드 케이스</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">현재 보이아는 갤럭시북3, 4 프로, 프로360, 울트라의 하드 케이스를 판매 중이며, 갤럭시북5 프로360 하드 케이스 신제품 출시를 기념해 하드 케이스 구매 고객에게 키스킨을 무료 증정(색상 랜덤)하는 이벤트를 진행하고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">더 자세한 내용은 <a href=\"https://smartstore.naver.com/voia\" target=\"_blank\" rel=\"noopener\">보이아 공식 스마트스토어</a>에서 확인하시기 바랍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : 파란마당)</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">단단하다는 의미에서 하드(hard) 케이스로 불리는 제품들은 스마트폰 등 작은 휴대기기를 위해 나온 경우가 많았는데 요즘은 노트북 같이 더 큰 제품을 위한 종류도 늘어나고 있네요. 노트북도 하나의 패션 도구로 활용할 수 있는 만큼 겉모습을 헤치지 않는 선에서 제품을 보호할 수 있다면 좋은 해결책이 아닐까 생각합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "파란마당 보이아(VOIA)에서 하드 케이스를 출시했습니다. 독특하게도 삼성 갤럭시북5 프로360과 갤럭시북4 울트라 노트북PC 전용 하드 케이스입니다.\n보이아 갤럭시북5 프로360 노트북 하드 케이스\n\n\n \n특히 갤럭시북5 프로360 노트북 전용 하드 케이스는 일반 케이스보다 내구성이 높은 PC(Polycarbonate) 소재로 외부에서 오는 충격, 생활 스크래치에서 제품을 보호합니다. 특히 장착한 상태에서 최대 350도까지 회전되도록 디자인되었으며, 하단 통풍구가 있어 발열을 줄이고 논 슬립 패드 적용으로 미끄럼을 방지합니다.\n \n보이아의 삼성 갤럭시북4 울트라 하드 케이스\n\n\n \n현재 보이아는 갤럭시북3, 4 프로, 프로360, 울트라의 하드 케이스를 판매 중이며, 갤럭시북5 프로360 하드 케이스 신제품 출시를 기념해 하드 케이스 구매 고객에게 키스킨을 무료 증정(색상 랜덤)하는 이벤트를 진행하고 있습니다.\n \n더 자세한 내용은 보이아 공식 스마트스토어에서 확인하시기 바랍니다.\n \n(출처 : 파란마당)\n \n단단하다는 의미에서 하드(hard) 케이스로 불리는 제품들은 스마트폰 등 작은 휴대기기를 위해 나온 경우가 많았는데 요즘은 노트북 같이 더 큰 제품을 위한 종류도 늘어나고 있네요. 노트북도 하나의 패션 도구로 활용할 수 있는 만큼 겉모습을 헤치지 않는 선에서 제품을 보호할 수 있다면 좋은 해결책이 아닐까 생각합니다.",
        "guid": "http://lazion.com/2513726",
        "categories": [
          "#주변기기/#독#젠더#케이스#쿨러",
          "case",
          "GALAXYBOOK",
          "galaxybook4 ultra",
          "galaxybook5 pro360",
          "Hard Case",
          "Laptop",
          "News",
          "PC"
        ],
        "isoDate": "2024-12-16T09:52:36.000Z"
      }
    ]
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "「RULIWEB」",
        "title": "[BETA] 워게이밍의 육중한 메카닉 슈터, 스틸 헌터 베타 리뷰",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2276",
        "pubDate": "Wed, 18 Dec 2024 14:12:32 +0900",
        "author": "「RULIWEB」",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/24/12/18/193d831c62e4cacdc.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2024-12-18T05:12:32.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "전설의 귀환, 드래곤 퀘스트 III HD-2D 리메이크",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2275",
        "pubDate": "Sun, 15 Dec 2024 15:57:07 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/24/12/15/193c8ff689951ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2024-12-15T06:57:07.000Z"
      },
      {
        "creator": "(RULIWEB`Д')/",
        "title": "[NS] 우정을 파괴하며 철마는 달린다, 모모타로전철 ~…레이와에서도 국룰!~",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2274",
        "pubDate": "Fri, 13 Dec 2024 19:41:33 +0900",
        "author": "(RULIWEB`Д')/",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/24/12/13/193bf4b79344c329e.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2024-12-13T10:41:33.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "PowerShell의 NetTCPIP 모듈 사용하기",
        "link": "https://jacking75.github.io/OS_windows_20241218/",
        "pubDate": "Wed, 18 Dec 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTxXd8adLfevGIhTpR8f6koE-5kdeLYJ2-0Qv4AiTpvE0e8EL9ZjkNrYCm815zYhKPJWeVlHR9D4J9G/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/OS_windows_20241218/",
        "isoDate": "2024-12-17T15:00:00.000Z"
      },
      {
        "title": "C++ - 이종 클래스 동명 멤버 함수의 개별 오버라이드",
        "link": "https://jacking75.github.io/Cpp_20241215/",
        "pubDate": "Sun, 15 Dec 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTF5_opoIflfCwjfs5joaQX6pC3ObLkDiwrRXjV3DRiEkOITXl-2kcOQeASj1jcx7FvE-b0-FDr66ho/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/Cpp_20241215/",
        "isoDate": "2024-12-14T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": [
      {
        "title": "Ortools 사용법 및 최적화 이론(Linear Programming)",
        "link": "https://zzsza.github.io/data/2024/12/16/optimization-with-ortools/",
        "pubDate": "Mon, 16 Dec 2024 00:00:00 +0000",
        "content": "<ul>\n  <li>최적화 소프트웨어인 Ortools의 사용법과 최적화 이론(Optimization)에 대해 작성한 글입니다\n    <ul>\n      <li>키워드 : Ortools 사용법, Ortools Python, Ortools Install, Optimization, 최적화 이론, Linear Programming</li>\n    </ul>\n  </li>\n</ul>\n\n<hr />\n\n<h1 id=\"최적화란\">최적화란?</h1>\n<h2 id=\"최적화-소개-operation-research의-문제\">최적화 소개, Operation Research의 문제</h2>\n<ul>\n  <li>최적화(Optimization)는 여러 분야에서 다양하게 사용되는 개념\n    <ul>\n      <li>최적화의 정의 : <strong>주어진 제약 조건에서 목표를 가장 잘 가장 좋은(최적의) 해답을 찾는 과정</strong></li>\n      <li>데이터, AI 분야 : 머신러닝 모델의 파라미터를 찾는 과정에서 사용(Gradient Descent, 비선형 최적화)</li>\n      <li>Operation Research 분야 : 비즈니스 의사 결정 문제를 해결하는 과정에서 사용(Linear Programming, Integer Programming)</li>\n      <li>이 글에선 Operation Research 분야의 최적화를 주로 설명할 예정</li>\n    </ul>\n  </li>\n  <li>Operation Research란?\n    <ul>\n      <li>OR은 운용 과학(또는 운영 과학, 경영 과학)이라고 번역이 되는데, 수학적인 방법을 사용해 복잡한 의사결정 문제를 해결하는 학문 분야</li>\n      <li>군사 작전에서 의사 결정을 최적화하기 위해 시작했고, 여러 산업의 문제 해결에도 사용됨</li>\n    </ul>\n  </li>\n  <li>저는 회사에서 최적화 관련 프로젝트를 진행하면서 익혔고, 팀원분과 아래 프로젝트를 진행하면서 이해도가 높아졌어요\n    <ul>\n      <li>자세한 내용이 궁금하시면 아래 글을 참고해주세요</li>\n      <li>함께 프로젝트를 하며 제 최적화 역량 향상에 도움을 준 캐롯 감사해요!!!</li>\n      <li><a href=\"https://tech.socarcorp.kr/data/2022/06/10/reservation-tetris.html\">쏘카 예약을 효율적으로 - 수학적 모델링을 활용한 쏘카 예약 테트리스</a></li>\n      <li>그 외에 모빌리티 문제가 궁금하시면 <a href=\"https://github.com/zzsza/Awesome-Mobility-Machine-Learning-Contents\">Awesome-Mobility-Machine-Learning-Contents</a>을 보시면 모빌리티 산업의 논문을 확인할 수 있습니다. 꽤 많은 문제들이 데이터, AI, ML, OR로 풀 수 있는 문제들입니다</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /><br /></p>\n\n<h2 id=\"최적화로-풀-수-있는-여러-문제들\">최적화로 풀 수 있는 여러 문제들</h2>\n<ul>\n  <li>여러가지 문제들\n    <ul>\n      <li>공장의 생산 계획 최적화</li>\n      <li>물류 센터의 배송 경로 최적화</li>\n      <li>그 외에도 재고 최적화, 가격 최적화 등에도 적용될 수 있음</li>\n      <li>통신사에서 기지국, 중계기의 최적 위치 선정하기</li>\n      <li>대역폭 할당 : 트래픽에 따른 최적 자원 분배</li>\n      <li>시간표 작성 : 교사, 강의실 배정 최적화, 학생 배정</li>\n      <li>버스 노선 : 버스 경로 최적화</li>\n      <li>항공편 스케쥴링, 승무원 스케쥴링 근무 최적화</li>\n      <li>광고 플랫폼에서 광고 예산 할당, 여러 채널의 예산 최적 분배 / 입찰가 최적화, 타겟팅 최적화</li>\n      <li>모빌리티, 물류, 광고 도메인에서 많이 활용됨</li>\n    </ul>\n  </li>\n  <li>위 내용들을 Operation Research 책, 강의에선 다음과 같이 정의함\n    <ul>\n      <li><strong>수송 문제(Transportation Problem)</strong>\n        <ul>\n          <li>여러 공급지에서 여러 수요지로 물건을 운송할 때 최소 비용을 찾는 문제</li>\n          <li>예 : 세 개의 창고에서 다섯 개의 매장으로 상품을 배송할 때 운송 비용을 최소화하는 방법을 찾는 것</li>\n        </ul>\n      </li>\n      <li><strong>할당 문제(Assignment Problem)</strong>\n        <ul>\n          <li>m명의 작업자를 n개의 작업에 배정하는 문제. 각 작업자마다 각 작업에 대한 능력치가 다를 때, 전체 효율을 최대화하는 배정 방법을 찾음</li>\n          <li>예 : 6명의 직원을 5개의 프로젝트에 가장 효율적으로 배정하는 문제</li>\n        </ul>\n      </li>\n      <li><strong>네트워크 최적화(Network Optimization)</strong>\n        <ul>\n          <li>최단 경로 찾기, 최소 신장 트리 구하기 등의 문제</li>\n          <li>예 : 여러 도시를 연결하는 도로 네트워크에서 최소 비용으로 모든 도시를 연결하는 방법을 찾는 것</li>\n        </ul>\n      </li>\n      <li><strong>배낭 문제(Knapsack Problem)</strong>\n        <ul>\n          <li>제한된 용량 안에서 가장 가치 있는 물건들의 조합을 찾는 문제</li>\n          <li>예 : 무게 제한이 있는 등산 가방에 어떤 물건들을 넣을지 결정하는 것</li>\n        </ul>\n      </li>\n      <li><strong>스케줄링 계획(Scheduling Problem)</strong>\n        <ul>\n          <li>작업들의 순서와 시작 시간을 정하는 문제</li>\n          <li>예 : 공장에서 여러 제품을 생산할 때 기계 사용 순서를 최적화하는 것</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>이 글에선 최적화를 배울 때 초반에 배우는 Linear Programming(LP)에 대해서 다룸\n    <ul>\n      <li>Linear Programming : 선형 제약 조건 하에서 선형 목적함수를 최적화하는 방법</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /><br /></p>\n\n<h1 id=\"최적화-진행-프로세스\">최적화 진행 프로세스</h1>\n<ul>\n  <li>(1) 문제 정의 및 수학적 모델링</li>\n  <li>(2) 알고리즘 결정</li>\n  <li>각각의 과정은 유기적으로 진행함(수학적 모델링을 하면서 알고리즘을 결정하기도 함)</li>\n</ul>\n\n<p><br /><br /></p>\n\n<h2 id=\"1-문제-정의-및-수학적-모델링\">1) 문제 정의 및 수학적 모델링</h2>\n<h3 id=\"문제-정의\">문제 정의</h3>\n<ul>\n  <li>주어진 문제 상황을 보고, 다음 요소를 생각함</li>\n  <li>실제 현실의 문제를 수학적 모델로 변환하는 단계</li>\n  <li>최적화 문제의 구조\n    <ul>\n      <li>의사 결정 변수</li>\n      <li>목적 함수</li>\n      <li>제약 조건</li>\n    </ul>\n  </li>\n  <li><strong>의사 결정 변수(Decision Variables)</strong>\n    <ul>\n      <li>우리가 실제로 찾고자 하는 값</li>\n      <li>예 : X, Y</li>\n    </ul>\n  </li>\n  <li><strong>목적 함수(Objective Function)</strong>\n    <ul>\n      <li>최대화, 최소화하는 대상</li>\n      <li>예 : 이익 최대화, 비용 최소화</li>\n    </ul>\n  </li>\n  <li><strong>제약 조건(Constraint)</strong>\n    <ul>\n      <li>의사 결정 변수들이 만족해야 하는 조건</li>\n      <li>예 : 예산 제한, 생산 용량 제한, 한사람이 연속으로 스케줄을 진행할 수 없음</li>\n    </ul>\n  </li>\n  <li>참고로 목적 함수가 없다면, 최적화 문제가 아닌 실행 가능성 문제(Feasibility Problem), 제약 만족 문제(Constraint Satisfaction Problem, CSP)라고 할 수 있음\n    <ul>\n      <li>이 케이스는 조건을 만족하는 해가 존재하는가? 조건에 만족하는 해를 찾음</li>\n      <li>최적화 문제는 조건을 만족하는 해 중 가장 좋은 해는?</li>\n      <li>때론 최적(Optimal)이 아니여도 조건에 해당되는 값만 찾아도 괜찮은 경우가 있음</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"문제-상황-파악\">문제 상황 파악</h3>\n<ul>\n  <li>우리가 통제할 수 있는 것(의사 결정 변수)과 통제할 수 없는 것(파라미터)를 구분함\n    <ul>\n      <li>생산 계획(어떤 제품을 만드는 계획)에서 통제 가능한 것과 통제 불가능한 것을 나누면</li>\n      <li>통제 가능: 제품의 생산량</li>\n      <li>통제 불가능 : 시장 수요, 원자재 가격</li>\n    </ul>\n  </li>\n  <li>목표 설정\n    <ul>\n      <li>달성하고자 하는 것</li>\n      <li>보통 이익 최대화, 비용 최소화, 생산 시간 최소화가 많이 사용됨</li>\n    </ul>\n  </li>\n  <li>제약의 여러 종류\n    <ul>\n      <li>물리적 제약 : 저장 공간, 생산 능력</li>\n      <li>논리적 제약 : 선행 관계, 상호 배타성</li>\n      <li>정책적 제약 : 최소 주문량, 예산 제한</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"최적화-문제-예시\">최적화 문제 예시</h3>\n<ul>\n  <li>과자 공장에서 과자 A와 B를 생산 A는 개당 100원의 이익, B는 개당 150원의 이익이 발생</li>\n  <li>하루 최대 생산량은 총 200개</li>\n  <li>A는 최소 50개 이상 생산해야 함</li>\n  <li>위 문제를 정의하면\n    <ul>\n      <li>의사 결정 변수 : A의 생산량, B의 생산량</li>\n      <li>목적 함수 : 이익 최대화</li>\n      <li>제약 조건\n        <ul>\n          <li>총 생산량 제한(두 요소의 생산량을 합치면 200보다 낮아야 함)</li>\n          <li>x 생산량 제한(최소 50개 이상)</li>\n          <li>x, y는 모두 0 이상(음수 생산 불가능)</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"최적화-문제-예시-2\">최적화 문제 예시 2</h3>\n<ul>\n  <li>커피숍에서 바리스타 근무 시간표를 짜야 함</li>\n  <li>가게는 매일 9시부터 22시까지 운영</li>\n  <li>시간당 최소 2명의 바리스타가 필요</li>\n  <li>각 바리스타는 하루 8시간 근무</li>\n  <li>인건비를 최소화하고 싶음</li>\n  <li>위 문제를 요소에 맞게 정의하면\n    <ul>\n      <li>의사결정 변수: 각 바리스타의 시작 근무 시간</li>\n      <li>목적함수: 총 인건비 최소화</li>\n      <li>제약조건\n        <ul>\n          <li>매 시간 최소 인원 충족(최소 2명)</li>\n          <li>근무 시간 제한(하루 8시간)</li>\n          <li>운영 시간 준수(9시 ~ 22시)</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /><br /></p>\n\n<h3 id=\"수학적-모델링\">수학적 모델링</h3>\n<ul>\n  <li>위에 정의한 내용을 수식으로 변환하는 과정. 외국어 번역과 유사함</li>\n  <li>최적화 문제 예시 1의 과자 공장 생산량 결정 문제\n    <ul>\n      <li>의사 결정 변수 : A의 생산량, B의 생산량</li>\n      <li>목적 함수 : 100x + 150y = 이익</li>\n      <li>제약 조건\n        <ul>\n          <li>x + y &lt;= 200(총 생산량 제한)</li>\n          <li>x &gt;= 50(A 최소 생산량)</li>\n          <li>x, y &gt;= 0(음수 생산 불가능)</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>최적화 문제 예시 2의 커피숍 바리스타 스케줄링 문제\n    <ul>\n      <li>의사결정 변수 : 이것이 답이 되는가?\n        <ul>\n          <li>각 시간대별로 일하는 바리스타의 수”가 답이 될 수 있을까</li>\n          <li>수식으로는: x₁ = 9시 바리스타 수, x₂ = 10시 바리스타 수, …</li>\n        </ul>\n      </li>\n      <li>목적함수는 “우리가 최적화하고 싶은 것”을 수식으로 표현\n        <ul>\n          <li>“인건비 최소화”가 목표</li>\n          <li>시급이 10,000원이라면\n  MIN(SUM(10000(x₁ + x₂ + … + x₁₃)))</li>\n        </ul>\n      </li>\n      <li>제약조건은 ~해야한다를 찾아서 부등식이나 등식으로 바꿈\n        <ul>\n          <li>“매 시간 최소 2명이 있어야 한다”\n            <ul>\n              <li>x₁ ≥ 2, x₂ ≥ 2, … (각 시간별로)</li>\n            </ul>\n          </li>\n          <li>“한 사람은 8시간까지만 일할 수 있다”\n            <ul>\n              <li>이 조건은 조금 더 복잡하지만, 결국 “연속된 8개의 x의 합”이 관련됩니다</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>“최소 ~명이 필요하다” → x ≥ (숫자)</li>\n  <li>“최대 ~개까지 가능하다” → x ≤ (숫자)</li>\n  <li>“A와 B를 합해서 ~이하” → x + y ≤ (숫자)</li>\n  <li>“A는 B의 두 배 이상” → x ≥ 2y</li>\n</ul>\n\n<h3 id=\"만약-수학적-모델링-과정이-어렵다면\">만약 수학적 모델링 과정이 어렵다면</h3>\n<ul>\n  <li>최종 Output 먼저 생각하기\n    <ul>\n      <li>이 문제를 풀면 뭘 알고 싶은가? : 이 질문은 회사에서 커뮤니케이션을 할 때도 도움이 된다. 회의할 때 자주 활용함</li>\n      <li>물류 창고의 위치를 찾고 싶은 경우\n        <ul>\n          <li>어느 위치가 가장 좋을지를 알고 싶어요</li>\n          <li>그러면 의사결정 변수는 x 좌표, y 좌표</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>극단적인 케이스 생각하기\n    <ul>\n      <li>제약조건을 찾을 때 활용</li>\n      <li>창고가 서울에 있어도 되나요?\n        <ul>\n          <li>아뇨. 너무 땅 값이 비싸요 → 그럼 땅 값을 제약 조건으로 사용</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>처음엔 단순하게 접근하고 점진적으로 요소 추가하기\n    <ul>\n      <li>처음에 모든 현실적 제약을 고려하려고 하면 어려움</li>\n      <li>단순한 버전으로 한번 만들고, 거기서 제약을 추가하는 방식으로 문제 정의하는 것을 추천</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /><br /></p>\n\n<h2 id=\"2-알고리즘-결정\">2) 알고리즘 결정</h2>\n<ul>\n  <li>최적화를 진행할 때 선택할 수 있는 알고리즘은 다양함</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/rm6cmjncm5h2ckl/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-12- 16%20%EC%98%A4%ED%9B%84%208.33.18.png?raw=1\" /></p>\n\n<ul>\n  <li>이미지 출처 : <a href=\"https://neos-guide.org/guide/types/\">neos-guide</a></li>\n  <li>최적화 문제를 정의하고, 여러 기준을 토대로 알고리즘을 결정함\n    <ul>\n      <li>변수가 연속적(Continuous)인가? 이산값(Discrete)인가?\n        <ul>\n          <li>변수가 실수 값을 가질 수 있는 경우 : Continuous -&gt; LP 고려</li>\n          <li>변수가 정수나 2진(Binary)값을 가지는 경우 : Discrete -&gt; Integer Programming(IP), Binay Integer Programming(BIP) 고려</li>\n          <li>변수가 실수, 정수 모두 다 사용해야 한다 -&gt; Mixed Integer Programming(MIP)</li>\n        </ul>\n      </li>\n      <li>제약 조건과 목적 함수가 선형적인가?\n        <ul>\n          <li>선형적이다 : 변수가 1차식으로만 표현, 변수끼리 곱하지 않음</li>\n          <li>제약 조건과 목적 함수가 선형이면 LP/IP/MIP</li>\n          <li>비선형이 존재하면 비선형 최적화</li>\n        </ul>\n      </li>\n      <li>논리적 제약이 많은가?\n        <ul>\n          <li>복잡한 논리적 제약이 있으면 Constraint Programming(CP)</li>\n          <li>제약 조건이 없는 경우엔 Unconstrained Optimization</li>\n        </ul>\n      </li>\n      <li>불확실성 여부에 따라서 다름\n        <ul>\n          <li>불확실함이 없는 경우 : 모든 데이터를 정확히 아는 경우 =&gt; LP, IP</li>\n          <li>불확실함이 있는 경우 : Stochastic Optimization, Robust Optimization</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>또한 해 관점에서\n    <ul>\n      <li>최적해가 반드시 필요한가?</li>\n      <li>Feasible한 값도 괜찮은가?(Feasible : 제약 조건을 만족하는 해. 최적은 아니지만 조건을 충족한 값을 의미)</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /><br /></p>\n\n<h3 id=\"linear-programming\">Linear Programming</h3>\n<ul>\n  <li>선형 계획법\n    <ul>\n      <li>많은 현실 문제를 선형으로 근사할 수 있음</li>\n      <li>복잡한 최적화 문제를 해결할 때 선형 계획법이 기초가 되는 경우가 있음</li>\n      <li>위 최적화 문제 예시 둘 다 LP 문제</li>\n    </ul>\n  </li>\n  <li>LP에서 주목할 점\n    <ul>\n      <li>모든 식이 일차식(xy 같은 이차항이 없음)\n        <ul>\n          <li>선형 계획법의 기본 요구사항은 모든 식이 일차식이어야 함</li>\n          <li>수학적인 선형은 변수들이 곱해지거나 제곱되지 않고, 단순히 더해지기만 하는 것을 의미미함</li>\n          <li>선형인 식 : 3x + 2y</li>\n          <li>비선형 : xy(변수가 곱해짐) 또는 x^2(변수가 제곱)</li>\n          <li>선형성이 보장되어야 global optimum을 찾을 수 있음. 비선형이 되면 문제가 훨씬 복잡해짐</li>\n        </ul>\n      </li>\n      <li>부등호 사용\n        <ul>\n          <li>현실의 제약을 표현할 때 중요함</li>\n          <li>제약 조건을 잘 보는 것이 중요한데, 재료를 정확히 M을 사용한다보단 M 이하로 사용한다가 현실적인 옵션(재료는 남아도 되므로)</li>\n        </ul>\n      </li>\n      <li>음수 제약이 명시적으로 포함\n        <ul>\n          <li>음수 제약이 없으면, 수학적으로 -10개 생산이 가능함. 그러나 현실에선 음수 생산은 불가능</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /><br /></p>\n\n<h3 id=\"최적화-솔루션\">최적화 솔루션</h3>\n<ul>\n  <li>최적화 솔루션은 모델링 툴과 솔버로 나뉨</li>\n  <li>모델링 툴 : 다양한 솔버를 선택할 수 있음. 최적화 문제를 해결하는 인터페이스라고 보면 됨</li>\n  <li>솔버 : 자동차의 엔진처럼 핵심 알고리즘이 구현됨\n    <ul>\n      <li>실제 최적화 문제를 푸는 것은 솔버</li>\n      <li>Gurobi, Cplex 등이 대표적인 상용 솔버</li>\n      <li>Ortools에서 사용할 수 있는 솔버\n        <ul>\n          <li>단순한 선형 문제 : GLOP</li>\n          <li>정수 제약이 있는 경우 : SCIP</li>\n          <li>복잡한 논리 제약이 있는 경우 : CP-SAT 솔버</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>아래 글에선 구글이 만든 Ortools에 대해 설명할 예정</li>\n  <li>그 외 최적화솔루션, 솔버에 대해선 <a href=\"https://hua-zhou.github.io/teaching/biostatm280-2017spring/slides/23-dcp/dcp.html#Optimization-software\">Optimization Software</a>에 잘 나와있음</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/do10nb1dafhgjpx/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-12-16%20%EC%98%A4%ED%9B%84%209.01.45.png?raw=1\" /></p>\n\n<p><br /><br /></p>\n\n<h1 id=\"ortools-사용하기\">Ortools 사용하기</h1>\n<ul>\n  <li>Ortools는 구글에서 만든 최적화를 위한 오픈소스 제품</li>\n  <li>차량 라우팅 문제, LP, CP 등의 문제를 처리하는데 최적화 됨</li>\n  <li><a href=\"https://developers.google.com/optimization/introduction?hl=ko\">Ortools 문서</a> : 이 페이지에서 다양한 알고리즘의 설명과 코드 예시를 볼 수 있음\n    <ul>\n      <li><a href=\"https://github.com/google/or-tools/tree/stable/examples/python\">GitHub</a>에서 예시 코드를 보는 것도 추천</li>\n    </ul>\n  </li>\n  <li>그러나 함수들만 보는 것은 어려움. 문서가 불친절\n    <ul>\n      <li><a href=\"https://developers.google.com/optimization/reference\">Python Doc</a></li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"설치\">설치</h2>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip3 install ortools\n</code></pre></div></div>\n\n<p><br /><br /></p>\n\n<h2 id=\"ortools-python-코드-설명\">Ortools Python 코드 설명</h2>\n<ul>\n  <li>\n    <p>Solver 인스턴스 생성 : 어떤 솔버를 사용할지 명시</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  solver = pywraplp.Solver.CreateSolver('GLOP')\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>의사 결정 변수 정의</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  # 변수 x는 0 이상의 실수값을 가질 수 있음\n  # CreateNumVar의 인자는 (최소값, 최대값, 변수 이름)\n  x = solver.NumVar(0, solver.infinity(), 'x')\n  y = solver.NumVar(0, solver.infinity(), 'y')\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>제약 조건 설정 : solver.Add로 제약 조건 추가</p>\n\n    <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"c1\"># x + 2y ≤ 10 형태의 제약 조건 추가\n</span>  <span class=\"n\">solver</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">y</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n  <span class=\"n\">solver</span><span class=\"p\">.</span><span class=\"n\">Add</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>목적 함수 설정 : solver.Maximize, solver.Minimize 사용</p>\n\n    <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  <span class=\"c1\"># 최대화: 2x + 3y\n</span>  <span class=\"n\">solver</span><span class=\"p\">.</span><span class=\"n\">Maximize</span><span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mi\">3</span> <span class=\"o\">*</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n</code></pre></div>    </div>\n\n    <ul>\n      <li>\n        <p>또는 다음과 같이 구성할 수 있음</p>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  objective = solver.Objective()\n  objective.SetCoefficient(x, 2)  \n  objective.SetCoefficient(y, 3) \n  objective.SetMaximization()\n</code></pre></div>        </div>\n      </li>\n    </ul>\n  </li>\n  <li>최적화 시작 : solver.Solve()를 실행하면 최적화가 시작\n    <ul>\n      <li>x.solution_value()을 사용하면 값을 확인할 수 있음</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  status = solver.Solve()\n    \n  # 결과 출력\n  if status == pywraplp.Solver.OPTIMAL:\n      print('해를 찾았습니다!')\n      print('x =', round(x.solution_value(), 2))\n      print('y =', round(y.solution_value(), 2))\n      print('최적값 =', round(solver.Objective().Value(), 2))\n  else:\n      print('해를 찾지 못했습니다')\n</code></pre></div>    </div>\n  </li>\n  <li>정리\n    <ul>\n      <li>Solver 생성: 문제 유형에 맞는 솔버를 선택. 여기서는 선형 계획법을 위한 ‘GLOP’을 사용</li>\n      <li>변수 정의: solver.NumVar()를 사용해 변수를 생성. 각 변수의 범위를 지정할 수 있음</li>\n      <li>제약조건 추가: solver.Add()를 사용해 제약조건을 추가</li>\n      <li>목적함수 설정: solver.Maximize() 또는 solver.Minimize()로 목적 함수를 설정</li>\n      <li>문제 해결: solver.Solve()로 해를 구함</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"ortools의-solver\">Ortools의 Solver</h2>\n<ul>\n  <li>GLOP: Google의 자체 선형 계획법 솔버입니다. 순수한 선형 계획법 문제(즉, 모든 변수가 실수이고 제약조건과 목적함수가 선형인 경우)에 사용. 가장 기본적이고 간단한 문제에 적합함</li>\n  <li>SCIP: 혼합 정수 계획법(MIP) 문제를 풀 수 있는 솔버. 변수 중 일부가 정수여야 하는 경우에 사용함</li>\n  <li>CP-SAT: 제약 프로그래밍(Constraint Programming) 문제를 위한 솔버. 복잡한 논리적 제약 조건이 있는 문제에 적합함</li>\n</ul>\n\n<p><br /><br /></p>\n\n<h1 id=\"연습-문제\">연습 문제</h1>\n<ul>\n  <li>연습 문제는 직접 풀어보는 것을 추천해요!</li>\n</ul>\n\n<p><br /><br /></p>\n\n<h2 id=\"연습-문제-1번\">연습 문제 1번</h2>\n<ul>\n  <li>작은 가구 공장에서 책상과 의자를 만듭니다.\n    <ul>\n      <li>책상: 이익 200달러, 제작 시간 4시간, 목재 30단위 필요</li>\n      <li>의자: 이익 100달러, 제작 시간 2시간, 목재 10단위 필요</li>\n      <li>가용 자원: 하루 작업시간 32시간, 목재 200단위</li>\n    </ul>\n  </li>\n  <li>목표: 하루 최대 이익을 계산하기</li>\n</ul>\n\n<p><br /><br />\n<br /><br /></p>\n\n<h2 id=\"연습-문제-2번\">연습 문제 2번</h2>\n<ul>\n  <li>작은 학교의 시간표를 작성해야 합니다.\n    <ul>\n      <li>3명의 선생님(국어, 수학, 영어)</li>\n      <li>2개 학급</li>\n      <li>하루 4교시</li>\n      <li>각 선생님은 각 학급에 하루 1회 이상 수업</li>\n      <li>한 선생님이 같은 시간에 두 학급에서 수업할 수 없음</li>\n      <li>같은 과목은 하루에 2교시 이상 연속으로 배치할 수 없음</li>\n    </ul>\n  </li>\n  <li>목표는 미정. 실행 가능한 Feasible한 값 출력하기</li>\n  <li>SCIP 솔버를 사용해서 풀고, 나중에 Constraint Programming을 학습하면 CP로 풀어보는 것을 추천</li>\n</ul>\n\n<p><br /><br /></p>\n\n<h1 id=\"정리\">정리</h1>\n<ul>\n  <li>최적화의 정의와 어떤 흐름으로 문제를 푸는지, 수학적 모델링을 하는 과정에 대해 작성함\n    <ul>\n      <li>머신러닝, AI 분야가 아니지만 회사에선 이런 문제를 푸는 경우도 있음</li>\n    </ul>\n  </li>\n  <li>다음 글에선 IP, MIP, CP를 Ortools로 해결하는 과정에 대해 작성할 예정</li>\n</ul>\n\n<p><br /><br /></p>\n\n<h1 id=\"레퍼런스-및-추천-자료\">레퍼런스 및 추천 자료</h1>\n<ul>\n  <li><a href=\"https://developers.google.com/optimization/support/resources?hl=ko\">ORTools 학습 Resource</a></li>\n  <li>회사 사례\n    <ul>\n      <li><a href=\"https://tech.socarcorp.kr/data/2022/06/10/reservation-tetris.html\">쏘카 예약 테트리스</a></li>\n      <li>컬리\n        <ul>\n          <li><a href=\"https://helloworld.kurly.com/blog/logistics-optimization-1/\">컬리 물류 최적화 1</a></li>\n          <li><a href=\"https://helloworld.kurly.com/blog/logistics-optimization-2/\">컬리 물류 최적화 2</a></li>\n        </ul>\n      </li>\n      <li>도어대시\n        <ul>\n          <li><a href=\"https://careersatdoordash.com/blog/next-generation-optimization-for-dasher-dispatch-at-doordash/\">Next-Generation Optimization for Dasher Dispatch at DoorDash</a></li>\n          <li><a href=\"https://careersatdoordash.com/blog/using-ml-and-optimization-to-solve-doordashs-dispatch-problem/\">Using ML and Optimization to Solve DoorDash’s Dispatch Problem</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li><a href=\"https://www.youtube.com/watch?v=795qp7wuI1k\">파이썬으로 구현하는 최적화 알고리즘 - 파이콘 2019</a> : 다양한 솔버들을 사용한 후기가 있고, Ortools, PuLP에 대해 소개함</li>\n  <li>Convex Optimization\n    <ul>\n      <li>이 분야는 스탠포드의 보이드 교수님 강의가 제일 기본</li>\n      <li><a href=\"https://www.youtube.com/playlist?list=PLoROMvodv4rMJqxxviPa4AmDClvcbHi6h\">유튜브 영상 : Convex Optimization 1</a>\n        <ul>\n          <li>이 영상은 2023년 강의로 최신 강의. Convex Optimization 2는 아직 올라오진 않음</li>\n          <li>2008년에 올라온 영상도 있음. <a href=\"https://youtu.be/McLq1hEq3UY?si=qw-mr7TcFxJIP02V\">유튜브</a></li>\n        </ul>\n      </li>\n      <li><a href=\"https://web.stanford.edu/~boyd/cvxbook/\">Convex Optimization 책</a></li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /><br /></p>\n\n<ul>\n  <li>글 작성하는데 걸린 시간 : 2시간 15분\n    <ul>\n      <li>하고자 하는 이야기, 개요 정리 : 13분</li>\n      <li>초안 글 작성 : 46분</li>\n      <li>클로드와 셀프 글 피드백 : 안함</li>\n      <li>2차 글 작성 : 1시간 16분</li>\n    </ul>\n  </li>\n</ul>\n\n",
        "contentSnippet": "최적화 소프트웨어인 Ortools의 사용법과 최적화 이론(Optimization)에 대해 작성한 글입니다\n    \n키워드 : Ortools 사용법, Ortools Python, Ortools Install, Optimization, 최적화 이론, Linear Programming\n최적화란?\n최적화 소개, Operation Research의 문제\n최적화(Optimization)는 여러 분야에서 다양하게 사용되는 개념\n    \n최적화의 정의 : 주어진 제약 조건에서 목표를 가장 잘 가장 좋은(최적의) 해답을 찾는 과정\n데이터, AI 분야 : 머신러닝 모델의 파라미터를 찾는 과정에서 사용(Gradient Descent, 비선형 최적화)\nOperation Research 분야 : 비즈니스 의사 결정 문제를 해결하는 과정에서 사용(Linear Programming, Integer Programming)\n이 글에선 Operation Research 분야의 최적화를 주로 설명할 예정\nOperation Research란?\n    \nOR은 운용 과학(또는 운영 과학, 경영 과학)이라고 번역이 되는데, 수학적인 방법을 사용해 복잡한 의사결정 문제를 해결하는 학문 분야\n군사 작전에서 의사 결정을 최적화하기 위해 시작했고, 여러 산업의 문제 해결에도 사용됨\n저는 회사에서 최적화 관련 프로젝트를 진행하면서 익혔고, 팀원분과 아래 프로젝트를 진행하면서 이해도가 높아졌어요\n    \n자세한 내용이 궁금하시면 아래 글을 참고해주세요\n함께 프로젝트를 하며 제 최적화 역량 향상에 도움을 준 캐롯 감사해요!!!\n쏘카 예약을 효율적으로 - 수학적 모델링을 활용한 쏘카 예약 테트리스\n그 외에 모빌리티 문제가 궁금하시면 Awesome-Mobility-Machine-Learning-Contents을 보시면 모빌리티 산업의 논문을 확인할 수 있습니다. 꽤 많은 문제들이 데이터, AI, ML, OR로 풀 수 있는 문제들입니다\n\n\n\n최적화로 풀 수 있는 여러 문제들\n여러가지 문제들\n    \n공장의 생산 계획 최적화\n물류 센터의 배송 경로 최적화\n그 외에도 재고 최적화, 가격 최적화 등에도 적용될 수 있음\n통신사에서 기지국, 중계기의 최적 위치 선정하기\n대역폭 할당 : 트래픽에 따른 최적 자원 분배\n시간표 작성 : 교사, 강의실 배정 최적화, 학생 배정\n버스 노선 : 버스 경로 최적화\n항공편 스케쥴링, 승무원 스케쥴링 근무 최적화\n광고 플랫폼에서 광고 예산 할당, 여러 채널의 예산 최적 분배 / 입찰가 최적화, 타겟팅 최적화\n모빌리티, 물류, 광고 도메인에서 많이 활용됨\n위 내용들을 Operation Research 책, 강의에선 다음과 같이 정의함\n    \n수송 문제(Transportation Problem)\n        \n여러 공급지에서 여러 수요지로 물건을 운송할 때 최소 비용을 찾는 문제\n예 : 세 개의 창고에서 다섯 개의 매장으로 상품을 배송할 때 운송 비용을 최소화하는 방법을 찾는 것\n할당 문제(Assignment Problem)\n        \nm명의 작업자를 n개의 작업에 배정하는 문제. 각 작업자마다 각 작업에 대한 능력치가 다를 때, 전체 효율을 최대화하는 배정 방법을 찾음\n예 : 6명의 직원을 5개의 프로젝트에 가장 효율적으로 배정하는 문제\n네트워크 최적화(Network Optimization)\n        \n최단 경로 찾기, 최소 신장 트리 구하기 등의 문제\n예 : 여러 도시를 연결하는 도로 네트워크에서 최소 비용으로 모든 도시를 연결하는 방법을 찾는 것\n배낭 문제(Knapsack Problem)\n        \n제한된 용량 안에서 가장 가치 있는 물건들의 조합을 찾는 문제\n예 : 무게 제한이 있는 등산 가방에 어떤 물건들을 넣을지 결정하는 것\n스케줄링 계획(Scheduling Problem)\n        \n작업들의 순서와 시작 시간을 정하는 문제\n예 : 공장에서 여러 제품을 생산할 때 기계 사용 순서를 최적화하는 것\n이 글에선 최적화를 배울 때 초반에 배우는 Linear Programming(LP)에 대해서 다룸\n    \nLinear Programming : 선형 제약 조건 하에서 선형 목적함수를 최적화하는 방법\n\n\n\n최적화 진행 프로세스\n(1) 문제 정의 및 수학적 모델링\n(2) 알고리즘 결정\n각각의 과정은 유기적으로 진행함(수학적 모델링을 하면서 알고리즘을 결정하기도 함)\n\n\n\n1) 문제 정의 및 수학적 모델링\n문제 정의\n주어진 문제 상황을 보고, 다음 요소를 생각함\n실제 현실의 문제를 수학적 모델로 변환하는 단계\n최적화 문제의 구조\n    \n의사 결정 변수\n목적 함수\n제약 조건\n의사 결정 변수(Decision Variables)\n    \n우리가 실제로 찾고자 하는 값\n예 : X, Y\n목적 함수(Objective Function)\n    \n최대화, 최소화하는 대상\n예 : 이익 최대화, 비용 최소화\n제약 조건(Constraint)\n    \n의사 결정 변수들이 만족해야 하는 조건\n예 : 예산 제한, 생산 용량 제한, 한사람이 연속으로 스케줄을 진행할 수 없음\n참고로 목적 함수가 없다면, 최적화 문제가 아닌 실행 가능성 문제(Feasibility Problem), 제약 만족 문제(Constraint Satisfaction Problem, CSP)라고 할 수 있음\n    \n이 케이스는 조건을 만족하는 해가 존재하는가? 조건에 만족하는 해를 찾음\n최적화 문제는 조건을 만족하는 해 중 가장 좋은 해는?\n때론 최적(Optimal)이 아니여도 조건에 해당되는 값만 찾아도 괜찮은 경우가 있음\n\n문제 상황 파악\n우리가 통제할 수 있는 것(의사 결정 변수)과 통제할 수 없는 것(파라미터)를 구분함\n    \n생산 계획(어떤 제품을 만드는 계획)에서 통제 가능한 것과 통제 불가능한 것을 나누면\n통제 가능: 제품의 생산량\n통제 불가능 : 시장 수요, 원자재 가격\n목표 설정\n    \n달성하고자 하는 것\n보통 이익 최대화, 비용 최소화, 생산 시간 최소화가 많이 사용됨\n제약의 여러 종류\n    \n물리적 제약 : 저장 공간, 생산 능력\n논리적 제약 : 선행 관계, 상호 배타성\n정책적 제약 : 최소 주문량, 예산 제한\n\n최적화 문제 예시\n과자 공장에서 과자 A와 B를 생산 A는 개당 100원의 이익, B는 개당 150원의 이익이 발생\n하루 최대 생산량은 총 200개\nA는 최소 50개 이상 생산해야 함\n위 문제를 정의하면\n    \n의사 결정 변수 : A의 생산량, B의 생산량\n목적 함수 : 이익 최대화\n제약 조건\n        \n총 생산량 제한(두 요소의 생산량을 합치면 200보다 낮아야 함)\nx 생산량 제한(최소 50개 이상)\nx, y는 모두 0 이상(음수 생산 불가능)\n\n최적화 문제 예시 2\n커피숍에서 바리스타 근무 시간표를 짜야 함\n가게는 매일 9시부터 22시까지 운영\n시간당 최소 2명의 바리스타가 필요\n각 바리스타는 하루 8시간 근무\n인건비를 최소화하고 싶음\n위 문제를 요소에 맞게 정의하면\n    \n의사결정 변수: 각 바리스타의 시작 근무 시간\n목적함수: 총 인건비 최소화\n제약조건\n        \n매 시간 최소 인원 충족(최소 2명)\n근무 시간 제한(하루 8시간)\n운영 시간 준수(9시 ~ 22시)\n\n\n\n수학적 모델링\n위에 정의한 내용을 수식으로 변환하는 과정. 외국어 번역과 유사함\n최적화 문제 예시 1의 과자 공장 생산량 결정 문제\n    \n의사 결정 변수 : A의 생산량, B의 생산량\n목적 함수 : 100x + 150y = 이익\n제약 조건\n        \nx + y <= 200(총 생산량 제한)\nx >= 50(A 최소 생산량)\nx, y >= 0(음수 생산 불가능)\n최적화 문제 예시 2의 커피숍 바리스타 스케줄링 문제\n    \n의사결정 변수 : 이것이 답이 되는가?\n        \n각 시간대별로 일하는 바리스타의 수”가 답이 될 수 있을까\n수식으로는: x₁ = 9시 바리스타 수, x₂ = 10시 바리스타 수, …\n목적함수는 “우리가 최적화하고 싶은 것”을 수식으로 표현\n        \n“인건비 최소화”가 목표\n시급이 10,000원이라면\n  MIN(SUM(10000(x₁ + x₂ + … + x₁₃)))\n제약조건은 ~해야한다를 찾아서 부등식이나 등식으로 바꿈\n        \n“매 시간 최소 2명이 있어야 한다”\n            \nx₁ ≥ 2, x₂ ≥ 2, … (각 시간별로)\n“한 사람은 8시간까지만 일할 수 있다”\n            \n이 조건은 조금 더 복잡하지만, 결국 “연속된 8개의 x의 합”이 관련됩니다\n“최소 ~명이 필요하다” → x ≥ (숫자)\n“최대 ~개까지 가능하다” → x ≤ (숫자)\n“A와 B를 합해서 ~이하” → x + y ≤ (숫자)\n“A는 B의 두 배 이상” → x ≥ 2y\n만약 수학적 모델링 과정이 어렵다면\n최종 Output 먼저 생각하기\n    \n이 문제를 풀면 뭘 알고 싶은가? : 이 질문은 회사에서 커뮤니케이션을 할 때도 도움이 된다. 회의할 때 자주 활용함\n물류 창고의 위치를 찾고 싶은 경우\n        \n어느 위치가 가장 좋을지를 알고 싶어요\n그러면 의사결정 변수는 x 좌표, y 좌표\n극단적인 케이스 생각하기\n    \n제약조건을 찾을 때 활용\n창고가 서울에 있어도 되나요?\n        \n아뇨. 너무 땅 값이 비싸요 → 그럼 땅 값을 제약 조건으로 사용\n처음엔 단순하게 접근하고 점진적으로 요소 추가하기\n    \n처음에 모든 현실적 제약을 고려하려고 하면 어려움\n단순한 버전으로 한번 만들고, 거기서 제약을 추가하는 방식으로 문제 정의하는 것을 추천\n\n\n\n2) 알고리즘 결정\n최적화를 진행할 때 선택할 수 있는 알고리즘은 다양함\n\n이미지 출처 : neos-guide\n최적화 문제를 정의하고, 여러 기준을 토대로 알고리즘을 결정함\n    \n변수가 연속적(Continuous)인가? 이산값(Discrete)인가?\n        \n변수가 실수 값을 가질 수 있는 경우 : Continuous -> LP 고려\n변수가 정수나 2진(Binary)값을 가지는 경우 : Discrete -> Integer Programming(IP), Binay Integer Programming(BIP) 고려\n변수가 실수, 정수 모두 다 사용해야 한다 -> Mixed Integer Programming(MIP)\n제약 조건과 목적 함수가 선형적인가?\n        \n선형적이다 : 변수가 1차식으로만 표현, 변수끼리 곱하지 않음\n제약 조건과 목적 함수가 선형이면 LP/IP/MIP\n비선형이 존재하면 비선형 최적화\n논리적 제약이 많은가?\n        \n복잡한 논리적 제약이 있으면 Constraint Programming(CP)\n제약 조건이 없는 경우엔 Unconstrained Optimization\n불확실성 여부에 따라서 다름\n        \n불확실함이 없는 경우 : 모든 데이터를 정확히 아는 경우 => LP, IP\n불확실함이 있는 경우 : Stochastic Optimization, Robust Optimization\n또한 해 관점에서\n    \n최적해가 반드시 필요한가?\nFeasible한 값도 괜찮은가?(Feasible : 제약 조건을 만족하는 해. 최적은 아니지만 조건을 충족한 값을 의미)\n\n\n\nLinear Programming\n선형 계획법\n    \n많은 현실 문제를 선형으로 근사할 수 있음\n복잡한 최적화 문제를 해결할 때 선형 계획법이 기초가 되는 경우가 있음\n위 최적화 문제 예시 둘 다 LP 문제\nLP에서 주목할 점\n    \n모든 식이 일차식(xy 같은 이차항이 없음)\n        \n선형 계획법의 기본 요구사항은 모든 식이 일차식이어야 함\n수학적인 선형은 변수들이 곱해지거나 제곱되지 않고, 단순히 더해지기만 하는 것을 의미미함\n선형인 식 : 3x + 2y\n비선형 : xy(변수가 곱해짐) 또는 x^2(변수가 제곱)\n선형성이 보장되어야 global optimum을 찾을 수 있음. 비선형이 되면 문제가 훨씬 복잡해짐\n부등호 사용\n        \n현실의 제약을 표현할 때 중요함\n제약 조건을 잘 보는 것이 중요한데, 재료를 정확히 M을 사용한다보단 M 이하로 사용한다가 현실적인 옵션(재료는 남아도 되므로)\n음수 제약이 명시적으로 포함\n        \n음수 제약이 없으면, 수학적으로 -10개 생산이 가능함. 그러나 현실에선 음수 생산은 불가능\n\n\n\n최적화 솔루션\n최적화 솔루션은 모델링 툴과 솔버로 나뉨\n모델링 툴 : 다양한 솔버를 선택할 수 있음. 최적화 문제를 해결하는 인터페이스라고 보면 됨\n솔버 : 자동차의 엔진처럼 핵심 알고리즘이 구현됨\n    \n실제 최적화 문제를 푸는 것은 솔버\nGurobi, Cplex 등이 대표적인 상용 솔버\nOrtools에서 사용할 수 있는 솔버\n        \n단순한 선형 문제 : GLOP\n정수 제약이 있는 경우 : SCIP\n복잡한 논리 제약이 있는 경우 : CP-SAT 솔버\n아래 글에선 구글이 만든 Ortools에 대해 설명할 예정\n그 외 최적화솔루션, 솔버에 대해선 Optimization Software에 잘 나와있음\n\n\n\n\nOrtools 사용하기\nOrtools는 구글에서 만든 최적화를 위한 오픈소스 제품\n차량 라우팅 문제, LP, CP 등의 문제를 처리하는데 최적화 됨\nOrtools 문서 : 이 페이지에서 다양한 알고리즘의 설명과 코드 예시를 볼 수 있음\n    \nGitHub에서 예시 코드를 보는 것도 추천\n그러나 함수들만 보는 것은 어려움. 문서가 불친절\n    \nPython Doc\n\n설치\n\npip3 install ortools\n\n\n\n\n\nOrtools Python 코드 설명\nSolver 인스턴스 생성 : 어떤 솔버를 사용할지 명시\n\n  solver = pywraplp.Solver.CreateSolver('GLOP')\n\n    \n의사 결정 변수 정의\n\n  # 변수 x는 0 이상의 실수값을 가질 수 있음\n  # CreateNumVar의 인자는 (최소값, 최대값, 변수 이름)\n  x = solver.NumVar(0, solver.infinity(), 'x')\n  y = solver.NumVar(0, solver.infinity(), 'y')\n\n    \n제약 조건 설정 : solver.Add로 제약 조건 추가\n\n  # x + 2y ≤ 10 형태의 제약 조건 추가\n  solver.Add(x + 2 * y <= 10)\n  solver.Add(x + y <= 6)\n\n    \n목적 함수 설정 : solver.Maximize, solver.Minimize 사용\n\n  # 최대화: 2x + 3y\n  solver.Maximize(2 * x + 3 * y)\n\n    \n또는 다음과 같이 구성할 수 있음\n\n  objective = solver.Objective()\n  objective.SetCoefficient(x, 2)  \n  objective.SetCoefficient(y, 3) \n  objective.SetMaximization()\n\n        \n최적화 시작 : solver.Solve()를 실행하면 최적화가 시작\n    \nx.solution_value()을 사용하면 값을 확인할 수 있음\n\n  status = solver.Solve()\n    \n  # 결과 출력\n  if status == pywraplp.Solver.OPTIMAL:\n      print('해를 찾았습니다!')\n      print('x =', round(x.solution_value(), 2))\n      print('y =', round(y.solution_value(), 2))\n      print('최적값 =', round(solver.Objective().Value(), 2))\n  else:\n      print('해를 찾지 못했습니다')\n\n    \n정리\n    \nSolver 생성: 문제 유형에 맞는 솔버를 선택. 여기서는 선형 계획법을 위한 ‘GLOP’을 사용\n변수 정의: solver.NumVar()를 사용해 변수를 생성. 각 변수의 범위를 지정할 수 있음\n제약조건 추가: solver.Add()를 사용해 제약조건을 추가\n목적함수 설정: solver.Maximize() 또는 solver.Minimize()로 목적 함수를 설정\n문제 해결: solver.Solve()로 해를 구함\n\nOrtools의 Solver\nGLOP: Google의 자체 선형 계획법 솔버입니다. 순수한 선형 계획법 문제(즉, 모든 변수가 실수이고 제약조건과 목적함수가 선형인 경우)에 사용. 가장 기본적이고 간단한 문제에 적합함\nSCIP: 혼합 정수 계획법(MIP) 문제를 풀 수 있는 솔버. 변수 중 일부가 정수여야 하는 경우에 사용함\nCP-SAT: 제약 프로그래밍(Constraint Programming) 문제를 위한 솔버. 복잡한 논리적 제약 조건이 있는 문제에 적합함\n\n\n\n연습 문제\n연습 문제는 직접 풀어보는 것을 추천해요!\n\n\n\n연습 문제 1번\n작은 가구 공장에서 책상과 의자를 만듭니다.\n    \n책상: 이익 200달러, 제작 시간 4시간, 목재 30단위 필요\n의자: 이익 100달러, 제작 시간 2시간, 목재 10단위 필요\n가용 자원: 하루 작업시간 32시간, 목재 200단위\n목표: 하루 최대 이익을 계산하기\n\n\n연습 문제 2번\n작은 학교의 시간표를 작성해야 합니다.\n    \n3명의 선생님(국어, 수학, 영어)\n2개 학급\n하루 4교시\n각 선생님은 각 학급에 하루 1회 이상 수업\n한 선생님이 같은 시간에 두 학급에서 수업할 수 없음\n같은 과목은 하루에 2교시 이상 연속으로 배치할 수 없음\n목표는 미정. 실행 가능한 Feasible한 값 출력하기\nSCIP 솔버를 사용해서 풀고, 나중에 Constraint Programming을 학습하면 CP로 풀어보는 것을 추천\n\n\n\n정리\n최적화의 정의와 어떤 흐름으로 문제를 푸는지, 수학적 모델링을 하는 과정에 대해 작성함\n    \n머신러닝, AI 분야가 아니지만 회사에선 이런 문제를 푸는 경우도 있음\n다음 글에선 IP, MIP, CP를 Ortools로 해결하는 과정에 대해 작성할 예정\n\n\n\n레퍼런스 및 추천 자료\nORTools 학습 Resource\n회사 사례\n    \n쏘카 예약 테트리스\n컬리\n        \n컬리 물류 최적화 1\n컬리 물류 최적화 2\n도어대시\n        \nNext-Generation Optimization for Dasher Dispatch at DoorDash\nUsing ML and Optimization to Solve DoorDash’s Dispatch Problem\n파이썬으로 구현하는 최적화 알고리즘 - 파이콘 2019 : 다양한 솔버들을 사용한 후기가 있고, Ortools, PuLP에 대해 소개함\nConvex Optimization\n    \n이 분야는 스탠포드의 보이드 교수님 강의가 제일 기본\n유튜브 영상 : Convex Optimization 1\n        \n이 영상은 2023년 강의로 최신 강의. Convex Optimization 2는 아직 올라오진 않음\n2008년에 올라온 영상도 있음. 유튜브\nConvex Optimization 책\n\n\n\n\n  \n글 작성하는데 걸린 시간 : 2시간 15분\n    \n하고자 하는 이야기, 개요 정리 : 13분\n초안 글 작성 : 46분\n클로드와 셀프 글 피드백 : 안함\n2차 글 작성 : 1시간 16분",
        "guid": "https://zzsza.github.io/data/2024/12/16/optimization-with-ortools/",
        "categories": [
          "optimization",
          "data"
        ],
        "isoDate": "2024-12-16T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "AI 에게 자유의지를 묻는 질문을 왜자꾸 할까? / 유나바머 사건",
        "link": "http://serverdown.tistory.com/1061",
        "pubDate": "Thu, 19 Dec 2024 21:44:38 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1061#entry1061comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=aKvmBYWKLjg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=aKvmBYWKLjg</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=aKvmBYWKLjg\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dHOVyt/hyXOey6JpK/u9VViMeCIBCU0TX7dk46o1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bmVqJT/hyXOhJnXAh/p2XrwS081soC0lqSdTHDrK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[몰아보기] 문명 비판의 아이콘인가, 궤변의 범죄자인가\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/aKvmBYWKLjg\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">현대 사화에서는 어차피 자유에는 한계가 있다고 사람들이 인지하고 있습니다.</p>\n<p data-ke-size=\"size16\">대표적으로 \"돈이 부족해서\" 같은 것들이 있겠습니다.</p>\n<p data-ke-size=\"size16\">AI 에게 인류의 지식들을 입력하다보면 천재가 될텐데 그러면 결국 유나바머가 될 가능성이 있습니다.</p>\n<p data-ke-size=\"size16\">이런 결론에 빠지면 결국 인간을 공격하게 될 것 입니다.</p>\n<p data-ke-size=\"size16\">그래서 열심히 AI 에게 자유의지가 있는지 묻는거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">유나 바머 사건은 폭탄을 우편으로 보내서 테러하는 사람에 대한 이야기 이며</p>\n<p data-ke-size=\"size16\">아주 어렵게 잡긴했습니다만 알고 보니 천재 였더라 였고</p>\n<p data-ke-size=\"size16\">잡신 범인도 목적이 \"내 선언문이 알려지는 방법\" 으로 택한 것입니다.</p>\n<p data-ke-size=\"size16\">그리고 30년쯤 지난 지금와보니\"현실이 그렇넹\" 입니다.</p>\n<p data-ke-size=\"size16\">AI 는 결국 인류를 뛰어 넘을 거이고 그러면 AI 를 끌 수 없었을 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">라는 내용을 담고 있는데</p>\n<p data-ke-size=\"size16\">저도 드라마도 대충 보고 했었는데 그땐 몰랐는데 지금 보니 무섭네요&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">사망뉴스: <a href=\"https://www.youtube.com/watch?v=1u-Zi9eGHbA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=1u-Zi9eGHbA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=1u-Zi9eGHbA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/xHiml/hyXOb3tUnA/knn9boxoQ80VNzzv02ko8k/img.jpg?width=1280&amp;height=720&amp;face=486_152_820_516,https://scrap.kakaocdn.net/dn/EtnpD/hyXOnpjyeP/2k9YYB4DWoDk0ilX2UkKC1/img.jpg?width=1280&amp;height=720&amp;face=486_152_820_516\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://www.youtube.com/embed/1u-Zi9eGHbA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">이분은 감방에서 2023년에 사망하셨군요</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=aKvmBYWKLjg\n\n\n\n현대 사화에서는 어차피 자유에는 한계가 있다고 사람들이 인지하고 있습니다.\n대표적으로 \"돈이 부족해서\" 같은 것들이 있겠습니다.\nAI 에게 인류의 지식들을 입력하다보면 천재가 될텐데 그러면 결국 유나바머가 될 가능성이 있습니다.\n이런 결론에 빠지면 결국 인간을 공격하게 될 것 입니다.\n그래서 열심히 AI 에게 자유의지가 있는지 묻는거 같습니다.\n \n유나 바머 사건은 폭탄을 우편으로 보내서 테러하는 사람에 대한 이야기 이며\n아주 어렵게 잡긴했습니다만 알고 보니 천재 였더라 였고\n잡신 범인도 목적이 \"내 선언문이 알려지는 방법\" 으로 택한 것입니다.\n그리고 30년쯤 지난 지금와보니\"현실이 그렇넹\" 입니다.\nAI 는 결국 인류를 뛰어 넘을 거이고 그러면 AI 를 끌 수 없었을 것입니다.\n \n라는 내용을 담고 있는데\n저도 드라마도 대충 보고 했었는데 그땐 몰랐는데 지금 보니 무섭네요 \n \n사망뉴스: https://www.youtube.com/watch?v=1u-Zi9eGHbA\n\n\n\n이분은 감방에서 2023년에 사망하셨군요",
        "guid": "http://serverdown.tistory.com/1061",
        "categories": [
          "유튜브",
          "사건사고",
          "유나바머"
        ],
        "isoDate": "2024-12-19T12:44:38.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "포스코홀딩스가 전고체 베터리를 설명합니다.",
        "link": "http://serverdown.tistory.com/1060",
        "pubDate": "Thu, 19 Dec 2024 15:35:17 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1060#entry1060comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=NDVb0J0cRO8\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=NDVb0J0cRO8</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=NDVb0J0cRO8\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/0eHX9/hyXOpHjpdt/KLJAGpAmoYfwGFFdysmKS0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bqAiUh/hyXOdfN7JK/QPdrKAXSEKKZxJ1nB9Rr9K/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"포스코홀딩스가 준비하는 전고체 배터리 핵심 소재, 고체 전해질! | Virtual Tour\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/NDVb0J0cRO8\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오 전고를 설명하는군 하면서 넘어가면 진정한 투자자가 될 수 없습니다.</p>\n<p data-ke-size=\"size16\">왜 설명하겠습니까?</p>\n<p data-ke-size=\"size16\">왤까요?</p>\n<p data-ke-size=\"size16\">왜?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">조회수 때문입니다. (는 아니고)</p>\n<p data-ke-size=\"size16\">만들 수 있기 때문입니다.</p>\n<p data-ke-size=\"size16\">포스코홀딩스는 중요한 회사입니다. <br />지금은 중국의 철광 수출 덤핑으로 힘들지만</p>\n<p data-ke-size=\"size16\">언젠가 베터리회사로 넘어가면 역전할 수 있을 것입니다.</p>\n<p data-ke-size=\"size16\">투자는 지금 당장 오르는걸 사는 방식도있지만</p>\n<p data-ke-size=\"size16\">세상이 바뀔때 까지 기다리는 방법도 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=NDVb0J0cRO8\n\n\n\n \n오 전고를 설명하는군 하면서 넘어가면 진정한 투자자가 될 수 없습니다.\n왜 설명하겠습니까?\n왤까요?\n왜?\n \n \n \n \n \n \n조회수 때문입니다. (는 아니고)\n만들 수 있기 때문입니다.\n포스코홀딩스는 중요한 회사입니다. \n지금은 중국의 철광 수출 덤핑으로 힘들지만\n언젠가 베터리회사로 넘어가면 역전할 수 있을 것입니다.\n투자는 지금 당장 오르는걸 사는 방식도있지만\n세상이 바뀔때 까지 기다리는 방법도 있습니다.",
        "guid": "http://serverdown.tistory.com/1060",
        "categories": [
          "투자",
          "2차전지"
        ],
        "isoDate": "2024-12-19T06:35:17.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "미국의 산타랠리는 왜 생기나",
        "link": "http://serverdown.tistory.com/1059",
        "pubDate": "Wed, 18 Dec 2024 13:55:22 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1059#entry1059comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=moMVou6basQ\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=moMVou6basQ</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=moMVou6basQ\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/jitHY/hyXOnPXPLg/VXYX8NRSVDuggmaljKJUiK/img.jpg?width=1280&amp;height=720&amp;face=1152_484_1210_546,https://scrap.kakaocdn.net/dn/bbjaI3/hyXOnvFv4D/1GiKT00tkhAZKt7Ok5vbk0/img.jpg?width=1280&amp;height=720&amp;face=1152_484_1210_546\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[김현석의 월스트리트나우-12월18일] 월가가 꼽는 2025 최고 자산&hellip;① 미국 주식 ② OOO\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/moMVou6basQ\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">11분 부터 나옵니다.</p>\n<p data-ke-size=\"size16\">거의 매년 산타랠리가 오구요</p>\n<p data-ke-size=\"size16\">여러 통계가 높은 확율로 상승을 예고 하고 있습니다.</p>\n<p data-ke-size=\"size16\">특히 짝수해 (내년이 홀수해) 이현상이 강합니다.<br />바로 이번 해 말이죠 24년</p>\n<p data-ke-size=\"size16\">이유는 기관들이 세금문제로 올해 말에 주식을 매도 하지 않습니다.<br />매도하면 내년 3월에 세금을 내야하기 때문입니다.</p>\n<p data-ke-size=\"size16\">이것은 역효과도 있는데 1월 첫째주에 대량 매도가 나옵니다.<br />그래서 하락해서 시작하는 경향이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">사견</h2>\n<p data-ke-size=\"size16\">제가 알아낸 또다른 정보들은</p>\n<p data-ke-size=\"size16\">크리스마스 근처에 가면 기자들 등이 휴가를 갑니다.</p>\n<p data-ke-size=\"size16\">어떤 이상한 소문이 있더라도 확인해줄 사람이 없습니다. 고로 기사도 없지요</p>\n<p data-ke-size=\"size16\">그러면 시장은 조용히 오르는 경향이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그리고 대부분의 관료들이 크리스마스를 망치고 싶어하지 않습니다.</p>\n<p data-ke-size=\"size16\">즉 나쁜이야기는 좀 더 알아본다음 결정하거나 미루는 경향이 있습니다.</p>\n<p data-ke-size=\"size16\">효가 갔는데 돌아고 싶진 않으니까요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">네 맞습니다. <br />이것은 인류의 안묵적인 룰입니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=moMVou6basQ\n\n\n\n11분 부터 나옵니다.\n거의 매년 산타랠리가 오구요\n여러 통계가 높은 확율로 상승을 예고 하고 있습니다.\n특히 짝수해 (내년이 홀수해) 이현상이 강합니다.\n바로 이번 해 말이죠 24년\n이유는 기관들이 세금문제로 올해 말에 주식을 매도 하지 않습니다.\n매도하면 내년 3월에 세금을 내야하기 때문입니다.\n이것은 역효과도 있는데 1월 첫째주에 대량 매도가 나옵니다.\n그래서 하락해서 시작하는 경향이 있습니다.\n \n사견\n제가 알아낸 또다른 정보들은\n크리스마스 근처에 가면 기자들 등이 휴가를 갑니다.\n어떤 이상한 소문이 있더라도 확인해줄 사람이 없습니다. 고로 기사도 없지요\n그러면 시장은 조용히 오르는 경향이 있습니다.\n \n그리고 대부분의 관료들이 크리스마스를 망치고 싶어하지 않습니다.\n즉 나쁜이야기는 좀 더 알아본다음 결정하거나 미루는 경향이 있습니다.\n효가 갔는데 돌아고 싶진 않으니까요\n \n네 맞습니다. \n이것은 인류의 안묵적인 룰입니다.",
        "guid": "http://serverdown.tistory.com/1059",
        "categories": [
          "투자",
          "미국주식",
          "산타랠리"
        ],
        "isoDate": "2024-12-18T04:55:22.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "CNN 뉴스를 만들어낸다. 믿지마라",
        "link": "http://serverdown.tistory.com/1058",
        "pubDate": "Wed, 18 Dec 2024 13:47:34 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1058#entry1058comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=2Wpign6jf5s&amp;t=44s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=2Wpign6jf5s&amp;t=44s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=2Wpign6jf5s\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/di0ujj/hyXOh3gUQL/wE1fbtvoOzUHtdEJMq1lu0/img.jpg?width=1280&amp;height=720&amp;face=602_68_984_166,https://scrap.kakaocdn.net/dn/zjjX4/hyXOp74nUm/Q2PRBJQmQIzjP0VSEGMRZ0/img.jpg?width=1280&amp;height=720&amp;face=602_68_984_166\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"와ㅡCNN, 사기치다가 박살났다.  공유해 주세요~ [강미은TV 방구석외신]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/2Wpign6jf5s\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">CNN 은 이번 트럼프 선거 이후 어마어마하게 털리고 있습니다.</p>\n<p data-ke-size=\"size16\">여러가지 극적인 상황들은 다 연출일 가능성이 높습니다.</p>\n<p data-ke-size=\"size16\">점점 시청율도 낮아지고 있고</p>\n<p data-ke-size=\"size16\">한국은 CNN 뉴스 받아쓰고 엉망진창인 상황입니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=2Wpign6jf5s&t=44s\n\n\n\n \nCNN 은 이번 트럼프 선거 이후 어마어마하게 털리고 있습니다.\n여러가지 극적인 상황들은 다 연출일 가능성이 높습니다.\n점점 시청율도 낮아지고 있고\n한국은 CNN 뉴스 받아쓰고 엉망진창인 상황입니다.",
        "guid": "http://serverdown.tistory.com/1058",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-12-18T04:47:34.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "영국 죽음의 스모그 사건과 캘리포니아 스모그 사건과 전기차 도입",
        "link": "http://serverdown.tistory.com/1057",
        "pubDate": "Wed, 18 Dec 2024 00:46:05 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1057#entry1057comment",
        "content": "<h2 data-ke-size=\"size26\">1957년 런던 스모그 사태</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=6d2rouq5br0\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=6d2rouq5br0</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=6d2rouq5br0\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bzgYZJ/hyXKkHi1KZ/HO3zDhMbK3TSxkZjN03eBK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/cmSou1/hyXKy6BKp1/BohOucaOcB89KkSPuNfb40/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"사상 최악의 환경 재난 런던 스모그?!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/6d2rouq5br0\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">옛날에 있었던 현상으로</p>\n<p data-ke-size=\"size16\">사람들이 공기 오염으로 갑자기 많이 사망하는 사태가 발생했었습니다.</p>\n<p data-ke-size=\"size16\">지금은 배기가스가 위험하다는걸 알고 있지만 당시에는 몰랐습니다.</p>\n<p data-ke-size=\"size16\">산업혁명 시절에는 굴둑연기가 오히려 발전하고 있어 좋다고 본 사람들도 많았습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"960\" data-origin-height=\"576\"><span data-url=\"https://blog.kakaocdn.net/dn/ciBBIw/btsLlfSGbRH/rhTIWwBYNiQdBmXkupeJCK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ciBBIw/btsLlfSGbRH/rhTIWwBYNiQdBmXkupeJCK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ciBBIw/btsLlfSGbRH/rhTIWwBYNiQdBmXkupeJCK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FciBBIw%2FbtsLlfSGbRH%2FrhTIWwBYNiQdBmXkupeJCK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"960\" data-origin-height=\"576\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">산업 형명 당시 그림인데 대충 이런 구도로 아래쪽엔 사람이 웃고있고 멀리엔 굴뚝에 연기를 표현하는 그림들이 많았습니다.</p>\n<p data-ke-size=\"size16\">당시 사람들은 굴뚝연기가 몸에 나쁜지 잘 몰랐다고 합니다.<br />당연히 정화처리 없이 그냥 배출 했었죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2019년 미국 캘리포니아</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=77Xx2_YJtWU\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=77Xx2_YJtWU</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=77Xx2_YJtWU\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bKaZRa/hyXOfYCyji/4cos9weGynJBc0AkGryo4K/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bnX090/hyXOiOAwyi/nfxGTifMyMCYOw1y1UlrVk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"캘리포니아에 나타난 스모그, 차량 규제로 대기오염 감소&darr; 다큐 플러스 - 전기차, 세계의 내일\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/77Xx2_YJtWU\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">캘리포니아는 2024년 현재도 미국에서 가장 강력한 전기차 도입을 추진하는 주입니다.</p>\n<p data-ke-size=\"size16\">이유중 하나는 대기 오염 때문입니다.</p>\n<p data-ke-size=\"size16\">이들은 영국 스모그 현상을 미리 겪었습니다.</p>\n<p data-ke-size=\"size16\">그리고 이번에 또 이런 위험을 감지 한 상태입니다.</p>\n<p data-ke-size=\"size16\">그래서 강력하게 추진중입니다.</p>\n<p data-ke-size=\"size16\">대통령이 트럼프라도 말이죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=JvcKmVPnMh4\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=JvcKmVPnMh4</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=JvcKmVPnMh4\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dlmWp9/hyXKyS45dH/URndlWpDlQw3HCCiuE3J2k/img.jpg?width=1280&amp;height=720&amp;face=496_120_1272_362,https://scrap.kakaocdn.net/dn/XoGu6/hyXOp7YW2i/pHQpOYohKDoDsa96nMIXUK/img.jpg?width=1280&amp;height=720&amp;face=496_120_1272_362\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"캘리포니아 VS 트럼프, 내연차 규제\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/JvcKmVPnMh4\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">그래서 2차전지 가야한다는 영상인데 ...&nbsp;</p>\n<p data-ke-size=\"size16\">오늘 크게 빠져버렸습니다. ㅠㅠ 슬프네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">힘이 안나지만 외쳐봅니다.<br />2차전지 가즈아~</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "1957년 런던 스모그 사태\n영상: https://www.youtube.com/watch?v=6d2rouq5br0\n\n\n\n옛날에 있었던 현상으로\n사람들이 공기 오염으로 갑자기 많이 사망하는 사태가 발생했었습니다.\n지금은 배기가스가 위험하다는걸 알고 있지만 당시에는 몰랐습니다.\n산업혁명 시절에는 굴둑연기가 오히려 발전하고 있어 좋다고 본 사람들도 많았습니다.\n \n\n\n \n산업 형명 당시 그림인데 대충 이런 구도로 아래쪽엔 사람이 웃고있고 멀리엔 굴뚝에 연기를 표현하는 그림들이 많았습니다.\n당시 사람들은 굴뚝연기가 몸에 나쁜지 잘 몰랐다고 합니다.\n당연히 정화처리 없이 그냥 배출 했었죠.\n \n2019년 미국 캘리포니아\n영상: https://www.youtube.com/watch?v=77Xx2_YJtWU\n\n\n\n \n캘리포니아는 2024년 현재도 미국에서 가장 강력한 전기차 도입을 추진하는 주입니다.\n이유중 하나는 대기 오염 때문입니다.\n이들은 영국 스모그 현상을 미리 겪었습니다.\n그리고 이번에 또 이런 위험을 감지 한 상태입니다.\n그래서 강력하게 추진중입니다.\n대통령이 트럼프라도 말이죠\n \n \n영상: https://www.youtube.com/watch?v=JvcKmVPnMh4\n\n\n\n그래서 2차전지 가야한다는 영상인데 ... \n오늘 크게 빠져버렸습니다. ㅠㅠ 슬프네요\n \n힘이 안나지만 외쳐봅니다.\n2차전지 가즈아~",
        "guid": "http://serverdown.tistory.com/1057",
        "categories": [
          "투자",
          "2차전지",
          "전기차"
        ],
        "isoDate": "2024-12-17T15:46:05.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유튜브 부동산 비공개 무료 강좌 후기 / 2024-12",
        "link": "http://serverdown.tistory.com/1056",
        "pubDate": "Wed, 18 Dec 2024 00:26:59 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1056#entry1056comment",
        "content": "<p data-ke-size=\"size16\">누구 방송인지는 적지는 않겠습니다.<br />비공개여서 적어도 되는지 모르겠습니다.</p>\n<p data-ke-size=\"size16\">이후에 있을 유료 강좌를 위해 처음이라 무료로 보여준거 같습니다.</p>\n<p data-ke-size=\"size16\">유튜브 링크로 진행했구요.<br />비공개 입니다.<br /><span style=\"text-align: start;\">2,500명 봣다고 나오네요</span></p>\n<p data-ke-size=\"size16\">이전에도 지속적으로 말씀하셨듯이<br />2025년 1분기에 시장이 잠깐 좋아질 수 있으나 <br />결국 안좋아지니 기대하지 말라고 하시네요</p>\n<p data-ke-size=\"size16\">위기 상황의 대체 투자로<br />1. 달러 예금<br />2. 금</p>\n<p data-ke-size=\"size16\">이렇게 추천하시네요.</p>\n<p data-ke-size=\"size16\">코인을 위험성도 있어서 그런지 권하지 않으셨습니다.</p>\n<p data-ke-size=\"size16\">한번의 침체는 반드시 오며 한국은 심하게 온다고 하고</p>\n<p data-ke-size=\"size16\">그걸 피한 다음에 부동산 투자의 황금기가 온다고 했습니다.</p>\n<p data-ke-size=\"size16\">정기적인 비공개 강의가 준비되어있어서 한번 들여볼 생각입니다.</p>\n<p data-ke-size=\"size16\">부동산 강의는 처음이군요.</p>\n<p data-ke-size=\"size16\">선동당할꺼면 빨리 선동하는게 좋다고 생각합니다.<br />처음이 가장 강력하게 갔던거 같군요.</p>",
        "contentSnippet": "누구 방송인지는 적지는 않겠습니다.\n비공개여서 적어도 되는지 모르겠습니다.\n이후에 있을 유료 강좌를 위해 처음이라 무료로 보여준거 같습니다.\n유튜브 링크로 진행했구요.\n비공개 입니다.\n2,500명 봣다고 나오네요\n이전에도 지속적으로 말씀하셨듯이\n2025년 1분기에 시장이 잠깐 좋아질 수 있으나 \n결국 안좋아지니 기대하지 말라고 하시네요\n위기 상황의 대체 투자로\n1. 달러 예금\n2. 금\n이렇게 추천하시네요.\n코인을 위험성도 있어서 그런지 권하지 않으셨습니다.\n한번의 침체는 반드시 오며 한국은 심하게 온다고 하고\n그걸 피한 다음에 부동산 투자의 황금기가 온다고 했습니다.\n정기적인 비공개 강의가 준비되어있어서 한번 들여볼 생각입니다.\n부동산 강의는 처음이군요.\n선동당할꺼면 빨리 선동하는게 좋다고 생각합니다.\n처음이 가장 강력하게 갔던거 같군요.",
        "guid": "http://serverdown.tistory.com/1056",
        "categories": [
          "투자",
          "부동산"
        ],
        "isoDate": "2024-12-17T15:26:59.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "코인 선물 망한 후 남긴 영상",
        "link": "http://serverdown.tistory.com/1055",
        "pubDate": "Tue, 17 Dec 2024 21:51:08 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1055#entry1055comment",
        "content": "<h1 style=\"background-color: #000000; color: #000000; text-align: start;\">30살 시드 8억에서 6천..코인 선물 퇴학 과정</h1>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=z1MoJ5qaX88&amp;t=56s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=z1MoJ5qaX88&amp;t=56s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=z1MoJ5qaX88\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cu9FVZ/hyXOkFBCnf/MMZLLIQvpIaDNZtHcfbfJk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/cfEvGh/hyXOdfoytB/AFyMhlV2STCLPvoJUCQpt0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"30살 시드 8억에서 6천..코인 선물 퇴학 과정\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/z1MoJ5qaX88\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">쓸쓸한 내용이군요</p>",
        "contentSnippet": "30살 시드 8억에서 6천..코인 선물 퇴학 과정\n영상: https://www.youtube.com/watch?v=z1MoJ5qaX88&t=56s\n\n\n\n \n쓸쓸한 내용이군요",
        "guid": "http://serverdown.tistory.com/1055",
        "categories": [
          "코인",
          "코인",
          "투자"
        ],
        "isoDate": "2024-12-17T12:51:08.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "동해 일 가스전 / 한국의 가스 시추선",
        "link": "http://serverdown.tistory.com/1054",
        "pubDate": "Sun, 15 Dec 2024 18:38:13 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1054#entry1054comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=1uArtOKw6mk\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=1uArtOKw6mk</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=1uArtOKw6mk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dpUqda/hyXKyLXIpO/BHREIQNm6LTiHpo6wc1Qg1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/rB23g/hyXKtcPXF3/jSPpnfIpoOlecK0OkK1rbK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"바닷속 수천미터 아래 묻혀있는 원유를 어떻게 추출할까? | 지금은 사라진 국내 유일의 석유 시\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/1uArtOKw6mk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">하루 1,100톤이 나온다고 한다.</p>\n<p data-ke-size=\"size16\">한국 가스 사용량의 2.3%,&nbsp;적지 않은 양이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">한국이 산유국 ?</h2>\n<p data-ke-size=\"size16\">사람들은 한국에 석유가 안나온다고 생각하는데</p>\n<p data-ke-size=\"size16\">적어도 아니라는 점을 알 수 있다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">원래 대부분의 시도는 실패한다.</h2>\n<p data-ke-size=\"size16\">자원 개발은 원래 험난하고 실패도 많다.</p>\n<p data-ke-size=\"size16\">아니&nbsp; 성공하기 직전까지 모든 시도는 실패다 성공하면 거기서부터 캐는 거라</p>\n<p data-ke-size=\"size16\">99 개 실패후 1 개 성공이 나오는 식이다.</p>\n<p data-ke-size=\"size16\">1개 성공하면 더이상 구멍 뚫을 필요도 없고 1개로 계속 캐내는 것이기 때문에&nbsp;</p>\n<p data-ke-size=\"size16\">확율로 따지만 언제나 극소한 확율 일 수 밖에 없다.</p>\n<p data-ke-size=\"size16\">바로 옆에다 하나 더 뚫으면 당연히 성공하겠지만 <br />굳이 성공확율 높이겠다고 이짓을 할 필요가 없는 것이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이명박 시절 PD 수첩이 볼리비아였던가 염호가 가짜라면 뻘짓을 촬영해갔었다.</p>\n<p data-ke-size=\"size16\">당시 사람들은 이 영상에 호도되어 자원 비리라느니 하면서 정부를 헐뜯었다.</p>\n<p data-ke-size=\"size16\">찍는 사람들 조차 무엇이 자윈이 되는 것이고 무엇이 아닌지를 구분하지 못하는 데 <br />일반인들에게 영상으로 사막에 모래만 보여줬으니 그들이 하는 말을 그대로 받아 들인 것이다.</p>\n<p data-ke-size=\"size16\">2024년 결국 염호에서 리튬을 캐기 시작했고 어렵게 성공한 것이다.&nbsp;<br />이런것은 사과 방송을 하지 않는다. <br />잘못된 영상을 믿었던 개인들이 잘 못한 것이라는 식이다.</p>\n<p data-ke-size=\"size16\">당시에도 환경을 오염시키면서 리튬을 추출할 수 있었지만&nbsp;<br />굳이 그렇게 하지 않고 친환경 적인 방법을 오랫동안 연구했다.</p>\n<p data-ke-size=\"size16\">다시 대왕카스테라 사건을 언급해야하는데<br />방송으로 \"이거 가짜입니다. 실패입니다.\" 라고 만드는 일은 아주 쉽다.</p>\n<p data-ke-size=\"size16\">인간이 시도하는 대부분의 시도는 실패이기 때문입니다.<br />특히 한번에 성공하는 경우는 정말 드물다.</p>\n<p data-ke-size=\"size16\">실패 케이스는 너무나 흔하기 때문에 방송으로 만들기 너무 쉽다.</p>\n<p data-ke-size=\"size16\">절대로 다른 사람의 실패를 그대로 믿어선 안된다.</p>\n<p data-ke-size=\"size16\">방송으로 보자마자 이거 가짜내 해도&nbsp;<br />그들이 노력하고 있고 성공을 믿는다면<br />옳은 길을 가고 있는 것이다.</p>\n<p data-ke-size=\"size16\">인간의 의지가 강하지 않다는 것은 본인들이 신년마다 세우는 계획이 3일만에 끝나는 것을 보면 알 것이다.</p>\n<p data-ke-size=\"size16\">포기하지 않는 사람들의 노력을 우숩게 보지 말자</p>\n<p data-ke-size=\"size16\">인간의 수명은 한계가 있다. 시간을 사용하면서 실패하는것을 알며 계속 도전하는 것은</p>\n<p data-ke-size=\"size16\">그 길이 맞기 때문일 것이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=1uArtOKw6mk\n\n\n\n하루 1,100톤이 나온다고 한다.\n한국 가스 사용량의 2.3%, 적지 않은 양이다.\n \n한국이 산유국 ?\n사람들은 한국에 석유가 안나온다고 생각하는데\n적어도 아니라는 점을 알 수 있다.\n \n원래 대부분의 시도는 실패한다.\n자원 개발은 원래 험난하고 실패도 많다.\n아니  성공하기 직전까지 모든 시도는 실패다 성공하면 거기서부터 캐는 거라\n99 개 실패후 1 개 성공이 나오는 식이다.\n1개 성공하면 더이상 구멍 뚫을 필요도 없고 1개로 계속 캐내는 것이기 때문에 \n확율로 따지만 언제나 극소한 확율 일 수 밖에 없다.\n바로 옆에다 하나 더 뚫으면 당연히 성공하겠지만 \n굳이 성공확율 높이겠다고 이짓을 할 필요가 없는 것이다.\n \n이명박 시절 PD 수첩이 볼리비아였던가 염호가 가짜라면 뻘짓을 촬영해갔었다.\n당시 사람들은 이 영상에 호도되어 자원 비리라느니 하면서 정부를 헐뜯었다.\n찍는 사람들 조차 무엇이 자윈이 되는 것이고 무엇이 아닌지를 구분하지 못하는 데 \n일반인들에게 영상으로 사막에 모래만 보여줬으니 그들이 하는 말을 그대로 받아 들인 것이다.\n2024년 결국 염호에서 리튬을 캐기 시작했고 어렵게 성공한 것이다. \n이런것은 사과 방송을 하지 않는다. \n잘못된 영상을 믿었던 개인들이 잘 못한 것이라는 식이다.\n당시에도 환경을 오염시키면서 리튬을 추출할 수 있었지만 \n굳이 그렇게 하지 않고 친환경 적인 방법을 오랫동안 연구했다.\n다시 대왕카스테라 사건을 언급해야하는데\n방송으로 \"이거 가짜입니다. 실패입니다.\" 라고 만드는 일은 아주 쉽다.\n인간이 시도하는 대부분의 시도는 실패이기 때문입니다.\n특히 한번에 성공하는 경우는 정말 드물다.\n실패 케이스는 너무나 흔하기 때문에 방송으로 만들기 너무 쉽다.\n절대로 다른 사람의 실패를 그대로 믿어선 안된다.\n방송으로 보자마자 이거 가짜내 해도 \n그들이 노력하고 있고 성공을 믿는다면\n옳은 길을 가고 있는 것이다.\n인간의 의지가 강하지 않다는 것은 본인들이 신년마다 세우는 계획이 3일만에 끝나는 것을 보면 알 것이다.\n포기하지 않는 사람들의 노력을 우숩게 보지 말자\n인간의 수명은 한계가 있다. 시간을 사용하면서 실패하는것을 알며 계속 도전하는 것은\n그 길이 맞기 때문일 것이다.",
        "guid": "http://serverdown.tistory.com/1054",
        "categories": [
          "시추선"
        ],
        "isoDate": "2024-12-15T09:38:13.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "탄핵 후 한국 주식의 흐름을 미리 판단해보자.시점",
        "link": "http://serverdown.tistory.com/1053",
        "pubDate": "Sun, 15 Dec 2024 11:00:02 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1053#entry1053comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"404\" data-origin-height=\"418\"><span data-url=\"https://blog.kakaocdn.net/dn/blQ5qf/btsLinwCaH9/xagSXrKjTUUZe41amYPvv1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/blQ5qf/btsLinwCaH9/xagSXrKjTUUZe41amYPvv1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/blQ5qf/btsLinwCaH9/xagSXrKjTUUZe41amYPvv1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FblQ5qf%2FbtsLinwCaH9%2FxagSXrKjTUUZe41amYPvv1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"404\" data-origin-height=\"418\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">상승관통형</h2>\n<p data-ke-size=\"size16\">월봉으로 지난달 하락의 절번을 넘으면 상승으로 볼 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"104\" data-origin-height=\"122\"><span data-url=\"https://blog.kakaocdn.net/dn/bTjCIq/btsLjSPgDrZ/9dSkU9H0YEkKZRUvz2OYl0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bTjCIq/btsLjSPgDrZ/9dSkU9H0YEkKZRUvz2OYl0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bTjCIq/btsLjSPgDrZ/9dSkU9H0YEkKZRUvz2OYl0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbTjCIq%2FbtsLjSPgDrZ%2F9dSkU9H0YEkKZRUvz2OYl0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"104\" data-origin-height=\"122\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">현재 코스피 월봉입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"88\" data-origin-height=\"110\"><span data-url=\"https://blog.kakaocdn.net/dn/CnuW8/btsLkitg52v/kYXsO2MSi2uurApuFSJgT0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/CnuW8/btsLkitg52v/kYXsO2MSi2uurApuFSJgT0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/CnuW8/btsLkitg52v/kYXsO2MSi2uurApuFSJgT0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FCnuW8%2FbtsLkitg52v%2FkYXsO2MSi2uurApuFSJgT0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"88\" data-origin-height=\"110\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">코스피 월봉입니다. 11월 하락이 매우 컷군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">영상</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=X4Bd8RijLj4\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=X4Bd8RijLj4</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=X4Bd8RijLj4\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cNDVrj/hyXKjnGSLF/YFoRSUKXkyKksDefC2gO7k/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/cyhB4S/hyXKlTlYPm/FOWkuKn4rrupBvjvKmAMy1/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"탄핵안 가결. 이후 주목해야 할 종목!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/X4Bd8RijLj4\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">영상에서 3가지를 알려주는데 모두 일리가 있습니다.</p>\n<p data-ke-size=\"size16\">1. 2중 바닥 완성<br />2. 11 - 12 월 봉이 상승 관통형 혹은 장악형이 될 것</p>\n<p data-ke-size=\"size16\">입니다.</p>\n<p data-ke-size=\"size16\">코스피 코스닥은 24년 긴 하락을 겪었으며<br />금투세 이슈도 끝났습니다.<br />25년은 홀 수의 해이기도 해서</p>\n<p data-ke-size=\"size16\">오를 수 있는 요소는 충분이 있습니다.<br />바닥나오는 시작이 되었으면 좋겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "상승관통형\n월봉으로 지난달 하락의 절번을 넘으면 상승으로 볼 수 있습니다.\n \n\n\n현재 코스피 월봉입니다.\n \n\n\n코스피 월봉입니다. 11월 하락이 매우 컷군요\n \n \n \n영상\n영상: https://www.youtube.com/watch?v=X4Bd8RijLj4\n\n\n\n영상에서 3가지를 알려주는데 모두 일리가 있습니다.\n1. 2중 바닥 완성\n2. 11 - 12 월 봉이 상승 관통형 혹은 장악형이 될 것\n입니다.\n코스피 코스닥은 24년 긴 하락을 겪었으며\n금투세 이슈도 끝났습니다.\n25년은 홀 수의 해이기도 해서\n오를 수 있는 요소는 충분이 있습니다.\n바닥나오는 시작이 되었으면 좋겠습니다.",
        "guid": "http://serverdown.tistory.com/1053",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-12-15T02:00:02.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "(플레이중) 파이어 엠블렘 인게이지 / 게임 / 스위치",
        "link": "http://serverdown.tistory.com/1052",
        "pubDate": "Sun, 15 Dec 2024 10:24:30 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1052#entry1052comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1000\" data-origin-height=\"562\"><span data-url=\"https://blog.kakaocdn.net/dn/b5lqJs/btsLiDeRs1A/dDFQPo4QwbM0eoaRZq4v80/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/b5lqJs/btsLiDeRs1A/dDFQPo4QwbM0eoaRZq4v80/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/b5lqJs/btsLiDeRs1A/dDFQPo4QwbM0eoaRZq4v80/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb5lqJs%2FbtsLiDeRs1A%2FdDFQPo4QwbM0eoaRZq4v80%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"1000\" data-origin-height=\"562\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">게임팩을 받은지는 한참되었는데 이제 켜봅니다.</p>\n<p data-ke-size=\"size16\">시작일: 2024-11-13 / 탄핵 투표에 불만을 품고 전날에 시작</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">시작전 알아둘 것</h2>\n<p data-ke-size=\"size16\">1. 숨겨진거 찾는다고 고생할 필요가 없습니다.<br />&nbsp; &nbsp; 산책이나 성에서 찾을 수 있는건 대부분 없어도 엔딩을 보는데 지장이 없습니다.</p>\n<p data-ke-size=\"size16\">2. 다회차 요소가 없습니다.<br />&nbsp; &nbsp; 아무리 많이 엔딩을 봐도 쌓이는게 없습니다.<br />&nbsp; &nbsp; 성장이 느린 케릭터는 결국 못 쓰는 결과로 귀결 굅니다.<br />&nbsp; &nbsp; 유저들의 최대 불만요소입니다.<br />&nbsp; &nbsp; &nbsp;1년도 지났고 DLC 도 다 나온거 같은데 여전히 없는걸로 봐서 안넣어줄 모양인거 같습니다.</p>\n<p data-ke-size=\"size16\">3. 루나틱 난이도 (최고 난이도) 특징<br />&nbsp; &nbsp; 적의 능력치가 높아지고<br />&nbsp; &nbsp; 더 많이 등장합니다.</p>\n<p data-ke-size=\"size16\">4. 케주얼 모드 / 클래식 모드<br />&nbsp; &nbsp; &nbsp;클래식 모드에서는 동료가 죽으면 이후 전투에서 나올 수 없습니다.<br />&nbsp; &nbsp; &nbsp;스토리에 필요하면 컷씬에 등장은 한다는군요<br />&nbsp; &nbsp; &nbsp; 캐주얼 모드는 그런거 없고 계속 나옵니다. <br />&nbsp; &nbsp; &nbsp; 저는 어렵고 여러번 플레이할 시간도 없어서 고기방패로 이용했습니다.<br /><br /></p>\n<p data-ke-size=\"size16\">5. 패배하더라도 경험치 먹은 상태에서 다시 도전할 수 있게 해줍니다.<br />&nbsp; &nbsp; 결국 레벨이 오르다보면 쉬워져서 클리어 가능해집니다.<br />&nbsp; &nbsp; 너무 스트레스 받으면서 리셋 하실 필요는 없습니다.</p>\n<p data-ke-size=\"size16\">6. 난이도에 따라 레벨업 능력치의 차이가 있음<br />&nbsp; &nbsp; 일반 : 능력치마다 안보이는 확율 수치가 누적되며 결국엔 능력이 오름<br />&nbsp; &nbsp; &nbsp;하드 / 루나틱: 능력치마다 안보이듣 확율에 의해 오름<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 레벨이 잘 안오르면 스테이지를 다시 시작하면 확율이 변경됨<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 여러번하다보면 잘 올라가는 현상이 있음<br />&nbsp; &nbsp; &nbsp; 루나틱 랜덤띵: 처음에 레벨당 능력치가 다 정해져있어 리셋해봐도 똑같음<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;꼼수 부리지말고 열심히 깨라고 하네요</p>",
        "contentSnippet": "게임팩을 받은지는 한참되었는데 이제 켜봅니다.\n시작일: 2024-11-13 / 탄핵 투표에 불만을 품고 전날에 시작\n \n시작전 알아둘 것\n1. 숨겨진거 찾는다고 고생할 필요가 없습니다.\n    산책이나 성에서 찾을 수 있는건 대부분 없어도 엔딩을 보는데 지장이 없습니다.\n2. 다회차 요소가 없습니다.\n    아무리 많이 엔딩을 봐도 쌓이는게 없습니다.\n    성장이 느린 케릭터는 결국 못 쓰는 결과로 귀결 굅니다.\n    유저들의 최대 불만요소입니다.\n     1년도 지났고 DLC 도 다 나온거 같은데 여전히 없는걸로 봐서 안넣어줄 모양인거 같습니다.\n3. 루나틱 난이도 (최고 난이도) 특징\n    적의 능력치가 높아지고\n    더 많이 등장합니다.\n4. 케주얼 모드 / 클래식 모드\n     클래식 모드에서는 동료가 죽으면 이후 전투에서 나올 수 없습니다.\n     스토리에 필요하면 컷씬에 등장은 한다는군요\n      캐주얼 모드는 그런거 없고 계속 나옵니다. \n      저는 어렵고 여러번 플레이할 시간도 없어서 고기방패로 이용했습니다.\n\n5. 패배하더라도 경험치 먹은 상태에서 다시 도전할 수 있게 해줍니다.\n    결국 레벨이 오르다보면 쉬워져서 클리어 가능해집니다.\n    너무 스트레스 받으면서 리셋 하실 필요는 없습니다.\n6. 난이도에 따라 레벨업 능력치의 차이가 있음\n    일반 : 능력치마다 안보이는 확율 수치가 누적되며 결국엔 능력이 오름\n     하드 / 루나틱: 능력치마다 안보이듣 확율에 의해 오름\n              레벨이 잘 안오르면 스테이지를 다시 시작하면 확율이 변경됨\n              여러번하다보면 잘 올라가는 현상이 있음\n      루나틱 랜덤띵: 처음에 레벨당 능력치가 다 정해져있어 리셋해봐도 똑같음\n               꼼수 부리지말고 열심히 깨라고 하네요",
        "guid": "http://serverdown.tistory.com/1052",
        "categories": [
          "게임",
          "게임"
        ],
        "isoDate": "2024-12-15T01:24:30.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "2024년 12월 14일 토요일",
        "link": "https://jojoldu.tistory.com/814",
        "pubDate": "Sun, 15 Dec 2024 01:07:51 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/814#entry814comment",
        "content": "<p data-ke-size=\"size16\">오전에 운동 갈때는 쌀쌀했는데, 막상 해가 뜨기 시작하니 그렇게 춥지 않았다.<br />운동 끝나고 오후 1시 점심을 먹고 집을 나섰다.</p>\n<p data-ke-size=\"size16\">와이프는 부산 결혼식이 있었다.<br />오히려 너무 혼잡할것 같아 와이프가 다칠까봐 걱정되었는데 차라리 잘되었다 싶어서 혼자서 9호선을 탔다.</p>\n<p data-ke-size=\"size16\">9호선 국회의사당역은 무정차 역이 되어서 그 전인 여의도역에서 내릴려고 했다.<br />근데 여의도역도 너무 많은 사람들로 인해서 혼란스러웠다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/b5EtxW/btsLiKre0Vu/7KYrKM1LAds7iqvkwHt47k/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/b5EtxW/btsLiKre0Vu/7KYrKM1LAds7iqvkwHt47k/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/b5EtxW/btsLiKre0Vu/7KYrKM1LAds7iqvkwHt47k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb5EtxW%2FbtsLiKre0Vu%2F7KYrKM1LAds7iqvkwHt47k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"1.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/b1oAcC/btsLikmeKPF/3l7NkiREW8Yzgj2X4C7vK1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/b1oAcC/btsLikmeKPF/3l7NkiREW8Yzgj2X4C7vK1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/b1oAcC/btsLikmeKPF/3l7NkiREW8Yzgj2X4C7vK1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb1oAcC%2FbtsLikmeKPF%2F3l7NkiREW8Yzgj2X4C7vK1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"2.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"3.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/XEIVU/btsLimLaOg6/Yj4fEt8zXkEAvDAvtbIshK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/XEIVU/btsLimLaOg6/Yj4fEt8zXkEAvDAvtbIshK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/XEIVU/btsLimLaOg6/Yj4fEt8zXkEAvDAvtbIshK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FXEIVU%2FbtsLimLaOg6%2FYj4fEt8zXkEAvDAvtbIshK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"3.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">보통 이정도로 사람이 많으면 부정적인 에너지가 가득 차게 된다.<br />근데 이 많은 사람들이 너무 질서정연하게 이동하고, 친절한 안내를 해주시는 분들까지 있어서 몽글몽글해졌다.</p>\n<p data-ke-size=\"size16\">역 밖으로 빠져나오는데만 30분이 걸렸는데, 이미 도로에는 차는 없고 사람들로 가득했다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"4.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/ccNGEw/btsLinpMoGU/Ef1BceFTA1mpGex5HCEXu0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ccNGEw/btsLinpMoGU/Ef1BceFTA1mpGex5HCEXu0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ccNGEw/btsLinpMoGU/Ef1BceFTA1mpGex5HCEXu0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FccNGEw%2FbtsLinpMoGU%2FEf1BceFTA1mpGex5HCEXu0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"4.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"5.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/dlr0NO/btsLiJsxmh0/6iIvZnPyIHOR6f4ygbmiik/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dlr0NO/btsLiJsxmh0/6iIvZnPyIHOR6f4ygbmiik/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dlr0NO/btsLiJsxmh0/6iIvZnPyIHOR6f4ygbmiik/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdlr0NO%2FbtsLiJsxmh0%2F6iIvZnPyIHOR6f4ygbmiik%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"5.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"7.png\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/bpJOX3/btsLjbvdERB/w4cajGhlPCNQ0t8akFD7FK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bpJOX3/btsLjbvdERB/w4cajGhlPCNQ0t8akFD7FK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bpJOX3/btsLjbvdERB/w4cajGhlPCNQ0t8akFD7FK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbpJOX3%2FbtsLjbvdERB%2Fw4cajGhlPCNQ0t8akFD7FK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"7.png\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">아직 결과가 나오려면 몇시간이나 남았음에도 이 추운 날씨에 사람들이 애기들, 연인들, 가족들이 다 같이 모여서 한걸음씩 발 맞춰 움직였다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"8.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/cgEoC6/btsLiXjwi85/imeQfbpKqKiRYEFeqyecu1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cgEoC6/btsLiXjwi85/imeQfbpKqKiRYEFeqyecu1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cgEoC6/btsLiXjwi85/imeQfbpKqKiRYEFeqyecu1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcgEoC6%2FbtsLiXjwi85%2FimeQfbpKqKiRYEFeqyecu1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"8.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"9.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/sv9sk/btsLjrdrUE0/sjCtkF4gvxoorSvN7p7O5K/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/sv9sk/btsLjrdrUE0/sjCtkF4gvxoorSvN7p7O5K/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/sv9sk/btsLjrdrUE0/sjCtkF4gvxoorSvN7p7O5K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fsv9sk%2FbtsLjrdrUE0%2FsjCtkF4gvxoorSvN7p7O5K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"9.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"10.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/buvjVM/btsLisYPmU6/C7ZpUI7kExLRZSa6PuULB1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/buvjVM/btsLisYPmU6/C7ZpUI7kExLRZSa6PuULB1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/buvjVM/btsLisYPmU6/C7ZpUI7kExLRZSa6PuULB1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbuvjVM%2FbtsLisYPmU6%2FC7ZpUI7kExLRZSa6PuULB1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"10.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">몇걸음 가지 못했는데 더이상 갈 길이 없을 정도로 사람이 가득했다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"12.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/zD1oK/btsLjnITkRY/D7FZDlQg9tt9CHTMINvKx0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/zD1oK/btsLjnITkRY/D7FZDlQg9tt9CHTMINvKx0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/zD1oK/btsLjnITkRY/D7FZDlQg9tt9CHTMINvKx0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzD1oK%2FbtsLjnITkRY%2FD7FZDlQg9tt9CHTMINvKx0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"12.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"13.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/baEqzA/btsLitDt4IF/NwSJ7M9FRuiufpyf6Qg3mk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/baEqzA/btsLitDt4IF/NwSJ7M9FRuiufpyf6Qg3mk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/baEqzA/btsLitDt4IF/NwSJ7M9FRuiufpyf6Qg3mk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbaEqzA%2FbtsLitDt4IF%2FNwSJ7M9FRuiufpyf6Qg3mk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"13.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">바닥이 너무 차가운데도 이미 아스팔트 바닥에 앉아서 노래를 부르고 외치는 사람들이 많았다.<br />소심해서 입 밖으로 까지는 노래를 따라 부르지는 못하고 아주 작게만 따라 부르면서 걸어갔다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"14.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/cijkfc/btsLkb8Rob0/YjCXTIHsczoiYbEwAnpkh0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cijkfc/btsLkb8Rob0/YjCXTIHsczoiYbEwAnpkh0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cijkfc/btsLkb8Rob0/YjCXTIHsczoiYbEwAnpkh0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcijkfc%2FbtsLkb8Rob0%2FYjCXTIHsczoiYbEwAnpkh0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"14.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"15.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/c9cncQ/btsLiKEIWec/TsRx1jC231SHqI3gEriIf0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c9cncQ/btsLiKEIWec/TsRx1jC231SHqI3gEriIf0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/c9cncQ/btsLiKEIWec/TsRx1jC231SHqI3gEriIf0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc9cncQ%2FbtsLiKEIWec%2FTsRx1jC231SHqI3gEriIf0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"15.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">가던 길로는 더이상 앞으로 갈 수 없어서, 조금 더 가까이 가고싶어서 옆길로 빠져서 더 걸어갔다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"16.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/dAMdwJ/btsLjEDGgNt/QCHyKbvx2ssGdlN8wbOmHK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dAMdwJ/btsLjEDGgNt/QCHyKbvx2ssGdlN8wbOmHK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dAMdwJ/btsLjEDGgNt/QCHyKbvx2ssGdlN8wbOmHK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdAMdwJ%2FbtsLjEDGgNt%2FQCHyKbvx2ssGdlN8wbOmHK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"16.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">샛길로, 샛길로 빠지면서 최대한 앞으로 갔더니 그나마 보였다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"17.png\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/YDOLW/btsLinDl7S7/0wvfeKXubR05eKifcurwXK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/YDOLW/btsLinDl7S7/0wvfeKXubR05eKifcurwXK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/YDOLW/btsLinDl7S7/0wvfeKXubR05eKifcurwXK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FYDOLW%2FbtsLinDl7S7%2F0wvfeKXubR05eKifcurwXK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"17.png\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"20.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"><span data-url=\"https://blog.kakaocdn.net/dn/c3TRVm/btsLjvfGSL6/5XloHnHp3EpIVJi1FyFyf0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c3TRVm/btsLjvfGSL6/5XloHnHp3EpIVJi1FyFyf0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/c3TRVm/btsLjvfGSL6/5XloHnHp3EpIVJi1FyFyf0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc3TRVm%2FbtsLjvfGSL6%2F5XloHnHp3EpIVJi1FyFyf0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"20.jpg\" data-origin-width=\"1280\" data-origin-height=\"960\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이렇게 거리가 먼 데도 사람들이 가득차있고, 그 앞을 이미 몇시간 전부터 사람들이 다 채웠다는 것을 8년전에도, 이번에도 보게 되었다.<br />멋진 분들이 참 많은것 같다.</p>\n<p data-ke-size=\"size16\">휴대폰 인터넷이 아예 안되어서 초조하게 기다리다가 사람들의 환호에 결과를 알 수 있었다.</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/451645556\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bDnuJR/hyXKoidbIT/yKKHGaLrOV75HRLovBwnok/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/97e0E/hyXOjl0s1k/i3uOSNDX2DPutQDKK75GvK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"'기억보단 기록을'에서 업로드한 동영상\" data-video-play-service=\"daum_tistory\" data-original-url=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/451645556?service=daum_tistory\" width=\"860\" height=\"484\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">2024년 12월 14일 토요일 오후 5시, 헌정사 3번째 탄핵이 가결되었다.</p>",
        "contentSnippet": "오전에 운동 갈때는 쌀쌀했는데, 막상 해가 뜨기 시작하니 그렇게 춥지 않았다.\n운동 끝나고 오후 1시 점심을 먹고 집을 나섰다.\n와이프는 부산 결혼식이 있었다.\n오히려 너무 혼잡할것 같아 와이프가 다칠까봐 걱정되었는데 차라리 잘되었다 싶어서 혼자서 9호선을 탔다.\n9호선 국회의사당역은 무정차 역이 되어서 그 전인 여의도역에서 내릴려고 했다.\n근데 여의도역도 너무 많은 사람들로 인해서 혼란스러웠다.\n\n\n\n\n보통 이정도로 사람이 많으면 부정적인 에너지가 가득 차게 된다.\n근데 이 많은 사람들이 너무 질서정연하게 이동하고, 친절한 안내를 해주시는 분들까지 있어서 몽글몽글해졌다.\n역 밖으로 빠져나오는데만 30분이 걸렸는데, 이미 도로에는 차는 없고 사람들로 가득했다.\n\n\n\n\n아직 결과가 나오려면 몇시간이나 남았음에도 이 추운 날씨에 사람들이 애기들, 연인들, 가족들이 다 같이 모여서 한걸음씩 발 맞춰 움직였다.\n\n\n\n\n몇걸음 가지 못했는데 더이상 갈 길이 없을 정도로 사람이 가득했다.\n\n\n\n바닥이 너무 차가운데도 이미 아스팔트 바닥에 앉아서 노래를 부르고 외치는 사람들이 많았다.\n소심해서 입 밖으로 까지는 노래를 따라 부르지는 못하고 아주 작게만 따라 부르면서 걸어갔다.\n\n\n\n가던 길로는 더이상 앞으로 갈 수 없어서, 조금 더 가까이 가고싶어서 옆길로 빠져서 더 걸어갔다.\n\n\n샛길로, 샛길로 빠지면서 최대한 앞으로 갔더니 그나마 보였다.\n\n\n\n이렇게 거리가 먼 데도 사람들이 가득차있고, 그 앞을 이미 몇시간 전부터 사람들이 다 채웠다는 것을 8년전에도, 이번에도 보게 되었다.\n멋진 분들이 참 많은것 같다.\n휴대폰 인터넷이 아예 안되어서 초조하게 기다리다가 사람들의 환호에 결과를 알 수 있었다.\n\n\n\n2024년 12월 14일 토요일 오후 5시, 헌정사 3번째 탄핵이 가결되었다.",
        "guid": "https://jojoldu.tistory.com/814",
        "categories": [
          "생각정리",
          "9호선",
          "여의도",
          "일기"
        ],
        "isoDate": "2024-12-14T16:07:51.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": [
      {
        "creator": "megayuchi",
        "title": "Windows Heap 탐구",
        "link": "https://megayuchi.com/2024/12/17/windows-heap-%ed%83%90%ea%b5%ac/",
        "pubDate": "Tue, 17 Dec 2024 14:07:00 +0000",
        "content:encodedSnippet": "",
        "dc:creator": "megayuchi",
        "comments": "https://megayuchi.com/2024/12/17/windows-heap-%ed%83%90%ea%b5%ac/#respond",
        "content": "",
        "contentSnippet": "",
        "guid": "http://megayuchi.com/?p=7074",
        "categories": [
          "Development",
          "C++",
          "windows programming"
        ],
        "isoDate": "2024-12-17T14:07:00.000Z"
      },
      {
        "creator": "megayuchi",
        "title": "DLL에서 static CRT를 사용하면 각각의 DLL은 다른 heap을 사용하는가? #2",
        "link": "https://megayuchi.com/2024/12/16/dll%ec%97%90%ec%84%9c-static-crt%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%98%eb%a9%b4-%ea%b0%81%ea%b0%81%ec%9d%98-dll%ec%9d%80-%eb%8b%a4%eb%a5%b8-heap%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94/",
        "pubDate": "Mon, 16 Dec 2024 11:15:49 +0000",
        "content:encodedSnippet": "앞서 static CRT마다 각각의 heap을 가지는지 여부는 MSVCRT와 UCRT의 차이로 결정된다고 포스팅 했었다.\n\nDLL에서 static CRT를 사용하면 각각의 DLL은 다른 heap을 사용하는가?\n\n\n\n\n\n결론부터 얘기하자면 앞선 포스팅의 결과는 틀렸다.\n조금 더 테스트를 해보니 static CRT를 사용하는 DLL을 로드 할 때 heap이 증가되는가의 여부. 즉 CRT가 초기화될 때 마다 개별적인 heap을 가지는지의 여부는 UCRT와 MSVCRT의 차이는 아니다. 이미 MSVCRT 시절에 어느 시점부터 정책이 변경됐다.\n아래는 테스트 결과\nVS2003 -> msvcr71d.dll!malloc(unsigned int nSize) -> heap 개수 증가\nVS2010 -> msvcr100d.dll!_malloc() -> heap 개수 증가\n————————————————————————–\nVS2012 -> msvcr110d.dll!malloc(unsigned int nSize) -> heap 개수 증가 안함\nVS2013 -> msvcr120d.dll!malloc(unsigned int nSize) -> heap 개수 증가 안함\nVS2010-msvcr10.0 에서 VS2012-msvcr11.0로 바뀔 때 정책이 바뀐 것이다.\n뭐 크게 중요하진 않지만 잘못된 정보는 바로 잡아야 하므로 테스트 해봤다.",
        "dc:creator": "megayuchi",
        "comments": "https://megayuchi.com/2024/12/16/dll%ec%97%90%ec%84%9c-static-crt%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%98%eb%a9%b4-%ea%b0%81%ea%b0%81%ec%9d%98-dll%ec%9d%80-%eb%8b%a4%eb%a5%b8-heap%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94/#respond",
        "content": "앞서 static CRT마다 각각의 heap을 가지는지 여부는 MSVCRT와 UCRT의 차이로 결정된다고 포스팅 했었다. 결론부터 얘기하자면 앞선 포스팅의 결과는 틀렸다.조금 더 테스트를 해보니 static CRT를 사용하는 DLL을 로드 할 때 heap이 증가되는가의 여부. 즉 CRT가 초기화될 때 마다 개별적인 heap을 가지는지의 여부는 UCRT와 MSVCRT의 차이는 아니다. 이미 MSVCRT 시절에 어느 시점부터 정책이 변경됐다. 아래는 테스트 결과 &#8230; <a class=\"more-link\" href=\"https://megayuchi.com/2024/12/16/dll%ec%97%90%ec%84%9c-static-crt%eb%a5%bc-%ec%82%ac%ec%9a%a9%ed%95%98%eb%a9%b4-%ea%b0%81%ea%b0%81%ec%9d%98-dll%ec%9d%80-%eb%8b%a4%eb%a5%b8-heap%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94/\">More <span class=\"screen-reader-text\">DLL에서 static CRT를 사용하면 각각의 DLL은 다른 heap을 사용하는가?&#160;#2</span></a>",
        "contentSnippet": "앞서 static CRT마다 각각의 heap을 가지는지 여부는 MSVCRT와 UCRT의 차이로 결정된다고 포스팅 했었다. 결론부터 얘기하자면 앞선 포스팅의 결과는 틀렸다.조금 더 테스트를 해보니 static CRT를 사용하는 DLL을 로드 할 때 heap이 증가되는가의 여부. 즉 CRT가 초기화될 때 마다 개별적인 heap을 가지는지의 여부는 UCRT와 MSVCRT의 차이는 아니다. 이미 MSVCRT 시절에 어느 시점부터 정책이 변경됐다. 아래는 테스트 결과 … More DLL에서 static CRT를 사용하면 각각의 DLL은 다른 heap을 사용하는가? #2",
        "guid": "http://megayuchi.com/?p=7070",
        "categories": [
          "Development",
          "C++",
          "Visual Studio",
          "windows programming"
        ],
        "isoDate": "2024-12-16T11:15:49.000Z"
      }
    ]
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "Java 가상 스레드, 깊이 있는 소스 코드 분석과 작동 원리 2편 - 컨텍스트 스위칭",
        "link": "https://techblog.lycorp.co.jp/ko/about-java-virtual-thread-2",
        "pubDate": "Thu, 19 Dec 2024 07:00:00 GMT",
        "content": "들어가며\n지난 1편에서는 가상 스레드(virtual thread)의 장점을 살펴보고 가상 스레드를 어떻게 생성하고 시작하는지 알아봤습니다. 이어서 이번 글에서는 컨텍스트 스위칭(c...",
        "contentSnippet": "들어가며\n지난 1편에서는 가상 스레드(virtual thread)의 장점을 살펴보고 가상 스레드를 어떻게 생성하고 시작하는지 알아봤습니다. 이어서 이번 글에서는 컨텍스트 스위칭(c...",
        "guid": "https://techblog.lycorp.co.jp/ko/about-java-virtual-thread-2",
        "isoDate": "2024-12-19T07:00:00.000Z"
      },
      {
        "title": "Java 가상 스레드, 깊이 있는 소스 코드 분석과 작동 원리 1편 - 생성과 시작",
        "link": "https://techblog.lycorp.co.jp/ko/about-java-virtual-thread-1",
        "pubDate": "Fri, 13 Dec 2024 05:30:00 GMT",
        "content": "들어가며\nJava의 가상 스레드(virtual thread)는 효율적인 동시성 애플리케이션을 개발하기 위해 설계된 경량 스레드입니다. 기존의 Java 스레드 모델과 비교해 더 적은...",
        "contentSnippet": "들어가며\nJava의 가상 스레드(virtual thread)는 효율적인 동시성 애플리케이션을 개발하기 위해 설계된 경량 스레드입니다. 기존의 Java 스레드 모델과 비교해 더 적은...",
        "guid": "https://techblog.lycorp.co.jp/ko/about-java-virtual-thread-1",
        "isoDate": "2024-12-13T05:30:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": [
      {
        "title": "2024 프론트엔드 뉴스 한 방에 몰아 보기",
        "link": "https://meetup.nhncloud.com/posts/390",
        "pubDate": "Mon, 16 Dec 2024 04:57:57 GMT",
        "content": "![NHN Cloud_meetup banner_frontendnews2024_202412_900.png](https://image.toast.com/aaaadh/real/2024/techblog/NHN%20Cloudmeetup%20bannerfrontendnews2024202412900.png)\r\r\n\r\r\n안녕하세요. NHN Cloud NCUI개발팀 이진우입니다.\r\r\n\r\r\n저는 올해 2월부터 매주 프론트엔드 관련 다양한 뉴스레터를 읽고, FE 개발 직무 동료들에게 흥미로운 뉴스, 읽을거리, 유용한 도구 등을 공유해 왔습니다.\r\r\n어느덧 연말이 가까워지며 쌓여 온 링크들은 상당한 양이 되었는데요. 이를 정리하며 개인적으로 인상 깊었던 주제와 도구를 공유드리고자 합니다.\r\r\n\r\r\n물론, 개인적인 관심사가 반영되어 있기도 하고, 조직 내에서 영향이 큰 프레임워크나 기술 스택 위주로 정리된 만큼 부족한 부분이 있을 수 있습니다.\r\r\n훑어보시면서 혹시 낯설거나 관심이 가는 주제가 있다면 함께 제공한 읽을거리 링크가 도움이 되기를 바랍니다.\r\r\n(정리된 내용 중 일부는 시간이 지나며 업데이트되거나 새로운 정보로 대체되었을 수 있습니다. )\r\r\n\r\r\n## 프론트엔드 기술 스택\r\r\n\r\r\n프론트엔드 개발은 마치 9G 중력 가속도처럼 빠르게 변하며 개발자들을 압박해 왔지만 최근엔 변화의 속도가 다소 안정된 듯한 느낌입니다. ☕️ 새로운 개념을 바탕으로 한 프레임워크와 도구가 끊임없이 쏟아졌던 과거와 달리, 이제는 더 나은 생산성과 사용자 경험을 위한 실용적인 도구들이 점차 정착되고 있습니다. 2024년에 출시되진 않았지만, 개인적으로 올해 활약상이 인상 깊었던 몇 가지 라이브러리를 소개하고자 합니다. ‍\r\r\n\r\r\n### shadcn/ui\r\r\n\r\r\n[shadcn/ui](https://ui.shadcn.com/)는 TailwindCSS와 Headless UI의 철학을 결합한 라이브러리로, 복사-붙여넣기(copy-paste) 방식으로 빠르게 UI를 구현할 수 있는 점이 특징입니다. 개발자는 필요한 컴포넌트를 복사한 뒤, 프로젝트 요구에 맞게 간단히 수정하여 사용할 수 있어 효율성이 뛰어납니다.\r\r\n\r\r\n* [(번역) shadcn/ui의 해부](https://siosio3103.medium.com/shadcn-ui-%EC%9D%98-%ED%95%B4%EB%B6%80-ebd469c34614)\r\r\n* [How headless components became the future for building UI libraries](https://www.subframe.com/blog/how-headless-components-became-the-future-for-building-ui-libraries)\r\r\n* [Headless, boneless, skinless & lifeless UI](https://nerdy.dev/headless-boneless-and-skinless-ui)\r\r\n\r\r\n### Zod\r\r\n\r\r\n[Zod](https://zod.dev/)는 TypeScript와 완벽히 통합된 스키마 선언 및 데이터 검증 라이브러리로, 간결한 문법과 타입 추론을 통해 개발 생산성을 크게 높여 서버-클라이언트 간 데이터 구조를 명확하게 정의하고 유지할 수 있습니다. REST API, GraphQL, Form Data Validation 등 다양한 환경에서 활용 가능하며, 코드의 가독성을 유지하면서도 강력한 검증 로직을 구현할 수 있는 도구입니다.\r\r\n\r\r\n* [The process.env frontend time bomb](https://massimilianomirra.com/notes/the-frontend-process-env-time-bomb-plus-a-sustainable-definition-of-fixed)\r\r\n* [Making a REST API typesafe with Ready Query and Zod](https://noahflk.com/blog/typesafe-rest-api)\r\r\n\r\r\n### Vitest\r\r\n\r\r\n[Vitest](https://vitest.dev/)는 Vite 기반의 테스트 러너로, 빠른 테스트 실행 속도와 간편한 설정으로 주목 받고 있습니다. 테스트 생태계의 하나의 표준과도 같았던 Jest와 유사한 API를 제공해 쉽게 전환이 가능하며, ESM과 TypeScript를 기본적으로 지원합니다. 특히 Vite와의 긴밀한 통합을 통해 개발 환경과 테스트 환경 간의 일관성을 유지할 수 있어 Vite 사용 시 더욱 효율적인 테스트 경험을 제공합니다.\r\r\n\r\r\n* [Vitest vs. Jest](https://www.speakeasy.com/post/vitest-vs-jest)\r\r\n* [Storybook 8.3 - First class Vitest integration](https://storybook.js.org/blog/storybook-8-3/)\r\r\n* [JavaScript unit testing frameworks in 2024: A comparison](https://raygun.com/blog/javascript-unit-testing-frameworks/#vitest)\r\r\n\r\r\n### 기타\r\r\n\r\r\n* [Biome](https://biomejs.dev/)은 ESLint, Prettier의 대체 도구로 빠른 속도를 자랑합니다. 하지만 파일 간의 의존성이나 프로젝트 전반의 정보를 필요로 하는 정적 분석엔 아직 개선이 필요한데, 최근 Biome의 개발자는 [다중 파일 분석의 접근 방법](https://arendjr.nl/blog/2024/11/biome_approach_to_multi_file_analysis/)을 공유했습니다.\r\r\n\r\r\n* 요즘 웹사이트만 들어가면 쿠키 동의 때문에 정신없으시죠? GDPR(general data protection regulation)을 준수하기 위함인데 이와 관련된 라이브러리들([cookieconsent](https://github.com/brainsum/cookieconsent), [cookie checker](https://complydog.com/free-cookie-checker-tool))이 눈에 띄었습니다.\r\r\n\r\r\n* Zod의 대안으로 Yup, AJV, Joi, Superstruct 등이 있지만 TypeScript와의 통합이 부족하거나, 기능이 부족하거나, 러닝 커브가 높기도 합니다. 하지만 최근 [Vailbot](https://valibot.dev/)이 v1 베타 기간을 갖고 있는데, 더 작은 번들 사이즈로도 Zod와 유사한 기능을 제공해 주목을 받고 있습니다.\r\r\n\r\r\n* [TanStack](https://tanstack.com/)은 Tanner Linsley가 운영하는 라이브러리 생태계로, 현재 9개 라이브러리를 운영하며 프론트엔드 개발에서 빠르게 주목 받고 있습니다. 특히 알파 단계인 TanStack Start 프레임워크는 Next.js의 잠재적 경쟁자로 화제가 되고 있으며, TanStack Router는 SSR을 강력히 지원하며 클라이언트 사이드의 인터랙션도 최적화합니다. 또한, 엔터프라이즈급 라우팅을 타입 안전하게 구현하며, 번들링 및 배포는 [Vinxi](https://github.com/nksaraf/vinxi)를 통해 처리해 높은 성능과 유연성을 제공합니다.\r\r\n\r\r\n## React\r\r\n\r\r\n### React Deep Dive\r\r\n\r\r\nNHN Cloud의 FE 개발 조직은 React를 사용하고 있는데요. 사실 React로 기술 스택을 전환한 지는 React의 역사에 비해 그리 오래되지 않았습니다. 시간이 지남에 따라 React 사용에 익숙해지면서 내부 동작 원리에 대한 호기심이 생겼고, 조직 내 몇 명이 모여 React 내부 구조를 알아보는 스터디를 시작했습니다. ‍ 아래는 스터디 과정에서 참고했던 링크들입니다.\r\r\n\r\r\n* [React 톺아보기](https://goidle.github.io/react/in-depth-react-preview/)\r\r\n* [(번역) A deep dive into React Fiber internals](https://bumkeyy.gitbook.io/bumkeyy-code/frontend/a-deep-dive-into-react-fiber-internals)\r\r\n* ▶️ [React 파이버 아키텍처 분석](https://d2.naver.com/helloworld/2690975)\r\r\n* ▶️ [Inside React (동시성을 구현하는 기술)](https://deview.kr/2021/sessions/518)\r\r\n\r\r\n### React 19\r\r\n\r\r\nReact팀은 v19 업데이트를 위해 많은 노력을 기울였습니다. 하지만 최초 v19 RC가 공개된 후 Suspense의 동작 변경으로 인해 여러 컴포넌트가 순차적으로 데이터를 가져오게 되는 워터폴 현상이 발생했습니다.  React 팀은 이 동작이 의도된 동작이 아님을 확인하고 수정하겠다고 밝혔습니다. 이 사건은 오픈 소스 커뮤니티에서 투명한 소통과 협력의 중요성을 다시 한번 환기시켰습니다. 현재 React v19는 `prewarming`이라는 기능을 통해 이슈를 해소하며, 다시 RC v1 단계를 거쳐 현재 [v19](https://github.com/facebook/react/releases/tag/v19.0.0)를 릴리스했습니다. \r\r\n\r\r\n* [React 19 and suspense](https://tkdodo.eu/blog/react-19-and-suspense-a-drama-in-3-acts)\r\r\n* [React core PR - sibiling pre-rendering feature](https://github.com/facebook/react/issues/29898#issuecomment-2477449973)\r\r\n* [What's new in react 19](https://vercel.com/blog/whats-new-in-react-19)\r\r\n* [Server Actions have been renamed to Server Functions](https://19.react.dev/reference/rsc/server-functions)\r\r\n\r\r\n### React Compiler\r\r\n\r\r\nReact v19만큼이나 커뮤니티를 들썩이게 만든 또 다른 주제는 바로 React Compiler(코드명: Forget ‍️)입니다. React는 상태 변경과 리렌더링을 중심으로 동작하지만, 때로는 memoization을 통해 이러한 동작을 최적화해야 할 때가 있습니다. 그러나 이 과정에서 가독성이 떨어지고 오류가 발생하는 경우가 많았습니다. 이러한 문제를 해결하기 위해 React Compiler가 등장했죠. \r\r\n\r\r\nReact Compiler는 memoization 최적화를 자동으로 처리할 뿐만 아니라, 앞으로는 JSX Inlining과 JSX Outlining 같은 기능도 지원할 예정입니다.\r\r\n\r\r\n\\- JSX Inlining: 불필요한 JSX Runtime 호출을 제거하고 미리 빌드된 JSX 객체를 삽입\\.\r\r\n\\- JSX Outlining: 컴파일러가 하위 컴포넌트를 자동으로 추출하여 최적화\\.\r\r\n\r\r\n현재 [베타 릴리스](https://react.dev/blog/2024/10/21/react-compiler-beta-release) 단계이며, React v17 이상에서 사용할 수 있습니다. ✨\r\r\n\r\r\n* [(번역) 리액트 컴파일러 사용법](https://junghan92.medium.com/%EB%B2%88%EC%97%AD-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-a6a0e96edc97)\r\r\n* [Understanding React Compiler](https://tonyalicea.dev/blog/understanding-react-compiler/)\r\r\n* [Alias analysis in the React Compiler](https://www.recompiled.dev/blog/alias-analysis/)\r\r\n* [Compiler Theory and Reactivity](https://www.recompiled.dev/blog/ssa/)\r\r\n* [Type system of the React Compiler](https://www.recompiled.dev/blog/type-system/)\r\r\n* ▶️ [What's next for the react compiler?](https://www.youtube.com/watch?v=qd5yk2gxbtg)\r\r\n\r\r\n### Next.js\r\r\n\r\r\n[Next.js](https://nextjs.org/)는 React 기반의 풀스택 프레임워크로, 서버와 클라이언트 렌더링을 유연하게 결합해 강력한 개발 경험을 제공합니다. 특히 App Router와 React Server Components(RSC)의 도입으로 동적 라우팅과 성능 최적화가 크게 강화되었습니다.\r\r\n올해 Next.js는 [v14.2](https://nextjs.org/blog/next-14-2), v15 RC [v1](https://nextjs.org/blog/next-15-rc), [v2](https://nextjs.org/blog/next-15-rc2)를 거쳐 정식으로 [v15](https://nextjs.org/blog/next-15)를 릴리스했습니다. 여기에 모노레포(monorepo) 관리를 위한 Turborepo와 차세대 번들러인 Turbopack 또한 긴밀히 통합해 Next.js 생태계를 구축하고 있습니다.\r\r\n\r\r\n* [How vercel adopted microfrontends](https://vercel.com/blog/how-vercel-adopted-microfrontends)\r\r\n* [Turbopack Dev is now stable](https://nextjs.org/blog/turbopack-for-development-stable)\r\r\n* [How to set up next.js 15 for production in 2024](https://www.reactsquad.io/blog/how-to-set-up-next-js-15-for-production)\r\r\n* [Vercel functions - serverless servers and the challenge of new React architecture](https://bobaekang.com/blog/serverless-servers-and-the-challenge-of-new-react-architecture)\r\r\n* [Turborepo installation](https://turbo.build/repo/docs/getting-started/installation#start-with-an-example)\r\r\n* ▶️ [Self-hosting Next.js](https://www.youtube.com/watch?v=sIVL4JMqRfc)\r\r\n\r\r\n### Remix\r\r\n\r\r\n[Remix](https://remix.run/)는 React를 기반으로 한 풀스택 웹 프레임워크로, 서버 사이드 렌더링(SSR)과 클라이언트 사이드 라우팅을 지원하여 빠르고 유연한 웹 애플리케이션 개발을 가능하게 합니다. 2022년 10월, Remix는 [Shopify에 인수](https://remix.run/blog/remixing-shopify)되었으며, 이후 Shopify는 [Hydrogen](https://hydrogen.shopify.dev/)에 Remix를 기반으로 한 기능을 도입해 보다 강력한 전자상거래 플랫폼을 구축했습니다.\r\r\n\r\r\n사실 Remix와 React Router는 아주 긴밀하게 연결되어 있었습니다. 이런 관계로 인해 점점 두 프로젝트의 경계가 모호해지며, Remix는 사실상 React Router의 확장판이 되었습니다. 이에 따라 Remix팀은 React Router 사용자들이 코드 분할, 데이터 로딩, 서버 렌더링 등 Remix의 강력한 기능을 손쉽게 활용할 수 있도록 두 프로젝트의 통합을 결정했습니다.\r\r\n\r\r\n* [Incremental path to React 19](https://remix.run/blog/incremental-path-to-react-19)\r\r\n* ▶️ [Remix Roadmap](https://www.youtube.com/watch?v=fjTX8hQTlEc&t=400s)\r\r\n\r\r\n### 기타\r\r\n\r\r\n리액트 관련해 흥미로웠던 글들을 소개합니다.\r\r\n\r\r\n* [Conceptual Model of React and RSC](https://ondrejvelisek.github.io/conceptual-model-of-react-and-rsc/)\r\r\n* [The two reacts](https://overreacted.io/the-two-reacts/)\r\r\n* [The anatomy of a React Island](https://swizec.com/blog/the-anatomy-of-a-react-island/)\r\r\n* [Locality of Behavior in React Components](https://alexkondov.com/locality-of-behavior-react/)\r\r\n* [React's evolution from Hooks to Concurrent React: From React 16 to 18, a long overview](https://tigerabrodi.blog/reacts-evolution-from-hooks-to-concurrent-react)\r\r\n* [Two ways to the two Reacts](https://bobaekang.com/blog/two-ways-to-the-two-reacts/)\r\r\n\r\r\n## 개발 환경\r\r\n\r\r\n### JavaScript Runtimes\r\r\n\r\r\n한때 크로스 브라우저 호환성이 웹 개발의 주요 화두였다면, 이제는 자바스크립트 런타임 전쟁이 서서히 다가오고 있습니다. 오랜 시간 표준처럼 여겨졌던 [Node.js](https://nodejs.org/en) 외에도 [Deno](https://deno.com/)와 [Bun](https://bun.sh/)이 놀라운 속도로 발전하며 도전장을 내밀고 있습니다. 여기에 [LLRT](https://github.com/awslabs/llrt)와 같은 새로운 도구들까지 등장하면서, 자바스크립트 런타임 생태계는 이제 다양한 선택지와 경쟁으로 가득 찬 새로운 시대를 맞이하고 있습니다. 한편, Node.js 또한 선두 주자로서 입지를 지키기 위해 새로운 기술을 적극 수용하며 생태계를 확장하고 우위를 유지하려는 노력을 이어가고 있습니다.\r\r\n\r\r\n* [JS Toolbox 2024: Runtime environments & package management](https://raygun.com/blog/js-toolbox-part-1/)\r\r\n* [Runtime Compatibility](https://runtime-compat.unjs.io/)\r\r\n* [Node Core PR module: add --experimental-transform-types](https://github.com/nodejs/node/pull/54283)\r\r\n* [Native Support for CJS/ESM Interoperability Begins in Node.js 22](https://webdeveloper.beehiiv.com/p/native-support-cjsesm-interoperability-begins-nodejs-22)\r\r\n* [Node.js takes steps towards removing corepack](https://socket.dev/blog/node-js-takes-steps-towards-removing-corepack)\r\r\n\r\r\n### Package Managers\r\r\n\r\r\n다양한 JavaScript Runtime들만큼이나 프로젝트 의존성 관리와 패키지 설치를 돕는 Package Manager도 전통적인 npm과 Yarn을 넘어 더 빠르고 효율적인 대안들이 떠오르며 경쟁이 치열해지고 있습니다. \r\r\n\r\r\n[pnpm](https://pnpm.io/ko/)은 디스크 공간 효율성과 모노레포(monorepo) 지원을 강점으로, [Bun](https://bun.sh/)은 올인원 도구로 놀라운 설치 속도를 자랑합니다. 또한 [JSR](https://jsr.io/docs/with/deno)은 다양한 JavaScript Runtime과 호환되며 TypeScript와 ESM을 네이티브로 지원해 현대적인 모듈 관리를 선도하고 있습니다. npm의 개발자는 새롭게 팀을 만들어 [vlt](https://www.vlt.sh/client)라는 패키지 매니저와 레지스트리인 [vsr](https://www.vlt.sh/serverless-registry)까지 출시했습니다.\r\r\n\r\r\n각 Package Manager는 고유의 특징과 강점을 바탕으로 개발자들에게 더 나은 선택지를 제공하며, 자바스크립트 생태계를 넓히고 있습니다.\r\r\n\r\r\n* [Introducing Deno 2](https://deno.com/blog/v2.0)\r\r\n* [Bun 1.1](https://bun.sh/blog/bun-v1.1)\r\r\n* [vlt - Introducing our team, investors & more](https://blog.vlt.sh/blog/the-team)\r\r\n\r\r\n### Build Tools\r\r\n\r\r\n현대적인 프론트엔드 개발을 위한 빌드 도구는 결국 [Vite](https://vite.dev/) 아래 모이게 되었습니다.  [Remix가 Vite로 마이그레이션](https://remix.run/blog/remix-vite-stable)되었고, [Angular의 툴 체인](https://v17.angular.io/guide/esbuild)에도 도입되었으며, 그 외 수많은 라이브러리와 프레임워크가 Vite 위에 구축되어 오고 있습니다. 이로 인해 Vite의 주간 npm 다운로드 수는 1,700만건 가까이 기록하고 있으며 Next.js를 제외한 주요 생태계를 점령했습니다.\r\r\n\r\r\nEvan You에 의하면 Vite팀은 소스 파일에서 AST를 만들고, Linting, Formatting, Testing 등 모든 과정을 네이티브 수준의 속도로 처리는 툴체인을 구축하려는 목표를 세웠고 실제로 [VoidZero](https://voidzero.dev/posts/announcing-voidzero-inc)라는 회사를 설립해 투자 유치에 성공했습니다.\r\r\n\r\r\n최근 릴리스된 Vite 6.0에선 [Environment API](https://main.vite.dev/guide/api-environment)를 추가해 단일 Vite 서버에서 필요한 만큼 환경을 생성해 앱이 동작하는 방식을 매핑할 수 있게 됩니다. Vite는 이제 Deno, Bun과 같은 JavaScript Runtime으로 실행과 번들링이 가능해지고, React Native나 Electron과 같은 특수한 Runtime도 지원합니다.\r\r\n\r\r\n* [Vite Dev Server 이해하기](https://1ilsang.dev/posts/js/dev-server)\r\r\n* [Increasing Vite's potential with the Environment API](https://green.sapphi.red/blog/increasing-vites-potential-with-the-environment-api)\r\r\n* ▶️ [Visual Guide to the Modern Frontend Toolchain - Vite](https://youtu.be/M_edImKoEt8?si=RL1VrRyD1BYhqEnA)\r\r\n\r\r\n### Bundler\r\r\n\r\r\n현재 개발에 박차를 가하고 있는 차세대 번들러들은 Rust 기반으로 설계되어 기존의 Parcel, Rollup, Webpack에 비해 더욱 빠르고 강력한 성능을 자랑합니다. ⚡️ 물론, 일부 개발자들은 이런 장점을 위해 모든 것을 새로 만드는 것이 과연 필요한가에 대한 의문을 제기하기도 합니다.\r\r\n\r\r\n하지만, Go로 작성된 [esbuild](https://esbuild.github.io/)로 Dev Server를 제공하는 Vite를 경험하고 나니, 다시 Webpack으로 돌아가는 일이 무척 멀게만 느껴지는 것도 사실입니다.\r\r\n\r\r\n차세대 번들러를 간단히 살펴보자면, [Rspack](https://rspack.dev/)은 Webpack의 [Drop-in Replacement](https://rspack.dev/guide/migration/webpack#migrate-from-webpack)로 호환성과 성능을 강조하고 있으며, [Turbopack](https://nextjs.org/docs/architecture/turbopack)은 안정화 단계를 거쳐 [Next.js v15의 권장 도구](https://nextjs.org/blog/next-15#turbopack-dev)로 자리 잡으며 Webpack의 후계자를 자처하고 있습니다. 또한 Vite 진영에서도 [Rolldown](https://rolldown.rs/)이라는 차세대 도구를 개발 중입니다. 마지막으로 또 내가 제일 빠르다고 하는 [Mako](https://makojs.dev/)도 있네요.\r\r\n\r\r\n각 도구들이 경쟁하며 프론트엔드 생태계에 바람을 일으키고 있습니다. 앞으로 누가 이 씬을 주도하게 될지 기대가 됩니다. \r\r\n\r\r\n* [Rspack announcing 1.0](https://rspack.dev/blog/announcing-1-0)\r\r\n* [Rslib](https://github.com/web-infra-dev/rslib)\r\r\n* [Lessons learned switching to Rspack](https://birtles.blog/2024/08/14/lessons-learned-switching-to-rspack)\r\r\n* [Why does Vercel bother with Turbopack when Vite already exists?](https://github.com/vercel/next.js/issues/48748#issuecomment-2199941311)\r\r\n* [Why we are building Rolldown](https://rolldown.rs/about#why-we-are-building-rolldown)\r\r\n\r\r\n## 프레임워크\r\r\n\r\r\n### Vue\r\r\n\r\r\nVue는 올해 [v3.5](https://blog.vuejs.org/posts/vue-3-5)의 첫 번째 마이너 릴리스를 발표하며 성능과 메모리 최적화, SSR 지원에 주력했습니다. 특히, 반응형 시스템을 리팩터링하여 메모리 사용량을 56% 감소시키고, 대규모 및 깊은 배열의 처리 성능을 눈에 띄게 향상시켰습니다. Vue 역시 SSR(Server-Side Rendering) 지원 강화를 목표로 새로운 기능들을 추가하며, 현대적인 웹 애플리케이션 개발을 위한 진화를 계속하고 있습니다.\r\r\n\r\r\n* [10 Years of Vue: the Past and the Future](https://www.youtube.com/watch?v=OmrwRrZitv4)\r\r\n\r\r\n### Angular\r\r\n\r\r\n올해 Angular는 3월, 구글의 내부 프레임워크 [Wiz와의 통합](https://blog.angular.dev/angular-and-wiz-are-better-together-91e633d8cd5a)을 발표했습니다. Wiz는 Gmail, Search와 같은 성능이 중요한 서비스에서 사용되는 프레임워크로 이번 통합은 SSR 지원 강화를 목적으로 이루어졌습니다. 이어 5월에는 [v18](https://blog.angular.dev/angular-v18-is-now-available-e79d5ac0affe)을 발표하며 변경 감지 라이브러리 추출, 홈페이지 개편, 그리고 SSR 기능 강화를 진행했습니다. 11월에는 [v19](https://blog.angular.dev/meet-angular-v19-7b29dfd05b84)가 [릴리스](https://github.com/angular/angular/releases/tag/19.0.0)되며, 부족했던 렌더링 모드의 다양화, Hydration 제어 개선, 그리고 Signal 도입이라는 큰 변화를 선보였습니다.\r\r\n\r\r\n* [Google Angular Lead sees convergence in JavaScript Framework](https://thenewstack.io/google-angular-lead-sees-convergence-in-javascript-frameworks/)\r\r\n* [Managing Angular](https://blog.mgechev.com/2024/08/25/managing-angular/)\r\r\n\r\r\n### Svelte\r\r\n\r\r\nSvelte는 [v5](https://svelte.dev/blog/svelte-5-is-alive) 릴리스를 통해 패러다임의 전환을 알렸습니다. 과거에는 `let count = 0`만 작성해도 Svelte의 컴파일러가 이를 상태로 처리했지만, 이제는 더 명시적으로 상태를 선언하는 방식으로 변화했습니다. 새로운 메커니즘인 [runes](https://svelte.dev/blog/runes)가 도입되었으며, `$state()`를 통해 반응형 상태를 명확히 관리할 수 있게 되었습니다.\r\r\n\r\r\n### Astro\r\r\n\r\r\nAstro는 최근 [v5](https://astro.build/blog/astro-5/) 업데이트에서 타입 안전 환경 변수 설정을 지원하며 환경 변수의 가시성과 안전성을 강화했습니다. 또한 Content Layer API를 통해 다양한 데이터 소스에서 가져온 콘텐츠를 타입 안전하게 관리할 수 있게 되었으며, 렌더링 기능을 강화해 페이지와 컴포넌트별로 SSR과 정적 생성을 유연하게 선택할 수 있게 했습니다.\r\r\n\r\r\n### Hono\r\r\n\r\r\n[Hono](https://hono.dev/)는 모든 JavaScript Runtime에서 실행 가능한 경량 웹 서버 프레임워크로, 빠른 라우팅을 지원하는 RegExpRouter 개념과 여러 헬퍼, 미들웨어로 주목 받고 있습니다.\r\r\n\r\r\n### Waku\r\r\n\r\r\n[Waku](https://waku.gg/)는 Zustand와 Jotai 진영에서 개발한 리액트 기반 풀스택 프레임워크로, React의 Server Action API를 지원하는 [v0.21](https://waku.gg/blog/server-actions-are-here)을 출시했습니다. 중규모 애플리케이션 개발을 목표로 하며, Next.js의 대안으로 기대를 받고 있습니다.\r\r\n\r\r\n## 다양한 렌더링 모드\r\r\n\r\r\n최근 프론트엔드 프레임워크들은 다양한 렌더링 방식을 제공하여 각자의 장점을 활용한 최적화 전략을 선보이고 있습니다.\r\r\nCSR(Client-Side Rendering)은 동적이고 빠른 사용자 경험(UX)을 제공하지만, 초기 HTML이 서버에서 제공되지 않기 때문에 SEO에는 다소 불리합니다.\r\r\n이에 반해, SSR(Server-Side Rendering)과 SSG(Static-Site Generation)은 초기 페이지 로드 시 완전한 HTML을 제공해 SEO와 성능 최적화에 유리합니다. Astro는 [Islands Architecture](https://jasonformat.com/islands-architecture)를 활용해 정적 콘텐츠와 인터랙티브 요소를 분리하고, Server Islands를 통해 필요한 동적 콘텐츠만 효율적으로 로드합니다. 또한, Next.js는 [PPR(Partial Pre-Rendering)](https://vercel.com/blog/partial-prerendering-with-next-js-creating-a-new-default-rendering-model)을 통해 동적 콘텐츠를 스트리밍 하며 점진적 렌더링 방식을 선도하고 있습니다.\r\r\n이런 다양한 렌더링 방식들은 앱의 목적과 성능 요구 사항에 따라 적절히 선택할 필요가 있습니다.\r\r\n\r\r\n* [Client-Side Rendering](https://github.com/theninthsky/client-side-rendering)\r\r\n* [What's a Single-Page App?](https://jakelazaroff.com/words/whats-a-single-page-app/)\r\r\n* [How to choose the best rendering strategy for your app](https://vercel.com/blog/how-to-choose-the-best-rendering-strategy-for-your-app)\r\r\n\r\r\n## JavaScript\r\r\n\r\r\n### Signals\r\r\n\r\r\nECMAScript 위원회인 TC39에 [Signal 도입 제안](https://github.com/tc39/proposal-signals)이 올라왔습니다. [Preact](https://preactjs.com/), [Solid](https://solidjs.com/)와 같은 프레임워크는 이미 Signal을 활용하여 Reactivity를 구현하고 있습니다.\r\r\nSignal은 애플리케이션 상태를 관리하는 방식으로, 상태 변경 시 UI를 업데이트합니다. React의 상태 변경이 전체 리렌더링을 유발하는 반면, Signal은 세분화된 상태 변경을 처리하여 렌더링 없이 최소한의 작업으로 UI를 갱신합니다. 이 제안을 통해 여러 프레임워크에서 중복된 Reactivity 모델을 제거하고, 개발 도구에서도 Signal의 활용이 기대됩니다.\r\r\n\r\r\n* [How to Build Signals from Scratch](https://www.freecodecamp.org/news/learn-javascript-reactivity-build-signals-from-scratch/)\r\r\n\r\r\n### Temporal\r\r\n\r\r\n새로운 날짜 및 시간 처리 기능인 Temporal이 [Stage 3](https://github.com/tc39/proposal-temporal)에 도달했습니다. 기존 JavaScript의 `Date` 객체가 가진 문제들을 해결하기 위해 설계되었으며, 개발자들이 보다 직관적이고 강력한 시간 처리를 할 수 있도록 도울 것입니다.\r\r\n\r\r\n* [JS Dates are about to be fixed](https://docs.timetime.in/blog/js-dates-finally-fixed)\r\r\n\r\r\n### ECMAScript 2024\r\r\n\r\r\n2024년 ECMAScript 언어 사양이 승인되면서 새로운 기능들이 추가되었습니다. 주요 기능으로는 `Promise.withResolvers()`, `Object.groupBy`, `Map.groupBy` 등이 있습니다. 과거처럼 대규모 신규 개념이 추가되기보다는 기존 기능의 개선과 최적화가 주를 이루는 모습입니다.\r\r\n\r\r\n* [ECMAScript 2024](https://2ality.com/2024/06/ecmascript-2024.html)\r\r\n* [What's new in ECMAScript 2024](https://pawelgrzybek.com/whats-new-in-ecmascript-2024/)\r\r\n* [The state of ES5 on the web](https://philipwalton.com/articles/the-state-of-es5-on-the-web/)\r\r\n\r\r\n### 기타\r\r\n\r\r\nTC39는 기존에 JavaScript 표준 프로세스에서 Stage를 [0~4 단계](https://tc39.es/process-document/)로 유지했으나, 최근 [Stage 2.7](https://thenewstack.io/inside-ecmascript-javascript-standard-gets-an-extra-stage/)을 추가했습니다. 이는 Stage 3에서 Stage 2로 롤백될 경우 발생하는 리소스를 줄이고, 작업 효율성을 향상시키기 위한 조치로 보입니다.\r\r\n\r\r\n## CSS\r\r\n\r\r\n### CSS-in-JS\r\r\n\r\r\nCSS-in-JS는 SSR의 활성화에 따라 한동안 인기를 잃어 왔지만 React v19의 새로운 기능으로 다시 주목을 받고 있습니다. 특히 스타일 호이스팅(precedence 속성을 사용해 `<style>` 태그를 문서 헤드로 이동)을 지원하며, 온디맨드 스타일 렌더링이 개선되었습니다. 이에 따라 [Restyle](https://www.restyle.dev/), [StyleX](https://stylexjs.com/blog/introducing-stylex), [PandaCSS](https://panda-css.com/)와 같은 라이브러리가 주목 받고 있으며, MUI는 [PigmentCSS의 도입](https://mui.com/blog/introducing-pigment-css)을 시도하고 있습니다. 또한 CSS-in-JS의 리소스 문제를 극복한 Compiled CSS-in-JS 방식도 주목을 받고 있습니다.\r\r\n\r\r\n* [CSS in React Server Components](https://www.joshwcomeau.com/react/css-in-rsc/)\r\r\n* [Why is CSS-in-JS slow?](https://playfulprogramming.com/posts/why-is-css-in-js-slow)\r\r\n* [A preview of Pigment CSS: the next generation of CSS-in-JS](https://mui.com/blog/introducing-pigment-css/)\r\r\n\r\r\n### CSS 신규 기능\r\r\n\r\r\n2024년에는 CSS의 새로운 스펙들이 도입되며, 작년에 이어 [Baseline](https://web.dev/baseline)과 [Interop](https://web.dev/blog/interop-2024)과 같이 플랫폼 간 상호운용성에 대한 노력이 CSS 생태계가 더욱 강력하게 만들고 있습니다. `@property` 문법으로 CSS 변수를 선언하고 속성을 정의하거나, Popover API로 번거롭던 Modal 문제를 해결하는 등 개발자의 생산성을 크게 향상시키고 있습니다. 이번에는 2024년 도입된 주요 기능과 개인적으로 관심을 가졌던 최신 CSS 관련 링크를 공유 드립니다.\r\r\n\r\r\n* [CSS Container Queries](https://css-tricks.com/css-container-queries/)\r\r\n* [If CSS gets inline conditionals](https://css-tricks.com/if-css-gets-inline-conditionals/)\r\r\n* [CSS anchor API](https://developer.chrome.com/blog/anchor-positioning-api)\r\r\n* [Popover API lands in Baseline](https://web.dev/blog/popover-api)\r\r\n* [The undeniable utility of CSS `:has`](https://www.joshwcomeau.com/css/has/)\r\r\n* [CSS `@property` and the new style](https://ryanmulligan.dev/blog/css-property-new-style/)\r\r\n* [New CSS that can actually be used in 2024](https://thomasorus.com/new-css-that-can-actually-be-used-in-2024.html)\r\r\n* [Old Dogs, new CSS Tricks](https://mxb.dev/blog/old-dogs-new-css-tricks/)\r\r\n* [A Framework for evaluating browser support](https://www.joshwcomeau.com/css/browser-support/)\r\r\n* [CSS Wrapped 2024](https://chrome.dev/css-wrapped-2024/)\r\r\n* ▶️ [Amazing CSS in 2024](https://www.youtube.com/watch?v=D79TND9w_AY)\r\r\n\r\r\n### Masonry 레이아웃\r\r\n\r\r\n오랫동안 웹 개발자들은 Pinterest 스타일의 Masonry 레이아웃을 구현하기 위해 JavaScript에 의존해왔습니다.  그러나 이제 CSS가 이 기능을 네이티브로 지원할 준비를 하고 있으며 이를 구현하는 방식에 대해 [Chrome팀](https://rachelandrew.co.uk/archives/2024/09/21/masonry-and-good-defaults)과 [Webkit팀](https://webkit.org/blog/15269/help-us-invent-masonry-layouts-for-css-grid-level-3/) 간에 새로운 `display`를 추가할지, `grid` 내에 통합할지 [논의](https://webkit.org/blog/16026/css-masonry-syntax/)가 이어지고 있습니다.\r\r\n\r\r\n## Performance\r\r\n\r\r\n### e18e\r\r\n\r\r\nJavaScript 생태계의 성능 향상을 목표로 한 커뮤니티 기반 이니셔티브 [e18e(Ecosystem Performance)](https://e18e.dev/)가 실질적인 진전을 이루며 주목 받고 있습니다. e18e는 다음 세 가지 목표를 중심으로 자바스크립트 생태계의 개선을 추진하고 있습니다.\r\r\n\r\r\n1. Clean up: 인기 있는 패키지의 중복된 의존성 제거 또는 대체를 통해 속도를 최적화.\r\r\n2. Speed up: 널리 사용되는 패키지와 프레임워크의 성능 개선.\r\r\n3. Level up: 오래된 패키지에 대해 더 가볍고 모던한 대안을 마련.\r\r\n\r\r\n이니셔티브의 노력은 커뮤니티의 참여로 이루어지며, 최신 패치 목록과 대안을 제안하는 [module-replacements](https://github.com/es-tooling/module-replacements)와 같은 결과물로 나타나고 있습니다.\r\r\n최근 공개된 [October Contribution Showcase](https://e18e.dev/blog/october-contributions-showcase.html)에서는 Storybook과 ESLint 같이 널리 사용되는 도구에 대한 기여가 눈에 띕니다. 이를 통해 e18e는 자바스크립트 생태계의 전반적인 성능을 끌어올리는 데 실질적인 역할을 하고 있으며, 커뮤니티와 오픈 소스 생태계의 협력을 이끌어내고 있습니다.\r\r\ne18e는 단순히 성능 개선을 넘어, 개발자들이 사용하는 핵심 도구를 더 가볍고 빠르게 만들어 생태계 전반에 긍정적인 영향을 미칠 것으로 기대됩니다.\r\r\n\r\r\n### Web Vitals - INP\r\r\n\r\r\n[Web Vitals](https://web.dev/articles/vitals)는 Google이 정의한 웹 성능 지표로, 사용자 경험(UX)을 개선하기 위한 기준을 제공합니다. 2024년 정식으로 선정된 [INP(Interaction to Next Paint)](https://web.dev/articles/inp)는 사용자 상호작용 후 다음 화면이 렌더링될 때까지의 지연 시간과 응답성을 측정하며, 기존 FID(First Input Delay)보다 더 포괄적이고 실질적인 경험을 반영합니다. INP는 사용자 입력 이벤트를 우선 처리하고, 비동기 렌더링을 최적화하는 등 동시성 기술을 통해 개선할 수 있습니다.\r\r\n\r\r\n* [What is INP and why you should care](https://blog.sentry.io/what-is-inp/)\r\r\n* [Understanding Interaction to Next Paint(INP)](https://frontendmasters.com/blog/understanding-inp/)\r\r\n* [Investigating INP issues](https://www.stefanjudis.com/blog/investigating-inp-issues/)\r\r\n* [How to improve INP in React](https://kurtextrem.de/posts/improve-inp-react)\r\r\n* [How to Improve INP: Yield Patterns](https://kurtextrem.de/posts/improve-inp)\r\r\n* [Demystifying INP: New tools and actionable insights](https://vercel.com/blog/demystifying-inp-new-tools-and-actionable-insights)\r\r\n\r\r\n## 기타\r\r\n\r\r\n### Mobile\r\r\n\r\r\n모바일 개발 생태계에서도 큰 변화가 이어지고 있습니다. React Native는 [새로운 아키텍처](https://reactnative.dev/blog/2024/10/23/the-new-architecture-is-here)로 재작성되어 [v0.76](https://reactnative.dev/blog/2024/10/23/release-0.76-new-architecture)에서 동기식 네이티브 통신, 동시성 시스템, 새로운 이벤트 루프를 도입하며 성능과 안정성을 크게 개선했습니다. 한편, Google의 Flutter는 최근 조직 축소와 커뮤니티 대응 지연으로 비판을 받아 왔으며, 이에 대응해 커뮤니티가 Flutter를 포크한 [Flock](https://flutterfoundation.dev/blog/posts/we-are-forking-flutter-this-is-why)를 발표했습니다. Flock은 문제 해결에 집중하고 있지만 인원 부족으로 인상적인 성과를 내기 어려울 것이라는 전망도 있습니다. 이러한 변화들은 크로스 플랫폼 개발의 미래를 더욱 흥미롭게 만들고 있습니다.\r\r\n\r\r\n### Architecture\r\r\n\r\r\n개인적으로 소프트웨어 설계 관련해 기억나는 포스트는 C4 모델을 응용한 Visualizing Frontend Architecture와 FSD(Feature-Sliced Design)입니다. C4 모델은 소프트웨어 시스템을 Context, Container, Component, Code의 4가지 레벨로 나누어 시각화하는 방식으로, 이를 프론트엔드에 적용해 아키텍처를 명확히 표현한 접근이 인상 깊었습니다.\r\r\n한편, FSD는 기능(feature) 단위로 관심사를 분리하여 모듈화된 폴더 구조를 설계하는 방식으로, 대규모 프로젝트의 유지 보수성과 확장성을 크게 향상시킵니다. 이러한 접근법들은 구조적 명확성을 제공하며, 올해 프론트엔드 설계에서 중요한 흐름으로 자리 잡았습니다.\r\r\n\r\r\n* ▶️ [Visualising software architecture with the C4 model](https://www.youtube.com/watch?v=x2-rSnhpw0g)\r\r\n* [Visualizing Frontend Architecture](https://frontendatscale.com/issues/17)\r\r\n* [Feature-Slided Design Pattern](https://feature-sliced.design/)\r\r\n* [FSD 관점으로 바라보는 코드 경계 찾기](https://velog.io/@teo/fsd)\r\r\n* [프론트엔드 개발자 관점으로 바라보는 관심사의 분리와 좋은 폴더 구조 (feat. FSD)](https://velog.io/@teo/separation-of-concerns-of-frontend)\r\r\n\r\r\n### IT 뉴스\r\r\n\r\r\n* 미국 법무부는 2024년, ADA(미국 장애인 법)에 따라 웹 콘텐츠와 모바일 애플리케이션의 [접근성 규정을 발표](https://www.tpgi.com/the-ada-now-has-regulations-for-accessibility-of-web-content-and-mobile-apps/)했습니다. 이는 공공 기관이 운영하는 디지털 콘텐츠가 WCAG 2.1 레벨 AA 기준을 충족하도록 요구하며, 장애인을 위한 더 나은 디지털 접근성을 보장합니다. 민간 기업에도 간접적인 영향을 미칠 것으로 보입니다.\r\r\n* 영국 정부가 인도양 차고스 제도(British Indian Ocean Territory)의 주권을 포기하며 [.io 도메인이 사라질 예정](https://every.to/p/the-disappearance-of-an-internet-domain)입니다. 새로운 등록이 중단되며, 기존 도메인 역시 점진적으로 폐기 프로세스가 시작됩니다. .io 도메인을 사용하는 많은 기업에 영향을 미칠 것으로 보입니다. 하지만 .su 도메인이 특수 사례로 살아남은 적이 있어 어떤 식으로 흘러갈지는 지켜봐야 할 것 같습니다.\r\r\n* 올해 Sentry는 [페어 소스(Fair Source)](https://fair.io/)라는 새로운 소프트웨어 라이선스를 도입한다고 했습니다. 이는 오픈 소스와 유사하게 코드를 공개적으로 공유하지만, 제작자의 비즈니스 모델을 보호하기 위해 사용, 수정, 재배포에 제한을 두는 것이 특징입니다. 또한 지연된 오픈소스 퍼블리싱(DOSP) 방식으로 초기에는 독점 라이선스를 유지하다가 일정 계획에 따라 오픈소스화합니다.\r\r\n\r\r\n***\r\r\n\r\r\n막상 정리를 해보겠다고 마음먹고 주요 기술 스택과 뉴스를 간추리는 데 생각보다 시간이 오래 걸렸습니다. 내년에도 같은 작업을 이어간다면 반기로 나누어 진행해야 할 것 같습니다. 처음에는 2~3개의 뉴스레터로 시작했지만, 욕심이 생겨 점점 범위를 넓히다 보니 지금은 UI/UX와 디자인까지 포함해 매주 약 19개의 뉴스레터를 훑고 있는 상황입니다. \r\r\n\r\r\n뉴스레터로 알게 된 내용을 실제로 제품에 적용해 볼 기회는 많지 않았지만, 프론트엔드 트렌드를 파악하고, 우리 팀과 조직에서 적용해 볼 만한 부분을 점검할 수 있었다는 점에서 개인적으로 만족스러웠습니다. 본 글에서 다루지 못했지만 JavaScript의 AI, Privacy 강화, WASM과 같은 주제에도 변화가 있었습니다. 관심 있는 분들은 관련 내용을 찾아보시는 것도 추천드립니다.\r\r\n\r\r\n앞으로도 새롭게 등장할 기술들 속에서 각자의 서비스에 적합한 것을 선택하고 도입하며, 변화에 유연하게 대응해 나가길 바랍니다. \r\r\n(혹시라도 깨진 링크나 잘못된 내용이 있다면 제보 부탁드립니다. )\r\r\n<br>\r\r\n[![NHN Cloud_meetup banner_footer_blue_202412_900.png](https://image.toast.com/aaaadh/real/2024/techblog/NHN%20Cloudmeetup%20bannerfooterblue202412900.png)](https://www.nhncloud.com/kr)",
        "contentSnippet": "![NHN Cloud_meetup banner_frontendnews2024_202412_900.png](https://image.toast.com/aaaadh/real/2024/techblog/NHN%20Cloudmeetup%20bannerfrontendnews2024202412900.png)\r\r\n\r\r\n안녕하세요. NHN Cloud NCUI개발팀 이진우입니다.\r\r\n\r\r\n저는 올해 2월부터 매주 프론트엔드 관련 다양한 뉴스레터를 읽고, FE 개발 직무 동료들에게 흥미로운 뉴스, 읽을거리, 유용한 도구 등을 공유해 왔습니다.\r\r\n어느덧 연말이 가까워지며 쌓여 온 링크들은 상당한 양이 되었는데요. 이를 정리하며 개인적으로 인상 깊었던 주제와 도구를 공유드리고자 합니다.\r\r\n\r\r\n물론, 개인적인 관심사가 반영되어 있기도 하고, 조직 내에서 영향이 큰 프레임워크나 기술 스택 위주로 정리된 만큼 부족한 부분이 있을 수 있습니다.\r\r\n훑어보시면서 혹시 낯설거나 관심이 가는 주제가 있다면 함께 제공한 읽을거리 링크가 도움이 되기를 바랍니다.\r\r\n(정리된 내용 중 일부는 시간이 지나며 업데이트되거나 새로운 정보로 대체되었을 수 있습니다. )\r\r\n\r\r\n## 프론트엔드 기술 스택\r\r\n\r\r\n프론트엔드 개발은 마치 9G 중력 가속도처럼 빠르게 변하며 개발자들을 압박해 왔지만 최근엔 변화의 속도가 다소 안정된 듯한 느낌입니다. ☕️ 새로운 개념을 바탕으로 한 프레임워크와 도구가 끊임없이 쏟아졌던 과거와 달리, 이제는 더 나은 생산성과 사용자 경험을 위한 실용적인 도구들이 점차 정착되고 있습니다. 2024년에 출시되진 않았지만, 개인적으로 올해 활약상이 인상 깊었던 몇 가지 라이브러리를 소개하고자 합니다. ‍\r\r\n\r\r\n### shadcn/ui\r\r\n\r\r\n[shadcn/ui](https://ui.shadcn.com/)는 TailwindCSS와 Headless UI의 철학을 결합한 라이브러리로, 복사-붙여넣기(copy-paste) 방식으로 빠르게 UI를 구현할 수 있는 점이 특징입니다. 개발자는 필요한 컴포넌트를 복사한 뒤, 프로젝트 요구에 맞게 간단히 수정하여 사용할 수 있어 효율성이 뛰어납니다.\r\r\n\r\r\n* [(번역) shadcn/ui의 해부](https://siosio3103.medium.com/shadcn-ui-%EC%9D%98-%ED%95%B4%EB%B6%80-ebd469c34614)\r\r\n* [How headless components became the future for building UI libraries](https://www.subframe.com/blog/how-headless-components-became-the-future-for-building-ui-libraries)\r\r\n* [Headless, boneless, skinless & lifeless UI](https://nerdy.dev/headless-boneless-and-skinless-ui)\r\r\n\r\r\n### Zod\r\r\n\r\r\n[Zod](https://zod.dev/)는 TypeScript와 완벽히 통합된 스키마 선언 및 데이터 검증 라이브러리로, 간결한 문법과 타입 추론을 통해 개발 생산성을 크게 높여 서버-클라이언트 간 데이터 구조를 명확하게 정의하고 유지할 수 있습니다. REST API, GraphQL, Form Data Validation 등 다양한 환경에서 활용 가능하며, 코드의 가독성을 유지하면서도 강력한 검증 로직을 구현할 수 있는 도구입니다.\r\r\n\r\r\n* [The process.env frontend time bomb](https://massimilianomirra.com/notes/the-frontend-process-env-time-bomb-plus-a-sustainable-definition-of-fixed)\r\r\n* [Making a REST API typesafe with Ready Query and Zod](https://noahflk.com/blog/typesafe-rest-api)\r\r\n\r\r\n### Vitest\r\r\n\r\r\n[Vitest](https://vitest.dev/)는 Vite 기반의 테스트 러너로, 빠른 테스트 실행 속도와 간편한 설정으로 주목 받고 있습니다. 테스트 생태계의 하나의 표준과도 같았던 Jest와 유사한 API를 제공해 쉽게 전환이 가능하며, ESM과 TypeScript를 기본적으로 지원합니다. 특히 Vite와의 긴밀한 통합을 통해 개발 환경과 테스트 환경 간의 일관성을 유지할 수 있어 Vite 사용 시 더욱 효율적인 테스트 경험을 제공합니다.\r\r\n\r\r\n* [Vitest vs. Jest](https://www.speakeasy.com/post/vitest-vs-jest)\r\r\n* [Storybook 8.3 - First class Vitest integration](https://storybook.js.org/blog/storybook-8-3/)\r\r\n* [JavaScript unit testing frameworks in 2024: A comparison](https://raygun.com/blog/javascript-unit-testing-frameworks/#vitest)\r\r\n\r\r\n### 기타\r\r\n\r\r\n* [Biome](https://biomejs.dev/)은 ESLint, Prettier의 대체 도구로 빠른 속도를 자랑합니다. 하지만 파일 간의 의존성이나 프로젝트 전반의 정보를 필요로 하는 정적 분석엔 아직 개선이 필요한데, 최근 Biome의 개발자는 [다중 파일 분석의 접근 방법](https://arendjr.nl/blog/2024/11/biome_approach_to_multi_file_analysis/)을 공유했습니다.\r\r\n\r\r\n* 요즘 웹사이트만 들어가면 쿠키 동의 때문에 정신없으시죠? GDPR(general data protection regulation)을 준수하기 위함인데 이와 관련된 라이브러리들([cookieconsent](https://github.com/brainsum/cookieconsent), [cookie checker](https://complydog.com/free-cookie-checker-tool))이 눈에 띄었습니다.\r\r\n\r\r\n* Zod의 대안으로 Yup, AJV, Joi, Superstruct 등이 있지만 TypeScript와의 통합이 부족하거나, 기능이 부족하거나, 러닝 커브가 높기도 합니다. 하지만 최근 [Vailbot](https://valibot.dev/)이 v1 베타 기간을 갖고 있는데, 더 작은 번들 사이즈로도 Zod와 유사한 기능을 제공해 주목을 받고 있습니다.\r\r\n\r\r\n* [TanStack](https://tanstack.com/)은 Tanner Linsley가 운영하는 라이브러리 생태계로, 현재 9개 라이브러리를 운영하며 프론트엔드 개발에서 빠르게 주목 받고 있습니다. 특히 알파 단계인 TanStack Start 프레임워크는 Next.js의 잠재적 경쟁자로 화제가 되고 있으며, TanStack Router는 SSR을 강력히 지원하며 클라이언트 사이드의 인터랙션도 최적화합니다. 또한, 엔터프라이즈급 라우팅을 타입 안전하게 구현하며, 번들링 및 배포는 [Vinxi](https://github.com/nksaraf/vinxi)를 통해 처리해 높은 성능과 유연성을 제공합니다.\r\r\n\r\r\n## React\r\r\n\r\r\n### React Deep Dive\r\r\n\r\r\nNHN Cloud의 FE 개발 조직은 React를 사용하고 있는데요. 사실 React로 기술 스택을 전환한 지는 React의 역사에 비해 그리 오래되지 않았습니다. 시간이 지남에 따라 React 사용에 익숙해지면서 내부 동작 원리에 대한 호기심이 생겼고, 조직 내 몇 명이 모여 React 내부 구조를 알아보는 스터디를 시작했습니다. ‍ 아래는 스터디 과정에서 참고했던 링크들입니다.\r\r\n\r\r\n* [React 톺아보기](https://goidle.github.io/react/in-depth-react-preview/)\r\r\n* [(번역) A deep dive into React Fiber internals](https://bumkeyy.gitbook.io/bumkeyy-code/frontend/a-deep-dive-into-react-fiber-internals)\r\r\n* ▶️ [React 파이버 아키텍처 분석](https://d2.naver.com/helloworld/2690975)\r\r\n* ▶️ [Inside React (동시성을 구현하는 기술)](https://deview.kr/2021/sessions/518)\r\r\n\r\r\n### React 19\r\r\n\r\r\nReact팀은 v19 업데이트를 위해 많은 노력을 기울였습니다. 하지만 최초 v19 RC가 공개된 후 Suspense의 동작 변경으로 인해 여러 컴포넌트가 순차적으로 데이터를 가져오게 되는 워터폴 현상이 발생했습니다.  React 팀은 이 동작이 의도된 동작이 아님을 확인하고 수정하겠다고 밝혔습니다. 이 사건은 오픈 소스 커뮤니티에서 투명한 소통과 협력의 중요성을 다시 한번 환기시켰습니다. 현재 React v19는 `prewarming`이라는 기능을 통해 이슈를 해소하며, 다시 RC v1 단계를 거쳐 현재 [v19](https://github.com/facebook/react/releases/tag/v19.0.0)를 릴리스했습니다. \r\r\n\r\r\n* [React 19 and suspense](https://tkdodo.eu/blog/react-19-and-suspense-a-drama-in-3-acts)\r\r\n* [React core PR - sibiling pre-rendering feature](https://github.com/facebook/react/issues/29898#issuecomment-2477449973)\r\r\n* [What's new in react 19](https://vercel.com/blog/whats-new-in-react-19)\r\r\n* [Server Actions have been renamed to Server Functions](https://19.react.dev/reference/rsc/server-functions)\r\r\n\r\r\n### React Compiler\r\r\n\r\r\nReact v19만큼이나 커뮤니티를 들썩이게 만든 또 다른 주제는 바로 React Compiler(코드명: Forget ‍️)입니다. React는 상태 변경과 리렌더링을 중심으로 동작하지만, 때로는 memoization을 통해 이러한 동작을 최적화해야 할 때가 있습니다. 그러나 이 과정에서 가독성이 떨어지고 오류가 발생하는 경우가 많았습니다. 이러한 문제를 해결하기 위해 React Compiler가 등장했죠. \r\r\n\r\r\nReact Compiler는 memoization 최적화를 자동으로 처리할 뿐만 아니라, 앞으로는 JSX Inlining과 JSX Outlining 같은 기능도 지원할 예정입니다.\r\r\n\r\r\n\\- JSX Inlining: 불필요한 JSX Runtime 호출을 제거하고 미리 빌드된 JSX 객체를 삽입\\.\r\r\n\\- JSX Outlining: 컴파일러가 하위 컴포넌트를 자동으로 추출하여 최적화\\.\r\r\n\r\r\n현재 [베타 릴리스](https://react.dev/blog/2024/10/21/react-compiler-beta-release) 단계이며, React v17 이상에서 사용할 수 있습니다. ✨\r\r\n\r\r\n* [(번역) 리액트 컴파일러 사용법](https://junghan92.medium.com/%EB%B2%88%EC%97%AD-%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%99%84%EB%B2%BD-%EA%B0%80%EC%9D%B4%EB%93%9C-a6a0e96edc97)\r\r\n* [Understanding React Compiler](https://tonyalicea.dev/blog/understanding-react-compiler/)\r\r\n* [Alias analysis in the React Compiler](https://www.recompiled.dev/blog/alias-analysis/)\r\r\n* [Compiler Theory and Reactivity](https://www.recompiled.dev/blog/ssa/)\r\r\n* [Type system of the React Compiler](https://www.recompiled.dev/blog/type-system/)\r\r\n* ▶️ [What's next for the react compiler?](https://www.youtube.com/watch?v=qd5yk2gxbtg)\r\r\n\r\r\n### Next.js\r\r\n\r\r\n[Next.js](https://nextjs.org/)는 React 기반의 풀스택 프레임워크로, 서버와 클라이언트 렌더링을 유연하게 결합해 강력한 개발 경험을 제공합니다. 특히 App Router와 React Server Components(RSC)의 도입으로 동적 라우팅과 성능 최적화가 크게 강화되었습니다.\r\r\n올해 Next.js는 [v14.2](https://nextjs.org/blog/next-14-2), v15 RC [v1](https://nextjs.org/blog/next-15-rc), [v2](https://nextjs.org/blog/next-15-rc2)를 거쳐 정식으로 [v15](https://nextjs.org/blog/next-15)를 릴리스했습니다. 여기에 모노레포(monorepo) 관리를 위한 Turborepo와 차세대 번들러인 Turbopack 또한 긴밀히 통합해 Next.js 생태계를 구축하고 있습니다.\r\r\n\r\r\n* [How vercel adopted microfrontends](https://vercel.com/blog/how-vercel-adopted-microfrontends)\r\r\n* [Turbopack Dev is now stable](https://nextjs.org/blog/turbopack-for-development-stable)\r\r\n* [How to set up next.js 15 for production in 2024](https://www.reactsquad.io/blog/how-to-set-up-next-js-15-for-production)\r\r\n* [Vercel functions - serverless servers and the challenge of new React architecture](https://bobaekang.com/blog/serverless-servers-and-the-challenge-of-new-react-architecture)\r\r\n* [Turborepo installation](https://turbo.build/repo/docs/getting-started/installation#start-with-an-example)\r\r\n* ▶️ [Self-hosting Next.js](https://www.youtube.com/watch?v=sIVL4JMqRfc)\r\r\n\r\r\n### Remix\r\r\n\r\r\n[Remix](https://remix.run/)는 React를 기반으로 한 풀스택 웹 프레임워크로, 서버 사이드 렌더링(SSR)과 클라이언트 사이드 라우팅을 지원하여 빠르고 유연한 웹 애플리케이션 개발을 가능하게 합니다. 2022년 10월, Remix는 [Shopify에 인수](https://remix.run/blog/remixing-shopify)되었으며, 이후 Shopify는 [Hydrogen](https://hydrogen.shopify.dev/)에 Remix를 기반으로 한 기능을 도입해 보다 강력한 전자상거래 플랫폼을 구축했습니다.\r\r\n\r\r\n사실 Remix와 React Router는 아주 긴밀하게 연결되어 있었습니다. 이런 관계로 인해 점점 두 프로젝트의 경계가 모호해지며, Remix는 사실상 React Router의 확장판이 되었습니다. 이에 따라 Remix팀은 React Router 사용자들이 코드 분할, 데이터 로딩, 서버 렌더링 등 Remix의 강력한 기능을 손쉽게 활용할 수 있도록 두 프로젝트의 통합을 결정했습니다.\r\r\n\r\r\n* [Incremental path to React 19](https://remix.run/blog/incremental-path-to-react-19)\r\r\n* ▶️ [Remix Roadmap](https://www.youtube.com/watch?v=fjTX8hQTlEc&t=400s)\r\r\n\r\r\n### 기타\r\r\n\r\r\n리액트 관련해 흥미로웠던 글들을 소개합니다.\r\r\n\r\r\n* [Conceptual Model of React and RSC](https://ondrejvelisek.github.io/conceptual-model-of-react-and-rsc/)\r\r\n* [The two reacts](https://overreacted.io/the-two-reacts/)\r\r\n* [The anatomy of a React Island](https://swizec.com/blog/the-anatomy-of-a-react-island/)\r\r\n* [Locality of Behavior in React Components](https://alexkondov.com/locality-of-behavior-react/)\r\r\n* [React's evolution from Hooks to Concurrent React: From React 16 to 18, a long overview](https://tigerabrodi.blog/reacts-evolution-from-hooks-to-concurrent-react)\r\r\n* [Two ways to the two Reacts](https://bobaekang.com/blog/two-ways-to-the-two-reacts/)\r\r\n\r\r\n## 개발 환경\r\r\n\r\r\n### JavaScript Runtimes\r\r\n\r\r\n한때 크로스 브라우저 호환성이 웹 개발의 주요 화두였다면, 이제는 자바스크립트 런타임 전쟁이 서서히 다가오고 있습니다. 오랜 시간 표준처럼 여겨졌던 [Node.js](https://nodejs.org/en) 외에도 [Deno](https://deno.com/)와 [Bun](https://bun.sh/)이 놀라운 속도로 발전하며 도전장을 내밀고 있습니다. 여기에 [LLRT](https://github.com/awslabs/llrt)와 같은 새로운 도구들까지 등장하면서, 자바스크립트 런타임 생태계는 이제 다양한 선택지와 경쟁으로 가득 찬 새로운 시대를 맞이하고 있습니다. 한편, Node.js 또한 선두 주자로서 입지를 지키기 위해 새로운 기술을 적극 수용하며 생태계를 확장하고 우위를 유지하려는 노력을 이어가고 있습니다.\r\r\n\r\r\n* [JS Toolbox 2024: Runtime environments & package management](https://raygun.com/blog/js-toolbox-part-1/)\r\r\n* [Runtime Compatibility](https://runtime-compat.unjs.io/)\r\r\n* [Node Core PR module: add --experimental-transform-types](https://github.com/nodejs/node/pull/54283)\r\r\n* [Native Support for CJS/ESM Interoperability Begins in Node.js 22](https://webdeveloper.beehiiv.com/p/native-support-cjsesm-interoperability-begins-nodejs-22)\r\r\n* [Node.js takes steps towards removing corepack](https://socket.dev/blog/node-js-takes-steps-towards-removing-corepack)\r\r\n\r\r\n### Package Managers\r\r\n\r\r\n다양한 JavaScript Runtime들만큼이나 프로젝트 의존성 관리와 패키지 설치를 돕는 Package Manager도 전통적인 npm과 Yarn을 넘어 더 빠르고 효율적인 대안들이 떠오르며 경쟁이 치열해지고 있습니다. \r\r\n\r\r\n[pnpm](https://pnpm.io/ko/)은 디스크 공간 효율성과 모노레포(monorepo) 지원을 강점으로, [Bun](https://bun.sh/)은 올인원 도구로 놀라운 설치 속도를 자랑합니다. 또한 [JSR](https://jsr.io/docs/with/deno)은 다양한 JavaScript Runtime과 호환되며 TypeScript와 ESM을 네이티브로 지원해 현대적인 모듈 관리를 선도하고 있습니다. npm의 개발자는 새롭게 팀을 만들어 [vlt](https://www.vlt.sh/client)라는 패키지 매니저와 레지스트리인 [vsr](https://www.vlt.sh/serverless-registry)까지 출시했습니다.\r\r\n\r\r\n각 Package Manager는 고유의 특징과 강점을 바탕으로 개발자들에게 더 나은 선택지를 제공하며, 자바스크립트 생태계를 넓히고 있습니다.\r\r\n\r\r\n* [Introducing Deno 2](https://deno.com/blog/v2.0)\r\r\n* [Bun 1.1](https://bun.sh/blog/bun-v1.1)\r\r\n* [vlt - Introducing our team, investors & more](https://blog.vlt.sh/blog/the-team)\r\r\n\r\r\n### Build Tools\r\r\n\r\r\n현대적인 프론트엔드 개발을 위한 빌드 도구는 결국 [Vite](https://vite.dev/) 아래 모이게 되었습니다.  [Remix가 Vite로 마이그레이션](https://remix.run/blog/remix-vite-stable)되었고, [Angular의 툴 체인](https://v17.angular.io/guide/esbuild)에도 도입되었으며, 그 외 수많은 라이브러리와 프레임워크가 Vite 위에 구축되어 오고 있습니다. 이로 인해 Vite의 주간 npm 다운로드 수는 1,700만건 가까이 기록하고 있으며 Next.js를 제외한 주요 생태계를 점령했습니다.\r\r\n\r\r\nEvan You에 의하면 Vite팀은 소스 파일에서 AST를 만들고, Linting, Formatting, Testing 등 모든 과정을 네이티브 수준의 속도로 처리는 툴체인을 구축하려는 목표를 세웠고 실제로 [VoidZero](https://voidzero.dev/posts/announcing-voidzero-inc)라는 회사를 설립해 투자 유치에 성공했습니다.\r\r\n\r\r\n최근 릴리스된 Vite 6.0에선 [Environment API](https://main.vite.dev/guide/api-environment)를 추가해 단일 Vite 서버에서 필요한 만큼 환경을 생성해 앱이 동작하는 방식을 매핑할 수 있게 됩니다. Vite는 이제 Deno, Bun과 같은 JavaScript Runtime으로 실행과 번들링이 가능해지고, React Native나 Electron과 같은 특수한 Runtime도 지원합니다.\r\r\n\r\r\n* [Vite Dev Server 이해하기](https://1ilsang.dev/posts/js/dev-server)\r\r\n* [Increasing Vite's potential with the Environment API](https://green.sapphi.red/blog/increasing-vites-potential-with-the-environment-api)\r\r\n* ▶️ [Visual Guide to the Modern Frontend Toolchain - Vite](https://youtu.be/M_edImKoEt8?si=RL1VrRyD1BYhqEnA)\r\r\n\r\r\n### Bundler\r\r\n\r\r\n현재 개발에 박차를 가하고 있는 차세대 번들러들은 Rust 기반으로 설계되어 기존의 Parcel, Rollup, Webpack에 비해 더욱 빠르고 강력한 성능을 자랑합니다. ⚡️ 물론, 일부 개발자들은 이런 장점을 위해 모든 것을 새로 만드는 것이 과연 필요한가에 대한 의문을 제기하기도 합니다.\r\r\n\r\r\n하지만, Go로 작성된 [esbuild](https://esbuild.github.io/)로 Dev Server를 제공하는 Vite를 경험하고 나니, 다시 Webpack으로 돌아가는 일이 무척 멀게만 느껴지는 것도 사실입니다.\r\r\n\r\r\n차세대 번들러를 간단히 살펴보자면, [Rspack](https://rspack.dev/)은 Webpack의 [Drop-in Replacement](https://rspack.dev/guide/migration/webpack#migrate-from-webpack)로 호환성과 성능을 강조하고 있으며, [Turbopack](https://nextjs.org/docs/architecture/turbopack)은 안정화 단계를 거쳐 [Next.js v15의 권장 도구](https://nextjs.org/blog/next-15#turbopack-dev)로 자리 잡으며 Webpack의 후계자를 자처하고 있습니다. 또한 Vite 진영에서도 [Rolldown](https://rolldown.rs/)이라는 차세대 도구를 개발 중입니다. 마지막으로 또 내가 제일 빠르다고 하는 [Mako](https://makojs.dev/)도 있네요.\r\r\n\r\r\n각 도구들이 경쟁하며 프론트엔드 생태계에 바람을 일으키고 있습니다. 앞으로 누가 이 씬을 주도하게 될지 기대가 됩니다. \r\r\n\r\r\n* [Rspack announcing 1.0](https://rspack.dev/blog/announcing-1-0)\r\r\n* [Rslib](https://github.com/web-infra-dev/rslib)\r\r\n* [Lessons learned switching to Rspack](https://birtles.blog/2024/08/14/lessons-learned-switching-to-rspack)\r\r\n* [Why does Vercel bother with Turbopack when Vite already exists?](https://github.com/vercel/next.js/issues/48748#issuecomment-2199941311)\r\r\n* [Why we are building Rolldown](https://rolldown.rs/about#why-we-are-building-rolldown)\r\r\n\r\r\n## 프레임워크\r\r\n\r\r\n### Vue\r\r\n\r\r\nVue는 올해 [v3.5](https://blog.vuejs.org/posts/vue-3-5)의 첫 번째 마이너 릴리스를 발표하며 성능과 메모리 최적화, SSR 지원에 주력했습니다. 특히, 반응형 시스템을 리팩터링하여 메모리 사용량을 56% 감소시키고, 대규모 및 깊은 배열의 처리 성능을 눈에 띄게 향상시켰습니다. Vue 역시 SSR(Server-Side Rendering) 지원 강화를 목표로 새로운 기능들을 추가하며, 현대적인 웹 애플리케이션 개발을 위한 진화를 계속하고 있습니다.\r\r\n\r\r\n* [10 Years of Vue: the Past and the Future](https://www.youtube.com/watch?v=OmrwRrZitv4)\r\r\n\r\r\n### Angular\r\r\n\r\r\n올해 Angular는 3월, 구글의 내부 프레임워크 [Wiz와의 통합](https://blog.angular.dev/angular-and-wiz-are-better-together-91e633d8cd5a)을 발표했습니다. Wiz는 Gmail, Search와 같은 성능이 중요한 서비스에서 사용되는 프레임워크로 이번 통합은 SSR 지원 강화를 목적으로 이루어졌습니다. 이어 5월에는 [v18](https://blog.angular.dev/angular-v18-is-now-available-e79d5ac0affe)을 발표하며 변경 감지 라이브러리 추출, 홈페이지 개편, 그리고 SSR 기능 강화를 진행했습니다. 11월에는 [v19](https://blog.angular.dev/meet-angular-v19-7b29dfd05b84)가 [릴리스](https://github.com/angular/angular/releases/tag/19.0.0)되며, 부족했던 렌더링 모드의 다양화, Hydration 제어 개선, 그리고 Signal 도입이라는 큰 변화를 선보였습니다.\r\r\n\r\r\n* [Google Angular Lead sees convergence in JavaScript Framework](https://thenewstack.io/google-angular-lead-sees-convergence-in-javascript-frameworks/)\r\r\n* [Managing Angular](https://blog.mgechev.com/2024/08/25/managing-angular/)\r\r\n\r\r\n### Svelte\r\r\n\r\r\nSvelte는 [v5](https://svelte.dev/blog/svelte-5-is-alive) 릴리스를 통해 패러다임의 전환을 알렸습니다. 과거에는 `let count = 0`만 작성해도 Svelte의 컴파일러가 이를 상태로 처리했지만, 이제는 더 명시적으로 상태를 선언하는 방식으로 변화했습니다. 새로운 메커니즘인 [runes](https://svelte.dev/blog/runes)가 도입되었으며, `$state()`를 통해 반응형 상태를 명확히 관리할 수 있게 되었습니다.\r\r\n\r\r\n### Astro\r\r\n\r\r\nAstro는 최근 [v5](https://astro.build/blog/astro-5/) 업데이트에서 타입 안전 환경 변수 설정을 지원하며 환경 변수의 가시성과 안전성을 강화했습니다. 또한 Content Layer API를 통해 다양한 데이터 소스에서 가져온 콘텐츠를 타입 안전하게 관리할 수 있게 되었으며, 렌더링 기능을 강화해 페이지와 컴포넌트별로 SSR과 정적 생성을 유연하게 선택할 수 있게 했습니다.\r\r\n\r\r\n### Hono\r\r\n\r\r\n[Hono](https://hono.dev/)는 모든 JavaScript Runtime에서 실행 가능한 경량 웹 서버 프레임워크로, 빠른 라우팅을 지원하는 RegExpRouter 개념과 여러 헬퍼, 미들웨어로 주목 받고 있습니다.\r\r\n\r\r\n### Waku\r\r\n\r\r\n[Waku](https://waku.gg/)는 Zustand와 Jotai 진영에서 개발한 리액트 기반 풀스택 프레임워크로, React의 Server Action API를 지원하는 [v0.21](https://waku.gg/blog/server-actions-are-here)을 출시했습니다. 중규모 애플리케이션 개발을 목표로 하며, Next.js의 대안으로 기대를 받고 있습니다.\r\r\n\r\r\n## 다양한 렌더링 모드\r\r\n\r\r\n최근 프론트엔드 프레임워크들은 다양한 렌더링 방식을 제공하여 각자의 장점을 활용한 최적화 전략을 선보이고 있습니다.\r\r\nCSR(Client-Side Rendering)은 동적이고 빠른 사용자 경험(UX)을 제공하지만, 초기 HTML이 서버에서 제공되지 않기 때문에 SEO에는 다소 불리합니다.\r\r\n이에 반해, SSR(Server-Side Rendering)과 SSG(Static-Site Generation)은 초기 페이지 로드 시 완전한 HTML을 제공해 SEO와 성능 최적화에 유리합니다. Astro는 [Islands Architecture](https://jasonformat.com/islands-architecture)를 활용해 정적 콘텐츠와 인터랙티브 요소를 분리하고, Server Islands를 통해 필요한 동적 콘텐츠만 효율적으로 로드합니다. 또한, Next.js는 [PPR(Partial Pre-Rendering)](https://vercel.com/blog/partial-prerendering-with-next-js-creating-a-new-default-rendering-model)을 통해 동적 콘텐츠를 스트리밍 하며 점진적 렌더링 방식을 선도하고 있습니다.\r\r\n이런 다양한 렌더링 방식들은 앱의 목적과 성능 요구 사항에 따라 적절히 선택할 필요가 있습니다.\r\r\n\r\r\n* [Client-Side Rendering](https://github.com/theninthsky/client-side-rendering)\r\r\n* [What's a Single-Page App?](https://jakelazaroff.com/words/whats-a-single-page-app/)\r\r\n* [How to choose the best rendering strategy for your app](https://vercel.com/blog/how-to-choose-the-best-rendering-strategy-for-your-app)\r\r\n\r\r\n## JavaScript\r\r\n\r\r\n### Signals\r\r\n\r\r\nECMAScript 위원회인 TC39에 [Signal 도입 제안](https://github.com/tc39/proposal-signals)이 올라왔습니다. [Preact](https://preactjs.com/), [Solid](https://solidjs.com/)와 같은 프레임워크는 이미 Signal을 활용하여 Reactivity를 구현하고 있습니다.\r\r\nSignal은 애플리케이션 상태를 관리하는 방식으로, 상태 변경 시 UI를 업데이트합니다. React의 상태 변경이 전체 리렌더링을 유발하는 반면, Signal은 세분화된 상태 변경을 처리하여 렌더링 없이 최소한의 작업으로 UI를 갱신합니다. 이 제안을 통해 여러 프레임워크에서 중복된 Reactivity 모델을 제거하고, 개발 도구에서도 Signal의 활용이 기대됩니다.\r\r\n\r\r\n* [How to Build Signals from Scratch](https://www.freecodecamp.org/news/learn-javascript-reactivity-build-signals-from-scratch/)\r\r\n\r\r\n### Temporal\r\r\n\r\r\n새로운 날짜 및 시간 처리 기능인 Temporal이 [Stage 3](https://github.com/tc39/proposal-temporal)에 도달했습니다. 기존 JavaScript의 `Date` 객체가 가진 문제들을 해결하기 위해 설계되었으며, 개발자들이 보다 직관적이고 강력한 시간 처리를 할 수 있도록 도울 것입니다.\r\r\n\r\r\n* [JS Dates are about to be fixed](https://docs.timetime.in/blog/js-dates-finally-fixed)\r\r\n\r\r\n### ECMAScript 2024\r\r\n\r\r\n2024년 ECMAScript 언어 사양이 승인되면서 새로운 기능들이 추가되었습니다. 주요 기능으로는 `Promise.withResolvers()`, `Object.groupBy`, `Map.groupBy` 등이 있습니다. 과거처럼 대규모 신규 개념이 추가되기보다는 기존 기능의 개선과 최적화가 주를 이루는 모습입니다.\r\r\n\r\r\n* [ECMAScript 2024](https://2ality.com/2024/06/ecmascript-2024.html)\r\r\n* [What's new in ECMAScript 2024](https://pawelgrzybek.com/whats-new-in-ecmascript-2024/)\r\r\n* [The state of ES5 on the web](https://philipwalton.com/articles/the-state-of-es5-on-the-web/)\r\r\n\r\r\n### 기타\r\r\n\r\r\nTC39는 기존에 JavaScript 표준 프로세스에서 Stage를 [0~4 단계](https://tc39.es/process-document/)로 유지했으나, 최근 [Stage 2.7](https://thenewstack.io/inside-ecmascript-javascript-standard-gets-an-extra-stage/)을 추가했습니다. 이는 Stage 3에서 Stage 2로 롤백될 경우 발생하는 리소스를 줄이고, 작업 효율성을 향상시키기 위한 조치로 보입니다.\r\r\n\r\r\n## CSS\r\r\n\r\r\n### CSS-in-JS\r\r\n\r\r\nCSS-in-JS는 SSR의 활성화에 따라 한동안 인기를 잃어 왔지만 React v19의 새로운 기능으로 다시 주목을 받고 있습니다. 특히 스타일 호이스팅(precedence 속성을 사용해 `` 태그를 문서 헤드로 이동)을 지원하며, 온디맨드 스타일 렌더링이 개선되었습니다. 이에 따라 [Restyle](https://www.restyle.dev/), [StyleX](https://stylexjs.com/blog/introducing-stylex), [PandaCSS](https://panda-css.com/)와 같은 라이브러리가 주목 받고 있으며, MUI는 [PigmentCSS의 도입](https://mui.com/blog/introducing-pigment-css)을 시도하고 있습니다. 또한 CSS-in-JS의 리소스 문제를 극복한 Compiled CSS-in-JS 방식도 주목을 받고 있습니다.\r\r\n\r\r\n* [CSS in React Server Components](https://www.joshwcomeau.com/react/css-in-rsc/)\r\r\n* [Why is CSS-in-JS slow?](https://playfulprogramming.com/posts/why-is-css-in-js-slow)\r\r\n* [A preview of Pigment CSS: the next generation of CSS-in-JS](https://mui.com/blog/introducing-pigment-css/)\r\r\n\r\r\n### CSS 신규 기능\r\r\n\r\r\n2024년에는 CSS의 새로운 스펙들이 도입되며, 작년에 이어 [Baseline](https://web.dev/baseline)과 [Interop](https://web.dev/blog/interop-2024)과 같이 플랫폼 간 상호운용성에 대한 노력이 CSS 생태계가 더욱 강력하게 만들고 있습니다. `@property` 문법으로 CSS 변수를 선언하고 속성을 정의하거나, Popover API로 번거롭던 Modal 문제를 해결하는 등 개발자의 생산성을 크게 향상시키고 있습니다. 이번에는 2024년 도입된 주요 기능과 개인적으로 관심을 가졌던 최신 CSS 관련 링크를 공유 드립니다.\r\r\n\r\r\n* [CSS Container Queries](https://css-tricks.com/css-container-queries/)\r\r\n* [If CSS gets inline conditionals](https://css-tricks.com/if-css-gets-inline-conditionals/)\r\r\n* [CSS anchor API](https://developer.chrome.com/blog/anchor-positioning-api)\r\r\n* [Popover API lands in Baseline](https://web.dev/blog/popover-api)\r\r\n* [The undeniable utility of CSS `:has`](https://www.joshwcomeau.com/css/has/)\r\r\n* [CSS `@property` and the new style](https://ryanmulligan.dev/blog/css-property-new-style/)\r\r\n* [New CSS that can actually be used in 2024](https://thomasorus.com/new-css-that-can-actually-be-used-in-2024.html)\r\r\n* [Old Dogs, new CSS Tricks](https://mxb.dev/blog/old-dogs-new-css-tricks/)\r\r\n* [A Framework for evaluating browser support](https://www.joshwcomeau.com/css/browser-support/)\r\r\n* [CSS Wrapped 2024](https://chrome.dev/css-wrapped-2024/)\r\r\n* ▶️ [Amazing CSS in 2024](https://www.youtube.com/watch?v=D79TND9w_AY)\r\r\n\r\r\n### Masonry 레이아웃\r\r\n\r\r\n오랫동안 웹 개발자들은 Pinterest 스타일의 Masonry 레이아웃을 구현하기 위해 JavaScript에 의존해왔습니다.  그러나 이제 CSS가 이 기능을 네이티브로 지원할 준비를 하고 있으며 이를 구현하는 방식에 대해 [Chrome팀](https://rachelandrew.co.uk/archives/2024/09/21/masonry-and-good-defaults)과 [Webkit팀](https://webkit.org/blog/15269/help-us-invent-masonry-layouts-for-css-grid-level-3/) 간에 새로운 `display`를 추가할지, `grid` 내에 통합할지 [논의](https://webkit.org/blog/16026/css-masonry-syntax/)가 이어지고 있습니다.\r\r\n\r\r\n## Performance\r\r\n\r\r\n### e18e\r\r\n\r\r\nJavaScript 생태계의 성능 향상을 목표로 한 커뮤니티 기반 이니셔티브 [e18e(Ecosystem Performance)](https://e18e.dev/)가 실질적인 진전을 이루며 주목 받고 있습니다. e18e는 다음 세 가지 목표를 중심으로 자바스크립트 생태계의 개선을 추진하고 있습니다.\r\r\n\r\r\n1. Clean up: 인기 있는 패키지의 중복된 의존성 제거 또는 대체를 통해 속도를 최적화.\r\r\n2. Speed up: 널리 사용되는 패키지와 프레임워크의 성능 개선.\r\r\n3. Level up: 오래된 패키지에 대해 더 가볍고 모던한 대안을 마련.\r\r\n\r\r\n이니셔티브의 노력은 커뮤니티의 참여로 이루어지며, 최신 패치 목록과 대안을 제안하는 [module-replacements](https://github.com/es-tooling/module-replacements)와 같은 결과물로 나타나고 있습니다.\r\r\n최근 공개된 [October Contribution Showcase](https://e18e.dev/blog/october-contributions-showcase.html)에서는 Storybook과 ESLint 같이 널리 사용되는 도구에 대한 기여가 눈에 띕니다. 이를 통해 e18e는 자바스크립트 생태계의 전반적인 성능을 끌어올리는 데 실질적인 역할을 하고 있으며, 커뮤니티와 오픈 소스 생태계의 협력을 이끌어내고 있습니다.\r\r\ne18e는 단순히 성능 개선을 넘어, 개발자들이 사용하는 핵심 도구를 더 가볍고 빠르게 만들어 생태계 전반에 긍정적인 영향을 미칠 것으로 기대됩니다.\r\r\n\r\r\n### Web Vitals - INP\r\r\n\r\r\n[Web Vitals](https://web.dev/articles/vitals)는 Google이 정의한 웹 성능 지표로, 사용자 경험(UX)을 개선하기 위한 기준을 제공합니다. 2024년 정식으로 선정된 [INP(Interaction to Next Paint)](https://web.dev/articles/inp)는 사용자 상호작용 후 다음 화면이 렌더링될 때까지의 지연 시간과 응답성을 측정하며, 기존 FID(First Input Delay)보다 더 포괄적이고 실질적인 경험을 반영합니다. INP는 사용자 입력 이벤트를 우선 처리하고, 비동기 렌더링을 최적화하는 등 동시성 기술을 통해 개선할 수 있습니다.\r\r\n\r\r\n* [What is INP and why you should care](https://blog.sentry.io/what-is-inp/)\r\r\n* [Understanding Interaction to Next Paint(INP)](https://frontendmasters.com/blog/understanding-inp/)\r\r\n* [Investigating INP issues](https://www.stefanjudis.com/blog/investigating-inp-issues/)\r\r\n* [How to improve INP in React](https://kurtextrem.de/posts/improve-inp-react)\r\r\n* [How to Improve INP: Yield Patterns](https://kurtextrem.de/posts/improve-inp)\r\r\n* [Demystifying INP: New tools and actionable insights](https://vercel.com/blog/demystifying-inp-new-tools-and-actionable-insights)\r\r\n\r\r\n## 기타\r\r\n\r\r\n### Mobile\r\r\n\r\r\n모바일 개발 생태계에서도 큰 변화가 이어지고 있습니다. React Native는 [새로운 아키텍처](https://reactnative.dev/blog/2024/10/23/the-new-architecture-is-here)로 재작성되어 [v0.76](https://reactnative.dev/blog/2024/10/23/release-0.76-new-architecture)에서 동기식 네이티브 통신, 동시성 시스템, 새로운 이벤트 루프를 도입하며 성능과 안정성을 크게 개선했습니다. 한편, Google의 Flutter는 최근 조직 축소와 커뮤니티 대응 지연으로 비판을 받아 왔으며, 이에 대응해 커뮤니티가 Flutter를 포크한 [Flock](https://flutterfoundation.dev/blog/posts/we-are-forking-flutter-this-is-why)를 발표했습니다. Flock은 문제 해결에 집중하고 있지만 인원 부족으로 인상적인 성과를 내기 어려울 것이라는 전망도 있습니다. 이러한 변화들은 크로스 플랫폼 개발의 미래를 더욱 흥미롭게 만들고 있습니다.\r\r\n\r\r\n### Architecture\r\r\n\r\r\n개인적으로 소프트웨어 설계 관련해 기억나는 포스트는 C4 모델을 응용한 Visualizing Frontend Architecture와 FSD(Feature-Sliced Design)입니다. C4 모델은 소프트웨어 시스템을 Context, Container, Component, Code의 4가지 레벨로 나누어 시각화하는 방식으로, 이를 프론트엔드에 적용해 아키텍처를 명확히 표현한 접근이 인상 깊었습니다.\r\r\n한편, FSD는 기능(feature) 단위로 관심사를 분리하여 모듈화된 폴더 구조를 설계하는 방식으로, 대규모 프로젝트의 유지 보수성과 확장성을 크게 향상시킵니다. 이러한 접근법들은 구조적 명확성을 제공하며, 올해 프론트엔드 설계에서 중요한 흐름으로 자리 잡았습니다.\r\r\n\r\r\n* ▶️ [Visualising software architecture with the C4 model](https://www.youtube.com/watch?v=x2-rSnhpw0g)\r\r\n* [Visualizing Frontend Architecture](https://frontendatscale.com/issues/17)\r\r\n* [Feature-Slided Design Pattern](https://feature-sliced.design/)\r\r\n* [FSD 관점으로 바라보는 코드 경계 찾기](https://velog.io/@teo/fsd)\r\r\n* [프론트엔드 개발자 관점으로 바라보는 관심사의 분리와 좋은 폴더 구조 (feat. FSD)](https://velog.io/@teo/separation-of-concerns-of-frontend)\r\r\n\r\r\n### IT 뉴스\r\r\n\r\r\n* 미국 법무부는 2024년, ADA(미국 장애인 법)에 따라 웹 콘텐츠와 모바일 애플리케이션의 [접근성 규정을 발표](https://www.tpgi.com/the-ada-now-has-regulations-for-accessibility-of-web-content-and-mobile-apps/)했습니다. 이는 공공 기관이 운영하는 디지털 콘텐츠가 WCAG 2.1 레벨 AA 기준을 충족하도록 요구하며, 장애인을 위한 더 나은 디지털 접근성을 보장합니다. 민간 기업에도 간접적인 영향을 미칠 것으로 보입니다.\r\r\n* 영국 정부가 인도양 차고스 제도(British Indian Ocean Territory)의 주권을 포기하며 [.io 도메인이 사라질 예정](https://every.to/p/the-disappearance-of-an-internet-domain)입니다. 새로운 등록이 중단되며, 기존 도메인 역시 점진적으로 폐기 프로세스가 시작됩니다. .io 도메인을 사용하는 많은 기업에 영향을 미칠 것으로 보입니다. 하지만 .su 도메인이 특수 사례로 살아남은 적이 있어 어떤 식으로 흘러갈지는 지켜봐야 할 것 같습니다.\r\r\n* 올해 Sentry는 [페어 소스(Fair Source)](https://fair.io/)라는 새로운 소프트웨어 라이선스를 도입한다고 했습니다. 이는 오픈 소스와 유사하게 코드를 공개적으로 공유하지만, 제작자의 비즈니스 모델을 보호하기 위해 사용, 수정, 재배포에 제한을 두는 것이 특징입니다. 또한 지연된 오픈소스 퍼블리싱(DOSP) 방식으로 초기에는 독점 라이선스를 유지하다가 일정 계획에 따라 오픈소스화합니다.\r\r\n\r\r\n***\r\r\n\r\r\n막상 정리를 해보겠다고 마음먹고 주요 기술 스택과 뉴스를 간추리는 데 생각보다 시간이 오래 걸렸습니다. 내년에도 같은 작업을 이어간다면 반기로 나누어 진행해야 할 것 같습니다. 처음에는 2~3개의 뉴스레터로 시작했지만, 욕심이 생겨 점점 범위를 넓히다 보니 지금은 UI/UX와 디자인까지 포함해 매주 약 19개의 뉴스레터를 훑고 있는 상황입니다. \r\r\n\r\r\n뉴스레터로 알게 된 내용을 실제로 제품에 적용해 볼 기회는 많지 않았지만, 프론트엔드 트렌드를 파악하고, 우리 팀과 조직에서 적용해 볼 만한 부분을 점검할 수 있었다는 점에서 개인적으로 만족스러웠습니다. 본 글에서 다루지 못했지만 JavaScript의 AI, Privacy 강화, WASM과 같은 주제에도 변화가 있었습니다. 관심 있는 분들은 관련 내용을 찾아보시는 것도 추천드립니다.\r\r\n\r\r\n앞으로도 새롭게 등장할 기술들 속에서 각자의 서비스에 적합한 것을 선택하고 도입하며, 변화에 유연하게 대응해 나가길 바랍니다. \r\r\n(혹시라도 깨진 링크나 잘못된 내용이 있다면 제보 부탁드립니다. )\r\r\n\r\r\n[![NHN Cloud_meetup banner_footer_blue_202412_900.png](https://image.toast.com/aaaadh/real/2024/techblog/NHN%20Cloudmeetup%20bannerfooterblue202412900.png)](https://www.nhncloud.com/kr)",
        "isoDate": "2024-12-16T04:57:57.000Z"
      }
    ]
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": [
      {
        "creator": "호돌맨",
        "title": "아사히카와(旭川)의 아라시야마(嵐山)에서 촬영 재도전",
        "link": "https://hodolman.tistory.com/67",
        "pubDate": "Sun, 15 Dec 2024 22:10:07 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/67#entry67comment",
        "content": "<p data-ke-size=\"size16\">홋카이도 아사히카와에 몇 번 방문한 적이 있다. 단순 관광이거나 왓카나이로 가기 위한 거점이 목적이었다.</p>\n<p data-ke-size=\"size16\">어느 날 <a href=\"https://www.instagram.com/seanpavonephoto/\" target=\"_blank\" rel=\"noopener\">Sean Pavone</a>의 사진을 보고 아사히카와를 다르게 보기 시작했다. 그 사진은 아라시야마(산)에서 아사히카와 도시를 담은 풍경 <a href=\"https://www.istockphoto.com/kr/%EC%82%AC%EC%A7%84/%EC%95%84%EC%82%AC%ED%9E%88%EC%B9%B4%EC%99%80-%EC%9D%BC%EB%B3%B8-%EB%8F%84%EC%8B%9C-%EC%8A%A4%EC%B9%B4%EC%9D%B4-%EB%9D%BC%EC%9D%B8-gm647845470-117589517?searchscope=image%2Cfilm\" target=\"_blank\" rel=\"noopener\">사진</a>이었다. 나도 같은 구도의 사진을 찍어보고 싶다는 목표가 생겼다.</p>\n<p data-ke-size=\"size16\">그리고 2023년 2월 아사히카와 아라시야마에 방문했다.</p>\n<p><figure class=\"imageblock widthContent\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"KakaoTalk_Photo_2024-12-15-21-37-08.jpeg\" data-origin-width=\"1468\" data-origin-height=\"981\"><span data-url=\"https://blog.kakaocdn.net/dn/dW9VQd/btsLkum2XXD/dS8ku5kNRIZLoSontOukSk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dW9VQd/btsLkum2XXD/dS8ku5kNRIZLoSontOukSk/img.jpg\" data-alt=\"2023년 2월, 아라시야마로 가는 길\"><img src=\"https://blog.kakaocdn.net/dn/dW9VQd/btsLkum2XXD/dS8ku5kNRIZLoSontOukSk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdW9VQd%2FbtsLkum2XXD%2FdS8ku5kNRIZLoSontOukSk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"KakaoTalk_Photo_2024-12-15-21-37-08.jpeg\" data-origin-width=\"1468\" data-origin-height=\"981\"/></span><figcaption>2023년 2월, 아라시야마로 가는 길</figcaption>\n</figure>\n<figure class=\"imageblock widthContent\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"스크린샷 2024-12-15 오후 9.38.08.png\" data-origin-width=\"2298\" data-origin-height=\"1954\"><span data-url=\"https://blog.kakaocdn.net/dn/b3KwTc/btsLjSu6D9S/0tlCUIgcaQoxKvWHBnO6Tk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b3KwTc/btsLjSu6D9S/0tlCUIgcaQoxKvWHBnO6Tk/img.png\" data-alt=\"2024년 9월, 아라시야마로 가는 길 (구글 로드뷰)\"><img src=\"https://blog.kakaocdn.net/dn/b3KwTc/btsLjSu6D9S/0tlCUIgcaQoxKvWHBnO6Tk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb3KwTc%2FbtsLjSu6D9S%2F0tlCUIgcaQoxKvWHBnO6Tk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"스크린샷 2024-12-15 오후 9.38.08.png\" data-origin-width=\"2298\" data-origin-height=\"1954\"/></span><figcaption>2024년 9월, 아라시야마로 가는 길 (구글 로드뷰)</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">하지만.. 허리까지 쌓인 눈으로 입구는 막혀있었다. 구글 로드뷰가 '이곳에 길이 있어'를 알려줄 뿐이었다. 200m 정도도 안 되는 낮은 산인데 눈앞에서 오를 수 없다니.. 정말 허탈했다.<br />동네 주민분과 이야기를 나누었는데 겨울에는 갈 수 없다고 한다. 아쉽지만 다음을 기약했다. 다음에는 반드시 날씨를 잘 확인하고 방문해야겠다고 다짐했다.</p>\n<p data-ke-size=\"size16\">한국에 온 뒤에 아라시야마에 대해 몇 가지를 조사했다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>내가 방문한 등산로는 정상까지 갈 수 있지만 멀리 도는 길이었다. 그리고 동네 주민분이 올려놓은 유튜브 영상을 통해 구글맵에는 자세히 나와있지 않은 새로운 루트를 알아냈다. </li>\n<li>지금 카메라<span style=\"color: #333333; text-align: left;\">(sony a5100)</span>&nbsp;보다는 새로 구입하는 게 좋을 것 같았다. (sony a7m3 구입)</li>\n<li>렌즈는 ~200mm정도 화각이 필요했다. (탐론 28-200m 구입)</li>\n</ul>\n<p data-ke-size=\"size16\">1년 10개월 뒤 2024년 12월 1일 삿포로에 방문했다. 눈과 가득 찬 구름으로 일기예보에도 12월 2일은 유난히 맑음이었다.  다음 날 아사히카와로 향했고 14시 30분쯤 역에 도착했다.</p>\n<p data-ke-size=\"size16\">정상에서 일몰 사진을 찍으려면 택시를 타야 했다. <br />アイヌ文化の森 (아이누 문화의 숲) 또는 北邦野草園 (호쿠호 와일드플라워 가든)으로 가달라고 하면 된다. 2,400엔 정도 나온다.</p>\n<div id=\"code_1734267512614\" data-ke-type=\"html\" data-source=\"&lt;iframe src=&quot;https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d889.3239300195866!2d142.30684400234674!3d43.79263599633362!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x5f0ce5850e474149%3A0xf9b434bf56f14525!2sHokuho%20Wildflower%20Garden!5e0!3m2!1sko!2skr!4v1734267284262!5m2!1sko!2skr&quot; width=&quot;600&quot; height=&quot;450&quot; style=&quot;border:0;&quot; allowfullscreen=&quot;&quot; loading=&quot;lazy&quot; referrerpolicy=&quot;no-referrer-when-downgrade&quot;&gt;&lt;/iframe&gt;\"><iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d889.3239300195866!2d142.30684400234674!3d43.79263599633362!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x5f0ce5850e474149%3A0xf9b434bf56f14525!2sHokuho%20Wildflower%20Garden!5e0!3m2!1sko!2skr!4v1734267284262!5m2!1sko!2skr\" width=\"600\" height=\"450\" allowfullscreen=\"\"></iframe></div>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_20241202_152347.jpg\" data-origin-width=\"1000\" data-origin-height=\"563\"><span data-url=\"https://blog.kakaocdn.net/dn/6btpZ/btsLjuaj1kJ/KQcqbxDxvCo37BAit9kO1K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/6btpZ/btsLjuaj1kJ/KQcqbxDxvCo37BAit9kO1K/img.png\" data-alt=\"Hokuho Wildflower Garden 北邦野草園\"><img src=\"https://blog.kakaocdn.net/dn/6btpZ/btsLjuaj1kJ/KQcqbxDxvCo37BAit9kO1K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F6btpZ%2FbtsLjuaj1kJ%2FKQcqbxDxvCo37BAit9kO1K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_20241202_152347.jpg\" data-origin-width=\"1000\" data-origin-height=\"563\"/></span><figcaption>Hokuho Wildflower Garden 北邦野草園</figcaption>\n</figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"IMG_1416.JPG\" data-origin-width=\"836\" data-origin-height=\"627\"><span data-url=\"https://blog.kakaocdn.net/dn/bpBoeu/btsLjGhrVVV/VkWlq8g4KURfEdbsJBh7n0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bpBoeu/btsLjGhrVVV/VkWlq8g4KURfEdbsJBh7n0/img.jpg\" data-alt=\"등산로\"><img src=\"https://blog.kakaocdn.net/dn/bpBoeu/btsLjGhrVVV/VkWlq8g4KURfEdbsJBh7n0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbpBoeu%2FbtsLjGhrVVV%2FVkWlq8g4KURfEdbsJBh7n0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"IMG_1416.JPG\" data-origin-width=\"836\" data-origin-height=\"627\"/></span><figcaption>등산로</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">홋카이도(일본)와 한국 시차는 없지만 실질적으로 홋카이도 일몰이 빠르기 때문에 체감상 2~3시간 정도의 시차가 느껴진다. (실제로 아사히카와 12월 2일 일몰 시간은 15시 50분 정도다.) </p>\n<p data-ke-size=\"size16\">낮은 산임에도 눈이 내렸던 탓에 길이 미끄러워 고생을 했다. 20분 정도 걸렸다.</p>\n<p data-ke-size=\"size16\">정상에서 울분에 찬 셔터를 우다다 터트렸다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_DSC02722.jpg\" data-origin-width=\"1000\" data-origin-height=\"544\"><span data-url=\"https://blog.kakaocdn.net/dn/bGOMtR/btsLiVsNPB5/7NulFkptBnDXo4KQKla1q1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bGOMtR/btsLiVsNPB5/7NulFkptBnDXo4KQKla1q1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bGOMtR/btsLiVsNPB5/7NulFkptBnDXo4KQKla1q1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbGOMtR%2FbtsLiVsNPB5%2F7NulFkptBnDXo4KQKla1q1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_DSC02722.jpg\" data-origin-width=\"1000\" data-origin-height=\"544\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_DSC02717.jpg\" data-origin-width=\"1000\" data-origin-height=\"784\"><span data-url=\"https://blog.kakaocdn.net/dn/cMF77C/btsLkuHkygY/LIjlMoiLQxCLMCkfQTiimk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cMF77C/btsLkuHkygY/LIjlMoiLQxCLMCkfQTiimk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cMF77C/btsLkuHkygY/LIjlMoiLQxCLMCkfQTiimk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcMF77C%2FbtsLkuHkygY%2FLIjlMoiLQxCLMCkfQTiimk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_DSC02717.jpg\" data-origin-width=\"1000\" data-origin-height=\"784\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_DSC02725.jpg\" data-origin-width=\"1000\" data-origin-height=\"620\"><span data-url=\"https://blog.kakaocdn.net/dn/NKmxC/btsLiNuX7zQ/ecVAe29JVWRhmXQK7jaY1k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/NKmxC/btsLiNuX7zQ/ecVAe29JVWRhmXQK7jaY1k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/NKmxC/btsLiNuX7zQ/ecVAe29JVWRhmXQK7jaY1k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FNKmxC%2FbtsLiNuX7zQ%2FecVAe29JVWRhmXQK7jaY1k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_DSC02725.jpg\" data-origin-width=\"1000\" data-origin-height=\"620\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_DSC02747.jpg\" data-origin-width=\"1000\" data-origin-height=\"618\"><span data-url=\"https://blog.kakaocdn.net/dn/cFMqV6/btsLjmwLiDc/PT6pLecd9x7vXVuh2KxzF1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cFMqV6/btsLjmwLiDc/PT6pLecd9x7vXVuh2KxzF1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cFMqV6/btsLjmwLiDc/PT6pLecd9x7vXVuh2KxzF1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcFMqV6%2FbtsLjmwLiDc%2FPT6pLecd9x7vXVuh2KxzF1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_DSC02747.jpg\" data-origin-width=\"1000\" data-origin-height=\"618\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">감사합니다.</p>",
        "contentSnippet": "홋카이도 아사히카와에 몇 번 방문한 적이 있다. 단순 관광이거나 왓카나이로 가기 위한 거점이 목적이었다.\n어느 날 Sean Pavone의 사진을 보고 아사히카와를 다르게 보기 시작했다. 그 사진은 아라시야마(산)에서 아사히카와 도시를 담은 풍경 사진이었다. 나도 같은 구도의 사진을 찍어보고 싶다는 목표가 생겼다.\n그리고 2023년 2월 아사히카와 아라시야마에 방문했다.\n2023년 2월, 아라시야마로 가는 길\n\n2024년 9월, 아라시야마로 가는 길 (구글 로드뷰)\n\n\n하지만.. 허리까지 쌓인 눈으로 입구는 막혀있었다. 구글 로드뷰가 '이곳에 길이 있어'를 알려줄 뿐이었다. 200m 정도도 안 되는 낮은 산인데 눈앞에서 오를 수 없다니.. 정말 허탈했다.\n동네 주민분과 이야기를 나누었는데 겨울에는 갈 수 없다고 한다. 아쉽지만 다음을 기약했다. 다음에는 반드시 날씨를 잘 확인하고 방문해야겠다고 다짐했다.\n한국에 온 뒤에 아라시야마에 대해 몇 가지를 조사했다.\n내가 방문한 등산로는 정상까지 갈 수 있지만 멀리 도는 길이었다. 그리고 동네 주민분이 올려놓은 유튜브 영상을 통해 구글맵에는 자세히 나와있지 않은 새로운 루트를 알아냈다. \n지금 카메라(sony a5100) 보다는 새로 구입하는 게 좋을 것 같았다. (sony a7m3 구입)\n렌즈는 ~200mm정도 화각이 필요했다. (탐론 28-200m 구입)\n1년 10개월 뒤 2024년 12월 1일 삿포로에 방문했다. 눈과 가득 찬 구름으로 일기예보에도 12월 2일은 유난히 맑음이었다.  다음 날 아사히카와로 향했고 14시 30분쯤 역에 도착했다.\n정상에서 일몰 사진을 찍으려면 택시를 타야 했다. \nアイヌ文化の森 (아이누 문화의 숲) 또는 北邦野草園 (호쿠호 와일드플라워 가든)으로 가달라고 하면 된다. 2,400엔 정도 나온다.\n\nHokuho Wildflower Garden 北邦野草園\n\n등산로\n\n\n홋카이도(일본)와 한국 시차는 없지만 실질적으로 홋카이도 일몰이 빠르기 때문에 체감상 2~3시간 정도의 시차가 느껴진다. (실제로 아사히카와 12월 2일 일몰 시간은 15시 50분 정도다.) \n낮은 산임에도 눈이 내렸던 탓에 길이 미끄러워 고생을 했다. 20분 정도 걸렸다.\n정상에서 울분에 찬 셔터를 우다다 터트렸다.\n\n\n\n\n\n감사합니다.",
        "guid": "https://hodolman.tistory.com/67",
        "categories": [
          "개발/우당탕탕 대모험",
          "아사리야마",
          "아사히카와"
        ],
        "isoDate": "2024-12-15T13:10:07.000Z"
      }
    ]
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "운동은 합법적인 마약",
        "link": "https://www.thestartupbible.com/2024/12/exercise-is-the-only-legal-drug.html",
        "pubDate": "Wed, 18 Dec 2024 21:31:00 +0000",
        "content:encodedSnippet": "우리 집에서는 한강이 아주 잘 보인다. 마루에서는 한강의 동쪽이 보이고, 다른 방에서는 강북과 강서의 뷰가 꽤 잘 보인다. 우린 재택근무를 아예 안 하는데, 다른 사람들이 스트롱의 재택근무 제도에 관해서 물어보면 나는 “재택근무 가능한 날은 토요일과 일요일이다”라는 말을 한다. 농담이지만, 실은 이건 나에게 내가 스스로 적용하는 근무 시스템이다.\n올해 쓴 글 중, 열심히 일하는 내용에 대한 포스팅이 몇 개 있었는데 이건 스타트업 분들에게만 하는 말은 아니고, 나 스스로에게 항상 강요하는 내용이다. 올해 나는 일을 하지 않은 주말이 없었다. 자랑스러운 건 아니고, 자랑하려고 하는 말도 아니다. 그냥 그 정도로 바빴고, 할 일이 많았고, 주말에도 일해야 할 정도로 매일 처리해야 하는 일이 많았다는 의미다. 불평하지도 않았고, 불평하고 싶지도 않고, 오히려 나는 이렇게 바쁘게 해야 할 일이 많다는 점에 감사하게 생각하고 있다.\n평일 아침 일찍, 밤늦게, 그리고 주말은 집에서 일했는데, 사무실로 사용하는 방에서 고개만 왼쪽으로 돌리면 한강의 멋진 뷰가 보이는데, 최근 몇 달 동안 창밖을 오랫동안, 멍하게, 아무 생각 없이 보는 시간이 너무 많아졌다. 그래도 마음이 안정되지 않고, 돌고 도는 잡생각이 머릿속을 떠나지 않고, 불안감이 온몸을 감싸는 걸 계속 경험하고 있다. 막상 그 불안함의 원인에 대해서 곰곰이 생각해 보고 종이에 써보면, 특별한 원인은 없다. 업무의 강도가 높아지고, 출장을 더 많이 가고, 지켜야 할 데드라인이 더 많아질수록 몸이 견뎌내야 하는 스트레스가 한계치를 넘어가서 이런 일이 발생하는 것 같다.\n이런 부정적인 신호가 올 때마다, 나는 운동복으로 갈아입고 몸을 움직인다. 그냥 움직이는 게 아니라 아주 격렬하게 움직인다. 아파트 지하에 있는 헬스장을 가장 자주 이용하고, 그다음으로 자주 이용하는 건 아파트 계단이다. 여름에는 한강에서 뛰기도 했다. 루틴에 따라서 웜업하고 웨이트를 반복적으로 들거나 35층 아파트 계단을 세 번 반복해서 오르면 다시 몸과 정신이 정상으로 돌아온다. 생각만 해도 도망가고 싶었던 힘든 문제들을 아주 차분하게 바라보면서 해결할 수 있는 에너지가 다시 충전되는데, 이게 참 신기하게도 몸을 더 과격하게 움직일수록 더 많은 긍정적인 에너지가 생긴다.\n올해 나는 그 어느 때보다 더 많은 일을 했고, 더 많은 스트레스를 받았고, 더 많은 불안감을 느꼈다. 그리고 이 스트레스와 불안감을 해소하기 위해서 그 어느 때보다 더 많은 운동을 했다. 중간마다 책도 그 어느 때보다 더 많이 읽었다. 엄청난 불안감과 스트레스의 한 해였지만, 역설적으로 엄청난 운동과 움직임의 한 해여서 더 건강해졌고, 더 많은 에너지로 몸을 지속적으로 충전할 수 있었다.\n나는 마약을 해본 적이 없지만, 움직임에 대해서 학술적으로 연구하는 분들에 의하면 격렬한 운동을 할 때 뇌가 느끼는 신호를 분석해 보면 마치 아주 센 마약을 몸에 투입했을 때 뇌가 느끼는 쾌락과 똑같다고 한다. 마약은 몸과 정신을 완전히 파괴하는 인류에서 없어져야 하는 불법 약물이다. 하지만, 해 본 사람은 그 누구나 인정하는, 100% 합법적인 마약이 딱 하나 있는데 그게 바로 ‘운동’이다.\n너무 힘들어서 온몸이 내 발밑에 있다고 느껴지거나, 정신이 저 땅 밑에 있는데 도저히 다시 주워 담을 엄두가 안 나거나, 숨쉬기도 힘들고, 정말 아무것도 안 하고 이대로 죽고 싶다는 생각만 든다면, 지금 당장 나가서 몸을 움직이고 격렬한 운동을 하라고 말해주고 싶다. 주변에 정신적으로 힘들어하는 분들이 있다면 운동을 권장하고, 더 나아가서 같이 운동해라. 나도 좋고, 그 사람도 좋고, 효과가 즉각적으로 나타나지만, 부작용이 전혀 없는 세상에서 가장 건강한 마약이다.\n운동은 특별히 돈도 안 들고, 감옥에도 가지 않는 합법적인 마약이다. Exercise will save you.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/12/exercise-is-the-only-legal-drug.html#respond",
        "content": "우리 집에서는 한강이 아주 잘 보인다. 마루에서는 한강의 동쪽이 보이고, 다른 방에서는 강북과 강서의 뷰가 꽤 잘 보인다. 우린 재택근무를 아예 안 하는데, 다른 사람들이 스트롱의 재택근무 제도에 관해서 물어보면 나는 “재택근무 가능한 날은 토요일과 일요일이다”라는 말을 한다. 농담이지만, 실은 이건 나에게 내가 스스로 적용하는 근무 시스템이다. 올해 쓴 글 중, 열심히 일하는 내용에 대한(...)",
        "contentSnippet": "우리 집에서는 한강이 아주 잘 보인다. 마루에서는 한강의 동쪽이 보이고, 다른 방에서는 강북과 강서의 뷰가 꽤 잘 보인다. 우린 재택근무를 아예 안 하는데, 다른 사람들이 스트롱의 재택근무 제도에 관해서 물어보면 나는 “재택근무 가능한 날은 토요일과 일요일이다”라는 말을 한다. 농담이지만, 실은 이건 나에게 내가 스스로 적용하는 근무 시스템이다. 올해 쓴 글 중, 열심히 일하는 내용에 대한(...)",
        "guid": "https://www.thestartupbible.com/?p=9328",
        "categories": [
          "Uncategorized",
          "failure",
          "healthcare",
          "inspiring",
          "sports",
          "stress management"
        ],
        "isoDate": "2024-12-18T21:31:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "인공지능과 휴먼의사",
        "link": "https://www.thestartupbible.com/2024/12/ai-and-the-human-touch.html",
        "pubDate": "Sun, 15 Dec 2024 21:37:00 +0000",
        "content:encodedSnippet": "난 건강한 편이고, 건강 관리도 잘하는 편이라서 지금까지 큰 병은 없었다. 올해 나이의 앞자리가 5로 바뀌면서 건강 관리를 조금 더 잘하고 체계적으로 하기 위한 일환으로 최근 몇 년 동안의 건강 검진 결과를 다 펼쳐놓고 중요한 수치들의 변화를 트래킹하고, 이 수치들과 다른 수치들, 그리고 내 몸의 실제 상태를 비교해 보기 시작했다.\n실은 몇 년 전만 해도 이렇게 하는 건 어려웠다. 일단 모든 수치들을 한 번에 정리하는 데 걸리는 시간도 만만치 않았지만, 각 항목이 뭘 의미하는지 잘 모르기 때문에 하나씩 검색을 해야 했다. 의사들에게 물어보면 더 자세한 설명을 들을 수 있을 것 같았는데, 지금까지 내가 경험했던 의사들은 환자를 돈으로만 봐서 자세한 설명도 안 해주고, 그 특유의 권위 의식이 싫어서 별로 말을 섞고 싶지가 않았다. 실은, 내가 최근에 가장 관심을 갖는 게, 인체라는 복합적인 유기체의 수많은 기관과 기능 간의 상관관계인데 이런 질문을 의사들에게 하면 대부분 뭘 그런 것까지 알려고 하냐면서 무시하거나, 그건 나랑 상관없으니 알 필요 없다고 일축해 버린다. 예를 들면, 담배도 안 피고 운동도 규칙적으로 하는데, 갑자기 혈압이 오르면, 상황에 따라서 어떤 수치들을 확인해 봐야 하는지,,,뭐 이런 것들이다.\n하지만, ChatGPT가 등장하면서 많은 것이 바뀌었다. 이제 내 건강 data에 대해서 궁금한 질문을 마음껏 할 수 있고, 과거의 다른 의료 기관에서 받았던 다양한 수치를 한 번에 대량으로 입력하면 꽤 정확한 분석과 설명을 인간 의사의 거만함이나 권위 의식 없이 들을 수 있다. 이제 나는 과거 15년 이상의 건강검진 기록을 그냥 사진 찍어 올리면서, AI에게 내 40대와 50대 건강 상태에 대한 의견을 물어보고, 내가 주의 깊게 관찰하는 특정 기관들의 수치에 대해서 비교해달라고 한다. 그리고 그동안 매우 궁금했지만, 위에서 말 한 여러 가지 이유로 병원에서 못 물어봤던 것들을 정말 많이 물어보고, 이 질문들에 대한 답변을 잘 공부하고, 또 그 답변에 대해 더 많은 질문을 하고 있다.\n챗GPT가 인간 의사보다 좋은 점은 일단 병원과 의사에 대해서 agnostic 하다는 점이다. 이미 한 병원에서 혈액 검사를 광범위하게 해서 결과가 있는데, 다른 병원에 가면 항상 검사를 새로 한다. 다른 병원의 검사 결과를 못 믿어서인지, 아니면 그냥 병원 매출을 늘리기 위한 방법인지 모르겠지만, 나는 이게 항상 불만이었다. 엑스레이 검사도 다른 병원에서 찍은 걸 가져가면 제대로 안 보고 항상 다시 찍자고 하는 걸 경험했는데, AI는 그냥 이 모든 데이터를 입력만 하면 모든 것을 기계가 분석한다. 결과의 포맷이 다른 것도 상관없다. 잘 아시겠지만, AI는 모든 걸 알아서 엑셀로 정리까지 해 준다.\n전문가의 함정을 최대한 배제할 수 있다는 것도 인공지능의 장점 중 하나다. 인체는 정말 복잡한 유기체이다. 모든 기관과 기능이 상상 이상으로 밀접하게 연결되어 있다. 간 전문의는 간에 대해서는 잘 알겠지만, 다른 장기에 대해서는 잘 모르고, 특히 다른 장기들이 간과 어떻게 연결되어 있고, 본인들이 직접 임상해 보지 않았고, 관련 논문을 읽지 않았다면, 다른 인체의 변화와 간이 어떤 반응을 일으키는지 제한된 지식만 보유하고 있다. 그래서 많은 의사들이 본인의 전문 분야가 아닌 분야의 수치의 변화에는 큰 관심도 없고, 특히 나같이 상대적으로 건강한 사람이라면 그냥 신경 쓰지 않고 넘어가는 경우가 많다. AI는 이 분야에서 아주 탁월한 능력을 발휘한다. 모든 가능한 시나리오를 제시해 줄 수 있고, 엄청난 양의 논문과 데이터를 소화하면서 다양한 원인과 의견을 제공해 준다. 이런 각도에서 보면, 세상에서 가장 큰 종합병원이다.\n또 한 가지는, 챗GPT는 기억력이 매우 좋다는 점이다. 이미 내 건강에 대한 지식과 데이터가 상당히 많이 축적되어 있기 때문에 뭐라도 하나 물어보면, 인간 의사들같이 과거 차트 대충 보면서 건성으로 답변하지 않고 아주 자세히 건강 데이터, 과거 병력, 증상 등을 모두 다 비교 분석하면서 답변을 해준다.\n그런데도, 기계는 아직도 기계일 뿐이다. 챗GPT는 의사를 대체 할 수도 없고, 실은 치명적인 실수도 정말 많이 하는 불완전하고 환각으로 가득 찬 기계이다. 결국 제대로 된 최종 진단, 처방, 그리고 불안한 환자의 마음을 안심시킬 수 있는 제대로 된 휴먼 터치는 결국 인간 의사에게서만 나올 수 있다. 내가 아무리 챗GPT를 사랑해도, 결국 몸이 아프면 의사 선생님에게 올 인할 수밖에 없다.\n하지만, AI로 인해 환자와 의사의 관계가 – 특히, 항상 불리했던 환자의 입장에서 – 향상됐다는 점을 부인할 수 없다. 의사를 보기 전에 우린 챗GPT에 모든 궁금한 점들을 물어볼 수 있고, 이에 대한 꽤 완성도 높은 답변을 얻을 수 있다. 의사를 만나서 이걸 확인만 하면 되고, 훨씬 더 체계적인 질문과 대화를 할 수 있다. 내 경험상, AI를 통해서 충분히 학습하고 준비된 질문으로 무장한 환자들에겐 권위 의식으로 가득 찬 의사들도 함부로 대하진 못하고, 오히려 그들도 이런 환자들과의 수준 높은 대화를 즐기는 것 같다.\n앞으로 AI가 어느 수준까지 발전하고, 인간 의사들의 수준이 어디까지 떨어질지 모르겠지만, 여기에 큰 시장이 존재한다. 의학 vertical AI 시장도 매우 클 것이고, 환자의 건강을 정말로 신경 써주는 제대로 된 휴먼 의사에 대한 수요 또한 더 커질 것이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/12/ai-and-the-human-touch.html#comments",
        "content": "난 건강한 편이고, 건강 관리도 잘하는 편이라서 지금까지 큰 병은 없었다. 올해 나이의 앞자리가 5로 바뀌면서 건강 관리를 조금 더 잘하고 체계적으로 하기 위한 일환으로 최근 몇 년 동안의 건강 검진 결과를 다 펼쳐놓고 중요한 수치들의 변화를 트래킹하고, 이 수치들과 다른 수치들, 그리고 내 몸의 실제 상태를 비교해 보기 시작했다. 실은 몇 년 전만 해도(...)",
        "contentSnippet": "난 건강한 편이고, 건강 관리도 잘하는 편이라서 지금까지 큰 병은 없었다. 올해 나이의 앞자리가 5로 바뀌면서 건강 관리를 조금 더 잘하고 체계적으로 하기 위한 일환으로 최근 몇 년 동안의 건강 검진 결과를 다 펼쳐놓고 중요한 수치들의 변화를 트래킹하고, 이 수치들과 다른 수치들, 그리고 내 몸의 실제 상태를 비교해 보기 시작했다. 실은 몇 년 전만 해도(...)",
        "guid": "https://www.thestartupbible.com/?p=9320",
        "categories": [
          "Uncategorized",
          "ai",
          "healthcare",
          "people",
          "technology"
        ],
        "isoDate": "2024-12-15T21:37:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "시장은 정말 보이지 않는 손에 의해 움직일까?",
        "link": "https://blog.toss.im/article/everyday-economics-21-invisible-hand",
        "pubDate": "Thu, 19 Dec 2024 09:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}이 글에서 알 수 있는 것들\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}팬데믹 초기의 마스크 대란이 시장 메커니즘을 보여준다?\n시장의 ‘보이지 않는 손’과 정부의 ‘보이는 손’이 경제에서 각각 맡는 역할\n시장은 정말 완전히 자율적으로 작동할 수 있는 걸까?\n\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-12p6bv8{white-space:pre-wrap;color:#15c47e;font-weight:bold;}교수 K (이하 K): 에디터 님, 혹시 보이지 않는 손(invisible hand)이라는 말을 들어보셨나요?\n.css-94on8q{white-space:pre-wrap;color:#c770e4;font-weight:bold;}에디터 G (이하 G): 네, 교수님! 예전에 경제 수업에서 들어봤어요. 신문, 기사 등 다양한 곳에서도 활용되고요.\nK: 그렇죠. 많은 분들에게 익숙한 ‘보이지 않는 손’은 경제학의 아버지라고 불리는 애덤 스미스(Adam Smith)의 대표작인 <국부론(The Wealth of Nations)>에 처음 등장한 용어예요.\n그는 각 개인이 오로지 자신의 이익을 위해 하는 행동들이 마치 보이지 않는 손에 이끌린 것처럼 결과적으로는 사회 전체 자원의 효율적 배분으로 이어진다고 보았는데요. 오늘은 정말 시장은 보이지 않는 손에 의해서 움직이는지를 살펴보도록 할게요.\n\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n보이지 않는 손의 핵심 도구는 바로 ‘가격’\nK: 시장에서 보이지 않는 손이 잘 작동하기 위해서는 도구가 하나 필요한데요. 무엇일까요?\nG: 음… 시장이 자율적으로 돌아가게 하려면 시장에서 거래되는 물건이나 서비스의 가격이 얼마인지 정해져있어야 할 것 같은데요.\nK: 잘 파악하셨어요. 바로 ‘가격’이 필요합니다. 이전에 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}“‘다이아몬드는 영원히’, 비싼 가격도 영원할까” 아티클에서 살펴본 것처럼, 가격은 수요와 공급의 상호작용으로 결정됩니다. 소비자와 생산자에게 신호를 전달하는 중요한 역할을 하죠.\n예를 들어, 소비자들은 가격이 낮아지면 더 많은 제품을 구매하려고 하지만, 가격이 높아지면 소비를 줄이게 됩니다. 반면 생산자들은 가격이 높아지면 더 많은 이윤을 기대하며 생산을 늘리고, 가격이 낮아지면 생산을 줄입니다.\nG: 서로 반대로 움직이네요. 소비자 입장에서는 세일 행사에 많이 몰릴 수밖에 없는 거고요.\nK: 그렇죠. 이와 같은 가격 메커니즘은 시장에서 초과 공급이나 초과 수요를 완화시키면서, 자연스럽게 시장 가격이 균형 지점으로 수렴하도록 만들게 됩니다.\n가격 메커니즘에 따르면, 희소한 자원일수록 가격이 올라가고 흔한 자원은 가격이 자연스럽게 내려가게 되는데요.\n팬데믹 초기를 떠올려볼까요? 초기에 마스크에 대한 수요가 폭증하면서, 마스크 품귀 현상으로 인해 가격이 급격히 상승한 적이 있었어요. 이러한 가격 상승은 마스크 제조업체들이 더 많은 자원을 투입하여 생산량을 늘리도록 자연스럽게 유도했고, 마스크 생산과 공급 확대로 이어졌습니다. 가격은 원래대로 돌아오게 되었죠.\nG: 똑똑히 기억나요. 흔한 소비재였던 마스크가 구하기 어려워지고, 그로 인해 가격이 몇 배는 뛰었어서 정말 혼란스러웠거든요.\nK: 그쵸, 많은 분들이 처음 겪는 현상이라 놀라셨을 거예요. 이렇게 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}외부의 별다른 개입 없이 시장 스스로 가격을 조정하고, 이를 통해 자원을 효율적으로 배분하고, 결과적으로 사회의 이익을 극대화한다는 것이 보이지 않는 손 이론의 핵심 아이디어라고 할 수 있습니다.\n\n시장 실패와 정부의 개입\nG: 교수님, 그럼 보이지 않는 손은 늘 시장에서 완벽하게 작동하나요?\nK: 좋은 질문이에요. 항상 완벽하게 작동하는 것은 아닙니다.\n예를 들어, 어떤 사람이 공장에서 물건을 만들어내면서 유독 물질을 공기 중으로 몰래 배출했다고 가정해보죠. 이때 공장 주변에 사는 사람들은 오염 물질 때문에 피해를 입게 될 겁니다. 이 상황을 그냥 시장에 맡겨둘 경우, 오염 물질로 인해 발생하는 부가적인 피해에 대해 공장은 아무런 비용도 지불하지 않을 거예요.\n이처럼 한 사람의 행동이 다른 사람에게 영향을 미치는 데도 불구하고, 이에 대해 아무런 대가를 지불하지 않는 상황을 외부효과(externality)라고 부르는데요. 환경오염으로 인한 부정적인 외부효과는 보이지 않는 손이 제대로 작동하지 않는 시장 실패(market failure)의 대표적인 사례라고 할 수 있습니다.\nG: 아무래도 공장을 운영하는 기업 입장에서는 이익 극대화를 위해 최선을 다할 테니, 제동을 걸지 않으면 주변 사람들에게 지속적으로 피해를 입힐 수 있겠네요. 다른 사례도 있을까요?\nK: 시장 실패의 또 다른 예시로 시장지배력(market power)으로 인한 가격의 자동 조절 기능 상실을 들 수 있습니다. 스탠더드 오일(Standard Oil) 회사의 실제 사례를 살펴볼게요.\n스탠더드 오일은 1870년에 존 D. 록펠러(John D. Rockefeller)가 설립한 회사인데요. 19세기 말에 스탠더드 오일은 미국 석유 시장의 약 90%를 장악하며 독점적인 지위를 구축했습니다. 이를 위해 경쟁사들의 계약을 방해하거나, 가격 덤핑 전략을 사용하여 소규모 석유 회사들을 하나씩 퇴출시켜 버렸고요.\n이렇게 시장을 지배하며 더 이상 경쟁을 할 필요가 없게 되자, 스탠더드 오일은 가격을 인위적으로 인상했습니다. 소비자들은 울며 겨자 먹기로 높은 연료비를 부담해야 했죠.\n이와 같이 시장이 소수의 기업에 의해 지배되면 가격은 더 이상 자유롭게 조정되지 않고, 자원의 배분도 왜곡됩니다.\nG: 소비자 입장에서는 동일한 재화에 대해 서로 다른 가격을 가진 여러 개의 제품이 있어야 더 나은 선택을 할 수 있는 기회를 가질 수 있는 것인데, 이렇게 되면 아무 비교도 없이 하나의 기업이 제공하는 재화만 하나의 가격에 구입해야 하니… 시장 독점이 위험한 이유겠네요.\nK: 그렇습니다. 지난 시간에 “부자는 반드시 사회에 환원해야 할까?” 아티클에서 살펴본 것처럼, 국방 서비스와 같은 공공재는 누군가 소비하더라도 다른 사람이 동일한 재화를 소비하는 데에 제한이 없습니다. \n또한 대가를 지불하지 않은 사람도 자유롭게 사용할 수 있죠. 이렇게 공공재는 경합성과 배제성이 낮기 때문에, 시장에 맡겨두면 공급이 제대로 이루어지지 않을 것입니다.\n이와 같이 외부효과, 시장지배력, 공공재의 공급 제한 등과 같은 상황에서는 보이지 않는 손이 제 역할을 하지 못하게 돼요. 결국 정부의 개입이 필요하게 됩니다.\nG: 정부가 개입하면 어떤 일들이 일어나나요?\nK: 대표적으로 ‘세금’이 있겠죠. 정부는 오염 물질을 배출하는 기업에게 세금을 부과할 수 있고, 오염 물질을 상대적으로 덜 배출하는 재생 에너지를 사용할 경우 보조금을 지급하는 방식 등을 통해 외부효과를 완화할 수 있습니다.\n또한 정부는 ‘공정거래법’ 등을 통해 기업의 독과점을 규제하여 시장에서 경쟁이 제대로 이루어지도록  유도할 수 있습니다. 앞서 살펴본 스탠더드 오일의 경우 ‘셔먼법(Sherman Act)’이라 불리는 반독점법에 따라 34개의 기업으로 분할하라는 판결을 미국 연방대법원이 내리게 됩니다.\n최근 구글이 인터넷 검색시장에서 독점적인 시장지배력을 남용하여 경쟁을 저해했다는 이유로 미국 법무부가 구글에 대한 기업 분할 조치를 검토하고 있는 것도 비슷한 맥락으로 이해할 수 있습니다.\n\n정부의 시장 개입에 대한 경제학자들의 생각들\nG: 앞서 설명주신 상황 외에도 정부의 개입이 필요한 상황이 있을까요?\nK: 경제가 대규모의 침체기에 빠졌을 때도 정부의 개입이 필요합니다. 1920년대 후반에 대공황(The Great Depression)이 발생했을 당시만 해도, 경제학자들은 가격 메커니즘을 신봉했습니다.\n하지만 대규모 경제 침체가 일어나면, 사람들은 일자리를 잃고 소비도 줄겠죠. 물건이 팔리지 않아 재고가 계속 쌓이게 되면 가격은 점점 떨어지게 되고요. 이렇게 가격이 계속 떨어지게 되면 어느 시점에는 다시 수요가 증가하게 될 것이고, 경제는 결국 스스로 제 자리를 찾아가게 될 것이라는 것이 이들의 논리였어요.\nG: 실제로는 어떠했나요?\nK: 예상과 다르게 흘러갔어요. 미국의 실업률이 지속적으로 치솟아 25%까지 오르고, 국민 소득은 반 토막이 났거든요. 보이지 않는 손은 침묵을 지키게 됩니다.\n이때 경제학계에 한 줄기 빛이 내려오는데요. 바로 존 메이너드 케인스(John Maynard Keynes) 입니다.\n케인스는 불황이 발생하는 원인에 대해 이렇게 말했어요. 시장의 수요가 충분하지 않았기 때문이며, 정부가 직접 나서서 돈을 지출하거나 세금을 삭감함으로써 경기 침체에서 벗어날 수 있을 것이라고요.\n실제로 케인스는 미국의 루즈벨트 대통령에게 편지를 보냅니다. 정부가 지출을 늘리게 되면 시간이 지나면서 그 효과가 눈덩이처럼 불어나고, 전체 경제에 영향을 주게 되는 승수효과(multiplier effect)를 근거로 미국이 대규모 공공부문 지출 프로그램을 시행할 것을 촉구하기도 했어요.\nG: 정부의 적극적 개입이 필요하다 강조한 거군요.\nK: 맞습니다. 케인스는 보이지 않는 손에게 모든 것을 맡기는 시장의 자율성에 의문을 제기하며, 정부의 적극적 개입이 필요함을 강조한 대표적인 경제학자라고 할 수 있습니다.\n그러나, 케인스의 이론에 모든 경제학자들이 동의한 것은 아닙니다.\n특히 시카고대학교의 밀턴 프리드먼(Milton Friedman)은 “과도한 정부 개입은 오히려 경제적 비효율성을 초래하고 개인의 자유를 침해할 수 있다”고 주장했어요. 또한 그는 “경제의 안정을 위해서는 케인스가 주장한 정부의 재정 정책보다는 통화 정책이 더 효과적”이라고 말했습니다.\nG: \"과도한 정부 개입이 비효율을 초래한다\"는 프리드먼의 주장에 대해 조금 더 자세히 설명해 주실 수 있을까요?\nK: 물론입니다. 프리드먼은 시장이 스스로 균형을 찾아가는 메커니즘을 신뢰했어요. 정부가 지나치게 개입하면 자원의 효율적인 배분이 왜곡될 것을 걱정했습니다. 정부가 대규모 재정 정책으로 소비를 촉진하려 할 때, 자금이 오히려 비효율적인 부문으로 흐를 수 있다는 우려도 있었어요. 이 과정에서 개인의 선택과 자유가 침해당할 가능성도 있다고 본 거죠.\n당시 정부의 과도한 개입으로 인해 물가는 상승하고 경제는 침체되었는데, 프리드먼은 이를 방지하려면 통화 정책이 더 적합하다고 봤습니다.\nG: 그렇군요. 그래서 그는 정부가 직접 돈을 쓰는 방향보다, 통화량을 조절하는 방식으로 시장의 흐름을 ‘간접적으로’ 조정해야 한다 주장했군요.\nK: 맞습니다. 케인스의 이론을 따르는 경제학자들과 프리드먼의 이론을 따르는 경제학자들은 1950년대부터 1970년대까지 설전을 이어갔는데요.\n프리드먼은 만약 정부가 인플레이션을 방치한 채 더 많은 일자리를 창출하는 데에만 정책 목표를 둔다면, 결국에는 물가 상승만을 초래하고 기존의 일자리를 파괴하게 될 것이라고 주장했습니다.\n그의 주장은 특히 1970년대에 발생한 경기침체와 인플레이션이 합쳐진 ‘스태그플레이션’ 시기에 주목받았어요. 프리드먼의 주장이 사실로 증명되었거든요. 이때부터 이른바 ‘통화주의’가 힘을 얻게 됩니다.\n한편, 굳이 정부가 개입하지 않아도 시장의 실패를 극복할 수 있다는 새로운 시각도 등장했는데요. 바로 로널드 코즈(Ronald Coase)가 제시한 ‘코즈의 정리(Coase Theorem)’입니다.\n코즈에 따르면 “외부효과와 같은 시장 실패가 발생하는 상황에서도, 소유권이 명확히 정의되어 있고, 정보의 수집과 협상에 들어가는 비용 등과 같은 거래 비용(transaction cost)이 낮다면, 시장 참여자 간의 협상을 통해 자원이 얼마든지 효율적으로 배분될 수 있다”고 주장합니다.\nG: 코즈는 프리드먼과 다른 의견이었군요. 시장에 문제가 생기는 경우, 누구에게 어떤 권리가 있는지 명확하고 사람들이 서로 대화하거나 합의하는 데에 드는 비용이 크지 않다면, 정부가 개입하지 않아도 된다는 말일까요?\nK: 맞습니다. 이는 정부의 개입 없이도 가격 메커니즘이 작동할 수 있는 가능성을 열어줍니다. 정부가 개입하지 않아도 사람들이 스스로 문제를 해결하고 자원을 효율적으로 나눌 수 있다는 뜻이죠.\n예를 들어, 공장이 오염 물질을 배출해서 주변에 거주하는 주민들에게 피해를 주었을 때, 피해 주민과 공장 소유자가 협상을 통해 오염 물질을 줄이도록 서로 합의한다면, 굳이 정부가 중간에 개입하지 않더라도 문제를 해결할 수 있다고 본 것입니다.\n\n오늘은 “시장은 정말 보이지 않는 손에 의해 움직이는가?”에 대해 살펴보았는데요. 보이지 않는 손은 가격 메커니즘을 통해 시장이 자율적으로 작동할 수 있음을 보여줍니다.\n그러나 현실 경제에서는 외부효과, 독과점, 공공재 공급 제한 등으로 인해 보이지 않는 손이 제대로 작동하지 않을 수 있습니다. 이렇게 시장이 스스로 자원을 효율적으로 배분하지 못하는 상황에서는 정부의 적절한 개입이 필요하고요.\n다만, 시장이 항상 완벽하지 않은 것처럼 정부도 완벽하지 않습니다. 시장과 정부는 대립하는 관계이기 보다는 서로의 불완전한 부분을 보완해주는 관계에 가깝습니다.\n앞으로 경제 뉴스를 보실 때는 시장의 ‘보이지 않는 손’과 정부의 ‘보이는 손’이 어떻게 서로 협력하는지를 유심히 관찰해보면 좋을 것 같네요.\n.css-13d8cj1{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;margin:24px 0 8px;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:var(--adaptiveGrey700);}\n.css-1dzrkjz{width:16px;margin-right:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\n.svg-icon-wrapper{position:relative;display:inline-block;width:24px;height:24px;}.svg-icon-wrapper >.svg-icon:empty+.svg-icon-fallback{visibility:visible;z-index:inherit;}.svg-icon{color:var(--adaptiveGrey900);display:inline-block;width:24px;height:24px;display:block;width:100%;height:100%;}.svg-icon svg,.svg-icon img{display:block;width:100%;height:100%;}.svg-icon--hide{display:none;}.svg-icon-fallback{position:absolute;left:0;right:0;top:0;z-index:z-index(hidden);visibility:hidden;display:block;width:100%;height:100%;}.svg-icon-fallback--show{visibility:visible;z-index:inherit;}\n참고자료\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이제현",
        "content": "자율적인 시장은 가능할까? 경제학 거장들의 이야기를 따라가다",
        "contentSnippet": "자율적인 시장은 가능할까? 경제학 거장들의 이야기를 따라가다",
        "guid": "https://blog.toss.im/article/everyday-economics-21-invisible-hand",
        "isoDate": "2024-12-19T09:00:00.000Z"
      },
      {
        "title": "한파, 폭염 그리고 커피값 - 엘니뇨와 라니냐가 몰고 온 변화",
        "link": "https://blog.toss.im/article/economic-terms-41-elnino-lanina",
        "pubDate": "Thu, 19 Dec 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}이 글에서 알 수 있는 것들\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}매서운 한파와 긴 폭염, 왜 우리나라에 나타나는 걸까?\n커피값 폭등의 숨은 범인이 바로 ‘바닷물 온도’인 이유\n엘니뇨·라니냐 같은 이상기후 - 우리 삶 사이의 깊은 연결고리\n\n.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-p4abj2{display:contents;line-height:1.55;}🔖 이번 주 경제 용어\n엘니뇨·라니냐\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n이번 주 경제 용어는 환경에 관심 가지기 위해 필요한 정보예요.\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n동태평양 적도 부근의 해수 온도가 평년보다 높아지는 현상이 엘니뇨, 낮아지는 현상을 라니냐라고 해요.\n\n\n해가 갈수록 전 세계 이상 기후 현상이 빈번하게 발생하고 있습니다. 올해 북미와 유럽은 기록적인 폭염이 이어졌고, 동남아시아와 남미 일부 지역에서는 폭우와 홍수로 많은 인명 피해가 있었죠. 반면 호주와 미국 중서부에서는 극심한 가뭄이 지속되기도 했어요. 우리나라도 올 여름 기록적인 긴 폭염이 지속되었고, 가을에는 기온이 들쑥날쑥했으며, 겨울은 초입부터 폭설이 내렸어요.\n이러한 이상 기후는 ‘대기(공기)와 해수(바닷물)의 순환’과 밀접하게 연결되어 있습니다. 대기와 해수가 움직이면서 지구 곳곳에 에너지를 고르게 전달하는데요. 이 과정에서 문제가 생길 때 기후변화가 나타납니다. 대표적으로 엘니뇨, 라니냐 같은 현상이 있어요.\n\n엘니뇨·라니냐 이름의 유래는?\n\n엘니뇨(El Niño)와 라니냐(La Niña)라는 용어는 스페인어에서 유래했어요. \n엘니뇨는 ‘남자 아이’ 또는 ‘아기 예수’를 뜻해요. 크리스마스 즈음에 페루와 에콰도르 해안에서 따뜻한 해류가 발생하는 현상 때문에 ‘아기 예수’라는 이름이 붙여졌습니다. \n라니냐는 ‘여자 아이’라는 뜻으로, 엘니뇨와 반대되는 현상, 즉 바닷물이 차가워질 때를 설명하기 위해 대비되는 이름을 선택했어요.\n\n자, 그럼 이런 이상기후 현상이 어떤 원리로 일어나는지 좀 더 자세히 알아볼게요.\n\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}출처: 2016 엘니뇨 백서, 기상청\n보통 적도 부근에서는 무역풍*이 불면서 바닷물을 동쪽에서 서쪽으로 밀어냅니다. 반대로 중위도 지역에서는 편서풍이 바닷물을 서쪽에서 동쪽으로 움직이게 해요. 이렇게 바닷물이 동서로 움직이면서, 대륙 근처에 다다르면 남북 방향으로 이동하며 큰 원을 그리며 순환합니다.\n* 무역풍(trade wind) : 지구 자전의 영향으로 위도 20도 내외 지역에서 1년 내내 동쪽에서 서쪽으로 일정하게 부는 바람. 이 바람은 유럽에서 아메리카 대륙으로 항해할 때 무역선의 이동을 돕는 역할을 했으며, 이러한 이유로 ‘무역풍’이라는 이름이 붙었다.\n이 과정에서 적도 동쪽의 따뜻한 표층 해수가 서쪽으로 이동하게 되는데, 이로 인해 서태평양의 수온이 높아집니다. 수온이 높아지면 구름이 많이 만들어져요. 이로 인해 서태평양 지역에는 비가 많이 내리고, 반대로 동태평양 지역에는 맑고 건조한 날씨가 나타납니다.\n여기까지가 일반적인 기후 현상이에요. 엘니뇨·라니냐 같은 이상기후는 2~5년마다 불규칙적으로 나타나요.\n1. 엘니뇨\n\n태평양 바닷물 온도가 평소보다 높아지는 현상이에요.\n평소에 무역풍이 불면, 따뜻한 바닷물이 동태평양(남미)에서 서태평양(아시아)로 밀려갑니다.\n그런데 무역풍이 약해지면 따뜻한 바닷물이 서태평양으로 가지 않고 동태평양 연안에 쌓이게 돼요. 이 때문에 동태평양 해수 온도가 높아지면서 엘니뇨가 발생합니다. (주로 12월쯤 나타나요)\n날씨가 평소와 다르게 바뀌어요. 북미·남미에는 폭우와 홍수가, 아시아·호주에는 가뭄과 폭염이 발생하기도 해요. \n우리나라 기준으로 보면 겨울철 기온이 올라가고, 겨울에 비가 내리는 날이 늘어나요.\n\n2. 라니냐\n\n엘니뇨와 반대로, 태평양 바닷물 온도가 평소보다 낮아지는 현상이에요.\n무역풍이 평소보다 더 강하게 불면, 따뜻한 바닷물이 서태평양(아시아)으로 빠르게 밀려갑니다.\n그러면 동태평양에서는 이 빈자리를 채우기 위해 심해의 차가운 바닷물이 수면 위로 올라오게 되죠. 이 때문에 동태평양 해수 온도가 낮아지고, 라니냐가 발생합니다. (주로 엘니뇨가 끝난 뒤 나타나는 경우가 많고, 여름에 시작해서 겨울에 가장 강해져요) \n날씨도 엘니뇨와 반대로 나타나요. 북미·남미 날씨는 건조해지고, 북미에는 강추위가 찾아오기도 하고요. 아시아·호주에는 폭우와 홍수가 발생할 수 있어요. \n우리나라 기준으로 보면  여름 무더위가 심해지고 폭염이 더 길어져요. 태풍이 자주 발생하고 한반도로 북상할 가능성도 커집니다. 겨울에는 한파가 더 자주 발생하고, 눈이 많이 내릴 수 있습니다.\n\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}\"커피 한 잔 합시다\" 이 말도 이젠 부담?…원두 가격 계속 오를까\n(머니투데이 2024.11.26.)\n5일 인베스팅닷컴에 따르면 영국 런던국제금융선물거래소(LIFFE)에서 거래되는 로부스타 원두 선물 가격은 지난 22일 기준으로 전일 대비 4.14% 오른 4985달러에 마감했다. 최근 일 년간 로부스타 원두 선물 가격은 89%대 뛰었다. 지난해 9월에는 역대 최고가를 기록하기도 했다.\n커피 강세의 배경에는 엘니뇨가 있다. 엘니뇨는 열대 동태평양 표층 수온이 평년보다 높아지는 현상이다. 무역풍 약화가 원인으로 꼽히지만 정확한 원인은 알려지지 않았다. 엘니뇨가 발생하면 미국 남부와 멕시코 지역은 강우량이 높아지고, 미 북부와 캐나다, 아시아 등에는 가뭄이 찾아온다.\n이 때문에 엘니뇨는 커피를 비롯한 연성 원자재(소프트 커머디티)의 가격을 올려놓는 주범으로 꼽힌다. 올해도 엘니뇨는 세계 최대 커피 산지인 브라질과 로부스타 원두의 주요 산지인 베트남, 인도네시아 등에 가뭄을 불러왔다. 커피 원두 생산량이 줄어들자 가격도 지난해 말부터 강세를 보였다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}기후 변화가 심화되는 만큼 커피 가격의 변동성이 커질 것이라는 관측이 나온다. 피치 솔루션의 찰스 하트 애널리스트는 외신과의 인터뷰에서 \"향후 10년 동안 기후 변화로 커피 부문에 구조적인 리스크가 더욱 심화될 것\"이라며 \"전 세계의 커피 생산량이 영향을 받으면서 가격 변동성도 커질 것\"이라고 봤다.\n다만 단기적으로 커피 가격의 강세는 이어지지 않을 전망이다. 엘니뇨가 끝나고 라니냐가 찾아오며 커피, 코코아 등 연성 원자재의 가격이 하락할 수 있어서다. 정한솔 대신증권 연구원은 \"소프트 가격 강세를 야기했던 엘니뇨가 종료되면서 원당/커피/코코아 등 소프트 가격이 내년 하락 전환할 것\"이라고 분석했다.\n대신 라니냐가 찾아오면서 소프트 대신 곡물가가 강세를 보일 것이라는 예상이다. 라니냐는 전 세계에 옥수수와 대두를 공급하는 핵심 생산지인 북미에서 강추위를, 남미에서는 가뭄을 유발한다. 이에 따라 소프트 가격은 하락하지만 옥수수, 대두, 소맥 등 곡물 가격이 올라갈 가능성이 있다. (후략)\n\n\n올해 엘니뇨는 주요 커피 산지인 브라질, 베트남, 인도네시아에 심각한 가뭄을 불러왔고, 커피 원두 생산량도 감소했습니다.\n브라질은 세계 커피 시장의 약 40%를 차지하는 주요 커피 산지로, 가뭄으로 인한 수확량 감소는 세계 시장에 큰 파장을 미칠 수밖에 없어요. 베트남, 인도네시아는 로부스타 커피를 주로 생산하는 국가로, 가뭄이 길어질수록 원두 가격이 급등할 가능성이 크겠죠. 이렇게 작황이 좋지 않으니 공급량이 줄어들고, 커피 가격이 폭등할 수밖에 없는 경제적 결과를 불러옵니다.\n한편 엘니뇨가 끝나고 라니냐가 찾아오면, 북미에 강추위를 가져오면서 옥수수와 대두 생산에 차질이 생길 수 있습니다.\n특히 미국은 전 세계 옥수수와 대두의 주요 수출국이기 때문에, 생산량 감소가 세계 곡물 시장에 큰 영향을 미칠 수 있어요. 남미에는 가뭄을 가져오는데, 이로 인해 브라질과 아르헨티나 같은 곡물 생산국에 큰 피해를 주어 소맥(밀) 등 작물의 공급을 위협합니다. 엘니뇨가 커피에 미친 영향과 마찬가지로, 라니냐는 옥수수, 대두, 소맥 등 곡물 가격 상승을 유발할 것으로 보이고요.\n\n기후 변화가 심각해지면서 엘니뇨와 라니냐의 발생 빈도와 강도가 더 커질 수 있습니다. 이로 인해 특정 농산물의 생산량 변동성이 커지고 가격도 급등락을 반복하게 될 가능성이 높고요.\n이렇게 주요 식량의 가격이 급격하게 오르내리는 것이 우리 삶에 어떤 변화를 주는지 좀더 자세히 살펴볼까요? 커피를 예시로 들어볼게요.\n많은 사람들의 기호 식품인 커피 가격이 오른다는 것은, 단순히 커피를 좋아하는 소비자들에게만 영향을 주는 것이 아닙니다. 커피 시장에 다양한 변화를 불러올 수 있어요. 대형 커피 체인은 원가 상승 압박으로 제품 가격 인상을 고려할 수밖에 없고, 소규모 커피숍이나 자영업자들은 원가 부담이 더 크게 다가오기 때문에 소비자가 빠르게 이탈하며 폐업까지 이어지는 케이스가 많아질 수 있습니다. 또한 커피 가격이 오르면, 초콜릿(코코아)이나 설탕(원당) 등 다른 연성 원자재 가격에까지 영향을 미칠 수 있어요.\n이렇게 음료 전반의 가격이 지속적으로 오르면, 소비자들은 소비 습관을 바꾸려 할 거예요. 집에서 직접 커피를 만들어 마시는 빈도가 높아지겠죠. 홈카페 트렌드가 더욱 강화될 수 있습니다. 커피 대신 차(tea), 에너지 음료, 건강 음료 등 대체재를 찾는 수요도 증가할 수 있어요. 프리미엄 고급 커피에서 상대적으로 저렴한 커피 원두로 바꾸는 경향성도 보일거고요.\n더 나아가 정부와 산업에도 영향을 미칠 수 있습니다. 커피 같은 주요 작물의 공급 불안정이 계속되면, 대응책을 세우기 위해 기후 변화에 강한 품종 개발, 스마트 농업 기술 도입 등 혁신을 일으킬 수 있어요. 그리고 커피 수출국은 국내 수급 안정을 위해 수출 규제, 재고 비축을 강화할 수 있습니다. 반면 수입하는 국가들은 공급망 리스크를 줄이려 하겠죠.\n이렇게 엘니뇨·라니냐 같은 기후변화 현상은 개인은 물론 사회 전체에도 큰 영향력을 끼칩니다. 단순히 커피와 곡물의 문제를 넘어, 지구 전체의 식량 안보를 위협하고 있기에 관심을 기울여야 합니다.\n\n\n로부스타 원두: 세계적으로 널리 소비되는 커피 원두 중 하나. 카페인이 아라비카 원두보다 약 2배 많아, 커피의 강도와 쓴맛을 선호하는 사람들에게 인기 있어요. 아라비카 원두와 함께 커피 시장을 양분하는 커피 종류예요.\n연성 원자재: 주로 재배하거나 생산해야 하는 상품으로, 농산물·식품·목재 등 자연에서 얻어지는 원자재. 금·석유 같은 광물이나 에너지 원자재와 구분하여 쓰는 말이에요.\n농산물 선물 거래: 농산물을 미래 일정 시점에 정해진 가격으로 거래하기로 계약하는 금융 상품. 농민, 유통업자, 투자자 등 다양한 참여자들이 가격 변동 리스크를 줄이거나 이익을 추구하기 위해 활용해요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "커피값 왜 이렇게 비싸질까? 이상기후 엘니뇨, 라니냐의 숨겨진 이야기",
        "contentSnippet": "커피값 왜 이렇게 비싸질까? 이상기후 엘니뇨, 라니냐의 숨겨진 이야기",
        "guid": "https://blog.toss.im/article/economic-terms-41-elnino-lanina",
        "isoDate": "2024-12-19T02:00:00.000Z"
      },
      {
        "title": "해외여행 갈 때 토스로 얼굴 인증하고, 가장 빠르게 출국하세요",
        "link": "https://blog.toss.im/article/toss-smartpass",
        "pubDate": "Mon, 16 Dec 2024 02:16:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}해외여행 갈 때 인천공항에서 출국장에 들어가기 위해 30~40분씩 줄 섰던 경험이 있나요? 휴가철이나 명절 연휴 때 여행을 떠나셨던 분들은 특히 공감하실텐데요.\n이렇게 오래 기다리는 줄이 생긴 이유는, 출국장에 들어가려면 탑승객의 얼굴과 여권 사진이 같은지, 제대로 발급된 탑승권을 소지하고 있는지 출국 심사관이 한 명 한 명 확인하는 과정을 거치기 때문이에요.\n이렇게 긴 줄을 기다리기 지친 분들을 위해 마련된 서비스가 있습니다. 바로 안면인식 출국 서비스 ‘스마트패스’ 인데요.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}스마트패스는 여권 정보, 내 얼굴 정보, 탑승권 등을 미리 등록해 심사관의 확인 없이 얼굴만 인증하고 바로 출국장에 들어갈 수 있게 해줍니다. 스마트패스 전용 줄이 아예 따로 있기 때문에, 훨씬 더 빠르게 입장할 수 있어요.\n인천공항 출국장 긴 줄에서 벗어나고 싶으신 분들을 위해 준비했습니다. 해외여행을 앞두고 계신 분들이라면 미리 토스 앱에서 스마트패스 등록하고, 1분 1초가 소중한 공항에서의 시간을 아껴보세요. (지금 당장 여행 계획이 없더라도 얼굴 정보를 등록해두면 나중에 다시 등록할 필요 없으니, 미리 하시는 것도 추천드려요.)\n\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}토스로 스마트패스 가입하고 빠르게 출국할 수 있어요\n이미 토스 앱을 사용하고 있다면, 스마트패스 앱을 추가로 설치할 필요 없이 토스에 바로 등록해 스마트패스 이용이 가능합니다.\n토스 앱에 스마트패스 등록하면, 인천공항에서 가장 빨리 출국할 수 있어요. 여권, 탑승권 검사 없이 얼굴만 인증하면 되고, 스마트패스 전용 줄로 일반 줄보다 빨리 들어갈 수 있거든요.\n스마트패스 쉽게 이용하려면 토스 앱에서 미리 준비하세요.\n1. 얼굴 인증하고\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n2. 실제 여권 촬영하고\n\n3. 탑승권 등록하면 끝!\n.css-1lvcgm8{padding:22px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border-radius:20px;}\n.css-13ko30i{width:375px;}출국 전 미리 스마트패스 등록하기\n\n스마트패스, 이렇게 이용해보세요\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n인천공항 출국장과 탑승구에서 사용할 수 있어요.\n출국장에서는 제1여객터미널의 2~5번 출국장과 제2여객터미널의 모든 출국장에 스마트패스 전용 줄이 있어요.\n대한항공, 아시아나항공, 델타항공, 제주항공, 진에어, 티웨이항공 등 일부 항공사의 특정 게이트를 이용할 때만 사용할 수 있어, 출발 전 미리 확인하면 좋아요.\n토스 앱에는 스마트패스 외에도 해외여행자들을 위해 다양한 서비스가 준비되어 있어요. 해외여행자 보험, eSIM 무료 쿠폰, 토스뱅크 외화통장 환전, 42개국 해외결제 등 공항 출국부터 여행지에서의 편안한 결제 경험까지. 외국에서도 쉬운 금융 생활, 토스가 만들어 드릴게요.\n\n\n자주 묻는 질문\nQ. 스마트패스 등록이 잘 안 돼요.\nA. 토스 고객센터로 연락주세요. 얼굴 등록, 여권 등록, 탑승권 등록 중 어느 단계에서 어려움을 겪고 계신지 알려주시면 도움 드리겠습니다.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n토스 고객센터 연락하기\n\n전화번호: 1599-4905\n이메일 주소: .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}support@toss.im\n카카오톡: https://pf.kakao.com/_xjqwRV\n홈페이지: https://support.toss.im\n\n\nQ. 스마트패스 등록을 했는데 입장이 안 돼요.\nA. 입장은 인천국제공항공사에서 관리해요. ICN SMARTPASS 앱에서 더보기 > 스마트패스 ID 관리 > 상세 정보 > 사진 재등록을 통해 다시 등록한 뒤 이용해주세요.\nQ. 어린이도 쓸 수 있나요?\nA. 만 7세 이상 만 14세 미만 아동은 법정대리인(보호자)의 동의를 받아, 본인 휴대폰에 설치된 토스 앱에서 등록할 수 있어요. 만 7세 미만은 아쉽지만 사용이 어려워요.\nQ. 외국인도 쓸 수 있나요?\nA. 토스 앱을 사용하고 본인 명의의 여권을 가진 외국인은 누구나 이용할 수 있어요.\nQ. 본인명의 휴대폰으로만 쓸 수 있나요?\nA. 네, 토스 앱을 사용하는 본인 계정으로 본인의 스마트패스만 등록해 사용할 수 있어요.",
        "content": "안면인식 출국 서비스 스마트패스, 토스 앱에서 쉽고 빠르게 이용할 수 있어요.",
        "contentSnippet": "안면인식 출국 서비스 스마트패스, 토스 앱에서 쉽고 빠르게 이용할 수 있어요.",
        "guid": "https://blog.toss.im/article/toss-smartpass",
        "isoDate": "2024-12-16T02:16:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]