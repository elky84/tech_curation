[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Diff Authoring Time: Measuring developer productivity at Meta",
        "link": "https://engineering.fb.com/2024/10/25/developer-tools/diff-authoring-time-dat-measuring-developer-productivity-meta/",
        "pubDate": "Fri, 25 Oct 2024 16:32:59 +0000",
        "content:encodedSnippet": "At Meta, we’re always looking for ways to enhance the productivity of our engineers and developers. But how exactly do you measure developer productivity?\nOn this episode of the Meta Tech Podcast Pascal Hartig (@passy) sits down with Sarita and Moritz, two engineers at Meta who have been working on Diff Authoring Time (DAT) – a method for measuring how long it takes to submit changes to a codebase.\nThey talk about the challenges of measuring productivity, how DAT is implemented, and the new abilities it unlocks for developers.\nDownload or listen to the podcast episode below:\n\nSpotify\nApple Podcasts\nPocket Casts\nOvercast\nThe Meta Tech Podcast is a podcast, brought to you by Meta, where we highlight the work Meta’s engineers are doing at every level – from low-level frameworks to end-user features.\nSend us feedback on Instagram, Threads, or X.\nAnd if you’re interested in learning more about career opportunities at Meta visit the Meta Careers page.\nThe post Diff Authoring Time: Measuring developer productivity at Meta appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>At Meta, we’re always looking for ways to enhance the productivity of our engineers and developers. But how exactly do you measure developer productivity? On this episode of the Meta Tech Podcast Pascal Hartig (@passy) sits down with Sarita and Moritz, two engineers at Meta who have been working on Diff Authoring Time (DAT) – a [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/10/25/developer-tools/diff-authoring-time-dat-measuring-developer-productivity-meta/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/10/25/developer-tools/diff-authoring-time-dat-measuring-developer-productivity-meta/\">Diff Authoring Time: Measuring developer productivity at Meta</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "At Meta, we’re always looking for ways to enhance the productivity of our engineers and developers. But how exactly do you measure developer productivity? On this episode of the Meta Tech Podcast Pascal Hartig (@passy) sits down with Sarita and Moritz, two engineers at Meta who have been working on Diff Authoring Time (DAT) – a [...]\nRead More...\nThe post Diff Authoring Time: Measuring developer productivity at Meta appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21928",
        "categories": [
          "Culture",
          "DevInfra",
          "Meta Tech Podcast"
        ],
        "isoDate": "2024-10-25T16:32:59.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2024.3 Beta Is Out!",
        "link": "https://blog.jetbrains.com/idea/2024/10/intellij-idea-2024-3-beta/",
        "pubDate": "Wed, 30 Oct 2024 16:02:54 +0000",
        "content:encodedSnippet": "The Beta version of IntelliJ IDEA 2024.3 is now available with all the key improvements and new features coming in the major release. \n\n\n\n\nYou can download the latest build from our website, from the free Toolbox App, or by using snaps for Ubuntu.\nDownload IntelliJ IDEA 2024.3 Beta\nTo see the most notable updates from this development cycle, check out our blog posts tagged with IntelliJ IDEA 2024.3 EAP. Here’s a short summary of what you’ll find: \nLogical code structure in the Structure tool window \nImproved application debugging in Kubernetes\nCluster-wide Kubernetes log access\nStable Kotlin K2 mode \nAI Assistant updates \nExpanded Docker Compose support\nImproved workflows with Dev Containers\nEnhanced terminal experience\nUpdates for OpenTofu and Terraform\nBetter integration with version control systems\nNew features for debugging and profiling applications\nMultiple UI/UX improvements across the IDE\n\n\n\n\nFor the full list of changes implemented in this build, refer to the release notes.\nAs we finalize everything for the major release, you still have a few weeks to try out these features and help us refine the final version. Share your feedback in the comments, on X, or by submitting any issues to our tracker.\nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "The Beta version of IntelliJ IDEA 2024.3 is now available with all the key improvements and new features coming in the major release.&#160; You can download the latest build from our website, from the free Toolbox App, or by using snaps for Ubuntu. Download IntelliJ IDEA 2024.3 Beta To see the most notable updates from [&#8230;]",
        "contentSnippet": "The Beta version of IntelliJ IDEA 2024.3 is now available with all the key improvements and new features coming in the major release.  You can download the latest build from our website, from the free Toolbox App, or by using snaps for Ubuntu. Download IntelliJ IDEA 2024.3 Beta To see the most notable updates from […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=521805",
        "categories": [
          "eap",
          "2024-3-eap",
          "intellij-idea",
          "intellij-idea-2024-3",
          "intellij-idea-2024-3-eap"
        ],
        "isoDate": "2024-10-30T16:02:54.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "Smooth Parameter Replacement | TeamCity Pipelines Pulse #8",
        "link": "https://blog.jetbrains.com/teamcity/2024/10/smooth-parameter-replacement-feature-teamcity-pipelines-pulse-8/",
        "pubDate": "Wed, 30 Oct 2024 15:36:45 +0000",
        "content:encodedSnippet": "We’re excited to bring you an update on our  smooth parameter replacement feature. It’s already made parameter replacement easier, and now we’re taking it even further with some key improvements.\nIn this iteration, we’re rolling out the smooth parameter replacement feature to more areas. You’ll now find it in almost all runner fields except for Docker autocompletion.\n\n\n\n\nWe’re also bringing it to pipeline settings and job artifacts for a smoother experience, while expanding the API’s parameter suggestions and improving context sensitivity in both the UI and the API. In short, setting up your pipeline will be even easier and more intuitive.\nIn the next iteration, we’re planning to tackle some more complex areas, such as Docker autocompletion and fields like passwords. We’re also aiming to improve API search accuracy to make parameter replacement even smoother. Stay tuned!\nBug fixes and improvements\nDownloading artifacts from the Pipeline page no longer results in a Requested module (build configuration) does not exist error. Now, downloading your artifacts, whether the whole archive or individual files, works as expected.\n\n\n\n\nThe dropdown tooltip for smooth parameter replacement has the correct width and is no longer squashed into a small narrow box.\n\n\n\n\nWe’ve streamlined the process of setting up self-hosted agents by checking Java compatibility right from the start. Now, the script instantly verifies that JAVA_HOME or JRE_HOME is set to the correct version (between 8 and 18), saving you time and avoiding setup delays.\n\n\n\n\nWe’ve improved the permissions system so that users with viewer access can now clearly see a warning message when trying to access a pipeline they don’t have permission to view.\nDid you know?\nWe sat down with Nana Janashia, the mastermind behind the largest DevOps YouTube channel – TechWorld with Nana – to talk about her career in DevOps and how it started. Nana also gave TeamCity Pipelines a try. \nWatch as Nana tries out the tool for the first time and shares her candid thoughts on its features, its ease of use, and how it compares to the competition.\n\n\n\n\n\n\nThat’s it for now!\nAs always, feel free to get in touch with us if you have any questions. Happy building!",
        "dc:creator": "Olga Bedrina",
        "content": "We’re excited to bring you an update on our&#160; smooth parameter replacement feature. It&#8217;s already made parameter replacement easier, and now we&#8217;re taking it even further with some key improvements. In this iteration, we’re rolling out the smooth parameter replacement feature to more areas. You’ll now find it in almost all runner fields except for [&#8230;]",
        "contentSnippet": "We’re excited to bring you an update on our  smooth parameter replacement feature. It’s already made parameter replacement easier, and now we’re taking it even further with some key improvements. In this iteration, we’re rolling out the smooth parameter replacement feature to more areas. You’ll now find it in almost all runner fields except for […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=521923",
        "categories": [
          "newsletter",
          "teamcity-pipelines-pulse"
        ],
        "isoDate": "2024-10-30T15:36:45.000Z"
      },
      {
        "creator": "Helen Scott",
        "title": "Data Exploration With pandas",
        "link": "https://blog.jetbrains.com/pycharm/2024/10/data-exploration-with-pandas/",
        "pubDate": "Tue, 29 Oct 2024 15:47:18 +0000",
        "content:encodedSnippet": "Maybe you’ve heard complicated-sounding phrases such as ‘“Students t-test”, “regression models”, “support vector machines”, and so on. You might think there’s so much you need to learn before you can explore and understand your data, but I am going to show you two tools to help you go faster. These are summary statistics and graphs.\nSummary statistics and graphs/plots are used by new and experienced data scientists alike, making them the perfect building blocks for exploring data.\nWe will be working with this dataset available from Kaggle if you’d like to follow along. I chose this dataset because it has several interesting properties, such as multiple continuous and categorical variables, missing data, and a variety of distributions and skews. I’ll explain each variable I work with and why I chose each one to show you the tools you can apply to your chosen data set.\nIn our previous blog posts, we looked at where to get data from and bring that data into PyCharm. You can look at steps 1 and 2 from our blog post entitled 7 ways to use Jupyter notebooks in PyCharm to create a new Jupyter notebook and import your data as a CSV file if you need a reminder. You can use the dataset I linked above or pick your own for this walkthrough.\nWe’re going to be using the pandas library in this blog post, so to ensure we’re all on the same page, your code should look something like the following block in a Jupyter notebook –  you’ll need to change the spreadsheet name and location to yours, though. Make sure you’ve imported matplotlib, too, as we will be using that library to explore our data.\nimport pandas as pd\nimport matplotlib as plt\n\n\ndf = pd.read_csv('../data/AmesHousing.csv')\ndf\nWhen you run that cell, PyCharm will show you your DataFrame, and we can get started.\n      \n        Try PyCharm Professional for free\n    \n\n\n\n\nSummary statistics\nWhen we looked at where to get data from, we discussed continuous and categorical variables. We can use Jupyter notebooks inside PyCharm to generate different summary statistics for these, and, as you might have already guessed, the summary statistics differ depending on whether the variables are continuous or categorical.\nContinuous variables summary statistics\nFirst, let’s see how we can view our summary statistics. Click on the small bar graph icon on the right-hand side of your DataFrame and select Compact:\n\n\n\n\nLet me give you a little tip here if you’re unsure which variables are continuous and which are categorical, PyCharm shows different summary statistics for each one. The ones with the mini graphs (blue in this screenshot) are continuous, and those without are categorical.\nThis data set has several continuous variables, such as Order, PID, MS SubClass, and more, but we will focus on Lot Frontage first. That is the amount of space at the front of the property.\nThe summary statistics already give us some clues:\n\n\n\n\nThere’s a lot of data here, so let’s break it down and explore it to understand it better. Immediately, we can see that we have missing data for this variable; that’s something we want to note, as it might mean we have some issues with the dataset, although we won’t go into that in this blog post!\nFirst, you can see the little histogram in blue in my screenshot, which tells us that we have a positive skew in our data because the data tails off to the right. We can further confirm this with the data because the mean is slightly larger than the median. That’s not entirely surprising, given we’d expect the majority of lot frontages to be of a similar size, but perhaps there are a small number of luxury properties with much bigger lot frontages that are skewing our data. Given this skew, we would be well advised not to use the standard deviation as a measure of dispersion because that is calculated by using all data points, so it’s affected by outliers, which we know we have on one side of our distribution.\nNext, we can calculate our interquartile range as the difference between our 25th percentile of 58.0 and our 75th percentile of 80.0, giving us an interquartile range of 22.0. Alongside the interquartile range, it’s helpful to consider the median, the middle value in our data, and unlike the mean, it is not based on every data point. The median is more appropriate for Lot Frontage than the mean because it’s not affected by the outliers we know we have.\nSince we’re talking about the median and interquartile range, it is worth saying that box plots are a great way to represent these values visually. We can ask JetBrains AI Assistant to create one for us with a prompt such as this:\nCreate code using matplotlib for a box plot for  ‘Lot Frontage’. Assume we have all necessary imports and the data exists.\nHere’s the code that was generated:\nplt.figure(figsize=(10, 6))\nplt.boxplot(df['Lot Frontage'].dropna(), vert=False)\nplt.title('Box Plot of Lot Frontage')\nplt.xlabel('Lot Frontage')\nplt.show()\nWhen I click Accept and run, we get our box plot:\n\n\n\n\nThe median is the line inside the box, which, as you can see, is slightly to the left, confirming the presence of the positive or right-hand skew. The box plot also makes it very easy to see a noticeable number of outliers to the right of the box, known as “the tail”. That’s the small number of likely luxury properties that we suspect we have.\nIt’s important to note that coupling the mean and standard deviation or the median and IQR gives you two pieces of information for that data: a central tendency and the variance. For determining the central tendency, the mean is more prone to being affected by outliers, so it is best when there is no skew in your data, whereas the median is more robust in that regard. Likewise, for the variation, the standard deviation can be affected by outliers in your data. In contrast, the interquartile range will always tell you the distribution of the middle 50% of your data. Your goals determine which measurements you want to use. \nCategorical variables summary statistics\nWhen it comes to categorical variables in your data, you can use the summary statistics in PyCharm to find patterns. At this point, we need to be clear that we’re talking about descriptive rather than inferential statistics. That means we can see patterns, but we don’t know if they are significant.\nSome examples of categorical data in this data set include MS Zoning, Lot Shape, and House Style. You can gain lots of insights just by looking through your data set. For example, looking at the categorical variable Neighborhood, the majority are stated as Other in the summary statistics with 75.8%. This tells you that there might well be a lot of categories in Neighborhood, which is something to bear in mind when we move on to graphs. \nAs another example, the categorical variable House Style states that about 50% of the houses are one-story, while 30% are two-story, leaving 20% that fall into some other category that you might want to explore in more detail. You can ask JetBrains AI for help here with a prompt like:\nWrite pandas code that tells me all the categories for ‘House Style’ in my DataFrame ‘df’, which already exists. Assume we have all the necessary imports and that the data exists.\nHere’s the resulting code:\nunique_house_styles = df['House Style'].unique()\n\n\nprint(\"Unique categories for 'House Style':\")\nprint(unique_house_styles)\nWhen we run that we can see that the remaining 20% is split between various codes that we might want to research more to understand what they mean:\nUnique categories for ‘House Style’:\n['1Story' '2Story' '1.5Fin' 'SFoyer' 'SLvl' '2.5Unf' '1.5Unf' '2.5Fin']\nHave a look through the data set at your categorical variables and see what insights you can gain!\nBefore we move on to graphs, I want to touch on one more piece of functionality inside PyCharm that you can use to access your summary statistics called Explain DataFrame. You can access it by clicking on the purple AI icon on the top-right of the DataFrame and then choosing AI Actions | Explain DataFrame.\n\n\n\n\nJetBrains AI lists out your summary statistics but may also add some code snippets that are helpful for you to get your data journey started, such as how to drop missing values, filter rows based on a condition, select specific columns, as well as group and aggregate data. \nGraphs\nGraphs or plots are a way of quickly getting patterns to pop out at you that might not be obvious when you’re looking at the numbers in the summary statistics. We’re going to look at some of the plots you can get PyCharm to generate to help you explore your data.\nFirst, let’s revisit our continuous variable, Lot Frontage. We already learned that we have a positive or right-hand skew from the mini histogram in the summary statistics, but we want to know more! \nIn your DataFrame in PyCharm, click the Chart View icon on the left-hand side:\n\n\n\n\nNow click the cog on the right-hand side of the chart that says Show series settings and select the Histogram plot icon on the far right-hand side. Click x to clear the values in the X axis and Y axis and then select Lot Frontage with group and sort for the X axis and Lot Frontage with count for the Y axis:\n\n\n\n\nPyCharm generates the same histogram as you see in the summary settings, but we didn’t have to write a single line of code. We can also explore the histogram and mouse over data points to learn more. \nLet’s take it to the next level while we’re here. Perhaps we want to see if the condition of the property, as captured by the Overall Cond variable, predicts the sale price.\nChange your X axis SalePrice group and sort and your Y axis to SalePrice count and then add the group Overall Cond:\n\n\n\n\nLooking at this chart, we can hypothesize that the overall condition of the property is indeed a predictor of the sale price, as the distribution and skew are remarkably similar. One small note is that grouping histograms like this works best when you have a smaller number of categories. If you change Groups to Neighborhood, which we know has many more categories, it becomes much harder to view! \nMoving on, let’s stick with PyCharm’s plotting capabilities and explore bar graphs. These are a companion to frequency charts such as histograms, but can also be used for categorical data. Perhaps you are interested in Neighbourhood (a categorical variable) in relation to SalesPrice.\nClick the Bar [chart] icon on the left-hand side of your series setting, then select Neighbourhood as Categories and SalesPrice with the median as the Values:\n\n\n\n\nThis helps us understand the neighborhoods with the most expensive and cheapest housing. I chose the median for the SalesPrice as it’s less susceptible to outliers in the data. For example, I can see that housing in Mitchel is likely to be substantially cheaper than in NoRidge. \nLine plots are another useful plot for your toolkit. You can use these to demonstrate trends between continuous variables over a period of time. For example, select the Line [graph] icon and then choose Year Built as the X axis and SalePrice with the mean as the Y axis:\n\n\n\n\nThis suggests a small positive correlation between the year the house was built and the price of the house, especially after 1950. If you’re feeling adventurous, remove the mean from SalePrice and see how your graph changes when it has to plot every single price! \nThe last plot I’d like to draw your attention to is scatter plots. These are a great way to see a relationship between two continuous variables and any correlation between them. A correlation shows the strength of a relationship between two variables. To dig deeper, check out this beginner-friendly overview from Real Python.\nFor example, if we set our X axis to SalePrice and our Y axis to Gr LivArea, we can see that there is a positive correlation between the two variables, and we can also easily spot some outliers in our data, including a couple of houses with a lower sale price but a huge living area!\n\n\n\n\nSummary\nHere’s a reminder of what we’ve covered today. You can access your summary statistics in PyCharm either through Explain DataFrame with JetBrains AI or by clicking on the small graph icon on the right-hand side of a DataFrame called Column statistics and then selecting Compact. You can also use Detailed to get even more information than we’ve covered in this blog post. \nYou can get PyCharm to create graphs to explore your data and create hypotheses for further investigation. Some more commonly used ones are histograms, bar charts, line graphs, and scatter plots.\nFinally, you can use JetBrains AI Assistant to generate code with natural language prompts in the AI tool window. This is a quick way to learn more about your data and start thinking about the insights on offer.\nDownload PyCharm Professional to try it out for yourself! Get an extended trial today and experience the difference PyCharm Professional can make in your data science endeavors. Use the promotion code “PyCharmNotebooks” at checkout to activate your free 60-day subscription to PyCharm Professional. The free subscription is available for individual users only.\n      \n        Try PyCharm Professional for free\n    \n\n\n\n\nUsing both summary statistics and graphs in PyCharm, we can learn a lot about our data, giving us a solid foundation for our next step – cleaning our data, which we will talk about in the next blog post in this series.",
        "dc:creator": "Helen Scott",
        "content": "Maybe you’ve heard complicated-sounding phrases such as ‘“Students t-test”, “regression models”, “support vector machines”, and so on. You might think there’s so much you need to learn before you can explore and understand your data, but I am going to show you two tools to help you go faster. These are summary statistics and graphs. [&#8230;]",
        "contentSnippet": "Maybe you’ve heard complicated-sounding phrases such as ‘“Students t-test”, “regression models”, “support vector machines”, and so on. You might think there’s so much you need to learn before you can explore and understand your data, but I am going to show you two tools to help you go faster. These are summary statistics and graphs. […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=520479",
        "categories": [
          "data-science",
          "dataframe",
          "pandas",
          "pandas-dataframes"
        ],
        "isoDate": "2024-10-29T15:47:18.000Z"
      },
      {
        "creator": "Siva Katamreddy",
        "title": "How to Build a CRUD REST API Using Spring Boot",
        "link": "https://blog.jetbrains.com/idea/2024/10/how-to-build-a-crud-rest-api-using-spring-boot/",
        "pubDate": "Tue, 29 Oct 2024 09:42:10 +0000",
        "content:encodedSnippet": "Spring Boot is an application framework for the Java platform designed to make it easy to build Spring-powered applications. Its opinionated convention-over-configuration approach to building Spring applications improves developer productivity.\nIntelliJ IDEA provides extensive coding assistance for Spring, including a dedicated project wizard, code highlighting, intelligent context actions, embedded documentation, navigation, and highly customizable run configurations. For a detailed description of the supported features, refer to IntelliJ IDEA for Spring Developers.\nWe are going to build a REST API to manage bookmarks using Spring Boot and PostgreSQL database by implementing CRUD (Create, Read, Update, Delete) API endpoints.\nIn this article, we are going to cover the following:\nCreate a Spring Boot project from IntelliJ IDEA\nRun a PostgreSQL database instance\nConnect to the database using IntelliJ IDEA’s database tools support\nDatabase setup using an SQL script\nGenerate entities from the database\nCreate a Spring Data JPA repository\nAdd custom finder methods to the repository\nUsing Spring Data JPA projection\nInvoke the repository methods using the JPA console\nImplement API endpoint handler methods\nTest API endpoints using the HTTP Client\nWhile building the CRUD REST API using Spring Boot, we are going to use various features offered by IntelliJ IDEA Ultimate. If you haven’t already installed it, please download and install IntelliJ IDEA Ultimate.\nDownload IntelliJ IDEA\nIf you are using IntelliJ IDEA Community Edition, you can manually create the classes using the code snippets in this article.\nCreate a Spring Boot project\nLet’s start with creating a new Spring Boot project. When you open the IntelliJ IDEA New Project wizard, you can see there is dedicated support for creating Spring Boot projects.\nSelect Java as the language and provide values for Group, Artifact, and Package name. We are going to use Gradle – Groovy as the build tool in this article, but you can choose other alternatives if you prefer. We are going to use Java 21 and Jar packaging.\n\n\n\n\nClick Next, select the following dependencies, and then click the Create button.\nSpring Web\nValidation\nSpring Data JPA\nPostgreSQL Driver\n\n\n\n\nNow, the project will be created and opened in the IDE.\nRun a PostgreSQL database instance\nWe need a PostgreSQL database instance for running our application. You can download and install the PostgreSQL database from https://www.postgresql.org/download/. If you have Docker installed, you can use Docker to run a PostgreSQL database container using the following command:\ndocker run -p 5432:5432 \\\n -e POSTGRES_PASSWORD=postgres \\\n -e POSTGRES_USER=postgres \\\n -e POSTGRES_DB=postgres \\\n postgres:17\nThe above command will pull the Docker image postgres:17 from Docker Hub, if not already pulled, start a Postgres container, and map container port 5432 to host port 5432. The username, password, and database values are passed using environment variables. You can check whether Postgres is running by running the docker ps command as follows:\n\n\n\n\nConnect to PostgreSQL using IntelliJ IDEA’s database tools support\nNow that the PostgreSQL database is running, let’s connect to it using IntelliJ IDEA’s database tools support and the following connection parameters:\nHost: localhost\nPort: 5432\nUsername: postgres\nPassword: postgres\nDatabase: postgres\nYou can open the Database tool window either by clicking on the database icon on the right-hand side toolbar or by going to View | Tool Windows | Database.\n\n\n\n\nCreate a new data source of type PostgreSQL by providing the following information:\n\n\n\n\nYou can click on Test Connection to verify whether the database connection can be established successfully or not.\nDatabase setup using an SQL script\nSelect the PostgreSQL datasource from the Database tool window and open the query console. Now, let’s create a database table called bookmarks and then populate some sample data by running the following SQL script:\ncreate sequence bookmark_id_seq start with 1 increment by 50;\n\ncreate table bookmarks\n(\n    id         bigint       not null default nextval('bookmark_id_seq'),\n    title      varchar(200) not null,\n    url        varchar(500) not null,\n    created_at timestamp    not null default now(),\n    updated_at timestamp,\n    primary key (id)\n);\n\ninsert into bookmarks(title, url, created_at) values\n('IntelliJ IDEA documentation', 'https://www.jetbrains.com/help/idea/getting-started.html', '2021-06-26'),\n('IntelliJ IDEA YouTube channel', 'https://www.youtube.com/intellijidea', '2021-10-10'),\n('JetBrains Guide', 'https://www.jetbrains.com/guide/', '2023-12-05'),\n('Java Guide', 'https://www.jetbrains.com/guide/java/', '2024-08-15');\nNow, let’s configure the database connection properties in the src/main/resources/application.properties file as follows:\nspring.datasource.url=jdbc:postgresql://localhost:5432/postgres\nspring.datasource.username=postgres\nspring.datasource.password=postgres\nWhen we start our Spring Boot application, a database connection pool will be created connecting to the configured Postgres database.\nGenerate entities from the database\nJPA (Jakarta Persistence API) is a standard Jakarta EE API for ORM (Object Relational Mapping) frameworks. JPA allows you to map the relational data model with an object model, providing an object-oriented way to work with databases.\nIntelliJ IDEA Ultimate provides support for working with JPA, code assistance, etc. From IntelliJ IDEA, we can generate JPA entities from an existing database schema.\nIntelliJ IDEA provides Reverse Engineering capabilities for generating JPA entities from an existing database out of the box. However, we will use the JPA Buddy plugin, which provides a lot more features that make working with JPA and Spring Data JPA much easier.\nGo to Settings | Plugins | Marketplace, search for “jpa buddy”, and install the JPA Buddy plugin.\nNow, you can generate JPA entities from a database by right-clicking on a Java package in the Project tool window and selecting New | JPA Entities from DB from the context menu.\n\n\n\n\nNow, you will have a Bookmark JPA entity generated as follows:\npackage com.jetbrains.bookmarks;\n\nimport jakarta.persistence.*;\nimport jakarta.validation.constraints.NotNull;\nimport jakarta.validation.constraints.Size;\nimport org.hibernate.annotations.ColumnDefault;\nimport java.time.Instant;\n\n@Entity\n@Table(name = \"bookmarks\")\npublic class Bookmark {\n    @Id\n    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"bookmarks_id_gen\")\n    @SequenceGenerator(name = \"bookmarks_id_gen\", sequenceName = \"bookmark_id_seq\")\n    @Column(name = \"id\", nullable = false)\n    private Long id;\n\n    @Size(max = 200)\n    @NotNull\n    @Column(name = \"title\", nullable = false, length = 200)\n    private String title;\n\n    @Size(max = 500)\n    @NotNull\n    @Column(name = \"url\", nullable = false, length = 500)\n    private String url;\n\n    @NotNull\n    @ColumnDefault(\"now()\")\n    @Column(name = \"created_at\", nullable = false)\n    private Instant createdAt;\n\n    @Column(name = \"updated_at\")\n    private Instant updatedAt;\n\n    // setters & getters\n}\nCreate Spring Data JPA repository\nThe JPA Buddy plugin also makes it easy to create a Spring Data JPA repository for a JPA entity.\nRight-click on a Java package and then select New | Spring Data JPA Repository.\nSelect Bookmark as Entity and click OK.\n\n\n\n\nThe BookmarkRepository will be created as follows:\npackage com.jetbrains.bookmarks;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface BookmarkRepository extends JpaRepository<Bookmark, Long> {\n}\nTo get all the bookmarks in reverse chronological order of their creation, we can use the inherited findAll(Sort sort) method as follows:\nSort sort = Sort.by(Sort.Direction.DESC, \"createdAt\");\nList<Bookmark> bookmarks = bookmarkRepository.findAll(sort);\nAlternatively, we can also leverage Spring Data JPA’s derived query method feature and create the following method to achieve the same:\npublic interface BookmarkRepository extends JpaRepository<Bookmark, Long> {\n    List<Bookmark> findAllByOrderByCreatedAtDesc();\n}\nWith the findAllByOrderByCreatedAtDesc() method name, Spring Data JPA automatically prepares the SQL query that uses the order by created_at desc clause.\nWhile this works fine, it is not recommended to return JPA entities as HTTP API responses. Instead, we can return Spring Data JPA interface-based projections.\nAssuming we just want to return only the id, title, url, and createdAt fields of Bookmark, we can create a Spring Data JPA projection using the JPA Buddy plugin as follows:\nRight-click on Bookmark.java and select New | Other | Spring Data Projection.\n\n\n\n\nNow, you can change the Projection class name if needed, select the desired fields, and then click OK.\nThe BookmarkInfo.java interface will be generated as follows:\npackage com.jetbrains.bookmarks;\n\nimport java.time.Instant;\n\n/**\n * Projection for {@link Bookmark}\n */\npublic interface BookmarkInfo {\n    Long getId();\n\n    String getTitle();\n\n    String getUrl();\n\n    Instant getCreatedAt();\n}\nNow, let’s update the BookmarkRepository to return the projection as follows:\npublic interface BookmarkRepository extends JpaRepository<Bookmark, Long> {\n    List<BookmarkInfo> findAllByOrderByCreatedAtDesc();\n}\nLet’s also add a method to find a bookmark for the given id as follows:\npackage com.jetbrains.bookmarks;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport java.util.List;\nimport java.util.Optional;\n\npublic interface BookmarkRepository extends JpaRepository<Bookmark, Long> {\n    List<BookmarkInfo> findAllByOrderByCreatedAtDesc();\n\n    Optional<BookmarkInfo> findBookmarkById(Long id);\n}\nWe are returning Optional<BookmarkInfo> because a bookmark with the given id may or may not exist.\nIntelliJ IDEA provides the ability to invoke Spring Data JPA repository methods using the JPA console. So, we can call the repository methods and check whether they are returning the expected result or not.\nClick on the gutter icon to run the query in the JPA console:\n\n\n\n\nIf you are using Gradle, you’ll need to select a persistence unit from the ones available. Select the bookmarks.main Persistence Unit.\nNow, provide inputs to the method if required, and then you’ll see the results as follows:\n\n\n\n\nNOTE: In a typical three-layered architecture, there will be the Web, Service, and Persistence layers. In the Service layer, we usually implement business logic as a unit of work, which might involve multiple database operations, as a transactional operation. In our sample application, as we don’t have any complex business logic, the controller will directly talk to the repository.\nImplement Controller API handler methods\nLet’s implement the API endpoint handlers for performing CRUD operations.\nFirst, let’s create a BookmarkNotFoundException, which we will throw when the requested bookmark is not found.\npackage com.jetbrains.bookmarks;\n\npublic class BookmarkNotFoundException extends RuntimeException {\n    public BookmarkNotFoundException(String message) {\n        super(message);\n    }\n}\nNow, let’s create BookmarkController as follows:\npackage com.jetbrains.bookmarks;\n\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\n@RequestMapping(\"/api/bookmarks\")\nclass BookmarkController {\n    private final BookmarkRepository bookmarkRepository;\n\n    BookmarkController(BookmarkRepository bookmarkRepository) {\n        this.bookmarkRepository = bookmarkRepository;\n    }\n\n    //CRUD API handler methods\n}\nTIP: With IntelliJ IDEA, you don’t need to manually define and inject the dependencies before using them. When you need to use another Spring bean, you can start typing the dependent bean name, and IntelliJ IDEA will show the matching beans. When you select a bean, IntelliJ IDEA will automatically define and autowire the dependent bean using a constructor.\n\n\n\n\nLet’s implement API handler methods to get all bookmarks (GET /api/bookmarks) and get bookmark by id( GET /api/bookmarks/{id}) as follows:\npackage com.jetbrains.bookmarks;\n\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/api/bookmarks\")\npublic class BookmarkController {\n    //...\n\n    @GetMapping\n    List<BookmarkInfo> getBookmarks() {\n        return bookmarkRepository.findAllByOrderByCreatedAtDesc();\n    }\n\n    @GetMapping(\"/{id}\")\n    ResponseEntity<BookmarkInfo> getBookmarkById(@PathVariable Long id) {\n        var bookmark = \n             bookmarkRepository.findBookmarkById(id)\n             .orElseThrow(()-> new BookmarkNotFoundException(\"Bookmark not found\"));\n        return ResponseEntity.ok(bookmark);\n    }\n}\nNOTE: For the GET /api/bookmarks API, we are returning all the bookmarks, but in a real-world application, we would recommend using pagination.\nNext, let’s implement the create bookmark (POST /api/bookmarks) handler method.\npackage com.jetbrains.bookmarks;\n\nimport jakarta.validation.Valid;\nimport jakarta.validation.constraints.NotEmpty;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport org.springframework.web.servlet.support.ServletUriComponentsBuilder;\n\nimport java.time.Instant;\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/api/bookmarks\")\npublic class BookmarkController {\n    //...\n    record CreateBookmarkPayload(\n            @NotEmpty(message = \"Title is required\")\n            String title,\n            @NotEmpty(message = \"Url is required\")\n            String url) {}\n\n    @PostMapping\n    ResponseEntity<Void> createBookmark(\n            @Valid @RequestBody CreateBookmarkPayload payload) {\n        var bookmark = new Bookmark();\n        bookmark.setTitle(payload.title());\n        bookmark.setUrl(payload.url());\n        bookmark.setCreatedAt(Instant.now());\n        var savedBookmark = bookmarkRepository.save(bookmark);\n        var url = ServletUriComponentsBuilder.fromCurrentRequest()\n                .path(\"/{id}\")\n                .build(savedBookmark.getId());\n        return ResponseEntity.created(url).build();\n    }\n}\nWe have created a local record CreateBookmarkPayload to represent the request payload and used the Jakarta Bean Validation API to validate the required fields. If the request payload is valid, then we create the Bookmark object and persist it in the database. Then, we construct the URL for the newly created bookmark and send it as the Location header. If the request payload is invalid, then by default, Spring Boot will handle this error by returning the HTTP status code 400 - BAD_REQUEST with the default error response.\nNext, let’s implement Update (PUT /api/bookmarks/{id}) and delete the bookmark (DELETE /api/bookmarks/{id}) handler methods.\npackage com.jetbrains.bookmarks;\n//imports\n\n@RestController\n@RequestMapping(\"/api/bookmarks\")\npublic class BookmarkController {\n    //...\n    record UpdateBookmarkPayload(\n            @NotEmpty(message = \"Title is required\")\n            String title,\n            @NotEmpty(message = \"Url is required\")\n            String url) {\n    }\n\n    @PutMapping(\"/{id}\")\n    ResponseEntity<Void> updateBookmark(\n            @PathVariable Long id,\n            @Valid @RequestBody UpdateBookmarkPayload payload) {\n        var bookmark =\n              bookmarkRepository.findById(id)\n                .orElseThrow(()-> new BookmarkNotFoundException(\"Bookmark not found\"));\n        bookmark.setTitle(payload.title());\n        bookmark.setUrl(payload.url());\n        bookmark.setUpdatedAt(Instant.now());\n        bookmarkRepository.save(bookmark);\n        return ResponseEntity.noContent().build();\n    }\n\n    @DeleteMapping(\"/{id}\")\n    void deleteBookmark(@PathVariable Long id) {\n        var bookmark =\n             bookmarkRepository.findById(id)\n             .orElseThrow(()-> new BookmarkNotFoundException(\"Bookmark not found\"));\n        bookmarkRepository.delete(bookmark);\n    }\n}\nWe have created a local record UpdateBookmarkPayload to represent the update request payload and used the Jakarta Bean Validation API to validate the required fields. If the request payload is valid, then we try to load the Bookmark object from the database. If the bookmark doesn’t exist, the code will throw a BookmarkNotFoundException. Otherwise, we will update the bookmark data in the database.\nSimilarly, for the delete bookmark API endpoint, we try to delete the bookmark if it exists. Otherwise, a BookmarkNotFoundException is thrown.\nWhen we throw a BookmarkNotFoundException from our handler methods, by default, Spring is going to handle it and return a response with the HTTP status code 500 - INTERNAL_SERVER_ERROR. But when the bookmark is not found, it makes sense to send the 404 - NOT_FOUND status code. So, let’s implement an ExceptionHandler as follows:\npackage com.jetbrains.bookmarks;\n//imports\n\n@RestController\n@RequestMapping(\"/api/bookmarks\")\npublic class BookmarkController {\n    //...\n    \n    @ExceptionHandler(BookmarkNotFoundException.class)\n    ResponseEntity<Void> handle(BookmarkNotFoundException e) {\n        return ResponseEntity.notFound().build();\n    }\n}\nNow, when any handler method in BookmarkController throws a BookmarkNotFoundException, it will be handled by the ExceptionHandler and return the HTTP status code 404 - NOT_FOUND.\nWhen you create a Spring Boot application in IntelliJ IDEA, it automatically creates a Spring Boot run configuration. Now run/debug the application using the BookmarksApplication run configuration, which should start the application on port 8080.\n\n\n\n\nTest API endpoints using the HTTP Client\nIntelliJ IDEA provides a built-in HTTP Client, which we can use to invoke our API endpoints and assert the responses.\nYou can open the HTTP Client by selecting Tools | HTTP Client | Create request in HTTP Client. Alternatively, you can also click on the API gutter icon on the API handler methods in BookmarkController.\n\n\n\n\nIntelliJ IDEA will open a .http file. Once the application is started, you can invoke the GET /api/bookmarks endpoint and assert the response status code as follows:\n### Get all bookmarks\nGET http://localhost:8080/api/bookmarks\n\n> {%\nclient.test(\"Should get bookmarks successfully\", function () {\nclient.assert(response.status === 200, \"Response status is not 200\");\n});\n%}\nYou can click on the Run icon in the gutter to execute the API call.\nSimilarly, you can invoke other API endpoints as follows:\n### Get bookmark by id\nGET http://localhost:8080/api/bookmarks/1\n\n> {%\nclient.test(\"Should get bookmark successfully\", function () {\nclient.assert(response.status === 200, \"Response status is not 200\");\n});\n%}\n\n\n### Create bookmark successfully\nPOST http://localhost:8080/api/bookmarks\nContent-Type: application/json\n\n{\n  \"title\": \"bookmark title\",\n  \"url\": \"https://bookmark.com\"\n}\n\n> {%\nclient.test(\"Should create bookmark successfully\", function () {\nclient.assert(response.status === 201, \"Response status is not 201\");\n});\n%}\nI will leave the rest of the API call invocations as an exercise for you. To learn more about the HTTP Client, you can refer to the documentation or watch The New HTTP Client presentation.\nSummary\nIn this article, we learned how to create a REST API performing CRUD operations using Spring Boot talking to a PostgreSQL database. We have verified whether the application is working as expected or not using the HTTP Client.\nYou can find the complete code in this GitHub repository.\nThe bookmarks application built in this article can also be implemented using Kotlin and IntelliJ IDEA offers the same features for Kotlin as well. You can checkout the Kotlin based implementation of the bookmarks application in kotlin branch of the repository.\nAs we have seen, IntelliJ IDEA Ultimate supports Spring in a way that makes it easy to build Spring Boot applications. Also, the JPA Buddy plugin makes developers more productive while using JPA and Spring Data JPA-based applications.\nDownload IntelliJ IDEA\nTo learn more about JPA Buddy, you can watch this presentation or read the official documentation.",
        "dc:creator": "Siva Katamreddy",
        "content": "Spring Boot is an application framework for the Java platform designed to make it easy to build Spring-powered applications. Its opinionated convention-over-configuration approach to building Spring applications improves developer productivity. IntelliJ IDEA provides extensive coding assistance for Spring, including a dedicated project wizard, code highlighting, intelligent context actions, embedded documentation, navigation, and highly customizable run [&#8230;]",
        "contentSnippet": "Spring Boot is an application framework for the Java platform designed to make it easy to build Spring-powered applications. Its opinionated convention-over-configuration approach to building Spring applications improves developer productivity. IntelliJ IDEA provides extensive coding assistance for Spring, including a dedicated project wizard, code highlighting, intelligent context actions, embedded documentation, navigation, and highly customizable run […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=518890",
        "categories": [
          "idea",
          "java",
          "intellij-idea",
          "jpa",
          "jpabuddy",
          "rest-api",
          "spring-boot",
          "springdata"
        ],
        "isoDate": "2024-10-29T09:42:10.000Z"
      },
      {
        "creator": "Egor Tolstoy",
        "title": "Kotlin Multiplatform Development Roadmap for 2025",
        "link": "https://blog.jetbrains.com/kotlin/2024/10/kotlin-multiplatform-development-roadmap-for-2025/",
        "pubDate": "Mon, 28 Oct 2024 18:52:27 +0000",
        "content:encodedSnippet": "As Kotlin Multiplatform is now firmly established, development teams across the globe – including major companies like Shopify, Forbes, Haier, and Zürcher Kantonalbank – can harness its power in production environments. During Google I/O 2024 in May, Google announced their official support for Kotlin Multiplatform for sharing business logic across Android and iOS. This and other remarkable advancements set a strong foundation for further stabilizing and refining the technology.\nFor 2025, JetBrains is focused on enhancing the Kotlin Multiplatform ecosystem, including upgrading Compose Multiplatform for iOS to Stable, the first public releases of Kotlin-to-Swift export and the all-in-one KMP IDE, as well as other significant improvements to the core technology, tooling, and libraries. Read on to explore our key priorities and goals for the upcoming year.\nAdditionally, we recently updated our Kotlin roadmap to reflect our evolving vision. Be sure to check it out for more insights into our plans.\nCompose Multiplatform\nWe are committed to making Compose Multiplatform a framework that enables developers to create beautiful and performant applications, ensuring a consistent look across all supported platforms. Our primary focus is driving the iOS target to a Stable release, which will also enhance the experience for other targets.\nCurrently, we are concentrating on several key areas:\nJetpack Compose feature parity. We are working to ensure that all core APIs and components are multiplatform. Significant progress has been made, but we still have some remaining elements to address before the Stable release. Our focus is on infrastructural changes that will streamline this process.\niOS rendering performance. We have delivered significant improvements in rendering performance for iOS. Our next steps include implementing benchmarking infrastructure to catch regressions and to ensure that the performance of the framework is transparent to users.\nFeature completeness for core components. We are prioritizing the completion of essential features, including navigation, resource management, accessibility, and internationalization.\nStabilizing the interoperability between Compose and native views is also a key objective.\nGeneral stabilization of the framework. We are committed to improving the overall stability of the framework and enhancing the user experience through Compose Multiplatform Previews.\nDocumentation. Our goal is to provide users with all the resources they need to learn and use Compose Multiplatform in a single place. \nIn addition, for the web target, we are focusing on achieving feature parity with other platforms. This includes implementing drag-and-drop support, improving text input and rendering, and ensuring interoperability with HTML page contents. Compose Multiplatform for Desktop, already used in Android Studio and IntelliJ IDEA codebase, will also benefit from adopting newer APIs from Jetpack Compose, along with continuous performance improvements.\nThrough these initiatives, we aim to make Compose Multiplatform the best choice for building applications, allowing you to support any platform with just a single line of configuration.\nTooling\nWe remain committed to delivering an excellent development experience for Kotlin Multiplatform. Our goal is to reduce the need for developers to switch between different IDEs, offering a seamless and integrated workflow across platforms.\nWe aim to ensure that Kotlin Multiplatform integrates seamlessly with the IDEs commonly used for KMP development, such as IntelliJ IDEA and Android Studio, making it more straightforward to share business logic or UIs.\nWhile we continue to prioritize strong KMP support for all existing platforms, we also believe there’s a place for a dedicated IDE. With this in mind, we are working towards the public release of a standalone KMP IDE. This IDE, based on JetBrains Fleet, will be tailored specifically for Kotlin Multiplatform development, offering an optimized, all-in-one environment. With this release, we focus on mobile scenarios and aim to:\nEnsure that developers no longer need to switch between different IDEs.\nProvide enhanced language support, delivering an equally great experience in both Kotlin and Swift, with a focus on seamless interoperability between the two.\nCreate a unified and simplified workflow that helps developers with experience in either iOS or Android to feel confident and productive when working with both platforms, offering clarity and consistency.\nLooking ahead, we are also exploring new areas to enhance the development experience:\nInvestigating the possibility of building apps for iOS platforms using cloud machines, which could help developers who don’t have access to Apple devices.\nExploring deeper integration with AI tools to assist not only in code generation but also in solving more complex development tasks, improving efficiency across the board.\nKotlin-to-Swift export\nWe are progressing rapidly with the direct Kotlin-to-Swift export. In 2024, we laid the foundation of the architecture and are now iterating to support more Kotlin features. Our current goal for 2025 is to release the first public version. This initial release aims to provide a user experience comparable to the existing Objective-C export, while overcoming the constraints of Objective-C. This will enable broader Swift language support and facilitate more seamless API exporting, paving the way for future improvements that will fully leverage the advantages of exporting to Swift.\nYou can track our progress on YouTrack or join the discussions in the #swift-export channel in our public Slack.\nLibrary ecosystem\nAs the Kotlin Multiplatform ecosystem rapidly expands, ensuring the backward compatibility of libraries becomes crucial. To achieve this, the JetBrains team and library creators must collaborate closely. Here’s what we plan to do:\nImprove the klib format to allow library creators to leverage their knowledge of building JVM libraries.\nImplement the same code-inlining behavior in Kotlin Multiplatform libraries as for the JVM.\nProvide a tool that ensures your multiplatform library public API remains compatible.\nWe’re also looking to improve the publishing process for Kotlin Multiplatform libraries, which includes:\nProviding templates and comprehensive guidelines for creating and publishing KMP libraries.\nStabilizing klib cross-compilation on different platforms.\nLaunching a fully re-designed KMP library publication process.\nSignificantly improving the libraries documentation process.\nEven though Kotlin Multiplatform is now Stable, we’re still planning significant updates. But don’t worry: Libraries built with the current format will still work with newer Kotlin versions.\nSearch for multiplatform libraries on the web\nWe are currently working on simplifying the search process for multiplatform libraries on the web. The library ecosystem is rapidly growing; there are now around 2,500 Kotlin Multiplatform libraries available. However, despite the extensive selection, it can often be challenging for developers to find libraries that meet their specific needs and support their chosen platforms.\nOur goal is to introduce a solution that facilitates the discovery of these libraries and allows developers to try them out easily, enhancing their overall experience within the Kotlin Multiplatform ecosystem. We’ll share more details about this initiative throughout the year, so stay tuned!\nAmper\nAmper, an experimental project configuration and build tool by JetBrains, has received positive feedback from early adopters, along with valuable bug reports, blockers, use cases, and feature requests. We appreciate this input, as it really helps us refine the scope and improve the product.\nIn 2025, we’ll be focusing on making Amper fully suitable for multiplatform mobile app development for Android and iOS, complete with shared Compose Multiplatform UI. This includes:\nRunning and testing applications (locally, on physical devices, and on CI).\nSigning applications and publishing them on Google Play and App Store.\nNumerous IDE features to ensure a smooth and enjoyable experience.\nWe’ll also explore scenarios around server-side development, such as projects that include a backend for the mobile application with shared business logic.\nYou can follow the posts on the Amper blog to keep up-to-date with our latest releases and join the discussion in the #amper channel on the Kotlinlang Slack.\nGradle and other build tools\nAs we look ahead to 2025, our work on Gradle enhancements is outlined in the Kotlin roadmap. Here are some key areas we will be working on:\nSupport for declaring Kotlin Multiplatform dependencies at the project level. This will make it easier for developers to manage their project dependencies effectively.\nImproving integration of the Kotlin/Native toolchain into Gradle.\nImplementing the next-generation distribution format for multiplatform libraries. This initiative can simplify the dependencies model and publication layout for multiplatform libraries, making them easier to use with third-party build tools and reducing complexity for library authors.\nProviding full support for Kotlin Multiplatform in Declarative Gradle. Our work on the Experimental Kotlin Ecosystem Plugin, which supports Declarative Gradle, aims to help developers explore a declarative approach to their Gradle builds.\nWe’re also working on support for Gradle project isolation, publicly available API references for the Kotlin Gradle Plugin, and other initiatives. You can read about our other projects in the detailed Kotlin roadmap document.\nFurther reading\nKotlin roadmap\nCompose Multiplatform 1.7.0\nAmper Update August 2024\nKotlin 2.0.20",
        "dc:creator": "Egor Tolstoy",
        "content": "As Kotlin Multiplatform is now firmly established, development teams across the globe – including major companies like Shopify, Forbes, Haier, and Zürcher Kantonalbank – can harness its power in production environments. During Google I/O 2024 in May, Google announced their official support for Kotlin Multiplatform for sharing business logic across Android and iOS. This and [&#8230;]",
        "contentSnippet": "As Kotlin Multiplatform is now firmly established, development teams across the globe – including major companies like Shopify, Forbes, Haier, and Zürcher Kantonalbank – can harness its power in production environments. During Google I/O 2024 in May, Google announced their official support for Kotlin Multiplatform for sharing business logic across Android and iOS. This and […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=521344",
        "categories": [
          "multiplatform",
          "compose-multiplatform",
          "kotlin-multiplatform",
          "roadmap"
        ],
        "isoDate": "2024-10-28T18:52:27.000Z"
      },
      {
        "creator": "Vladislav Minaev",
        "title": "WebStorm 2024.3 EAP Digest: Improved Navigation and Rename Refactoring for Framework Components, AI-Based Code Completion Updates, and Tailwind Color Preview for CSS Classes",
        "link": "https://blog.jetbrains.com/webstorm/2024/10/webstorm-2024-3-eap/",
        "pubDate": "Mon, 28 Oct 2024 13:06:04 +0000",
        "content:encodedSnippet": "It’s time for the WebStorm 2024.3 EAP digest, which will walk you through the new features and improvements in the upcoming release!\n\n\n\n\nThe Toolbox App is the easiest way to get the EAP builds and keep both your stable and EAP versions up to date. You can also manually download the EAP builds from our website.\nDOWNLOAD WEBSTORM 2024.3 EAP\n\n\n\n\nImportant! WebStorm EAP builds are not fully tested and might be unstable. Please try the latest EAP build and share your feedback with us. You can do so using our issue tracker or by leaving a comment on this blog post.\n\n\n\n\nKey highlights\nImproved navigation and Rename refactoring for framework components\nStarting from version 2024.3, the Show component usages action for Vue, Svelte, and Astro detects component usages both in imports and templates. You can also use this functionality by invoking the Find Usages action on the component file in the Project view:\n\n\n\n\nThe Rename refactoring has been enhanced to include component usages renaming. When renaming a component file or explicitly defined name, the associated usages in templates will also be updated! This behavior can be disabled by toggling the Search for component usages option during the renaming process and in the Find dialog.\nAI Assistant\nImproved AI-based code completion\nIn 2024.3 we are significantly improving AI-driven code completion for JavaScript and TypeScript. The new approach combines fast, local full-line completion with powerful cloud-based suggestions powered by JetBrains’ in-house LLMs. This hybrid approach enhances speed, accuracy, and usability while reducing the frequency of lengthy and irrelevant suggestions.\nHere are some of the key improvements:\nHighlighting is now applied to the suggested code, which previously was just plain gray text.\nPartial acceptance allows you to apply suggestions granularly, giving you more control over changes to your code:\n\nAccept suggestions word by word – ⌥ → / Alt + Right.\nAccept suggestions line by line – ⌘ → / Ctrl + Right.\nAs before, you can explicitly call completion with ⇧ ⌥ / / Shift + Alt.\nWe’ve enhanced context collection using RAG strategies.\nCompletion suggestions are now provided in more locations, and are now triggered during typing, not only on Enter keystrokes.\n\n\n\n\nIn EAP 3, support for AI-based code completion has also been extended to HTML and CSS (including .css, .less, .scss, .sass, .pcss). Please refer to this blog post for more insights.\nInline AI prompts\nYou can now interact with AI Assistant directly in the editor thanks to an experimental inline input feature that detects and processes your requests as you type. This lets you express your intentions in natural language, which AI Assistant instantly interprets and converts into code changes without any extra steps. This feature is currently available for JavaScript and TypeScript:\n\n\n\n\nThe IDE leaves a purple mark in the gutter next to lines added or changed by AI Assistant so you can easily see what has been updated.\nIf you don’t like the initial suggestion, you can generate a new one by pressing Tab. You can also adjust the initial prompt by clicking on the purple block in the gutter or simply pressing Ctrl + / (Windows/Linux) or ⌘/ (macOS).\nPlease note that these improvements are available only when using the AI Assistant plugin.\nColor preview for Tailwind CSS classes\nColor previews for Tailwind CSS classes are now shown inline in the editor. We’ve added support for the textDocument/documentColor method of the Language Server Protocol (LSP), so all LSP-based plugins now support this functionality out of the box.\n\n\n\n\nBun debugger support for Windows\nIn EAP 2, we’ve introduced Bun debugger support for Windows. This update includes program traversal (Step Into, Step Over, and Run to Cursor), expression evaluation, and support for line breakpoints, exceptions, and conditional breakpoints.\nBun debugger support is currently unavailable on WSL. If you would like to see it added, consider voting for WEB-69167.\nCode style options for decorators\nWe have implemented new code style options for decorators in JavaScript and TypeScript. EAP 1 introduces four new items in the Wrapping and Braces subsection of the Code Style settings:\n\n\n\n\nUser experience\nUpdates to Find in Files\nThe Find in Files feature has a new search scope option: Project Files Excluding Git-Ignored. This option excludes any files ignored in .gitignore  from your search results, helping you narrow down the search scope to the relevant parts of your project.\n\n\n\n\nHighlight occurrences of selected text \nBy default, WebStorm will now automatically highlight all instances of the text you select within a file. You can toggle this feature in Settings | Editor | General | Appearance.\n\n\n\n\nOther highlights\nThe Database Tools and SQL plugin is now bundled in the IDE, and its licensing model will be changed in the upcoming major release.\nWebStorm now displays the .idea directory in the Project view by default. You can use the projectView.hide.dot.idea registry option to toggle this behavior (WEB-68009). \nThe Install dependencies notification will now automatically disappear once the required dependencies have been installed via the command line (WEB-65147).\nWe have improved navigation to built-in Nuxt components (WEB-65589, WEB-66625).\nYou can now use nx as the karma package to run unit tests in Nx projects (WEB-58994).\nThat’s it for today. For the full list of improvements introduced throughout the latest 2024.3 EAPs, check out the release notes.\nThe WebStorm team",
        "dc:creator": "Vladislav Minaev",
        "content": "It’s time for the WebStorm 2024.3 EAP digest, which will walk you through the new features and improvements in the upcoming release! The Toolbox App is the easiest way to get the EAP builds and keep both your stable and EAP versions up to date. You can also manually download the EAP builds from our [&#8230;]",
        "contentSnippet": "It’s time for the WebStorm 2024.3 EAP digest, which will walk you through the new features and improvements in the upcoming release! The Toolbox App is the easiest way to get the EAP builds and keep both your stable and EAP versions up to date. You can also manually download the EAP builds from our […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=520855",
        "categories": [
          "eap",
          "webstorm-2024-3"
        ],
        "isoDate": "2024-10-28T13:06:04.000Z"
      },
      {
        "creator": "David Watson",
        "title": "JavaScript Best Practices",
        "link": "https://blog.jetbrains.com/webstorm/2024/10/javascript-best-practices-2024/",
        "pubDate": "Mon, 28 Oct 2024 12:35:46 +0000",
        "content:encodedSnippet": "JavaScript is undoubtedly the most used programming language in the world and is hugely influential on one of the largest technologies we have all come to rely on – the internet. With this power comes great responsibility, and the JavaScript ecosystem has been rapidly evolving, making it incredibly hard to keep up with the latest JavaScript best practices.\nIn this blog post, we will cover several key best practices in modern JavaScript for cleaner, more maintainable, and more performant code. \nProject-defined practices trump all other practices\nThe project where you write code can have its own strict rules. Project rules are more relevant than any suggestion from any best practice article – this one included! If you would like to use a specific practice, make sure to sync it with the project rules and codebase and that everyone on your team is also on board.\nUse up-to-date JavaScript\nJavaScript was invented on December 4, 1995. Since that time, it has been almost endlessly evolving. On the Internet, you can find a lot of outdated suggestions and practices. Be careful and verify if a practice that you would like to use is up to date.\nAlso, be careful when using the very latest JavaScript features. It is better to start using new JavaScript features that have been through at least Ecma TC39 Stage 3.\nThat said, here is a compilation of some of the current common best practices for JavaScript all in one place:\nDeclaring variables \nYou may encounter code that uses many var declarations. This may be on purpose, but if it is old code, it could be because this was the old approach.\nAdvice: Use let and const instead of var to declare your variables. \nWhy it matters: Although var is still available, let and const provide block-scoping, which is more predictable and reduces unexpected errors that can happen when declaring variables with var, which is function-scoped.\nfor (let j = 1; j < 5; j++) {\r\n  console.log(j);\r\n}\r\nconsole.log(j);\r\n// you get 'Uncaught ReferenceError: j is not defined'\r\n\r\n//If we did this using var:\r\nfor (var j = 1; j < 5; j++) {\r\n  console.log(j);\r\n}\r\n// <-- logs the numbers 1 to 4\r\nconsole.log(j);\r\n//You’d get 5 as it still exists outside the loop\r\n\n                \nCopy to clipboard\n\n            \nClasses instead of Function: prototype\nIn many old codebases or articles about OOP in JavaScript, you may run into the function prototype approach for emulation of classes. For example:\nfunction Person(name) {\r\n  this.name = name;\r\n}\r\nPerson.prototype.getName = function () {\r\n  return this.name;\r\n}\r\n\r\nconst p = new Person('A');\r\nconsole.log(p.getName()); // 'A'\r\n\n                \nCopy to clipboard\n\n            \nAdvice: This approach uses constructors to control the prototype chain. However, in such cases, using classes is almost always better.\nclass Person {\r\n  constructor(name) {\r\n    this.name = name;\r\n  }\r\n  getName() {\r\n    return this.name;\r\n  }\r\n}\r\n\r\nconst p = new Person('A');\r\nconsole.log(p.getName()); // 'A'\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: The main reason to use classes is that they have much cleaner syntax.\nPrivate class fields\nIn older JavaScript code, it was common to use an underscore (_) as a convention to denote private properties or methods in classes. However, this doesn't actually enforce privacy – it just serves as a signal to developers that something is meant to be private.\nclass Person {\r\n  constructor(name) {\r\n    this._name = name; // Conventionally treated as private, but not truly private\r\n  }\r\n\r\n\r\n  getName() {\r\n    return this._name;\r\n  }\r\n}\r\n\r\nconst p = new Person('A');\r\nconsole.log(p.getName()); // 'A'\r\nconsole.log(p._name); // 'A' (still accessible from outside)\r\n\n                \nCopy to clipboard\n\n            \nAdvice: When you really need private fields in classes, JavaScript now has real private fields using the # syntax. This is an official language feature that enforces true privacy.\nclass Person {\r\n  #name\r\n  constructor(name) {\r\n    this.#name = name;\r\n  }\r\n  getName() {\r\n    return this.#name\r\n  }\r\n}\r\nconst p = new Person('A');\r\nconsole.log(p.getName()); // 'A'\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: Using real private fields ensures that the data is truly encapsulated, preventing accidental or malicious access from outside the class. The underscore convention only provides a visual cue and can easily be misused, while # private fields guarantee privacy by design. This results in more robust and maintainable code.\nArrow function expressions\nArrow functions are often used to make callback functions or anonymous functions more concise and readable. They are especially useful when working with higher-order functions like map, filter, or reduce.\nconst numbers = [1, 2];\r\n\r\n// Using arrow function\r\nnumbers.map(num => num * 2);\r\n\r\n// Instead of\r\nnumbers.map(function (num) {\r\n  return num * 2;\r\n});\r\n\n                \nCopy to clipboard\n\n            \nAdvice: Arrow functions provide a more concise syntax, especially when the function body is a single expression. They also automatically bind the this context, which can be particularly helpful in class methods where this can easily get lost.\nConsider this example with a class:\nclass Person {\r\n  name = 'A';\r\n\r\n  // Arrow function retains the 'this' context\r\n  getName = () => this.name;\r\n}\r\n\r\nconst getName = new Person().getName;\r\nconsole.log(getName()); // 'A'\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: Arrow functions enhance readability by removing boilerplate code, making callback functions and inline expressions much more concise. In addition, they are particularly valuable when working with classes or event handlers, as they automatically bind this to the surrounding lexical scope. This avoids common bugs related to this in traditional function expressions, especially in asynchronous or callback-heavy code.\nNullish coalescing (??)\nIn JavaScript, developers have often used the logical OR (||) operator to assign default values when a variable is undefined or null. However, this can behave unexpectedly when the variable holds values like 0, false, or an empty string (\"\"), because || treats them as falsy and substitutes the default value.\nFor example:\nconst value = 0;\r\nconst result = value || 10;\r\nconsole.log(result); // 10 (unexpected if 0 is a valid value)\r\n\n                \nCopy to clipboard\n\n            \nAdvice: Use the nullish coalescing operator (??) instead of || when resolving default values. It only checks for null or undefined, leaving other falsy values (like 0, false, \"\") intact.\nconst value = 0;\r\nconst result = value ?? 10;\r\nconsole.log(result); // 0 (expected behavior)\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: The ?? operator provides a more precise way of handling default values in cases where null or undefined should trigger the fallback. It prevents errors caused by using ||, which may unintentionally override valid falsy values. Using nullish coalescing results in more predictable behavior, improving both code clarity and reliability.\nOptional chaining (?.):\nWhen dealing with deeply nested objects or arrays, it's common to have to check whether each property or array element exists before trying to access the next level. Without optional chaining, this requires verbose and repetitive code.\nFor example:\nconst product = {};\r\n\r\n// Without optional chaining\r\nconst tax = (product.price && product.price.tax) ?? undefined;\r\n\n                \nCopy to clipboard\n\n            \nAdvice: The optional chaining operator (?.) simplifies this process by automatically checking if a property or method exists before attempting to access it. If any part of the chain is null or undefined, it will return undefined rather than throwing an error.\nconst product = {};\r\n\r\n// Using optional chaining\r\nconst tax = product?.price?.tax;\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: Optional chaining reduces the amount of boilerplate code and makes it easier to work with deeply nested structures. It ensures your code is cleaner and less error-prone by handling null or undefined values gracefully, without the need for multiple checks. This leads to more readable and maintainable code, especially when working with dynamic data or complex objects.\nasync/await\nIn older JavaScript, handling asynchronous operations often relied on callbacks or chaining promises, which could quickly lead to complex, hard-to-read code. For example, using .then() for promise chaining could make the flow harder to follow, especially with multiple asynchronous operations:\nfunction fetchData() {\r\n  return fetch('https://api.example.com/data')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n}\r\n\n                \nCopy to clipboard\n\n            \nAdvice: Use async and await to make your asynchronous code look more like regular, synchronous code. This improves readability and makes error handling easier with try...catch.\nasync function fetchData() {\r\n  try {\r\n    const response = await fetch('https://api.example.com/data');\r\n    const data = await response.json();\r\n    console.log(data);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: The async/await syntax simplifies working with asynchronous operations by removing the need for chaining .then() and .catch(). It makes your code more readable, more maintainable, and easier to follow, especially when dealing with multiple async calls. Error handling is also more straightforward with try...catch, leading to cleaner and more predictable logic.\nInteraction with object keys and values\nIn older JavaScript code, interacting with the keys and values of an object often involved manual looping with for...in or Object.keys(), followed by accessing values through bracket notation or dot notation. This can lead to verbose and less intuitive code.\nconst obj = { a: 1, b: 2, c: 3 };\r\n\r\n// Older approach with Object.keys()\r\nObject.keys(obj).forEach(key => {\r\n  console.log(key, obj[key]);\r\n});\r\n\n                \nCopy to clipboard\n\n            \nAdvice: Use modern methods such as Object.entries(), Object.values(), and Object.keys() for working with object keys and values. These methods simplify the process and return useful structures like arrays, making your code more concise and easier to work with.\nconst obj = { a: 1, b: 2, c: 3 };\r\n\r\n// Using Object.entries() to iterate over key-value pairs\r\nObject.entries(obj).forEach(([key, value]) => {\r\n  console.log(key, value);\r\n});\r\n\r\n// Using Object.values() to work directly with values\r\nObject.values(obj).forEach(value => {\r\n  console.log(value);\r\n});\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: Using modern object methods such as Object.entries(), Object.values(), and Object.keys() results in cleaner, more readable code. These methods reduce the amount of boilerplate needed for iterating over objects and improve code clarity, especially when dealing with complex or dynamic data structures. They also support easier transformations of objects into other forms (e.g. arrays), making data manipulation more flexible and efficient.\nCheck the array type of a variable\nIn the past, developers used various non-straightforward methods to check if a variable was an array. These included approaches like checking the constructor or using instanceof, but they were often unreliable, especially when dealing with different execution contexts (like iframes).\nconst arr = [1, 2, 3];\r\n// Older approach\r\nconsole.log(arr instanceof Array); // true, but not always reliable across different contexts\r\n\n                \nCopy to clipboard\n\n            \nAdvice: Use the modern Array.isArray() method, which provides a simple and reliable way to check whether a variable is an array. This method works consistently across different environments and execution contexts.\nconst arr = [1, 2, 3];\r\nconsole.log(Array.isArray(arr)); // true\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: Array.isArray() is a clear, readable, and reliable way to check for arrays. It eliminates the need for verbose or error-prone methods like instanceof, ensuring your code handles array detection correctly, even in complex or cross-environment scenarios. This leads to fewer bugs and more predictable behavior when working with different types of data structures.\nMap\nIn earlier JavaScript, developers often used plain objects to map keys to values. However, this approach has limitations, especially when keys are not strings or symbols. Plain objects can only use strings or symbols as keys, so if you need to map non-primitive objects (like arrays or other objects) to values, it becomes cumbersome and error-prone.\nconst obj = {};\r\nconst key = { id: 1 };\r\n\r\n// Trying to use a non-primitive object as a key\r\nobj[key] = 'value';\r\nconsole.log(obj); // Object automatically converts key to a string: '[object Object]: value'\r\n\n                \nCopy to clipboard\n\n            \nAdvice: Use Map when you need to map non-primitive objects or when a more robust data structure is required. Unlike plain objects, Map allows any type of value – primitives and non-primitives alike – as keys.\nconst map = new Map();\r\nconst key = { id: 1 };\r\n\r\n// Using a non-primitive object as a key in a Map\r\nmap.set(key, 'value');\r\nconsole.log(map.get(key)); // 'value'\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: Map is a more flexible and predictable way of associating values with any kind of key, whether primitive or non-primitive. It preserves the type and order of keys, unlike plain objects, which convert keys to strings. This leads to more powerful and efficient handling of key-value pairs, especially when working with complex data or when you need fast lookups in larger collections.\nSymbols for hidden values\nIn JavaScript, objects are typically used to store key-value pairs. However, when you need to add \"hidden\" or unique values to an object without risking name collisions with other properties, or you want to keep them somewhat private from external code, using Symbol can be very helpful. Symbols create unique keys that are not accessible via normal enumeration or accidental property lookup.\nconst obj = { name: 'Alice' };\r\n\r\nconst hiddenKey = Symbol('hidden');\r\nobj[hiddenKey] = 'Secret Value';\r\n\r\nconsole.log(obj.name); // 'Alice'\r\nconsole.log(obj[hiddenKey]); // 'Secret Value'\r\n\n                \nCopy to clipboard\n\n            \nAdvice: Use Symbol when you want to add non-enumerable, hidden properties to an object. Symbols are not accessible during typical object operations like for...in loops or Object.keys(), making them perfect for internal or private data that shouldn’t be exposed accidentally.\nconst obj = { name: 'Alice' };\r\n\r\nconst hiddenKey = Symbol('hidden');\r\nobj[hiddenKey] = 'Secret Value';\r\n\r\nconsole.log(Object.keys(obj)); // ['name'] (Symbol keys won't appear)\r\nconsole.log(Object.getOwnPropertySymbols(obj)); // [Symbol(hidden)] (accessible only if specifically retrieved)\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: Symbols allow you to safely add unique and \"hidden\" properties to objects without worrying about key collisions or exposing internal details to other parts of the codebase. They can be especially useful in libraries or frameworks where you might need to store metadata or internal states without affecting or interfering with other properties. This ensures better encapsulation and reduces the risk of accidental overwrites or misuse.\nCheck Intl API before using extra formatting libraries\nIn the past, developers often relied on third-party libraries for tasks like formatting dates, numbers, and currencies to suit different locales. While these libraries provide powerful functionality, they add extra weight to your project and may duplicate features already built into JavaScript.\n// Using a library for currency formatting\r\nconst amount = 123456.78;\r\n// formatLibrary.formatCurrency(amount, 'USD');\r\n\n                \nCopy to clipboard\n\n            \nAdvice: Before reaching for an external library, consider using the built-in ECMAScript Internationalization API (Intl). It provides robust out-of-the-box functionality for formatting dates, numbers, currencies, and more based on locale. This can often cover most of your internationalization and localization needs without the extra overhead of third-party libraries.\nconst amount = 123456.78;\r\n\r\n// Using Intl.NumberFormat for currency formatting\r\nconst formatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' });\r\nconsole.log(formatter.format(amount)); // $123,456.78\r\n\n                \nCopy to clipboard\n\n            \nYou can also use it for dates:\nconst date = new Date();\r\nconst dateFormatter = new Intl.DateTimeFormat('en-GB', { year: 'numeric', month: 'long', day: 'numeric' });\r\nconsole.log(dateFormatter.format(date)); // \"15 October 2024\"\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: The Intl API provides native and highly optimized support for internationalization, making it unnecessary to import large libraries for simple formatting needs. By using built-in features, you can keep your project lightweight, reduce dependencies, and still offer comprehensive locale-based formatting solutions. This not only improves performance but also reduces the maintenance burden associated with third-party libraries.\nCommon practices\nNow, let’s look at some common practices that should be best practices.\nUse strict equality (===) if possible\nOne of the trickiest and most surprising behaviors in JavaScript comes from the loose equality operator (==). It performs type coercion, which means it tries to convert operands to the same type before comparing them. This can lead to strange and unexpected results, as demonstrated in the famous \"WTFJS\" cases from talks like Brian Leroux's:\nconsole.log([] == ![]); // true (this is surprising!)\r\n\n                \nCopy to clipboard\n\n            \nIn this case, the loose equality operator (==) converts both sides in unexpected ways, leading to unintuitive results.\nAdvice: Whenever possible, use strict equality (===) instead of loose equality (==). Strict equality does not perform type coercion – it compares both value and type directly, which leads to more predictable and reliable behavior.\nconsole.log([] === ![]); // false (as expected)\nCopy to clipboard\n\n            \nHere’s a more typical example to highlight the difference:\n\n\n\n                        \n// Loose equality (==) performs type coercion\r\nconsole.log(0 == ''); // true\r\n\r\n\r\n// Strict equality (===) compares both value and type\r\nconsole.log(0 === ''); // false (as expected)\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: Using strict equality (===) helps avoid the unexpected behavior that comes with type coercion in JavaScript. It makes comparisons more predictable and reduces the risk of subtle bugs, especially when dealing with different data types like numbers, strings, or booleans. It’s a good practice to default to === unless you have a specific reason to use loose equality and understand the implications.\nExplicitly handle expressions in if statements:\nIn JavaScript, the if statement implicitly converts the result of the expression it evaluates into a \"truthy\" or \"falsy\" value. This means that values like 0, \"\" (empty string), null, undefined, and false are all treated as falsy, while most other values (even things like [] or {}) are truthy. This implicit casting can sometimes lead to unexpected results if you’re not careful.\nFor example:\nconst value = 0;\r\n\r\nif (value) {\r\n  console.log('This will not run because 0 is falsy.');\r\n}\nCopy to clipboard\n\n            \nAdvice: It’s a good practice to make the conditions in if statements explicit, especially when the values you're working with might not behave as expected in a truthy/falsy evaluation. This makes the code more predictable and easier to understand.\nFor instance, instead of relying on implicit type coercion:\nconst value = 0;\r\n\r\n// Implicit check (may behave unexpectedly for some values)\r\nif (value) {\r\n  console.log('This won’t run');\r\n}\r\n\n                \nCopy to clipboard\n\n            \nYou can use explicit conditions:\n// Explicitly check for the type or value you expect\r\nif (value !== 0) {\r\n  console.log('This will run only if value is not 0.');\r\n}\r\n\n                \nCopy to clipboard\n\n            \nOr, when checking for null or undefined:\nconst name = null;\r\n\r\nif (name != null) { // Explicitly checking for null or undefined\r\n  console.log('Name is defined');\r\n} else {\r\n  console.log('Name is null or undefined');\r\n}\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: By explicitly defining the conditions in your if statements, you reduce the chances of unexpected behavior from JavaScript’s automatic type coercion. This makes your code clearer and helps prevent bugs when working with potentially ambiguous values like 0, false, null, or \"\". It’s a good practice to be explicit about what conditions you’re checking for, especially in complex logic.\nDon’t use built-in Number for sensitive calculations\nJavaScript's built-in Number type is a floating-point number based on the IEEE 754 standard. While this is efficient for most purposes, it can lead to surprising inaccuracies, particularly with decimal arithmetic. This is not a problem specific to JavaScript, but it can cause serious issues when you're working with sensitive data such as financial calculations.\nFor example, you might encounter this famous floating-point problem:\nconsole.log(0.1 + 0.2); // 0.30000000000000004\nCopy to clipboard\n\n            \nAdvice: When precision is critical – such as in financial calculations – avoid using the standard Number type for arithmetic. Instead, use specialized libraries like decimal.js or big.js that are designed to handle precise decimal calculations without floating-point errors.\nHere’s how it works with a library like decimal.js:\nconst Decimal = require('decimal.js');\r\n\r\nconst result = new Decimal(0.1).plus(0.2);\r\nconsole.log(result.toString()); // '0.3'\r\n\n                \nCopy to clipboard\n\n            \nThese libraries ensure that the calculations are precise and that rounding errors won’t impact the result, making them ideal for sensitive tasks like handling money.\nWhy it matters: Inaccurate calculations can lead to serious issues when working with things like financial data, where even tiny discrepancies matter. JavaScript’s floating-point math can produce unexpected results, and while improvements are being made to the language, for now, it's best to rely on libraries like decimal.js or big.js to ensure precision. By using these libraries, you avoid common pitfalls and ensure that your calculations are accurate, trustworthy, and suitable for critical applications.\nBe careful with JSON and big integers\nJavaScript has limits when it comes to handling very large numbers. The maximum safe integer in JavaScript is 9007199254740991 (also known as Number.MAX_SAFE_INTEGER). Numbers larger than this may lose precision and produce incorrect results. This becomes a problem when working with APIs or systems outside of JavaScript, where big numbers – such as database id fields – can easily exceed JavaScript’s safe range.\nFor example, when parsing JSON with a large number:\nconsole.log(\r\n  JSON.parse('{\"id\": 9007199254740999}')\r\n); \r\n// Output: { id: 9007199254741000 } (Precision lost)\r\n\n                \nCopy to clipboard\n\n            \nAdvice: To avoid this precision issue when dealing with large numbers from JSON data, you can use the reviver parameter of JSON.parse(). This allows you to manually handle specific values – like id fields – and preserve them in a safe format, such as strings.\nconsole.log(\r\n  JSON.parse(\r\n    '{\"id\": 9007199254740999}',\r\n    (key, value, ctx) => {\r\n      if (key === 'id') {\r\n        return ctx.source; // Preserve the original value as a string\r\n      }\r\n      return value;\r\n    }\r\n  )\r\n); \r\n// Output: { id: '9007199254740999' }\r\n\n                \nCopy to clipboard\n\n            \nUsing BigInt: JavaScript introduced BigInt to safely work with numbers larger than Number.MAX_SAFE_INTEGER. However, BigInt cannot be directly serialized to JSON. If you attempt to stringify an object containing BigInt, you’ll get a TypeError:\nconst data = { id: 9007199254740999n };\r\n\r\ntry {\r\n  JSON.stringify(data);\r\n} catch (e) {\r\n  console.log(e.message); // 'Do not know how to serialize a BigInt'\r\n}\r\n\n                \nCopy to clipboard\n\n            \nTo handle this, use the replacer parameter in JSON.stringify() to convert BigInt values to strings:\nconst data = { id: 9007199254740999n };\r\n\r\n\r\nconsole.log(\r\n  JSON.stringify(data, (key, value) => {\r\n    if (typeof value === 'bigint') {\r\n      return value.toString() + 'n'; // Append 'n' to denote BigInt\r\n    }\r\n    return value;\r\n  })\r\n);\r\n// Output: {\"id\":\"9007199254740999n\"}\r\n\n                \nCopy to clipboard\n\n            \n⚠️ Important consideration: If you use these techniques for handling large integers with JSON, ensure that both the client and server sides of your application agree on how to serialize and deserialize the data. For example, if the server sends an id as a string or BigInt with a specific format, the client must be prepared to handle that format during deserialization.\nWhy it matters: JavaScript’s number precision limits can lead to serious bugs when working with large numbers from external systems. By using techniques like BigInt and the reviver/replacer parameters of JSON.parse() and JSON.stringify(), you can ensure that large integers are handled correctly, avoiding data corruption. This is especially important in cases where precision is crucial, such as dealing with large ids or financial transactions.\nUse JSDoc for helping code readers and editors\nWhen working with JavaScript, functions and object signatures often lack documentation, making it harder for other developers (or even your future self) to understand what parameters and objects contain or how a function should be used. Without proper documentation, code can be ambiguous, especially if object structures aren’t clear:\nFor example:\nconst printFullUserName = user =>\r\n  // Does user have the `middleName` or `surName`?\r\n  `${user.firstName} ${user.lastName}`;\r\n\n                \nCopy to clipboard\n\n            \nIn this case, without any documentation, it’s not immediately clear what properties the user object should have. Does user contain middleName? Should surName be used instead of lastName?\nAdvice: By using JSDoc, you can define the expected structure of objects, function parameters, and return types. This makes it easier for code readers to understand the function and also helps code editors provide better autocompletion, type checking, and tooltips.\nHere’s how you can improve the previous example with JSDoc:\n/**\r\n * @typedef {Object} User\r\n * @property {string} firstName\r\n * @property {string} [middleName]  // Optional property\r\n * @property {string} lastName\r\n */\r\n\r\n\r\n/**\r\n * Prints the full name of a user.\r\n * @param {User} user - The user object containing name details.\r\n * @return {string} - The full name of the user.\r\n */\r\nconst printFullUserName = user =>\r\n  `${user.firstName} ${user.middleName ? user.middleName + ' ' : ''}${user.lastName}`;\r\n\n                \nCopy to clipboard\n\n            \nWhy it matters: JSDoc improves the readability and maintainability of your code by clearly indicating what types of values are expected in functions or objects. It also enhances the developer experience by enabling autocompletion and type-checking in many editors and IDEs, such as Visual Studio Code or WebStorm. This reduces the likelihood of bugs and makes it easier for new developers to onboard and understand the code.\nWith JSDoc, editors can provide hints, autocompletion for object properties, and even warn developers when they misuse a function or provide the wrong parameter type, making your code both more understandable and robust.\nUse tests\nAs your codebase grows, manually verifying that new changes don’t break important functionality becomes time-consuming and error-prone. Automated testing helps ensure that your code works as expected and allows you to make changes with confidence.\nIn the JavaScript ecosystem, there are many testing frameworks available, but as of Node.js version 20, you no longer need an external framework to start writing and running tests. Node.js now includes a built-in stable test runner.\nHere’s a simple example using Node.js’s built-in test runner:\nimport { test } from 'node:test';\r\nimport { equal } from 'node:assert';\r\n\r\n\r\n// A simple function to test\r\nconst sum = (a, b) => a + b;\r\n\r\n// Writing a test for the sum function\r\ntest('sum', () => {\r\n  equal(sum(1, 1), 2); // Should return true if 1 + 1 equals 2\r\n});\r\n\n                \nCopy to clipboard\n\n            \nYou can run this test with the following command:\nnode --test\nCopy to clipboard\n\n            \nThis built-in solution simplifies the process of writing and running tests in Node.js environments. You no longer need to configure or install additional tools like Jest or Mocha, though those options are still great for larger projects.\nE2E testing in browsers: For end-to-end (E2E) testing in browsers, Playwright is an excellent tool that allows you to easily automate and test interactions within the browser. With Playwright, you can test user flows, simulate interactions across multiple browsers (such as Chrome, Firefox, and Safari), and ensure that your app behaves as expected from the user’s perspective.\nOther environments: Bun and Deno, two alternative JavaScript runtimes, also provide built-in test runners similar to Node.js, making it easy to write and run tests without extra setup.\nWhy it matters: Writing tests saves time in the long run by catching bugs early and reducing the need for manual testing after every change. It also gives you confidence that the new features or refactoring won’t introduce regressions. The fact that modern runtimes like Node.js, Bun, and Deno include built-in test runners means you can start writing tests right away, with minimal setup. Testing tools like Playwright help ensure your application works seamlessly in real-world browser environments, adding an extra layer of assurance for critical user interactions.\nFinal Thoughts\nThough this may seem like a lot to take in. Hopefully, it has given you insight into some areas that you haven’t otherwise considered and would like to implement into your JavaScript projects. Again, feel free to bookmark this and come back to it anytime you need to refer to it. JavaScript conventions are constantly changing and evolving, as are the frameworks. Keeping up with the latest tools and best practices will continuously improve and optimize your code, but it can be difficult to do. We’d recommend following along with what is going on in the ECMAScript releases, as this often points to new conventions that are then generally adopted in the latest JavaScript code. TC39 usually has proposals for the latest ECMAScript versions, which you can follow along with too.\nBy embracing these modern JavaScript best practices, you’re not just writing code that works – you’re creating cleaner, more efficient, and more maintainable solutions. Whether it’s using newer syntax like async/await, avoiding pitfalls with floating-point numbers, or leveraging the powerful Intl API, these practices will help you stay up-to-date and confident in your codebase. As the JavaScript ecosystem continues to evolve, taking the time to adopt best practices now will save you from future headaches and set you up for long-term success.\nThat’s it for today! We hope that this has been useful – the comments are open for questions, discussions, and sharing advice. Happy coding!",
        "dc:creator": "David Watson",
        "content": "JavaScript is undoubtedly the most used programming language in the world and is hugely influential on one of the largest technologies we have all come to rely on – the internet. With this power comes great responsibility, and the JavaScript ecosystem has been rapidly evolving, making it incredibly hard to keep up with the latest [&#8230;]",
        "contentSnippet": "JavaScript is undoubtedly the most used programming language in the world and is hugely influential on one of the largest technologies we have all come to rely on – the internet. With this power comes great responsibility, and the JavaScript ecosystem has been rapidly evolving, making it incredibly hard to keep up with the latest […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=521408",
        "categories": [
          "all-things-web",
          "tips-tricks",
          "best-practices",
          "javascript",
          "learn-programming",
          "self-learning"
        ],
        "isoDate": "2024-10-28T12:35:46.000Z"
      },
      {
        "creator": "Yegor Naumov",
        "title": "IDE Services Cloud Release and Floating License Server End-of-Life Announcements",
        "link": "https://blog.jetbrains.com/blog/2024/10/25/ide-services-cloud-release-and-floating-license-server-end-of-life-announcements/",
        "pubDate": "Fri, 25 Oct 2024 10:15:40 +0000",
        "content:encodedSnippet": "JetBrains IDE Services, the enterprise suite of products dedicated to improving developer productivity across an entire organization, is now available in the cloud!\nBy offering a JetBrains-managed service, IDE Services Cloud simplifies license management, enhances security, and provides seamless scalability, ensuring that organizations can focus more on development and less on administration.\nAs part of this update, all products under the IDE Services umbrella are now available to customers on a SaaS basis. This includes:\nLicense Vault, a solution to efficiently manage IDE licenses at scale. This service also includes options like pay-as-you-go licenses that let you instantly scale your usage and floating mode, which allows you to reassign any available licenses to other developers in your organization.\nIDE Provisioner, a solution to securely manage IDE and plugin distribution across all your dev teams and propagate presets for developer workplace management that offers higher degrees of both compliance and centralization.\nAI Enterprise, a solution that allows you to have fine-grained control over how JetBrains AI Assistant is used by your developers. This includes the ability to choose a desired LLM provider, connect using your company API keys, and allow or disable access to JetBrains AI Assistant on a per-team and per-developer basis.\nCode With Me Enterprise, a solution that allows you to run real-time, secure, and compliant collaborative programming sessions inside your own organization with access controls that are compatible with your security and compliance practices.\nAll of these products are now available as a managed service by JetBrains. Customers can pick any or all of these products and access them via a single IDE Services control panel. The relevant statistics and analytics data are also available via the IDE Services administrator’s UI, which contains dashboards with usage reports for each module, providing insights into how the service is used within your organization.\n\n\n\n\nSecurity-first approach\nJetBrains has selected AWS as its core cloud provider for IDE Services Cloud. The security, reliability, and scalability of AWS mean that we are confident in offering the service to all of our business and enterprise customers.\n\n\n\n\n\n\n“Our customers trust IDE Services to streamline IDE configuration and support software development teams across their entire organization. We built this platform with enterprise-grade security as a foundational priority, ensuring a reliable and scalable solution for our enterprise customers to take their development teams’ productivity to the next level.”\nErnst Haagsman, Head of Product, JetBrains IDE Services\nTo get started with JetBrains IDE Services Cloud, you can begin by claiming your free 30-day trial here. Alternatively, you can reach out to our Sales team for a demo or to ask any additional questions you might have. You have the choice to use IDE Services for just one product within the suite or multiple products all at once. Trials for additional products can be started independently, either directly from within the product or by sending a request to our Sales team.\nGet Started with IDE Services Cloud\nFloating License Server end of life\nAs part of this update, we are making License Vault our default solution for JetBrains license management. This means that the legacy Floating License Server will be discontinued and taken out of service on December 31, 2025.\nAll customers who are currently using Floating License Server for managing licenses and who wish to continue utilizing floating licensing will need to move to License Vault (part of JetBrains IDE Services) by December 31, 2025. License Vault offers enhanced scalability, pay-as-you-go options, and the ability to reuse licenses efficiently. Simply visit this link to start your free 30-day License Vault Cloud trial, or reach out to our Sales team to request access to an on-premises version of License Vault and more information on the migration options. Alternatively, managing licenses directly through JetBrains Account remains another cost-effective solution.",
        "dc:creator": "Yegor Naumov",
        "content": "JetBrains IDE Services, the enterprise suite of products dedicated to improving developer productivity across an entire organization, is now available in the cloud! By offering a JetBrains-managed service, IDE Services Cloud simplifies license management, enhances security, and provides seamless scalability, ensuring that organizations can focus more on development and less on administration. As part of [&#8230;]",
        "contentSnippet": "JetBrains IDE Services, the enterprise suite of products dedicated to improving developer productivity across an entire organization, is now available in the cloud! By offering a JetBrains-managed service, IDE Services Cloud simplifies license management, enhances security, and provides seamless scalability, ensuring that organizations can focus more on development and less on administration. As part of […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=520491",
        "categories": [
          "news",
          "fls",
          "ide-services",
          "license-server"
        ],
        "isoDate": "2024-10-25T10:15:40.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2024.3 EAP 7: Enhanced AI Assistant for VCS, Debugger Updates, and More",
        "link": "https://blog.jetbrains.com/idea/2024/10/intellij-idea-2024-3-eap-7/",
        "pubDate": "Thu, 24 Oct 2024 16:55:06 +0000",
        "content:encodedSnippet": "We’re back with another set of features and improvements in the latest IntelliJ IDEA 2024.3 Early Access Program build!\nYou can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu.\nAs we start winding down the Early Access Program for 2024.3, now is a great time to try out the new features and share your feedback with us. Check out the previous 2024.3 EAP blog posts and take a look at what’s new in IntelliJ IDEA 2024.3 EAP 7.\nAI Assistant\nPull/merge request title and description generation\nAI Assistant now helps generate accurate titles and descriptions for your pull/merge requests directly from the IDE, streamlining your workflow and ensuring your descriptions are clear and concise.\n\n\n\n\nUser experience\nFloating toolbar for JSON, XML, YAML and SQL files\nWe’ve enabled the floating toolbar for JSON, XML, YAML and SQL files, which makes accessing context-based and AI-driven actions easier. Simply select any code, and the toolbar will appear to display available actions.\n\n\n\n\nProfiler\nHeap memory usage graph\nThe profiler has been enhanced with a heap memory usage graph, which is displayed in the Timeline tab above the thread lanes. This new visualization helps you link memory allocations with thread activity, providing valuable insights that can reveal potential memory leaks and performance bottlenecks.\n\n\n\n\nDebugger\nIntention action to create exception breakpoints\nYou can now set exception breakpoints from the editor. While at the throw or catch site, open the context menu via ⌥↩ on macOS or Alt+Enter on Windows/Linux, then select Enable exception breakpoint. This new feature makes it more convenient to set exception breakpoints without needing to open the Breakpoints dialog or browse the stack trace in the console.\n\n\n\n\nLine execution time hints\nThis new version eliminates the necessity to clutter your code with logs and timers when you want to measure the execution time for a bunch of lines. After invoking the Run to Cursor action – previously only helpful with stepping – you will see the execution times for each line right in the editor’s gutter. For deeper analysis, use the same hints on the gutter to drill down to the called methods, whose respective lines will also be accompanied by the execution time data.\n\n\n\n\nFrameworks and technologies\nUpdate on the workspace feature\nWe are continuing our work on improving workspaces, guided by the massive feedback we received from the blog post and webinar. In this update, we’ve fixed the most frustrating bugs and are focusing on three main areas:\nEnhancing the UX for a smoother workspace experience (e.g. IDEA-359180).\nUpdating the algorithms for working with project settings (e.g. IDEA-353410, IDEA-354174).\nStrengthening VCS integration with particular focus due to its impact across all JetBrains IDEs. We have several tickets under IDEA-359173 to address this.\n\n\n\n\nWhile workspaces will remain a separate plugin in this release, we’re planning to integrate it into IntelliJ IDEA by the next major release – 2025.1. Please keep the feedback coming, and feel free to vote for the issues that matter most to you on YouTrack!\nThat’s all for IntelliJ IDEA 2024.3 EAP 7! For the full list of updates, review the release notes for this build.\nWe’re nearing the final stages of this Early Access Program, so don’t miss the chance to explore these new features and improvements. Your feedback is invaluable and helps us refine the product, so please continue sharing your thoughts in the comments section below or on X. If you encounter any issues, use our issue tracker to report them.\nStay tuned for more updates, and as always, happy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "We’re back with another set of features and improvements in the latest IntelliJ IDEA 2024.3 Early Access Program build! You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. As we start winding down the Early Access Program [&#8230;]",
        "contentSnippet": "We’re back with another set of features and improvements in the latest IntelliJ IDEA 2024.3 Early Access Program build! You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. As we start winding down the Early Access Program […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=520291",
        "categories": [
          "eap",
          "2024-3-eap",
          "intellij-idea-2024-3",
          "intellij-idea-2024-3-eap"
        ],
        "isoDate": "2024-10-24T16:55:06.000Z"
      },
      {
        "creator": "Alexey Totin",
        "title": "Should Your Company Adopt Remote Development?",
        "link": "https://blog.jetbrains.com/codecanvas/2024/10/should-your-company-adopt-remote-development/",
        "pubDate": "Thu, 24 Oct 2024 16:34:18 +0000",
        "content:encodedSnippet": "Adopting remote development is a significant decision for any company. At JetBrains, we talk to many customers about this shift. While we see growing demand, we also encounter many misconceptions about what remote development with cloud development environments (CDEs) can and cannot do.\n1. What problems can you solve with remote development\nBefore diving into whether CDEs make sense for your business, let’s identify the core problems that remote development helps to solve:\nNon-productive time\nMuch development time is wasted on setting up development environments (e.g. when onboarding new staff or dealing with “works on my machine” issues), switching branches for small tasks (IDEs need to reindex the codebase, rebuild the project, etc.), and waiting for builds to complete. This time could be better spent on actual development work. CDEs can help minimize these delays by providing standardized, ready-to-use environments for each task.\nSecurity risks\nFor industries like finance, healthcare, or companies that use contractors, local development poses numerous security risks: Company code is more vulnerable when stored on local machines, and the possibility of policy violations or data breaches is greater. With CDEs, code and sensitive data are stored in the cloud, with strict access control and monitoring.\nLocal machine limitations\nDevelopers often face hardware constraints, such as insufficient RAM, CPU, or GPUs for heavy machine learning tasks. CDEs scale with your needs, providing the necessary resources on demand to eliminate these limitations.\nHowever, the simple fact that you’re facing these challenges doesn’t automatically mean that remote development is the right solution for your team. Whether it’s worth adopting remote development depends on various factors, such as the scale of your team, your development workflows and infrastructure, and many others. This post will guide you through these considerations in the form of a questionnaire. We’ll explore key areas like:\nOrganization scale: How the size and distribution of your team affect the need for remote development.\nDevelopment process: The type of projects you work on and your development workflows can heavily influence how beneficial CDEs will be for your team.\nSecurity and compliance: How remote development environments can help you meet security and compliance requirements.\nInfrastructure and resources: How your current infrastructure and internet connection may impact the usage of CDEs.\nAdditional considerations: Other factors like software licensing and disaster recovery that might affect your decision.\nJetBrains CodeCanvas\nIn September 2024, we announced the release of CodeCanvas, our solution for remote development. CodeCanvas is a CDE orchestration tool that can help you centralize the configuration of dev environments for specific projects, manage the CDE lifecycle (from creation to deletion), and benefit from the support of the majority of JetBrains IDEs and VS Code. For more details, check out our announcement blog post and watch the overview video.\n\n\n\n\n2. Organization scale\na. Number of developers in your company\n0–30 developers\nFor smaller teams, traditional local development may still be a cost-effective solution. The overhead of managing cloud infrastructure, setting up CDEs, and maintaining cloud resources might not justify the benefits of CDEs.\nRecommendation: Stick to local development unless you need CDEs for other reasons, such as enhanced security, standardized environments, etc.\n\n\n\n\n30+ developers\nAt this scale, managing multiple development environments can become a challenge, especially when different projects require different configurations. Here, remote environments can simplify onboarding and make transitions between projects easier. With tools like CodeCanvas, setting up and managing these environments at scale becomes more efficient.\nRecommendation: Consider hybrid solutions, where some environments are remote and others are local.\n\n\n\n\n100+ developers\nManaging local development at scale can be highly inefficient. As your team grows, CDEs simplify scaling by enabling centralized management, enforcing security, and minimizing local machine setup.\nRecommendation: CDEs are highly recommended at this scale.\nb. Number of projects and project complexity\nIt’s challenging to provide a definitive answer based solely on the number of projects your company is developing. The impact of multiple projects on your development process depends on several key factors.\nKey considerations:\nProject complexity: Even a single project in development may require complex configuration: multiple modules, numerous dependencies, specialized hardware requirements (like GPUs for AI/ML tasks), and so on. These complexities are also constantly evolving, with updates to dependencies, frameworks, or hardware demands that each developer must keep up with. CDEs overcome these challenges by providing standardized and ready-to-use environments for all developers.\n\n\n\n\nDeveloper workload and context switching: Consider how many projects a single developer works on and how frequently they switch between them. Frequent switching can lead to significant downtime due to a need to configure different local setups in the same local environment. CDEs eliminate the need to switch contexts in the same environment by providing pre-configured environments for each project.\n\n\n\n\nEnvironment consistency: The more projects your team handles, the harder it is to ensure that all developers are working with the same environment configuration. Variations in local setups can result in the “works on my machine” problem. CDEs centralize environment configuration, ensuring every developer works with consistent setups across all projects.\nRecommendation: \nFew projects, low complexity: If your company develops a small number of simple projects, CDEs might not offer significant benefits, as the overhead of local environment management remains manageable.\n\n\n\n\nMultiple projects, high complexity: CDEs are highly beneficial for companies managing multiple and/or complex projects – especially those involving AI/ML workflows. They reduce setup time, improve consistency, and help scale GPU resources efficiently.\nc. Geographical distribution of your team\nWhen considering CDEs, latency is the critical factor that can make or break the experience. Latency is recommended to stay under 100 ms for a smooth and responsive development workflow. \nAll your developers are in one location\nIf your entire team is located in one place with fast and stable access to nearby cloud services, maintaining low network latency is simpler.\n\n\n\n\nYou have distributed teams across the globe\nNetwork latency can have a more noticeable impact on globally distributed teams. Latency greater than 100 ms can disrupt the responsiveness of CDEs, causing developers to experience delays while coding​. To mitigate this, you must deploy dev environment clusters as close to your developers as possible, often in different regions. This reduces latency but introduces additional operational costs for setup and maintenance.\nRecommendations:\nAssess network conditions: Evaluate the latency between your developers’ locations and the cloud regions where CDEs can be hosted. Keep latency below 100 ms to ensure a smooth development experience.\n\n\n\n\nRegional deployments: If feasible, deploy dev environment clusters in each region where your developers are located. This setup reduces latency but requires more operational overhead.\n\n\n\n\nHybrid approach: Consider a hybrid model where developers in regions with low latency to cloud data centers use CDEs while others continue with local dev environments.\nd. Growth rate of your team\nYou have a stable team size\nIf your development team is stable or only slowly growing, local environments or a traditional development setup might still be manageable. However, adopting CDEs can still provide significant benefits, like standardized environments, improved developer productivity, and better security. Other sections of this blog post address all these benefits.\n\n\n\n\nYou have a rapidly growing team\nFor rapidly growing development teams, adopting CDEs is not just a benefit – it’s almost essential for managing scale, streamlining onboarding, and controlling infrastructure costs:\n\nResource scaling: As your team grows, managing individual machines and scaling hardware can quickly become overwhelming. CDEs can dynamically allocate the necessary compute resources for your team.\n\n\n\n\nOnboarding efficiency: Onboarding new developers quickly is essential in a fast-growing team. Case studies show that new hires can jump straight into development with pre-configured environments, reducing onboarding time from days to minute​s.\n\n\n\n\n\n\n\nCost efficiency: CDEs prevent overspending on idle resources by scaling down when not in use, allowing infrastructure to grow in line with team size.\n\n\n\n\n3. Development process\na. Type of developed applications\nUnderstanding the nature of the applications your team develops is crucial in determining whether CDEs are suitable for your workflow.\nServer-side applications (web apps, backends, APIs)\nCDEs are well-suited for server-side development, which typically doesn’t require a graphical user interface (GUI) or specialized hardware. CDEs support port forwarding, allowing developers to run their applications remotely and access them through the web browser on their local machine.\nRecommendation: CDEs are a great fit.\n\n\n\n\nClient-side web applications\nAs with server-side apps, if a client-side app doesn’t require a native GUI, CDEs can effectively replace local machines.\nRecommendation: CDEs are a great fit.\n\n\n\n\nMobile applications (iOS and Android)\n\niOS apps: CDEs have limitations for iOS development because of Apple’s ecosystem requirements. Xcode (the essential tool for iOS development) doesn’t currently support remote development.\n\n\n\n\nAndroid apps: Android development is supported in CDEs. However, there may be challenges running the Android Emulator, which is a separate resource-intensive application.\nRecommendation: Remote development isn’t fully available to mobile devices yet. For iOS development, using local macOS machines or VDI solutions is the only viable option. For Android development, CDEs are supported, though there may be some nuances to consider.\nDesktop applications\nCDEs are typically Linux-based (like CodeCanvas). You can use VNC to access desktop windows, which allows you to visually interact with applications. However, there are limitations, especially if you are developing for other operating systems. Even if you’re building cross-platform apps, testing and building for macOS or Windows still require their own respective environments.\nRecommendation: CDEs are a good fit for Linux apps but not for macOS and Windows.\n\n\n\n\nGame development\nGame development with engines like Unity or Unreal Engine requires running the engine application alongside your IDE. This means the engine window must be somehow shared between the remote dev environment and a local machine. Though this can be done via VNC, the problem here is that both Unity and Unreal Engine require GPUs for real-time rendering and other tasks. However, VNC doesn’t support hardware-accelerated rendering, meaning that while you can use VNC to view the remote desktop, it won’t perform well with these game engines.\nRecommendation: Developing games in CDEs is not recommended at this point.\n\n\n\n\nSpecialized applications (embedded systems, IoT, hardware integration)\nDeveloping and testing applications for embedded systems, IoT devices, and hardware-integrated solutions often requires direct access to hardware, such as microcontrollers, sensors, and other external peripherals.\nRecommendation: Stick to local environments unless you need CDEs for other reasons, such as enhanced security, standardized environments, etc.\nb. Branching strategies\nBranching strategies play a significant role in your development workflow and can influence the benefits of CDEs for your team.\nYour team uses flows with feature branches\nIf your team utilizes a branching strategy that involves creating feature branches for new features, bug fixes, or experiments (e.g. GitFlow, GitHub Flow, or others), CDEs can offer substantial advantages:\nIsolated environments: Developers can easily create a dedicated CDE for each feature branch, ensuring that changes are isolated and do not interfere with other work.\n\n\n\n\nQuick context switching: Developers can switch between different tasks or features by simply launching the corresponding CDEs. This means there are no overheads like those associated with changing branches locally, which often requires rebuilding indexes, fetching dependencies, and waiting for the environment to be ready.\n\n\n\n\nConsistent setups: Each CDE is a fresh environment based on the branch’s code, reducing issues caused by leftover artifacts or configurations from previous work.\nFor example, a developer is assigned to fix a bug while already working on a new feature. Instead of stashing changes or juggling branches locally, they can:\nKeep the CDE for the new feature runningю\nRun a new CDE for the bug fix on the appropriate branch.\nSwitch between CDEs instantly, maintaining productivity and reducing context-switching costs.\nRecommendation: Adopting CDEs can significantly speed up the development.\nYour team uses flows without feature branches\nIf your team employs trunk-based development or ad hoc commits to main, CDEs can still provide some benefits:\n\nFresh environments for each task: When starting a new task in the morning, developers must fetch the latest changes from the main branch. On large projects, this could mean pulling in 100+ commits each day. After fetching, the IDE needs to rebuild indexes and dependencies, which can take up to 30 minutes or more. With CDEs, the warmup feature automatically builds and prepares all the data overnight, meaning the developers can start their work almost immediately.\n\n\n\n\nReduced local setup overhead: CDEs eliminate the need to manage local environments, reducing issues related to configuration drift or dependency conflicts.\n\n\n\n\nTask isolation: Even without branches, using separate CDEs for different tasks can help isolate work and prevent unintended interactions between changes.\n\n\n\n\n\n\n\nRecommendation: Even without branches, CDEs can help maintain a clean working state and reduce setup time.\nc. Code reviews and merge requests\nYour team uses code reviews and merge requests\nCode reviews and merge requests that require approval are essential practices for maintaining high code quality. If your workflow includes these practices, CDEs can greatly enhance their efficiency:\n\nInstant environment setup: Very few developers are willing to switch their entire local project to a review branch, as this can result in hours of setup – especially when new dependencies are introduced during the review. With CDEs, reviewers can quickly spin up a dedicated dev environment with a specific branch or commit under review.\n\n\n\n\nIn-depth analysis and experimentation: With a CDE, reviewers can open the reviewed code in a full-featured IDE, allowing them to navigate the codebase, understand the context, and even run/debug the code. Moreover, they can test proposed changes without affecting their local setup.\n\n\n\n\n\n\nYour team doesn’t use code reviews and merge requests\nWithout these practices, the benefits of CDEs in this context may be insignificant. However, we strongly recommend implementing code reviews and merge requests, at least for critical parts of your codebase, as they can greatly enhance code quality and collaboration.\n\n\n\n\n\nRecommendation: If you rely on code reviews and merge requests, CDEs will perfectly fit into your workflow.\nd. Onboarding of new developers\nThe complexity of your development environment can greatly impact the time it takes for new hires to become effective team members.\nQuick onboarding (less than a day)\nIf your current setup allows new developers to install and configure their local environments in just a few hours, CDEs may offer limited additional value.\nRecommendation: Stick with local development unless you need CDEs for other reasons, such as enhanced security, standardized environments, etc.\n\n\n\n\nComplex onboarding (several days or more)\nDuring onboarding, setting up a development environment with complex configurations, access setup, multiple dependencies, or large codebases can take days or weeks.\n\n\n\n\n\nRecommendation: Adopt CDEs, such as CodeCanvas, to significantly reduce onboarding time. Pre-configured environments allow developers to avoid the time-consuming task of local setup and start working right away.\n\n\n\n\n\nFrequent onboarding (rapid growth or high turnover)\nIf your company is rapidly expanding or experiencing high turnover, the cumulative time spent on onboarding becomes significant. Ensuring each new developer has a consistent environment is critical to maintaining productivity and reducing errors.\n\n\n\n\nRecommendation: Regardless of how long onboarding takes in your company, CDEs will help you greatly improve this process.\ne. Internal tools\nYour company has platform teams building internal developer tools\nIn large organizations, platform teams often create specialized tools for developers, such as custom authentication mechanisms, CLI tools for managing cloud resources, and others. The challenge lies in delivering and configuring this tooling consistently across all developer machines.\nWith the centralized management of CDEs, this becomes much easier. Platform teams can ensure that all required tools, configurations, and updates are included in the standard CDE templates – all developers will work in properly configured environments without needing to install or update the tools themselves manually.\nRecommendation: CDEs can significantly simplify tool adoption.\nYour company doesn’t have such teams\nRecommendation: Stick to local environments unless you need CDEs for other reasons, such as enhanced security, standardized environments, etc.\n\n\n\n\n4. Security and compliance\na. Strict security or compliance requirements\nYou have significant compliance needs (e.g. fintech, healthcare)\nIf your organization operates in industries with stringent security or compliance mandates – such as finance, healthcare, or government – CDEs can offer several security advantages:\n\nData isolation: With CDEs, your source code remains within the secure cloud infrastructure, reducing the risk of local device vulnerabilities or leaks. Of course, users can still retrieve the data from a remote environment if they really need to, and you can minimize this risk further with third-party solutions, such as data loss prevention (DLP) or monitoring tools.\n\n\n\n\nCentralized control and role-based access (RBAC): Tools like CodeCanvas make it easier to enforce access controls, track activity, and comply with strict regulations like SOC 2 or HIPAA. Built-in RBAC ensures that only authorized personnel can access specific data, adding an extra layer of security​.\nRecommendation: CDEs are a valuable tool for meeting stringent industry regulations.\nYou have standard security measures\nFor organizations without strict compliance requirements, CDEs still offer better security than local machines, simply “by design”. Code and data are housed in secure cloud environments, preventing the risks associated with local storage.\nRecommendation: Evaluate CDEs for additional security benefits.\nb. Use of contractors or third-party developers\nYour team works with contractors or third-party developers\nWhen working with external teams, security is the main concern, and CDEs can be a great solution:\n\nFast onboarding via provisioning pre-configured dev environments.\n\n\n\n\nLimited access with role-based access control (RBAC): Contractors have access only to the specific dev environments they need. Once a contractor completes their work, CDEs allow you to swiftly revoke access.\nRecommendation: CDEs are highly beneficial.\nYour team doesn’t work with contractors or third-party developers\nEven if contractors or third-party developers are not part of your workflow, CDEs may still offer benefits in terms of team management and security.\nRecommendation: Evaluate CDEs for additional security benefits.\nc. Need for audit trails and activity logs\nYour team requires audit trails and activity logs\nCDEs can track key actions related to development environments, such as when a CDE is created, modified, or run for a specific project. This allows for transparent tracking of who accessed what and when, a critical requirement for security reviews and audits.\nRecommendation: CDEs are recommended for teams requiring centralized tracking of environment-related actions: creation, usage, changes to configuration templates, and so on.\nYour team doesn’t need audit trails or detailed logs\nEven if audit trails and detailed logging aren’t critical to your organization, CDEs may still offer benefits in terms of team management and security.\nRecommendation: Evaluate CDEs for additional security benefits.\n\n\n\n\n5. Infrastructure and resources\na. Infrastructure setup\nYour team uses local machines only\nThe truth about remote development is that using local machines will always be cheaper in terms of pure infrastructure costs. However, the benefits of CDEs lead to indirect savings:\n\nReduced non-productive time (NPT): Remote development reduces the time developers spend setting up environments, switching branches, or waiting for indexing. These tasks, often seen as downtime, are greatly minimized.\n\n\n\n\nLower hardware costs: With CDEs, developers no longer need powerful machines, as heavy computing tasks happen in the cloud. This approach significantly reduces the need to provide high-end hardware for every developer. If developers occasionally need more powerful hardware, they can access it through the cloud without needing a dedicated machine.\n\n\n\n\n\n\nYour team uses virtual machines for development\nIf you’re already using VMs, adopting CDEs with orchestration tools like CodeCanvas can further optimize your costs:\n\nScalable resources: CDEs offer dynamic scaling, ensuring that you only use resources as needed, preventing over-provisioning or leaving VMs idle.\n\nAuto-shutdown: Automatically shutting down environments when they’re not in use helps reduce costs and avoids wasting resources.\n\n\n\n\nCheaper storage: Tools like CodeCanvas can automatically move data of inactive dev environments to more cost-effective storage, further reducing infrastructure expenses.\n\n\n\n\nAuto cleanup: Unused or abandoned CDEs can be automatically deleted, freeing up pricy cloud storage.\n\n\n\n\n\n\nYour team has some infrastructure in the cloud (AWS, Azure, Google Cloud)\nFor companies already using cloud infrastructure, integrating CDEs into the existing setup can be a smoother and potentially more cost-effective process:\n\nExisting expertise: Your cloud experts can easily set up and maintain an orchestration tool like CodeCanvas.\n\n\n\n\nAccess to cloud resources: CDEs have built-in access to the resources hosted in the same cloud (via Kubernetes service accounts).\n\n\n\n\nCost benefits through scale: By moving the local development to the cloud, you might see cost advantages through bulk usage or negotiated discounts with cloud providers​.\n\nRecommendation: Be prepared for remote development to be more expensive in terms of infrastructure costs, but you may save indirectly through improved productivity, reduced expenses on local hardware, and optimized resource management. The actual savings depend on factors like team size and project duration – the more developers you have and the longer the time frame, the more you save.\nb. Internet connection reliability\nRemote development heavily depends on fast and stable internet connections.\nYour team has strong, reliable internet\nIf your internet is reliable and provides low latency (under 100 ms) to major cloud service providers (AWS, Google Cloud, Azure), then CDEs are a suitable option for you.\n\n\n\n\nYour team experiences intermittent internet issues or has slower bandwidth\nWith remote development, no internet means no development. Slow or unreliable internet can significantly impact productivity. Latency greater than 100 ms can make interactions with the remote IDE frustrating, causing delays during typing.\nRecommendation: If you want to adopt CDEs, ensure your latency to cloud providers is consistently below 100 ms. Additionally, it’s vital to have a backup internet plan. Without the internet, you won’t be able to access your dev environments or code, so ensure you have a second provider, among other backup options.\n\n\n\n\n6. Additional considerations\na. Software licensing and compliance\nIDE licensing: When using CDEs, IDE licenses (e.g. for JetBrains IDEs) function as they would locally. Developers are required to have valid licenses to use their chosen IDE within the cloud environment, as CDEs do not manage or provide these licenses automatically.\n\n\n\n\nLicensing for additional tools and dependencies: Licensing may be more complex for specialized development tools, frameworks, or dependencies. Some tools may have specific licensing models for cloud usage, such as geographic restrictions or limits on the number of users. Before deploying these tools in CDEs, it’s essential to verify whether additional steps are needed to comply with licensing terms.\n\n\n\n\nLicense management: CDEs do not offer centralized management for software licenses. If you’re using multiple third-party tools, managing these licenses (e.g. tracking usage, renewals, and compliance) may require an external license management system to prevent over-deployment or violations.\nb. Disaster recovery and business continuity\nRecovery time: In traditional local setups, recovery time depends heavily on your ability to restore hardware, retrieve backups, and reconfigure environments. In CDEs, recovery times can be significantly reduced as dev environments are created on demand from pre-configured templates.\n\n\n\n\nInternet dependency: Since CDEs depend on constant internet access, a failure in connectivity could result in a total development halt. It’s critical to have a backup internet connection in place or alternative local environments that can be activated in the case of extended internet outages​.\n\n\n\n\nCost and complexity: Implementing a fail-safe infrastructure in CDEs can increase both the cost and complexity of your setup. However, the trade-off is enhanced resilience and potentially reduced downtime​.\nc. CDEs and AI development\nAI and autonomous developers: As we move toward a future where AI-autonomous developers become a reality, CDEs will play a crucial role. Remote development offers the infrastructure and scalability necessary for AI agents to run. AI models can use CDEs to perform code generation, testing, and deployment autonomously.\nUseful links\nTo try CodeCanvas or schedule a demo, contact our sales team\nCodeCanvas documentation\nCodeCanvas overview video",
        "dc:creator": "Alexey Totin",
        "content": "Adopting remote development is a significant decision for any company. At JetBrains, we talk to many customers about this shift. While we see growing demand, we also encounter many misconceptions about what remote development with cloud development environments (CDEs) can and cannot do. 1. What problems can you solve with remote development Before diving into [&#8230;]",
        "contentSnippet": "Adopting remote development is a significant decision for any company. At JetBrains, we talk to many customers about this shift. While we see growing demand, we also encounter many misconceptions about what remote development with cloud development environments (CDEs) can and cannot do. 1. What problems can you solve with remote development Before diving into […]",
        "guid": "https://blog.jetbrains.com/?post_type=codecanvas&p=521174",
        "categories": [
          "insights",
          "codecanvas"
        ],
        "isoDate": "2024-10-24T16:34:18.000Z"
      },
      {
        "creator": "Ekaterina Ryabukha",
        "title": "WebStorm and Rider Are Now Free for Non-Commercial Use",
        "link": "https://blog.jetbrains.com/blog/2024/10/24/webstorm-and-rider-are-now-free-for-non-commercial-use/",
        "pubDate": "Thu, 24 Oct 2024 12:54:38 +0000",
        "content:encodedSnippet": "We’re excited to announce a change in our licensing model that we believe will benefit the developer community – WebStorm and Rider are now free for non-commercial use!\nRead on to learn more about the change and why we’re making it, and be sure to check out the FAQ section below for additional details.\nWhat’s happening?\nEarlier this year, we implemented a new licensing model for our recently introduced IDEs, RustRover and Aqua, making them free for non-commercial use. We’re now extending this model to WebStorm and Rider. If you’re using these IDEs for non-commercial purposes, such as learning, open-source project development, content creation, or hobby development, you can now do so for free.\nFor commercial projects, nothing will change – our existing licensing remains in place. Other JetBrains IDEs are not affected by this update, either. We’ll evaluate the outcomes of this free non-commercial licensing initiative to see if it can be expanded.\nWhy are we doing this?\nIn making non-commercial development free, we aim to make JetBrains IDEs more accessible to a broader audience. We hope the new licensing model will further lower the barrier to using our IDEs, helping you learn, grow, and stay creative.\nWe’ve explored various ways to achieve this goal. As many of you have asked for more community editions, this was one of the possible options that we considered. However, JetBrains IDEs often have monolithic functionality, with all features deeply integrated and essential for productive work. Creating additional community editions would risk offering a feature set that doesn’t meet the needs of the many different types of users we have.\nWhy WebStorm and Rider?\nAccording to various surveys like Stack Overflow, 68% of developers code outside of work as a hobby, and nearly 40% for professional growth or self-paced learning. This share is even higher for game and web development. For example, game developers often begin their careers by creating games as a hobby, using free game engines. This inspired our choice to apply the new licensing model to WebStorm and Rider.\nCommercial vs. non-commercial use\nAs defined in the Toolbox Subscription Agreement for Non-Commercial Use, commercial products are products distributed or made available for a fee or used as part of your business activity. However, there are certain categories excluded explicitly from this definition. Common examples of non-commercial cases include learning and self-education, any form of content creation, open-source code, and hobby development.\nIt’s important to note that, if you’re using a non-commercial license, you cannot opt out of the collection of anonymous usage statistics. We use this information to improve our products. The data we collect is exclusively that of anonymous feature usages of our IDEs. It is focused on what actions are performed and what types of functionality of the IDE are used. We do not collect any other data. This is similar to our Early Access Program (EAP) and is in compliance with our Privacy Policy.\nFAQ\nBelow are answers to some other related questions. If you don’t find an answer to your question, feel free to leave a comment or contact sales@jetbrains.com.\nLicensing\nWhat features are included under the free license?\nWith the new non-commercial license type, you can enjoy a full-featured IDE that is identical to its paid version. The only difference is in the Code With Me feature – you get Code With Me Community with your free license.\nDo RustRover and Aqua have the same conditions for non-commercial use?\nYes, RustRover and Aqua follow the same guidelines for non-commercial use. They previously had slightly different criteria for certain use cases, but we’ve updated them to align with the licensing model used for WebStorm and Rider.\nWhich license should I choose if I want to use Rider or WebStorm for both non-commercial and commercial projects?\nIf you intend to use Rider or WebStorm for commercial development for which you will receive direct or indirect commercial advantage or monetary compensation within the meaning of the definitions provided in the Toolbox Subscription Agreement for Non-Commercial Use, you will need to purchase a commercial subscription (either individual or organizational). This license can then also be used for non-commercial development.\nWhat license should I choose if I just started a new project?  \nIf you plan to release the product and get commercial benefits from it, either now or in the future, you should use a commercial license. If your project is for non-commercial purposes, then a non-commercial license is valid. However, if your intentions change over time, you’ll need to reassess whether you still qualify for non-commercial use. If you’re unsure after considering your intentions, it’s safer to choose a commercial license.\nThe company I am working for doesn’t do commercial development. Am I eligible to apply for a non-commercial license? \nIf you’re working and receiving payment, even if your employer doesn’t receive commercial benefits from the end product, such as in a non-profit organization, you should be using a commercial license. For startups and non-profit organizations, we have separate offers mentioned on this page. \nCan I use the IDE for free to create educational courses and stream content while earning money through course sales or advertisements in the stream?\nWith the non-commercial license agreement, you can create any type of content, even if it involves receiving commercial benefits. Here are some examples of such content creation:\nCreators of educational courses looking to sell their courses.\nContent creators who share posts on platforms like YouTube and earn commissions from ads.\nPodcasters and streamers who sell ad space in their content.\n\n\n\n\nWill this change affect our paid subscriptions for individuals or organizations?\nDon’t worry, this new license type will not impact any of our other paid subscription options. You’ll still be able to purchase personal and organizational subscriptions for WebStorm, Rider, dotUltimate, and the All Products Pack with exactly the same terms and conditions as are currently in place.\nHow do renewals and upgrades work now?\nNon-commercial subscriptions are issued for one year and will automatically renew after that. However, for the renewal to happen, you must have used the assigned license at least once during the last 6 months of the subscription period.\nAm I eligible for a refund if I’ve already bought a paid subscription but do non-commercial development?\nIf you’re unsure whether you qualify for a refund, you’ll find full details of our policy here. Please note that if you also work on projects that qualify as commercial usage, you can’t use the free license for them.\nWhat are my other options if I don’t qualify for this non-commercial option? \nWe’re sorry you can’t benefit from the non-commercial use license, but we’re sure we’ve got something to suit your needs. It’s always worth checking our special offers and Community page to see all our latest promotional pricing options.\nHow and where can I get technical support if I encounter a problem or wish to ask a question?\nAs a non-commercial license holder, we encourage you to reach out with any questions you might have via our public community forums. You can also report any issues you might be experiencing by submitting a new request on the relevant issue tracker.\nThese resources can be accessed via the following links:\nWebStorm community forum and bug tracker\nRider community forum and bug tracker\nPlease note that support via private tickets is not included under this license.\nAnonymous data collection \nDoes my IDE send any data to JetBrains?\nThe terms of the non-commercial agreement assume that the product may also electronically send JetBrains anonymized statistics (IDE telemetry) related to your usage of the product’s features. This information may include but is not limited to frameworks, file templates used in the product, actions invoked, and other interactions with the product’s features. This information does not contain personal data.\nIs there a way to opt out of sending anonymized statistics?\nWe appreciate that this might not be convenient for everyone, but there is unfortunately no way to opt out of sending anonymized statistics to JetBrains under the terms of the Toolbox agreement for non-commercial use. The only way to opt out is by switching to either a paid subscription or one of the complimentary options mentioned here.\nGetting a non-commercial subscription \nWhat should I do to apply for this subscription? \nIt can be easily done right inside your IDE:\nInstall Rider or WebStorm and run it.\nUpon startup, there will be a license dialog box where you can choose the Non-commercial use option.\nLog in to your JetBrains account or create a new one. \nAccept the Toolbox Subscription Agreement for Non-Commercial Use.\nEnjoy development in your IDE.\nIf you’ve already started a trial period or have activated your IDE using a paid license, you still can switch to a non-commercial subscription by following these steps:\nIf you’re using Rider, go to Help | Manage Licenses. If you’re using WebStorm, go to Help | Register.\nIn the window that opens, click on the Remove License button.\nChoose Non-commercial use.\nLog in to your JetBrains Account or create a new one. \nAccept the Toolbox Subscription Agreement for Non-Commercial Use.\nEnjoy development in your IDE.\nI don’t see the Non-commercial use option in my IDE. What should I do? \nThe most likely explanation for this is that you’re using an older version of Rider or WebStorm. Unfortunately, we don’t support obtaining the non-commercial license for any releases prior to Rider 2024.2.7 and WebStorm 2024.2.4. \nWill a single subscription cover both Rider and WebStorm? \nThe new non-commercial subscription type is product-specific. This means that if you want to use both Rider and WebStorm for non-commercial purposes, you’ll have to obtain two separate licenses – one for each product. \nCan I generate an activation code for offline activation? \nUnfortunately, acquiring an activation code for a non-commercial subscription is not possible. You can only activate an IDE through your JetBrains Account.",
        "dc:creator": "Ekaterina Ryabukha",
        "content": "We’re excited to announce a change in our licensing model that we believe will benefit the developer community – WebStorm and Rider are now free for non-commercial use! Read on to learn more about the change and why we’re making it, and be sure to check out the FAQ section below for additional details. What’s [&#8230;]",
        "contentSnippet": "We’re excited to announce a change in our licensing model that we believe will benefit the developer community – WebStorm and Rider are now free for non-commercial use! Read on to learn more about the change and why we’re making it, and be sure to check out the FAQ section below for additional details. What’s […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=518086",
        "categories": [
          "news",
          "licensing",
          "non-commercial"
        ],
        "isoDate": "2024-10-24T12:54:38.000Z"
      },
      {
        "creator": "Maria Goldade",
        "title": "Ask Us Anything! Q&A Session on Reddit With the CLion Team",
        "link": "https://blog.jetbrains.com/clion/2024/10/ama-reddit/",
        "pubDate": "Thu, 24 Oct 2024 08:19:11 +0000",
        "content:encodedSnippet": "It’s been a while since the last Ask Me Anything session on Reddit with the CLion team. Today, we would like to get back to our roots and spend some time together to give you the opportunity to ask any questions you would like in r/cpp. Our team will be there, ready to provide you with the answers.\nThis Q&A session will focus on the most recent releases and changes for CLion. Feel free to share any questions about our latest 2024.2 release, the CLion roadmap for 2024.3, CLion Nova and new language engine updates, debugger enhancements, project models and build tools support, as well as any other questions you have.\nASK A QUESTION\nWe’ll be answering your questions on Reddit from 1–5 pm CET, October 29, 2024 (visit this page to convert that to your local time).\nGoing beyond this AMA session, you can always get in touch with us on X, via a support ticket, or in our issue tracker. Or simply ask here via the comments on the blog!\nYour CLion team\nJetBrains\nThe Drive to Develop",
        "dc:creator": "Maria Goldade",
        "content": "It’s been a while since the last Ask Me Anything session on Reddit with the CLion team. Today, we would like to get back to our roots and spend some time together to give you the opportunity to ask any questions you would like in r/cpp. Our team will be there, ready to provide you [&#8230;]",
        "contentSnippet": "It’s been a while since the last Ask Me Anything session on Reddit with the CLion team. Today, we would like to get back to our roots and spend some time together to give you the opportunity to ask any questions you would like in r/cpp. Our team will be there, ready to provide you […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=520476",
        "categories": [
          "events",
          "ama",
          "news",
          "q-amp-a"
        ],
        "isoDate": "2024-10-24T08:19:11.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": [
      {
        "creator": "Chutian Wang",
        "title": "Automation Platform v2: Improving Conversational AI at Airbnb",
        "link": "https://medium.com/airbnb-engineering/automation-platform-v2-improving-conversational-ai-at-airbnb-d86c9386e0cb?source=rss----53c7c27702d5---4",
        "pubDate": "Mon, 28 Oct 2024 17:02:25 GMT",
        "content:encodedSnippet": "How Airbnb’s conversational AI platform powers LLM application development.\n\nBy Chutian Wang, Zhiheng Xu, Paul Lou, Ziyi Wang, Jiayu Lou, Liuming Zhang, Jingwen Qiang, Clint Kelly, Lei Shi, Dan Zhao, Xu Hu, Jianqi Liao, Zecheng Xu, Tong Chen\nIntroduction\nArtificial intelligence and large language models (LLMs) are a rapidly evolving sector at the forefront of technological innovation. AI’s capacity for logical reasoning and task completion is changing the way we interact with technology.\nIn this blog post, we will showcase how we advanced Automation Platform, Airbnb’s conversational AI platform, from version 1, which supported conversational systems driven by static workflows, to version 2, which is designed specifically for emerging LLM applications. Now, developers can build LLM applications that help customer support agents work more efficiently, provide better resolutions, and quicker responses. LLM application architecture is a rapidly evolving domain and this blog post provides an overview of our efforts to adopt state-of-the-art LLM architecture to keep enhancing our platform based on the latest developments in the field.\nOverview of Automation Platform\nIn a previous blog post, we introduced Automation Platform v1, an enterprise-level platform developed by Airbnb to support a suite of conversational AI products.\nAutomation Platform v1 modeled traditional conversational AI products (e.g., chatbots) into predefined step-by-step workflows that could be designed and managed by product engineering and business teams.\nFigure 1. Automation Platform v1 architecture.\nChallenges of Traditional Conversational AI Systems\nFigure 2. Typical workflow that is supported by v1 of Automation Platform.\nWe saw several challenges when implementing Automation Platform v1, which may also be broadly applicable to typical conversational products:\n\nNot flexible enough: the AI products are following a predefined (and usually rigid) process.\nHard to scale: product creators need to manually create workflows and tasks for every scenario, and repeat the process for any new use case later, which is time-consuming and error prone.\n\nOpportunities of Conversational AI Driven by LLM\nOur early experiments showed that LLM-powered conversation can provide a more natural and intelligent conversational experience than our current human-designed workflows. For example, with a LLM-powered chatbot, customers can engage in a natural dialogue experience asking open-ended questions and explaining their issues in detail. LLM can more accurately interpret customer queries, even capturing nuanced information from the ongoing conversation.\nHowever, LLM-powered applications are still relatively new, and the community is improving some of its aspects to meet production level requirements, like latency or hallucination.So it is too early to fully rely on them for large scale and diverse experience for millions of customers at Airbnb. For instance, it’s more suitable to use a transition workflow instead of LLM to process a claim related product that requires sensitive data and numbers of strict validations.\nWe believe that at this moment, the best strategy is to combine them with traditional workflows and leverage the benefits of both approaches.\nFigure 3. Comparison of traditional workflows and AI driven workflows\nArchitecture of LLM Application on Automation Platform v2\nFigure 4 shows a high level overview of how Automation Platform v2 powers LLM applications.\nHere is an example of a customer asking our LLM chatbot “where is my next reservation?”\n\nFirstly, user inquiry arrives at our platform. Based on the inquiry, our platform collects relevant contextual information, such as previous chat history, user id, user role, etc.\nAfter that, our platform loads and assembles the prompt using inquiry and context, then sends it to LLM.\nIn this example, the first LLM response will be requesting a tool execution that makes a service call to fetch the most recent reservation of the current user. Our platform follows this order and does the actual service call then saves call responses into the current context.\nNext, our platform sends the updated context to LLM and the second LLM response will be a complete sentence describing the location of the user’s next reservation.\nLastly, our platform returns LLM response and records this round of conversion for future reference.\nFigure 4. Overview of how Automation Platform v2 powers LLM application\nAnother important area we support is developers of LLM applications. There are several integrations between our system and developer tools to make the development process seamless. Also, we offer a number of tools like context management, guardrails, playground and insights.\nFigure 5. Overview of how Automation Platform v2 powers LLM developers\nIn the following subsections, we will deep dive into a few key areas on supporting LLM applications including: LLM workflows, context management and guardrails.\nWhile we won’t cover all aspects in detail in this post, we have also built other components to facilitate LLM practice at Airbnb including:\n\nPlayground feature to bridge the gap between development and production tech stacks by allowing prompt writers to freely iterate on their prompts.\nLLM-oriented observability with detailed insights into each LLM interaction, like latency and token usage.\nEnhancement to Tool management that is responsible for tools registration, the publishing process, execution and observability.\n\nChain of Thought Workflow\nChain of Thought is one of AI agent frameworks that enables LLMs to reason about issues.\nWe implemented the concept of Chain of Thought in the form of a workflow on Automation Platform v2 as shown below. The core idea of Chain of Thought is to use an LLM as the reasoning engine to determine which tools to use and in which order. Tools are the way an LLM interacts with the world to solve real problems, for example checking a reservation’s status or checking listing availability.\nTools are essentially actions and workflows, the basic building blocks of traditional products in Automation Platform v1. Actions and workflows work well as tools in Chain of Thought because of their unified interface and managed execution environment.\nFigure 6. Overview of Chain of Thought workflow\nFigure 6 contains the main steps of the Chain of Thought workflow. It starts with preparing context for the LLM, including prompt, contextual data, and historical conversations. Then it triggers the logic reasoning loop: asking the LLM for reasoning, executing the LLM-requested tool and processing the tool’s outcome. Chain of Thought will stay in the reasoning loop until a result is generated.\nFigure 7. High level components powering Chain of Thought in Automation Platform\nFigure 7 shows all high-level components powering Chain of Thought:\n\nCoT (Chain of Thought) IO handler: assemble the prompt, prepare contextual data, collect user input and general data processing before sending it to the LLM.\nTool Manager: prepare tool payload with LLM input & output, manage tool execution and offer quality of life features like retry or rate limiting.\nLLM Adapter: allow developers to add customized logic facilitating integration with different types of LLMs.\n\nContext Management\nTo ensure the LLM makes the best decision, we need to provide all necessary and relevant information to the LLM such as historical interactions with the LLM, the intent of the customer support inquiry, current trip information and more. For use cases like offline evaluation, point-in-time data retrieval is also supported by our system via configuration.\nGiven the large amount of available contextual information, developers are allowed to either statically declare the needed context (e.g. customer name) or name a dynamic context retriever (e.g. relevant help articles of customer’s questions ).\nFigure 8. Overall architecture of context management in Automation Platform v2\nContext Management is the key component ensuring the LLM has the access to all necessary contextual information. Figure 8 shows major Context Management components:\n\nContext Loader: connect to different sources and fetch relevant context based on developers’ customizable fetching logic.\nRuntime Context Manager: maintain runtime context, process context for each LLM call and interact with context storage.\n\nGuardrails Framework\nLLMs are powerful text generation tools, but they also can come with issues like hallucinations and jailbreaks. This is where our Guardrails Framework comes in, a safe-guarding mechanism that monitors communications with the LLM, ensuring it is helpful, relevant and ethical.\nFigure 9. Guardrails Framework architecture\nFigure 9 shows the architecture of Guardrails Framework where engineers from different teams create reusable guardrails. During runtime, guardrails can be executed in parallel and leverage different downstream tech stacks. For example, the content moderation guardrail calls various LLMs to detect violations in communication content, and tool guardrails use rules to prevent bad execution, for example updating listings with invalid setup.\nWhat’s Next\nIn this blog, we presented the most recent evolution of Automation Platform, the conversational AI platform at Airbnb, to power emerging LLM applications.\nLLM application is a rapidly developing domain, and we will continue to evolve with these transformative technologies, explore other AI agent frameworks, expand Chain of Thought tool capabilities and investigate LLM application simulation. We anticipate further efficiency and productivity gains for all AI practitioners at Airbnb with these innovations.\nWe’re hiring! If work like this interests you check out our careers site.\nAcknowledgements\nThanks to Mia Zhao, Zay Guan, Michael Lubavin, Wei Wu, Yashar Mehdad, Julian Warszawski, Ting Luo, Junlan Li, Wayne Zhang, Zhenyu Zhao, Yuanpei Cao, Yisha Wu, Peng Wang, Heng Ji, Tiantian Zhang, Cindy Chen, Hanchen Su, Wei Han, Mingzhi Xu, Ying Lyu, Elaine Liu, Hengyu Zhou, Teng Wang, Shawn Yan, Zecheng Xu, Haiyu Zhang, Gary Pan, Tong Chen, Pei-Fen Tu, Ying Tan, Fengyang Chen, Haoran Zhu, Xirui Liu, Tony Jiang, Xiao Zeng, Wei Wu, Tongyun Lv, Zixuan Yang, Keyao Yang, Danny Deng, Xiang Lan and Wei Ji for the product collaborations.\nThanks to Joy Zhang, Raj Rajagopal, Tina Su, Peter Frank, Shuohao Zhang, Jack Song, Navjot Sidhu, Weiping Peng, Kelvin Xiong, Andy Yasutake and Hanlin Fang’s leadership support for the Intelligent Automation Platform.\n\nAutomation Platform v2: Improving Conversational AI at Airbnb was originally published in The Airbnb Tech Blog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Chutian Wang",
        "guid": "https://medium.com/p/d86c9386e0cb",
        "categories": [
          "engineering",
          "automation",
          "machine-learning-ai",
          "llm",
          "ai"
        ],
        "isoDate": "2024-10-28T17:02:25.000Z"
      }
    ]
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "article New updates to Planner comment notifications and settings in Planner Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "David Li",
        "title": "Unreal Engine Toolbar in Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/unreal-engine-toolbar-in-visual-studio/",
        "pubDate": "Wed, 30 Oct 2024 12:00:15 +0000",
        "content:encodedSnippet": "In Visual Studio 2022 version 17.11, we’ve added a new Unreal Engine toolbar to Visual Studio.\n\nThe Unreal Engine toolbar is a new feature that provides quick access to common Unreal Engine tasks. You can find the toolbar at the top of your code window when you have an Unreal Engine project loaded. The toolbar includes the following actions:\nAttach to Unreal Engine process: Lets you easily debug your game or editor by attaching to the running Unreal Engine process. You can choose which process to attach to from a drop-down menu.\nRescan Blueprints Cache: Refreshes the cache of Blueprint symbols in Visual Studio, which can help you resolve errors or warnings related to Blueprints.\n Unreal Engine Log: Opens the Unreal Engine log window in Visual Studio, where you can view the output of your game or editor. The window captures log messages from running Unreal processes and makes it possible to see the output live while working on the game. You can also filter the log messages by severity or category using the built-in tools in Visual Studio.\nAccess Unreal Engine Configuration Page: pens the Unreal Engine configuration page in Visual Studio, where you can customize various settings for your Unreal Engine development. For example, you can enable or disable IntelliSense for Unreal Engine types, change the formatting style of your code, or set up additional paths for your project.\nThe Unreal Engine toolbar is designed to reduce the need to switch between different applications or windows. You can also customize the toolbar by adding or removing actions or moving it to a different location in Visual Studio.\nTry it out\nWe hope you enjoy using the Unreal Engine toolbar in Visual Studio and we would love to hear your feedback. Please let us know what you think by leaving a comment below, or by using the Report a Problem tool in Visual Studio. Your input helps us make Visual Studio better for you and other Unreal Engine developers.\nThe post Unreal Engine Toolbar in Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "David Li",
        "content": "<p>In Visual Studio 2022 version 17.11, we’ve added a new Unreal Engine toolbar to Visual Studio. The Unreal Engine toolbar is a new feature that provides quick access to common Unreal Engine tasks. You can find the toolbar at the top of your code window when you have an Unreal Engine project loaded. The toolbar [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/unreal-engine-toolbar-in-visual-studio/\">Unreal Engine Toolbar in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "In Visual Studio 2022 version 17.11, we’ve added a new Unreal Engine toolbar to Visual Studio. The Unreal Engine toolbar is a new feature that provides quick access to common Unreal Engine tasks. You can find the toolbar at the top of your code window when you have an Unreal Engine project loaded. The toolbar […]\nThe post Unreal Engine Toolbar in Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251151",
        "categories": [
          "Gaming",
          "Visual Studio",
          "Game Development",
          "Unreal Engine"
        ],
        "isoDate": "2024-10-30T12:00:15.000Z"
      },
      {
        "creator": "David Li",
        "title": "Create Unreal Engine modules faster",
        "link": "https://devblogs.microsoft.com/visualstudio/create-unreal-engine-modules-faster/",
        "pubDate": "Tue, 29 Oct 2024 16:09:18 +0000",
        "content:encodedSnippet": "Unreal Engine modules help keep your code organized and modular. However, creating modules can be a tedious and error-prone process that involves manually editing configuration files and adding boilerplate code.\nVisual Studio 2022 version 17.11 comes with a new dialog to help with this process. With the new Add Module dialog, you can quickly add new modules to your project without leaving Visual Studio or manually editing configurations.\nHow to use the Add Unreal Engine Module dialog\nTo use the Add Unreal Engine Module dialog, you need to have an Unreal Engine project open in Visual Studio. You can do this by opening the .sln file generated by the Unreal Editor from your project folder, or by opening the Unreal Engine project directly by opening the folder containing the *.uproject file through File->Open->Folder….\n\nOnce you have your project open, right click on the project in Solution Explorer and select Add > Unreal Engine Item. This will open the Add New Item dialog, where you can select Empty Unreal Engine Module to launch the Add Unreal Engine Module dialog. This dialog lets you specify the name, type, loading phase, and path of your new module.\n\nAfter you click OK, Visual Studio will create the module folder and files for you and update the project settings accordingly. Visual Studio also updates the *.uproject file, registering the module there and makes sure that the module builds. You can then start writing your module code right away or use the Add Unreal Engine Class dialog to add new classes to your module.\nWhy use Unreal Engine modules\nUnreal Engine modules are a way of organizing your code into self-contained units that can be loaded and unloaded at runtime. Modules can contain C++ code, assets, shaders, blueprints, and other resources that are related to a specific functionality or feature.\nUsing modules has several benefits, such as:\nImproving code readability and maintainability by separating concerns and reducing coupling.\nEnhancing performance and memory usage by loading only the modules needed for a given context.\nEnabling code reuse and sharing by creating libraries of common or generic modules that can be used across different projects or platforms.\nSimplifying packaging and deployment by bundling modules together into plugins or DLCs.\nTo learn more about Unreal Engine modules, check out the official documentation.\nGive us your feedback\nWe hope you enjoy using the new Add Module dialog and find it useful for your Unreal Engine development. We’d love to hear your feedback and suggestions on how we can improve this feature and make Visual Studio even better for you.\nThank you for your continuous support and feedback, which helps us make Visual Studio the best tool for your development needs.\nThe post Create Unreal Engine modules faster appeared first on Visual Studio Blog.",
        "dc:creator": "David Li",
        "content": "<p>Unreal Engine modules help keep your code organized and modular. However, creating modules can be a tedious and error-prone process that involves manually editing configuration files and adding boilerplate code. Visual Studio 2022 version 17.11 comes with a new dialog to help with this process. With the new Add Module dialog, you can quickly add [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/create-unreal-engine-modules-faster/\">Create Unreal Engine modules faster</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Unreal Engine modules help keep your code organized and modular. However, creating modules can be a tedious and error-prone process that involves manually editing configuration files and adding boilerplate code. Visual Studio 2022 version 17.11 comes with a new dialog to help with this process. With the new Add Module dialog, you can quickly add […]\nThe post Create Unreal Engine modules faster appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251146",
        "categories": [
          "Gaming",
          "Visual Studio",
          "Game Development",
          "Unreal Engine"
        ],
        "isoDate": "2024-10-29T16:09:18.000Z"
      },
      {
        "creator": "David Li",
        "title": "Easily add Unreal Engine classes to your C++ project",
        "link": "https://devblogs.microsoft.com/visualstudio/easily-add-unreal-engine-classes-to-your-c-project/",
        "pubDate": "Mon, 28 Oct 2024 15:43:57 +0000",
        "content:encodedSnippet": "Visual Studio 2022 v17.11 introduces a new Add Unreal Engine Class dialog that lets you easily add common Unreal Engine classes to your project. You can also choose to which module to add your class, so you can keep your code organized and modular.\n\nTo use this feature, you need to have an Unreal Engine project open in Visual Studio. Right click on the project in Solution Explorer and select Add > Unreal Engine Item. In the Add New Item dialog, select Unreal Engine Common Classes to open the Add Unreal Engine Class dialog. This dialog shows you a list of common Unreal Engine classes that you can use as a base for your new class. Once you select a base class, you can enter the name of your new class. You can also specify the module to which Visual Studio should add your class.\nWhen you click OK, Visual Studio will generate the header and source files for your new class and add them to your project. You can then open the files and start writing your code.\nBenefits of using the Add Unreal Engine Class dialog\nThe Add Unreal Engine Class dialog has several benefits over the previous way of adding Unreal Engine classes to your project. Some of the these benefits are:\nYou can choose from an expanded list of base classes by simply selecting one from the Base class list.\nYou can specify the module name for your class, which helps you organize your code into logical units. Modules are Unreal Engine plugins or projects that contain related classes and assets. By creating separate modules for your classes, you can improve the modularity, reusability, and maintainability of your code.\nYou can avoid naming conflicts and errors when adding classes to your project. The Add Unreal Engine Class dialog checks the validity of your class name and path and warns you if they conflict with an existing class or file. It also ensures that your class inherits from the correct base class and includes the necessary headers and macros.\nTry it out\nWe hope you enjoy using the Add Unreal Engine Class dialog in Visual Studio. This feature is part of our ongoing effort to improve the C++ development experience for game developers. We would love to hear your feedback and suggestions on how we can make it even better. Please share your thoughts with us on Developer Community or Twitter.\nWe also want to thank you for your continuous feedback and support, which helps us make Visual Studio the best tool for developing games with Unreal Engine. Stay tuned for more updates and features coming soon.\nThe post Easily add Unreal Engine classes to your C++ project appeared first on Visual Studio Blog.",
        "dc:creator": "David Li",
        "content": "<p>Visual Studio 2022 v17.11 introduces a new Add Unreal Engine Class dialog that lets you easily add common Unreal Engine classes to your project. You can also choose to which module to add your class, so you can keep your code organized and modular. To use this feature, you need to have an Unreal Engine [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/easily-add-unreal-engine-classes-to-your-c-project/\">Easily add Unreal Engine classes to your C++ project</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 2022 v17.11 introduces a new Add Unreal Engine Class dialog that lets you easily add common Unreal Engine classes to your project. You can also choose to which module to add your class, so you can keep your code organized and modular. To use this feature, you need to have an Unreal Engine […]\nThe post Easily add Unreal Engine classes to your C++ project appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251139",
        "categories": [
          "Gaming",
          "Visual Studio",
          "Game Development",
          "Unreal Engine"
        ],
        "isoDate": "2024-10-28T15:43:57.000Z"
      },
      {
        "creator": "Shyam Gupta",
        "title": "Upgrade Your Windows Forms .NET Projects to the Latest .NET Version for Enhanced Security",
        "link": "https://devblogs.microsoft.com/visualstudio/upgrade-your-windows-forms-net-projects-to-the-latest-net-version-for-enhanced-security/",
        "pubDate": "Thu, 24 Oct 2024 12:00:10 +0000",
        "content:encodedSnippet": "Each release of .NET introduces a host of new features and bug fixes that enhance both performance and security. To leverage these benefits both service and desktop application developers must upgrade their applications to the latest .NET versions. Just like other developers wanting to take advantage of the latest .NET enhancements, we are updating our design-time support policy. This update will enhance the safety of the Visual Studio WinForms design-time experience and motivate WinForms developers to update their applications for improved security.  However, updating this policy will mean we will no longer support designing Forms in projects targeting older, unsupported .NET versions. This means developers too will need to update their projects to supported .NET runtimes in order to design their forms in Visual Studio. \nIt is Time to Upgrade!\nUpgrading the WinForms Designer and your applications to newer .NET versions not only enhances security but also improves design-time reliability and performance by leveraging the enhancements available in those .NET versions and referenced NuGet packages. We strongly recommend keeping your applications updated with the latest .NET versions. \nBeginning with the VS 17.12 Preview 3 release, the WinForms Designer will automatically check your project’s target .NET version. If it falls below the minimum supported .NET or .NET LTS version, you will receive a notification displayed prominently in an InfoBar. This feature will keep you informed about your project’s compatibility, allowing easy access to a list of .NET versions and their support status.\n\nFuture Support for WinForms Designer with respect to .NET Runtimes\nEach time a .NET LTS release reaches its end of support, Visual Studio will update the WinForms Out-of-Process Designer minimum supported version to that LTS release. For example, when .NET 6 LTS goes out of support in November 2024, the following Visual Studio release, 17.13, will update the designer to have .NET 6 as the minimum supported version. Consequently, projects targeting .NET versions below 6, such as .NET Core 3.1 and .NET 5, will no longer load in the Designer. Hence, we highly recommend upgrading your application to the latest .NET release to remain compatible with Visual Studio 17.13 or newer versions. You can use Designer in Visual Studio 17.12 to migrate. For more information refer to VS Product Life Cycle and Servicing wiki.  \nUnder this policy, each time .NET ships a new LTS release, the WinForms Designer will update our minimum .NET version supported to the previous .NET LTS.  Why the previous LTS? We recognize that enterprises may have some delay in getting upgrades completed, and we don’t want to break them. We will, however, continue to present the InfoBar to developers informing them that they are targeting an out of support .NET release. When developers try to load a project targeting below the WinForms Designer minimum supported version, users will be presented with an error message informing them that the WinForms Designer requires a newer version of .NET.   \nThe following table outlines the WinForms Designer support policy going forward. While it currently focuses on .NET 6 and .NET 8, the same pattern will apply to future .NET LTS releases.\n.NET LTS Release\nEnd of support (E)\nWinForms Designer support policy for next VS release after (E)\n\n\n6.0\nNov 2024\n– Designer will support projects targeting .NET 6.0 and newer versions.\n– Versions below 6.0 will not be supported.\n\n\n8.0\nNov 2026\n– Projects targeting .NET 8.0 and newer versions will be supported.\n– Versions below 8.0 will not be supported.\n\n\n\nAs .NET 8 reaches end-of-support, we will promptly upgrade the Designer process to require at least .NET 8 in the subsequent Visual Studio release. This proactive approach ensures that you stay current with your projects while maintaining compatibility with the WinForms Designer in newer Visual Studio versions. You can learn more about the .NET release lifecycle in this wiki.\nImportant Note: These changes will only impact the design-time experience of the WinForms Designer. At runtime, all .NET versions will continue to function as they do now.\nConclusion and call for feedback\nIn today’s rapidly evolving landscape, prioritizing security in software development is essential, and it requires the commitment of all developers. The WinForms Designer team is dedicated to improving security, but we need your collaboration to ensure that projects remain updated with the latest .NET versions. While this may feel like a significant change, it is a necessary step toward enhancing the security of the WinForms Designer and your applications.\nWe appreciate the time you’ve spent reporting issues/suggestions and hope you continue to give us feedback when using Visual Studio on what you like and what we can improve. Your feedback is critical to help us make Visual Studio the best tool it can be! You can share feedback with us via Developer Community: report any bugs or issues via report a problem and share your suggestions for new features or improvements to existing ones.\nStay connected with the Visual Studio team by following us on YouTube, Twitter, LinkedIn, Twitch and on Microsoft Learn.\nThe post Upgrade Your Windows Forms .NET Projects to the Latest .NET Version for Enhanced Security appeared first on Visual Studio Blog.",
        "dc:creator": "Shyam Gupta",
        "content": "<p>Each release of .NET introduces a host of new features and bug fixes that enhance both performance and security. To leverage these benefits both service and desktop application developers must upgrade their applications to the latest .NET versions. Just like other developers wanting to take advantage of the latest .NET enhancements, we are updating our [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/upgrade-your-windows-forms-net-projects-to-the-latest-net-version-for-enhanced-security/\">Upgrade Your Windows Forms .NET Projects to the Latest .NET Version for Enhanced Security</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Each release of .NET introduces a host of new features and bug fixes that enhance both performance and security. To leverage these benefits both service and desktop application developers must upgrade their applications to the latest .NET versions. Just like other developers wanting to take advantage of the latest .NET enhancements, we are updating our […]\nThe post Upgrade Your Windows Forms .NET Projects to the Latest .NET Version for Enhanced Security appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=251077",
        "categories": [
          "Visual Studio",
          "Windows Forms",
          "designer",
          "security",
          "WinForms"
        ],
        "isoDate": "2024-10-24T12:00:10.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": [
      {
        "title": "HikariCP로 MySQL Connection Pool 최적화하기",
        "link": "https://cheese10yun.github.io/mysql-connection-pool-timeout-1/",
        "pubDate": "2024-10-25T15:00:00.000Z",
        "content": "<p>Spring Boot는 기본적으로 HikariCP를 내장된 커넥션 풀로 지원하며, 이를 통해 데이터베이스 연결을 효율적으로 관리할 수 있습니다. 이번 포스팅에서는 Spring Boot 환경에서 HikariCP의 설정을 최적화하여 TPS 변화에 유연하게 대응하는 방법을 알아보겠습니다.</p><h2><span id=\"hikaricp-설정-예시\">HikariCP 설정 예시</span></h2><p>Spring Boot에서 application.yml 또는 application.properties 파일을 통해 HikariCP 설정을 정의할 수 있습니다. 이번 예시에서는 다음과 같은 설정을 적용하였습니다.</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    datasource:</span></span><br><span class=\"line\"><span class=\"attr\">        hikari:</span></span><br><span class=\"line\"><span class=\"attr\">            minimum-idle:</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attr\">            maximum-pool-size:</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"attr\">            idle-timeout:</span> <span class=\"number\">30000</span></span><br><span class=\"line\"><span class=\"attr\">            connection-timeout:</span> <span class=\"number\">20000</span></span><br></pre></td></tr></table></figure><ul><li><strong>minimum-idle</strong>: 최소 유휴 커넥션 수입니다. 초기 설정 시 최소한의 커넥션(여기서는 10개)만 유지하여, TPS가 낮을 때 리소스를 절약할 수 있습니다.</li><li><strong>maximum-pool-size</strong>: 커넥션 풀의 최대 크기입니다. TPS가 높아질 때 최대 10개의 커넥션까지 생성하여 요청을 처리할 수 있게 설정합니다.</li><li><strong>idle-timeout</strong>: 지정된 시간(밀리초) 동안 유휴 상태인 커넥션이 있을 경우 풀에서 제거합니다. 트래픽이 낮아질 때 자동으로 풀 크기를 줄이는 데 기여합니다.</li><li><strong>connection-timeout</strong>: 커넥션을 얻기 위해 대기하는 최대 시간입니다. 이 시간 내에 커넥션을 확보하지 못하면 예외가 발생합니다.</li></ul><h2><span id=\"tps-변화에-따른-커넥션-풀의-동작\">TPS 변화에 따른 커넥션 풀의 동작</span></h2><ol><li><strong>TPS가 낮은 경우</strong>: Spring Boot 애플리케이션이 유휴 상태이거나 트래픽이 적은 경우, HikariCP는 최소 커넥션(minimum-idle)만 유지하여 리소스 사용을 최적화합니다.</li><li><strong>TPS가 높아질 경우</strong>: TPS가 증가하여 커넥션이 필요한 상황이 되면, HikariCP는 최대 커넥션(maximum-pool-size)까지 확장하여 대량의 요청을 처리할 수 있게 합니다. 이를 통해 성능 저하 없이 안정적으로 트래픽을 소화할 수 있습니다.</li><li><strong>TPS가 다시 낮아지는 경우</strong>: TPS가 다시 낮아지면 HikariCP는 <code>idle-timeout</code>에 따라 불필요한 커넥션을 풀에서 제거하고, <code>minimum-idle</code>만 유지하여 리소스를 절약합니다.</li></ol><p>이 케이스는 MySQL Connection Pool에서 <code>minimum-idle</code>과 <code>maximum-pool-size</code>를 동일하게 설정한 상황에서, TPS가 200대에 도달할 때 발생하는 성능 문제를 다루고 있습니다. 그래프와 로그를 바탕으로 아래와 같이 분석할 수 있습니다.</p><h2><span id=\"tps가-높아지는-상황에서의-커넥션-풀-동작-분석\">TPS가 높아지는 상황에서의 커넥션 풀 동작 분석</span></h2><p>Spring Boot 애플리케이션에서 TPS가 높아질 때, HikariCP의 커넥션 풀이 어떻게 반응하고 성능에 어떤 영향을 미치는지 살펴보겠습니다. 이 테스트는 <code>minimum-idle: 10</code>과 <code>maximum-pool-size: 10</code> 설정을 사용해, 커넥션 풀의 확장성과 한계점을 확인하는 데 중점을 두었습니다.</p><p>애플리케이션은 지속적으로 증가하는 사용자 요청을 처리하며, TPS가 증가함에 따라 커넥션 풀이 최대에 도달하는 시점에서 성능 지연과 요청 실패가 발생하는 과정을 시각적으로 분석했습니다.</p><h3><span id=\"상황-설명\">상황 설명</span></h3><p>다음 코드는 Spring Boot와 Kotlin 환경에서 설정된 컨트롤러와 서비스 로직입니다. 컨트롤러에서는 <code>SampleService</code>의 <code>getMember()</code> 메서드를 호출하며, 이 메서드는 1~100 사이의 랜덤 ID로 <code>Member</code> 엔티티를 PK를 기반으로 조회한 후, 1초의 지연 시간을 둔 뒤 커넥션 풀의 현재 상태를 로깅합니다.</p><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SampleController</span></span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> SampleService: SampleService</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(<span class=\"meta-string\">\"/api/v1/members\"</span>)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">sample</span><span class=\"params\">()</span></span>: Member &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1 ~ 100 사이의 랜덤으로 member 조회</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> SampleService.getMember()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SampleService</span></span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> dataSource: DataSource,</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> memberRepository: MemberRepository</span><br><span class=\"line\">) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> log = LoggerFactory.getLogger(javaClass)!!</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Transactional</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">getMember</span><span class=\"params\">()</span></span>: Member &#123;</span><br><span class=\"line\">        <span class=\"keyword\">val</span> findById = memberRepository.findById(Random.nextInt(<span class=\"number\">1</span>, <span class=\"number\">100</span>).toLong()).<span class=\"keyword\">get</span>()</span><br><span class=\"line\">        runBlocking &#123; delay(<span class=\"number\">1000</span>) &#125;</span><br><span class=\"line\">        <span class=\"keyword\">val</span> targetDataSource = dataSource.unwrap(HikariDataSource::<span class=\"class\"><span class=\"keyword\">class</span>.<span class=\"title\">java</span>)</span></span><br><span class=\"line\">        <span class=\"keyword\">val</span> hikariDataSource = targetDataSource <span class=\"keyword\">as</span> HikariDataSource</span><br><span class=\"line\">        <span class=\"keyword\">val</span> hikariPoolMXBean = hikariDataSource.hikariPoolMXBean</span><br><span class=\"line\">        <span class=\"keyword\">val</span> hikariConfigMXBean = hikariDataSource.hikariConfigMXBean</span><br><span class=\"line\">        <span class=\"keyword\">val</span> log =</span><br><span class=\"line\">            <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">            totalConnections : <span class=\"subst\">$&#123;hikariPoolMXBean.totalConnections&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            activeConnections : <span class=\"subst\">$&#123;hikariPoolMXBean.activeConnections&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            idleConnections : <span class=\"subst\">$&#123;hikariPoolMXBean.idleConnections&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            threadsAwaitingConnection : <span class=\"subst\">$&#123;hikariPoolMXBean.threadsAwaitingConnection&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            maxLifetime : <span class=\"subst\">$&#123;hikariConfigMXBean.maxLifetime&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            maximumPoolSize : <span class=\"subst\">$&#123;hikariConfigMXBean.maximumPoolSize&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            minimumIdle : <span class=\"subst\">$&#123;hikariConfigMXBean.minimumIdle&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            connectionTimeout : <span class=\"subst\">$&#123;hikariConfigMXBean.connectionTimeout&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            validationTimeout : <span class=\"subst\">$&#123;hikariConfigMXBean.validationTimeout&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            idleTimeout : <span class=\"subst\">$&#123;hikariConfigMXBean.idleTimeout&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">            \"\"\"</span>.trimIndent()</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.log.info(log)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> findById</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>이 코드는 지연을 위해 1초 동안 대기한 후, HikariCP 커넥션 풀의 상태를 로깅하여 현재 커넥션 풀 상황을 모니터링할 수 있게 합니다.</p><h3><span id=\"성능-테스트-결과-위-이미지-설명\">성능 테스트 결과 (위 이미지 설명)</span></h3><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-1-1.png\" alt=\"\"></p><p>위 이미지는 커넥션 풀 설정이 <strong>minimum-idle: 10, maximum-pool-size: 10</strong>으로 설정된 상황에서, TPS가 증가함에 따라 성능이 어떻게 변화하는지를 시각화한 결과입니다.</p><ul><li><strong>Total Requests per Second</strong>:<ul><li>이 그래프는 초당 요청 처리량(RPS, 초록색 라인)과 실패한 요청(Failures, 빨간색 라인)을 보여줍니다.</li><li>TPS가 점진적으로 증가하여 초당 12 요청 수준에 도달했을 때, 실패한 요청이 발생하기 시작했습니다. 이는 커넥션 풀이 최대 용량인 10에 도달하여 더 이상 추가 요청을 처리하지 못하는 상황을 나타냅니다.</li><li>이후 TPS는 유지되지만, 실패한 요청이 지속적으로 발생하면서 커넥션 풀의 제한에 따른 성능 저하가 명확히 드러납니다. 이후 TPS는 응답 지연으로 인해 더 이상 올라가지 않습니다.</li></ul></li><li><strong>Response Times</strong>:<ul><li>응답 시간 그래프에서는 <strong>50th 퍼센타일</strong>(주황색 라인)과 <strong>95th 퍼센타일</strong>(보라색 라인)의 응답 시간이 시간이 지남에 따라 증가하는 모습이 보입니다.</li><li>특히 TPS가 증가함에 따라 95th 퍼센타일 응답 시간은 약 20,000ms 이상으로 치솟아, 사용자 요청이 큰 지연을 겪고 있음을 나타냅니다.</li><li>이는 커넥션 풀이 가득 차서 새로운 요청이 대기 상태로 전환되었기 때문이며, 트래픽 증가와 함께 시스템의 성능 한계에 도달했음을 보여줍니다.</li></ul></li><li><strong>Number of Users</strong>:<ul><li>사용자의 수가 점진적으로 증가하며 시스템에 부하를 가하고 있습니다. 사용자가 약 300명 이상일 때부터 시스템은 커넥션 풀이 한계에 도달하여, 그 이후로는 성능 저하가 본격적으로 발생합니다.</li><li>커넥션 풀 크기를 초과하는 사용자 요청은 실패하거나 긴 대기 시간을 초래하게 되며, 이는 응답 시간 증가와 TPS 유지의 원인이 됩니다.</li></ul></li></ul><p>이 이미지에서는 커넥션 풀이 최대 용량에 도달함에 따라, 시스템이 추가적인 요청을 감당하지 못하고 지연 시간과 실패율이 증가하는 과정을 시각적으로 확인할 수 있습니다.</p><h3><span id=\"로그-분석\">로그 분석</span></h3><ul><li><strong>activeConnections</strong>: 10 - 현재 활성 상태인 모든 커넥션이 사용 중입니다.</li><li><strong>idleConnections</strong>: 0 - 유휴 상태의 커넥션은 없습니다.</li><li><strong>threadsAwaitingConnection</strong>: 84 - 84개의 스레드가 커넥션을 기다리고 있습니다.</li><li><strong>maxLifetime</strong>: 1800000 (밀리초) - 커넥션의 최대 수명입니다.</li><li><strong>maximumPoolSize</strong>: 10 - 최대 커넥션 풀 크기가 10으로 설정되어 있습니다.</li><li><strong>minimumIdle</strong>: 10 - 최소 유휴 커넥션이 10으로 설정되어 있습니다.</li><li><strong>connectionTimeout</strong>: 30000 (밀리초) - 커넥션을 얻기 위해 대기할 수 있는 최대 시간입니다.</li><li><strong>validationTimeout</strong>: 5000 (밀리초) - 커넥션 유효성 검사를 위한 시간입니다.</li><li><strong>idleTimeout</strong>: 600000 (밀리초) - 유휴 커넥션을 유지하는 최대 시간입니다.</li></ul><p>이 로그는 커넥션 풀이 한계에 도달하여 더 이상 커넥션을 확장할 수 없고, 여러 스레드가 커넥션을 기다리면서 성능 저하가 발생하고 있음을 보여줍니다.</p><h3><span id=\"문제-원인\">문제 원인</span></h3><ol><li><strong>커넥션 풀 크기 제한</strong>: 현재 <code>maximum-pool-size</code>가 10으로 설정되어 있어 초당 12개 이상의 요청(TPS)을 처리하기에는 커넥션 풀 크기가 부족합니다. 모든 커넥션이 이미 사용 중이기 때문에, 추가적인 요청이 들어오면 커넥션을 기다리게 되고, 이로 인해 요청 실패가 발생하거나 응답 시간이 길어집니다.</li><li><strong>스레드 대기</strong>: 커넥션 풀이 최대 용량에 도달하면서 <code>threadsAwaitingConnection</code> 수가 증가하게 됩니다. 이는 커넥션을 얻지 못한 요청이 대기 상태로 전환되는 상황을 나타내며, TPS가 증가할 때 시스템이 추가 요청을 즉각적으로 처리하지 못하고 성능 저하를 초래하는 주요 원인이 됩니다.</li><li><strong>connectionTimeout 설정</strong>: 현재 <code>connectionTimeout</code>이 30000밀리초(30초)로 설정되어 있어, 커넥션을 기다리는 요청은 최대 30초까지 대기할 수 있습니다. 그러나 이 대기 시간이 길어질수록 전체 응답 시간이 증가하게 되며, 대기 중인 요청이 많아지면 TPS가 상승하기 어려워지고 응답 지연으로 인한 성능 저하가 발생할 수 있습니다.</li></ol><p>이러한 문제들은 TPS가 높아질수록 커넥션 풀의 제한으로 인해 전체적인 성능 저하가 발생하게 되는 이유입니다.</p><h2><span id=\"해결-방안\">해결 방안</span></h2><ol><li><strong>maximum-pool-size 증가</strong>: 현재의 TPS 수요를 충족하기 위해 <code>maximum-pool-size</code> 값을 늘려야 합니다. 예를 들어, 10 이상으로 설정하여 커넥션 풀이 더 많은 요청을 처리할 수 있도록 하면, 요청 대기 시간과 실패를 줄일 수 있습니다.</li><li><strong>동적 커넥션 관리</strong>: HikariCP의 특성을 활용해 <code>minimum-idle</code>과 <code>maximum-pool-size</code>를 적절히 조정하여 트래픽 변화에 유연하게 대응할 수 있도록 합니다. TPS가 높아질 때는 커넥션 풀이 자동으로 확장되도록 하고, TPS가 감소할 때는 최소한의 커넥션만 유지해 리소스를 절약하도록 설정하는 것이 좋습니다.</li><li><strong>모니터링 및 지속적인 튜닝</strong>: 커넥션 풀의 상태를 지속적으로 모니터링하여, 트래픽 패턴에 맞게 적절히 튜닝하는 것이 필요합니다. 정기적인 모니터링을 통해 TPS와 응답 시간 변화를 관찰하고, 필요에 따라 <code>maximum-pool-size</code>, <code>connectionTimeout</code> 등의 설정을 조정하여 최적의 성능을 유지할 수 있습니다.</li></ol><p>이러한 방안들은 트래픽 변동에 따라 유연하게 커넥션 풀을 관리하고, 시스템 성능을 최적화하는 데 도움이 됩니다.</p><h3><span id=\"성능-테스트-결과-분석-maximum-pool-size를-200으로-조정한-경우\">성능 테스트 결과 분석: maximum-pool-size를 200으로 조정한 경우</span></h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    datasource:</span></span><br><span class=\"line\"><span class=\"attr\">        hikari:</span></span><br><span class=\"line\"><span class=\"attr\">            maximum-pool-size:</span> <span class=\"number\">200</span>           <span class=\"comment\"># 최대 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            minimum-idle:</span> <span class=\"number\">10</span>                 <span class=\"comment\"># 최소 유휴 커넥션 수</span></span><br></pre></td></tr></table></figure><p>위와 같이 <code>maximum-pool-size</code>를 200, <code>minimum-idle</code>을 10으로 설정하여 테스트를 진행한 결과, 커넥션 풀이 충분히 확장 가능해지면서 시스템 성능이 크게 개선되었습니다. 주요 개선 사항은 다음과 같습니다.</p><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-1-2.png\" alt=\"\"></p><ul><li><strong>Total Requests per Second (RPS)</strong>:<ul><li>RPS가 점진적으로 증가하여 높은 TPS를 안정적으로 처리할 수 있게 되었습니다. 초당 요청 처리량이 약 150까지 증가했음에도 불구하고, 실패한 요청(Failures/s)은 발생하지 않았습니다.</li><li>이는 커넥션 풀이 충분히 확장되어, 모든 요청이 처리되는 동안 커넥션 부족으로 인한 대기 시간이 발생하지 않았음을 의미합니다.</li></ul></li><li><strong>Response Times</strong>:<ul><li>응답 시간 그래프에서 50th 및 95th 퍼센타일 응답 시간이 비교적 안정적인 수준을 유지하고 있습니다.</li><li>95th 퍼센타일 응답 시간은 약 3,000ms 이하로, 50th 퍼센타일은 약 1,000ms 내외로 유지되었습니다. 이는 고TPS 상황에서도 일관된 응답 속도를 제공할 수 있음을 보여줍니다.</li><li>이전 설정에서 발생했던 응답 시간의 급격한 증가가 해소되어, 사용자 경험이 크게 개선되었습니다.</li></ul></li><li><strong>Failures/s 비율</strong>:<ul><li>요청 실패율이 0으로 유지되었습니다. <code>maximum-pool-size</code>를 200으로 설정한 덕분에, <code>connectionTimeout</code>으로 인해 대기 상태에서 실패하는 요청이 없었습니다.</li><li>이로써 고TPS 상황에서도 안정적인 서비스가 가능해졌으며, 대량의 동시 요청을 처리하는 데 적합한 환경이 조성되었습니다.</li></ul></li></ul><h3><span id=\"로그-분석\">로그 분석</span></h3><ul><li><strong>totalConnections</strong>: 152 - 현재 총 152개의 커넥션이 생성되었습니다.</li><li><strong>activeConnections</strong>: 152 - 모든 커넥션이 활성 상태로 사용 중입니다.</li><li><strong>idleConnections</strong>: 0 - 유휴 상태의 커넥션은 없습니다.</li><li><strong>threadsAwaitingConnection</strong>: 48 - 48개의 스레드가 커넥션을 기다리고 있습니다.</li><li><strong>maximumPoolSize</strong>: 200 - 최대 커넥션 풀 크기가 200으로 설정되었습니다.</li><li><strong>minimumIdle</strong>: 10 - 최소 유휴 커넥션이 10으로 설정되어 있어, 초기에 모든 커넥션이 생성된 상태입니다.</li></ul><p>이 설정을 통해 커넥션 풀은 트래픽이 적을 때에는 최소한의 자원만 사용하고, 트래픽이 증가할 때에는 최대 200개의 커넥션까지 확장하여 요청을 처리할 수 있습니다. 로그에서 볼 수 있듯이 TPS가 높은 상황에서도 커넥션 풀이 충분히 확장되었고, 전체적인 시스템 성능에는 큰 영향을 미치지 않았습니다. 이를 통해 시스템은 높은 TPS 환경에서도 안정적이고 일관된 성능을 제공할 수 있음을 확인할 수 있습니다.</p><h2><span id=\"성능-테스트-결과-분석-tps-감소-상황에서의-커넥션-풀-동작\">성능 테스트 결과 분석: TPS 감소 상황에서의 커넥션 풀 동작</span></h2><p>아래 설정으로 TPS가 낮아진 상황에서 성능 테스트를 진행했습니다.</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    datasource:</span></span><br><span class=\"line\"><span class=\"attr\">        hikari:</span></span><br><span class=\"line\"><span class=\"attr\">            maximum-pool-size:</span> <span class=\"number\">200</span>           <span class=\"comment\"># 최대 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            minimum-idle:</span> <span class=\"number\">10</span>                 <span class=\"comment\"># 최소 유휴 커넥션 수</span></span><br><span class=\"line\"><span class=\"attr\">            max-lifetime:</span> <span class=\"number\">300000</span>             <span class=\"comment\"># 커넥션이 유지될 최대 시간 (밀리초)</span></span><br><span class=\"line\"><span class=\"attr\">            idle-timeout:</span> <span class=\"number\">250000</span>             <span class=\"comment\"># 유휴 커넥션이 유지될 최대 시간 (밀리초)</span></span><br></pre></td></tr></table></figure><ul><li><strong>max-lifetime</strong>: 기본값은 1800000ms (30분)입니다. 각 커넥션이 일정 시간 동안만 유지된 후 새 커넥션으로 교체되도록 하여, 오래된 커넥션으로 인해 발생할 수 있는 문제를 방지합니다. 설정된 시간(예: 300,000ms = 5분) 이후에 커넥션은 제거되고 새로운 커넥션으로 대체됩니다.</li><li><strong>idle-timeout</strong>: 기본값은 600000ms (10분)입니다. 유휴 상태의 커넥션이 설정된 시간 동안 사용되지 않으면 커넥션 풀에서 제거됩니다. 트래픽이 감소한 상황에서는 유휴 커넥션이 줄어들어 리소스가 절약됩니다. 위 설정에서는 250,000ms 동안 유휴 상태인 커넥션을 유지하고 이후에 해제하도록 설정했습니다.</li></ul><h3><span id=\"테스트-결과-분석\">테스트 결과 분석</span></h3><p><img src=\"https://raw.githubusercontent.com/cheese10yun/blog-sample/master/kotlin-coroutine/images/mysql-connection-pool-1-3.png\" alt=\"\"></p><ul><li><strong>Total Requests per Second (RPS)</strong>:<ul><li>TPS가 낮아지며, 초당 요청 처리량이 약 5 수준으로 안정화되었습니다.</li><li>요청 실패(Failures/s)가 발생하지 않았으며, 모든 요청이 성공적으로 처리되었습니다.</li><li>이는 트래픽이 줄어들면서 커넥션 풀이 유휴 상태로 돌아가고 있음을 의미합니다.</li></ul></li><li><strong>Response Times</strong>:<ul><li>50th 및 95th 퍼센타일 응답 시간 모두 약 1,000ms 내외로 일정하게 유지되고 있습니다.</li><li>응답 시간의 변동이 크지 않고 안정적인 수준을 보여, TPS가 낮아진 상황에서도 일관된 성능을 제공하고 있습니다.</li></ul></li><li><strong>Number of Users</strong>:<ul><li>테스트에서 사용자 수가 10명으로 일정하게 유지되고 있으며, TPS가 낮은 상태로 안정화되었습니다.</li></ul></li></ul><h3><span id=\"로그-분석\">로그 분석</span></h3><ul><li><strong>totalConnections</strong>: 15 - 현재 총 15개의 커넥션이 생성되었습니다. 트래픽 감소에 따라 필요 없는 커넥션이 자동으로 해제되며, 풀 크기가 줄어든 상태입니다.</li><li><strong>activeConnections</strong>: 6 - 현재 활성 상태로 사용 중인 커넥션이 6개입니다.</li><li><strong>idleConnections</strong>: 9 - 최소 유휴 커넥션 설정(<code>minimumIdle</code>)이 10이므로, 트래픽이 줄어든 상황에서 9개의 유휴 커넥션이 유지됩니다.</li><li><strong>threadsAwaitingConnection</strong>: 0 - 대기 중인 스레드가 없어 모든 요청이 즉시 처리되고 있습니다.</li><li><strong>maximumPoolSize</strong>: 200 - 최대 커넥션 풀 크기가 200으로 설정되어 있지만, 현재 트래픽 수준에서는 전체를 사용할 필요 없이 적정 개수의 커넥션만 유지하고 있습니다.</li><li><strong>minimumIdle</strong>: 10 - 최소 유휴 커넥션 수가 10으로 설정되어, 트래픽이 적을 때도 최소한의 커넥션을 유지해 자원을 절약합니다.</li><li><strong>maxLifetime</strong>: 300000 (밀리초) - 각 커넥션이 5분(300초) 동안 유지된 후 자동으로 갱신되도록 설정되어 있어, 오래된 커넥션으로 인한 문제를 방지하고 안정적인 연결 상태를 보장합니다.</li><li><strong>idleTimeout</strong>: 250000 (밀리초) - 유휴 상태의 커넥션이 4분 10초 동안 사용되지 않으면 풀에서 해제됩니다. 이를 통해 트래픽이 감소한 상황에서는 유휴 커넥션을 줄여 리소스를 절약할 수 있습니다.</li></ul><p>이 테스트 결과는 TPS가 줄어들면 <code>totalConnections</code>도 함께 감소하며 리소스가 효율적으로 관리되는 모습을 보여줍니다. <code>minimum-idle</code> 설정을 통해 커넥션 풀이 최소 10개의 유휴 커넥션을 유지하고, <code>idleTimeout</code>이 설정된 시간 동안 유휴 상태인 커넥션을 자동으로 해제하여 불필요한 자원 낭비를 방지합니다. 또한 <code>maxLifetime</code> 설정으로 각 커넥션의 유지 시간을 제한하여 일정 시간이 지나면 커넥션이 새롭게 갱신되도록 함으로써 오래된 커넥션으로 인한 문제를 예방합니다. 이를 통해 시스템은 트래픽 변화에 유연하게 대응하며 안정적으로 자원을 관리할 수 있는 구조를 갖추게 됩니다.</p><h2><span id=\"결론\">결론</span></h2><p>HikariCP를 사용한 커넥션 풀 설정은 트래픽 변화에 유연하게 대응할 수 있으며, 성능 최적화를 위해 중요한 도구가 됩니다. 적절한 <code>maximum-pool-size</code>와 <code>minimum-idle</code> 설정을 통해 고TPS 환경에서도 안정적이고 일관된 응답 시간을 제공할 수 있으며, 리소스를 효율적으로 관리하여 비용 절감 효과도 기대할 수 있습니다. 이를 통해 Spring Boot 애플리케이션은 다양한 트래픽 상황에서 성능을 최적화하며, 사용자 경험을 크게 개선할 수 있습니다.</p>",
        "contentSnippet": "Spring Boot는 기본적으로 HikariCP를 내장된 커넥션 풀로 지원하며, 이를 통해 데이터베이스 연결을 효율적으로 관리할 수 있습니다. 이번 포스팅에서는 Spring Boot 환경에서 HikariCP의 설정을 최적화하여 TPS 변화에 유연하게 대응하는 방법을 알아보겠습니다.\nHikariCP 설정 예시\nSpring Boot에서 application.yml 또는 application.properties 파일을 통해 HikariCP 설정을 정의할 수 있습니다. 이번 예시에서는 다음과 같은 설정을 적용하였습니다.\n\n\n1\n2\n3\n4\n5\n6\n7\n\nspring:\n    datasource:\n        hikari:\n            minimum-idle: 10\n            maximum-pool-size: 10\n            idle-timeout: 30000\n            connection-timeout: 20000\n\n\nminimum-idle: 최소 유휴 커넥션 수입니다. 초기 설정 시 최소한의 커넥션(여기서는 10개)만 유지하여, TPS가 낮을 때 리소스를 절약할 수 있습니다.\nmaximum-pool-size: 커넥션 풀의 최대 크기입니다. TPS가 높아질 때 최대 10개의 커넥션까지 생성하여 요청을 처리할 수 있게 설정합니다.\nidle-timeout: 지정된 시간(밀리초) 동안 유휴 상태인 커넥션이 있을 경우 풀에서 제거합니다. 트래픽이 낮아질 때 자동으로 풀 크기를 줄이는 데 기여합니다.\nconnection-timeout: 커넥션을 얻기 위해 대기하는 최대 시간입니다. 이 시간 내에 커넥션을 확보하지 못하면 예외가 발생합니다.\n\nTPS 변화에 따른 커넥션 풀의 동작\n\nTPS가 낮은 경우: Spring Boot 애플리케이션이 유휴 상태이거나 트래픽이 적은 경우, HikariCP는 최소 커넥션(minimum-idle)만 유지하여 리소스 사용을 최적화합니다.\nTPS가 높아질 경우: TPS가 증가하여 커넥션이 필요한 상황이 되면, HikariCP는 최대 커넥션(maximum-pool-size)까지 확장하여 대량의 요청을 처리할 수 있게 합니다. 이를 통해 성능 저하 없이 안정적으로 트래픽을 소화할 수 있습니다.\nTPS가 다시 낮아지는 경우: TPS가 다시 낮아지면 HikariCP는 idle-timeout에 따라 불필요한 커넥션을 풀에서 제거하고, minimum-idle만 유지하여 리소스를 절약합니다.\n\n이 케이스는 MySQL Connection Pool에서 minimum-idle과 maximum-pool-size를 동일하게 설정한 상황에서, TPS가 200대에 도달할 때 발생하는 성능 문제를 다루고 있습니다. 그래프와 로그를 바탕으로 아래와 같이 분석할 수 있습니다.\nTPS가 높아지는 상황에서의 커넥션 풀 동작 분석\nSpring Boot 애플리케이션에서 TPS가 높아질 때, HikariCP의 커넥션 풀이 어떻게 반응하고 성능에 어떤 영향을 미치는지 살펴보겠습니다. 이 테스트는 minimum-idle: 10과 maximum-pool-size: 10 설정을 사용해, 커넥션 풀의 확장성과 한계점을 확인하는 데 중점을 두었습니다.\n애플리케이션은 지속적으로 증가하는 사용자 요청을 처리하며, TPS가 증가함에 따라 커넥션 풀이 최대에 도달하는 시점에서 성능 지연과 요청 실패가 발생하는 과정을 시각적으로 분석했습니다.\n상황 설명\n다음 코드는 Spring Boot와 Kotlin 환경에서 설정된 컨트롤러와 서비스 로직입니다. 컨트롤러에서는 SampleService의 getMember() 메서드를 호출하며, 이 메서드는 1~100 사이의 랜덤 ID로 Member 엔티티를 PK를 기반으로 조회한 후, 1초의 지연 시간을 둔 뒤 커넥션 풀의 현재 상태를 로깅합니다.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n@RestController\n@RequestMapping\nclass SampleController(\n    private val SampleService: SampleService\n) {\n\n    @GetMapping(\"/api/v1/members\")\n    fun sample(): Member {\n        // 1 ~ 100 사이의 랜덤으로 member 조회\n        return SampleService.getMember()\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n@Service\nclass SampleService(\n    private val dataSource: DataSource,\n    private val memberRepository: MemberRepository\n) {\n    private val log = LoggerFactory.getLogger(javaClass)!!\n\n    @Transactional\n    fun getMember(): Member {\n        val findById = memberRepository.findById(Random.nextInt(1, 100).toLong()).get()\n        runBlocking { delay(1000) }\n        val targetDataSource = dataSource.unwrap(HikariDataSource::class.java)\n        val hikariDataSource = targetDataSource as HikariDataSource\n        val hikariPoolMXBean = hikariDataSource.hikariPoolMXBean\n        val hikariConfigMXBean = hikariDataSource.hikariConfigMXBean\n        val log =\n            \"\"\"\n            totalConnections : ${hikariPoolMXBean.totalConnections}\n            activeConnections : ${hikariPoolMXBean.activeConnections}\n            idleConnections : ${hikariPoolMXBean.idleConnections}\n            threadsAwaitingConnection : ${hikariPoolMXBean.threadsAwaitingConnection}\n            maxLifetime : ${hikariConfigMXBean.maxLifetime}\n            maximumPoolSize : ${hikariConfigMXBean.maximumPoolSize}\n            minimumIdle : ${hikariConfigMXBean.minimumIdle}\n            connectionTimeout : ${hikariConfigMXBean.connectionTimeout}\n            validationTimeout : ${hikariConfigMXBean.validationTimeout}\n            idleTimeout : ${hikariConfigMXBean.idleTimeout}\n            \"\"\".trimIndent()\n        this.log.info(log)\n        return findById\n    }\n}\n\n\n이 코드는 지연을 위해 1초 동안 대기한 후, HikariCP 커넥션 풀의 상태를 로깅하여 현재 커넥션 풀 상황을 모니터링할 수 있게 합니다.\n성능 테스트 결과 (위 이미지 설명)\n\n위 이미지는 커넥션 풀 설정이 minimum-idle: 10, maximum-pool-size: 10으로 설정된 상황에서, TPS가 증가함에 따라 성능이 어떻게 변화하는지를 시각화한 결과입니다.\n\nTotal Requests per Second:\n이 그래프는 초당 요청 처리량(RPS, 초록색 라인)과 실패한 요청(Failures, 빨간색 라인)을 보여줍니다.\nTPS가 점진적으로 증가하여 초당 12 요청 수준에 도달했을 때, 실패한 요청이 발생하기 시작했습니다. 이는 커넥션 풀이 최대 용량인 10에 도달하여 더 이상 추가 요청을 처리하지 못하는 상황을 나타냅니다.\n이후 TPS는 유지되지만, 실패한 요청이 지속적으로 발생하면서 커넥션 풀의 제한에 따른 성능 저하가 명확히 드러납니다. 이후 TPS는 응답 지연으로 인해 더 이상 올라가지 않습니다.\n\nResponse Times:\n응답 시간 그래프에서는 50th 퍼센타일(주황색 라인)과 95th 퍼센타일(보라색 라인)의 응답 시간이 시간이 지남에 따라 증가하는 모습이 보입니다.\n특히 TPS가 증가함에 따라 95th 퍼센타일 응답 시간은 약 20,000ms 이상으로 치솟아, 사용자 요청이 큰 지연을 겪고 있음을 나타냅니다.\n이는 커넥션 풀이 가득 차서 새로운 요청이 대기 상태로 전환되었기 때문이며, 트래픽 증가와 함께 시스템의 성능 한계에 도달했음을 보여줍니다.\n\nNumber of Users:\n사용자의 수가 점진적으로 증가하며 시스템에 부하를 가하고 있습니다. 사용자가 약 300명 이상일 때부터 시스템은 커넥션 풀이 한계에 도달하여, 그 이후로는 성능 저하가 본격적으로 발생합니다.\n커넥션 풀 크기를 초과하는 사용자 요청은 실패하거나 긴 대기 시간을 초래하게 되며, 이는 응답 시간 증가와 TPS 유지의 원인이 됩니다.\n\n\n이 이미지에서는 커넥션 풀이 최대 용량에 도달함에 따라, 시스템이 추가적인 요청을 감당하지 못하고 지연 시간과 실패율이 증가하는 과정을 시각적으로 확인할 수 있습니다.\n로그 분석\n\nactiveConnections: 10 - 현재 활성 상태인 모든 커넥션이 사용 중입니다.\nidleConnections: 0 - 유휴 상태의 커넥션은 없습니다.\nthreadsAwaitingConnection: 84 - 84개의 스레드가 커넥션을 기다리고 있습니다.\nmaxLifetime: 1800000 (밀리초) - 커넥션의 최대 수명입니다.\nmaximumPoolSize: 10 - 최대 커넥션 풀 크기가 10으로 설정되어 있습니다.\nminimumIdle: 10 - 최소 유휴 커넥션이 10으로 설정되어 있습니다.\nconnectionTimeout: 30000 (밀리초) - 커넥션을 얻기 위해 대기할 수 있는 최대 시간입니다.\nvalidationTimeout: 5000 (밀리초) - 커넥션 유효성 검사를 위한 시간입니다.\nidleTimeout: 600000 (밀리초) - 유휴 커넥션을 유지하는 최대 시간입니다.\n\n이 로그는 커넥션 풀이 한계에 도달하여 더 이상 커넥션을 확장할 수 없고, 여러 스레드가 커넥션을 기다리면서 성능 저하가 발생하고 있음을 보여줍니다.\n문제 원인\n\n커넥션 풀 크기 제한: 현재 maximum-pool-size가 10으로 설정되어 있어 초당 12개 이상의 요청(TPS)을 처리하기에는 커넥션 풀 크기가 부족합니다. 모든 커넥션이 이미 사용 중이기 때문에, 추가적인 요청이 들어오면 커넥션을 기다리게 되고, 이로 인해 요청 실패가 발생하거나 응답 시간이 길어집니다.\n스레드 대기: 커넥션 풀이 최대 용량에 도달하면서 threadsAwaitingConnection 수가 증가하게 됩니다. 이는 커넥션을 얻지 못한 요청이 대기 상태로 전환되는 상황을 나타내며, TPS가 증가할 때 시스템이 추가 요청을 즉각적으로 처리하지 못하고 성능 저하를 초래하는 주요 원인이 됩니다.\nconnectionTimeout 설정: 현재 connectionTimeout이 30000밀리초(30초)로 설정되어 있어, 커넥션을 기다리는 요청은 최대 30초까지 대기할 수 있습니다. 그러나 이 대기 시간이 길어질수록 전체 응답 시간이 증가하게 되며, 대기 중인 요청이 많아지면 TPS가 상승하기 어려워지고 응답 지연으로 인한 성능 저하가 발생할 수 있습니다.\n\n이러한 문제들은 TPS가 높아질수록 커넥션 풀의 제한으로 인해 전체적인 성능 저하가 발생하게 되는 이유입니다.\n해결 방안\n\nmaximum-pool-size 증가: 현재의 TPS 수요를 충족하기 위해 maximum-pool-size 값을 늘려야 합니다. 예를 들어, 10 이상으로 설정하여 커넥션 풀이 더 많은 요청을 처리할 수 있도록 하면, 요청 대기 시간과 실패를 줄일 수 있습니다.\n동적 커넥션 관리: HikariCP의 특성을 활용해 minimum-idle과 maximum-pool-size를 적절히 조정하여 트래픽 변화에 유연하게 대응할 수 있도록 합니다. TPS가 높아질 때는 커넥션 풀이 자동으로 확장되도록 하고, TPS가 감소할 때는 최소한의 커넥션만 유지해 리소스를 절약하도록 설정하는 것이 좋습니다.\n모니터링 및 지속적인 튜닝: 커넥션 풀의 상태를 지속적으로 모니터링하여, 트래픽 패턴에 맞게 적절히 튜닝하는 것이 필요합니다. 정기적인 모니터링을 통해 TPS와 응답 시간 변화를 관찰하고, 필요에 따라 maximum-pool-size, connectionTimeout 등의 설정을 조정하여 최적의 성능을 유지할 수 있습니다.\n\n이러한 방안들은 트래픽 변동에 따라 유연하게 커넥션 풀을 관리하고, 시스템 성능을 최적화하는 데 도움이 됩니다.\n성능 테스트 결과 분석: maximum-pool-size를 200으로 조정한 경우\n\n\n1\n2\n3\n4\n5\n\nspring:\n    datasource:\n        hikari:\n            maximum-pool-size: 200           # 최대 커넥션 수\n            minimum-idle: 10                 # 최소 유휴 커넥션 수\n\n\n위와 같이 maximum-pool-size를 200, minimum-idle을 10으로 설정하여 테스트를 진행한 결과, 커넥션 풀이 충분히 확장 가능해지면서 시스템 성능이 크게 개선되었습니다. 주요 개선 사항은 다음과 같습니다.\n\n\nTotal Requests per Second (RPS):\nRPS가 점진적으로 증가하여 높은 TPS를 안정적으로 처리할 수 있게 되었습니다. 초당 요청 처리량이 약 150까지 증가했음에도 불구하고, 실패한 요청(Failures/s)은 발생하지 않았습니다.\n이는 커넥션 풀이 충분히 확장되어, 모든 요청이 처리되는 동안 커넥션 부족으로 인한 대기 시간이 발생하지 않았음을 의미합니다.\n\nResponse Times:\n응답 시간 그래프에서 50th 및 95th 퍼센타일 응답 시간이 비교적 안정적인 수준을 유지하고 있습니다.\n95th 퍼센타일 응답 시간은 약 3,000ms 이하로, 50th 퍼센타일은 약 1,000ms 내외로 유지되었습니다. 이는 고TPS 상황에서도 일관된 응답 속도를 제공할 수 있음을 보여줍니다.\n이전 설정에서 발생했던 응답 시간의 급격한 증가가 해소되어, 사용자 경험이 크게 개선되었습니다.\n\nFailures/s 비율:\n요청 실패율이 0으로 유지되었습니다. maximum-pool-size를 200으로 설정한 덕분에, connectionTimeout으로 인해 대기 상태에서 실패하는 요청이 없었습니다.\n이로써 고TPS 상황에서도 안정적인 서비스가 가능해졌으며, 대량의 동시 요청을 처리하는 데 적합한 환경이 조성되었습니다.\n\n\n로그 분석\n\ntotalConnections: 152 - 현재 총 152개의 커넥션이 생성되었습니다.\nactiveConnections: 152 - 모든 커넥션이 활성 상태로 사용 중입니다.\nidleConnections: 0 - 유휴 상태의 커넥션은 없습니다.\nthreadsAwaitingConnection: 48 - 48개의 스레드가 커넥션을 기다리고 있습니다.\nmaximumPoolSize: 200 - 최대 커넥션 풀 크기가 200으로 설정되었습니다.\nminimumIdle: 10 - 최소 유휴 커넥션이 10으로 설정되어 있어, 초기에 모든 커넥션이 생성된 상태입니다.\n\n이 설정을 통해 커넥션 풀은 트래픽이 적을 때에는 최소한의 자원만 사용하고, 트래픽이 증가할 때에는 최대 200개의 커넥션까지 확장하여 요청을 처리할 수 있습니다. 로그에서 볼 수 있듯이 TPS가 높은 상황에서도 커넥션 풀이 충분히 확장되었고, 전체적인 시스템 성능에는 큰 영향을 미치지 않았습니다. 이를 통해 시스템은 높은 TPS 환경에서도 안정적이고 일관된 성능을 제공할 수 있음을 확인할 수 있습니다.\n성능 테스트 결과 분석: TPS 감소 상황에서의 커넥션 풀 동작\n아래 설정으로 TPS가 낮아진 상황에서 성능 테스트를 진행했습니다.\n\n\n1\n2\n3\n4\n5\n6\n7\n\nspring:\n    datasource:\n        hikari:\n            maximum-pool-size: 200           # 최대 커넥션 수\n            minimum-idle: 10                 # 최소 유휴 커넥션 수\n            max-lifetime: 300000             # 커넥션이 유지될 최대 시간 (밀리초)\n            idle-timeout: 250000             # 유휴 커넥션이 유지될 최대 시간 (밀리초)\n\n\nmax-lifetime: 기본값은 1800000ms (30분)입니다. 각 커넥션이 일정 시간 동안만 유지된 후 새 커넥션으로 교체되도록 하여, 오래된 커넥션으로 인해 발생할 수 있는 문제를 방지합니다. 설정된 시간(예: 300,000ms = 5분) 이후에 커넥션은 제거되고 새로운 커넥션으로 대체됩니다.\nidle-timeout: 기본값은 600000ms (10분)입니다. 유휴 상태의 커넥션이 설정된 시간 동안 사용되지 않으면 커넥션 풀에서 제거됩니다. 트래픽이 감소한 상황에서는 유휴 커넥션이 줄어들어 리소스가 절약됩니다. 위 설정에서는 250,000ms 동안 유휴 상태인 커넥션을 유지하고 이후에 해제하도록 설정했습니다.\n\n테스트 결과 분석\n\n\nTotal Requests per Second (RPS):\nTPS가 낮아지며, 초당 요청 처리량이 약 5 수준으로 안정화되었습니다.\n요청 실패(Failures/s)가 발생하지 않았으며, 모든 요청이 성공적으로 처리되었습니다.\n이는 트래픽이 줄어들면서 커넥션 풀이 유휴 상태로 돌아가고 있음을 의미합니다.\n\nResponse Times:\n50th 및 95th 퍼센타일 응답 시간 모두 약 1,000ms 내외로 일정하게 유지되고 있습니다.\n응답 시간의 변동이 크지 않고 안정적인 수준을 보여, TPS가 낮아진 상황에서도 일관된 성능을 제공하고 있습니다.\n\nNumber of Users:\n테스트에서 사용자 수가 10명으로 일정하게 유지되고 있으며, TPS가 낮은 상태로 안정화되었습니다.\n\n\n로그 분석\n\ntotalConnections: 15 - 현재 총 15개의 커넥션이 생성되었습니다. 트래픽 감소에 따라 필요 없는 커넥션이 자동으로 해제되며, 풀 크기가 줄어든 상태입니다.\nactiveConnections: 6 - 현재 활성 상태로 사용 중인 커넥션이 6개입니다.\nidleConnections: 9 - 최소 유휴 커넥션 설정(minimumIdle)이 10이므로, 트래픽이 줄어든 상황에서 9개의 유휴 커넥션이 유지됩니다.\nthreadsAwaitingConnection: 0 - 대기 중인 스레드가 없어 모든 요청이 즉시 처리되고 있습니다.\nmaximumPoolSize: 200 - 최대 커넥션 풀 크기가 200으로 설정되어 있지만, 현재 트래픽 수준에서는 전체를 사용할 필요 없이 적정 개수의 커넥션만 유지하고 있습니다.\nminimumIdle: 10 - 최소 유휴 커넥션 수가 10으로 설정되어, 트래픽이 적을 때도 최소한의 커넥션을 유지해 자원을 절약합니다.\nmaxLifetime: 300000 (밀리초) - 각 커넥션이 5분(300초) 동안 유지된 후 자동으로 갱신되도록 설정되어 있어, 오래된 커넥션으로 인한 문제를 방지하고 안정적인 연결 상태를 보장합니다.\nidleTimeout: 250000 (밀리초) - 유휴 상태의 커넥션이 4분 10초 동안 사용되지 않으면 풀에서 해제됩니다. 이를 통해 트래픽이 감소한 상황에서는 유휴 커넥션을 줄여 리소스를 절약할 수 있습니다.\n\n이 테스트 결과는 TPS가 줄어들면 totalConnections도 함께 감소하며 리소스가 효율적으로 관리되는 모습을 보여줍니다. minimum-idle 설정을 통해 커넥션 풀이 최소 10개의 유휴 커넥션을 유지하고, idleTimeout이 설정된 시간 동안 유휴 상태인 커넥션을 자동으로 해제하여 불필요한 자원 낭비를 방지합니다. 또한 maxLifetime 설정으로 각 커넥션의 유지 시간을 제한하여 일정 시간이 지나면 커넥션이 새롭게 갱신되도록 함으로써 오래된 커넥션으로 인한 문제를 예방합니다. 이를 통해 시스템은 트래픽 변화에 유연하게 대응하며 안정적으로 자원을 관리할 수 있는 구조를 갖추게 됩니다.\n결론\nHikariCP를 사용한 커넥션 풀 설정은 트래픽 변화에 유연하게 대응할 수 있으며, 성능 최적화를 위해 중요한 도구가 됩니다. 적절한 maximum-pool-size와 minimum-idle 설정을 통해 고TPS 환경에서도 안정적이고 일관된 응답 시간을 제공할 수 있으며, 리소스를 효율적으로 관리하여 비용 절감 효과도 기대할 수 있습니다. 이를 통해 Spring Boot 애플리케이션은 다양한 트래픽 상황에서 성능을 최적화하며, 사용자 경험을 크게 개선할 수 있습니다.",
        "summary": "\n    \n      \n      \n        <p>Spring Boot는 기본적으로 HikariCP를 내장된 커넥션 풀로 지원하며, 이를 통해 데이터베이스 연결을 효율적으로 관리할 수 있습니다. 이번 포스팅에서는 Spring Boot 환경에서 HikariCP의 설정을 최적화하여 TPS 변화에 유\n      \n    \n    ",
        "id": "https://cheese10yun.github.io/mysql-connection-pool-timeout-1/",
        "isoDate": "2024-10-25T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": [
      {
        "creator": "김상훈",
        "title": "그게 뭐 대단한 정보라고",
        "link": "https://interpiler.com/2024/10/25/%ea%b7%b8%ea%b2%8c-%eb%ad%90-%eb%8c%80%eb%8b%a8%ed%95%9c-%ec%a0%95%eb%b3%b4%eb%9d%bc%ea%b3%a0/",
        "pubDate": "Fri, 25 Oct 2024 07:20:48 +0000",
        "content:encodedSnippet": "어느 날 길을 걷다가 누군가 낯선 사람이 내게 다가와서 “김상훈씨 되시죠? 13년 전에 출간하셨던 책을 감명깊게 읽었습니다. 평소 온라인에 글 쓰시는 것도 잘 보고 있어요”라고 말한다면, 나는 아마 무장해제되어 고맙다, 누구시냐, 잘 부탁한다, 이런 소리를 할 듯.\n그런데 정작 이 낯선 사람이 나에 대해 아무 것도 모르는 사람이었다면? 그냥 쓰고 있던 스마트렌즈에 떠오른 정보로 내게 아무 말이나 걸어서 경계심을 해제하고 사기라도 치려고 들었다면? 순식간에 범죄의 피해자가 되기 쉽다.\n이런 일이 얼마나 쉽게 가능한지 미국 대학생 두 명이 실험을 벌였다. 메타의 레이밴 스마트안경과 PimEyes라는 얼굴 검색 서비스를 결합해 실제 영상을 촬영해 공개한 것.\nAre we ready for a world where our data is exposed at a glance? @CaineArdayfio and I offer an answer to protect yourself here:https://t.co/LhxModhDpk pic.twitter.com/Oo35TxBNtD\n— AnhPhu Nguyen (@AnhPhuNguyen1) September 30, 2024\n https://platform.twitter.com/widgets.js\n\n\n\n영상을 보면, 이들이 지하철역에서 만난 한 남성에게 다가가 “예전에 인도에서 무슬림 등 소수자 관련 업무를 하지 않으셨어요?”라고 물어보는 장면이 나온다. 남성은 예전에 인도에서 기자일을 한 적이 있고, 관련 글을 썼기 때문에 자기를 알아보는 이 학생과 반갑게 악수를 나눈다.\n두 학생이 개발한 뛰어난 기술 같은 건 없다. 이미 시판중인 레이밴 스마트안경에는 카메라가 달려있어서 실시간으로 주변을 인식할 수 있고, 이렇게 촬영되는 사람 얼굴 사진을 PimEyes로 보낸 뒤, 검색결과를 스마트 안경에 띄우면 그만이다. 내게 사진이 있고 컴퓨터가 있다면, 자리에 앉아서는 얼마든지 쉽게 할 수 있는 일이다. 단지 거리에 서서 처음 만난 사람에게 다가가는 용도로 쓴다는 게 흔한 상황이 아니기 때문에 사람들이 속아넘어간 셈이다.\n“그게 뭐 대단한 정보라고”라는 말이 그래서 어느 때보다 위험한 시대다.\n정보는 하나하나가 비밀이라 중요하기도 하지만, 개별적으로는 쓸데없어 보이는 정보들을 모아놓을 때 위력이 생기는 경우가 더 많다.\n특히 PimEyes 서비스는 시작 직후부터 온갖 논란을 낳았다. 인터넷을 뒤져 온갖 얼굴 사진 DB를 확보한 뒤 이를 실제 사람 얼굴과 비교해 찾아주는 서비스다보니 당연한 일. 예를 들어 셰어 스칼렛 같은 인물의 사례가 대표적이다. 스칼렛은 애플의 내부 고발자로서 ‘AppleToo’ 운동을 벌였던 사람으로 유명한데, 불우하게 성장한 탓에 19세에는 잠시 포르노 업계를 기웃거린 일이 있다. 그녀가 PimEyes를 뒤지자 잊고 싶었던 당시 사진들이 검색된 것. 당연히 삭제를 요청했지만, 회사는 프리미엄 요금에 추가 가입하라고 요구했다.\n감추고 싶었던 나의 옛 실수들이 실시간으로 나를 만나는 사람들의 눈앞에 검색되어 나타난다면 생각만해도 끔찍하다. 애초에 이 학생들이 이 영상을 만든 것도 개인정보가 얼마나 중요한지, 어떻게 온라인에서 우리 정보를 관리해야 하는지 경각심을 느껴보자는 취지였다고.\n결론: 인터넷에 영상, 사진, 글을 올리는 일은 매우매우 위험한 일입니다.",
        "dc:creator": "김상훈",
        "comments": "https://interpiler.com/2024/10/25/%ea%b7%b8%ea%b2%8c-%eb%ad%90-%eb%8c%80%eb%8b%a8%ed%95%9c-%ec%a0%95%eb%b3%b4%eb%9d%bc%ea%b3%a0/#respond",
        "content": "어느 날 길을 걷다가 누군가 낯선 사람이 내게 다가와서 &#8220;김상훈씨 되시죠? 13년 전에 출간하셨던 책을 감명깊게 읽었습니다. 평소 온라인에 글 쓰시는 것도 잘 보고 있어요&#8221;라고 말한다면, 나는 아마 무장해제되어 고맙다, 누구시냐, 잘 부탁한다, 이런 소리를 할 듯. 그런데 정작 이 낯선 사람이 나에 대해 아무 것도 모르는 사람이었다면? 그냥 쓰고 있던 스마트렌즈에 떠오른 정보로 내게 &#8230; <a href=\"https://interpiler.com/2024/10/25/%ea%b7%b8%ea%b2%8c-%eb%ad%90-%eb%8c%80%eb%8b%a8%ed%95%9c-%ec%a0%95%eb%b3%b4%eb%9d%bc%ea%b3%a0/\" class=\"more-link\">계속 읽기 <span class=\"screen-reader-text\">그게 뭐 대단한&#160;정보라고</span> <span class=\"meta-nav\">\t</span></a>",
        "contentSnippet": "어느 날 길을 걷다가 누군가 낯선 사람이 내게 다가와서 “김상훈씨 되시죠? 13년 전에 출간하셨던 책을 감명깊게 읽었습니다. 평소 온라인에 글 쓰시는 것도 잘 보고 있어요”라고 말한다면, 나는 아마 무장해제되어 고맙다, 누구시냐, 잘 부탁한다, 이런 소리를 할 듯. 그런데 정작 이 낯선 사람이 나에 대해 아무 것도 모르는 사람이었다면? 그냥 쓰고 있던 스마트렌즈에 떠오른 정보로 내게 … 계속 읽기 그게 뭐 대단한 정보라고",
        "guid": "http://interpiler.com/?p=1518",
        "categories": [
          "That's IT",
          "AI",
          "레이밴",
          "메타",
          "개인정보",
          "스마트글래스",
          "얼굴인식",
          "PimEyes"
        ],
        "isoDate": "2024-10-25T07:20:48.000Z"
      }
    ]
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": [
      {
        "title": "흑백 요리사를 보고",
        "link": "https://elky84.github.io/2024/10/30/culinary_class_wars/",
        "pubDate": "Wed, 30 Oct 2024 00:00:00 +0000",
        "content": "<p>최근 핫하다는 흑백요리사를 봤다.</p>\n\n<p>경연으로서의 재미 그 자체만으로도 재밌게 볼 수 있었지만, <a href=\"https://namu.wiki/w/%EC%95%88%EC%84%B1%EC%9E%AC\">안성재 - 나무위키</a> 셰프님의 심사가 굉장히 인상적이었다.</p>\n\n<p>한국의 유일한 미쉐린 3스타 오너 셰프였던 분 답게, 섬세하고 수준 높은 기준을 보여주셨다고 생각한다.</p>\n\n<p>모든 사람은 개인의 취향이 있기에, 이러한 부분이 반영된 평가가 있었지만, 기본적으로 기준점을 잘 잡으려했다는 것이 느껴졌다.</p>\n\n<p>평가 기준에 요리 자체의 퀄리티가 기준 이상인가, 맛있는가 외에, 의도가 명확했고 그 의도가 잘 전달 되었는가를 보는 것이 특히 인상적이었다.</p>\n\n<hr />\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre>물론 개인적으로 스트릭트한 기준보다, 최현석 쉐프님의 자유도 높은 해석이 더 취향에 맞고, 그러한 성향이지만, \n그러한 성향은 업무보다는 Dev Toy에서 더 많이 녹이고 있으며, \n업무에서의 태도나 엔지니어적인 측면에서는 안성재 셰프님의 스트릭트함을 조금 더 많은 엔지니어에게서 보았고, \n나 역시 일정 부분 그러한 성향을 후천적으로 가지게 됐기도 해서 재밌었다.\n\n개인적으로는 자유도와 스트릭트함의 적정선을 잡는 것이 중요하고, 이 것이 팀웍과 팀 완성도에 영향을 준다고 생각하는 편이긴하다.\n</pre></td></tr></tbody></table></code></pre></div></div>\n\n<hr />\n\n<p>종종 개발에 대한 가치관이나 생각을 이야기 하게 될 때, 나 역시 어느 시기 이후에는 비슷한 기준을 공유하고, 비슷한 판단을 내리게 될 수록 팀웍이 좋은 것이다라고 판단한다고 말하곤 했는데, 그러기 위해선 의도가 느껴지는 결과물이 있어야 한다.</p>\n\n<p>의도가 좋음에도 결과물에서 그러한 점이 느껴지지 못한다면, 잘못된 구현일 확률이나 퀄리티가 낮아서 그 의도 자체가 체감이 안될 수 있기 때문이다.</p>\n\n<p>누군가 자신의 결과물이 왜 이러한 형태인지, 그리고 어떤 생각을 가지고 있는지를 느끼도록 해야 한다는 점을 중요시 여겼는데, 이러한 기준이 요리에도 있다는 것이 재밌었다.</p>\n\n<hr />\n\n<p>안성재 셰프님이 까다로운 면을 많이 보여주셨지만, 고 퀄리티여야만 하는 파인 다이닝이라는 분야를 생각해보았을 때, 그러한 깐깐함이 높은 퀄리티로 치환되는게 아닐까 싶었다.</p>\n\n<p>지금 흑백 요리사 유행으로 다양한 유튜브 채널 등에 출연진 분들이 나오고 계시기도 하고, 식당들은 연일 매진이라고 한다.</p>\n\n<p>유행이 조금 지나가야 예약이 가능할 거 같고, 몇몇 셰프 분들의 매장은 없는 경우도 많아서 아쉽긴 하지만, 여러모로 재미도 있었고 많은 감정이 든 재밌는 프로그램이었고, 팀 미션 등도 아주 인상적이었다.</p>\n\n<p>개인의 성향, 가치관 등을 엿볼 수 있는 면도 있었고, 인물 조명의 비중이라 거나, 리더에게 큰 비중이 가는 팀 미션 등 조금 아쉬운 측면들이 보이긴했으나 시즌1의 역할은 충분히 해준 재밌는 프로그램이었고, 역시 이러한 높은 수준의 분들이 나오는 방송은 많은 감정이 드는 것 같다.</p>\n",
        "contentSnippet": "최근 핫하다는 흑백요리사를 봤다.\n경연으로서의 재미 그 자체만으로도 재밌게 볼 수 있었지만, 안성재 - 나무위키 셰프님의 심사가 굉장히 인상적이었다.\n한국의 유일한 미쉐린 3스타 오너 셰프였던 분 답게, 섬세하고 수준 높은 기준을 보여주셨다고 생각한다.\n모든 사람은 개인의 취향이 있기에, 이러한 부분이 반영된 평가가 있었지만, 기본적으로 기준점을 잘 잡으려했다는 것이 느껴졌다.\n평가 기준에 요리 자체의 퀄리티가 기준 이상인가, 맛있는가 외에, 의도가 명확했고 그 의도가 잘 전달 되었는가를 보는 것이 특히 인상적이었다.\n\n\n\n\n1\n2\n3\n4\n5\n6\n\n물론 개인적으로 스트릭트한 기준보다, 최현석 쉐프님의 자유도 높은 해석이 더 취향에 맞고, 그러한 성향이지만, \n그러한 성향은 업무보다는 Dev Toy에서 더 많이 녹이고 있으며, \n업무에서의 태도나 엔지니어적인 측면에서는 안성재 셰프님의 스트릭트함을 조금 더 많은 엔지니어에게서 보았고, \n나 역시 일정 부분 그러한 성향을 후천적으로 가지게 됐기도 해서 재밌었다.\n\n개인적으로는 자유도와 스트릭트함의 적정선을 잡는 것이 중요하고, 이 것이 팀웍과 팀 완성도에 영향을 준다고 생각하는 편이긴하다.\n\n\n\n\n종종 개발에 대한 가치관이나 생각을 이야기 하게 될 때, 나 역시 어느 시기 이후에는 비슷한 기준을 공유하고, 비슷한 판단을 내리게 될 수록 팀웍이 좋은 것이다라고 판단한다고 말하곤 했는데, 그러기 위해선 의도가 느껴지는 결과물이 있어야 한다.\n의도가 좋음에도 결과물에서 그러한 점이 느껴지지 못한다면, 잘못된 구현일 확률이나 퀄리티가 낮아서 그 의도 자체가 체감이 안될 수 있기 때문이다.\n누군가 자신의 결과물이 왜 이러한 형태인지, 그리고 어떤 생각을 가지고 있는지를 느끼도록 해야 한다는 점을 중요시 여겼는데, 이러한 기준이 요리에도 있다는 것이 재밌었다.\n안성재 셰프님이 까다로운 면을 많이 보여주셨지만, 고 퀄리티여야만 하는 파인 다이닝이라는 분야를 생각해보았을 때, 그러한 깐깐함이 높은 퀄리티로 치환되는게 아닐까 싶었다.\n지금 흑백 요리사 유행으로 다양한 유튜브 채널 등에 출연진 분들이 나오고 계시기도 하고, 식당들은 연일 매진이라고 한다.\n유행이 조금 지나가야 예약이 가능할 거 같고, 몇몇 셰프 분들의 매장은 없는 경우도 많아서 아쉽긴 하지만, 여러모로 재미도 있었고 많은 감정이 든 재밌는 프로그램이었고, 팀 미션 등도 아주 인상적이었다.\n개인의 성향, 가치관 등을 엿볼 수 있는 면도 있었고, 인물 조명의 비중이라 거나, 리더에게 큰 비중이 가는 팀 미션 등 조금 아쉬운 측면들이 보이긴했으나 시즌1의 역할은 충분히 해준 재밌는 프로그램이었고, 역시 이러한 높은 수준의 분들이 나오는 방송은 많은 감정이 드는 것 같다.",
        "guid": "https://elky84.github.io/2024/10/30/culinary_class_wars/",
        "categories": [
          "생각",
          "흑백요리사",
          "의도",
          "생각"
        ],
        "isoDate": "2024-10-30T00:00:00.000Z"
      },
      {
        "title": "때로는 머리보다 손이 먼저",
        "link": "https://elky84.github.io/2024/10/29/type-first/",
        "pubDate": "Tue, 29 Oct 2024 00:00:00 +0000",
        "content": "<p>회사를 다니면서 많은 주니어 개발자와 함께 일하게 된다.</p>\n\n<p>여러 상황에서 이야기를 종종 듣게 되고, 옛날 생각에 빠지기도 한다.</p>\n\n<p>그 중 많이 듣게 되는 이야기는</p>\n\n<blockquote>\n  <p>코드를 잘 짜고 싶은데, 제가 짠 코드는 퀄리티가 낮은 거 같아서 커밋하기 무서워요</p>\n</blockquote>\n\n<blockquote>\n  <p>감이 잘 안 잡혀서, 어떻게 구현해야 할지 모르겠어요.</p>\n</blockquote>\n\n<blockquote>\n  <p>구현은 할 수 있겠는데, 좋은 구조가 떠오르지 않아요.</p>\n</blockquote>\n\n<p>같은 이야기를 듣게 된다.</p>\n\n<p>자신의 상황에 따라 다르겠지만, 꽤나 많은 케이스는 많이 부딪혀보고 깨닳고, 반성하는 결과를 받아들여야 함에도 이 시기를 뒤로 미루다보면 성장이 늦어지는 경우가 많았다.</p>\n\n<hr />\n\n<p>많은 분들이 그러하듯 나 역시 신입 시절에 잘하고 싶은 열망이 컸던 거 같다.</p>\n\n<p>그렇다보니 무언가 부족함이  부족한 결과물은 커밋하기 꺼려했다.</p>\n\n<p>자연스레 이터레이션 주기는 길어지고, 그럼에도 충분한 퀄리티에 도달하지 못했다.</p>\n\n<p>얼마 지나지 않아 행운인지 불행인지, 당시 재직중인 회사의 서비스가 온라인 게임 CBT1차를 지나 2차 단계였으므로, 부족하더라도 일정에 맞춰 빠른 결과물이 더 중요했다.</p>\n\n<p>자연스레 버그는 많았고, BTS목록을 거의 다 쳐내고 출시를 했지만, QA에서 검증되기 어려운 복잡한 조건의 버그들이 나의 부족한 실력을 책망하는 것 같아 괴로웠다.</p>\n\n<p>적지 않은 시간의 노력을 통해서 버그는 서서히 잡혀갔으며, 버그를 줄이기 위해 어떠한 습관을 가져야 하는지 나만의 방식과 규칙을 가지게 됐다.</p>\n\n<p>한동안은 반작용으로 구현 속도가 느려졌는데, 경험의 축적, 계획과 기록의 디테일이 좋아지면서 결국 구현도, 퀄리티도 좋아지는 것을 체감할 수 있었다.</p>\n\n<hr />\n\n<p>과연 저 시기에 고민하는 시간만 길어진다고 해서 내 실력이 늘었을까?</p>\n\n<p>아마도 그렇진 않았을 거다.</p>\n\n<p>더 잘하고 싶을 수록, 더 많이 구현하고, 버리고, 개선하는 사이클을 최대한 앞당기고, 반복 횟수도 늘릴 수록 좋다고 생각 한다.</p>\n\n<p><a href=\"https://jeho.page/essay/2022/01/25/shit-code.html\">처음은 다 개떡 같은 코드로 시작하는 거죠 (K리그 프로그래머)</a></p>\n\n<p>개떡같은 코드라도 요구 사항을 충족 시킨 뒤에, 리팩토링을 하던, 구조화 하던, 규칙과 어울리는 코드를 짤 수 있다.</p>\n\n<p>나는 아직도 예광탄을 쏘거나 프로토타이핑을 쏴볼 수록 감도 잘 잡히고, 판단도 좋아진다.</p>\n\n<blockquote>\n  <p>개떡같은 코드가 어때서? 빠르게 결과를 맞이하고 다시 고치면 되지</p>\n</blockquote>\n\n<p>물론 모든 환경에서 이렇게 일하기엔 어려울 수 있다. 그래서 Dev Toy나 업무 프로젝트 저장소의 branch에서 마음껏 해보라는 뜻으로 받아들여도 좋다.</p>\n\n<p>중요한 것은 개떡 같은 코드일지라도 마음껏, 자주 구현해보는 것이 가져다 주는 성장의 기회를 놓치지 않았으면 좋겠다.</p>\n",
        "contentSnippet": "회사를 다니면서 많은 주니어 개발자와 함께 일하게 된다.\n여러 상황에서 이야기를 종종 듣게 되고, 옛날 생각에 빠지기도 한다.\n그 중 많이 듣게 되는 이야기는\n코드를 잘 짜고 싶은데, 제가 짠 코드는 퀄리티가 낮은 거 같아서 커밋하기 무서워요\n감이 잘 안 잡혀서, 어떻게 구현해야 할지 모르겠어요.\n구현은 할 수 있겠는데, 좋은 구조가 떠오르지 않아요.\n같은 이야기를 듣게 된다.\n자신의 상황에 따라 다르겠지만, 꽤나 많은 케이스는 많이 부딪혀보고 깨닳고, 반성하는 결과를 받아들여야 함에도 이 시기를 뒤로 미루다보면 성장이 늦어지는 경우가 많았다.\n많은 분들이 그러하듯 나 역시 신입 시절에 잘하고 싶은 열망이 컸던 거 같다.\n그렇다보니 무언가 부족함이  부족한 결과물은 커밋하기 꺼려했다.\n자연스레 이터레이션 주기는 길어지고, 그럼에도 충분한 퀄리티에 도달하지 못했다.\n얼마 지나지 않아 행운인지 불행인지, 당시 재직중인 회사의 서비스가 온라인 게임 CBT1차를 지나 2차 단계였으므로, 부족하더라도 일정에 맞춰 빠른 결과물이 더 중요했다.\n자연스레 버그는 많았고, BTS목록을 거의 다 쳐내고 출시를 했지만, QA에서 검증되기 어려운 복잡한 조건의 버그들이 나의 부족한 실력을 책망하는 것 같아 괴로웠다.\n적지 않은 시간의 노력을 통해서 버그는 서서히 잡혀갔으며, 버그를 줄이기 위해 어떠한 습관을 가져야 하는지 나만의 방식과 규칙을 가지게 됐다.\n한동안은 반작용으로 구현 속도가 느려졌는데, 경험의 축적, 계획과 기록의 디테일이 좋아지면서 결국 구현도, 퀄리티도 좋아지는 것을 체감할 수 있었다.\n과연 저 시기에 고민하는 시간만 길어진다고 해서 내 실력이 늘었을까?\n아마도 그렇진 않았을 거다.\n더 잘하고 싶을 수록, 더 많이 구현하고, 버리고, 개선하는 사이클을 최대한 앞당기고, 반복 횟수도 늘릴 수록 좋다고 생각 한다.\n처음은 다 개떡 같은 코드로 시작하는 거죠 (K리그 프로그래머)\n개떡같은 코드라도 요구 사항을 충족 시킨 뒤에, 리팩토링을 하던, 구조화 하던, 규칙과 어울리는 코드를 짤 수 있다.\n나는 아직도 예광탄을 쏘거나 프로토타이핑을 쏴볼 수록 감도 잘 잡히고, 판단도 좋아진다.\n개떡같은 코드가 어때서? 빠르게 결과를 맞이하고 다시 고치면 되지\n물론 모든 환경에서 이렇게 일하기엔 어려울 수 있다. 그래서 Dev Toy나 업무 프로젝트 저장소의 branch에서 마음껏 해보라는 뜻으로 받아들여도 좋다.\n중요한 것은 개떡 같은 코드일지라도 마음껏, 자주 구현해보는 것이 가져다 주는 성장의 기회를 놓치지 않았으면 좋겠다.",
        "guid": "https://elky84.github.io/2024/10/29/type-first/",
        "categories": [
          "태도",
          "태도"
        ],
        "isoDate": "2024-10-29T00:00:00.000Z"
      },
      {
        "title": "함께 일하기",
        "link": "https://elky84.github.io/2024/10/27/working_together/",
        "pubDate": "Sun, 27 Oct 2024 00:00:00 +0000",
        "content": "<h1 id=\"개요\">개요</h1>\n\n<p>개발자로 일하다 보면 생각보다 많은 수의 개발자가, 솔로 플레이처럼 일하는 경우가 많다.</p>\n\n<p>함께 일한다는 의미는, 서로의 생각과 방향이 비슷해지고, 서로 돕고 도움 받는 것을 통해 시너지가 나는 것이라고 생각한다.</p>\n\n<p>허나 나의 판단만 옳다고 여기거나, 내가 틀릴 리 없어와 같은 생각으로 문제 상황을 회피하거나 숨기는 경향을 보이는 경우도 많다.</p>\n\n<p>애석하게도 버그는 개발자에게 필연적인 요소다. 버그가 없었다면 난도가 높지 않았거나, 이미 숙련된 일을 해내고 있을 확률이 높다.</p>\n\n<p>훌륭한 개발자들이 모여있을 빅 테크의 제품도, 수없이 많은 버그 픽스와 보안 패치가 이뤄진다.</p>\n\n<p>이는 당연하게도 버그란 없을 수 없고, 때로는 요구 사항에 대한 이해도 차이로도 버그로 판정될 수도 있다는 뜻이다.</p>\n\n<h1 id=\"결국은-팀-작업\">결국은 팀 작업</h1>\n\n<p>Dev Toy 프로덕트나, 스타트업의 MVP, 인하우스 혹은 백 오피스 도구 중에서도 규모 작은 수준의 제품이라면 모를까 고도화가 되거나 제품이 커지다 보면 결국 팀 작업이 된다.</p>\n\n<p>내가 똑똑함을, 내 생각이 옳음을 증명하기 보다는 <strong>근거를 만들고 설득을 시도하는 습관</strong>이 좋다.</p>\n\n<p>많은 회사가 개발자 채용 시에, <strong>근거 기반의 사고</strong>, <strong>논리력</strong>을 보는 경우가 많은데 바로 그렇게 일하는 사람이 팀에, 회사에 도움이 된다는 것을 체감했기 때문이다.</p>\n\n<p>결국 건강한 토론을 해야 되는데, 닫혀있는 사람과는 소모적인 토론이 일어나기 때문이다.</p>\n\n<p>심지어는 자신만 옳다고 여기는 사람은, 토론 자체가 성립이 안되는 경우도 생기기 때문에, 팀을 구성하는 데에 있어 리더, 구성원 할 거 없이 열려 있는 사람이 좋은 결과로 이어진다고 생각한다.</p>\n\n<h1 id=\"그렇다고-역량이-안-중요하진-않지만\">그렇다고 역량이 안 중요하진 않지만…</h1>\n\n<p>역량이 부족하면 결국 다른 구성원들이 메꿔야 되는 상황도 존재하고, 기술 부채도 더 많이 만들게 되는 등 다양한 문제를 만드는 것은 사실이다.</p>\n\n<p>하지만 개인적인 경험상 역량이 부족한 사람보다, 닫혀 있는 사람이 더 팀웍이나 팀 퍼포먼스에 악영향을 줬다.</p>\n\n<p>물론 여러가지 측면에서 다 만족스러운 사람을 채용하는 것이 베스트겠지만, 긴가 민가 하거나 리스크가 걱정 되는 상황에서의 채용을 해야 되는 상황이라면, 역량이 부족하지만 태도가 좋은 사람을 채용하고, 이 사람의 스킬과 업무 스킬에 도움을 주는 쪽이 더 낫다고 생각한다.</p>\n\n<h1 id=\"마치며\">마치며</h1>\n\n<p>결국은 사람과 사람이 하는 일이다 보니, 왜 날이 선 사람, 자신만 옳다고 느끼는 사람, 동료에 대한 존중이 부족한 사람에 대한 채용을 꺼려 하는지 잘 알게 됐다.</p>\n\n<p>나 역시 고집스럽고, 자신감이 과도하게 넘쳐서 타인의 의견을 무시하는 행위, 설득이 아니라 억지를 부리는 시기가 있었다.</p>\n\n<p>이 시기에 좋은 동료와 상사에게 피드백을 받았고, 이러한 부분이 얼마나 팀에 나쁜 영향을 주는 지를 이해하고 고치려 노력했다.</p>\n\n<p>혹시나 과거의 나와 같은 성향을 가졌다면, 성향을 바꾸고 노력한다는 것이 쉽지 않다는 것은 알지만, 이를 통해 더 나은 프로덕트, 역량 발전, 즐거운 회사 생활에 보탬이 된다는 것을 알고 노력하는 사람이 조금이라도 더 많아지면 좋겠다.</p>\n",
        "contentSnippet": "개요\n개발자로 일하다 보면 생각보다 많은 수의 개발자가, 솔로 플레이처럼 일하는 경우가 많다.\n함께 일한다는 의미는, 서로의 생각과 방향이 비슷해지고, 서로 돕고 도움 받는 것을 통해 시너지가 나는 것이라고 생각한다.\n허나 나의 판단만 옳다고 여기거나, 내가 틀릴 리 없어와 같은 생각으로 문제 상황을 회피하거나 숨기는 경향을 보이는 경우도 많다.\n애석하게도 버그는 개발자에게 필연적인 요소다. 버그가 없었다면 난도가 높지 않았거나, 이미 숙련된 일을 해내고 있을 확률이 높다.\n훌륭한 개발자들이 모여있을 빅 테크의 제품도, 수없이 많은 버그 픽스와 보안 패치가 이뤄진다.\n이는 당연하게도 버그란 없을 수 없고, 때로는 요구 사항에 대한 이해도 차이로도 버그로 판정될 수도 있다는 뜻이다.\n결국은 팀 작업\nDev Toy 프로덕트나, 스타트업의 MVP, 인하우스 혹은 백 오피스 도구 중에서도 규모 작은 수준의 제품이라면 모를까 고도화가 되거나 제품이 커지다 보면 결국 팀 작업이 된다.\n내가 똑똑함을, 내 생각이 옳음을 증명하기 보다는 근거를 만들고 설득을 시도하는 습관이 좋다.\n많은 회사가 개발자 채용 시에, 근거 기반의 사고, 논리력을 보는 경우가 많은데 바로 그렇게 일하는 사람이 팀에, 회사에 도움이 된다는 것을 체감했기 때문이다.\n결국 건강한 토론을 해야 되는데, 닫혀있는 사람과는 소모적인 토론이 일어나기 때문이다.\n심지어는 자신만 옳다고 여기는 사람은, 토론 자체가 성립이 안되는 경우도 생기기 때문에, 팀을 구성하는 데에 있어 리더, 구성원 할 거 없이 열려 있는 사람이 좋은 결과로 이어진다고 생각한다.\n그렇다고 역량이 안 중요하진 않지만…\n역량이 부족하면 결국 다른 구성원들이 메꿔야 되는 상황도 존재하고, 기술 부채도 더 많이 만들게 되는 등 다양한 문제를 만드는 것은 사실이다.\n하지만 개인적인 경험상 역량이 부족한 사람보다, 닫혀 있는 사람이 더 팀웍이나 팀 퍼포먼스에 악영향을 줬다.\n물론 여러가지 측면에서 다 만족스러운 사람을 채용하는 것이 베스트겠지만, 긴가 민가 하거나 리스크가 걱정 되는 상황에서의 채용을 해야 되는 상황이라면, 역량이 부족하지만 태도가 좋은 사람을 채용하고, 이 사람의 스킬과 업무 스킬에 도움을 주는 쪽이 더 낫다고 생각한다.\n마치며\n결국은 사람과 사람이 하는 일이다 보니, 왜 날이 선 사람, 자신만 옳다고 느끼는 사람, 동료에 대한 존중이 부족한 사람에 대한 채용을 꺼려 하는지 잘 알게 됐다.\n나 역시 고집스럽고, 자신감이 과도하게 넘쳐서 타인의 의견을 무시하는 행위, 설득이 아니라 억지를 부리는 시기가 있었다.\n이 시기에 좋은 동료와 상사에게 피드백을 받았고, 이러한 부분이 얼마나 팀에 나쁜 영향을 주는 지를 이해하고 고치려 노력했다.\n혹시나 과거의 나와 같은 성향을 가졌다면, 성향을 바꾸고 노력한다는 것이 쉽지 않다는 것은 알지만, 이를 통해 더 나은 프로덕트, 역량 발전, 즐거운 회사 생활에 보탬이 된다는 것을 알고 노력하는 사람이 조금이라도 더 많아지면 좋겠다.",
        "guid": "https://elky84.github.io/2024/10/27/working_together/",
        "categories": [
          "태도",
          "태도"
        ],
        "isoDate": "2024-10-27T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "Splunk의 stats와 eventstats",
        "link": "https://kangmyounghun.blogspot.com/2024/10/splunk-stats-eventstats.html",
        "pubDate": "2024-10-29T05:34:00.000Z",
        "author": "강명훈",
        "content": "<div><a href=\"https://docs.splunk.com/Documentation/Splunk/9.3.1/SearchReference/Stats\" target=\"_blank\">stats</a>를 이용한 ip별 url 접속 추이.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhVCOz_ifhYWt6EL0_E5autGOln2zYRD9XIB88PAeByDJbRbCcxfiPiZaD8mzXPTuT1vt7cd0LMbl4U_u_LdJ3PndK_SfIOUTTIeBqhTdDXz7K2eYbh8wF8XlVzLN8Eh9S-kcMZaqesjGdMcEsCgHE_1276MdHuCOg1LOuHEB4WpYEIwdHFLTtbVobYAgJ3/s1100/splunk_stats.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1100\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhVCOz_ifhYWt6EL0_E5autGOln2zYRD9XIB88PAeByDJbRbCcxfiPiZaD8mzXPTuT1vt7cd0LMbl4U_u_LdJ3PndK_SfIOUTTIeBqhTdDXz7K2eYbh8wF8XlVzLN8Eh9S-kcMZaqesjGdMcEsCgHE_1276MdHuCOg1LOuHEB4WpYEIwdHFLTtbVobYAgJ3/s16000/splunk_stats.png\" /></a></div><div><br /></div><div><span><a name='more'></a></span></div><div>집계 결과를 다른 필드로 쪼개면? 실패.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEivYGDPEyplsGbeBfKvXDMrVYexrwa9xGWxYL46tMT7ILC_WMYpWxpmrqVR3KEa3FTK2BDHEtAFSK8TVx8GES1gukuS8VVdC8GbxvI2XcIeg0zxDJMCpMZGQvXFyjxLiYqmpb8GriFsum8ARuW0aYH-rXkXUnQ-DlEAU7XqP4WCrZqA-d7lBVrMbI0oDrvy/s1202/splunk_stats2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1202\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEivYGDPEyplsGbeBfKvXDMrVYexrwa9xGWxYL46tMT7ILC_WMYpWxpmrqVR3KEa3FTK2BDHEtAFSK8TVx8GES1gukuS8VVdC8GbxvI2XcIeg0zxDJMCpMZGQvXFyjxLiYqmpb8GriFsum8ARuW0aYH-rXkXUnQ-DlEAU7XqP4WCrZqA-d7lBVrMbI0oDrvy/s16000/splunk_stats2.png\" /></a></div><br /><div>데이터셋이 원본에서 중첩된 계산 결과로 바뀌었기 때문에 별도의 집계 분할 기준을 제시할 수 없다.&nbsp;</div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgQt9J1UOS5XI2efhBek_NkQrhBchKcw5YfoybVqqtbxL4SQ7kcXbStOg7uGRdfADHbnfDK8P5hCNaawPIOMQKZ2mzt-0cLSunzeNw-CbFafrYym1nK3RJC1ntVv6HPpN1RO0ZH4XthdjQydzDQCdS3xZuIGfMVk4_TAphbSlJt5SGCUxlBF0CFHWKnuk9r/s1180/splunk_stats3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1180\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgQt9J1UOS5XI2efhBek_NkQrhBchKcw5YfoybVqqtbxL4SQ7kcXbStOg7uGRdfADHbnfDK8P5hCNaawPIOMQKZ2mzt-0cLSunzeNw-CbFafrYym1nK3RJC1ntVv6HPpN1RO0ZH4XthdjQydzDQCdS3xZuIGfMVk4_TAphbSlJt5SGCUxlBF0CFHWKnuk9r/s16000/splunk_stats3.png\" /></a></div><br /></div><div><b><span style=\"font-size: x-large;\"><a href=\"https://docs.splunk.com/Documentation/Splunk/9.3.1/SearchReference/Eventstats\" target=\"_blank\">eventstats</a>를 사용하면?</span></b></div><div><div><br /></div><div>ip별 url 접속 추이는 똑같다.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiRTqHZb2NdvmYubb0FNkGZpXcFwLbqedoOc_OUOLBUpxJ8cyMJne8T0MoUu2NMkitK4yrXzzALKHGXNqsYnmb9Q8YPR-2X8WbFH-LNKWFR04NAWLOVpEWyMorsBRODqZda5uxUBrGBLv-T8EYEYYXkOWaMEh4pCP3ytes3uhXs8YzdaCwMHZ31J2HfV_3n/s1098/splunk_eventstats.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1098\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiRTqHZb2NdvmYubb0FNkGZpXcFwLbqedoOc_OUOLBUpxJ8cyMJne8T0MoUu2NMkitK4yrXzzALKHGXNqsYnmb9Q8YPR-2X8WbFH-LNKWFR04NAWLOVpEWyMorsBRODqZda5uxUBrGBLv-T8EYEYYXkOWaMEh4pCP3ytes3uhXs8YzdaCwMHZ31J2HfV_3n/s16000/splunk_eventstats.png\" /></a></div><br /></div><div>집계 분할도 잘 됨.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgGd7EH_SeOc_PhYbtXQqv0n0TbL47InkvtE9Z92315NUEQLXtdqLVucceAaHpBsdekw9AQCUoHwen8WhGs801GL0TPWIjyDB4GtcaqY9UoST5FLPhrQGkfpPKuiS6R0QmK7dckSRiOG5HF12JET0BmKBw0BL1q-vbwONV2eTefx0MYlY0w4aLZLQrTQYQd/s1220/splunk_eventstats2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1220\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgGd7EH_SeOc_PhYbtXQqv0n0TbL47InkvtE9Z92315NUEQLXtdqLVucceAaHpBsdekw9AQCUoHwen8WhGs801GL0TPWIjyDB4GtcaqY9UoST5FLPhrQGkfpPKuiS6R0QmK7dckSRiOG5HF12JET0BmKBw0BL1q-vbwONV2eTefx0MYlY0w4aLZLQrTQYQd/s16000/splunk_eventstats2.png\" /></a></div><br /><div>eventstats는 집계 결과를 기존 이벤트에 추가한다. 원본 데이터셋을 계속 사용할 수 있다는 얘기.</div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgI_UqvBwv4XflhFA5GOnTA3oAWebeI-X5wAmqAnaXp42RoeXW6KTifNPTqu5Cph7rIZKsFJKazLS2USiF3JMv73Ha28JXmhreWkZUQOnu990ZHoJP6xpWU_Frbf0mO5PriRT2SJO2TGDElENQSUdv1AIisDERHZey8_qIz9DaFW-M35RkLUIVkXjUkKXJk/s1056/splunk_eventstats3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1056\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgI_UqvBwv4XflhFA5GOnTA3oAWebeI-X5wAmqAnaXp42RoeXW6KTifNPTqu5Cph7rIZKsFJKazLS2USiF3JMv73Ha28JXmhreWkZUQOnu990ZHoJP6xpWU_Frbf0mO5PriRT2SJO2TGDElENQSUdv1AIisDERHZey8_qIz9DaFW-M35RkLUIVkXjUkKXJk/s16000/splunk_eventstats3.png\" /></a></div></div><div><br /></div><div><b>관련 글</b><br /><ul><li><a href=\"https://kangmyounghun.blogspot.com/2023/10/2nd_29.html\">평균의 함정 - 2nd</a></li></ul></div>",
        "contentSnippet": "stats를 이용한 ip별 url 접속 추이.\n\n\n\n\n\n\n집계 결과를 다른 필드로 쪼개면? 실패.\n\n\n\n\n데이터셋이 원본에서 중첩된 계산 결과로 바뀌었기 때문에 별도의 집계 분할 기준을 제시할 수 없다. \n\n\n\n\neventstats를 사용하면?\n\n\nip별 url 접속 추이는 똑같다.\n\n\n\n집계 분할도 잘 됨.\n\n\n\n\neventstats는 집계 결과를 기존 이벤트에 추가한다. 원본 데이터셋을 계속 사용할 수 있다는 얘기.\n\n\n\n\n\n관련 글\n\n평균의 함정 - 2nd",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-902528281450288527",
        "isoDate": "2024-10-29T05:34:00.000Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "스마트 TV의 USB 포트로 할 수 있는 다양한 활용 방법",
        "link": "https://muzbox.tistory.com/483491",
        "pubDate": "Wed, 30 Oct 2024 13:25:14 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483491#entry483491comment",
        "content": "<p data-ke-size=\"size16\">우리 집 TV 뒷면에 숨어있는 USB 포트, 단순한 구멍이 아닌 TV의 활용도를 높여주는 숨은 보물입니다. 영상 감상부터 게임까지, 일상을 더욱 풍성하게 만드는 USB 포트의 매력을 함께 살펴보겠습니다.<br /><br /></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1820\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/c08enq/btsKoQ6yAK6/zfavJt3M3PSAujUSKr0U2k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c08enq/btsKoQ6yAK6/zfavJt3M3PSAujUSKr0U2k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c08enq/btsKoQ6yAK6/zfavJt3M3PSAujUSKr0U2k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc08enq%2FbtsKoQ6yAK6%2FzfavJt3M3PSAujUSKr0U2k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"스마트 TV의 USB 포트로 할 수 있는 다양한 활용 방법\" width=\"700\" height=\"394\" data-origin-width=\"1820\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;요즘 스마트 TV를 살펴보면 뒷면이나 측면에 USB 포트가 달려있습니다. 그저 지나치기 쉬운 이 작은 포트가 우리의 TV 시청 경험을 얼마나 풍성하게 만들어주는지, 많은 분들이 놓치고 계신데요. 오늘은 이 숨은 보물 같은 USB 포트의 다채로운 활용법을 낱낱이 파헤쳐보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>미디어 파일 재생</b></span></h2>\n<p data-ke-size=\"size16\">가족들과 <b>추억이 담긴 사진과 영상</b>을 감상하고 싶으신가요? USB 포트의 가장 매력적인 기능은 바로 미디어 파일 재생입니다. 휴대폰에 잠들어 있던 지난 여름휴가 사진들, 아이의 첫 걸음마 영상을 USB에 담아 TV와 연결하면 끝! 큰 화면으로 온 가족이 함께 추억을 나눌 수 있죠. 게다가 요즘 TV는 다양한 형식의 파일도 거뜬히 재생할 수 있어 더욱 편리합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>실시간 TV 녹화 기능</b></span></h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/noWHn/btsKpE5oMSt/p5UTxcCXqBosd725P8wt0K/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/noWHn/btsKpE5oMSt/p5UTxcCXqBosd725P8wt0K/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/noWHn/btsKpE5oMSt/p5UTxcCXqBosd725P8wt0K/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FnoWHn%2FbtsKpE5oMSt%2Fp5UTxcCXqBosd725P8wt0K%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"스마트TV로 실시간 녹화하기\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">\"아, 오늘 본방 사수는 글렀다!\" 이런 걱정도 이제 그만. <b>TV 녹화</b> 기능이 있는 모델이라면 USB만 연결해두면 됩니다. 마치 옛날 비디오테이프로 녹화하던 것처럼, 좋아하는 프로그램을 놓치지 않고 저장해둘 수 있죠. 물론 이 기능은 모든 TV가 지원하는 건 아니니, 사용 전 설명서를 살펴보시는 게 좋습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>주변 기기 연결</b></span></h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/cPrjeq/btsKo7mHyJB/5GRSsJg1ga0eHHMy6FATl0/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/cPrjeq/btsKo7mHyJB/5GRSsJg1ga0eHHMy6FATl0/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/cPrjeq/btsKo7mHyJB/5GRSsJg1ga0eHHMy6FATl0/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcPrjeq%2FbtsKo7mHyJB%2F5GRSsJg1ga0eHHMy6FATl0%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"스마트TV와 주변기기 연결\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">TV로 <b>게임</b>을 즐기고 싶으신가요? USB 포트에 게임패드를 연결하면 더욱 실감 나는 게임 플레이가 가능합니다. 인터넷 서핑이 필요하다면 마우스와 키보드도 연결할 수 있죠. 이처럼 USB 포트 하나로 TV는 훨씬 더 다재다능한 엔터테인먼트 기기로 변신합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>기기 충전 및 전원 공급</b></span></h2>\n<p data-ke-size=\"size16\">리모컨용 건전지를 찾아 헤매던 경험, 다들 있으시죠? USB 포트는 <b>작은 기기들의 충전소</b> 역할도 톡톡히 해냅니다. 게임패드나 스트리밍 스틱 같은 저전력 기기들을 편리하게 충전할 수 있죠. 다만 TV가 꺼져있을 때는 전원이 공급되지 않는 경우가 많으니, 이 점만 주의하시면 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며</b></span></h2>\n<p data-ke-size=\"size16\">우리 곁의 평범해 보이는 USB 포트는 사실 TV의 활용도를 한껏 높여주는 마법 같은 존재입니다. 미디어 감상, 녹화, 게임, 충전까지... 이렇게 다재다능한 USB 포트를 이제는 제대로 활용해보는 건 어떨까요? 당신의 TV 생활이 한층 더 풍성해질 테니까요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>Q &amp; A</b></span></h2>\n<p data-ke-size=\"size16\"><b>\"우리 TV로 모든 동영상을 볼 수 있나요?\"</b></p>\n<p data-ke-size=\"size16\">TV마다 재생할 수 있는 파일이 조금씩 달라요. 기본으로 설치된 플레이어가 재생하지 못하는 영상도 있죠. 하지만 걱정 마세요. 추가로 앱을 설치하면 더 많은 종류의 파일을 즐길 수 있답니다.</p>\n<p data-ke-size=\"size16\"><b>\"TV 녹화 기능은 모든 TV에서 가능한가요?\"</b></p>\n<p data-ke-size=\"size16\">아쉽게도 모든 TV가 녹화 기능을 지원하지는 않아요. 'TV를 구매할 때 이 기능이 필요하다면, 꼭 설명서를 확인해보세요. 실망하지 않으실 거예요!</p>\n<p data-ke-size=\"size16\"><b>\"TV를 꺼도 USB로 충전할 수 있나요?\"</b></p>\n<p data-ke-size=\"size16\">보통은 TV를 끄면 USB 포트도 함께 잠이 들어 충전이 안 됩니다. 하지만 일부 똑똑한 TV들은 전원이 꺼져있어도 충전이 가능하죠. 구매하신 TV의 숨은 능력을 찾아보는 것도 재미있을 거예요!</p>",
        "contentSnippet": "우리 집 TV 뒷면에 숨어있는 USB 포트, 단순한 구멍이 아닌 TV의 활용도를 높여주는 숨은 보물입니다. 영상 감상부터 게임까지, 일상을 더욱 풍성하게 만드는 USB 포트의 매력을 함께 살펴보겠습니다.\n\n\n\n \n \n 요즘 스마트 TV를 살펴보면 뒷면이나 측면에 USB 포트가 달려있습니다. 그저 지나치기 쉬운 이 작은 포트가 우리의 TV 시청 경험을 얼마나 풍성하게 만들어주는지, 많은 분들이 놓치고 계신데요. 오늘은 이 숨은 보물 같은 USB 포트의 다채로운 활용법을 낱낱이 파헤쳐보겠습니다.\n \n \n미디어 파일 재생\n가족들과 추억이 담긴 사진과 영상을 감상하고 싶으신가요? USB 포트의 가장 매력적인 기능은 바로 미디어 파일 재생입니다. 휴대폰에 잠들어 있던 지난 여름휴가 사진들, 아이의 첫 걸음마 영상을 USB에 담아 TV와 연결하면 끝! 큰 화면으로 온 가족이 함께 추억을 나눌 수 있죠. 게다가 요즘 TV는 다양한 형식의 파일도 거뜬히 재생할 수 있어 더욱 편리합니다.\n \n \n실시간 TV 녹화 기능\n\n\n\"아, 오늘 본방 사수는 글렀다!\" 이런 걱정도 이제 그만. TV 녹화 기능이 있는 모델이라면 USB만 연결해두면 됩니다. 마치 옛날 비디오테이프로 녹화하던 것처럼, 좋아하는 프로그램을 놓치지 않고 저장해둘 수 있죠. 물론 이 기능은 모든 TV가 지원하는 건 아니니, 사용 전 설명서를 살펴보시는 게 좋습니다.\n \n주변 기기 연결\n\n\nTV로 게임을 즐기고 싶으신가요? USB 포트에 게임패드를 연결하면 더욱 실감 나는 게임 플레이가 가능합니다. 인터넷 서핑이 필요하다면 마우스와 키보드도 연결할 수 있죠. 이처럼 USB 포트 하나로 TV는 훨씬 더 다재다능한 엔터테인먼트 기기로 변신합니다.\n \n기기 충전 및 전원 공급\n리모컨용 건전지를 찾아 헤매던 경험, 다들 있으시죠? USB 포트는 작은 기기들의 충전소 역할도 톡톡히 해냅니다. 게임패드나 스트리밍 스틱 같은 저전력 기기들을 편리하게 충전할 수 있죠. 다만 TV가 꺼져있을 때는 전원이 공급되지 않는 경우가 많으니, 이 점만 주의하시면 됩니다.\n \n마치며\n우리 곁의 평범해 보이는 USB 포트는 사실 TV의 활용도를 한껏 높여주는 마법 같은 존재입니다. 미디어 감상, 녹화, 게임, 충전까지... 이렇게 다재다능한 USB 포트를 이제는 제대로 활용해보는 건 어떨까요? 당신의 TV 생활이 한층 더 풍성해질 테니까요.\n \nQ & A\n\"우리 TV로 모든 동영상을 볼 수 있나요?\"\nTV마다 재생할 수 있는 파일이 조금씩 달라요. 기본으로 설치된 플레이어가 재생하지 못하는 영상도 있죠. 하지만 걱정 마세요. 추가로 앱을 설치하면 더 많은 종류의 파일을 즐길 수 있답니다.\n\"TV 녹화 기능은 모든 TV에서 가능한가요?\"\n아쉽게도 모든 TV가 녹화 기능을 지원하지는 않아요. 'TV를 구매할 때 이 기능이 필요하다면, 꼭 설명서를 확인해보세요. 실망하지 않으실 거예요!\n\"TV를 꺼도 USB로 충전할 수 있나요?\"\n보통은 TV를 끄면 USB 포트도 함께 잠이 들어 충전이 안 됩니다. 하지만 일부 똑똑한 TV들은 전원이 꺼져있어도 충전이 가능하죠. 구매하신 TV의 숨은 능력을 찾아보는 것도 재미있을 거예요!",
        "guid": "https://muzbox.tistory.com/483491",
        "categories": [
          "NEWS/IT 뉴스"
        ],
        "isoDate": "2024-10-30T04:25:14.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "윈도우용 추천 프리웨어 (2024.10.28) 데스크탑 잠금, 시스템 정보 확인,바로가기, 스프레드시트, 마인드 맵, 아웃라인 도구, 개인 정보 관리자, 도움말 만들기",
        "link": "https://muzbox.tistory.com/483490",
        "pubDate": "Mon, 28 Oct 2024 15:57:18 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483490#entry483490comment",
        "content": "<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"background-color: #ffffff; color: #0d0d0d; text-align: start;\">&nbsp;네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"추천프리웨어 24년 10월 28일.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/bgKuWB/btsKl20rX8k/Yz54xZVPyFFyleDY2bkpe1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bgKuWB/btsKl20rX8k/Yz54xZVPyFFyleDY2bkpe1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bgKuWB/btsKl20rX8k/Yz54xZVPyFFyleDY2bkpe1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbgKuWB%2FbtsKl20rX8k%2FYz54xZVPyFFyleDY2bkpe1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"추천프리웨어 24년 10월 28일.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"color: #333333; text-align: left;\">&nbsp;윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는<span>&nbsp;</span></span><b><span style=\"color: #009a87;\">상용프로그램</span></b><span style=\"color: #333333; text-align: left;\">과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의<span>&nbsp;</span></span><span style=\"color: #ee2323;\"><b>쉐어웨어</b></span><span style=\"color: #333333; text-align: left;\">, 무료로 사용할 수 있는<span>&nbsp;</span></span><b><span style=\"color: #ef6f53;\">프리웨어</span></b>등으로 크게 3가지로 나뉘게 되는데요.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><br />&nbsp;물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도<span>&nbsp;</span><span style=\"color: #006dd7;\"><b>최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개</b></span>하고 있습니다.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size18\">'어떤오후의 프리웨어 이야기'에서 추천하는<br /><span style=\"color: #409d00;\">&nbsp;<b>2024년 10월 28일자 공개자료실 윈도우용 추천 프리웨어</b></span>입니다.</p>\n<p id=\"no_1\" data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000;\" data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>1. ScreenBlur (반투명&nbsp;화면으로&nbsp;데스크탑&nbsp;잠금)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 데스크톱을&nbsp;비밀번호로&nbsp;보호된&nbsp;화면&nbsp;오버레이&nbsp;또는&nbsp;데스크톱&nbsp;차단&nbsp;옵션으로&nbsp;가려,&nbsp;사생활을&nbsp;보호할&nbsp;수&nbsp;있게&nbsp;해주는&nbsp;프로그램입니다.&nbsp;이&nbsp;프로그램을&nbsp;통해&nbsp;바탕화면,&nbsp;바로가기,&nbsp;가젯&nbsp;등을&nbsp;감출&nbsp;수&nbsp;있습니다.&nbsp;특정&nbsp;시간&nbsp;동안&nbsp;활동이&nbsp;없을&nbsp;때&nbsp;자동으로&nbsp;화면을&nbsp;잠그거나,&nbsp;사용자&nbsp;지정&nbsp;단축키를&nbsp;눌러&nbsp;잠금을&nbsp;실행할&nbsp;수&nbsp;있습니다.&nbsp;반투명&nbsp;잠금&nbsp;화면을&nbsp;통해&nbsp;열려&nbsp;있는&nbsp;창이나&nbsp;앱을&nbsp;확인할&nbsp;수&nbsp;있지만,&nbsp;다른&nbsp;사람이&nbsp;컴퓨터를&nbsp;조작하지&nbsp;못하도록&nbsp;방지합니다. <br /><br />추가적인&nbsp;사생활&nbsp;보호를&nbsp;원한다면,&nbsp;ScreenBlur는&nbsp;모든&nbsp;창을&nbsp;자동으로&nbsp;최소화하고,&nbsp;잠금&nbsp;중에는&nbsp;바탕화면&nbsp;아이콘과&nbsp;가젯을&nbsp;숨길&nbsp;수도&nbsp;있습니다.&nbsp;그&nbsp;외에&nbsp;잠금&nbsp;상태에서&nbsp;소리를&nbsp;무음&nbsp;처리하거나,&nbsp;여러&nbsp;잠금&nbsp;화면&nbsp;디자인&nbsp;선택,&nbsp;잠금&nbsp;화면의&nbsp;투명도&nbsp;조정,&nbsp;재시작&nbsp;시&nbsp;자동&nbsp;잠금&nbsp;등의&nbsp;기능도&nbsp;제공합니다. <br /><br />다만,&nbsp;ScreenBlur는&nbsp;해킹&nbsp;방지용&nbsp;보안&nbsp;프로그램은&nbsp;아니며,&nbsp;사생활&nbsp;보호와&nbsp;함께&nbsp;반려동물이나&nbsp;어린이가&nbsp;컴퓨터를&nbsp;만지는&nbsp;것을&nbsp;방지하는&nbsp;정도로&nbsp;설계되었습니다.&nbsp;고급&nbsp;사용자는&nbsp;잠금을&nbsp;우회할&nbsp;수&nbsp;있는&nbsp;방법을&nbsp;찾을&nbsp;수&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"screenblur.png\" data-origin-width=\"871\" data-origin-height=\"485\"><span data-url=\"https://blog.kakaocdn.net/dn/cTEKEO/btsKmSXqqJC/o7KE5vX5ghKHJPbsccv9xk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cTEKEO/btsKmSXqqJC/o7KE5vX5ghKHJPbsccv9xk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cTEKEO/btsKmSXqqJC/o7KE5vX5ghKHJPbsccv9xk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcTEKEO%2FbtsKmSXqqJC%2Fo7KE5vX5ghKHJPbsccv9xk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"screenblur.png\" data-origin-width=\"871\" data-origin-height=\"485\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶ 프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶ Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드◀</p>\n<figure id=\"og_1730098406169\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ScreenBlur\" data-og-description=\"Screen Locker for Windows . Temporarily lock or hide the desktop. Can lock PC after a while and unlock the next day. Weekly schedule. Bla...\" data-og-host=\"indeepsoft.blogspot.com\" data-og-source-url=\"https://indeepsoft.blogspot.com/p/screenblur.html\" data-og-url=\"http://indeepsoft.blogspot.com/p/screenblur.html\" data-og-image=\"https://scrap.kakaocdn.net/dn/bzYkhW/hyXpAWtRmg/Qidvn0Zy23gXUWCPJFgPR0/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/fx9Xj/hyXpv1W3SC/ZjfVsSoRAf208d78yLn5k1/img.png?width=600&amp;height=374&amp;face=0_0_600_374,https://scrap.kakaocdn.net/dn/H7IBW/hyXpydiuCA/OeIeClDQHUWmqeoVf3upVk/img.png?width=600&amp;height=338&amp;face=0_0_600_338\"><a href=\"https://indeepsoft.blogspot.com/p/screenblur.html\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://indeepsoft.blogspot.com/p/screenblur.html\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bzYkhW/hyXpAWtRmg/Qidvn0Zy23gXUWCPJFgPR0/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/fx9Xj/hyXpv1W3SC/ZjfVsSoRAf208d78yLn5k1/img.png?width=600&amp;height=374&amp;face=0_0_600_374,https://scrap.kakaocdn.net/dn/H7IBW/hyXpydiuCA/OeIeClDQHUWmqeoVf3upVk/img.png?width=600&amp;height=338&amp;face=0_0_600_338');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ScreenBlur</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Screen Locker for Windows . Temporarily lock or hide the desktop. Can lock PC after a while and unlock the next day. Weekly schedule. Bla...</p>\n<p class=\"og-host\" data-ke-size=\"size16\">indeepsoft.blogspot.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_2\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000;\" data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>2. CobraTek PC Info(시스템&nbsp;정보&nbsp;확인)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; PC의&nbsp;세부&nbsp;기술&nbsp;정보를&nbsp;제공하는&nbsp;간단한&nbsp;시스템&nbsp;정보&nbsp;도구입니다.&nbsp;탭&nbsp;형식의&nbsp;인터페이스를&nbsp;통해&nbsp;운영&nbsp;체제,&nbsp;CPU,&nbsp;RAM,&nbsp;하드&nbsp;드라이브,&nbsp;메인보드,&nbsp;사운드&nbsp;장치,&nbsp;네트워크,&nbsp;주변&nbsp;기기&nbsp;등의&nbsp;기술&nbsp;정보를&nbsp;확인할&nbsp;수&nbsp;있습니다.&nbsp;모든&nbsp;정보를&nbsp;텍스트&nbsp;파일로&nbsp;저장하거나&nbsp;프린터로&nbsp;출력할&nbsp;수도&nbsp;있습니다</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"CobraTek PC Info.jpg\" data-origin-width=\"700\" data-origin-height=\"345\"><span data-url=\"https://blog.kakaocdn.net/dn/RydEN/btsKmTopnVF/ztlFRPkGqk2EkIqRcVaW4K/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/RydEN/btsKmTopnVF/ztlFRPkGqk2EkIqRcVaW4K/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/RydEN/btsKmTopnVF/ztlFRPkGqk2EkIqRcVaW4K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FRydEN%2FbtsKmTopnVF%2FztlFRPkGqk2EkIqRcVaW4K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"CobraTek PC Info.jpg\" data-origin-width=\"700\" data-origin-height=\"345\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드</p>\n<figure id=\"og_1730098447942\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Official Home Page | CobraTek\" data-og-description=\"At CobraTek our goal - lead the innovation forward by developing the best applications and games.\" data-og-host=\"www.cobratek.net\" data-og-source-url=\"https://www.cobratek.net/products/app/pc-info-free\" data-og-url=\"https://www.cobratek.net\" data-og-image=\"https://scrap.kakaocdn.net/dn/R4Dhq/hyXpA91CpM/UEh5mS6nIOKP0mCGkdQKV1/img.png?width=800&amp;height=300&amp;face=0_0_800_300,https://scrap.kakaocdn.net/dn/bl6n9B/hyXpExPOHb/K26Puwak8g0ZlyL4OSiLUk/img.png?width=800&amp;height=300&amp;face=0_0_800_300\"><a href=\"https://www.cobratek.net/products/app/pc-info-free\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.cobratek.net/products/app/pc-info-free\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/R4Dhq/hyXpA91CpM/UEh5mS6nIOKP0mCGkdQKV1/img.png?width=800&amp;height=300&amp;face=0_0_800_300,https://scrap.kakaocdn.net/dn/bl6n9B/hyXpExPOHb/K26Puwak8g0ZlyL4OSiLUk/img.png?width=800&amp;height=300&amp;face=0_0_800_300');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Official Home Page | CobraTek</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">At CobraTek our goal - lead the innovation forward by developing the best applications and games.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.cobratek.net</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_3\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000;\" data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>3. Quick Access Popup (자주&nbsp;사용하는&nbsp;폴더에&nbsp;빠르게&nbsp;액세스하기)</b></i></span></h2>\n<p data-ke-size=\"size18\">자주&nbsp;사용하는&nbsp;폴더와&nbsp;애플리케이션에&nbsp;쉽게&nbsp;접근할&nbsp;수&nbsp;있도록&nbsp;돕는&nbsp;유용한&nbsp;도구입니다.&nbsp;프로그램&nbsp;실행&nbsp;후,&nbsp;탐색기&nbsp;창(열기/저장&nbsp;대화상자&nbsp;포함)&nbsp;내에서&nbsp;마우스&nbsp;중간&nbsp;클릭이나&nbsp;Win+W를&nbsp;누르면&nbsp;다양한&nbsp;바로가기&nbsp;메뉴가&nbsp;열립니다. <br /><br />사용자&nbsp;프로필,&nbsp;Windows,&nbsp;Program&nbsp;Files와&nbsp;같은&nbsp;일반&nbsp;폴더에&nbsp;빠르게&nbsp;접근할&nbsp;수&nbsp;있으며,&nbsp;최근에&nbsp;닫은&nbsp;폴더를&nbsp;다시&nbsp;열거나&nbsp;즐겨찾기를&nbsp;탐색하고&nbsp;현재&nbsp;폴더나&nbsp;중요한&nbsp;애플리케이션을&nbsp;목록에&nbsp;추가해&nbsp;나중에&nbsp;쉽게&nbsp;열&nbsp;수&nbsp;있습니다. <br /><br />명령&nbsp;줄에서도&nbsp;작동하여&nbsp;긴&nbsp;경로를&nbsp;직접&nbsp;입력하지&nbsp;않아도&nbsp;되고,&nbsp;중간&nbsp;클릭으로&nbsp;폴더를&nbsp;선택하면&nbsp;필요한&nbsp;CD&nbsp;명령이&nbsp;자동으로&nbsp;입력됩니다. <br /><br />구성&nbsp;옵션이&nbsp;다양하여&nbsp;기본&nbsp;폴더를&nbsp;제거하거나&nbsp;새로운&nbsp;폴더를&nbsp;추가하고,&nbsp;단축키를&nbsp;사용자에&nbsp;맞게&nbsp;조정할&nbsp;수&nbsp;있습니다. <br /><br />FTP&nbsp;지원&nbsp;기능도&nbsp;추가되어&nbsp;Explorer,&nbsp;Directory&nbsp;Opus,&nbsp;Total&nbsp;Commander에서&nbsp;FTP&nbsp;사이트에&nbsp;자동으로&nbsp;로그인할&nbsp;수&nbsp;있습니다.&nbsp;그룹&nbsp;및&nbsp;즐겨찾기&nbsp;기능이&nbsp;개선되어&nbsp;여러&nbsp;즐겨찾기&nbsp;폴더를&nbsp;한&nbsp;번의&nbsp;클릭으로&nbsp;열&nbsp;수&nbsp;있으며,&nbsp;새로운&nbsp;즐겨찾기&nbsp;추가/편집&nbsp;대화상자를&nbsp;통해&nbsp;특정&nbsp;크기와&nbsp;위치로&nbsp;폴더를&nbsp;표시하는&nbsp;등&nbsp;고급&nbsp;설정이&nbsp;가능합니다. <br /><br />개별&nbsp;폴더와&nbsp;하위&nbsp;메뉴도&nbsp;단축키로&nbsp;열&nbsp;수&nbsp;있으며,&nbsp;이전&nbsp;Folders&nbsp;Popup&nbsp;사용자는&nbsp;기존&nbsp;즐겨찾기를&nbsp;불러올&nbsp;수&nbsp;있는&nbsp;가져오기&nbsp;옵션을&nbsp;통해&nbsp;손쉽게&nbsp;시작할&nbsp;수&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Quick Access Popup.jpg\" data-origin-width=\"741\" data-origin-height=\"552\"><span data-url=\"https://blog.kakaocdn.net/dn/dKVOcE/btsKmx609hi/UsmSC5CEVS1sk48k13AMFK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dKVOcE/btsKmx609hi/UsmSC5CEVS1sk48k13AMFK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dKVOcE/btsKmx609hi/UsmSC5CEVS1sk48k13AMFK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdKVOcE%2FbtsKmx609hi%2FUsmSC5CEVS1sk48k13AMFK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Quick Access Popup.jpg\" data-origin-width=\"741\" data-origin-height=\"552\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶ 프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11&nbsp;</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1730098476106\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Quick Access Popup &ndash; &ldquo;Keep up the great work. Quick Access Popup is an awesome program.&rdquo; Rick on What&rsquo;s On My PC\" data-og-description=\"Home Get Quick Access Popup now for FREE! Save thousands of clicks with this Windows utility software!&nbsp;Launch in one click: folders,&nbsp;documents,applications,&nbsp;web links,snippets of textand much more. The ideal productivity booster to access and manage you\" data-og-host=\"www.quickaccesspopup.com\" data-og-source-url=\"https://www.quickaccesspopup.com/\" data-og-url=\"https://www.quickaccesspopup.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/bvjRT3/hyXprFf8kB/2pUTKcYmuxJ0E9834ULtwk/img.png?width=1320&amp;height=380&amp;face=0_0_1320_380,https://scrap.kakaocdn.net/dn/cISB2O/hyXpCGMn2y/u0XPkAHs57ikb55S6hWDs1/img.png?width=1320&amp;height=380&amp;face=0_0_1320_380,https://scrap.kakaocdn.net/dn/bU8fqt/hyXlLrfYuI/wtNMdqHffUUFnEhoa3yM31/img.png?width=1320&amp;height=380&amp;face=0_0_1320_380\"><a href=\"https://www.quickaccesspopup.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.quickaccesspopup.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bvjRT3/hyXprFf8kB/2pUTKcYmuxJ0E9834ULtwk/img.png?width=1320&amp;height=380&amp;face=0_0_1320_380,https://scrap.kakaocdn.net/dn/cISB2O/hyXpCGMn2y/u0XPkAHs57ikb55S6hWDs1/img.png?width=1320&amp;height=380&amp;face=0_0_1320_380,https://scrap.kakaocdn.net/dn/bU8fqt/hyXlLrfYuI/wtNMdqHffUUFnEhoa3yM31/img.png?width=1320&amp;height=380&amp;face=0_0_1320_380');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Quick Access Popup &ndash; &ldquo;Keep up the great work. Quick Access Popup is an awesome program.&rdquo; Rick on What&rsquo;s On My PC</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Home Get Quick Access Popup now for FREE! Save thousands of clicks with this Windows utility software!&nbsp;Launch in one click: folders,&nbsp;documents,applications,&nbsp;web links,snippets of textand much more. The ideal productivity booster to access and manage you</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.quickaccesspopup.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_4\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000;\" data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>4. TreeSheets (데이터를 입력하고, 탐색하고, 정리하세요)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;개발자가 \"스프레드시트, 마인드 맵, 아웃라인 도구, 개인 정보 관리자(PIM), 텍스트 편집기, 소규모 데이터베이스를 대체할 궁극의 도구\"라고 설명한 자유 형식의 데이터 정리 프로그램입니다. <br /><br />프로그램은&nbsp;원하는&nbsp;크기로&nbsp;설정할&nbsp;수&nbsp;있는&nbsp;그리드&nbsp;화면으로&nbsp;시작합니다.&nbsp;가장&nbsp;단순하게는&nbsp;각&nbsp;셀에&nbsp;텍스트&nbsp;메모를&nbsp;입력하거나&nbsp;이미지를&nbsp;삽입하는&nbsp;방식으로&nbsp;사용할&nbsp;수&nbsp;있습니다. <br /><br />더&nbsp;흥미로운&nbsp;기능은&nbsp;그리드&nbsp;안에&nbsp;또&nbsp;다른&nbsp;그리드를&nbsp;삽입할&nbsp;수&nbsp;있다는&nbsp;점으로,&nbsp;이를&nbsp;통해&nbsp;할&nbsp;일&nbsp;목록처럼&nbsp;계층&nbsp;구조를&nbsp;만들&nbsp;수&nbsp;있습니다.&nbsp;하나의&nbsp;항목에&nbsp;추가로&nbsp;완료해야&nbsp;할&nbsp;항목&nbsp;목록을&nbsp;포함하는&nbsp;방식입니다. <br /><br />이런&nbsp;구조를&nbsp;통해&nbsp;유연한&nbsp;데이터&nbsp;구성이&nbsp;가능합니다.&nbsp;예를&nbsp;들어&nbsp;프로젝트&nbsp;계획을&nbsp;마일스톤,&nbsp;주요&nbsp;요소,&nbsp;팀원,&nbsp;팀원이&nbsp;수행하는&nbsp;하위&nbsp;작업&nbsp;순으로&nbsp;조직했다고&nbsp;가정하면,&nbsp;클릭&nbsp;몇&nbsp;번으로&nbsp;이를&nbsp;개별&nbsp;팀원&nbsp;관점에서&nbsp;재구성해&nbsp;팀원이&nbsp;수행&nbsp;중인&nbsp;작업을&nbsp;한눈에&nbsp;확인할&nbsp;수&nbsp;있습니다. <br /><br />일반적으로&nbsp;다양한&nbsp;탐색,&nbsp;형식,&nbsp;프레젠테이션&nbsp;옵션이&nbsp;제공되어&nbsp;프로그램을&nbsp;사용자에&nbsp;맞게&nbsp;조정할&nbsp;수&nbsp;있습니다.&nbsp;작업한&nbsp;내용은&nbsp;XML,&nbsp;CSV,&nbsp;HTML,&nbsp;들여쓰기&nbsp;텍스트,&nbsp;이미지&nbsp;등&nbsp;다양한&nbsp;형식으로&nbsp;저장할&nbsp;수&nbsp;있으며,&nbsp;기존&nbsp;데이터를&nbsp;보유하고&nbsp;있다면&nbsp;XML,&nbsp;CSV,&nbsp;탭&nbsp;구분&nbsp;텍스트&nbsp;등을&nbsp;가져올&nbsp;수도&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"TreeSheets.png\" data-origin-width=\"1145\" data-origin-height=\"757\"><span data-url=\"https://blog.kakaocdn.net/dn/cpJ670/btsKnqlwyiM/JO5pP9j0CAb45seJ3K4BkK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cpJ670/btsKnqlwyiM/JO5pP9j0CAb45seJ3K4BkK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cpJ670/btsKnqlwyiM/JO5pP9j0CAb45seJ3K4BkK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcpJ670%2FbtsKnqlwyiM%2FJO5pP9j0CAb45seJ3K4BkK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"TreeSheets.png\" data-origin-width=\"1145\" data-origin-height=\"757\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1730098522538\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"TreeSheets\" data-og-description=\"Open Source Free Form Data Organizer (Hierarchical Spreadsheet) D O W N L O A D : Download LATEST from github releases: Windows / OS X / Linux Click HERE, pick your platform from the latest release. &nbsp; A &quot;hierarchical spreadsheet&quot; that is a great replaceme\" data-og-host=\"strlen.com\" data-og-source-url=\"https://strlen.com/treesheets/\" data-og-url=\"https://strlen.com/treesheets/\" data-og-image=\"https://scrap.kakaocdn.net/dn/snKVP/hyXpDlnYN1/wrw6ia3o2BDfJ3yF5swtGk/img.png?width=607&amp;height=498&amp;face=0_0_607_498\"><a href=\"https://strlen.com/treesheets/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://strlen.com/treesheets/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/snKVP/hyXpDlnYN1/wrw6ia3o2BDfJ3yF5swtGk/img.png?width=607&amp;height=498&amp;face=0_0_607_498');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">TreeSheets</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Open Source Free Form Data Organizer (Hierarchical Spreadsheet) D O W N L O A D : Download LATEST from github releases: Windows / OS X / Linux Click HERE, pick your platform from the latest release. &nbsp; A \"hierarchical spreadsheet\" that is a great replaceme</p>\n<p class=\"og-host\" data-ke-size=\"size16\">strlen.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_5\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000;\" data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>5. HelpNDoc (도움말&nbsp;파일&nbsp;및&nbsp;온라인&nbsp;문서&nbsp;만들기)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; HTML,&nbsp;CHM,&nbsp;PDF,&nbsp;DOC,&nbsp;PDF&nbsp;형식의&nbsp;도움말&nbsp;파일을&nbsp;생성하고&nbsp;관리할&nbsp;수&nbsp;있는&nbsp;도구입니다.&nbsp;워드&nbsp;프로세싱&nbsp;기능을&nbsp;갖춘&nbsp;쉬운&nbsp;인터페이스를&nbsp;제공하여&nbsp;문서를&nbsp;서식화하고&nbsp;이미지,&nbsp;표&nbsp;등을&nbsp;삽입할&nbsp;수&nbsp;있습니다. <br /><br />목차(TOC)를&nbsp;손쉽게&nbsp;만들고,&nbsp;개별&nbsp;페이지에&nbsp;키워드를&nbsp;할당하거나&nbsp;드래그&nbsp;앤&nbsp;드롭으로&nbsp;주제를&nbsp;재배치할&nbsp;수&nbsp;있습니다.&nbsp;또한&nbsp;문서&nbsp;가져오기,&nbsp;명령줄&nbsp;매개변수,&nbsp;코드&nbsp;생성(Visual&nbsp;Basic,&nbsp;C++,&nbsp;Delphi),&nbsp;실시간&nbsp;맞춤법&nbsp;검사&nbsp;등의&nbsp;기능을&nbsp;지원합니다. <br /><br />HelpNDoc는&nbsp;비상업적&nbsp;용도로만&nbsp;무료로&nbsp;사용할&nbsp;수&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"HelpNDoc.png\" data-origin-width=\"1100\" data-origin-height=\"629\"><span data-url=\"https://blog.kakaocdn.net/dn/c0qaGr/btsKm4iUMS9/P1wBGYcn0RglAkh4g9gIWk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c0qaGr/btsKm4iUMS9/P1wBGYcn0RglAkh4g9gIWk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c0qaGr/btsKm4iUMS9/P1wBGYcn0RglAkh4g9gIWk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc0qaGr%2FbtsKm4iUMS9%2FP1wBGYcn0RglAkh4g9gIWk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"HelpNDoc.png\" data-origin-width=\"1100\" data-origin-height=\"629\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1730098558335\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"HelpNDoc Help Authoring Tool - Create Help Files, User Manuals and eBooks\" data-og-description=\"HelpNDoc is one of the most popular and easy to use Help Authoring Tool (HAT). It can generate various documentation formats from a single source: CHM, Responsive HTML, Word DocX, PDF, ePub and Kindle Ebooks, and Markdown files. And it is Free for personal\" data-og-host=\"www.helpndoc.com\" data-og-source-url=\"https://www.helpndoc.com/\" data-og-url=\"https://www.helpndoc.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/nnV8O/hyXprFf9Rj/KTrWJAg9zI68iEZdE5H3j0/img.png?width=1500&amp;height=1500&amp;face=0_0_1500_1500,https://scrap.kakaocdn.net/dn/znoiq/hyXpAa6QTW/qbRG7lk0wZwhc9eVn8bVG0/img.png?width=1500&amp;height=1500&amp;face=0_0_1500_1500\"><a href=\"https://www.helpndoc.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.helpndoc.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/nnV8O/hyXprFf9Rj/KTrWJAg9zI68iEZdE5H3j0/img.png?width=1500&amp;height=1500&amp;face=0_0_1500_1500,https://scrap.kakaocdn.net/dn/znoiq/hyXpAa6QTW/qbRG7lk0wZwhc9eVn8bVG0/img.png?width=1500&amp;height=1500&amp;face=0_0_1500_1500');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">HelpNDoc Help Authoring Tool - Create Help Files, User Manuals and eBooks</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">HelpNDoc is one of the most popular and easy to use Help Authoring Tool (HAT). It can generate various documentation formats from a single source: CHM, Responsive HTML, Word DocX, PDF, ePub and Kindle Ebooks, and Markdown files. And it is Free for personal</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.helpndoc.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.\n\n\n \n 윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는 상용프로그램과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의 쉐어웨어, 무료로 사용할 수 있는 프리웨어등으로 크게 3가지로 나뉘게 되는데요.\n 물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개하고 있습니다.\n \n \n'어떤오후의 프리웨어 이야기'에서 추천하는\n 2024년 10월 28일자 공개자료실 윈도우용 추천 프리웨어입니다.\n \n \n1. ScreenBlur (반투명 화면으로 데스크탑 잠금)\n\n  데스크톱을 비밀번호로 보호된 화면 오버레이 또는 데스크톱 차단 옵션으로 가려, 사생활을 보호할 수 있게 해주는 프로그램입니다. 이 프로그램을 통해 바탕화면, 바로가기, 가젯 등을 감출 수 있습니다. 특정 시간 동안 활동이 없을 때 자동으로 화면을 잠그거나, 사용자 지정 단축키를 눌러 잠금을 실행할 수 있습니다. 반투명 잠금 화면을 통해 열려 있는 창이나 앱을 확인할 수 있지만, 다른 사람이 컴퓨터를 조작하지 못하도록 방지합니다. \n추가적인 사생활 보호를 원한다면, ScreenBlur는 모든 창을 자동으로 최소화하고, 잠금 중에는 바탕화면 아이콘과 가젯을 숨길 수도 있습니다. 그 외에 잠금 상태에서 소리를 무음 처리하거나, 여러 잠금 화면 디자인 선택, 잠금 화면의 투명도 조정, 재시작 시 자동 잠금 등의 기능도 제공합니다. \n다만, ScreenBlur는 해킹 방지용 보안 프로그램은 아니며, 사생활 보호와 함께 반려동물이나 어린이가 컴퓨터를 만지는 것을 방지하는 정도로 설계되었습니다. 고급 사용자는 잠금을 우회할 수 있는 방법을 찾을 수 있습니다.\n\n\n \n▶ 프리웨어 - 개인\n▶ Windows 10/11\n▶무료 다운로드◀\n\n \nScreenBlur\nScreen Locker for Windows . Temporarily lock or hide the desktop. Can lock PC after a while and unlock the next day. Weekly schedule. Bla...\nindeepsoft.blogspot.com\n\n \n \n \n \n2. CobraTek PC Info(시스템 정보 확인)\n  PC의 세부 기술 정보를 제공하는 간단한 시스템 정보 도구입니다. 탭 형식의 인터페이스를 통해 운영 체제, CPU, RAM, 하드 드라이브, 메인보드, 사운드 장치, 네트워크, 주변 기기 등의 기술 정보를 확인할 수 있습니다. 모든 정보를 텍스트 파일로 저장하거나 프린터로 출력할 수도 있습니다\n\n\n \n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드\n\n \nOfficial Home Page | CobraTek\nAt CobraTek our goal - lead the innovation forward by developing the best applications and games.\nwww.cobratek.net\n\n \n \n \n \n3. Quick Access Popup (자주 사용하는 폴더에 빠르게 액세스하기)\n자주 사용하는 폴더와 애플리케이션에 쉽게 접근할 수 있도록 돕는 유용한 도구입니다. 프로그램 실행 후, 탐색기 창(열기/저장 대화상자 포함) 내에서 마우스 중간 클릭이나 Win+W를 누르면 다양한 바로가기 메뉴가 열립니다. \n사용자 프로필, Windows, Program Files와 같은 일반 폴더에 빠르게 접근할 수 있으며, 최근에 닫은 폴더를 다시 열거나 즐겨찾기를 탐색하고 현재 폴더나 중요한 애플리케이션을 목록에 추가해 나중에 쉽게 열 수 있습니다. \n명령 줄에서도 작동하여 긴 경로를 직접 입력하지 않아도 되고, 중간 클릭으로 폴더를 선택하면 필요한 CD 명령이 자동으로 입력됩니다. \n구성 옵션이 다양하여 기본 폴더를 제거하거나 새로운 폴더를 추가하고, 단축키를 사용자에 맞게 조정할 수 있습니다. \nFTP 지원 기능도 추가되어 Explorer, Directory Opus, Total Commander에서 FTP 사이트에 자동으로 로그인할 수 있습니다. 그룹 및 즐겨찾기 기능이 개선되어 여러 즐겨찾기 폴더를 한 번의 클릭으로 열 수 있으며, 새로운 즐겨찾기 추가/편집 대화상자를 통해 특정 크기와 위치로 폴더를 표시하는 등 고급 설정이 가능합니다. \n개별 폴더와 하위 메뉴도 단축키로 열 수 있으며, 이전 Folders Popup 사용자는 기존 즐겨찾기를 불러올 수 있는 가져오기 옵션을 통해 손쉽게 시작할 수 있습니다.\n\n\n \n▶ 프리웨어 - 개인\n▶Windows 10/11 \n▶무료 다운로드 ◀\n\n \nQuick Access Popup – “Keep up the great work. Quick Access Popup is an awesome program.” Rick on What’s On My PC\nHome Get Quick Access Popup now for FREE! Save thousands of clicks with this Windows utility software! Launch in one click: folders, documents,applications, web links,snippets of textand much more. The ideal productivity booster to access and manage you\nwww.quickaccesspopup.com\n\n \n \n \n \n4. TreeSheets (데이터를 입력하고, 탐색하고, 정리하세요)\n\n 개발자가 \"스프레드시트, 마인드 맵, 아웃라인 도구, 개인 정보 관리자(PIM), 텍스트 편집기, 소규모 데이터베이스를 대체할 궁극의 도구\"라고 설명한 자유 형식의 데이터 정리 프로그램입니다. \n프로그램은 원하는 크기로 설정할 수 있는 그리드 화면으로 시작합니다. 가장 단순하게는 각 셀에 텍스트 메모를 입력하거나 이미지를 삽입하는 방식으로 사용할 수 있습니다. \n더 흥미로운 기능은 그리드 안에 또 다른 그리드를 삽입할 수 있다는 점으로, 이를 통해 할 일 목록처럼 계층 구조를 만들 수 있습니다. 하나의 항목에 추가로 완료해야 할 항목 목록을 포함하는 방식입니다. \n이런 구조를 통해 유연한 데이터 구성이 가능합니다. 예를 들어 프로젝트 계획을 마일스톤, 주요 요소, 팀원, 팀원이 수행하는 하위 작업 순으로 조직했다고 가정하면, 클릭 몇 번으로 이를 개별 팀원 관점에서 재구성해 팀원이 수행 중인 작업을 한눈에 확인할 수 있습니다. \n일반적으로 다양한 탐색, 형식, 프레젠테이션 옵션이 제공되어 프로그램을 사용자에 맞게 조정할 수 있습니다. 작업한 내용은 XML, CSV, HTML, 들여쓰기 텍스트, 이미지 등 다양한 형식으로 저장할 수 있으며, 기존 데이터를 보유하고 있다면 XML, CSV, 탭 구분 텍스트 등을 가져올 수도 있습니다.\n\n\n \n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nTreeSheets\nOpen Source Free Form Data Organizer (Hierarchical Spreadsheet) D O W N L O A D : Download LATEST from github releases: Windows / OS X / Linux Click HERE, pick your platform from the latest release.   A \"hierarchical spreadsheet\" that is a great replaceme\nstrlen.com\n\n \n \n \n \n5. HelpNDoc (도움말 파일 및 온라인 문서 만들기)\n  HTML, CHM, PDF, DOC, PDF 형식의 도움말 파일을 생성하고 관리할 수 있는 도구입니다. 워드 프로세싱 기능을 갖춘 쉬운 인터페이스를 제공하여 문서를 서식화하고 이미지, 표 등을 삽입할 수 있습니다. \n목차(TOC)를 손쉽게 만들고, 개별 페이지에 키워드를 할당하거나 드래그 앤 드롭으로 주제를 재배치할 수 있습니다. 또한 문서 가져오기, 명령줄 매개변수, 코드 생성(Visual Basic, C++, Delphi), 실시간 맞춤법 검사 등의 기능을 지원합니다. \nHelpNDoc는 비상업적 용도로만 무료로 사용할 수 있습니다.\n\n\n \n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nHelpNDoc Help Authoring Tool - Create Help Files, User Manuals and eBooks\nHelpNDoc is one of the most popular and easy to use Help Authoring Tool (HAT). It can generate various documentation formats from a single source: CHM, Responsive HTML, Word DocX, PDF, ePub and Kindle Ebooks, and Markdown files. And it is Free for personal\nwww.helpndoc.com",
        "guid": "https://muzbox.tistory.com/483490",
        "categories": [
          "NEWS/프리웨어 뉴스",
          "개인 정보 관리자",
          "공개자료실",
          "데스크탑 잠금",
          "도움말 만들기",
          "마인드 맵",
          "바로가기",
          "스프레드시트",
          "시스템 정보 확인",
          "아웃라인 도구",
          "프리웨어"
        ],
        "isoDate": "2024-10-28T06:57:18.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "(RULIWEB`Д')/",
        "title": "[MQ] VR로 부활한 ‘닥구’나이트, 배트맨: 아캄 섀도우",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2261",
        "pubDate": "Mon, 28 Oct 2024 17:01:56 +0900",
        "author": "(RULIWEB`Д')/",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/24/10/28/192d22394364c329e.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2024-10-28T08:01:56.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "내가 신입사원 때 저지른 실수 10가지와 그 해결 방안",
        "link": "https://jacking75.github.io/tech_20241030/",
        "pubDate": "Wed, 30 Oct 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRl_1vo-gHlH-2kfJEHlm3M6SLN9B26IpRGLQZPS9_XSoTZ87PyOSyAEpSUl6rtsZCrrxJjZE3DWyOb/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech_20241030/",
        "isoDate": "2024-10-29T15:00:00.000Z"
      },
      {
        "title": "C++ - 함수 반환값 파기를 명시하는 방법",
        "link": "https://jacking75.github.io/Cpp_20241028/",
        "pubDate": "Mon, 28 Oct 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vR71bqXfJkSH4TIwKsEPwHCdglg1nsTqrUyP0eWxMijpBzl8YY1wYzQWptZk0uR5QVNBOiX8wyl0Q86/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/Cpp_20241028/",
        "isoDate": "2024-10-27T15:00:00.000Z"
      },
      {
        "title": "내가 신입사원 때 저지른 실수 10가지와 그 해결 방안",
        "link": "https://jacking75.github.io/ETC_20241026/",
        "pubDate": "Sat, 26 Oct 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRl_1vo-gHlH-2kfJEHlm3M6SLN9B26IpRGLQZPS9_XSoTZ87PyOSyAEpSUl6rtsZCrrxJjZE3DWyOb/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ETC_20241026/",
        "isoDate": "2024-10-25T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": [
      {
        "title": "DuckDB 사용법(DuckDB Python + Jupyter Lab)",
        "link": "https://zzsza.github.io/data-engineering/2024/10/25/duckdb/",
        "pubDate": "Fri, 25 Oct 2024 00:00:00 +0000",
        "content": "<ul>\n  <li>이 글은 DuckDB 사용법을 작성한 글입니다</li>\n  <li>예상 독자\n    <ul>\n      <li>DuckDB가 궁금하신 분</li>\n      <li>데이터 분석가 : Pandas가 느리다고 생각해서 다른 대안을 찾고 있는 분</li>\n      <li>데이터 엔지니어 : 데이터 엔지니어링의 Transform 영역에서 활용할 수 있는 수단을 찾고 있는 분. 작은 규모의 회사에서 데이터 웨어하우스를 고민하고 있는 분</li>\n    </ul>\n  </li>\n  <li>키워드 : Duckdb 사용법, Duckdb 설치, Duckdb Python</li>\n</ul>\n\n<hr />\n\n<h1 id=\"duckdb-소개-duckdb란\">DuckDB 소개, DuckDB란?</h1>\n<ul>\n  <li><a href=\"https://github.com/duckdb/duckdb\">Github Repo</a></li>\n  <li>DuckDB는 fast in-process Analytical Database</li>\n  <li>왜 Duck인가?\n    <ul>\n      <li>Duck(오리)은 날 수도 있고, 수영도 하고, 걷는 놀라운 동물. 환경에 유연함</li>\n      <li>다재다능하고 탄력적인 데이터 관리 시스템을 만들고 싶었는데, 이런 시스템이 오리와 유사하다고 생각해서 DuckDB라고 이름을 지음</li>\n    </ul>\n  </li>\n  <li>C++로 작성되었고, Column-oriented 데이터베이스로 매우 빠름</li>\n  <li>Parquet, CSV, JSON 파일에 직접 쿼리할 수 있음\n    <ul>\n      <li>AWS S3, GCS, Azure Blob Storage 등에서도 쿼리할 수 있음</li>\n      <li>S3 Iceberg도 지원</li>\n    </ul>\n  </li>\n  <li>사용하기 쉬움</li>\n  <li>로컬 Data Warehouse(나만을 위한 DW)라고 생각해도 될 듯</li>\n  <li>Portable Python Dataframe 라이브러리라고 나온 <a href=\"https://github.com/ibis-project/ibis\">ibis</a>의 백엔드 엔진이 DuckDB</li>\n  <li>공식 Docker 이미지가 존재하지 않음\n    <ul>\n      <li>애플리케이션에서 DuckDB를 동시에 실행하려고 함. 별도의 컨테이너화를 하지 않아도 됨</li>\n      <li>웹페이지, 앱 등에서 그냥 DuckDB를 설치해서 사용하면 됨</li>\n    </ul>\n  </li>\n  <li>DuckDB 기반 관리형 서비스 : <a href=\"https://motherduck.com/\">MotherDuck</a></li>\n  <li>Live Demo를 보고 싶다면 <a href=\"https://shell.duckdb.org/\">DuckDB Live Demo</a>에서 확인할 수 있음</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/07teiy0lb0luxh7/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-24%20%EC%98%A4%ED%9B%84%2011.10.27.png?raw=1\" alt=\"DuckDB Live Demo\" /></p>\n\n<p><br /><br /></p>\n\n<h2 id=\"big-data-is-dead\">BIG DATA IS DEAD</h2>\n<ul>\n  <li>Google Cloud의 BigQuery를 만든 멤버 중 한 명인 Jordan Tigani가 2023년 2월에 올린 <a href=\"https://motherduck.com/blog/big-data-is-dead/\">BIG DATA IS DEAD</a>라는 글을 보다가 MotherDuck을 알게 되고, DuckDB를 알게 되었음</li>\n  <li>BIG DATA IS DEAD 글의 핵심은 다음과 같음\n    <ul>\n      <li>대부분의 기업은 “빅데이터”를 가지고 있지 않음\n        <ul>\n          <li>BigQuery 사용자 대부분은 1TB 미만의 데이터를 보유</li>\n          <li>일반적인 기업의 데이터 웨어하우스 크기는 100GB가 일반적임</li>\n          <li>특정 VC의 포트폴리오 회사 중 제일 큰 B2B 기업은 약 1TB, 제일 큰 B2C 기업은 약 10TB를 가지고 있었음. 그러나 대부분 이것보다 적은 데이터를 가짐</li>\n        </ul>\n      </li>\n      <li>데이터를 쿼리하는 패턴\n        <ul>\n          <li>시간이 지나면서 데이터는 많아지지만, 컴퓨팅 리소스는 거의 변하지 않음</li>\n          <li>1년에 1,000달러 이상을 지출하는 고객을 살펴보니, 쿼리의 90%가 100MB 미만의 데이터를 처리함</li>\n          <li>데이터가 많은 고객도 많은 양의 데이터를 쿼리하지 않음</li>\n          <li>최근 24시간 내의 데이터가 가장 자주 활용</li>\n          <li>오래 된 데이터는 사용되지 않음</li>\n        </ul>\n      </li>\n      <li>싱글 머신의 성능 향상\n        <ul>\n          <li>요즘 AWS의 표준 인스턴스는 64 Core, 256GB RAM 서버\n            <ul>\n              <li>2006년에 AWS에서 EC2를 처음 출시할 땐 싱글 코어에 2GB RAM 서버였음</li>\n            </ul>\n          </li>\n          <li>예전엔 대형 서버가 비쌌으나, 요즘엔 저렴해짐</li>\n          <li>과거에 분산 처리가 필요했던 작업들이 싱글 머신에서 처리될 수 있음</li>\n        </ul>\n      </li>\n      <li>데이터는 자산이 아닌 부채일 수 있음\n        <ul>\n          <li>사람들이 빅데이터를 가지게 되는 이유는 필요해서가 아닌 단순히 삭제하는 것을 귀찮아해서</li>\n          <li>같은 쿼리만 반복적으로 한다면 집계된 데이터만 저장하는 게 좋을 수 있음</li>\n          <li>언젠가 쓸지 모른다는 생각으로 보관할 수 있음</li>\n        </ul>\n      </li>\n      <li>빅데이터의 1%인지 확인할 수 있는 질문\n        <ul>\n          <li>정말 엄청난 양의 데이터를 생성하고 있는가?</li>\n          <li>그렇다면 정말 한 번에 그 많은 데이터를 사용할 필요가 있는가?</li>\n          <li>그렇다면 그 데이터가 정말 1대의 컴퓨터에 담기에 큰가?</li>\n          <li>그렇다면 당신이 단순히 데이터를 쌓아두기만 하는 사람이 아닌지 확실할 수 있는가?</li>\n          <li>그렇다면 데이터를 요약해서 보관하는 것이 더 나은 방법이 아닐까?</li>\n          <li>하나라도 아니요라고 답하면 데이터 규모에 맞는 새로운 데이터 도구를 사용하는 것이 좋을 수 있음</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>위와 같은 내용 때문에 복잡한 분산 시스템 대신 단순하고 효율적인 솔루션이 필요하다고 함</li>\n  <li>BIG DATA IS DEAD엔 직접적으로 나오지 않지만, DuckDB가 이런 상황에 적절한 도구라는 것을 알 수 있음</li>\n  <li><strong>시간이 지나면서 점점 싱글 머신이 확장되어 분산 처리까지 갈 필요가 없다는 의미 =&gt; DuckDB는 이 용도에 적합</strong></li>\n</ul>\n\n<p><br /><br /></p>\n\n<hr />\n\n<h2 id=\"duckdb-목표--duckdb-장점\">DuckDB 목표 &amp; DuckDB 장점</h2>\n<ul>\n  <li>세상에 다양한 DB가 있는데, 모든 상황에 적합한 데이터베이스는 없음. 특정 사용 사례에 따라 더 잘 맞도록 설계됨</li>\n  <li>다음은 DuckDB의 목표 및 장점</li>\n</ul>\n\n<h3 id=\"1-simple\">1. Simple</h3>\n<ul>\n  <li>SQLite처럼 설치하고 사용하기 쉬워야 함</li>\n  <li>외부 종속성 없이 동작하고, 별도의 서버 설치나 관리가 필요 없음</li>\n  <li>DuckDB는 별도의 프로세스로 실행되지 않고 호스트 프로세스에서 실행됨</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"2-portable\">2. Portable</h3>\n<ul>\n  <li>모든 OS에서 동작해야 함 (Windows, MacOS, Linux)</li>\n  <li>다양한 CPU 아키텍처(x86, ARM) 지원</li>\n  <li>소형 디바이스, 웹 브라우저, 모바일에서도 실행 가능(DuckDB-Wasm 사용)</li>\n  <li>Java, C, C++, Go, Node.js, Python 등 다양한 API 제공</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"3-feature-rich\">3. Feature Rich</h3>\n<ul>\n  <li>데이터 분석을 위한 복잡한 쿼리를 지원(윈도우 함수)</li>\n  <li>커스텀한 MVCC(Multi-Version Concurrency Control)를 통해 ACID 트랜잭션을 보장한다고 주장\n    <ul>\n      <li>MVCC : 데이터베이스에서 여러 버전의 데이터를 동시에 관리. 수정할 때마다 새 버전 생성</li>\n      <li>HyPer의 serializable variant MVCC 방식을 구현</li>\n    </ul>\n  </li>\n  <li>쿼리의 속도를 높이기 위한 보조 인덱스를 지원</li>\n  <li>Python, R과 통합</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"4-fast\">4. Fast</h3>\n<ul>\n  <li>OLAP 쿼리 워크로드를 지원</li>\n  <li>전체 테이블에 대한 집계, 큰 테이블의 JOIN 등을 빠르게 처리</li>\n  <li>개별 값당 소모되는 CPU 사이클의 양을 줄이는 것이 중요하고, 이를 위해 just-in-time 쿼리 실행 엔진, Vectorized(벡터화된) 쿼리 실행 엔진을 사용</li>\n  <li><a href=\"https://www.tpc.org/tpch/\">TPC-H</a>, <a href=\"https://www.tpc.org/tpcds/\">TPC-DS</a> 벤치마크로 테스트\n    <ul>\n      <li>TPC-H : Decision Support Benchmark, 공급망/구매 데이터로 구성된 비즈니스 의사결정 시나리오</li>\n      <li>TPC-DS : Data Warehouse Benchmark, 온라인 쇼핑 데이터로 구성된 데이터 웨어하우스 시나리오</li>\n      <li>확인하는 것들 : 쿼리 응답 시간, 처리량, 사용자가 많을 때의 처리량, 데이터 크기별 성능</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"5-extensible\">5. Extensible</h3>\n<ul>\n  <li><a href=\"https://duckdb.org/docs/extensions/overview.html\">유연한 확장 메커니즘</a>을 제공\n    <ul>\n      <li>새로운 데이터 타입, 함수, 파일 포맷 등을 정의할 수 있음</li>\n    </ul>\n  </li>\n  <li>Community Extensions은 <a href=\"https://duckdb.org/docs/extensions/community_extensions.html\">공식 문서</a>에서 확인할 수 있으며, <a href=\"https://github.com/duckdb/community-extensions\">Github Repo</a>도 운영\n    <ul>\n      <li><a href=\"https://duckdb.org/2024/07/05/community-extensions.html\">DuckDB Community Extensions</a> 문서에 디자인 철학, 확장 기능 사용에 대한 내용을 확인할 수 있음</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"6-free\">6. Free</h3>\n<ul>\n  <li>DuckDB의 개발자들은 네덜란드 공무원일 때 개발을 시작</li>\n  <li>누구나 자유롭게 제공하는 것을 사회에 대한 책임과 의무로 봄</li>\n  <li>따라서 MIT 라이선스를 채택</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"7-thorough-testing\">7. Thorough Testing</h3>\n<ul>\n  <li>최초엔 Research 그룹에서 만들었지만, 안정적인 데이터베이스 시스템이 되는 것을 목표로 함</li>\n  <li>여러 플랫폼과 컴파일러에서 반복적으로 테스트</li>\n  <li><a href=\"https://github.com/duckdb/duckdb/actions\">Github Actions</a>을 보면 여러 테스트가 돌아가고 있는 것을 확인할 수 있음</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"duckdb-성능-벤치마크\">DuckDB 성능 벤치마크</h2>\n<ul>\n  <li>벤치마크가 기록된 문서가 있나 찾아보니, 다음 2개의 글을 확인함\n    <ul>\n      <li><a href=\"https://duckdb.org/2023/04/14/h2oai.html\">The Return of the H2O.ai Database-like Ops Benchmark</a></li>\n      <li><a href=\"https://duckdb.org/2023/11/03/db-benchmark-update.html\">Updates to the H2O.ai db-benchmark!</a></li>\n    </ul>\n  </li>\n  <li>DuckDB에서 공개한 문서 <a href=\"https://duckdblabs.github.io/db-benchmark/\">Database-like ops benchmark</a>를 보면 GROUP BY, JOIN 성능 결과를 확인할 수 있음\n    <ul>\n      <li>아래 이미지는 위 링크에서 일부를 가져옴. 링크에 더 자세한 내용을 확인할 수 있음</li>\n      <li>벤치마크 결과 다른 도구보다 성능이 좋고, 사용해봤을 때 오? 라는 생각이 들 정도로 빠름</li>\n    </ul>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/3tqgg6zroygwxec/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%204.24.21.png?raw=1\" alt=\"DuckDB GROUP BY Benchmark\" /></p>\n\n<p><img src=\"https://www.dropbox.com/s/3tqgg6zroygwxec/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%204.24.21.png?raw=1\" alt=\"DuckDB JOIN Benchmark\" /></p>\n\n<ul>\n  <li><a href=\"https://duckdb.org/2024/06/26/benchmarks-over-time.html\">Benchmarking Ourselves over Time at DuckDB</a> 이 글도 확인해보니, 시간의 흐름에 따라 DuckDB가 더욱 빨라지고 있는 내용을 담고 있었음. 2023년 말에 급격한 성능 향상이 존재\n    <ul>\n      <li>최근 3년 동안 3~25배 빨라지고, 10배 많은 데이터를 분석할 수 있게 됨</li>\n    </ul>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/ehpq1hpoztdn0zn/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%204.28.02.png?raw=1\" alt=\"DuckDB benchmark results over time\" /></p>\n\n<ul>\n  <li>Pandas보단 확실히 빠르고, Rust로 만들어진 <a href=\"https://github.com/pola-rs/polars\">Polars</a>와 많이 비교됨\n    <ul>\n      <li><a href=\"https://github.com/prrao87/duckdb-study\">DuckDB와 Polars, Pandas를 비교한 Repo</a> : 이 결과에서도 DuckDB가 더 빠르다고 나옴</li>\n      <li>회사에 도입하려고 하면 우리 데이터로 테스트를 충분히 하고 선택할 것. 벤치마크 결과를 항상 신뢰하는 것보다, 다시 점검하는 것이 필요</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"duckdb-설치\">DuckDB 설치</h2>\n<ul>\n  <li><a href=\"https://duckdb.org/docs/installation/index\">공식 문서</a>에 내용을 확인할 수 있음</li>\n  <li>\n    <p>Mac OS 기준</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>brew install duckdb\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>윈도우</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>winget install DuckDB.cli\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>Linux : 최신 버전은 <a href=\"https://github.com/duckdb/duckdb/releases\">Github</a>에서 확인</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget https://github.com/duckdb/duckdb/releases/download/v1.1.2/duckdb_cli-linux-aarch64.zip\n\nunzip duckdb_cli-linux-aarch64.zip\n\n./duckdb\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"duckdb-실행하기\">DuckDB 실행하기</h1>\n<ul>\n  <li>\n    <p>CLI에서 실행은 간단함</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>duckdb\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/71jispy4jv5g72n/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%204.44.35.png?raw=1\" alt=\"DuckDB in CLI\" /></p>\n\n<ul>\n  <li>데이터 분석가 관점에서 DuckDB를 사용한다면 Jupyter Lab을 사용할 텐데, brew로 설치하면 파이썬 패키지도 설치되어 바로 사용할 수 있음</li>\n  <li>Jupyter Lab 실행</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>jupyter lab\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2 id=\"간단한-실행duckdb-python\">간단한 실행(DuckDB Python)</h2>\n<ul>\n  <li>DuckDB를 사용할 때, <code class=\"language-plaintext highlighter-rouge\">duckdb.sql</code>로 실행하는 방법과 <code class=\"language-plaintext highlighter-rouge\">duckdb.connect</code>로 Connection을 생성해서 쓰는 방법이 존재\n    <ul>\n      <li>1) <code class=\"language-plaintext highlighter-rouge\">duckdb.sql</code> : 전역 메서드로 사용\n        <ul>\n          <li>간단한 스크립트나 빠른 프로토타이핑, 노트북에서 유용</li>\n          <li>메모리에 데이터를 저장함</li>\n        </ul>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>import duckdb\nduckdb.sql(\"SELECT 1\")\n</code></pre></div>        </div>\n      </li>\n      <li>2) <code class=\"language-plaintext highlighter-rouge\">duckdb.connect</code> : Connection 객체를 생성해서 사용\n        <ul>\n          <li>커넥션을 생성할 때 In-Memory 모드와 Both Persistent 모드를 선택할 수 있음\n            <ul>\n              <li>Disk에 Spilling을 사용해 메모리보다 큰 워크로드에서 데이터를 처리할 수 있음\n                <ul>\n                  <li>특정 작업이나 메모리가 부족할 때 데이터를 디스크에 임시로 저장하는 기법</li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n          <li>별도의 옵션을 지정하지 않거나 <code class=\"language-plaintext highlighter-rouge\">:memory:</code> 옵션을 사용하면 In-Memory 모드로 생성</li>\n          <li>파일 경로를 지정하면 파일이 생성되거나 사용됨</li>\n        </ul>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># 데이터를 메모리에 저장해서 사용\nimport duckdb\n\ncon = duckdb.connect(\":memory:\")\n</code></pre></div>        </div>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># 이 케이스에는 test.db 파일을 생성\nimport duckdb\n\ncon = duckdb.connect(\"test.db\")\n</code></pre></div>        </div>\n      </li>\n    </ul>\n  </li>\n  <li><code class=\"language-plaintext highlighter-rouge\">.show()</code>는 결과를 출력만 하고 None을 반환</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">.show()</code>를 사용하지 않으면 Relation 객체로 반환되어서 다른 곳에서 사용 가능</li>\n  <li>\n    <p><code class=\"language-plaintext highlighter-rouge\">.df()</code>를 사용하면 Pandas DataFrame으로 변경. 그러나 DuckDB를 사용하면 <code class=\"language-plaintext highlighter-rouge\">.df()</code>는 거의 사용하지 않거나 가공을 DuckDB로 최대한 한 후에 사용하는 것이 좋을 듯(실행 시간이 느린 것이 체감됨)</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>import duckdb\nduckdb.sql(\"SELECT 1\").show()\noutput = duckdb.sql(\"SELECT 1 AS a\")\nduckdb.sql(\"SELECT a+1 AS b FROM output\").show()\nnew_df = duckdb.sql(\"SELECT 1 AS a\").df()\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/1xyw08lgygmj8ek/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%204.55.01.png?raw=1\" /></p>\n\n<p><br /></p>\n\n<h2 id=\"data-load\">Data Load</h2>\n<ul>\n  <li>CSV, Parquet, JSON에 바로 접근할 수 있음\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">read_csv</code>, <code class=\"language-plaintext highlighter-rouge\">read_parquet</code>, <code class=\"language-plaintext highlighter-rouge\">read_json</code> 함수를 사용</li>\n    </ul>\n  </li>\n  <li>\n    <p>NYC 택시 데이터를 다운받아 테스트(약 300만 Row)</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2024-01.parquet\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>데이터 DESCRIBE</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>duckdb.sql(\"DESCRIBE SELECT * FROM 'yellow_tripdata_2024-01.parquet'\")\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/1p6x2cwr3qngtf5/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%207.24.20.png?raw=1\" /></p>\n\n<ul>\n  <li>Parquet 파일 Load\n    <ul>\n      <li>노트북 파일과 동일한 경로에 파일이 존재함</li>\n      <li>read_parquet를 사용하는 것과 사용하지 않는 것의 차이는 없음</li>\n      <li>경로에서 glob 패턴을 사용할 수 있음 : SELECT * FROM ‘test/*.parquet’;</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>duckdb.sql(\"SELECT * FROM 'yellow_tripdata_2024-01.parquet' LIMIT 3\")\n</code></pre></div>    </div>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>duckdb.sql(\"SELECT * FROM read_parquet('yellow_tripdata_2024-01.parquet') LIMIT 3\")\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/n3hs4qm6nvped4e/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%207.26.56.png?raw=1\" /></p>\n\n<ul>\n  <li>Parquet 파일을 읽고, 쿼리문에서 사용하고 싶다면 다음과 같이 사용할 수 있음</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  nyc_data = duckdb.read_parquet(\"yellow_tripdata_2024-01.parquet\")\n  duckdb.sql(\"SELECT * FROM nyc_data\")\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/s/p7ltdaim85hsoz7/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%207.27.26.png?raw=1\" /></p>\n\n<p><br /></p>\n\n<h2 id=\"jupysql을-사용해-더-편하게-실행하기\">jupysql을 사용해 더 편하게 실행하기</h2>\n<ul>\n  <li>위 코드를 보면 항상 duckdb 또는 conn을 입력하고 쿼리를 실행해야 함. 반복적으로 하다 보면 이런 것들이 번거로움</li>\n  <li><a href=\"https://jupysql.ploomber.io/en/latest/howto.html\">jupysql</a>을 사용하면 간단하게 실행할 수 있음</li>\n  <li>\n    <p>jupysql 설치</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>!pip install jupysql\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>SQL 쿼리를 실행한 후, Pandas DataFrame으로 항상 저장하는 옵션 설정</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%config SqlMagic.autopandas = True\n</code></pre></div>    </div>\n  </li>\n  <li>Extension Load\n    <ul>\n      <li>메모리 모드로 conn 생성</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%load_ext sql\nconn = duckdb.connect(':memory:')\n%sql conn --alias duckdb\n</code></pre></div>    </div>\n  </li>\n  <li>별도의 셸에서 실행. <code class=\"language-plaintext highlighter-rouge\">%sql</code>, <code class=\"language-plaintext highlighter-rouge\">%%sql</code>을 사용. <code class=\"language-plaintext highlighter-rouge\">%%sql</code>은 여러 줄 쿼리 실행 가능\n    <ul>\n      <li>한 셸에서 여러 명령을 실행하려면 세미콜론으로 구분해야 함</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql \nSELECT\n  DATE_TRUNC('hour', tpep_pickup_datetime) AS pickup_hour,\n  COUNT(*) AS cnt\nFROM read_parquet('yellow_tripdata_2024-01.parquet')\nGROUP BY ALL\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/2nvt2j0453vus7p/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%207.36.58.png?raw=1\" /></p>\n\n<ul>\n  <li>\n    <p>위에 사용한 쿼리의 결과를 저장하지 않아서 사용할 수 없고, <code class=\"language-plaintext highlighter-rouge\">&lt;&lt;</code>을 사용해 변수에 저장할 수 있음</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql hour_cnt &lt;&lt; \nSELECT\n  DATE_TRUNC('hour', tpep_pickup_datetime) AS pickup_hour,\n  COUNT(*) AS cnt\nFROM read_parquet('yellow_tripdata_2024-01.parquet')\nGROUP BY ALL\n\nhour_cnt\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/okmx46ivlnw5a22/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%207.38.18.png?raw=1\" /></p>\n\n<p><br /></p>\n\n<h2 id=\"sql-문법\">SQL 문법</h2>\n<ul>\n  <li><a href=\"https://duckdb.org/docs/sql/introduction\">DuckDB SQL 문서</a>를 확인하면 자세한 문법을 확인할 수 있음</li>\n  <li>일반적인 SQL 문법은 대부분 지원하고, PostgreSQL과 유사함\n    <ul>\n      <li>PostgreSQL과 다른 점은 <a href=\"https://duckdb.org/docs/sql/dialect/postgresql_compatibility.html\">PostgreSQL Compatibility</a> 문서에서 확인할 수 있음</li>\n    </ul>\n  </li>\n  <li>SQL 문법이 궁금하시면 제가 인프런에 무료로 공개해둔 <a href=\"https://inf.run/p121d\">초보자를 위한 BigQuery(SQL) 입문</a> 강의를 추천\n    <ul>\n      <li>문법 중에 일부만 다르고, 대부분 큰 흐름은 유사함</li>\n    </ul>\n  </li>\n  <li>SQL 문법은 기억하고 싶은 일부분만 기록</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"grouping-sets-rollup-cube\">GROUPING SETS, ROLLUP, CUBE</h3>\n<ul>\n  <li>여러 차원에 대한 그룹화를 실행할 때 사용</li>\n  <li>GROUP BY에 포함됨</li>\n  <li>GROUPING SETS : 여러 차원에 대한 그룹화\n    <ul>\n      <li>어떤 차원을 그룹화할지 직접 지정</li>\n    </ul>\n  </li>\n  <li>ROLLUP : GROUPING SETS의 특수한 형태. 주어진 차원의 Sub Group을 생성\n    <ul>\n      <li>(country, city, zip) -&gt; (country, city), (country), ()이 생성</li>\n      <li>() : 전체를 의미</li>\n    </ul>\n  </li>\n  <li>CUBE : GROUPING SETS의 또 다른 특수한 형태. 모든 가능한 조합을 생성\n    <ul>\n      <li>(country, city, zip) -&gt; (country, city, zip), (country, city), (country, zip), (city, zip), (country), (city), (zip), ()</li>\n    </ul>\n  </li>\n  <li><code class=\"language-plaintext highlighter-rouge\">GROUPING()</code> 함수는 해당 컬럼이 그룹화되었는지 아닌지를 비트로 표현\n    <ul>\n      <li>3개의 컬럼일 경우 0 = 000, 1 = 001, 2 = 010, 3 = 011, 4 = 100, 5 = 101, 6 = 110, 7 = 111</li>\n    </ul>\n  </li>\n  <li>\n    <p>샘플 데이터 생성</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\nCREATE TABLE sales (\n    category VARCHAR,\n    product_name VARCHAR,\n    region VARCHAR,\n    sale_date DATE,\n    sales_amount INT\n);\n\n-- 샘플 데이터 삽입\nINSERT INTO sales VALUES\n    ('전자기기', '스마트폰', '서울', '2024-01-01', 1200000),\n    ('전자기기', '스마트폰', '부산', '2024-01-01', 800000),\n    ('전자기기', '노트북', '서울', '2024-01-01', 2000000),\n    ('전자기기', '노트북', '부산', '2024-01-01', 1500000),\n    ('의류', '청바지', '서울', '2024-01-01', 89000),\n    ('의류', '청바지', '부산', '2024-01-01', 78000),\n    ('의류', '티셔츠', '서울', '2024-01-01', 45000),\n    ('의류', '티셔츠', '부산', '2024-01-01', 35000);\n</code></pre></div>    </div>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%sql SELECT * FROM sales\n</code></pre></div>    </div>\n\n    <p><img src=\"https://www.dropbox.com/s/8gf31wh7hc2ctcf/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%208.57.23.png?raw=1\" /></p>\n  </li>\n  <li>\n    <p>GROUPING SETS 실행</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\n\n# GROUPING SETS\nSELECT \n    category,\n    region,\n    SUM(sales_amount) AS total_sales,\n    COUNT(*) AS transaction_count\nFROM sales\nGROUP BY GROUPING SETS (\n    (category, region),\n    (region),\n    ()\n)\nORDER BY category NULLS LAST, region NULLS LAST;\n</code></pre></div>    </div>\n\n    <p><img src=\"https://www.dropbox.com/s/gy7ovtx6gun0hdb/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%208.58.29.png?raw=1\" /></p>\n\n    <ul>\n      <li>category None은 region의 SUM, category, region 둘 다 None은 전체 합</li>\n    </ul>\n  </li>\n  <li>\n    <p>ROLLUP</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\n\n# ROLLUP\nSELECT \n    category,\n    product_name,\n    region,\n    SUM(sales_amount) AS total_sales\nFROM sales\nGROUP BY ROLLUP(category, product_name, region)\nORDER BY category NULLS LAST, product_name NULLS LAST, region NULLS LAST;\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/dqnhm2aohpm28a6/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%208.59.43.png?raw=1\" /></p>\n\n<ul>\n  <li>\n    <p>(category, product_name, region) =&gt; (category, product_name, region), (category, product_name), (category), ()로 나타남</p>\n  </li>\n  <li>\n    <p>CUBE</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\n\n# CUBE\nSELECT \n    category,\n    product_name,\n    SUM(sales_amount) AS total_sales,\n    COUNT(*) AS transaction_count,\n    GROUPING(category, product_name) AS grouping_level\nFROM sales\nGROUP BY CUBE(category, product_name)\nORDER BY category NULLS LAST, product_name NULLS LAST;\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/ar5tg9kss6jclk4/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%209.08.49.png?raw=1\" /></p>\n\n<ul>\n  <li>(category, product_name) =&gt; (category, product_name), (category), (product_name), ()</li>\n  <li>GROUPING 함수를 사용해 grouping_level을 구함(2개라서 0~3)</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"order-by-nulls-last\">ORDER BY NULLS LAST</h3>\n<ul>\n  <li>위 쿼리에서 나온 예시</li>\n  <li>정렬할 때 NULLS의 위치를 지정할 수 있음</li>\n  <li>NULLS {FIRST, LAST}</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"date-함수\">DATE 함수</h3>\n<ul>\n  <li>다양한 Database에서 차이가 있는 것은 대부분 Date 함수</li>\n  <li>이 내용들은 <a href=\"https://duckdb.org/docs/sql/functions/date.html\">공식 문서</a>를 확인하는 것이 제일 좋은 방법</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">date_part(part, date)</code> : BigQuery와 반대\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">date_part</code> 는 <code class=\"language-plaintext highlighter-rouge\">datepart</code>로도 사용할 수 있음</li>\n    </ul>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/6z6uzmqzi3umbqf/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%209.19.18.png?raw=1\" /></p>\n\n<p><br /></p>\n\n<h3 id=\"filter\">FILTER</h3>\n<ul>\n  <li>SELECT 절의 집계 함수에서 사용할 수 있음. 특정 집계 함수에서만 적용되는 필터링 기능\n    <ul>\n      <li>FILTER가 없으면 CASE WHEN을 사용하는 것이 일반적</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\n\nSELECT \n    category,\n    SUM(sales_amount) as total_sales,\n    SUM(sales_amount) FILTER (WHERE region = '서울') AS seoul_sales,\n    SUM(sales_amount) FILTER (WHERE region = '부산') AS busan_sales,\n    -- 각 지역의 매출 비중도 계산\n    ROUND(SUM(sales_amount) FILTER (WHERE region = '서울') * 100.0 / SUM(sales_amount), 1) AS seoul_percentage,\n    ROUND(SUM(sales_amount) FILTER (WHERE region = '부산') * 100.0 / SUM(sales_amount), 1) AS busan_percentage\nFROM sales\nGROUP BY category;\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/s/mqpaznlgbs9mmc3/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%209.27.52.png?raw=1\" /></p>\n\n<p><br /></p>\n\n<h3 id=\"udf\">UDF</h3>\n<ul>\n  <li>보통 SQL로 UDF를 만들 수 있는데, DuckDB는 24년 10월 기준 Python 함수로 UDF를 생성</li>\n  <li><a href=\"https://duckdb.org/docs/api/python/function.html\">DuckDB python Function API</a></li>\n  <li>파이썬 함수를 만들고, <code class=\"language-plaintext highlighter-rouge\">duckdb.create_function</code> 함수를 사용해 등록\n    <ul>\n      <li>con.create_function(name, function, parameters, return_type)</li>\n      <li>이름, 함수, 파라미터, 리턴 타입을 명시해야 함</li>\n    </ul>\n  </li>\n  <li>\n    <p>예시: 텍스트에서 이모지를 추출하는 UDF 만들기</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>!pip install emoji\n\nimport duckdb\nimport emoji  # pip install emoji 필요\n\ndef extract_emojis(text):\n    if text is None:\n        return None\n    return ' '.join([c for c in text if emoji.is_emoji(c)])\n\ncon_udf = duckdb.connect()\n\n# Python 함수를 DuckDB UDF로 등록\ncon_udf.create_function('extract_emojis', extract_emojis, ['VARCHAR'], 'VARCHAR')\n</code></pre></div>    </div>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%sql con_udf\n# con_udf 연결\n</code></pre></div>    </div>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\n# 테스트용 데이터 생성\nCREATE OR REPLACE TABLE messages AS \n  SELECT * FROM (\n    VALUES \n    ('안녕하세요 👋 오늘도 화이팅! 🔥'),\n    ('맛있는 저녁 먹었어요 🍜 🍖'),\n    ('날씨가 좋네요 ☀️'),\n    ('축하해요! 🎉 🎊 🎈')\n) AS t(message);\n</code></pre></div>    </div>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\nSELECT \n    message,\n    extract_emojis(message) AS emojis\nFROM messages\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/88c752mq9vtozab/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%209.45.18.png?raw=1\" /></p>\n\n<h2 id=\"secrets-manager\">Secrets Manager</h2>\n<ul>\n  <li><a href=\"https://duckdb.org/docs/configuration/secrets_manager.html\">Secrets Manager 문서</a></li>\n  <li>DuckDB에서 S3, GCS 등에 접근할 수 있음(내부적으로 <a href=\"https://duckdb.org/docs/extensions/httpfs/s3api.html\">httpfs</a> Extension을 사용)</li>\n  <li>SECRET을 생성하면, 그 후에 사용할 수 있음</li>\n  <li>S3 Temporary Secrets\n    <ul>\n      <li>메모리에 저장</li>\n      <li>DuckDB가 실행된 동안에만 활용 가능</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>CREATE SECRET my_secret (\n    TYPE S3,\n    KEY_ID 'my_secret_key',\n    SECRET 'my_secret_value',\n    REGION 'my_region'\n);\n</code></pre></div>    </div>\n  </li>\n  <li>S3 Persistent Secrets\n    <ul>\n      <li>파일에 저장(<code class=\"language-plaintext highlighter-rouge\">~/.duckdb/stored_secrets</code>)</li>\n      <li>다음 세션에서도 자동으로 로드</li>\n      <li>자주 사용해야 하면 Persistent Secret을 사용하는 것이 편할 수 있음. 그러나 보안에 취약해질 수 있는 점(Temporary Secret은 메모리에 저장되기 때문에 세션이 종료되면 사라짐)</li>\n      <li>디스크에 암호화되지 않은 바이너리 형식으로 저장됨</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>CREATE PERSISTENT SECRET my_persistent_secret (\n    TYPE S3,\n    KEY_ID 'my_secret_key',\n    SECRET 'my_secret_value'\n);\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>위 설정이 정상적으로 되었다면 <code class=\"language-plaintext highlighter-rouge\">s3://</code> 프리픽스를 사용할 수 있음</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT *\nFROM 's3://my-bucket/file.parquet';\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>Secrets 삭제</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>DROP PERSISTENT SECRET my_persistent_secret;\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"duckdb-extension\">DuckDB Extension</h1>\n<ul>\n  <li><a href=\"https://duckdb.org/docs/extensions/overview\">Extension 문서</a>\n    <ul>\n      <li><a href=\"https://duckdb.org/community_extensions/list_of_extensions\">Communiy Extensions List</a>, <a href=\"https://github.com/duckdb/community-extensions\">Community Extensions Github</a></li>\n    </ul>\n  </li>\n  <li>DuckDB는 익스텐션 기능을 동적으로 Load 가능</li>\n  <li>DuckDB Extension은 아직 많이 없어서 오픈소스에 기여하고 싶은 분들이 시도해도 좋을 것 같음</li>\n  <li>\n    <p>설치된 목록 확인하기</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\nSELECT \n    extension_name, \n    installed, \n    description\nFROM duckdb_extensions()\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/qotyi6t8qxy7rxz/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-25%20%EC%98%A4%ED%9B%84%2010.12.08.png?raw=1\" /></p>\n\n<ul>\n  <li>설치 후, Load\n    <ul>\n      <li>INSTALL : 설치는 1회만 하면 됨</li>\n      <li>LOAD : 세션마다 Load 필요</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\nINSTALL spatial;\nLOAD spatial;\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"bigquery\">bigquery</h2>\n<ul>\n  <li>BigQuery 데이터에 쿼리할 수 있는 Extension\n    <ul>\n      <li>ATTACH로 접근한 후, D를 붙여서 쿼리 실행</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\nINSTALL bigquery FROM community;\nLOAD bigquery;\n</code></pre></div>    </div>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\nD ATTACH 'project=my_gcp_project' AS bq (TYPE bigquery, READ_ONLY);\nD SELECT * FROM bq.quacking_dataset.duck_tbl;\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"h3\">h3</h2>\n<ul>\n  <li>Uber의 H3 인덱스를 다룰 수 있는 Extension</li>\n  <li>H3 내용은 <a href=\"https://zzsza.github.io/data/2019/03/31/uber-h3/\">Uber H3 : 육각형 계층의 인덱스</a> 참고</li>\n  <li>위도, 경도 데이터가 있는 지리 데이터를 다룰 때 유용</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"pg_duckdb\">pg_duckdb</h2>\n<ul>\n  <li>이 글을 작성하기 2일 전에 나온 글 : <a href=\"https://motherduck.com/blog/pgduckdb-beta-release-duckdb-postgres/\">pg_duckdb beta release : Even faster analytics in Postgres</a></li>\n  <li>PostgreSQL에 DuckDB 분석 엔진을 통합</li>\n  <li>PostgreSQL은 분석 목적이 아닌 트랜잭션 데이터베이스로 만들었지만, 종종 분석에 사용됨\n    <ul>\n      <li>처음엔 괜찮지만 데이터가 많아지면서 한계에 부딪힘</li>\n      <li>이럴 때 DuckDB를 사용하면 이점을 볼 수 있음</li>\n    </ul>\n  </li>\n  <li>글에서 나온 인덱스 없이 TPC-DS 데이터셋을 로드하는 경우, 기본 PostgreSQL에 pg_duckdb가 1,500배 빨랐다고 함. <a href=\"https://github.com/duckdb/pg_duckdb/blob/86f11208fd43559dee890e32f36331082ff0d20a/scripts/load-tpcds.sh\">스크립트</a></li>\n  <li>나온지 얼마 안되서 아직 사용하긴 애매하지만, 더 발전하면 PostgreSQL에서 간단한 분석을 하거나 제품의 사용자가 많지 않을 때 DW 대용으로 사용할 수 있을 것 같음\n    <ul>\n      <li>만약 DW가 없어진다면 과거에 만들었던 데이터 파이프라인은 꽤 바뀔 수 있을 것 같음</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"vssvector-similarity-search\">vss(Vector Similarity Search)</h2>\n<ul>\n  <li><a href=\"https://duckdb.org/2024/10/23/whats-new-in-the-vss-extension.html\">What’s New in the Vector Similarity Search Extension?</a></li>\n  <li>Vector Database로 사용하기 위한 Extension</li>\n  <li>LLM이 발전하면서 트렌드가 된(?) Vector Database를 DuckDB도 지원한다고 보면 될 것 같음</li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"duckdb-활용-방안\">DuckDB 활용 방안</h1>\n<ul>\n  <li>일단 사용이 쉬우니 전처리에 시간이 많이 드는 경우에 일단 설치해서 사용해보는 것을 추천</li>\n  <li>데이터 웨어하우스에서 데이터를 집계한 후, 집계 데이터를 로컬로 가져와서 DuckDB로 분석</li>\n  <li>중고나라의 사례 : <a href=\"https://teamblog.joonggonara.co.kr/%EB%B6%84%EC%84%9D-%EC%B9%9C%ED%99%94%EC%A0%81%EC%9D%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A0%88%EC%9D%B4%ED%81%AC%EB%A1%9C-%EC%A7%84%ED%99%94%ED%95%98%EA%B8%B0-a5e538782d8a\">분석 친화적인 데이터레이크로 진화하기</a></li>\n  <li><a href=\"https://www.youtube.com/watch?v=xX6qnP2H5wk&amp;ab_channel=DuckDB\">DuckDB – Overview and latest developments (DuckCon #5, Seattle, 2024)</a> 발표 자료에 DuckDB의 역할을 다음 3가지로 제시. DuckDB의 지향점에 맞는 역할</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/kf3dwpoc0g33vgb/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-26%20%EC%98%A4%EC%A0%84%201.41.00.png?raw=1\" /></p>\n\n<p><br /></p>\n\n<h2 id=\"bigquery에서-사용하는-예시\">BigQuery에서 사용하는 예시</h2>\n<ul>\n  <li>(1) BigQuery의 SQL 쿼리로 데이터를 전처리 =&gt; GCS에 Parquet로 저장 =&gt; Local에서 DuckDB에서 GCS에 접근해서 분석</li>\n  <li>(2) pd.read_gbq를 사용해 BigQuery의 데이터를 Pandas Dataframe으로 가져온 후, 그 데이터를 DuckDB에 연결해서 분석</li>\n  <li><a href=\"https://dev.to/mesmacosta/how-to-combine-bigquery-with-duckdb-55gk\">How to combine BigQuery with DuckDB</a> 글을 보면 gsutil을 사용해서 GCS에 데이터를 추출하고, 그 데이터에 접근. 그 후에 다시 bq 커맨드를 사용해 BigQuery에 Load</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"로컬-데이터-웨어하우스처럼-사용pandas-대체\">로컬 데이터 웨어하우스처럼 사용(Pandas 대체)</h2>\n<ul>\n  <li>기존에 로컬에서 데이터 분석을 하거나, 데이터 전처리를 할 때 Pandas를 많이 사용할 텐데 이젠 DuckDB로 대체할 수 있을 것</li>\n  <li>SQL로 데이터를 전처리하는 것이 더 좋은 방법이라고 생각</li>\n  <li>S3, GCS 등에 Parquet로 데이터 저장하고, 거기에서 쿼리를 실행하는 방식</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"필요할-때-사용하는-가벼운-분석-엔진-용도\">필요할 때 사용하는 가벼운 분석 엔진 용도</h2>\n<ul>\n  <li>OLTP의 가벼운 버전인 SQLite의 OLAP 버전이 DuckDB</li>\n  <li><a href=\"https://github.com/duckdb/duckdb-wasm\">Duckdb-wasm</a>을 사용해 웹에서도 사용 가능</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"etl-elt-파이프라인에서-transform-단계에서-사용\">ETL, ELT 파이프라인에서 Transform 단계에서 사용</h2>\n<ul>\n  <li>Spark나 Pandas로 데이터를 처리하는 과정에서 DuckDB를 사용할 수 있을 것</li>\n  <li>데이터가 엄청 많은 경우엔 Spark를 사용할 텐데, 이때는 아직은 어려울 수 있을 것(테스트를 꼭 해보고 판단해보는 것을 추천)</li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"gcs에-있는-parquet-쿼리하기\">GCS에 있는 Parquet 쿼리하기</h2>\n<ul>\n  <li><a href=\"https://duckdb.org/docs/guides/network_cloud_storage/gcs_import\">GCS 문서</a> 참고</li>\n  <li>AWS S3는 <a href=\"https://duckdb.org/docs/guides/network_cloud_storage/s3_import\">S3 Parquet Import</a>, Iceberg는 <a href=\"https://duckdb.org/docs/guides/network_cloud_storage/s3_iceberg_import\">S3 Iceberg Import</a> 참고</li>\n</ul>\n\n<p><br /></p>\n\n<h3 id=\"httpfs-설치brew로-설치하면-기본으로-설치됨\">httpfs 설치(brew로 설치하면 기본으로 설치됨)</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\nINSTALL httpfs FROM community;\nLOAD httpfs;\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h3 id=\"credential-설정\">Credential 설정</h3>\n<ul>\n  <li><a href=\"https://console.cloud.google.com/storage/settings;tab=interoperability\">HMAC Keys</a> 생성\n    <ul>\n      <li>HMAC Key에 대해 궁금하면 <a href=\"https://cloud.google.com/storage/docs/authentication/hmackeys?hl=ko\">Google Cloud 문서</a> 참고</li>\n      <li>S3와 호환되는 라이브러리를 사용해 GCS에 접근할 때 사용</li>\n      <li>Access Key ID와 Secret Access Key로 구성</li>\n      <li>서비스 계정의 인증 수단으로 활용이라고 볼 수 있고, GCS 접근용으로만 사용</li>\n    </ul>\n  </li>\n  <li>아래 이미지에서 서비스 계정의 키 만들기 -&gt; 서비스 계정 생성(Cloud Storage 권한 부여 : 스토리지 객체 사용자) -&gt; 액세스 키 생성</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/1oqxpjbikpgzsko/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-26%20%EC%98%A4%EC%A0%84%2010.34.28.png?raw=1\" /></p>\n\n<p><img src=\"https://www.dropbox.com/s/wnuzcplrfv6opkm/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-26%20%EC%98%A4%EC%A0%84%2010.36.11.png?raw=1\" /></p>\n\n<ul>\n  <li>아래 코드를 실행해서 DuckDB에 Secret 등록</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql\nCREATE OR REPLACE TEMPORARY SECRET gcs_secret (\n    TYPE GCS,\n    KEY_ID 'KEY ID를 넣어주세요',\n    SECRET 'SECRET를 넣어주세요'\n);\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h3 id=\"gcs의-parquet를-불러와서-duckdb에-저장\">GCS의 Parquet를 불러와서 DuckDB에 저장</h3>\n<ul>\n  <li>GCS의 Parquet를 불러올 때 <code class=\"language-plaintext highlighter-rouge\">read_parquet</code> 함수를 사용</li>\n  <li>다만 매번 GCS에서 불러오는 것은 네트워크 비용을 생각하면 느린 일이기 때문에, DuckDB의 Table로 생성해서 사용</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%sql  \nCREATE TABLE yello_taxi AS\nSELECT *\nFROM read_parquet('gs://여러분들의_GCS_BUCKET/파일_경로.parquet');\n</code></pre></div></div>\n\n<ul>\n  <li>warning 메시지는 sqlglot parser에서 발생하는 것 같으나, 동작에 문제는 없음</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/v7jd1vvl78bww06/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-26%20%EC%98%A4%EC%A0%84%2011.06.03.png?raw=1\" /></p>\n\n<p><br /></p>\n\n<h3 id=\"그-후에-쿼리-실행\">그 후에 쿼리 실행</h3>\n<ul>\n  <li>당연한 이야기지만 yello_taxi 테이블을 만들어서 속도가 빠름</li>\n  <li>매번 read_parquet(‘gcs://~’)를 실행하면 데이터를 가지고 오는 시간이 소요되어서 느렸음</li>\n  <li>약 300만 Row를 GROUP BY 하는데 Wall time이 65.5ms =&gt; 0.06초</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%time\n%%sql\n\nSELECT\n  DATE_TRUNC('hour', tpep_pickup_datetime) as pickup_hour,\n  COUNT(*) as cnt\nFROM yello_taxi\nGROUP BY ALL;\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/s/hrmk5u2qg59ywsj/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-26%20%EC%98%A4%EC%A0%84%2011.10.01.png?raw=1\" /></p>\n\n<p><br /></p>\n\n<h3 id=\"참고-삼아-bigquery로-실행\">참고 삼아 BigQuery로 실행</h3>\n<ul>\n  <li>BigQuery 테이블을 생성한 후, 동일한 쿼리를 실행</li>\n  <li>경과 시간에 954ms로 DuckDB가 15배 빠름</li>\n  <li>성능 비교할 땐 하나의 케이스만 보고 판단하면 안되고, 데이터가 점점 많아질 때나 쿼리의 복잡도에 따라 여러번 실행해야 함\n    <ul>\n      <li>DuckDB는 1인 사용자를 위해 최적화가 되어있고, BigQuery는 여러 사용자가 실행해도 문제가 없음</li>\n      <li>다시 생각해도 회사의 DW가 존재하고 =&gt; DW에서 데이터를 가지고 와서 DuckDB에서 분석하는 흐름이 좋을 것 같음</li>\n    </ul>\n  </li>\n  <li><a href=\"https://medium.com/@kayrnt/how-duckdb-can-be-up-to-1000x-more-efficient-than-bigquery-36bab2405259\">BigQuery와 DuckDB 성능 비교</a>를 한 글도 보면 유용함</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/s/4mmhc4mv6zl6v41/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-10-26%20%EC%98%A4%EC%A0%84%2011.16.37.png?raw=1\" /></p>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"정리\">정리</h1>\n<ul>\n  <li>DuckDB가 데이터 분석, 데이터 엔지니어링에서 영향력을 점점 넓힐 것으로 예상</li>\n  <li>과거부터 존재했던 데이터 웨어하우스를 사용하면서, 로컬에서 빠르게 처리할 때 활용할 수 있을 것\n    <ul>\n      <li>DW 비용도 더욱 줄일 수 있음</li>\n    </ul>\n  </li>\n  <li>아예 새롭게 파이프라인을 만든다고 하면 Spark를 사용하지 않고 DuckDB를 사용하는 것도 가능할 것으로 보임. PostgreSQL을 사용하면 규모가 커지기 전까지 모두 DuckDB를 활용</li>\n  <li>Reddit에서 검색해보니 다양한 토론이 존재\n    <ul>\n      <li><a href=\"https://www.reddit.com/r/dataengineering/comments/1ao16gb/who_uses_duckdb_for_real/\">레딧 글1</a></li>\n      <li><a href=\"https://www.reddit.com/r/dataengineering/comments/1eoaq8s/why_do_people_in_data_like_duckdb/\">레딧 글2</a> : 이 글에선 마케팅 아니냐는 댓글도 있음</li>\n    </ul>\n  </li>\n  <li>AWS Lambda에서 DuckDB를 사용하는 케이스도 존재 : <a href=\"https://github.com/tobilg/serverless-duckdb\">serverless-duckdb</a>. Duckdb-wasm이 있으니 프론트엔드에서도 활용할 수 있음\n    <ul>\n      <li>누군가의 후기 : <a href=\"https://boilingdata.medium.com/lightning-fast-aggregations-by-distributing-duckdb-across-aws-lambda-functions-e4775931ab04\">Lightning fast aggregations by distributing DuckDB across AWS Lambda functions</a></li>\n    </ul>\n  </li>\n  <li>MotherDuck 가격도 확인해보니, STANDARD 가격이 월 25달러부터 시작해서 생각보다 저렴하게 사용할 수 있을지도(멤버 별 과금이 아니라 사용량에 기반한 과금)</li>\n  <li>DuckDB의 단점은 하나의 프로세스에서 실행되는 점인데, 이건 애초에 설계할 때 염두하지 않은 내용. 여러 프로세스에서 READ는 가능, WRITE는 불가능. <a href=\"https://duckdb.org/docs/connect/concurrency.html\">Handling Concurrency</a></li>\n  <li>DuckDB의 성능 이슈가 있다면 <a href=\"https://duckdb.org/docs/guides/performance/overview\">Performance Guide</a>, <a href=\"https://duckdb.org/docs/guides/performance/my_workload_is_slow\">My Workload Is Slow</a> 글을 보면 도움이 될 것 같음\n    <ul>\n      <li><a href=\"https://duckdb.org/faq\">FAQ</a>에도 성능, 어떻게 사용할지가 나옴</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br />\n<br /></p>\n\n<h1 id=\"참고-자료\">참고 자료</h1>\n<ul>\n  <li><a href=\"https://mytherin.github.io/papers/2019-duckdbdemo.pdf\">DuckDB: An Embeddable Analytical Database Paper</a></li>\n  <li><a href=\"https://www.vldb.org/pvldb/vol15/p3574-kohn.pdf\">DuckDB-Wasm: Fast Analytical Processing on the Web</a></li>\n  <li>DuckDB에서 참고한 논문은 <a href=\"https://duckdb.org/why_duckdb.html#standing-on-the-shoulders-of-giants\">Standing on the Shoulders of Giants</a>에서 확인할 수 있음</li>\n  <li><a href=\"https://duckdbsnippets.com/\">DuckDB Snippets</a> : DuckDB를 사용할 때 쓸 수 있는 Snippet을 올려주는 공간(예 : CSV to Parquet 등)</li>\n  <li><a href=\"https://github.com/davidgasquez/awesome-duckdb\">Awesome DuckDB</a></li>\n  <li><a href=\"https://www.infoq.com/presentations/duckdb/\">In-Process Analytical Data Management with DuckDB</a> : 전체적인 설명이 잘 되어있는 글</li>\n  <li><a href=\"https://motherduck.com/duckdb-book-brief/\">Free DuckDB In Action Book</a> : 이메일을 입력하면 무료로 DuckDB IN Action을 받을 수 있음. 챕터 8의 Building Data Pipelines with DuckDB 내용이 좋았음</li>\n  <li>다른 라이브러리와 통합\n    <ul>\n      <li><a href=\"https://github.com/duckdb/dbt-duckdb\">dbt-duckdb</a></li>\n      <li><a href=\"https://dlthub.com/docs/dlt-ecosystem/destinations/duckdb\">data load tool - DuckDB Destination</a></li>\n      <li><a href=\"https://docs.airbyte.com/integrations/destinations/duckdb/\">Airbyte DuckDB Destination</a></li>\n      <li><a href=\"https://github.com/MotherDuck-Open-Source/duckdb-tableau-connector\">Duckdb Tableua Connector</a></li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /><br /></p>\n\n<ul>\n  <li>글 작성하는데 걸린 시간 : 7시간 20분\n    <ul>\n      <li>하고자 하는 이야기, 개요 정리 : 20분</li>\n      <li>초안 글 작성 : 6시간 10분</li>\n      <li>클로드/Cursor와 셀프 글 피드백 : 30분</li>\n      <li>2차 글 작성 : 20분</li>\n    </ul>\n  </li>\n  <li>간단 회고\n    <ul>\n      <li>DuckDB는 어느정도 사용하고, 공부도 이미 한 주제인데 방대한 내용을 정리하고 예시를 추가하는 과정에서 시간이 소요됨</li>\n    </ul>\n  </li>\n</ul>\n",
        "contentSnippet": "이 글은 DuckDB 사용법을 작성한 글입니다\n예상 독자\n    \nDuckDB가 궁금하신 분\n데이터 분석가 : Pandas가 느리다고 생각해서 다른 대안을 찾고 있는 분\n데이터 엔지니어 : 데이터 엔지니어링의 Transform 영역에서 활용할 수 있는 수단을 찾고 있는 분. 작은 규모의 회사에서 데이터 웨어하우스를 고민하고 있는 분\n키워드 : Duckdb 사용법, Duckdb 설치, Duckdb Python\nDuckDB 소개, DuckDB란?\nGithub Repo\nDuckDB는 fast in-process Analytical Database\n왜 Duck인가?\n    \nDuck(오리)은 날 수도 있고, 수영도 하고, 걷는 놀라운 동물. 환경에 유연함\n다재다능하고 탄력적인 데이터 관리 시스템을 만들고 싶었는데, 이런 시스템이 오리와 유사하다고 생각해서 DuckDB라고 이름을 지음\nC++로 작성되었고, Column-oriented 데이터베이스로 매우 빠름\nParquet, CSV, JSON 파일에 직접 쿼리할 수 있음\n    \nAWS S3, GCS, Azure Blob Storage 등에서도 쿼리할 수 있음\nS3 Iceberg도 지원\n사용하기 쉬움\n로컬 Data Warehouse(나만을 위한 DW)라고 생각해도 될 듯\nPortable Python Dataframe 라이브러리라고 나온 ibis의 백엔드 엔진이 DuckDB\n공식 Docker 이미지가 존재하지 않음\n    \n애플리케이션에서 DuckDB를 동시에 실행하려고 함. 별도의 컨테이너화를 하지 않아도 됨\n웹페이지, 앱 등에서 그냥 DuckDB를 설치해서 사용하면 됨\nDuckDB 기반 관리형 서비스 : MotherDuck\nLive Demo를 보고 싶다면 DuckDB Live Demo에서 확인할 수 있음\n\n\n\n\nBIG DATA IS DEAD\nGoogle Cloud의 BigQuery를 만든 멤버 중 한 명인 Jordan Tigani가 2023년 2월에 올린 BIG DATA IS DEAD라는 글을 보다가 MotherDuck을 알게 되고, DuckDB를 알게 되었음\nBIG DATA IS DEAD 글의 핵심은 다음과 같음\n    \n대부분의 기업은 “빅데이터”를 가지고 있지 않음\n        \nBigQuery 사용자 대부분은 1TB 미만의 데이터를 보유\n일반적인 기업의 데이터 웨어하우스 크기는 100GB가 일반적임\n특정 VC의 포트폴리오 회사 중 제일 큰 B2B 기업은 약 1TB, 제일 큰 B2C 기업은 약 10TB를 가지고 있었음. 그러나 대부분 이것보다 적은 데이터를 가짐\n데이터를 쿼리하는 패턴\n        \n시간이 지나면서 데이터는 많아지지만, 컴퓨팅 리소스는 거의 변하지 않음\n1년에 1,000달러 이상을 지출하는 고객을 살펴보니, 쿼리의 90%가 100MB 미만의 데이터를 처리함\n데이터가 많은 고객도 많은 양의 데이터를 쿼리하지 않음\n최근 24시간 내의 데이터가 가장 자주 활용\n오래 된 데이터는 사용되지 않음\n싱글 머신의 성능 향상\n        \n요즘 AWS의 표준 인스턴스는 64 Core, 256GB RAM 서버\n            \n2006년에 AWS에서 EC2를 처음 출시할 땐 싱글 코어에 2GB RAM 서버였음\n예전엔 대형 서버가 비쌌으나, 요즘엔 저렴해짐\n과거에 분산 처리가 필요했던 작업들이 싱글 머신에서 처리될 수 있음\n데이터는 자산이 아닌 부채일 수 있음\n        \n사람들이 빅데이터를 가지게 되는 이유는 필요해서가 아닌 단순히 삭제하는 것을 귀찮아해서\n같은 쿼리만 반복적으로 한다면 집계된 데이터만 저장하는 게 좋을 수 있음\n언젠가 쓸지 모른다는 생각으로 보관할 수 있음\n빅데이터의 1%인지 확인할 수 있는 질문\n        \n정말 엄청난 양의 데이터를 생성하고 있는가?\n그렇다면 정말 한 번에 그 많은 데이터를 사용할 필요가 있는가?\n그렇다면 그 데이터가 정말 1대의 컴퓨터에 담기에 큰가?\n그렇다면 당신이 단순히 데이터를 쌓아두기만 하는 사람이 아닌지 확실할 수 있는가?\n그렇다면 데이터를 요약해서 보관하는 것이 더 나은 방법이 아닐까?\n하나라도 아니요라고 답하면 데이터 규모에 맞는 새로운 데이터 도구를 사용하는 것이 좋을 수 있음\n위와 같은 내용 때문에 복잡한 분산 시스템 대신 단순하고 효율적인 솔루션이 필요하다고 함\nBIG DATA IS DEAD엔 직접적으로 나오지 않지만, DuckDB가 이런 상황에 적절한 도구라는 것을 알 수 있음\n시간이 지나면서 점점 싱글 머신이 확장되어 분산 처리까지 갈 필요가 없다는 의미 => DuckDB는 이 용도에 적합\n\n\n\n\n\nDuckDB 목표 & DuckDB 장점\n세상에 다양한 DB가 있는데, 모든 상황에 적합한 데이터베이스는 없음. 특정 사용 사례에 따라 더 잘 맞도록 설계됨\n다음은 DuckDB의 목표 및 장점\n1. Simple\nSQLite처럼 설치하고 사용하기 쉬워야 함\n외부 종속성 없이 동작하고, 별도의 서버 설치나 관리가 필요 없음\nDuckDB는 별도의 프로세스로 실행되지 않고 호스트 프로세스에서 실행됨\n\n2. Portable\n모든 OS에서 동작해야 함 (Windows, MacOS, Linux)\n다양한 CPU 아키텍처(x86, ARM) 지원\n소형 디바이스, 웹 브라우저, 모바일에서도 실행 가능(DuckDB-Wasm 사용)\nJava, C, C++, Go, Node.js, Python 등 다양한 API 제공\n\n3. Feature Rich\n데이터 분석을 위한 복잡한 쿼리를 지원(윈도우 함수)\n커스텀한 MVCC(Multi-Version Concurrency Control)를 통해 ACID 트랜잭션을 보장한다고 주장\n    \nMVCC : 데이터베이스에서 여러 버전의 데이터를 동시에 관리. 수정할 때마다 새 버전 생성\nHyPer의 serializable variant MVCC 방식을 구현\n쿼리의 속도를 높이기 위한 보조 인덱스를 지원\nPython, R과 통합\n\n4. Fast\nOLAP 쿼리 워크로드를 지원\n전체 테이블에 대한 집계, 큰 테이블의 JOIN 등을 빠르게 처리\n개별 값당 소모되는 CPU 사이클의 양을 줄이는 것이 중요하고, 이를 위해 just-in-time 쿼리 실행 엔진, Vectorized(벡터화된) 쿼리 실행 엔진을 사용\nTPC-H, TPC-DS 벤치마크로 테스트\n    \nTPC-H : Decision Support Benchmark, 공급망/구매 데이터로 구성된 비즈니스 의사결정 시나리오\nTPC-DS : Data Warehouse Benchmark, 온라인 쇼핑 데이터로 구성된 데이터 웨어하우스 시나리오\n확인하는 것들 : 쿼리 응답 시간, 처리량, 사용자가 많을 때의 처리량, 데이터 크기별 성능\n\n5. Extensible\n유연한 확장 메커니즘을 제공\n    \n새로운 데이터 타입, 함수, 파일 포맷 등을 정의할 수 있음\nCommunity Extensions은 공식 문서에서 확인할 수 있으며, Github Repo도 운영\n    \nDuckDB Community Extensions 문서에 디자인 철학, 확장 기능 사용에 대한 내용을 확인할 수 있음\n\n6. Free\nDuckDB의 개발자들은 네덜란드 공무원일 때 개발을 시작\n누구나 자유롭게 제공하는 것을 사회에 대한 책임과 의무로 봄\n따라서 MIT 라이선스를 채택\n\n7. Thorough Testing\n최초엔 Research 그룹에서 만들었지만, 안정적인 데이터베이스 시스템이 되는 것을 목표로 함\n여러 플랫폼과 컴파일러에서 반복적으로 테스트\nGithub Actions을 보면 여러 테스트가 돌아가고 있는 것을 확인할 수 있음\n\nDuckDB 성능 벤치마크\n벤치마크가 기록된 문서가 있나 찾아보니, 다음 2개의 글을 확인함\n    \nThe Return of the H2O.ai Database-like Ops Benchmark\nUpdates to the H2O.ai db-benchmark!\nDuckDB에서 공개한 문서 Database-like ops benchmark를 보면 GROUP BY, JOIN 성능 결과를 확인할 수 있음\n    \n아래 이미지는 위 링크에서 일부를 가져옴. 링크에 더 자세한 내용을 확인할 수 있음\n벤치마크 결과 다른 도구보다 성능이 좋고, 사용해봤을 때 오? 라는 생각이 들 정도로 빠름\n\n\nBenchmarking Ourselves over Time at DuckDB 이 글도 확인해보니, 시간의 흐름에 따라 DuckDB가 더욱 빨라지고 있는 내용을 담고 있었음. 2023년 말에 급격한 성능 향상이 존재\n    \n최근 3년 동안 3~25배 빨라지고, 10배 많은 데이터를 분석할 수 있게 됨\n\nPandas보단 확실히 빠르고, Rust로 만들어진 Polars와 많이 비교됨\n    \nDuckDB와 Polars, Pandas를 비교한 Repo : 이 결과에서도 DuckDB가 더 빠르다고 나옴\n회사에 도입하려고 하면 우리 데이터로 테스트를 충분히 하고 선택할 것. 벤치마크 결과를 항상 신뢰하는 것보다, 다시 점검하는 것이 필요\n\nDuckDB 설치\n공식 문서에 내용을 확인할 수 있음\nMac OS 기준\n\nbrew install duckdb\n\n    \n윈도우\n\nwinget install DuckDB.cli\n\n    \nLinux : 최신 버전은 Github에서 확인\n\nwget https://github.com/duckdb/duckdb/releases/download/v1.1.2/duckdb_cli-linux-aarch64.zip\n\nunzip duckdb_cli-linux-aarch64.zip\n\n./duckdb\n\n    \n\n\nDuckDB 실행하기\nCLI에서 실행은 간단함\n\nduckdb\n\n    \n\n데이터 분석가 관점에서 DuckDB를 사용한다면 Jupyter Lab을 사용할 텐데, brew로 설치하면 파이썬 패키지도 설치되어 바로 사용할 수 있음\nJupyter Lab 실행\n\njupyter lab\n\n\n\n간단한 실행(DuckDB Python)\nDuckDB를 사용할 때, duckdb.sql로 실행하는 방법과 duckdb.connect로 Connection을 생성해서 쓰는 방법이 존재\n    \n1) duckdb.sql : 전역 메서드로 사용\n        \n간단한 스크립트나 빠른 프로토타이핑, 노트북에서 유용\n메모리에 데이터를 저장함\n\nimport duckdb\nduckdb.sql(\"SELECT 1\")\n\n        \n2) duckdb.connect : Connection 객체를 생성해서 사용\n        \n커넥션을 생성할 때 In-Memory 모드와 Both Persistent 모드를 선택할 수 있음\n            \nDisk에 Spilling을 사용해 메모리보다 큰 워크로드에서 데이터를 처리할 수 있음\n                \n특정 작업이나 메모리가 부족할 때 데이터를 디스크에 임시로 저장하는 기법\n별도의 옵션을 지정하지 않거나 :memory: 옵션을 사용하면 In-Memory 모드로 생성\n파일 경로를 지정하면 파일이 생성되거나 사용됨\n\n# 데이터를 메모리에 저장해서 사용\nimport duckdb\n\ncon = duckdb.connect(\":memory:\")\n\n        \n\n# 이 케이스에는 test.db 파일을 생성\nimport duckdb\n\ncon = duckdb.connect(\"test.db\")\n\n        \n.show()는 결과를 출력만 하고 None을 반환\n.show()를 사용하지 않으면 Relation 객체로 반환되어서 다른 곳에서 사용 가능\n.df()를 사용하면 Pandas DataFrame으로 변경. 그러나 DuckDB를 사용하면 .df()는 거의 사용하지 않거나 가공을 DuckDB로 최대한 한 후에 사용하는 것이 좋을 듯(실행 시간이 느린 것이 체감됨)\n\nimport duckdb\nduckdb.sql(\"SELECT 1\").show()\noutput = duckdb.sql(\"SELECT 1 AS a\")\nduckdb.sql(\"SELECT a+1 AS b FROM output\").show()\nnew_df = duckdb.sql(\"SELECT 1 AS a\").df()\n\n    \n\n\nData Load\nCSV, Parquet, JSON에 바로 접근할 수 있음\n    \nread_csv, read_parquet, read_json 함수를 사용\nNYC 택시 데이터를 다운받아 테스트(약 300만 Row)\n\nwget https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2024-01.parquet\n\n    \n데이터 DESCRIBE\n\nduckdb.sql(\"DESCRIBE SELECT * FROM 'yellow_tripdata_2024-01.parquet'\")\n\n    \n\nParquet 파일 Load\n    \n노트북 파일과 동일한 경로에 파일이 존재함\nread_parquet를 사용하는 것과 사용하지 않는 것의 차이는 없음\n경로에서 glob 패턴을 사용할 수 있음 : SELECT * FROM ‘test/*.parquet’;\n\nduckdb.sql(\"SELECT * FROM 'yellow_tripdata_2024-01.parquet' LIMIT 3\")\n\n    \n\nduckdb.sql(\"SELECT * FROM read_parquet('yellow_tripdata_2024-01.parquet') LIMIT 3\")\n\n    \n\nParquet 파일을 읽고, 쿼리문에서 사용하고 싶다면 다음과 같이 사용할 수 있음\n\n  nyc_data = duckdb.read_parquet(\"yellow_tripdata_2024-01.parquet\")\n  duckdb.sql(\"SELECT * FROM nyc_data\")\n\n\n\n\njupysql을 사용해 더 편하게 실행하기\n위 코드를 보면 항상 duckdb 또는 conn을 입력하고 쿼리를 실행해야 함. 반복적으로 하다 보면 이런 것들이 번거로움\njupysql을 사용하면 간단하게 실행할 수 있음\njupysql 설치\n\n!pip install jupysql\n\n    \nSQL 쿼리를 실행한 후, Pandas DataFrame으로 항상 저장하는 옵션 설정\n\n%config SqlMagic.autopandas = True\n\n    \nExtension Load\n    \n메모리 모드로 conn 생성\n\n%load_ext sql\nconn = duckdb.connect(':memory:')\n%sql conn --alias duckdb\n\n    \n별도의 셸에서 실행. %sql, %%sql을 사용. %%sql은 여러 줄 쿼리 실행 가능\n    \n한 셸에서 여러 명령을 실행하려면 세미콜론으로 구분해야 함\n\n%%sql \nSELECT\n  DATE_TRUNC('hour', tpep_pickup_datetime) AS pickup_hour,\n  COUNT(*) AS cnt\nFROM read_parquet('yellow_tripdata_2024-01.parquet')\nGROUP BY ALL\n\n    \n\n위에 사용한 쿼리의 결과를 저장하지 않아서 사용할 수 없고, <<을 사용해 변수에 저장할 수 있음\n\n%%sql hour_cnt << \nSELECT\n  DATE_TRUNC('hour', tpep_pickup_datetime) AS pickup_hour,\n  COUNT(*) AS cnt\nFROM read_parquet('yellow_tripdata_2024-01.parquet')\nGROUP BY ALL\n\nhour_cnt\n\n    \n\n\nSQL 문법\nDuckDB SQL 문서를 확인하면 자세한 문법을 확인할 수 있음\n일반적인 SQL 문법은 대부분 지원하고, PostgreSQL과 유사함\n    \nPostgreSQL과 다른 점은 PostgreSQL Compatibility 문서에서 확인할 수 있음\nSQL 문법이 궁금하시면 제가 인프런에 무료로 공개해둔 초보자를 위한 BigQuery(SQL) 입문 강의를 추천\n    \n문법 중에 일부만 다르고, 대부분 큰 흐름은 유사함\nSQL 문법은 기억하고 싶은 일부분만 기록\n\nGROUPING SETS, ROLLUP, CUBE\n여러 차원에 대한 그룹화를 실행할 때 사용\nGROUP BY에 포함됨\nGROUPING SETS : 여러 차원에 대한 그룹화\n    \n어떤 차원을 그룹화할지 직접 지정\nROLLUP : GROUPING SETS의 특수한 형태. 주어진 차원의 Sub Group을 생성\n    \n(country, city, zip) -> (country, city), (country), ()이 생성\n() : 전체를 의미\nCUBE : GROUPING SETS의 또 다른 특수한 형태. 모든 가능한 조합을 생성\n    \n(country, city, zip) -> (country, city, zip), (country, city), (country, zip), (city, zip), (country), (city), (zip), ()\nGROUPING() 함수는 해당 컬럼이 그룹화되었는지 아닌지를 비트로 표현\n    \n3개의 컬럼일 경우 0 = 000, 1 = 001, 2 = 010, 3 = 011, 4 = 100, 5 = 101, 6 = 110, 7 = 111\n샘플 데이터 생성\n\n%%sql\nCREATE TABLE sales (\n    category VARCHAR,\n    product_name VARCHAR,\n    region VARCHAR,\n    sale_date DATE,\n    sales_amount INT\n);\n\n-- 샘플 데이터 삽입\nINSERT INTO sales VALUES\n    ('전자기기', '스마트폰', '서울', '2024-01-01', 1200000),\n    ('전자기기', '스마트폰', '부산', '2024-01-01', 800000),\n    ('전자기기', '노트북', '서울', '2024-01-01', 2000000),\n    ('전자기기', '노트북', '부산', '2024-01-01', 1500000),\n    ('의류', '청바지', '서울', '2024-01-01', 89000),\n    ('의류', '청바지', '부산', '2024-01-01', 78000),\n    ('의류', '티셔츠', '서울', '2024-01-01', 45000),\n    ('의류', '티셔츠', '부산', '2024-01-01', 35000);\n\n    \n\n%sql SELECT * FROM sales\n\n    \n\nGROUPING SETS 실행\n\n%%sql\n\n# GROUPING SETS\nSELECT \n    category,\n    region,\n    SUM(sales_amount) AS total_sales,\n    COUNT(*) AS transaction_count\nFROM sales\nGROUP BY GROUPING SETS (\n    (category, region),\n    (region),\n    ()\n)\nORDER BY category NULLS LAST, region NULLS LAST;\n\n    \n\ncategory None은 region의 SUM, category, region 둘 다 None은 전체 합\nROLLUP\n\n%%sql\n\n# ROLLUP\nSELECT \n    category,\n    product_name,\n    region,\n    SUM(sales_amount) AS total_sales\nFROM sales\nGROUP BY ROLLUP(category, product_name, region)\nORDER BY category NULLS LAST, product_name NULLS LAST, region NULLS LAST;\n\n    \n\n(category, product_name, region) => (category, product_name, region), (category, product_name), (category), ()로 나타남\nCUBE\n\n%%sql\n\n# CUBE\nSELECT \n    category,\n    product_name,\n    SUM(sales_amount) AS total_sales,\n    COUNT(*) AS transaction_count,\n    GROUPING(category, product_name) AS grouping_level\nFROM sales\nGROUP BY CUBE(category, product_name)\nORDER BY category NULLS LAST, product_name NULLS LAST;\n\n    \n\n(category, product_name) => (category, product_name), (category), (product_name), ()\nGROUPING 함수를 사용해 grouping_level을 구함(2개라서 0~3)\n\nORDER BY NULLS LAST\n위 쿼리에서 나온 예시\n정렬할 때 NULLS의 위치를 지정할 수 있음\nNULLS {FIRST, LAST}\n\nDATE 함수\n다양한 Database에서 차이가 있는 것은 대부분 Date 함수\n이 내용들은 공식 문서를 확인하는 것이 제일 좋은 방법\ndate_part(part, date) : BigQuery와 반대\n    \ndate_part 는 datepart로도 사용할 수 있음\n\n\nFILTER\nSELECT 절의 집계 함수에서 사용할 수 있음. 특정 집계 함수에서만 적용되는 필터링 기능\n    \nFILTER가 없으면 CASE WHEN을 사용하는 것이 일반적\n\n%%sql\n\nSELECT \n    category,\n    SUM(sales_amount) as total_sales,\n    SUM(sales_amount) FILTER (WHERE region = '서울') AS seoul_sales,\n    SUM(sales_amount) FILTER (WHERE region = '부산') AS busan_sales,\n    -- 각 지역의 매출 비중도 계산\n    ROUND(SUM(sales_amount) FILTER (WHERE region = '서울') * 100.0 / SUM(sales_amount), 1) AS seoul_percentage,\n    ROUND(SUM(sales_amount) FILTER (WHERE region = '부산') * 100.0 / SUM(sales_amount), 1) AS busan_percentage\nFROM sales\nGROUP BY category;\n\n\n\n\nUDF\n보통 SQL로 UDF를 만들 수 있는데, DuckDB는 24년 10월 기준 Python 함수로 UDF를 생성\nDuckDB python Function API\n파이썬 함수를 만들고, duckdb.create_function 함수를 사용해 등록\n    \ncon.create_function(name, function, parameters, return_type)\n이름, 함수, 파라미터, 리턴 타입을 명시해야 함\n예시: 텍스트에서 이모지를 추출하는 UDF 만들기\n\n!pip install emoji\n\nimport duckdb\nimport emoji  # pip install emoji 필요\n\ndef extract_emojis(text):\n    if text is None:\n        return None\n    return ' '.join([c for c in text if emoji.is_emoji(c)])\n\ncon_udf = duckdb.connect()\n\n# Python 함수를 DuckDB UDF로 등록\ncon_udf.create_function('extract_emojis', extract_emojis, ['VARCHAR'], 'VARCHAR')\n\n    \n\n%sql con_udf\n# con_udf 연결\n\n    \n\n%%sql\n# 테스트용 데이터 생성\nCREATE OR REPLACE TABLE messages AS \n  SELECT * FROM (\n    VALUES \n    ('안녕하세요 👋 오늘도 화이팅! 🔥'),\n    ('맛있는 저녁 먹었어요 🍜 🍖'),\n    ('날씨가 좋네요 ☀️'),\n    ('축하해요! 🎉 🎊 🎈')\n) AS t(message);\n\n    \n\n%%sql\nSELECT \n    message,\n    extract_emojis(message) AS emojis\nFROM messages\n\n    \n\nSecrets Manager\nSecrets Manager 문서\nDuckDB에서 S3, GCS 등에 접근할 수 있음(내부적으로 httpfs Extension을 사용)\nSECRET을 생성하면, 그 후에 사용할 수 있음\nS3 Temporary Secrets\n    \n메모리에 저장\nDuckDB가 실행된 동안에만 활용 가능\n\nCREATE SECRET my_secret (\n    TYPE S3,\n    KEY_ID 'my_secret_key',\n    SECRET 'my_secret_value',\n    REGION 'my_region'\n);\n\n    \nS3 Persistent Secrets\n    \n파일에 저장(~/.duckdb/stored_secrets)\n다음 세션에서도 자동으로 로드\n자주 사용해야 하면 Persistent Secret을 사용하는 것이 편할 수 있음. 그러나 보안에 취약해질 수 있는 점(Temporary Secret은 메모리에 저장되기 때문에 세션이 종료되면 사라짐)\n디스크에 암호화되지 않은 바이너리 형식으로 저장됨\n\nCREATE PERSISTENT SECRET my_persistent_secret (\n    TYPE S3,\n    KEY_ID 'my_secret_key',\n    SECRET 'my_secret_value'\n);\n\n    \n위 설정이 정상적으로 되었다면 s3:// 프리픽스를 사용할 수 있음\n\nSELECT *\nFROM 's3://my-bucket/file.parquet';\n\n    \nSecrets 삭제\n\nDROP PERSISTENT SECRET my_persistent_secret;\n\n    \n\n\nDuckDB Extension\nExtension 문서\n    \nCommuniy Extensions List, Community Extensions Github\nDuckDB는 익스텐션 기능을 동적으로 Load 가능\nDuckDB Extension은 아직 많이 없어서 오픈소스에 기여하고 싶은 분들이 시도해도 좋을 것 같음\n설치된 목록 확인하기\n\n%%sql\nSELECT \n    extension_name, \n    installed, \n    description\nFROM duckdb_extensions()\n\n    \n\n설치 후, Load\n    \nINSTALL : 설치는 1회만 하면 됨\nLOAD : 세션마다 Load 필요\n\n%%sql\nINSTALL spatial;\nLOAD spatial;\n\n    \n\nbigquery\nBigQuery 데이터에 쿼리할 수 있는 Extension\n    \nATTACH로 접근한 후, D를 붙여서 쿼리 실행\n\n%%sql\nINSTALL bigquery FROM community;\nLOAD bigquery;\n\n    \n\n%%sql\nD ATTACH 'project=my_gcp_project' AS bq (TYPE bigquery, READ_ONLY);\nD SELECT * FROM bq.quacking_dataset.duck_tbl;\n\n    \n\nh3\nUber의 H3 인덱스를 다룰 수 있는 Extension\nH3 내용은 Uber H3 : 육각형 계층의 인덱스 참고\n위도, 경도 데이터가 있는 지리 데이터를 다룰 때 유용\n\npg_duckdb\n이 글을 작성하기 2일 전에 나온 글 : pg_duckdb beta release : Even faster analytics in Postgres\nPostgreSQL에 DuckDB 분석 엔진을 통합\nPostgreSQL은 분석 목적이 아닌 트랜잭션 데이터베이스로 만들었지만, 종종 분석에 사용됨\n    \n처음엔 괜찮지만 데이터가 많아지면서 한계에 부딪힘\n이럴 때 DuckDB를 사용하면 이점을 볼 수 있음\n글에서 나온 인덱스 없이 TPC-DS 데이터셋을 로드하는 경우, 기본 PostgreSQL에 pg_duckdb가 1,500배 빨랐다고 함. 스크립트\n나온지 얼마 안되서 아직 사용하긴 애매하지만, 더 발전하면 PostgreSQL에서 간단한 분석을 하거나 제품의 사용자가 많지 않을 때 DW 대용으로 사용할 수 있을 것 같음\n    \n만약 DW가 없어진다면 과거에 만들었던 데이터 파이프라인은 꽤 바뀔 수 있을 것 같음\n\nvss(Vector Similarity Search)\nWhat’s New in the Vector Similarity Search Extension?\nVector Database로 사용하기 위한 Extension\nLLM이 발전하면서 트렌드가 된(?) Vector Database를 DuckDB도 지원한다고 보면 될 것 같음\n\n\nDuckDB 활용 방안\n일단 사용이 쉬우니 전처리에 시간이 많이 드는 경우에 일단 설치해서 사용해보는 것을 추천\n데이터 웨어하우스에서 데이터를 집계한 후, 집계 데이터를 로컬로 가져와서 DuckDB로 분석\n중고나라의 사례 : 분석 친화적인 데이터레이크로 진화하기\nDuckDB – Overview and latest developments (DuckCon #5, Seattle, 2024) 발표 자료에 DuckDB의 역할을 다음 3가지로 제시. DuckDB의 지향점에 맞는 역할\n\n\nBigQuery에서 사용하는 예시\n(1) BigQuery의 SQL 쿼리로 데이터를 전처리 => GCS에 Parquet로 저장 => Local에서 DuckDB에서 GCS에 접근해서 분석\n(2) pd.read_gbq를 사용해 BigQuery의 데이터를 Pandas Dataframe으로 가져온 후, 그 데이터를 DuckDB에 연결해서 분석\nHow to combine BigQuery with DuckDB 글을 보면 gsutil을 사용해서 GCS에 데이터를 추출하고, 그 데이터에 접근. 그 후에 다시 bq 커맨드를 사용해 BigQuery에 Load\n\n로컬 데이터 웨어하우스처럼 사용(Pandas 대체)\n기존에 로컬에서 데이터 분석을 하거나, 데이터 전처리를 할 때 Pandas를 많이 사용할 텐데 이젠 DuckDB로 대체할 수 있을 것\nSQL로 데이터를 전처리하는 것이 더 좋은 방법이라고 생각\nS3, GCS 등에 Parquet로 데이터 저장하고, 거기에서 쿼리를 실행하는 방식\n\n필요할 때 사용하는 가벼운 분석 엔진 용도\nOLTP의 가벼운 버전인 SQLite의 OLAP 버전이 DuckDB\nDuckdb-wasm을 사용해 웹에서도 사용 가능\n\nETL, ELT 파이프라인에서 Transform 단계에서 사용\nSpark나 Pandas로 데이터를 처리하는 과정에서 DuckDB를 사용할 수 있을 것\n데이터가 엄청 많은 경우엔 Spark를 사용할 텐데, 이때는 아직은 어려울 수 있을 것(테스트를 꼭 해보고 판단해보는 것을 추천)\n\nGCS에 있는 Parquet 쿼리하기\nGCS 문서 참고\nAWS S3는 S3 Parquet Import, Iceberg는 S3 Iceberg Import 참고\n\nhttpfs 설치(brew로 설치하면 기본으로 설치됨)\n\n%%sql\nINSTALL httpfs FROM community;\nLOAD httpfs;\n\n\n\nCredential 설정\nHMAC Keys 생성\n    \nHMAC Key에 대해 궁금하면 Google Cloud 문서 참고\nS3와 호환되는 라이브러리를 사용해 GCS에 접근할 때 사용\nAccess Key ID와 Secret Access Key로 구성\n서비스 계정의 인증 수단으로 활용이라고 볼 수 있고, GCS 접근용으로만 사용\n아래 이미지에서 서비스 계정의 키 만들기 -> 서비스 계정 생성(Cloud Storage 권한 부여 : 스토리지 객체 사용자) -> 액세스 키 생성\n\n\n아래 코드를 실행해서 DuckDB에 Secret 등록\n\n%%sql\nCREATE OR REPLACE TEMPORARY SECRET gcs_secret (\n    TYPE GCS,\n    KEY_ID 'KEY ID를 넣어주세요',\n    SECRET 'SECRET를 넣어주세요'\n);\n\n\n\nGCS의 Parquet를 불러와서 DuckDB에 저장\nGCS의 Parquet를 불러올 때 read_parquet 함수를 사용\n다만 매번 GCS에서 불러오는 것은 네트워크 비용을 생각하면 느린 일이기 때문에, DuckDB의 Table로 생성해서 사용\n\n%%sql  \nCREATE TABLE yello_taxi AS\nSELECT *\nFROM read_parquet('gs://여러분들의_GCS_BUCKET/파일_경로.parquet');\n\n\nwarning 메시지는 sqlglot parser에서 발생하는 것 같으나, 동작에 문제는 없음\n\n\n그 후에 쿼리 실행\n당연한 이야기지만 yello_taxi 테이블을 만들어서 속도가 빠름\n매번 read_parquet(‘gcs://~’)를 실행하면 데이터를 가지고 오는 시간이 소요되어서 느렸음\n약 300만 Row를 GROUP BY 하는데 Wall time이 65.5ms => 0.06초\n\n%%time\n%%sql\n\nSELECT\n  DATE_TRUNC('hour', tpep_pickup_datetime) as pickup_hour,\n  COUNT(*) as cnt\nFROM yello_taxi\nGROUP BY ALL;\n\n\n\n\n참고 삼아 BigQuery로 실행\nBigQuery 테이블을 생성한 후, 동일한 쿼리를 실행\n경과 시간에 954ms로 DuckDB가 15배 빠름\n성능 비교할 땐 하나의 케이스만 보고 판단하면 안되고, 데이터가 점점 많아질 때나 쿼리의 복잡도에 따라 여러번 실행해야 함\n    \nDuckDB는 1인 사용자를 위해 최적화가 되어있고, BigQuery는 여러 사용자가 실행해도 문제가 없음\n다시 생각해도 회사의 DW가 존재하고 => DW에서 데이터를 가지고 와서 DuckDB에서 분석하는 흐름이 좋을 것 같음\nBigQuery와 DuckDB 성능 비교를 한 글도 보면 유용함\n\n\n\n정리\nDuckDB가 데이터 분석, 데이터 엔지니어링에서 영향력을 점점 넓힐 것으로 예상\n과거부터 존재했던 데이터 웨어하우스를 사용하면서, 로컬에서 빠르게 처리할 때 활용할 수 있을 것\n    \nDW 비용도 더욱 줄일 수 있음\n아예 새롭게 파이프라인을 만든다고 하면 Spark를 사용하지 않고 DuckDB를 사용하는 것도 가능할 것으로 보임. PostgreSQL을 사용하면 규모가 커지기 전까지 모두 DuckDB를 활용\nReddit에서 검색해보니 다양한 토론이 존재\n    \n레딧 글1\n레딧 글2 : 이 글에선 마케팅 아니냐는 댓글도 있음\nAWS Lambda에서 DuckDB를 사용하는 케이스도 존재 : serverless-duckdb. Duckdb-wasm이 있으니 프론트엔드에서도 활용할 수 있음\n    \n누군가의 후기 : Lightning fast aggregations by distributing DuckDB across AWS Lambda functions\nMotherDuck 가격도 확인해보니, STANDARD 가격이 월 25달러부터 시작해서 생각보다 저렴하게 사용할 수 있을지도(멤버 별 과금이 아니라 사용량에 기반한 과금)\nDuckDB의 단점은 하나의 프로세스에서 실행되는 점인데, 이건 애초에 설계할 때 염두하지 않은 내용. 여러 프로세스에서 READ는 가능, WRITE는 불가능. Handling Concurrency\nDuckDB의 성능 이슈가 있다면 Performance Guide, My Workload Is Slow 글을 보면 도움이 될 것 같음\n    \nFAQ에도 성능, 어떻게 사용할지가 나옴\n\n\n참고 자료\nDuckDB: An Embeddable Analytical Database Paper\nDuckDB-Wasm: Fast Analytical Processing on the Web\nDuckDB에서 참고한 논문은 Standing on the Shoulders of Giants에서 확인할 수 있음\nDuckDB Snippets : DuckDB를 사용할 때 쓸 수 있는 Snippet을 올려주는 공간(예 : CSV to Parquet 등)\nAwesome DuckDB\nIn-Process Analytical Data Management with DuckDB : 전체적인 설명이 잘 되어있는 글\nFree DuckDB In Action Book : 이메일을 입력하면 무료로 DuckDB IN Action을 받을 수 있음. 챕터 8의 Building Data Pipelines with DuckDB 내용이 좋았음\n다른 라이브러리와 통합\n    \ndbt-duckdb\ndata load tool - DuckDB Destination\nAirbyte DuckDB Destination\nDuckdb Tableua Connector\n\n\n\n\n  \n글 작성하는데 걸린 시간 : 7시간 20분\n    \n하고자 하는 이야기, 개요 정리 : 20분\n초안 글 작성 : 6시간 10분\n클로드/Cursor와 셀프 글 피드백 : 30분\n2차 글 작성 : 20분\n간단 회고\n    \nDuckDB는 어느정도 사용하고, 공부도 이미 한 주제인데 방대한 내용을 정리하고 예시를 추가하는 과정에서 시간이 소요됨",
        "guid": "https://zzsza.github.io/data-engineering/2024/10/25/duckdb/",
        "categories": [
          "duckdb",
          "data-engineering"
        ],
        "isoDate": "2024-10-25T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "다윈상 요약 / 황당한 죽음 모음",
        "link": "http://serverdown.tistory.com/908",
        "pubDate": "Wed, 30 Oct 2024 16:55:21 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/908#entry908comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=49iUehdLXbM\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=49iUehdLXbM</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=49iUehdLXbM\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/R61D5/hyXpoJgv37/0x1yMRWAXCUvg5wlEuzML1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/cKx9Tt/hyXpxGcXfr/2BHDbX3B2DT5JzplkMayh0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"역사상 가장 황당하고 어이없는 죽음 Top10\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/49iUehdLXbM\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">죽음으로 종을 보전하지 않음은 공로로 주는 상이였군요</span></p>\n<p data-ke-size=\"size16\">인륭는 이렇게 진화했었군요</p>\n<p data-ke-size=\"size16\">한구사례도 중간에 나오는군요</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=49iUehdLXbM\n\n\n\n죽음으로 종을 보전하지 않음은 공로로 주는 상이였군요\n인륭는 이렇게 진화했었군요\n한구사례도 중간에 나오는군요",
        "guid": "http://serverdown.tistory.com/908",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-10-30T07:55:21.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "이 세상의 한 구석에 / 애니",
        "link": "http://serverdown.tistory.com/907",
        "pubDate": "Wed, 30 Oct 2024 16:36:18 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/907#entry907comment",
        "content": "<p data-ke-size=\"size16\">영상:&nbsp;<a href=\"https://youtu.be/M8Q74RcLB4g?t=364\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/M8Q74RcLB4g?t=364</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=M8Q74RcLB4g\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bR5HJK/hyXpuCGxOC/AB7SWZkFRsT2mOU9H2TrKK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/dR66LD/hyXpooWFDJ/NRu7kHzp40HU1OqTDIcvTk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"역전다방31 ☆태평양전쟁 ep.31 전쟁의 판도가 바뀐다! [전략폭격]의 태동부터 국제법까지\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/M8Q74RcLB4g\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">애니 추천사는 6분부터 나와요</p>\n<p data-ke-size=\"size16\">역전다방은 원래 전쟁이야기를 하는 채널이구요.<br />전쟁을 자세히 알 고싶으시면 쭈욱 보시면 됩니다.<br />어마어마한 길이로 소게되어있습니다.</p>\n<p data-ke-size=\"size16\">애니는 봐야지 하면서 결국 아직도 못봤구요</p>\n<p data-ke-size=\"size16\">2016년에 나왔군요.<br />거의 안알려진 거 같군요<br />시대배경이 일본 - 미국 전쟁 시작부터 광복절까지의 이야기 인거 같습니다.</p>\n<p data-ke-size=\"size16\">전쟁이 진행됨에따라 물가의 변화와 물자 부족으로 잡초도 가려먹어야하는 상황등이 있다고 하네요<br />경제적으로도 알아야할 부분인거 같습니다.</p>\n<p data-ke-size=\"size16\">전쟁하자고 부추기는 세력도 있고<br />전쟁만 나면 뭐든지 될것 같이 떠는 노인들도 있는데</p>\n<p data-ke-size=\"size16\">그들은 전쟁을 잘 모르는거 같습니다. <br />나이가 많다고 해서 전쟁을 아는건 아니지요</p>\n<p data-ke-size=\"size16\">대부분의 사람들은 전후 복구되는 기간 활황기를 살아와서 전쟁나면 좋은줄 아는거 같아 안타깝습니다.<br />이런걸 생존자 편향이라 부른게 아닐까 생각되네요</p>\n<p data-ke-size=\"size16\">나중에 보고와서 내용을 고치던지 해야겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://youtu.be/M8Q74RcLB4g?t=364\n\n\n\n애니 추천사는 6분부터 나와요\n역전다방은 원래 전쟁이야기를 하는 채널이구요.\n전쟁을 자세히 알 고싶으시면 쭈욱 보시면 됩니다.\n어마어마한 길이로 소게되어있습니다.\n애니는 봐야지 하면서 결국 아직도 못봤구요\n2016년에 나왔군요.\n거의 안알려진 거 같군요\n시대배경이 일본 - 미국 전쟁 시작부터 광복절까지의 이야기 인거 같습니다.\n전쟁이 진행됨에따라 물가의 변화와 물자 부족으로 잡초도 가려먹어야하는 상황등이 있다고 하네요\n경제적으로도 알아야할 부분인거 같습니다.\n전쟁하자고 부추기는 세력도 있고\n전쟁만 나면 뭐든지 될것 같이 떠는 노인들도 있는데\n그들은 전쟁을 잘 모르는거 같습니다. \n나이가 많다고 해서 전쟁을 아는건 아니지요\n대부분의 사람들은 전후 복구되는 기간 활황기를 살아와서 전쟁나면 좋은줄 아는거 같아 안타깝습니다.\n이런걸 생존자 편향이라 부른게 아닐까 생각되네요\n나중에 보고와서 내용을 고치던지 해야겠습니다.",
        "guid": "http://serverdown.tistory.com/907",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-10-30T07:36:18.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "금융위기 그런거 없고 미국은 자신들의 산업을 다시 살릴 것",
        "link": "http://serverdown.tistory.com/906",
        "pubDate": "Wed, 30 Oct 2024 15:09:04 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/906#entry906comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=-6tsL45oQ5g\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=-6tsL45oQ5g</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=-6tsL45oQ5g\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cgiU6f/hyXpDl5vdv/g2b6ws4AXjKd4RKTEdNfXk/img.jpg?width=1280&amp;height=720&amp;face=186_160_1096_340,https://scrap.kakaocdn.net/dn/7P73A/hyXpvO72dq/50883OyCS18K0mYeXFCujK/img.jpg?width=1280&amp;height=720&amp;face=186_160_1096_340\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"내년에도 미국장에 투자해야하는 까닭... &quot;변동성 올 때마다 매수하라, 단!!!&quot; [성상현 과장 풀버\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/-6tsL45oQ5g\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">이분이 말하는 말이 맞는거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2008 년도 금융위기 때문에 전문가들이 계속 금융위기 운운하는데 그런상황이 아닙니다.</p>\n<p data-ke-size=\"size16\">고금리든 저금리든 미국은 본인들의 산업을 살리기위한 준비를 멈추지 않을 것으로 보입니다.</p>\n<p data-ke-size=\"size16\">이것은 물론 중국과의 경쟁이라는 좋은 핑계가 생겼기 때문입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미국은 매번 적을 칭찬해주는 버른이 있습니다.</p>\n<p data-ke-size=\"size16\">2차세계대전, 냉전 이 진행될때 그들의 무기를 칭찬해줬으며 본인들의 현재 상황을 잘 이해하고 개선해 나갔습니다.</p>\n<p data-ke-size=\"size16\">이번엔 중국과의 패권 싸움이 시작되었고 물가가 높든 낮든 그런거 따지지 않고 이기는 길로 갈 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그럼 충격은 언제오나 ?</p>\n<p data-ke-size=\"size16\">냉전을 생각해보면 한 10 ~ 20년쯤 가다 중국이 항복하면 그때 충격이 짧고 크게 몰려오지 않을까 생각됩니다.</p>\n<p data-ke-size=\"size16\">결국 한참 남았다는 것이죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">부채니 달러 찍는거 두려워 하지마시고 신기술 AI / 전기혁명&nbsp; 투자를 게을리 하지 않아야합니다.</p>\n<p data-ke-size=\"size16\">전기차라고 쓰려고 했다가 전기 혁명이라고 쓴이유는</p>\n<p data-ke-size=\"size16\">전기차 정도로 끝나지 않을 것입니다.</p>\n<p data-ke-size=\"size16\">AI 도 역시 전기 혁명 없이는 돌아가기 어려울 것이구요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그래서 미래의 큰 축으로는</p>\n<p data-ke-size=\"size16\">엔비디아<br />테슬라<br />비트코인<br />금</p>\n<p data-ke-size=\"size16\">정도가 있구요</p>\n<p data-ke-size=\"size16\">미국채권 안좋은 자산에 속할 것 같습니다.<br />금리와 상관없이 돈을 찍을꺼라 채권이 많이 풀려서 하락 자산으로 봐야할 것같습니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=-6tsL45oQ5g\n\n\n\n이분이 말하는 말이 맞는거 같습니다.\n \n2008 년도 금융위기 때문에 전문가들이 계속 금융위기 운운하는데 그런상황이 아닙니다.\n고금리든 저금리든 미국은 본인들의 산업을 살리기위한 준비를 멈추지 않을 것으로 보입니다.\n이것은 물론 중국과의 경쟁이라는 좋은 핑계가 생겼기 때문입니다.\n \n미국은 매번 적을 칭찬해주는 버른이 있습니다.\n2차세계대전, 냉전 이 진행될때 그들의 무기를 칭찬해줬으며 본인들의 현재 상황을 잘 이해하고 개선해 나갔습니다.\n이번엔 중국과의 패권 싸움이 시작되었고 물가가 높든 낮든 그런거 따지지 않고 이기는 길로 갈 것입니다.\n \n그럼 충격은 언제오나 ?\n냉전을 생각해보면 한 10 ~ 20년쯤 가다 중국이 항복하면 그때 충격이 짧고 크게 몰려오지 않을까 생각됩니다.\n결국 한참 남았다는 것이죠.\n \n부채니 달러 찍는거 두려워 하지마시고 신기술 AI / 전기혁명  투자를 게을리 하지 않아야합니다.\n전기차라고 쓰려고 했다가 전기 혁명이라고 쓴이유는\n전기차 정도로 끝나지 않을 것입니다.\nAI 도 역시 전기 혁명 없이는 돌아가기 어려울 것이구요\n \n그래서 미래의 큰 축으로는\n엔비디아\n테슬라\n비트코인\n금\n정도가 있구요\n미국채권 안좋은 자산에 속할 것 같습니다.\n금리와 상관없이 돈을 찍을꺼라 채권이 많이 풀려서 하락 자산으로 봐야할 것같습니다.",
        "guid": "http://serverdown.tistory.com/906",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-10-30T06:09:04.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2024-10-29 미장 요약",
        "link": "http://serverdown.tistory.com/905",
        "pubDate": "Wed, 30 Oct 2024 00:53:00 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/905#entry905comment",
        "content": "<p data-ke-size=\"size16\">중국 부양책 11-08 에 결정<br />미대선 보고 부양액 결정할 예정이라고 함<br />➡️ CWEB 매수 / 중국인터넷 2배</p>\n<p data-ke-size=\"size16\">트럼프가 되든 해리스가 되든 비트코인은 연말까지 1.4억 정도 갈꺼라함<br />➡️ BITU 매수 / 비트코인 2배</p>\n<p data-ke-size=\"size16\">28일부터 미국 자사주 매입을 하는 이벤트 시작됨<br />➡️ SOXL 매수 / 반도체 3배<br />➡️ FNGU 매수 / 빅테크 3배</p>\n<p data-ke-size=\"size16\">채권이 빠지는데 11월 리벨런싱때 낮아진 채권을 사줄 수도 있다고함<br />➡️ TMF 물타볼까 고민중 / 장기채권 3배<br /><br /></p>\n<p data-ke-size=\"size16\">전체적으로 10% 줄이고 뉴스보고 다시 사니까 결과가 좋은거 같음</p>",
        "contentSnippet": "중국 부양책 11-08 에 결정\n미대선 보고 부양액 결정할 예정이라고 함\n➡️ CWEB 매수 / 중국인터넷 2배\n트럼프가 되든 해리스가 되든 비트코인은 연말까지 1.4억 정도 갈꺼라함\n➡️ BITU 매수 / 비트코인 2배\n28일부터 미국 자사주 매입을 하는 이벤트 시작됨\n➡️ SOXL 매수 / 반도체 3배\n➡️ FNGU 매수 / 빅테크 3배\n채권이 빠지는데 11월 리벨런싱때 낮아진 채권을 사줄 수도 있다고함\n➡️ TMF 물타볼까 고민중 / 장기채권 3배\n\n전체적으로 10% 줄이고 뉴스보고 다시 사니까 결과가 좋은거 같음",
        "guid": "http://serverdown.tistory.com/905",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-10-29T15:53:00.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2차전지 / 폴스타4 중국 NCM 베터리 탑재",
        "link": "http://serverdown.tistory.com/904",
        "pubDate": "Tue, 29 Oct 2024 23:02:49 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/904#entry904comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=p79nf42zgmw\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=p79nf42zgmw</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=p79nf42zgmw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bfUhLb/hyXpw79yiY/OvApMkB63FOkzMBNHXxuz1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/6BZEo/hyXpuvHpU0/IZtTJifaFSZHhKCmPJJv81/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"폴스타4 배터리 고전압 미드니켈 인가?\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/p79nf42zgmw\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">2차전지 + 한국 주가 하락으로 <br />점점 투자의욕이 떨어지는 가운데</p>\n<p data-ke-size=\"size16\">또하나의 절망 뉴스가 나와버렸군요</p>\n<p data-ke-size=\"size16\">영상의 취지는 고전압 미드니켈을 중국이 만들 수 있는가 이지만&nbsp;<br />제가 보는 관점은 빠떼리아저씨가 \"중국산 NCM 이 수출될리가 없어\" 의 논리가 깨지는 상황입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"776\" data-origin-height=\"381\"><span data-url=\"https://blog.kakaocdn.net/dn/mzqOJ/btsKoSJKGQN/T77TDZJyyyJSKJXApvKMI1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/mzqOJ/btsKoSJKGQN/T77TDZJyyyJSKJXApvKMI1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/mzqOJ/btsKoSJKGQN/T77TDZJyyyJSKJXApvKMI1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FmzqOJ%2FbtsKoSJKGQN%2FT77TDZJyyyJSKJXApvKMI1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"776\" data-origin-height=\"381\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이 스샷을 보시면 연초까진 중국에 NCM 베터리가 없어서 한국꺼라도 집어 넣고 보조금을 받으려는 움직임이 있었는데<br />중국이 직접 NCM 을 만들어버리면 ...</p>\n<p data-ke-size=\"size16\">중국 CATL NCM 베터리가 장착된건 사실인거 같구요.<br />이렇게 거의 모든 논리가 무너지는 느낌입니다.</p>\n<p data-ke-size=\"size16\">중국이 고전업 미드니켈을 중국이 만든다면 더 큰 충격입니다.<br />이게 사실이라면 절망 수준이겠군요</p>\n<p data-ke-size=\"size16\">이 뉴스의 진위 파악한 뒤 투자의 방향을 다시 잡아봐야겠습니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=p79nf42zgmw\n\n\n\n2차전지 + 한국 주가 하락으로 \n점점 투자의욕이 떨어지는 가운데\n또하나의 절망 뉴스가 나와버렸군요\n영상의 취지는 고전압 미드니켈을 중국이 만들 수 있는가 이지만 \n제가 보는 관점은 빠떼리아저씨가 \"중국산 NCM 이 수출될리가 없어\" 의 논리가 깨지는 상황입니다.\n \n\n\n이 스샷을 보시면 연초까진 중국에 NCM 베터리가 없어서 한국꺼라도 집어 넣고 보조금을 받으려는 움직임이 있었는데\n중국이 직접 NCM 을 만들어버리면 ...\n중국 CATL NCM 베터리가 장착된건 사실인거 같구요.\n이렇게 거의 모든 논리가 무너지는 느낌입니다.\n중국이 고전업 미드니켈을 중국이 만든다면 더 큰 충격입니다.\n이게 사실이라면 절망 수준이겠군요\n이 뉴스의 진위 파악한 뒤 투자의 방향을 다시 잡아봐야겠습니다.",
        "guid": "http://serverdown.tistory.com/904",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-10-29T14:02:49.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "무서운 영화 / 일본 괴담 모음",
        "link": "http://serverdown.tistory.com/903",
        "pubDate": "Tue, 29 Oct 2024 15:16:57 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/903#entry903comment",
        "content": "<p data-ke-size=\"size16\">링크: <a href=\"https://www.youtube.com/watch?v=pkjlUKAVDTY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=pkjlUKAVDTY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=pkjlUKAVDTY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/K5vzi/hyXpCtBpbO/BCD51FdSlLNttTMpv1qpxK/img.jpg?width=1280&amp;height=720&amp;face=220_122_490_416,https://scrap.kakaocdn.net/dn/qy92o/hyXpAWQXDZ/4BNKBgRiTzXUeT9QOORvN0/img.jpg?width=1280&amp;height=720&amp;face=220_122_490_416\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"한 번쯤은 들어본 유명한 인터넷 괴담들 (공포)(단편 괴담)(2채널괴담)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/pkjlUKAVDTY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제가 제일 무섭개 본장면은 18분 30초에 나옵니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"968\" data-origin-height=\"556\"><span data-url=\"https://blog.kakaocdn.net/dn/cYk5KY/btsKovgrmdK/PoiKXdNkj3magvPXmKghh0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cYk5KY/btsKovgrmdK/PoiKXdNkj3magvPXmKghh0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cYk5KY/btsKovgrmdK/PoiKXdNkj3magvPXmKghh0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcYk5KY%2FbtsKovgrmdK%2FPoiKXdNkj3magvPXmKghh0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"968\" data-origin-height=\"556\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">남자친구의 스맛폰을 보게됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"968\" data-origin-height=\"556\"><span data-url=\"https://blog.kakaocdn.net/dn/djsliD/btsKoqGeEtS/tGdC0ava7QscYO5RAQ36m1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/djsliD/btsKoqGeEtS/tGdC0ava7QscYO5RAQ36m1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/djsliD/btsKoqGeEtS/tGdC0ava7QscYO5RAQ36m1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdjsliD%2FbtsKoqGeEtS%2FtGdC0ava7QscYO5RAQ36m1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"968\" data-origin-height=\"556\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">두둥 문자발견</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"968\" data-origin-height=\"556\"><span data-url=\"https://blog.kakaocdn.net/dn/duyGDk/btsKnX5CJFK/34oG8k9R5U1kTk2Xuk6QPK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/duyGDk/btsKnX5CJFK/34oG8k9R5U1kTk2Xuk6QPK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/duyGDk/btsKnX5CJFK/34oG8k9R5U1kTk2Xuk6QPK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FduyGDk%2FbtsKnX5CJFK%2F34oG8k9R5U1kTk2Xuk6QPK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"968\" data-origin-height=\"556\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">말을 더듬습니다.<br />여시서 한번 회피를 해봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"968\" data-origin-height=\"556\"><span data-url=\"https://blog.kakaocdn.net/dn/bPsqu0/btsKnopfzRN/6M4cERSNBHqrzhzfOe9bOk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bPsqu0/btsKnopfzRN/6M4cERSNBHqrzhzfOe9bOk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bPsqu0/btsKnopfzRN/6M4cERSNBHqrzhzfOe9bOk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbPsqu0%2FbtsKnopfzRN%2F6M4cERSNBHqrzhzfOe9bOk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"968\" data-origin-height=\"556\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">잘만 말하면 피할 수 있을지 모릅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"968\" data-origin-height=\"556\"><span data-url=\"https://blog.kakaocdn.net/dn/bidbxF/btsKoVMDOmD/5KEKcRwKBkoFKf8JHXyp6K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bidbxF/btsKoVMDOmD/5KEKcRwKBkoFKf8JHXyp6K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bidbxF/btsKoVMDOmD/5KEKcRwKBkoFKf8JHXyp6K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbidbxF%2FbtsKoVMDOmD%2F5KEKcRwKBkoFKf8JHXyp6K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"968\" data-origin-height=\"556\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">필살기 시전합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"968\" data-origin-height=\"556\"><span data-url=\"https://blog.kakaocdn.net/dn/NaGc3/btsKnToJUmV/XPtu602aisKur5yI2LLEQk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/NaGc3/btsKnToJUmV/XPtu602aisKur5yI2LLEQk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/NaGc3/btsKnToJUmV/XPtu602aisKur5yI2LLEQk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FNaGc3%2FbtsKnToJUmV%2FXPtu602aisKur5yI2LLEQk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"968\" data-origin-height=\"556\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">아니 시바 만나자고 써놓고 이러케 하면 어쩌자는거냐</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">남자는 바보였습니다.</p>\n<p data-ke-size=\"size16\">그렇게 죽었습니다. ... 는 아니고 여자친구는 용서해 주는데</p>\n<p data-ke-size=\"size16\">문제는 사유 라는 사람은 ...</p>\n<p data-ke-size=\"size16\">사람이 아니였던거 같습니다 ㄷㄷㄷ</p>",
        "contentSnippet": "링크: https://www.youtube.com/watch?v=pkjlUKAVDTY\n\n\n\n \n제가 제일 무섭개 본장면은 18분 30초에 나옵니다.\n\n\n남자친구의 스맛폰을 보게됩니다.\n \n\n\n두둥 문자발견\n \n\n\n말을 더듬습니다.\n여시서 한번 회피를 해봅니다.\n \n\n\n잘만 말하면 피할 수 있을지 모릅니다.\n \n\n\n필살기 시전합니다.\n \n\n\n아니 시바 만나자고 써놓고 이러케 하면 어쩌자는거냐\n \n남자는 바보였습니다.\n그렇게 죽었습니다. ... 는 아니고 여자친구는 용서해 주는데\n문제는 사유 라는 사람은 ...\n사람이 아니였던거 같습니다 ㄷㄷㄷ",
        "guid": "http://serverdown.tistory.com/903",
        "categories": [
          "유튜브/영화"
        ],
        "isoDate": "2024-10-29T06:16:57.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "비트코인 솔로 채굴 성공 사례가 또 나왔습니다.",
        "link": "http://serverdown.tistory.com/902",
        "pubDate": "Tue, 29 Oct 2024 14:03:51 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/902#entry902comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=MVKkHFxhThM\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=MVKkHFxhThM</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=MVKkHFxhThM\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ekP4eO/hyXpuh0rPq/5x1P4bQpuNzdNkadnVUGW1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/QjoVO/hyXpuh0rU9/iDkprqvVYrBueDxCP0Mky0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"비트코인 로또 채굴기, 3개 획득!  #비트코인 #BTC  #BITCOIN\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/MVKkHFxhThM\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이전 채굴글: <a href=\"https://serverdown.tistory.com/840\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://serverdown.tistory.com/840</a></p>\n<p data-ke-size=\"size16\">7월에 한건이 발표되고서 또 나왔네요<br />드문드문 나오는걸로 알고 있구요. <br />자랑하는 글이 올라오는게 2건이라는 뜻입니다.</p>\n<p data-ke-size=\"size16\">자랑하면 보통 자기 장비를 공개하기 때문에 어느정도 돌리면 나오는지 유추해볼 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔로 채굴은 랜덤 영역을 혼자 채굴해서 나오는고 전채를 먹는 방식입니다.</p>\n<p data-ke-size=\"size16\">복권 모드라고도하구요</p>\n<p data-ke-size=\"size16\">저도 이거 하려고 준비 중입니다.</p>\n<p data-ke-size=\"size16\">10분마다 비트코인 3개씩 나오고 있습니다.</p>\n<p data-ke-size=\"size16\">일생에 한번만 뽑으면 본전 정도가 아니라<br />어마어마한 보상이 나오는 상황이라 해볼만 하다고 보입니다.<br />(약 3억원어치)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오늘 나온 사례는 10Th (테라해쉬) 400w 장비로 나왔구요</p>\n<p data-ke-size=\"size16\">제가 주문한 비트액스를 10개 정도 돌리는 능력으로 보입니다.<br />참고로 비트액스는 20w 라 10개 돌리면 200w 입니다.&nbsp; <br />전력 효율은 비트엑스가 제일 좋습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=MVKkHFxhThM\n\n\n\n \n이전 채굴글: https://serverdown.tistory.com/840\n7월에 한건이 발표되고서 또 나왔네요\n드문드문 나오는걸로 알고 있구요. \n자랑하는 글이 올라오는게 2건이라는 뜻입니다.\n자랑하면 보통 자기 장비를 공개하기 때문에 어느정도 돌리면 나오는지 유추해볼 수 있습니다.\n \n솔로 채굴은 랜덤 영역을 혼자 채굴해서 나오는고 전채를 먹는 방식입니다.\n복권 모드라고도하구요\n저도 이거 하려고 준비 중입니다.\n10분마다 비트코인 3개씩 나오고 있습니다.\n일생에 한번만 뽑으면 본전 정도가 아니라\n어마어마한 보상이 나오는 상황이라 해볼만 하다고 보입니다.\n(약 3억원어치)\n \n오늘 나온 사례는 10Th (테라해쉬) 400w 장비로 나왔구요\n제가 주문한 비트액스를 10개 정도 돌리는 능력으로 보입니다.\n참고로 비트액스는 20w 라 10개 돌리면 200w 입니다.  \n전력 효율은 비트엑스가 제일 좋습니다.",
        "guid": "http://serverdown.tistory.com/902",
        "categories": [
          "코인"
        ],
        "isoDate": "2024-10-29T05:03:51.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2024년 11월 블로그 매일매일 글쓰기 이벤트 시작 / 먹을꺼 쿠폰 줌",
        "link": "http://serverdown.tistory.com/901",
        "pubDate": "Tue, 29 Oct 2024 13:41:34 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/901#entry901comment",
        "content": "<p data-ke-size=\"size16\">링크: <a href=\"https://www.tistory.com/event/write-challenge-2024\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.tistory.com/event/write-challenge-2024</a></p>\n<figure id=\"og_1730176863462\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"작심삼주 오블완 챌린지\" data-og-description=\"오늘 블로그 완료! 21일 동안 매일 블로그에 글 쓰고 글력을 키워보세요.\" data-og-host=\"www.tistory.com\" data-og-source-url=\"https://www.tistory.com/event/write-challenge-2024\" data-og-url=\"https://www.tistory.com/event/write-challenge-2024\" data-og-image=\"https://scrap.kakaocdn.net/dn/bzWcp5/hyXpuIU063/uygVVvh185eDTMTpNGFqGK/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/kdmTc/hyXptiWIlG/IEHmmjZlapzKDBlZVHe4g1/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/KBNQ8/hyXpCtq7vg/OlpBeCI3xdwm0lnlpbdAu1/img.png?width=1080&amp;height=1719&amp;face=0_0_1080_1719\"><a href=\"https://www.tistory.com/event/write-challenge-2024\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.tistory.com/event/write-challenge-2024\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bzWcp5/hyXpuIU063/uygVVvh185eDTMTpNGFqGK/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/kdmTc/hyXptiWIlG/IEHmmjZlapzKDBlZVHe4g1/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/KBNQ8/hyXpCtq7vg/OlpBeCI3xdwm0lnlpbdAu1/img.png?width=1080&amp;height=1719&amp;face=0_0_1080_1719');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">작심삼주 오블완 챌린지</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">오늘 블로그 완료! 21일 동안 매일 블로그에 글 쓰고 글력을 키워보세요.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">티스토리가 처음보는 이벤트를 하는군요</p>\n<p data-ke-size=\"size16\">사업을 하긴 하나봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">링크가 포함된 글을 작성하면 사전 이벤트에 참여할 수 있다는군요</p>\n<p data-ke-size=\"size16\">공짜 쿠폰을 모아봅시다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "링크: https://www.tistory.com/event/write-challenge-2024\n\n \n작심삼주 오블완 챌린지\n오늘 블로그 완료! 21일 동안 매일 블로그에 글 쓰고 글력을 키워보세요.\nwww.tistory.com\n\n \n티스토리가 처음보는 이벤트를 하는군요\n사업을 하긴 하나봅니다.\n \n링크가 포함된 글을 작성하면 사전 이벤트에 참여할 수 있다는군요\n공짜 쿠폰을 모아봅시다.",
        "guid": "http://serverdown.tistory.com/901",
        "isoDate": "2024-10-29T04:41:34.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "커버드콜 상품에 대한 자세한 설명",
        "link": "http://serverdown.tistory.com/900",
        "pubDate": "Tue, 29 Oct 2024 13:40:31 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/900#entry900comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/VmsbonezJdA?t=603\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/VmsbonezJdA?t=603</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=VmsbonezJdA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cxIt2k/hyXpoox0r2/6b4tOkQt9hPhO5WQxRI2V1/img.jpg?width=1280&amp;height=720&amp;face=502_100_1096_392,https://scrap.kakaocdn.net/dn/dBvtN6/hyXpuhZ5Xv/8Fe58imXxItZTzovjFFNm1/img.jpg?width=1280&amp;height=720&amp;face=502_100_1096_392\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"비트코인 현물 ETF 옵션 승인의 의미│ETF에 투자하는 ETF│QBIG 언제 나와요│ETF딥다이브 \" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/VmsbonezJdA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">10분 부터 나옵니다.</p>\n<p data-ke-size=\"size16\">방식은 위아래로 옵션 거래를 걸어 수익금을 나눠가지는 방식이구요</p>\n<p data-ke-size=\"size16\">추정자산이 횡보하면 제일 좋구요</p>\n<p data-ke-size=\"size16\">위든 아래든 움직이는 것에 비해 덜 먹습니다.</p>\n<p data-ke-size=\"size16\">-20프로 쯤 빠진다면 -17% 식<br />위로 올라가면 덜 오르겠죠</p>\n<p data-ke-size=\"size16\">배당주 보험주 같은건 잘 안움직이니 이방식이 좋아보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://youtu.be/VmsbonezJdA?t=603\n\n\n\n10분 부터 나옵니다.\n방식은 위아래로 옵션 거래를 걸어 수익금을 나눠가지는 방식이구요\n추정자산이 횡보하면 제일 좋구요\n위든 아래든 움직이는 것에 비해 덜 먹습니다.\n-20프로 쯤 빠진다면 -17% 식\n위로 올라가면 덜 오르겠죠\n배당주 보험주 같은건 잘 안움직이니 이방식이 좋아보입니다.",
        "guid": "http://serverdown.tistory.com/900",
        "categories": [
          "투자"
        ],
        "isoDate": "2024-10-29T04:40:31.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "4680 베터리를 게임기에 쓰는 남자",
        "link": "http://serverdown.tistory.com/899",
        "pubDate": "Sun, 27 Oct 2024 14:58:10 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/899#entry899comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=EXXD5tIPCXY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=EXXD5tIPCXY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=EXXD5tIPCXY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/RSowU/hyXlTiS9hI/TfccotpWkmi57NdFKX8241/img.jpg?width=1280&amp;height=720&amp;face=624_236_674_292,https://scrap.kakaocdn.net/dn/ccUPn6/hyXlTpF4ag/dksDZjxcXkhq7CI0FrXAkK/img.jpg?width=1280&amp;height=720&amp;face=624_236_674_292\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"테슬라 4680 배터리를 게임기에 넣으면 과연 몇시간 동안 게임을 할 수 있을까?\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/EXXD5tIPCXY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그남자는 닥터K</p>\n<p data-ke-size=\"size16\">상단에 + - 가 다 있어서 작업하기 위험하군요 테이프로 칭칭 감아 절연해야하는군요 ㄷㄷ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1232\" data-origin-height=\"593\"><span data-url=\"https://blog.kakaocdn.net/dn/F9BAb/btsKlYJGFJ1/Yk6Bt2d7QnKK3N0DV8Dhok/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/F9BAb/btsKlYJGFJ1/Yk6Bt2d7QnKK3N0DV8Dhok/img.png\"><img src=\"https://blog.kakaocdn.net/dn/F9BAb/btsKlYJGFJ1/Yk6Bt2d7QnKK3N0DV8Dhok/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FF9BAb%2FbtsKlYJGFJ1%2FYk6Bt2d7QnKK3N0DV8Dhok%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"1232\" data-origin-height=\"593\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">알리에서 팔고 있네요 인산염이라고 적혀있는걸 보니 LFP 인가봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"439\" data-origin-height=\"205\"><span data-url=\"https://blog.kakaocdn.net/dn/bHhMGl/btsKlQrzVo2/pHXV8uRophekhTCJFpNm3k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bHhMGl/btsKlQrzVo2/pHXV8uRophekhTCJFpNm3k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bHhMGl/btsKlQrzVo2/pHXV8uRophekhTCJFpNm3k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbHhMGl%2FbtsKlQrzVo2%2FpHXV8uRophekhTCJFpNm3k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"439\" data-origin-height=\"205\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">테슬라 프리미엄인지 테슬라라고 적힌건 만원이 더 비싸네요 ㄷㄷㄷ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">사용시간이 무지막지해서 30,000mA 정도 되나봅니다.</p>\n<p data-ke-size=\"size16\">3시간 짜리가 30시간으로 늘어버렸다는군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">작업하기 위험한거 빼곤 다 좋네요</p>\n<p data-ke-size=\"size16\">베터리의 미래 맞는거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">마지막에 삼원계라고 하시던데 LFP 같습니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=EXXD5tIPCXY\n\n\n\n \n그남자는 닥터K\n상단에 + - 가 다 있어서 작업하기 위험하군요 테이프로 칭칭 감아 절연해야하는군요 ㄷㄷ\n \n\n\n알리에서 팔고 있네요 인산염이라고 적혀있는걸 보니 LFP 인가봅니다.\n \n\n\n테슬라 프리미엄인지 테슬라라고 적힌건 만원이 더 비싸네요 ㄷㄷㄷ\n \n사용시간이 무지막지해서 30,000mA 정도 되나봅니다.\n3시간 짜리가 30시간으로 늘어버렸다는군요\n \n작업하기 위험한거 빼곤 다 좋네요\n베터리의 미래 맞는거 같습니다.\n \n마지막에 삼원계라고 하시던데 LFP 같습니다.",
        "guid": "http://serverdown.tistory.com/899",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-10-27T05:58:10.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "암묵지에서 형식지로",
        "link": "https://jojoldu.tistory.com/809",
        "pubDate": "Sun, 27 Oct 2024 20:08:55 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/809#entry809comment",
        "content": "<p data-ke-size=\"size16\">지난주 토요일에 <a href=\"https://www.inflearn.com/course/offline/ksug-seminar-2024?\">KSUG</a> 에서 진행한 가을 세미나의 패널토크 MC로 참여하고 왔다.</p>\n<p data-ke-size=\"size16\"><a href=\"https://www.facebook.com/hika00\">기완님</a>, <a href=\"https://www.facebook.com/ezblog\">희송님</a>, <a href=\"https://www.facebook.com/arawn.kr\">용권님</a> 3분이 여러 질문에 대해 답변을 해주시는 것에 많은 경험을 간접적으로 얻을 수 있었다.</p>\n<p data-ke-size=\"size16\">이런 패널토크는 사전에 준비된 질문 외에도 갑작스런 질문들이 많은데, 준비되지 않은 내용에 대해서 바로 바로 이야기하려면 그만큼 여러 경험이나 생각이 정리되어있어야만 한다고 생각했다.<br />그래서 3분의 생각이 듣고 싶어 사전에 논의된 질문 외에도 여러가지 추가 질문들을 이어서 했고, 다채로운 경험을 얻을 수 있었다.</p>\n<p data-ke-size=\"size16\">끝나고 와이프를 만나러 가는 길에 웬지 스토브리그 드라마의 장면이 생각났다.</p>\n<p data-ke-size=\"size16\">스토브리그에서 단장인 백승수가 <b>드림즈가 준우승 했을 때와 지금이 무엇이 다른지</b>를 당시의 멤버였던 장진우 투수에서 물어보는 장면이 있다.</p>\n<p><iframe src=\"https://www.youtube.com/embed/c5aE51XTgbE?si=HQu3IuK94s5pMRVL\" width=\"560\" height=\"315\" frameborder=\"\" allowfullscreen=\"true\"></iframe></p>\n<p data-ke-size=\"size16\">장진우 투수는 준우승 할 때와 지금이 무엇이 다른지 하나하나 설명해준다.<br />단순히 그때는 타자들이 좋았다, 투수들이 좋았다와 같이 추상적인 설명이 아닌 구체적인 차이를 설명한다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>19승을 달성한 투수의 존재</li>\n<li>19승 투수가 나올 수 있도록 마운드 올라가기전 멘탈을 잡아주던 불펜 포수</li>\n<li>타자들이 왼손 투수들을 더 잘 상대할 수 있게 해준 베팅볼 투수</li>\n<li>선수 부상을 최소로 해준 컨디셔닝 코치</li>\n</ul>\n<p data-ke-size=\"size16\">이걸 듣고 백승수 단장은 하나씩 이들을 복귀 시키고 종국엔 우승권 팀을 만들어낸다.</p>\n<p data-ke-size=\"size16\">패널토크가 끝나고 왜 이 장면이 갑자기 떠올랐냐하면, <b>어떤 경험을 단순한 감정이나 추상적인 문장이 아닌 명확하고 또렷한 문장으로 설명했다</b>는 공통점 때문이였다.</p>\n<p data-ke-size=\"size16\">예를 들면 \"어떤 팀원을 리더로 승진시켜야 하나요?\" 라는 질문에 \"딱 보면 안다\" 같은 추상적인 답변이 아닌, \"본인이 리더가 되고 싶음을 계속 어필하는 사람\" 과 같이 명확하게 인식할 수 있는 문장으로 답변하는 것이 드라마 속 준우승 팀과의 차이점을 명확하게 설명하는 대사와 겹쳐보였다.</p>\n<hr data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">일류의 조건을 보면 다음과 같은 문장이 나온다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">내가 생각하는 '살아가는 힘'이란, '숙달에 이르는 보편적 원리'를 반복적 체험을 통해 '기술로 만드는 것'이다.<br /><b>경험이 전혀 없는 낯선 영역의 일이라도 숙달에 이르는 비결을 찾아내는 힘이 있다면 용기를 갖고 새로운 영역에 도전장을 던질 수 있다</b>.<br />...<br />'전문가의 방식과 행동을 관찰하고 그 기술을 훔쳐 내 것으로 만든다' 이것이 숙달로 이러지는 대원칙이다.<br />...<br /><b>기술을 훔치는 힘은 암묵지 (개인의 기술이나 경험 속에 숨어 있지만, 말과 글로 표현할 수 없는 지식이나 능력)를 얼마나 명확하게 인식하는지에 달려 있다</b>.<br />기업 내의 지식 대부분은 암묵지로서, 그것을 활성화하여 형식지로 이용하는 과정이 대단히 중요하다.<br />...<br /><b>기술을 훔치는 힘은, 암묵지를 본인의 의식으로 자체 해석하여 형식지로 발현하고, 이를 다시 자기 안에 스며들게 하는 힘</b>을 말한다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">경험하고 이해한 것을 내 문장으로 정리해서 뱉어낼 수 있을때 온전히 내 것이 되었다.</p>\n<p data-ke-size=\"size16\">좋은 팀을 경험했다면 왜 이 팀이 좋은 팀인지, 좋은 팀이 될 수 있었던 이유는 무엇인지 문장으로서 정리할 수 있어야 다음에도 좋은 팀을 구축할 수 있다.</p>\n<p data-ke-size=\"size16\">좋은 팀원을 채용했다면 왜 이 팀원이 좋은 팀원인지, 이 팀원을 판별할 수 있었던 이유는 무엇 때문이였는지, 채용할 수 있었던 이유는 무엇 때문인지 명확한 문장으로 정리할 수 있어야 다음에도 좋은 팀원을 채용할 수 있었다.</p>\n<p data-ke-size=\"size16\">단순히 머릿속으로 생각에서 끝나거나, 기억에만 남겨둔다면 내 것이 되지 못했다.<br />어떠한 경험이 암묵지가 아닌 형식지가 되어야만 개인으로서, 팀으로서 성장할 수 있었다.</p>\n<p data-ke-size=\"size16\">문장으로 정리하는 과정은 내가 얼마나 정확히 알고 있는지, 어떤 부분이 애매한지 명확하게 보여준다.<br />이 과정을 통해 알게 된 부분은 더 깊어지고, 애매했던 부분은 분명해진다.</p>\n<p data-ke-size=\"size16\">왜 그게 좋았는지,<br />왜 좋을 수 있었는지,<br />어떤 것을 했기에 그런 결과가 나온 것인지 등<br />경험으로 얻었던 많은 암묵지들을 문장으로서 정리하고 공유하는 것을 자주 해야겠다.<br />그리고 팀 분들에게도 더 많이 물어보고 공유하길 권장해야겠다.</p>",
        "contentSnippet": "지난주 토요일에 KSUG 에서 진행한 가을 세미나의 패널토크 MC로 참여하고 왔다.\n기완님, 희송님, 용권님 3분이 여러 질문에 대해 답변을 해주시는 것에 많은 경험을 간접적으로 얻을 수 있었다.\n이런 패널토크는 사전에 준비된 질문 외에도 갑작스런 질문들이 많은데, 준비되지 않은 내용에 대해서 바로 바로 이야기하려면 그만큼 여러 경험이나 생각이 정리되어있어야만 한다고 생각했다.\n그래서 3분의 생각이 듣고 싶어 사전에 논의된 질문 외에도 여러가지 추가 질문들을 이어서 했고, 다채로운 경험을 얻을 수 있었다.\n끝나고 와이프를 만나러 가는 길에 웬지 스토브리그 드라마의 장면이 생각났다.\n스토브리그에서 단장인 백승수가 드림즈가 준우승 했을 때와 지금이 무엇이 다른지를 당시의 멤버였던 장진우 투수에서 물어보는 장면이 있다.\n\n장진우 투수는 준우승 할 때와 지금이 무엇이 다른지 하나하나 설명해준다.\n단순히 그때는 타자들이 좋았다, 투수들이 좋았다와 같이 추상적인 설명이 아닌 구체적인 차이를 설명한다.\n19승을 달성한 투수의 존재\n19승 투수가 나올 수 있도록 마운드 올라가기전 멘탈을 잡아주던 불펜 포수\n타자들이 왼손 투수들을 더 잘 상대할 수 있게 해준 베팅볼 투수\n선수 부상을 최소로 해준 컨디셔닝 코치\n이걸 듣고 백승수 단장은 하나씩 이들을 복귀 시키고 종국엔 우승권 팀을 만들어낸다.\n패널토크가 끝나고 왜 이 장면이 갑자기 떠올랐냐하면, 어떤 경험을 단순한 감정이나 추상적인 문장이 아닌 명확하고 또렷한 문장으로 설명했다는 공통점 때문이였다.\n예를 들면 \"어떤 팀원을 리더로 승진시켜야 하나요?\" 라는 질문에 \"딱 보면 안다\" 같은 추상적인 답변이 아닌, \"본인이 리더가 되고 싶음을 계속 어필하는 사람\" 과 같이 명확하게 인식할 수 있는 문장으로 답변하는 것이 드라마 속 준우승 팀과의 차이점을 명확하게 설명하는 대사와 겹쳐보였다.\n일류의 조건을 보면 다음과 같은 문장이 나온다.\n내가 생각하는 '살아가는 힘'이란, '숙달에 이르는 보편적 원리'를 반복적 체험을 통해 '기술로 만드는 것'이다.\n경험이 전혀 없는 낯선 영역의 일이라도 숙달에 이르는 비결을 찾아내는 힘이 있다면 용기를 갖고 새로운 영역에 도전장을 던질 수 있다.\n...\n'전문가의 방식과 행동을 관찰하고 그 기술을 훔쳐 내 것으로 만든다' 이것이 숙달로 이러지는 대원칙이다.\n...\n기술을 훔치는 힘은 암묵지 (개인의 기술이나 경험 속에 숨어 있지만, 말과 글로 표현할 수 없는 지식이나 능력)를 얼마나 명확하게 인식하는지에 달려 있다.\n기업 내의 지식 대부분은 암묵지로서, 그것을 활성화하여 형식지로 이용하는 과정이 대단히 중요하다.\n...\n기술을 훔치는 힘은, 암묵지를 본인의 의식으로 자체 해석하여 형식지로 발현하고, 이를 다시 자기 안에 스며들게 하는 힘을 말한다.\n \n경험하고 이해한 것을 내 문장으로 정리해서 뱉어낼 수 있을때 온전히 내 것이 되었다.\n좋은 팀을 경험했다면 왜 이 팀이 좋은 팀인지, 좋은 팀이 될 수 있었던 이유는 무엇인지 문장으로서 정리할 수 있어야 다음에도 좋은 팀을 구축할 수 있다.\n좋은 팀원을 채용했다면 왜 이 팀원이 좋은 팀원인지, 이 팀원을 판별할 수 있었던 이유는 무엇 때문이였는지, 채용할 수 있었던 이유는 무엇 때문인지 명확한 문장으로 정리할 수 있어야 다음에도 좋은 팀원을 채용할 수 있었다.\n단순히 머릿속으로 생각에서 끝나거나, 기억에만 남겨둔다면 내 것이 되지 못했다.\n어떠한 경험이 암묵지가 아닌 형식지가 되어야만 개인으로서, 팀으로서 성장할 수 있었다.\n문장으로 정리하는 과정은 내가 얼마나 정확히 알고 있는지, 어떤 부분이 애매한지 명확하게 보여준다.\n이 과정을 통해 알게 된 부분은 더 깊어지고, 애매했던 부분은 분명해진다.\n왜 그게 좋았는지,\n왜 좋을 수 있었는지,\n어떤 것을 했기에 그런 결과가 나온 것인지 등\n경험으로 얻었던 많은 암묵지들을 문장으로서 정리하고 공유하는 것을 자주 해야겠다.\n그리고 팀 분들에게도 더 많이 물어보고 공유하길 권장해야겠다.",
        "guid": "https://jojoldu.tistory.com/809",
        "categories": [
          "생각정리",
          "KSUG",
          "스토브 리그",
          "스프링캠프",
          "암묵지",
          "일류의 조건"
        ],
        "isoDate": "2024-10-27T11:08:55.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "Ubuntu 24에 Puppeteer용 Chromium 설치하기",
        "link": "https://hyeonseok.com/blog/924",
        "pubDate": "Sat, 26 Oct 2024 17:49:58 GMT",
        "content": "<p>우분투 24(Ubuntu 24)에 퍼피티어(Puppeteer)를 깔고 크로미움(Chromium)을 깐다.</p>\r\n\r\n<pre><code>sudo -u www-data npx puppeteer browsers install chrome</code></pre>\r\n\r\n<p>다음에 크롬이 사용하는 의존 패키지를 깐다.</p>\r\n\r\n<pre><code>sudo apt-get install gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libnss3 lsb-release xdg-utils wget</code></pre>\r\n\r\n<p>우분투 22에서는 잘 깔렸는데 우분투 24에서는 깔리지 않는다. 문제가 있는 패키지는 <code>gconf-service</code>, <code>libasound2</code> 두개다.</p>\r\n\r\n<p><a href=\"https://github.com/Eugeny/tabby/issues/9457#issuecomment-1962779671\"><code>gconf-service</code> 패키지를 직접 가져와서 깔아준다</a>.</p>\r\n\r\n<pre><code>wget http://ftp.it.debian.org/debian/pool/main/g/gconf/gconf2_3.2.6-8_amd64.deb\r\nwget http://ftp.it.debian.org/debian/pool/main/g/gconf/libgconf-2-4_3.2.6-8_amd64.deb\r\nwget http://ftp.it.debian.org/debian/pool/main/g/gconf/gconf2-common_3.2.6-8_all.deb\r\nwget http://ftp.it.debian.org/debian/pool/main/g/gconf/gconf-service_3.2.6-8_amd64.deb\r\nwget http://ftp.it.debian.org/debian/pool/main/o/openldap/libldap-2.5-0_2.5.13%2bdfsg-5_amd64.deb\r\nsudo apt install ./gconf2_3.2.6-8_amd64.deb ./gconf-service_3.2.6-8_amd64.deb ./libgconf-2-4_3.2.6-8_amd64.deb ./gconf2-common_3.2.6-8_all.deb ./libldap-2.5-0_2.5.13+dfsg-5_amd64.deb</code></pre>\r\n\r\n<p><a href=\"https://github.com/cypress-io/cypress-documentation/issues/5816\"><code>libasound2</code>는 <code>libasound2t64</code>로 이름이 바뀌어서</a> 이걸 깔아준다.</p>\r\n\r\n<p>구동을 하면 패키지 관련 오류는 발생하지 않지만 샌드박스 관련 오류가 발생한다. <a href=\"https://chromium.googlesource.com/chromium/src/+/main/docs/security/apparmor-userns-restrictions.md\">우분투 24에서 AppArmor 제한 때문에 크롬의 개발 버전이 작동하지 않아서</a> 이다.</p>\r\n\r\n<pre><code>CHROME_DEVEL_SANDBOX=/home/hyeonseok/.cache/puppeteer/chrome/linux-129.0.6668.100/chrome-linux64/chrome_sandbox</code></pre>\r\n\r\n<p>환경변수로 샌드박스를 지정하면 마지막으로 권한 오류가 발생한다.</p>\r\n\r\n<pre><code>Error: Failed to launch the browser process!\r\n[3597:3597:1016/140924.374237:FATAL:setuid_sandbox_host.cc(163)] The SUID sandbox helper binary was found, but is not configured correctly. Rather than run without sandboxing I'm aborting now. You need to make sure that /home/hyeonseok/.cache/puppeteer/chrome/linux-129.0.6668.100/chrome-linux64/chrome_sandbox is owned by root and has mode 4755.</code></pre>\r\n\r\n<p>권한을 시키는 대로 바꿔준다.</p>\r\n\r\n<pre><code>chown root:root chrome_sandbox\r\nsudo chmod 4755 chrome_sandbox</code></pre>",
        "contentSnippet": "우분투 24(Ubuntu 24)에 퍼피티어(Puppeteer)를 깔고 크로미움(Chromium)을 깐다.\n\r\n\r\nsudo -u www-data npx puppeteer browsers install chrome\n\r\n\r\n다음에 크롬이 사용하는 의존 패키지를 깐다.\n\r\n\r\nsudo apt-get install gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libnss3 lsb-release xdg-utils wget\n\r\n\r\n우분투 22에서는 잘 깔렸는데 우분투 24에서는 깔리지 않는다. 문제가 있는 패키지는 gconf-service, libasound2 두개다.\n\r\n\r\ngconf-service 패키지를 직접 가져와서 깔아준다.\n\r\n\r\nwget http://ftp.it.debian.org/debian/pool/main/g/gconf/gconf2_3.2.6-8_amd64.deb\r\nwget http://ftp.it.debian.org/debian/pool/main/g/gconf/libgconf-2-4_3.2.6-8_amd64.deb\r\nwget http://ftp.it.debian.org/debian/pool/main/g/gconf/gconf2-common_3.2.6-8_all.deb\r\nwget http://ftp.it.debian.org/debian/pool/main/g/gconf/gconf-service_3.2.6-8_amd64.deb\r\nwget http://ftp.it.debian.org/debian/pool/main/o/openldap/libldap-2.5-0_2.5.13%2bdfsg-5_amd64.deb\r\nsudo apt install ./gconf2_3.2.6-8_amd64.deb ./gconf-service_3.2.6-8_amd64.deb ./libgconf-2-4_3.2.6-8_amd64.deb ./gconf2-common_3.2.6-8_all.deb ./libldap-2.5-0_2.5.13+dfsg-5_amd64.deb\n\r\n\r\nlibasound2는 libasound2t64로 이름이 바뀌어서 이걸 깔아준다.\n\r\n\r\n구동을 하면 패키지 관련 오류는 발생하지 않지만 샌드박스 관련 오류가 발생한다. 우분투 24에서 AppArmor 제한 때문에 크롬의 개발 버전이 작동하지 않아서 이다.\n\r\n\r\nCHROME_DEVEL_SANDBOX=/home/hyeonseok/.cache/puppeteer/chrome/linux-129.0.6668.100/chrome-linux64/chrome_sandbox\n\r\n\r\n환경변수로 샌드박스를 지정하면 마지막으로 권한 오류가 발생한다.\n\r\n\r\nError: Failed to launch the browser process!\r\n[3597:3597:1016/140924.374237:FATAL:setuid_sandbox_host.cc(163)] The SUID sandbox helper binary was found, but is not configured correctly. Rather than run without sandboxing I'm aborting now. You need to make sure that /home/hyeonseok/.cache/puppeteer/chrome/linux-129.0.6668.100/chrome-linux64/chrome_sandbox is owned by root and has mode 4755.\n\r\n\r\n권한을 시키는 대로 바꿔준다.\n\r\n\r\nchown root:root chrome_sandbox\r\nsudo chmod 4755 chrome_sandbox",
        "guid": "https://hyeonseok.com/blog/924",
        "isoDate": "2024-10-26T17:49:58.000Z"
      }
    ]
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": [
      {
        "creator": "dlehddus84",
        "title": "에버델, 반지의 제왕: 가운데땅에서의 대결, 아트소사이어티, 붑",
        "link": "http://blog.naver.com/dlehddus84/223634635994?fromRss=true&trackingCode=rss",
        "pubDate": "Sat, 26 Oct 2024 21:21:01 +0900",
        "author": "dlehddus84",
        "content": "에버델 완전판 초플 소감은 보드게임을 많이 접해보지 않은 사람들에게는 좋아보이나 우리 부부는 그래도 꽤나 헤비한 게임도 많이 해봤어서 그런지 약간 슴슴한 느낌이었다. 확장을 넣지 않고 본판만 플레이 하였으나 확장을 넣어보면 좀 다른 느낌이려나? 스티커가 꽤나 많이 있었는데 게임 자체는 귀엽고 맘에 든다. 반지의 제왕: 가운데땅에서의 대결, 반지 듀얼이라 불리는 게임이다. 세듀 기반의 반지의 제왕 IP를 입힌 게임인데 우리 부부는 세듀도 꽤나 즐기기에 세듀가 있는데 굳이 사야하나 하다가 그래도 팬심으로 구매하였다. 세듀보다 확실히 깔끔한 느낌이었다. 아이콘도 직관적이고 특히나 트랙이 놀랍다. 서로 점수를 내는 트랙.......",
        "contentSnippet": "에버델 완전판 초플 소감은 보드게임을 많이 접해보지 않은 사람들에게는 좋아보이나 우리 부부는 그래도 꽤나 헤비한 게임도 많이 해봤어서 그런지 약간 슴슴한 느낌이었다. 확장을 넣지 않고 본판만 플레이 하였으나 확장을 넣어보면 좀 다른 느낌이려나? 스티커가 꽤나 많이 있었는데 게임 자체는 귀엽고 맘에 든다. 반지의 제왕: 가운데땅에서의 대결, 반지 듀얼이라 불리는 게임이다. 세듀 기반의 반지의 제왕 IP를 입힌 게임인데 우리 부부는 세듀도 꽤나 즐기기에 세듀가 있는데 굳이 사야하나 하다가 그래도 팬심으로 구매하였다. 세듀보다 확실히 깔끔한 느낌이었다. 아이콘도 직관적이고 특히나 트랙이 놀랍다. 서로 점수를 내는 트랙.......",
        "guid": "http://blog.naver.com/dlehddus84/223634635994",
        "categories": [
          "플레이"
        ],
        "isoDate": "2024-10-26T12:21:01.000Z"
      },
      {
        "creator": "dlehddus84",
        "title": "킵더히어로즈 아웃, 운명의 세여신, 워드캡처 구매",
        "link": "http://blog.naver.com/dlehddus84/223634625712?fromRss=true&trackingCode=rss",
        "pubDate": "Sat, 26 Oct 2024 21:09:33 +0900",
        "author": "dlehddus84",
        "content": "기다리던 킵 더 히어로즈 아웃이 와서 정리하고 플레이 하였다. 시나리오 1과 2를 플레이 해보았는데 캐릭터 특성이 꽤나 뚜렷하여 컨셉 플레이가 가능하다. 슬라임은 공격받을때 분리하여 두마리가 되는 능력, 해골은 영웅을 공격하여 죽이면 그 곳에서 해골이 하나더 생성된다거나 확장을 킥스타터에서 먼저 받아놔서 우드토큰과 유니콘 몬스터를 남들보다 먼저 사용할 수 있어서 좋았다. 가격은 국내 정발이 물론 더 쌀테지만 그때까지 많이 돌려 뽕을 뽑아야 겠다. 인디 보드게임 마켓에 참석하여 운명의 세여신과 워드 캡처를 구매해왔다. 금액은 운명의 세여신이 75000원 워드 캡처는 9900원 주었다. 모임에서 와이프가 워드캡처를 해봤는.......",
        "contentSnippet": "기다리던 킵 더 히어로즈 아웃이 와서 정리하고 플레이 하였다. 시나리오 1과 2를 플레이 해보았는데 캐릭터 특성이 꽤나 뚜렷하여 컨셉 플레이가 가능하다. 슬라임은 공격받을때 분리하여 두마리가 되는 능력, 해골은 영웅을 공격하여 죽이면 그 곳에서 해골이 하나더 생성된다거나 확장을 킥스타터에서 먼저 받아놔서 우드토큰과 유니콘 몬스터를 남들보다 먼저 사용할 수 있어서 좋았다. 가격은 국내 정발이 물론 더 쌀테지만 그때까지 많이 돌려 뽕을 뽑아야 겠다. 인디 보드게임 마켓에 참석하여 운명의 세여신과 워드 캡처를 구매해왔다. 금액은 운명의 세여신이 75000원 워드 캡처는 9900원 주었다. 모임에서 와이프가 워드캡처를 해봤는.......",
        "guid": "http://blog.naver.com/dlehddus84/223634625712",
        "categories": [
          "정보/구매"
        ],
        "isoDate": "2024-10-26T12:09:33.000Z"
      },
      {
        "creator": "dlehddus84",
        "title": "언더다크의 폭군들 플레이",
        "link": "http://blog.naver.com/dlehddus84/223634621719?fromRss=true&trackingCode=rss",
        "pubDate": "Sat, 26 Oct 2024 21:05:07 +0900",
        "author": "dlehddus84",
        "content": "언더다크의 폭군들은 우리 부부가 애정하는 게임 중 하나로 토큰은 레진 작업을 하였고 유저맵도 만들어서 플레이중이다. 커스텀 맵을 사용하면 지도가 매번 바뀌어 기존 맵보다 확실히 좀더 나은 느낌이다. 매일 2인만 하다 모임에서 4인을 돌려봤는데 역시 사람이 많아야 더욱 재미있다. 첫플인분이 두분이라 초반엔 평화로웠으나 지형이 점점 채워지면서 서로 전투가 많이 일어나 흥미진진 했다. 2인플시엔 보통 부대 토큰이 떨어져 게임이 종료되나 4인은 시장덱이 떨어져 종료되었다. 4인은 괜히 튀어서 잘하는 모습이 보이면 남은 사람들에게 집중 공격을 당해 끌어내려지는 모습이 많이 보이는데 2인은 확실히 맞짱느낌이다.",
        "contentSnippet": "언더다크의 폭군들은 우리 부부가 애정하는 게임 중 하나로 토큰은 레진 작업을 하였고 유저맵도 만들어서 플레이중이다. 커스텀 맵을 사용하면 지도가 매번 바뀌어 기존 맵보다 확실히 좀더 나은 느낌이다. 매일 2인만 하다 모임에서 4인을 돌려봤는데 역시 사람이 많아야 더욱 재미있다. 첫플인분이 두분이라 초반엔 평화로웠으나 지형이 점점 채워지면서 서로 전투가 많이 일어나 흥미진진 했다. 2인플시엔 보통 부대 토큰이 떨어져 게임이 종료되나 4인은 시장덱이 떨어져 종료되었다. 4인은 괜히 튀어서 잘하는 모습이 보이면 남은 사람들에게 집중 공격을 당해 끌어내려지는 모습이 많이 보이는데 2인은 확실히 맞짱느낌이다.",
        "guid": "http://blog.naver.com/dlehddus84/223634621719",
        "categories": [
          "플레이"
        ],
        "isoDate": "2024-10-26T12:05:07.000Z"
      },
      {
        "creator": "dlehddus84",
        "title": "브라스 버밍엄 토큰 레진 작업",
        "link": "http://blog.naver.com/dlehddus84/223634553859?fromRss=true&trackingCode=rss",
        "pubDate": "Sat, 26 Oct 2024 19:45:31 +0900",
        "author": "dlehddus84",
        "content": "전세계 보드게임 순위 중 1위인 브라스 - 버밍엄의 보라색 토큰에 레진 코팅을 해보았습니다. 언더다크의 폭군들 작업 완료 하고 힘들어서 한동안 안하다가 빨리 해서 게임을 하고 싶어 작업을 급하게 하였습니다. 언더다크의 폭군들의 작고 많은 갯수를 했어서 그런지 열몇개는 금방 끝났네요. 언능 다른 색상도 해야겠습니다.",
        "contentSnippet": "전세계 보드게임 순위 중 1위인 브라스 - 버밍엄의 보라색 토큰에 레진 코팅을 해보았습니다. 언더다크의 폭군들 작업 완료 하고 힘들어서 한동안 안하다가 빨리 해서 게임을 하고 싶어 작업을 급하게 하였습니다. 언더다크의 폭군들의 작고 많은 갯수를 했어서 그런지 열몇개는 금방 끝났네요. 언능 다른 색상도 해야겠습니다.",
        "guid": "http://blog.naver.com/dlehddus84/223634553859",
        "categories": [
          "도색과 제작"
        ],
        "isoDate": "2024-10-26T10:45:31.000Z"
      }
    ]
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "일본 1위 배달 앱, 바닥부터 다시 짠다 - Recode 프로젝트",
        "link": "https://techblog.lycorp.co.jp/ko/20241029a",
        "pubDate": "Tue, 29 Oct 2024 06:00:00 GMT",
        "content": "\n서비스 소개\n\n \n'데마에칸(出前館)'은 2000년부터 서비스를 시작한 일본의 음식 배달 No.1 서비스로 2020년 당시, 아직 LINE이었던 LY Corporation에서 인...",
        "contentSnippet": "서비스 소개\n\n \n'데마에칸(出前館)'은 2000년부터 서비스를 시작한 일본의 음식 배달 No.1 서비스로 2020년 당시, 아직 LINE이었던 LY Corporation에서 인...",
        "guid": "https://techblog.lycorp.co.jp/ko/20241029a",
        "isoDate": "2024-10-29T06:00:00.000Z"
      },
      {
        "title": "Playwright와 Jira로 만드는 스마트 장애/변경 알림 및 관리 시스템",
        "link": "https://techblog.lycorp.co.jp/ko/smart-monitoring-system-with-playwright-and-jira",
        "pubDate": "Mon, 28 Oct 2024 04:00:00 GMT",
        "content": "들어가며\n안녕하세요. LINE NEXT DevOps 팀에서 쿠버네티스 운영 및 유지 보수, CI/CD 구축, 모니터링, 로그 수집 등 인프라 전반에 걸쳐 업무를 수행하고 있는 이동...",
        "contentSnippet": "들어가며\n안녕하세요. LINE NEXT DevOps 팀에서 쿠버네티스 운영 및 유지 보수, CI/CD 구축, 모니터링, 로그 수집 등 인프라 전반에 걸쳐 업무를 수행하고 있는 이동...",
        "guid": "https://techblog.lycorp.co.jp/ko/smart-monitoring-system-with-playwright-and-jira",
        "isoDate": "2024-10-28T04:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": [
      {
        "creator": "호돌맨",
        "title": "너희들은 이런 거 배우지마라",
        "link": "https://hodolman.tistory.com/66",
        "pubDate": "Wed, 30 Oct 2024 21:50:06 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/66#entry66comment",
        "content": "<p data-ke-size=\"size16\">첫 취업에 성공한 분들에게 드리는 사회생활 팁 (20대를 대상으로)</p>\n<p data-ke-size=\"size16\">1. 신용카드를 만들지 않는다.</p>\n<p data-ke-size=\"size16\">2. 택시를 타지 않는다.</p>\n<p data-ke-size=\"size16\">3. 자동차를 구입하지 않는다.</p>\n<p data-ke-size=\"size16\">4. 하루 30분씩 걷기 운동을 합시다.</p>\n<p data-ke-size=\"size16\">5. 1~4번을 꼭 지킨다.</p>\n<p data-ke-size=\"size16\">감사합니다.</p>",
        "contentSnippet": "첫 취업에 성공한 분들에게 드리는 사회생활 팁 (20대를 대상으로)\n1. 신용카드를 만들지 않는다.\n2. 택시를 타지 않는다.\n3. 자동차를 구입하지 않는다.\n4. 하루 30분씩 걷기 운동을 합시다.\n5. 1~4번을 꼭 지킨다.\n감사합니다.",
        "guid": "https://hodolman.tistory.com/66",
        "categories": [
          "개발/우당탕탕 대모험"
        ],
        "isoDate": "2024-10-30T12:50:06.000Z"
      }
    ]
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "이야기꾼 되기",
        "link": "https://www.thestartupbible.com/2024/10/be-a-good-storyteller.html",
        "pubDate": "Wed, 30 Oct 2024 21:37:00 +0000",
        "content:encodedSnippet": "내가 벤처파트너로 활동하고 있는 악셀러레이터 프라이머는 일 년에 두 번의 데모데이를 개최한다. 10~15개 회사가 5분 발표를 하는데, 데모데이가 끝나면 항상 참석자들에게 듣는 말은 회사들이 모두 발표를 너무나 잘 한다는 것이다. 어쩜 5분 동안 본인들이 하는 사업에 대해서 저렇게 명확하게 설명할 수 있는지 모두 다 감탄한다. 원래 발표를 잘하는 창업가들도 많지만, 실은 프라이머 회사들의 발표는 대부분 엄청난 연습과 리허설을 통해서 다듬어지고 만들어지는 훌륭한 무대 공연이다.\n대표 전원이 나를 포함한 한국에 있는 프라이머의 액팅 파트너분들과 약 4주에 걸쳐 세 번의 데모데이 리허설을 한다. 나도 이제 거의 8년째 프라이머 데모데이 리허설을 같이 준비하고 있는데, 매번 느끼는 거지만 첫 번째 리허설 이후엔 이 발표 실력으로 과연 데모데이를 할 수나 있을지 매우 의심스럽다. 자료도 못 만들었고, 어떤 사업을 하는지도 모르겠고, 발표를 들은 후에 오히려 이 회사에 투자하고 싶은 마음이 없어질 정도로 임팩트도 없고 재미가 없다. 하지만, 또 희한한 건, 매우 직설적이고 건설적인 피드백을 열심히 제공하면 두 번째 리허설에서 훨씬 발전된 모습을 볼 수 있다. 세 번째 리허설에서는 완전히 새로운 사람이, 새로운 사업으로, 새로운 발표를 하는 느낌이 들 정도로 모두가 무대 체질로 바뀌고, 실제 데모데이에서는 대부분 완벽한 피칭을 한다. 사람의 능력엔 한계가 없고, 연습을 열심히 하면 무조건 완벽한 발표를 할 수 있다. 그 누구든.\n첫 번째 리허설 이후에 내가 모든 창업가들에게 드리는 공통 피드백이 세 가지가 있다.\n첫째는 사업에 대해 설명을 하지 말고, 기-승-전-결이 있는 매우 재미있는 스토리텔링을 하라고 한다. 두 번째는 딱딱하게 이야기하지 말고 항상 재미있는 이야기를 하라고 한다. 세 번째는 본인들이 청중이라고 생각하고, 본인들이 듣고 싶은 발표를 하라고 한다.\n결국 위 세 가지 피드백 모두 사업가/창업가가 아니라 이야기꾼이 돼서 재미있는 이야기를 청중에게 하라는 것이다. 솔직히 사업 설명은 어떻게 보면 굉장히 딱딱하고 심각하고 재미가 없는 내용이 더 많다. 우리도 하루에 평균 3~5개의 미팅을 하는데, 정말 재미없는 창업가 5명과 만나는 날은 집에 갈 때 매우 피곤하다. 어떤 분은 미팅 시작 5분 만에 그냥 미팅룸을 나가고 싶을 정도로 에너지도 없고, 딱딱하고, 듣는 사람과 양방향 커뮤니케이션을 못 한다. 보통 이런 미팅을 하면 내 이야기에 상대방이 어떻게 반응하는지 리액션도 확인하고, 상대방의 눈빛도 보면서 분위기를 조절하면서 이야기해야 하는데, 이런 건 전혀 없고 그냥 본인이 하고 싶은 이야기만 한다. 이런 분과 이야기하면 미팅 시간 내내 집중이 잘 안되고, 끝난 후에는 어떤 이야기를 했는지 잘 기억도 안 난다.\n반면에 어떤 창업가들은 타고난 이야기꾼들이다. 이런 분들은 제품이 없어도, 매출이 없어도, 아직 뭐 하나 제대로 못 만들었어도, 1시간이라는 미팅 시간이 5분 같이 느껴질 정도로 스토리텔링을 완벽하게 한다. 창업가 본인은 어떤 사람인지, 왜 이 사업을 하는지, 마치 잘 짜인 단편소설 같은 이야기를 해준다. 목소리의 톤앤매너도 너무 좋고, 이런 이야기꾼들이 가장 잘하는 건, 본인의 말에 상대방이 어떻게 반응하는지, 그리고 어떤 리액션을 보이는지 잘 관찰한 후에 계속 대화를 이어 나간다. 표정, 제스처, 아이 컨택트, 이 모든 걸 자연스럽게 한다. 이런 창업가를 하루에 한 분만 만나도 그날 집에 갈 땐 기분이 좋다.\n물론, 모든 이야기꾼이 좋은 창업가나 사업가는 아니다. 하지만, 내 경험에 의하면 이 반대는 사실이다. 내가 아는 모든 좋은 창업가와 사업가는 괜찮은 이야기꾼이다. 이 세상에 재미있는 이야기를 싫어하는 사람은 없고, 재미있는 이야기로 투자자의 관심을 끌 수 있다면, 더 깊은 대화를 나눌 확률이 높아진다.\n난 원래 재미없는 사람인데 어떡하냐고 생각을 하고 있다면, 이 또한 연습하면 된다. 연습하고, 연습하고, 또 연습하면 좋은 이야기꾼이 될 수 있다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/10/be-a-good-storyteller.html#respond",
        "content": "내가 벤처파트너로 활동하고 있는 악셀러레이터 프라이머는 일 년에 두 번의 데모데이를 개최한다. 10~15개 회사가 5분 발표를 하는데, 데모데이가 끝나면 항상 참석자들에게 듣는 말은 회사들이 모두 발표를 너무나 잘 한다는 것이다. 어쩜 5분 동안 본인들이 하는 사업에 대해서 저렇게 명확하게 설명할 수 있는지 모두 다 감탄한다. 원래 발표를 잘하는 창업가들도 많지만, 실은 프라이머 회사들의 발표는 대부분(...)",
        "contentSnippet": "내가 벤처파트너로 활동하고 있는 악셀러레이터 프라이머는 일 년에 두 번의 데모데이를 개최한다. 10~15개 회사가 5분 발표를 하는데, 데모데이가 끝나면 항상 참석자들에게 듣는 말은 회사들이 모두 발표를 너무나 잘 한다는 것이다. 어쩜 5분 동안 본인들이 하는 사업에 대해서 저렇게 명확하게 설명할 수 있는지 모두 다 감탄한다. 원래 발표를 잘하는 창업가들도 많지만, 실은 프라이머 회사들의 발표는 대부분(...)",
        "guid": "https://www.thestartupbible.com/?p=9255",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "general",
          "primer",
          "Strong",
          "vc"
        ],
        "isoDate": "2024-10-30T21:37:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "다시 성장모드로",
        "link": "https://www.thestartupbible.com/2024/10/getting-back-to-the-growth-mode.html",
        "pubDate": "Sun, 27 Oct 2024 21:33:00 +0000",
        "content:encodedSnippet": "2022년 하반기부터 지금까지 약 2년이라는 시간이 흘렀다. 대부분 스타트업 대표들에게 이 2년은 인생 최악의 지옥 같은 기간이었을 것이다. 우리가 투자를 시작한 게 2012년인데, 이후 세계 경제는 나쁘지 않았고, 아주 큰 실수를 하지 않았으면 대부분의 투자자는 실적이 그렇게 나쁘지 않았을 것이다. 시장에 돈이 충분히 있기 때문에 스타트업도 마찬가지로 어느 정도의 실적이 나오고 성장 가능성이 증명되면 지속적으로 후속 투자를 받는 게 가능했던, 영어로 말하면 the good old days였다. 이 기간에 대부분의 스타트업은 수익성보단 성장에 초점을 맞췄고, 엄청난 손실을 감행하면서도 성장에 집중했다. 왜냐하면, 그래도 계속 투자를 받아서 성장할 수 있었고, 그렇게 이상하게 사업을 하지 않았다면, 어느 순간 이 사업은 시장에서 일등이 될 수 있었고, 그 이후엔 돈을 벌 수 있었기 때문이다.\n2022년 하반기부터 이 분위기가 완전히 180도 바뀌면서 그동안 성장에 초점을 맞췄던 모든 창업가는 돈을 버는 데 집중하기 시작했다. 그냥 돈을 버는 게 아니라, 마이너스를 줄이면서 건강하게 돈을 버는 비즈니스 모델에 집중하면서 잠시 성장이라는 페달에서 발을 놓았다. 돈이 없는 회사는 사람을 해고하면서 그냥 런웨이를 늘리면서 생존하는 쪽으로 회사의 방향을 틀었다. 그리고 이들을 지원하는 VC들도 태도를 180도 바꾸면서 비즈니스의 성장보단 건강, 그리고 성장보단 생존을 강조하기 시작했다.\n우리는 경기가 좋을 때나 안 좋을 때나 어느 정도 중립적인 자세를 유지했다. 호경기일 때도 성장에만 너무 집중하지 말고 제대로 된 비즈니스 모델을 만들고, 결국 사업은 돈을 벌어야 한다는 걸 강조했고, 지난 2년 불경기 동안에는 성장은 안 해도 된다고 하고 일단 돈 까먹지 말고 핵심 KPI를 건강하게 유지하는 걸 강조했다. 이렇게 해도 우리의 많은 투자사들이 그동안 사라졌고, 사라지지 않은 회사들도 엄청 힘든 시절을 보냈고, 지금도 힘들어하고 있다.\n하지만, 이 힘든 과정을 잘 견디면서 버텼던 몇몇 회사들엔 다시 한번 재도약과 성장의 기회가 오고 있다. 그동안 어떤 창업가들은 돈을 제대로 벌 수 있는 비즈니스 모델을 찾고, 이를 더 단단하게 만드는 데 집중해서 오히려 우리가 투자했을 때보다 더 견고하고 건강한 사업을 만드는 데 성공했다. 어떤 창업가들은 그냥 열심히 버티다 보니, 그동안 경쟁사들이 다 망해서 어쨌든 그 분야에서 상위권에 드는 회사가 됐다.\n내년에는 시장의 상황이 어떻게 될진 잘 모르지만, 그동안 2년 넘게 숨만 고르고 내실을 다지던 창업가들은 이제 다시 성장에 대해 고민하고 있다. 우리도 이런 창업가분들을 만나면 조심스럽게 던지는 주제가 그동안 돈을 버는 사업의 모습을 잘 만들어놨으니, 이젠 다시 한번 가속 페달을 밟아서 성장 모드로 전환해보자는 내용이다. 사업의 본질은 돈을 버는 것인데 이제 돈을 버는 비즈니스 모델은 어느 정도 준비가 됐고, 스타트업은 결국 짧은 기간 안에 성장해야 하기 때문이다.\n최근에 내가 이런 이야기를 우리 투자사 대표님 몇 분과 했는데, 이에 대한 반응이 명확하게 갈리는 게 재미있었다.\n한 부류는 안 그래도 이미 그런 생각을 하고 있었고, 이제 다시 가속 페달을 밟을 준비가 되어 있다고 말하면서 다시 펀딩도 알아보고, 사람도 더 채용하고, 외부 활동도 조금씩 하면서 그동안 웬만하면 새로운 일을 벌이지 않았는데, 이제 일을 좀 벌여야겠다고 말했다. 그러면서 그동안 거의 매달 조금이라도 흑자를 만들었는데, 이젠 성장에 집중할 것이라서 (제어 가능한)마이너스가 조금은 발생할 수 있다는 경고?를 했다.\n다른 부류는 그동안 성장에 대한 생각을 아예 안 했고, 가속 페달에서 발을 뗀 지 너무 오래돼서 다시 성장 모드로 스위치 하는 게 고통스러울 것 같다는 우려를 표시했다. 이들에겐 다시 투자를 받고, 사람을 충원하고, 마케팅 비용을 쓰고, 새로운 사업을 벌이는 게 이제 완전히 다른 세상 이야기가 됐고, 성장에 대해서 생각하는 것 자체가 공포스러워진 것 같다.\n나는 작년 말에 2024년 경기가 조금 좋아질 거로 예측했지만, 이 예상은 보기 좋게 빗나갔다. 이제 금리도 조금씩 내려가고, 상장 시장도 조금씩 좋아지는 것 같아서 내년에는 그나마 올해 보단 나아지지 않을까 조심스럽게 생각해 본다. 그리고 이게 맞다면, 그동안 아주 조용히 내실만 다지던 많은 창업가 분들이 이제 다시 재도약과 성장에 대해 고민하고 있을 텐데, 다시 성장모드로 전환하려면 정신적으로나 육체적으로나 여러 가지 준비를 해야 할 것이다. 이런 준비 과정에서 그동안 너무 오랫동안 안 쓰던 성장 근육을 잘 스트레칭하고 다듬기를 바란다. 아무래도 많이 필요하지 않을까 싶다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/10/getting-back-to-the-growth-mode.html#comments",
        "content": "2022년 하반기부터 지금까지 약 2년이라는 시간이 흘렀다. 대부분 스타트업 대표들에게 이 2년은 인생 최악의 지옥 같은 기간이었을 것이다. 우리가 투자를 시작한 게 2012년인데, 이후 세계 경제는 나쁘지 않았고, 아주 큰 실수를 하지 않았으면 대부분의 투자자는 실적이 그렇게 나쁘지 않았을 것이다. 시장에 돈이 충분히 있기 때문에 스타트업도 마찬가지로 어느 정도의 실적이 나오고 성장 가능성이 증명되면 지속적으로(...)",
        "contentSnippet": "2022년 하반기부터 지금까지 약 2년이라는 시간이 흘렀다. 대부분 스타트업 대표들에게 이 2년은 인생 최악의 지옥 같은 기간이었을 것이다. 우리가 투자를 시작한 게 2012년인데, 이후 세계 경제는 나쁘지 않았고, 아주 큰 실수를 하지 않았으면 대부분의 투자자는 실적이 그렇게 나쁘지 않았을 것이다. 시장에 돈이 충분히 있기 때문에 스타트업도 마찬가지로 어느 정도의 실적이 나오고 성장 가능성이 증명되면 지속적으로(...)",
        "guid": "https://www.thestartupbible.com/?p=9252",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "fundraising",
          "strategy",
          "Strong",
          "vc",
          "스타트업 바이블 QA"
        ],
        "isoDate": "2024-10-27T21:33:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "kimchihill",
        "title": "이깟 마라톤이 뭐라고 – JTBC 마라톤을 일주일 앞두고",
        "link": "https://kimchihill.com/2024/10/26/kr-big-deal-about-a-marathon/?utm_source=rss&utm_medium=rss&utm_campaign=kr-big-deal-about-a-marathon",
        "pubDate": "Sat, 26 Oct 2024 01:10:52 +0000",
        "content:encodedSnippet": "지난 5월, 나는 JTBC 마라톤을 준비하며 정석근 헬스 라이프 훈련을 시작했다. 하지만 최근 두 달 동안 종아리의 가자미근과 아킬레스건에 염증이 생기면서 부상을 당해, 제대로 된 훈련을 한 번도 하지 못했다. 몇 번이고 훈련을 시도했지만, 부상은 재발했고, 그 과정에서 자신감이 크게 흔들렸던 기억이 난다.\n그런데 오늘, JTBC 마라톤을 일주일 앞둔 마지막 주말 훈련에서 타겟 미션을 성공적으로 마치며 부상의 끝을 알렸다. 이를 통해 잃었던 자신감을 어느 정도 회복할 수 있었다. 물론 부상 이전에 목표로 했던 3시간 10분이나 3시간 15분의 기록 달성은 어렵겠지만, 그래도 최선을 다해보려 한다.\n\n\n\n\n솔직히, 이깟 마라톤이 뭐라고… 올해만 해도 부상만 다섯 번을 겪었다. 발목, 무릎, 장경인대, 비복근, 가자미근, 그리고 마지막으로 아킬레스건까지, 달리기를 하면서 입을 수 있는 거의 모든 부상을 경험한 셈이다.\n부상의 원인은 내가 더 빨라지고 싶다는 욕심 때문이었다. 그러나 후회하지는 않는다. 왜냐하면 지난 10년간의 샌드버드에서의 커리어와 비슷한 면이 있기 때문이다. 나는 부족한 부분이 많으면서도 욕심이 많다 보니, 더 성장하고 잘하고 싶을 때마다 신체적으로나 마음적으로 상처를 받았다. 하지만 그런 상처들이 있었기에 분명히 성장할 수 있었다.\n마라톤도 다르지 않다. 나는 부상 없이 지금의 나보다 더 빠르게 나아가는 방법을 찾지 못했다. 그리고 부상을 극복할 때마다 조금씩 더 빨라졌다. 이번 JTBC 마라톤이 끝나면, 나는 한 단계 더 성장해 있을 것이다.\n내년에는 동아 마라톤과 도쿄 마라톤을 목표로 할 것이다. 이제 JTBC 마라톤에서는 할 수 있는 건 다 했으니, 최선을 다해 임할 뿐이다. 이렇게 최선을 다해 얻은 자신감이 앞으로 샌드버드에서의 커리어와 성장에도 도움이 되기를 바란다.\n\n\nThe post 이깟 마라톤이 뭐라고 – JTBC 마라톤을 일주일 앞두고 appeared first on Kimchi hill.",
        "dc:creator": "kimchihill",
        "comments": "https://kimchihill.com/2024/10/26/kr-big-deal-about-a-marathon/#respond",
        "content": "<p>지난 5월, 나는 JTBC 마라톤을 준비하며 정석근 헬스 라이프 훈련을 시작했다. 하지만 최근 두 달 동안 종아리의 가자미근과 아킬레스건에 염증이 생기면서 부상을 당해, 제대로 된 훈련을 한 번도 하지 못했다. 몇 번이고 훈련을 시도했지만, 부상은 재발했고, 그 과정에서 자신감이 크게 흔들렸던 기억이 난다. 그런데 오늘, JTBC 마라톤을 일주일 앞둔 마지막 주말 훈련에서 타겟 미션을 성공적으로<a class=\"more-link\" href=\"https://kimchihill.com/2024/10/26/kr-big-deal-about-a-marathon/\">Continue reading <span class=\"screen-reader-text\">\"이깟 마라톤이 뭐라고 &#8211; JTBC 마라톤을 일주일 앞두고\"</span></a></p>\nThe post <a href=\"https://kimchihill.com/2024/10/26/kr-big-deal-about-a-marathon/\">이깟 마라톤이 뭐라고 – JTBC 마라톤을 일주일 앞두고</a> appeared first on <a href=\"https://kimchihill.com\">Kimchi hill</a>.",
        "contentSnippet": "지난 5월, 나는 JTBC 마라톤을 준비하며 정석근 헬스 라이프 훈련을 시작했다. 하지만 최근 두 달 동안 종아리의 가자미근과 아킬레스건에 염증이 생기면서 부상을 당해, 제대로 된 훈련을 한 번도 하지 못했다. 몇 번이고 훈련을 시도했지만, 부상은 재발했고, 그 과정에서 자신감이 크게 흔들렸던 기억이 난다. 그런데 오늘, JTBC 마라톤을 일주일 앞둔 마지막 주말 훈련에서 타겟 미션을 성공적으로Continue reading \"이깟 마라톤이 뭐라고 – JTBC 마라톤을 일주일 앞두고\"\n이깟 마라톤이 뭐라고 – JTBC 마라톤을 일주일 앞두고 appeared first on Kimchi hill.",
        "guid": "https://kimchihill.com/2024/10/26/kr-big-deal-about-a-marathon/",
        "categories": [
          "Korean essay"
        ],
        "isoDate": "2024-10-26T01:10:52.000Z"
      }
    ]
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "토스 개발자 컨퍼런스 SLASH, 4년의 여정",
        "link": "https://blog.toss.im/article/slash-four-year-journey",
        "pubDate": "Wed, 30 Oct 2024 09:55:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}이 아티클은 Employer Branding Manager 차지현 님, Content Producer 김태성 님, Brand Marketer 정다솔 님, Brand Designer 조유현 & 권영찬 님과 인터뷰한 내용을 바탕으로 재구성되었습니다.\n.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-p4abj2{display:contents;line-height:1.55;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}SLASH, 어떻게 시작되었을까\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\nSLASH가 시작된 2021년 당시, 토스는 한창 조직 규모를 키우던 때였습니다. 개발자만 무려 100분 모셔야 한다는 목표로 한 분 한 분 컨택하던 중, 채용팀은 이런 생각을 하게 됐는데요. ‘업계에 있는 유능한 개발자는 모두 토스에 지원하게 해야 하는 거 아냐?’\n그러려면 이미 토스에 지원해본 사람이 아닌, ‘토스에 한 번도 지원한 적 없는 사람’도 토스에 관심을 가지게 만들어야겠다는 생각으로 이어졌어요. 토스 외부에 계신 분들을 대상으로 설문조사를 진행했고, 그분들이 이직할 때 우선순위로 고려하는 것이 무엇인지 알아내고자 했습니다. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}공통적으로 나왔던 답변은 바로 ‘우수한 동료’. 이걸 힌트 삼아 토스가 가진 우수한 기술력과 팀원들의 뛰어난 역량을 더 적극적으로 외부에 알리기로 했어요.\n토스 외에도 토스뱅크, 토스증권, 토스페이먼츠 등 여러 계열사가 생겨날 때라, 다양하고 깊이 있는 기술 사례를 세션으로 풀어낼 수 있었습니다. 첫 SLASH 21은 총 19개의 세션으로 진행됐고, 토스 개발자들이 기술을 대하는 태도를 담은 오프닝 키노트부터 서버 인프라 모니터링 경험, SRE 사례 소개, 데이터의 흐름과 활용법, 프론트엔드 클린 코드까지 다양한 테크 영역의 이야기를 다뤘어요.\n당시 팬데믹으로 오프라인 행사 진행이 어려워 컨퍼런스는 온라인으로 진행되었는데도, 참가자분들이 보내주신 관심과 평가는 감동적이었습니다.\n.css-2sk6rv{font-size:19px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);white-space:pre-wrap;margin:24px 0;padding-left:20px;position:relative;}.css-2sk6rv::before{content:'';display:block;position:absolute;top:4px;left:0;width:2px;height:calc(100% - 4px * 2);padding:4px 0;background-color:var(--adaptiveGrey800);}\n“3일간 행사 참여자 3만명 이상,\n참여자 평점 4.4점 (5점 만점),\n토스의 다음 개발자 컨퍼런스에 참여하겠다는 응답자 92.7%”.css-7mseny>*{margin-left:0;margin-right:0;}.css-7mseny>:last-child{margin-bottom:0;}blockquote>.css-7mseny:first-child>:first-child{margin-top:0;}\n그렇게 시작된 SLASH는 어느덧 어엿한 4년차 개발자 컨퍼런스로 자리 잡았습니다. 2021, 2022, 2023년에는 온라인에서 2024년에는 오프라인에서 진행된 SLASH가 어떤 여정을 거쳐 발전해 왔는지 보여드리려 해요.\n온라인으로 진행되어 온 SLASH, 3년의 변천사\n매년 진행하는 컨퍼런스이지만, 사람들에게 늘 새롭게 기억될 수 있길 바라는 마음으로 기획해 왔습니다. 그 해에 꼭 담아내고 싶은 메시지를 뽑아내고, 이전에 본 적 없던 신선한 키 비주얼과 컨셉을 활용했어요. 전통적인 컨퍼런스 이미지에서 벗어나 ‘토스만의 이미지’를 보여주고자 했던 노력의 일환을 연도 별로 담아봤어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n🚩 .css-wi4a2c{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;font-weight:bold;}SLASH 21 - No User, No Technology\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\nSLASH 21에서는 이런 질문들에 대한 답을 담았습니다.\n‘토스에서는 어떤 기술을 쓰고 있을까?’\n‘그 기술은 어떻게 구현되고 있을까?’\n‘토스 기술의 기반을 이루는 것은 어떤 것들일까?’\n토스에서 사용하는 기술 자체가 특별한 것은 아니지만, 토스팀 엔지니어들이 문제를 해결해 나가는 특별한 방식을 세션에 녹여냈는데요. 그 방식이 특별한 이유는, 사용자들이 가장 원하는 서비스, 해결하고 싶은 문제 자체를 실현하는 데에 토스 엔지니어링 팀의 기술과 에너지를 집중해왔기 때문입니다.\n오직 사용자 중심으로 진화해온 토스의 기술 혁신. 사용자 입장에서 이해하기 쉽고 직관적인 서비스를 만드는 것, 그와 동시에 기존의 금융 서비스를 이용하며 느끼는 불편과 의문을 해소시키는 일에는 항상 기술적인 도전이 뒤따랐습니다. 더 나아가 완전히 새롭고 혁신적인 경험을 줄 수 있는 방법을 모색하고 기술적으로 구현하는 과정도 있었기에, 이 이야기를 더 많은 분들과 나누고 싶었습니다.\n.css-13d8cj1{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;margin:24px 0 8px;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:var(--adaptiveGrey700);}\n.css-1dzrkjz{width:16px;margin-right:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\n.svg-icon-wrapper{position:relative;display:inline-block;width:24px;height:24px;}.svg-icon-wrapper >.svg-icon:empty+.svg-icon-fallback{visibility:visible;z-index:inherit;}.svg-icon{color:var(--adaptiveGrey900);display:inline-block;width:24px;height:24px;display:block;width:100%;height:100%;}.svg-icon svg,.svg-icon img{display:block;width:100%;height:100%;}.svg-icon--hide{display:none;}.svg-icon-fallback{position:absolute;left:0;right:0;top:0;z-index:z-index(hidden);visibility:hidden;display:block;width:100%;height:100%;}.svg-icon-fallback--show{visibility:visible;z-index:inherit;}\n🎤 SLASH 21 세션 top 3 살펴보기 \n\nSLASH 21을 준비하는 과정을 돌이켜 보면, 컨퍼런스 이름을 정하는 과정에서부터 토스만의 색깔을 녹여내기 위해 많은 논의를 거쳤습니다. 컨퍼런스 이름인 SLASH는 개발할 때 명령어 앞에 사용되는 ‘/’ 기호를 말합니다. 토스 사용자들의 삶에 유의미한 변화를 만들어내기 위해, 관습을 깨고 기술 혁신의 획을 그었다는 의미로 ‘긋다'라는 중의적 의미도 담아냈어요. 더 나아가 컨퍼런스 전체를 관통하는 키 그래픽을 만드는 데도 공을 들였는데요. ‘/’ 기호를 3D 그래픽을 활용해 입체적으로 구현하고, 다각도로 움직이는 모습을 구현해 냈습니다.\n.css-oni540{position:relative;width:100%;height:0;padding-bottom:56.25%;}\n.css-122y91a{position:absolute;top:0;left:0;width:100%;height:100%;}\n\n한발 더 나아가 개발 생태계 선순환에 기여하기 위한 깜짝 이벤트도 준비했었는데요. 참가자들이 컨퍼런스에 사전 신청을 하면 개발 커뮤니티의 성장과 생태계 발전에 기여할 수 있는 이벤트를 기획했어요. 총 1억 원이 넘는 금액이 모였고, 후원금은 토스에서 전액 지원하는 방식으로 개발자 컨퍼런스를 후원하였습니다.\n\n🚩 SLASH 22 - No User, No Technology\n\n2021년에 ‘토스가 첫 개발자 컨퍼런스를 열었다’는 메시지는 잘 전달되었는데, 우리가 꼭 알리고 싶었던 슬로건 ‘No User, No Technology’는 잘 전달이 안 됐다는 것을 설문조사를 통해 확인할 수 있었어요.\n늘 사용자 관점에서 기술을 고민하고 고객 중심으로 서비스를 만들어내는 토스인 만큼, 이 슬로건을 더 잘 알릴 필요가 있다는 생각으로 2022년에도 동일한 슬로건을 활용했습니다. 2022년에는 슬로건을 전면에 내세워 사람들에게 잘 인지시키도록 해보자는 목표로 컨퍼런스가 기획되었어요.\n2021년보다 2022년에 더 많이 신경썼던 것은 세션의 퀄리티인데요. 참가자분들이 따로 시간을 내어 참석하시는 만큼 세션에서 얻어가는 것이 많았으면 하는 바람이었습니다. 각 엔지니어링 챕터 리드, 테크니컬 라이터, 커뮤니케이션 팀까지 3단계 검수 프로세스를 거쳤고, 연사분들이 촬영에 들어가기 전까지 부족한 부분을 채울 수 있도록 리허설도 진행했습니다. 스피치 코치도 따로 모셔서 어디를 어떻게 강조해야 하는지, 어디에서 쉬어가야 하는지 등 세세한 피드백을 제공하며 세션 퀄리티를 높였고요.\n\n.svg-icon-wrapper{position:relative;display:inline-block;width:24px;height:24px;}.svg-icon-wrapper >.svg-icon:empty+.svg-icon-fallback{visibility:visible;z-index:inherit;}.svg-icon{color:var(--adaptiveGrey900);display:inline-block;width:24px;height:24px;display:block;width:100%;height:100%;}.svg-icon svg,.svg-icon img{display:block;width:100%;height:100%;}.svg-icon--hide{display:none;}.svg-icon-fallback{position:absolute;left:0;right:0;top:0;z-index:z-index(hidden);visibility:hidden;display:block;width:100%;height:100%;}.svg-icon-fallback--show{visibility:visible;z-index:inherit;}\n🎤 SLASH 22 세션 top 3 살펴보기 \n\n키 비주얼 사이드에서는 ‘개발자 오브제'를 3D 에셋으로 만드는 작업이 진행됐어요. 개발자 컨퍼런스인 만큼 개발자분들에게 친숙한 오브제를 활용해 컨퍼런스도 친숙하게 느껴지게 만드는 것이 목표였습니다. 커피, 헤드셋, 키보드 등 개발자분들에게 친숙한 것들을 선정해 둥둥 떠다니는 3D 에셋으로 만들었죠. 세션 리스트에 하나하나 넣어서 토스다운 이미지를 전달하고자 했습니다.\n\n\n\n🚩 SLASH 23 - The Hidden Side of Technology\n\n2022년에는 세션 퀄리티를 높이는 방법을 시도했으니 2023년에는 키 비주얼, 컨셉 또한 더 세련되게 풀어내고자 했어요. 이전과 다르게 완전히 새로운 슬로건을 세우고, 토스에서도 이전에 해본 적 없던 방식의 크리에이티브한 키 비주얼을 활용했습니다. 여러모로 새로운 도전이 돋보인 SLASH였던 거죠.\n슬로건은 ‘The Hidden Side of Technology’로, 쉽고 간편한 토스 서비스 이면에 정말 꼼꼼하고 치열한 논의 끝에 채택된 기술이 흐르고 있다는 것을 보여주기 위해 선정됐습니다. ‘토스, 너무 편하고 쉬운데 보안은 약한 거 아냐?’라는 이미지를 깨기 위함이었죠. \n전체적인 세션 내용에서 편하고 쉽고 빠른 서비스를 제공하면서도 보안을 지키기 위해 토스 엔지니어링 조직의 치열한 노력이 수반된다는 것을 보여주면서, 토스 전반의 브랜딩에도 기여하기 위한 목표를 세웠어요.\n\n.svg-icon-wrapper{position:relative;display:inline-block;width:24px;height:24px;}.svg-icon-wrapper >.svg-icon:empty+.svg-icon-fallback{visibility:visible;z-index:inherit;}.svg-icon{color:var(--adaptiveGrey900);display:inline-block;width:24px;height:24px;display:block;width:100%;height:100%;}.svg-icon svg,.svg-icon img{display:block;width:100%;height:100%;}.svg-icon--hide{display:none;}.svg-icon-fallback{position:absolute;left:0;right:0;top:0;z-index:z-index(hidden);visibility:hidden;display:block;width:100%;height:100%;}.svg-icon-fallback--show{visibility:visible;z-index:inherit;}\n🎤 SLASH 23 세션 top 3 살펴보기 \n\n키 비주얼은 그동안 토스에서 많이 활용해왔던 3D 에셋을 벗어나, 2D 애니메이션을 기획해보는 방향을 선택했습니다. ‘릭 앤 모티’ 2D 애니메이션 컨셉으로 5명의 개발자 캐릭터를 만들어 오프닝 필름을 만들었어요. ‘토스는 개발자 컨퍼런스도 다르다'는 이미지를 주기 위함이었습니다.\n\n\n\n실제로 설문을 통해서도 “개발자로서 자부심 느껴지는 애니메이션”, “토스가 브랜딩에 대해 많이 고민하는 모습이 보인다. 작년보다 훨씬 친근하게 각인됐다\", “감탄하면서 봤다. 진짜 작정했구나 싶어 소름 돋았다\" 등 오프닝 필름에 대한 긍정적인 의견을 많이 받아볼 수 있었고요.\n드디어 오프라인에서 진행된 SLASH 24\n\n왜 화면 밖으로 향했냐면\n2021년 SLASH를 처음 기획할 때부터 ‘컨퍼런스는 오프라인'이라는 생각이 있었어요. 하지만 당시에는 팬데믹 시기였기 때문에, 선택의 여지 없이 온라인으로만 진행해야 했죠.\n그런데 펜데믹 이전의 ‘컨퍼런스'를 떠올리면 직접 대면해 명함 주고받으며 네트워킹도 하고, 같은 시간 한 장소에 다같이 모여 행사의 열기를 느끼는 것이 일반적이었던 거예요. 제약이 없어진 만큼 이번 컨퍼런스는 오프라인에서 진행하지 않을 이유가 없었습니다.\n무엇보다 SLASH 컨퍼런스의 목표는 ‘채용’이었기 때문인데요. 컨퍼런스 참가자분들이 채용으로 이어지려면 온라인보다는 오프라인이 효과적일 거라 기대했습니다. 직접 만나 이야기 나눠보시면, 토스팀에 없던 관심을 충분히 이끌어낼 수 있다는 자신감이 있었어요.\n\nNo Limit: 풀지 못할 문제는 없다\n이번 SLASH 24 슬로건은 ‘한계 없는 도전, 그리고 실패해도 일어나는 끈기'라는 심상을 뽑아내는 데에 집중한 문장인데요. 그 기저에는 토스의 개발 문화가 큰 몫을 했습니다. 토스의 모든 엔지니어들이 한계없이 도전하고 있다는 것을 많은 곳에서 체감할 수 있었기 때문이죠.\n메시지 개발 단계에서는 크게 3가지 포인트에서 중점적으로 고민했습니다.\n1) 기술 관련 이야기 외에도 토스만이 할 수 있는 이야기가 무엇인가?\n2) 참가자에게도 울림을 줄 수 있는 메시지는 무엇인가?\n3) 오프라인에서 더 임팩트 있게 전달될 수 있는 메시지는 무엇인가?\n이 3가지를 모두 아우를 수 있는 교집합을 찾기 위해, 그간 SLASH에 참여해주셨던 분들의 피드백을 샅샅이 뒤졌어요. ‘기술에 대해 이야기하는 컨퍼런스이지만 틀을 깨는 도전과 시도를 많이 한다', ‘시행착오를 여러 번 겪더라도 될 때까지 하는 팀이라는 것을 느꼈다'는 말에서 단서를 찾을 수 있었습니다.\n\n끝까지 멈추지 않고 한계없이 도전하는 토스의 개발 문화를 표현하기 위해 “No Limit: 풀지 못할 문제는 없다\"는 슬로건을 뽑아낼 수 있었고, 더 나아가 ‘클라이밍'이라는 키 컨셉까지 선정할 수 있었어요. 한계를 규정하지 않고 늘 다음 ‘문제'를 찾아다니고, 처음부터 성공하지 못하더라도 수없이 많은 도전 끝에 결국은 정상을 찍는 클라이밍의 모습이 토스의 개발 문화와도 많이 닮아있었거든요. 재밌게도 클라이밍에서도 이 과정을 개발처럼 ‘문제'라고 부릅니다. ‘개발'이라는 단어를 직접적으로 사용하지 않으면서도 클라이밍과 개발 사이의 교집합을 보다 명확히 짚어주고자 했어요.\n브랜딩과 디테일에 힘쓴 결과\n처음에 키 컨셉 ‘클라이밍'을 잡고 실내 클라이밍에 집중해 키 비주얼을 구현하고 있었는데, 진행하다 보니 시각적 한계가 명확하게 보였습니다. 실내 클라이밍장은 일반적으로 배경 벽과 홀더로 구성되어 있으며, 다양한 크기의 홀더가 일정한 간격으로 배치되어 있는데요. 이러한 요소들을 활용해 SLASH와 연관된 시각적 장치를 만드는 것은 가능하지만, ‘No Limit’이라는 타이틀의 의미를 퇴색시키는 것 같았어요.\n고민을 이어가던 중, 차라리 ‘인간이 자연에 도전하는 야외 클라이밍 컨셉이 더 좋지 않을까?’ 하는 생각이 들었습니다. 높은 암벽을 맨손으로 오르는 야외 클라이밍 영상들을 보니, 불가능할 것 같은 한계에 도전하는 토스 개발자들의 정신과 잘 어우러진다는 확신이 생겼어요.\n그렇게 실내 클라이밍장의 배경 벽보다는 야외 클라이밍이 펼쳐지는 자연 컨셉으로, 일반적인 바위산보다는 슬래시(/) 형태의 비현실적인 형태의 산을 오르는 클라이머를 통해 불가능할 것 같은 한계에 도전하는 토스 개발자들의 정신을 담고자 했습니다.\n\n\n\n오프닝 필름은 SLASH를 처음 접하게 되는 첫인상인 만큼, 사람들에게 강렬하게 남아야 한다고 생각했어요. 후킹되는 비주얼을 만드는 동시에 클라이밍 컨셉과 No Limit 타이틀 심상까지 잘 전달할 수 있어야 하기 때문에 어려운 과제였고요. 담고 싶은 이야기는 너무 많았지만 임팩트와 집중도가 떨어질 것 같아서, 클라이밍 장면에서 슬래시(/)로 이어지는 키 비주얼을 통해 많은 내러티브를 생략하고, 최종 장면에서는 ‘No Limit’ 타이틀을 임팩트있게 담아내기로 했어요.\n짧은 영상으로 큰 임팩트를 주기 위해 초 단위로 디테일하게 고민해 나온 결과물인데, 유튜브 댓글에 ‘행사 영상 하나에도 토스 클래스가 느껴진다', ‘역시 토스는 토스다. 이 영화 언제 개봉해요?’ ‘와, 나 개발자 아닌데 왜 이렇게 마음이 웅장해지는지' 반응들을 보니 의도한 심상이 잘 전달될 것 같았어요.\n오프라인 행사 현장이었던 코엑스의 넓은 공간에도 키 비주얼을 일관성 있게 담아냈어요. 오프닝 필름에서의 경험을 확장하여 심상을 전달하는 한편, 야외 클라이밍이라는 컨셉에서 오는 개방감 있는 느낌으로 채웠습니다.\n코엑스 하면 떠오르는 커다란 ㄷ자형 미디어에는 키 비주얼 바위가 임팩트 있는 사이즈로 굉장히 크게 들어가게 했어요. 영상에서 봤던 말도 안 되는 사이즈의 바위 규모감을 현장에서도 전달하기 위해서였습니다.\n\n웹사이트에서도 차별화된 디자인 톤을 담아내기 위해 노력했는데요. 카드 UI를 각진 돌 형태로 변경하거나, 스크롤 바를 암벽 등반하는 모습으로 커스터마이징하는 등의 장치를 추가해 클라이밍 컨셉을 더욱 강조했어요. 기존에 토스에서 선보이던 것과 다른 톤앤매너로 개발자들에게도 신선한 느낌을 주고자 했고, 업계 트렌드를 주도하는 도전적인 이미지를 전달하고자 했습니다.\n토스에서 진행하는 첫 오프라인 개발 컨퍼런스인 만큼, 키 비주얼과 컨셉이 어느 한 매체에서 툭 튀는 것이 아니라 오프닝 필름, 웹사이트, 오프라인 현장까지 일관된 경험을 하도록 자연스럽게 설계하는 것이 가장 중요했습니다. 그래서 초반 얼개를 짜고 컨셉을 잡는 데에 많은 공을 들였던 거고요.\n행사 이후 진행한 설문조사에서 “온/오프라인으로 접한 SLASH 24 메시지와 비주얼이 컨퍼런스 이미지에 어떤 영향을 주었는지\" 물었는데요. 약 63%의 응답자가 ‘컨퍼런스에 대한 흥미가 높아졌다'고 답변했습니다. 뒤이어 58%의 응답자가 ‘컨퍼런스에 꼭 참여하고 싶어졌다', 33%의 응답자가 ‘영감을 받았다'는 답변을 기록했고요.\n2023년에 많은 사랑을 받았던 2D 애니메이션 같은 컨셉으로 가는 것도 고민했지만, 같은 걸 반복할 수 없다 생각한 보람이 있는 설문 결과였습니다. 어떤 분야든 늘 새롭게 도전하는 토스를 좋아해주시는 분들이 많다는 것을 알고 있으니, 이왕이면 새로운 컨셉으로 새로운 심상을 전달하고 싶었거든요.\n무엇보다 SLASH 24에 참여하는 분들이 기술적인 지식과 경험을 얻어가는 것 이상으로, ‘토스'를 온전히 경험하시길 바랐습니다. 그동안 토스를 모바일과 PC로만 만나셨을 개발자분들이 토스를 실제로 만나는 기회이기 때문에, 완성도 높고 오래도록 기억에 남을 수 있는 경험을 선물하고 싶었고요.\n그 어느 컨퍼런스보다 다채로운 경험을 선사하기 위해\n오프라인 행사 특성 상 단순히 세션을 듣는 것 그 이상의 경험이 필요하다 생각했기 때문에, 다양한 프로그램을 준비했습니다.\n세션과 연계해 더 깊이있는 경험을 제공하기 위해 세션 관련 질의응답 및 기술 관련 고민을 나눌 수 있는 소규모 네트워킹 프로그램을 구성했고, 커리어 고민과 연계해 맞춤 채용 상담을 받을 수 있는 리크루팅존도 운영했어요.\n\n가장 반응이 좋았던 것은 이벤트 월에서 경험할 수 있었던 러닝&인사이트 존인데요. 연사들의 모든 발표 자료를 바인딩해서 가져갈 수 있도록 한 체험 공간이었어요. 개별 카드에는 연사 정보 및 각 세션의 내용이 요약되어 있고, 발표 자료를 pdf로 다운로드받을 수 있는 QR코드도 넣어두었어요. 생각보다 더 많은 분들이 이 존을 경험하기 위해 긴 줄을 서서 기다리는 것을 보고, 컨퍼런스에 오는 분들의 열의가 엄청나다는 생각이 들었습니다.\n\n개발 지식 관련 세션 이외에도 조직 관리, 리더십, 일 잘하는 방법 등을 다룬 스페셜 세션이 진행됐는데요. 다양한 토픽 중 ‘Dear Future CTO’ 세션이 인상 깊었다는 피드백이 많았습니다. 이 세션은 토스뱅크와 토스증권의 Head of Technology 두 분이 참여하셨는데요. 앞으로 리더십 포지션을 꿈꾸는 분들에게 하고 싶은 말을 담아냈습니다.\n세션 하나하나에도 브랜드 가치를 녹여내기 위해 많은 고민을 했었는데요. 특히 이 세션을 기획할 때 가장 중요하게 여겼던 것은, ‘CTO를 커리어패스로서 소개하지 않기'였어요. 이 세션에서는 ‘CTO가 되려면 경력이 얼마나 필요한지' 이야기하지 않았습니다. 오히려 토스의 CTO는 어떤 리더십을 가지고 있고, 어떤 비전을 꿈꾸는지 나누는 것에 집중했어요. 왜냐하면 토스가 일하는 방식을 간접적으로 녹여내 토스팀 개발 문화를 좀더 과감하게 보여주고 싶었기 때문입니다.\n오프라인 컨퍼런스라는 장점을 십분 활용해, 스피커와 청중이 서로 공감하며 이야기를 나눌 수 있는 아고라 형태로 기획했는데 다른 세션과 달리 일방적으로 정보 전달하는 것을 넘어 서로 궁금한 점을 물어보고 답변받을 수 있도록 구성한 덕분에 많은 분들의 기억에 남을 수 있었던 것 같습니다.\n\n\n\n공간적인 측면에서는 평일에 진행되는 행사임을 감안해, 업무를 보셔야 하는 참가자분들의 편의를 고려한 ‘워크스테이션' 존도 마련했어요. 노트북, 스마트폰 등 기기를 충전하거나 잠시 앉아 일을 해야 하는 상황을 미리 배려한 것이었는데요. 시디즈라는 브랜드와의 협업을 통해, 개발자분들 타겟으로 만들어진 퍼포먼스공학 의자를 비치해두었고, 기대 이상으로 많은 분들이 이용해주셨습니다.\n굿즈에서도 일관된 브랜딩 경험을 할 수 있도록 키 비주얼의 여러 요소들을 적절히 적용했어요. 가방에는 오프닝 필름의 인트로에 코딩 텍스트를 이스터 에그로 담았었는데 가방 디자인에 활용했고요. No Limit 타이틀을 메인 오브젝트로 삼아 키링도 제작했어요. 카라비너, 와이어 키링 등 소재도 함께 사용해 클라이밍 컨셉을 제대로 보여주고자 했습니다.\n\nSLASH가 가져온 변화\n4년에 걸쳐 SLASH가 만들어온 브랜드의 크기가 새삼 어마어마하게 느껴집니다. 2021년에는 토스의 개발 문화를 잘 알리기 위해 온라인으로 컨퍼런스를 열었고, 2022년에는 모든 세션의 퀄리티를 업그레이드했고, 2023년에는 세련된 키 비주얼과 컨셉으로 개발자들의 시선을 사로잡았고, 2024년에는 화면 밖으로 나가 1,500여 명의 참가자들과 함께 현장에서 호흡하며 토스의 개발 문화를 널리 전파했죠.\n“토스 SLASH 올해는 언제 해요?” 라는 질문이 꽤 오는 걸 보면, 이제 매년 기다려지는 개발자 컨퍼런스로 자리매김했다 해도 과언이 아닙니다.\n실제로 SLASH는 토스팀에도 큰 영향을 미쳤습니다. 현재 토스팀에 있는 개발자의 60% 이상이 지원할 때 SLASH의 영향을 받았다고 해요. 좋은 동료분들을 모셔오는 데에 제 역할을 톡톡히 해내고 있는 셈이죠. 매년 컨퍼런스를 준비해온 길드는 해를 거듭할 때마다 러닝과 인사이트를 쌓아나가고 있고요.\n다음 SLASH는 또 어떤 모습으로 찾아올지 궁금해지는 가을입니다. 첫 오프라인 컨퍼런스를 성공적으로 치뤄낸 토스팀은, 언제나처럼 더 나은 컨퍼런스 경험을 제공하기 위해 치열하게 고민할 계획입니다. 앞으로도 ‘토스가 토스했다'는 피드백이 유효하기를 기대해주세요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nWords 차지현 조유현 정다솔 김태성 권영찬 Photo 김세희 Cover & Graphic 이서영",
        "content": "“‘토스에 한 번도 지원한 적 없는 사람’도 토스에 관심을 가지게 만들어야겠다는 생각으로 시작했어요”",
        "contentSnippet": "“‘토스에 한 번도 지원한 적 없는 사람’도 토스에 관심을 가지게 만들어야겠다는 생각으로 시작했어요”",
        "guid": "https://blog.toss.im/article/slash-four-year-journey",
        "isoDate": "2024-10-30T09:55:00.000Z"
      },
      {
        "title": "토스, 11번가와 업무 제휴…11번가에서 토스페이 결제 가능해진다",
        "link": "https://blog.toss.im/article/MOU-",
        "pubDate": "Wed, 30 Oct 2024 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}29일 토스 본사서 협약식···11월 1일부터 11번가 간편결제에 토스페이 오픈\n그랜드 십일절 행사에서 토스페이 고객만 구매 가능한 특가 상품 선보여\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스가 11번가와 온라인 결제 및 고객 혜택 강화를 위한 제휴를 맺었다고 30일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n토스 이승건 대표, 11번가 안정은 대표 등 양사 주요 관계자는 29일 서울 강남구 역삼동 토스 본사에서 간편결제 활성화를 위한 제휴를 약속했다. 양사는 결제 제휴를 시작으로 광고, 인증 등 다양한 분야에서 협력할 예정이다.\n이번 제휴로 11월 1일부터 11번가에서 상품 구매 시 토스페이로 결제가 가능해진다. 11번가 연중 최대 할인 행사인 그랜드 십일절에 맞춰 토스페이 결제를 오픈하고 고객 혜택 확대에 집중한다는 목표다.\n특히 그랜드 십일절 기간 중 토스페이 고객만 구매할 수 있는 특가 상품을 선보이는 등 전용 혜택을 마련한다. 행사 기간 토스 혜택받고 결제하기 서비스를 통해 11번가에서 토스페이로 결제하는 고객에게는 토스포인트를 적립해 준다. 적립된 토스포인트는 이후 토스페이 결제 시 현금처럼 사용할 수 있다.\n토스 이승건 대표는 “우리나라 대표 오픈마켓인 11번가와의 제휴가 토스페이 저변을 넓힐 수 있는 계기가 될 것이라 기대한다”며 “고객이 혜택과 편리함을 체감할 수 있도록 양사가 다양한 영역에서 논의를 이어갈 예정”이라고 말했다.\n11번가 안정은 사장은 “혁신적인 금융 서비스를 제공하는 토스와의 제휴를 통해 11번가 고객들의 쇼핑경험을 한층 더 업그레이드할 수 있을 것으로 기대한다”며 “앞으로 양사가 긴밀하게 협력을 추진해 나감으로써 고객만족을 최우선으로 하는 서비스와 혜택을 제공할 것”이라고 밝혔다.",
        "content": "11번가와 온라인 결제 및 고객 혜택 강화를 위한 제휴 체결",
        "contentSnippet": "11번가와 온라인 결제 및 고객 혜택 강화를 위한 제휴 체결",
        "guid": "https://blog.toss.im/article/MOU-",
        "isoDate": "2024-10-30T00:00:00.000Z"
      },
      {
        "title": "토스, 데이터센터 완전 차단 재해복구훈련 실시",
        "link": "https://blog.toss.im/article/DisasterResponseSystem",
        "pubDate": "Mon, 28 Oct 2024 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}인터넷데이터센터 액티브-액티브 방식으로 이중화 운영\n실전 훈련에서 복구 과정까지 성공적 진행, 재난 대응 역량 강화\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n모바일 금융 서비스 토스를 운영하는 비바리퍼블리카(이하 토스)가 재해복구훈련을 실시했다고 28일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n토스는 지진, 화재 등 비상상황뿐 아니라 오류, 해킹 등의 상황에서도 안정적인 서비스 제공을 위해 2018년부터 인터넷데이터센터(IDC)를 이중화하여 액티브-액티브(active-active) 형태로 운영하고 있다. 액티브-액티브 형태는 두 데이터센터가 동일한 전산 자원을 가지고 운영되는 방식이다. 서비스 중단을 최소화할 수 있기 때문에 백업 센터를 통해 복구 과정을 거치는 액티브-스탠바이(active-standby) 방식보다 복구 속도가 훨씬 빠르다.\n이번 재해복구훈련은 지난 26일(토) 새벽 2시부터 5시까지 재해로 특정 IDC가 마비되는 상황을 가정하고 실시했다. 한쪽 IDC의 통신을 완전히 차단하고 단독 센터만 운영하는 실전 훈련 과정을 수행했으며, 이 과정에서 고객 서비스에는 전혀 영향이 없었다. 또한, 차단했던 데이터센터의 복구까지 성공적으로 마무리됐다.\n토스 관계자는 “토스는 뱅크, 증권을 포함해 100여 가지의 서비스를 하나의 앱에서 제공하고 있어 안정성이 가장 중요하다\"라며 “하나의 센터를 완전하게 차단하여 업무 연속성을 점검하는 훈련은 금융권에서는 쉽게 시도할 수 없는 일”이라고 전했다.\n한편, 토스는 법인 간 합동으로 전자금융서비스망 장애 관련 비상 대응 훈련을 개최하는 등 재난 상황에도 사용자가 안심하고 앱을 사용할 수 있도록 대응역량 강화를 위한 다양한 노력을 기울이고 있다.",
        "content": "재난 대응 역량을 위해 다양한 노력 기울여",
        "contentSnippet": "재난 대응 역량을 위해 다양한 노력 기울여",
        "guid": "https://blog.toss.im/article/DisasterResponseSystem",
        "isoDate": "2024-10-28T00:00:00.000Z"
      },
      {
        "title": "토스, ‘실손보험 청구 간소화’ 서비스 활성화 지원 나서",
        "link": "https://blog.toss.im/article/silson24",
        "pubDate": "Fri, 25 Oct 2024 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}카드 연동 이용자 대상 의료 결제 시 실손보험 청구 알림… ‘실손24’ 이용 확대 지원\n대한민국 절반이 쓰는 토스 앱 통해 보험 소비자 진입점 확대 및 접근성 향상 기대\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n모바일 금융 서비스 토스를 운영하는 비바리퍼블리카(이하 토스)는 ‘실손24’가 선보이는 실손보험 청구 간소화 서비스를 활성화하기 위한 지원에 나선다고 25일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n실손보험 청구 간소화란 보험 소비자가 병원의 진료비 증명 서류 발급 없이 전송대행 기관을 통해 쉽고 간편하게 실손의료보험금을 청구할 수 있는 서비스다. 이전까지 보험금을 청구하기 위해서는 병원에서 일일이 직접 종이서류를 발급받아야 하는 번거로움이 있었다.\n이달 25일 서비스를 시작한 실손24는 보험개발원이 만든 보험금 청구 전산화 앱이다. 현재 병상 30개 이상의 병원 및 전체 보험사와 제휴되어 있으며, 내년 10월부터는 동네 의원과 약국으로 확대될 예정이다.\n한편 실손보험 청구 간소화는 '국민이 바라는 제도 개선 과제' 1위로 꼽히며 정부의 핵심 국정과제로 선정됐다. 지난해 10월 국회에서 보험업법 개정안이 통과되고, 1년의 준비 기간을 거쳐 25일부터 본격 시행되는 것이다. 대한민국 국민 절반이 이용하는 토스를 통해 실손24에 대한 보험 소비자의 진입점을 넓힐 수 있도록 앱 연계 방식이 채택됐다.\n토스에서 미리 카드를 연동해두면 의료기관에서 해당 카드로 결제할 때마다 실손보험 청구를 잊어버려 놓치는 일이 없도록 알림을 보내준다. 이후 토스 앱에서 ‘간편 청구하기’를 누르면 보험개발원의 실손24 앱으로 연결, ▲본인 인증 ▲실비 청구할 보험사 선택 ▲본인이 다녀온 병원 선택 절차를 거쳐 보험금 청구가 완료된다.\n이번 서비스를 이용하기 위해서는 토스 앱 > 전체 탭 > 상단 돋보기 아이콘을 눌러 ‘서류 발급 없는 실손청구’를 검색하면 된다.\n실손24에서는 10월 25일 이후 이루어진 의료 결제 내역만 조회 및 청구 가능하며, 과거 3년 치는 토스 앱 내 '병원비 돌려받기'로 신청할 수 있다.\n토스 관계자는 “연간 1억 건 이상 청구되며 제2의 건강보험으로 불리는 실손보험이 토스를 통해 접근성이 향상될 수 있도록 이번 서비스를 준비했다”며 “앞으로도 토스는 금융 소비자 편익 증대를 위해 꾸준히 노력할 것”이라고 말했다.",
        "content": "토스 앱 통해 보험 소비자 진입점 확대 및 접근성 향상 기대",
        "contentSnippet": "토스 앱 통해 보험 소비자 진입점 확대 및 접근성 향상 기대",
        "guid": "https://blog.toss.im/article/silson24",
        "isoDate": "2024-10-25T01:00:00.000Z"
      },
      {
        "title": "미국 대선의 승부를 가르는 두 축: 선벨트 & 러스트벨트",
        "link": "https://blog.toss.im/article/economic-terms-33-sunbelt-rustbelt",
        "pubDate": "Thu, 24 Oct 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-p4abj2{display:contents;line-height:1.55;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}🔖 이번 주 경제 용어\n선벨트 & 러스트벨트\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}이번 주 경제 용어는 글로벌 경제를 파악하기 위해 필요한 정보예요.\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n선벨트와 러스트벨트는 미국 대선에서 중요한 경합주 역할을 하는 곳으로, 민주당과 공화당 간의 치열한 득표 경쟁이 벌어지는 지역을 말해요.\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n선벨트(Sunbelt): 미국 남부와 서부의 따뜻한 지역으로, 인구와 경제가 급성장 중인 지역을 말해요.\n러스트벨트(Rustbelt): 미국 북동부와 중서부의 제조업 중심지로, 산업이 쇠퇴하면서 인구와 경제가 감소한 지역을 말해요.\n\n\n\n미국은 러시아, 캐나다 다음으로 넓은 면적을 가진 나라입니다. 이 광대한 대륙을 고르게 발전시킬 수 있다면 좋겠지만, 기후와 지형이 워낙 다양해 지역별 발전 양상에 큰 차이가 있었어요. 더불어 미국의 산업 구조가 제조업에서 고부가가치 산업으로 변화하면서 두 지역이 선명하게 대비되기 시작했습니다. 바로 선벨트(Sunbelt)와 러스트벨트(Rustbelt)입니다.\n선벨트는 따뜻한 기후와 빠른 인구 증가로 유명한 곳입니다. 'Sun'은 이 지역의 따뜻하고 햇빛이 많은 날씨를 의미하고, 'belt'는 이러한 기후 특성을 공유하는 넓은 지역을 가리킵니다. 텍사스, 애리조나, 조지아 등이 미국 남부와 서부에 해당되는 지역이 여기에 속합니다.\n이 지역은 제2차 세계대전 이후 기술과 에너지 산업이 커졌고, 1970년대 이후 북부 지역의 제조업이 쇠퇴하면서 기후적 이점으로 인해 남부와 서부 지역이 빠르게 성장했는데요. 산업과 지역의 성장으로 많은 사람들이 이주하였으며, 특히 항공우주, 군수산업, IT 산업이 발달했습니다.\n선벨트는 전통적으로 공화당 지지 성향이 강했지만, 최근 인구 변화와 이주로 민주당 지지 성향도 강해지고 있는 지역입니다. 애리조나와 조지아는 경합주로서 미국 대선에 큰 영향을 미치고 있습니다.\n러스트 벨트는 미국 북부와 동부에 있는 공장지대를 일컫는 말인데요. 미국 제조업 경기가 전성기일 때 호황을 이루었지만, 제조업 부문이 크게 줄어들면서 오래된 공장 설비가 녹슬었다는 의미에서 '녹슬다'라는 뜻의 'Rust'와 넓은 지역을 가리키는 'belt'의 결합으로, 쇠퇴한 제조업 지역을 나타냅니다. 펜실베니아, 오하이오, 미시간 등이 해당 지역에 속해요.\n20세기 중반까지 미국 북동부와 중서부 지역은 철강, 자동차, 석탄 같은 제조업이 번성했지만, 1970년대부터 제조업이 해외로 이전하거나 선벨트 지역으로 이동하면서 공장들이 문을 닫기 시작했습니다. 그 결과 이 지역 경제는 급격히 침체되었어요.\n제조업 일자리가 줄어드는 것은 결과적으로 러스트벨트 지역 주민들의 경제적 불안정을 불러왔습니다.  러스트벨트는 제조업 일자리 문제 때문에 정치적으로도 민주당과 공화당 간 경합이 심한 지역입니다. 이 지역 역시 경합주로서 미국 대선에 큰 영향을 미칠 거고요.\n이번 11월 5일 미국 대선에서는 러스트벨트의 경제 안정과 일자리 문제가 주요 이슈가 될 것입니다. 그래서 트럼프 전 대통령과 해리스 부통령은 특히 경합주인 러스트벨트에 집중하며 유세를 펼치고 있습니다.\n\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}해리스는 러스트벨트로, 트럼프는 선벨트로…美대선 경합주 총력전\n(중앙일보 2024.10.22)\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}미국 대선을 15일 남긴 앞둔 21일(현지시간) 민주당 후보 카멀라 해리스 부통령과 공화당 후보 도널드 트럼프 전 대통령은 당락을 가를 경합주를 훑으며 총력전을 폈다.\n해리스 부통령은 이날 펜실베이니아ㆍ미시간ㆍ위스콘신 등 경합주 3곳에서 릴레이 유세전을 펴는 강행군을 했다. 특히 이날 일정에는 리즈 체니 전 공화당 하원의원이 동행해 힘을 보탰다. 이전까지 ‘블루월’(민주당 우세 지역)이었다가 2016년 대선 이후 트럼프 전 대통령 지지세가 상당해진 북동부 러스트벨트(쇠락한 공업지대)를 수성하기 위해 네오콘(신보수)의 상징인 딕 체니 전 부통령 딸 체니 전 하원의원과 ‘동반 출격’한 것이다. 러스트벨트 내 공화당 온건 보수 및 중도 성향 유권자들의 세를 최대한 규합하기 위한 전략으로 풀이됐다. ……\n해리스와 체니가 러스트벨트를 훑는 동안 트럼프는 선벨트(일조량이 많은 남부 지역) 경합주 노스캐롤라이나를 찾아 유세전을 폈다. 허리케인 타격이 집중된 노스캐롤라이나 서부 스완나노아를 찾은 트럼프는 “연방재난관리청(FEMA) 그들은 수백만 달러의 돈을 다른 일을 하는 데 썼다. 그들은 불법 이민자 수용에 돈을 쓰지 말았어야 했다”고 주장했다. FEMA가 이민자 주택 지원 등에 예산을 쓰느라 허리케인 피해 복구 지원 자금이 부족하다는 주장을 반복한 것이다. (중략)\n\n\n미국의 대선은 '선거인단' 제도를 통해 이루어집니다. 선거인단 제도는 대표적인 간접선거 제도인데요. 미국은 우리나라처럼 국민이 대통령 후보에게 직접 투표하지 않고, 각 주에 배정된 선거인단을 통해 대통령을 선출하는 간접 선거 제도를 채택하고 있습니다. 간단히 말해 미국 국민들은 각 주에서 선거인단을 뽑고 이 선거인단이 대통령을 최종적으로 선출하는 거죠.\n따라서 미국 대선에서는 단순히 유권자들로부터 표를 가장 많이 얻었다고 승리하는 것이 아니라, 선거인단 538명 중 절반 이상인 270명 이상을 확보해야 대통령이 될 수 있습니다.\n선거인단 선출은 ‘승자독식' 방식이 적용되는데요. 한 주에서 더 많은 득표를 한 후보가 그 주의 모든 선거인단 표를 가져가게 됩니다. 예를 들어, 한 주에서 A 후보가 51% 득표하고 B 후보가 49%를 얻었을 경우, A 후보가 그 주의 모든 선거인단 표를 획득합니다. 이처럼 득표 차가 크지 않더라도 이기기만 하면 선거인단 표를 모두 차지할 수 있기 때문에, 주요 경합주에서의 승리가 선거 전체 결과에 굉장히 큰 영향을 미칠 수 있습니다.\n실제로 2016년 미 대선 당시 공화당 후보로 나온 도널드 트럼프의 득표율은 46.1%, 민주당 후보로 나온 힐러리 클린턴의 득표율은 48.2%로 클린턴의 득표율이 더 높았으나, 트럼프 선거인단 표가 304, 클린턴 선거인단 표가 227로 트럼프가 더 많은 선거인단 표를 가져가게 되면서 트럼프가 최종 당선되는 결과가 나왔습니다.\n이번 대선에서도 경합주의 중요성이 부각되고 있습니다. 몇몇 중요한 경합주에서 트럼프 전 대통령이 점수를 앞서고 있다는 소식이 있지만, 현재 점수 차이는 미미하고 남아 있는 경기도 많아, 마지막까지 결과를 예측하기가 어렵습니다. 특히 펜실베이니아 같은 핵심 경합주에는 많은 선거인단이 걸려 있어, 이곳에서의 승리가 전체 결과에 큰 영향을 줄 수 있습니다.\n대선이 가까워질수록 후보자 간 경쟁은 더욱 치열해지고 있으며, 누가 대통령이 될지에 대한 관심은 그 어느 때보다 높습니다. 최종 승자가 결정되는 순간까지, 모든 가능성이 열려 있는 상황이기에 끝까지 주목할 필요가 있겠습니다.\n\n\n선거인단: 미국 대통령 선거는 직접 투표가 아닌 선거인단을 통해 당선자가 결정됩니다. 총 538명의 선거인단 중 270명 이상을 확보한 후보가 승리하는 방식이에요. 각 주의 선거인단 수는 인구에 따라 결정되며, 대부분의 주에서는 승자독식 방식으로 선거인단을 모두 가져갑니다.\n승자독식: 미국 대선에서는 대부분의 주가 '승자독식' 방식을 따라요. 즉, 한 후보가 주에서 가장 많은 표를 얻으면 그 주의 모든 선거인단을 가져가게 되는 방식이죠. 예외적으로 메인(Maine)과 네브래스카(Nebraska) 주는 득표율에 따라 선거인단을 나눕니다.\n스윙 보터(Swing Voter): 특정 정당에 소속되지 않고 매번 선거에서 후보를 바꾸어 투표하는 유권자. 이들의 표심은 대선 결과에 큰 영향을 미치며, 후보들이 경합주에서 스윙 보터의 지지를 얻기 위해 많은 노력을 기울입니다.\n스윙 스테이트(Swing State): 미국 대선에서 민주당과 공화당 후보들 간 접점이 벌어지는 경합주를 말해요. 이 주들은 한 정당에 고정되지 않고, 선거마다 지지 정당이 달라지는 경향이 있습니다. 선벨트와 러스트벨트에 속하는 주를 일컫는 또다는 용어가 될 수 있겠어요. 이번 미 대선에서 최대 경합주는 펜실베이니아로 보는데, 선거인단이 19명으로 제일 많아서래요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "민주당과 공화당 간의 치열한 득표 경쟁이 벌어지고 있는 곳",
        "contentSnippet": "민주당과 공화당 간의 치열한 득표 경쟁이 벌어지고 있는 곳",
        "guid": "https://blog.toss.im/article/economic-terms-33-sunbelt-rustbelt",
        "isoDate": "2024-10-24T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]