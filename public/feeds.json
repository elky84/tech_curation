[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sinem Akinci",
        "title": "Understand your C++ symbols using Copilot in Visual Studio’s Quick Info",
        "link": "https://devblogs.microsoft.com/cppblog/understand-your-c-symbols-using-copilot-in-visual-studios-quick-info/",
        "pubDate": "Tue, 18 Jun 2024 09:00:30 +0000",
        "content:encodedSnippet": "Navigating your codebase and forget what exactly that method does? Looking for quick, easy-to-digest information on your code at any point in your development journey?\nWe are excited to announce that now when you hover over symbols in your codebase, you’ll be able to invoke Copilot conveniently within the Quick Info dialog to learn more about a given symbol and enhance existing or lacking code documentation.\nHow it works\nNormally, in the Quick info window, you would see comments or xml documentation if it was generated by your team in the code, which can sometimes be unrelated to what the given symbol does. Copilot can help augment existing documentation or lacking documentation.\nJust hover over your symbol of interest and click on the link to learn more about what it does in natural language, rather than having to go to the definition and parse through all the code.\n\n\nCopilot uses the declaration and definition of the given symbol to provide you an understanding of it at any invocation.\nFor example, when working with unfamiliar library code, there is often context from the source code of the symbol definition to infer the purpose of the symbol.\n\n\nTry it out\nThis feature is available in any C++ codebase as of Visual Studio 2022 version 17.10. Stay tuned for upcoming support for other languages and please let us know anything you’d like to see added to this feature. You’ll need an active GitHub Copilot subscription. Download the latest version of Visual Studio and give it a try.\nIn addition, our team is working hard on improving C++ integrations with Copilot Chat, so please let us know any other enhancements you’d like to see to your C++ workflows and content you’d like to see.\nWe welcome all types of feedback on your experience with the product. Comment below, or you can find us via email at visualcpp@microsoft.com or via X at @VisualC.\nThe post Understand your C++ symbols using Copilot in Visual Studio’s Quick Info appeared first on C++ Team Blog.",
        "dc:creator": "Sinem Akinci",
        "comments": "https://devblogs.microsoft.com/cppblog/understand-your-c-symbols-using-copilot-in-visual-studios-quick-info/#comments",
        "content": "<p>Navigating your codebase and forget what exactly that method does? Looking for quick, easy-to-digest information on your code at any point in your development journey?<br />\nWe are excited to announce that now when you hover over symbols in your codebase, you&#8217;ll be able to invoke Copilot conveniently within the Quick Info dialog to learn more about a given symbol and enhance existing or lacking code documentation.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/understand-your-c-symbols-using-copilot-in-visual-studios-quick-info/\">Understand your C++ symbols using Copilot in Visual Studio&#8217;s Quick Info</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Navigating your codebase and forget what exactly that method does? Looking for quick, easy-to-digest information on your code at any point in your development journey?\nThe post Understand your C++ symbols using Copilot in Visual Studio’s Quick Info appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=34348",
        "categories": [
          "C++",
          "Copilot"
        ],
        "isoDate": "2024-06-18T09:00:30.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "PVF: A novel metric for understanding AI systems’ vulnerability against SDCs in model parameters",
        "link": "https://engineering.fb.com/2024/06/19/data-infrastructure/parameter-vulnerability-factor-pvf-ai-silent-data-corruption/",
        "pubDate": "Wed, 19 Jun 2024 16:00:46 +0000",
        "content:encodedSnippet": "We’re introducing parameter vulnerability factor (PVF), a novel metric for understanding and measuring AI systems’ vulnerability against silent data corruptions (SDCs) in model parameters.\nPVF can be tailored to different AI models and tasks, adapted to different hardware faults, and even extended to the training phase of AI models.\nWe’re sharing results of our own case studies using PVF to measure the impact of SDCs in model parameters, as well as potential methods of identifying SDCs in model parameters.\nReliability is an important aspect of any successful AI implementation. But the growing complexity and diversity of AI hardware systems also brings an increased risk of hardware faults such as bit flips. Manufacturing defects, aging components, or environmental factors can lead to data corruptions – errors or alterations in data that can occur during storage, transmission, or processing and result in unintended changes in information.\nSilent data corruptions (SDCs), where an undetected hardware fault results in erroneous application behavior, have become increasingly prevalent and difficult to detect. Within AI systems, an SDC can create what is referred to as parameter corruption, where AI model parameters are corrupted and their original values are altered.\nWhen this occurs during AI inference/servicing it can potentially lead to incorrect or degraded model output for users, ultimately affecting the quality and reliability of AI services.\nFigure 1 shows an example of this, where a single bit flip can drastically alter the output of a ResNet model. \nFigure 1: Flipping a random bit of one parameter in the 1st convolution (conv) layer in ResNet-18 drastically alters the model’s output.\n \nWith this escalating thread in mind, there are two important questions: How vulnerable are AI models to parameter corruptions? And how do different parts (such as modules and layers) of the models exhibit different vulnerability levels to parameter corruptions?\nAnswering these questions is an important part of delivering reliable AI systems and services and offers valuable insights for guiding AI hardware system design, such as when assigning AI model parameters or software variables to hardware blocks with differing fault protection capabilities. Additionally, it can provide important information for formulating strategies to detect and mitigate SDCs in AI systems in an efficient and effective manner.\nParameter vulnerability factor (PVF) is a novel metric we’ve introduced with the aim to standardize the quantification of AI model vulnerability against parameter corruptions. PVF is a versatile metric that can be tailored to different AI models/tasks and is also adaptable to different hardware fault models. Furthermore, PVF can be extended to the training phase to evaluate the effects of parameter corruptions on the model’s convergence capability.\nWhat is PVF?\nPVF is inspired by the architectural vulnerability factor (AVF) metric used within the computer architecture community. We define a model parameter’s PVF as the probability that a corruption in that specific model parameter will lead to an incorrect output. Similar to AVF, this statistical concept can be derived from statistically extensive and meaningful fault injection (FI) experiments. \nPVF has several features:\nParameter-level quantitative assessment\nAs a quantitative metric, PVF concentrates on parameter-level vulnerability, calculating the likelihood that a corruption in a specific model parameter will lead to an incorrect model output. This “parameter” can be defined at different scales and granularities, such as an individual parameter or a group of parameters.\nScalability across AI models/tasks\nPVF is scalable and applicable across a wide range of AI models, tasks, and hardware fault models.\nProvides insights for guiding AI system design\nPVF can provide valuable insights for AI system designers, guiding them in making informed decisions about balancing fault protection with performance and efficiency. For example, engineers might leverage PVF to help map higher vulnerable parameters to better-protected hardware blocks and explore tradeoffs on latency, power, and reliability by enabling a surgical approach to fault tolerance at selective locations instead of a catch-all/none approach. \nCan be used as a standard metric for AI vulnerability/resilience evaluation\nPVF has the potential to unify and standardize such practices, making it easier to compare the reliability of different AI systems/parameters and fostering open collaboration and progress in the industry and research community.\nHow PVF works\nSimilar to AVF as a statistical concept, PVF needs to be derived through a large number of FI  experiments that are statistically meaningful. Figure 2 shows an overall flow to compute PVF through a FI process. We’ve presented a case study on the open-source DLRM inference with more details and example case studies in our paper.\nFigure 2: Computing PVF through FI.\nFigure 3 illustrates the PVF of three DLRM parameter components, embedding table, bot-MLP, and top-MLP, under 1, 2, 4, 8, 16, 32, 64, and 128 bit flips during each inference. We observe different vulnerability levels across different parts of DLRM. For example, under a single bit flip, the embedding table has relatively low PVF; this is attributed to embedding tables being highly sparse, and parameter corruptions are only activated when the particular corrupted parameter is activated by the corresponding sparse feature. However, top-MLP can have 0.4% under even a single bit flip. This is significant – for every 1000 inferences, four inferences will be incorrect. This highlights the importance of protecting specific vulnerable parameters for a given model based on the PVF measurement. \nFigure 3: The PVF of DLRM parameters under random bit flips.\nWe observe that with 128 bit flips during each inference, for MLP components, PVF has increased to 40% and 10% for top-MLP and bot-MLP components respectively, while observing multiple NaN values. Top-MLP component has higher PVF than bot-MLP. This is attributed to the top-MLP being closer to the final model, and hence has less of a chance to be mitigated by inherent error masking probability of neural layers. \nThe applicability of PVF\nPVF is a versatile metric where the definition of an “incorrect output” (which will vary based on the model/task) can be adapted to suit user requirements. To adapt PVF to various hardware fault models the method to calculate PVF remains consistent as depicted in Figure 2. The only modification required is the manner in which the fault is injected, based on the assumed fault models. \nFurthermore, PVF can be extended to the training phase to evaluate the effects of parameter corruptions on the model’s convergence capability. During training, the model’s parameters are iteratively updated to minimize a loss function. A corruption in a parameter could potentially disrupt this learning process, preventing the model from converging to an optimal solution. By applying the PVF concept during training, we could quantify the probability that a corruption in each parameter would result in such a convergence failure.\nDr. DNA and further exploration avenues for PVF\nThe logical progression after understanding AI vulnerability to SDCs is to identify and lessen their impact on AI systems. To initiate this, we’ve introduced Dr. DNA, a method designed to detect and mitigate SDCs that occur during deep learning model inference. Specifically, we formulate and extract a set of unique SDC signatures from the distribution of neuron activations (DNA), based on which we propose early-stage detection and mitigation of SDCs during DNN inference. \nWe perform an extensive evaluation across 10 representative DNN models used in three common tasks (vision, GenAI, and segmentation) including ResNet, Vision Transformer, EfficientNet, YOLO, etc., under four different error models. Results show that Dr. DNA  achieves a 100% SDC detection rate for most cases, a 95% detection rate on average and a >90% detection rate across all cases, representing 20-70% improvement over baselines. Dr. DNA can also mitigate the impact of SDCs by effectively recovering DNN model performance with <1% memory overhead and <2.5% latency overhead. \nRead the research papers\nPVF (Parameter Vulnerability Factor): A Novel Metric for Understanding AI Vulnerability Against SDCs in Model Parameters \nDr. DNA: Combating Silent Data Corruptions in Deep Learning using Distribution of Neuron Activations\nThe post PVF: A novel metric for understanding AI systems’ vulnerability against SDCs in model parameters appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>We’re introducing parameter vulnerability factor (PVF), a novel metric for understanding and measuring AI systems’ vulnerability against silent data corruptions (SDCs) in model parameters. PVF can be tailored to different AI models and tasks, adapted to different hardware faults, and even extended to the training phase of AI models. We’re sharing results of our own [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/06/19/data-infrastructure/parameter-vulnerability-factor-pvf-ai-silent-data-corruption/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/06/19/data-infrastructure/parameter-vulnerability-factor-pvf-ai-silent-data-corruption/\">PVF: A novel metric for understanding AI systems’ vulnerability against SDCs in model parameters</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "We’re introducing parameter vulnerability factor (PVF), a novel metric for understanding and measuring AI systems’ vulnerability against silent data corruptions (SDCs) in model parameters. PVF can be tailored to different AI models and tasks, adapted to different hardware faults, and even extended to the training phase of AI models. We’re sharing results of our own [...]\nRead More...\nThe post PVF: A novel metric for understanding AI systems’ vulnerability against SDCs in model parameters appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21376",
        "categories": [
          "Data Infrastructure"
        ],
        "isoDate": "2024-06-19T16:00:46.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": [
      {
        "creator": "Netflix Technology Blog",
        "title": "A Recap of the Data Engineering Open Forum at Netflix",
        "link": "https://netflixtechblog.com/a-recap-of-the-data-engineering-open-forum-at-netflix-6b4d4410b88f?source=rss----2615bd06b42e---4",
        "pubDate": "Thu, 20 Jun 2024 15:01:27 GMT",
        "content:encodedSnippet": "A summary of sessions at the first Data Engineering Open Forum at Netflix on April 18th, 2024\nThe Data Engineering Open Forum at Netflix on April 18th, 2024.\nAt Netflix, we aspire to entertain the world, and our data engineering teams play a crucial role in this mission by enabling data-driven decision-making at scale. Netflix is not the only place where data engineers are solving challenging problems with creative solutions. On April 18th, 2024, we hosted the inaugural Data Engineering Open Forum at our Los Gatos office, bringing together data engineers from various industries to share, learn, and connect.\nAt the conference, our speakers share their unique perspectives on modern developments, immediate challenges, and future prospects of data engineering. We are excited to share the recordings of talks from the conference with the rest of the world.\nOpening Remarks\nRecording\nSpeaker: Max Schmeiser (Vice President of Studio and Content Data Science & Engineering)\nSummary: Max Schmeiser extends a warm welcome to all attendees, marking the beginning of our inaugural Data Engineering Open Forum.\nEvolving from Rule-based Classifier: Machine Learning Powered Auto Remediation in Netflix Data Platform\nRecording\nSpeakers:\n\nStephanie Vezich Tamayo (Senior Machine Learning Engineer at Netflix)\nBinbing Hou (Senior Software Engineer at Netflix)\n\nSummary: At Netflix, hundreds of thousands of workflows and millions of jobs are running every day on our big data platform, but diagnosing and remediating job failures can impose considerable operational burdens. To handle errors efficiently, Netflix developed a rule-based classifier for error classification called “Pensive.” However, as the system has increased in scale and complexity, Pensive has been facing challenges due to its limited support for operational automation, especially for handling memory configuration errors and unclassified errors. To address these challenges, we have developed a new feature called “Auto Remediation,” which integrates the rules-based classifier with an ML service.\nAutomating the Data Architect: Generative AI for Enterprise Data Modeling\nRecording\nSpeaker: Jide Ogunjobi (Founder & CTO at Context Data)\nSummary: As organizations accumulate ever-larger stores of data across disparate systems, efficiently querying and gaining insights from enterprise data remain ongoing challenges. To address this, we propose developing an intelligent agent that can automatically discover, map, and query all data within an enterprise. This “Enterprise Data Model/Architect Agent” employs generative AI techniques for autonomous enterprise data modeling and architecture.\nTulika Bhatt, Senior Data Engineer at Netflix, shared how her team manages impression data at scale.\nReal-Time Delivery of Impressions at Scale\nRecording\nSpeaker: Tulika Bhatt (Senior Data Engineer at Netflix)\nSummary: Netflix generates approximately 18 billion impressions daily. These impressions significantly influence a viewer’s browsing experience, as they are essential for powering video ranker algorithms and computing adaptive pages, With the evolution of user interfaces to be more responsive to in-session interactions, coupled with the growing demand for real-time adaptive recommendations, it has become highly imperative that these impressions are provided on a near real-time basis. This talk will delve into the creative solutions Netflix deploys to manage this high-volume, real-time data requirement while balancing scalability and cost.\nReflections on Building a Data Platform From the Ground Up in a Post-GDPR World\nRecording\nSpeaker: Jessica Larson (Data Engineer & Author of “Snowflake Access Control”)\nSummary: The requirements for creating a new data warehouse in the post-GDPR world are significantly different from those of the pre-GDPR world, such as the need to prioritize sensitive data protection and regulatory compliance over performance and cost. In this talk, Jessica Larson shares her takeaways from building a new data platform post-GDPR.\nUnbundling the Data Warehouse: The Case for Independent Storage\nRecording\nSpeaker: Jason Reid (Co-founder & Head of Product at Tabular)\nSummary: Unbundling a data warehouse means splitting it into constituent and modular components that interact via open standard interfaces. In this talk, Jason Reid discusses the pros and cons of both data warehouse bundling and unbundling in terms of performance, governance, and flexibility, and he examines how the trend of data warehouse unbundling will impact the data engineering landscape in the next 5 years.\nClark Wright, Staff Analytics Engineer at Airbnb, talked about the concept of Data Quality Score at Airbnb.\nData Quality Score: How We Evolved the Data Quality Strategy at Airbnb\nRecording\nSpeaker: Clark Wright (Staff Analytics Engineer at Airbnb)\nSummary: Recently, Airbnb published a post to their Tech Blog called Data Quality Score: The next chapter of data quality at Airbnb. In this talk, Clark Wright shares the narrative of how data practitioners at Airbnb recognized the need for higher-quality data and then proposed, conceptualized, and launched Airbnb’s first Data Quality Score.\nData Productivity at Scale\nRecording\nSpeaker: Iaroslav Zeigerman (Co-Founder and Chief Architect at Tobiko Data)\nSummary: The development and evolution of data pipelines are hindered by outdated tooling compared to software development. Creating new development environments is cumbersome: Populating them with data is compute-intensive, and the deployment process is error-prone, leading to higher costs, slower iteration, and unreliable data. SQLMesh, an open-source project born from our collective experience at companies like Airbnb, Apple, Google, and Netflix, is designed to handle the complexities of evolving data pipelines at an internet scale. In this talk, Iaroslav Zeigerman discusses challenges faced by data practitioners today and how core SQLMesh concepts solve them.\nLast but not least, thank you to the organizers of the Data Engineering Open Forum: Chris Colburn, Xinran Waibel, Jai Balani, Rashmi Shamprasad, and Patricia Ho.\nUntil next time!\nIf you are interested in attending a future Data Engineering Open Forum, we highly recommend you join our Google Group to stay tuned to event announcements.\n\nA Recap of the Data Engineering Open Forum at Netflix was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/6b4d4410b88f",
        "categories": [
          "data-engineering",
          "data-science",
          "technology",
          "software-engineering",
          "data"
        ],
        "isoDate": "2024-06-20T15:01:27.000Z"
      },
      {
        "creator": "Netflix Technology Blog",
        "title": "Video annotator: building video classifiers using vision-language models and active learning",
        "link": "https://netflixtechblog.com/video-annotator-building-video-classifiers-using-vision-language-models-and-active-learning-8ebdda0b2db4?source=rss----2615bd06b42e---4",
        "pubDate": "Wed, 19 Jun 2024 15:29:29 GMT",
        "content:encodedSnippet": "Video annotator: a framework for efficiently building video classifiers using vision-language models and active learning\nAmir Ziai, Aneesh Vartakavi, Kelli Griggs, Eugene Lok, Yvonne Jukes, Alex Alonso, Vi Iyengar, Anna Pulido\nhttps://medium.com/media/02a5bbf97c619182adba24b45e42edcb/href\nIntroduction\nProblem\nHigh-quality and consistent annotations are fundamental to the successful development of robust machine learning models. Conventional techniques for training machine learning classifiers are resource intensive. They involve a cycle where domain experts annotate a dataset, which is then transferred to data scientists to train models, review outcomes, and make changes. This labeling process tends to be time-consuming and inefficient, sometimes halting after a few annotation cycles.\nImplications\nConsequently, less effort is invested in annotating high-quality datasets compared to iterating on complex models and algorithmic methods to improve performance and fix edge cases. As a result, ML systems grow rapidly in complexity.\nFurthermore, constraints on time and resources often result in leveraging third-party annotators rather than domain experts. These annotators perform the labeling task without a deep understanding of the model’s intended deployment or usage, often making consistent labeling of borderline or hard examples, especially in more subjective tasks, a challenge.\nThis necessitates multiple review rounds with domain experts, leading to unexpected costs and delays. This lengthy cycle can also result in model drift, as it takes longer to fix edge cases and deploy new models, potentially hurting usefulness and stakeholder trust.\nSolution\nWe suggest that more direct involvement of domain experts, using a human-in-the-loop system, can resolve many of these practical challenges. We introduce a novel framework, Video Annotator (VA), which leverages active learning techniques and zero-shot capabilities of large vision-language models to guide users to focus their efforts on progressively harder examples, enhancing the model’s sample efficiency and keeping costs low.\nVA seamlessly integrates model building into the data annotation process, facilitating user validation of the model before deployment, therefore helping with building trust and fostering a sense of ownership. VA also supports a continuous annotation process, allowing users to rapidly deploy models, monitor their quality in production, and swiftly fix any edge cases by annotating a few more examples and deploying a new model version.\nThis self-service architecture empowers users to make improvements without active involvement of data scientists or third-party annotators, allowing for fast iteration.\nVideo understanding\nWe design VA to assist in granular video understanding which requires the identification of visuals, concepts, and events within video segments. Video understanding is fundamental for numerous applications such as search and discovery, personalization, and the creation of promotional assets. Our framework allows users to efficiently train machine learning models for video understanding by developing an extensible set of binary video classifiers, which power scalable scoring and retrieval of a vast catalog of content.\nVideo classification\nVideo classification is the task of assigning a label to an arbitrary-length video clip, often accompanied by a probability or prediction score, as illustrated in Fig 1.\nFig 1- Functional view of a binary video classifier. A few-second clip from ”Operation Varsity Blues: The College Admissions Scandal” is passed to a binary classifier for detecting the ”establishing shots” label. The classifier outputs a very high score (score is between 0 and 1), indicating that the video clip is very likely an establishing shot. In filmmaking, an establishing shot is a wide shot (i.e. video clip between two consecutive cuts) of a building or a landscape that is intended for establishing the time and location of the scene.\nVideo understanding via an extensible set of video classifiers\nBinary classification allows for independence and flexibility, allowing us to add or improve one model independent of the others. It also has the additional benefit of being easier to understand and build for our users. Combining the predictions of multiple models allows us a deeper understanding of the video content at various levels of granularity, illustrated in Fig 2.\nFig 2- Three video clips and the corresponding binary classifier scores for three video understanding labels. Note that these labels are not mutually exclusive. Video clips are from Operation Varsity Blues: The College Admissions Scandal, 6 Underground, and Leave The World Behind, respectively.\nVideo Annotator (VA)\nIn this section, we describe VA’s three-step process for building video classifiers.\nStep 1 — search\nUsers begin by finding an initial set of examples within a large, diverse corpus to bootstrap the annotation process. We leverage text-to-video search to enable this, powered by video and text encoders from a Vision-Language Model to extract embeddings. For example, an annotator working on the establishing shots model may start the process by searching for “wide shots of buildings”, illustrated in Fig 3.\nFig 3- Step 1 — Text-to-video search to bootstrap the annotation process.\nStep 2 — active learning\nThe next stage involves a classic Active Learning loop. VA then builds a lightweight binary classifier over the video embeddings, which is subsequently used to score all clips in the corpus, and presents some examples within feeds for further annotation and refinement, as illustrated in Fig 4.\nFig 4- Step 2 — Active Learning loop. The annotator clicks on build, which initiates classifier training and scoring of all clips in a video corpus. Scored clips are organized in four feeds.\nThe top-scoring positive and negative feeds display examples with the highest and lowest scores respectively. Our users reported that this provided a valuable indication as to whether the classifier has picked up the correct concepts in the early stages of training and spot cases of bias in the training data that they were able to subsequently fix. We also include a feed of “borderline” examples that the model is not confident about. This feed helps with discovering interesting edge cases and inspires the need for labeling additional concepts. Finally, the random feed consists of randomly selected clips and helps to annotate diverse examples which is important for generalization.\nThe annotator can label additional clips in any of the feeds and build a new classifier and repeat as many times as desired.\nStep 3 — review\nThe last step simply presents the user with all annotated clips. It’s a good opportunity to spot annotation mistakes and to identify ideas and concepts for further annotation via search in step 1. From this step, users often go back to step 1 or step 2 to refine their annotations.\nExperiments\nTo evaluate VA, we asked three video experts to annotate a diverse set of 56 labels across a video corpus of 500k shots. We compared VA to the performance of a few baseline methods, and observed that VA leads to the creation of higher quality video classifiers. Fig 5 compares VA’s performance to baselines as a function of the number of annotated clips.\nFig 5- Model quality (i.e. Average Precision) as a function of the number of annotated clips for the “establishing shots” label. We observe that all methods outperform the baseline, and that all methods benefit from additional annotated data, albeit to varying degrees.\nYou can find more details about VA and our experiments in this paper.\nConclusion\nWe presented Video Annotator (VA), an interactive framework that addresses many challenges associated with conventional techniques for training machine learning classifiers. VA leverages the zero-shot capabilities of large vision-language models and active learning techniques to enhance sample efficiency and reduce costs. It offers a unique approach to annotating, managing, and iterating on video classification datasets, emphasizing the direct involvement of domain experts in a human-in-the-loop system. By enabling these users to rapidly make informed decisions on hard samples during the annotation process, VA increases the system’s overall efficiency. Moreover, it allows for a continuous annotation process, allowing users to swiftly deploy models, monitor their quality in production, and rapidly fix any edge cases.\nThis self-service architecture empowers domain experts to make improvements without the active involvement of data scientists or third-party annotators, and fosters a sense of ownership, thereby building trust in the system.\nWe conducted experiments to study the performance of VA, and found that it yields a median 8.3 point improvement in Average Precision relative to the most competitive baseline across a wide-ranging assortment of video understanding tasks. We release a dataset with 153k labels across 56 video understanding tasks annotated by three professional video editors using VA, and also release code to replicate our experiments.\n\nVideo annotator: building video classifiers using vision-language models and active learning was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/8ebdda0b2db4",
        "categories": [
          "video-editing",
          "artificial-intelligence",
          "machine-learning"
        ],
        "isoDate": "2024-06-19T15:29:29.000Z"
      }
    ]
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2024.1.4 Is Out!",
        "link": "https://blog.jetbrains.com/idea/2024/06/intellij-idea-2024-1-4/",
        "pubDate": "Fri, 21 Jun 2024 10:07:04 +0000",
        "content:encodedSnippet": "IntelliJ IDEA 2024.1.4 has arrived with several valuable fixes.\nYou can update to this version from inside the IDE, using the Toolbox App, or using snaps if you are a Ubuntu user. You can also download it from our website.\nHere are the most notable updates included in v2024.1.4:\nCode validation no longer produces incorrect code highlighting caused by freezes while reevaluating inspections. [IJPL-28967]\nWe fixed the issue causing the IDE to lag when editing code. [IJPL-149640, IJPL-156086]\nThe Unknown HTTP header inspection once again loads settings from the inspection profile correctly. [IJPL-65369]\nThe IDE no longer fails to perform operations, citing the Too complex, sorry message. [IJPL-1116]\nUpdating plugins from the Welcome screen now works as expected again. [IJPL-6076]\nThe Enable Project-Wide Analysis action is once again available in the Problems tool window. [IJPL-156560]\n\n\n\n\nTo find out more details about the issues resolved, please refer to the release notes.\nIf you encounter any bugs, please report them to our issue tracker.\nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "IntelliJ IDEA 2024.1.4 has arrived with several valuable fixes. You can update to this version from inside the IDE, using the&#160;Toolbox App, or using snaps if you are a Ubuntu user. You can also download it from our&#160;website. Here are the most notable updates included in v2024.1.4: To find out more details about the issues [&#8230;]",
        "contentSnippet": "IntelliJ IDEA 2024.1.4 has arrived with several valuable fixes. You can update to this version from inside the IDE, using the Toolbox App, or using snaps if you are a Ubuntu user. You can also download it from our website. Here are the most notable updates included in v2024.1.4: To find out more details about the issues […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=485008",
        "categories": [
          "releases",
          "2024-1",
          "bug-fix-update",
          "intellij-idea",
          "intellij-idea-2024-1"
        ],
        "isoDate": "2024-06-21T10:07:04.000Z"
      },
      {
        "creator": "David Watson",
        "title": "WebStorm 2024.1.5 Is Now Available",
        "link": "https://blog.jetbrains.com/webstorm/2024/06/webstorm-2024-1-5/",
        "pubDate": "Fri, 21 Jun 2024 10:02:03 +0000",
        "content:encodedSnippet": "WebStorm 2024.1.5, the fifth update for WebStorm 2024.1, is now available! It contains several improvements from the platform. \nYou can update to v2024.1.5 by using the Toolbox App, installing it right from the IDE, or downloading it from our website. \nNotable improvements\nHere are some of the notable updates included in v2024.1.5:\nWe’ve fixed the issue causing inspections to show persistent errors that do not refresh during editing (IJPL-28967).\nWe’ve fixed the performance issue causing a delay with caret movement and input (IJPL-149640).\nWe’ve fixed the issue preventing WebStorm from loading profile settings for inspections (IJPL-65369).\nWe’ve fixed a regression issue causing a significant slowdown of the IDE (IJPL-156086).\nWe’ve fixed the severe input and cursor movement lag issues when the show tool window names and background image options are enabled (IJPL-149213).\nWebStorm no longer fails to perform operations, citing the “Too complex, sorry” message (IJPL-1116).\nWe’ve removed the Start Trial confirmation dialog (IJPL-149888).\nWe’ve fixed the issue causing background actions on the main toolbar to get stuck (IJPL-155988).\nUpdating plugins from the Welcome screen works as expected again (IJPL-6076).\nThe Enable Project-Wide Analysis action is again available in the Problems tool window (IJPL-156560).\nThat’s all for today! For the full list of issues addressed in WebStorm 2024.1.5, please see the release notes.\nThe WebStorm team",
        "dc:creator": "David Watson",
        "content": "WebStorm 2024.1.5, the fifth update for WebStorm 2024.1, is now available! It contains several improvements from the platform.&#160; You can update to v2024.1.5 by using the Toolbox App, installing it right from the IDE, or downloading it from our website.&#160; Notable improvements Here are some of the notable updates included in v2024.1.5: That’s all for [&#8230;]",
        "contentSnippet": "WebStorm 2024.1.5, the fifth update for WebStorm 2024.1, is now available! It contains several improvements from the platform.  You can update to v2024.1.5 by using the Toolbox App, installing it right from the IDE, or downloading it from our website.  Notable improvements Here are some of the notable updates included in v2024.1.5: That’s all for […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=486104",
        "categories": [
          "releases",
          "webstorm-2024-1"
        ],
        "isoDate": "2024-06-21T10:02:03.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2024.2 EAP 6: Streamlined Log Management, Enhanced Gradle Build Script Experience, and More",
        "link": "https://blog.jetbrains.com/idea/2024/06/intellij-idea-2024-2-eap-6/",
        "pubDate": "Fri, 21 Jun 2024 06:03:42 +0000",
        "content:encodedSnippet": "IntelliJ IDEA 2024.2 EAP 6 is out! \nYou can get the latest build from our website, through the free Toolbox App, or via snaps for Ubuntu. \nDownload IntelliJ IDEA 2024.2 EAP 6\nThe latest build offers a streamlined user experience with Gradle build scripts, enhanced logging support for Java and Kotlin, and improvements to support Terraform development. To learn about the updates introduced in the previous EAP builds, check out the dedicated 2024.2 EAP section of our blog. \nJava / Kotlin\nEnhanced log management for Java and Kotlin\nContinuing our efforts to improve log handling, IntelliJ IDEA 2024.2 EAP 6 features several notable enhancements for both Java and Kotlin developers, building on the improvements made in the 2024.1 release.\nFirst, we’ve introduced string literal code highlighting, making it easier to distinguish placeholders within string literals. Additionally, the new argument resolution feature allows you to navigate seamlessly from a placeholder in the string literal to its corresponding argument.\n\n\n\n\nThe latest build also includes updated and new inspections for logging statements. We’ve modified the inspection that identifies and warns you about mismatched numbers of parameters in logger calls, taking into account the specifics of the logger being used. For example, the inspection won’t trigger a warning if the extra argument is of the Exception type.\n\n\n\n\nAnother inspection suggests converting System.out.println statements to logger calls, even if the logger is not yet defined.\n\n\n\n\nFurthermore, a new quick-fix is available to add guards for logger calls. The inspection is disabled by default. To enable it in the editor, you can adjust the severity levels in the settings.\n\n\n\n\nBuild tools \nImproved experience with Gradle build scripts\nStarting from IntelliJ IDEA 2024.2 EAP 6, the IDE provides an improved experience with build scripts thanks to the new navigation and highlighting features in Gradle build scripts. First, IntelliJ IDEA now provides smooth and accurate navigation to the Gradle plugins declared in build scripts. \n\n\n\n\nBesides that, we’ve implemented navigation between version catalog files and build scripts in libs.versions.toml file, as well as an option to run registered tasks directly from the gutter.\n\n\n\n\n\nFrameworks and technologies \nEnhanced support for Terraform \nWe’ve significantly extended coding assistance capabilities for Terraform code. \nFirst, full line code completion is now available for Terraform development. Powered by a local large language model (LLM), this functionality predicts entire lines of code, boosting your productivity. \n\n\n\n\nThe in-editor language support for Terraform has been significantly improved in IntelliJ IDEA. This includes essential code insight features such as context-aware code completion, refined syntax highlighting, and an enhanced error detection system with quick-fix suggestions. Additionally, we’ve made the IDE faster by enabling autocompletion and syntax highlighting for Terraform even before indexing is complete, allowing you to start coding more quickly.\nWe’ve also added a feature that shows documentation tooltips when you hover over elements in your Terraform code. This allows you to see relevant information instantly, helping you understand and use Terraform resources more effectively without breaking your workflow.\n\n\n\n\nThese are the most notable updates included in the IntelliJ IDEA 2024.2 EAP 6 build. For the full list of changes, refer to the release notes.\nWe value your feedback during the Early Access Program and eagerly await your comments regarding the new features on X (formerly Twitter) or below. If you find a bug, please report it in our issue tracker.\nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "IntelliJ IDEA 2024.2 EAP 6 is out!&#160; You can get the latest build from our website, through the free Toolbox App, or via snaps for Ubuntu.&#160; Download IntelliJ IDEA 2024.2 EAP 6 The latest build offers a streamlined user experience with Gradle build scripts, enhanced logging support for Java and Kotlin, and improvements to support [&#8230;]",
        "contentSnippet": "IntelliJ IDEA 2024.2 EAP 6 is out!  You can get the latest build from our website, through the free Toolbox App, or via snaps for Ubuntu.  Download IntelliJ IDEA 2024.2 EAP 6 The latest build offers a streamlined user experience with Gradle build scripts, enhanced logging support for Java and Kotlin, and improvements to support […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=485485",
        "categories": [
          "eap",
          "2024-2-eap",
          "early-access-program",
          "intellij-idea",
          "intellij-idea-2024-2-eap"
        ],
        "isoDate": "2024-06-21T06:03:42.000Z"
      },
      {
        "creator": "Khalid Abuhakmeh",
        "title": "dotCover Command Line Tools for Automation Testing Code Coverage",
        "link": "https://blog.jetbrains.com/dotnet/2024/06/20/dotcover-command-line-tools-for-automation-testing-code-coverage/",
        "pubDate": "Thu, 20 Jun 2024 12:45:54 +0000",
        "content:encodedSnippet": "The ultimate goal of creating a testing strategy is to be confident that you and your team have done their due diligence to deliver a quality product. Test harnesses typically include a mix of unit tests, integration testing, automation, and manual testing, each with advantages and disadvantages for your overall strategy. Determining the effectiveness of your plan requires data collected during test runs, and with code coverage reports, you quantify how each style of testing contributes to your confidence levels.\nWhile code coverage is strongly associated with unit testing libraries such as xUnit, NUnit, or MSTest, the JetBrains tool dotCover can provide code coverage in many scenarios. In this post, we’ll see how to install the dotCover command line tool and gather results from any .NET process, regardless of the execution environment, including local, CI/CD, and production environments.\nDownload and try dotCover\n                                                    \nGetting Started with dotCover Command Line\ndotCover is available as a .NET CLI tool, and you can install it in any environment where you can run a dotnet process. The command line tool supports Windows (x86/x64/ARM64), Linux (x64 / ARM / ARM64 / Musl x64 / Musl ARM64), and macOS (x64 / ARM64). You can install it either as a global or local tool. \nFrom the command line, use the following command to install the tooling.\ndotnet tool install --global JetBrains.dotCover.CommandLineTools\nConfirm the tool is installed globally by running the following command.\ndotnet-dotcover --help\nIssues with global installations typically result from the installation folder for global tools not appearing in the PATH environment variable.\nFor local installation to a .NET Solution, use the following command from the root of the solution folder.\ndotnet new tool-manifest\ndotnet tool install --local JetBrains.dotCover.CommandLineTools\nOnce installed locally, run the following command from the root of your solution to verify a correct installation.\ndotnet dotcover help\nWe’re now ready to start code coverage testing any .NET application. Also, at any point, you can learn more about any command using the following format.\ndotnet dotcover help <command>\nCoverage Analysis for .NET Processes\nI’ve written a straightforward console application with various branching paths for this post. We’ll see if our manual testing can verify that we’ve hit all the branches correctly.\nvar run = true;\nConsole.WriteLine(\"Waiting for input...\");\n\nwhile (run)\n{\n    var key = Console.ReadKey();\n    \n    Console.Clear();\n\n    switch (key.Key)\n    {\n        case ConsoleKey.A:\n            Console.WriteLine(\"A is for 🍎\");\n            break;\n        case ConsoleKey.D:\n            Console.WriteLine(\"D is for 💎\");\n            break;\n        case ConsoleKey.F:\n            Console.WriteLine(\"F is for 👨‍🌾\");\n            break;\n        case ConsoleKey.S:\n            Console.WriteLine(\"S is for 🐍\");\n            break;\n        case ConsoleKey.X:\n            run = false;\n            Console.WriteLine(\"👋 Bye-Bye now\");\n            break;\n        default:\n            Console.WriteLine(\"🤷 I have no clue\");\n            break;\n    }\n}\n\n\n\n\ndotCover allows you to run any dotnet command under coverage analysis, with the most common entry points being exec and test. You can also start code coverage analysis on one or more currently running .NET processes.\nSince this application has no unit tests, we’ll use exec to start our application and then manually attempt to hit each branch. dotCover requires that any process have PDBs available to provide coverage analysis correctly.\nWe’ll use the following command from the command line to start a coverage analysis session on our console application. You’ll want to change the command to point to your project’s dll.\ndotnet dotcover cover-dotnet --ReportType=HTML --TargetArguments=CoverageExample.dll --Output=./\nThis command launches our executable under coverage analysis, waiting for an exit code to stop the session.\n(base) ~/RiderProjects/CoverageExample\ndotnet dotcover cover-dotnet --ReportType=HTML --TargetArguments=CoverageExample.dll --Output=./\n👋 Bye-Bye now\n[JetBrains dotCover] Coverage session finished [5/30/2024 1:25:02PM]\n[JetBrains dotCover] Coverage results post-processing started [5/30/2024 1:25:02PM]\n[JetBrains dotCover] Report generation started [5/30/2024 1:25:02PM]\n[JetBrains dotCover] Report generation finished [5/30/2024 1:25:02PM]\n[JetBrains dotCover] Coverage results post-processing finished [5/30/2024 1:25:02PM]\nOnce completed, we can open our coverage report to see if we’ve hit all the essential parts of our application logic.\n\n\n\n\nVery cool. Let’s talk about some more scenarios.\nNote: You can open dotCover reports directly in ReSharper or dotCover and inspect differences between different runs.\nHelpful Tips and Tricks\nWhile manual testing with coverage analysis is a fun example, you may need more practical testing strategies. The following sections will advise setting up more complex use cases with dotCover.\nDownload OS-specific tooling\nWhile installing the dotCover tooling using the dotnet CLI is convenient for development environments. You can also download an OS-specific version from our download page. The downloaded artifacts can help you build custom Docker images without needing an SDK-based base image or an internet connection to NuGet.\nChange a Container’s Entry Point\nMany folks rely on containerization to provide reliable and repeatable infrastructure for automation testing. As you’ve seen previously, you can use the dotnet-dotcover command to launch your .NET applications. Change your Docker images to use the dotnet-dotcover process as your new EntryPoint and use the --Output flag to write the report to a persistent volume for future retrieval.\nRival Abdrakhmanov describes this process in his blog post, “Diagnostic tools inside Docker container”.\nTerminal Access to Containers\nSometimes, you can log on to running containers and execute the dotnet-dotcover command via orchestration. Terminal access can help you start and stop coverage analysis based on the lifecycle of automated tests such as Selenium or Playwright, which are a breeze to write with JetBrains Aqua.\nMerging Multiple Reports into One\nRegardless of the number of unique processes under coverage analysis, you can always produce a single report. Use the merge command to integrate multiple sources into a single report.\ndotnet dotcover merge --source=Snapshot1.dcvr;Snapshot2.dcvr\nThink about adding an XML Configuration\nYou can manage dotCover settings in XML, making it easier to evolve and fine-tune the coverage analysis process. Create an XML file and pass it as an argument using the --xml flag.\n<ReportParams>\n    <Source><!-- Coverage snapshot file name. --></Source>\n    <Output><!-- Path to the resulting XML report. --></Output>\n    <Output><!-- Path to the resulting JSON report. --></Output>\n    <ReportType>XML</ReportType>\n    <ReportType>JSON</ReportType>\n\n    <!-- Remove auto-implemented properties from report.\n    <HideAutoProperties>True</HideAutoProperties>\n    -->\n\n    <!-- Remove specified files from report. Ant-style patterns are supported here.\n    <ExcludeFileMasks>\n      <Mask>ProjectFolder/**/*.generated.cs</Mask>\n      <Mask>ProjectFolder/**/*.tmp.cs</Mask>\n    </ExcludeFileMasks>\n    -->\n  </ReportParams>    \nDon’t Forget the help command\ndotCover’s built-in help menus offer great advice for every internal command. With the use of the help command, you can quickly figure out what to do, providing the support and confidence you need to use dotCover effectively. \nConclusion\nAs seen in this post, you can add dotCover outside typical unit testing scenarios. Adding automation testing using tools such as Selenium or Playwright doesn’t mean you have to give up on code coverage, especially with the incredible power of dotCover. \nWe hope you found this post helpful. Let us know if you have any questions.\nimage credit: Matthew Henry",
        "dc:creator": "Khalid Abuhakmeh",
        "content": "The ultimate goal of creating a testing strategy is to be confident that you and your team have done their due diligence to deliver a quality product. Test harnesses typically include a mix of unit tests, integration testing, automation, and manual testing, each with advantages and disadvantages for your overall strategy. Determining the effectiveness of [&#8230;]",
        "contentSnippet": "The ultimate goal of creating a testing strategy is to be confident that you and your team have done their due diligence to deliver a quality product. Test harnesses typically include a mix of unit tests, integration testing, automation, and manual testing, each with advantages and disadvantages for your overall strategy. Determining the effectiveness of […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=479413",
        "categories": [
          "net-tools",
          "automated-testing",
          "c",
          "code-coverage",
          "dotcover"
        ],
        "isoDate": "2024-06-20T12:45:54.000Z"
      },
      {
        "creator": "Anastasiia Pogorelova",
        "title": "JetBrains Academy for Teams: How to Pitch It to Your Manager",
        "link": "https://blog.jetbrains.com/education/2024/06/20/pitch-jetbrains-academy-to-your-manager/",
        "pubDate": "Thu, 20 Jun 2024 11:58:20 +0000",
        "content:encodedSnippet": "As a passionate coder using JetBrains Academy, you already know the incredible benefits of our project-based learning platform. Now imagine amplifying those benefits across your entire team. \nHere is why and how you should pitch JetBrains Academy for Teams to your employer.\n\n\n\n    \nFREE TRIAL FOR TEAMS\n                                                    \nWhy professional development is essential\nIn the ever-evolving world of tech, keeping up is essential, but staying ahead is even\nbetter. Here’s why investing in learning can be a game-changer for you and your team: \nClose skill gaps: 45% of engineering companies struggle with skill gaps. Upskilling can bridge these gaps, ensuring your team is prepared for new projects and initiatives.\nEnhance engagement and retention: 94% of employees say they would stay longer at a company that invests in their careers. Investing in training can boost morale and reduce turnover.\nFacilitate smooth transitions: Whether onboarding new hires or preparing for tech stack migrations, continuous learning ensures smoother transitions and internal transfers.\nExplore your company’s professional development opportunities\nBefore you make your pitch, it’s a good idea to сheck out what professional development and learning opportunities your company already offers. This can help you frame your request in a way that aligns with existing initiatives. Maybe your company already has a budget for training or a process for approving new tools and resources.\nFind out who is the right person to talk to about the approval process. Is it your direct manager, the HR department, or someone else? Once you’ve done this, you’ll be ready to make a more informed and strategic pitch.\nStructure your pitch\n1. Highlight what you’re learning and its impact\nStart by sharing your personal experience with JetBrains Academy. Explain what you’ve been learning and how it has benefited your current work or future professional goals. \nFor example:\nMaxim, while working in Product Management, decided to learn Python through JetBrains Academy. He completed the Python with Algorithms for Tech Interviews and Python Backend Developer with Flask tracks. \nThe hands-on projects and personalized study plans made it easy to grasp new concepts and apply them. After a few months, he felt confident enough to apply for the Junior Python Developer role at his company and transferred to the development team.\n2. Explain why JetBrains Academy is the right choice\nSo, why JetBrains Academy? For starters, JetBrains Academy taps into JetBrains’ more than 20 years of experience in creating developer tools. JetBrains is trusted by 90 of the Fortune Global Top 100 companies. Chances are good that your company is already using some of our tools for development, which ensures seamless integration and a familiar environment.\nJetBrains Academy offers project-based learning tracks, which are hosted on the Hyperskill platform and backed by JetBrains tools. This means your team will be able to put new knowledge into practice by creating real-world applications while working with professional tools they’ll use daily.\nNow, let’s get to the part where you’re pitching the idea to the whole team. You could say:\n“Imagine if our whole team had access to this! We could all benefit from the seamless integration with the IDEs we already use. Learning how to use the tools is as important as learning how to code. Plus, each of us would get a personalized study plan, so we could learn at our own pace and level.”\nEmphasize the key features that would be beneficial for your whole team:\n\nIntegration with JetBrains IDEsYour team develops their skills in the same IDE editors they use daily. \nPersonalized learning pathsEach team member receives a tailored study plan, progressing at a pace that reinforces knowledge effectively.\nOrganizational dashboardTrack team progress and comply with privacy policies, ensuring a secure and efficient learning environment.\nSSO and free course creation                         Simplify access with single sign-on and create custom courses to align with your company’s specific needs.\nCertificates of completionMotivate and recognize your team’s achievements with personalized certificates.\n\n\n\n\n\n3. Real-life benefits for the team\nThink about how different parts of your organization could benefit. Here are a few use cases your team lead might consider:\nUpskilling tech support, QA departments, or junior developers.\nGetting ready for new projects that require skills the team currently lacks.\nAssisting non-IT employees in gaining a basic understanding of technical skills, useful for collaboration with tech departments.\n\n\n\n\n\nEncouraging your manager to invest in a team-wide subscription to JetBrains Academy can elevate your entire team’s performance and morale. \nStart with the free 10-day trial with full access to JetBrains Academy for Organizations. \nUnlimited yearly access is $399 per user, including a free owner account to manage your team.\n\n\n\n\n\n\nUse these tips to structure your pitch and highlight the awesome benefits of continuous learning with JetBrains Academy. Good luck!\nIf you have any questions or would like to share your feedback, feel free to leave a comment below or contact us at academy@jetbrains.com.\nHappy learning!\nYour JetBrains Academy team",
        "dc:creator": "Anastasiia Pogorelova",
        "content": "As a passionate coder using JetBrains Academy, you already know the incredible benefits of our project-based learning platform. Now imagine amplifying those benefits across your entire team.&#160; Here is why and how you should pitch JetBrains Academy for Teams to your employer. Why professional development is essential In the ever-evolving world of tech, keeping up [&#8230;]",
        "contentSnippet": "As a passionate coder using JetBrains Academy, you already know the incredible benefits of our project-based learning platform. Now imagine amplifying those benefits across your entire team.  Here is why and how you should pitch JetBrains Academy for Teams to your employer. Why professional development is essential In the ever-evolving world of tech, keeping up […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=485982",
        "categories": [
          "jetbrains-academy",
          "project-based-learning",
          "teams",
          "hyperskill",
          "jetbrains-academy-for-organizations"
        ],
        "isoDate": "2024-06-20T11:58:20.000Z"
      },
      {
        "creator": "Vitaly Bragilevsky",
        "title": "Custom Fleet Plugins for Your Kotlin Codebase",
        "link": "https://blog.jetbrains.com/fleet/2024/06/custom-fleet-plugins-for-your-kotlin-codebase/",
        "pubDate": "Thu, 20 Jun 2024 09:57:33 +0000",
        "content:encodedSnippet": "Fleet is a code editor designed from scratch to be an extendable platform. Many pieces of Fleet’s functionality are implemented as plugins. While the Fleet team is working toward the Fleet Plugins Public Preview, we decided to share some ideas, details, and examples of why and how external developers are supposed to develop their own plugins for Fleet. This blog post is based on the material from the lightning talk at KotlinConf 2024.\nFleet and Kotlin: Available functionality and ideas for customization\nFleet can be used to work with codebases in Kotlin right from the outset. In Smart Mode, you can employ the power of the IntelliJ backend. On top of Fleet, you can rely on the built-in Kotlin Multiplatform tooling or build your projects with Amper. Although all this functionality is already available out of the box, some customizations might also be needed. \nFor example, your project might employ custom resources. A custom view for those resources might be a helpful feature. If your project relies on external tools, it might be tempting to integrate them into Fleet. If you care about codebase quality, you might enjoy having quick access to source code metrics such as the total size of your codebase, cyclomatic complexity, metrics regarding code abstraction complexity, or relevance of code comments to the code itself. Anything like that might be implemented as a custom plugin for Fleet if unavailable elsewhere.\nIn this blog post, we’ll use a running example of a plugin that counts all the top-level functions declared in a source file and reports them via a custom notification:\n\n\n\n\nNote that changes in the source file are propagated to the notification description immediately. Despite being relatively simple (its implementation takes only a hundred lines of code), this plugin helps us see several crucial ideas behind the Fleet platform. \nFleet architecture for plugin developers\nTo support remote development and collaboration, Fleet has a distributed architecture, clearly separating such components as:\nFrontends – the user-facing parts of any Fleet application.\nWorkspace – the part responsible for registering participating components and maintaining a shared state between all of them.\nBackends – headless services responsible for implementing Smart Mode features (such as static analysis, advanced search, code navigation, and more). \nThe same structure is reflected in Fleet plugins:\n\n\n\n\nFleet plugins typically implement frontend and workspace parts, communicating with backend components. The backend’s implementation depends on the chosen service. For example, when working with Kotlin, the backend part of a Fleet plugin should be an IntelliJ Platform plugin.\nFleet itself is implemented in Kotlin, and plugin developers should write their plugin code in Kotlin. Coding for Fleet therefore requires a good working knowledge of Kotlin and its more advanced concepts, such as DSL (domain-specific language) development or structured concurrency with coroutines. \nTo write efficient code for Fleet, developers have to keep the following two key principles in mind:\n1: Fleet is a transactional distributed database with reactive queries (see the other blog post for more internal details).\n2: Fleet embraces coroutines and structured concurrency.\nEvery change in the UI is technically a transaction over the Fleet state database. Every coroutine launched by a plugin is controlled by Fleet and canceled automatically if the plugin is unloaded. Plugins themselves are also a part of Fleet’s state and are managed according to the same rules as everything else in Fleet. Both loading and unloading a plugin are transactions. Let’s see how these principles affect plugins’ source code.\nImplementing a custom plugin: Counting functions in a Kotlin file\nThe Count Functions plugin defines only the frontend part: It contributes an action that displays a notification with the number of top-level functions in a Kotlin source file. The full source code of the plugin is available on GitHub.\nAll the plugin’s code comes from a single Kotlin file and has the following structure:\n\n\n\n\nWe provide the main plugin’s class FunCounter, which is loaded via the JVM’s ServiceLoader, as well as several functions that perform our desired task.\nGradle configuration\nFleet plugins are developed using Gradle. The main Gradle configuration file specifies the plugin’s most important details:\nversion = \"0.1.0\"\n\nfleetPlugin {\n    id = \"pro.bravit.fleetPlugin.funCounter\"\n    metadata {\n        readableName = \"Count Functions\"\n        description = \"This plugin contributes an action...\"\n    }\n   fleetRuntime {\n       version = \"1.35.115\"\n   }\n   pluginDependencies {\n       plugin(\"fleet.kotlin\")\n   }\n}\nWhile we’re targeting a specific Fleet runtime, it’s also possible to set a range of supported versions. Additionally, we’re declaring dependencies on other Fleet plugins. The fleet.kotlin plugin gives us access to packages providing classes and methods to work with an abstract syntax tree (AST) of a Kotlin source file.\nA plugin class\nThe FunCounter class is an entry point to a frontend part of the plugin. It declares several components required for Fleet plugin bookkeeping and also loads all the contributed functionality.\ntypealias FunCounterAPI = Unit\nclass FunCounter : Plugin<FunCounterAPI> {\n\n   companion object : Plugin.Key<FunCounterAPI>\n   override val key: Plugin.Key<FunCounterAPI> = FunCounter\n\n   override fun ContributionScope.load(pluginScope: PluginScope) {\n       notificationCategory(countFunctionsNotification)\n       actions {\n           setupCountFunctionsAction(pluginScope)\n       }\n   }\n}\nIn this example, we’re contributing a notification category and an action. Our plugin doesn’t provide any APIs, so we’ll use Unit as a generic parameter for the Plugin interface. This class is mentioned in the module-info.java as the one providing a plugin implementation:\nmodule pro.bravit.fleetPlugin.funCounter {\n   // module requirements\n   // exports\n   provides fleet.kernel.plugins.Plugin with pro.bravit.fleetPlugin.funCounter.FunCounter;\n}\nNote the pluginScope argument of the load method: It’s a coroutine scope used by Fleet to control all the coroutines launched by a plugin. If a plugin is unloaded, then all of its coroutines are canceled.\nIn the rest of this article, we’ll look at the implementation of the contributed functionality. \nManaging notifications\nManaging notifications in Fleet usually involves the following two components:\nWe define a notification category so that Fleet can manage all the notifications coming from a plugin.\nWe make Fleet show a notification whenever needed.\nApart from that, we’ll also make it update a notification whenever new information becomes available. Although notifications are not the best place to display information that changes with time, these ones are simple enough to serve as an example here.\nThe notification category is a simple data class value:\nval countFunctionsNotification = NotificationCategory(\n   id = NotificationCategoryId(\"CountFunctions\"),\n   readableName = \"Count Functions\"\n)\nCreating a notification is a bit more complicated: \nprivate suspend fun createCountFunctionsNotification(editor: EditorEntity): NotificationEntity {\n   val fileName = editor.layout?.ownerTab()?.displayName() ?: \"Unknown file\"\n   val title = \"Function counter ($fileName)\"\n   val description = \"Number of top-level functions: ?\"\n   return change {\n       val notification = showNotification(\n           countFunctionsNotification,\n           title, NotificationIcon.Info, description,\n           isSticky = true\n       )\n       cascadeDelete(editor, notification)\n       notification\n   }\n}\nThe code above demonstrates several important features of Fleet’s plugin machinery:\nThe Entity suffix found in EditorEntity and NotificationEntity reminds us that we’re working with database entities. These entities are represented by Kotlin values and are managed by Fleet. They can be created, looked up, and updated as needed. Entities from Fleet itself provide us with information about what’s going on in the Fleet instance (for example, we get the name of the loaded file via editor.layout?.ownerTab()?.displayName())\nChanges in the database are executed in transactions. We introduce transactions with change-blocks.\nNote the cascadeDelete call: With it, we can establish relations between entities in the database. In this case, we ask Fleet to delete a freshly created notification when the corresponding editor is deleted.\nThe showNotification function comes from the Fleet Notification API. It creates and displays a notification and then returns a created notification entity so that we can manage it later.\nIn many cases, Fleet plugin code follows the same pattern, manipulating database entities. Entities are created and updated (in transactions), or we just use the information we’ve extracted from them.  \nTo update the notification, we need to execute another transaction:\nprivate suspend fun updateCountFunctionsNotification(\n\t\t\t\t\tnotification: NotificationEntity, \n\t\t\t\t\tnumberOfFunctions: Int) {\n   val description = \"Number of top-level functions: $numberOfFunctions\"\n   change {\n       notification.description = description\n   }\n}\nNote that both functions above are suspend functions. We have to run them from Kotlin coroutines. We’ll get back to this shortly.\nDeclaring actions\nThe main functionality this plugin provides is the Count Functions action. Fleet actions have the following life cycle:\nThey are registered in the ContributionScope.load plugin’s method.\nFleet shows available actions in the Actions list. Depending on the way an action is defined, it can be missing from that list (if the action’s static prerequisites are not met) or it can be grayed out (if the action’s dynamic prerequisites are not met).\nFleet executes an action whenever the corresponding action is triggered by a user. In most cases, actions are executed by launching a Kotlin coroutine that then provides the required functionality. \nThe Fleet Action API provides a way to declare actions. It starts with the actions block containing action definitions. Now, let’s look at setting up the Count Functions action:\nprivate fun ActionRegistrar.setupCountFunctionsAction(pluginScope: PluginScope) {\n   action(id = \"Count-Functions\", name = \"Count Functions\") {\n       val requiredEditor = required(FleetDataKeys.LastEditorEntity)\n       dynamic {\n           val editor = requiredEditor.value\n           if (editor.document.mediaType == MediaType(\"text\", \"kotlin\")) {\n               callback {\n                   pluginScope.launch {\n                       performCountFunctionsAction(editor)\n                   }\n               }\n           }\n       }\n   }\n}\nThe static requirement for this action is the availability of an editor: If there’s no focused editor, the Count Functions action makes no sense. We specify this requirement by requesting FleetDataKeys.LastEditorEntity in the first line of the action block. Then, we use the dynamic block to specify the dynamic requirement. The document loaded in the editor must contain Kotlin source code. If this requirement is met, we provide a callback block to define code that is executed whenever the action is triggered. As explained above, the execution of the action starts with launching a coroutine in the plugin’s coroutine scope. \nThe Fleet Action API and many other Fleet APIs apply Kotlin DSL builders to describe functionality contributed to Fleet. In this example, we’ve used several Action DSL components, including action, dynamic, and callback, to introduce an action definition, specify its dynamic requirements, and provide an implementation, respectively. \nPerforming actions with reactive queries\nThe central piece of the Count Functions plugin implementation is propagating changes in the source code’s AST to the notification’s description:\n\n\n\n\nThe corresponding code comes in the performCountFunctionsAction function:\nprivate suspend fun performCountFunctionsAction(editor: EditorEntity) {\n   withEntities(editor) {\n       val notification = createCountFunctionsNotification(editor)\n       withEntities(notification) {\n           query {\n               editor.document.syntaxes\n                  ?.firstNotNullOfOrNull(ASTContainer::getDataAsync)\n           }.collectLatest { ast ->\n               val numberOfFunctions = countFunctions(ast?.await())\n               updateCountFunctionsNotification(notification, numberOfFunctions)\n           }\n       }\n   }\n}\nNote the following important parts of this function:\nWe use the withEntities function to introduce suspend blocks that depend on the existence of the referenced entities. If the corresponding entity does not exist anymore, the coroutine is canceled. This approach greatly simplifies implementation, as we have a guarantee that these entities exist in these blocks so that we can safely work with them.\nThe query {} block specifies a subscription request to the Fleet database regarding all the changes occurring to the mentioned entities. These requests are the cornerstone of the Fleet Query API: We can subscribe to changes in the database in order to react to them in a timely manner.\nQueries give us something that closely resembles Kotlin’s asynchronous flows. We collect the flow’s elements and process them as needed. In this case, the flow’s element comes as a Kotlin’s Deferred AST value. We’ll then wait for this value to get an up-to-date AST to count all the top-level functions in it.\nWe don’t need to think about the action’s completion. It will be active until it’s canceled as a result of deleting the entities referenced in withEntities or unloading the plugin itself. \nWorking with a Kotlin source code\nThe final piece of functionality is the countFunctions function. It represents a small exercise in navigating through Kotlin’s source code AST:\nprivate fun countFunctions(tree: AST<*>?): Int =\n   tree?.root()\n       ?.children()\n       ?.count {\n           it.type.toString() == \"FUN\"\n       } ?: 0\nTo use the corresponding types and methods, we had to introduce a dependency to the fleet.kotlin plugin earlier. To simplify the implementation, we return 0 for every unexpected value in AST, without thinking too much about error handling. \nConclusion\nFleet plugin APIs and the corresponding tooling are a work in progress. This blog post offers a sneak peek at how plugin developers are supposed to develop their own plugins for Fleet. The whole plugin development experience is based on two principles: (1) Fleet is a distributed database, and (2) Fleet embraces structured concurrency with coroutines. To make it easier to contribute custom functionality, Fleet provides a set of APIs for database entity and transaction management, actions, notifications, and many other things. Stay tuned for the Fleet Plugins Public Preview to develop your own plugins for Fleet!",
        "dc:creator": "Vitaly Bragilevsky",
        "content": "Fleet is a code editor designed from scratch to be an extendable platform. Many pieces of Fleet’s functionality are implemented as plugins. While the Fleet team is working toward the Fleet Plugins Public Preview, we decided to share some ideas, details, and examples of why and how external developers are supposed to develop their own [&#8230;]",
        "contentSnippet": "Fleet is a code editor designed from scratch to be an extendable platform. Many pieces of Fleet’s functionality are implemented as plugins. While the Fleet team is working toward the Fleet Plugins Public Preview, we decided to share some ideas, details, and examples of why and how external developers are supposed to develop their own […]",
        "guid": "https://blog.jetbrains.com/?post_type=fleet&p=481751",
        "categories": [
          "fleet",
          "kotlin",
          "plugin"
        ],
        "isoDate": "2024-06-20T09:57:33.000Z"
      },
      {
        "creator": "Andrey Gushchin",
        "title": "CLion 2024.1.4 Is Out! Nova Now Available by Default for New Users",
        "link": "https://blog.jetbrains.com/clion/2024/06/2024-1-4-update-is-out/",
        "pubDate": "Wed, 19 Jun 2024 16:26:48 +0000",
        "content:encodedSnippet": "Since November 2023, our team has been diligently working on the implementation of the ReSharper C++/Rider C++ language engine. This project was initiated with a clear focus on our users, aiming to address the long-standing performance and quality issues of CLion, which were caused by the usage of the slowly performing engine.\nThe most notable benefits for our users are as follows:\nFaster highlighting speeds, especially in the case of incremental code updates\nA more responsive UI\nFaster Find Usages\nSignificantly fewer freezes and hangs when refactoring\nFaster test indexing\nToday, we’re thrilled to announce that a new, more powerful language engine (also known as Nova) is now available by default for all new users right after the installation!\nIf, after installation, CLion detects no settings from its previous installation, or if a user chooses not to import them, the new language engine will be enabled.\nDownload build 241.18034.45 from our website, through the Toolbox App, as a snap package for Ubuntu, or via a patch from inside the IDE and experience exceptional performance and efficiency.\nDOWNLOAD CLION\nAs promised in the roadmap for the 2024.2 release, we’re still working hard to close the feature gap between the classic language engine and the new one. Once this work is complete, we’ll make the new engine the default option for existing users.\nWe also encourage you to try the ReSharper C++ language engine, which can be enabled via Advanced Settings. To do so, go to Settings / Preferences | Advanced Settings | CLion | Use the ReSharper C++ language engine (CLion Nova).\n\n\n\n\nYour feedback matters to us! Share your ideas in the comments section below or submit them to our issue tracker. We’re also interested in scheduling short calls with our users to learn about specific cases in more detail. Let us know if you’re willing to share your feedback about the new engine by commenting below!\nDOWNLOAD CLION\nYour CLion team\nJetBrains\nThe Drive to Develop",
        "dc:creator": "Andrey Gushchin",
        "content": "Since November 2023, our team has been diligently working on the implementation of the ReSharper C++/Rider C++ language engine. This project was initiated with a clear focus on our users, aiming to address the long-standing performance and quality issues of CLion, which were caused by the usage of the slowly performing engine. The most notable [&#8230;]",
        "contentSnippet": "Since November 2023, our team has been diligently working on the implementation of the ReSharper C++/Rider C++ language engine. This project was initiated with a clear focus on our users, aiming to address the long-standing performance and quality issues of CLion, which were caused by the usage of the slowly performing engine. The most notable […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=485777",
        "categories": [
          "news",
          "releases",
          "clionnova"
        ],
        "isoDate": "2024-06-19T16:26:48.000Z"
      },
      {
        "creator": "Vladislav Minaev",
        "title": "WebStorm 2024.2 EAP Digest #2: New TypeScript Engine, Ability to Run .ts Files, Git and Markdown Improvements",
        "link": "https://blog.jetbrains.com/webstorm/2024/06/webstorm-2024-2-eap2/",
        "pubDate": "Wed, 19 Jun 2024 14:37:43 +0000",
        "content:encodedSnippet": "We’re halfway through the Early Access Program for WebStorm 2024.2! It’s been a while since we walked you through the latest improvements and features in this release, so it’s about time for an update. Read on to learn about the key changes that made it into the EAP builds in the past few weeks. For more information, check out our previous blog posts.\nThe Toolbox App is the easiest way to get the EAP builds and keep both your stable and EAP versions up to date. You can also manually download the EAP builds from our website.\n\nDOWNLOAD WEBSTORM 2024.2 EAP\n\n\n\n\nImportant! WebStorm EAP builds are not fully tested and might be unstable.\nPlease try the latest EAP build and share your feedback with us. You can do so using our issue tracker or by leaving a comment on this blog post.\nKey highlights\nDirectly run and debug TypeScript files without any configuration\nSince EAP3, WebStorm IDE provides the ability to run TypeScript files directly within the IDE without any additional setup. This feature allows users to run and debug TypeScript files directly within the IDE without any additional setup, utilizing the integrated tsx bundler. You can now execute TypeScript files from different entry points, including the file context menu, the Run widget, and the “Current file” configuration for scratch files. The bundled loader eliminates the need for extra dependencies, though it does come with some limitations, such as requiring Node 18 or higher, no type-checking, and limited support for tsconfig.json. You can disable the bundled loader in the configuration settings if it’s not needed.\n\n\n\n\nNew TypeScript engine now enabled by default\nThe WebStorm@next program has introduced a new TypeScript engine, to enhance type evaluation and overall performance. This engine uses the TypeScript language server, improving type inference and compatibility. Here is a case in point.\nThe new engine promises a smoother development experience and ongoing improvements for better support across various frameworks. The new engine has been enabled by default since EAP4. You can toggle it using Settings | Languages & Frameworks | TypeScript > Use types from server option:\n\n\n\n\nImproved commit graph in the Log tab\nTo improve the visual perception of the commit graph in the Log tab of the Git tool window, we’ve refined the color encoding and layout of branch lines. Important branch lines now consistently remain on the left-hand side of the graph and retain their designated colors, making them easier to identify and follow. \nPreviously, commits from important branches were sometimes not correctly laid out or colored because their heads were contained within less important branches. This update ensures that important branches are always clearly visible and consistently colored.\n\n\n\n\nSupport for math syntax in Markdown files \nWebStorm can now natively render mathematical expressions in Markdown files. In WebStorm 2024.2, you can use $ to insert inline math expressions and $$ for code blocks containing math content.\n\n\n\n\nImproved Customize Main Toolbar dialog\nWe’ve redesigned the layout and behavior of the UI elements in the Customize Main Toolbar dialog, making it more intuitive and organized. Now, it’s easier to search for, add, and delete actions in the main toolbar.\n\n\n\n\nOther highlights\nWe’ve resolved the following longstanding issues:\nWEB-64879 WebStorm won’t update JavaScript import paths after moving a directory.\nWEB-59986 Typescript/tsx: Code completion does not honor overrides via module augmentation.\nThat’s it for today. For the full list of improvements available in the latest EAP builds, check out the release notes. Stay tuned for our next EAP digest!",
        "dc:creator": "Vladislav Minaev",
        "content": "We’re halfway through the Early Access Program for WebStorm 2024.2! It’s been a while since we walked you through the latest improvements and features in this release, so it’s about time for an update. Read on to learn about the key changes that made it into the EAP builds in the past few weeks. For [&#8230;]",
        "contentSnippet": "We’re halfway through the Early Access Program for WebStorm 2024.2! It’s been a while since we walked you through the latest improvements and features in this release, so it’s about time for an update. Read on to learn about the key changes that made it into the EAP builds in the past few weeks. For […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=485749",
        "categories": [
          "eap",
          "webstorm-2024-2"
        ],
        "isoDate": "2024-06-19T14:37:43.000Z"
      },
      {
        "creator": "Svetlana Novikova",
        "title": "Let’s Bring Science Into API Documentation",
        "link": "https://blog.jetbrains.com/writerside/2024/06/let-s-bring-science-into-api-documentation/",
        "pubDate": "Wed, 19 Jun 2024 13:23:25 +0000",
        "content:encodedSnippet": "In today’s fast-paced development environment, effective API documentation is not just nice to have; it’s a necessity. This blog post explores how understanding pattern recognition and learning styles can revolutionize the way we create API documentation. By examining the different types of knowledge present in API references and catering to diverse developer learning strategies, we can create documentation that is not only informative but also engaging and intuitive. \nThis blog post stems from Lana Novikova’s presentation at the apidays Paris conference – a central hub and one of the biggest events for all things API. Lana is a product manager for JetBrains Writerside and has over 10 years of experience in technical writing, including API documentation.\n\n\n\n\nPattern recognition\nNeuroscience reveals a fascinating truth: Our brains are expert pattern detectors. We excel at identifying, interpreting, and connecting information, even when encountering it for the first time. This inherent skill, known as pattern recognition, holds significant implications for API documentation, which has a strict structure reflecting the API’s architecture.\nIn their study Patterns of Knowledge in API Reference Documentation, researchers Walid Maalej and Martin P. Robillard conducted an interesting experiment where they scrutinized API reference documentation for JDK 6 and .NET 4.0. Within these documents, they discovered 12 different “knowledge types” (a specific category of information that users may seek when interacting with an API), including functionality and behavior, directives, and purpose and rationale.\nThey also identified a “non-informational” knowledge type, i.e., uninformative, repetitive text that serves no actual purpose. \nThe study highlighted significant variations in the distribution of these knowledge types across the two documentation sets, suggesting that different APIs might prioritize different types of information. For instance, JDK documentation leans toward conceptual knowledge, while its .NET counterpart emphasizes API structure and usage patterns.\n\n\n\n\nAs technical writers, we can harness these findings to create more efficient documentation. Here’s how:\nEvaluate your API documentation through the lens of these knowledge types. Are certain types overrepresented or missing? \nDevelop and use documentation templates tailored to the knowledge type typically associated with specific API elements.\nMany products, including Writerside, offer ready-made templates for document creation. Here, I want to express my appreciation for The Good Docs project, which maintains an excellent template library for various knowledge types. If you’re interested in using or contributing to these templates, you’re most welcome to do so! We are also discussing a partnership with The Good Docs project, and we will soon announce something exciting together. Stay tuned! \nWriterside includes an out-of-the-box API project template that proposes a boilerplate API project structure and includes an API overview, a quick start guide, a reference section, and a changelog page. You can jump-start your API docs project using this template and then tailor it to your specific use case.\n\n\n\n\nLearning styles\nJust like a good teacher adapts their methods to different students, effective API documentation should cater to diverse learning styles. Recognizing these individual preferences is crucial for making the learning process smoother and more enjoyable.\nMichael Meng, Stephanie Steinhardt, and Andreas Schubert’s research reinforces this point. Their study observed how developers interact with unfamiliar APIs, revealing distinct approaches based on individual learning styles. Understanding these approaches can help us tailor documentation to better meet developers’ needs.\nThe research shows that developers spend nearly as much time reading documentation (49%) as they do coding (51%).\nFurthermore, developers tend to rely on API references, recipes, and samples as their go-to resources when using API documentation. This preference indicates that practical usage guides are more valuable to developers than abstract concepts. The study also revealed considerable variation among participants regarding the time allocated to individual content categories, which further emphasizes the diversity in learning styles and information-seeking behaviors.\n\n\n\n\nFrom their findings, Meng, Steinhardt, and Schubert identified three developer personas, each with distinct information-seeking strategies for learning new APIs:\nSystematic learners seek to understand the API and the entities it operates before using it.\nOpportunistic learners aim for the quickest start without prior understanding or documentation review.\nPragmatic learners combine elements of both systematic and opportunistic approaches.\nIt’s important to note that a learning style is not a label or a tool for categorization, but rather an individual’s preferred approach to learning, which we should respect and take into account. Behavioral diversity keeps the ecosystem dynamic, and recognizing it in API documentation could be the key to resonating with a broader audience.\nApplying scientific principles to enhance API documentation\nAs technical writers, we are like surfers trying to catch developers’ waves. We can’t control the waves, but we can understand their rhythms and adapt our strategy to ride them successfully. That’s where scientific principles come into play. Just like the knowledge of wave patterns enhances a surfer’s performance, understanding the principles of pattern recognition and learning styles can transform our approach to API documentation.\nWe can achieve this by:\nProviding comprehensive code examples, catering to opportunistic learners who prefer hands-on exploration.\nOffering layered and in-depth background knowledge, supporting systematic learners who seek a deeper understanding of the underlying concepts.\nFurthermore, features that suit all learning styles and facilitate an understanding of the API are beneficial for everyone. \nIn conclusion, effective API documentation isn’t just about providing accurate information, it’s about making exploration enjoyable and the learning process intuitive. With great API documentation, developers won’t just learn how to use our APIs, they’ll also enjoy the learning experience.\nWriterside lets you mix manual API descriptions with auto-generated references to cater to the needs of any developer persona. You can choose to generate the entire API reference or select specific tags or operations. You can also generate separate pages for API objects or include them on the same pages as the operations to provide all the information in one place.\n\n\n\n\nWhile there may not be specific literature on applying these principles directly to API documentation, many resources tackle elements of learning theory, instructional design, and behavioral theory that can be adapted for technical writing. We’ve highlighted some of them in the resource section below. \nFeel free to don your lab coat and conduct some research yourself! Although it may not always be feasible to replicate the extensive studies mentioned earlier, there are simpler methods that can still provide valuable insights.\nConsider techniques like:\nContent analysis with color coding: Highlight different knowledge types within your documentation to assess their distribution and identify potential gaps or imbalances. We at Writerside are considering delegating this task to AI. If that sounds interesting to you, please upvote this ticket.\nObservational studies: Ask a fellow developer to approach your API documentation as a new user, starting from the API portal. Observe their navigation patterns, information-seeking behavior, and any points of friction they encounter.\nHeatmap analysis: If your analytics system provides heatmaps, analyze user interactions on your API documentation pages to understand which sections receive the most attention, what the happy path is, and which areas might be overlooked.\nThese insights can provide a roadmap for improving your API documentation, leading to a smoother and more enjoyable developer experience.\nRemember, there are no rigid guidelines or definitive solutions in technical writing. However, if there were one golden rule, it’d be this: Write with your users in mind, especially now that you know how their minds work. So, keep experimenting and learning, and most importantly, enjoy the writing process!\nGive your API docs their rightful place with Writerside! Learn more.\nResources for further exploration:\nPatterns of Knowledge in API Reference Documentation by Walid Maalej and Martin P. Robillard: https://www.cs.mcgill.ca/~martin/papers/tse2013a.pdf. \nHow Developers Use API Documentation: An Observation Study by Michael Meng, Stephanie Steinhardt, and Andreas Schubert: https://sigdoc.acm.org/wp-content/uploads/2019/01/CDQ18002_Meng_Steinhardt_Schubert.pdf. \nLearning Science for Instructional Designers: From Cognition to Application by Clark N. Quinn.\nDesign for How People Learn by Julie Dirksen.\nMake It Stick: The Science of Successful Learning by Peter C. Brown, Henry L. Roediger III, and Mark A. McDaniel.",
        "dc:creator": "Svetlana Novikova",
        "content": "In today&#8217;s fast-paced development environment, effective API documentation is not just nice to have; it’s a necessity. This blog post explores how understanding pattern recognition and learning styles can revolutionize the way we create API documentation. By examining the different types of knowledge present in API references and catering to diverse developer learning strategies, we [&#8230;]",
        "contentSnippet": "In today’s fast-paced development environment, effective API documentation is not just nice to have; it’s a necessity. This blog post explores how understanding pattern recognition and learning styles can revolutionize the way we create API documentation. By examining the different types of knowledge present in API references and catering to diverse developer learning strategies, we […]",
        "guid": "https://blog.jetbrains.com/?post_type=writerside&p=485617",
        "categories": [
          "api",
          "documentation",
          "openapi"
        ],
        "isoDate": "2024-06-19T13:23:25.000Z"
      },
      {
        "creator": "Evgenia Verbina",
        "title": "How to Move From pandas to Polars",
        "link": "https://blog.jetbrains.com/pycharm/2024/06/how-to-move-from-pandas-to-polars/",
        "pubDate": "Wed, 19 Jun 2024 11:48:42 +0000",
        "content:encodedSnippet": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas and Polars.\n\n\n\n\nYou’ve probably heard about Polars – it is now firmly in the spotlight in the data science community. \nAre you still using pandas and would like to try out Polars? Are you worried that it will take a lot of effort to migrate your projects from pandas to Polars? You might be concerned that Polars won’t be compatible with your existing pipeline or the other tools you are currently using.\nFear not! In this article, I will answer these questions so you can decide whether to migrate to using Polars or not. I will also provide some tips for those of you who have already decided to migrate.\n\n\n\n\nHow is Polars different from pandas?\nPolars is known for its speed and security, as it is written in Rust and based on Apache Arrow. For details about Polars vs. pandas, you can see our other blog post here. In short, while Polars’ backend architecture is different from pandas’, the creator and community around Polars have tried to maintain a Python API that is very similar to pandas’. At first glance, Polars code is very similar to pandas code. Fun fact – some contributors to pandas are also contributors to Polars. Due to this, the barrier for pandas users to start using Polars is relatively low. However, as it is still a different library, it is worth double-checking the differences between the two.\nAdvantages of using Polars\nHave you struggled when using pandas for a relatively large data set? Do you think pandas is using too much RAM and slowing your computer down while working locally? Polars may solve this problem by using its lazy API. Intermediate steps won’t be executed unless needed, saving memory for the intermediate steps in some cases.\nAnother advantage Polars has is that, since it is written in Rust, it can make use of concurrency much better than pandas. Python is traditionally single-threaded, and although pandas uses the NumPy backend to speed up some operations, it is still mainly written in Python and has certain limitations in its multithreading capabilities.\nTools that make the switch easy\nAs Polars’ popularity grows, there is more and more support for Polars in popular tools for data scientists, including scikit-learn and HoloViz.\nPyCharm, the most popular IDE used by data scientists, provides a similar experience when you work with pandas and Polars. This makes the process of migration smoother. For example, interactive tables allow you to easily see the information about your DataFrame, such as the number of rows and columns.\nTry PyCharm for free\n\n\n\n\nPyCharm has an excellent pagination feature – if you want to see more results per page, you can easily configure that via a drop-down menu:\n\n\n\n\nYou can see the statistical summary for the data when you hover the cursor over the column name:\n\n\n\n\nYou can also sort the data for inspection with a few clicks in the header. You can also use the multi-sorting functionality – after sorting the table once, press and hold ⌥ (macOS) or Alt (Windows) and click on the second column you want the table to be sorted by. For example, here, we can sort by island and bill_length_mm in the table.\n\n\n\n\nTo get more insights from the DataFrame, you can switch to chat view with the icon on the left:\n\n\n\n\nYou can also change how the data is shown in the settings, showing different columns and using different graph types:\n\n\n\n\nIt also helps you to auto-complete methods when using Polars, very handy when you are starting to use Polars and not familiar with all of the methods that it provides. To understand more about full line code completion in JetBrains IDEs, please check out this article. \n\n\n\n\nYou can also access the official documentation quickly by clicking the Polars icon in the top-right corner of the table, which is really handy.\n\n\n\n\nHow to migrate from pandas to Polars\nIf you’re now convinced to migrate to Polars, your final questions might be about the extent of changes needed for your existing code and how easy it is to learn Polars, especially considering your years of experience and muscle memory with pandas.\nSimilarities between pandas and Polars\nPolars provides APIs similar to pandas, most notably the read_csv(), head(), tail(), and describe() for a glance at what the data looks like. It also provides similar data manipulation functions like join() and groupby()/ group_by(), and aggregation functions like mean() and sum().\nBefore going into the migration, let’s look at these code examples in Polars and pandas.\nExample 1 – Calculating the mean score for each class\npandas\nimport pandas as pd\n\ndf_student = pd.read_csv(\"student_info.csv\")\n\nprint(df_student.dtypes)\n\ndf_score = pd.read_csv(\"student_score.csv\")\n\nprint(df_score.head())\n\ndf_class = df_student.join(df_score.set_index(\"name\"), on=\"name\").drop(\"name\", axis=1)\n\ndf_mean_score = df_class.groupby(\"class\").mean()\n\nprint(df_mean_score)\nPolars\nimport polars as pl\n\ndf_student = pl.read_csv(\"student_info.csv\")\n\nprint(df_student.dtypes)\n\ndf_score = pl.read_csv(\"student_score.csv\")\n\nprint(df_score.head())\n\ndf_class = df_student.join(df_score, on=\"name\").drop(\"name\")\n\ndf_mean_score = df_class.group_by(\"class\").mean()\n\nprint(df_mean_score)\nPolars provides similar io methods like read_csv. You can also inspect the dtypes, do data cleaning with drop, and do groupby with aggregation functions like mean.\nExample 2 – Calculating the rolling mean of temperatures\npandas\nimport pandas as pd\n\ndf_temp = pd.read_csv(\"temp_record.csv\", index_col=\"date\", parse_dates=True, dtype={\"temp\":int})\n\nprint(df_temp.dtypes)\n\nprint(df_temp.head())\n\ndf_temp.rolling(2).mean()\nPolars\nimport polars as pl\n\ndf_temp = pl.read_csv(\"temp_record.csv\", try_parse_dates=True, dtypes={\"temp\":int}).set_sorted(\"date\")\n\nprint(df_temp.dtypes)\n\nprint(df_temp.head())\n\ndf_temp.rolling(\"date\", period=\"2d\").agg(pl.mean(\"temp\"))\nReading with date as index in Polars can also be done with read_csv, with a slight difference in the function arguments. Rolling mean (or other types of aggregation) can also be done in Polars.\nAs you can see, these code examples are very similar, with only slight differences. If you are an experienced pandas user, I am sure your journey using Polars will be quite smooth.\nTips for migrating from pandas to Polars\nAs for code that was previously written in pandas, how can you migrate it to Polars? What are the differences in syntax that may trip you up? Here are some tips that may be useful:\nSelecting and filtering\nIn pandas, we use .loc / .iloc and [] to select part of the data in a data frame. However, in Polars, we use .select to do so. For example, in pandas df[\"age\"] or df.loc[:,\"age\"] becomes df.select(\"age\") in Polars.\nIn pandas, we can also create a mask to filter out data. However, in Polars, we will use .filter instead. For example, in pandas df[\"age\" > 18] becomes df.filter(pl.col(\"a\") > 18) in Polars.\nAll of the code that involves selecting and filtering data needs to be rewritten accordingly.\nUse .with_columns instead of .assign\nA slight difference between pandas and Polars is that, in pandas we use .assign to create new columns by applying certain logic and operations to existing columns. In Polars, this is done with .with_columns. For example:\nIn pandas\ndf_rec.assign(\n\n    diameter = lambda df: (df.x + df.y) * 2,\n\n    area = lambda df: df.x * df.y\n\n)\nbecomes\ndf_rec.with_columns(\n\n    diameter = (pl.col(\"x\") + pl.col(\"y\")) * 2,\n\n    area = pl.col(\"x\") * pl.col(\"y\")\n\n)\nin Polars.\n.with_columns can replace groupby\nIn addition to assigning a new column with simple logic and operations, .with_columns offers more advanced capabilities. With a little trick, you can perform operations similar to groupby in pandas by using window functions:\nIn pandas\ndf = pd.DataFrame({\n\n    \"class\": [\"a\", \"a\", \"a\", \"b\", \"b\", \"b\", \"b\"],\n\n    \"score\": [\"80\", \"39\", \"67\", \"28\", \"77\", \"90\", \"44\"],\n\n})\n\ndf[\"avg_score\"] = df.groupby(\"class\")[\"score\"].transform(\"mean\")\nbecomes\ndf.with_columns(\n\n    pl.col(\"score\").mean().over(\"class\").alias(\"avg_score\")\n\n)\nin Polars.\nUse scan_csv instead of read_csv if you can\nAlthough read_csv also works in Polars, by using scan_csv instead of read_csv it will turn to lazy evaluation mode and benefit from the lazy API mentioned above.\nBuilding pipelines properly with lazy API\nIn pandas, we usually use .pipe to build data pipelines. However, since Polars works a bit differently, especially when using the lazy API, we want the pipeline to be executed only once. So, we need to adjust the code accordingly. For example:\nInstead of this pandas code snippet:\ndef discount(df):\n\n    df[\"30_percent_off\"] = df[\"price\"] * 0.7\n\n    return df\n\ndef vat(df):\n\n    df[\"vat\"] = df[\"price\"] * 0.2\n\n    return df\n\ndef total_cost(df):\n\n    df[\"total\"] = df[\"30_percent_off\"] + df[\"vat\"]\n\n    return df\n\n(df\n\n .pipe(discount)\n\n .pipe(vat)\n\n .pipe(total_cost)\n\n)\nWe will have the following one in Polars:\ndef discount(input_col)r:\n\n    return pl.col(input_col).mul(0.7).alias(\"70_percent_off\")\n\ndef vat(input_col):\n\n    return pl.col(input_col).mul(0.2).alias(\"vat\")\n\ndef total_cost(input_col1, input_col2):\n\n    return pl.col(input_col1).add(pl.col(input_col2).alias(\"total\")\n\ndf.with_columns(\n\n    discount(\"price\"),\n\n    val(\"price\"),\n\n    total_cost(\"30_percent_off\", \"vat\"),\n\n)\nMissing data: No more NaN\nDo you find NaN in pandas confusing? There is no NaN in Polars! Since NaN is an object in NumPy and Polars doesn’t use NumPy as the backend, all missing data will now be null instead. For details about null and NaN in Polars, check out the documentation.\nExploratory data analysis with Polars\nPolars provides a similar API to pandas, and with hvPlot, you can easily create a simple plotting function with exploratory data analysis in Polars. Here I will show two examples, one creating simple statistical information from your data set, and the other plotting simple graphs to understand the data.\nSummary statistics from dataset\nWhen using pandas, the most common way to get a summary statistic is to use describe. In Polars, we can also use describe in a similar manner. For example, we have a DataFrame with some numerical data and missing data:\n\n\n\n\nWe can use describe to get summary statistics:\n\n\n\n\nNotice how object types are treated – in this example, the column name gives a different result compared to pandas. In pandas, a column with object type will result in categorical data like this:\n\n\n\n\nIn Polars, the result is similar to numeric data, which makes less sense:\n\n\n\n\nSimple plotting with Polars DataFrame\nTo better visualize of the data, we might want to plot some graphs to help us evaluate the data more efficiently. Here is how to do so with the plot method in Polars.\nFirst of all, since Polars uses hvPlot as backend, make sure that it is installed. You can find the hvPlot User Guide here. Next, since hvPlot will output the graph as an interactive Bokeh graph, we need to use output_notebook from bokeh.plotting to make sure it will show inline in the notebook. Add this code at the top of your notebook:\nfrom bokeh.plotting import output_notebook\n\noutput_notebook()\nAlso, make sure your notebook is trusted. This is done by simply checking the checkbox in the top-right of the display when using PyCharm.\n\n\n\n\nNext, you can use the plot method in Polars. For example, to make a scatter plot, you have to specify the columns to be used as the x- and y-axis, and you can also specify the column to be used as color of the points:\ndf.plot.scatter(x=\"body_mass_g\", y=\"bill_length_mm\", color=\"species\")\nThis will give you a nice plot of the different data points of different penguin species for inspection:\n\n\n\n\nOf course, scatter plots aren’t your only option. In Polars, you can use similar steps to create any type of plot that is supported by hvPlot. For example, hist can be done like this:\ndf.plot.hist(\"body_mass_g\", by=[\"species\",\"sex\"])\n\n\n\n\nFor a full list of plot types supported by hvPlot, you can have a look at the hvPlot reference gallery.\nConclusion\nI hope the information provided here will help you on your way with using Polars. Polars is an open-source project that is actively maintained and developed. If you have suggestions or questions, I recommend reaching out to the Polars community.\nAbout the author\n\nCheuk Ting Ho\nCheuk has been a Data Scientist at various companies – a job that demands high numerical and programming skills, especially in Python. Following her passion for the tech community, Cheuk has been a Developer Advocate for three years. She also contributes to multiple open-source libraries like Hypothesis, Pytest, pandas, Polars, PyO3, Jupyter Notebook, and Django. Cheuk is currently a consultant and trainer at CMD Limes.",
        "dc:creator": "Evgenia Verbina",
        "content": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas and Polars. You’ve probably heard about Polars – it is now firmly in the spotlight in the data science community.&#160; Are you still using pandas and would like to try out Polars? Are you [&#8230;]",
        "contentSnippet": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas and Polars. You’ve probably heard about Polars – it is now firmly in the spotlight in the data science community.  Are you still using pandas and would like to try out Polars? Are you […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=482405",
        "categories": [
          "data-science",
          "tutorials",
          "pandas",
          "polars"
        ],
        "isoDate": "2024-06-19T11:48:42.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "JetBrains to Integrate Google’s Gemini Models Into AI Assistant",
        "link": "https://blog.jetbrains.com/ai/2024/06/jetbrains-to-integrate-google-s-gemini-models-into-ai-assistant/",
        "pubDate": "Tue, 18 Jun 2024 15:00:44 +0000",
        "content:encodedSnippet": "JetBrains is planning to soon leverage Google Cloud’s Vertex AI by integrating Google’s Gemini models into its AI-powered coding tool, AI Assistant. This makes JetBrains AI Assistant the first of its kind to use multiple large language models (LLMs). \nJetBrains AI Assistant \nAI Assistant helps developers stay focused on creative challenges by handling routine tasks. Integrated with JetBrains IDEs, AI Assistant can generate code, suggest fixes, refactor functions, and answer questions – all with contextual understanding. It also generates tests, documentation, and commit messages. Developers report saving up to eight hours per week using JetBrains AI Assistant.\nNew possibilities with Gemini 1.5 Pro and Gemini 1.5 Flash\nWhat truly sets JetBrains AI Assistant apart from other AI assistants is its ability to choose the most suitable LLM for each task. This ensures you can focus on the creative aspects of coding while AI handles the repetitive stuff. \nGemini Pro 1.5 and Flash 1.5 on Google Cloud’s Vertex AI will unlock a number of new use cases for AI Assistant with its long context window, advanced reasoning, and overall impressive performance. Gemini Flash 1.5 will help with the use cases where cost efficiency at high volume and low latency are paramount. \nThese updates will be rolled out in the coming weeks. \nWith JetBrains AI Enterprise, you can choose which LLM your teams use. For other users, JetBrains AI Assistant will automatically select the most suitable LLM for each task.\nPartnership with Google Cloud \nWe see this partnership as a new productivity boost for our users and hope you will try JetBrains AI Assistant to see its power in action. \nHere’s what JetBrains CEO Kirill Skrygan had to say about this exciting collaboration:\nWith the rapid advancement of generative AI, it was crucial for JetBrains to find partners who could not only keep pace with the evolution of the technology but also innovate and create the most capable models. JetBrains has a long and rich history of partnering with Google across many areas. We had an exclusive preview of Gemini Pro and Ultra during the AI hackathon we organized with Google a few months ago, and we quickly saw the enormous potential of these Google models.\nWarren Barkley, Senior Director of Product Management for Vertex AI, Google Cloud, also shared his excitement: \nWe are excited to expand our collaboration with JetBrains, now with the family of Gemini models being supported in JetBrains AI. We have enjoyed working closely with talented developers from JetBrains, and we’ve seen some amazing new AI-driven capabilities they’ve built leveraging some of Gemini models’ unique capabilities, such as the 1M context window and advanced reasoning. We are looking forward to these powerful innovations being put in the hands of millions of developers using JetBrains products globally.\n\n\n\n\n\n    \nTry JetBrains AI Assistant",
        "dc:creator": "Irina Mariasova",
        "content": "JetBrains is planning to soon leverage Google Cloud’s Vertex AI by integrating Google’s Gemini models into its AI-powered coding tool, AI Assistant. This makes JetBrains AI Assistant the first of its kind to use multiple large language models (LLMs).&#160; JetBrains AI Assistant&#160; AI Assistant helps developers stay focused on creative challenges by handling routine tasks. [&#8230;]",
        "contentSnippet": "JetBrains is planning to soon leverage Google Cloud’s Vertex AI by integrating Google’s Gemini models into its AI-powered coding tool, AI Assistant. This makes JetBrains AI Assistant the first of its kind to use multiple large language models (LLMs).  JetBrains AI Assistant  AI Assistant helps developers stay focused on creative challenges by handling routine tasks. […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=484621",
        "categories": [
          "news",
          "ai",
          "ai-assistance",
          "ai-assistant",
          "google",
          "google-cloud"
        ],
        "isoDate": "2024-06-18T15:00:44.000Z"
      },
      {
        "creator": "Maarten Balliauw",
        "title": "Code Style for Better Productivity – Tips and Tools from the Metalama Team",
        "link": "https://blog.jetbrains.com/dotnet/2024/06/18/code-style-for-better-productivity-tips-and-tools-from-the-metalama-team/",
        "pubDate": "Tue, 18 Jun 2024 11:50:10 +0000",
        "content:encodedSnippet": "While it may seem trivial, one of the first steps in creating  a maintainable, team-friendly codebase is reaching a consensus on code style and ensuring its strict enforcement. This includes code formatting (spaces, blank lines, parentheses, and brackets), naming (casings, prefixes, suffixes, etc.), and usage of this, var and more. The ultimate goal? Make running a full automated clean-up on your codebase a routine task.\nThis blog post is a guest post by Gael Fraiteur, founder and lead developer of PostSharp Technologies and Metalama.\nIn this article, I explain the practices we are following on the Metalama team. After all, since we are building tools that help C# developers write better quality code, it’s only logical that our own code is of the highest possible quality. Don’t take my words for granted: our source code is available on GitHub, so you can check for yourself if we live up to our standards.\n\n\n\n\nCode Style As a Philosophy\nYou may be wondering, why all the fuss about code style? Let’s highlight two main reasons:\nA consistent style makes code easier to read. Since developers typically spend 80% of their time reading code, code quality is one of the most important factors for the long-term productivity of your team. There are tools, like ReSharper’s Virtual Formatter, that can help with reading code in a consistent style while you are in the IDE, but that doesn’t solve the issue in other places where code is read, such as your Git repository.\nA uniform code style simplifies pull requests and merges. Have you ever been frustrated by irrelevant changes appearing in a PR diff because a developer ran a code cleanup? This annoyance could’ve been avoided if the code style had been adhered to from the start. Consistent code style also minimizes merge conflicts. One of the objectives of the code quality pipeline is that everybody should be able to reformat the entire codebase without causing a revolution in the team – as long as it’s done in a separate PR of course. In other words, complete reformatting should be a non-event.\nAchieving Consensus on Code Style\nWhile coding style can be a matter of preference, it’s crucial that everyone on the team aligns with a chosen convention. Everyone will have their own opinion, which can easily lead to endless and heated debates. Your main objective here is to get through the consensus-building process as soon and quickly as possible.\nI suggest starting with Microsoft’s common coding convention for C#. It’s a solid starting point, widely accepted by the C# community, but it doesn’t cover every detail.\nAt the beginning of the project, you might still find yourselves in lengthy discussions. Don’t dismiss these debates: it is better to have them sooner than later. Listen to all arguments swiftly, remind everyone that the emphasis is not on the chosen style itself, but on making an unambiguous decision that will be consistently applied. Ensure everyone is aware of the bikeshedding dynamics in collective decision-making. Then, let the most experienced developer make the final call.\nRemember, deciding on a coding style is an iterative process. Don’t spend too much time on this step – you’ll revisit it later.\nConfiguring Your IDE\nNext, you need to configure your coding style in the IDE.\nConfiguring Code Formatting\nTo keep everyone on the same page, store the coding style configuration in the source repository, not in the user profile. This file is typically named .editorconfig. The EditorConfig format is supported by Visual Studio, ReSharper, Rider, and many other editors.\nHere’s how you can use the Code Style editor in Visual Studio:\nYour code style configuration should be thorough and specific, leaving no room for personal interpretations. I recommend setting the severity to warning whenever practically possible. Some formatting rules are brittle because they can be easily broken if you have #if clauses in your code. On our team, we turn off any brittle rules. We only enforce code formatting in the Debug build configuration because having a zero-warning codebase for all platforms and all configurations is very cumbersome for minimal benefits.\nIn addition to .editorconfig, we also use JetBrains’ tools due to their superior code formatting and cleanup capabilities. Here’s the Rider settings dialog:\nIn our team, we set up the same team-shared layer in Rider in each solution to ensure the Rider configuration is stored in the source repository. So instead of the *.sln.DotSettings file, we create a different layer file that can be imported from all solutions in the repository. To access layers, click on the Managed Layers at the left bottom corner of the settings dialog.\nWhen the layer is created, make sure to save your code style changes into the proper layer.\nIt’s a good practice for team members to reset their code style settings in both personal layers.\nFeel free to copy our .editorconfig and CommonStyle.DotSettings.\nConfiguring Code Cleanup\nNow that you have set up your code formatting preferences, the next step is to configure a code cleanup profile.\nI suggest adding all harmless fixers, i.e., those that make minor syntax changes and, most importantly, are 100% bug-free. For example, include Apply parenthesis parameters and Add this qualifications, but not Make field readonly because this analysis sometimes makes mistakes. The ultimate goal is to be able to use your IDE’s clean up feature confidently and without any manual tweaking afterward, so I would avoid any risky fixer.\nUnfortunately, Visual Studio does not allow saving cleanup profiles in source control. Ideally, all team members should use the same profile. While Visual Studio offers a cleanup on save option, I am not using it because it sometimes has bugs, and when it does, you have no way at all to fix them except by opening your file in another editor than Visual Studio.\nRider, on the other hand, allows storing the clean-up profile in the team-shared settings layer. Instead of format-on-save, Rider can automatically perform a code cleanup before each commit. I personally don’t use this feature because I always use Rider for git commits. Besides, since some of my teammates prefer Visual Studio, we need a vendor-neutral solution.\nReporting Warnings for Style Violations\nRemember that our goal is to improve the team’s productivity, both in the short and long terms. If your process is too lax, your code quality will degrade, and you will hamper your long-term productivity. However, if your process is too strict, any build or pull request could become a nightmare.\nTherefore, it’s essential to find a good balance. We’ve found the following compromise to work well for us:\n1. We set the severity of most code style violations to warning. For instance, our coding style requires all instance members to be qualified with this, which translates to the following lines in .editorconfig. Note the warning setting:\ndotnet_style_qualification_for_event = true:warning\ndotnet_style_qualification_for_field = true:warning\ndotnet_style_qualification_for_method = true:warning\ndotnet_style_qualification_for_property = true:warning\n2. To ensure code style is enforced during the build, set the EnforceCodeStyleInBuild property in your Directory.Build.props:\n<EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>\n3. We allow builds with warnings on development machines. Why? Because you certainly don’t want to have a perfectly formatted build every time you want to run your tests or your apps.\n4. However, in CI builds, we treat warnings as errors. This way, code with style issues won’t be merged. To detect continuous integration builds, use the ContinuousIntegrationBuild property or the specific environment variable of your CI pipeline.\n<PropertyGroup Condition=\"'$(ContinuousIntegrationBuild)' == 'true'\">\n  <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n</PropertyGroup>\nWhile this article focuses on code style and conventions, you should also enable code analysis for various rulesets. Check out Overview of .NET source code analysis for more details. We on the Metalama team are also using StyleCop, which is redundant with Rider/Resharper analysis but integrates directly with the C# compiler.\nAvoid being too strict about whitespace violations. Requiring an exact number of whitespaces for a merge could lead to multiple rounds of whitespace fixing commits, which can slow down productivity. Remember, your ultimate goal is to improve productivity, not to achieve a whitespace-perfect codebase.\nPlanning for Periodic Full Cleanups\nAt this point, your development and build pipeline should ensure that PRs are reasonably well-formatted before they undergo code review. While demanding perfection for each PR is impractical, formatting defects can accumulate over time, necessitating a thorough cleanup.\nOn the Metalama team, we perform a comprehensive cleanup immediately after the dev freeze milestone of each release, usually every 6 to 12 weeks. The goal is to periodically restore the codebase to perfect order.\nRunning the cleanup tool should be a non-event. It should be entirely deterministic, non-disruptive, and not cause any frustration.\nYou have two main options:\ndotnet format is a .NET SDK command-line tool that reformats code to align with .editorconfig settings. However, its capabilities are currently limited. For me, “good enough” means being entirely satisfied with the tool’s output, and dotnet format isn’t quite there yet.\nJetBrains offers two types of cleanup tools. You can use the interactive tool in ReSharper or Rider, or ReSharper’s CleanupCode command-line tool. The latter is free and doesn’t require a license for the entire team if all you need is code reformatting. This is what our team uses. You will need at least one license to set up the correct configuration.\nTo ensure all runs produce the same predictable output, create a script that runs the tool with the exact parameters. This output, termed the canonically formatted code, should be your gold standard.\nFrom this point forward, no one should be blamed for reformatting code to its canonical form. Instead, the blame should be placed on the developer merging non-canonical code.\nTaking Code Validation to the Next Level\nIf you’ve successfully implemented all the above steps, congratulations! Your processes now ensure consistent adherence to the code style, making team members more confident in reformatting and refactoring code.\nTo further enhance codebase maintainability and readability, consider validating your codebase with more complex rules. For instance, enforcing that all classes implementing IFactory end with the *Factory suffix, or checking that no one uses the double type in the Billing namespace (you should use int or decimal for any money!). Consider writing architectural unit tests or using our tool Metalama to enforce naming conventions and verify dependencies.\nFor example, here is how you could enforce a naming convention using Metalama:\n[DerivedTypesMustRespectNamingConvention( \"*Factory\" )]\npublic interface IFactory<T>\n{\n   T Create();\n}\nAnd here is how you could prohibit internal members of a namespace from being used from a different namespace:\nnamespace TheNamespace\n{\n    internal class Fabric : NamespaceFabric\n    {\n        public override void AmendNamespace( INamespaceAmender amender )\n        {\n            amender.Verify().InternalsCanOnlyBeUsedFrom( r => r.CurrentNamespace() );\n        }\n    }\n}\nConclusion\nCode formatting is a crucial step towards creating a maintainable, team-friendly codebase. Adhering to and enforcing a particular style creates an environment that improves code-reading productivity, a critical factor considering that developers spend a whopping 80% of their time reading code. Consistent style also reduces merge issues and simplifies pull requests. A clean, well-maintained codebase is a pleasure to work with and the pride of every team member.\nWhat is the code style strategy your team is using? Let us know in the comments!",
        "dc:creator": "Maarten Balliauw",
        "content": "While it may seem trivial, one of the first steps in creating&#160; a maintainable, team-friendly codebase is reaching a consensus on code style and ensuring its strict enforcement. This includes code formatting (spaces, blank lines, parentheses, and brackets), naming (casings, prefixes, suffixes, etc.), and usage of this, var and more. The ultimate goal? Make running [&#8230;]",
        "contentSnippet": "While it may seem trivial, one of the first steps in creating  a maintainable, team-friendly codebase is reaching a consensus on code style and ensuring its strict enforcement. This includes code formatting (spaces, blank lines, parentheses, and brackets), naming (casings, prefixes, suffixes, etc.), and usage of this, var and more. The ultimate goal? Make running […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=482027",
        "categories": [
          "net-tools",
          "code-style",
          "resharper",
          "rider"
        ],
        "isoDate": "2024-06-18T11:50:10.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "article New updates to Planner comment notifications and settings in Planner Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Christine Ruana",
        "title": "Keep Visual Studio automatically updated and secure through Microsoft Update",
        "link": "https://devblogs.microsoft.com/visualstudio/automatically-install-visual-studio-security-updates-through-microsoft-update/",
        "pubDate": "Wed, 19 Jun 2024 17:30:59 +0000",
        "content:encodedSnippet": "Visual Studio is coming to Microsoft Update! We’re pleased to announce that starting in August 2024, developers who are not part of an organization managed by an IT administrator can choose to receive monthly Visual Studio security updates through the Microsoft Update (MU) system on “patch Tuesdays”.  This new update option will be available for Visual Studio 2022, Visual Studio 2019, and Visual Studio 2017. It won’t be available for the Preview channel.\nHow to enable Visual Studio updates through MU\nOpen Windows Settings and go to Windows Update > Advanced Options. If you can toggle the option at the top “Receive updates for other Microsoft products”, then you control your machine’s update policies and can choose to receive updates for Visual Studio and other Microsoft products from MU. We encourage you to enroll in this capability, as it’s by far the easiest way to stay updated and secure on a monthly cadence. If this option is greyed out and you can’t toggle it, this new feature does not apply to your machine (even if it is turned on) because your administrator controls your update policies.\nFigure 1 – Microsoft Update policy that is controlled by the user\nHow it works\nAs with other Visual Studio update methods, Visual Studio must be closed to apply these updates. MU will never force-close Visual Studio to apply the update. Updates delivered through Microsoft Update typically happen during machine idle time at night. Once you have opted into receiving Visual Studio updates through MU, just remember to periodically save your work and close Visual Studio in the evening to make sure that the update isn’t blocked. The next morning, you can verify in the Windows Update history that the latest Visual Studio security update was successfully applied. You can also initiate the update manually on demand by closing Visual Studio and pressing the Windows Update “Check for updates” button.\nOpting out of MU updates for Visual Studio\nIf you have chosen to receive updates for other Microsoft products, but you don’t want to receive Visual Studio updates from MU, you can set this registry key value to opt out:\n[HKLM\\Software\\Policies\\Microsoft\\VisualStudio\\Setup]\n“VSthroughMUUpdatesOptOut”=dword:1\nPreview the experience through July 2024\nYou can try out this new experience through July 2024 in advance of it rolling out in August. To opt in to the preview, toggle “Receive updates for other Microsoft products” to On, and set this registry key value:\n[HKLM\\Software\\Policies\\Microsoft\\VisualStudio\\Setup]\n“PreviewAutomaticUpdates”=dword:1\nStarting in August 2024, this registry key won’t be necessary.\nDuring June and July, the updates will have a “[Microsoft Update Preview]” prefix in the title. These updates are the same update as if you manually installed it from within the Visual Studio IDE.\nFigure 2 – Visual Studio security updates delivered during the Preview timeframe\n \nPlanned improvements\nThere are a few improvements to this experience that we’re working on.\nIf you rollback an update, you can temporarily use the registry key to opt out of MU updates for Visual Studio to prevent the update from automatically being re-applied. We’re working on a reliable experience for this.\nWe’re working to improve the error messages in the Windows Update UI, such as for the condition that the update was cancelled because Visual Studio was open.\nIf you use the “Check for Updates” button in the Windows Update UI, the progress bar will appear to be stuck at 0% until the update finishes, at which point it will immediately go to 100%. Visual Studio updates can take a while, so we ask for your patience while we improve the progress bar.\nWhat about IT Admin managed machines?\nWe’ve delivered a rich set of managed update solutions via Visual Studio Administrator Updates, which allow IT administrators in organizations to deploy monthly Visual Studio security updates by using Windows Update for Business. Over 1500 organizations, including Microsoft, currently use this solution to automatically install Visual Studio security updates on hundreds of thousands of machines each month.\nConclusion\nIf you’re an individual user that controls your own machine’s update policies, we hope you enroll in this solution to automatically receive and install updates for Visual Studio along with other Microsoft products. We welcome your feedback on this Automatic Update experience.\nWe appreciate the time you’ve spent reporting issues/suggestions and hope you continue to give us feedback when using Visual Studio on what you like and what we can improve. Your feedback is critical to help us make Visual Studio the best tool it can be! You can share feedback with us via Developer Community: report any bugs or issues via report a problem and share your suggestions for new features or improvements to existing ones.\nStay connected with the Visual Studio team by following us on YouTube, Twitter, LinkedIn, Twitch and on Microsoft Learn.\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nThe post Keep Visual Studio automatically updated and secure through Microsoft Update appeared first on Visual Studio Blog.",
        "dc:creator": "Christine Ruana",
        "content": "<p>Visual Studio is coming to Microsoft Update! We’re pleased to announce that starting in August 2024, developers who are not part of an organization managed by an IT administrator can choose to receive monthly Visual Studio security updates through the Microsoft Update (MU) system on &#8220;patch Tuesdays&#8221;. </p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/automatically-install-visual-studio-security-updates-through-microsoft-update/\">Keep Visual Studio automatically updated and secure through Microsoft Update</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio is coming to Microsoft Update! We’re pleased to announce that starting in August 2024, developers who are not part of an organization managed by an IT administrator can choose to receive monthly Visual Studio security updates through the Microsoft Update (MU) system on “patch Tuesdays”. \nThe post Keep Visual Studio automatically updated and secure through Microsoft Update appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=249465",
        "categories": [
          "Visual Studio",
          "Microsoft Update",
          "security",
          "Update"
        ],
        "isoDate": "2024-06-19T17:30:59.000Z"
      },
      {
        "creator": "Mark Downie",
        "title": "Easily navigate code delegates while debugging",
        "link": "https://devblogs.microsoft.com/visualstudio/easily-navigate-code-delegates-while-debugging/",
        "pubDate": "Tue, 18 Jun 2024 15:34:17 +0000",
        "content:encodedSnippet": "Delegates are everywhere in modern code; a delegate is a type that represents references to methods with a particular parameter list and return type. Developers use delegates to pass methods as arguments to other methods. One example you may be familiar with is with event handlers. Handlers are methods you can invoke through delegates. Delegates remind me of C++ function pointers, but of course delegates are fully object-oriented.\nThere are a few ways to represent delegates, there is, for example, Func delegate. This generic delegate represents a method that takes one or more parameters and returns a value of a specified type. Here is an example (with a lambda expression):\nFunc<int, int> Multiplier = n => n * 5;\nint val = Multiplier(5);\nConsole.WriteLine(val);\nThe most recent variation of this concept is Action, which provides a more convenient shorthand. When you use Action you do not have to explicitly define a delegate that encapsulates a method with a single parameter. Here is an example:\nAction<string> outputFunc = GetOutputRoutine();\noutputFunc(\"Hello, World!\");\nstatic Action<string> GetOutputRoutine()\n{   return MyConsoleWriter;\n}\nstatic void MyConsoleWriter(string input)\n{   Console.WriteLine(\"Console: {0}\", input);\n}\nSo, this is a nice lesson, but why am I mentioning all this? While I find passing methods around like parameters is convenient when writing code, I also wish it were easier to follow while debugging. You can of course easily step into these methods, but I often want to quickly navigate to the underlying code represented by the delegate before or after stepping, and with the latest updates to Visual Studio 17.10 it’s incredibly easy.\nWhen you pause while debugging, you can hover over any delegate and get a convenient go to source link, here is an example with a Func delegate.\n\nThe Go to Source indicator makes it clear, in this example, that you will get redirected back to the lambda expression.\nPlease note this is not just for managed code situations, this also supports C++ function pointers and std::function.\nWe appreciate your feedback to help us improve Visual Studio and make it the best tool for you! You can share feedback with us via Developer Community: report any bugs or issues via report a problem and share your suggestions for new features or improvements to existing ones.\nPlease stay connected with the Visual Studio Debugger team on Twitter.\n \nThe post Easily navigate code delegates while debugging appeared first on Visual Studio Blog.",
        "dc:creator": "Mark Downie",
        "content": "<p>Delegates are everywhere in modern code; a delegate is a type that represents references to methods with a particular parameter list and return type. Developers use delegates to pass methods as arguments to other methods. One example you may be familiar with is with event handlers.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/easily-navigate-code-delegates-while-debugging/\">Easily navigate code delegates while debugging</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Delegates are everywhere in modern code; a delegate is a type that represents references to methods with a particular parameter list and return type. Developers use delegates to pass methods as arguments to other methods. One example you may be familiar with is with event handlers.\nThe post Easily navigate code delegates while debugging appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=249489",
        "categories": [
          "Visual Studio",
          "Debugging and Diagnostics"
        ],
        "isoDate": "2024-06-18T15:34:17.000Z"
      },
      {
        "creator": "Sinem Akinci",
        "title": "Bosch widely adopts Visual Studio for their C++ remote Linux projects",
        "link": "https://devblogs.microsoft.com/visualstudio/bosch-widely-adopts-visual-studio-for-their-c-remote-linux-projects/",
        "pubDate": "Mon, 17 Jun 2024 16:00:16 +0000",
        "content:encodedSnippet": "The Bosch security camera team was seeking a unified development setup for their team and recently re-evaluated Visual Studio as a solution for their C++ projects and remote Linux development needs. Their experience with Visual Studio 2022 featured notable improvements relevant to their workflows such as seamless GDB integration and CMake/WSL integrations. \nDownload Visual Studio\n\nThe Bosch team had adapted their project to maximize Visual Studio’s capabilities but had one last barrier before being able to widely adopt Visual Studio, which was a need for increased customizability of rsync settings. \nRead more about the Microsoft C++ team’s experience with delivering this functionality to Bosch at the link below: \nBosch widely adopts Visual Studio 2022 after experiencing performance improvements for C++ Linux cross-compilation – C++ Team Blog (microsoft.com)\nConclusion\nWe appreciate the time you’ve spent reporting issues/suggestions and hope you continue to give us feedback when using Visual Studio on what you like and what we can improve. Your feedback is critical to help us make Visual Studio the best tool it can be! You can share feedback with us via Developer Community: report any bugs or issues via report a problem and share your suggestions for new features or improvements to existing ones.   \nStay connected with the Visual Studio team by following us on YouTube, Twitter, LinkedIn, Twitch and on Microsoft Learn.  \nThe post Bosch widely adopts Visual Studio for their C++ remote Linux projects appeared first on Visual Studio Blog.",
        "dc:creator": "Sinem Akinci",
        "content": "<p>The Bosch security camera team was seeking a unified development setup for their team and recently re-evaluated Visual Studio as a solution for their C++ projects and remote Linux development needs. Their experience with Visual Studio 2022 featured notable improvements relevant to their workflows such as seamless GDB and CMake/WSL integrations ...</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/bosch-widely-adopts-visual-studio-for-their-c-remote-linux-projects/\">Bosch widely adopts Visual Studio for their C++ remote Linux projects</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "The Bosch security camera team was seeking a unified development setup for their team and recently re-evaluated Visual Studio as a solution for their C++ projects and remote Linux development needs. Their experience with Visual Studio 2022 featured notable improvements relevant to their workflows such as seamless GDB and CMake/WSL integrations ...\nThe post Bosch widely adopts Visual Studio for their C++ remote Linux projects appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=249367",
        "categories": [
          "Visual Studio"
        ],
        "isoDate": "2024-06-17T16:00:16.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": [
      {
        "creator": "Beejei",
        "title": "Programming in the LLM Era #2 — How",
        "link": "https://beejei.medium.com/programming-in-the-llm-era-2-how-4071ac6e4245?source=rss-9f14ea26d32f------2",
        "pubDate": "Fri, 21 Jun 2024 00:52:51 GMT",
        "content:encodedSnippet": "Programming in the LLM Era #2 — How\nSeamless Collaboration — Dall-E\nEliminating the Understanding Gap Between Development Teams\nWhen developing a service targeted at general users, it’s common knowledge that there are typically Frontend and Backend developers involved. While there are many other categories, focusing on these two can illustrate the point. These roles are often at odds due to their separation of concerns. Even when addressing the same value, such as “efficiency,” their strategies can vastly differ. For a Frontend developer, efficiency means smooth loading and high responsiveness in a web browser. For a Backend developer, efficiency pertains to the server resource usage and cost-effectiveness.\nThese technology-driven areas can be approached in numerous ways, depending on the perspective. However, from a business standpoint, trying to maximize usability and profitability within a reasonable cost often results in vague directives like “cost-effective efficiency.” This makes it challenging to pinpoint specific methodologies, often leading developers to default to familiar technology stacks.\nUsing LLMs can simplify these dilemmas. By providing appropriate conditions and requesting code, the output can serve as a guideline. The key is to create prompts that require minimal technical detail while yielding satisfactory results. This approach ensures that any developer can easily align with the output, fostering better collaboration.\nEliminating the Gap in Code Reviews\nThe second point is about eliminating the gap in traditional code reviews. While code reviews help developers produce higher quality code over time, they can be a source of significant stress. The original author often prefers to stick to their approach, even if there are minor issues. Simple, agreed-upon changes can be made easily, but complex situations make code reviews difficult and time-consuming. This leads to high costs and delays in project completion. Culturally, code reviews can be an opportunity to build camaraderie, but they are still challenging and heavily reliant on individuals’ soft skills.\nBy using LLMs to generate code, everyone can take on the role of a code reviewer. Instead of traditional code review processes, developers can focus on refining the prompts and checking the output. This iterative process allows the team to align more closely with each other’s expectations. As the team reviews and adjusts the prompts together, they maintain a similar vision for the final product. Over time, this repeated collaboration fosters stronger bonds and more effective teamwork.\nBridging the Gap Between Planning and Execution\nThe third point is about closing the gap between planning and execution. Planning is often established by upper management based on the company’s grand vision. However, these plans frequently overlook the day-to-day tasks that need to be done. As plans trickle down to individual teams, they have to contend with ongoing tasks, backlogs, communication with other teams, and internal coordination. This results in increasingly rough plans with declining achievement rates.\nUsing LLMs can help reduce the time needed to reach planned goals. This allows for more detailed planning that aligns with the company’s aspirations. Employees can more easily align with the company’s direction, resulting in a more dynamic organization. With LLMs streamlining the execution of tasks, plans can be more specific and ambitious, fostering a more cohesive and agile workforce.",
        "dc:creator": "Beejei",
        "guid": "https://medium.com/p/4071ac6e4245",
        "categories": [
          "development",
          "chatgpt",
          "llm"
        ],
        "isoDate": "2024-06-21T00:52:51.000Z"
      },
      {
        "creator": "Beejei",
        "title": "Programming in the LLM Era #1 -Why",
        "link": "https://beejei.medium.com/programming-in-the-llm-era-1-why-8965f525c300?source=rss-9f14ea26d32f------2",
        "pubDate": "Thu, 20 Jun 2024 11:59:11 GMT",
        "content:encodedSnippet": "A modern workspace featuring a computer with code — Dall-E generated image\nThe Focus Should Be on Managing Prompts, Not Code\nMany developers find it challenging to create systems integrated with LLMs (Large Language Models) because the outputs from LLMs are not deterministic. However, I believe this very trait is a strength of LLMs, allowing them to adapt to changing realities and produce adaptable code.\nIn traditional development environments, developers strive to meticulously model data and maintain strict types and API information. This rigorous approach can increase the workload and make development more challenging, leading to higher fatigue. But if we shift our focus to managing prompts effectively, and if we can consistently receive improved outputs as code from LLMs, developers can concentrate more on the tasks they want to solve while obtaining high-quality code.\nData Always Exceeds Expectations\nData, unless in a closed environment, always exceeds expectations. Anyone who has modeled database tables has likely encountered user inputs that exceed expected field sizes. Time zones assumed to be fixed for calculations can fail due to political or cultural changes. Exchange rates fluctuate daily, and the cost of cloud resources can change at any moment. Even well-managed data can be unpredictable.\nForms and Excel files, where user freedom is involved, present even greater challenges. They often contain typos or incorrectly copied information, and special characters with unique meanings must be handled cautiously, often using regex functions. In such scenarios, how well can a developer’s data model use real-world information? In the era of LLMs, these issues can be better managed. LLMs can process various forms of unstructured data and respond flexibly to unexpected situations.\nThe Problem of Defining Semantics\nThe incorrect definition of semantics is also a problem. Semantic layers define information for permanent use, but these definitions often fail to capture reality. For example, phone numbers, email addresses, social media account information, names, and genders. Which of these can you be sure will remain unchanged for over 30 years? People are already accustomed to changing personal information.\nMany government agencies’ operations have yet to catch up with this reality, but we must recognize that data and the meanings of the names referring to that data are dynamic. Developers fond of modeling might prefer strong connections like unique keys or foreign keys, but in reality, these values are not always reliable.\nFor instance, it is unclear who might act as your guardian or proxy in a hospital. Transforming ambiguous real-world information into overly rigid definitions in a project is problematic. It is challenging to maintain consensus with such an approach in a constantly changing world.\nThinking Like Humans\nBoth the developers creating programs and the users using them are humans, and thinking like humans is more natural. Hence, future productive activities that require time and effort should be described as naturally as possible in the way humans think to maximize productivity and collaboration.\nDespite the perceived abundance of developers, they are proportionally as rare as endangered species relative to the global population. By changing how developers work, we can unlock immense potential. If we develop technology aligned with human thought processes and improve collaboration efficiency, we can produce better results in less time.",
        "dc:creator": "Beejei",
        "guid": "https://medium.com/p/8965f525c300",
        "categories": [
          "development",
          "llm",
          "chatgpt"
        ],
        "isoDate": "2024-06-20T11:59:11.000Z"
      }
    ]
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "Weights & Biases로  딥러닝 모델 개발 프로세스 기록, 분석, 가시화 및 모델 튜닝하기",
        "link": "http://daddynkidsmakers.blogspot.com/2024/06/weights-biases.html",
        "pubDate": "2024-06-21T07:49:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">딥러닝 모델들을 개발하다 보면, 수많은 종류의 데이터셋, 하이퍼모델 파라메터 튜닝 등으로 인해 관리해야 할 자료들이 매우 복잡해진다는 것을 알게 된다. Weights &amp; Biases (W&amp;B) 회사는 이름 그대로 완벽한 모델 학습을 위해 필요한 Weights &amp; Biases를 모니터링, 관리할 수 있는 로그 도구이다. 즉, 딥러닝 모델 개발자를 위한 프로세스 로그 및 가시화 플랫폼을 제공한다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjv5Nez6boz4ciN-vuWPnZ2hGNHcsaKTJWHNikWDMzWWMnRwrM45ut3Jhuc4AOmZaCFkC8Ma1lxMThj4V2zHtS7v6o-0Zvl7iRxEJUXTYcMndbTIiDnDucqh0SK8mZkaifmVtXOkJU50LJywNaaQChC-M3jWTmoUFkCijzBm8Vk79EZDElUcCtswvAa9SQj\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"540\" data-original-width=\"960\" height=\"225\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjv5Nez6boz4ciN-vuWPnZ2hGNHcsaKTJWHNikWDMzWWMnRwrM45ut3Jhuc4AOmZaCFkC8Ma1lxMThj4V2zHtS7v6o-0Zvl7iRxEJUXTYcMndbTIiDnDucqh0SK8mZkaifmVtXOkJU50LJywNaaQChC-M3jWTmoUFkCijzBm8Vk79EZDElUcCtswvAa9SQj=w400-h225\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">W&amp;B(AI Summer)</div><br /></div><div style=\"text-align: left;\">매우 직관적인 이름을 가진 이 스타트업은 Tensorboard와 유사하지만, 적은 코드로 모델 개발에 많은 통찰력을 준다. 이 W&amp;B(WandB) 라이브러리를 사용하면, 딥러닝 모델 학습 시 지저분하게 붙어 나가는 로그 처리를 매우 간단한 함수 몇 개로 처리할 수 있다. 통합된 데시보드 형태로 다양한 모델 학습 품질 지표를 확인 및 비교할 수 있다. 이외, 학습 모델 하이퍼 파라메터 관리와 튜닝 및 비교 보고서 생성 기능을 제공한다. 로그는 숫자, 텍스트, 이미지 등 다양한 포맷을 지원한다.&nbsp;</div><div style=\"text-align: left;\"><div style=\"text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgUPLogcemSukKiuTCB0j37hxU-YrTgXFc-14TlaMAmZRV4QE02guoMmWYevt_8GB6UUkVH2E4hZj-G0bsJbDLwpo0SkXH4rJLbJMkm1K6ovOlujjnkJ9WHQJxe_vp-TBj6JX0uQ1Yav45quf_KXLviQvRQeiGqYV7IQGBApKUj1c6JhEcmZCB6VkweH6wB\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1042\" data-original-width=\"2033\" height=\"205\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgUPLogcemSukKiuTCB0j37hxU-YrTgXFc-14TlaMAmZRV4QE02guoMmWYevt_8GB6UUkVH2E4hZj-G0bsJbDLwpo0SkXH4rJLbJMkm1K6ovOlujjnkJ9WHQJxe_vp-TBj6JX0uQ1Yav45quf_KXLviQvRQeiGqYV7IQGBApKUj1c6JhEcmZCB6VkweH6wB=w400-h205\" width=\"400\" /></a></div><div style=\"text-align: center;\">W&amp;B 딥러닝 모델 개발 프로세스 가시화 데쉬보드</div><div style=\"text-align: center;\"><br /></div></div><div style=\"text-align: left;\">이 글은 딥러닝 모델 학습 로그, 가시화만 집중해 살펴본다. 글 마무리에 W&amp;B의 개발 배경도 간단히 알아본다.&nbsp;&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><b>사용법</b></div><div style=\"text-align: left;\">다음 링크 방문해 회원 가입한다.&nbsp;</div><div style=\"text-align: left;\"><div><ul style=\"text-align: left;\"><li><a href=\"https://wandb.ai/\">wandb.ai</a>&nbsp;website</li></ul></div></div><div style=\"text-align: left;\">회원 가입하고, 다음 그림과 같이 홈 메뉴에서 키 토큰 값을 얻어 복사한다. 이 키는 wandb API를 사용할 때 필요하다.</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhisx_F16oiOYwWThwiSeVEsU05yDrZ5xDubg_d_68_aF4Y6YstMxGm5o61LriRMIufrYHy8atkCxc_xM4L0f0aOG7P3fK7df5S16qnmHjC8zKW3yc5uwiDaiIFjIs9n-yAAn1GCVRKI7BxQ2N6kcjhHESKg_J_EjSS49PL5nXfE-JxSTEszBdYo74eU-ul\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1087\" data-original-width=\"2023\" height=\"215\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhisx_F16oiOYwWThwiSeVEsU05yDrZ5xDubg_d_68_aF4Y6YstMxGm5o61LriRMIufrYHy8atkCxc_xM4L0f0aOG7P3fK7df5S16qnmHjC8zKW3yc5uwiDaiIFjIs9n-yAAn1GCVRKI7BxQ2N6kcjhHESKg_J_EjSS49PL5nXfE-JxSTEszBdYo74eU-ul=w400-h215\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjRpfUPW0F6yCOaWncGNCfqGYDO7RwQJlXU7WkIKmeLcDkargQwMniBOlfSNTk6TFf0zjxXvfhYaf9PzCce0DytrcBdqbHnAOEXGHWzJJo_GgTU2yz5q__K42vmi8uul_3kB3bR9WQYjMxgtw7E4VhBVjqklUqlAOExtjSpNqRsviRcdrEQEkkyj8QhflBK\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"608\" data-original-width=\"861\" height=\"283\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjRpfUPW0F6yCOaWncGNCfqGYDO7RwQJlXU7WkIKmeLcDkargQwMniBOlfSNTk6TFf0zjxXvfhYaf9PzCce0DytrcBdqbHnAOEXGHWzJJo_GgTU2yz5q__K42vmi8uul_3kB3bR9WQYjMxgtw7E4VhBVjqklUqlAOExtjSpNqRsviRcdrEQEkkyj8QhflBK=w400-h283\" width=\"400\" /></a></div></div></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">터미널에서 다음을 실행해 설치한다.&nbsp;</div><div style=\"text-align: left;\">pip install wandb</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><b>예시 및 결과</b></div><div style=\"text-align: left;\">다음과 같이 cosine 데이터를 학습하는 간단한 코드를 만들어 본다. W&amp;B로 로그를 기록하도록 몇몇 함수를 호출할 것이다. 앞에서 얻은 키 토큰은 다음 코드에 해당 부분에 입력해 준다.</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><div>import os</div><div>from tqdm import tqdm</div><div>import matplotlib.pyplot as plt</div><div>import numpy as np</div><div>import wandb</div><div>import torch</div><div>import torch.nn as nn</div><div>import torch.optim as optim</div><div>from torchviz import make_dot</div><div><br /></div><div>device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')</div><div>print(f\"Using device: {device}\")</div><div><br /></div><div>class SimpleMLP(nn.Module):</div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>def __init__(self):</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>super(SimpleMLP, self).__init__()</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>self.fc1 = nn.Linear(1, 50)</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>self.fc2 = nn.Linear(50, 1)</span></div><div><br /></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>def forward(self, x):</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>x = torch.relu(self.fc1(x))</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>x = self.fc2(x)</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>return x</span></div><div><br /></div><div># Generate cosine dataset</div><div>def generate_cosine_data(num_samples=100):</div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>x = torch.linspace(-2 * torch.pi, 2 * torch.pi, num_samples).view(-1, 1)</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>y = torch.cos(x)</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>return x, y</span></div><div><br /></div><div># Instantiate the model, loss function, and optimizer</div><div>model = SimpleMLP()</div><div>model.to(device)</div><div>criterion = nn.MSELoss()</div><div>optimizer = optim.SGD(model.parameters(), lr=0.01)</div><div><br /></div><div>wandb.login(key='') # 여기에 키값 입력</div><div>api = wandb.Api()</div><div><span style=\"white-space: pre;\">\t</span></div><div>wandb.init(project=\"train_cosin\",&nbsp;</div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>config={</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>\"optimizer\": \"SGD\",</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>\"learning_rate\": 0.01,</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>\"architecture\": \"SimpleMLP\",</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>\"dataset\": \"cosine\"<span style=\"white-space: pre;\">\t\t</span></span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>})</span></div><div>wandb.watch(model, criterion, log=\"all\")&nbsp; # 모든 지표 기록</div><div><br /></div><div># 학습 데이터 생성</div><div>x, y = generate_cosine_data()</div><div>x, y = x.to(device), y.to(device)</div><div><br /></div><div># 학습</div><div>prediction = None</div><div>num_epochs = 10000</div><div>image_files = []</div><div>for epoch in tqdm(range(num_epochs)):</div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span># Forward pass</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>outputs = model(x)</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>prediction = outputs</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>loss = criterion(outputs, y)</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>print(f\"Epoch: {epoch}, Loss: {loss.item()}\")</span></div><div><br /></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span># Backward pass and optimization</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>optimizer.zero_grad()</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>loss.backward()</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>optimizer.step()</span></div><div><span style=\"white-space: pre;\">\t</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span># Visualize the gradients of the first epoch using wandb</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>layer_name = ''</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>grad_cpu = data_cpu = None</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>for name, param in model.named_parameters():</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t</span>if param.requires_grad and param.grad is not None:</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t\t</span>layer_name = name</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t\t</span>grad_cpu = param.grad.detach().cpu()</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t\t</span>data_cpu = param.data.detach().cpu()</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t\t</span>break</span></div><div><br /></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>log_data = {\"epoch\": epoch, \"loss\": loss.item(), \"outputs\": outputs.detach().cpu().numpy(),&nbsp;</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t\t\t</span>f'{layer_name}_gradients': wandb.Histogram(grad_cpu),&nbsp;</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t\t\t\t</span>f'{layer_name}_weights': wandb.Histogram(data_cpu)}</span></div><div><span style=\"white-space: normal;\"><span style=\"white-space: pre;\">\t</span>wandb.log(log_data) # 에폭, 로스, 출력, 기울기, 가중치 로그 기록</span></div></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">학습된 결과는 다음과 같다. 잘 학습된 것을 알 수 있다.</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhmUgttokbUGqTdsJjcqPjNbgHjg_zDL-_EW-q4CEdWLkvFo1iiLQi0NIISQcEJnTZN1mSFq4qvo7HAWJjdwMDNZplPCpatkZUjneq9PSwdNNM1cYz2GDqZaBaKi0zuAIk4Fn2VV-BTVdOZpBJ68ZuenJXu3Ukr1XmFGKMaJS2V0qRwN3c78ICrrfT50t-H\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"524\" data-original-width=\"710\" height=\"236\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhmUgttokbUGqTdsJjcqPjNbgHjg_zDL-_EW-q4CEdWLkvFo1iiLQi0NIISQcEJnTZN1mSFq4qvo7HAWJjdwMDNZplPCpatkZUjneq9PSwdNNM1cYz2GDqZaBaKi0zuAIk4Fn2VV-BTVdOZpBJ68ZuenJXu3Ukr1XmFGKMaJS2V0qRwN3c78ICrrfT50t-H\" width=\"320\" /></a></div><br /></div><div style=\"text-align: left;\"><a href=\"https://wandb.ai/\">W&amp;B 웹사이트</a>&nbsp;<a href=\"https://wandb.ai/mac999/train_cosin?nw=nwusermac999\">나의 프로젝트</a>의 데쉬보드를 확인한다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgcYlozisJNORfC20z29s8kXJerR5zhr-W8kcmyVn3Rd8KwoHsRSMi5RjWZYJbMWRe7VJlxvVI7n9oKhmjBWiDknpxP5j3OjXbSsTBIET6s0PSjh50J7HA2LpovBlGjR5vFf2ccMKQNLu6xjppvs-yQBFBUFv95kxt8FCMoFVF8H8VM19lwVsarHU6iQTWf\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1093\" data-original-width=\"982\" height=\"400\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgcYlozisJNORfC20z29s8kXJerR5zhr-W8kcmyVn3Rd8KwoHsRSMi5RjWZYJbMWRe7VJlxvVI7n9oKhmjBWiDknpxP5j3OjXbSsTBIET6s0PSjh50J7HA2LpovBlGjR5vFf2ccMKQNLu6xjppvs-yQBFBUFv95kxt8FCMoFVF8H8VM19lwVsarHU6iQTWf=w360-h400\" width=\"360\" /></a></div></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">데쉬보드에서는 각 단계 별 기울기, 가중치, 로스 등이 어떻게 변화하는 지를 손쉽게 확인할 수 있다.&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">각 차트 데이터는 엑셀 등 포맷으로 저장 가능하다.&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">로짓 출력값을 확인해 보자. 초기 에폭에서는 학습되지 않은 임의 값을 출력하지만, 학습될 수록 y에 근사한 패턴으로 출력되는 것을 확인할 수 있다.</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjGYbP23V2GXRIM6RJsx3jv0Fv6THAJH1GOFRMJot88Mf3DEtPsByxLUK70jBuJNkCoByPOD4_VkgL8EMaxUTkX4kuX94qR6Ik-tHV9_XUQfM43Y94XIAsYbPY0AAL7m_H1jGMwskruCdVOr6Y0D3p5pjIBFNGMAqfJBfLXCjPKbEq-jhUqEbDjI6Sae2GI\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"931\" data-original-width=\"1936\" height=\"193\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjGYbP23V2GXRIM6RJsx3jv0Fv6THAJH1GOFRMJot88Mf3DEtPsByxLUK70jBuJNkCoByPOD4_VkgL8EMaxUTkX4kuX94qR6Ik-tHV9_XUQfM43Y94XIAsYbPY0AAL7m_H1jGMwskruCdVOr6Y0D3p5pjIBFNGMAqfJBfLXCjPKbEq-jhUqEbDjI6Sae2GI=w400-h193\" width=\"400\" /></a></div>엑셀 출력된 데이터를 보면, cosine 패턴으로 수렴한 예측값이 점차 많아지는 것을 확인할 수 있다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEiesZo-FZEdyAIoH5JTAY3JHPDUHUn6LYVGjZbY_Oie_Fd-FI8oilbxmRY6PUx97kKQVzQ1p-d7el5QwV7wwhSvQe9kLtV7E9fpUzmD3g86_pRLDaOSS7K1GlMIIxcR4rdh0L0VoMf6RqdsAZyOwXkcqeYupGx2PiJpD_0dOG_p_-Gc84gBBfrr-jRtho44\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"403\" data-original-width=\"1580\" height=\"165\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEiesZo-FZEdyAIoH5JTAY3JHPDUHUn6LYVGjZbY_Oie_Fd-FI8oilbxmRY6PUx97kKQVzQ1p-d7el5QwV7wwhSvQe9kLtV7E9fpUzmD3g86_pRLDaOSS7K1GlMIIxcR4rdh0L0VoMf6RqdsAZyOwXkcqeYupGx2PiJpD_0dOG_p_-Gc84gBBfrr-jRtho44=w640-h165\" width=\"640\" /></a></div><br /></div><div style=\"text-align: left;\">다음 경우는 모델의 바이어스 히스토그램 차트 데이터를 보여준다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjPRCnikw_0DGKxAEoa2qmKBGNc1jMbQpewRZBmkfu8ed7XnyvtOVRjU-J6VKhNrgAAGYRUiyJfkDAoH_TFTQvkNTmdDakNm_x7m5wA4ie3Cez95J2iiBKmKWbwU-H54SmmmXQKEXeAw_j38OTaN8WupO_Oc6t2uLCbjANMxpEL0x1o_cySBok6b9_rtVmU\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"866\" data-original-width=\"1926\" height=\"180\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjPRCnikw_0DGKxAEoa2qmKBGNc1jMbQpewRZBmkfu8ed7XnyvtOVRjU-J6VKhNrgAAGYRUiyJfkDAoH_TFTQvkNTmdDakNm_x7m5wA4ie3Cez95J2iiBKmKWbwU-H54SmmmXQKEXeAw_j38OTaN8WupO_Oc6t2uLCbjANMxpEL0x1o_cySBok6b9_rtVmU=w400-h180\" width=\"400\" /></a></div></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">엑셀로 다운로드하면, 모델 학습 데이터의 특정 범위에 속한 값의 누적 데이터를 쉽게 확인할 수 있다.</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjgRmKXub3EWyf0aVUShKw5YjnTmSfF4AGHbGDj_ZIkhBU39GowrMd_gk5bYRbU6iE8TBqe087xOptmJ8Dx0tyHeDgN_or6lhJIrptj5Jw_fZEnCoGKpsBZeaSlsNoJBzHKXGrt3oclMmFmqLprniDE9Hf2QYm2pPRX6fMSMxHiBbguErFTb7I675W1UJLG\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"412\" data-original-width=\"2012\" height=\"133\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjgRmKXub3EWyf0aVUShKw5YjnTmSfF4AGHbGDj_ZIkhBU39GowrMd_gk5bYRbU6iE8TBqe087xOptmJ8Dx0tyHeDgN_or6lhJIrptj5Jw_fZEnCoGKpsBZeaSlsNoJBzHKXGrt3oclMmFmqLprniDE9Hf2QYm2pPRX6fMSMxHiBbguErFTb7I675W1UJLG=w640-h133\" width=\"640\" /></a></div><br /></div><div style=\"text-align: left;\">다음과 같이 리포트 기능을 사용해, 모델 학습 품질을 검토할 수 있다.</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjTOwnKp6beo7YTjT9jdDbMNilOyIk0fFKwYsXCoSSUPF8KmwzGNQAKK9zR7llhnc9t8jwHmOa-rTlVKV4Lckv1bUel9ioe89qM4OTQqZKGbg22Ihy6Gygxf6iZnjOPzvwvYJL2zNmssdd4wFuolGZvUqDtR1Sov4XYYEZegCXoI_Calrl_rPNNZlmgYTq4\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1047\" data-original-width=\"1989\" height=\"210\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjTOwnKp6beo7YTjT9jdDbMNilOyIk0fFKwYsXCoSSUPF8KmwzGNQAKK9zR7llhnc9t8jwHmOa-rTlVKV4Lckv1bUel9ioe89qM4OTQqZKGbg22Ihy6Gygxf6iZnjOPzvwvYJL2zNmssdd4wFuolGZvUqDtR1Sov4XYYEZegCXoI_Calrl_rPNNZlmgYTq4=w400-h210\" width=\"400\" /></a></div><br /></div><div style=\"text-align: left;\"><b>마무리</b></div><div style=\"text-align: left;\">W&amp;B는 루카스 비왈드(Lukas Biewald)가 2017년 설립한 딥러닝 모델 학습 서비스를 제공하는 스타트업이다. 이 회사는 딥러닝 개발자에 필요한 실무적인 도구를 개발한다. 그는 딥러닝 연구 초창기부터 머신러닝 연구자 및 개발자로 있으면서, 실무자의 어려움을 알고 있었다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhfNIluClhuvx4uCwa1PDhLx9ghmMz-NjV8PPaKFT89Najd_lP5N2m-NWLbOToxej3ku-qGu293r1yux9kkhW91g38yIvzaLIbJZssa3IZzC3Sy01_fzoouhFubujYUza_kon9Jg064O8IeFvLu39n6egiptc8tbhGGjZxmrQ5YAoPfu7z-2KZvHZE1XSsC\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"174\" data-original-width=\"431\" height=\"113\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhfNIluClhuvx4uCwa1PDhLx9ghmMz-NjV8PPaKFT89Najd_lP5N2m-NWLbOToxej3ku-qGu293r1yux9kkhW91g38yIvzaLIbJZssa3IZzC3Sy01_fzoouhFubujYUza_kon9Jg064O8IeFvLu39n6egiptc8tbhGGjZxmrQ5YAoPfu7z-2KZvHZE1XSsC=w280-h113\" width=\"280\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><span style=\"text-align: left;\">Lukas Biewald (2018)</span></div><br /></div><div style=\"text-align: left;\">OpenAI는 W&amp;B의 첫번째 고객이다. 이 도구는 머신러닝 개발자의 많은 수작업 프로세스를 자동화하여, 모델 학습 과정을 모니터링, 추적하고, 직관적인 학습 모델 디버깅, 검사 및 설명이 가능하도록 하여, 체계적으로 이 과정을 관리한다. 이 회사는 현재 700,000명 이상의 유료 사용자를 보유하고 있으며, 대부분, OpenAI와 같이 빅테크 기업들 개발자이 사용자이다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgsFnWMhIr_lTqrAA0haBaRCsTOS6xxmQfEGYYj6jC4QkKJwaJE5mAGr2Ty4ZWaaoqFbRSV8g985BoAb2aXUCl8rTU5TUiLrDUSF4uR0_jxPQYsn2ZiHZHfGoEE9f-I9H_RMgPB2-Hqi3qJ6FnIP7obqnPPDAxVtdLu1-gBuN5-Z21zlvYfdw2td98sZmFo\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"1039\" data-original-width=\"1200\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgsFnWMhIr_lTqrAA0haBaRCsTOS6xxmQfEGYYj6jC4QkKJwaJE5mAGr2Ty4ZWaaoqFbRSV8g985BoAb2aXUCl8rTU5TUiLrDUSF4uR0_jxPQYsn2ZiHZHfGoEE9f-I9H_RMgPB2-Hqi3qJ6FnIP7obqnPPDAxVtdLu1-gBuN5-Z21zlvYfdw2td98sZmFo\" width=\"277\" /></a></div></div><div class=\"separator\" style=\"clear: both; text-align: center;\">W&amp;B 창업자 루카드 비왈드 및 핵심 파트너(<a href=\"https://www.bizjournals.com/sanfrancisco/inno/stories/fundings/2023/08/09/san-francisco-ai-observability-startup-raises-50m.html\" style=\"text-align: left;\">San Francisco responsible AI startup Weights &amp; Biases raises $50M - San Francisco Business Times</a>.&nbsp;<a href=\"https://techcrunch.com/2018/05/31/weights-biases-raises-5m-to-build-development-tools-for-machine-learning/\" style=\"text-align: left;\">Weights &amp; Biases raises $5M to build development tools for machine learning</a>)</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div></div><div style=\"text-align: left;\">이 회사는 현재까지 $250M 펀딩 투자받았다. 이 금액은 원화로 3,500억(환율 1400원 기준)에 해당한다. 현재 W&amp;B는 핵심기술을 개발하며, 기업공개를 준비하고 있다.</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEioHJn1YfJFNPs7FXraDQ_vgsVoKe3pqQECyhSLQI1SV_Apmbi7dB5Ph6fMhdjw08IxE2gYtmr9q33OGkCPC5lRxfnDTQiSCTS-Iy0FxUjBCHWWcPZYBSwOwwFMV36cBN5JblG2sehJwJ8gQLIoVql5Li_de-Yy4umb_kCCtNJ6q3jrNHVJASZRZZWniBUQ\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"890\" data-original-width=\"992\" height=\"358\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEioHJn1YfJFNPs7FXraDQ_vgsVoKe3pqQECyhSLQI1SV_Apmbi7dB5Ph6fMhdjw08IxE2gYtmr9q33OGkCPC5lRxfnDTQiSCTS-Iy0FxUjBCHWWcPZYBSwOwwFMV36cBN5JblG2sehJwJ8gQLIoVql5Li_de-Yy4umb_kCCtNJ6q3jrNHVJASZRZZWniBUQ=w400-h358\" width=\"400\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://www.crunchbase.com/organization/weights-biases/company_financials\">Weights &amp; Biases - Funding, Financials, Valuation</a></div><br /></div><div style=\"text-align: left;\"><b>부록: 딥러닝 모델의 해 탐색 과정 탐색 과정 가시화 원리</b></div><div style=\"text-align: left;\">여기서 딥러닝 모델의 해 탐색 과정을 가시화하는 원리를 간략히 살펴보자. 딥러닝 모델은 빅 데이터를 통계적 학습하여, y에 가장 가까운&nbsp;ŷ = w·x + b 를 탐색하는 과정이다. 그러므로, 가장 loss = y - ŷ가 작은 weight w, bais b를 찾는 것이 목적이다. 그러므로, 제대로 해를 탐색하는 지 확인하려면, epoch당 loss와 w:b 차트를 확인하는 것이 중요하다.&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">모델을 구성하는 레이어 유닛이 여러개라면, w:b도 여기에 비례해 많으므로, 원리만 살펴보기 위해, 매우 간단한 ŷ = w·x + b 수식을 학습하는 단순한 딥러닝 모델을 학습한다고 가정한다.</div><div style=\"text-align: left;\"><span style=\"font-size: x-small;\"><br /></span></div><div style=\"text-align: left;\"><div><span style=\"font-size: x-small;\"># 데이터 생성</span></div><div><span style=\"font-size: x-small;\">import numpy as np</span></div><div><span style=\"font-size: x-small;\">import matplotlib.pyplot as plt</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">np.random.seed(20240215)</span></div><div><span style=\"font-size: x-small;\">n = 50</span></div><div><span style=\"font-size: x-small;\">x = np.array(np.random.randn(n), dtype=np.float32)</span></div><div><span style=\"font-size: x-small;\">y = np.array(</span></div><div><span style=\"font-size: x-small;\">&nbsp; 0.75 * x**2 + 1.0 * x + 2.0 + 0.3 * np.random.randn(n),</span></div><div><span style=\"font-size: x-small;\">&nbsp; dtype=np.float32) # 데이터 임의로 생성할 수식</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">plt.scatter(x, y, facecolors='none', edgecolors='b')</span></div><div><span style=\"font-size: x-small;\">plt.scatter(x, y, c='r')</span></div><div><span style=\"font-size: x-small;\">plt.show()</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\"># 데이터 학습 모델 준비</span></div><div><span style=\"font-size: x-small;\">import torch</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">model = torch.nn.Linear(1, 1)</span></div><div><span style=\"font-size: x-small;\">model.weight.data.fill_(6.0)</span></div><div><span style=\"font-size: x-small;\">model.bias.data.fill_(-3.0)</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\"># 손실 함수 준비</span></div><div><span style=\"font-size: x-small;\">loss_fn = torch.nn.MSELoss()</span></div><div><span style=\"font-size: x-small;\">learning_rate = 0.1</span></div><div><span style=\"font-size: x-small;\">epochs = 100</span></div><div><span style=\"font-size: x-small;\">optimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\"># 학습</span></div><div><span style=\"font-size: x-small;\">models = [[model.weight.item(), model.bias.item()]]</span></div><div><span style=\"font-size: x-small;\">for epoch in range(epochs):</span></div><div><span style=\"font-size: x-small;\">&nbsp; inputs = torch.from_numpy(x).requires_grad_().reshape(-1, 1)</span></div><div><span style=\"font-size: x-small;\">&nbsp; labels = torch.from_numpy(y).reshape(-1, 1)</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; optimizer.zero_grad()</span></div><div><span style=\"font-size: x-small;\">&nbsp; outputs = model(inputs)</span></div><div><span style=\"font-size: x-small;\">&nbsp; loss = loss_fn(outputs, labels)</span></div><div><span style=\"font-size: x-small;\">&nbsp; loss.backward()</span></div><div><span style=\"font-size: x-small;\">&nbsp; optimizer.step()</span></div><div><span style=\"font-size: x-small;\">&nbsp; print('epoch {}, loss {}'.format(epoch, loss.item()))</span></div><div><span style=\"font-size: x-small;\">&nbsp; models.append([model.weight.item(), model.bias.item()])</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\"># 모델 예측 값 비교 출력</span></div><div><span style=\"font-size: x-small;\">weight = model.weight.item()</span></div><div><span style=\"font-size: x-small;\">bias = model.bias.item()</span></div><div><span style=\"font-size: x-small;\">plt.scatter(x, y, facecolors='none', edgecolors='b')</span></div><div><span style=\"font-size: x-small;\">plt.plot(</span></div><div><span style=\"font-size: x-small;\">&nbsp; [x.min(), x.max()],</span></div><div><span style=\"font-size: x-small;\">&nbsp; [weight * x.min() + bias, weight * x.max() + bias],</span></div><div><span style=\"font-size: x-small;\">&nbsp; c='r')</span></div><div><span style=\"font-size: x-small;\">plt.show()</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\"># loss map 작성</span></div><div><span style=\"font-size: x-small;\">def get_loss_map(loss_fn, x, y):</span></div><div><span style=\"font-size: x-small;\">&nbsp; \"\"\"Maps the loss function on a 100-by-100 grid between (-5, -5) and (8, 8).\"\"\"</span></div><div><span style=\"font-size: x-small;\">&nbsp; losses = [[0.0] * 101 for _ in range(101)]</span></div><div><span style=\"font-size: x-small;\">&nbsp; x = torch.from_numpy(x)</span></div><div><span style=\"font-size: x-small;\">&nbsp; y = torch.from_numpy(y)</span></div><div><span style=\"font-size: x-small;\">&nbsp; for wi in range(101):</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; for wb in range(101):</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; w = -5.0 + 13.0 * wi / 100.0</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; b = -5.0 + 13.0 * wb / 100.0</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; ywb = x * w + b</span></div><div><span style=\"font-size: x-small;\">&nbsp; &nbsp; &nbsp; losses[wi][wb] = loss_fn(ywb, y).item()</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">&nbsp; return list(reversed(losses))&nbsp; # Because y will be reversed.</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\"># w:b 2차원 loss map 상 해 탐색 path 가시화&nbsp;</span></div><div><span style=\"font-size: x-small;\">import pylab</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">loss_fn = torch.nn.MSELoss()</span></div><div><span style=\"font-size: x-small;\">losses = get_loss_map(loss_fn, x, y)</span></div><div><span style=\"font-size: x-small;\">cm = pylab.get_cmap('terrain')</span></div><div><span style=\"font-size: x-small;\">fig, ax = plt.subplots()</span></div><div><span style=\"font-size: x-small;\">plt.xlabel('Bias')</span></div><div><span style=\"font-size: x-small;\">plt.ylabel('Weight')</span></div><div><span style=\"font-size: x-small;\">i = ax.imshow(losses, cmap=cm, interpolation='nearest', extent=[-5, 8, -5, 8])</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">model_weights, model_biases = zip(*models)</span></div><div><span style=\"font-size: x-small;\">ax.scatter(model_biases, model_weights, c='r', marker='+')</span></div><div><span style=\"font-size: x-small;\">ax.plot(model_biases, model_weights, c='r')</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div><span style=\"font-size: x-small;\">fig.colorbar(i)</span></div><div><span style=\"font-size: x-small;\">plt.show()</span></div><div><span style=\"font-size: x-small;\"><br /></span></div><div>결과는 다음과 같다.&nbsp;</div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjWSWh4nIMWmP2l7Ax4ORoC4mG_yUleJYMyBppC3RuCeUCr7y-CJnYRrhl53p8bXlyTA7CDVUzIGQmgGgTI0FSOdsZtujHsYSCrETRfev1_oT6pjW2oNbknjuH9Qte6hww8eAkBxqGY94Ot8Eq0vplqigY2ip73o75WwdtVsFaSawAfOCx39vNMMSRmpzgL\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"693\" data-original-width=\"828\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjWSWh4nIMWmP2l7Ax4ORoC4mG_yUleJYMyBppC3RuCeUCr7y-CJnYRrhl53p8bXlyTA7CDVUzIGQmgGgTI0FSOdsZtujHsYSCrETRfev1_oT6pjW2oNbknjuH9Qte6hww8eAkBxqGY94Ot8Eq0vplqigY2ip73o75WwdtVsFaSawAfOCx39vNMMSRmpzgL\" width=\"287\" /></a></div></div></div><div style=\"text-align: left;\">loss함수를 바꿔가며, 해가 어떻게 탐색되는 지 확인해 보면, 다음과 같다. 데이터 특성에 따라 적절한 전략을 써야 한다는 것을 알 수 있다.&nbsp;</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgxXZ3UN76RCcrA2QSTNHvcWCAOLTS1kIWTTX4tvN8XcgBZdYiZVI4uomOvRkFptC-Aqocr_99ZVAf8CaVzoe6HAI6LCQ4JcACZxy8Io3LmDm3SbUzg-kmk3VnOwIJuGUuFjln0CgM7dr0OylFKOUdYtaA24iEl5KA4KpW7YFuy_vVA0iFduliVS_R2c_mc\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"721\" data-original-width=\"828\" height=\"348\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgxXZ3UN76RCcrA2QSTNHvcWCAOLTS1kIWTTX4tvN8XcgBZdYiZVI4uomOvRkFptC-Aqocr_99ZVAf8CaVzoe6HAI6LCQ4JcACZxy8Io3LmDm3SbUzg-kmk3VnOwIJuGUuFjln0CgM7dr0OylFKOUdYtaA24iEl5KA4KpW7YFuy_vVA0iFduliVS_R2c_mc=w400-h348\" width=\"400\" /></a></div>이 경우에는 w, b 인 2차원이라 시각화가 쉬웠으나, 3차원 이상이면, 다른 가시화 방법을 사용해야 한다.&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><b>레퍼런스</b></div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://theaisummer.com/weights-and-biases-tutorial/\">A complete Weights and Biases tutorial | AI Summer (theaisummer.com)</a></li><li><a href=\"https://towardsdatascience.com/visualizing-gradient-descent-parameters-in-torch-332a63d1e5c5\">Visualizing Gradient Descent Parameters in Torch | by P.G. Baumstarck | Towards Data Science</a></li><li><a href=\"https://www.geeksforgeeks.org/what-is-automl-in-machine-learning/\">What is AutoML in Machine Learning? - GeeksforGeeks</a></li><li><a href=\"https://cruizbran.medium.com/auto-ml-49f065978c78\">Auto ML. The options | by Ignacio Ruiz | Medium</a></li></ul></div>",
        "contentSnippet": "딥러닝 모델들을 개발하다 보면, 수많은 종류의 데이터셋, 하이퍼모델 파라메터 튜닝 등으로 인해 관리해야 할 자료들이 매우 복잡해진다는 것을 알게 된다. Weights & Biases (W&B) 회사는 이름 그대로 완벽한 모델 학습을 위해 필요한 Weights & Biases를 모니터링, 관리할 수 있는 로그 도구이다. 즉, 딥러닝 모델 개발자를 위한 프로세스 로그 및 가시화 플랫폼을 제공한다. \n\n\nW&B(AI Summer)\n\n매우 직관적인 이름을 가진 이 스타트업은 Tensorboard와 유사하지만, 적은 코드로 모델 개발에 많은 통찰력을 준다. 이 W&B(WandB) 라이브러리를 사용하면, 딥러닝 모델 학습 시 지저분하게 붙어 나가는 로그 처리를 매우 간단한 함수 몇 개로 처리할 수 있다. 통합된 데시보드 형태로 다양한 모델 학습 품질 지표를 확인 및 비교할 수 있다. 이외, 학습 모델 하이퍼 파라메터 관리와 튜닝 및 비교 보고서 생성 기능을 제공한다. 로그는 숫자, 텍스트, 이미지 등 다양한 포맷을 지원한다. \n\n\nW&B 딥러닝 모델 개발 프로세스 가시화 데쉬보드\n\n\n이 글은 딥러닝 모델 학습 로그, 가시화만 집중해 살펴본다. 글 마무리에 W&B의 개발 배경도 간단히 알아본다.  \n\n\n사용법\n다음 링크 방문해 회원 가입한다. \n\n\nwandb.ai website\n\n\n회원 가입하고, 다음 그림과 같이 홈 메뉴에서 키 토큰 값을 얻어 복사한다. 이 키는 wandb API를 사용할 때 필요하다.\n\n\n\n\n\n\n\n터미널에서 다음을 실행해 설치한다. \npip install wandb\n\n\n예시 및 결과\n다음과 같이 cosine 데이터를 학습하는 간단한 코드를 만들어 본다. W&B로 로그를 기록하도록 몇몇 함수를 호출할 것이다. 앞에서 얻은 키 토큰은 다음 코드에 해당 부분에 입력해 준다.\n\n\nimport os\nfrom tqdm import tqdm\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport wandb\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom torchviz import make_dot\n\n\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\nprint(f\"Using device: {device}\")\n\n\nclass SimpleMLP(nn.Module):\n\tdef __init__(self):\n\t\tsuper(SimpleMLP, self).__init__()\n\t\tself.fc1 = nn.Linear(1, 50)\n\t\tself.fc2 = nn.Linear(50, 1)\n\n\n\tdef forward(self, x):\n\t\tx = torch.relu(self.fc1(x))\n\t\tx = self.fc2(x)\n\t\treturn x\n\n\n# Generate cosine dataset\ndef generate_cosine_data(num_samples=100):\n\tx = torch.linspace(-2 * torch.pi, 2 * torch.pi, num_samples).view(-1, 1)\n\ty = torch.cos(x)\n\treturn x, y\n\n\n# Instantiate the model, loss function, and optimizer\nmodel = SimpleMLP()\nmodel.to(device)\ncriterion = nn.MSELoss()\noptimizer = optim.SGD(model.parameters(), lr=0.01)\n\n\nwandb.login(key='') # 여기에 키값 입력\napi = wandb.Api()\n\t\nwandb.init(project=\"train_cosin\", \n\tconfig={\n\t\t\"optimizer\": \"SGD\",\n\t\t\"learning_rate\": 0.01,\n\t\t\"architecture\": \"SimpleMLP\",\n\t\t\"dataset\": \"cosine\"\t\t\n\t})\nwandb.watch(model, criterion, log=\"all\")  # 모든 지표 기록\n\n\n# 학습 데이터 생성\nx, y = generate_cosine_data()\nx, y = x.to(device), y.to(device)\n\n\n# 학습\nprediction = None\nnum_epochs = 10000\nimage_files = []\nfor epoch in tqdm(range(num_epochs)):\n\t# Forward pass\n\toutputs = model(x)\n\tprediction = outputs\n\tloss = criterion(outputs, y)\n\tprint(f\"Epoch: {epoch}, Loss: {loss.item()}\")\n\n\n\t# Backward pass and optimization\n\toptimizer.zero_grad()\n\tloss.backward()\n\toptimizer.step()\n\t\n\t# Visualize the gradients of the first epoch using wandb\n\tlayer_name = ''\n\tgrad_cpu = data_cpu = None\n\tfor name, param in model.named_parameters():\n\t\tif param.requires_grad and param.grad is not None:\n\t\t\tlayer_name = name\n\t\t\tgrad_cpu = param.grad.detach().cpu()\n\t\t\tdata_cpu = param.data.detach().cpu()\n\t\t\tbreak\n\n\n\tlog_data = {\"epoch\": epoch, \"loss\": loss.item(), \"outputs\": outputs.detach().cpu().numpy(), \n\t\t\t\tf'{layer_name}_gradients': wandb.Histogram(grad_cpu), \n\t\t\t\tf'{layer_name}_weights': wandb.Histogram(data_cpu)}\n\twandb.log(log_data) # 에폭, 로스, 출력, 기울기, 가중치 로그 기록\n\n\n학습된 결과는 다음과 같다. 잘 학습된 것을 알 수 있다.\n\n\n\nW&B 웹사이트 나의 프로젝트의 데쉬보드를 확인한다. \n\n\n\n\n데쉬보드에서는 각 단계 별 기울기, 가중치, 로스 등이 어떻게 변화하는 지를 손쉽게 확인할 수 있다. \n\n\n각 차트 데이터는 엑셀 등 포맷으로 저장 가능하다. \n\n\n로짓 출력값을 확인해 보자. 초기 에폭에서는 학습되지 않은 임의 값을 출력하지만, 학습될 수록 y에 근사한 패턴으로 출력되는 것을 확인할 수 있다.\n\n\n엑셀 출력된 데이터를 보면, cosine 패턴으로 수렴한 예측값이 점차 많아지는 것을 확인할 수 있다. \n\n\n\n다음 경우는 모델의 바이어스 히스토그램 차트 데이터를 보여준다. \n\n\n\n\n엑셀로 다운로드하면, 모델 학습 데이터의 특정 범위에 속한 값의 누적 데이터를 쉽게 확인할 수 있다.\n\n\n\n다음과 같이 리포트 기능을 사용해, 모델 학습 품질을 검토할 수 있다.\n\n\n\n마무리\nW&B는 루카스 비왈드(Lukas Biewald)가 2017년 설립한 딥러닝 모델 학습 서비스를 제공하는 스타트업이다. 이 회사는 딥러닝 개발자에 필요한 실무적인 도구를 개발한다. 그는 딥러닝 연구 초창기부터 머신러닝 연구자 및 개발자로 있으면서, 실무자의 어려움을 알고 있었다. \n\n\nLukas Biewald (2018)\n\nOpenAI는 W&B의 첫번째 고객이다. 이 도구는 머신러닝 개발자의 많은 수작업 프로세스를 자동화하여, 모델 학습 과정을 모니터링, 추적하고, 직관적인 학습 모델 디버깅, 검사 및 설명이 가능하도록 하여, 체계적으로 이 과정을 관리한다. 이 회사는 현재 700,000명 이상의 유료 사용자를 보유하고 있으며, 대부분, OpenAI와 같이 빅테크 기업들 개발자이 사용자이다. \n\n\n\nW&B 창업자 루카드 비왈드 및 핵심 파트너(San Francisco responsible AI startup Weights & Biases raises $50M - San Francisco Business Times. Weights & Biases raises $5M to build development tools for machine learning)\n\n\n이 회사는 현재까지 $250M 펀딩 투자받았다. 이 금액은 원화로 3,500억(환율 1400원 기준)에 해당한다. 현재 W&B는 핵심기술을 개발하며, 기업공개를 준비하고 있다.\n\n\nWeights & Biases - Funding, Financials, Valuation\n\n부록: 딥러닝 모델의 해 탐색 과정 탐색 과정 가시화 원리\n여기서 딥러닝 모델의 해 탐색 과정을 가시화하는 원리를 간략히 살펴보자. 딥러닝 모델은 빅 데이터를 통계적 학습하여, y에 가장 가까운 ŷ = w·x + b 를 탐색하는 과정이다. 그러므로, 가장 loss = y - ŷ가 작은 weight w, bais b를 찾는 것이 목적이다. 그러므로, 제대로 해를 탐색하는 지 확인하려면, epoch당 loss와 w:b 차트를 확인하는 것이 중요하다. \n\n\n모델을 구성하는 레이어 유닛이 여러개라면, w:b도 여기에 비례해 많으므로, 원리만 살펴보기 위해, 매우 간단한 ŷ = w·x + b 수식을 학습하는 단순한 딥러닝 모델을 학습한다고 가정한다.\n\n\n\n# 데이터 생성\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\nnp.random.seed(20240215)\nn = 50\nx = np.array(np.random.randn(n), dtype=np.float32)\ny = np.array(\n  0.75 * x**2 + 1.0 * x + 2.0 + 0.3 * np.random.randn(n),\n  dtype=np.float32) # 데이터 임의로 생성할 수식\n\n\nplt.scatter(x, y, facecolors='none', edgecolors='b')\nplt.scatter(x, y, c='r')\nplt.show()\n\n\n# 데이터 학습 모델 준비\nimport torch\n\n\nmodel = torch.nn.Linear(1, 1)\nmodel.weight.data.fill_(6.0)\nmodel.bias.data.fill_(-3.0)\n\n\n# 손실 함수 준비\nloss_fn = torch.nn.MSELoss()\nlearning_rate = 0.1\nepochs = 100\noptimizer = torch.optim.SGD(model.parameters(), lr=learning_rate)\n\n\n# 학습\nmodels = [[model.weight.item(), model.bias.item()]]\nfor epoch in range(epochs):\n  inputs = torch.from_numpy(x).requires_grad_().reshape(-1, 1)\n  labels = torch.from_numpy(y).reshape(-1, 1)\n\n\n  optimizer.zero_grad()\n  outputs = model(inputs)\n  loss = loss_fn(outputs, labels)\n  loss.backward()\n  optimizer.step()\n  print('epoch {}, loss {}'.format(epoch, loss.item()))\n  models.append([model.weight.item(), model.bias.item()])\n\n\n# 모델 예측 값 비교 출력\nweight = model.weight.item()\nbias = model.bias.item()\nplt.scatter(x, y, facecolors='none', edgecolors='b')\nplt.plot(\n  [x.min(), x.max()],\n  [weight * x.min() + bias, weight * x.max() + bias],\n  c='r')\nplt.show()\n\n\n# loss map 작성\ndef get_loss_map(loss_fn, x, y):\n  \"\"\"Maps the loss function on a 100-by-100 grid between (-5, -5) and (8, 8).\"\"\"\n  losses = [[0.0] * 101 for _ in range(101)]\n  x = torch.from_numpy(x)\n  y = torch.from_numpy(y)\n  for wi in range(101):\n    for wb in range(101):\n      w = -5.0 + 13.0 * wi / 100.0\n      b = -5.0 + 13.0 * wb / 100.0\n      ywb = x * w + b\n      losses[wi][wb] = loss_fn(ywb, y).item()\n\n\n  return list(reversed(losses))  # Because y will be reversed.\n\n\n# w:b 2차원 loss map 상 해 탐색 path 가시화 \nimport pylab\n\n\nloss_fn = torch.nn.MSELoss()\nlosses = get_loss_map(loss_fn, x, y)\ncm = pylab.get_cmap('terrain')\nfig, ax = plt.subplots()\nplt.xlabel('Bias')\nplt.ylabel('Weight')\ni = ax.imshow(losses, cmap=cm, interpolation='nearest', extent=[-5, 8, -5, 8])\n\n\nmodel_weights, model_biases = zip(*models)\nax.scatter(model_biases, model_weights, c='r', marker='+')\nax.plot(model_biases, model_weights, c='r')\n\n\nfig.colorbar(i)\nplt.show()\n\n\n결과는 다음과 같다. \n\n\n\nloss함수를 바꿔가며, 해가 어떻게 탐색되는 지 확인해 보면, 다음과 같다. 데이터 특성에 따라 적절한 전략을 써야 한다는 것을 알 수 있다. \n\n\n이 경우에는 w, b 인 2차원이라 시각화가 쉬웠으나, 3차원 이상이면, 다른 가시화 방법을 사용해야 한다. \n\n\n레퍼런스\n\nA complete Weights and Biases tutorial | AI Summer (theaisummer.com)\nVisualizing Gradient Descent Parameters in Torch | by P.G. Baumstarck | Towards Data Science\nWhat is AutoML in Machine Learning? - GeeksforGeeks\nAuto ML. The options | by Ignacio Ruiz | Medium",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-5395180824671467701",
        "isoDate": "2024-06-21T07:49:00.000Z"
      },
      {
        "title": "Lora 기반 LLAMA3 모델 파인튜닝하기",
        "link": "http://daddynkidsmakers.blogspot.com/2024/06/lora-llama3.html",
        "pubDate": "2024-06-21T01:47:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;Lora 기반 LLAMA3 모델 파인튜닝하는 방법을 간략히 보여준다. 이를 통해, 특정 도메인의 LLM 모델 생성 정확도를 향상시킬 수 있다.</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEivO-JPv31asTFlMJ9hxAv_0n63icDloIzHGL81i5REKv4gsbyn76oMOTRCWBgQQvOO_gGs8SkOe1Nr1Mg-yYyPTa228TExPwnArl19qmm5Xhoyp2qIQNV5_2EEs9f7DbU2sNxcHkvMAis1hEy3vARody2nihhXZHv8J_ncm-SmjMFRHlJWnppTxqcDewnt\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"600\" data-original-width=\"1200\" height=\"160\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEivO-JPv31asTFlMJ9hxAv_0n63icDloIzHGL81i5REKv4gsbyn76oMOTRCWBgQQvOO_gGs8SkOe1Nr1Mg-yYyPTa228TExPwnArl19qmm5Xhoyp2qIQNV5_2EEs9f7DbU2sNxcHkvMAis1hEy3vARody2nihhXZHv8J_ncm-SmjMFRHlJWnppTxqcDewnt\" width=\"320\" /></a></div><br /><b>레퍼런스<br /></b><ul style=\"text-align: left;\"><li><a href=\"https://medium.com/@miloszivic99/finetuning-large-language-models-customize-llama-3-8b-for-your-needs-bfe0f43cd239\">Finetuning Large Language Models: Customize Llama 3 8B For Your Needs | by Milos Zivic | Apr, 2024 | Medium</a></li><li><a href=\"https://www.datacamp.com/tutorial/llama3-fine-tuning-locally\">Fine-Tuning Llama 3 and Using It Locally: A Step-by-Step Guide | DataCamp</a></li><li><a href=\"https://huggingface.co/blog/mlabonne/orpo-llama-3\">Fine-tune Llama 3 with ORPO (huggingface.co)</a></li><li><a href=\"https://medium.com/@syed_hasan/finetuning-llama-3-using-reft-representation-fine-tuning-technique-00f4fe1f497c\">Finetuning Llama-3 using ReFT (Representation Fine-Tuning) Technique | by Syed Hasan | Apr, 2024 | Medium</a></li><li><a href=\"https://www.philschmid.de/fsdp-qlora-llama3\">Efficiently fine-tune Llama 3 with PyTorch FSDP and Q-Lora (philschmid.de)</a></li><li><a href=\"https://llama.meta.com/docs/how-to-guides/fine-tuning/\">Fine-tuning | How-to guides (meta.com)</a></li><li><a href=\"https://github.com/ggerganov/llama.cpp/discussions/2904\">Fine tuning GPU memory requirements · ggerganov/llama.cpp · Discussion #2904 (github.com)</a></li><li><a href=\"https://anakin.ai/blog/how-to-fine-tune-llama-3/\">How to Fine-Tune LLaMA 3: An Easy Guide (anakin.ai)</a></li></ul></div>",
        "contentSnippet": "이 글은 Lora 기반 LLAMA3 모델 파인튜닝하는 방법을 간략히 보여준다. 이를 통해, 특정 도메인의 LLM 모델 생성 정확도를 향상시킬 수 있다.\n\n\n\n레퍼런스\n\nFinetuning Large Language Models: Customize Llama 3 8B For Your Needs | by Milos Zivic | Apr, 2024 | Medium\nFine-Tuning Llama 3 and Using It Locally: A Step-by-Step Guide | DataCamp\nFine-tune Llama 3 with ORPO (huggingface.co)\nFinetuning Llama-3 using ReFT (Representation Fine-Tuning) Technique | by Syed Hasan | Apr, 2024 | Medium\nEfficiently fine-tune Llama 3 with PyTorch FSDP and Q-Lora (philschmid.de)\nFine-tuning | How-to guides (meta.com)\nFine tuning GPU memory requirements · ggerganov/llama.cpp · Discussion #2904 (github.com)\nHow to Fine-Tune LLaMA 3: An Easy Guide (anakin.ai)",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-6440721014895432690",
        "isoDate": "2024-06-21T01:47:00.000Z"
      },
      {
        "title": "NLP의 기본 토큰 사전과 임베딩",
        "link": "http://daddynkidsmakers.blogspot.com/2024/06/nlp.html",
        "pubDate": "2024-06-20T02:42:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은 LLM NLP처리의 기본인 토큰 사전과 임베딩에 대한 내용을 간략히 다룬다.&nbsp;<br /></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjdtFPzVXJo-FpMzg755V6l-C1vSvouzcyrxYR9JU7pRd3R7_lQLCUDlMIGQrhcDV5eZ6iddZsgM8FHl5sBSEw2ssbdrGxP_vn8spPvkYHSB7fUVbeWUEXRIYunL2-3V9c3l4RzSDUPiHNmsy_39IyyGhDdqCL-aogV_EY6ENs4DYKH9qk7zzFjriBdVgR-\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"360\" data-original-width=\"480\" height=\"240\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjdtFPzVXJo-FpMzg755V6l-C1vSvouzcyrxYR9JU7pRd3R7_lQLCUDlMIGQrhcDV5eZ6iddZsgM8FHl5sBSEw2ssbdrGxP_vn8spPvkYHSB7fUVbeWUEXRIYunL2-3V9c3l4RzSDUPiHNmsy_39IyyGhDdqCL-aogV_EY6ENs4DYKH9qk7zzFjriBdVgR-\" width=\"320\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">TIKTOKEN 라이브러리</div><br /></div><div style=\"text-align: left;\">토큰과 임베딩은 입력 시퀀스에 대한 출력을 학습, 예측할 때 훈련의 전제가 되는 LLM의 기본조건이다. 이 조건이 달라지면, 제대로 된 예측, 패턴 계산 결과를 얻을 수 없다. 그러므로, LLM을 사용하기 전에 미리 이 점을 명확히 확인해야 한다. 만약, 이런 전제가 만족될 수 없다면, 토큰 개발, 파인튜닝 및 사전 모델학습이 필요하다.&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGJkuNmb9VoaDwHakxUDZ7fTa7IJ2ToAqTyozvTunuRes3oE_4pIUzTBbGZTyypHvexXaLGwB1h0sUWwck0VTIH-VwU5qjk52k-H1179vy6bxOJgyMnJJ7j46MAyHh2dZz5BkARRHARkp4k60JYncGrvkKDV2NWvGdpm62j6omjW6z9PxCVjz_iqcgSG0F/s364/a16.JPG\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"241\" data-original-width=\"364\" height=\"171\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGJkuNmb9VoaDwHakxUDZ7fTa7IJ2ToAqTyozvTunuRes3oE_4pIUzTBbGZTyypHvexXaLGwB1h0sUWwck0VTIH-VwU5qjk52k-H1179vy6bxOJgyMnJJ7j46MAyHh2dZz5BkARRHARkp4k60JYncGrvkKDV2NWvGdpm62j6omjW6z9PxCVjz_iqcgSG0F/w257-h171/a16.JPG\" width=\"257\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">숫자 토큰화 결과</div><br /></div><div style=\"text-align: left;\">LLM 파인튜닝이나 RAG 시 토큰 사전이 없으면, 제대로 학습되지 않는다. 입력 시퀀스의 토큰이 사전에 없으면, 토큰은 분리된다. 분리된 토큰들은 각자 다른 맥락을 가지도록 학습된다. 토큰을 추가하거나, 하나로 합치는 것을 고려할 필요가 있다.</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">다음은 이를 고려한 코드를 보여준다.&nbsp;</div><div style=\"text-align: left;\"><div>from transformers import AutoTokenizer, AutoModelForCausalLM</div><div><br /></div><div># Load pre-trained model and tokenizer</div><div>tokenizer = AutoTokenizer.from_pretrained('model-name')</div><div>model = AutoModelForCausalLM.from_pretrained('model-name')</div><div><br /></div><div># Add new tokens to the tokenizer</div><div>new_tokens = ['newword1', 'newword2']</div><div>tokenizer.add_tokens(new_tokens)</div><div><br /></div><div># Resize model embeddings to match the new tokenizer size</div><div>model.resize_token_embeddings(len(tokenizer))</div><div><br /></div><div># Fine-tune the model with the updated tokenizer and new tokens</div><div># (fine-tuning code here)</div><div><br /></div><div><div>from tokenizers import Tokenizer, models, pre_tokenizers, trainers</div><div><br /></div><div># Initialize a tokenizer</div><div>tokenizer = Tokenizer(models.BPE())</div><div><br /></div><div># Use a pre-tokenizer to combine specific sequences</div><div>tokenizer.pre_tokenizer = pre_tokenizers.Whitespace()</div><div><br /></div><div># Custom pre-tokenizer function</div><div>def custom_pre_tokenizer(sequence):</div><div>&nbsp; &nbsp; # Define rules to combine tokens, e.g., \"new word\" -&gt; \"newword\"</div><div>&nbsp; &nbsp; combined_sequence = sequence.replace(\"new word\", \"newword\")</div><div>&nbsp; &nbsp; return combined_sequence</div><div><br /></div><div># Train the tokenizer with the custom pre-tokenizer</div><div>trainer = trainers.BpeTrainer()</div><div>tokenizer.train(files=[\"path/to/training/data.txt\"], trainer=trainer, pre_tokenizer=custom_pre_tokenizer)</div><div><br /></div><div># Save and use the customized tokenizer</div><div>tokenizer.save(\"path/to/customized_tokenizer.json\")</div></div><div><br /></div></div><div style=\"text-align: left;\"><b><br /></b></div><div style=\"text-align: left;\"><b>레퍼런스</b></div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://medium.com/@ilyesrezgui46/enhance-your-gpt-experience-tiktoken-unveiled-free-token-counting-for-prompts-with-python-code-51851883825b\">Enhance Your GPT Experience: Tiktoken Unveiled — Free Token Counting for Prompts (with Python Code!) | by Ilyes Rezgui | Medium</a></li><li><a href=\"https://python.langchain.com/v0.1/docs/modules/data_connection/document_transformers/split_by_token/\">Split by tokens | 🦜️🔗 LangChain</a></li><li><a href=\"https://huggingface.co/tomaszki/llama-3-a/raw/main/vocab.json\">huggingface.co/tomaszki/llama-3-a/raw/main/vocab.json</a></li><li><a href=\"https://wikidocs.net/234002\">TokenTextSplitter</a></li><li><a href=\"https://medium.com/@pierre_guillou/nlp-how-to-add-a-domain-specific-vocabulary-new-tokens-to-a-subword-tokenizer-already-trained-33ab15613a41\">NLP | How to add a domain-specific vocabulary (new tokens) to a subword tokenizer already trained like BERT WordPiece | by Pierre Guillou | Medium</a></li><li><a href=\"https://huggingface.co/blog/lmassaron/fine-tuning-llms-on-kaggle-notebooks\">Fine-tuning a large language model on Kaggle Notebooks (or even on your own computer) for solving real-world tasks (huggingface.co)</a></li><li><a href=\"https://medium.com/@gobishangar11/llama-2-a-detailed-guide-to-fine-tuning-the-large-language-model-8968f77bcd15\">LLaMA 2: A Detailed Guide to Fine-Tuning the Large Language Model | by Gobi Shangar | Medium</a></li><li><a href=\"https://tuanatran.medium.com/fine-tuning-large-language-model-with-hugging-face-pytorch-adce80dce2ad\">Fine-Tuning Large Language Model with Hugging Face &amp; PyTorch | by Tuan Tran | Medium</a></li></ul></div>",
        "contentSnippet": "이 글은 LLM NLP처리의 기본인 토큰 사전과 임베딩에 대한 내용을 간략히 다룬다. \n\n\n\n\nTIKTOKEN 라이브러리\n\n토큰과 임베딩은 입력 시퀀스에 대한 출력을 학습, 예측할 때 훈련의 전제가 되는 LLM의 기본조건이다. 이 조건이 달라지면, 제대로 된 예측, 패턴 계산 결과를 얻을 수 없다. 그러므로, LLM을 사용하기 전에 미리 이 점을 명확히 확인해야 한다. 만약, 이런 전제가 만족될 수 없다면, 토큰 개발, 파인튜닝 및 사전 모델학습이 필요하다. \n\n\n\n숫자 토큰화 결과\n\nLLM 파인튜닝이나 RAG 시 토큰 사전이 없으면, 제대로 학습되지 않는다. 입력 시퀀스의 토큰이 사전에 없으면, 토큰은 분리된다. 분리된 토큰들은 각자 다른 맥락을 가지도록 학습된다. 토큰을 추가하거나, 하나로 합치는 것을 고려할 필요가 있다.\n\n\n다음은 이를 고려한 코드를 보여준다. \n\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\n\n\n# Load pre-trained model and tokenizer\ntokenizer = AutoTokenizer.from_pretrained('model-name')\nmodel = AutoModelForCausalLM.from_pretrained('model-name')\n\n\n# Add new tokens to the tokenizer\nnew_tokens = ['newword1', 'newword2']\ntokenizer.add_tokens(new_tokens)\n\n\n# Resize model embeddings to match the new tokenizer size\nmodel.resize_token_embeddings(len(tokenizer))\n\n\n# Fine-tune the model with the updated tokenizer and new tokens\n# (fine-tuning code here)\n\n\nfrom tokenizers import Tokenizer, models, pre_tokenizers, trainers\n\n\n# Initialize a tokenizer\ntokenizer = Tokenizer(models.BPE())\n\n\n# Use a pre-tokenizer to combine specific sequences\ntokenizer.pre_tokenizer = pre_tokenizers.Whitespace()\n\n\n# Custom pre-tokenizer function\ndef custom_pre_tokenizer(sequence):\n    # Define rules to combine tokens, e.g., \"new word\" -> \"newword\"\n    combined_sequence = sequence.replace(\"new word\", \"newword\")\n    return combined_sequence\n\n\n# Train the tokenizer with the custom pre-tokenizer\ntrainer = trainers.BpeTrainer()\ntokenizer.train(files=[\"path/to/training/data.txt\"], trainer=trainer, pre_tokenizer=custom_pre_tokenizer)\n\n\n# Save and use the customized tokenizer\ntokenizer.save(\"path/to/customized_tokenizer.json\")\n\n\n\n\n\n레퍼런스\n\nEnhance Your GPT Experience: Tiktoken Unveiled — Free Token Counting for Prompts (with Python Code!) | by Ilyes Rezgui | Medium\nSplit by tokens | 🦜️🔗 LangChain\nhuggingface.co/tomaszki/llama-3-a/raw/main/vocab.json\nTokenTextSplitter\nNLP | How to add a domain-specific vocabulary (new tokens) to a subword tokenizer already trained like BERT WordPiece | by Pierre Guillou | Medium\nFine-tuning a large language model on Kaggle Notebooks (or even on your own computer) for solving real-world tasks (huggingface.co)\nLLaMA 2: A Detailed Guide to Fine-Tuning the Large Language Model | by Gobi Shangar | Medium\nFine-Tuning Large Language Model with Hugging Face & PyTorch | by Tuan Tran | Medium",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-5784072672755351339",
        "isoDate": "2024-06-20T02:42:00.000Z"
      },
      {
        "title": "LLM 의 통계적 패턴 예측성과 한계에 대한 연구",
        "link": "http://daddynkidsmakers.blogspot.com/2024/06/llm_16.html",
        "pubDate": "2024-06-16T09:43:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">요즘 AI 연구자들이 LLM에 대한 잠재력을 연구하고 있는 분위기가 있는 데, 마침 Google, DeepMind 연구팀으로 부터 관련된 논문이 나왔다. 이 연구는 LLM을 AGI와 같은 Multi function AI로 사용할 수 있는 지에 대한 근본적 성찰과 한계를 밝히는 연구이다.</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEhkZAT4S2BtFsDND2hl8gLz-eAUfkevmY0zCf4BsDZHdsn__KkJAzVQ1o5T4SrkdfaOUpXNkmY9Eg2eFB1T6FJvJArp4Y4p6lC4wZg88l1yBW1ypVa7JlbyxQFIqb3KnOY6OquDhbO38eXeSI4qpXYjPoI95hX2_SaWqOXxmrTXYYUTod8FowZbZEB_rvQT\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"263\" data-original-width=\"993\" height=\"106\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhkZAT4S2BtFsDND2hl8gLz-eAUfkevmY0zCf4BsDZHdsn__KkJAzVQ1o5T4SrkdfaOUpXNkmY9Eg2eFB1T6FJvJArp4Y4p6lC4wZg88l1yBW1ypVa7JlbyxQFIqb3KnOY6OquDhbO38eXeSI4qpXYjPoI95hX2_SaWqOXxmrTXYYUTod8FowZbZEB_rvQT=w400-h106\" width=\"400\" /></a></div></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEg1oETtdPmtPNUa1CMa7AJDqeBpIkDsmovE-AqmwX65y8yKl6P147qLxZcx1Dzbyn9nO9kzuEuu5JvmIkmA_Ngs-2MiWi3Lsr_sJ7i2HZPLHAGMp0nm_JnNMPutZvbhIJF0JccJVV1qSdbq4pjP2gL9tJB4nPI0NbmJpN8pq7108dS_topMscas48hp12Vu\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"655\" data-original-width=\"1137\" height=\"230\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEg1oETtdPmtPNUa1CMa7AJDqeBpIkDsmovE-AqmwX65y8yKl6P147qLxZcx1Dzbyn9nO9kzuEuu5JvmIkmA_Ngs-2MiWi3Lsr_sJ7i2HZPLHAGMp0nm_JnNMPutZvbhIJF0JccJVV1qSdbq4pjP2gL9tJB4nPI0NbmJpN8pq7108dS_topMscas48hp12Vu=w400-h230\" width=\"400\" /></a></div><br />이와 관련해, github에 해당 코드 등을 공유하고 있다.&nbsp;</div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://general-pattern-machines.github.io/\">Large Language Models as General Pattern Machines (general-pattern-machines.github.io)</a></li></ul><div><b>레퍼런스</b></div><div>다음 글은 여러 시사점을 준다. 참고용으로 기록한다.&nbsp;</div><div><ul><li>Suvir Mirchandani, Fei Xia, 2024.6,&nbsp;<a href=\"https://general-pattern-machines.github.io/\">Large Language Models as General Pattern Machines (general-pattern-machines.github.io)</a>, Stanford University, Google</li><li>Michael Townsen Hicks, James Humphries &amp; Joe Slater, 2024.6,&nbsp;<a href=\"https://link.springer.com/article/10.1007/s10676-024-09775-5\">ChatGPT is bullshit | Ethics and Information Technology (springer.com)</a>, University of Glasgow</li><li><a href=\"https://arxiv.org/pdf/2308.07107\">Yutao Zhu, Huaying Yuan, 2024.1, Large Language Models for Information Retrieval: A Survey</a>,&nbsp;Renmin University of China</li></ul></div><div><br /></div><div>추신. 개인적으로 극단을 경계하는 성격이라, LLM이 AGI 도구 보단, 통계적 패턴의 예측 함수로 인식하고 있었는 데, 워낙 너도 나도 LLM으로 다 할 수 있다는 듯 뛰어드는 분위기라... 약장사 구분하기 위해 개인적으로 계속 논문, 소스코드 분석하고, 정리하고 있었다. ChatGPT 충격?에서 2년 가까이 지난 뒤에서야, 나름 국제적 연구진이 연구한 이런 결과들이 나오는 것을 보면, 대부분 어떤 트랜드가 있을 때, 98%는 언론에서 잘 모르고 무책임하게 말하는 것을 따라 휩쓸린다는 것을 한번 더 느낀다.&nbsp;</div><div>이 정도에서 약간 국내 기술 수준도 털리는 느낌인데, 지나서 잠시 생각해 보면, 아무도 그 수준의 연구나 성찰을 화려한 스타군단으로 구성된 AI스타트업, 연구실에서 언급한 적을 논문 언론 등을 통해 한번도 본적이 없었다는 것이다(심지어, 그 스타군단에서 huggingface, langchain처럼 스스로 자랑?하는 성과를 github에서 거의 본 적 없다 보니, 놀랄만한 일이 아니다). 깊게 연구 성찰한 후에야, LLM이 할 수 있는 것들(기능. 무엇은 되고, 어떤것은 안된다 정도)에 대해 자신있게 말할 수 있을 텐데, 이름, 돈, 상황(패닉?)에 눈이 멀어, 깊은 성찰과 연구는 없고, 약장사 만 많은 건은 어쩔 수 없나 보다. 어느 분이 말한 것처럼, 국내 시장의 한계인 듯 하다.&nbsp;</div><div><br /></div><div>역사는 반복되는 듯... 인생, 시간이 아까우면, 마음이 급하더라도, 좀 깊게, 하나씩 어떤 물건인지 잘 살펴보는 게 정답이다. 2024.6.6</div></div>",
        "contentSnippet": "요즘 AI 연구자들이 LLM에 대한 잠재력을 연구하고 있는 분위기가 있는 데, 마침 Google, DeepMind 연구팀으로 부터 관련된 논문이 나왔다. 이 연구는 LLM을 AGI와 같은 Multi function AI로 사용할 수 있는 지에 대한 근본적 성찰과 한계를 밝히는 연구이다.\n\n\n\n\n이와 관련해, github에 해당 코드 등을 공유하고 있다. \n\nLarge Language Models as General Pattern Machines (general-pattern-machines.github.io)\n\n레퍼런스\n다음 글은 여러 시사점을 준다. 참고용으로 기록한다. \n\nSuvir Mirchandani, Fei Xia, 2024.6, Large Language Models as General Pattern Machines (general-pattern-machines.github.io), Stanford University, Google\nMichael Townsen Hicks, James Humphries & Joe Slater, 2024.6, ChatGPT is bullshit | Ethics and Information Technology (springer.com), University of Glasgow\nYutao Zhu, Huaying Yuan, 2024.1, Large Language Models for Information Retrieval: A Survey, Renmin University of China\n\n\n\n추신. 개인적으로 극단을 경계하는 성격이라, LLM이 AGI 도구 보단, 통계적 패턴의 예측 함수로 인식하고 있었는 데, 워낙 너도 나도 LLM으로 다 할 수 있다는 듯 뛰어드는 분위기라... 약장사 구분하기 위해 개인적으로 계속 논문, 소스코드 분석하고, 정리하고 있었다. ChatGPT 충격?에서 2년 가까이 지난 뒤에서야, 나름 국제적 연구진이 연구한 이런 결과들이 나오는 것을 보면, 대부분 어떤 트랜드가 있을 때, 98%는 언론에서 잘 모르고 무책임하게 말하는 것을 따라 휩쓸린다는 것을 한번 더 느낀다. \n이 정도에서 약간 국내 기술 수준도 털리는 느낌인데, 지나서 잠시 생각해 보면, 아무도 그 수준의 연구나 성찰을 화려한 스타군단으로 구성된 AI스타트업, 연구실에서 언급한 적을 논문 언론 등을 통해 한번도 본적이 없었다는 것이다(심지어, 그 스타군단에서 huggingface, langchain처럼 스스로 자랑?하는 성과를 github에서 거의 본 적 없다 보니, 놀랄만한 일이 아니다). 깊게 연구 성찰한 후에야, LLM이 할 수 있는 것들(기능. 무엇은 되고, 어떤것은 안된다 정도)에 대해 자신있게 말할 수 있을 텐데, 이름, 돈, 상황(패닉?)에 눈이 멀어, 깊은 성찰과 연구는 없고, 약장사 만 많은 건은 어쩔 수 없나 보다. 어느 분이 말한 것처럼, 국내 시장의 한계인 듯 하다. \n\n\n역사는 반복되는 듯... 인생, 시간이 아까우면, 마음이 급하더라도, 좀 깊게, 하나씩 어떤 물건인지 잘 살펴보는 게 정답이다. 2024.6.6",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-4711156413268585995",
        "isoDate": "2024-06-16T09:43:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김병환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "데이터 시인성 - 7th",
        "link": "https://kangmyounghun.blogspot.com/2024/06/7th.html",
        "pubDate": "2024-06-16T06:41:00.007Z",
        "author": "강명훈",
        "content": "<div>가끔 데이터값의 누적과 차감 변화를 보고 싶을 때가 있다. 샘플 데이터 입력.</div>\n<div><pre><code><div>POST _bulk</div><div>{\"index\": {\"_index\": \"test\"}}</div><div>{\"@timestamp\": \"2024-06-15T00:10:00.000Z\", \"cnt\": 10}</div><div>{\"index\": {\"_index\": \"test\"}}</div><div>{\"@timestamp\": \"2024-06-15T00:20:01.000Z\", \"cnt\": 15}</div><div>{\"index\": {\"_index\": \"test\"}}</div><div>{\"@timestamp\": \"2024-06-15T00:30:02.000Z\", \"cnt\": 25}</div><div>{\"index\": {\"_index\": \"test\"}}</div><div>{\"@timestamp\": \"2024-06-15T00:40:03.000Z\", \"cnt\": 50}</div><div>{\"index\": {\"_index\": \"test\"}}</div><div>{\"@timestamp\": \"2024-06-15T00:50:04.000Z\", \"cnt\": 40}</div></code></pre></div>\n<div><br /></div><span><a name='more'></a></span><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh5bu2MiBY90dwoBoU2iRCDsWz-N1UFe_kYg4v12MxiIoVAz36kwvA1k6cX2kzTb6T3fCEiM_Dy_5JLCBNHgTwymPYFh6rW3OhNxbo1o9uXk9wEUE5uRBQyUjT82qjr88RMpMIStgsbA0V-G_zU-HB2crcAW7LWLRWG0bB87Fo9_zxswNayuFZFPbNHgSze/s1266/elastic_cumulative.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1266\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh5bu2MiBY90dwoBoU2iRCDsWz-N1UFe_kYg4v12MxiIoVAz36kwvA1k6cX2kzTb6T3fCEiM_Dy_5JLCBNHgTwymPYFh6rW3OhNxbo1o9uXk9wEUE5uRBQyUjT82qjr88RMpMIStgsbA0V-G_zU-HB2crcAW7LWLRWG0bB87Fo9_zxswNayuFZFPbNHgSze/s520/elastic_cumulative.png\" width=\"520\" /></a></div><br /></div><div>누적은 'Parent Pipeline Aggregations &gt; <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-cumulative-sum-aggregation.html\" target=\"_blank\">Cumulative Sum</a>'. 집계를 두 번 하는 방식.</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEguoRbuHtoem01vz-MUSblAeG8cFR_G_H4AiYFtkDGplkzuTWL_sIuEGnNrZ164LAEBCtZ9EPZOxZokbSt1TL5PA8OlipjbjWBVRml7hUE1RkPDdvbbV_X7GIsZi-TYmTC2oHZjZZDPL0523uBLycG4e-1VvNTIztpUkqqrRu3nodbI7UnN9PUSB8wxFusG/s1589/elastic_cumulative2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1589\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEguoRbuHtoem01vz-MUSblAeG8cFR_G_H4AiYFtkDGplkzuTWL_sIuEGnNrZ164LAEBCtZ9EPZOxZokbSt1TL5PA8OlipjbjWBVRml7hUE1RkPDdvbbV_X7GIsZi-TYmTC2oHZjZZDPL0523uBLycG4e-1VvNTIztpUkqqrRu3nodbI7UnN9PUSB8wxFusG/s520/elastic_cumulative2.png\" width=\"520\" /></a></div>\n<br /><div>차감은 <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-derivative-aggregation.html\" target=\"_blank\">Derivative Aggregation</a>.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjIjWbKK23B_HU-GrTpavUaQnedH0QLHZ6HjwdbIZx3a9MYAYET3sXVSNfsS949vZ1_vndVTIL7VwFRvWqWm0KM2Dva-BCmnrAIxhE88YcAW8ChwoGFK5SL55jlBDnTOgM2BHr8IXJ5vBa-WA5AjdNN4eq3FqGTwWWSQT2QRJ7o6CD3K3gWfax0Dkw5z8et/s950/elastic_derivative.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"950\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjIjWbKK23B_HU-GrTpavUaQnedH0QLHZ6HjwdbIZx3a9MYAYET3sXVSNfsS949vZ1_vndVTIL7VwFRvWqWm0KM2Dva-BCmnrAIxhE88YcAW8ChwoGFK5SL55jlBDnTOgM2BHr8IXJ5vBa-WA5AjdNN4eq3FqGTwWWSQT2QRJ7o6CD3K3gWfax0Dkw5z8et/s520/elastic_derivative.png\" width=\"520\" /></a></div>\n<div><br /></div><div>스플렁크에서 누적은 <a href=\"http://docs.splunk.com/Documentation/Splunk/9.2.1/SearchReference/Accum\" target=\"_blank\">accum</a>과 <a href=\"http://docs.splunk.com/Documentation/Splunk/9.2.1/SearchReference/Streamstats\" target=\"_blank\">streamstats</a>, 차감은 <a href=\"http://docs.splunk.com/Documentation/Splunk/9.2.1/SearchReference/Delta\" target=\"_blank\">delta</a>.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhvOiLToe6o5UnI75igVx05H2i-2PHOPKMIesSM5zdRMgeaZcUbab_k76sbUJVaPDDmhuUQRwxYAWshtHQVZZF03Oihyphenhyphen4_NpIu-xwzcjJGqMWnXOEPYLnHI9gh-sbRV1x0TXiaZcIOfaTKPUVckue1gMaWawX8N03FM212igx0Tc40PIQx29g5glTWf1xe8/s1546/splunk_cumulative_derivative.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1546\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhvOiLToe6o5UnI75igVx05H2i-2PHOPKMIesSM5zdRMgeaZcUbab_k76sbUJVaPDDmhuUQRwxYAWshtHQVZZF03Oihyphenhyphen4_NpIu-xwzcjJGqMWnXOEPYLnHI9gh-sbRV1x0TXiaZcIOfaTKPUVckue1gMaWawX8N03FM212igx0Tc40PIQx29g5glTWf1xe8/s520/splunk_cumulative_derivative.png\" width=\"520\" /></a></div><div><br /></div><div><b>관련 글</b></div><div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2023/07/6th.html\">데이터 시인성&nbsp;- 6th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/09/blog-post.html\" target=\"\">데이터 시인성</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2022/09/having-query.html\">having query</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/11/blog-post.html\">네트워크 관계망 그리기</a></li></ul></div></div>",
        "contentSnippet": "가끔 데이터값의 누적과 차감 변화를 보고 싶을 때가 있다. 샘플 데이터 입력.\n\nPOST _bulk\n{\"index\": {\"_index\": \"test\"}}\n{\"@timestamp\": \"2024-06-15T00:10:00.000Z\", \"cnt\": 10}\n{\"index\": {\"_index\": \"test\"}}\n{\"@timestamp\": \"2024-06-15T00:20:01.000Z\", \"cnt\": 15}\n{\"index\": {\"_index\": \"test\"}}\n{\"@timestamp\": \"2024-06-15T00:30:02.000Z\", \"cnt\": 25}\n{\"index\": {\"_index\": \"test\"}}\n{\"@timestamp\": \"2024-06-15T00:40:03.000Z\", \"cnt\": 50}\n{\"index\": {\"_index\": \"test\"}}\n{\"@timestamp\": \"2024-06-15T00:50:04.000Z\", \"cnt\": 40}\n\n\n\n\n\n\n누적은 'Parent Pipeline Aggregations > Cumulative Sum'. 집계를 두 번 하는 방식.\n\n\n\n차감은 Derivative Aggregation.\n\n\n\n\n스플렁크에서 누적은 accum과 streamstats, 차감은 delta.\n\n\n\n\n\n관련 글\n\n\n데이터 시인성 - 6th\n데이터 시인성\nhaving query\n네트워크 관계망 그리기",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-3025154960662127600",
        "isoDate": "2024-06-16T06:41:00.007Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "똑키, 즐겨찾기도 되는 단축키 뷰어",
        "link": "http://muzbox.tistory.com/1999",
        "pubDate": "Thu, 20 Jun 2024 16:20:13 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/1999#entry1999comment",
        "content": "<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp; 다양한 프로그램의 단축키를 쉽게 검색하고 즐겨찾기에 추가할 수 있는 똑키를 소개합니다. 문서 작업, 디자인, 게임 등에서 작업 효율을 높여주는 필수 프로그램이라 생각합니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<table style=\"border-collapse: collapse; width: 95.6979%; height: 248px;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"height: 62px;\"><!-- 첫 번째 열에 배경색을 노란색으로 설정 -->\n<td style=\"width: 13.1835%; height: 62px; text-align: center; background-color: #555555;\"><span style=\"color: #ffffff;\"><b>분류</b></span></td>\n<td style=\"width: 22.4483%; height: 62px; text-align: center;\">문서작업/단축키</td>\n<td style=\"width: 64.3682%; height: 248px; text-align: center;\" rowspan=\"4\"><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"똑키.png\" data-origin-width=\"336\" data-origin-height=\"448\"><span data-url=\"https://blog.kakaocdn.net/dn/ctLVp0/btsH7iXsRFA/kr7xldQkI4gye9FABqt380/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/ctLVp0/btsH7iXsRFA/kr7xldQkI4gye9FABqt380/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FctLVp0%2FbtsH7iXsRFA%2Fkr7xldQkI4gye9FABqt380%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"238\" height=\"317\" data-filename=\"똑키.png\" data-origin-width=\"336\" data-origin-height=\"448\"/></span></figure>\n</td>\n</tr>\n<tr style=\"height: 62px;\"><!-- 첫 번째 열에 배경색을 노란색으로 설정 -->\n<td style=\"width: 13.1835%; height: 62px; text-align: center; background-color: #555555;\"><span style=\"color: #ffffff;\"><b>사용범위</b></span></td>\n<td style=\"width: 22.4483%; height: 62px; text-align: center;\">무료(개인)</td>\n</tr>\n<tr style=\"height: 62px;\"><!-- 첫 번째 열에 배경색을 노란색으로 설정 -->\n<td style=\"width: 13.1835%; height: 62px; text-align: center; background-color: #555555;\"><span style=\"color: #ffffff;\"><b>사용환경</b></span></td>\n<td style=\"width: 22.4483%; height: 62px; text-align: center;\">Windows</td>\n</tr>\n<tr style=\"height: 62px;\"><!-- 첫 번째 열에 배경색을 노란색으로 설정 -->\n<td style=\"width: 13.1835%; height: 62px; text-align: center; background-color: #555555;\"><span style=\"color: #ffffff;\"><b>제작사</b></span></td>\n<td style=\"width: 22.4483%; height: 62px; text-align: center;\"><a href=\"https://trendsoftware.co.kr/\" target=\"_blank\" rel=\"noopener\">트렌드소프트웨어</a></td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b> 프로그램 소개</b></h2>\n<p data-ke-size=\"size18\">&nbsp;현대인의 일상에서 컴퓨터는 필수적인 도구입니다. 업무를 처리하거나, 디자인 작업을 하거나, 게임을 즐기기 위해 우리는 컴퓨터 앞에 많은 시간을 할애합니다. 하지만 컴퓨터 작업 속도를 높이는 가장 간단하고 효과적인 방법은 바로 단축키를 활용하는 것인데요. 단축키를 잘 활용하면 불필요한 마우스 클릭을 줄이고, 작업 시간을 크게 단축할 수 있기때문이죠.<br /><br />이번 포스팅에서는 다양한 프로그램의 단축키를 쉽고 빠르게 검색하고 즐겨찾기에 추가할 수 있는 프로그램, <span style=\"color: #ee2323;\"><b>똑키</b></span>에 대해 소개합니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"똑키 단축키 뷰어.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/U7oev/btsH5vEe98q/OVCgmgcK1aEigz8z0elR3k/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/U7oev/btsH5vEe98q/OVCgmgcK1aEigz8z0elR3k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FU7oev%2FbtsH5vEe98q%2FOVCgmgcK1aEigz8z0elR3k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"똑키 단축키 뷰어.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b> 주요 특징</b></h2>\n<p data-ke-size=\"size18\">&nbsp;<span style=\"color: #ee2323;\"><b>똑키</b></span>는 다양한 프로그램의 단축키를 쉽고 빠르게 검색할 수 있는 프로그램입니다. 이 프로그램은 사용자가 찾고자 하는 단축키를 간편하게 검색할 수 있도록 도와주며, 자주 사용하는 단축키를 즐겨찾기에 추가하여 언제든지 빠르게 접근할 수 있게 합니다. 문서 작업, 디자인 및 영상 편집, PC 게임, 개발자 명령어, 메신저 등 여러 분야의 단축키를 지원하여 사용자들의 다양한 요구를 충족시킵니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"똑키.jpg\" data-origin-width=\"720\" data-origin-height=\"441\"><span data-url=\"https://blog.kakaocdn.net/dn/dxW0ij/btsH7iJXxfZ/o0HRGRQRG2S92slCRjgmC1/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/dxW0ij/btsH7iJXxfZ/o0HRGRQRG2S92slCRjgmC1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdxW0ij%2FbtsH7iJXxfZ%2Fo0HRGRQRG2S92slCRjgmC1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"똑키.jpg\" data-origin-width=\"720\" data-origin-height=\"441\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\"><span style=\"color: #ef5369;\"><b>1. 간편한 검색 기능</b></span></p>\n<p data-ke-size=\"size18\">똑키는 직관적인 검색 인터페이스를 제공하여 사용자가 원하는 단축키를 손쉽게 검색할 수 있습니다. 검색창에 키워드를 입력하면 관련 단축키 목록이 바로 나타나며, 필요한 정보를 빠르게 찾을 수 있습니다.</p>\n<p data-ke-size=\"size18\"><br /><span style=\"color: #ef5369;\"><b>2. 즐겨찾기 기능</b></span> </p>\n<p data-ke-size=\"size18\">자주&nbsp;사용하는&nbsp;단축키를&nbsp;즐겨찾기에&nbsp;추가하여&nbsp;언제든지&nbsp;빠르게&nbsp;접근할&nbsp;수&nbsp;있습니다.&nbsp;즐겨찾기에&nbsp;저장된&nbsp;단축키는&nbsp;상단&nbsp;메뉴에서&nbsp;쉽게&nbsp;확인할&nbsp;수&nbsp;있어&nbsp;다시&nbsp;찾아볼&nbsp;필요&nbsp;없이&nbsp;즉시&nbsp;사용할&nbsp;수&nbsp;있습니다. <br /><br /><span style=\"color: #ef5369;\"><b>3. 다양한 프로그램 지원</b></span><br />똑키는&nbsp;문서&nbsp;작업&nbsp;프로그램(예:&nbsp;Excel,&nbsp;Word),&nbsp;디자인&nbsp;및&nbsp;영상&nbsp;편집&nbsp;프로그램(예:&nbsp;Photoshop,&nbsp;Premiere),&nbsp;PC&nbsp;게임,&nbsp;개발자&nbsp;명령어,&nbsp;메신저&nbsp;등&nbsp;다양한&nbsp;프로그램의&nbsp;단축키를&nbsp;지원합니다.&nbsp;이를&nbsp;통해&nbsp;사용자는&nbsp;여러&nbsp;프로그램에서&nbsp;단축키를&nbsp;익히고&nbsp;활용할&nbsp;수&nbsp;있습니다. <br /><br /><span style=\"color: #ef5369;\"><b>4. 유용한 단축키 추천</b></span><br />똑키는&nbsp;사용자들에게&nbsp;작업&nbsp;효율을&nbsp;높여주는&nbsp;유용한&nbsp;단축키를&nbsp;추천합니다.&nbsp;불필요한&nbsp;마우스&nbsp;클릭을&nbsp;줄이고,&nbsp;작업&nbsp;속도를&nbsp;두&nbsp;배로&nbsp;올려주는&nbsp;단축키를&nbsp;제공하여&nbsp;사용자들의&nbsp;생산성을&nbsp;극대화합니다. <br /><br /><span style=\"color: #ef5369;\"><b>5. 실무 엑셀 함수 모음</b></span> <br />특히, 엑셀 작업을 자주 하는 사용자들을 위해 실무에서 자주 사용하는 엑셀 함수 모음을 제공합니다. 엑린이들도 쉽게 사용할 수 있도록 잘 정리되어 있어 업무 효율을 크게 높일 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>  프로그램 장단점</b></h2>\n<h4 data-ke-size=\"size20\"><b> 장점</b></h4>\n<blockquote data-ke-style=\"style3\"><b>1. 작업 효율성 향상:</b> 다양한 프로그램의 단축키를 쉽게 배우고 사용할 수 있어, 마우스 클릭을 줄이고 생산성을 높일 수 있습니다. <br /><b>2. 직관적인 인터페이스:</b> 초보자도 쉽게 사용할 수 있는 간단한 인터페이스를 제공합니다. <br /><b>3. 즐겨찾기 기능:</b> 자주 사용하는 단축키를 즐겨찾기에 추가하여 빠르게 접근할 수 있습니다. <br /><b>4. 다양한 프로그램 지원:</b> 여러 종류의 프로그램에서 단축키를 배우고 사용할 수 있도록 지원합니다. <br /><b>5. 유용한 단축키 추천:</b> 필요한 단축키를 추천하여 작업 효율을 높여줍니다.</blockquote>\n<h4 data-ke-size=\"size20\"><b> 단점</b></h4>\n<blockquote data-ke-style=\"style3\"><b>1. 일부 프로그램의 단축키 미지원:</b> 모든 프로그램의 단축키를 지원하지 않아, 필요한 경우 사용자가 직접 찾아야 할 수 있습니다. <br /><b>2. 초보자에게 어려움:</b> 단축키를 처음 배우는 사용자에게는 초기 학습이 어려울 수 있습니다. <br /><b>3. 기능 부족:</b> 단축키 외의 추가 기능이 부족하여, 특정 기능이 필요한 사용자는 다른 프로그램을 찾아야 할 수도 있습니다.</blockquote>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b> &nbsp;간단 사용법</b></h2>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\"><span style=\"color: #ef5369;\"><b>1.&nbsp;프로그램&nbsp;설치&nbsp;및&nbsp;실행</b></span> <br />&nbsp; &nbsp;- 똑키 공식 웹사이트 또는 아래 링크에서 설치 파일을 다운로드합니다. <br />&nbsp;&nbsp;&nbsp;-&nbsp;다운로드한&nbsp;설치&nbsp;파일을&nbsp;실행하여&nbsp;설치&nbsp;과정을&nbsp;진행합니다. <br />&nbsp;&nbsp;&nbsp;-&nbsp;설치가&nbsp;완료되면&nbsp;바탕화면&nbsp;또는&nbsp;시작&nbsp;메뉴에서&nbsp;똑키&nbsp;아이콘을&nbsp;클릭하여&nbsp;프로그램을&nbsp;실행합니다. <br /><br /><span style=\"color: #ef5369;\"><b>2. 단축키가 필요한 프로그램 검색</b></span> <br />- 프로그램을 실행하면 메인 화면 상단에 검색창이 나타납니다. <br />- 찾고자 하는 단축키와 관련된 프로그램명을 입력합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"똑키 단축키 검색.jpg\" data-origin-width=\"801\" data-origin-height=\"535\"><span data-url=\"https://blog.kakaocdn.net/dn/Mgxd1/btsH6YycKwN/Mcf1ZYNxksd9uk7PSukiLK/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/Mgxd1/btsH6YycKwN/Mcf1ZYNxksd9uk7PSukiLK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FMgxd1%2FbtsH6YycKwN%2FMcf1ZYNxksd9uk7PSukiLK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"700\" height=\"468\" data-filename=\"똑키 단축키 검색.jpg\" data-origin-width=\"801\" data-origin-height=\"535\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\"><span style=\"color: #ef5369;\"><b>3. 프로그램별 단축키 탐색</b></span><br />&nbsp; 각 프로그램별로 기능별 카테고리가 나누어져 있어 필요한 단축키를 쉽게 찾을 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"검색2.jpg\" data-origin-width=\"336\" data-origin-height=\"528\"><span data-url=\"https://blog.kakaocdn.net/dn/ZRVyG/btsH5eJyj0Y/vPyQmia1hSKligmOzPx031/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/ZRVyG/btsH5eJyj0Y/vPyQmia1hSKligmOzPx031/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FZRVyG%2FbtsH5eJyj0Y%2FvPyQmia1hSKligmOzPx031%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"검색2.jpg\" data-origin-width=\"336\" data-origin-height=\"528\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\"><br /><span style=\"color: #ef5369;\"><b>4. 즐겨찾기 추가</b></span> <br />&nbsp;- 검색 결과에서 자주 사용할 단축키를 선택합니다. <br />&nbsp;- 해당 단축키 오른쪽에 있는 즐겨찾기 노란 아이콘을 클릭하여 즐겨찾기에 추가합니다. <br />&nbsp;- 즐겨찾기에 추가된 단축키는 메인 화면 상단의 즐겨찾기 메뉴에서 확인할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"즐겨찾기.jpg\" data-origin-width=\"336\" data-origin-height=\"464\"><span data-url=\"https://blog.kakaocdn.net/dn/b8i8CD/btsH6cxaq0D/IoxXKgaFJhqKStRT3QUuD1/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/b8i8CD/btsH6cxaq0D/IoxXKgaFJhqKStRT3QUuD1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb8i8CD%2FbtsH6cxaq0D%2FIoxXKgaFJhqKStRT3QUuD1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"즐겨찾기.jpg\" data-origin-width=\"336\" data-origin-height=\"464\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><b>  라이센스 정책</b></h2>\n<p data-ke-size=\"size18\">똑키는 자유롭게 설치하여 사용이 가능한 프리웨어입니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b> 효과적인 활용 방법&nbsp;&nbsp;</b></h2>\n<p data-ke-size=\"size18\"><span style=\"color: #ef5369;\"><b>1. 자주 사용하는 단축키 익히기</b></span> <br />&nbsp;문서나 이미지, 영상 편집 작업 시 자주 사용하는 단축키를 익히면 작업 속도를 크게 향상시킬 수 있습니다. 예를 들어, 엑셀의 복사(Ctrl + C), 붙여넣기(Ctrl + V), 셀 병합(Alt + H + M + M) 등의 단축키를 익혀두면 반복적인 작업을 빠르게 처리할 수 있습니다. <br /><br /><span style=\"color: #ef5369;\"><b>2. 게임에서의 단축키 활용</b></span> <br />게임에서도 단축키는 중요한 역할을 합니다. 각 게임별로 중요한 단축키를 미리 숙지하여 사용하면 게임 플레이가 한층 더 원활해지고, 반응 속도도 빨라질 수 있습니다. 예를 들어, FPS 게임에서 무기 변경(Q), 리로드(R) 등의 단축키를 익혀두면 게임에서의 전투력을 높일 수 있습니다. <br /><br /><span style=\"color: #ef5369;\"><b>3. 실무 엑셀 함수 모음 활용</b></span> <br />엑셀을 자주 사용하는 업무 환경에서 실무 엑셀 함수 모음을 활용하면 업무 효율을 극대화할 수 있습니다. 기본적인 함수부터 고급 함수까지 다양하게 제공되므로, 필요한 함수를 바로 찾아 사용할 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>⬇️ 프로그램 다운로드</b></h2>\n\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1718867779975\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"트렌드소프트웨어 똑똑단축키 프로그램\" data-og-description=\"트렌드소프트웨어 똑똑단축키, 엑셀, 윈도우, 게임, 프로그램 단축키 정보 프로그램 입니다.\" data-og-host=\"trendsoftware.co.kr\" data-og-source-url=\"https://trendsoftware.co.kr/ddockey\" data-og-url=\"https://trendsoftware.co.kr/ddockey\" data-og-image=\"https://scrap.kakaocdn.net/dn/bxt7HX/hyWoFEJmDt/2Kk5p4G4enCLVxFsBvlN91/img.png?width=1920&amp;height=1901&amp;face=0_0_1920_1901,https://scrap.kakaocdn.net/dn/AjGwo/hyWoKTy7VM/N7v5UFHyZdCIRkj2KbSKj1/img.png?width=1920&amp;height=1765&amp;face=0_0_1920_1765\"><a href=\"https://trendsoftware.co.kr/ddockey\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://trendsoftware.co.kr/ddockey\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bxt7HX/hyWoFEJmDt/2Kk5p4G4enCLVxFsBvlN91/img.png?width=1920&amp;height=1901&amp;face=0_0_1920_1901,https://scrap.kakaocdn.net/dn/AjGwo/hyWoKTy7VM/N7v5UFHyZdCIRkj2KbSKj1/img.png?width=1920&amp;height=1765&amp;face=0_0_1920_1765');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">트렌드소프트웨어 똑똑단축키 프로그램</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">트렌드소프트웨어 똑똑단축키, 엑셀, 윈도우, 게임, 프로그램 단축키 정보 프로그램 입니다.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">trendsoftware.co.kr</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "다양한 프로그램의 단축키를 쉽게 검색하고 즐겨찾기에 추가할 수 있는 똑키를 소개합니다. 문서 작업, 디자인, 게임 등에서 작업 효율을 높여주는 필수 프로그램이라 생각합니다.\n \n\n분류\n문서작업/단축키\n\n\n\n\n사용범위\n무료(개인)\n\n\n사용환경\nWindows\n\n\n제작사\n트렌드소프트웨어\n\n\n\n \n 프로그램 소개\n 현대인의 일상에서 컴퓨터는 필수적인 도구입니다. 업무를 처리하거나, 디자인 작업을 하거나, 게임을 즐기기 위해 우리는 컴퓨터 앞에 많은 시간을 할애합니다. 하지만 컴퓨터 작업 속도를 높이는 가장 간단하고 효과적인 방법은 바로 단축키를 활용하는 것인데요. 단축키를 잘 활용하면 불필요한 마우스 클릭을 줄이고, 작업 시간을 크게 단축할 수 있기때문이죠.\n이번 포스팅에서는 다양한 프로그램의 단축키를 쉽고 빠르게 검색하고 즐겨찾기에 추가할 수 있는 프로그램, 똑키에 대해 소개합니다.\n \n\n\n \n \n 주요 특징\n 똑키는 다양한 프로그램의 단축키를 쉽고 빠르게 검색할 수 있는 프로그램입니다. 이 프로그램은 사용자가 찾고자 하는 단축키를 간편하게 검색할 수 있도록 도와주며, 자주 사용하는 단축키를 즐겨찾기에 추가하여 언제든지 빠르게 접근할 수 있게 합니다. 문서 작업, 디자인 및 영상 편집, PC 게임, 개발자 명령어, 메신저 등 여러 분야의 단축키를 지원하여 사용자들의 다양한 요구를 충족시킵니다.\n\n\n \n1. 간편한 검색 기능\n똑키는 직관적인 검색 인터페이스를 제공하여 사용자가 원하는 단축키를 손쉽게 검색할 수 있습니다. 검색창에 키워드를 입력하면 관련 단축키 목록이 바로 나타나며, 필요한 정보를 빠르게 찾을 수 있습니다.\n2. 즐겨찾기 기능 \n자주 사용하는 단축키를 즐겨찾기에 추가하여 언제든지 빠르게 접근할 수 있습니다. 즐겨찾기에 저장된 단축키는 상단 메뉴에서 쉽게 확인할 수 있어 다시 찾아볼 필요 없이 즉시 사용할 수 있습니다. \n3. 다양한 프로그램 지원\n똑키는 문서 작업 프로그램(예: Excel, Word), 디자인 및 영상 편집 프로그램(예: Photoshop, Premiere), PC 게임, 개발자 명령어, 메신저 등 다양한 프로그램의 단축키를 지원합니다. 이를 통해 사용자는 여러 프로그램에서 단축키를 익히고 활용할 수 있습니다. \n4. 유용한 단축키 추천\n똑키는 사용자들에게 작업 효율을 높여주는 유용한 단축키를 추천합니다. 불필요한 마우스 클릭을 줄이고, 작업 속도를 두 배로 올려주는 단축키를 제공하여 사용자들의 생산성을 극대화합니다. \n5. 실무 엑셀 함수 모음 \n특히, 엑셀 작업을 자주 하는 사용자들을 위해 실무에서 자주 사용하는 엑셀 함수 모음을 제공합니다. 엑린이들도 쉽게 사용할 수 있도록 잘 정리되어 있어 업무 효율을 크게 높일 수 있습니다.\n \n \n  프로그램 장단점\n 장점\n1. 작업 효율성 향상: 다양한 프로그램의 단축키를 쉽게 배우고 사용할 수 있어, 마우스 클릭을 줄이고 생산성을 높일 수 있습니다. \n2. 직관적인 인터페이스: 초보자도 쉽게 사용할 수 있는 간단한 인터페이스를 제공합니다. \n3. 즐겨찾기 기능: 자주 사용하는 단축키를 즐겨찾기에 추가하여 빠르게 접근할 수 있습니다. \n4. 다양한 프로그램 지원: 여러 종류의 프로그램에서 단축키를 배우고 사용할 수 있도록 지원합니다. \n5. 유용한 단축키 추천: 필요한 단축키를 추천하여 작업 효율을 높여줍니다.\n 단점\n1. 일부 프로그램의 단축키 미지원: 모든 프로그램의 단축키를 지원하지 않아, 필요한 경우 사용자가 직접 찾아야 할 수 있습니다. \n2. 초보자에게 어려움: 단축키를 처음 배우는 사용자에게는 초기 학습이 어려울 수 있습니다. \n3. 기능 부족: 단축키 외의 추가 기능이 부족하여, 특정 기능이 필요한 사용자는 다른 프로그램을 찾아야 할 수도 있습니다.\n \n \n  간단 사용법\n \n1. 프로그램 설치 및 실행 \n   - 똑키 공식 웹사이트 또는 아래 링크에서 설치 파일을 다운로드합니다. \n   - 다운로드한 설치 파일을 실행하여 설치 과정을 진행합니다. \n   - 설치가 완료되면 바탕화면 또는 시작 메뉴에서 똑키 아이콘을 클릭하여 프로그램을 실행합니다. \n2. 단축키가 필요한 프로그램 검색 \n- 프로그램을 실행하면 메인 화면 상단에 검색창이 나타납니다. \n- 찾고자 하는 단축키와 관련된 프로그램명을 입력합니다.\n\n\n \n3. 프로그램별 단축키 탐색\n  각 프로그램별로 기능별 카테고리가 나누어져 있어 필요한 단축키를 쉽게 찾을 수 있습니다.\n\n\n\n4. 즐겨찾기 추가 \n - 검색 결과에서 자주 사용할 단축키를 선택합니다. \n - 해당 단축키 오른쪽에 있는 즐겨찾기 노란 아이콘을 클릭하여 즐겨찾기에 추가합니다. \n - 즐겨찾기에 추가된 단축키는 메인 화면 상단의 즐겨찾기 메뉴에서 확인할 수 있습니다.\n\n\n \n  라이센스 정책\n똑키는 자유롭게 설치하여 사용이 가능한 프리웨어입니다.\n \n \n 효과적인 활용 방법  \n1. 자주 사용하는 단축키 익히기 \n 문서나 이미지, 영상 편집 작업 시 자주 사용하는 단축키를 익히면 작업 속도를 크게 향상시킬 수 있습니다. 예를 들어, 엑셀의 복사(Ctrl + C), 붙여넣기(Ctrl + V), 셀 병합(Alt + H + M + M) 등의 단축키를 익혀두면 반복적인 작업을 빠르게 처리할 수 있습니다. \n2. 게임에서의 단축키 활용 \n게임에서도 단축키는 중요한 역할을 합니다. 각 게임별로 중요한 단축키를 미리 숙지하여 사용하면 게임 플레이가 한층 더 원활해지고, 반응 속도도 빨라질 수 있습니다. 예를 들어, FPS 게임에서 무기 변경(Q), 리로드(R) 등의 단축키를 익혀두면 게임에서의 전투력을 높일 수 있습니다. \n3. 실무 엑셀 함수 모음 활용 \n엑셀을 자주 사용하는 업무 환경에서 실무 엑셀 함수 모음을 활용하면 업무 효율을 극대화할 수 있습니다. 기본적인 함수부터 고급 함수까지 다양하게 제공되므로, 필요한 함수를 바로 찾아 사용할 수 있습니다.\n \n⬇️ 프로그램 다운로드\n \n\n \n트렌드소프트웨어 똑똑단축키 프로그램\n트렌드소프트웨어 똑똑단축키, 엑셀, 윈도우, 게임, 프로그램 단축키 정보 프로그램 입니다.\ntrendsoftware.co.kr",
        "guid": "http://muzbox.tistory.com/1999",
        "categories": [
          "추천 프리웨어/문서,업무",
          "단축키 검색 프로그램",
          "디자인 단축키",
          "똑키 단축키",
          "문서 작업 단축키",
          "엑셀 함수 모음",
          "작업 효율 향상"
        ],
        "isoDate": "2024-06-20T07:20:13.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "윈도우용 추천 프리웨어 (2024.6.17) 가상머신,하드디스크분석,무료비디오편집,윈도우 콘솔 에뮬레이터, 텍스트 검색/바꾸기 기능, 무료프로그램",
        "link": "http://muzbox.tistory.com/1998",
        "pubDate": "Mon, 17 Jun 2024 08:34:41 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/1998#entry1998comment",
        "content": "<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"background-color: #ffffff; color: #0d0d0d; text-align: start;\">&nbsp;네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"24년6월17일 추천 프리웨어.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/c0QHak/btsH0NLbjX3/ZIyYpEE3O4w26bjXfJtzEk/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/c0QHak/btsH0NLbjX3/ZIyYpEE3O4w26bjXfJtzEk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc0QHak%2FbtsH0NLbjX3%2FZIyYpEE3O4w26bjXfJtzEk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"24년6월17일 추천 프리웨어.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"color: #333333; text-align: left;\">&nbsp;윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는<span>&nbsp;</span></span><b><span style=\"color: #009a87;\">상용프로그램</span></b><span style=\"color: #333333; text-align: left;\">과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의<span>&nbsp;</span></span><span style=\"color: #ee2323;\"><b>쉐어웨어</b></span><span style=\"color: #333333; text-align: left;\">, 무료로 사용할 수 있는<span>&nbsp;</span></span><b><span style=\"color: #ef6f53;\">프리웨어</span></b>등으로 크게 3가지로 나뉘게 되는데요.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><br />&nbsp;물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 <span style=\"color: #006dd7;\"><b>최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개</b></span>하고 있습니다.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size18\">'어떤오후의 프리웨어 이야기'에서 추천하는<br /><span style=\"color: #409d00;\">&nbsp;<b>2024년 6월 17일자 공개자료실 윈도우용 추천 프리웨어</b></span>입니다.</p>\n<p id=\"no_1\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>1. Enigma Virtual Box (Windows용 애플리케이션 가상화 시스템)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;애플리케이션에서&nbsp;사용되는&nbsp;모든&nbsp;파일들을&nbsp;단일&nbsp;모듈로&nbsp;결합할&nbsp;수&nbsp;있습니다.&nbsp;이를&nbsp;통해&nbsp;여러&nbsp;파일과&nbsp;폴더&nbsp;대신&nbsp;단일&nbsp;실행&nbsp;파일을&nbsp;사용할&nbsp;수&nbsp;있어&nbsp;더욱&nbsp;편리합니다.&nbsp;실제&nbsp;이점은&nbsp;타인이&nbsp;자신의&nbsp;작업물을&nbsp;훔치는&nbsp;것을&nbsp;방지할&nbsp;수&nbsp;있다는&nbsp;점입니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;일반적으로 사람들은 설치 폴더를 browsing하고 이미지, 오디오, 동영상, DLL, OCX 등의 파일들을 검사하거나 가져갈 수 있습니다. 하지만 Enigma Virtual Box를 사용하면 모든 파일이 단일 모듈로 압축되어 실행 시 하드드라이브가 아닌 RAM에 unpacking되므로 소프트웨어를 검사하기 어려워집니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;프로그램 사용이 놀랍도록 간단합니다. 애플리케이션 폴더와 core 실행 파일을 지정하기만 하면 되는 경우도 있습니다. 또한 레지스트리 가상화 등의 다른 옵션도 제공됩니다. 개발사에서는 추가 보안 계층을 더한 Enigma Protector 상업용 빌드도 제공하고 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Enigma Virtual Box.png\" data-origin-width=\"635\" data-origin-height=\"516\"><span data-url=\"https://blog.kakaocdn.net/dn/bcRJ4i/btsH0NYN9yU/kO0sPIPXPAAiHuQPssMbmk/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bcRJ4i/btsH0NYN9yU/kO0sPIPXPAAiHuQPssMbmk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbcRJ4i%2FbtsH0NYN9yU%2FkO0sPIPXPAAiHuQPssMbmk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Enigma Virtual Box.png\" data-origin-width=\"635\" data-origin-height=\"516\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶ Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드◀</p>\n<figure id=\"og_1718580501825\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Software Protection, Software Licensing, Software Virtualization\" data-og-description=\"Enigma Virtual Box is used for file and registry systems virtualization and allows you to consolidate all files and registry used by your application into a single executable file without having to extract virtual files to the disk. With Enigma Virtual Box\" data-og-host=\"enigmaprotector.com\" data-og-source-url=\"https://enigmaprotector.com/en/aboutvb.html\" data-og-url=\"https://enigmaprotector.com/en/aboutvb.html\" data-og-image=\"\"><a href=\"https://enigmaprotector.com/en/aboutvb.html\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://enigmaprotector.com/en/aboutvb.html\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Software Protection, Software Licensing, Software Virtualization</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Enigma Virtual Box is used for file and registry systems virtualization and allows you to consolidate all files and registry used by your application into a single executable file without having to extract virtual files to the disk. With Enigma Virtual Box</p>\n<p class=\"og-host\" data-ke-size=\"size16\">enigmaprotector.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_2\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>2. DiskSavvy&nbsp;(하드&nbsp;드라이버&nbsp;사용공간&nbsp;분석툴)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;다용도의&nbsp;무료&nbsp;분석&nbsp;도구로,&nbsp;하드&nbsp;드라이브&nbsp;공간이&nbsp;어떻게&nbsp;사용되고&nbsp;있는지&nbsp;정확히&nbsp;보여줍니다.&nbsp;분석&nbsp;버튼을&nbsp;클릭하고&nbsp;프로그램이&nbsp;검사할&nbsp;폴더,&nbsp;드라이브&nbsp;등을&nbsp;선택하면&nbsp;작업을&nbsp;수행합니다.&nbsp;결과는&nbsp;DiskSavvy가&nbsp;생성하는&nbsp;대로&nbsp;표시되므로&nbsp;유용한&nbsp;정보를&nbsp;기다리지&nbsp;않아도&nbsp;됩니다.&nbsp; <br /><br />기본적으로&nbsp;하드&nbsp;드라이브에서&nbsp;가장&nbsp;많은&nbsp;공간을&nbsp;차지하는&nbsp;폴더를&nbsp;볼&nbsp;수&nbsp;있습니다.&nbsp;테스트&nbsp;PC에서는&nbsp;Users&nbsp;폴더가&nbsp;46%의&nbsp;드라이브&nbsp;공간을&nbsp;차지했습니다.&nbsp;해당&nbsp;폴더를&nbsp;더블&nbsp;클릭하면&nbsp;하위&nbsp;폴더와&nbsp;디스크&nbsp;공간&nbsp;요구&nbsp;사항을&nbsp;표시하여&nbsp;문제&nbsp;영역을&nbsp;자세히&nbsp;확인할&nbsp;수&nbsp;있습니다. <br /><br />또한&nbsp;파일&nbsp;확장자,&nbsp;유형별로&nbsp;디스크&nbsp;사용량을&nbsp;볼&nbsp;수&nbsp;있고,&nbsp;파일&nbsp;크기,&nbsp;생성/수정/최종&nbsp;액세스&nbsp;시간별로&nbsp;정렬된&nbsp;보고서를&nbsp;통해&nbsp;시스템의&nbsp;하드&nbsp;드라이브&nbsp;사용량을&nbsp;더&nbsp;잘&nbsp;이해할&nbsp;수&nbsp;있습니다. <br /><br />정리가&nbsp;필요한&nbsp;경우&nbsp;DiskSavvy에서&nbsp;선택한&nbsp;파일을&nbsp;삭제하거나&nbsp;압축하여&nbsp;안전한&nbsp;백업&nbsp;위치로&nbsp;이동할&nbsp;수&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DiskSavvy.png\" data-origin-width=\"656\" data-origin-height=\"438\"><span data-url=\"https://blog.kakaocdn.net/dn/bQ9vWk/btsH0wwcCJB/WPL7Q88HEoRF0UkUYoWsLK/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bQ9vWk/btsH0wwcCJB/WPL7Q88HEoRF0UkUYoWsLK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbQ9vWk%2FbtsH0wwcCJB%2FWPL7Q88HEoRF0UkUYoWsLK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"DiskSavvy.png\" data-origin-width=\"656\" data-origin-height=\"438\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1718580618772\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"DiskSavvy - Disk Space Analyzer\" data-og-description=\"DiskSavvy News 13-Jun-2024 - DiskSavvy v16.1 redesigns the built-in disk space monitor allowing one to continuously monitor a number of disks or network shares and send E-Mail notifications if the amount of the free disk space drops below the user-specifie\" data-og-host=\"www.disksavvy.com\" data-og-source-url=\"https://www.disksavvy.com/\" data-og-url=\"https://www.disksavvy.com/\" data-og-image=\"\"><a href=\"https://www.disksavvy.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.disksavvy.com/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">DiskSavvy - Disk Space Analyzer</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">DiskSavvy News 13-Jun-2024 - DiskSavvy v16.1 redesigns the built-in disk space monitor allowing one to continuously monitor a number of disks or network shares and send E-Mail notifications if the amount of the free disk space drops below the user-specifie</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.disksavvy.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_3\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>3. Vidiot&nbsp;&nbsp;(오픈소스&nbsp;비선형&nbsp;비디오&nbsp;편집기)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;기본적인&nbsp;홈&nbsp;비디오&nbsp;편집을&nbsp;위한&nbsp;비선형&nbsp;비디오&nbsp;편집기입니다.&nbsp;몇&nbsp;개의&nbsp;클립을&nbsp;추가하면&nbsp;드래그&nbsp;앤&nbsp;드롭,&nbsp;복사&nbsp;및&nbsp;붙여넣기를&nbsp;통해&nbsp;순서를&nbsp;정렬하고&nbsp;간단한&nbsp;페이드&nbsp;효과를&nbsp;추가할&nbsp;수&nbsp;있습니다.&nbsp;클립을&nbsp;확대하여&nbsp;프리뷰하고&nbsp;마우스나&nbsp;키보드로&nbsp;트리밍할&nbsp;수&nbsp;있습니다.&nbsp; <br /><br />단일&nbsp;패널에서&nbsp;대부분의&nbsp;효과와&nbsp;상태&nbsp;정보(속도,&nbsp;불투명도,&nbsp;비디오&nbsp;크롭,&nbsp;회전,&nbsp;크기&nbsp;조절,&nbsp;위치,&nbsp;볼륨,&nbsp;키프레임&nbsp;등)에&nbsp;액세스할&nbsp;수&nbsp;있습니다.&nbsp;타이틀에&nbsp;대한&nbsp;지원은&nbsp;제한적이며&nbsp;고급&nbsp;편집기의&nbsp;마법사나&nbsp;템플릿과&nbsp;같은&nbsp;기능은&nbsp;없고&nbsp;투명&nbsp;이미지&nbsp;오버레이만&nbsp;가능합니다. <br /><br />작업이&nbsp;완료되면&nbsp;Vidiot는&nbsp;사용자가&nbsp;선택한&nbsp;코덱과&nbsp;비트레이트로&nbsp;최종&nbsp;비디오를&nbsp;렌더링합니다.&nbsp;직관적이지&nbsp;않은&nbsp;인터페이스&nbsp;때문에&nbsp;항상&nbsp;straightforward한&nbsp;것은&nbsp;아니지만&nbsp;필요한&nbsp;경우&nbsp;내장&nbsp;도움말을&nbsp;사용할&nbsp;수&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Vidiot.png\" data-origin-width=\"787\" data-origin-height=\"676\"><span data-url=\"https://blog.kakaocdn.net/dn/Ixgrg/btsH1h59AC0/Ki3BnKtCkYarQuE6uPKJiK/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/Ixgrg/btsH1h59AC0/Ki3BnKtCkYarQuE6uPKJiK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FIxgrg%2FbtsH1h59AC0%2FKi3BnKtCkYarQuE6uPKJiK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Vidiot.png\" data-origin-width=\"787\" data-origin-height=\"676\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업 (오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11&nbsp;</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1718580673325\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"product\" data-og-title=\"Vidiot\" data-og-description=\"Download Vidiot for free. Non-linear video editor targeted for home video editing. Vidiot is a non-linear video editor targeted for home video editing. It supports compositing (scaling/rotating/positioning), cropping, changing speed, adding transitions and\" data-og-host=\"sourceforge.net\" data-og-source-url=\"https://sourceforge.net/projects/vidiot/\" data-og-url=\"https://sourceforge.net/projects/vidiot/\" data-og-image=\"https://scrap.kakaocdn.net/dn/ARxPA/hyWlbYWaBQ/q9fTbuPCkfzpBRCQjOD9LK/img.png?width=48&amp;height=48&amp;face=0_0_48_48\"><a href=\"https://sourceforge.net/projects/vidiot/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://sourceforge.net/projects/vidiot/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/ARxPA/hyWlbYWaBQ/q9fTbuPCkfzpBRCQjOD9LK/img.png?width=48&amp;height=48&amp;face=0_0_48_48');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Vidiot</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Download Vidiot for free. Non-linear video editor targeted for home video editing. Vidiot is a non-linear video editor targeted for home video editing. It supports compositing (scaling/rotating/positioning), cropping, changing speed, adding transitions and</p>\n<p class=\"og-host\" data-ke-size=\"size16\">sourceforge.net</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_4\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>4. cmder&nbsp;(Windows용&nbsp;휴대용&nbsp;콘솔&nbsp;에뮬레이터)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; Windows&nbsp;명령줄&nbsp;인터페이스를&nbsp;확장하는&nbsp;무료&nbsp;소프트웨어&nbsp;패키지입니다.&nbsp;탭&nbsp;지원&nbsp;기능이&nbsp;있어&nbsp;여러&nbsp;세션을&nbsp;쉽게&nbsp;전환할&nbsp;수&nbsp;있습니다.&nbsp;탭을&nbsp;마우스&nbsp;오른쪽&nbsp;버튼으로&nbsp;클릭하면&nbsp;다양한&nbsp;옵션을&nbsp;사용할&nbsp;수&nbsp;있습니다.&nbsp;유용한&nbsp;키보드&nbsp;단축키가&nbsp;많이&nbsp;있어&nbsp;작업&nbsp;효율을&nbsp;높입니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;Shift+Up으로 상위 디렉토리로 이동하고 Alt+Enter로 전체 화면 모드를 전환합니다. Ctrl+Alt+2로 PowerShell을 실행할 수 있습니다. 라인 편집기 기능이 강력해서 텍스트 편집이 편리합니다. Ctrl+V로 클립보드에서 붙여넣기하고 Ctrl+Z로 실행 취소할 수 있습니다. 고급 명령 자동완성, 편집, 기록 도구 등이 있습니다. ConEmu 도구와 clink 에디터를 기반으로 합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"cmder.png\" data-origin-width=\"696\" data-origin-height=\"415\"><span data-url=\"https://blog.kakaocdn.net/dn/PVRh1/btsH0MyKCAt/d3HTD25c4PPRJfS3npAqjK/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/PVRh1/btsH0MyKCAt/d3HTD25c4PPRJfS3npAqjK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FPVRh1%2FbtsH0MyKCAt%2Fd3HTD25c4PPRJfS3npAqjK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"cmder.png\" data-origin-width=\"696\" data-origin-height=\"415\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업&nbsp;(오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1718580720600\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Cmder | Console Emulator\" data-og-description=\"Total portability Carry it with you on a USB stick or in the Cloud, so your settings, aliases and history can go anywhere you go. You will not see that ugly Windows prompt ever again.\" data-og-host=\"cmder.app\" data-og-source-url=\"https://cmder.app/\" data-og-url=\"https://cmder.app/\" data-og-image=\"https://scrap.kakaocdn.net/dn/nV7C8/hyWljvP4ms/MS0Vamkljes2JquZZk1oq1/img.png?width=1366&amp;height=732&amp;face=0_0_1366_732,https://scrap.kakaocdn.net/dn/bTa5Yt/hyWoOgFmrR/GLkd1RbfI4JFzp4IYTcfck/img.png?width=400&amp;height=300&amp;face=0_0_400_300,https://scrap.kakaocdn.net/dn/OeTqV/hyWoJ7vFwa/21gNBbc4rp88eD1FJ6LEZ0/img.png?width=400&amp;height=300&amp;face=0_0_400_300\"><a href=\"https://cmder.app/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://cmder.app/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/nV7C8/hyWljvP4ms/MS0Vamkljes2JquZZk1oq1/img.png?width=1366&amp;height=732&amp;face=0_0_1366_732,https://scrap.kakaocdn.net/dn/bTa5Yt/hyWoOgFmrR/GLkd1RbfI4JFzp4IYTcfck/img.png?width=400&amp;height=300&amp;face=0_0_400_300,https://scrap.kakaocdn.net/dn/OeTqV/hyWoJ7vFwa/21gNBbc4rp88eD1FJ6LEZ0/img.png?width=400&amp;height=300&amp;face=0_0_400_300');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Cmder | Console Emulator</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Total portability Carry it with you on a USB stick or in the Cloud, so your settings, aliases and history can go anywhere you go. You will not see that ugly Windows prompt ever again.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">cmder.app</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_5\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>5. dnGrep&nbsp;(강력한&nbsp;텍스트&nbsp;검색/바꾸기&nbsp;기능)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; Windows용&nbsp;강력한&nbsp;텍스트&nbsp;검색&nbsp;및&nbsp;바꾸기&nbsp;도구입니다.&nbsp;프로그램은&nbsp;다양한&nbsp;기능과&nbsp;설정을&nbsp;제공하지만&nbsp;인터페이스&nbsp;디자인이&nbsp;잘&nbsp;되어&nbsp;있어&nbsp;방해되지&nbsp;않습니다.&nbsp;초기에는&nbsp;경로를&nbsp;지정하고&nbsp;텍스트&nbsp;문자열을&nbsp;입력한&nbsp;후&nbsp;검색버튼을&nbsp;클릭하기만&nbsp;하면&nbsp;됩니다.&nbsp;더&nbsp;많은&nbsp;기능이&nbsp;필요하다면&nbsp;사용자&nbsp;지정&nbsp;필터를&nbsp;설정하여&nbsp;검색을&nbsp;미세&nbsp;조정할&nbsp;수&nbsp;있습니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;텍스트, 정규식, 발음, XPath 등 다양한 검색 유형을 지원합니다. 기본적으로 검색 결과는 결과 창에 표시됩니다. 검색 외에도 텍스트 바꾸기 기능을 제공합니다. 검색 및 바꾸기 텍스트는 세션 간에 유지되므로 설정을 최소화할 수 있습니다. 최근 검색 기록과 자주 사용하는 쿼리를 저장할 수 있는 북마크 시스템도 있습니다</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"dnGrep.png\" data-origin-width=\"1565\" data-origin-height=\"898\"><span data-url=\"https://blog.kakaocdn.net/dn/lk170/btsH1DOFS6M/lCYijtXpmcqkkI9fvPHZu0/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/lk170/btsH1DOFS6M/lCYijtXpmcqkkI9fvPHZu0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Flk170%2FbtsH1DOFS6M%2FlCYijtXpmcqkkI9fvPHZu0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"dnGrep.png\" data-origin-width=\"1565\" data-origin-height=\"898\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업&nbsp;(오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1718580763076\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"dnGrep &ndash; Powerful search for Windows\" data-og-description=\"dnGrep allows you to search across files with easy-to-read results. Search through text files, Word and Excel documents, PDFs, and archives using text, regular expression, XPath, and phonetic queries. dnGrep includes search-and-replace, whole-file preview,\" data-og-host=\"dngrep.github.io\" data-og-source-url=\"https://dngrep.github.io/\" data-og-url=\"https://dngrep.github.io/\" data-og-image=\"https://scrap.kakaocdn.net/dn/LYxfr/hyWlicDEQO/wiKpholLZ2MCwqAInrVnkK/img.png?width=1565&amp;height=898&amp;face=0_0_1565_898,https://scrap.kakaocdn.net/dn/OKK0k/hyWloxbsuv/NYgCfz5XIkQeKKJZ4PPKp0/img.png?width=919&amp;height=731&amp;face=0_0_919_731\"><a href=\"https://dngrep.github.io/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://dngrep.github.io/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/LYxfr/hyWlicDEQO/wiKpholLZ2MCwqAInrVnkK/img.png?width=1565&amp;height=898&amp;face=0_0_1565_898,https://scrap.kakaocdn.net/dn/OKK0k/hyWloxbsuv/NYgCfz5XIkQeKKJZ4PPKp0/img.png?width=919&amp;height=731&amp;face=0_0_919_731');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">dnGrep &ndash; Powerful search for Windows</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">dnGrep allows you to search across files with easy-to-read results. Search through text files, Word and Excel documents, PDFs, and archives using text, regular expression, XPath, and phonetic queries. dnGrep includes search-and-replace, whole-file preview,</p>\n<p class=\"og-host\" data-ke-size=\"size16\">dngrep.github.io</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.\n\n\n \n 윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는 상용프로그램과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의 쉐어웨어, 무료로 사용할 수 있는 프리웨어등으로 크게 3가지로 나뉘게 되는데요.\n 물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개하고 있습니다.\n \n \n'어떤오후의 프리웨어 이야기'에서 추천하는\n 2024년 6월 17일자 공개자료실 윈도우용 추천 프리웨어입니다.\n \n1. Enigma Virtual Box (Windows용 애플리케이션 가상화 시스템)\n\n 애플리케이션에서 사용되는 모든 파일들을 단일 모듈로 결합할 수 있습니다. 이를 통해 여러 파일과 폴더 대신 단일 실행 파일을 사용할 수 있어 더욱 편리합니다. 실제 이점은 타인이 자신의 작업물을 훔치는 것을 방지할 수 있다는 점입니다. \n \n 일반적으로 사람들은 설치 폴더를 browsing하고 이미지, 오디오, 동영상, DLL, OCX 등의 파일들을 검사하거나 가져갈 수 있습니다. 하지만 Enigma Virtual Box를 사용하면 모든 파일이 단일 모듈로 압축되어 실행 시 하드드라이브가 아닌 RAM에 unpacking되므로 소프트웨어를 검사하기 어려워집니다.\n \n 프로그램 사용이 놀랍도록 간단합니다. 애플리케이션 폴더와 core 실행 파일을 지정하기만 하면 되는 경우도 있습니다. 또한 레지스트리 가상화 등의 다른 옵션도 제공됩니다. 개발사에서는 추가 보안 계층을 더한 Enigma Protector 상업용 빌드도 제공하고 있습니다.\n\n\n \n▶프리웨어 - 개인\n▶ Windows 10/11\n▶무료 다운로드◀\n\n \nSoftware Protection, Software Licensing, Software Virtualization\nEnigma Virtual Box is used for file and registry systems virtualization and allows you to consolidate all files and registry used by your application into a single executable file without having to extract virtual files to the disk. With Enigma Virtual Box\nenigmaprotector.com\n\n \n \n \n2. DiskSavvy (하드 드라이버 사용공간 분석툴)\n 다용도의 무료 분석 도구로, 하드 드라이브 공간이 어떻게 사용되고 있는지 정확히 보여줍니다. 분석 버튼을 클릭하고 프로그램이 검사할 폴더, 드라이브 등을 선택하면 작업을 수행합니다. 결과는 DiskSavvy가 생성하는 대로 표시되므로 유용한 정보를 기다리지 않아도 됩니다.  \n기본적으로 하드 드라이브에서 가장 많은 공간을 차지하는 폴더를 볼 수 있습니다. 테스트 PC에서는 Users 폴더가 46%의 드라이브 공간을 차지했습니다. 해당 폴더를 더블 클릭하면 하위 폴더와 디스크 공간 요구 사항을 표시하여 문제 영역을 자세히 확인할 수 있습니다. \n또한 파일 확장자, 유형별로 디스크 사용량을 볼 수 있고, 파일 크기, 생성/수정/최종 액세스 시간별로 정렬된 보고서를 통해 시스템의 하드 드라이브 사용량을 더 잘 이해할 수 있습니다. \n정리가 필요한 경우 DiskSavvy에서 선택한 파일을 삭제하거나 압축하여 안전한 백업 위치로 이동할 수 있습니다.\n\n\n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nDiskSavvy - Disk Space Analyzer\nDiskSavvy News 13-Jun-2024 - DiskSavvy v16.1 redesigns the built-in disk space monitor allowing one to continuously monitor a number of disks or network shares and send E-Mail notifications if the amount of the free disk space drops below the user-specifie\nwww.disksavvy.com\n\n \n \n \n3. Vidiot  (오픈소스 비선형 비디오 편집기)\n 기본적인 홈 비디오 편집을 위한 비선형 비디오 편집기입니다. 몇 개의 클립을 추가하면 드래그 앤 드롭, 복사 및 붙여넣기를 통해 순서를 정렬하고 간단한 페이드 효과를 추가할 수 있습니다. 클립을 확대하여 프리뷰하고 마우스나 키보드로 트리밍할 수 있습니다.  \n단일 패널에서 대부분의 효과와 상태 정보(속도, 불투명도, 비디오 크롭, 회전, 크기 조절, 위치, 볼륨, 키프레임 등)에 액세스할 수 있습니다. 타이틀에 대한 지원은 제한적이며 고급 편집기의 마법사나 템플릿과 같은 기능은 없고 투명 이미지 오버레이만 가능합니다. \n작업이 완료되면 Vidiot는 사용자가 선택한 코덱과 비트레이트로 최종 비디오를 렌더링합니다. 직관적이지 않은 인터페이스 때문에 항상 straightforward한 것은 아니지만 필요한 경우 내장 도움말을 사용할 수 있습니다.\n\n\n▶프리웨어 - 개인/기업 (오픈소스)\n▶Windows 10/11 \n▶무료 다운로드 ◀\n\n \nVidiot\nDownload Vidiot for free. Non-linear video editor targeted for home video editing. Vidiot is a non-linear video editor targeted for home video editing. It supports compositing (scaling/rotating/positioning), cropping, changing speed, adding transitions and\nsourceforge.net\n\n \n \n \n4. cmder (Windows용 휴대용 콘솔 에뮬레이터)\n  Windows 명령줄 인터페이스를 확장하는 무료 소프트웨어 패키지입니다. 탭 지원 기능이 있어 여러 세션을 쉽게 전환할 수 있습니다. 탭을 마우스 오른쪽 버튼으로 클릭하면 다양한 옵션을 사용할 수 있습니다. 유용한 키보드 단축키가 많이 있어 작업 효율을 높입니다. \n \n Shift+Up으로 상위 디렉토리로 이동하고 Alt+Enter로 전체 화면 모드를 전환합니다. Ctrl+Alt+2로 PowerShell을 실행할 수 있습니다. 라인 편집기 기능이 강력해서 텍스트 편집이 편리합니다. Ctrl+V로 클립보드에서 붙여넣기하고 Ctrl+Z로 실행 취소할 수 있습니다. 고급 명령 자동완성, 편집, 기록 도구 등이 있습니다. ConEmu 도구와 clink 에디터를 기반으로 합니다.\n\n\n▶프리웨어 - 개인/기업 (오픈소스)\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nCmder | Console Emulator\nTotal portability Carry it with you on a USB stick or in the Cloud, so your settings, aliases and history can go anywhere you go. You will not see that ugly Windows prompt ever again.\ncmder.app\n\n \n \n \n5. dnGrep (강력한 텍스트 검색/바꾸기 기능)\n  Windows용 강력한 텍스트 검색 및 바꾸기 도구입니다. 프로그램은 다양한 기능과 설정을 제공하지만 인터페이스 디자인이 잘 되어 있어 방해되지 않습니다. 초기에는 경로를 지정하고 텍스트 문자열을 입력한 후 검색버튼을 클릭하기만 하면 됩니다. 더 많은 기능이 필요하다면 사용자 지정 필터를 설정하여 검색을 미세 조정할 수 있습니다. \n \n 텍스트, 정규식, 발음, XPath 등 다양한 검색 유형을 지원합니다. 기본적으로 검색 결과는 결과 창에 표시됩니다. 검색 외에도 텍스트 바꾸기 기능을 제공합니다. 검색 및 바꾸기 텍스트는 세션 간에 유지되므로 설정을 최소화할 수 있습니다. 최근 검색 기록과 자주 사용하는 쿼리를 저장할 수 있는 북마크 시스템도 있습니다\n\n\n▶프리웨어 - 개인/기업 (오픈소스)\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \ndnGrep – Powerful search for Windows\ndnGrep allows you to search across files with easy-to-read results. Search through text files, Word and Excel documents, PDFs, and archives using text, regular expression, XPath, and phonetic queries. dnGrep includes search-and-replace, whole-file preview,\ndngrep.github.io",
        "guid": "http://muzbox.tistory.com/1998",
        "categories": [
          "NEWS/프리웨어 뉴스",
          "It",
          "가상머신",
          "공개자료실",
          "무료비디오편집",
          "무료프로그램",
          "윈도우 콘솔 에뮬레이터",
          "테크플러스",
          "텍스트 검색/바꾸기 기능",
          "하드디스크분석"
        ],
        "isoDate": "2024-06-16T23:34:41.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": [
      {
        "creator": "늑돌이",
        "title": "삼성, 에너지 절약 강화한 스마트싱스 에너지(SmartThings Energy) 서비스 개편",
        "link": "https://lazion.com/2513706",
        "pubDate": "Thu, 20 Jun 2024 11:33:34 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513706#entry2513706comment",
        "content": "<h3 data-ke-size=\"size23\">삼성전자가 에너지 절약 기능 중심으로 <b>스마트싱스 에너지(SmartThings Energy)</b> 서비스를 오늘(20일) 개편했습니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2009358633_20240619182812_6407040536_web.jpg\" data-origin-width=\"2530\" data-origin-height=\"1628\"><span data-url=\"https://blog.kakaocdn.net/dn/0qA3T/btsH5036GkT/Lij2A8qdX4QVJVWBTJMIHk/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/0qA3T/btsH5036GkT/Lij2A8qdX4QVJVWBTJMIHk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F0qA3T%2FbtsH5036GkT%2FLij2A8qdX4QVJVWBTJMIHk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"2009358633_20240619182812_6407040536_web.jpg\" data-origin-width=\"2530\" data-origin-height=\"1628\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">삼성 스마트싱스 에너지는 에너지의 사용량을 실시간으로 알려주고 AI 절감 솔루션을 제공하는 홈 에너지 관리 서비스로 세계 97개국 601만 명이 사용하고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>삼성 스마트싱스 에너지 서비스, 달라진 점은?</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>AI 절약 모드</b><br />AI 절약 모드로 기기를 미리 설정해 두면, 옵션에 따라 누진 단계에 이르기 전 또는 탄소 배출이 높은 시간 등에 AI 절약 모드를 실행하여 에너지를 절약하고, AI를 통해 사용 환경이나 전기요금 체계, 사용자 편의를 고려한 월말 사용량 예측 등을 제공합니다.<br />다만 누진 단계는 국내에서만 쓸 수 있으며, 스마트싱스와 연결할 스마트 미터기는 별도 구매가 필요합니다. <br /><br /></li>\n<li><b>게임 요소 접목</b><br />에너지 모니터링 및 절약량을 환산한 점수인 에너지 등급, 스마트싱스 에너지 서비스 활동에 참여하여 모으는 활동 배지, 전력 사용량 절감 알림(DR 발령)시 절약한 전기 사용량만큼 혜택을 받는 에너지 절약 미션* 등을 도입했습니다.<br />특히 AI 절약 모드를 통해 에너지를 일일 400Wh 이상 절약한 경우, 에너지 스탬프 최대 1개를 제공하며, 7월 1일부터 에너지 스탬프 1개는 <b>삼성전자 멤버십 포인트 100점</b>으로 전환 가능합니다.<br />삼성전자 멤버십 포인트는 삼성닷컴, 전국 삼성스토어와 이마트&middot;홈플러스 등 오프라인에서도 사용할 수 있습니다.<br /><br /></li>\n</ul>\n<blockquote data-ke-style=\"style3\">*에너지 절약 미션(DR) : 전력 사용량이 많은 시간에 전력거래소나 지자체가 전력 사용량 절감을 권고하고(DR 발령) 이에 맞춰 개별 세대가 전기 사용량을 줄일 경우, 인센티브를 지급하는 제도임</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : <a href=\"https://www.samsung.com/sec/\" target=\"_blank\" rel=\"noopener\">삼성전자</a>)</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"text-align: left;\" data-ke-size=\"size20\">관련 글</h4>\n<figure id=\"og_1718850677813\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"삼성 스마트싱스 제품, 지속적인 업데이트 강조하는 스마트 포워드 본격화\" data-og-description=\"삼성전자가 스마트싱스(SmartThings) 기반의 스마트 포워드(Smart Forward) 서비스를 본격화합니다.&nbsp;스마트 포워드는 정기적이고 지속적인 소프트웨어 업데이트를 제공해, 신제품이 아니더라도 최신 \" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513650\" data-og-url=\"https://lazion.com/2513650\" data-og-image=\"https://scrap.kakaocdn.net/dn/pPtOW/hyWoJUzSdq/Kt5mjkUr5xVejdAazXR5Hk/img.jpg?width=800&amp;height=532&amp;face=326_141_403_226,https://scrap.kakaocdn.net/dn/NYWYX/hyWoI9dVQa/R7qwxh07eqKh5YKYHOHKYk/img.jpg?width=800&amp;height=532&amp;face=326_141_403_226,https://scrap.kakaocdn.net/dn/betoMh/hyWoI2szfp/AX0yDuc04G8R9rKLLhwiv1/img.jpg?width=1000&amp;height=666&amp;face=414_175_504_275\"><a href=\"https://lazion.com/2513650\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513650\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/pPtOW/hyWoJUzSdq/Kt5mjkUr5xVejdAazXR5Hk/img.jpg?width=800&amp;height=532&amp;face=326_141_403_226,https://scrap.kakaocdn.net/dn/NYWYX/hyWoI9dVQa/R7qwxh07eqKh5YKYHOHKYk/img.jpg?width=800&amp;height=532&amp;face=326_141_403_226,https://scrap.kakaocdn.net/dn/betoMh/hyWoI2szfp/AX0yDuc04G8R9rKLLhwiv1/img.jpg?width=1000&amp;height=666&amp;face=414_175_504_275');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">삼성 스마트싱스 제품, 지속적인 업데이트 강조하는 스마트 포워드 본격화</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">삼성전자가 스마트싱스(SmartThings) 기반의 스마트 포워드(Smart Forward) 서비스를 본격화합니다.&nbsp;스마트 포워드는 정기적이고 지속적인 소프트웨어 업데이트를 제공해, 신제품이 아니더라도 최신</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "삼성전자가 에너지 절약 기능 중심으로 스마트싱스 에너지(SmartThings Energy) 서비스를 오늘(20일) 개편했습니다.\n \n\n\n \n삼성 스마트싱스 에너지는 에너지의 사용량을 실시간으로 알려주고 AI 절감 솔루션을 제공하는 홈 에너지 관리 서비스로 세계 97개국 601만 명이 사용하고 있습니다.\n \n삼성 스마트싱스 에너지 서비스, 달라진 점은?\n \nAI 절약 모드\nAI 절약 모드로 기기를 미리 설정해 두면, 옵션에 따라 누진 단계에 이르기 전 또는 탄소 배출이 높은 시간 등에 AI 절약 모드를 실행하여 에너지를 절약하고, AI를 통해 사용 환경이나 전기요금 체계, 사용자 편의를 고려한 월말 사용량 예측 등을 제공합니다.\n다만 누진 단계는 국내에서만 쓸 수 있으며, 스마트싱스와 연결할 스마트 미터기는 별도 구매가 필요합니다. \n\n게임 요소 접목\n에너지 모니터링 및 절약량을 환산한 점수인 에너지 등급, 스마트싱스 에너지 서비스 활동에 참여하여 모으는 활동 배지, 전력 사용량 절감 알림(DR 발령)시 절약한 전기 사용량만큼 혜택을 받는 에너지 절약 미션* 등을 도입했습니다.\n특히 AI 절약 모드를 통해 에너지를 일일 400Wh 이상 절약한 경우, 에너지 스탬프 최대 1개를 제공하며, 7월 1일부터 에너지 스탬프 1개는 삼성전자 멤버십 포인트 100점으로 전환 가능합니다.\n삼성전자 멤버십 포인트는 삼성닷컴, 전국 삼성스토어와 이마트·홈플러스 등 오프라인에서도 사용할 수 있습니다.\n\n*에너지 절약 미션(DR) : 전력 사용량이 많은 시간에 전력거래소나 지자체가 전력 사용량 절감을 권고하고(DR 발령) 이에 맞춰 개별 세대가 전기 사용량을 줄일 경우, 인센티브를 지급하는 제도임\n \n(출처 : 삼성전자)\n \n관련 글\n\n \n삼성 스마트싱스 제품, 지속적인 업데이트 강조하는 스마트 포워드 본격화\n삼성전자가 스마트싱스(SmartThings) 기반의 스마트 포워드(Smart Forward) 서비스를 본격화합니다. 스마트 포워드는 정기적이고 지속적인 소프트웨어 업데이트를 제공해, 신제품이 아니더라도 최신\nlazion.com",
        "guid": "https://lazion.com/2513706",
        "categories": [
          "#가전#음식#문화",
          "AI",
          "Ha",
          "IOT",
          "News",
          "Samsung",
          "SEC",
          "Smartthings"
        ],
        "isoDate": "2024-06-20T02:33:34.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "삼성, 중저가 5G폰 갤럭시 A35 5G 한국 출시",
        "link": "https://lazion.com/2513705",
        "pubDate": "Thu, 20 Jun 2024 10:08:12 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513705#entry2513705comment",
        "content": "<p data-ke-size=\"size16\">삼성전자가 중저가 5G폰 갤럭시 A35 5G를 오는 21일 국내에 출시합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><b><span style=\"color: #006dd7;\">갤럭시 A35 5G 가격은?</span></b></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"003 - 삼성전자-모바일-갤럭시-갤럭시-A35-5G-출시-2-e1718779850889.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"><span data-url=\"https://blog.kakaocdn.net/dn/LBBgg/btsH4ATiAy1/cPXtYq6fSaxxB2KoR9rB00/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/LBBgg/btsH4ATiAy1/cPXtYq6fSaxxB2KoR9rB00/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FLBBgg%2FbtsH4ATiAy1%2FcPXtYq6fSaxxB2KoR9rB00%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"003 - 삼성전자-모바일-갤럭시-갤럭시-A35-5G-출시-2-e1718779850889.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">국내이동통신 3사와 자급제 모델로 출시되는 <b>갤럭시 A35 5G의 가격은 49만 9,400원</b>입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 A35 5G 주요 특징</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"002 - 삼성전자-모바일-갤럭시-갤럭시-A35-5G-출시-1-e1718779744456.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"><span data-url=\"https://blog.kakaocdn.net/dn/dgu6Oj/btsH5khZJfF/FJPlVxMxmfHBbeeKQktyaK/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/dgu6Oj/btsH5khZJfF/FJPlVxMxmfHBbeeKQktyaK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdgu6Oj%2FbtsH5khZJfF%2FFJPlVxMxmfHBbeeKQktyaK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"002 - 삼성전자-모바일-갤럭시-갤럭시-A35-5G-출시-1-e1718779744456.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">라이트 블루, 라이트 바이올렛, 블루 블랙의 3가지 색상으로 출시되는 갤럭시 A35 5G의 주요 특징은 다음과 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>디스플레이<br /><b>168.3mm(6.6형) 대화면 슈퍼 아몰레드 화면은 120Hz 고주사율</b>을 지원하며, 비전부스터로 최대 1,000니트의 밝기를 지원하고 색상 대비를 극대화해 다양한 조도 환경에서도 선명한 화질을 구현합니다. 편안하게 보기(Eye Comfort Shield)은 블루라이트를 줄여줘 눈의 피로를 최소화해줍니다.<br /><br /></li>\n<li>카메라<br />후면에는 5,000만 화소의 광각 카메라를 비롯해, 800만 화소의 초광각 카메라, 500만 화소의 접사 카메라가, 전면에는 1,300만 화소 카메라가 탑재되었습니다. <br />후면 카메라에는 OIS(광학식 손떨림 보정)와 향상된 VDIS(동영상 손떨림 보정) 기능이 탑재돼 흔들림이나 움직임이 많은 상황에서도 또렷하고 매끄러운 촬영이 가능하며, 나이토그래피 기능으로 야간이나 어두운 환경에서 선명한 촬영이 가능합니다.<br /><br /></li>\n<li>배터리/저장소/방수방진<br /><b>5,000mAh의 대용량 배터리</b>를 채용하고, 최대 25W의 충전을 지원(25W 충전기 별매)합니다. <br />스토리지는 128G가 탑재됐으며, 최대 1TB의 마이크로SD 카드를 추가할 수 있습니다.<br />IP67 등급의 방수∙방진이 가능합니다.<br /><br /></li>\n<li><b>삼성월렛</b>과 삼성 녹스<br />삼성월렛을 통해 결제부터 모바일 신분증, 탑승권, 전자증명서, 쿠폰, 멤버십 등을 사용할 수 있으며 데이터를 안전하게 보호하는 삼성 녹스(Knox)도 탑재되었습니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 A35 5G 출시 기념 이벤트</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"004 - 삼성전자-모바일-갤럭시-갤럭시-A35-5G-출시-3-e1718779867991.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"><span data-url=\"https://blog.kakaocdn.net/dn/Meomq/btsH6Aw4glc/qjN6rwKB2yYSauGxoQwku0/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/Meomq/btsH6Aw4glc/qjN6rwKB2yYSauGxoQwku0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FMeomq%2FbtsH6Aw4glc%2FqjN6rwKB2yYSauGxoQwku0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"004 - 삼성전자-모바일-갤럭시-갤럭시-A35-5G-출시-3-e1718779867991.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">삼성전자는 갤럭시 A35 5G의 국내 출시를 기념해 9월 30일까지 구매 및 개통한 고객을 대상으로 윌라 3개월 무료 체험권과 추가 3개월 30% 할인권, 유튜브 프리미엄 2개월 무료 체험권과 마이크로소프트 365 베이직 6개월 체험권을 제공합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\" width=\"623\" data-ke-align=\"alignLeft\" data-ke-style=\"style12\">\n<tbody>\n<tr>\n<td style=\"width: 15%;\" colspan=\"3\"><span><span style=\"color: #ffffff;\"><b>갤럭시 A35 5G 스펙(제원/사양)<br /></b></span></span></td>\n</tr>\n<tr>\n<td style=\"width: 3.48837%;\"><b>디스플레이</b></td>\n<td style=\"width: 11.5058%;\" colspan=\"2\">6.6인치 FHD+<span><span><span><span>슈퍼 AMOLED 디스플레이 </span></span></span></span><br /><span><span><span><span>최대 120Hz 재생률 </span></span></span></span><br />비전 부스터</td>\n</tr>\n<tr>\n<td style=\"width: 3.48837%;\"><b>크기 및 무게 </b></td>\n<td style=\"width: 11.5058%;\" colspan=\"2\">161.7 x 78.0 x 8.2mm, 209g</td>\n</tr>\n<tr>\n<td style=\"width: 3.48837%;\"><b>카메라 </b></td>\n<td style=\"width: 11.5058%;\" colspan=\"2\">후면 : 8MP 초광각 카메라<span> F2.2, </span>50MP 메인 카메라<span>&middot; F1.8, AF/OIS, </span>5MP 매크로 카메라<span> F2.4 <br />전면 : 13MP 전면 카메라</span><span> F2.2</span></td>\n</tr>\n<tr>\n<td style=\"width: 3.48837%;\"><b>스토리지 </b></td>\n<td style=\"width: 11.5058%;\" colspan=\"2\"><span><span><span><span>128GB / 마이크로SD 카드<span><span><span><span>(별매)</span></span></span></span> 최대 1TB 추가 가능</span></span></span></span></td>\n</tr>\n<tr>\n<td style=\"width: 3.48837%;\"><b>배터리 </b></td>\n<td style=\"width: 11.5058%;\" colspan=\"2\">5,000mAh</td>\n</tr>\n<tr>\n<td style=\"width: 3.48837%;\"><b>OS</b></td>\n<td style=\"width: 11.5058%;\" colspan=\"2\">안드로이드 14 <br />원 UI 6.1</td>\n</tr>\n<tr>\n<td style=\"width: 3.48837%;\"><b>보안 </b></td>\n<td style=\"width: 11.5058%;\" colspan=\"2\">삼성 녹스</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : <a href=\"https://www.samsung.com/sec/\" target=\"_blank\" rel=\"noopener\">삼성전자</a>)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">관련 글</h4>\n<figure id=\"og_1718845888180\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"삼성 중급형 갤럭시 A55와 갤럭시 A35 발표, S24보다 더 중요?\" data-og-description=\"삼성전자 갤럭시 시리즈의 플래그십 모델은 갤럭시 S 시리즈입니다만, 실제로 많이 팔리는 모델은 더 저렴한 제품이죠. 그런 의미에서 갤럭시 A 시리즈는 삼성전자 스마트폰 판매에서 없어서는 \" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513603\" data-og-url=\"https://lazion.com/2513603\" data-og-image=\"https://scrap.kakaocdn.net/dn/dQew0F/hyWoEFKGx3/mc24V4NDcrqdmsKhHty2u0/img.jpg?width=800&amp;height=533&amp;face=0_0_800_533,https://scrap.kakaocdn.net/dn/WMBFG/hyWoNvVzxN/aqAkF8eKKKy3Nmu86KV8O1/img.jpg?width=800&amp;height=533&amp;face=0_0_800_533,https://scrap.kakaocdn.net/dn/CsfAp/hyWoMqe4kL/Pq7vLPO0meycuWXjSyshTK/img.jpg?width=4500&amp;height=3000&amp;face=0_0_4500_3000\"><a href=\"https://lazion.com/2513603\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513603\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/dQew0F/hyWoEFKGx3/mc24V4NDcrqdmsKhHty2u0/img.jpg?width=800&amp;height=533&amp;face=0_0_800_533,https://scrap.kakaocdn.net/dn/WMBFG/hyWoNvVzxN/aqAkF8eKKKy3Nmu86KV8O1/img.jpg?width=800&amp;height=533&amp;face=0_0_800_533,https://scrap.kakaocdn.net/dn/CsfAp/hyWoMqe4kL/Pq7vLPO0meycuWXjSyshTK/img.jpg?width=4500&amp;height=3000&amp;face=0_0_4500_3000');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">삼성 중급형 갤럭시 A55와 갤럭시 A35 발표, S24보다 더 중요?</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">삼성전자 갤럭시 시리즈의 플래그십 모델은 갤럭시 S 시리즈입니다만, 실제로 많이 팔리는 모델은 더 저렴한 제품이죠. 그런 의미에서 갤럭시 A 시리즈는 삼성전자 스마트폰 판매에서 없어서는</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "삼성전자가 중저가 5G폰 갤럭시 A35 5G를 오는 21일 국내에 출시합니다.\n \n갤럭시 A35 5G 가격은?\n\n\n \n국내이동통신 3사와 자급제 모델로 출시되는 갤럭시 A35 5G의 가격은 49만 9,400원입니다.\n \n \n갤럭시 A35 5G 주요 특징\n \n\n\n \n라이트 블루, 라이트 바이올렛, 블루 블랙의 3가지 색상으로 출시되는 갤럭시 A35 5G의 주요 특징은 다음과 같습니다.\n \n디스플레이\n168.3mm(6.6형) 대화면 슈퍼 아몰레드 화면은 120Hz 고주사율을 지원하며, 비전부스터로 최대 1,000니트의 밝기를 지원하고 색상 대비를 극대화해 다양한 조도 환경에서도 선명한 화질을 구현합니다. 편안하게 보기(Eye Comfort Shield)은 블루라이트를 줄여줘 눈의 피로를 최소화해줍니다.\n\n카메라\n후면에는 5,000만 화소의 광각 카메라를 비롯해, 800만 화소의 초광각 카메라, 500만 화소의 접사 카메라가, 전면에는 1,300만 화소 카메라가 탑재되었습니다. \n후면 카메라에는 OIS(광학식 손떨림 보정)와 향상된 VDIS(동영상 손떨림 보정) 기능이 탑재돼 흔들림이나 움직임이 많은 상황에서도 또렷하고 매끄러운 촬영이 가능하며, 나이토그래피 기능으로 야간이나 어두운 환경에서 선명한 촬영이 가능합니다.\n\n배터리/저장소/방수방진\n5,000mAh의 대용량 배터리를 채용하고, 최대 25W의 충전을 지원(25W 충전기 별매)합니다. \n스토리지는 128G가 탑재됐으며, 최대 1TB의 마이크로SD 카드를 추가할 수 있습니다.\nIP67 등급의 방수∙방진이 가능합니다.\n\n삼성월렛과 삼성 녹스\n삼성월렛을 통해 결제부터 모바일 신분증, 탑승권, 전자증명서, 쿠폰, 멤버십 등을 사용할 수 있으며 데이터를 안전하게 보호하는 삼성 녹스(Knox)도 탑재되었습니다.\n \n갤럭시 A35 5G 출시 기념 이벤트\n \n\n\n \n삼성전자는 갤럭시 A35 5G의 국내 출시를 기념해 9월 30일까지 구매 및 개통한 고객을 대상으로 윌라 3개월 무료 체험권과 추가 3개월 30% 할인권, 유튜브 프리미엄 2개월 무료 체험권과 마이크로소프트 365 베이직 6개월 체험권을 제공합니다.\n \n갤럭시 A35 5G 스펙(제원/사양)\n\n\n\n디스플레이\n6.6인치 FHD+슈퍼 AMOLED 디스플레이 \n최대 120Hz 재생률 \n비전 부스터\n\n\n크기 및 무게 \n161.7 x 78.0 x 8.2mm, 209g\n\n\n카메라 \n후면 : 8MP 초광각 카메라 F2.2, 50MP 메인 카메라· F1.8, AF/OIS, 5MP 매크로 카메라 F2.4 \n전면 : 13MP 전면 카메라 F2.2\n\n\n스토리지 \n128GB / 마이크로SD 카드(별매) 최대 1TB 추가 가능\n\n\n배터리 \n5,000mAh\n\n\nOS\n안드로이드 14 \n원 UI 6.1\n\n\n보안 \n삼성 녹스\n\n\n\n \n(출처 : 삼성전자)\n \n관련 글\n\n \n삼성 중급형 갤럭시 A55와 갤럭시 A35 발표, S24보다 더 중요?\n삼성전자 갤럭시 시리즈의 플래그십 모델은 갤럭시 S 시리즈입니다만, 실제로 많이 팔리는 모델은 더 저렴한 제품이죠. 그런 의미에서 갤럭시 A 시리즈는 삼성전자 스마트폰 판매에서 없어서는\nlazion.com",
        "guid": "https://lazion.com/2513705",
        "categories": [
          "#더작은모바일/#스마트폰#PDA#PMP",
          "Galaxy",
          "Galaxy A",
          "Galaxy A35 5G",
          "News",
          "Samsung",
          "SEC",
          "smartphone"
        ],
        "isoDate": "2024-06-20T01:08:12.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "RISC-V 노트북? 딥컴퓨팅, 8코어&middot;우분투의 DC-ROMA RISC-V Laptop II 발표",
        "link": "https://lazion.com/2513704",
        "pubDate": "Wed, 19 Jun 2024 16:07:15 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513704#entry2513704comment",
        "content": "<h3 data-ke-size=\"size23\">세계 최초로 RISC-V 아키텍처를 이용한 노트북을 내놓았던 <b>딥컴퓨팅(DeepComputing)</b>에서 그 후속으로 <b>DC-ROMA RISC-V Laptop II</b>를 내놓았습니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DC-ROMAII_UBUNTU-DESKTOP0612-2048x1546-vert.jpg\" data-origin-width=\"1600\" data-origin-height=\"1208\"><span data-url=\"https://blog.kakaocdn.net/dn/FEho3/btsH42uua4A/KuhNYLLCSkhKOAOsId6BB0/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/FEho3/btsH42uua4A/KuhNYLLCSkhKOAOsId6BB0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FFEho3%2FbtsH42uua4A%2FKuhNYLLCSkhKOAOsId6BB0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"DC-ROMAII_UBUNTU-DESKTOP0612-2048x1546-vert.jpg\" data-origin-width=\"1600\" data-origin-height=\"1208\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>DC-ROMA RISC-V Laptop II의 특징</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오픈소스 아키텍처 기술로 유명한 RISC-V는 낮은 성능으로 가능한 부문 위주로 시장에 진출해 왔습니다만, 이 제품은 그냥 PC로 나왔습니다. 다만 일반인용 노트북 PC라기 보다는 개발용으로 나온 제품입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>CPU는 SpacemiT K1</b><br /><br /><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DC-ROMA-RISC-V-Laptop-II_chip.png\" data-origin-width=\"484\" data-origin-height=\"293\"><span data-url=\"https://blog.kakaocdn.net/dn/9VO79/btsH4VPIGdg/p8MeNcAUWSBAU7apIvBD11/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/9VO79/btsH4VPIGdg/p8MeNcAUWSBAU7apIvBD11/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F9VO79%2FbtsH4VPIGdg%2Fp8MeNcAUWSBAU7apIvBD11%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"DC-ROMA-RISC-V-Laptop-II_chip.png\" data-origin-width=\"484\" data-origin-height=\"293\"/></span></figure>\n<br />DC-ROMA RISC-V Laptop II는 최대 2.0GHz로 실행되는 SpacemiT의 SoC K1을 최초로 탑재하고 나왔습니다. <br />K1은 1.5GHz에서 실행되는 전작의 4코어 SoC에 비해 성능과 에너지 효율성을 두 배로 향상시켰으며, 256비트 길이의 RISC-V 고성능 컴퓨팅 RVA 22 프로파일 RVV 1.0을 지원하고 IME 그룹 설계 원칙에 기반한 맞춤형 매트릭스 작동 명령으로 강력한 AI 퓨전 컴퓨팅 엔진(최대 2TOPS@INT)을 갖춘 세계 최초의 SoC입니다. <br /><br /></li>\n<li><b>개발용 노트북PC</b><br /><br /><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DC-ROMA-RISC-V-Laptop-II_09.png\" data-origin-width=\"547\" data-origin-height=\"506\"><span data-url=\"https://blog.kakaocdn.net/dn/bK6KpR/btsH42nKwqN/98dITjuQNJPueQQ1boGnM1/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bK6KpR/btsH42nKwqN/98dITjuQNJPueQQ1boGnM1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbK6KpR%2FbtsH42nKwqN%2F98dITjuQNJPueQQ1boGnM1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"DC-ROMA-RISC-V-Laptop-II_09.png\" data-origin-width=\"547\" data-origin-height=\"506\"/></span></figure>\n<br />화면은 14.1인치 풀HD 해상도의 IPS 패널이며, 올메탈 케이스로 전작 대비 나아진 내구성과 함께 열 방출 성능도 좋아졌습니다. RAM은 8/16GB 선택 가능하며 저장소는 1TB까지 제공합니다. 무게는 1.36kg에 배터리는 최대 8시간까지 사용가능합니다.<br /><br /><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DC-ROMA-RISC-V-Laptop-II_255.png\" data-origin-width=\"1153\" data-origin-height=\"797\"><span data-url=\"https://blog.kakaocdn.net/dn/xf5Xw/btsH5Y5KAzM/kd6naOcrO2RllfnS9YGzq1/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/xf5Xw/btsH5Y5KAzM/kd6naOcrO2RllfnS9YGzq1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fxf5Xw%2FbtsH5Y5KAzM%2Fkd6naOcrO2RllfnS9YGzq1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"DC-ROMA-RISC-V-Laptop-II_255.png\" data-origin-width=\"1153\" data-origin-height=\"797\"/></span></figure>\n<br />일반적인 PC와는 다르게 개발을 주 목적으로 만들어졌기 때문에 개발용 8핀 인터페이스가 존재합니다.<br /><br /></li>\n<li><b>OS는 우분투 리눅스</b><br />리눅스 분야에서 가장 대중적인 Canonical사의 우분투(Ubuntu) 리눅스가 DC-ROMA RISC-V Laptop II로 이식되었습니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>DC-ROMA RISC-V Laptop II의 출시 일자와 가격</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DC-ROMA-RISC-V-Laptop-II_21.png\" data-origin-width=\"590\" data-origin-height=\"463\"><span data-url=\"https://blog.kakaocdn.net/dn/Bm7vp/btsH37Q59bO/YxJ0sLa0oT2qkWSUA7LVy1/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/Bm7vp/btsH37Q59bO/YxJ0sLa0oT2qkWSUA7LVy1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FBm7vp%2FbtsH37Q59bO%2FYxJ0sLa0oT2qkWSUA7LVy1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"DC-ROMA-RISC-V-Laptop-II_21.png\" data-origin-width=\"590\" data-origin-height=\"463\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">DC-ROMA RISC-V Laptop II는 6월 24일부터 28일까지 열리는 RISC-V Summit Europe 2024에서 처음 선보일 예정입니다. 예약판매는 6월 18일부터입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b> DC-ROMA RISC-V Laptop II의 가격은 스펙에 따라 55만1천원부터</b> 시작합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">더 자세한 내용은 <a href=\"https://deepcomputing.io/product/dc-roma-risc-v-laptop-ii/\" target=\"_blank\" rel=\"noopener\">이곳을 확인해 보시기 바랍니다.</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(자료 출처 : DeepComputing)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "세계 최초로 RISC-V 아키텍처를 이용한 노트북을 내놓았던 딥컴퓨팅(DeepComputing)에서 그 후속으로 DC-ROMA RISC-V Laptop II를 내놓았습니다.\n \n\n\n \nDC-ROMA RISC-V Laptop II의 특징\n \n오픈소스 아키텍처 기술로 유명한 RISC-V는 낮은 성능으로 가능한 부문 위주로 시장에 진출해 왔습니다만, 이 제품은 그냥 PC로 나왔습니다. 다만 일반인용 노트북 PC라기 보다는 개발용으로 나온 제품입니다.\n \nCPU는 SpacemiT K1\n\nDC-ROMA RISC-V Laptop II는 최대 2.0GHz로 실행되는 SpacemiT의 SoC K1을 최초로 탑재하고 나왔습니다. \nK1은 1.5GHz에서 실행되는 전작의 4코어 SoC에 비해 성능과 에너지 효율성을 두 배로 향상시켰으며, 256비트 길이의 RISC-V 고성능 컴퓨팅 RVA 22 프로파일 RVV 1.0을 지원하고 IME 그룹 설계 원칙에 기반한 맞춤형 매트릭스 작동 명령으로 강력한 AI 퓨전 컴퓨팅 엔진(최대 2TOPS@INT)을 갖춘 세계 최초의 SoC입니다. \n\n개발용 노트북PC\n\n화면은 14.1인치 풀HD 해상도의 IPS 패널이며, 올메탈 케이스로 전작 대비 나아진 내구성과 함께 열 방출 성능도 좋아졌습니다. RAM은 8/16GB 선택 가능하며 저장소는 1TB까지 제공합니다. 무게는 1.36kg에 배터리는 최대 8시간까지 사용가능합니다.\n\n일반적인 PC와는 다르게 개발을 주 목적으로 만들어졌기 때문에 개발용 8핀 인터페이스가 존재합니다.\n\nOS는 우분투 리눅스\n리눅스 분야에서 가장 대중적인 Canonical사의 우분투(Ubuntu) 리눅스가 DC-ROMA RISC-V Laptop II로 이식되었습니다.\n \nDC-ROMA RISC-V Laptop II의 출시 일자와 가격\n \n\n\n \nDC-ROMA RISC-V Laptop II는 6월 24일부터 28일까지 열리는 RISC-V Summit Europe 2024에서 처음 선보일 예정입니다. 예약판매는 6월 18일부터입니다.\n \n DC-ROMA RISC-V Laptop II의 가격은 스펙에 따라 55만1천원부터 시작합니다.\n \n더 자세한 내용은 이곳을 확인해 보시기 바랍니다.\n \n(자료 출처 : DeepComputing)",
        "guid": "https://lazion.com/2513704",
        "categories": [
          "#작은PC/#노트북PC",
          "dc-roma risc-v laptop",
          "deepcomputing",
          "Laptop",
          "News",
          "PC",
          "Risc-V"
        ],
        "isoDate": "2024-06-19T07:07:15.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "Adobe도, 배틀그라운드도 안 되는 삼성 갤럭시 북4 엣지(코파일럿+ PC)의 심각한 호환성 문제",
        "link": "https://lazion.com/2513703",
        "pubDate": "Tue, 18 Jun 2024 13:01:49 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513703#entry2513703comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"003 - 갤럭시-북4-엣지-공개2-1024x682.jpg\" data-origin-width=\"1024\" data-origin-height=\"682\"><span data-url=\"https://blog.kakaocdn.net/dn/AyJE8/btsH1hl0oMe/2WuLvibQYilNjfnF6jNHaK/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/AyJE8/btsH1hl0oMe/2WuLvibQYilNjfnF6jNHaK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FAyJE8%2FbtsH1hl0oMe%2F2WuLvibQYilNjfnF6jNHaK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"003 - 갤럭시-북4-엣지-공개2-1024x682.jpg\" data-origin-width=\"1024\" data-origin-height=\"682\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오늘 삼성전자가 갤럭시 북4 엣지를 대한민국에 출시했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">문제는 이 제품이 코파일럿+ PC라는 점이고 현존하는 코파일럿+ PC는 모두 <b>인텔/AMD가 아닌 퀄컴 스냅드래곤 X 엘리트 프로세서를 탑재</b>했습니다. 당연히 호환성 문제가 생길 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그래서 갤럭시 북4 엣지 출시 소식과 함께 <b>출시된 3종의 갤럭시 북4 엣지 시리즈 NT960XMA, NT960XMB, NT940XMA의 호환성</b>에 대한 2024년 6월 기준으로 올라온 삼성전자의 공지를 정리해 봤습니다. 아래에서 나오지 않은 경우에도 문제가 발생할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고로 이러한 <b>호환성 문제는 갤럭시 북4 엣지 뿐만 아니라 비슷한 하드웨어 구성을 가진 다른 회사의 코파일럿+ PC에서도 비슷하게 생길 가능성이 높습니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 북4 엣지와 호환되지 않는 애플리케이션(어플리케이션)</b> </span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">삼성전자가 공지한 바에 따르면 <b>다음과 같은 애플리케이션(어플리케이션) 들이 호환되지 않습니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Firefox_Screenshot_2024-06-18T03-21-31.095Z_web.jpg\" data-origin-width=\"2094\" data-origin-height=\"1046\"><span data-url=\"https://blog.kakaocdn.net/dn/A4JOM/btsH2PV8KY6/q5sNK7fjzWH0WUBIRJcsw1/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/A4JOM/btsH2PV8KY6/q5sNK7fjzWH0WUBIRJcsw1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FA4JOM%2FbtsH2PV8KY6%2Fq5sNK7fjzWH0WUBIRJcsw1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Firefox_Screenshot_2024-06-18T03-21-31.095Z_web.jpg\" data-origin-width=\"2094\" data-origin-height=\"1046\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">안티 바이러스나 VPN은 그렇다쳐도 <b>Adobe InDesign, Adobe Illustrator, Adobe After Effects, Adobe Premiere</b> 같은 업계 대표격인 어도비 사의 디자인/영상 편집 애플리케이션이 안 되는 부분은 많이 아쉽네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">게임에서도 <b>리그 오브 레전드(LoL), FC Online, 배틀그라운드(PUBG), 서든어택(Sudden Attack), 포트나이트(Fortnite), 데드 바이 데이라이트(Dead By Deadlight), 발로란트(Valorant), 아펙스 레전드(Apex Legends), 리니지M, 콜 오브 듀티(Call of Duty) MW3, 폴가이즈(Fall Guys), 언차티드(Uncharted), 헤일로 인피니트(Halo Inifinite), VR챗(Chat), 레전드 오브 룬테라&nbsp;</b> 등 유명한 게임 타이틀이 안 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여기에 더해서 블루스택이나 녹스플레이어, 구글 플레이게임, LD Player 같은 안드로이드 호환 플레이어들도 안 됩니다. 네이버 이북 리더나 네이버 마이박스도 있군요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">위에 나오지 않은 경우에도 문제가 발생할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 북4 엣지와 호환되지 않는 웹사이트</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">웹사이트 중에서도 아래 사이트 들은 갤럭시 북4 엣지에서 정상적으로 사용할 수 없습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Firefox_Screenshot_2024-06-18T03-21-07.263Z_web.jpg\" data-origin-width=\"2096\" data-origin-height=\"1232\"><span data-url=\"https://blog.kakaocdn.net/dn/o4cTf/btsH1GeLcSR/PBAZWiwelubJoEZQY3SpIk/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/o4cTf/btsH1GeLcSR/PBAZWiwelubJoEZQY3SpIk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fo4cTf%2FbtsH1GeLcSR%2FPBAZWiwelubJoEZQY3SpIk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Firefox_Screenshot_2024-06-18T03-21-07.263Z_web.jpg\" data-origin-width=\"2096\" data-origin-height=\"1232\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">BNK 경남은행, 우리카드, 현대해상, 신한투자증권, 미래에셋증권, DB금융투자, 우리은행, NH농협손해보험 웹사이트가 해당됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">위에 나오지 않은 사이트에서도 문제가 발생할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 북4 엣지와 호환되지 않는 프린터 문제 해결방법</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">갤럭시 북4 엣지는 일부 프린터와 문제를 일으킬 수 있습니다. 다음과 같은 조치를 권하고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Firefox_Screenshot_2024-06-18T03-21-57.663Z_web.jpg\" data-origin-width=\"2118\" data-origin-height=\"1412\"><span data-url=\"https://blog.kakaocdn.net/dn/wDLST/btsH2oLsBiv/lX6yq6JeEaGKxMIloDgi4k/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/wDLST/btsH2oLsBiv/lX6yq6JeEaGKxMIloDgi4k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FwDLST%2FbtsH2oLsBiv%2FlX6yq6JeEaGKxMIloDgi4k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Firefox_Screenshot_2024-06-18T03-21-57.663Z_web.jpg\" data-origin-width=\"2118\" data-origin-height=\"1412\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 북4 엣지와 코파일럿+ PC, 호환성이라는 벽을 넘을 수 있을까?</b></span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"002 - 갤럭시-북4-엣지-공개3-e1716244829471.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"><span data-url=\"https://blog.kakaocdn.net/dn/cjU7r2/btsH3yGjIc2/DHv61aoDHoSU0Zj3KBPlBK/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/cjU7r2/btsH3yGjIc2/DHv61aoDHoSU0Zj3KBPlBK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcjU7r2%2FbtsH3yGjIc2%2FDHv61aoDHoSU0Zj3KBPlBK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"002 - 갤럭시-북4-엣지-공개3-e1716244829471.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이번에 삼성전자가 공지한 내용에 따르면 <b>코파일럿+ PC로서 가지는 갤럭시 북4 엣지의 호환성 문제는 결코 가벼운게 아닙니다.</b> 특히 개발사나 웹사이트 운영 업체가 본격적으로 개입하지 않으면 해결이 도저히 불가능한 것들도 보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"color: #0593d3;\"><b> 이 정도면 <span style=\"color: #0593d3;\"><b>지금 시점에서는 </b></span>윈도우PC를 쓰겠다는 보통 사용자들에게 코파일럿+ PC는 권할 수 없을 정도입니다.</b></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">만약 이를 모르고 구입한 이용자들이 코파일럿+ PC, 즉 퀄컴 스냅드래곤 엘리트를 담은 윈도우PC에 실망한다면 <a href=\"https://lazion.com/2513674\"><span style=\"color: #0593d3;\">마이크로소프트가 코파일럿+ PC에 담은 야망</span></a>은 큰 타격을 받겠죠.</p>\n<p data-ke-size=\"size16\">어떤 식으로든 빠른 시간 안에 해결하지 않으면 소비자들은 좋은 평가를 내리지 않을 겁니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(자료 출처 : <a href=\"https://www.samsung.com/sec/event/GalaxyBook4Edge/comp/\" target=\"_blank\" rel=\"noopener\">삼성전자</a>)</p>",
        "contentSnippet": "오늘 삼성전자가 갤럭시 북4 엣지를 대한민국에 출시했습니다.\n \n문제는 이 제품이 코파일럿+ PC라는 점이고 현존하는 코파일럿+ PC는 모두 인텔/AMD가 아닌 퀄컴 스냅드래곤 X 엘리트 프로세서를 탑재했습니다. 당연히 호환성 문제가 생길 수 있습니다.\n \n그래서 갤럭시 북4 엣지 출시 소식과 함께 출시된 3종의 갤럭시 북4 엣지 시리즈 NT960XMA, NT960XMB, NT940XMA의 호환성에 대한 2024년 6월 기준으로 올라온 삼성전자의 공지를 정리해 봤습니다. 아래에서 나오지 않은 경우에도 문제가 발생할 수 있습니다.\n \n참고로 이러한 호환성 문제는 갤럭시 북4 엣지 뿐만 아니라 비슷한 하드웨어 구성을 가진 다른 회사의 코파일럿+ PC에서도 비슷하게 생길 가능성이 높습니다.\n \n \n갤럭시 북4 엣지와 호환되지 않는 애플리케이션(어플리케이션) \n \n삼성전자가 공지한 바에 따르면 다음과 같은 애플리케이션(어플리케이션) 들이 호환되지 않습니다.\n \n\n\n \n안티 바이러스나 VPN은 그렇다쳐도 Adobe InDesign, Adobe Illustrator, Adobe After Effects, Adobe Premiere 같은 업계 대표격인 어도비 사의 디자인/영상 편집 애플리케이션이 안 되는 부분은 많이 아쉽네요.\n \n게임에서도 리그 오브 레전드(LoL), FC Online, 배틀그라운드(PUBG), 서든어택(Sudden Attack), 포트나이트(Fortnite), 데드 바이 데이라이트(Dead By Deadlight), 발로란트(Valorant), 아펙스 레전드(Apex Legends), 리니지M, 콜 오브 듀티(Call of Duty) MW3, 폴가이즈(Fall Guys), 언차티드(Uncharted), 헤일로 인피니트(Halo Inifinite), VR챗(Chat), 레전드 오브 룬테라  등 유명한 게임 타이틀이 안 됩니다.\n \n여기에 더해서 블루스택이나 녹스플레이어, 구글 플레이게임, LD Player 같은 안드로이드 호환 플레이어들도 안 됩니다. 네이버 이북 리더나 네이버 마이박스도 있군요.\n \n위에 나오지 않은 경우에도 문제가 발생할 수 있습니다.\n \n갤럭시 북4 엣지와 호환되지 않는 웹사이트\n \n웹사이트 중에서도 아래 사이트 들은 갤럭시 북4 엣지에서 정상적으로 사용할 수 없습니다.\n \n\n\n \nBNK 경남은행, 우리카드, 현대해상, 신한투자증권, 미래에셋증권, DB금융투자, 우리은행, NH농협손해보험 웹사이트가 해당됩니다.\n \n위에 나오지 않은 사이트에서도 문제가 발생할 수 있습니다.\n \n \n갤럭시 북4 엣지와 호환되지 않는 프린터 문제 해결방법\n \n갤럭시 북4 엣지는 일부 프린터와 문제를 일으킬 수 있습니다. 다음과 같은 조치를 권하고 있습니다.\n \n\n\n \n \n갤럭시 북4 엣지와 코파일럿+ PC, 호환성이라는 벽을 넘을 수 있을까?\n\n\n이번에 삼성전자가 공지한 내용에 따르면 코파일럿+ PC로서 가지는 갤럭시 북4 엣지의 호환성 문제는 결코 가벼운게 아닙니다. 특히 개발사나 웹사이트 운영 업체가 본격적으로 개입하지 않으면 해결이 도저히 불가능한 것들도 보입니다.\n \n 이 정도면 지금 시점에서는 윈도우PC를 쓰겠다는 보통 사용자들에게 코파일럿+ PC는 권할 수 없을 정도입니다.\n \n만약 이를 모르고 구입한 이용자들이 코파일럿+ PC, 즉 퀄컴 스냅드래곤 엘리트를 담은 윈도우PC에 실망한다면 마이크로소프트가 코파일럿+ PC에 담은 야망은 큰 타격을 받겠죠.\n어떤 식으로든 빠른 시간 안에 해결하지 않으면 소비자들은 좋은 평가를 내리지 않을 겁니다.\n \n(자료 출처 : 삼성전자)",
        "guid": "https://lazion.com/2513703",
        "categories": [
          "#작은PC/#노트북PC",
          "copliot+ pc",
          "galaxy book4 edge",
          "Laptop",
          "News",
          "PC",
          "Samsung",
          "SEC"
        ],
        "isoDate": "2024-06-18T04:01:49.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "삼성 AI 코파일럿+ PC 갤럭시 북4 엣지 한국 출시! 문제는 호환성?",
        "link": "https://lazion.com/2513702",
        "pubDate": "Tue, 18 Jun 2024 12:31:42 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513702#entry2513702comment",
        "content": "<h3 data-ke-size=\"size23\">삼성전자가 국내 제조사 유일의 <b>코파일럿+ PC인 갤럭시 북4 엣지</b>를 오늘(18일) 대한민국에 출시합니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"003 - 삼성전자-AI-PC-갤럭시-북4-엣지-국내-출시3_web.jpg\" data-origin-width=\"1000\" data-origin-height=\"652\"><span data-url=\"https://blog.kakaocdn.net/dn/vfYCQ/btsH12PpSR4/Ya8CXHasiJFFjJkLz59L20/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/vfYCQ/btsH12PpSR4/Ya8CXHasiJFFjJkLz59L20/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FvfYCQ%2FbtsH12PpSR4%2FYa8CXHasiJFFjJkLz59L20%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"003 - 삼성전자-AI-PC-갤럭시-북4-엣지-국내-출시3_web.jpg\" data-origin-width=\"1000\" data-origin-height=\"652\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 북4 엣지의 특징</b></span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"001 - 갤럭시-북4-엣지-공개1-e1716244787889.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"><span data-url=\"https://blog.kakaocdn.net/dn/DPAOx/btsH3qVPa57/LxBlHaxSLx4Ic8UPzcyTb0/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/DPAOx/btsH3qVPa57/LxBlHaxSLx4Ic8UPzcyTb0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FDPAOx%2FbtsH3qVPa57%2FLxBlHaxSLx4Ic8UPzcyTb0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"001 - 갤럭시-북4-엣지-공개1-e1716244787889.jpg\" data-origin-width=\"1000\" data-origin-height=\"667\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">갤럭시 북4 엣지는 인텔이나 AMD가 아닌 스냅드래곤 X 엘리트 프로세서를 탑재하여 마이크로소프트의 AI 서비스 브랜드인 코파일럿 서비스를 충실히 수행할 수 있는 <a href=\"https://lazion.com/2513674\" target=\"_blank\" rel=\"noopener\">코파일럿+ PC</a>입니다. 갤럭시 북4 엣지에 대해서는 라지온에서 한번 다룬 바 있으니&nbsp; 아래 링크에서 참고하시기 바랍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1718679158303\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"삼성, 국내 최초 코파일럿+ PC로 AI 강화된 갤럭시 북4 엣지 발표\" data-og-description=\"삼성전자가 스냅드래곤 X 엘리트와 코파일럿+ PC(Copilot+&nbsp;PC)로 하이브리드 AI를 쓸 수 있는 갤럭시 북4 엣지 노트북 PC를 공개했습니다.&nbsp;갤럭시 북4 엣지, 어떤 제품?&nbsp;갤럭시 북4 엣지는 퀄컴 스냅\" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513673\" data-og-url=\"https://lazion.com/2513673\" data-og-image=\"https://scrap.kakaocdn.net/dn/RoOX1/hyWljQokVN/ot8akIaBocp3p8lHMmV3Xk/img.jpg?width=800&amp;height=532&amp;face=0_0_800_532,https://scrap.kakaocdn.net/dn/bsyaej/hyWldvPSUB/ek2ja6ll1SR8iaPJLStKd1/img.jpg?width=800&amp;height=532&amp;face=0_0_800_532,https://scrap.kakaocdn.net/dn/MYZJx/hyWoAXfuCb/ecFP7LMBh7h0E5hGStr2YK/img.jpg?width=1000&amp;height=1200&amp;face=0_0_1000_1200\"><a href=\"https://lazion.com/2513673\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513673\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/RoOX1/hyWljQokVN/ot8akIaBocp3p8lHMmV3Xk/img.jpg?width=800&amp;height=532&amp;face=0_0_800_532,https://scrap.kakaocdn.net/dn/bsyaej/hyWldvPSUB/ek2ja6ll1SR8iaPJLStKd1/img.jpg?width=800&amp;height=532&amp;face=0_0_800_532,https://scrap.kakaocdn.net/dn/MYZJx/hyWoAXfuCb/ecFP7LMBh7h0E5hGStr2YK/img.jpg?width=1000&amp;height=1200&amp;face=0_0_1000_1200');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">삼성, 국내 최초 코파일럿+ PC로 AI 강화된 갤럭시 북4 엣지 발표</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">삼성전자가 스냅드래곤 X 엘리트와 코파일럿+ PC(Copilot+&nbsp;PC)로 하이브리드 AI를 쓸 수 있는 갤럭시 북4 엣지 노트북 PC를 공개했습니다.&nbsp;갤럭시 북4 엣지, 어떤 제품?&nbsp;갤럭시 북4 엣지는 퀄컴 스냅</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 북4 엣지의 종류와 가격</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">갤럭시 북4 엣지는 프로세서와 저장소, 화면 크기에 따라 총 세가지 모델로 나오는데, 그 가격은 다음과 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>NT960XMB - 40.6cm(16형) / Snapdragon X Elite X1E-84-100 / eUFS 1TB : 265만원</li>\n<li>NT960XMA - 40.6cm(16형) / Snapdragon X Elite X1E-80-100 / eUFS 512GB : 235만원</li>\n<li>NT940XMA - 35.6cm(14형) / Snapdragon X Elite X1E-80-100 / eUFS 512GB : 215만원</li>\n</ul>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"004 - MicrosoftTeams-image-5.jpg\" data-origin-width=\"1000\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/bVTOEc/btsH1kwcCCs/H2MbiVwyZ5fSbC9UU3XGz0/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bVTOEc/btsH1kwcCCs/H2MbiVwyZ5fSbC9UU3XGz0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbVTOEc%2FbtsH1kwcCCs%2FH2MbiVwyZ5fSbC9UU3XGz0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"004 - MicrosoftTeams-image-5.jpg\" data-origin-width=\"1000\" data-origin-height=\"1200\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 북4 엣지 판매 장소</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"001 - 삼성전자-AI-PC-갤럭시-북4-엣지-국내-출시1_web.jpg\" data-origin-width=\"1000\" data-origin-height=\"666\"><span data-url=\"https://blog.kakaocdn.net/dn/buqSs7/btsH1PpbkWz/prgLtiOpPU4VhVe4f8s1nk/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/buqSs7/btsH1PpbkWz/prgLtiOpPU4VhVe4f8s1nk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbuqSs7%2FbtsH1PpbkWz%2FprgLtiOpPU4VhVe4f8s1nk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"001 - 삼성전자-AI-PC-갤럭시-북4-엣지-국내-출시1_web.jpg\" data-origin-width=\"1000\" data-origin-height=\"666\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">전국 삼성스토어, 전자랜드 등 오프라인 매장과 삼성닷컴, 11번가, G마켓 등 온라인 몰에서 구매 가능합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>갤럭시 북4 엣지 출시 기념 이벤트</b></span></h3>\n<p data-ke-size=\"size16\"><br />6월 30일까지 갤럭시 북4 엣지를 구입한 고객에게 다음과 같은 사은품을 제공합니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>네이키드니스 브랜드 파우치</li>\n<li>MS365 퍼스널</li>\n<li>삼성케어플러스 12개월 이용권</li>\n</ul>\n<p data-ke-size=\"size16\">이 밖에도 삼성에듀, 대성마이맥, 코멘토, 다락원 등 입시∙어학∙취업의 다양한 분야 교육 콘텐츠 수강권, 굿노트 1년 이용권, 예스24 크레마 클럽 60일 이용권, 네이버 바이브 3개월 50% 할인권을 제공합니다.<br /><br />특히 기존에 사용하던 노트북을 반납하면서 갤럭시 북4 엣지를 구매할 경우 PC 브랜드와 모델에 따라 최대 25만원까지 추가 보상해주는 갤럭시 AI PC로 바꿔보상 프로그램도 운영합니다.<br /><br /></p>\n<p data-ke-size=\"size16\">참고로 <a href=\"https://www.samsung.com/sec/event/galaxy-book4-edge/launching/\" target=\"_blank\" rel=\"noopener\">삼성닷컴을 비롯해서</a> 다양한 판매처에서<b> 자체적인 할인 이벤트를 진행 중</b>이니 비교 및 확인 후 구입하시기 바랍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>구입하기 전! 갤럭시 북4 엣지 호환성 문제 확인<br /></b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">갤럭시 북4 엣지는 현재 <a href=\"https://lazion.com/2513703\"><b>기존 윈도우 애플리케이션이나 게임들, 웹사이트, 프린터 등에 호환성 문제</b></a>가 있습니다. 아래 내용 참고하시고, 구입에 신중을 기하시기 바랍니다.</p>\n<figure id=\"og_1718683399899\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"Adobe도, 배틀그라운드도 안 되는 삼성 갤럭시 북4 엣지(코파일럿+ PC)의 심각한 호환성 문제\" data-og-description=\"오늘 삼성전자가 갤럭시 북4 엣지를 대한민국에 출시했습니다.&nbsp;문제는 이 제품이 코파일럿+ PC라는 점이고 현존하는 코파일럿+ PC는 모두 인텔/AMD가 아닌 퀄컴 스냅드래곤 엘리트 프로세서를 탑\" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513703\" data-og-url=\"https://lazion.com/2513703\" data-og-image=\"https://scrap.kakaocdn.net/dn/Sg2IF/hyWljJA6un/m3fe73rKL4Y9ZWbbM7W0yK/img.jpg?width=800&amp;height=533&amp;face=0_0_800_533,https://scrap.kakaocdn.net/dn/BJl0W/hyWlkodAr3/cGQ7pl1obIt3U6mnCWtal1/img.jpg?width=800&amp;height=533&amp;face=0_0_800_533,https://scrap.kakaocdn.net/dn/BrkhI/hyWlaMEK0i/y5gUYMqIxEnPt2mkpEtVUk/img.jpg?width=2118&amp;height=1412&amp;face=0_0_2118_1412\"><a href=\"https://lazion.com/2513703\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513703\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/Sg2IF/hyWljJA6un/m3fe73rKL4Y9ZWbbM7W0yK/img.jpg?width=800&amp;height=533&amp;face=0_0_800_533,https://scrap.kakaocdn.net/dn/BJl0W/hyWlkodAr3/cGQ7pl1obIt3U6mnCWtal1/img.jpg?width=800&amp;height=533&amp;face=0_0_800_533,https://scrap.kakaocdn.net/dn/BrkhI/hyWlaMEK0i/y5gUYMqIxEnPt2mkpEtVUk/img.jpg?width=2118&amp;height=1412&amp;face=0_0_2118_1412');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Adobe도, 배틀그라운드도 안 되는 삼성 갤럭시 북4 엣지(코파일럿+ PC)의 심각한 호환성 문제</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">오늘 삼성전자가 갤럭시 북4 엣지를 대한민국에 출시했습니다.&nbsp;문제는 이 제품이 코파일럿+ PC라는 점이고 현존하는 코파일럿+ PC는 모두 인텔/AMD가 아닌 퀄컴 스냅드래곤 엘리트 프로세서를 탑</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : <a href=\"https://www.samsung.com/sec/\" target=\"_blank\" rel=\"noopener\">삼성전자</a>)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "삼성전자가 국내 제조사 유일의 코파일럿+ PC인 갤럭시 북4 엣지를 오늘(18일) 대한민국에 출시합니다.\n \n\n\n \n갤럭시 북4 엣지의 특징\n\n\n \n갤럭시 북4 엣지는 인텔이나 AMD가 아닌 스냅드래곤 X 엘리트 프로세서를 탑재하여 마이크로소프트의 AI 서비스 브랜드인 코파일럿 서비스를 충실히 수행할 수 있는 코파일럿+ PC입니다. 갤럭시 북4 엣지에 대해서는 라지온에서 한번 다룬 바 있으니  아래 링크에서 참고하시기 바랍니다.\n \n\n \n삼성, 국내 최초 코파일럿+ PC로 AI 강화된 갤럭시 북4 엣지 발표\n삼성전자가 스냅드래곤 X 엘리트와 코파일럿+ PC(Copilot+ PC)로 하이브리드 AI를 쓸 수 있는 갤럭시 북4 엣지 노트북 PC를 공개했습니다. 갤럭시 북4 엣지, 어떤 제품? 갤럭시 북4 엣지는 퀄컴 스냅\nlazion.com\n\n \n \n갤럭시 북4 엣지의 종류와 가격\n \n갤럭시 북4 엣지는 프로세서와 저장소, 화면 크기에 따라 총 세가지 모델로 나오는데, 그 가격은 다음과 같습니다.\n \nNT960XMB - 40.6cm(16형) / Snapdragon X Elite X1E-84-100 / eUFS 1TB : 265만원\nNT960XMA - 40.6cm(16형) / Snapdragon X Elite X1E-80-100 / eUFS 512GB : 235만원\nNT940XMA - 35.6cm(14형) / Snapdragon X Elite X1E-80-100 / eUFS 512GB : 215만원\n\n\n \n \n갤럭시 북4 엣지 판매 장소\n \n\n\n \n전국 삼성스토어, 전자랜드 등 오프라인 매장과 삼성닷컴, 11번가, G마켓 등 온라인 몰에서 구매 가능합니다.\n \n \n갤럭시 북4 엣지 출시 기념 이벤트\n6월 30일까지 갤럭시 북4 엣지를 구입한 고객에게 다음과 같은 사은품을 제공합니다.\n네이키드니스 브랜드 파우치\nMS365 퍼스널\n삼성케어플러스 12개월 이용권\n이 밖에도 삼성에듀, 대성마이맥, 코멘토, 다락원 등 입시∙어학∙취업의 다양한 분야 교육 콘텐츠 수강권, 굿노트 1년 이용권, 예스24 크레마 클럽 60일 이용권, 네이버 바이브 3개월 50% 할인권을 제공합니다.\n특히 기존에 사용하던 노트북을 반납하면서 갤럭시 북4 엣지를 구매할 경우 PC 브랜드와 모델에 따라 최대 25만원까지 추가 보상해주는 갤럭시 AI PC로 바꿔보상 프로그램도 운영합니다.\n\n참고로 삼성닷컴을 비롯해서 다양한 판매처에서 자체적인 할인 이벤트를 진행 중이니 비교 및 확인 후 구입하시기 바랍니다.\n \n \n구입하기 전! 갤럭시 북4 엣지 호환성 문제 확인\n\n \n갤럭시 북4 엣지는 현재 기존 윈도우 애플리케이션이나 게임들, 웹사이트, 프린터 등에 호환성 문제가 있습니다. 아래 내용 참고하시고, 구입에 신중을 기하시기 바랍니다.\n\n \nAdobe도, 배틀그라운드도 안 되는 삼성 갤럭시 북4 엣지(코파일럿+ PC)의 심각한 호환성 문제\n오늘 삼성전자가 갤럭시 북4 엣지를 대한민국에 출시했습니다. 문제는 이 제품이 코파일럿+ PC라는 점이고 현존하는 코파일럿+ PC는 모두 인텔/AMD가 아닌 퀄컴 스냅드래곤 엘리트 프로세서를 탑\nlazion.com\n\n \n \n(출처 : 삼성전자)",
        "guid": "https://lazion.com/2513702",
        "categories": [
          "#작은PC/#노트북PC",
          "copilot+ pc",
          "galaxy book",
          "galaxy book4 edge",
          "Laptop",
          "News",
          "PC",
          "Samsung",
          "SEC"
        ],
        "isoDate": "2024-06-18T03:31:42.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "니콘, 고화질&middot;고속의 풀프레임 미러리스 Z6III 카메라 발표",
        "link": "https://lazion.com/2513701",
        "pubDate": "Tue, 18 Jun 2024 10:59:04 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513701#entry2513701comment",
        "content": "<h3 data-ke-size=\"size23\">일본 <b>니콘(Nikon)</b>이 2천4백5십만화소 풀프레임 미러리스 카메라 <b>Z6III</b>를 발표했습니다.</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_24-120_4.jpg\" data-origin-width=\"1600\" data-origin-height=\"1361\"><span data-url=\"https://blog.kakaocdn.net/dn/2Aq2n/btsH1jDZykf/tPgvPyjQN1hwnIMx9LEkN1/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/2Aq2n/btsH1jDZykf/tPgvPyjQN1hwnIMx9LEkN1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F2Aq2n%2FbtsH1jDZykf%2FtPgvPyjQN1hwnIMx9LEkN1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_24-120_4.jpg\" data-origin-width=\"1600\" data-origin-height=\"1361\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">니콘 Z6III는 세계 최초로 부분적층형(Partially-Stacked) CMOS 센서를 채용했으며, EXPEED 7 이미지 처리 엔진과 결합하여 전작 Z6II 대비 리드아웃(readout) 속도가 약 3.5배 빨라졌습니다. 이를 통해 6K 내부 N-RAW 및 ProRes RAW 비디오 및 최대 240p의 Full HD 비디오 촬영이 가능하며, 프리릴리즈 캡쳐 기능으로 초당 120장의 사진 촬영도 가능합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_24-70_4_top.jpg\" data-origin-width=\"1294\" data-origin-height=\"1600\"><span data-url=\"https://blog.kakaocdn.net/dn/XwFWP/btsH3xAxOYN/jugD8x9LkdTUKi97emIYY0/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/XwFWP/btsH3xAxOYN/jugD8x9LkdTUKi97emIYY0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FXwFWP%2FbtsH3xAxOYN%2FjugD8x9LkdTUKi97emIYY0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_24-70_4_top.jpg\" data-origin-width=\"1294\" data-origin-height=\"1600\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">미러리스 카메라 가운데 가장 밝은 EVF를 자랑하며, Z8 및 Z9에서 이어받은 다중 피사체 감지 기능을 포함한 빠른 AF 시스템 또한 갖추고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><b><span style=\"color: #006dd7;\">Nikon Z6III의 주요 특징</span></b></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>세계 최초의 부분 적층형(Partially-Stacked) 센서<br /><br /><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_image_sensor.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/Y1s3Y/btsH2CvTbpE/I0vJSKtc6pDWQxrH495vMk/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/Y1s3Y/btsH2CvTbpE/I0vJSKtc6pDWQxrH495vMk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FY1s3Y%2FbtsH2CvTbpE%2FI0vJSKtc6pDWQxrH495vMk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_image_sensor.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"/></span></figure>\n<br />Z6III에 최초로 적용된 이 센서는 이미징 영역 위와 아래에 여러 개의 고속 처리 회로가 적층되어 있으며 Z8 및 Z9와 같은 EXPEED 7 처리 엔진과 결합하여 빠른 속도와 강력한 기능을 제공합니다.<br /><br /></li>\n<li>업그레이드된 AF<br />Z6II보다 최대 20% 더 빨라지고 AF 감지 범위가 -10 EV로 확장되어 어두운 상황에서도 더 쉽게 초점을 맞출 수 있습니다.<br /><br /></li>\n<li>진보한 피사체 감지<br />Z6III는 Z8 및 Z9의 기술을 활용하여 사람, 동물 및 차량을 포함한 9가지 피사체 유형을 자동으로 감지합니다. 3D 추적, 자동 영역 AF, 광역 AF, 동적 영역 AF 등 고급 AF 모드를 제공하며, 맞춤형 광역 AF 패턴으로 지정 영역 내의 피사체를 감지하고 추적할 수 있습니다.<br /><br /></li>\n<li>최대 120fps 프리릴리즈(Pre-Release) 캡처<br />새가 날아오르는 순간, 번개가 치는 순간, 게임에서 승리하는 골 등 놓칠 수 있는 장면을 찍을 수 있습니다. 셔터 버튼을 반쯤 누르면 이미지 버퍼링이 시작되며, 셔터를 끝까지 누르면 Z6III는 최대 1초 전에 촬영한 이미지를 저장합니다.<br /><br /></li>\n<li>내부 6K RAW 비디오<br />Z6III는 12비트 6K/60p N-RAW 및 6K/30p ProRes RAW, 10비트 5.4K ProRes 422 및 H.265 비디오 형식으로 촬영할 수 있습니다. <br />이를 통해 영화 제작자는 후반 작업에서 최대한의 해상도로 4K 영상 편집이 가능합니다. 또한 Z6III의 최대 비디오 해상도인 6K를 활용하여 오버샘플링된 4K UHD/60p 비디오 영상을 제작할 수 있습니다.<br />참고로 Z6III의 효율적인 방열 설계로 <b>최대 125분 동안 연속 4K UHD/60p 녹화</b>가 가능합니다.<br /><br /></li>\n<li>미러리스 카메라 중 가장 밝은 EVF<br /><br /><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_skeleton_EVF.jpg\" data-origin-width=\"1600\" data-origin-height=\"1131\"><span data-url=\"https://blog.kakaocdn.net/dn/n33lr/btsH264jwpn/qzLZGFvlZEKvhTABYWzlok/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/n33lr/btsH264jwpn/qzLZGFvlZEKvhTABYWzlok/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fn33lr%2FbtsH264jwpn%2FqzLZGFvlZEKvhTABYWzlok%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_skeleton_EVF.jpg\" data-origin-width=\"1600\" data-origin-height=\"1131\"/></span></figure>\n<br />최대 4,000cd/㎡(nits) 밝기의 Z6III의 5,760k 도트 전자 뷰파인더는 밝은 야외 상황에서도 선명하고 상세한 뷰를 제공합니다. 동급 최고의 밝기와 고해상도 외에도 Z6III의 EVF는 미러리스 카메라 중 최초로 DCI-P3에 해당하는 색 영역을 지원합니다.<br /><br /></li>\n<li>다이나믹 Full HD/240p 슬로우 모션 촬영<br />Z6III는 10비트 Full HD/240p H.265 비디오 촬영으로 최대 10배의 슬로우 모션 영상 캡처가 가능합니다.<br /><br /></li>\n<li>뛰어난 저조도 성능<br />Z6III의 넓은 기본 ISO 범위는 100-64,000(동영상 촬영시에서는 51,200)이며 초저조도 촬영을 위해 204,800까지 확장 가능합니다. Z6III의 EXPEED 7 이미지 처리 엔진은 맞춤형 노이즈 감소를 가능하게 하여 건물과 같은 피사체의 미세한 디테일을 유지하면서 이미지의 평평한 영역에서 거친 노이즈를 효과적으로 최소화합니다.<br /><br /></li>\n<li>8.0 스톱 떨림 줄임(vibration reduction)<br />내장된 5축 이미지 안정화 기능으로 최대 8.0스탑의 떨림 줄임 기능을 제공합니다. 핸드헬드 촬영시 피사체를 선명하게 유지하고 ISO를 낮추면서 느린 셔터 속도를 즐길 수 있습니다. Focus Point VR 기능이 있어 액티브 초점 포인트를 우선적으로 안정화합니다. <br /><br /></li>\n<li>회전형 LCD 화면<br /><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_24-70_4_top_tilt_monitor.jpg\" data-origin-width=\"1600\" data-origin-height=\"1302\"><span data-url=\"https://blog.kakaocdn.net/dn/qbeXe/btsH2BDKBi8/02eGiYhBZCWDhkZUr9NjG0/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/qbeXe/btsH2BDKBi8/02eGiYhBZCWDhkZUr9NjG0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FqbeXe%2FbtsH2BDKBi8%2F02eGiYhBZCWDhkZUr9NjG0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_24-70_4_top_tilt_monitor.jpg\" data-origin-width=\"1600\" data-origin-height=\"1302\"/></span></figure>\n3.2인치 후면 LCD 터치스크린은 비디오 촬영 및 셀프 촬영을 위해 전면으로 회전시킬 수 있으며 낮은 위치에서 촬영을 위해 화면 각도의 조절도 가능합니다.<br /><br /></li>\n<li>고해상도 픽셀 시프트 모드<br />픽셀 시프트 모드에서 Z6III의 센서는 4, 8, 16 또는 32 노출에 걸쳐 섬세하게 이동하여 최대 약 9600만 화소의 해상도로 색상과 디테일을 향상시킵니다.<br /><br /></li>\n<li>Z8 수준의 만듦새<br /><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_back.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/bX0ESU/btsH279ZARC/NZ624WqRNmjTpzhQimUnh1/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bX0ESU/btsH279ZARC/NZ624WqRNmjTpzhQimUnh1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbX0ESU%2FbtsH279ZARC%2FNZ624WqRNmjTpzhQimUnh1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_back.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"/></span></figure>\n니콘의 플래그십 모델인 Z8 수준의 품질로 만들어진 Z6III는 마그네슘 합금과 Sereebo 소재로 제작되어 좋은 내구성과 가벼운 무게로 본체 기준 670g에 불과합니다. Z6III는 Z8과 동일한 수준으로 방진/방습 처리되어 있으며최저 14&deg;F/-10&deg;C에서 작동 가능한 등급을 받았습니다.<br /><br /></li>\n<li>Flexible Color Picture Control <br />Z6III는 NX Studio의 Flexible Color Picture Control 기능을 지원합니다. 강력한 컬러 블렌더 및 컬러 그레이딩 기능을 사용하여 카메라에 Custom Picture Control로 업로드할 수 있는 사용자 정의 사전 설정을 만들 수 있습니다.</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>새로운 니콘 이미징 클라우드와 MB-N14 배터리 팩</b> </span></h3>\n<p data-ke-size=\"size16\"><br /><b>니콘 이미징 클라우드(NIKON IMAGING CLOUD)</b>는 Z6III 이용자를 위한 새로운 무료 클라우드 서비스입니다.</p>\n<p data-ke-size=\"size16\">카메라 설정 제안, Cloud Picture Control 사전 설정을 얻을 수 있으며, Z6III로 직업 Wi-Fi를 통해 연결하여 촬영한 사진을 NIKON IMAGE SPACE를 비롯한 다양한 클라우드 스토리지 서비스에 자동으로 업로드할 수 있습니다.</p>\n<p data-ke-size=\"size16\">니콘 이미징 클라우드와 Wi-Fi 연결하여 Z6III의 카메라 펌웨어를 최신 버전으로 업데이트할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_sealing_front_MB-N14.jpg\" data-origin-width=\"1600\" data-origin-height=\"1131\"><span data-url=\"https://blog.kakaocdn.net/dn/UYeoi/btsH17b2fLm/kkqLT9hbpBAQXkKbD2gZfK/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/UYeoi/btsH17b2fLm/kkqLT9hbpBAQXkKbD2gZfK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FUYeoi%2FbtsH17b2fLm%2FkkqLT9hbpBAQXkKbD2gZfK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_sealing_front_MB-N14.jpg\" data-origin-width=\"1600\" data-origin-height=\"1131\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><br /><b>MB-N14 배터리 팩</b>은 Z6III, Z7II 및 Z6II용 셔터 버튼이 통합된 옵션 전원 배터리 팩입니다. MB-N14에는 EN-EL15c 2개를 수용할 수 있으며 약 1.9배 더 많은 사진과 비디오 촬영이 가능합니다. MB-N14는 Z6III와 동일한 방진 및 방적 기능을 제공할 뿐만 아니라 &minus;10&deg;C/14&deg;F의 추운 조건에서도 사용할 수 있습니다.</p>\n<p data-ke-size=\"size16\">MB-N14는 두 개의 배터리 중 하나를 제거해도 계속 전원을 공급하는 핫 스왑 전원 배터리 팩으로, 내장된 USB 커넥터로MB-N14가 카메라에 장착되지 않은 경우에도 MB-N14에 삽입된 배터리를 충전할 수 있습니다.<br /><br /></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>니콘 Z6III의 가격과 출시 일정</b></span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_24-70_4_fronttop.jpg\" data-origin-width=\"1600\" data-origin-height=\"1600\"><span data-url=\"https://blog.kakaocdn.net/dn/08zAF/btsH2berkPK/2ORnaegAEMIx3Gr6M2VlJK/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/08zAF/btsH2berkPK/2ORnaegAEMIx3Gr6M2VlJK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F08zAF%2FbtsH2berkPK%2F2ORnaegAEMIx3Gr6M2VlJK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_24-70_4_fronttop.jpg\" data-origin-width=\"1600\" data-origin-height=\"1600\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">새로운 <b>니콘 Z6III의 가격은 본체 기준 $2,499.95(약 345만원), NIKKOR Z 24-70mm f/4 렌즈와 포함 키트로 $3,099.95(약428만원)</b>입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Z6III_24-70_4_left.jpg\" data-origin-width=\"1600\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/bt5Lgq/btsH2ragP4f/k6Pkk63pGM8T6az1Y5mdGk/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bt5Lgq/btsH2ragP4f/k6Pkk63pGM8T6az1Y5mdGk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbt5Lgq%2FbtsH2ragP4f%2Fk6Pkk63pGM8T6az1Y5mdGk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Z6III_24-70_4_left.jpg\" data-origin-width=\"1600\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><b>니콘 Z6III의 출시 시기는 오는 6월 말</b>로 예정되어 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">MB-N14 배터리 팩의 가격은 $359.95(약 49만7천원)이며, 올 여름 출시 예정입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(자료 출처 : <a href=\"https://www.nikonusa.com/\" target=\"_blank\" rel=\"noopener\">니콘</a>)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "일본 니콘(Nikon)이 2천4백5십만화소 풀프레임 미러리스 카메라 Z6III를 발표했습니다.\n\n\n니콘 Z6III는 세계 최초로 부분적층형(Partially-Stacked) CMOS 센서를 채용했으며, EXPEED 7 이미지 처리 엔진과 결합하여 전작 Z6II 대비 리드아웃(readout) 속도가 약 3.5배 빨라졌습니다. 이를 통해 6K 내부 N-RAW 및 ProRes RAW 비디오 및 최대 240p의 Full HD 비디오 촬영이 가능하며, 프리릴리즈 캡쳐 기능으로 초당 120장의 사진 촬영도 가능합니다.\n\n\n미러리스 카메라 가운데 가장 밝은 EVF를 자랑하며, Z8 및 Z9에서 이어받은 다중 피사체 감지 기능을 포함한 빠른 AF 시스템 또한 갖추고 있습니다.\n \nNikon Z6III의 주요 특징\n \n세계 최초의 부분 적층형(Partially-Stacked) 센서\n\nZ6III에 최초로 적용된 이 센서는 이미징 영역 위와 아래에 여러 개의 고속 처리 회로가 적층되어 있으며 Z8 및 Z9와 같은 EXPEED 7 처리 엔진과 결합하여 빠른 속도와 강력한 기능을 제공합니다.\n\n업그레이드된 AF\nZ6II보다 최대 20% 더 빨라지고 AF 감지 범위가 -10 EV로 확장되어 어두운 상황에서도 더 쉽게 초점을 맞출 수 있습니다.\n\n진보한 피사체 감지\nZ6III는 Z8 및 Z9의 기술을 활용하여 사람, 동물 및 차량을 포함한 9가지 피사체 유형을 자동으로 감지합니다. 3D 추적, 자동 영역 AF, 광역 AF, 동적 영역 AF 등 고급 AF 모드를 제공하며, 맞춤형 광역 AF 패턴으로 지정 영역 내의 피사체를 감지하고 추적할 수 있습니다.\n\n최대 120fps 프리릴리즈(Pre-Release) 캡처\n새가 날아오르는 순간, 번개가 치는 순간, 게임에서 승리하는 골 등 놓칠 수 있는 장면을 찍을 수 있습니다. 셔터 버튼을 반쯤 누르면 이미지 버퍼링이 시작되며, 셔터를 끝까지 누르면 Z6III는 최대 1초 전에 촬영한 이미지를 저장합니다.\n\n내부 6K RAW 비디오\nZ6III는 12비트 6K/60p N-RAW 및 6K/30p ProRes RAW, 10비트 5.4K ProRes 422 및 H.265 비디오 형식으로 촬영할 수 있습니다. \n이를 통해 영화 제작자는 후반 작업에서 최대한의 해상도로 4K 영상 편집이 가능합니다. 또한 Z6III의 최대 비디오 해상도인 6K를 활용하여 오버샘플링된 4K UHD/60p 비디오 영상을 제작할 수 있습니다.\n참고로 Z6III의 효율적인 방열 설계로 최대 125분 동안 연속 4K UHD/60p 녹화가 가능합니다.\n\n미러리스 카메라 중 가장 밝은 EVF\n\n최대 4,000cd/㎡(nits) 밝기의 Z6III의 5,760k 도트 전자 뷰파인더는 밝은 야외 상황에서도 선명하고 상세한 뷰를 제공합니다. 동급 최고의 밝기와 고해상도 외에도 Z6III의 EVF는 미러리스 카메라 중 최초로 DCI-P3에 해당하는 색 영역을 지원합니다.\n\n다이나믹 Full HD/240p 슬로우 모션 촬영\nZ6III는 10비트 Full HD/240p H.265 비디오 촬영으로 최대 10배의 슬로우 모션 영상 캡처가 가능합니다.\n\n뛰어난 저조도 성능\nZ6III의 넓은 기본 ISO 범위는 100-64,000(동영상 촬영시에서는 51,200)이며 초저조도 촬영을 위해 204,800까지 확장 가능합니다. Z6III의 EXPEED 7 이미지 처리 엔진은 맞춤형 노이즈 감소를 가능하게 하여 건물과 같은 피사체의 미세한 디테일을 유지하면서 이미지의 평평한 영역에서 거친 노이즈를 효과적으로 최소화합니다.\n\n8.0 스톱 떨림 줄임(vibration reduction)\n내장된 5축 이미지 안정화 기능으로 최대 8.0스탑의 떨림 줄임 기능을 제공합니다. 핸드헬드 촬영시 피사체를 선명하게 유지하고 ISO를 낮추면서 느린 셔터 속도를 즐길 수 있습니다. Focus Point VR 기능이 있어 액티브 초점 포인트를 우선적으로 안정화합니다. \n\n회전형 LCD 화면\n\n3.2인치 후면 LCD 터치스크린은 비디오 촬영 및 셀프 촬영을 위해 전면으로 회전시킬 수 있으며 낮은 위치에서 촬영을 위해 화면 각도의 조절도 가능합니다.\n\n고해상도 픽셀 시프트 모드\n픽셀 시프트 모드에서 Z6III의 센서는 4, 8, 16 또는 32 노출에 걸쳐 섬세하게 이동하여 최대 약 9600만 화소의 해상도로 색상과 디테일을 향상시킵니다.\n\nZ8 수준의 만듦새\n\n니콘의 플래그십 모델인 Z8 수준의 품질로 만들어진 Z6III는 마그네슘 합금과 Sereebo 소재로 제작되어 좋은 내구성과 가벼운 무게로 본체 기준 670g에 불과합니다. Z6III는 Z8과 동일한 수준으로 방진/방습 처리되어 있으며최저 14°F/-10°C에서 작동 가능한 등급을 받았습니다.\n\nFlexible Color Picture Control \nZ6III는 NX Studio의 Flexible Color Picture Control 기능을 지원합니다. 강력한 컬러 블렌더 및 컬러 그레이딩 기능을 사용하여 카메라에 Custom Picture Control로 업로드할 수 있는 사용자 정의 사전 설정을 만들 수 있습니다.\n \n \n새로운 니콘 이미징 클라우드와 MB-N14 배터리 팩 \n니콘 이미징 클라우드(NIKON IMAGING CLOUD)는 Z6III 이용자를 위한 새로운 무료 클라우드 서비스입니다.\n카메라 설정 제안, Cloud Picture Control 사전 설정을 얻을 수 있으며, Z6III로 직업 Wi-Fi를 통해 연결하여 촬영한 사진을 NIKON IMAGE SPACE를 비롯한 다양한 클라우드 스토리지 서비스에 자동으로 업로드할 수 있습니다.\n니콘 이미징 클라우드와 Wi-Fi 연결하여 Z6III의 카메라 펌웨어를 최신 버전으로 업데이트할 수 있습니다.\n \n\n\n\nMB-N14 배터리 팩은 Z6III, Z7II 및 Z6II용 셔터 버튼이 통합된 옵션 전원 배터리 팩입니다. MB-N14에는 EN-EL15c 2개를 수용할 수 있으며 약 1.9배 더 많은 사진과 비디오 촬영이 가능합니다. MB-N14는 Z6III와 동일한 방진 및 방적 기능을 제공할 뿐만 아니라 −10°C/14°F의 추운 조건에서도 사용할 수 있습니다.\nMB-N14는 두 개의 배터리 중 하나를 제거해도 계속 전원을 공급하는 핫 스왑 전원 배터리 팩으로, 내장된 USB 커넥터로MB-N14가 카메라에 장착되지 않은 경우에도 MB-N14에 삽입된 배터리를 충전할 수 있습니다.\n\n \n니콘 Z6III의 가격과 출시 일정\n\n\n새로운 니콘 Z6III의 가격은 본체 기준 $2,499.95(약 345만원), NIKKOR Z 24-70mm f/4 렌즈와 포함 키트로 $3,099.95(약428만원)입니다.\n\n\n니콘 Z6III의 출시 시기는 오는 6월 말로 예정되어 있습니다.\n \nMB-N14 배터리 팩의 가격은 $359.95(약 49만7천원)이며, 올 여름 출시 예정입니다.\n \n(자료 출처 : 니콘)",
        "guid": "https://lazion.com/2513701",
        "categories": [
          "#카메라#녹음기",
          "Camera",
          "Mirrorless",
          "News",
          "Nikon",
          "z6iii"
        ],
        "isoDate": "2024-06-18T01:59:04.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "AI 동영상 편집 서비스 비디오스튜, GPT-4o 적용한 업데이트 출시",
        "link": "https://lazion.com/2513700",
        "pubDate": "Mon, 17 Jun 2024 16:20:23 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513700#entry2513700comment",
        "content": "<h3 data-ke-size=\"size23\">AI로 보다 쉽고 편하게 동영상을 편집할 수 있는 <b>비디오스튜(VideoStew) 서비스에 OpenAI의 최신 GPT-4o가 적용</b>되었다는 소식입니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Firefox_Screenshot_2024-06-17T06-37-39.162Z_web.jpg\" data-origin-width=\"1654\" data-origin-height=\"1622\"><span data-url=\"https://blog.kakaocdn.net/dn/GaK5U/btsH2RTp6ng/nygHFd05f7stpaKFtWLs9k/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/GaK5U/btsH2RTp6ng/nygHFd05f7stpaKFtWLs9k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FGaK5U%2FbtsH2RTp6ng%2FnygHFd05f7stpaKFtWLs9k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Firefox_Screenshot_2024-06-17T06-37-39.162Z_web.jpg\" data-origin-width=\"1654\" data-origin-height=\"1622\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">비디오스튜는 라지온에서 소개시켜드린 후에도 꾸준하게 업그레이드를 진행해 왔습니다. 위 그림에서 보시다시피 훨씬 풍부해진 템플릿(지금은 레시피라고도 부르네요)도 있습니다만.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번에 비디오스튜에서는 <b>AI 스톡 라이브러리 매칭</b> 기능을 개선했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">비디오스튜 내부적으로 공을 많이 들인 업데이트라고 하는데, 위자드 모드를 통해 콘텐츠를 생성할 때 영상이나 이미지를 매칭하는 AI 알고리즘을 개선했습니다.</p>\n<p data-ke-size=\"size16\">그 내용을 요약하면 최근 화제가 되었던 <b>OpenAI의 GPT-4o를 기반으로 텍스트에 어울리는 스톡 라이브러리를 AI가 눈으로 찾고 반영하는 구조</b>로 바뀌었다고 하네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">쉽게 말해 더 개선된 AI를 적용하여 제공된 텍스트에 잘 어울리는 콘텐츠를 예전보다 더 잘 골라준다는 의미가 아닐까 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고로 비디오스튜는 올 하반기에도 자동자막, TTS 성능 개선, 배경 이미지 생성 등의 메이저 업데이트들을 준비 중이라고 합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"vs_wordmark_y.png\" data-origin-width=\"1680\" data-origin-height=\"380\"><span data-url=\"https://blog.kakaocdn.net/dn/bUKS4e/btsH1FGp1cy/EgG4iQLdbUVgI5zGpLdJYK/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bUKS4e/btsH1FGp1cy/EgG4iQLdbUVgI5zGpLdJYK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbUKS4e%2FbtsH1FGp1cy%2FEgG4iQLdbUVgI5zGpLdJYK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"400\" height=\"90\" data-filename=\"vs_wordmark_y.png\" data-origin-width=\"1680\" data-origin-height=\"380\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">혹시 업그레이드된 비디오스튜를 써보시고 싶으신 분이 계시다면 <a href=\"https://videostew.com/code/DXH7X0MGH2\" target=\"_blank\" rel=\"noopener\"><span style=\"color: #006dd7;\">라지온을 통해 가입하는 경우 가능한 1달 무료 체험 링크</span></a>가 있으니 체험해 보시기 바랍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">- 바로가기 : <span style=\"color: #0593d3;\"><b><a href=\"https://videostew.com/code/DXH7X0MGH2\">비디오스튜 1달 무료 체험 링크</a></b></span></p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\"><span style=\"color: #456771;\">위 링크를 통해 비디오스튜 가입 후 유료 구독하시는 경우</span></p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\"><span style=\"color: #456771;\">라지온에서 수수료를 받을 수 있습니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">관련 글</h4>\n<figure id=\"og_1718608128155\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"OpenAI, 소리와 화상, 문자 주고받으며 더 사람같아진 GPT-4o 발표\" data-og-description=\"OpenAI에서 보고 듣고 말하는 더 진보된 AI 모델인 GPT-4o를 발표했습니다.&nbsp;&nbsp;GPT-4o의 o는 옴니(omni)를 뜻하는데, 사람과 컴퓨터의 더 자연스러운 상호작용을 위해 만들어졌습니다. 문자와 소리, 이미\" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513664\" data-og-url=\"https://lazion.com/2513664\" data-og-image=\"https://scrap.kakaocdn.net/dn/UfAF8/hyWlaeG9aG/kvpZsuIjlZdKAuPamOtqe1/img.jpg?width=800&amp;height=449&amp;face=0_0_800_449,https://scrap.kakaocdn.net/dn/b6pNhI/hyWoKk6aYm/p5Bc8vnRrcsdBD9B56Zda0/img.jpg?width=800&amp;height=449&amp;face=0_0_800_449,https://scrap.kakaocdn.net/dn/eUjLY/hyWlmsDnDu/U5K5YJu9We11ZOadUkXTgK/img.jpg?width=2200&amp;height=1237&amp;face=0_0_2200_1237\"><a href=\"https://lazion.com/2513664\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513664\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/UfAF8/hyWlaeG9aG/kvpZsuIjlZdKAuPamOtqe1/img.jpg?width=800&amp;height=449&amp;face=0_0_800_449,https://scrap.kakaocdn.net/dn/b6pNhI/hyWoKk6aYm/p5Bc8vnRrcsdBD9B56Zda0/img.jpg?width=800&amp;height=449&amp;face=0_0_800_449,https://scrap.kakaocdn.net/dn/eUjLY/hyWlmsDnDu/U5K5YJu9We11ZOadUkXTgK/img.jpg?width=2200&amp;height=1237&amp;face=0_0_2200_1237');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">OpenAI, 소리와 화상, 문자 주고받으며 더 사람같아진 GPT-4o 발표</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">OpenAI에서 보고 듣고 말하는 더 진보된 AI 모델인 GPT-4o를 발표했습니다.&nbsp;&nbsp;GPT-4o의 o는 옴니(omni)를 뜻하는데, 사람과 컴퓨터의 더 자연스러운 상호작용을 위해 만들어졌습니다. 문자와 소리, 이미</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<figure id=\"og_1718608154217\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"비디오스튜, 세련된 영상을 쉽게 만들 수 있는 AI 동영상 편집 서비스\" data-og-description=\"AI와 스톡 라이브러리로 더 간편하게 동영상을 만들어 주는 서비스, 비디오스튜(VideoStew) 리뷰 두번째 시간입니다. 글 만으로 동영상 편집? 비디오스튜(videostew)라면 가능 인터넷을 통한 동영상 스\" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513617\" data-og-url=\"https://lazion.com/2513617\" data-og-image=\"https://scrap.kakaocdn.net/dn/cL7dDn/hyWlalszaz/0c5Ng5OZrG8Hjv7c91j3Ek/img.jpg?width=800&amp;height=452&amp;face=0_0_800_452,https://scrap.kakaocdn.net/dn/NZVBX/hyWllAvlKp/Ic98jD70iFLiSdfk0ArvIk/img.jpg?width=800&amp;height=452&amp;face=0_0_800_452,https://scrap.kakaocdn.net/dn/kPQdA/hyWoFxkHdq/45L7skXrIdS4bUBdBB74A1/img.jpg?width=2366&amp;height=1636&amp;face=0_0_2366_1636\"><a href=\"https://lazion.com/2513617\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513617\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cL7dDn/hyWlalszaz/0c5Ng5OZrG8Hjv7c91j3Ek/img.jpg?width=800&amp;height=452&amp;face=0_0_800_452,https://scrap.kakaocdn.net/dn/NZVBX/hyWllAvlKp/Ic98jD70iFLiSdfk0ArvIk/img.jpg?width=800&amp;height=452&amp;face=0_0_800_452,https://scrap.kakaocdn.net/dn/kPQdA/hyWoFxkHdq/45L7skXrIdS4bUBdBB74A1/img.jpg?width=2366&amp;height=1636&amp;face=0_0_2366_1636');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">비디오스튜, 세련된 영상을 쉽게 만들 수 있는 AI 동영상 편집 서비스</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">AI와 스톡 라이브러리로 더 간편하게 동영상을 만들어 주는 서비스, 비디오스튜(VideoStew) 리뷰 두번째 시간입니다. 글 만으로 동영상 편집? 비디오스튜(videostew)라면 가능 인터넷을 통한 동영상 스</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "AI로 보다 쉽고 편하게 동영상을 편집할 수 있는 비디오스튜(VideoStew) 서비스에 OpenAI의 최신 GPT-4o가 적용되었다는 소식입니다.\n \n\n\n \n비디오스튜는 라지온에서 소개시켜드린 후에도 꾸준하게 업그레이드를 진행해 왔습니다. 위 그림에서 보시다시피 훨씬 풍부해진 템플릿(지금은 레시피라고도 부르네요)도 있습니다만.\n \n이번에 비디오스튜에서는 AI 스톡 라이브러리 매칭 기능을 개선했습니다.\n \n비디오스튜 내부적으로 공을 많이 들인 업데이트라고 하는데, 위자드 모드를 통해 콘텐츠를 생성할 때 영상이나 이미지를 매칭하는 AI 알고리즘을 개선했습니다.\n그 내용을 요약하면 최근 화제가 되었던 OpenAI의 GPT-4o를 기반으로 텍스트에 어울리는 스톡 라이브러리를 AI가 눈으로 찾고 반영하는 구조로 바뀌었다고 하네요.\n \n쉽게 말해 더 개선된 AI를 적용하여 제공된 텍스트에 잘 어울리는 콘텐츠를 예전보다 더 잘 골라준다는 의미가 아닐까 합니다.\n \n참고로 비디오스튜는 올 하반기에도 자동자막, TTS 성능 개선, 배경 이미지 생성 등의 메이저 업데이트들을 준비 중이라고 합니다.\n\n\n \n혹시 업그레이드된 비디오스튜를 써보시고 싶으신 분이 계시다면 라지온을 통해 가입하는 경우 가능한 1달 무료 체험 링크가 있으니 체험해 보시기 바랍니다.\n \n- 바로가기 : 비디오스튜 1달 무료 체험 링크\n \n위 링크를 통해 비디오스튜 가입 후 유료 구독하시는 경우\n라지온에서 수수료를 받을 수 있습니다.\n \n \n관련 글\n\n \nOpenAI, 소리와 화상, 문자 주고받으며 더 사람같아진 GPT-4o 발표\nOpenAI에서 보고 듣고 말하는 더 진보된 AI 모델인 GPT-4o를 발표했습니다.  GPT-4o의 o는 옴니(omni)를 뜻하는데, 사람과 컴퓨터의 더 자연스러운 상호작용을 위해 만들어졌습니다. 문자와 소리, 이미\nlazion.com\n\n\n \n비디오스튜, 세련된 영상을 쉽게 만들 수 있는 AI 동영상 편집 서비스\nAI와 스톡 라이브러리로 더 간편하게 동영상을 만들어 주는 서비스, 비디오스튜(VideoStew) 리뷰 두번째 시간입니다. 글 만으로 동영상 편집? 비디오스튜(videostew)라면 가능 인터넷을 통한 동영상 스\nlazion.com",
        "guid": "https://lazion.com/2513700",
        "categories": [
          "#소프트웨어#앱#서비스",
          "AI",
          "gpt-4o",
          "service",
          "Video",
          "videostew"
        ],
        "isoDate": "2024-06-17T07:20:23.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "로지텍 X 무신사 드래곤볼 에디션 키보드 단독 판매",
        "link": "https://lazion.com/2513699",
        "pubDate": "Sun, 16 Jun 2024 18:53:04 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513699#entry2513699comment",
        "content": "<p data-ke-size=\"size16\">로지텍이 무신사와 협업을 통해 <b>드래곤볼 에디션 키보드</b> 제품군을 선보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"30904115_20240614114749_3744520648.jpg\" data-origin-width=\"960\" data-origin-height=\"641\"><span data-url=\"https://blog.kakaocdn.net/dn/SFeZj/btsH1D8NojV/6ht7y2t8dxdrSYFwhzTSy1/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/SFeZj/btsH1D8NojV/6ht7y2t8dxdrSYFwhzTSy1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FSFeZj%2FbtsH1D8NojV%2F6ht7y2t8dxdrSYFwhzTSy1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"30904115_20240614114749_3744520648.jpg\" data-origin-width=\"960\" data-origin-height=\"641\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">6월 14일부터 6월 27일까지 로지텍이 온&middot;오프라인 패션 플랫폼 무신사와 협업하여 판매하는 드래곤볼 에디션 키보드들은 다음과 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><b><span style=\"color: #006dd7;\"> 로지텍 시그니처 K855(Signature K855)</span> </b></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"30904115_20240614114810_7639356589.jpg\" data-origin-width=\"960\" data-origin-height=\"641\"><span data-url=\"https://blog.kakaocdn.net/dn/bYSXqw/btsHZVJ5Ysg/1JsQutY6k5VwC5MSdq4mB0/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bYSXqw/btsHZVJ5Ysg/1JsQutY6k5VwC5MSdq4mB0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbYSXqw%2FbtsHZVJ5Ysg%2F1JsQutY6k5VwC5MSdq4mB0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"30904115_20240614114810_7639356589.jpg\" data-origin-width=\"960\" data-origin-height=\"641\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">로지텍의 대표적인 사무용 기계식 키보드입니다. 사용자의 선호도가 높은 무선 기계식 텐키리스 키보드로, 경쾌한 키감을 경험할 수 있는 TTC 적축 기계식 스위치를 채택했으며, 콤팩트한 레이아웃으로 효율적인 공간 활용이 가능합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><b><span style=\"color: #006dd7;\"> 로지텍 MX 메커니컬 풀/미니(MX Mechanical Full/Mini)</span></b></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"30904115_20240614114814_4101916847.jpg\" data-origin-width=\"612\" data-origin-height=\"795\"><span data-url=\"https://blog.kakaocdn.net/dn/oJ9Yw/btsHZ6YUuQM/ySTWR6Jm1vRex82ioLJuB0/img.jpg\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/oJ9Yw/btsHZ6YUuQM/ySTWR6Jm1vRex82ioLJuB0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FoJ9Yw%2FbtsHZ6YUuQM%2FySTWR6Jm1vRex82ioLJuB0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"30904115_20240614114814_4101916847.jpg\" data-origin-width=\"612\" data-origin-height=\"795\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">최고급 무선 일루미네이티드 기계식 키보드로 풀 사이즈 레이아웃의 MX Mechanical Full과 미니 배열의 MX Mechanical Mini 총 두 가지 사이즈로 나뉘어 있습니다.</p>\n<p data-ke-size=\"size16\">부드러우면서도 구분감 있는 타건감을 선사하는 로우 프로파일 카일 MX 갈축 프리미엄 기계식 스위치를 탑재해 업무 생산성을 높일 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">PBT 키캡으로 뛰어난 내구성을 가진 드래곤볼 Z 키캡은 염료 승화 방식을 통해 오랫동안 벗겨지거나 지워지지 않습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고로 로지텍과 드래곤볼 Z(Dragon Ball Z)의 컬래버 제품인 드래곤볼 에디션은 지난 크라우드 펀딩에서 하루 만에 완판되었는데, 이후 발매한 한정 수량 추가 발매 또한 빠르게 품절된 바 있습니다. 이에 로지텍은 무신사와의 협업을 통해 드래곤볼 에디션의 무신사 최초 단독 판매를 진행합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번 무신사의 로지텍 드래곤볼 에디션의 단독 판매 행사는 오는 6월 27일까지 진행되며, <a href=\"https://www.musinsa.com/app/plan/views/53309\" target=\"_blank\" rel=\"noopener\">무신사 홈페이지에서</a> 확인 가능합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : 파인인포)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "로지텍이 무신사와 협업을 통해 드래곤볼 에디션 키보드 제품군을 선보입니다.\n \n\n\n \n6월 14일부터 6월 27일까지 로지텍이 온·오프라인 패션 플랫폼 무신사와 협업하여 판매하는 드래곤볼 에디션 키보드들은 다음과 같습니다.\n \n 로지텍 시그니처 K855(Signature K855) \n \n\n\n \n로지텍의 대표적인 사무용 기계식 키보드입니다. 사용자의 선호도가 높은 무선 기계식 텐키리스 키보드로, 경쾌한 키감을 경험할 수 있는 TTC 적축 기계식 스위치를 채택했으며, 콤팩트한 레이아웃으로 효율적인 공간 활용이 가능합니다.\n \n 로지텍 MX 메커니컬 풀/미니(MX Mechanical Full/Mini)\n \n\n\n \n최고급 무선 일루미네이티드 기계식 키보드로 풀 사이즈 레이아웃의 MX Mechanical Full과 미니 배열의 MX Mechanical Mini 총 두 가지 사이즈로 나뉘어 있습니다.\n부드러우면서도 구분감 있는 타건감을 선사하는 로우 프로파일 카일 MX 갈축 프리미엄 기계식 스위치를 탑재해 업무 생산성을 높일 수 있습니다.\n \nPBT 키캡으로 뛰어난 내구성을 가진 드래곤볼 Z 키캡은 염료 승화 방식을 통해 오랫동안 벗겨지거나 지워지지 않습니다.\n \n \n참고로 로지텍과 드래곤볼 Z(Dragon Ball Z)의 컬래버 제품인 드래곤볼 에디션은 지난 크라우드 펀딩에서 하루 만에 완판되었는데, 이후 발매한 한정 수량 추가 발매 또한 빠르게 품절된 바 있습니다. 이에 로지텍은 무신사와의 협업을 통해 드래곤볼 에디션의 무신사 최초 단독 판매를 진행합니다.\n \n이번 무신사의 로지텍 드래곤볼 에디션의 단독 판매 행사는 오는 6월 27일까지 진행되며, 무신사 홈페이지에서 확인 가능합니다.\n \n(출처 : 파인인포)",
        "guid": "https://lazion.com/2513699",
        "categories": [
          "#주변기기/#키보드#마우스#컨트롤러",
          "accessory",
          "Dragon Ball Z",
          "keyboard",
          "Logitech",
          "mx mechanical",
          "News",
          "signature k855",
          "무신사"
        ],
        "isoDate": "2024-06-16T09:53:04.000Z"
      }
    ]
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": []
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "khris'log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": []
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Hybrid's Notes",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "[PostgreSQL] 단일 테이블 컬럼을 최대한 활용하기",
        "link": "https://jojoldu.tistory.com/788",
        "pubDate": "Tue, 18 Jun 2024 10:00:41 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/788#entry788comment",
        "content": "<blockquote data-ke-style=\"style1\"><p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Serif KR';\"><p><strong>PostgreSQL 14</strong> 에서 진행되었다.</p>\n</span></p></blockquote><p>간혹 쿼리들을 보면 단일 테이블 (<code>from 테이블</code>)의 컬럼으로 모든 <strong>조회 조건이 완성</strong> 가능한데, <code>join 테이블</code> 의 조건을 함께 사용하여 성능 저하를 일으키는 경우가 종종 있다.</p>\n<p>데이터가 몇개 없을때는 큰 차이를 못 느끼지만, 수십만건 이상이 적재된 여러 테이블을 중첩 Join 할 경우 큰 차이가 느껴지게 된다.<br>이를 비교해보자.</p>\n<h2>문제</h2>\n<p>아래의 쿼리는 <code>review</code> 테이블과 연관된 여러 테이블의 정보를 모으고, 이를 페이징 처리하여 제공해야하는 기능이다.</p>\n<pre><code>select *\nfrom &quot;review&quot; as review\nleft join &quot;users&quot; as &quot;user&quot; on review.&quot;user_id&quot; = &quot;user&quot;.&quot;id&quot;\nleft join &quot;courses&quot; as course on review.&quot;course_id&quot; = course.&quot;id&quot;\nleft join &quot;files&quot; as file on course.&quot;cover_file&quot; = file.&quot;id&quot;\nwhere review.&quot;type&quot; = ?\n  and review.&quot;status&quot; = ?\n  and review.&quot;content&quot; is not null\n  and course.&quot;id&quot; in (?)\norder by review.&quot;id&quot; + 0 desc\nlimit 10 offset 20;</code></pre><p>이 쿼리의 특이점은 <code>where ~ and course.&quot;id&quot; in (?)</code> 이다.<br><code>left join</code>의 대상인 <code>courses</code> 의 컬럼을 사용하여 조회 조건에 포함시킨 것이다.</p>\n<p>이 쿼리의 실행 계획은 다음과 같다.</p>\n<pre><code>Limit  (cost=1554.48..1554.50 rows=10 width=4845) (actual time=189.062..189.067 rows=10 loops=1)\n  -&gt;  Sort  (cost=1554.43..1555.11 rows=275 width=4845) (actual time=189.057..189.064 rows=30 loops=1)\n        Sort Key: ((review.id + 0)) DESC\n        Sort Method: top-N heapsort  Memory: 273kB\n        -&gt;  Nested Loop Left Join  (cost=1.56..1546.30 rows=275 width=4845) (actual time=0.105..136.710 rows=25047 loops=1)\n              -&gt;  Nested Loop  (cost=1.13..1313.55 rows=275 width=4174) (actual time=0.085..28.784 rows=25047 loops=1)\n                    -&gt;  Nested Loop Left Join  (cost=0.71..95.53 rows=19 width=3944) (actual time=0.029..0.363 rows=19 loops=1)\n                          -&gt;  Index Scan using courses_pkey on courses course  (cost=0.29..45.32 rows=19 width=2810) (actual time=0.014..0.158 rows=19 loops=1)\n&quot;                                Index Cond: (id = ANY (&#39;{?,?,?,?,?}&#39;::integer[]))&quot;\n                          -&gt;  Index Scan using files_pkey on files file  (cost=0.42..2.64 rows=1 width=1134) (actual time=0.006..0.006 rows=1 loops=19)\n                                Index Cond: (id = course.cover_file)\n                    -&gt;  Index Scan using idx_review_2 on review  (cost=0.42..63.50 rows=61 width=230) (actual time=0.023..1.093 rows=1318 loops=19)\n                          Index Cond: (course_id = course.id)\n                          Filter: ((content IS NOT NULL) AND ((type)::text = &#39;COURSE_REVIEW&#39;::text) AND ((status)::text = &#39;PUBLIC&#39;::text))\n                          Rows Removed by Filter: 40\n&quot;              -&gt;  Index Scan using users_pkey on users &quot;&quot;user&quot;&quot;  (cost=0.43..0.84 rows=1 width=663) (actual time=0.003..0.003 rows=1 loops=25047)&quot;\n                    Index Cond: (id = review.user_id)\nPlanning Time: 0.852 ms\nExecution Time: 189.201 ms</code></pre><p>189ms가 느린 것은 아니지만, 각 테이블들의 크기에 비해 만족스럽지 못하다.<br>여러 중첩 조인과 선 필터, PostgreSQL 14의 Memoize 등 성능 효과를 전혀 보지 못하고 있다.<br>이를 개선해보자.</p>\n<h2>해결</h2>\n<p>위 쿼리를 자세히 살펴보면 <code>left join &quot;courses&quot; as course on review.&quot;course_id&quot; = course.&quot;id&quot;</code> 와 <code>where ~ and course.&quot;id&quot; in (?)</code> 를 통해 <code>courses.id</code>와 <code>review.course_id</code>가 동일한 값임을 알 수 있다.</p>\n<p>즉, <strong>굳이 Join 테이블인 courses가 없어도 조회 조건이 완성 가능</strong>하다.<br>이를 통해 <strong>Join 전에 필터링을 먼저 수행한 후 조인을 하여 성능 개선</strong>을 할 수 있다.</p>\n<pre><code>select *\nfrom &quot;review&quot; as review\nleft join &quot;users&quot; as &quot;user&quot; on review.&quot;user_id&quot; = &quot;user&quot;.&quot;id&quot;\nleft join &quot;courses&quot; as course on review.&quot;course_id&quot; = course.&quot;id&quot;\nleft join &quot;files&quot; as file on course.&quot;cover_file&quot; = file.&quot;id&quot;\nwhere review.&quot;type&quot; = ?\n  and review.&quot;status&quot; = ?\n  and review.&quot;content&quot; is not null\n  and review.&quot;course_id&quot; in (?)\norder by review.&quot;id&quot; + 0 desc\nlimit 10 offset 20;</code></pre><p>아래와 같이 한 줄의 쿼리만 변경되었다.</p>\n<ul>\n<li><code>where ~ and course.&quot;id&quot; in (?)</code> -&gt; <code>where ~ and review.&quot;course_id&quot; in (?)</code> 로 변경</li>\n</ul>\n<p>이에 대한 실행 계획은 다음과 같다.</p>\n<pre><code>Limit  (cost=14642.94..14662.08 rows=10 width=4845) (actual time=15.138..17.700 rows=10 loops=1)\n  -&gt;  Nested Loop Left Join  (cost=14604.67..63642.32 rows=25627 width=4845) (actual time=14.706..17.696 rows=30 loops=1)\n        -&gt;  Nested Loop Left Join  (cost=14604.24..54240.69 rows=25627 width=3703) (actual time=14.676..17.538 rows=30 loops=1)\n              -&gt;  Nested Loop Left Join  (cost=14603.94..51735.94 rows=25627 width=893) (actual time=14.645..17.345 rows=30 loops=1)\n                    -&gt;  Gather Merge  (cost=14603.50..17635.34 rows=25627 width=230) (actual time=14.599..17.062 rows=30 loops=1)\n                          Workers Planned: 3\n                          Workers Launched: 3\n                          -&gt;  Sort  (cost=13603.46..13624.13 rows=8267 width=230) (actual time=11.147..11.166 rows=143 loops=4)\n                                Sort Key: ((review.id + 0)) DESC\n                                Sort Method: quicksort  Memory: 3360kB\n                                Worker 0:  Sort Method: quicksort  Memory: 2501kB\n                                Worker 1:  Sort Method: quicksort  Memory: 2931kB\n                                Worker 2:  Sort Method: quicksort  Memory: 3130kB\n                                -&gt;  Parallel Bitmap Heap Scan on review  (cost=308.21..13065.56 rows=8267 width=230) (actual time=0.599..7.222 rows=6262 loops=4)\n&quot;                                      Recheck Cond: (course_id = ANY (&#39;{?,?,?,?,?}&#39;::integer[]))&quot;\n                                      Filter: ((content IS NOT NULL) AND ((type)::text = &#39;COURSE_REVIEW&#39;::text) AND ((status)::text = &#39;PUBLIC&#39;::text))\n                                      Rows Removed by Filter: 191\n                                      Heap Blocks: exact=1838\n                                      -&gt;  Bitmap Index Scan on idx_review_2  (cost=0.00..301.75 rows=26405 width=0) (actual time=1.512..1.513 rows=25850 loops=1)\n&quot;                                            Index Cond: (course_id = ANY (&#39;{?,?,?,?,?}&#39;::integer[]))&quot;\n                    -&gt;  Memoize  (cost=0.44..1.61 rows=1 width=663) (actual time=0.009..0.009 rows=1 loops=30)\n                          Cache Key: review.user_id\n                          Cache Mode: logical\n                          Hits: 3  Misses: 27  Evictions: 0  Overflows: 0  Memory Usage: 10kB\n&quot;                          -&gt;  Index Scan using users_pkey on users &quot;&quot;user&quot;&quot;  (cost=0.43..1.60 rows=1 width=663) (actual time=0.007..0.007 rows=1 loops=27)&quot;\n                                Index Cond: (id = review.user_id)\n              -&gt;  Memoize  (cost=0.30..0.75 rows=1 width=2810) (actual time=0.005..0.005 rows=1 loops=30)\n                    Cache Key: review.course_id\n                    Cache Mode: logical\n                    Hits: 16  Misses: 14  Evictions: 0  Overflows: 0  Memory Usage: 26kB\n                    -&gt;  Index Scan using courses_pkey on courses course  (cost=0.29..0.74 rows=1 width=2810) (actual time=0.006..0.006 rows=1 loops=14)\n                          Index Cond: (id = review.course_id)\n        -&gt;  Memoize  (cost=0.43..1.78 rows=1 width=1134) (actual time=0.004..0.004 rows=1 loops=30)\n              Cache Key: course.cover_file\n              Cache Mode: logical\n              Hits: 16  Misses: 14  Evictions: 0  Overflows: 0  Memory Usage: 12kB\n              -&gt;  Index Scan using files_pkey on files file  (cost=0.42..1.77 rows=1 width=1134) (actual time=0.005..0.005 rows=1 loops=14)\n                    Index Cond: (id = course.cover_file)\nPlanning Time: 0.876 ms\nExecution Time: 18.506 ms</code></pre><p>단일 테이블로 선 필터링을 하게 되어 <strong>Join 대상이 줄어듬</strong>과 동시에 <a href=\"https://jojoldu.tistory.com/700\">Memoize</a> 등 캐시 효과도 볼 수 있게 되었다.</p>\n<p>189ms → 18 ms로 <strong>대략 1,000% 성능 개선</strong>이 되었다.</p>\n<h2>마무리</h2>\n<p>복잡한 쿼리를 작성하다보면 나도 모르게 여러 테이블의 컬럼을 활용하여 조건문을 완성할때가 있다.<br>Join의 조건을 보고 단일 테이블의 컬럼을 최대한 활용할 수 있다면 이를 최대한 활용하자.</p>",
        "contentSnippet": "PostgreSQL 14 에서 진행되었다.\n\n간혹 쿼리들을 보면 단일 테이블 (from 테이블)의 컬럼으로 모든 조회 조건이 완성 가능한데, join 테이블 의 조건을 함께 사용하여 성능 저하를 일으키는 경우가 종종 있다.\n데이터가 몇개 없을때는 큰 차이를 못 느끼지만, 수십만건 이상이 적재된 여러 테이블을 중첩 Join 할 경우 큰 차이가 느껴지게 된다.\n이를 비교해보자.\n문제\n아래의 쿼리는 review 테이블과 연관된 여러 테이블의 정보를 모으고, 이를 페이징 처리하여 제공해야하는 기능이다.\nselect *\nfrom \"review\" as review\nleft join \"users\" as \"user\" on review.\"user_id\" = \"user\".\"id\"\nleft join \"courses\" as course on review.\"course_id\" = course.\"id\"\nleft join \"files\" as file on course.\"cover_file\" = file.\"id\"\nwhere review.\"type\" = ?\n  and review.\"status\" = ?\n  and review.\"content\" is not null\n  and course.\"id\" in (?)\norder by review.\"id\" + 0 desc\nlimit 10 offset 20;\n이 쿼리의 특이점은 where ~ and course.\"id\" in (?) 이다.\nleft join의 대상인 courses 의 컬럼을 사용하여 조회 조건에 포함시킨 것이다.\n이 쿼리의 실행 계획은 다음과 같다.\nLimit  (cost=1554.48..1554.50 rows=10 width=4845) (actual time=189.062..189.067 rows=10 loops=1)\n  ->  Sort  (cost=1554.43..1555.11 rows=275 width=4845) (actual time=189.057..189.064 rows=30 loops=1)\n        Sort Key: ((review.id + 0)) DESC\n        Sort Method: top-N heapsort  Memory: 273kB\n        ->  Nested Loop Left Join  (cost=1.56..1546.30 rows=275 width=4845) (actual time=0.105..136.710 rows=25047 loops=1)\n              ->  Nested Loop  (cost=1.13..1313.55 rows=275 width=4174) (actual time=0.085..28.784 rows=25047 loops=1)\n                    ->  Nested Loop Left Join  (cost=0.71..95.53 rows=19 width=3944) (actual time=0.029..0.363 rows=19 loops=1)\n                          ->  Index Scan using courses_pkey on courses course  (cost=0.29..45.32 rows=19 width=2810) (actual time=0.014..0.158 rows=19 loops=1)\n\"                                Index Cond: (id = ANY ('{?,?,?,?,?}'::integer[]))\"\n                          ->  Index Scan using files_pkey on files file  (cost=0.42..2.64 rows=1 width=1134) (actual time=0.006..0.006 rows=1 loops=19)\n                                Index Cond: (id = course.cover_file)\n                    ->  Index Scan using idx_review_2 on review  (cost=0.42..63.50 rows=61 width=230) (actual time=0.023..1.093 rows=1318 loops=19)\n                          Index Cond: (course_id = course.id)\n                          Filter: ((content IS NOT NULL) AND ((type)::text = 'COURSE_REVIEW'::text) AND ((status)::text = 'PUBLIC'::text))\n                          Rows Removed by Filter: 40\n\"              ->  Index Scan using users_pkey on users \"\"user\"\"  (cost=0.43..0.84 rows=1 width=663) (actual time=0.003..0.003 rows=1 loops=25047)\"\n                    Index Cond: (id = review.user_id)\nPlanning Time: 0.852 ms\nExecution Time: 189.201 ms\n189ms가 느린 것은 아니지만, 각 테이블들의 크기에 비해 만족스럽지 못하다.\n여러 중첩 조인과 선 필터, PostgreSQL 14의 Memoize 등 성능 효과를 전혀 보지 못하고 있다.\n이를 개선해보자.\n해결\n위 쿼리를 자세히 살펴보면 left join \"courses\" as course on review.\"course_id\" = course.\"id\" 와 where ~ and course.\"id\" in (?) 를 통해 courses.id와 review.course_id가 동일한 값임을 알 수 있다.\n즉, 굳이 Join 테이블인 courses가 없어도 조회 조건이 완성 가능하다.\n이를 통해 Join 전에 필터링을 먼저 수행한 후 조인을 하여 성능 개선을 할 수 있다.\nselect *\nfrom \"review\" as review\nleft join \"users\" as \"user\" on review.\"user_id\" = \"user\".\"id\"\nleft join \"courses\" as course on review.\"course_id\" = course.\"id\"\nleft join \"files\" as file on course.\"cover_file\" = file.\"id\"\nwhere review.\"type\" = ?\n  and review.\"status\" = ?\n  and review.\"content\" is not null\n  and review.\"course_id\" in (?)\norder by review.\"id\" + 0 desc\nlimit 10 offset 20;\n아래와 같이 한 줄의 쿼리만 변경되었다.\nwhere ~ and course.\"id\" in (?) -> where ~ and review.\"course_id\" in (?) 로 변경\n이에 대한 실행 계획은 다음과 같다.\nLimit  (cost=14642.94..14662.08 rows=10 width=4845) (actual time=15.138..17.700 rows=10 loops=1)\n  ->  Nested Loop Left Join  (cost=14604.67..63642.32 rows=25627 width=4845) (actual time=14.706..17.696 rows=30 loops=1)\n        ->  Nested Loop Left Join  (cost=14604.24..54240.69 rows=25627 width=3703) (actual time=14.676..17.538 rows=30 loops=1)\n              ->  Nested Loop Left Join  (cost=14603.94..51735.94 rows=25627 width=893) (actual time=14.645..17.345 rows=30 loops=1)\n                    ->  Gather Merge  (cost=14603.50..17635.34 rows=25627 width=230) (actual time=14.599..17.062 rows=30 loops=1)\n                          Workers Planned: 3\n                          Workers Launched: 3\n                          ->  Sort  (cost=13603.46..13624.13 rows=8267 width=230) (actual time=11.147..11.166 rows=143 loops=4)\n                                Sort Key: ((review.id + 0)) DESC\n                                Sort Method: quicksort  Memory: 3360kB\n                                Worker 0:  Sort Method: quicksort  Memory: 2501kB\n                                Worker 1:  Sort Method: quicksort  Memory: 2931kB\n                                Worker 2:  Sort Method: quicksort  Memory: 3130kB\n                                ->  Parallel Bitmap Heap Scan on review  (cost=308.21..13065.56 rows=8267 width=230) (actual time=0.599..7.222 rows=6262 loops=4)\n\"                                      Recheck Cond: (course_id = ANY ('{?,?,?,?,?}'::integer[]))\"\n                                      Filter: ((content IS NOT NULL) AND ((type)::text = 'COURSE_REVIEW'::text) AND ((status)::text = 'PUBLIC'::text))\n                                      Rows Removed by Filter: 191\n                                      Heap Blocks: exact=1838\n                                      ->  Bitmap Index Scan on idx_review_2  (cost=0.00..301.75 rows=26405 width=0) (actual time=1.512..1.513 rows=25850 loops=1)\n\"                                            Index Cond: (course_id = ANY ('{?,?,?,?,?}'::integer[]))\"\n                    ->  Memoize  (cost=0.44..1.61 rows=1 width=663) (actual time=0.009..0.009 rows=1 loops=30)\n                          Cache Key: review.user_id\n                          Cache Mode: logical\n                          Hits: 3  Misses: 27  Evictions: 0  Overflows: 0  Memory Usage: 10kB\n\"                          ->  Index Scan using users_pkey on users \"\"user\"\"  (cost=0.43..1.60 rows=1 width=663) (actual time=0.007..0.007 rows=1 loops=27)\"\n                                Index Cond: (id = review.user_id)\n              ->  Memoize  (cost=0.30..0.75 rows=1 width=2810) (actual time=0.005..0.005 rows=1 loops=30)\n                    Cache Key: review.course_id\n                    Cache Mode: logical\n                    Hits: 16  Misses: 14  Evictions: 0  Overflows: 0  Memory Usage: 26kB\n                    ->  Index Scan using courses_pkey on courses course  (cost=0.29..0.74 rows=1 width=2810) (actual time=0.006..0.006 rows=1 loops=14)\n                          Index Cond: (id = review.course_id)\n        ->  Memoize  (cost=0.43..1.78 rows=1 width=1134) (actual time=0.004..0.004 rows=1 loops=30)\n              Cache Key: course.cover_file\n              Cache Mode: logical\n              Hits: 16  Misses: 14  Evictions: 0  Overflows: 0  Memory Usage: 12kB\n              ->  Index Scan using files_pkey on files file  (cost=0.42..1.77 rows=1 width=1134) (actual time=0.005..0.005 rows=1 loops=14)\n                    Index Cond: (id = course.cover_file)\nPlanning Time: 0.876 ms\nExecution Time: 18.506 ms\n단일 테이블로 선 필터링을 하게 되어 Join 대상이 줄어듬과 동시에 Memoize 등 캐시 효과도 볼 수 있게 되었다.\n189ms → 18 ms로 대략 1,000% 성능 개선이 되었다.\n마무리\n복잡한 쿼리를 작성하다보면 나도 모르게 여러 테이블의 컬럼을 활용하여 조건문을 완성할때가 있다.\nJoin의 조건을 보고 단일 테이블의 컬럼을 최대한 활용할 수 있다면 이를 최대한 활용하자.",
        "guid": "https://jojoldu.tistory.com/788",
        "categories": [
          "Database",
          "PostgreSQL",
          "RDBMS",
          "데이터베이스 튜닝",
          "성능 튜닝",
          "쿼리 튜닝"
        ],
        "isoDate": "2024-06-18T01:00:41.000Z"
      },
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "진짜 개발자",
        "link": "https://jojoldu.tistory.com/787",
        "pubDate": "Sat, 15 Jun 2024 19:35:52 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/787#entry787comment",
        "content": "<p data-ke-size=\"size16\">\"주말이나 여가시간에 개발하고 공부해야만 흔히 말하는 <b>진짜 개발자</b>인것 같은데, 본인은 그렇지 않는 것 같아 개발자를 계속해도 될까요?\" 같은 고민을 종종 듣게 된다.</p>\n<p data-ke-size=\"size16\">예전에 비슷한 고민을 한 적이 있어, 공감이 되었다.<br />그러다가 나름대로 생각을 정리한 적이 있어 남긴다.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">친동생은 고등학생때 판타지 소설 단편을 써서 반 친구들한테 돌려보는 것에 엄청 재미를 느끼는 사람이였고, 그걸 계기로 문예창작학과로 진학을 했다.</p>\n<p data-ke-size=\"size16\">근데 막상 전문적으로 작가를 위한 학과를 가니 모든 교수님들이 작가란 순수문학을 해야하고, 판타지소설같은 대중문학은 작가로서는 지향해선 안된다라는 이야기를 많이 들었다.</p>\n<p data-ke-size=\"size16\">당시는 2008년~10년이다보니 아무래도 지금처럼 웹 소설과 같이 판타지, 로맨스 등의 소설 분야가 엄청난 인기를 끌던 때가 아니다보니 유독 더 심했던 것 같다.</p>\n<p data-ke-size=\"size16\">어찌됐든 그 분야의 전문성을 얻기 위해 진학을 했으니 순수 문학은 동생이 좋아하는 분야가 아니지만 4년 내내 장학금을 받을 정도로 노력 해서 졸업 했다.</p>\n<p data-ke-size=\"size16\">그리고 <b>글 쓰는 것에 흥미를 잃었다</b>.<br />지금은 글 쓰는 일이 아닌 다른 일을 하고 있다.</p>\n<p data-ke-size=\"size16\">우습게도 15년이 지난 지금은 \"작가란 이래야 해\" 라고 외치던 상황이 무색하게 판타지, 무협 등 대중 소설이 웹소설이라는 새로운 장르를 통해 가장 큰 텍스트 시장이 되었다.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\"><b>타인이 만든 \"개발자란 어떤 형태어야 한다\" 라는 틀을 굳이 만들어서 거기에 자신을 끼워 맞출 필요는 없다</b>.</p>\n<p data-ke-size=\"size16\">개인 시간에 운동이나 기타 건강한 취미 활동을 하고 이를 기반으로 좀 더 건강하게 회사일을 하는 개발자도 좋은 개발자이다.</p>\n<p data-ke-size=\"size16\">앞으로 개발자의 형태가 어떻게 될지는 아무도 모른다.<br />웹소설을 쓰는 작가분들이 사람들에게 사랑받고 부자가 되는 현재처럼 변하게 되었던 것처럼.</p>\n<p data-ke-size=\"size16\">진짜 소설가, 진짜 개발자 등으로 불리는 것 보다 더 중요한 건 <b>나 스스로 그 업을 더 흥미롭게 할 수 있는 나만의 업의 기준을 세우는 것</b>이다.</p>\n<p data-ke-size=\"size16\">타인이 만든 기준이 본인의 흥미를 이끌지 못한다면 굳이 거기에 스트레스 받을 필요는 없다.</p>\n<p data-ke-size=\"size16\">자신이 개발자라는 직업을 좋아한다면 남의 기준에 맞추지 말고 자신만의 기준을 만들어서 계속 진행하면 된다.</p>\n<p data-ke-size=\"size16\">요는 <b>계속 할 수 있는 나만의 방법</b>을 찾는 것이다.</p>\n<p data-ke-size=\"size16\">그러기 위해서 <b>10년이상 자기만의 길을 걸어가는 시니어들의 이야기를 많이 들어보되, 맹목적으로 따르지 않는 시선</b>을 가질 필요가 있다.</p>\n<p data-ke-size=\"size16\">내가 좋아하는 업이라면 내가 가장 오랫 동안 이 흥미를 이끌수 있는 방법을 찾자.</p>",
        "contentSnippet": "\"주말이나 여가시간에 개발하고 공부해야만 흔히 말하는 진짜 개발자인것 같은데, 본인은 그렇지 않는 것 같아 개발자를 계속해도 될까요?\" 같은 고민을 종종 듣게 된다.\n예전에 비슷한 고민을 한 적이 있어, 공감이 되었다.\n그러다가 나름대로 생각을 정리한 적이 있어 남긴다.\n친동생은 고등학생때 판타지 소설 단편을 써서 반 친구들한테 돌려보는 것에 엄청 재미를 느끼는 사람이였고, 그걸 계기로 문예창작학과로 진학을 했다.\n근데 막상 전문적으로 작가를 위한 학과를 가니 모든 교수님들이 작가란 순수문학을 해야하고, 판타지소설같은 대중문학은 작가로서는 지향해선 안된다라는 이야기를 많이 들었다.\n당시는 2008년~10년이다보니 아무래도 지금처럼 웹 소설과 같이 판타지, 로맨스 등의 소설 분야가 엄청난 인기를 끌던 때가 아니다보니 유독 더 심했던 것 같다.\n어찌됐든 그 분야의 전문성을 얻기 위해 진학을 했으니 순수 문학은 동생이 좋아하는 분야가 아니지만 4년 내내 장학금을 받을 정도로 노력 해서 졸업 했다.\n그리고 글 쓰는 것에 흥미를 잃었다.\n지금은 글 쓰는 일이 아닌 다른 일을 하고 있다.\n우습게도 15년이 지난 지금은 \"작가란 이래야 해\" 라고 외치던 상황이 무색하게 판타지, 무협 등 대중 소설이 웹소설이라는 새로운 장르를 통해 가장 큰 텍스트 시장이 되었다.\n타인이 만든 \"개발자란 어떤 형태어야 한다\" 라는 틀을 굳이 만들어서 거기에 자신을 끼워 맞출 필요는 없다.\n개인 시간에 운동이나 기타 건강한 취미 활동을 하고 이를 기반으로 좀 더 건강하게 회사일을 하는 개발자도 좋은 개발자이다.\n앞으로 개발자의 형태가 어떻게 될지는 아무도 모른다.\n웹소설을 쓰는 작가분들이 사람들에게 사랑받고 부자가 되는 현재처럼 변하게 되었던 것처럼.\n진짜 소설가, 진짜 개발자 등으로 불리는 것 보다 더 중요한 건 나 스스로 그 업을 더 흥미롭게 할 수 있는 나만의 업의 기준을 세우는 것이다.\n타인이 만든 기준이 본인의 흥미를 이끌지 못한다면 굳이 거기에 스트레스 받을 필요는 없다.\n자신이 개발자라는 직업을 좋아한다면 남의 기준에 맞추지 말고 자신만의 기준을 만들어서 계속 진행하면 된다.\n요는 계속 할 수 있는 나만의 방법을 찾는 것이다.\n그러기 위해서 10년이상 자기만의 길을 걸어가는 시니어들의 이야기를 많이 들어보되, 맹목적으로 따르지 않는 시선을 가질 필요가 있다.\n내가 좋아하는 업이라면 내가 가장 오랫 동안 이 흥미를 이끌수 있는 방법을 찾자.",
        "guid": "https://jojoldu.tistory.com/787",
        "categories": [
          "생각정리",
          "진짜 개발자",
          "커리어"
        ],
        "isoDate": "2024-06-15T10:35:52.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "오픈챗 해시태그 예측을 위한 다중 레이블 분류 모델 개발하기",
        "link": "https://techblog.lycorp.co.jp/ko/multi-label-classification-model-for-openchat-hashtag-prediction",
        "pubDate": "Wed, 19 Jun 2024 02:00:00 GMT",
        "content": "들어가며\n안녕하세요. AI Services Lab 팀의 ML 엔지니어 박희웅입니다. 저희 팀에서는 오픈챗과 관련된 다양한 AI/ML 모델을 개발해 서빙하고 있는데요. 앞서 오프라인...",
        "contentSnippet": "들어가며\n안녕하세요. AI Services Lab 팀의 ML 엔지니어 박희웅입니다. 저희 팀에서는 오픈챗과 관련된 다양한 AI/ML 모델을 개발해 서빙하고 있는데요. 앞서 오프라인...",
        "guid": "https://techblog.lycorp.co.jp/ko/multi-label-classification-model-for-openchat-hashtag-prediction",
        "isoDate": "2024-06-19T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": [
      {
        "title": "보이스피싱 애플리케이션 분석 2부",
        "link": "https://meetup.nhncloud.com/posts/383",
        "pubDate": "Tue, 18 Jun 2024 06:37:08 GMT",
        "content": "![NHN Cloud_meetup banner_voicefishing_202406-02-01.png](https://image.toast.com/aaaadh/alpha/2024/techblog/NHN%20Cloudmeetup%20bannervoicefishing2024060201.png)\r\r\n\r\r\n# 들어가며\r\r\n\r\r\n안녕하세요. NHN Cloud 서비스보안팀 지우중입니다.\r\r\n많은 분들이 보이스피싱 애플리케이션 분석 1부를 재밌고 흥미롭게 읽어주셔서 빠르게 2부를 준비했습니다.\r\r\n보이스피싱 애플리케이션 분석 2부에서는 보이스 피싱 애플리케이션에서 어떤 데이터를 C&C서버(*Command & Control Server: 해커가 공격을 수행하기 위해 제어하는 서버*)로 보내는지, 피해자 단말기에서는 어떤 일이 일어나는지 알아보겠습니다.\r\r\n또한, 보이스피싱 애플리케이션의 핵심인 전화 가로채기, 오디오 도청, 위치 추적(GPS), 불법 촬영, SMS 탈취에 대한 분석 내용을 공유하려고 합니다.\r\r\n그럼, 바로 보이스피싱 애플리케이션 분석 2부 시작하겠습니다!\r\r\n\r\r\n***\r\r\n\r\r\n# 피해자 단말기 등록\r\r\n\r\r\n먼저, 결론부터 말씀드리자면 보이스피싱 애플리케이션에서는 피해자 단말기에서 지속적인 모니터링 및 제어 등을 하기 위해 피해자 단말기를 등록하는 과정이 필요합니다.\r\r\n보이스피싱 애플리케이션을 설치한 후 실행하자마자 발생하는 패킷[[1]](https://developer.mozilla.org/ko/docs/Glossary/Packet)을 분석하면, 서버에 피해자의 단말기 정보를 전송하면서 등록 절차를 완료하는 것을 확인할 수 있습니다.\r\r\n이 과정에서 피해자의 전화번호, 통신사, 단말기 정보 등이 포함된 데이터가 전송되는 것을 확인할 수 있었습니다.\r\r\n피해자 단말기를 등록하는 패킷은 아래와 같이 POST 형식으로 [http://137.220.230.51/17](http://137.220.230.51/17) 으로 postVal이라는 값을 전송하는 것을 볼 수 있습니다.\r\r\n![1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/1%281%29.png)\r\r\n\r\r\n패킷 내용을 보시면 postVal의 값은 평문이 아닌 알 수 없는 값을 C&C 서버로 전송하는 걸 알 수 있습니다.\r\r\n하지만 분석하는 입장에서는 정확히 postVal의 값이 어떤 내용인지 알아야 합니다.\r\r\n그 이유는 보이스피싱 범죄자들 입장에서는 postVal 값이 어떤 목적으로 서버로 보내는지 알고 있겠지만 분석하는 입장에서는 평문의 postVal 값을 알아야만 애플리케이션을 실행하자마자 postVal 값을 서버로 보내는 이유를 추측할 수 있기 때문입니다.<br>\r\r\n따라서 postVal 값이 어떻게 생성되는지 그 위치를 찾을 필요가 있습니다.\r\r\n분석한 결과, 아래의 코드가 해당 패킷을 생성하는 코드로 확인되었습니다.\r\r\n![2.png](https://image.toast.com/aaaadh/alpha/2024/techblog/2.png)\r\r\n위의 코드에서 ①번을 자세히 살펴보겠습니다.\r\r\n![3.png](https://image.toast.com/aaaadh/alpha/2024/techblog/3.png)\r\r\nreqBody란 request 패킷의 body 부분을 의미합니다.\r\r\n즉, 서버로 요청하는 실제 데이터가 존재하는 영역이라고 생각하시면 됩니다.\r\r\n코드를 분석하면, s5라는 값은 ②번에서 만들어지며 s4는 ③번에서 만들어지는 것을 알 수 있습니다.\r\r\n③번을 통해서 서버로 보낼 데이터의 형식은 JSON[[2]](https://namu.wiki/w/JSON)으로 보내는 것을 확인할 수 있으며 변수 s4의 값은 아래의 `a.b()` 메서드에서 반환된 값을 의미합니다.\r\r\n![4.png](https://image.toast.com/aaaadh/alpha/2024/techblog/4.png)\r\r\n따라서 변수 s4의 값을 확인하기 위해서는 `a.b()` 메서드를 살펴볼 필요가 있습니다.\r\r\n![5.png](https://image.toast.com/aaaadh/alpha/2024/techblog/5.png)\r\r\n`a.b()` 메서드를 확인한 결과, AES/CBC/PKCS5Padding[[3]](https://namu.wiki/w/AES) 알고리즘을 사용하며 key는 \"rb!nBwXv4C%Gr^84\", IV[[4]](https://ko.wikipedia.org/wiki/%EC%B4%88%EA%B8%B0%ED%99%94_%EB%B2%A1%ED%84%B0)값은 \"1234567812345678\"을 사용하는 것을 확인할 수 있습니다.\r\r\n즉, 어떤 값을 암호화하여 최종적으로 Base64 인코딩[[5]](https://ko.wikipedia.org/wiki/%EB%B2%A0%EC%9D%B4%EC%8A%A464)을 수행한 후 반환하고 있는 것을 알 수 있습니다.\r\r\n따라서 암호화를 수행하기 전 평문값을 알 수 있다면 보이스피싱 범죄자들에게 어떤 데이터를 보내는지 알 수 있습니다.\r\r\n여기에는 2가지 방법이 있습니다.\r\r\n첫 번째로는 `a.b()` 메서드를 후킹(*프로그램에서 구성 요소 간에 발생하는 함수 호출, 메시지, 이벤트 등을 중간에서 바꾸거나 가로채는 명령, 방법, 기술이나 행위*)하여 cleartext라는 인자값을 출력하는 방법과 두 번째로는 암호화된 값을 복호화하는 방법이 있습니다. 위의 그림에서 보셨다시피 암호화 과정에 사용한 암호화 알고리즘은 AES 암호화로 대표적인 대칭키 암호화 알고리즘입니다.\r\r\n대칭키 암호화의 가장 큰 특징은 암호화와 복호화를 할 때 사용하는 Key와 IV 값이 같다는 점입니다.\r\r\n따라서 Key와 IV 값이 노출되었기 때문에 두 번째 방법을 이용하면 다음과 같이 평문의 데이터를 확인할 수 있습니다.\r\r\n![6.png](https://image.toast.com/aaaadh/alpha/2024/techblog/6.png)\r\r\n위의 값을 추측해 보면 app_id는 보이스피싱 애플리케이션을 만든 조직에서 부여한 값인 것으로 추측됩니다.\r\r\npid 값은 해당 단말기의 Google 계정과 관련된 값으로 보이며 나머지 값은 피해자 단말기의 정보라고 보시면 됩니다.\r\r\n여기서 왜 app_id가 17이지? 라는 생각이 들 수도 있는데요.\r\r\n보이스피싱 범죄자들은 1개의 보이스피싱 애플리케이션을 만드는 것이 아니라 조직적으로 대량의 악성 애플리케이션을 만듭니다.\r\r\n쉽게 예를 들자면, 보이스피싱 애플리케이션 및 악성 애플리케이션 100개를 만들어 배포한 후 app_id가 없으면 관리적인 측면에서 어떤 악성 애플리케이션에서 요청한 패킷인지 관리하기가 힘들어집니다.\r\r\n![7.png](https://image.toast.com/aaaadh/alpha/2024/techblog/7.png)\r\r\n따라서 위의 그림처럼 각 애플리케이션에 app_id를 부여한 후 app_id 번호에 맞게 서버를 구성한다든지, 피해자들을 속이기 위한 보이스피싱 시나리오 등 관리 및 기타 목적으로 app_id를 부여한 것으로 추측됩니다.\r\r\n범죄자들은 자신의 서버에서 피해자가 자신들이 만든 보이스피싱 애플리케이션이 설치된 후 단말기 등록 패킷을 기다린 후 app_id와 휴대폰 번호(p_no) 등을 보고 자신들이 정한 시나리오 및 목적에 따라 피해자들을 속이기 시작합니다.\r\r\n즉, 빠르게 피해자들을 속이기 위해 필요한 데이터라고 생각해 주시면 될 것 같습니다.\r\r\n여기서 말하는 시나리오란 아래의 영상을 참고하시면 쉽게 이해가 될 것 같습니다.\r\r\n>  [영상 바로 가기](https://www.youtube.com/watch?v=eapWmmBFK6s&t=533)\r\r\n\r\r\n하지만 분석 과정에서 단말기 등록 패킷이 발생한 후 C&C 서버에서는 아무런 응답이 오지 않았는데요.\r\r\n그 이유는 보이스피싱 조직들은 C&C 서버를 일정 기간 운영한 후 이전 및 폐쇄하는 경향이 있는데 현재 분석하는 보이스피싱 애플리케이션의 C&C 서버도 마찬가지로 이전 및 폐쇄한 것으로 보입니다.\r\r\n사실 이 부분이 분석하는 과정에서 가장 아쉬운 부분이었습니다.<br>\r\r\n실제로 동작하는 C&C 서버였다면 실시간으로 데이터를 주고받으면서 정확하게 분석할 수 있었지만 이렇게 서버와의 통신이 없다면 사실 완벽한 분석은 어렵다고 볼 수 있습니다.\r\r\n하지만 최대한 해당 보이스피싱 애플리케이션의 특징을 분석해 보고자 노력하였습니다.\r\r\n\r\r\n# 화면 분석\r\r\n\r\r\n## 1. APK 추가 설치\r\r\n\r\r\n분석 당시 저는 'C&C 서버에서 응답이 없어 이제 어떻게 분석을 진행해야 하지?' 라는 생각과 함께 아래의 애플리케이션 첫 화면을 보면서 고민에 빠져있었습니다.\r\r\n\r\r\n![8.png](https://image.toast.com/aaaadh/alpha/2024/techblog/8.png)\r\r\n고민하던 도중 '잠시만.. C&C 서버에서 응답이 없었는데 지금 내가 보고 있는 화면은 뭐지? 어디서 보내준 거지?' 라는 생각이 문득 들었습니다. 그래서 바로 다시 네트워크 패킷을 분석하였습니다.\r\r\n하지만 어떤 패킷에서도 해당 화면에 대한 데이터는 존재하지 않았습니다. 통신 구간이 아니면 남아 있는 것은 APK 파일밖에 없습니다.\r\r\n그래서 다시 APK 파일을 추가로 분석하였습니다.\r\r\nAPK 파일을 분석하던 도중 assets 디렉토리에 다음과 같은 파일이 존재했습니다.\r\r\n![9.png](https://image.toast.com/aaaadh/alpha/2024/techblog/9.png)\r\r\nassets 디렉토리에 존재하는 MP3 파일을 재생해 보면 금융 위원회, 검찰청 민원 상담실, 금감원 콜센터에 전화하면 들리는 안내 음성 파일들이었습니다.\r\r\n위의 MP3 파일은 전화 가로채기 수법에 활용되며 피해자를 속이기 위한 파일임을 추측할 수 있었습니다.\r\r\n또한 MP3 파일 이외 plbFhm.apk, uSBxbR.apk 파일이 존재했습니다.\r\r\n이는 해당 보이스피싱 애플리케이션에서 사용하고 있는 또 다른 APK 파일이라는 것을 확인할 수 있었는데요.\r\r\n하지만 마지막으로 남은 tspTFl.sz 파일은 어떤 파일인지 알 수 없었습니다.\r\r\n주로 `.sz` 확장자는 압축된 파일 형식 중 하나입니다.\r\r\n압축된 파일이 맞는지 확인하기 위해 Hex Editor로 해당 파일을 열어 보았습니다.\r\r\n![10.png](https://image.toast.com/aaaadh/alpha/2024/techblog/10%281%29.png)\r\r\n다행스럽게도 PK 파일 포맷[[7]](https://namu.wiki/w/%ED%8C%8C%EC%9D%BC%20%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98)으로 되어있는 것을 확인하였으며 파일 자체로는 암호화가 되어있지 않았습니다.\r\r\n이 tspTFl.sz 파일을 열어보기 위해 확장자를 `. zip`으로 변경 후 파일을 열어보았습니다.\r\r\n![11.png](https://image.toast.com/aaaadh/alpha/2024/techblog/11%281%29.png)\r\r\n열어본 결과 html 파일과 js 폴더, 알 수 없는 폴더가 존재하였습니다.\r\r\n어떤 파일인지 분석을 진행하기 위해 압축 풀기를 수행하였지만, 다음과 같이 패스워드가 설정되어 있었습니다.\r\r\n![12.png](https://image.toast.com/aaaadh/alpha/2024/techblog/12.png)\r\r\n\r\r\n패스워드가 설정된 것으로 보아, 중요한 파일인 것 같았는데요.\r\r\n이 패스워드를 분석하기 위해 APK 파일 분석을 진행하였습니다.\r\r\n분석한 결과, 아래의 그림처럼 패스워드는 `\"s********a\"`로 하드코딩 되어 있었으며 발견된 패스워드로 압축 파일을 해제할 수 있었습니다.\r\r\n![13.png](https://image.toast.com/aaaadh/alpha/2024/techblog/13.png)\r\r\n압축이 풀린 html 파일을 열어보면 애플리케이션의 첫 화면인 것을 알 수 있었습니다.\r\r\n![14.png](https://image.toast.com/aaaadh/alpha/2024/techblog/14.png)\r\r\n위의 결과로 C&C 서버에서 화면 데이터를 받아오지 않아도 첫 화면을 볼 수 있었던 이유를 알아냈습니다.\r\r\n또한 ivrvyeuimagesivrvyeu 디렉토리에는 상담원으로 예상되는 사진 파일(도용된 사진으로 추측됩니다)과 애플리케이션의 화면을 구성하는 그림 파일들이 저장된 것을 확인할 수 있었습니다.\r\r\n![15.png](https://image.toast.com/aaaadh/real/2024/techblog/15.png)\r\r\n그래도 아쉬운 마음에 '다른 메뉴를 클릭하면 다른 C&C 서버가 동작하지 않을까?' 생각을 해서 아래의 **대출 승인 사례** 메뉴를 클릭해 보았습니다.\r\r\n\r\r\n![16_rv.png](https://image.toast.com/aaaadh/real/2024/techblog/16rv.png)\r\r\n\r\r\n위 그림에서 보시는 것처럼 **대출 승인 사례**를 클릭하자 다음과 같은 알림이 발생했습니다.\r\r\n```\r\r\n    - 금융상품을 만드는건 어렵지만 불필요한 과정을 찾아 알기위하여 간편한 모바일로 알기쉽게 설계했다.(그림 1)\r\r\n    - 보안상 새로운 업데이트가 있습니다. 새버전을 설치해시기 바랍니다.(그림 2)\r\r\n```\r\r\n\r\r\n알림 문구도 어딘가 어색해 보이는 게 한국에서 만든 애플리케이션이 아닌 것을 추측할 수 있습니다.\r\r\n이러한 문구는 또 다른 악성 애플리케이션의 설치를 유도하는 전형적인 악성 애플리케이션의 특징 중 하나입니다.\r\r\n앞에서 살펴보았던 assets 디렉토리에 존재하는 plbFhm.apk 파일을 설치하도록 유도하는 문구였습니다.\r\r\n![17.png](https://image.toast.com/aaaadh/alpha/2024/techblog/17.png)\r\r\n이렇게 애플리케이션을 설계한 이유는 간단합니다.\r\r\n제일 먼저 설치하는 애플리케이션에서 모든 악성 행위를 수행한다면 쉽게 분석이 가능하기 때문에 탐지와 분석을 힘들게 하기 위함입니다.\r\r\nplbFhm.apk 파일을 대략적으로 정리하자면 암호화된 DEX 파일 2개와 총 5개의 MP3 파일이 존재합니다.\r\r\n![18.png](https://image.toast.com/aaaadh/alpha/2024/techblog/18.png)\r\r\n\r\r\n암호화된 DEX 파일이 존재하는 이상 plbFhm.apk도 분석하기 위해서는 암호화된 DEX 파일은 복호화해야 합니다.\r\r\n이 과정은 1편에서 자세히 소개해 드렸기 때문에 2편에서는 넘어가도록 하겠습니다.\r\r\n조금 더 자세한 분석을 진행하기 위해 plbFhm.apk를 설치해 보았습니다.\r\r\n설치하는 순간 수많은 Permission(권한)을 요구하는 것을 볼 수 있습니다.\r\r\n예를 들어, 문자(SMS), 연락처, 사진, 동영상, GPS 등 사생활과 밀접하게 연관된 권한을 요구하는데요.\r\r\n![19.png](https://image.toast.com/aaaadh/alpha/2024/techblog/19.png)\r\r\n그렇다면 이렇게 많은 권한을 요구하는 이유가 무엇일까요?\r\r\n당연히 악성 행위를 하기 위함입니다.<br>\r\r\n그렇다면 왜 이렇게 민감한 권한이 필요한지를 알아보기 위해 위 권한 모두 사용을 허용해 줍니다.\r\r\n그 후 다시 하단의 **대출 승인 사례** 메뉴 버튼을 클릭해 봅니다.\r\r\n![20.png](https://image.toast.com/aaaadh/alpha/2024/techblog/20.png)\r\r\n![20-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/201.png)\r\r\n이번에는 보안 업데이트가 존재한다면서 또 다른 악성 애플리케이션 설치를 유도합니다.\r\r\nuSBxbR.apk도 plbFhm.apk 파일처럼 암호화된 DEX 파일 2개와 총 3개의 MP3 파일이 존재하였으며 해당 APK 파일도 똑같이 암호화된 DEX 파일을 복호화한 후 분석을 진행하였습니다.\r\r\n자 여기까지 복잡하실 수 있는데 아래의 그림으로 다시 한번 정리해 드리겠습니다.\r\r\n![21.png](https://image.toast.com/aaaadh/alpha/2024/techblog/21%281%29.png)\r\r\n위의 그림을 설명해 드리자면 Base.apk(껍질) 즉, 처음으로 설치하고 실행하는 APK 파일은 핵심이 아닌 껍질을 의미합니다.\r\r\n그 후 2개의 진주(핵심)는 추가로 설치한 2개의 APK 파일이라고 생각하시면 됩니다.\r\r\n즉, 보이스피싱 애플리케이션의 핵심 모듈 및 악성 행위를 하는 코드들은 2개의 진주(핵심)에 존재했으며 2개의 진주(APK)가 보이스 애플리케이션의 핵심이라고 생각하시면 됩니다.\r\r\n\r\r\n## 2. 상담 내용 작성\r\r\n\r\r\n위에 추가로 설치한 2개의 APK 파일 설치가 끝난 후에 아래의 **대출 승인 사례**를 클릭해 보면 피해자들을 속이기 위해 실제 **대출 승인 사례**를 보여주는 것을 확인할 수 있습니다.\r\r\n![22.png](https://image.toast.com/aaaadh/alpha/2024/techblog/22.png)\r\r\n당연히 실제로는 존재하지 않는 사례들입니다.\r\r\n위의 메뉴에서의 핵심은 **상담 신청하기** 메뉴인 것으로 확인되었습니다.\r\r\n![23.png](https://image.toast.com/aaaadh/alpha/2024/techblog/23.png)\r\r\n아래와 같이 상담 신청 내용을 작성하기 위해 **신청하기**를 클릭해 봅니다.\r\r\n![24.png](https://image.toast.com/aaaadh/alpha/2024/techblog/24.png)\r\r\n상담에 필요한 기본적인 정보를 입력하고 **신청하기** 버튼 클릭 후 신청 완료로 최종적으로 상담 신청을 완료합니다.\r\r\n그렇다면 이제 어떻게 될까요?\r\r\n위에서 입력한 상담에 필요한 정보는 user_info라는 파일 이름으로 악성 애플리케이션 내부 저장소에 저장됩니다.\r\r\n![25.png](https://image.toast.com/aaaadh/alpha/2024/techblog/25.png)\r\r\nuser_info 파일을 열어보면 다음과 같이 아까 상담 신청에서 입력한 정보가 저장된 것을 알 수 있습니다.\r\r\n![26.png](https://image.toast.com/aaaadh/alpha/2024/techblog/26.png)\r\r\n위의 정보 마지막에 gongzuo, nianxin, edu, dizhi이라는 알 수 없는 단어가 존재하였습니다.\r\r\n그대로 발음 해보니 중국어와 비슷하여 검색해본 결과 다음과 같았습니다.\r\r\n![27.png](https://image.toast.com/aaaadh/alpha/2024/techblog/27.png)\r\r\n\r\r\n따라서 해당 보이스피싱 애플리케이션은 중국에서 만들어졌다는 것을 알 수 있었습니다.\r\r\n정리해 보면, **상담 신청**이라는 메뉴의 목적은 'user_info'라는 파일을 생성하여 해커가 원하는 대출 금액, 연봉, 직업 등의 정보를 획득하기 위한 목적이었음을 알 수 있습니다.\r\r\n\r\r\n# Permission이란\r\r\n\r\r\n위에서 잠깐 언급하였지만 Permission(권한)이라는 개념에 대해 짧게나마 설명하고 넘어가 보도록 하겠습니다.\r\r\nAndroid와 iOS에서는 애플리케이션을 설치할 때 설치된 단말기의 특정 기능이나 정보에 접근하기 위해 사용자로부터 허락을 받아야 하는 메커니즘이 필수인데요.\r\r\n여러분이 사용하는 단말기에서 애플리케이션을 설치할 때 아래의 그림을 한 번쯤은 보셨을 겁니다.\r\r\n![28.png](https://image.toast.com/aaaadh/alpha/2024/techblog/28.png)\r\r\n이렇게 애플리케이션에서 사용할 권한을 사용자에게 알려주고 허락을 구하는 메커니즘이라고 생각하시면 됩니다.\r\r\n그럼 이런 권한은 어디에 정의되어 있을까요?\r\r\n바로 Androidmanifest.xml[[8]](https://developer.android.com/guide/topics/manifest/manifest-intro?hl=ko)에 정의되어 있습니다.\r\r\n아래 목록은 실제 분석 중인 보이스피싱 애플리케이션의 Androidmanifest.xml에 정의되어 있는 권한 중 일부입니다.\r\r\n![29.png](https://image.toast.com/aaaadh/alpha/2024/techblog/29.png)\r\r\n이제 왜 이런 권한을 요구하는지, 권한을 허용하면 어떤 일이 발생하는지, 보이스피싱 애플리케이션에서 주로 사용되는 오디오 도청, 위치(GPS), 사진과 동영상, 발신 전화 경로 전환, SMS 접근 총 5개의 권한에 대해서 자세히 살펴보도록 하겠습니다.\r\r\n\r\r\n# 보이스피싱 애플리케이션의 5가지 악성 행위\r\r\n\r\r\n보이스피싱 애플리케이션을 분석하면서 정말 다양한 악성 행위가 있다는 것을 느꼈습니다.\r\r\n기사와 영상으로 보는 것보다 직접 구현해 보고 테스트를 해보면서 바뀐 생각이 '보이스피싱을 왜 당할까?'라는 생각은 사라지고 '아, 이 정도면 진짜 당할 수도 있겠구나'라고 생각이 바뀌었습니다.<br>\r\r\n이렇게 제 생각이 바뀐 이유는 총 5개였습니다.\r\r\n보이스피싱 애플리케이션에서 오디오 도청, 위치 추적, 사진 및 동영상 불법 촬영, 발신 전화 경로 전환, SMS 탈취 총 5개의 권한에 접근하였으며 해당 권한에 접근할 수 있다면 1편에서 잠깐 소개해 드렸던 영화 보이스와 스마트폰을 떨어뜨렸을 뿐인 데의 영화 속 피해자들처럼 삶이 붕괴하기까지는 정말 시간 문제인 것 같았습니다.\r\r\n따라서 위의 5개의 권한에 대해서 자세히 알아보도록 하겠습니다.\r\r\n\r\r\n## 1. 오디오 도청\r\r\n\r\r\n오디오를 녹음하기 위해서는 다음과 같은 권한이 필요합니다.\r\r\n![29-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/291.png)\r\r\n위의 권한을 사용하는 곳을 분석한 결과 아래의 코드처럼 /sdcard/에 log라는 디렉토리에 MP4라는 파일 형식으로 녹음된 파일이 저장되는 것을 알 수 있습니다.\r\r\n![30.png](https://image.toast.com/aaaadh/alpha/2024/techblog/30.png)\r\r\n위에서 저장소 위치가 SD_CARD이기 때문에 SD 카드 권한이 필요한 것입니다.\r\r\n![30-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/301.png)\r\r\n그럼, 언제 위의 권한을 사용하는 걸까요?\r\r\n바로 통화할 때 RECORD_AUDIO 권한을 사용해서 통화 내용을 녹음합니다.\r\r\n피해자가 수신 또는 발신을 하면 보이스피싱 범죄자들이 가지고 있는 전화번호 리스트에서 수신지와 발신지 전화번호를 체크합니다.\r\r\n해당 리스트에 수신지 또는 발신지의 번호가 존재하면 그때부터 녹음이 시작된다는 의미입니다.\r\r\n즉, 어디로 전화를 거는지 또는 어디에서 전화를 받는지 알 수 있으며 어떤 목적으로 통화한 것인지 다 알 수 있다는 의미입니다.\r\r\n그럼, 전화번호 리스트는 어떻게 관리되고 있을까요?\r\r\n분석 결과 아래의 코드처럼 전화번호는 C&C 서버에서 실시간으로 업데이트되는 것을 알 수 있었습니다.\r\r\n![31.png](https://image.toast.com/aaaadh/alpha/2024/techblog/31.png)\r\r\n또한, 녹음된 통화 파일은 아래의 코드처럼 `http://137.220.230.51/101` 파일을 전송하는 것을 알 수 있었습니다.\r\r\n![32.png](https://image.toast.com/aaaadh/alpha/2024/techblog/32%281%29.png)\r\r\n여기서 조금만 다르게 생각을 해봅시다.\r\r\n현재 도청과 감청의 기술은 엄청나게 발달했다고 합니다.\r\r\n위의 내용과 함께 생각해 보면 우리 모두가 일상생활 중 항상 들고다니는 큰 도청기가 있습니다.\r\r\n바로 휴대전화입니다.<br>\r\r\n위의 방법은 보이스피싱 범죄를 위한 애플리케이션으로 만들어진 보이스피싱 애플리케이션입니다.\r\r\n그렇기 때문에 통화 녹음에 대한 기능만 존재했습니다.\r\r\n근데 만약 보이스피싱 애플리케이션이 아니라면 어떤 사태가 발생할까요?<br>\r\r\n바로 위에서 말씀드렸던 악성 애플리케이션이 설치된 단말기가 하나의 큰 도청기가 되는 것입니다.\r\r\n이를 조금 더 이해하기 쉽게 데모 영상을 짧게 만들어봤습니다.\r\r\n데모 영상을 보시기 전에 먼저 말씀드리자면 왼쪽이 악성 애플리케이션에 설치된 피해자의 단말기입니다.\r\r\n오른쪽이 해커가 만든 서버입니다.\r\r\n해커는 악성 애플리케이션을 설치한 단말기에서 도청을 하기 위해 **Start** 버튼을 클릭합니다.\r\r\n그럼, 이제 휴대전화의 마이크를 통해 모든 소리가 녹음됩니다.\r\r\n그 후 해커는 **Stop** 버튼을 클릭해서 녹음된 파일을 전송받습니다.\r\r\n그런 다음 해커는 녹음된 파일을 재생해서 어떤 소리가 녹음되어 있는지 확인합니다.\r\r\n![33.png](https://image.toast.com/aaaadh/alpha/2024/techblog/33.png)\r\r\n\r\r\n>  [영상 바로 가기](https://youtu.be/xh9gyT9lrpA)\r\r\n\r\r\n이렇게 해커 및 범죄자는 피해자 주변의 소리를 언제 어디서든 들을 수가 있으며 이를 바탕으로 협박과 2차 피해를 줄 수 있습니다.\r\r\n\r\r\n## 2. 위치 추적\r\r\n\r\r\n다음은 GPS 권한입니다.\r\r\n보이스피싱 범죄자들은 피해자가 자신들이 원하는 위치로 가고 있는지, 혹은 경찰서나 다른 곳으로 가고 있는지 확인하기 위해 GPS 데이터를 활용해서 실시간으로 피해자의 위치를 파악합니다.\r\r\n분석 결과 보이스피싱 애플리케이션은 아래의 총 3가지의 권한으로 피해자의 위치를 추적하는데 사용하였습니다.\r\r\n![33-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/331.png)\r\r\n분석 결과, 위의 권한을 사용한 코드는 다음과 같습니다.\r\r\n![34.png](https://image.toast.com/aaaadh/alpha/2024/techblog/34.png)\r\r\n또한 추가로 분석한 결과, 위의 코드를 통해 피해자의 위치를 추척하고 추척한 위치 데이터를 DB에 저장하는 행위도 발견하였습니다.\r\r\n![35.png](https://image.toast.com/aaaadh/alpha/2024/techblog/35.png)\r\r\n아래의 데모 영상을 보시기 전에 잠깐 부가적인 설명을 하겠습니다.\r\r\n보이스피싱 범죄자들은 자신들의 웹 서버에서 **Start**를 클릭하여 피해자의 위치 정보를 수집합니다.\r\r\n**Start**를 클릭하면 피해자의 단말기(스마트폰)에서 현재 위치 정보를 DB 파일 또는 파일로 저장합니다.\r\r\n해당 파일과 데이터로 현재 피해자의 위치를 알아냅니다.\r\r\n따라서 데모 영상을 보여드리기 위해 운동 삼아 석촌 호수공원을 한 바퀴 걸었습니다. (실제 위치 정보를 수집하기 위해)\r\r\n보이스피싱 범죄자는 피해자의 위치가 궁금하여 **Start** 버튼을 클릭합니다.\r\r\n피해자의 위치 정보는 실시간으로 보이스피싱 범죄자들의 서버로 전송되어 사용자의 위치를 지도에 표시해 줍니다.\r\r\n아래의 데모 영상을 보시면 쉽게 이해가 될 겁니다.\r\r\n\r\r\n![36.png](https://image.toast.com/aaaadh/alpha/2024/techblog/36.png)\r\r\n>  [영상 바로 가기](https://youtu.be/iUsvY4wiCJU)\r\r\n\r\r\n## 3. 불법 촬영\r\r\n\r\r\n보이스피싱 애플리케이션을 설치할 당시 사진과 동영상에 대한 권한을 요구하였습니다.\r\r\n![36-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/361.png)\r\r\n\r\r\n위의 권한이 사진 및 동영상을 촬영하기 위한 카메라에 대한 권한입니다.\r\r\n분석 결과, 제가 분석한 보이스피싱 애플리케이션에서는 권한만 추가되어 있을 뿐 카메라 권한을 가지고 범죄에 활용한 코드는 존재하지 않았습니다.\r\r\n하지만 생각해 보면 보이스 피싱 범죄자들은 피해자의 현재 장소 또는 사진 및 영상을 협박의 수단으로 활용할 수 있기 때문에 짧게 데모 영상을 만들어 봤습니다.\r\r\n보이스피싱 범죄자들은 자신들의 웹 서버에서 **Start** 버튼을 클릭합니다.\r\r\n**Start** 버튼을 클릭하면 카메라의 전면, 후면에 접근하여 각각 사진을 촬영한 다음 보이스피싱 범죄자들의 서버로 전송하는 데모 영상입니다.<br>\r\r\n먼저 피해자는 평소처럼 유튜브를 시청하고 있었습니다.\r\r\n이때 보이스피싱 범죄자들은 앞에서 설명해 드린 카메라 권한이 있기 때문에 **Start** 버튼을 클릭해 원격에서 피해자의 카메라 전면과 후면에 접근하여 각각 사진을 촬영합니다.\r\r\n그 후 범죄자의 서버로 촬영한 사진을 업로드하여 확인할 수 있습니다.\r\r\n![37.png](https://image.toast.com/aaaadh/alpha/2024/techblog/37.png)\r\r\n>  [영상 바로 가기](https://youtu.be/5IS_zQesG2c)  \r\r\n\r\r\n위 데모 영상처럼 사진 촬영밖에 없지만 카메라 권한이 있기 때문에 동영상 촬영도 손쉽게 할 수 있습니다.\r\r\n\r\r\n## 4. SMS 탈취\r\r\n\r\r\n다음은 문자(SMS)에 접근할 수 있는 권한입니다.\r\r\n![38.png](https://image.toast.com/aaaadh/alpha/2024/techblog/38.png)\r\r\n사용자가 위의 권한을 허용한다면 애플리케이션에서 문자에 접근할 수 있습니다.\r\r\n위의 권한으로 피해자 단말기에 존재하는 SMS에 접근하여 보낸 사람의 이름, 전화번호, 문자 내용, 시간 등 문자에 대한 대부분의 정보에 접근하여 데이터를 탈취하는 것을 확인할 수 있었습니다.\r\r\n관련된 코드는 아래와 같습니다.\r\r\n![39.png](https://image.toast.com/aaaadh/alpha/2024/techblog/39.png)\r\r\nSMS 데이터에 접근해서 저장된 이름(display_name) 또한 저장되는 것을 확인하였습니다.\r\r\n![40.png](https://image.toast.com/aaaadh/alpha/2024/techblog/40.png)\r\r\n이렇게 저장된 이름과 전화번호가 탈취된다면 피해자의 단말기에 저장된 수많은 사람도 보안 위협의 대상이 될 가능성이 존재합니다.\r\r\n아래의 데모 영상은 수신자에게 오는 SMS를 실시간으로 보이스 피싱 범죄자들의 서버로 전송하는 데모 영상입니다.\r\r\nSender는 수신자(피해자)에게 문자를 보냅니다.\r\r\n이때 그림과 같이 인증 번호일 수도 있고, 중요한 내용을 담은 문자일 수 있습니다.\r\r\n![41.png](https://image.toast.com/aaaadh/alpha/2024/techblog/41.png)\r\r\n아래의 코드는 SMS 정보를 탈취하는 코드 중 일부입니다.\r\r\n이렇게 새로운 SMS를 피해자가 수신하게 되면 보이스 피싱 범죄자들의 서버로 전송하도록 합니다.\r\r\nSMS 내용을 탈취하는 기능은 백그라운드에서 실행되며 SMS를 수신하고 발신할 때 보이스 피싱 범죄자들에게 똑같이 전송되게 됩니다.\r\r\n![42.png](https://image.toast.com/aaaadh/alpha/2024/techblog/42.png)\r\r\n![43.png](https://image.toast.com/aaaadh/alpha/2024/techblog/43.png)\r\r\n\r\r\n>  [영상 바로 가기](https://youtu.be/Cex079bPAPQ)\r\r\n\r\r\n\r\r\n## 5. 수신 및 발신 경로 변조와 차단\r\r\n\r\r\n다음은 보이스피싱 애플리케이션의 핵심인 수신 및 발신 전화 변조에 관한 내용에 관해서 설명해 드리겠습니다.\r\r\n먼저 수신 및 발신 전화의 경로를 변조하기 위해서는 아래와 같이 전화와 관련된 권한이 필요합니다.\r\r\n![44.png](https://image.toast.com/aaaadh/alpha/2024/techblog/44.png)\r\r\n이를 설명해 드리기에 앞서 아래의 Youtube 영상을 잠깐 보고 오시겠습니다.\r\r\n\r\r\n * [https://www.youtube.com/watch?v=i73GuJWpROQ&t=25s](https://www.youtube.com/watch?v=i73GuJWpROQ&t=25s)\r\r\n * [https://www.youtube.com/watch?v=YTH-drhg0Hw&t=344s](https://www.youtube.com/watch?v=YTH-drhg0Hw&t=344s)\r\r\n \r\r\n영상에서 보셨던 것처럼 언론과 기사에서는 '전화 가로채기'라는 기법으로 많이 소개되어 있습니다.\r\r\n보이스피싱 애플리케이션에 감염된 피해자가 확인을 위해 금융기관에 전화(발신)를 걸면 보이스피싱 범죄자들이 수집한 전화번호 리스트에 있는지 없는지 판단한 후 없으면 정상적인 수신자에게 발신하게 됩니다.\r\r\n하지만 범죄자들이 수집한 전화번호 리스트에 존재한다면 위 영상에서 보신 것처럼 자신들에게 발신이 오도록 전화번호를 변조합니다.\r\r\n아래의 그림은 위의 설명을 이해하기 쉽게 도식화한 것입니다(그림에 나와있는 기관은 무관합니다).\r\r\n![45.png](https://image.toast.com/aaaadh/alpha/2024/techblog/45%283%29.png)\r\r\n하지만 제가 분석한 보이스피싱 애플리케이션에서는 피해자가 발신할 때 자신들이 수집한 전화번호 리스트에 존재한다면 발신 자체를 하지 못하도록 차단하는 기법을 사용하였습니다.\r\r\n아래의 그림은 현재 분석하는 보이스 애플리케이션에서 사용하는 기법을 이해하기 쉽도록 도식화한 것입니다.\r\r\n![46.png](https://image.toast.com/aaaadh/alpha/2024/techblog/46%283%29.png)\r\r\n수신과 발신 경로 변조 및 차단은 보이스 피싱 애플리케이션의 핵심이기 때문에 위 4가지 기법보다는 핵심을 조금 자세히 설명하려고 합니다.\r\r\n![47.png](https://image.toast.com/aaaadh/alpha/2024/techblog/47.png)\r\r\n위의 코드를 분석한 결과, `Intent`[[9]](https://developer.android.com/reference/android/content/Intent)를 통해 피해자의 발신 여부를 판단합니다.\r\r\n`Intent`는 애플리케이션 컴포넌트 간에 실행을 요청하는 메시지나 데이터를 전달하는 역할을 합니다.\r\r\n예를 들어, 활동(Activity), 서비스(Service), 브로드캐스트 리시버(BroadcastReceiver) 등을 시작할 때 `Intent`를 사용합니다.\r\r\nintent.getAction() 메서드는 `Intent`에 설정된 action 문자열을 반환합니다.\r\r\n이 문자열을 사용하여 `Intent`가 수행하려는 구체적인 작업이 \"android.intent.action.NEW_OUTGOING_CALL\"이라면 v3는 true가 됩니다.\r\r\n이는 새로운 발신 전화가 시작됐음을 의미합니다.\r\r\n새로운 발신 전화가 시작되었으면 intent.getStringExtra(\"android.intent.extra.PHONE_NUMBER\")를 실행하여 발신하려는 전화번호를 `Intent`로부터 추출합니다.\r\r\n아래의 코드는 발신 번호와 수집한 전화번호를 비교하기 위해 수집한 전화번호와 비교하는 코드입니다.\r\r\n![48.png](https://image.toast.com/aaaadh/alpha/2024/techblog/48.png)\r\r\n\r\r\n위의 코드는 allNoMap이라는 HashMap에 Kit.Z(context)이 반환하는 값을 저장합니다.\r\r\n즉, `Kit.Z()` 메서드가 반환하는 값은 보이스피싱 범죄자들이 수집한 전화번호를 의미합니다.\r\r\nAllNoBean allNoBean = (AllNoBean)allNoMap.get(number); 코드의 의미는 allNoMap이라는 수집된 번호에서 발신 전화번호가 있는지 확인하는 기능을 합니다.\r\r\n만약 존재한다면 `getCome()` 메서드는 0을 반환하고 this.setResultData(null); 코드로 발신을 중단합니다.\r\r\n발신을 중단한다는 의미는 발신 자체를 못 하게 막아버린다고 생각하시면 됩니다.\r\r\n아쉽게도 C&C 서버에서 수집한 전화번호에 대한 데이터를 받아와야 하지만 현재 C&C 서버와 통신이 되지 않아 수집한 전화번호에 대한 데이터는 애플리케이션에 존재하지 않았습니다.<br>\r\r\n이제 데모 영상을 보시겠습니다.\r\r\n> [영상 바로 가기](https://youtu.be/32bLJJcV4pU)\r\r\n\r\r\n먼저 피해자는 보이스피싱 범죄자들에게 걸려 온 전화를 받고 확인차 금융위원회, 금융감독원, 금융권 등에 확인을 하기 위해서 전화합니다. (영상에서는 NHN Cloud 대표 전화번호)<br>\r\r\n이때 보이스피싱 애플리케이션은 수집된 전화번호 리스트에서 발신한 번호가 존재한다면 정상적인 경로가 아닌 해커 또는 보이스피싱 범죄자들에게 발신이 되도록 경로를 변조합니다.\r\r\n피해자는 확인을 위해 금융권 등에 전화를 하였지만 실제로는 범죄자들에게 다시 전화를 걸게 되는 것입니다.\r\r\n또한 통화 기록도 수정하여 실제 정상적으로 통화를 했다고 착각하게 만들어 안심시킵니다.\r\r\n![49.png](https://image.toast.com/aaaadh/alpha/2024/techblog/49.png)\r\r\n\r\r\n\r\r\n여기까지 보이스피싱 애플리케이션의 대표적인 악성 행위 5가지에 대해서 알아보았습니다.\r\r\n이러한 행위들은 사용자의 개인정보를 노리거나 금전적인 손실을 초래할 수 있으므로, 각별한 주의가 필요합니다. \r\r\n\r\r\n# 마치며\r\r\n\r\r\n개인적으로 이번 보이스피싱 애플리케이션에 대한 분석을 진행하면서 많은 것을 배우고 느낀 시간이었습니다.\r\r\n정보를 찾아보고 데이터를 분석하며, 최대한 많은 분들이 이해하기 쉬운 형태로 정리하는 과정 또한 좋은 경험이 되었는데요. 보이스피싱, 그 영향력이 얼마나 큰 지에 대한 깊은 이해를 얻을 수 있었던 좋은 기회였습니다.<br>\r\r\n사실 힘든 것보다 매우 재밌었습니다.\r\r\n특히 데모 영상을 만들기 위해 직접 애플리케이션과 서버, 웹 사이트를 개발해 보면서 개발자분들의 전문성과 노력에 대해 다시 한번 생각하는 시간이 되었습니다.\r\r\n이번 보이스피싱 애플리케이션 분석 내용을 통해 모바일 보안뿐만 아니라 보안에 대한 경각심이 조금이라도 생기셨다면 큰 보람을 느낄 것 같습니다.\r\r\n끝으로, 기술의 발전이 무조건 좋은 것이 아니라, 우리에게 가져다주는 편리함과 동시에 우리가 직면할 수 있는 잠재적인 보안 위험성에 대해서도 한 번쯤은 생각해 보는 계기가 되었으면 좋겠습니다.\r\r\n보이스피싱 애플리케이션 분석 1편과 2편의 긴 내용을 읽어 주셔서 감사합니다.\r\r\n\r\r\n# 참고 문헌\r\r\n\r\r\n> [1] [Packet](https://developer.mozilla.org/ko/docs/Glossary/Packet)\r\r\n> [2] [JSON](https://namu.wiki/w/JSON)\r\r\n> [3] [AES](https://namu.wiki/w/AES)\r\r\n> [4] [초기화 벡터](https://ko.wikipedia.org/wiki/%EC%B4%88%EA%B8%B0%ED%99%94_%EB%B2%A1%ED%84%B0)\r\r\n> [5] [베이스64](https://ko.wikipedia.org/wiki/%EB%B2%A0%EC%9D%B4%EC%8A%A464)\r\r\n> [6] [https://www.youtube.com/watch?v=eapWmmBFK6s&t=533](https://www.youtube.com/watch?v=eapWmmBFK6s&t=533)\r\r\n> [7] [파일 시그니처](https://namu.wiki/w/%ED%8C%8C%EC%9D%BC%20%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98)\r\r\n> [8] [https://developer.android.com/guide/topics/manifest/manifest-intro?hl=ko](https://developer.android.com/guide/topics/manifest/manifest-intro?hl=ko)\r\r\n> [9] [https://developer.android.com/reference/android/content/Intent](https://developer.android.com/reference/android/content/Intent)",
        "contentSnippet": "![NHN Cloud_meetup banner_voicefishing_202406-02-01.png](https://image.toast.com/aaaadh/alpha/2024/techblog/NHN%20Cloudmeetup%20bannervoicefishing2024060201.png)\r\r\n\r\r\n# 들어가며\r\r\n\r\r\n안녕하세요. NHN Cloud 서비스보안팀 지우중입니다.\r\r\n많은 분들이 보이스피싱 애플리케이션 분석 1부를 재밌고 흥미롭게 읽어주셔서 빠르게 2부를 준비했습니다.\r\r\n보이스피싱 애플리케이션 분석 2부에서는 보이스 피싱 애플리케이션에서 어떤 데이터를 C&C서버(*Command & Control Server: 해커가 공격을 수행하기 위해 제어하는 서버*)로 보내는지, 피해자 단말기에서는 어떤 일이 일어나는지 알아보겠습니다.\r\r\n또한, 보이스피싱 애플리케이션의 핵심인 전화 가로채기, 오디오 도청, 위치 추적(GPS), 불법 촬영, SMS 탈취에 대한 분석 내용을 공유하려고 합니다.\r\r\n그럼, 바로 보이스피싱 애플리케이션 분석 2부 시작하겠습니다!\r\r\n\r\r\n***\r\r\n\r\r\n# 피해자 단말기 등록\r\r\n\r\r\n먼저, 결론부터 말씀드리자면 보이스피싱 애플리케이션에서는 피해자 단말기에서 지속적인 모니터링 및 제어 등을 하기 위해 피해자 단말기를 등록하는 과정이 필요합니다.\r\r\n보이스피싱 애플리케이션을 설치한 후 실행하자마자 발생하는 패킷[[1]](https://developer.mozilla.org/ko/docs/Glossary/Packet)을 분석하면, 서버에 피해자의 단말기 정보를 전송하면서 등록 절차를 완료하는 것을 확인할 수 있습니다.\r\r\n이 과정에서 피해자의 전화번호, 통신사, 단말기 정보 등이 포함된 데이터가 전송되는 것을 확인할 수 있었습니다.\r\r\n피해자 단말기를 등록하는 패킷은 아래와 같이 POST 형식으로 [http://137.220.230.51/17](http://137.220.230.51/17) 으로 postVal이라는 값을 전송하는 것을 볼 수 있습니다.\r\r\n![1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/1%281%29.png)\r\r\n\r\r\n패킷 내용을 보시면 postVal의 값은 평문이 아닌 알 수 없는 값을 C&C 서버로 전송하는 걸 알 수 있습니다.\r\r\n하지만 분석하는 입장에서는 정확히 postVal의 값이 어떤 내용인지 알아야 합니다.\r\r\n그 이유는 보이스피싱 범죄자들 입장에서는 postVal 값이 어떤 목적으로 서버로 보내는지 알고 있겠지만 분석하는 입장에서는 평문의 postVal 값을 알아야만 애플리케이션을 실행하자마자 postVal 값을 서버로 보내는 이유를 추측할 수 있기 때문입니다.\n\r\r\n따라서 postVal 값이 어떻게 생성되는지 그 위치를 찾을 필요가 있습니다.\r\r\n분석한 결과, 아래의 코드가 해당 패킷을 생성하는 코드로 확인되었습니다.\r\r\n![2.png](https://image.toast.com/aaaadh/alpha/2024/techblog/2.png)\r\r\n위의 코드에서 ①번을 자세히 살펴보겠습니다.\r\r\n![3.png](https://image.toast.com/aaaadh/alpha/2024/techblog/3.png)\r\r\nreqBody란 request 패킷의 body 부분을 의미합니다.\r\r\n즉, 서버로 요청하는 실제 데이터가 존재하는 영역이라고 생각하시면 됩니다.\r\r\n코드를 분석하면, s5라는 값은 ②번에서 만들어지며 s4는 ③번에서 만들어지는 것을 알 수 있습니다.\r\r\n③번을 통해서 서버로 보낼 데이터의 형식은 JSON[[2]](https://namu.wiki/w/JSON)으로 보내는 것을 확인할 수 있으며 변수 s4의 값은 아래의 `a.b()` 메서드에서 반환된 값을 의미합니다.\r\r\n![4.png](https://image.toast.com/aaaadh/alpha/2024/techblog/4.png)\r\r\n따라서 변수 s4의 값을 확인하기 위해서는 `a.b()` 메서드를 살펴볼 필요가 있습니다.\r\r\n![5.png](https://image.toast.com/aaaadh/alpha/2024/techblog/5.png)\r\r\n`a.b()` 메서드를 확인한 결과, AES/CBC/PKCS5Padding[[3]](https://namu.wiki/w/AES) 알고리즘을 사용하며 key는 \"rb!nBwXv4C%Gr^84\", IV[[4]](https://ko.wikipedia.org/wiki/%EC%B4%88%EA%B8%B0%ED%99%94_%EB%B2%A1%ED%84%B0)값은 \"1234567812345678\"을 사용하는 것을 확인할 수 있습니다.\r\r\n즉, 어떤 값을 암호화하여 최종적으로 Base64 인코딩[[5]](https://ko.wikipedia.org/wiki/%EB%B2%A0%EC%9D%B4%EC%8A%A464)을 수행한 후 반환하고 있는 것을 알 수 있습니다.\r\r\n따라서 암호화를 수행하기 전 평문값을 알 수 있다면 보이스피싱 범죄자들에게 어떤 데이터를 보내는지 알 수 있습니다.\r\r\n여기에는 2가지 방법이 있습니다.\r\r\n첫 번째로는 `a.b()` 메서드를 후킹(*프로그램에서 구성 요소 간에 발생하는 함수 호출, 메시지, 이벤트 등을 중간에서 바꾸거나 가로채는 명령, 방법, 기술이나 행위*)하여 cleartext라는 인자값을 출력하는 방법과 두 번째로는 암호화된 값을 복호화하는 방법이 있습니다. 위의 그림에서 보셨다시피 암호화 과정에 사용한 암호화 알고리즘은 AES 암호화로 대표적인 대칭키 암호화 알고리즘입니다.\r\r\n대칭키 암호화의 가장 큰 특징은 암호화와 복호화를 할 때 사용하는 Key와 IV 값이 같다는 점입니다.\r\r\n따라서 Key와 IV 값이 노출되었기 때문에 두 번째 방법을 이용하면 다음과 같이 평문의 데이터를 확인할 수 있습니다.\r\r\n![6.png](https://image.toast.com/aaaadh/alpha/2024/techblog/6.png)\r\r\n위의 값을 추측해 보면 app_id는 보이스피싱 애플리케이션을 만든 조직에서 부여한 값인 것으로 추측됩니다.\r\r\npid 값은 해당 단말기의 Google 계정과 관련된 값으로 보이며 나머지 값은 피해자 단말기의 정보라고 보시면 됩니다.\r\r\n여기서 왜 app_id가 17이지? 라는 생각이 들 수도 있는데요.\r\r\n보이스피싱 범죄자들은 1개의 보이스피싱 애플리케이션을 만드는 것이 아니라 조직적으로 대량의 악성 애플리케이션을 만듭니다.\r\r\n쉽게 예를 들자면, 보이스피싱 애플리케이션 및 악성 애플리케이션 100개를 만들어 배포한 후 app_id가 없으면 관리적인 측면에서 어떤 악성 애플리케이션에서 요청한 패킷인지 관리하기가 힘들어집니다.\r\r\n![7.png](https://image.toast.com/aaaadh/alpha/2024/techblog/7.png)\r\r\n따라서 위의 그림처럼 각 애플리케이션에 app_id를 부여한 후 app_id 번호에 맞게 서버를 구성한다든지, 피해자들을 속이기 위한 보이스피싱 시나리오 등 관리 및 기타 목적으로 app_id를 부여한 것으로 추측됩니다.\r\r\n범죄자들은 자신의 서버에서 피해자가 자신들이 만든 보이스피싱 애플리케이션이 설치된 후 단말기 등록 패킷을 기다린 후 app_id와 휴대폰 번호(p_no) 등을 보고 자신들이 정한 시나리오 및 목적에 따라 피해자들을 속이기 시작합니다.\r\r\n즉, 빠르게 피해자들을 속이기 위해 필요한 데이터라고 생각해 주시면 될 것 같습니다.\r\r\n여기서 말하는 시나리오란 아래의 영상을 참고하시면 쉽게 이해가 될 것 같습니다.\r\r\n>  [영상 바로 가기](https://www.youtube.com/watch?v=eapWmmBFK6s&t=533)\r\r\n\r\r\n하지만 분석 과정에서 단말기 등록 패킷이 발생한 후 C&C 서버에서는 아무런 응답이 오지 않았는데요.\r\r\n그 이유는 보이스피싱 조직들은 C&C 서버를 일정 기간 운영한 후 이전 및 폐쇄하는 경향이 있는데 현재 분석하는 보이스피싱 애플리케이션의 C&C 서버도 마찬가지로 이전 및 폐쇄한 것으로 보입니다.\r\r\n사실 이 부분이 분석하는 과정에서 가장 아쉬운 부분이었습니다.\n\r\r\n실제로 동작하는 C&C 서버였다면 실시간으로 데이터를 주고받으면서 정확하게 분석할 수 있었지만 이렇게 서버와의 통신이 없다면 사실 완벽한 분석은 어렵다고 볼 수 있습니다.\r\r\n하지만 최대한 해당 보이스피싱 애플리케이션의 특징을 분석해 보고자 노력하였습니다.\r\r\n\r\r\n# 화면 분석\r\r\n\r\r\n## 1. APK 추가 설치\r\r\n\r\r\n분석 당시 저는 'C&C 서버에서 응답이 없어 이제 어떻게 분석을 진행해야 하지?' 라는 생각과 함께 아래의 애플리케이션 첫 화면을 보면서 고민에 빠져있었습니다.\r\r\n\r\r\n![8.png](https://image.toast.com/aaaadh/alpha/2024/techblog/8.png)\r\r\n고민하던 도중 '잠시만.. C&C 서버에서 응답이 없었는데 지금 내가 보고 있는 화면은 뭐지? 어디서 보내준 거지?' 라는 생각이 문득 들었습니다. 그래서 바로 다시 네트워크 패킷을 분석하였습니다.\r\r\n하지만 어떤 패킷에서도 해당 화면에 대한 데이터는 존재하지 않았습니다. 통신 구간이 아니면 남아 있는 것은 APK 파일밖에 없습니다.\r\r\n그래서 다시 APK 파일을 추가로 분석하였습니다.\r\r\nAPK 파일을 분석하던 도중 assets 디렉토리에 다음과 같은 파일이 존재했습니다.\r\r\n![9.png](https://image.toast.com/aaaadh/alpha/2024/techblog/9.png)\r\r\nassets 디렉토리에 존재하는 MP3 파일을 재생해 보면 금융 위원회, 검찰청 민원 상담실, 금감원 콜센터에 전화하면 들리는 안내 음성 파일들이었습니다.\r\r\n위의 MP3 파일은 전화 가로채기 수법에 활용되며 피해자를 속이기 위한 파일임을 추측할 수 있었습니다.\r\r\n또한 MP3 파일 이외 plbFhm.apk, uSBxbR.apk 파일이 존재했습니다.\r\r\n이는 해당 보이스피싱 애플리케이션에서 사용하고 있는 또 다른 APK 파일이라는 것을 확인할 수 있었는데요.\r\r\n하지만 마지막으로 남은 tspTFl.sz 파일은 어떤 파일인지 알 수 없었습니다.\r\r\n주로 `.sz` 확장자는 압축된 파일 형식 중 하나입니다.\r\r\n압축된 파일이 맞는지 확인하기 위해 Hex Editor로 해당 파일을 열어 보았습니다.\r\r\n![10.png](https://image.toast.com/aaaadh/alpha/2024/techblog/10%281%29.png)\r\r\n다행스럽게도 PK 파일 포맷[[7]](https://namu.wiki/w/%ED%8C%8C%EC%9D%BC%20%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98)으로 되어있는 것을 확인하였으며 파일 자체로는 암호화가 되어있지 않았습니다.\r\r\n이 tspTFl.sz 파일을 열어보기 위해 확장자를 `. zip`으로 변경 후 파일을 열어보았습니다.\r\r\n![11.png](https://image.toast.com/aaaadh/alpha/2024/techblog/11%281%29.png)\r\r\n열어본 결과 html 파일과 js 폴더, 알 수 없는 폴더가 존재하였습니다.\r\r\n어떤 파일인지 분석을 진행하기 위해 압축 풀기를 수행하였지만, 다음과 같이 패스워드가 설정되어 있었습니다.\r\r\n![12.png](https://image.toast.com/aaaadh/alpha/2024/techblog/12.png)\r\r\n\r\r\n패스워드가 설정된 것으로 보아, 중요한 파일인 것 같았는데요.\r\r\n이 패스워드를 분석하기 위해 APK 파일 분석을 진행하였습니다.\r\r\n분석한 결과, 아래의 그림처럼 패스워드는 `\"s********a\"`로 하드코딩 되어 있었으며 발견된 패스워드로 압축 파일을 해제할 수 있었습니다.\r\r\n![13.png](https://image.toast.com/aaaadh/alpha/2024/techblog/13.png)\r\r\n압축이 풀린 html 파일을 열어보면 애플리케이션의 첫 화면인 것을 알 수 있었습니다.\r\r\n![14.png](https://image.toast.com/aaaadh/alpha/2024/techblog/14.png)\r\r\n위의 결과로 C&C 서버에서 화면 데이터를 받아오지 않아도 첫 화면을 볼 수 있었던 이유를 알아냈습니다.\r\r\n또한 ivrvyeuimagesivrvyeu 디렉토리에는 상담원으로 예상되는 사진 파일(도용된 사진으로 추측됩니다)과 애플리케이션의 화면을 구성하는 그림 파일들이 저장된 것을 확인할 수 있었습니다.\r\r\n![15.png](https://image.toast.com/aaaadh/real/2024/techblog/15.png)\r\r\n그래도 아쉬운 마음에 '다른 메뉴를 클릭하면 다른 C&C 서버가 동작하지 않을까?' 생각을 해서 아래의 **대출 승인 사례** 메뉴를 클릭해 보았습니다.\r\r\n\r\r\n![16_rv.png](https://image.toast.com/aaaadh/real/2024/techblog/16rv.png)\r\r\n\r\r\n위 그림에서 보시는 것처럼 **대출 승인 사례**를 클릭하자 다음과 같은 알림이 발생했습니다.\r\r\n```\r\r\n    - 금융상품을 만드는건 어렵지만 불필요한 과정을 찾아 알기위하여 간편한 모바일로 알기쉽게 설계했다.(그림 1)\r\r\n    - 보안상 새로운 업데이트가 있습니다. 새버전을 설치해시기 바랍니다.(그림 2)\r\r\n```\r\r\n\r\r\n알림 문구도 어딘가 어색해 보이는 게 한국에서 만든 애플리케이션이 아닌 것을 추측할 수 있습니다.\r\r\n이러한 문구는 또 다른 악성 애플리케이션의 설치를 유도하는 전형적인 악성 애플리케이션의 특징 중 하나입니다.\r\r\n앞에서 살펴보았던 assets 디렉토리에 존재하는 plbFhm.apk 파일을 설치하도록 유도하는 문구였습니다.\r\r\n![17.png](https://image.toast.com/aaaadh/alpha/2024/techblog/17.png)\r\r\n이렇게 애플리케이션을 설계한 이유는 간단합니다.\r\r\n제일 먼저 설치하는 애플리케이션에서 모든 악성 행위를 수행한다면 쉽게 분석이 가능하기 때문에 탐지와 분석을 힘들게 하기 위함입니다.\r\r\nplbFhm.apk 파일을 대략적으로 정리하자면 암호화된 DEX 파일 2개와 총 5개의 MP3 파일이 존재합니다.\r\r\n![18.png](https://image.toast.com/aaaadh/alpha/2024/techblog/18.png)\r\r\n\r\r\n암호화된 DEX 파일이 존재하는 이상 plbFhm.apk도 분석하기 위해서는 암호화된 DEX 파일은 복호화해야 합니다.\r\r\n이 과정은 1편에서 자세히 소개해 드렸기 때문에 2편에서는 넘어가도록 하겠습니다.\r\r\n조금 더 자세한 분석을 진행하기 위해 plbFhm.apk를 설치해 보았습니다.\r\r\n설치하는 순간 수많은 Permission(권한)을 요구하는 것을 볼 수 있습니다.\r\r\n예를 들어, 문자(SMS), 연락처, 사진, 동영상, GPS 등 사생활과 밀접하게 연관된 권한을 요구하는데요.\r\r\n![19.png](https://image.toast.com/aaaadh/alpha/2024/techblog/19.png)\r\r\n그렇다면 이렇게 많은 권한을 요구하는 이유가 무엇일까요?\r\r\n당연히 악성 행위를 하기 위함입니다.\n\r\r\n그렇다면 왜 이렇게 민감한 권한이 필요한지를 알아보기 위해 위 권한 모두 사용을 허용해 줍니다.\r\r\n그 후 다시 하단의 **대출 승인 사례** 메뉴 버튼을 클릭해 봅니다.\r\r\n![20.png](https://image.toast.com/aaaadh/alpha/2024/techblog/20.png)\r\r\n![20-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/201.png)\r\r\n이번에는 보안 업데이트가 존재한다면서 또 다른 악성 애플리케이션 설치를 유도합니다.\r\r\nuSBxbR.apk도 plbFhm.apk 파일처럼 암호화된 DEX 파일 2개와 총 3개의 MP3 파일이 존재하였으며 해당 APK 파일도 똑같이 암호화된 DEX 파일을 복호화한 후 분석을 진행하였습니다.\r\r\n자 여기까지 복잡하실 수 있는데 아래의 그림으로 다시 한번 정리해 드리겠습니다.\r\r\n![21.png](https://image.toast.com/aaaadh/alpha/2024/techblog/21%281%29.png)\r\r\n위의 그림을 설명해 드리자면 Base.apk(껍질) 즉, 처음으로 설치하고 실행하는 APK 파일은 핵심이 아닌 껍질을 의미합니다.\r\r\n그 후 2개의 진주(핵심)는 추가로 설치한 2개의 APK 파일이라고 생각하시면 됩니다.\r\r\n즉, 보이스피싱 애플리케이션의 핵심 모듈 및 악성 행위를 하는 코드들은 2개의 진주(핵심)에 존재했으며 2개의 진주(APK)가 보이스 애플리케이션의 핵심이라고 생각하시면 됩니다.\r\r\n\r\r\n## 2. 상담 내용 작성\r\r\n\r\r\n위에 추가로 설치한 2개의 APK 파일 설치가 끝난 후에 아래의 **대출 승인 사례**를 클릭해 보면 피해자들을 속이기 위해 실제 **대출 승인 사례**를 보여주는 것을 확인할 수 있습니다.\r\r\n![22.png](https://image.toast.com/aaaadh/alpha/2024/techblog/22.png)\r\r\n당연히 실제로는 존재하지 않는 사례들입니다.\r\r\n위의 메뉴에서의 핵심은 **상담 신청하기** 메뉴인 것으로 확인되었습니다.\r\r\n![23.png](https://image.toast.com/aaaadh/alpha/2024/techblog/23.png)\r\r\n아래와 같이 상담 신청 내용을 작성하기 위해 **신청하기**를 클릭해 봅니다.\r\r\n![24.png](https://image.toast.com/aaaadh/alpha/2024/techblog/24.png)\r\r\n상담에 필요한 기본적인 정보를 입력하고 **신청하기** 버튼 클릭 후 신청 완료로 최종적으로 상담 신청을 완료합니다.\r\r\n그렇다면 이제 어떻게 될까요?\r\r\n위에서 입력한 상담에 필요한 정보는 user_info라는 파일 이름으로 악성 애플리케이션 내부 저장소에 저장됩니다.\r\r\n![25.png](https://image.toast.com/aaaadh/alpha/2024/techblog/25.png)\r\r\nuser_info 파일을 열어보면 다음과 같이 아까 상담 신청에서 입력한 정보가 저장된 것을 알 수 있습니다.\r\r\n![26.png](https://image.toast.com/aaaadh/alpha/2024/techblog/26.png)\r\r\n위의 정보 마지막에 gongzuo, nianxin, edu, dizhi이라는 알 수 없는 단어가 존재하였습니다.\r\r\n그대로 발음 해보니 중국어와 비슷하여 검색해본 결과 다음과 같았습니다.\r\r\n![27.png](https://image.toast.com/aaaadh/alpha/2024/techblog/27.png)\r\r\n\r\r\n따라서 해당 보이스피싱 애플리케이션은 중국에서 만들어졌다는 것을 알 수 있었습니다.\r\r\n정리해 보면, **상담 신청**이라는 메뉴의 목적은 'user_info'라는 파일을 생성하여 해커가 원하는 대출 금액, 연봉, 직업 등의 정보를 획득하기 위한 목적이었음을 알 수 있습니다.\r\r\n\r\r\n# Permission이란\r\r\n\r\r\n위에서 잠깐 언급하였지만 Permission(권한)이라는 개념에 대해 짧게나마 설명하고 넘어가 보도록 하겠습니다.\r\r\nAndroid와 iOS에서는 애플리케이션을 설치할 때 설치된 단말기의 특정 기능이나 정보에 접근하기 위해 사용자로부터 허락을 받아야 하는 메커니즘이 필수인데요.\r\r\n여러분이 사용하는 단말기에서 애플리케이션을 설치할 때 아래의 그림을 한 번쯤은 보셨을 겁니다.\r\r\n![28.png](https://image.toast.com/aaaadh/alpha/2024/techblog/28.png)\r\r\n이렇게 애플리케이션에서 사용할 권한을 사용자에게 알려주고 허락을 구하는 메커니즘이라고 생각하시면 됩니다.\r\r\n그럼 이런 권한은 어디에 정의되어 있을까요?\r\r\n바로 Androidmanifest.xml[[8]](https://developer.android.com/guide/topics/manifest/manifest-intro?hl=ko)에 정의되어 있습니다.\r\r\n아래 목록은 실제 분석 중인 보이스피싱 애플리케이션의 Androidmanifest.xml에 정의되어 있는 권한 중 일부입니다.\r\r\n![29.png](https://image.toast.com/aaaadh/alpha/2024/techblog/29.png)\r\r\n이제 왜 이런 권한을 요구하는지, 권한을 허용하면 어떤 일이 발생하는지, 보이스피싱 애플리케이션에서 주로 사용되는 오디오 도청, 위치(GPS), 사진과 동영상, 발신 전화 경로 전환, SMS 접근 총 5개의 권한에 대해서 자세히 살펴보도록 하겠습니다.\r\r\n\r\r\n# 보이스피싱 애플리케이션의 5가지 악성 행위\r\r\n\r\r\n보이스피싱 애플리케이션을 분석하면서 정말 다양한 악성 행위가 있다는 것을 느꼈습니다.\r\r\n기사와 영상으로 보는 것보다 직접 구현해 보고 테스트를 해보면서 바뀐 생각이 '보이스피싱을 왜 당할까?'라는 생각은 사라지고 '아, 이 정도면 진짜 당할 수도 있겠구나'라고 생각이 바뀌었습니다.\n\r\r\n이렇게 제 생각이 바뀐 이유는 총 5개였습니다.\r\r\n보이스피싱 애플리케이션에서 오디오 도청, 위치 추적, 사진 및 동영상 불법 촬영, 발신 전화 경로 전환, SMS 탈취 총 5개의 권한에 접근하였으며 해당 권한에 접근할 수 있다면 1편에서 잠깐 소개해 드렸던 영화 보이스와 스마트폰을 떨어뜨렸을 뿐인 데의 영화 속 피해자들처럼 삶이 붕괴하기까지는 정말 시간 문제인 것 같았습니다.\r\r\n따라서 위의 5개의 권한에 대해서 자세히 알아보도록 하겠습니다.\r\r\n\r\r\n## 1. 오디오 도청\r\r\n\r\r\n오디오를 녹음하기 위해서는 다음과 같은 권한이 필요합니다.\r\r\n![29-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/291.png)\r\r\n위의 권한을 사용하는 곳을 분석한 결과 아래의 코드처럼 /sdcard/에 log라는 디렉토리에 MP4라는 파일 형식으로 녹음된 파일이 저장되는 것을 알 수 있습니다.\r\r\n![30.png](https://image.toast.com/aaaadh/alpha/2024/techblog/30.png)\r\r\n위에서 저장소 위치가 SD_CARD이기 때문에 SD 카드 권한이 필요한 것입니다.\r\r\n![30-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/301.png)\r\r\n그럼, 언제 위의 권한을 사용하는 걸까요?\r\r\n바로 통화할 때 RECORD_AUDIO 권한을 사용해서 통화 내용을 녹음합니다.\r\r\n피해자가 수신 또는 발신을 하면 보이스피싱 범죄자들이 가지고 있는 전화번호 리스트에서 수신지와 발신지 전화번호를 체크합니다.\r\r\n해당 리스트에 수신지 또는 발신지의 번호가 존재하면 그때부터 녹음이 시작된다는 의미입니다.\r\r\n즉, 어디로 전화를 거는지 또는 어디에서 전화를 받는지 알 수 있으며 어떤 목적으로 통화한 것인지 다 알 수 있다는 의미입니다.\r\r\n그럼, 전화번호 리스트는 어떻게 관리되고 있을까요?\r\r\n분석 결과 아래의 코드처럼 전화번호는 C&C 서버에서 실시간으로 업데이트되는 것을 알 수 있었습니다.\r\r\n![31.png](https://image.toast.com/aaaadh/alpha/2024/techblog/31.png)\r\r\n또한, 녹음된 통화 파일은 아래의 코드처럼 `http://137.220.230.51/101` 파일을 전송하는 것을 알 수 있었습니다.\r\r\n![32.png](https://image.toast.com/aaaadh/alpha/2024/techblog/32%281%29.png)\r\r\n여기서 조금만 다르게 생각을 해봅시다.\r\r\n현재 도청과 감청의 기술은 엄청나게 발달했다고 합니다.\r\r\n위의 내용과 함께 생각해 보면 우리 모두가 일상생활 중 항상 들고다니는 큰 도청기가 있습니다.\r\r\n바로 휴대전화입니다.\n\r\r\n위의 방법은 보이스피싱 범죄를 위한 애플리케이션으로 만들어진 보이스피싱 애플리케이션입니다.\r\r\n그렇기 때문에 통화 녹음에 대한 기능만 존재했습니다.\r\r\n근데 만약 보이스피싱 애플리케이션이 아니라면 어떤 사태가 발생할까요?\n\r\r\n바로 위에서 말씀드렸던 악성 애플리케이션이 설치된 단말기가 하나의 큰 도청기가 되는 것입니다.\r\r\n이를 조금 더 이해하기 쉽게 데모 영상을 짧게 만들어봤습니다.\r\r\n데모 영상을 보시기 전에 먼저 말씀드리자면 왼쪽이 악성 애플리케이션에 설치된 피해자의 단말기입니다.\r\r\n오른쪽이 해커가 만든 서버입니다.\r\r\n해커는 악성 애플리케이션을 설치한 단말기에서 도청을 하기 위해 **Start** 버튼을 클릭합니다.\r\r\n그럼, 이제 휴대전화의 마이크를 통해 모든 소리가 녹음됩니다.\r\r\n그 후 해커는 **Stop** 버튼을 클릭해서 녹음된 파일을 전송받습니다.\r\r\n그런 다음 해커는 녹음된 파일을 재생해서 어떤 소리가 녹음되어 있는지 확인합니다.\r\r\n![33.png](https://image.toast.com/aaaadh/alpha/2024/techblog/33.png)\r\r\n\r\r\n>  [영상 바로 가기](https://youtu.be/xh9gyT9lrpA)\r\r\n\r\r\n이렇게 해커 및 범죄자는 피해자 주변의 소리를 언제 어디서든 들을 수가 있으며 이를 바탕으로 협박과 2차 피해를 줄 수 있습니다.\r\r\n\r\r\n## 2. 위치 추적\r\r\n\r\r\n다음은 GPS 권한입니다.\r\r\n보이스피싱 범죄자들은 피해자가 자신들이 원하는 위치로 가고 있는지, 혹은 경찰서나 다른 곳으로 가고 있는지 확인하기 위해 GPS 데이터를 활용해서 실시간으로 피해자의 위치를 파악합니다.\r\r\n분석 결과 보이스피싱 애플리케이션은 아래의 총 3가지의 권한으로 피해자의 위치를 추적하는데 사용하였습니다.\r\r\n![33-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/331.png)\r\r\n분석 결과, 위의 권한을 사용한 코드는 다음과 같습니다.\r\r\n![34.png](https://image.toast.com/aaaadh/alpha/2024/techblog/34.png)\r\r\n또한 추가로 분석한 결과, 위의 코드를 통해 피해자의 위치를 추척하고 추척한 위치 데이터를 DB에 저장하는 행위도 발견하였습니다.\r\r\n![35.png](https://image.toast.com/aaaadh/alpha/2024/techblog/35.png)\r\r\n아래의 데모 영상을 보시기 전에 잠깐 부가적인 설명을 하겠습니다.\r\r\n보이스피싱 범죄자들은 자신들의 웹 서버에서 **Start**를 클릭하여 피해자의 위치 정보를 수집합니다.\r\r\n**Start**를 클릭하면 피해자의 단말기(스마트폰)에서 현재 위치 정보를 DB 파일 또는 파일로 저장합니다.\r\r\n해당 파일과 데이터로 현재 피해자의 위치를 알아냅니다.\r\r\n따라서 데모 영상을 보여드리기 위해 운동 삼아 석촌 호수공원을 한 바퀴 걸었습니다. (실제 위치 정보를 수집하기 위해)\r\r\n보이스피싱 범죄자는 피해자의 위치가 궁금하여 **Start** 버튼을 클릭합니다.\r\r\n피해자의 위치 정보는 실시간으로 보이스피싱 범죄자들의 서버로 전송되어 사용자의 위치를 지도에 표시해 줍니다.\r\r\n아래의 데모 영상을 보시면 쉽게 이해가 될 겁니다.\r\r\n\r\r\n![36.png](https://image.toast.com/aaaadh/alpha/2024/techblog/36.png)\r\r\n>  [영상 바로 가기](https://youtu.be/iUsvY4wiCJU)\r\r\n\r\r\n## 3. 불법 촬영\r\r\n\r\r\n보이스피싱 애플리케이션을 설치할 당시 사진과 동영상에 대한 권한을 요구하였습니다.\r\r\n![36-1.png](https://image.toast.com/aaaadh/alpha/2024/techblog/361.png)\r\r\n\r\r\n위의 권한이 사진 및 동영상을 촬영하기 위한 카메라에 대한 권한입니다.\r\r\n분석 결과, 제가 분석한 보이스피싱 애플리케이션에서는 권한만 추가되어 있을 뿐 카메라 권한을 가지고 범죄에 활용한 코드는 존재하지 않았습니다.\r\r\n하지만 생각해 보면 보이스 피싱 범죄자들은 피해자의 현재 장소 또는 사진 및 영상을 협박의 수단으로 활용할 수 있기 때문에 짧게 데모 영상을 만들어 봤습니다.\r\r\n보이스피싱 범죄자들은 자신들의 웹 서버에서 **Start** 버튼을 클릭합니다.\r\r\n**Start** 버튼을 클릭하면 카메라의 전면, 후면에 접근하여 각각 사진을 촬영한 다음 보이스피싱 범죄자들의 서버로 전송하는 데모 영상입니다.\n\r\r\n먼저 피해자는 평소처럼 유튜브를 시청하고 있었습니다.\r\r\n이때 보이스피싱 범죄자들은 앞에서 설명해 드린 카메라 권한이 있기 때문에 **Start** 버튼을 클릭해 원격에서 피해자의 카메라 전면과 후면에 접근하여 각각 사진을 촬영합니다.\r\r\n그 후 범죄자의 서버로 촬영한 사진을 업로드하여 확인할 수 있습니다.\r\r\n![37.png](https://image.toast.com/aaaadh/alpha/2024/techblog/37.png)\r\r\n>  [영상 바로 가기](https://youtu.be/5IS_zQesG2c)  \r\r\n\r\r\n위 데모 영상처럼 사진 촬영밖에 없지만 카메라 권한이 있기 때문에 동영상 촬영도 손쉽게 할 수 있습니다.\r\r\n\r\r\n## 4. SMS 탈취\r\r\n\r\r\n다음은 문자(SMS)에 접근할 수 있는 권한입니다.\r\r\n![38.png](https://image.toast.com/aaaadh/alpha/2024/techblog/38.png)\r\r\n사용자가 위의 권한을 허용한다면 애플리케이션에서 문자에 접근할 수 있습니다.\r\r\n위의 권한으로 피해자 단말기에 존재하는 SMS에 접근하여 보낸 사람의 이름, 전화번호, 문자 내용, 시간 등 문자에 대한 대부분의 정보에 접근하여 데이터를 탈취하는 것을 확인할 수 있었습니다.\r\r\n관련된 코드는 아래와 같습니다.\r\r\n![39.png](https://image.toast.com/aaaadh/alpha/2024/techblog/39.png)\r\r\nSMS 데이터에 접근해서 저장된 이름(display_name) 또한 저장되는 것을 확인하였습니다.\r\r\n![40.png](https://image.toast.com/aaaadh/alpha/2024/techblog/40.png)\r\r\n이렇게 저장된 이름과 전화번호가 탈취된다면 피해자의 단말기에 저장된 수많은 사람도 보안 위협의 대상이 될 가능성이 존재합니다.\r\r\n아래의 데모 영상은 수신자에게 오는 SMS를 실시간으로 보이스 피싱 범죄자들의 서버로 전송하는 데모 영상입니다.\r\r\nSender는 수신자(피해자)에게 문자를 보냅니다.\r\r\n이때 그림과 같이 인증 번호일 수도 있고, 중요한 내용을 담은 문자일 수 있습니다.\r\r\n![41.png](https://image.toast.com/aaaadh/alpha/2024/techblog/41.png)\r\r\n아래의 코드는 SMS 정보를 탈취하는 코드 중 일부입니다.\r\r\n이렇게 새로운 SMS를 피해자가 수신하게 되면 보이스 피싱 범죄자들의 서버로 전송하도록 합니다.\r\r\nSMS 내용을 탈취하는 기능은 백그라운드에서 실행되며 SMS를 수신하고 발신할 때 보이스 피싱 범죄자들에게 똑같이 전송되게 됩니다.\r\r\n![42.png](https://image.toast.com/aaaadh/alpha/2024/techblog/42.png)\r\r\n![43.png](https://image.toast.com/aaaadh/alpha/2024/techblog/43.png)\r\r\n\r\r\n>  [영상 바로 가기](https://youtu.be/Cex079bPAPQ)\r\r\n\r\r\n\r\r\n## 5. 수신 및 발신 경로 변조와 차단\r\r\n\r\r\n다음은 보이스피싱 애플리케이션의 핵심인 수신 및 발신 전화 변조에 관한 내용에 관해서 설명해 드리겠습니다.\r\r\n먼저 수신 및 발신 전화의 경로를 변조하기 위해서는 아래와 같이 전화와 관련된 권한이 필요합니다.\r\r\n![44.png](https://image.toast.com/aaaadh/alpha/2024/techblog/44.png)\r\r\n이를 설명해 드리기에 앞서 아래의 Youtube 영상을 잠깐 보고 오시겠습니다.\r\r\n\r\r\n * [https://www.youtube.com/watch?v=i73GuJWpROQ&t=25s](https://www.youtube.com/watch?v=i73GuJWpROQ&t=25s)\r\r\n * [https://www.youtube.com/watch?v=YTH-drhg0Hw&t=344s](https://www.youtube.com/watch?v=YTH-drhg0Hw&t=344s)\r\r\n \r\r\n영상에서 보셨던 것처럼 언론과 기사에서는 '전화 가로채기'라는 기법으로 많이 소개되어 있습니다.\r\r\n보이스피싱 애플리케이션에 감염된 피해자가 확인을 위해 금융기관에 전화(발신)를 걸면 보이스피싱 범죄자들이 수집한 전화번호 리스트에 있는지 없는지 판단한 후 없으면 정상적인 수신자에게 발신하게 됩니다.\r\r\n하지만 범죄자들이 수집한 전화번호 리스트에 존재한다면 위 영상에서 보신 것처럼 자신들에게 발신이 오도록 전화번호를 변조합니다.\r\r\n아래의 그림은 위의 설명을 이해하기 쉽게 도식화한 것입니다(그림에 나와있는 기관은 무관합니다).\r\r\n![45.png](https://image.toast.com/aaaadh/alpha/2024/techblog/45%283%29.png)\r\r\n하지만 제가 분석한 보이스피싱 애플리케이션에서는 피해자가 발신할 때 자신들이 수집한 전화번호 리스트에 존재한다면 발신 자체를 하지 못하도록 차단하는 기법을 사용하였습니다.\r\r\n아래의 그림은 현재 분석하는 보이스 애플리케이션에서 사용하는 기법을 이해하기 쉽도록 도식화한 것입니다.\r\r\n![46.png](https://image.toast.com/aaaadh/alpha/2024/techblog/46%283%29.png)\r\r\n수신과 발신 경로 변조 및 차단은 보이스 피싱 애플리케이션의 핵심이기 때문에 위 4가지 기법보다는 핵심을 조금 자세히 설명하려고 합니다.\r\r\n![47.png](https://image.toast.com/aaaadh/alpha/2024/techblog/47.png)\r\r\n위의 코드를 분석한 결과, `Intent`[[9]](https://developer.android.com/reference/android/content/Intent)를 통해 피해자의 발신 여부를 판단합니다.\r\r\n`Intent`는 애플리케이션 컴포넌트 간에 실행을 요청하는 메시지나 데이터를 전달하는 역할을 합니다.\r\r\n예를 들어, 활동(Activity), 서비스(Service), 브로드캐스트 리시버(BroadcastReceiver) 등을 시작할 때 `Intent`를 사용합니다.\r\r\nintent.getAction() 메서드는 `Intent`에 설정된 action 문자열을 반환합니다.\r\r\n이 문자열을 사용하여 `Intent`가 수행하려는 구체적인 작업이 \"android.intent.action.NEW_OUTGOING_CALL\"이라면 v3는 true가 됩니다.\r\r\n이는 새로운 발신 전화가 시작됐음을 의미합니다.\r\r\n새로운 발신 전화가 시작되었으면 intent.getStringExtra(\"android.intent.extra.PHONE_NUMBER\")를 실행하여 발신하려는 전화번호를 `Intent`로부터 추출합니다.\r\r\n아래의 코드는 발신 번호와 수집한 전화번호를 비교하기 위해 수집한 전화번호와 비교하는 코드입니다.\r\r\n![48.png](https://image.toast.com/aaaadh/alpha/2024/techblog/48.png)\r\r\n\r\r\n위의 코드는 allNoMap이라는 HashMap에 Kit.Z(context)이 반환하는 값을 저장합니다.\r\r\n즉, `Kit.Z()` 메서드가 반환하는 값은 보이스피싱 범죄자들이 수집한 전화번호를 의미합니다.\r\r\nAllNoBean allNoBean = (AllNoBean)allNoMap.get(number); 코드의 의미는 allNoMap이라는 수집된 번호에서 발신 전화번호가 있는지 확인하는 기능을 합니다.\r\r\n만약 존재한다면 `getCome()` 메서드는 0을 반환하고 this.setResultData(null); 코드로 발신을 중단합니다.\r\r\n발신을 중단한다는 의미는 발신 자체를 못 하게 막아버린다고 생각하시면 됩니다.\r\r\n아쉽게도 C&C 서버에서 수집한 전화번호에 대한 데이터를 받아와야 하지만 현재 C&C 서버와 통신이 되지 않아 수집한 전화번호에 대한 데이터는 애플리케이션에 존재하지 않았습니다.\n\r\r\n이제 데모 영상을 보시겠습니다.\r\r\n> [영상 바로 가기](https://youtu.be/32bLJJcV4pU)\r\r\n\r\r\n먼저 피해자는 보이스피싱 범죄자들에게 걸려 온 전화를 받고 확인차 금융위원회, 금융감독원, 금융권 등에 확인을 하기 위해서 전화합니다. (영상에서는 NHN Cloud 대표 전화번호)\n\r\r\n이때 보이스피싱 애플리케이션은 수집된 전화번호 리스트에서 발신한 번호가 존재한다면 정상적인 경로가 아닌 해커 또는 보이스피싱 범죄자들에게 발신이 되도록 경로를 변조합니다.\r\r\n피해자는 확인을 위해 금융권 등에 전화를 하였지만 실제로는 범죄자들에게 다시 전화를 걸게 되는 것입니다.\r\r\n또한 통화 기록도 수정하여 실제 정상적으로 통화를 했다고 착각하게 만들어 안심시킵니다.\r\r\n![49.png](https://image.toast.com/aaaadh/alpha/2024/techblog/49.png)\r\r\n\r\r\n\r\r\n여기까지 보이스피싱 애플리케이션의 대표적인 악성 행위 5가지에 대해서 알아보았습니다.\r\r\n이러한 행위들은 사용자의 개인정보를 노리거나 금전적인 손실을 초래할 수 있으므로, 각별한 주의가 필요합니다. \r\r\n\r\r\n# 마치며\r\r\n\r\r\n개인적으로 이번 보이스피싱 애플리케이션에 대한 분석을 진행하면서 많은 것을 배우고 느낀 시간이었습니다.\r\r\n정보를 찾아보고 데이터를 분석하며, 최대한 많은 분들이 이해하기 쉬운 형태로 정리하는 과정 또한 좋은 경험이 되었는데요. 보이스피싱, 그 영향력이 얼마나 큰 지에 대한 깊은 이해를 얻을 수 있었던 좋은 기회였습니다.\n\r\r\n사실 힘든 것보다 매우 재밌었습니다.\r\r\n특히 데모 영상을 만들기 위해 직접 애플리케이션과 서버, 웹 사이트를 개발해 보면서 개발자분들의 전문성과 노력에 대해 다시 한번 생각하는 시간이 되었습니다.\r\r\n이번 보이스피싱 애플리케이션 분석 내용을 통해 모바일 보안뿐만 아니라 보안에 대한 경각심이 조금이라도 생기셨다면 큰 보람을 느낄 것 같습니다.\r\r\n끝으로, 기술의 발전이 무조건 좋은 것이 아니라, 우리에게 가져다주는 편리함과 동시에 우리가 직면할 수 있는 잠재적인 보안 위험성에 대해서도 한 번쯤은 생각해 보는 계기가 되었으면 좋겠습니다.\r\r\n보이스피싱 애플리케이션 분석 1편과 2편의 긴 내용을 읽어 주셔서 감사합니다.\r\r\n\r\r\n# 참고 문헌\r\r\n\r\r\n> [1] [Packet](https://developer.mozilla.org/ko/docs/Glossary/Packet)\r\r\n> [2] [JSON](https://namu.wiki/w/JSON)\r\r\n> [3] [AES](https://namu.wiki/w/AES)\r\r\n> [4] [초기화 벡터](https://ko.wikipedia.org/wiki/%EC%B4%88%EA%B8%B0%ED%99%94_%EB%B2%A1%ED%84%B0)\r\r\n> [5] [베이스64](https://ko.wikipedia.org/wiki/%EB%B2%A0%EC%9D%B4%EC%8A%A464)\r\r\n> [6] [https://www.youtube.com/watch?v=eapWmmBFK6s&t=533](https://www.youtube.com/watch?v=eapWmmBFK6s&t=533)\r\r\n> [7] [파일 시그니처](https://namu.wiki/w/%ED%8C%8C%EC%9D%BC%20%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98)\r\r\n> [8] [https://developer.android.com/guide/topics/manifest/manifest-intro?hl=ko](https://developer.android.com/guide/topics/manifest/manifest-intro?hl=ko)\r\r\n> [9] [https://developer.android.com/reference/android/content/Intent](https://developer.android.com/reference/android/content/Intent)",
        "isoDate": "2024-06-18T06:37:08.000Z"
      }
    ]
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "이한",
    "category": "개인",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "컴백",
        "link": "https://www.thestartupbible.com/2024/06/the-great-comeback.html",
        "pubDate": "Wed, 19 Jun 2024 21:31:00 +0000",
        "content:encodedSnippet": "얼마 전에 4대 메이저 테니스 대회 중 하나인 프랑스 오픈이 끝났다. 2주 동안 밤늦게까지 거의 매일 테니스를 봐서 행복했지만, 내가 좋아하는 선수들은 이제 대부분 은퇴했거나 늙어서 초반에 탈락했다. 이 중 우승 가능성이 아직도 높았던 조코비치 선수가 우승하길 바랬는데, 준준결승전에 부상으로 인해서 기권패 했다.\n나는 이번에 조코비치 선수의 경기를 다 봤는데, 모든 경기마다 안타까움과 경외감의 두 가지 감정이 교체했다. 거의 완벽함을 자랑하던 선수가 나이 들면서 젊은 선수들에게 밀리는 걸 볼 때마다 역시 아무리 체력이 좋고 몸 관리를 잘해도 세월을 이길 수 없다는 안타까움과 아쉬움이 있었지만, 반대로, 이제 거의 40세가 된 이 선수가 20대 초반 선수들과 체력적으로 대등한 경기를 하는 걸 보면 정말 대단하다는 경외심이 생겼다.\n특히, 이번 프랑스 오픈 시합에서 인상 깊었던 점은 이 노장의 컴백 능력이었다. 남자 테니스는 5세트 중 3세트를 먼저 이겨야 하는데, 5세트를 모두 플레이하면, 그리고 정말 치열한 경기를 펼치면 5시간 이상 걸린다. 사업도 그렇지만, 운동 경기도 분위기와 흐름이라는 게 있어서, 이 분위기와 흐름이 내 쪽으로 오지 않으면 상승모드를 유지하는 게 정말 어렵다. 테니스의 경우 세트 스코어가 2대 1이면, 네 번째 세트에서 경기는 3대 1로 거의 종료된다. 즉, 2세트를 뒤지고 있으면, 그 이후에 다시 흐름을 뺏어오는 게 거의 불가능하다.\n그런데 조코비치는 이런 통계에 포함되길 거부하는 선수다. 나는 그동안 이 선수가 세트 스코어 2대 0으로 뒤지고 있는 상황에서 완벽하게 컴백해서 결국엔 다섯 번째 세트까지 가서 3대 2로 이기는 걸 너무 많이 봤다. 실은, 너무 많이 봐서 이 선수에겐 이게 당연한 것 같이 느껴지지만, 현실적으론 거의 불가능한 컴백을 조코비치는 밥 먹듯이 하고 있다는 점이 정말 놀랍다. 그리고 아무리 나이를 먹어도 이런 불가능한 컴백을 이번 프랑스 오픈에서도 여러 번 보여줬다. 3 라운드와 4라운드 모두 세트스코어 2대 1로 지고 있던 상황에서 결국엔 다섯 번째 세트까지 경기를 끌고 가서, 4시간 반이 넘는 시합을 하면서 두 번이나 3대 2로 역전승했다.\n아무리 뛰어나고 위대한 선수들도 이런 컴백을 하기는 쉽지 않은데, 어떻게 조코비치는 반복적으로 이렇게 컴백 할 수 있을까? 결국엔 정신력, 체력, 자기관리, 그리고 끝까지 포기하지 않는 끈기 때문이라고 생각한다. 운동선수들은 – 특히, 팀이 아닌 개인에게 퍼포먼스의 100%를 의지해야 하는 테니스와 같은 – 몸이 돈이기 때문에 정말 체력을 종교와도 같이 관리하는데 조코비치는 이런 운동선수 중에서도 심할 정도로 관리를 잘 한다. 몇 년 전에 메이저 대회 우승한 후에 초콜릿을 딱 한 입 먹은 후에 우승을 자축한 일화가 유명하지만, 이런 관리 스타일은 이 선수의 일상생활이다. 이런 자기 관리에서 오는 체력과 정신력은 다른 선수들이 흉내조차 낼 수 없을 정도다.\n창업가들은 하루하루가 이렇게 뒤지고 있는 경기에서 컴백해야 하는 전쟁이다. 다른 경쟁 스타트업과의 경기에서 항상 지기 때문에 컴백해야 한다. 대기업과의 경기에서 이미 진 상태로 시작하기 때문에 컴백해야 한다. 자신의 제품과의 경기에서 지기 때문에 컴백해야 한다. 고객과의 경기에서도 항상 지기 때문에 컴백해야 한다. 회사에 사람이 많아지면, 직원들에게도 치이면서 지기 때문에 항상 컴백해야 한다. 도대체 이기는 경기는 하나도 없기 때문에, 모든 면에서 매일, 매시간, 매 순간 컴백해야 한다.\n이렇게 계속 컴백하기 위해서는 조코비치같이 창업가들도 몸과 마음을 잘 단련하고, 절제하고, 관리해야 한다. 운동도 매일 해야 하고, 음식도 절제해야 하고, 술도 절제해야 하고, 항상 최상의 컨디션으로 일하고, 뒤지는 경기에서도 항상 컴백할 수 있게 항상 스스로를 관리해야 한다. 이게 안 되면 오랫동안 지속되는 사업을 만들 수가 없다.\n*참고로, 조코비치가 이번에 준준결승에서 기권한 이유는 늙어서 체력이 약해서라기 보단, 그 전 경기가 주최 측의 잘못된 결정으로 너무 늦게 밤 11시에 시작해서 새벽 3시가 넘어서 끝났기 때문이다. 이렇게 누적된 피로로 그다음 날 다시 경기하는 건 말도 안 된다고 생각했기 때문에 기권했다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/06/the-great-comeback.html#respond",
        "content": "얼마 전에 4대 메이저 테니스 대회 중 하나인 프랑스 오픈이 끝났다. 2주 동안 밤늦게까지 거의 매일 테니스를 봐서 행복했지만, 내가 좋아하는 선수들은 이제 대부분 은퇴했거나 늙어서 초반에 탈락했다. 이 중 우승 가능성이 아직도 높았던 조코비치 선수가 우승하길 바랬는데, 준준결승전에 부상으로 인해서 기권패 했다. 나는 이번에 조코비치 선수의 경기를 다 봤는데, 모든 경기마다 안타까움과 경외감의 두(...)",
        "contentSnippet": "얼마 전에 4대 메이저 테니스 대회 중 하나인 프랑스 오픈이 끝났다. 2주 동안 밤늦게까지 거의 매일 테니스를 봐서 행복했지만, 내가 좋아하는 선수들은 이제 대부분 은퇴했거나 늙어서 초반에 탈락했다. 이 중 우승 가능성이 아직도 높았던 조코비치 선수가 우승하길 바랬는데, 준준결승전에 부상으로 인해서 기권패 했다. 나는 이번에 조코비치 선수의 경기를 다 봤는데, 모든 경기마다 안타까움과 경외감의 두(...)",
        "guid": "https://www.thestartupbible.com/?p=9131",
        "categories": [
          "Uncategorized",
          "discipline",
          "FoundersAtWork",
          "sports"
        ],
        "isoDate": "2024-06-19T21:31:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "한 방은 없다",
        "link": "https://www.thestartupbible.com/2024/06/no-such-thing-as-jackpot-in-life.html",
        "pubDate": "Sun, 16 Jun 2024 21:30:00 +0000",
        "content:encodedSnippet": "스타트업은 린하고 빠르게 움직일 수 있다. 그리고 새로운 것을 시도해서 실패해도 그냥 다음 새로운 시도로 넘어가면 된다. 대기업은 관료주의적이고 느리다. 뭔가 새로운 걸 시도하기 위해서 내부 승인 과정을 거치다 보면, 그 새로운 건 이미 옛날 것이 되어 있다. 하지만, 대기업은 스타트업이 가지지 못한 자본력과 유통력이 있다.\n그래서 우리는 스타트업과 대기업의 협업을 종종 본다. 물론, 서로 DNA가 다른 조직이라서 대부분의 협업은 실패하지만, 잘하는 사례도 아주 가끔 볼 수 있다. 하지만, 내가 지금까지 본 많은 스타트업 대표들이 대기업과의 협업에 너무나 큰 자원을 할당하고, 너무나 큰 기대와 의미를 부여한다. 큰 오프라인 리테일 유통망을 가진 대기업을 통해서 제품이 마케팅되고 유통되기 시작하면 매출이 10배 이상 증가할 거라는 시장 조사와 분석 자료를 너무나 굳게 믿으면, 이 협업을 되게 하기 위해서 회사의 모든 자원을 투입하는 경우를 종종 본다. 수년 동안 자체적으로 매출을 이렇게 크게 만들지 못한 회사인데, 남과의 협업을 통해 큰 성장이 가능하다는 걸 너무 굳게 믿으면, 우리 사업의 핵심이 우리의 제품과 고객에서 다른 회사와의 협업으로 바뀐다.\n모든 개발력은 우리에게 폭발적인 성장을 말로 보장하는 파트너사의 요구를 맞추는 데 다 투입되고, 우리 마케팅 담당자들은 우리 자체 마케팅이 아니라, 다른 회사와의 파트너십을 그 회사의 기준에 맞춰서 홍보하기 위해서 바빠진다. 그리고 회사의 핵심인 대표이사 또한 이 협업이 한 방에 우리 회사의 운명을 180도 바꿔 놓고, 그 이후에 우리 회사는 제이 커브 성장을 그릴 수 있다고 굳게 믿어서, 실은 더 중요한 모든 일들은 이 협업 이후로 미룬다.\n그런데 대기업과의 협업은 생각보다 오래 걸린다. 1년 이상 걸리는 경우도 나는 봤는데, 이렇게 오랜 시간과 자원을 투입한 후에 잔뜩 기대하면서 시작한 파트너십은 대부분 잘 안된다. 실은, 대부분 재앙의 수준으로 마무리되고, 이 협업 때문에 그동안 날렸던 시간, 돈, 그리고 정말로 중요한 일을 소홀히 한 대가는 작은 스타트업을 그대로 파산시킬 수 있다.\n왜 그런진 모르겠지만, 어느 순간 한국에선 스타트업의 성공이 “대박”과 “한 방”과 같은 단어로 포장되기 시작했고, 내가 만나는 일부 창업가들은 스타트업에 한 방이 없으면 절대로 제이 커브를 만들 수 없고, 제이 커브를 못 만들면 유니콘 기업이 될 수 없다고 굳게 믿고 있다. 실은, 방금 쓴 문장에 내가 싫어하는 스타트업 단어가 다 들어가 있는데, 내가 제일 싫어하는 단어가 “한 방”, “유니콘”, 그리고 “제이 커브”다. 아직도 이런 한 방 신화를 믿고 있는 창업가들은 이전 글의 AuditBoard와 같은 회사들의 성장을 참고하면 좋겠다.\n이 세상에서 한 방으로 크게 성공하는 대박 성공은 절대로 없다. 특히, 요새 같이 경쟁이 심한 비즈니스 세계에서 한 방에 성공하는 사업은 있을 수가 없다. 이런 게 아직도 있다면 그건 사기이다. 그렇기 때문에 창업가들은 특정 기업과의 협업, 특정 기능, 특정 업데이트, 특정 인력이 그동안 회사에 없던 성공을 한 방에 가져올 수 있다고 믿으면 안 되고, 여기에 올 인 하면 안 된다. 모든 일들엔 시간이 걸린다(TTT=Things Take Time). 확실하게 믿을 수 있는 건, 작은 것들이 쌓여서 큰 게 되는 복리의 힘, 그리고 복리의 힘을 움직이는 원동력인 나만의 견고한 사업과 비즈니스 모델이다. \n절대로 대박은 없다. 이 대박에 올 인하지 마라.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/06/no-such-thing-as-jackpot-in-life.html#comments",
        "content": "스타트업은 린하고 빠르게 움직일 수 있다. 그리고 새로운 것을 시도해서 실패해도 그냥 다음 새로운 시도로 넘어가면 된다. 대기업은 관료주의적이고 느리다. 뭔가 새로운 걸 시도하기 위해서 내부 승인 과정을 거치다 보면, 그 새로운 건 이미 옛날 것이 되어 있다. 하지만, 대기업은 스타트업이 가지지 못한 자본력과 유통력이 있다. 그래서 우리는 스타트업과 대기업의 협업을 종종 본다. 물론, 서로(...)",
        "contentSnippet": "스타트업은 린하고 빠르게 움직일 수 있다. 그리고 새로운 것을 시도해서 실패해도 그냥 다음 새로운 시도로 넘어가면 된다. 대기업은 관료주의적이고 느리다. 뭔가 새로운 걸 시도하기 위해서 내부 승인 과정을 거치다 보면, 그 새로운 건 이미 옛날 것이 되어 있다. 하지만, 대기업은 스타트업이 가지지 못한 자본력과 유통력이 있다. 그래서 우리는 스타트업과 대기업의 협업을 종종 본다. 물론, 서로(...)",
        "guid": "https://www.thestartupbible.com/?p=9127",
        "categories": [
          "Uncategorized",
          "B2B",
          "FoundersAtWork",
          "inspiring",
          "strategy",
          "Strong"
        ],
        "isoDate": "2024-06-16T21:30:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": [
      {
        "creator": "지마켓 기술블로그",
        "title": "가상화에 대한 짧은 단상",
        "link": "https://dev.gmarket.com/107",
        "pubDate": "Mon, 17 Jun 2024 13:08:56 +0900",
        "author": "지마켓 기술블로그",
        "comments": "https://dev.gmarket.com/107#entry107comment",
        "content": "<p style=\"text-align: right;\" data-ke-size=\"size16\"><span><span>&nbsp; <span><span>지마켓 정보보안실 김용재</span></span></span></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span><span>&nbsp; I</span>T</span>세상에는 가상화에 관련된 개념이 아주 많이 존재한다고 본다<span>.<span>&nbsp;</span></span>컴퓨터의 기본 구조에서 보면<span>,<span>&nbsp;</span></span>메모리가 아주 귀했을 때 나왔을 거 같은 디스크와 메모리를 섞어 사용하는 가상 메모리부터<span>,<span>&nbsp;</span></span>반대로 하드 디스크<span>(SSD)</span>가 현재에 비해 아주 느렸을 때 잠시 나왔던 메모리를 디스크로 사용하는 램 디스크<span>(</span>이건 요즘<span>&nbsp;</span><span>Redis<span>&nbsp;</span></span>등 예전에 비해 많이 싸진 메모리를 기반으로 빠르게 동작하는 디비의 롤 모델라는 느낌도 든다<span>),<span>&nbsp;</span></span>예전에<span>&nbsp;</span><span>CD</span>를 이용해 게임이나 프로그램을 실행하던 때에 느린<span><span>&nbsp;</span>CD<span>&nbsp;</span></span>대신 디스크의 이미지로 해당 데이터를 옮겨서<span>&nbsp;</span><span>CD<span>&nbsp;</span></span>인 것처럼 프로그램을 속였던<span>(</span>아무래도 그때는<span>&nbsp;</span><span>CD를&nbsp;</span>강제한 불법 복제 방지 로직을 피하는 목적들도 있었다<span>) &ldquo;Virtual CD, DAEMON Tools, cdspace&rdquo;<span>&nbsp;</span></span>같은 가상<span><span>&nbsp;</span>CD,<span>&nbsp;</span></span>자바<span>/</span>파이썬 등의 프로그래밍 언어가 실행되는 가상머신 환경<span>,<span>&nbsp;</span></span>메타버스<span>,<span>&nbsp;</span></span>가상 컴퓨터<span>,<span>&nbsp;</span></span>컨테이너<span>,<span>&nbsp;</span></span>클라우드 등이 모두 가상화의 개념에 속하게 될 것 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 추가로 우리가 현재까지 컴퓨터를 이용해 자연스럽게 접하고 있는 여러 사진<span>,<span>&nbsp;</span></span>영상 등도 사실은 현실을 가상화 한 부분이라고 볼 수 있고<span>,<span>&nbsp;</span></span>해당 부분이 현재는<span><span>&nbsp;</span>AI<span>&nbsp;</span></span>사진<span>, AI<span>&nbsp;</span></span>영상 등으로 한 단계 더 추상화되는 느낌이 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 가상화는 현실에 존재하는 부분을 데이터로 변화해 컴퓨터로 처리하는 세상으로 옮겨 모방<span>,<span>&nbsp;</span></span>재해석하거나<span>,<span>&nbsp;</span></span>현실은 아니지만 인간의 관념과 지각으로 현실을 대체할 수 있는 상상의 대상을 만드는<span><span>&nbsp;</span>2</span>가지의 종류가 있는 듯한다<span>.<span>&nbsp;</span></span>물론 현실에 존재하는 많은 부분도 사람의 관념적인 부분을 실제 형태로 구현했다는 측면에서는 형상화되기 전에 이미 가상화된 데이터 형태로 존재하고 있었다고 봐도 되지 않을 까는 싶다<span>.<span>&nbsp;</span></span>그렇게 생각함 요즘 뇌 과학 쪽에서 언급하듯 사람 자체가 이미 세상과 타인을 모델링하고 있지 않나 싶기도 하고 말이다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><b><span>1.1<span>&nbsp;</span></span></b><b><span>효율성의 추구</span></b></h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 이전 글<span>(IT</span>에 대한 짧은 단상<span>)</span>에서 얘기했듯<span><span>&nbsp;</span>IT</span>의 가장 근간은 현실에 비해 아주 많이 빠른 처리를 하는 컴퓨터라는 존재가 있기 때문에 가능하다고 본다<span>.<span>&nbsp;</span>그 중에서도</span> 현재 시점에서<span>&nbsp;</span><span>CPU</span>는<span>&nbsp;</span><span>(GPU<span>&nbsp;</span></span>가 조금 섭섭해할지는 모르겠지만<span>)<span>&nbsp;</span></span>태양계의 태양 같이 아직 까지는 해당 부분의 가장 기본이 되는 중심일 것이다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 일반적으로 사람은 효율성을 최대화하려는 경향을 가지고 있다고 본다<span>.<span>&nbsp;</span></span>가지고 있는 시간이나 자원 등을 최대한<span>(</span>또는 최소한<span>)<span>&nbsp;</span></span>사용하여 최대한의 아웃풋을 내는 것을 삶의 목표로 삼고 가는 경우가 많다<span>.<span>&nbsp;</span></span>반대로 얘기되는 비움이나 미니멀리즘 같은 개념 또한 어찌 보면 완전하고<span>,<span>&nbsp;</span></span>기계처럼 확정되게 움직이지 못하고 만족하지 못하는 사람의 성향에 대한 또 다른 측면의 효율성의 추구일 수도 있다는 생각도 든다<span>(</span>개인적으론 이 불완전 함이 현재 완벽함을 향해서 나아가고 있는<span><span>&nbsp;</span>AI</span>에 대해 인간이 느끼는 미묘한 이질감이 아닐 까도 싶긴 하고 말이다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"582\" data-origin-height=\"582\"><span data-url=\"https://blog.kakaocdn.net/dn/cz3hUE/btsH0cZr8EL/ZmK14sAWzFLL1I6VBe30OK/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림&amp;nbsp; 2-1&amp;nbsp; 용돈을 알차게 쓰기 ]\"><img src=\"https://blog.kakaocdn.net/dn/cz3hUE/btsH0cZr8EL/ZmK14sAWzFLL1I6VBe30OK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcz3hUE%2FbtsH0cZr8EL%2FZmK14sAWzFLL1I6VBe30OK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"411\" height=\"411\" data-origin-width=\"582\" data-origin-height=\"582\"/></span><figcaption>[ 그림&nbsp; 2-1&nbsp; 용돈을 알차게 쓰기 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 컴퓨터 안의 효율성의 추구를 이해하기 위해 여러분이 심부름센터를 시작했다고 생각해 보자<span>.<span>&nbsp;</span></span>우선 처음엔 매출이 얼마나 될지 자신이 없을 거기 때문에<span>,<span>&nbsp;</span></span>사람을 고용하진 못하고 나 홀로 창업을 해서 상황을 보면서 조금씩 일하기 시작한다<span>.<span>&nbsp;</span></span>처음엔 실수를 방지하기 위해 한 명의 고객만을 받아 그 일을 다 처리하고<span>,<span>&nbsp;</span></span>이후 다음 고객의 일을 받아 순차적으로 일을 처리했다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 근데 점점 일이 익숙해지다 보니 한 고객의 일을 처리하는 사이에 아쉽게 비어 있는 시간들이 눈에 들어오기 시작한다<span>(</span>예를 들어 법원에 서류를 접수하고 나면<span>,<span>&nbsp;</span></span>재판일자가 확정되기까지 멍하니 있는 것 밖에 따로 할 일이 없다<span>.<span>&nbsp;</span></span>또는 지하철을 이동하면서도 뭔가 스마트폰으로 처리할 수 있는 다른 업무들도 많을 것 같다<span>)</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"585\" data-origin-height=\"585\"><span data-url=\"https://blog.kakaocdn.net/dn/bNup8h/btsH2EM4r7b/9Tp3KhWoqiMsA4pKc2vnrk/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림&amp;nbsp; 2-2&amp;nbsp; 마트 심부름 하기 ]\"><img src=\"https://blog.kakaocdn.net/dn/bNup8h/btsH2EM4r7b/9Tp3KhWoqiMsA4pKc2vnrk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbNup8h%2FbtsH2EM4r7b%2F9Tp3KhWoqiMsA4pKc2vnrk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"414\" height=\"414\" data-origin-width=\"585\" data-origin-height=\"585\"/></span><figcaption>[ 그림&nbsp; 2-2&nbsp; 마트 심부름 하기 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\"><br /><span data-alt=\"[ 그림&amp;nbsp; 2-2&amp;nbsp; 마트 심부름 하기 ]\" data-lightbox=\"lightbox\" data-url=\"https://blog.kakaocdn.net/dn/Yg6Nb/btsHTBCVuC9/nBmHz0Nb6Z4dxHKemRrQU0/img.png\"></span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 이제 조금씩 멀티태스킹 모드가 되면서 한 고객으로부터 여러 개의 일을 받아서 시간시간을 나누어 채우면서 동시에 진행되는 것 같이 보이도록 일을 하기도 하고<span>(</span>서류를 접수하고 결과가 나오길 기다리는 중간에 다음 서류를 작성하거나<span>,<span>&nbsp;</span></span>다른 겹치지 않는 일들을 수행<span>),<span>&nbsp;</span></span>다른 업무 타입의 고객의 일을 받아서 중간중간 대기 시간에 수행하다 보니 가진 시간과 능력을 낭비 없이 쓰면서 효율적으로 개인의 리소스를 사용할 수 있게 되었다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 점점 일과 매출에 자신이 붙으면서 본인과 비슷한 처리 능력을 가진 다른 직원들을 채용하기 시작한다<span>.<span>&nbsp;</span></span>이제 인적 자원을 이용하는 방법의 조합은 점점 더 다양하게 되어<span>,<span>&nbsp;</span></span>한 고객의 일을 여러 직원에게 나누어 동시에 수행하기도 하며<span>,<span>&nbsp;</span></span>여러 고객을 일을 그때그때마다 시간이 비는 직원에게 나누어서 일을 시킴으로써 회사에 있는 리소스를 최대한 사용하기 시작했다<span>.<span>&nbsp;</span></span>가끔 설문 조사 같이 완전히 병렬로 처리가 가능하지만 보유 직원 수가 안 되어 포기해야만 했던 일들은 외부의 전문적인 조사 회사한테 아웃소싱을 주고 지불하는 비용과의 차액을 벌기도 한다<span>.<span>&nbsp;</span></span>이제는 해당 프로세스가 너무 효율 적으로 돌고 있어서<span>,<span>&nbsp;</span></span>일부 놀고 있는 시간들이 빤히 보이기 때문에 좀 더 다른 일이 동시에 들어온다면 좋겠다는 생각이 든다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 조금 재밌는 현상은 고객 회사에서도 비슷하게 이런 최적화를 이루려 하는 노력이 있어서<span>,<span>&nbsp;</span></span>굳이 해당 고객사의 여러 담당자들이 이 쪽에 개별로 요청을 하지 않고<span>,<span>&nbsp;</span></span>그쪽에서도 우선순위를 두어 일을 정리하여 한 사람이 맡아 이쪽에 요청하게 되었다<span>.<span>&nbsp;</span></span>전혀 기대는 안 했던 부분이지만 저 쪽도 쓸데없는 요청 채널과 처리 담당자 들 간의 커뮤니케이션 비용을 낭비하지 않고<span>,<span>&nbsp;</span></span>우리 쪽도 괜히 번거롭게 여러 담당자들을 대응하느라 시간을 보내지 않아도 되는 장점이 생기게 된 듯하다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 조금 더 회사가 커지게 되자 각 직원들을 하나의 독립된 인원이기보다는 하나의 가상화된 단위로 만들면 어떨까 하는 생각이 들었다<span>.<span>&nbsp;</span></span>굳이 고객들이 우릴 특정한 개개의 사람으로 인지할 필요가 있을까<span>?<span>&nbsp;</span></span>고객들이 오라클이라는 가상의 중재 직원한테 요청하면<span>,<span>&nbsp;</span></span>우리가 각각 여유가 있을 때 오라클의 역할을 하면서 역할극을 수행하면 어떨까<span>?<span>&nbsp;</span></span>물론 이 가정은 바뀐 이 시스템이 우리가 각각 일하는 개별 상황보다 좀 더 비용이나 성능 측면에서 최대한 효율적으로 시너지와 부가가치를 일으킬 수 있다는 보장이 되어야 한다는 조건이 있긴 하다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><b><span>1.2<span>&nbsp;</span></span></b><b><span>프로세스와 쓰레드</span></b></h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 앞의 심부름센터 회사<span>(</span>결국은 꽤 큰 컨설팅 회사가 된듯하지만<span>)<span>&nbsp;</span></span>얘기가 나름 그럴듯하게 들렸다면<span>,<span>&nbsp;</span></span>비슷한 상황이 컴퓨터의 세상에서도 마찬가지로 일어나게 된다<span>.<span>&nbsp;</span></span>처음에 만들어진 컴퓨터는 현재 있는 멀티 코어 형태의 컴퓨터가 아닌<span><span>&nbsp;</span>CPU<span>&nbsp;</span></span>안에 하나의 코어만 존재하는 막 창업한<span>&nbsp;</span><span>1</span>인 심부름 센터 같은 상황이었을 것이다<span>.<span>&nbsp;</span></span>해당 상황에서 처음엔 절차적으로 한 개씩의 작업을 수행하다가<span>(</span>아주 옛날의 긴 종이 형태의 구멍이 뚫린 테이프 입력을 사용하던 컴퓨터를 생각해 보자), 이후 점점 입력기와 처리 로직이 세련되어 감으로서<span>(</span>사실 이것도 유연성을 확보하기 위한 가상화라고 볼 수도 있다<span>)<span>&nbsp;</span></span>급한일을 하다 가도 시간의 여유가 생기면<span>(</span>컴퓨터 세상에서는 흔히<span>&nbsp;</span><span>&ldquo;I/O<span>&nbsp;</span></span>기반 업무&rdquo;라고 칭한다<span>)<span>&nbsp;</span></span>중간중간 다른 일을 끼워 넣어 할 수 있었을 것이다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 프로그램은 최초에 하나의 프로세스라는 단위로 메모리 상에 만들어져 실행되게 되어 있었지만<span>,<span>&nbsp;</span></span>이후 프로세스는 내부에 작은 할 일 단위로 나눠진 쓰레드 란 서브 일꾼들을 보유하게 되었다<span>(</span>앞의 마지막 단계에서 나온 개인이 구분되지 않는 이상적인 오라클 일꾼의 명시적 형태라고 생각해 보자<span>).<span>&nbsp;</span></span>굳이 고객이 심부름센터에 와서 담당자와 직접 얘기하지 않아도 일만 전달해 준다면 누군가 한가한 사람이 수행할 수 있게 되듯이<span>, CPU</span>는 엉덩이가 무거운 프로세스라는 대상 들과 얘기하며 일을 하던 방식을 버리고<span>,<span>&nbsp;</span></span>상대적으로 가벼운 쓰레드라는 단위를 대상으로 필요한 작업을 처리하게 되었다<span>(</span>현재의<span><span>&nbsp;</span>OS</span>들에서<span><span>&nbsp;</span>CPU</span>는 프로세스와 직접 일을 하진 않고<span>,<span>&nbsp;</span></span>멀티 프로세싱이라 하더라도 해당 프로세스의 하나뿐인 쓰레드와 같이 일을 한다고 한다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 여기에 여러 직원을 고용하게 된 심부름센터처럼 하나의<span><span>&nbsp;</span>CPU<span>&nbsp;</span></span>내에 여러 개의 일할 수 있는 코어가 있는 멀티 코어<span><span>&nbsp;</span>CPU<span>&nbsp;</span></span>가 나오게 되어 위의 프로세스-쓰레드의 관계를 조합해서<span>&nbsp;</span><span>CPU<span>&nbsp;</span></span>안의 코어들을 알차게 쓰기 위한 여러 전략<span>(</span>멀티 프로세싱<span>,<span>&nbsp;</span></span>멀티 쓰레드)들이 나타나게 된다<span>.<span>&nbsp;</span></span>또한 설문 조사 건처럼 너무 복잡하진 않지만 병렬적인 부분이 필수적으로 요구되는 부분들은<span><span>&nbsp;</span>GPU</span>에 의뢰하여 병렬로 빠르게 수행하게도 되었다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 반면에 고객이 스스로 요청 건의 우선순위를 정리해 업무 효율화를 추구한 것처럼<span>,<span>&nbsp;</span></span>프로그래밍 측면에서도<span><span>&nbsp;</span>CPU</span>만 믿고 커뮤니케이션 비용을 소모하기는 싫다는 움직임에 따라 코루틴과 같이 하나의 쓰레드 만을 계속 사용하면서도 프로그램 내부적으로 중요한 업무를<span>&nbsp;</span><span>&ldquo;CPU<span>&nbsp;</span></span>기반 업무<span>&rdquo;<span>&nbsp;</span></span>인지<span>&nbsp;</span><span>&ldquo;IO<span>&nbsp;</span></span>기반 업무<span>&rdquo;<span>&nbsp;</span></span>인지를 고려해 자체 스케줄링 하여<span>&nbsp;</span><span>CPU</span>와 독립적으로 동시성 최적화를 하는 움직임도 진행되고 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 결국 하드웨어<span>,<span>&nbsp;</span></span>운영체제<span>,<span>&nbsp;</span></span>프로그래밍<span><span>&nbsp;</span>3</span>개의 측면에서 나름 비싼 컴퓨터 하드웨어를 최대한으로 사용하여 최대의 이익을 만들어 내려는 기술적인 노력이 공동으로 일어나고 있다고 볼 수 있다<span>. CPU</span>는 좀 더 최적화된 명령어 배치 및 하드웨어적 연산의 효율화를 통해서<span>, GPU</span>는 병렬에 최적화된 다수의 프로세서 묶음을 이용한 동시 연산을 통해서<span>,<span>&nbsp;</span></span>운영체제는 프로세스와 쓰레드의 최적화된 관리를 통해서<span>,<span>&nbsp;</span></span>프로그램은 자신이 할 일들의 최적화된 의뢰를 통해서 각각 열심히 협업을 하고 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 여기에 더 나아가서 여러 개의<span><span>&nbsp;</span>CPU,<span>&nbsp;</span></span>여러 개의 서버에 대해서 마치<span><span>&nbsp;</span>CPU<span>&nbsp;</span></span>내의 코어를 병렬 관리한 것과 비슷하게 동시성 관리를 추구하는 경우도 있게 된다<span>(</span>마치 여러 개의 팀으로 나누거나 여러 회사가 협력해 하나의 사람처럼 일을 하듯이 말이다<span>). M365<span>&nbsp;</span></span>나<span><span>&nbsp;</span>IOS<span>&nbsp;</span></span>같이 운영체제<span>,<span>&nbsp;</span></span>클라우드<span>,<span>&nbsp;</span></span>인증을 이용해 밀접하게 설계된 요즈음의 소프트웨어 환경들을 보면<span>,<span>&nbsp;</span></span>인터넷에 연결된 컴퓨터들이 누군가의 관찰 하에 마치 하나의 컴퓨터처럼 움직이는 세상이 되었다는 생각도 들기도 한다<span>.<span>&nbsp;</span></span>개인적으로는 이러한 부분들을 보면 마치 아래에 나오는 꼭두각시 인형극의 한 장면이 생각난다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"513\" data-origin-height=\"513\"><span data-url=\"https://blog.kakaocdn.net/dn/cVSUNM/btsH0b0vQDW/4sQk10N20hxaTL0L0otGNK/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-3&amp;nbsp; 꼭두깍시 인형극 ]\"><img src=\"https://blog.kakaocdn.net/dn/cVSUNM/btsH0b0vQDW/4sQk10N20hxaTL0L0otGNK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcVSUNM%2FbtsH0b0vQDW%2F4sQk10N20hxaTL0L0otGNK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"388\" height=\"388\" data-origin-width=\"513\" data-origin-height=\"513\"/></span><figcaption>[ 그림 &nbsp;2-3&nbsp; 꼭두깍시 인형극 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><b><span>1.3<span>&nbsp;</span></span></b><b><span>프로세스와 쓰레드,&nbsp;코루틴<span>, GPU -<span>&nbsp;</span></span>파이썬 예제</span></b></h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span><span>&nbsp;</span><span>&nbsp;</span></span>그럼 여기서 잠시 기술적인 측면으로 넘어가서 파이썬 코드를 이용해 앞에서 얘기한<span>&nbsp;</span><span>CPU, OS<span>&nbsp;</span></span>측면의 프로세스/쓰레드의 동작과 프로그래밍 측면의 코루틴<span>, GPU</span>측면에서의 병렬 연산에 대해서 간단히 살펴보도록 하자<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 우선 프로세스가 무언지 살펴보자<span>.<span>&nbsp;</span></span>리눅스도 비슷하지만 윈도우 작업관리자의 세부 정보 탭을 보면 운영 체제 내부 및 우리가 사용하고 있는 프로그램에 대한 프로세스들이 다양하게 리스트업 되어 있다<span>.<span>&nbsp;</span></span>아래 작업 관리자 창의<span>&nbsp;</span><span>&ldquo;</span>세부 정보<span>&rdquo;<span>&nbsp;</span></span>탭을 보면 지금 이 글을 쓰고 있는<span>&nbsp;</span><span>MS<span>&nbsp;</span></span>워드<span>(WINWORD.EXE)<span>&nbsp;</span></span>프로그램의 프로세스도 같이 보이고 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"505\" data-origin-height=\"392\"><span data-url=\"https://blog.kakaocdn.net/dn/A1696/btsH1lOl6rh/8D3xqcw6rZ3q7cKZSKEAc0/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/A1696/btsH1lOl6rh/8D3xqcw6rZ3q7cKZSKEAc0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FA1696%2FbtsH1lOl6rh%2F8D3xqcw6rZ3q7cKZSKEAc0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"429\" height=\"333\" data-origin-width=\"505\" data-origin-height=\"392\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><b><span>1)<span>&nbsp;</span></span>멀티 프로세스 동작 보기</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그럼 첫 번째로 멀티 프로세스의 동작을 간단히 봐 보자<span>.<span>&nbsp;</span></span>앞서 얘기한 여러 직원들이 동시에 일을 하는 상황이다<span>.<span>&nbsp;</span></span>아래의 파이썬 코드를 보면 우리가 상황을 찬찬히 살펴보기 위한 시간을 벌기 위해서<span>, 20</span>회에 걸쳐<span><span>&nbsp;</span>10</span>초씩 쉬면서 자신의 프로세스 이름과 아이디를 프린트하는<span>&nbsp;&ldquo;work&rdquo;라는</span> 메서드가 정의되어있다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그 아래 부분을 보면 해당<span><span>&nbsp;work라는</span></span> 일을 하는 프로세스를<span><span>&nbsp;</span>3</span>개 생성한다<span>(</span>실제로는 현재의 운영 체제들은 프로세스 내에 최소<span>&nbsp;</span><span>1</span>개의 쓰레드를 만들기 때문에 해당 일이 그 쓰레드에 할당되어<span><span>&nbsp;CPU에게</span></span> 의뢰될 것이다<span>).<span>&nbsp;</span></span>멀티 프로세스를 띄우는 파이썬 프로그램 자체도 역시 프로세스 일 것이기 때문에 가장 바깥의 메인 프로그램 코드 내에도 프로세스 이름과 아이디를 출력하게 했다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"color: #333333; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td width=\"601\"><span><span>from multiprocessing import Process, current_process</span></span><br /><span><span>from time import sleep</span></span><br /><span><span>&nbsp;</span></span><br /><span><b><span>def work():</span></b></span><br /><span><span>&nbsp; &nbsp; # 20</span>회에 걸쳐<span><span>&nbsp;</span>10</span>초씩 쉬면서 루프 번호<span>,<span>&nbsp;</span></span>프로세스 이름<span>,<span>&nbsp;</span></span>프로세스 아이디를 출력한다<span>.</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span><b>for i in range(10):</b></span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span><b>print(str(i) + \": \" + current_process().name + \"-\" + str(current_process().pid))</b></span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span><b>sleep(10)</b></span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>return</span></span><br /><span><span>&nbsp;</span></span><br /><span><b><span>if __name__ == \"__main__\":</span></b><span><br /><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>#<span>&nbsp;</span></span>메인 프로그램의 프로세스 이름과 아이디를 출력한다<span>.</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span><b>print(\"main: \" + current_process().name + \"-\" + str(current_process().pid))</b></span></span><br /><span><span>&nbsp;</span></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span># work<span>&nbsp;</span></span>프로세스를 등록 한다<span>.</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p1 = Process(target=work)</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p2 = Process(target=work)</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p3 = Process(target=work)</span></b></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;</span></span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>#<span>&nbsp;</span></span>각각의 프로세스를 병렬로 실행한다<span></span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p1.start()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p2.start()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p3.start()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p1.join()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p2.join()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>p3.join()</span></span></td>\n</tr>\n</tbody>\n</table>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 프로그램을 실행해 보면 아래와 같이 출력이 된다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"color: #333333; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td width=\"601\"><span><span>c:\\Python\\Code\\Blog&gt;<b>python ch2_multi_process.py</b></span></span><br /><span><i><span>main: MainProcess-3636</span></i></span><br /><span><i><span>0: Process-1-1004</span></i></span><br /><span><i><span>0: Process-2-8032</span></i></span><br /><span><i><span>0: Process-3-4036</span></i></span><br /><span><i><span>1: Process-1-1004</span></i></span><br /><span><i><span>1: Process-2-8032</span></i></span><br /><span><i><span>1: Process-3-4036</span></i></span><br /><span><i><span>&hellip;</span></i><span></span></span></td>\n</tr>\n</tbody>\n</table>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 이 부분을 아까 봤던 작업관리자를 통해 보게 되면 아래와 같이<span>&nbsp;</span><span>4</span>개의 파이썬 프로세스가 보이게 된다<span>.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"462\" data-origin-height=\"298\"><span data-url=\"https://blog.kakaocdn.net/dn/oV1ph/btsH17Wpk1Z/HqOfnx6XynYpJODeQ0zUfk/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/oV1ph/btsH17Wpk1Z/HqOfnx6XynYpJODeQ0zUfk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FoV1ph%2FbtsH17Wpk1Z%2FHqOfnx6XynYpJODeQ0zUfk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"409\" height=\"264\" data-origin-width=\"462\" data-origin-height=\"298\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그런데 위의 화면으로는 자세한 실행 상황을 보기가 조금 힘들기 때문에 조금 더 상황을 자세히 보여주는<span>&nbsp;</span><span>MS</span>에서 제공하는 프로세스 탐색기<span>(Process Explorer)라는</span> 툴을 통해서 봐 보자<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"938\" data-origin-height=\"225\"><span data-url=\"https://blog.kakaocdn.net/dn/bQcDmL/btsH0Alaog9/jIEozuXdZ3VjVWvY5aITy0/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/bQcDmL/btsH0Alaog9/jIEozuXdZ3VjVWvY5aITy0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbQcDmL%2FbtsH0Alaog9%2FjIEozuXdZ3VjVWvY5aITy0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"938\" data-origin-height=\"225\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 해당 유틸리티로 보게 되면 메인 프로세스인<span>&nbsp;3636번을</span> 기준으로<span><span>&nbsp;</span>3</span>개의 서브 프로세스들이 생성되어 돌아가고 있음을 트리 형태로 볼 수 있다<span>.<span>&nbsp;</span></span>첫 번째<span><span>&nbsp;</span>python.exe<span>&nbsp;</span></span>서브 프로세스<span>(1004)</span>를 더블 클릭해<span><span>&nbsp;</span>Threads<span>&nbsp;</span></span>탭을 보면 해당 프로세스에 속한<span><span>&nbsp;</span>1</span>개의 쓰레드(16408)가 돌아가고 있는 것을 볼 수 있다<span>(</span>아까 얘기했듯이 요즈음의 운영체제에서는<span><span>&nbsp;</span>CPU</span>가 프로세스와 직접 업무에 관해 대화하지 않고 쓰레드를 통해서 작업을 진행한다고 한다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><b><span>2)<span>&nbsp;</span></span>멀티 쓰레드 동작 보기</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 두 번째로 멀티 쓰레드 동작을 보자<span>.<span>&nbsp;</span></span>멀티 프로세스 대신 쓰레드를 사용하는 경우의 장점은 아무래도 프로세스를 왔다 갔다 바꾸면서 일하는 것보다는 쓰레드를 교체하면서 일하는 게 작업 전환 시 노력이 적게 들고<span>,<span>&nbsp;</span></span>자원도 적게 필요해 유리하다고 한다<span>(</span>앞의 심부를 센터에서 고객을 계속 바꿔가며 얘기하는 것보다<span>,<span>&nbsp;</span></span>고객의 일만을 추상화해서 한 사람이 교대로 처리하는 게 더 효율적인 것과 비슷하다고 볼 수 있다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 다만 항상 장점만 있는 거는 아니라 쓰레드 사이의 데이터 공유가 좀 더 까다롭고<span>,<span>&nbsp;</span></span>정말로<span>&nbsp;</span><span>CPU</span>를 극한으로 쓰는 무거운 일들만 처리한다면<span>,<span>&nbsp;</span></span>절대적으로 일이 많은 한 사람이 아무리 열심히 이리저리 궁리하며 일해도 한계가 있듯이 하나의 프로세스의 처리 능력 범위를 넘어가진 못 하며<span>,<span>&nbsp;</span></span>오히려 쓰레드 전환 시의 커뮤니케이션 비용에 의해 성능이 떨어질 수 있다는 한계는 있다<span>.<span>&nbsp;</span></span>아래 코드를 보면 앞의 멀티 프로세스 코드와 거의 비슷하고<span>,<span>&nbsp;</span></span>프로세스 생성 대신에 쓰레드를 만드는 부분만 다른 것을 알 수 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"color: #333333; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td width=\"601\"><span><span>from threading import Thread, current_thread, get_ident</span></span><br /><span><span>from multiprocessing import Process, current_process</span></span><br /><span><span>from time import sleep</span></span><br /><span><span>&nbsp;</span></span><br /><span><b><span>def work():</span></b><span><br /><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span># 20</span>회에 걸쳐<span><span>&nbsp;</span>10</span>초씩 쉬면서 루프 번호<span>,<span>&nbsp;</span></span>프로세스 정보<span>,<span>&nbsp;</span></span>쓰레드 정보를 출력한다<span>.</span></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>for i in range(20):</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>print(str(i) + \": \" + current_process().name + \"-\" + str(current_process().pid) + \"-\" + current_thread().name + \"-\" + str(get_ident()))</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>sleep(10)</span></b></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>return</span></span><br /><span><span>&nbsp;</span></span><br /><span><span>if __name__ == \"__main__\":</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>#<span>&nbsp;</span></span>메인 프로세스의 루프 번호<span>,<span>&nbsp;</span></span>프로세스 정보<span>,<span>&nbsp;</span></span>쓰레드 정보를 출력한다<span>.</span></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>print(\"main: \" + current_process().name + \"-\" + str(current_process().pid) + \"-\" + current_thread().name + \"-\" + str(get_ident()))</span></b></span><br /><span><span>&nbsp;</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span># work<span>&nbsp;</span></span>쓰레드를 등록하고 실행한다<span>.</span></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th1 = Thread(target=work)</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th2 = Thread(target=work)</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th3 = Thread(target=work)</span></b></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;</span></span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th1.start()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th2.start()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th3.start()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th1.join()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th2.join()</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>th3.join()</span></span></td>\n</tr>\n</tbody>\n</table>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 역시 실행을 해보고<span>&nbsp;</span><span>Process Explorer</span>를 살펴보면 하나의 프로세스 번호<span>(9448)<span>&nbsp;</span></span>밑에 메인 쓰레드<span><span>&nbsp;</span>1</span>개<span>(16576)</span>와 작업 용인 서로 다른 서브 쓰레드<span><span>&nbsp;</span>3</span>개가 실행됨을 알 수 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"color: #333333; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td width=\"601\"><span><span>c:\\Python\\Code\\Blog&gt;<b>python ch2_multi_thread.py</b></span></span><br /><span><i><span>main: MainProcess-9488-MainThread-16576</span></i></span><br /><span><i><span>0: MainProcess-9488-Thread-1 (work)-16532</span></i></span><br /><span><i><span>0: MainProcess-9488-Thread-2 (work)-4640</span></i></span><br /><span><i><span>0: MainProcess-9488-Thread-3 (work)-1896</span></i></span><br /><span><i><span>1: MainProcess-9488-Thread-1 (work)-16532</span></i></span><br /><span><i><span>1: MainProcess-9488-Thread-2 (work)-4640</span></i></span><br /><span><i><span>1: MainProcess-9488-Thread-3 (work)-1896</span></i></span><br /><span><i><span>&hellip;</span></i><span></span></span></td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"900\" data-origin-height=\"260\"><span data-url=\"https://blog.kakaocdn.net/dn/elpbuw/btsH2CV1vVC/NDqKuc5hRoXv78SawX7W4K/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/elpbuw/btsH2CV1vVC/NDqKuc5hRoXv78SawX7W4K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Felpbuw%2FbtsH2CV1vVC%2FNDqKuc5hRoXv78SawX7W4K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"900\" data-origin-height=\"260\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"color: #333333; text-align: start;\">&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"color: #333333; text-align: start;\">&nbsp; ※ 참고로 파이썬(표준인 CPython)에서의 멀티쓰레드는 GIL(Global Interpreter Lock)이라는 제약이 있어서, 멀티 코어를 보유한 상태에서도 오직 한 개의 쓰레드만 동시에 동작할 수 있어서 진정한 의미의 멀티쓰레드는 아니라고 평가되고는 있다. 그래서<span>&nbsp;</span></span>위의 코드는 현재로서는 타 언어에서 하나의 코어로 멀티쓰레딩을 하는 효과 정도가 있을 것 같다. 이 부분은 파이썬으로 개념을 쉽게 보여주기 위한 코드라고 생각해 주면 좋겠고,<span style=\"color: #333333; text-align: start;\"><span><span>&nbsp;</span>파이썬 3.13 버전에서는 이 GIL 제약을 disable 하는 옵션이 제공(기존 라이브러리와 쓰레드 호환성 문제는 생길 수 있다)될 것이라고 하니, 수개월 후에는 이런 상황이 조금은 변할 듯도 싶다^^&nbsp;</span></span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><b><span>3)<span>&nbsp;</span></span>프로그램 내에서의 멀티 테스킹(코루틴)&nbsp;동작 보기</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 세 번째는 아까 얘기한 고객 회사 내부에서 나름대로의 우선순위를 정해 요청하는 부분을 생각해 보자<span>.<span>&nbsp;</span></span>개발 쪽에서 많이 얘기하는 보통 코루틴이나 가상 쓰레드 라는 용어가 여기에 해당될 것 같다<span>.<span>&nbsp;</span></span>코드는 앞의 형태와 비슷하게 만들게 되어있어서<span><span>&nbsp;count라는</span></span> 메서드를 정의해서 마찬가지로<span><span>&nbsp;ayncio라는</span></span> 쪽에 태스크를 등록한다<span>.<span>&nbsp;</span></span>역시 이것도 실행 중간에<span>&nbsp;</span><span>100</span>초의 시간을 주어 관찰할 시간을 확보했다<span>.</span></p>\n<table style=\"color: #333333; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td width=\"601\"><span><span>import asyncio</span></span><br /><span><span>&nbsp;</span></span><br /><span><span># count<span>&nbsp;</span></span>업무 정의<span></span></span><br /><span><b><span>async def count():</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>print(\"One\")</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>await asyncio.sleep(100)</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>print(\"Two\")</span></b></span><br /><span><span>&nbsp;</span></span><br /><span><span># count<span>&nbsp;</span></span>업무 등록해 실행<span></span></span><br /><span><span>async def main():</span></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>task1 = asyncio.create_task(count())</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>task2 = asyncio.create_task(count())</span></b></span><br /><span><b><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>task3 = asyncio.create_task(count())</span></b></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>await task1</span></span><br /><span><span><span>&nbsp;&nbsp;&nbsp;<span>&nbsp;</span></span>await task2</span></span><br /><span><span>&nbsp;</span></span><br /><span><span>asyncio.run(main())</span></span></td>\n</tr>\n</tbody>\n</table>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 실행을 해보고<span><span>&nbsp;</span>Process Explorer</span>를 살펴보면 하나의 프로세스 번호 밑에 메인 쓰레드&nbsp;1개만 달랑있는 상태가 보인다<span>.<span>&nbsp;</span></span>동시에 실행되고 있는 결과로 추정하기에는 아마도 프로그램 쪽에서 알아서 스케줄을 조정해 병렬 수행을 수행하고 있을 것이다<span>.<span>&nbsp;</span></span>하나 특이한 건<span><span>&nbsp;mswsock, dll이라는</span></span> 소켓 관련 라이브러리를 이용하여 내부적으로 동시성을 관리하는 것도 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"color: #333333; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td width=\"601\"><span><span>c:\\Python\\Code\\Blog&gt;<b>python ch2_ayncio.py</b></span></span><br /><span><i><span>One</span></i></span><br /><span><i><span>One</span></i></span><br /><span><i><span>One</span></i></span><br /><span><i><span>Two</span></i></span><br /><span><i><span>Two</span></i></span><br /><span><i><span>Two</span></i><span></span></span></td>\n</tr>\n</tbody>\n</table>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"893\" data-origin-height=\"225\"><span data-url=\"https://blog.kakaocdn.net/dn/sjEye/btsH1FFUFEe/PDzwkQWM4P7w7jukn7yUqK/img.png\" data-lightbox=\"lightbox\"><img src=\"https://blog.kakaocdn.net/dn/sjEye/btsH1FFUFEe/PDzwkQWM4P7w7jukn7yUqK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FsjEye%2FbtsH1FFUFEe%2FPDzwkQWM4P7w7jukn7yUqK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"893\" data-origin-height=\"225\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><b><span>4) GPU</span>를 이용한 병렬 연산 비교하기</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 마지막으로 멀티태스킹 쪽은 아니지만<span>,<span>&nbsp;</span></span>같은 병렬로 작업 속도를 높인다는 측면에서 이전 글에서 얘기한<span><span>&nbsp;</span>GPU</span>에 대한 예제를 하나 보려 한다<span>. GPU</span>는 얘기했듯이<span><span>&nbsp;</span>CPU<span>&nbsp;</span></span>보다 일반적인 연산은 느리지만<span>,<span>&nbsp;</span></span>보유한 수많은 코어를 이용해 병렬 연산에 대해서 빠르게 수행할 수 있는 컴퓨터 부품이다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 아래는<span><span>&nbsp;</span>CPU</span>를 이용하는 기존 파이썬 수치 연산 라이브러리인<span>&nbsp;Numpy와&nbsp;RTX 3600<span>&nbsp;</span></span>그래픽 카드의<span><span>&nbsp;</span>GPU</span>를 이용하는<span>&nbsp;</span><span>CUDA<span>&nbsp;</span></span>라이브러리를 통해 동가의 연산을 수행할 수 있는<span>&nbsp;Cupy를</span> 이용해<span><span>&nbsp;</span>10000*10000</span>개의 행렬에 대한 곱 연산을 수행하는 예제이다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"color: #333333; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td width=\"601\"><span><span>import numpy as np</span></span><br /><span><span>import cupy as cp</span></span><br /><span><span>import time</span></span><br /><span><span>&nbsp;</span></span><br /><span><span>#<span>&nbsp;</span></span>테스트 용<span><span>&nbsp;</span>10000*10000<span>&nbsp;</span></span>행렬을 만든다<span></span></span><br /><span><span>N = 10000</span></span><br /><span><span>np_matrix_1 = np.random.rand(N,N)</span></span><br /><span><span>np_matrix_2 = np.random.rand(N,N)</span></span><br /><span><span>cp_matrix_1 = cp.random.rand(N,N)</span></span><br /><span><span>cp_matrix_2 = cp.random.rand(N,N)</span></span><br /><span><span>&nbsp;</span></span><br /><span><span>#<span>&nbsp;</span></span>일반적인<span><span>&nbsp;</span>CPU<span>&nbsp;</span></span>연산을 이용하는<span>&nbsp;</span><span>Numpy<span>&nbsp;</span></span>라이브러리를 통해 두 개의 행렬을 곱한다<span>.</span></span><br /><span><b><span>np_start = time.time()</span></b></span><br /><span><b><span>np.matmul(np_matrix_1, np_matrix_2, out=None)</span></b></span><br /><span><b><span>np_end = time.time()</span></b></span><br /><span><span>&nbsp;</span></span><br /><span><span># CUDA<span>&nbsp;</span></span>라이브러리를 통해<span><span>&nbsp;</span>GPU<span>&nbsp;</span></span>연산을 이용하는<span>&nbsp;</span><span>Cupy<span>&nbsp;</span></span>라이브러리를 통해 두 개의 행렬을 곱한다<span>.</span></span><br /><span><b><span>cp_start = time.time()</span></b></span><br /><span><b><span>cp.matmul(cp_matrix_1, cp_matrix_2, out=None)</span></b></span><br /><span><b><span>cp_end = time.time()</span></b></span><br /><span><span>&nbsp;</span></span><br /><span><span>#<span>&nbsp;</span></span>각각 소요된 시간을 측정 한다<span>.</span></span><br /><span><span>print(\"NP runtime: \" + str(np_end - np_start))</span></span><br /><span><span>print(\"CP runtime: \" + str(cp_end - cp_start))</span></span></td>\n</tr>\n</tbody>\n</table>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 위의 코드를 실행하면 실행할 때마다 아마도 캐싱 등에 따라 시간은 좀 차이 나지만<span>,<span>&nbsp;</span></span>아래와 같이<span><span>&nbsp;</span>CPU</span>에 비해서 꽤 빠르게 실행되는<span><span>&nbsp;</span>GPU</span>의 모습을 볼 수 있다<span>.<span>&nbsp;</span></span>다른 한편으로는 이렇게 보니 코어 수는<span><span>&nbsp;</span>RTX 3060 모델의&nbsp;3584</span>개와 비교할 때 물리코어가<span><span>&nbsp;</span>6</span>개인<span><span>&nbsp;</span>CPU(597</span>배 차이<span>)</span>가 속도는<span><span>&nbsp;</span>10<span>&nbsp;</span></span>배 정도밖에 차이가 나지 않아서<span>&nbsp;</span><span>CPU<span>&nbsp;</span></span>도 게임으로 따지면 수많은<span>&nbsp;</span><span>GPU<span>&nbsp;</span></span>군사들과 대적할 수 있는 소수의 일당백의 에픽 무장 들이라고도 볼 수 있을 듯도 싶다<span>^^;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<table style=\"color: #333333; text-align: start; border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td width=\"601\"><span><span>c:\\Python\\Code\\Blog&gt;<b>python numpy_vs_cupy.py</b><br /><i>NP runtime: 7.810051202774048<br />CP runtime: 0.9222331047058105</i></span></span></td>\n</tr>\n</tbody>\n</table>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><b><span>1.4<span>&nbsp;</span></span></b><b><span>가상 머신</span></b></h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그다음의 가상화 단계는 개인적으로는 여러 프로그래밍 언어에서 나온 가상머신 개념이라고 생각한다<span>.<span>&nbsp;</span></span>자바나 파이썬<span>,<span>&nbsp;요즘의&nbsp;.NET</span> CORE<span>&nbsp;</span></span>같은 언어들은 윈도우,&nbsp;리눅스 등 종류에 상관없이 공통의 코드 실행이 가능한 표준 가상 환경을 제공하여 동일한 코드로 동일한 동작을 하도록 지원한다<span>.<span>&nbsp;</span></span>다만 해당 부분이<span><span>&nbsp;</span>100%<span>&nbsp;</span></span>호환이 라기보다는<span>&nbsp;</span><span>&ldquo;OS</span>의 설계에 맞춰서 최대한&rdquo;이라고 하는 것이 맞을 것 같다<span>.<span>&nbsp;</span></span>예로서 앞에서 봤던 멀티 프로세싱 관련 코드는 윈도우와 리눅스 상에서 운영 체제가 서로 멀티 프로세스를 처리하는 방식이 달라서 실제 만들어 보면 조금은 상이하게 동작하기도 한다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 또한<span>&nbsp;</span><span>&ldquo;</span>종류에 상관없이&rdquo;라는 부분도 실제로 해당 언어를 유지 보수하는 쪽에서 특정<span><span>&nbsp;</span>OS<span>&nbsp;</span></span>와의 호환성에 맞춰 표준 환경을 만들어 배포하겠다는 의지와 리소스가 있어야 가능한 것 같다<span>.<span>&nbsp;</span></span>그래서 이상적으로는<span><span>&nbsp;</span>OS<span>&nbsp;</span></span>종류와 관계없이 돌아가야 하겠지만<span>,<span>&nbsp;</span></span>실제 적으로는 지원하는<span><span>&nbsp;</span>OS</span>에 한해서 최대한 비슷하게 가 맞을 것은 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 왜 이 부분을 가상화에 있어 의미 있는 부분이라고 생각하냐면<span>,<span>&nbsp;</span></span>이 경우 처음에는 속도 측면에서는 컴퓨터 아키텍처에 맞춘 기존의<span>&nbsp;</span><span>C<span>&nbsp;</span></span>보다 느려 비효율 적이라는 얘기도 있었지만<span>,<span>&nbsp;</span></span>결국은 하드웨어의 발전으로 해당 우려는 사라졌고<span>,<span>&nbsp;</span></span>프로그램이라는 것이 컴퓨터 아키텍처와 별개로 임의의 논리적인 형태로 존재하고 실행될 수 있는 가상적인 존재라는 것을 자연스럽게 받아들이게 된 계기라고 생각한다<span>.<span>&nbsp;</span></span>더 나아가 프로그램이 이렇게 가능하다면 그 프로그램을 실행시키는<span><span>&nbsp;</span>OS<span>&nbsp;</span></span>또한 프로그램이다 보니 마찬가지가 아닐까라고 생각하게 되지 않았을까 싶다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 처음엔 각각 개별의 충전기를 사용해 사용하던 부분이 하나의 멀티 충전기로 여러 개의 다른 장비를 충전할 수 있게 됐 듯이<span>,<span>&nbsp;</span></span>컴퓨터 안의 논리적인 특정 객체로 형상화할 수만 있다면 컴퓨터 아키텍처의 종류<span>, OS</span>의 종류와 관계없이 유연한 소프트웨어 형태로 존재할 수 있다고 생각하게 된 부분이 현재에 추구되는 가상화와 비슷하지 않은가 싶다(마무리 작업을 하다 보니 플스, 엑스박스, 스위치, 모바일, PC, 등 여러 플랫폼에서 돌아가는 게임 타이틀이 더 적절한 비유일 듯도 싶다^^)<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"376\" data-origin-height=\"376\"><span data-url=\"https://blog.kakaocdn.net/dn/u2fc8/btsH089A7wa/lMNI8nKowGHnxyc79eHKU1/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-4&amp;nbsp; 멀티 충전기 ]\"><img src=\"https://blog.kakaocdn.net/dn/u2fc8/btsH089A7wa/lMNI8nKowGHnxyc79eHKU1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fu2fc8%2FbtsH089A7wa%2FlMNI8nKowGHnxyc79eHKU1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"355\" height=\"355\" data-origin-width=\"376\" data-origin-height=\"376\"/></span><figcaption>[ 그림 &nbsp;2-4&nbsp; 멀티 충전기 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><b><span>1.5<span>&nbsp;</span></span></b><b><span>가상 컴퓨터</span></b></h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그다음의 가상화 단계로<span><span>&nbsp;</span>Hyper-V<span>&nbsp;</span></span>나<span>&nbsp;</span><span>VirtualBox, VMWARE, Nutanix<span>&nbsp;</span></span>같은 툴로 가상화된 컴퓨터가 있을 것이다<span>.<span>&nbsp;</span></span>앞의 심부름센터 얘기로 돌아가 보면 충분히 능력이 있는 특정한 사람이 있어서 일인 다 역을 수행하고 있다고 생각해 보자<span>.<span>&nbsp;</span></span>뭐 변장을 할 수도 있고 여러 온라인 커뮤니케이션 툴을 이용해서 이러한 역할을 할 수 있다<span>(</span>요즘 많이 이슈가 되는 로맨스 스캠 같은 경우도 먼 곳에서 사기꾼들은 이런 행동을 하고 있다고 볼 수 있다<span>.<span>&nbsp;</span></span>사기를 당하는 사람은 너무도 자연스럽게 서로 다른 사람처럼 바꿔가며 동시에 일을 수행하는 스파이의 행위 때문에 여러 명을 동시에 만나는 것으로 착각하고 만남을 지속하게 될 것이다)<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"518\" data-origin-height=\"522\"><span data-url=\"https://blog.kakaocdn.net/dn/bldDUn/btsH0xvifY1/KY7mqEN3dSuukn9QlMkVtk/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-5&amp;nbsp; 일인 다 역의 스파이 ]\"><img src=\"https://blog.kakaocdn.net/dn/bldDUn/btsH0xvifY1/KY7mqEN3dSuukn9QlMkVtk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbldDUn%2FbtsH0xvifY1%2FKY7mqEN3dSuukn9QlMkVtk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"411\" height=\"414\" data-origin-width=\"518\" data-origin-height=\"522\"/></span><figcaption>[ 그림 &nbsp;2-5&nbsp; 일인 다 역의 스파이 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 점점 컴퓨터의 성능이 빨라지게 되며 많은 가동 시간 동안 앞에 얘기한 프로세스<span>,<span>&nbsp;쓰레드,</span>&nbsp;</span>코루틴 등이 한가하게 놀고 있을 때쯤 가상화라는 화두가 점점 실제로 상용화가 되면서<span>,<span>&nbsp;윈도우</span></span> 컴퓨터에서 리눅스와 윈도우를 동시에 돌린다거나<span>,<span>&nbsp;</span></span>맥 컴퓨터에서 윈도우를 동시에 돌리는 등의 가상화 기술과 소프트웨어들이 생겨나기 시작했다<span>(</span>사실 이것 이전에도 시간적으로는 현대의 가상화 환경처럼 동시적으로 동작하는 건 아니지만 멀티 부트 로더나 고스트 같은<span><span>&nbsp;</span>OS<span>&nbsp;</span></span>이미지의 백업<span>,<span>&nbsp;</span></span>복원 소프트웨어를 통해 여러 종류의 윈도우나 리눅스로 자유롭게 부팅을 하거나<span>,<span>&nbsp;</span></span>시스템의 특정 시점으로 복원하는 일도 유행했다<span>.<span>&nbsp;</span></span>이 부분들도 현대적 가상화의 전 단계라고 볼 수 있을 듯은 싶다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 추가로 하나의 컴퓨터 안을 나누어 여러<span><span>&nbsp;</span>OS</span>를 동시에 돌리던 부분에서 확장하여<span>,<span>&nbsp;</span></span>여러 컴퓨터 하드웨어를 최적화하여 그룹 형태로 구축 후<span>,<span>&nbsp;</span></span>다양한<span><span>&nbsp;</span>OS<span>&nbsp;</span></span>들을 해당 환경에서 생성하고 통합하며 관리하는 솔루션 들도 만들어졌다<span>.<span>&nbsp;</span></span>소프트웨어를 이용해 여러 물리적 컴퓨터 환경을 연결하는 가상화를 만들었다고 볼 수 있다<span>.<span>&nbsp;</span></span>물론 근래의 많은<span><span>&nbsp;</span>NoSQL,<span>&nbsp;</span></span>클러스터링 기반의 서비스들이 해당 부분을 비슷하게 구현하여 사용하지만<span>,<span>&nbsp;</span></span>이 여러 서버들을 합쳐 구축한 운영체제의 가상화부터 많은 사람들이 서버 군을 이용한 가상화에 익숙하게 되지 않았나 싶긴 한다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 다만 이런 가상화가 가능하게 된 근본적인 이유는 이전 글에서 얘기했 듯 컴퓨터 세상이 결국은<span>&nbsp;</span><span>0</span>과<span><span>&nbsp;</span>1</span>의 데이터로 이루어졌기 때문이 아닐까 싶다<span>.<span>&nbsp;</span></span>우리가 인지하는 여러 컴퓨터 부품들도 물리적 형태를 띠고 있기 하지만 하는 일은 정보의 저장 및 처리에 특화되어 있다<span>.<span>&nbsp;</span></span>그래서 여러 물리적인 컴퓨터 부품들의 데이터 저장 및 처리 과정을 실제 물리적인 구조와는 다르지만 비슷한 차원에서 흉내 낸다면 우리가 신기하게 생각하는 가상의 컴퓨터가 물리적인 컴퓨터 안에서 돌아가게 되는 일이 생기는 게 아닐까 싶다<span>(</span>유닛 테스트 쪽과 비교한다면 테스팅 어플의 스텁과 드라이브 같은 존재라고 할까<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 또한 우리가 생각하는 컴퓨터 부품이라는 것도 어찌 보면 몇 가지 분류로 비슷비슷한 감이 있다<span>.<span>&nbsp;</span></span>만약 램<span>, SSD,<span>&nbsp;</span></span>하드디스크<span>,<span>&nbsp;</span></span>레지스터 등의 속도와 가격이 비슷비슷 해지는 상황이 생긴다면 언젠간 현재의 메인 보드의 역할은 축소되고 하나의 칩 안에서 연산<span>,<span>&nbsp;</span></span>저장<span>,<span>&nbsp;</span></span>디스플레이 등의 모든 역할을 수행하는 세상이 올지도 모르겠다<span>.<span>&nbsp;</span></span>역시 이 부분도 컴퓨터 세상의 모든 것이 데이터를 처리하는 행위이기 때문에 가능한 부분이 아닐까 싶다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 다시 가상 컴퓨터 얘기 쪽으로 가면 이러한 가상화의 단점은 아무래도 구현된 대상이 가짜라는 것이다<span>.<span>&nbsp;</span></span>앞에서 본 컴퓨터 내부의 가상화도 마찬가지지만 실제 많은 경우 너무 스위칭이 빨라서 동시에 일어나는 것처럼 보인다는 것 이외에는<span>(</span>멀티 프로세싱은 조금 논쟁이 있을 듯하지만<span>),<span>&nbsp;</span></span>아무리 컴퓨터가 빠르더라도 상황에 따라 서로서로 영향을 미치게 될 가능성이 있다<span>.<span>&nbsp;</span></span>그래서 보통 비슷한 성능으로 표시되는 가상 컴퓨터는 물리 컴퓨터에 비해서 성능이 어느 정도는 떨어진다는 단점이 있다<span>.<span>&nbsp;</span></span>또한 현재의<span><span>&nbsp;OS와</span></span> 다른<span><span>&nbsp;</span>타입의 OS<span>&nbsp;</span></span>나<span><span>&nbsp;</span>다른 CPU<span>&nbsp;</span></span>아키텍처에서만 동작하는<span>&nbsp;OS</span>를 가상화하여 돌린다면 실행하는 하드웨어와의 최적화 이슈 때문에 더욱더 단점이 두드러지게 될 것이고 말이다(컴퓨터에서 돌리는 최신 기종의 게임 에뮬레이터를 생각해 보자)<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 추가로 개인이 아닌 상용으로 간다면 최대한 묶여 있는 컴퓨터 들을 알차게 써야 되는 입장에서 이러한 단점 부분은 아마 조금 더 두드러지게 될 것이다<span>.<span>&nbsp;</span></span>다만 멀티 프로세스나 쓰레드 등의 병렬처리 방식이<span><span>&nbsp;</span>IO<span>&nbsp;</span></span>기반 업무의 동시 처리에서는 큰 유용성을 가지 듯이<span>,<span>&nbsp;</span></span>개개의 가상 서버들이 평소에 많은 연산을 집중적으로 사용하지 않는 다면 여러 컴퓨터들을 묶어 그 보다 더 많은 수의 가상 컴퓨터들을 만들어 알차게 사용할 수 있는 방법이 될 수 있는 건 분명하기 때문에 많은 기업들이 사용하지 않을까 싶다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><b><span>1.6<span>&nbsp;</span></span></b><b><span>컨테이너</span></b></h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 현재는 도커 또는 쿠버네티스로 대표되는 컨테이너는 어찌 봄 앞에서 얘기한 이상적인 심부름센터의 인력 활용 모델이 구현된 것이라고 볼 수 있다<span>.<span>&nbsp;</span></span>실제 컴퓨터 내부에서의 코어와 프로세스<span>,<span>&nbsp;쓰레드,</span>&nbsp;</span>코루틴의 어울림 과도 비슷해 보이고 말이다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 기존의 컴퓨터에서 무거운 프로세스를 대신에 쓰레드가 주요 작업을 수행했던 것처럼<span>,<span>&nbsp;</span></span>앞의 가상 컴퓨터와 비슷하지만<span>&nbsp;</span><span>OS<span>&nbsp;</span></span>전반의 대부분의 역할들은 메인<span><span>&nbsp;</span>OS</span>와 공유해 이용하면서 컨테이너 실행을 위한 최소의 부분만을 별개로 가상화해서 돌아간다는 것이다<span>.<span>&nbsp;</span></span>집으로 따지면 하나의 공간을 나눠 여러 개의 집을 만들어 사용하다가<span>,<span>&nbsp;</span></span>공용 공간을 과감히 같이 쓰고<span>,<span>&nbsp;</span></span>민감한 개인 방만 따로 만들어 사용하는 셰어 하우스 같은 느낌이다<span>.<span>&nbsp;</span></span>개인적으로는<span><span>&nbsp;</span>OS</span>에 대부분의 역할을 맡기고 프로세스 단위로 돌아가던 기존의 멀티태스킹을 조금 더 큰 실행 범위로 모듈화 해 구성하여 돌아가고 있다는 느낌도 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"472\" data-origin-height=\"472\"><span data-url=\"https://blog.kakaocdn.net/dn/cVcqzX/btsH1LTA3aL/9qcPPsJAh0eYZnl2tzfwXK/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-6&amp;nbsp; 공통 기능을 공유하고 서로 다른 부분만 신경 쓰기 ]\"><img src=\"https://blog.kakaocdn.net/dn/cVcqzX/btsH1LTA3aL/9qcPPsJAh0eYZnl2tzfwXK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcVcqzX%2FbtsH1LTA3aL%2F9qcPPsJAh0eYZnl2tzfwXK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"368\" height=\"368\" data-origin-width=\"472\" data-origin-height=\"472\"/></span><figcaption>[ 그림 &nbsp;2-6&nbsp; 공통 기능을 공유하고 서로 다른 부분만 신경 쓰기 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 이러한 과정에서 앞에서 얘기한 가상 이미지의 장점을 십분 활용해서<span>,<span>&nbsp;</span></span>레고 블록처럼 기능을 필요한 기능 등을 모듈 별로 조합하거나<span>,<span>&nbsp;</span></span>표준 화 하거나<span>,<span>&nbsp;</span></span>손오공의 분신처럼 복제하거나 등등 작은 어플리케이션 실행 환경 조각들이 자유롭게 움직이게 할 수 있다<span>.<span>&nbsp;</span></span>앞의 가상 컴퓨터와 비교해 본다면<span><span>&nbsp;</span>OS</span>에서 각각 수행하던 연산들이 사라지기 때문에 좀 더 같은 리소스 상에서 많은 개별의 가상 컴퓨터들이 수행 가능한 효과를 가지게 될 것이다<span>.<span>&nbsp;</span></span>다만 해당 경우 중심이 되는 실제<span><span>&nbsp;</span>OS</span>의 부하가 증가될 터이지만 결과적으로 기존의 각각의 가상<span><span>&nbsp;</span>OS</span>를 돌리게 되는 행위보다는 몇몇 측면에서 더 효율 적이기 때문에 이런 기술이 각광을 받지 않게 되지 않았을까 싶다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 이렇게 모듈화가 됨으로 서 사실 우리가 프로그램 영역에서 사용하던 여러 해결 방식들을 끼워 넣어 활용할 수 있게 된 것 같다<span>.<span>&nbsp;</span></span>어찌 보면 하드웨어라는 딱딱한 영역으로 생각됐던 영역이 비로소 프로그램의 일부 조각처럼 부드럽게 추상화된 일이 생긴 것도 같다<span>.<span>&nbsp;</span></span>그렇게 됨으로 서 해당 구조와 인터페이스를 통해서 마치 우리가 소프트웨어를 설계하 듯이 컨테이너를 만들고 띄우고<span>,<span>&nbsp;</span></span>조절하고 하는 일이 가능하게 되었다고 본다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><b><span>1.7<span>&nbsp;</span></span></b><b><span>클라우드</span></b></h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 마지막으로 클라우드에 대한 얘기를 해보자<span>.<span>&nbsp;</span></span>클라우드는 앞에 얘기한 모든 가상화를 모아 놓은 종합선물 같은 느낌이다<span>.<span>&nbsp;윈도우,</span>&nbsp;</span>리눅스<span>,<span>&nbsp;</span></span>안드로이드<span>, IOS<span>&nbsp;</span></span>같이 사람들이 인지하는 정식<span>&nbsp;</span><span>OS같이</span>&nbsp;취급은 안 되지만<span>,<span>&nbsp;</span></span>앞의 가상화로 이루어진 많은 기술들을 수많은<span><span>&nbsp;</span>API</span>를 통해서 컨트롤하는 여러 집합 서버 간의 가상화된&nbsp;OS라고 생각한다<span>.<span>&nbsp;</span></span>이것은 일반적인<span><span>&nbsp;</span>OS</span>가 제공하는<span><span>&nbsp;</span>API</span>들을 통해서 다른 어플리케이션들과 커뮤니케이션하는 것과 비슷하다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 클라우드는 굳이 나누자면 프라이빗과 퍼블릭으로 나누는데 한쪽은 솔루션 기반<span>,<span>&nbsp;한 쪽은</span></span> 서비스 기반이라고 볼 수 있을 것 같다<span>(</span>물론 프라이빗을 오픈 소스만으로 구축해 매끄럽게 운영하는 회사들도 있겠지만 그런 회사들은 아마 클라우드 사업을 스스로 수행할 만큼 인력<span>,<span>&nbsp;</span></span>회사의 규모나 커스터마이즈에 대한 시행착오가 충분히 쌓인 회사일 것 같다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 프라이빗 클라우드는 서버 팜은 해당 회사에서 준비하고 클라우드 운영을 지원하는 솔루션을 구입 또는 구축해서 운영하는 형태이다<span>.<span>&nbsp;</span></span>그래서 모든 물리적인 비용은 기존과 비슷하게 지불하면서도 앞에 나온 가상화 기술들을 통해 시스템 리소스를 최대한 가용하려 하는 방식이다<span>.<span>&nbsp;</span></span>라이선스에 따라 다르겠지만 해당 가격이 어느 정도 합리적이라면<span>(</span>아마 퍼블릭 클라우드에 비해 경쟁력이 있어야 하니 웬만하면 그렇게 포지셔닝을 할 것은 같다<span>)<span>&nbsp;</span></span>퍼블릭에 비해서는 비용적으로 유리한 측면이 있을 것 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 다만 평소의 운영 측면이나 장애 시의 빠른 대응 등 많은 부분에 있어서는 실제 운영하는 인력의 능력이 중요한 키 포인트가 될 것이다<span>.<span>&nbsp;</span></span>만약 스스로 구축한 환경이라면 해당 부분에 대한 의존도가 더 높아질 터이고<span>,<span>&nbsp;</span></span>관련 주요 인력의 퇴사 등은 향후의 운영 고도화 및 안정성에 크리티컬 한 영향을 미치게 될 것이다<span>.<span>&nbsp;</span></span>다만 솔루션 자체는 아마 서포트하는 회사의 태도나 기술력에 따른 편안함의 차이는 있겠지만 안정적인 운영은 보장될 것이다<span>.<span>&nbsp;</span></span>다만 항상 그렇지만 다른 솔루션으로 단기간 옮기기에는 현실의 많은 어려움이 따르기 때문에<span>,<span>&nbsp;</span></span>해당 솔루션의 가변적인 라이선스 정책 변경에 따른 비용 리스크는 생각해야 한다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 반대로 우리가 일반적으로 클라우드라고 얘기하는 퍼블릭 클라우드는 우리가 집에서 전기나 가스를 사용하거나<span><span>&nbsp;</span>OTT</span>를 매달 구독하여 이용하는 개념과 비슷하다<span>.<span>&nbsp;</span></span>각자의 회사에서<span>&nbsp;</span><span>IDC<span>&nbsp;</span></span>내에 물리적으로 서버나 네트워크 장비를 구축해 내<span>-</span>외부 인원들이 직접 운영하던 형태에서<span>,<span>&nbsp;</span></span>물리적 구성이나 유지 운영은 클라우드 회사 쪽에서 책임지고<span>,<span>&nbsp;</span></span>해당 구축된 서비스에 대해 다른 구독 서비스와 비슷하게 이용한 양만큼만 비용을 지불하면서 사용하게 된다고 볼 수 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"451\" data-origin-height=\"451\"><span data-url=\"https://blog.kakaocdn.net/dn/wamV7/btsH2CPfscE/4zKwedgGZY4hMSwG7wNoR1/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-7&amp;nbsp; 서비스의 사용 ]\"><img src=\"https://blog.kakaocdn.net/dn/wamV7/btsH2CPfscE/4zKwedgGZY4hMSwG7wNoR1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FwamV7%2FbtsH2CPfscE%2F4zKwedgGZY4hMSwG7wNoR1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"357\" height=\"357\" data-origin-width=\"451\" data-origin-height=\"451\"/></span><figcaption>[ 그림 &nbsp;2-7&nbsp; 서비스의 사용 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그래서 온프레미스가 아닌 퍼블릭 클라우드를 사용할 때의 서비스 안정성에 대한 걱정 또한 기존의 다른 영역들과 비슷하다<span>.<span>&nbsp;</span></span>재난 지역에서 수도나 전기 서비스가 끊겨 사람들이 고생하는 경우 같이 만약 해당 서비스의 안정성을 보장할 수 없다면 우리는 해당 서비스에 의존한 생활을 하지 못하게 될 것이다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 사실 언제든 해당 서비스가 멈춰버려 우리에게 불편을 줄 가능성은 가능하지만<span>,<span>&nbsp;</span></span>우리는 클라우드 사업을 하는 회사를 믿고 그 불편한 사건이 아주 드물거나 짧게 일어나거나<span>,<span>&nbsp;</span></span>해당 회사에서<span>&nbsp;</span><span>SLA</span>에 따른 적절한 보상을 해줄 것이라고 일반적으로 기대한다<span>(</span>다만 분쟁이 났을 때 고객사에서는 계속 해당 환경을 써야 되는 상황도 있고<span>,<span>&nbsp;</span></span>볼 수 있는 데이터도 제한적이기 때문에 책임 소재를 가리거나 증명하기는 애매해 보이긴 한다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 또한 현실 상 회사의 규모나 전문 인력의 경험 면에서도 클라우드 운영 회사가 대체로 서비스를 받는 회사보다 클 가능성이 높은 상황이기 때문에<span>,<span>&nbsp;</span></span>메이저 통신 회사나 전력 회사의 서비스처럼 문제가 날 가능성은 아주 적긴 하지만<span>,<span>&nbsp;</span></span>그렇다고 또 아예 없다고는 할 수도 없다<span>.<span>&nbsp;</span></span>하지만 그게 또 자체 운영할 때의 리스크 보다 크다고는 할 수는 없는 상황이기 때문에 참 애매한 영역이라고 본다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 앞에서 말한 것처럼 퍼블릭 클라우드 회사는 개별로 운영할 경우 시간<span>,<span>&nbsp;</span></span>작업 성격에 따라 여유 자원이 남아 있을 수 있는 서버 및 네트워크 자원들을 묶어 가상화하여,&nbsp;규모의 경제를 획득하려 한다<span>.<span>&nbsp;</span></span>가상화는 하드웨어들이 소프트웨어 차원으로 추상화된 부분이기 때문에<span>,<span>&nbsp;</span></span>기존에 소프트웨어 영역에서 그랬듯이 쌓여진 지식을 이용해 자동화하고<span>,<span>&nbsp;</span></span>현재의<span><span>&nbsp;AI와</span></span> 같은 데이터 이용 측면에서의 부가가치를 만들어 낼 수도 있게 되었다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 단순한 측면에서 보면 규모의 경제로 인한 운영 비용의 감소일 수도 있고<span>,<span>&nbsp;</span></span>컨테이너의 실행에서 그랬듯이 많은 공통 기능을 고객 회사들이 같이 사용하게 되어 전체적인 클라우드<span>&nbsp;</span><span>OS<span>&nbsp;</span></span>레벨의 효율화 일수도 있고<span>, SAAS와</span> 같은 측면에서는 앱스토어나 플레이스토어와 같은 플랫폼 수익일 수도 있을 것 같다<span>.<span>&nbsp;</span></span>또한 클라우드 시스템을 돌아다니는 고객사의 많은 데이터를 법적인 테두리 안에서 중계하거나 해당 패턴을 분석하여 부가가치를 일으킬 수도 있게 될 것 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그럼 클라우드 환경에서 만날 수 있다고 생각되는 몇 가지 이슈들을 살펴보고 마무리를 해보자<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><b><span>1)<span>&nbsp;</span></span>고정적이지 않은 비용</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp; (</span>퍼블릭<span>)<span>&nbsp;</span></span>클라우드에서 가장 개인적으로 화두가 되는 부분은 움직이는 비용이라고 본다<span>.<span>&nbsp;</span></span>게임센터에서 제한된 코인을 가지고 게임을 클리어해야 하는 것처럼 운영하는 입장에서는 최소의 금전적 투입을 통해서 최대의 금전적 이익을 얻어야 하는 숙제가 주어진다<span>.<span>&nbsp;</span></span>많은 경우에&nbsp;<span>API<span>&nbsp;</span></span>호출 수<span>,<span>&nbsp;</span></span>데이터 양<span>,<span>&nbsp;</span></span>서비스 옵션 등 클라우드를 사용하려는 시스템의 규모 및 데이터에 비례하기 때문에 상황에 따라 가변 적이다<span>.<span>&nbsp;</span></span>실제로는 어떨지 모르겠지만<span>&nbsp;SAAS로</span> 얘기되는 여러 서드파티 소프트웨어 또한 결국은 클라우드 시스템의 리소스를 사용하여 제공되는 서비스 이기 때문에 비슷하게 태생적으로 기존 온프라미스 같은 고정 비용으로는 제공이 힘들지 않을까 싶다<span>(</span>반대로 요즘은 온프라미스 요금도 이런 형태를 따라가려는 움직임이 많아진 듯하다<span>.<span>&nbsp;</span></span>약간 게임 회사들이 부분 유료화 게임의 BM을 추구하던 시기를 보는 느낌도 조금 있다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"602\" data-origin-height=\"602\"><span data-url=\"https://blog.kakaocdn.net/dn/l2wbk/btsH00RhPDj/grAKWzhinYBSB55qnZ5t11/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-8&amp;nbsp; 코인 플레이 ]\"><img src=\"https://blog.kakaocdn.net/dn/l2wbk/btsH00RhPDj/grAKWzhinYBSB55qnZ5t11/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fl2wbk%2FbtsH00RhPDj%2FgrAKWzhinYBSB55qnZ5t11%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"401\" height=\"401\" data-origin-width=\"602\" data-origin-height=\"602\"/></span><figcaption>[ 그림 &nbsp;2-8&nbsp; 코인 플레이 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\"><br /><span data-alt=\"[ 그림 &amp;nbsp;2-8&amp;nbsp; 코인 플레이 ]\" data-lightbox=\"lightbox\" data-url=\"https://blog.kakaocdn.net/dn/bFJ4Hl/btsHRulu91V/4TWbd5C43CZejSuknoXkWk/img.png\"></span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 사실 이러한 비용의 예측은 클라우드 회사의 원가 구조<span>,<span>&nbsp;</span></span>성장 목표<span>,<span>&nbsp;</span></span>서비스를 이용하는 회사들의 데이터 구조<span>,<span>&nbsp;</span></span>비즈니스 형태<span>,<span>&nbsp;</span></span>범위<span>,<span>&nbsp;</span></span>인력의 숙련도 등에 따른 내<span>-</span>외부 변수가 많아 보이기 때문에 제공하는 컨설턴트 엔지니어 쪽에서도 정확히 추정 제시가 힘들 듯하다<span>.<span>&nbsp;</span></span>반대로 서비스를 이용하는 고객 입장에서는 자신의 회사의 가상 자원들로 일어나게 될 트래픽과 데이터를 각 클라우드의 비용 정책 및 클라우드 운영 구조와 매칭하여 정확하게 이해하지 못하면 관련된 요금 체계 때문에 예상 못하는 돌을 맞게 되는 수도 있다<span>.<span>&nbsp;</span></span>현실의 다른 분야의 예를 하나 들면<span>&nbsp;</span><span>&ldquo;</span>주거용 오피스텔의 수도 요금의 경우 전입 신고 후 세대분할 신고를 거쳐 예외적으로 더 저렴한 가정용 요금으로 계산되지만<span>, 1</span>인 기준 정도의 사용량<span>(</span>월<span><span>&nbsp;</span>17</span>톤<span>)<span>&nbsp;</span></span>이상부터는 다시 상업용 요금으로 부과된다<span>&rdquo;<span>&nbsp;</span></span>와 같은 수많은 미묘한 규칙들이 클라우드 서비스 안에 숨어 있을 수 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 해당 비용은 서비스의 호출 수<span>,<span>&nbsp;</span></span>데이터 규모에 따른 비례 또는 볼륨 비용<span>,<span>&nbsp;</span></span>가상 서버의 코어<span>,<span>&nbsp;</span></span>메모리 양<span>,<span>&nbsp;</span></span>연속 운영 시간<span>,<span>&nbsp;여러 가지</span></span> 서비스 옵션<span>,<span>&nbsp;</span></span>내장 또는 서드파티 기능 사용 여부<span>(</span>이 경우 아쉽게도 대부분 기존부터 해당 솔루션 분야의 노하우를 축적한 전문 서드파티 쪽의 기능이 현실적이고, 선택권이 풍부한 경우가 많은 듯하다<span>), 네트워크<span>&nbsp;</span></span>영역 별 트래픽 요금의 상이성<span>,<span>&nbsp;</span></span>사용자 수<span>,<span>&nbsp;어플리케이션</span></span> 엔터티 수 등 다양한 규칙에 의해 클라우드 스스로나 사용하는<span>&nbsp;</span><span>SAAS<span>&nbsp;어플리케이션과의</span></span> 조합에 의해 비용이 설계되어 있다<span>.<span>&nbsp;</span></span>결국 서비스를 이용하는 고객 회사는 이러한 구조 상의 요금 체계의 민감성을 이해하면서<span>,<span>&nbsp;</span></span>자신의 회사의 자원 중 클라우드로 올라가는 자원들과 그 자원들과 데이터를 주고받게 되는 클라우드 외부 자원 및 사용자들을 같이 고려해서 비용을 예측해야 하는데<span>,<span>&nbsp;</span></span>여기까지만 얘기를 들어도 그렇게 쉬워 보이는 주제 같진 않다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 또 이러한 비용들이 기존의 고정 자산<span>+</span>운영 비용의 영역에서 운영 비용으로 성격이 바뀌기 때문에 재무적<span>,<span>&nbsp;</span></span>기술 운영 측면에서도 미묘한 사고적 전환이 필요하지 않을까 싶다<span>.<span>&nbsp;</span></span>클라우드 내부의 비용 관련 모니터링<span>,<span>&nbsp;</span></span>비용 설계 툴<span>,<span>&nbsp;</span></span>커스터마이즈 된<span><span>&nbsp;</span>SAAS<span>&nbsp;</span></span>툴들을 통해 이러한 부분을 파악하고<span>,<span>&nbsp;</span></span>예측하고<span>,<span>&nbsp;</span></span>절감할 수 있다고는 하지만, 아직까지는 전체적인 파악 및 조정을 하는 것은 사람의 역량과 손을 많이 타는 분야가 아니지 싶다<span>(</span>누가 실시간으로 자신의 통장에서 무제한으로 돈이 빠져나가는데 그걸 로직도 확실히 파악이 힘든 자동화에만 맡겨 둘 수 있을까? 그리고 자동화는 수동화가 가능한 사람이 자동화도 가능하다고 본다<span>).<span>&nbsp;</span></span>개인적으로는 핸드폰 요금 같은 선택이 가능한 어느 정도의 명확한 범위의 고정형 요금이 있거나 가격의 영향을 주는 요소가 좀 더 줄어든다면 좀 더 서로 좋지 않을까 생각하지만,&nbsp;현재로서는 해당 부분은 좀 요원해 보인다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp; 참고로 클라우드에 따라 예약 가능한 자원 사용량을 특정 기간 설정하면 해당 예약 구간의 요금에 따라 비용을 할인해 주는 선물 또는 선결제 비슷한 제도도 있는 것 같다. 하지만 조금 아쉬운 부분은 해당 부분이 어떻게 보면 변화하는 사용량에 대해서 고객 쪽에서 스스로 예측해야 하는 부담을 안겨주는 측면이 있을 듯하고(해당 요금에 대해서 컨설턴트 쪽에서 강하게 특정 임계치를 추천하기는 꽤 부담스러울 듯하다), 또 불완전한 무제한 요금제 같이 모든 영역에 대해서 적용되는 건 아니고 아마도 클라우드 회사 내부의 여러 사정에 의해서 특정 서비스 및 특정 리소스를 대상으로 제한되는 것도 같다. 무엇보다 유연함을 표방하는 클라우드에서 고정 비용을 매력적으로 보이게 만드는 요금 설계가 조금은 아이러니한 느낌도 있다. 하지만 솔루션 계약 같은 경우에도 1년 계약보다는 다년 계약을 할 경우 요율 동결이나 추가 할인을 해주는 경우도 있으니, 마찬가지로 장기간으로 고객을 계약으로 묶는 대신 비용 할인을 제공하는 제도로 생각하면 어떨까 싶다. 뭐 아마 클라우드 회사 쪽도 안정적인 매출을 보장하는 특정한 안전장치들이 필요하지 않을까 싶으니 말이다.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 추가로 이런 비용 문제를 어렵게 만드는 부분은 클라우드 운영회사와 서비스 사용 회사가 항상 서로 반대의 입장에서 절감과 성장<span>,<span>&nbsp;</span></span>효율화 사이에서 줄다리기를 한다는 것이다<span>.<span>&nbsp;</span></span>양 쪽 다 계속 성장하는 환경이라면 규모나<span>,<span>&nbsp;</span></span>영역의 확장을 통해 이 부분이 적절한 협의를 통해서 쉽게 해결이 될 가능성이 높지만<span>,<span>&nbsp;한쪽은</span></span> 조금이라도 더 얻어야 하는 상황이고<span>,<span>&nbsp;한쪽은</span></span> 조금이라도 더 줄여야 하는 제로섬 게임의 상황이라면 갈등 요소의 상황이 생길 수도 있을 것 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"452\" data-origin-height=\"452\"><span data-url=\"https://blog.kakaocdn.net/dn/bNvlYC/btsH2nktR7z/r7QLgiO02aSvdagSBZNtG0/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-9&amp;nbsp; 시소 게임 ]\"><img src=\"https://blog.kakaocdn.net/dn/bNvlYC/btsH2nktR7z/r7QLgiO02aSvdagSBZNtG0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbNvlYC%2FbtsH2nktR7z%2Fr7QLgiO02aSvdagSBZNtG0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"335\" height=\"335\" data-origin-width=\"452\" data-origin-height=\"452\"/></span><figcaption>[ 그림 &nbsp;2-9&nbsp; 시소 게임 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 개인적인 생각으로는 적절한 상황 판단에 의해 서로 윈<span>-</span>윈 하는 가격 협상으로 상호 합리적인 이익을 가져오게 하는 게 낫긴 할 터이지만 세상일이 꼭 그렇진 않을 것 같긴 하다<span>.<span>&nbsp;</span></span>온프라미스 서비스 또한 물가 상승 분의 반영이나 회사 성장 목표에 따른 가격 협상 갈등은 있을 터이지만<span>,<span>&nbsp;</span></span>부가가치 및 다른<span><span>&nbsp;</span>SAAS<span>&nbsp;</span></span>서드파티 회사들과 연동되어 움직이는 클라우드 서비스만큼의 변수가 생기긴 힘들다고 본다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><b><span>2) Lock-in<span>&nbsp;</span></span>효과와 하이브리드<span>,<span>&nbsp;</span></span>멀티 클라우드</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 클라우드 쪽에서 고객에게 제공되는 가상화 위 쪽 환경은 기존의 온프라미스와 그렇게 다르지 않은 어플리케이션의 영역이겠지만<span>,<span>&nbsp;</span></span>그 밑은 수많은<span><span>&nbsp;API로</span></span> 이루어진 하나의 가상<span><span>&nbsp;</span>OS</span>이기 때문에 현재의 다른<span><span>&nbsp;OS와</span></span> 비슷하게 호환성 문제가 생긴다고 본다<span>.<span>&nbsp;</span></span>그래서 커피머신의 호환 캡슐 같은<span><span>&nbsp;</span>lock-in<span>&nbsp;</span></span>효과가 있고 마치 리눅스로 운영되는 서비스 들을 윈도우로 전환해야 할 때의 머리 아픔처럼 무언가 클라우드에 종속되는 느낌이 강하다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 온프라미스도 마찬가지라고 생각될 수도 있겠지만 그쪽은 만약에 이동이 필요하다면<span><span>&nbsp;</span>IDC</span>의 위치와 내부 공간 구조 이외의 나머지는 모두 표준화에 가깝게 정리가 되 있다고 생각하기 때문에 쉽지만은 않겠지만 물리적 스위치나 서버들<span>,<span>&nbsp;</span></span>방화벽 등 관련 규칙들을 모두 하나하나 조심스럽게 옮겨서 똑같이 다른<span><span>&nbsp;</span>IDC</span>의 형태로 재구성할 수 있을 것이다(물론 이런 물리적인 행동들을 소프트웨어적으로 수행할 수 있기 때문에 클라우드의 기민성이 생기기는 한다)<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"392\" data-origin-height=\"392\"><span data-url=\"https://blog.kakaocdn.net/dn/bcsWr1/btsH2aMpyel/FKROcZBR8vht5AAcDqjoI0/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-10&amp;nbsp; 커피 머신과 호환 캡슐 ]\"><img src=\"https://blog.kakaocdn.net/dn/bcsWr1/btsH2aMpyel/FKROcZBR8vht5AAcDqjoI0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbcsWr1%2FbtsH2aMpyel%2FFKROcZBR8vht5AAcDqjoI0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"336\" height=\"336\" data-origin-width=\"392\" data-origin-height=\"392\"/></span><figcaption>[ 그림 &nbsp;2-10&nbsp; 커피 머신과 호환 캡슐 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 이러한 부분을 해결하기 위해서 보통 몇 가지 선택을 하는 듯한데,&nbsp;요즘 한참 얘기되는 멀티 클라우드<span>(</span>퍼블릭<span>-</span>퍼블릭<span>,<span>&nbsp;</span></span>퍼블릭<span>-</span>프라이빗 조합 등<span>)</span>나<span>,<span>&nbsp;</span></span>온프라미스<span>-</span>클라우드 병행 운영을 통해서 의존성을 해결하려 한다<span>.<span>&nbsp;</span></span>이런 경우 사실 관리 대상의 다양 성에 따른 리소스 투자 문제가 생길 수 있다<span>.<span>&nbsp;</span></span>멀티 클라우드 전략의 경우 각각의 클라우드에서 제공하는 고유 기능만을 사용할 경우에는 차후 마이그레이션 시의 호환 문제나 운영 방식 간의 상이함이 생길 수 있기 때문에 테라폼 같은<span>&nbsp;</span><span>IaC(Infrastructure as Code)<span>&nbsp;</span></span>같은 툴로 각 클라우드의<span><span>&nbsp;</span>API</span>를 비슷하게 매칭해 이용해 해결하거나<span>, VMWARE<span>&nbsp;</span></span>나<span>&nbsp;</span><span>Nutanix<span>&nbsp;</span></span>같은 여러 가상 컴퓨터 솔루션이나 쿠버네티스 같은 컨테이너 환경 같이 관리<span><span>&nbsp;</span>API<span>&nbsp;</span></span>나 인터페이스의 표준화를 제공하는 솔루션들을 이용하여 운영 표준 및 혹시 모를 마이그레이션 문제를 해결하려 한다<span>.<span>&nbsp;</span></span>여기에 추가로 테라폼<span>, Ansible<span>&nbsp;</span></span>같은 자동화 스크립트를 통해 표준화된<span><span>&nbsp;</span>API</span>를 한번 더 감싸 자동화하려고도 하는 듯하다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"295\" data-origin-height=\"416\"><span data-url=\"https://blog.kakaocdn.net/dn/m4tFU/btsH1k9KBBm/KiExCUu8ib23k8DwjqQgbk/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-11&amp;nbsp; 바벨탑 ]\"><img src=\"https://blog.kakaocdn.net/dn/m4tFU/btsH1k9KBBm/KiExCUu8ib23k8DwjqQgbk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fm4tFU%2FbtsH1k9KBBm%2FKiExCUu8ib23k8DwjqQgbk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"252\" height=\"355\" data-origin-width=\"295\" data-origin-height=\"416\"/></span><figcaption>[ 그림 &nbsp;2-11&nbsp; 바벨탑 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 현재 상황으로는 각각의 클라우드 회사들이 윈도우,&nbsp;리눅스의 상황과 비슷하게 멀티 클라우드를 쓰는 고객들을 위해 운영의 인터페이스의 표준화를 협의할 가능성은 거의 희박하다고 보기 때문에<span><span>&nbsp;</span>IaC<span>&nbsp;</span></span>툴의 사용은 각 클라우드에서 외부에서 원하는<span><span>&nbsp;</span>API</span>를 기능적<span>,<span>&nbsp;</span></span>보안적인 부분을 고려해 얼마나 외부에 제공할 수 있느냐에 따라 호환성의 문제가 해결된다고 본다<span>.<span>&nbsp;</span></span>또한 가상화 솔루션이나 컨테이너 환경은 보통 상업 적인 비용이 추가로 들기 때문에 해당 밴더의 가격 정책의 변경에 따른 민감성의 리스크가 생길 가능성이 있다고 본다<span>(</span>물론<span><span>&nbsp;</span>IaC<span>&nbsp;</span></span>툴 또한 마찬가지 이슈는 생길 수가 있다<span>).<span>&nbsp;</span></span>개인적으로는 약간 주제와 별개로 클라우드 위의 가상화 솔루션이나 컨테이너 환경의 경우 가상화 위에 올라간 가상화의 느낌이 있기 때문에 해당 부분이 성능적으로는 어떤 영향을 미칠지,&nbsp;또는 해당 이슈를 어떻게 풀었는지가 조금 궁금하긴 하다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><span>3<b>)<span>&nbsp;</span></b></span><b>표준화에 따른<span><span>&nbsp;</span>Ready-made<span>&nbsp;</span></span>옵션들</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 앞서 얘기했듯이 클라우드는 많은 선택이 있는 것처럼 보이기도 하지만<span>,<span>&nbsp;</span></span>궁극적으로 구독 서비스처럼 하나의 인터페이스를 가지고 수많은 타입의 고객들을 만족시켜야 하는 종합<span><span>&nbsp;</span>SAAS<span>&nbsp;</span></span>형<span><span>&nbsp;</span>OS<span>&nbsp;</span></span>서비스에 가깝기 때문에 다양성을 가지면서도 표준화를 추구할 수밖에 없다고 본다<span>(</span>결국 내부에서 볼 때 모든 외부 요소들은 클라우드 회사에서 제공하는 내부<span><span>&nbsp;</span>API</span>의 구독자 일 것 같아서 말이다<span>).<span>&nbsp;</span></span>그래서 마치 자신에게 맞는 최신 컴퓨터를 세팅하듯이 적절한 옵션과 가격<span>,<span>&nbsp;</span></span>유<span>-</span>무료 소프트웨어를 조합하여 사용할 운영 환경을 결정해야 한다<span>.<span>&nbsp;</span></span>이러한 옵션은 클라우드 환경과 고객 사의 환경<span>,<span>&nbsp;</span></span>여러 오픈소스 및 기술 프로세스 분야<span>(DevSecOps<span>&nbsp;</span></span>등<span>)</span>에 대해서 모두 잘 이해를 해야 제안 및 결정이 가능한 부분이기 때문에 수많은 클라우드 회사 내<span>-</span>외부의 전문 컨설턴트들이 활약하게 되는 영역인 듯싶다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"465\" data-origin-height=\"465\"><span data-url=\"https://blog.kakaocdn.net/dn/dhpYbK/btsH1h6m8QH/FTgewaqut4uDkIMITZovs0/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-12&amp;nbsp; 쿠키 고르기 ]\"><img src=\"https://blog.kakaocdn.net/dn/dhpYbK/btsH1h6m8QH/FTgewaqut4uDkIMITZovs0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdhpYbK%2FbtsH1h6m8QH%2FFTgewaqut4uDkIMITZovs0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"348\" height=\"348\" data-origin-width=\"465\" data-origin-height=\"465\"/></span><figcaption>[ 그림 &nbsp;2-12&nbsp; 쿠키 고르기 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 반대로 가게를 실제 운영하는 경우와 마찬가지로 일부러 전략적으로 선택하지 않는 이상은 너무 많은 메뉴 조합의 제공은 여러 불필요한 리소스 낭비와 예외가 생길 수 있으므로<span>,<span>&nbsp;</span></span>축적된 경험 및 내부 연구를 토대로 여러 고객사의 케이스에 최대한 만족될 수 있는 조합을 표준화하고 확장하게 될 것이다<span>.<span>&nbsp;</span></span>이것은 한편으로는 특정 클라우드에 인증된 제품 군 이라든지<span>,<span>&nbsp;</span></span>안정 성과 이슈 팔로우업이 가능한 주요 파트너 사라든지 하는 개념의 형태로도 나타날 수 있다<span>.<span>&nbsp;</span></span>다만 해당 부분은 반대 측면에서 보면 기술적으로는 탄탄하지만 대응 규모가 작거나 손익 계산이 안 맞는 작은 서드파티 회사들이 클라우드 환경에 참여하는 최소한의 장벽이 됨으로써 고객들이 온프라이스에서 선택 가능했던 옵션들이 줄어드는 상황을 만들 수도 있을 것은 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"570\" data-origin-height=\"403\"><span data-url=\"https://blog.kakaocdn.net/dn/VrcpF/btsH0Alaogj/cjDKfXkxQCcnzHuAn1kp3k/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-13&amp;nbsp; 표준화 ]\"><img src=\"https://blog.kakaocdn.net/dn/VrcpF/btsH0Alaogj/cjDKfXkxQCcnzHuAn1kp3k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FVrcpF%2FbtsH0Alaogj%2FcjDKfXkxQCcnzHuAn1kp3k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"412\" height=\"291\" data-origin-width=\"570\" data-origin-height=\"403\"/></span><figcaption>[ 그림 &nbsp;2-13&nbsp; 표준화 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><span>4<b>)<span>&nbsp;</span></b></span><b>자동화</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 앞서 얘기했듯이 가상화는 곧 소프트웨어 형태의 구현체와 데이터를 의미하기 때문에 클라우드를 선택했다는 것 자체가 이미 자동화를 적극적으로 이용하려 한다는 의미와 동일하다고 생각한다<span>(</span>만약 그러지 않는다면 자동차를 사서 굳이 손으로 밀어 움직이려 하는 상황과 비슷하다고 본다<span>).<span>&nbsp;</span></span>다만 그 자동화가 앞서 말한<span><span>&nbsp;API로</span></span> 이루어진 닫혀 있는<span>(</span>요건 외부적으로 느껴지는 클라우드의 개방적 느낌과는 좀 모순이 되는 것도 같긴 하다<span>^^)<span>&nbsp;</span></span>클라우드 세상이라는 한계상 자동화의 기능과 범위는 내부적인 이슈로 점점 깊게 들어가게 되면 그 지원하는<span><span>&nbsp;</span>API</span>를 벗어나진 못할 것이다<span>.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"575\" data-origin-height=\"407\"><span data-url=\"https://blog.kakaocdn.net/dn/b4Gx7W/btsH1a7n1Lh/vcgifIvBb2IkgtT4K8fKpk/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-14&amp;nbsp; 자동화 ]\"><img src=\"https://blog.kakaocdn.net/dn/b4Gx7W/btsH1a7n1Lh/vcgifIvBb2IkgtT4K8fKpk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb4Gx7W%2FbtsH1a7n1Lh%2FvcgifIvBb2IkgtT4K8fKpk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"432\" height=\"306\" data-origin-width=\"575\" data-origin-height=\"407\"/></span><figcaption>[ 그림 &nbsp;2-14&nbsp; 자동화 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 또한 기존의 많은 솔루션 및<span><span>&nbsp;</span>OS</span>의<span><span>&nbsp;</span>API<span>&nbsp;</span></span>들과 동일하게<span>,<span>&nbsp;</span></span>보안 및 전체 시스템의 안정성이라는 공익을 고려한다면 모든<span><span>&nbsp;</span>API</span>를 고객의 자동화 모듈에 제공할 수는 없다<span>(</span>물론 클라우드 내부 시스템에서는 아마 권한을 제어해 잘 사용하고 있을 것이다<span>).<span>&nbsp;</span></span>그래서 아마도 각 클라우드 내부에서 지원하는 자동화 툴보다는 외부에서 실행되는 자동화 툴 쪽이 내부에 접근할 수 있는 영역이 좀 더 좁을 수도 있을 것도 같다<span>.<span>&nbsp;</span></span>아무래도 클라우드 내부에서 지원하는 자동화 툴 쪽이 외부 인터페이스 영역만 공개한 채로 클라우드 좀 더 내부에 꽁꽁 숨겨놓은<span><span>&nbsp;</span>API<span>&nbsp;</span></span>나 데이터에 접근이 가능할 것 같기 때문이다(또한 아쉽게도 해당 내부 자동화 툴은 해당 클라우드에서만 폐쇄적인 표준일 가능성이 아주 높을 것이다). 물론 내부 자동화 툴이 외부의 서드파티 툴로 전체 인터페이스를 또 한 번의 API를 통해 제공할 수도 있을 가능성은 있다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 또 자동화를 사용한다는 것은 역으로 특정 사람이 의도적으로 설계해 놓은 작업 들이 내부<span><span>&nbsp;</span>API</span>를 통해 대량으로 패턴화 해 일어난 다는 것이기 때문에 실수를 했을 때 역시 대량으로 문제가 일어나거나 모니터링 및 가역적 조치가 힘든 상황이 생길 수가 있다고 본다<span>. 그 과정에서 과도한 자원의 실행이나 소모에 따라 추가 비용 이슈가 생길 수도 있고 말이다.<span>&nbsp;</span></span>그래서 관련 자동화 프로세스를 설계할 때는 앞서 비용을 따질 때와 비슷하게 클라우드 및 본인 자신의 회사 환경을 잘 이해하는 세심한 주의가 필요할 듯도 싶다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><span>5<b>)<span>&nbsp;</span></b></span><b>기다림에 대한 미학</b></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 앞서 얘기했듯이 클라우드는 많은 부분이 고객들에게는 숨겨져 있다<span>.<span>&nbsp;</span></span>운영 및 보안 적으로는<span>&nbsp;</span><span>&ldquo;</span>공동 책임 모델&rdquo;이라는 이름으로 정리되어 있는데<span>,<span>&nbsp;</span></span>서로 영향을 미치게 되어 신경 쓰게 하지 말고, 필요하고 잘할 수 있는 영역을 나누어 잘 관리하자는 것이다<span>.<span>&nbsp;</span></span>이는 당연히 일반<span><span>&nbsp;</span>SAAS<span>&nbsp;</span></span>서비스 영역에서도 비슷하게 설계되어 있다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 이 모델은 클라우드 사용자들이 안전한 환경에서 선택과 집중을 하는데 도움을 주는 좋은 방식이지만<span>,<span>&nbsp;</span></span>역으로 이 때문에 가시성 및 조치 가능성 문제가 생길 수도 있는데<span>,<span>&nbsp;</span></span>이는 우리가 집에서 인터넷이 안될 때 통신사에 전화를 해서 점검을 요청하는 부분 외에는 할 수 있는 부분이 없어지는 것과 비슷하다<span>(</span>물론 공유기가 이상한지나<span>,<span>&nbsp;</span></span>컴퓨터가 이상한지에 대해서 이것저것 상담원이 물어볼 다른 가능성을 미리 체크해 볼 수 있겠지만 우리의 권한과 책임이 아닌 통신 망의 정상화에 대해서는 전문가들의 말을 믿고 기다릴 수밖에 없다<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"513\" data-origin-height=\"513\"><span data-url=\"https://blog.kakaocdn.net/dn/zuLVK/btsH1EGZ2L0/7mNxKT8Rru9vLIswCQFwX0/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-15&amp;nbsp; 주인을 기다리기 ]\"><img src=\"https://blog.kakaocdn.net/dn/zuLVK/btsH1EGZ2L0/7mNxKT8Rru9vLIswCQFwX0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzuLVK%2FbtsH1EGZ2L0%2F7mNxKT8Rru9vLIswCQFwX0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"338\" height=\"338\" data-origin-width=\"513\" data-origin-height=\"513\"/></span><figcaption>[ 그림 &nbsp;2-15&nbsp; 주인을 기다리기 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그래서 클라우드나 해당 영역의<span><span>&nbsp;</span>SAAS<span>&nbsp;</span></span>서비스에 대해서는 관련 클라우드 회사 및 연결되어있는&nbsp;1, 2차 범위의 지원 엔지니어가 얼마나 빠르고 원활하게 잘 문제를 파악하고 본사와 커뮤니케이션 해 해결하냐에 고객의 안녕이 걸려있을 것 같다<span>.<span>&nbsp;</span></span>물론 고객 쪽 담당자도 내부 관점에서 문제에 대해 명확하게 정의하여 클라우드 환경에 맞는 방식으로 관련 커뮤니케이션을 할 수 있어야 할 것 같긴 하다<span>(</span>컴퓨터를 전혀 모르는 고객의 인터넷 장애를 상담하는 통신사 상담원 입장을 생각해 보자<span>).</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 중요한 회의를 해야 하는데 갑자기 인터넷이 안 되는 상황을 생각해 보자<span>.<span>&nbsp;</span></span>물론 이 경우&nbsp; 스마트폰 데이터만 충분하다면 테더링이라는 대체 가능한 옵션이 있을 수 있고<span>, 근처<span>&nbsp;</span></span>카페의 와이파이 환경으로 뛰어갈 수도 있다<span>.<span>&nbsp;</span></span>이런 선택할 수 있는 옵션이 앞서 얘기한 멀티 클라우드나<span>,<span>&nbsp;</span></span>온프라미스<span>-</span>클라우드 병행 체계를 마련해 놓는 이유기도 한 것 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp; SLA</span>이나 관련 보상 계약이 있긴 하지만 현실 상으로 문제가 났을 때 그 문제로 인한 내부 피해를 산정하는 것은 클라우드 비용을 예측하는 것만큼 변수가 많은 영역일 듯싶고<span>,<span>&nbsp;</span></span>그 상황에도 해당 회사의 서비스를 그대로 이용해야 하는 미묘한 대치 상황이 될 수도 있다<span>(게다가<span>&nbsp;</span></span>그렇게 선택 가능한 클라우드 회사가 엄청 많은 것도 아니기도 하다<span>).<span>&nbsp;</span></span>만약 훗날 적절한 피해 보상을 받더라도 이미 기회는 떠나가 소 잃고 외양간 고치는 식이 될 수도 있을 것 같으니 말이다<span>.<span>&nbsp;</span></span>여하튼 클라우드 회사에서는 만에 하나라도 그런 일이 안 생기게 하려고 여러 측면에서 사이트 및 서비스 안정성을 위해 당연히 노력하겠지만<span>,<span>&nbsp;</span></span>담당자 입장에서는 그런 일은 절대 안 일어난다고 자신 있게 얘기하긴 힘든 딜레마가 생기는 부분이긴 한 것 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span>&nbsp;</span></p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><b><span>1.8<span>&nbsp;</span></span></b><b><span>나비의 꿈</span></b></h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 가상화 쪽을 얘기하다 클라우드까지 오게 됐는데<span>(</span>사실은 클라우드 얘기를 어떻게 잘 풀려다 보니 프로세스와 쓰레드까지 올라가게 된 거긴 하다<span>^^)<span>&nbsp;</span></span>이어졌던 이야기 흐름에 어느 정도 공감이 갔을지는 모르겠다<span>.<span>&nbsp;</span></span>현재는 현실이 가상화에 영향을 미치고 다시 가상화가 현실에 영향을 미치는 세상이 되는 것도 같아서<span>,<span>&nbsp;</span></span>마치 우리가 예전에 들었던 장자의<span>&nbsp;</span><span>&ldquo;나비</span>의 꿈<span>&rdquo;<span>&nbsp;</span></span>얘기처럼 뇌 과학 쪽도 그렇고 점점 현실과 가상의 경계가 조금씩 깨어지는 시기인 듯도 싶다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"520\" data-origin-height=\"368\"><span data-url=\"https://blog.kakaocdn.net/dn/b1CtAz/btsH09UW2SN/7OkYc81K3aoIzs5ofKOhX0/img.png\" data-lightbox=\"lightbox\" data-alt=\"[ 그림 &amp;nbsp;2-16&amp;nbsp; 나비의 꿈 ]\"><img src=\"https://blog.kakaocdn.net/dn/b1CtAz/btsH09UW2SN/7OkYc81K3aoIzs5ofKOhX0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb1CtAz%2FbtsH09UW2SN%2F7OkYc81K3aoIzs5ofKOhX0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"437\" height=\"309\" data-origin-width=\"520\" data-origin-height=\"368\"/></span><figcaption>[ 그림 &nbsp;2-16&nbsp; 나비의 꿈 ]</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\"><br /><span data-alt=\"[ 그림 &amp;nbsp;2-16&amp;nbsp; 나비의 꿈 ]\" data-lightbox=\"lightbox\" data-url=\"https://blog.kakaocdn.net/dn/qevzz/btsHRYTZca3/VOJzaIAI0GVdzNgjUXmBt0/img.png\"></span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 그렇게 된 하나의 이유는 가상이나 현실이나 데이터를 기반으로 움직이는 경향이 강해져서 그렇지 않나 도 싶고<span>,<span>&nbsp;</span></span>또 우리가 평소에도 현실의 자신과 상관없이 계속 다른 세상과 자신을 상상하며 살아가기 때문이라 그런 것 같기도 하다<span>.<span>&nbsp;</span></span>우리가 현실과 마음의 가상 사이에서 계속 균형을 맞추면서 피드백을 거쳐가며 살아가는 것처럼<span>,<span>&nbsp;</span></span>우리가 가진 실제의 물리 세상과 가상화 세상은 비슷한 균형을 거치는 단계를 가지게 될 것도 같다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp; 다른 한편으로 드는 생각으로는 요즘은<span><span>&nbsp;</span>AI</span>나 클라우드와 같은 가상 세계에 대해 모든 관심들이 집중되는 것 같기도 한데<span>,<span>&nbsp;</span></span>우리가 지금 열심히 일을 하는 이유가 평화롭거나 행복하게 잘 살려고 하는 거라는 측면을 생각하면<span>,<span>&nbsp;</span></span>우리가 왜 그렇게 해당 대상들에 열광하고 있는지를 길을 걸어가면서도 가끔은 뒤돌아보는 것도 나쁘진 않아 보인다<span>.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size18\"><span>- Fin -</span></p>",
        "contentSnippet": "지마켓 정보보안실 김용재\n \n  IT세상에는 가상화에 관련된 개념이 아주 많이 존재한다고 본다. 컴퓨터의 기본 구조에서 보면, 메모리가 아주 귀했을 때 나왔을 거 같은 디스크와 메모리를 섞어 사용하는 가상 메모리부터, 반대로 하드 디스크(SSD)가 현재에 비해 아주 느렸을 때 잠시 나왔던 메모리를 디스크로 사용하는 램 디스크(이건 요즘 Redis 등 예전에 비해 많이 싸진 메모리를 기반으로 빠르게 동작하는 디비의 롤 모델라는 느낌도 든다), 예전에 CD를 이용해 게임이나 프로그램을 실행하던 때에 느린 CD 대신 디스크의 이미지로 해당 데이터를 옮겨서 CD 인 것처럼 프로그램을 속였던(아무래도 그때는 CD를 강제한 불법 복제 방지 로직을 피하는 목적들도 있었다) “Virtual CD, DAEMON Tools, cdspace” 같은 가상 CD, 자바/파이썬 등의 프로그래밍 언어가 실행되는 가상머신 환경, 메타버스, 가상 컴퓨터, 컨테이너, 클라우드 등이 모두 가상화의 개념에 속하게 될 것 같다.\n \n  추가로 우리가 현재까지 컴퓨터를 이용해 자연스럽게 접하고 있는 여러 사진, 영상 등도 사실은 현실을 가상화 한 부분이라고 볼 수 있고, 해당 부분이 현재는 AI 사진, AI 영상 등으로 한 단계 더 추상화되는 느낌이 있다.\n \n  가상화는 현실에 존재하는 부분을 데이터로 변화해 컴퓨터로 처리하는 세상으로 옮겨 모방, 재해석하거나, 현실은 아니지만 인간의 관념과 지각으로 현실을 대체할 수 있는 상상의 대상을 만드는 2가지의 종류가 있는 듯한다. 물론 현실에 존재하는 많은 부분도 사람의 관념적인 부분을 실제 형태로 구현했다는 측면에서는 형상화되기 전에 이미 가상화된 데이터 형태로 존재하고 있었다고 봐도 되지 않을 까는 싶다. 그렇게 생각함 요즘 뇌 과학 쪽에서 언급하듯 사람 자체가 이미 세상과 타인을 모델링하고 있지 않나 싶기도 하고 말이다.\n \n \n1.1 효율성의 추구\n  이전 글(IT에 대한 짧은 단상)에서 얘기했듯 IT의 가장 근간은 현실에 비해 아주 많이 빠른 처리를 하는 컴퓨터라는 존재가 있기 때문에 가능하다고 본다. 그 중에서도 현재 시점에서 CPU는 (GPU 가 조금 섭섭해할지는 모르겠지만) 태양계의 태양 같이 아직 까지는 해당 부분의 가장 기본이 되는 중심일 것이다.\n \n  일반적으로 사람은 효율성을 최대화하려는 경향을 가지고 있다고 본다. 가지고 있는 시간이나 자원 등을 최대한(또는 최소한) 사용하여 최대한의 아웃풋을 내는 것을 삶의 목표로 삼고 가는 경우가 많다. 반대로 얘기되는 비움이나 미니멀리즘 같은 개념 또한 어찌 보면 완전하고, 기계처럼 확정되게 움직이지 못하고 만족하지 못하는 사람의 성향에 대한 또 다른 측면의 효율성의 추구일 수도 있다는 생각도 든다(개인적으론 이 불완전 함이 현재 완벽함을 향해서 나아가고 있는 AI에 대해 인간이 느끼는 미묘한 이질감이 아닐 까도 싶긴 하고 말이다).\n \n[ 그림  2-1  용돈을 알차게 쓰기 ]\n\n\n \n \n  컴퓨터 안의 효율성의 추구를 이해하기 위해 여러분이 심부름센터를 시작했다고 생각해 보자. 우선 처음엔 매출이 얼마나 될지 자신이 없을 거기 때문에, 사람을 고용하진 못하고 나 홀로 창업을 해서 상황을 보면서 조금씩 일하기 시작한다. 처음엔 실수를 방지하기 위해 한 명의 고객만을 받아 그 일을 다 처리하고, 이후 다음 고객의 일을 받아 순차적으로 일을 처리했다.\n \n  근데 점점 일이 익숙해지다 보니 한 고객의 일을 처리하는 사이에 아쉽게 비어 있는 시간들이 눈에 들어오기 시작한다(예를 들어 법원에 서류를 접수하고 나면, 재판일자가 확정되기까지 멍하니 있는 것 밖에 따로 할 일이 없다. 또는 지하철을 이동하면서도 뭔가 스마트폰으로 처리할 수 있는 다른 업무들도 많을 것 같다)\n[ 그림  2-2  마트 심부름 하기 ]\n\n\n\n\n  이제 조금씩 멀티태스킹 모드가 되면서 한 고객으로부터 여러 개의 일을 받아서 시간시간을 나누어 채우면서 동시에 진행되는 것 같이 보이도록 일을 하기도 하고(서류를 접수하고 결과가 나오길 기다리는 중간에 다음 서류를 작성하거나, 다른 겹치지 않는 일들을 수행), 다른 업무 타입의 고객의 일을 받아서 중간중간 대기 시간에 수행하다 보니 가진 시간과 능력을 낭비 없이 쓰면서 효율적으로 개인의 리소스를 사용할 수 있게 되었다.\n \n  점점 일과 매출에 자신이 붙으면서 본인과 비슷한 처리 능력을 가진 다른 직원들을 채용하기 시작한다. 이제 인적 자원을 이용하는 방법의 조합은 점점 더 다양하게 되어, 한 고객의 일을 여러 직원에게 나누어 동시에 수행하기도 하며, 여러 고객을 일을 그때그때마다 시간이 비는 직원에게 나누어서 일을 시킴으로써 회사에 있는 리소스를 최대한 사용하기 시작했다. 가끔 설문 조사 같이 완전히 병렬로 처리가 가능하지만 보유 직원 수가 안 되어 포기해야만 했던 일들은 외부의 전문적인 조사 회사한테 아웃소싱을 주고 지불하는 비용과의 차액을 벌기도 한다. 이제는 해당 프로세스가 너무 효율 적으로 돌고 있어서, 일부 놀고 있는 시간들이 빤히 보이기 때문에 좀 더 다른 일이 동시에 들어온다면 좋겠다는 생각이 든다.\n \n  조금 재밌는 현상은 고객 회사에서도 비슷하게 이런 최적화를 이루려 하는 노력이 있어서, 굳이 해당 고객사의 여러 담당자들이 이 쪽에 개별로 요청을 하지 않고, 그쪽에서도 우선순위를 두어 일을 정리하여 한 사람이 맡아 이쪽에 요청하게 되었다. 전혀 기대는 안 했던 부분이지만 저 쪽도 쓸데없는 요청 채널과 처리 담당자 들 간의 커뮤니케이션 비용을 낭비하지 않고, 우리 쪽도 괜히 번거롭게 여러 담당자들을 대응하느라 시간을 보내지 않아도 되는 장점이 생기게 된 듯하다.\n \n  조금 더 회사가 커지게 되자 각 직원들을 하나의 독립된 인원이기보다는 하나의 가상화된 단위로 만들면 어떨까 하는 생각이 들었다. 굳이 고객들이 우릴 특정한 개개의 사람으로 인지할 필요가 있을까? 고객들이 오라클이라는 가상의 중재 직원한테 요청하면, 우리가 각각 여유가 있을 때 오라클의 역할을 하면서 역할극을 수행하면 어떨까? 물론 이 가정은 바뀐 이 시스템이 우리가 각각 일하는 개별 상황보다 좀 더 비용이나 성능 측면에서 최대한 효율적으로 시너지와 부가가치를 일으킬 수 있다는 보장이 되어야 한다는 조건이 있긴 하다.\n \n \n1.2 프로세스와 쓰레드\n  앞의 심부름센터 회사(결국은 꽤 큰 컨설팅 회사가 된듯하지만) 얘기가 나름 그럴듯하게 들렸다면, 비슷한 상황이 컴퓨터의 세상에서도 마찬가지로 일어나게 된다. 처음에 만들어진 컴퓨터는 현재 있는 멀티 코어 형태의 컴퓨터가 아닌 CPU 안에 하나의 코어만 존재하는 막 창업한 1인 심부름 센터 같은 상황이었을 것이다. 해당 상황에서 처음엔 절차적으로 한 개씩의 작업을 수행하다가(아주 옛날의 긴 종이 형태의 구멍이 뚫린 테이프 입력을 사용하던 컴퓨터를 생각해 보자), 이후 점점 입력기와 처리 로직이 세련되어 감으로서(사실 이것도 유연성을 확보하기 위한 가상화라고 볼 수도 있다) 급한일을 하다 가도 시간의 여유가 생기면(컴퓨터 세상에서는 흔히 “I/O 기반 업무”라고 칭한다) 중간중간 다른 일을 끼워 넣어 할 수 있었을 것이다.\n \n  프로그램은 최초에 하나의 프로세스라는 단위로 메모리 상에 만들어져 실행되게 되어 있었지만, 이후 프로세스는 내부에 작은 할 일 단위로 나눠진 쓰레드 란 서브 일꾼들을 보유하게 되었다(앞의 마지막 단계에서 나온 개인이 구분되지 않는 이상적인 오라클 일꾼의 명시적 형태라고 생각해 보자). 굳이 고객이 심부름센터에 와서 담당자와 직접 얘기하지 않아도 일만 전달해 준다면 누군가 한가한 사람이 수행할 수 있게 되듯이, CPU는 엉덩이가 무거운 프로세스라는 대상 들과 얘기하며 일을 하던 방식을 버리고, 상대적으로 가벼운 쓰레드라는 단위를 대상으로 필요한 작업을 처리하게 되었다(현재의 OS들에서 CPU는 프로세스와 직접 일을 하진 않고, 멀티 프로세싱이라 하더라도 해당 프로세스의 하나뿐인 쓰레드와 같이 일을 한다고 한다).\n \n  여기에 여러 직원을 고용하게 된 심부름센터처럼 하나의 CPU 내에 여러 개의 일할 수 있는 코어가 있는 멀티 코어 CPU 가 나오게 되어 위의 프로세스-쓰레드의 관계를 조합해서 CPU 안의 코어들을 알차게 쓰기 위한 여러 전략(멀티 프로세싱, 멀티 쓰레드)들이 나타나게 된다. 또한 설문 조사 건처럼 너무 복잡하진 않지만 병렬적인 부분이 필수적으로 요구되는 부분들은 GPU에 의뢰하여 병렬로 빠르게 수행하게도 되었다.\n \n  반면에 고객이 스스로 요청 건의 우선순위를 정리해 업무 효율화를 추구한 것처럼, 프로그래밍 측면에서도 CPU만 믿고 커뮤니케이션 비용을 소모하기는 싫다는 움직임에 따라 코루틴과 같이 하나의 쓰레드 만을 계속 사용하면서도 프로그램 내부적으로 중요한 업무를 “CPU 기반 업무” 인지 “IO 기반 업무” 인지를 고려해 자체 스케줄링 하여 CPU와 독립적으로 동시성 최적화를 하는 움직임도 진행되고 있다.\n \n  결국 하드웨어, 운영체제, 프로그래밍 3개의 측면에서 나름 비싼 컴퓨터 하드웨어를 최대한으로 사용하여 최대의 이익을 만들어 내려는 기술적인 노력이 공동으로 일어나고 있다고 볼 수 있다. CPU는 좀 더 최적화된 명령어 배치 및 하드웨어적 연산의 효율화를 통해서, GPU는 병렬에 최적화된 다수의 프로세서 묶음을 이용한 동시 연산을 통해서, 운영체제는 프로세스와 쓰레드의 최적화된 관리를 통해서, 프로그램은 자신이 할 일들의 최적화된 의뢰를 통해서 각각 열심히 협업을 하고 있다.\n \n  여기에 더 나아가서 여러 개의 CPU, 여러 개의 서버에 대해서 마치 CPU 내의 코어를 병렬 관리한 것과 비슷하게 동시성 관리를 추구하는 경우도 있게 된다(마치 여러 개의 팀으로 나누거나 여러 회사가 협력해 하나의 사람처럼 일을 하듯이 말이다). M365 나 IOS 같이 운영체제, 클라우드, 인증을 이용해 밀접하게 설계된 요즈음의 소프트웨어 환경들을 보면, 인터넷에 연결된 컴퓨터들이 누군가의 관찰 하에 마치 하나의 컴퓨터처럼 움직이는 세상이 되었다는 생각도 들기도 한다. 개인적으로는 이러한 부분들을 보면 마치 아래에 나오는 꼭두각시 인형극의 한 장면이 생각난다.\n \n[ 그림  2-3  꼭두깍시 인형극 ]\n\n\n \n \n \n1.3 프로세스와 쓰레드, 코루틴, GPU - 파이썬 예제\n  그럼 여기서 잠시 기술적인 측면으로 넘어가서 파이썬 코드를 이용해 앞에서 얘기한 CPU, OS 측면의 프로세스/쓰레드의 동작과 프로그래밍 측면의 코루틴, GPU측면에서의 병렬 연산에 대해서 간단히 살펴보도록 하자.\n \n  우선 프로세스가 무언지 살펴보자. 리눅스도 비슷하지만 윈도우 작업관리자의 세부 정보 탭을 보면 운영 체제 내부 및 우리가 사용하고 있는 프로그램에 대한 프로세스들이 다양하게 리스트업 되어 있다. 아래 작업 관리자 창의 “세부 정보” 탭을 보면 지금 이 글을 쓰고 있는 MS 워드(WINWORD.EXE) 프로그램의 프로세스도 같이 보이고 있다.\n \n\n\n \n \n1) 멀티 프로세스 동작 보기\n  그럼 첫 번째로 멀티 프로세스의 동작을 간단히 봐 보자. 앞서 얘기한 여러 직원들이 동시에 일을 하는 상황이다. 아래의 파이썬 코드를 보면 우리가 상황을 찬찬히 살펴보기 위한 시간을 벌기 위해서, 20회에 걸쳐 10초씩 쉬면서 자신의 프로세스 이름과 아이디를 프린트하는 “work”라는 메서드가 정의되어있다.\n \n  그 아래 부분을 보면 해당 work라는 일을 하는 프로세스를 3개 생성한다(실제로는 현재의 운영 체제들은 프로세스 내에 최소 1개의 쓰레드를 만들기 때문에 해당 일이 그 쓰레드에 할당되어 CPU에게 의뢰될 것이다). 멀티 프로세스를 띄우는 파이썬 프로그램 자체도 역시 프로세스 일 것이기 때문에 가장 바깥의 메인 프로그램 코드 내에도 프로세스 이름과 아이디를 출력하게 했다.\n \nfrom multiprocessing import Process, current_process\nfrom time import sleep\n \ndef work():\n    # 20회에 걸쳐 10초씩 쉬면서 루프 번호, 프로세스 이름, 프로세스 아이디를 출력한다.\n    for i in range(10):\n        print(str(i) + \": \" + current_process().name + \"-\" + str(current_process().pid))\n        sleep(10)\n    return\n \nif __name__ == \"__main__\":\n    # 메인 프로그램의 프로세스 이름과 아이디를 출력한다.\n    print(\"main: \" + current_process().name + \"-\" + str(current_process().pid))\n \n    # work 프로세스를 등록 한다.\n    p1 = Process(target=work)\n    p2 = Process(target=work)\n    p3 = Process(target=work)\n   \n    # 각각의 프로세스를 병렬로 실행한다\n    p1.start()\n    p2.start()\n    p3.start()\n    p1.join()\n    p2.join()\n    p3.join()\n\n\n\n \n  프로그램을 실행해 보면 아래와 같이 출력이 된다.\n \nc:\\Python\\Code\\Blog>python ch2_multi_process.py\nmain: MainProcess-3636\n0: Process-1-1004\n0: Process-2-8032\n0: Process-3-4036\n1: Process-1-1004\n1: Process-2-8032\n1: Process-3-4036\n…\n\n\n\n \n  이 부분을 아까 봤던 작업관리자를 통해 보게 되면 아래와 같이 4개의 파이썬 프로세스가 보이게 된다.\n\n\n \n  그런데 위의 화면으로는 자세한 실행 상황을 보기가 조금 힘들기 때문에 조금 더 상황을 자세히 보여주는 MS에서 제공하는 프로세스 탐색기(Process Explorer)라는 툴을 통해서 봐 보자.\n \n\n\n \n \n  해당 유틸리티로 보게 되면 메인 프로세스인 3636번을 기준으로 3개의 서브 프로세스들이 생성되어 돌아가고 있음을 트리 형태로 볼 수 있다. 첫 번째 python.exe 서브 프로세스(1004)를 더블 클릭해 Threads 탭을 보면 해당 프로세스에 속한 1개의 쓰레드(16408)가 돌아가고 있는 것을 볼 수 있다(아까 얘기했듯이 요즈음의 운영체제에서는 CPU가 프로세스와 직접 업무에 관해 대화하지 않고 쓰레드를 통해서 작업을 진행한다고 한다).\n \n \n2) 멀티 쓰레드 동작 보기\n  두 번째로 멀티 쓰레드 동작을 보자. 멀티 프로세스 대신 쓰레드를 사용하는 경우의 장점은 아무래도 프로세스를 왔다 갔다 바꾸면서 일하는 것보다는 쓰레드를 교체하면서 일하는 게 작업 전환 시 노력이 적게 들고, 자원도 적게 필요해 유리하다고 한다(앞의 심부를 센터에서 고객을 계속 바꿔가며 얘기하는 것보다, 고객의 일만을 추상화해서 한 사람이 교대로 처리하는 게 더 효율적인 것과 비슷하다고 볼 수 있다).\n \n  다만 항상 장점만 있는 거는 아니라 쓰레드 사이의 데이터 공유가 좀 더 까다롭고, 정말로 CPU를 극한으로 쓰는 무거운 일들만 처리한다면, 절대적으로 일이 많은 한 사람이 아무리 열심히 이리저리 궁리하며 일해도 한계가 있듯이 하나의 프로세스의 처리 능력 범위를 넘어가진 못 하며, 오히려 쓰레드 전환 시의 커뮤니케이션 비용에 의해 성능이 떨어질 수 있다는 한계는 있다. 아래 코드를 보면 앞의 멀티 프로세스 코드와 거의 비슷하고, 프로세스 생성 대신에 쓰레드를 만드는 부분만 다른 것을 알 수 있다.\n \nfrom threading import Thread, current_thread, get_ident\nfrom multiprocessing import Process, current_process\nfrom time import sleep\n \ndef work():\n    # 20회에 걸쳐 10초씩 쉬면서 루프 번호, 프로세스 정보, 쓰레드 정보를 출력한다.\n    for i in range(20):\n        print(str(i) + \": \" + current_process().name + \"-\" + str(current_process().pid) + \"-\" + current_thread().name + \"-\" + str(get_ident()))\n        sleep(10)\n    return\n \nif __name__ == \"__main__\":\n    # 메인 프로세스의 루프 번호, 프로세스 정보, 쓰레드 정보를 출력한다.\n    print(\"main: \" + current_process().name + \"-\" + str(current_process().pid) + \"-\" + current_thread().name + \"-\" + str(get_ident()))\n \n    # work 쓰레드를 등록하고 실행한다.\n    th1 = Thread(target=work)\n    th2 = Thread(target=work)\n    th3 = Thread(target=work)\n   \n    th1.start()\n    th2.start()\n    th3.start()\n    th1.join()\n    th2.join()\n    th3.join()\n\n\n\n \n \n  역시 실행을 해보고 Process Explorer를 살펴보면 하나의 프로세스 번호(9448) 밑에 메인 쓰레드 1개(16576)와 작업 용인 서로 다른 서브 쓰레드 3개가 실행됨을 알 수 있다.\n \nc:\\Python\\Code\\Blog>python ch2_multi_thread.py\nmain: MainProcess-9488-MainThread-16576\n0: MainProcess-9488-Thread-1 (work)-16532\n0: MainProcess-9488-Thread-2 (work)-4640\n0: MainProcess-9488-Thread-3 (work)-1896\n1: MainProcess-9488-Thread-1 (work)-16532\n1: MainProcess-9488-Thread-2 (work)-4640\n1: MainProcess-9488-Thread-3 (work)-1896\n…\n\n\n\n \n\n\n \n \n  ※ 참고로 파이썬(표준인 CPython)에서의 멀티쓰레드는 GIL(Global Interpreter Lock)이라는 제약이 있어서, 멀티 코어를 보유한 상태에서도 오직 한 개의 쓰레드만 동시에 동작할 수 있어서 진정한 의미의 멀티쓰레드는 아니라고 평가되고는 있다. 그래서 위의 코드는 현재로서는 타 언어에서 하나의 코어로 멀티쓰레딩을 하는 효과 정도가 있을 것 같다. 이 부분은 파이썬으로 개념을 쉽게 보여주기 위한 코드라고 생각해 주면 좋겠고, 파이썬 3.13 버전에서는 이 GIL 제약을 disable 하는 옵션이 제공(기존 라이브러리와 쓰레드 호환성 문제는 생길 수 있다)될 것이라고 하니, 수개월 후에는 이런 상황이 조금은 변할 듯도 싶다^^ \n \n \n3) 프로그램 내에서의 멀티 테스킹(코루틴) 동작 보기\n  세 번째는 아까 얘기한 고객 회사 내부에서 나름대로의 우선순위를 정해 요청하는 부분을 생각해 보자. 개발 쪽에서 많이 얘기하는 보통 코루틴이나 가상 쓰레드 라는 용어가 여기에 해당될 것 같다. 코드는 앞의 형태와 비슷하게 만들게 되어있어서 count라는 메서드를 정의해서 마찬가지로 ayncio라는 쪽에 태스크를 등록한다. 역시 이것도 실행 중간에 100초의 시간을 주어 관찰할 시간을 확보했다.\nimport asyncio\n \n# count 업무 정의\nasync def count():\n    print(\"One\")\n    await asyncio.sleep(100)\n    print(\"Two\")\n \n# count 업무 등록해 실행\nasync def main():\n    task1 = asyncio.create_task(count())\n    task2 = asyncio.create_task(count())\n    task3 = asyncio.create_task(count())\n    await task1\n    await task2\n \nasyncio.run(main())\n\n\n\n \n  실행을 해보고 Process Explorer를 살펴보면 하나의 프로세스 번호 밑에 메인 쓰레드 1개만 달랑있는 상태가 보인다. 동시에 실행되고 있는 결과로 추정하기에는 아마도 프로그램 쪽에서 알아서 스케줄을 조정해 병렬 수행을 수행하고 있을 것이다. 하나 특이한 건 mswsock, dll이라는 소켓 관련 라이브러리를 이용하여 내부적으로 동시성을 관리하는 것도 같다.\n \nc:\\Python\\Code\\Blog>python ch2_ayncio.py\nOne\nOne\nOne\nTwo\nTwo\nTwo\n\n\n\n\n\n \n \n4) GPU를 이용한 병렬 연산 비교하기\n  마지막으로 멀티태스킹 쪽은 아니지만, 같은 병렬로 작업 속도를 높인다는 측면에서 이전 글에서 얘기한 GPU에 대한 예제를 하나 보려 한다. GPU는 얘기했듯이 CPU 보다 일반적인 연산은 느리지만, 보유한 수많은 코어를 이용해 병렬 연산에 대해서 빠르게 수행할 수 있는 컴퓨터 부품이다.\n \n  아래는 CPU를 이용하는 기존 파이썬 수치 연산 라이브러리인 Numpy와 RTX 3600 그래픽 카드의 GPU를 이용하는 CUDA 라이브러리를 통해 동가의 연산을 수행할 수 있는 Cupy를 이용해 10000*10000개의 행렬에 대한 곱 연산을 수행하는 예제이다.\n \nimport numpy as np\nimport cupy as cp\nimport time\n \n# 테스트 용 10000*10000 행렬을 만든다\nN = 10000\nnp_matrix_1 = np.random.rand(N,N)\nnp_matrix_2 = np.random.rand(N,N)\ncp_matrix_1 = cp.random.rand(N,N)\ncp_matrix_2 = cp.random.rand(N,N)\n \n# 일반적인 CPU 연산을 이용하는 Numpy 라이브러리를 통해 두 개의 행렬을 곱한다.\nnp_start = time.time()\nnp.matmul(np_matrix_1, np_matrix_2, out=None)\nnp_end = time.time()\n \n# CUDA 라이브러리를 통해 GPU 연산을 이용하는 Cupy 라이브러리를 통해 두 개의 행렬을 곱한다.\ncp_start = time.time()\ncp.matmul(cp_matrix_1, cp_matrix_2, out=None)\ncp_end = time.time()\n \n# 각각 소요된 시간을 측정 한다.\nprint(\"NP runtime: \" + str(np_end - np_start))\nprint(\"CP runtime: \" + str(cp_end - cp_start))\n\n\n\n \n  위의 코드를 실행하면 실행할 때마다 아마도 캐싱 등에 따라 시간은 좀 차이 나지만, 아래와 같이 CPU에 비해서 꽤 빠르게 실행되는 GPU의 모습을 볼 수 있다. 다른 한편으로는 이렇게 보니 코어 수는 RTX 3060 모델의 3584개와 비교할 때 물리코어가 6개인 CPU(597배 차이)가 속도는 10 배 정도밖에 차이가 나지 않아서 CPU 도 게임으로 따지면 수많은 GPU 군사들과 대적할 수 있는 소수의 일당백의 에픽 무장 들이라고도 볼 수 있을 듯도 싶다^^;\n \nc:\\Python\\Code\\Blog>python numpy_vs_cupy.py\nNP runtime: 7.810051202774048\nCP runtime: 0.9222331047058105\n\n\n\n \n \n1.4 가상 머신\n  그다음의 가상화 단계는 개인적으로는 여러 프로그래밍 언어에서 나온 가상머신 개념이라고 생각한다. 자바나 파이썬, 요즘의 .NET CORE 같은 언어들은 윈도우, 리눅스 등 종류에 상관없이 공통의 코드 실행이 가능한 표준 가상 환경을 제공하여 동일한 코드로 동일한 동작을 하도록 지원한다. 다만 해당 부분이 100% 호환이 라기보다는 “OS의 설계에 맞춰서 최대한”이라고 하는 것이 맞을 것 같다. 예로서 앞에서 봤던 멀티 프로세싱 관련 코드는 윈도우와 리눅스 상에서 운영 체제가 서로 멀티 프로세스를 처리하는 방식이 달라서 실제 만들어 보면 조금은 상이하게 동작하기도 한다.\n \n  또한 “종류에 상관없이”라는 부분도 실제로 해당 언어를 유지 보수하는 쪽에서 특정 OS 와의 호환성에 맞춰 표준 환경을 만들어 배포하겠다는 의지와 리소스가 있어야 가능한 것 같다. 그래서 이상적으로는 OS 종류와 관계없이 돌아가야 하겠지만, 실제 적으로는 지원하는 OS에 한해서 최대한 비슷하게 가 맞을 것은 같다.\n \n  왜 이 부분을 가상화에 있어 의미 있는 부분이라고 생각하냐면, 이 경우 처음에는 속도 측면에서는 컴퓨터 아키텍처에 맞춘 기존의 C 보다 느려 비효율 적이라는 얘기도 있었지만, 결국은 하드웨어의 발전으로 해당 우려는 사라졌고, 프로그램이라는 것이 컴퓨터 아키텍처와 별개로 임의의 논리적인 형태로 존재하고 실행될 수 있는 가상적인 존재라는 것을 자연스럽게 받아들이게 된 계기라고 생각한다. 더 나아가 프로그램이 이렇게 가능하다면 그 프로그램을 실행시키는 OS 또한 프로그램이다 보니 마찬가지가 아닐까라고 생각하게 되지 않았을까 싶다.\n \n  처음엔 각각 개별의 충전기를 사용해 사용하던 부분이 하나의 멀티 충전기로 여러 개의 다른 장비를 충전할 수 있게 됐 듯이, 컴퓨터 안의 논리적인 특정 객체로 형상화할 수만 있다면 컴퓨터 아키텍처의 종류, OS의 종류와 관계없이 유연한 소프트웨어 형태로 존재할 수 있다고 생각하게 된 부분이 현재에 추구되는 가상화와 비슷하지 않은가 싶다(마무리 작업을 하다 보니 플스, 엑스박스, 스위치, 모바일, PC, 등 여러 플랫폼에서 돌아가는 게임 타이틀이 더 적절한 비유일 듯도 싶다^^).\n \n[ 그림  2-4  멀티 충전기 ]\n\n\n \n \n \n1.5 가상 컴퓨터\n  그다음의 가상화 단계로 Hyper-V 나 VirtualBox, VMWARE, Nutanix 같은 툴로 가상화된 컴퓨터가 있을 것이다. 앞의 심부름센터 얘기로 돌아가 보면 충분히 능력이 있는 특정한 사람이 있어서 일인 다 역을 수행하고 있다고 생각해 보자. 뭐 변장을 할 수도 있고 여러 온라인 커뮤니케이션 툴을 이용해서 이러한 역할을 할 수 있다(요즘 많이 이슈가 되는 로맨스 스캠 같은 경우도 먼 곳에서 사기꾼들은 이런 행동을 하고 있다고 볼 수 있다. 사기를 당하는 사람은 너무도 자연스럽게 서로 다른 사람처럼 바꿔가며 동시에 일을 수행하는 스파이의 행위 때문에 여러 명을 동시에 만나는 것으로 착각하고 만남을 지속하게 될 것이다).\n \n[ 그림  2-5  일인 다 역의 스파이 ]\n\n\n \n \n \n  점점 컴퓨터의 성능이 빨라지게 되며 많은 가동 시간 동안 앞에 얘기한 프로세스, 쓰레드, 코루틴 등이 한가하게 놀고 있을 때쯤 가상화라는 화두가 점점 실제로 상용화가 되면서, 윈도우 컴퓨터에서 리눅스와 윈도우를 동시에 돌린다거나, 맥 컴퓨터에서 윈도우를 동시에 돌리는 등의 가상화 기술과 소프트웨어들이 생겨나기 시작했다(사실 이것 이전에도 시간적으로는 현대의 가상화 환경처럼 동시적으로 동작하는 건 아니지만 멀티 부트 로더나 고스트 같은 OS 이미지의 백업, 복원 소프트웨어를 통해 여러 종류의 윈도우나 리눅스로 자유롭게 부팅을 하거나, 시스템의 특정 시점으로 복원하는 일도 유행했다. 이 부분들도 현대적 가상화의 전 단계라고 볼 수 있을 듯은 싶다).\n \n  추가로 하나의 컴퓨터 안을 나누어 여러 OS를 동시에 돌리던 부분에서 확장하여, 여러 컴퓨터 하드웨어를 최적화하여 그룹 형태로 구축 후, 다양한 OS 들을 해당 환경에서 생성하고 통합하며 관리하는 솔루션 들도 만들어졌다. 소프트웨어를 이용해 여러 물리적 컴퓨터 환경을 연결하는 가상화를 만들었다고 볼 수 있다. 물론 근래의 많은 NoSQL, 클러스터링 기반의 서비스들이 해당 부분을 비슷하게 구현하여 사용하지만, 이 여러 서버들을 합쳐 구축한 운영체제의 가상화부터 많은 사람들이 서버 군을 이용한 가상화에 익숙하게 되지 않았나 싶긴 한다.\n \n  다만 이런 가상화가 가능하게 된 근본적인 이유는 이전 글에서 얘기했 듯 컴퓨터 세상이 결국은 0과 1의 데이터로 이루어졌기 때문이 아닐까 싶다. 우리가 인지하는 여러 컴퓨터 부품들도 물리적 형태를 띠고 있기 하지만 하는 일은 정보의 저장 및 처리에 특화되어 있다. 그래서 여러 물리적인 컴퓨터 부품들의 데이터 저장 및 처리 과정을 실제 물리적인 구조와는 다르지만 비슷한 차원에서 흉내 낸다면 우리가 신기하게 생각하는 가상의 컴퓨터가 물리적인 컴퓨터 안에서 돌아가게 되는 일이 생기는 게 아닐까 싶다(유닛 테스트 쪽과 비교한다면 테스팅 어플의 스텁과 드라이브 같은 존재라고 할까).\n \n  또한 우리가 생각하는 컴퓨터 부품이라는 것도 어찌 보면 몇 가지 분류로 비슷비슷한 감이 있다. 만약 램, SSD, 하드디스크, 레지스터 등의 속도와 가격이 비슷비슷 해지는 상황이 생긴다면 언젠간 현재의 메인 보드의 역할은 축소되고 하나의 칩 안에서 연산, 저장, 디스플레이 등의 모든 역할을 수행하는 세상이 올지도 모르겠다. 역시 이 부분도 컴퓨터 세상의 모든 것이 데이터를 처리하는 행위이기 때문에 가능한 부분이 아닐까 싶다.\n \n \n  다시 가상 컴퓨터 얘기 쪽으로 가면 이러한 가상화의 단점은 아무래도 구현된 대상이 가짜라는 것이다. 앞에서 본 컴퓨터 내부의 가상화도 마찬가지지만 실제 많은 경우 너무 스위칭이 빨라서 동시에 일어나는 것처럼 보인다는 것 이외에는(멀티 프로세싱은 조금 논쟁이 있을 듯하지만), 아무리 컴퓨터가 빠르더라도 상황에 따라 서로서로 영향을 미치게 될 가능성이 있다. 그래서 보통 비슷한 성능으로 표시되는 가상 컴퓨터는 물리 컴퓨터에 비해서 성능이 어느 정도는 떨어진다는 단점이 있다. 또한 현재의 OS와 다른 타입의 OS 나 다른 CPU 아키텍처에서만 동작하는 OS를 가상화하여 돌린다면 실행하는 하드웨어와의 최적화 이슈 때문에 더욱더 단점이 두드러지게 될 것이고 말이다(컴퓨터에서 돌리는 최신 기종의 게임 에뮬레이터를 생각해 보자).\n \n  추가로 개인이 아닌 상용으로 간다면 최대한 묶여 있는 컴퓨터 들을 알차게 써야 되는 입장에서 이러한 단점 부분은 아마 조금 더 두드러지게 될 것이다. 다만 멀티 프로세스나 쓰레드 등의 병렬처리 방식이 IO 기반 업무의 동시 처리에서는 큰 유용성을 가지 듯이, 개개의 가상 서버들이 평소에 많은 연산을 집중적으로 사용하지 않는 다면 여러 컴퓨터들을 묶어 그 보다 더 많은 수의 가상 컴퓨터들을 만들어 알차게 사용할 수 있는 방법이 될 수 있는 건 분명하기 때문에 많은 기업들이 사용하지 않을까 싶다.\n \n \n1.6 컨테이너\n  현재는 도커 또는 쿠버네티스로 대표되는 컨테이너는 어찌 봄 앞에서 얘기한 이상적인 심부름센터의 인력 활용 모델이 구현된 것이라고 볼 수 있다. 실제 컴퓨터 내부에서의 코어와 프로세스, 쓰레드, 코루틴의 어울림 과도 비슷해 보이고 말이다.\n \n  기존의 컴퓨터에서 무거운 프로세스를 대신에 쓰레드가 주요 작업을 수행했던 것처럼, 앞의 가상 컴퓨터와 비슷하지만 OS 전반의 대부분의 역할들은 메인 OS와 공유해 이용하면서 컨테이너 실행을 위한 최소의 부분만을 별개로 가상화해서 돌아간다는 것이다. 집으로 따지면 하나의 공간을 나눠 여러 개의 집을 만들어 사용하다가, 공용 공간을 과감히 같이 쓰고, 민감한 개인 방만 따로 만들어 사용하는 셰어 하우스 같은 느낌이다. 개인적으로는 OS에 대부분의 역할을 맡기고 프로세스 단위로 돌아가던 기존의 멀티태스킹을 조금 더 큰 실행 범위로 모듈화 해 구성하여 돌아가고 있다는 느낌도 있다.\n \n[ 그림  2-6  공통 기능을 공유하고 서로 다른 부분만 신경 쓰기 ]\n\n\n \n \n  이러한 과정에서 앞에서 얘기한 가상 이미지의 장점을 십분 활용해서, 레고 블록처럼 기능을 필요한 기능 등을 모듈 별로 조합하거나, 표준 화 하거나, 손오공의 분신처럼 복제하거나 등등 작은 어플리케이션 실행 환경 조각들이 자유롭게 움직이게 할 수 있다. 앞의 가상 컴퓨터와 비교해 본다면 OS에서 각각 수행하던 연산들이 사라지기 때문에 좀 더 같은 리소스 상에서 많은 개별의 가상 컴퓨터들이 수행 가능한 효과를 가지게 될 것이다. 다만 해당 경우 중심이 되는 실제 OS의 부하가 증가될 터이지만 결과적으로 기존의 각각의 가상 OS를 돌리게 되는 행위보다는 몇몇 측면에서 더 효율 적이기 때문에 이런 기술이 각광을 받지 않게 되지 않았을까 싶다.\n \n  이렇게 모듈화가 됨으로 서 사실 우리가 프로그램 영역에서 사용하던 여러 해결 방식들을 끼워 넣어 활용할 수 있게 된 것 같다. 어찌 보면 하드웨어라는 딱딱한 영역으로 생각됐던 영역이 비로소 프로그램의 일부 조각처럼 부드럽게 추상화된 일이 생긴 것도 같다. 그렇게 됨으로 서 해당 구조와 인터페이스를 통해서 마치 우리가 소프트웨어를 설계하 듯이 컨테이너를 만들고 띄우고, 조절하고 하는 일이 가능하게 되었다고 본다.\n \n \n1.7 클라우드\n  마지막으로 클라우드에 대한 얘기를 해보자. 클라우드는 앞에 얘기한 모든 가상화를 모아 놓은 종합선물 같은 느낌이다. 윈도우, 리눅스, 안드로이드, IOS 같이 사람들이 인지하는 정식 OS같이 취급은 안 되지만, 앞의 가상화로 이루어진 많은 기술들을 수많은 API를 통해서 컨트롤하는 여러 집합 서버 간의 가상화된 OS라고 생각한다. 이것은 일반적인 OS가 제공하는 API들을 통해서 다른 어플리케이션들과 커뮤니케이션하는 것과 비슷하다.\n \n  클라우드는 굳이 나누자면 프라이빗과 퍼블릭으로 나누는데 한쪽은 솔루션 기반, 한 쪽은 서비스 기반이라고 볼 수 있을 것 같다(물론 프라이빗을 오픈 소스만으로 구축해 매끄럽게 운영하는 회사들도 있겠지만 그런 회사들은 아마 클라우드 사업을 스스로 수행할 만큼 인력, 회사의 규모나 커스터마이즈에 대한 시행착오가 충분히 쌓인 회사일 것 같다).\n \n \n  프라이빗 클라우드는 서버 팜은 해당 회사에서 준비하고 클라우드 운영을 지원하는 솔루션을 구입 또는 구축해서 운영하는 형태이다. 그래서 모든 물리적인 비용은 기존과 비슷하게 지불하면서도 앞에 나온 가상화 기술들을 통해 시스템 리소스를 최대한 가용하려 하는 방식이다. 라이선스에 따라 다르겠지만 해당 가격이 어느 정도 합리적이라면(아마 퍼블릭 클라우드에 비해 경쟁력이 있어야 하니 웬만하면 그렇게 포지셔닝을 할 것은 같다) 퍼블릭에 비해서는 비용적으로 유리한 측면이 있을 것 같다.\n \n  다만 평소의 운영 측면이나 장애 시의 빠른 대응 등 많은 부분에 있어서는 실제 운영하는 인력의 능력이 중요한 키 포인트가 될 것이다. 만약 스스로 구축한 환경이라면 해당 부분에 대한 의존도가 더 높아질 터이고, 관련 주요 인력의 퇴사 등은 향후의 운영 고도화 및 안정성에 크리티컬 한 영향을 미치게 될 것이다. 다만 솔루션 자체는 아마 서포트하는 회사의 태도나 기술력에 따른 편안함의 차이는 있겠지만 안정적인 운영은 보장될 것이다. 다만 항상 그렇지만 다른 솔루션으로 단기간 옮기기에는 현실의 많은 어려움이 따르기 때문에, 해당 솔루션의 가변적인 라이선스 정책 변경에 따른 비용 리스크는 생각해야 한다.\n \n \n  반대로 우리가 일반적으로 클라우드라고 얘기하는 퍼블릭 클라우드는 우리가 집에서 전기나 가스를 사용하거나 OTT를 매달 구독하여 이용하는 개념과 비슷하다. 각자의 회사에서 IDC 내에 물리적으로 서버나 네트워크 장비를 구축해 내-외부 인원들이 직접 운영하던 형태에서, 물리적 구성이나 유지 운영은 클라우드 회사 쪽에서 책임지고, 해당 구축된 서비스에 대해 다른 구독 서비스와 비슷하게 이용한 양만큼만 비용을 지불하면서 사용하게 된다고 볼 수 있다.\n \n[ 그림  2-7  서비스의 사용 ]\n\n\n \n \n  그래서 온프레미스가 아닌 퍼블릭 클라우드를 사용할 때의 서비스 안정성에 대한 걱정 또한 기존의 다른 영역들과 비슷하다. 재난 지역에서 수도나 전기 서비스가 끊겨 사람들이 고생하는 경우 같이 만약 해당 서비스의 안정성을 보장할 수 없다면 우리는 해당 서비스에 의존한 생활을 하지 못하게 될 것이다.\n \n  사실 언제든 해당 서비스가 멈춰버려 우리에게 불편을 줄 가능성은 가능하지만, 우리는 클라우드 사업을 하는 회사를 믿고 그 불편한 사건이 아주 드물거나 짧게 일어나거나, 해당 회사에서 SLA에 따른 적절한 보상을 해줄 것이라고 일반적으로 기대한다(다만 분쟁이 났을 때 고객사에서는 계속 해당 환경을 써야 되는 상황도 있고, 볼 수 있는 데이터도 제한적이기 때문에 책임 소재를 가리거나 증명하기는 애매해 보이긴 한다).\n \n  또한 현실 상 회사의 규모나 전문 인력의 경험 면에서도 클라우드 운영 회사가 대체로 서비스를 받는 회사보다 클 가능성이 높은 상황이기 때문에, 메이저 통신 회사나 전력 회사의 서비스처럼 문제가 날 가능성은 아주 적긴 하지만, 그렇다고 또 아예 없다고는 할 수도 없다. 하지만 그게 또 자체 운영할 때의 리스크 보다 크다고는 할 수는 없는 상황이기 때문에 참 애매한 영역이라고 본다.\n \n  앞에서 말한 것처럼 퍼블릭 클라우드 회사는 개별로 운영할 경우 시간, 작업 성격에 따라 여유 자원이 남아 있을 수 있는 서버 및 네트워크 자원들을 묶어 가상화하여, 규모의 경제를 획득하려 한다. 가상화는 하드웨어들이 소프트웨어 차원으로 추상화된 부분이기 때문에, 기존에 소프트웨어 영역에서 그랬듯이 쌓여진 지식을 이용해 자동화하고, 현재의 AI와 같은 데이터 이용 측면에서의 부가가치를 만들어 낼 수도 있게 되었다.\n \n  단순한 측면에서 보면 규모의 경제로 인한 운영 비용의 감소일 수도 있고, 컨테이너의 실행에서 그랬듯이 많은 공통 기능을 고객 회사들이 같이 사용하게 되어 전체적인 클라우드 OS 레벨의 효율화 일수도 있고, SAAS와 같은 측면에서는 앱스토어나 플레이스토어와 같은 플랫폼 수익일 수도 있을 것 같다. 또한 클라우드 시스템을 돌아다니는 고객사의 많은 데이터를 법적인 테두리 안에서 중계하거나 해당 패턴을 분석하여 부가가치를 일으킬 수도 있게 될 것 같다.\n \n \n  그럼 클라우드 환경에서 만날 수 있다고 생각되는 몇 가지 이슈들을 살펴보고 마무리를 해보자.\n \n1) 고정적이지 않은 비용\n  (퍼블릭) 클라우드에서 가장 개인적으로 화두가 되는 부분은 움직이는 비용이라고 본다. 게임센터에서 제한된 코인을 가지고 게임을 클리어해야 하는 것처럼 운영하는 입장에서는 최소의 금전적 투입을 통해서 최대의 금전적 이익을 얻어야 하는 숙제가 주어진다. 많은 경우에 API 호출 수, 데이터 양, 서비스 옵션 등 클라우드를 사용하려는 시스템의 규모 및 데이터에 비례하기 때문에 상황에 따라 가변 적이다. 실제로는 어떨지 모르겠지만 SAAS로 얘기되는 여러 서드파티 소프트웨어 또한 결국은 클라우드 시스템의 리소스를 사용하여 제공되는 서비스 이기 때문에 비슷하게 태생적으로 기존 온프라미스 같은 고정 비용으로는 제공이 힘들지 않을까 싶다(반대로 요즘은 온프라미스 요금도 이런 형태를 따라가려는 움직임이 많아진 듯하다. 약간 게임 회사들이 부분 유료화 게임의 BM을 추구하던 시기를 보는 느낌도 조금 있다).\n \n[ 그림  2-8  코인 플레이 ]\n\n\n\n\n  사실 이러한 비용의 예측은 클라우드 회사의 원가 구조, 성장 목표, 서비스를 이용하는 회사들의 데이터 구조, 비즈니스 형태, 범위, 인력의 숙련도 등에 따른 내-외부 변수가 많아 보이기 때문에 제공하는 컨설턴트 엔지니어 쪽에서도 정확히 추정 제시가 힘들 듯하다. 반대로 서비스를 이용하는 고객 입장에서는 자신의 회사의 가상 자원들로 일어나게 될 트래픽과 데이터를 각 클라우드의 비용 정책 및 클라우드 운영 구조와 매칭하여 정확하게 이해하지 못하면 관련된 요금 체계 때문에 예상 못하는 돌을 맞게 되는 수도 있다. 현실의 다른 분야의 예를 하나 들면 “주거용 오피스텔의 수도 요금의 경우 전입 신고 후 세대분할 신고를 거쳐 예외적으로 더 저렴한 가정용 요금으로 계산되지만, 1인 기준 정도의 사용량(월 17톤) 이상부터는 다시 상업용 요금으로 부과된다” 와 같은 수많은 미묘한 규칙들이 클라우드 서비스 안에 숨어 있을 수 있다.\n \n  해당 비용은 서비스의 호출 수, 데이터 규모에 따른 비례 또는 볼륨 비용, 가상 서버의 코어, 메모리 양, 연속 운영 시간, 여러 가지 서비스 옵션, 내장 또는 서드파티 기능 사용 여부(이 경우 아쉽게도 대부분 기존부터 해당 솔루션 분야의 노하우를 축적한 전문 서드파티 쪽의 기능이 현실적이고, 선택권이 풍부한 경우가 많은 듯하다), 네트워크 영역 별 트래픽 요금의 상이성, 사용자 수, 어플리케이션 엔터티 수 등 다양한 규칙에 의해 클라우드 스스로나 사용하는 SAAS 어플리케이션과의 조합에 의해 비용이 설계되어 있다. 결국 서비스를 이용하는 고객 회사는 이러한 구조 상의 요금 체계의 민감성을 이해하면서, 자신의 회사의 자원 중 클라우드로 올라가는 자원들과 그 자원들과 데이터를 주고받게 되는 클라우드 외부 자원 및 사용자들을 같이 고려해서 비용을 예측해야 하는데, 여기까지만 얘기를 들어도 그렇게 쉬워 보이는 주제 같진 않다.\n \n  또 이러한 비용들이 기존의 고정 자산+운영 비용의 영역에서 운영 비용으로 성격이 바뀌기 때문에 재무적, 기술 운영 측면에서도 미묘한 사고적 전환이 필요하지 않을까 싶다. 클라우드 내부의 비용 관련 모니터링, 비용 설계 툴, 커스터마이즈 된 SAAS 툴들을 통해 이러한 부분을 파악하고, 예측하고, 절감할 수 있다고는 하지만, 아직까지는 전체적인 파악 및 조정을 하는 것은 사람의 역량과 손을 많이 타는 분야가 아니지 싶다(누가 실시간으로 자신의 통장에서 무제한으로 돈이 빠져나가는데 그걸 로직도 확실히 파악이 힘든 자동화에만 맡겨 둘 수 있을까? 그리고 자동화는 수동화가 가능한 사람이 자동화도 가능하다고 본다). 개인적으로는 핸드폰 요금 같은 선택이 가능한 어느 정도의 명확한 범위의 고정형 요금이 있거나 가격의 영향을 주는 요소가 좀 더 줄어든다면 좀 더 서로 좋지 않을까 생각하지만, 현재로서는 해당 부분은 좀 요원해 보인다.\n \n  참고로 클라우드에 따라 예약 가능한 자원 사용량을 특정 기간 설정하면 해당 예약 구간의 요금에 따라 비용을 할인해 주는 선물 또는 선결제 비슷한 제도도 있는 것 같다. 하지만 조금 아쉬운 부분은 해당 부분이 어떻게 보면 변화하는 사용량에 대해서 고객 쪽에서 스스로 예측해야 하는 부담을 안겨주는 측면이 있을 듯하고(해당 요금에 대해서 컨설턴트 쪽에서 강하게 특정 임계치를 추천하기는 꽤 부담스러울 듯하다), 또 불완전한 무제한 요금제 같이 모든 영역에 대해서 적용되는 건 아니고 아마도 클라우드 회사 내부의 여러 사정에 의해서 특정 서비스 및 특정 리소스를 대상으로 제한되는 것도 같다. 무엇보다 유연함을 표방하는 클라우드에서 고정 비용을 매력적으로 보이게 만드는 요금 설계가 조금은 아이러니한 느낌도 있다. 하지만 솔루션 계약 같은 경우에도 1년 계약보다는 다년 계약을 할 경우 요율 동결이나 추가 할인을 해주는 경우도 있으니, 마찬가지로 장기간으로 고객을 계약으로 묶는 대신 비용 할인을 제공하는 제도로 생각하면 어떨까 싶다. 뭐 아마 클라우드 회사 쪽도 안정적인 매출을 보장하는 특정한 안전장치들이 필요하지 않을까 싶으니 말이다.\n \n \n  추가로 이런 비용 문제를 어렵게 만드는 부분은 클라우드 운영회사와 서비스 사용 회사가 항상 서로 반대의 입장에서 절감과 성장, 효율화 사이에서 줄다리기를 한다는 것이다. 양 쪽 다 계속 성장하는 환경이라면 규모나, 영역의 확장을 통해 이 부분이 적절한 협의를 통해서 쉽게 해결이 될 가능성이 높지만, 한쪽은 조금이라도 더 얻어야 하는 상황이고, 한쪽은 조금이라도 더 줄여야 하는 제로섬 게임의 상황이라면 갈등 요소의 상황이 생길 수도 있을 것 같다.\n \n[ 그림  2-9  시소 게임 ]\n\n\n \n \n  개인적인 생각으로는 적절한 상황 판단에 의해 서로 윈-윈 하는 가격 협상으로 상호 합리적인 이익을 가져오게 하는 게 낫긴 할 터이지만 세상일이 꼭 그렇진 않을 것 같긴 하다. 온프라미스 서비스 또한 물가 상승 분의 반영이나 회사 성장 목표에 따른 가격 협상 갈등은 있을 터이지만, 부가가치 및 다른 SAAS 서드파티 회사들과 연동되어 움직이는 클라우드 서비스만큼의 변수가 생기긴 힘들다고 본다.\n \n \n2) Lock-in 효과와 하이브리드, 멀티 클라우드\n  클라우드 쪽에서 고객에게 제공되는 가상화 위 쪽 환경은 기존의 온프라미스와 그렇게 다르지 않은 어플리케이션의 영역이겠지만, 그 밑은 수많은 API로 이루어진 하나의 가상 OS이기 때문에 현재의 다른 OS와 비슷하게 호환성 문제가 생긴다고 본다. 그래서 커피머신의 호환 캡슐 같은 lock-in 효과가 있고 마치 리눅스로 운영되는 서비스 들을 윈도우로 전환해야 할 때의 머리 아픔처럼 무언가 클라우드에 종속되는 느낌이 강하다.\n \n  온프라미스도 마찬가지라고 생각될 수도 있겠지만 그쪽은 만약에 이동이 필요하다면 IDC의 위치와 내부 공간 구조 이외의 나머지는 모두 표준화에 가깝게 정리가 되 있다고 생각하기 때문에 쉽지만은 않겠지만 물리적 스위치나 서버들, 방화벽 등 관련 규칙들을 모두 하나하나 조심스럽게 옮겨서 똑같이 다른 IDC의 형태로 재구성할 수 있을 것이다(물론 이런 물리적인 행동들을 소프트웨어적으로 수행할 수 있기 때문에 클라우드의 기민성이 생기기는 한다).\n \n[ 그림  2-10  커피 머신과 호환 캡슐 ]\n\n\n \n \n  이러한 부분을 해결하기 위해서 보통 몇 가지 선택을 하는 듯한데, 요즘 한참 얘기되는 멀티 클라우드(퍼블릭-퍼블릭, 퍼블릭-프라이빗 조합 등)나, 온프라미스-클라우드 병행 운영을 통해서 의존성을 해결하려 한다. 이런 경우 사실 관리 대상의 다양 성에 따른 리소스 투자 문제가 생길 수 있다. 멀티 클라우드 전략의 경우 각각의 클라우드에서 제공하는 고유 기능만을 사용할 경우에는 차후 마이그레이션 시의 호환 문제나 운영 방식 간의 상이함이 생길 수 있기 때문에 테라폼 같은 IaC(Infrastructure as Code) 같은 툴로 각 클라우드의 API를 비슷하게 매칭해 이용해 해결하거나, VMWARE 나 Nutanix 같은 여러 가상 컴퓨터 솔루션이나 쿠버네티스 같은 컨테이너 환경 같이 관리 API 나 인터페이스의 표준화를 제공하는 솔루션들을 이용하여 운영 표준 및 혹시 모를 마이그레이션 문제를 해결하려 한다. 여기에 추가로 테라폼, Ansible 같은 자동화 스크립트를 통해 표준화된 API를 한번 더 감싸 자동화하려고도 하는 듯하다.\n \n[ 그림  2-11  바벨탑 ]\n\n\n \n \n \n  현재 상황으로는 각각의 클라우드 회사들이 윈도우, 리눅스의 상황과 비슷하게 멀티 클라우드를 쓰는 고객들을 위해 운영의 인터페이스의 표준화를 협의할 가능성은 거의 희박하다고 보기 때문에 IaC 툴의 사용은 각 클라우드에서 외부에서 원하는 API를 기능적, 보안적인 부분을 고려해 얼마나 외부에 제공할 수 있느냐에 따라 호환성의 문제가 해결된다고 본다. 또한 가상화 솔루션이나 컨테이너 환경은 보통 상업 적인 비용이 추가로 들기 때문에 해당 밴더의 가격 정책의 변경에 따른 민감성의 리스크가 생길 가능성이 있다고 본다(물론 IaC 툴 또한 마찬가지 이슈는 생길 수가 있다). 개인적으로는 약간 주제와 별개로 클라우드 위의 가상화 솔루션이나 컨테이너 환경의 경우 가상화 위에 올라간 가상화의 느낌이 있기 때문에 해당 부분이 성능적으로는 어떤 영향을 미칠지, 또는 해당 이슈를 어떻게 풀었는지가 조금 궁금하긴 하다.\n \n \n3) 표준화에 따른 Ready-made 옵션들\n  앞서 얘기했듯이 클라우드는 많은 선택이 있는 것처럼 보이기도 하지만, 궁극적으로 구독 서비스처럼 하나의 인터페이스를 가지고 수많은 타입의 고객들을 만족시켜야 하는 종합 SAAS 형 OS 서비스에 가깝기 때문에 다양성을 가지면서도 표준화를 추구할 수밖에 없다고 본다(결국 내부에서 볼 때 모든 외부 요소들은 클라우드 회사에서 제공하는 내부 API의 구독자 일 것 같아서 말이다). 그래서 마치 자신에게 맞는 최신 컴퓨터를 세팅하듯이 적절한 옵션과 가격, 유-무료 소프트웨어를 조합하여 사용할 운영 환경을 결정해야 한다. 이러한 옵션은 클라우드 환경과 고객 사의 환경, 여러 오픈소스 및 기술 프로세스 분야(DevSecOps 등)에 대해서 모두 잘 이해를 해야 제안 및 결정이 가능한 부분이기 때문에 수많은 클라우드 회사 내-외부의 전문 컨설턴트들이 활약하게 되는 영역인 듯싶다.\n \n[ 그림  2-12  쿠키 고르기 ]\n\n\n \n \n  반대로 가게를 실제 운영하는 경우와 마찬가지로 일부러 전략적으로 선택하지 않는 이상은 너무 많은 메뉴 조합의 제공은 여러 불필요한 리소스 낭비와 예외가 생길 수 있으므로, 축적된 경험 및 내부 연구를 토대로 여러 고객사의 케이스에 최대한 만족될 수 있는 조합을 표준화하고 확장하게 될 것이다. 이것은 한편으로는 특정 클라우드에 인증된 제품 군 이라든지, 안정 성과 이슈 팔로우업이 가능한 주요 파트너 사라든지 하는 개념의 형태로도 나타날 수 있다. 다만 해당 부분은 반대 측면에서 보면 기술적으로는 탄탄하지만 대응 규모가 작거나 손익 계산이 안 맞는 작은 서드파티 회사들이 클라우드 환경에 참여하는 최소한의 장벽이 됨으로써 고객들이 온프라이스에서 선택 가능했던 옵션들이 줄어드는 상황을 만들 수도 있을 것은 같다.\n \n[ 그림  2-13  표준화 ]\n\n\n \n \n \n4) 자동화\n  앞서 얘기했듯이 가상화는 곧 소프트웨어 형태의 구현체와 데이터를 의미하기 때문에 클라우드를 선택했다는 것 자체가 이미 자동화를 적극적으로 이용하려 한다는 의미와 동일하다고 생각한다(만약 그러지 않는다면 자동차를 사서 굳이 손으로 밀어 움직이려 하는 상황과 비슷하다고 본다). 다만 그 자동화가 앞서 말한 API로 이루어진 닫혀 있는(요건 외부적으로 느껴지는 클라우드의 개방적 느낌과는 좀 모순이 되는 것도 같긴 하다^^) 클라우드 세상이라는 한계상 자동화의 기능과 범위는 내부적인 이슈로 점점 깊게 들어가게 되면 그 지원하는 API를 벗어나진 못할 것이다.\n[ 그림  2-14  자동화 ]\n\n\n \n \n  또한 기존의 많은 솔루션 및 OS의 API 들과 동일하게, 보안 및 전체 시스템의 안정성이라는 공익을 고려한다면 모든 API를 고객의 자동화 모듈에 제공할 수는 없다(물론 클라우드 내부 시스템에서는 아마 권한을 제어해 잘 사용하고 있을 것이다). 그래서 아마도 각 클라우드 내부에서 지원하는 자동화 툴보다는 외부에서 실행되는 자동화 툴 쪽이 내부에 접근할 수 있는 영역이 좀 더 좁을 수도 있을 것도 같다. 아무래도 클라우드 내부에서 지원하는 자동화 툴 쪽이 외부 인터페이스 영역만 공개한 채로 클라우드 좀 더 내부에 꽁꽁 숨겨놓은 API 나 데이터에 접근이 가능할 것 같기 때문이다(또한 아쉽게도 해당 내부 자동화 툴은 해당 클라우드에서만 폐쇄적인 표준일 가능성이 아주 높을 것이다). 물론 내부 자동화 툴이 외부의 서드파티 툴로 전체 인터페이스를 또 한 번의 API를 통해 제공할 수도 있을 가능성은 있다.\n \n  또 자동화를 사용한다는 것은 역으로 특정 사람이 의도적으로 설계해 놓은 작업 들이 내부 API를 통해 대량으로 패턴화 해 일어난 다는 것이기 때문에 실수를 했을 때 역시 대량으로 문제가 일어나거나 모니터링 및 가역적 조치가 힘든 상황이 생길 수가 있다고 본다. 그 과정에서 과도한 자원의 실행이나 소모에 따라 추가 비용 이슈가 생길 수도 있고 말이다. 그래서 관련 자동화 프로세스를 설계할 때는 앞서 비용을 따질 때와 비슷하게 클라우드 및 본인 자신의 회사 환경을 잘 이해하는 세심한 주의가 필요할 듯도 싶다.\n \n \n5) 기다림에 대한 미학\n  앞서 얘기했듯이 클라우드는 많은 부분이 고객들에게는 숨겨져 있다. 운영 및 보안 적으로는 “공동 책임 모델”이라는 이름으로 정리되어 있는데, 서로 영향을 미치게 되어 신경 쓰게 하지 말고, 필요하고 잘할 수 있는 영역을 나누어 잘 관리하자는 것이다. 이는 당연히 일반 SAAS 서비스 영역에서도 비슷하게 설계되어 있다.\n \n  이 모델은 클라우드 사용자들이 안전한 환경에서 선택과 집중을 하는데 도움을 주는 좋은 방식이지만, 역으로 이 때문에 가시성 및 조치 가능성 문제가 생길 수도 있는데, 이는 우리가 집에서 인터넷이 안될 때 통신사에 전화를 해서 점검을 요청하는 부분 외에는 할 수 있는 부분이 없어지는 것과 비슷하다(물론 공유기가 이상한지나, 컴퓨터가 이상한지에 대해서 이것저것 상담원이 물어볼 다른 가능성을 미리 체크해 볼 수 있겠지만 우리의 권한과 책임이 아닌 통신 망의 정상화에 대해서는 전문가들의 말을 믿고 기다릴 수밖에 없다).\n \n[ 그림  2-15  주인을 기다리기 ]\n\n\n \n \n  그래서 클라우드나 해당 영역의 SAAS 서비스에 대해서는 관련 클라우드 회사 및 연결되어있는 1, 2차 범위의 지원 엔지니어가 얼마나 빠르고 원활하게 잘 문제를 파악하고 본사와 커뮤니케이션 해 해결하냐에 고객의 안녕이 걸려있을 것 같다. 물론 고객 쪽 담당자도 내부 관점에서 문제에 대해 명확하게 정의하여 클라우드 환경에 맞는 방식으로 관련 커뮤니케이션을 할 수 있어야 할 것 같긴 하다(컴퓨터를 전혀 모르는 고객의 인터넷 장애를 상담하는 통신사 상담원 입장을 생각해 보자).\n \n  중요한 회의를 해야 하는데 갑자기 인터넷이 안 되는 상황을 생각해 보자. 물론 이 경우  스마트폰 데이터만 충분하다면 테더링이라는 대체 가능한 옵션이 있을 수 있고, 근처 카페의 와이파이 환경으로 뛰어갈 수도 있다. 이런 선택할 수 있는 옵션이 앞서 얘기한 멀티 클라우드나, 온프라미스-클라우드 병행 체계를 마련해 놓는 이유기도 한 것 같다.\n \n  SLA이나 관련 보상 계약이 있긴 하지만 현실 상으로 문제가 났을 때 그 문제로 인한 내부 피해를 산정하는 것은 클라우드 비용을 예측하는 것만큼 변수가 많은 영역일 듯싶고, 그 상황에도 해당 회사의 서비스를 그대로 이용해야 하는 미묘한 대치 상황이 될 수도 있다(게다가 그렇게 선택 가능한 클라우드 회사가 엄청 많은 것도 아니기도 하다). 만약 훗날 적절한 피해 보상을 받더라도 이미 기회는 떠나가 소 잃고 외양간 고치는 식이 될 수도 있을 것 같으니 말이다. 여하튼 클라우드 회사에서는 만에 하나라도 그런 일이 안 생기게 하려고 여러 측면에서 사이트 및 서비스 안정성을 위해 당연히 노력하겠지만, 담당자 입장에서는 그런 일은 절대 안 일어난다고 자신 있게 얘기하긴 힘든 딜레마가 생기는 부분이긴 한 것 같다.\n \n \n1.8 나비의 꿈\n  가상화 쪽을 얘기하다 클라우드까지 오게 됐는데(사실은 클라우드 얘기를 어떻게 잘 풀려다 보니 프로세스와 쓰레드까지 올라가게 된 거긴 하다^^) 이어졌던 이야기 흐름에 어느 정도 공감이 갔을지는 모르겠다. 현재는 현실이 가상화에 영향을 미치고 다시 가상화가 현실에 영향을 미치는 세상이 되는 것도 같아서, 마치 우리가 예전에 들었던 장자의 “나비의 꿈” 얘기처럼 뇌 과학 쪽도 그렇고 점점 현실과 가상의 경계가 조금씩 깨어지는 시기인 듯도 싶다.\n \n[ 그림  2-16  나비의 꿈 ]\n\n\n\n\n \n  그렇게 된 하나의 이유는 가상이나 현실이나 데이터를 기반으로 움직이는 경향이 강해져서 그렇지 않나 도 싶고, 또 우리가 평소에도 현실의 자신과 상관없이 계속 다른 세상과 자신을 상상하며 살아가기 때문이라 그런 것 같기도 하다. 우리가 현실과 마음의 가상 사이에서 계속 균형을 맞추면서 피드백을 거쳐가며 살아가는 것처럼, 우리가 가진 실제의 물리 세상과 가상화 세상은 비슷한 균형을 거치는 단계를 가지게 될 것도 같다.\n \n  다른 한편으로 드는 생각으로는 요즘은 AI나 클라우드와 같은 가상 세계에 대해 모든 관심들이 집중되는 것 같기도 한데, 우리가 지금 열심히 일을 하는 이유가 평화롭거나 행복하게 잘 살려고 하는 거라는 측면을 생각하면, 우리가 왜 그렇게 해당 대상들에 열광하고 있는지를 길을 걸어가면서도 가끔은 뒤돌아보는 것도 나쁘진 않아 보인다.\n \n \n- Fin -",
        "guid": "https://dev.gmarket.com/107",
        "categories": [
          "Culture"
        ],
        "isoDate": "2024-06-17T04:08:56.000Z"
      }
    ]
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "고령 운전자 안전운전 교육부터 치매 안심 상담까지 ",
        "link": "https://blog.toss.im/article/money-policies-14",
        "pubDate": "Fri, 21 Jun 2024 01:47:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}고령 시대를 맞이한 한국, 어르신을 위한 다양한 정책적 지원을 마련하고 있어요. 크게 일자리 정책과 돌봄 정책으로 나눠 소개합니다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}활기찬 노후 생활을 위한 일자리 정책\n⓵ 신중년 경력형 일자리\n50세 이상 70세 미만, 경력과 자격이 있지만 현재는 미취업 상태인 신중년을 위한 재취업 지원 제도예요. \n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}최저임금 이상의 임금(주휴 수당, 연차수당 포함)과 4대 보험 가입을 지원해요. 단 자치단체별로 일자리 사업의 세부 계획과 근로 시간, 임금 수준 등이 다를 수 있어요. 고용노동부 (1350, moel.go.kr)에 문의해주세요.\n⓶ 노인 일자리 및 사회활동 지원\n어르신들이 경력과 능력에 맞는 일자리 혹은 사회 활동에 참여할 수 있도록 지원해요. \n(1) 노노케어, 취약계층 지원봉사 등 노인이 지역 사회에 기여하고 성취감을 얻을 수 있는 ‘공익 활동' \n(2) 취약계층 돌봄, 안전 등 공공 서비스를 제공하는 ‘사회 서비스형' 일자리 \n(3) 민간 기업이나 시장형사업단 등에 취업을 알선하거나 인턴 기회를 제공하는 ‘민간형’ 으로 구분돼요. \n\n주소지 행정복지센터나 노인복지관, 시니어클럽, 대한노인회 지회 등에서 신청할 수 있어요.\n⓷ 고령 운전자 교통 안전 교육\n일자리와 직접 관련은 없지만, 65세 이상 운전자가 운전에 필요한 인지 능력을 가지고 있는지 검사하고 안전 교육을 받을 수 있는 프로그램이에요. \n65세 이상 운전자는 모두 참여할 수 있고, 75세 이상 운전자 중 면허 갱신 대상자는 의무적으로 안전교육을 받아야 해요. 도로교통공단 통합민원실(1577-1120) 또는 경찰청 콜센터(182)를 통해 자세한 내용을 확인해보세요.\n건강한 노후를 위한 돌봄 정책\n⓸ 노인 장기요양 시설 및 재가 서비스\n65세 이상이거나 노인성 질병을 앓아 장기요양등급 판정을 받았다면 맞춤형 돌봄 서비스를 받을 수 있어요. \n노인요양시설에서 지내는 경우 장기요양 급여비용의 20%는 본인이 부담하고, 가정에 머물면서 방문 요양, 목욕, 간호 지원 등을 받는 수급자는 15%를 본인이 부담해요. 기초생활수급자나 저소득층은 본인부담금을 경감 또는 면제 받을 수 있어요. 국민건강보험공단을 통해 신청할 수 있습니다.\n⓹ 치매 안심센터 & 치매상담 콜센터\n전국 256개 치매 안심센터에서는 예방, 상담, 조기 진단, 교육까지 치매에 대한 두려움을 해소하고, 보호와 관리에 관한 정보를 얻을 수 있어요. \n치매 상태에 따른 인지 및 신체 활동 프로그램을 운영하고, 치료 관리비, 기저귀, 물티슈 등을 제공해요. 치매노인이 성년후견제도를 이용할 수 있도록 지원하기도 해요. \n또 치매상담콜센터(1899-9988)에서는 전문상담사로부터 전화 상담을 받을 수 있어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 정경화 Graphic 조수희",
        "content": "100세 시대를 준비하는 실버 정책",
        "contentSnippet": "100세 시대를 준비하는 실버 정책",
        "guid": "https://blog.toss.im/article/money-policies-14",
        "isoDate": "2024-06-21T01:47:00.000Z"
      },
      {
        "title": "모디노믹스, 경제 대국 인도로 향할 수 있을까",
        "link": "https://blog.toss.im/article/economic-terms-18-modinomics",
        "pubDate": "Thu, 20 Jun 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}💡 이 글이 필요한 순간\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}급성장중인 인도 경제 현황에 대해 좀더 자세히 알고 싶을 때\n모디노믹스가 우리나라에 어떤 영향을 주는지 궁금할 때\n\n.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-p4abj2{display:contents;line-height:1.55;}🔖 이번 주 경제 용어\n모디노믹스\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n이번 주 경제 용어는 글로벌 경제를 파악하기 위해 필요한 정보예요.\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n인도 총리 나렌드라 모디가 추진하는 경제정책이에요.\n\n\n인도 경제는 최근 몇 년간 눈에 띄는 성장을 이루며 글로벌 시장에서 주목받고 있습니다. 14억 인구의 강력한 내수 시장과 젊은 노동 인구, 그리고 강화된 제조 및 서비스 산업 덕분에 인도는 2022년 1분기에 세계 GDP 순위에서 영국을 제치고 5위를 차지했어요.\n전문가들은 인도가 몇 년 내로 일본을 추월하여 세계 4위 경제 대국이 될 것으로 보고 있으며, 이미 2023년에는 인구 수에서 중국을 추월하여 세계 1위가 되었습니다. 이러한 인구 구조적 장점을 바탕으로 인도는 '세계의 공장'으로서의 위치를 확고히 할 것으로 예상됩니다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}인도는 나렌드라 모디 총리의 리더십 하에 인도는 글로벌 제조업 허브로 변모하고자 하는 야심찬 계획을 추진해 왔는데요. 테슬라, 애플, 현대자동차와 같은 세계적인 기업들을 유치하기 위한 노력이 계속되고 있습니다. 이러한 기업들은 인도의 방대한 인구와 성장하는 소비 시장을 고려하여 대규모 투자를 검토하고 있어요.\n이 외에도 모디 총리는 인도의 인프라를 개선하기 위해 '스마트 시티(Smart City)' 정책을 추진했고, 농산물 유통 체계를 개선하고 농업 기술 개발을 지원하는 등 농업 개혁을 실시했습니다. 인도의 디지털 경제를 육성하기 위해 '디지털 인디아(Digital India)' 정책도 추진하고 있고요.\n이러한 정책들은 모두 '모디노믹스 (Modinomics)' 라는 용어로 집약됩니다. 나렌드라 모디(Narendra Modi)이름과 '경제학(Economics)'을 결합한 말로 인도 경제의 새로운 방향을 상징하고 있습니다.\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}인도 총선, 여권 연합 승리 확정… 모디 총리 3연임 가닥\n(조선비즈 2024.06.05)\n나렌드라 모디 인도 총리가 4일(현지시각) 여당 연합인 국민민주연합(NDA)의 총선 승리를 선언하며 자축했다.\n이날 로이터통신에 따르면 모디 총리는 “국민들의 열망을 이루기 위해 우리는 새로운 에너지, 새로운 열정, 새로운 결의로 전진할 것임을 확신한다”고 말했다. 이어 “모든 노동자들의 헌신과 지칠 줄 모르는 노력에 대해 진심으로 감사와 축하를 표한다”고 했다.\n모디 총리는 소셜미디어 엑스(X)에도 “국민들이 3회 연속으로 여권 연합인 NDA를 믿어 줬다”며 “이는 인도 역사상 가장 역사적인 위업”이라고 평가했다. 인도 선거관리위원회에 따르면 NDA는 총 543개 의석 중 최소 291석을 확보해 과반을 차지했다.\n모디 총리의 총리직 3연임도 가시화됐다. 인도국민당(BJP) 대변인은 “NDA는 3기 정부를 구성하게 된다. 모디 총리가 3번째로 취임한다”고 밝혔다. 인도 정치사에서 3연임을 달성한 총리는 자와할랄 네루 초대 총리 이래 최초다.\n당초 현지에서는 여당 연합이 과반 의석을 차지하더라도 모디 총리의 소속 정당 BJP의 성적이 저조하면 총리직에 대한 입지가 흔들릴 것이라는 관측이 나왔다. 그러나 NDA는 BJP가 단독 과반을 얻지 못할 것이라는 전망 속에서도 모디 총리에 대한 지지를 표명하며 가능성을 일축했다.(중략)\n\n\n인도는 의원내각제 국가로 상하원 선거를 진행합니다. 인도 하원 의원은 임기가 5년이며 국민의 직접 선거를 통해 선출돼요. 하원 의석수는 총 543석이고, 올해 4월 19일부터 6월 1일까지 진행된 인도 총선이 바로 하원 의원을 뽑는 선거였습니다. 하원 의석 다수를 차지한 정당이 집권하며, 집권당 당수가 총리로 선출되는 방식이에요.\n6월 4일에 발표된 인도 총선 결과는 많은 이들에게 놀라움을 주었습니다. 여당 연합인 국민민주연합(NDA)가 승리했으나, 나렌드라 모디 총리가 이끄는 인도국민당(BJP)은 240석 획득에 그쳐 2014년 집권 이후 처음으로 단독 과반 확보에 실패했기 때문입니다.\n이는 모디 총리에게 세 번째 임기 동안 모디노믹스를 강력하게 추진하는 데 어려움을 줄 수 있습니다. 선거 결과에 영향을 준 요인으로는 ➀무슬림 커뮤니티의 반발 격화, ➁경제 성장에 따른 부의 격차 확대, ➂치솟은 물가 등이 꼽힙니다.\n다만 현 총리인 모디 총리가 압도적인 표차로 이긴 게 아니라서, 인도 증시에 일시적인 불안정성을 가져왔습니다. 하지만 장기적인 관점에서 볼 때 투자의 좋은 기회가 될 수도 있습니다. 모디 총리의 경제 정책인 '모디노믹스'는 여전히 제조업 부흥을 목표로 하고 있고, 이번 선거 결과가 그 방향성에는 크게 영향을 주지 않았다는 평가를 받고 있거든요.\n또한, 모디 정부는 인프라 투자를 포함한 여러 경제 활성화 조치를 예고하고 있는데요. 이는 국민의 소비력을 높이고 시장을 활성화하는 데 기여할 것으로 기대되고 있답니다. 이러한 조치들은 인도 증시에 장기적인 투자 기회를 제공할 수 있음을 시사하고 있어요.\n\n\n레이거노믹스(Reaganomics): 미국의 제 40대 대통령인 로널드 레이건이 추진한 경제 정책. .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}세출의 삭감, 소득세의 대폭 감세, 기업에 대한 정부 규제의 완화, 안정적인 금융 정책 등이 핵심이라 볼 수 있어요.\n대처리즘(Thatcherism): 영국의 전 총리 마거릿 대처가 추진한 경제 정책. 자유시장 경제를 중시하고 정부의 개입을 최소화하는 것이 특징이에요.\n아베노믹스(Abenomics): 일본의 전 총리 아베 신조가 추진한 경제 정책. 20년 가까이 이어져 온 디플레이션과 엔고(円高) 탈출을 위해, 대규모 양적 완화와 재정지출 확대, 구조 개혁 등을 시행했어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "인도 경제는 최근 몇 년간 눈에 띄는 성장을 이루며 글로벌 시장에서 주목받고 있어요.",
        "contentSnippet": "인도 경제는 최근 몇 년간 눈에 띄는 성장을 이루며 글로벌 시장에서 주목받고 있어요.",
        "guid": "https://blog.toss.im/article/economic-terms-18-modinomics",
        "isoDate": "2024-06-20T02:00:00.000Z"
      },
      {
        "title": "걸그룹이 시청률 1% ‘음방’을 포기하지 못하는 이유",
        "link": "https://blog.toss.im/article/girl-groups-economics-08",
        "pubDate": "Wed, 19 Jun 2024 00:05:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}📌 .css-q3ktjb{white-space:pre-wrap;font-weight:bold;}이 글에서 알 수 있는 것들\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n걸그룹의 가요 프로그램 출연이 가져다주는 경제적 효과\n경제 용어 ‘버핏 효과’의 의미 \n\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n얼마전 보이그룹 빅톤 출신 도한세는 팬들과의 소통 플랫폼인 버블을 통해 이렇게 말했다.\n“음방(음악 방송) 너무 좋지. 그런데 그거야말로 수지타산이 안 맞는다. 2세대 선배님들처럼 홍보 효과가 엄청난 것도 아니고 1주 돌면 1,000만 원이 든다. 거기다 컴백하려면 멋있어야 되니까 세트 짓고 이러면 플러스 알파다. 헤어 메이크업비, 스타일링비, 현장 스태프들 식비, 간식비, 음료비 하면 2,000만 원도 든다. 그런데 그렇게라도 홍보해야 되니까 하는 거다.”\n실제 기획사 사람들 반응도 비슷했다. 도한세의 지적대로 비용 문제를 힘들어했다. 특히 부담이 되는 것이 무대 의상 비용이라고 했다. “방송국마다 다른 의상을 입어야 해요. MBC에 입고 나간 옷을 SBS에도 입고 가면 PD들이 싫어하거든요.” \n한 벌에 수십에서 수백만 원이 드는 의상을 멤버당 4벌씩은 갖춰야 하니, 트와이스처럼 9인조로 활동하는 경우라면 만만히 볼 문제가 아니다. 그에 비해 받는 돈은 팀당 5~20만 원 수준으로, 20년째 고정이다. ‘거마비’라고도 불리는 교통비다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}사실 돈은 정작 큰 문제가 아니다. 가요 프로그램 출연을 망설이게 만드는 결정적 요인은 바로 시청률이다. KBS의 간판 음악 프로그램 〈뮤직뱅크〉의 평균 시청률은 1%를 넘지 못한 지 오래다. \n2024년 5월 24일 기준 〈뮤직뱅크〉의 시청률은 0.4%. 소위 애국가 시청률 수준이다. 2세대 걸그룹들이 활동하던 2007~2012년, 시청률이 20~30%를 넘나들었던 것과 비교하면 터무니없이 낮다.\n그럼에도 이들이 지상파 가요 프로그램을 끊을 수 없는 이유, 도한세가 “그런데 그렇게라도 홍보해야 되니까 하는 거다”라고 말한 이유는 분명 존재한다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n그의 입에 한번 오르기만 하면 뜬다\n버핏 효과\n신문 경제 기사에 간간이 등장하는 ‘버핏 효과(Buffet Effect)’라는 용어가 있다. ‘오마하의 현인’으로 불리는 미국의 전설적인 투자가 워런 버핏이 투자 대상에 대해 낙관적인 발언을 하거나 투자했다는 사실이 알려지면 주식 가치가 급등하는 현상을 말한다.\n과거 애플도 버핏 효과로 기사회생한 적이 있다.\n.css-2sk6rv{font-size:19px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);white-space:pre-wrap;margin:24px 0;padding-left:20px;position:relative;}.css-2sk6rv::before{content:'';display:block;position:absolute;top:4px;left:0;width:2px;height:calc(100% - 4px * 2);padding:4px 0;background-color:var(--adaptiveGrey800);}\n“애플 주가는 지난달 중순 이후 19%나 떨어졌다. 아이폰 판매 부진으로 지난 분기 매출이 13년 만에 처음으로 감소한 데다 지난달 28일에는 ‘행동주의 투자자’ 칼 아이칸이 애플 주식을 모두 처분했다고 밝히는 등 악재가 많았다. 이런 가운데 워런 버핏의 주식 매입이라는 새로운 호재가 등장하면서 애플 주가는 증시 개장 직후부터 상승하기 시작했다. 애플은 16일(현지시간) 버핏 회장의 버크셔 해서웨이가 투자했다는 소식에 전날 대비 3.71% 오르며 93.88달러에 마감했다. 지난 3월 1일 이후 2개월 15일 만에 일일 최대 상승 폭을 기록했다.” \n–<중앙일보>, 2016년 5월 17일.css-7mseny>*{margin-left:0;margin-right:0;}.css-7mseny>:last-child{margin-bottom:0;}blockquote>.css-7mseny:first-child>:first-child{margin-top:0;}\n워런 버핏은 지난 2000년부터 심지어 자신과 함께 하는 점심식사를 경매에 붙이는 기막힌 짓을 했는데, 이게 또 히트를 쳤다. 경매 낙찰자는 미국 뉴욕에 있는 스테이크 하우스 ‘Smith& Wollensky’에서 버핏과 세 시간 동안 점심식사를 하는데, 이 자리에는 동반자를 7명까지 데려갈 수 있다.\n첫 해 2만 5,000달러로 시작한 이 점심은 매년 가격이 상승하더니 올해는 익명을 요구한 낙찰자가 267만 9,001달러(약 37억 원)를 내고 기회를 잡았다. 버핏은 이 수익금을 모두 홈리스 자선단체 글라이드파운데이션에 전달했는데, 지금까지 기부한 액수가 2,000만 달러 정도 된다고 한다.\n제아무리 물가가 높은 뉴욕이라지만 스테이크 가격은 기껏해야 100~200달러 수준일 테니 이 식사의 가격은 거품이 잔뜩 낀 셈이다. 그럼에도 사람들이 원래 가격의 수만 배를 지불하면서까지 버핏과 식사하려고 하는 데는 이유가 있다. 바로 이 식사를 통해 그 이상의 가치를 얻을 수 있기 때문이다.\n2008년 중국인 자오단양(趙丹陽)은 211만 달러를 내고 버핏과의 점심식사를 낙찰 받았다. 그는 버핏에게 자신의 슈퍼마켓 체인점 ‘우메이상업’에 대해 조언을 구하겠다고 공언했는데, 이 소식이 매스컴을 통해 투자자들에게 알려지면서 주가가 급등하기 시작했다. \n이후 2008년 말 자오단양은 우메이상업의 지분을 매각하고 1,600만 달러 가량의 이득을 얻었다. 버핏과 함께 이름이 오르내린 것만으로 1,400만 달러(약 193억 원) 차익을 거둔 셈이니 진정한 버핏 효과를 누린 셈이다.\n걸그룹들의 버핏, 지상파 가요 프로그램\n걸그룹들이 ‘울며 겨자먹기’로 지상파 가요 프로그램에 출연하는 이유도 사람들이 어떻게든 버핏과 밥 한 끼 먹으려는 상황과 다르지 않다. 무대에 오르고 순위에 들어 한번이라도 더 이름이 언급되는 데서 파생되는 경제적 효과가 크기 때문이다.\n케이블 TV와 인터넷이 제대로 보급되지 않았던 시절, 지상파 가요 프로그램 1위의 위력은 더 말할 나위 없이 강력했다. “1위에 오른 다음 날 음반사에서 대금을 회수해 가라는 전화를 받고 갔다가 1만 원이 가득 든 쌀자루를 트렁크에 담고 돌아왔다”라는 무용담이 회자될 정도였다.\n물론 그런 무용담은 더이상 먹히지 않지만, 지상파 가요 프로그램은 여전히 걸그룹들에게 ‘버핏’ 같은 존재다. 가요계 관계자에 따르면 가요 프로그램에 한 번 출연하는 것만으로도 행사 출연료가 3~4배씩 뛴단다. \n게다가 요즘에는 해외 팬들도 국내 가요 프로그램을 챙겨 보고, 그 순위를 인기를 가늠하는 척도로 삼으면서 버핏 효과는 더 커지고 있다.\n여기서 궁금한 점이 하나 생긴다. 가요 프로그램 1위와 ‘아는 형님’ 같은 예능 프로그램 출연 가운데 어느 쪽의 버핏 효과가 더 클까? \n기획사들은 열이면 열, “가요 프로그램 1위가 훨씬 힘이 세다”고 했다. 한 기획사의 이사는 “지상파에서 1위를 하면 행사비가 10배는 올라요”라며 가요 프로그램이 가진 파워를 수치로 말해주었다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n2021년 3월 데뷔 10년 만에 처음으로 SBS ‘인기가요’ 1위에 오른 브레이브걸스는 이후 광고를 스무 편 넘게 찍었다.\n지상파 가요 프로그램 1위라는 영예는 금전적 측면뿐 아니라 가수로서의 ‘존엄’이 더해지면서 이후 롱런에도 결정적인 도움이 된다고 한다. “아무리 예능에 많이 출연한다고 하더라도 가요 프로그램에서 순위가 좋지 않으면 한계가 있어서 오래 가지 못해요.”\n이 역시 브레이브걸스가 증명했다. 브레이브걸스는 2021년에 지상파 가요프로그램에서 9차례나 1위에 올랐다. ‘롤린’으로 6차례, ‘치맛바람’으로 3차례였다. 하지만 2022년부터는 다시 1위에 오르지 못했고, 광고도 역시 급감했다. 예능 프로그램에 여러 번 출연했지만 큰 도움이 되지 않았다.\n\n최근 무섭게 치고 올라온 걸그룹 QWER도 마찬가지다. QWER은 5월 4일 MBC ‘음악중심’에서 1위 후보에 올랐다. 이들이 방송 활동을 거의 하지 않는다는 점, 유튜버 김계란이 만든 ‘최애의 아이들’이라는 프로젝트로 만들어진 걸그룹이라는 점을 감안하면 대단한 성과다.\nQWER은 5월 대학 축제 섭외 1순위 걸그룹으로 떠올랐는데, 그럼에도 구글 트렌드에서 검색량이 최고치에 올랐던 것은 역시 5월 4일, 그러니까 MBC ‘음악중심’에서 1위 후보에 오른 날이다.\n가요 프로그램 시청률이 아무리 바닥을 기어도, 걸그룹들이 가요 프로그램 출연으로 파생되는 버핏 효과를 포기할 수 없는 이유다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nData 바이브컴퍼니 김종민\nEdit 정경화 Graphic 조수희 함영범",
        "content": "가요 순위 프로그램과 버핏 효과",
        "contentSnippet": "가요 순위 프로그램과 버핏 효과",
        "guid": "https://blog.toss.im/article/girl-groups-economics-08",
        "isoDate": "2024-06-19T00:05:00.000Z"
      },
      {
        "title": "내가 받을 수 있는 정부지원금 놓치지 않는 법",
        "link": "https://blog.toss.im/article/toss-subsidy",
        "pubDate": "Mon, 17 Jun 2024 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-oni540{position:relative;width:100%;height:0;padding-bottom:56.25%;}\n.css-122y91a{position:absolute;top:0;left:0;width:100%;height:100%;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}\n.css-1kxrhf3{white-space:pre-wrap;}2024년 6월 7일 기준, 1만 개 넘는 정부지원금이 있다는 사실 알고 있나요? 토스를 이용하면 내가 받을 수 있는 정부지원금 한번에 확인할 수 있어요. \n1. 토스 오른쪽 하단의 ‘전체’ 메뉴를 눌러 ‘지원금’을 검색해 보세요. ‘숨은 정부지원금 찾기’ 메뉴를 찾아줍니다. \n.css-1pgssrp{max-width:100%;border-radius:16px;}.css-wgpbp3{display:block;margin-top:6px;}.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}토스에서 받을 수 있는 정부지원금 찾는 법\n2. 살고 있는 곳의 주소와 함께 살고 있는 가족 수, 근로 상황 등을 입력해주세요. \n\n3. 모두 입력하고 나면 내가 받을 수 있는 지원금을 한눈에 확인할 수 있어요. 상단의 ‘알림받기’를 누르면 새로운 지원금을 받을 수 있을 때 알려드려요.",
        "content": "1만 여개가 넘는 정부지원금 중 나에게 해당되는 것만 알려드려요. ",
        "contentSnippet": "1만 여개가 넘는 정부지원금 중 나에게 해당되는 것만 알려드려요.",
        "guid": "https://blog.toss.im/article/toss-subsidy",
        "isoDate": "2024-06-17T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]