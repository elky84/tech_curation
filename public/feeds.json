[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sinem Akinci",
        "title": "GitHub Copilot Extensions for C++ developers and beyond now available in VS Code",
        "link": "https://devblogs.microsoft.com/cppblog/github-copilot-extensions-for-c-developers-and-beyond-now-available-in-vs-code/",
        "pubDate": "Wed, 07 Aug 2024 09:00:57 +0000",
        "content:encodedSnippet": "GitHub Copilot is now more extensible than ever for extension authors in VS Code.\nAt the Microsoft Build conference, we announced that VS Code extensions can now leverage APIs for Copilot to build custom chat participants that users can interact with in the GitHub Copilot Chat view in VS Code. To learn more, please watch the Build session on the new extensibility and read more on the VS Code blog.  Some notable extensions that have developed chat participants for public consumption include Microsoft Dev Box and Parallels.\nAnother API that extensions can leverage LLMs with is the language model API. It enables you to integrate AI-powered features and natural language processing in your Visual Studio Code extension. To learn more about this API, please visit our VS Code docs.\nWhat are chat participants?\nYou can read more in the VS Code docs for more specifics on how chat participants work. These are specified by the user in the Copilot chat window, with queries using @<participant>.\n\nSome existing chat participants available in VS Code Copilot Chat that you may be familiar with include @workspace and @vscode.\nFor example, @workspace dynamically looks at all the code in your open workspace to provide relevant code snippets as context to Copilot Chat.\n\nOn the other hand, @vscode dynamically indexes VS Code settings to provide an answer.\n\nWith the latest release, you now have access to build your own chat participant for your VS Code extensions, allowing you to provide domain knowledge to Copilot that would be relevant to your users.\nAs a consumer, there are some chat participants to look forward to that utilized this API and are in the pipeline. For example, for users who have containerized development, there is a Docker Copilot extension that is currently in limited public beta that allows users to learn more about containerization with regards to their app.\nWhat are language models?\nWith the Language Model API, you can directly access and take advantage of LLMs contributed by GitHub Copilot in your own extensions, by specifying prompts, relevant context, and how requests should be sent to the model. You can utilize this API to enhance developer experiences beyond the Copilot Chat view.\nFor example, one feature that utilizes the Language Model API is AI-powered rename suggestions, that allow you to dynamically rename symbols in your C++ code. These will automatically invoke suggestions when you go to rename a symbol in VS code when you have the Copilot Chat extension installed.\nAdditionally, the source control view utilizes the Language Model API to prompt how to automatically generate commit messages using AI for users that invoke it, based on the source code changes.\n\nWhat’s next in VS Code Copilot Chat?\nWe are committed to enhancing the extensibility, quality, and customizability of Copilot Chat in VS Code. Stay tuned for exciting updates to make your experience with Chat.\nSome things coming up to look forward to in VS Code, which can be found in the original blog post announcement from the VS Code team, include the variable resolving API, which allows extensions to contribute chat variables (via # sign) which provide context from the extension’s domain. Additionally, VS Code expects improvements to intent detection, so that these chat participants are automatically invoked, and to provide GPT-4o language model support.\nPlease file any issues or feedback in the VS Code Copilot repo, try out building your own developments using Copilot for your extensions, or let us know any VS Code extensions you’d like to see leveraging these APIs.\nTo learn more about using GitHub Copilot in VS Code with C++, watch our introduction YouTube video and others on the VS Code Channel.\nThe post GitHub Copilot Extensions for C++ developers and beyond now available in VS Code appeared first on C++ Team Blog.",
        "dc:creator": "Sinem Akinci",
        "comments": "https://devblogs.microsoft.com/cppblog/github-copilot-extensions-for-c-developers-and-beyond-now-available-in-vs-code/#respond",
        "content": "<p>GitHub Copilot is now more extensible than ever for extension authors in VS Code.<br />\nAt the Microsoft Build conference, we announced that VS Code extensions can now leverage APIs for Copilot to build custom chat participants that users can interact with in the GitHub Copilot Chat view in VS Code.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/github-copilot-extensions-for-c-developers-and-beyond-now-available-in-vs-code/\">GitHub Copilot Extensions for C++ developers and beyond now available in VS Code</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "GitHub Copilot is now more extensible than ever for extension authors in VS Code.\nThe post GitHub Copilot Extensions for C++ developers and beyond now available in VS Code appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=34409",
        "categories": [
          "C++",
          "CMake",
          "Copilot",
          "Visual Studio Code"
        ],
        "isoDate": "2024-08-07T09:00:57.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "RoCE networks for distributed AI training at scale",
        "link": "https://engineering.fb.com/2024/08/05/data-center-engineering/roce-network-distributed-ai-training-at-scale/",
        "pubDate": "Mon, 05 Aug 2024 16:00:26 +0000",
        "content:encodedSnippet": "AI networks play an important role in interconnecting tens of thousands of GPUs together, forming the foundational infrastructure for training, enabling large models with hundreds of billions of parameters such as LLAMA 3.1 405B.\nThis week at ACM SIGCOMM 2024 in Sydney, Australia, we are sharing details on the network we have built at Meta over the past few years to support our large-scale distributed AI training workload. \nOur paper, “RDMA over Ethernet for Distributed AI Training at Meta Scale,” provides the details on how we design, implement, and operate one of the world’s largest AI networks at scale.\nThe growing prevalence of AI has introduced a new era of communication demands. Distributed training, in particular, imposes the most significant strain on data center networking infrastructure. For instance, a typical generative AI (GenAI) job may necessitate tight coordination of tens of thousands of GPUs over the course of several weeks. Constructing a reliable, high-performance network infrastructure capable of accommodating this burgeoning demand necessitates a reevaluation of data center network design.\nWhen Meta introduced distributed GPU-based training, we decided to construct specialized data center networks tailored for these GPU clusters. We opted for RDMA Over Converged Ethernet version 2 (RoCEv2) as the inter-node communication transport for the majority of our AI capacity. \nWe have successfully expanded our RoCE networks, evolving from prototypes to the deployment of numerous clusters, each accommodating thousands of GPUs. These RoCE clusters support an extensive range of production distributed GPU training jobs, including ranking, content recommendation, content understanding, natural language processing, and GenAI model training, among other workloads.\nTopology\nWe built a dedicated backend network specifically for distributed training. This allowed us to evolve, operate, and scale independently from the rest of the data center network. To support large language models (LLMs), we expanded the backend network towards the DC-scale, e.g., incorporating topology-awareness into the training job scheduler.\nThe separation\nThe training cluster relies on two independent networks: the frontend (FE) network for tasks such as data ingestion, checkpointing, and logging, and the backend (BE) network for training, as depicted below.\nA training rack is connected to both the FE and BE of the data center network. The FE has a hierarchy of network layers – rack switches (RSWs), fabric switches (FSWs), and higher – that houses the storage warehouse, which provides GPUs with the necessary input data for training workloads. We ensure that there is enough ingress bandwidth on the rack switch to not hinder the training workload.\nThe BE is a specialized fabric that connects all RDMA NICs in a non-blocking architecture, providing high bandwidth, low latency, and lossless transport between any two GPUs in the cluster, regardless of their physical location. This backend fabric utilizes the RoCEv2 protocol, which encapsulates the RDMA service in UDP packets for transport over the network.\nAI Zone\nOur BE networks have undergone several transformations. Initially, our GPU clusters used a simple star topology with a few AI racks connected to a central Ethernet switch running the non-routable RoCEv1 protocol. This setup had clear limitations in GPU scale and switch redundancy. Therefore, we swiftly transitioned to a fabric-based architecture for extended scalability and higher availability. \nWe designed a two-stage Clos topology for AI racks, known as an AI Zone. The rack training switch (RTSW), serving as the leaf switch, offers scale-up connectivity for GPUs within the rack using copper-based DAC cables. The spine tier, composed of modular cluster training switches (CTSW), provides scale-out connectivity among all racks in the cluster. The CTSW has deep buffers statically divided over the ports in the chassis. The RTSWs connect to CTSWs via single-mode fiber and 400G pluggable transceivers.\n\nThe AI Zones are designed to support a large number of interconnected GPUs in a non-blocking manner. However, emerging AI advancements, such as LLMs like Llama, demand a GPU scale larger than what a single AI zone provides. To accommodate this, we designed an aggregator training switch (ATSW) layer that connects the CTSWs in a data center building, expanding the RoCE domain beyond a single AI Zone. \nNote, the cross-AI Zone connectivity is oversubscribed by design, with network traffic balanced using ECMP. To mitigate the performance bottleneck for cross-AI Zone traffic, we enhanced the training job scheduler to find a “minimum cut” when dividing the training nodes into different AI Zones, reducing the cross-AI Zone traffic and thus collective completion time. The scheduler does this by learning the position of GPU servers in the logical topology to recommend a rank assignment. \nRouting\nThe scaling of compute power and network topology discussed above led to the question of how to efficiently balance and route the massive training traffic. Specifically, the AI training workloads had several challenging characteristics: \nLow entropy: Compared to traditional data center workloads, the number and the diversity of flows for AI workloads are much smaller and the flow patterns are usually repetitive and predictable. \nBurstiness: On the time dimension, the flows usually exhibit the “on and of”’ nature in the time granularity of milliseconds. \nElephant flows: For each burst, the intensity of each flow could reach up to the line rate of NICs. \nECMP and path pinning\nWe initially considered the widely adopted ECMP, which places flows randomly based on the hashes on the five-tuple: source and destination IPs, source and destination UDP ports, and protocol. However, and as expected, ECMP rendered poor performance for the training workload due to the low flow entropy. \nAlternatively, we designed and deployed a path-pinning scheme in the initial years of our deployment. This scheme routed packets to specific paths based on the destination “slice” (the index of the RTSW downlink). This worked well if each rack was fully assigned to the same job and there was no failure in the network. However, this was seldom true. We saw that the rack can be partially allocated to a job, with only one of the two hosts in the rack using the uplink bandwidth. This fragmented job placement caused uneven traffic distribution and congestion on the uplinks of the particular RTSW and degraded the training performance up to more than 30%. Further, network failures on a uplink or a CTSW caused the affected flows to be unevenly reassigned to other CTSWs by ECMP. Those reassigned flows collided with other existing flows and slowed down the whole training job.\nWe mitigated the immediate impact of these flow collisions by upgrading the bandwidth of the RTSW uplinks bandwidth by 2x. Hence we allowed for the RTSW uplink capacity to be 1:2 under-subscribed compared to the RTSW downlink capacity. While this mitigated the immediate performance impact, this was an expensive solution as it required 2x network capacity. Thus, we recognized this as a short-term mitigation and proceeded to further stages of routing evolution. \nQueue pair scaling\nWe next revisited ECMP with an intent to increase the number of flows for hierarchical collectives through the queue pair (QP) scaling software feature in the collective library. \nTo account for this, we configured switches to perform Enhanced ECMP (E-ECMP) to additionally hash on the destination QP field of a RoCE packet using the UDF capability of the switch ASIC. This increased entropy and, compared to baseline ECMP without QP scaling, we observed that E-ECMP along with QP scaling showed performance improvement of up to 40% for the AllReduce collective.\n\nWe evaluated two QP scaling strategies. The first involved splitting each message meant to be posted over a single QP, instead onto multiple QPs resulting in multiple flows. But it also produced smaller message sizes on fabric as well as multiple ACKs. The second approach involved posting each message to a different queue, in a round-robin fashion. For the NIC message sizes demonstrated in our production with NCCL, we observed the latter to be performing well. This feature has been important for ECMP scalability by increasing the network flows for hierarchical collectives like AllReduce.\nWhile we improved ECMP performance with QP scaling, the underlying probabilistic nature of hashing was a persistent downside of this routing scheme. Also, the need to customize the QP scaling factor and methodology based on the workload type, while workable in the short-term, presented long-term operational complexity.\nCongestion control\nAs we transitioned to 400G deployments, we attempted to tune DCQCN to adapt to new network speeds and topology. However, with default DCQCN settings and doubled ECN thresholds compared to 200G networks, performance was degraded. Further investigation revealed that DCQCN implementation in firmware has changed, introducing bugs and reduced visibility with problems relating to correct CNP counting. \nWe proceeded without DCQCN for our 400G deployments. At this time, we have had over a year of experience with just PFC for flow control, without any other transport-level congestion control. We have observed stable performance and lack of persistent congestion for training collectives. \nReceiver-driven traffic admission\nTo mitigate the congestion for 400G and beyond, we co-designed the collective library and RoCE transport to enforce receiver-driven traffic admission for better performance. The diagram below shows that the GPU-to-GPU communication architecture in our production training clusters predominantly uses two-stage copy and receiver-initiated communication via the NCCL collective library. Each GPU’s high bandwidth memory (HBM) maintains multiple channels for parallel transmission of chunked collective messages. The sender GPU threads first copy data from the compute buffer to an available channel buffer. The sender CPU proxy thread can only post an RDMA write request after receiving a clear-to-send (CTS) packet from the receiver, which includes the size and memory information. The receiver’s GPU threads then copy the channel buffer contents to the destination compute buffer. Finally, CPU proxy threads on both sides recycle the channel buffer, and the receiver CPU proxy sends another CTS packet once the channel buffer is ready.\n\nWe effectively leverage this mechanism as a receiver-driven traffic admission to limit the amount of in-flight traffic on the network, especially when congestion starts to build up. However, configuring the right setting can be challenging as: \nThe number of channels is limited due to the resource contention on GPU threads with concurrent compute operations; \nSetting the channel buffer size requires a more careful balance between congestion spreading and bandwidth under-utilization than Infiniband due to RoCE’s more coarse-grained flow control and possible end-host slowness. \nThus, we took two steps to improve the performance. First, we experimentally determined the right parameter settings for the number of channels and channel buffer size across various training job sizes and collective types. Second, we implemented high priority queuing at switches for CTS packets to expedite the notifications and mitigate potential bandwidth starvation.\nCongestion control has been a focal point of research in RDMA networks. DCQCN has been the gold standard for storage-focused networks. However, our experience with distributed AI training workloads provides a different perspective on tailoring the congestion control algorithms. Despite turning off DCQCN and multiple instances of RTSW sending PFC to a deep-buffer CTSW, we have not encountered a scenario over the last four years where production AI training traffic causes the CTSW to send PFCs to RTSWs persistently. \nOur current solution depends on careful coordination between the collective communication library and the network. It may depend on the relative throughput between GPU and network, which may not be applicable to all scenarios. We encourage the research community to put more focus on this topic.\nMoving forward\nThe design and operation of large-scale RoCE networks for distributed AI training workloads have evolved to meet the increasing demands of computational density and scale. By segregating FE and BE networks, employing various routing schemes, and optimizing collective traffic patterns, we have been able to build a performant and reliable network infrastructure. These designs and insights underline the importance of deeply understanding the training workload and translating these implications into network component design, ultimately contributing to the advancement of distributed AI training infrastructure.\nWith the fast growing trend of GenAI workload, our network infrastructure will evolve rapidly. \nRead the paper\nRDMA over Ethernet for Distributed AI Training at Meta Scale\nAcknowledgements\nWe would like to thank all contributors to the paper, including Rui Miao, Shengbao Zheng, Sai Jayesh Bondu, Guilherme Goes, Hany Morsy, Rohit Puri, Adi Mohammad Riftadi, Ashmitha Jeevaraj Shetty, Jingyi Yang, Shuqiang Zhang, Mikel Jimenez Fernandez, Shashi Gandham, Omar Baldonado. Many current and former people in the Network Infrastructure team at Meta have contributed to productionizing RoCE networks for AI training over the years. In particular, we would like to acknowledge Srinivas Sridharan, Petr Lapukhov, Jose Leitao, and Brandon Taylor. This work is a close collaboration with our partners in Meta’s AI Production Engineering, AI and Systems Co-design, and AI Hardware Systems teams.\nThe post RoCE networks for distributed AI training at scale appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>AI networks play an important role in interconnecting tens of thousands of GPUs together, forming the foundational infrastructure for training, enabling large models with hundreds of billions of parameters such as LLAMA 3.1 405B. This week at ACM SIGCOMM 2024 in Sydney, Australia, we are sharing details on the network we have built at Meta [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/08/05/data-center-engineering/roce-network-distributed-ai-training-at-scale/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/08/05/data-center-engineering/roce-network-distributed-ai-training-at-scale/\">RoCE networks for distributed AI training at scale</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "AI networks play an important role in interconnecting tens of thousands of GPUs together, forming the foundational infrastructure for training, enabling large models with hundreds of billions of parameters such as LLAMA 3.1 405B. This week at ACM SIGCOMM 2024 in Sydney, Australia, we are sharing details on the network we have built at Meta [...]\nRead More...\nThe post RoCE networks for distributed AI training at scale appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21522",
        "categories": [
          "AI Research",
          "Data Center Engineering",
          "ML Applications",
          "Networking & Traffic"
        ],
        "isoDate": "2024-08-05T16:00:26.000Z"
      },
      {
        "creator": "",
        "title": "DCPerf: An open source benchmark suite for hyperscale compute applications",
        "link": "https://engineering.fb.com/2024/08/05/data-center-engineering/dcperf-open-source-benchmark-suite-for-hyperscale-compute-applications/",
        "pubDate": "Mon, 05 Aug 2024 15:55:14 +0000",
        "content:encodedSnippet": "We are open-sourcing DCPerf, a collection of benchmarks that represents the diverse categories of workloads that run in data center cloud deployments.\nWe hope that DCperf can be used more broadly by academia, the hardware industry, and internet companies to design and evaluate future products.\nDCPerf is available now on GitHub.\nHyperscale and cloud datacenter deployments constitute the largest market share of server deployments in the world today. Workloads developed by large-scale internet companies running in their datacenters have very different characteristics than those in high performance computing (HPC) or traditional enterprise market segments. Therefore, server design considerations, trade-offs and objectives for datacenter use cases are also significantly different from other market segments and require a different set of benchmarks and evaluation methodology. Existing benchmarks fall short of capturing these characteristics and hence do not provide a reliable avenue to design and optimize modern server and datacenter designs.\nIntroducing DCPerf\nMeta developed DCPerf, a collection of benchmarks to represent the diverse categories of workloads that run in cloud deployments. Each benchmark within DCPerf is designed by referencing a large application within Meta’s production server fleet. \nWe used several new techniques to ensure benchmark representativeness, ranging from low-level hardware microarchitecture features to application and library usage profiles, to analyze production workloads and capture the important characteristics of these workloads in DCPerf. Designing and optimizing hardware and software on future server platforms using these benchmarks willmore closely translate into improved efficiency of hyperscaler  production deployments. \nDCPerf’s design process.\nOver the past few years, we have continuously enhanced these benchmarks to make them compatible with different instruction set architectures, including x86 and ARM. We also validated that the benchmarks can be used to evaluate emerging industry trends, (e.g., chiplet-based architectures), and added support for multi-tenancy so that benchmarks can scale and make use of rapidly increasing core counts on modern server platforms. \n\nUsing DCPerf to improve Meta’s compute server designs\nWe have been using DCPerf internally, in addition to the SPEC CPU benchmark suite, for product evaluation at Meta to make the right configuration choices for our data center deployments. DCPerf also helps us make early performance projections that are used for capacity planning, identify performance bugs in hardware and system software, and jointly optimize the platform with our hardware industry collaborators. \nDCPerf provides a much richer set of application software diversity and helps get better coverage signals on platform performance versus existing benchmarks such as SPEC CPU. Due to these benefits, we have also started using DCPerf to assist with our decision making process on which platforms to deploy in our data centers. \nDCPerf captures the core and SOC microarchitecture characteristics of data center applications. Graph compares  Instruction-Per-Cycle of production applications, DCPerf and SPEC CPU. Red circles highlight that DCPerf more accurately represents IPC of production applications.\nDCPerf more closely captures the power and frequency characteristics of data center applications. This graph compares the average core frequency of production applications, DCPerf and SPEC CPU. Red circles highlight that DCPerf more accurately represents the frequency characteristics of production applications.\nImproving state-of-the-art computing platforms with our hardware industry collaborators using DCPerf\nOver the last two years we have collaborated with leading CPU vendors to further validate DCPerf on pre silicon and/or early silicon setups to debug performance issues and identify hardware and system software optimizations on their roadmap products. There have been multiple instances where we have been able to identify  performance optimizations in areas such as CPU core microarchitecture settings and SOC power management optimizations. \nThe graphic below shows areas of HW/SW design where we have seen DCPerf being representative of production usage and being beneficial for delivering relevant performance signals and help with optimizations as well as areas of future work.\n\nWe are thankful for our collaborators’ support and contributions using DCPerf to drive innovation in such an important and complex area and expect to continue improving the benchmarks with new version releases over time to adapt to emerging technologies. \nEnabling innovations through open collaboration\nToday, we are open-sourcing DCPerf with the goal to create a collaborative and open source reference benchmark that can be used to design, develop, debug, optimize, and improve state-of-the-art in compute platform designs for hyperscale. \nAs an open source benchmark suite, DCPerf has the potential to become an industry standard method to capture important workload characteristics of compute workloads that run in hyperscale datacenter deployments. \nGet DCPerf on GitHub\nDCPerf is available now on GitHub\nThe post DCPerf: An open source benchmark suite for hyperscale compute applications appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>We are open-sourcing DCPerf, a collection of benchmarks that represents the diverse categories of workloads that run in data center cloud deployments. We hope that DCperf can be used more broadly by academia, the hardware industry, and internet companies to design and evaluate future products. DCPerf is available now on GitHub. Hyperscale and cloud datacenter [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/08/05/data-center-engineering/dcperf-open-source-benchmark-suite-for-hyperscale-compute-applications/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/08/05/data-center-engineering/dcperf-open-source-benchmark-suite-for-hyperscale-compute-applications/\">DCPerf: An open source benchmark suite for hyperscale compute applications</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "We are open-sourcing DCPerf, a collection of benchmarks that represents the diverse categories of workloads that run in data center cloud deployments. We hope that DCperf can be used more broadly by academia, the hardware industry, and internet companies to design and evaluate future products. DCPerf is available now on GitHub. Hyperscale and cloud datacenter [...]\nRead More...\nThe post DCPerf: An open source benchmark suite for hyperscale compute applications appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21502",
        "categories": [
          "Data Center Engineering",
          "Open Source"
        ],
        "isoDate": "2024-08-05T15:55:14.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Prerna Dubey, Avital Derazon, Harshal Parikh and Kimi Robertson",
        "title": "eBay Introduces Intuitive Search Redesign to Elevate Shopper Experience",
        "link": "https://innovation.ebayinc.com/tech/features/ebay-introduces-intuitive-search-redesign-to-elevate-shopper-experience/",
        "pubDate": "Thu, 08 Aug 2024 00:00:00 -0700",
        "dc:creator": "Prerna Dubey, Avital Derazon, Harshal Parikh and Kimi Robertson",
        "content": "<div style=\"margin-bottom: 10px;\"><img src=\"https://static.ebayinc.com/static/assets/Uploads/Blog/Posts/_resampled/FitWzIwMCwxMTNd/SRP-1-Still-Image-1600px.jpg?fs=584489adc0e1b0b0\" width=\"200\" height=\"113\" alt=\"eBay Introduces Intuitive Search Redesign to Elevate Shopper Experience\" /></div><div>Introducing a more seamless and visually rich shopping experience. </div>",
        "contentSnippet": "Introducing a more seamless and visually rich shopping experience.",
        "guid": "https://innovation.ebayinc.com/tech/features/ebay-introduces-intuitive-search-redesign-to-elevate-shopper-experience/",
        "categories": [
          "article"
        ],
        "isoDate": "2024-08-08T07:00:00.000Z"
      }
    ]
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": [
      {
        "creator": "Netflix Technology Blog",
        "title": "Investigation of a Cross-regional Network Performance Issue",
        "link": "https://netflixtechblog.com/investigation-of-a-cross-regional-network-performance-issue-422d6218fdf1?source=rss----2615bd06b42e---4",
        "pubDate": "Mon, 05 Aug 2024 22:18:00 GMT",
        "content:encodedSnippet": "Hechao Li, Roger Cruz\nCloud Networking Topology\nNetflix operates a highly efficient cloud computing infrastructure that supports a wide array of applications essential for our SVOD (Subscription Video on Demand), live streaming and gaming services. Utilizing Amazon AWS, our infrastructure is hosted across multiple geographic regions worldwide. This global distribution allows our applications to deliver content more effectively by serving traffic closer to our customers. Like any distributed system, our applications occasionally require data synchronization between regions to maintain seamless service delivery.\nThe following diagram shows a simplified cloud network topology for cross-region traffic.\n\nThe Problem At First Glance\nOur Cloud Network Engineering on-call team received a request to address a network issue affecting an application with cross-region traffic. Initially, it appeared that the application was experiencing timeouts, likely due to suboptimal network performance. As we all know, the longer the network path, the more devices the packets traverse, increasing the likelihood of issues. For this incident, the client application is located in an internal subnet in the US region while the server application is located in an external subnet in a European region. Therefore, it is natural to blame the network since packets need to travel long distances through the internet.\nAs network engineers, our initial reaction when the network is blamed is typically, “No, it can’t be the network,” and our task is to prove it. Given that there were no recent changes to the network infrastructure and no reported AWS issues impacting other applications, the on-call engineer suspected a noisy neighbor issue and sought assistance from the Host Network Engineering team.\nBlame the Neighbors\nIn this context, a noisy neighbor issue occurs when a container shares a host with other network-intensive containers. These noisy neighbors consume excessive network resources, causing other containers on the same host to suffer from degraded network performance. Despite each container having bandwidth limitations, oversubscription can still lead to such issues.\nUpon investigating other containers on the same host — most of which were part of the same application — we quickly eliminated the possibility of noisy neighbors. The network throughput for both the problematic container and all others was significantly below the set bandwidth limits. We attempted to resolve the issue by removing these bandwidth limits, allowing the application to utilize as much bandwidth as necessary. However, the problem persisted.\nBlame the Network\nWe observed some TCP packets in the network marked with the RST flag, a flag indicating that a connection should be immediately terminated. Although the frequency of these packets was not alarmingly high, the presence of any RST packets still raised suspicion on the network. To determine whether this was indeed a network-induced issue, we conducted a tcpdump on the client. In the packet capture file, we spotted one TCP stream that was closed after exactly 30 seconds.\nSYN at 18:47:06\n\nAfter the 3-way handshake (SYN,SYN-ACK,ACK), the traffic started flowing normally. Nothing strange until FIN at 18:47:36 (30 seconds later)\n\nThe packet capture results clearly indicated that it was the client application that initiated the connection termination by sending a FIN packet. Following this, the server continued to send data; however, since the client had already decided to close the connection, it responded with RST packets to all subsequent data from the server.\nTo ensure that the client wasn’t closing the connection due to packet loss, we also conducted a packet capture on the server side to verify that all packets sent by the server were received. This task was complicated by the fact that the packets passed through a NAT gateway (NGW), which meant that on the server side, the client’s IP and port appeared as those of the NGW, differing from those seen on the client side. Consequently, to accurately match TCP streams, we needed to identify the TCP stream on the client side, locate the raw TCP sequence number, and then use this number as a filter on the server side to find the corresponding TCP stream.\nWith packet capture results from both the client and server sides, we confirmed that all packets sent by the server were correctly received before the client sent a FIN.\nNow, from the network point of view, the story is clear. The client initiated the connection requesting data from the server. The server kept sending data to the client with no problem. However, at a certain point, despite the server still having data to send, the client chose to terminate the reception of data. This led us to suspect that the issue might be related to the client application itself.\nBlame the Application\nIn order to fully understand the problem, we now need to understand how the application works. As shown in the diagram below, the application runs in the us-east-1 region. It reads data from cross-region servers and writes the data to consumers within the same region. The client runs as containers, whereas the servers are EC2 instances.\nNotably, the cross-region read was problematic while the write path was smooth. Most importantly, there is a 30-second application-level timeout for reading the data. The application (client) errors out if it fails to read an initial batch of data from the servers within 30 seconds. When we increased this timeout to 60 seconds, everything worked as expected. This explains why the client initiated a FIN — because it lost patience waiting for the server to transfer data.\n\nCould it be that the server was updated to send data more slowly? Could it be that the client application was updated to receive data more slowly? Could it be that the data volume became too large to be completely sent out within 30 seconds? Sadly, we received negative answers for all 3 questions from the application owner. The server had been operating without changes for over a year, there were no significant updates in the latest rollout of the client, and the data volume had remained consistent.\nBlame the Kernel\nIf both the network and the application weren’t changed recently, then what changed? In fact, we discovered that the issue coincided with a recent Linux kernel upgrade from version 6.5.13 to 6.6.10. To test this hypothesis, we rolled back the kernel upgrade and it did restore normal operation to the application.\nHonestly speaking, at that time I didn’t believe it was a kernel bug because I assumed the TCP implementation in the kernel should be solid and stable (Spoiler alert: How wrong was I!). But we were also out of ideas from other angles.\nThere were about 14k commits between the good and bad kernel versions. Engineers on the team methodically and diligently bisected between the two versions. When the bisecting was narrowed to a couple of commits, a change with “tcp” in its commit message caught our attention. The final bisecting confirmed that this commit was our culprit.\nInterestingly, while reviewing the email history related to this commit, we found that another user had reported a Python test failure following the same kernel upgrade. Although their solution was not directly applicable to our situation, it suggested that a simpler test might also reproduce our problem. Using strace, we observed that the application configured the following socket options when communicating with the server:\n[pid 1699] setsockopt(917, SOL_IPV6, IPV6_V6ONLY, [0], 4) = 0\n[pid 1699] setsockopt(917, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0\n[pid 1699] setsockopt(917, SOL_SOCKET, SO_SNDBUF, [131072], 4) = 0\n[pid 1699] setsockopt(917, SOL_SOCKET, SO_RCVBUF, [65536], 4) = 0\n[pid 1699] setsockopt(917, SOL_TCP, TCP_NODELAY, [1], 4) = 0\nWe then developed a minimal client-server C application that transfers a file from the server to the client, with the client configuring the same set of socket options. During testing, we used a 10M file, which represents the volume of data typically transferred within 30 seconds before the client issues a FIN. On the old kernel, this cross-region transfer completed in 22 seconds, whereas on the new kernel, it took 39 seconds to finish.\nThe Root Cause\nWith the help of the minimal reproduction setup, we were ultimately able to pinpoint the root cause of the problem. In order to understand the root cause, it’s essential to have a grasp of the TCP receive window.\nTCP Receive Window\nSimply put, the TCP receive window is how the receiver tells the sender “This is how many bytes you can send me without me ACKing any of them”. Assuming the sender is the server and the receiver is the client, then we have:\n\nThe Window Size\nNow that we know the TCP receive window size could affect the throughput, the question is, how is the window size calculated? As an application writer, you can’t decide the window size, however, you can decide how much memory you want to use for buffering received data. This is configured using SO_RCVBUF socket option we saw in the strace result above. However, note that the value of this option means how much application data can be queued in the receive buffer. In man 7 socket, there is\nSO_RCVBUF\nSets or gets the maximum socket receive buffer in bytes.\n The kernel doubles this value (to allow space for\n bookkeeping overhead) when it is set using setsockopt(2),\n and this doubled value is returned by getsockopt(2). The\n default value is set by the\n /proc/sys/net/core/rmem_default file, and the maximum\n allowed value is set by the /proc/sys/net/core/rmem_max\n file. The minimum (doubled) value for this option is 256.\nThis means, when the user gives a value X, then the kernel stores 2X in the variable sk->sk_rcvbuf. In other words, the kernel assumes that the bookkeeping overhead is as much as the actual data (i.e. 50% of the sk_rcvbuf).\nsysctl_tcp_adv_win_scale\nHowever, the assumption above may not be true because the actual overhead really depends on a lot of factors such as Maximum Transmission Unit (MTU). Therefore, the kernel provided this sysctl_tcp_adv_win_scale which you can use to tell the kernel what the actual overhead is. (I believe 99% of people also don’t know how to set this parameter correctly and I’m definitely one of them. You’re the kernel, if you don’t know the overhead, how can you expect me to know?).\nAccording to the sysctl doc,\ntcp_adv_win_scale — INTEGER\nObsolete since linux-6.6 Count buffering overhead as bytes/2^tcp_adv_win_scale (if tcp_adv_win_scale > 0) or bytes-bytes/2^(-tcp_adv_win_scale), if it is <= 0.\nPossible values are [-31, 31], inclusive.\nDefault: 1\nFor 99% of people, we’re just using the default value 1, which in turn means the overhead is calculated by rcvbuf/2^tcp_adv_win_scale = 1/2 * rcvbuf. This matches the assumption when setting the SO_RCVBUF value.\nLet’s recap. Assume you set SO_RCVBUF to 65536, which is the value set by the application as shown in the setsockopt syscall. Then we have:\n\nSO_RCVBUF = 65536\nrcvbuf = 2 * 65536 = 131072\noverhead = rcvbuf / 2 = 131072 / 2 = 65536\nreceive window size = rcvbuf — overhead = 131072–65536 = 65536\n\n(Note, this calculation is simplified. The real calculation is more complex.)\nIn short, the receive window size before the kernel upgrade was 65536. With this window size, the application was able to transfer 10M data within 30 seconds.\nThe Change\nThis commit obsoleted sysctl_tcp_adv_win_scale and introduced a scaling_ratio that can more accurately calculate the overhead or window size, which is the right thing to do. With the change, the window size is now rcvbuf * scaling_ratio.\nSo how is scaling_ratio calculated? It is calculated using skb->len/skb->truesize where skb->len is the length of the tcp data length in an skb and truesize is the total size of the skb. This is surely a more accurate ratio based on real data rather than a hardcoded 50%. Now, here is the next question: during the TCP handshake before any data is transferred, how do we decide the initial scaling_ratio? The answer is, a magic and conservative ratio was chosen with the value being roughly 0.25.\nNow we have:\n\nSO_RCVBUF = 65536\nrcvbuf = 2 * 65536 = 131072\nreceive window size = rcvbuf * 0.25 = 131072 * 0.25 = 32768\n\nIn short, the receive window size halved after the kernel upgrade. Hence the throughput was cut in half, causing the data transfer time to double.\nNaturally, you may ask, I understand that the initial window size is small, but why doesn’t the window grow when we have a more accurate ratio of the payload later (i.e. skb->len/skb->truesize)? With some debugging, we eventually found out that the scaling_ratio does get updated to a more accurate skb->len/skb->truesize, which in our case is around 0.66. However, another variable, window_clamp, is not updated accordingly. window_clamp is the maximum receive window allowed to be advertised, which is also initialized to 0.25 * rcvbuf using the initial scaling_ratio. As a result, the receive window size is capped at this value and can’t grow bigger.\nThe Fix\nIn theory, the fix is to update window_clamp along with scaling_ratio. However, in order to have a simple fix that doesn’t introduce other unexpected behaviors, our final fix was to increase the initial scaling_ratio from 25% to 50%. This will make the receive window size backward compatible with the original default sysctl_tcp_adv_win_scale.\nMeanwhile, notice that the problem is not only caused by the changed kernel behavior but also by the fact that the application sets SO_RCVBUF and has a 30-second application-level timeout. In fact, the application is Kafka Connect and both settings are the default configurations (receive.buffer.bytes=64k and request.timeout.ms=30s). We also created a kafka ticket to change receive.buffer.bytes to -1 to allow Linux to auto tune the receive window.\nConclusion\nThis was a very interesting debugging exercise that covered many layers of Netflix’s stack and infrastructure. While it technically wasn’t the “network” to blame, this time it turned out the culprit was the software components that make up the network (i.e. the TCP implementation in the kernel).\nIf tackling such technical challenges excites you, consider joining our Cloud Infrastructure Engineering teams. Explore opportunities by visiting Netflix Jobs and searching for Cloud Engineering positions.\nAcknowledgments\nSpecial thanks to our stunning colleagues Alok Tiagi, Artem Tkachuk, Ethan Adams, Jorge Rodriguez, Nick Mahilani, Tycho Andersen and Vinay Rayini for investigating and mitigating this issue. We would also like to thank Linux kernel network expert Eric Dumazet for reviewing and applying the patch.\n\nInvestigation of a Cross-regional Network Performance Issue was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/422d6218fdf1",
        "categories": [
          "tcp",
          "debugging",
          "kernel",
          "network",
          "linux"
        ],
        "isoDate": "2024-08-05T22:18:00.000Z"
      }
    ]
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Matthias Koch",
        "title": "Cast Expressions, Primary Constructors, Collection Expressions, List Patterns – C# Language Support in 2024.2",
        "link": "https://blog.jetbrains.com/dotnet/2024/08/09/cast-expressions-primary-constructors-collection-expressions-list-patterns-csharp-language-support-in-2024-2/",
        "pubDate": "Fri, 09 Aug 2024 14:28:10 +0000",
        "content:encodedSnippet": "Our release for ReSharper and Rider 2024.2 is just around the corner, and we have lots of exciting features shipping for the new C# 13 and current C# and VB.NET! Since there are so many, we will split them into multiple blog posts. So make sure to check those posts out as well!\nIn this series, we will cover features around:\nEscape Character, Extract Common Code, Params Modifier, Out Vars\nEquality Analysis, Ref Structs, Culture Previews, Using Directives\nCast Expressions, Primary Constructors, Collection Expressions, List Patterns\nMake sure to download the latest ReSharper or Rider EAP builds to follow along:\nDownload Rider EAP\nCast Expression Analysis\nThe C# language uses C-styled cast expressions, which can be static upcasts or dynamic downcasts. During refactorings, it is very easy to turn a static upcast into a dynamic one, thus opening the door for runtime errors:\ninterface IBase;\r\ninterface IDerived : IBase;\r\nclass Derived : IDerived;\r\n\r\nvar derivedInstance = new Derived();\r\n\r\n// upcast: completely safe, no-op in MSIL and at a runtime\r\nvar baseReference = (IBase) derivedInstance;\r\n\r\n// downcast: runtime cast, can throw InvalidCastException\r\nvar derivedReference = (IDerived) baseReference;\nCopy to clipboard\n\n            \nIn other words, there is no way to tell if a cast is a safe upcast or a runtime downcast without knowing the complete type hierarchy. What a bummer! However, in C#, it is often possible to use explicit type annotations instead of cast expressions. With these type annotations, the code will simply not compile if the types are not compatible:\n// implicit upcast\r\nIBase baseReference = derivedInstance;\nCopy to clipboard\n\n            \nIn 2024.2, we identified various possibilities to use explicit type annotations instead of fragile C-styled casts and implemented a set of new inspections and quick-fixes:\nReplacing cast with explicit variable type\n\n\n\n\nProbably much more often, you’ll see upcasts happening inside lambda expressions bodies, like in the following LINQ query:\nReplacing cast with lambda return type\n\n\n\n\nAlso, in generic methods and their arguments, you can convert to safer type annotations:\nReplacing cast with type arguments\n\n\n\n\nPrimary Constructors\nIntroduced in C# 12 and inspired by F#, primary constructors for non-record types have achieved great adoption. Most notably, developers are happy to eliminate the duplications in field declarations and assignments. However, there’s also a frequently discussed downside. Primary constructor parameters cannot have readonly modifiers and, thus, are mutable throughout all instance members after initialization:\nclass Service(IDependency dependency)\r\n{\r\n    public void DoWork()\r\n    {\r\n        dependency.Use();\r\n    }\r\n    \r\n    public void SetupHack()\r\n    {\r\n        dependency = new AdhocDependencyImpl();\r\n        DoWork();\r\n    }\r\n}\r\n\r\ninterface IDependency;\r\nclass AdhocDependencyImpl : IDependency;\nCopy to clipboard\n\n            \nIn 2024.2, we are giving you more peace of mind by ensuring the immutability of captured primary constructor parameters through an inspection. Inspections about the mutations will occur not only at the parameter declarations but also on all mutations themselves. They also allow you to convert to an explicit field declaration through a quick-fix to make the mutations more obvious due to the lack of the readonly modifier:\nConverting to explicit field declaration\n\n\n\n\nFeel free to tweak this new inspection from the Alt-Enter menu. You can Disable once with comment to make an ad-hoc exception, Configure inspection severity to completely turn it off or even raise it to an error in more strict codebases:\nSuppressing and configuring an inspection\n\n\n\n\nSpeaking of more strict codebases – some of you might want to disallow primary constructor captures to keep everything plain and explicit. For those needs, we have added a new inspection Primary constructor parameter capturing is disallowed with an accompanying quick-fix for explicit fields:\nConverting from disallowed parameter capturing\n\n\n\n\nNote that this inspection is disabled by default. If you enable it in the settings dialog, make sure to choose the solution layer to let your team have the same view:\nPrimary constructor inspection configuration\n\n\n\n\nCollection Expressions\nSince their introduction in .NET 8, we have gathered more feedback and real-world problems to improve our tooling for collection expressions. In 2024.2, we now consider collection interface types like IEnumerable<T> or IList<T> as well for your conversions:\nConverting to collection expressions for interface types\n\n\n\n\nMindful readers might remember that we’ve intentionally avoided these conversions since they can break the callers. As a compromise, we are now allowing you to opt out of this behavior by disabling the Suggest when the target type is a collection interface type option:\nCollection expression inspection configuration\n\n\n\n\nUnfortunately, collection expressions are not universally applicable since they require a context where the target type is known. Therefore, you sometimes still need the older collection and array creation syntax that explicitly declares nominal types. In 2024.2, we’ve added two context actions, Convert to collection initializer (ReadOnlyList<T>) and Convert to array creation expression (T[]):\nConverting to collections and arrays\n\n\n\n\nThe 2024.2 release also allows you to convert when no target type is available. The context action then changes your declaration to an explicit target type:\nConverting to collection expression for variables\n\n\n\n\nSplit List Patterns\nList patterns are a powerful feature introduced in C# 11 to match collections against a desired shape and recursively match elements. One of the downsides is that you can only match against constant values. If you need to match against a runtime-dependent value, you’ll be forced to replace the list pattern with ordinary checks.\nIn 2024.2, we introduce a new Split list pattern context action to easily convert to ordinary checks, no matter how complex the list pattern is: \nSplitting list patterns\n\n\n\n\nConclusion\nGive it a go with the latest ReSharper 2024.2 and Rider 2024.2, and let us know if you have any questions or suggestions in the comments section below.",
        "dc:creator": "Matthias Koch",
        "content": "Our release for ReSharper and Rider 2024.2 is just around the corner, and we have lots of exciting features shipping for the new C# 13 and current C# and VB.NET! Since there are so many, we will split them into multiple blog posts. So make sure to check those posts out as well! In this [&#8230;]",
        "contentSnippet": "Our release for ReSharper and Rider 2024.2 is just around the corner, and we have lots of exciting features shipping for the new C# 13 and current C# and VB.NET! Since there are so many, we will split them into multiple blog posts. So make sure to check those posts out as well! In this […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=501237",
        "categories": [
          "net-tools",
          "how-tos",
          "net",
          "c",
          "inspections",
          "vb-net"
        ],
        "isoDate": "2024-08-09T14:28:10.000Z"
      },
      {
        "creator": "Anastasia Shabalina",
        "title": "The New Terminal (Beta): Updates for JetBrains IDEs v2024.2",
        "link": "https://blog.jetbrains.com/idea/2024/08/the-new-terminal-beta-updates-for-jetbrains-ides-v2024-2/",
        "pubDate": "Fri, 09 Aug 2024 12:10:46 +0000",
        "content:encodedSnippet": "The 2024.1 versions of JetBrains IDEs introduced the new terminal as an opt-in feature, which can be enabled via Settings/Preferences | Tools | Terminal | Enable New Terminal. While we are actively gathering feedback and working on improvements, the new terminal remains in its Beta version. In the previous post, we covered the significant changes made to the terminal for the initial launch. This post will focus on the updates and enhancements introduced in the 2024.2 versions of JetBrains IDEs.\nAI-powered command generation\nThe new terminal now features AI-powered command generation capabilities. Users of the JetBrains AI Assistant plugin can generate commands with AI directly within the terminal. To use this feature, switch to AI mode in the terminal by pressing ⌘\\ (macOS) or Ctrl+\\ (Windows and Linux), describe your command in natural language, and then submit the request. AI Assistant will create the corresponding command, which will appear in the prompt for immediate execution or further editing. Considering previous commands and their outputs, the OS, and the shell, the AI command generation in the new terminal is context-aware, improving the accuracy of the results.\n\n\n\n\nMoreover, the history in AI mode now displays a list of previously executed AI requests. This can be particularly helpful when you want to edit and re-run previous requests to generate new commands.\n\n\n\n\nLooking ahead, we plan to expand the terminal’s AI feature set. Upcoming enhancements will include the ability to fix commands that failed and explain outputs.\nPrompt customization\nThe new terminal now includes enhanced prompt customization options. You can choose between single-line and double-line prompt settings via Settings/Preferences | Tools | Terminal | Enable New Terminal | Prompt style. This allows for more efficient use of space or improved readability, depending on your personal preference. \nAdditionally, we have addressed a common user request by adding the ability to enable the prompt settings configured in a shell. You can now use the new terminal with the same familiar prompt as your system terminal. Please report any prompt customization problems on this YouTrack issue.\n\n\n\n\nEnhanced command completion\nWe are continuously working on improving command completion. In the 2024.2 release, you will notice enhancements in the following areas:\nGit completion: Improved completion for Git aliases and branches.\nnpm packages: Enhanced completion for npm packages (1 and 2).\nPopular PHP commands: Better support for popular commands in the PHP stack.\nRuby CLIs: Improved completion for Ruby-related command-line interfaces.\nIf you encounter any issues, please report them through the tickets linked above or create a new one on YouTrack. As we continue to work on improving the new terminal, we’d appreciate your feedback in the comments section below. \nThank you!",
        "dc:creator": "Anastasia Shabalina",
        "content": "The 2024.1 versions of JetBrains IDEs introduced the new terminal as an opt-in feature, which can be enabled via Settings/Preferences &#124; Tools &#124; Terminal &#124; Enable New Terminal. While we are actively gathering feedback and working on improvements, the new terminal remains in its Beta version. In the previous post, we covered the significant changes [&#8230;]",
        "contentSnippet": "The 2024.1 versions of JetBrains IDEs introduced the new terminal as an opt-in feature, which can be enabled via Settings/Preferences | Tools | Terminal | Enable New Terminal. While we are actively gathering feedback and working on improvements, the new terminal remains in its Beta version. In the previous post, we covered the significant changes […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=500941",
        "isoDate": "2024-08-09T12:10:46.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "IntelliJ IDEA 2024.1.6 Is Out",
        "link": "https://blog.jetbrains.com/idea/2024/08/intellij-idea-2024-1-6/",
        "pubDate": "Fri, 09 Aug 2024 09:41:38 +0000",
        "content:encodedSnippet": "We’ve just released IntelliJ IDEA 2024.1.6. We encourage IntelliJ IDEA 2024.1.5 users to update to this version, as it brings an important hotfix.\nUpdate to IntelliJ IDEA 2024.1.6 directly from your IDE. You can then choose to keep using this version or update to IntelliJ IDEA 2024.2 to take advantage of the performance enhancements and new features. Check out this release post for more details.\nThis hotfix addresses the following issue:\nUpdating to the latest version via the IDE no longer results in the Plugin xxx was not installed: Failed to load the plugin descriptor error. [IJPL-159771]\n\n\n\n\nIf you encounter any bugs, please report them to our issue tracker.\nWe are grateful for your feedback and patience while we worked on this hotfix!\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "We’ve just released IntelliJ IDEA 2024.1.6. We encourage IntelliJ IDEA 2024.1.5 users to update to this version, as it brings an important hotfix. Update to IntelliJ IDEA 2024.1.6 directly from your IDE. You can then choose to keep using this version or update to IntelliJ IDEA 2024.2 to take advantage of the performance enhancements and [&#8230;]",
        "contentSnippet": "We’ve just released IntelliJ IDEA 2024.1.6. We encourage IntelliJ IDEA 2024.1.5 users to update to this version, as it brings an important hotfix. Update to IntelliJ IDEA 2024.1.6 directly from your IDE. You can then choose to keep using this version or update to IntelliJ IDEA 2024.2 to take advantage of the performance enhancements and […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=501083",
        "categories": [
          "releases",
          "2024-1",
          "bug-fix-update",
          "intellij-idea-2024-1",
          "intellij-idea-2024-1-6"
        ],
        "isoDate": "2024-08-09T09:41:38.000Z"
      },
      {
        "creator": "Regina Muradova",
        "title": "Euro 2024: Scoring Goals With Python",
        "link": "https://blog.jetbrains.com/education/2024/08/09/euro-2024-scoring-goals-with-python/",
        "pubDate": "Fri, 09 Aug 2024 09:14:36 +0000",
        "content:encodedSnippet": "Now that the 2024 UEFA European Football Championship is over, and we’ve all experienced the thrilling moments of cheering for our favorite teams, let’s have some fun with Python and dive into the tournament’s data. Why not combine our love for football with some cool data analysis?\nIn this blog post, we’ll demonstrate how Python works by exploring data from Euro 2024. Not only will we gain new insights about Europe’s premier sporting event, but we’ll also show you how to use Python for basic data analysis in real-world scenarios. And you may just find that data analysis can be as fun as the game itself.\nPreparing the data\nFirst, we need to set up our environment and load the data. The data for this analysis is sourced from the Euro 2024 dataset available from Kaggle. We took the 2024.csv file from the matches | euro tab.\nFor this analysis, we’ll be using PyCharm. Either PyСharm Community Edition (completely free) or PyСharm Professional (available with a 30-day free trial) will be fine. Once you’ve downloaded the IDE, open it up, start a new project, and put the CSV file into the project folder. Make sure the matplotlib and numpy libraries are installed in your IDE.\nWe’ll run the code in Jupyter Notebook (available only in PyCharm Professional), but you can also run the code directly in PyCharm without the notebook—it’s entirely up to you.\n▶︎ Basic setup and general functions necessary for the following analysis (click here to see the code👇🏻)\n\nimport csv\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib\nmatplotlib.use('TkAgg')\n\nCSV_PATH = '2024.csv'\n\ndef load_csv(csv_path):\n   \"\"\"Load a CSV file and return two lists: events and players\"\"\"\n   events = []\n   players = []\n\n   with open(csv_path, encoding='latin-1') as csv_f:\n       fixed_data = csv_f.read().replace(' nan', ' None')  # Preprocess data from csv-file\n       reader = csv.reader(fixed_data.splitlines())\n\n       headers = next(reader)  # Skip the header\n       for row in reader:\n           events += eval(row[-1])\n           players += eval(row[-4])  # Add teams from \"home\" games\n           players += eval(row[-5])  # Add teams from \"away\" games\n\n   # So far, the \"players\" list contains multiple copies of the same players from different games;\n   # Fix it by putting the players into a dictionary by ID, thus overwriting duplicates\n   players_dict = {i['id_player']: i for i in players}\n   players = players_dict.values()\n\n   # We're only interested in events related to a person (e.g. \"goal\", \"card\"). Remove the rest\n   events = [i for i in events if i['primary_id_person'] is not None]\n\n   return events, players\n\n\ndef find_player_by_id(players, player_id):\n   \"\"\"Return the player corresponding to the specified player ID\"\"\"\n   return [i for i in players if i['id_player'] == player_id][0]\n\n\ndef filter_events_by_type(all_events, event_type):\n   \"\"\"Return a list of events with only a given type (e.g. 'GOAL')\"\"\"\n   return [i for i in all_events if i['type'] == event_type]\n\n\n\n\nNow let’s run the function def load_csv(csv_path) to load data from the file:\nevents, players = load_csv(CSV_PATH)\nWe have loaded the data about events and players, and it’s now ready for analysis.\nMost valuable body part\nEver wondered whether players score more with their head, right foot, or left foot? To kick off our analysis, we broke down goals by body parts. We collected the data and visualized it in a pie chart to see which body parts are the true game-changers on the field.\nCounting goals by body part\ndef count_goals_by_body_part(goal_events):\n    \"\"\"Take goal events and count the number of goals per body part; return as a dict\"\"\"\n    result = {}\n    for event in goal_events:\n        body_part = event.get('body_part')\n        if body_part:\n            result[body_part] = result.get(body_part, 0) + 1\n    return result\nDisplaying the pie chart\ndef show_body_part_pie_chart(body_parts_count):\n    \"\"\"Plot and show a pie chart of goals by body part\"\"\"\n    colors = ['#AE1DF4', '#01E08F', '#7463FF', '#111111']\n    \n    plt.figure(figsize=(6, 6), dpi=130)\n    plt.pie(\n        body_parts_count.values(),\n        labels=body_parts_count.keys(),\n        autopct='%1.1f%%',\n        textprops={'color': '#333333'},\n        colors=colors[:len(body_parts_count)]  # Adjust colors list length\n    )\n    plt.title('Goals per body part')\n    plt.show()\nRunning the functions\ngoal_events = filter_events_by_type(events, 'GOAL')\nbody_parts_count = count_goals_by_body_part(goal_events)\nshow_body_part_pie_chart(body_parts_count)\n\n\n\n\nOur analysis showed some expected results, with right-footed goals being the most common. However, it also revealed that left-footed goals were more frequent than headers, showing that in football, each of these body parts can make a difference when it comes to scoring goals.\nWatch the demo to see how this code runs in the IDE. 👇🏻\n\n\n\n\nGoals and yellow cards by jersey numbers\nNext, we looked at goals scored by players based on their jersey numbers. Do players with certain numbers tend to score more goals? Let’s find out.\nPreparing the functions\ndef get_jerseys_numbers_by_event(events, players, event_type):\n    \"\"\"Return a simple list of jersey numbers corresponding to events of specified event_type\"\"\"\n \n    selected_events = filter_events_by_type(events, event_type)\n \n    # Helper function to find a player by ID and return his number\n    def jersey_num_by_id(player_id):\n        return find_player_by_id(players, player_id)['jersey_namber']\n \n    return [jersey_num_by_id(i['primary_id_person']) for i in selected_events]\n \n \ndef plot_jerseys_numbers_histogram(jerseys_list, data_label, data_color):\n    '''Plot the jersey histogram based on \"jerseys_list\" data'''\n    MAX_JERSEY_NUM = 26\n    _, bins, _ = plt.hist(\n        jerseys_list,\n        bins=np.arange(MAX_JERSEY_NUM + 2) - 0.5,\n        label=data_label,\n        edgecolor='black',\n        color=data_color,\n        alpha=0.5\n    )\n    plt.xticks(0.5 * (bins[1:-1] + bins[2:]))  # Make sure all numbers are labeld on x-axis\n    plt.legend()\nRunning the functions and displaying the histograms\ngoals_jerseys = get_jerseys_numbers_by_event(events, players, 'GOAL')\ncards_jerseys = get_jerseys_numbers_by_event(events, players, 'YELLOW_CARD')\n \nplt.subplot(2, 1, 1)  # Top plot\nplt.title('Events by jersey number')\nplot_jerseys_numbers_histogram(goals_jerseys, 'Goals', 'lightgreen')\n \nplt.subplot(2, 1, 2)  # Bottom plot\nplt.xlabel('Jersey number')\nplot_jerseys_numbers_histogram(cards_jerseys, 'Yellow cards', 'yellow')\n \nplt.show()\n\n\n\n\nWatch the demo to see how this code runs in the IDE. 👇🏻\n\n\n\n\nOur analysis revealed that players wearing the number 10 jersey scored the most goals. Legends like Pelé, Maradona, and Messi all wore this iconic number, demonstrating that the greatest forwards truly prefer number 10.\nWe also looked at which jersey numbers get the most yellow cards. Defenders wearing numbers like 4 and 6 rack them up the most. Are defensive responsibilities more likely to land you on the wrong side of the ref’s whistle? Or do players with a penchant for flouting the rules simply gravitate toward defense? It’s hard to say from these numbers alone.\nNumbers like 1, 12, and 24 show up less frequently for both goals and yellow cards. This could be due to these numbers often being worn by goalkeepers.\nUsing Python, we visualized these trends with histograms. Some numbers, like 10, stand out with scoring goals, while others, like 4 and 6, handle the tougher tasks on the field.\nGoals by zodiac signs\nAnd finally, we thought it would be fun to see if Python could tell us anything about football players based on their zodiac signs. Could the stars really predict on-field actions? In this playful experiment, we mixed astrology with football to find out.\nWe started by calculating the zodiac sign for each player using their birth date. Then, we looked at how often players with different signs scored goals or received yellow cards. After adjusting for the overall distribution of zodiac signs among players in each game, we visualized the data with some cool histograms. We won’t dive into the code details here—instead, we invite you to simply enjoy the chart. \n\n\n\n\nTake a look at your sign on the chart – do the stats align with its profile? Taurus players, who are known for being determined and steady, seem to score the most goals. On the other hand, Aries, with their fiery and bold nature, are leading in yellow cards.\nAs you can see, there’s no limit to the types of interesting insights you can uncover with Python and data science. If football isn’t your thing, what other data would you like to analyze with Python? \nIf you also want to try Python, you can dive into our new Football Analysis project, where you’ll get hands-on experience analyzing football data. Or if you are eager to learn data analysis and kickstart your career in this field, explore our Data Analyst course on Hyperskill. You’ll learn how to handle, visualize, and interpret data effectively. For a deeper understanding of data analysis, consider adding Introduction to Data Science to your portfolio.\nHappy learning!\nYour JetBrains Academy team\nNote: The data used in this analysis is for educational purposes only and is not intended to bring JetBrains commercial advantage or monetary compensation. For further use of any data mentioned in this post, please always ensure you comply with the relevant license terms.",
        "dc:creator": "Regina Muradova",
        "content": "Now that the 2024 UEFA European Football Championship is over, and we&#8217;ve all experienced the thrilling moments of cheering for our favorite teams, let&#8217;s have some fun with Python and dive into the tournament&#8217;s data. Why not combine our love for football with some cool data analysis? In this blog post, we&#8217;ll demonstrate how Python [&#8230;]",
        "contentSnippet": "Now that the 2024 UEFA European Football Championship is over, and we’ve all experienced the thrilling moments of cheering for our favorite teams, let’s have some fun with Python and dive into the tournament’s data. Why not combine our love for football with some cool data analysis? In this blog post, we’ll demonstrate how Python […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=500924",
        "categories": [
          "jetbrains-academy",
          "learning-courses",
          "pycharm",
          "python",
          "data-analysis",
          "footballdata",
          "jetbrainsacademy-2",
          "online-learning",
          "pythonprogramming"
        ],
        "isoDate": "2024-08-09T09:14:36.000Z"
      },
      {
        "creator": "Vaclav Pech",
        "title": "MPS 2024.1 Is Out!",
        "link": "https://blog.jetbrains.com/mps/2024/08/mps-2024-1-is-out/",
        "pubDate": "Thu, 08 Aug 2024 15:19:12 +0000",
        "content:encodedSnippet": "In this release, you’ll find a new asynchronous implementation of the Logical View tool window, substantial improvements to Kotlin support for different platforms, and a noticeably faster test run time. You can also look forward to conditional forks in generator plans, deprecation of project paths in TestInfo, improvements to the new UI, and numerous platform updates.\nDOWNLOAD MPS 2024.1\nBefore we go over the specific features, we have two quick announcements for you:\nThe time has come for a new UI in MPS\nMPS is moving towards a new UI, which brings a more modern look and increases user productivity. The new UI has been fully enabled in MPS 2023.3. In 2024.1 it is set as the default for new MPS users, and in 2024.2 we plan to abandon the old UI altogether. We may keep it around as a separate plugin, but not for long.\nSettings | Appearance & Behavior | New UI.\n-Dide.experimental.ui – This option switches the new UI on or off for new users of your IDE. It is set to false for standalone IDE build scripts in 2023.3 and 2024.1.\n-Dexperimental.ui.used.once – When this is present, it will disable an automatic in-tool promotion that advertises the new UI to the users. This option is enabled by default for standalone IDE build scripts in 2023.3 and 2024.1.\nThe MPS IDEA plugin has been discontinued\nWith the user base for the IDEA plugin decreasing, we decided to discontinue the plugin and to invest our efforts into features that bring more value to customers and help make their work more enjoyable. The plugin is no longer available for download.\nThe new features\nHaving covered these two important announcements, now it’s time to check out the most exciting new features we’ve prepared for you in this release.\nEnhanced platform support for Kotlin\nThe Kotlin support in MPS was initially designed to support only common code. However, the only possible use case in MPS was compilation to the JVM, and the distinction between common code and JVM code was unclear.\nIn this release, we’re introducing platform source set configuration for Kotlin nodes. This allows you to identify which target platforms a piece of code supports and hide declarations from incompatible code.\n\nImproved Kotlin readability without the Coderules type system\nKotlin code in MPS used to raise a lot of typesystem and scope errors when the Kotlin Typesystem plugin, based on CodeRules, was not available. In order to improve readability and testability, these checks and errors are now muted when the Coderules-based typesystem plugin is not available.\n\nReimplementation of the Logical View pane\nThe Logical View pane is now based on an asynchronous architecture, which helps keep the UI responsive and contributes to the overall performance of the IDE. The new implementation also allows for easier extensions and modifications. For more details, refer to our article in the knowledge base entitled ProjectPane implementation on top of ProjectViewTree.\nThis new implementation has resulted in a few notable changes:\nShow Descriptor Models option affects all descriptor models.\nLogical View pane have been reorganized slightly.\n\nPlaceholder cells\nWe’ve introduced a new style into BaseLanguage that allows constant cells to serve as placeholders if there’s a missing value (a child node or a reference). For example, when no constructor is present in a class, a <no default constructor> placeholder cell can be displayed instead. The style causes constant cells to exhibit the behavior you would expect from such placeholder cells. The cursor can only be placed on the first position, and it is not possible to edit the value. Only modifications provided by attached transformation menus are permitted.\n\nEnable conditional fork in generation plans\nA small experimental new feature enables you to add a fork for a generation plan without actually modifying the original plan that is being forked. A generation plan can be marked as a fork of another generation plan. The marked plan will be treated as if it were referred to explicitly with the standard fork statement inserted at the very beginning of the forked generation plan.\nAdditionally, when defining a fork, you can use a string modifier that will serve as a trigger. The fork will only happen if the model being generated is owned by a module that has a generation target facet with a facet ID matching the string trigger.\n\nJUnit5 xml report in MPS\nJUnit tests in MPS can now generate test reports not only in the vintage and jupiter formats, but also in the Open Test report format. A new option is available in the build language’s test options to control whether the Open Test report is included in the generated reports. If the option is set to true, report files named junit-platform-events*-$BUILD_NAME$.xml are created in the project directory.\n\nIf the option is set to false, the legacy reports for vintage and jupiter engines are created.\nThe project paths in TestInfo are no longer needed\nTestInfo declarations are no longer required for tests that need an MPS project to be open. This applies to all approaches to executing the JUnit tests:\n<launchtests> task, the project path can be specified as an additional project path option of the task. If left unspecified, ${basedir} is used, which corresponds to the home directory of the current project.\n-Dmps.test.project.path system property.\nExisting TestInfo declarations are still supported and can be kept.\nMore new features…\nCheck out the What’s New page to learn all about the new features we’ve added for you.\nYou can find a full list of fixed issues here.\nYour JetBrains MPS team",
        "dc:creator": "Vaclav Pech",
        "content": "In this release, you’ll find a new asynchronous implementation of the Logical View tool window, substantial improvements to Kotlin support for different platforms, and a noticeably faster test run time. You can also look forward to conditional forks in generator plans, deprecation of project paths in TestInfo, improvements to the new UI, and numerous platform [&#8230;]",
        "contentSnippet": "In this release, you’ll find a new asynchronous implementation of the Logical View tool window, substantial improvements to Kotlin support for different platforms, and a noticeably faster test run time. You can also look forward to conditional forks in generator plans, deprecation of project paths in TestInfo, improvements to the new UI, and numerous platform […]",
        "guid": "https://blog.jetbrains.com/?post_type=mps&p=496473",
        "categories": [
          "releases",
          "release"
        ],
        "isoDate": "2024-08-08T15:19:12.000Z"
      },
      {
        "creator": "Matthias Koch",
        "title": "Equality Analysis, Ref Structs, Culture Previews, Using Directives – C# Language Support in 2024.2",
        "link": "https://blog.jetbrains.com/dotnet/2024/08/08/equality-analysis-ref-structs-culture-previews-using-directives-csharp-language-support-in-2024-2/",
        "pubDate": "Thu, 08 Aug 2024 14:35:17 +0000",
        "content:encodedSnippet": "Our release for ReSharper and Rider 2024.2 is just around the corner, and we have lots of exciting features shipping for the new C# 13 and current C# and VB.NET! Since there are so many, we will split them into multiple blog posts. So make sure to check those posts out as well!\nIn this series, we will cover features around:\nEscape Character, Extract Common Code, Params Modifier, Out Vars\nEquality Analysis, Ref Structs, Culture Previews, Using Directives\nCast Expressions, Primary Constructors, Collection Expressions, List Patterns\nMake sure to download the latest ReSharper or Rider EAP builds to follow along:\nDownload Rider EAP\nEnhanced Equality Analysis\nStruct types have been available since the very first .NET Framework. If you’re taking advantage of them, you may have heard that it’s good practice to override Equals and GetHashCode for performance reasons, because the default runtime implementation suffers from  boxing and reflection overhead. This is particularly relevant in hot paths that call equality members. Furthermore, the default implementation of GetHashCode works in a way that it takes the hash of the first non-null reference type field, which may lead to a bad distribution.\nIn 2024.2, we are introducing a set of new inspections to identify such performance issues where equality is checked under the hood. You can fix these issues by generating equality members, or by turning it into a record struct and letting the compiler generate implementations for you:\nFixing inefficient runtime equality check\n\n\n\n\nWe have also added a new attribute [DefaultEqualityUsage] to our JetBrains Annotations NuGet package, which allows you to mark types or parameters as being used for equality checks:\npublic class Equality\r\n{\r\n    object N() => M(new MyPoint()); // warning\r\n\r\n    object M<T>([DefaultEqualityUsage] T obj) => null;\r\n\r\n    // no Equals/GetHashCode overrides\r\n    public struct MyPoint;\r\n}\nCopy to clipboard\n\n            \nAs part of this feature, we also annotated the BCL with the new [DefaultEqualityUsage] attribute and discovered surprising details about some APIs. For example, you might assume that in a ConcurrentDictionary the equality is only checked for the TKey type. That is true until you use AddOrUpdate, which can also check TValue for being equal on update:\nvar idToData = new ConcurrentDictionary<int, Data>();\r\n\r\n// ConcurrentDictionary<TKey, TValue>.AddOrUpdate implementation\r\n// actually checks TValue for being equal on update:\r\nidToData.AddOrUpdate(\r\n    key: id,\r\n    // compute what to add\r\n    addValueFactory: static id => default,\r\n    // do the update\r\n    updateValueFactory: static (id, data) => data);\r\n\r\n// no Equals/GetHashCode overrides\r\npublic struct Data\r\n{\r\n    // members\r\n}\nCopy to clipboard\n\n            \nLast but not least, our analysis also catches suspicious non-structurally comparable types in record types. In the following example, two Payload objects would only be considered equal if they share the same byte[] array reference – this is very likely not the intended behavior. You would rather call SequenceEqual in your custom equality members:\nType with suspicious equality\n\n\n\n\nNote that this inspection will only be checked if the record type is being used in equality-relevant APIs in your solution.\nRef Struct Interfaces\nThe introduction of ref struct types in C# 7.2 (Span<T> and ReadOnlySpan<T>) has enabled many new high-performance scenarios. Those benefits came with limitations in a few aspects though. They could not be boxed, could not appear as fields in reference types, could not be stored as array elements, and did not allow interface inheritance. Some limitations are by design, but some could be relaxed during language evolution. One of those relaxations is interface inheritance.\nIn the following example, we’ve got a generic algorithm PrintArrayLike to print all items of an object of the type IArrayLike. With C# 13, we  can make our ref struct ArrayLikeSpan implement that interface. However, invoking the method on that object is still not possible yet! Can you guess why?\nvar obj = new ArrayLikeSpan([1, 2, 3]);\r\nPrintArrayLike(obj); // error\r\n\r\nvoid PrintArrayLike<TArrayLike>(TArrayLike arrayLike)\r\n    where TArrayLike : IArrayLike\r\n{\r\n    for (var index = 0; index < arrayLike.Length; index++)\r\n        Console.WriteLine(arrayLike[index]);\r\n}\r\n\r\npublic readonly ref struct ArrayLikeSpan(Span<int> span)\r\n    : IArrayLike // now allowed in C# 13!\r\n{\r\n    private readonly Span<int> span = span; // can store `ref struct` inside `ref struct`\r\n\r\n    public int Length => span.Length;\r\n    public int this[int index] => span[index];\r\n}\r\n\r\npublic interface IArrayLike\r\n{\r\n    int Length { get; }\r\n    int this[int index] { get; }\r\n}\nCopy to clipboard\n\n            \nIn the method PrintArrayLike, you could theoretically add the following line, which would essentially break the “no boxing” rule:\n// cannot box ref struct!\r\nvar reference = (object)arrayLike;\nCopy to clipboard\n\n            \nTherefore, the compiler requires you to make an explicit decision that the generic method can handle ref struct types and disallows boxing. This is achieved with the allows ref struct anti-constraint, which you can easily add through a quick-fix from the error:\nAdding allows ref struct through a quick-fix\n\n\n\n\nThe allows ref struct constraint will also show up in code completion with the shorthand aref:\nCode completion for allows ref struct\n\n\n\n\nCulture Previews\nSince ReSharper 8, we’ve been helping you choose the correct formatting specifiers in code completion. However, for types like DateTime or DateOnly, we could only guess which culture will eventually be set when your code executes and how ToString renders, so we chose CultureInfo.Invariant as the default.\nWith 2024.2, we are adding a new tooltip that shows how a value would render in different popular cultures, including the current OS culture:\nCulture preview tooltip\n\n\n\n\nSorting Using Directives\nAre you in the team of developers that just feels good about their using directives at the top of the file to be minimal and in order? In ReSharper and Rider, we are making sure that all file modifications make use of the same internal API which ensures exactly that. You may also know, that our code cleanup profiles have an option to optimize using directives on a shortcut or save operation. Despite all this effort, files can still end up with unordered and redundant lists of imports, mainly explained by manual edits like merge operations.\nIn 2024.2, we are making it complete by adding a Sort ‘using’ directives context action that can be triggered independently from all other cleanup steps:\nSorting using directives\n\n\n\n\nConclusion\nGive it a go with the latest ReSharper 2024.2 and Rider 2024.2, and let us know if you have any questions or suggestions in the comments section below.",
        "dc:creator": "Matthias Koch",
        "content": "Our release for ReSharper and Rider 2024.2 is just around the corner, and we have lots of exciting features shipping for the new C# 13 and current C# and VB.NET! Since there are so many, we will split them into multiple blog posts. So make sure to check those posts out as well! In this [&#8230;]",
        "contentSnippet": "Our release for ReSharper and Rider 2024.2 is just around the corner, and we have lots of exciting features shipping for the new C# 13 and current C# and VB.NET! Since there are so many, we will split them into multiple blog posts. So make sure to check those posts out as well! In this […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=500693",
        "categories": [
          "net-tools",
          "how-tos",
          "net",
          "c",
          "inspections",
          "vb-net"
        ],
        "isoDate": "2024-08-08T14:35:17.000Z"
      },
      {
        "creator": "Vitaly Bragilevsky",
        "title": "Fleet Plugins Launched – Themes First",
        "link": "https://blog.jetbrains.com/fleet/2024/08/fleet-plugins-themes-first/",
        "pubDate": "Thu, 08 Aug 2024 12:58:35 +0000",
        "content:encodedSnippet": "Fleet is engineered for ultimate extensibility, offering a dynamic and customizable experience. Virtually every feature of Fleet is already powered by plugins pre-packaged with the Fleet distribution. Now, we are happy to announce the rollout of the Fleet Plugins SDK to the broader developer community. As an exciting first step, we are enabling the creation and sharing of custom color themes for Fleet. Let’s start crafting a unique Fleet experience!\nHow to publish a custom color theme in three steps\nIt is now possible to publish your own custom color themes. Themes for Fleet are distributed via JetBrains Marketplace as Fleet plugins, so a theme must be packaged accordingly. The process of creating and distributing color themes consists of the following three steps:\nDesigning a custom color theme (as a JSON file).\nPackaging the theme as a Fleet plugin.\nPublishing the plugin on JetBrains Marketplace.\nLet’s look at these steps a bit more closely.\nStep 1: designing a custom color theme\nThe easiest way to start designing a custom color theme is by using the Edit Color Theme… action (it can be invoked from the Actions popup launched via Cmd/Ctrl-Shift-K). This action creates a JSON file with a copy of the current theme and makes this copy the current one. Any changes to this file are applied in the UI automatically on save. \nTo demonstrate, let’s have some fun with tab header backgrounds. My favorite Fleet Light theme has the following color definitions:\n\"tab.background.default\": \"Gray 110\",\n\"tab.background.hovered\": \"Gray 100\",\n\"tab.background.selected\": \"White\",\nIt may not be the most exciting tab background, though. The following seems a bit more visually appealing to me:\n\n\n\n\nThe colors used here are defined in the “palette” section of the theme’s JSON file (closer to the end of this long file):\n\t\"Red 70\": \"#f3b4bf\",\n\t\"Green 70\": \"#91d2b8\",\n\t\"Blue 70\": \"#a2c8f7\", \nLet’s also give this theme a new name by editing the theme.name key in the beginning of the file and renaming the file itself to light-improved.json:\n{\n  \"meta\": {\n\t\"theme.name\": \"Fleet Light - Improved\",\nYou can find more details regarding editing theme JSON files in the documentation.\nNow we’re almost ready to share the theme with the rest of the world and start racking up download numbers. But before that, we need to package the theme as a plugin.\nStep 2: packaging your theme as a Fleet plugin\nDeveloping Fleet plugins requires a working installation of JDK 17, which can be obtained here (JDKs from other vendors are also supported). Then, we should create a new project from the dedicated theme plugin template on GitHub. There are several things which must be adjusted in the project before the theme plugin is ready. \nFirst, we need to replace the sample theme JSON file in my-theme-plugin/frontendImpl/src/jvmMain/resources/ with the file we prepared in the previous step. \nSecond, we need to register the theme in Fleet. This is where we have to start writing some real code, as opposed to just editing JSONs. Our code will be executed when the plugin is loaded in the running Fleet instance. To do this, we edit the my-theme-plugin/frontendImpl/src/jvmMain/kotlin/fleet/sample/frontendImpl/MyThemePlugin.kt file:\npackage fleet.sample.frontendImpl\n\nimport fleet.dock.api.ThemeId\nimport fleet.frontend.theme.registerTheme\nimport fleet.kernel.plugins.ContributionScope\nimport fleet.kernel.plugins.Plugin\nimport fleet.kernel.plugins.PluginScope\n\nclass MyThemePlugin : Plugin<Unit> {\n\tcompanion object : Plugin.Key<Unit>\n\n\toverride val key: Plugin.Key<Unit> = MyThemePlugin\n\n\toverride fun ContributionScope.load(pluginScope: PluginScope) {\n\t\tregisterTheme(ThemeId(id = \"light-improved\"))\n\t}\n}\nThe only line that needs to be edited is the call to the registerTheme function. The theme id must be the same as the name of the theme JSON file (without an extension). Note that theme registration doesn’t enable the theme automatically, but adds the theme to the list of available themes.\nThird, we need to do some bookkeeping for the plugin configuration. The plugin should have a unique id, a readable name, and a description. The name and the description are visible both on Marketplace and in Fleet’s Plugins tab (use the Plugins… action to open it). These parameters are set in the my-theme-plugin/build.gradle.kts file, for example:\nfleetPlugin {\n\t// STEP 1: chose an ID for your plugin, it must be unique\n\tid = \"pro.bravit.great.theme\"\n\n\t// STEP 2: set up the sensible metadata for your plugin\n \tmetadata {\n\t\treadableName = \"Fleet Light - Improved\"\n\t\tdescription = \"Great light theme for Fleet\"\n\t}\n\n\tfleetRuntime {\n\t\tversion = libs.versions.fleet.runtime\n\t}\n}\nPlugins are compiled against a fixed Fleet version. We can set the Fleet version in the  gradle/libs.versions.toml file as follows: \nfleet-runtime = \"1.38.89\"\nThis line also means that the plugin is supposed to work with Fleet versions from 1.38.89 onward (until it breaks – remember, that Fleet is still in Preview and we don’t provide any API stability guarantees).\nOnce we are done with editing the files, we can launch Fleet with the plugin in development by opening the Run dialog and choosing the Run Fleet with local plugin run configuration. The Fleet instance will be launched after a bit of compilation and will have our theme available in the Color Theme… dialog, so we can select it and make sure that it works as expected. We can also check out the Plugins tab to make sure that the plugin has been loaded:\n\n\n\n\nThere’s still one last problem we need to address – our plugin is not yet available for other users to install. Let’s fix that!\nStep 3: publishing your plugin on Marketplace\nFleet uses JetBrains Marketplace for distributing its plugins. To be able to upload plugins, plugin developers need to meet the following requirements: \nThey should have a JetBrains account (can be created at JetBrains Account Center).\nThey should register as vendors on JetBrains Marketplace (can be done at this page).\nThey should get a personal token (can be generated here).\nThe personal token from Marketplace should be a value of the org.jetbrains.fleet-plugin.marketplaceUploadToken Gradle property. This property can be set in multiple ways. The easiest way is to add it to the gradle.properties file in the Gradle User Home Directory (defaulted to $HOME/.gradle/ on macOS and Linux, or C:\\Users\\<USERNAME>\\.gradle\\ on Windows):\norg.jetbrains.fleet-plugin.marketplaceUploadToken=perm:...\nWhen publishing a plugin for the first time, we need to prepare a zip-file distribution by running the following command in the terminal:\n./gradlew distZip\nThis command creates the my-theme-plugin/build/pluginDistribution/my-theme-plugin-0.1.0.zip file. Then we go to the Upload plugin page, select Plugin For Fleet, fill all the other required fields, and press the Upload Plugin button. \nThe freshly uploaded plugin requires approval from the Marketplace team. Once the plugin is approved, anyone can install it from the Plugins tab in Fleet. Hooray!\n\n\n\n\nFor the subsequent uploads of the newer versions of a plugin, we can use the uploadPlugin Gradle task:\n./gradlew uploadPlugin\nNow that we’ve published our first plugin, let’s get a bird’s-eye view of the Fleet Plugins SDK and Fleet plugins in general.\nWhat is the Fleet Plugins SDK\nAs pieces of software, Fleet plugins require specialized tooling to be developed. We use Gradle as the foundation for that tooling. From a technical perspective, the main component of the Fleet Plugins SDK is the Fleet plugin for Gradle. This plugin manages the entire process, including preparing the plugin source code for building, downloading the necessary dependencies, building the plugin project, assembling the plugin artifact, and uploading it to JetBrains Marketplace.\nThe Fleet Plugins SDK also includes a collection of APIs and their implementations, which provide access to the underlying Fleet functionalities. We aim to design their APIs to be robust and versatile, enabling developers to seamlessly integrate and extend various aspects of Fleet.\nWhat is a Fleet plugin\nFleet plugins are developed as Kotln Multiplatform Gradle-based projects. Only one Kotlin Multiplatform target is supported at this time: Kotlin/JVM. \nPlugin projects consist of layers that reflect Fleet’s architecture and replicate Gradle source sets. The simplest plugin might have only one layer that provides an implementation of a contributed frontend-only functionality. More sophisticated plugins might also implement some functionality for Fleet workspaces, provide common code for both frontends and workspaces, and also define additional APIs other plugins can depend on.\nFor example, here’s the structure of a sample theme plugin project, as described in settings.gradle.kts:\nrootProject.name = \"my-theme-plugin-project\"\ninclude(\":my-theme-plugin\")\ninclude(\":my-theme-plugin:frontendImpl\")\nThere are also several build.gradle.kts files in the project, describing the whole project, a contributed plugin, and each layer respectively:\nbuild.gradle.kts\nmy-theme-plugin/build.gradle.kts\nmy-theme-plugin/frontendImpl/build.gradle.kts\nAs yet another level of modularization, Fleet leverages the Java Platform Modules system. Java modules are used to describe module dependencies and exported packages and to represent a plugin as a service provider (loadable via the Java ServiceLoader API). The my-theme-plugin/frontendImpl/src/jvmMain/java/module-info.java file describes the theme plugin’s module:\nmodule fleet.sample.frontendImpl {\n\trequires fleet.frontend;\n\trequires fleet.kernel;\n\trequires fleet.util.logging.api;\n\trequires fleet.rhizomedb;\n\trequires fleet.frontend.ui;\n\n\texports fleet.sample.frontendImpl;\n\tprovides fleet.kernel.plugins.Plugin \n\t\twith fleet.sample.frontendImpl.MyThemePlugin;\n}\nIn Kotlin terms, a Fleet plugin is a class that implements the  fleet.kernel.plugins.Plugin<API> interface. The ContributionScope.load extension method defined as part of this class serves as an entry point for all the functionality provided by a plugin. In the sample theme plugin, we’ve registered a theme in this method. To do something else, we need to know how to approach other pieces of Fleet functionality from a plugin.\nFleet Plugins roadmap\nIn the coming months, we aim to gradually publish various parts of the Fleet Plugins API to enable the extension and customization of the following Fleet functionalities:\nKeymaps: This will allow users to customize keyboard shortcuts, creating a more personalized and efficient workflow. Users can map commands to specific key combinations to suit their individual preferences and streamline their development process.\nSyntax highlighting: By enabling customization of syntax highlighting, developers can tailor the way code is displayed based on their personal preferences or project-specific requirements. This can enhance readability and help in quickly identifying different parts of the code, such as keywords, variables, and function names.\nSupporting language servers via LSPs (language server protocols): This feature will support the integration of existing language servers, enabling advanced code editing features like auto-completion, error checking, and refactoring across various programming languages. It will facilitate a more robust and versatile development environment within Fleet.\nRunning external tools: Users will have the ability to integrate and execute external tools directly from within the Fleet environment. This can include anything from build tools and linters to custom scripts and automation processes, enhancing the flexibility and power of the development workflow.\nExtending the UI: This functionality will provide options for users to modify and extend the user interface of Fleet. Whether it’s adding new panels, customizing existing ones, or creating entirely new UI components, users will be able to tailor the interface to better fit their needs and preferences.\nAnd many more: In addition to the aforementioned functionalities, a wide range of other extension and customization options will be made available. This may include features like version control integration, debugging tools, project management enhancements, and more, all designed to make Fleet a more powerful and adaptable development environment.\nStay tuned!",
        "dc:creator": "Vitaly Bragilevsky",
        "content": "Fleet is engineered for ultimate extensibility, offering a dynamic and customizable experience. Virtually every feature of Fleet is already powered by plugins pre-packaged with the Fleet distribution. Now, we are happy to announce the rollout of the Fleet Plugins SDK to the broader developer community. As an exciting first step, we are enabling the creation [&#8230;]",
        "contentSnippet": "Fleet is engineered for ultimate extensibility, offering a dynamic and customizable experience. Virtually every feature of Fleet is already powered by plugins pre-packaged with the Fleet distribution. Now, we are happy to announce the rollout of the Fleet Plugins SDK to the broader developer community. As an exciting first step, we are enabling the creation […]",
        "guid": "https://blog.jetbrains.com/?post_type=fleet&p=500358",
        "categories": [
          "plugin-development",
          "news",
          "plugins",
          "color-themes",
          "fleet",
          "sdk"
        ],
        "isoDate": "2024-08-08T12:58:35.000Z"
      },
      {
        "creator": "Alena Gupaisova",
        "title": "JetBrains is a Proud Sponsor of the International Olympiad in Informatics",
        "link": "https://blog.jetbrains.com/blog/2024/08/08/jetbrains-is-a-proud-sponsor-of-the-international-olympiad-in-informatics/",
        "pubDate": "Thu, 08 Aug 2024 08:53:56 +0000",
        "content:encodedSnippet": "At JetBrains, we’re committed to fostering education and nurturing young programming talents. Our support extends to various educational initiatives, such as scholarships for bachelor’s degrees in Germany and Cyprus, the Algorithm and Code Training School in Romania, and the International Collegiate Programming Contest (ICPC). \nThis year, we’re excited to announce our sponsorship of the International Olympiad in Informatics (IOI), which will take place early September in Alexandria, Egypt. As part of our sponsorship, we’re providing IOI participants with free access to our software tools, including CLion for C and C++ development.\n\n\n\n\nWhat is IOI?\n\n“IOI is an algorithmic programming competition that allows the best and brightest young students from across the globe to compete against one another. Besides the competition, we also aim to provide an environment where those leaders of tomorrow can learn from each other, make new friends, and get introduced to different cultures. The support from JetBrains is very important and helps with both the competitive side as well as the social program.”, states Eljakim Schrijvers, member of the International Committee of the International Olympiad in Informatics (IOI).\nThe IOI is among the most prestigious international science Olympiads for high school students. This annual event brings together exceptional talents from over 100 countries to compete in an algorithmic challenge that tests their informatics skills, including problem analysis, design of algorithms and data structures, programming, and testing. Each participating country selects a team of up to four contestants to represent their nation. Competitors work individually to solve three algorithmic problems within five hours, striving to maximize their scores.\n\n“For over two decades, we’ve focused on nurturing talented individuals, beginning with local schools and universities. Last year, we started supporting top talents on the international stage,” says Andrey Ivanov, SVP of Investments, Research, and Education at JetBrains. “At IOI contestants can use our cutting-edge product, CLion, to solve their tasks. We hope this helps them get comfortable with the tools professional programmers use and sets them up for future career success.”\n\n\n\n\nCome join us in Alexandria on September 2 – 7 at the JetBrains Booth!\nAnd good luck to IOI 2024 participants!",
        "dc:creator": "Alena Gupaisova",
        "content": "At JetBrains, we&#8217;re committed to fostering education and nurturing young programming talents. Our support extends to various educational initiatives, such as scholarships for bachelor’s degrees in Germany and Cyprus, the Algorithm and Code Training School in Romania, and the International Collegiate Programming Contest (ICPC).&#160; This year, we&#8217;re excited to announce our sponsorship of the International [&#8230;]",
        "contentSnippet": "At JetBrains, we’re committed to fostering education and nurturing young programming talents. Our support extends to various educational initiatives, such as scholarships for bachelor’s degrees in Germany and Cyprus, the Algorithm and Code Training School in Romania, and the International Collegiate Programming Contest (ICPC).  This year, we’re excited to announce our sponsorship of the International […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=500179",
        "categories": [
          "news"
        ],
        "isoDate": "2024-08-08T08:53:56.000Z"
      },
      {
        "creator": "Daria Voronina",
        "title": "Kotlin Roundup: Ktor in Focus",
        "link": "https://blog.jetbrains.com/kotlin/2024/08/kotlin-roundup-ktor-in-focus/",
        "pubDate": "Thu, 08 Aug 2024 08:49:44 +0000",
        "content:encodedSnippet": "Welcome to this special edition of Kotlin Roundup, where we shine the spotlight on Ktor, our framework for building asynchronous servers and clients in connected systems! \nThis issue is packed with the latest updates, insightful news, and exciting developments in the Ktor ecosystem, appealing to everyone from seasoned Ktor enthusiasts to those just getting started. Plus, we have a few other exciting stories about Kotlin you won’t want to miss!\nKtor Updates\nKtor 3.0.0 Beta-2 is here!\nLast month, we announced Ktor 3.0.0 Beta-2. The key features of this release include:\n– Kotlin 2.0 support\nClick below to see the full list of changes.\nGive it a try\n                                                    \nUpdated Ktor generator\nWe have updated the Ktor generator, a tool that allows you to easily create a new Ktor application and configure the required functionality. Part of the Ktor generator’s new look and feel includes the easy project configuration and a one-click preview. Additionally, you can now add your plugins to the Ktor plugin registry. Be sure to take this opportunity to contribute to the Ktor ecosystem!\nSee it in action\n                                                    \nRevamped Ktor tutorials\nWe have refreshed our Get Started with Ktor Server tutorials to provide a more streamlined and user-friendly experience. These refreshed tutorials now offer more precise instructions, improved examples, and enhanced guidance to help you quickly master the fundamentals of building applications with Ktor. Dive in and explore the new content to kickstart your Ktor journey with ease.\nCheck out the tutorials\n                                                    \nThe Managing Complexity With Ktor talk recording\nUnlock the full potential of Ktor! The recording of the KotlinConf talk Managing Complexity With Ktor by Garth Gilmour is now available for you to watch and enjoy. Discover how to leverage server-sent events and WebSockets. Plus, master dependency injection with Koin, Kodein, and Hilt.\nWatch now\n                                                    \nNew Kotlin RPC tutorial\nExplore our new tutorial to learn more about Kotlin RPC (remote procedure call). An exciting new addition to the Kotlin ecosystem, Kotlin RPC builds on well-established foundations and runs on the kotlinx.rpc library. Read the tutorial to understand the core Kotlin RPC concepts and discover how to build a simple application with the technology.\nExplore further\n                                                    \nDid you know that the JetBrains team regularly publishes a newsletter featuring major Kotlin ecosystem news? Sign up to stay up to date with all things Kotlin.\n\n\n\n            \nMore Stories and News\nThe kotlinx.rpc library\nThe kotlinx.rpc library is live! Now, you can add asynchronous remote procedure call (RPC) services to your Kotlin Multiplatform applications. Visit our GitHub page and share your feedback and feature requests.\nGo to the GitHub page\n                                                    \nKotlinConf 2025 tickets are now on sale!\nThe countdown to KotlinConf 2025 has officially begun, and we’re excited to announce that tickets are now on sale for this premier event, which will take place from May 21–23, 2025, in Copenhagen, Denmark! The Super Early Bird tickets have already sold out, so don’t miss the opportunity to get one of the remaining Early Bird tickets. Book early and save!\nGet your tickets now\n                                                    \nKotzilla joins the Kotlin Foundation\nKotzilla has joined the Kotlin Foundation as a Silver member. This new partnership will advance the ecosystem and enrich the Kotlin community. The Kotzilla team has put significant effort into the advancement of Kotlin, especially with the creation of Koin, an open-source dependency injection (DI) framework.\nRead the news\n                                                    \nKotlin 2.0.10 released\nKotlin 2.0.10 is now available. This is a bug-fix release for Kotlin 2.0.0. For more details, click the link below to check out the release notes on GitHub.\nLearn more\n                                                    \nKotlin 2.0.20-RC released\nWe’ve also released Kotlin 2.0.20-RC. The highlights of this release include:\n– Language: Data class copy function to have the same visibility as constructor\nGet more details\n                                                    \nAmper update: standalone projects, settings tracing, and more\nThe latest release of Amper, version 0.4.0, is now available! In this update, we introduce a clear definition for the project root, provide a first look at settings tracing in Amper, and include various bug fixes and improvements.\nRead the blog post\n                                                    \nEnhanced Column Selection DSL in Kotlin DataFrame\nThe Kotlin DataFrame library simplifies the process of extracting values from structured data. Our recent blog post unveils the power and versatility of the Column Selection DSL. Explore new functions and improved syntax for selecting values from structured data in Kotlin DataFrame.\nRead on",
        "dc:creator": "Daria Voronina",
        "content": "Welcome to this special edition of Kotlin Roundup, where we shine the spotlight on Ktor, our framework for building asynchronous servers and clients in connected systems!&#160; This issue is packed with the latest updates, insightful news, and exciting developments in the Ktor ecosystem, appealing to everyone from seasoned Ktor enthusiasts to those just getting started. [&#8230;]",
        "contentSnippet": "Welcome to this special edition of Kotlin Roundup, where we shine the spotlight on Ktor, our framework for building asynchronous servers and clients in connected systems!  This issue is packed with the latest updates, insightful news, and exciting developments in the Ktor ecosystem, appealing to everyone from seasoned Ktor enthusiasts to those just getting started. […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=499404",
        "categories": [
          "news",
          "ktor"
        ],
        "isoDate": "2024-08-08T08:49:44.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "Java Annotated Monthly – August 2024",
        "link": "https://blog.jetbrains.com/idea/2024/08/java-annotated-monthly-august-2024/",
        "pubDate": "Thu, 08 Aug 2024 07:40:21 +0000",
        "content:encodedSnippet": "Welcome to this month’s Java Annotated Monthly! \nAs always, we bring you the latest Java news and updates on related technologies. This edition features a special section with Sebastian Daschner, who shares his favorite picks for July. You’ll also find helpful articles on Java 23, a snapshot of Java in today’s tech landscape, and much more. \nDive in to stay informed and inspired!\nFeatured Content\nSebastian Daschner is a self-employed consultant, author, and trainer who is enthusiastic about programming and Java. He is the author of the book Architecting Modern Java EE Applications. Sebastian participates in open-source standardization processes such as the JCP or the Eclipse Foundation and collaborates on various open-source projects. He is a Java Champion, Oracle Developer Champion, and JavaOne Rockstar. Sebastian evangelizes computer science practices on his blog, in his newsletter, on his podcast, in videos, and on X (formerly Twitter) via @DaschnerS.\nAs a JetBrains Community Contributor, I’m happy and honored to contribute to this month’s edition of the Java Annotated Monthly newsletter. In the following paragraphs, you’ll find my biased views on what is interesting in the Java world this month, why you definitely should use Quarkus and IntelliJ IDEA, as well as care about developer productivity. Oh, speaking of Why You Should Use Quarkus for Your Next Project, that’s the title of my talk at this year’s JavaZone conference, happening in September in Oslo.\nLet’s start with a shameless plug for a recent video I published on 13 Cool IntelliJ IDEA features that you probably didn’t know about. I’ve mentioned a few times that there is probably no single person on the planet who knows every single IntelliJ IDEA feature, including the developers at JetBrains. Our favorite Java IDE is packed with cool features, and in this video, I showcase some of them that provoked an “oh wow” reaction. Especially if you don’t know about the structural search and replace (SSR), Hippie completion, HTTP Client, or Dependency Structure Matrix (DSM) features, you should definitely have a look.\nAnother interesting topic that I’ve played around with is generative AI/LLMs, especially with local deployments and retrieval-augmented generation (RAG) that enables very interesting scenarios, both on internal tools and potentially on production applications, too. I was inspired by Guillaume Laforge’s session at Devoxx Poland about Gemini, the LangChain4j library, and the possibilities of RAG. Guillaume built a chatbot website on top of the Groovy documentation that knows the docs and can accurately generate responses, which, thanks to RAG, produces a much better quality output than your typical LLM chatbot. I’m curious to see what additional use cases the industry will come up with that can be helpful for developers, and of course, it shows that Java is a great fit for GenAI applications.\nAnother insight that I had recently was how much Quarkus is a win-win-win for the Java community, from developers’, managers’, and ecological perspectives. What I mean is that the technologies that are typically chosen from a budget or cost perspective might not have the best developer experience, nor effectiveness in terms of resource consumption. Quarkus, however, makes our applications greener thanks to its lower footprint and for the same reason saves money by being more cost-effective – especially in cloud deployments. Still, the developer experience is also outstanding, which is why pretty much all developers I talk to enjoy its quick turnaround and build times, especially its dev mode. That’s what I’d consider a win-win-win for managers, developers, and the environment. Holly Cummins also has a few great talks about Quarkus’ eco-friendliness, for example in her Voxxed Days talk Faster, greener, and happier- why Quarkus should be your next tech stack.\nJava News\nJava News Roundup 1, 2, 3, 4, 5 – Stay informed on the latest Java news with this weekly selection. \nJava and AI? – Inside Java Newscast #72 – Nicolai Parlog talks about Java’s strengths and weaknesses in AI development. He highlights its competitive edge in integrating AI features into larger projects, thanks to projects like Valhalla, Panama, and Babylon. \nIntegrity by Default – Inside Java Newscast #73 – The article introduces new security measures in OpenJDK that restrict certain operations like deep reflection and native code by default. \nJava 23: What’s New? – Loïc Mathieu details the new features in Java 23, including the removal of string templates, support for primitive types in patterns, and Markdown for Javadoc comments. He also covers the deprecation of unsafe memory-access methods, enhancements to the ZGC Garbage Collector, and the introduction of module import declarations.\nJava Tutorials and Tips\nJava 21 Virtual Threads – Dude, Where’s My Lock? – Check out how the implementation of virtual threads in Java 21 helped to enhance performance in Netflix’s microservices.\nFoojay Podcast #55: Embedded Java, Part 2 – The episode explores the history of Java Micro Edition and highlights how modern embedded systems can run the same Java runtime as larger systems.\nJava Language Futures – Spring 2024 Edition – Gavin Bierman discusses the rapid evolution of the Java programming language, highlighting recent changes and upcoming features expected in Java.\nThe power of embeddings: How numbers unlock the meaning of data – Guillaume Laforge explains how vector embeddings convert data into numerical codes that capture meaning, improving search and analysis. He covers the creation process, storage in vector databases, and applications like semantic search and anomaly detection.\nJava: Demystifying The Stream API – Part 3 – Mahendra Rao B explains the Java Stream API, highlighting how it uses functional programming techniques like map, filter, and reduce for efficient data processing.\nFoojay Podcast #56: Vectors in Java Code, Databases, and LLMs – In this podcast, Frank Delporte and guests Jonathan Ellis and Alexander Chatzizacharias discuss how vectors enhance AI and machine learning, looking at their practical application in the tech industry.\nJava and AI – A Structured Analysis – Nicolai Parlog discusses Java’s strengths and limitations for AI development, highlighting enhancements from OpenJDK projects like Panama, Babylon, and Valhalla, and its competitive edge for large AI projects.\nProject Loom – Structured Concurrency – Structured concurrency treats groups of related tasks as a single unit, improving error handling, cancellation, reliability, and observability, and it pairs well with virtual threads. This session by Alan Bateman introduces the concept and the preview API supporting it.\nPASSED! Scott’s Experience Taking the Java 21 Certification Exam 1Z0-830 – If you’re planning to take this exam, this article might be helpful. \nNew video series “JavaFX In Action”, Part 1 – Check out the recent interviews with JavaFX developers. It showcases their projects, insights, and the benefits of using JavaFX for creating responsive, feature-rich applications.\nEffective Java Logging – Muaath Bin Ali explains how developers and operations teams can leverage the Simple Logging Facade for Java (SLF4J) and Logback to turn logs into strategic resources for application management and incident resolution. \nImproving Maven build times – Check out helpful tips on speeding up Maven builds. Learn to optimize dependencies, use parallel builds, and leverage build caches. \nKotlin Corner\nKotlinConf 2025 Tickets Are Now on Sale! – The conference will be held from May 21–23, 2025, in Copenhagen, Denmark, featuring various workshops and sessions on Kotlin-related topics. Early bird and regular tickets are available, with workshops covering asynchronous programming, Kotlin Multiplatform, Ktor, and Compose Multiplatform.\nEnhanced Column Selection DSL in Kotlin DataFrame – Garth Gilmour and Jolan Rensen detail new functions for easier column selection in Kotlin DataFrame. These enhancements include handling nested data, selecting columns by index, and using predicates.\nCoroutine Essentials – Dave Leeds introduces the basics of Kotlin coroutines such as coroutine builders, suspending functions, and suspension points. \nCoroutines: Concurrency in Kotlin by Dave Leeds – If you prefer a video format for the previous topic, check out this presentation.\nUltimate Kotlin TDD FizzBuzz by Duncan McGregor – Find out what the FizzBuzz kata is all about. \nXcode-Kotlin 2.0 Release by Touchlab – Xcode-Kotlin 2.0 offers up to five times faster debugging performance, expanded variable information, and support across Swift, Kotlin, and Objective-C code. The blog post provides installation instructions and showcases the improved debugging experience.\nLanguages, Frameworks, Libraries, and Technologies\nThis Week in Spring 1, 2, 3, 4, 5 – Don’t miss the recent Spring news! \nWhat’s wrong with createDirectories() – A Beginner’s Guide to IntelliJ Profiler – Igor Kulakov explains how to use the IntelliJ Profiler to make Java applications run faster. He covers basic profiling and finding performance issues, and he also offers optimization tips with an example.\nOpenTelemetry Tracing on Spring Boot, Java Agent vs. Micrometer Tracing – Nicolas Fränkel explains how to implement OpenTelemetry tracing in a microservices setup using Spring Boot and Flask applications.\n9 Best Java Profilers to Use in 2024 – Lee Sheinberg reviews the top nine Java profilers for 2024, including tools like YourKit, JProfiler, and the IntelliJ Profiler. She explains their features, use cases, and how they help developers improve performance and manage memory.\nReduce Maven Plugin logging – Maarten Mulders offers tips to reduce excessive logging from Maven plugins, specifically the OpenAPI Generator Maven plugin. He suggests using SLF4J to suppress unnecessary log messages, resulting in significantly cleaner build logs.\nEnhancing the Visibility of Integration Tests – Anton Belyaev provides practical tips for improving the visibility of integration tests, focusing on interactions with external services. He recommends using DSL wrappers, JsonAssert, and storing specifications in JSON files to make tests more readable and maintainable.\nBetter ‘printf’ Debugging – Igor Kulakov demonstrates how to use logpoints in IntelliJ IDEA to enhance traditional printf debugging. He covers the usage of live templates for logging method parameters, values, and entries, setting logging breakpoints to avoid manual log management, and managing frequent events to prevent console flooding.\nPrompt Engineering – Basic Concepts For Developers – Marco Behler invites you to learn about essential concepts for writing non-trivial applications on top of LLMs.\nHow to use symbolic links to move the DB data folder – Vlad Mihalcea explains how to use symbolic links to move a database data folder to a different partition to free up space. \nHave you ever considered just not writing bugs? by Tagir Valeev – This talk examines several Java code snippets with common mistakes and explores some tools and approaches that can prevent these bugs.\nGet Started With Allocation Profiling – Igor Kulakov explains how to diagnose and fix a memory leak in a Java application using allocation profiling tools. \nConferences and Events\nCheck what events are available in August: \nLondon Java Community (LJC) Live with Trisha Gee – London, United Kingdom, August 5\nBangalore JUG Meetup – Bangalore, India, August 10\nMoving Java Forward Together – Online, August 21\nSpringOne – Online, August 26–28\nJUG.CH Sommerparty 2024 – Zurich, Switzerland, August 30\nCulture and Community\nFAQ: What’s a @KevlinHenney? – Find out what a @KevlinHenney screen is and why people are terrified when they see one. \nBeing a Responsible Developer in the Age of AI Hype – Justin Sheehy discusses the need for responsible AI development, emphasizing the importance of avoiding hype and creating ethical systems. He offers guidance on assessing AI technologies critically to ensure they are used responsibly and ethically.\nBuilding a Culture of Continuous Experimentation – Sarah Aslanifar discusses leveraging continuous learning to drive efficiency, eliminate waste, and significantly improve product outcomes, covering the crucial role of minimum viable products (MVPs).\nAnd Finally…\nThe New UI Becomes the Default in 2024.2 – Don’t miss this update if you are still using the classic UI and haven’t updated to the new one yet. \nTop Tools for Java Developers in 2024 – Check out a convenient list with helpful links about the tools you might need for productive work with Java.\nUsing Dev Containers in JetBrains IDEs – Part 1 – Yuri Trukhin explains how dev containers streamline development in JetBrains IDEs by creating isolated, consistent environments with all the necessary tools and dependencies. This first part of the series covers the basics of dev containers, their advantages, and how to set them up for your projects.\nIs Java Still Relevant Nowadays? – Despite new languages emerging, does Java remain widely used in various sectors? Find out in this blog post. \nThat’s all for today!\nWe’re gathering ideas for the next Java Annotated Monthly. Share your suggestions via email or X (formerly Twitter) by August 20. Don’t forget to explore our archive of past JAM issues to catch up on any posts or articles you might have missed.",
        "dc:creator": "Irina Mariasova",
        "content": "Welcome to this month&#8217;s Java Annotated Monthly!&#160; As always, we bring you the latest Java news and updates on related technologies. This edition features a special section with Sebastian Daschner, who shares his favorite picks for July. You&#8217;ll also find helpful articles on Java 23, a snapshot of Java in today&#8217;s tech landscape, and much [&#8230;]",
        "contentSnippet": "Welcome to this month’s Java Annotated Monthly!  As always, we bring you the latest Java news and updates on related technologies. This edition features a special section with Sebastian Daschner, who shares his favorite picks for July. You’ll also find helpful articles on Java 23, a snapshot of Java in today’s tech landscape, and much […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=500092",
        "categories": [
          "java",
          "news",
          "ai",
          "intellij-idea",
          "java-annotated",
          "spring"
        ],
        "isoDate": "2024-08-08T07:40:21.000Z"
      },
      {
        "creator": "Márton Braun",
        "title": "Amper Update August 2024 – Standalone Projects, Settings Tracing, and More",
        "link": "https://blog.jetbrains.com/amper/2024/08/amper-update-august-2024/",
        "pubDate": "Thu, 08 Aug 2024 07:20:08 +0000",
        "content:encodedSnippet": "The latest release of Amper, version 0.4.0, is now available! In this release, we’re introducing a clear definition for the project root and providing a first look at settings tracing in Amper, alongside bug fixes and other improvements.\nTo get support for Amper’s latest features, use Fleet 1.38 and IntelliJ IDEA 2024.2 (or later versions).\nProject file in standalone projects\nUntil now, projects using the standalone version of Amper didn’t have a strong definition of what the project contains. In this release, we’re introducing a new project-level configuration file. This clarifies the root and contents of the project, and provides a consistent experience whether you’re working in the IDE or invoking Amper from the command line.\nThis is a significant design decision, and we’d like to know what you think of it. Please read the details below and share your thoughts on this approach for project definitions.\nSingle-module Amper projects can still be defined with just a module.yaml file, allowing you to start new projects quickly, with minimal configuration.\nMulti-module projects must now contain a project.yaml file in their root directory, listing all included modules. This list can contain individual module paths or glob patterns, for example:\nmodules:\n - app\n - util\n - features/*\nEstablishing this project file also lays the groundwork for adding more features and possible improvements in later releases.\nFor example:\nThis file can serve as a location for project-wide configuration options.\nDependencies and versioning information could be stored in this file (similarly to version catalogs).\nPath references could be relative to the project root instead of relative to each configuration file (as it is currently implemented).\n\n\n\n\nFor Gradle-based Amper projects, the settings.gradle.kts file continues to serve as the project definition file. However, starting in this version, it must now explicitly list all included Amper modules.\nTo learn more about configuring the project root, see the Basics section of the documentation.\nSettings tracing\nAs your project grows, it becomes increasingly important to know what’s happening in its build configuration. To help you inspect and understand your build, Amper has facilities for settings tracing to keep track of how and where settings values are specified, and when they’re overridden. In this release, we are sharing a first preview of features built on settings tracing, with more to come later.\nYou can check the tooltip of the settings block (or its nested blocks) to see all effective values and where they’re defined:\n\n\n\n\nWhen looking at an individual setting, you can see when it overrides a value that’s already set:\n\n\n\n\nInspections can warn you if a setting is redundant as it doesn’t actually change a value. This can happen when the same value has already been configured elsewhere or when you’re trying to set a value that’s identical to the default:\n\n\n\n\nPlatform-specific configuration\nAs Amper is built with Kotlin Multiplatform in mind, it understands multiplatform projects, and it can tailor your configuration experience to the set of platforms you’re actually using.\nWith the latest tooling, you will only receive completion for configuration options that are relevant to the set of platforms you’re working with in the given module:\n\n\n\n\nYou also get a warning if a setting you’ve specified is invalid given your current platform configuration, with a suggestion of which platform you’re missing:\n\n\n\n\nUpdate your existing projects\nStarting with this release, Amper builds are shipped in a new repository, which contains both public releases and dev builds. This makes it easier to switch between different versions. If you are using Amper in a Gradle-based project, make sure to update the old repository URL to the new one:\n// Remove\nmaven(\"https://maven.pkg.jetbrains.space/public/p/amper/amper\")\n\n// Add\nmaven(\"https://packages.jetbrains.team/maven/p/amper/amper\")\nTo use the latest version in an existing Gradle-based project, update your plugin version as follows:\nplugins {\n    id(\"org.jetbrains.amper.settings.plugin\").version(\"0.4.0\")\n}\nIf you need to update a project using the standalone version of Amper, update your amper scripts by following the download instructions on the Usage page of the documentation.\nTry Amper\nTo get started with Amper, check out the sample projects with standalone Amper and the samples with Gradle-based projects, which have all been updated to the new version. For the full list of changes and bug fixes in Amper 0.4.0, see the release notes.\nFor full support of the latest Amper features, use Fleet 1.38 and IntelliJ IDEA 2024.2 (or later versions).\nTry Amper\n                                                    \nShare your feedback\nAmper is still experimental and under active development. You can provide feedback about your experience by joining the discussion in the Kotlinlang Slack’s #amper channel or sharing your suggestions and ideas in a YouTrack issue. Your input and your use cases help shape the future of Amper!",
        "dc:creator": "Márton Braun",
        "content": "The latest release of Amper, version 0.4.0, is now available! In this release, we’re introducing a clear definition for the project root and providing a first look at settings tracing in Amper, alongside bug fixes and other improvements. To get support for Amper’s latest features, use Fleet 1.38 and IntelliJ IDEA 2024.2 (or later versions). [&#8230;]",
        "contentSnippet": "The latest release of Amper, version 0.4.0, is now available! In this release, we’re introducing a clear definition for the project root and providing a first look at settings tracing in Amper, alongside bug fixes and other improvements. To get support for Amper’s latest features, use Fleet 1.38 and IntelliJ IDEA 2024.2 (or later versions). […]",
        "guid": "https://blog.jetbrains.com/?post_type=amper&p=498162",
        "isoDate": "2024-08-08T07:20:08.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "The ReSharper and the .NET tools 2024.2 Release Candidates Are Now Available",
        "link": "https://blog.jetbrains.com/dotnet/2024/08/07/resharper-2024-2-release-candidate/",
        "pubDate": "Wed, 07 Aug 2024 16:28:32 +0000",
        "content:encodedSnippet": "Get a preview of all the latest features and improvements set to be shipped with the next major ReSharper and .NET tools releases by downloading the Release Candidate builds that have just landed.\nDownload ReSharper 2024.2 RC\n                                                    \nHere are the major improvements in each of the new builds:\n\n\n\n\nThe ReSharper 2024.2 Release Candidate\nExtended support for C# 12 features, including primary constructors and enhanced collection expressions.\nInitial support for C# 13, featuring ref struct interface implementation, the new \\e escape sequence, and a params modifier refactoring.\nAsynchronous typing for improved typing performance.\nLocalization into Chinese, Korean, and Japanese.\nNumerous AI Assistant enhancements, including updated language models, in-editor code suggestions, and Explain with AI for exceptions and DPA issues.\nEnhanced decompiler support for lambdas and protected assemblies.\nSupport for navigating external sources in the decompiler.\n\n\n\n\nThe ReSharper C++ 2024.2 Release Candidate\nSupport for additional C++23 features, including the multidimensional subscript operator, #elifdef and #elifndef preprocessor directives, and the [[assume]] attribute.\nTooltips and the quick documentation popup now provide detailed information about type layout for classes and class fields, including size, alignment, offset, and padding.\nIn Unreal Engine projects, ReSharper C++ recognizes struct traits, ensuring that your structs have the required methods and quickly generating them if they are missing. A new inspection detects missing calls to base class methods.\nThe Rename refactoring adds new options to rename related files and types when renaming a file.\nImprovements to code analysis include an update to Clang-Tidy 18 and support for IWYU pragmas.\n\n\n\n\nThe dotMemory 2024.2 Release Candidate\nImproved instance search with new filtering options.\nThe following features are now available on Linux and macOS:\nAutomatic memory inspections in the Inspections view.\nCross-workspace snapshot comparison.\nA Call Tree view in standalone and Rider versions.\nA Sunburst chart visualization for the Call Tree, highlighting memory allocation functions.\n\n\n\n\nThe dotTrace 2024.2 Release Candidate\nImproved performance with faster processing of Timeline snapshots.\nA new rendering engine in dotTrace Viewer on all platforms.\nAn Options window added to the standalone version for macOS and Linux.\nFixed missing kernel events in Timeline snapshots on Windows.\nVarious minor improvements and bug fixes.\n\n\n\n\nThe dotCover 2024.2 Release Candidate\nStability improvements and bug fixes.\n\n\n\n\nThe dotPeek 2024.2 Release Candidate\nGeneral enhancements\nSupport for decompiling lambdas with optional and parameter-array parameters.\nImproved handling of attributes on lambda expressions.\nThe ability to decompile protected assemblies.\n\n\n\n\nHandling of external sources\nSupport for navigating to sources from PDB files containing SrcSrv and SourceLink.\nCorrect recognition of preprocessor directives for accurate code representation.\nAn Open in Browser action to navigate to source code in repositories for types or NuGet packages.\n\n\n\n\nBuild configuration detection\nThe Assembly Explorer tool window detects and presents the build configuration of assemblies.\nJust a reminder: You can download the latest build right now from the ReSharper 2024.2 EAP page or install it via the JetBrains Toolbox App.\nDownload ReSharper 2024.2 RC\n                                                    \nIt’s not too late to share your feedback on the newest features! Our developers are still putting the final touches on the upcoming release. Tell us what you think in the comments below or by reaching out to us on X.",
        "dc:creator": "Sasha Ivanova",
        "content": "Get a preview of all the latest features and improvements set to be shipped with the next major ReSharper and .NET tools releases by downloading the Release Candidate builds that have just landed. Here are the major improvements in each of the new builds: The ReSharper 2024.2 Release Candidate The ReSharper C++ 2024.2 Release Candidate [&#8230;]",
        "contentSnippet": "Get a preview of all the latest features and improvements set to be shipped with the next major ReSharper and .NET tools releases by downloading the Release Candidate builds that have just landed. Here are the major improvements in each of the new builds: The ReSharper 2024.2 Release Candidate The ReSharper C++ 2024.2 Release Candidate […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=498149",
        "categories": [
          "net-tools",
          "dotcover",
          "dotmemory",
          "dotpeek",
          "dottrace",
          "news",
          "releases",
          "resharpercplusplus",
          "resharper",
          "c-13",
          "localization",
          "oop",
          "resharper-2024-2"
        ],
        "isoDate": "2024-08-07T16:28:32.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "article New updates to Planner comment notifications and settings in Planner Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Serena Akpoyibo",
        "title": "My Summer Experience as a SWE Intern at Microsoft",
        "link": "https://devblogs.microsoft.com/visualstudio/my-summer-experience-as-a-swe-intern-at-microsoft/",
        "pubDate": "Fri, 09 Aug 2024 15:00:25 +0000",
        "content:encodedSnippet": "Hi everyone! I’m Serena, a rising 4th year at Rochester Institute of Technology with a major in Computer Science and a minor in Psychology. This summer I was a returning intern at Microsoft as a software engineering intern with the JavaScript and TypeScript Tooling team. In this blog post, I will be covering what it was like to work on language tooling and my overall experience as an intern at Microsoft.\n\nWhat I Worked On\nOver the summer, I worked on a toggle feature for inlay hints (that is additional information about source code that is rendered inline) in Visual Studio. The inlay hint feature supports multiple languages including Python, JavaScript, TypeScript and Razor. My project also involved working on a new settings page on the Tools/Options window for this feature. To complete this project, I had to ramp up on how the Language Server Protocol (LSP) works as well as researching on how a similar feature was integrated into Roslyn (a .NET Compiler Platform for C# and Visual Basic) and Visual Studio Code.\nI majorly worked out of the Redmond office. During this summer, I worked closely with my mentor to understand the problem space and how the existing code base worked in relation to inlay hints. This also meant the start of my project was slower than expected. I had anticipated some unfamiliarity with the space I was working in but being thrown into multiple repositories at once felt unsurmountable at the start. With the help of my mentor, I was able to set out weekly deliverables to break the project into smaller chunks of exploration. In addition to this, I met with my manager weekly to give status updates and talk about my internship progression in general. The success of my internship is noted in all the conversations I had regarding development and inlay hints in its entirety. These conversations were cross-team efforts with the Visual Studio Editor team in the second half of my internship. The discussions shaped a lot of what the feature turned out to be (from the choice of a dropdown over checkboxes to the string choices of the settings) and were essential as this feature is going to be available in the next preview of VS! They also ensured I challenged not only my thoughts as a developer but also my introverted personality. I was pushed out of my comfort zone frequently to talk to various engineers off and on my team regarding various aspects of the project. Outside of my project, I got to sit in on triaging bugs and working through feedback tickets on the tooling experience which was insightful to see the connection between users and developers. I also attended multiple intern events, especially those organized for the Developer Division (DevDiv) interns and DevDiv Blacks at Microsoft (BAM) interns.\nWhat I Learned\nFor the past 12 weeks, there’s been a steady flow of new information and while I was at Microsoft last summer, being on a different team brought new insights into what is possible and what happens at Microsoft. Some takeaways I’ve had from the summer have been:\nThe Language Server Protocol. From working on this project, I got to understand the connection between LSP and the individual language servers as well as the client (Visual Studio Editor).\nThe balance between experimenting and seeking help. Over the summer, I tried to find the perfect time to reach out for help and what I learned was there wasn’t a one size fits all solution. For each roadblock I hit, it took a different length of time to solve it and even if sometimes it was a simple fix, it was a fix I wouldn’t have come to without outside help. Other times, mulling over the problem for a couple of hours would get me a solution and new insights. An example of a roadblock I faced was in implementing the settings page. I was using a complex, outdated implementation for pages as a guide and got stuck when certain parts just did not translate to my scenario. After a couple of tries at making it work, I reached out to the Editor team and found out that was no longer the way they implemented new pages and was given a simpler page as a guide. Everything flowed more seamlessly from there on out. Without reaching out, I would have been stuck on that for way longer with no way forward.\nCode reviews are not personal. Seeing all the comments come in for my first PR made me think “did I do anything right?”, and I had to work through realizing comments didn’t immediately equal the work I put out was trash or an indictment on my skills. Most of them turned out to be questions for clarification or optimization comments which didn’t mean my approach was wrong but there was a better way to do it.\nWhat I Enjoyed\nI enjoyed meeting other DevDiv interns and gaining insight from them on what their teams worked on. I also participated in the Intern Networking Program which was an easy and fun way to meet other engineers across Microsoft and learn about what’s happening in other teams and organizations. Connecting and participating in BAM events also really made my time here enjoyable – seeing a community of people that look like you and with whom you have shared identities is always something I look for in spaces I find myself in and finding that community in Microsoft has been great!\nOutside of work, exploring the Seattle area (and enduring the weather here) has been interesting. Also having time to get back into some of my hobbies (reading and consuming an unhealthy amount of reality TV) has been appreciated. In all, the connections and time to take in a new city have been the highlight of the summer.\nWhat’s Next\nI accepted this offer last Fall and was very curious about what team and project I would end up working on, what the team dynamic would be, and how working alone on a project would be. I came in knowing next to nothing about language tooling but as I leave, I’m grateful for the experience, the work I got to do, and the people I’ve met along the way. I’m heading back to school for my fourth year and I’m leaving still curious about all the possibilities in this field. I had an amazing summer, and I hope I get to stay in touch with the people that helped make this a great experience!\n \nThe post My Summer Experience as a SWE Intern at Microsoft appeared first on Visual Studio Blog.",
        "dc:creator": "Serena Akpoyibo",
        "content": "<p>Hi everyone! I’m Serena, a rising 4th year at Rochester Institute of Technology with a major in Computer Science and a minor in Psychology. This summer I was a returning intern at Microsoft as a software engineering intern with the JavaScript and TypeScript Tooling team.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/my-summer-experience-as-a-swe-intern-at-microsoft/\">My Summer Experience as a SWE Intern at Microsoft</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Hi everyone! I’m Serena, a rising 4th year at Rochester Institute of Technology with a major in Computer Science and a minor in Psychology. This summer I was a returning intern at Microsoft as a software engineering intern with the JavaScript and TypeScript Tooling team.\nThe post My Summer Experience as a SWE Intern at Microsoft appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250108",
        "categories": [
          "Visual Studio"
        ],
        "isoDate": "2024-08-09T15:00:25.000Z"
      },
      {
        "creator": "Carlos Guerra Vazquez",
        "title": "Introducing the revamped Attach to Process experience",
        "link": "https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-attach-to-process-experience/",
        "pubDate": "Tue, 06 Aug 2024 10:00:36 +0000",
        "content:encodedSnippet": "One of the most powerful and frequently used features of Visual Studio is the Attach to Process dialog, which enables you to debug processes running on your machine or on a remote machine. For anything you could develop using Visual Studio, the Attach to Process dialog allows you to quickly attach the debugger to the processes you want to inspect and troubleshoot. While this feature has been around for a long time, its current design has room for modernization to better fit the latest versions of Visual Studio. Thus, we used this opportunity to improve the Attach to Process experience introducing a revamped and refreshed UI. Along with the new UI, we also took some time to introduce additional features users had requested and improved performance and accessibility.\n\nThe first thing you may notice is that the new UI visual style was updated to be consistent with the rest of Visual Studio, as well as supporting dark mode or any other VS theme you are using. The refreshed layout is not just about looks—it’s designed to save space and reduce clutter. This means you can easily find and select the processes you want to debug, even when working with smaller window sizes. It’s a cleaner, more intuitive experience that keeps everything you need within easy reach.\nWhat’s new in the Attach to Process dialog?\nFollowing are the new features and improvements to the dialog:\nTheming support: The dialog now adapts to your preferred VS theme.\n\n\nDecluttering: We revamped the view to reduce clutter and give back vertical space. This includes having the connection information hidden as a tooltip and having the Code Type be selected through a combo box in the dialog, instead of requiring a separate window like the old dialog did.\n\nIntroduced Local and Remote connection types: We added a new “Local” only connection type that simplifies the view when only debugging processes on your own machine. The existing “Default” connection was renamed into “Remote (Windows)”, as the new default connection is the Local one.\nImproved performance: Rendering time of both the tree view and flat view of the processes was improved. This should be especially noticeable for the tree view.\nCollapsible items in the Tree view: The dialog now allows you to collapse child processes shown in the Tree view. Helping you reduce clutter.\n\nPersistence of columns positions and widths on the processes list: The dialog now remembers the positions and widths of the columns on the processes list. This way you don’t have to adjust them every time you re-open VS.\nIntegrated “Track Window” experience: When selecting a process using the Track Window toggle, any window you selected will be highlighted on the processes list. Allowing you to see its information before deciding to attach, or you can attach directly to it though a double click.\nBuffered Text Search: The dialog now lets you start typing the name of the process you are searching as soon as the dialog opens and even before the processes are loaded. The dialog will buffer your input and apply it as soon as the processes are available, saving you some time in your workflow.\nOther changes:\nThe search now supports wildcards, hexadecimal search, property filters and multiple process search.\n\nProcess icons are shown on the lists. (Local connection only)\n\nPreview of the selected processes. You can double click on it to scroll to the selected process on the list.\n\nThe last attached process name is shown on the reattach menu item. (Only on VS 17.11)\n\nTry it out and let us know what you think\nThe new Attach to Process dialog is available in Visual Studio 2022 version 17.10 and later. You can access it from the Debug > Attach to Process menu or by pressing Ctrl+Alt+P. We hope you enjoy using it and find it more productive and pleasant than the old one. If you have any thoughts or suggestions, please share them with us on the Developer Community site or just leave a comment below. Your feedback is very important to us.\nStay connected with the Visual Studio team by following us on Twitter @VS_Debugger, Twitter @VisualStudio, YouTube, and LinkedIn.\nThe post Introducing the revamped Attach to Process experience appeared first on Visual Studio Blog.",
        "dc:creator": "Carlos Guerra Vazquez",
        "content": "<p>One of the most powerful and frequently used features of Visual Studio is the Attach to Process dialog, which enables you to debug processes running on your machine or on a remote machine. For anything you could develop using Visual Studio,</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/introducing-the-revamped-attach-to-process-experience/\">Introducing the revamped Attach to Process experience</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "One of the most powerful and frequently used features of Visual Studio is the Attach to Process dialog, which enables you to debug processes running on your machine or on a remote machine. For anything you could develop using Visual Studio,\nThe post Introducing the revamped Attach to Process experience appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250065",
        "categories": [
          "Visual Studio",
          "Debugging and Diagnostics",
          "UI Refresh",
          "Visual Studio 2022"
        ],
        "isoDate": "2024-08-06T10:00:36.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": [
      {
        "creator": "subokim",
        "title": "사람을 귀하게 여겨야 하는 이유",
        "link": "https://subokim.wordpress.com/2024/08/07/why-value-developer/",
        "pubDate": "Wed, 07 Aug 2024 03:41:49 +0000",
        "dc:creator": "subokim",
        "comments": "https://subokim.wordpress.com/2024/08/07/why-value-developer/#respond",
        "content": "자기 꿈이 있는 사람은 사람을 귀하게 여깁니다.누가 언제 어떻게 나를 도와줄지 모르기 때문입니다.이렇게 도와달라고 말을 합니다. 자기 꿈에 도취된 사람은 사람을 허투루 여깁니다.내 꿈을 위해 희생시킬 사람이 필요하거든요.이렇게 하라고 부추깁니다. 전자는 옆에 있는 사람이 자꾸 불어납니다.후자는 옆에 있는 사람이 자꾸 사라지죠. 전자는 자꾸 자기 실력을 기릅니다.일은 자기가 하는 거고, 다른 사람은 나를 도와줄 뿐이니까요. 후자는... <a class=\"more-link\" href=\"https://subokim.wordpress.com/2024/08/07/why-value-developer/#more-13437\">Continue Reading &#8594;</a>",
        "contentSnippet": "자기 꿈이 있는 사람은 사람을 귀하게 여깁니다.누가 언제 어떻게 나를 도와줄지 모르기 때문입니다.이렇게 도와달라고 말을 합니다. 자기 꿈에 도취된 사람은 사람을 허투루 여깁니다.내 꿈을 위해 희생시킬 사람이 필요하거든요.이렇게 하라고 부추깁니다. 전자는 옆에 있는 사람이 자꾸 불어납니다.후자는 옆에 있는 사람이 자꾸 사라지죠. 전자는 자꾸 자기 실력을 기릅니다.일은 자기가 하는 거고, 다른 사람은 나를 도와줄 뿐이니까요. 후자는... Continue Reading →",
        "guid": "http://subokim.wordpress.com/?p=13437",
        "categories": [
          "IT스타트업"
        ],
        "isoDate": "2024-08-07T03:41:49.000Z"
      }
    ]
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김병환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": [
      {
        "creator": "고종범",
        "title": "몰입으로 마무리했던 한 주",
        "link": "https://brunch.co.kr/@@24SO/43",
        "pubDate": "Fri, 09 Aug 2024 06:46:18 GMT",
        "author": "고종범",
        "content": "저널 쓰기를 습관으로 만들고 싶었지만 좀처럼 지켜지지 않아 커뮤니티를 통해 한 달간 습관을 만들었다. 그런 저널을 이제는 이곳으로 옮겨와 작성해보려고 한다. 아직은 주간 저널이다.  마침내 회복 7월은 코로나로 시작해서 괜찮아지다가 다시 감기에 걸려 고생을 했다. 면역력이 약해진 건지 코로나가 다 안 나아서 그렇게 된 것인지 모르겠지만 거의 한 달을 고생했<img src= \"https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F24SO%2Fimage%2FCn1lGICIW61ldpr8V5rR6e9s-3I.jpg\" width=\"500\" />",
        "contentSnippet": "저널 쓰기를 습관으로 만들고 싶었지만 좀처럼 지켜지지 않아 커뮤니티를 통해 한 달간 습관을 만들었다. 그런 저널을 이제는 이곳으로 옮겨와 작성해보려고 한다. 아직은 주간 저널이다.  마침내 회복 7월은 코로나로 시작해서 괜찮아지다가 다시 감기에 걸려 고생을 했다. 면역력이 약해진 건지 코로나가 다 안 나아서 그렇게 된 것인지 모르겠지만 거의 한 달을 고생했",
        "guid": "https://brunch.co.kr/@@24SO/43",
        "isoDate": "2024-08-09T06:46:18.000Z"
      }
    ]
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "Splunk의 dedup",
        "link": "https://kangmyounghun.blogspot.com/2024/08/splunk-dedup.html",
        "pubDate": "2024-08-11T07:39:00.000Z",
        "author": "강명훈",
        "content": "<div>이름에서 짐작이 가지만 <a href=\"https://docs.splunk.com/Documentation/Splunk/9.3.0/SearchReference/Dedup\" target=\"_blank\">dedup</a>은 최초 검색 결과 이후 중복을 제거해준다.</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiogMnjxxERd7DuV1i7EOmnbTxmS-k2zJIpZ_YwxKTFzBu9hkWR0KqthnsSSfWdJoaSzBPr77XUGSh1qh-z4rQwkKfr7T9xItbBS_6YcfIfZmzWZH4M6pAleomL4xnIB4MTKkM2hpoRhG70qTPyfPHLpNK30CpyMx-76thX8yYOalehFTN4hS4NaSdDjgtd/s1280/splunk_dedup.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"623\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiogMnjxxERd7DuV1i7EOmnbTxmS-k2zJIpZ_YwxKTFzBu9hkWR0KqthnsSSfWdJoaSzBPr77XUGSh1qh-z4rQwkKfr7T9xItbBS_6YcfIfZmzWZH4M6pAleomL4xnIB4MTKkM2hpoRhG70qTPyfPHLpNK30CpyMx-76thX8yYOalehFTN4hS4NaSdDjgtd/s520/splunk_dedup.png\" width=\"520\" /></a></div><div><br /></div><div><span><a name='more'></a></span></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhPZYlcx98i7clZqvegr21JxKkVcP7YV50hooUx1pKDqufSkCrocFyKv_-_Bfv3H29bB7AcDd9q-MdaXDCThid0eekZzWQbAafaHrGgf6VuYjS4h2V0vpS9njJPHptRFiaX9SlmX_4ILKNdck1rGsc5P7Ja30ePyljQT3ZUXuhTixQT1qXz1Fc443VWt40m/s1280/splunk_stats.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"568\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhPZYlcx98i7clZqvegr21JxKkVcP7YV50hooUx1pKDqufSkCrocFyKv_-_Bfv3H29bB7AcDd9q-MdaXDCThid0eekZzWQbAafaHrGgf6VuYjS4h2V0vpS9njJPHptRFiaX9SlmX_4ILKNdck1rGsc5P7Ja30ePyljQT3ZUXuhTixQT1qXz1Fc443VWt40m/s520/splunk_stats.png\" width=\"520\" /></a></div><br />\n<div>중복 제거라는 결과 때문에 동작 방식을 정확히 이해하지 못하면 집계 명령과 헷갈릴 수 있음. 다음은 두 필드가 쌍을 이루는 'process_name:Company' 기준의 집계 결과.&nbsp;</div><div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMKVoXtoKSRY-g-tNflOd7Gb-Klo20UoLpjdqNZNMBVMJ_3C_IJHF0orBLeUg3jCOiI19od_MS39d54QpCPdIF6rqnE-6NWoa64LWvaEuDb7i-ICYIUnZiCGE9Yh79W8JXrfJQ65KAGl-vHTPSgbbusSymtrQkwq95-rYTlrXZkcYLvT0-CbBIVOiuVGhB/s1280/splunk_stats2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"716\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjMKVoXtoKSRY-g-tNflOd7Gb-Klo20UoLpjdqNZNMBVMJ_3C_IJHF0orBLeUg3jCOiI19od_MS39d54QpCPdIF6rqnE-6NWoa64LWvaEuDb7i-ICYIUnZiCGE9Yh79W8JXrfJQ65KAGl-vHTPSgbbusSymtrQkwq95-rYTlrXZkcYLvT0-CbBIVOiuVGhB/s520/splunk_stats2.png\" width=\"520\" /></a></div><div><br /></div>집계 기준이 process_name에서 'process_name:Company'로 달라지면 당연히 집계 결과도 달라진다.</div><div><div><br /></div></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh4gx-o792QyDDRH4-hjCEe75t1xAZ-AfVYqGe6C6uCbXc3L2jZ8blqqyA7purYJqVXyY6r8VTeIFEeMyKRetfbDChi5_IdJ3s2Z_NiKBq7vLm2jND_4sR9jzSsQyQvDba0dh3e66qNbs3E1N8r9PVYKx2lYB4fnxjezpy2tNu53tQh4Wjgc9WWuqtgo4P7/s982/splunk_stats3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"982\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh4gx-o792QyDDRH4-hjCEe75t1xAZ-AfVYqGe6C6uCbXc3L2jZ8blqqyA7purYJqVXyY6r8VTeIFEeMyKRetfbDChi5_IdJ3s2Z_NiKBq7vLm2jND_4sR9jzSsQyQvDba0dh3e66qNbs3E1N8r9PVYKx2lYB4fnxjezpy2tNu53tQh4Wjgc9WWuqtgo4P7/s520/splunk_stats3.png\" width=\"520\" /></a></div><div><br /></div><div>다음은 비슷하게 동작할거라 예상한 dedup 명령. process_name 기준으로 중복을 제거한 후, 남은 Company 정보를 최종 검색 결과에 추가하기 때문에 집계 명령과 차이를 보인다.&nbsp;</div><br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGKJ7rRTTpTOZG14vw4ZVfqp5bQcDKxb_RlX9F9ZkZ8hcYx0ID-ji8awnegwAxwtflS2xC6RLeBqZ99KYXgWc-XYkIOqhgRdgc5VgyqSaTNTDc-bZ6NcBRNL3lbEZ8MxHKYJUNAIcjLdth3FGdW5bnJZX7xsQuVru7J6s6eudl2Or9KMdqImG-hCCihxDo/s1280/splunk_dedup2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"715\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGKJ7rRTTpTOZG14vw4ZVfqp5bQcDKxb_RlX9F9ZkZ8hcYx0ID-ji8awnegwAxwtflS2xC6RLeBqZ99KYXgWc-XYkIOqhgRdgc5VgyqSaTNTDc-bZ6NcBRNL3lbEZ8MxHKYJUNAIcjLdth3FGdW5bnJZX7xsQuVru7J6s6eudl2Or9KMdqImG-hCCihxDo/s520/splunk_dedup2.png\" width=\"520\" /></a></div><div><br /></div><div>집계 명령과 같은 결과를 가져오려면 집계 기준과 같은 중복 제거 기준을 줘야함.</div></div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjjMwqIszKE-rVQTMsN4_iwUkb76PLpPJ2eGOuzUMfTCkssSqaH-mbU8CW-5G9pKuQbwOwFSJvSvQVQYsZomkhkfJ35o0OPEQuDx0nzZ6gjDcy3RVutNeEyXHv6k5JMHSXZgLf2_pbnzhkcs8gbTTahcQZaNwRGFU97y6a4A_MAhl4zsxv1NY4sA4U1Obcp/s1280/splunk_dedup3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"709\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjjMwqIszKE-rVQTMsN4_iwUkb76PLpPJ2eGOuzUMfTCkssSqaH-mbU8CW-5G9pKuQbwOwFSJvSvQVQYsZomkhkfJ35o0OPEQuDx0nzZ6gjDcy3RVutNeEyXHv6k5JMHSXZgLf2_pbnzhkcs8gbTTahcQZaNwRGFU97y6a4A_MAhl4zsxv1NY4sA4U1Obcp/s520/splunk_dedup3.png\" width=\"520\" /></a></div><br />\n<div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2023/09/splunk-fillnull.html\">Splunk의 fillnull</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/08/splunk-eval-rex.html\">Splunk의 eval과 rex</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/06/splunk-makeresults.html\">Splunk의 makeresults</a></li></ul></div></div>",
        "contentSnippet": "이름에서 짐작이 가지만 dedup은 최초 검색 결과 이후 중복을 제거해준다.\n\n\n\n\n\n\n\n\n중복 제거라는 결과 때문에 동작 방식을 정확히 이해하지 못하면 집계 명령과 헷갈릴 수 있음. 다음은 두 필드가 쌍을 이루는 'process_name:Company' 기준의 집계 결과. \n\n\n\n\n\n집계 기준이 process_name에서 'process_name:Company'로 달라지면 당연히 집계 결과도 달라진다.\n\n\n\n\n\n\n다음은 비슷하게 동작할거라 예상한 dedup 명령. process_name 기준으로 중복을 제거한 후, 남은 Company 정보를 최종 검색 결과에 추가하기 때문에 집계 명령과 차이를 보인다. \n\n\n\n\n집계 명령과 같은 결과를 가져오려면 집계 기준과 같은 중복 제거 기준을 줘야함.\n\n\n\n\n\n관련 글\n\nSplunk의 fillnull\nSplunk의 eval과 rex\nSplunk의 makeresults",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-6089769473498261649",
        "isoDate": "2024-08-11T07:39:00.000Z"
      },
      {
        "title": "데이터 노가다 실수담 - 6th",
        "link": "https://kangmyounghun.blogspot.com/2024/08/6th.html",
        "pubDate": "2024-08-07T11:24:00.001Z",
        "author": "강명훈",
        "content": "<div>프로세스 집계 결과는 35개.</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiskzi9E29cg7B-aBDWrWm0XQ3cl-lweGLJYc4PVLtLzLNb8WTco2kfHdQxSG1ybli69MFVtXSzCpsecGlf3eGROziw56ZMiJe8XCN2yBWAwZQjeSDSBcPhqwwRlRis6aV9fzXkK6-cOL9u3sgw30wSLeDErd_D0nQe-D5R1bTJIVrHF2-M8aUi0S72Ist8/s1280/splunk_stats.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"655\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiskzi9E29cg7B-aBDWrWm0XQ3cl-lweGLJYc4PVLtLzLNb8WTco2kfHdQxSG1ybli69MFVtXSzCpsecGlf3eGROziw56ZMiJe8XCN2yBWAwZQjeSDSBcPhqwwRlRis6aV9fzXkK6-cOL9u3sgw30wSLeDErd_D0nQe-D5R1bTJIVrHF2-M8aUi0S72Ist8/s520/splunk_stats.png\" width=\"520\" /></a></div><div><br /></div><div><span><a name='more'></a></span>집계 분할 기준에 제작사를 추가하면 36개? 프로세스 제작사가 다 달라도 35개를 넘으면 안 되는데?</div><br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg1pJlO4W4Vl9J4WPefPhP61xWJcHQpsgJ_XJr7WjwCmX-fZRjm2Msz7EGFDokP5ltwXqUY0u09vWTNEN1qDokDjHrcQ4JvAz4Ph88HpkfWOu7HpLQFUDgRvy6vZbelBB12-UHeHinMV5-9FObIQCSz9xZEShguqb862RP6vKKYXCKXPBsFqkXEx21Ifqt8/s1280/splunk_stats2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"654\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg1pJlO4W4Vl9J4WPefPhP61xWJcHQpsgJ_XJr7WjwCmX-fZRjm2Msz7EGFDokP5ltwXqUY0u09vWTNEN1qDokDjHrcQ4JvAz4Ph88HpkfWOu7HpLQFUDgRvy6vZbelBB12-UHeHinMV5-9FObIQCSz9xZEShguqb862RP6vKKYXCKXPBsFqkXEx21Ifqt8/s520/splunk_stats2.png\" width=\"520\" /></a></div><br />\n<div>제작사 정보만 집계해봤다. 네이버가 두 개네.</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhBmByfGLbrBtPkXQFdSzseJuPK0p1eAU3Nh5jLo6QFezzQC4Dy8lqtJllWg5PgKVUMhShka7r0rZCgsr3L8z0xWGEYlauYudD8Z6i2w0kmfBa5AU4h2XMKYubrWNbxCfIVB8F-J82KCjubWRdQYfiMUZqLmf1ANmdvuIc4rhfar56rScYIaX2WZ5GR2Lai/s979/splunk_stats3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"979\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhBmByfGLbrBtPkXQFdSzseJuPK0p1eAU3Nh5jLo6QFezzQC4Dy8lqtJllWg5PgKVUMhShka7r0rZCgsr3L8z0xWGEYlauYudD8Z6i2w0kmfBa5AU4h2XMKYubrWNbxCfIVB8F-J82KCjubWRdQYfiMUZqLmf1ANmdvuIc4rhfar56rScYIaX2WZ5GR2Lai/s520/splunk_stats3.png\" width=\"520\" /></a></div><div><br /></div>왜 두 개지? 프로세스 원본을 보니 실행 파일이 다름.<div><br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjG8ms_sNPs8rcqUoib1PU6RH4hjvASTNl29VIuQd5FumpyBXHS_KMaxps1_TrkPccF1CsMKNXO_n_J4sObi4DblSlt0eC03u7QbsoiiGABVxjUzAGk4wkXbblUIZwYW8U83vVlnIASvL1cBo3VhT6KgtrlCQJQHkmCvH3EIn4ihdVW_onKD7JpbCLTuNLc/s1280/splunk_stats4.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"680\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjG8ms_sNPs8rcqUoib1PU6RH4hjvASTNl29VIuQd5FumpyBXHS_KMaxps1_TrkPccF1CsMKNXO_n_J4sObi4DblSlt0eC03u7QbsoiiGABVxjUzAGk4wkXbblUIZwYW8U83vVlnIASvL1cBo3VhT6KgtrlCQJQHkmCvH3EIn4ihdVW_onKD7JpbCLTuNLc/s520/splunk_stats4.png\" width=\"520\" /></a></div><div><br /></div><div>소문자로 일원화.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiprkr0dBNqMNCnWbL-KLSyBtIyjPWi_fahlPuwEliYSXcfSgryV3xQyhQix3FI2hIJnA4ho49B5ksq3Zf5SrXKF22pxkCEeT4W35MatQL-4F3pjcu2vOGKAKTeYW3a9oT4xVfDh6otvijwVl6ONIjuOhKHgO8lEOlDewdxGZ3Nk5OP4RPlRE-6JClVOoZZ/s1280/splunk_stats5png.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"681\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiprkr0dBNqMNCnWbL-KLSyBtIyjPWi_fahlPuwEliYSXcfSgryV3xQyhQix3FI2hIJnA4ho49B5ksq3Zf5SrXKF22pxkCEeT4W35MatQL-4F3pjcu2vOGKAKTeYW3a9oT4xVfDh6otvijwVl6ONIjuOhKHgO8lEOlDewdxGZ3Nk5OP4RPlRE-6JClVOoZZ/s520/splunk_stats5png.png\" width=\"520\" /></a></div><br />\n<div>디지털 서명 받을 때 같은 회사면 같은 이름으로 다 통일했으면 좋겠다. 대소문자 구분같은 것도 좀 하지 말고<span style=\"font-size: x-small;\">(..)</span>&nbsp;</div><div><br /></div><div><b>관련 글</b><br /><ul><li><a href=\"https://kangmyounghun.blogspot.com/2023/07/5th.html\">데이터 노가다 실수담 - 5th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2019/01/blog-post_90.html\" target=\"\">데이터 노가다 실수담</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/06/blog-post.html\">평균의 함정</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/09/blog-post_27.html\" target=\"\">데이터 분석이 쉬워지는 비법</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/12/blog-post.html\" target=\"\">데이터 분석에 필요한 자질은 뭘까?</a></li></ul></div></div>",
        "contentSnippet": "프로세스 집계 결과는 35개.\n\n\n\n\n\n집계 분할 기준에 제작사를 추가하면 36개? 프로세스 제작사가 다 달라도 35개를 넘으면 안 되는데?\n\n\n\n제작사 정보만 집계해봤다. 네이버가 두 개네.\n\n\n\n\n왜 두 개지? 프로세스 원본을 보니 실행 파일이 다름.\n\n\n\n\n소문자로 일원화.\n\n\n\n디지털 서명 받을 때 같은 회사면 같은 이름으로 다 통일했으면 좋겠다. 대소문자 구분같은 것도 좀 하지 말고(..) \n\n\n관련 글\n\n데이터 노가다 실수담 - 5th\n데이터 노가다 실수담\n평균의 함정\n데이터 분석이 쉬워지는 비법\n데이터 분석에 필요한 자질은 뭘까?",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-6510873428213693273",
        "isoDate": "2024-08-07T11:24:00.001Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "윈도우용 추천 프리웨어 (2024.8.7) 배경화면, 프로그래밍, 디스크 사용 공간 관리,  3D 프린팅 프로그램, 클립보드 관리",
        "link": "http://muzbox.tistory.com/483454",
        "pubDate": "Wed, 7 Aug 2024 12:11:08 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483454#entry483454comment",
        "content": "<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"background-color: #ffffff; color: #0d0d0d; text-align: start;\">&nbsp;네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"freeware.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/3m5Dd/btsIWj3uUVK/IWUZxFOGEMYNR72lcjkLU0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/3m5Dd/btsIWj3uUVK/IWUZxFOGEMYNR72lcjkLU0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/3m5Dd/btsIWj3uUVK/IWUZxFOGEMYNR72lcjkLU0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F3m5Dd%2FbtsIWj3uUVK%2FIWUZxFOGEMYNR72lcjkLU0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"윈도우용 추천 프리웨어\" data-filename=\"freeware.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"color: #333333; text-align: left;\">&nbsp;윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는<span>&nbsp;</span></span><b><span style=\"color: #009a87;\">상용프로그램</span></b><span style=\"color: #333333; text-align: left;\">과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의<span>&nbsp;</span></span><span style=\"color: #ee2323;\"><b>쉐어웨어</b></span><span style=\"color: #333333; text-align: left;\">, 무료로 사용할 수 있는<span>&nbsp;</span></span><b><span style=\"color: #ef6f53;\">프리웨어</span></b>등으로 크게 3가지로 나뉘게 되는데요.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><br />&nbsp;물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 <span style=\"color: #006dd7;\"><b>최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개</b></span>하고 있습니다.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size18\">'어떤오후의 프리웨어 이야기'에서 추천하는<br /><span style=\"color: #409d00;\">&nbsp;<b>2024년 8월 7일자 공개자료실 윈도우용 추천 프리웨어</b></span>입니다.</p>\n<p id=\"no_1\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>1. Bing&nbsp;Wallpaper&nbsp;(무료&nbsp;배경화면&nbsp;다운로드)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; Microsoft에서&nbsp;개발한&nbsp;데스크톱&nbsp;애플리케이션으로,&nbsp;Bing&nbsp;검색&nbsp;엔진의&nbsp;일일&nbsp;특집&nbsp;이미지를&nbsp;사용자의&nbsp;데스크톱&nbsp;배경화면으로&nbsp;자동&nbsp;설정해줍니다.&nbsp;이&nbsp;앱은&nbsp;매일&nbsp;새로운&nbsp;고해상도&nbsp;이미지를&nbsp;제공하며,&nbsp;풍경,&nbsp;야생동물,&nbsp;문화&nbsp;및&nbsp;역사적&nbsp;장소&nbsp;등&nbsp;다양한&nbsp;주제를&nbsp;다룹니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">가벼운&nbsp;프로그램으로&nbsp;시스템&nbsp;자원을&nbsp;많이&nbsp;사용하지&nbsp;않으며,&nbsp;간단한&nbsp;인터페이스를&nbsp;통해&nbsp;쉽게&nbsp;설정할&nbsp;수&nbsp;있습니다.&nbsp;각&nbsp;이미지에는&nbsp;설명이&nbsp;포함되어&nbsp;있어&nbsp;사용자가&nbsp;세계에&nbsp;대해&nbsp;배울&nbsp;수&nbsp;있는&nbsp;기회를&nbsp;제공합니다.&nbsp;또한&nbsp;다중&nbsp;모니터&nbsp;설정,&nbsp;수동&nbsp;이미지&nbsp;선택&nbsp;등&nbsp;사용자&nbsp;지정&nbsp;옵션도&nbsp;제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Bing Wallpaper.png\" data-origin-width=\"1419\" data-origin-height=\"819\"><span data-url=\"https://blog.kakaocdn.net/dn/coSOSF/btsIValX4dM/xX6KfleDtR1xfDftFK5SGK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/coSOSF/btsIValX4dM/xX6KfleDtR1xfDftFK5SGK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/coSOSF/btsIValX4dM/xX6KfleDtR1xfDftFK5SGK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcoSOSF%2FbtsIValX4dM%2FxX6KfleDtR1xfDftFK5SGK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Bing Wallpaper.png\" data-origin-width=\"1419\" data-origin-height=\"819\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업</p>\n<p data-ke-size=\"size18\">▶ Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드◀</p>\n<p data-ke-size=\"size18\"><a href=\"https://www.microsoft.com/en-gb/bing/bing-wallpaper\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.microsoft.com/en-gb/bing/bing-wallpaper</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_2\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>2. Rust&nbsp;(빠르고&nbsp;메모리&nbsp;효율적인&nbsp;프로그래밍&nbsp;언어)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 빠르고&nbsp;메모리&nbsp;효율적인&nbsp;프로그래밍&nbsp;언어로,&nbsp;런타임이나&nbsp;가비지&nbsp;컬렉터&nbsp;없이&nbsp;고성능&nbsp;서비스와&nbsp;임베디드&nbsp;장치에서&nbsp;작동할&nbsp;수&nbsp;있습니다.&nbsp;강력한&nbsp;타입&nbsp;시스템과&nbsp;소유권&nbsp;모델을&nbsp;통해&nbsp;메모리&nbsp;안전성과&nbsp;스레드&nbsp;안전성을&nbsp;보장하며,&nbsp;컴파일&nbsp;시점에서&nbsp;많은&nbsp;종류의&nbsp;버그를&nbsp;제거할&nbsp;수&nbsp;있습니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;우수한 문서, 친화적인 컴파일러, 그리고 뛰어난 툴링을 제공합니다. 커맨드 라인 도구, WebAssembly, 네트워킹, 임베디드 시스템 등 다양한 분야에서 사용되며, Firefox, Dropbox, Cloudflare 등 많은 기업들이 실제 제품에 Rust를 활용하고 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"rust-Photoroom.png\" data-origin-width=\"827\" data-origin-height=\"477\"><span data-url=\"https://blog.kakaocdn.net/dn/WH0RH/btsIVJO47UB/jvUNNLCNypThAK7fk5RIq1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/WH0RH/btsIVJO47UB/jvUNNLCNypThAK7fk5RIq1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/WH0RH/btsIVJO47UB/jvUNNLCNypThAK7fk5RIq1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FWH0RH%2FbtsIVJO47UB%2FjvUNNLCNypThAK7fk5RIq1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"rust-Photoroom.png\" data-origin-width=\"827\" data-origin-height=\"477\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업(오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1723000005453\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Rust Programming Language\" data-og-description=\"A language empowering everyone to build reliable and efficient software.\" data-og-host=\"www.rust-lang.org\" data-og-source-url=\"https://www.rust-lang.org/\" data-og-url=\"https://www.rust-lang.org/\" data-og-image=\"https://scrap.kakaocdn.net/dn/dPs7gh/hyWKzLepyT/eZj5FZcrW3jLbpYupii5x0/img.jpg?width=2048&amp;height=1024&amp;face=0_0_2048_1024,https://scrap.kakaocdn.net/dn/c7PsF6/hyWKvB4vMQ/S2tc7TyDrII07Kt02txc70/img.jpg?width=1024&amp;height=1024&amp;face=0_0_1024_1024,https://scrap.kakaocdn.net/dn/mz6c3/hyWKEsfqHL/u6C2NzJC6k30LzPiqtNe61/img.png?width=1000&amp;height=640&amp;face=0_0_1000_640\"><a href=\"https://www.rust-lang.org/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.rust-lang.org/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/dPs7gh/hyWKzLepyT/eZj5FZcrW3jLbpYupii5x0/img.jpg?width=2048&amp;height=1024&amp;face=0_0_2048_1024,https://scrap.kakaocdn.net/dn/c7PsF6/hyWKvB4vMQ/S2tc7TyDrII07Kt02txc70/img.jpg?width=1024&amp;height=1024&amp;face=0_0_1024_1024,https://scrap.kakaocdn.net/dn/mz6c3/hyWKEsfqHL/u6C2NzJC6k30LzPiqtNe61/img.png?width=1000&amp;height=640&amp;face=0_0_1000_640');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Rust Programming Language</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">A language empowering everyone to build reliable and efficient software.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.rust-lang.org</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_3\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>3. SpaceSniffer&nbsp;(디스크&nbsp;공간&nbsp;사용을&nbsp;시각적으로&nbsp;분석하는&nbsp;도구)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;하드 드라이브의 디스크 공간 사용을 분석하는 도구입니다. 이 프로그램은 선택한 드라이브를 스캔하여 동적 디스크 맵을 생성하며, 이를 통해 가장 많은 공간을 차지하는 파일과 폴더를 쉽게 파악할 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">실시간으로 맵을 확인할 수 있으며, 스캔 중 발생하는 변경 사항(파일 삭제, 이름 변경, 새 파일 추가 등)이 자동으로 반영됩니다. 폴더 태깅, 이름 필터링, 사용자 정의 파일 클래스 등 다양한 기능을 제공합니다. 또한 설치가 필요 없는 포터블 프로그램이라는 장점이 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"spacesniffer.png\" data-origin-width=\"934\" data-origin-height=\"675\"><span data-url=\"https://blog.kakaocdn.net/dn/bqb1bs/btsIVkvgYYr/DkH2eUlfGxvzOzzUoK4vg0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bqb1bs/btsIVkvgYYr/DkH2eUlfGxvzOzzUoK4vg0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bqb1bs/btsIVkvgYYr/DkH2eUlfGxvzOzzUoK4vg0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbqb1bs%2FbtsIVkvgYYr%2FDkH2eUlfGxvzOzzUoK4vg0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"spacesniffer.png\" data-origin-width=\"934\" data-origin-height=\"675\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업</p>\n<p data-ke-size=\"size18\">▶Windows 10/11&nbsp;</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1723000033595\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"SpaceSniffer, find lost disk space the easy way.\" data-og-description=\"Brief product description Latest release is 1.3.0.2 SpaceSniffer is a freeWare (donations are welcome) and portable tool application that lets you understand how folders and files are structured on your disks. By using a Treemap visualization layout, you h\" data-og-host=\"www.uderzo.it\" data-og-source-url=\"http://www.uderzo.it/main_products/space_sniffer/index.html\" data-og-url=\"http://www.uderzo.it/main_products/space_sniffer/index.html\" data-og-image=\"https://scrap.kakaocdn.net/dn/do077Q/hyWKw8PCP8/FoSYDK4kNd7hLYuWA2ESwk/img.jpg?width=432&amp;height=356&amp;face=0_0_432_356\"><a href=\"http://www.uderzo.it/main_products/space_sniffer/index.html\" target=\"_blank\" rel=\"noopener\" data-source-url=\"http://www.uderzo.it/main_products/space_sniffer/index.html\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/do077Q/hyWKw8PCP8/FoSYDK4kNd7hLYuWA2ESwk/img.jpg?width=432&amp;height=356&amp;face=0_0_432_356');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">SpaceSniffer, find lost disk space the easy way.</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Brief product description Latest release is 1.3.0.2 SpaceSniffer is a freeWare (donations are welcome) and portable tool application that lets you understand how folders and files are structured on your disks. By using a Treemap visualization layout, you h</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.uderzo.it</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_4\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>4. Ultimaker&nbsp;Cura&nbsp;(3D&nbsp;프린팅&nbsp;소프트웨어)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;세계적으로&nbsp;인기&nbsp;있는&nbsp;오픈&nbsp;소스&nbsp;3D&nbsp;프린팅&nbsp;소프트웨어입니다.&nbsp;초보자부터&nbsp;전문가까지&nbsp;모든&nbsp;사용자를&nbsp;위한&nbsp;다양한&nbsp;기능을&nbsp;제공하며,&nbsp;강력한&nbsp;슬라이싱&nbsp;엔진을&nbsp;통해&nbsp;3D&nbsp;모델을&nbsp;프린팅&nbsp;가능한&nbsp;G-코드로&nbsp;변환합니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">사용자&nbsp;친화적인&nbsp;인터페이스와&nbsp;400개&nbsp;이상의&nbsp;설정&nbsp;옵션을&nbsp;제공하여&nbsp;사용자가&nbsp;원하는&nbsp;대로&nbsp;프린팅을&nbsp;조정할&nbsp;수&nbsp;있습니다.&nbsp;CAD&nbsp;소프트웨어와의&nbsp;통합,&nbsp;다양한&nbsp;파일&nbsp;형식&nbsp;지원,&nbsp;플러그인을&nbsp;통한&nbsp;기능&nbsp;확장&nbsp;등이&nbsp;가능합니다.&nbsp;또한&nbsp;정기적인&nbsp;업데이트를&nbsp;통해&nbsp;지속적으로&nbsp;개선되며,&nbsp;무료로&nbsp;사용할&nbsp;수&nbsp;있는&nbsp;장점이&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"ultimaker-cura-Photoroom.png\" data-origin-width=\"1280\" data-origin-height=\"685\"><span data-url=\"https://blog.kakaocdn.net/dn/slOh2/btsIVccYBkG/YFUXhak2JcHLzq3TfjKXpK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/slOh2/btsIVccYBkG/YFUXhak2JcHLzq3TfjKXpK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/slOh2/btsIVccYBkG/YFUXhak2JcHLzq3TfjKXpK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FslOh2%2FbtsIVccYBkG%2FYFUXhak2JcHLzq3TfjKXpK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"ultimaker-cura-Photoroom.png\" data-origin-width=\"1280\" data-origin-height=\"685\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1723000056454\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"UltiMaker Cura\" data-og-description=\"UltiMaker Cura는 수백만 명의 사용자가 신뢰하는 무료이며 사용하기 쉬운 3D 프린팅 소프트웨어입니다. 최상의 슬라이싱 및 프린팅 결과를 위해 400개 이상의 설정으로 3D 모델을 미세 조정하세요.\" data-og-host=\"ultimaker.com\" data-og-source-url=\"https://ultimaker.com/ko/software/ultimaker-cura/\" data-og-url=\"https://ultimaker.com/ko/software/ultimaker-cura/\" data-og-image=\"https://scrap.kakaocdn.net/dn/bYh50y/hyWKKeViOw/cVAmyEIgZMpXMFFKPSmBa1/img.jpg?width=2560&amp;height=1707&amp;face=0_0_2560_1707,https://scrap.kakaocdn.net/dn/dEbSfH/hyWKBvvAiz/RV9uAgCsBawk7dlzbBcqc1/img.png?width=648&amp;height=550&amp;face=0_0_648_550,https://scrap.kakaocdn.net/dn/epHjJX/hyWKEMwqKp/cwFJkvqOxhG0Bk0tH6kbC1/img.png?width=648&amp;height=550&amp;face=353_140_416_209\"><a href=\"https://ultimaker.com/ko/software/ultimaker-cura/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://ultimaker.com/ko/software/ultimaker-cura/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bYh50y/hyWKKeViOw/cVAmyEIgZMpXMFFKPSmBa1/img.jpg?width=2560&amp;height=1707&amp;face=0_0_2560_1707,https://scrap.kakaocdn.net/dn/dEbSfH/hyWKBvvAiz/RV9uAgCsBawk7dlzbBcqc1/img.png?width=648&amp;height=550&amp;face=0_0_648_550,https://scrap.kakaocdn.net/dn/epHjJX/hyWKEMwqKp/cwFJkvqOxhG0Bk0tH6kbC1/img.png?width=648&amp;height=550&amp;face=353_140_416_209');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">UltiMaker Cura</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">UltiMaker Cura는 수백만 명의 사용자가 신뢰하는 무료이며 사용하기 쉬운 3D 프린팅 소프트웨어입니다. 최상의 슬라이싱 및 프린팅 결과를 위해 400개 이상의 설정으로 3D 모델을 미세 조정하세요.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">ultimaker.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_5\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>5. CopyQ&nbsp;(클립보드&nbsp;히스토리를&nbsp;관리)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 클립보드&nbsp;히스토리를&nbsp;관리하고&nbsp;조작할&nbsp;수&nbsp;있는&nbsp;강력한&nbsp;도구입니다.&nbsp;시스템&nbsp;트레이에&nbsp;상주하며,&nbsp;최근&nbsp;복사한&nbsp;텍스트나&nbsp;이미지를&nbsp;쉽게&nbsp;확인하고&nbsp;붙여넣을&nbsp;수&nbsp;있습니다.&nbsp;사용자는&nbsp;클립보드&nbsp;항목을&nbsp;편집하고,&nbsp;정렬하며,&nbsp;탭으로&nbsp;구성할&nbsp;수&nbsp;있고,&nbsp;암호화나&nbsp;자동&nbsp;처리&nbsp;같은&nbsp;고급&nbsp;기능도&nbsp;제공합니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">38개의&nbsp;단축키와&nbsp;다양한&nbsp;설정&nbsp;옵션을&nbsp;통해&nbsp;높은&nbsp;수준의&nbsp;사용자&nbsp;정의가&nbsp;가능합니다.&nbsp;그러나&nbsp;복잡한&nbsp;인터페이스와&nbsp;부족한&nbsp;문서화로&nbsp;인해&nbsp;초보자에게는&nbsp;어려울&nbsp;수&nbsp;있으며,&nbsp;Windows&nbsp;환경에&nbsp;최적화되지&nbsp;않은&nbsp;면이&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"copyq.png\" data-origin-width=\"455\" data-origin-height=\"577\"><span data-url=\"https://blog.kakaocdn.net/dn/cMbb7l/btsIWG5cbWB/jLL2xZKnwh5EOI47SUN861/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cMbb7l/btsIWG5cbWB/jLL2xZKnwh5EOI47SUN861/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cMbb7l/btsIWG5cbWB/jLL2xZKnwh5EOI47SUN861/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcMbb7l%2FbtsIWG5cbWB%2FjLL2xZKnwh5EOI47SUN861%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"copyq.png\" data-origin-width=\"455\" data-origin-height=\"577\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업 (오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1723000081446\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"product\" data-og-title=\"CopyQ\" data-og-description=\"Download CopyQ for free. Clipboard manager with advanced features. CopyQ is advanced clipboard manager with searchable and editable history with support for image formats, command line control and more.\" data-og-host=\"sourceforge.net\" data-og-source-url=\"https://sourceforge.net/projects/copyq/\" data-og-url=\"https://sourceforge.net/projects/copyq/\" data-og-image=\"https://scrap.kakaocdn.net/dn/gNsrA/hyWKwVhHtP/W3zph0wTmHZV4qJzDh5k7K/img.png?width=48&amp;height=48&amp;face=0_0_48_48\"><a href=\"https://sourceforge.net/projects/copyq/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://sourceforge.net/projects/copyq/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/gNsrA/hyWKwVhHtP/W3zph0wTmHZV4qJzDh5k7K/img.png?width=48&amp;height=48&amp;face=0_0_48_48');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">CopyQ</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Download CopyQ for free. Clipboard manager with advanced features. CopyQ is advanced clipboard manager with searchable and editable history with support for image formats, command line control and more.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">sourceforge.net</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.\n\n\n \n 윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는 상용프로그램과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의 쉐어웨어, 무료로 사용할 수 있는 프리웨어등으로 크게 3가지로 나뉘게 되는데요.\n 물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개하고 있습니다.\n \n \n'어떤오후의 프리웨어 이야기'에서 추천하는\n 2024년 8월 7일자 공개자료실 윈도우용 추천 프리웨어입니다.\n \n1. Bing Wallpaper (무료 배경화면 다운로드)\n\n  Microsoft에서 개발한 데스크톱 애플리케이션으로, Bing 검색 엔진의 일일 특집 이미지를 사용자의 데스크톱 배경화면으로 자동 설정해줍니다. 이 앱은 매일 새로운 고해상도 이미지를 제공하며, 풍경, 야생동물, 문화 및 역사적 장소 등 다양한 주제를 다룹니다. \n \n가벼운 프로그램으로 시스템 자원을 많이 사용하지 않으며, 간단한 인터페이스를 통해 쉽게 설정할 수 있습니다. 각 이미지에는 설명이 포함되어 있어 사용자가 세계에 대해 배울 수 있는 기회를 제공합니다. 또한 다중 모니터 설정, 수동 이미지 선택 등 사용자 지정 옵션도 제공합니다.\n\n\n▶프리웨어 - 개인/기업\n▶ Windows 10/11\n▶무료 다운로드◀\nhttps://www.microsoft.com/en-gb/bing/bing-wallpaper\n \n \n \n \n \n2. Rust (빠르고 메모리 효율적인 프로그래밍 언어)\n  빠르고 메모리 효율적인 프로그래밍 언어로, 런타임이나 가비지 컬렉터 없이 고성능 서비스와 임베디드 장치에서 작동할 수 있습니다. 강력한 타입 시스템과 소유권 모델을 통해 메모리 안전성과 스레드 안전성을 보장하며, 컴파일 시점에서 많은 종류의 버그를 제거할 수 있습니다. \n \n 우수한 문서, 친화적인 컴파일러, 그리고 뛰어난 툴링을 제공합니다. 커맨드 라인 도구, WebAssembly, 네트워킹, 임베디드 시스템 등 다양한 분야에서 사용되며, Firefox, Dropbox, Cloudflare 등 많은 기업들이 실제 제품에 Rust를 활용하고 있습니다.\n\n\n▶프리웨어 - 개인/기업(오픈소스)\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nRust Programming Language\nA language empowering everyone to build reliable and efficient software.\nwww.rust-lang.org\n\n \n \n \n \n \n3. SpaceSniffer (디스크 공간 사용을 시각적으로 분석하는 도구)\n 하드 드라이브의 디스크 공간 사용을 분석하는 도구입니다. 이 프로그램은 선택한 드라이브를 스캔하여 동적 디스크 맵을 생성하며, 이를 통해 가장 많은 공간을 차지하는 파일과 폴더를 쉽게 파악할 수 있습니다.\n \n실시간으로 맵을 확인할 수 있으며, 스캔 중 발생하는 변경 사항(파일 삭제, 이름 변경, 새 파일 추가 등)이 자동으로 반영됩니다. 폴더 태깅, 이름 필터링, 사용자 정의 파일 클래스 등 다양한 기능을 제공합니다. 또한 설치가 필요 없는 포터블 프로그램이라는 장점이 있습니다.\n\n\n▶프리웨어 - 개인/기업\n▶Windows 10/11 \n▶무료 다운로드 ◀\n\n \nSpaceSniffer, find lost disk space the easy way.\nBrief product description Latest release is 1.3.0.2 SpaceSniffer is a freeWare (donations are welcome) and portable tool application that lets you understand how folders and files are structured on your disks. By using a Treemap visualization layout, you h\nwww.uderzo.it\n\n \n \n \n \n \n4. Ultimaker Cura (3D 프린팅 소프트웨어)\n\n 세계적으로 인기 있는 오픈 소스 3D 프린팅 소프트웨어입니다. 초보자부터 전문가까지 모든 사용자를 위한 다양한 기능을 제공하며, 강력한 슬라이싱 엔진을 통해 3D 모델을 프린팅 가능한 G-코드로 변환합니다. \n \n사용자 친화적인 인터페이스와 400개 이상의 설정 옵션을 제공하여 사용자가 원하는 대로 프린팅을 조정할 수 있습니다. CAD 소프트웨어와의 통합, 다양한 파일 형식 지원, 플러그인을 통한 기능 확장 등이 가능합니다. 또한 정기적인 업데이트를 통해 지속적으로 개선되며, 무료로 사용할 수 있는 장점이 있습니다.\n\n\n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nUltiMaker Cura\nUltiMaker Cura는 수백만 명의 사용자가 신뢰하는 무료이며 사용하기 쉬운 3D 프린팅 소프트웨어입니다. 최상의 슬라이싱 및 프린팅 결과를 위해 400개 이상의 설정으로 3D 모델을 미세 조정하세요.\nultimaker.com\n\n \n \n \n \n \n5. CopyQ (클립보드 히스토리를 관리)\n  클립보드 히스토리를 관리하고 조작할 수 있는 강력한 도구입니다. 시스템 트레이에 상주하며, 최근 복사한 텍스트나 이미지를 쉽게 확인하고 붙여넣을 수 있습니다. 사용자는 클립보드 항목을 편집하고, 정렬하며, 탭으로 구성할 수 있고, 암호화나 자동 처리 같은 고급 기능도 제공합니다. \n \n38개의 단축키와 다양한 설정 옵션을 통해 높은 수준의 사용자 정의가 가능합니다. 그러나 복잡한 인터페이스와 부족한 문서화로 인해 초보자에게는 어려울 수 있으며, Windows 환경에 최적화되지 않은 면이 있습니다.\n\n\n▶프리웨어 - 개인/기업 (오픈소스)\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nCopyQ\nDownload CopyQ for free. Clipboard manager with advanced features. CopyQ is advanced clipboard manager with searchable and editable history with support for image formats, command line control and more.\nsourceforge.net",
        "guid": "http://muzbox.tistory.com/483454",
        "categories": [
          "NEWS/프리웨어 뉴스",
          "3d 프린팅 프로그램",
          "공개자료싷",
          "기업무료",
          "디스크 사용 공간 관리",
          "배경화면",
          "추천프로그램",
          "클립보드 관리",
          "프로그래밍",
          "프리웨어"
        ],
        "isoDate": "2024-08-07T03:11:08.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": []
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "khris'log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "WSL - GUI 설정 앱을 추가 2024년 5월 개선",
        "link": "https://jacking75.github.io/WSL-20240809/",
        "pubDate": "Fri, 09 Aug 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQ4OzKJH5hlpPEuguomv-Knqy-HQkdkS4A8PP28ur_TSdVpMuTI2eaZHC0r8vIMtGDR0hhmszgOR-6K/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/WSL-20240809/",
        "isoDate": "2024-08-08T15:00:00.000Z"
      },
      {
        "title": "golang - Go에서 text/template 을 사용하여 문서 만들기",
        "link": "https://jacking75.github.io/go_20240806/",
        "pubDate": "Tue, 06 Aug 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vT0sm3PW19IAPBwHeP7zCbUh9HGHn6TisJC3lQZIORISgNF3tEGv1HKR8rNvWJ7x4sW-noX-y_AH31W/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/go_20240806/",
        "isoDate": "2024-08-05T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "수비수 개발자",
        "link": "https://jeho.page/essay/2024/08/08/defense-fun.html",
        "pubDate": "2024-08-07T18:14:00.000Z",
        "author": "김재호",
        "content": "<p>누구나 축구할 때 공격을 하고 싶어 합니다.<br />\n제일 재밌으니까.<br />\n모든 스포트라이트를 받으니까.<br />\n골을 넣는 것만큼 짜릿한 게 없으니까.</p>\n\n<p>카카오에 처음 입사했을 때 무슨 일을 하고 싶냐고 물어봐서 카톡 서버를 하겠다고 했습니다.<br />\n가장 핵심 서비스니까.<br />\n가장 중요한 일을 해서 내가 스포트라이트를 다 받아야지.</p>\n\n<p>어려운 일 투성이라 적응하는 데 시간이 걸렸습니다.<br />\n6개월 정도 잠 못 자고 고생한 후에야 맘이 좀 편안해졌던 기억이 납니다.<br />\n그제야 돌아볼 여유가 생겼습니다.</p>\n\n<p>찾아오는 사람들이 항상 많았습니다.<br />\n어떤 날은 두세 팀이 동시에 찾아와서 줄 서서 기다리며 얘기하기도 했습니다.<br />\n핵심적인 팀에서 일하고 있는 건 분명했는데…<br />\n실제로 하고 있는 일은 짜친 일 투성이였습니다.</p>\n\n<p>서버 교체하기.<br />\n어드민 만들기.<br />\n스팸 찾아내서 처리하기.<br />\n카톡 더보기에 배너 달아주기.<br />\n이런 Api 만들어 줄 수 있냐는 상담해 주기.<br />\n클라이언트의 버그 등으로 돌발 상황이 생겼을 때 어떻게든 서버에서 먼저 해결해주기.<br />\n그리고 끝이 없는 고객 문의와 장애 처리.</p>\n\n<p>아, 이런 일하려고 지원한 게 아니었는데.<br />\n이래서 신기능 개발은 언제 해?<br />\n신규 기능을 만들기 보다 서비스를 지키기 위해 더 많은 힘을 쏟았습니다.<br />\n이거 공격수가 아니라 완전히 수비수잖아?</p>\n\n<p>이렇게 몇 년 하다가 공격수를 하겠다고 말했습니다.<br />\n나도 신규 서비스 만들고 싶다구!<br />\n그리고 카카오 플레이스를 만들었습니다.<br />\n대차게 말아 먹었습니다.<br />\n풀타임 출전, 0골.</p>\n\n<p>수비가 얼마나 가치 있는 일이고 중요한지는 나중에 알게 되었습니다.<br />\n든든한 수비수들이 있어서 공격도 마음껏 할 수 있는 거라는걸.<br />\n공격수가 골을 못 넣어도 좋은 수비 덕분에 다음 경기를 계속 해나갈 수 있다는걸.</p>\n\n<p>중요한 일을 하고 싶다는 마음이야 당연한 것이지만…<br />\n공격수가 가장 중요한 것이라는 생각은 잘못된 것이었습니다.</p>\n\n<p>회사에서도 서비스를 만들어 나가는 사람들과 지켜 내는 사람들이 있습니다.<br />\n레거시를 지켜내는 사람들은 좀처럼 스포트라이트를 받지 못합니다. 백업하는 존재로 인식될 뿐.<br />\n다행히도 최근에 김민재라는 국가대표 수비수를 보며 자란 아이들은 축구할 때 수비수를 하고 싶다는 말을 한답니다.<br />\n지켜내는 사람들이 지금보다 나은 대우를 받고 멋진 모습을 보여 주면 새로 들어온 사람들도 레거시를 다루는 일을 기꺼이 하려 하지 않을까?</p>\n\n<p>다시 회사에 간다면 수비수를 하더라도 이제는 즐기며 할 수 있을 것 같습니다.<br />\n가치 있고 중요한 일을 하는 거니까.<br />\n그리고 무엇보다… 잘 생각해 보면 이 일도 참 재밌거든요.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2022/10/16/kakaotalk-server-development.html\">카카오톡 서버 개발의 추억</a></li>\n  <li><a href=\"https://brunch.co.kr/@buildingking/117\">사용자 10만 명의 서비스를 만들기</a></li>\n  <li><a href=\"https://brunch.co.kr/@buildingking/47\">절대 포기하지 않는 사람</a></li>\n</ul>",
        "contentSnippet": "누구나 축구할 때 공격을 하고 싶어 합니다.\n카카오에 처음 입사했을 때 무슨 일을 하고 싶냐고 물어봐서 카톡 서버를 하겠다고 했습니다.\n어려운 일 투성이라 적응하는 데 시간이 걸렸습니다.\n찾아오는 사람들이 항상 많았습니다.\n서버 교체하기.\n아, 이런 일하려고 지원한 게 아니었는데.\n이렇게 몇 년 하다가 공격수를 하겠다고 말했습니다.\n수비가 얼마나 가치 있는 일이고 중요한지는 나중에 알게 되었습니다.\n중요한 일을 하고 싶다는 마음이야 당연한 것이지만…\n회사에서도 서비스를 만들어 나가는 사람들과 지켜 내는 사람들이 있습니다.\n다시 회사에 간다면 수비수를 하더라도 이제는 즐기며 할 수 있을 것 같습니다.\n\n함께 읽으면 좋은 글:\n카카오톡 서버 개발의 추억\n사용자 10만 명의 서비스를 만들기\n절대 포기하지 않는 사람",
        "summary": "누구나 축구할 때 공격을 하고 싶어 합니다. 제일 재밌으니까. 모든 스포트라이트를 받으니까. 골을 넣는 것만큼 짜릿한 게 없으니까.",
        "id": "https://jeho.page/essay/2024/08/08/defense-fun",
        "isoDate": "2024-08-07T18:14:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "자바스크립트는 왜이케 복잡해졌나",
        "link": "http://serverdown.tistory.com/789",
        "pubDate": "Wed, 7 Aug 2024 21:25:05 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/789#entry789comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=Mah0QakFaJk&amp;t=274s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=Mah0QakFaJk&amp;t=274s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=Mah0QakFaJk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/c2W6Yu/hyWKwVpIcg/941VFXIP67moclL3INOwI0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"자바스크립트 모듈의 안타깝고(?) 치열한 역사\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/Mah0QakFaJk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">용량 줄이고 이름이 겹쳐서 이렇게 돼었음</p>\n<p data-ke-size=\"size16\">역사에 대한 좋은 내용이라 가져와봤습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=Mah0QakFaJk&t=274s\n\n\n\n용량 줄이고 이름이 겹쳐서 이렇게 돼었음\n역사에 대한 좋은 내용이라 가져와봤습니다.",
        "guid": "http://serverdown.tistory.com/789",
        "categories": [
          "유튜브",
          "JavaScript"
        ],
        "isoDate": "2024-08-07T12:25:05.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 Building Library\\Bee\\artifacts\\Android\\fy9m9\\libil2cpp.so failed with output: ld.lld: error: undefined symbol: ~~ 오류",
        "link": "http://serverdown.tistory.com/788",
        "pubDate": "Wed, 7 Aug 2024 14:57:09 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/788#entry788comment",
        "content": "<p data-ke-size=\"size16\">본문:&nbsp;</p>\n<p data-ke-size=\"size16\"><a href=\"https://velog.io/@thisisone/unity-%EB%B9%8C%EB%93%9C-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%EA%B8%B0-Building-LibraryBeeartifactsAndroidfy9m9libil2cpp.so-failed-with-outputld.lld-error-undefined-symbol-jslibcallaction-referenced-by-Assembly-CSharp1.cpp9123\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://velog.io/@thisisone/unity-%EB%B9%8C%EB%93%9C-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%EA%B8%B0-Building-LibraryBeeartifactsAndroidfy9m9libil2cpp.so-failed-with-outputld.lld-error-undefined-symbol-jslibcallaction-referenced-by-Assembly-CSharp1.cpp9123</a></p>\n<figure id=\"og_1723009811534\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"unity 빌드 오류 해결기 / Building Library\\Bee\\artifacts\\Android\\fy9m9\\libil2cpp.so failed with output:\nld.lld: error: und\" data-og-description=\"안드로이드 빌드 해보까 하니 바로 에러가나며 빌드가 안되었다.기존엔 빌드를 mono 로 하고 있었는데 il2cpp 로 고치니 문제 생겼습니다.에러메세지를 대충보고 구글검색을 시작했으나 NDK 버그라\" data-og-host=\"velog.io\" data-og-source-url=\"https://velog.io/@thisisone/unity-%EB%B9%8C%EB%93%9C-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%EA%B8%B0-Building-LibraryBeeartifactsAndroidfy9m9libil2cpp.so-failed-with-outputld.lld-error-undefined-symbol-jslibcallaction-referenced-by-Assembly-CSharp1.cpp9123\" data-og-url=\"https://velog.io/@thisisone/unity-빌드-오류-해결기-Building-LibraryBeeartifactsAndroidfy9m9libil2cpp.so-failed-with-outputld.lld-error-undefined-symbol-jslibcallaction-referenced-by-Assembly-CSharp1.cpp9123\" data-og-image=\"https://scrap.kakaocdn.net/dn/ctnIcO/hyWKJAlJjV/pTnLBhf8OeUazBdYjYdB1k/img.png?width=712&amp;height=193&amp;face=0_0_712_193,https://scrap.kakaocdn.net/dn/gap9j/hyWKG4Heub/ieJdkAKFhg6rMv1tkfICo0/img.png?width=712&amp;height=193&amp;face=0_0_712_193,https://scrap.kakaocdn.net/dn/byxlXi/hyWKw8RORo/IZwUT6Mk5x64Dp6AhcJ0uk/img.png?width=482&amp;height=492&amp;face=0_0_482_492\"><a href=\"https://velog.io/@thisisone/unity-%EB%B9%8C%EB%93%9C-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%EA%B8%B0-Building-LibraryBeeartifactsAndroidfy9m9libil2cpp.so-failed-with-outputld.lld-error-undefined-symbol-jslibcallaction-referenced-by-Assembly-CSharp1.cpp9123\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://velog.io/@thisisone/unity-%EB%B9%8C%EB%93%9C-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%EA%B8%B0-Building-LibraryBeeartifactsAndroidfy9m9libil2cpp.so-failed-with-outputld.lld-error-undefined-symbol-jslibcallaction-referenced-by-Assembly-CSharp1.cpp9123\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/ctnIcO/hyWKJAlJjV/pTnLBhf8OeUazBdYjYdB1k/img.png?width=712&amp;height=193&amp;face=0_0_712_193,https://scrap.kakaocdn.net/dn/gap9j/hyWKG4Heub/ieJdkAKFhg6rMv1tkfICo0/img.png?width=712&amp;height=193&amp;face=0_0_712_193,https://scrap.kakaocdn.net/dn/byxlXi/hyWKw8RORo/IZwUT6Mk5x64Dp6AhcJ0uk/img.png?width=482&amp;height=492&amp;face=0_0_482_492');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">unity 빌드 오류 해결기 / Building Library\\Bee\\artifacts\\Android\\fy9m9\\libil2cpp.so failed with output: ld.lld: error: und</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">안드로이드 빌드 해보까 하니 바로 에러가나며 빌드가 안되었다.기존엔 빌드를 mono 로 하고 있었는데 il2cpp 로 고치니 문제 생겼습니다.에러메세지를 대충보고 구글검색을 시작했으나 NDK 버그라</p>\n<p class=\"og-host\" data-ke-size=\"size16\">velog.io</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">간단히 말에서</p>\n<p data-ke-size=\"size16\">&nbsp;undefined symbol: ~~~&nbsp;</p>\n<p data-ke-size=\"size16\">이부분이 중요한 ~~~ 가 함수명이고 외부에 본체가 있는 함수를 의미합니다</p>\n<p data-ke-size=\"size16\">보안문제로 애플과 구글은 li2cpp 방식으로 전환하지 한참되었고 이것은</p>\n<p data-ke-size=\"size16\">외부에 있는 라이브러리를 호출하는 것을 금지합니다.</p>\n<p data-ke-size=\"size16\">빌드할때 모두 포함시켜 유저에게 전달 되었을땐 내용을 바꿔치지 못하게 하는 용도인거 같습니다.</p>\n<p data-ke-size=\"size16\">빌드시간이 많이 느려지는군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<pre class=\"cs\" style=\"background-color: #000000; color: #000000; text-align: left;\"><code>[DllImport(\"__Internal\")]\n\tprivate static extern void jslib_hello();</code></pre>\n<p data-ke-size=\"size16\">저는 이런식으로 선언된 함수를 암드로이드 + li2cpp 로 빌드하려고할때 실패했구요</p>\n<p data-ke-size=\"size16\">위함수는 webgl 에서 사용하는 코드인데 안드로이드에서도 남아있었군요</p>\n<p data-ke-size=\"size16\">#if 를 이용해 주석처리해줬습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">잘못된 방향으로 검색하면 안드로이드 NDK 문제나 버전 문제등이 나오는데&nbsp;</p>\n<p data-ke-size=\"size16\">이러면 시간이 많이 낭비될 수 있으니&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp;undefined symbol:&nbsp;</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">뒤에 나오는 함수 이름이 내소스에 존재하는지 확인해보시기 바랍니다.</span></p>",
        "contentSnippet": "본문: \nhttps://velog.io/@thisisone/unity-%EB%B9%8C%EB%93%9C-%EC%98%A4%EB%A5%98-%ED%95%B4%EA%B2%B0%EA%B8%B0-Building-LibraryBeeartifactsAndroidfy9m9libil2cpp.so-failed-with-outputld.lld-error-undefined-symbol-jslibcallaction-referenced-by-Assembly-CSharp1.cpp9123\n\n \nunity 빌드 오류 해결기 / Building Library\\Bee\\artifacts\\Android\\fy9m9\\libil2cpp.so failed with output: ld.lld: error: und\n안드로이드 빌드 해보까 하니 바로 에러가나며 빌드가 안되었다.기존엔 빌드를 mono 로 하고 있었는데 il2cpp 로 고치니 문제 생겼습니다.에러메세지를 대충보고 구글검색을 시작했으나 NDK 버그라\nvelog.io\n\n \n간단히 말에서\n undefined symbol: ~~~ \n이부분이 중요한 ~~~ 가 함수명이고 외부에 본체가 있는 함수를 의미합니다\n보안문제로 애플과 구글은 li2cpp 방식으로 전환하지 한참되었고 이것은\n외부에 있는 라이브러리를 호출하는 것을 금지합니다.\n빌드할때 모두 포함시켜 유저에게 전달 되었을땐 내용을 바꿔치지 못하게 하는 용도인거 같습니다.\n빌드시간이 많이 느려지는군요\n \n[DllImport(\"__Internal\")]\n\tprivate static extern void jslib_hello();\n저는 이런식으로 선언된 함수를 암드로이드 + li2cpp 로 빌드하려고할때 실패했구요\n위함수는 webgl 에서 사용하는 코드인데 안드로이드에서도 남아있었군요\n#if 를 이용해 주석처리해줬습니다.\n \n잘못된 방향으로 검색하면 안드로이드 NDK 문제나 버전 문제등이 나오는데 \n이러면 시간이 많이 낭비될 수 있으니 \n undefined symbol: \n뒤에 나오는 함수 이름이 내소스에 존재하는지 확인해보시기 바랍니다.",
        "guid": "http://serverdown.tistory.com/788",
        "categories": [
          "프로그래밍/개발메모",
          "li2cpp",
          "unity"
        ],
        "isoDate": "2024-08-07T05:57:09.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "node.js 와 cafe24 smtp 활용해서 자동 메일 보내기 / nodemailer 활용",
        "link": "http://serverdown.tistory.com/787",
        "pubDate": "Wed, 7 Aug 2024 14:49:09 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/787#entry787comment",
        "content": "<p data-ke-size=\"size16\">본문:</p>\n<p data-ke-size=\"size16\"><a href=\"https://velog.io/@thisisone/cafe24-smtp-node.js-nodemailer-%EB%A1%9C-%EB%A9%94%EC%9D%BC-%EB%B3%B4%EB%82%B4%EA%B8%B0\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://velog.io/@thisisone/cafe24-smtp-node.js-nodemailer-%EB%A1%9C-%EB%A9%94%EC%9D%BC-%EB%B3%B4%EB%82%B4%EA%B8%B0</a></p>\n<figure id=\"og_1723009685218\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"node.js 와 cafe24 smtp 활용해서 자동 메일 보내기 / nodemailer 활용\" data-og-description=\"지난번에 안되서 cnode.js 로 성공했습니다.c다행cafe24 는 낮은 보안 이라 옵션을 좀 넣어야합니다.typescript 로 작업했습니다.js 이용자는 알아서 잘 ...계정엔 아이디@주소 형식의 풀네임이 들어가야\" data-og-host=\"velog.io\" data-og-source-url=\"https://velog.io/@thisisone/cafe24-smtp-node.js-nodemailer-%EB%A1%9C-%EB%A9%94%EC%9D%BC-%EB%B3%B4%EB%82%B4%EA%B8%B0\" data-og-url=\"https://velog.io/@thisisone/cafe24-smtp-node.js-nodemailer-로-메일-보내기\" data-og-image=\"https://scrap.kakaocdn.net/dn/bkxOiJ/hyWKHCyFTe/hRY4L5m0Ok6Brr2rCgIuM1/img.png?width=950&amp;height=500&amp;face=0_0_950_500\"><a href=\"https://velog.io/@thisisone/cafe24-smtp-node.js-nodemailer-%EB%A1%9C-%EB%A9%94%EC%9D%BC-%EB%B3%B4%EB%82%B4%EA%B8%B0\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://velog.io/@thisisone/cafe24-smtp-node.js-nodemailer-%EB%A1%9C-%EB%A9%94%EC%9D%BC-%EB%B3%B4%EB%82%B4%EA%B8%B0\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bkxOiJ/hyWKHCyFTe/hRY4L5m0Ok6Brr2rCgIuM1/img.png?width=950&amp;height=500&amp;face=0_0_950_500');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">node.js 와 cafe24 smtp 활용해서 자동 메일 보내기 / nodemailer 활용</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">지난번에 안되서 cnode.js 로 성공했습니다.c다행cafe24 는 낮은 보안 이라 옵션을 좀 넣어야합니다.typescript 로 작업했습니다.js 이용자는 알아서 잘 ...계정엔 아이디@주소 형식의 풀네임이 들어가야</p>\n<p class=\"og-host\" data-ke-size=\"size16\">velog.io</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">velog 로 옮겨서 거기 링크 남깁니다.</p>\n<p data-ke-size=\"size16\">velog 는 검색이 잘안디ㅗ고</p>\n<p data-ke-size=\"size16\">티스토리는 복붙이 잘안되고 검색은되고</p>\n<p data-ke-size=\"size16\">어질어질합니다.</p>",
        "contentSnippet": "본문:\nhttps://velog.io/@thisisone/cafe24-smtp-node.js-nodemailer-%EB%A1%9C-%EB%A9%94%EC%9D%BC-%EB%B3%B4%EB%82%B4%EA%B8%B0\n\n \nnode.js 와 cafe24 smtp 활용해서 자동 메일 보내기 / nodemailer 활용\n지난번에 안되서 cnode.js 로 성공했습니다.c다행cafe24 는 낮은 보안 이라 옵션을 좀 넣어야합니다.typescript 로 작업했습니다.js 이용자는 알아서 잘 ...계정엔 아이디@주소 형식의 풀네임이 들어가야\nvelog.io\n\n \n \nvelog 로 옮겨서 거기 링크 남깁니다.\nvelog 는 검색이 잘안디ㅗ고\n티스토리는 복붙이 잘안되고 검색은되고\n어질어질합니다.",
        "guid": "http://serverdown.tistory.com/787",
        "categories": [
          "프로그래밍/개발메모",
          "cafe24",
          "Node.js"
        ],
        "isoDate": "2024-08-07T05:49:09.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Hybrid's Notes",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "오프라이트 &amp; TickTick 연동하기 (feat. Zapier)",
        "link": "https://jojoldu.tistory.com/796",
        "pubDate": "Sat, 10 Aug 2024 14:36:33 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/796#entry796comment",
        "content": "<p data-ke-size=\"size16\">요즘 Todo App을 <a href=\"https://www.offlight.work/ko\">오프라이트</a>로 바꿔서 사용해보고 있다.</p>\n<p data-ke-size=\"size16\">기존에 TickTick을 사용했는데, TickTick이 가지는 여러가지 장점이 있지만, 아직 통합 기능이 부족하다.<br />분산된 여러 업무 도구들이 자동으로 연계 되어 굳이 내가 별도로 기록할 일이 없도록 하는 것이 필요한데, 그런 부분에서 TickTick은 현재까지 (2024.08.06) 구글 캘린더 통합만 지원한다.</p>\n<p data-ke-size=\"size16\">반면 오프라이트의 경우 슬랙, 지메일, 구글 캘린더, Zapier 등 여러 플랫폼을 지원하고 있어 파편화 된 업무 정보를 한 곳에서 볼 수 있다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">물론 이런 업무 도구에 쌓인 정보들은 회사의 중요 정보가 되기도 하기 때문에 공개 범위를 적절하게 사용하는 것이 좋다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">다만, 여전히 TickTick도 함께 사용중인데, 그 이유는 <b>모바일 기기에서의 사용성이 떨어지기 때문</b>이다.</p>\n<p data-ke-size=\"size16\">TickTick 은 여태 사용해본 Todo App 중 에디터의 사용성이 가장 좋았다.<br /><b>대부분의 기기에서 준수한 사용성을 가진 네이티브 앱</b>을 지원한다.<br />나처럼 안드로이드, 맥 OS, IOS (아이패드), 윈도우를 모두 다 사용하는 사람에게는 TickTick은 아주 좋은 Todo App이다.<br />안드로이드와 같은 모바일 기기에서 사용하기 좋은 준수한 에디터를 지원하기 때문에 <b>이동 중에 빠르게 할일을 작성해야할때 TickTick의 Task 에디터는 아주 편하고 활용도가 높았다</b>.</p>\n<p data-ke-size=\"size16\">아직까지 <b>오프라이트에서는 제대로 된 모바일 앱이 없다</b>.<br />앱 뿐만 아니라 <b>모바일 웹도 제대로 지원하지 못하고 있다</b>.</p>\n<p data-ke-size=\"size16\">물론 모비일 웹을 지원하더라도 Todo App 특성상 네이티브 앱이 아니면 사용성 차이가 크기 때문에 결국엔 네이티브 모바일 앱이 출시가 되어야만 제대로 사용할 수 있다고 생각한다.</p>\n<p data-ke-size=\"size16\">그래서 <b>PC에서는 오프라이트 앱</b>을, <b>모바일에서는 TickTick</b>을 사용하고, 이를 오프라이트의 통합 기능을 활용해서 <b>TickTick에 쓴 내용이 자동으로 오프라이트에 연동 되도록</b>해서 사용중이다.</p>\n<p data-ke-size=\"size16\">이에 대해 정리한다.</p>\n<h2 data-ke-size=\"size26\">연동</h2>\n<p data-ke-size=\"size16\">TickTick과 오프라이트는 서로간에 공식적으로 연동을 지원하지 않기 때문에 중간에 Zapier를 사용해야만 한다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"1546\" data-origin-height=\"638\"><span data-url=\"https://blog.kakaocdn.net/dn/SiIY7/btsI07HZ5Cl/xki4aA9wYQipIjn80kUUR0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/SiIY7/btsI07HZ5Cl/xki4aA9wYQipIjn80kUUR0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/SiIY7/btsI07HZ5Cl/xki4aA9wYQipIjn80kUUR0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FSiIY7%2FbtsI07HZ5Cl%2Fxki4aA9wYQipIjn80kUUR0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"1.png\" data-origin-width=\"1546\" data-origin-height=\"638\"/></span></figure>\n</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\"><a href=\"https://www.offlight.work/ko/docs/zapier\">Zapier를 이용한 오프라이트 연동은 공식 문서</a>에서 자세히 설명하고 있어 이를 참고해서 다른 다양한 연동도 해봐도 좋다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">Zapier는 Webhook을 쓰는 것일까 싶지만, <b>Webhook은 프리미엄 구독시에만 사용</b>할 수 있다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2.png\" data-origin-width=\"1012\" data-origin-height=\"456\"><span data-url=\"https://blog.kakaocdn.net/dn/ccAuL8/btsIZWgFcpy/HupDHKG2sfGXMEVmmg7yvK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ccAuL8/btsIZWgFcpy/HupDHKG2sfGXMEVmmg7yvK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ccAuL8/btsIZWgFcpy/HupDHKG2sfGXMEVmmg7yvK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FccAuL8%2FbtsIZWgFcpy%2FHupDHKG2sfGXMEVmmg7yvK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"2.png\" data-origin-width=\"1012\" data-origin-height=\"456\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">다행히 <b>오프라이트는 벌써 Zapier App으로 사용이 가능</b>하다.<br />(Beta 버전이라 이후 어떻게 될지는 모르겠다.)</p>\n<p data-ke-size=\"size16\">그래서 정식으로 지원하는 TickTick과 Offlight App 을 연동한다.</p>\n<p data-ke-size=\"size16\">Zapier에서 Zap 생성 페이지로 가서 아래와 같이 선택한다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>Trigger: TickTick</li>\n<li>Action: Offlight</li>\n</ul>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"3.png\" data-origin-width=\"1224\" data-origin-height=\"1000\"><span data-url=\"https://blog.kakaocdn.net/dn/bedMfs/btsI0hdNn4k/MPVfZGt4skcPvqaqto2oHK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bedMfs/btsI0hdNn4k/MPVfZGt4skcPvqaqto2oHK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bedMfs/btsI0hdNn4k/MPVfZGt4skcPvqaqto2oHK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbedMfs%2FbtsI0hdNn4k%2FMPVfZGt4skcPvqaqto2oHK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"511\" height=\"417\" data-filename=\"3.png\" data-origin-width=\"1224\" data-origin-height=\"1000\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">Trigger에는 TickTick App을 등록하고</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"4.png\" data-origin-width=\"988\" data-origin-height=\"364\"><span data-url=\"https://blog.kakaocdn.net/dn/4AqnO/btsI0rgbEoi/UYKBAewohCit6BnNioVCWk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/4AqnO/btsI0rgbEoi/UYKBAewohCit6BnNioVCWk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/4AqnO/btsI0rgbEoi/UYKBAewohCit6BnNioVCWk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F4AqnO%2FbtsI0rgbEoi%2FUYKBAewohCit6BnNioVCWk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"651\" height=\"240\" data-filename=\"4.png\" data-origin-width=\"988\" data-origin-height=\"364\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">Event를 <code>New Task Created</code> 로 선택하고, 본인의 TickTick 계정과 연동한다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"5.png\" data-origin-width=\"2002\" data-origin-height=\"1304\"><span data-url=\"https://blog.kakaocdn.net/dn/captjo/btsI0CoiiFA/XANoONAKNTmlV5bntR9kUK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/captjo/btsI0CoiiFA/XANoONAKNTmlV5bntR9kUK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/captjo/btsI0CoiiFA/XANoONAKNTmlV5bntR9kUK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcaptjo%2FbtsI0CoiiFA%2FXANoONAKNTmlV5bntR9kUK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"605\" height=\"394\" data-filename=\"5.png\" data-origin-width=\"2002\" data-origin-height=\"1304\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이후 Action에는 Offlight 를 선택한다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"6.png\" data-origin-width=\"1008\" data-origin-height=\"330\"><span data-url=\"https://blog.kakaocdn.net/dn/bw26Fc/btsI06oMFko/47XcZGBEAAmk22GQGfGoK0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bw26Fc/btsI06oMFko/47XcZGBEAAmk22GQGfGoK0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bw26Fc/btsI06oMFko/47XcZGBEAAmk22GQGfGoK0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbw26Fc%2FbtsI06oMFko%2F47XcZGBEAAmk22GQGfGoK0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"631\" height=\"207\" data-filename=\"6.png\" data-origin-width=\"1008\" data-origin-height=\"330\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">Offlight 의 각 항목에 맞춰 TickTick의 속성들을 등록한다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"7.png\" data-origin-width=\"1082\" data-origin-height=\"1526\"><span data-url=\"https://blog.kakaocdn.net/dn/lyhQs/btsIZXzRNwG/wys0EuHaFaOwlAk5R4WRO1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/lyhQs/btsIZXzRNwG/wys0EuHaFaOwlAk5R4WRO1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/lyhQs/btsIZXzRNwG/wys0EuHaFaOwlAk5R4WRO1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FlyhQs%2FbtsIZXzRNwG%2Fwys0EuHaFaOwlAk5R4WRO1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"610\" height=\"860\" data-filename=\"7.png\" data-origin-width=\"1082\" data-origin-height=\"1526\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">TaskName, TaskNote, Source Link 를 꼭 등록해둬야 Offlight 에서 사용하기 수월하다.<br />이 외에 EndDate 등 다양한 속성을 취향에 맞게 등록한다.</p>\n<p data-ke-size=\"size16\">등록이 다 끝나고나면 TickTick 에 Task를 생성해본다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"8.png\" data-origin-width=\"1626\" data-origin-height=\"464\"><span data-url=\"https://blog.kakaocdn.net/dn/nBzgY/btsIZK1SEPq/bf235otWdK37HkBTPRsrfK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/nBzgY/btsIZK1SEPq/bf235otWdK37HkBTPRsrfK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/nBzgY/btsIZK1SEPq/bf235otWdK37HkBTPRsrfK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FnBzgY%2FbtsIZK1SEPq%2Fbf235otWdK37HkBTPRsrfK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"8.png\" data-origin-width=\"1626\" data-origin-height=\"464\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">Task 생성 후 Zap History에서 Zap이 실행되었는지 확인한다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"9.png\" data-origin-width=\"2364\" data-origin-height=\"408\"><span data-url=\"https://blog.kakaocdn.net/dn/Yw9w3/btsI0uRy0gt/mrERZTzpkjdg7kz8S8PFx1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Yw9w3/btsI0uRy0gt/mrERZTzpkjdg7kz8S8PFx1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Yw9w3/btsI0uRy0gt/mrERZTzpkjdg7kz8S8PFx1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FYw9w3%2FbtsI0uRy0gt%2FmrERZTzpkjdg7kz8S8PFx1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"9.png\" data-origin-width=\"2364\" data-origin-height=\"408\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">정상적으로 수행되었다면 Offlight에 자동으로 Task가 생성되었는지 확인한다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"10.png\" data-origin-width=\"1674\" data-origin-height=\"627\"><span data-url=\"https://blog.kakaocdn.net/dn/c7T8l0/btsI06be7fJ/dswYZ37hhBlX6kPEdsby81/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c7T8l0/btsI06be7fJ/dswYZ37hhBlX6kPEdsby81/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c7T8l0/btsI06be7fJ/dswYZ37hhBlX6kPEdsby81/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc7T8l0%2FbtsI06be7fJ%2FdswYZ37hhBlX6kPEdsby81%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"10.png\" data-origin-width=\"1674\" data-origin-height=\"627\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style2\">Offlight 에서 Task를 Done 처리하면 TickTick 에도 자동으로 Complete 되도록 하는 자동화도 가능하다.<br />다만, <b>TickTick과 연동된 Task에만 Zapier가 실행되는 조건문</b>을 추가할 수 없어, <b>Zapier 무료 플랜 제한 (월 100건의 Zap만 실행) 을 쉽게 초과해버린다</b>.<br />그래서 Done에 대한 연동은 하지 않고 생성에 대한 것만 연동해둔다.<br />본인이 Zapier 프리미엄 플랜을 사용한다면 당연히 Done Task도 연동하면 좋다.</blockquote>",
        "contentSnippet": "요즘 Todo App을 오프라이트로 바꿔서 사용해보고 있다.\n기존에 TickTick을 사용했는데, TickTick이 가지는 여러가지 장점이 있지만, 아직 통합 기능이 부족하다.\n분산된 여러 업무 도구들이 자동으로 연계 되어 굳이 내가 별도로 기록할 일이 없도록 하는 것이 필요한데, 그런 부분에서 TickTick은 현재까지 (2024.08.06) 구글 캘린더 통합만 지원한다.\n반면 오프라이트의 경우 슬랙, 지메일, 구글 캘린더, Zapier 등 여러 플랫폼을 지원하고 있어 파편화 된 업무 정보를 한 곳에서 볼 수 있다.\n물론 이런 업무 도구에 쌓인 정보들은 회사의 중요 정보가 되기도 하기 때문에 공개 범위를 적절하게 사용하는 것이 좋다.\n다만, 여전히 TickTick도 함께 사용중인데, 그 이유는 모바일 기기에서의 사용성이 떨어지기 때문이다.\nTickTick 은 여태 사용해본 Todo App 중 에디터의 사용성이 가장 좋았다.\n대부분의 기기에서 준수한 사용성을 가진 네이티브 앱을 지원한다.\n나처럼 안드로이드, 맥 OS, IOS (아이패드), 윈도우를 모두 다 사용하는 사람에게는 TickTick은 아주 좋은 Todo App이다.\n안드로이드와 같은 모바일 기기에서 사용하기 좋은 준수한 에디터를 지원하기 때문에 이동 중에 빠르게 할일을 작성해야할때 TickTick의 Task 에디터는 아주 편하고 활용도가 높았다.\n아직까지 오프라이트에서는 제대로 된 모바일 앱이 없다.\n앱 뿐만 아니라 모바일 웹도 제대로 지원하지 못하고 있다.\n물론 모비일 웹을 지원하더라도 Todo App 특성상 네이티브 앱이 아니면 사용성 차이가 크기 때문에 결국엔 네이티브 모바일 앱이 출시가 되어야만 제대로 사용할 수 있다고 생각한다.\n그래서 PC에서는 오프라이트 앱을, 모바일에서는 TickTick을 사용하고, 이를 오프라이트의 통합 기능을 활용해서 TickTick에 쓴 내용이 자동으로 오프라이트에 연동 되도록해서 사용중이다.\n이에 대해 정리한다.\n연동\nTickTick과 오프라이트는 서로간에 공식적으로 연동을 지원하지 않기 때문에 중간에 Zapier를 사용해야만 한다.\n\n\n\nZapier를 이용한 오프라이트 연동은 공식 문서에서 자세히 설명하고 있어 이를 참고해서 다른 다양한 연동도 해봐도 좋다.\nZapier는 Webhook을 쓰는 것일까 싶지만, Webhook은 프리미엄 구독시에만 사용할 수 있다.\n\n\n다행히 오프라이트는 벌써 Zapier App으로 사용이 가능하다.\n(Beta 버전이라 이후 어떻게 될지는 모르겠다.)\n그래서 정식으로 지원하는 TickTick과 Offlight App 을 연동한다.\nZapier에서 Zap 생성 페이지로 가서 아래와 같이 선택한다.\nTrigger: TickTick\nAction: Offlight\n\n\nTrigger에는 TickTick App을 등록하고\n\n\nEvent를 New Task Created 로 선택하고, 본인의 TickTick 계정과 연동한다.\n\n\n이후 Action에는 Offlight 를 선택한다.\n\n\nOfflight 의 각 항목에 맞춰 TickTick의 속성들을 등록한다.\n\n\nTaskName, TaskNote, Source Link 를 꼭 등록해둬야 Offlight 에서 사용하기 수월하다.\n이 외에 EndDate 등 다양한 속성을 취향에 맞게 등록한다.\n등록이 다 끝나고나면 TickTick 에 Task를 생성해본다.\n\n\nTask 생성 후 Zap History에서 Zap이 실행되었는지 확인한다.\n\n\n정상적으로 수행되었다면 Offlight에 자동으로 Task가 생성되었는지 확인한다.\n\n\n \nOfflight 에서 Task를 Done 처리하면 TickTick 에도 자동으로 Complete 되도록 하는 자동화도 가능하다.\n다만, TickTick과 연동된 Task에만 Zapier가 실행되는 조건문을 추가할 수 없어, Zapier 무료 플랜 제한 (월 100건의 Zap만 실행) 을 쉽게 초과해버린다.\n그래서 Done에 대한 연동은 하지 않고 생성에 대한 것만 연동해둔다.\n본인이 Zapier 프리미엄 플랜을 사용한다면 당연히 Done Task도 연동하면 좋다.",
        "guid": "https://jojoldu.tistory.com/796",
        "categories": [
          "기타",
          "notion",
          "offlight",
          "TickTick",
          "TODO",
          "생산성",
          "오프라이트"
        ],
        "isoDate": "2024-08-10T05:36:33.000Z"
      },
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "행복한 일들은 매일 있다",
        "link": "https://jojoldu.tistory.com/795",
        "pubDate": "Mon, 5 Aug 2024 22:58:03 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/795#entry795comment",
        "content": "<p data-ke-size=\"size16\">예전에 곰돌이 푸? 동화에서 봤던 것 같은데,<br />다음의 글귀가 오래 오래 기억에 남았다.</p>\n<p data-ke-size=\"size16\">\"<b>매일 매일 행복할 순 없지만, 행복한 일은 매일 매일 있다</b>.\"</p>\n<p data-ke-size=\"size16\">구내 식당에 내가 좋아하는 메뉴가 나왔을 때,<br />횡단보도에 도착하자마자 신호가 바뀔 때,<br />헬스장에서 내가 좋아하는 노래가 나올 때 등등<br />사소한 행복한 일들이 많다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"1084\" data-origin-height=\"1120\"><span data-url=\"https://blog.kakaocdn.net/dn/ylXaz/btsIWaYYGIF/RFQDtEuGxVXbX54MhU8WE0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ylXaz/btsIWaYYGIF/RFQDtEuGxVXbX54MhU8WE0/img.png\" data-alt=\"아침 식사가 너무 맛있었던 날\"><img src=\"https://blog.kakaocdn.net/dn/ylXaz/btsIWaYYGIF/RFQDtEuGxVXbX54MhU8WE0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FylXaz%2FbtsIWaYYGIF%2FRFQDtEuGxVXbX54MhU8WE0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"1.png\" data-origin-width=\"1084\" data-origin-height=\"1120\"/></span><figcaption>아침 식사가 너무 맛있었던 날</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 이런 사소하지만 누가 봐도 좋은 것들이 아니더라도,<br />하루의 대부분은 행복한 일들이다.</p>\n<p data-ke-size=\"size16\">회의가 많은 날은 회의실 이동하느라 많이 걸어 1만보를 채우기 위해 굳이 따로 시간을 낼 필요가 없어서 좋다.<br />일이 많아 늦게 가는 날은 비싼 저녁 식사를 먹을 수 있고, 집까지 택시로 갈 수 있어서 좋다.<br />오전 회의가 늦게 끝나 점심을 늦게 먹는 날은 혼자서 조용히 식사를 하면서 생각을 정리할 수 있어서 좋다.</p>\n<p data-ke-size=\"size16\"><b>행복한 것도 습관이다</b>.<br />작은 것에도 행복한 것을 습관으로 들이지 않으면,<br />큰 돈을 벌어도,<br />높은 지위에 올라도,<br />내가 원하는 어떠한 무언가를 얻는 그러한 아주 큰 쾌락이 와도 그걸 행복으로 만들 수 없다.</p>\n<p data-ke-size=\"size16\">행복한 일은 매일 매일 있다.</p>",
        "contentSnippet": "예전에 곰돌이 푸? 동화에서 봤던 것 같은데,\n다음의 글귀가 오래 오래 기억에 남았다.\n\"매일 매일 행복할 순 없지만, 행복한 일은 매일 매일 있다.\"\n구내 식당에 내가 좋아하는 메뉴가 나왔을 때,\n횡단보도에 도착하자마자 신호가 바뀔 때,\n헬스장에서 내가 좋아하는 노래가 나올 때 등등\n사소한 행복한 일들이 많다.\n아침 식사가 너무 맛있었던 날\n\n\n \n하지만 이런 사소하지만 누가 봐도 좋은 것들이 아니더라도,\n하루의 대부분은 행복한 일들이다.\n회의가 많은 날은 회의실 이동하느라 많이 걸어 1만보를 채우기 위해 굳이 따로 시간을 낼 필요가 없어서 좋다.\n일이 많아 늦게 가는 날은 비싼 저녁 식사를 먹을 수 있고, 집까지 택시로 갈 수 있어서 좋다.\n오전 회의가 늦게 끝나 점심을 늦게 먹는 날은 혼자서 조용히 식사를 하면서 생각을 정리할 수 있어서 좋다.\n행복한 것도 습관이다.\n작은 것에도 행복한 것을 습관으로 들이지 않으면,\n큰 돈을 벌어도,\n높은 지위에 올라도,\n내가 원하는 어떠한 무언가를 얻는 그러한 아주 큰 쾌락이 와도 그걸 행복으로 만들 수 없다.\n행복한 일은 매일 매일 있다.",
        "guid": "https://jojoldu.tistory.com/795",
        "categories": [
          "생각정리",
          "스타트업",
          "인프랩",
          "커리어",
          "회사 생활"
        ],
        "isoDate": "2024-08-05T13:58:03.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": [
      {
        "creator": "Sangkon Han",
        "title": "내 맘대로 위클리 뉴스 - 2024년 31주(2024.08.04 - 2024.08.11)",
        "link": "https://www.sangkon.com/sigmadream_weekly_2024_31/",
        "pubDate": "Sun, 11 Aug 2024 13:35:00 GMT",
        "content:encodedSnippet": "Python\nHow I use Python to organize my data analyses\n\n데이터 분석을 위해서 Python 환경을 어떻게 구성했는지 알려주는 간략한 기사입니다.\nJavaScript\nDissecting Partial Pre Rendering\n\n부분 렌더링에 대해서 간략하게 소개하는 기사입니다.\nOOP\n5 Java JUnit 5 Features I Wish I Knew Earlier\n\nJUnit에서 유용한 5가지 기능을 소개하는 짧은 기사입니다.\nEtc\nCommon I/O Tasks in Modern Java\nLINQPad is coming to macOS!\nWindows Commands.\nUnit Testing Best Practices In .NET C#\nAzure Functions Best Practices for Performance, Reliability and Security\nNode.js Toolbox\nWhat's up Python? Setuptools breaks, a better PDB, cPython on CalVer...\nTips for Navigating an Issue Tracker on GitHub\nWhy does \"python -m json\" not work? Why is it \"json.tool\"?\nState of Knuckledragger, a Semi-Automated Python Proof Assistant",
        "dc:creator": "Sangkon Han",
        "content": "<h2 id=\"python\">Python</h2>\n<ul>\n<li><a href=\"https://joshuacook.netlify.app/posts/2024-07-27_python-data-analysis-org/?ref=sangkon.com\">How I use Python to organize my data analyses</a>\n<ul>\n<li>&#xB370;&#xC774;&#xD130; &#xBD84;&#xC11D;&#xC744; &#xC704;&#xD574;&#xC11C; Python &#xD658;&#xACBD;&#xC744; &#xC5B4;&#xB5BB;&#xAC8C; &#xAD6C;&#xC131;&#xD588;&#xB294;&#xC9C0; &#xC54C;&#xB824;&#xC8FC;&#xB294; &#xAC04;&#xB7B5;&#xD55C; &#xAE30;&#xC0AC;&#xC785;&#xB2C8;&#xB2E4;.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"javascript\">JavaScript</h2>\n<ul>\n<li><a href=\"https://www.nikhilsnayak.dev/blogs/dissecting-partial-pre-rendering?ref=sangkon.com\">Dissecting Partial Pre Rendering</a>\n<ul>\n<li>&#xBD80;&#xBD84;</li></ul></li></ul>",
        "contentSnippet": "Python\nHow I use Python to organize my data analyses\n\n데이터 분석을 위해서 Python 환경을 어떻게 구성했는지 알려주는 간략한 기사입니다.\nJavaScript\nDissecting Partial Pre Rendering\n\n부분",
        "guid": "66b8be264d836e346732cd4c",
        "categories": [
          "주간 뉴스"
        ],
        "isoDate": "2024-08-11T13:35:00.000Z"
      }
    ]
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": []
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "이한",
    "category": "개인",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "“인공” 지능",
        "link": "https://www.thestartupbible.com/2024/08/artificial-intelligence.html",
        "pubDate": "Sun, 11 Aug 2024 21:33:00 +0000",
        "content:encodedSnippet": "우리는 요새도 한 달에 한두 개의 신규 투자를 꾸준히 하고 있다. 스트롱은 특별히 한 분야에만 관심을 두고 투자하는 전략으로 움직이진 않는다. 우린 제품이나 시장에 투자하기보단, 창업가들에게 투자하기 때문에, 그냥 뭘 하든 상관없이 좋은 창업가라면, 가급적 다양한 분야에 투자한다. 이들이 만드는 제품의 시장 규모는 수백조 원인 경우도 있고, 수백억 원인 경우도 있다. 또한, 매우 흔한 분야인 경우도 있고, 굉장히 독특하고 재미있는 분야인 경우도 있다. 우린 이런 건 특별히 신경 안 쓰려고 노력하고, 창업가가 어떤 사람이고, 이 사람이 뭘 하든 아주 큰 사업을 만들 수 있는 능력과 운이 있는지를 나름의 기준으로 판단하고 투자를 결정한다.\n우리 같은 전략으로 투자하는 VC들도 있지만, 이와는 반대로 특정 분야에만 투자하는 전문적인 투자자들도 있고, 어떤 분들은 그때 유행에 따라서 투자할 분야를 정하고, 이를 위한 펀드를 만들어서 투자한다. 요새 거품론이 계속 대두되고 있지만, AI는 가장 핫한 분야이고 이건 그동안 반짝하고 사라졌던 단순 유행은 아닌 게 확실한 것 같다. 물론, 너무 과열되거나, 반대로 너무 식을 순 있겠지만.\n이런 이유로 AI 사업을 시작하는 창업가들이 폭발적으로 많아지고 있고, 최근에 우리가 본 회사 자료에서 AI라는 말이 안 쓰이는 자료는 거의 못 본 것 같고, 미팅에서 AI라는 말을 언급하지 않는 창업가들은 아예 없었던 것 같다. 이런 트렌드에 부응하기 위해 AI에만 투자하는 펀드가 만들어지고 있고, 몇몇 VC는 AI가 아닌 분야에는 거의 투자를 안 하는 곳들도 보이기 시작하고 있다.\n우리도 AI 관련 회사들을 엄청 많이 만나고 있다. 전에 내가 ‘AI 창업가 현황’이라는 글에서 몇 자 적었듯이, 대부분 이 글의 세 가지 카테고리에 포함되는 회사들인데 아무래도 한국이 항상 가장 잘하는 분야가 애플리케이션 레이어라서 그런지, 이 부분의 창업가들이 압도적으로 많은 것 같다. 우린 조금 더 이 시장을 잘 이해하고 싶은 생각에 관련 회사들을 많이 만나고 공부도 하고 있지만, 실제로 AI 분야의 회사에는 많이 투자하진 않았다.\n내 생각도 계속 바뀌고 있고, 실은 스트롱 내부에서도 AI에 대한 생각과 의견이 아주 다른데, 개인적으론 AI가 사람을 완벽하게 대체해서 사람을 쓸모없게 만들 확률은 0%라는 쪽으로 점점 더 수렴하고 있다. AI는 말 그대로 ‘인공’지능이고, ‘인공’이라는 딱지를 절대로 떼지 못할 것 같다. 이 생각을 조금 더 설명해 보면, 어쩌면 인공지능이 인간지능의 97%는 따라 할 수 있겠지만, 사람의 위대한 창의성과 사람만이 할 수 있는 것들은 남은 마지막 3% 영역에 속하고, 이 3%가 인간지능을 인공지능과 99.99% 다르게 만든다고 생각한다. 이 마지막 3%는 기계가 범접할 수 없는 영역이라고 생각한다. 최근에 내가 하드코어 인공지능 과학자들과 이런 내 의견을 공유한 적이 있었는데, 이 중 몇 명은 동의했지만, 대부분 내가 아직 AI 기술을 잘 몰라서 이런 말을 한다고 하면서 정말로 앞으로 영화 터미네이터의 스카이넷의 세상이 올 것이라고 공격을 받은 적이 있다. We will see about that. \n우리가 AI에 투자하는 이유는 기계가 별로 창의적이지 못하고 반복적인 일을 인간 대신 해주면, 인간이 더욱더 창의력을 발휘할 수 있기 때문이라고 생각한다. 인간에게 주어진 시간은 하루 24시간인데, 인공지능이 많은 반복적인 일을 처리해 주면, 이 한정된 24시간을 인간이 극대화해서 더욱더 창의적이고 위대한 일을 할 수 있을 거로 생각한다. 요새 미국에서 많은 VC들이 관심을 두는 수명 연장 분야도 같은 맥락에서 생각해 볼 수 있다. 인공지능이 더 발달하고, 수명을 연장할 수 있다면 인간지능은 더 위대해질 수 있을 것이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/08/artificial-intelligence.html#respond",
        "content": "우리는 요새도 한 달에 한두 개의 신규 투자를 꾸준히 하고 있다. 스트롱은 특별히 한 분야에만 관심을 두고 투자하는 전략으로 움직이진 않는다. 우린 제품이나 시장에 투자하기보단, 창업가들에게 투자하기 때문에, 그냥 뭘 하든 상관없이 좋은 창업가라면, 가급적 다양한 분야에 투자한다. 이들이 만드는 제품의 시장 규모는 수백조 원인 경우도 있고, 수백억 원인 경우도 있다. 또한, 매우 흔한 분야인(...)",
        "contentSnippet": "우리는 요새도 한 달에 한두 개의 신규 투자를 꾸준히 하고 있다. 스트롱은 특별히 한 분야에만 관심을 두고 투자하는 전략으로 움직이진 않는다. 우린 제품이나 시장에 투자하기보단, 창업가들에게 투자하기 때문에, 그냥 뭘 하든 상관없이 좋은 창업가라면, 가급적 다양한 분야에 투자한다. 이들이 만드는 제품의 시장 규모는 수백조 원인 경우도 있고, 수백억 원인 경우도 있다. 또한, 매우 흔한 분야인(...)",
        "guid": "https://www.thestartupbible.com/?p=9178",
        "categories": [
          "Uncategorized",
          "ai",
          "FoundersAtWork",
          "people",
          "Strong",
          "technology",
          "vc"
        ],
        "isoDate": "2024-08-11T21:33:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "글로벌 사업의 기본은 영어",
        "link": "https://www.thestartupbible.com/2024/08/the-very-first-requirement-for-any-global-business-is-english.html",
        "pubDate": "Wed, 07 Aug 2024 21:36:00 +0000",
        "content:encodedSnippet": "한국에서도 제대로 작동하고 돈을 버는 제품을 만드는 게 얼마나 어려운지 매일 느끼는 사람의 입장에서 한국 스타트업이 미국 시장에 바로 진출해서 4년 만에 매출을 1,000억 원 이상 하겠다는 회사의 자료를 보면 어쩔 수 없이 희망적이기보단 회의적인 생각이 들 수밖에 없다. 그래도 사업의 방향성이나 팀이 괜찮으면, 이런 팀들은 일단 만나본 후에 내부적으로 검토하는 과정을 거친다.\n얼마 전에 이런 창업팀의 자료를 보다가 세 번째 페이지에서 그냥 PDF를 닫고 만나보지도 않고 pass 하기로 결정했다. 북미 시장에서 승부를 보겠다는 팀이었고, 자료 자체도 모두 영문으로 만들었는데, 자료의 영어 수준이 형편없었다. 어떤 분들은 이런 나의 태도를 이해 못 하고, 그 정도 문법이나 철자는 틀릴 수도 있는데, 뭘 그렇게 까칠하게 구는지 구박하기도 한다. 자료에서 영어 좀 틀렸다고 사업을 못 하는 것도 아닌데 내가 너무 오바한다고 뭐라고 하는 분들도 있다.\n솔직히 나는 다른 사람들보다 남의 영문 자료에서 이런 실수를 잘 발견하는 편이다. 그리고 이런 건 그냥 넘어가도 창업팀과 그 사업을 이해하는데 있어서 전혀 지장이 없기 때문에 굳이 피치 미팅의 흐름을 중간에 끊으면서 지적하지 않아도 된다. 하지만, 그래도 나는 영어에서 문법이나 철자의 실수가 눈에 들어올 때마다 굳이 흐름을 끊고 지적질을 한다. 왜냐하면, 사업을 이해하는 데 지장은 없지만, 미국에서 사업을 하겠다고 하는 이 팀의 자세와 태도에는 이런 사소한 실수가 매우 큰 문제라고 생각하기 때문이다.\n영어권에서 사업을 하고 싶다면, 가장 기본 중 기본은 영어라는 그 언어 자체이다. 영어를 하는 사람들이 돈을 내고 사용하는 서비스를 만들고 싶다면, 그 누가 보더라도 이 제품은 비영어권 창업가들이 만들었다는 티가 전혀 나면 안 된다. 그런데 내가 만난 미국 시장을 공략하고 싶어 하는 많은 한인 창업가들이 만든 회사의 자료나 제품을 보면, 엉터리 영어가 너무 많다. 이 자료를 미국 VC들이 봤을 때 과연 어떤 생각을 할지, 이 창업가들은 한 번이라도 생각을 해봤을까. 엉성한 영어로 만들어진 이 제품에 미국인들이 과연 돈을 낼지 한 번이라도 생각을 해봤을까. 이런 생각을 해봤는데도 영어가 이 수준이면 팀의 역량에 문제가 있다고 생각하고, 이런 생각을 한 번도 안 해 봤다면 이 팀은 정말 생각이 없는 것 같다.\n실은, 요샌 AI가 발달해서 번역의 수준은 좋아졌고, 특히나 문법적으로 틀린 영어는 많이 줄어들었다. 하지만, 영어라는 게 단순히 단어만을 번역해서 완성되는 게 아니라 이 단어들이 어떻게 문장을 만들고, 이 문장들이 어떤 맥락에서 사용되는지 잘 파악해야지만 진정한 영어가 완성되는데, 아직 AI는 이걸 완벽하게 하기엔 부족하다고 생각한다. 단순하게 기계로 번역한 문장을 보면 단어들은 잘 번역됐지만, 미국에서 실제로 사용하는 일상적인 언어라고 하기엔 굉장히 어색한 게 많다.\n이 현상을 거꾸로 한번 생각해 보자. 유럽인들이 한국 시장을 타겟으로 하는 서비스를 만들었는데, “이 응용 제품을 받아주세요.”라는 한국어를 보면 누구나 다 이건 이상한 번역이라는 걸 알 것이다. 각각의 단어는 잘 번역됐지만, 한국에서 실제로 이런 말은 사용하지 않는다. “이 앱을 설치해 주세요”가 훨씬 더 컨텍스트에 맞는 우리말이다. 전에 한 회사의 한글 자료를 봤는데 어떤 현상이 바이럴하게 퍼진다는 문장을 단어 그대로 번역해서 “바이러스같이 퍼진다”라고 표기되어 있었다. 물론, 의미상으론 번역이 틀린 건 아니지만, 한국에서도 그냥 ‘바이럴’이라는 영어를 그대로 사용하는데, 이걸 모르고 번역했기 때문에 이런 결과가 나온 것이다. 이 문장을 보면, 이 자료는 한국인이 안 만들었다는 걸 금방 알아차릴 것이다.\n그래서 미국 시장을 대상으로 사업을 하고 싶다면, 일단 영어부터 제대로 하자.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/08/the-very-first-requirement-for-any-global-business-is-english.html#comments",
        "content": "한국에서도 제대로 작동하고 돈을 버는 제품을 만드는 게 얼마나 어려운지 매일 느끼는 사람의 입장에서 한국 스타트업이 미국 시장에 바로 진출해서 4년 만에 매출을 1,000억 원 이상 하겠다는 회사의 자료를 보면 어쩔 수 없이 희망적이기보단 회의적인 생각이 들 수밖에 없다. 그래도 사업의 방향성이나 팀이 괜찮으면, 이런 팀들은 일단 만나본 후에 내부적으로 검토하는 과정을 거친다. 얼마 전에(...)",
        "contentSnippet": "한국에서도 제대로 작동하고 돈을 버는 제품을 만드는 게 얼마나 어려운지 매일 느끼는 사람의 입장에서 한국 스타트업이 미국 시장에 바로 진출해서 4년 만에 매출을 1,000억 원 이상 하겠다는 회사의 자료를 보면 어쩔 수 없이 희망적이기보단 회의적인 생각이 들 수밖에 없다. 그래도 사업의 방향성이나 팀이 괜찮으면, 이런 팀들은 일단 만나본 후에 내부적으로 검토하는 과정을 거친다. 얼마 전에(...)",
        "guid": "https://www.thestartupbible.com/?p=9176",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "general",
          "global",
          "Strong"
        ],
        "isoDate": "2024-08-07T21:36:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": [
      {
        "title": "코틀린 동시성 환경에서 컬렉션 잘 다루기",
        "link": "https://hudi.blog/handling-collections-concurrency-in-kotlin/",
        "pubDate": "Sun, 11 Aug 2024 00:00:00 GMT",
        "content:encodedSnippet": "회사에서 대규모 데이터 처리의 성능 향상을 위해 코틀린 코루틴을 자주 사용하는데, 예전에 이런 동시성 환경에서 컬렉션을 잘못다루어 문제를 겪은적이 있었다. 이 포스팅에서는 이때 경험을 되살려 코틀린 동시성 환경에서 안전하게 컬렉션을 다루는 여러 방법을 소개한다.\n\n동시성 이슈 발생 사례\n\n단일 쓰레드에서의 작업\n우리가 100개의 유저 ID 리스트를 가지고 있는데, 이 ID 리스트를 사용하여 외부 API 호출을 통해 실제 유저 데이터를 가져와야 한다고 가정하자. 100개정도면 병렬 처리를 하지 않아도 금방 작업이 끝날테니, 우리는 아래와 같이 코드를 작성하였다.\nval userIds = (1..100L).toList()\nval users = userIds.map { userId ->\n    userClient.getUserById(userId)\n}\n\n쓰레드는 하나이므로 별 문제없이 코드가 실행된다. 그런데 만약 1만개, 10만개 규모의 데이터를 처리해야 하는 요구사항이 추가된다면? 싱글 쓰레드로는 턱도 없을 것이다. 따라서 멀티 쓰레드를 사용한 병렬처리를 고려하게 된다.\n\n멀티 쓰레드에서의 문제 발생\n코루틴을 사용하여 아래와 같이 코드를 작성해보자.\nval userIds = (1..10_000L).toList()\nval users = mutableListOf<User>()\n\nrunBlocking(Dispatchers.Default) {\n    userIds.forEach { userId ->\n        launch {\n            users.add(userClient.getUserById(userId))\n        }\n    }\n}\n\n각각의 코루틴이 병렬적으로 외부 서버를 호출하여 유저를 얻어오고, users 리스트에 잘 추가했을 것 같다. 잘 동작했는지 users 리스트의 사이즈를 확인해보자.\nprintln(\"users.size = ${users.size}\")\n// users.size = 8534\n\n어라, 예상과 다르게 리스트의 사이즈는 1만개가 아니다. 왜 이런 문제가 발생했을까?\n\nArrayList 구현 살펴보기\n위 문제의 원인을 알기 위해서는 ArrayList 내부 구현을 살펴봐야한다.\nmutableListOf() 는 빈 MutableList 인터페이스를 반환하는데, ArrayList 가 MutableList 의 구현체로 사용된다.\n\n    \n      \n    \n  \n  \n    \n    ArrayList의 코드 일부\n  \n위는 ArrayList의 add() 메소드가 호출되었을 때 실행되는 코드 중 일부이다. 파라미터 s 에는 ArrayList 가 실제로 몇개의 요소를 가지고 있는지를 나타내는 size 값이 세팅된다. 그리고 elementData 라는 Object 배열의 s 번째 인덱스로 새로운 요소를 추가한다. 그리고 size 를 s 보다 1 큰값으로 설정한다.\n여기서 동시성 이슈가 발생한다. 같은 값이 파라미터 s 에 세팅되어 들어오면, elementData의 동일한 인덱스로 값이 설정될 것이고, 먼저 해당 인덱스에 저장된 값을 잃어버린다.\n이 문제는 비단 ArrayList 뿐만 아니라, 동시성 처리가 되어 있지 않은 Java Collection Framework 구현체(e.g. LinkedHashSet, LinkedHashMap)에서도 비슷하게 발생한다. 따라서 멀티 쓰레드 환경에서는 사용하려는 컬렉션 구현체가 Thread-Safe 한지 잘 확인해야한다.\n\n동시성 제어 메커니즘 사용\nMutex, Monitor 등의 개념은 경쟁상태, 임계영역의 개념과 동기화를 위한 여러 상호배제 기법 (mutex, semaphore, monitor) 포스트를 참고\n\nSynchronized\n자바에서는 Monitor라는 상호 배제 매커니즘을 제공한다. Monitor를 쉽게 설명하자면, Java 언어 레벨에서 자체적으로 고수준으로 제공하는 일종의 Mutex 이다. Java 에서는 객체마다 Monitor 를 소유하고 있고, 이 Monitor 를 사용해서 임의의 임계 영역에 동시에 하나의 쓰레드만 진입할 수 있도록 제어할 수 있다.\n자바에서는 synchronized 키워드를 사용하여 함수 자체를 임계 영역으로 만들거나, synchronized 블럭을 사용하여 블럭 내부를 임계 영역으로 만들 수 있다. 이는 코틀린에서도 비슷한데, 함수에 @Synchronized 어노테이션을 붙이거나, (자바와 동일하게) synchronized 블럭을 사용하는 방식을 사용할 수 있다.\nval userIds = (1..10_000L).toList()\nval users = mutableListOf<User>()\n\nrunBlocking(Dispatchers.Default) {\n    userIds.forEach { userId ->\n        launch {\n            synchronized(users) {\n                users.add(userClient.getUserById(userId))\n            }\n        }\n    }\n}\n\n위와 같이 synchronized 함수 파라미터로 모니터를 획득할 객체를 전달해야한다. 여기서는 users 를 전달한다.\n\nMutex\n앞서 Monitor 설명에서 언급된 Mutex 를 직접 사용하는 방법도 있다. kotlinx.coroutines 에서는 직접 Mutex 를 사용할 수 있도록 Mutex 인터페이스를 제공한다.\nval mutex = Mutex()\n\nrunBlocking(Dispatchers.Default) {\n    userIds.forEach { userId ->\n        launch {\n            mutex.withLock {\n                users.add(userClient.getUserById(userId))\n            }\n        }\n    }\n}\n\n직접 mutex.lock() 과 mutex.unlock() 을 사용해서 락을 잠그고 해제할수도 있지만, withLock 을 사용하면 Mutex 가 상호 배제를 보장할 수 있는 임계영역을 더 쉽게 만들 수 있다.\n\nThread-Safe 한 Collection 사용\n앞서 해본것처럼 우리가 직접 상호배제 메커니즘을 사용하여 동시성 이슈를 해결해볼수도 있지만, 이미 잘 구현된 Thread-Safe 한 Collection 을 사용하는 방법이 더 좋다.\n\n동기화된 컬렉션 (Synchronized Collection)\nJDK 1.2 버전부터 Java Collection Framework 가 등장했는데, 이때 동기화된 컬렉션도 함께 등장했다.\nCollections.synchronizedList(ArrayList<User>())\nCollections.synchronizedSet(HashSet<User>())\nCollections.synchronizedMap(HashMap<Long, User>())\n\n사용법은 위와 같다.\n\n    \n      \n    \n  \n  \n    \n    SynchronizedList의 코드 일부\n  \n이름에서 알 수 있듯 단순히 생성자로 받아온 컬렉션을 필드로 가지고 있고, synchronized 블럭을 사용하여 동시성을 제어한다. 이런 특징은 확실하게 동시성을 제어할 수도 있다는 장점을 가지고 있지만, 쓰레드가 동시에 진입해도 문제 없는 부분까지 동기화되어 성능이 좋지 않다. 따라서 요즘에는 잘 사용되지 않는 구현체이다.\nval users = Collections.synchronizedList<User>(ArrayList())\n\nrunBlocking(Dispatchers.Default) {\n    userIds.forEach { userId ->\n        launch {\n            users.add(userClient.getUserById(userId))\n        }\n    }\n}\n\n우리의 문제 상황에서 동기화된 컬렉션을 적용한다면, 위와 같이 코드를 작성할 수 있다.\n\n동시성 컬렉션 (Concurrent Collection)\n동기화된 컬렉션은 JDK 1.2 버전부터 제공되는데, 동시성 컬렉션은 JDK 1.5 버전 이후부터 제공되었다.\n동시성 컬렉션은 위의 동기화된 컬렉션과 목적은 동일하지만, 모든 메소드의 전체를 동기화 블럭을 사용하는 것과 다르게, 더 복잡한 락 메커니즘이나 Non-Blocking 방식을 사용하여, 높은 성능을 유지하면서도 Thread-Safe 를 보장한다. 예를 들어 동시성 컬렉션 중 하나인 ConcurrentHashMap 의 경우, Map의 전체 데이터를 일정 세그먼트로 나누고, 세그먼트별로 별도의 락을 사용하는 방식을 사용하여, 락의 범위를 줄이고 락으로 인한 병목 현상을 개선하였다.\nArrayList 에 대응되는 동시성 컬렉션에는 CopyOnWriteArrayList 가 있다. Copy on Write 란, 이름 그대로 데이터를 쓸 때 복사하는 방식으로 동시성 환경에서 데이터를 읽을 때 발생할 수 있는 일관성 문제를 해결한다.\n예를 들어보자. 어떤 리스트의 데이터를 쓰레드 T1, T2가 접근할 수 있다. T1은 리스트의 데이터를 순회하기 시작한다. 그런데 그 도중에 T2가 리스트의 값을 변경하고, 제거하고, 추가했다. T1은 리스트의 데이터를 일관적으로 가져올 수 있을까? 그렇지 않다. T1이 리스트를 순회하는 도중에 리스트가 변경되어 결과 또한 뒤죽박죽이 될 것이다.\n여기서 Copy on Write 패턴을 적용해보자. T2가 리스트의 내용을 변경할 때, 리스트의 복사본을 새롭게 만들고, 해당 복사본에 변경을 반영한다. 그리고 이후 발생한 읽기 작업부터는 변경이 반영된 복사본을 읽어간다. 즉, T1은 최초에 읽어간 리스트를 모두 순회할 때 까지, 리스트에 대한 동일한 참조를 갖게되어 데이터 일관성 문제를 해결한다.\nCopyOnWriteArrayList 는 리스트를 새롭게 복사하여 쓰기 작업이 수행된다는 특성 때문에, 읽기 작업이 많고 쓰기 작업이 적은 작업에서 유리하다. 그리고 Copy 하는 과정에서는 동기화를 보장해야하므로, CopyOnWriteArrayList 의 add() 메서드는 함수 전체에서 synchronized 블럭이 사용되었다. 그래서 사실 우리의 문제 상황에서는 SynchronizedList 를 사용하는 것 보다 크게 성능 향상이 이뤄지진 않을 것이다.\n\n    \n      \n    \n  \n  \n    \n    CopyOnWriteArrayList 의 add() 메서드는 전체가 동기화 되어있다.\n  \n뭐, 일단 코드는 아래와 같이 작성해볼 수 있을 것이다.\nval users = CopyOnWriteArrayList<User>()\n\nrunBlocking(Dispatchers.Default) {\n    userIds.forEach { userId ->\n        launch {\n            users.add(userClient.getUserById(userId))\n        }\n    }\n}\n\n\n코루틴 async 사용\n앞선 예제에서는 모두 코루틴 스코프 내부에서 launch 하여 병렬처리 하였는데, 사실 이런 작업에는 async 가 더 적절하다. 둘다 코루틴을 시작하는 함수이지만, launch 는 결과를 반환하지 않고, async 는 결과를 반환한다.\nval job: Job = launch { users.add(userClient.getUserById(userId)) }\nval deferred: Deferred<User> = async { userClient.getUserById(userId) }\n\n위 코드처럼 launch 는 Job 을 반환한다. Job을 간단하게 설명한다면, 현재 코루틴 작업의 상태를 관리할 수 있는 객체라고 할 수 있다 (코루틴 깊숙이 들어가면 Job은 꽤 복잡한 개념이다). 반면 async 는 Deferred 를 반환한다. Deferred 는 Job 의 모든 기능을 포함하면서, 추가로 코루틴의 비동기 결과를 반환받을 수 있는 기능을 제공한다.\n\n    \n      \n    \n  \n  \n    \n    Deferred는 Job의 하위타입이다.\n  \nDeferred 는 await() 라는 메서드를 제공하는데, 이 메서드가 호출되면 해당 코루틴은 일시 중단(suspend)되고, 비동기 작업이 완료되면 async 로 시작된 비동기 작업의 결과는 Deferred 에 저장된다. 그 이후 일시 중단되었던 코루틴이 재개(resume)되고, await() 는 Deferred 에 저장된 결과값을 반환한다.\nCollection<Deferred<T>> 타입은 awaitAll() 을 제공하는데, 컬렉션의 모든 Deferred 가 결과값을 가질 때 까지 기다린다. 따라서 아래와 같이 코드를 작성하면, 여러 비동기 작업의 결과를 깔끔하게 컬렉션으로 얻어올 수 있게 된다.\nDeferred의 동작은 자바의 CompletableFuture 와 비슷해보인다. 하지만 자바의 CompletableFuture의 경우 값을 얻기 위해 쓰레드를 Block 하는 반면, async는 Non-Blocking 방식으로 동작한다. 이것은 코루틴의 중요한 특징 중 하나이기도 하다. 이런 특징 덕분에 단순한 멀티 쓰레딩보다 코루틴을 사용하는 것이 더 성능면에서 좋다.\nval users = runBlocking(Dispatchers.Default) {\n    userIds.map {\n        async {\n            userClient.getUserById(it)\n        }\n    }.awaitAll()\n}\n\n별도의 컬렉션을 생성할 필요도, 동기화 문제를 걱정할 필요도 없이 깔끔하다.",
        "content": "…",
        "contentSnippet": "…",
        "guid": "https://hudi.blog/handling-collections-concurrency-in-kotlin/",
        "isoDate": "2024-08-11T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "2036년 서울 올림픽이 다시 열린다면, 찬성 vs 반대?",
        "link": "https://blog.toss.im/article/monthly-tosspick-2024-7",
        "pubDate": "Sun, 11 Aug 2024 12:14:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}대한민국이 13개의 금메달, 9개의 은메달, 10개의 동메달과 함께 종합 8위를 차지한 2024 파리 올림픽이 막을 내렸습니다. 신궁의 실력을 뽐내며 역대 최다 메달을 획득한 양궁, 청춘 드라마의 한 장면 같았던 유도 혼성단체전, 조용한 카리스마로 화제를 불러일으킨 사격, 동메달 결정전에서 패배한 신유빈 선수가 상대를 포옹해주며 패자의 품격을 보여준 탁구 등 수많은 명장면이 탄생했죠.\n매월 하나의 키워드를 선정해 경제적 시선으로 질문을 던져보는 <월간 토스픽>에서는 우리의 가슴을 다시 뜨겁게 했던 파리 올림픽을 떠나보내며 ‘올림픽 후유증'에 관한 이야기를 준비했습니다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}뜨거운 열기가 지나가면 도시에 남는 것\n‘세계인들의 축제인 올림픽 개최 성공'이라는 말이 건네는 설렘이 무색하게 ‘후유증'이라니 조금은 어리둥절합니다. 하지만 올림픽 개최국들은 대부분 막대한 비용을 투자해 큰 행사를 치러내고 난 뒤 적자를 수습하느라 힘겨운 시기를 보내왔습니다. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}경기장과 선수촌을 짓고, 도로 등 기반시설을 마련하며 수많은 외국 손님들을 맞이하기 위해 수십조 원을 썼는데, 노동자 고용과 관광객이 늘어나는 등 반짝 상승했던 경기가 축제가 끝나면 금세 빠져나간 사람들 뒤로 텅 빈 경기장만 남아 경제악화로 이어지곤 했기 때문입니다. 올림픽의 저주라는 말이 있을 정도예요.\n그럼에도 파리 올림픽은 ‘흑자 올림픽'을 위한 전략이 있었습니다. 탄소발자국 최소화를 위해 새 경기장 건설을 최소화하고, 선수들의 숙소와 셔틀버스에 에어컨 설치를 하지 않는 등 친환경을 위한 결정들에는 비용 절감 효과도 함께였어요. 예를 들어 1998 프랑스 월드컵 메인 경기장을 활용한 덕분에 주경기장을 짓지 않아 아낀 돈만 해도 1조 5000억 원입니다. 게다가 올림픽 870만 장, 패럴림픽 100만 장으로 총 970만 장의 입장권이 팔려 역대 최다 판매라는 기록을 세우기도 했죠.\n미국 경제매체 비즈니스 인사이더가 추산한 파리 올림픽 개최 비용은 82억 달러(약 11조 원). 바로 직전 2020 도쿄 올림픽의 추산 개최 비용이 200억 달러(약 27조 원)이었던 것과 비교하면 가히 반값 올림픽, 가성비 올림픽이라고 불릴 만합니다.\n자린고비라는 말까지 들어가며 최소 비용으로 올림픽을 치른 파리는 과연 흑자를 달성할 수 있을까요? ‘2036 서울 올림픽 유치’에 도전장을 내며, 파리와 유사하게 88 서울 올림픽과 2022 월드컵 때의 시설 활용 등으로 흑자 목표를 밝힌 우리나라로서도 올여름 열기 뒤 남는 것이 무엇일지 궁금해지는 순간입니다.\n\n2036년 서울 올림픽이 다시 열린다면, 찬성 vs 반대?\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n🎙️ Interviewee 이종성\n\n한양대학교 스포츠산업과학부 교수. 인터넷 매체 <프레시안>에서 스포츠 기자로 일하던 중, 스포츠가 사회문화 현상과 깊은 관련을 맺고 있다는 사실에 매료됐다. 늦은 나이에 영국 DMU(드몽포트) 대학에서 남북한 축구사 연구로 박사학위를 받았다. 저서로는 《야구의 나라》, 《스포츠문화사》, 《세계사를 바꾼 월드컵》과 《A History of Football in North and South Korea: c. 1910~2002》 등이 있다.\n\n올림픽이 끝나고 많은 개최국이 ‘올림픽 후유증'을 앓는다고 알려져 있어요. 올림픽을 열기 위해 썼던 막대한 비용이 결국 개최 도시에 큰 부담으로 돌아온다는 건데요. 올림픽을 개최하는 데 드는 평균 비용은 얼마인가요?\n최근 올림픽 개최 비용은 평균 20조 원 정도로 볼 수 있습니다. 하지만 개최 도시에 따라 비용 격차가 매우 큰데요. 예를 들어 2014년 러시아 소치 동계 올림픽은 무려 52조 원의 어마어마한 예산이 투입된 반면에 이번 파리 올림픽은 11조 원 정도만 들인 ‘경제적 올림픽’이라는 평가를 받고 있습니다.\n올림픽을 개최하면 어디에 가장 큰돈이 들어가나요?\n경기장 건설비용과 교통 인프라 개선 비용이 가장 크게 듭니다. 올림픽 주경기장을 짓는 데만 해도 평균 1조 5,000억 원이 듭니다. 하계 올림픽은 동계 보다 종목 수가 많기 때문에 돈이 더 들기도 해요. 하지만 최근 올림픽을 여는 도시들은 경기장을 새로 짓기보다 기존 시설을 적극적으로 활용하거나 임시 경기장을 만들어서 비용을 줄이는 추세입니다.\n교통 인프라 개선 비용은 평창 동계 올림픽의 예를 들 수 있겠는데요. 평창 동계 올림픽 예산 약 14조 원 중, 가장 큰 비중을 차지한 건 인천공항에서 평창을 연결하는 고속철도 건설비였습니다. 약 9조 원이 들었고요. 평창 올림픽 개최를 위해서 고속철도 건설은 반드시 필요했습니다. 평창의 올림픽 유치가 두 차례나 실패로 끝났을 때, IOC(국제올림픽위원회)는 인천 국제공항과 서울에서 올림픽 개최지 평창까지의 접근성을 높여야 동계 올림픽 개최 가능성이 높아진다는 점을 시사했기 때문입니다.\n올림픽 개최 비용에 직접적으로 포함되지 않는 비용도 만만치 않을 것 같아요. 이번 파리 올림픽의 뜨거운 감자였던 센 강 수질개선을 위해 프랑스는 2015년부터 약 2조 원을 들였다고요.\n올림픽을 치르기 위한 직접적인 비용 이외의 것들을 ‘간접 비용’이라고 합니다. 파리 올림픽은 센 강 정화 사업뿐만 아니라, 센 생드니 지구 개발 사업에도 큰 비용을 들였습니다.\n센 생드니 지구는 파리 북동부 외곽에 위치한 지역으로, 이번 파리 올림픽 주경기장과 선수촌이 위치해 있었습니다. 센 생드니 지구는 가난한 북아프리카, 아랍계 이주민들이 많이 거주하는 공간입니다. 지역 재정비 사업의 일환으로 지하철, 철도 노선을 확대했고요. 역사 신축 등을 포함하면 60조 원이 넘는 돈이 투입되었습니다.\n베이징 동계 올림픽은 3조 6,000억 원이 소요된 것으로 중국 당국이 발표했었는데요. 실제 비용은 5배가 넘는 약 19조 원으로 평가되고 있습니다. 개최 비용 산정에 이토록 큰 차이가 나는 이유는, 설상 종목 경기가 펼쳐진 장자커우 지역의 공항, 고속도로 건설비용, 베이징 시내 지하철 노선 확대에 들어간 비용 등이 빠져있었기 때문입니다. 이러한 사례들로 미루어, 간접비용 역시 올림픽 개최 비용에 반드시 포함해야 한다는 의견이 지배적입니다.\n간접 비용까지 포함하면 천문학적인 숫자네요. 이 정도 금액이면 개최 도시뿐 아니라 국가 재정에도 영향을 끼칠 것 같은데, 올림픽으로 인해 경제적 어려움을 크게 겪었던 나라들도 있나요?\n올림픽 후유증과 관련해 자주 언급되는 것은 2004년 그리스 아테네 올림픽입니다. 그리스는 고대 올림픽이 시작된 곳이기도 하고, 1896년 최초의 근대 올림픽 또한 그리스에서 다시 시작되었습니다.  그만큼 그리스는 올림픽에 대한 자부심이 매우 컸고, 2004년 올림픽 개최에 다시 한번 성공하죠. 당시 그리스는 108년 만의 올림픽 개최에 국가적 운명을 걸었습니다.\n그리스는 국가 GDP(국내총생산)의 3.4%에 달하는 엄청난 비용을 올림픽 개최에 쏟아부었습니다. 이미 국가 재정 적자 규모가 매우 큰 상황이었음에도 불구하고요. 올림픽을 앞두고 고질적인 부정부패 문제가 발생했고, 아테네에 세운 올림픽 경기장들이 제대로 활용되지 못하면서 국가 재정에 또 다른 악재가 됐습니다. 결국 그리스는 2008년 국가 부도 사태를 겪습니다.\n그리스 이외에 또 다른 사례도 있을까요?\n그리스뿐만 아니라 올림픽 개최가 국가 경제에 악영향을 준 사례는 사실 꽤 많습니다. 올림픽 개최를 경제적으로 접근하기 보다, 정치적인 이벤트나 민족적 또는 지역적 자부심을 위한 이벤트로 접근했기 때문일 겁니다.\n1976년 퀘벡 주의 몬트리올에서 열린 올림픽은 경제적으로 최악의 올림픽으로 손꼽힙니다. 당시 몬트리올 올림픽 조직위원회는 원래 책정했던 예산보다 약 720%나 높은 예산을 새롭게 편성해야 했는데요. 주경기장 신축 과정의 잦은 사고와 설계 변경 등의 이유가 비용 증가의 원인이 되었고요.\n직전 1972년 뮌헨 올림픽 당시, 테러단체가 선수촌에 난입해 이스라엘 선수들이 사망하는 사건이 발생했기 때문에 몬트리얼 올림픽 조직위원회는 테러에 대비해 막대한 경호와 보안 비용을 투입할 수밖에 없게 됐습니다. 결국 약 1조 7천억 원이라는 빚더미에 앉게 되었고 이 부채를 상환하는 데 무려 30년이나 걸렸습니다.\n자부심으로 밀어붙이던 시대는 가고, \n올림픽도 수지타산이 맞아야 한다\n예전에는 올림픽 개최국이 되면 국가적 경사 분위기였지만, 최근에는 인식이 많이 변한 것 같습니다. 지역 주민들이 반대해 올림픽 개최를 포기하는 경우도 있는데요. 지역 주민들은 어떤 이유로 올림픽 개최를 반대하나요?\n주로 경제적 이유 때문입니다. 시민들이 낸 세금으로 교육, 의료, 주택 등 복지사업에 힘을 쏟아야 하는 데 올림픽 같은 대회가 시민들의 삶에 얼마나 긍정적인 영향을 줄지에 대한 의구심이 크기 때문입니다.\n보스턴 시민들도 이런 이유로 올림픽 개최에 제동을 걸었습니다. 보스턴은 미국올림픽위원회(USOC)를 통해 2024년 미국 올림픽 개최 후보로 선정된 도시였습니다. 하지만 당시 보스턴 시민들은 ‘더 좋은 학교’, ‘더 좋은 주택’, ‘더 안전한 거리’를 만드는 게 올림픽 개최보다 훨씬 더 중요하다는 의미의 플래카드를 들고 시위를 펼쳤고 결국 보스턴은 올림픽 유치신청을 포기했습니다.\n이탈리아 로마도 2024년 올림픽 개최에 나서지 않았습니다. 당시 로마 시장은 “만약 로마가 올림픽을 개최한다면 빚더미와 엄청난 양의 시멘트에 휩싸일 것이다”라며 올림픽 유치 신청을 포기했습니다.\n올림픽 개최국의 경제적 부담을 줄이고자 하는 국제적 차원의 노력도 이뤄지고 있나요?\nIOC도 올림픽 경기장의 사후 활용 문제와 친환경 정책에 대한 가이드라인을 통해 개최국의 경제적 문제를 최소화하려는 시도를 하고 있습니다. 올림픽 개최국의 경제적 부담을 줄이기 위한 노력은, 올림픽의 지속가능성을 위한 필수요건이 된 셈인데요. 2012년 런던 올림픽부터는 영구 경기장보다 임시 경기장을 많이 건립하기 시작했습니다.\n이번 파리 올림픽 역시 2개의 경기장을 제외하면 새롭게 지어진 영구 경기장은 없습니다. 지난 1998년 프랑스 월드컵의 주경기장이었던 스타드 드 프랑스를 올림픽 주경기장으로 활용해 올림픽 비용을 크게 낮출 수 있었습니다. 또한 임시 경기장을 적극 활용했는데요. 임시 경기장을 에펠탑이나 콩코르드 광장, 나폴레옹의 무덤이 있는 앵발리드, 베르사유 궁전 앞 등 관광명소에 배치하며 ‘문화 올림픽'의 새로운 모델을 만들기도 했고요.\nIOC의 직접적인 경제적 지원도 있나요?\n올림픽 개최 도시 조직위원회는 IOC로 부터 후원금을 받습니다. 이번 파리 올림픽의 경우 IOC가 약 1조 7,826억 원의 후원금을 제공했고요.\n개최 도시는 후원금 이외에 올림픽 경기 티켓판매, 숙박, 라이선스 수입, 로컬 스폰서십(국내 기업 후원금) 수입으로 개최 비용을 충당합니다. 하지만 문제는 올림픽 개최 비용이 워낙 비싸기 때문에 세금(국비, 지방비)을 사용하는 경우가 빈번하게 발생하고 있다는 겁니다. 이 때문에 IOC의 후원금이 높아져야 한다는 목소리가 지속적으로 나오고 있습니다.\nIOC는 어떻게 수익을 만들어 후원금을 마련하나요?\n기본적으로 IOC는 TV 중계권료와 올림픽 파트너 기업 스폰서십으로 매출을 만듭니다. 특히 IOC의 전체 수입 가운데 약 61%를 차지하고 있는 것인 TV 중계권료인데요. IOC는 TV중계권료 매출 중, 약 30% 정도만 후원금의 일부분으로 제공합니다. 다시 말하면 IOC가 70%의 TV중계권료를 가져가는 셈이죠.\n물론 TV 중계권료와 스폰서십 매출이 증대하면서 매 대회마다 IOC 후원금이 늘고 있는 추세이긴 합니다. 하지만 TV중계권료의 배분 비율이 개최 도시에 더 유리한 쪽으로 변화해야 한다는 목소리가 나오고 있습니다.\n‘올림픽=적자'라는 인식이 많긴 하지만, 개최국이 얻는 경제적 효과도 있겠지요?\n올림픽 경제효과를 단기적으로 보면 긍정적인 부분이 있습니다. 올림픽을 준비하는 과정에서 대부분의 개최 도시는 건설 붐을 맞이하게 됩니다. 이에 따라 노동자들의 고용률이 높아지는 경우가 많습니다. 여기에 올림픽 덕분에 관광객도 예년에 비해 늘어나게 됩니다. 보통 올림픽 개최국은 올림픽을 치르는 해의 GDP가 전년 대비해 2~3% 상승하게 됩니다. \n하지만 장기적으로 보면 올림픽 개최를 통한 경제효과에는 함정이 많습니다. 대규모 건설 사업이 마무리되면 고용률은 다시 올림픽 건설 붐 이전으로 돌아가게 되고, 관광객도 과거와 비슷한 수준으로 회귀합니다.\n올림픽을 여는 나라의 경제적 상황도 중요할 것 같은데요. 개발도상국과 선진국이 올림픽을 개최했을 때 얻게 되는 효과는 각각 어떻게 다를까요?\n일반적으로 개발도상국의 경우는 ‘국가 홍보’를 위한 올림픽 개최 효과에 올인하는 경향이 큽니다. 관광수입과 해외투자 증대 효과도 생각할 수 있고요.\n최근 선진국의 경우에는 도시 재생 효과에 집중하고 있습니다. 올림픽 개최를 기점으로 도시에서 상대적으로 개발이 되지 않았던 지역을 재생시키려는 노력을 많이 하고 있습니다. 런던은 일종의 슬럼가였던 ‘이스트 엔드' 재개발 계획을 위해 2012 런던 올림픽을 활용했고요, 이번 파리 올림픽의 경우 앞에서 언급한 센 생드니 지구 재생 효과를 기대하고 있습니다.\n적자의 늪에서 살아남은 올림픽도 있을까?\n공식적으로 흑자를 기록한 올림픽도 있나요?\n1984년 미국 LA 올림픽이 유일합니다. LA가 흑자 올림픽을 달성할 수 있는 이유는 두 가지 측면에서 살펴볼 수 있는데요. 첫째는 LA 올림픽 조직위원회에 재계 인사들이 많이 참여했다는 점입니다. 기업활동을 했던 사람들이 조직위원회에서 비용 최소화, 수익 극대화 전략을 펼쳤습니다.\nLA는 올림픽에 사용했던 경기장의 70%를 기존에 있던 시설들을 활용했습니다. 선수촌 역시 LA 시내에 위치한 대학 기숙사를 썼고요. 경기장 명칭 사용권, 기업 스폰서십을 적극적으로 올림픽에 도입해 수입극대화에 전력을 다했습니다.\n둘째는 1976년부터 이어진 올림픽 자체의 위기 상황이 역설적으로 LA 올림픽의 흑자 경영을 도왔습니다. 1976년 캐나다 몬트리올 올림픽은 최악의 적자 올림픽이었고, 1980년 러시아 모스크바 올림픽은 서방 세계의 많은 국가들이 보이콧했던 반쪽짜리 올림픽이었습니다. 올림픽의 큰 위기를 감지했던 IOC는 개최지인 LA에 요구하는 사항도 매우 적었습니다. 이런 시대적 배경과 조직위원회의 노력 덕분에  LA는 1984년에 약 250만 달러의 흑자 올림픽을 기록할 수 있었습니다.\n동·하계를 합쳐서 50회가 넘는 올림픽이 열렸지만, 공식적으로 흑자를 기록한 올림픽이 단 한 번이라는 사실도 놀랍습니다. 올림픽 자체는 적자였지만, 장기적으로 올림픽 후유증을 지혜롭게 극복한 사례도 있을까요?\n1994년 노르웨이 릴레함메르 동계 올림픽 이야기를 해볼게요. 릴레함메르는 인구 3만 명이 채 안 되는 시골 마을이었습니다. 거의 모든 경기장을 새로 지어야 해서 경제적 부담이 무척 컸죠.\n릴레함메르는 올림픽을 위한 시설을 신축할 때부터, 올림픽 이후에도 시민들이 시설을 지속적으로 이용할 수 있도록 설계했는데요. 덕분에 선수촌과 미디어빌리지 등의 부대시설은 올림픽이 끝난 이후 정보통신 산업센터, 아파트, 노인 요양시설, 학교로 사용할 수 있었죠.\n또한 산림보호를 위해 생태 지하 암반을 파서 지은 동굴 모양의 ‘이외비크 경기장’은 큰 화제를 모았고, 올림픽이 끝난 뒤에도 100만 명 이상의 관람객이 찾는 국제적 명소가 되었습니다. 릴레함메르 동계 올림픽은 적자이긴 했지만, 환경과 시민복지 정책을 적극적으로 추진하며 전 세계에 도시를 각인시켰고 지역경제에도 긍정적인 영향을 주었습니다.\n이번 파리 올림픽이 후유증을 최소화하기 위해선 무엇이 필요하다고 보시나요?\n프랑스가 파리 올림픽을 통해 이루려는 가장 중요한 목표는 파리 시와 이민자들의 거주 비율이 높은 방리외(대도시 근교 지역)를 경제적·사회문화적으로 연결하는 것입니다. 실제로 프랑스는 지난 10여 년 동안 엄청난 재정을 방리외 재개발에 투자해 왔고요.\n하지만 도시 재개발은 젠트리피케이션 현상을 피하기 어렵습니다. 방리외에 살고 있던 주민들은 올림픽 개발로 인해 높아진 주택 가격과 렌트 비용을 감당하지 못하고 파리에서 더 먼 곳으로 이사를 해야 하는 문제가 발생할 가능성이 큽니다. 이미 파리 올림픽 주경기장이 위치해 있는 센 생드니 지구의 집값은 올림픽 이전에 비해 30%가량 상승했습니다.\n이민자, 지방 소외 문제 해결이 목표였지만 문제가 더 커질 수도 있겠네요.\n또 다른 문제는 이번 올림픽을 기점으로 새롭게 개발된 센 생드니 지구의 주택 단지로 파리지앵들이 입주를 꺼린다는 점입니다. 이민자들이 많이 거주하고 있는 지역에 대한 인식이 긍정적이지 않습니다. 특히 파리지앵의 자녀와 이민자의 자녀가 같은 학교에 다녀야 한다는 점을 탐탁지 않게 생각하는 경향이 큽니다. 이런 점에서 프랑스의 톨레랑스(관용) 정신이 잘 발현되지 않다고 볼 수 있죠.\n때문에 진정한 사회 통합을 위해 건설된 센 생드니 지구 주택단지의 분양 정책은 매우 중요합니다. 이 지역에 원래 살고 있던, 경제적으로 소외된 사람들에게 얼마큼의 주택을 분배해 줄 것인지가 어쩌면 파리 올림픽 후유증을 줄이는 데  중요한 변수가 될 것입니다.\n서울시가 2036년 서울 하계 올림픽 유치를 추진하고 있습니다. 선진국 반열에 오른 우리나라가 다시 한번 올림픽을 연다면, 어떤 경제적 효과를 예상할 수 있을까요?\n1988년 서울 올림픽을 개최할 때는 아직 개발도상국이었던 한국을 전 세계에 알리는 게 무엇보다 중요했습니다. 하지만 2036년에 서울이 다시 올림픽을 개최하게 될 경우에는 다른 의제 설정이 필요할 것으로 보입니다. 단순히 경기장과 각종 인프라 신축 효과를 위시한 경제효과만으로는 사회적 설득력을 갖기는 어려울 것 같고요.\n서울 올림픽이 한류의 핵심인 한국 콘텐츠 비즈니스의 전시장 역할을 할 수 있다면 관광 및 해외 투자가 더욱 활성화될 것으로 생각됩니다. 여기에 올림픽을 기점으로 한국이 상대적으로 뒤처져 있는 ‘기후 위기 대응’에 대한 혁신적인 변화를 이뤄낼 수 있다면 한국과 서울의 국제적 매력도가 상승할 수 있겠지요.\n결국 1988년 서울 올림픽이 대회 자체의 성공적 개최에 중점을 뒀다면 2036년 서울 올림픽은 대회를 통해 한국과 서울의 소프트 파워를 어떻게 보여줄 수 있느냐에 집중해야 부수적인 경제적 효과를 기대할 수 있습니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 주소은 Graphic 조수희",
        "content": "월간 토스픽 07. 올림픽 후유증",
        "contentSnippet": "월간 토스픽 07. 올림픽 후유증",
        "guid": "https://blog.toss.im/article/monthly-tosspick-2024-7",
        "isoDate": "2024-08-11T12:14:00.000Z"
      },
      {
        "title": "4세대 실손보험 보험료 최대 5% 할인받을 수 있어요",
        "link": "https://blog.toss.im/article/money-policies-21",
        "pubDate": "Thu, 08 Aug 2024 07:50:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}7월 1일부터 직전년도에 비급여 보험금을 수령하지 않은 4세대 실손의료보험* 가입자는 보험료를 할인받을 수 있어요.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*4세대는 2021년 7월 이후의 실손보험. 기존 실손보험에 비해 보험료가 낮아진 대신, 비급여 진료를 특약 보장으로 분리했어요. 비급여 보험금을 많이 받으면 보험료가 오르고, 비급여 보험료가 100만 원 미만이라면 보험료가 유지 및 할인되는 것이 특징이에요.\n금융위원회는 보험료 갱신 때 직전년도 의료 이용량과 연계해 보험료를 할인해 주고 있어요. 4세대 실손의료보험의 비급여보장 특약 가입자가 대상이에요.\n4세대 실손의료보험은 가입자 간 보험료 부담의 형평성을 높이기 위해 상품구조를 급여와 비급여로 분류하고 각각의 손해율에 따라 보험료를 해마다 조정하는데요. 보험료를 일률적으로 조정하는 급여와 달리 비급여는 보험금과 연계해 보험료를 차등 적용해요. 2021년 7월 출시한 이후 3년 동안 유예기간을 거쳐 이달 1일 이후 보험료 갱신 시점부터 보험료 차등 적용이 시행되고 있답니다.\n보험료 할인 여부는 보험료 갱신 전 1년간 수령한 비급여 보험금에 따라 5개 구간으로 등급을 나눠 결정해요. 가령 보험금을 전혀 받지 않았다면 1등급, 100만 원 미만으로 받았다면 2등급이에요. 100만 원 이상 보험금을 수령했다면 각각 3~5등급에 해당돼요. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}1등급의 경우 직전년도보다 보험료를 5%가량(잠정) 할인받을 수 있어요. 2등급이라면 보험료가 그대로 유지돼요.\n물론 보험료가 더 늘어날 수도 있어요. 비급여 보험금 수령액이 3~5등급에 해당하는 경우인데요. 할증률은 3등급 100%, 4등급 200%, 5등급 300%예요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n금융위원회는 보험료 할인 혜택을 받거나 유지되는 가입자가 각각 62.1%, 36.6%로 보험료가 늘지 않는 가입자가 98.7%에 달할 것으로 보고 있어요. 이때 의료취약계층 보호를 위해 산정특례대상질환으로 인한 의료비, 장기요양등급 1·2등급 판정자의 의료비는 할인·할증 대상에서 제외돼요.\n비급여 보험료 할인·할증 등급은 사전 안내를 위해 보험계약일이 속한 날의 3개월 전 말일부터 1년간 지급받은 보험료를 기준으로 계산하며 이 등급은 1년 동안만 유지돼요. 그 후에는 해마다 원점에서 등급을 재산정할 방침이에요.\n내 보험료 할인 단계를 알아보고 싶다면, 개별 보험회사의 홈페이지 또는 모바일 애플리케이션을 이용하면 돼요. 보험료 할인뿐만 아니라 할증 단계, 다음 보험료 할증 단계까지 남은 비급여 보험금, 비급여 보험금 수령액, 할인·할증 제외 신청을 위한 필요서류 등을 안내받을 수 있어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}Edit 이지영 Graphic 조수희",
        "content": "나도 할인받을 수 있는지 확인해 보세요.",
        "contentSnippet": "나도 할인받을 수 있는지 확인해 보세요.",
        "guid": "https://blog.toss.im/article/money-policies-21",
        "isoDate": "2024-08-08T07:50:00.000Z"
      },
      {
        "title": "반복되는 부동산 사이클 흐름을 파악하면 집을 사고파는 시점도 보여요",
        "link": "https://blog.toss.im/article/economic-terms-25-real-estate-cycle",
        "pubDate": "Thu, 08 Aug 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-p4abj2{display:contents;line-height:1.55;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}🔖 이번 주 경제 용어\n부동산 사이클\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}이번 주 경제 용어는 노후에 잘 살기 위해 필요한 정보예요.\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n부동산 시장에서 볼 수 있는 특정 주기의 변동성과 흐름을 말해요.\n\n\n부동산 사이클이 돌아온다는 말, 들어보셨나요? 부동산 시장엔 주기적으로 찾아오는 흐름이 있기 때문에 생긴 말인데요. 부동산 시장의 흐름을 살펴보면.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;} 확장 → 과열 → 수축 → 회복 네 단계로 나뉘고 반복됩니다. 확장 → 과열 단계를 부동산 상승 시기로, 수축 → 회복 단계를 부동산 하락 시기로 볼 수 있고요.\n이러한 사이클은 경제 상황, 금리, 인구, 정부 정책 등 여러 요인으로부터 영향을 받아요. 이러한 사이클이 발생하는 이유는 부동산은 적시성이 떨어지는 자산이기 때문입니다. 부동산은 수요와 공급이 비탄력적이기 때문에 가격 변동이 즉각적으로 이루어지지 않거든요.\n예를 들어 전세가가 상승하여 아파트를 사려는 사람이 늘어난다 해도, 하루 아침에 아파트를 만들어낼 수는 없잖아요. 이런 시기엔 매도자가 부르는 게 값인 시기가 됩니다.\n아파트에 대한 수요가 높아져 아파트를 짓기로 결정되면 꽤 오랜 시간이 소요됩니다. 인허가를 거쳐 착공까지 가는 데에 2~3년이 걸리고, 요즘과 같이 원자재, 인건비가 폭등한 시기에는 공사가 수월하게 진행되지 않습니다. 처음 예상한 공사 기간보다 더 오래 걸리곤 하죠. 결국 아파트가 완공된 시점에는 몇 년 전 하늘 높은 줄 모르고 오르던 매수 심리가 꺾이게 됩니다. 미분양이 나고 아파트 가격이 떨어지기도 해요.\n이런 상황에서 부동산 시장은 무조건 오른다는 ‘폭등론'도 맞고, 이제는 끝물이라는 ‘폭락론'도 맞는 말이 됩니다. 자, 그렇다면 이러한 부동산 사이클을 잘 알고 집을 사는 것이 좋겠죠?\n부동산 시장이 상승장으로 전환하기 위해서는 주택 구입에 대한 수요가 커져야 합니다. 다음과 같은 현상이 시장에 나타나면 부동산 상승장으로 전환될 가능성이 높아요. 집을 살 계획이 있다면 기억해두시는 것이 좋겠습니다.\n① 전세가가 오르고 있다면\n전세 시장의 동향은 주택 매매 시장 시장에 큰 영향을 미칩니다. 실수요자들이 주택 구입을 미루고 전세로 머무르게 되면 전세가율(=전세가/매매가)이 오르고, 전세가율 또한 높아지는데요. 매매가와 전세가가 가까워지면 갭투자 수요가 발생합니다. 갭투자는 시세 차익을 목적으로 매매가와 전세가의 차액(Gap) 만으로 투자하는 방법인데요. 실수요에 갭투자 수요까지 더해지면 매매 가격은 상승할 가능성이 높아집니다.\n② 한국은행 기준금리가 낮아진다면\n집을 살 때 현금만으로 사는 사람은 거의 없죠. 보통 자신의 연봉 몇 년 치를 대출받아 비싼 집을 구입하게 됩니다. 그렇다면 집을 살 때 받게되는 주택담보대출의 금리를 주목해야겠습니다.\n주택담보대출 금리가 2~3% 내외로 낮을 때 집을 사면 가장 좋습니다. 대출 이자에 대한 부담이 낮기 때문입니다. 대출 금리는 한국은행 기준금리를 따라가는데요. 이 때문에 기준금리가 하락하면 부동산 시장은 상승장에 올라갈 가능성이 큽니다. 대출 이자에 대한 부담이 상대적으로 낮아지니 주택담보대출을 이용해 집을 구입하려는 사람들이 많아질 수 있기 때문입니다.\n단, 주택담보대출 금리가 6~8%까지 오르더라도 부동산 가격이 더 오를 것이라는 기대감이 시장에 팽배해 있다면, 부동산과 대출에 대한 수요는 증가할 수 있어요.\n③ 정부의 부동산 정책이 완화된다면\n정부의 부동산 정책도 시장에 영향을 미칩니다. 정부가 부동산 규제를 완화하면 사람들은 더 좋은 조건과 저렴한 가격으로 주택을 구입할 수 있다는 기대를 가지게 되겠죠.\n보통 대출 규제를 풀어주는 것을 시작으로, 정부가 지원하는 정책 대출 상품 제공, 양도세 특례법 시행, 토지 거래 허가제 해제 등의 규제 완화 조치가 발표됩니다.\n이러한 정부 정책의 변화는 주택 구매 수요자를 증가시키고, 부동산 시장의 상승장을 이끌 수 있습니다.\n반대로 전세가가 내려가고, 한국은행 기준금리가 오르고, 정부 부동산 정책 규제가 강화되는 현상이 시장에 나타난다면 부동산 시장이 하락장으로 전환될 가능성이 높다고 볼 수 있겠죠?\n이러한 요인들을 면밀하게 관찰하고 분석하면 좋은 기회를 잡을 수 있을 것입니다. 내가 집을 살 때는 부동산 규제 완화 시기인 매수자 우위의 시장에서, 팔 때는 규제 강화 시기인 매도인 우위의 시장에서 움직이는 것이 유리할 수 있습니다.\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}하반기에 집값 오른다…상승 전망 확 늘었다\n(헤럴드경제 2024.7.10)\n부동산R114가 지난달 24일부터 이달 5일까지 전국 1028명을 대상으로 ‘2024년 하반기 주택 시장 전망’ 설문조사를 실시한 결과 10명 중 3명 이상(3.6명)이 하반기 주택 매매 가격이 상승할 것으로 내다봤다.\n직전 조사에서 상승 응답이 하락 응답을 2년 만에 역전(상승 30%, 하락 25%)했는데, 이번 조사에서 상승(36%)과 하락(21%) 사이 격차가 더 벌어진 것이다. 다만 직전 조사와 마찬가지로 보합에 대한 전망이 10명 중 4명 수준으로 여전히 가장 많은 답변을 차지했다.\n매매 가격 상승 응답자 다수는 ‘핵심 지역의 아파트 가격 상승(32.05%)’을 이유로 선택했다. 올해 들어 서울 강남권과 마·용·성 등의 한강 벨트를 중심으로 신고가 거래가 늘어나면서 외곽지 중심으로 거래량은 물론 가격도 회복세에 들어갔기 때문으로 해석된다.\n그 다음으로는 ‘기준 금리 인상 기조 변화(23.56%)’를 주요 이유로 선택했다. 한국은행 기준금리가 지난 해 2월 이후 1년 이상 연 3.5% 수준에서 동결됐고, 미국도 같은 해 9월 이후 1년 가까이 연 5.25~5.5%로 금리를 등결해 하반기 금리 인상 사이클 종료(인하) 기대감이 커졌기 때문이다.\n이밖에 ▷급매물 위주로 실수요층 유입 (11.23%) ▷아파트 분양시장 활성화(9.32%) ▷서울 등 주요 도심의 공급부족 심화(7.40%) 등이 꼽혔다.\n반면 매매 가격이 하락할 것으로 전망한 응답자 10명 중 4명은 ‘경기 침체 가능성(39.91%)’을 이유로 선택했다. 과거 대비 낮아진 경제성장률 전망(저성장)과 물가 상승에 따른 소비 위축 등으로 경기 침체에 대한 우려감이 여전히 높기 때문이다. (중략)\n\n\n부동산 전문 조사 기관에서는 시장 분석 및 예측, 투자자와 소비자 지원, 정책 수립에 필요한 정보를 제공하기 위해 주기적으로 사람들의 부동산 시장에 대한 심리를 조사합니다.\n부동산R114가 최근 실시한 ‘2024년 하반기 주택 시장 전망' 설문 조사에 따르면, 주택 매매 가격이 오를 것이라는 응답이 높았습니다. 상승도 하락도 아닌 보합으로 유지될 것이라는 응답이 가장 높긴 하지만, 상승과 하락 두 답변만 놓고 봤을 때 상승 응답이 더 많다는 점, 직전 조사 대비 이번 조사에서 둘의 격차가 더 벌어졌다는 점을 주목해야 할 것 같네요.\n또한 부동산 사이클에서는 전세가 상승이 매매 가격 상승으로 이어진다고 보는데요. 이번 조사에서 전세가에 대해서도 확인한 결과, 상승 전망이 하락 전망의 세 배를 웃돌며 많은 사람들이 전세가가 오를 것으로 예상했습니다. \n결론적으로 주택 매매가와 전세가 모두 상승할 것이라 보는 부동산 상승론 전망이 우세하다는 것을 확인할 수 있습니다. 그렇다면 부동산 시장에서 가격이 상승할 때 매도자와 매수자 입장에서 각각 취해야 할 액션에 대해서도 한번 살펴볼까요?\n매도자 입장에서는 이런 점들을 준비하면 좋습니다.\n.css-hokoge{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;counter-reset:numberedList;}.css-hokoge ul,.css-hokoge ol{margin:16px 0 0;}.css-hokoge>li{counter-increment:numberedList;margin-bottom:16px;padding-left:24px;}.css-hokoge>li:last-of-type{margin-bottom:0;}.css-hokoge>li>span{position:relative;}.css-hokoge>li>span>:first-child::before{content:counter(numberedList) '.';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n시장조사 및 주택 가격 설정: 현재 보유하고 있는 주택이 위치한 지역 내에서 최근 거래된 부동산 가격을 조사해 시장 가격을 파악합니다. 부동산 전문가나 공인중개사분들의 도움을 받아 적절한 매도 가격을 설정할 수 있습니다.\n적정 매도 시점 선택: 부동산 시장에서의 가격 추이를 주시하면서 적정한 매도 가격을 확보할 수 있는 시점을 예측해봅니다. 금리 등 경제 지표나 정부가 발표하는 부동산 정책 변화 등을 고려해 최고점에서 매도할 수 있도록 계획해 봅니다.\n집 상태 개선: 부동산 가치를 높이기 위해 수리나 개선 작업을 진행합니다. 깔끔하고 매력적인 상태를 유지해 집을 사려는 사람이 방문할 때 좋은 인상을 줄 수 있도록 준비합니다.\n협상 준비: 매수자와의 협상에서 유리한 위치를 차지하기 위한 협상 전략을 준비합니다. 예를 들어, 같은 아파트 단지에서 비슷한 평수의 집이 10억 원에 거래됐다면 이를 근거로 10억 이상의 가격을 제시할 수 있을 만한 강점을 보여주는 것이죠. \n또는 여러 매수자들에게 매물을 적극적으로 보여주고 최상의 조건을 제시한 분과 거래를 진행할 예정이라 알리며, 매수자들이 더 좋은 조건을 제시하도록 유도할 수도 있겠습니다. \n부동산 거래는 가격이 딱 정해져있지 않아 심리전도 중요하기 때문에, 시간에 여유를 두고 협상하는 것이 좋습니다. 당장 급하게 팔지 않아도 되는 상황을 만들어두는 것이 유리하며 매수자가 제시한 가격이 만족스럽지 않다면 더 기다려보겠다고 하는 것도 방법이 될 수 있습니다.\n\n반대로 매수자 입장에서는 이런 점들을 준비하면 좋습니다.\n\n예산 계획 수립: 현재 재정 상황을 꼼꼼하게 검토합니다. 모아둔 돈이 얼마인지, 은행에서 대출을 받아야 할 경우 LTV와 DSR 등 한도를 고려해 가용할 수 있는 금액이 얼마인지, 대출금을 매월 갚아나가야 하므로 매월 소득에서 얼마 정도 대출을 갚는 데에 쓸 수 있는지 등을 확인해야 합니다.\n시장 조사: 관심있는 지역 후보군을 여러 곳 찾아보고 직접 방문해 가장 마음에 드는 지역을 선정합니다. 해당 지역의 부동산 시장을 파악하기 위해 부동산에 방문해 공인중개사와 이야기를 나누며 동향을 파악하는 것도 좋은 방법입니다. 네이버 부동산, 아실 등 인터넷 서비스를 활용해 최근 거래된 부동산의 가격을 미리 조사해가면 부동산과 대화를 나눌 때 더 알찬 정보를 얻을 수 있을 것입니다.\n우선순위 설정: 자신에게 가장 중요한 요소가 무엇일지 우선순위를 매겨봅니다. 직장과의 거리, 집의 크기 및 방향, 주변 환경 등 내가 집을 살 때 가장 중요하게 여기는 것에 높은 우선순위를 매기는 것이 좋겠죠.\n빠른 결단력: 부동산 상승 시장에서는 경쟁이 치열합니다. 인기가 많은 집은 원하는 사람이 많기 때문에 빠르게 거래될 수 있습니다. 적합한 매물을 발견하면 빠르게 결정을 내릴 수 있어야 하며, 필요한 경우 신속하게 계약을 체결하기 위해 가계약금 정도의 자금은 미리 준비하는 것이 좋습니다.\n협상 전략: 매도자와의 협상에서 최대한 유리한 조건을 얻기 위한 협상 전략을 준비합니다. 예를 들어, 가용 가능한 예산 범위를 확실하게 설정해두고 이 범위를 벗어나지 않고 거래하고 싶다는 의사를 매도자에게 명확하게 전달하는 것이죠.\n또한 마음에 드는 매물이 하나만 있지 않다는 것을 매도자에게 알리는 것도 필요합니다. 실제로 마음에 드는 매물을 두세 곳 정해두는 것이 좋고, 여러 매물을 보고 있지만 이곳이 가장 마음에 드니 가격 조정을 시도해 예산 범위를 넘지 않도록 해야 합니다.\n중개인에게 매도자의 상황을 넌지시 물어보고 파악하는 것도 필요합니다. 만일 매도자가 급하게 집을 팔아야 하는 상황이라면, 매수자 입장에서 원하는 가격을 제시했을 때 받아들일 확률이 더욱 높아지거든요.\n\n\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n정책 대출 상품: 정부나 공공기관이 특정 목표를 달성하기 위해 제공하는 대출 프로그램. 이 상품들은 보통 일반 대출보다 낮은 금리와 유리한 조건을 제공하며, 특정 집단이나 활동을 지원하는 것을 목적으로 합니다. 대표적으로 최근 신생아 특례 대출이 이에 해당돼요.\n전세 사기: 이중 계약, 허위 매물, 담보 설정 주택, 명의 도용 등 임차인이 전세 계약을 맺는 과정이나 전세 계약이 종료된 후 보증금을 받지 못하는 상황. 최근 빌라 중심으로 전세 사기가 많아 사회적 문제가 되고 있습니다.\n신생아 특례대출: 정부가 출산을 장려하고 신생아를 둔 가구의 주거 안정을 지원하기 위해 마련한 대출 상품. 금리와 한도 등의 혜택을 제공합니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "부동산 사이클을 이해하면 상승론도 하락론도 모두 맞는 말이에요.",
        "contentSnippet": "부동산 사이클을 이해하면 상승론도 하락론도 모두 맞는 말이에요.",
        "guid": "https://blog.toss.im/article/economic-terms-25-real-estate-cycle",
        "isoDate": "2024-08-08T02:00:00.000Z"
      },
      {
        "title": "상속세를 줄일 수 있다는 사전증여, 무조건 절세에 유리할까?",
        "link": "https://blog.toss.im/article/inheritance-and-gift-tax-06",
        "pubDate": "Wed, 07 Aug 2024 07:48:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}우리나라 상속세는 다음 표와 같이 상속재산이 많아질수록 세율이 높아지는 누진세율 구조로 되어있습니다. 이런 이유로 사전증여를 통해 상속재산에 포함되는 재산을 줄여 낮은 구간의 상속세율을 적용하려는 시도를 많이 하고 있습니다. (증여세 세율도 상속세 세율과 같습니다)\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n상속할 재산을 미리 분산하면 상속세 과세표준이 줄어들게 되는데요. 과세표준을 줄이기 위해 사전증여를 하면 절세 효과가 있을 수 있습니다. 하지만 상속세를 아끼려 시도한 사전증여가 오히려 불리할 수도 있어요.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}상속과 증여, 차이점은?\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n상속은 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}피상속인이 사망할 때 이뤄지지만, 증여는 피상속인이 살아있는 상태에서 이뤄집니다.\n상속은 4촌 이내의 가족에게만 할 수 있지만, 증여는 가족이 아닌 사람에게도 할 수 있습니다.\n상속은 상속 시점에 모든 재산이 한꺼번에 이전되지만, 증여는 10년 단위로 재산을 이전할 수 있습니다.\n\n\n\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n사전증여를 하면 오히려 세금이 더 나올 수 있다?\n김토스 – 5억 원짜리 아파트 2채와 기타 재산 2억 원을 모아 총 재산이 12억 원입니다. 부인과 성인이 된 아들 둘과 함께 가족을 이루고 있고요.\n얼마 전 부자들은 상속세를 줄이기 위해 사전증여를 한다는 말을 들었는데요. 저도 아파트 2채를 아들들에게 사전증여하면 상속세를 줄일 수 있을까요?\n​택스코디 – 사전증여를 하는 것이 꼭 상속세를 줄이는 것으로 이어지지는 않을 수 있습니다. 어쩌면 세금이 더 나올 수도 있으니 주의해야 하는데요. 그 이유는 상속개시일로부터 10년 이내에 상속인들에게 증여한 재산은 상속재산에 가산하여 상속세를 계산하기 때문입니다.\n이때 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}상속재산에 합산된 사전증여 재산은 상속공제를 받을 수 없다는 사실을 명심해야 합니다. 즉, 상속공제 한도를 적용받기 때문에 일괄공제 5억 원, 배우자공제 5억 원 등의 상속공제를 제대로 적용받을 수 없어, 상속세 과세표준은 늘어날 수 있으므로 오히려 세금이 더 많이 나올 수도 있다는 말입니다.\n그럼 10년 이내 상속이 발생한다는 가정 하에, 사전증여 했을 때와 사전증여 없이 모두 상속을 받을 때의 세금을 자세히 비교해볼까요?\n\n[사전증여 후 10년 이내에 상속 발생]\n\n1. 증여세\n\n자녀 1인 당 아파트(5억 원) 1채씩 사전증여 예정 → 사전증여재산으로 구분\n\n과세표준\n= 5억 원 - 5천만 원 (증여공제)\n= 4억 5천만 원\n산출세액\n= 4억 5천만 원 × 20% - 1천만 원 (누진공제)\n= 8천만 원\n총 증여세\n= 8천만 원 × 증여받은 자녀 수 2인\n= 1억 6천만 원\n\n\n\n\n2. 상속세\n\n사전증여한 아파트(5억 원) 2채 → 사전증여재산으로 구분\n기타 재산 2억 원 → 상속재산으로 구분\n사전증여 후 10년 이내 발생한 상속은 사전증여재산이 상속재산에 합산되기 때문에 상속공제 불가 → 일괄공제/배우자공제 등 한도 적용\n\n과세표준\n= 10억 원 (사전증여재산) + 2억 원 (상속재산) - 2억 원 (상속공제 한도 적용)\n= 10억 원\n산출세액\n= 10억 원 × 30% - 6천만 원 (누진공제)\n= 2억 4천만 원\n납부할 상속세\n= 2억 4천만 원 - 1억 6천만 원(증여세액 공제)\n= 8천만 원\n\n\n\n사전증여를 했지만 10년 이내에 상속이 발생하면, 총 납부할 세액은 증여세 1억 6천만 원과 상속세 8천만 원을 합해 .css-1swx3yz{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;font-weight:bold;}2억 4천만 원이 됩니다.\n\n[사전증여 없이 모두 상속으로 받을 때]\n\n아파트(5억 원) 2채와 기타 재산 2억 원 → 상속재산으로 구분\n상속재산이므로 상속공제 가능 → 일괄공제 5억 원, 배우자공제 5억 원 한도 적용\n\n과세표준\n= 12억 원 - 10억 원 (일괄공제 + 배우자공제)\n= 2억 원\n산출세액\n= 2억 원 × 20% - 1천만 원(누진공제)\n= 3천만 원\n\n\n\n​사전증여를 하지 않았을 때 상속세 과세표준은 2억 원으로 사전증여를 한 경우인 10억 원과 비교해 8억 원이 적습니다. 다시 말하지만, 사전증여를 했을 때 오히려 과세표준이 더 큰 이유는 합산된 사전증여재산은 상속공제를 받지 못하기 때문입니다.\n사전증여를 하지 않았을 때 상속세는 3천만 원으로, 사전증여를 한 경우 증여세와 상속세를 합한 2억 4천만 원보다 무려 2억 1천만 원이 줄어들게 됩니다. 따라서 김토스 씨는 사전증여를 하지 않고 모두 상속을 하는 것이 유리합니다.\n\n시골 농지, 증여와 상속 중 뭐가 더 유리할까?\n김토스 – 시골에서 평생 농사만 지으며 살아오신 아버지께서 이제 나이가 드셔서 더는 농사짓기가 힘드니, 제게 농지를 증여해 주시겠다 합니다.\n그런데 저는 직장을 다니고 있어 농사를 지을 생각이 없습니다. 농지를 받게 되면 즉시 팔 가능성이 매우 큽니다.\n농지를 지금 증여받는 것과 아버지가 돌아가실 때 상속받는 것 중 어느 쪽이 세금 측면에서 더 유리한가요?\n택스코디 – 아버지에게 농지를 증여 또는 상속받은 후 경작하지 않고, 양도할 가능성이 크다면 양도소득세도 같이 고려해야 합니다.\n결론부터 말하자면, 자경농지 세액감면은 증여보다 상속으로 받을 때가 절대적으로 유리합니다. 아버지가 8년 이상 재촌자경한 농지를 자녀가 상속받는 경우 아버지(피상속인)가 경작한 기간도 자녀(상속인)의 경작 기간으로 인정해주기 때문입니다.\n즉, 자경농지 세액감면 혜택 범위에 들어오는 조건일 경우, 상속개시일(부친 사망일)로부터 3년 이내에 양도한다면 자경농지 세액감면 혜택을 받을 수 있다는 말입니다.\n\n자경농지 세액감면 혜택이란?\n\n양도소득세와 관련해서는 ‘자경농지 세액감면’ 요건을 충족할 경우 상당한 절세가 가능합니다. 농지소재지에서 거주하는 사람이 8년 이상 직접 경작한 농지를 양도하는 경우, 양도소득세를 1년에 1억 원 한도(5년 간 세액감면 합계 2억 원 한도)로 감면해주는 것을 ‘자경농지 세액감면’이라 합니다.\n\n하지만 농지를 증여받으면 아버지가 경작한 기간이 자녀의 경작 기간으로 인정되지 않습니다. 따라서 아버지의 농지를 증여받는다면, 자녀가 직접 8년 이상 재촌 자경해야만 양도 시 자경농지 세액감면을 받을 수 있습니다.\n정리하면 농지를 받은 후 농사를 지을 계획이 없다면, 부친으로부터 농지를 상속받은 후 상속개시일로부터 3년 이내에 양도하는 것이 가장 좋습니다. 본인이 직접 경작하지 않고도 자경농지 세액감면을 받을 수 있으므로 양도소득세 측면에서 유리하기 때문입니다.\n참고로 아버지의 농지는 자녀가 양도하는 날 기준으로 농지여야 하고, 공부상 지목이 아닌 실제 사용 용도가 농지여야 하며, 농지소재지가 비도시지역(관리지역·농림지역·자연환경보전지역)이어야 감면 혜택을 받을 수 있습니다. \n혹시 농지소재지가 도시지역(주거지역·상업지역·공업지역)으로 편입되었다면, 편입된 날로부터 3년이 경과했을 때 감면 혜택을 받을 수 없다는 점을 참고해야 합니다.\n그렇다면 사전증여가 유리한 상황은 언제일까?\n현금이 아닌 부동산을 사전증여하고 나중에 가격이 많이 오르는 상황에서는, 10년 내 상속이 발생하더라도 사전증여를 통해 절세 효과를 볼 수 있습니다. 사전증여한 부동산은 상속일 기준 시세가 아니라 증여 당시 시세로 계산되기 때문입니다.\n김토스 – 그럼 사전증여가 유리한 상황은 구체적으로 언제라 볼 수 있나요?\n​택스코디 – 두 가지 경우로 정리해 볼 수 있습니다.\n1. 추후 시세 상승이 클 것으로 예상하는 부동산 또는 주식 등은 사전증여하는 것이 좋습니다.\n2. 증여하고 난 후 10년이 지난 이후에 상속이 예상되면 사전증여가 유리할 수 있습니다. (단, 적용받을 수 있는 상속공제가 크다면 사전증여가 필요 없을 수 있으니 함께 고려해야 합니다.)\n예를 들어 총재산 15억 원 중 10억 원짜리 아파트 1채를 자녀에게 미리 증여하고, 다른 재산이 5억 원 남은 경우를 가정해봅시다.\n나중에 아버지가 돌아가셨을 때 이 아파트가 20억 원까지 2배 상승했다면, 설령 10년 내 상속이 개시된다고 하더라도 상속세를 크게 줄일 수 있습니다. 상속재산에 합산되는 사전증여 금액은 증여했던 당시의 아파트 가격인 10억 원으로 고정되어 계산되기 때문입니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "사전증여가 상속보다 유리하다? 오히려 세금이 더 나올 수도 있어요",
        "contentSnippet": "사전증여가 상속보다 유리하다? 오히려 세금이 더 나올 수도 있어요",
        "guid": "https://blog.toss.im/article/inheritance-and-gift-tax-06",
        "isoDate": "2024-08-07T07:48:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]