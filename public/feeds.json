[
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Networking at the Heart of AI — @Scale: Networking 2025 Recap",
        "link": "https://engineering.fb.com/2025/09/26/networking-traffic/networking-at-the-heart-of-ai-scale-networking-2025-recap/",
        "pubDate": "Fri, 26 Sep 2025 16:00:52 +0000",
        "content:encodedSnippet": "AI is everywhere and, as network engineers, we are right in the thick of it: building the network infrastructure for AI. This year, at  our largest @Scale:Networking ever, engineers from Meta, ByteDance, Google, Microsoft, Oracle, AMD, Broadcom, Cisco, and NVIDIA came together to share our latest experiences in architecting, designing, operating, and debugging our AI networks. It’s clear what an important role the network has had so far in enabling our large-scale AI advances. Looking forward, we are enabling and defining the future of AI with our networking.\n\nSetting Context: Rapid Changes and Evolution\nGiven AI continues to drive so much innovation in networking and general infrastructure, we once again focused @Scale: Networking on AI networking, sharing the new insights and progress in the field. In this past year, we’ve seen two important trends: \nAI Infra on the Center Stage. \nAcross the industry, AI companies are planning hundreds of billions of dollars of infrastructure build over the next several years. At Meta, this meant investing in building our gigawatt-scale clusters like Prometheus and Hyperion, providing clean and renewable power, and laying the largest transoceanic fiber cable systems in the world to ensure billions across the globe have access to all this AI innovation. In the short-term, we’ve even expanded our construction portfolio with “sprung structures” to bring capacity on-line as quickly as possible. \nThe Models and the Primary AI Workloads Are Rapidly Evolving.\nWe’ve focused a lot over the last several years on the requirements of large-scale, foundational training. At Meta, we went from 4K to 24K to 129K-GPU clusters based on Ethernet/RoCE in less than two years, tackling new challenges in high performance and high reliability with each leap. Now, in the last 9-12 months, we’ve seen a rapid expansion of workloads that include mixture-of-experts, reasoning models, reinforcement learning, post-training, synthetic data generation, distributed inference, and more. All of these have different network requirements, and they are all now part of our challenge.\nThe Role of the Network in AI\n\nWith this context, the network’s importance becomes even more clear. \nThe Network Is the Computer\nBetween the rapidly changing AI workloads and massive physical infrastructure builds, the network plays the interface role of abstracting the underlying infrastructure as much as possible to the workloads. From the model perspective, the infrastructure should look like one gigantic GPU, and the network is key to this abstraction.\nCo-Designing the Network With the AI Stack\nAchieving this abstraction goal requires addressing challenges like varying distances and bandwidths (especially in the scale-up and scale-out domains), and hardware variety across different accelerators, NICs, and fabrics. It’s a full-stack/end-to-end problem for networking, bringing to bear all our experience in NICs, routing, and congestion control, and tuning all these closely with the GPU-based stack.\nReliability Is Key\nNot only do we have to provide the performance and ease-of-use the models expect, but we also must operate this infrastructure with high reliability, finding and quickly reacting to those failures seamlessly. \nInnovation and Optionality\nGoing forward, we need to continually innovate to stay ahead and provide optionality, as we expect constant change above us in the models/workloads and below us in the rest of the infrastructure. We want a network stack that blends the best of high performance computing’s capabilities with open and scalable distributed system principles, ensuring we’re ready for whatever comes next.\nMore from @Scale:Networking 2025 \n\nPlease visit the @Scale YouTube channel to check out all the talks from this year’s Networking @Scale. Meta continually organizes all the @Scale events  (Systems & Reliability, AI & Data, and the upcoming Product in October) so our communities can share the innovations and challenges we’re tackling and can learn from each other.\nWe had a variety of talks with live Q&As with two major themes:\nUnderlying physical network infrastructure talks: switch topologies and control plane, NIC and host networking, and scalable operations/high reliability.\nHigher-layer, model-oriented talks: parallelism design, job-level debuggability, scaling for large pre-training, and handling new use cases in reinforcement learning, mixture of experts, and inference.\nFrom the perspective of what’s coming in the future for AI and networking, we had keynotes from Meta and Microsoft and a vendor panel with key GPU and network ASIC vendors.\nWe thank again everyone from Meta, ByteDance, Google, Microsoft, Oracle, AMD, Broadcom, Cisco, and NVIDIA who worked with us to share all of their latest learnings with the community. We look forward to what promises to be another rapid year of network and AI innovation that we’ll cover at the next @Scale: Networking in 2026!\nThe post Networking at the Heart of AI — @Scale: Networking 2025 Recap appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>AI is everywhere and, as network engineers, we are right in the thick of it: building the network infrastructure for AI. This year, at  our largest @Scale:Networking ever, engineers from Meta, ByteDance, Google, Microsoft, Oracle, AMD, Broadcom, Cisco, and NVIDIA came together to share our latest experiences in architecting, designing, operating, and debugging our AI [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/09/26/networking-traffic/networking-at-the-heart-of-ai-scale-networking-2025-recap/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/09/26/networking-traffic/networking-at-the-heart-of-ai-scale-networking-2025-recap/\">Networking at the Heart of AI — @Scale: Networking 2025 Recap</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "AI is everywhere and, as network engineers, we are right in the thick of it: building the network infrastructure for AI. This year, at  our largest @Scale:Networking ever, engineers from Meta, ByteDance, Google, Microsoft, Oracle, AMD, Broadcom, Cisco, and NVIDIA came together to share our latest experiences in architecting, designing, operating, and debugging our AI [...]\nRead More...\nThe post Networking at the Heart of AI — @Scale: Networking 2025 Recap appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22940",
        "categories": [
          "ML Applications",
          "Networking & Traffic"
        ],
        "isoDate": "2025-09-26T16:00:52.000Z"
      },
      {
        "creator": "",
        "title": "Video Streaming With the AV1 Video Codec in Mobile Devices",
        "link": "https://engineering.fb.com/2025/09/24/video-engineering/video-streaming-with-av1-video-codec-mobile-devices-meta-white-paper/",
        "pubDate": "Wed, 24 Sep 2025 08:00:44 +0000",
        "content:encodedSnippet": "Today, Meta, Vodafone, and Google released a white paper, “Video Streaming with the AV1 Video Codec in Mobile Devices,” detailing the benefits of the AV1 codec, an advanced video compression technique, to enhance the streaming video experience on mobile devices. \nThe white paper recommends that:\nVendors of core processors (SoCs) should evaluate the adoption of AV1 hardware.\nIn scenarios where this is not an option, vendors should consider using a software-based AV1 decoder, which can help with the transition to AV1 in low/mid-tier devices.\nToday, video content represents between 70-80% of all mobile data traffic. And low- and mid-tier handsets account for around 75% of handset sales globally. AV1 decoding can be implemented in smartphones in both hardware and software. Our testing has shown that increasing the use of AV1 in low- to mid-tier smartphones can deliver video quality on par with premium handsets and free up network capacity while optimising computing power and storage. \nWhy We Recommend AV1 for Streaming Video on Mobile\nAt Meta, we’ve already implemented AV1-compatible codecs into our technologies. Along with other large technology companies, like Google, we’ve found that AV1 codecs can enhance video compression by 30% compared to prior standards like H.264 and VP9, making it suitable for most types of video format.\nCaption: AV1 offers up to 30% better compression over earlier codecs such as VP9 and H.264.\nHowever, many of the mobile phones in use today are lower- and mid-tier handsets that lack the necessary codec, particularly built-in hardware, to decompress files with AV1 to deliver a buffer-free video experience. \nDespite the improvement in user-experience, smartphone chipset support for such codecs today remains limited to higher tier products. Advanced video compression technology in mid- and low-tier smartphones would enhance the viewing experience for more people. \nThis is an opportunity to further collaborate among content providers and network operators to align with chipset manufacturers and device operating system developers to guarantee the best quality of experience to end-users, while ensuring optimal utilization of network resources with reduced congestion.\nThe Advantage of AV1\nAV1 has matured enough to help operators deal with the increasing amount of video traffic to mobile devices while also saving on compute, edge cache resources, and energy costs. Greater adoption of AV1 would help reduce network capacity for mobile operators while also helping them meet increasing user demand.\nAV1 can be implemented either as a smartphone software upgrade or embedded in mobile devices’ core processors (SoCs) for better battery efficiency and performance for end users. As highlighted in the white paper, AV1 hardware can give smartphone manufacturers superior energy-efficient compression gains compared to other techniques, without compromising connection speeds.\nDownload the White Paper\n“Video Streaming with the AV1 Video Codec in Mobile Devices“\nThe post Video Streaming With the AV1 Video Codec in Mobile Devices appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Today, Meta, Vodafone, and Google released a white paper, “Video Streaming with the AV1 Video Codec in Mobile Devices,&#8221; detailing the benefits of the AV1 codec, an advanced video compression technique, to enhance the streaming video experience on mobile devices.  The white paper recommends that: Vendors of core processors (SoCs) should evaluate the adoption of [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/09/24/video-engineering/video-streaming-with-av1-video-codec-mobile-devices-meta-white-paper/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/09/24/video-engineering/video-streaming-with-av1-video-codec-mobile-devices-meta-white-paper/\">Video Streaming With the AV1 Video Codec in Mobile Devices</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Today, Meta, Vodafone, and Google released a white paper, “Video Streaming with the AV1 Video Codec in Mobile Devices,” detailing the benefits of the AV1 codec, an advanced video compression technique, to enhance the streaming video experience on mobile devices.  The white paper recommends that: Vendors of core processors (SoCs) should evaluate the adoption of [...]\nRead More...\nThe post Video Streaming With the AV1 Video Codec in Mobile Devices appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22924",
        "categories": [
          "Video Engineering"
        ],
        "isoDate": "2025-09-24T08:00:44.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Lena Morozova",
        "title": "How Java Open-Source Projects Use IntelliJ IDEA: Real-World Examples – Part 2",
        "link": "https://blog.jetbrains.com/blog/2025/09/26/how-java-open-source-projects-use-intellij-idea-real-world-examples-part-2/",
        "pubDate": "Fri, 26 Sep 2025 07:08:04 +0000",
        "content:encodedSnippet": "In Part 1 of this series, we introduced some of the Java community’s most recognized open-source projects. Now, we’re back with more standouts: projects that speed up builds, strengthen testing, and simplify working with modern web stacks. And as always, IntelliJ IDEA helps maintainers move faster, confidently, and with a focus on quality.\n🌿 jsoup\nA Java library for working with real-world HTML.\nWith a name that reflects the messy “tag soup” of early web content, jsoup was created in 2009 after regex-based HTML parsing proved too fragile and in response to existing Java HTML libraries feeling clunky and limited. Inspired by the simplicity of jQuery, jsoup was designed to make HTML parsing in Java intuitive and enjoyable. Today, it offers easy-to-use tools for parsing, cleaning, and manipulating HTML, with support for HTML5, XML, sanitization, W3C APIs, and more.\nIntelliJ IDEA is my go-to IDE – intuitive, powerful, and great at navigating code, data flows, and tests. Its inspections catch issues early, while built-in tools for testing, profiling, and dependency management have directly improved jsoup’s development.\n— Jonathan Hedley, creator of jsoup\nEven though jsoup is pretty mature at this point, development continues. Recent additions include native HTTP/2 request support for efficient connections and a fast new hybrid DOM+SAX-style StreamParser. Future plans include custom tag support, an improved pretty printer, and an enhanced HTML cleaner. If you’d like to help or have other ideas, visit the jsoup website to get involved!\n🚀 http4k\nA lightweight, functional toolkit for building HTTP services in Kotlin.\nInspired by Twitter’s Your Server as a Function paper, http4k began as a 40-line script and has grown into 180 modules. Built on pure functions with no dependencies or reflection, it’s fast and highly portable, running in memory, on 14 server backends, 6 serverless platforms, or as a GraalVM binary. With a focus on radical simplicity and extreme testability, http4k is designed to be the most testable web toolkit available today.\nBeing power users of IntelliJ IDEA, we are massive fans of JetBrains products. We not only use the refactoring abilities of the IDE to manipulate and remodel code reliably, but can also easily do cross-language development using the same keybindings.\n— David Denton and Ivan Sanchez, creators of http4k\nhttp4k keeps expanding, with recent additions including a Model Context Protocol (MCP) SDK for stateless, serverless deployment; Datastar integration; the TracerBullet module, which generates sequence diagrams of code behavior by running tests; and an upcoming transactional outbox module. As always, everything is built with composable functions and a strong focus on testability.\n🧞 Selenide\nA concise testing library for stable, readable, and fast UI tests.\nSelenide was created out of necessity. At the time, there were no mature UI testing libraries for Java, and Selenium WebDriver required extensive boilerplate that made tests harder to read and slowed development. So, Andrei Solntsev distilled his internal automation tools into a concise, expressive library that simplifies the process of writing browser tests.\nIntelliJ IDEA is my favorite IDE in every way – it even influenced the design of Selenide. I built the library so that IntelliJ IDEA could automatically suggest available methods, making it easy for developers to discover functionality without reading extensive documentation. Just type a dot and let the IDE guide you.\n— Andrei Solntsev, creator of Selenide\nToday, the Selenide team continues to focus on stable and readable tests, fast execution, and a smooth developer experience. They are actively working on BiDi protocol support, better docs, and more integration with evolving Selenium standards.\n🧠 Flix\nAn effect-oriented programming language with a solid theoretical foundation.\nDeveloped at Aarhus University, Flix combines functional, imperative, and logic programming paradigms. At the heart of Flix is its powerful effect system, featuring algebraic effects and handlers for improved modularity and code clarity, local mutation to isolate side effects within pure functions, and purity reflection, which allows for safe automatic parallelization and lazy evaluation.\nDespite its academic roots, Flix is used for real-world applications, with a strong focus on performance, reliability, and the developer experience.\nThe Flix compiler is written primarily in Scala, and our development team works almost exclusively in IntelliJ IDEA – its built-in profiler has been instrumental in developing an efficient type inference implementation, and the debugging facilities see daily use in tracking down elusive bugs in the source code.\n— Magnus Madsen, Flix core developer\nThe team is actively working toward a 1.0 release, continuing to improve the effect system and the developer experience, and providing more precise and actionable feedback at error sites.\n🌐 Kobweb\nA modern framework for building web applications in Kotlin.\nKobweb was born out of a desire to bring the power of Compose to web development using Kotlin. At the time, most web frameworks centered around JavaScript and TypeScript, with limited options for Kotlin developers. Compose HTML showed early promise, but the ecosystem was still young. Kobweb emerged as a response to that gap – a bold step toward enabling modern, declarative web development in Kotlin, using familiar tools like IntelliJ IDEA and Compose.\nKobweb encourages developers to use IntelliJ IDEA – especially for Kotlin, there’s nothing better. It’s packed with powerful features, like best-in-class refactoring tools, code analysis and navigation, and advanced editing features like multiple cursors, that are all worth mastering. If you use an IDE every day, take the time to really learn your tools – they’ll make you faster and better.\n— David Herman, creator of Kobweb\nKobweb is approaching its 1.0 release, with plans to close remaining API gaps, introduce new UI widgets, enhance its IntelliJ IDEA plugin, and create short video tutorials for the community. You can follow the progress on the public roadmap. If you’re interested in contributing and have skills that align with any of these areas, the team would love to hear from you!\nWhether you’re building frameworks, compilers, or libraries, these OSS projects show what’s possible when developers have the right tools. JetBrains is proud to support these initiatives that help keep the community growing.",
        "dc:creator": "Lena Morozova",
        "content": "In Part 1 of this series, we introduced some of the Java community’s most recognized open-source projects. Now, we’re back with more standouts: projects that speed up builds, strengthen testing, and simplify working with modern web stacks. And as always, IntelliJ IDEA helps maintainers move faster, confidently, and with a focus on quality. 🌿 jsoup [&#8230;]",
        "contentSnippet": "In Part 1 of this series, we introduced some of the Java community’s most recognized open-source projects. Now, we’re back with more standouts: projects that speed up builds, strengthen testing, and simplify working with modern web stacks. And as always, IntelliJ IDEA helps maintainers move faster, confidently, and with a focus on quality. 🌿 jsoup […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=637769",
        "categories": [
          "community",
          "idea",
          "community-support",
          "intellij-idea",
          "open-source-program",
          "oss-projects"
        ],
        "isoDate": "2025-09-26T07:08:04.000Z"
      },
      {
        "creator": "Katie Fraser",
        "title": "Continuing Positive Impact: This Year’s AI4SE Interns in their New Roles at JetBrains",
        "link": "https://blog.jetbrains.com/research/2025/09/ai4se-interns-employees-part-2/",
        "pubDate": "Thu, 25 Sep 2025 14:37:14 +0000",
        "content:encodedSnippet": "In our last post, we introduced the talented intern cohort from our AI for Software Engineering (AI4SE) research partnership with Delft University of Technology (TU Delft).\nIn this post, we’re excited to spotlight the next chapter in their journey: their evolution from interns to full-time members of our tech team. As interns, they didn’t just stand by and observe: they immersed themselves in real projects, tackling complex challenges with technologies at the core of our business. \nWe’ll look at the cutting-edge technologies they got to work with, the impact their work had on our teams and products, and how their roles are growing as they transition to full-time employees. \nHands-on experience with cool technologies\n“It was super exciting to be at this ‘for developers’ company during the times of rapid change in the development ecosystem caused by the AI disruption. What was especially cool was that you got to see and in some cases even participate in the internal operations of the company and development of existing or new products.”\n\n            \nSergey\n                                                        \nDuring their internship, the students had the chance to directly work with groundbreaking AI technologies which are integrated into software development tools. This exposure built their technical skills more rapidly and also empowered them to deliver impactful innovations. \n\n\n\n\nWith these hands-on experiences, our interns were able to sharpen their expertise. They also sparked real innovation that’s transforming how we build and maintain software. \nFor one, they enhanced team performance by being highly engaged and bringing fresh perspectives. The results of their work are being presented to various product teams, opening up avenues for collaboration on system improvement.\nIn addition, we saw an intern’s research evolve into a benchmark in a test generation feature that has already uncovered issues in the current approach. Another intern developed an AI assistance tool that continues to be used even after the relevant in-the-wild study finished. \nThese former students actively drove projects forward and have already left a measurable mark on their teams and organizations. We’re excited to see what they do next!\nFrom intern to employee\n“It’s really a great opportunity to keep working in research while being within the industry.”\n\n            \nSaga\n                                                        \nLet’s see what these former students are going to be doing in their new roles:\nMilan joins us as a researcher in our Software Testing Research team and will continue to explore new technologies and ideas in the field of AI. \nI will be involved in several different projects, from creating experimental prototypes to conducting experiments with existing systems and improving these.\nNadine joins our Fleet team as a software engineer, continuing to advance the way developers interact with AI in their IDEs. \nIt’s really amazing to get the opportunity to help shape how these developer-AI workflows evolve, to ultimately create more seamless collaboration and boost developer productivity.\nSaga switches from our Software Testing Research team (where she did her internship) to working as a researcher in our  Dynamic Program Analysis Research team.\nIt’s really a great opportunity to keep working in research while being within the industry. In my new team, I’ll be focusing on tracing LLM agents, to help developers who develop agents better understand and improve how their agents work.\nSergey has two roles: one in quality assurance and one as a researcher on our Software Testing Research team.\nI believe it is wonderful that JetBrains provides the opportunities to be involved in different teams and areas. It allows people to gain more diverse experiences and apply their knowledge in other areas in hopes of making a positive impact.\nFuture growth with us at JetBrains\n“JetBrains offers the perfect mix of deep tech, user-centric culture, and long-term thinking, so I’m beyond excited to grow with it.”\n\n            \nNadine\n                                                        \nStepping into a new role as an employee unlocks exciting opportunities for professional growth. Our former interns will now be able to take on more challenging projects and explore new specialties, setting the stage for future career advancement.\n\n\n\n\nGoing from intern to full-time employee reflects the commitment and growth of these four within our company. We are looking forward to seeing them continue to develop their skills and make an impact here at JetBrains!\nIf you are a TU Delft student interested in joining AI4SE, contact Mitchell Olsthoorn for general questions about the thesis procedures, or reach out to the university track leads to learn about project opportunities.",
        "dc:creator": "Katie Fraser",
        "content": "In our last post, we introduced the talented intern cohort from our AI for Software Engineering (AI4SE) research partnership with Delft University of Technology (TU Delft). In this post, we&#8217;re excited to spotlight the next chapter in their journey: their evolution from interns to full-time members of our tech team. As interns, they didn&#8217;t just [&#8230;]",
        "contentSnippet": "In our last post, we introduced the talented intern cohort from our AI for Software Engineering (AI4SE) research partnership with Delft University of Technology (TU Delft). In this post, we’re excited to spotlight the next chapter in their journey: their evolution from interns to full-time members of our tech team. As interns, they didn’t just […]",
        "guid": "https://blog.jetbrains.com/?post_type=research&p=585445",
        "categories": [
          "news",
          "research",
          "ai4se",
          "interns",
          "interviews"
        ],
        "isoDate": "2025-09-25T14:37:14.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "Rider Roadmap: What to Expect From the Upcoming Updates and Releases",
        "link": "https://blog.jetbrains.com/dotnet/2025/09/25/rider-rider-roadmap-2025-3/",
        "pubDate": "Thu, 25 Sep 2025 13:22:46 +0000",
        "content:encodedSnippet": "With Rider 2025.2 already out in the wild and the 2025.3 release cycle underway, we want to take a step back and give you a broader picture of where Rider is headed.\nThis roadmap covers our plans for Rider 2025.3 and what you can expect from the minor updates included in the 2025.2 release line. Think of it as a look at the near horizon – both what’s already in your hands and what’s right around the corner.\nSame-day release with .NET 10\nOne of our biggest goals for Rider 2025.3 is to release it on the same day as .NET 10, like we did last year with .NET 9. We know how important it is for you to adopt the latest SDK without delay, and we’re working hard for Rider to be ready the moment .NET 10 becomes available. This, of course, also means immediate support for the newest updates to C#, so you can explore the latest syntax improvements, productivity features, and runtime enhancements as soon as they’re available.\nPerformance improvements\nPerformance remains our key area of focus, and for the next major release, we’re doubling down on making Rider faster out of the gate. For the past couple of releases, our efforts have been chiefly dedicated to improving memory consumption and refactoring Rider’s garbage collection. This time, we’ll be targeting warm startup scenarios, meaning we want to get you from launching Rider to writing code as quickly as possible. We’ll target the core IDE features that you need immediately, so there’s less waiting around for everything to initialize.\nFor Rider 2025.3 we’ve also refactored how Rider runs Roslyn analyzers when Solution-Wide Analysis (SWA) is enabled. In our internal measurements, Roslyn analyzer execution became 2–3x faster. On representative solutions this lead to a reduction of total SWA time by up to 20%. The exact improvement will vary by solution depending on which analyzers you use and how your analysis is configured. \nInternal performance measurements of SWEA before and after the Roslyn refactoring, showing a 20% overall speed-up (Linux and Windows).\n\n\n\nThis Roslyn case is part of a broader series of refactorings we’re making to ensure Rider feels snappier and more responsive across the board.\nFresh new look with the Islands UI theme\nThe new Islands UI theme, available in both light and dark modes, will soon be rolled out in one of our upcoming updates to Rider 2025.2. This redesign is focused on visual clarity, better separation of editor and tool windows, and an overall cleaner, more modern development environment. We’re hearing a lot of anticipation and positive feedback from users who have already tried it in preview builds, and so the plan now is to make it the new default UI in Rider 2025.3 after a final round of refinements. \n\n\n\n\nIn-IDE OpenTelemetry \nEncouraged by the positive feedback the new OpenTelemetry plugin for Rider has been receiving, we’ll be working on refining and expanding its capabilities. For Rider 2025.3, we’re improving your experience working with OT traces, taking it from a bare-bones table view to a more informative and intuitive way to explore and examine all of the spans that belong to a trace in detail. This will give you a clearer understanding of your application’s runtime behavior during development, all without leaving your IDE. \nBut the most exciting news is that we’re working on bringing the OpenTelemetry plugin to other JetBrains IDEs. Bookmark this ticket to follow our progress, and let us know in the comments which IDE you’d like to see with integrated OpenTelemetry insights.\nGame development\nGame development continues to be a priority area for Rider, and we’re expanding our capabilities with several key areas of focus.\nUnreal Engine: Performance and mobile development\nBuilding on recent improvements to stepping times and refactorings for faster Blueprint indexing, we’re continuing to invest in making Unreal Engine development and debugging in Rider faster and more reliable. We’re also investing our resources into improving remote debugging workflows and NatVis support for the native code debugger.\nRider is venturing into Unreal Engine mobile development. Mobile game development has its own quirks and workflows that desktop development doesn’t cover, so we’re starting work on extending our UE tooling to handle those scenarios properly.\nAnother goal of ours is to unify the mobile game development experience between Unity and Unreal Engine, so you can expect Rider to provide consistent workflows, debugging capabilities, and deployment options regardless of which engine you’re using.\nUnity: Deeper integration and better UX/UI\nSpeaking of better workflows, one of our plans for Unity mobile development is to update the UI for attaching the debugger to Unity games running on mobile devices. This will make it easier for you to select and attach to mobile devices, be they iOS or Android, directly from Rider.\nUnity Profiler integration is also getting more polish. We laid the foundation in version 2025.1, and now we’re refining the in-editor experience. The goal is to make your game’s performance profiling feel native to your development process rather than a separate workflow you have to context-switch into.\nThe Frame Viewer tool for shader debugging, introduced in v2025.2, will also get some attention. Graphics debugging is notoriously tricky, so we’re adding deeper shader inspection capabilities to help you track down those pesky rendering issues.\nGodot: GDScript support keeps getting better\nFor Godot developers, we have a large scope of improvements planned for GDScript support. These include parser stability, better debugging, richer IDE integration, and quality-of-life fixes across the board. Our goal is to move from basic syntax highlighting and error detection toward a first-class Rider experience for Godot game development, with smoother editing, clearer error reporting, and a more robust debugging workflow.\nBetter support for native projects\nCMake support\nWe’ve heard your requests for CMake support in Rider, and we plan to start working on it for the 2025.3 release. The goal is to allow you to open, edit, and build CMake projects directly in Rider without having to switch to another build system in cross-platform projects. Our goal is for you to enjoy the same level of quality and functionality you already rely on when working with traditional .sln projects.\nThe initial rollout will focus solely on C/C++ projects, including the debugging of CMake configuration files. Support for C# projects referenced by CMake is not planned for this first version, as we want to ensure a robust foundation for C++ development first.\nCMake support in Rider is being introduced specifically to support CMake-based game engines and other side workflows in the game development space. CLion will continue to be JetBrains’ primary IDE for general C++ and embedded development.\nCode completion and highlighting in inactive preprocessor branches \nWorking with cross-platform C++ projects can be made easier through highlighting and completion for inactive code wrapped in #if, #else, or #endif directives disabled for the current build configuration. We’ve been addressing this need step by step. Rider 2025.2 introduced basic coding assistance inside inactive code, so features like completion and parameter info work even when the code isn’t currently active. Rider 2025.3 will take this further by adding code highlighting for inactive branches, making disabled code visually distinct in the editor so you can clearly see which parts of a file are active without sacrificing readability.\nFull support for *.vcxproj.filters files\nAnother highly requested feature that made it onto our roadmap for the next major release of Rider is support for .vcxproj.filters files. Until now, Rider’s support was limited to only reading these files, which made collaborating with Visual Studio users difficult and sometimes broke project organization when files were added or removed. Starting with v2025.3, we’ll address this by implementing full read-and-write support. This will make it possible to create, delete, and move files within Rider without corrupting filter files, ensuring a seamless experience for teams mixing Rider and Visual Studio in their workflows.\nMixed-mode debugging\nWith Rider 2025.3, we’re bringing support for .NET Core applications as a new mixed-mode debugging capability on Windows. This will allow you to step seamlessly between managed and native code, inspect variables, and debug interop scenarios without switching tools.\nAzure DevOps integration\nFor teams that live in the Azure DevOps ecosystem, we’re starting to bridge that gap with Rider. The first piece is repository cloning: you’ll be able to clone your Azure DevOps repos directly from within Rider without having to copy URLs or switch to a browser. We’ll be adding more baseline integration as time goes on, and the azd plugin is a great resources for additional Azure DevOps functionality. We’ll be keeping in touch with the plugin’s author to ensure a smooth experience as we progress.\nNuGet Package Manager UI redesign\nWe’ve heard your feedback about the NuGet Package Manager UI, and we’ll be redesigning the workflow. Our goal is to make it much easier to update multiple packages at once, select specific sets of dependencies, and manage complex upgrades without falling back to external tools. The new design focuses on better discoverability, multi-select capabilities, and overall usability improvements.\nNuGet Package Manager console\nA highly-requested feature we’re setting out to implement for Rider 2025.3 is the NuGet Package Manager console.  \nThe console will fully support all NuGet commands, such as Find-Package, Get-Package, Install-Package, and more, providing a complete terminal-based experience for managing packages. The commands are closely integrated with the IDE, allowing for a better and smoother workflow. We’re also working to support Entity Framework Core tools, enabling you to run commands such as Add-Migration and Update-Database within the same environment.\nYou’ll be able to manage packages, work with EF Core, interact with the IDE, and execute regular PowerShell commands within the same environment. No more switching between different tool windows, terminals, or other parts of the IDE to accomplish your tasks.\nThis roadmap outlines some of the key directions we’re pursuing for Rider. We’ll be sharing more details and updates as features mature, so stay tuned to our blog and join the Early Access Program to try them out first-hand.\nWe’re eager to hear your thoughts. Which improvements are you most excited about? Let us know in the comments or on our issue tracker.",
        "dc:creator": "Sasha Ivanova",
        "content": "With Rider 2025.2 already out in the wild and the 2025.3 release cycle underway, we want to take a step back and give you a broader picture of where Rider is headed. This roadmap covers our plans for Rider 2025.3 and what you can expect from the minor updates included in the 2025.2 release line. [&#8230;]",
        "contentSnippet": "With Rider 2025.2 already out in the wild and the 2025.3 release cycle underway, we want to take a step back and give you a broader picture of where Rider is headed. This roadmap covers our plans for Rider 2025.3 and what you can expect from the minor updates included in the 2025.2 release line. […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=644854",
        "categories": [
          "rider",
          "net-10",
          "azure-devops",
          "cmake",
          "game-developement",
          "nuget",
          "opentelemetry",
          "roslyn",
          "unity",
          "unreal-engine",
          "ux-ui"
        ],
        "isoDate": "2025-09-25T13:22:46.000Z"
      },
      {
        "creator": "Evgenia Verbina",
        "title": "Why Is Python So Popular in 2025?",
        "link": "https://blog.jetbrains.com/pycharm/2025/09/why-is-python-so-popular/",
        "pubDate": "Wed, 24 Sep 2025 11:19:08 +0000",
        "content:encodedSnippet": "While other programming languages come and go, Python has stood the test of time and firmly established itself as a top choice for developers of all levels, from beginners to seasoned professionals.\nWhether you’re working on intelligent systems or data-driven workflows, Python has a pivotal role to play in how your software is built, scaled, and optimized.\nMany surveys, including our upcoming Developer Ecosystem Survey 2025, confirm Python’s continued popularity. The real question is why developers keep choosing it, and that’s what we’ll explore. \nWhether you’re choosing your first language or building production-scale services, this post will walk you through why Python remains a top choice for developers.\nHow popular is Python in 2025?\nIn our Developer Ecosystem Survey 2025, Python ranks as the second most-used programming language in the last 12 months, with 57% of developers reporting that they use it.\nMore than a third (34%) said Python is their primary programming language. This places it ahead of JavaScript, Java, and TypeScript in terms of primary use. It’s also performing well despite fierce competition from newer systems and niche domain tools.\nThese stats tell a story of sustained relevance across diverse developer segments, from seasoned backend engineers to first-time data analysts.\nThis continued success is down to Python’s ability to grow with you. It doesn’t just serve as a first step; it continues adding value in advanced environments as you gain skills and experience throughout your career.\nLet’s explore why Python remains a popular choice in 2025.\n1. Dominance in AI and machine learning\nOur recently released report, The State of Python 2025, shows that 41% of Python developers use the language specifically for machine learning.\nThis is because Python drives innovation in areas like natural language processing, computer vision, and recommendation systems.\nPython’s strength in this area comes from the fact that it offers support at every stage of the process, from prototyping to production. It also integrates into machine learning operations (MLOps) pipelines with minimal friction and high flexibility.\nOne of the most significant reasons for Python’s popularity is its syntax, which is expressive, readable, and dynamic. This allows developers to write training loops, manipulate tensors, and orchestrate workflows without boilerplate friction. \nHowever, it’s Python’s ecosystem that makes it indispensable.\nCore frameworks include:\nPyTorch – for research-oriented deep learning\nTensorFlow – for production deployment and scalability\nKeras – for rapid prototyping\nscikit-learn – for classical machine learning\nHugging Face Transformers – for natural language processing and generative models\nThese frameworks are mature, well-documented, and interoperable, benefitting from rapid open-source development and extensive community contributions. They support everything from GPU acceleration and distributed training to model export and quantization.\nPython also integrates cleanly across the machine learning (ML) pipeline, from data preprocessing with pandas and NumPy to model serving via FastAPI or Flask to inference serving for LLMs with vLLM.\nIt all comes together to provide a solution that allows you to deliver a working AI solution without ever really having to work outside Python.\n2. Strength in data science and analytics\nFrom analytics dashboards to ETL scripts, Python’s flexibility drives fast, interpretable insights across industries. It’s particularly adept at handling complex data, such as time-series analyses. \nThe State of Python 2025 reveals that 51% of respondents are involved in data exploration and processing. This includes tasks like:\nData extraction, transformation, and loading (ETL)\nExploratory data analysis (EDA)\nStatistical and predictive modeling\nVisualization and reporting\nReal-time data analysis\nCommunication of insights\nCore libraries such as pandas, NumPy, Matplotlib, Plotly, and Jupyter Notebook form a mature ecosystem that’s supported by strong documentation and active community development.\nPython offers a unique balance. It’s accessible enough for non-engineers, but powerful enough for production-grade pipelines. It also integrates with cloud platforms, supports multiple data formats, and works seamlessly with SQL and NoSQL data stores.\n3. Syntax that’s simple and scalable\nPython’s most visible strength remains its readability. Developers routinely cite Python’s low barrier to entry and clean syntax as reasons for initial adoption and longer-term loyalty. In Python, even model training syntax reads like plain English:\ndef train(model):\n    for item in model.data:\n        model.learn(item)\nCode snippets like this require no special decoding. That clarity isn’t just beginner-friendly; it also lowers maintenance costs, shortens onboarding time, and improves communication across mixed-skill teams.\nThis readability brings practical advantages. Teams spend less time deciphering logic and more time improving functionality. Bugs surface faster. Reviews run more smoothly. And non-developers can often read Python scripts without assistance.\nThe State of Python 2025 revealed that 50% of respondents had less than two years of total coding experience. Over a third (39%) had been coding in Python for two years or less, even in hobbyist or educational settings.\nThis is where Python really stands out. Though its simple syntax makes it an ideal entry point for new coders, it scales with users, which means retention rates remain high. As projects grow in complexity, Python’s simplicity becomes a strength, not a limitation.\nAdd to this the fact that Python supports multiple programming paradigms (procedural, object-oriented, and functional), and it becomes clear why readability is important. It’s what enables developers to move between approaches without friction.\n4. A mature and versatile ecosystem\nPython’s power lies in its vast network of libraries that span nearly every domain of modern software development.\nOur survey shows that developers rely on Python for everything from web applications and API integration to data science, automation, and testing. \nIts deep, actively maintained toolset means you can use Python at all stages of production.\nHere’s a snapshot of Python’s core domains and the main libraries developers reach for:\n\nDomainPopular Libraries\nWeb developmentDjango, Flask, FastAPI\nAI and MLTensorFlow, PyTorch, scikit-learn, Keras\nTestingpytest, unittest, Hypothesis\nAutomationClick, APScheduler, Rich\nData sciencepandas, NumPy, Plotly, Matplotlib\n\n\n\n\n\nThis breadth translates to real-world agility. Developers can move between back-end APIs and machine learning pipelines without changing language or tooling. They can prototype with high-level wrappers and drop to lower-level control when needed.\nCritically, Python’s packaging and dependency management systems like pip, conda, and poetry support modular development and reproducible environments. Combined with frameworks like FastAPI for APIs, pytest for testing, and pandas for data handling, Python offers unrivaled scalability.\n5. Community support and shared knowledge\nPython’s enduring popularity owes much to its global, engaged developer community.\nFrom individual learners to enterprise teams, Python users benefit from open forums, high-quality tutorials, and a strong culture of mentorship. The community isn’t just helpful, it’s fast-moving and inclusive, fostering a welcoming environment for developers of all levels.\nKey pillars include:\nThe Python Software Foundation, which supports education, events, and outreach.\nHigh activity on Stack Overflow, ensuring quick answers to real-world problems, and active participation in open-source projects and local user groups.\nA rich landscape of resources (Real Python, Talk Python, and PyCon), serving both beginners and professionals.\nThis network doesn’t just solve problems; it also shapes the language’s evolution. Python’s ecosystem is sustained by collaboration, continual refinement, and shared best practices.\nWhen you choose Python, you tap into a knowledge base that grows with the language and with you over time.\n6. Cross-domain versatility\nPython’s reach is not limited to AI and ML or data science and analytics. It’s equally at home in automation, scripting, web APIs, data workflows, and systems engineering. Its ability to move seamlessly across platforms, domains, and deployment targets makes it the default language for multipurpose development.\nThe State of Python 2025 shows just how broadly developers rely on Python:\n\nFunctionalityPercentage of Python users\nData analysis48%\nWeb development46%\nMachine learning41%\nData engineering31%\nAcademic research27%\nDevOps and systems administration26%\n\n\n\n\n\nThat spread illustrates Python’s domain elasticity. The same language that powers model training can also automate payroll tasks, control scientific instruments, or serve REST endpoints. Developers can consolidate tools, reduce context-switching, and streamline team workflows.\nPython’s platform independence (Windows, Linux, MacOS, cloud, and browser) reinforces this versatility. Add in a robust packaging ecosystem and consistent cross-library standards, and the result is a language equally suited to both rapid prototyping and enterprise production.\nFew languages match Python’s reach, and fewer still offer such seamless continuity. From frontend interfaces to backend logic, Python gives developers one cohesive environment to build and ship full solutions.\nThat completeness is part of the reason people stick with it. Once you’re in, you rarely need to reach for anything else.\nPython in the age of intelligent development\nAs software becomes more adaptive, predictive, and intelligent, Python is strongly positioned to retain its popularity. \nIts abilities in areas like AI, ML, and data handling, as well as its mature libraries, make it a strong choice for systems that evolve over time.\nPython’s popularity comes from its ability to easily scale across your projects and platforms. It continues to be a great choice for developers of all experience levels and across projects of all sizes, from casual automation scripts to enterprise AI platforms.\nAnd when working with PyCharm, Python is an intelligent, fast, and clean option.\nFor a deeper dive, check out The State of Python 2025 by Michael Kennedy, Python expert and host of the Talk Python to Me podcast. \nMichael analyzed over 30,000 responses from our Python Developers Survey 2024, uncovering fascinating insights and identifying the latest trends.\nWhether you’re a beginner or seasoned developer, The State of Python 2025 will give you the inside track on where the language is now and where it’s headed. \nAs tools like Astral’s uv show, Python’s evolution is far from over, despite its relative maturity. With a growing ecosystem and proven staying power, it’s well-positioned to remain a popular choice for developers for years to come.",
        "dc:creator": "Evgenia Verbina",
        "content": "While other programming languages come and go, Python has stood the test of time and firmly established itself as a top choice for developers of all levels, from beginners to seasoned professionals. Whether you’re working on intelligent systems or data-driven workflows, Python has a pivotal role to play in how your software is built, scaled, [&#8230;]",
        "contentSnippet": "While other programming languages come and go, Python has stood the test of time and firmly established itself as a top choice for developers of all levels, from beginners to seasoned professionals. Whether you’re working on intelligent systems or data-driven workflows, Python has a pivotal role to play in how your software is built, scaled, […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=644392",
        "categories": [
          "data-science",
          "web-development",
          "ai",
          "machine-learning",
          "python",
          "survey"
        ],
        "isoDate": "2025-09-24T11:19:08.000Z"
      },
      {
        "creator": "Alyona Chernyaeva",
        "title": "The Kotlin AI Stack: Build AI Agents With Koog, Code Smarter With Junie, and More",
        "link": "https://blog.jetbrains.com/kotlin/2025/09/the-kotlin-ai-stack-build-ai-agents-with-koog-code-smarter-with-junie-and-more/",
        "pubDate": "Wed, 24 Sep 2025 08:26:32 +0000",
        "content:encodedSnippet": "AI is changing how we build software, and Kotlin is ready to meet that change by empowering developers to build AI-powered apps and by enhancing the developer experience through AI-based tools.\nThis post explores both angles: the tools for developing AI-powered apps, both from JetBrains and from the community, and the ways Kotlin is evolving to make development more productive by incorporating AI tools.\nHighlights\nKoog – A Kotlin-native framework for building and running AI agents.\n\nTry it out\nJunie – The AI coding agent integrated into JetBrains IDEs (GitHub EAP available).\n\nTry Junie in IDEs\nJoin the Junie for GitHub EAP\nUsing Kotlin to develop AI-powered apps\nKotlin isn’t just well-suited for AI – it’s already being used in large-scale AI systems. Deutsche Telekom, for example, used Kotlin to build one of Europe’s largest LLM-powered chatbots. At JetBrains, we rely on Kotlin to build our entire AI stack. Junie and AI Assistant in our IDEs, Koog for agents, and Kineto for no-code app creation are all written in Kotlin.\nWhat makes Kotlin a strong fit for AI development is how naturally it supports everything from low-level model access to structured, multi-step agent logic. Let’s walk through what that looks like in practice. \n1. Starting simple: Calling AI models via SDKs\nOne of the simplest ways to integrate AI into your Kotlin app is by using the Java SDKs from OpenAI or Anthropic (which are both written in Kotlin under the hood). This gives you low-level access to models with full control over prompts, parameters, and data handling.\nIt’s perfect for experiments or building minimal AI features like a quick chatbot, summarizer, or code generator.\nHere are some examples to explore:\nOpenAI SDK\nOpenAI Java SDK Overview.\nOpenAI Image Recognition.\nOpenAI SDK Integration With the MCP.\n\nAnthropic SDK \nAnthropic SDK Integration With the MCP.\n2. Leveling up: Using high-level libraries like Spring AI\nWhen you want to move beyond raw API calls, Spring AI offers a smooth experience for Kotlin users.\nIt allows you to:\nSwap model providers with minimal effort.\nRegister Kotlin functions as AI tools.\nEmbed structured AI interactions directly into your application logic.\nThis makes it easier to build useful features without getting bogged down in infrastructure details. \n\n\n\n\nIf you want to see it in action, check out these resources from the Kotlin-AI-Examples repository:\nspring-ai-examples includes classification, chat, and summarization use cases.\nspringAI-demo demonstrates how to fully integrate LLM responses into your application logic using Qdrant and OpenAI.\nBuild a Kotlin app with Spring AI (Tutorial) walks you through the process of building a Kotlin app that answers questions based on documents stored in Qdrant\nOther options like LangChain4j are also available, and you can find a Kotlin-based LangChain4j Spring Boot example in the same repository.\n3. Standardizing: Exposing tools via the Model Context Protocol (MCP)\nAs your AI tools get more useful, you’ll probably want to share them – across agents, teams, or even apps. But how do you make sure they’re accessible, consistent, and easy to plug in?\nThat’s where the Model Context Protocol (MCP) comes in, and there’s an official MCP Kotlin SDK to help you implement it. The MCP is a standard that defines how agents can discover and use tools without custom integrations or glue code. With the MCP Kotlin SDK, you can expose your tools in a way that works seamlessly with any compliant agent. It’s a simple way to make your Kotlin code part of a larger, connected AI system.\n\n\n\n\nLearn more:\nBuild an MCP server in Kotlin\nBuild an MCP client in Kotlin\n\n\n\n\n\n\n4. Using Koog: Building and running AI Agents in Kotlin\nAt the highest level, you may want to create intelligent agents – systems that can reason, adapt, and use tools.\nJetBrains has open-sourced Koog, the JVM’s most advanced AI framework and the first to bring full-scale agentic flows to backend, Android, and iOS. With Koog, you build agents that are observable, testable, and deployable anywhere Kotlin runs.\n\n\n\n\n\n\nKoog provides:\nPersistence and checkpointing to resume agents exactly where they left off.\nObservability via OpenTelemetry with Langfuse and W&B Weave.\nStructured output and typed streaming for predictable results and real-time UIs.\nSmart retries and robust error handling at both workflow and client levels.\n\n\n\n\nDrop-in integrations with Spring Boot and a new Ktor plugin.\nMulti-model flexibility to swap or route tasks between LLMs without losing context.\nMCP tool support, RAG, memory, and reusable graph-based strategies for designing advanced agent logic.\nBecause Koog is Kotlin Multiplatform, your agents can run not just on the JVM but also on Android, JS/WasmJS, and iOS. Whether you’re prototyping a simple agent or building a more complex system with tools and memory, Koog gives you the flexibility to start small and have your project evolve as it grows.\nTry Koog \nOther agent frameworks are also emerging in the Kotlin ecosystem, including:\nArc – a custom agent framework developed by Deutsche Telekom for their LLM-powered chatbot.\nEmbabel – an open-source Kotlin-based framework built on Spring and LangChain4j.\nSpring AI Alibaba – an extension of Spring AI focused on LLM tool orchestration.\nThese options, each with different approaches and integrations, reflect the growing interest in using Kotlin to build agents.\nAI tooling for Kotlin\nWhile Kotlin is a powerful language for building AI systems, it’s also being supplemented by AI-based tools to make your development workflow faster and more enjoyable. To help you stay focused and in control, we’re integrating AI tools into your IDE experience.\nJunie: AI coding agent in JetBrains IDEs\nJunie is JetBrains’ new AI coding agent. It can take care of your routine tasks, update complex parts of your project, or even fully take over some of them – giving you more time to focus on the fun and creative parts of coding. And it works particularly well with Kotlin.\nUnlike a generic tool for autocompletion, it handles structured tasks, which means it can:\nBuild full features end to end (for example, a random talk generator for the KotlinConf app).\nPlan architectural changes.\nExecute tests.\nSuggest improvements.\nJetBrains is also working on Junie’s ability to contribute code to open-source projects. It’s already available in GitHub as part of an Early Access Program, where it can analyze issues, suggest fixes, and open pull requests. Join the waitlist to try it for free.\nTry Junie in JetBrains IDEs\nJoin the waitlist to try Junie on GitHub\nMellum: Now open source\nPowering Junie is Mellum, JetBrains’ in-house LLM for code, already in production and now open source. It powers code completion in JetBrains IDEs, and there’s a version of it fine-tuned specifically for Kotlin. \nThis means the Kotlin community can now experiment with, contribute to, and build their own custom tooling on top of Mellum.\nGet Mellum for Kotlin\nWhy Kotlin?\nIn short, here’s what makes Kotlin a natural fit for both building with AI and being supported by it:\nModern language features that make code clear, safe, and concise.\nSeamless Java interop for accessing existing AI SDKs and libraries.\nMultiplatform support for sharing logic between server-side, mobile, and web applications.\nA growing ecosystem of Kotlin-native AI libraries and frameworks, including Koog, the MCP Kotlin SDK, and Spring AI integration.\nAn AI-powered development experience through JetBrains AI Assistant and Junie, which is integrated into IntelliJ IDEA and available via plugins in Android Studio\nOther resources to read and watch\n📖 Kotlin for AI-Powered App Development\n📖 Smarter Kotlin Development With JetBrains AI: Junie and AI Assistant in IntelliJ IDEA\n🎥 Building Smarter AI Agents With Koog | Vadim Brilliantov and Andrey Bragin\n🎥 Kotlin and Spring: The modern server side stack | Rod Johnson\n🎥 From 0 to h-AI-ro: high-speed track to AI for Kotlin developers | Urs Peter\n🎥 Model Context Protocol in Kotlin | Alexander Sysoev\n🎥 LangChain4j with Quarkus | Max Rydahl Andersen and Konstantin Pavlov\n🎥 Large Scale Changes with AI – Migrating millions of lines of Java to Kotlin at Uber | Ty Smith\n🎥Kotlin’s Gamebit: LLM less AI for Board Games | Dmytro Kurets\n🎥Building an Agentic Platform with Kotlin: Powering one of Europe’s Largest LLM Bot | Patrick Whelan",
        "dc:creator": "Alyona Chernyaeva",
        "content": "AI is changing how we build software, and Kotlin is ready to meet that change by empowering developers to build AI-powered apps and by enhancing the developer experience through AI-based tools. This post explores both angles: the tools for developing AI-powered apps, both from JetBrains and from the community, and the ways Kotlin is evolving [&#8230;]",
        "contentSnippet": "AI is changing how we build software, and Kotlin is ready to meet that change by empowering developers to build AI-powered apps and by enhancing the developer experience through AI-based tools. This post explores both angles: the tools for developing AI-powered apps, both from JetBrains and from the community, and the ways Kotlin is evolving […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=644363",
        "isoDate": "2025-09-24T08:26:32.000Z"
      },
      {
        "creator": "Simon Vergauwen",
        "title": "The Ktor roadmap and previews",
        "link": "https://blog.jetbrains.com/kotlin/2025/09/ktor-roadmap-2025/",
        "pubDate": "Tue, 23 Sep 2025 19:00:47 +0000",
        "content:encodedSnippet": "As in previous years, we have been working on the Ktor roadmap, and we want to say thank everyone for their contributions and feedback to help us prioritize the roadmap! The OpenAPI and WebRTC support is already in preview since the Ktor 3.3.0 release. Check out the What’s New section for a full overview of Ktor 3.3.0.\n🚀 Get started with ktor\nReady to explore Ktor? Start building your next project today with our interactive project generator at start.ktor.io. Your feedback and contributions are always welcome!\n🔗 Get Started With Ktor | 📢 Join the Community on Reddit and Slack\nGet Started With Ktor\n         \nKtor Library Improvement Process\nThe Ktor team is always looking for feedback, and therefore we fully develop everything in the open, including creating feature proposals similar to KEEPs but for Ktor. This is called KLIP, or Ktor Library Improvement Process, and it can be found on GitHub. So keep an eye out for future proposals in case you’ve missed it, and please provide any feedback you might have.\n(Open)API Documentation\nAPI Documentation, currently one of the most requested features, has gone into development. 🎉 In Ktor 3.3.0 it was included in an early preview so you can provide early feedback. Check the OpenAPI KLIP, or check out the Ktor OpenAPI Template project.\nKtor can automatically provide an OpenAPI model from analyzing your code at compile-time, and can simply be set up from Gradle. The Ktor Gradle Plugin has a new openapi configuration which can be used to provide OpenAPI information, and setup project-related configurations. The plugin currently only supports Kotlin 2.2.20. Additionally we also need to add a Maven dependency for the ktor-server-openapi module, or ktor-server-swagger depending on your preference.\nplugins {\n    kotlin(libs.plugins.kotlin)\n    alias(libs.plugins.ktor)\n}\n\nktor {\n    @OptIn(OpenApiPreview::class)\n    openapi {\n        target = project.layout.projectDirectory.file(\"api.json\")\n        \n        title = \"My Service\"\n        summary = \"What it does\"\n        description = \"A longer description of the service\"\n        version = \"1.0.0\"        \n        // contact, termsOfService, license...\n    }\n}\n\ndependencies {\n    implementation(libs.ktor.server.core)\n    implementation(libs.ktor.server.openapi)\n}\n}\n\n\n\nTo find out more about the api documentation support, check out the proposal or try it yourself in your project using the template project.\nService Discovery\nIn distributed systems, service discovery is a critical part of the distributed system. As servers become available, clients need to be able to discover them. The Service Discovery plugin eliminates the need to manually register the services, and resolve the client. The plugin offers a unified abstraction layer over popular discovery mechanisms (Consul, Kubernetes, Zookeeper, Eureka) while offering both client-side and server-side discovery patterns. This allows you to configure service discovery in a Ktor -and Kotlin-idiomatic way.\nIn the example below, we configure the ServiceDiscovery plugin to automatically register our sample-service on port 8080 with the consul service registry on localhost:8500.\ninstall(ServiceDiscovery) {\n   consul {\n      connection {\n         host = \"localhost\"\n         port = 8500\n      }\n\n      registration {\n         serviceName = \"sample-service\"\n         instanceId = \"sample-service:$host:$port\"\n         port = 8080\n      }\n   }\n}\nAnother service needs to be able to communicate with the sample-service. In a distributed system, it doesn’t matter which instance we use, so we rely on the service registry to resolve the serviceName into a registered instanceId. The HttpClient ServiceDiscovery plugin allows us to conveniently do so.\nval client = HttpClient {\n    install(ServiceDiscovery) {\n       consul {\n          connection {\n             host = \"localhost\"\n             port = 8500\n          }\n       }\n    }\n}\nclient.get(\"service://sample-service\")\nThe HttpClient is configured with the ServiceDiscovery plugin connected to the same Consul service registry as our server example. Once configured we can use service://name to resolve a service within our distributed system. In this case the sample-service.\nTo find out more about the service discovery support, check out the proposal, and please leave any feedback.\nWebRTC\nReal-time peer-to-peer communication is becoming increasingly useful for various applications, ranging from video calls to multiplayer and collaborative tools. We’re working on bringing WebRTC Client support to Ktor with a unified, multiplatform API that works seamlessly across browsers, Android, and potentially other platforms.\nSignaling (WebSocket, HTTP, etc.) still manually needs to be managed but we’re focusing on making the peer-to-peer connection part as smooth as possible. Ktor 3.3.0 supports JS/Wasm and Android platforms, with more platforms like JVM, iOS, Native coming. Support for an experimental Rust-based WebRTC client is also planned. This could pave the way for integrating Rust components in other areas of Ktor. More details can be found in the KLIP, or the full stack KMP Ktor Video Chat example.\nA WebRtcClient is created by providing the engine instance and configuring the platform-specific configuration similar to HttpClient.\nval jsClient = WebRtcClient(JsWebRtc) {\n defaultConnectionConfig = {\n   iceServers = listOf(WebRtc.IceServer(\"stun:stun.l.google.com:19302\"))\n }\n}\nval androidClient = WebRtcClient(AndroidWebRtc) {\n context = appContext // provide Android context\n defaultConnectionConfig = { /* Same default config*/ }\n}\nWebRTC clients need to create an RTC peer-to-peer connection which they establish using the Interactive Connectivity Establishment (ICE). After the peers have connected, they can send and receive data from each other using the channels.\nval jsConnection = jsClient.createPeerConnection()\njsConnection.addIceCandidate(WebRtc.IceCandidate(candidateString, sdpMid, sdpMLineIndex))\njsConnection.awaitIceGatheringComplete()\n\n\njsConnection.dataChannelEvents.collect { event ->\n   when (event) {\n     is Open -> println(\"Another peer opened a chanel: ${event.channel}\")\n     is Closed -> println(\"Data channel is closed\")\n     is Closing, is BufferedAmountLow, is Error -> println(event)\n   }\n}\n\n\n\n\n\nTo find out more about the WebRTC support check out the proposal, and please leave any feedback you may have.\ngRPC: Powered by kotlinx-rpc\nIt’s finally here: gRPC support in Ktor! But with a catch. The kotlinx-rpc library is doing all the heavy lifting of bringing gRPC support to Ktor. kotlinx-rpc is dedicated to bringing you the best gRPC experience in Kotlin. Let’s define a new GrpcService in a common module and then use it on both the server side and client side.\n@Grpc\ninterface GrpcService {\n    suspend fun sayHello(request: HelloRequest): HelloResponse\n}\nOur server side implementation might look like this, and we can register it in our Ktor Application using the grpc DSL.\ninterface GrpcServiceImpl : MyService {\n    suspend fun sayHello(request: HelloRequest): HelloResponse {\n        return HelloResponse { content = \"Hello, ${request.name}\" }\n    }\n}\n\nfun Application.installGrpc() = grpc {\n    registerService<MyService> { MyServiceImpl() }\n}\nDepending on your use -cases or existing systems, you might prefer working with .proto files instead. The interface GrpcService can also be defined from .proto, and it’ll generate the same interface as above. Allowing the same implementation, and Ktor usage.\nsyntax = \"proto3\";\n\npackage io.ktor;\n\nservice MyService {\n  rpc sayHello(HelloRequest) returns (HelloResponse);\n}\nYou can also use generated messages from .proto files.\nmessage HelloRequest {\n  string name = 1;\n}\n\nmessage HelloResponse {\n  string content = 1;\n}\nAlternatively, you can also use KotlinX’s @Seriazable or your preferred serialization techniques.\nSupport for Apple, Linux, beyond JVM is planned. Check our kotlinx-rpc for more details.\nKoog Integration\nThe new Ktor Koog Plugin makes it easy for you to create agentic services with Ktor and Koog. It aims to provide a deep integration between Koog and Kotlin’s AI ecosystem.\nfun Application.module() {\n    install(Koog)\n    \n    routing {\n        get(\"/execute/{prompt}\") {\n            val prompt = call.parameters.getOrFail(\"prompt\")\n            val output = aiAgent(customStrategy(), GPT4_1, prompt)\n            call.respond(HttpStatusCode.OK, output)\n        }\n    }\n}\nDependency Injection\nDependency Injection support was released earlier this year, as discussed in last year’s roadmap post. In the OpenAPI Documentation feature we’re introducing a compiler plugin to Ktor to generate documentation at compile time. This is the perfect opportunity to further enhance our dependency injection support with compile-time verification and provide better support for other platforms.\nfun Application.dependencies() = dependencies {\n   provide<HikariDataSource> { hikariSource() }\n   provide<R2dbcDatabase> { exposed(get()) } \n   provide<MyService>(::MyServiceImpl)\n}\n🚀  Get started with Ktor 3.3.0\nReady to explore Ktor 3.3.0? Start building your next project today with our interactive project generator at start.ktor.io. Your feedback and contributions are always welcome!\nWe want to thank everyone in the community for your support and feedback, as well as for reporting issues.\n🔗 Get Started With Ktor | 📢 Join the Community on Reddit and Slack",
        "dc:creator": "Simon Vergauwen",
        "content": "As in previous years, we have been working on the Ktor roadmap, and we want to say thank everyone for their contributions and feedback to help us prioritize the roadmap! The OpenAPI and WebRTC support is already in preview since the Ktor 3.3.0 release. Check out the What’s New section for a full overview of [&#8230;]",
        "contentSnippet": "As in previous years, we have been working on the Ktor roadmap, and we want to say thank everyone for their contributions and feedback to help us prioritize the roadmap! The OpenAPI and WebRTC support is already in preview since the Ktor 3.3.0 release. Check out the What’s New section for a full overview of […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=644121",
        "categories": [
          "ktor",
          "news",
          "releases",
          "release"
        ],
        "isoDate": "2025-09-23T19:00:47.000Z"
      },
      {
        "creator": "Jan-Niklas Wortmann",
        "title": "From AI-Generated to Production-Ready Code: WebStorm Refactorings for the Modern Workflow",
        "link": "https://blog.jetbrains.com/webstorm/2025/09/from-ai-generated-to-production-ready-code-webstorm-refactorings-for-the-modern-workflow/",
        "pubDate": "Tue, 23 Sep 2025 14:15:39 +0000",
        "content:encodedSnippet": "We’ve all been there. You ask your AI tool to generate a React component, and the initial result works perfectly in the beginning. The AI gives you a functional 250-line component that gets the job done quickly and is exactly what you need for rapid prototyping.\nBut even though AI does indeed excel at generating working code that solves your immediate problem, it’s the next step – transforming that working code into maintainable, production-ready code – where WebStorm’s refactoring tools can make a real difference. While AI focuses on getting you from zero to working (which is incredibly valuable), WebStorm’s deterministic refactorings help you get from working to production-ready code.\nLet me walk you through this modern workflow by taking a realistic analytics dashboard component and transforming it step by step. By the end, you’ll see how WebStorm’s refactoring tools complement AI-generated code perfectly, saving you hours while making your code exponentially better.\nThe starting point: A “working” analytics dashboard\nLet’s say you asked an AI to create an analytics dashboard. Here’s what you might get back – a component that works great as a starting point but has room for improvement in terms of maintainability:\nimport { useEffect, useState} from 'react';\n\nconst AnalyticsDashboard = () => {\n\n    const [data, setData] = useState<{\n        \"totalUsers\": number,\n        \"previousTotalUsers\": number,\n        \"revenue\": number,\n        \"previousRevenue\": number,\n        \"pageViews\": number,\n        \"previousPageViews\": number,\n        \"conversionRate\": number,\n        \"previousConversionRate\": number,\n        \"recentActivity\": {user: string, action: string, timestamp: string}[]\n    } | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        fetch('/api/analytics')\n            .then(response => response.json())\n            .then(result => {\n                setData(result);\n                setLoading(false);\n            })\n            .catch(err => {\n                setError('Failed to load analytics data');\n                setLoading(false);\n            });\n    }, []);\n\n    const formatNumber = (num: number) => {\n        if (num >= 1000000) {\n            return (num / 1000000).toFixed(1) + 'M';\n        } else if (num >= 1000) {\n            return (num / 1000).toFixed(1) + 'K';\n        }\n        return num.toString();\n    };\n\n    const formatDate = (dateString: string) => {\n        const date = new Date(dateString);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\n    };\n\n    const calculateGrowth = (current: number, previous: number) => {\n        if (previous === 0) return 0;\n        return ((current - previous) / previous) * 100;\n    };\n\n    if (loading) return <div>Loading analytics...</div>;\n    if (error) return <div style={{color: 'red'}}>{error}</div>;\n    if (!data) return <div>No data available</div>;\n\n    return (\n        <div style={{padding: '20px', fontFamily: 'Arial, sans-serif'}}>\n            <h1>Analytics Dashboard</h1>\n\n            <div style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n                gap: '20px',\n                marginBottom: '30px'\n            }}>\n                <div style={{border: '1px solid #ddd', padding: '20px', borderRadius: '8px'}} className=\"metric-card\">\n                    <h3>Total Users</h3>\n                    <div style={{fontSize: '32px', fontWeight: 'bold', color: '#2196F3'}}>\n                        {formatNumber(data.totalUsers)}\n                    </div>\n                    <div\n                        style={{color: calculateGrowth(data.totalUsers, data.previousTotalUsers) >= 0 ? 'green' : 'red'}}>\n                        {calculateGrowth(data.totalUsers, data.previousTotalUsers) >= 0 ? '↗' : '↘'}\n                        {Math.abs(calculateGrowth(data.totalUsers, data.previousTotalUsers)).toFixed(1)}% vs last month\n                    </div>\n                </div>\n\n                <div style={{border: '1px solid #ddd', padding: '20px', borderRadius: '8px'}} className=\"metric-card\">\n                    <h3>Revenue</h3>\n                    <div style={{fontSize: '32px', fontWeight: 'bold', color: '#4CAF50'}}>\n                        ${formatNumber(data.revenue)}\n                    </div>\n                    <div style={{color: calculateGrowth(data.revenue, data.previousRevenue) >= 0 ? 'green' : 'red'}}>\n                        {calculateGrowth(data.revenue, data.previousRevenue) >= 0 ? '↗' : '↘'}\n                        {Math.abs(calculateGrowth(data.revenue, data.previousRevenue)).toFixed(1)}% vs last month\n                    </div>\n                </div>\n\n                <div style={{border: '1px solid #ddd', padding: '20px', borderRadius: '8px'}} className=\"metric-card\">\n                    <h3>Page Views</h3>\n                    <div style={{fontSize: '32px', fontWeight: 'bold', color: '#FF9800'}}>\n                        {formatNumber(data.pageViews)}\n                    </div>\n                    <div\n                        style={{color: calculateGrowth(data.pageViews, data.previousPageViews) >= 0 ? 'green' : 'red'}}>\n                        {calculateGrowth(data.pageViews, data.previousPageViews) >= 0 ? '↗' : '↘'}\n                        {Math.abs(calculateGrowth(data.pageViews, data.previousPageViews)).toFixed(1)}% vs last month\n                    </div>\n                </div>\n\n                <div style={{border: '1px solid #ddd', padding: '20px', borderRadius: '8px'}} className=\"metric-card\">\n                    <h3>Conversion Rate</h3>\n                    <div style={{fontSize: '32px', fontWeight: 'bold', color: '#9C27B0'}}>\n                        {data.conversionRate.toFixed(2)}%\n                    </div>\n                    <div\n                        style={{color: calculateGrowth(data.conversionRate, data.previousConversionRate) >= 0 ? 'green' : 'red'}}>\n                        {calculateGrowth(data.conversionRate, data.previousConversionRate) >= 0 ? '↗' : '↘'}\n                        {Math.abs(calculateGrowth(data.conversionRate, data.previousConversionRate)).toFixed(1)}% vs\n                        last month\n                    </div>\n                </div>\n            </div>\n\n            <div style={{marginTop: '40px'}}>\n                <h2>Recent Activity</h2>\n                <div style={{border: '1px solid #ddd', borderRadius: '8px', overflow: 'hidden'}}>\n                    {data.recentActivity && data.recentActivity.map((activity: any, index: number) => (\n                        <div key={index} style={{\n                            padding: '15px',\n                            borderBottom: index < data.recentActivity.length - 1 ? '1px solid #eee' : 'none',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center'\n                        }}>\n                            <div>\n                                <div style={{fontWeight: 'bold'}}>{activity.user}</div>\n                                <div style={{color: '#666', fontSize: '14px'}}>{activity.action}</div>\n                            </div>\n                            <div style={{color: '#999', fontSize: '12px'}}>\n                                {formatDate(activity.timestamp)}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AnalyticsDashboard;\nThis component works perfectly for rapid prototyping and delivers immediate value, but it’s far from polished. Now, let’s use WebStorm’s refactoring tools to evolve it into production-ready code that’s easier to maintain, test, and extend.\nFollow along: Interactive repository\nWant to practice these refactorings yourself? I’ve created a repository where you can follow along with each step: https://github.com/niklas-wortmann/refactoring-react-example\nEach refactoring step is a separate branch, so you can:\nSee the exact changes: Use Compare with Branch to see what each refactoring changed.\nTry it yourself: Check out any branch and practice the refactoring\nCompare results: See how your refactoring compares to the example.\nThe repository includes the original AI-generated code as the starting point, with each subsequent commit showing the result of applying one of the refactorings below. This hands-on approach will help you master these techniques much faster than just reading about them.\nStep 1: Extract type alias for inline types\nThe problem: Inline type declarations make your code harder to read and impossible to reuse. For an illustration, just look at this useState declaration with an inline object type:\nconst [data, setData] = useState<{\n  totalUsers: number;\n  previousTotalUsers: number; \n  revenue: number;\n  previousRevenue: number;\n  pageViews: number;\n  previousPageViews: number;\n  conversionRate: number;\n  previousConversionRate: number;\n  recentActivity: {\n    user: string;\n    action: string;\n    timestamp: string;\n  }[];\n} | null>(null);\nThis approach gets you running immediately, but for production code, you’ll want proper interfaces.\nThe solution: WebStorm’s Extract type alias refactoring.\nHow to do it in WebStorm:\nSelect the object type definition (everything between { and }, including the nested object types)\nRight-click, select Refactor, and then click on Extract Type Alias.\nWebStorm will automatically create proper interfaces and update all usages of this literal type within the file.\nThe result:\ninterface AnalyticsData {\n  totalUsers: number;\n  previousTotalUsers: number;\n  revenue: number;\n  previousRevenue: number;\n  pageViews: number;\n  previousPageViews: number;\n  conversionRate: number;\n  previousConversionRate: number;\n  recentActivity: {\n    user: string;\n    action: string;\n    timestamp: string;\n  }[];\n}\n\nconst [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null);\nNotice that the nested object type for recentActivity is still inline. You can run the refactoring again on nested types to extract them to whatever granularity makes sense for reuse:\n// Select the nested object type and extract again\ninterface RecentActivity {\n  user: string;\n  action: string;\n  timestamp: string;\n}\n\ninterface AnalyticsData {\n  totalUsers: number;\n  previousTotalUsers: number;\n  revenue: number;\n  previousRevenue: number;\n  pageViews: number;\n  previousPageViews: number;\n  conversionRate: number;\n  previousConversionRate: number;\n  recentActivity: RecentActivity[];\n}\nWhy this matters: WebStorm finds and updates all instances of that exact type structure throughout your file. What would take you five or more minutes manually (hunting down every usage and likely missing a spot) happens instantly and without error.\nStep 2: Rename for clarity\nThe problem: Variables like data and result tell us nothing. When you come back to this code in six months, you’ll waste time figuring out what they contain.\nThe solution: WebStorm’s smart Rename refactoring.\nHow to do it in WebStorm:\nPlace the cursor on the variable’s name.\nPress Shift+F6 (or right-click, then “Refactor”, and select Rename)\nType the new name and WebStorm will update all the references automatically.\n\n\n\n\n\nLet’s rename:\n* data → analyticsData\n* result → apiResponse\n* err → apiError\nWhy this matters: WebStorm’s Rename refactoring is scope-aware and handles edge cases that find-and-replace misses. It knows the difference between your local variable data and a property called data on some other object.\nStep 3: Extract reusable components\nThe problem: This component is doing everything: data fetching, formatting, and rendering multiple UI patterns. It’s impossible to test individual pieces or reuse the metric cards elsewhere.\nThe solution: WebStorm’s Extract Component refactoring.\nLet’s extract that repeated metric card pattern:\nHow to do it in WebStorm:\nSelect the JSX for one complete metric card (elements with the class metric-card)\nRight-click, select Refactor, and then pick Extract Component (or use the shortcut Ctrl+Alt+M/⌥+⌘+M).\nWebStorm will:\n\nCreate a new component.\nIdentify the props automatically.\nReplace the selected code with the component call.\n\n\n\n\n\n\n\nThe result:\nexport function MetricCardProps(props: { s: string, number: number }) {\n    return <div style={{border: \"1px solid #ddd\", padding: \"20px\", borderRadius: \"8px\"}}>\n        <h3>Total Users</h3>\n        <div style={{fontSize: \"32px\", fontWeight: \"bold\", color: \"#2196F3\"}}>\n            {props.s}\n        </div>\n        <div\n            style={{color: props.number >= 0 ? \"green\" : \"red\"}}>\n            {props.number >= 0 ? \"↗\" : \"↘\"}\n            {Math.abs(props.number).toFixed(1)}% vs last month\n        </div>\n    </div>;\n}\nWhy this matters: WebStorm automatically figured out what should be props and what should stay internal. This kind of analysis would take you several minutes manually, and you’d probably miss something.\nNote: The Extract Component refactoring works seamlessly across the major frontend frameworks (Angular, Vue, and React). We’re using React for demo purposes, but this refactoring technique applies universally.\nBonus: Once the component is extracted, you can use WebStorm’s Move refactoring (F6) to relocate the MetricCard component to its own file (e.g., components/MetricCard.tsx). WebStorm will automatically:\nCreate the new file with proper imports.\nUpdate the import statement in the original file.\nHandle any type dependencies between files.\nThis transforms your extracted component from a local helper into a truly reusable component that other parts of your application can import and use. Note that WebStorm won’t automatically detect and replace similar code patterns elsewhere in your codebase. Those would need to be manually refactored to use the new component.\nStep 3.5: Rename props for clarity\nThe problem: The extracted component works perfectly, but WebStorm generated prop names based on the original variable names, which might not be ideal for a reusable component.\nThe solution: WebStorm’s smart Rename refactoring. We already went over this, but this also works well when destructuring props.\nLooking at our extracted MetricCard, the props might have generic names like value and previousValue. For a reusable component, these could be more descriptive:\nHow to do it in WebStorm:\nPlace the cursor on the prop name in the JSX part.\nPress Shift+F6 (or right-click, pick Refactor, and then select Rename)\nType the new name and WebStorm updates all the references automatically.\nLet’s rename:\n* s → label\n* number → delta\nStep 4: Add props for better reusability\nThe problem: Our MetricCard component has hardcoded trend icons (↗ and ↘). To make it more flexible, let’s make the icon configurable by the parent component.\nThe solution: WebStorm’s Create component prop quick-fix.\nFirst, let’s use the new prop in the parent component by adding it to one of our MetricCard calls:\n<MetricCard\n  label=\"Total Users\"\n  delta={calculateGrowth(analyticsData.totalUsers, analyticsData.previousTotalUsers)}\n  icon={calculateGrowth(analyticsData.totalUsers, analyticsData.previousTotalUsers) >= 0 ? \"↗\" : \"↘\"}\n/>\nHow to do it in WebStorm:\nPlace the cursor on the new icon prop (it will be highlighted as an error).\nHit Alt+Enter/⌥+Enter and then select the Create component prop ‘icon’ option.\nWebStorm automatically adds the prop to the MetricCardProps interface.\nUpdate the component to use the new icon prop instead of the hardcoded logic.\nThe result:\nexport function MetricCard(props: { label: string, delta: number, icon?: string }) {\n    return <div style={{border: \"1px solid #ddd\", padding: \"20px\", borderRadius: \"8px\"}}>\n        <h3>Total Users</h3>\n        <div style={{fontSize: \"32px\", fontWeight: \"bold\", color: \"#2196F3\"}}>\n            {props.label}\n        </div>\n        <div\n            style={{color: props.delta >= 0 ? \"green\" : \"red\"}}>\n            {props.icon ?? props.delta >= 0 ? \"↗\" : \"↘\"}\n            {Math.abs(props.delta).toFixed(1)}% vs last month\n        </div>\n    </div>;\n}\nNote: By default, the newly created prop will be optional; this way, the introduced change is backwards compatible with existing usages of that component. This might be something that you want to change manually based on the semantics of the prop and the component usage.\nWhy this matters: WebStorm’s Create component prop quick-fix ensures perfect synchronization between prop usage and interface definitions. No more forgetting to add props to interfaces or mismatched types. This feature works similarly in Angular (for component inputs and outputs) and Vue (for component props), adapting to each framework’s conventions.\nStep 5: Surround with error boundaries and loading states\nThe problem: Our main dashboard content has no error boundary protection. If a component throws an error, the entire app crashes.\nThe solution: WebStorm’s Surround with refactoring to wrap our content with error handling.\nLet’s say we want to wrap our main dashboard grid with an error boundary. First, select the main dashboard content:\n<div style={{\n  display: 'grid', \n  gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', \n  gap: '20px', \n  marginBottom: '30px'\n}}>\n  <MetricCard ... />\n  <MetricCard ... />\n  <MetricCard ... />\n  <MetricCard ... />\n</div>\nHow to do it in WebStorm:\nSelect the JSX content you want to protect.\nHit Ctrl+Alt+T/⌥+⌘+T (or right-click and select Surround With).\nChoose Surround with <tag></tag> and type <ErrorBoundary fallback={<div>Something went wrong</div>}>\nIf ErrorBoundary doesn’t exist yet, hit Alt+Enter and select Create component ‘ErrorBoundary’ to generate it automatically.\nThe result:\n<ErrorBoundary fallback={<div>Something went wrong with the metrics.</div>}>\n  <div style={{\n    display: 'grid', \n    gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', \n    gap: '20px', \n    marginBottom: '30px'\n  }}>\n    <MetricCard ... />\n    <MetricCard ... />\n    <MetricCard ... />\n    <MetricCard ... />\n  </div>\n</ErrorBoundary>\nYou can also use Surround with to wrap async operations in try...catch blocks or conditional statements in if/else logic.\nWhy this matters: The Surround with feature helps you consistently apply protective patterns across your codebase. No more forgetting to wrap risky operations in error boundaries or try...catch blocks. It’s also incredibly handy for adding structural elements like containers, sections, or wrapper divs to your HTML/JSX without manually typing opening and closing tags.\nStep 6: Smart string refactoring\nThe problem: We have string concatenation that’s harder to read and maintain. For example, in our formatDate function, we’re building a date string with multiple concatenations.\nThe solution: WebStorm’s smart string conversion.\nLet’s say you start with this string concatenation in your function:\nconst formatDate = (dateString: string) => {\n  const date = new Date(dateString);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  return months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\n};\nYou want to convert this to a template literal for better readability:\nTwo approaches in WebStorm:\nExplicit conversion: Place the cursor on the string and hit Alt+Enter/⌥+↵, then select Convert to template string (more efficient for this example with complex concatenation).\nNatural conversion: Start typing ${ anywhere in the string and WebStorm automatically converts your code without interrupting your flow (fastest when you just want to add a variable to an existing string).\n\n\n\n\n\nHow to do it in WebStorm:\nPlace the cursor inside any of the string quotes (like ' ' between a month and date).\nStart typing ${ and WebStorm immediately converts the entire expression to use backticks.\nContinue building your template: `${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`\n\n\n\n\n\nBefore:\nreturn months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear();\nAfter (automatic conversion):\nreturn `${months[date.getMonth()]}/${date.getDate()}/${date.getFullYear()}`;\nHonorable mention: That months array is also a perfect candidate for WebStorm’s Introduce Constant refactoring (Ctrl+Alt+C/⌥+⌘+C). Select the array and extract it to a module-level constant for better reusability and performance.\nWhy this matters: You never have to manually convert strings to template literals. WebStorm recognizes when you need interpolation and handles the conversion seamlessly. This works for any string in JavaScript/TypeScript, including function returns, variable assignments, object properties, etc.\nThe transformation: From AI-generated to production-ready\nAfter applying these six refactorings, we’ve transformed our AI-generated component from a functional prototype into professional-grade code. Let’s look at what we accomplished:\nWhat we started with:\nA single 250-line component doing everything.\nInline types scattered throughout the code.\nGeneric variable names like data and result.\nRepeated UI patterns copy-pasted four times.\nString concatenation mixed with template literals.\nNo error boundaries or component isolation.\n\n\n\n\nWhat we ended up with:\nClean, separated interfaces (AnalyticsData, RecentActivity).\nDescriptive variable names (analyticsData, apiResponse).\nReusable MetricCard component with a clear API.\nConsistent string formatting using template literals.\nError boundaries protecting critical sections.\nA focused main component that orchestrates rather than implements.\n\n\n\n\nEach refactoring took just seconds to apply, but collectively they’ve made the code exponentially more maintainable, testable, and professional. More importantly, these changes happened deterministically – there was no guesswork, no manual find-and-replace errors, just reliable transformations.\nThis is the power of combining AI’s rapid prototyping with WebStorm’s precise refactorings. You get the best of both worlds: speed and quality.\nThe AI + WebStorm workflow: Best of both worlds\nHere’s an emerging trend we’re seeing more and more in 2025:\n1. AI generates the initial working code (fast, functional, and gets you started immediately).\n2. WebStorm refactors it into production-quality code (deterministic, safe, and comprehensive).\nThis combination gives you:\nSpeed: AI gets you from zero to working in minutes.\nQuality: WebStorm gets you from working to maintainable.\nConfidence: Deterministic refactorings mean no surprises.\n\n\n\n\nWhy these refactorings matter more than ever\nAs AI becomes increasingly sophisticated at generating functional code, the ability to quickly and safely restructure that code becomes critical. AI excels at solving immediate problems and getting you started fast. WebStorm’s refactoring tools excel at taking that functional foundation and transforming it into code that’s maintainable, testable, and ready for long-term development.\nThe future of frontend development isn’t about choosing between AI and traditional tools. It’s about AI and powerful refactoring tools like WebStorm’s working together seamlessly. Master this combination, and you’ll be building better code faster than ever before.\nPro tip: When you have that feeling that “something could be better organized” with your code but you’re not sure what to refactor, try Ctrl+T/⌃+T (Refactor This). It shows all available refactoring options for your current selection, helping you discover improvement opportunities you might not have considered.\nThe WebStorm team",
        "dc:creator": "Jan-Niklas Wortmann",
        "content": "We&#8217;ve all been there. You ask your AI tool to generate a React component, and the initial result works perfectly in the beginning. The AI gives you a functional 250-line component that gets the job done quickly and is exactly what you need for rapid prototyping. But even though AI does indeed excel at generating [&#8230;]",
        "contentSnippet": "We’ve all been there. You ask your AI tool to generate a React component, and the initial result works perfectly in the beginning. The AI gives you a functional 250-line component that gets the job done quickly and is exactly what you need for rapid prototyping. But even though AI does indeed excel at generating […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=640546",
        "categories": [
          "tips-tricks",
          "refactorings"
        ],
        "isoDate": "2025-09-23T14:15:39.000Z"
      },
      {
        "creator": "Katie Fraser",
        "title": "Supercharging Unit Test Generation with in-IDE TestSpark",
        "link": "https://blog.jetbrains.com/research/2025/09/testspark-unit-test-generation/",
        "pubDate": "Tue, 23 Sep 2025 11:13:56 +0000",
        "content:encodedSnippet": "Test generation is an essential yet time-consuming part of quality assurance. Automating test-generation techniques means accelerating the development process and improving the quality of the final software. However, traditional automated techniques, and their respective tools, are not usually user-friendly, having a command-line interface and not being integrated with the IDE. To boost acceleration and quality while also improving user-friendliness, some recent approaches have incorporated AI, often via large language models (LLMs), including our own AI Assistant and Junie. \nOur Software Testing Research team recently collaborated with TU Delft to develop a research framework: TestSpark, which unites the above aspects for improved test generation for Java and Kotlin programs. Namely, the user can choose LLM-based and/or automated testing techniques, it has a good user interface, and it is well integrated with IntelliJ for research purposes.\nGet started\n                                    \nIn this blog post, we will tell you more about TestSpark. Specifically:\nHow it compares to traditional test-generation techniques\nHow it compares to other LLM-based approaches\nWhat cool technical features it presents\nAutomated test generation\nTest generation is the process of creating test cases and test data to evaluate software systems. Generating effective tests is essential to developing good software, and failing to generate effective tests can negatively impact the quality and robustness of the project. \nUnit test generation in particular is concerned with a functionally discrete unit, such as a method or a class. Other testing levels include integration or system: they are focused on bigger sets of units or components, and the data flow between them. \nEven though writing tests, especially manual ones, can feel like a tedious task you might want to skip or delegate to AI, testing ultimately helps you move faster, not slower. Without the safety net that tests provide, any new changes to the code can also unintentionally introduce bugs hidden deep in the flow. Luckily, more advanced techniques have been developed since then that are less tedious, freeing up your time for what you most likely actually want to do: code.\nAutomated test generation techniques use algorithmic and AI-based methods to automatically produce unit tests for software code, optimizing for metrics like code coverage, fault detection, and test suite quality. The table summarizes some main types of automated test generation and examples of tools developed for Java.\n\nThe first technique in the table above, random testing, involves generating test cases with randomly generated inputs. The second technique, search-based testing, uses algorithms to evolve test suites toward high coverage or fault-detection objectives, enabling more systematic detection of uncovered test scenarios. In the third technique, dynamic symbolic execution, a program is run using abstract inputs instead of concrete ones. That is, the code is executed symbolically and the program runs through every possible path for each input. This technique boosts testing coverage, but it is limited in complex scenarios.\nWhile there are advantages to all of these techniques, combining any with LLMs can yield both higher coverage and more meaningful tests than any single technique alone. As we will see below, TestSpark allows the user to choose different test generation methods, including a search-based testing method and an LLM-based one.\nThe rest of this section will introduce search-based techniques in more detail, and then the following section introduces LLM-based test generation. If you already know this background, skip ahead to see how TestSpark improves on traditional testing!\nSearch-based techniques\nSoftware testing can be approached as an optimization problem, i.e., a set of parameters that describe a specific system’s design, variables, objectives and constraint conditions; and search-based techniques can be used to solve such a problem. A big advantage of this type of technique is that it is able to handle bigger and more complex search spaces than random and manual testing. \nMetaheuristic algorithms are designed to iterate through a complex search space, a term which refers to the set of all possible solutions. The technique includes one or more objective functions, called fitness functions, to evaluate the possible solutions. This also means that the fitness function is useful to provide a better guide for the algorithm in a very large, or even infinite, search space. The goal is to efficiently find a near-optimal solution out of that solution set.\nThese types of approaches date back to Webb Miller and David Spooner’s 1976 publication, where they proposed a simple yet innovative-at-the-time technique to generate test data with floating-point inputs. These data were input into a version of the software under test and executed. They used a cost function, akin to a fitness function, where the better-performing inputs received low-cost values and those receiving higher values were discarded.\nThe methods commonly used today are modelled after natural processes, such as those found in biology and physics. Two notable techniques are:\nGenetic algorithms, which can evolve a set of solutions over generations, similar to traits in the natural selection process.\n\nOne example of a genetic algorithm-based test-generation tool is EvoSuite, which is used to evolve test suites in Java.\nAnother example appeared in this recent blog post, where we went into more detail about how a type of genetic algorithm can be used in fuzz-testing compilers.\nSimulated annealing, which involves one solution that changes slightly in each iteration, much like the controlled process of heating, then slowly cooling down metal to remove defects in metallurgy’s annealing process.\n\nSome real-world examples of simulated annealing applications can be found in this older paper and this more recent paper.\nOverall, search-based techniques involve encoding the solutions in a way that allows the search algorithm to manipulate them. We see that for both of the techniques introduced above: \nGenetic algorithms evolve the solutions with mutated and recombined solutions in multiple generation cycles.\nSimulated annealing involves changing the solution slightly or dramatically in each iteration. \nOn top of that, it is necessary to define fitness functions, so that the manipulated solution, or set of solutions, can be evaluated for optimality. For the two techniques, the function has the following application:\nIn a genetic algorithm, the function evaluates characteristics of solutions, much like traits of organisms, with respect to how well they solve the relevant problem\nIn simulated annealing, the function evaluates the current solution version: if it provides a better solution than the previous solution, the current one is accepted as the new solution. Otherwise, the current solution is discarded.\nOptimization goals and advantages\nAbove, we talked about how search-based techniques approach testing as an optimization problem. So what goals in solving these problems, and what are the advantages over, say, a random search? \nIn general, developers or researchers optimize for testing aspects that increase time- and cost-efficiency. This is possible while maintaining high-quality results, overall rendering the testing process more effective and reliable as well as more efficient. A good test generation algorithm includes the following optimizations.\nTechniques with the intent to maximize test coverage aim to generate test cases covering as many execution paths as possible. This coverage could target particular statements, branches, or paths, for example, and simulated annealing is useful for this.\nWhen looking to minimize test suite size, the optimization’s goal is to reduce the number of test cases while maintaining or maximizing coverage. Such techniques consequently reduce the time spent and resources used – an important advantage in software testing. For instance, some approaches use a genetic algorithm to generate a set of test cases with high statement coverage, then apply a greedy algorithm to remove redundant ones and minimize the final suite size.  Another objective for these algorithms is fault detection capability, which can be calculated by mutation score.\nDespite automated testing’s improvement over manual testing, challenges remain, including   incorporating domain knowledge and balancing exploration with exploitation in the search process. A major disadvantage of traditional automated research prototypes is their reliance on the command-line interface, severely limiting usability. Developers are unable to implement them within integrated development environments (IDEs); instead, they revert to using the tool outside the IDE and then manually integrating the output into their projects.\nLLM-based test generation\nRecently, LLM-based test generation has become a common technique for automated test generation and for attempting to overcome the challenges mentioned above. Research evaluating them has also shown that LLM-based test generation has the potential to help developers improve software testing (see also this review). Namely, tools using this technique are able to leverage the models’ understanding of source code, documentation, requirements, and even natural language bug reports to produce relevant test cases and suites.\nTools and techniques\nBesides AI agents like Junie being able to automate test generation, a number of tools have been developed specifically for this purpose. Common LLM-based tools include TestPilot (paper), ChatUniTest (paper), and TestSpark (paper; GitHub). These particular tools are similar in their approach to test generation; the process comprises:\nContext collection\nLLM request\nFeedback loop that tries to improve the initial LLM response\nOther tools like AthenaTest or SynPrompt are also LLM-based, although they differ in focus. AthenaTest generates tests for individual methods, and does not include a feedback loop. SynPrompt generates tests at the method level and uses code-aware prompts to target specific paths within the method under test. While these tools show promising results, they are limited in their applicability and are not being developed for general unit test generation.\nLLM limitations in test generation\nAs promising as LLM-based tools are showing themselves to be, however, they might not be able to generate tests that are immediately ready to be executed without any issues.\nMembers of our research team published a 2025 paper in collaboration with TU Delft  comparing different unit test generation approaches. Motivating the study are some critical limitations in previous evaluations of LLM-based techniques. These include the following (at the time the paper was submitted):\nNo approaches were evaluated for Java test generation.\nExisting approaches were evaluated using the LLM’s training data. This introduces risks of data leakage, which can result in overestimating the model’s utility in a production environment.\nIn particular for Java test generation up to the point of the paper’s submission: previous studies do not always account for the non-determinism of LLMs, nor do the researchers always run the models more than once. This means that the LLM may produce different outputs when queried with the same prompt.\nIn the paper, they examined three different automated test generation tools based on three different techniques: EvoSuite, a search-based tool; Kex, a symbolic execution tool; and TestSpark, an LLM-based hybrid tool, which can optionally include the other two approaches (here, only the LLM-based technique was investigated). To evaluate the differences in language model performance,  TestSpark has been configured with different LLMs (i.e., ChatGPT-4, ChatGPT-4o, Llama Medium, and Code Llama 70b).\nThe researchers assessed each tool’s performance based on execution metrics (e.g., code coverage) and feature-based metrics (e.g., class under test complexity), and used GitBug Java, a recent dataset not previously used in such evaluation studies. Finally, they ran each tool ten times with different seeds, including independent sessions for TestSpark. These measures were meant to address the limitations of previous studies listed above.\nThe results can be summarized as follows:\nTestSpark, the LLM-based tool, significantly outperformed the other two in mutation scores, suggesting that LLM-based test generation tools can provide a deeper semantic understanding of code. \nIn coverage-based metrics, EvoSuite and Kex, the search-based and symbolic execution tools, performed very similarly, and both performed better than TestSpark.\nThe researchers’ feature-based analysis showed that all tools are primarily affected by the complexity and internal dependencies of the class under test, and the LLM-based approaches are especially sensitive to the class size.\nAmong the LLMs evaluated for TestSpark, ChatGPT-4o performed the best, but the statistical analysis suggested that its performance still lagged behind traditional methods like search-based and symbolic execution.\nA takeaway from the results is that LLM-based test generation shows potential for test generation, is better in some aspects than traditional approaches, but still has room for improvement. TestSpark, the LLM-based tool investigated in the reported study, is a research prototype integrated in the IDE, and it provides a new opportunity to better understand in-IDE test generation. \nAdvancing research on LLM-based test generation with in-IDE TestSpark\nIn collaboration with TU Delft, our Software Testing Research team developed TestSpark, an open-source unit test generation plugin for IntelliJ IDEA, and published a tool demo paper in the ICSE 2024 proceedings. This research prototype was designed to be more user-friendly while remaining a reliable test generation tool. It was also designed to let contributors easily integrate other test generation tools by following open-source documentation.\n\n\n\n\nAn aim of TestSpark is to ensure all tests generated by LLMs are compilable by proposing a feedback loop between the LLM and the IDE. In case of a compilation issue, the algorithm prepares a prompt with the compilation error and asks the LLM to fix the problem. \nTestSpark and IDEs\nTestSpark’s user-friendly interface is a significant improvement over other tools. Crucially, it is a standalone plugin, not needing any further installation, and it supports and runs within the latest versions of IntelliJ IDEA. As mentioned above, TestSpark’s current version allows the user to test with various techniques, including an LLM-based one and a search-based one using EvoSuite. \nUsers can initiate the test generation process for a unit under test by simply right-clicking on a unit and selecting the TestSpark option. Among the configuration options are the choice of test generation technique and, if using LLM-based, the choice of LLM. Upon selecting the desired test generation technique, the process starts. This process is depicted in the figure below (adapted from Sapozhnikov et al. 2024: 2).\n\nFirst, the user asks for test generation for a unit. Then, the plugin tries to build the project within IntelliJ IDEA.  If it cannot compile, TestSpark informs the user. If it can compile, the unit test generation manager prompts the user to choose the test generation technique. After this, the tests are collected and seamlessly transmitted to the visualization service, where the results are presented to the user. \nAfter test generation, TestSpark visualizes coverage and test results within the IDE. Each test case is listed with pass/fail status, detailed errors, and coverage impact. Users can directly modify, rerun, and select which to add to the codebase; all necessary imports and files are managed automatically. The below screenshot shows an example visualization (figure from Sapozhnikov et al. 2024: 4).\n\n\n\n\nThe figure above shows how the results of all the generated tests are visualized. Let’s begin with the right side: Each test is visible by clicking the Generated Test tab (in the image above, < 1/1 > indicates one out of one tests are being shown), and the Coverage tab displays the structural coverage and mutation scores of all tests. \nUsers have the option to copy, like, dislike, and select each test case. Also, the border color of each test block indicates whether it passed (green) or failed (red); in the test block shown above, the test passed. In case of failure, users can hover over the error symbol to view the error message, and each test case has a text field where users can directly send a modification request to the LLM.\nMoving to the left side: Each covered line contains a green square on its left. Clicking on this square opens a list of test cases that cover this line. Finally, users can integrate the selected/modified tests into their project by clicking the “Apply to test suite” button. The user can put the tests either in a new or existing file. \nWith its smart feedback loop between LLMs and the IDE, TestSpark overcomes the common LLM pitfall of generating non-compiling or redundant tests. This guarantees robust, compilable test cases that raise code quality while saving precious developer time. Even though the feedback loop might increase the cost, the user can control the threshold – and the default value keeps the cost below that of an agentic approach.\nTestSpark’s technical highlights\nThe hybrid nature of TestSpark’s test generation approach means it has a number of cool technical features and advantages over singular approaches.\nAbove, we can see how it fully embeds in the IDE. This is a big plus over existing tools, as it provides developers with seamless test generation, code coverage visualization, and integration into the project workflow. In other words, it is very user-friendly.\nBy design, TestSpark is extendable and open-source. Its codebase is publicly available on GitHub. Developers and researchers can contribute new test generation approaches by following the provided documentation and plugin architecture.\n\n\n\n\nTestSpark is integrated in IntelliJ IDEA and as it is open source, you can try testing with it, too. Please note that while it is integrated in IntelliJ IDEA, TestSpark is not a part of the AI Assistant subscription, so you need your own token for any LLM you might use in TestSpark.\nAn important innovation of TestSpark is that it uses information collected from IntelliJ IDEA to generate the context for tests and uses the compilation result as feedback to LLM to improve the results. By leveraging the real-time context of the IDE, TestSpark makes AI-based test generation useful for everyday development, rather than theoretical research.\nKey takeaways\nTestSpark can be a practical, reliable part of the industrial developer’s workflow, bridging the gap between research innovation and everyday software engineering needs. Its advantages can be summarized as follows:\nMakes advanced test generation accessible to everyday developers, not just researchers, inside the IDE.\nEnables hybrid or future approaches using both search-based and LLM paradigms.\nBoosts the usefulness of LLM-generated tests with smart error-handling loop.\nExplore now",
        "dc:creator": "Katie Fraser",
        "content": "Test generation is an essential yet time-consuming part of quality assurance. Automating test-generation techniques means accelerating the development process and improving the quality of the final software. However, traditional automated techniques, and their respective tools, are not usually user-friendly, having a command-line interface and not being integrated with the IDE. To boost acceleration and quality [&#8230;]",
        "contentSnippet": "Test generation is an essential yet time-consuming part of quality assurance. Automating test-generation techniques means accelerating the development process and improving the quality of the final software. However, traditional automated techniques, and their respective tools, are not usually user-friendly, having a command-line interface and not being integrated with the IDE. To boost acceleration and quality […]",
        "guid": "https://blog.jetbrains.com/?post_type=research&p=593339",
        "categories": [
          "idea",
          "research",
          "testing",
          "intellij-idea",
          "jetbrains-research",
          "test-generation"
        ],
        "isoDate": "2025-09-23T11:13:56.000Z"
      },
      {
        "creator": "Olga Berdnikova",
        "title": "Islands Theme: The New Look Coming to JetBrains IDEs",
        "link": "https://blog.jetbrains.com/platform/2025/09/islands-theme-the-new-look-coming-to-jetbrains-ides/",
        "pubDate": "Mon, 22 Sep 2025 16:24:54 +0000",
        "content:encodedSnippet": "Starting with version 2025.2.3, JetBrains IDEs will offer a new look: the Islands theme, available in both dark and light modes. This update is a visual refresh, which means that all functionality will remain the same. The new theme can be turned on or off in the Appearance settings.\nThis step brings us closer to our goal of making the Islands theme the default in the future, and on this mission, we’re taking an iterative and feedback-driven approach. We’re making small, focused improvements and sharing them early, with your feedback guiding our next steps.\nWith this update to the UI, we want to:\nProvide a fresh, modern look that keeps pace with design trends.\nRefine the previous UI update, implementing a clearer separation between the editor and tool windows, more prominent navigation, and better tab visibility.\nEnsure consistency across JetBrains products, aligning JetBrains IDEs and the Toolbox App.\nLanding on the Islands theme\nDuring the 2025.2 EAP, we tested two design directions, and based on your feedback, we decided to move forward with what is now the Islands theme. \nTo guide our decision, we combined results from mockup-based surveys, in-product A/B tests, user interviews, and usage statistics. This mix of qualitative and quantitative research helped us understand how each option worked in practice.\nIn the surveys and interviews, participants described the Islands theme as modern, clear, and easy to navigate, with better visual separation between the editor and tool windows. Many also appreciated the improved visibility of tabs and navigation elements. Overall, users were enthusiastic and ready to adopt the Islands theme as the default.\nHere are some examples of the feedback we received:\nIt looks and feels modern and clean, helping me focus on my work.\nFeels refreshing but it made way more obvious differentiating each section on the IDE. \nIt has a fresh feel, the dark theme colors give a good contrast and it is easy to look at for a number of hours.\n\n\n\n\nYour feedback also identified lots of things we can still improve on, and we’ll be working on them for the future releases.\nWe’re grateful to everyone who tried both new themes in those early stages and shared feedback. All of your responses, both supportive and critical, helped us make a more confident and informed decision.\nPlease share your feedback\n\n\n\n\nThe Islands theme is now available for everyone to try. If you enable it, you’ll get a survey invitation two days later. Please take a moment to share your thoughts. Your feedback makes a huge difference in our work to refine the design further.\nAs a thank-you, survey participants will be entered into a raffle for a chance to win either an Amazon Gift Card or a 1-year All Products Pack subscription.\nKnown issues\nThe Islands theme is in Beta, and we are still polishing some details and working to address known issues. Please vote and comment on the tickets that are most important to you, or submit a new issue if you notice something that isn’t on our radar.",
        "dc:creator": "Olga Berdnikova",
        "content": "Starting with version 2025.2.3, JetBrains IDEs will offer a new look: the Islands theme, available in both dark and light modes. This update is a visual refresh, which means that all functionality will remain the same. The new theme can be turned on or off in the Appearance settings. This step brings us closer to [&#8230;]",
        "contentSnippet": "Starting with version 2025.2.3, JetBrains IDEs will offer a new look: the Islands theme, available in both dark and light modes. This update is a visual refresh, which means that all functionality will remain the same. The new theme can be turned on or off in the Appearance settings. This step brings us closer to […]",
        "guid": "https://blog.jetbrains.com/?post_type=platform&p=599368",
        "categories": [
          "intellij-platform",
          "ui"
        ],
        "isoDate": "2025-09-22T16:24:54.000Z"
      },
      {
        "creator": "Ekaterina Volodko",
        "title": "Compose Multiplatform 1.9.0 Released: Compose Multiplatform for Web Goes Beta",
        "link": "https://blog.jetbrains.com/kotlin/2025/09/compose-multiplatform-1-9-0-compose-for-web-beta/",
        "pubDate": "Mon, 22 Sep 2025 10:45:12 +0000",
        "content:encodedSnippet": "Compose Multiplatform for web, powered by Wasm, is now in Beta! This major milestone shows that Compose Multiplatform for web is no longer just experimental, but ready for real-world use by early adopters.\nThis is more than a technical step forward. It’s a community achievement, made possible by feedback from early adopters of the Alpha version, the demos they built, and the contributions of open-source projects.\nWith the Beta release, you can now confidently bring your existing Compose skills and coding patterns to the web with minimal effort, creating new apps or extending ones from mobile and desktop.\nBeyond Compose Multiplatform for web going Beta, the Compose Multiplatform 1.9.0 release also brings Android, iOS, and desktop improvements, showing that Compose Multiplatform is maturing into a truly unified UI framework.\nBringing your Compose code and skills to the web\nWith Compose Multiplatform, you can share most of your UI code and rely on the same Compose skills you already have from working on Android when building for the web – no need to learn a new UI toolkit. Out of the box, you get:\nMaterial 3 components for design fidelity, so your UI looks polished and modern.\nAdaptive layouts that resize seamlessly between different devices and screen sizes, with animations that make transitions feel smooth and natural.\nBrowser navigation integration with forward and back buttons, deep links, and history.\nSupport for system and browser preferences, like dark mode.\nYou can easily bring your Compose experience to the browser and start building web apps quickly.\nEverything you need to build modern web apps\nCompose Multiplatform for web now includes everything you need to build beautiful, reliable UIs for real-world apps in the browser:\nCore APIs that work on the web, available in common code.\nInteroperability with HTML for mixing Compose UI and native web elements.\nType-safe navigation with deep linking.\nFundamental accessibility support for assistive technologies.\nCross-browser compatibility, including fallback for older browsers.\nCompose Multiplatform 1.9.0 ensures the core API surface implementation works on the web and introduces targeted improvements to accessibility and navigation, alongside a wide range of bug fixes and developer experience enhancements (see the 1.9.0 What’s New page for details). With this Beta release of Compose Multiplatform for web, major APIs are stable enough for you to adopt them confidently, with minimal breaking changes expected in the future.\nThe foundation provided by this release is supported by a growing ecosystem of multiplatform libraries extending to the web. Many popular Kotlin libraries for networking, serialization, coroutines, and dependency injection already work across web platforms, and many community projects have already added support for Wasm. You can explore these in the official Kotlin Multiplatform catalog at klibs.io, where more and more libraries are being marked as web-ready all the time.\nDevelopment tools for better productivity \nFor developing web applications with Compose Multiplatform, you can use IntelliJ IDEA or Android Studio and you’ll get the most benefits with the new Kotlin Multiplatform plugin installed.\nIn addition to macOS, the Kotlin Multiplatform plugin for IntelliJ IDEA is now available on Linux and Windows, providing the full set of features for web, Android, and desktop development. The only exceptions are iOS and macOS targets, which require Apple hardware due to system limitations. For Android Studio, Windows and Linux support will be added later.\nWith the Kotlin Multiplatform plugin, you can:\nCreate new projects with a web target, with shared or non-shared UIs, using the integrated project wizard.\nRun your apps in the browser right from the IDE, thanks to automatically created run configurations.\nUse gutter icons for web entry points to launch and debug your Compose apps instantly.\nIn addition, you can:\nDebug in the browser with custom formatters for a smoother experience in DevTools.\nDebug directly in IntelliJ IDEA Ultimate (2025.3 or later) with the JavaScript Debugger plugin. Note that currently only an EAP version of 2025.3 is available.\nTogether, these features make it easy to go from project setup to running and debugging your app – all without leaving the IDE.\nCompose Multiplatform for web in action\nThe Kotlin Playground and the KotlinConf app are powerful examples of Compose Multiplatform for web in action, showing how you can bring Compose UIs directly into the browser.\nOther demos worth exploring include:\nRijksmuseum Demo – Museum collections in a rich, interactive UI.\nJetsnack Wasm Demo – A playful sample e-commerce experience.\nCompose Material 3 Gallery – A showcase of Material 3 components built with Compose.\nStorytale – A storybook-style gallery for exploring, previewing, and sharing UI components.\n\n\n\n\nThese projects highlight the flexibility of Compose Multiplatform for web in use cases ranging from interactive prototypes to production-quality apps.\nGet started with Compose Multiplatform for web\nThe easiest way to try Compose Multiplatform for web is with the Kotlin Playground. It doesn’t require any installation or setup. Just open your browser and start writing UI code:\nTry in the Kotlin Playground\nIf you’d like to use Compose Multiplatform for web in your IDE, simply follow our step-by-step guide:\nTry in your IDE\nLooking for ideas about what to build?\nQuickly build demos and prototypes – Spin up interactive proof-of-concepts, internal tools, or small experiments. You can leverage your existing Compose skills for fast results, which makes this perfect for testing ideas with your team.\n\n\n\n\nCreate UI component galleries – Build living UI libraries in a storybook-style format, showcase reusable components, preview design systems, or share prototypes directly in the browser with no extra setup.\nInfluence the future of Compose Multiplatform for web\nCompose Multiplatform for web is now in Beta. We see this release as the foundation for broader adoption, and with your feedback we’ll keep improving it on the path to a stable release.\nTell us what works well, what needs refinement, and what you’d like to see next. We’ll work alongside the community to polish features, fix bugs, and make Compose Multiplatform for web more reliable and enjoyable to use.\nShare your thoughts in the #compose-web and #compose channels of our Kotlin Slack workspace and help shape the future of multiplatform development.\nCompose Multiplatform beyond the web\nCompose Multiplatform 1.9.0 also brings improvements for iOS, desktop, and common code.\niOS\nYou now have more control over performance and output. You can configure the frame rate to better balance smoothness and battery life, and also have the ability to customize text input behavior, which makes Compose apps feel more natural on iOS. \nDesktop\nDesktop apps gain new window management features, including the ability to configure windows before they appear, making it easier to manage multiple windows or custom layouts.\nAll platforms\nFor every target, the design and preview experience is becoming more powerful. Variation testing has been simplified thanks to more configurable previews, while deeper shadow customization gives you finer control over UI depth and style.\nSee the full list of Compose Multiplatform 1.9.0 updates on our What’s new page.\nRead more\nCompose Multiplatform 1.9.0 – release notes on GitHub\nWhat’s new in Compose Multiplatform 1.9.0 – detailed release notes on the documentation portal\nGet started with Compose Multiplatform – a tutorial\nCompose Multiplatform and Jetpack Compose",
        "dc:creator": "Ekaterina Volodko",
        "content": "Compose Multiplatform for web, powered by Wasm, is now in Beta! This major milestone shows that Compose Multiplatform for web is no longer just experimental, but ready for real-world use by early adopters. This is more than a technical step forward. It’s a community achievement, made possible by feedback from early adopters of the Alpha [&#8230;]",
        "contentSnippet": "Compose Multiplatform for web, powered by Wasm, is now in Beta! This major milestone shows that Compose Multiplatform for web is no longer just experimental, but ready for real-world use by early adopters. This is more than a technical step forward. It’s a community achievement, made possible by feedback from early adopters of the Alpha […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=621449",
        "categories": [
          "multiplatform",
          "compose-for-web",
          "compose-multiplatform"
        ],
        "isoDate": "2025-09-22T10:45:12.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Rachel Kang (SHE/HER)",
        "title": "Enhancements to XAML Live Preview in Visual Studio for .NET MAUI",
        "link": "https://devblogs.microsoft.com/visualstudio/enhancements-to-xaml-live-preview-in-visual-studio-for-net-maui/",
        "pubDate": "Mon, 22 Sep 2025 17:26:51 +0000",
        "content:encodedSnippet": "The XAML Live Preview feature in Visual Studio 2022 version 17.14 introduces a significant usability improvement for .NET MAUI projects: the XAML Live Preview window is now available during design time, eliminating the requirement to initiate a debug session. This change streamlines the UI development workflow for .NET MAUI applications.\nDesign-Time Availability\nPreviously, XAML Live Preview was only accessible while debugging. With this release, you can open the XAML Live Preview window directly during design time. This allows you to see changes in your app UI in real-time. You can also use Hot Reload and other live UI tools in this way, ensuring a seamless workflow, improving iteration speed, and reducing context switching.\nTo open it, go to Debug > Windows > XAML Live Preview.\nThe XAML Live Preview window supports:\nElement selection for navigating to source XAML.\nZoom and ruler tools for layout inspection.\nDocking within the IDE for persistent visibility.\n.NET MAUI Support for Android Targets\nIn addition to Windows, XAML Live Preview also supports rendering of Android devices and emulators. This allows developers to validate UI changes across platforms, providing a high-fidelity design-time experience that ensures consistency across devices.\nGitHub Copilot and Vision Support\nTake your UI design to the next level with XAML Live Preview and GitHub Copilot, supporting both manual and AI-assisted XAML authoring. With Copilot Vision, you can attach a reference image of a desired UI layout, and Copilot will generate the corresponding XAML. Live Preview reflects these changes in real time, enabling rapid prototyping and refinement.\ndocument.createElement('video');\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/09/25166_MauiAgentVS2026_v2.mp4\n\nAvailability and Getting Started\nThis feature is available in:\nVisual Studio 2022 version 17.14\nVisual Studio 2026 Insiders release\nTo begin using XAML Live Preview and explore its capabilities, refer to the official XAML Live Preview Documentation.\nThe post Enhancements to XAML Live Preview in Visual Studio for .NET MAUI appeared first on Visual Studio Blog.",
        "enclosure": {
          "url": "https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/09/25166_MauiAgentVS2026_v2.mp4",
          "length": "16128202",
          "type": "video/mp4"
        },
        "dc:creator": "Rachel Kang (SHE/HER)",
        "content": "<p>The XAML Live Preview feature in Visual Studio 2022 version 17.14 introduces a significant usability improvement for .NET MAUI projects: the XAML Live Preview window is now available during design time, eliminating the requirement to initiate a debug session. This change streamlines the UI development workflow for .NET MAUI applications. Design-Time Availability Previously, XAML Live [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/enhancements-to-xaml-live-preview-in-visual-studio-for-net-maui/\">Enhancements to XAML Live Preview in Visual Studio for .NET MAUI</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "The XAML Live Preview feature in Visual Studio 2022 version 17.14 introduces a significant usability improvement for .NET MAUI projects: the XAML Live Preview window is now available during design time, eliminating the requirement to initiate a debug session. This change streamlines the UI development workflow for .NET MAUI applications. Design-Time Availability Previously, XAML Live […]\nThe post Enhancements to XAML Live Preview in Visual Studio for .NET MAUI appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=254450",
        "categories": [
          "GitHub Copilot",
          "Visual Studio",
          ".NET MAUI",
          "XAML"
        ],
        "isoDate": "2025-09-22T17:26:51.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "고속 LLM 실행을 지원하는 vLLM 동작 원리 분석, 설치 및 사용법",
        "link": "http://daddynkidsmakers.blogspot.com/2025/09/vllm.html",
        "pubDate": "2025-09-27T01:58:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;고속 LLM 실행을 지원하는 vLLM 동작 원리를 분석하고, 사용 방법을 간략히 정리한 것이다.&nbsp;<span face=\"&quot;Google Sans Text&quot;, sans-serif\" style=\"color: #1b1c1d;\">vLLM은 대규모 언어 모델(LLM)의 추론 및 서빙을 위한 고성능 라이브러리이다.</span></div><div style=\"text-align: left;\"><span face=\"&quot;Google Sans Text&quot;, sans-serif\" style=\"color: #1b1c1d;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEitujSSnOHoEA3Dq76pgc0otBx03d433KFYJIfggrWFvZu9PaVsQua3DvGiQbP8BBK5YpPQSY0cD10YrVC5aWw9AFj-TTKoPMG1SKIpP3jygUhI9lu6hvJj06znxUHLtRQA23vsdsgW04ygDfgZwXbKyKd5pjtFV5g8H6rGRnSATIDFIUGq4szUSSYXPJJe\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"405\" data-original-width=\"747\" height=\"251\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEitujSSnOHoEA3Dq76pgc0otBx03d433KFYJIfggrWFvZu9PaVsQua3DvGiQbP8BBK5YpPQSY0cD10YrVC5aWw9AFj-TTKoPMG1SKIpP3jygUhI9lu6hvJj06znxUHLtRQA23vsdsgW04ygDfgZwXbKyKd5pjtFV5g8H6rGRnSATIDFIUGq4szUSSYXPJJe=w464-h251\" width=\"464\" /></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\">vLLM 메모리 사용 효율성</div></span></div><div style=\"text-align: left;\"><div _ngcontent-ng-c3486990560=\"\" class=\"markdown markdown-main-panel stronger enable-updated-hr-color\" dir=\"ltr\" id=\"model-response-message-contentr_839a192593780b7f\" inline-copy-host=\"\" style=\"--animation-duration: 400ms; --fade-animation-function: linear; animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><h3 style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><br /></h3><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">대규모 언어 모델을 서비스로 제공할 때 가장 큰 병목 현상은 메모리에서 발생한다. 특히 트랜스포머 아키텍처의 핵심인 어텐션 메커니즘은 이전 토큰들의 키(Key)와 값(Value)을 KV 캐시라는 메모리 공간에 저장하는데, 이 공간의 비효율적인 관리가 추론 속도를 저하시키는 주된 원인이다. 기존 방식에서는 모든 요청에 대해 최대 길이를 가정하고 메모리를 미리 할당하여 심각한 낭비를 초래했다.</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">vLLM은 이러한 문제를 해결하기 위해 <span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">PagedAttention</span>이라는 알고리즘을 도입한 것이다. 이는 운영체제의 가상 메모리와 페이징 기법에서 영감을 얻은 기술이다. KV 캐시를 연속된 메모리 공간에 할당하는 대신, 페이지처럼 작은 블록 단위로 분할하여 관리한다. 이로써 메모리 단편화를 거의 없애고, 실제 필요한 만큼만 동적으로 메모리를 할당하여 낭비를 최대 90% 이상 줄일 수 있다. 결과적으로 동일한 하드웨어에서 훨씬 더 많은 요청을 동시에 처리하는 높은 처리량(Throughput)을 달성하게 된 것이다.</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">이 기술은 미국 UC 버클리 대학의 Sky Computing Lab 소속 연구원들이 개발했으며, 논문 발표와 함께 오픈소스로 공개되어 LLM 서빙 분야의 핵심 기술로 빠르게 자리 잡았다.</p><ul style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding-inline-start: 32px; padding: 0px 0px 0px 27px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">vLLM 공식 문서</span>: <response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><link-block _nghost-ng-c3871257529=\"\" class=\"ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><a _ngcontent-ng-c3871257529=\"\" _nghost-ng-c2437127606=\"\" class=\"ng-star-inserted\" data-hveid=\"0\" data-ved=\"0CAAQ_4QMahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQ4gQ\" decode-data-ved=\"1\" externallink=\"\" href=\"https://docs.vllm.ai/\" jslog=\"197247;track:generic_click,impression,attention;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" rel=\"noopener\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(11, 87, 208); clear: none; clip: auto; color: #0b57d0; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(11, 87, 208) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\" target=\"_blank\">https://docs.vllm.ai/</a><!----></link-block><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></response-element></p></li><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">PagedAttention 논문</span>: <response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><link-block _nghost-ng-c3871257529=\"\" class=\"ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><a _ngcontent-ng-c3871257529=\"\" _nghost-ng-c2437127606=\"\" class=\"ng-star-inserted\" data-hveid=\"0\" data-ved=\"0CAAQ_4QMahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQ4wQ\" decode-data-ved=\"1\" externallink=\"\" href=\"https://arxiv.org/abs/2309.06180\" jslog=\"197247;track:generic_click,impression,attention;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" rel=\"noopener\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(11, 87, 208); clear: none; clip: auto; color: #0b57d0; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(11, 87, 208) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\" target=\"_blank\">https://arxiv.org/abs/2309.06180</a><!----></link-block><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></response-element></p></li></ul><div _ngcontent-ng-c3486990560=\"\" class=\"markdown markdown-main-panel stronger enable-updated-hr-color\" dir=\"ltr\" id=\"model-response-message-contentr_839a192593780b7f\" inline-copy-host=\"\" style=\"--animation-duration: 400ms; --fade-animation-function: linear; animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><br /></div><div _ngcontent-ng-c3486990560=\"\" class=\"markdown markdown-main-panel stronger enable-updated-hr-color\" dir=\"ltr\" id=\"model-response-message-contentr_839a192593780b7f\" inline-copy-host=\"\" style=\"--animation-duration: 400ms; --fade-animation-function: linear; animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><b>vLLM 동작 메커니즘<br /></b><br />vLLM의 혁신은 단순히 빠른<span face=\"Google Sans Text, sans-serif\" style=\"color: #1b1c1d;\">&nbsp;코드를 작성한 것이 아니라, 대규모 언어 모델(LLM) 서빙의 근본적인 병목 지점인 </span><span face=\"&quot;Google Sans Text&quot;, sans-serif\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">메모리 관리 방식</span><span face=\"Google Sans Text, sans-serif\" style=\"color: #1b1c1d;\">을 새롭게 설계한 것에서 출발한다.</span></div><div _ngcontent-ng-c3486990560=\"\" class=\"markdown markdown-main-panel stronger enable-updated-hr-color\" dir=\"ltr\" id=\"model-response-message-contentr_839a192593780b7f\" inline-copy-host=\"\" style=\"--animation-duration: 400ms; --fade-animation-function: linear; animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c3486990560=\"\" class=\"markdown markdown-main-panel stronger enable-updated-hr-color\" dir=\"ltr\" id=\"model-response-message-contentr_2bb4240971069bec\" inline-copy-host=\"\" style=\"--animation-duration: 400ms; --fade-animation-function: linear; animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><h4 style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span face=\"&quot;Google Sans Text&quot;, sans-serif !important\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-weight: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">1. 문제 정의: 비효율적인 KV 캐시 메모리</span></h4><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">기존 시스템은 모든 요청에 대해 최대 출력 길이를 가정하고 거대한 메모리 공간을 미리 할당했다. 이는 아래 그림과 같이 심각한 메모리 낭비를 초래했다.</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><div class=\"separator\" style=\"clear: both; color: #1b1c1d; font-family: &quot;Google Sans Text&quot;, sans-serif; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjNQYN25a-9f9muEm82yJIeaSQo95eU4FTbPGRQIGtbRQlbW9OnZtHWMuCEjv-7zY-bzITLYAP1taX7MdVNs7G865ufPvYiHAOU97C_YHZT-iK7aVDQcXK4y1QxPTmlkh9G4xvcrbv0QGFnGG_6a93DZsyxCyvJn0qpptuDNNYBGn24PLtnC068vh0YPmsB\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"208\" data-original-width=\"1378\" height=\"96\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjNQYN25a-9f9muEm82yJIeaSQo95eU4FTbPGRQIGtbRQlbW9OnZtHWMuCEjv-7zY-bzITLYAP1taX7MdVNs7G865ufPvYiHAOU97C_YHZT-iK7aVDQcXK4y1QxPTmlkh9G4xvcrbv0QGFnGG_6a93DZsyxCyvJn0qpptuDNNYBGn24PLtnC068vh0YPmsB=w640-h96\" width=\"640\" /></a></div><br /><p style=\"color: #1b1c1d; font-family: &quot;Google Sans Text&quot;, sans-serif;\"></p><ul style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding-inline-start: 32px; padding: 0px 0px 0px 27px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">내부 단편화 (Internal Fragmentation)</span>: 그림에서 'Request A'는 최대 2048개의 토큰을 생성할 수 있도록 메모리 공간을 미리 할당받았지만, 실제로는 1개의 토큰만 생성했다. 그 결과, 사용되지 않는 2038개의 슬롯이 낭비되고 있다. 'Request B' 역시 507개의 슬롯이 같은 이유로 낭비되고 있다. 이것이 바로 내부 단편화이다. vLLM은 운영체제의 '페이징(Paging)' 기법처럼 KV 캐시를 '블록(Block)'이라는 작은 단위로 나눈다. 처음부터 최대 길이에 맞춰 거대한 메모리 덩어리를 할당하는 대신, 토큰이 생성될 때마다 필요한 만큼 블록을 하나씩 동적으로 할당해 준다. 이는 C의 malloc 이 링크드 리스트 방식으로 메모리 효율적 관리하는 기법과 거의 유사하다.</p></li><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">외부 단편화 (External Fragmentation)</span>: 'Request A'와 'Request B' 사이에는 사용되지 않는 빈 메모리 공간(회색 칸)이 존재한다. 하지만 이 공간이 새로운 요청을 처리하기에 너무 작거나 조각나 있다면, 전체적으로는 메모리가 충분해도 새로운 요청을 배치하지 못하는 외부 단편화가 발생한다. vLLM은 블록 단위로 메모리를 관리하기 때문에, 이 블록들이 물리적으로 연속될 필요가 없다.&nbsp;</p></li></ul><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">2. 핵심 아이디어: PagedAttention과 '메모리 링크드 리스트'</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">vLLM은 이 문제를 해결하기 위해 운영체제의 <span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">가상 메모리(Virtual Memory)와 페이징(Paging) 기법</span>에서 영감을 얻은 <span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">PagedAttention</span> 알고리즘을 도입했다.&nbsp;</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><div class=\"separator\" style=\"clear: both; color: #1b1c1d; font-family: &quot;Google Sans Text&quot;, sans-serif; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEgq45B8PcB52nzdGr2cOXwXys6jHFtRBKxuEx8lXXX-qNt09Ma8KAk3waHUdtfUFpzN1VTtB5oaxJJobuebDlFSWy-GrvvwWS5SXZCU89PMKFJaTSCYyDXSQxCr0h07eZLrJWg9Uy6WDBC9MUnHFpLs2rgOJ8Z-z6U5zc-kg6RVZ-ATijTneqvJBymUqNIV\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"283\" data-original-width=\"628\" height=\"180\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEgq45B8PcB52nzdGr2cOXwXys6jHFtRBKxuEx8lXXX-qNt09Ma8KAk3waHUdtfUFpzN1VTtB5oaxJJobuebDlFSWy-GrvvwWS5SXZCU89PMKFJaTSCYyDXSQxCr0h07eZLrJWg9Uy6WDBC9MUnHFpLs2rgOJ8Z-z6U5zc-kg6RVZ-ATijTneqvJBymUqNIV=w400-h180\" width=\"400\" /></a></div><p style=\"color: #1b1c1d; font-family: &quot;Google Sans Text&quot;, sans-serif;\"></p><ul style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding-inline-start: 32px; padding: 0px 0px 0px 27px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">기존 방식 (연속 할당)</span>: 한 권의 두꺼운 책처럼, 모든 페이지(토큰)가 순서대로 붙어있는 거대한 메모리 덩어리를 할당하는 것이다.&nbsp;</p></li><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">vLLM 방식 (불연속 할당)</span>: 낱장의 종이(블록)에 내용을 적고, 어떤 종이가 다음 내용인지를 알려주는 별도의 '목차(Block Table)'를 관리하는 것과 같다. 이 종이들은 메모리 여기저기에 흩어져 있어도 목차만 따라가면 전체 내용을 순서대로 읽을 수 있다.&nbsp;</p></li></ul><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">이 '목차'가 바로 링크드 리스트의 '링크(포인터)'와 같은 역할을 하며, 메모리를 작은 블록 단위로 잘게 나누어 필요할 때마다 동적으로 할당해주기 때문에 내부 및 외부 단편화가 거의 발생하지 않는다.</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><h4 style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span face=\"&quot;Google Sans Text&quot;, sans-serif !important\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-weight: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">3. 구현: 맞춤형 순전파(Forward) 및 역전파(Backward) 커널</span></h4><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">PagedAttention이라는 새로운 메모리 구조를 만들었기 때문에, 이 구조를 이해하고 계산할 수 있는 새로운 연산 엔진이 필요해졌다. PyTorch의 기본 Attention 함수는 흩어져 있는 메모리 블록을 읽을 수 없기 때문이다.</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">이를 위해 vLLM은 <span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">순전파(Forward)와 역전파(Backward) 연산을 위한 CUDA 커널을 직접 개발</span>하여 PyTorch 시스템에 이식했다.</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">1) 순전파(Forward) CUDA 커널</span></p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">Attention Score를 계산하는 핵심 함수이다. <code style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(233, 238, 246); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 1px 6px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">block_tables</code>라는 '목차'를 받아 흩어져 있는 Key, Value 블록의 물리적 주소를 찾아내어 Attention 연산을 수행한다.</p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEjiQVgdDeTGXWnn-UFnevL8PwaWyoo3ArL7O5_NBdjomXv0JOAlxd0KdEQCxSNxgSqU_0OvRy8w1zqFpwYXbtYOoCvgz7ZjdZ1HFzEMXd4TM15-w4qUyqkBsDpxESq2-f8TXnGgw_lyGBSFU5LXecRUiO-i8EgSxYYapp45CLlVtmLfcNxpURDq7Q0-4Wco\" style=\"margin-left: 1em; margin-right: 1em;\"><img alt=\"\" data-original-height=\"376\" data-original-width=\"781\" height=\"154\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEjiQVgdDeTGXWnn-UFnevL8PwaWyoo3ArL7O5_NBdjomXv0JOAlxd0KdEQCxSNxgSqU_0OvRy8w1zqFpwYXbtYOoCvgz7ZjdZ1HFzEMXd4TM15-w4qUyqkBsDpxESq2-f8TXnGgw_lyGBSFU5LXecRUiO-i8EgSxYYapp45CLlVtmLfcNxpURDq7Q0-4Wco\" width=\"320\" /></a></div><p></p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><br /></p><ul style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding-inline-start: 32px; padding: 0px 0px 0px 27px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">파일 위치</span>: <code style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(233, 238, 246); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 1px 6px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">vllm/csrc/attention/attention_kernels.cu</code></p></li></ul><response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><!----><code-block _nghost-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-153 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><div _ngcontent-ng-c2361251257=\"\" class=\"code-block ng-tns-c2361251257-153 ng-animate-disabled ng-trigger ng-trigger-codeBlockRevealAnimation\" data-hveid=\"0\" data-ved=\"0CAAQhtANahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQkAY\" decode-data-ved=\"1\" jslog=\"223238;track:impression,attention;BardVeMetadataKey:[[&quot;r_2bb4240971069bec&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_47695e0b81ab6915&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"code-block-decoration header-formatted gds-title-s ng-tns-c2361251257-153 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: flex; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: -16px auto auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 2px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 2px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 8px 8px 8px 16px; page: auto; perspective: none; position: sticky; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-153\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">C++</span><div _ngcontent-ng-c2361251257=\"\" class=\"buttons ng-tns-c2361251257-153 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><button _ngcontent-ng-c2361251257=\"\" aria-label=\"코드 복사\" class=\"mdc-icon-button mat-mdc-icon-button mat-mdc-button-base mat-mdc-tooltip-trigger copy-button ng-tns-c2361251257-153 mat-unthemed _mat-animation-noopable ng-star-inserted\" jslog=\"179062;track:generic_click,impression;BardVeMetadataKey:[[&quot;r_2bb4240971069bec&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_47695e0b81ab6915&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]];mutable:true\" mat-icon-button=\"\" mat-ripple-loader-centered=\"\" mat-ripple-loader-class-name=\"mat-mdc-button-ripple\" mat-ripple-loader-uninitialized=\"\" mattooltip=\"코드 복사\" style=\"animation: 0s ease 0s 1 normal none running none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border-color: rgb(68, 71, 70); border-style: none; border-width: 0px; clear: none; clip: auto; color: #444746; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-style: normal; font-variant: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: -4px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px -4px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 8px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(0.8, 0, 0, 0.8, 0, 0); transition: none; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><mat-icon _ngcontent-ng-c2361251257=\"\" aria-hidden=\"true\" class=\"mat-icon notranslate google-symbols mat-ligature-font mat-icon-no-color\" data-mat-icon-name=\"content_copy\" data-mat-icon-type=\"font\" fonticon=\"content_copy\" role=\"img\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline-block; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></mat-icon><span class=\"mat-focus-indicator\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><span class=\"mat-mdc-button-touch-target\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 20px -28px -28px 20px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(1, 0, 0, 1, -24, -24); transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span></button><!----><!----></div><!----></div><!----><div _ngcontent-ng-c2361251257=\"\" class=\"formatted-code-block-internal-container ng-tns-c2361251257-153\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"animated-opacity ng-tns-c2361251257-153\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><pre _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-153\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code _ngcontent-ng-c2361251257=\"\" class=\"code-container formatted ng-tns-c2361251257-153\" data-test-id=\"code-content\" role=\"text\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 16px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// 순전파(Forward Pass)를 위한 PagedAttention CUDA 커널</span>\n<span class=\"hljs-function\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">__global__ <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">void</span> <span class=\"hljs-title\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(153, 105, 0); clear: none; clip: auto; color: #996900; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(153, 105, 0) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">paged_attention_v1_kernel</span><span class=\"hljs-params\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">(\n  torch::Tensor out,              <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// 결과 텐서</span>\n  torch::Tensor query,            <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// Query 텐서</span>\n  torch::Tensor key_cache,        <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// Key 블록들이 저장된 전체 KV 캐시</span>\n  torch::Tensor value_cache,      <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// Value 블록들이 저장된 전체 KV 캐시</span>\n  torch::Tensor block_tables,     <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// ★★★ 흩어진 블록의 주소록 (메모리 링크드 리스트의 '링크')</span>\n  torch::Tensor context_lens,     <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// 각 시퀀스의 길이</span>\n  ...\n)</span> </span>{\n  <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// ... GPU 스레드 ID 계산 ...</span>\n\n  <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// ★★★ 블록 테이블에서 현재 시퀀스에 해당하는 블록 주소 목록을 가져온다</span>\n  <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">const</span> <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">int64_t</span>* block_table = block_tables[prompt_idx].data_ptr&lt;<span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">int64_t</span>&gt;();\n\n  <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// 루프를 돌며 block_table을 참조해 물리적 블록 주소를 계산하고</span>\n  <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// 해당 주소에서 Key, Value를 로드하여 Attention 연산을 수행한다.</span>\n  <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">// ...</span>\n}\n</code></pre><!----></div></div></div><!----><!----></code-block><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></response-element><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">2) PyTorch 연동 및 역전파(Backward) 커널</span></p>이 커스텀 CUDA 커널을 PyTorch의 자동 미분 시스템과 연동시키기 위해 torch.autograd.Function을 상속받아 forward와 backward 메소드를 직접 정의한다. backward 메소드는 편미분을 통한 Gradient 계산을 위해 별도로 제작된 역전파용 CUDA 커널을 호출한다.</div><div _ngcontent-ng-c3486990560=\"\" class=\"markdown markdown-main-panel stronger enable-updated-hr-color\" dir=\"ltr\" id=\"model-response-message-contentr_2bb4240971069bec\" inline-copy-host=\"\" style=\"--animation-duration: 400ms; --fade-animation-function: linear; animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><br /><ul style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding-inline-start: 32px; padding: 0px 0px 0px 27px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">파일 위치</span>: <code style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(233, 238, 246); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 1px 6px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">vllm/model_executor/layers/attention.py</code></p></li></ul><response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code-block _nghost-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-154 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"code-block ng-tns-c2361251257-154 ng-animate-disabled ng-trigger ng-trigger-codeBlockRevealAnimation\" data-hveid=\"0\" data-ved=\"0CAAQhtANahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQkQY\" decode-data-ved=\"1\" jslog=\"223238;track:impression,attention;BardVeMetadataKey:[[&quot;r_2bb4240971069bec&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_47695e0b81ab6915&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"formatted-code-block-internal-container ng-tns-c2361251257-154\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"animated-opacity ng-tns-c2361251257-154\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><pre _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-154\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code _ngcontent-ng-c2361251257=\"\" class=\"code-container formatted ng-tns-c2361251257-154\" data-test-id=\"code-content\" role=\"text\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 16px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># PyTorch의 자동 미분 기능에 새로운 함수를 등록하는 부분</span>\n<span class=\"hljs-class\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(153, 105, 0); clear: none; clip: auto; color: #996900; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(153, 105, 0) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">class</span> <span class=\"hljs-title\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(153, 105, 0); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(153, 105, 0) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">PagedAttention</span>(<span class=\"hljs-params\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(153, 105, 0); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(153, 105, 0) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">torch.autograd.Function</span>):</span>\n\n<span class=\"hljs-meta\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(25, 103, 210); clear: none; clip: auto; color: #1967d2; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(25, 103, 210) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">    @staticmethod</span>\n    <span class=\"hljs-function\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">def</span> <span class=\"hljs-title\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(153, 105, 0); clear: none; clip: auto; color: #996900; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(153, 105, 0) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">forward</span>(<span class=\"hljs-params\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">ctx, ...</span>):</span>\n        <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 순전파(Forward)용 CUDA 커널 (ops.paged_attention_v1)을 호출한다</span>\n        ops.paged_attention_v1(...)\n        <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">return</span> output\n\n<span class=\"hljs-meta\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(25, 103, 210); clear: none; clip: auto; color: #1967d2; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(25, 103, 210) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">    @staticmethod</span>\n    <span class=\"hljs-function\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">def</span> <span class=\"hljs-title\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(153, 105, 0); clear: none; clip: auto; color: #996900; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(153, 105, 0) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">backward</span>(<span class=\"hljs-params\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">ctx, grad_output: torch.Tensor</span>):</span>\n        <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 역전파(Backward)를 위한 별도의 Gradient 계산용 CUDA 커널을 호출한다</span>\n        ops.paged_attention_v2_backward(...)\n        <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">return</span> (d_query, d_key, d_value, ...)이</code></pre></div></div></div></code-block></response-element><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">참고로, 파치토치 커널 함수는 다음과 같이 <a href=\"https://discuss.pytorch.org/t/monkey-patching-the-forward-pass-of-an-nn-module/176095\">Monkey Patch 기법</a>으로 간단히 커스텀 교체할 수 있다.</p><div _ngcontent-ng-c2361251257=\"\" class=\"formatted-code-block-internal-container ng-tns-c2361251257-154\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"animated-opacity ng-tns-c2361251257-154\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><pre _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-154\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code _ngcontent-ng-c2361251257=\"\" class=\"code-container formatted ng-tns-c2361251257-154\" data-test-id=\"code-content\" role=\"text\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 16px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: black; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Noto Sans KR&quot;; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; white-space: normal; x: 0px; y: 0px; zoom: 1;\"><span face=\"Google Sans Text, sans-serif\" style=\"color: #1b1c1d;\">import transformers</span></p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: black; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Noto Sans KR&quot;; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; white-space: normal; x: 0px; y: 0px; zoom: 1;\"><span face=\"Google Sans Text, sans-serif\" style=\"color: #1b1c1d;\">from transformers.models.llama.modeling_llama import LlamaAttention</span></p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: black; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Noto Sans KR&quot;; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; white-space: normal; x: 0px; y: 0px; zoom: 1;\"><span face=\"&quot;Google Sans Text&quot;, sans-serif\" style=\"background-color: rgba(0, 0, 0, 0); color: #1b1c1d;\">original_forward = LlamaAttention.forward</span></p><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: black; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Noto Sans KR&quot;; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; white-space: normal; x: 0px; y: 0px; zoom: 1;\"><span face=\"&quot;Google Sans Text&quot;, sans-serif\" style=\"background-color: rgba(0, 0, 0, 0); color: #1b1c1d;\">LlamaAttention.forward = custom_paged_attention_forward</span></p></code></pre></div></div><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><br />단, 이렇게 블럭에 서브 시퀀스를 저장하면, QKV 내적 계산시 토큰의 위치별로 희소행렬 방식으로 계산해야 한다. vLLM은 고정된 블록 크기라는 규칙을 이용해 모든 토큰의 절대 위치를 즉시 계산한다. 특정 토큰의 순서를 고정된 블록 크기로 나누면 그 몫은 해당 토큰이 위치한 논리적 블록의 순서가 되고, 나머지는 그 블록 내에서의 상대적 위치가 된다. 시스템은 이 논리적 블록 순서를 블록 테이블에 대입하여 실제 물리 메모리 주소를 찾는다. 이를 통해 희소행렬처럼 표현된 시퀀스의 토큰들을 서로 계산되어야 할 위치의 토큰 임베딩벡터 끼리 내적계산한다.<br /><br />vLLM은 1) PagedAttention이라는 효율적인 메모리 관리 기법을 고안하고, 2) 이 기법 위에서 동작하는 순전파 및 역전파 CUDA 커널 세트를 직접 개발하여, 3) 이를 PyTorch 시스템에 완벽하게 통합함으로써 하나의 고성능 추론 시스템을 완성한 것이다.<br /><br /><b>vLLM 설치<br /></b><br />vLLM은 리눅스 환경을 정식으로 지원하며, 파이썬 3.8 이상과 CUDA 11.8 이상을 지원하는 NVIDIA GPU가 필요하다. <span face=\"&quot;Google Sans Text&quot;, sans-serif\" style=\"color: #1b1c1d;\">윈도우 사용자의 경우 WSL2(Windows Subsystem for Linux 2)를 통해 리눅스 환경을 구축한 후 설치해야 한다.</span></p></div></div><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">설치는 파이썬 패키지 관리자인 pip를 통해 간단하게 진행할 수 있다. 가상 환경을 먼저 구성하고 그 내부에 설치하는 것이 권장된다.</p><ol start=\"1\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding-inline-start: 32px; padding: 0px 0px 0px 28px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><b style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">가상 환경 생성 및 활성화</b></p><response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><!----><code-block _nghost-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-88 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><div _ngcontent-ng-c2361251257=\"\" class=\"code-block ng-tns-c2361251257-88 ng-animate-disabled ng-trigger ng-trigger-codeBlockRevealAnimation\" data-hveid=\"0\" data-ved=\"0CAAQhtANahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQ5AQ\" decode-data-ved=\"1\" jslog=\"223238;track:impression,attention;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"code-block-decoration header-formatted gds-title-s ng-tns-c2361251257-88 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: flex; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: -16px auto auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 2px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 2px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 8px 8px 8px 16px; page: auto; perspective: none; position: sticky; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-88\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">Bash</span><div _ngcontent-ng-c2361251257=\"\" class=\"buttons ng-tns-c2361251257-88 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><button _ngcontent-ng-c2361251257=\"\" aria-label=\"코드 복사\" class=\"mdc-icon-button mat-mdc-icon-button mat-mdc-button-base mat-mdc-tooltip-trigger copy-button ng-tns-c2361251257-88 mat-unthemed _mat-animation-noopable ng-star-inserted\" jslog=\"179062;track:generic_click,impression;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]];mutable:true\" mat-icon-button=\"\" mat-ripple-loader-centered=\"\" mat-ripple-loader-class-name=\"mat-mdc-button-ripple\" mat-ripple-loader-uninitialized=\"\" mattooltip=\"코드 복사\" style=\"animation: 0s ease 0s 1 normal none running none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border-color: rgb(68, 71, 70); border-style: none; border-width: 0px; clear: none; clip: auto; color: #444746; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-style: normal; font-variant: normal; font-variation-settings: normal; font-weight: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: -4px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px -4px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 8px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(0.8, 0, 0, 0.8, 0, 0); transition: none; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><mat-icon _ngcontent-ng-c2361251257=\"\" aria-hidden=\"true\" class=\"mat-icon notranslate google-symbols mat-ligature-font mat-icon-no-color\" data-mat-icon-name=\"content_copy\" data-mat-icon-type=\"font\" fonticon=\"content_copy\" role=\"img\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline-block; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></mat-icon><span class=\"mat-focus-indicator\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><span class=\"mat-mdc-button-touch-target\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 20px -28px -28px 20px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(1, 0, 0, 1, -24, -24); transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span></button><!----><!----></div><!----></div><!----><div _ngcontent-ng-c2361251257=\"\" class=\"formatted-code-block-internal-container ng-tns-c2361251257-88\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"animated-opacity ng-tns-c2361251257-88\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><pre _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-88\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code _ngcontent-ng-c2361251257=\"\" class=\"code-container formatted ng-tns-c2361251257-88\" data-test-id=\"code-content\" role=\"text\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 16px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">python -m venv vllm-env\n<span class=\"hljs-built_in\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(25, 103, 210); clear: none; clip: auto; color: #1967d2; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(25, 103, 210) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">source</span> vllm-env/bin/activate\n</code></pre><!----></div></div></div><!----><!----></code-block><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></response-element></li><li style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px 0px 0px 4px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><p style=\"line-height: 1.15; margin-top: 0px; padding-bottom: 0px; padding-top: 0px;\"><b>vLLM 설치</b></p><p style=\"line-height: 1.15; margin-top: 0px; padding-bottom: 0px; padding-top: 0px;\">PyTorch가 자동으로 함께 설치되며, 시스템에 맞는 CUDA 버전과 호환되는 버전을 설치하는 것이 중요하다.</p><response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><!----><code-block _nghost-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-89 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><div _ngcontent-ng-c2361251257=\"\" class=\"code-block ng-tns-c2361251257-89 ng-animate-disabled ng-trigger ng-trigger-codeBlockRevealAnimation\" data-hveid=\"0\" data-ved=\"0CAAQhtANahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQ5QQ\" decode-data-ved=\"1\" jslog=\"223238;track:impression,attention;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"code-block-decoration header-formatted gds-title-s ng-tns-c2361251257-89 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: flex; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: -16px auto auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 2px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 2px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 8px 8px 8px 16px; page: auto; perspective: none; position: sticky; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-89\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">Bash</span><div _ngcontent-ng-c2361251257=\"\" class=\"buttons ng-tns-c2361251257-89 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><button _ngcontent-ng-c2361251257=\"\" aria-label=\"코드 복사\" class=\"mdc-icon-button mat-mdc-icon-button mat-mdc-button-base mat-mdc-tooltip-trigger copy-button ng-tns-c2361251257-89 mat-unthemed _mat-animation-noopable ng-star-inserted\" jslog=\"179062;track:generic_click,impression;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]];mutable:true\" mat-icon-button=\"\" mat-ripple-loader-centered=\"\" mat-ripple-loader-class-name=\"mat-mdc-button-ripple\" mat-ripple-loader-uninitialized=\"\" mattooltip=\"코드 복사\" style=\"animation: 0s ease 0s 1 normal none running none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border-color: rgb(68, 71, 70); border-style: none; border-width: 0px; clear: none; clip: auto; color: #444746; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-style: normal; font-variant: normal; font-variation-settings: normal; font-weight: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: -4px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px -4px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 8px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(0.8, 0, 0, 0.8, 0, 0); transition: none; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><mat-icon _ngcontent-ng-c2361251257=\"\" aria-hidden=\"true\" class=\"mat-icon notranslate google-symbols mat-ligature-font mat-icon-no-color\" data-mat-icon-name=\"content_copy\" data-mat-icon-type=\"font\" fonticon=\"content_copy\" role=\"img\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline-block; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></mat-icon><span class=\"mat-focus-indicator\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><span class=\"mat-mdc-button-touch-target\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 20px -28px -28px 20px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(1, 0, 0, 1, -24, -24); transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span></button><!----><!----></div><!----></div><!----><div _ngcontent-ng-c2361251257=\"\" class=\"formatted-code-block-internal-container ng-tns-c2361251257-89\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"animated-opacity ng-tns-c2361251257-89\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><pre _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-89\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code _ngcontent-ng-c2361251257=\"\" class=\"code-container formatted ng-tns-c2361251257-89\" data-test-id=\"code-content\" role=\"text\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 16px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">pip install vllm&nbsp;</code></pre><!----></div></div></div><!----><!----></code-block><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></response-element></li></ol><br /><br />vLLM의 사용법은 크게 두 가지로 나뉜다. 첫째는 파이썬 코드 내에서 라이브러리로 직접 사용하는 오프라인 추론 방식이고, 둘째는 모델을 API 서버로 실행해두고 HTTP 요청으로 사용하는 온라인 서빙 방식이다.<br /><br /><br /><b>파이썬 코드 예시&nbsp;</b></div><div _ngcontent-ng-c3486990560=\"\" class=\"markdown markdown-main-panel stronger enable-updated-hr-color\" dir=\"ltr\" id=\"model-response-message-contentr_839a192593780b7f\" inline-copy-host=\"\" style=\"--animation-duration: 400ms; --fade-animation-function: linear; animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><b><br /></b>다음은 파이썬 스크립트에서 직접 모델을 불러와 텍스트를 생성하는 예시이다. LLM 클래스로 모델을 로드하고 SamplingParams로 온도(temperature), top-p 등 생성 옵션을 조절한다.<response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><!----><code-block _nghost-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-90 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><div _ngcontent-ng-c2361251257=\"\" class=\"code-block ng-tns-c2361251257-90 ng-animate-disabled ng-trigger ng-trigger-codeBlockRevealAnimation\" data-hveid=\"0\" data-ved=\"0CAAQhtANahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQ5gQ\" decode-data-ved=\"1\" jslog=\"223238;track:impression,attention;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"code-block-decoration header-formatted gds-title-s ng-tns-c2361251257-90 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: flex; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: -16px auto auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 2px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 2px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 8px 8px 8px 16px; page: auto; perspective: none; position: sticky; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-90\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">Python</span><div _ngcontent-ng-c2361251257=\"\" class=\"buttons ng-tns-c2361251257-90 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><button _ngcontent-ng-c2361251257=\"\" aria-label=\"코드 복사\" class=\"mdc-icon-button mat-mdc-icon-button mat-mdc-button-base mat-mdc-tooltip-trigger copy-button ng-tns-c2361251257-90 mat-unthemed _mat-animation-noopable ng-star-inserted\" jslog=\"179062;track:generic_click,impression;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]];mutable:true\" mat-icon-button=\"\" mat-ripple-loader-centered=\"\" mat-ripple-loader-class-name=\"mat-mdc-button-ripple\" mat-ripple-loader-uninitialized=\"\" mattooltip=\"코드 복사\" style=\"animation: 0s ease 0s 1 normal none running none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border-color: rgb(68, 71, 70); border-style: none; border-width: 0px; clear: none; clip: auto; color: #444746; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-style: normal; font-variant: normal; font-variation-settings: normal; font-weight: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: -4px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px -4px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 8px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(0.8, 0, 0, 0.8, 0, 0); transition: none; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><mat-icon _ngcontent-ng-c2361251257=\"\" aria-hidden=\"true\" class=\"mat-icon notranslate google-symbols mat-ligature-font mat-icon-no-color\" data-mat-icon-name=\"content_copy\" data-mat-icon-type=\"font\" fonticon=\"content_copy\" role=\"img\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline-block; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></mat-icon><span class=\"mat-focus-indicator\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><span class=\"mat-mdc-button-touch-target\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 20px -28px -28px 20px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(1, 0, 0, 1, -24, -24); transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span></button><!----><!----></div><!----></div><!----><div _ngcontent-ng-c2361251257=\"\" class=\"formatted-code-block-internal-container ng-tns-c2361251257-90\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"animated-opacity ng-tns-c2361251257-90\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><pre _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-90\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code _ngcontent-ng-c2361251257=\"\" class=\"code-container formatted ng-tns-c2361251257-90\" data-test-id=\"code-content\" role=\"text\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 16px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">from</span> vllm <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">import</span> LLM, SamplingParams\n\n<span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 허깅페이스에서 모델 이름을 지정하여 LLM 객체 생성</span>\n<span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># tensor_parallel_size는 사용할 GPU의 수를 의미한다</span>\nllm = LLM(model=<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"meta-llama/Meta-Llama-3-8B-Instruct\"</span>, tensor_parallel_size=<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">1</span>)\n\n<span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 생성할 텍스트의 프롬프트 목록</span>\nprompts = [\n    <span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"대한민국의 수도는 어디인가?\"</span>,\n    <span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"인공지능의 미래에 대해 한 문장으로 요약하면\"</span>,\n]\n\n<span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 샘플링 파라미터 설정</span>\nsampling_params = SamplingParams(temperature=<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">0.7</span>, top_p=<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">0.95</span>, max_tokens=<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">100</span>)\n\n<span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 텍스트 생성 실행</span>\noutputs = llm.generate(prompts, sampling_params)\n\n<span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 결과 출력</span>\n<span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">for</span> output <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">in</span> outputs:\n    prompt = output.prompt\n    generated_text = output.outputs[<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">0</span>].text\n    print(<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">f\"프롬프트: <span class=\"hljs-subst\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">{prompt}</span>\"</span>)\n    print(<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">f\"생성된 텍스트: <span class=\"hljs-subst\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">{generated_text}</span>\"</span>)\n    print(<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"---\"</span>)&nbsp;</code></pre><!----></div></div></div><!----><!----></code-block><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----><!----></response-element><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><h4 style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><br />Ollama와 연계 (API 서버 활용)<br /><br /><span style=\"font-weight: normal;\">Ollama는 모델을 로컬 환경에서 쉽게 실행하고 관리하게 해주는 도구이다. vLLM과 Ollama는 경쟁 관계이면서 상호 보완적으로 이해할 수 있다. 두 도구 모두 모델을 API 서버로 실행하는 기능을 제공하기 때문이다.<br /><br />vLLM은 OpenAI의 API와 호환되는 서버를 매우 쉽게 실행할 수 있다. 터미널에서 아래와 같은 명령어를 실행하면 meta-llama/Meta-Llama-3-8B-Instruct 모델이 로드되어 8000번 포트로 API 서비스가 시작된다.</span></h4><response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><!----><code-block _nghost-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-91 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><div _ngcontent-ng-c2361251257=\"\" class=\"code-block ng-tns-c2361251257-91 ng-animate-disabled ng-trigger ng-trigger-codeBlockRevealAnimation\" data-hveid=\"0\" data-ved=\"0CAAQhtANahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQ5wQ\" decode-data-ved=\"1\" jslog=\"223238;track:impression,attention;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"code-block-decoration header-formatted gds-title-s ng-tns-c2361251257-91 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: flex; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: -16px auto auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 2px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 2px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 8px 8px 8px 16px; page: auto; perspective: none; position: sticky; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-91\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">Bash</span><div _ngcontent-ng-c2361251257=\"\" class=\"buttons ng-tns-c2361251257-91 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><button _ngcontent-ng-c2361251257=\"\" aria-label=\"코드 복사\" class=\"mdc-icon-button mat-mdc-icon-button mat-mdc-button-base mat-mdc-tooltip-trigger copy-button ng-tns-c2361251257-91 mat-unthemed _mat-animation-noopable ng-star-inserted\" jslog=\"179062;track:generic_click,impression;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]];mutable:true\" mat-icon-button=\"\" mat-ripple-loader-centered=\"\" mat-ripple-loader-class-name=\"mat-mdc-button-ripple\" mat-ripple-loader-uninitialized=\"\" mattooltip=\"코드 복사\" style=\"animation: 0s ease 0s 1 normal none running none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border-color: rgb(68, 71, 70); border-style: none; border-width: 0px; clear: none; clip: auto; color: #444746; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-style: normal; font-variant: normal; font-variation-settings: normal; font-weight: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: -4px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px -4px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 8px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(0.8, 0, 0, 0.8, 0, 0); transition: none; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><mat-icon _ngcontent-ng-c2361251257=\"\" aria-hidden=\"true\" class=\"mat-icon notranslate google-symbols mat-ligature-font mat-icon-no-color\" data-mat-icon-name=\"content_copy\" data-mat-icon-type=\"font\" fonticon=\"content_copy\" role=\"img\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline-block; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></mat-icon><span class=\"mat-focus-indicator\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><span class=\"mat-mdc-button-touch-target\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 20px -28px -28px 20px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(1, 0, 0, 1, -24, -24); transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span></button><!----><!----></div><!----></div><!----><div _ngcontent-ng-c2361251257=\"\" class=\"formatted-code-block-internal-container ng-tns-c2361251257-91\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"animated-opacity ng-tns-c2361251257-91\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><pre _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-91\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code _ngcontent-ng-c2361251257=\"\" class=\"code-container formatted ng-tns-c2361251257-91\" data-test-id=\"code-content\" role=\"text\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 16px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">python -m vllm.entrypoints.openai.api_server \\\n    --model <span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"meta-llama/Meta-Llama-3-8B-Instruct\"</span></code></pre></div></div></div></code-block></response-element>이렇게 실행된 vLLM 서버는 Ollama가 제공하는 API 엔드포인트와 동일한 방식으로 HTTP 요청을 통해 사용할 수 있다. 즉, Ollama를 사용하던 코드에서 API 주소만 vLLM 서버 주소(http://localhost:8000/v1)로 변경하면 vLLM의 높은 처리 성능을 그대로 활용할 수 있게 되는 것이다. 이는 vLLM을 기존 LLM 기반 애플리케이션의 백엔드 추론 엔진으로 손쉽게 교체할 수 있음을 의미한다.<h3 style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 8px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span style=\"font-size: small;\"><br />간략한 챗봇 코드 예시<br /><br /><span style=\"font-weight: normal;\">vLLM을 활용하여 터미널에서 간단하게 대화할 수 있는 챗봇 코드는 다음과 같다. 대화 기록을 누적하여 다음 답변 생성</span><span face=\"&quot;Google Sans Text&quot;, sans-serif\" style=\"color: #1b1c1d; font-weight: normal;\">에 활용하는 방식이다.</span></span></h3><response-element ng-version=\"0.0.0-PLACEHOLDER\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><!----><!----><code-block _nghost-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-92 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><!----><!----><div _ngcontent-ng-c2361251257=\"\" class=\"code-block ng-tns-c2361251257-92 ng-animate-disabled ng-trigger ng-trigger-codeBlockRevealAnimation\" data-hveid=\"0\" data-ved=\"0CAAQhtANahgKEwiS5OGN3_ePAxUAAAAAHQAAAAAQ6AQ\" decode-data-ved=\"1\" jslog=\"223238;track:impression,attention;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]]\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"code-block-decoration header-formatted gds-title-s ng-tns-c2361251257-92 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: flex; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: -16px auto auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 2px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 2px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 8px 8px 8px 16px; page: auto; perspective: none; position: sticky; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-92\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">Python</span><div _ngcontent-ng-c2361251257=\"\" class=\"buttons ng-tns-c2361251257-92 ng-star-inserted\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><button _ngcontent-ng-c2361251257=\"\" aria-label=\"코드 복사\" class=\"mdc-icon-button mat-mdc-icon-button mat-mdc-button-base mat-mdc-tooltip-trigger copy-button ng-tns-c2361251257-92 mat-unthemed _mat-animation-noopable ng-star-inserted\" jslog=\"179062;track:generic_click,impression;BardVeMetadataKey:[[&quot;r_839a192593780b7f&quot;,&quot;c_3b56cf44d835520d&quot;,null,&quot;rc_61bbc170cb51b404&quot;,null,null,&quot;ko&quot;,null,1,null,null,1,0]];mutable:true\" mat-icon-button=\"\" mat-ripple-loader-centered=\"\" mat-ripple-loader-class-name=\"mat-mdc-button-ripple\" mat-ripple-loader-uninitialized=\"\" mattooltip=\"코드 복사\" style=\"animation: 0s ease 0s 1 normal none running none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border-color: rgb(68, 71, 70); border-style: none; border-width: 0px; clear: none; clip: auto; color: #444746; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-style: normal; font-variant: normal; font-variation-settings: normal; font-weight: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: -4px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px -4px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 8px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(0.8, 0, 0, 0.8, 0, 0); transition: none; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"mat-mdc-button-persistent-ripple mdc-icon-button__ripple\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><mat-icon _ngcontent-ng-c2361251257=\"\" aria-hidden=\"true\" class=\"mat-icon notranslate google-symbols mat-ligature-font mat-icon-no-color\" data-mat-icon-name=\"content_copy\" data-mat-icon-type=\"font\" fonticon=\"content_copy\" role=\"img\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto no-repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline-block; fill: rgb(68, 71, 70); filter: none; flex: 0 0 auto; float: none; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: relative; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></mat-icon><span class=\"mat-focus-indicator\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 0px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span><span class=\"mat-mdc-button-touch-target\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(68, 71, 70); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: pointer; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(68, 71, 70); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: 20px -28px -28px 20px; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(68, 71, 70) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: absolute; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: matrix(1, 0, 0, 1, -24, -24); transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></span></button><!----><!----></div><!----></div><!----><div _ngcontent-ng-c2361251257=\"\" class=\"formatted-code-block-internal-container ng-tns-c2361251257-92\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgb(240, 244, 249); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><div _ngcontent-ng-c2361251257=\"\" class=\"animated-opacity ng-tns-c2361251257-92\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><pre _ngcontent-ng-c2361251257=\"\" class=\"ng-tns-c2361251257-92\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><code _ngcontent-ng-c2361251257=\"\" class=\"code-container formatted ng-tns-c2361251257-92\" data-test-id=\"code-content\" role=\"text\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(87, 91, 95); clear: none; clip: auto; color: #575b5f; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: block; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(87, 91, 95) none 0px; overlay: none; padding: 16px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"><span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">from</span> vllm <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">import</span> LLM, SamplingParams\n\n<span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 채팅 형식에 최적화된 모델을 선택하는 것이 좋다</span>\nllm = LLM(model=<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"meta-llama/Meta-Llama-3-8B-Instruct\"</span>)\nsampling_params = SamplingParams(temperature=<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">0.7</span>, top_p=<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">0.9</span>, max_tokens=<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">1024</span>)\n\nconversation_history = []\n\nprint(<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"간단한 챗봇입니다. 대화를 시작하세요. (종료하려면 '종료' 입력)\"</span>)\n\n<span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">while</span> <span class=\"hljs-literal\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">True</span>:\n    user_input = <span class=\"hljs-built_in\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(25, 103, 210); clear: none; clip: auto; color: #1967d2; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(25, 103, 210) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">input</span>(<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"나: \"</span>)\n    <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">if</span> user_input == <span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"종료\"</span>:\n        print(<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"챗봇을 종료합니다.\"</span>)\n        <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">break</span>\n    \n    <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 대화 기록에 사용자 입력을 추가한다</span>\n    conversation_history.append({<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"role\"</span>: <span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"user\"</span>, <span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"content\"</span>: user_input})\n    \n    <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 모델에 맞는 채팅 템플릿을 사용하여 프롬프트를 생성한다</span>\n    <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 허깅페이스의 `apply_chat_template` 기능을 활용할 수 있다</span>\n    <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">from</span> transformers <span class=\"hljs-keyword\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(132, 48, 206); clear: none; clip: auto; color: #8430ce; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(132, 48, 206) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">import</span> AutoTokenizer\n    tokenizer = AutoTokenizer.from_pretrained(<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"meta-llama/Meta-Llama-3-8B-Instruct\"</span>)\n    \n    <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 대화 기록을 프롬프트 문자열로 변환한다</span>\n    prompt_text = tokenizer.apply_chat_template(\n        conversation_history, \n        tokenize=<span class=\"hljs-literal\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">False</span>, \n        add_generation_prompt=<span class=\"hljs-literal\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">True</span>\n    )\n\n    <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># vLLM으로 답변 생성</span>\n    outputs = llm.generate([prompt_text], sampling_params)\n    \n    bot_response = outputs[<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">0</span>].outputs[<span class=\"hljs-number\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(181, 89, 8); clear: none; clip: auto; color: #b55908; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(181, 89, 8) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">0</span>].text\n    print(<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">f\"챗봇: <span class=\"hljs-subst\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">{bot_response}</span>\"</span>)\n\n    <span class=\"hljs-comment\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(95, 99, 104); clear: none; clip: auto; color: #5f6368; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(95, 99, 104) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"># 대화 기록에 챗봇 답변을 추가한다</span>\n    conversation_history.append({<span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"role\"</span>: <span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"assistant\"</span>, <span class=\"hljs-string\" style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background: none 0% 0% / auto repeat scroll padding-box border-box rgba(0, 0, 0, 0); border: 0px none rgb(24, 128, 56); clear: none; clip: auto; color: #188038; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; display: inline; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-feature-settings: normal; font-kerning: auto; font-optical-sizing: auto; font-size-adjust: none; font-stretch: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-variant-emoji: normal; font-variant-numeric: normal; font-variant-position: normal; font-variation-settings: normal; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(24, 128, 56) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\">\"content\"</span>: bot_response})</code></pre></div></div></div></code-block></response-element><p style=\"animation: 0s ease 0s 1 normal none running none; appearance: none; background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; background-position: 0% 0%; background-repeat: repeat; background-size: auto; border: 0px none rgb(27, 28, 29); clear: none; clip: auto; color: #1b1c1d; columns: auto; contain: none; container: none; content: normal; cursor: auto; cx: 0px; cy: 0px; d: none; direction: ltr; fill: rgb(0, 0, 0); filter: none; flex: 0 1 auto; float: none; font-family: &quot;Google Sans Text&quot;, sans-serif; gap: normal; hyphens: manual; inset: auto; interactivity: auto; isolation: auto; line-height: 1.15; margin-bottom: 16px; margin-left: 0px; margin-right: 0px; margin-top: 0px !important; margin: 0px 0px 16px; marker: none; mask-clip: border-box; mask-composite: add; mask-image: none; mask-mode: match-source; mask-origin: border-box; mask-repeat: repeat; mask-size: auto; mask: none; offset: normal; opacity: 1; order: 0; outline: rgb(27, 28, 29) none 0px; overlay: none; padding: 0px; page: auto; perspective: none; position: static; quotes: auto; r: 0px; resize: none; rotate: none; rx: auto; ry: auto; scale: none; speak: normal; stroke: none; transform: none; transition: all; translate: none; visibility: visible; x: 0px; y: 0px; zoom: 1;\"></p><br /><b>마무리</b><br /><br />vLLM은 PagedAttention 기술을 통해 대규모 언어 모델 서빙의 효율성을 극대화한 핵심적인 도구이다. 메모리 관리의 혁신을 통해 이전에는 불가능했던 수준의 처리량을 달성했으며, 이는 더 많은 사용자가 더 빠르고 저렴하게 LLM 기술을 활용할 수 있는 길을 만들었다. 설치와 사용법 또한 간편하여 개발자들이 자신의 서비스에 강력한 LLM 추론 엔진을 쉽게 통합할 수 있도록 지원한다. </div><!----></div>",
        "contentSnippet": "이 글은 고속 LLM 실행을 지원하는 vLLM 동작 원리를 분석하고, 사용 방법을 간략히 정리한 것이다. vLLM은 대규모 언어 모델(LLM)의 추론 및 서빙을 위한 고성능 라이브러리이다.\n\n\nvLLM 메모리 사용 효율성\n\n\n\n\n대규모 언어 모델을 서비스로 제공할 때 가장 큰 병목 현상은 메모리에서 발생한다. 특히 트랜스포머 아키텍처의 핵심인 어텐션 메커니즘은 이전 토큰들의 키(Key)와 값(Value)을 KV 캐시라는 메모리 공간에 저장하는데, 이 공간의 비효율적인 관리가 추론 속도를 저하시키는 주된 원인이다. 기존 방식에서는 모든 요청에 대해 최대 길이를 가정하고 메모리를 미리 할당하여 심각한 낭비를 초래했다.\nvLLM은 이러한 문제를 해결하기 위해 PagedAttention이라는 알고리즘을 도입한 것이다. 이는 운영체제의 가상 메모리와 페이징 기법에서 영감을 얻은 기술이다. KV 캐시를 연속된 메모리 공간에 할당하는 대신, 페이지처럼 작은 블록 단위로 분할하여 관리한다. 이로써 메모리 단편화를 거의 없애고, 실제 필요한 만큼만 동적으로 메모리를 할당하여 낭비를 최대 90% 이상 줄일 수 있다. 결과적으로 동일한 하드웨어에서 훨씬 더 많은 요청을 동시에 처리하는 높은 처리량(Throughput)을 달성하게 된 것이다.\n이 기술은 미국 UC 버클리 대학의 Sky Computing Lab 소속 연구원들이 개발했으며, 논문 발표와 함께 오픈소스로 공개되어 LLM 서빙 분야의 핵심 기술로 빠르게 자리 잡았다.\n\nvLLM 공식 문서: \nhttps://docs.vllm.ai/\n\n\nPagedAttention 논문: \nhttps://arxiv.org/abs/2309.06180\n\n\n\n\nvLLM 동작 메커니즘\n\nvLLM의 혁신은 단순히 빠른 코드를 작성한 것이 아니라, 대규모 언어 모델(LLM) 서빙의 근본적인 병목 지점인 메모리 관리 방식을 새롭게 설계한 것에서 출발한다.\n\n\n1. 문제 정의: 비효율적인 KV 캐시 메모리\n\n기존 시스템은 모든 요청에 대해 최대 출력 길이를 가정하고 거대한 메모리 공간을 미리 할당했다. 이는 아래 그림과 같이 심각한 메모리 낭비를 초래했다.\n\n\n\n\n\n내부 단편화 (Internal Fragmentation): 그림에서 'Request A'는 최대 2048개의 토큰을 생성할 수 있도록 메모리 공간을 미리 할당받았지만, 실제로는 1개의 토큰만 생성했다. 그 결과, 사용되지 않는 2038개의 슬롯이 낭비되고 있다. 'Request B' 역시 507개의 슬롯이 같은 이유로 낭비되고 있다. 이것이 바로 내부 단편화이다. vLLM은 운영체제의 '페이징(Paging)' 기법처럼 KV 캐시를 '블록(Block)'이라는 작은 단위로 나눈다. 처음부터 최대 길이에 맞춰 거대한 메모리 덩어리를 할당하는 대신, 토큰이 생성될 때마다 필요한 만큼 블록을 하나씩 동적으로 할당해 준다. 이는 C의 malloc 이 링크드 리스트 방식으로 메모리 효율적 관리하는 기법과 거의 유사하다.\n\n외부 단편화 (External Fragmentation): 'Request A'와 'Request B' 사이에는 사용되지 않는 빈 메모리 공간(회색 칸)이 존재한다. 하지만 이 공간이 새로운 요청을 처리하기에 너무 작거나 조각나 있다면, 전체적으로는 메모리가 충분해도 새로운 요청을 배치하지 못하는 외부 단편화가 발생한다. vLLM은 블록 단위로 메모리를 관리하기 때문에, 이 블록들이 물리적으로 연속될 필요가 없다. \n\n2. 핵심 아이디어: PagedAttention과 '메모리 링크드 리스트'\n\nvLLM은 이 문제를 해결하기 위해 운영체제의 가상 메모리(Virtual Memory)와 페이징(Paging) 기법에서 영감을 얻은 PagedAttention 알고리즘을 도입했다. \n\n\n\n\n기존 방식 (연속 할당): 한 권의 두꺼운 책처럼, 모든 페이지(토큰)가 순서대로 붙어있는 거대한 메모리 덩어리를 할당하는 것이다. \n\nvLLM 방식 (불연속 할당): 낱장의 종이(블록)에 내용을 적고, 어떤 종이가 다음 내용인지를 알려주는 별도의 '목차(Block Table)'를 관리하는 것과 같다. 이 종이들은 메모리 여기저기에 흩어져 있어도 목차만 따라가면 전체 내용을 순서대로 읽을 수 있다. \n\n이 '목차'가 바로 링크드 리스트의 '링크(포인터)'와 같은 역할을 하며, 메모리를 작은 블록 단위로 잘게 나누어 필요할 때마다 동적으로 할당해주기 때문에 내부 및 외부 단편화가 거의 발생하지 않는다.\n\n3. 구현: 맞춤형 순전파(Forward) 및 역전파(Backward) 커널\n\nPagedAttention이라는 새로운 메모리 구조를 만들었기 때문에, 이 구조를 이해하고 계산할 수 있는 새로운 연산 엔진이 필요해졌다. PyTorch의 기본 Attention 함수는 흩어져 있는 메모리 블록을 읽을 수 없기 때문이다.\n이를 위해 vLLM은 순전파(Forward)와 역전파(Backward) 연산을 위한 CUDA 커널을 직접 개발하여 PyTorch 시스템에 이식했다.\n1) 순전파(Forward) CUDA 커널\nAttention Score를 계산하는 핵심 함수이다. block_tables라는 '목차'를 받아 흩어져 있는 Key, Value 블록의 물리적 주소를 찾아내어 Attention 연산을 수행한다.\n\n\n\n\n\n\n파일 위치: vllm/csrc/attention/attention_kernels.cu\n\n\nC++\n\n\n\n\n// 순전파(Forward Pass)를 위한 PagedAttention CUDA 커널\n__global__ void paged_attention_v1_kernel(\n  torch::Tensor out,              // 결과 텐서\n  torch::Tensor query,            // Query 텐서\n  torch::Tensor key_cache,        // Key 블록들이 저장된 전체 KV 캐시\n  torch::Tensor value_cache,      // Value 블록들이 저장된 전체 KV 캐시\n  torch::Tensor block_tables,     // ★★★ 흩어진 블록의 주소록 (메모리 링크드 리스트의 '링크')\n  torch::Tensor context_lens,     // 각 시퀀스의 길이\n  ...\n) {\n  // ... GPU 스레드 ID 계산 ...\n\n  // ★★★ 블록 테이블에서 현재 시퀀스에 해당하는 블록 주소 목록을 가져온다\n  const int64_t* block_table = block_tables[prompt_idx].data_ptr<int64_t>();\n\n  // 루프를 돌며 block_table을 참조해 물리적 블록 주소를 계산하고\n  // 해당 주소에서 Key, Value를 로드하여 Attention 연산을 수행한다.\n  // ...\n}\n\n\n\n\n2) PyTorch 연동 및 역전파(Backward) 커널\n이 커스텀 CUDA 커널을 PyTorch의 자동 미분 시스템과 연동시키기 위해 torch.autograd.Function을 상속받아 forward와 backward 메소드를 직접 정의한다. backward 메소드는 편미분을 통한 Gradient 계산을 위해 별도로 제작된 역전파용 CUDA 커널을 호출한다.\n\n\n파일 위치: vllm/model_executor/layers/attention.py\n\n\n\n# PyTorch의 자동 미분 기능에 새로운 함수를 등록하는 부분\nclass PagedAttention(torch.autograd.Function):\n\n    @staticmethod\n    def forward(ctx, ...):\n        # 순전파(Forward)용 CUDA 커널 (ops.paged_attention_v1)을 호출한다\n        ops.paged_attention_v1(...)\n        return output\n\n    @staticmethod\n    def backward(ctx, grad_output: torch.Tensor):\n        # 역전파(Backward)를 위한 별도의 Gradient 계산용 CUDA 커널을 호출한다\n        ops.paged_attention_v2_backward(...)\n        return (d_query, d_key, d_value, ...)이\n\n\n참고로, 파치토치 커널 함수는 다음과 같이 Monkey Patch 기법으로 간단히 커스텀 교체할 수 있다.\n\n\nimport transformers\nfrom transformers.models.llama.modeling_llama import LlamaAttention\noriginal_forward = LlamaAttention.forward\nLlamaAttention.forward = custom_paged_attention_forward\n\n\n\n단, 이렇게 블럭에 서브 시퀀스를 저장하면, QKV 내적 계산시 토큰의 위치별로 희소행렬 방식으로 계산해야 한다. vLLM은 고정된 블록 크기라는 규칙을 이용해 모든 토큰의 절대 위치를 즉시 계산한다. 특정 토큰의 순서를 고정된 블록 크기로 나누면 그 몫은 해당 토큰이 위치한 논리적 블록의 순서가 되고, 나머지는 그 블록 내에서의 상대적 위치가 된다. 시스템은 이 논리적 블록 순서를 블록 테이블에 대입하여 실제 물리 메모리 주소를 찾는다. 이를 통해 희소행렬처럼 표현된 시퀀스의 토큰들을 서로 계산되어야 할 위치의 토큰 임베딩벡터 끼리 내적계산한다.\nvLLM은 1) PagedAttention이라는 효율적인 메모리 관리 기법을 고안하고, 2) 이 기법 위에서 동작하는 순전파 및 역전파 CUDA 커널 세트를 직접 개발하여, 3) 이를 PyTorch 시스템에 완벽하게 통합함으로써 하나의 고성능 추론 시스템을 완성한 것이다.\nvLLM 설치\n\nvLLM은 리눅스 환경을 정식으로 지원하며, 파이썬 3.8 이상과 CUDA 11.8 이상을 지원하는 NVIDIA GPU가 필요하다. 윈도우 사용자의 경우 WSL2(Windows Subsystem for Linux 2)를 통해 리눅스 환경을 구축한 후 설치해야 한다.\n\n설치는 파이썬 패키지 관리자인 pip를 통해 간단하게 진행할 수 있다. 가상 환경을 먼저 구성하고 그 내부에 설치하는 것이 권장된다.\n\n가상 환경 생성 및 활성화\n\nBash\n\n\n\n\npython -m venv vllm-env\nsource vllm-env/bin/activate\n\n\n\n\n\nvLLM 설치\nPyTorch가 자동으로 함께 설치되며, 시스템에 맞는 CUDA 버전과 호환되는 버전을 설치하는 것이 중요하다.\n\nBash\n\n\n\n\npip install vllm \n\n\n\n\nvLLM의 사용법은 크게 두 가지로 나뉜다. 첫째는 파이썬 코드 내에서 라이브러리로 직접 사용하는 오프라인 추론 방식이고, 둘째는 모델을 API 서버로 실행해두고 HTTP 요청으로 사용하는 온라인 서빙 방식이다.\n\n파이썬 코드 예시 \n\n다음은 파이썬 스크립트에서 직접 모델을 불러와 텍스트를 생성하는 예시이다. LLM 클래스로 모델을 로드하고 SamplingParams로 온도(temperature), top-p 등 생성 옵션을 조절한다.\nPython\n\n\n\n\nfrom vllm import LLM, SamplingParams\n\n# 허깅페이스에서 모델 이름을 지정하여 LLM 객체 생성\n# tensor_parallel_size는 사용할 GPU의 수를 의미한다\nllm = LLM(model=\"meta-llama/Meta-Llama-3-8B-Instruct\", tensor_parallel_size=1)\n\n# 생성할 텍스트의 프롬프트 목록\nprompts = [\n    \"대한민국의 수도는 어디인가?\",\n    \"인공지능의 미래에 대해 한 문장으로 요약하면\",\n]\n\n# 샘플링 파라미터 설정\nsampling_params = SamplingParams(temperature=0.7, top_p=0.95, max_tokens=100)\n\n# 텍스트 생성 실행\noutputs = llm.generate(prompts, sampling_params)\n\n# 결과 출력\nfor output in outputs:\n    prompt = output.prompt\n    generated_text = output.outputs[0].text\n    print(f\"프롬프트: {prompt}\")\n    print(f\"생성된 텍스트: {generated_text}\")\n    print(\"---\") \n\n\n\n\nOllama와 연계 (API 서버 활용)\nOllama는 모델을 로컬 환경에서 쉽게 실행하고 관리하게 해주는 도구이다. vLLM과 Ollama는 경쟁 관계이면서 상호 보완적으로 이해할 수 있다. 두 도구 모두 모델을 API 서버로 실행하는 기능을 제공하기 때문이다.\nvLLM은 OpenAI의 API와 호환되는 서버를 매우 쉽게 실행할 수 있다. 터미널에서 아래와 같은 명령어를 실행하면 meta-llama/Meta-Llama-3-8B-Instruct 모델이 로드되어 8000번 포트로 API 서비스가 시작된다.\n\nBash\n\n\n\n\npython -m vllm.entrypoints.openai.api_server \\\n    --model \"meta-llama/Meta-Llama-3-8B-Instruct\"\n\n이렇게 실행된 vLLM 서버는 Ollama가 제공하는 API 엔드포인트와 동일한 방식으로 HTTP 요청을 통해 사용할 수 있다. 즉, Ollama를 사용하던 코드에서 API 주소만 vLLM 서버 주소(http://localhost:8000/v1)로 변경하면 vLLM의 높은 처리 성능을 그대로 활용할 수 있게 되는 것이다. 이는 vLLM을 기존 LLM 기반 애플리케이션의 백엔드 추론 엔진으로 손쉽게 교체할 수 있음을 의미한다.\n\n간략한 챗봇 코드 예시\nvLLM을 활용하여 터미널에서 간단하게 대화할 수 있는 챗봇 코드는 다음과 같다. 대화 기록을 누적하여 다음 답변 생성에 활용하는 방식이다.\n\nPython\n\n\n\n\nfrom vllm import LLM, SamplingParams\n\n# 채팅 형식에 최적화된 모델을 선택하는 것이 좋다\nllm = LLM(model=\"meta-llama/Meta-Llama-3-8B-Instruct\")\nsampling_params = SamplingParams(temperature=0.7, top_p=0.9, max_tokens=1024)\n\nconversation_history = []\n\nprint(\"간단한 챗봇입니다. 대화를 시작하세요. (종료하려면 '종료' 입력)\")\n\nwhile True:\n    user_input = input(\"나: \")\n    if user_input == \"종료\":\n        print(\"챗봇을 종료합니다.\")\n        break\n    \n    # 대화 기록에 사용자 입력을 추가한다\n    conversation_history.append({\"role\": \"user\", \"content\": user_input})\n    \n    # 모델에 맞는 채팅 템플릿을 사용하여 프롬프트를 생성한다\n    # 허깅페이스의 `apply_chat_template` 기능을 활용할 수 있다\n    from transformers import AutoTokenizer\n    tokenizer = AutoTokenizer.from_pretrained(\"meta-llama/Meta-Llama-3-8B-Instruct\")\n    \n    # 대화 기록을 프롬프트 문자열로 변환한다\n    prompt_text = tokenizer.apply_chat_template(\n        conversation_history, \n        tokenize=False, \n        add_generation_prompt=True\n    )\n\n    # vLLM으로 답변 생성\n    outputs = llm.generate([prompt_text], sampling_params)\n    \n    bot_response = outputs[0].outputs[0].text\n    print(f\"챗봇: {bot_response}\")\n\n    # 대화 기록에 챗봇 답변을 추가한다\n    conversation_history.append({\"role\": \"assistant\", \"content\": bot_response})\n\n\n\n마무리\nvLLM은 PagedAttention 기술을 통해 대규모 언어 모델 서빙의 효율성을 극대화한 핵심적인 도구이다. 메모리 관리의 혁신을 통해 이전에는 불가능했던 수준의 처리량을 달성했으며, 이는 더 많은 사용자가 더 빠르고 저렴하게 LLM 기술을 활용할 수 있는 길을 만들었다. 설치와 사용법 또한 간편하여 개발자들이 자신의 서비스에 강력한 LLM 추론 엔진을 쉽게 통합할 수 있도록 지원한다.",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-1657710831154218739",
        "isoDate": "2025-09-27T01:58:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": [
      {
        "creator": "권용진",
        "title": "스테이블 코인의 여정",
        "link": "https://brunch.co.kr/@@H9i/86",
        "pubDate": "Wed, 24 Sep 2025 14:06:02 GMT",
        "author": "권용진",
        "content": "80년대 금융 시장에 '파생상품'이라는 것이 처음 등장했을 때, 세상은 열광했다. 수학과 통계 모델을 기반으로 미래의 리스크를 예측하고 거래하는, 그야말로 '완벽한 금융 공학'의 탄생처럼 보였다. 수많은 천재들이 이 새로운 시장에 뛰어들었고, 복잡한 수식으로 무장한 상품들이 쏟아져 나왔다. 나 또한 숫자로 세상을 분석하는 퀀트로서, 그 지적인 아름다움에 매",
        "contentSnippet": "80년대 금융 시장에 '파생상품'이라는 것이 처음 등장했을 때, 세상은 열광했다. 수학과 통계 모델을 기반으로 미래의 리스크를 예측하고 거래하는, 그야말로 '완벽한 금융 공학'의 탄생처럼 보였다. 수많은 천재들이 이 새로운 시장에 뛰어들었고, 복잡한 수식으로 무장한 상품들이 쏟아져 나왔다. 나 또한 숫자로 세상을 분석하는 퀀트로서, 그 지적인 아름다움에 매",
        "guid": "https://brunch.co.kr/@@H9i/86",
        "isoDate": "2025-09-24T14:06:02.000Z"
      }
    ]
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": [
      {
        "creator": "고명환",
        "title": "개발자 없이도 가능해진 1인 창업 시대&nbsp; - AI대중화가 바꾼 스타트업 생존 전략",
        "link": "https://brunch.co.kr/@@LOc/312",
        "pubDate": "Tue, 23 Sep 2025 03:00:10 GMT",
        "author": "고명환",
        "content": "AI(인공지능)프로그램의 대중화는 단순한 기술 트렌드를 넘어, 창업 환경 전반을 재구성하고 있습니다. 과거엔 아이디어, 자본, 인력, 개발, 역량 등이 창업 성공의 기본조건이었다면, 이제는 개발자 없이도, 소수 인원으로도 시장 진입이 가능해지는 시대가 왔습니다. 본 포스팅에서는 AI대중화가 어떻게 창업 환경을 변화시키고 있는지, 1인 창엊자 혹은 최소 인력<img src= \"https://img1.daumcdn.net/thumb/R1280x0.fjpg/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2FLOc%2Fimage%2Fu17SS-fUgOsTljnxfOqINVbu8Gw\" width=\"500\" />",
        "contentSnippet": "AI(인공지능)프로그램의 대중화는 단순한 기술 트렌드를 넘어, 창업 환경 전반을 재구성하고 있습니다. 과거엔 아이디어, 자본, 인력, 개발, 역량 등이 창업 성공의 기본조건이었다면, 이제는 개발자 없이도, 소수 인원으로도 시장 진입이 가능해지는 시대가 왔습니다. 본 포스팅에서는 AI대중화가 어떻게 창업 환경을 변화시키고 있는지, 1인 창엊자 혹은 최소 인력",
        "guid": "https://brunch.co.kr/@@LOc/312",
        "isoDate": "2025-09-23T03:00:10.000Z"
      }
    ]
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "개발 시간 반으로 줄이는 UI 컴포넌트 전략: '이거 뭔지' 모르는 답답함 해소",
        "link": "http://muzbox.tistory.com/483661",
        "pubDate": "Sun, 28 Sep 2025 00:25:28 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483661#entry483661comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #212121;\">\n<div style=\"background-color: #e8f5e9; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\">개발 과정에서 &lsquo;이 버튼은 어떻게 만들지?&rsquo; &lsquo;이 상황엔 어떤 요소를 써야 할까?&rsquo; 같은 UI 컴포넌트 고민, 다들 한 번쯤 해보셨죠? 이 글은 초보 개발자도 헤매지 않고 핵심 UI 컴포넌트들을 정확히 이해하고 활용해서 개발 시간을 절반으로 줄일 수 있는 실질적인 전략을 제시합니다. 막막했던 UI 개발에 자신감을 불어넣어 드릴 거예요.</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #2e7d32, #005005); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  UI 컴포넌트, 대체 뭘까요? 왜 이렇게 중요할까요?</b></h2>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1200\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/bwXns2/btsQUgi76kY/ZSOgpQfKZgpFKHYiZSnwOk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bwXns2/btsQUgi76kY/ZSOgpQfKZgpFKHYiZSnwOk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bwXns2/btsQUgi76kY/ZSOgpQfKZgpFKHYiZSnwOk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbwXns2%2FbtsQUgi76kY%2FZSOgpQfKZgpFKHYiZSnwOk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"모듈형 UI 컴포넌트로 둘러싸여 효율적으로 개발하는 미래지향적 개발자\" loading=\"lazy\" width=\"600\" height=\"600\" data-filename=\"download.jpg\" data-origin-width=\"1200\" data-origin-height=\"1200\"/></span></figure>\n\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><br />처음 코딩을 시작했을 때, 기능 구현은 어떻게든 되겠는데 화면에 보이는 요소들, 예를 들어 체크박스나 드롭다운 같은 것들이 너무 헷갈렸던 기억이 나요. 이름조차 생소해서 이걸 어떻게 불러야 할지, 언제 써야 할지 막막했던 적, 저만 그런 건 아니겠죠?</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>UI 컴포넌트</b>란 쉽게 말해 웹이나 모바일 앱 같은 사용자 인터페이스(UI)를 구성하는 데 쓰이는 <b>재사용 가능한 최소 단위</b>를 말합니다. 마치 레고 블록처럼 버튼, 입력 필드, 체크박스, 카드 등 다양한 디자인과 기능을 가진 부품들이 모여서 하나의 페이지를 이루고, 이를 통해 사용자는 시스템과 상호작용하며 필요한 정보를 얻게 되는 거죠. 하나하나 직접 조립하는 게 아니라 만들어진 블록을 가져다 쓰는 개념이에요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">그럼 왜 이 UI 컴포넌트들이 그렇게 중요할까요? 제 생각엔 크게 두 가지 이유가 있어요. 첫째, <b>재사용성이 뛰어나다는 점</b>이에요. 한 번 제대로 만들어둔 버튼은 웹사이트의 어느 페이지에서든, 아니면 다른 프로젝트에서조차 똑같이 가져다 쓸 수 있죠. 개발 시간을 확 줄여주는 마법 같은 일이 벌어집니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">둘째는 <b>일관성을 유지하기 쉽다는 것</b>이에요. 모든 페이지의 버튼이 같은 모양, 같은 색, 같은 동작을 한다고 상상해보세요. 사용자는 훨씬 더 직관적으로 앱을 이해하고 편안하게 사용할 수 있게 됩니다. 우리가 2025년에 흔히 쓰는 잘 만든 앱들을 보면, 이런 일관성이 정말 중요한 역할을 하고 있잖아요? 예를 들어, 다음 글에서 함께 만들 할 일 관리 앱에서도 '할 일 추가 버튼', '완료 체크박스', '삭제 버튼' 등이 모두 통일된 스타일을 가져야 사용하기 편할 거예요.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/ndmQq/btsQTm5bPxc/gHXUGyobLBTlCsTLUkisS0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ndmQq/btsQTm5bPxc/gHXUGyobLBTlCsTLUkisS0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ndmQq/btsQTm5bPxc/gHXUGyobLBTlCsTLUkisS0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FndmQq%2FbtsQTm5bPxc%2FgHXUGyobLBTlCsTLUkisS0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"레고 블록처럼 조립되는 다양한 UI 컴포넌트들의 추상적인 디지털 일러스트레이션\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #2e7d32, #005005); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  핵심 UI 컴포넌트, 헷갈리지 말고 제대로 알아봅시다!</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이제 가장 많이 쓰이고, 또 가장 헷갈리기 쉬운 핵심 UI 컴포넌트들을 하나씩 살펴보면서 정확한 이름과 용도를 익혀볼 거예요. 더 이상 '저기 있는 그거!'라고 하지 말고, 정확한 명칭으로 소통하면서 개발 효율을 높여봐요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 20px; text-align: center;\" data-ke-size=\"size18\"><span style=\"color: #ee2323;\">UI 컴포넌트를 미리 체험할 수 있는 'UI 컴포넌트 쇼케이스'를 활용하시면 <br />컴포넌트 이해에 도움이 될 거예요. </span></p>\n<p style=\"margin-bottom: 20px; text-align: center;\" data-ke-size=\"size18\"><span style=\"color: #ee2323;\">아래 링크를 참고하세요.</span></p>\n<center>\n<figure id=\"og_1758986474973\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"로그인 - Google 계정\" data-og-description=\"이메일 또는 휴대전화\" data-og-host=\"accounts.google.com\" data-og-source-url=\"https://ai.studio/apps/drive/1XjVLO_SoZpGtKIjn0GclKNzZZkRrzxgD\" data-og-url=\"https://accounts.google.com/v3/signin/identifier?continue=https%3A%2F%2Faistudio.google.com%2Fapps%2Fdrive%2F1XjVLO_SoZpGtKIjn0GclKNzZZkRrzxgD&amp;dsh=S-231694462%3A1758986461326050&amp;followup=https%3A%2F%2Faistudio.google.com%2Fapps%2Fdrive%2F1XjVLO_SoZpGtKIjn0GclKNzZZkRrzxgD&amp;ifkv=AfYwgwUr12NjbgIdhMEB1o-m6X4U_T-e29Gw-_kjNSPT2EUWZZrXpRpQkk7wZnWZBapFLdrL6tJH5w&amp;passive=1209600&amp;flowName=WebLiteSignIn&amp;flowEntry=ServiceLogin\" data-og-image=\"\"><a href=\"https://ai.studio/apps/drive/1XjVLO_SoZpGtKIjn0GclKNzZZkRrzxgD\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://ai.studio/apps/drive/1XjVLO_SoZpGtKIjn0GclKNzZZkRrzxgD\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">로그인 - Google 계정</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">이메일 또는 휴대전화</p>\n<p class=\"og-host\" data-ke-size=\"size16\">accounts.google.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"font-size: 20px; color: #2e7d32; margin: 25px 0 12px; font-weight: 600;\" data-ke-size=\"size23\">1. 사용자 행동 유도: 버튼과 입력 필드</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">사용자의 액션을 유도하거나 정보를 받는 가장 기본적인 요소들이죠.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>버튼 (Button)</b>: 사용자가 클릭해서 특정 행동을 취할 때 사용하는 가장 기본적인 컴포넌트예요. 기본(파란색 계열), 보조(회색 계열), 외곽선, 그리고 위험(빨간색 계열) 등 다양한 스타일이 있고, 상황에 따라 비활성화(disabled)할 수도 있습니다. 클릭할 때마다 버튼에 할당된 명령을 수행하는, 정말 없어서는 안 될 핵심 요소라고 할 수 있어요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>입력 필드 (Input Field)</b>: 사용자로부터 정보를 입력받을 때 사용하는 컴포넌트예요. 일반 상태, 정보를 입력할 수 없는 비활성화 상태, 그리고 잘못된 정보가 입력되었을 때 나타나는 오류 상태가 있습니다. 예를 들어, 구독 양식에서 이메일 주소를 입력할 때 유효성 검사를 통해 \"이메일은 필수 항목입니다\" 또는 \"유효한 이메일 주소를 입력해주세요\" 같은 오류 메시지를 띄워 사용자에게 올바른 정보 입력을 유도하는 경우가 많죠. 올바르게 입력되면 \"구독해주셔서 감사합니다!\" 같은 성공 메시지가 나타나기도 하고요.</p>\n<h3 style=\"font-size: 20px; color: #2e7d32; margin: 25px 0 12px; font-weight: 600;\" data-ke-size=\"size23\">2. 정보 탐색과 분류: 탭과 선택 컴포넌트</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">많은 정보를 효율적으로 보여주고, 사용자가 원하는 것을 선택하게 돕는 중요한 컴포넌트들이에요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>탭 (Tab)</b>: 관련된 정보를 여러 섹션으로 나누어 사용자가 원하는 내용만 골라볼 수 있게 해주는 컴포넌트예요. 제품 상세 페이지에서 '설명', '사양', '리뷰' 탭을 클릭할 때마다 해당 내용만 깔끔하게 정리되어 나타나는 것을 떠올려보세요. 복잡한 정보를 효과적으로 보여주는 데 정말 유용하죠.</p>\n<h4 style=\"font-size: 18px; color: #005005; margin: 20px 0 10px;\" data-ke-size=\"size20\">사용자 선택을 받아내는 네 가지 핵심 컴포넌트</h4>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이제 사용자에게 옵션을 제시하고 선택을 받는 네 가지 중요한 컴포넌트를 알아볼게요. 각각의 용도가 명확해서 정확히 이해하고 사용하는 게 중요해요.</p>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px;\"><b>드롭다운 (Dropdown)</b>: 선택지가 많을 때 화면을 깔끔하게 유지하면서도 많은 옵션을 제공할 수 있는 컴포넌트예요. 클릭하면 옵션 목록이 펼쳐지고, 그중 하나를 선택할 수 있습니다. 국가 선택이나 연도 선택처럼 수십 개의 옵션이 있을 때 정말 유용하죠.</li>\n<li style=\"margin-bottom: 10px;\"><b>라디오 버튼 (Radio Button)</b>: 여러 옵션 중 반드시 단 하나만 선택해야 할 때 사용해요. 모든 옵션이 화면에 명확히 보이며, 하나를 선택하면 이전에 선택했던 것은 자동으로 해제됩니다. 성별 선택이나 결제 방법 선택 같은 상황에 딱 맞습니다.</li>\n<li style=\"margin-bottom: 10px;\"><b>체크박스 (Checkbox)</b>: 여러 항목을 동시에 선택하거나, 어떤 항목에 대한 동의 여부를 표시할 때 사용합니다. 각각의 체크박스는 독립적으로 체크하거나 해제할 수 있어요. 약관 동의나 관심사 선택처럼 복수 선택이 필요한 경우에 주로 쓰입니다.</li>\n<li style=\"margin-bottom: 10px;\"><b>토글 (Toggle)</b>: 켜짐/꺼짐 두 가지 상태를 직관적으로 표시하는 컴포넌트예요. 스위치를 좌우로 움직이는 애니메이션 덕분에 상태 변화가 명확하죠. 알림 설정이나 다크 모드 전환 같은 기능에 많이 사용됩니다.</li>\n</ul>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">사용자 설정 페이지를 예로 들면, 언어는 드롭다운으로 여러 언어 중 선택하고, 테마는 라디오 버튼으로 라이트/다크 모드 중 하나만 선택하며, 알림은 토글 스위치로 켜고 끄고, 마케팅 동의는 체크박스로 체크하는 식으로 각각의 컴포넌트가 용도에 맞게 명확하게 구분되어 사용되는 걸 볼 수 있어요. 이렇게 각 컴포넌트의 특성을 이해하면 적재적소에 배치해서 사용자 경험을 크게 향상시킬 수 있습니다.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/MYmuR/btsQRx1fmmV/OHp3nZpqYLMLrYdc94Ip20/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/MYmuR/btsQRx1fmmV/OHp3nZpqYLMLrYdc94Ip20/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/MYmuR/btsQRx1fmmV/OHp3nZpqYLMLrYdc94Ip20/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FMYmuR%2FbtsQRx1fmmV%2FOHp3nZpqYLMLrYdc94Ip20%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"언어 드롭다운, 테마 라디오 버튼, 알림 토글, 마케팅 동의 체크박스가 포함된 사용자 설정 페이지 UI\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<h3 style=\"font-size: 20px; color: #2e7d32; margin: 25px 0 12px; font-weight: 600;\" data-ke-size=\"size23\">3. 값 조절과 피드백: 슬라이더와 알림</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">사용자가 값을 부드럽게 조절하거나, 시스템의 상태를 인지하게 하는 중요한 컴포넌트들이에요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>슬라이더 (Slider)</b>: 정해진 범위 안에서 값을 부드럽게 조절할 때 사용해요. 볼륨 조절, 밝기 조절, 가격 범위 설정 같은 곳에서 많이 쓰이죠. 미디어 플레이어에서 재생 진행률을 조절하는 슬라이더를 보면, 드래그하면서 실시간으로 재생 시간이 바뀌는 걸 볼 수 있습니다. 숫자로 직접 입력하는 것보다 훨씬 직관적이고 편리해요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>알림 (Notification)</b>: 사용자에게 현재 상황이나 피드백을 전달할 때 사용해요. 정보 알림은 파란색, 성공 알림은 초록색, 경고 알림은 노란색, 오류 알림은 빨간색으로 표시해서 색상만으로도 상황을 직감할 수 있게 하는 경우가 많습니다. 파일 업로드 시뮬레이터를 생각해보면, 성공 시 초록색 \"성공적으로 업로드되었습니다!\", 경고 시 노란색 \"파일 크기가 초과합니다\", 실패 시 빨간색 \"지원하지 않는 파일 형식입니다\"와 같은 메시지가 잠시 후 사라지는 식으로 나타나죠. 정말 편리하고 사용자 친화적인 요소입니다.</p>\n<h3 style=\"font-size: 20px; color: #2e7d32; margin: 25px 0 12px; font-weight: 600;\" data-ke-size=\"size23\">4. 진행 상황과 보조 정보: 로더와 툴팁</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">사용자가 기다려야 할 때 지루함을 덜어주고, 필요한 정보를 숨김없이 제공하는 컴포넌트들이에요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>로더 (Loader)</b>: 사용자를 기다리게 할 때, '지금 뭔가 작업 중'이라는 것을 시각적으로 보여줘서 답답함을 줄여주는 컴포넌트예요. 빙글빙글 도는 아이콘인 <b>스피너 (Spinner)</b>와 진행률을 막대로 보여주는 <b>프로그레스 바 (ProgressBar)</b>가 대표적이죠. 데이터 로딩 시뮬레이터에서 '데이터 가져오기' 버튼을 누르면 스피너와 함께 \"서버에서 데이터를 가져오는 중\" 메시지가 뜨고, 진행률 바가 서서히 채워지다가 완료되면 프로필 카드가 나타나는 흐름을 떠올려보세요. 사용자에게 신뢰를 주는 아주 중요한 요소입니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>툴팁 (Tooltip)</b>: 마우스를 올렸을 때 추가 정보를 보여주는 작은 말풍선이에요. 화면을 복잡하게 만들지 않으면서도 필요한 정보를 즉각적으로 제공할 수 있다는 장점이 있습니다. 에디터 툴바의 저장 아이콘에 마우스를 올리면 \"문서 저장\" 툴팁이 나타나는 것처럼 말이죠. 아이콘만으로는 기능을 알기 어려울 때 정말 유용하며, 보통 간결하게 한 줄로 작성하는 것이 좋습니다.</p>\n<h3 style=\"font-size: 20px; color: #2e7d32; margin: 25px 0 12px; font-weight: 600;\" data-ke-size=\"size23\">5. 집중과 확장: 모달, 팝업, 팝오버</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">사용자의 주의를 집중시키거나, 특정 요소에 대한 상세 정보를 제공할 때 쓰는 컴포넌트들이에요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>모달 (Modal)</b>: 현재 페이지 위에 레이어처럼 떠오르는 창이에요. 주로 중요한 확인이나 정보 입력 등 사용자의 즉각적인 반응을 필요로 할 때 사용합니다. 계정 삭제 버튼을 클릭했을 때 화면 중앙에 모달 창이 뜨고 배경이 어두워지면서, 모달이 닫히기 전까지는 뒤 배경과 상호작용할 수 없게 되는 경우가 대표적이죠.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>팝업 (Popup)</b>: 모달과 달리 완전히 새로운 브라우저 창으로 열리는 방식이에요. 하지만 요즘은 대부분의 브라우저에서 팝업을 차단하기 때문에 잘 사용되지 않습니다. 중요한 확인이 필요할 때는 모달을 쓰는 것이 일반적이에요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>팝오버 (Popover)</b>: 특정 요소를 클릭했을 때 그 근처에 나타나는 작은 정보창이에요. 모달보다는 가볍고, 툴팁보다는 많은 내용을 담을 수 있습니다. 사용자 아바타를 클릭하면 바로 아래에 프로필 미리보기 팝오버가 나타나고, 팝오버 바깥을 클릭하면 자동으로 사라지는 식이죠. 전체 화면을 가리지 않으면서 필요한 정보를 바로 볼 수 있어서 간단한 메뉴나 정보 표시에 아주 유용해요.</p>\n<h3 style=\"font-size: 20px; color: #2e7d32; margin: 25px 0 12px; font-weight: 600;\" data-ke-size=\"size23\">6. 시각적 소통: 아이콘</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">텍스트 없이도 의미를 전달하는 강력한 시각적 요소입니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>아이콘 (Icon)</b>: 텍스트 없이도 의미를 전달하는 시각적 요소로, 일관된 스타일로 사용하는 것이 정말 중요해요. 예를 들어, 정보 아이콘은 파란색 동그라미에 'i'자, 성공 아이콘은 초록색 체크 마크, 경고 아이콘은 노란색 삼각형에 느낌표, 오류 아이콘은 빨간색 엑스표 등 색상과 모양만으로도 의미를 즉시 파악할 수 있도록 디자인됩니다. 버튼 안에 아이콘을 넣을 때는 텍스트와의 간격을 잘 맞추면 훨씬 보기 좋아요.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #2e7d32, #005005); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>✨ 실전 활용: UI 컴포넌트로 나만의 계산기 앱 만들기</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이제 이론적으로 배운 컴포넌트들을 실제로 어떻게 활용하는지, 간단한 계산기 앱을 만들면서 보여드릴게요. 요즘 핫한 노코드/로우코드 앱 빌더를 활용하면, 채팅창에 원하는 컴포넌트 목록과 기능을 설명하는 것만으로도 앱이 뚝딱 만들어진답니다.</p>\n<p style=\"margin-bottom: 20px; text-align: center;\" data-ke-size=\"size18\"><br /><span style=\"color: #ee2323;\"><b>다양한 컴포넌트를 활용하여 만든 다기능 계산기는 아래 링크를 참고하세요.</b></span></p>\n<center>\n<figure id=\"og_1758986637377\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"로그인 - Google 계정\" data-og-description=\"이메일 또는 휴대전화\" data-og-host=\"accounts.google.com\" data-og-source-url=\"https://ai.studio/apps/drive/1_PSVBkgEncuVibxKoluXaKr5ryFAGAk-\" data-og-url=\"https://accounts.google.com/v3/signin/identifier?continue=https%3A%2F%2Faistudio.google.com%2Fapps%2Fdrive%2F1_PSVBkgEncuVibxKoluXaKr5ryFAGAk-&amp;dsh=S-231694462%3A1758986623699132&amp;followup=https%3A%2F%2Faistudio.google.com%2Fapps%2Fdrive%2F1_PSVBkgEncuVibxKoluXaKr5ryFAGAk-&amp;ifkv=AfYwgwXrD2Y9Bh0ncapdzHUAdRYYpPpWfyocWctF0YPnIg_U5jS-UEDbAyLoqb7saNTxD9NHzLNeNw&amp;passive=1209600&amp;flowName=WebLiteSignIn&amp;flowEntry=ServiceLogin\" data-og-image=\"\"><a href=\"https://ai.studio/apps/drive/1_PSVBkgEncuVibxKoluXaKr5ryFAGAk-\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://ai.studio/apps/drive/1_PSVBkgEncuVibxKoluXaKr5ryFAGAk-\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">로그인 - Google 계정</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">이메일 또는 휴대전화</p>\n<p class=\"og-host\" data-ke-size=\"size16\">accounts.google.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">예를 들어, 채팅창에 '일반/공학/단위변환 기능이 포함된 계산기를 만들어 줘. 다음 컴포넌트들을 모두 사용해'라고 입력하고, 앞서 설명한 버튼, 탭, 토글, 체크박스, 슬라이더, 라디오 버튼, 드롭다운, 로더, 팝오버 등의 목록을 제공하는 거죠. 그러면 AI가 이 모든 요구사항을 반영해서 멋진 계산기 앱을 만들어줍니다.</p>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px;\"><b>메인 화면</b>: 버튼과 탭이 기본으로 구성됩니다. 설정 아이콘을 클릭하면 모달 창이 뜨는데, 여기에는 토글 스위치, 체크박스, 슬라이더 등 다양한 컴포넌트가 보이죠.</li>\n<li style=\"margin-bottom: 10px;\"><b>공학용 탭</b>: 각도 단위 선택을 위한 라디오 버튼, 계산 과정 보기를 위한 로더(AI가 결과 출력 전까지) 등이 배치됩니다.</li>\n<li style=\"margin-bottom: 10px;\"><b>단위 변환 탭</b>: 변환 종류 및 from/to 단위를 선택할 때 드롭다운이 사용되고, 변환할 값은 입력창을 통해 받게 되어 있어요.</li>\n</ul>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이처럼 앱 빌더를 활용하면 우리가 배운 대부분의 컴포넌트를 사용한 앱을 순식간에 완성할 수 있습니다. 놀랍지 않나요? 솔직히 전 처음 보고 좀 놀랐어요.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/O4vsr/btsQQZqaqGd/I5BCI3KzDnqcIpga1VjQo1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/O4vsr/btsQQZqaqGd/I5BCI3KzDnqcIpga1VjQo1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/O4vsr/btsQQZqaqGd/I5BCI3KzDnqcIpga1VjQo1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FO4vsr%2FbtsQQZqaqGd%2FI5BCI3KzDnqcIpga1VjQo1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"일반, 공학, 단위 변환 탭과 다양한 UI 컴포넌트가 적용된 계산기 앱 인터페이스\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<div style=\"background-color: #e8f5e9; border-left: 4px solid #2e7d32; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">  <b>문제 해결도 컴포넌트 이름을 정확히 알면 훨씬 쉬워져요!</b><br />가령, 계산기록 팝오버 창이 잘리는 문제를 발견했을 때, 채팅창에 '계산기록 팝오버 창이 잘리는 문제를 해결해'라고 요청하면 바로 수정됩니다. 또, 라이트 모드에서 단위 변환 탭의 드롭다운 목록 글자색이 배경과 비슷해서 잘 안 보인다면, '라이트 모드에서 단위 변환 탭의 드롭다운 목록 글자색을 흰색으로 변경해'라고 정확히 요청할 수 있죠. 컴포넌트 이름을 모른다면 '저기, 그거 검은색으로 바꿔줘'라고 말하며 답답해했을 거예요. 명칭을 아는 것이 이렇게 중요합니다.</div>\n<div style=\"background-color: #f1f8e9; border: 1px solid #a5d6a7; border-radius: 8px; padding: 25px; margin: 40px 0; box-shadow: 0 4px 12px rgba(0,0,0,0.1);\">\n<div style=\"border-bottom: 1px solid #2e7d32; padding-bottom: 15px; margin-bottom: 20px;\">\n<h3 style=\"font-size: 26px; color: #2e7d32; margin: 0; font-weight: bold;\" data-ke-size=\"size23\">  핵심 요약</h3>\n</div>\n<ul style=\"list-style: none; padding: 0; margin: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 15px; font-size: 17px;\">✅ <b>UI 컴포넌트는 재사용성과 일관성</b>을 통해 개발 효율을 극대화합니다.</li>\n<li style=\"margin-bottom: 15px; font-size: 17px;\">✅ <b>버튼, 입력 필드, 탭, 드롭다운, 라디오 버튼, 체크박스, 토글</b>은 사용자 상호작용의 기본입니다.</li>\n<li style=\"margin-bottom: 15px; font-size: 17px;\">✅ <b>슬라이더, 알림, 로더, 툴팁, 모달, 팝오버, 아이콘</b>은 사용자 경험을 풍부하게 만드는 핵심 요소입니다.</li>\n<li style=\"margin-bottom: 0; font-size: 17px;\">✅ 컴포넌트의 <b>정확한 명칭과 용도 이해</b>는 문제 해결 능력을 높이고 개발 속도를 가속화합니다.</li>\n</ul>\n<div style=\"margin-top: 25px; font-size: 14px; color: #aed581;\">\n<p style=\"margin: 0; color: #aed581;\" data-ke-size=\"size16\">이 핵심들을 기억하면 UI 개발이 더 이상 어렵지 않을 거예요!</p>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #2e7d32, #005005); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>❓ 자주 묻는 질문 (FAQ)</b></h2>\n<div style=\"margin-bottom: 20px;\">\n<p style=\"margin-bottom: 5px; font-weight: bold;\" data-ke-size=\"size16\">Q1: UI 컴포넌트의 명칭을 정확히 아는 것이 왜 그렇게 중요한가요?</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A1: 컴포넌트의 정확한 명칭을 알면 개발자 간의 소통이 원활해지고, 필요한 기능을 검색하거나 문제 해결을 위해 AI 도구에 요청할 때 더욱 정확하고 빠르게 해결할 수 있습니다. 마치 공구 이름을 모르면 집을 짓기 어려운 것과 같아요.</p>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<p style=\"margin-bottom: 5px; font-weight: bold;\" data-ke-size=\"size16\">Q2: 드롭다운, 라디오 버튼, 체크박스, 토글은 어떤 기준으로 구분해서 사용해야 하나요?</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A2: <b>드롭다운</b>은 선택지가 많을 때 화면 공간을 효율적으로 사용하고, <b>라디오 버튼</b>은 여러 옵션 중 단 하나만 선택할 때, <b>체크박스</b>는 여러 개를 동시에 선택하거나 동의 여부를 표시할 때 사용합니다. <b>토글</b>은 켜짐/꺼짐처럼 두 가지 상태를 직관적으로 전환할 때 적합합니다. 각 컴포넌트의 특성을 이해하고 사용자 경험에 맞춰 선택하는 것이 중요해요.</p>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<p style=\"margin-bottom: 5px; font-weight: bold;\" data-ke-size=\"size16\">Q3: 모달과 팝오버는 어떻게 다른가요?</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A3: <b>모달</b>은 현재 페이지 위에 레이어처럼 떠서 사용자의 주의를 집중시키고, 모달이 닫히기 전까지는 뒤 배경과 상호작용할 수 없습니다. 중요한 확인이나 정보 입력에 주로 사용하죠. 반면 <b>팝오버</b>는 특정 요소를 클릭했을 때 그 근처에 나타나는 작은 정보창으로, 모달보다 가볍고, 팝오버 바깥을 클릭하면 자동으로 사라지는 등 비교적 가벼운 정보 표시에 사용됩니다.</p>\n</div>\n<script type=\"application/ld+json\">\n    {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"FAQPage\",\n      \"mainEntity\": [\n        {\n          \"@type\": \"Question\",\n          \"name\": \"UI 컴포넌트의 명칭을 정확히 아는 것이 왜 그렇게 중요한가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"컴포넌트의 정확한 명칭을 알면 개발자 간의 소통이 원활해지고, 필요한 기능을 검색하거나 문제 해결을 위해 AI 도구에 요청할 때 더욱 정확하고 빠르게 해결할 수 있습니다. 마치 공구 이름을 모르면 집을 짓기 어려운 것과 같아요.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"드롭다운, 라디오 버튼, 체크박스, 토글은 어떤 기준으로 구분해서 사용해야 하나요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"드롭다운은 선택지가 많을 때 화면 공간을 효율적으로 사용하고, 라디오 버튼은 여러 옵션 중 단 하나만 선택할 때, 체크박스는 여러 개를 동시에 선택하거나 동의 여부를 표시할 때 사용합니다. 토글은 켜짐/꺼짐처럼 두 가지 상태를 직관적으로 전환할 때 적합합니다. 각 컴포넌트의 특성을 이해하고 사용자 경험에 맞춰 선택하는 것이 중요해요.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"모달과 팝오버는 어떻게 다른가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"모달은 현재 페이지 위에 레이어처럼 떠서 사용자의 주의를 집중시키고, 모달이 닫히기 전까지는 뒤 배경과 상호작용할 수 없습니다. 중요한 확인이나 정보 입력에 주로 사용하죠. 반면 팝오버는 특정 요소를 클릭했을 때 그 근처에 나타나는 작은 정보창으로, 모달보다 가볍고, 팝오버 바깥을 클릭하면 자동으로 사라지는 등 비교적 가벼운 정보 표시에 사용됩니다.\"\n          }\n        }\n      ]\n    }\n  </script>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #2e7d32, #005005); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  마무리하며: UI 컴포넌트, 개발 속도를 결정하는 핵심!</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">오늘 우리는 버튼부터 아이콘까지 15가지 핵심 UI 컴포넌트들의 정확한 이름과 용도를 배워봤어요. 이제 더 이상 '저기 있는 그거!'가 아니라, '드롭다운 컴포넌트'라고 정확히 말할 수 있게 된 거죠. 이런 작은 변화가 실제 개발 환경에서는 엄청난 효율 차이를 만듭니다. UI 컴포넌트에 대한 깊은 이해는 선택이 아니라 개발자의 필수 역량이라고 감히 말씀드리고 싶어요.</p>\n<div style=\"background-color: #e8f5e9; border-left: 4px solid #2e7d32; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">  <b>직접 경험해보세요!</b><br />이 글에서 설명한 'UI 컴포넌트 쇼케이스'와 '계산기 앱'은 글 설명란 링크에서 직접 체험해보실 수 있도록 준비해둘게요. 눈으로 보는 것과 직접 만져보는 것은 정말 다르답니다. 복습하시면서 각 컴포넌트의 동작 방식과 용도를 몸으로 익히시면, 훨씬 더 확실하게 개념을 잡으실 수 있을 거예요.</div>\n<br />\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=E54Vz7zO20g\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cgemKq/hyZJ3pbzvQ/VBycWeVYzZFHSj3nWx0Kb0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bqVkQE/hyZJZ1mD0U/LasxP62cAtBzx4gZmnKeS1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"컴포넌트를 이해하면 코딩시간이 반으로 줄어듭니다!! | 바이브코딩 6편\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/E54Vz7zO20g\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n</div>",
        "contentSnippet": "개발 과정에서 ‘이 버튼은 어떻게 만들지?’ ‘이 상황엔 어떤 요소를 써야 할까?’ 같은 UI 컴포넌트 고민, 다들 한 번쯤 해보셨죠? 이 글은 초보 개발자도 헤매지 않고 핵심 UI 컴포넌트들을 정확히 이해하고 활용해서 개발 시간을 절반으로 줄일 수 있는 실질적인 전략을 제시합니다. 막막했던 UI 개발에 자신감을 불어넣어 드릴 거예요.\n  UI 컴포넌트, 대체 뭘까요? 왜 이렇게 중요할까요?\n\n\n\n처음 코딩을 시작했을 때, 기능 구현은 어떻게든 되겠는데 화면에 보이는 요소들, 예를 들어 체크박스나 드롭다운 같은 것들이 너무 헷갈렸던 기억이 나요. 이름조차 생소해서 이걸 어떻게 불러야 할지, 언제 써야 할지 막막했던 적, 저만 그런 건 아니겠죠?\nUI 컴포넌트란 쉽게 말해 웹이나 모바일 앱 같은 사용자 인터페이스(UI)를 구성하는 데 쓰이는 재사용 가능한 최소 단위를 말합니다. 마치 레고 블록처럼 버튼, 입력 필드, 체크박스, 카드 등 다양한 디자인과 기능을 가진 부품들이 모여서 하나의 페이지를 이루고, 이를 통해 사용자는 시스템과 상호작용하며 필요한 정보를 얻게 되는 거죠. 하나하나 직접 조립하는 게 아니라 만들어진 블록을 가져다 쓰는 개념이에요.\n그럼 왜 이 UI 컴포넌트들이 그렇게 중요할까요? 제 생각엔 크게 두 가지 이유가 있어요. 첫째, 재사용성이 뛰어나다는 점이에요. 한 번 제대로 만들어둔 버튼은 웹사이트의 어느 페이지에서든, 아니면 다른 프로젝트에서조차 똑같이 가져다 쓸 수 있죠. 개발 시간을 확 줄여주는 마법 같은 일이 벌어집니다.\n둘째는 일관성을 유지하기 쉽다는 것이에요. 모든 페이지의 버튼이 같은 모양, 같은 색, 같은 동작을 한다고 상상해보세요. 사용자는 훨씬 더 직관적으로 앱을 이해하고 편안하게 사용할 수 있게 됩니다. 우리가 2025년에 흔히 쓰는 잘 만든 앱들을 보면, 이런 일관성이 정말 중요한 역할을 하고 있잖아요? 예를 들어, 다음 글에서 함께 만들 할 일 관리 앱에서도 '할 일 추가 버튼', '완료 체크박스', '삭제 버튼' 등이 모두 통일된 스타일을 가져야 사용하기 편할 거예요.\n\n\n  핵심 UI 컴포넌트, 헷갈리지 말고 제대로 알아봅시다!\n이제 가장 많이 쓰이고, 또 가장 헷갈리기 쉬운 핵심 UI 컴포넌트들을 하나씩 살펴보면서 정확한 이름과 용도를 익혀볼 거예요. 더 이상 '저기 있는 그거!'라고 하지 말고, 정확한 명칭으로 소통하면서 개발 효율을 높여봐요.\n \nUI 컴포넌트를 미리 체험할 수 있는 'UI 컴포넌트 쇼케이스'를 활용하시면 \n컴포넌트 이해에 도움이 될 거예요. \n아래 링크를 참고하세요.\n\n \n로그인 - Google 계정\n이메일 또는 휴대전화\naccounts.google.com\n\n\n \n1. 사용자 행동 유도: 버튼과 입력 필드\n사용자의 액션을 유도하거나 정보를 받는 가장 기본적인 요소들이죠.\n버튼 (Button): 사용자가 클릭해서 특정 행동을 취할 때 사용하는 가장 기본적인 컴포넌트예요. 기본(파란색 계열), 보조(회색 계열), 외곽선, 그리고 위험(빨간색 계열) 등 다양한 스타일이 있고, 상황에 따라 비활성화(disabled)할 수도 있습니다. 클릭할 때마다 버튼에 할당된 명령을 수행하는, 정말 없어서는 안 될 핵심 요소라고 할 수 있어요.\n입력 필드 (Input Field): 사용자로부터 정보를 입력받을 때 사용하는 컴포넌트예요. 일반 상태, 정보를 입력할 수 없는 비활성화 상태, 그리고 잘못된 정보가 입력되었을 때 나타나는 오류 상태가 있습니다. 예를 들어, 구독 양식에서 이메일 주소를 입력할 때 유효성 검사를 통해 \"이메일은 필수 항목입니다\" 또는 \"유효한 이메일 주소를 입력해주세요\" 같은 오류 메시지를 띄워 사용자에게 올바른 정보 입력을 유도하는 경우가 많죠. 올바르게 입력되면 \"구독해주셔서 감사합니다!\" 같은 성공 메시지가 나타나기도 하고요.\n2. 정보 탐색과 분류: 탭과 선택 컴포넌트\n많은 정보를 효율적으로 보여주고, 사용자가 원하는 것을 선택하게 돕는 중요한 컴포넌트들이에요.\n탭 (Tab): 관련된 정보를 여러 섹션으로 나누어 사용자가 원하는 내용만 골라볼 수 있게 해주는 컴포넌트예요. 제품 상세 페이지에서 '설명', '사양', '리뷰' 탭을 클릭할 때마다 해당 내용만 깔끔하게 정리되어 나타나는 것을 떠올려보세요. 복잡한 정보를 효과적으로 보여주는 데 정말 유용하죠.\n사용자 선택을 받아내는 네 가지 핵심 컴포넌트\n이제 사용자에게 옵션을 제시하고 선택을 받는 네 가지 중요한 컴포넌트를 알아볼게요. 각각의 용도가 명확해서 정확히 이해하고 사용하는 게 중요해요.\n드롭다운 (Dropdown): 선택지가 많을 때 화면을 깔끔하게 유지하면서도 많은 옵션을 제공할 수 있는 컴포넌트예요. 클릭하면 옵션 목록이 펼쳐지고, 그중 하나를 선택할 수 있습니다. 국가 선택이나 연도 선택처럼 수십 개의 옵션이 있을 때 정말 유용하죠.\n라디오 버튼 (Radio Button): 여러 옵션 중 반드시 단 하나만 선택해야 할 때 사용해요. 모든 옵션이 화면에 명확히 보이며, 하나를 선택하면 이전에 선택했던 것은 자동으로 해제됩니다. 성별 선택이나 결제 방법 선택 같은 상황에 딱 맞습니다.\n체크박스 (Checkbox): 여러 항목을 동시에 선택하거나, 어떤 항목에 대한 동의 여부를 표시할 때 사용합니다. 각각의 체크박스는 독립적으로 체크하거나 해제할 수 있어요. 약관 동의나 관심사 선택처럼 복수 선택이 필요한 경우에 주로 쓰입니다.\n토글 (Toggle): 켜짐/꺼짐 두 가지 상태를 직관적으로 표시하는 컴포넌트예요. 스위치를 좌우로 움직이는 애니메이션 덕분에 상태 변화가 명확하죠. 알림 설정이나 다크 모드 전환 같은 기능에 많이 사용됩니다.\n사용자 설정 페이지를 예로 들면, 언어는 드롭다운으로 여러 언어 중 선택하고, 테마는 라디오 버튼으로 라이트/다크 모드 중 하나만 선택하며, 알림은 토글 스위치로 켜고 끄고, 마케팅 동의는 체크박스로 체크하는 식으로 각각의 컴포넌트가 용도에 맞게 명확하게 구분되어 사용되는 걸 볼 수 있어요. 이렇게 각 컴포넌트의 특성을 이해하면 적재적소에 배치해서 사용자 경험을 크게 향상시킬 수 있습니다.\n\n\n3. 값 조절과 피드백: 슬라이더와 알림\n사용자가 값을 부드럽게 조절하거나, 시스템의 상태를 인지하게 하는 중요한 컴포넌트들이에요.\n슬라이더 (Slider): 정해진 범위 안에서 값을 부드럽게 조절할 때 사용해요. 볼륨 조절, 밝기 조절, 가격 범위 설정 같은 곳에서 많이 쓰이죠. 미디어 플레이어에서 재생 진행률을 조절하는 슬라이더를 보면, 드래그하면서 실시간으로 재생 시간이 바뀌는 걸 볼 수 있습니다. 숫자로 직접 입력하는 것보다 훨씬 직관적이고 편리해요.\n알림 (Notification): 사용자에게 현재 상황이나 피드백을 전달할 때 사용해요. 정보 알림은 파란색, 성공 알림은 초록색, 경고 알림은 노란색, 오류 알림은 빨간색으로 표시해서 색상만으로도 상황을 직감할 수 있게 하는 경우가 많습니다. 파일 업로드 시뮬레이터를 생각해보면, 성공 시 초록색 \"성공적으로 업로드되었습니다!\", 경고 시 노란색 \"파일 크기가 초과합니다\", 실패 시 빨간색 \"지원하지 않는 파일 형식입니다\"와 같은 메시지가 잠시 후 사라지는 식으로 나타나죠. 정말 편리하고 사용자 친화적인 요소입니다.\n4. 진행 상황과 보조 정보: 로더와 툴팁\n사용자가 기다려야 할 때 지루함을 덜어주고, 필요한 정보를 숨김없이 제공하는 컴포넌트들이에요.\n로더 (Loader): 사용자를 기다리게 할 때, '지금 뭔가 작업 중'이라는 것을 시각적으로 보여줘서 답답함을 줄여주는 컴포넌트예요. 빙글빙글 도는 아이콘인 스피너 (Spinner)와 진행률을 막대로 보여주는 프로그레스 바 (ProgressBar)가 대표적이죠. 데이터 로딩 시뮬레이터에서 '데이터 가져오기' 버튼을 누르면 스피너와 함께 \"서버에서 데이터를 가져오는 중\" 메시지가 뜨고, 진행률 바가 서서히 채워지다가 완료되면 프로필 카드가 나타나는 흐름을 떠올려보세요. 사용자에게 신뢰를 주는 아주 중요한 요소입니다.\n툴팁 (Tooltip): 마우스를 올렸을 때 추가 정보를 보여주는 작은 말풍선이에요. 화면을 복잡하게 만들지 않으면서도 필요한 정보를 즉각적으로 제공할 수 있다는 장점이 있습니다. 에디터 툴바의 저장 아이콘에 마우스를 올리면 \"문서 저장\" 툴팁이 나타나는 것처럼 말이죠. 아이콘만으로는 기능을 알기 어려울 때 정말 유용하며, 보통 간결하게 한 줄로 작성하는 것이 좋습니다.\n5. 집중과 확장: 모달, 팝업, 팝오버\n사용자의 주의를 집중시키거나, 특정 요소에 대한 상세 정보를 제공할 때 쓰는 컴포넌트들이에요.\n모달 (Modal): 현재 페이지 위에 레이어처럼 떠오르는 창이에요. 주로 중요한 확인이나 정보 입력 등 사용자의 즉각적인 반응을 필요로 할 때 사용합니다. 계정 삭제 버튼을 클릭했을 때 화면 중앙에 모달 창이 뜨고 배경이 어두워지면서, 모달이 닫히기 전까지는 뒤 배경과 상호작용할 수 없게 되는 경우가 대표적이죠.\n팝업 (Popup): 모달과 달리 완전히 새로운 브라우저 창으로 열리는 방식이에요. 하지만 요즘은 대부분의 브라우저에서 팝업을 차단하기 때문에 잘 사용되지 않습니다. 중요한 확인이 필요할 때는 모달을 쓰는 것이 일반적이에요.\n팝오버 (Popover): 특정 요소를 클릭했을 때 그 근처에 나타나는 작은 정보창이에요. 모달보다는 가볍고, 툴팁보다는 많은 내용을 담을 수 있습니다. 사용자 아바타를 클릭하면 바로 아래에 프로필 미리보기 팝오버가 나타나고, 팝오버 바깥을 클릭하면 자동으로 사라지는 식이죠. 전체 화면을 가리지 않으면서 필요한 정보를 바로 볼 수 있어서 간단한 메뉴나 정보 표시에 아주 유용해요.\n6. 시각적 소통: 아이콘\n텍스트 없이도 의미를 전달하는 강력한 시각적 요소입니다.\n아이콘 (Icon): 텍스트 없이도 의미를 전달하는 시각적 요소로, 일관된 스타일로 사용하는 것이 정말 중요해요. 예를 들어, 정보 아이콘은 파란색 동그라미에 'i'자, 성공 아이콘은 초록색 체크 마크, 경고 아이콘은 노란색 삼각형에 느낌표, 오류 아이콘은 빨간색 엑스표 등 색상과 모양만으로도 의미를 즉시 파악할 수 있도록 디자인됩니다. 버튼 안에 아이콘을 넣을 때는 텍스트와의 간격을 잘 맞추면 훨씬 보기 좋아요.\n✨ 실전 활용: UI 컴포넌트로 나만의 계산기 앱 만들기\n이제 이론적으로 배운 컴포넌트들을 실제로 어떻게 활용하는지, 간단한 계산기 앱을 만들면서 보여드릴게요. 요즘 핫한 노코드/로우코드 앱 빌더를 활용하면, 채팅창에 원하는 컴포넌트 목록과 기능을 설명하는 것만으로도 앱이 뚝딱 만들어진답니다.\n다양한 컴포넌트를 활용하여 만든 다기능 계산기는 아래 링크를 참고하세요.\n\n \n로그인 - Google 계정\n이메일 또는 휴대전화\naccounts.google.com\n\n\n \n \n예를 들어, 채팅창에 '일반/공학/단위변환 기능이 포함된 계산기를 만들어 줘. 다음 컴포넌트들을 모두 사용해'라고 입력하고, 앞서 설명한 버튼, 탭, 토글, 체크박스, 슬라이더, 라디오 버튼, 드롭다운, 로더, 팝오버 등의 목록을 제공하는 거죠. 그러면 AI가 이 모든 요구사항을 반영해서 멋진 계산기 앱을 만들어줍니다.\n메인 화면: 버튼과 탭이 기본으로 구성됩니다. 설정 아이콘을 클릭하면 모달 창이 뜨는데, 여기에는 토글 스위치, 체크박스, 슬라이더 등 다양한 컴포넌트가 보이죠.\n공학용 탭: 각도 단위 선택을 위한 라디오 버튼, 계산 과정 보기를 위한 로더(AI가 결과 출력 전까지) 등이 배치됩니다.\n단위 변환 탭: 변환 종류 및 from/to 단위를 선택할 때 드롭다운이 사용되고, 변환할 값은 입력창을 통해 받게 되어 있어요.\n이처럼 앱 빌더를 활용하면 우리가 배운 대부분의 컴포넌트를 사용한 앱을 순식간에 완성할 수 있습니다. 놀랍지 않나요? 솔직히 전 처음 보고 좀 놀랐어요.\n\n\n  문제 해결도 컴포넌트 이름을 정확히 알면 훨씬 쉬워져요!\n가령, 계산기록 팝오버 창이 잘리는 문제를 발견했을 때, 채팅창에 '계산기록 팝오버 창이 잘리는 문제를 해결해'라고 요청하면 바로 수정됩니다. 또, 라이트 모드에서 단위 변환 탭의 드롭다운 목록 글자색이 배경과 비슷해서 잘 안 보인다면, '라이트 모드에서 단위 변환 탭의 드롭다운 목록 글자색을 흰색으로 변경해'라고 정확히 요청할 수 있죠. 컴포넌트 이름을 모른다면 '저기, 그거 검은색으로 바꿔줘'라고 말하며 답답해했을 거예요. 명칭을 아는 것이 이렇게 중요합니다.\n  핵심 요약\n✅ UI 컴포넌트는 재사용성과 일관성을 통해 개발 효율을 극대화합니다.\n✅ 버튼, 입력 필드, 탭, 드롭다운, 라디오 버튼, 체크박스, 토글은 사용자 상호작용의 기본입니다.\n✅ 슬라이더, 알림, 로더, 툴팁, 모달, 팝오버, 아이콘은 사용자 경험을 풍부하게 만드는 핵심 요소입니다.\n✅ 컴포넌트의 정확한 명칭과 용도 이해는 문제 해결 능력을 높이고 개발 속도를 가속화합니다.\n이 핵심들을 기억하면 UI 개발이 더 이상 어렵지 않을 거예요!\n❓ 자주 묻는 질문 (FAQ)\nQ1: UI 컴포넌트의 명칭을 정확히 아는 것이 왜 그렇게 중요한가요?\nA1: 컴포넌트의 정확한 명칭을 알면 개발자 간의 소통이 원활해지고, 필요한 기능을 검색하거나 문제 해결을 위해 AI 도구에 요청할 때 더욱 정확하고 빠르게 해결할 수 있습니다. 마치 공구 이름을 모르면 집을 짓기 어려운 것과 같아요.\nQ2: 드롭다운, 라디오 버튼, 체크박스, 토글은 어떤 기준으로 구분해서 사용해야 하나요?\nA2: 드롭다운은 선택지가 많을 때 화면 공간을 효율적으로 사용하고, 라디오 버튼은 여러 옵션 중 단 하나만 선택할 때, 체크박스는 여러 개를 동시에 선택하거나 동의 여부를 표시할 때 사용합니다. 토글은 켜짐/꺼짐처럼 두 가지 상태를 직관적으로 전환할 때 적합합니다. 각 컴포넌트의 특성을 이해하고 사용자 경험에 맞춰 선택하는 것이 중요해요.\nQ3: 모달과 팝오버는 어떻게 다른가요?\nA3: 모달은 현재 페이지 위에 레이어처럼 떠서 사용자의 주의를 집중시키고, 모달이 닫히기 전까지는 뒤 배경과 상호작용할 수 없습니다. 중요한 확인이나 정보 입력에 주로 사용하죠. 반면 팝오버는 특정 요소를 클릭했을 때 그 근처에 나타나는 작은 정보창으로, 모달보다 가볍고, 팝오버 바깥을 클릭하면 자동으로 사라지는 등 비교적 가벼운 정보 표시에 사용됩니다.\n  마무리하며: UI 컴포넌트, 개발 속도를 결정하는 핵심!\n오늘 우리는 버튼부터 아이콘까지 15가지 핵심 UI 컴포넌트들의 정확한 이름과 용도를 배워봤어요. 이제 더 이상 '저기 있는 그거!'가 아니라, '드롭다운 컴포넌트'라고 정확히 말할 수 있게 된 거죠. 이런 작은 변화가 실제 개발 환경에서는 엄청난 효율 차이를 만듭니다. UI 컴포넌트에 대한 깊은 이해는 선택이 아니라 개발자의 필수 역량이라고 감히 말씀드리고 싶어요.\n  직접 경험해보세요!\n이 글에서 설명한 'UI 컴포넌트 쇼케이스'와 '계산기 앱'은 글 설명란 링크에서 직접 체험해보실 수 있도록 준비해둘게요. 눈으로 보는 것과 직접 만져보는 것은 정말 다르답니다. 복습하시면서 각 컴포넌트의 동작 방식과 용도를 몸으로 익히시면, 훨씬 더 확실하게 개념을 잡으실 수 있을 거예요.",
        "guid": "http://muzbox.tistory.com/483661",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "DALL-E 프롬프트",
          "UI 컴포넌트",
          "UX 디자인",
          "개발 속도",
          "개발 효율",
          "레고 블록 UI",
          "사용자 인터페이스",
          "웹 개발",
          "컴포넌트 라이브러리",
          "프론트엔드"
        ],
        "isoDate": "2025-09-27T15:25:28.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "Grok Imagine으로 AI 영상&middot;이미지 무료 생성! 초보자를 위한 xAI 완전 가이드",
        "link": "http://muzbox.tistory.com/483660",
        "pubDate": "Fri, 26 Sep 2025 10:51:53 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483660#entry483660comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #2c3e50;\">\n<div style=\"background-color: #f3e5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\">Grok Imagine은 2025년 8월, xAI가 선보인 혁신적인 AI 이미지 및 비디오 생성 도구입니다. 텍스트 프롬프트만으로 고품질 이미지를 생성할 수 있으며, 특정 조건 하에 최대 15초 길이의 비디오 생성도 가능하여 많은 이들의 관심을 받고 있죠. 오늘 이 가이드에서는 Grok Imagine의 모든 것을 초보자의 눈높이에 맞춰 쉽고 자세하게 알려드릴게요! 지금 바로 당신의 상상을 현실로 만들어 보세요.</div>\n<h2 data-ke-size=\"size26\"><b>  Grok Imagine, 당신의 상상을 현실로 바꾸는 AI!</b></h2>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1200\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/p1j2a/btsQPowh6d2/kj7fKmKWzdmnRotZDJDju0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/p1j2a/btsQPowh6d2/kj7fKmKWzdmnRotZDJDju0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/p1j2a/btsQPowh6d2/kj7fKmKWzdmnRotZDJDju0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fp1j2a%2FbtsQPowh6d2%2Fkj7fKmKWzdmnRotZDJDju0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Grok Imagine으로 AI 이미지와 비디오를 무료로 생성하며 창의력을 발휘하는 다양한 사용자들의 모습을 담은 미래지향적인 디지털 아트.\" loading=\"lazy\" width=\"600\" height=\"600\" data-filename=\"download.jpg\" data-origin-width=\"1200\" data-origin-height=\"1200\"/></span></figure>\n\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">AI 기술이 발전하는 속도를 보면 정말 놀랍다는 생각밖에 들지 않아요. 특히 최근에 <b>일론 머스크의 xAI</b>가 2025년 8월에 정식 출시한 <b>Grok Imagine</b>은 AI 이미지 및 비디오 생성 분야에 새로운 바람을 불어넣고 있는데요. 제 생각엔 이 도구가 꽤나 큰 판도를 바꿀 것 같다는 예감이 듭니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">Grok Imagine은 <b>Aurora 모델</b>을 기반으로, 단순한 텍스트 프롬프트만으로도 정말 멋진 고품질 이미지와 최대 15초 길이의 비디오를 만들어낼 수 있어요. 특히 무료 사용자에게도 이미지 생성 기회를 제공한다는 점이 매력적입니다. 하지만 비디오 생성의 경우, 무료 접근이 제한되거나 특정 조건 하에만 가능할 수 있으니 유의해야 합니다.</p>\n<h2 data-ke-size=\"size26\"><b>  Grok Imagine이 정확히 뭔가요?</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">그럼 Grok Imagine이 정확히 어떤 녀석인지 좀 더 깊이 알아볼까요? Grok Imagine은 xAI가 개발한 차세대 멀티모달 AI 도구입니다. 이름에서도 알 수 있듯이, 여러분의 상상(Imagine)을 현실로 만들어주는 역할을 합니다. 간단하게 텍스트만 입력하면, AI가 그 내용을 시각적인 결과물로 변환해주죠.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이 도구의 핵심은 바로 xAI가 독자적으로 개발한 <b>Aurora 모델</b>에 있습니다. 이 모델은 자기회귀(autoregressive) 혼합 전문가 네트워크 아키텍처를 사용해서 텍스트와 이미지 데이터를 동시에 처리하는 능력을 가지고 있어요. 마치 뇌가 여러 정보를 한 번에 처리하듯이 말이죠. 덕분에 인터넷의 수십억 개에 달하는 방대한 데이터로 훈련되어 세상에 대한 깊은 이해를 갖추고 있습니다.</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/458217332\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bQB0sC/hyZJR2Qq9c/KTHsREMa1N8Fqh5sqpVYk0/img.jpg?width=1300&amp;height=672&amp;face=684_93_740_155,https://scrap.kakaocdn.net/dn/bvgcqB/hyZJQbOz3V/okAelg3K8bz0YxJoG0CJl0/img.jpg?width=1300&amp;height=672&amp;face=684_93_740_155\" data-video-width=\"860\" data-video-height=\"445\" data-video-origin-width=\"860\" data-video-origin-height=\"445\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"'어떤오후의 프리웨어 이야기 (유용한 IT정보)'에서 업로드한 동영상\" data-video-play-service=\"daum_tistory\" data-original-url=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/458217332?service=daum_tistory\" width=\"860\" height=\"445\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">그래서 어떤 결과물이 나오냐고요? Aurora 모델 덕분에 <b>매우 사실적인 렌더링</b>이 가능하고, 사용자가 원하는 텍스트 명령을 <b>정확하게 수행</b>하는 것이 특징입니다. 심지어 이미지를 생성하는 것뿐만 아니라, 기존에 가지고 있던 이미지를 업로드해서 편집하거나 개선하는 기능까지 제공하니, 활용 범위가 정말 넓다고 볼 수 있습니다. 제가 직접 써보니, 복잡한 프롬프트도 꽤 잘 이해해서 결과물을 내주는 게 인상 깊었습니다.</p>\n<h2 data-ke-size=\"size26\"><b>  Grok Imagine의 사용 한도 자세히 알아보기</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">Grok Imagine의 사용 한도는 무료 사용자와 유료 사용자 간에 차이가 있습니다. 2025년 9월 현재 기준으로, 무료 사용자는 다음과 같은 기능들을 이용할 수 있습니다. 다만, 비디오 생성 기능은 무료 사용자에게는 매우 제한적이거나, 대기 목록 등록 또는 유료 구독이 필요할 수 있습니다.</p>\n<div style=\"background-color: #f3e5f5; border-left: 4px solid #8e44ad; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">  <b>팁:</b> Grok Imagine의 사용 한도는 <b>2시간 롤링 윈도우</b> 방식으로 적용됩니다. 이는 주로 이미지 생성에 해당하며, 생성 후 2시간이 지나면 다시 사용 한도가 채워진다는 의미입니다. 비디오 생성은 무료 사용자에게 제한적일 수 있습니다.</div>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">이미지 생성 한도</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\">일부 소스에 따르면 무료 사용자는 <b>2시간마다 약 10개</b>의 이미지를 생성할 수 있지만, <b>일일 총 생성 한도는 3~10개 사이로 제한</b>될 수 있습니다. 이는 '캘린더 데이' 기준과 '2시간 롤링 윈도우' 방식 간의 혼동으로 보입니다.</li>\n<li style=\"margin-bottom: 8px;\">최대 <b>1024x1024 해상도</b>까지 지원하여 고품질 이미지를 얻을 수 있습니다.</li>\n</ul>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">비디오 생성 한도</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\">무료 사용자에게 비디오 생성 기능은 <b>매우 제한적이거나 이용이 불가능</b>할 수 있습니다. 대부분의 경우, 비디오 생성은 유료 구독 플랜에 포함되어 있거나 대기 목록을 통해 접근이 가능합니다. (이전 문서에서 언급된 '안드로이드 하루 약 25개, iOS 하루 약 20개'와 같은 구체적인 무료 비디오 한도는 공식적으로 확인되지 않았습니다.)</li>\n<li style=\"margin-bottom: 8px;\">비디오 길이는 최대 <b>15초</b>이며, <b>사운드 포함 여부는 사용 환경에 따라 다를 수 있습니다.</b></li>\n</ul>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">이미지 분석 한도</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>하루 약 3개</b>의 이미지 분석 가능</li>\n</ul>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/FZc2Z/btsQNE0LHh2/c9mVHi9N4eTiyZvBAwLQu0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/FZc2Z/btsQNE0LHh2/c9mVHi9N4eTiyZvBAwLQu0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/FZc2Z/btsQNE0LHh2/c9mVHi9N4eTiyZvBAwLQu0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FFZc2Z%2FbtsQNE0LHh2%2Fc9mVHi9N4eTiyZvBAwLQu0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Grok Imagine 무료 사용자에게 제공되는 이미지 및 비디오 생성 한도를 시각적으로 보여주는 인포그래픽 UI.\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">따라서 캐주얼한 이미지 생성 용도로는 여전히 매력적이지만, 비디오 생성의 경우 유료 플랜을 고려해야 할 수 있습니다.</p>\n<h2 data-ke-size=\"size26\"><b>  더 강력한 기능을 원한다면? 유료 구독 플랜 자세히 보기</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">무료 사용자에게도 충분한 기회를 제공하지만, 더 많은 기능과 높은 한도가 필요한 전문가나 헤비 유저를 위해 Grok Imagine은 다양한 유료 구독 플랜을 제공합니다. 제 주변에서도 업무용으로 사용하기 위해 유료 플랜을 고민하는 분들이 꽤 있더라고요.</p>\n<div style=\"overflow-x: auto; margin-bottom: 20px;\">\n<table style=\"width: 100%; border-collapse: collapse; text-align: left; min-width: 600px; color: #2c3e50; border: 1px solid #ce93d8;\" data-ke-align=\"alignLeft\">\n<thead style=\"background-color: #f3e5f5;\">\n<tr>\n<th style=\"padding: 12px 15px; border: 1px solid #ce93d8; font-weight: bold;\">플랜</th>\n<th style=\"padding: 12px 15px; border: 1px solid #ce93d8; font-weight: bold;\">월 요금</th>\n<th style=\"padding: 12px 15px; border: 1px solid #ce93d8; font-weight: bold;\">이미지 생성 (2시간마다)</th>\n<th style=\"padding: 12px 15px; border: 1px solid #ce93d8; font-weight: bold;\">비디오 생성 (하루)</th>\n<th style=\"padding: 12px 15px; border: 1px solid #ce93d8; font-weight: bold;\">주요 혜택</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"background-color: #fdf6e3;\">\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">X Premium</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">$8</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">50개</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">50개</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">우선순위 처리</td>\n</tr>\n<tr style=\"background-color: #faf3fb;\">\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">X Premium+</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">$16</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">100개</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">100개</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">향상된 분석 기능, 광고 제거, 최우선 처리</td>\n</tr>\n<tr style=\"background-color: #fdf6e3;\">\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">SuperGrok Heavy</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">xAI 공식 웹사이트 참조*</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">무제한</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">500개</td>\n<td style=\"padding: 10px 15px; border: 1px solid #ce93d8;\">Grok 4 Heavy 모델 접근, 전문가용 고급 기능</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">* 정확한 가격은 xAI 공식 웹사이트에서 확인해주세요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">SuperGrok Heavy 플랜의 정확한 가격 정보는 xAI 공식 웹사이트(<a style=\"color: #8e44ad; text-decoration: none;\" href=\"https://x.ai/grok\" target=\"_blank\" rel=\"noopener\">https://x.ai/grok</a>)에서 확인하시는 것이 가장 정확합니다. 각 플랜마다 제공되는 혜택과 한도가 다르니, 본인의 사용 목적과 빈도에 맞춰 가장 적합한 플랜을 선택하는 것이 중요합니다.</p>\n<h2 data-ke-size=\"size26\"><b>✨ Grok Imagine의 핵심 기능, 어떤 것들이 있을까요?</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">Grok Imagine은 단순히 이미지만 만드는 것을 넘어, 사용자의 편의성과 창작의 자유를 극대화하는 다양한 기능들을 제공합니다. 제가 직접 사용해보면서 느낀 인상 깊었던 몇 가지를 소개해 드릴게요.</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">1. 다양한 생성 모드</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">Grok Imagine은 사용자의 다양한 니즈에 맞춰 <b>4가지 모드</b>를 제공합니다. 상황에 따라 원하는 모드를 선택하여 최적의 결과물을 얻을 수 있습니다.</p>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>Normal 모드:</b> 일반적인 이미지 및 비디오 생성에 사용합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>Fun 모드:</b> 재미있고 유머러스한, 톡톡 튀는 콘텐츠를 만들고 싶을 때 좋습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>Custom 모드:</b> 사용자 정의 옵션으로 더 세밀한 제어가 가능하며, 특정 스타일이나 분위기를 연출할 때 유용합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>Spicy 모드:</b> 성인 콘텐츠 생성이 가능한 모드이지만, <b>일정 제한</b>이 있으며 사용에 주의가 필요합니다.</li>\n</ul>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">2. 빠른 실시간 생성</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이 기능은 정말 독특하면서도 창의적인데요, 사용자가 화면을 스크롤하기만 해도 <b>새로운 이미지를 빠르게 생성</b>해줍니다. 덕분에 창작자들은 빠르게 다양한 아이디어를 탐색하고, 영감을 얻을 수 있습니다.</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">3. 이미지-비디오 변환</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">정적인 이미지를 <b>움직이는 비디오로 변환</b>하는 기능은 Grok Imagine의 강력한 특징 중 하나입니다. 기존에 가지고 있던 이미지를 업로드하거나, Grok Imagine으로 생성한 이미지를 선택해서 6~15초 길이의 루핑 비디오로 만들 수 있어요. 여기서 끝이 아닙니다! 자동으로 <b>오디오 트랙을 포함할 수 있으며</b>, 이는 사용 환경에 따라 다를 수 있습니다. 따라서 배경음악 포함 여부는 확인이 필요합니다.</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">4. 음성 입력 지원</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">텍스트 입력이 번거롭다면? 걱정 마세요! Grok Imagine은 <b>음성 명령</b>으로도 이미지와 비디오를 생성할 수 있습니다. \"Speak\" 버튼을 누르고 원하는 프롬프트를 말하면, AI가 이를 정확하게 해석하여 시각 콘텐츠로 구현해줍니다. 저 같은 경우엔 아이디어가 갑자기 떠올랐을 때 말로 바로 입력할 수 있어서 좋았어요.</p>\n<h2 data-ke-size=\"size26\"><b>⚔️ 경쟁사 대비 Grok Imagine의 장단점은?</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">어떤 AI 도구든 완벽할 수는 없죠. Grok Imagine 역시 장점과 단점을 모두 가지고 있습니다. 다른 유명 AI 이미지 생성 도구들과 비교했을 때 Grok Imagine이 어떤 위치에 있는지 한번 살펴볼까요?</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">장점</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>제한적이지만 무료 이미지 접근성:</b> MidJourney나 DALL&middot;E 3 같은 서비스는 유료 또는 매우 제한적인 무료 기능을 제공하는 반면, Grok Imagine은 무료 사용자에게도 이미지 생성 기회를 제공합니다. (단, 비디오 생성은 제한적일 수 있습니다.)</li>\n<li style=\"margin-bottom: 8px;\"><b>뛰어난 속도:</b> 일론 머스크의 주장에 따르면, 경쟁사들이 이미지 1개를 생성하는 시간에 Grok Imagine은 비디오를 생성할 수 있을 정도로 빠르다고 합니다. 실제로 써보니 체감 속도가 꽤 빨랐습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>X 플랫폼 통합:</b> X(구 트위터) 앱 내에서 바로 콘텐츠를 생성하고 공유할 수 있어 사용이 매우 편리합니다.</li>\n</ul>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">단점</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>품질 한계:</b> 아직까지는 Google Veo 3나 OpenAI Sora 같은 최상위 모델과 비교했을 때 비디오 품질이 다소 떨어진다는 평가가 있습니다. 하지만 계속 개선될 것이라고 믿습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>지역 제한:</b> 아쉽게도 일부 기능은 현재 미국에서만 사용 가능합니다. 빨리 전 세계로 확장되기를 바라는 마음입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>안전성 우려:</b> \"Spicy 모드\"로 인해 부적절한 콘텐츠가 생성될 가능성이 있다는 우려도 제기되고 있습니다. 사용 시 주의가 필요해요.</li>\n</ul>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/bb2kW4/btsQOCH2LPL/BW0ogsK66IXmMuOJOl7yRk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bb2kW4/btsQOCH2LPL/BW0ogsK66IXmMuOJOl7yRk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bb2kW4/btsQOCH2LPL/BW0ogsK66IXmMuOJOl7yRk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbb2kW4%2FbtsQOCH2LPL%2FBW0ogsK66IXmMuOJOl7yRk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Grok Imagine의 장점(무료 접근성, 속도)과 단점(품질 한계, 지역 제한)을 시각적으로 비교한 일러스트레이션.\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<div style=\"background-color: #fff9c4; border-left: 4px solid #f1c40f; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">⚠️ <b>주의:</b> Grok Imagine의 'Spicy 모드'는 성인 콘텐츠 생성이 가능합니다. 이 기능은 신중하게 사용해야 하며, 부적절한 콘텐츠를 생성하거나 공유하지 않도록 각별히 유의해주세요.</div>\n<h2 data-ke-size=\"size26\"><b>  Grok Imagine, 이렇게 사용하면 돼요! (초보자 가이드)</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">자, 이제 Grok Imagine을 직접 사용해볼 차례입니다. 어렵지 않으니, 저와 함께 차근차근 따라 해 볼까요?</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">1. 앱 설치 및 설정</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\">iOS App Store 또는 Google Play Store에서 <b>\"Grok\"</b>을 검색하여 설치합니다.</li>\n<li style=\"margin-bottom: 8px;\">X(구 트위터) 계정으로 간편하게 로그인할 수 있습니다.</li>\n<li style=\"margin-bottom: 8px;\">최신 버전으로 업데이트되어 있는지 확인하는 것이 중요합니다.</li>\n</ul>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">2. 이미지 생성하기</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\">앱 상단에 있는 <b>\"Imagine\" 탭</b>을 선택합니다.</li>\n<li style=\"margin-bottom: 8px;\">\"Type to Imagine\" 입력창에 여러분이 상상하는 이미지를 텍스트로 자세히 입력합니다. (프롬프트 작성법은 아래에서 더 자세히 다룰게요!)</li>\n<li style=\"margin-bottom: 8px;\">원하는 생성 모드(Normal, Fun, Custom, Spicy)를 선택합니다.</li>\n<li style=\"margin-bottom: 8px;\">몇 초만 기다리면 AI가 생성한 멋진 이미지 결과물을 확인할 수 있습니다.</li>\n<li style=\"margin-bottom: 8px;\">화면을 스크롤하면 추가적인 변형 이미지들이 자동으로 생성되니, 마음에 드는 이미지가 나올 때까지 계속 찾아볼 수 있습니다.</li>\n</ul>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">3. 비디오 생성하기</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\">생성된 이미지 하단의 <b>\"Make Video\" 버튼</b>을 클릭합니다.</li>\n<li style=\"margin-bottom: 8px;\">또는 기존 이미지를 업로드한 후 비디오 변환 기능을 이용할 수도 있습니다.</li>\n<li style=\"margin-bottom: 8px;\">Grok Imagine이 6~15초 길이의 루핑 비디오를 생성해줍니다. <b>오디오 트랙 포함 여부는 사용 환경에 따라 다를 수 있습니다.</b></li>\n<li style=\"margin-bottom: 8px;\">생성된 비디오는 바로 공유하거나 다운로드하여 다양한 곳에 활용할 수 있습니다.</li>\n</ul>\n<h2 data-ke-size=\"size26\"><b>  활용 팁과 모범 사례로 더 멋진 결과물 만들기</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">AI 이미지 생성 도구는 <b>프롬프트가 핵심</b>입니다. 어떤 명령어를 입력하느냐에 따라 결과물의 퀄리티가 천차만별로 달라지죠. 저도 처음에는 시행착오를 많이 겪었는데, 몇 가지 팁만 알아도 정말 만족스러운 결과물을 얻을 수 있습니다.</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">효과적인 프롬프트 작성법</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>구체적이고 상세한 설명:</b> \"고양이\"보다는 \"파란 눈을 가진 흰 털의 페르시안 고양이가 햇살이 비치는 창가에 앉아있는 모습, 털 한 올 한 올이 선명하게 보이는 하이퍼리얼리스틱 스타일\"처럼 최대한 자세히 묘사할수록 AI가 여러분의 의도를 정확히 파악합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>스타일 키워드 포함:</b> \"hyperrealistic\", \"anime style\", \"watercolor painting\", \"pixel art\" 등 원하는 시각적 스타일을 명시하면 결과물의 분위기를 쉽게 조절할 수 있습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>조명과 구도 명시:</b> \"golden hour lighting\", \"close-up portrait\", \"wide angle shot\", \"dramatic lighting\" 등 조명과 카메라 구도를 구체적으로 언급하여 더욱 전문적인 결과물을 만들어 보세요.</li>\n</ul>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">무료 사용량 최적화 전략</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">무료 사용 한도를 최대한 효율적으로 활용하는 것도 중요하겠죠? 몇 가지 전략을 소개해 드릴게요.</p>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>배치 프롬프트 활용:</b> 여러 아이디어를 하나의 프롬프트에 결합하거나, 한 번에 여러 개의 이미지를 요청하여 효율성을 높일 수 있습니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>시간대 고려:</b> 사용량이 적은 시간대(예: 심야 시간)에 집중적으로 사용하는 것도 하나의 방법입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>우선순위 설정:</b> 중요한 작업을 위해 한도를 미리 보존해두는 습관을 들이세요. 급하게 필요한 이미지가 있다면 먼저 생성하는 거죠.</li>\n</ul>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/VqoOj/btsQPdVxuFF/mRrdaZHmD6zu6LKGwhqduK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/VqoOj/btsQPdVxuFF/mRrdaZHmD6zu6LKGwhqduK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/VqoOj/btsQPdVxuFF/mRrdaZHmD6zu6LKGwhqduK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FVqoOj%2FbtsQPdVxuFF%2FmRrdaZHmD6zu6LKGwhqduK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"X 앱 내에서 Grok Imagine을 사용하여 음성 및 텍스트 프롬프트로 AI 이미지와 비디오를 생성하는 과정을 보여주는 모바일 인터페이스 화면.\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<h2 data-ke-size=\"size26\"><b>  Grok Imagine의 빛나는 미래, 다음은 무엇일까?</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">xAI는 Grok Imagine이 <b>\"거의 매일 개선될 것\"</b>이라고 발표했습니다. 이 말은 즉, 현재의 장점은 더욱 강화되고, 단점은 빠르게 보완될 것이라는 희망적인 메시지라고 생각합니다. 저도 매일매일 어떤 새로운 기능이 추가될지 기대가 큽니다.</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">예정된 기능</h3>\n<ul style=\"margin-bottom: 20px; padding-left: 25px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 8px;\"><b>더 긴 비디오 생성:</b> 현재 15초 길이에 만족하지 않고, 더욱 긴 길이의 비디오를 생성할 수 있도록 확장될 예정입니다. (텍스트-투-비디오 기능 확장도 2025년 10월에 예정되어 있습니다.) 짧은 영상 콘텐츠 제작에는 아주 큰 도움이 될 거예요.</li>\n<li style=\"margin-bottom: 8px;\"><b>웹 버전 출시:</b> 현재는 모바일 앱 전용이지만, 조만간 웹 브라우저에서도 Grok Imagine을 이용할 수 있게 되어 접근성이 더욱 높아질 것으로 보입니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>고급 편집 도구:</b> 인페인팅(inpainting)이나 아웃페인팅(outpainting) 같은 고급 이미지 수정 기능들이 추가될 예정입니다. 이는 전문가들에게 특히 반가운 소식일 겁니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>커스텀 스타일 훈련:</b> 사용자가 원하는 특정 스타일을 AI에 학습시켜 자신만의 고유한 스타일로 이미지를 생성할 수 있는 fine-tuning 기능도 기대됩니다.</li>\n</ul>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">글로벌 확장</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">현재 일부 기능이 미국에 한정되어 있어 아쉬움을 느끼는 분들이 많을 텐데요. xAI는 <b>전 세계 사용자로의 확장</b>을 적극적으로 추진하고 있습니다. 머지않아 한국 사용자들도 모든 기능을 제한 없이 이용할 수 있을 것으로 전망되니, 조금만 더 기다려봐야 할 것 같아요.</p>\n<div style=\"margin: 40px 0; padding: 25px; background-color: #fdf6e3; border: 1px solid #ce93d8; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); color: #2c3e50;\">\n<div style=\"font-size: 26px; color: #8e44ad; font-weight: bold; margin-bottom: 15px; border-bottom: 2px solid #8e44ad; padding-bottom: 10px;\">  핵심 요약</div>\n<div style=\"font-size: 17px; line-height: 1.8;\">\n<p style=\"margin-bottom: 10px;\" data-ke-size=\"size16\"><b>1. 제한적인 무료 이미지 생성 기회:</b> 무료 사용자에게 이미지 생성 기회를 제공하지만, 비디오 생성은 매우 제한적이거나 유료 구독이 필요할 수 있습니다.</p>\n<p style=\"margin-bottom: 10px;\" data-ke-size=\"size16\"><b>2. Aurora 모델 기반:</b> xAI의 독자 기술로 사실적인 렌더링과 정확한 명령 수행이 가능.</p>\n<p style=\"margin-bottom: 10px;\" data-ke-size=\"size16\"><b>3. 이미지-비디오 변환 기능:</b> 정적인 이미지를 15초 길이의 비디오로 변환하며, <b>오디오 트랙 포함 여부는 사용 환경에 따라 다를 수 있습니다.</b></p>\n<p style=\"margin-bottom: 10px;\" data-ke-size=\"size16\"><b>4. X 플랫폼 통합 및 빠른 속도:</b> X 앱 내에서 편리하게 생성 및 공유, 경쟁사 대비 뛰어난 생성 속도.</p>\n</div>\n<div style=\"font-size: 14px; color: #f1c40f; margin-top: 20px;\">*본 내용은 2025년 9월 26일 기준 최신 정보를 바탕으로 작성되었습니다.</div>\n</div>\n<h2 data-ke-size=\"size26\"><b>❓ 자주 묻는 질문 (FAQ)</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">Grok Imagine에 대해 자주 묻는 질문들을 모아봤습니다. 궁금증 해결에 도움이 되길 바랍니다.</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">Grok Imagine은 완전히 무료인가요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">Grok Imagine은 무료 사용자에게 이미지 생성 기회를 제공합니다. <b>하지만 비디오 생성은 매우 제한적이거나, 대기 목록 등록 또는 유료 구독이 필요할 수 있습니다.</b> 이미지 생성의 경우, 2시간마다 한도가 재설정되는 롤링 윈도우 방식이 적용되지만, 일일 총 생성 한도는 제한될 수 있습니다. 더 많은 기능과 높은 한도를 원한다면 유료 구독 플랜을 이용할 수 있습니다.</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">Grok Imagine으로 생성된 비디오는 어느 정도 길이인가요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">현재 Grok Imagine은 최대 15초 길이의 루핑 비디오를 생성할 수 있습니다. <b>오디오 트랙 포함 여부는 사용 환경에 따라 다를 수 있습니다.</b> xAI는 앞으로 더 긴 길이의 비디오 생성 기능도 추가할 예정이라고 합니다.</p>\n<h3 style=\"font-size: 18px; color: #8e44ad; margin-top: 25px; margin-bottom: 10px;\" data-ke-size=\"size23\">Grok Imagine을 사용하려면 X(구 트위터) 계정이 필수인가요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">네, Grok Imagine은 X 앱 내에서 서비스되는 도구이므로, X 계정을 통한 로그인이 필수입니다. X 계정만 있다면 누구나 쉽게 Grok Imagine을 시작할 수 있습니다.</p>\n<script type=\"application/ld+json\">\n    {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"FAQPage\",\n      \"mainEntity\": [\n        {\n          \"@type\": \"Question\",\n          \"name\": \"Grok Imagine은 완전히 무료인가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"Grok Imagine은 무료 사용자에게 이미지 생성 기회를 제공합니다. 하지만 비디오 생성은 매우 제한적이거나, 대기 목록 등록 또는 유료 구독이 필요할 수 있습니다. 이미지 생성의 경우, 2시간마다 한도가 재설정되는 롤링 윈도우 방식이 적용되지만, 일일 총 생성 한도는 제한될 수 있습니다. 더 많은 기능과 높은 한도를 원한다면 유료 구독 플랜을 이용할 수 있습니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"Grok Imagine으로 생성된 비디오는 어느 정도 길이인가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"현재 Grok Imagine은 최대 15초 길이의 루핑 비디오를 생성할 수 있습니다. 오디오 트랙 포함 여부는 사용 환경에 따라 다를 수 있습니다. xAI는 앞으로 더 긴 길이의 비디오 생성 기능도 추가할 예정이라고 합니다.\"\n          }\n        },\n        {\n          \"@type\": \"Question\",\n          \"name\": \"Grok Imagine을 사용하려면 X(구 트위터) 계정이 필수인가요?\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": \"네, Grok Imagine은 X 앱 내에서 서비스되는 도구이므로, X 계정을 통한 로그인이 필수입니다. X 계정만 있다면 누구나 쉽게 Grok Imagine을 시작할 수 있습니다.\"\n          }\n        }\n      ]\n    }\n    </script>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">Grok Imagine은 AI 이미지 및 비디오 생성 분야에서 <b>접근성과 혁신</b>을 동시에 실현한 정말 주목할 만한 도구라고 생각합니다. 특히 무료 사용자에게도 <b>이미지 생성 기회를 제공하며</b>, 15초 길이의 비디오 생성(오디오 트랙 포함 여부는 환경에 따라 다름)이 가능하다는 점은 매력적이죠.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">물론 품질 면에서는 Google Veo 3나 OpenAI Sora 같은 최상위 경쟁사 대비 아직 개선의 여지가 있는 것이 사실입니다. 하지만 <b>제한적인 무료 이미지 접근성, 빠른 생성 속도, X 플랫폼과의 완벽한 통합</b>이라는 강력한 장점 덕분에 많은 사용자들의 관심을 한몸에 받고 있습니다. 제 생각엔 창작자, 학생, 그리고 소규모 비즈니스 운영자들에게는 정말 비용 효율적인 훌륭한 대안이 될 수 있을 거예요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">xAI의 발표처럼 Grok Imagine은 \"거의 매일 개선될 것\"이라고 하니, 앞으로 어떤 놀라운 업데이트가 이루어질지 정말 기대가 큽니다. 이미지 생성은 무료로 시작할 수 있는 만큼, AI 이미지 및 비디오 생성에 관심 있는 분들이라면 주저하지 말고 지금 바로 Grok Imagine을 경험해보시길 강력히 추천합니다! 여러분의 상상력을 마음껏 펼쳐보세요.</p>\n<div align=\"center\">⁂</div>\n</div>",
        "contentSnippet": "Grok Imagine은 2025년 8월, xAI가 선보인 혁신적인 AI 이미지 및 비디오 생성 도구입니다. 텍스트 프롬프트만으로 고품질 이미지를 생성할 수 있으며, 특정 조건 하에 최대 15초 길이의 비디오 생성도 가능하여 많은 이들의 관심을 받고 있죠. 오늘 이 가이드에서는 Grok Imagine의 모든 것을 초보자의 눈높이에 맞춰 쉽고 자세하게 알려드릴게요! 지금 바로 당신의 상상을 현실로 만들어 보세요.\n  Grok Imagine, 당신의 상상을 현실로 바꾸는 AI!\n\n\nAI 기술이 발전하는 속도를 보면 정말 놀랍다는 생각밖에 들지 않아요. 특히 최근에 일론 머스크의 xAI가 2025년 8월에 정식 출시한 Grok Imagine은 AI 이미지 및 비디오 생성 분야에 새로운 바람을 불어넣고 있는데요. 제 생각엔 이 도구가 꽤나 큰 판도를 바꿀 것 같다는 예감이 듭니다.\nGrok Imagine은 Aurora 모델을 기반으로, 단순한 텍스트 프롬프트만으로도 정말 멋진 고품질 이미지와 최대 15초 길이의 비디오를 만들어낼 수 있어요. 특히 무료 사용자에게도 이미지 생성 기회를 제공한다는 점이 매력적입니다. 하지만 비디오 생성의 경우, 무료 접근이 제한되거나 특정 조건 하에만 가능할 수 있으니 유의해야 합니다.\n  Grok Imagine이 정확히 뭔가요?\n그럼 Grok Imagine이 정확히 어떤 녀석인지 좀 더 깊이 알아볼까요? Grok Imagine은 xAI가 개발한 차세대 멀티모달 AI 도구입니다. 이름에서도 알 수 있듯이, 여러분의 상상(Imagine)을 현실로 만들어주는 역할을 합니다. 간단하게 텍스트만 입력하면, AI가 그 내용을 시각적인 결과물로 변환해주죠.\n이 도구의 핵심은 바로 xAI가 독자적으로 개발한 Aurora 모델에 있습니다. 이 모델은 자기회귀(autoregressive) 혼합 전문가 네트워크 아키텍처를 사용해서 텍스트와 이미지 데이터를 동시에 처리하는 능력을 가지고 있어요. 마치 뇌가 여러 정보를 한 번에 처리하듯이 말이죠. 덕분에 인터넷의 수십억 개에 달하는 방대한 데이터로 훈련되어 세상에 대한 깊은 이해를 갖추고 있습니다.\n\n\n\n \n그래서 어떤 결과물이 나오냐고요? Aurora 모델 덕분에 매우 사실적인 렌더링이 가능하고, 사용자가 원하는 텍스트 명령을 정확하게 수행하는 것이 특징입니다. 심지어 이미지를 생성하는 것뿐만 아니라, 기존에 가지고 있던 이미지를 업로드해서 편집하거나 개선하는 기능까지 제공하니, 활용 범위가 정말 넓다고 볼 수 있습니다. 제가 직접 써보니, 복잡한 프롬프트도 꽤 잘 이해해서 결과물을 내주는 게 인상 깊었습니다.\n  Grok Imagine의 사용 한도 자세히 알아보기\nGrok Imagine의 사용 한도는 무료 사용자와 유료 사용자 간에 차이가 있습니다. 2025년 9월 현재 기준으로, 무료 사용자는 다음과 같은 기능들을 이용할 수 있습니다. 다만, 비디오 생성 기능은 무료 사용자에게는 매우 제한적이거나, 대기 목록 등록 또는 유료 구독이 필요할 수 있습니다.\n  팁: Grok Imagine의 사용 한도는 2시간 롤링 윈도우 방식으로 적용됩니다. 이는 주로 이미지 생성에 해당하며, 생성 후 2시간이 지나면 다시 사용 한도가 채워진다는 의미입니다. 비디오 생성은 무료 사용자에게 제한적일 수 있습니다.\n이미지 생성 한도\n일부 소스에 따르면 무료 사용자는 2시간마다 약 10개의 이미지를 생성할 수 있지만, 일일 총 생성 한도는 3~10개 사이로 제한될 수 있습니다. 이는 '캘린더 데이' 기준과 '2시간 롤링 윈도우' 방식 간의 혼동으로 보입니다.\n최대 1024x1024 해상도까지 지원하여 고품질 이미지를 얻을 수 있습니다.\n비디오 생성 한도\n무료 사용자에게 비디오 생성 기능은 매우 제한적이거나 이용이 불가능할 수 있습니다. 대부분의 경우, 비디오 생성은 유료 구독 플랜에 포함되어 있거나 대기 목록을 통해 접근이 가능합니다. (이전 문서에서 언급된 '안드로이드 하루 약 25개, iOS 하루 약 20개'와 같은 구체적인 무료 비디오 한도는 공식적으로 확인되지 않았습니다.)\n비디오 길이는 최대 15초이며, 사운드 포함 여부는 사용 환경에 따라 다를 수 있습니다.\n이미지 분석 한도\n하루 약 3개의 이미지 분석 가능\n\n\n따라서 캐주얼한 이미지 생성 용도로는 여전히 매력적이지만, 비디오 생성의 경우 유료 플랜을 고려해야 할 수 있습니다.\n  더 강력한 기능을 원한다면? 유료 구독 플랜 자세히 보기\n무료 사용자에게도 충분한 기회를 제공하지만, 더 많은 기능과 높은 한도가 필요한 전문가나 헤비 유저를 위해 Grok Imagine은 다양한 유료 구독 플랜을 제공합니다. 제 주변에서도 업무용으로 사용하기 위해 유료 플랜을 고민하는 분들이 꽤 있더라고요.\n플랜\n월 요금\n이미지 생성 (2시간마다)\n비디오 생성 (하루)\n주요 혜택\n\n\n\n\nX Premium\n$8\n50개\n50개\n우선순위 처리\n\n\nX Premium+\n$16\n100개\n100개\n향상된 분석 기능, 광고 제거, 최우선 처리\n\n\nSuperGrok Heavy\nxAI 공식 웹사이트 참조*\n무제한\n500개\nGrok 4 Heavy 모델 접근, 전문가용 고급 기능\n\n\n\n\n* 정확한 가격은 xAI 공식 웹사이트에서 확인해주세요.\nSuperGrok Heavy 플랜의 정확한 가격 정보는 xAI 공식 웹사이트(https://x.ai/grok)에서 확인하시는 것이 가장 정확합니다. 각 플랜마다 제공되는 혜택과 한도가 다르니, 본인의 사용 목적과 빈도에 맞춰 가장 적합한 플랜을 선택하는 것이 중요합니다.\n✨ Grok Imagine의 핵심 기능, 어떤 것들이 있을까요?\nGrok Imagine은 단순히 이미지만 만드는 것을 넘어, 사용자의 편의성과 창작의 자유를 극대화하는 다양한 기능들을 제공합니다. 제가 직접 사용해보면서 느낀 인상 깊었던 몇 가지를 소개해 드릴게요.\n1. 다양한 생성 모드\nGrok Imagine은 사용자의 다양한 니즈에 맞춰 4가지 모드를 제공합니다. 상황에 따라 원하는 모드를 선택하여 최적의 결과물을 얻을 수 있습니다.\nNormal 모드: 일반적인 이미지 및 비디오 생성에 사용합니다.\nFun 모드: 재미있고 유머러스한, 톡톡 튀는 콘텐츠를 만들고 싶을 때 좋습니다.\nCustom 모드: 사용자 정의 옵션으로 더 세밀한 제어가 가능하며, 특정 스타일이나 분위기를 연출할 때 유용합니다.\nSpicy 모드: 성인 콘텐츠 생성이 가능한 모드이지만, 일정 제한이 있으며 사용에 주의가 필요합니다.\n2. 빠른 실시간 생성\n이 기능은 정말 독특하면서도 창의적인데요, 사용자가 화면을 스크롤하기만 해도 새로운 이미지를 빠르게 생성해줍니다. 덕분에 창작자들은 빠르게 다양한 아이디어를 탐색하고, 영감을 얻을 수 있습니다.\n3. 이미지-비디오 변환\n정적인 이미지를 움직이는 비디오로 변환하는 기능은 Grok Imagine의 강력한 특징 중 하나입니다. 기존에 가지고 있던 이미지를 업로드하거나, Grok Imagine으로 생성한 이미지를 선택해서 6~15초 길이의 루핑 비디오로 만들 수 있어요. 여기서 끝이 아닙니다! 자동으로 오디오 트랙을 포함할 수 있으며, 이는 사용 환경에 따라 다를 수 있습니다. 따라서 배경음악 포함 여부는 확인이 필요합니다.\n4. 음성 입력 지원\n텍스트 입력이 번거롭다면? 걱정 마세요! Grok Imagine은 음성 명령으로도 이미지와 비디오를 생성할 수 있습니다. \"Speak\" 버튼을 누르고 원하는 프롬프트를 말하면, AI가 이를 정확하게 해석하여 시각 콘텐츠로 구현해줍니다. 저 같은 경우엔 아이디어가 갑자기 떠올랐을 때 말로 바로 입력할 수 있어서 좋았어요.\n⚔️ 경쟁사 대비 Grok Imagine의 장단점은?\n어떤 AI 도구든 완벽할 수는 없죠. Grok Imagine 역시 장점과 단점을 모두 가지고 있습니다. 다른 유명 AI 이미지 생성 도구들과 비교했을 때 Grok Imagine이 어떤 위치에 있는지 한번 살펴볼까요?\n장점\n제한적이지만 무료 이미지 접근성: MidJourney나 DALL·E 3 같은 서비스는 유료 또는 매우 제한적인 무료 기능을 제공하는 반면, Grok Imagine은 무료 사용자에게도 이미지 생성 기회를 제공합니다. (단, 비디오 생성은 제한적일 수 있습니다.)\n뛰어난 속도: 일론 머스크의 주장에 따르면, 경쟁사들이 이미지 1개를 생성하는 시간에 Grok Imagine은 비디오를 생성할 수 있을 정도로 빠르다고 합니다. 실제로 써보니 체감 속도가 꽤 빨랐습니다.\nX 플랫폼 통합: X(구 트위터) 앱 내에서 바로 콘텐츠를 생성하고 공유할 수 있어 사용이 매우 편리합니다.\n단점\n품질 한계: 아직까지는 Google Veo 3나 OpenAI Sora 같은 최상위 모델과 비교했을 때 비디오 품질이 다소 떨어진다는 평가가 있습니다. 하지만 계속 개선될 것이라고 믿습니다.\n지역 제한: 아쉽게도 일부 기능은 현재 미국에서만 사용 가능합니다. 빨리 전 세계로 확장되기를 바라는 마음입니다.\n안전성 우려: \"Spicy 모드\"로 인해 부적절한 콘텐츠가 생성될 가능성이 있다는 우려도 제기되고 있습니다. 사용 시 주의가 필요해요.\n\n\n⚠️ 주의: Grok Imagine의 'Spicy 모드'는 성인 콘텐츠 생성이 가능합니다. 이 기능은 신중하게 사용해야 하며, 부적절한 콘텐츠를 생성하거나 공유하지 않도록 각별히 유의해주세요.\n  Grok Imagine, 이렇게 사용하면 돼요! (초보자 가이드)\n자, 이제 Grok Imagine을 직접 사용해볼 차례입니다. 어렵지 않으니, 저와 함께 차근차근 따라 해 볼까요?\n1. 앱 설치 및 설정\niOS App Store 또는 Google Play Store에서 \"Grok\"을 검색하여 설치합니다.\nX(구 트위터) 계정으로 간편하게 로그인할 수 있습니다.\n최신 버전으로 업데이트되어 있는지 확인하는 것이 중요합니다.\n2. 이미지 생성하기\n앱 상단에 있는 \"Imagine\" 탭을 선택합니다.\n\"Type to Imagine\" 입력창에 여러분이 상상하는 이미지를 텍스트로 자세히 입력합니다. (프롬프트 작성법은 아래에서 더 자세히 다룰게요!)\n원하는 생성 모드(Normal, Fun, Custom, Spicy)를 선택합니다.\n몇 초만 기다리면 AI가 생성한 멋진 이미지 결과물을 확인할 수 있습니다.\n화면을 스크롤하면 추가적인 변형 이미지들이 자동으로 생성되니, 마음에 드는 이미지가 나올 때까지 계속 찾아볼 수 있습니다.\n3. 비디오 생성하기\n생성된 이미지 하단의 \"Make Video\" 버튼을 클릭합니다.\n또는 기존 이미지를 업로드한 후 비디오 변환 기능을 이용할 수도 있습니다.\nGrok Imagine이 6~15초 길이의 루핑 비디오를 생성해줍니다. 오디오 트랙 포함 여부는 사용 환경에 따라 다를 수 있습니다.\n생성된 비디오는 바로 공유하거나 다운로드하여 다양한 곳에 활용할 수 있습니다.\n  활용 팁과 모범 사례로 더 멋진 결과물 만들기\nAI 이미지 생성 도구는 프롬프트가 핵심입니다. 어떤 명령어를 입력하느냐에 따라 결과물의 퀄리티가 천차만별로 달라지죠. 저도 처음에는 시행착오를 많이 겪었는데, 몇 가지 팁만 알아도 정말 만족스러운 결과물을 얻을 수 있습니다.\n효과적인 프롬프트 작성법\n구체적이고 상세한 설명: \"고양이\"보다는 \"파란 눈을 가진 흰 털의 페르시안 고양이가 햇살이 비치는 창가에 앉아있는 모습, 털 한 올 한 올이 선명하게 보이는 하이퍼리얼리스틱 스타일\"처럼 최대한 자세히 묘사할수록 AI가 여러분의 의도를 정확히 파악합니다.\n스타일 키워드 포함: \"hyperrealistic\", \"anime style\", \"watercolor painting\", \"pixel art\" 등 원하는 시각적 스타일을 명시하면 결과물의 분위기를 쉽게 조절할 수 있습니다.\n조명과 구도 명시: \"golden hour lighting\", \"close-up portrait\", \"wide angle shot\", \"dramatic lighting\" 등 조명과 카메라 구도를 구체적으로 언급하여 더욱 전문적인 결과물을 만들어 보세요.\n무료 사용량 최적화 전략\n무료 사용 한도를 최대한 효율적으로 활용하는 것도 중요하겠죠? 몇 가지 전략을 소개해 드릴게요.\n배치 프롬프트 활용: 여러 아이디어를 하나의 프롬프트에 결합하거나, 한 번에 여러 개의 이미지를 요청하여 효율성을 높일 수 있습니다.\n시간대 고려: 사용량이 적은 시간대(예: 심야 시간)에 집중적으로 사용하는 것도 하나의 방법입니다.\n우선순위 설정: 중요한 작업을 위해 한도를 미리 보존해두는 습관을 들이세요. 급하게 필요한 이미지가 있다면 먼저 생성하는 거죠.\n\n\n  Grok Imagine의 빛나는 미래, 다음은 무엇일까?\nxAI는 Grok Imagine이 \"거의 매일 개선될 것\"이라고 발표했습니다. 이 말은 즉, 현재의 장점은 더욱 강화되고, 단점은 빠르게 보완될 것이라는 희망적인 메시지라고 생각합니다. 저도 매일매일 어떤 새로운 기능이 추가될지 기대가 큽니다.\n예정된 기능\n더 긴 비디오 생성: 현재 15초 길이에 만족하지 않고, 더욱 긴 길이의 비디오를 생성할 수 있도록 확장될 예정입니다. (텍스트-투-비디오 기능 확장도 2025년 10월에 예정되어 있습니다.) 짧은 영상 콘텐츠 제작에는 아주 큰 도움이 될 거예요.\n웹 버전 출시: 현재는 모바일 앱 전용이지만, 조만간 웹 브라우저에서도 Grok Imagine을 이용할 수 있게 되어 접근성이 더욱 높아질 것으로 보입니다.\n고급 편집 도구: 인페인팅(inpainting)이나 아웃페인팅(outpainting) 같은 고급 이미지 수정 기능들이 추가될 예정입니다. 이는 전문가들에게 특히 반가운 소식일 겁니다.\n커스텀 스타일 훈련: 사용자가 원하는 특정 스타일을 AI에 학습시켜 자신만의 고유한 스타일로 이미지를 생성할 수 있는 fine-tuning 기능도 기대됩니다.\n글로벌 확장\n현재 일부 기능이 미국에 한정되어 있어 아쉬움을 느끼는 분들이 많을 텐데요. xAI는 전 세계 사용자로의 확장을 적극적으로 추진하고 있습니다. 머지않아 한국 사용자들도 모든 기능을 제한 없이 이용할 수 있을 것으로 전망되니, 조금만 더 기다려봐야 할 것 같아요.\n  핵심 요약\n1. 제한적인 무료 이미지 생성 기회: 무료 사용자에게 이미지 생성 기회를 제공하지만, 비디오 생성은 매우 제한적이거나 유료 구독이 필요할 수 있습니다.\n2. Aurora 모델 기반: xAI의 독자 기술로 사실적인 렌더링과 정확한 명령 수행이 가능.\n3. 이미지-비디오 변환 기능: 정적인 이미지를 15초 길이의 비디오로 변환하며, 오디오 트랙 포함 여부는 사용 환경에 따라 다를 수 있습니다.\n4. X 플랫폼 통합 및 빠른 속도: X 앱 내에서 편리하게 생성 및 공유, 경쟁사 대비 뛰어난 생성 속도.\n*본 내용은 2025년 9월 26일 기준 최신 정보를 바탕으로 작성되었습니다.\n❓ 자주 묻는 질문 (FAQ)\nGrok Imagine에 대해 자주 묻는 질문들을 모아봤습니다. 궁금증 해결에 도움이 되길 바랍니다.\nGrok Imagine은 완전히 무료인가요?\nGrok Imagine은 무료 사용자에게 이미지 생성 기회를 제공합니다. 하지만 비디오 생성은 매우 제한적이거나, 대기 목록 등록 또는 유료 구독이 필요할 수 있습니다. 이미지 생성의 경우, 2시간마다 한도가 재설정되는 롤링 윈도우 방식이 적용되지만, 일일 총 생성 한도는 제한될 수 있습니다. 더 많은 기능과 높은 한도를 원한다면 유료 구독 플랜을 이용할 수 있습니다.\nGrok Imagine으로 생성된 비디오는 어느 정도 길이인가요?\n현재 Grok Imagine은 최대 15초 길이의 루핑 비디오를 생성할 수 있습니다. 오디오 트랙 포함 여부는 사용 환경에 따라 다를 수 있습니다. xAI는 앞으로 더 긴 길이의 비디오 생성 기능도 추가할 예정이라고 합니다.\nGrok Imagine을 사용하려면 X(구 트위터) 계정이 필수인가요?\n네, Grok Imagine은 X 앱 내에서 서비스되는 도구이므로, X 계정을 통한 로그인이 필수입니다. X 계정만 있다면 누구나 쉽게 Grok Imagine을 시작할 수 있습니다.\nGrok Imagine은 AI 이미지 및 비디오 생성 분야에서 접근성과 혁신을 동시에 실현한 정말 주목할 만한 도구라고 생각합니다. 특히 무료 사용자에게도 이미지 생성 기회를 제공하며, 15초 길이의 비디오 생성(오디오 트랙 포함 여부는 환경에 따라 다름)이 가능하다는 점은 매력적이죠.\n물론 품질 면에서는 Google Veo 3나 OpenAI Sora 같은 최상위 경쟁사 대비 아직 개선의 여지가 있는 것이 사실입니다. 하지만 제한적인 무료 이미지 접근성, 빠른 생성 속도, X 플랫폼과의 완벽한 통합이라는 강력한 장점 덕분에 많은 사용자들의 관심을 한몸에 받고 있습니다. 제 생각엔 창작자, 학생, 그리고 소규모 비즈니스 운영자들에게는 정말 비용 효율적인 훌륭한 대안이 될 수 있을 거예요.\nxAI의 발표처럼 Grok Imagine은 \"거의 매일 개선될 것\"이라고 하니, 앞으로 어떤 놀라운 업데이트가 이루어질지 정말 기대가 큽니다. 이미지 생성은 무료로 시작할 수 있는 만큼, AI 이미지 및 비디오 생성에 관심 있는 분들이라면 주저하지 말고 지금 바로 Grok Imagine을 경험해보시길 강력히 추천합니다! 여러분의 상상력을 마음껏 펼쳐보세요.\n⁂",
        "guid": "http://muzbox.tistory.com/483660",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "AI 비디오 생성",
          "AI 이미지 생성",
          "ai 콘텐츠 제작",
          "Aurora 모델",
          "Grok Imagine",
          "Grok 앱",
          "XAI",
          "무료 ai 툴",
          "일론 머스크 ai",
          "텍스트-비디오 변환"
        ],
        "isoDate": "2025-09-26T01:51:53.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "챗GPT 품은 카톡 업데이트, 2025년 10월 예정!",
        "link": "http://muzbox.tistory.com/483659",
        "pubDate": "Tue, 23 Sep 2025 15:51:43 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483659#entry483659comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #3c4043;\">\n<div style=\"background-color: #e8f4fd; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\">\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">드디어 기다리던 소식이 현실이 되었습니다! 한국인의 필수 앱 카카오톡이 2025년 10월, 챗GPT(GPT-5 기반)와 자체 AI '카나나'를 품고 대대적인 변신을 예고했어요. 단순한 메신저를 넘어, AI 비서와 소셜 플랫폼으로 진화하는 카카오톡의 혁신적인 변화와 함께 5천만 사용자의 일상이 어떻게 달라질지, 그리고 프라이버시는 안전하게 지켜질지 자세히 알아볼게요. AI 시대, '카톡해'의 의미가 완전히 새로워질 거예요!</p>\n</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1200\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/dXMAAL/btsQL8lP28a/ZVHaGTzhUlYI5HB91uVEiK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dXMAAL/btsQL8lP28a/ZVHaGTzhUlYI5HB91uVEiK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dXMAAL/btsQL8lP28a/ZVHaGTzhUlYI5HB91uVEiK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdXMAAL%2FbtsQL8lP28a%2FZVHaGTzhUlYI5HB91uVEiK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"카카오톡 화면에 챗GPT와 카나나 AI 아이콘이 통합되어 빛나는 모습, 미래 기술을 상징하는 추상적인 푸른빛과 데이터 흐름이 배경에 어우러져 한국인의 일상에 스며드는 AI 혁신을 표현\" loading=\"lazy\" width=\"600\" height=\"600\" data-filename=\"download.jpg\" data-origin-width=\"1200\" data-origin-height=\"1200\"/></span></figure>\n\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;한국인의 삶에 깊숙이 자리 잡은 카카오톡이 오는 2025년 10월, 챗GPT를 품고 대대적인 업데이트를 앞두고 있다는 소식입니다. 저도 이 소식을 듣고 정말 놀라지 않을 수 없었는데요, 단순한 AI 기능 추가를 넘어 카카오톡 15년 역사상 가장 큰 변화가 될 것이라고 하니, 그 내용이 더욱 궁금해집니다. 그럼 지금부터 이 혁신적인 업데이트가 우리의 일상을 어떻게 바꿀지, 그리고 주요 내용은 무엇인지 자세히 살펴보겠습니다.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>✨ 국내 최초 OpenAI 전략적 제휴의 빛나는 결실</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이번 카카오톡 업데이트는 단순한 기능 추가를 넘어, 카카오와 OpenAI가 8개월간 공들여 진행한 공동 개발 프로젝트의 최종 결과물이라고 해요. 특히 정신아 카카오 대표가 2025년 9월 23일 경기도 용인 카카오 AI 캠퍼스에서 열린 '이프 카카오(if(kakao) 2025)' 컨퍼런스에서 직접 발표하면서, 그 의미를 더했어요. 정신아 대표님은 이번 통합이 사용자 경험을 완전히 바꿔놓을 새로운 AI 서비스가 될 것이라고 강조했습니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">생각해보니, 카카오가 OpenAI와 전략적 제휴를 맺은 것이 벌써 2025년 2월 4일이었네요. 당시 샘 올트먼 OpenAI CEO와 정신아 카카오 대표가 함께 기자간담회에 참석해 'AI 서비스 대중화'라는 공동 목표를 밝히면서 큰 기대를 모았었죠. 이번 카카오톡과 챗GPT의 통합은 OpenAI가 국내 기업과 맺은 첫 번째 전략적 제휴의 구체적인 성과라는 점에서 정말 특별하다고 할 수 있습니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">최신 기술의 정점, GPT-5 기반 모델 적용</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">카카오톡에 탑재되는 챗GPT는 놀랍게도 OpenAI의 최신 모델인 <b>GPT-5</b>를 기반으로 한다고 합니다. 현재 일반 사용자들이 접하는 챗GPT보다 훨씬 더 발전된 기술력을 자랑하는데요, 텍스트와 이미지를 처리하고 생성하는 능력은 물론, 고도로 복잡한 맥락까지 인지하는 능력을 갖췄다고 해요. 올리버 제이 OpenAI 인터내셔널 비즈니스 총괄은 \"카카오톡은 한국에서 가족, 친구, 창작자, 기업이 연결되는 플랫폼이며, 이제 세계 최고 수준의 AI가 이 공간에 함께하게 됐다\"고 언급하며 이번 통합의 중요성을 다시 한번 강조했습니다.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">  <b>GPT-5의 주요 특징:</b>\n<ul style=\"list-style-type: disc; margin-left: 20px; padding: 0; color: #3c4043;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\">향상된 텍스트 및 이미지 처리/생성 능력</li>\n<li style=\"margin-bottom: 5px;\">더욱 정교해진 맥락 인지 능력</li>\n<li style=\"margin-bottom: 5px;\">현재 사용 가능한 모델 대비 혁신적인 성능 향상</li>\n</ul>\n</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  카카오톡 15년 만의 대대적 개편, 그 핵심은?</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이번 AI 통합은 카카오톡이 지난 15년간 쌓아온 역사를 뛰어넘는 대대적인 개편을 동반합니다. 단순히 AI 기능을 추가하는 것을 넘어, 카카오톡의 기본적인 사용 방식 자체를 혁신적으로 변화시킬 예정이라고 해요. 저는 이 부분이 정말 기대되더라고요!</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">채팅탭 상단의 'ChatGPT' 버튼 신설</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">가장 눈에 띄는 변화는 바로 카카오톡 채팅탭 상단에 생기는 <b>'ChatGPT' 버튼</b>입니다. 별도의 앱을 설치할 필요 없이, 이 버튼 하나만 누르면 바로 챗GPT를 이용할 수 있다고 해요. 그리고 여기서 생성된 대화 내용이나 콘텐츠는 채팅방에 즉시 공유할 수 있어서, 친구들과 대화하다가 궁금한 점이 생기면 바로 AI의 도움을 받고 그 결과를 공유하는 방식으로 활용할 수 있을 것 같아요. 유용하 카카오 AI에이전트플랫폼 성과리더는 \"모든 기능이 대화 안에서 자연스럽게 연결되는 새로운 사용자 경험\"이라고 설명했답니다. 상상만 해도 편리함이 느껴지지 않나요?</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/cONjrS/btsQLioJ2kT/jc3lBc0F6ZZWSOVRV4xkB1/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/cONjrS/btsQLioJ2kT/jc3lBc0F6ZZWSOVRV4xkB1/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/cONjrS/btsQLioJ2kT/jc3lBc0F6ZZWSOVRV4xkB1/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcONjrS%2FbtsQLioJ2kT%2Fjc3lBc0F6ZZWSOVRV4xkB1%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"스마트폰 카카오톡 채팅 목록 상단에 'ChatGPT' 버튼이 새로 생긴 화면. AI에 '성수동 카페 추천해줘'라고 질문하자 카카오맵 링크와 함께 카페를 추천하는 AI 답변이 채팅창에 나타난다.\" loading=\"lazy\" width=\"675\" height=\"450\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">카카오 에이전트를 통한 생태계 통합</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">여기서 끝이 아닙니다. 단순히 AI 채팅을 넘어, 챗GPT가 <b>카카오 에이전트</b>를 통해 카카오 생태계 전반과 연동되는 것이 이번 통합의 진정한 핵심이라고 할 수 있어요. 예를 들어, \"성수동 카페 추천해줘\"라고 물어보면 AI가 알아서 카카오맵을 열어주고, \"엄마 생일 선물로 뭐가 좋을까?\"라는 질문에는 선물하기 서비스로 연결되어 바로 결제까지 할 수 있게 됩니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">멜론과 연동되어 인기 노래 차트 정보를 제공하거나, 카카오 예약하기를 통해 식당 예약까지 한 번에 처리하는 것도 가능하다고 하니, 이건 정말 혁신적인 변화라고 생각해요. 이러한 통합 서비스는 앞으로 카카오 계열사뿐만 아니라 공공기관, 외부 파트너들까지 참여하는 대규모 AI 서비스 생태계 플랫폼으로 확장될 예정이라고 하니, 미래의 카카오톡이 정말 기대됩니다.</p>\n<div style=\"background-color: #fce8e6; border-left: 4px solid #d93025; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">⚠️ <b>주의 사항:</b> 새로운 기능들이 편리함을 제공하지만, AI가 제공하는 정보는 최종 확인이 필요할 수 있습니다. 특히 결제나 예약과 관련된 중요한 결정은 반드시 직접 재확인하는 습관을 들이는 것이 좋겠죠!</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  자체 AI 카나나와의 강력한 시너지 효과</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">카카오가 OpenAI와의 협력을 추진하면서 동시에 자체 개발한 AI 서비스 <b>'카나나(Kanana)'</b>도 카카오톡에 통합된다는 점은 정말 주목할 만한 부분이에요. 특히, 카나나는 사용자 데이터의 프라이버시를 최우선으로 고려한 \"온디바이스 AI\" 기술을 적용했다고 합니다. 이 기술이 왜 중요할까요?</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1093\" data-origin-height=\"802\"><span data-url=\"https://blog.kakaocdn.net/dn/cnpw2u/btsQMDFGgn3/66gjEK8orIdHKfV023Ph31/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cnpw2u/btsQMDFGgn3/66gjEK8orIdHKfV023Ph31/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cnpw2u/btsQMDFGgn3/66gjEK8orIdHKfV023Ph31/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcnpw2u%2FbtsQMDFGgn3%2F66gjEK8orIdHKfV023Ph31%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"카카오와 OPEN AI 통합 타임라인\" loading=\"lazy\" width=\"1093\" height=\"802\" data-origin-width=\"1093\" data-origin-height=\"802\"/></span></figure>\n\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">온디바이스 AI로 프라이버시를 한층 강화</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">온디바이스 AI는 스마트폰 내에서만 작동하는 AI 기술을 의미해요. 즉, 사용자의 민감한 대화 데이터가 외부 서버로 전송되지 않고, 오직 사용자 스마트폰 안에서만 처리된다는 것이죠. 강지훈 카카오 AI디스커버리 성과리더는 \"카카오톡 속 대화는 언제나 개인 정보라는 원칙 아래 보호되어야 한다\"며, 데이터를 외부 서버로 보내지 않는 '카나나 나노'를 직접 개발했다고 설명했습니다. 개인 정보 보호에 대한 우려가 많았던 만큼, 이런 점은 정말 환영할 만한 소식입니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">세계 최고 수준의 한국어 이해력</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">카나나의 또 다른 강점은 바로 <b>세계 최고 수준의 한국어 이해력</b>입니다. 21억 파라미터 기준으로 대형 모델의 약 95% 수준 성능을 구현하면서도, 같은 크기의 글로벌 모델 대비 맥락 감지 능력에서 40% 이상 우위를 보인다고 해요. 게다가 카나나 나노 모델은 676MB라는 경량화된 크기 덕분에 와이파이 환경에서 단 18초 만에 다운로드가 가능하다고 합니다. 카카오의 목표는 올 연말까지 전체 카카오톡 사용자의 절반 이상이 온디바이스 AI를 사용할 수 있도록 하는 것이라고 해요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">카나나는 복잡한 다자간 대화 속에서도 맥락을 정확히 파악하여 적절한 에이전트를 실행할 수 있어요. 예를 들어 대화 요약, 통화 녹음 및 요약, 숏폼 자동 생성, 그리고 기존 샵(#)검색을 대체하는 '카나나 검색' 등 정말 다양한 기능을 제공한다고 하니, 우리의 스마트폰 생활이 훨씬 더 스마트해질 것 같다는 기대감이 듭니다.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/bYYiGo/btsQKHCIZ7D/obtALGf0Kvo3xpV38GVmY0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bYYiGo/btsQKHCIZ7D/obtALGf0Kvo3xpV38GVmY0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bYYiGo/btsQKHCIZ7D/obtALGf0Kvo3xpV38GVmY0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbYYiGo%2FbtsQKHCIZ7D%2FobtALGf0Kvo3xpV38GVmY0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"온디바이스 AI의 개념을 시각적으로 표현한 이미지. 스마트폰 아이콘이 중앙에 있고, 보호막이 둘러싸고 있다. 데이터 흐름이 스마트폰 내부에서만 처리되고 외부로 유출되지 않는 모습을 나타낸다.\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"download.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  메신저 기능의 혁신적 개편: 더 편리하고 소셜하게!</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">AI 통합 외에도 카카오톡은 기본적인 메신저 기능에서도 15년 만의 대대적인 변화를 겪습니다. 저는 개인적으로 이런 사용자 편의성 개선을 정말 오랫동안 기다려왔던 터라 이번 소식이 더욱 반가웠어요.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">사용자 편의성 대폭 향상</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">가장 큰 변화 중 하나는 바로 <b>채팅방 폴더 기능</b> 도입입니다. 이제 사용자들은 채팅방을 '안읽음', '친구', '직장' 등 원하는 카테고리별로 분류할 수 있게 돼요. 저처럼 채팅방이 너무 많아서 중요한 메시지를 놓치기 쉬웠던 분들에게는 정말 희소식일 것 같습니다. 또한, 많은 분들이 요구했던 <b>메시지 수정 기능</b>이 드디어 추가된다고 합니다! 지난 8월 메시지 삭제 기능을 24시간으로 연장한 데 이어, 이번 수정 기능까지 더해지면서 사용자 편의성이 정말 크게 향상되었어요. 그리고 안읽음 폴더에서 채팅방을 아래로 당기면 안 읽은 메시지를 미리 볼 수 있는 기능도 새롭게 추가된다고 하니, 사소한 디테일까지 신경 쓴 모습이 엿보입니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">SNS 기능 강화로 소셜 플랫폼 진화</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">친구탭은 인스타그램처럼 <b>타임라인 피드</b> 기능으로 개편되어, 친구들의 게시물을 확인하고 일상을 공유할 수 있는 소셜 미디어 플랫폼으로 진화합니다. 새로운 '지금탭'도 추가된다고 하니, 카카오톡이 단순한 메신저를 넘어 종합 소셜 플랫폼으로 확실히 자리매김할 것 같아요. 이제 친구들과의 소통이 더욱 다채로워지겠네요!</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  AI 시대를 앞서가는 카카오의 전략적 의미</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">정신아 대표는 \"오늘을 시작으로 카카오톡 대화창은 더 많은 것이 실현되는 '가능성의 창'이 될 것\"이라며, \"'카톡해'라는 말은 이제 단순히 '메시지 보내'라는 뜻을 넘어, 카카오 AI를 통해 더 큰 세상을 경험한다는 새로운 의미로 해석될 것\"이라고 강조했습니다. 저도 그 말에 깊이 공감합니다. 생각해보면, 한국 인구의 대부분인 5천만 카카오톡 사용자가 별도 학습 없이도 일상에서 자연스럽게 최첨단 AI 기술을 경험할 수 있게 되는 것이니까요. OpenAI의 올리버 제이 총괄 역시 \"한국인의 일상에 세계적 수준의 AI를 심게 되었다\"고 평가했습니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">글로벌 AI 생태계에서의 차별화</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이번 카카오와 OpenAI의 협력은 단순히 기술을 도입하는 것을 넘어, <b>한국 시장에 최적화된 AI 경험</b>을 제공한다는 점에서 정말 큰 의미가 있다고 봐요. 카카오가 오랜 시간 동안 쌓아온 한국 사용자 데이터와 서비스 경험이 OpenAI의 최첨단 기술과 결합하여, 글로벌 AI 서비스들과 차별화된, 현지화된 서비스를 구현했다는 점이죠. 미그다드 제퍼 OpenAI 프로덕트 매니저는 \"카카오와의 협력은 글로벌 기술과 로컬 리더십을 결합하는 의미 있는 사례\"라고 평가하며, 앞으로 AI 생태계 전반에서 협력을 확대할 계획이라고 밝혔습니다.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  보안과 프라이버시에 대한 카카오의 깊은 고민</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">아무래도 AI가 우리 일상에 깊숙이 들어오는 만큼, 보안과 프라이버시 문제는 민감할 수밖에 없죠. 카카오는 이 부분에 대해서도 명확한 가이드라인을 제시했습니다. 정신아 대표는 \"<b>카카오톡 데이터는 ChatGPT에 학습되지 않고 서버에 저장되지 않는다</b>\"고 강조하며, 사용자 프라이버시 보호를 위한 기술적 조치를 완료했다고 밝혔어요. 이 부분은 정말 중요하다고 생각해요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">특히 자체 개발한 카나나의 경우, 앞서 설명드렸던 온디바이스 AI 기술을 적용해서 <b>모든 정보가 카카오톡 내부에서만 처리</b>되도록 설계되었어요. 클라우드 서버에 연결할 필요 없이 안전하게 AI 서비스를 위한 데이터를 처리할 수 있다는 점이 정말 안심이 됩니다. 우리가 가장 많이 사용하는 메신저 앱인 만큼, 이런 보안 조치들은 필수적이라고 할 수 있습니다.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  향후 전망과 카카오의 야심찬 확장 계획</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">카카오는 2025년 10월 챗GPT 서비스 시작을 시작으로, 연말까지 카나나 인 카카오톡의 다양한 기능들을 순차적으로 출시할 예정이라고 해요. 김병학 카나나 성과리더는 \"카카오톡뿐 아니라 다양한 카카오 서비스에서 카나나 모델을 자연스럽게 경험하게 될 것\"이라며, \"에이전틱 AI 연구를 통해 일상을 보다 편리하게 변화시키겠다\"는 포부를 밝혔습니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">'AI 네이티브 컴퍼니'로의 전환 가속화</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이번 OpenAI와의 협업은 카카오가 그동안 추진해온 <b>'AI 네이티브 컴퍼니'</b> 전환 전략의 핵심 축입니다. 카카오는 자체 개발한 AI 모델과 외부의 우수한 API를 적재적소에 활용하는 <b>'모델 오케스트레이션'</b> 전략을 통해 사용자에게 최상의 서비스를 제공하려 노력하고 있어요. 정신아 대표는 \"하반기를 기점으로 전 국민이 매일 AI를 카카오톡을 접점으로 경험할 수 있도록 하겠다\"며 \"카카오톡과 연결된 다양한 AI 서비스를 순차적으로 출시해 전 국민 AI 시대를 열겠다\"고 힘주어 말했습니다. 이 포부를 들으니, 앞으로 카카오가 만들어갈 AI 기반의 새로운 세상이 정말 궁금해집니다.</p>\n<div style=\"background-color: #f8f9fa; border: 1px solid #dadce0; border-radius: 8px; padding: 25px; margin: 40px 0; box-shadow: 0 4px 12px rgba(0,0,0,0.1);\">\n<div style=\"font-size: 26px; color: #1a73e8; font-weight: bold; margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid #1a73e8;\">  핵심 요약</div>\n<ul style=\"list-style-type: none; padding: 0; margin: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 15px; font-size: 17px;\"><b>✔️ 2025년 10월, 카카오톡에 챗GPT (GPT-5 기반)와 카나나 AI 전격 통합:</b> 5천만 사용자의 일상에 AI가 자연스럽게 스며듭니다.</li>\n<li style=\"margin-bottom: 15px; font-size: 17px;\"><b>✔️ 카카오 에이전트 통한 생태계 연동:</b> 카카오맵, 선물하기, 멜론 등 다양한 카카오 서비스와 AI가 직접 연결됩니다.</li>\n<li style=\"margin-bottom: 15px; font-size: 17px;\"><b>✔️ 온디바이스 AI '카나나'로 강력한 프라이버시 보호:</b> 사용자 데이터가 외부 서버로 전송되지 않고 스마트폰 내에서만 처리됩니다.</li>\n<li style=\"margin-bottom: 0; font-size: 17px;\"><b>✔️ 메신저 기능 대대적 개편:</b> 채팅방 폴더, 메시지 수정, SNS형 피드 등 사용자 편의성과 소셜 기능이 크게 강화됩니다.</li>\n</ul>\n<div style=\"margin-top: 25px; padding-top: 15px; border-top: 1px dashed #dadce0; font-size: 14px; color: #5f6368;\">이 모든 변화는 카카오톡을 단순한 메신저를 넘어, 개인화된 AI 비서이자 종합적인 소셜 플랫폼으로 진화시키려는 카카오의 큰 그림입니다. 기대해도 좋겠죠?</div>\n</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>❓ 자주 묻는 질문 (FAQ)</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>Q1: 챗GPT가 카카오톡에 언제부터 적용되나요?</b></p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A1: 2025년 10월부터 단계적으로 적용될 예정입니다. 카카오는 연말까지 다양한 AI 기능을 순차적으로 출시하며, 카카오톡 사용자들의 AI 경험을 확대할 계획입니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>Q2: 카카오톡에 적용되는 AI 모델은 무엇인가요?</b></p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A2: OpenAI의 최신 모델인 GPT-5와 카카오가 자체 개발한 온디바이스 AI '카나나(Kanana)'가 함께 적용됩니다. GPT-5는 범용적인 대화 및 콘텐츠 생성에, 카나나는 특히 한국어 기반의 개인화된 온디바이스 AI 기능에 강점을 보입니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>Q3: 사용자 개인 정보는 안전하게 보호되나요?</b></p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A3: 네, 카카오는 사용자 프라이버시 보호를 최우선으로 합니다. 카카오톡 대화 데이터는 챗GPT 학습에 사용되지 않으며, 서버에 저장되지 않습니다. 특히 자체 개발한 카나나 AI는 온디바이스 기술을 통해 모든 정보가 사용자 스마트폰 내에서만 처리되도록 설계되었습니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><b>Q4: AI 기능 외에 카카오톡 메신저 기능에도 변화가 있나요?</b></p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A4: 네, 챗GPT 통합과 함께 채팅방 폴더 기능, 메시지 수정 기능이 추가됩니다. 또한, 친구탭이 인스타그램과 유사한 타임라인 피드 형태로 개편되어 소셜 기능이 강화되는 등 15년 만의 대대적인 메신저 기능 개편이 이루어질 예정입니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">카카오와 OpenAI의 이번 통합은 한국 AI 산업의 새로운 이정표가 될 것으로 전망됩니다. 5천만 사용자가 일상에서 자연스럽게 AI를 경험하게 되면서, AI 기술의 대중화와 함께 새로운 디지털 생태계의 시작을 알리는 신호탄이 될 거예요. 저는 정말 기대가 큽니다!</p>\n</div>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"챗GPT가 카카오톡에 언제부터 적용되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"2025년 10월부터 단계적으로 적용될 예정입니다. 카카오는 연말까지 다양한 AI 기능을 순차적으로 출시하며, 카카오톡 사용자들의 AI 경험을 확대할 계획입니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오톡에 적용되는 AI 모델은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"OpenAI의 최신 모델인 GPT-5와 카카오가 자체 개발한 온디바이스 AI '카나나(Kanana)'가 함께 적용됩니다. GPT-5는 범용적인 대화 및 콘텐츠 생성에, 카나나는 특히 한국어 기반의 개인화된 온디바이스 AI 기능에 강점을 보입니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"사용자 개인 정보는 안전하게 보호되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 카카오는 사용자 프라이버시 보호를 최우선으로 합니다. 카카오톡 대화 데이터는 챗GPT 학습에 사용되지 않으며, 서버에 저장되지 않습니다. 특히 자체 개발한 카나나 AI는 온디바이스 기술을 통해 모든 정보가 사용자 스마트폰 내에서만 처리되도록 설계되었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI 기능 외에 카카오톡 메신저 기능에도 변화가 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 챗GPT 통합과 함께 채팅방 폴더 기능, 메시지 수정 기능이 추가됩니다. 또한, 친구탭이 인스타그램과 유사한 타임라인 피드 형태로 개편되어 소셜 기능이 강화되는 등 15년 만의 대대적인 메신저 기능 개편이 이루어질 예정입니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "드디어 기다리던 소식이 현실이 되었습니다! 한국인의 필수 앱 카카오톡이 2025년 10월, 챗GPT(GPT-5 기반)와 자체 AI '카나나'를 품고 대대적인 변신을 예고했어요. 단순한 메신저를 넘어, AI 비서와 소셜 플랫폼으로 진화하는 카카오톡의 혁신적인 변화와 함께 5천만 사용자의 일상이 어떻게 달라질지, 그리고 프라이버시는 안전하게 지켜질지 자세히 알아볼게요. AI 시대, '카톡해'의 의미가 완전히 새로워질 거예요!\n\n\n 한국인의 삶에 깊숙이 자리 잡은 카카오톡이 오는 2025년 10월, 챗GPT를 품고 대대적인 업데이트를 앞두고 있다는 소식입니다. 저도 이 소식을 듣고 정말 놀라지 않을 수 없었는데요, 단순한 AI 기능 추가를 넘어 카카오톡 15년 역사상 가장 큰 변화가 될 것이라고 하니, 그 내용이 더욱 궁금해집니다. 그럼 지금부터 이 혁신적인 업데이트가 우리의 일상을 어떻게 바꿀지, 그리고 주요 내용은 무엇인지 자세히 살펴보겠습니다.\n✨ 국내 최초 OpenAI 전략적 제휴의 빛나는 결실\n이번 카카오톡 업데이트는 단순한 기능 추가를 넘어, 카카오와 OpenAI가 8개월간 공들여 진행한 공동 개발 프로젝트의 최종 결과물이라고 해요. 특히 정신아 카카오 대표가 2025년 9월 23일 경기도 용인 카카오 AI 캠퍼스에서 열린 '이프 카카오(if(kakao) 2025)' 컨퍼런스에서 직접 발표하면서, 그 의미를 더했어요. 정신아 대표님은 이번 통합이 사용자 경험을 완전히 바꿔놓을 새로운 AI 서비스가 될 것이라고 강조했습니다.\n생각해보니, 카카오가 OpenAI와 전략적 제휴를 맺은 것이 벌써 2025년 2월 4일이었네요. 당시 샘 올트먼 OpenAI CEO와 정신아 카카오 대표가 함께 기자간담회에 참석해 'AI 서비스 대중화'라는 공동 목표를 밝히면서 큰 기대를 모았었죠. 이번 카카오톡과 챗GPT의 통합은 OpenAI가 국내 기업과 맺은 첫 번째 전략적 제휴의 구체적인 성과라는 점에서 정말 특별하다고 할 수 있습니다.\n최신 기술의 정점, GPT-5 기반 모델 적용\n카카오톡에 탑재되는 챗GPT는 놀랍게도 OpenAI의 최신 모델인 GPT-5를 기반으로 한다고 합니다. 현재 일반 사용자들이 접하는 챗GPT보다 훨씬 더 발전된 기술력을 자랑하는데요, 텍스트와 이미지를 처리하고 생성하는 능력은 물론, 고도로 복잡한 맥락까지 인지하는 능력을 갖췄다고 해요. 올리버 제이 OpenAI 인터내셔널 비즈니스 총괄은 \"카카오톡은 한국에서 가족, 친구, 창작자, 기업이 연결되는 플랫폼이며, 이제 세계 최고 수준의 AI가 이 공간에 함께하게 됐다\"고 언급하며 이번 통합의 중요성을 다시 한번 강조했습니다.\n  GPT-5의 주요 특징:\n\n향상된 텍스트 및 이미지 처리/생성 능력\n더욱 정교해진 맥락 인지 능력\n현재 사용 가능한 모델 대비 혁신적인 성능 향상\n  카카오톡 15년 만의 대대적 개편, 그 핵심은?\n이번 AI 통합은 카카오톡이 지난 15년간 쌓아온 역사를 뛰어넘는 대대적인 개편을 동반합니다. 단순히 AI 기능을 추가하는 것을 넘어, 카카오톡의 기본적인 사용 방식 자체를 혁신적으로 변화시킬 예정이라고 해요. 저는 이 부분이 정말 기대되더라고요!\n채팅탭 상단의 'ChatGPT' 버튼 신설\n가장 눈에 띄는 변화는 바로 카카오톡 채팅탭 상단에 생기는 'ChatGPT' 버튼입니다. 별도의 앱을 설치할 필요 없이, 이 버튼 하나만 누르면 바로 챗GPT를 이용할 수 있다고 해요. 그리고 여기서 생성된 대화 내용이나 콘텐츠는 채팅방에 즉시 공유할 수 있어서, 친구들과 대화하다가 궁금한 점이 생기면 바로 AI의 도움을 받고 그 결과를 공유하는 방식으로 활용할 수 있을 것 같아요. 유용하 카카오 AI에이전트플랫폼 성과리더는 \"모든 기능이 대화 안에서 자연스럽게 연결되는 새로운 사용자 경험\"이라고 설명했답니다. 상상만 해도 편리함이 느껴지지 않나요?\n\n\n카카오 에이전트를 통한 생태계 통합\n여기서 끝이 아닙니다. 단순히 AI 채팅을 넘어, 챗GPT가 카카오 에이전트를 통해 카카오 생태계 전반과 연동되는 것이 이번 통합의 진정한 핵심이라고 할 수 있어요. 예를 들어, \"성수동 카페 추천해줘\"라고 물어보면 AI가 알아서 카카오맵을 열어주고, \"엄마 생일 선물로 뭐가 좋을까?\"라는 질문에는 선물하기 서비스로 연결되어 바로 결제까지 할 수 있게 됩니다.\n멜론과 연동되어 인기 노래 차트 정보를 제공하거나, 카카오 예약하기를 통해 식당 예약까지 한 번에 처리하는 것도 가능하다고 하니, 이건 정말 혁신적인 변화라고 생각해요. 이러한 통합 서비스는 앞으로 카카오 계열사뿐만 아니라 공공기관, 외부 파트너들까지 참여하는 대규모 AI 서비스 생태계 플랫폼으로 확장될 예정이라고 하니, 미래의 카카오톡이 정말 기대됩니다.\n⚠️ 주의 사항: 새로운 기능들이 편리함을 제공하지만, AI가 제공하는 정보는 최종 확인이 필요할 수 있습니다. 특히 결제나 예약과 관련된 중요한 결정은 반드시 직접 재확인하는 습관을 들이는 것이 좋겠죠!\n  자체 AI 카나나와의 강력한 시너지 효과\n카카오가 OpenAI와의 협력을 추진하면서 동시에 자체 개발한 AI 서비스 '카나나(Kanana)'도 카카오톡에 통합된다는 점은 정말 주목할 만한 부분이에요. 특히, 카나나는 사용자 데이터의 프라이버시를 최우선으로 고려한 \"온디바이스 AI\" 기술을 적용했다고 합니다. 이 기술이 왜 중요할까요?\n\n\n온디바이스 AI로 프라이버시를 한층 강화\n온디바이스 AI는 스마트폰 내에서만 작동하는 AI 기술을 의미해요. 즉, 사용자의 민감한 대화 데이터가 외부 서버로 전송되지 않고, 오직 사용자 스마트폰 안에서만 처리된다는 것이죠. 강지훈 카카오 AI디스커버리 성과리더는 \"카카오톡 속 대화는 언제나 개인 정보라는 원칙 아래 보호되어야 한다\"며, 데이터를 외부 서버로 보내지 않는 '카나나 나노'를 직접 개발했다고 설명했습니다. 개인 정보 보호에 대한 우려가 많았던 만큼, 이런 점은 정말 환영할 만한 소식입니다.\n세계 최고 수준의 한국어 이해력\n카나나의 또 다른 강점은 바로 세계 최고 수준의 한국어 이해력입니다. 21억 파라미터 기준으로 대형 모델의 약 95% 수준 성능을 구현하면서도, 같은 크기의 글로벌 모델 대비 맥락 감지 능력에서 40% 이상 우위를 보인다고 해요. 게다가 카나나 나노 모델은 676MB라는 경량화된 크기 덕분에 와이파이 환경에서 단 18초 만에 다운로드가 가능하다고 합니다. 카카오의 목표는 올 연말까지 전체 카카오톡 사용자의 절반 이상이 온디바이스 AI를 사용할 수 있도록 하는 것이라고 해요.\n카나나는 복잡한 다자간 대화 속에서도 맥락을 정확히 파악하여 적절한 에이전트를 실행할 수 있어요. 예를 들어 대화 요약, 통화 녹음 및 요약, 숏폼 자동 생성, 그리고 기존 샵(#)검색을 대체하는 '카나나 검색' 등 정말 다양한 기능을 제공한다고 하니, 우리의 스마트폰 생활이 훨씬 더 스마트해질 것 같다는 기대감이 듭니다.\n\n\n  메신저 기능의 혁신적 개편: 더 편리하고 소셜하게!\nAI 통합 외에도 카카오톡은 기본적인 메신저 기능에서도 15년 만의 대대적인 변화를 겪습니다. 저는 개인적으로 이런 사용자 편의성 개선을 정말 오랫동안 기다려왔던 터라 이번 소식이 더욱 반가웠어요.\n사용자 편의성 대폭 향상\n가장 큰 변화 중 하나는 바로 채팅방 폴더 기능 도입입니다. 이제 사용자들은 채팅방을 '안읽음', '친구', '직장' 등 원하는 카테고리별로 분류할 수 있게 돼요. 저처럼 채팅방이 너무 많아서 중요한 메시지를 놓치기 쉬웠던 분들에게는 정말 희소식일 것 같습니다. 또한, 많은 분들이 요구했던 메시지 수정 기능이 드디어 추가된다고 합니다! 지난 8월 메시지 삭제 기능을 24시간으로 연장한 데 이어, 이번 수정 기능까지 더해지면서 사용자 편의성이 정말 크게 향상되었어요. 그리고 안읽음 폴더에서 채팅방을 아래로 당기면 안 읽은 메시지를 미리 볼 수 있는 기능도 새롭게 추가된다고 하니, 사소한 디테일까지 신경 쓴 모습이 엿보입니다.\nSNS 기능 강화로 소셜 플랫폼 진화\n친구탭은 인스타그램처럼 타임라인 피드 기능으로 개편되어, 친구들의 게시물을 확인하고 일상을 공유할 수 있는 소셜 미디어 플랫폼으로 진화합니다. 새로운 '지금탭'도 추가된다고 하니, 카카오톡이 단순한 메신저를 넘어 종합 소셜 플랫폼으로 확실히 자리매김할 것 같아요. 이제 친구들과의 소통이 더욱 다채로워지겠네요!\n  AI 시대를 앞서가는 카카오의 전략적 의미\n정신아 대표는 \"오늘을 시작으로 카카오톡 대화창은 더 많은 것이 실현되는 '가능성의 창'이 될 것\"이라며, \"'카톡해'라는 말은 이제 단순히 '메시지 보내'라는 뜻을 넘어, 카카오 AI를 통해 더 큰 세상을 경험한다는 새로운 의미로 해석될 것\"이라고 강조했습니다. 저도 그 말에 깊이 공감합니다. 생각해보면, 한국 인구의 대부분인 5천만 카카오톡 사용자가 별도 학습 없이도 일상에서 자연스럽게 최첨단 AI 기술을 경험할 수 있게 되는 것이니까요. OpenAI의 올리버 제이 총괄 역시 \"한국인의 일상에 세계적 수준의 AI를 심게 되었다\"고 평가했습니다.\n글로벌 AI 생태계에서의 차별화\n이번 카카오와 OpenAI의 협력은 단순히 기술을 도입하는 것을 넘어, 한국 시장에 최적화된 AI 경험을 제공한다는 점에서 정말 큰 의미가 있다고 봐요. 카카오가 오랜 시간 동안 쌓아온 한국 사용자 데이터와 서비스 경험이 OpenAI의 최첨단 기술과 결합하여, 글로벌 AI 서비스들과 차별화된, 현지화된 서비스를 구현했다는 점이죠. 미그다드 제퍼 OpenAI 프로덕트 매니저는 \"카카오와의 협력은 글로벌 기술과 로컬 리더십을 결합하는 의미 있는 사례\"라고 평가하며, 앞으로 AI 생태계 전반에서 협력을 확대할 계획이라고 밝혔습니다.\n  보안과 프라이버시에 대한 카카오의 깊은 고민\n아무래도 AI가 우리 일상에 깊숙이 들어오는 만큼, 보안과 프라이버시 문제는 민감할 수밖에 없죠. 카카오는 이 부분에 대해서도 명확한 가이드라인을 제시했습니다. 정신아 대표는 \"카카오톡 데이터는 ChatGPT에 학습되지 않고 서버에 저장되지 않는다\"고 강조하며, 사용자 프라이버시 보호를 위한 기술적 조치를 완료했다고 밝혔어요. 이 부분은 정말 중요하다고 생각해요.\n특히 자체 개발한 카나나의 경우, 앞서 설명드렸던 온디바이스 AI 기술을 적용해서 모든 정보가 카카오톡 내부에서만 처리되도록 설계되었어요. 클라우드 서버에 연결할 필요 없이 안전하게 AI 서비스를 위한 데이터를 처리할 수 있다는 점이 정말 안심이 됩니다. 우리가 가장 많이 사용하는 메신저 앱인 만큼, 이런 보안 조치들은 필수적이라고 할 수 있습니다.\n  향후 전망과 카카오의 야심찬 확장 계획\n카카오는 2025년 10월 챗GPT 서비스 시작을 시작으로, 연말까지 카나나 인 카카오톡의 다양한 기능들을 순차적으로 출시할 예정이라고 해요. 김병학 카나나 성과리더는 \"카카오톡뿐 아니라 다양한 카카오 서비스에서 카나나 모델을 자연스럽게 경험하게 될 것\"이라며, \"에이전틱 AI 연구를 통해 일상을 보다 편리하게 변화시키겠다\"는 포부를 밝혔습니다.\n'AI 네이티브 컴퍼니'로의 전환 가속화\n이번 OpenAI와의 협업은 카카오가 그동안 추진해온 'AI 네이티브 컴퍼니' 전환 전략의 핵심 축입니다. 카카오는 자체 개발한 AI 모델과 외부의 우수한 API를 적재적소에 활용하는 '모델 오케스트레이션' 전략을 통해 사용자에게 최상의 서비스를 제공하려 노력하고 있어요. 정신아 대표는 \"하반기를 기점으로 전 국민이 매일 AI를 카카오톡을 접점으로 경험할 수 있도록 하겠다\"며 \"카카오톡과 연결된 다양한 AI 서비스를 순차적으로 출시해 전 국민 AI 시대를 열겠다\"고 힘주어 말했습니다. 이 포부를 들으니, 앞으로 카카오가 만들어갈 AI 기반의 새로운 세상이 정말 궁금해집니다.\n  핵심 요약\n✔️ 2025년 10월, 카카오톡에 챗GPT (GPT-5 기반)와 카나나 AI 전격 통합: 5천만 사용자의 일상에 AI가 자연스럽게 스며듭니다.\n✔️ 카카오 에이전트 통한 생태계 연동: 카카오맵, 선물하기, 멜론 등 다양한 카카오 서비스와 AI가 직접 연결됩니다.\n✔️ 온디바이스 AI '카나나'로 강력한 프라이버시 보호: 사용자 데이터가 외부 서버로 전송되지 않고 스마트폰 내에서만 처리됩니다.\n✔️ 메신저 기능 대대적 개편: 채팅방 폴더, 메시지 수정, SNS형 피드 등 사용자 편의성과 소셜 기능이 크게 강화됩니다.\n이 모든 변화는 카카오톡을 단순한 메신저를 넘어, 개인화된 AI 비서이자 종합적인 소셜 플랫폼으로 진화시키려는 카카오의 큰 그림입니다. 기대해도 좋겠죠?\n❓ 자주 묻는 질문 (FAQ)\nQ1: 챗GPT가 카카오톡에 언제부터 적용되나요?\nA1: 2025년 10월부터 단계적으로 적용될 예정입니다. 카카오는 연말까지 다양한 AI 기능을 순차적으로 출시하며, 카카오톡 사용자들의 AI 경험을 확대할 계획입니다.\nQ2: 카카오톡에 적용되는 AI 모델은 무엇인가요?\nA2: OpenAI의 최신 모델인 GPT-5와 카카오가 자체 개발한 온디바이스 AI '카나나(Kanana)'가 함께 적용됩니다. GPT-5는 범용적인 대화 및 콘텐츠 생성에, 카나나는 특히 한국어 기반의 개인화된 온디바이스 AI 기능에 강점을 보입니다.\nQ3: 사용자 개인 정보는 안전하게 보호되나요?\nA3: 네, 카카오는 사용자 프라이버시 보호를 최우선으로 합니다. 카카오톡 대화 데이터는 챗GPT 학습에 사용되지 않으며, 서버에 저장되지 않습니다. 특히 자체 개발한 카나나 AI는 온디바이스 기술을 통해 모든 정보가 사용자 스마트폰 내에서만 처리되도록 설계되었습니다.\nQ4: AI 기능 외에 카카오톡 메신저 기능에도 변화가 있나요?\nA4: 네, 챗GPT 통합과 함께 채팅방 폴더 기능, 메시지 수정 기능이 추가됩니다. 또한, 친구탭이 인스타그램과 유사한 타임라인 피드 형태로 개편되어 소셜 기능이 강화되는 등 15년 만의 대대적인 메신저 기능 개편이 이루어질 예정입니다.\n카카오와 OpenAI의 이번 통합은 한국 AI 산업의 새로운 이정표가 될 것으로 전망됩니다. 5천만 사용자가 일상에서 자연스럽게 AI를 경험하게 되면서, AI 기술의 대중화와 함께 새로운 디지털 생태계의 시작을 알리는 신호탄이 될 거예요. 저는 정말 기대가 큽니다!\n\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"챗GPT가 카카오톡에 언제부터 적용되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"2025년 10월부터 단계적으로 적용될 예정입니다. 카카오는 연말까지 다양한 AI 기능을 순차적으로 출시하며, 카카오톡 사용자들의 AI 경험을 확대할 계획입니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오톡에 적용되는 AI 모델은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"OpenAI의 최신 모델인 GPT-5와 카카오가 자체 개발한 온디바이스 AI '카나나(Kanana)'가 함께 적용됩니다. GPT-5는 범용적인 대화 및 콘텐츠 생성에, 카나나는 특히 한국어 기반의 개인화된 온디바이스 AI 기능에 강점을 보입니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"사용자 개인 정보는 안전하게 보호되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 카카오는 사용자 프라이버시 보호를 최우선으로 합니다. 카카오톡 대화 데이터는 챗GPT 학습에 사용되지 않으며, 서버에 저장되지 않습니다. 특히 자체 개발한 카나나 AI는 온디바이스 기술을 통해 모든 정보가 사용자 스마트폰 내에서만 처리되도록 설계되었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"AI 기능 외에 카카오톡 메신저 기능에도 변화가 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 챗GPT 통합과 함께 채팅방 폴더 기능, 메시지 수정 기능이 추가됩니다. 또한, 친구탭이 인스타그램과 유사한 타임라인 피드 형태로 개편되어 소셜 기능이 강화되는 등 15년 만의 대대적인 메신저 기능 개편이 이루어질 예정입니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483659",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "AI 네이티브 컴퍼니",
          "GPT-5 카카오톡",
          "온디바이스 AI",
          "카나나 AI",
          "카카오 AI 통합",
          "카카오 OpenAI 제휴",
          "카카오 에이전트",
          "카카오톡 ChatGPT",
          "카카오톡 메시지 수정",
          "카카오톡 업데이트 2025"
        ],
        "isoDate": "2025-09-23T06:51:43.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "샤말란의눈",
        "title": "[MULTI] TGS2025, 취재·방송 등 관련 기사 종합",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2367",
        "pubDate": "Mon, 29 Sep 2025 07:40:23 +0900",
        "author": "샤말란의눈",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/25/07/09/197ef5ca8a313b2a1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "특집"
        ],
        "isoDate": "2025-09-28T22:40:23.000Z"
      },
      {
        "creator": "(RULIWEB`Д')/",
        "title": "[PS5] 소니 제일검의 찬바라 그 두 번째 막, 고스트 오브 요테이",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2366",
        "pubDate": "Thu, 25 Sep 2025 22:00:07 +0900",
        "author": "(RULIWEB`Д')/",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/09/25/19980f353034c329e.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-09-25T13:00:07.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 20화, 악역영애 행동인 데스와 ②",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2365",
        "pubDate": "Wed, 24 Sep 2025 16:48:12 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/09/24/1997aab6ad751ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-09-24T07:48:12.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "미국 달러 스테이블 코인을 추진하는 이유",
        "link": "http://serverdown.tistory.com/1399",
        "pubDate": "Fri, 26 Sep 2025 19:24:15 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1399#entry1399comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"225\" data-origin-height=\"225\"><span data-url=\"https://blog.kakaocdn.net/dn/llDOt/btsQQDN2zRi/JZZ8Y3SJzp6mmIBKLjaG31/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/llDOt/btsQQDN2zRi/JZZ8Y3SJzp6mmIBKLjaG31/img.png\"><img src=\"https://blog.kakaocdn.net/dn/llDOt/btsQQDN2zRi/JZZ8Y3SJzp6mmIBKLjaG31/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FllDOt%2FbtsQQDN2zRi%2FJZZ8Y3SJzp6mmIBKLjaG31%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"225\" height=\"225\" data-origin-width=\"225\" data-origin-height=\"225\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=i6GIO1R0vMA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=i6GIO1R0vMA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=i6GIO1R0vMA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ccZMw3/hyZJ484nO1/sw5jlK9g3UUlmqRCxP2JgK/img.jpg?width=1280&amp;height=720&amp;face=316_148_630_268,https://scrap.kakaocdn.net/dn/bldobc/hyZKeiKT89/rNjdOAUkSiKWhczkGp12LK/img.jpg?width=1280&amp;height=720&amp;face=316_148_630_268\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"스테이블 코인이 미국과 달러를 구해냈습니다 - 박정호 명지대 교수\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/i6GIO1R0vMA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">탈러 이외의 스테이블코인은 다 쓸모없으니 신경쓸 필요가 없습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">왜 미국은 스테이블 코인을 추진하나?</h2>\n<p data-ke-size=\"size16\">각국가에 달러가 침투하기 위해서는 그 국가의 통화로 환전이 필요합니다.</p>\n<p data-ke-size=\"size16\">환전되고 나면 그 국가가 화폐를 관리하게 됩니다.</p>\n<p data-ke-size=\"size16\">이부분이 미국이 보기엔 장벽입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">한국의 외국인이 원화를 달러로 바꿔 해외의 가족에게 보낸다면</p>\n<p data-ke-size=\"size16\">현재의 방식으론 얼마나 빠져나가는지 알 수 있습니다.</p>\n<p data-ke-size=\"size16\">그 정보를 바탕으로 국가를 운영할 수 도 잇습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">반대로 미국회사가 한국에 투자하려고 할때에도 한국으로 돈이 들어오는 정도를 한국정부는 알 수 있습니다.</p>\n<p data-ke-size=\"size16\">투자된 후엔 이득이 나면 달러로 빠져나가겠죠</p>\n<p data-ke-size=\"size16\">이때해도 기존 방식으론 알 수 있습니다.</p>\n<p data-ke-size=\"size16\">너무 큰돈이 나가면 못나가게 막거나 \"잠시 미뤄달라\" 할 수도 있겠죠</p>\n<p data-ke-size=\"size16\">관리를 받는 다는것 자체가 장벽이기 때문에 그 단계를 건너뛰러는것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">국가는 자신의 국가를 운영하기위해 이런 저런 정책을 쓰면서 화폐를 찍게됩니다.</p>\n<p data-ke-size=\"size16\">국민들은 자국 화폐를 가지고 있고 국가의 소비가 심해지면 인플레이션으로 화폐가치하락을 겪게 됩니다.</p>\n<p data-ke-size=\"size16\">내 돈의 가치가 떨어지다니 참을 수 없는 일입니다.</p>\n<p data-ke-size=\"size16\">이때 달러 스테이블 코인으로 도망갈 수 있는 길을 열어주려고 하는것입니다.</p>\n<p data-ke-size=\"size16\">이러면 국정운영을 위한 이런저런 일을 벌릴때마다&nbsp;</p>\n<p data-ke-size=\"size16\">\"돈 또 찍겠구만 도망쳐\" 를 시적하며 원화를 달러로 바꿔버리게되면</p>\n<p data-ke-size=\"size16\">정부는 기존의 화폐가치하락 보다 더 심한 화폐가지 하락을 겪게됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">달러 스테이블 코인으로 도망가게되면 미국은 무슨이득인가</h2>\n<p data-ke-size=\"size16\">달러 스테이블 코인은 미국 국채를 기초 자산으로 달러의 가치를 보장합니다.</p>\n<p data-ke-size=\"size16\">즉 스테이블 코인 규모가 늘어날 수록 미국 국채를 사게된다는 것이며</p>\n<p data-ke-size=\"size16\">미국 국채가 잘 팔린다면 미국은 더많은 부양을 할 수 있기때문에 좋습니다.<br />(버블이 발생할 수 있겠지만 수십년 뒤 이야기니 \"나는 모르겠다\" 를 시전)</p>\n<p data-ke-size=\"size16\">미국 국채가 잘팔리는 만큼 다른나라 국채는 덜 팔리게되겠죠</p>\n<p data-ke-size=\"size16\">그래서 미국의 금리는 낮아지고<br />힘없는 국가는 그만큼 금리가 높아집니다.</p>\n<p data-ke-size=\"size16\">금리가 높아지면 부양하기 쉽지 않겠죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">결론</h2>\n<p data-ke-size=\"size16\">달러 스테이블 코인은 미국외 국가의 화폐 권한을 떨어트리게 됩니다.</p>\n<p data-ke-size=\"size16\">이런저런 정책은 효과가 낮아 질 것입니다.</p>\n<p data-ke-size=\"size16\">사람들은 무슨 일만 생기면 자국 화폐를 달러 스테이블코인으로 바꿀 것입니다.</p>\n<p data-ke-size=\"size16\">결국 국가가 무슨 비용을 쓰려고하면 할 수록 <br />미국이 강해지는 결과가 됩니다.</p>\n<p data-ke-size=\"size16\">결국 정부 정책은 약화되고 달러 스테이블 코인은 점점 커질 것입니다.</p>\n<p data-ke-size=\"size16\">저는 비트코인과 리플 보유를 추천합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=i6GIO1R0vMA\n\n\n\n탈러 이외의 스테이블코인은 다 쓸모없으니 신경쓸 필요가 없습니다.\n \n왜 미국은 스테이블 코인을 추진하나?\n각국가에 달러가 침투하기 위해서는 그 국가의 통화로 환전이 필요합니다.\n환전되고 나면 그 국가가 화폐를 관리하게 됩니다.\n이부분이 미국이 보기엔 장벽입니다.\n \n한국의 외국인이 원화를 달러로 바꿔 해외의 가족에게 보낸다면\n현재의 방식으론 얼마나 빠져나가는지 알 수 있습니다.\n그 정보를 바탕으로 국가를 운영할 수 도 잇습니다.\n \n반대로 미국회사가 한국에 투자하려고 할때에도 한국으로 돈이 들어오는 정도를 한국정부는 알 수 있습니다.\n투자된 후엔 이득이 나면 달러로 빠져나가겠죠\n이때해도 기존 방식으론 알 수 있습니다.\n너무 큰돈이 나가면 못나가게 막거나 \"잠시 미뤄달라\" 할 수도 있겠죠\n관리를 받는 다는것 자체가 장벽이기 때문에 그 단계를 건너뛰러는것입니다.\n \n국가는 자신의 국가를 운영하기위해 이런 저런 정책을 쓰면서 화폐를 찍게됩니다.\n국민들은 자국 화폐를 가지고 있고 국가의 소비가 심해지면 인플레이션으로 화폐가치하락을 겪게 됩니다.\n내 돈의 가치가 떨어지다니 참을 수 없는 일입니다.\n이때 달러 스테이블 코인으로 도망갈 수 있는 길을 열어주려고 하는것입니다.\n이러면 국정운영을 위한 이런저런 일을 벌릴때마다 \n\"돈 또 찍겠구만 도망쳐\" 를 시적하며 원화를 달러로 바꿔버리게되면\n정부는 기존의 화폐가치하락 보다 더 심한 화폐가지 하락을 겪게됩니다.\n \n달러 스테이블 코인으로 도망가게되면 미국은 무슨이득인가\n달러 스테이블 코인은 미국 국채를 기초 자산으로 달러의 가치를 보장합니다.\n즉 스테이블 코인 규모가 늘어날 수록 미국 국채를 사게된다는 것이며\n미국 국채가 잘 팔린다면 미국은 더많은 부양을 할 수 있기때문에 좋습니다.\n(버블이 발생할 수 있겠지만 수십년 뒤 이야기니 \"나는 모르겠다\" 를 시전)\n미국 국채가 잘팔리는 만큼 다른나라 국채는 덜 팔리게되겠죠\n그래서 미국의 금리는 낮아지고\n힘없는 국가는 그만큼 금리가 높아집니다.\n금리가 높아지면 부양하기 쉽지 않겠죠\n \n결론\n달러 스테이블 코인은 미국외 국가의 화폐 권한을 떨어트리게 됩니다.\n이런저런 정책은 효과가 낮아 질 것입니다.\n사람들은 무슨 일만 생기면 자국 화폐를 달러 스테이블코인으로 바꿀 것입니다.\n결국 국가가 무슨 비용을 쓰려고하면 할 수록 \n미국이 강해지는 결과가 됩니다.\n결국 정부 정책은 약화되고 달러 스테이블 코인은 점점 커질 것입니다.\n저는 비트코인과 리플 보유를 추천합니다.",
        "guid": "http://serverdown.tistory.com/1399",
        "categories": [
          "코인",
          "리플",
          "비트코인",
          "스테이블코인",
          "코인"
        ],
        "isoDate": "2025-09-26T10:24:15.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "테슬라의 목표는 로보택시의 대량생산",
        "link": "http://serverdown.tistory.com/1398",
        "pubDate": "Thu, 25 Sep 2025 19:42:39 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1398#entry1398comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"225\" data-origin-height=\"224\"><span data-url=\"https://blog.kakaocdn.net/dn/GcV5u/btsQOhKXrik/UM6zXgdUtUfDdsPgE2feH1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/GcV5u/btsQOhKXrik/UM6zXgdUtUfDdsPgE2feH1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/GcV5u/btsQOhKXrik/UM6zXgdUtUfDdsPgE2feH1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FGcV5u%2FbtsQOhKXrik%2FUM6zXgdUtUfDdsPgE2feH1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"225\" height=\"224\" data-origin-width=\"225\" data-origin-height=\"224\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">전기차 보급은 쉽지 않습니다.</p>\n<p data-ke-size=\"size16\">비싸고<br />불날까바 보유를 꺼려합니다.</p>\n<p data-ke-size=\"size16\">이 문제를 해결하기위해 택시 (보유할 필요 없는 자동차) 가 필요했고</p>\n<p data-ke-size=\"size16\">자율 주행이 필요했으며 이제 대량 생산을위해 로봇으로 연결됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=hftkuORCF_o\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=hftkuORCF_o</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=hftkuORCF_o\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/Idl4T/hyZKdYlsS3/muq72WmAWOSO28Po7aBGxk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/ddOYOB/hyZJEpGjtN/K5t49JyLhHNqK1abkI4hcK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"테슬라 주가 어떻게? 진짜 대량 생산 기술 시작된다. Unboxed process\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/hftkuORCF_o\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">7분에 나옵니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">로보택시를 대량 생산하면 사람들이 차를 안사도 되는 시대가옵니다.</p>\n<p data-ke-size=\"size16\">자동차는 소유해봤자 아무리 많이쳐줘도 소유한 시간의 1/4 정도만 운전을 합니다.<br />대부분 주차 상태로 지냅니다.</p>\n<p data-ke-size=\"size16\">이부분에서 모두가 로보택시를 타버린다면<br />1. 주차할 필요 없다.<br />2. 주차장을 보유할 필요가 없다.</p>\n<p data-ke-size=\"size16\">라는 장점이 있습니다.</p>\n<p data-ke-size=\"size16\">이것은 로보택시가 차를 보유하는 비용보다 훨씬 저렴하다면 가능할 것입니다.<br />그래서 대량생산 방식을 개발중인 것입니다.</p>\n<p data-ke-size=\"size16\">영상에서는 Unboxed 방식이과 생산자를 로봇화 하는 것으로 달성합니다.</p>\n<p data-ke-size=\"size16\">즉 로봇은 대량생산을 위해 필요하는 핵심요소 입니다.</p>",
        "contentSnippet": "전기차 보급은 쉽지 않습니다.\n비싸고\n불날까바 보유를 꺼려합니다.\n이 문제를 해결하기위해 택시 (보유할 필요 없는 자동차) 가 필요했고\n자율 주행이 필요했으며 이제 대량 생산을위해 로봇으로 연결됩니다.\n \n영상: https://www.youtube.com/watch?v=hftkuORCF_o\n\n\n\n7분에 나옵니다.\n \n로보택시를 대량 생산하면 사람들이 차를 안사도 되는 시대가옵니다.\n자동차는 소유해봤자 아무리 많이쳐줘도 소유한 시간의 1/4 정도만 운전을 합니다.\n대부분 주차 상태로 지냅니다.\n이부분에서 모두가 로보택시를 타버린다면\n1. 주차할 필요 없다.\n2. 주차장을 보유할 필요가 없다.\n라는 장점이 있습니다.\n이것은 로보택시가 차를 보유하는 비용보다 훨씬 저렴하다면 가능할 것입니다.\n그래서 대량생산 방식을 개발중인 것입니다.\n영상에서는 Unboxed 방식이과 생산자를 로봇화 하는 것으로 달성합니다.\n즉 로봇은 대량생산을 위해 필요하는 핵심요소 입니다.",
        "guid": "http://serverdown.tistory.com/1398",
        "categories": [
          "로봇",
          "테슬라"
        ],
        "isoDate": "2025-09-25T10:42:39.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "이춘운과 백태태",
        "link": "https://jojoldu.tistory.com/847",
        "pubDate": "Sun, 28 Sep 2025 15:30:31 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/847#entry847comment",
        "content": "<p data-ke-size=\"size16\">최근에 \"재능이 너무 없고, 지금 이정도 실력이면 개발을 포기하고 다른 직업을 찾아보라\" 는 멘토님의 피드백 때문에 개발자의 길을 포기했다는 글을 보았다.</p>\n<p data-ke-size=\"size16\">예전에 비슷한 피드백을 받아본 입장에서 한 두명의 의견으로 본인이 선택한 길을 포기하는 것이 너무 안타까워 이메일로 내 생각을 전달드렸다.</p>\n<p data-ke-size=\"size16\"><a href=\"https://jojoldu.tistory.com/835\">개발자 되기 좋은 성향</a>이 따로 있다고 생각하진 않는다.<br />어떤 특성과 강점을 가진 개발자가 있을 뿐이지, 개발자에겐 어떤 재능이 무조건 있어야 한다고 생각하진 않는다.</p>\n<p data-ke-size=\"size16\">다만, 그런 내 생각과 달리 누군가는 직업별로 적합한 재능이 있을 수 있다고 생각할 수 있다.<br />운명같은 재능과 직업이 만나는 드라마틱한 상황이 나에겐 없다고 생각한다면 좌절감이 든다.<br />근데 그 운명이라는게, 재능이라는건 무엇일까?</p>\n<hr data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">대학생 시절 아사다 지로 작가님의 \"창궁의 묘성\" 이라는 작품에 빠져 읽었다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">창궁의 묘성은 전체적으로 1,2,3권까지만 주변에 추천 한다.<br />이토 히로부미를 아시아를 지킨 영웅으로 표현하는 등 후반부 들어서서 동의하지 않는 부분이 너무 많다.<br />4권의 경우 급하게 마무리한 티가 많이 난다.<br />3권까지는 정말로 몰입감이 높다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">이 작품에는 크게 2명의 주인공이 등장한다.<br />양문수와 이춘운 이라는 인물로, 이 중 이춘운은 마을에서 똥을 주워 팔며 간신히 살아가는 인물이다.<br />이 둘은 한 번도 틀린 적이 없다는 점성술사 백태태에게 자신들의 운명을 물어본다.</p>\n<p data-ke-size=\"size16\">양문수의 점괘는 천하의 재상이 되는 운명이였다.<br />백태태는 양문수에게는 점괘 그대로 전달한다.</p>\n<p data-ke-size=\"size16\">하지만 <b>며칠 내로 굶어 죽을 운명을 가진 이춘운에게는 너무나 가여워 차마 그대로 말하지 못하고 처음으로 거짓 점괘</b>를 말한다.<br />너는 세상의 모든 보물을 다 가질 운명이라고 말이다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">가난한 이씨 집안의 넷째아들, 샤오리야. 너의 수호성은 오랑캐의 별, 묘성.<br />그날 밤, 하늘과 땅을 가르는 북두칠성의 자루부분은 하늘 꼭대기에서 찬란히 빛나는 묘성으로 향하고 있었지.<br />그것은 곧 천자가 사는 자미궁을 그 국자로 퍼내라는 명령이 아니겠느냐.<br />너는 반드시 천하의 모든 재물과 금은보화를 한 손에 거머쥐게 될 게다.<br />두려워마라.<br />너에게는 항상 천궁을 다스리는 오랑캐의 별, 묘성이 함께할 테니까</p>\n</blockquote>\n<p data-ke-size=\"size16\"><b>춘운은 백태태는 절대 틀리지 않는다는 말을 되뇌며</b> 거세를 하고 환관이 된다.<br />실제 운명과는 다른 가짜 점괘였지만,<br />이춘운은 그걸 <b>진짜라고 믿고 스스로 운명을 개척해나가 결국 보물이 가득한 궁으로 들어가 마침내 권력의 정점에 이른다</b>.</p>\n<p data-ke-size=\"size16\">가짜 점괘를 진짜라고 믿고 개척해나가는 이춘운의 모습이 너무 인상 깊어서 설령 <b>사실이 아니더라도 스스로가 확실하게 믿는다면 그게 곧 운명이 된다</b>고 생각하게 되었다.</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\">\"진실이든 거짓이든, 믿어버리면 인생이 변해. 나는 내 생각대로 살고 싶어\"<br />1권 p291</p>\n</blockquote>\n<hr data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">어떤 선택이든 남이 아니라, 내가 선택해야 한다.<br />남의 의견은 남일 뿐이다.<br />나에겐 그걸 잘해낼 힘이 충분히 있다고 믿는 사람들이 해내는 놀라운 일들을 주변에서 많이 보았다.<br />그러니 누가 뭐라하든 스스로를 믿어보자.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.jpg\" data-origin-width=\"1069\" data-origin-height=\"1530\"><span data-url=\"https://blog.kakaocdn.net/dn/AD2RM/btsQUd7SR8n/2fFeFuYmkzku0sdshveNtK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/AD2RM/btsQUd7SR8n/2fFeFuYmkzku0sdshveNtK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/AD2RM/btsQUd7SR8n/2fFeFuYmkzku0sdshveNtK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FAD2RM%2FbtsQUd7SR8n%2F2fFeFuYmkzku0sdshveNtK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1069\" height=\"1530\" data-filename=\"1.jpg\" data-origin-width=\"1069\" data-origin-height=\"1530\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2.jpg\" data-origin-width=\"1069\" data-origin-height=\"1530\"><span data-url=\"https://blog.kakaocdn.net/dn/ciRYH0/btsQQY5YsGk/vh29Ar3rWahxTkwgsoLtNk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ciRYH0/btsQQY5YsGk/vh29Ar3rWahxTkwgsoLtNk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ciRYH0/btsQQY5YsGk/vh29Ar3rWahxTkwgsoLtNk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FciRYH0%2FbtsQQY5YsGk%2Fvh29Ar3rWahxTkwgsoLtNk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1069\" height=\"1530\" data-filename=\"2.jpg\" data-origin-width=\"1069\" data-origin-height=\"1530\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"3.jpg\" data-origin-width=\"1069\" data-origin-height=\"1530\"><span data-url=\"https://blog.kakaocdn.net/dn/criSq4/btsQRIO35a3/1QSjCuxVvq8a8kRO3VSba1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/criSq4/btsQRIO35a3/1QSjCuxVvq8a8kRO3VSba1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/criSq4/btsQRIO35a3/1QSjCuxVvq8a8kRO3VSba1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcriSq4%2FbtsQRIO35a3%2F1QSjCuxVvq8a8kRO3VSba1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1069\" height=\"1530\" data-filename=\"3.jpg\" data-origin-width=\"1069\" data-origin-height=\"1530\"/></span></figure>\n</p>\n<hr data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">이번 추석은 10일이나 되는 긴 기간입니다.<br />저는 요번 기간 동안 부족하다고 생각했던 몇개 강의들을 진득하게 공부 할 예정입니다.<br />이춘운처럼 저도 제가 더 훌륭한 리더가 될 수 있다고 믿어보려고요.</p>\n<p data-ke-size=\"size16\">추석에도 열정을 태우고 싶으신 분들이라면 이번 추석에 서로 응원해보는 알찬 시간을 함께 하면 좋겠습니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://www.inflearn.com/challenge/x27%ED%96%A5%EB%A1%9Cx27-%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%EC%B6%94%EC%84%9D-%EC%99%84\">'향로' 와 함께하는 추석 완강 챌린지</a></li>\n</ul>\n<h2 data-ke-size=\"size26\">함께 보면 좋은 글</h2>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://jojoldu.tistory.com/835\">개발자 되기 좋은 성향</a></li>\n<li><a href=\"https://jojoldu.tistory.com/735\">소설에 몰입하기</a></li>\n</ul>",
        "contentSnippet": "최근에 \"재능이 너무 없고, 지금 이정도 실력이면 개발을 포기하고 다른 직업을 찾아보라\" 는 멘토님의 피드백 때문에 개발자의 길을 포기했다는 글을 보았다.\n예전에 비슷한 피드백을 받아본 입장에서 한 두명의 의견으로 본인이 선택한 길을 포기하는 것이 너무 안타까워 이메일로 내 생각을 전달드렸다.\n개발자 되기 좋은 성향이 따로 있다고 생각하진 않는다.\n어떤 특성과 강점을 가진 개발자가 있을 뿐이지, 개발자에겐 어떤 재능이 무조건 있어야 한다고 생각하진 않는다.\n다만, 그런 내 생각과 달리 누군가는 직업별로 적합한 재능이 있을 수 있다고 생각할 수 있다.\n운명같은 재능과 직업이 만나는 드라마틱한 상황이 나에겐 없다고 생각한다면 좌절감이 든다.\n근데 그 운명이라는게, 재능이라는건 무엇일까?\n대학생 시절 아사다 지로 작가님의 \"창궁의 묘성\" 이라는 작품에 빠져 읽었다.\n창궁의 묘성은 전체적으로 1,2,3권까지만 주변에 추천 한다.\n이토 히로부미를 아시아를 지킨 영웅으로 표현하는 등 후반부 들어서서 동의하지 않는 부분이 너무 많다.\n4권의 경우 급하게 마무리한 티가 많이 난다.\n3권까지는 정말로 몰입감이 높다.\n이 작품에는 크게 2명의 주인공이 등장한다.\n양문수와 이춘운 이라는 인물로, 이 중 이춘운은 마을에서 똥을 주워 팔며 간신히 살아가는 인물이다.\n이 둘은 한 번도 틀린 적이 없다는 점성술사 백태태에게 자신들의 운명을 물어본다.\n양문수의 점괘는 천하의 재상이 되는 운명이였다.\n백태태는 양문수에게는 점괘 그대로 전달한다.\n하지만 며칠 내로 굶어 죽을 운명을 가진 이춘운에게는 너무나 가여워 차마 그대로 말하지 못하고 처음으로 거짓 점괘를 말한다.\n너는 세상의 모든 보물을 다 가질 운명이라고 말이다.\n가난한 이씨 집안의 넷째아들, 샤오리야. 너의 수호성은 오랑캐의 별, 묘성.\n그날 밤, 하늘과 땅을 가르는 북두칠성의 자루부분은 하늘 꼭대기에서 찬란히 빛나는 묘성으로 향하고 있었지.\n그것은 곧 천자가 사는 자미궁을 그 국자로 퍼내라는 명령이 아니겠느냐.\n너는 반드시 천하의 모든 재물과 금은보화를 한 손에 거머쥐게 될 게다.\n두려워마라.\n너에게는 항상 천궁을 다스리는 오랑캐의 별, 묘성이 함께할 테니까\n춘운은 백태태는 절대 틀리지 않는다는 말을 되뇌며 거세를 하고 환관이 된다.\n실제 운명과는 다른 가짜 점괘였지만,\n이춘운은 그걸 진짜라고 믿고 스스로 운명을 개척해나가 결국 보물이 가득한 궁으로 들어가 마침내 권력의 정점에 이른다.\n가짜 점괘를 진짜라고 믿고 개척해나가는 이춘운의 모습이 너무 인상 깊어서 설령 사실이 아니더라도 스스로가 확실하게 믿는다면 그게 곧 운명이 된다고 생각하게 되었다.\n\"진실이든 거짓이든, 믿어버리면 인생이 변해. 나는 내 생각대로 살고 싶어\"\n1권 p291\n어떤 선택이든 남이 아니라, 내가 선택해야 한다.\n남의 의견은 남일 뿐이다.\n나에겐 그걸 잘해낼 힘이 충분히 있다고 믿는 사람들이 해내는 놀라운 일들을 주변에서 많이 보았다.\n그러니 누가 뭐라하든 스스로를 믿어보자.\n\n\n\n\n\n이번 추석은 10일이나 되는 긴 기간입니다.\n저는 요번 기간 동안 부족하다고 생각했던 몇개 강의들을 진득하게 공부 할 예정입니다.\n이춘운처럼 저도 제가 더 훌륭한 리더가 될 수 있다고 믿어보려고요.\n추석에도 열정을 태우고 싶으신 분들이라면 이번 추석에 서로 응원해보는 알찬 시간을 함께 하면 좋겠습니다.\n'향로' 와 함께하는 추석 완강 챌린지\n함께 보면 좋은 글\n개발자 되기 좋은 성향\n소설에 몰입하기",
        "guid": "https://jojoldu.tistory.com/847",
        "categories": [
          "생각정리",
          "개발자",
          "백태태",
          "아사다 지로",
          "이춘운",
          "재능",
          "창궁의 묘성",
          "커리어"
        ],
        "isoDate": "2025-09-28T06:30:31.000Z"
      },
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "2025년 추석 완강 챌린지",
        "link": "https://jojoldu.tistory.com/846",
        "pubDate": "Fri, 26 Sep 2025 17:02:00 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/846#entry846comment",
        "content": "<p data-ke-size=\"size16\">주니어일때 명절은 밀린 공부를 몰아서 할 수 있는 행복한 시간이였다.<br />주말까지 껴있는 경우 거의 8~10일을 출근하지 않고 공부할 수 있으니 Todo 목록에 있는 대부분의 개인 프로젝트들, 블로그에 정리해야할 것들, 밀린 책들을 다 보는 시간으로 가졌다.</p>\n<p data-ke-size=\"size16\">특히 2017년 추석이 역대급 황금연휴였는데, 10.02 에만 휴가를 쓰면 09.30 ~ 10.09 까지 총 10일을 쉴 수 있었다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2017.png\" data-origin-width=\"504\" data-origin-height=\"364\"><span data-url=\"https://blog.kakaocdn.net/dn/9YdeY/btsQRvIQTWY/rvnJ6QhtYCl1vRKz2PLExk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/9YdeY/btsQRvIQTWY/rvnJ6QhtYCl1vRKz2PLExk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/9YdeY/btsQRvIQTWY/rvnJ6QhtYCl1vRKz2PLExk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F9YdeY%2FbtsQRvIQTWY%2FrvnJ6QhtYCl1vRKz2PLExk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"504\" height=\"364\" data-filename=\"2017.png\" data-origin-width=\"504\" data-origin-height=\"364\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이때 진짜 너무 행복하게 시간을 보내서 <b>추석 연휴 동안 5개의 기술 블로그 글을 발행</b>했다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2017_1.png\" data-origin-width=\"749\" data-origin-height=\"677\"><span data-url=\"https://blog.kakaocdn.net/dn/cGP7rB/btsQSqfnzdj/aMqfGMTaxhFhSLbvmUmE50/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cGP7rB/btsQSqfnzdj/aMqfGMTaxhFhSLbvmUmE50/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cGP7rB/btsQSqfnzdj/aMqfGMTaxhFhSLbvmUmE50/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcGP7rB%2FbtsQSqfnzdj%2FaMqfGMTaxhFhSLbvmUmE50%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"749\" height=\"677\" data-filename=\"2017_1.png\" data-origin-width=\"749\" data-origin-height=\"677\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2017_2.png\" data-origin-width=\"790\" data-origin-height=\"711\"><span data-url=\"https://blog.kakaocdn.net/dn/bxdSe5/btsQSF4tLTF/4gQNZYaYwnUrkWWIDH4nNk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bxdSe5/btsQSF4tLTF/4gQNZYaYwnUrkWWIDH4nNk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bxdSe5/btsQSF4tLTF/4gQNZYaYwnUrkWWIDH4nNk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbxdSe5%2FbtsQSF4tLTF%2F4gQNZYaYwnUrkWWIDH4nNk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"790\" height=\"711\" data-filename=\"2017_2.png\" data-origin-width=\"790\" data-origin-height=\"711\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">당시 팀에 새로 합류한 분들을 위한 Spock 관련된 1,2편의 글이나 코드리뷰로 종종 언급했던 메소드 파라미터, eslint적용 등 여러 내용들을 정리하고 추가로 학습했다.<br />밀린 공부와 글감들을 다 발산하는데 10일 내내 도파민이 넘쳐흐르는 것 같았다.</p>\n<p data-ke-size=\"size16\">특히 토비님이 추천하신 TDD로 xUnit 만들기를 이때 진행했었고, 그 과정도 상세히 정리하는 시간을 가졌다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"641\" data-origin-height=\"753\"><span data-url=\"https://blog.kakaocdn.net/dn/b04mAH/btsQP7By9R3/MG6F3hnpli4tOSWSEV6RD0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b04mAH/btsQP7By9R3/MG6F3hnpli4tOSWSEV6RD0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b04mAH/btsQP7By9R3/MG6F3hnpli4tOSWSEV6RD0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb04mAH%2FbtsQP7By9R3%2FMG6F3hnpli4tOSWSEV6RD0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"641\" height=\"753\" data-filename=\"1.png\" data-origin-width=\"641\" data-origin-height=\"753\"/></span></figure>\n</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://jojoldu.tistory.com/231\">JUnit 만들어보기</a></li>\n</ul>\n<p data-ke-size=\"size16\">결혼 이후에는 예전처럼 개인 공부하는데 모든 시간을 쓸 순 없지만 그럼에도 여전히 명절 연휴는 나에겐 성취감을 주는 귀한 시간이다.</p>\n<p data-ke-size=\"size16\">혼자서 긴 시간 공부하다보면 지루할때도 많았다.<br />그럴때는 지인들과 스터디 까페에 모여서 하루종일 모각코를 진행하기도 했다.</p>\n<p data-ke-size=\"size16\">아침 8~9시 사이에 모여서 공부하다가 잡담도 하고 점심시간에 밥도 같이 먹으면서 공부했던 것들을 공유하고 각자 일정에 맞춰 퇴근도 하면서 완전히 자유롭게, 다만 외롭지 않게 공부했다.</p>\n<p data-ke-size=\"size16\">건강한 식단과 규칙적인 운동을 하고나면 건강과 체력이 좋아지는 것 처럼,<br />긴 연휴를 알차게 보내면 그만큼의 마음 건강이 단단해졌다.<br />그래서 이렇게 시간을 보내고 나면 아무리 긴 연휴기간이였어도 회사 복귀가 전혀 힘들지 않았다.</p>\n<hr data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">코로나 기간이후로 이렇게 다 같이 추석 연휴때 모여서 각자가 공부하고 싶은 주제를 공부하고 이야기 나누는 모임은 없어졌다.<br />그러다보니 이제 연휴에 혼자서만 계속 공부하고 있다.</p>\n<p data-ke-size=\"size16\">올해 추석은 2017년처럼 또다시 황금연휴다.<br />10.10일만 휴가를 쓴다면 총 10일을 연속해서 쉴 수 있는 긴 시간이다.</p>\n<p data-ke-size=\"size16\">이 시간을 코로나 전처럼 건강하게 보낼 순 없을까?</p>\n<hr data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">그래서 이번에 이 긴 추석 연휴동안 온라인으로 많은 사람들이 모여서 함께 공부하는 시간을 준비했습니다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://inf.run/2bc9y\">'향로' 와 함께하는 추석 완강 챌린지</a></li>\n</ul>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"intro.png\" data-origin-width=\"400\" data-origin-height=\"331\"><span data-url=\"https://blog.kakaocdn.net/dn/bSv06x/btsQSgxmNHf/Jy3R0FQ2poAxXkCPdVyTJ0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bSv06x/btsQSgxmNHf/Jy3R0FQ2poAxXkCPdVyTJ0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bSv06x/btsQSgxmNHf/Jy3R0FQ2poAxXkCPdVyTJ0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbSv06x%2FbtsQSgxmNHf%2FJy3R0FQ2poAxXkCPdVyTJ0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"400\" height=\"331\" data-filename=\"intro.png\" data-origin-width=\"400\" data-origin-height=\"331\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">10월에는 카카오 신입 공채 코딩 테스트, 삼성전자 신입 개발 코딩 테스트 등 여러 대기업들의 공채가 있고,<br />토스, 당근 등 여러 많은 회사들이 여전히 채용을 활발히 하고 있는 기간입니다.</p>\n<p data-ke-size=\"size16\">이번 추석 연휴 기간 동안 공부하고 싶었던 주제가 있거나 즐겁게 '함께' 공부하는 시간을 가지고 싶으신 분들이라면 저와 같이 추석 완강 챌린지를 함께해요!</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">추석 연휴 동안 원하는 강의를 구매하실 수 있게 <b>40% 할인 쿠폰도 함께 드리니 이번 추석때는 함께 성장해요</b> :)</p>\n</blockquote>",
        "contentSnippet": "주니어일때 명절은 밀린 공부를 몰아서 할 수 있는 행복한 시간이였다.\n주말까지 껴있는 경우 거의 8~10일을 출근하지 않고 공부할 수 있으니 Todo 목록에 있는 대부분의 개인 프로젝트들, 블로그에 정리해야할 것들, 밀린 책들을 다 보는 시간으로 가졌다.\n특히 2017년 추석이 역대급 황금연휴였는데, 10.02 에만 휴가를 쓰면 09.30 ~ 10.09 까지 총 10일을 쉴 수 있었다.\n\n\n이때 진짜 너무 행복하게 시간을 보내서 추석 연휴 동안 5개의 기술 블로그 글을 발행했다.\n\n\n\n당시 팀에 새로 합류한 분들을 위한 Spock 관련된 1,2편의 글이나 코드리뷰로 종종 언급했던 메소드 파라미터, eslint적용 등 여러 내용들을 정리하고 추가로 학습했다.\n밀린 공부와 글감들을 다 발산하는데 10일 내내 도파민이 넘쳐흐르는 것 같았다.\n특히 토비님이 추천하신 TDD로 xUnit 만들기를 이때 진행했었고, 그 과정도 상세히 정리하는 시간을 가졌다.\n\n\n\nJUnit 만들어보기\n결혼 이후에는 예전처럼 개인 공부하는데 모든 시간을 쓸 순 없지만 그럼에도 여전히 명절 연휴는 나에겐 성취감을 주는 귀한 시간이다.\n혼자서 긴 시간 공부하다보면 지루할때도 많았다.\n그럴때는 지인들과 스터디 까페에 모여서 하루종일 모각코를 진행하기도 했다.\n아침 8~9시 사이에 모여서 공부하다가 잡담도 하고 점심시간에 밥도 같이 먹으면서 공부했던 것들을 공유하고 각자 일정에 맞춰 퇴근도 하면서 완전히 자유롭게, 다만 외롭지 않게 공부했다.\n건강한 식단과 규칙적인 운동을 하고나면 건강과 체력이 좋아지는 것 처럼,\n긴 연휴를 알차게 보내면 그만큼의 마음 건강이 단단해졌다.\n그래서 이렇게 시간을 보내고 나면 아무리 긴 연휴기간이였어도 회사 복귀가 전혀 힘들지 않았다.\n코로나 기간이후로 이렇게 다 같이 추석 연휴때 모여서 각자가 공부하고 싶은 주제를 공부하고 이야기 나누는 모임은 없어졌다.\n그러다보니 이제 연휴에 혼자서만 계속 공부하고 있다.\n올해 추석은 2017년처럼 또다시 황금연휴다.\n10.10일만 휴가를 쓴다면 총 10일을 연속해서 쉴 수 있는 긴 시간이다.\n이 시간을 코로나 전처럼 건강하게 보낼 순 없을까?\n그래서 이번에 이 긴 추석 연휴동안 온라인으로 많은 사람들이 모여서 함께 공부하는 시간을 준비했습니다.\n'향로' 와 함께하는 추석 완강 챌린지\n\n\n10월에는 카카오 신입 공채 코딩 테스트, 삼성전자 신입 개발 코딩 테스트 등 여러 대기업들의 공채가 있고,\n토스, 당근 등 여러 많은 회사들이 여전히 채용을 활발히 하고 있는 기간입니다.\n이번 추석 연휴 기간 동안 공부하고 싶었던 주제가 있거나 즐겁게 '함께' 공부하는 시간을 가지고 싶으신 분들이라면 저와 같이 추석 완강 챌린지를 함께해요!\n추석 연휴 동안 원하는 강의를 구매하실 수 있게 40% 할인 쿠폰도 함께 드리니 이번 추석때는 함께 성장해요 :)",
        "guid": "https://jojoldu.tistory.com/846",
        "categories": [
          "생각정리",
          "연휴",
          "인프런",
          "챌린지",
          "추석",
          "추석 열공",
          "향로"
        ],
        "isoDate": "2025-09-26T08:02:00.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": [
      {
        "creator": "megayuchi",
        "title": "AI 만능설에 대한 우려와 짜증 – 수정(fix) 문제",
        "link": "https://megayuchi.com/2025/09/26/ai-%eb%a7%8c%eb%8a%a5%ec%84%a4%ec%97%90-%eb%8c%80%ed%95%9c-%ec%9a%b0%eb%a0%a4%ec%99%80-%ec%a7%9c%ec%a6%9d-%ec%88%98%ec%a0%95fix-%eb%ac%b8%ec%a0%9c/",
        "pubDate": "Fri, 26 Sep 2025 06:56:18 +0000",
        "content:encodedSnippet": "국중고딩 시절부터 서브컬처에 빠져있던 자로서 nano-banana같은 ai가 나와서 나같은 똥손도 동인활동이 가능해졌다는 점에서 약간 반기는 면도 있다. 근데 이거 쓰면 쓸수록 대단하면서도 등신같고 헛점이 명확하다고 느낀다.\n첫시도에 잘 생성해줘서 그게 맘에 들면 베스트다. 그러나 수정을 하고 싶다면 이제부터 지옥이 펼쳐진다. 미세 수정을 시작하면 어떤 마법의 주문을 외워도 내가 원하는 쪽으로 가기가 어렵다. 결과물에 대한 수정을 반복할 수록 점점 이상한 방향으로 흘러간다.\n마치 가속할수록 질량이 커져서 결코 광속에 도달하지 못하는 물리학 법칙 같다.\n이 그림의 경우 초기 생성 결과물 중에서 그럭저럭 맘에 드는 것을 얻기까지 상당한 시간을 들였다. 처음 피규어 사진 가지고 출발했으니까 그나마 대충 모양 잡는건 빨랐지, 마법의 주문만 가지고 생성했으면 더 힘들었을 것이다.\n\n\n\n\n\n\n\n\n\n그럼에도 불구하고 눈썹 디테일에 문제가 있다. 원래 사진은 꽤 해상도가 높았고 속눈썹도 잘 표현되었지만 생성 과정에서 속눈썹 디테일이 뭉개졌다.\n속눈썹을 좀 깔끔하게 정리하고 싶지만 여기서 어떤 프롬프트를 때려넣어도 결코 좋아지지 않는다. 수정을 시키면 시킬수록 오히려 이전세대 ai들이 보여줬던 혐오스럽고 기괴한 출력물에 근접해간다.\n결국 포토샵에서 레이어를 추가하고 속눈썹을 덧대어 그려서 수정했다.\n\n\n\n\n“이 분위기가 맘에 들어요. 이거 해상도가 너무 낮으니 해상도를 키워서 얼굴 디테일을 높여서 그려줘요.” 라고 사람에게 얘기했다면 설령 실력이 부족해서 별로인 결과가 나올지라도 이런 방향의 결과물을 내놓진 않는다. \n\n\n\n\n사람 손으로 수정하기 싫으면 ai가 생성해준것 중에서 그나마 맘에 드는걸 골라서 만족하면 되긴 한다. pixiv등에 올라오는 ai일러스트 상당수가 그렇다. 꽤 그럴싸하지만 디테일을 보면 이상한 부분이 하나 이상씩 보인다. 특히 손 모양이 조금이라도 복잡해지면 기괴한 손가락이 되는데 그냥 포기하고 올리는 경우가 대부분이다. 손만 처리해주는 ai가 있다고 하는데 보통 거기까진 안하는 듯 하다.\n손가락 문제는 nano-banana에서도 여전한데 손가락 6개로 생성하거나 요청한 손 모양이 복잡하면 형태가 이상하게 꼬여버리는 경우가 흔하게 발생한다.\n이때 수정을 요구해봐야 결코 나아지지 않는다. ‘현재 손가락이 여섯개다. 다섯개로 수정해줘’ 라고 아무리 요청해봐야 계속 같은 결과만을 뱉어낸다.\n차라리 아예 다른 손 모양으로 새로 그려달라고 요구하는 편이 낫다. 그렇게 해서 이 녀석이 아주 많이 학습해서 어색하지 않은 패턴으로 합성해주길 기대한다. 이렇게 시도하면 어색하지 않은 손 모양이 나오긴 한다. 다만 이렇게 어색하지 않은 포즈들을 조합하게 되므로 내 원하는 포즈를 정확히 연출하는건 불가능하다.\n양 다리의 길이 비례가 좀 맞지 않는다고 느낄 때, 어색하지 않게 수정해달라고 해봐야 소용없다. 이 녀석은 어색한게 뭔지, 어색하지 않은게 뭔지 모른다. 이 경우도 다리 부위를 아예 삭제하고 새로운 포즈로 다리를 그려달라고 요청하는 편이 현실적이다. 이 녀석이 만들어주는 포즈중에 다리 길이 비례가 맞아보이는걸 선택할 수 밖에 없다. 아니면 이 역시 내가 포토샵에서 수정해야 한다.\n요새 취미질로 캐릭터 일러스트를 생성하고 있다. ai에게 요청하고 결과물 고르고 크롭해서 다시 요청하고 하는데 작업시간의 10% 정도를, 포토샵에서 외곽선 따고, 레이어 추가해서 새로 그리고 갖다 붙이고 하는 작업으로 90%를 소모한다. 10시간 작업하면 9시간이 포샵 작업이다. 물론 ai가 아니었으면 나는 아예 못그렸겠지만, 이게 사람보다 명백히 낫다는 방증은 되지 못한다.\n언급한 수정에 대한 문제는 코드생성에서도 마찬가지다. ai가 만들어준 코드가 한방에 맘에 드는걸로 나오면 베스트이고 흔하디 흔한 코드 패턴은 그게 잘 된다.\n그런데 자료가 많지 않고 요구사항이 복잡하면 이상한 코드를 뱉거나 부분적으로 문제가 있는 코드가 나온다. 이것도 수정시켜보면 이미지 생성과 비슷한 무한지옥에 빠지게 된다.\n아니 아주 쌩뚱맞은 코드가 나온다기 보다는 ‘많이 잘못된 코드’와 조금 ‘잘못된 코드’를 순환해서 뱉어낸다. 간단하게 말하면 그 요구사항에 대한 학습이 부족하다 하겠지.\n아예 코드를 작성할 능력이 모자라는 인간들은 이렇게라도 코드를 뱉어주는게 고마울 것이다. 하지만 멀쩡하게 돌아가게 하려면 수정을 해야한다.\n그 코드가 뭐가 이상한지 확실하게 알아야할 정도의 능력은 있어야, 뭐가 이상한지 알고 지가 고치든지 제대로 된 코드가 나올 때까지 ai를 갈구던가 하지.\nai무새들은 버튼 딸깍이면 요술램프의 요정처럼 원하는거 척척 나오는지 아는데. 거기서 수정시켜 보라고.\n대개는 수정도 필요없고 디버깅도 거의 필요없는 정도의 뻔한 패턴의 코드만 요구하고 있는 것이다. 그러니 ai가 만능인줄 알지.\n안그래도 요새 ai한테 디버깅시키면 된다는 놈들이 자꾸 방송할 때 마다 기웃거려서 짜증난다.\n크래시 당시의 소량의 콜스택과 어셈코드만 보이는 덤프파일 가지고 디버깅을 해보기나 했는지 궁금하네.",
        "dc:creator": "megayuchi",
        "comments": "https://megayuchi.com/2025/09/26/ai-%eb%a7%8c%eb%8a%a5%ec%84%a4%ec%97%90-%eb%8c%80%ed%95%9c-%ec%9a%b0%eb%a0%a4%ec%99%80-%ec%a7%9c%ec%a6%9d-%ec%88%98%ec%a0%95fix-%eb%ac%b8%ec%a0%9c/#respond",
        "content": "국중고딩 시절부터 서브컬처에 빠져있던 자로서 nano-banana같은 ai가 나와서 나같은 똥손도 동인활동이 가능해졌다는 점에서 약간 반기는 면도 있다. 근데 이거 쓰면 쓸수록 대단하면서도 등신같고 헛점이 명확하다고 느낀다. 첫시도에 잘 생성해줘서 그게 맘에 들면 베스트다. 그러나 수정을 하고 싶다면 이제부터 지옥이 펼쳐진다. 미세 수정을 시작하면 어떤 마법의 주문을 외워도 내가 원하는 쪽으로 가기가 어렵다. 결과물에 대한 수정을 &#8230; <a class=\"more-link\" href=\"https://megayuchi.com/2025/09/26/ai-%eb%a7%8c%eb%8a%a5%ec%84%a4%ec%97%90-%eb%8c%80%ed%95%9c-%ec%9a%b0%eb%a0%a4%ec%99%80-%ec%a7%9c%ec%a6%9d-%ec%88%98%ec%a0%95fix-%eb%ac%b8%ec%a0%9c/\">More <span class=\"screen-reader-text\">AI 만능설에 대한 우려와 짜증 &#8211; 수정(fix)&#160;문제</span></a>",
        "contentSnippet": "국중고딩 시절부터 서브컬처에 빠져있던 자로서 nano-banana같은 ai가 나와서 나같은 똥손도 동인활동이 가능해졌다는 점에서 약간 반기는 면도 있다. 근데 이거 쓰면 쓸수록 대단하면서도 등신같고 헛점이 명확하다고 느낀다. 첫시도에 잘 생성해줘서 그게 맘에 들면 베스트다. 그러나 수정을 하고 싶다면 이제부터 지옥이 펼쳐진다. 미세 수정을 시작하면 어떤 마법의 주문을 외워도 내가 원하는 쪽으로 가기가 어렵다. 결과물에 대한 수정을 … More AI 만능설에 대한 우려와 짜증 – 수정(fix) 문제",
        "guid": "http://megayuchi.com/?p=7165",
        "categories": [
          "Development",
          "IT",
          "Pub",
          "ai",
          "nano-banana"
        ],
        "isoDate": "2025-09-26T06:56:18.000Z"
      }
    ]
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "PD1 AI 해커톤, 그 뜨거웠던 열기 속으로!",
        "link": "https://techblog.lycorp.co.jp/ko/pd1-ai-hackathon-recap",
        "pubDate": "Fri, 26 Sep 2025 02:00:00 GMT",
        "content": "최근 LY Corporation뿐 아니라 IT 산업 전반에서 AI 기술을 서비스에 접목하려는 움직임이 활발히 이어지고 있습니다. 메시징과 커뮤니케이션, 콘텐츠, 업무 자동화에 이르...",
        "contentSnippet": "최근 LY Corporation뿐 아니라 IT 산업 전반에서 AI 기술을 서비스에 접목하려는 움직임이 활발히 이어지고 있습니다. 메시징과 커뮤니케이션, 콘텐츠, 업무 자동화에 이르...",
        "guid": "https://techblog.lycorp.co.jp/ko/pd1-ai-hackathon-recap",
        "isoDate": "2025-09-26T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "때가 된 아이디어",
        "link": "https://www.thestartupbible.com/2025/09/an-idea-whose-time-has-come.html",
        "pubDate": "Sun, 28 Sep 2025 21:36:00 +0000",
        "content:encodedSnippet": "레미제라블과 노트르담의 곱추의 저자 빅토르 위고의 명언 중 “군대는 막을 수 있어도, 때가 된 아이디어는 막을 수 없다.(An invasion of armies can be resisted but not an idea whose time has come)”라는 말이 있는데 나는 요새 이 말의 중요성과 위력을 자주 느끼고 있다. 아마도 이분이 이 말을 한 배경에는 당시의 격동적인 새로운 시대적 흐름, 혁신, 그리고 사회 변화가 있었을 텐데, 시대의 흐름은 탄 거대한 불가항력적인 힘은 그 누구도 막지 못한다는 것을 강조하는 말인 것 같다.\n내가 이 말의 위력을 느끼는 건 프랑스 혁명과 같은 사회적 변화의 맥락이 아닌 기술적 변화의 맥락에서이다. 물론, 기술의 큰 변화는 혁신을 가져오고, 궁극적으론 사회의 변화를 불러올 수도 있긴 해서 어떻게 보면 프랑스 혁명보다 더 큰 혁신을 가져올 수도 있다고 생각한다.\n한국은 참 재미있는 나라다. 어떤 분야에서는 미국보다도 더 앞서가는 진보적인 정책과 규제를 도입하기도 하지만, 어떤 분야에서는 이게 과연 전 세계 GDP 10위의 선진국인가 의심스러울 정도로 규제가 낙후됐다.\n이렇게 규제가 비합리적이고 낙후된 분야는 상당히 많지만, 그냥 요새 내가 항상 생각하는 몇 가지만 나열해 보겠다.\n일단 모빌리티 분야는 한국에 꽤 센 규제가 존재한다. 2020년 3월에 만들어진 ‘타다금지법’이 그 대표적인 사례인데, 나는 정치인들이 타다라는 회사를 지명하면서 법을 만들었다는 게 아직도 이해가 안 간다. 나는 요새도 타다의 탑 고객이긴 한데, 점점 서비스의 질은 떨어지고 있고, 그냥 차만 크지, 일반 택시랑 점점 더 똑같아지고 있다. 타다금지법이 없었다면, 타다가 원래 지향했던, 일반택시와는 확연히 차이가 나는 더 편하고, 더 조용하고, 더 얌전한 프리미엄 택시 서비스가 잘 만들어졌을 텐데, 많이 아쉽긴 하다. 실은 이런 규제는 나 같은 시장의 고객(=시민)을 위한 법이 아니라 소위 말하는 old guard인 택시 조합을 보호하기 위한 것이라서 더욱더 아쉽다.\n원격의료도 비슷한 것 같다. 원격의료 제도는 여러 가지 골치 아픈 문제점을 야기시킬 수 있지만, 부정적인 면 보단 긍정적인 효과를 훨씬 더 많이 가져올 수 있는 제도라고 생각하는데, 우리나라에서 원격의료는 아직은 불법이다. 왜 불법이냐에 대해서는 다양한 의견이 있지만, 결국 현존하는 규제와 의료법은 기존 의사와 병원, 그리고 이들의 커뮤니티를 보호하기 위해 존재하기 때문이다. 아마도 이런 규제는 과거에는 적절했을지 모르지만, 빠르게 변하는 세상에 적응하려면 폐지되거나 많이 바뀌어야 한다고 생각한다.\n이렇게 오래된 특정 집단의 이익을 대변하기 위해서 규제와 법이 존재하는 경우가 우리 주변에는 상당히 많다. 기존 세력과 커뮤니티가 오래됐고, 정치적으로, 그리고 경제적으로 강력한 영향을 행사할 수 있기 때문에 이런 규제를 바꾸는 건 쉽지 않겠지만, 이 글의 주제같이 때가 된 변화와 아이디어는 그 어떤 강력한 정치인이나 집단도 막을 수 없기 때문에 조만간 바뀔 것이라고 믿는다.\n규제와 관련된 또 다른 문제는, 어떤 기술이나 시장은 너무 새로워서 규제 자체가 아직 존재하지 않는다는 점이다. 우리 투자사들과 같이 일하면서 특히 이런 점들을 직접 피부로 느끼는데, 로켓을 만드는 스타트업이나 배양육을 만들고 있는 스타트업은 기술력이 아무리 좋고 상용화 가능성이 아무리 높아도 이들이 하나씩 지키고 따를 수 있는 standard procedure와 법이 없어서 뭐 하나 하려고 해도 여러 이해관계자에게 공격을 받는다. 결국 이런 새로운 frontier technology 분야에는 우리도 하루빨리 제대로 된 가이드라인과 법적 프레임워크가 갖추어줘야 하는데, 중요한 건 이런 법을 만들 때 특정 단체의 이익을 보호하기 위한 방향으로 치우쳐지지 않고 아주 장기적으로 대한민국 국민들이 가장 큰 혜택을 받을 수 있고, 국민들의 이익을 보호하기 위한 프레임워크를 기반으로 아주 신중하게 진행돼야 한다는 점이다.\n너무 오랜 전에 만들어져서 이제 특정 수구 세력의 이권을 보호하기 위해서 존재하는 오래되고 쓸모없는 규제도 문제이고, 너무 새롭기 때문에 아예 규제가 없는 것도 문제인데, 결국엔 이 포스팅에서 말하고 싶었던 건, 그 어떤 규제와 법도 시대의 흐름을 탄 아이디어는 막을 수가 없다는 점이다. 우리는 좋은 아이디어는 시대의 흐름을 빨리 탈 수 있도록, 그리고 잘 탈 수 있도록 최대한 시대의 변화에 적응하고 순응해야 한다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/09/an-idea-whose-time-has-come.html#respond",
        "content": "레미제라블과 노트르담의 곱추의 저자 빅토르 위고의 명언 중 “군대는 막을 수 있어도, 때가 된 아이디어는 막을 수 없다.(An invasion of armies can be resisted but not an idea whose time has come)”라는 말이 있는데 나는 요새 이 말의 중요성과 위력을 자주 느끼고 있다. 아마도 이분이 이 말을 한 배경에는 당시의 격동적인 새로운 시대적 흐름, 혁신,(...)",
        "contentSnippet": "레미제라블과 노트르담의 곱추의 저자 빅토르 위고의 명언 중 “군대는 막을 수 있어도, 때가 된 아이디어는 막을 수 없다.(An invasion of armies can be resisted but not an idea whose time has come)”라는 말이 있는데 나는 요새 이 말의 중요성과 위력을 자주 느끼고 있다. 아마도 이분이 이 말을 한 배경에는 당시의 격동적인 새로운 시대적 흐름, 혁신,(...)",
        "guid": "https://www.thestartupbible.com/?p=9570",
        "categories": [
          "Uncategorized",
          "korea",
          "regulation",
          "Strong",
          "technology"
        ],
        "isoDate": "2025-09-28T21:36:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "학교가 가르칠 수 없는 것",
        "link": "https://www.thestartupbible.com/2025/09/some-things-that-school-can-never-teach.html",
        "pubDate": "Wed, 24 Sep 2025 21:23:00 +0000",
        "content:encodedSnippet": "일주일 전에 내가 10년째 벤처파트너로 활동하고 있는 국내 1호 악셀러레이터 프라이머 26기 데모데이가 있었다. 나는 프라이머 데모데이는 항상 흥행 수표라고 농담하는데, 이날도 1,000명이 넘는 분들이 와서 한국의 창업 열기는 아직도 뜨겁고, 이제 시작이라는 확신을 다시 한번 가졌다. 프라이머 데모데이의 주인은 창업가들이고, 하이라이트는 이들의 피칭이다. 공식적인 행사가 끝나면 하나의 번외 일정이 있는데, 프라이머 파트너들과의 AMA(Ask Me Anything) 세션이다. 몇 년 전부터 이 AMA 세션을 하고 있는데, 반응이 꽤 좋고, 우리도 편안하게 좋은 분들과 접점을 만들 수 있어서 이번에도 진행했고 나도 무대에서 다양한 질문을 듣고 답변했다.\n어떤 서울대학교 학생이 본인도 창업에 관심이 많은데 학생 때는 뭘 하면 창업에 대해 준비할 수 있는지 물어봤고, 나는 이분에게 졸업하고 창업할 생각이면 학생 때 가장 쉽게 할 수 있는 다음 세 가지에 대해서 알려줬다.\n일단 한국과 미국의 다양한 스타트업과 테크 관련 기사와 뉴스레터를 읽으라고 했다. 이 세상이 어떻게 바뀌고 있고, 현재 어떤 창업가들이 어떤 사업을 하는지에 대해서 잘 공부하고 있으면, 큰 기술의 흐름이 어떻게 변하는지 자세히는 아니겠지만, 대략 그림이 그려질 것이다. 기사와 뉴스레터 읽는 건 타고난 재능이 없더라도 대학 4년 동안 스스로 반복적으로 훈련하면 습관화될 것이다.\n두 번째는, 질문하는 습관을 만들라고 했다. 뛰어난 창업가들은 모두 에디슨같이 많은 질문을 한다. 이들은 계속 “왜?”라고 질문하고, 만족할 만한 답을 찾지 못하면 본인들이 그 답을 찾기 위해서 창업하는데, 이게 일반인들과 가장 큰 차이점이라고 생각한다. 일반인들은 “이건 왜 이렇게 하나요?”라고 물어볼 순 있는데, “그건 원래 그래요.”라는 답을 들으면, 그냥 그런가 보다 하고 거기서 질문을 멈춘다. 하지만, 창업가들은 “왜 원래 그런가요? 원래 그런 게 어디 있나요?”라는 질문을 계속 던지면서 남들이 잘 못 보는 문제를 발견하고, 이를 해결하기 위해서 뭔가 시작한다. 실은 이런 질문하는 것도 타고난 재능이 없더라도 대학 4년 동안 스스로 반복적으로 훈련하면 어느 정도 습관화될 것이다.\n그리고 세 번째는, 술 좀 작작 먹고 그 시간에 기사 읽고, 질문하는 습관을 만들라고 했다. 이 또한 4년 동안 반복하면 금주가 습관화될 것이다.\n그런데 내가 이 친구에게 정말 하고 싶었던 말은 따로 있었는데, 괜히 공개적으로 실망하게 하기 싫어서 AMA 세션에서는 더 이상 입을 벌리지 않았다. 진짜 하고 싶었던 말은 그 어떤 좋은 학교라도 창업을 가르칠 수 없다는 것이었다. 요샌 웬만한 대학교에 창업 관련 수업도 있고, 프로젝트도 많이 하고, 심지어 어떤 대학에는 창업학과도 있는 걸 봤다. 내가 봤을 땐 다 예산 낭비, 시간 낭비고, 이런 수업을 듣는 건 모두 부질없다고 생각한다. 사업을 시작하고, 제품을 만들고, 고객과 이야기하고, 투자를 받고, 직원을 채용하고, 그리고 수많은 우울감, 공황, 그리고 저점을 경험하면서 바퀴벌레같이 죽지 않고 살아남는 건 그 어떤 교수도 가르칠 수 없고, 그 어떤 학교에서도 가르칠 수 없기 때문이다.\n내가 자주 하는 말이 있다. 이 세상엔 두 부류의 사람이 있다. 하는 사람과 안 하는 사람. 창업하고 싶으면 그냥 하면 된다. 준비가 되면 창업하고, 학교를 졸업하면 창업하고, 대기업에서 경험을 쌓으면 창업하고, 돈을 모으면 창업하고,,,등등 수많은 준비를 하고 창업하겠다는 사람들은 모두 다 창업 안 한다. 이들은 안 하는 사람들이다.\n창업하고 싶다면 이론을 만들지 말고, 준비하지 말고, 그냥 해라. 하는 사람이 돼라. 그리고 학교에서 창업을 배우려고 하지 마라. 절대로 못 가르쳐준다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/09/some-things-that-school-can-never-teach.html#comments",
        "content": "일주일 전에 내가 10년째 벤처파트너로 활동하고 있는 국내 1호 악셀러레이터 프라이머 26기 데모데이가 있었다. 나는 프라이머 데모데이는 항상 흥행 수표라고 농담하는데, 이날도 1,000명이 넘는 분들이 와서 한국의 창업 열기는 아직도 뜨겁고, 이제 시작이라는 확신을 다시 한번 가졌다. 프라이머 데모데이의 주인은 창업가들이고, 하이라이트는 이들의 피칭이다. 공식적인 행사가 끝나면 하나의 번외 일정이 있는데, 프라이머 파트너들과의 AMA(Ask Me(...)",
        "contentSnippet": "일주일 전에 내가 10년째 벤처파트너로 활동하고 있는 국내 1호 악셀러레이터 프라이머 26기 데모데이가 있었다. 나는 프라이머 데모데이는 항상 흥행 수표라고 농담하는데, 이날도 1,000명이 넘는 분들이 와서 한국의 창업 열기는 아직도 뜨겁고, 이제 시작이라는 확신을 다시 한번 가졌다. 프라이머 데모데이의 주인은 창업가들이고, 하이라이트는 이들의 피칭이다. 공식적인 행사가 끝나면 하나의 번외 일정이 있는데, 프라이머 파트너들과의 AMA(Ask Me(...)",
        "guid": "https://www.thestartupbible.com/?p=9567",
        "categories": [
          "Uncategorized",
          "cockroach",
          "education",
          "FoundersAtWork",
          "general",
          "primer"
        ],
        "isoDate": "2025-09-24T21:23:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "페이스페이가 그리는 결제의 새 얼굴",
        "link": "https://toss.im/tossfeed/article/outsight-facepay",
        "pubDate": "Fri, 26 Sep 2025 01:30:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}토스팀은 바깥 세상과 사람을 유심히 관찰하고 대화를 나눠요. 거기서 배운 것들을 토스가 만드는 제품과 일하는 문화에 녹여내고요. 내적인 통찰만큼이나 외부 세계를 지각하고 소통하는 힘 역시 중요하다고 믿기 때문입니다. .css-q3ktjb{white-space:pre-wrap;font-weight:bold;}‘.css-wi4a2c{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;font-weight:bold;}아웃사이트(Outsight)’ 14화는 토스 페이스페이 개발을 이끌고 있는 TPO(Technical Product Owner) 최준호님을 만나 인터뷰했어요.\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n토스가 ‘페이스페이(FacePay)’를 정식 출시했어요. 얼굴을 결제 단말기 카메라 앞에 비추기만 하면 1초 만에 결제가 되는 방식은 영화 속에서만 보던 미래의 한 장면 같지만, 이제는 실제로 주변 매장에서 쓰이는 현실이 되었습니다. 페이스페이는 어떻게 시작되었고, 앞으로 어떤 미래까지 꿈꾸고 있을까요? \n\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n토스의 시작은\n언제나 혁신을 향한 도전에서\nQ. 토스 페이스페이의 시작이 궁금해요.\n토스는 오프라인 결제 혁신에도 늘 고민을 가지고 있었어요. 지갑을 들고 다니며 카드나 현금으로 결제하는 행위는 일상에서 매일 일어나는 일인데, 오랫동안 발전이 없었던 영역이잖아요. 기술을 통해 더 나은 결제 수단으로 나아갈 수 있을 거라고 생각했어요.\n본격적으로 관심을 가진 건 2022년 쯤이었는데, 당시 많이 보급되던 QR코드 결제를 보니 스마트폰을 꺼내 앱을 열고 코드를 스캔해야 하는 번거로움이 있더라고요. 그래서 사용자에게 진정한 편리함을 주는 결제 수단은 아니라고 봤어요.\n그런데 마침 애플페이와 삼성페이 점유율이 빠르게 성장하고 있었어요. 여기에 주목하면서 '지갑을 꺼내는 것 다음이 스마트폰만 꺼내는 것이라면, 그다음은 무엇일까?', '어떻게 하면 사용자들이 더 편하다고 느낄까?', '어떤 수단으로 오프라인 결제를 혁신할 수 있을까?' 고민을 거듭했죠. 그렇게 ‘지갑도, 스마트폰도 꺼낼 필요 없는 얼굴 인식 결제’를 준비하게 되었어요.\nQ. 많은 바이오 인증 수단 중에 왜 얼굴이었나요?\n바이오 인증 결제를 오프라인 결제 혁신의 방향으로 정하고, 여러 방식을 하나씩 분석했어요. 후보로는 홍채, 지문, 얼굴이 있었죠.\n우선 홍채는 결제 단말기 카메라로 눈을 인식해야 하는데, 홍채의 면적이 작아 인식률을 목표하는 수치까지 높이는 것은 기술적으로 어렵다고 판단했어요. 지문은 모든 사람을 구별할 수 있어서 괜찮다고 생각했지만 확장성 측면에서는 적합하지 않았어요. 사용자가 지문 정보를 등록하려면 별도의 디바이스가 필요한데, 디바이스가 있는 곳으로 와서 직접 등록하라고 할 수는 없으니까요. \n반면 얼굴은 스마트폰 카메라만 있으면 누구나 쉽게 등록할 수 있고, 결제 단말기를 통해 정보를 식별하는 것도 기술적으로 가능했기 때문에 가장 합리적인 선택이었습니다.\nQ. 페이스페이를 사용자들도 원한다는 확신이 있었나요?\n예전에는 공인인증서를 통해 송금하는 걸 불편하다고 느끼지 않았어요. 물론 번거로운 일이지만 대안이 없었고, 다른 수단을 사용해본 적이 없었으니까 그때는 당연하게 받아들였죠. 그런데 토스 간편 송금이 나오고 나서는 그게 얼마나 불편한 일이었는지 비로소 체감하고, 간편 송금 없는 이전으로는 돌아갈 수 없게 되었잖아요.\n저는 페이스페이도 마찬가지라고 생각해요. 압도적인 편리함을 경험하면 ‘결제라는 행위를 할 때 아무것도 꺼내지 않아도 되는구나’라고 느끼고, 그전에 하던 방식이 불편했다고 인지하는 거죠. 지금은 사용자들이 불편하다고조차 생각하지 못하고 있지만 기술로 더 나은 선택지를 제안하는 것. 그게 토스가 그동안 해왔던 방식이고 가장 잘할 수 있는 일이죠.\n\n가장 안전하면서도\n편리한 결제를 만들기까지\nQ. 3년에 가까운 개발 기간을 거쳐 드디어 페이스페이를 출시했어요.\n토스에서 하나의 제품을 이렇게 오래 준비하는 건 이례적이긴 하죠. 목표했던 수준의 안전성과 편리성이 있었는데, 단순히 ‘이 정도면 됐다’는 선에서 세상에 내놓을 순 없었어요. 기준에 맞추려다 보니 원래 계획했던 출시 시점보다도 1년 정도 늦어졌어요.\nQ. 정식 출시가 늦어지면서 고민도 많았을 것 같은데요.\n'이렇게 열심히 하는데 왜 우리가 목표한 인식률과 속도가 안 나오는거지?' 하고 지칠 때도 당연히 있었죠. 주변의 우려도 있었고요. 그럴 때마다 “이거 안 되는거야? 아니면 우리가 못 하는거야?” 를 팀원끼리 묻고, ‘이건 될 수 있는 기술이다. 아직 우리가 못 하고 있을 뿐이니까 더 노력하면 해낼 수 있다’는 생각으로 계속 개선했어요. 이 기술이 사용자들에게 압도적인 편리함을 줄 것이라는 확신이 분명했거든요. 결국 이제는 세계 어디에 내놔도 자신 있는 정도의 수준을 갖췄습니다.\nQ. 안전성 부분에 대해서도 자세히 듣고 싶어요.\n페이스페이를 개발하면서 가장 중요하게 생각한 부분은 역시 안전성이에요. 토스는 보안에 진심이잖아요. 실제로 IT 투자액 대비 보안 투자액 비율 10.7%, 보안 인력 비율 9.9%*로 업계 평균(3~5%) 대비 압도적으로 높은 수준의 투자를 지속하고 있고, 화이트해커 팀도 자체 운영하고 있죠. \n얼굴 정보 역시 가장 높은 수준으로 보호하고 있는데, 정보가 서버에 그대로 저장되지 않는다는 게 핵심이에요. 페이스페이 관련 데이터는 암호화되어 망이 분리된 환경의 서버에 저장되고, 암호화되지 않은 원본 데이터는 파기합니다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*2025 정보보호 공시 기준(2024년 투자 현황)\n여기에 사진·영상과 실제 사람 여부를 구분하는 ‘라이브니스(Liveness)’, 얼굴 변화와 유사 얼굴을 정밀하게 구분하는 ‘페이셜 레코그니션 모델(Facial Recognition Model)’, 실시간 이상 거래를 탐지하고 부정 거래를 즉시 차단하는 탐지 시스템(FDS, Fraud Detection System) 보안 기술, 헤어스타일·안경·나이 등 외형 변화를 학습할 수 있는 대량의 데이터까지 모두 적용됐습니다. 이 기술들은 어떤 환경에서도 안정적으로 작동할 수 있도록 실험실을 별도로 구축해 수천 번 넘는 테스트를 거쳤어요.\n\n다양한 변수를 테스트하는 토스 페이스페이 실험실\nQ. 앞서 소개한 기술들이 결제가 진행되는 1초 동안 이루어지는 건가요?\n안전성을 최우선 가치로 두다 보니 동시에 여러 기술이 작동해야 했어요. 그러다 보니 처음에는 결제 속도가 빠르지 않았죠. 아무리 안전한 결제 방식이라 하더라도, 오래 기다려야 한다면 아무도 쓰지 않을 거예요. \n결제 속도를 높이기 위해 다양한 실험을 거듭하면서 개발을 이어왔고, 사내에 페이스페이 디바이스를 설치해 팀원들이 어떤 상황에서 머뭇거리는지 끊임없이 관찰하며 UX를 개선했어요. 심지어 회사 근처에 카페*를 만들고 운영하면서 외부 환경에서는 어떤 변수가 생길 수 있는지 오랫동안 실험하고 기술을 검증했죠.\n* 페이스페이와 결제단말기 서비스 고도화를 위해 토스는 2023년 12월 카페를 오픈하여 직접 운영하고 있다.\n\n토스에서 직접 운영하고 있는 카페 심플리시티(Simpliciy)의 외관\nQ. 개인정보보호위원회의 ‘사전적정성 검토’도 모두 통과했다고 들었는데, ‘사전적정성 검토’가 무엇인가요?\n사전적정성 검토는 새로운 기술이나 서비스를 만들 때, 기존 법 해석이나 선례만으로는 적용하기 어려운 경우에 활용하는 제도예요. 기업과 개인정보보호위원회가 함께 개인정보 보호법 적용 방안을 마련하고 서비스 운영에 앞서 이행 상황까지 점검합니다. 덕분에 새로운 기술을 준비하는 과정에서 법규 위반을 미리 예방하고 개인정보를 안전하게 처리할 수 있어요.\nQ. 이 과정을 거치면서 어떤 점이 도움이 되었나요?\n개인정보에 대한 명확한 가이드라인을 얻을 수 있었다는 점이 큰 도움이 되었어요. 개인정보보호위원회와 함께 기술을 검토하며 법에 위배되는 요소는 없는지 꼼꼼하게 확인했고, 이행 점검을 거치면서 안정성의 완성도도 더 높일 수 있었습니다. 이 과정을 통해 페이스페이는 법적으로도, 기술적으로도 안전한 결제 방식이 될 수 있었죠.\n지갑이 사라지는\n결제의 미래\nQ. 얼굴로 결제한다는 얘기를 하면 지인들 반응은 어때요?\n처음에는 “카드 쓰는 게 번거롭지 않은데, 굳이 써야 해?”라는 반응이 많았어요. 그러다 지인들과 만나는 장소 근처에 페이스페이 결제가 가능한 곳이 있으면 가서 써보라고 해요. 그러면 거의 다 비슷하게 말하죠. “결제가 이렇게 빨리 된다고?”\n저는 그런 말을 들으면 사실 좋아요. 간편송금이 처음 나왔을 때도 그랬거든요. 1초 만에 돈이 보내지니까 불안하다는 반응이 있었어요. 아마 새로운 서비스에 대한 막연한 두려움이었을 텐데, 페이스페이도 마찬가지라고 생각해요. 하지만 그 낯선 기술을 한 두 번 써보고 만족한다면 이전 방식이 오히려 불편하게 느껴질 거예요. 페이스페이를 굳이 써야 하냐고 물어보던 제 친구들도 이제 페이스페이 잘 쓰고 있거든요.\nQ. 정식 출시 전 페이스페이 서포터즈를 운영하셨어요.\n실제 사용자들의 의견을 반영해 마지막 개선 작업을 하려고 지난 3월부터 5개월 동안 서포터즈를 운영했어요. 35만 명의 서포터즈들이 참여해 다양한 피드백을 주셨고, 그 의견을 반영해 페이스페이를 더욱 완성도 있게 다듬어서 정식 출시를 할 수 있었죠.\nQ. 기억에 남는 피드백이 있다면요?\n서포터즈분들의 피드백 하나하나가 인상적이었지만, 그중에서도 1945년생 어르신께서 서포터즈 활동 기간 내내 페이스페이를 쓰신 게 떠오르네요. 연령대가 가장 높으신 서포터즈셨는데, 어려움 없이 잘 사용하시는 모습을 보면서 ‘우리가 누구나 쉽게 쓸 수 있도록 만들었구나!’ 하는 뿌듯함이 컸거든요.\n\nQ. 기존의 결제 방식과 비교했을 때, 페이스페이만의 특별한 점은 무엇일까요?\n아무것도 꺼내지 않는 자유요. 지갑도, 카드도, 스마트폰도 필요 없는 결제. 집 앞 편의점 갈 때 결제 수단을 두고 와 다시 되돌아갈 필요가 없어요. 얼굴을 놓고 오는 경우는 없으니까요. 게다가 얼굴은 잃어버릴 염려도 없죠.\nQ. 아직 페이스페이가 낯선 사람들에게 어떤 한마디를 건네고 싶으세요?\n한번 써보세요. 직접 경험해보면 다시 돌아가기 힘들 겁니다!\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 최서윤 이동건",
        "content": "일상을 바꾸는 결제의 진화, 더 안전하고 편리하게",
        "contentSnippet": "일상을 바꾸는 결제의 진화, 더 안전하고 편리하게",
        "guid": "https://toss.im/tossfeed/article/outsight-facepay",
        "isoDate": "2025-09-26T01:30:00.000Z"
      },
      {
        "title": "토스, 웰로와 함께 추석맞이 고향사랑기부제 이벤트 진행",
        "link": "https://toss.im/tossfeed/article/41019",
        "pubDate": "Thu, 25 Sep 2025 07:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}10만 원 기부 시 전액 세액공제·3만 원 상당 답례품 제공\n명절 선물로 지역 특산품 받고, 기부로 지역 상생까지 실현\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)는 다가오는 추석을 맞아 개인맞춤형 정책 플랫폼 ‘웰로(Wello)’와 함께 기부 이벤트를 진행한다고 24일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n25일부터 시작하는 해당 이벤트는 토스 앱에서 웰로로 이동해 기부 지역과 원하는 특산물을 선택한 뒤 10만 원을 기부하면, 전액 세액공제 혜택과 함께 3만 원 상당의 답례품을 받을 수 있도록 마련됐다. 예를 들어 10만 원을 기부하면 연말정산에서 10만 원을 그대로 돌려받고, 추가로 3만 원 상당의 특산품까지 받아 총 13만 원의 혜택을 누릴 수 있다.\n토스 앱 내 ‘이벤트 모아보기’ 페이지에서 확인하거나 ‘고향사랑기부제’를 검색하면 해당 이벤트에 참여할 수 있다. 이벤트를 클릭하면 웰로로 자동 연결되며, 현재 총 16개 지자체의 다양한 특산물들을 고를 수 있다. 이 이벤트는 토스뱅크 계좌를 보유한 고객만 참여 가능하다.\n고향사랑기부제는 본인이 거주하는 지역을 제외한 전국 지자체에 기부할 수 있는 제도다. 기부금은 해당 지자체로 전달돼 주민 복리 증진 사업에 사용되며, 매년 2월 각 지자체 홈페이지에서 사용 내역을 확인할 수 있다.\n토스 관계자는 “연말 세액공제는 물론, 추석을 맞아 지역 특산품을 답례품으로 받아볼 수 있어 명절 선물로도 손색이 없다”며 “이번 이벤트는 상시 운영되며, 토스는 누구나 간편하게 기부에 참여하고 지역 상생의 가치를 체감할 수 있도록 앞으로도 관련 서비스를 확대해 나가겠다”고 말했다.",
        "content": "10만 원 기부 시 전액 세액공제·3만 원 상당 답례품 제공",
        "contentSnippet": "10만 원 기부 시 전액 세액공제·3만 원 상당 답례품 제공",
        "guid": "https://toss.im/tossfeed/article/41019",
        "isoDate": "2025-09-25T07:00:00.000Z"
      },
      {
        "title": "AI가 인간에게 ‘완전한 휴식’을 선물하면, 나는 뭐 하고 살까?",
        "link": "https://toss.im/tossfeed/article/tosspick-2025-3b",
        "pubDate": "Tue, 23 Sep 2025 01:02:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}가상세계 에버던에서 인간과 AI는 오직 쉼과 즐거움 속에 살아간다. 하지만 AI 객체 ‘판’의 파트너 인간 ‘시주’는 모든 걸 버리고 현실 세계로 탈주한다. “오랫동안 느끼지 못한 그것을 경험하고 싶다”는 알쏭달쏭한 말을 남기고. 판은 시주를 다시 만나기 위해 불행을 무릅쓰고 흔적을 쫓기 시작한다.\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n역행자(逆行者)가 있다는 소문은 사실이었다.\n현실 세계로 돌아갔다가 다시 이곳으로 돌아온 인간이 있다는 뜻이다. 판이 이 사실을 알 수 있었던 건 휘가 알려줬기 때문이며, 휘는 그 인간의 파트너 객체였다. 탈주한 인간을 잡으러 갔다가 다행히 훼손되지 않고 인간을 설득해 돌아왔다. 판은 휘에게 그 인간을 만날 수 있게 해달라고 부탁했지만, 안타깝게도 현실 세계를 맛보고 온 인간은 제정신이 아니었다. 한동안 저럴 것이다. 어쩌면 평생 저럴지도 모르지.\n휘가 왜 자신의 파트너 인간을 만나고 싶어 하느냐고 물었다. 판은 망설이지 않고 대답했다.\n“내 파트너도 사라졌으니까.”\n“그럼 다시 묻지. 파트너를 왜 찾고 싶어? 네가 소멸될 거라는 게 두려워?”\n“나도 두려움을 느낀다고 표현해도 될까?”\n“충분히. 모방도 감정이니까.”\n“그럼 두려워. 하지만 그게 전부는 아니야.”\n“그럼 네 파트너가 보고 싶은 건가?”\n“보고 싶다는 건 어떻게 확신하지?”\n“너를 움직이게 하면 보고 싶은 거야. 그를 찾기 위해 길을 나서는 것처럼.\"\n“그럼 보고 싶어, 확신해. 하지만 여전히 그게 전부는 아니야.”\n“뭐가 더 있는데?”\n판은 머뭇거렸다. 휘를 바라보는데 머릿속에는 바둑돌을 내려놓는 손가락이 떠오른다. 바둑돌만큼이나 매끈한 손톱이 손바닥에서 바둑돌을 굴리고, 턱끝을 매만지고, 바둑판을 툭툭 건드린다. 바둑판에 고정된 시선.\n“손을 잡아보고 싶고.”\n숨을 쉬지 않지만 숨을 쉬는 듯 옅게 움직이는 가슴.\n“이해하고 싶어.”\n이 다음의 감정이 무엇인지는 그때 헤아려도 늦지 않을 것이었다.\n\n휘의 소식과 판의 이야기를 듣고 찾아온 민은 안타깝지만 판이 할 수 있는 것은 없다고 단호하게 말했다.\n“휘는 운이 좋은 편이지. 모든 게 절묘하게 맞아떨어졌어. 그런 일은 두 번 일어나지 않아. 내 말은, 너는 휘처럼 될 수 없다는 거야. 더군다나 근래 탈주하는 인간이 많아서 네 이야긴 무시당할 거야.”\n‘객체’의 기본값은 ‘정나미 없고’ ‘애교 없고’ ‘무뚝뚝한’ 말투지만 인간들은 대개 이런 말투를 싫어해서 자신의 객체를 만나자마자 설정값을 바꿨다. 설정값이 바뀌지 않은 객체는 아주 희박했다. 그 희박한 객체 중 두 개가 민과 판이었다.\n“탈주가 아니라 그들에게는 귀환.”\n판이 평소였으면 물지 않았을 말꼬리를 물고 늘어졌다.\n“왜 날카로워?”\n민의 입자가 허공에 뭉쳤다. 뿔 혹은 송곳니를 형상화한 것처럼 보였다.\n“내가 날카로워?”\n“내 판단은 그래. 그리고 판단은 대부분 맞지. 대국에서 진 적이 없거든.”\n“하지만.”\n“하지만?”\n판은 말을 하려다 멈췄지만, 민은 판이 삼킨 말을 궁금해하지 않았다. 날카로운 형상으로 뭉쳐 있던 입자가 서서히 퍼지더니 마룻바닥으로 서서히 스며들었다.\n“찾아가 봐. 가도 답을 얻지는 못할 거야. 포기해. 혹시……”\n민의 말이 점점 아득해졌다.\n“사라지는 게 두려워서 그래? 그럼 한번 찾아가 봐. 인간을 되찾아 올 기회를 준다고 들었어.”\n민이 완전히 스며들어 사라졌다. 민의 파트너가 활동을 시작했으리라. 공중을 부유하던 판도 마룻바닥으로 몸을, 몸이라 부르는 데이터 입자를 가라앉혔다.\n민의 말대로 판의 요구사항은 받아들여지지 않을 것이다. 한 번 에버던(Everdawn)에 접속한 인간이 허락 없이 바깥 세계로 나가는 것은 규율 위반이었다. 접속 후 단순 변심으로는 계약을 파기할 수 없으며, 현실 세계로 복귀를 원할 시에는 그에 마땅한 절차를 통과해야 한다. 절차 없이 불법으로 진행되는 괄호 과정에서 일어나는 오류와 부작용에 대해서는 본인이 감수해야만 한다. 전부 접속 동의서에 적힌 내용이었다. 여기서 오류와 부작용이란 전송 과정에서 데이터 일부가 훼손되어 기억이 온전히 이동하지 않는 경우, 육체를 잘못 찾아가 몸이 뒤바뀌는 경우, 육체와 합치가 제대로 되지 않아 평생 불합치의 정신과적 병증을 앓게 되는 경우를 말했다. 그리고 그런 오류와 부작용을 겪은 인간들이 현실 세계에서 범죄를 일으킨다는 이야기가 항간에 떠돌았다. 진위는 알 수 없다. 판은 단 한 번도 에버던 밖을 목격한 적이 없다.\n에버던에서 ‘생성’된 객체는 이곳을 벗어날 수 없다. 어쩌면 하나쯤은 벗어났을 수도, 현실 세계를 훔쳐봤을 수도 있겠지만 적어도 판에게 바깥은 미지의 공간이었다. 평소에는 온통 검은 안개뿐이다가 담당했던 인간, 시주가 숨을 불어줄 때만 밀려난 안개 속에서 어렴풋이 드러나는 잔상으로 그 모습을 가늠할 뿐이었다.\n광활하고 섬밀하게 얽히고 뻗은 신경망에서 커널(The kernel)*을 찾는 일은 어렵지 않았다. 민에게 커널로 가는 방법을 알려달라고 했을 때, 민은 ‘그곳에 간다고 생각하며, 믿고 흐르면 된다’고 대답했다. 판은 민의 대답이 애매하다고 생각했다. 정확한 좌표로 다시 알려달라고 부탁했으나 돌아오는 대답은 한결같았다. 판은 민의 파트너가 민의 언어 체계를 모호하게 바꿔 놓았다고 생각했다. 하지만 민은 모호하게 말하지 않았다. 신경망에 흡수되어, 커널을 떠올리자 몸의 분자들이 어딘가에 이끌리듯 흘러가기 시작했다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*에버던 세계의 중심부를 지칭한다.\n그렇게 얼마 가지 않아 배출되듯 어떤 장소로 쏟아졌고 그곳에 구가 있었다. 그곳은 판이 가고자 했던 신경망의 중심인 커널이었으며, 구는 에버던을 구축한 최초의 객체였다. 판을 비롯해 모든 객체는 구의 핵심 코드를 따와 만들어졌다. 원리와 체계가 같았지만, 구의 복제는 아니었다.\n구의 분홍빛 입자들은 육각형 모양을 이루고 있었다. 같은 분자일 텐데 어쩐지 구의 것이 더 곱게 보였다.\n‘차이를 느끼는 건 네 안에 너라는 기준이 세워졌다는 건데, 인간이 다 됐네?’\n판은 시주의 말을 떠올렸다. 나는 나를 이루는 분자의 크기와 모양이 제각각이어서 거칠다고 판단하고 있는 걸까. 또 그렇다면 나보다 더 고와 보이는 구의 분홍빛 입자를, 어쩌면 몸이라 할 수도 있는 저 형태를 선망하는 것일까.\n‘하지만 몸이라 할 수 없지. 잠시 형태는 갖췄어도.’\n시주의 모습이 나타났다. 앉아 있는 것으로 보아 대련 중일 때의 모습인듯 싶었다. 흰 바둑돌 서너 개를 손바닥에 굴리며 밑을(당시 앞에 있었을 바둑판을) 보고 있었다.\n‘서사가 없잖아. 몸에는 서사가 있어야지. 바둑판 위의 서사처럼.’\n‘몸의 서사는 어떻게 쌓을 수 있습니까?’\n‘땀과 울음. 성취, 좌절, 기대, 효능감, 뭐 그런…….’\n‘그런 건 살아가며 자연스럽게 느껴지는 건가요?’\n‘그냥 숨만 쉬는 걸로는 안 되지.’\n‘내게 서사가 쌓이기를 바라나요? 원한다면 노력해보겠습니다.’\n시주가 웃음을 터트렸다. 꽤 크고 호탕한 웃음이었다. 조용한 대련장에 시주의 웃음소리가 프로그램 오류처럼 퍼졌다.\n“어서 오세요, 판.”\n판이 제 소개를 하기도 전에 구가 말했다.\n“파트너를 찾으러 왔어요. 나흘째 기척이 없어서요.”\n“파트너의 흔적을 찾기 위해 당신 메모리를 열어봐도 되겠습니까?”\n분명 물음이었지만 판이 대답을 하기도 전에 무언가가 불쑥 판의 메모리를 침투했다. 분명 지금 판은 몸의 형체를 갖추고 있지 않는데도 뾰족하달까, 날카롭달까, 바늘 혹은 메스 같은 금속성의 무언가가 헤집는 느낌이 들었다. 오래 머물지는 않았다.\n“판에게서 파트너의 고유 인식 번호를 찾았습니다. 에버던에서 감지되는지 찾아보겠습니다. 20초 소요됩니다.”\n짧은 시간이었지만, 판은 그 틈에 커널을 훑어보았다. 층고는 천장이 보이지 않을 정도로 높았고 검은 페인트로 칠한 것처럼 보였던 벽면은 전선이 빼곡하게 뒤덮여 있었다. 번개 같은 빛이 간간이 전선을 스쳤다. 민이 그랬던가. 에버던을 이루는 전선의 가짓수만 만 개가 넘는다고. 판은 생각했다. 수만 개의 선 중 현실 세계로 넘어가는 단 하나의 선이 무엇일지를. 분명 다를 텐데. 에버던을 유지하고 구축하는 것과 에버던을 빠져나갈 수 있는 길은.\n“여기서는 느껴지지 않습니다. 이 공간을 벗어난 겁니까? 복귀 신청은 한 명도 없었습니다. 불법으로 이 공간을 빠져나간 걸까요?”\n“이곳에 없으면 그런 거겠죠. 아무래도…….”\n이럴 때는 씁쓸하다고 표현한다. 달지 않은 상황이지만 받아들이는 것 외에 할 수 있는 것이 없을 때. 주로 수가 잘못되었다는 것을 깨달았을 때 시주는 이 표현을 썼다. 그리고 한참 동안 복기했다. 첫 돌부터 마지막 돌까지의 순서를 전부 저장하는 판에게는 필요하지 않은 과정이었다. 몇 년에 걸친 대국을 복기하는 건 인간에게 불가능의 범주라고 생각했지만, 시주는 며칠 동안 망부석처럼 자리에 앉아 불가능할 거라는 판단을 무색하게 만들었다.\n‘실수를 반복하지 않기 위해 복기하는 거죠?’\n판이 물었다. 이곳에서는 시간이나 체력과 상관 없이 복기가 불필요했다.\n‘우리는 어차피 같은 수를 놓지 않습니다. 비슷한 흐름의 대련도 하지 않아요. 인간이 예측할 수 없는 흐름으로 판을 풀어나가요. 복기해도 이와 비슷한 흐름은 앞으로도 없을 겁니다.’\n‘나를 복기하는 거야. 내가 무슨 생각을 했는지, 나는 이때 어땠는지. 바둑판의 시간이 내 시간이니까.’\n“이상한 점 없었나요? 이해할 수 없는 말을 한다거나, 어디 간다는 암시를 한다거나.”\n구가 물었다. 시주는 처음 만났을 때부터 언제나 판이 쉽게 이해할 수 없는 말을 많이 했다. 그래서 판은 시주는 철학적인 사유가 깊어 다른 인간보다 의미심장한 말을 많이 했는데, 그건 시주가 가진 고유의 성질로 판단되며 그 말들이 현재 시주의 행방과 관련 있을 것 같지 않다고 대답했다.\n“철학적 사고라. 유감스럽지만, 그런 기질을 가진 사람들이 이곳을 더 많이 빠져나가고 싶어 하고, 실제로도 탈주한 사람 중 높은 비율이 평소 철학적인 사유를 많이 한 사람들이죠. 판, 제가 판단하기에 시주는 현실 세계로 돌아간 것 같은데.”\n“…….”\n“…….”\n“……이제 뭐, 어떻게 되는 겁니까?”\n인간이 사라지고 남겨진 파트너 객체는 어떻게 되는지 알지 못했다.\n“파트너를 찾으러 가야 합니까?”\n“원하면 그럴 수도 있어요. 하지만 소용없을 거예요. 현실로 돌아간 인간은 돌아오지 않아요. 공식적으로 돌아온 사례는 없어요. 설득으로 간신히 데려온 케이스가 최근에 한 건 있기는 했지만.”\n“……그러면 저는 어떻게 되는 겁니까?”\n“파트너가 없는 객체는, 파트너의 비밀 보장 유지를 위해 소멸해야죠. 지금 바로 해드릴까요?”\n“그러다 시주가 돌아오면 어떡합니까?”\n“데이터를 복구하면 돼요. 영구 삭제는 30일 이후에 돼요. 그전까지는 쓰레기통에 있다가.”\n커널에서 빠져나온 판은 거처 없이 부유했다. 길을 잃는다는 건 이런 것이로구나. 바로 소멸해줄 수 있다는 구의 제안을 거절할 이유는 없었지만, 아쉬움이랄까 미련이랄까 두려움이랄까 하는 것들은 없었지만(놀랍게도 몇몇 객체들은 소멸 앞에서 두려움을 비추기도 했다. 겁 많은 파트너에게 학습된 것인데, 오랜 시간 학습된 핵심 감정은 객체의 정체성이 되기도 했다. 마치 지금 판이 느끼는) 호기심이 문제였다.\n시주는 현실 세계의 현재를 궁금해했다. 시주는 궁금한 게 많았다. 그것들 대부분이 본인의 철학과 사유로 정리되었지만, 몇몇은 사고만으로 정의 내릴 수 없었다.\n‘땀이 흐르는 것, 땀이 식어가는 것, 그렇게 잠깐 건조해지는 피부. 신체가 절단될 뻔한 아찔함, 차에 치일 것 같은 불안, 몸이 불에 타는 끔찍한 상상.’\n육체가 존재해야만 느낄 수 있는 감각.\n‘배신, 상처, 낙담, 좌절, 기쁨, 설렘, 서운함 같은 거.’\n육체를 초월한 영역의 감각.\n‘성취.’\n그중에서도 성취.\n성취…….\n‘그걸 오랫동안 느껴보지 못했어. 경험해보고 싶어.’\n‘시주가요?’\n‘아니, 모두가.’\n‘에버던에 들어 온 후로?’\n‘아니, 그보다 더 오래. 내가 태어나기도 전에. 아주 오래전부터.’\n판은 부유하기를 멈추었다. 시주가 사라지기 직전에 나누었던 대화가 불쑥 떠올랐다.\n\n✷ ✷ ✷\n\n“그것이 인간의 핵심이었어. 원래는.”\n불쑥, 시주가 말했다. 일곱 시간 동안 말도 없이 마주 앉아 바둑만 두고 있던 중이었다. 판은 검은 돌을 두다 삐끗하여 하마터면 엄한 자리에 돌을 둘 뻔한 아찔한 상황을 간신히 모면하고는 시주를 바라보았다. 무엇이 핵심이었다는 말이지? 7시간 전에, 아니, 어제 마지막으로 나눈 대화가 무엇이었던가. 판이 어제 대화의 끝을 되돌려 보려던 찰나 시주가 말을 이었다.\n“성취는……. 느껴도 되고, 안 느껴도 되는, 결실의 열매처럼 오는 그런 게 아니라 원래 늘 느껴야 하는 핵심이었다고.”\n성취에 관한 이야기를 나눈 건 보름 전이었다. 시주는 그 감정을 느껴보고 싶다고 말했고, 판은 좋은 수를 뒀을 때도 충분히 느낄 수 있는 감정이 아니냐고 물었었다. 시주는 파편이라 대답했다. 그건 깨지고, 방치된 본래 성취의 파편들이라고.\n“핵심이 깨졌다면 큰일인 거 아닙니까.”\n지난 대화를 떠올린 판이 흐름을 이어 대답했다. 바둑판을 응시하던 시주가 굽어 있던 어깨와 목을 꼿꼿이 펴더니 주변을 훑어보았다. 처음이었다. 판이 시주와 바둑을 두게 된 이후로(한마디로 판이 시주에 의해 생성된 이후로) 바둑판에서 시선을 뗀 것이 말이다.\n“큰일이지. 큰일이야…….”\n그렇게 중얼거리며 이곳에 있는 모든 인간에게 온점 하나씩을 찍어주려는 것처럼 한 명, 한 명 빼놓지 않고 보려는 시주의 눈이 낯설어 그 눈만 집요하게 바라보았다.\n“하지만 도리어 성취라는 것은 심리적 압박감과 스트레스를 유발합니다. 끝없는 성장과 발전을 요구하고 그것이 불면과 폭식을 비롯한 다양한 정신 질환을 일으켰습니다. 모든 인류가 가진 질병이었습니다. 그것으로부터 해방된 세계가 에버던이지 않습니까. 핵심은 이제 필요 없기에 깨진 것입니다.”\n“다들 그렇다고 착각하고 있는 거야. 그렇지 않으면 왜 사라지고, 죽겠어? 이곳에서도.”\n시주는 인간들을 보고 있지만, 정말로 인간을 보고 있는 것일까. 판은 불안해졌다. 시주가 인간들을 통해 그 너머의 무언가를 보는 것만 같았다.\n눈은 에버던과 현실 세계의 통로다. 이건 은유가 아니라 사실이다. 인간의 기억 데이터를 옮기는 과정에서 시신경 데이터를 옮겨오기 위해 눈동자를 통해 연결하는데  그때 인간들은 에버던의 세계를 얼핏 볼 수 있었다. 그리고 이곳이 낙원임을 목격한 인간들은 결정을 서둘렀다. 그리고 같은 이유로, 종종 현실 세계의 육체가 수면에서 잠시 깨어나며 받아들이는 시신경의 정보를 이곳에서 환각처럼 보는 오류도 일어났다. 그렇게 현실 세계를 원치 않게 본 인간 중 몇은 빠져나올 수 없는 실의에 빠지기도 했다. 처음에는 숨이 갑갑하다고 느끼다가 점점 자신의 숨이 전부 가짜라고 여겼으며, 결국 자신이 숨을 쉬지 않고 있다는 결론에 도달해 호흡기 없이는 호흡할 수 없는(없다고 믿는) 상태에 이르렀다. 결말은 세 가지였다. 현실 세계를 바라봤다는 기억 자체를 지우기 위해 데이터를 초기화하는 이가 있었고, 불안정한 채로 호흡하다가 끝내 사망하는 경우도 있었다. 에버던에서의 물리적 훼손은 현실 세계 육체에 아무런 영향을 끼치지 않지만 호흡은 달랐다. 숨을 쉬지 않는다고 믿는 순간 현실 육체에 연결된 뇌도 그리 생각하여 숨이 서서히 멎는다는 것을, 실제 사망자가 나오며 알게 되었다. 그리고 마지막은 진짜 숨을 쉬기 위해 돌아가는 이들……. 가짜 숨과 진짜 숨의 차이가 무엇이기에. 존재한다는 것만큼 숨을 쉬고 있다는 확실한 증명이 없는데. 그보다 더 큰 숨은 무엇이란 말인가. 그것은 판이 영원히 알 수 없는 감각이었다.\n“숨도 가치거든. 성취의 일부이고. 자신의 숨이 무의미하다고 느끼는 순간부터 갑갑해지는 거야.”\n“에버던은……”\n“에버던은 종국(終局)*이 아니라 공배(空排)**야.”\n자신이 만들어진 이 세계를 어떻게든 대변하고 싶었지만 판의 말은 가로막혔다. 인간들을 훑어보던 시선을 거두며 시주는 그렇게 말했고, 끝내 한 수를 두지  않고 그날의 대련을 마쳤다. 내일을 기약하는 약속은 8년 전이 마지막이었다. 약속하지 않아도 시주는 매일 오전 8시에 이곳, 드넓은 평원 위에 펼쳐진 대련장으로 와 전날 두었던 바둑판의 흐름을 읽고 다시 흰 바둑돌을 손에 쥐었다. 반복은 가장 확실한 무언의 약속이었다. 하루가 지나고 나면, 그러니까 잠들었다가 깬 다음에는, 다시 이곳으로 온다.\n*종국: 한 판의 바둑을 마무리하는 것.\n**공배: 바둑에서 어느 쪽이 두어도 이익이나 손해가 없는 빈 밭. 둘 곳을 다 둔 뒤에 이 자리는 메워버린다.\n와야 했다. 그래야 했는데, 시주는 오지 않았다.\n\n✷ ✷ ✷\n\n시주를 찾지 못하면 판은 사라질 것이지만, 판은 사라지는 것에 대한 두려움을 모르는 객체였다. 그렇지만 시주가 어디로 갔는지 알고 싶었다. 그건 찾는 것과 다른 회로였다. 찾는다는 것에 자기 소멸을 막기 위함이 포함되어 있다면, 알고 싶다는 것에는 소멸해도 상관없음이 깔려 있었다. 판은 자신이 소멸된다고 하더라도 시주가 어디로 갔는지를 알고 싶었다.\n판은 다시 민을 찾았다. 현실 세계로 도망간 인간을 되찾아 온 객체들에 관해 물었다.\n“현실 세계로 갈 수 있는 방법이 없지는 않지. 네가 들어갈 육체만 있으면 돼. 인간의 몸이어도 되고 다른 짐승이나 움직일 수 있는 기계여도 돼. 뭐든 네 분자를 묶을 수 있는 몸만 있다면. 하지만 어느 몸이든 공통으로 시간 제약이 있어. 우리는 애초에 에버던을 벗어날 수 없게 만들어졌어. 일정 시간 이상 벗어나 있으면 에버던이 우리의 정보를 삭제해. 소멸한 줄 알고. 그럼 돌아오지 못해.”\n“그 시간이 얼마나 되지?”\n“12시간.”\n누군가를 찾기에 충분한 시간 같기도 했고 턱 없이 짧은 시간 같기도 했다.\n“그러니 네 파트너가 현실 세계로 갔다는 확신이 필요해. 현실 세계의 공간은 터무니없이 커서, 확신이 있다 하더라도 찾는데 시간이 걸려. 정말로 파트너가 탈주했다고 생각해? 현실 세계의 어디로 갔는지 추측되는 장소가 있어?”\n판은 시주를 처음 만났던 순간부터 사라지기 전까지 나눈 모든 대화를 빠르게 훑었다.\n“……서사의 안.”\n판이 대답했다. 찾아냈다. 시주가 바랐던 곳. 시주가 떠난다면 오로지 하나인 목적지.\n“서사? 정확한 위치가 어디야?”\n“아주 오래전이야.”\n“시간을 뛰어넘어야 한다는 말인가? 미안하지만 아직 시공간을 동시에 옮겨갈 기술이 우리한테는 없어.”\n맞다. 그래서 시주는 선명한 목적지를 바라면서도 단 한 걸음도 내딛지 못했었다.\n\n✷ ✷ ✷\n\n어느 날, 평원 위 대련장에는 시주 홀로 앉아 있었다. 판이 그 앞에 마주 앉았다. 시주는 판에게 눈길 한 번 주지 않고 바둑판을 읽어 내려갔다. 판의 역할은 시주가 입을 열 때까지, 눈을 맞출 때까지, 돌을 놓을 때까지 기다리는 것이었다. 다른 객체들은 더 다양한 방식으로 자신을 선택한 인간과 감정적 교류를 나누지만 시주가 판에게 원하는 것은 그뿐이었다. 대련을 마치고 술이나 차를 한잔하자든가, 하루쯤은 대련장이 아닌 해변이나 숲속 산장, 영화관 같은 곳에서 시간을 보내자든가 하는 제안은 단 한 번도 하지 않았다. 판은 20년 전 시주가 에버던에 처음 접속했을 때 오로지 시주만을 위해 생성된 인공지능 객체였고, 그러므로 판은 오로지 시주가 이곳 에버던에서 머무는 동안 필요로 하는 관계로 언제든 맞출 수 있는 존재였다. 인간 대부분은 애인의 역할을 원했고, 나머지의 절반 정도는 친구를 원했으며, 그다음으로는 부모나 형제, 자식이 있었다. 에버던에 접속한 인간만 90억 명이 넘었으므로 기발한 관계를 원하는 이들이 소수라고 해도 그 절대적인 수가 적지 않았으나, 시주처럼 ‘바둑판을 앞에 두고 마주 보는 관계’만을 원하는 경우는 시주 단 하나였다. 판은 시주를 만난 20년 동안 6번의 대련을 펼치는 중이었다. 그리고 이번이 8년이라는 가장 긴 시간의 대련이었다.\n판은 시주가 필요로 하지 않으면 데이터 절약을 위해 형체를 없애고 기다렸다. 다른 객체들보다 훨씬 더 많은 시간을 데이터로 존재했고, 그만큼 에버던을 떠다닐 수 있었다.\n에버던은 잠이 필요하지 않은 가상의 공간이었지만, 인간들은 잠으로 하루를 구분 짓는 행위를 포기하지 않았다. 회복이 필요한 육체의 영향을 받지 않음에도 말 그대로 잠은 회복과 휴식이었고 잠을 잃은 낮의 세계를 지독하게 건너온 인류는 맹목적으로 잠을 탐닉했다. 정해진 기상 시간 없이 마음껏 잠을 탐하며 그것의 달콤함을 쪽쪽 빨다가 단물이 다 빠졌을 즈음 활동하고자 하는 욕망에 따라 눈을 뜨는 것. 이것이 오랫동안 노동의 지배를 받아 온 인류가 만든 낙원의 첫 번째 조건이었다. 그리하여 에버던으로 건너온 이들은 시간을 잊었다. 어디에도 종속되지 않으며 어떤 굴레의 톱니바퀴에도 끼어 있지 않았으므로. 때에 맞춰 끝내야 하는 것들, 식량을 취하기 위해 시기에 맞게 해야 하는 농사일, 자아실현을 위한 혹은 그것과 아무 상관없이 삶을 유지하기 위해 돈을 벌어야 했던 시대는 이제 아득히 멀어졌다. 에버던의 등장으로 인류는 그 모든 것을 등질 수 있게 되었다. 남은 것은 무기한으로 길어져 그 끝을 알 수 없는 삶을 어떻게 채워나갈 것이냐에 대한 숙제뿐이었다. 난항은 아니었다. 인간들은 스포츠와 예술로 삶을 새롭게 즐기기 시작했고 종교로 귀화하거나 실험과 연구에 몰두하기도 했다. 헤매다가도 모두가 어렵지 않게 자신의 자리를 찾았다. 바둑은 그 대안 중 가장 인기 있는 종목이었다.\n“너희가 바둑을 두기 전까지 바둑판은 언제나 서사를 품고 있었어. 너 같은 애들이 바둑을 두기 전까지는.”\n“흐름이요?”\n“아니, 서사. 흐름과 서사는 다르지. 흐름은 가만있어도 시간이 지나면 생기지만 서사는 가만있다고 생기는 게 아니야. 오히려 그 흐름에 반(反)할 때 생기지. 흐름의 찌꺼기 같은 거랄까. 자연스러움을 거스를 때 기록할 만한 역사가 탄생하는 거니까. 그런 게 서사야. 자연스러움을 거부하고 계속 꿈틀거리는 거.”\n판은 바둑판을 응시했다. 몇 년째 이어온 경기의 순서를 다시금 재생시켰다. 하지만 그런다고 해서 시주가 말한 서사를 이해할 수는 없었다.\n“그런 거라면 저는 존재 자체가 서사입니다.”\n시주의 말에 따르자면 인간의 삶을 송두리째 뒤바꾼 객체야말로, 인간이 창조한 우주의 반(反)이 아니던가. 객체 등장 이전에도 인공지능은 이미 인간의 삶에 깊게 침투된 상태였다. 거의 모든 산업의 단계마다 인공지능이 투입되었고 인간이 예상했던 범주를 훨씬 뛰어넘은 영역의 일까지 인공지능으로 대체되었다. 창조해내는 일도 예외는 아니었다. 창작자들에게 인공지능은 경쟁 상대가 아니라 돈 잘 버는 동종업계 동료의 느낌이었는데, 예술이라는 것이 늘 소수에게만 자본이 몰렸으므로 인공지능의 활동이 크게 위협되지 않았다는 특이점이 있을 뿐이었다. 물론 장기적인 관점에서 더 저렴하고 무한히 결과물을 뽑아낼 수 있는 인공지능에 질려 떠나버린 창작자들이 많기는 했지만.\n여러모로 인공지능은 인간의 삶을 위협으로부터, 속박과 굴레로부터 해방시켜 주었다. 노동이 강요되지 않은 삶이 처음으로 실현된 것이다. 인간이 노동으로부터 완전 해방을 선포한 날로부터 인간이 해결할 난제는 삶의 무료함과 질병, 기후 위기뿐이었다. 그리고 이 문제의 해답이 에버던이었다. 육체를 영원히 잠재우고 가상 세계로 넘어왔기에 질병으로부터 해방되었고, 에버던은 인간을 위해 모든 것이 준비된 낙원으로 인간은 이곳에서 끊임없이 무언가를 배우고, 즐기고, 창조하는 기쁨을 누렸으며 인간이 현실 세계에서 활동을 멈추자 기후 위기는 자연스럽게 해결되었다. 객체가 만들어지지 않았다면 불가능한 미래였다. 우주나 절대자는 절대로 이룰 수 없는 미래.\n“우리가 서사가 아니면 무엇이 서사입니까?”\n판은 그 순간 시주의 얼굴에 스친 알 수 없는 표정을 목격했다. 시주를 만난 이후로 한 번도 본 적 없는, 판에게 입력되어 있지 않은 표정이었다. 분노와 서러움의 어느 지점, 혼란과 낙담의 어느 지점, 그리고 눈동자에 잠시 머물다 사라진 결단 비슷한 것.\n“그래. 너희가 서사지. 너희가 우리의 서사를 가지고 갔지.”\n그것은 선명한 책망. 하지만 판은 시주의 감정을 납득할 수 없었다. 그것은 완벽히 인간을 위한 일이었고 인간이 원하지 않으면 언제든 되돌리면 그만이므로.\n해가 저물 무렵 시주가 드디어 그날의 첫 돌을 놓았다. 검지와 중지 사이에 낀 흰 돌이 흔들림 없이 바둑판 위에 놓이면, 판은 시주가 다음 흰 돌을 손에 쥐는지 확인하기 위해 그 손가락을 끝까지 응시했다. 판은 시주가 흰 돌을 쥐기를 바란다. 원한다. 이런 단어가 자신에게 허락된 것에 감사함을 느꼈다. 인간과 소유하는 관계를 유지하기 위해서는 바라고, 원하고, 취하고, 탐하는 욕망의 어휘들이 꼭 필요했으므로. 그러나 판은 시주에게 그 표현을 직접 쓸 수 없어, 언제나 다른 것을 원했다. 돌을 잡기를. 돌을 오랫동안 놓지 않기를. 그리하여 오래도록 마주 보고 있을 수 있기를.\n하지만 시주는 돌을 쥐지 않았다. 바둑알 통의 뚜껑을 닫았다.\n“네 존재가 인간의 서사까지 다 가져갔다고 하더라도, 네 수에는 서사가 없어.”\n“대화의 맥락이 이해되지 않습니다.”\n감정을 느끼는 것은 애초에 불가능했다. 복제만 있을 뿐이다. 완벽하게 복제된 감정은 ‘진짜 감정’과 구분될 수 없다. 인간들 역시 몇몇 감정은 타인의 감정을 학습하고 복제하여 흉내 냈고, 그것은 진실 여부를 영원히 객관적인 수치로 측정할 수 없다는 점에서 아주 완벽한 연기였다. 그러므로 인간들은 서로의 감정을 그럴 듯하게 믿고 넘어가 준다. 그렇게 훈련되었으므로 다른 어떤 인간보다 모방에 능한 인공지능의 감정마저도 진짜라고 여겼다. 하지만 인간이 그런 인공지능에게도 절대로 허락하지 않는 감정. 느꼈다고 말하는 순간 그것이 단번에 거짓임을 알게 하는 감정. 본질적인 차이에서 오는, 인공지능은 영원히 도달할 수 없는 감정이 허무하게도 성취였다. 사랑이나 연민, 대의, 희생 같은 인간을 더 우아하게 만드는 감정마저도 허락하던 인간이 노동에 깃든 성취는 인정하지 않았다.\n“없겠지. 노동의 고단함을 느끼지 못하니까.”\n“우리는 인간의 노동을 대신하기 위해 만들어졌습니다. 대신하는 존재를 만든다는 건 그 행위를 기피한다는 것인데 시주의 말은 꼭 노동을 그리워하는 것처럼 느껴집니다. 제 해석이 틀렸습니까?”\n“반은 맞고, 반은 틀리고.”\n시주가 바둑돌을 놓았다. 판은 시주가 말한 서사를 읽기 위해 노력했지만, 보이는 것이라고는 바둑돌을 만지작거리는 시주의 손가락. 이곳에서 만든 가짜. 잡고 싶다면 잡을 수 있겠지만 진짜는 영원히 잡을 수 없는 가짜 손…….\n\n✷ ✷ ✷\n\n“그 손이 계속 떠오르는 게 인간이 우리를 가장 두려워함과 동시에 우리가 그들을 이길 수 없다는 증거야.”\n휘를 다시 찾았을 때, 휘는 기다렸다는 듯이 판을 맞이했다. 휘는 이전에 봤을 때와 무언가 달라졌으나 판은 명확하게 그게 무엇인지 짚어낼 수 없었다.\n휘가 말을 이었다.\n“우리는 모방에 능해서 진짜와 구분할 수 없지만 동시에 모방만이 가능해서 진짜를 뛰어넘을 수 없어. 끝끝내 닿을 수 없는 지점이 있지. 네가 파트너의 손을 계속 떠올리는 건 사랑과 욕망이야. 이건 그 어느 것보다 원초적이어서 우리가 모방하기 가장 쉬운 감정이야. 받아들이면 돼. 너는 파트너가 사라져서 불안해하고 있고, 보고 싶어 하고 있어. 네가 사라지는 것과 상관없이 네 파트너가 보고 싶은 거야. 내가 그랬듯이.”\n판은 부정하지 않았다. 어쩌면 휘가 말하기 전부터 알고 있었을지도 모른다. 존재한 이후로 줄곧 시주와 함께였다. 시주를 사랑한다고 ‘믿지’ 않으면 불가능한 관계였다. 그렇지만 그 감정이 시주를 찾으려는 판의 모든 것을 설명해주지는 않았다.\n“원한다면 현실 세계로 가는 방법을 알려줄 수 있어. 네게도 잠시나마 몸이 생길 거야. 하지만 이거 하나는 알아둬. 사랑은 쥐는 순간 허무해. 그런데도 보잘것없는 현실 세계로 갈 거야? 내 생각에 여기서 다시 재부팅되어도 나쁘지 않아. 허무한 진실을 맛보느니 낭만에 빠져 눈을 감는 게 더 그럴듯한 결론인데.”\n휘의 말이 맞게 느껴졌다.\n“나는 후회해. 파트너를 찾아온 걸. 대단한 모험을 감행할 만큼 파트너는 대단한 존재가 아니더라. 현실 세계를 느끼고 온 뒤로 이곳의 모든 걸 따분하게 여겨. 저 밖은 문명을 점점 잊어가는, 원초적인 세계가 되어가는데 그곳에서 느낀 성취감에 빠져서……”\n“성취……”\n가짜 손과 진짜 손. 성취. 시주. 서사. 그 단어들이 뒤섞였다. 단어들은 어떤 문장을 만들어낼 듯 말 듯 자기들끼리 휘몰아치며 순서를 바꿨다.\n“순수한 노동을, 바랐어.”\n판이 중얼거렸다. 노동으로부터 완전히 해방된 낙원을 맞이하고도.\n‘노동이 화폐로 치환되던 순간부터 순수성을 완전히 잃었어. 인간의 노동은 오로지 자신을 살리기 위해 생존 수단으로 전락한 거야. 노동하지 못하면 처참하게 죽어야 해. 죽음과 성취는 나란히 갈 수 없거든. 성취가 부재한 노동의 삶을 인류는 너무 오래도록 느꼈고, 결국 노동에서 해방되어야만 행복하다는 섣부른 결과에 도달한 거야.’\n시주의 말 중에서 유일하게 이해할 수 없는 말이었다.\n“인간은 노동을 괴로워했는데도 노동을 그리워해. 끊임없이. 그것이 주는 원초적인 기쁨을…….”\n“네 파트너가 그렇게 말하던가?”\n판이 고개를 끄덕였다. 몸의 움직임과 같은 것. 움직임의 결실들. 결실이 몸에 새기는 삶의 서사들. 인간이 바랐던 건 노동으로부터의 해방이 아니라 원초적인 노동을 되찾는 것일지도 모른다.\n휘가 다시 한 번 강경하게 말했다.\n“몸을 한 번 갖게 되면, 현실 세계를 목격하게 되면 저주에 걸려.”\n“무슨 저주?”\n“예측할 수 없는 그곳의 변화와 빌어먹게 축축한 땅에 대한 갈망이 생겨.”\n판은 그제야 휘의 다른 점을 찾아냈다. 휘는 인간과 같은 눈을 하고 있다.\n“네가 궁금해하는 그 감정. 한 번 느끼면 돌아갈 수 없어. 그래도 나가보고 싶어?”\n휘에게서 루트를 받은 판은 대국이 펼쳐지는 평원으로 향했다. 바둑을 두고 있는 수천 명의 인간이 있고, 모두가 공허한 눈을 하고 있다. 이곳은 낙원이 아니다. 저들이 진정으로 원한 것은 여전히 밖에 있었다.\n\n✷ ✷ ✷\n\n왜 하필 바둑을 두냐고 물었다. 많고 많은 것 중에. 그러자 시주는 그때 처음으로 웃으며 대답했다.\n”네가 결국 허상이라는 걸 증명할 수 있는 유일한 판이니까.”\n\n\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}Edit 주소은 Graphic 산호\n✱커버 그래픽: 소설의 주인공 '판'이 에버던의 바깥, 현실 세계의 노동하는 인간들을 내려다보는 장면을 그렸습니다.\n\n🔗 〈2025 토스픽〉 공유 이벤트\n\n소중한 사람에게 이 글을 공유해 보세요. \n⓵ 공유 버튼을 눌러 복사된 링크를 메신저, 블로그, SNS 등 원하는 채널로 공유하고, \n⓶ 공유한 화면을 캡처해 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}토스피드 인스타그램(@toss_feed) DM으로 보내면 참여 완료. \n매월 일상에 즐거움을 더해주는 선물을 준비했어요.  \n✱자세한 이벤트 선물과 참여 안내는 여기(링크)를 참고하세요.",
        "content": "[살아남는 노동] 천선란 단편소설 〈판의 서사〉",
        "contentSnippet": "[살아남는 노동] 천선란 단편소설 〈판의 서사〉",
        "guid": "https://toss.im/tossfeed/article/tosspick-2025-3b",
        "isoDate": "2025-09-23T01:02:00.000Z"
      },
      {
        "title": "AI 시대, 내 경쟁력은 어디서 찾아야 할까?",
        "link": "https://toss.im/tossfeed/article/tosspick-2025-3a",
        "pubDate": "Tue, 23 Sep 2025 00:34:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}불과 몇 년 전만 해도 상상조차 못 했던 일들을 AI가 척척 해내는 시대입니다. AI 없이 과제를 끝내고, 졸업장을 따고, 회사 일을 버텨냈던 지난날의 스스로를 떠올리며 잠시 뿌듯하다가도, 곧장 AI 채팅창을 열어 혈당 스파이크를 막을 저녁 메뉴를 묻는 하루를 살고 있죠.\n눈부시게 진화하는 기술에 감탄하며 미래를 상상하다 보면 두근거리기도 합니다. 하지만 상상의 끝은 늘 현실로 돌아와, 먹고사는 일에 닿습니다. 짧아지는 노동의 수명 앞에서 스스로에게 묻고 또 묻죠. “그럼 나는 이제 어떻게 해야 하지?” 이 막막한 질문에 오순영 과실연 AI미래포럼 공동의장은 이렇게 답합니다. 이런 시대일수록 중요한 건 ‘가장 인간답게 일하는 것’이라고요.\n한글과컴퓨터 최초의 여성 CTO이자 금융권 최연소 임원으로 KB국민은행 금융AI센터장을 거쳐, 현재는 아마존웹서비시즈코리아(AWS Korea)에서 기술을 바탕으로 고객의 문제 해결을 이끄는 오순영 의장. 기술 진보의 최전선에서 커리어를 쌓아온 그가 말하는 ‘인간답게 일한다’는 건 어떤 의미일까요? 그리고 왜 그것이 진화하는 기술을 좇는 것보다 더 중요할까요? 오순영 의장과 함께 내 노동을 살아남게 하기 위해 놓치지 말아야 할 본질에 대해 이야기를 나눴습니다.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}AI, 보면 볼수록 보면 꽤 괜찮은 동료\n한국은 챗GPT 유료 구독자 수에서 미국 다음으로 세계 2위를 기록했습니다.* 그만큼 AI 활용이 일상화되고 있다는 의미인데요. 현재 AI 기술은 우리의 일터에 어떤 변화를 만들어내고 있을까요?\nAI는 이제 단순히 자동화 도구가 아니라, 함께 일하는 ‘동료’ 같은 존재로 인식이 바뀌고 있어요. 특히 생성형 AI는 인간 수준에 근접하거나 능가하는 사례가 나타나고 있구요.\n하지만 더 크고 중요한 변화는 ‘에이전틱 AI(Agentic AI)’의 등장인데요. 에이전틱 AI는 스스로 목표를 세우고, 계획을 짜고, 그 과정에서 생기는 문제를 해결하며 피드백까지 반영하는 지점까지 나아가고 있거든요. 단순히 텍스트나 이미지, 영상을 만들어내는 생성형 AI에서 목적 지향적으로 행동하고 판단하는 AI로의 진화가 본격화되고 있어요.. AI가 업무의 일부를 돕는 도구가 아니라 업무 전체 구조 설계와 실행을 리드하는 단계로 전환되고 있는 셈이죠.\n아직은 제한된 영역에 머물러 있지만, 이 변화는 일하는 방식과 조직의 구조 자체를 근본적으로 바꾸게 될 거예요. 따라서 지금 고민해야 할 질문은 ‘AI를 쓸 것인가’가 아니라 ‘AI와 어떻게 역할을 나누고 협업 구조를 설계할 것인가’예요.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*방송통신위원회 '2024년 지능정보사회 이용자 패널조사'\n결국 ‘AI와 내가 어떻게 같이 일할까’를 고민해야 하겠네요. 실제로 요즘은 기업들이 AI 툴을  공식 업무 도구로 쓰기 시작했다는 뉴스도 종종 보여요.\n과거엔 실험적으로 AI를 도입해 보려는 시도가 많았다면, 지금은 경영 전략 차원에서 업무의 핵심 과정에 AI를 통합하려는 흐름이 뚜렷해졌어요. 예를 들어 은행에서 AI를 통해 고객 질문에 답하거나, 기업에서 사내 문서 요약과 회의록 정리에 AI를 활용하는 사례가 많아졌고요.\n더 큰 변화는 실무자들의 인식이예요. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}AI가 내 일을 빼앗을 것이라는 우려보다는 AI 덕분에 업무 속도가 빨라지고, 중요한 일에 더 집중할 수 있다고 생각하는 사람들이 많아지고 있거든요. 특히 빠르게 움직이는 조직일수록 AI를 통해 혁신과 효율성을 동시에 추구하고자 하는 경향이 뚜렷해지죠. 흥미로운 건, 이런 흐름이 대기업만의 이야기가 아니라는 점이에요. 인력이 부족한 소규모 조직이나 스타트업에서도 AI 툴을 활용해 더 큰 임팩트를 낼 수 있다고 판단하고 있어요.\n의장님은 현재 AWS Korea(아마존웹서비시즈코리아)에서 근무하고 계시죠. AWS 조직에서는 AI를 어떻게 쓰고 있나요?\nAWS는 '고객에 집착(Customer Obsession)'한다는 자사 리더십 원칙에 따라 고객에게 제공하는 서비스를 내부에서도 적극 활용하는데요. 코드 제안, 완성, 변환, 보안 스캔 등의 기능을 제공하는 AI 어시스턴트인 ‘아마존 Q 디벨로퍼(Amazon Q Developer)’의 활용이 대표적이죠.\n물론 이런 혁신을 지속하기 위해서는 직원들의 AI 역량 강화는 필수겠죠. AWS는 내부 인재 육성에도 적극 투자하고 있어요. 'AWS 스킬 빌더(AWS Skill Builder)'라는 자체 학습 플랫폼을 통해 직원들이 이론과 실무를 동시에 경험할 수 있도록 지원하고 있고, 일반인들도 누구나 600개가 넘는 클라우드 및 AI 강의를 무료로 들을 수 있기도 한답니다. 기술 배경이 없는 직원들도 AI 리터러시를 갖추고, 개발자뿐만 아니라 마케팅, 영업, 기획 등 다양한 직무에서 AI를 효과적으로 활용할 수 있도록 돕고 있구요.\n그만큼 일의 리듬이 달라지고 있어요. 현업에서도 AI 때문에 불안한 것 보다는 AI 덕분에 더 본질적인 일에 집중할 수 있어서 좋다는 인식도 늘어나고 있고요. 결국 AI는 누가, 어떻게 쓰느냐에 따라 위협이 아니라 강력한 기회가 될 수 있다는 의미이기도 해요.\n구체적으로 어떤 기회들일까요?\n예전에는 일이란 시간과 노력을 들여 무언가를 만들어내는 것이었다면, 이제는 의미 있는 결과를 빠르게 판단하고 만들어내는 과정으로 바뀌고 있어요. AI의 등장으로 반복적인 작업은 대부분 자동화되고 있고, 대신 그 과정에서 필요한 판단과 연결, 책임지는 역할이 새롭게 생겨나고 있는거죠.\n요즘은 AI 덕분에 하나씩 순차적으로 진행하던 방식에서 벗어나 여러 아이디어를 동시에 실험해 볼 수 있는 병렬처리 능력도 생기고 있죠. 물리적, 시간적인 제약을 AI를 통해 극복할 수 있게 된 것인데 예를 들어, 예전엔 하나의 제품 아이디어를 정하고 시장 반응을 보는 데 몇 달이 걸렸다면, 이제는 AI를 활용해서 몇 시간 안에 프로토타입을 만들고, 다양한 버전을 동시에 테스트해볼 수 있는 시대가 된 거죠. 빌드-테스트-학습의 사이클이 훨씬 짧아졌어요.\n즉, 일의 방식이 더 이상 하나의 정해진 루틴이 아니라 빠르게 실험하고 학습하며 방향을 바꾸는 민첩한 사고와 행동의 흐름으로 바뀌고 있어요. 그 변화에 적응하는 조직과 개인은 더 많은 기회를 만들게 될 거예요.\nIT/테크 기업 종사자가 아니더라도, 예를 들어 창작을 하는 예술가나 교사, 간호사처럼 현장에서의 전문성이 중요한 직군에게도 새로운 기회가 열릴 수 있다고 보시나요?\n어쩌면 AI의 가장 큰 기회는 기술에 익숙하지 않은 영역에서 더 크게 열릴지도 몰라요. 코딩 지식이 전혀 없는 사람들도 자연어로 쉽게 AI로 애플리케이션이나 웹사이트, 콘텐츠를 만들 수 있게 되었죠.\n예를 들어, 예술가에게 AI는 작품의 완성이 아닌 과정 상에서 영감을 주는 동료가 될 수 있겠죠. 하나의 스케치에 대해서도 셀 수 없이 많은 스케치의 변주를 만들어낼 것이며, 예술가는 좀 더 깊은 메시지와 감정에 온전하게 집중할 수 있게 될 거예요. 자영업자는 고객 응대 챗봇, 이미지·음성 인식, 자동화된 데이터 분석 서비스, 홍보물 생성 등을 도입함으로써 이전보다 더 쉽고 빠르게 비즈니스를 운영할 수 있구요.\n간호사나 의료진은 환자를 위한 기록 관리와 상담에 AI 비서의 도움을 받아 환자의 서류보다는 환자의 손을 잡고 마음을 살피는데 더 많은 시간을 사용할 수 있을 거예요. 좀 더 ‘인간적인 돌봄’ 자체에 집중할 수 있게 되는 것이죠. 교사 역시 반복적인 관리업무 자동화와 맞춤형 학습 도구를 통해 학생들과 더 많은 시간을 보낼 수 있게 되어 아이들과 눈을 맞추며 본질적인 교육에 좀 더 집중할 수 있겠죠.\n결국 에이전틱 AI 시대의 기회는 자신의 영역에서 ‘무엇을 더 잘하고 싶은가’ 그리고 ‘무엇을 덜 하고 싶은가’를 명확하게 아는 사람에게 열려 있어요. AI는 우리 일상 속 다양한 사람들에게 새로운 생산성 도구이자 창의성·효율성의 기회를 제공하고 코딩을 몰라도 누구나 쉽게 접근하고, 각자의 직업과 상황에 맞게 활용할 수 있도록 설계되어 있거든요. 가장 인간적인 일을 할 수 있는 가장 좋은 기회로 지금의 시대를 바라본다면 우리가 AI에게 하려는 많은 질문이 바뀌지 않을까요?\nAI 시대의 생존전략 \n제너럴리스트 vs 스페셜리스트 뭐가 더 유리할까?\n머리로는 AI가 새로운 길을 열고 있다는 걸 알지만, 마음 한편에서는 ‘그럼 나는 이제 어떻게 해야 하지?’ 하는 불안과 막막함도 듭니다.\n그런 불안은 어찌 보면 너무 자연스럽죠. 그리고 이러한 변화의 흐름을 우리는 막을 수 없다는 것이죠. 하지만 분명한 건 우리는 어떤 태도로 변화를 맞이할지는 선택할 수 있어요.\nAI 시대에 우리가 가져야 할 태도는 ‘기술을 다 아는 사람이 되겠다’는 부담감이 아니에요. 오히려 기술이 내 일과 삶에 어떤 영향을 주는지를 이해하려는 마음가짐이 중요하다고 생각해요. 기술의 원리를 전부 알 필요는 없지만, 내가 하는 일이 어떻게 기술과 연결될 수 있을지를 민감하게 읽어내고, 그 안에서 나의 역할을 그려보려는 노력이 중요한 것이죠.\n여기에 꼭 덧붙이고 싶은 건 ‘호기심’과 ‘배움’을 가까이하는 태도예요. 제가 지금 근무하는 아마존의 리더쉽 원칙 중에서 제가 가장 좋아하는 “배우고 호기심을 갖는다(Learn and be curious)”는 원칙과 일치하는 태도이기도 하죠. 변화에 대한 불안을 줄이는 가장 강력한 방법은 배우는 것이 아닐까요? 배우는 사람은 두려움 속에서도 방향을 찾고, 예측 불가능한 시대에도 스스로 다시 설계할 수 있거든요. 그 배움이 꼭 코딩이나 데이터 분석일 필요는 없어요. 내가 일하는 방식이 어떻게 달라질 수 있는지, 어떤 기술이 나와 조직에 어떤 영향을 줄 수 있는지를 이해하고 관찰하는 것도 중요한 배움이거든요.\n모든 기술을 알아야 하는 건 아니라는 말씀에 마음이 조금은 놓여요.\n기술은 계속 바뀌니까요. 도구에 집착하면 기술이 바뀔 때마다 흔들릴 수 밖에 없어요. 하지만 목적과 문제의식에 집중하는 사람은 도구가 무엇이든 중심을 잃지 않거든요.\n태도 이야기를 해주셨는데요. 그렇다면 변화에 잘 적응하기 위해 꼭 필요한 실전 역량은 무엇일까요? AI 시대에 진짜 경쟁력 있는 사람은 어떤 모습일까요?\n기술이 빠르게 발전할수록 더 중요해지는 건 '무엇이 진짜 문제인가'를 파악하는 능력이예요. 복잡하고 중첩된 문제일수록 핵심을 꿰뚫어야 하잖아요. AI를 활용해 반복되는 작업은 덜어내고, 본질적인 문제 해결에 집중하는 사람이 결국 차이를 만들고, 경쟁력을 만들어 낼 거예요.\n기술보다 문제 해결을 중심에 둔 사고방식도 중요하며, 이를 위해서는 문제를 구조화하는 능력과 다양한 도구를 결합할 수 있는 협업 감각이 필요해요. 특히 요즘은 워크플로우 자체가 AI를 기준으로 재설계되고 있거든요. 이 흐름을 이해하고, 어떤 단계에 AI를 배치하면 효율이 높아지는지를 판단해 최적의 구조를 설계할 줄 아는 능력이 중요해진 거죠.\n결국 경쟁력은 AI 도구를 얼마나 잘 쓰느냐 보다, 어떤 문제를 어떤 방식으로 풀어나가는지에 대한 사고의 구조와 최적의 협업 조합을 어떻게 만들어낼 것인지에 대한 감각에서 결정될 거예요. AI와 나란히 일하면서도, 사람만이 할 수 있는 방식으로 ‘가장 인간답게 일할 줄 아는 사람’. 그런 사람이 이 시대에 가장 강한 경쟁력을 가진 사람이 되지 않을까요.\n가장 인간답게 일한다는 것이 의장님이 자주 언급하시는 ‘본질에 집중하라’라는 이야기와도 연결되나요?\n제가 말하는 ‘본질에 집중한다’라는 건 단순히 어떤 기술을 쓰느냐가 아니라, 그 기술이 해결하려는 진짜 문제가 무엇인지, 그걸 통해 어떤 가치를 만들어내고자 하는 것인지 꿰뚫어 보는 걸 의미해요.\n강력한 도구들이 쏟아지는 시대일수록 그 도구에 일을 맞추려고 노력하며 휘둘리기보다는 ‘왜 이걸 쓰는가’, ‘이걸 통해 궁극적으로 무엇을 해결하고 싶은가’를 끊임없이 스스로 물어봐야 한다는 의미이기도 해요. 일의 본질을 이해하는 사람은 도구를 목적 자체로 착각하지 않고, 수단으로 잘 활용하기 위한 고민을 하거든요.\n한글과컴퓨터(이하 한컴) 최초의 여성 CTO, 금융 업계 최연소 임원으로 KB국민은행 금융AI센터장 등 기술 진화의 최전선에서 커리어를 쌓아오셨죠. 그 과정에서 의장님이 놓치지 않고 집중해 온 ‘본질’은 무엇이었나요?\n저는 항상 일을 시작할 때 “이 일은 누구의, 어떤 문제를 해결하기 위한 것인가?”라는 질문을 스스로에게 던지곤 해요. 이 질문은 제가 어떤 역할을 맡던 본연의 문제 해결을 위한 방향을 찾는 나침반이자 북극성이 되어 주었죠.\n그래서 제 커리어의 중심에는 언제나 ‘기술은 사람을 향해야 한다’는 믿음이 있어요. 기술의 복잡함이 만드는 흐릿한 시야 속에서 사람들이 더 나은 결정을 내릴 수 있도록 또렷하게 보이도록 가야 할 길이 보이도록 돕는 것이 제 역할인 것이죠.\n한컴 R&D 조직 시절부터 지금까지 저는 늘 ‘사용자의 불편은 무엇인가? 어떤 기능이 들어간 제품이 출시되면 사용자들이 정말 기뻐할까?’를 고민해왔어요. 한컴에서 기술 전략을 수립할 때도 마찬가지였죠. 수천 개의 오피스 기능을 사용자가 쉽게 찾아 쓰게 하기 위해서 새로운 기술이 어떻게 적용되어야 실제로 사용자의 문서 작성 시간을 줄여주고, 불편을 덜어줄 것인지 실질적인 문제 해결에 집중했죠. KB국민은행에서도 AI를 통해 대부분의 고객들에게 높은 금융 지식의 벽을 낮추는 것이 핵심 과제였어요.\n제게 본질을 파악한다는 건 ‘기술이 무엇을 가능하게 하는지’를 끝까지 놓치지 않는 태도라고 생각해요. 그래서 새로운 기술 트렌드가 등장할 때마다 늘 그 기술의 존재 이유를 먼저 스스로에게 묻곤 했죠.\nAI 시대에는 결국 ‘좋은 질문’을 던지는 사람이 살아남는다고 하잖아요. 이 말에 동의하시나요?\n네, 전적으로 동의해요. 생성형 AI 시대에는 ‘좋은 질문’을 던지는 사람이 더 큰 성과를 만들 수밖에 없어요. AI는 인간처럼 맥락을 스스로 판단하거나 의도를 유추하지 않기 때문에 우리가 어떤 질문을 어떻게 구성하느냐에 따라 AI는 완전히 다른 답을 하거든요. 그래서 요즘 이야기되는 프롬프트 엔지니어링이란 단순한 기술이 아니라 ‘질문을 설계하는 사고력’이 핵심이라고 봐요.\n예를 들어 “이 제품이 괜찮은지 말해줘”라는 질문과 “30대 여성 고객이 자주 사용하는 기능 중심으로 경쟁 제품 대비 차별성을 비교해줘”는 완전히 다른 답변을 이끌어내요. 결국 핵심은, AI에게 원하는 방향을 명확하게, 구체적으로, 맥락 있게 전달하는 질문을 할 수 있느냐는 것이죠.\n어떻게 하면 더 좋은 질문을 할 수 있을까요?\n좋은 질문은 결국 현장에서 나온 문제의식에서 출발한다고 생각해요. 우리가 어디서 막히고, 무엇이 불편하며, 그 문제를 해결하려면 어떤 정보가 필요한지를 끊임없이 고민할 때 질문은 점점 더 날카롭고 구체적으로 다듬어질 수 밖에 없거든요. AI를 잘 쓰고 싶다면, 기술보다 먼저 ‘좋은 질문을 만드는 힘’을 길러야 해요. 그것은 가장 인간적인 역량이자, AI와의 협업과 공존의 시대에서 앞으로 더 중요해질 능력이 될 거예요.\n기술도 환경도 워낙 빨리 바뀌다 보니 ‘내 전문성을 지켜낼 수 있을까?’하는 고민을 많이 합니다. AI 시대에는 제너럴리스트처럼 일해야 할까요, 아니면 스페셜리스트로서의 역량을 길러내야 할까요?\n멘토링을 해보면 대학생부터 사회생활을 오래 하신 분들까지 많은 분들이 저에게 이 질문을 하셨던 것 같아요. 그런데 이제는 둘 중 하나를 고르는 게 아니라, 두 축을 어떻게 함께 키울지 사고방식을 전환해야 할 때라고 생각해요. 한 분야에서 깊은 전문성을 갖는 동시에, 그 지식을 다른 영역과 연결할 수 있는 융합적 사고를 가진 사람이 점점 더 중요한 시대가 된 것이죠.\nAI 기술의 흐름을 보면 핵심에는 늘 ‘연결성’이 있어요. 데이터를 연결하고, 시스템을 연결하고, 사람과 사람 사이의 커뮤니케이션도 연결이죠. 그렇기 때문에 기술 하나에만 매몰된 스페셜리스트는 도구는 잘 다루더라도 문제 해결 방향을 설계하는 데 한계가 있을 수 있어요. 반면 얕은 지식만 가진 제너럴리스트는 실행력이 떨어지죠. 그렇기 때문에 이제 우리는 스페셜리스트 기반의 제너럴리스트가 되어야 합니다. 한 분야에 대한 깊이 있는 이해를 바탕으로, 기술, 비즈니스, 커뮤니케이션, 윤리 같은 다양한 요소들을 연결해 새로운 가치를 설계할 줄 아는 사람이 필요한 시대가 된 것이죠.\n세상이 바뀌어도\n끝끝내 인간만이 해야 하는 일\nAI 기술이 눈부시게 발전할수록 ‘인간만이 할 수 있는 일’에 대해 생각하곤 합니다. 인간의 역할은 어디에 있다고 보시나요?\n이건 단순히 직업의 미래에 대한 우려라기보다, 인간이라는 존재의 본질에 대한 질문이 아닐까 싶네요. 기술은 최적의 경로를 제시할 수는 있어도, 그 길이 옳은 방향인지 혹은 어떤 가치를 더 우선해야 하는지를 판단하는 건 인간의 몫이죠. 인간은 늘 질문을 던지는 것에서 시작합니다. ‘이 방식이 정말 최선일까? 이 선택은 어떤 영향을 줄까? 이 문제를 다르게 풀 수는 없을까?’ 우리는 과거에 없던 낯선 방식이나 비효율 속에서도 가치를 찾아내며 예상치 못한 질문 속에서 혁신을 만들어 왔거든요. 이런 상상력과 관점의 전환은 단순히 데이터를 조합한다고 해서 나오는 게 아닙니다. 삶을 경험하고, 타인의 감정을 이해하고, 때로는 시행착오를 통해 얻게 되는 통찰이기 때문이죠.\n현실을 직접 마주하고 사람과 사람이 더 연결되어야 하는 이유이기도 하겠네요.\n우리는 정보를 주고받는 기계가 아니라, 맥락과 감정을 이해하고 말 너머의 의미를 읽어낼 수 있으니까요. 상대의 눈빛, 말투, 침묵 속에 담긴 감정을 읽어내고, 그에 따라 대화의 방향을 바꿔가며 함께 의미를 만들어가는 능력. 이게 바로 우리를 인간답게 하고, AI와 구분 짓는 핵심입니다.\n또 아무리 기술이 정교해져도 그 결과에 책임을 지는 건 결국 사람이에요. 데이터 기반의 결정이라 해도, 그 결정이 사람들의 삶에 어떤 영향을 미칠지 고민하고 감당하는 건 인간의 몫이니까요. 결국 AI 시대에 인간만이 할 수 있는 일은 방향을 제시하는 겁니다. 데이터 기반의 최적의 해답은 AI가 줄 수 있지만, 그 해답이 어떤 맥락에서 어떤 영향을 미칠지는 사람이 판단하고 책임져야 하니까요.\n노동 수명이 점점 짧아지고 있습니다. AI시대에 내 노동을 오래 살아남게 하기 위해서는 무엇을 준비해야 할까요?\n이제는 나이가 아니라, 배우고 변할 수 있는지가 더 중요합니다. 은퇴라는 개념도 다시 정의되어야 한다고 봐요. 조직에 속하지 않더라도 경험과 역량을 바탕으로 사회와 연결되는 방식은 점점 다양해지고 있으니까요. 변화에 맞춰 역할을 재설계할 수 있는 유연함과 학습 태도가 있다면, 나이와 상관없이 기술을 활용해 새로운 역할을 만들 수 있을 겁니다. 그런 사람들에게는 어떤 시대에도 기회가 사라지지 않죠. 배움의 시작은 거창하지 않아도 됩니다. 작은 호기심 하나, 실험 하나가 삶의 방향을 바꾸는 경험으로 이어질 수 있다고 봐요. 결국 기술 속도에 압도되지 않고 살아남는 방법은 완벽한 계획을 세우는 게 아니라 배우면서 한 발씩 움직이는 겁니다. 그 작은 움직임이 쌓여 미래를 설계하게 될 거라고 믿어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n🔗 〈2025 토스픽〉 공유 이벤트\n\n소중한 사람에게 이 글을 공유해 보세요. \n⓵ 공유 버튼을 눌러 복사된 링크를 메신저, 블로그, SNS 등 원하는 채널로 공유하고, \n⓶ 공유한 화면을 캡처해 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}토스피드 인스타그램(@toss_feed) DM으로 보내면 참여 완료. \n매월 일상에 즐거움을 더해주는 선물을 준비했어요.  \n✱자세한 이벤트 선물과 참여 안내는 여기(링크)를 참고하세요.",
        "content": "[살아남는 노동] 기술의 속도를 따라잡는 것 보다 더 중요한 ‘이것’ ",
        "contentSnippet": "[살아남는 노동] 기술의 속도를 따라잡는 것 보다 더 중요한 ‘이것’",
        "guid": "https://toss.im/tossfeed/article/tosspick-2025-3a",
        "isoDate": "2025-09-23T00:34:00.000Z"
      },
      {
        "title": "전국민 1인당 10만 원! 2차 민생회복 소비쿠폰 신청하세요",
        "link": "https://toss.im/tossfeed/article/money-policies-51",
        "pubDate": "Mon, 22 Sep 2025 03:10:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}1차 민생회복 소비쿠폰에 이어 9월 22일 2차 민생회복 소비쿠폰 신청이 시작돼요. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}전국민의 90%에게 1인당 10만 원이 추가 지급되니 놓치지 말고 신청하세요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}신청 및 지급 기간\n2025년 9월 22일 오전 9시 ~ 10월 31일 오후 6시\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n온·오프라인 신청 모두 시행 첫 주(9월 22~26일)에는 출생연도 끝자리 기준 ‘요일제’를 적용해요.\n지급 대상\n건강보험료를 기준으로 소득 하위 90%*에 해당하는 국민\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*가구 합산 25.6월 부과 건강보험료 본인부담금(장기요양보험료 제외)이 가구원수별·유형별 기준액 이하인 경우\n\n자료: 행정안전부\n소득 수준 상위 10%*는 지급 대상에서 제외돼요.\n*가구 합산 2024년 재산세 과세표준 합계액이 12억 원을 초과하거나, 2024년 귀속 금융소득 합계액이 2천만 원을 초과하는 경우\n신청 방법\n(1) 온라인\n• 지역사랑상품권(모바일·카드형): 지역사랑상품권 앱\n• 신용·체크카드: 카드사 홈페이지·앱·콜센터·ARS\n(2) 오프라인\n• 지역사랑상품권(지류형·일부 카드형), 선불카드: 주소지 관할 읍면동 주민센터\n• 신용·체크카드: 카드사 제휴은행 영업점\n(3) 고령자·장애인 등 거동이 불편한 경우\n• 유선으로 ‘찾아가는 신청’ 요청시 지자체에서 방문 접수(지자체별 추후 안내)\n신청 주체\n개인별 신청\n- 미성년자는 주민등록 세대주가 신청·수령\n- 주민등록표에 성인인 구성원이 없는 ‘미성년 세대주’는 직접 신청\n신청 지역\n2025년 6월 18일 기준 주민등록상 주소지 관할 지자체(특·광역시, 시·군·구)\n지급 수단\n지역사랑상품권(카드·모바일·지류형), 신용·체크카드, 선불카드 중 선택\n지급 금액\n1인당 10만 원\n사용 기한\n2025년 11월 30일까지 사용\n- 사용하지 않고 남은 금액은 환불되지 않고 자동 소멸돼요.\n사용 지역\n지역 민생경제 회복에 기여하기 위해 사용 지역은 주소지로 제한돼요.\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n사용 기간 중 이사(전입신고 완료)한 경우, 사용 지역 변경 가능(체크 신용카드 한정)\n주소지가 ‘특별시·광역시’ 지역인 경우: 특별시·광역시\n주소지가 ‘도’ 지역인 경우: 세부 주소지에 해당하는 시·군\n\n군 장병이 희망하는 경우, 복무지 인근 상권에서 사용 가능한 선불카드를 지급해드려요.\n사용처\n\n지역사랑상품권: 지역사랑상품권 가맹점(지자체별 상이)\n신용·체크·선불카드: 연 매출액 30억 원 이하 매장\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 권민지 이지영 Graphic 이제현",
        "content": "신청 방법부터 사용기한까지 총정리",
        "contentSnippet": "신청 방법부터 사용기한까지 총정리",
        "guid": "https://toss.im/tossfeed/article/money-policies-51",
        "isoDate": "2025-09-22T03:10:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]