[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Inside Bento: Jupyter Notebooks at Meta",
        "link": "https://engineering.fb.com/2024/09/17/data-infrastructure/inside-bento-jupyter-notebooks-at-meta/",
        "pubDate": "Tue, 17 Sep 2024 17:53:56 +0000",
        "content:encodedSnippet": "This episode of the Meta Tech Podcast is all about Bento, Meta’s internal distribution of Jupyter Notebooks, an open-source web-based computing platform. Bento allows our engineers to mix code, text, and multimedia in a single document and serves a wide range of use cases at Meta from prototyping to complex machine learning workflows.\nPascal Hartig (@passy) is joined by Steve, whose team has built several features on top of Jupyter, including scheduled notebooks, sharing with colleagues, and running notebooks without a remote server component by leveraging WebAssembly in the browser.\nDownload or listen to the podcast episode below:\n\nYou can also find the episode wherever you get your podcasts, including:\nSpotify\nApple Podcasts\nPocketCasts\nOvercast\nThe Meta Tech Podcast is a podcast, brought to you by Meta, where we highlight the work Meta’s engineers are doing at every level – from low-level frameworks to end-user features.\nSend us feedback on Instagram, Threads, or X.\nAnd if you’re interested in learning more about career opportunities at Meta visit the Meta Careers page.\nThe post Inside Bento: Jupyter Notebooks at Meta appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>This episode of the Meta Tech Podcast is all about Bento, Meta’s internal distribution of Jupyter Notebooks, an open-source web-based computing platform. Bento allows our engineers to mix code, text, and multimedia in a single document and serves a wide range of use cases at Meta from prototyping to complex machine learning workflows. Pascal Hartig [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/09/17/data-infrastructure/inside-bento-jupyter-notebooks-at-meta/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/09/17/data-infrastructure/inside-bento-jupyter-notebooks-at-meta/\">Inside Bento: Jupyter Notebooks at Meta</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "This episode of the Meta Tech Podcast is all about Bento, Meta’s internal distribution of Jupyter Notebooks, an open-source web-based computing platform. Bento allows our engineers to mix code, text, and multimedia in a single document and serves a wide range of use cases at Meta from prototyping to complex machine learning workflows. Pascal Hartig [...]\nRead More...\nThe post Inside Bento: Jupyter Notebooks at Meta appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21690",
        "categories": [
          "Culture",
          "Data Infrastructure",
          "DevInfra",
          "Open Source",
          "Meta Tech Podcast"
        ],
        "isoDate": "2024-09-17T17:53:56.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": [
      {
        "creator": "Netflix Technology Blog",
        "title": "Introducing Netflix’s Key-Value Data Abstraction Layer",
        "link": "https://netflixtechblog.com/introducing-netflixs-key-value-data-abstraction-layer-1ea8a0a11b30?source=rss----2615bd06b42e---4",
        "pubDate": "Wed, 18 Sep 2024 22:49:04 GMT",
        "content:encodedSnippet": "Vidhya Arvind, Rajasekhar Ummadisetty, Joey Lynch, Vinay Chella\nIntroduction\nAt Netflix our ability to deliver seamless, high-quality, streaming experiences to millions of users hinges on robust, global backend infrastructure. Central to this infrastructure is our use of multiple online distributed databases such as Apache Cassandra, a NoSQL database known for its high availability and scalability. Cassandra serves as the backbone for a diverse array of use cases within Netflix, ranging from user sign-ups and storing viewing histories to supporting real-time analytics and live streaming.\nOver time as new key-value databases were introduced and service owners launched new use cases, we encountered numerous challenges with datastore misuse. Firstly, developers struggled to reason about consistency, durability and performance in this complex global deployment across multiple stores. Second, developers had to constantly re-learn new data modeling practices and common yet critical data access patterns. These include challenges with tail latency and idempotency, managing “wide” partitions with many rows, handling single large “fat” columns, and slow response pagination. Additionally, the tight coupling with multiple native database APIs — APIs that continually evolve and sometimes introduce backward-incompatible changes — resulted in org-wide engineering efforts to maintain and optimize our microservice’s data access.\nTo overcome these challenges, we developed a holistic approach that builds upon our Data Gateway Platform. This approach led to the creation of several foundational abstraction services, the most mature of which is our Key-Value (KV) Data Abstraction Layer (DAL). This abstraction simplifies data access, enhances the reliability of our infrastructure, and enables us to support the broad spectrum of use cases that Netflix demands with minimal developer effort.\nIn this post, we dive deep into how Netflix’s KV abstraction works, the architectural principles guiding its design, the challenges we faced in scaling diverse use cases, and the technical innovations that have allowed us to achieve the performance and reliability required by Netflix’s global operations.\nThe Key-Value Service\nThe KV data abstraction service was introduced to solve the persistent challenges we faced with data access patterns in our distributed databases. Our goal was to build a versatile and efficient data storage solution that could handle a wide variety of use cases, ranging from the simplest hashmaps to more complex data structures, all while ensuring high availability, tunable consistency, and low latency.\nData Model\nAt its core, the KV abstraction is built around a two-level map architecture. The first level is a hashed string ID (the primary key), and the second level is a sorted map of a key-value pair of bytes. This model supports both simple and complex data models, balancing flexibility and efficiency.\nHashMap<String, SortedMap<Bytes, Bytes>>\nFor complex data models such as structured Records or time-ordered Events, this two-level approach handles hierarchical structures effectively, allowing related data to be retrieved together. For simpler use cases, it also represents flat key-value Maps (e.g. id → {\"\" → value}) or named Sets (e.g.id → {key → \"\"}). This adaptability allows the KV abstraction to be used in hundreds of diverse use cases, making it a versatile solution for managing both simple and complex data models in large-scale infrastructures like Netflix.\nThe KV data can be visualized at a high level, as shown in the diagram below, where three records are shown.\n\nmessage Item (   \n  Bytes    key,\n  Bytes    value,\n  Metadata metadata,\n  Integer  chunk\n)\nDatabase Agnostic Abstraction\nThe KV abstraction is designed to hide the implementation details of the underlying database, offering a consistent interface to application developers regardless of the optimal storage system for that use case. While Cassandra is one example, the abstraction works with multiple data stores like EVCache, DynamoDB, RocksDB, etc…\nFor example, when implemented with Cassandra, the abstraction leverages Cassandra’s partitioning and clustering capabilities. The record ID acts as the partition key, and the item key as the clustering column:\n\nThe corresponding Data Definition Language (DDL) for this structure in Cassandra is:\nCREATE TABLE IF NOT EXISTS <ns>.<table> (\n  id             text,\n  key            blob,\n  value          blob,\n  value_metadata blob,\nPRIMARY KEY (id, key))\nWITH CLUSTERING ORDER BY (key <ASC|DESC>)\nNamespace: Logical and Physical Configuration\nA namespace defines where and how data is stored, providing logical and physical separation while abstracting the underlying storage systems. It also serves as central configuration of access patterns such as consistency or latency targets. Each namespace may use different backends: Cassandra, EVCache, or combinations of multiple. This flexibility allows our Data Platform to route different use cases to the most suitable storage system based on performance, durability, and consistency needs. Developers just provide their data problem rather than a database solution!\nIn this example configuration, the ngsegment namespace is backed by both a Cassandra cluster and an EVCache caching layer, allowing for highly durable persistent storage and lower-latency point reads.\n\"persistence_configuration\":[                                                   \n  {                                                                           \n    \"id\":\"PRIMARY_STORAGE\",                                                 \n    \"physical_storage\": {                                                    \n      \"type\":\"CASSANDRA\",                                                 \n      \"cluster\":\"cassandra_kv_ngsegment\",                                \n      \"dataset\":\"ngsegment\",                                             \n      \"table\":\"ngsegment\",                                               \n      \"regions\": [\"us-east-1\"],\n      \"config\": {\n        \"consistency_scope\": \"LOCAL\",\n        \"consistency_target\": \"READ_YOUR_WRITES\"\n      }                                            \n    }                                                                       \n  },                                                                          \n  {                                                                           \n    \"id\":\"CACHE\",                                                           \n    \"physical_storage\": {                                                    \n      \"type\":\"CACHE\",                                                     \n      \"cluster\":\"evcache_kv_ngsegment\"                                   \n     },                                                                      \n     \"config\": {                                                              \n       \"default_cache_ttl\": 180s                                             \n     }                                                                       \n  }                                                                           \n] \n \nKey APIs of the KV Abstraction\nTo support diverse use-cases, the KV abstraction provides four basic CRUD APIs:\nPutItems — Write one or more Items to a Record\nThe PutItems API is an upsert operation, it can insert new data or update existing data in the two-level map structure.\nmessage PutItemRequest (\n  IdempotencyToken idempotency_token,\n  string           namespace, \n  string           id, \n  List<Item>       items\n)\nAs you can see, the request includes the namespace, Record ID, one or more items, and an idempotency token to ensure retries of the same write are safe. Chunked data can be written by staging chunks and then committing them with appropriate metadata (e.g. number of chunks).\nGetItems — Read one or more Items from a Record\nThe GetItemsAPI provides a structured and adaptive way to fetch data using ID, predicates, and selection mechanisms. This approach balances the need to retrieve large volumes of data while meeting stringent Service Level Objectives (SLOs) for performance and reliability.\nmessage GetItemsRequest (\n  String              namespace,\n  String              id,\n  Predicate           predicate,\n  Selection           selection,\n  Map<String, Struct> signals\n)\nThe GetItemsRequest includes several key parameters:\n\nNamespace: Specifies the logical dataset or table\nId: Identifies the entry in the top-level HashMap\nPredicate: Filters the matching items and can retrieve all items (match_all), specific items (match_keys), or a range (match_range)\nSelection: Narrows returned responses for example page_size_bytes for pagination, item_limit for limiting the total number of items across pages and include/exclude to include or exclude large values from responses\nSignals: Provides in-band signaling to indicate client capabilities, such as supporting client compression or chunking.\n\nThe GetItemResponse message contains the matching data:\nmessage GetItemResponse (\n  List<Item>       items,\n  Optional<String> next_page_token\n)\nItems: A list of retrieved items based on the Predicate and Selection defined in the request.\nNext Page Token: An optional token indicating the position for subsequent reads if needed, essential for handling large data sets across multiple requests. Pagination is a critical component for efficiently managing data retrieval, especially when dealing with large datasets that could exceed typical response size limits.\n\nDeleteItems — Delete one or more Items from a Record\nThe DeleteItems API provides flexible options for removing data, including record-level, item-level, and range deletes — all while supporting idempotency.\nmessage DeleteItemsRequest (\n  IdempotencyToken idempotency_token,\n  String           namespace,\n  String           id,\n  Predicate        predicate\n)\nJust like in the GetItems API, the Predicate allows one or more Items to be addressed at once:\n\nRecord-Level Deletes (match_all): Removes the entire record in constant latency regardless of the number of items in the record.\nItem-Range Deletes (match_range): This deletes a range of items within a Record. Useful for keeping “n-newest” or prefix path deletion.\nItem-Level Deletes (match_keys): Deletes one or more individual items.\n\nSome storage engines (any store which defers true deletion) such as Cassandra struggle with high volumes of deletes due to tombstone and compaction overhead. Key-Value optimizes both record and range deletes to generate a single tombstone for the operation — you can learn more about tombstones in About Deletes and Tombstones.\nItem-level deletes create many tombstones but KV hides that storage engine complexity via TTL-based deletes with jitter. Instead of immediate deletion, item metadata is updated as expired with randomly jittered TTL applied to stagger deletions. This technique maintains read pagination protections. While this doesn’t completely solve the problem it reduces load spikes and helps maintain consistent performance while compaction catches up. These strategies help maintain system performance, reduce read overhead, and meet SLOs by minimizing the impact of deletes.\nComplex Mutate and Scan APIs\nBeyond simple CRUD on single Records, KV also supports complex multi-item and multi-record mutations and scans via MutateItems and ScanItems APIs. PutItems also supports atomic writes of large blob data within a single Item via a chunked protocol. These complex APIs require careful consideration to ensure predictable linear low-latency and we will share details on their implementation in a future post.\nDesign Philosophies for reliable and predictable performance\nIdempotency to fight tail latencies\nTo ensure data integrity the PutItems and DeleteItems APIs use idempotency tokens, which uniquely identify each mutative operation and guarantee that operations are logically executed in order, even when hedged or retried for latency reasons. This is especially crucial in last-write-wins databases like Cassandra, where ensuring the correct order and de-duplication of requests is vital.\nIn the Key-Value abstraction, idempotency tokens contain a generation timestamp and random nonce token. Either or both may be required by backing storage engines to de-duplicate mutations.\nmessage IdempotencyToken (\n  Timestamp generation_time,\n  String    token\n)\nAt Netflix, client-generated monotonic tokens are preferred due to their reliability, especially in environments where network delays could impact server-side token generation. This combines a client provided monotonic generation_time timestamp with a 128 bit random UUID token. Although clock-based token generation can suffer from clock skew, our tests on EC2 Nitro instances show drift is minimal (under 1 millisecond). In some cases that require stronger ordering, regionally unique tokens can be generated using tools like Zookeeper, or globally unique tokens such as a transaction IDs can be used.\nThe following graphs illustrate the observed clock skew on our Cassandra fleet, suggesting the safety of this technique on modern cloud VMs with direct access to high-quality clocks. To further maintain safety, KV servers reject writes bearing tokens with large drift both preventing silent write discard (write has timestamp far in past) and immutable doomstones (write has a timestamp far in future) in storage engines vulnerable to those.\n\nHandling Large Data through Chunking\nKey-Value is also designed to efficiently handle large blobs, a common challenge for traditional key-value stores. Databases often face limitations on the amount of data that can be stored per key or partition. To address these constraints, KV uses transparent chunking to manage large data efficiently.\nFor items smaller than 1 MiB, data is stored directly in the main backing storage (e.g. Cassandra), ensuring fast and efficient access. However, for larger items, only the id, key, and metadata are stored in the primary storage, while the actual data is split into smaller chunks and stored separately in chunk storage. This chunk storage can also be Cassandra but with a different partitioning scheme optimized for handling large values. The idempotency token ties all these writes together into one atomic operation.\nBy splitting large items into chunks, we ensure that latency scales linearly with the size of the data, making the system both predictable and efficient. A future blog post will describe the chunking architecture in more detail, including its intricacies and optimization strategies.\nClient-Side Compression\nThe KV abstraction leverages client-side payload compression to optimize performance, especially for large data transfers. While many databases offer server-side compression, handling compression on the client side reduces expensive server CPU usage, network bandwidth, and disk I/O. In one of our deployments, which helps power Netflix’s search, enabling client-side compression reduced payload sizes by 75%, significantly improving cost efficiency.\nSmarter Pagination\nWe chose payload size in bytes as the limit per response page rather than the number of items because it allows us to provide predictable operation SLOs. For instance, we can provide a single-digit millisecond SLO on a 2 MiB page read. Conversely, using the number of items per page as the limit would result in unpredictable latencies due to significant variations in item size. A request for 10 items per page could result in vastly different latencies if each item was 1 KiB versus 1 MiB.\nUsing bytes as a limit poses challenges as few backing stores support byte-based pagination; most data stores use the number of results e.g. DynamoDB and Cassandra limit by number of items or rows. To address this, we use a static limit for the initial queries to the backing store, query with this limit, and process the results. If more data is needed to meet the byte limit, additional queries are executed until the limit is met, the excess result is discarded and a page token is generated.\nThis static limit can lead to inefficiencies, one large item in the result may cause us to discard many results, while small items may require multiple iterations to fill a page, resulting in read amplification. To mitigate these issues, we implemented adaptive pagination which dynamically tunes the limits based on observed data.\nAdaptive Pagination\nWhen an initial request is made, a query is executed in the storage engine, and the results are retrieved. As the consumer processes these results, the system tracks the number of items consumed and the total size used. This data helps calculate an approximate item size, which is stored in the page token. For subsequent page requests, this stored information allows the server to apply the appropriate limits to the underlying storage, reducing unnecessary work and minimizing read amplification.\nWhile this method is effective for follow-up page requests, what happens with the initial request? In addition to storing item size information in the page token, the server also estimates the average item size for a given namespace and caches it locally. This cached estimate helps the server set a more optimal limit on the backing store for the initial request, improving efficiency. The server continuously adjusts this limit based on recent query patterns or other factors to keep it accurate. For subsequent pages, the server uses both the cached data and the information in the page token to fine-tune the limits.\n\nIn addition to adaptive pagination, a mechanism is in place to send a response early if the server detects that processing the request is at risk of exceeding the request’s latency SLO.\nFor example, let us assume a client submits a GetItems request with a per-page limit of 2 MiB and a maximum end-to-end latency limit of 500ms. While processing this request, the server retrieves data from the backing store. This particular record has thousands of small items so it would normally take longer than the 500ms SLO to gather the full page of data. If this happens, the client would receive an SLO violation error, causing the request to fail even though there is nothing exceptional. To prevent this, the server tracks the elapsed time while fetching data. If it determines that continuing to retrieve more data might breach the SLO, the server will stop processing further results and return a response with a pagination token.\n\nThis approach ensures that requests are processed within the SLO, even if the full page size isn’t met, giving clients predictable progress. Furthermore, if the client is a gRPC server with proper deadlines, the client is smart enough not to issue further requests, reducing useless work.\nIf you want to know more, the How Netflix Ensures Highly-Reliable Online Stateful Systems article talks in further detail about these and many other techniques.\nSignaling\nKV uses in-band messaging we call signaling that allows the dynamic configuration of the client and enables it to communicate its capabilities to the server. This ensures that configuration settings and tuning parameters can be exchanged seamlessly between the client and server. Without signaling, the client would need static configuration — requiring a redeployment for each change — or, with dynamic configuration, would require coordination with the client team.\nFor server-side signals, when the client is initialized, it sends a handshake to the server. The server responds back with signals, such as target or max latency SLOs, allowing the client to dynamically adjust timeouts and hedging policies. Handshakes are then made periodically in the background to keep the configuration current. For client-communicated signals, the client, along with each request, communicates its capabilities, such as whether it can handle compression, chunking, and other features.\n\nKV Usage @ Netflix\nThe KV abstraction powers several key Netflix use cases, including:\n\nStreaming Metadata: High-throughput, low-latency access to streaming metadata, ensuring personalized content delivery in real-time.\nUser Profiles: Efficient storage and retrieval of user preferences and history, enabling seamless, personalized experiences across devices.\nMessaging: Storage and retrieval of push registry for messaging needs, enabling the millions of requests to flow through.\nReal-Time Analytics: This persists large-scale impression and provides insights into user behavior and system performance, moving data from offline to online and vice versa.\n\nFuture Enhancements\nLooking forward, we plan to enhance the KV abstraction with:\n\nLifecycle Management: Fine-grained control over data retention and deletion.\nSummarization: Techniques to improve retrieval efficiency by summarizing records with many items into fewer backing rows.\nNew Storage Engines: Integration with more storage systems to support new use cases.\nDictionary Compression: Further reducing data size while maintaining performance.\n\nConclusion\nThe Key-Value service at Netflix is a flexible, cost-effective solution that supports a wide range of data patterns and use cases, from low to high traffic scenarios, including critical Netflix streaming use-cases. The simple yet robust design allows it to handle diverse data models like HashMaps, Sets, Event storage, Lists, and Graphs. It abstracts the complexity of the underlying databases from our developers, which enables our application engineers to focus on solving business problems instead of becoming experts in every storage engine and their distributed consistency models. As Netflix continues to innovate in online datastores, the KV abstraction remains a central component in managing data efficiently and reliably at scale, ensuring a solid foundation for future growth.\nAcknowledgments: Special thanks to our stunning colleagues who contributed to Key Value’s success: William Schor, Mengqing Wang, Chandrasekhar Thumuluru, Rajiv Shringi, John Lu, George Cambell, Ammar Khaku, Jordan West, Chris Lohfink, Matt Lehman, and the whole online datastores team (ODS, f.k.a CDE).\n\nIntroducing Netflix’s Key-Value Data Abstraction Layer was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/1ea8a0a11b30",
        "isoDate": "2024-09-18T22:49:04.000Z"
      }
    ]
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2024.3 EAP 2: Enhanced HotSwap in the Debugger, Faster Compilation in Multi-Module Projects, and More",
        "link": "https://blog.jetbrains.com/idea/2024/09/intellij-idea-2024-3-eap-2/",
        "pubDate": "Thu, 19 Sep 2024 15:52:06 +0000",
        "content:encodedSnippet": "The IntelliJ IDEA 2024.3 EAP 2 build is now available! \nYou can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu.\nDownload IntelliJ IDEA 2024.3 EAP 2\nDiscover the newly introduced features below! \nDebugger\nEnhanced HotSwap feature\nIn the latest IntelliJ IDEA 2024.3 EAP build, we’ve enhanced the HotSwap feature, making it easier and more intuitive to use. The HotSwap mechanism allows you to reload modified classes during a debugging session without restarting the application. Now, when you edit code with an active debugger session, IntelliJ IDEA automatically detects the changes and prompts you to reload them via a convenient button in the editor.\nThis streamlines the development process by enabling real-time code updates. Keep in mind that HotSwap has some limitations, particularly with structural changes. Learn more about those here.\n\n\n\n\nBuild tools\nCompilation speedup in multi-module projects\nIn previous versions of IntelliJ IDEA, project modules were compiled one at a time, which wasn’t the fastest approach for large projects. While parallel compilation has been an option for some time, it wasn’t the default because of concerns about high CPU and memory usage.\nWith more people using modern, more capable hardware, we’ve decided to make parallel compilation the default in IntelliJ IDEA 2024.3. This means faster compilation times for all Maven-based projects compiled by the IDE. The IDE will make sure not to consume too many resources, thanks to the automatic mode.\n\n\n\n\nSeamless handling of untrusted SSL certificates\nStarting with IntelliJ IDEA 2024.3 EAP 2, the IDE automatically detects SSL-related issues during Maven syncs or builds. If an untrusted certificate is the cause, IntelliJ IDEA will offer to resolve it by trusting the certificate – no manual steps required.\nThis update eliminates the guesswork of combing through logs to find cryptic SSL errors and removes the need for tedious manual certificate management in the JDK’s trusted store.\n\n\n\n\n\nKotlin\nK2 mode stability improvements\nK2 mode is moving closer to stability with the latest improvements in this EAP build. We’ve addressed several memory and stability issues, thanks to your valuable feedback.\nCheck out K2 mode and let us know how it works for you! Share your experience on our public Slack channel or via YouTrack to help us ensure K2 mode launches at its best!\nThese are this EAP’s most notable updates. For the full list of implemented changes, review the release notes. \nWe appreciate your participation in our Early Access Program and look forward to getting your feedback on the newly added features. Let us know what you think in the comments below or on X. If you spot a bug, please report it via our issue tracker. \nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "The IntelliJ IDEA 2024.3 EAP 2 build is now available!&#160; You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. Download IntelliJ IDEA 2024.3 EAP 2 Discover the newly introduced features below!&#160; Debugger Enhanced HotSwap feature In the [&#8230;]",
        "contentSnippet": "The IntelliJ IDEA 2024.3 EAP 2 build is now available!  You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. Download IntelliJ IDEA 2024.3 EAP 2 Discover the newly introduced features below!  Debugger Enhanced HotSwap feature In the […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=510916",
        "categories": [
          "eap",
          "2024-3",
          "2024-3-eap",
          "intellij-idea",
          "intellij-idea-2024-3",
          "intellij-idea-2024-3-eap"
        ],
        "isoDate": "2024-09-19T15:52:06.000Z"
      },
      {
        "creator": "Sasha Maximova",
        "title": "New in Writerside: The Good Docs Project Templates Right in Your Editor",
        "link": "https://blog.jetbrains.com/writerside/2024/09/new-in-writerside-the-good-docs-project-templates-right-in-your-editor/",
        "pubDate": "Thu, 19 Sep 2024 13:30:51 +0000",
        "content:encodedSnippet": "“I hate to write, but I love having written,” a famous saying goes. Don’t we all – especially those of us who write functional texts, like technical documentation? We often have too little time to even convey the basic idea, let alone categorize and structure the information – whether it’s a how-to guide, a reference, or a quickstart tutorial.\nThat’s why Writerside now includes a rich library of open-source documentation templates from The Good Docs Project. From “API Reference” to “Release Notes”, templates are just one click away.\nDownload Writerside\n                                                    \nDocumentation templates: when and why\nAs much fun as it may be to picture ourselves as writers with a quill and blank paper, our work environment rarely allows for this in reality. Usually, we are stressed, rushed, and looking for shortcuts. Templates can be a game-changer in this context. \nFor small teams with just one writer (or none at all), templates offer significant advantages:\nSpeed up the process: Fill in the blanks and publish.\nFacilitate contributions: Teammates can easily fill in details in a pre-formatted structure.\nFor mid-sized and larger teams, templates provide additional practical benefits:\nMaintain consistency across all documentation.\nReduce the need for micro-management by replacing it with standardization.\n\n\n\n\nThat is all good and well. But where do you find effective documentation templates?\nEnter The Good Docs Project\nThe Good Docs Project is a global community committed to improving the quality of software documentation, both in the open-source world and beyond. Technical writers, software engineers, and UX specialists from all over the world have been collaborating to create the first open, best-practices suite of writing templates.\nThis is where Writerside finds its perfect match. While our tool initially offered a basic set of documentation templates, we’re now adding the full library from The Good Docs Project. These templates cover all types of documentation and come with instructions on how to use them, making it easier to quickly craft any type of doc with Writerside. \nHow to use documentation templates in Writerside\nThe Good Docs Project’s templates are written in Markdown, making it easy to adapt them for any project. They are also completely free and open to everyone, encouraging collaboration and accessibility.\nAnd starting with the EAP 8 release, they are all available in Writerside. \nYou don’t need to be a documentation expert to use them. Open the template library, browse through the list, preview the templates, and add them to your project with the click of a button:\n\n\n\n\nAnd of course, you can also create unique templates for your project. Such custom templates can be brand new, based on an existing content file, or adapted from one of the built-in templates provided in Writerside.\nHelp us improve\nIn collaboration with The Good Docs Project, Writerside is on a mission to help everyone create better docs. We’d love to hear your thoughts:\nFeedback on the templates: There’s a feedback link at the end of each template. Please use it to share how you used the template, what worked well, and what could be improved.\nYour Writerside experience: Did everything work as expected? Was it easy to find and use the templates? Let us know!\n\n\n\n    \nSee the full list of new features\n                                                                👉 Download Writerside 👈\n                                    \nHave ideas or suggestions? Bring them to our Slack community! 🤓",
        "dc:creator": "Sasha Maximova",
        "content": "“I hate to write, but I love having written,” a famous saying goes. Don’t we all – especially those of us who write functional texts, like technical documentation? We often have too little time to even convey the basic idea, let alone categorize and structure the information – whether it’s a how-to guide, a reference, [&#8230;]",
        "contentSnippet": "“I hate to write, but I love having written,” a famous saying goes. Don’t we all – especially those of us who write functional texts, like technical documentation? We often have too little time to even convey the basic idea, let alone categorize and structure the information – whether it’s a how-to guide, a reference, […]",
        "guid": "https://blog.jetbrains.com/?post_type=writerside&p=511794",
        "categories": [
          "documentation",
          "eap",
          "news"
        ],
        "isoDate": "2024-09-19T13:30:51.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "A New Approach to Build Runners | TeamCity Pipelines Pulse, Issue #7",
        "link": "https://blog.jetbrains.com/teamcity/2024/09/teamcity-pipelines-pulse-issue7-build-runners/",
        "pubDate": "Thu, 19 Sep 2024 11:58:22 +0000",
        "content:encodedSnippet": "In TeamCity Pipelines, build runners tell the system how to build, test, and package your code.\nFor this latest release, we’ve revamped how build runners work. Here’s what’s new:\nNew design for creating a build step\nWith this most recent release of TeamCity Pipelines, we’ve made creating build steps even more straightforward. You can now find, select, and configure the runners you need for a given build quickly and easily.\nLet’s hear from TeamCity Pipelines Product Designer Tanya Konvaliuk about why and exactly how we decided to make these changes.\n“The old setup for creating job steps worked fine for simple tasks, but it became too limited when we needed more complex runners. It couldn’t handle extra runners or customization well.\n\r\n\r\nTo fix this, we’ve introduced a new, more flexible design. It’s scalable, making it easy to add more runners and settings in the future.”\n\n            \nTanya Konvaliuk\n                                                                TeamCity Pipelines Product Designer\n                                    \n\n\n\n\nKey updates include\nMore flexibility: You can now easily add and customize different runners.\n\n\n\n\nMore intuitive step management: Steps can be edited and reordered by dragging and dropping them.\n\n\n\n\nClearer interface: You can easily see which runner is used for each step.\n\n\n\n\nWe’re also planning to add more runners and make CLI scripts more interactive. Let us know your thoughts as we continue to improve the process!\nGive TeamCity Pipelines a try\nBug fixes and improvements\nWe’ve fixed some bugs and made several improvements for a better user experience with TeamCity Pipelines.\nWe’ve resolved the issue so that TeamCity Pipelines now accurately reflects when no artifacts are produced by jobs.\nWe’ve updated the system so that users remain on the pipeline settings page after renaming a pipeline.\nNow, even longer job names fit in the container on the pipeline overview page.\nDid you know?\nIn TeamCity Pipelines, you can make use of Linux, Windows, and per-minute macOS agents hosted by JetBrains. You can also install self-hosted agents.\n\n\n\n\nYou might choose self-hosted agents to have more control over the environment, meet specific hardware or software requirements, or optimize costs by using your own resources.\nThat’s it for now! \nYours truly,\nThe TeamCity Pipelines team",
        "dc:creator": "Olga Bedrina",
        "content": "In TeamCity Pipelines, build runners tell the system how to build, test, and package your code. For this latest release, we’ve revamped how build runners work. Here’s what’s new: New design for creating a build step With this most recent release of TeamCity Pipelines, we&#8217;ve made creating build steps even more straightforward. You can now [&#8230;]",
        "contentSnippet": "In TeamCity Pipelines, build runners tell the system how to build, test, and package your code. For this latest release, we’ve revamped how build runners work. Here’s what’s new: New design for creating a build step With this most recent release of TeamCity Pipelines, we’ve made creating build steps even more straightforward. You can now […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=512038",
        "categories": [
          "news",
          "release",
          "teamcity-pipelines-pulse"
        ],
        "isoDate": "2024-09-19T11:58:22.000Z"
      },
      {
        "creator": "Evgenia Verbina",
        "title": "How to Use FastAPI for Machine Learning",
        "link": "https://blog.jetbrains.com/pycharm/2024/09/how-to-use-fastapi-for-machine-learning/",
        "pubDate": "Thu, 19 Sep 2024 08:59:08 +0000",
        "content:encodedSnippet": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas, Polars, and Jupyter Notebook.\n\n\n\n\nFastAPI provides a quick way to build a backend service with Python. With a few decorators, you can turn your Python function into an API application. \nIt is widely used by many companies including Microsoft, Uber, and Netflix. According to the Python Developers Survey, FastAPI usage has grown from 21% in 2021 to 29% in 2023. For data scientists, it’s the second most popular framework, with 31% using it. \nIn this blog post, we will cover the basics of FastAPI for data scientists who may want to build a quick prototype for their project. \nWhat is FastAPI?\nFastAPI is a popular web framework for building APIs with Python, based on standard Python type hints. It is intuitive and easy to use, and it can provide a production-ready application in a short period of time. It is fully compatible with OpenAPI and JSON Schema.\nWhy use FastAPI for machine learning?\nMost teams working on machine learning projects consist of data scientists whose domains and professions lie on the statistics side of things. They may not have experience developing software or applications to ship their machine learning projects. FastAPI enables data scientists to easily create APIs for the following projects:\nDeploying prediction models\nThe data science team may have trained a model for the prediction of the sales demand in a warehouse. To make it useful, they have to provide an API interface so other parts of the stock management system can use this new prediction functionality.\nSuggestion engines\nOne of the very common uses of machine learning is as a system that provides suggestions based on the users’ choices. For example, if someone puts certain products in their shopping cart, more items can be suggested to that user. Such an e-commerce system requires an API call to the suggestion engine that takes input parameters.\nDynamic dashboards and reporting systems\nSometimes, reports for data science projects need to be presented as dashboards so users can inspect the results themselves. One possible approach is to have the data model provide an API. Frontend developers can use this API to create applications that allow users to interact with the data.\nAdvantages of using FastAPI\nCompared to other Python web frameworks, FastAPI is simple yet fully functional. Mainly using decorators and type hints, it allows you to build a web application without the complexity of building a whole ORM (object-relational mapping) model and with the flexibility of using any database, including any SQL and NoSQL databases. FastAPI also provides automatic documentation generation, support for additional information and validation for query parameters, and good async support.\nFast development\nCreating API calls in FastAPI is as easy as adding decorators in the Python code. Little to no backend experience is needed for anyone who wants to turn a Python function into an application that will respond to API calls.\nFast documentation\nFastAPI provides automatic interactive API documentation using Swagger UI, which is an industry standard. No extra effort is required to build clear documentation with API call examples. This creates an advantage for busy data science teams who may not have the energy and expertise to write technical specifications and documentation.\nEasy testing\nWriting tests is one of the most important steps in software development, but it can also be one of the most tedious, especially when the time of the data science team is valuable. Testing FastAPI is made simple thanks to Starlette and HTTPX. Most of the time no monkey patching is needed and tests are easy to write and understand.\nFast deployment\nFastAPI comes with a CLI tool that can bridge development and deployment smoothly. It allows you to switch between development mode and production mode easily. Once development is completed, the code can be easily deployed using a Docker container with images that have Python prebuilt.\nHow to use FastAPI for a machine learning project\nIn this example, we will turn a classification prediction model that uses the Nearest Neighbors algorithm to predict the species of various penguins based on their bill and flipper length into a backend application. We will provide an API that takes parameters from the query parameters of a URL and gives back the prediction. This shows how a prototype can be made quickly by any data scientist with no backend development experience.\nWe will use a simple `KNeighborsClassifier` on the penguin data set as an example. Details of how to build the model will be omitted, but feel free to check out the relevant notebook here. In the following tutorial, we will focus on the usage of FastAPI and explain some fundamental concepts. We will be building a prototype to do so. \n1. Start a FastAPI project with PyCharm\n\nIn this blog post, we will be using PyCharm Professional 2024.1. The best way to start using FastAPI is to create a FastAPI project with PyCharm. When you click New Project in PyCharm, you will be presented with a large selection of projects to choose from. Select the FastAPI tab:\n\nFrom here, you can put in the name of your project and take advantage of other options such as initializing Git and the virtual environment that you want to use.\nAfter doing so, you will see the basic structure of a FastAPI project set up for you.\n\nThere is also a `test_main.http` file set up for you to quickly test all the endpoints.\n\n\n\n\n\n2. Set up environment dependencies\nNext, set up our environment dependency with `requirements.txt` by selecting ​​Sync Python Requirements under PyCarm’s Tool menu.\n\nThen you can select the `requirements.txt` file to be used.\n\nYou can copy and use this `requirements.txt` file. We will be using pandas and scikit-learn for the machine learning part of the project. Also, add the `penguins.csv` file to your project directory.\n3. Set up your machine learning model\nArrange your machine learning code in the `main.py` file. We will start with a script that trains our model:\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\n\ndata = pd.read_csv('penguins.csv')\ndata = data.dropna()\n\nle = preprocessing.LabelEncoder()\nX = data[[\"bill_length_mm\", \"flipper_length_mm\"]]\nle.fit(data[\"species\"])\ny = le.transform(data[\"species\"])\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)\nclf = Pipeline(\n    steps=[(\"scaler\", StandardScaler()), (\"knn\", KNeighborsClassifier(n_neighbors=11))]\n)\nclf.set_params().fit(X_train, y_train)\nWe can place the above code after `app = FastAPI()`. All of it will be run when we start the application.\n\nHowever, there is a better way to run the start-up code we used to set up our model. We will cover that in a later part of the blog post.\n4. Request a response\nNext we will look at how to add our model to FastAPI functionality. As a first step, we will add a response to the root of the URL and just simply return a message about our model in JSON format. Change the code in `async def root():` from “Hello world” to our message like this:\n@app.get(\"/\")\nasync def root():\n    return {\n        \"Name\": \"Penguins Prediction\",\n        \"description\": \"This is a penguins prediction model based on the bill length and flipper length of the bird.\",\n    }\nNow, test our application. First, we will start our application, which is easy in PyCharm. Just press the arrow button () next to your project name at the top.\n\nIf you are using the default settings, your application will run on http://127.0.0.1:8000. You can double-check that by looking at the prompt from the Run window.\n\nOnce the process has started, let’s go to `test_main.http` and press the first arrow button () next to `GET`. From the HTTP Client in the Services window, you will see the response message that we put in.\n\nThe response JSON file is also saved for future inspection.\n5. Request with query parameters\nNext, we would like to let users make predictions by providing query parameters in the URL. Let’s add the code below after the `root` function.\n@app.get(\"/predict/\")\nasync def predict(bill_length_mm: float = 0.0, flipper_length_mm: float = 0.0):\n    param = {\n                \"bill_length_mm\": bill_length_mm,\n                \"flipper_length_mm\": flipper_length_mm\n            }\n    if bill_length_mm <=0.0 or flipper_length_mm <=0.0:\n        return {\n            \"parameters\": param,\n            \"error message\": \"Invalid input values\",\n        }\n    else:\n        result = clf.predict([[bill_length_mm, flipper_length_mm]])\n        return {\n            \"parameters\": param,\n            \"result\": le.inverse_transform(result)[0],\n        }\nHere we set the default value of the `bill_length_mm` and `flipper_length_mm` to be 0 if the user didn’t input a value. We also add a check to see if either of the values is 0 and return an error message instead of trying to predict which penguin the input refers to.\nIf the inputs are not 0, we will use the model to make a prediction and use the encoder to do an inverse transformation to get the label of the predicted target, i.e. the name of the penguin species.\nThis is not the only way you can verify inputs. You can also consider using Pydantic for input verification.\nIf you are using the same version of FastAPI as stated in `requirements.txt`, FastAPI automatically refreshes the service and applies changes on save. Now put in a new URL in `test_main.http` to test (separated from the URL before with ###):\n###\n\nGET http://127.0.0.1:8000/predict/?bill_length_mm=40.3&flipper_length_mm=195\nAccept: application/json\nPress the arrow button () next to our new URL and see the output.\n\nNext you can try a URL with one or both of the parameters removed to see the error message:\n###\n\nGET http://127.0.0.1:8000/predict/?bill_length_mm=40.3\nAccept: application/json\n\n6. Set up a machine learning model with lifespan events\nLast, let’s look at how we can set up our model with FastAPI lifespan events. The advantage of doing that is we can make sure no request will be accepted while the model is still being set up and the memory used will be cleaned up afterward. To do that, we will use an `asynccontextmanager`. Before `app = FastAPI()` we will add:\nfrom contextlib import asynccontextmanager\n\nml_models = {}\n\n@asynccontextmanager\nasync def lifespan(app: FastAPI):\n    # Set up the ML model here\n    \n    yield\n    # Clean up the models and release resources\n\n\n    ml_models.clear()\nNow we will move the import of pandas and scikit-learn to be alongside the other imports. We will also move our setup code inside the `lifespan` function, setting the machine learning model and LabelEncoder inside `ml_models` like this:\nfrom fastapi import FastAPI\nfrom contextlib import asynccontextmanager\n\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\n\nml_models = {}\n\n@asynccontextmanager\nasync def lifespan(app: FastAPI):\n    # Set up the ML model here\n\n    data = pd.read_csv('penguins.csv')\n    data = data.dropna()\n\n    le = preprocessing.LabelEncoder()\n    X = data[[\"bill_length_mm\", \"flipper_length_mm\"]]\n    le.fit(data[\"species\"])\n    y = le.transform(data[\"species\"])\n    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)\n    clf = Pipeline(\n        steps=[(\"scaler\", StandardScaler()), (\"knn\", KNeighborsClassifier(n_neighbors=11))]\n    )\n    clf.set_params().fit(X_train, y_train)\n\n    ml_models[\"clf\"] = clf\n    ml_models[\"le\"] = le\n\n    yield\n    # Clean up the models and release resources\n\n    ml_models.clear()\nAfter that we will add the `lifespan=lifespan` parameter in `app = FastAPI()`:\napp = FastAPI(lifespan=lifespan)\nNow save and test again. Everything should work and we should see the same result as before.\nAfterthought: When to train the model?\nFrom our example, you may wonder when the model is trained. Since `clf` is trained at the beginning, i.e. when the service is launched, you may wonder why we do not train the model every time someone makes a prediction.\nWe do not want the model to be trained every time someone makes a call, because it costs way more resources to re-train everything. Additionally, it may cause race conditions since our FastAPI application is working concurrently. This is especially the case if we use live data that changes all the time.\nTechnically, we can set up an API to collect data and re-train the model (which we will demonstrate in the next example). Other options would be to schedule a re-train at a certain time when a certain amount of new data has been collected or to let a super user upload new data and trigger the re-training.\nSo far, we are aiming to build a prototype that runs locally. Check out this article on deploying a FastAPI project on a cloud service for more information.\nWhat is concurrency?\nTo put it simply, concurrency is like when you are cooking in the kitchen, and while waiting for the water to boil, you go ahead and chop the vegetables. Since, in the web service world, the server is talking to many terminals, and the communication between the server and the terminals is slower than most internal applications, so the server will not talk to and serve the terminals one by one. Instead, it will talk to and serve many of them at the same time while fulfilling their requests. You may want to check out this explanation in the FastAPI documentation.\nIn Python, this is achieved by using async code. In our FastAPI code, the use of `async def` instead of `def` is obvious evidence that FastAPI is working concurrently. There are other keywords used in Python async code, like `await` and `asyncio.get_event_loop`, but we won’t be able to cover them in this blog post. \nHow to use FastAPI for an image classification project\nTo discover more FastAPI functionality, we will add an image classification model based on the MNIST example in Keras to our application as well (we are using the TensorFlow backend). If you installed the `requirements.txt` provided, you should have Keras and Pillow installed for image processing and building a convolutional neural network (CNN).\n1. Refactoring\nBefore we start, let’s refactor our code. To make the code more organized, we will put the model setup for the penguins prediction in a function:\ndef penguins_pipeline():\n    data = pd.read_csv('penguins.csv')\n    data = data.dropna()\n\n    le = preprocessing.LabelEncoder()\n    X = data[[\"bill_length_mm\", \"flipper_length_mm\"]]\n    le.fit(data[\"species\"])\n    y = le.transform(data[\"species\"])\n    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)\n    clf = Pipeline(\n        steps=[(\"scaler\", StandardScaler()), (\"knn\", KNeighborsClassifier(n_neighbors=11))]\n    )\n    clf.set_params().fit(X_train, y_train)\n\n    return clf, le\nThen we rewrite the lifespan function. With full-line code completion in PyCharm, it is very easy:\n\n\n\n\n2. Set up a CNN model for MNIST prediction\nIn similar fashion as the penguin prediction model, we create a function for MNIST prediction (and we will store the meta parameters globally):\n# MNIST model meta parameters\nnum_classes = 10\ninput_shape = (28, 28, 1)\nbatch_size = 128\nepochs = 15\n\ndef mnist_pipeline():\n    # Load the data and split it between train and test sets\n    (x_train, y_train), _ = keras.datasets.mnist.load_data()\n\n    # Scale images to the [0, 1] range\n    x_train = x_train.astype(\"float32\") / 255\n\n    # Make sure images have shape (28, 28, 1)\n    x_train = np.expand_dims(x_train, -1)\n\n    # convert class vectors to binary class matrices\n    y_train = keras.utils.to_categorical(y_train, num_classes)\n\n    model = keras.Sequential(\n        [\n            keras.Input(shape=input_shape),\n            layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n            layers.MaxPooling2D(pool_size=(2, 2)),\n            layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n            layers.MaxPooling2D(pool_size=(2, 2)),\n            layers.Flatten(),\n            layers.Dropout(0.5),\n            layers.Dense(num_classes, activation=\"softmax\"),\n        ]\n    )\n\n    model.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n\n    model.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, validation_split=0.1)\n\n    return model\nThen add the model setup in the lifespan function:\nml_models[\"cnn\"] = mnist_pipeline()\nNote that since this is added, every time you make changes to `main.py` and save, the model will be trained again. It can take a bit of time. So in development you may want to use a dummy model that requires no training time at all or a pre-trained model instead. After training, the CNN model will be ready to go.\n3. Set up a POST endpoint for uploading an image file for prediction\nTo set up an endpoint that takes an upload file, we have to use UploadFile in FastAPI:\n@app.post(\"/predict-image/\")\nasync def predicct_upload_file(file: UploadFile):\n    img = await file.read()\n    \n    # process image for prediction\n    img = Image.open(BytesIO(img)).convert('L')\n    img = np.array(img).astype(\"float32\") / 255\n    img = np.expand_dims(img, (0, -1))\n    \n    # predict the result\n    result = ml_models[\"cnn\"].predict(img).argmax(axis=-1)[0]\n    return {\"filename\": file.filename,\n            \"result\": str(result)}\nPlease note that this is a POST endpoint (so far we have only set up GET endpoints).\nDon’t forget to import `UploadFile` from `fastapi`:\nfrom fastapi import FastAPI, UploadFile\nAnd `Image` from Pillow. We are also using `BytesIO` from the `io` module:\nfrom PIL import Image\nfrom io import BytesIO\nTo test this using the PyCharm HTTP Client with a test image file, we will make use of the `multipart/form-data` encoding. You can check out the HTTP request syntax here. This is what you will put in the `test_in.http` file:\n###\n\nPOST http://127.0.0.1:8000/predict-image/ HTTP/1.1\nContent-Type: multipart/form-data; boundary=boundary\n\n--boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"test_img0.png\"\n\n< ./test_img0.png\n\n--boundary–\n4. Add an API to collect data and trigger retraining\nNow, here comes the retraining. We set up a POST endpoint like above to accept a zip file which contains training images and labels. The zip file will then be processed and the training data will be prepared. After that we will fit the CNN model again:\n@app.post(\"/upload-images/\")\nasync def retrain_upload_file(file: UploadFile):\n\n    img_files = []\n    labels_file = None\n    train_img = None\n\n    with ZipFile(BytesIO(await file.read()), 'r') as zfile:\n        for fname in zfile.namelist():\n            if fname[-4:] == '.txt' and fname[:2] != '__':\n                labels_file = fname\n            elif fname[-4:] == '.png':\n                img_files.append(fname)\n\n        if len(img_files) == 0:\n            return {\"error\": \"No training images (png files) found.\"}\n        else:\n            for fname in sorted(img_files):\n                with zfile.open(fname) as img_file:\n                    img = img_file.read()\n\n                    # process image\n                    img = Image.open(BytesIO(img)).convert('L')\n                    img = np.array(img).astype(\"float32\") / 255\n                    img = np.expand_dims(img, (0, -1))\n\n                    if train_img is None:\n                        train_img = img\n                    else:\n                        train_img = np.vstack((train_img, img))\n\n        if labels_file is None:\n            return {\"error\": \"No training labels file (txt file) found.\"}\n        else:\n            with zfile.open(labels_file) as labels:\n                labels_data = labels.read()\n                labels_data = labels_data.decode(\"utf-8\").split()\n                labels_data = np.array(labels_data).astype(\"int\")\n                labels_data = keras.utils.to_categorical(labels_data, num_classes)\n\n    # retrain model\n    ml_models[\"cnn\"].fit(train_img, labels_data, batch_size=batch_size, epochs=epochs, validation_split=0.1)\n\n    return {\"message\": \"Model trained successfully.\"}\nRemember to import `ZipFile`:\nfrom zipfile import ZipFile\nIf we now try the endpoint with this zip file of 1000 retraining images and labels, you will see that it takes a moment for the response to come, as the training is taking a while:\nPOST http://127.0.0.1:8000/upload-images/ HTTP/1.1\nContent-Type: multipart/form-data; boundary=boundary\n\n--boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"training_data.zip\"\n\n< ./retrain_img.zip\n\n--boundary--\nImagine the zip files contain more training data or you’re retraining a more complicated model. The user would then have to wait for a long time and it would seem like things are not working for them.\n5. Retrain the model with BackgroundTasks\nA better way to handle retraining is, after receiving the training data, we process it and check if the data is in the right format, then give a response saying that the retraining has restarted and train the model in `BackgroundTasks`. Here is how to do it. First, we will add `BackgroundTasks` to our `upload-images` endpoint:\n@app.post(\"/upload-image/\")\nasync def retrain_upload_file(file: UploadFile, background_tasks: BackgroundTasks):\n\t...\nRemember to import it from `fastapi`:\nfrom fastapi import FastAPI, UploadFile, BackgroundTasks\nThen, we will put the fitting of the model into the `background_tasks`:\n# retrain model\n    background_tasks.add_task(\n        ml_models[\"cnn\"].fit,\n        train_img,\n        labels_data,\n        batch_size=batch_size,\n        epochs=epochs,\n        validation_split=0.1\n    )\nAlso, we will update the message in the response:\nreturn {\"message\": \"Data received successfully, model training has started.\"}\nNow test the endpoint again. You will see that the response has arrived much quicker, and if you look at the Run window, you’ll see that the training is running after the response has arrived.\nAt this point, more functionality can be added, for example, an option to notify the user later (e.g. via email) when the training is finished or track the training progress in a dashboard when a full application is built.\nDevelop ML FastAPI applications with PyCharm\nFastAPI provides an easy way to convert your data science project into a working application in several easy steps. It is perfect for data science teams that want to provide an application prototype for their machine learning model which can be further developed into a professional web application if needed. \nPyCharm Professional is the Python IDE that allows you to develop FastAPI applications more easily with a preconfigured project for FastAPI, coding assistance, tailored run/debug configurations, and the Endpoints tool window for managing API endpoints efficiently.\nGet a free trial of PyCharm Professional\n                                                    \nIn this blog post, we showed the process of providing a simple API for a pre-trained prediction model. To learn more about FastAPI, I would suggest checking out the official FastAPI documentation. If you’re choosing between different frameworks, explore how FastAPI differs from Django.\nAbout the author\nCheuk Ting Ho\nCheuk has been a Data Scientist at various companies – a job that demands high numerical and programming skills, especially in Python. Following her passion for the tech community, Cheuk has been a Developer Advocate for three years. She also contributes to multiple open-source libraries like Hypothesis, Pytest, pandas, Polars, PyO3, Jupyter Notebook, and Django. Cheuk is currently a consultant and trainer at CMD Limes.",
        "dc:creator": "Evgenia Verbina",
        "content": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas, Polars, and Jupyter Notebook. FastAPI provides a quick way to build a backend service with Python. With a few decorators, you can turn your Python function into an API application. It is widely used [&#8230;]",
        "contentSnippet": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas, Polars, and Jupyter Notebook. FastAPI provides a quick way to build a backend service with Python. With a few decorators, you can turn your Python function into an API application. It is widely used […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=509778",
        "categories": [
          "data-science",
          "how-tos"
        ],
        "isoDate": "2024-09-19T08:59:08.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "IntelliJ IDEA 2024.2.2 Is Out",
        "link": "https://blog.jetbrains.com/idea/2024/09/intellij-idea-2024-2-2/",
        "pubDate": "Wed, 18 Sep 2024 20:49:50 +0000",
        "content:encodedSnippet": "We’ve just released a new minor version for IntelliJ IDEA 2024.2 – 2024.2.2.\nYou can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website.\nHere are some of the notable updates:\nHighlighting no longer “blinks” upon typing. [IJPL-148285]\nDebugging for the spring-boot:run Maven goal is once again available. [IDEA-175246]\nNon-Latin letters and characters are properly displayed in the Run console. [IJPL-160012]\nIt’s again possible to save the project settings with Coverage if the Qodana plugin is enabled. [IDEA-357267]\nDeleting a draft comment for a GitLab merge request now works properly. [IJPL-82744]\nThe Scene Builder for JavaFX projects again works as intended. [IDEA-357493]\nThe Microsoft Defender configuration script now runs smoothly. [IJPL-37118]\nThe Big Data Tools plugin again works without reinstallation. [IJPL-159827]\nRunning XSLT transformations no longer returns an unknown error. [IJPL-160738]\nThe IDE now correctly shows only one banner when an annotation from an external annotator is added to the file. [IJPL-995]\nGenerating the XML document from an XSD schema again works as intended. [IJPL-160786]\nTo find out more details about the issues resolved, please refer to the release notes.\nIf you encounter any issues or would like to make a suggestion or a feature request, please submit them to our issue tracker.\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "We’ve just released a new minor version for IntelliJ IDEA 2024.2 – 2024.2.2. You can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website. Here are some of the notable updates: To find out more details about the [&#8230;]",
        "contentSnippet": "We’ve just released a new minor version for IntelliJ IDEA 2024.2 – 2024.2.2. You can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website. Here are some of the notable updates: To find out more details about the […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=509236",
        "categories": [
          "releases",
          "2024-2",
          "bug-fix-update",
          "intellij-idea-2024-2",
          "intellij-idea-2024-2-2"
        ],
        "isoDate": "2024-09-18T20:49:50.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Code Quality Booster: Live Qodana Demo and Best Practices for Code Analysis",
        "link": "https://blog.jetbrains.com/qodana/2024/09/code-quality-booster-live-qodana-demo-and-best-practices-for-code-analysis/",
        "pubDate": "Wed, 18 Sep 2024 15:36:20 +0000",
        "content:encodedSnippet": "Join us for a live demo of Qodana, the static code analysis platform from JetBrains. Discover how to integrate Qodana with your IDE and your CI pipeline, build quality gates, and catch critical issues early.\nDate: September 30, 2024\nTime: 6 pm CET (4 pm UTC)\nRegister for the webinar\n\n\n\n\nSession abstract\nWhether you’re new to Qodana or looking to deepen your understanding of the platform, this session will provide practical insights and live examples to help you streamline your development process.\nYou’ll learn:\nHow to set up Qodana in your development environment.\nHow to use Qodana’s powerful code analysis features.\nHow to integrate Qodana with your CI/CD pipeline.\nBest practices for using Qodana to improve code quality.\n\n\n\n\nAsking questions\nKai will try to answer all your questions during the session. If we run out of time, we’ll be sure to respond to remaining questions in a follow up blogpost.\nYour speaker and host\nKai Schmithuesen, Product Specialist at Qodana\nKai Schmithuesen, Product Specialist at Qodana\nKai is an accomplished product specialist with over 15 years of experience in the software sales industry, focusing on developer tools and practices. Originally from Germany, Kai spent over 10 years in Ireland working for US software companies before relocating to Stockholm, where he now oversees sales activities for Qodana.\nHappy developing!",
        "dc:creator": "Kerry Beetge",
        "content": "Join us for a live demo of Qodana, the static code analysis platform from JetBrains. Discover how to integrate Qodana with your IDE and your CI pipeline, build quality gates, and catch critical issues early. Date: September 30, 2024 Time:&#160;6 pm CET (4 pm UTC) Register for the webinar Session abstract Whether you&#8217;re new to [&#8230;]",
        "contentSnippet": "Join us for a live demo of Qodana, the static code analysis platform from JetBrains. Discover how to integrate Qodana with your IDE and your CI pipeline, build quality gates, and catch critical issues early. Date: September 30, 2024 Time: 6 pm CET (4 pm UTC) Register for the webinar Session abstract Whether you’re new to […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=511046",
        "categories": [
          "qodana",
          "agile-development",
          "cicd",
          "code-optiization",
          "code-review",
          "developers",
          "software-development",
          "software-engineers"
        ],
        "isoDate": "2024-09-18T15:36:20.000Z"
      },
      {
        "creator": "Alena Gupaisova",
        "title": "JetBrains Introduces Free Online Clubs for School Students",
        "link": "https://blog.jetbrains.com/education/2024/09/18/jetbrains-introduces-free-online-clubs-for-school-students/",
        "pubDate": "Wed, 18 Sep 2024 09:00:52 +0000",
        "content:encodedSnippet": "Starting in October, we invite teenagers interested in math, programming, and AI to join our free online clubs. Whether you want to participate in Olympiads or planning to study at high-intensity and prestigious STEM programs, our clubs will help you prepare and meet like-minded people from different countries. Take a closer look at the clubs if you plan to participate in the upcoming JetBrains Academy Youth Challenge.\nThe clubs will operate from October 2024 until the end of May 2025. They are designed for high schoolers but can also be interesting for younger students with experience in solving tasks outside the standard school curriculum. \nLearn more\n\nMath Club\nAI Club\nCoding Club\n\n\n\n\n\nMath Club\nEvery week, you’ll be given a set of 15 problems, each of increasing difficulty. You can solve those at any convenient time before the deadline. After that, you can discuss your solutions with your peers and coaches during the Math Club’s Saturday live sessions, which will last for 90 minutes.\nThe first semester focuses on polynomials, discrete probability, and graph theory. Students who solve at least 50% of the tasks will be invited to continue to the more advanced second semester with written solutions and oral defenses.\nThis club is particularly valuable for those who excel in programming. The course helps create a fundamental mathematical base to enhance your ability to solve programming problems more effectively. The course curriculum is designed by a team of mathematicians with expertise in preparing winners and medalists for major events like the International Mathematical Olympiad (IMO) and the European Girls’ Mathematical Olympiad (EGMO).\nFor students entering bachelor’s studies this year, your Math Club results may count as an additional five points (about one-third) of an entrance test mark for the BSc degrees supported by JetBrains: Computer Science and AI and Software, Data, and Technology.\nMore details\n                                                    \nAI Club\nIf you’re interested in diving into AI, learning the basics, and even putting in the effort to reach Olympiad level (like IOAI), take a closer look at our AI Club.\nThis club offers weekly lectures and live sessions every Wednesday, held by Alex Avdiushenko, PhD in math modeling and analyst on the JetBrains Education and Research team. You’ll learn about machine learning (data analysis and model training), neural networks, computer vision, and natural language processing (NLP).\nThis club will be especially beneficial to those interested in adding knowledge of AI to your math or coding skills.\nLearn more\n                                                    \nCoding Club\nOur Coding Club hosts weekly contests on the Codeforces platform. It’s a perfect match for those with some experience in competitive programming who want to master their problem-solving skills. \nEach week, Pavel Mavrin, ICPC World Champion 2004, IOI 2002 Silver Medalist, and instructor at JetBrains Academy, will prepare a mashup contest for you and discuss your solutions during live sessions held on Thursdays.\nJoin now",
        "dc:creator": "Alena Gupaisova",
        "content": "Starting in October, we invite teenagers interested in math, programming, and AI to join our free online clubs. Whether you want to participate in Olympiads or planning to study at high-intensity and prestigious STEM programs, our clubs will help you prepare and meet like-minded people from different countries. Take a closer look at the clubs [&#8230;]",
        "contentSnippet": "Starting in October, we invite teenagers interested in math, programming, and AI to join our free online clubs. Whether you want to participate in Olympiads or planning to study at high-intensity and prestigious STEM programs, our clubs will help you prepare and meet like-minded people from different countries. Take a closer look at the clubs […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=510844",
        "categories": [
          "jetbrains-academy",
          "offline-programs"
        ],
        "isoDate": "2024-09-18T09:00:52.000Z"
      },
      {
        "creator": "Oleg Zinovyev",
        "title": "The CLion 2024.3 Early Access Program Is Open",
        "link": "https://blog.jetbrains.com/clion/2024/09/2024-3-eap-open/",
        "pubDate": "Tue, 17 Sep 2024 16:38:05 +0000",
        "content:encodedSnippet": "The Early Access Program for CLion 2024.3 is officially launched. The first EAP build 243.12818.61 is now available, giving you an early glimpse into the enhancements we’ll include in the upcoming major release. You can download the build for free from the link below, via the Toolbox App, or as a snap package if you’re using Ubuntu.\nDOWNLOAD CLION 2024.3 EAP\nGive it a try and let us know what you think about the changes. Share your feedback in the comments section or via our issue tracker.\nRead on to learn more about the key features and updates in CLion Nova, embedded development integrations, and other IDE components.\nEnhanced cloud code completion\nCLion’s cloud code completion powered by JetBrains AI Assistant has become faster and smarter thanks to the internally trained large language model (LLM) for C++. One of the most prominent results is the improved multiline code completion, with enhanced usage scenarios, syntax highlighting, and incremental acceptance of code suggestions.\n\n\n\n\nMultiline code suggestions work in conjunction with standard code completion and full line code completion (the latter uses the local LLM and doesn’t require sending data to the cloud). This allows you to review and accept suggestions gradually. You can also accept suggestions word by word using the shortcut ⌥→ for macOS and Ctrl+→ for Windows.\nThe updated cloud completion now offers a broader range of usage scenarios, with enhanced suffix matching ensuring that the predicted code fragment correctly completes the existing code.\nIf you have installed AI Assistant, the new cloud code completion is enabled by default. You can manage it via Settings | Editor | General | Inline Completion.\nNote that these features are available only to users with a trial or paid subscription to the JetBrains AI Assistant plugin.\nCLion Nova\nThe notable improvements can be broken down into two main categories: language-specific and those related to IDE memory usage.\nLanguage-specific improvements\nWe’ve added one of the most requested features – predefined code styles from other languages and frameworks, including LLVM, Qt, Google, GNU, and more (CPP-36365). You can select your preferred code style via Settings | Editor | Code Style | C/C++ | Set from… \nOne of the UI updates is support for a gutter icon for recursive calls:\n\n\n\n\nThis makes it easier to see where you are using recursive functions in your code and to avoid potentially harmful situations like stack overflows.\nWe’ve also enhanced CLion Nova with support for some of the newest standard library features and for switch cases with a range of values, which is a GNU extension.\nMemory usage improvements\nMany improvements in CLion Nova have helped reduce the memory footprint, which is especially noticeable in large projects. We’ve tested the result of these optimizations by comparing the memory usage of a Chromium project in CLion Nova 2024.2 and 2024.3 (EAP). The result showed that, in the new version, the IDE frontend uses 51% less memory while the IDE backend uses 15% less.\n\n\n\n\nFrom a user perspective, the most tangible result of these numbers is the following:\nThe IDE is now more responsive because it uses less memory, and the garbage collector is called less often. This is especially helpful on hosts with limited memory. \nThe IDE is ready to work faster and more responsive to project modifications.\nProject formats, build tools, and debugging\nWe’ve fixed an issue that was slowing down the reload of some medium and large CMake projects (CPP-39211). The reload time has been reduced from minutes to seconds.\nThe following bundles have been updated:\nCMake to 3.30.\nLLDB to 18. Note that the JetBrains LLDB fork used for the MSVC toolchain still uses an older version of LLDB.\nEmbedded development\nSeveral enhancements have been made to the PlatformIO integration, including the following:\nPlatformIO is now detected when installed via Homebrew and venv.\nCLion correctly identifies source files in PlatformIO projects, and code analysis works as it should.\nThe upload action is now available for all targets, even those not explicitly added to env.\nOther updates related to embedded development include:\nThe Serial Port Monitor plugin now correctly detects the ports of USB devices that are set via soft link paths. The plugin has also received UI improvements.\nThe Zephyr West config files now have syntax highlighting to make the code easier to read and understand.\nSupport for .dts and .dtsi files has been extended. C preprocessor directives such as #ifdef CONFIG_SPL and #ifdef CONFIG_ROCKCHIP_EXTERNAL_TPL are now processed correctly and do not cause syntax errors.\nOther improvements\nIf you are just starting with CLion, this update is for you. We’ve improved the onboarding tips so that you can try out some of CLion’s key features and get a clearer picture of its capabilities right from the start. The main goal is to help you learn the IDE faster.\n\n\n\n\nIn addition, starting with v2024.3, the new terminal is the default. It provides features such as separating command output into distinct visual blocks and completion for command names, flags, arguments, and paths. To learn more about the new terminal, see our documentation.\nRead the full release notes on our YouTrack page. Learn more about our plans for this release in the CLion 2024.3 roadmap.\nDOWNLOAD CLION 2024.3 EAP\nCall for feedback\nYour feedback is important to us, as your experiences and insights are essential to our mission of continuously improving CLion. Please share your ideas in the comments section below or submit them to our issue tracker. We would also be interested in setting up a quick call with you to learn more about your specific use cases. Let us know if you would like to participate!\nYour CLion team\nJetBrains\nThe Drive to Develop",
        "dc:creator": "Oleg Zinovyev",
        "content": "The Early Access Program for CLion 2024.3 is officially launched. The first EAP build 243.12818.61 is now available, giving you an early glimpse into the enhancements we’ll include in the upcoming major release. You can download the build for free from the link below, via the Toolbox App, or as a snap package if you’re [&#8230;]",
        "contentSnippet": "The Early Access Program for CLion 2024.3 is officially launched. The first EAP build 243.12818.61 is now available, giving you an early glimpse into the enhancements we’ll include in the upcoming major release. You can download the build for free from the link below, via the Toolbox App, or as a snap package if you’re […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=510675",
        "categories": [
          "eap",
          "news",
          "ai-assistant",
          "clionnova",
          "code-completion",
          "embedded"
        ],
        "isoDate": "2024-09-17T16:38:05.000Z"
      },
      {
        "creator": "Elena Pishkova",
        "title": "YouTrack Introduces Apps",
        "link": "https://blog.jetbrains.com/youtrack/2024/09/youtrack-introduces-apps/",
        "pubDate": "Tue, 17 Sep 2024 16:24:33 +0000",
        "content:encodedSnippet": "With the new YouTrack 2024.3 release, one of the most hotly anticipated functionalities in the YouTrack roadmap – apps – goes live! Apps help teams customize YouTrack to fit their specific needs, improving project management, reporting, automation, and integration with other tools. You can now use and create apps to extend YouTrack’s functionality and add new features, tools, and integrations that aren’t available out of the box.\nFollowing this latest update, Text-to-Issue Transformation is also now available thanks to the power of AI. You can now effortlessly create tasks from any selected text. The AI scans your text for actionable items and enables you to convert them into issues with just a few clicks. This gives you the flexibility to quickly generate new issues whenever you need them, streamlining your workflow like never before. \nLet’s take a closer look at what’s available with this major update.\nCustomize YouTrack with apps\n\n\n\n\nWhat are YouTrack apps?\nApps extend and customize YouTrack so that it works exactly the way your team needs it to. They are small programs that project administrators can install into YouTrack to enhance or change its functionality. Apps may include workflows that automate some processes, or they can be designed to change the way YouTrack behaves – for example, they may add action buttons or widgets in various parts of your task view, as well as articles or even an additional section in the top bar menu leading to a separate page.\nApps can work as a connector between different systems. For example, this means you can get snapshots of data from an external source by registering a webhook (e.g., your customer data platform) in your customer tickets in the helpdesk or add buttons that transform the information from YouTrack and export it to a dashboard on your corporate portal – the possibilities are endless.\nApps functionality is available to both YouTrack Cloud and YouTrack Server customers. As a result, YouTrack is now even more flexible. If you need to extend YouTrack with some functionality that is not yet available out of the box, one option would now be to explore whether you could do this by building an app.\n\n\n\n\nWhere to get Apps\nUse the preinstalled Apps\nSeveral apps come bundled with YouTrack by default. They are intended to provide the functionality that used to be available via default workflows and widgets for dashboards. In the Administration – Apps menu, you will see apps that can be used to import tasks and projects from various sources, such as Jira Migration Manager, Widgets for Dashboards, as well as the other various predefined workflows that you can choose to enable for your projects. All your previously added workflows will also be displayed here, enabling admins to manage everything in one place.\n\n\n\n\nDashboard widgets\nWith this release, dashboard widgets are now taken care of by apps. This simplifies the management of widgets and also opens up new customization possibilities. Widgets can now be more easily modified or extended through apps, giving you greater control over how information is displayed on your dashboards.\n\n\n\n\nBrowse JetBrains Marketplace\nBeyond the default apps included with YouTrack, JetBrains has also developed several other apps that can already be downloaded for free from JetBrains Marketplace.\nThe Article Feedback app adds a widget that lets you collect and analyze reader feedback for articles in the YouTrack Knowledge Base.\nThe Vote Histogram app displays a visualization of voting activity over time for a specific issue.\nThe Slack User Status app adds a Slack widget to user cards. The widget displays the user’s name and title, their current status, and includes a button that you can click to open a direct message in your Slack workspace.\nBelow, you’ll find some examples of the apps that have been created by our partners and customized according to their clients’ needs.\nMulti-Sprint Planner for software developers by twenty20\nThis app helps software development teams working on scrum boards manage sprints and backlogs more easily. It adds a new section to YouTrack’s main menu where multiple sprints can be viewed at once – one sprint per lane. With such a view, it’s easier to structure the project into multiple sprints and better organize the development process.\nPlease feel free to check the app – it’s available in the JetBrains Marketplace for free.\n\n\n\n\nExtension for YouTrack for legal teams by AgiLawer\nFor the needs of legal teams, YouTrack consulting partner AgiLawyer recommends integrating YouTrack with LegiSpace, a platform that centralizes information and seamlessly connects with multiple other tools. This powerful combination simplifies daily operations by streamlining legal management processes, such as client case management, reporting of billable hours, invoicing, and many more, all enhanced by the LegiSpace app within YouTrack. The Legispace app connects the YouTrack task to the customer profile and the cases and documents in the Legispace app.\nIf you’re interested in expanding YouTrack’s capabilities for your legal needs, reach out to the AgiLawyer team for a demo to see how customization can benefit you.\n\n\n\n\nEveryone is welcome to publish any apps they’ve created on JetBrains Marketplace. When an app is submitted, the JetBrains team will check it, and once it has been successfully verified, the app will be made available for anyone to install. We hope that with the help of our strong user community, the collection of available apps will continue to grow.\nBring your app requests to your consulting partners or to the YouTrack team\nIn addition to those published on Marketplace, you can always create an app yourself or use one created by a consulting partner based on your needs and set it up directly in your YouTrack. Creating apps requires some coding experience. If you need a custom solution tailored to your company’s requirements but don’t have that resource in your team, please feel free to reach out to our consulting partners for help. When your YouTrack is upgraded to the 2024.3 version, the option for setting up apps becomes available automatically.\nYou can also share your business requirements with the YouTrack Support team, and we’ll discuss if it is possible to create a solution for you with our paid premium support service.\nMaking the app available for your team\nEach app can be used for your entire YouTrack instance on the global level or enabled for specific projects only. Administrators can manage the users and groups who will have access to an app by using visibility controls. YouTrack apps have a set of options that you can use to restrict visibility for certain users.\nCreate your own app\nYou can start developing your app right away. Here are some resources for getting started.\nBrowse through our documentation, including the Quick Start Guide for app creators.\nCheck out the sample app for reference, which you can then upload to your YouTrack. Please refer to this part of the documentation to help you install the demo app. This example will give you hands-on experience with the basic structure and functionality of an app, allowing you to see firsthand how modules are implemented and how they interact with YouTrack’s existing features. For example, it adds widgets directly to your task above custom fields, quotes to the top and bottom in the description, a toolbar in the Show more section, and a Main menu item.\nWhen your app is ready, you can choose to restrict its use to internal personnel only, share it with your customers directly, or publish it to JetBrains Marketplace for everyone to download.\nApp monetization and next steps\nWe have only just made apps available, so the collection of ready-to-download apps is still relatively small. However, we are confident that it will soon grow with the effort of our community, partners, and the JetBrains team. Furthermore, we hope that apps will help speed up the implementation of requested features from our YouTrack public issue tracker.\nFor now, all the apps available on JetBrains Marketplace can be downloaded for free. For newly created apps, it’s now possible to publish the app to JetBrains Marketplace so it’s free to download for everyone. However, if you have billing set up on your side, it’s also possible to have monetization built in as part of an app. \nIn time, we’re planning to add an option to publish paid apps, enabling app authors to be remunerated for the custom solutions they provide, though there is no firm date for introducing this option yet.\nWe at the YouTrack team will be happy to collaborate with app authors by inviting our technological and consulting partners to share information about brilliant, complex apps in our media to encourage customers to reach out to you for the paid version. Please feel free to contact us to discuss this opportunity further.\nText-to-Issue Transformation\nThe power of AI has made it possible to implement one of the most hotly anticipated functionalities in our roadmap, allowing users to create new tasks in seconds. With this feature, you can scan selected text for possible action items, choose which ones to transform into issues, and finally create them all at once.\n\n\n\n\nAdditionally, you can use the selected text to generate new issues. This helps to quickly create a hierarchy of tasks and subtasks for them using the meta issue.\n\n\n\n\nGeneric VCS Integrations\nSoftware development teams frequently use integrations with popular VCS systems available out of the box. With this in mind, we have added an option to integrate with VCS besides those included in the list.\nYou can now manually attach commits to issues in YouTrack, ensuring that your development process stays organized and transparent. Additionally, you can programmatically add links using webhooks.\n\n\n\n\nUI enhancements\nSeveral pages in YouTrack have been tidied up and polished. This includes dashboards, the project list, and the workflow administration page.\n \nCheck out the release notes for the full technical details and a comprehensive list of bug fixes and improvements in this release. For details on configuring the latest features, see the documentation.\nIf you use YouTrack Cloud, you’ll automatically be upgraded to YouTrack 2024.3 in accordance with our Maintenance Calendar. If you have an active YouTrack Server subscription, you can download YouTrack 2024.3 today. If you don’t already have a license, you can use the free trial to test out the new version before you commit to buying! For more information about the licensing options available for YouTrack, please visit our Buy page.\nWe always appreciate your feedback. Please share it in the comments below, and don’t hesitate to contact our Support team if you have any questions. We’re always here to help!\nYour YouTrack team",
        "dc:creator": "Elena Pishkova",
        "content": "With the new YouTrack 2024.3 release, one of the most hotly anticipated functionalities in the YouTrack roadmap – apps – goes live! Apps help teams customize YouTrack to fit their specific needs, improving project management, reporting, automation, and integration with other tools. You can now use and create apps to extend YouTrack’s functionality and add [&#8230;]",
        "contentSnippet": "With the new YouTrack 2024.3 release, one of the most hotly anticipated functionalities in the YouTrack roadmap – apps – goes live! Apps help teams customize YouTrack to fit their specific needs, improving project management, reporting, automation, and integration with other tools. You can now use and create apps to extend YouTrack’s functionality and add […]",
        "guid": "https://blog.jetbrains.com/?post_type=youtrack&p=505003",
        "categories": [
          "features",
          "news",
          "releases",
          "apps",
          "youtrack-cloud",
          "youtrack-server"
        ],
        "isoDate": "2024-09-17T16:24:33.000Z"
      },
      {
        "creator": "Mala Gupta",
        "title": "Java 23 and IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2024/09/java-23-and-intellij-idea/",
        "pubDate": "Tue, 17 Sep 2024 15:30:11 +0000",
        "content:encodedSnippet": "New and updated Java language features, core API, and the JVM – Java 23 packs it all – for new Java developers to senior developers. IntelliJ IDEA 2024.2 is ready with its support for Java 23 features.\nKeeping pace with new Java version releases could be difficult – what changed, why, and how to use new and updated features. In this blog post, I’ll cover some of the new and updated features in Java 23 – the pain points they address for you, their syntax and semantics, and how IntelliJ IDEA can help you to use them.\nI’ll highlight Java 23 features, such as the inclusion of the primitive data types in pattern matching, the ability to import modules in code bases, the possibility to use Markdown in documentation comments, implicitly declared classes and instance main methods, and Flexible Constructor Bodies. If you are interested, this link includes a list of other Java 23 features.\nLet’s quickly configure IntelliJ IDEA before deep diving into the details of Java 23 features.\nIntelliJ IDEA Configuration\nJava 23 support is available in IntelliJ IDEA 2024.2, released recently.\nIn your Project Settings, set the SDK to Java 23. You can both configure IntelliJ IDEA to use a downloaded version of JDK 23, or select to download it from a list of vendors, without exiting the IDE. For the language level, select ‘23(Preview) – Primitive types in patterns, implicitly declared classes, etc.’, as shown in the screenshot below:\n\n\n\n\nTo use production feature, such as, Markdown documentation comments, change the language level, to ‘23 – Markdown documentation comments.’, as shown in the below settings screenshot:\n\n\n\n\nWith the IntelliJ IDEA configuration under your belt, let’s deep dive into learning the new features. \nPrimitive Types in Patterns, instanceof, and switch (Preview Feature)\nImagine you need to write a conditional construct that executes code based on whether the value of a long variable matches a few literal values, or falls in a range of values. \nHow would you do that? Until now, you could only use an if/else construct to do so. But, with Java 23, Primitive Types in Patterns, instanceof, and switch, a preview language feature, you could code this functionality using the more expressive and easy-to-read switch constructs, using long values in the case labels. \nWhat does it mean to add primitive types to Pattern Matching?\nUntil Java 23, switch constructs (statements and expressions) worked with reference variables and some primitives data types, such as int, byte, short (with constraints). Also, the instanceof operator couldn’t be used with any primitive data type. \nWith Java 23, you will be able to use ALL the primitive data types, including boolean, long, float, double and long, with pattern matching in Switch constructs and instanceof operators. This applies to using it in nesting and top level contexts. \nWhy should you care about this feature? The worth of a feature depends on how large the codebase it affects and how often. Since conditional statements are one of the basics of programming, you could expect to see usage of this feature a lot in your codebase. Even if you might not write the code, you would read code written by someone else.\nLet’s understand this feature using an example.\nAn example (replacing long if-else statements with switch expression)\nImagine a method, say, getHTTPCodeDesc(int), accepts an HTTP server code as an int value and returns a corresponding String representation, checking it against a literal value or a range of values. \nThere doesn’t seem to be any obvious issue with this code – we all have either written or read similar code. However, it might take longer to process the flow of an if-else construct because they COULD define complicated conditions that are NOT limited to just one variable. Let’s keep it simple and assume that the method getHTTPCodeDesc() is defined as follows: \npublic String getHTTPCodeDesc(int code) {\n   if (code == 100) {\n       return \"Continue\";\n   } \n   else if (code == 200) {\n       return \"OK\";\n   } \n   else if (code == 301) {\n       return \"Moved permanently\";\n   } \n   else if (code == 302) {\n       return \"Found\";\n   } \n   else if (code == 400) {\n       return \"Bad request\";\n   } \n   else if (code == 500) {\n       return \"Internal server error\";\n   } \n   else if (code == 502) {\n       return \"Bad gateway\";\n   } \n   else if (code > 100 && code < 200) {\n       return \"Informational\";\n   } \n   else if (code > 200 && code < 300) {\n       return \"Successful\";\n   } \n   else if (code > 302 && code < 400) {\n       return \"Redirection\";\n   } \n   else if (code > 400 && code < 500) {\n       return \"Client error\";\n   } \n   else if (code > 502 && code < 600) {\n       return \"Server error\";\n   } \n   else {\n       return \"Unknown error\";\n   }\n}\nIn Java 23, the preceding code could be replaced using a switch expression (using primitives as patterns), as follows:\npublic String getHTTPCodeDesc(int code) {\n    return switch(code) {\n        case 100 -> \"Continue\";\n        case 200 -> \"OK\";\n        case 301 -> \"Moved Permanently\";\n        case 302 -> \"Found\";\n        case 400 -> \"Bad Request\";\n        case 500 -> \"Internal Server Error\";\n        case 502 -> \"Bad Gateway\";\n        case int i when i > 100 && i < 200 -> \"Informational\";\n        case int i when i > 200 && i < 300 -> \"Successful\";\n        case int i when i > 302 && i < 400 -> \"Redirection\";\n        case int i when i > 400 && i < 500 -> \"Client Error\";\n        case int i when i > 502 && i < 600 -> \"Server Error\";\n        default                            -> \"Unknown error\";\n    };\n}\nThe first obvious benefit in the preceding code is that it is much easier to read and understand than the version that uses if-else statements. You can understand the code logic at a glance. \nAnother not-so-obvious benefit (but an important one) is how the preceding code decreases the cognitive load for you. Cognitive load refers to the amount of information you have in your working memory (working memory space is limited). If you try to overload your working memory with instructions or information not directly related to your end goal then your productivity drops. Code snippets that are easier to read help you focus your attention on other areas of the code. Such small wins help a lot when we talk about how often we could benefit from them.\nLet’s talk about the simple parts now, I mean the syntax. As you can notice, the case labels can have both – constant values (such as 100, 200, etc.) and also a range of values specified using pattern matching, using type patterns (int i) with guards (when i > 100 && i < 200). You can also define a default clause.\nIn the preceding code, the method getHTTPCodeDesc() returns a value using the switch expression. Irrespective of the value that you pass to the method parameter, that is, code, the method must return a value. In other words, the switch expression must be exhaustive. If it isn’t IntelliJ IDEA can detect it and offer the addition of the default clause, as shown in the following GIF:\n\n\n\n\nThe preceding code switches on a variable of type int. Similarly you can switch on variables of all the other primitive types, such as, long, double, float, etc.\nAre you new to Pattern matching or recent changes to the switch construct?\nIf you are completely new to Pattern Matching, check out the section on its basics in my blog post Java 17 and IntelliJ IDEA. If you are interested in how Pattern Matching is being used with the switch constructs, I have another detailed blogpost on this topic: Evolution of the Switch Construct in Java—Why Should you Care? It covers how switch constructs use pattern matching to check reference values against different patterns and execute code conditionally, depending on the type of variable and its attributes.\nUsing pattern matching with boolean values\nIt is common to read and write code that returns a value based on whether the value of a boolean variable is true or false. For example, in the following code, the method calculateDiscount, calculates and returns a discount value depending on whether you pass true or false to the method parameter isPremiumMember:\npublic class DiscountCalculator {\n    private static final int PREMIUM_DISCOUNT_PERCENTAGE = 20;\n    private static final int REGULAR_DISCOUNT_PERCENTAGE = 5;\n\n    public int calculateDiscount(boolean isPremiumMember, int totalAmount) {\n        int discount;\n        if (isPremiumMember) {\n            // Calculate discount for premium members\n            discount = (totalAmount * PREMIUM_DISCOUNT_PERCENTAGE) / 100;\n        } else {\n            // Calculate discount for regular members\n            discount = (totalAmount * REGULAR_DISCOUNT_PERCENTAGE) / 100;\n        }\n        return discount;\n    }\n}\nInstead of an if-else construct, you can switch over the value of the boolean method parameter isPremiumMember, without requiring the definition of the local variable discount, as follows:\npublic int calculateDiscount(boolean isPremiumMember, int totalAmount) {\n    return switch (isPremiumMember) {\n        case true -> (totalAmount * PREMIUM_DISCOUNT_PERCENTAGE) / 100;\n        case false -> (totalAmount * REGULAR_DISCOUNT_PERCENTAGE) / 100;\n    };\n}\nSince the switch expression in the method calculateDiscount() is exhaustive, if you miss any of the true or false values, IntelliJ IDEA can detect it and suggest you to insert a default or the missing true/ false case, as shown in the following gif:\n\n\n\n\nUsing primitive types with the instanceof operator \nUntil Java 23, none of the primitive types could be used with the instanceof operator.\nThe instanceof operator can be used to check the type of a variable, and execute code conditionally. With pattern matching for instanceof, you could also declare and initialize pattern variables if the type of a variable being compared matched without the type pattern without the need for an explicit casting. The instanceof variable can also use guard patterns.\nWith the addition of primitive types to the instanceof operator, you could define code such as the following:\nimport static java.io.IO.println;\n\nvoid main() {\n    var weight = 68;\n    if (weight instanceof byte byteWeight && byteWeight <= 70) {\n        println(\"Weight less than 70\");\n    }\n}\nNote that the feature Implicitly declared classes and instance main method in Java 23 defines java.io.IO with static methods that allows you to import it and use println() to output values to console, rather than using System.out.println() to do so.\nIf you plan to check for more types and conditions, you could use a switch construct with guard, as follows:\nvar weight = 68;\n\nswitch (weight) {\n    case byte b when b <= 70                    -> println(\"byte: less than 70\");\n    case int i  when i <= 700                   -> println(\"int: less than 7000\");\n    case long l when l >= 7_000 && l <= 70_000  -> println(\"long range: 7_000 - 70_000\");\n    case double d                               -> println(\"double\");\n}\n \nSafe conversion between data types \nWhen you use pattern matching with primitive data types, the Java compiler ensures that there is no loss of information. In the following example, the instanceof operator can convert between the double and byte data types when it detects it is safe to do so:\ndouble height = 67;\n\nif (height instanceof byte byteHeight)\n    System.out.println(byteHeight);\nSimilar code wouldn’t execute without an instanceof operator. The following code won’t compile:\ndouble height = 67;\n\nfinal byte convertToByte = height;\nRobust data flow analysis in IntelliJ IDEA\nIntelliJ IDEA offers robust support for primitive types in switch statements, and it also integrates sophisticated data-flow analysis to help developers avoid common issues. As shown in the following example, the data-flow analysis in IntelliJ IDEA can determine that the second case label, that is, case int _ and the rest of the case labels are not reachable (since the code exits from the method if the value of the variable weight is more than 70). IntelliJ IDEA warns you about unreachable code and offers appropriate suggestions:\n\n\n\n\nRecords and primitives data type components\nImagine you define a record Person as follows:\nrecord Person(String name, double weight) {}\nUntil now, you could decompose it to the exact data types. However, with this feature you could use other compatible data types, such as, int, long etc. Here is an example:\nPerson person = new Person(\"Java\", 672);\n\nswitch (person) {\n    case Person(String name, byte weight) -> println(\"byte:\" + weight);\n    case Person(String name, int weight) -> println(\"int:\"  + weight);\n    case Person(String name, double weight) -> println(\"double:\" + weight);\n    case Person(String name, long weight) -> println(\"long:\" + weight);\n    default -> throw new IllegalStateException(\"Unexpected value: \" + person);\n}\nYou could use it with the instanceof operator too, as follows:\n if (person instanceof Person(String name, byte weight)) {\n     System.out.println(\"Instanceof : \" + weight);\n }\nWhat’s next in IntelliJ IDEA to support this feature\nMore support on the primitive data types in Pattern Matching is in works, including the ability to use the postfix operator .switch on all the primitive data types to start writing a switch construct. Support is also in works to convert an existing if-else statement to a switch construct that uses primitive data types – so that it is more easier for you to adopt this new feature.\nMarkdown documentation comments (Production feature)\nUntil now the Java documentation comments were coded using HTML and JavaDoc tags. With this new feature, that is, \n\nDocumentation comments, you’ll also be able to use Markdown to write the JavaDoc comments. This is a production feature in Java 23.\nAre you wondering what is the reason for this change?\nOne of the reasons is that HTML is no longer a popular choice with new developers (even though it was a great choice back when Java was introduced in the late 1990s). It is not simple to write HTML manually. Also, Markdown is easier to write, read, and can be easily transformed to HTML. A lot of developers are using Markdown to document their code, write books, articles, blog posts, generate website pages, and much more. \nLet’s see how you can use Markdown to write Javadoc comments in your source code file and how IntelliJ IDEA can help.\nAn example\nThe Markdown documentation comments start with ///. \nThe choice for using three black slashes is interesting. Jonathan Gibbons, owner of this feature at Oracle, shared that it is not an easy task to change the syntax of features in the Java language. Multiline comments start with /* and end with */. This makes it difficult to include any code in the documentation that might include */. Hence, the Markdown documentation comments start with ///. \nThe old way of writing the documentation comments, that is, HTML and JavaDoc tags are supported too. Jonathan also mentioned that it was not feasible to convert JavaDoc tags to the Markdown equivalent. So, the developers can use a combination of Markdown comments and JavaDoc tags to get the best of both worlds.\nHere’s an example that uses Markdown and Javadoc tags for documenting a method:\n///\n/// **Getting started and having fun learning Java :)**\n///\n/// Prints a pattern of the letter 'P' using the specified character.\n///\n/// @param size the size of the pattern\n/// @param charToPrint the character to use for the pattern\n///\nprivate void printP(int size, char charToPrint) {\n    for (int i = 0; i < size; i++) {\n        for (int j = 0; j < size; j++) {\n            if (j == 0 || (i == 0 || i == size / 2) && j < size - 1 || (j == size - 1 && i <= size / 2)) {\n                System.out.print(charToPrint + \" \");\n            } else {\n                System.out.print(\"  \");\n            }\n        }\n        System.out.println();\n    }\n}\nIntelliJ IDEA can help you switch between your views in the editor and check how the documentation comments would appear to anyone reading the Java documentation comments.\nViewing Java Documentation comments in IntelliJ IDEA\nJonathan Gibbons, owner of the JEP ‘Markdown Documentation Comments’ emphasized the need for all developers to check if the Java documentation comments they added to their codebase are correct. \nIntelliJ IDEA provides a ‘Reader mode’ that enables you to view Java documentation comments in your source code. You can also switch between the Java documentation comments code and how it is viewed using the feature ‘Toggle Rendered View’, as shown in the following gif:\n\n\n\n\nWriting Markdown Documentation Comments in IntelliJ IDEA\nIntelliJ IDEA can detect you are using Markdown to document a method. When you start with /// and hit Enter, it will add /// on the next line too, as shown in the following GIF:\n\n\n\n\nShould you convert your existing documentation comments to use Markdown?\nHere’s a gif showing the documentation of the method hashCode written using markdown in IntelliJ IDEA. Using ‘Toggle Rendered View’ you can easily view the documentation in the reader view, which is much easier to read and understand. \n\n\n\n\nIdeally, I wouldn’t encourage you to convert your existing documentation to using Markdown, unless your developers or API users have major readability issues when they are viewing your (API, libraries, Framework) code base using tools that don’t offer an alternate view like IntelliJ IDEA. \nModule Import Declarations (Preview Feature)\nWith this feature, you can import a module library like the Java API in your class or interface using a single statement, such as, import module java.base, which will import all the packages that are exported by module java.base. \nYou wouldn’t need separate import statements to import packages like java.util, or say, java.io in your class because these are exported by java.base.\nAn example\nThe following code example uses classes from the package java.io and java.util. By including the statement ‘import java.base’, you don’t need to import the java.io and java.util packages individually since they are exported by the module java.base:\nimport module java.base;\npublic class ImportModuleHelloWorld {\n\n    public static void main(String[] args) {\n\n        try {\n            InputStream inputStream = new BufferedInputStream(\n                                            new FileInputStream(\n                                                   new File(\"abc.txt\")));\n        } catch (FileNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n\n        Map<String, String> list = new HashMap<>();\n    }\n}\nHowever, if you delete the import module statement from the top, IntelliJ IDEA will import individual classes and interfaces from the packages java.io and java.util. This is shown in the following GIF:\n\n\n\n\nWhich packages are exported by the module java.base (or other modules)?\nIt is simple to answer this question when you are using IntelliJ IDEA. Click on the module name in the editor or use the relevant shortcut (Go to Declaration or Usages) and you could view the definition of this module to find out all the modules exported by this module. This is shown in the following gif:\n\n\n\n\nImplicit Declared classes and Instance Main methods (Third Preview)\nIntroduced as a preview language feature in Java 21, this feature is in its third preview in Java 23.\nIt is here to change how new Java developers would get started learning Java. It simplifies the initial steps for students when they start learning basics, such as variable assignment, sequence, conditions and iteration. Students no longer need to declare an explicit class to develop their code, or write their main() method using this signature – public static void main(String []). With this feature, classes could be declared implicitly and the main() method can be created with a shorter list of keywords.\nIf you are new to this feature, I’d highly recommend you to check out my detailed blog post: ‘HelloWorld’ and ‘main()’ meet minimalistic on this feature. In this section, I’ll include the additions to this feature in Java 23. \nUsing packages exported by module java.base without importing them explicitly\nBy including just one import statement, that is, import module java.base, at the top of your implicit class, you’ll be able to automatically import the packages exported by java.base. This means that your implicit class will no longer need individual import statements for these classes or packages, as shown in the following gif:\n\n\n\n\nSimplifying code to write to interact with the console\nInteraction with the console – printing messages, or consuming messages is one of the frequently used actions by new Java developers. This has been simplified further in this feature.  \nYour implicitly declared classes can output messages to he console by using methods println() and print() and read String messages using the readln() method without explicitly importing them in your class. All these methods are declared in a new top-level class java.io.IO, which is implicitly imported by implicit classes.\nTake a moment and see and how you need to explicit import them in a regular class, as shown in the following GIF:\n\nThe following gif shows you doesn’t need explicit imports when you use the same previous methods in an implicit class:\n\nFlexible Constructor Bodies (Second Preview)\nThis is the second preview of a feature in JDK 22, previously called “Statements before super()”. Apart from the change in the feature name, this feature has an important change. It is now possible to initialize fields before calling super() or this(). \nThis is useful when a superclass calls a method from its constructor and you want to override this method in a subclass and want to access a field from the subclass inside this method. Previously, the subclass field would not be initialized when the method was called from the superclass constructor. Now it is possible to initialize the field and prevent surprises. Here’s an example code to show this feature:\nabstract class Action {\n    public Action() {\n        System.out.println(\"performing \" + getText());\n    }\n    public abstract String getText();\n}\n\nclass DoubleAction extends Action {\n    private final String text;\n    private DoubleAction(String text) {\n        this.text = text; // this did not compile before Java 23 with preview features enabled.\n        super();\n    }\n\n    @Override public String getText() {\n        return text + text;\n    }\n}\nIf you are new to this feature, don’t miss checking out my detailed blog post on this feature, https://blog.jetbrains.com/idea/2024/02/constructor-makeover-in-java-22/, which talks about the why and how of this feature.\nPreview Features\n\n\nOf the features that I covered in this blog post, ‘Primitive Types in Patterns, instanceof, and switch’, ‘Modeule Import Declarations’, ‘Implicitly Declared Classes and Instance Main Methods’ and ‘Flexible constructor bodies’ are preview language features in Java 23. With Java’s new release cadence of six months, new language features are released as preview features. They may be reintroduced in later Java versions in the second or more preview, with or without changes. Once they are stable enough, they may be added to Java as a standard language feature.\n\n\nPreview language features are complete but not permanent, which essentially means that these features are ready to be used by developers, although their finer details could change in future Java releases depending on developer feedback. Unlike an API, language features can’t be deprecated in the future. So, if you have feedback about any of the preview language features, feel free to share it on the JDK mailing list (free registration required).\n\n\nBecause of how these features work, IntelliJ IDEA is committed to only supporting preview features for the current JDK. Preview language features can change across Java versions, until they are dropped or added as a standard language feature. Code that uses a preview language feature from an older release of the Java SE Platform might not compile or run on a newer release.\nSummary\nIn this blog post, I covered five Java 23 features – Primitive Types in Patterns, instanceof, and switch, Markdown Documentation Comments, Module Import Declarations, Implicitly Declared Classes and Instance Main Methods, and Flexible constructor bodies.\nCheck out these new features to find out how they can help you improve your applications.\nHappy Coding!",
        "dc:creator": "Mala Gupta",
        "content": "New and updated Java language features, core API, and the JVM &#8211; Java 23 packs it all &#8211; for new Java developers to senior developers. IntelliJ IDEA 2024.2 is ready with its support for Java 23 features. Keeping pace with new Java version releases could be difficult &#8211; what changed, why, and how to use [&#8230;]",
        "contentSnippet": "New and updated Java language features, core API, and the JVM – Java 23 packs it all – for new Java developers to senior developers. IntelliJ IDEA 2024.2 is ready with its support for Java 23 features. Keeping pace with new Java version releases could be difficult – what changed, why, and how to use […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=510740",
        "categories": [
          "idea",
          "java",
          "intellijidea",
          "java23",
          "news",
          "whatsnew-2"
        ],
        "isoDate": "2024-09-17T15:30:11.000Z"
      },
      {
        "creator": "Maarten Balliauw",
        "title": "Building a GraphQL Client in .NET with JetBrains Rider and StrawberryShake",
        "link": "https://blog.jetbrains.com/dotnet/2024/09/17/building-a-graphql-client-in-net-with-jetbrains-rider-and-strawberryshake/",
        "pubDate": "Tue, 17 Sep 2024 14:16:24 +0000",
        "content:encodedSnippet": "Many teams are using GraphQL for their API needs, thanks to its powerful query language and flexibility. Unlike traditional REST APIs, GraphQL lets you fetch the data you need in a single request, making your applications more efficient and responsive.\nHowever, it can be daunting getting started creating schemas, writing queries, and integrating GraphQL into your .NET application. Using JetBrains Rider’s GraphQL plugin and the StrawberryShake framework, building an application that consumes a GraphQL API is not that hard. \nIn this blog post, we’ll discuss setting up your environment, defining schemas, generating client code, and seamlessly integrating it all into a sample project. Here we go!\nDownload JetBrains Rider\n                                                    \nWhat is GraphQL?\nBefore we dig into building a sample application, let’s quickly recap GraphQL and its benefits. GraphQL, developed by Facebook in 2012 and open-sourced in 2015, is a query language for APIs and a runtime for executing queries based on a user-defined type system.\nIf you have been a .NET developer for a while, you may have already worked with OData. Conceptually, GraphQL is similar in that it lets you request exactly the data you need from an API, eliminating the typical over-fetching or under-fetching issues you may see in REST APIs. For example, in a typical REST API, you may want to retrieve customer data and either need to make a second request to get their address details or always get the address details in the response, even when they’re not always required..\nUnlike most REST APIs, a GraphQL API exposes a single endpoint you can query for any data you need. The endpoint can define several operations, all of which are self-documenting through a schema. A schema provides a comprehensive and queryable description of the API structure, types, and available operations. The schema also defines types and relationships between them, ensuring clients know exactly what data is available and receive helpful error messages when things go wrong.\nThere are a few concepts to keep in mind throughout this post:\nQueries – These are used to fetch data from the server, similar to GET requests in REST, but much more powerful thanks to their flexibility in fetching nested and related data in a single request.\nSubscriptions – These are used to subscribe to data from the server, and return new data or updates from the server when new data is available.\nMutations – Used to modify data on the server (e.g., creating, updating, deleting records), similar to POST, PUT, or DELETE in REST.\nSchema – defines the types and relationships in your API, specifying what queries and mutations are available. It ensures both the client and the server agree on the data structure and types.\nOne more thing to cover: when implementing a GraphQL API, you have two transport protocols to consider for data exchange: HTTP and WebSockets. HTTP is typically used for traditional query and mutation operations, where clients send HTTP GET and POST requests to the GraphQL server and receive responses containing the requested data. This method is straightforward and works well for most cases where data changes are infrequent or do not need to be immediately reflected on the client.\nOn the other hand, WebSockets are used for real-time applications requiring instant updates, such as live chat, online gaming, or real-time dashboards. GraphQL subscriptions use WebSockets to maintain a persistent connection between the client and the server, enabling the server to push updates to the client as soon as data changes occur. This reduces latency and provides a more responsive user experience compared to polling mechanisms often used with HTTP.\nChoosing between HTTP and WebSockets depends on your application’s specific requirements. For most standard operations, HTTP is sufficient and simpler to implement. However, for real-time data updates, integrating WebSockets with GraphQL subscriptions can significantly enhance your application’s interactivity and responsiveness. Also, both transports can be used in conjunction when building solutions. In this post, we’ll use an HTTP endpoint as our example to work with.\nNote: If you want to learn more about how REST, GraphQL, and gRPC compare, check out this talk from JetBrains .NET Days Online by Poornima Nayar.\nWhat is StrawberryShake?\nNow, let’s talk about StrawberryShake. This open-source .NET library simplifies building GraphQL clients by generating strongly-typed client-side code from your GraphQL schema and queries. This means less boilerplate and more focus on what matters – your application logic.\nIt uses source generators to generate all the client-side code based on the GraphQL schema you define or introspect from a GraphQL API.\nPrerequisites\nLet’s transition into a practical example. First, let’s make sure you have the GraphQL plugin installed in JetBrains Rider. This plugin is necessary for providing syntax highlighting, validation, and auto-completion for GraphQL schemas and queries, streamlining your development process.\nOpen JetBrains Rider and bring up the Settings/Preferences menu. Go to Plugins in the left-hand sidebar, and search for “GraphQL” in the Marketplace tab. Click Install to add the plugin to your Rider setup. You may need to restart Rider to activate the plugin.\n\n\n\n\nWe’re ready to jump into creating our project and setting everything up in JetBrains Rider. Let’s get to work!\nCreating the project in Rider\nLet’s look at what we’ll build first. Since we’re focusing on building a GraphQL client, we’ll need an API to interact with. We’re in luck, because there are plenty of GraphQL APIs available. In this blog post, we’ll use Trevor Blades’ Countries GraphQL API, which provides data about countries around the world. The sample application will be a page that shows information about the countries included in that API, and a way to get more details for each.\nThe countries API endpoint is available at https://countries.trevorblades.com/, which exposes a playground where you can test your queries against it.\nNote: Michael Staib, founder of ChilliCream (the company that also builds the StrawberryShake project we use in this blog post) was a guest in one of our livestreams to talk about building a GraphQL server with ASP.NET Core and HotChocolate.\nIn JetBrains Rider, create a new Web App project using the Razor Pages template. Give it a name, such as the very original “Countries” I used here:\n\n\n\n\nWhile not required, for this sample, I removed some of the default CSS in the project and included PicoCSS – a great small CSS framework that makes any web page look nice. Here’s my updated _Layout.cshtml:\n<!doctype html>\n<html lang=\"en\">\n<head>\n   <meta charset=\"utf-8\">\n   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n   <meta name=\"color-scheme\" content=\"light dark\">\n   <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@@picocss/pico@2/css/pico.min.css\" />\n   <link rel=\"stylesheet\" href=\"~/css/site.css\" asp-append-version=\"true\" />\n   <title>@ViewData[\"Title\"] - Countries</title>\n</head>\n<body>\n<main class=\"container\">\n   <header>\n       <nav>\n           <ul>\n               <li><strong>Countries</strong></li>\n           </ul>\n           <ul>\n               <li><a href=\"/\">Index</a></li>\n           </ul>\n       </nav>\n   </header>\n   @RenderBody()\n</main>\n\n\n<script src=\"~/js/site.js\" asp-append-version=\"true\"></script>\n\n\n@await RenderSectionAsync(\"Scripts\", required: false)\n<script type=\"module\" defer>\n import { polyfillCountryFlagEmojis } from \"https://cdn.skypack.dev/country-flag-emoji-polyfill\";\n polyfillCountryFlagEmojis();\n</script>\n</body>\n</html>\nYou can also clone a copy of this project from GitHub, and explore individual commits if you want to follow along.\nWorking with GraphQL in Rider\nTime for GraphQL! In your C# project, use the context menu to add a new GraphQL Config file and paste the following contents into it:\nschema: schema.graphql\nextensions:\n endpoints:\n   production:\n     url: https://countries.trevorblades.com/graphql/\n     headers:\n       Authorization: Bearer ${TOKEN}\ndocuments: '**/*.graphql'\nThis graphql.config.yml file will be used by Rider to access the schema for the countries API, and generate queries that can be executed inside the IDE. This configuration file also defines one or more endpoints, and potential headers required to access an endpoint, such as authorization headers. The countries API doesn’t require authentication, but we’ll see in a second why I added it here anyways.\nIn the left-hand gutter, right next to the production endpoint, you’ll see a Run icon:\n\n\n\n\nClick it to run an introspection of the remote schema. When you do, you’ll see a popup that lets you enter an authorization token. You can skip it, but this is why I added the ${TOKEN} placeholder earlier: to show you how to add variables into the GraphQL configuration.\nWhen finished, a schema.graphql file is automatically added to your project, listing all the types, fields, and operations exposed by the countries API. Note the toolbar at the top of the editor: you can switch to a different endpoint if you have e.g. a staging and production GraphQL API to work with, and there’s a Refresh button to re-run schema introspection and update the types, fields, and operations in the API.\n\n\n\n\nThe toolbar also contains a Run button, which is not very useful yet. Let’s change that! In our application, I’d like to show a list of all countries with their country code, name, and flag image. Add a new file called listcountries.graphql, and paste the following query into it:\nquery ListCountries {\n   countries {\n       code\n       name\n       emoji\n   }\n}\nThis snippet defines a GraphQL query (named “ListCountries”) that retrieves information from a collection on the API endpoint called “countries”. This query returns an array of Country elements, and each contains the code, name, and emoji. Note that you can Cmd+Click or Ctrl+Click on the name to navigate to the schema’s definition of available data and collections.\nNow is a good time to try the Run button in the editor. You’ll see Rider opens a tool window showing the query result:\n\n\n\n\nWhile we’re creating queries in Rider, let’s add one more file: getcountry.graphql, and paste the following contents into it:\nuery GetCountry($countryCode: ID!) {\n   country(code: $countryCode) {\n       code\n       name\n       emoji\n       capital\n       currency\n       languages {\n           code\n           name\n       }\n       ...Continent\n   }\n}\n\n\nfragment Continent on Country {\n   continent {\n       code\n       name\n   }\n}\nThis query will be used in our sample application to display details for a specific country. The query is named GetCountry, and requires a parameter $countryCode. It then requests data from the GraphQL API, requesting a country (by $countryCode) and returning various fields of information from it.\nAnother interesting bit in this query is that we’re not only fetching the country data but also its related continent. If you do not need that data, you can keep it out of the query and get a smaller response payload size. You will also see the fields queried for a continent are defined as a fragment. This is a way to make your GraphQL queries a bit more maintainable, as including the Continent on any query that works with Country now only means adding ...Continent and not the complete list of fields. This is not a requirement, and you can also write the entire query like this:\nquery GetCountry($countryCode: ID!) {\n   country(code: $countryCode) {\n       code\n       name\n       emoji\n       capital\n       currency\n       languages {\n           code\n           name\n       }\n       continent {\n           code\n           name\n       }\n   }\n}\nWith those two queries defined, let’s continue building our ASP.NET Core application.\nAdding StrawberryShake GraphQL source generation\nTo start generating the C# client for the countries GraphQL schema we just queried, you will need to add a NuGet package reference to StrawberryShake.Server. While named “server”, this package includes additional dependencies. to get you started with creating a GraphQL client.\nStrawberryShake also has a command line tool that can help set up code generation, but we’re not going to use that in this blog post.\nNext, add a file named .graphqlrc.json next to your graphql.config.yml. Paste the following contents into it:\n{\n \"schema\": \"schema.graphql\",\n \"documents\": \"**/*.graphql\",\n \"extensions\": {\n   \"strawberryShake\": {\n     \"name\": \"CountriesClient\",\n     \"namespace\": \"Countries.GraphQL\",\n     \"url\": \"https://countries.trevorblades.com/graphql/\",\n     \"dependencyInjection\": true,\n     \"strictSchemaValidation\": true,\n     \"emitGeneratedCode\": true,\n     \"records\": {\n       \"inputs\": false,\n       \"entities\": false\n     },\n     \"transportProfiles\": [\n       {\n         \"default\": \"Http\",\n         \"subscription\": \"WebSocket\"\n       }\n     ]\n   }\n }\n}\nThis file looks similar to the graphql.config.yml file created earlier, but this time, it configures how StrawberryShake should generate C# code from the GraphQL API. It includes the API endpoint URL, the name of the generated client class (CountriesClient), its namespace, and whether to generate convenience extension methods to register the GraphQL client with ASP.NET Core’s service collection.\nIf you now build your solution, you should see a new type ICountriesClient you can work with, as well as an AddCountriesClient() extension method on IServiceCollection. \nIn Program.cs, you can use this extension method to wire up the generated GraphQL client:\n// ...\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\nbuilder.Services.AddRazorPages();\nbuilder.Services.AddHttpClient();\nbuilder.Services\n   .AddCountriesClient()\n   .ConfigureHttpClient(\n       configureClient: client =>\n       {\n           client.BaseAddress = new Uri(\"https://countries.trevorblades.com/graphql/\");\n           // client.DefaultRequestHeaders.Authorization = AuthenticationHeaderValue.Parse($\"Bearer {Constants.ApiKey}\");\n       });\n\nvar app = builder.Build();\n\n// ...\nThe call to AddCountriesClient() will register all necessary services with ASP.NET Core. You will also need a call to ConfigureApiClient() to configure the GraphQL API endpoint URL. I left a comment in the code here showing how you would add bearer token authorization headers for authentication.\nWe’re ready to consume the GraphQL queries we defined earlier! In Index.cshtml.cs, add a constructor parameter that accepts an ICountriesClient and assign it to a field, or use a primary constructor.\npublic class IndexModel(ICountriesClient countriesClient) : PageModel\n{\n   // ...\n}\nIn the OnGet method, you can query the GraphQL endpoint and retrieve a list of countries. Here’s the full code for the IndexModel class that is used to render the page:\npublic class IndexModel(ICountriesClient countriesClient) : PageModel\n{\n   public IReadOnlyCollection<IListCountries_Countries> Countries { get; set; }\n\n   public async Task OnGet()\n   {\n       var countries = await countriesClient.ListCountries.ExecuteAsync();\n       if (countries.IsErrorResult())\n       {\n           // ...\n       }\n\n       Countries = countries.Data?.Countries ?? new List<IListCountries_Countries>(0);\n   }\n}\nYou’ll notice the countriesClient has a ListCountries property on which you can call ExecuteAsync() to fetch data. StrawberryShake generates this method, and the method may accept parameters as well. If you try calling the GetCountry method (which is generated based on the GetCountry query we defined in the previous section of this post), you’ll see the countryCode parameter can be passed in:\n\n\n\n\nThe ExecuteAsync() method always returns an object that contains information about the response. If an error is returned, you can check for it and log or otherwise handle the exception. If the response is successful, the Data property will contain an object representing the object defined in the *.graphql file earlier. In this example application, you can pass the data on to the Razor view.\nIn the Index.cshtml view, you can now consume the list of countries, and display each in a table:\n@page\n@model IndexModel\n@{\n   ViewData[\"Title\"] = \"Countries\";\n}\n\n\n<h1>Countries</h1>\n<table>\n   <thead>\n   <tr>\n       <th scope=\"col\">Country code</th>\n       <th scope=\"col\">Name</th>\n       <th scope=\"col\">Emoji</th>\n   </tr>\n   </thead>\n   <tbody>\n   @foreach (var country in Model.Countries)\n   {\n       <tr>\n           <td>@country.Code</td>\n           <td><a asp-page=\"Country\" asp-route-countryCode=\"@country.Code\">@country.Name</a></td>\n           <td>@country.Emoji</td>\n       </tr>\n   }\n   </tbody>\n</table>\nTry running it in your browser, and you should see a similar page to this:\n\n\n\n\nCongratulations! You have successfully built an application that fetches data from a GraphQL API in C#. As a next step, try implementing the Details.cshtml page yourself (or check out the GitHub repository for this sample application to look at implementation details).\nConclusion\nIn this post, we’ve covered how to build a GraphQL client in .NET using JetBrains Rider and StrawberryShake. We’ve covered quite a bit of ground – from setting up your development environment and understanding the fundamentals of GraphQL, to defining schemas and queries, and finally integrating everything into a sample project.\nUsing JetBrains Rider’s GraphQL plugin and the StrawberryShake framework, we’ve seen how to create strongly-typed GraphQL clients and how to work with them in your C# projects.\nI encourage you to try this out on your projects. Experiment with different schemas and queries, and see how you can integrate GraphQL to make your applications more efficient and responsive. JetBrains Rider, with its rich set of features and plugins, is a fantastic IDE for .NET development, and combined with StrawberryShake, you have a powerful GraphQL toolkit.\nFeel free to share your experiences and any cool projects you build. And if you run into any issues or have questions, let us know in the comments. Happy coding!",
        "dc:creator": "Maarten Balliauw",
        "content": "Many teams are using GraphQL for their API needs, thanks to its powerful query language and flexibility. Unlike traditional REST APIs, GraphQL lets you fetch the data you need in a single request, making your applications more efficient and responsive. However, it can be daunting getting started creating schemas, writing queries, and integrating GraphQL into [&#8230;]",
        "contentSnippet": "Many teams are using GraphQL for their API needs, thanks to its powerful query language and flexibility. Unlike traditional REST APIs, GraphQL lets you fetch the data you need in a single request, making your applications more efficient and responsive. However, it can be daunting getting started creating schemas, writing queries, and integrating GraphQL into […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=506779",
        "categories": [
          "net-tools",
          "how-tos",
          "graphql",
          "rider"
        ],
        "isoDate": "2024-09-17T14:16:24.000Z"
      },
      {
        "creator": "Anna Zykova",
        "title": "The RubyMine 2024.3 Early Access Program Is Open!",
        "link": "https://blog.jetbrains.com/ruby/2024/09/the-rubymine-2024-3-early-access-program-is-open/",
        "pubDate": "Tue, 17 Sep 2024 11:13:38 +0000",
        "content:encodedSnippet": "Hello everyone!\nWe’re starting the RubyMine 2024.3 Early Access Program today. In this blog post, we’ll inform you about the upcoming features and updates in this release cycle.\n\n\n\n\nWhat’s coming in RubyMine 2024.3?\nAI Assistant\nFor RubyMine 2024.3, we’re working on several Ruby-specific AI features, focusing on context improvements for AI-powered unit test generation, explanation of exceptions in the test environment, and a new AI model for multiline code completion.\nSupport for Ruby 3.4\nWith the upcoming release of RubyMine 2024.3, you can look forward to Ruby code insight improvements to accommodate Ruby 3.4 features.\nRemote development experience\nAnother important focus of our work is to enhance the typing and editing experience when using remote development. We’re reducing delays in typing and response time on the client side.\nBuilt-in integration with the RBS Collection\nThe feature provides built-in integration with the RBS Collection, a community-managed collection of RBS files for gems that do not include signatures.\nEven if you don’t use RBS in your project, you can still benefit from the type signatures included in the RBS Collection, with no additional effort required. RubyMine will automatically download and manage the type signatures for the project dependencies.\nThis feature is already available in the first RubyMine 2024.3 EAP build.\nImprovements for code completion in consoles\nWe’ve added new options to control the preselection of the first completion suggestion when using consoles or evaluating expressions while debugging. You can already try these options in the first RubyMine 2024.3 EAP build.\nGrazie bundled in RubyMine\nGrazie is an intelligent spelling and grammar checker for any text you write in the IDE. We plan to make the Grazie plugin available in RubyMine out of the box. \nJoin the Early Access Program\nYou can download the latest EAP build from our website or via the Toolbox App. The full list of closed tickets for this EAP build is available in the release notes.\nWe encourage you to share your thoughts in the comments below and to create and vote for new feature requests in our issue tracker.\nHappy developing!\nThe RubyMine team",
        "dc:creator": "Anna Zykova",
        "content": "Hello everyone! We’re starting the RubyMine 2024.3 Early Access Program today. In this blog post, we’ll inform you about the upcoming features and updates in this release cycle. What’s coming in RubyMine 2024.3? AI Assistant For RubyMine 2024.3, we’re working on several Ruby-specific AI features, focusing on context improvements for AI-powered unit test generation, explanation [&#8230;]",
        "contentSnippet": "Hello everyone! We’re starting the RubyMine 2024.3 Early Access Program today. In this blog post, we’ll inform you about the upcoming features and updates in this release cycle. What’s coming in RubyMine 2024.3? AI Assistant For RubyMine 2024.3, we’re working on several Ruby-specific AI features, focusing on context improvements for AI-powered unit test generation, explanation […]",
        "guid": "https://blog.jetbrains.com/?post_type=ruby&p=510482",
        "categories": [
          "eap",
          "rubymine",
          "2024-3-eap",
          "early-access-program",
          "rubymine-2024-3"
        ],
        "isoDate": "2024-09-17T11:13:38.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "article New updates to Planner comment notifications and settings in Planner Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Nayana Srikanth",
        "title": "Multi-Project Launch Configuration",
        "link": "https://devblogs.microsoft.com/visualstudio/multi-project-launch-configuration/",
        "pubDate": "Wed, 18 Sep 2024 16:08:38 +0000",
        "content:encodedSnippet": "Are you tired of the hassle of manually configuring your development environment every time you want to launch multiple projects? We’ve heard your feedback and are thrilled to announce a feature in Visual Studio that simplifies your workflow.\nThe Multi-Project Launch Configuration feature in Visual Studio allows developers to set up and save profiles for launching specific projects within a multi-project solution in predefined states for debugging. This simplifies the process of working with complex solutions, improves debugging efficiency, and enables easy sharing of configurations among team members.\n\nEnabling Multi Launch Profile:\nThe Multi-Project Launch Configuration is available in version 17.11. Enable the feature flag with the instructions below to start using it.\nIn Visual Studio, navigate to Tools > Options > Preview Features and toggle the checkbox for “Enable Multi Launch Profiles” to activate the feature.\n\nCreating Multi Launch Profile:\nOpen your Visual Studio solution that contains multiple projects.\nGo to the “Solution Explorer” on the right side of the Visual Studio window.\nRight-click on your solution (the top-level item in the Solution Explorer) and select “Configure Startup Projects…”.\n\nIn the Solution Property Pages, click on the “Common Properties” tab, and select “Configure Startup Projects”.\n\nIn the “Configure Startup Projects” section, choose the “Multiple startup projects” radio button.\nBelow the radio button, you’ll see a list of all the projects in your solution.\nSet the action for each project to either “Start,” “Start without debugging,” or “None,” and select debug target depending on your requirements.\n\nEnabling the “Share Profile” checkbox allows you to share the profile with the team by checking it into the config file in the Source Control repo.\nLaunch profiles are saved to a JSON file in the same directory as the solution. The “Share Profile” checkbox determines whether the profile is saved to a user-specific file (unchecked) or to a file intended for source control tracking, such as in Git (checked).\n\nOnce you’ve configured the startup action for each project, click the “OK” or “Apply” button to save the profile.\nThe created launch profile appears in the toolbar dropdown list, allowing you to select the profile you want to debug.\n\nEngage with us!\nWe would love to get your feedback on Multi Project Config, so please give it a try and let us know what you think! You can share any feedback via Developer Community to help us make Visual Studio better for you!\nThe post Multi-Project Launch Configuration appeared first on Visual Studio Blog.",
        "dc:creator": "Nayana Srikanth",
        "content": "<p>Are you tired of the hassle of manually configuring your development environment every time you want to launch multiple projects? We&#8217;ve heard your feedback and are thrilled to announce a feature in Visual Studio that simplifies your workflow. The Multi-Project Launch Configuration feature in Visual Studio allows developers to set up and save profiles for [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/multi-project-launch-configuration/\">Multi-Project Launch Configuration</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Are you tired of the hassle of manually configuring your development environment every time you want to launch multiple projects? We’ve heard your feedback and are thrilled to announce a feature in Visual Studio that simplifies your workflow. The Multi-Project Launch Configuration feature in Visual Studio allows developers to set up and save profiles for […]\nThe post Multi-Project Launch Configuration appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250651",
        "categories": [
          "Productivity",
          "Visual Studio"
        ],
        "isoDate": "2024-09-18T16:08:38.000Z"
      },
      {
        "creator": "Mark Downie",
        "title": "How to run .NET apps natively on Arm64 devices",
        "link": "https://devblogs.microsoft.com/visualstudio/how-to-run-net-apps-natively-on-arm64-devices/",
        "pubDate": "Tue, 17 Sep 2024 10:00:19 +0000",
        "content:encodedSnippet": "Are you developing .NET applications for Arm-based processors? Do you want to take advantage of the performance and power efficiency of running your apps natively on Arm64 devices? If so, you’ll be happy to hear that Visual Studio 2022 17.11 has a new feature that makes it easier than ever to do just that.\n\nVisual Studio 2022 natively supports building and debugging Arm64 apps on Arm-based processors. However, if you build your app with the AnyCPU setting, which is the default for most .NET projects, your app will run on an Arm64 device using x64 emulation. While this may seem counterintuitive, this approach allowed many apps with x64 dependencies to work reliably under emulation without requiring additional build or dependency changes.\nUnfortunately, under these conditions, it means your app won’t benefit from the native capabilities of the Arm64 CPU and may suffer from reduced performance and increased battery consumption.\nTo solve this problem, the Windows 24H2 update introduces a new setting for your app manifest files. This setting allows you to specify a list of supported architectures (currently amd64 or arm64) for your app, indicating that it should run natively on those platforms. For example, if you include arm64 in the list, your app will run using the Arm64 CLR on Arm64 devices when supported, even if it was built with the AnyCPU setting.\nHow to use the setting in Visual Studio 2022\nTo use the new setting in Visual Studio 2022, you need to do the following steps:\nMake sure you have the Windows 24H2 update installed on your development machine and your target device.\nOpen your .NET project in Visual Studio 2022 and right-click on your project in Solution Explorer and select Properties.\n In the Build area confirm that the AnyCPU configuration is enabled and that the Prefer 32-bit option is unselected.\nSelect the new Prefer native ARM64 option.\nSave and rebuild your project.\nDeploy your app to your Arm64 device and run it. You can also debug it using Visual Studio 2022, which will automatically detect the correct architecture and launch the debugger accordingly.\n\nEnjoy the benefits of native Arm64 apps\nBy using the new setting in Visual Studio 2022, you can easily run and debug your .NET apps natively on Arm64 devices, without changing your code or your build configuration. This will help you improve the performance, reliability, and battery life of your apps, and give your users a better experience.\nWe hope you enjoy this new feature and find it useful for your development scenarios. As always, we appreciate your> feedback and suggestions, which help us make Visual Studio better for you. Please let us know what you think by leaving a comment below, or by using the Report a Problem tool in Visual Studio. Thank you for choosing Visual Studio 2022!\nThe post How to run .NET apps natively on Arm64 devices appeared first on Visual Studio Blog.",
        "dc:creator": "Mark Downie",
        "content": "<p>Are you developing .NET applications for Arm-based processors? Do you want to take advantage of the performance and power efficiency of running your apps natively on Arm64 devices? If so, you&#8217;ll be happy to hear that Visual Studio 2022 17.11 has a new feature that makes it easier than ever to do just that. Visual [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/how-to-run-net-apps-natively-on-arm64-devices/\">How to run .NET apps natively on Arm64 devices</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Are you developing .NET applications for Arm-based processors? Do you want to take advantage of the performance and power efficiency of running your apps natively on Arm64 devices? If so, you’ll be happy to hear that Visual Studio 2022 17.11 has a new feature that makes it easier than ever to do just that. Visual […]\nThe post How to run .NET apps natively on Arm64 devices appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250623",
        "categories": [
          "performance",
          ".NET",
          "32-bit",
          "Arm64"
        ],
        "isoDate": "2024-09-17T10:00:19.000Z"
      },
      {
        "creator": "Peter Spada",
        "title": "Understanding the behavior of the XAML Designer with abstract base classes",
        "link": "https://devblogs.microsoft.com/visualstudio/understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes/",
        "pubDate": "Mon, 16 Sep 2024 13:49:39 +0000",
        "content:encodedSnippet": "Visual Studio 2022 introduced a new XAML designer for building WPF apps, with a goal of increasing the performance and reliability of the designer. The new designer can quickly open a XAML file by using WPF’s built-in parser and display. This new design has a nuanced behavior when the root XAML element derives from an abstract base class. This article helps with understanding implications for using an abstract base class and describes workarounds which can ensure a smooth design experience.\nThe Challenge with Abstract Base Classes\nWhen working with the XAML Designer, the base class of the root element is instantiated for display purposes. This allows developers to visualize and interact with their UI components directly within the designer, while the custom control is being developed. In the example screenshot below, the base class of the root element is UserControl. The custom control’s derived class is specified in the x:Class attribute as TestControl. Therefore, an instance of UserControl is instantiated for display in design view:\n\nHowever, an issue arises when the root element’s base class is abstract. Since abstract classes cannot be instantiated, the XAML Designer will find the first non-abstract base class and instantiate that instead. Most of the time, this will work well, but there are cases where this will break design view, possibly showing an error message. One case where design view breaks is when the abstract base class defines a property that is crucial for display, such as the Content property.\nIllustrative Example\nImagine you have an abstract base class as follows:\n\nIf this abstract class is the base class for your custom control, the XAML Designer will not be able to instantiate AbstractControlBase and will instead instantiate the Control class. The reason is that Control is the first non-abstract base class. This leads to any reference to AbstractControlBase being broken in design view. In the following screenshot, it shows how a ControlTemplate cannot be applied to AbstractControlBase, and the Content property cannot be used to display anything in design view:\n\nEffective Workarounds\nTo mitigate this issue, there are practical workarounds that ensure that the XAML Designer continues to function seamlessly.\n1. Move Display Properties to a Non-Abstract Base Class\nOne approach is to refactor your code by transferring the properties critical to design view to another level of base class that is not abstract. This adjustment allows the XAML Designer to instantiate and render the necessary components. The following code shows how the Content property was moved from AbstractControlBase to a new ControlBase class:\n\nIn the XAML file, the base class stays as AbstractControlBase, but the control template now applies to the concrete base class ControlBase:\n\n2. Utilize Standard Controls\nAnother strategy is to derive the abstract class from WPF’s ContentControl, which already provides common properties that are used for display in design view, such as the Content property. This method circumvents the instantiation issue associated with abstract classes, allowing your UI elements to be properly displayed while designing your XAML content.\n\n\nConclusion\nUnderstanding the implications of using abstract base classes and implementing effective workarounds can significantly enhance your design workflow. By moving properties to non-abstract base classes or utilizing standard controls, you can ensure that your UI components are rendered accurately, allowing you to harness the full potential of the XAML Designer.\nIf you have feedback about the XAML Designer, please let us know by using the Visual Studio Feedback Tool. We’re eager to hear what you think!\nThe post Understanding the behavior of the XAML Designer with abstract base classes appeared first on Visual Studio Blog.",
        "dc:creator": "Peter Spada",
        "content": "<p>Visual Studio 2022 introduced a new XAML designer for building WPF apps, with a goal of increasing the performance and reliability of the designer. The new designer can quickly open a XAML file by using WPF’s built-in parser and display. This new design has a nuanced behavior when the root XAML element derives from an [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes/\">Understanding the behavior of the XAML Designer with abstract base classes</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 2022 introduced a new XAML designer for building WPF apps, with a goal of increasing the performance and reliability of the designer. The new designer can quickly open a XAML file by using WPF’s built-in parser and display. This new design has a nuanced behavior when the root XAML element derives from an […]\nThe post Understanding the behavior of the XAML Designer with abstract base classes appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250610",
        "categories": [
          "Visual Studio",
          "WPF",
          "XAML"
        ],
        "isoDate": "2024-09-16T13:49:39.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "\r\n                            Brooks McMillin,Adrian Wood,Mark Breitenbach,Aditya Damani\r\n            \t\t\t",
        "title": "How we use Lakera Guard to secure our LLMs",
        "link": "https://dropbox.tech/security/how-we-use-lakera-guard-to-secure-our-llms",
        "pubDate": "Wed, 18 Sep 2024 07:00:00 -0700",
        "content:encodedSnippet": "From search to organization, rapid advancements in artificial intelligence (AI) have made it easier for Dropbox users to discover and interact with their files. However, these advancements can also introduce new security challenges. Large Language Models (LLMs), integral to some of our most recent intelligent features, are also susceptible to various threats—from data breaches and adversarial attacks to exploitation by malicious actors. While hundreds of millions of users already trust Dropbox to protect their content, ensuring the security and integrity of these models is essential for maintaining that trust.\nLast year we evaluated several security solutions to help safeguard our LLM-powered applications and ultimately chose Lakera Guard. With its robust capabilities, Lakera Guard helps us secure and protect user data, and—as outlined in our AI principles—uphold the reliability and trustworthiness of our intelligent features.\nAddressing these challenges requires a multifaceted approach, incorporating stringent security protocols, continuous monitoring, and proactive risk management strategies. In this story, we’ll share insights into our approach to securing our LLMs, the criteria we used to evaluate potential solutions, and the key benefits of implementing Lakera's technology.\n\r\n\r\n    \n What we were looking for\n\r\n\r\n\n\nLLM security is comprised of many parts. Common problems include reliability, consistency, alignment, and adversarial attacks. However, the scope of the problem we were trying to solve was more customer-centric—specifically, using LLMs to chat about, summarize, transcribe, and retrieve information, in addition to agent/assistant use cases. These kinds of untrusted user inputs could result in moderation issues or prompt injection—a method sometimes used to manipulate models—which creates a lot of headaches, including undesirable model outputs.\nWe considered a variety of open source, in-house, and proprietary options before narrowing our criteria to either open source or commercial tools. Whatever we chose, we decided the following requirements were mandatory:\nWe couldn’t call out to a third party. The solution had to be deployable in-house on our existing infrastructure.\nLow latency. Dropbox is committed to maximizing performance for users across all of its products. We couldn’t add latency to LLM-powered features any more than absolutely necessary, so we determined upper latency numbers with the product teams.\nLatency for a given context length is also an important sub-problem here. Many options perform well on context lengths of 4,000. Excellent support for long context lengths—the ability for models to process greater amounts of information—was critical, as many customer use cases routinely exceed this number.\nConfidence scores. API integrations that not only allowed extensive control over the categories of blocking, but also the sensitivity, were key (eg., separating the danger classification jailbreak based on confidence scores in order to ensure we could meet the diverse needs of our product teams).\nFuture intelligence and continuous improvement. Since LLM security is a fast evolving space, we wanted a solution that could also give us actionable insights into attacks and payloads in a rapidly shifting environment.\nIn fact, given the rapidly shifting environment, our top priority was selecting a solution that gave us enough of a foothold to observe and reorient as needed.\n\r\n\r\n    \n How we tested\n\r\n\r\n\n\nOnce we had a short list of open-source and commercial tools that met our criteria, we set up each tool internally for evaluation. For our test suite, we used Garak, an open-source LLM vulnerability scanner customized to run Dropbox-specific security tests. With Garak, we could evaluate the security coverage of each of the potential solutions. This allowed us to conduct a range of tests involving prompt injection, jailbreak, and other security assessments developed by Dropbox. \nWe then tested each solution directly against a range of LLMs already in use or under evaluation by our product teams. This enabled us to establish a baseline of each model’s vulnerability. For example, if a security tool blocked 90% of malicious prompts, but the LLM had already mitigated 85% of these vulnerabilities, we measured a net improvement of only 5%.\nFinally, we needed a tool that did not add excessive latency to LLM calls and respected the privacy of customer data (e.g., did not store prompt content or send it outside the Dropbox network). For this, we measured the response time of each security test and also monitored network requests and file changes to detect any potential breaches of user data.\nAfter extensive testing, Lakera Guard emerged as the product meeting all our requirements, offering both the lowest latency and highest security coverage.\n\r\n\r\n    \n How we integrated Lakera Guard\n\r\n\r\n\n\nLakera provides a Docker container that we run as an internal service at Dropbox. This means Lakera Guard is just an RPC call away from any LLM pipeline. Conceptually, the LLM security architecture at Dropbox is designed using LangChain as shown in the figure below. \n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/lakera/lakera-diagram1.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/lakera/lakera-diagram1.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1446\"\r\n             data-aem-asset-id=\"5b8c124b-6ee0-4211-98be-e604d783ae92:lakera-diagram1.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/lakera/lakera-diagram1.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/lakera/lakera-diagram1.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1446\"\r\n             data-aem-asset-id=\"5b8c124b-6ee0-4211-98be-e604d783ae92:lakera-diagram1.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nA high-level representation of the internal AI/ML security infrastructure at Dropbox\n\r\n        \r\n    \r\n\nHere, a textual LLM prompt is directed through one or more prompt security chains before hitting the model. We have a security chain that makes Lakera Guard security API endpoint requests to our internally-hosted Docker container, which responds with confidence scores for prompt injection and jailbreak attacks. Dropbox services can then action on the returned Lakera Guard prompt security categories as appropriate for the application. \nPrompts that are deemed to be safe are then passed to the LLM—either a third-party model, like GPT-4, or an internally hosted open-source model, like LLaMA 3, depending on the use case—which produces a textual response. The LLM’s response is then passed through our content moderation chains, which analyze the text for potentially harmful topics. The moderation chain calls out to Lakera’s content moderation API endpoint to identify harassing or explicit content that the Dropbox feature or service can withhold from the user as configured.\nIntegrating Lakera Guard into our Dropbox infrastructure was a gradual process. We started with one product directly calling the Lakera-provided Docker container. Eventually, we created a custom Dropbox service that can automatically scale up more containers as needed—and can be called via the LLM security layer we built as part of Dropbox’s central machine learning libraries.\n\r\n\r\n    \n What we learned, and what’s next\n\r\n\r\n\n\nThroughout this process, several product teams had concerns about latency—especially since many LLM use cases at Dropbox have prompts of more than 8,000 characters. We worked closely with Lakera to minimize added latency as much as possible, and our current average latency is now a 7x improvement for prompts with more than 8,000 characters.\nOur belief in Lakera is so strong that we've invested in its continued success and have collaborated with its teams on numerous improvements to Lakera Guard itself. We found novel ways to cause LLM hallucination and collaborated with Lakera to increase efficacy for malicious prompt detection. We also shared internal research—such as our work on repeated token attacks—as well as some interesting false positives.\nFinally, by working closely with the machine learning and product teams, we were able to help them meet their requirements while also achieving our security goals. For example, some of the false positives we encountered were a result of poor user input sanitization—or the process of filtering any potentially harmful or unwanted characters—which we were able to pass back to the product teams for improvement. Lakera has also been very interested in understanding our product flows to ensure they’re delivering a product that meets us where we are. \nWe’re currently planning to expand our Lakera Guard integration to all products using LLMs at Dropbox. This will involve tuning the detections for each use case and determining other potential causes of false positives or high latencies that can occur with some of the different data structures currently in use.\nOne of our core commitments at Dropbox is being worthy of our customers' trust. Partnering with Lakera to protect our users and their data is a testament to this promise. There are also many more interesting problems yet to be solved, and we plan to share more about how our approach to LLM security continues to evolve in future posts.\n~ ~ ~\nIf building innovative products, experiences, and infrastructure excites you, come build the future with us! Visit dropbox.com/jobs to see our open roles, and follow @LifeInsideDropbox on Instagram and Facebook to see what it's like to create a more enlightened way of working.",
        "dc:creator": "\r\n                            Brooks McMillin,Adrian Wood,Mark Breitenbach,Aditya Damani\r\n            \t\t\t",
        "content": "null",
        "contentSnippet": "null",
        "guid": "https://dropbox.tech/security/how-we-use-lakera-guard-to-secure-our-llms",
        "categories": [
          "LLM",
          "AI",
          "Security",
          "Lakera"
        ],
        "isoDate": "2024-09-18T14:00:00.000Z"
      },
      {
        "creator": "\r\n                            Brooks McMillin,Adrian Wood,Mark Breitenbach,Aditya Damani,Dropbox Developer Support Team\r\n            \t\t\t",
        "title": "Customizing scopes in the OAuth app authorization flow",
        "link": "https://dropbox.tech/developers/customizing-scopes-in-oauth-flow",
        "pubDate": "Fri, 13 Sep 2024 07:30:00 -0700",
        "content:encodedSnippet": "As you may know, the Dropbox API authorization system uses \"scopes\" for granular control over what functionality an app can access. This allows app developers to select what API functionality their apps can use, so that users can feel more comfortable granting apps access to their accounts. This can help give users peace of mind that the apps will only be able to perform the operations that the apps actually need. It may not be obvious though that you can further customize exactly which scopes your app requests and when. Let's look at the options for configuring and customizing scopes in more detail.\n\nFirst, it's important to note that the scopes you enable on the Permissions tab of the app's page on the App Console define the maximum, as well as the default, set of scopes that the app can request. For example, let's look at a user-linked app. By default, it has the account_info.read scope, which is required to be registered for user-linked apps. We'll also enable files.content.read and files.metadata.read  scopes for this example.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/scopes-config.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/scopes-config.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"A screenshot showing the app’s scopes configuration.\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1075\"\r\n             data-sly-attribute.height=\"654\"\r\n             data-aem-asset-id=\"01375274-d59e-4ee8-8836-8b6157c80c45:scopes-config.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/scopes-config.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/scopes-config.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1075\"\r\n             data-sly-attribute.height=\"654\"\r\n             data-aem-asset-id=\"01375274-d59e-4ee8-8836-8b6157c80c45:scopes-config.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nA screenshot showing the app’s scopes configuration.\n\r\n        \r\n    \r\n\nWhen we send a user to the app authorization page, by default, they'll be prompted to authorize the app with all of those scopes:\nhttps://www.dropbox.com/oauth2/authorize?client_id=&response_type=code\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-default.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-default.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"A screenshot of the app authorization page defaulting to the scopes registered to the app.\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"776\"\r\n             data-sly-attribute.height=\"455\"\r\n             data-aem-asset-id=\"c7a5be91-16a3-4004-b721-c4be66d38a2f:authorize-default.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-default.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-default.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"776\"\r\n             data-sly-attribute.height=\"455\"\r\n             data-aem-asset-id=\"c7a5be91-16a3-4004-b721-c4be66d38a2f:authorize-default.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nA screenshot of the app authorization page defaulting to the scopes registered to the app.\n\r\n        \r\n    \r\n\nHowever, if you don't need all of the scopes that are currently enabled on the app, you can instead set the scope parameter on the /oauth2/authorize URL you construct. In that parameter, you can put a space-delimited list of scopes to specify just a sub-set of scopes to request for that authorization. This can be useful in scenarios where the app doesn't need all of the app's potential access, or as a way to more gradually gain the user's trust.\nhttps://www.dropbox.com/oauth2/authorize?client_id=&response_type=code&scope=files.metadata.read\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-subset.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-subset.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"A screenshot of the app authorization page requesting a sub-set of the scopes registered to the app.\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"776\"\r\n             data-sly-attribute.height=\"455\"\r\n             data-aem-asset-id=\"dff648aa-f841-43b0-bde1-a88c9c56d94b:authorize-subset.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-subset.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-subset.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"776\"\r\n             data-sly-attribute.height=\"455\"\r\n             data-aem-asset-id=\"dff648aa-f841-43b0-bde1-a88c9c56d94b:authorize-subset.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nA screenshot of the app authorization page requesting a sub-set of the scopes registered to the app.\n\r\n        \r\n    \r\n\nTip: Note how even though account_info.read is required to be enabled on the app itself, you don't have to request it during authorization. For more privacy-oriented scenarios where the app doesn't need access to the user's account information, you can set the scope parameter without the account_info.read scope as above. \nIf a user authorizes the app using that /oauth2/authorize URL, the app will then receive a payload like the following when it subsequently makes the corresponding call to /oauth2/token using the resulting authorization code:\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \n\r\n{\r\n  \"access_token\": \"\",\r\n  \"token_type\": \"bearer\",\r\n  \"expires_in\": 14400,\r\n  \"scope\": \"files.metadata.read\",\r\n  \"uid\": \"\",\r\n  \"account_id\": \"\"\r\n}\n\r\n\r\n\r\n\r\n\n\r\n\n\nIf the app needs additional scopes later, it can prompt the user to authorize the app again, with the scope parameter configured with more scopes, or without the scope parameter set at all, to request all of the app’s scopes.\n\nYou can also use the include_granted_scopes parameter to make it easier to request additional scopes without explicitly listing the previously granted scopes again. For example, if we then additionally want the app to be able to read the content of files in that same user’s account, we would construct another URL like this:\n\nhttps://www.dropbox.com/oauth2/authorize?client_id=&response_type=code&scope=files.content.read&include_granted_scopes=user\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-additional.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-additional.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"A screenshot of the app authorization page requesting additional scopes registered to the app.\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"776\"\r\n             data-sly-attribute.height=\"455\"\r\n             data-aem-asset-id=\"e0f65b7d-dac5-4075-a187-7a56e168ca8d:authorize-additional.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-additional.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/customizing-scopes/authorize-additional.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"776\"\r\n             data-sly-attribute.height=\"455\"\r\n             data-aem-asset-id=\"e0f65b7d-dac5-4075-a187-7a56e168ca8d:authorize-additional.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nA screenshot of the app authorization page requesting additional scopes registered to the app.\n\r\n        \r\n    \r\n\nIf the user authorizes the app using that /oauth2/authorize URL, the app will then receive a payload like the following when it subsequently makes the corresponding call to /oauth2/token using the resulting authorization code:\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \n\r\n{\r\n  \"access_token\": \"\",\r\n  \"token_type\": \"bearer\",\r\n  \"expires_in\": 14400,\r\n  \"scope\": \"files.content.read files.metadata.read\",\r\n  \"uid\": \"\",\r\n  \"account_id\": \"\"\r\n}\n\r\n\r\n\r\n\r\n\n\r\n\n\nNote how this time, the access token has permission to both files.metadata.read as well as files.content.read.\nour \"Using OAuth 2.0 with offline access\" blog post for information on that.\nforum or via our contact form.",
        "dc:creator": "\r\n                            Brooks McMillin,Adrian Wood,Mark Breitenbach,Aditya Damani,Dropbox Developer Support Team\r\n            \t\t\t",
        "content": "Learn how to configure and customize which scopes your app requests during the Dropbox OAuth 2 app authorization flow.",
        "contentSnippet": "Learn how to configure and customize which scopes your app requests during the Dropbox OAuth 2 app authorization flow.",
        "guid": "https://dropbox.tech/developers/customizing-scopes-in-oauth-flow",
        "categories": [
          "OAuth flow",
          "Authorization",
          "Scopes",
          "Tips and Tricks",
          "Oauth"
        ],
        "isoDate": "2024-09-13T14:30:00.000Z"
      }
    ]
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김병환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": [
      {
        "creator": "고종범",
        "title": "미뤄두었던 것들의 학습",
        "link": "https://brunch.co.kr/@@24SO/47",
        "pubDate": "Fri, 13 Sep 2024 09:09:27 GMT",
        "author": "고종범",
        "content": "지난주 글을 쓴다는 게 한주가 밀려버렸다. 뻔한 핑계지만 정신없는 일정에 토요일 예외적인 일정이 있다 보니 그렇게 되었다. 그래서 오늘은 쓸 이야기가 많다.  미뤄두었던 것들의 학습 지금 진행하고 있는 일이 조금 여유로워지면서 미뤄두었던 것들의 학습을 수행하고 있다. 매번 이렇게 밀린 학습 할 때 드는 생각은 평소에도 할 수 있으며 왜 몰아서 할까라는 생각<img src= \"https://img1.daumcdn.net/thumb/R1280x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fbrunch%2Fservice%2Fuser%2F24SO%2Fimage%2FffEjsDYpieDGycrOAKj0Z2_9Hn4.png\" width=\"500\" />",
        "contentSnippet": "지난주 글을 쓴다는 게 한주가 밀려버렸다. 뻔한 핑계지만 정신없는 일정에 토요일 예외적인 일정이 있다 보니 그렇게 되었다. 그래서 오늘은 쓸 이야기가 많다.  미뤄두었던 것들의 학습 지금 진행하고 있는 일이 조금 여유로워지면서 미뤄두었던 것들의 학습을 수행하고 있다. 매번 이렇게 밀린 학습 할 때 드는 생각은 평소에도 할 수 있으며 왜 몰아서 할까라는 생각",
        "guid": "https://brunch.co.kr/@@24SO/47",
        "isoDate": "2024-09-13T09:09:27.000Z"
      }
    ]
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": [
      {
        "title": "USB 2.0의 내부 구조",
        "link": "https://blog.seulgi.kim/2024/09/blog-post.html",
        "pubDate": "2024-09-14T15:13:00.053Z",
        "author": "Seulgi Kim",
        "summary": "아이폰도 USB-C를 사용하면서 온 세상이 USB로 통일됐지만 실제로는 너무 다양한 USB가 존재한다. 기본 형태인 USB-A나 최근 많이 사용되는 USB-C 뿐 아니라, 보통 5핀이라고 불리는 micro-B를 포함한 다양한 USB-B 컨넥터들이 존재한다. 그래도 컨넥터는 모양이 다르기 때문에 쉽게 구분할 수 있는데 케이블은 답이 없다. 겉으로는 똑같아 보이는 케이블이라도 어떤 케이블은 데이터 통신이 안 되고 어떤 케이블은 데이터 통신이 가능하다. 이런 차이는 케이블 내부 구성에 따라 발생한다. 이번 글에서는 USB 2.0 케이블의 내부를 통해 USB 케이블에 대해 자세히 알아보겠다.\n\n\n  \n    \n    \n  \n  Micro-B 케이블의 편조 차폐와 호일 차폐\n\n\n위 사진은 집에서 돌아다니던 A - ",
        "id": "tag:blogger.com,1999:blog-5754933877504806384.post-8679071203695677418",
        "isoDate": "2024-09-14T15:13:00.053Z"
      }
    ]
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "Apache Flink - Hello, World!",
        "link": "https://sungjk.github.io/2024/09/18/apache-flink.html",
        "pubDate": "2024-09-18T00:00:00+00:00",
        "content": "\n            \n            &lt;p&gt;Apache Flink를 처음 접하신 분이나 간단한 예제를 작성해보고 싶은 분들을 위해 작성한 글이에요. Architecture를 포함한 자세한 내부 동작 방식은 &lt;strong&gt;&lt;a href=&quot;https://flink.apache.org/&quot;&gt;Apache Flink 공식 문서&lt;/a&gt;&lt;/strong&gt;를 참고해주시길 바랄게요.&lt;/p&gt;\n\n&lt;h1 id=&quot;apache-flink&quot;&gt;Apache Flink&lt;/h1&gt;\n\n&lt;h3 id=&quot;stateful-computations-over-data-streams&quot;&gt;Stateful Computations over Data Streams&lt;/h3&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Apache Flink is a framework and distributed processing engine for stateful computations over unbounded and bounded data streams. Flink has been designed to run in all common cluster environments, perform computations at in-memory speed and at any scale.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://flink.apache.org/&quot;&gt;Apache Flink(이하 Flink)&lt;/a&gt;&lt;/strong&gt;는 데이터 스트리밍 및 배치 처리용 오픈 소스 프레임워크입니다. 비슷하게 데이터 스트리밍이나 배치 프로세싱을 위해 Kafka Streams, Spark, Kinesis 등이 있는데요, Flink 공식 홈페이지에 들어가면 먼저 Catchphrase가 눈에 들어옵니다. &lt;strong&gt;Stateful Computations over Data Streams&lt;/strong&gt;. 왜 이 문구를 강조하고 있을까요?&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/apache-flink.png&quot; alt=&quot;Apache Flink&quot; title=&quot;Apache Flink&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;스트림(Stream)&lt;/strong&gt;이란 &lt;strong&gt;특정 시점에 일어난 이벤트의 연속&lt;/strong&gt;을 의미합니다. 예를 들어, 온도, 습도 등의 데이터를 실시간으로 수집하는 IoT 디바이스에서는 변화하는 온도와 습도가 스트림으로 구성될 수 있어요. 사용자가 앱에서 특정 버튼을 클릭한다던가 피드에서 스크롤을 하는 등의 행동 데이터들도 스트림으로 구성될 수 있습니다. 이처럼 스트림은 특정 시점에 일어나는 작고 독립된 변하지 않는 불변 객체입니다. 입력 데이터가 고정된 크기의 데이터 셋으로 제공되는 &lt;strong&gt;배치 처리(Batch Processing)&lt;/strong&gt;와 다르게, 스트림 처리는(Stream Processing)은 입력 데이터가 지속적으로 발생하고 이걸 실시간으로 처리하는게 목표예요. Flink는 단순히 쏟아지는 데이터를 처리하는걸 목표로 하지 않고, 세션 윈도우(Session Window, 특정 시간 동안의 사용자 활동)나 집계(Aggregation, 평균, 총합 등) 등 &lt;strong&gt;메모리 내에서 상태를 유지하고 관리&lt;/strong&gt;할 수 있는 강력한 기능을 제공합니다. 웹 애플리케이션에서 사용자가 다양한 페이지를 방문하는 동안 각 사용자의 세션을 실시간으로 추적한다던가, 결제 시스템에서 실시간으로 거래 데이터를 모니터링하고 특정 패턴을 찾아 이상 거래를 탐지하는 등 실시간으로 발생하는 스트림 데이터에서 상태를 유지하면서 연산을 수행할 수 있는 기능을 제공합니다. 그리고 Flink의 상태 관리 기능 덕분에 애플리케이션 개발자는 이 도구를 활용해서 다양한 실시간 애플리케이션을 구축하고 쉽게 운영할 수 있게 되었습니다.&lt;/p&gt;\n\n&lt;p&gt;도구를 잘 쓰려면 이 도구가 어떻게 돌아가는지, 그리고 어디에 쓰는 것이고 어떻게 쓰는 건지 아는게 중요하기 때문에 &lt;a href=&quot;https://flink.apache.org/what-is-flink/flink-architecture/&quot;&gt;Architecture&lt;/a&gt;와 &lt;a href=&quot;https://flink.apache.org/what-is-flink/flink-applications/&quot;&gt;API&lt;/a&gt;도 참고하시면 좋겠어요. Flink 학습을 위해 온라인 강의도 들어봤는데 아직까지는 공식 문서가 최고라 생각해요. 여기서 따로 설명은 하지 않겠습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-task-manager.png&quot; alt=&quot;Flink Task Manager&quot; title=&quot;Flink Task Manager&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink Runtime Flow&lt;/center&gt;\n\n&lt;h3 id=&quot;advantages&quot;&gt;Advantages&lt;/h3&gt;\n\n&lt;p&gt;제가 서버 개발자니.. 개발자 관점에서 Flink의 가장 대표적인 특징을 꼽으라면 &lt;strong&gt;Standalone&lt;/strong&gt;과 &lt;strong&gt;Checkpoints&lt;/strong&gt;를 이야기하고 싶습니다. 일례로 데이터 스트리밍에 많이 활용되는 &lt;a href=&quot;https://kafka.apache.org/documentation/streams/&quot;&gt;Apache Kafka Streams&lt;/a&gt;은 애플리케이션의 일부로 실행되는 라이브러리인 반면, Flink는 자체 스트림 처리 엔진을 가지고 있는 프레임워크라서 독립적으로 배포와 실행이 가능합니다. IDEA에서 코드만 작성해서 실행하면 내장된 Mini Cluster를 기반으로 쉽게 디버깅까지 할 수 있습니다. 그리고 체크포인트(Checkpoints)를 통해 애플리케이션의 상태를 주기적으로 저장하여 장애 발생시 자동으로 복구해줍니다(Fault-tolerance). 정확히 한 번만(Exactly-Once) 처리한다던가 Two-Phase Commit 기반의 원자적 커밋을 통해 데이터 일관성을 보장할 수도 있습니다.&lt;/p&gt;\n\n&lt;p&gt;그리고 하나만 더 꼽으라면 데이터 프로세싱을 위한 고수준의 API에 대해서 이야기하고 싶어요. &lt;a href=&quot;https://spark.apache.org/docs/latest/rdd-programming-guide.html&quot;&gt;Spark RDD&lt;/a&gt;를 다뤄 보신 분들이라면 아주 쉽게 사용해볼 수 있을거라 생각해요.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/spark-flink-operator.png&quot; alt=&quot;Flink Task Manager&quot; title=&quot;Flink Task Manager&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;이 Operator들은 Spark RDD를 모르더라도 Java나 Kotlin을 사용하거나 함수형 프로그래밍의 고차 함수(Higher-order Functions)에 익숙한 분들이라면 쉽게 접근할 수 있을거라 생각합니다. 쉴 새 없이 들어오는 데이터 스트림을 다른 형태로 변환하고 싶을때에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map&lt;/code&gt;과 같은 함수를 이용해서 새로운 데이터 스트림으로 변환하고, 특정 조건에 만족하는 데이터만 필터링하고 싶다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter&lt;/code&gt; 함수를 사용하면 됩니다.&lt;/p&gt;\n\n&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 입력 데이터 스트림 생성&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// Filter: 짝수인 요소만 필터링&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;filtered&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FilterFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// Map: 필터링된 요소를 문자열로 변환&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;stringified&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filtered&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MapFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;use-cases&quot;&gt;Use Cases&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-stable/&quot;&gt;Apache Flink Documentation&lt;/a&gt;을 살펴보면 Source와 Sink라는 용어가 많이 보이는데, Apache Flink 뿐만 아니라 데이터 엔지니어링에서 흔히 사용되는 용어입니다. &lt;strong&gt;Source는 데이터 파이프라인의 시작 지점&lt;/strong&gt;으로, 데이터를 수집하여 시스템에 입력하는 역할을 합니다. &lt;strong&gt;Sink는 데이터 파이프라인의 종료 지점&lt;/strong&gt;으로, 데이터를 외부 시스템으로 출력하여 저장하거나 전송하는 역할을 합니다. 데이터 소스(Source)와 데이터 싱크(Sink)로서 외부 시스템과 데이터를 주고 받을 수 있도록 여러 Connector를 제공하고 있어요. 현재(2024.09.18) 기준으로 아래와 같은 Source, Sink Connector를 제공하고 있습니다. 이 내용은 &lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/overview/#flink-project-connectors&quot;&gt;Flink Project Connectors&lt;/a&gt;에서 확인할 수 있어요.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/kafka/&quot;&gt;Apache Kafka&lt;/a&gt; (source/sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/dynamodb/&quot;&gt;Amazon DynamoDB&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/kinesis/&quot;&gt;Amazon Kinesis Data Streams&lt;/a&gt; (source/sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/elasticsearch/&quot;&gt;Elasticsearch&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/opensearch/&quot;&gt;Opensearch&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/filesystem/&quot;&gt;FileSystem&lt;/a&gt; (source/sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/jdbc/&quot;&gt;JDBC&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/mongodb/&quot;&gt;MongoDB&lt;/a&gt; (source/sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://bahir.apache.org/docs/flink/current/flink-streaming-redis/&quot;&gt;Redis&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://bahir.apache.org/docs/flink/current/flink-streaming-netty/&quot;&gt;Netty&lt;/a&gt; (source)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;데이터 소스(source)에서 실시간으로 데이터를 읽어서, 새로운 형태로 변환하거나 로컬 스토리지에 저장해놓고 SQL 쿼리를 통해 유의미한 결과를 만들고, 데이터 싱크(sink)에 데이터를 출력&lt;/strong&gt;합니다. 이런 기능이 있다면 우리는 어떤 문제를 효과적으로 해결할 수 있을까요? &lt;a href=&quot;https://flink.apache.org/what-is-flink/use-cases/&quot;&gt;공식 문서의 대표적인 유스케이스&lt;/a&gt;에서는 이벤트 드리븐 애플리케이션 개발과 데이터 분석 그리고 데이터 파이프라인에 구축의 기반을 다지는데 사용될 수 있다고 말하고 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-usecases-eventdrivenapps.png&quot; alt=&quot;Event-driven Applications&quot; title=&quot;Event-driven Applications&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink support event-driven applications&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-usecases-analytics.png&quot; alt=&quot;Data Analytics Applications&quot; title=&quot;Data Analytics Applications&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink support data analytics applications&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-usecases-datapipelines.png&quot; alt=&quot;Data Pipeline Applications&quot; title=&quot;Data Pipeline Applications&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink support data pipelines&lt;/center&gt;\n\n&lt;p&gt;잠깐 아주 간단한 예시 하나를 살펴볼게요. 사용자의 요청을 받아서 처리하는 웹 서버가 Database(DB)에 쓰기를 하면서 동시에 검색을 위해 Elastic Search(ES)에도 데이터를 적재한다고 가정해볼게요. 이 때 DB의 쓰기 연산과 ES로의 쓰기 연산이 서로 원자적으로 묶일 수 없다면 어떤 문제가 생길까요? DB에 쓰기는 성공하고 ES에 쓰기는 실패했으면, 사용자가 게시글을 쓰는데에 성공했지만 검색에는 노출이 안되는 문제가 발생할거에요. 그래서 이런 문제를 해결하기 위해 DB 쓰기와 ES 쓰기를 Kafka와 같은 이벤트 브로커를 활용해서 분리하는 전략을 취할 수 있어요. 이런 문제를 해결하기 위해 다양한 방법이 존재하는데, Flink로는 어떻게 해결할 수 있는지 살펴볼게요.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/sync-es.png&quot; alt=&quot;Sync Elastic Search&quot; title=&quot;Sync Elastic Search&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;별도 Worker를 통해 ES 데이터 적재&lt;/center&gt;\n\n&lt;p&gt;Flink 생태계에서 인기 있는 것 중 하나는 &lt;strong&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-cdc-docs-release-3.2/&quot;&gt;Flink CDC&lt;/a&gt;&lt;/strong&gt;입니다. Flink CDC는 &lt;a href=&quot;https://debezium.io/&quot;&gt;Debezium&lt;/a&gt;을 기반으로 데이터베이스의 변경 로그를 실시간으로 캡쳐해서 타겟 시스템으로 반영할 수 있게 도와주는 도구입니다. &lt;strong&gt;사용자가 DB에 쓰기 연산을 실행하면 Flink CDC가 변경 사항을 캡쳐해서 Kafka에 데이터 변경점을 기록하고, Flink 앱에서 변경점을 받아 변환을 한 다음 ES에 데이터를 적재&lt;/strong&gt;합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-cdc-usage.png&quot; alt=&quot;Flink CDC Usage&quot; title=&quot;Flink CDC Usage&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink CDC 기반 ES 데이터 적재&lt;/center&gt;\n\n&lt;p&gt;Kafka와 같은 이벤트 브로커를 중심으로 ES 쓰기를 실행하니, 언뜻 보기엔 바로 위에서 이야기한 ‘ES 적재를 이벤트 기반으로 분리’와 별반 다르지 않아 보입니다. 그런데 Flink 기반으로 문제를 해결할 때 취할 수 있는 장점은 위에서 잠깐 이야기한 체크포인트(Checkpoint)를 활용할 수 있다는 것입니다. 장애 복구 관점에서 Worker에서 ES 쓰기를 어디까지 했는지 별도 저장소에 관리를 해야 할 필요가 있는데, Flink 기반의 데이터 처리는 체크포인트와 상태 관리를 통해 장애 복구 뿐만 아니라 데이터의 일관성 보장을 높일 수 있습니다. 복잡한 상태 관리와 장애 복구 등의 작업은 플랫폼(라이브러리나 프레임워크)에 적절히 위임하고, 엔지니어는 이런 도구를 잘 활용하여 어떤 가치를 창출할 수 있을지에 집중하는게 중요합니다. 이런 고민과 선택은 사용자에게 일관된 최상의 경험을 제공하는 길로 이어질 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;여기서 살펴본 건 하나의 예시일 뿐, 중요한 건 &lt;strong&gt;&apos;흐르는 데이터에 어떤 빨때를 꽂아서 어디에 활용해 볼 수 있을까?&apos;&lt;/strong&gt;라는 질문을 가지고 계속해서 고민하는 것입니다. 관습적으로 배치 잡을 사용해 처리하던 작업들을 스트리밍 애플리케이션으로 전환해서 처리할 수는 없을까요? 만약 데이터 처리를 위해 Spring Batch 부터 떠올린다면 Stream Processing도 함께 살펴보시길 추천할게요.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;quickstart&quot;&gt;Quickstart&lt;/h1&gt;\n\n&lt;p&gt;Apache Flink 애플리케이션을 실행하기 위해서는 먼저 Flink Cluster 환경 구축이 필요합니다. 클러스터를 통해 데이터를 병렬 처리하거나 내결함성을 제공해 데이터를 효율적으로 처리할 수 있습니다. 그리고 애플리케이션을 실행한다는 말은 Flink에 정의한 Job을 실행한다는 의미이기도 합니다. Cluster에는 실행 가능한 Jar 파일을 제출하면 되는데, 자바 애플리케이션 코드를 작성해서 빌드한 결과로 나온 Jar 파일을 제출하면 됩니다.&lt;/p&gt;\n\n&lt;p&gt;Production 환경에서 Flink 애플리케이션을 실행하려면 &lt;a href=&quot;https://aws.amazon.com/managed-service-apache-flink/&quot;&gt;Amazon Managed Service for Apache Flink&lt;/a&gt; 같은 솔루션을 써도 되고, &lt;a href=&quot;https://nightlies.apache.org/flink/flink-kubernetes-operator-docs-stable/docs/try-flink-kubernetes-operator/quick-start/&quot;&gt;Flink Kubernetes Operator&lt;/a&gt;를 이용해서 Kubernetes 위에서 Flink Cluster와 Job을 배포하고 관리할 수 있습니다. 여기서는 Mac OS 환경의 로컬 PC에서 Apache Flink 애플리케이션을 실행하는 여러 방법을 살펴보겠습니다.&lt;/p&gt;\n\n&lt;h3 id=&quot;1-idea에서-프로그램-실행&quot;&gt;1. IDEA에서 프로그램 실행&lt;/h3&gt;\n\n&lt;p&gt;가장 편하고 유용한 방법은 IntelliJ IDEA에서 main 함수를 바로 실행하는 것입니다. Flink 애플리케이션을 실행하려면 Cluster에 실행 가능한 Jar 파일을 제출해야 되는데, IDEA에서 버튼만 누르면 바로 실행이 되고 디버깅까지 되니 신기할 따름입니다. 그 이유는 Apache Flink에서는 로컬 환경에서 Flink Cluster를 에뮬레이션할 수 있게끔 &lt;a href=&quot;https://github.com/apache/flink/blob/master/flink-runtime/src/main/java/org/apache/flink/runtime/minicluster/MiniCluster.java&quot;&gt;MiniCluster&lt;/a&gt;를 제공하기 때문입니다. 그래서 Flink 애플리케이션을 만드는 개발자는 실제 클러스터를 구축할 필요 없이 로컬 환경에서 Flink Cluster에 앱을 실행하는 것처럼 시뮬레이션을 할 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-run-application.png&quot; alt=&quot;IDEA Run Application&quot; title=&quot;IDEA Run Application&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;2-local-flink-cluster-구축&quot;&gt;2. Local Flink Cluster 구축&lt;/h3&gt;\n\n&lt;p&gt;또 다른 방법은 직접 Flink Cluster를 로컬 환경에 구축해서 사용하는 것입니다. &lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/try-flink/local_installation/&quot;&gt;Apache Flink 공식 문서&lt;/a&gt;에서 Local Cluster를 구축할 수 있는 가이드를 제공하고 있습니다. Binary Release를 다운 받아서 압축을 푼 다음 아래 명령어를 실행해서 Flink Cluster를 시작하고 Jar 파일을 실행시켜서 Job을 제출할 수 있습니다.&lt;/p&gt;\n\n&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Flink Cluser 중지\n$ ./bin/stop-cluster.sh\n\n# Flink Cluser 시작\n$ ./bin/start-cluster.sh\n\n# Flink Cluster에 Flink Job 제출(실행)\n$ ./bin/flink run examples/streaming/WordCount.jar\n\n# Flink Cluster 로그 확인\n$ tail -f log/flink-*\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;2-1-idea에-flink-plugin-설치&quot;&gt;2-1. IDEA에 Flink Plugin 설치&lt;/h3&gt;\n\n&lt;p&gt;IntelliJ IDEA에서 Big Data Tools 플러그인 번들로 함께 사용할 수 있는 &lt;a href=&quot;https://plugins.jetbrains.com/plugin/21702-flink&quot;&gt;Flink Plugin&lt;/a&gt;을 제공합니다. 이 플러그인을 사용하면 Flink Cluster를 모니터링하거나 직접 Flink Job을 제출할 수 있는 기능을 제공합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-settings-flink.png&quot; alt=&quot;IDEA Settings&quot; title=&quot;IDEA Settings&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-settings-flink-test-connection.png&quot; alt=&quot;IDEA Test Connection&quot; title=&quot;IDEA Test Connection&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;2-2-local-cluster에-jar-제출&quot;&gt;2-2. Local Cluster에 Jar 제출&lt;/h3&gt;\n\n&lt;p&gt;IDEA에 생성된 Flink Console에서 Submit New Job 클릭후 + 버튼을 누르면 빌드된 Jar 파일을 선택할 수 있습니다. Jar 파일을 선택하고 나서 실행(Run) 버튼을 클릭하면 Flink Cluster에 Jar 파일이 제출되고 정상이라면 Job이 실행됩니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-submit-new-job.png&quot; alt=&quot;IDEA Submit New Job&quot; title=&quot;IDEA Submit New Job&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-run-jar.png&quot; alt=&quot;IDEA Run Jar&quot; title=&quot;IDEA Run Jar&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-run-jar-2.png&quot; alt=&quot;IDEA Run Jar&quot; title=&quot;IDEA Run Jar&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;2-3-local-cluster-모니터링&quot;&gt;2-3. Local Cluster 모니터링&lt;/h3&gt;\n\n&lt;p&gt;Console에서 Open in Browser 버튼을 클릭하면 현재 모니터링으로 연결된 Cluster의 상태를 확인할 수 있는 대시보드가 열립니다. 이 대시보드에서는 현재 실행중인 Job을 포함하여 Flink Cluster의 Task Manager, Job Manager 그리고 Clsuter logs 등을 확인할 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-cluster-web.png&quot; alt=&quot;IDEA Cluster Web&quot; title=&quot;IDEA Cluster Web&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-cluster-dashboard.png&quot; alt=&quot;IDEA Cluster Dashboard&quot; title=&quot;IDEA Cluster Dashboard&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;hello-world&quot;&gt;Hello, World!&lt;/h1&gt;\n\n&lt;p&gt;이제 Flink 애플리케이션 실행 환경이 구축되었으니 모든 프로그래밍의 시작인 Hello, World를 만들어보겠습니다. 프로그래밍 언어의 첫 시작은 콘솔에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello, World!&lt;/code&gt; 문자열을 출력하는 것인데, 데이터 프로세싱에서는 단어 개수를 세는 Word Count를 입문용 예제로 다루고 있습니다. 여기서는 Flink를 활용해 문자열에 포함된 특정 단어들의 개수를 출력하는 Word Count Job을 만들어보겠습니다. 전체 코드는 &lt;a href=&quot;https://github.com/sungjk/flink-hello-world&quot;&gt;Github - flink-hello-world&lt;/a&gt;에서 확인할 수 있어요.&lt;/p&gt;\n\n&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.api.common.functions.FlatMapFunction&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.api.common.typeinfo.TypeHint&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.api.common.typeinfo.TypeInformation&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.api.java.tuple.Tuple2&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.streaming.api.environment.StreamExecutionEnvironment&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.util.Collector&lt;/span&gt;\n\n&lt;span class=&quot;k&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WordCounterJob&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 데이터 소스로 사용할 문자열&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;\n            The quick brown fox jumps over the lazy dog.\n            The quick blue fox jumps over the lazy dog.\n            The quick brown cat jumps over the lazy dog.\n            The quick blue cat jumps over the lazy dog.\n        &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trimIndent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n\n    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 스트리밍 실행 환경 생성&lt;/span&gt;\n        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StreamExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 문자열 데이터 소스 생성&lt;/span&gt;\n        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;in-memory-source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FlatMapFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                    &lt;span class=&quot;c1&quot;&gt;// 입력 문자열을 소문자로 변환하고, 정규식을 사용하여 단어로 분리&lt;/span&gt;\n                    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;tokens&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lowercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\\\\W+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;\n                    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                            &lt;span class=&quot;c1&quot;&gt;// 각 단어와 그 단어의 개수를 나타내는 튜플(Tuple2&amp;lt;String, Int&amp;gt;)로 수집&lt;/span&gt;\n                            &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;\n                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;\n            &lt;span class=&quot;c1&quot;&gt;// 반환 타입 정보 지정(Generic 타입의 한계를 해결하기 위해 TypeInformation을 사용)&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TypeInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TypeHint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}))&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tokenizer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n            &lt;span class=&quot;c1&quot;&gt;// 단어별로 그룹핑&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keyBy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;c1&quot;&gt;// 각 그룹별로 두번째 필드인 단어의 개수를 합산&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;counter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 최종 결과를 표준 출력에 출력하는 싱크 연산 추가&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;print-sink&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 스트리밍 작업 실행&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JeremyWordCount&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;아마 95% 이상의 Flink 애플리케이션은 Java 언어로 작성되어 있을거라 생각합니다(샘플 예제를 몇가지 찾아봤지만 코틀린 코드는 발견하지 못했어요). 저는 자바 언어를 썩 즐겨 쓰지는 않아서 Flink 애플리케이션도 Kotlin으로 작성하고 있습니다. 그러다보니 아주 간혹 타입 때문에 귀찮을 때가 있는데 크게 불편할 정도는 아닙니다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;troubleshootings&quot;&gt;Troubleshootings&lt;/h1&gt;\n\n&lt;p&gt;실행 환경 구축부터 스스로 Word Count 앱을 작성하기까지 몇가지 우여곡절이 있었습니다. 코드는 정말 몇 줄 안되는데 빌드 과정, Jar 파일 생성 문제, Java의 Type Erase 현상 등 여러 문제들을 겪고 해결하는 과정을 거쳤습니다.&lt;/p&gt;\n\n&lt;h3 id=&quot;jar-내에-main-class-찾을-수-없음&quot;&gt;Jar 내에 Main class 찾을 수 없음&lt;/h3&gt;\n\n&lt;p&gt;에러 로그:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Neither&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;(해결 방법) Jar file에 Main class name 명시:&lt;/p&gt;\n\n&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// application(main)&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// entry point is not a method inside the class&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// use @JvmStatic annotation inside the companion object&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;companion&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;nd&quot;&gt;@JvmStatic&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n            &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n            &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// build.gradle.kts&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;archiveFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello-world.jar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;nf&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// add main class name&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Main-Class&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;io.sungjk.flink.Main&quot;&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;jar-내에-flink-job-찾을-수-없음&quot;&gt;Jar 내에 Flink Job 찾을 수 없음&lt;/h3&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Could&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;job&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAR&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;file:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;does&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;exist:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;(해결 방법) Main Class 내에 테스트할 Job 추가:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\n&lt;span class=&quot;n&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WordCounterJob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;args:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StreamExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;\n        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JeremyWordCount&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;gradle-모듈-의존성-찾지-못함&quot;&gt;gradle 모듈 의존성 찾지 못함&lt;/h3&gt;\n\n&lt;p&gt;에러 로그:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ProgramInvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;An&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occurred&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;method:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sungjk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PackagedProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;callMainMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PackagedProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;378&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PackagedProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invokeInteractiveModeForExecution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PackagedProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;223&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ClientUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;executeProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ClientUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;113&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CliFrontend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;executeProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CliFrontend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1026&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;(해결 방법) Shadow Plugin 사용해서 모든 의존성을 단일 JAR 파일로 패키징한 후 shadowJar task 실행:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.github.johnrengelman.shadow&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;7.1.2&quot;&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n\n&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shadowJar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;archiveFileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello-world.jar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Main-Class&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;io.sungjk.flink.Main&quot;&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;flink-cluster에서-타입-추론-불가type-erasure&quot;&gt;Flink Cluster에서 타입 추론 불가(Type Erasure)&lt;/h3&gt;\n\n&lt;p&gt;에러 로그:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;kt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;could&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;determined&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;automatically&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;due&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;erasure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;give&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hints&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(...)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transformation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ResultTypeQueryable&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;\n\t&lt;span class=&quot;nc&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Transformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOutputType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Transformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;557&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;streaming&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;datastream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;193&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;streaming&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;datastream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;KeyedStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;KeyedStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;118&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;streaming&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;datastream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keyBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;293&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;(해결 방법) Flink의 TypeInformation 클래스를 사용하여 반환 타입 명시:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FlatMapFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// Flink의 TypeInformation 클래스를 사용하여 반환 타입 명시&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TypeInformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TypeHint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}))&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tokenizer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;마치며&quot;&gt;마치며&lt;/h1&gt;\n\n&lt;p&gt;쏟아지는 데이터를 실시간으로 활용할 수 있는 환경이 갖추어지니 할 수 있는게 정말 많아졌습니다. 단순히 Apache Flink라는 새로운 도구에 익숙해진 건 단편적인 예시일 뿐, 데이터에 대해 눈이 떠졌다랄까요. 데이터 엔지니어 동료와 처음 티타임을 할 때 데이터에 무지한 저의 모습을 스스로 제 3자의 시각에서 바라보고 있는 느낌이 들었고, 머릿속에서는 새로운 터널에 들어서는 것만 같았습니다. 짧게는 3개월, 길게는 1년 뒤에 달라져 있을 제 모습이 상상되기도 했어요. 멋진 동료 덕분에 성장하고 있다는걸 느낄 수 있었고 도움이 필요하면 저도 많이 도와주고 싶다는 생각이 들었습니다.&lt;/p&gt;\n\n&lt;p&gt;이제 백엔드 엔지니어로서 다룰 수 있는 연장이 하나 더 늘어났습니다. 경계해야 할 건 모든게 다 못으로 보이지 않게 만드는 것. 실시간으로 데이터를 처리할 수 있는 능력이 생겼으니 모든 곳에 다 스트림 앱을 갖다 붙이고 싶을 수 있습니다. 그래서 이 도구로 해결하기에 적당한 문제가 무엇인지 알고 있는게 중요한데요. 처리할 데이터 소스와 싱크를 지원하는지 알아보고, 실시간성(Real-time) 그리고 Window 기반으로 이벤트를 처리해야 할 문제에 Flink를 추천하고 싶습니다. 실시간으로 발생하는 거래 데이터가 정상인지, 이상거래는 아닌지 &lt;a href=&quot;https://flink.apache.org/what-is-flink/flink-applications/#state&quot;&gt;State&lt;/a&gt;와 &lt;a href=&quot;https://flink.apache.org/what-is-flink/flink-applications/#time&quot;&gt;Time&lt;/a&gt;을 활용해서 판단할 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;마지막으로, 한국에도 Flink를 사용하는 회사들이 점점 많아지고 있는것 같은데, 기술 교류와 레퍼런스가 많아졌으면 좋겠다는 생각이 들었습니다. 생태계는 계속해서 발전하고 있다는 느낌이 드는데, 대부분 비슷하겠지만 구체적으로 어떤 니즈를 가지고 이 기술을 도입해서 사용하고 있는지가 궁금했습니다. 자주, 더 많은 기술 공유가 있기를!&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;https://flink.apache.org/&quot;&gt;Apache Flink&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://www.confluent.io/learn/apache-flink/&quot;&gt;What is Apache Flink?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n            \n          ",
        "contentSnippet": "<p>Apache Flink를 처음 접하신 분이나 간단한 예제를 작성해보고 싶은 분들을 위해 작성한 글이에요. Architecture를 포함한 자세한 내부 동작 방식은 <strong><a href=\"https://flink.apache.org/\">Apache Flink 공식 문서</a></strong>를 참고해주시길 바랄게요.</p>\n\n<h1 id=\"apache-flink\">Apache Flink</h1>\n\n<h3 id=\"stateful-computations-over-data-streams\">Stateful Computations over Data Streams</h3>\n\n<blockquote>\n  <p>Apache Flink is a framework and distributed processing engine for stateful computations over unbounded and bounded data streams. Flink has been designed to run in all common cluster environments, perform computations at in-memory speed and at any scale.</p>\n</blockquote>\n\n<p><strong><a href=\"https://flink.apache.org/\">Apache Flink(이하 Flink)</a></strong>는 데이터 스트리밍 및 배치 처리용 오픈 소스 프레임워크입니다. 비슷하게 데이터 스트리밍이나 배치 프로세싱을 위해 Kafka Streams, Spark, Kinesis 등이 있는데요, Flink 공식 홈페이지에 들어가면 먼저 Catchphrase가 눈에 들어옵니다. <strong>Stateful Computations over Data Streams</strong>. 왜 이 문구를 강조하고 있을까요?</p>\n\n<p><img src=\"/images/2024/09/18/apache-flink.png\" alt=\"Apache Flink\" title=\"Apache Flink\" class=\"center-image\" /></p>\n\n<p><strong>스트림(Stream)</strong>이란 <strong>특정 시점에 일어난 이벤트의 연속</strong>을 의미합니다. 예를 들어, 온도, 습도 등의 데이터를 실시간으로 수집하는 IoT 디바이스에서는 변화하는 온도와 습도가 스트림으로 구성될 수 있어요. 사용자가 앱에서 특정 버튼을 클릭한다던가 피드에서 스크롤을 하는 등의 행동 데이터들도 스트림으로 구성될 수 있습니다. 이처럼 스트림은 특정 시점에 일어나는 작고 독립된 변하지 않는 불변 객체입니다. 입력 데이터가 고정된 크기의 데이터 셋으로 제공되는 <strong>배치 처리(Batch Processing)</strong>와 다르게, 스트림 처리는(Stream Processing)은 입력 데이터가 지속적으로 발생하고 이걸 실시간으로 처리하는게 목표예요. Flink는 단순히 쏟아지는 데이터를 처리하는걸 목표로 하지 않고, 세션 윈도우(Session Window, 특정 시간 동안의 사용자 활동)나 집계(Aggregation, 평균, 총합 등) 등 <strong>메모리 내에서 상태를 유지하고 관리</strong>할 수 있는 강력한 기능을 제공합니다. 웹 애플리케이션에서 사용자가 다양한 페이지를 방문하는 동안 각 사용자의 세션을 실시간으로 추적한다던가, 결제 시스템에서 실시간으로 거래 데이터를 모니터링하고 특정 패턴을 찾아 이상 거래를 탐지하는 등 실시간으로 발생하는 스트림 데이터에서 상태를 유지하면서 연산을 수행할 수 있는 기능을 제공합니다. 그리고 Flink의 상태 관리 기능 덕분에 애플리케이션 개발자는 이 도구를 활용해서 다양한 실시간 애플리케이션을 구축하고 쉽게 운영할 수 있게 되었습니다.</p>\n\n<p>도구를 잘 쓰려면 이 도구가 어떻게 돌아가는지, 그리고 어디에 쓰는 것이고 어떻게 쓰는 건지 아는게 중요하기 때문에 <a href=\"https://flink.apache.org/what-is-flink/flink-architecture/\">Architecture</a>와 <a href=\"https://flink.apache.org/what-is-flink/flink-applications/\">API</a>도 참고하시면 좋겠어요. Flink 학습을 위해 온라인 강의도 들어봤는데 아직까지는 공식 문서가 최고라 생각해요. 여기서 따로 설명은 하지 않겠습니다.</p>\n\n<p><img src=\"/images/2024/09/18/flink-task-manager.png\" alt=\"Flink Task Manager\" title=\"Flink Task Manager\" class=\"center-image\" /></p>\n\n<center>Flink Runtime Flow</center>\n\n<h3 id=\"advantages\">Advantages</h3>\n\n<p>제가 서버 개발자니.. 개발자 관점에서 Flink의 가장 대표적인 특징을 꼽으라면 <strong>Standalone</strong>과 <strong>Checkpoints</strong>를 이야기하고 싶습니다. 일례로 데이터 스트리밍에 많이 활용되는 <a href=\"https://kafka.apache.org/documentation/streams/\">Apache Kafka Streams</a>은 애플리케이션의 일부로 실행되는 라이브러리인 반면, Flink는 자체 스트림 처리 엔진을 가지고 있는 프레임워크라서 독립적으로 배포와 실행이 가능합니다. IDEA에서 코드만 작성해서 실행하면 내장된 Mini Cluster를 기반으로 쉽게 디버깅까지 할 수 있습니다. 그리고 체크포인트(Checkpoints)를 통해 애플리케이션의 상태를 주기적으로 저장하여 장애 발생시 자동으로 복구해줍니다(Fault-tolerance). 정확히 한 번만(Exactly-Once) 처리한다던가 Two-Phase Commit 기반의 원자적 커밋을 통해 데이터 일관성을 보장할 수도 있습니다.</p>\n\n<p>그리고 하나만 더 꼽으라면 데이터 프로세싱을 위한 고수준의 API에 대해서 이야기하고 싶어요. <a href=\"https://spark.apache.org/docs/latest/rdd-programming-guide.html\">Spark RDD</a>를 다뤄 보신 분들이라면 아주 쉽게 사용해볼 수 있을거라 생각해요.</p>\n\n<p><img src=\"/images/2024/09/18/spark-flink-operator.png\" alt=\"Flink Task Manager\" title=\"Flink Task Manager\" class=\"center-image\" /></p>\n\n<p>이 Operator들은 Spark RDD를 모르더라도 Java나 Kotlin을 사용하거나 함수형 프로그래밍의 고차 함수(Higher-order Functions)에 익숙한 분들이라면 쉽게 접근할 수 있을거라 생각합니다. 쉴 새 없이 들어오는 데이터 스트림을 다른 형태로 변환하고 싶을때에는 <code class=\"language-plaintext highlighter-rouge\">map</code>과 같은 함수를 이용해서 새로운 데이터 스트림으로 변환하고, 특정 조건에 만족하는 데이터만 필터링하고 싶다면 <code class=\"language-plaintext highlighter-rouge\">filter</code> 함수를 사용하면 됩니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// 입력 데이터 스트림 생성</span>\n<span class=\"kd\">val</span> <span class=\"py\">input</span><span class=\"p\">:</span> <span class=\"nc\">DataStream</span><span class=\"p\">&lt;</span><span class=\"nc\">Int</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"n\">env</span><span class=\"p\">.</span><span class=\"nf\">fromElements</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// Filter: 짝수인 요소만 필터링</span>\n<span class=\"kd\">val</span> <span class=\"py\">filtered</span><span class=\"p\">:</span> <span class=\"nc\">DataStream</span><span class=\"p\">&lt;</span><span class=\"nc\">Int</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"n\">input</span><span class=\"p\">.</span><span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"kd\">object</span> <span class=\"err\">: </span><span class=\"nc\">FilterFunction</span><span class=\"p\">&lt;</span><span class=\"nc\">Int</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nc\">Int</span><span class=\"p\">):</span> <span class=\"nc\">Boolean</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">value</span> <span class=\"p\">%</span> <span class=\"mi\">2</span> <span class=\"p\">==</span> <span class=\"mi\">0</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\">// Map: 필터링된 요소를 문자열로 변환</span>\n<span class=\"kd\">val</span> <span class=\"py\">stringified</span><span class=\"p\">:</span> <span class=\"nc\">DataStream</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"n\">filtered</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"kd\">object</span> <span class=\"err\">: </span><span class=\"nc\">MapFunction</span><span class=\"p\">&lt;</span><span class=\"nc\">Int</span><span class=\"p\">,</span> <span class=\"nc\">String</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nc\">Int</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"nf\">toString</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</code></pre></div></div>\n\n<h3 id=\"use-cases\">Use Cases</h3>\n\n<p><a href=\"https://nightlies.apache.org/flink/flink-docs-stable/\">Apache Flink Documentation</a>을 살펴보면 Source와 Sink라는 용어가 많이 보이는데, Apache Flink 뿐만 아니라 데이터 엔지니어링에서 흔히 사용되는 용어입니다. <strong>Source는 데이터 파이프라인의 시작 지점</strong>으로, 데이터를 수집하여 시스템에 입력하는 역할을 합니다. <strong>Sink는 데이터 파이프라인의 종료 지점</strong>으로, 데이터를 외부 시스템으로 출력하여 저장하거나 전송하는 역할을 합니다. 데이터 소스(Source)와 데이터 싱크(Sink)로서 외부 시스템과 데이터를 주고 받을 수 있도록 여러 Connector를 제공하고 있어요. 현재(2024.09.18) 기준으로 아래와 같은 Source, Sink Connector를 제공하고 있습니다. 이 내용은 <a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/overview/#flink-project-connectors\">Flink Project Connectors</a>에서 확인할 수 있어요.</p>\n\n<ul>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/kafka/\">Apache Kafka</a> (source/sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/dynamodb/\">Amazon DynamoDB</a> (sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/kinesis/\">Amazon Kinesis Data Streams</a> (source/sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/elasticsearch/\">Elasticsearch</a> (sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/opensearch/\">Opensearch</a> (sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/filesystem/\">FileSystem</a> (source/sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/jdbc/\">JDBC</a> (sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/mongodb/\">MongoDB</a> (source/sink)</li>\n  <li><a href=\"https://bahir.apache.org/docs/flink/current/flink-streaming-redis/\">Redis</a> (sink)</li>\n  <li><a href=\"https://bahir.apache.org/docs/flink/current/flink-streaming-netty/\">Netty</a> (source)</li>\n</ul>\n\n<p><strong>데이터 소스(source)에서 실시간으로 데이터를 읽어서, 새로운 형태로 변환하거나 로컬 스토리지에 저장해놓고 SQL 쿼리를 통해 유의미한 결과를 만들고, 데이터 싱크(sink)에 데이터를 출력</strong>합니다. 이런 기능이 있다면 우리는 어떤 문제를 효과적으로 해결할 수 있을까요? <a href=\"https://flink.apache.org/what-is-flink/use-cases/\">공식 문서의 대표적인 유스케이스</a>에서는 이벤트 드리븐 애플리케이션 개발과 데이터 분석 그리고 데이터 파이프라인에 구축의 기반을 다지는데 사용될 수 있다고 말하고 있습니다.</p>\n\n<p><img src=\"/images/2024/09/18/flink-usecases-eventdrivenapps.png\" alt=\"Event-driven Applications\" title=\"Event-driven Applications\" class=\"center-image\" /></p>\n\n<center>Flink support event-driven applications</center>\n\n<p><img src=\"/images/2024/09/18/flink-usecases-analytics.png\" alt=\"Data Analytics Applications\" title=\"Data Analytics Applications\" class=\"center-image\" /></p>\n\n<center>Flink support data analytics applications</center>\n\n<p><img src=\"/images/2024/09/18/flink-usecases-datapipelines.png\" alt=\"Data Pipeline Applications\" title=\"Data Pipeline Applications\" class=\"center-image\" /></p>\n\n<center>Flink support data pipelines</center>\n\n<p>잠깐 아주 간단한 예시 하나를 살펴볼게요. 사용자의 요청을 받아서 처리하는 웹 서버가 Database(DB)에 쓰기를 하면서 동시에 검색을 위해 Elastic Search(ES)에도 데이터를 적재한다고 가정해볼게요. 이 때 DB의 쓰기 연산과 ES로의 쓰기 연산이 서로 원자적으로 묶일 수 없다면 어떤 문제가 생길까요? DB에 쓰기는 성공하고 ES에 쓰기는 실패했으면, 사용자가 게시글을 쓰는데에 성공했지만 검색에는 노출이 안되는 문제가 발생할거에요. 그래서 이런 문제를 해결하기 위해 DB 쓰기와 ES 쓰기를 Kafka와 같은 이벤트 브로커를 활용해서 분리하는 전략을 취할 수 있어요. 이런 문제를 해결하기 위해 다양한 방법이 존재하는데, Flink로는 어떻게 해결할 수 있는지 살펴볼게요.</p>\n\n<p><img src=\"/images/2024/09/18/sync-es.png\" alt=\"Sync Elastic Search\" title=\"Sync Elastic Search\" class=\"center-image\" /></p>\n\n<center>별도 Worker를 통해 ES 데이터 적재</center>\n\n<p>Flink 생태계에서 인기 있는 것 중 하나는 <strong><a href=\"https://nightlies.apache.org/flink/flink-cdc-docs-release-3.2/\">Flink CDC</a></strong>입니다. Flink CDC는 <a href=\"https://debezium.io/\">Debezium</a>을 기반으로 데이터베이스의 변경 로그를 실시간으로 캡쳐해서 타겟 시스템으로 반영할 수 있게 도와주는 도구입니다. <strong>사용자가 DB에 쓰기 연산을 실행하면 Flink CDC가 변경 사항을 캡쳐해서 Kafka에 데이터 변경점을 기록하고, Flink 앱에서 변경점을 받아 변환을 한 다음 ES에 데이터를 적재</strong>합니다.</p>\n\n<p><img src=\"/images/2024/09/18/flink-cdc-usage.png\" alt=\"Flink CDC Usage\" title=\"Flink CDC Usage\" class=\"center-image\" /></p>\n\n<center>Flink CDC 기반 ES 데이터 적재</center>\n\n<p>Kafka와 같은 이벤트 브로커를 중심으로 ES 쓰기를 실행하니, 언뜻 보기엔 바로 위에서 이야기한 ‘ES 적재를 이벤트 기반으로 분리’와 별반 다르지 않아 보입니다. 그런데 Flink 기반으로 문제를 해결할 때 취할 수 있는 장점은 위에서 잠깐 이야기한 체크포인트(Checkpoint)를 활용할 수 있다는 것입니다. 장애 복구 관점에서 Worker에서 ES 쓰기를 어디까지 했는지 별도 저장소에 관리를 해야 할 필요가 있는데, Flink 기반의 데이터 처리는 체크포인트와 상태 관리를 통해 장애 복구 뿐만 아니라 데이터의 일관성 보장을 높일 수 있습니다. 복잡한 상태 관리와 장애 복구 등의 작업은 플랫폼(라이브러리나 프레임워크)에 적절히 위임하고, 엔지니어는 이런 도구를 잘 활용하여 어떤 가치를 창출할 수 있을지에 집중하는게 중요합니다. 이런 고민과 선택은 사용자에게 일관된 최상의 경험을 제공하는 길로 이어질 수 있습니다.</p>\n\n<p>여기서 살펴본 건 하나의 예시일 뿐, 중요한 건 <strong>'흐르는 데이터에 어떤 빨때를 꽂아서 어디에 활용해 볼 수 있을까?'</strong>라는 질문을 가지고 계속해서 고민하는 것입니다. 관습적으로 배치 잡을 사용해 처리하던 작업들을 스트리밍 애플리케이션으로 전환해서 처리할 수는 없을까요? 만약 데이터 처리를 위해 Spring Batch 부터 떠올린다면 Stream Processing도 함께 살펴보시길 추천할게요.</p>\n\n<hr />\n\n<h1 id=\"quickstart\">Quickstart</h1>\n\n<p>Apache Flink 애플리케이션을 실행하기 위해서는 먼저 Flink Cluster 환경 구축이 필요합니다. 클러스터를 통해 데이터를 병렬 처리하거나 내결함성을 제공해 데이터를 효율적으로 처리할 수 있습니다. 그리고 애플리케이션을 실행한다는 말은 Flink에 정의한 Job을 실행한다는 의미이기도 합니다. Cluster에는 실행 가능한 Jar 파일을 제출하면 되는데, 자바 애플리케이션 코드를 작성해서 빌드한 결과로 나온 Jar 파일을 제출하면 됩니다.</p>\n\n<p>Production 환경에서 Flink 애플리케이션을 실행하려면 <a href=\"https://aws.amazon.com/managed-service-apache-flink/\">Amazon Managed Service for Apache Flink</a> 같은 솔루션을 써도 되고, <a href=\"https://nightlies.apache.org/flink/flink-kubernetes-operator-docs-stable/docs/try-flink-kubernetes-operator/quick-start/\">Flink Kubernetes Operator</a>를 이용해서 Kubernetes 위에서 Flink Cluster와 Job을 배포하고 관리할 수 있습니다. 여기서는 Mac OS 환경의 로컬 PC에서 Apache Flink 애플리케이션을 실행하는 여러 방법을 살펴보겠습니다.</p>\n\n<h3 id=\"1-idea에서-프로그램-실행\">1. IDEA에서 프로그램 실행</h3>\n\n<p>가장 편하고 유용한 방법은 IntelliJ IDEA에서 main 함수를 바로 실행하는 것입니다. Flink 애플리케이션을 실행하려면 Cluster에 실행 가능한 Jar 파일을 제출해야 되는데, IDEA에서 버튼만 누르면 바로 실행이 되고 디버깅까지 되니 신기할 따름입니다. 그 이유는 Apache Flink에서는 로컬 환경에서 Flink Cluster를 에뮬레이션할 수 있게끔 <a href=\"https://github.com/apache/flink/blob/master/flink-runtime/src/main/java/org/apache/flink/runtime/minicluster/MiniCluster.java\">MiniCluster</a>를 제공하기 때문입니다. 그래서 Flink 애플리케이션을 만드는 개발자는 실제 클러스터를 구축할 필요 없이 로컬 환경에서 Flink Cluster에 앱을 실행하는 것처럼 시뮬레이션을 할 수 있습니다.</p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-run-application.png\" alt=\"IDEA Run Application\" title=\"IDEA Run Application\" class=\"center-image\" /></p>\n\n<h3 id=\"2-local-flink-cluster-구축\">2. Local Flink Cluster 구축</h3>\n\n<p>또 다른 방법은 직접 Flink Cluster를 로컬 환경에 구축해서 사용하는 것입니다. <a href=\"https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/try-flink/local_installation/\">Apache Flink 공식 문서</a>에서 Local Cluster를 구축할 수 있는 가이드를 제공하고 있습니다. Binary Release를 다운 받아서 압축을 푼 다음 아래 명령어를 실행해서 Flink Cluster를 시작하고 Jar 파일을 실행시켜서 Job을 제출할 수 있습니다.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Flink Cluser 중지\n$ ./bin/stop-cluster.sh\n\n# Flink Cluser 시작\n$ ./bin/start-cluster.sh\n\n# Flink Cluster에 Flink Job 제출(실행)\n$ ./bin/flink run examples/streaming/WordCount.jar\n\n# Flink Cluster 로그 확인\n$ tail -f log/flink-*\n</code></pre></div></div>\n\n<h3 id=\"2-1-idea에-flink-plugin-설치\">2-1. IDEA에 Flink Plugin 설치</h3>\n\n<p>IntelliJ IDEA에서 Big Data Tools 플러그인 번들로 함께 사용할 수 있는 <a href=\"https://plugins.jetbrains.com/plugin/21702-flink\">Flink Plugin</a>을 제공합니다. 이 플러그인을 사용하면 Flink Cluster를 모니터링하거나 직접 Flink Job을 제출할 수 있는 기능을 제공합니다.</p>\n\n<p><img src=\"/images/2024/09/18/idea-settings-flink.png\" alt=\"IDEA Settings\" title=\"IDEA Settings\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/09/18/idea-settings-flink-test-connection.png\" alt=\"IDEA Test Connection\" title=\"IDEA Test Connection\" class=\"center-image\" /></p>\n\n<h3 id=\"2-2-local-cluster에-jar-제출\">2-2. Local Cluster에 Jar 제출</h3>\n\n<p>IDEA에 생성된 Flink Console에서 Submit New Job 클릭후 + 버튼을 누르면 빌드된 Jar 파일을 선택할 수 있습니다. Jar 파일을 선택하고 나서 실행(Run) 버튼을 클릭하면 Flink Cluster에 Jar 파일이 제출되고 정상이라면 Job이 실행됩니다.</p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-submit-new-job.png\" alt=\"IDEA Submit New Job\" title=\"IDEA Submit New Job\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-run-jar.png\" alt=\"IDEA Run Jar\" title=\"IDEA Run Jar\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-run-jar-2.png\" alt=\"IDEA Run Jar\" title=\"IDEA Run Jar\" class=\"center-image\" /></p>\n\n<h3 id=\"2-3-local-cluster-모니터링\">2-3. Local Cluster 모니터링</h3>\n\n<p>Console에서 Open in Browser 버튼을 클릭하면 현재 모니터링으로 연결된 Cluster의 상태를 확인할 수 있는 대시보드가 열립니다. 이 대시보드에서는 현재 실행중인 Job을 포함하여 Flink Cluster의 Task Manager, Job Manager 그리고 Clsuter logs 등을 확인할 수 있습니다.</p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-cluster-web.png\" alt=\"IDEA Cluster Web\" title=\"IDEA Cluster Web\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-cluster-dashboard.png\" alt=\"IDEA Cluster Dashboard\" title=\"IDEA Cluster Dashboard\" class=\"center-image\" /></p>\n\n<hr />\n\n<h1 id=\"hello-world\">Hello, World!</h1>\n\n<p>이제 Flink 애플리케이션 실행 환경이 구축되었으니 모든 프로그래밍의 시작인 Hello, World를 만들어보겠습니다. 프로그래밍 언어의 첫 시작은 콘솔에 <code class=\"language-plaintext highlighter-rouge\">Hello, World!</code> 문자열을 출력하는 것인데, 데이터 프로세싱에서는 단어 개수를 세는 Word Count를 입문용 예제로 다루고 있습니다. 여기서는 Flink를 활용해 문자열에 포함된 특정 단어들의 개수를 출력하는 Word Count Job을 만들어보겠습니다. 전체 코드는 <a href=\"https://github.com/sungjk/flink-hello-world\">Github - flink-hello-world</a>에서 확인할 수 있어요.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.api.common.functions.FlatMapFunction</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.api.common.typeinfo.TypeHint</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.api.common.typeinfo.TypeInformation</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.api.java.tuple.Tuple2</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.streaming.api.environment.StreamExecutionEnvironment</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.util.Collector</span>\n\n<span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">WordCounterJob</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 데이터 소스로 사용할 문자열</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">words</span> <span class=\"p\">=</span> <span class=\"s\">\"\"\"\n            The quick brown fox jumps over the lazy dog.\n            The quick blue fox jumps over the lazy dog.\n            The quick brown cat jumps over the lazy dog.\n            The quick blue cat jumps over the lazy dog.\n        \"\"\"</span><span class=\"p\">.</span><span class=\"nf\">trimIndent</span><span class=\"p\">()</span>\n\n    <span class=\"k\">fun</span> <span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nc\">Array</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;)</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 스트리밍 실행 환경 생성</span>\n        <span class=\"kd\">val</span> <span class=\"py\">env</span> <span class=\"p\">=</span> <span class=\"nc\">StreamExecutionEnvironment</span><span class=\"p\">.</span><span class=\"nf\">getExecutionEnvironment</span><span class=\"p\">()</span>\n        <span class=\"c1\">// 문자열 데이터 소스 생성</span>\n        <span class=\"kd\">val</span> <span class=\"py\">source</span> <span class=\"p\">=</span> <span class=\"n\">env</span><span class=\"p\">.</span><span class=\"nf\">fromData</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">).</span><span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"s\">\"in-memory-source\"</span><span class=\"p\">)</span>\n        <span class=\"kd\">val</span> <span class=\"py\">counts</span> <span class=\"p\">=</span> <span class=\"n\">source</span>\n            <span class=\"p\">.</span><span class=\"nf\">flatMap</span><span class=\"p\">(</span><span class=\"kd\">object</span> <span class=\"err\">: </span><span class=\"nc\">FlatMapFunction</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Tuple2</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Int</span><span class=\"p\">&gt;&gt;</span> <span class=\"p\">{</span>\n                <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">flatMap</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"k\">out</span><span class=\"p\">:</span> <span class=\"nc\">Collector</span><span class=\"p\">&lt;</span><span class=\"nc\">Tuple2</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Int</span><span class=\"p\">&gt;&gt;)</span> <span class=\"p\">{</span>\n                    <span class=\"c1\">// 입력 문자열을 소문자로 변환하고, 정규식을 사용하여 단어로 분리</span>\n                    <span class=\"kd\">val</span> <span class=\"py\">tokens</span> <span class=\"p\">=</span> <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"nf\">lowercase</span><span class=\"p\">().</span><span class=\"nf\">split</span><span class=\"p\">(</span><span class=\"s\">\"\\\\W+\"</span><span class=\"p\">.</span><span class=\"nf\">toRegex</span><span class=\"p\">())</span>\n                    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">token</span> <span class=\"k\">in</span> <span class=\"n\">tokens</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">.</span><span class=\"nf\">isNotEmpty</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n                            <span class=\"c1\">// 각 단어와 그 단어의 개수를 나타내는 튜플(Tuple2&lt;String, Int&gt;)로 수집</span>\n                            <span class=\"k\">out</span><span class=\"p\">.</span><span class=\"nf\">collect</span><span class=\"p\">(</span><span class=\"nc\">Tuple2</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">})</span>\n            <span class=\"c1\">// 반환 타입 정보 지정(Generic 타입의 한계를 해결하기 위해 TypeInformation을 사용)</span>\n            <span class=\"p\">.</span><span class=\"nf\">returns</span><span class=\"p\">(</span><span class=\"nc\">TypeInformation</span><span class=\"p\">.</span><span class=\"nf\">of</span><span class=\"p\">(</span><span class=\"kd\">object</span> <span class=\"err\">: </span><span class=\"nc\">TypeHint</span><span class=\"p\">&lt;</span><span class=\"nc\">Tuple2</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Int</span><span class=\"p\">&gt;&gt;()</span> <span class=\"p\">{}))</span>\n            <span class=\"p\">.</span><span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"s\">\"tokenizer\"</span><span class=\"p\">)</span>\n            <span class=\"c1\">// 단어별로 그룹핑</span>\n            <span class=\"p\">.</span><span class=\"nf\">keyBy</span> <span class=\"p\">{</span> <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"n\">f0</span> <span class=\"p\">}</span>\n            <span class=\"c1\">// 각 그룹별로 두번째 필드인 단어의 개수를 합산</span>\n            <span class=\"p\">.</span><span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"s\">\"counter\"</span><span class=\"p\">)</span>\n        <span class=\"c1\">// 최종 결과를 표준 출력에 출력하는 싱크 연산 추가</span>\n        <span class=\"n\">counts</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">().</span><span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"s\">\"print-sink\"</span><span class=\"p\">)</span>\n        <span class=\"c1\">// 스트리밍 작업 실행</span>\n        <span class=\"n\">env</span><span class=\"p\">.</span><span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"s\">\"JeremyWordCount\"</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>아마 95% 이상의 Flink 애플리케이션은 Java 언어로 작성되어 있을거라 생각합니다(샘플 예제를 몇가지 찾아봤지만 코틀린 코드는 발견하지 못했어요). 저는 자바 언어를 썩 즐겨 쓰지는 않아서 Flink 애플리케이션도 Kotlin으로 작성하고 있습니다. 그러다보니 아주 간혹 타입 때문에 귀찮을 때가 있는데 크게 불편할 정도는 아닙니다.</p>\n\n<hr />\n\n<h1 id=\"troubleshootings\">Troubleshootings</h1>\n\n<p>실행 환경 구축부터 스스로 Word Count 앱을 작성하기까지 몇가지 우여곡절이 있었습니다. 코드는 정말 몇 줄 안되는데 빌드 과정, Jar 파일 생성 문제, Java의 Type Erase 현상 등 여러 문제들을 겪고 해결하는 과정을 거쳤습니다.</p>\n\n<h3 id=\"jar-내에-main-class-찾을-수-없음\">Jar 내에 Main class 찾을 수 없음</h3>\n\n<p>에러 로그:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">Neither</span> <span class=\"n\">a</span> <span class=\"err\">'</span><span class=\"nc\">Main</span><span class=\"o\">-</span><span class=\"nc\">Class</span><span class=\"err\">'</span><span class=\"o\">,</span> <span class=\"n\">nor</span> <span class=\"n\">a</span> <span class=\"err\">'</span><span class=\"n\">program</span><span class=\"o\">-</span><span class=\"kd\">class</span><span class=\"err\">'</span> <span class=\"nc\">entry</span> <span class=\"n\">was</span> <span class=\"n\">found</span> <span class=\"n\">in</span> <span class=\"n\">the</span> <span class=\"n\">jar</span> <span class=\"n\">file</span><span class=\"o\">.</span>\n</code></pre></div></div>\n\n<p>(해결 방법) Jar file에 Main class name 명시:</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// application(main)</span>\n<span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"p\">{</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nc\">Array</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;)</span> <span class=\"p\">{</span>\n        <span class=\"o\">..</span><span class=\"p\">.</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// entry point is not a method inside the class</span>\n    <span class=\"c1\">// use @JvmStatic annotation inside the companion object</span>\n    <span class=\"k\">companion</span> <span class=\"k\">object</span> <span class=\"p\">:</span> <span class=\"nc\">Logger</span> <span class=\"p\">{</span>\n        <span class=\"nd\">@JvmStatic</span>\n        <span class=\"k\">fun</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nc\">Array</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;)</span> <span class=\"p\">{</span>\n            <span class=\"kd\">val</span> <span class=\"py\">main</span> <span class=\"p\">=</span> <span class=\"nc\">Main</span><span class=\"p\">()</span>\n            <span class=\"n\">main</span><span class=\"p\">.</span><span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// build.gradle.kts</span>\n<span class=\"n\">tasks</span><span class=\"p\">.</span><span class=\"nf\">jar</span> <span class=\"p\">{</span>\n    <span class=\"n\">archiveFileName</span><span class=\"p\">.</span><span class=\"k\">set</span><span class=\"p\">(</span><span class=\"s\">\"hello-world.jar\"</span><span class=\"p\">)</span>\n    <span class=\"nf\">manifest</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// add main class name</span>\n        <span class=\"n\">attributes</span><span class=\"p\">[</span><span class=\"s\">\"Main-Class\"</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"io.sungjk.flink.Main\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"jar-내에-flink-job-찾을-수-없음\">Jar 내에 Flink Job 찾을 수 없음</h3>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">Could</span> <span class=\"n\">not</span> <span class=\"n\">get</span> <span class=\"n\">job</span> <span class=\"n\">jar</span> <span class=\"n\">and</span> <span class=\"n\">dependencies</span> <span class=\"n\">from</span> <span class=\"no\">JAR</span> <span class=\"nl\">file:</span> <span class=\"no\">JAR</span> <span class=\"n\">file</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"nl\">exist:</span> <span class=\"o\">...</span>\n</code></pre></div></div>\n\n<p>(해결 방법) Main Class 내에 테스트할 Job 추가:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"n\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">WordCounterJob</span> <span class=\"o\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">fun</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"nl\">args:</span> <span class=\"nc\">Array</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;)</span> <span class=\"o\">{</span>\n        <span class=\"n\">val</span> <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"nc\">StreamExecutionEnvironment</span><span class=\"o\">.</span><span class=\"na\">getExecutionEnvironment</span><span class=\"o\">()</span>\n        <span class=\"o\">...</span>\n        <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"na\">execute</span><span class=\"o\">(</span><span class=\"s\">\"JeremyWordCount\"</span><span class=\"o\">)</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"gradle-모듈-의존성-찾지-못함\">gradle 모듈 의존성 찾지 못함</h3>\n\n<p>에러 로그:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">program</span><span class=\"o\">.</span><span class=\"na\">ProgramInvocationException</span><span class=\"o\">:</span> <span class=\"nc\">An</span> <span class=\"n\">error</span> <span class=\"n\">occurred</span> <span class=\"k\">while</span> <span class=\"n\">invoking</span> <span class=\"n\">the</span> <span class=\"n\">program</span><span class=\"err\">'</span><span class=\"n\">s</span> <span class=\"n\">main</span> <span class=\"nl\">method:</span> <span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">sungjk</span><span class=\"o\">/</span><span class=\"n\">flink</span><span class=\"o\">/</span><span class=\"n\">common</span><span class=\"o\">/</span><span class=\"n\">utils</span><span class=\"o\">/</span><span class=\"nc\">Logger</span>\n\t<span class=\"n\">at</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">program</span><span class=\"o\">.</span><span class=\"na\">PackagedProgram</span><span class=\"o\">.</span><span class=\"na\">callMainMethod</span><span class=\"o\">(</span><span class=\"nc\">PackagedProgram</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">378</span><span class=\"o\">)</span>\n\t<span class=\"n\">at</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">program</span><span class=\"o\">.</span><span class=\"na\">PackagedProgram</span><span class=\"o\">.</span><span class=\"na\">invokeInteractiveModeForExecution</span><span class=\"o\">(</span><span class=\"nc\">PackagedProgram</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">223</span><span class=\"o\">)</span>\n\t<span class=\"n\">at</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">ClientUtils</span><span class=\"o\">.</span><span class=\"na\">executeProgram</span><span class=\"o\">(</span><span class=\"nc\">ClientUtils</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">)</span>\n\t<span class=\"n\">at</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">cli</span><span class=\"o\">.</span><span class=\"na\">CliFrontend</span><span class=\"o\">.</span><span class=\"na\">executeProgram</span><span class=\"o\">(</span><span class=\"nc\">CliFrontend</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">1026</span><span class=\"o\">)</span>\n</code></pre></div></div>\n\n<p>(해결 방법) Shadow Plugin 사용해서 모든 의존성을 단일 JAR 파일로 패키징한 후 shadowJar task 실행:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">plugins</span> <span class=\"o\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">id</span><span class=\"o\">(</span><span class=\"s\">\"com.github.johnrengelman.shadow\"</span><span class=\"o\">)</span> <span class=\"n\">version</span> <span class=\"s\">\"7.1.2\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"na\">shadowJar</span> <span class=\"o\">{</span>\n    <span class=\"n\">archiveFileName</span><span class=\"o\">.</span><span class=\"na\">set</span><span class=\"o\">(</span><span class=\"s\">\"hello-world.jar\"</span><span class=\"o\">)</span>\n    <span class=\"n\">manifest</span> <span class=\"o\">{</span>\n        <span class=\"n\">attributes</span><span class=\"o\">[</span><span class=\"s\">\"Main-Class\"</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"io.sungjk.flink.Main\"</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n<span class=\"o\">...</span>\n</code></pre></div></div>\n\n<h3 id=\"flink-cluster에서-타입-추론-불가type-erasure\">Flink Cluster에서 타입 추론 불가(Type Erasure)</h3>\n\n<p>에러 로그:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">The</span> <span class=\"k\">return</span> <span class=\"n\">type</span> <span class=\"n\">of</span> <span class=\"n\">function</span> <span class=\"err\">'</span><span class=\"n\">execute</span><span class=\"o\">(</span><span class=\"nc\">Main</span><span class=\"o\">.</span><span class=\"na\">kt</span><span class=\"o\">)</span><span class=\"err\">'</span> <span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">be</span> <span class=\"n\">determined</span> <span class=\"n\">automatically</span><span class=\"o\">,</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">type</span> <span class=\"n\">erasure</span><span class=\"o\">.</span> <span class=\"nc\">You</span> <span class=\"n\">can</span> <span class=\"n\">give</span> <span class=\"n\">type</span> <span class=\"n\">information</span> <span class=\"n\">hints</span> <span class=\"n\">by</span> <span class=\"n\">using</span> <span class=\"n\">the</span> <span class=\"nf\">returns</span><span class=\"o\">(...)</span> <span class=\"n\">method</span> <span class=\"n\">on</span> <span class=\"n\">the</span> <span class=\"n\">result</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">transformation</span> <span class=\"n\">call</span><span class=\"o\">,</span> <span class=\"n\">or</span> <span class=\"n\">by</span> <span class=\"n\">letting</span> <span class=\"n\">your</span> <span class=\"n\">function</span> <span class=\"n\">implement</span> <span class=\"n\">the</span> <span class=\"err\">'</span><span class=\"nc\">ResultTypeQueryable</span><span class=\"err\">'</span> <span class=\"kd\">interface</span><span class=\"err\">.</span>\n\t<span class=\"nc\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">api</span><span class=\"o\">.</span><span class=\"na\">dag</span><span class=\"o\">.</span><span class=\"na\">Transformation</span><span class=\"o\">.</span><span class=\"na\">getOutputType</span><span class=\"o\">(</span><span class=\"nc\">Transformation</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">557</span><span class=\"o\">)</span>\n\t<span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">streaming</span><span class=\"o\">.</span><span class=\"na\">api</span><span class=\"o\">.</span><span class=\"na\">datastream</span><span class=\"o\">.</span><span class=\"na\">DataStream</span><span class=\"o\">.</span><span class=\"na\">getType</span><span class=\"o\">(</span><span class=\"nc\">DataStream</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">193</span><span class=\"o\">)</span>\n\t<span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">streaming</span><span class=\"o\">.</span><span class=\"na\">api</span><span class=\"o\">.</span><span class=\"na\">datastream</span><span class=\"o\">.</span><span class=\"na\">KeyedStream</span><span class=\"o\">.&lt;</span><span class=\"n\">init</span><span class=\"o\">&gt;(</span><span class=\"nc\">KeyedStream</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">118</span><span class=\"o\">)</span>\n\t<span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">streaming</span><span class=\"o\">.</span><span class=\"na\">api</span><span class=\"o\">.</span><span class=\"na\">datastream</span><span class=\"o\">.</span><span class=\"na\">DataStream</span><span class=\"o\">.</span><span class=\"na\">keyBy</span><span class=\"o\">(</span><span class=\"nc\">DataStream</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">293</span><span class=\"o\">)</span>\n\t<span class=\"o\">...</span>\n</code></pre></div></div>\n\n<p>(해결 방법) Flink의 TypeInformation 클래스를 사용하여 반환 타입 명시:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">...</span>\n<span class=\"n\">val</span> <span class=\"n\">counts</span> <span class=\"o\">=</span> <span class=\"n\">source</span>\n    <span class=\"o\">.</span><span class=\"na\">flatMap</span><span class=\"o\">(</span><span class=\"n\">object</span> <span class=\"o\">:</span> <span class=\"nc\">FlatMapFunction</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">Tuple2</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">Int</span><span class=\"o\">&gt;&gt;</span> <span class=\"o\">{</span>\n        <span class=\"o\">...</span>\n    <span class=\"o\">})</span>\n    <span class=\"c1\">// Flink의 TypeInformation 클래스를 사용하여 반환 타입 명시</span>\n    <span class=\"o\">.</span><span class=\"na\">returns</span><span class=\"o\">(</span><span class=\"nc\">TypeInformation</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span><span class=\"n\">object</span> <span class=\"o\">:</span> <span class=\"nc\">TypeHint</span><span class=\"o\">&lt;</span><span class=\"nc\">Tuple2</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">Int</span><span class=\"o\">&gt;&gt;()</span> <span class=\"o\">{}))</span>\n    <span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"tokenizer\"</span><span class=\"o\">)</span>\n<span class=\"o\">...</span>\n</code></pre></div></div>\n\n<hr />\n\n<h1 id=\"마치며\">마치며</h1>\n\n<p>쏟아지는 데이터를 실시간으로 활용할 수 있는 환경이 갖추어지니 할 수 있는게 정말 많아졌습니다. 단순히 Apache Flink라는 새로운 도구에 익숙해진 건 단편적인 예시일 뿐, 데이터에 대해 눈이 떠졌다랄까요. 데이터 엔지니어 동료와 처음 티타임을 할 때 데이터에 무지한 저의 모습을 스스로 제 3자의 시각에서 바라보고 있는 느낌이 들었고, 머릿속에서는 새로운 터널에 들어서는 것만 같았습니다. 짧게는 3개월, 길게는 1년 뒤에 달라져 있을 제 모습이 상상되기도 했어요. 멋진 동료 덕분에 성장하고 있다는걸 느낄 수 있었고 도움이 필요하면 저도 많이 도와주고 싶다는 생각이 들었습니다.</p>\n\n<p>이제 백엔드 엔지니어로서 다룰 수 있는 연장이 하나 더 늘어났습니다. 경계해야 할 건 모든게 다 못으로 보이지 않게 만드는 것. 실시간으로 데이터를 처리할 수 있는 능력이 생겼으니 모든 곳에 다 스트림 앱을 갖다 붙이고 싶을 수 있습니다. 그래서 이 도구로 해결하기에 적당한 문제가 무엇인지 알고 있는게 중요한데요. 처리할 데이터 소스와 싱크를 지원하는지 알아보고, 실시간성(Real-time) 그리고 Window 기반으로 이벤트를 처리해야 할 문제에 Flink를 추천하고 싶습니다. 실시간으로 발생하는 거래 데이터가 정상인지, 이상거래는 아닌지 <a href=\"https://flink.apache.org/what-is-flink/flink-applications/#state\">State</a>와 <a href=\"https://flink.apache.org/what-is-flink/flink-applications/#time\">Time</a>을 활용해서 판단할 수 있습니다.</p>\n\n<p>마지막으로, 한국에도 Flink를 사용하는 회사들이 점점 많아지고 있는것 같은데, 기술 교류와 레퍼런스가 많아졌으면 좋겠다는 생각이 들었습니다. 생태계는 계속해서 발전하고 있다는 느낌이 드는데, 대부분 비슷하겠지만 구체적으로 어떤 니즈를 가지고 이 기술을 도입해서 사용하고 있는지가 궁금했습니다. 자주, 더 많은 기술 공유가 있기를!</p>\n\n<hr />\n\n<h1 id=\"references\">References</h1>\n<ul>\n  <li><a href=\"https://flink.apache.org/\">Apache Flink</a></li>\n  <li><a href=\"https://www.confluent.io/learn/apache-flink/\">What is Apache Flink?</a></li>\n</ul>",
        "guid": "https://sungjk.github.io/2024/09/18/apache-flink.html",
        "isoDate": "2024-09-18T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "메모리를 이용해 ChatGPT에서 맞춤형 결과 얻는 방법",
        "link": "http://muzbox.tistory.com/483473",
        "pubDate": "Fri, 20 Sep 2024 07:26:34 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483473#entry483473comment",
        "content": "<p data-ke-size=\"size16\">ChatGPT의 메모리 기능을 활용하면 매번 처음부터 설명하지 않아도, 개인의 취향과 선호도에 맞춘 맞춤형 답변을 받을 수 있습니다. 이 블로그에서는 메모리 기능을 설정하고 활용하는 방법에 대해 자세히 다룹니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"메모리를 이용해 ChatGPT에서 맞춤형 결과 얻는 방법.png\" data-origin-width=\"1280\" data-origin-height=\"731\"><span data-url=\"https://blog.kakaocdn.net/dn/p8muB/btsJEicKVXm/q3WdVpOUUZ8fTaLyR5joBk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/p8muB/btsJEicKVXm/q3WdVpOUUZ8fTaLyR5joBk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/p8muB/btsJEicKVXm/q3WdVpOUUZ8fTaLyR5joBk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fp8muB%2FbtsJEicKVXm%2Fq3WdVpOUUZ8fTaLyR5joBk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"메모리를 이용해 ChatGPT에서 맞춤형 결과 얻는 방법\" data-filename=\"메모리를 이용해 ChatGPT에서 맞춤형 결과 얻는 방법.png\" data-origin-width=\"1280\" data-origin-height=\"731\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">최근 인공지능 기술이 급격히 발전하면서, 많은 사람들이 ChatGPT 같은 챗봇을 일상적인 도구로 활용하고 있습니다. 하지만 ChatGPT를 더 효율적으로 사용하는 방법 중 하나는 바로 '메모리' 기능입니다. 이 기능을 통해 챗봇이 사용자의 선호도나 과거 대화 내용을 기억하여 더 개인화된 답변을 제공할 수 있습니다. 이번 글에서는 ChatGPT의 메모리 기능이 무엇인지, 어떻게 설정하고 활용할 수 있는지 알아보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>ChatGPT 메모리 기능이란?</b></span></h2>\n<p data-ke-size=\"size16\">ChatGPT의 메모리 기능은 단순한 대화형 인공지능을 넘어 사용자의 과거 대화 내용을 기억하고, 이를 기반으로 맞춤형 답변을 제공하는 기능입니다. 예를 들어, 사용자가 \"저는 야외 활동을 좋아합니다\"라고 말하면, ChatGPT는 이 정보를 기억하고 향후 활동 추천 시 이러한 취향을 반영하게 됩니다.</p>\n<p data-ke-size=\"size16\">메모리 기능은 대화 중 자연스럽게 저장되며, 사용자는 명령어를 통해 특정 내용을 기억하거나 잊도록 지시할 수 있습니다. 이를 통해 매번 대화를 처음부터 다시 시작하지 않고, 사용자의 선호도와 성향에 맞춘 더 나은 답변을 받을 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>메모리 기능의 장점</b></span></h2>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>맞춤형 추천</b>: ChatGPT는 사용자의 취향을 기억하여 일관성 있는 추천을 제공합니다. 예를 들어, 사용자가 아침 운동을 선호한다고 입력하면, 이후 운동 루틴 제안 시 이러한 정보를 반영하여 더욱 개인화된 추천을 받을 수 있습니다.</li>\n<li><b>대화 시간 절약</b>: 매번 취향을 설명할 필요가 없기 때문에 대화 시간이 단축됩니다. 이는 특히 자주 대화하는 경우 매우 유용합니다.</li>\n<li><b>자연스러운 정보 업데이트</b>: 사용자의 취향이 바뀌면 \"아침 운동을 좋아한다는 정보를 잊어줘\"와 같은 간단한 명령어로 메모리를 수정할 수 있습니다.</li>\n<li><b>개인화된 피드백</b>: 음식 조리법을 찾을 때도 사용자의 시간 제약이나 재료 선호도를 기억하여 맞춤형 요리법을 추천해줍니다.</li>\n<li><b>기억 관리 기능</b>: 설정 메뉴에서 저장된 메모리를 관리할 수 있으며, 필요 시 삭제하거나 기능을 비활성화할 수도 있습니다.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>ChatGPT 메모리 기능의 사용법</b></span></h2>\n<h3 data-ke-size=\"size23\">1. 설정 방법</h3>\n<p data-ke-size=\"size16\">ChatGPT에서 메모리 기능을 사용하려면 설정 메뉴에서 개인화 탭으로 이동하여 메모리 기능을 활성화해야 합니다. 여기서 \"기억 관리\" 옵션을 통해 저장된 메모리를 확인하고, 불필요한 내용을 삭제할 수도 있습니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"U1.png\" data-origin-width=\"1223\" data-origin-height=\"646\"><span data-url=\"https://blog.kakaocdn.net/dn/EiwVd/btsJFad0uwT/sNTAwhiy3xkCCj3PQYxYIK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/EiwVd/btsJFad0uwT/sNTAwhiy3xkCCj3PQYxYIK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/EiwVd/btsJFad0uwT/sNTAwhiy3xkCCj3PQYxYIK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FEiwVd%2FbtsJFad0uwT%2FsNTAwhiy3xkCCj3PQYxYIK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"U1.png\" data-origin-width=\"1223\" data-origin-height=\"646\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"U2.png\" data-origin-width=\"1180\" data-origin-height=\"609\"><span data-url=\"https://blog.kakaocdn.net/dn/dmJKxb/btsJE1IbP7Q/QHOth18WBqnBiKwnVFxJWK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dmJKxb/btsJE1IbP7Q/QHOth18WBqnBiKwnVFxJWK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dmJKxb/btsJE1IbP7Q/QHOth18WBqnBiKwnVFxJWK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdmJKxb%2FbtsJE1IbP7Q%2FQHOth18WBqnBiKwnVFxJWK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"U2.png\" data-origin-width=\"1180\" data-origin-height=\"609\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">2. 대화 중 메모리 저장</h3>\n<p data-ke-size=\"size16\">대화 도중, 사용자가 특정 정보를 기억하게 하고 싶다면, \"내가 아침 운동을 좋아한다는 것을 기억해줘\"와 같이 자연스럽게 요청할 수 있습니다. 이렇게 입력하면, ChatGPT는 이후 대화에서 해당 정보를 반영하여 맞춤형 답변을 제공합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"t1.jpg\" data-origin-width=\"1917\" data-origin-height=\"859\"><span data-url=\"https://blog.kakaocdn.net/dn/vBIfn/btsJG6gMgNB/UrcGQlNnId2XLJoEddCHK0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/vBIfn/btsJG6gMgNB/UrcGQlNnId2XLJoEddCHK0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/vBIfn/btsJG6gMgNB/UrcGQlNnId2XLJoEddCHK0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FvBIfn%2FbtsJG6gMgNB%2FUrcGQlNnId2XLJoEddCHK0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"t1.jpg\" data-origin-width=\"1917\" data-origin-height=\"859\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"t2.jpg\" data-origin-width=\"1572\" data-origin-height=\"322\"><span data-url=\"https://blog.kakaocdn.net/dn/bI1Dvo/btsJF691B9h/2Kuf1E0yQX08PcFP1DLQP0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bI1Dvo/btsJF691B9h/2Kuf1E0yQX08PcFP1DLQP0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bI1Dvo/btsJF691B9h/2Kuf1E0yQX08PcFP1DLQP0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbI1Dvo%2FbtsJF691B9h%2F2Kuf1E0yQX08PcFP1DLQP0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"t2.jpg\" data-origin-width=\"1572\" data-origin-height=\"322\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">3. 메모리 삭제</h3>\n<p data-ke-size=\"size16\">메모리 기능을 관리하는 것은 간단합니다. 취향이 바뀌었을 때는 \"아침 운동 선호를 잊어줘\"와 같은 명령어로 메모리를 삭제할 수 있습니다. 또한 설정에서 전체 메모리를 한꺼번에 삭제하거나, 특정 메모리만 삭제하는 것도 가능합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"t3.jpg\" data-origin-width=\"1914\" data-origin-height=\"859\"><span data-url=\"https://blog.kakaocdn.net/dn/chOUAB/btsJGg5CMal/nEg5ur2wYZLozgp0qqbsXk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/chOUAB/btsJGg5CMal/nEg5ur2wYZLozgp0qqbsXk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/chOUAB/btsJGg5CMal/nEg5ur2wYZLozgp0qqbsXk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FchOUAB%2FbtsJGg5CMal%2FnEg5ur2wYZLozgp0qqbsXk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"t3.jpg\" data-origin-width=\"1914\" data-origin-height=\"859\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">4. 메모리 확인</h3>\n<p data-ke-size=\"size16\">현재 ChatGPT가 어떤 정보를 기억하고 있는지 궁금하다면 \"너는 나에 대해 무엇을 기억하고 있니?\"라는 질문을 던지면 됩니다. 그러면 ChatGPT는 저장된 정보를 요약해 보여줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>메모리 기능 활용 예시</b></span></h2>\n<p data-ke-size=\"size16\">메모리 기능은 다양한 상황에서 유용하게 활용될 수 있습니다. 특히 일상적인 활동을 더 효율적으로 관리할 수 있도록 도와줍니다.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>운동 계획</b>: 아침에 간단한 홈트레이닝을 선호하는 사용자는 매번 설명하지 않아도, ChatGPT가 선호도에 맞춘 운동 루틴을 제안해줍니다.</li>\n<li><b>식단 관리</b>: 바쁜 일상 속에서 빠르게 준비할 수 있는 레시피를 요청할 때, ChatGPT는 사용자의 시간 제약과 식재료 선호도를 기억하고 맞춤형 제안을 제공합니다.</li>\n<li><b>기억 관리</b>: 메모리 기능을 사용하면 ChatGPT가 사용자의 과거 대화를 토대로 더 정확한 답변을 제공하며, 일관성 있는 조언을 받을 수 있습니다.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>결론</b></span></h2>\n<p data-ke-size=\"size16\">ChatGPT의 메모리 기능을 활용하면, 인공지능 챗봇이 단순히 질문에 답변하는 것에서 더 나아가, 사용자의 성향과 선호도를 반영하여 더 개인화된 답변을 제공합니다. 이를 통해 매번 처음부터 다시 설명할 필요 없이 일관성 있고 효율적인 대화를 이어갈 수 있습니다. 메모리 기능을 활성화하고 적절히 활용하여, ChatGPT의 잠재력을 극대화해보세요.</p>",
        "contentSnippet": "ChatGPT의 메모리 기능을 활용하면 매번 처음부터 설명하지 않아도, 개인의 취향과 선호도에 맞춘 맞춤형 답변을 받을 수 있습니다. 이 블로그에서는 메모리 기능을 설정하고 활용하는 방법에 대해 자세히 다룹니다.\n\n\n \n최근 인공지능 기술이 급격히 발전하면서, 많은 사람들이 ChatGPT 같은 챗봇을 일상적인 도구로 활용하고 있습니다. 하지만 ChatGPT를 더 효율적으로 사용하는 방법 중 하나는 바로 '메모리' 기능입니다. 이 기능을 통해 챗봇이 사용자의 선호도나 과거 대화 내용을 기억하여 더 개인화된 답변을 제공할 수 있습니다. 이번 글에서는 ChatGPT의 메모리 기능이 무엇인지, 어떻게 설정하고 활용할 수 있는지 알아보겠습니다.\n \nChatGPT 메모리 기능이란?\nChatGPT의 메모리 기능은 단순한 대화형 인공지능을 넘어 사용자의 과거 대화 내용을 기억하고, 이를 기반으로 맞춤형 답변을 제공하는 기능입니다. 예를 들어, 사용자가 \"저는 야외 활동을 좋아합니다\"라고 말하면, ChatGPT는 이 정보를 기억하고 향후 활동 추천 시 이러한 취향을 반영하게 됩니다.\n메모리 기능은 대화 중 자연스럽게 저장되며, 사용자는 명령어를 통해 특정 내용을 기억하거나 잊도록 지시할 수 있습니다. 이를 통해 매번 대화를 처음부터 다시 시작하지 않고, 사용자의 선호도와 성향에 맞춘 더 나은 답변을 받을 수 있습니다.\n \n \n메모리 기능의 장점\n맞춤형 추천: ChatGPT는 사용자의 취향을 기억하여 일관성 있는 추천을 제공합니다. 예를 들어, 사용자가 아침 운동을 선호한다고 입력하면, 이후 운동 루틴 제안 시 이러한 정보를 반영하여 더욱 개인화된 추천을 받을 수 있습니다.\n대화 시간 절약: 매번 취향을 설명할 필요가 없기 때문에 대화 시간이 단축됩니다. 이는 특히 자주 대화하는 경우 매우 유용합니다.\n자연스러운 정보 업데이트: 사용자의 취향이 바뀌면 \"아침 운동을 좋아한다는 정보를 잊어줘\"와 같은 간단한 명령어로 메모리를 수정할 수 있습니다.\n개인화된 피드백: 음식 조리법을 찾을 때도 사용자의 시간 제약이나 재료 선호도를 기억하여 맞춤형 요리법을 추천해줍니다.\n기억 관리 기능: 설정 메뉴에서 저장된 메모리를 관리할 수 있으며, 필요 시 삭제하거나 기능을 비활성화할 수도 있습니다.\n \nChatGPT 메모리 기능의 사용법\n1. 설정 방법\nChatGPT에서 메모리 기능을 사용하려면 설정 메뉴에서 개인화 탭으로 이동하여 메모리 기능을 활성화해야 합니다. 여기서 \"기억 관리\" 옵션을 통해 저장된 메모리를 확인하고, 불필요한 내용을 삭제할 수도 있습니다. ▼\n\n\n\n2. 대화 중 메모리 저장\n대화 도중, 사용자가 특정 정보를 기억하게 하고 싶다면, \"내가 아침 운동을 좋아한다는 것을 기억해줘\"와 같이 자연스럽게 요청할 수 있습니다. 이렇게 입력하면, ChatGPT는 이후 대화에서 해당 정보를 반영하여 맞춤형 답변을 제공합니다. ▼\n\n\n\n3. 메모리 삭제\n메모리 기능을 관리하는 것은 간단합니다. 취향이 바뀌었을 때는 \"아침 운동 선호를 잊어줘\"와 같은 명령어로 메모리를 삭제할 수 있습니다. 또한 설정에서 전체 메모리를 한꺼번에 삭제하거나, 특정 메모리만 삭제하는 것도 가능합니다. ▼\n\n\n4. 메모리 확인\n현재 ChatGPT가 어떤 정보를 기억하고 있는지 궁금하다면 \"너는 나에 대해 무엇을 기억하고 있니?\"라는 질문을 던지면 됩니다. 그러면 ChatGPT는 저장된 정보를 요약해 보여줍니다.\n \n \n메모리 기능 활용 예시\n메모리 기능은 다양한 상황에서 유용하게 활용될 수 있습니다. 특히 일상적인 활동을 더 효율적으로 관리할 수 있도록 도와줍니다.\n운동 계획: 아침에 간단한 홈트레이닝을 선호하는 사용자는 매번 설명하지 않아도, ChatGPT가 선호도에 맞춘 운동 루틴을 제안해줍니다.\n식단 관리: 바쁜 일상 속에서 빠르게 준비할 수 있는 레시피를 요청할 때, ChatGPT는 사용자의 시간 제약과 식재료 선호도를 기억하고 맞춤형 제안을 제공합니다.\n기억 관리: 메모리 기능을 사용하면 ChatGPT가 사용자의 과거 대화를 토대로 더 정확한 답변을 제공하며, 일관성 있는 조언을 받을 수 있습니다.\n \n결론\nChatGPT의 메모리 기능을 활용하면, 인공지능 챗봇이 단순히 질문에 답변하는 것에서 더 나아가, 사용자의 성향과 선호도를 반영하여 더 개인화된 답변을 제공합니다. 이를 통해 매번 처음부터 다시 설명할 필요 없이 일관성 있고 효율적인 대화를 이어갈 수 있습니다. 메모리 기능을 활성화하고 적절히 활용하여, ChatGPT의 잠재력을 극대화해보세요.",
        "guid": "http://muzbox.tistory.com/483473",
        "categories": [
          "AI, 미래기술/채팅",
          "chatgpt 맞춤형 답변",
          "chatgpt 메모리",
          "chatgpt 설정",
          "대화형 AI",
          "맞춤형 추천",
          "메모리 관리",
          "인공지능 챗봇",
          "테"
        ],
        "isoDate": "2024-09-19T22:26:34.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "(AI 프롬프트 다이어리) 효율적인 회의를 위한 준비 가이드: 핵심 체크리스트",
        "link": "http://muzbox.tistory.com/483472",
        "pubDate": "Thu, 19 Sep 2024 21:50:59 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483472#entry483472comment",
        "content": "<p data-ke-size=\"size16\">중요한 회의를 준비할 때 필수적으로 고려해야 할 다섯 가지 요소를 알아보세요. 회의 목적 설정, 자료 준비, 역할 분배, 시간 관리, 후속 조치까지, 성공적인 회의를 위한 상세한 가이드와 실제 프롬프트 예시 및 결과를 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/dt5J8e/btsJERsa90m/nokli35HQlgqtOjzo4UK6k/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/dt5J8e/btsJERsa90m/nokli35HQlgqtOjzo4UK6k/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/dt5J8e/btsJERsa90m/nokli35HQlgqtOjzo4UK6k/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdt5J8e%2FbtsJERsa90m%2Fnokli35HQlgqtOjzo4UK6k%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"효율적인 회의를 위한 준비 가이드: 핵심 체크리스트 gpt 프롬프트\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;회의는 회사의 중요한 의사결정을 내리기 위한 필수적인 과정 중 하나입니다. 하지만 모든 회의가 효율적이고 생산적으로 진행되는 것은 아닙니다. 회의의 성과는 준비 과정에 따라 크게 좌우될 수 있으며, 특히 중요한 회의를 준비할 때는 철저한 계획이 필수적입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;본 기사에서는 \"중요한 회의를 준비할 때 고려해야 할 다섯 가지\"라는 주제로 작성된 프롬프트와 그에 따른 실제 결과를 포함해, 회의를 어떻게 준비하고 운영할 수 있는지에 대해 단계별로 설명합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>프롬프트:</b></span></h2>\n<pre class=\"angelscript\"><code>중요한 회의를 준비할 때 고려해야 할 다섯 가지를 알려줘.  \n1. 회의의 목적을 분명히 정의하는 방법을 제안해줘.  \n2. 필요한 자료와 데이터를 미리 준비하는 팁을 알려줘.  \n3. 회의 참여자들에게 명확한 역할을 분배하는 방법을 추천해줘.  \n4. 회의의 흐름을 관리하고 시간 안배를 잘 할 수 있는 방법을 알려줘.  \n5. 회의 후 후속 조치 및 정리를 효과적으로 할 수 있는 팁을 제시해줘.</code></pre>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i><b>프롬프트 예시:</b></i></span></h3>\n<pre class=\"angelscript\"><code>중요한 회의를 준비할 때 고려해야 할 다섯 가지를 알려줘.  \n1. 회의 주제는 신제품 출시 전략이야.  \n2. 자료는 시장 조사 보고서와 판매 예측 데이터를 포함해야 해.  \n3. 팀원들에게 각자 역할을 분명하게 부여하고, 시간을 효율적으로 관리할 수 있는 방법을 알려줘.</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i><b>프롬프트 결과:</b></i></span></h3>\n<pre class=\"erlang\"><code>1. 회의 목적 정의: 신제품 출시 전략을 논의하기 위한 회의라면, 회의의 목표를 명확히 설정하세요. \n예를 들어, 출시 일정 확정, 마케팅 전략 논의, 시장 반응 예측 등 구체적인 목표를 설정해 회의가 \n집중될 수 있도록 합니다.\n\n2. 자료 준비: 회의 전에 필요한 모든 자료(시장 조사 보고서, 판매 예측 데이터, 경쟁 분석 등)를 \n준비하고, 이를 참석자들에게 미리 공유하세요. 자료의 핵심 부분을 요약해 회의 시간 동안 빠르게 \n참고할 수 있도록 하면 좋습니다.\n\n3. 역할 분배: 회의 참석자들에게 명확한 역할을 부여하세요. 예를 들어, A는 시장 조사 결과를 발표하고, \nB는 판매 예측 데이터를 제공하며, C는 마케팅 전략을 제안하도록 역할을 미리 설정합니다. \n이를 통해 회의가 더욱 체계적으로 진행됩니다.\n\n4. 시간 관리: 각 주제에 할당할 시간을 미리 정하고, 회의 진행자가 시간 안배를 신경 쓰도록 합니다.\n타이머를 사용하거나 시간을 관리해주는 도구를 활용하여 논의가 시간 내에 완료되도록 하세요.\n\n5. 후속 조치 및 정리: 회의가 끝난 후, 논의된 주요 사항과 결정을 요약해 참석자들에게 전달하고, \n후속 조치를 책임질 사람을 지정합니다. 이를 통해 회의에서 결정된 사항이 실질적으로 이행될 수 있도록 합니다.</code></pre>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>회의를 성공적으로 준비하기 위한 5가지 필수 팁</b></span></h2>\n<h3 data-ke-size=\"size23\">1. 회의 목적을 명확히 설정하기</h3>\n<p data-ke-size=\"size16\">회의의 성공 여부는 그 목적을 얼마나 분명히 설정하느냐에 크게 좌우됩니다. 회의의 목적이 불분명하면 논의의 방향이 흐트러지고, 목표 달성이 어려워집니다. 신제품 출시 전략과 같은 주제를 다룬다면, 구체적인 목표를 설정하는 것이 필수입니다. 예를 들어, <b>출시 일정 확정</b>, <b>마케팅 전략 논의</b>, <b>시장 반응 예측</b> 등의 세부적인 목표를 회의 시작 전에 설정함으로써 논의가 더욱 집중될 수 있습니다.</p>\n<h3 data-ke-size=\"size23\">2. 자료와 데이터를 미리 준비하기</h3>\n<p data-ke-size=\"size16\">준비된 자료는 회의의 흐름을 좌우합니다. 신제품 출시 회의에서는 <b>시장 조사 보고서</b>, <b>판매 예측 데이터</b>와 같은 필수적인 자료가 준비되어야 합니다. 이 자료들은 회의 전에 참석자들과 미리 공유되어야 하며, 핵심 내용을 요약해 빠르게 참고할 수 있도록 준비하는 것이 좋습니다. 이렇게 하면 회의 중에 필요한 정보를 빠르게 확인할 수 있어 논의가 원활하게 진행됩니다.</p>\n<h3 data-ke-size=\"size23\">3. 역할 분배를 명확히 하기</h3>\n<p data-ke-size=\"size16\">회의 참석자들에게 명확한 역할을 부여하는 것은 회의의 체계적 진행을 보장합니다. 예를 들어, A는 <b>시장 조사 결과 발표</b>, B는 <b>판매 예측 데이터 제공</b>, C는 <b>마케팅 전략 제안</b> 등 각자의 역할을 미리 정해두면 혼란 없이 회의가 진행될 수 있습니다. 각자가 맡은 바를 준비하고 발표하면 회의가 효율적으로 운영됩니다.</p>\n<h3 data-ke-size=\"size23\">4. 시간 관리의 중요성</h3>\n<p data-ke-size=\"size16\">회의의 생산성은 시간을 어떻게 관리하느냐에 달려 있습니다. 각 주제에 대해 할당할 시간을 미리 설정하고, 이를 관리할 진행자를 지정해 회의가 지나치게 길어지지 않도록 해야 합니다. 타이머나 일정 관리 도구를 사용해 시간을 명확히 관리함으로써 효율적인 논의가 가능합니다.</p>\n<h3 data-ke-size=\"size23\">5. 회의 후속 조치 및 정리</h3>\n<p data-ke-size=\"size16\">회의가 끝난 후, 논의된 주요 사항과 결정을 정리하여 참석자들에게 공유하는 것이 중요합니다. 또한, 후속 조치를 책임질 사람을 지정해 회의에서 결정된 내용이 실제로 실행될 수 있도록 해야 합니다. 이를 통해 회의에서 논의된 사항들이 구체적인 결과로 이어지게 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>결론</b></span></h2>\n<p data-ke-size=\"size16\">중요한 회의는 제대로 된 준비 과정이 있을 때 더 큰 성과를 낼 수 있습니다. 이번 기사에서 제시한 다섯 가지 요소인 <b>회의 목적 정의</b>, <b>자료 준비</b>, <b>역할 분배</b>, <b>시간 관리</b>, <b>후속 조치</b>를 통해 체계적으로 회의를 준비한다면, 보다 효율적이고 생산적인 회의를 진행할 수 있을 것입니다.</p>",
        "contentSnippet": "중요한 회의를 준비할 때 필수적으로 고려해야 할 다섯 가지 요소를 알아보세요. 회의 목적 설정, 자료 준비, 역할 분배, 시간 관리, 후속 조치까지, 성공적인 회의를 위한 상세한 가이드와 실제 프롬프트 예시 및 결과를 제공합니다.\n\n\n \n 회의는 회사의 중요한 의사결정을 내리기 위한 필수적인 과정 중 하나입니다. 하지만 모든 회의가 효율적이고 생산적으로 진행되는 것은 아닙니다. 회의의 성과는 준비 과정에 따라 크게 좌우될 수 있으며, 특히 중요한 회의를 준비할 때는 철저한 계획이 필수적입니다.\n \n 본 기사에서는 \"중요한 회의를 준비할 때 고려해야 할 다섯 가지\"라는 주제로 작성된 프롬프트와 그에 따른 실제 결과를 포함해, 회의를 어떻게 준비하고 운영할 수 있는지에 대해 단계별로 설명합니다.\n \n프롬프트:\n중요한 회의를 준비할 때 고려해야 할 다섯 가지를 알려줘.  \n1. 회의의 목적을 분명히 정의하는 방법을 제안해줘.  \n2. 필요한 자료와 데이터를 미리 준비하는 팁을 알려줘.  \n3. 회의 참여자들에게 명확한 역할을 분배하는 방법을 추천해줘.  \n4. 회의의 흐름을 관리하고 시간 안배를 잘 할 수 있는 방법을 알려줘.  \n5. 회의 후 후속 조치 및 정리를 효과적으로 할 수 있는 팁을 제시해줘.\n프롬프트 예시:\n중요한 회의를 준비할 때 고려해야 할 다섯 가지를 알려줘.  \n1. 회의 주제는 신제품 출시 전략이야.  \n2. 자료는 시장 조사 보고서와 판매 예측 데이터를 포함해야 해.  \n3. 팀원들에게 각자 역할을 분명하게 부여하고, 시간을 효율적으로 관리할 수 있는 방법을 알려줘.\n \n프롬프트 결과:\n1. 회의 목적 정의: 신제품 출시 전략을 논의하기 위한 회의라면, 회의의 목표를 명확히 설정하세요. \n예를 들어, 출시 일정 확정, 마케팅 전략 논의, 시장 반응 예측 등 구체적인 목표를 설정해 회의가 \n집중될 수 있도록 합니다.\n\n2. 자료 준비: 회의 전에 필요한 모든 자료(시장 조사 보고서, 판매 예측 데이터, 경쟁 분석 등)를 \n준비하고, 이를 참석자들에게 미리 공유하세요. 자료의 핵심 부분을 요약해 회의 시간 동안 빠르게 \n참고할 수 있도록 하면 좋습니다.\n\n3. 역할 분배: 회의 참석자들에게 명확한 역할을 부여하세요. 예를 들어, A는 시장 조사 결과를 발표하고, \nB는 판매 예측 데이터를 제공하며, C는 마케팅 전략을 제안하도록 역할을 미리 설정합니다. \n이를 통해 회의가 더욱 체계적으로 진행됩니다.\n\n4. 시간 관리: 각 주제에 할당할 시간을 미리 정하고, 회의 진행자가 시간 안배를 신경 쓰도록 합니다.\n타이머를 사용하거나 시간을 관리해주는 도구를 활용하여 논의가 시간 내에 완료되도록 하세요.\n\n5. 후속 조치 및 정리: 회의가 끝난 후, 논의된 주요 사항과 결정을 요약해 참석자들에게 전달하고, \n후속 조치를 책임질 사람을 지정합니다. 이를 통해 회의에서 결정된 사항이 실질적으로 이행될 수 있도록 합니다.\n회의를 성공적으로 준비하기 위한 5가지 필수 팁\n1. 회의 목적을 명확히 설정하기\n회의의 성공 여부는 그 목적을 얼마나 분명히 설정하느냐에 크게 좌우됩니다. 회의의 목적이 불분명하면 논의의 방향이 흐트러지고, 목표 달성이 어려워집니다. 신제품 출시 전략과 같은 주제를 다룬다면, 구체적인 목표를 설정하는 것이 필수입니다. 예를 들어, 출시 일정 확정, 마케팅 전략 논의, 시장 반응 예측 등의 세부적인 목표를 회의 시작 전에 설정함으로써 논의가 더욱 집중될 수 있습니다.\n2. 자료와 데이터를 미리 준비하기\n준비된 자료는 회의의 흐름을 좌우합니다. 신제품 출시 회의에서는 시장 조사 보고서, 판매 예측 데이터와 같은 필수적인 자료가 준비되어야 합니다. 이 자료들은 회의 전에 참석자들과 미리 공유되어야 하며, 핵심 내용을 요약해 빠르게 참고할 수 있도록 준비하는 것이 좋습니다. 이렇게 하면 회의 중에 필요한 정보를 빠르게 확인할 수 있어 논의가 원활하게 진행됩니다.\n3. 역할 분배를 명확히 하기\n회의 참석자들에게 명확한 역할을 부여하는 것은 회의의 체계적 진행을 보장합니다. 예를 들어, A는 시장 조사 결과 발표, B는 판매 예측 데이터 제공, C는 마케팅 전략 제안 등 각자의 역할을 미리 정해두면 혼란 없이 회의가 진행될 수 있습니다. 각자가 맡은 바를 준비하고 발표하면 회의가 효율적으로 운영됩니다.\n4. 시간 관리의 중요성\n회의의 생산성은 시간을 어떻게 관리하느냐에 달려 있습니다. 각 주제에 대해 할당할 시간을 미리 설정하고, 이를 관리할 진행자를 지정해 회의가 지나치게 길어지지 않도록 해야 합니다. 타이머나 일정 관리 도구를 사용해 시간을 명확히 관리함으로써 효율적인 논의가 가능합니다.\n5. 회의 후속 조치 및 정리\n회의가 끝난 후, 논의된 주요 사항과 결정을 정리하여 참석자들에게 공유하는 것이 중요합니다. 또한, 후속 조치를 책임질 사람을 지정해 회의에서 결정된 내용이 실제로 실행될 수 있도록 해야 합니다. 이를 통해 회의에서 논의된 사항들이 구체적인 결과로 이어지게 됩니다.\n \n \n결론\n중요한 회의는 제대로 된 준비 과정이 있을 때 더 큰 성과를 낼 수 있습니다. 이번 기사에서 제시한 다섯 가지 요소인 회의 목적 정의, 자료 준비, 역할 분배, 시간 관리, 후속 조치를 통해 체계적으로 회의를 준비한다면, 보다 효율적이고 생산적인 회의를 진행할 수 있을 것입니다.",
        "guid": "http://muzbox.tistory.com/483472",
        "categories": [
          "AI, 미래기술/프롬프트 다이어리",
          "GPT프롬프트",
          "성공적인 회의",
          "역할 분배",
          "자료 준비",
          "챗GPT",
          "회의 목적",
          "회의 시간 관리",
          "회의 준비",
          "후속 조치"
        ],
        "isoDate": "2024-09-19T12:50:59.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "윈도우용 추천 프리웨어 (2024.9.19)  마인드 매핑, 무료 원격 제어, 이미지 필터, PC사용이력관리, 메타데이터 편집",
        "link": "http://muzbox.tistory.com/483471",
        "pubDate": "Thu, 19 Sep 2024 08:57:41 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483471#entry483471comment",
        "content": "<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"background-color: #ffffff; color: #0d0d0d; text-align: start;\">&nbsp;네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"추천프리웨어.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/7QfC6/btsJDXloCZu/bxhQpE0z4KKtvk7sGKY8E1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/7QfC6/btsJDXloCZu/bxhQpE0z4KKtvk7sGKY8E1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/7QfC6/btsJDXloCZu/bxhQpE0z4KKtvk7sGKY8E1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F7QfC6%2FbtsJDXloCZu%2FbxhQpE0z4KKtvk7sGKY8E1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"윈도우용 추천 프리웨어 (2024.9.19)\" data-filename=\"추천프리웨어.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"color: #333333; text-align: left;\">&nbsp;윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는<span>&nbsp;</span></span><b><span style=\"color: #009a87;\">상용프로그램</span></b><span style=\"color: #333333; text-align: left;\">과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의<span>&nbsp;</span></span><span style=\"color: #ee2323;\"><b>쉐어웨어</b></span><span style=\"color: #333333; text-align: left;\">, 무료로 사용할 수 있는<span>&nbsp;</span></span><b><span style=\"color: #ef6f53;\">프리웨어</span></b>등으로 크게 3가지로 나뉘게 되는데요.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><br />&nbsp;물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 <span style=\"color: #006dd7;\"><b>최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개</b></span>하고 있습니다.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size18\">'어떤오후의 프리웨어 이야기'에서 추천하는<br /><span style=\"color: #409d00;\">&nbsp;<b>2024년 9월 19일자 공개자료실 윈도우용 추천 프리웨어</b></span>입니다.</p>\n<p id=\"no_1\" data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>1. Freeplane (다용도 마인드 매핑 도구)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 정보를 조직화하고 시각화하며 공유하기 위한 무료 오픈소스 애플리케이션으로, 프리마인드(FreeMind)의 재설계 버전입니다. 이 프로그램은 단순한 마인드맵 작성을 넘어서 조건부 스타일링, 노드 내 정보 숨김 및 표시, 하이퍼링크 사용 등 다양한 기능을 제공합니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;캘린더와 리마인더 도구가 내장되어 있어 시간 및 프로젝트 관리에 유용하며, 개별 노드나 전체 맵에 대한 DES 암호화 기능도 제공합니다. 스크립트와 애드온을 통해 기능을 확장할 수 있으며, 완성된 맵은 이미지, HTML 페이지, Flash 등 다양한 형식으로 공유할 수 있습니다. 그러나 일부 내보내기 기능에서는 원본과 차이가 있을 수 있다는 점에 유의해야 합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Freeplane.jpg\" data-origin-width=\"1042\" data-origin-height=\"669\"><span data-url=\"https://blog.kakaocdn.net/dn/bBgPSL/btsJE0PchcH/J1WKVEqqdk2IwSXJJzDKT1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bBgPSL/btsJE0PchcH/J1WKVEqqdk2IwSXJJzDKT1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bBgPSL/btsJE0PchcH/J1WKVEqqdk2IwSXJJzDKT1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbBgPSL%2FbtsJE0PchcH%2FJ1WKVEqqdk2IwSXJJzDKT1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Freeplane.jpg\" data-origin-width=\"1042\" data-origin-height=\"669\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶ 프리웨어 - 개인/기업(오픈소스)</p>\n<p data-ke-size=\"size18\">▶ Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드◀</p>\n<figure id=\"og_1726703542928\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"product\" data-og-title=\"Freeplane\" data-og-description=\"Download Freeplane for free. Application for Mind Mapping, Knowledge and Project Management. Application for Mind Mapping, Knowledge Management, Project Management. Develop, organize and communicate your ideas and knowledge in the most effective way.\" data-og-host=\"sourceforge.net\" data-og-source-url=\"https://sourceforge.net/projects/freeplane/\" data-og-url=\"https://sourceforge.net/projects/freeplane/\" data-og-image=\"https://scrap.kakaocdn.net/dn/cvVyXh/hyW2Zcng1g/mGjKF7z1ugqM3ECkLkKTRk/img.png?width=48&amp;height=48&amp;face=0_0_48_48\"><a href=\"https://sourceforge.net/projects/freeplane/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://sourceforge.net/projects/freeplane/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cvVyXh/hyW2Zcng1g/mGjKF7z1ugqM3ECkLkKTRk/img.png?width=48&amp;height=48&amp;face=0_0_48_48');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Freeplane</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Download Freeplane for free. Application for Mind Mapping, Knowledge and Project Management. Application for Mind Mapping, Knowledge Management, Project Management. Develop, organize and communicate your ideas and knowledge in the most effective way.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">sourceforge.net</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_2\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>2. RustDesk (무료 원격 제어)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 팀뷰어(TeamViewer)가&nbsp;무료&nbsp;사용자에&nbsp;대한&nbsp;제한을&nbsp;강화하면서,&nbsp;러스트데스크(RustDesk)가&nbsp;오픈소스&nbsp;대안으로&nbsp;등장했습니다.&nbsp;러스트데스크는&nbsp;팀뷰어와&nbsp;유사한&nbsp;사용자&nbsp;경험을&nbsp;제공하며,&nbsp;숫자&nbsp;ID와&nbsp;비밀번호를&nbsp;사용하여&nbsp;원격&nbsp;지원&nbsp;및&nbsp;접속을&nbsp;가능하게&nbsp;합니다.&nbsp;이&nbsp;프로그램은&nbsp;다양한&nbsp;플랫폼에서&nbsp;사용할&nbsp;수&nbsp;있으며,&nbsp;화면&nbsp;공유부터&nbsp;완전한&nbsp;제어까지&nbsp;다양한&nbsp;수준의&nbsp;접근을&nbsp;허용합니다.&nbsp;러스트데스크는&nbsp;화면&nbsp;크기&nbsp;조정,&nbsp;텍스트&nbsp;메시지&nbsp;전송,&nbsp;파일&nbsp;전송&nbsp;등&nbsp;팀뷰어의&nbsp;주요&nbsp;기능들을&nbsp;대부분&nbsp;제공하지만,&nbsp;자체&nbsp;서버&nbsp;사용&nbsp;시&nbsp;연결&nbsp;속도가&nbsp;느릴&nbsp;수&nbsp;있다는&nbsp;단점이&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"RustDesk.png\" data-origin-width=\"1280\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/bh1Gj4/btsJF5oL9ce/lYcGaCJcyLZchagtRGfRXk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bh1Gj4/btsJF5oL9ce/lYcGaCJcyLZchagtRGfRXk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bh1Gj4/btsJF5oL9ce/lYcGaCJcyLZchagtRGfRXk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbh1Gj4%2FbtsJF5oL9ce%2FlYcGaCJcyLZchagtRGfRXk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"RustDesk.png\" data-origin-width=\"1280\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업(오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드&nbsp;</p>\n<figure id=\"og_1726703654599\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"RustDesk &ndash; The Open Source Remote Desktop Access Software\" data-og-description=\"Open source remote desktop access solutions by RustDesk: connect to remote computers, provide remote support &amp; collaborate online, and alternative to TeamViewer.\" data-og-host=\"rustdesk.com\" data-og-source-url=\"https://rustdesk.com/\" data-og-url=\"https://rustdesk.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/NC8PW/hyW2V8QH9q/SQBH4RyzmsIUEhfsY47zmk/img.png?width=1600&amp;height=630&amp;face=0_0_1600_630,https://scrap.kakaocdn.net/dn/sMPdr/hyW6MbnjMj/Y77LYhQbTRWjp5YhydoDyK/img.png?width=1600&amp;height=630&amp;face=0_0_1600_630,https://scrap.kakaocdn.net/dn/bUghPZ/hyW2Ykhm2V/dvgKs5E3AYyewRL4qVNnK0/img.png?width=2223&amp;height=1482&amp;face=0_0_2223_1482\"><a href=\"https://rustdesk.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://rustdesk.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/NC8PW/hyW2V8QH9q/SQBH4RyzmsIUEhfsY47zmk/img.png?width=1600&amp;height=630&amp;face=0_0_1600_630,https://scrap.kakaocdn.net/dn/sMPdr/hyW6MbnjMj/Y77LYhQbTRWjp5YhydoDyK/img.png?width=1600&amp;height=630&amp;face=0_0_1600_630,https://scrap.kakaocdn.net/dn/bUghPZ/hyW2Ykhm2V/dvgKs5E3AYyewRL4qVNnK0/img.png?width=2223&amp;height=1482&amp;face=0_0_2223_1482');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">RustDesk &ndash; The Open Source Remote Desktop Access Software</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Open source remote desktop access solutions by RustDesk: connect to remote computers, provide remote support &amp; collaborate online, and alternative to TeamViewer.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">rustdesk.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_3\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>3. G'MIC (놀랍도록 유연한 이미지 처리 도구)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;명령줄이나 GIMP 플러그인을 통해 사용할 수 있는 강력한 이미지 처리 도구입니다. 이 프로그램은 간단한 이미지 보기와 변환부터 고급 필터 및 처리 명령어까지 다양한 기능을 제공합니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;이미지 미러링, 자르기, 회전, 크기 조정, 블러 및 샤프닝, 적목 현상 제거, 다양한 왜곡 효과 적용, 고품질 페인팅 및 드로잉 효과, 애니메이션 생성, 캡션 및 테두리 추가 등을 할 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;일부 효과는 사용하기 쉽지만, G'MIC은 전문가를 위한 놀라운 유연성도 제공하며, 이미지 처리뿐만 아니라 비디오 작업, 2D 또는 3D 함수 플로팅, 3D 로고 및 모델 생성, 필터링된 웹캠 스트림 표시 등 다양한 기능을 수행할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GMIC.png\" data-origin-width=\"967\" data-origin-height=\"683\"><span data-url=\"https://blog.kakaocdn.net/dn/3AfWp/btsJDTjbgW3/I6PJJukRZrohaMZp9uzOZ0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/3AfWp/btsJDTjbgW3/I6PJJukRZrohaMZp9uzOZ0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/3AfWp/btsJDTjbgW3/I6PJJukRZrohaMZp9uzOZ0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F3AfWp%2FbtsJDTjbgW3%2FI6PJJukRZrohaMZp9uzOZ0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"GMIC.png\" data-origin-width=\"967\" data-origin-height=\"683\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶ 프리웨어 - 개인/기업(오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11&nbsp;</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1726703700936\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"G'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source Framework for Image Processing - Main\" data-og-description=\"Here are some screenshots illustrating various uses of G'MIC. It shows how it is able to process and visualize different types of 1D/2D/3D image datasets. G'MIC is actually a handy toolbox for many image/signal processing applications. See also the Gallery\" data-og-host=\"gmic.eu\" data-og-source-url=\"https://gmic.eu/\" data-og-url=\"https://gmic.eu/\" data-og-image=\"\"><a href=\"https://gmic.eu/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://gmic.eu/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">G'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source Framework for Image Processing - Main</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Here are some screenshots illustrating various uses of G'MIC. It shows how it is able to process and visualize different types of 1D/2D/3D image datasets. G'MIC is actually a handy toolbox for many image/signal processing applications. See also the Gallery</p>\n<p class=\"og-host\" data-ke-size=\"size16\">gmic.eu</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_4\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>4. ManicTime (사용 중인 PC 프로그램과 사용 기간을 기록)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;단순히&nbsp;CAD&nbsp;도면을&nbsp;보는&nbsp;것&nbsp;이상의&nbsp;기능을&nbsp;제공합니다.&nbsp;2D&nbsp;DWG,&nbsp;3D&nbsp;STEP,&nbsp;2D/3D&nbsp;VariCAD&nbsp;등&nbsp;다양한&nbsp;형식의&nbsp;파일을&nbsp;지원하며,&nbsp;간단한&nbsp;조정과&nbsp;인쇄&nbsp;기능도&nbsp;갖추고&nbsp;있습니다.&nbsp;이&nbsp;프로그램은&nbsp;3D&nbsp;모델링에&nbsp;대해&nbsp;잘&nbsp;아는&nbsp;전문가들을&nbsp;위해&nbsp;설계되었습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;인터페이스는 현대적이지만 다양한 기능으로 인해 다소 복잡해 보일 수 있습니다. 그러나 CAD 경험이 있는 사용자라면 직관적으로 사용할 수 있을 것입니다. 도구 모음의 배치를 사용자가 원하는 대로 조정할 수 있는 것도 장점입니다.컴퓨터 사용을 모니터링하여 사용한 프로그램, 시간, 그리고 사용 기간을 추적하는 활동 추적기입니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;복잡한 설정 없이 프로그램을 실행하면 자동으로 사용자의 활동을 추적하며, 색상으로 구분된 타임라인을 통해 컴퓨터 사용 시간, 실행한 애플리케이션, 방문한 웹사이트, 작업한 문서 등을 한눈에 볼 수 있습니다. ManicTime은 raw 데이터를 표 형식으로 제공하고, 작업 세션 길이와 각 애플리케이션 사용 시간을 요약하여 보여줍니다. 또한 통계 탭에서는 상위 문서, 상위 애플리케이션 등 추가 정보를 제공하며, 이 데이터들은 PNG 이미지나 CSV 형식으로 내보낼 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"ManicTime.png\" data-origin-width=\"906\" data-origin-height=\"668\"><span data-url=\"https://blog.kakaocdn.net/dn/bFEL2q/btsJFGiobto/Wm3Cjlu3pOHuabZZ1H3u3k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bFEL2q/btsJFGiobto/Wm3Cjlu3pOHuabZZ1H3u3k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bFEL2q/btsJFGiobto/Wm3Cjlu3pOHuabZZ1H3u3k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbFEL2q%2FbtsJFGiobto%2FWm3Cjlu3pOHuabZZ1H3u3k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"ManicTime.png\" data-origin-width=\"906\" data-origin-height=\"668\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1726703760218\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ManicTime - Automatic time tracking software\" data-og-description=\"Manage your time better Let ManicTime focus on keeping track of your time, so you can focus on your business\" data-og-host=\"www.manictime.com\" data-og-source-url=\"https://www.manictime.com/\" data-og-url=\"https://www.manictime.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/bmwkPO/hyW6xedEyn/xj8JxJ8LkyU0N1FjNEwqi0/img.png?width=1444&amp;height=327&amp;face=0_0_1444_327\"><a href=\"https://www.manictime.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.manictime.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bmwkPO/hyW6xedEyn/xj8JxJ8LkyU0N1FjNEwqi0/img.png?width=1444&amp;height=327&amp;face=0_0_1444_327');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ManicTime - Automatic time tracking software</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Manage your time better Let ManicTime focus on keeping track of your time, so you can focus on your business</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.manictime.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_5\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>5. ExifTool (메타데이터 편집 프로그램)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 오디오,&nbsp;비디오,&nbsp;이미지,&nbsp;문서,&nbsp;아카이브&nbsp;등&nbsp;다양한&nbsp;파일&nbsp;유형의&nbsp;메타데이터를&nbsp;보고,&nbsp;편집하고,&nbsp;쓸&nbsp;수&nbsp;있게&nbsp;해주는&nbsp;명령줄&nbsp;도구입니다.&nbsp;이&nbsp;프로그램은&nbsp;일반적인&nbsp;파일&nbsp;형식뿐만&nbsp;아니라&nbsp;Adobe&nbsp;InDesign&nbsp;문서,&nbsp;Visio&nbsp;도면,&nbsp;다양한&nbsp;RAW&nbsp;형식&nbsp;등&nbsp;독점적인&nbsp;형식과&nbsp;RAR,&nbsp;WEBM,&nbsp;SWF&nbsp;같은&nbsp;예상치&nbsp;못한&nbsp;파일&nbsp;유형의&nbsp;메타데이터도&nbsp;처리할&nbsp;수&nbsp;있습니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;ExifTool은 단순히 메타데이터를 표시, 편집, 쓰는 것을 넘어 메타데이터를 기반으로 파일을 처리하고, RAW 파일에서 썸네일 이미지를 추출하며, GPS 트랙 로그 파일을 기반으로 이미지에 지오태그를 추가하는 등 다양한 작업을 수행할 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;그러나 명령줄 도구이기 때문에 복잡한 구문을 익혀야 하는 어려움이 있지만, 간단한 작업부터 시작하여 점진적으로 기능을 익힐 수 있으며, 필요한 경우 그래픽 사용자 인터페이스를 제공하는 프론트엔드를 사용할 수도 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"ExifTool.png\" data-origin-width=\"637\" data-origin-height=\"383\"><span data-url=\"https://blog.kakaocdn.net/dn/Du9w3/btsJEEll01U/yuqCUMAipvqKJOhGE4vUIk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Du9w3/btsJEEll01U/yuqCUMAipvqKJOhGE4vUIk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Du9w3/btsJEEll01U/yuqCUMAipvqKJOhGE4vUIk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FDu9w3%2FbtsJEEll01U%2FyuqCUMAipvqKJOhGE4vUIk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"ExifTool.png\" data-origin-width=\"637\" data-origin-height=\"383\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1726703799632\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ExifTool by Phil Harvey\" data-og-description=\"0 (Information&nbsp;Type) AAC, AFCP, AIFF, APE, APP0, APP1, APP11, APP12, APP13, APP14, APP15, APP2, APP3, APP4, APP5, APP6, APP7, APP8, APP9, ASF, Audible, Canon, CanonVRD, Composite, DICOM, DNG, DV, DjVu, Ducky, EXE, EXIF, ExifTool, FITS, FLAC, FLIR, File, F\" data-og-host=\"exiftool.org\" data-og-source-url=\"https://exiftool.org/\" data-og-url=\"https://exiftool.org/\" data-og-image=\"\"><a href=\"https://exiftool.org/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://exiftool.org/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ExifTool by Phil Harvey</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">0 (Information&nbsp;Type) AAC, AFCP, AIFF, APE, APP0, APP1, APP11, APP12, APP13, APP14, APP15, APP2, APP3, APP4, APP5, APP6, APP7, APP8, APP9, ASF, Audible, Canon, CanonVRD, Composite, DICOM, DNG, DV, DjVu, Ducky, EXE, EXIF, ExifTool, FITS, FLAC, FLIR, File, F</p>\n<p class=\"og-host\" data-ke-size=\"size16\">exiftool.org</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.\n\n\n \n 윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는 상용프로그램과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의 쉐어웨어, 무료로 사용할 수 있는 프리웨어등으로 크게 3가지로 나뉘게 되는데요.\n 물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개하고 있습니다.\n \n \n'어떤오후의 프리웨어 이야기'에서 추천하는\n 2024년 9월 19일자 공개자료실 윈도우용 추천 프리웨어입니다.\n \n \n1. Freeplane (다용도 마인드 매핑 도구)\n\n  정보를 조직화하고 시각화하며 공유하기 위한 무료 오픈소스 애플리케이션으로, 프리마인드(FreeMind)의 재설계 버전입니다. 이 프로그램은 단순한 마인드맵 작성을 넘어서 조건부 스타일링, 노드 내 정보 숨김 및 표시, 하이퍼링크 사용 등 다양한 기능을 제공합니다.\n \n 캘린더와 리마인더 도구가 내장되어 있어 시간 및 프로젝트 관리에 유용하며, 개별 노드나 전체 맵에 대한 DES 암호화 기능도 제공합니다. 스크립트와 애드온을 통해 기능을 확장할 수 있으며, 완성된 맵은 이미지, HTML 페이지, Flash 등 다양한 형식으로 공유할 수 있습니다. 그러나 일부 내보내기 기능에서는 원본과 차이가 있을 수 있다는 점에 유의해야 합니다.\n\n\n \n▶ 프리웨어 - 개인/기업(오픈소스)\n▶ Windows 10/11\n▶무료 다운로드◀\n\n \nFreeplane\nDownload Freeplane for free. Application for Mind Mapping, Knowledge and Project Management. Application for Mind Mapping, Knowledge Management, Project Management. Develop, organize and communicate your ideas and knowledge in the most effective way.\nsourceforge.net\n\n \n \n \n \n \n \n \n2. RustDesk (무료 원격 제어)\n  팀뷰어(TeamViewer)가 무료 사용자에 대한 제한을 강화하면서, 러스트데스크(RustDesk)가 오픈소스 대안으로 등장했습니다. 러스트데스크는 팀뷰어와 유사한 사용자 경험을 제공하며, 숫자 ID와 비밀번호를 사용하여 원격 지원 및 접속을 가능하게 합니다. 이 프로그램은 다양한 플랫폼에서 사용할 수 있으며, 화면 공유부터 완전한 제어까지 다양한 수준의 접근을 허용합니다. 러스트데스크는 화면 크기 조정, 텍스트 메시지 전송, 파일 전송 등 팀뷰어의 주요 기능들을 대부분 제공하지만, 자체 서버 사용 시 연결 속도가 느릴 수 있다는 단점이 있습니다.\n\n\n \n▶프리웨어 - 개인/기업(오픈소스)\n▶Windows 10/11\n▶무료 다운로드 \n\n \nRustDesk – The Open Source Remote Desktop Access Software\nOpen source remote desktop access solutions by RustDesk: connect to remote computers, provide remote support & collaborate online, and alternative to TeamViewer.\nrustdesk.com\n\n \n \n \n \n \n \n \n3. G'MIC (놀랍도록 유연한 이미지 처리 도구)\n 명령줄이나 GIMP 플러그인을 통해 사용할 수 있는 강력한 이미지 처리 도구입니다. 이 프로그램은 간단한 이미지 보기와 변환부터 고급 필터 및 처리 명령어까지 다양한 기능을 제공합니다.\n \n 이미지 미러링, 자르기, 회전, 크기 조정, 블러 및 샤프닝, 적목 현상 제거, 다양한 왜곡 효과 적용, 고품질 페인팅 및 드로잉 효과, 애니메이션 생성, 캡션 및 테두리 추가 등을 할 수 있습니다.\n \n 일부 효과는 사용하기 쉽지만, G'MIC은 전문가를 위한 놀라운 유연성도 제공하며, 이미지 처리뿐만 아니라 비디오 작업, 2D 또는 3D 함수 플로팅, 3D 로고 및 모델 생성, 필터링된 웹캠 스트림 표시 등 다양한 기능을 수행할 수 있습니다.\n\n\n▶ 프리웨어 - 개인/기업(오픈소스)\n▶Windows 10/11 \n▶무료 다운로드 ◀\n\n \nG'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source Framework for Image Processing - Main\nHere are some screenshots illustrating various uses of G'MIC. It shows how it is able to process and visualize different types of 1D/2D/3D image datasets. G'MIC is actually a handy toolbox for many image/signal processing applications. See also the Gallery\ngmic.eu\n\n \n \n \n \n \n \n \n4. ManicTime (사용 중인 PC 프로그램과 사용 기간을 기록)\n\n 단순히 CAD 도면을 보는 것 이상의 기능을 제공합니다. 2D DWG, 3D STEP, 2D/3D VariCAD 등 다양한 형식의 파일을 지원하며, 간단한 조정과 인쇄 기능도 갖추고 있습니다. 이 프로그램은 3D 모델링에 대해 잘 아는 전문가들을 위해 설계되었습니다.\n \n 인터페이스는 현대적이지만 다양한 기능으로 인해 다소 복잡해 보일 수 있습니다. 그러나 CAD 경험이 있는 사용자라면 직관적으로 사용할 수 있을 것입니다. 도구 모음의 배치를 사용자가 원하는 대로 조정할 수 있는 것도 장점입니다.컴퓨터 사용을 모니터링하여 사용한 프로그램, 시간, 그리고 사용 기간을 추적하는 활동 추적기입니다.\n \n 복잡한 설정 없이 프로그램을 실행하면 자동으로 사용자의 활동을 추적하며, 색상으로 구분된 타임라인을 통해 컴퓨터 사용 시간, 실행한 애플리케이션, 방문한 웹사이트, 작업한 문서 등을 한눈에 볼 수 있습니다. ManicTime은 raw 데이터를 표 형식으로 제공하고, 작업 세션 길이와 각 애플리케이션 사용 시간을 요약하여 보여줍니다. 또한 통계 탭에서는 상위 문서, 상위 애플리케이션 등 추가 정보를 제공하며, 이 데이터들은 PNG 이미지나 CSV 형식으로 내보낼 수 있습니다.\n\n\n \n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nManicTime - Automatic time tracking software\nManage your time better Let ManicTime focus on keeping track of your time, so you can focus on your business\nwww.manictime.com\n\n \n \n \n \n \n \n5. ExifTool (메타데이터 편집 프로그램)\n  오디오, 비디오, 이미지, 문서, 아카이브 등 다양한 파일 유형의 메타데이터를 보고, 편집하고, 쓸 수 있게 해주는 명령줄 도구입니다. 이 프로그램은 일반적인 파일 형식뿐만 아니라 Adobe InDesign 문서, Visio 도면, 다양한 RAW 형식 등 독점적인 형식과 RAR, WEBM, SWF 같은 예상치 못한 파일 유형의 메타데이터도 처리할 수 있습니다. \n \n ExifTool은 단순히 메타데이터를 표시, 편집, 쓰는 것을 넘어 메타데이터를 기반으로 파일을 처리하고, RAW 파일에서 썸네일 이미지를 추출하며, GPS 트랙 로그 파일을 기반으로 이미지에 지오태그를 추가하는 등 다양한 작업을 수행할 수 있습니다.\n \n 그러나 명령줄 도구이기 때문에 복잡한 구문을 익혀야 하는 어려움이 있지만, 간단한 작업부터 시작하여 점진적으로 기능을 익힐 수 있으며, 필요한 경우 그래픽 사용자 인터페이스를 제공하는 프론트엔드를 사용할 수도 있습니다.\n\n\n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nExifTool by Phil Harvey\n0 (Information Type) AAC, AFCP, AIFF, APE, APP0, APP1, APP11, APP12, APP13, APP14, APP15, APP2, APP3, APP4, APP5, APP6, APP7, APP8, APP9, ASF, Audible, Canon, CanonVRD, Composite, DICOM, DNG, DV, DjVu, Ducky, EXE, EXIF, ExifTool, FITS, FLAC, FLIR, File, F\nexiftool.org",
        "guid": "http://muzbox.tistory.com/483471",
        "categories": [
          "NEWS/프리웨어 뉴스",
          "pc사용이력관리",
          "공개자료실",
          "마인드 매핑",
          "메타데이터 편집",
          "무료 원격 제어",
          "무료프로그램",
          "이미지 필터",
          "추천프로그램",
          "프리웨어"
        ],
        "isoDate": "2024-09-18T23:57:41.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "OpenAI의 최신 o1 모델, 추론이 가능한 AI의 등장",
        "link": "http://muzbox.tistory.com/483470",
        "pubDate": "Sun, 15 Sep 2024 09:14:07 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483470#entry483470comment",
        "content": "<p data-ke-size=\"size16\">OpenAI의 새로운 o1 모델이 도입되었습니다. 이 모델은 문제 해결을 위한 '사고 과정'을 보여주며, 기존 모델과 다른 방식으로 문제를 접근합니다. 새로운 모델의 특징과 성능, 사용 방법에 대해 알아보세요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1000\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/niv73/btsJEoCeayL/D6RKFRgSwz1rJ2ER7oTK91/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/niv73/btsJEoCeayL/D6RKFRgSwz1rJ2ER7oTK91/img.png\"><img src=\"https://blog.kakaocdn.net/dn/niv73/btsJEoCeayL/D6RKFRgSwz1rJ2ER7oTK91/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fniv73%2FbtsJEoCeayL%2FD6RKFRgSwz1rJ2ER7oTK91%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"1000\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">인공지능 기술은 매일 발전하고 있으며, 이제는 그 '사고 과정'까지도 공개하고 있습니다. OpenAI는 최근 'o1'이라는 새로운 모델을 발표했는데, 이는 단순히 답을 제공하는 것에서 더 나아가 답을 도출하는 사고 과정까지도 사용자에게 보여줍니다. 이러한 기능은 AI의 투명성과 신뢰성을 높이는 동시에, 사용자가 AI의 논리를 이해하고 신뢰할 수 있는 기회를 제공합니다. 이번 글에서는 OpenAI의 최신 모델 o1의 특징과 장점, 그리고 실제 사용 사례를 살펴보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>1. 새로운 AI 모델 'o1'의 등장</b></span></h2>\n<p data-ke-size=\"size16\">OpenAI는 기존의 GPT 시리즈와 차별화된 새로운 AI 모델인 'o1'을 공개했습니다. o1은 기존의 GPT-4와 달리 문제를 해결하는 데 있어 더 많은 시간을 투자하여 '생각하는' 방식으로 설계되었습니다. 이 모델은 사용자가 제시한 질문에 대한 답변을 생성하기 전에, 각기 다른 전략을 시도하고 자신의 실수를 검토하는 등의 과정을 거칩니다. 이러한 접근 방식은 AI가 단순히 패턴을 인식하는 데 그치지 않고, 실제로 인간처럼 문제를 해결하려고 노력하는 모습을 보여줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>2. 학습 방법의 차이점: 강화 학습의 도입</b></span></h2>\n<p data-ke-size=\"size16\">OpenAI의 연구 책임자인 Jerry Tworek에 따르면, o1 모델은 강화 학습을 통해 훈련되었습니다. 이는 기존의 모델들이 주어진 데이터셋에서 패턴을 찾는 것과 달리, o1이 '보상과 패널티'를 통해 학습한다는 것을 의미합니다. 이를 통해 o1 모델은 이전 모델들보다 훨씬 더 높은 정확도로 문제를 해결할 수 있게 되었습니다. 예를 들어, o1은 국제 수학 올림피아드 문제의 83%를 해결한 반면, GPT-4는 단 13%만을 해결했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>3. 사용자와의 상호작용: 사고 과정을 시각적으로 제공</b></span></h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"960\" data-origin-height=\"400\"><span data-url=\"https://blog.kakaocdn.net/dn/bCmOqw/btsJDqVspxe/uJdVSVoaM8x3vTQXAlzEy1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bCmOqw/btsJDqVspxe/uJdVSVoaM8x3vTQXAlzEy1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bCmOqw/btsJDqVspxe/uJdVSVoaM8x3vTQXAlzEy1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbCmOqw%2FbtsJDqVspxe%2FuJdVSVoaM8x3vTQXAlzEy1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"960\" data-origin-height=\"400\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">o1 모델의 가장 큰 특징 중 하나는 사용자에게 '사고 과정'을 시각적으로 제공한다는 점입니다. 사용자가 질문을 던지면, AI는 답을 생성하기 전에 '생각 중...'이라는 메시지를 표시합니다. 답이 생성된 후에는 '4초간 생각함'이라는 드롭다운 메뉴가 나타나며, 이를 클릭하면 AI가 답을 생성하는 데 어떤 과정을 거쳤는지를 확인할 수 있습니다. 예를 들어, \"핫도그는 샌드위치인가?\"라는 질문에 대해 AI는 '질문 분석', '정의 검토' 등의 단계를 거쳐 답을 도출했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>4. 실제 적용 사례: 음식 분류 논쟁</b></span></h2>\n<p data-ke-size=\"size16\">새로운 o1 모델을 통해 실생활의 논쟁적인 질문에도 AI의 사고 과정을 적용할 수 있습니다. '타코는 샌드위치인가?'라는 질문에서 AI는 5초 동안 고민한 후, 정의, 문화적 관점, 법적 해석 등을 고려하여 타코는 샌드위치가 아니라는 결론을 내렸습니다. 또한 '타코는 핫도그인가?'라는 질문에 대해서도, AI는 타코와 핫도그가 서로 다른 요리 카테고리에 속한다는 논리적 이유를 제시했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>5. 성능과 한계</b></span></h2>\n<p data-ke-size=\"size16\">o1 모델은 이전 모델에 비해 더 정확하고 창의적인 답변을 제공할 수 있지만, 응답 시간이 길어질 수 있다는 단점이 있습니다. 또한, 아직도 '환각' 문제, 즉 사실과 다른 정보를 생성하는 현상이 완전히 해결된 것은 아니며, 오히려 AI가 더 인간적인 표현을 사용하면서 사용자가 이를 실제 사람의 생각으로 오해할 가능성이 높아졌습니다. 그러나 이러한 문제를 개선하기 위해 OpenAI는 지속적으로 연구를 진행하고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>6. OpenAI o1 모델 사용 방법</b></span></h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1412\" data-origin-height=\"874\"><span data-url=\"https://blog.kakaocdn.net/dn/bjWmR6/btsJEHuTixs/2aoihgN7whuafcU0EfEgwK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bjWmR6/btsJEHuTixs/2aoihgN7whuafcU0EfEgwK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bjWmR6/btsJEHuTixs/2aoihgN7whuafcU0EfEgwK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbjWmR6%2FbtsJEHuTixs%2F2aoihgN7whuafcU0EfEgwK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"1412\" data-origin-height=\"874\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">새로운 o1 모델은 현재 일부 사용자에게만 제공되고 있습니다. ChatGPT Plus 또는 ChatGPT Team 구독자는 이미 사용할 수 있으며, 다음 주에는 ChatGPT Enterprise와 ChatGPT Ed 사용자도 사용이 가능해질 예정입니다. 무료 사용자에게는 o1-mini 모델이 추후 제공될 예정입니다. 모델을 사용하려면 대화 시작 시 모델 선택 드롭다운 메뉴에서 o1-preview 또는 o1-mini를 선택하면 됩니다. 현재 o1-preview는 주당 30개의 메시지, o1-mini는 50개의 메시지로 사용이 제한됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>결론</b></span></h2>\n<p data-ke-size=\"size16\">OpenAI의 새로운 o1 모델은 AI 기술의 새로운 장을 열었습니다. 단순히 답을 제공하는 것이 아니라, 그 답을 도출하는 사고 과정을 시각적으로 제공함으로써 AI의 투명성과 신뢰성을 높였습니다. 비록 여전히 개선할 점이 많지만, AI가 점점 더 인간적인 사고 방식으로 진화하는 과정을 보는 것은 흥미로운 일입니다. 앞으로의 발전이 기대되는 o1 모델을 통해 AI와의 소통이 한층 더 깊어질 것입니다.</p>",
        "contentSnippet": "OpenAI의 새로운 o1 모델이 도입되었습니다. 이 모델은 문제 해결을 위한 '사고 과정'을 보여주며, 기존 모델과 다른 방식으로 문제를 접근합니다. 새로운 모델의 특징과 성능, 사용 방법에 대해 알아보세요.\n\n\n \n인공지능 기술은 매일 발전하고 있으며, 이제는 그 '사고 과정'까지도 공개하고 있습니다. OpenAI는 최근 'o1'이라는 새로운 모델을 발표했는데, 이는 단순히 답을 제공하는 것에서 더 나아가 답을 도출하는 사고 과정까지도 사용자에게 보여줍니다. 이러한 기능은 AI의 투명성과 신뢰성을 높이는 동시에, 사용자가 AI의 논리를 이해하고 신뢰할 수 있는 기회를 제공합니다. 이번 글에서는 OpenAI의 최신 모델 o1의 특징과 장점, 그리고 실제 사용 사례를 살펴보겠습니다.\n \n \n1. 새로운 AI 모델 'o1'의 등장\nOpenAI는 기존의 GPT 시리즈와 차별화된 새로운 AI 모델인 'o1'을 공개했습니다. o1은 기존의 GPT-4와 달리 문제를 해결하는 데 있어 더 많은 시간을 투자하여 '생각하는' 방식으로 설계되었습니다. 이 모델은 사용자가 제시한 질문에 대한 답변을 생성하기 전에, 각기 다른 전략을 시도하고 자신의 실수를 검토하는 등의 과정을 거칩니다. 이러한 접근 방식은 AI가 단순히 패턴을 인식하는 데 그치지 않고, 실제로 인간처럼 문제를 해결하려고 노력하는 모습을 보여줍니다.\n \n \n2. 학습 방법의 차이점: 강화 학습의 도입\nOpenAI의 연구 책임자인 Jerry Tworek에 따르면, o1 모델은 강화 학습을 통해 훈련되었습니다. 이는 기존의 모델들이 주어진 데이터셋에서 패턴을 찾는 것과 달리, o1이 '보상과 패널티'를 통해 학습한다는 것을 의미합니다. 이를 통해 o1 모델은 이전 모델들보다 훨씬 더 높은 정확도로 문제를 해결할 수 있게 되었습니다. 예를 들어, o1은 국제 수학 올림피아드 문제의 83%를 해결한 반면, GPT-4는 단 13%만을 해결했습니다.\n \n \n3. 사용자와의 상호작용: 사고 과정을 시각적으로 제공\n\n\no1 모델의 가장 큰 특징 중 하나는 사용자에게 '사고 과정'을 시각적으로 제공한다는 점입니다. 사용자가 질문을 던지면, AI는 답을 생성하기 전에 '생각 중...'이라는 메시지를 표시합니다. 답이 생성된 후에는 '4초간 생각함'이라는 드롭다운 메뉴가 나타나며, 이를 클릭하면 AI가 답을 생성하는 데 어떤 과정을 거쳤는지를 확인할 수 있습니다. 예를 들어, \"핫도그는 샌드위치인가?\"라는 질문에 대해 AI는 '질문 분석', '정의 검토' 등의 단계를 거쳐 답을 도출했습니다.\n \n \n4. 실제 적용 사례: 음식 분류 논쟁\n새로운 o1 모델을 통해 실생활의 논쟁적인 질문에도 AI의 사고 과정을 적용할 수 있습니다. '타코는 샌드위치인가?'라는 질문에서 AI는 5초 동안 고민한 후, 정의, 문화적 관점, 법적 해석 등을 고려하여 타코는 샌드위치가 아니라는 결론을 내렸습니다. 또한 '타코는 핫도그인가?'라는 질문에 대해서도, AI는 타코와 핫도그가 서로 다른 요리 카테고리에 속한다는 논리적 이유를 제시했습니다.\n \n \n5. 성능과 한계\no1 모델은 이전 모델에 비해 더 정확하고 창의적인 답변을 제공할 수 있지만, 응답 시간이 길어질 수 있다는 단점이 있습니다. 또한, 아직도 '환각' 문제, 즉 사실과 다른 정보를 생성하는 현상이 완전히 해결된 것은 아니며, 오히려 AI가 더 인간적인 표현을 사용하면서 사용자가 이를 실제 사람의 생각으로 오해할 가능성이 높아졌습니다. 그러나 이러한 문제를 개선하기 위해 OpenAI는 지속적으로 연구를 진행하고 있습니다.\n \n \n6. OpenAI o1 모델 사용 방법\n\n\n새로운 o1 모델은 현재 일부 사용자에게만 제공되고 있습니다. ChatGPT Plus 또는 ChatGPT Team 구독자는 이미 사용할 수 있으며, 다음 주에는 ChatGPT Enterprise와 ChatGPT Ed 사용자도 사용이 가능해질 예정입니다. 무료 사용자에게는 o1-mini 모델이 추후 제공될 예정입니다. 모델을 사용하려면 대화 시작 시 모델 선택 드롭다운 메뉴에서 o1-preview 또는 o1-mini를 선택하면 됩니다. 현재 o1-preview는 주당 30개의 메시지, o1-mini는 50개의 메시지로 사용이 제한됩니다.\n \n \n결론\nOpenAI의 새로운 o1 모델은 AI 기술의 새로운 장을 열었습니다. 단순히 답을 제공하는 것이 아니라, 그 답을 도출하는 사고 과정을 시각적으로 제공함으로써 AI의 투명성과 신뢰성을 높였습니다. 비록 여전히 개선할 점이 많지만, AI가 점점 더 인간적인 사고 방식으로 진화하는 과정을 보는 것은 흥미로운 일입니다. 앞으로의 발전이 기대되는 o1 모델을 통해 AI와의 소통이 한층 더 깊어질 것입니다.",
        "guid": "http://muzbox.tistory.com/483470",
        "categories": [
          "AI, 미래기술/채팅",
          "ai 사용 방법",
          "ai 성능 개선",
          "ai 투명성",
          "ai와 인간 상호작용",
          "ChatGPT",
          "o1 모델",
          "OpenAI",
          "강화 학습",
          "인공지능 사고 과정"
        ],
        "isoDate": "2024-09-15T00:14:07.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "아이폰 16 꼭 필요할까?",
        "link": "http://muzbox.tistory.com/483469",
        "pubDate": "Fri, 13 Sep 2024 11:24:19 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483469#entry483469comment",
        "content": "<p data-ke-size=\"size16\">애플이 발표한 최신 아이폰 16, 하지만 많은 사람들이 기존의 아이폰을 교체할 이유를 찾지 못하고 있습니다. 성능, 배터리 수명, 새로운 기능이 부족한 점 등, 아이폰 16 업그레이드가 필요한지 고민하는 모든 이유를 다루어봅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"611\" data-origin-height=\"650\"><span data-url=\"https://blog.kakaocdn.net/dn/PfZ4S/btsJCnQq4gP/hySpoWXx4jvxifb3yQuNtK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/PfZ4S/btsJCnQq4gP/hySpoWXx4jvxifb3yQuNtK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/PfZ4S/btsJCnQq4gP/hySpoWXx4jvxifb3yQuNtK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FPfZ4S%2FbtsJCnQq4gP%2FhySpoWXx4jvxifb3yQuNtK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"아이폰 16 꼭 필요할까?\" width=\"500\" height=\"532\" data-origin-width=\"611\" data-origin-height=\"650\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;아이폰 16이 출시되었지만, 많은 사용자들은 새로운 모델로의 업그레이드에 대해 회의적인 반응을 보이고 있습니다. 특히, 이미 성능이 뛰어난 아이폰 13 프로 사용자들은 굳이 수백 달러를 더 써가며 새로운 기기로 전환할 필요성을 느끼지 못하고 있습니다. 이 글에서는 아이폰 16 업그레이드가 왜 많은 사람들에게 매력적이지 않은지, 그리고 기존 모델들이 여전히 충분히 강력한 이유를 알아봅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>1. 아이폰 13 프로의 뛰어난 성능</b></span></h2>\n<p data-ke-size=\"size16\">아이폰 13 프로는 여전히 최고의 성능을 자랑합니다. 출시된 지 3년이 지났음에도 불구하고, 일상적인 사용에서 성능 저하를 거의 느낄 수 없습니다. 물론 아이폰 16의 새 모델과 비교하면 웹페이지 로딩 속도나 고사양 게임의 처리 성능에서 약간의 차이가 있을 수 있지만, 실제 사용에서는 거의 느끼지 못할 정도입니다. 이는 특히 애플의 강력한 A15 바이오닉 칩과 120Hz 프로모션 디스플레이 덕분입니다. 반면, 아이폰 16의 기본 모델은 여전히 60Hz 주사율을 유지하고 있어 120Hz의 부드러운 화면 전환에 익숙해진 사용자들에게는 큰 매력이 없습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>2. 배터리 성능과 지속성</b></span></h2>\n<p data-ke-size=\"size16\">아이폰 13 프로의 배터리 성능도 눈에 띕니다. 3년 간의 헤비한 사용에도 불구하고 배터리 상태는 89%를 유지하고 있습니다. 이는 최적화된 충전 시스템과 최신 배터리 관리 기술 덕분에 가능한 일입니다. 예를 들어, 아이폰 11의 경우 새로운 배터리를 장착한 지 1년 만에 90%로 떨어진 반면, 아이폰 13 프로는 그 이상의 지속성을 보여주고 있습니다. 또한, 기기 외관도 거의 손상이 없으며, 약간의 기스 외에는 큰 문제가 없습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"892\" data-origin-height=\"708\"><span data-url=\"https://blog.kakaocdn.net/dn/bWgFXa/btsJz5dkyYj/rkpEakL04k8sHPAo7NK7U1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bWgFXa/btsJz5dkyYj/rkpEakL04k8sHPAo7NK7U1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bWgFXa/btsJz5dkyYj/rkpEakL04k8sHPAo7NK7U1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbWgFXa%2FbtsJz5dkyYj%2FrkpEakL04k8sHPAo7NK7U1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"아이폰 13, 15, 16 일반 사양 비교\" data-origin-width=\"892\" data-origin-height=\"708\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>3. 새로운 기능의 부재</b></span></h2>\n<p data-ke-size=\"size16\">아이폰 16의 새로운 기능들은 기존 사용자들에게 크게 매력적이지 않을 수 있습니다. 이번 모델은 애플의 대규모 언어 모델과 생성형 AI 기능을 포함하지만, 이는 맥북과 같은 고성능 장치에서 더 유용하게 사용할 수 있는 기능입니다. 예를 들어, 서리(Siri)의 향상된 인공지능 기능이나 애플 인텔리전스(Apple Intelligence)는 주로 데스크탑 작업에서 더 자주 활용될 가능성이 높습니다. 따라서 아이폰에서의 이러한 기능 부족은 사용자에게 큰 문제로 다가오지 않을 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>4. 미래를 위한 업그레이드 대기</b></span></h2>\n<p data-ke-size=\"size16\">&nbsp;아이폰 16을 구매하지 않고 기다리는 것이 더 나은 이유도 있습니다. 예를 들어, 2025년에는 아이폰 17 에어와 같은 새로운 모델이 출시될 예정이며, 항상 켜져 있는 120Hz 디스플레이, 화면 아래에 있는 페이스 ID 센서 등 더욱 혁신적인 기능이 탑재될 가능성이 있습니다. 이러한 이유로, 많은 사용자가 현재의 기기를 계속 사용하면서 다음 모델을 기다리는 것이 더 현명한 선택일 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>5. iOS 업데이트와 지속적인 지원</b></span></h2>\n<p data-ke-size=\"size16\">애플은 자사 기기들에 대해 장기간의 소프트웨어 지원을 제공하고 있습니다. 현재 아이폰 XR조차도 iOS 18을 지원하며, 아이폰 13 프로는 2027년까지 소프트웨어 업데이트를 받을 것으로 예상됩니다. 이러한 장기적인 지원 덕분에, 사용자들은 더 오래 기존 기기를 사용할 수 있으며, 소프트웨어 지원이 끝날 때까지 새로운 기능과 보안 패치를 지속적으로 받을 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>결론</b></span></h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"710\" data-origin-height=\"487\"><span data-url=\"https://blog.kakaocdn.net/dn/m75vp/btsJA7AZKED/Lyax6W6k55JYQOiJIujLHK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/m75vp/btsJA7AZKED/Lyax6W6k55JYQOiJIujLHK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/m75vp/btsJA7AZKED/Lyax6W6k55JYQOiJIujLHK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fm75vp%2FbtsJA7AZKED%2FLyax6W6k55JYQOiJIujLHK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"아이폰 16 꼭 필요할까?\" data-origin-width=\"710\" data-origin-height=\"487\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">아이폰 16은 분명 매력적인 기능을 갖추고 있지만, 많은 사용자들에게는 충분한 업그레이드 이유가 되지 않습니다. 성능, 배터리 수명, 새로운 기능의 실용성 등을 고려할 때, 기존 아이폰을 사용하는 것이 여전히 충분히 만족스러운 선택이 될 수 있습니다. 다음 모델에 대한 기대감과 현재 기기의 뛰어난 성능은, 지금 당장 아이폰 16으로 업그레이드하지 않는 것이 더 나은 선택임을 보여줍니다.</p>",
        "contentSnippet": "애플이 발표한 최신 아이폰 16, 하지만 많은 사람들이 기존의 아이폰을 교체할 이유를 찾지 못하고 있습니다. 성능, 배터리 수명, 새로운 기능이 부족한 점 등, 아이폰 16 업그레이드가 필요한지 고민하는 모든 이유를 다루어봅니다.\n\n\n \n 아이폰 16이 출시되었지만, 많은 사용자들은 새로운 모델로의 업그레이드에 대해 회의적인 반응을 보이고 있습니다. 특히, 이미 성능이 뛰어난 아이폰 13 프로 사용자들은 굳이 수백 달러를 더 써가며 새로운 기기로 전환할 필요성을 느끼지 못하고 있습니다. 이 글에서는 아이폰 16 업그레이드가 왜 많은 사람들에게 매력적이지 않은지, 그리고 기존 모델들이 여전히 충분히 강력한 이유를 알아봅니다.\n \n \n1. 아이폰 13 프로의 뛰어난 성능\n아이폰 13 프로는 여전히 최고의 성능을 자랑합니다. 출시된 지 3년이 지났음에도 불구하고, 일상적인 사용에서 성능 저하를 거의 느낄 수 없습니다. 물론 아이폰 16의 새 모델과 비교하면 웹페이지 로딩 속도나 고사양 게임의 처리 성능에서 약간의 차이가 있을 수 있지만, 실제 사용에서는 거의 느끼지 못할 정도입니다. 이는 특히 애플의 강력한 A15 바이오닉 칩과 120Hz 프로모션 디스플레이 덕분입니다. 반면, 아이폰 16의 기본 모델은 여전히 60Hz 주사율을 유지하고 있어 120Hz의 부드러운 화면 전환에 익숙해진 사용자들에게는 큰 매력이 없습니다.\n \n \n2. 배터리 성능과 지속성\n아이폰 13 프로의 배터리 성능도 눈에 띕니다. 3년 간의 헤비한 사용에도 불구하고 배터리 상태는 89%를 유지하고 있습니다. 이는 최적화된 충전 시스템과 최신 배터리 관리 기술 덕분에 가능한 일입니다. 예를 들어, 아이폰 11의 경우 새로운 배터리를 장착한 지 1년 만에 90%로 떨어진 반면, 아이폰 13 프로는 그 이상의 지속성을 보여주고 있습니다. 또한, 기기 외관도 거의 손상이 없으며, 약간의 기스 외에는 큰 문제가 없습니다.\n \n\n\n3. 새로운 기능의 부재\n아이폰 16의 새로운 기능들은 기존 사용자들에게 크게 매력적이지 않을 수 있습니다. 이번 모델은 애플의 대규모 언어 모델과 생성형 AI 기능을 포함하지만, 이는 맥북과 같은 고성능 장치에서 더 유용하게 사용할 수 있는 기능입니다. 예를 들어, 서리(Siri)의 향상된 인공지능 기능이나 애플 인텔리전스(Apple Intelligence)는 주로 데스크탑 작업에서 더 자주 활용될 가능성이 높습니다. 따라서 아이폰에서의 이러한 기능 부족은 사용자에게 큰 문제로 다가오지 않을 것입니다.\n \n \n4. 미래를 위한 업그레이드 대기\n 아이폰 16을 구매하지 않고 기다리는 것이 더 나은 이유도 있습니다. 예를 들어, 2025년에는 아이폰 17 에어와 같은 새로운 모델이 출시될 예정이며, 항상 켜져 있는 120Hz 디스플레이, 화면 아래에 있는 페이스 ID 센서 등 더욱 혁신적인 기능이 탑재될 가능성이 있습니다. 이러한 이유로, 많은 사용자가 현재의 기기를 계속 사용하면서 다음 모델을 기다리는 것이 더 현명한 선택일 수 있습니다.\n \n \n5. iOS 업데이트와 지속적인 지원\n애플은 자사 기기들에 대해 장기간의 소프트웨어 지원을 제공하고 있습니다. 현재 아이폰 XR조차도 iOS 18을 지원하며, 아이폰 13 프로는 2027년까지 소프트웨어 업데이트를 받을 것으로 예상됩니다. 이러한 장기적인 지원 덕분에, 사용자들은 더 오래 기존 기기를 사용할 수 있으며, 소프트웨어 지원이 끝날 때까지 새로운 기능과 보안 패치를 지속적으로 받을 수 있습니다.\n \n \n결론\n\n\n아이폰 16은 분명 매력적인 기능을 갖추고 있지만, 많은 사용자들에게는 충분한 업그레이드 이유가 되지 않습니다. 성능, 배터리 수명, 새로운 기능의 실용성 등을 고려할 때, 기존 아이폰을 사용하는 것이 여전히 충분히 만족스러운 선택이 될 수 있습니다. 다음 모델에 대한 기대감과 현재 기기의 뛰어난 성능은, 지금 당장 아이폰 16으로 업그레이드하지 않는 것이 더 나은 선택임을 보여줍니다.",
        "guid": "http://muzbox.tistory.com/483469",
        "categories": [
          "NEWS/IT 뉴스",
          "120Hz 디스플레이",
          "ios 업데이트",
          "배터리 성능",
          "소프트웨어 지원",
          "아이폰 13 프로",
          "아이폰 16 업그레이드",
          "아이폰 17",
          "애플 인텔리전스"
        ],
        "isoDate": "2024-09-13T02:24:19.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "(RULIWEB`Д')/",
        "title": "[MULTI] 호그와트 레거시 2에 넣어줘, 해리 포터: 퀴디치 챔피언",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2251",
        "pubDate": "Thu, 19 Sep 2024 18:57:01 +0900",
        "author": "(RULIWEB`Д')/",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/24/09/19/19209a693404c329e.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2024-09-19T09:57:01.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "khris'log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "알아두면 업무에 도움이 되는 유용한 도구 17선",
        "link": "https://jacking75.github.io/tech_20240919/",
        "pubDate": "Thu, 19 Sep 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/1vsGbeaCJYw6Jc5z271hPyPu0UXgIGlMnpH8riLQhz7w/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech_20240919/",
        "isoDate": "2024-09-18T15:00:00.000Z"
      },
      {
        "title": "C# - Unity 게임 엔진을 위한 오픈 소스 hot-reload 솔루션 HybridCLR",
        "link": "https://jacking75.github.io/NET_20240915/",
        "pubDate": "Sun, 15 Sep 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/15qtVZPJl0fRCMCXggKPv7SGnxuCIoGxAdp9gpFrd4l8/pub?embedded=true\"></iframe>\n\n<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/1ZfHkaZnhImQqClhjXTqH35ljJcgRaer8NeTgUDHr5KM/pub?embedded=true\"></iframe>\n\n<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/1UuqgF6cVoNgxG2e1lympXnFMNJ6lr4Q4sFhhpP0sYoI/pub?embedded=true\"></iframe>\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/NET_20240915/",
        "isoDate": "2024-09-14T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "onAdFailedToLoad: Network error.",
        "link": "http://serverdown.tistory.com/816",
        "pubDate": "Fri, 20 Sep 2024 01:04:26 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/816#entry816comment",
        "content": "<p data-ke-size=\"size16\">flutter admob 개발중에 나는 에러입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">android studio 로 가상 디바이스 (AVD) 로 돌릴 경우 인터넷이 안되는 경우가 있습니다.</p>\n<p data-ke-size=\"size16\">이현상이 일어나면 삭제하고 다시 설치해도 계속 발생하더군요 방법은&nbsp;</p>\n<p data-ke-size=\"size16\">실제 장비로 개발하는게 제일 쉬운 해결책이구요</p>\n<p data-ke-size=\"size16\">가상장치를 사용하려면&nbsp;android studio 없이 장치를 직접 실행하는 방법이 있습니다.</p>\n<p data-ke-size=\"size16\">원본 내용: <a href=\"https://stackoverflow.com/questions/42736038/android-emulator-not-able-to-access-the-internet/50165129#50165129\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://stackoverflow.com/questions/42736038/android-emulator-not-able-to-access-the-internet/50165129#50165129</a></p>\n<p data-ke-size=\"size16\">여기보시면 DNS 충돌로 일터넷을 못하는 버그가 있으며 발생했다 고쳐졌다를 반복하는거 같습니다.</p>\n<p data-ke-size=\"size16\">먼저 android sdk 를 설치한 폴더로 가서</p>\n<p data-ke-size=\"size16\">emulator 폴더로 들어갑니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">명령어:</p>\n<p data-ke-size=\"size16\">emulator.exe&nbsp;-list-avds</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이걸 치면 현재 설정된 가상 장치들 목록이 나옵니다. 부디 이름을 짧게 고치세요</p>\n<p data-ke-size=\"size16\">C:\\Android\\sdk\\emulator&gt;emulator.exe&nbsp;-list-avds <br />Pixel_7</p>\n<p data-ke-size=\"size16\">저는 이런식으로 나오네요 Pixel_7 이 장치 이름입니다.</p>\n<p data-ke-size=\"size16\">emulator.exe&nbsp;-avd&nbsp;Pixel_7&nbsp;-dns-server&nbsp;8.8.8.8</p>\n<p data-ke-size=\"size16\">이 명령어로 DNS 를 8.8.8.8 로 맞춰서 실행하나봅니다.</p>\n<p data-ke-size=\"size16\">이러면 인터넷이 잘되니 사용하시구요</p>\n<p data-ke-size=\"size16\">ESC 로 뒤로가기가 안되는 문제가 있으니</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"204\" data-origin-height=\"281\"><span data-url=\"https://blog.kakaocdn.net/dn/b2bdlu/btsJGLDZiM8/PS32wJnneEGIJzPR0zlOVK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b2bdlu/btsJGLDZiM8/PS32wJnneEGIJzPR0zlOVK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b2bdlu/btsJGLDZiM8/PS32wJnneEGIJzPR0zlOVK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb2bdlu%2FbtsJGLDZiM8%2FPS32wJnneEGIJzPR0zlOVK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"204\" data-origin-height=\"281\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">옆에 동그라미 버튼 눌르셔야합니다. (불편)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">콜드 부트라는 메뉴도 알아두셔야하는데요</p>\n<p data-ke-size=\"size16\">Android Studio 의 device 메뉴에 보시면 있습니다.</p>\n<p data-ke-size=\"size16\">가끔 마우스로 제어가 안되면 이걸사용해야합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"612\" data-origin-height=\"429\"><span data-url=\"https://blog.kakaocdn.net/dn/2v6Rw/btsJGnXR7JK/Na8bG3YkBER1zejjIwwCVK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/2v6Rw/btsJGnXR7JK/Na8bG3YkBER1zejjIwwCVK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/2v6Rw/btsJGnXR7JK/Na8bG3YkBER1zejjIwwCVK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F2v6Rw%2FbtsJGnXR7JK%2FNa8bG3YkBER1zejjIwwCVK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"612\" data-origin-height=\"429\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">스샷을 잘 못직어서 잘렸는데요 기기 실행하는 메뉴에 점세개 있는 버튼 누르시면</p>\n<p data-ke-size=\"size16\">Cold Boot 라고 있습니다. 기기를 껏다켜는 기능입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">광고 작업하다 안되길레 황당해서 헤맸네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "flutter admob 개발중에 나는 에러입니다.\n \nandroid studio 로 가상 디바이스 (AVD) 로 돌릴 경우 인터넷이 안되는 경우가 있습니다.\n이현상이 일어나면 삭제하고 다시 설치해도 계속 발생하더군요 방법은 \n실제 장비로 개발하는게 제일 쉬운 해결책이구요\n가상장치를 사용하려면 android studio 없이 장치를 직접 실행하는 방법이 있습니다.\n원본 내용: https://stackoverflow.com/questions/42736038/android-emulator-not-able-to-access-the-internet/50165129#50165129\n여기보시면 DNS 충돌로 일터넷을 못하는 버그가 있으며 발생했다 고쳐졌다를 반복하는거 같습니다.\n먼저 android sdk 를 설치한 폴더로 가서\nemulator 폴더로 들어갑니다.\n \n명령어:\nemulator.exe -list-avds\n \n이걸 치면 현재 설정된 가상 장치들 목록이 나옵니다. 부디 이름을 짧게 고치세요\nC:\\Android\\sdk\\emulator>emulator.exe -list-avds \nPixel_7\n저는 이런식으로 나오네요 Pixel_7 이 장치 이름입니다.\nemulator.exe -avd Pixel_7 -dns-server 8.8.8.8\n이 명령어로 DNS 를 8.8.8.8 로 맞춰서 실행하나봅니다.\n이러면 인터넷이 잘되니 사용하시구요\nESC 로 뒤로가기가 안되는 문제가 있으니\n\n\n옆에 동그라미 버튼 눌르셔야합니다. (불편)\n \n콜드 부트라는 메뉴도 알아두셔야하는데요\nAndroid Studio 의 device 메뉴에 보시면 있습니다.\n가끔 마우스로 제어가 안되면 이걸사용해야합니다.\n\n\n스샷을 잘 못직어서 잘렸는데요 기기 실행하는 메뉴에 점세개 있는 버튼 누르시면\nCold Boot 라고 있습니다. 기기를 껏다켜는 기능입니다.\n \n광고 작업하다 안되길레 황당해서 헤맸네요",
        "guid": "http://serverdown.tistory.com/816",
        "categories": [
          "프로그래밍/개발메모",
          "AdMob",
          "FLUTTER"
        ],
        "isoDate": "2024-09-19T16:04:26.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "(진행중) 1인개발자 개인사업자 등록 + 통신판매업 신청",
        "link": "http://serverdown.tistory.com/815",
        "pubDate": "Thu, 19 Sep 2024 15:46:31 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/815#entry815comment",
        "content": "<p data-ke-size=\"size16\">사전지식</p>\n<p data-ke-size=\"size16\">앱스토어에서 인앱을 팔려면 통신판매업자를 등록해야한다.</p>\n<p data-ke-size=\"size16\">통신 판매업자를 등록하려면 사업자등록번호가 필요하다</p>\n<p data-ke-size=\"size16\">사업다 등록을 하려면 인대차계약서가 필요하다.</p>\n<p data-ke-size=\"size16\">고로 나는 임대차계약부터 진행해야한다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1. 임대차계약서 등록</p>\n<p data-ke-size=\"size16\">부모님집에 살기 때문에 써달라고해야한다.</p>\n<p data-ke-size=\"size16\">월세 30만원 이하면 부모님이 월세 수익을 세금으로 내야한다거나 하진 않는거 같다.다&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. 개인사업자등록</p>\n<p data-ke-size=\"size16\">엣지 브라우저러 진행했고 팝업차단을 해지 해야한다. (팝업이 뜰 수 있게 해야한다)<br />크롬은 팝업 차단 해지가 잘안되서 버렸다.</p>\n<p data-ke-size=\"size16\">1. 홈텍스에 들어간다. <a href=\"https://www.hometax.go.kr/websquare/websquare.html?w2xPath=/ui/pp/index_pp.xml\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.hometax.go.kr/websquare/websquare.html?w2xPath=/ui/pp/index_pp.xml</a></p>\n<p data-ke-size=\"size16\">2. 공용인증서로 로그인하고</p>\n<p data-ke-size=\"size16\">3. 상단에 검색창에 개인사업자 라고 친다.</p>\n<p data-ke-size=\"size16\">4. [개인사업자 신청] 이라고 연관 검색어가 나온다. 수동으로 메뉴 찾으려고 했는데 포기했다. (메뉴가 너무 많다.)</p>\n<p data-ke-size=\"size16\">사업자 상호명 같은거 하나 정해야하고</p>\n<p data-ke-size=\"size16\">업종 넣으라는게 나오면 이거 입력&nbsp;<br />업태 : 정보통신업<br />업종&nbsp;코드&nbsp;:&nbsp;722000</p>\n<p data-ke-size=\"size16\">아직은 통신판매업자가 아니다.<br />통신판매 신고서를 내서 번호 받은 다음 할 수 있는거 같다.</p>\n<p data-ke-size=\"size16\">임대차계약서가 없어서 여기서 막힌상태이다&nbsp;<br />뚫고나면 더 쓰겠다.</p>\n<p data-ke-size=\"size16\">참고하는 블로그 글은 이것이다.<br /><a href=\"https://forcreators.stoveindie.com/post/business-registration\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://forcreators.stoveindie.com/post/business-registration</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "사전지식\n앱스토어에서 인앱을 팔려면 통신판매업자를 등록해야한다.\n통신 판매업자를 등록하려면 사업자등록번호가 필요하다\n사업다 등록을 하려면 인대차계약서가 필요하다.\n고로 나는 임대차계약부터 진행해야한다.\n \n1. 임대차계약서 등록\n부모님집에 살기 때문에 써달라고해야한다.\n월세 30만원 이하면 부모님이 월세 수익을 세금으로 내야한다거나 하진 않는거 같다.다 \n \n2. 개인사업자등록\n엣지 브라우저러 진행했고 팝업차단을 해지 해야한다. (팝업이 뜰 수 있게 해야한다)\n크롬은 팝업 차단 해지가 잘안되서 버렸다.\n1. 홈텍스에 들어간다. https://www.hometax.go.kr/websquare/websquare.html?w2xPath=/ui/pp/index_pp.xml\n2. 공용인증서로 로그인하고\n3. 상단에 검색창에 개인사업자 라고 친다.\n4. [개인사업자 신청] 이라고 연관 검색어가 나온다. 수동으로 메뉴 찾으려고 했는데 포기했다. (메뉴가 너무 많다.)\n사업자 상호명 같은거 하나 정해야하고\n업종 넣으라는게 나오면 이거 입력 \n업태 : 정보통신업\n업종 코드 : 722000\n아직은 통신판매업자가 아니다.\n통신판매 신고서를 내서 번호 받은 다음 할 수 있는거 같다.\n임대차계약서가 없어서 여기서 막힌상태이다 \n뚫고나면 더 쓰겠다.\n참고하는 블로그 글은 이것이다.\nhttps://forcreators.stoveindie.com/post/business-registration",
        "guid": "http://serverdown.tistory.com/815",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2024-09-19T06:46:31.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "flutter aab 앱 서명 하기 / 스토어에 올리기",
        "link": "http://serverdown.tistory.com/814",
        "pubDate": "Tue, 17 Sep 2024 22:29:35 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/814#entry814comment",
        "content": "<p data-ke-size=\"size16\">문서의 설명이 유연하거나 위치에 따라 이상해서 되는 방법으로 다시 정리하겠습니다.</p>\n<p data-ke-size=\"size16\">참고 문서:&nbsp; <a href=\"https://docs.flutter.dev/deployment/android\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://docs.flutter.dev/deployment/android</a></p>\n<figure id=\"og_1726577759256\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Build and release an Android app\" data-og-description=\"How to prepare for and release an Android app to the Play store.\" data-og-host=\"docs.flutter.dev\" data-og-source-url=\"https://docs.flutter.dev/deployment/android\" data-og-url=\"https://docs.flutter.dev/deployment/android\" data-og-image=\"https://scrap.kakaocdn.net/dn/KtrpL/hyW20hSygE/bQymdAAXACFxzJ18jRARC0/img.png?width=937&amp;height=461&amp;face=0_0_937_461,https://scrap.kakaocdn.net/dn/paVEo/hyW23Tbz5M/orFKvg1yW5kZ7GyrRcFCw1/img.png?width=1902&amp;height=568&amp;face=0_0_1902_568,https://scrap.kakaocdn.net/dn/1YzTw/hyW6Jr0N66/zjkNFzhUtfr6PmFHxdxKk0/img.png?width=1558&amp;height=422&amp;face=0_0_1558_422\"><a href=\"https://docs.flutter.dev/deployment/android\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://docs.flutter.dev/deployment/android\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/KtrpL/hyW20hSygE/bQymdAAXACFxzJ18jRARC0/img.png?width=937&amp;height=461&amp;face=0_0_937_461,https://scrap.kakaocdn.net/dn/paVEo/hyW23Tbz5M/orFKvg1yW5kZ7GyrRcFCw1/img.png?width=1902&amp;height=568&amp;face=0_0_1902_568,https://scrap.kakaocdn.net/dn/1YzTw/hyW6Jr0N66/zjkNFzhUtfr6PmFHxdxKk0/img.png?width=1558&amp;height=422&amp;face=0_0_1558_422');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Build and release an Android app</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">How to prepare for and release an Android app to the Play store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">docs.flutter.dev</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size26\">문서의 함정</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"854\" data-origin-height=\"334\"><span data-url=\"https://blog.kakaocdn.net/dn/4mZf9/btsJFwNp8ln/61vBUPRz1bAHcb91ct40SK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/4mZf9/btsJFwNp8ln/61vBUPRz1bAHcb91ct40SK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/4mZf9/btsJFwNp8ln/61vBUPRz1bAHcb91ct40SK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F4mZf9%2FbtsJFwNp8ln%2F61vBUPRz1bAHcb91ct40SK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"854\" data-origin-height=\"334\"/></span></figure>\n</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">문서에서 고치라는 부분인데 if 처리를 해놯네요</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">파일이 없으면 빌드가 중단되야하는데 이걸 넘겨버려서 오류를 찾기 더 어렵게 되어있습니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">정말 쓸모없고 문제 찾기도 어렵게하는 방법이였습니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">jks 파일을 만드는 온갖 어려운 방법을 알려주는데 괜히 보면 시간낭비이니 잘 피하시길 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">1. jsk 파일 만들기</h2>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #ffffff;\">keytool -genkey -v -keystore key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias [별명]</span></div>\n</div>\n<p data-ke-size=\"size16\">[별명] 부분은 알아서 고치시고 key.jks 는 생성할 파일명인데 이파일명 기준으로 작성되니 그대로 쓰시길</p>\n<p data-ke-size=\"size16\">암호가 두개 있습니다. 확인을위해 한번더 입력하기 때문에 총 4번을 입력하는데</p>\n<p data-ke-size=\"size16\">다 같은걸 입력해야 관리가 쉽습니다.</p>\n<p data-ke-size=\"size16\">여러 정보를 요구하는데 다 입력안해도 되니 넘어가시고</p>\n<p data-ke-size=\"size16\">[예/아니오] 이부분 나오면 y 를 입력합니다.</p>\n<p data-ke-size=\"size16\">그다음에 두번째 암호를 입력하라는데 바로 엔터치면 위에서 입력한 암호와 동일하게 셋팅됩니다.</p>\n<p data-ke-size=\"size16\">저는 동일하게 했습니다. 절대 중요한게 아니니 복잡하게 하지마세요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2. <span style=\"text-align: left;\">key.properties</span></h2>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\"> </span><span style=\"text-align: left;\">만들 필요 없습니다. 넘어갑니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">jks 의 암호를 노출 시키지 않기위해서 다른파일에서 읽는건데<br /></span><span style=\"text-align: left;\">복잡하고 노출되도 활용할만한 가치가 없습니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"text-align: left;\">3. build.gradle 수정</span></h2>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">build.gradle 은 파일이 두군데 있습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">[내 플러터 프로젝트]/android/app/build.gradle 을 수정하세요</span></p>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #ffffff;\">buildTypes { &lt;-- 이부분을 수정합니다.</span></div>\n<div>&nbsp;</div>\n<div>&nbsp;</div>\n<div>\n<div style=\"background-color: #000000; color: #ffffff;\"><br />\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; signingConfigs {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; release {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFile file(</span><span style=\"color: #ce9178;\">\"../../key.jks\"</span><span style=\"color: #ffffff;\">)</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; keyAlias </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> \"[별명]\"</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; keyPassword </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> \"[암호]\"</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storePassword </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> <span style=\"text-align: start;\">\"[암호]\"</span> </span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; buildTypes {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; release {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signingConfig signingConfigs</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #ffffff;\">release</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; }</span></div>\n</div>\n</div>\n<div>&nbsp;</div>\n</div>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">buildTypes<span>&nbsp; 위에 <span style=\"text-align: start;\">signingConfigs<span>&nbsp; 가 오고<br /></span></span></span></span> <span style=\"text-align: start;\">buildTypes</span><span style=\"background-color: #000000; color: #000000; text-align: start;\">&nbsp;<span>&nbsp; 안에는 debug 가 release 로 변경되었습니다.</span></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span>4. 파일위치 점검</span></span></h2>\n<p data-ke-size=\"size16\"><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span>[내 플러토 프로젝트]<br />&nbsp; ㄴ android<br />&nbsp; &nbsp; &nbsp; &nbsp;ㄴ app<br /></span></span><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; build.gradle<br />key.jks</span></span></p>\n<p data-ke-size=\"size16\"><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span>즉 key.jks 파일은 <span style=\"text-align: start;\">[내 플러토 프로젝트] 에 두시면 됩니다.</span></span></span></p>\n<p data-ke-size=\"size16\"><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span><span style=\"text-align: start;\">pubspec.yaml <br />analysis_options.yaml<br />이 파일들이 있는 폴더에 같이 두세요</span></span></span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"265\" data-origin-height=\"570\"><span data-url=\"https://blog.kakaocdn.net/dn/btfLZp/btsJDcDCMJV/Nk0KoDr4gJVs4mew9u2i80/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/btfLZp/btsJDcDCMJV/Nk0KoDr4gJVs4mew9u2i80/img.png\"><img src=\"https://blog.kakaocdn.net/dn/btfLZp/btsJDcDCMJV/Nk0KoDr4gJVs4mew9u2i80/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbtfLZp%2FbtsJDcDCMJV%2FNk0KoDr4gJVs4mew9u2i80%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"265\" data-origin-height=\"570\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">요로케</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">5. 빌드하기</h2>\n<p data-ke-size=\"size16\">빌드는 터미널 명령어로 이걸 치세요&nbsp;</p>\n<p data-ke-size=\"size16\">flutter build aab</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">성공하면 녹색으로 알려줍니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"716\" data-origin-height=\"181\"><span data-url=\"https://blog.kakaocdn.net/dn/VT90d/btsJEPz6Z3J/HOAbQdxa3xhgSkLCKl8G00/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/VT90d/btsJEPz6Z3J/HOAbQdxa3xhgSkLCKl8G00/img.png\"><img src=\"https://blog.kakaocdn.net/dn/VT90d/btsJEPz6Z3J/HOAbQdxa3xhgSkLCKl8G00/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FVT90d%2FbtsJEPz6Z3J%2FHOAbQdxa3xhgSkLCKl8G00%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"716\" data-origin-height=\"181\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">6. 스토어에 올리기</h2>\n<p data-ke-size=\"size16\">결과물이 있는 폴더</p>\n<p data-ke-size=\"size16\">[내 플러터 프로젝트] / build / app / outputs / bundle / release</p>\n<p data-ke-size=\"size16\">아주 깊숙한 곳에있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">7. 다음번 스토어에 올릴때 빌드 코드를 변경하셔야합니다.</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"698\" data-origin-height=\"358\"><span data-url=\"https://blog.kakaocdn.net/dn/bDeCPA/btsJElTFCvq/1fCWQGzHRUJ2VgDcBQT5E1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bDeCPA/btsJElTFCvq/1fCWQGzHRUJ2VgDcBQT5E1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bDeCPA/btsJElTFCvq/1fCWQGzHRUJ2VgDcBQT5E1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbDeCPA%2FbtsJElTFCvq%2F1fCWQGzHRUJ2VgDcBQT5E1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"698\" data-origin-height=\"358\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">위에서 고친 build.gradle 파일에 이런게 있습니다.</p>\n<p data-ke-size=\"size16\">flutter.versionCode 이걸로 검색하시면&nbsp;</p>\n<p data-ke-size=\"size16\">local.properties 라는 파일에 정의 되어있는데 스토어에 올릴때마다 이 숫자를 하나씩 올려야합니다.</p>\n<p data-ke-size=\"size16\">자주 고쳐야하니 기억해두시면 좋습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "문서의 설명이 유연하거나 위치에 따라 이상해서 되는 방법으로 다시 정리하겠습니다.\n참고 문서:  https://docs.flutter.dev/deployment/android\n\n \nBuild and release an Android app\nHow to prepare for and release an Android app to the Play store.\ndocs.flutter.dev\n\n \n문서의 함정\n\n\n문서에서 고치라는 부분인데 if 처리를 해놯네요\n파일이 없으면 빌드가 중단되야하는데 이걸 넘겨버려서 오류를 찾기 더 어렵게 되어있습니다.\n정말 쓸모없고 문제 찾기도 어렵게하는 방법이였습니다.\n \njks 파일을 만드는 온갖 어려운 방법을 알려주는데 괜히 보면 시간낭비이니 잘 피하시길 ...\n \n \n1. jsk 파일 만들기\nkeytool -genkey -v -keystore key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias [별명]\n[별명] 부분은 알아서 고치시고 key.jks 는 생성할 파일명인데 이파일명 기준으로 작성되니 그대로 쓰시길\n암호가 두개 있습니다. 확인을위해 한번더 입력하기 때문에 총 4번을 입력하는데\n다 같은걸 입력해야 관리가 쉽습니다.\n여러 정보를 요구하는데 다 입력안해도 되니 넘어가시고\n[예/아니오] 이부분 나오면 y 를 입력합니다.\n그다음에 두번째 암호를 입력하라는데 바로 엔터치면 위에서 입력한 암호와 동일하게 셋팅됩니다.\n저는 동일하게 했습니다. 절대 중요한게 아니니 복잡하게 하지마세요\n \n \n2. key.properties\n 만들 필요 없습니다. 넘어갑니다.\njks 의 암호를 노출 시키지 않기위해서 다른파일에서 읽는건데\n복잡하고 노출되도 활용할만한 가치가 없습니다.\n \n3. build.gradle 수정\nbuild.gradle 은 파일이 두군데 있습니다.\n[내 플러터 프로젝트]/android/app/build.gradle 을 수정하세요\nbuildTypes { <-- 이부분을 수정합니다.\n \n \n\n    signingConfigs {\n        release {\n            storeFile file(\"../../key.jks\")\n            keyAlias = \"[별명]\"\n            keyPassword = \"[암호]\"\n            storePassword = \"[암호]\" \n        }\n    }\n    buildTypes {\n        release {\n            signingConfig signingConfigs.release\n        }\n    }\n \nbuildTypes  위에 signingConfigs  가 오고\n buildTypes   안에는 debug 가 release 로 변경되었습니다.\n \n \n4. 파일위치 점검\n[내 플러토 프로젝트]\n  ㄴ android\n       ㄴ app\n            build.gradle\nkey.jks\n즉 key.jks 파일은 [내 플러토 프로젝트] 에 두시면 됩니다.\npubspec.yaml \nanalysis_options.yaml\n이 파일들이 있는 폴더에 같이 두세요\n\n\n요로케\n \n \n5. 빌드하기\n빌드는 터미널 명령어로 이걸 치세요 \nflutter build aab\n \n성공하면 녹색으로 알려줍니다.\n\n\n \n6. 스토어에 올리기\n결과물이 있는 폴더\n[내 플러터 프로젝트] / build / app / outputs / bundle / release\n아주 깊숙한 곳에있습니다.\n \n \n7. 다음번 스토어에 올릴때 빌드 코드를 변경하셔야합니다.\n\n\n위에서 고친 build.gradle 파일에 이런게 있습니다.\nflutter.versionCode 이걸로 검색하시면 \nlocal.properties 라는 파일에 정의 되어있는데 스토어에 올릴때마다 이 숫자를 하나씩 올려야합니다.\n자주 고쳐야하니 기억해두시면 좋습니다.",
        "guid": "http://serverdown.tistory.com/814",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2024-09-17T13:29:35.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "일억은퇴 - SPY 넣어두고 매월 뽑아쓰는 시나리오 백테스트",
        "link": "http://serverdown.tistory.com/812",
        "pubDate": "Tue, 17 Sep 2024 15:57:42 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/812#entry812comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=AwEfvZfvyRs\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=AwEfvZfvyRs</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=AwEfvZfvyRs\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bsb3Do/hyW6AV59gF/gx9NShNHDWk8rgMmTDNqDK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"SPY 1억 매수하고 월배당 100만원받기 테스트\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/AwEfvZfvyRs\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">백테스트는 거저 배울 수 있는 좋은 기회입니다.</p>\n<p data-ke-size=\"size16\">상황에 따라 다르긴한데</p>\n<p data-ke-size=\"size16\">가장 좋은 시나리오에서는 14년을 빼먹어도 원금이 늘어나는 결과가 나왔군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고로 향수 10년은 S&amp;P500 잘 못갈꺼라는 리포트가 있군요</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/KCEP-ZG7b2s?t=3896\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/KCEP-ZG7b2s?t=3896</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=KCEP-ZG7b2s\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/APHU4/hyW2W0RrZm/WLGBYFlc4t9qtpIuZYvt21/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"나쁘지 않은 미국 소비 | 50bp 베팅 &amp; 연착륙 전망하면서도 불안한 황소들 | 주가 부양 나선 마이크\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/KCEP-ZG7b2s\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다우배당을 노리는게 좋겠습니다.</p>\n<p data-ke-size=\"size16\">SCHD 추천</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=AwEfvZfvyRs\n\n\n\n백테스트는 거저 배울 수 있는 좋은 기회입니다.\n상황에 따라 다르긴한데\n가장 좋은 시나리오에서는 14년을 빼먹어도 원금이 늘어나는 결과가 나왔군요\n \n \n참고로 향수 10년은 S&P500 잘 못갈꺼라는 리포트가 있군요\n영상: https://youtu.be/KCEP-ZG7b2s?t=3896\n\n\n\n \n다우배당을 노리는게 좋겠습니다.\nSCHD 추천",
        "guid": "http://serverdown.tistory.com/812",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-09-17T06:57:42.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "flutter  &quot;YAML 디버깅에 대 한 확장이 없습니다. Marketplace에서 YAML 확장을 찾아야 하나요?&quot;",
        "link": "http://serverdown.tistory.com/811",
        "pubDate": "Tue, 17 Sep 2024 15:49:13 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/811#entry811comment",
        "content": "<p data-ke-size=\"size16\">vscode 로 flutter 개발중에 나는 경우 인데요</p>\n<p data-ke-size=\"size16\">실행할때 보통 [실행] -&gt; [디버깅 없이 실행] 을 누르게 되는데요</p>\n<p data-ke-size=\"size16\">이때 main.dart 파일 이 보이는 상태에서 해야합니다.</p>\n<p data-ke-size=\"size16\">현재보고있는 파일기준에 따라 에러 명령은 다르게 표시되는데요</p>\n<p data-ke-size=\"size16\">잘못 집어서 시간이 오래걸려서 찾아냈습니다. ㅠㅠ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">결론</h2>\n<p data-ke-size=\"size16\">main.dartk 가 보이는 상태에서 [실행] -&gt; [디버깅 ...] 을 누른다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "vscode 로 flutter 개발중에 나는 경우 인데요\n실행할때 보통 [실행] -> [디버깅 없이 실행] 을 누르게 되는데요\n이때 main.dart 파일 이 보이는 상태에서 해야합니다.\n현재보고있는 파일기준에 따라 에러 명령은 다르게 표시되는데요\n잘못 집어서 시간이 오래걸려서 찾아냈습니다. ㅠㅠ\n \n결론\nmain.dartk 가 보이는 상태에서 [실행] -> [디버깅 ...] 을 누른다.",
        "guid": "http://serverdown.tistory.com/811",
        "categories": [
          "프로그래밍/개발메모",
          "FLUTTER"
        ],
        "isoDate": "2024-09-17T06:49:13.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "개인 앱 개발 스토리",
        "link": "http://serverdown.tistory.com/810",
        "pubDate": "Tue, 17 Sep 2024 13:49:34 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/810#entry810comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=XYR2-_H4PzI\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=XYR2-_H4PzI</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=XYR2-_H4PzI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/zLJkn/hyW6KYHNbe/NTTP68WOKwk3kqykUKuVXK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"프로그래밍 좀비님의 이야기\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/XYR2-_H4PzI\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">욕심 부리지말고 작은거 부터 하자</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=XYR2-_H4PzI\n\n\n\n욕심 부리지말고 작은거 부터 하자",
        "guid": "http://serverdown.tistory.com/810",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-09-17T04:49:34.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "flutter 잡다한 지식 모음 영상 / 이름을 몰라 검색할 수도 없는 그것들",
        "link": "http://serverdown.tistory.com/809",
        "pubDate": "Mon, 16 Sep 2024 01:49:08 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/809#entry809comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=5vDq5DXXxss\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=5vDq5DXXxss</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=5vDq5DXXxss\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/da0suZ/hyW2SRjTW0/YN9yKdabrr6Sv3Dnpbob80/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Top 30 Flutter Tips and Tricks\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/5vDq5DXXxss\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">이게 뭐지 하던 그것의 이름을 알아보려면 이 영상을 참고하세요</p>\n<p data-ke-size=\"size16\">다른앱에서 많이 봤던 이름을 모르던 그것이 모아져있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=M9J-JJOuyE0&amp;t=4s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=M9J-JJOuyE0&amp;t=4s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=M9J-JJOuyE0\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/gYFPf/hyW2V1Bb6r/lYVYkBcTwAtrwZoTMF22eK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Top 35 Flutter Widgets\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/M9J-JJOuyE0\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">역시나 이름은 모르겠고 다른앱에서 많이 보던 것을을 설명하는 영상입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=5vDq5DXXxss\n\n\n\n이게 뭐지 하던 그것의 이름을 알아보려면 이 영상을 참고하세요\n다른앱에서 많이 봤던 이름을 모르던 그것이 모아져있습니다.\n \n \n영상: https://www.youtube.com/watch?v=M9J-JJOuyE0&t=4s\n\n\n\n역시나 이름은 모르겠고 다른앱에서 많이 보던 것을을 설명하는 영상입니다.",
        "guid": "http://serverdown.tistory.com/809",
        "categories": [
          "FLUTTER"
        ],
        "isoDate": "2024-09-15T16:49:08.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "flutter AnimatedContainer 로 에니메이션 주기",
        "link": "http://serverdown.tistory.com/808",
        "pubDate": "Sun, 15 Sep 2024 15:15:19 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/808#entry808comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=sZw8opj38Vo&amp;list=PL4cUxeGkcC9gP1qg8yj-Jokef29VRCLt1&amp;index=2\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=sZw8opj38Vo&amp;list=PL4cUxeGkcC9gP1qg8yj-Jokef29VRCLt1&amp;index=2</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=sZw8opj38Vo\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cyi4P0/hyW2TigGxi/Og7BK34taTKIBwcWvTPfgK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Flutter Animation Tutorial #2 - Built-in Animations\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/sZw8opj38Vo\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">AnimatedContainer&nbsp; 안에 시간 속성이 있어서</p>\n<p data-ke-size=\"size16\">몇가지 옵션들을 설정하면 입력한 시간동안 변환이 이뤄지면서 에니메이션 되는것 처럼 보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">코드:</p>\n<pre id=\"code_1726380352256\" class=\"javascript\" data-ke-language=\"javascript\" data-ke-type=\"codeblock\"><code>// import 'dart:async';\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatefulWidget {\n  const MyApp({super.key});\n\n  @override\n  State&lt;MyApp&gt; createState() =&gt; _MyAppState();\n}\n\nclass _MyAppState extends State&lt;MyApp&gt; {\n  bool toogle = false;\n  Duration d = Duration(milliseconds: 5000);\n  double mg = 50;\n  Color bg = Colors.green;\n\n  @override\n  void initState() {\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // print(\"build\");\n    return MaterialApp(\n      title: \"Title\",\n      theme: ThemeData(\n        useMaterial3: true,\n        colorScheme: ColorScheme.fromSeed(\n          seedColor: Colors.green,\n          brightness: Brightness.dark,\n        ),\n      ),\n      home: SafeArea(\n        child: AnimatedContainer(\n          duration: d,\n          margin: EdgeInsets.all(mg),\n          color: bg,\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.center,\n            children: [\n              OutlinedButton(\n                onPressed: () {\n                  setState(() {\n                    toogle = !toogle;\n                    if (toogle) {\n                      bg = Colors.red;\n                      mg = 100;\n                    } else {\n                      bg = Colors.green;\n                      mg = 50;\n                    }\n                  });\n                },\n                child: BigText(\"button3\"),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  // 쉽게 줄여서 쓰려고 만듬\n  Widget BigText(String text, {double size = 30}) {\n    return Text(text, style: TextStyle(fontSize: size));\n  }\n}</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">결과물: <a href=\"https://www.youtube.com/shorts/484v08WCk5M\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/shorts/484v08WCk5M</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/shorts/484v08WCk5M\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dOBWaZ/hyW2RLxCsb/lSLQTD1TxNZGPv01pAytq0/img.jpg?width=278&amp;height=480&amp;face=0_0_278_480,https://scrap.kakaocdn.net/dn/KKZWR/hyW2W69Ecp/qEc7LfZkmR2yIl7uDAjRQk/img.jpg?width=278&amp;height=480&amp;face=0_0_278_480\" data-video-width=\"278\" data-video-height=\"480\" data-video-origin-width=\"278\" data-video-origin-height=\"480\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"flutter AnimatedContainer\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/484v08WCk5M\" width=\"278\" height=\"480\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=sZw8opj38Vo&list=PL4cUxeGkcC9gP1qg8yj-Jokef29VRCLt1&index=2\n\n\n\n \nAnimatedContainer  안에 시간 속성이 있어서\n몇가지 옵션들을 설정하면 입력한 시간동안 변환이 이뤄지면서 에니메이션 되는것 처럼 보입니다.\n \n코드:\n// import 'dart:async';\nimport 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatefulWidget {\n  const MyApp({super.key});\n\n  @override\n  State<MyApp> createState() => _MyAppState();\n}\n\nclass _MyAppState extends State<MyApp> {\n  bool toogle = false;\n  Duration d = Duration(milliseconds: 5000);\n  double mg = 50;\n  Color bg = Colors.green;\n\n  @override\n  void initState() {\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // print(\"build\");\n    return MaterialApp(\n      title: \"Title\",\n      theme: ThemeData(\n        useMaterial3: true,\n        colorScheme: ColorScheme.fromSeed(\n          seedColor: Colors.green,\n          brightness: Brightness.dark,\n        ),\n      ),\n      home: SafeArea(\n        child: AnimatedContainer(\n          duration: d,\n          margin: EdgeInsets.all(mg),\n          color: bg,\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.center,\n            children: [\n              OutlinedButton(\n                onPressed: () {\n                  setState(() {\n                    toogle = !toogle;\n                    if (toogle) {\n                      bg = Colors.red;\n                      mg = 100;\n                    } else {\n                      bg = Colors.green;\n                      mg = 50;\n                    }\n                  });\n                },\n                child: BigText(\"button3\"),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  // 쉽게 줄여서 쓰려고 만듬\n  Widget BigText(String text, {double size = 30}) {\n    return Text(text, style: TextStyle(fontSize: size));\n  }\n}\n \n결과물: https://www.youtube.com/shorts/484v08WCk5M",
        "guid": "http://serverdown.tistory.com/808",
        "categories": [
          "프로그래밍/개발메모",
          "FLUTTER"
        ],
        "isoDate": "2024-09-15T06:15:19.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "휴대용 접이식 키보드를 알아보자",
        "link": "http://serverdown.tistory.com/807",
        "pubDate": "Sun, 15 Sep 2024 13:35:40 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/807#entry807comment",
        "content": "<p data-ke-size=\"size16\">모니터랑 키보드가 연결안된 원격 컴퓨터가 많아서 알아보고 있는데</p>\n<p data-ke-size=\"size16\">마음에 들지는 않군요</p>\n<p data-ke-size=\"size16\">제가 중요하게 보는 요소는</p>\n<p data-ke-size=\"size16\">1. 오타가 나는 키보드는 안됨 - 왜곡이 적고 키 크기도 일반키보드랑 비슷해야합니다.</p>\n<p data-ke-size=\"size16\">2. print screen 키가 필요 - F12 오른족에 있는 키인데 저는 엄청 많이 씁니다.<br />&nbsp; &nbsp; 이 키가 있는 휴대용 키보드는 본적이 없고 펑션키 조합으로 되는지도 불분명합니다.</p>\n<p data-ke-size=\"size16\">3. 트래패드나 마우스 기능이 필수<br />&nbsp; &nbsp; &nbsp;마우스 없으면 또연결해야하는데 이러면 이미 휴대성을 상실했다고 봐야합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">전부 print screeen 의 존재를 확인하지 못해서 제가 설건 없구요</p>\n<p data-ke-size=\"size16\">알아본바 쓸만한거 2개와 마지막에 중국산도 하나 넣었습니다.<br />중국껀는 오타가 있을거 같아 보이긴하는데 가격이 싸군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=UNws9g4_Ll8\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=UNws9g4_Ll8</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=UNws9g4_Ll8\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/boAvwp/hyW2SwTM9d/CT9otMu3HtjKKzgJIZxg20/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"키보드, 접습니다. 아이노트 X-Folding Touch Big 접이식 블루투스 키보드 써 보니\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/UNws9g4_Ll8\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">아이노트 X-Folding Touch Big - 5만원정도</p>\n<p data-ke-size=\"size16\">접히는 부분에 키보드 외곡이 없군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상2: <a href=\"https://www.youtube.com/watch?v=G8FKra6H4lo&amp;t=519s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=G8FKra6H4lo&amp;t=519s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=G8FKra6H4lo\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/fpokN/hyW2QeLCFt/jmChghxK48ikzAntIPN0u1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"접이식 키보드 고민 중 이신가요? / Britz BA-BK10 PLUS 리뷰\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/G8FKra6H4lo\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">브리츠 BA-BK10 Plus - 6.5만원</p>\n<p data-ke-size=\"size16\">오타가 덜 나게 외곡이 적은 모양이라고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상3: <a href=\"https://www.youtube.com/watch?v=mEJOWBCViLY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=mEJOWBCViLY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=mEJOWBCViLY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/eFDms/hyW2RksaB9/HOksAGqU85L6k6q3cPpVW0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"2만원대 거의 완벽한 블루투스 키보드! 알리발 AVATTO 접이식 키보드 리뷰 _ 오랜만에 마음에 드는 \" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/mEJOWBCViLY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">AVATO 접이식 키보드 - 2.9만원</p>\n<p data-ke-size=\"size16\">접히는 부분에 왜곡이 있군요</p>\n<p data-ke-size=\"size16\">왜곡이 오타를 부르기 때문에 비추하구요</p>\n<p data-ke-size=\"size16\">장점은 싸다 + 급하면 쓴다. 정도</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "모니터랑 키보드가 연결안된 원격 컴퓨터가 많아서 알아보고 있는데\n마음에 들지는 않군요\n제가 중요하게 보는 요소는\n1. 오타가 나는 키보드는 안됨 - 왜곡이 적고 키 크기도 일반키보드랑 비슷해야합니다.\n2. print screen 키가 필요 - F12 오른족에 있는 키인데 저는 엄청 많이 씁니다.\n    이 키가 있는 휴대용 키보드는 본적이 없고 펑션키 조합으로 되는지도 불분명합니다.\n3. 트래패드나 마우스 기능이 필수\n     마우스 없으면 또연결해야하는데 이러면 이미 휴대성을 상실했다고 봐야합니다.\n \n전부 print screeen 의 존재를 확인하지 못해서 제가 설건 없구요\n알아본바 쓸만한거 2개와 마지막에 중국산도 하나 넣었습니다.\n중국껀는 오타가 있을거 같아 보이긴하는데 가격이 싸군요\n \n \n영상: https://www.youtube.com/watch?v=UNws9g4_Ll8\n\n\n\n아이노트 X-Folding Touch Big - 5만원정도\n접히는 부분에 키보드 외곡이 없군요\n \n \n영상2: https://www.youtube.com/watch?v=G8FKra6H4lo&t=519s\n\n\n\n브리츠 BA-BK10 Plus - 6.5만원\n오타가 덜 나게 외곡이 적은 모양이라고 합니다.\n \n \n영상3: https://www.youtube.com/watch?v=mEJOWBCViLY\n\n\n\nAVATO 접이식 키보드 - 2.9만원\n접히는 부분에 왜곡이 있군요\n왜곡이 오타를 부르기 때문에 비추하구요\n장점은 싸다 + 급하면 쓴다. 정도",
        "guid": "http://serverdown.tistory.com/807",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-09-15T04:35:40.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "flutter dart 전역변수 사용법",
        "link": "http://serverdown.tistory.com/806",
        "pubDate": "Sun, 15 Sep 2024 11:12:00 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/806#entry806comment",
        "content": "<p data-ke-size=\"size16\">코딩 연습은 이곳에서 할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><a href=\"https://dartpad.dev/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://dartpad.dev/</a></p>\n<figure id=\"og_1726366115996\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"DartPad\" data-og-description=\"\" data-og-host=\"dartpad.dev\" data-og-source-url=\"https://dartpad.dev/\" data-og-url=\"https://dartpad.dev/\" data-og-image=\"\"><a href=\"https://dartpad.dev/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://dartpad.dev/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">DartPad</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">&nbsp;</p>\n<p class=\"og-host\" data-ke-size=\"size16\">dartpad.dev</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">코드는 이렇구요</p>\n<pre id=\"code_1726366192715\" style=\"background-color: #f8f8f8; color: #383a42; text-align: start;\" data-ke-type=\"codeblock\" data-ke-language=\"javascript\"><code>void main() {\n  A.a = 1;\n  print(\"a=\" + A.a.toString());\n\n  b += 100;\n  print(\"b=\" + b.toString());\n}\n\nclass A {\n  static int a = 0;\n}\n\nint b = 0;</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">결과:는 RUN 버튼 누르면 되구요</p>\n<p data-ke-size=\"size16\">a=1 <br />b=100</p>\n<p data-ke-size=\"size16\">이렇게 나왔습니다.<br />즉 전역변수 사용에 별다른 제약사항은 없고 함수 밖에다 선언하면 되구요<br />class 의 static 맴버도 사용 가능했습니다.</p>\n<p data-ke-size=\"size16\">UI 나 클라이언트 작업에 적함한 언어가 맞는거 같군요</p>\n<p data-ke-size=\"size16\">go 는 이부분에 제약이 심했는데 dart 는 쉬웠습니다.</p>",
        "contentSnippet": "코딩 연습은 이곳에서 할 수 있습니다.\nhttps://dartpad.dev/\n\n \nDartPad\n \ndartpad.dev\n\n \n코드는 이렇구요\nvoid main() {\n  A.a = 1;\n  print(\"a=\" + A.a.toString());\n\n  b += 100;\n  print(\"b=\" + b.toString());\n}\n\nclass A {\n  static int a = 0;\n}\n\nint b = 0;\n \n결과:는 RUN 버튼 누르면 되구요\na=1 \nb=100\n이렇게 나왔습니다.\n즉 전역변수 사용에 별다른 제약사항은 없고 함수 밖에다 선언하면 되구요\nclass 의 static 맴버도 사용 가능했습니다.\nUI 나 클라이언트 작업에 적함한 언어가 맞는거 같군요\ngo 는 이부분에 제약이 심했는데 dart 는 쉬웠습니다.",
        "guid": "http://serverdown.tistory.com/806",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2024-09-15T02:12:00.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Hybrid's Notes",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "결심은 단순하게",
        "link": "https://jojoldu.tistory.com/805",
        "pubDate": "Sat, 14 Sep 2024 17:03:12 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/805#entry805comment",
        "content": "<p data-ke-size=\"size16\"><a href=\"https://comic.naver.com/webtoon/list?titleId=670144\">가담항설 웹툰</a>을 보면 참 멋진 대사들이 많다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">저는 사당패 시절, 매일 결계에 갇혀 지냈는데, 저는 그곳을 영원히 나갈 수 없을 거라 믿었어요.<br />항상 그런 말을 들었거든요.<br />\"여기서 절대 도망칠 수 없어\"<br />\"도망쳐도 반드시 붙잡힐 거야\"<br />\"어디에서도 널 필요로 하지 않아\"<br />\"이곳을 떠나면 넌 불행해질 거야\"<br />어릴 때는 말을 잘 듣는게 착한 거라고 생각하잖아요.<br />말을 듣지 않고 남에게 피해를 입히거나 불행하게 만들면 벌을 받는다고.<br />그런데 말도 잘 듣고 남을 불행하게 만들지 않아도 저는 왜 매일이 불행하고 괴로운 건지 너무 궁금한 거에요.<br />그런데 어느 날, 전국을 떠돌다 <b>우연히 두류산 고개를 지나는데, 그 자리에서 발을 뗄 수가 없었어요</b>.<br /><b>말로만 듣던 것과는 비교도 안되게 아름다워서</b>.<br /><b>찰나가 아닌 이곳의 사계절을 다 보고 싶어서</b>.<br />그리고 깨달았죠.<br />그동안 나는 타인의 마음에 맞는, 타인의 목적을 위한 삶을 살면서 한 번도 스스로의 마음을 들여다보지 못했다는 것을.<br />그것이 내가 나를 불행하게 만든 벌을 받게 했다는 것을.<br /><b>계기는 단순했지만 감정은 강렬했죠</b>.<br />그리고 저는 결계를 풀었어요.<br />무엇이 나를 속박하고 있는지를 알았고, 무엇이 내가 원하는 것인지를 알았으니까요.<br />&lt;가담항설 90화&gt;</p>\n</blockquote>\n<p data-ke-size=\"size16\">\"계기는 단순했지만 감정은 강렬했죠\" 대사를 참 좋아한다.<br />90화에 관한 이야기를 할때는 타인의 목적을 위해 살지 않고, 내가 원하는 삶을 살아야한다는 내용을 많이들 언급하지만, 유독 이 대사가 좋았다.</p>\n<p data-ke-size=\"size16\">마네킹에 걸린 옷이 너무 이뻐서 그 옷에 맞는 몸이 되려고 다이어트를 시작한다거나,<br />TV 속 러너의 모습이 멋져서 런닝을 시작하거나,<br />우연히 들은 노래 가사가 좋아서 보컬 트레이닝을 배우기 시작하는 등의 이야기를 나는 좋아한다.</p>\n<p data-ke-size=\"size16\">그런 사소한 계기로 시작한 것이 결국 3년 5년 동안 지속되어 자신을 지탱하는 취미가 된다거나 본인이 힘들때 큰 힘이 되어주는 위로가 된다거나, 아예 인생이 바뀌거나 하는 경우도 있다.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\"><a href=\"https://product.kyobobook.co.kr/detail/S000000887902\">하야마 아마리의 \"스물아홉 생일 1년 후 죽기로 결심했다\"</a> 에서도 이와 유사한 이야기가 나온다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">책 소개에서 언급하기로는 이 책은 저자의 실화를 기반으로 했다고 한다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">변변한 직장도 없고, 애인에게는 버림받았으며, 같이 이야기를 나눌 친구 조차 없던 외톨이였던 저자는 혼자만의 우울한 스물아홉 생일을 보내던 중 깜깜한 터널과도 같은 인생에 절망하며 자살을 결심한다.</p>\n<p data-ke-size=\"size16\">그러나 죽을 용기마저 내지 못하고, 그런 자신의 모습에 좌절하던 중 텔레비전 화면에 나온 너무도 아름다운 세계, 라스베이거스의 영상을 보게 된다.<br /><b>라스베이거스의 화려한 모습에 그녀는 '1년 후, 라스베이거스에서 최고의 순간을 맛본 후 서른이 되는 날 죽는다'</b> 를 결심한다.</p>\n<p data-ke-size=\"size16\">돈을 벌기 위해 파견사원, 호스티스, 누드모델을 병행하며 죽을힘을 다해 질주하고나서 라스베이거스에서 최고의 하루를 보낸 뒤 그녀는 다시 열심히 삶을 살아갈 힘을 얻는다.</p>\n<p data-ke-size=\"size16\">자살까지 결심한 그녀가 텔레비전 속 영상 하나로 인생이 바뀌게 된 것이다.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">어떤 일을 시작하는데 거창한 계기가 필요한 것은 아니다.</p>\n<p data-ke-size=\"size16\">좋아하던 이성과 같은 과목을 듣기 위해 신청했던 컴퓨터 공학 과목이 개발자의 길로 이끌기도 하고,<br />슬램덩크가 좋아 가입한 동호회에서 20년간 가깝게 지내는 동기들을 만나게 되기도 하고,<br />다른 사람의 블로그 글을 보고 시작한 블로그를 10년째 이어져 커리어 내내 도움을 받게 되기도 한다.</p>\n<p data-ke-size=\"size16\">어떤 사소한 계기가 삶을 바꿀지 아무도 모르기 때문에 아주 작은 계기라도 있다면 시작해보고 있다.</p>\n<p data-ke-size=\"size16\">딱 한 걸음만 내딛은 것만으로도 많은 것이 바뀌니 말이다.</p>",
        "contentSnippet": "가담항설 웹툰을 보면 참 멋진 대사들이 많다.\n저는 사당패 시절, 매일 결계에 갇혀 지냈는데, 저는 그곳을 영원히 나갈 수 없을 거라 믿었어요.\n항상 그런 말을 들었거든요.\n\"여기서 절대 도망칠 수 없어\"\n\"도망쳐도 반드시 붙잡힐 거야\"\n\"어디에서도 널 필요로 하지 않아\"\n\"이곳을 떠나면 넌 불행해질 거야\"\n어릴 때는 말을 잘 듣는게 착한 거라고 생각하잖아요.\n말을 듣지 않고 남에게 피해를 입히거나 불행하게 만들면 벌을 받는다고.\n그런데 말도 잘 듣고 남을 불행하게 만들지 않아도 저는 왜 매일이 불행하고 괴로운 건지 너무 궁금한 거에요.\n그런데 어느 날, 전국을 떠돌다 우연히 두류산 고개를 지나는데, 그 자리에서 발을 뗄 수가 없었어요.\n말로만 듣던 것과는 비교도 안되게 아름다워서.\n찰나가 아닌 이곳의 사계절을 다 보고 싶어서.\n그리고 깨달았죠.\n그동안 나는 타인의 마음에 맞는, 타인의 목적을 위한 삶을 살면서 한 번도 스스로의 마음을 들여다보지 못했다는 것을.\n그것이 내가 나를 불행하게 만든 벌을 받게 했다는 것을.\n계기는 단순했지만 감정은 강렬했죠.\n그리고 저는 결계를 풀었어요.\n무엇이 나를 속박하고 있는지를 알았고, 무엇이 내가 원하는 것인지를 알았으니까요.\n<가담항설 90화>\n\"계기는 단순했지만 감정은 강렬했죠\" 대사를 참 좋아한다.\n90화에 관한 이야기를 할때는 타인의 목적을 위해 살지 않고, 내가 원하는 삶을 살아야한다는 내용을 많이들 언급하지만, 유독 이 대사가 좋았다.\n마네킹에 걸린 옷이 너무 이뻐서 그 옷에 맞는 몸이 되려고 다이어트를 시작한다거나,\nTV 속 러너의 모습이 멋져서 런닝을 시작하거나,\n우연히 들은 노래 가사가 좋아서 보컬 트레이닝을 배우기 시작하는 등의 이야기를 나는 좋아한다.\n그런 사소한 계기로 시작한 것이 결국 3년 5년 동안 지속되어 자신을 지탱하는 취미가 된다거나 본인이 힘들때 큰 힘이 되어주는 위로가 된다거나, 아예 인생이 바뀌거나 하는 경우도 있다.\n하야마 아마리의 \"스물아홉 생일 1년 후 죽기로 결심했다\" 에서도 이와 유사한 이야기가 나온다.\n책 소개에서 언급하기로는 이 책은 저자의 실화를 기반으로 했다고 한다.\n변변한 직장도 없고, 애인에게는 버림받았으며, 같이 이야기를 나눌 친구 조차 없던 외톨이였던 저자는 혼자만의 우울한 스물아홉 생일을 보내던 중 깜깜한 터널과도 같은 인생에 절망하며 자살을 결심한다.\n그러나 죽을 용기마저 내지 못하고, 그런 자신의 모습에 좌절하던 중 텔레비전 화면에 나온 너무도 아름다운 세계, 라스베이거스의 영상을 보게 된다.\n라스베이거스의 화려한 모습에 그녀는 '1년 후, 라스베이거스에서 최고의 순간을 맛본 후 서른이 되는 날 죽는다' 를 결심한다.\n돈을 벌기 위해 파견사원, 호스티스, 누드모델을 병행하며 죽을힘을 다해 질주하고나서 라스베이거스에서 최고의 하루를 보낸 뒤 그녀는 다시 열심히 삶을 살아갈 힘을 얻는다.\n자살까지 결심한 그녀가 텔레비전 속 영상 하나로 인생이 바뀌게 된 것이다.\n어떤 일을 시작하는데 거창한 계기가 필요한 것은 아니다.\n좋아하던 이성과 같은 과목을 듣기 위해 신청했던 컴퓨터 공학 과목이 개발자의 길로 이끌기도 하고,\n슬램덩크가 좋아 가입한 동호회에서 20년간 가깝게 지내는 동기들을 만나게 되기도 하고,\n다른 사람의 블로그 글을 보고 시작한 블로그를 10년째 이어져 커리어 내내 도움을 받게 되기도 한다.\n어떤 사소한 계기가 삶을 바꿀지 아무도 모르기 때문에 아주 작은 계기라도 있다면 시작해보고 있다.\n딱 한 걸음만 내딛은 것만으로도 많은 것이 바뀌니 말이다.",
        "guid": "https://jojoldu.tistory.com/805",
        "categories": [
          "생각정리",
          "가담항설",
          "스물아홉 생일 1년 후 죽기로 결심했다",
          "하야마 아마리"
        ],
        "isoDate": "2024-09-14T08:03:12.000Z"
      },
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "스즈키 히로키 - 마키아벨리의 군주론을 읽다",
        "link": "https://jojoldu.tistory.com/804",
        "pubDate": "Sat, 14 Sep 2024 00:24:01 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/804#entry804comment",
        "content": "<p data-ke-size=\"size16\"><a href=\"https://m.yes24.com/Goods/Detail/41790780\">스즈키 히로키의 \"마키아벨리의 군주론을 읽다\"</a>를 읽고 생각나는 구절들을 정리했다.</p>\n<h2 data-ke-size=\"size26\">1장</h2>\n<h4 data-ke-size=\"size20\">구두쇠가 되어도 좋다</h4>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">\"군주는 인색하다는 평판에 개의치 않아도 된다.<br />백성을 지키기 위해서도, 자신을 지키기 위해서도 (중략) 그래야 한다.<br />구두쇠가 되는 것은 지배자가 자신의 자리를 보존하기 위한 하나의 악덕이다.\"<br />...<br />낭비하는 리더는 큰일을 치를 때마다 국민에게 피해를 주고 원망을 받는 반면에, 절약하는 리더는 국민의 지지를 받으면서 큰일을 해냅니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">유동성이 풍부한 스타트업 투자 호황기의 대표님들이 생각난다.<br />그 시절에 낭비를 했던 리더분들은 대단히 힘든 시기를 보내었고,<br />당시에 투자금을 필요한 곳에만 적절하게 사용하신 분들은 지금 혹한기 시절에 오히려 더 성과를 내고 있다.<br />인건비의 과도한 투자로 요즘의 시기가 어렵다는 뉴스가 많다.<br />실제로 그런 것인지 아닌지는 회사마다 다르다고 본다.</p>\n<p data-ke-size=\"size16\">다만, 소프트웨어 개발자에게 높은 연봉을 주면 그만큼의 성과가 나오는 것이냐에 대해서는 스타트업 전체적으로 평가중인 것 같다.<br />최근에 핫하게 공유된 박영록님의 트윗이 있다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://twitter.com/pakyoungrok/status/1829342829543674238\">거래액 100억 이하는 네이버 스마트 스토어가 최선의 선택이다</a></li>\n<li><a href=\"https://twitter.com/pakyoungrok/status/1829158146369290521\">우리나라 이커머스들이 적자가 많은 건 경쟁이 과도한 것도 있지만, 소프트웨어 생산성이 너무 낮은 것도 원인 중 하나가 아닐까 싶다</a></li>\n</ul>\n<p data-ke-size=\"size16\">그리고 작년엔 생활용품 커머스 <a href=\"https://cbiz.chosun.com/svc/bulletin/bulletin_art.html?contid=2023032600041\">와이즐리가 회사의 핵심 가치를 최저가 상품으로 보고 개발팀을 모두 없애고 Saas로 커머스를 대신했다</a>는 소식도 있다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"1426\" data-origin-height=\"874\"><span data-url=\"https://blog.kakaocdn.net/dn/bFETe7/btsJCC3fL95/IvAG16R49vUHZ0y8SLFJJk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bFETe7/btsJCC3fL95/IvAG16R49vUHZ0y8SLFJJk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bFETe7/btsJCC3fL95/IvAG16R49vUHZ0y8SLFJJk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbFETe7%2FbtsJCC3fL95%2FIvAG16R49vUHZ0y8SLFJJk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"743\" height=\"455\" data-filename=\"1.png\" data-origin-width=\"1426\" data-origin-height=\"874\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">에전에는 우리 회사의 본질이 무엇이건간에 소프트웨어 개발자에게 무조건적인 투자를 했다면, 현재는 소프트웨어 개발자가 이 서비스, 이 제품의 \"써야할 곳\" 인지 아닌지 우리 회사의 본질이 무엇이냐 판단하는 시기인것 같다.</p>\n<h2 data-ke-size=\"size26\">2장</h2>\n<h4 data-ke-size=\"size20\">운을 탓하지 마라</h4>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">\"오래도록 자리를 지킨 이탈리아의 제후가 마지막에 나라를 빼앗겼다고 운명을 탓하면 곤란하다.<br />그것은 운명이 아니라 태만 탓이다.\"<br />...<br />손에 넣은 것을 잃었다면 군주인 당신의 태만 탓입니다.<br />사랑하는 것을 잃는 것도, 부를 얻거나 소중한 사람과 나누는 행복을 놓치는 것도 군주인 당신의 태만이 문제가 된 것입니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">이 내용은 \"<a href=\"https://www.linkedin.com/posts/douglasguen_qwurbaqya-swmtnktxuslhqsvsmp-qsvsmpstcslh-activity-7229268927057383424-M1rn?utm_source=share&amp;utm_medium=member_desktop\">스타트업이 망한 것은 모두 스타트업 대표님의 잘못이다</a>\" 와 일맥상통한다고 생각했다.</p>\n<p data-ke-size=\"size16\">다만, 원론적으로 그렇게 생각할 수는 있다고 보지만, 개인적으로는 마음에 들진 않는다.<br />군주론은 전체적으로 \"현실의 불확실성\" 을 너무나 배제하고 이야기한다.<br />이게 시대 배경에 따른 차이인가 싶었지만, 현재 발생하는 모든 불행한 일이 일이 정말 그 사람의 노력 부족 때문인가? 싶다.</p>\n<p data-ke-size=\"size16\">나는 '운'의 요소를 대단히 믿는 편이다.<br />다만, 그래서 모든 것에 대해 운 탓을 한다기 보다는, \"운을 모을 수 있다\" 고 보는 편이다.</p>\n<p data-ke-size=\"size16\">세상에는 많은 운이 적용되고 있고, 이 운은 모을 수 있기 때문에 매일 매일 운을 모으는 행위를 하는 것이 필요하다.</p>\n<p data-ke-size=\"size16\">지나가는 쓰레기를 줍는다거나,<br />작은 일에 감사함을 표한다거나,<br />주변 동료들에게 친절함을 베푸는 등<br />그런 행위가 운을 모으는 것이라고 믿고 그렇게 운을 모아 내가 목표로 하는 곳에 다 쏟아지길 바랄뿐이다.</p>\n<h4 data-ke-size=\"size20\">대담하게 오르고 성실하게 지켜라</h4>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">\"겁에 질리거나 잘못된 조언에 따르거나 해서 결단을 미루면 자신을 지키는 단검을 손에서 놓지 못하게 된다.\"<br />...<br />처음에 잔혹함을 발휘하지 못하고 망설이다가 필요할 때마다 조금씩 발휘한다면, 원한을 품는 사람이 점점 늘어나 군주는 자신을 지키는 일에 급급해질 수 밖에 없습니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">Runway 가 1년 밖에 남지 않은 상황에서 희망퇴직, 구조조정을 한다면 어떤 방식이 가장 효과적일까?<br />이 문장은 위 질문에 대한 답변을 한 것 같았다.</p>\n<p data-ke-size=\"size16\">100명의 인원을 30명으로 줄여야만 Runway 가 1년에서 2년으로 늘어날 수 있는 상황에서 1) 한번에 70명과 헤어지는 것이 좋을까, 2) 20~30명씩 천천히 나눠서 헤어지면서 총 70명과 헤어지는 것이 좋을까</p>\n<p data-ke-size=\"size16\">이 책에서는 1) \"한번에 70명과 헤어지는 것\" 을 선택하라고 한다.<br />그리고 실제로 그렇게 선택한 실제 사례가 최근에 있었다.</p>\n<p data-ke-size=\"size16\">머스크가 트위터를 인수하고 하루에 전 직원의 50%를 해고한 이야기가 한참 화제였다.<br />당시에 트위터에 있던 분의 구조조정 과정을 만화가 공유되기도 했다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://tobe.aladin.co.kr/s/9193\">무모한 안식년</a></li>\n</ul>\n<p data-ke-size=\"size16\">남은 사람들을 위해, 앞으로를 위해 한번에 잔혹함을 발휘하는게 낫다고 하지만, 실제로 그런 상황이 발생할때 그럴 수 있을까?<br />그런 상황이 생기는 것이 가장 두렵다.</p>\n<h2 data-ke-size=\"size26\">3장</h2>\n<h4 data-ke-size=\"size20\">해결사가 되라</h4>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">사장은 직원이 해결할 수 없는 문제를 해결하고, 상사는 부하가 해결할 수 없는 문제를 해결할 수 있어야 합니다.<br />...<br />다른 사람도 할 수 있는 일을 돕는 것이 아닙니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">팀원간의 갈등이나 조직간의 갈등 등 실무자가 해결할 수 없는 문제를 해결하는데 집중해야한다는 내용이라 공감되었다.<br />다만, 이건 조직의 현재 상황에 따라 달라질 수 있을 것 같다.</p>\n<p data-ke-size=\"size16\">조직의 실무 역량이 낮을 때는 팀원들이 해결할 수 없는 전문성에 관련된 문제를 풀어야하고,<br />조직의 실무 역량이 높을 때는 전문성에 관련된 문제가 아닌 조직대 조직, 사람대 사람의 문제를 풀어야하는 것 같다.</p>\n<h2 data-ke-size=\"size26\">4장</h2>\n<h4 data-ke-size=\"size20\">불만에 의해 움직이는 것은 다른 불만을 끌어당길 뿐이다</h4>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">\"구정권에 대한 불만으로 신군주를 옹립하고 지지한 사람들을 아군으로 삼기보다는 구정권에 만족하고 신군주를 적대한 사람들을 아군으로 삼는 편이 훨씬 편하다.\"<br />...<br />구정권에 만족하고 소임을 다하고 있던 사람은 결국 신정권에도 적응하게 됩니다.<br />그들이 움직이는 동기는 조직을 적절히 운영하는 일에 있기 때문입니다.<br />구정권의 장점에 주목해서 생활하고 있던 그들의 '장점을 보는 경향' 이 당신의 신정권에도 적용되는 것입니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">경력직을 채용할때 전 회사의 퇴사 사유를 물어보는 것과 동일한 것 같다.<br />전 직장에서 불만을 갖고 퇴사한 사람을 데려와서 우리 팀을 만족시키게 하는 것보다는 전 직장에서 불만 없이 만족하면서 다니는 사람을 우리팀으로 데려오는 것이 훨씬 더 성공적인 경력직 채용임을 몇번 경험했다.</p>\n<p data-ke-size=\"size16\">그래서 면접에서도 전 회사의 단점 보다는 장점을 이야기하는 사람이 좋다.<br />하지만 대부분은 전 회사의 어떠한 점이 불편했기 때문에 이직하는 것이라서 그러기는 쉽지 않을것 같다.</p>\n<h2 data-ke-size=\"size26\">5장</h2>\n<h4 data-ke-size=\"size20\">자신답게 패자가 되기보다 자신답지 않게 승자가 되라</h4>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">\"인간은 천성에서 좀처럼 벗어나지 못한다.<br />또한 한번 성공을 맛본 방식이 있다면 쉽게 버리지 못한다.<br />용의주도한 사람이 과감하게 행동해야할 시기가 왔을 때 지켜보기만 하다가 끝내 파멸하는 경우가 있다.<br />이 사람이 시대와 상황에 따라 자신의 기질을 바꾸었다면 틀림없이 파멸을 면할 수 있었을 것이다.\"</p>\n<p data-ke-size=\"size16\">자신답게 산다거나 있는 그대로의 모습으로 산다는 것은 매력적인 일입니다.<br />...<br />시대가 변하면 가치도 변합니다.<br />군주는 야망을 이루기 위해 때로는 천성을 버려야 합니다.<br /><b>자신다움에 집착하지 않는 것</b>, 이것이 군주가 승리를 쟁취하기 위한 기본 자세입니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">변화에 적극 대응하라는 말을 표현하는 여러가지 문장이 있겠지만, 이 문장이 가장 강렬하게 다가오는 것 같다.<br />\"후회 없는 경기\", \"나다운 시합\" 등의 이야기가 많지만,<br />그건 본인의 고유한 경기 스타일을 버리지 못해 생긴 이야기라고 생각한다.<br />위대한 선수가 되려면 \"나다운 시합 보다는 \"이기는 시합\"을 해야한다.<br />이 지점을 명확히 지적해준 것 같다.</p>\n<h4 data-ke-size=\"size20\">사람들은 꿈을 성취할 수 있다는 희망으로 따라온다</h4>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">군주가 부여하는 혹독한 임무를 부하가 거부하지 않는 이유는 군주가 말하는 정의가 곧 그들의 꿈이기 때문입니다.<br />그렇기에 시련을 견디고 함께 위업을 성취하고자 노력하는 것입니다.<br />진실한 권력은 민중이 당신을 꼭 필요한 존재라고 여길 때 나옵니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">스타트업이 가지고 있어야할 가장 핵심은 결국 \"회사가 가고자하는 목표가 결국 본인에게도 도달하고 싶은 목표\" 이기 때문인 것 같다.</p>\n<p data-ke-size=\"size16\">끝까지 가는 것이 중요하다.<br />그래야 구성원들도 이 리더가 우리의 꿈을 포기하지 않았다는 믿음을 가질 수 있다.<br />리더의 자리를 오래 하다보면 결국 지쳐서 중도 하차하는 경우를 자주 본다.<br />위대한 제국을 만든 리더들은 대부분 원대한 목표를 달성할때까지 끝까지 본인이 주도한다.<br />중도하차하지 않는다.</p>\n<p data-ke-size=\"size16\">하지만, 얼마나 심적으로 힘들었을까를 생각해보면 그 분들을 지지하고 싶다.<br />보통 10년이상은 다들 밤낮없이, 외롭게 어려운 결정들을 해왔을텐데, 그걸 더 하라고 강요할 수 있을까?<br />그래서 정말 본인이 끝까지 계속해서 끌고가는 리더분들은 반쯤 미쳐있어야만 가능한 것 같다.</p>\n<p data-ke-size=\"size16\">그리고 그런 리더들은 구성원들의 꿈을 이뤄줄 수 있지 않았을까 싶다.</p>",
        "contentSnippet": "스즈키 히로키의 \"마키아벨리의 군주론을 읽다\"를 읽고 생각나는 구절들을 정리했다.\n1장\n구두쇠가 되어도 좋다\n\"군주는 인색하다는 평판에 개의치 않아도 된다.\n백성을 지키기 위해서도, 자신을 지키기 위해서도 (중략) 그래야 한다.\n구두쇠가 되는 것은 지배자가 자신의 자리를 보존하기 위한 하나의 악덕이다.\"\n...\n낭비하는 리더는 큰일을 치를 때마다 국민에게 피해를 주고 원망을 받는 반면에, 절약하는 리더는 국민의 지지를 받으면서 큰일을 해냅니다.\n유동성이 풍부한 스타트업 투자 호황기의 대표님들이 생각난다.\n그 시절에 낭비를 했던 리더분들은 대단히 힘든 시기를 보내었고,\n당시에 투자금을 필요한 곳에만 적절하게 사용하신 분들은 지금 혹한기 시절에 오히려 더 성과를 내고 있다.\n인건비의 과도한 투자로 요즘의 시기가 어렵다는 뉴스가 많다.\n실제로 그런 것인지 아닌지는 회사마다 다르다고 본다.\n다만, 소프트웨어 개발자에게 높은 연봉을 주면 그만큼의 성과가 나오는 것이냐에 대해서는 스타트업 전체적으로 평가중인 것 같다.\n최근에 핫하게 공유된 박영록님의 트윗이 있다.\n거래액 100억 이하는 네이버 스마트 스토어가 최선의 선택이다\n우리나라 이커머스들이 적자가 많은 건 경쟁이 과도한 것도 있지만, 소프트웨어 생산성이 너무 낮은 것도 원인 중 하나가 아닐까 싶다\n그리고 작년엔 생활용품 커머스 와이즐리가 회사의 핵심 가치를 최저가 상품으로 보고 개발팀을 모두 없애고 Saas로 커머스를 대신했다는 소식도 있다.\n\n\n에전에는 우리 회사의 본질이 무엇이건간에 소프트웨어 개발자에게 무조건적인 투자를 했다면, 현재는 소프트웨어 개발자가 이 서비스, 이 제품의 \"써야할 곳\" 인지 아닌지 우리 회사의 본질이 무엇이냐 판단하는 시기인것 같다.\n2장\n운을 탓하지 마라\n\"오래도록 자리를 지킨 이탈리아의 제후가 마지막에 나라를 빼앗겼다고 운명을 탓하면 곤란하다.\n그것은 운명이 아니라 태만 탓이다.\"\n...\n손에 넣은 것을 잃었다면 군주인 당신의 태만 탓입니다.\n사랑하는 것을 잃는 것도, 부를 얻거나 소중한 사람과 나누는 행복을 놓치는 것도 군주인 당신의 태만이 문제가 된 것입니다.\n이 내용은 \"스타트업이 망한 것은 모두 스타트업 대표님의 잘못이다\" 와 일맥상통한다고 생각했다.\n다만, 원론적으로 그렇게 생각할 수는 있다고 보지만, 개인적으로는 마음에 들진 않는다.\n군주론은 전체적으로 \"현실의 불확실성\" 을 너무나 배제하고 이야기한다.\n이게 시대 배경에 따른 차이인가 싶었지만, 현재 발생하는 모든 불행한 일이 일이 정말 그 사람의 노력 부족 때문인가? 싶다.\n나는 '운'의 요소를 대단히 믿는 편이다.\n다만, 그래서 모든 것에 대해 운 탓을 한다기 보다는, \"운을 모을 수 있다\" 고 보는 편이다.\n세상에는 많은 운이 적용되고 있고, 이 운은 모을 수 있기 때문에 매일 매일 운을 모으는 행위를 하는 것이 필요하다.\n지나가는 쓰레기를 줍는다거나,\n작은 일에 감사함을 표한다거나,\n주변 동료들에게 친절함을 베푸는 등\n그런 행위가 운을 모으는 것이라고 믿고 그렇게 운을 모아 내가 목표로 하는 곳에 다 쏟아지길 바랄뿐이다.\n대담하게 오르고 성실하게 지켜라\n\"겁에 질리거나 잘못된 조언에 따르거나 해서 결단을 미루면 자신을 지키는 단검을 손에서 놓지 못하게 된다.\"\n...\n처음에 잔혹함을 발휘하지 못하고 망설이다가 필요할 때마다 조금씩 발휘한다면, 원한을 품는 사람이 점점 늘어나 군주는 자신을 지키는 일에 급급해질 수 밖에 없습니다.\nRunway 가 1년 밖에 남지 않은 상황에서 희망퇴직, 구조조정을 한다면 어떤 방식이 가장 효과적일까?\n이 문장은 위 질문에 대한 답변을 한 것 같았다.\n100명의 인원을 30명으로 줄여야만 Runway 가 1년에서 2년으로 늘어날 수 있는 상황에서 1) 한번에 70명과 헤어지는 것이 좋을까, 2) 20~30명씩 천천히 나눠서 헤어지면서 총 70명과 헤어지는 것이 좋을까\n이 책에서는 1) \"한번에 70명과 헤어지는 것\" 을 선택하라고 한다.\n그리고 실제로 그렇게 선택한 실제 사례가 최근에 있었다.\n머스크가 트위터를 인수하고 하루에 전 직원의 50%를 해고한 이야기가 한참 화제였다.\n당시에 트위터에 있던 분의 구조조정 과정을 만화가 공유되기도 했다.\n무모한 안식년\n남은 사람들을 위해, 앞으로를 위해 한번에 잔혹함을 발휘하는게 낫다고 하지만, 실제로 그런 상황이 발생할때 그럴 수 있을까?\n그런 상황이 생기는 것이 가장 두렵다.\n3장\n해결사가 되라\n사장은 직원이 해결할 수 없는 문제를 해결하고, 상사는 부하가 해결할 수 없는 문제를 해결할 수 있어야 합니다.\n...\n다른 사람도 할 수 있는 일을 돕는 것이 아닙니다.\n팀원간의 갈등이나 조직간의 갈등 등 실무자가 해결할 수 없는 문제를 해결하는데 집중해야한다는 내용이라 공감되었다.\n다만, 이건 조직의 현재 상황에 따라 달라질 수 있을 것 같다.\n조직의 실무 역량이 낮을 때는 팀원들이 해결할 수 없는 전문성에 관련된 문제를 풀어야하고,\n조직의 실무 역량이 높을 때는 전문성에 관련된 문제가 아닌 조직대 조직, 사람대 사람의 문제를 풀어야하는 것 같다.\n4장\n불만에 의해 움직이는 것은 다른 불만을 끌어당길 뿐이다\n\"구정권에 대한 불만으로 신군주를 옹립하고 지지한 사람들을 아군으로 삼기보다는 구정권에 만족하고 신군주를 적대한 사람들을 아군으로 삼는 편이 훨씬 편하다.\"\n...\n구정권에 만족하고 소임을 다하고 있던 사람은 결국 신정권에도 적응하게 됩니다.\n그들이 움직이는 동기는 조직을 적절히 운영하는 일에 있기 때문입니다.\n구정권의 장점에 주목해서 생활하고 있던 그들의 '장점을 보는 경향' 이 당신의 신정권에도 적용되는 것입니다.\n경력직을 채용할때 전 회사의 퇴사 사유를 물어보는 것과 동일한 것 같다.\n전 직장에서 불만을 갖고 퇴사한 사람을 데려와서 우리 팀을 만족시키게 하는 것보다는 전 직장에서 불만 없이 만족하면서 다니는 사람을 우리팀으로 데려오는 것이 훨씬 더 성공적인 경력직 채용임을 몇번 경험했다.\n그래서 면접에서도 전 회사의 단점 보다는 장점을 이야기하는 사람이 좋다.\n하지만 대부분은 전 회사의 어떠한 점이 불편했기 때문에 이직하는 것이라서 그러기는 쉽지 않을것 같다.\n5장\n자신답게 패자가 되기보다 자신답지 않게 승자가 되라\n\"인간은 천성에서 좀처럼 벗어나지 못한다.\n또한 한번 성공을 맛본 방식이 있다면 쉽게 버리지 못한다.\n용의주도한 사람이 과감하게 행동해야할 시기가 왔을 때 지켜보기만 하다가 끝내 파멸하는 경우가 있다.\n이 사람이 시대와 상황에 따라 자신의 기질을 바꾸었다면 틀림없이 파멸을 면할 수 있었을 것이다.\"\n자신답게 산다거나 있는 그대로의 모습으로 산다는 것은 매력적인 일입니다.\n...\n시대가 변하면 가치도 변합니다.\n군주는 야망을 이루기 위해 때로는 천성을 버려야 합니다.\n자신다움에 집착하지 않는 것, 이것이 군주가 승리를 쟁취하기 위한 기본 자세입니다.\n변화에 적극 대응하라는 말을 표현하는 여러가지 문장이 있겠지만, 이 문장이 가장 강렬하게 다가오는 것 같다.\n\"후회 없는 경기\", \"나다운 시합\" 등의 이야기가 많지만,\n그건 본인의 고유한 경기 스타일을 버리지 못해 생긴 이야기라고 생각한다.\n위대한 선수가 되려면 \"나다운 시합 보다는 \"이기는 시합\"을 해야한다.\n이 지점을 명확히 지적해준 것 같다.\n사람들은 꿈을 성취할 수 있다는 희망으로 따라온다\n군주가 부여하는 혹독한 임무를 부하가 거부하지 않는 이유는 군주가 말하는 정의가 곧 그들의 꿈이기 때문입니다.\n그렇기에 시련을 견디고 함께 위업을 성취하고자 노력하는 것입니다.\n진실한 권력은 민중이 당신을 꼭 필요한 존재라고 여길 때 나옵니다.\n스타트업이 가지고 있어야할 가장 핵심은 결국 \"회사가 가고자하는 목표가 결국 본인에게도 도달하고 싶은 목표\" 이기 때문인 것 같다.\n끝까지 가는 것이 중요하다.\n그래야 구성원들도 이 리더가 우리의 꿈을 포기하지 않았다는 믿음을 가질 수 있다.\n리더의 자리를 오래 하다보면 결국 지쳐서 중도 하차하는 경우를 자주 본다.\n위대한 제국을 만든 리더들은 대부분 원대한 목표를 달성할때까지 끝까지 본인이 주도한다.\n중도하차하지 않는다.\n하지만, 얼마나 심적으로 힘들었을까를 생각해보면 그 분들을 지지하고 싶다.\n보통 10년이상은 다들 밤낮없이, 외롭게 어려운 결정들을 해왔을텐데, 그걸 더 하라고 강요할 수 있을까?\n그래서 정말 본인이 끝까지 계속해서 끌고가는 리더분들은 반쯤 미쳐있어야만 가능한 것 같다.\n그리고 그런 리더들은 구성원들의 꿈을 이뤄줄 수 있지 않았을까 싶다.",
        "guid": "https://jojoldu.tistory.com/804",
        "categories": [
          "도서",
          "군주론",
          "마키아벨리",
          "스즈키 히로키",
          "스타트업"
        ],
        "isoDate": "2024-09-13T15:24:01.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "천재의 식단",
        "link": "https://hyeonseok.com/blog/919",
        "pubDate": "Sat, 14 Sep 2024 19:46:32 GMT",
        "content": "<p><a href=\"https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=269341416\"><img src=\"/static/blog/genius-food.png?1\" class=\"major\" alt=\"천재의 식단 표지\" /></a> 객관적인 사실과 작가의 주장이 섞여 있어서 어디까지가 증명된 과학인지 애매한 부분들이 있다. 저자의 주장을 함축하자면 인간이 산업화되면서 바뀐 식습관에 비해 아직 충분히 진화하지 않았기 때문에 이전 생활의 식습관이 건강에 좋다는 것이다. 이런 이해를 바탕으로 본인이 연구하고 조합한 사실과 주장을 아주 설득력 있게 설명해 주고 있고 이를 바탕으로 한 좋은 식습관과 음식을 권유하고 있다.</p>\r\n\r\n<p>이 책을 읽고 아주 비슷한 내용을 주장하는 EBS 다큐 프라임의 <a href=\"https://www.youtube.com/watch?v=2bi4kru8nGc\">현대식단과 구석기 식단의 영양학적 비교</a> 영상을 접했다. 현대 사회의 문제인 여러 성인병을 앓고 있는 사람들에게 고대 시대의 식단을 적용했더니 좋아졌다는 여러 사례들을 보여준다.</p>\r\n\r\n<p>결국 정제된 가공물보다 자연 상태의 음식물을 섭취하는 것이 건강에 좋다는 예로부터 많이 들어왔던 참 지키기 힘든 내용을 여러 사실과 설득력있는 주장으로 다룬 책이라고 하겠다. 빵이나 주스, 치킨이 먹고 싶을때 떠올리면 좋은 책이다.</p>",
        "contentSnippet": "객관적인 사실과 작가의 주장이 섞여 있어서 어디까지가 증명된 과학인지 애매한 부분들이 있다. 저자의 주장을 함축하자면 인간이 산업화되면서 바뀐 식습관에 비해 아직 충분히 진화하지 않았기 때문에 이전 생활의 식습관이 건강에 좋다는 것이다. 이런 이해를 바탕으로 본인이 연구하고 조합한 사실과 주장을 아주 설득력 있게 설명해 주고 있고 이를 바탕으로 한 좋은 식습관과 음식을 권유하고 있다.\n\r\n\r\n이 책을 읽고 아주 비슷한 내용을 주장하는 EBS 다큐 프라임의 현대식단과 구석기 식단의 영양학적 비교 영상을 접했다. 현대 사회의 문제인 여러 성인병을 앓고 있는 사람들에게 고대 시대의 식단을 적용했더니 좋아졌다는 여러 사례들을 보여준다.\n\r\n\r\n결국 정제된 가공물보다 자연 상태의 음식물을 섭취하는 것이 건강에 좋다는 예로부터 많이 들어왔던 참 지키기 힘든 내용을 여러 사실과 설득력있는 주장으로 다룬 책이라고 하겠다. 빵이나 주스, 치킨이 먹고 싶을때 떠올리면 좋은 책이다.",
        "guid": "https://hyeonseok.com/blog/919",
        "isoDate": "2024-09-14T19:46:32.000Z"
      }
    ]
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "FIDO2 클라이언트 SDK 오픈소스 소개",
        "link": "https://techblog.lycorp.co.jp/ko/introducing-fido2-client-sdk-open-source",
        "pubDate": "Fri, 13 Sep 2024 03:00:00 GMT",
        "content": "들어가며\n안녕하세요. Security R&D 팀에서 FIDO2 클라이언트 개발을 담당하고 있는 김도연, 김영현입니다.\n공개 키 암호화를 기반으로 한 FIDO는 패스워드나 SMS O...",
        "contentSnippet": "들어가며\n안녕하세요. Security R&D 팀에서 FIDO2 클라이언트 개발을 담당하고 있는 김도연, 김영현입니다.\n공개 키 암호화를 기반으로 한 FIDO는 패스워드나 SMS O...",
        "guid": "https://techblog.lycorp.co.jp/ko/introducing-fido2-client-sdk-open-source",
        "isoDate": "2024-09-13T03:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "이한",
    "category": "개인",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "배고픔의 축복",
        "link": "https://www.thestartupbible.com/2024/09/the-blessings-of-a-lack-of-capital.html",
        "pubDate": "Wed, 18 Sep 2024 21:34:00 +0000",
        "content:encodedSnippet": "최근 2년 동안 워낙 경기도 안 좋았고, 앞으로도 그렇게 좋아질 것 같진 않아서, 대부분의 VC들은 활발하게 투자하기보단, 계속 보수적으로 시장을 관망하고 있다. 상황이 이렇다 보니, 사업을 시작하는 날부터 마이너스가 발생하고, 앞으로도 수년 동안 마이너스가 예상되는 대부분의 스타트업은 필요한 투자를 못 받고, 이로 인한 손실을 감당하지 못해서 하나씩 문을 닫고 있다. 아무리 좋은 창업가와 좋은 사업에 투자했더라도, 어느 순간까진 투자금으로 버텨야 하는 스타트업들이 적시에 필요한 투자를 지속적으로 못 받으면 폐업 말곤 별다른 선택이 없다.\n우리 투자사들도 마찬가지다. 아무리 좋은 회사에 투자했더라도, 매크로 시장을 이길 수 있는 초기 스타트업은 거의 없다. 대부분의 우리 투자사들도 하루가 멀다고 시장에 나와서 펀딩을 하고 있는데, 대부분 투자를 못 받거나, 받더라도 본인들이 원하는 조건이 아닌, 투자자들의 조건으로 투자를 받고 있다.\n돈이 꼭 필요한데 투자유치에 실패한 회사의 미래는 암울하다. 펀딩을 포기한 순간부턴 이젠 생존이 이들의 유일한 목표이자 옵션이 되는데, 생존을 위한 가이드라인 같은 건 없다. 그냥 무조건 버티면서 비용을 절감하는 게 유일한 가이드라인이다. 대부분 스타트업 비용의 절반 이상이 직원들 월급이라서 일단 무조건 사람을 내보내야 한다. 전에 내가 위기에 대처하는 방법이라는 글을 쓴 적이 있는데, 실은 구체적인 방법이 있다기보단, 그냥 무조건 허리띠 졸라매고 돈을 아껴야 한다는 내용이다.\n지난 2년 동안 매일매일 이런 위기 상황을 견디고 있는 우리 투자사들이 꽤 많다. 이 중 많은 회사들이 중간에 버티지 못하고 문을 닫았는데, 또 놀라운 건 이 비용절감 모드로 나름 잘 버티고 있는 회사들이 꽤 있다는 사실이다. 버티면서 아직도 생존하고 있는 회사들은 이제 더 이상 대규모의 마이너스가 발생하지 않고, 어떤 회사들은 흑자까지 경험하고 있다. 아직도 하루하루가 지옥 같지만, 이 회사 대표들과 이야기를 해보면 다들 한결같이 하는 말이 있다. 바로 2년 전에 투자를 받지 못했을 때, 그땐 너무 속상하고 세상이 끝날 것 같은 절망감에 휩싸였지만, 지금 생각해보면 회사에겐 축복이었다고 한다.\n그때 투자를 못 받았기 때문에, 그동안 한 번도 진지하게 고민해 보지 않았던, 제대로 된 비즈니스 모델에 대해서 아주 깊게 고민했고, 더 적은 자원으로 더 많은 결과를 만들기 위해서 진짜 창업가의 마인드로 사업을 바라볼 수 있게 됐다고 모두 말한다. 그 과정 자체는 너무 힘들었고, 다시 반복하라고 하면 싫겠지만, 지금 생각해 보면 투자를 받지 못해서 경험했던 배고픔이 회사에겐 오히려 더 단단하고 강하게 체질 개선을 할 수 있게 된 축복이라고 한다.\n이 회사 중 힘든 시기를 지나면서 엄청 뾰족한 비즈니스 모델을 찾은 곳도 있지만, 아직도 제대로 된 비즈니스 모델을 못 찾아서 헤매는 곳들도 많다. 이런 회사들이 유동성이 풍부할 때, 대규모의 투자를 받았다면 어떻게 됐을지 나는 요새 가끔 상상해 본다. 아마도 돈만 낭비하고, 사람만 쓸데없이 채용하고, 불필요하게 사업을 확장하면서 크게 망했을 것 같다.\n그래서 나는 요샌, 오히려 투자를 못 받아서 아주 배고프게 사업을 하는 건, 어쩌면 모두에게 축복이 될 수도 있다는 생각을 가끔 한다. 물론, 이 배고픔이 너무 오래 지속되진 않았으면 한다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/09/the-blessings-of-a-lack-of-capital.html#respond",
        "content": "최근 2년 동안 워낙 경기도 안 좋았고, 앞으로도 그렇게 좋아질 것 같진 않아서, 대부분의 VC들은 활발하게 투자하기보단, 계속 보수적으로 시장을 관망하고 있다. 상황이 이렇다 보니, 사업을 시작하는 날부터 마이너스가 발생하고, 앞으로도 수년 동안 마이너스가 예상되는 대부분의 스타트업은 필요한 투자를 못 받고, 이로 인한 손실을 감당하지 못해서 하나씩 문을 닫고 있다. 아무리 좋은 창업가와 좋은 사업에(...)",
        "contentSnippet": "최근 2년 동안 워낙 경기도 안 좋았고, 앞으로도 그렇게 좋아질 것 같진 않아서, 대부분의 VC들은 활발하게 투자하기보단, 계속 보수적으로 시장을 관망하고 있다. 상황이 이렇다 보니, 사업을 시작하는 날부터 마이너스가 발생하고, 앞으로도 수년 동안 마이너스가 예상되는 대부분의 스타트업은 필요한 투자를 못 받고, 이로 인한 손실을 감당하지 못해서 하나씩 문을 닫고 있다. 아무리 좋은 창업가와 좋은 사업에(...)",
        "guid": "https://www.thestartupbible.com/?p=9218",
        "categories": [
          "Uncategorized",
          "failure",
          "FoundersAtWork",
          "fundraising",
          "hustle",
          "Strong"
        ],
        "isoDate": "2024-09-18T21:34:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "kimchihill",
        "title": "Tomasz Tunguz’s AI Sales Playbook: Insights from the Field",
        "link": "https://kimchihill.com/2024/09/13/scaling-gen-ai-sales-insights-from-the-field/?utm_source=rss&utm_medium=rss&utm_campaign=scaling-gen-ai-sales-insights-from-the-field",
        "pubDate": "Fri, 13 Sep 2024 11:37:42 +0000",
        "content:encodedSnippet": "Tomasz Tunguz’s recent article on selling AI and software struck a chord with me. As AI adoption grows, both buyers and sellers are facing new challenges—especially around scaling and discovery. Below are my thoughts on his key points, based on my live experiences selling the AI chatbot at Sendbird, and how they relate to what we’re seeing in the market. Check out the full article here: https://tomtunguz.com/software-playbook \nSelling AI is being discovered because the technology is new. Buyers don’t know how to use it or how to buy it.\nI fully agree with this and would emphasize it from two perspectives: selling to both enterprises and SMBs comes with discovery challenges. For enterprises, based on various studies and papers I’ve read, many buyers struggle with scaling their generative AI projects after initial adoption. They face issues expanding AI usage beyond a single application and unlocking its full potential while managing risks. For SMBs, there is still a significant technology and discovery gap. Similar to blockchain, the jargon and user interfaces of most generative AI applications remain too technical, and the product—as well as the introduction of the service—needs to be more user-friendly.\nBecause the sales motions are new, we can’t apply the previous playbook to the new sales process. The CEO/founder should hire a sales leader that they fully trust who focuses on ultimate success. The sales process is a part of the product.\nI strongly agree that the sales process is integral to the product experience. Beyond self-serve onboarding, we must also offer an easy pathway for mid-market and enterprise users to engage with our sales or technical teams when needed. Even during the sales demo, we can start by showcasing a prototype chatbot tailored to the prospect’s website. This not only accelerates technical due diligence but also delivers a faster ‘wow’ moment. The sales and product experience should be tightly integrated.\nBetween PLG vs. sales-led, more companies were sales-led. If starting with PLG, the template sells the product. Fight the empty box problem with great concrete templates that demonstrate how to use AI. If selling top-down, most of the conversations today are at the C-suite rather than the mid-market predominantly because the buying process is new.\nI firmly believe in this. Our platform, paired with strong templates, can effectively sell our AI chatbot product. For example, offering a user-friendly graphical interface for prompt templates instead of relying on text-based ones allows prospects to grasp the product’s potential without much technical effort. However, I remain cautious about top-down selling. If our SaaS product or PMF isn’t fully ready, customization efforts could disrupt our PLG motion. I’m not against taking on SI roles, but we must ensure we want to scale with our platform as a center of our growth\nFiguring out how to consistently produce wow moments with non-deterministic software is essential.\nAbsolutely. This is a key focus for our product and marketing teams, and one of our OKRs this quarter is to improve conversion rates by driving consistent wow moments for our users.\nThe room was split on the pricing model: seats, usage, or some hybrid. Ultimately, pricing captures 15-30% of the value the software/AI creates. Developing a strong case for this with buyers will be key because the ROI question from buyers is real, especially as the broader software market feels pressure.\nValue-based pricing is an excellent approach, but we also face perception challenges. Many customers still view AI products through the lens of past investments, like seat-based pricing models and ROI measured by traditional KPIs, such as cost per inbound/outbound call. We need to pioneer new value-based pricing anchors for AI, and while the challenges are significant, I’m ready to face them head-on.\nOnly VCs care about the word agents/agentic: for most enterprises, agents mean a customer support agent. Many teams don’t care about the underlying technology; they seek a solution to their problem.\nAgreed. We’re still refining our ICP. We’re seeing enterprise leads from Heads of Data Science who have developed their own LLMs but now seek alternatives like Sendbird, where they can achieve faster value. At the same time, Heads of CS/CX are looking to solve business challenges but are frustrated by stalled internal projects.\nThe post Tomasz Tunguz’s AI Sales Playbook: Insights from the Field appeared first on Kimchi hill.",
        "dc:creator": "kimchihill",
        "comments": "https://kimchihill.com/2024/09/13/scaling-gen-ai-sales-insights-from-the-field/#respond",
        "content": "<p>Tomasz Tunguz&#8217;s recent article on selling AI and software struck a chord with me. As AI adoption grows, both buyers and sellers are facing new challenges—especially around scaling and discovery. Below are my thoughts on his key points, based on my live experiences selling the AI chatbot at Sendbird, and how they relate to what<a class=\"more-link\" href=\"https://kimchihill.com/2024/09/13/scaling-gen-ai-sales-insights-from-the-field/\">Continue reading <span class=\"screen-reader-text\">\"Tomasz Tunguz&#8217;s AI Sales Playbook: Insights from the Field\"</span></a></p>\nThe post <a href=\"https://kimchihill.com/2024/09/13/scaling-gen-ai-sales-insights-from-the-field/\">Tomasz Tunguz’s AI Sales Playbook: Insights from the Field</a> appeared first on <a href=\"https://kimchihill.com\">Kimchi hill</a>.",
        "contentSnippet": "Tomasz Tunguz’s recent article on selling AI and software struck a chord with me. As AI adoption grows, both buyers and sellers are facing new challenges—especially around scaling and discovery. Below are my thoughts on his key points, based on my live experiences selling the AI chatbot at Sendbird, and how they relate to whatContinue reading \"Tomasz Tunguz’s AI Sales Playbook: Insights from the Field\"\nTomasz Tunguz’s AI Sales Playbook: Insights from the Field appeared first on Kimchi hill.",
        "guid": "https://kimchihill.com/?p=2773",
        "categories": [
          "English essay"
        ],
        "isoDate": "2024-09-13T11:37:42.000Z"
      }
    ]
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "안정적인 현금 흐름을 위하여, 인컴 자산 자세히 알아보기",
        "link": "https://blog.toss.im/article/economic-terms-28-income-asset",
        "pubDate": "Thu, 19 Sep 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-p4abj2{display:contents;line-height:1.55;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}🔖 이번 주 경제 용어\n인컴자산\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}이번 주 경제 용어는 노후에 잘 살기 위해 필요한 정보예요.\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n정기적으로 현금 흐름, 즉 인컴(Income)을 창출하는 자산을 말해요.\n\n\n노후 준비에서 제일 중요한 것은 무엇일까요? 안정적인 \"현금 흐름\"을 만드는 것인데요. 많은 사람들이 국민연금, 퇴직연금, 개인연금 등을 준비하는데, 이는 기본적으로 필요한 부분이고요. 보다 넉넉한 노후를 위해 연금 외에도 우리가 직접 챙겨볼 수 있는 자산이 더 있다는 것도 알고 계셨나요?\n그것은 바로 오늘 설명해드릴 ‘인컴 자산’입니다. 인컴 자산이란 쉽게 말해, 투자한 자산의 가치가 상승하면서도 정기적이고 꾸준한 현금을 얻을 수 있는 자산을 의미합니다. 이러한 자산은 불확실한 투자 환경에서 자산 가치가 급하게 오르내리는 상황에 올 수 있는 리스크를 줄이고, 안정적인 현금 흐름을 확보할 수 있다는 강점이 있습니다. 특히 은퇴 후 고정 수입이 줄어드는 시점에서 크게 빛을 발하지요.\n인컴 자산은 ‘어떤 종류의 현금을 받을 수 있느냐’에 따라 크게 2가지로 나뉩니다. 이자와 배당으로 나누어 설명해 드릴게요.\n.css-1swx3yz{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;font-weight:bold;}첫째, 이자를 받는 자산\n이자는 자산을 빌려주는 대가로 받는 돈을 의미합니다. 이자는 처음 돈을 빌려줄 때 약속받는 고정 수익이기 때문에, 자산 변동성이 크지 않다는 장점이 있습니다. 그래서 연금 외의 또 다른 정기적 수입원이 될 수 있다는 점에서 인기가 좋아요.\n이자를 받을 수 있는 자산 종류에는 우리가 잘 아는 예금, 적금 등의 저축성 상품도 있고요. 국채, 회사채와 같은 채권도 있습니다. 채권은 발행기관(정부, 기업 등)이 채권을 발행할 때 약속한 일정 기간 후에 원금을 갚는 구조로, 그 기간 동안 이자를 지급하는 구조입니다. 보통 채권 이자가 예·적금 이자보다 높은 편이라서 저축성 상품 이자보다 조금 더 높은 수익을 기대할 수 있다는 게 장점이에요.\n둘째, 배당을 받는 자산\n배당은 주식을 가지고 있는 사람들에게 각자 소유한 지분에 따라 기업이 이윤을 나눠주는 수익입니다. 특히 배당을 많이 주는 기업의 주식은 배당주라고 불리며, 투자자는 정기적으로 배당을 받을 수 있습니다.\n더 나아가 배당주는 주식이므로, 기업의 성장에 따른 자산 가치 상승도 기대할 수 있어요. 주식 가격이 오름에 따라 시세 차익까지 기대해볼 수 있는 것인데요. 현금 흐름과 시세 차익을 동시에 확보할 수 있는 투자 방식으로 활용되고 있습니다.\n그 외에도 대표적인 전통적인 방식으로 부동산에 투자해 임대료 수익을 창출할 수 있고요. 리츠(REITs, Real Estate Investment Trusts)와 같은 부동산 기반의 인컴 자산에 투자하여, 임대료 수익을 배당으로 돌려받는 방식도 있습니다.\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}쑥쑥 크는 월 배당 ETF…순자산 12조 돌파\n(연합인포맥스 2024.8.23)\n인컴형(배당·이자) 자산에 대한 투자 수요가 늘면서 매월 배당금을 챙길 수 있는 '월 배당' 상장지수펀드(ETF) 인기가 날로 커지고 있다. 23일 한국거래소에 따르면 국내 상장된 월 배당 ETF는 20일 기준 총 77개로, 순자산총액은 12조7천446억원에 달한다.\n월 배당 ETF 시장은 지난 2022년 6월 신한자산운용이 국내 최초 월 배당 상품인 'SOL 미국S&P500'를 출시한 이후 급속도로 몸집을 불렸다. 지난 5월 말만 해도 8조5천억원대 수준이었던 순자산 규모는 불과 3개월 사이 4조원가량 급증했다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}월 배당 ETF는 주식과 채권 등 편입 자산을 통해 발생한 이자·배당 수익을 매월 투자자들에게 지급한다. 정기적인 수익으로 안정적인 현금흐름을 확보할 수 있다는 점에서 은퇴를 앞둔 중장년층뿐만 아니라 젊은 층 사이에서도 인기를 끌고 있다.\n운용업계 관계자는 \"경제적 자유를 꿈꾸는 파이어족(조기 은퇴자)이 늘면서 추가적인 현금흐름을 확보하려는 젊은 층이 월 배당 ETF를 찾고 있다\"며 \"분배금을 재투자하거나 투자 포트폴리오 다변화를 위한 수단으로 월 배당 ETF가 적극적으로 활용되는 모습\"이라고 설명했다.(중략)\n\n\n노후 준비에서 중요한 것은 자산의 급격한 변동을 피하면서도, 꾸준하고 예측 가능한 현금 흐름을 만들어내는 것입니다. 특히, 근로 소득을 기대하기 힘든 순간에도 안정적인 수입을 지속적으로 창출할 수 있는 방법을 찾는 것이 핵심입니다. 이러한 이유로 인컴 자산은 노후 연금 목적으로 널리 사용돼요.\n특히 최근 들어 인컴 자산에 대한 관심이 급증하면서, ‘월 배당 상장지수펀드(ETF)’의 인기가 크게 상승하고 있습니다. 이 ETF는 주식이나 채권에서 발생하는 이자와 배당금을 매월 투자자들에게 지급하는 상품인데요. 매월 계좌로 들어오는 배당금이 안정적인 현금 흐름을 제공해주며, 주식 시장의 단기 변동성에 영향을 덜 받는다는 점이 매력적으로 작용하고 있기 때문입니다.\n이는 은퇴를 준비하는 사람들뿐 아니라, 경제적으로 안정적인 현금 흐름을 추구하는 사람들에게도 매우 매력적인 선택지로 자리 잡고 있는데요. 특히 정기적인 수입을 원하는 투자자들에게 인컴 자산이 중요한 이유는, 주가의 등락에 따른 위험을 줄이면서도 예측 가능한 수익을 확보할 수 있다는 점 때문입니다.\n사실 인컴 자산은 주로 은퇴를 앞둔 세대들이 선호하는 투자처였어요. 하지만 최근에는 경제적 자유를 꿈꾸는 젊은 세대, 특히 '파이어족' 사이에서 큰 관심을 받고 있습니다. 파이어족은 경제적 자립과 조기 은퇴를 목표로 하기 때문에 고정적인 소득을 확보하는 것이 중요합니다. 이 때문에, 월 배당 ETF와 같은 인컴 자산은 안정적인 현금 흐름을 제공하는 상품은 이들에게 좋은 투자 방식인 셈이죠.\n앞으로도 평균 수명이 점차 길어질수록, 일찍 일에서 벗어나 경제적으로 자유롭고 싶은 욕구가 커질수록, 그리고 세계 경제의 불확실성이 계속될수록 예측 가능한 수익을 제공하는 인컴 자산은 많은 투자자들에게 안정적인 투자처로 부각될 것으로 보입니다.\n오늘 함께 살펴본 인컴 자산에 속하는 다양한 금융상품 종류를 정리하면 아래와 같아요. 각각의 고유한 특징을 감안해 나의 재정 상황, 리스크 선호도, 투자 목표에 따른 적합한 상품을 선택하시기를 바랍니다.\n.css-hokoge{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;counter-reset:numberedList;}.css-hokoge ul,.css-hokoge ol{margin:16px 0 0;}.css-hokoge>li{counter-increment:numberedList;margin-bottom:16px;padding-left:24px;}.css-hokoge>li:last-of-type{margin-bottom:0;}.css-hokoge>li>span{position:relative;}.css-hokoge>li>span>:first-child::before{content:counter(numberedList) '.';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n예적금: 주로 은행에서 가입할 수 있으며 일정 기간 자금을 예치하고 그에 따른 고정 이자를 받을 수 있어요. 원금이 보전되며 안정적인 이자 수익을 기대할 수 있어요.\n다만, 안정성이 큰 만큼 다른 금융상품 대비 수익률은 높지 않을 수 있고 인플레이션 발생 시 돈의 실질 가치가 떨어질 수 있습니다.\n\n채권: 정부, 공공기관, 기업 등이 발행하는 채무 증서로 고정 이자를 지급하며 만기 시 원금 상환을 약속합니다. 채권 또한 안정적인 수익을 기대할 수 있어요.\n다만, 금리가 오르는 시기에는 채권 가격이 떨어질 수 있으며 발행자의 신용 등급이 낮아질 경우 원리금 지급이 어려워질 수 있습니다. 특히 회사채는 발행 기업의 재무 상태를 잘 살펴봐야 해요.\n\n배당주: 기업이 주주들에게 수익의 일부를 배당금으로 지급하는 주식이죠. 주가 상승을 통한 시세 차익과 정기적인 배당 수입을 통한 현금 흐름을 동시에 기대할 수 있습니다.\n다만, 주식인 만큼 주가는 하락할 수도 있고, 기업의 실적이 악화되면 배당금이 감소하거나 중단될 수 있어요.\n\n부동산: 보통 임대 수익을 통해 정기적인 현금 흐름을 기대할 수 있습니다. 주식과 비슷하게 부동산 가치가 오를 경우 시세 차익 또한 기대할 수 있어요.\n다만, 부동산은 즉시 현금화 하기가 어렵고 팔 때 시간이 오래 걸릴 수 있습니다. 또한 유지 관리, 세금, 보험, 수리비 등 지속적인 관리 비용이 발생한다는 점을 인지하시면 좋아요.\n\n리츠(REITs): 소액으로 다양한 부동산 포트폴리오에 투자할 수 있어서, 부동산을 직접 매매하지 않아도 부동산에 투자하는 효과를 누릴 수 있어요. 리츠는 소득의 대부분을 투자자에게 배당으로 분배해야 하므로, 일반적으로 높은 배당 수익이 기대됩니다.\n다만, 금리가 오를 때 배당 수익이 떨어질 수 있고 주가 하락으로도 이어질 수 있습니다. 또한 리츠 배당은 이자소득으로 간주되어 세율이 높게 매겨져요.\n\nETF: 개별 주식에 투자하는 것보다 리스크가 낮으며, 여러 주식으로 구성된 포트폴리오에 투자할 수 있어서 분산 효과를 누릴 수 있습니다. 주식 시장에 상장되어 있어 쉽게 거래가 가능하고, 현금화에도 용이해요.\n다만, 주식 시장의 흐름에 따라가는 자산이므로 하락장에서는 당연히 손실이 발생할 수 있습니다. 또한 리츠와 마찬가지로 배당금에 세금이 부과될 수 있어요.\n\n\n\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n상장지수펀드(ETF): 주식시장에 상장된 펀드. 여러 종목에 분산 투자할 수 있어서 리스크를 줄일 수 있어요. 개별 주식을 고르는 수고를 하지 않아도 된다는 펀드의 장점을 살리면서, 주식처럼 편리하게 거래할 수 있도록 만든 상품입니다.\n커버드콜(Covered Call): 주식 또는 ETF를 보유하면서 동시에 옵션을 매도해 추가적인 수익을 창출하는 전략. 이 전략은 시장이 상승할 때는 수익이 제한될 수 있지만, 하락기에는 옵션을 매도해 받은 프리미엄으로 주가 하락에 따른 손실을 어느 정도 상쇄할 수 있다는 장점이 있어요.\n월 배당: 주식이나 채권 등에서 발생한 이자나 배당금을 매월 지급하는 방식. 분기별 지급에 비해 매월 일정한 수익을 얻을 수 있어 월 단위 계획으로 생활비를 운영할 때 유리합니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "투자한 자산의 가치가 상승하면서도, 꾸준하게 현금 흐름을 만드는 방법",
        "contentSnippet": "투자한 자산의 가치가 상승하면서도, 꾸준하게 현금 흐름을 만드는 방법",
        "guid": "https://blog.toss.im/article/economic-terms-28-income-asset",
        "isoDate": "2024-09-19T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]