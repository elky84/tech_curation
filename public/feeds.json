[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Inside Bento: Jupyter Notebooks at Meta",
        "link": "https://engineering.fb.com/2024/09/17/data-infrastructure/inside-bento-jupyter-notebooks-at-meta/",
        "pubDate": "Tue, 17 Sep 2024 17:53:56 +0000",
        "content:encodedSnippet": "This episode of the Meta Tech Podcast is all about Bento, Meta’s internal distribution of Jupyter Notebooks, an open-source web-based computing platform. Bento allows our engineers to mix code, text, and multimedia in a single document and serves a wide range of use cases at Meta from prototyping to complex machine learning workflows.\nPascal Hartig (@passy) is joined by Steve, whose team has built several features on top of Jupyter, including scheduled notebooks, sharing with colleagues, and running notebooks without a remote server component by leveraging WebAssembly in the browser.\nDownload or listen to the podcast episode below:\n\nYou can also find the episode wherever you get your podcasts, including:\nSpotify\nApple Podcasts\nPocketCasts\nOvercast\nThe Meta Tech Podcast is a podcast, brought to you by Meta, where we highlight the work Meta’s engineers are doing at every level – from low-level frameworks to end-user features.\nSend us feedback on Instagram, Threads, or X.\nAnd if you’re interested in learning more about career opportunities at Meta visit the Meta Careers page.\nThe post Inside Bento: Jupyter Notebooks at Meta appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>This episode of the Meta Tech Podcast is all about Bento, Meta’s internal distribution of Jupyter Notebooks, an open-source web-based computing platform. Bento allows our engineers to mix code, text, and multimedia in a single document and serves a wide range of use cases at Meta from prototyping to complex machine learning workflows. Pascal Hartig [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2024/09/17/data-infrastructure/inside-bento-jupyter-notebooks-at-meta/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2024/09/17/data-infrastructure/inside-bento-jupyter-notebooks-at-meta/\">Inside Bento: Jupyter Notebooks at Meta</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "This episode of the Meta Tech Podcast is all about Bento, Meta’s internal distribution of Jupyter Notebooks, an open-source web-based computing platform. Bento allows our engineers to mix code, text, and multimedia in a single document and serves a wide range of use cases at Meta from prototyping to complex machine learning workflows. Pascal Hartig [...]\nRead More...\nThe post Inside Bento: Jupyter Notebooks at Meta appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=21690",
        "categories": [
          "Culture",
          "Data Infrastructure",
          "DevInfra",
          "Open Source",
          "Meta Tech Podcast"
        ],
        "isoDate": "2024-09-17T17:53:56.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": [
      {
        "creator": "Netflix Technology Blog",
        "title": "Introducing Netflix’s Key-Value Data Abstraction Layer",
        "link": "https://netflixtechblog.com/introducing-netflixs-key-value-data-abstraction-layer-1ea8a0a11b30?source=rss----2615bd06b42e---4",
        "pubDate": "Wed, 18 Sep 2024 22:49:04 GMT",
        "content:encodedSnippet": "Vidhya Arvind, Rajasekhar Ummadisetty, Joey Lynch, Vinay Chella\nIntroduction\nAt Netflix our ability to deliver seamless, high-quality, streaming experiences to millions of users hinges on robust, global backend infrastructure. Central to this infrastructure is our use of multiple online distributed databases such as Apache Cassandra, a NoSQL database known for its high availability and scalability. Cassandra serves as the backbone for a diverse array of use cases within Netflix, ranging from user sign-ups and storing viewing histories to supporting real-time analytics and live streaming.\nOver time as new key-value databases were introduced and service owners launched new use cases, we encountered numerous challenges with datastore misuse. Firstly, developers struggled to reason about consistency, durability and performance in this complex global deployment across multiple stores. Second, developers had to constantly re-learn new data modeling practices and common yet critical data access patterns. These include challenges with tail latency and idempotency, managing “wide” partitions with many rows, handling single large “fat” columns, and slow response pagination. Additionally, the tight coupling with multiple native database APIs — APIs that continually evolve and sometimes introduce backward-incompatible changes — resulted in org-wide engineering efforts to maintain and optimize our microservice’s data access.\nTo overcome these challenges, we developed a holistic approach that builds upon our Data Gateway Platform. This approach led to the creation of several foundational abstraction services, the most mature of which is our Key-Value (KV) Data Abstraction Layer (DAL). This abstraction simplifies data access, enhances the reliability of our infrastructure, and enables us to support the broad spectrum of use cases that Netflix demands with minimal developer effort.\nIn this post, we dive deep into how Netflix’s KV abstraction works, the architectural principles guiding its design, the challenges we faced in scaling diverse use cases, and the technical innovations that have allowed us to achieve the performance and reliability required by Netflix’s global operations.\nThe Key-Value Service\nThe KV data abstraction service was introduced to solve the persistent challenges we faced with data access patterns in our distributed databases. Our goal was to build a versatile and efficient data storage solution that could handle a wide variety of use cases, ranging from the simplest hashmaps to more complex data structures, all while ensuring high availability, tunable consistency, and low latency.\nData Model\nAt its core, the KV abstraction is built around a two-level map architecture. The first level is a hashed string ID (the primary key), and the second level is a sorted map of a key-value pair of bytes. This model supports both simple and complex data models, balancing flexibility and efficiency.\nHashMap<String, SortedMap<Bytes, Bytes>>\nFor complex data models such as structured Records or time-ordered Events, this two-level approach handles hierarchical structures effectively, allowing related data to be retrieved together. For simpler use cases, it also represents flat key-value Maps (e.g. id → {\"\" → value}) or named Sets (e.g.id → {key → \"\"}). This adaptability allows the KV abstraction to be used in hundreds of diverse use cases, making it a versatile solution for managing both simple and complex data models in large-scale infrastructures like Netflix.\nThe KV data can be visualized at a high level, as shown in the diagram below, where three records are shown.\n\nmessage Item (   \n  Bytes    key,\n  Bytes    value,\n  Metadata metadata,\n  Integer  chunk\n)\nDatabase Agnostic Abstraction\nThe KV abstraction is designed to hide the implementation details of the underlying database, offering a consistent interface to application developers regardless of the optimal storage system for that use case. While Cassandra is one example, the abstraction works with multiple data stores like EVCache, DynamoDB, RocksDB, etc…\nFor example, when implemented with Cassandra, the abstraction leverages Cassandra’s partitioning and clustering capabilities. The record ID acts as the partition key, and the item key as the clustering column:\n\nThe corresponding Data Definition Language (DDL) for this structure in Cassandra is:\nCREATE TABLE IF NOT EXISTS <ns>.<table> (\n  id             text,\n  key            blob,\n  value          blob,\n  value_metadata blob,\nPRIMARY KEY (id, key))\nWITH CLUSTERING ORDER BY (key <ASC|DESC>)\nNamespace: Logical and Physical Configuration\nA namespace defines where and how data is stored, providing logical and physical separation while abstracting the underlying storage systems. It also serves as central configuration of access patterns such as consistency or latency targets. Each namespace may use different backends: Cassandra, EVCache, or combinations of multiple. This flexibility allows our Data Platform to route different use cases to the most suitable storage system based on performance, durability, and consistency needs. Developers just provide their data problem rather than a database solution!\nIn this example configuration, the ngsegment namespace is backed by both a Cassandra cluster and an EVCache caching layer, allowing for highly durable persistent storage and lower-latency point reads.\n\"persistence_configuration\":[                                                   \n  {                                                                           \n    \"id\":\"PRIMARY_STORAGE\",                                                 \n    \"physical_storage\": {                                                    \n      \"type\":\"CASSANDRA\",                                                 \n      \"cluster\":\"cassandra_kv_ngsegment\",                                \n      \"dataset\":\"ngsegment\",                                             \n      \"table\":\"ngsegment\",                                               \n      \"regions\": [\"us-east-1\"],\n      \"config\": {\n        \"consistency_scope\": \"LOCAL\",\n        \"consistency_target\": \"READ_YOUR_WRITES\"\n      }                                            \n    }                                                                       \n  },                                                                          \n  {                                                                           \n    \"id\":\"CACHE\",                                                           \n    \"physical_storage\": {                                                    \n      \"type\":\"CACHE\",                                                     \n      \"cluster\":\"evcache_kv_ngsegment\"                                   \n     },                                                                      \n     \"config\": {                                                              \n       \"default_cache_ttl\": 180s                                             \n     }                                                                       \n  }                                                                           \n] \n \nKey APIs of the KV Abstraction\nTo support diverse use-cases, the KV abstraction provides four basic CRUD APIs:\nPutItems — Write one or more Items to a Record\nThe PutItems API is an upsert operation, it can insert new data or update existing data in the two-level map structure.\nmessage PutItemRequest (\n  IdempotencyToken idempotency_token,\n  string           namespace, \n  string           id, \n  List<Item>       items\n)\nAs you can see, the request includes the namespace, Record ID, one or more items, and an idempotency token to ensure retries of the same write are safe. Chunked data can be written by staging chunks and then committing them with appropriate metadata (e.g. number of chunks).\nGetItems — Read one or more Items from a Record\nThe GetItemsAPI provides a structured and adaptive way to fetch data using ID, predicates, and selection mechanisms. This approach balances the need to retrieve large volumes of data while meeting stringent Service Level Objectives (SLOs) for performance and reliability.\nmessage GetItemsRequest (\n  String              namespace,\n  String              id,\n  Predicate           predicate,\n  Selection           selection,\n  Map<String, Struct> signals\n)\nThe GetItemsRequest includes several key parameters:\n\nNamespace: Specifies the logical dataset or table\nId: Identifies the entry in the top-level HashMap\nPredicate: Filters the matching items and can retrieve all items (match_all), specific items (match_keys), or a range (match_range)\nSelection: Narrows returned responses for example page_size_bytes for pagination, item_limit for limiting the total number of items across pages and include/exclude to include or exclude large values from responses\nSignals: Provides in-band signaling to indicate client capabilities, such as supporting client compression or chunking.\n\nThe GetItemResponse message contains the matching data:\nmessage GetItemResponse (\n  List<Item>       items,\n  Optional<String> next_page_token\n)\nItems: A list of retrieved items based on the Predicate and Selection defined in the request.\nNext Page Token: An optional token indicating the position for subsequent reads if needed, essential for handling large data sets across multiple requests. Pagination is a critical component for efficiently managing data retrieval, especially when dealing with large datasets that could exceed typical response size limits.\n\nDeleteItems — Delete one or more Items from a Record\nThe DeleteItems API provides flexible options for removing data, including record-level, item-level, and range deletes — all while supporting idempotency.\nmessage DeleteItemsRequest (\n  IdempotencyToken idempotency_token,\n  String           namespace,\n  String           id,\n  Predicate        predicate\n)\nJust like in the GetItems API, the Predicate allows one or more Items to be addressed at once:\n\nRecord-Level Deletes (match_all): Removes the entire record in constant latency regardless of the number of items in the record.\nItem-Range Deletes (match_range): This deletes a range of items within a Record. Useful for keeping “n-newest” or prefix path deletion.\nItem-Level Deletes (match_keys): Deletes one or more individual items.\n\nSome storage engines (any store which defers true deletion) such as Cassandra struggle with high volumes of deletes due to tombstone and compaction overhead. Key-Value optimizes both record and range deletes to generate a single tombstone for the operation — you can learn more about tombstones in About Deletes and Tombstones.\nItem-level deletes create many tombstones but KV hides that storage engine complexity via TTL-based deletes with jitter. Instead of immediate deletion, item metadata is updated as expired with randomly jittered TTL applied to stagger deletions. This technique maintains read pagination protections. While this doesn’t completely solve the problem it reduces load spikes and helps maintain consistent performance while compaction catches up. These strategies help maintain system performance, reduce read overhead, and meet SLOs by minimizing the impact of deletes.\nComplex Mutate and Scan APIs\nBeyond simple CRUD on single Records, KV also supports complex multi-item and multi-record mutations and scans via MutateItems and ScanItems APIs. PutItems also supports atomic writes of large blob data within a single Item via a chunked protocol. These complex APIs require careful consideration to ensure predictable linear low-latency and we will share details on their implementation in a future post.\nDesign Philosophies for reliable and predictable performance\nIdempotency to fight tail latencies\nTo ensure data integrity the PutItems and DeleteItems APIs use idempotency tokens, which uniquely identify each mutative operation and guarantee that operations are logically executed in order, even when hedged or retried for latency reasons. This is especially crucial in last-write-wins databases like Cassandra, where ensuring the correct order and de-duplication of requests is vital.\nIn the Key-Value abstraction, idempotency tokens contain a generation timestamp and random nonce token. Either or both may be required by backing storage engines to de-duplicate mutations.\nmessage IdempotencyToken (\n  Timestamp generation_time,\n  String    token\n)\nAt Netflix, client-generated monotonic tokens are preferred due to their reliability, especially in environments where network delays could impact server-side token generation. This combines a client provided monotonic generation_time timestamp with a 128 bit random UUID token. Although clock-based token generation can suffer from clock skew, our tests on EC2 Nitro instances show drift is minimal (under 1 millisecond). In some cases that require stronger ordering, regionally unique tokens can be generated using tools like Zookeeper, or globally unique tokens such as a transaction IDs can be used.\nThe following graphs illustrate the observed clock skew on our Cassandra fleet, suggesting the safety of this technique on modern cloud VMs with direct access to high-quality clocks. To further maintain safety, KV servers reject writes bearing tokens with large drift both preventing silent write discard (write has timestamp far in past) and immutable doomstones (write has a timestamp far in future) in storage engines vulnerable to those.\n\nHandling Large Data through Chunking\nKey-Value is also designed to efficiently handle large blobs, a common challenge for traditional key-value stores. Databases often face limitations on the amount of data that can be stored per key or partition. To address these constraints, KV uses transparent chunking to manage large data efficiently.\nFor items smaller than 1 MiB, data is stored directly in the main backing storage (e.g. Cassandra), ensuring fast and efficient access. However, for larger items, only the id, key, and metadata are stored in the primary storage, while the actual data is split into smaller chunks and stored separately in chunk storage. This chunk storage can also be Cassandra but with a different partitioning scheme optimized for handling large values. The idempotency token ties all these writes together into one atomic operation.\nBy splitting large items into chunks, we ensure that latency scales linearly with the size of the data, making the system both predictable and efficient. A future blog post will describe the chunking architecture in more detail, including its intricacies and optimization strategies.\nClient-Side Compression\nThe KV abstraction leverages client-side payload compression to optimize performance, especially for large data transfers. While many databases offer server-side compression, handling compression on the client side reduces expensive server CPU usage, network bandwidth, and disk I/O. In one of our deployments, which helps power Netflix’s search, enabling client-side compression reduced payload sizes by 75%, significantly improving cost efficiency.\nSmarter Pagination\nWe chose payload size in bytes as the limit per response page rather than the number of items because it allows us to provide predictable operation SLOs. For instance, we can provide a single-digit millisecond SLO on a 2 MiB page read. Conversely, using the number of items per page as the limit would result in unpredictable latencies due to significant variations in item size. A request for 10 items per page could result in vastly different latencies if each item was 1 KiB versus 1 MiB.\nUsing bytes as a limit poses challenges as few backing stores support byte-based pagination; most data stores use the number of results e.g. DynamoDB and Cassandra limit by number of items or rows. To address this, we use a static limit for the initial queries to the backing store, query with this limit, and process the results. If more data is needed to meet the byte limit, additional queries are executed until the limit is met, the excess result is discarded and a page token is generated.\nThis static limit can lead to inefficiencies, one large item in the result may cause us to discard many results, while small items may require multiple iterations to fill a page, resulting in read amplification. To mitigate these issues, we implemented adaptive pagination which dynamically tunes the limits based on observed data.\nAdaptive Pagination\nWhen an initial request is made, a query is executed in the storage engine, and the results are retrieved. As the consumer processes these results, the system tracks the number of items consumed and the total size used. This data helps calculate an approximate item size, which is stored in the page token. For subsequent page requests, this stored information allows the server to apply the appropriate limits to the underlying storage, reducing unnecessary work and minimizing read amplification.\nWhile this method is effective for follow-up page requests, what happens with the initial request? In addition to storing item size information in the page token, the server also estimates the average item size for a given namespace and caches it locally. This cached estimate helps the server set a more optimal limit on the backing store for the initial request, improving efficiency. The server continuously adjusts this limit based on recent query patterns or other factors to keep it accurate. For subsequent pages, the server uses both the cached data and the information in the page token to fine-tune the limits.\n\nIn addition to adaptive pagination, a mechanism is in place to send a response early if the server detects that processing the request is at risk of exceeding the request’s latency SLO.\nFor example, let us assume a client submits a GetItems request with a per-page limit of 2 MiB and a maximum end-to-end latency limit of 500ms. While processing this request, the server retrieves data from the backing store. This particular record has thousands of small items so it would normally take longer than the 500ms SLO to gather the full page of data. If this happens, the client would receive an SLO violation error, causing the request to fail even though there is nothing exceptional. To prevent this, the server tracks the elapsed time while fetching data. If it determines that continuing to retrieve more data might breach the SLO, the server will stop processing further results and return a response with a pagination token.\n\nThis approach ensures that requests are processed within the SLO, even if the full page size isn’t met, giving clients predictable progress. Furthermore, if the client is a gRPC server with proper deadlines, the client is smart enough not to issue further requests, reducing useless work.\nIf you want to know more, the How Netflix Ensures Highly-Reliable Online Stateful Systems article talks in further detail about these and many other techniques.\nSignaling\nKV uses in-band messaging we call signaling that allows the dynamic configuration of the client and enables it to communicate its capabilities to the server. This ensures that configuration settings and tuning parameters can be exchanged seamlessly between the client and server. Without signaling, the client would need static configuration — requiring a redeployment for each change — or, with dynamic configuration, would require coordination with the client team.\nFor server-side signals, when the client is initialized, it sends a handshake to the server. The server responds back with signals, such as target or max latency SLOs, allowing the client to dynamically adjust timeouts and hedging policies. Handshakes are then made periodically in the background to keep the configuration current. For client-communicated signals, the client, along with each request, communicates its capabilities, such as whether it can handle compression, chunking, and other features.\n\nKV Usage @ Netflix\nThe KV abstraction powers several key Netflix use cases, including:\n\nStreaming Metadata: High-throughput, low-latency access to streaming metadata, ensuring personalized content delivery in real-time.\nUser Profiles: Efficient storage and retrieval of user preferences and history, enabling seamless, personalized experiences across devices.\nMessaging: Storage and retrieval of push registry for messaging needs, enabling the millions of requests to flow through.\nReal-Time Analytics: This persists large-scale impression and provides insights into user behavior and system performance, moving data from offline to online and vice versa.\n\nFuture Enhancements\nLooking forward, we plan to enhance the KV abstraction with:\n\nLifecycle Management: Fine-grained control over data retention and deletion.\nSummarization: Techniques to improve retrieval efficiency by summarizing records with many items into fewer backing rows.\nNew Storage Engines: Integration with more storage systems to support new use cases.\nDictionary Compression: Further reducing data size while maintaining performance.\n\nConclusion\nThe Key-Value service at Netflix is a flexible, cost-effective solution that supports a wide range of data patterns and use cases, from low to high traffic scenarios, including critical Netflix streaming use-cases. The simple yet robust design allows it to handle diverse data models like HashMaps, Sets, Event storage, Lists, and Graphs. It abstracts the complexity of the underlying databases from our developers, which enables our application engineers to focus on solving business problems instead of becoming experts in every storage engine and their distributed consistency models. As Netflix continues to innovate in online datastores, the KV abstraction remains a central component in managing data efficiently and reliably at scale, ensuring a solid foundation for future growth.\nAcknowledgments: Special thanks to our stunning colleagues who contributed to Key Value’s success: William Schor, Mengqing Wang, Chandrasekhar Thumuluru, Rajiv Shringi, John Lu, George Cambell, Ammar Khaku, Jordan West, Chris Lohfink, Matt Lehman, and the whole online datastores team (ODS, f.k.a CDE).\n\nIntroducing Netflix’s Key-Value Data Abstraction Layer was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/1ea8a0a11b30",
        "isoDate": "2024-09-18T22:49:04.000Z"
      }
    ]
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Maha Taqi",
        "title": "What’s New in PyCharm 2024.2.2! ",
        "link": "https://blog.jetbrains.com/pycharm/2024/09/pycharm-2024-2-2/",
        "pubDate": "Fri, 20 Sep 2024 11:33:32 +0000",
        "content:encodedSnippet": "PyCharm 2024.2.2 is here with many key updates, including Python support improvements, new Django features, and enhancements to the Data View tool window! \nVisit our What’s New page for more details on all these features and to explore many others. You can download the latest version from our download page or update your current version through our free Toolbox App. \n\n\n\n    \nDownload PyCharm 2024.2.2\n                                                    \nPyCharm 2024.2.2 highlights\nDjango enhancements  PRO\nNew code completion suggestions\nWhen working with models, PyCharm now offers field completion suggestions in a variety of cases, such as Model.save(update_fields[…]), Model.refresh_from_db(fields=[…]), Model.clean_fields(exclude=[…]), and so on.\n\n\n\n\nQuick-fix to create a method for an unresolved ViewSet\nIf a ViewSet has an unresolved reference, PyCharm suggests a quick-fix to introduce the missing method. Use Alt + Enter to call it.\n\n\n\n    \nWhat’s new!\n                                                    \nData View  PRO\nYou can now look at n-dimensional NumPy arrays in the Data View tool window. Define the array you would like to inspect, along with a specific dimension or slice, in a special field at the bottom of the tool window, and PyCharm will display a table with the results.\n\n\n\n\nPython support improvements\nSupport for default types for type parameters (PEP 696)\nImprove typing with PyCharm’s support for the Python 3.13 ability to define the default types for type parameters. The IDE now incorporates default types for type parameters both for old-style and new-style generic classes, functions, and type aliases, and it takes them into account in type inference.\n\n\n\n\nPattern matching: Foldable match statements\nTo improve the readability of code with large pattern-matching statements, you can now use folding for entire match statements or for separate cases inside them. \n\n\n\n    \nDownload PyCharm 2024.2.2\n                                                    \nVisit our What’s New page to learn about other useful features included in this release, or read the release notes for the full breakdown, including more details on the features mentioned here. \nIf you encounter any problems, please report them in our issue tracker so we can address them promptly. \nConnect with us on X (formerly Twitter) to share your thoughts on PyCharm 2024.2.2!",
        "dc:creator": "Maha Taqi",
        "content": "PyCharm 2024.2.2 is here with many key updates, including Python support improvements, new Django features, and enhancements to the Data View tool window!&#160; Visit our What’s New page for more details on all these features and to explore many others. You can download the latest version from our download page or update your current version [&#8230;]",
        "contentSnippet": "PyCharm 2024.2.2 is here with many key updates, including Python support improvements, new Django features, and enhancements to the Data View tool window!  Visit our What’s New page for more details on all these features and to explore many others. You can download the latest version from our download page or update your current version […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=512375",
        "categories": [
          "release"
        ],
        "isoDate": "2024-09-20T11:33:32.000Z"
      },
      {
        "creator": "Vitaly Bragilevsky",
        "title": "How to Learn Rust in 2024: A Complete Beginner’s Guide to Mastering Rust Programming",
        "link": "https://blog.jetbrains.com/rust/2024/09/20/how-to-learn-rust/",
        "pubDate": "Fri, 20 Sep 2024 11:14:38 +0000",
        "content:encodedSnippet": "So, you’re thinking about choosing Rust as your next programming language to learn. You already know what it means to write code and have some experience with at least one programming language, probably Python or JavaScript. You’ve heard about Rust here and there. People say it’s a modern systems programming language that brings safety and performance and solves problems that are hard to avoid in other programming languages (such as C or C++). Someone mentioned that Rust’s popularity is growing. You regularly see blog posts describing how Google, Microsoft, Amazon, and other big players in the field have already adopted it. Other mentions indicate that adoption in various industries is still growing. However, it’s also been whispered that Rust is not the easiest language to learn, so you worry about whether you can handle it.\nIf you recognize yourself in the description above, this post is for you. I aim to answer all the questions you might have about approaching Rust. I’ll first discuss why it’s beneficial for software developers to learn Rust and compare it with other competing programming languages. Then, I’ll explain which Rust features and concepts are the most important to remember. These features make Rust a significant development in the field of programming languages. With that in mind, I’ll continue with recommendations for getting started, provide you with educational resources (books, guides, tutorials, and courses), and suggest the most efficient learning paths. You might encounter some challenges while learning Rust, so I’ll offer guidance about overcoming them. Finally, I’ll cover areas of software where Rust truly shines and show how you can approach them.\nWhy learn Rust in 2024?\nDeveloper surveys show that Rust is one of the top 12 programming languages heavily used in the IT industry. According to survey data, 10–13% of software developers work with Rust regularly. More importantly, if we look at those who are only learning to code, Rust’s share reaches 11–18%. Rust learners are a powerful driving force for growth. For example, The State of Developer Ecosystem Survey demonstrates that Rust has steadily grown over the last six years and doesn’t show any signs of stagnation:\n\n\n\n\nNote the “Likely to adopt” column: Rust is the only language in the double digits here!\nDeveloper appreciation for Rust is also unbeatable. How do I know that? Well, the StackOverflow Developer Survey provides amazing proof:\nRust continues to be the most admired language in the developer community, and has been for many years in a row (eight years? nine years? No one remembers!).\nThose already working with Rust don’t want to switch to other programming languages.\nAs a regular participant in Rust developer conferences, I can testify that this appreciation for Rust is evident. Rustaceans love Rust and have created one of the friendliest communities to participate in.\nOn the other hand, the StackOverflow survey reports a decline in median yearly salary over the last couple of years, but this trend is also seen with other mainstream programming languages. Despite growing adoption among top and mid-size IT companies, we have yet to see Rust adopted by myriad smaller companies, which could bring more Rust vacancies to the job market and make it less competitive than it is these days (see this engaging discussion for context).\nIf we look at the language, features, and ecosystem, we immediately see where the numbers come from. Rust has been developed to provide memory safety and performance simultaneously. Unique choices made by the language designers ensure that you have fewer memory access errors in your code, making security breaches less likely. The price you pay for that doesn’t come with performance penalties. So, what’s the price then? Well, it’s the time you, as a developer, spend persuading the Rust compiler that your code is truly safe. Once the compiler has agreed with you, you’re safe. Memory safety and performance are extremely valuable: together, they provide a much smoother experience for those who use software solutions (which these days means everyone). Rust’s standard library, other cornerstone libraries, and tooling also enhance the developer experience. For example, developing high-performance concurrent applications in Rust is not a big deal, as the ecosystem is mature and well-equipped to support such tasks.\nDevelopers also appreciate the wide spectrum of technology domains and industries where Rust knowledge is applicable. The most recent Rust Annual Survey identifies the following such areas:\nServer-side and other backend applications.\nCloud computing applications, services, and infrastructure.\nDistributed systems.\nComputer networking.\nComputer security.\nEmbedded development.\nGame development.\nWeb frontends (including WebAssembly).\nAnd many others.\nOf course, Rust is not the only programming language used in these areas. There are competitors in each of them. Rust is often compared to C++ or Go because they share many areas but differ in various aspects, including memory safety guarantees, performance promises, availability of tooling and libraries, language simplicity, and industry adoption. While Rust might be lagging in the last three categories, it works on par with C++ in terms of performance and makes it much easier to avoid memory access pitfalls and build error-prone applications.\nUnderstanding Rust’s core concepts\nLet’s get a bird’s-eye view of Rust and its features. Rust is neither an object-oriented nor a functional programming language. It doesn’t feature classes and doesn’t directly support object-oriented patterns. It can operate with functions as first-class values, but this ability is limited compared to full-blown functional languages (such as Haskell or OCaml).\nWriting code with functions, values, and types\nPrograms in Rust are structured as collections of functions combined in modules. Functions manipulate values. Values are statically typed, meaning every value or expression should have an assigned type at compile time. Rust provides both primitive and compound types (arrays and structs), and its standard library also provides many additional types for collections of values. Rust supports generic types, which makes it possible to avoid mentioning specific types and provide more general definitions. Rust also provides traits as collections of methods (i.e. functions) that can be implemented for specific types. Traits allow Rust to achieve the same levels of software abstraction as object-oriented languages that support inheritance and polymorphism.\nMemory management\nRust’s approach to memory management is based on the following principle: the Rust compiler must know the precise locations in the code where memory is allocated, where and how it’s accessed, and where it’s no longer needed. This knowledge allows for controlling memory access and freeing allocated memory automatically by inserting the corresponding instructions directly into the generated code, thus avoiding many common pitfalls other languages might be susceptible to. This approach differs from automatic memory management (as in JavaScript, Python, Java, or C#), where memory fragments that are no longer needed are detected at runtime and garbage is collected. As a result, Rust saves the time required to execute the corresponding algorithms at runtime and achieves both memory safety and performance.\nTo be able to infer knowledge about memory access, Rust sets limits on what can be done with memory and defines strict rules that ensure correctness:\nEvery memory fragment must be owned by a single variable – Rust’s ownership model is based on this.\nMutating a memory fragment requires exclusive access (as opposed to just reading the memory).\nRust allows creating mutable and immutable references to memory fragments (borrowing them) but uses a borrow checker to enforce correctness (for example, prohibiting more than one mutable reference).\nThe Rust compiler computes and checks lifetimes for every variable in a program from the place it’s created to the place it’s dropped (where it becomes no longer accessible).\nThe compiler’s requirements can be too strict. This can be a common frustration, especially when learning the language: The Rust compiler may fail to accept a logically correct code fragment.\nTo make these concepts a little easier to catch, let’s discuss Rust’s equivalent of the following Python program:\ndef print_list(numbers):\n   for number in numbers:\n       print(str(number) + \" \", end=\"\")\n   print()\n\n\ndef add_one(numbers):\n   numbers.append(1)\n\n\ndef main():\n   numbers = [1, 1, 1]\n   print_list(numbers)\n   add_one(numbers)\n   print_list(numbers)\n\n\nif __name__ == '__main__':\n   main()\nSo, we have a memory fragment (Python’s list) with three elements. We print it, add one more element, and print it again. We never mention any type here. Python doesn’t need any sign of memory management in the program, although the memory must be allocated and freed at some point. Moreover, we pass around the numbers list easily without thinking about memory access control. \nThe same code in Rust is different, not only in syntax but in the whole approach to types and memory management:\n// Here we take a vector by reference (&).\n// We are not allowed to mutate elements.\n// We don't take ownership; we just borrow.\nfn print_vec(numbers: &Vec<i32>) {\n   for number in numbers {\n       print!(\"{} \", number);\n   }\n   println!()\n}\n\n\n// Here we take a vector by mutable reference (&mut).\n// We are now allowed to mutate elements and the vector itself.\n// We still don't take ownership; we just borrow.\nfn add_one(numbers: &mut Vec<i32>) {\n   numbers.push(1)\n}\n\n\nfn main() {\n   let mut numbers = vec![1,1,1];\n   // We pass a reference\n   print_vec(&numbers);\n   // We pass a mutable reference\n   add_one(&mut numbers);\n   // We pass a reference again\n   print_vec(&numbers);\n}\nIt’s instructive to explore these two code fragments and find similarities and differences between them by yourself. Even without understanding Rust, you might get a general feeling for it just by looking at this code.\nDespite passing references around, the numbers variable still owns the allocated memory. Rust defaults to read-only memory access, requiring explicit specification for write access. Rust also ensures the memory is freed after the last usage in the second call to print_vec. \nHere’s a variation of the add_one function that takes over ownership of a vector and renders the whole program incorrect:\nfn add_one_incorrect(mut numbers: Vec<i32>) {\n   numbers.push(1)\n}\nWhat’s the problem? Well, after calling the add_one_incorrect function, the numbers variable no longer owns the memory; its lifetime has ended, so we can’t print anything! The screenshot below shows that we’re in trouble:\n\n\n\n\nBefore introducing the incorrect version, Rust’s borrow checker could ensure that passing references didn’t bring any problems. After introducing an error, it’s no longer feasible. The language’s behavior here exemplifies how memory access is under strict control.\nConcurrency\nConcurrency is the ability of a system to execute multiple tasks or processes simultaneously or in overlapping periods to improve efficiency and performance. This can involve parallel execution on multiple processors or interleaved execution on a single processor, allowing a system to handle multiple operations simultaneously and manage multiple tasks more effectively.\nRustaceans often describe Rust’s concurrency as fearless. Several factors contribute to this perception:\nThe ownership model adds more control over sharing data between concurrent threads.\nEmbracing immutable data structures simplifies the implementation of concurrent algorithms and contributes to thread safety.\nMessage passing via channels adopted in Rust dramatically reduces the complexities of shared-state concurrency.\nRust’s approach to lifetimes and memory management generally makes code that works with concurrency primitives such as locks, semaphores, or barriers more elegant and safe.\nIn many cases, Rust’s approach to asynchronous programming makes it possible to avoid using complex concurrency patterns and enables you to write concise and clear code.\nAlthough concurrency is not the first thing beginners learn when approaching Rust, it is still easier to grasp than in many other programming languages. More importantly, Rust helps you write less error-prone concurrent code.\nHow to get started with Rust\nThere are only two things that need to be installed on your computer to get started with Rust:\nRust toolchain – a collection of tools that includes the Rust compiler and other utilities.\nA code editor or IDE (integrated development environment). \nThe first step is easy – just go to rustup.rs and run a command they suggest or download an installer, depending on your operating system.\nThe second step requires making a choice. Your options include using a code editor configured to provide Rust support (for example, Visual Studio Code supports Rust but requires some setup) or using a dedicated Rust IDE (such as RustRover, a JetBrains IDE, which is free for anyone learning Rust).\nGet RustRover for free\n                                                    \nIf you choose RustRover, you don’t need to configure anything. You can launch it, create a new project (using the New Project button on the welcome screen), and run the Hello, world! program generated by default (use the green triangle icon in the gutter to run the main function):\n\n\n\n\nIf you encounter any trouble, refer to RustRover’s Quick Start Guide. \nAnything beyond really simple stuff requires adding external dependencies. Rust projects rely on Cargo, a package manager. Rust packages are called crates. The dependencies are specified in the Cargo.toml file, for example:\n[package]\nname = \"hello\"\nversion = \"0.1.0\"\nedition = \"2021\"\n\n[dependencies]\nchrono = \"0.4.38\"\nAfter adding the chrono crate to our dependencies, we can use the functionality it provides in our code, for example:\nuse chrono::{DateTime, Local};\n\nfn main() {\n   println!(\"Hello, world!\");\n   let local: DateTime<Local> = Local::now();\n   println!(\"Today is {}\", local.format(\"%A\"));\n}\nIn this program, we get the current (local) date and time, format it as a day of the week, and then print a result. For example, running this program gives me:\nHello, world!\nToday is Thursday\nLearning basic syntax, data types, and control structures (if-conditionals, loops, etc.) in Rust is a parallel process to learning about the available crates and what they provide. Once you can run Rust programs, you’ll be ready to work with external dependencies. Let’s talk about the resources that simplify learning Rust.\nLearning path and resources\nIf you’ve ever learned a foreign language, you know that various skills are required, such as reading, writing, listening, and speaking. There are also different types of activities to develop these skills. Teachers always encourage you to read texts, watch videos, listen to podcasts, speak whenever possible, post on social media, etc. Learning programming languages is no different. When learning how to code in Rust (or any other programming language), you:\nRead books, documentation, blog posts, release announcements, and social media discussions (which is all vital to staying informed and in context).\nWatch videos from tech video bloggers.\nExplore code samples (which necessarily includes reading and modifying them!).\nWrite code to complete exercises.\nFollow hands-on tutorials.\nDevelop simple projects from scratch (this is extremely important – project-based learning is always helpful for developing independent coding skills).\nMaybe even contribute to open-source projects (there’s always something easy enough for beginners – just ask!).\nNote that there should be a balance between reading about programming and writing code. It’s impossible to master a programming language without actually writing code. At the same time, avoiding books or other extended materials can lead to a relatively shallow understanding of the internal details; any complex case could become extremely hard to resolve without external help (which is fine but can slow you down on your path to becoming a professional developer).\nWhen you write code, it’s important to both replicate externally crafted exercises and follow your own (or borrowed) ideas for developing simple applications. Ensure that your exercises are not limited to grasping algorithms but also teach language features and library functionalities. When developing simple applications, you learn to choose a language feature or a library that best suits your goal. This is an essential skill in itself.\nSo, the key to successful learning is combining all the approaches. Here I have a collection of resources that can help you with that.\nRust books\nThere are many good books available for learning Rust:\n\n\nThe Rust Programming Language is an official, regularly updated book for those learning Rust. It is known as The Book within the community. I also recommend another version of this book that adds more interactivity, such as quizzes, visualizations, and exercises. This version was developed by Brown University researchers Will Crichton, Gavin Gray, and Shriram Krishnamurthi. There’s also an interview with Will Crichton, who discusses this experiment to enhance Rust learners’ experience.\nRust in Action by Tim McNamara (mostly known as timClicks – my advice is to follow him everywhere).\nHands-on Rust by Herbert Wolverson – the book that is especially appealing to those who appreciate project-based learning (you can also find a lot of free videos by Herbert about various Rust concepts; I can’t recommend them enough).\nRust for Rustaceans by Jon Gjengset, a Rust book that many community members highly praise.  \nCode Like a Pro in Rust by Brenden Matthews.\nLearn Rust in a Month of Lunches by David MacLeod.\nAfter a few months of learning Rust, you should check out Mara Bos’s Rust Atomics and Locks. It’s a masterpiece in explaining the low-level concepts behind Rust concurrency.\nRust tutorials\nFor those who prefer more hands-on approach to learning, there are also tutorials and courses with exercises:\nComprehensive Rust is a Rust tutorial developed internally at Google but available to everyone. It is the best resource for those who want to learn all the necessary details quickly.\nRustlings (and its variation for an in-IDE learning experience, a Rust course from JetBrains Academy).\n100 exercises to learn Rust – a fantastic course with exercises developed by Luca Palmieri (yet another Rustacean to keep an eye on).\nEleftheria Batsou presented a nice set of simple project ideas for you to work on while learning Rust.\nRust on YouTube\nFor Rustaceans who like learning on YouTube, I recommend following several channels there:\nLet’s Get Rusty – I don’t know how it works, but it’s hard to stop watching these videos.\nJeremy Chone is great at explaining complex concepts.\nChris Biscardi talks about game development in Rust with the Bevy framework, among other things. Creating a game is an excellent project for anyone!\nJon Gjengset – For the first couple of years of your Rust journey, it can be hard to follow his in-depth technical streams, but I recommend watching them early! \nRust community\nThe Rust community on Reddit is worth following.\nRust Community Discord server is the place where you can ask questions as a beginner.\nThis Week in Rust is the most important community resource for reading Rust-related news. I read it every week without exception.\nOf course, many more learning resources are available, but it’s impossible to list all of them. The good news is that you never stop learning Rust because the language is constantly evolving.\nCommon challenges and how to overcome them\nLearning Rust can be challenging. However, you can overcome these difficulties and master the language with the right strategies. Here are some tips to help you along the way:\nUnderstand the ownership model. Rust’s ownership model, which includes concepts like ownership, borrowing, and lifetimes, is often the most challenging aspect for beginners. Start with small examples and practice frequently. Focus on understanding why Rust enforces these rules rather than how to get around compiler errors. \nTake your time with the borrow checker. The borrow checker can be frustrating, as it’s strict and may lead to confusing compiler errors. When you encounter borrow checker issues, take a step back and analyze what Rust is trying to prevent. Experiment with approaches like referencing or cloning data (but try not to clone everything!). Don’t be afraid to ask for help on forums like Reddit or the Rust Community Discord server. It’s really useful to understand what precisely a borrow checker is. See, for example, this great explanation by Nell Shamrell-Harrington.\nLeverage Rust’s excellent documentation. Rust is a relatively new language, so some things might not be as straightforward as in more established languages. Use the Rust documentation, which is known for being comprehensive and well-written. The Rust community also contributes to great resources like the Rust by Example guide.\nStart with simple projects. Rust’s complexity can make even simple projects feel overwhelming at first. Start by implementing basic programs and gradually move to more complex ones. Examples of simple projects include building a command-line tool with clap, writing simple file parsers, or creating a basic web server using a framework like Rocket.\nLearn your code editor or IDE. Writing Rust code manually can be error-prone. Tools can help you with code completion, linting, and formatting.\nParticipate in the Rust community. Learning a new language can feel isolating. Engage with the Rust community by contributing to open-source projects, joining Rust-focused chat rooms, or participating in forums. Rust’s community is known for being very welcoming and helpful to newcomers.\nLearn from mistakes. Rust’s compiler is strict, and it can feel like you’re constantly fighting with it. View each compiler error as a learning opportunity. Rust’s error messages are often very descriptive and guide you toward the correct solution. Over time, you’ll find that these errors help you write better, safer code.\nBe patient. It’s easy to get discouraged with Rust. Remember that Rust is designed to be safe and efficient, which requires you to learn some complex concepts. Take breaks when necessary, and don’t be afraid to revisit topics multiple times until you’re confident that you’ve fully grasped them.\nJoin Rust learning groups. Many developers are learning Rust, and joining a group can provide support and motivation. Look for local meetups or online study groups, or even partner with a friend to learn together.\nMastering Rust takes time, but the payoff is worth it. Rust’s features, like its memory safety guarantees and performance, make it a powerful language for systems programming, web development, and more. Stick with it; you’ll find that Rust can be fun and rewarding.\nBuilding real-world applications with Rust \nLet’s now briefly examine Rust’s suitability for building real-world applications. We’ll focus on several relevant technology domains, as case studies in these areas highlight Rust’s strengths and demonstrate its practical applicability.\nRust in web development\nThe Rust ecosystem is perfectly suitable for backend web development. Many frameworks and libraries perform general web development tasks, such as HTTP request routing, JSON and form handling, templating, database access, authentication and authorization, logging and tracing, etc., with production-ready performance. I recommend looking at the AreWeWebYet? website for details and useful links. As a spoiler, the answer is positive. \n\nMost web frameworks for Rust are easy to start with, and their documentation is awesome, partly thanks to the competition between them. For example, the Actix Web community provides a nice and up-to-date collection of examples. My colleague Khalid Abuhakmeh wrote a tutorial for beginners on building a simple HTML web application that uses Rocket, another web framework for Rust, as a backend. Luca Palmieri, whom I mentioned earlier, authored a book, Zero To Production in Rust, that helps you become a web backend developer, and he also works on Pavex, an emerging and promising web framework. One exciting thing about the latter project is that Luca carefully documents design choices in a series of progress reports. It’s constantly engaging to see why things are designed the way they are and not in some other way. Check out this web framework comparison to understand how actively Rust web frameworks are developing.\nRust is also active on the web frontend, though it may not be 100% ready for production. Still, the overall progress in Rust for WebAssembly and frameworks such as egui or Dioxus is impressive.\nIntegrating Rust with other programming languages\nI wonder if Rust designers envisioned Rust becoming a language of choice for those who develop tooling and libraries for other programming languages, especially Python and JavaScript. Rust can provide better performance, and it’s attractive enough for developers from other language ecosystems to learn and apply. \nThe PyO3 project enables developers to implement native Python modules in Rust and to access Python in Rust binaries. By leveraging PyO3, you can provide an extremely efficient Rust implementation of a Python library for Python developers. Rust and JavaScript can be connected similarly via WebAssembly and wasm-bindgen. \nAstral and its founder, Charlie Marsh, prove that it’s possible to develop Python tooling that works at the speed of light (well, we all know that that’s a marketing claim, of course, but the result is truly fascinating). \n\n\n\n\nDeno, a JavaScript runtime developed in Rust, delivers very good performance. This is not the only example from the JavaScript ecosystem. There’s even a curated collection of JavaScript tooling implemented in Rust. \nImplementing interoperability between Rust and other programming languages is also possible.\nSystems and embedded programming in Rust\nUndoubtedly, Rust shines in systems programming. Speakers from Google and Microsoft confirm that introducing Rust into their codebases lessens the number of security vulnerabilities, increases performance, and also keeps or sometimes improves the productivity of software developer teams. Amazon not only supports Rust development on AWS but also uses it directly to implement their own infrastructure. Cloudflare, a company that builds content delivery networks and other networking infrastructure, relies on Rust in a lot of low-level projects and contributes their frameworks to the Rust ecosystem. Ferrous Systems, a company that backs the development of rust-analyzer, also develops Ferrocene, a certified Rust toolchain for mission-critical applications. Together with other developments, this enables Rust to be used in the automotive and aerospace industries. For example, there are reports about Volvo and Renault using Rust for their in-vehicle software.\nConclusion and next steps\nIt’s a great time to start your Rust journey. Rust is a good industrial-level language with a wealth of learning materials and a beginner-friendly community. While there are some challenges, given the unique core concepts, there are also ways to overcome them. Once you are there, the job market and various application domains are open. \nI hope that the learning path and resources I’ve presented will help you on your way. I can only recommend setting a learning goal beforehand: find an open-source project you want to contribute to or develop an idea for your project early. You’ll be amazed how quickly you can get close to fulfilling that goal.\nBe encouraged and stay on the path of learning Rust!",
        "dc:creator": "Vitaly Bragilevsky",
        "content": "So, you&#8217;re thinking about choosing Rust as your next programming language to learn. You already know what it means to write code and have some experience with at least one programming language, probably Python or JavaScript. You’ve heard about Rust here and there. People say it’s a modern systems programming language that brings safety and [&#8230;]",
        "contentSnippet": "So, you’re thinking about choosing Rust as your next programming language to learn. You already know what it means to write code and have some experience with at least one programming language, probably Python or JavaScript. You’ve heard about Rust here and there. People say it’s a modern systems programming language that brings safety and […]",
        "guid": "https://blog.jetbrains.com/?post_type=rust&p=511126",
        "categories": [
          "guide",
          "learn",
          "rust"
        ],
        "isoDate": "2024-09-20T11:14:38.000Z"
      },
      {
        "creator": "Alexander Kurakin",
        "title": "ReSharper 2024.3 Starts its Early Access Program! ",
        "link": "https://blog.jetbrains.com/dotnet/2024/09/20/resharper-2024-3-eap/",
        "pubDate": "Fri, 20 Sep 2024 04:58:26 +0000",
        "content:encodedSnippet": "Say hello to the first build of ReSharper 2024.3 Early Access Program! This build is mostly about improving C++ support, but it still has something new for C# developers as well. Let’s have a look!\nReSharper \nCode Cleanup\nNow you can substitute a default Code Cleanup profile with another one for particular files via .editorconfig files as well as specify files you want to omit from code cleanup. (RSRP-493872).\n[fullToReformat.cs]\r\nresharper_substitution_for_cleanup_profile.icanwriteanythinghere=Built-in: Full Cleanup => Built-in: Reformat Code\r\n\r\n[anyToReformat.cs]\r\nresharper_substitution_for_cleanup_profile=* => Built-in: Reformat Code\r\n\r\n[fullToSkip.cs]\r\nresharper_substitution_for_cleanup_profile=Built-in: Full Cleanup => skip\r\n\r\n[anyToSkip.cs]\r\nresharper_substitution_for_cleanup_profile=* => Skip\nCopy to clipboard\n\n            \nNaming Styles \nWe’ve added a couple of new options to adjust naming rules more precisely. \nLocal functions now have Local functions with ‘async’ and Task-returning local functions (not ‘async’) options to choose from (RSRP-493613). \nMethods got a new Task-returning method (not ‘async’) option to support methods with an Async suffix in the name that aren’t marked with an async modifier but return a Task-like type (RSRP-482529). This is helpful when you declare a method in an interface where you aren’t allowed to use an async modifier, but which will return a Task type in implementation.\n\n\n\n\nAnother new option is Warn about using prefixes and suffixes from this rule in unrelated identifiers (RSRP-485170). In previous versions, if you specified an Async suffix in a Methods rule, and if no Properties rule had this as a suffix, ReSharper would complain about a property with an Async in the name. In other words, ReSharper prohibited you from using this suffix in entities other than methods. Starting from the 2024.3 EAP, you can disable this option in the Methods rule, and ReSharper stops complaining about property names with these kinds of suffixes.\nFormatting\nThere are new formatting options to give you even more flexibility:\nA new option to control wrapping around an equal = operator (RSRP-491099).\nA new option Indent ‘break’ from ‘case‘ (RSRP-478502).\nA new option Treat ‘case’ statements with ‘break’ as simple (RSRP-469180).\n\n\n\n\nReSharper C++\nThe first EAP build brings several notable updates to C++ support.\n\n\n\n\n\nThe Move to Folder refactoring now also handles C++ files.\nSupport for literal suffix for size_t and attributes on lambda expressions from C++23, the C23 typeof and typeof_unqual operators, and the C++17 std::has_unique_object_representations type trait.\nA number of improvements for users of the C++20 ranges library.\nSupport for // clang-format off/on comments to disable or enable code formatting.\nTyping assist to automatically insert a space between control flow keywords and the opening parenthesis.\nBuilt-in live templates to generate UE_LOG and UE_LOGFMT logging statements.\nAn option to use XML documentation instead of Doxygen.\n\n\n\n\nFor more details on the ReSharper C++ updates, see the dedicated blog post.\nDownload ReSharper 2024.3 EAP\n                                                    \nThat’s it for today! You can find the full list of features and fixes on YouTrack.",
        "dc:creator": "Alexander Kurakin",
        "content": "Say hello to the first build of ReSharper 2024.3 Early Access Program! This build is mostly about improving C++ support, but it still has something new for C# developers as well. Let’s have a look! ReSharper&#160; Code Cleanup Now you can substitute a default Code Cleanup profile with another one for particular files via .editorconfig [&#8230;]",
        "contentSnippet": "Say hello to the first build of ReSharper 2024.3 Early Access Program! This build is mostly about improving C++ support, but it still has something new for C# developers as well. Let’s have a look! ReSharper  Code Cleanup Now you can substitute a default Code Cleanup profile with another one for particular files via .editorconfig […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=511537",
        "categories": [
          "net-tools",
          "eap",
          "cpp",
          "code-cleanup",
          "code-formatting",
          "naming"
        ],
        "isoDate": "2024-09-20T04:58:26.000Z"
      },
      {
        "creator": "Igor Akhmetov",
        "title": "ReSharper C++ 2024.3 Starts its Early Access Program! ",
        "link": "https://blog.jetbrains.com/rscpp/2024/09/20/resharper-cpp-2024-3-eap/",
        "pubDate": "Fri, 20 Sep 2024 04:58:26 +0000",
        "content:encodedSnippet": "The Early Access Program for ReSharper C++ 2024.3 has just begun!\nMove to Folder\nThe Move to Folder refactoring now also handles C++ files (RSCPP-17126). After moving selected files to the new location, the refactoring will update the #include directives that reference the moved files.\n\n\n\n\nLanguage support\nReSharper now supports the following new language features:\nLiteral suffix for size_t (RSCPP-34208) and attributes on lambda expressions (RSCPP-33589) from C++23.\n\n\n\n\n\nThe C23 typeof and typeof_unqual operators.\nThe C++17 std::has_unique_object_representations type trait (RSCPP-21213).\nWe’ve also improved compatibility with C++ toolchains other than MSVC, adding support for additional compiler builtins (RSCPP-35949), GNU switch case ranges (RSCPP-32242), and named variadic macro parameters (RSCPP-32244).\nRanges\nReSharper 2024.3 contains a number of improvements for users of the C++20 ranges library. Among other changes, there are new context actions to convert range adaptor usages between pipe and call forms (RSCPP-31950) and more readable overloading errors for range adaptors using the pipe form (RSCPP-31951).\n\n                        \n\n\nCode formatter and typing assists\nIn addition to the // @formatter:off/on comments, the code formatter can now be also disabled and enabled with the // clang-format off/on comments for improved interoperability with clang-format (RSCPP-31142).\n\n                        \n\n\n\nTyping assist automatically inserts a space between control flow keywords (for/if/while/switch/catch) and the opening parenthesis if the corresponding formatter option is enabled (RSCPP-36073).\nA new formatter setting controls line breaks between a declaration and a function try block (RSCPP-36065).\nXML documentation comments\nWhen using the builtin documentation comment template, you can now customize the template to use XML documentation instead of Doxygen with a new code generation setting (RSCPP-35911). Furthermore, ReSharper C++ now recognizes XML documentation inside /**...*/ comments in addition to ///... comments (RSCPP-21171).\n\n                        \n\n\nUnreal Engine support \nReSharper 2024.3 provides built-in live templates to generate UE_LOG and UE_LOGFMT logging statements in Unreal Engine solutions (RSCPP-33572). These live templates let you quickly choose the desired log category and the verbosity level from a list of available values. As usual, you can further customize these templates in Templates Explorer.\n\n                        \n\n\nGenerate code\nPreviously, when generating an overriding function with Generate or generative completion, ReSharper C++ omitted default function arguments. The main reason for this was to avoid situations where default arguments differ between a base function and an overrider (see the C.140 C++ core guideline for more details).\nHowever, in some codebases with deep object hierarchies like Unreal Engine, the convention is to duplicate default arguments in overriding functions. The new Keep default arguments when generating an overriding function setting in code generation settings lets you control whether you prefer to preserve default arguments (RSCPP-36063).\n\n                        \n\n\nCode Analysis\nWe’ve updated the Can be replaced with structured bindings inspection to be less noisy. ReSharper C++ 2024.3 does not show this inspection for cases when the replacement would have more than two structured bindings and not all of them would be used. If you still want to replace a declaration with structured bindings, you can use the corresponding Convert to structured bindings context action (RSCPP-35509).\n\n                        \n\n    \nDownload the EAP build\n                                                    \nThat’s it for the first installment of the Early Access Program for ReSharper C++ 2024.3! For the full list of changes introduced in this build, please refer to our issue tracker.",
        "dc:creator": "Igor Akhmetov",
        "content": "The Early Access Program for ReSharper C++ 2024.3 has just begun! Move to Folder The Move to Folder refactoring now also handles C++ files (RSCPP-17126). After moving selected files to the new location, the refactoring will update the #include directives that reference the moved files. Language support ReSharper now supports the following new language features: [&#8230;]",
        "contentSnippet": "The Early Access Program for ReSharper C++ 2024.3 has just begun! Move to Folder The Move to Folder refactoring now also handles C++ files (RSCPP-17126). After moving selected files to the new location, the refactoring will update the #include directives that reference the moved files. Language support ReSharper now supports the following new language features: […]",
        "guid": "https://blog.jetbrains.com/?post_type=rscpp&p=511529",
        "categories": [
          "cpp",
          "clang",
          "ranges",
          "refactorings",
          "unreal-engine"
        ],
        "isoDate": "2024-09-20T04:58:26.000Z"
      },
      {
        "creator": "Alexander Kurakin",
        "title": "Rider 2024.3 Early Access Program Is Here! ",
        "link": "https://blog.jetbrains.com/dotnet/2024/09/20/rider-2024-3-eap/",
        "pubDate": "Fri, 20 Sep 2024 04:58:15 +0000",
        "content:encodedSnippet": "Let’s start the last Early Access Program for JetBrains Rider this year! Rider 2024.3 EAP brings the following updates:\nSupport for hot reloading C++ with Live++\n\n\n\n\nWe’ve been working with the folks at Live++ to bring seamless C++ hot reloading support to Rider! \nThere’s no new UI, but the user experience will be a lot smoother. Rider will automatically refresh the debugger when your application is updated by Hot-Reload, and if there are any compilation errors, double-clicking the error message in the Live++ output will open the file in Rider. If you are debugging your application when you invoke Hot-Restart, Rider will automatically reattach the debugger to the new process afterward. \nFinally, the Hot-Deoptimize global shortcut key will automatically toggle the optimization state of the compiland relating to the file that’s currently open in Rider, meaning you no longer have to switch to the Live++ UI and find the file first. Please see this website for more details on Live++ features and availability. \nWe’ll have more details in a blog post shortly.\nOther features and improvements\nCode cleanup\nNow you can substitute a default Code Cleanup profile with another one for particular files via .editorconfig files as well as specify files you want to omit from code cleanup.\n[fullToReformat.cs]\r\nresharper_substitution_for_cleanup_profile.icanwriteanythinghere=Built-in: Full Cleanup => Built-in: Reformat Code\r\n\r\n[anyToReformat.cs]\r\nresharper_substitution_for_cleanup_profile=* => Built-in: Reformat Code\r\n\r\n[fullToSkip.cs]\r\nresharper_substitution_for_cleanup_profile=Built-in: Full Cleanup => skip\r\n\r\n[anyToSkip.cs]\r\nresharper_substitution_for_cleanup_profile=* => Skip\nCopy to clipboard\n\n            \nNaming styles \nWe’ve added a couple of new options to adjust naming rules more precisely. \nLocal functions now have Local functions with ‘async’ and Task-returning local functions (not ‘async’) options to choose from. \nMethods got a new Task-returning method (not ‘async’) option to support methods with an Async suffix in the name that aren’t marked with an async modifier but return a Task-like type. This is helpful when you declare a method in an interface where you aren’t allowed to use an async modifier, but which will return a Task type in implementation.\n\n\n\n\nAnother new option is Warn about using prefixes and suffixes from this rule in unrelated identifiers. In previous versions, if you specified an Async suffix in a Methods rule, and if no Properties rule had this as a suffix, Rider would complain about a property with an Async in the name. In other words, Rider prohibited you from using this suffix in entities other than methods. Starting from the 2024.3 EAP, you can disable this option in the Methods rule, and Rider stops complaining about property names with these kinds of suffixes.\nC# formatting\nThere are new formatting options to give you even more flexibility:\nA new option to control wrapping around an equal = operator (RSRP-491099).\nA new option Indent ‘break’ from ‘case‘ (RSRP-478502).\nA new option Treat ‘case’ statements with ‘break’ as simple (RSRP-469180).\nUnreal Engine support \nRider 2024.3 EAP provides built-in live templates to generate UE_LOG and UE_LOGFMT logging statements in Unreal Engine solutions. These live templates let you quickly choose the desired log category and the verbosity level from a list of available values. You can further customize these templates in Templates Explorer.\nDownload Rider 2024.3 EAP\n                                                    \nThat’s it for the first installment of the Early Access Program for Rider 2024.3! For the full list of changes introduced in this build, please refer to our issue tracker.",
        "dc:creator": "Alexander Kurakin",
        "content": "Let’s start the last Early Access Program for JetBrains Rider this year! Rider 2024.3 EAP brings the following updates: Support for hot reloading C++ with Live++ We&#8217;ve been working with the folks at Live++ to bring seamless C++ hot reloading support to Rider!&#160; There&#8217;s no new UI, but the user experience will be a lot [&#8230;]",
        "contentSnippet": "Let’s start the last Early Access Program for JetBrains Rider this year! Rider 2024.3 EAP brings the following updates: Support for hot reloading C++ with Live++ We’ve been working with the folks at Live++ to bring seamless C++ hot reloading support to Rider!  There’s no new UI, but the user experience will be a lot […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=511584",
        "categories": [
          "net-tools",
          "eap",
          "rider",
          "cpp",
          "code-cleanup",
          "code-formatting",
          "early-access-program",
          "gamedev",
          "unreal-engine"
        ],
        "isoDate": "2024-09-20T04:58:15.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2024.3 EAP 2: Enhanced HotSwap in the Debugger, Faster Compilation in Multi-Module Projects, and More",
        "link": "https://blog.jetbrains.com/idea/2024/09/intellij-idea-2024-3-eap-2/",
        "pubDate": "Thu, 19 Sep 2024 15:52:06 +0000",
        "content:encodedSnippet": "The IntelliJ IDEA 2024.3 EAP 2 build is now available! \nYou can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu.\nDownload IntelliJ IDEA 2024.3 EAP 2\nDiscover the newly introduced features below! \nDebugger\nEnhanced HotSwap feature\nIn the latest IntelliJ IDEA 2024.3 EAP build, we’ve enhanced the HotSwap feature, making it easier and more intuitive to use. The HotSwap mechanism allows you to reload modified classes during a debugging session without restarting the application. Now, when you edit code with an active debugger session, IntelliJ IDEA automatically detects the changes and prompts you to reload them via a convenient button in the editor.\nThis streamlines the development process by enabling real-time code updates. Keep in mind that HotSwap has some limitations, particularly with structural changes. Learn more about those here.\n\n\n\n\nBuild tools\nCompilation speedup in multi-module projects\nIn previous versions of IntelliJ IDEA, project modules were compiled one at a time, which wasn’t the fastest approach for large projects. While parallel compilation has been an option for some time, it wasn’t the default because of concerns about high CPU and memory usage.\nWith more people using modern, more capable hardware, we’ve decided to make parallel compilation the default in IntelliJ IDEA 2024.3. This means faster compilation times for all Maven-based projects compiled by the IDE. The IDE will make sure not to consume too many resources, thanks to the automatic mode.\n\n\n\n\nSeamless handling of untrusted SSL certificates\nStarting with IntelliJ IDEA 2024.3 EAP 2, the IDE automatically detects SSL-related issues during Maven syncs or builds. If an untrusted certificate is the cause, IntelliJ IDEA will offer to resolve it by trusting the certificate – no manual steps required.\nThis update eliminates the guesswork of combing through logs to find cryptic SSL errors and removes the need for tedious manual certificate management in the JDK’s trusted store.\n\n\n\n\n\nKotlin\nK2 mode stability improvements\nK2 mode is moving closer to stability with the latest improvements in this EAP build. We’ve addressed several memory and stability issues, thanks to your valuable feedback.\nCheck out K2 mode and let us know how it works for you! Share your experience on our public Slack channel or via YouTrack to help us ensure K2 mode launches at its best!\nThese are this EAP’s most notable updates. For the full list of implemented changes, review the release notes. \nWe appreciate your participation in our Early Access Program and look forward to getting your feedback on the newly added features. Let us know what you think in the comments below or on X. If you spot a bug, please report it via our issue tracker. \nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "The IntelliJ IDEA 2024.3 EAP 2 build is now available!&#160; You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. Download IntelliJ IDEA 2024.3 EAP 2 Discover the newly introduced features below!&#160; Debugger Enhanced HotSwap feature In the [&#8230;]",
        "contentSnippet": "The IntelliJ IDEA 2024.3 EAP 2 build is now available!  You can download this version from our website, update directly from within the IDE, use the free Toolbox App, or install it via snap packages for Ubuntu. Download IntelliJ IDEA 2024.3 EAP 2 Discover the newly introduced features below!  Debugger Enhanced HotSwap feature In the […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=510916",
        "categories": [
          "eap",
          "2024-3",
          "2024-3-eap",
          "intellij-idea",
          "intellij-idea-2024-3",
          "intellij-idea-2024-3-eap"
        ],
        "isoDate": "2024-09-19T15:52:06.000Z"
      },
      {
        "creator": "Sasha Maximova",
        "title": "New in Writerside: The Good Docs Project Templates Right in Your Editor",
        "link": "https://blog.jetbrains.com/writerside/2024/09/new-in-writerside-the-good-docs-project-templates-right-in-your-editor/",
        "pubDate": "Thu, 19 Sep 2024 13:30:51 +0000",
        "content:encodedSnippet": "“I hate to write, but I love having written,” a famous saying goes. Don’t we all – especially those of us who write functional texts, like technical documentation? We often have too little time to even convey the basic idea, let alone categorize and structure the information – whether it’s a how-to guide, a reference, or a quickstart tutorial.\nThat’s why Writerside now includes a rich library of open-source documentation templates from The Good Docs Project. From “API Reference” to “Release Notes”, templates are just one click away.\nDownload Writerside\n                                                    \nDocumentation templates: when and why\nAs much fun as it may be to picture ourselves as writers with a quill and blank paper, our work environment rarely allows for this in reality. Usually, we are stressed, rushed, and looking for shortcuts. Templates can be a game-changer in this context. \nFor small teams with just one writer (or none at all), templates offer significant advantages:\nSpeed up the process: Fill in the blanks and publish.\nFacilitate contributions: Teammates can easily fill in details in a pre-formatted structure.\nFor mid-sized and larger teams, templates provide additional practical benefits:\nMaintain consistency across all documentation.\nReduce the need for micro-management by replacing it with standardization.\n\n\n\n\nThat is all good and well. But where do you find effective documentation templates?\nEnter The Good Docs Project\nThe Good Docs Project is a global community committed to improving the quality of software documentation, both in the open-source world and beyond. Technical writers, software engineers, and UX specialists from all over the world have been collaborating to create the first open, best-practices suite of writing templates.\nThis is where Writerside finds its perfect match. While our tool initially offered a basic set of documentation templates, we’re now adding the full library from The Good Docs Project. These templates cover all types of documentation and come with instructions on how to use them, making it easier to quickly craft any type of doc with Writerside. \nHow to use documentation templates in Writerside\nThe Good Docs Project’s templates are written in Markdown, making it easy to adapt them for any project. They are also completely free and open to everyone, encouraging collaboration and accessibility.\nAnd starting with the EAP 8 release, they are all available in Writerside. \nYou don’t need to be a documentation expert to use them. Open the template library, browse through the list, preview the templates, and add them to your project with the click of a button:\n\n\n\n\nAnd of course, you can also create unique templates for your project. Such custom templates can be brand new, based on an existing content file, or adapted from one of the built-in templates provided in Writerside.\nHelp us improve\nIn collaboration with The Good Docs Project, Writerside is on a mission to help everyone create better docs. We’d love to hear your thoughts:\nFeedback on the templates: There’s a feedback link at the end of each template. Please use it to share how you used the template, what worked well, and what could be improved.\nYour Writerside experience: Did everything work as expected? Was it easy to find and use the templates? Let us know!\n\n\n\n    \nSee the full list of new features\n                                                                👉 Download Writerside 👈\n                                    \nHave ideas or suggestions? Bring them to our Slack community! 🤓",
        "dc:creator": "Sasha Maximova",
        "content": "“I hate to write, but I love having written,” a famous saying goes. Don’t we all – especially those of us who write functional texts, like technical documentation? We often have too little time to even convey the basic idea, let alone categorize and structure the information – whether it’s a how-to guide, a reference, [&#8230;]",
        "contentSnippet": "“I hate to write, but I love having written,” a famous saying goes. Don’t we all – especially those of us who write functional texts, like technical documentation? We often have too little time to even convey the basic idea, let alone categorize and structure the information – whether it’s a how-to guide, a reference, […]",
        "guid": "https://blog.jetbrains.com/?post_type=writerside&p=511794",
        "categories": [
          "documentation",
          "eap",
          "news"
        ],
        "isoDate": "2024-09-19T13:30:51.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "A New Approach to Build Runners | TeamCity Pipelines Pulse, Issue #7",
        "link": "https://blog.jetbrains.com/teamcity/2024/09/teamcity-pipelines-pulse-issue7-build-runners/",
        "pubDate": "Thu, 19 Sep 2024 11:58:22 +0000",
        "content:encodedSnippet": "In TeamCity Pipelines, build runners tell the system how to build, test, and package your code.\nFor this latest release, we’ve revamped how build runners work. Here’s what’s new:\nNew design for creating a build step\nWith this most recent release of TeamCity Pipelines, we’ve made creating build steps even more straightforward. You can now find, select, and configure the runners you need for a given build quickly and easily.\nLet’s hear from TeamCity Pipelines Product Designer Tanya Konvaliuk about why and exactly how we decided to make these changes.\n“The old setup for creating job steps worked fine for simple tasks, but it became too limited when we needed more complex runners. It couldn’t handle extra runners or customization well.\n\r\n\r\nTo fix this, we’ve introduced a new, more flexible design. It’s scalable, making it easy to add more runners and settings in the future.”\n\n            \nTanya Konvaliuk\n                                                                TeamCity Pipelines Product Designer\n                                    \n\n\n\n\nKey updates include\nMore flexibility: You can now easily add and customize different runners.\n\n\n\n\nMore intuitive step management: Steps can be edited and reordered by dragging and dropping them.\n\n\n\n\nClearer interface: You can easily see which runner is used for each step.\n\n\n\n\nWe’re also planning to add more runners and make CLI scripts more interactive. Let us know your thoughts as we continue to improve the process!\nGive TeamCity Pipelines a try\nBug fixes and improvements\nWe’ve fixed some bugs and made several improvements for a better user experience with TeamCity Pipelines.\nWe’ve resolved the issue so that TeamCity Pipelines now accurately reflects when no artifacts are produced by jobs.\nWe’ve updated the system so that users remain on the pipeline settings page after renaming a pipeline.\nNow, even longer job names fit in the container on the pipeline overview page.\nDid you know?\nIn TeamCity Pipelines, you can make use of Linux, Windows, and per-minute macOS agents hosted by JetBrains. You can also install self-hosted agents.\n\n\n\n\nYou might choose self-hosted agents to have more control over the environment, meet specific hardware or software requirements, or optimize costs by using your own resources.\nThat’s it for now! \nYours truly,\nThe TeamCity Pipelines team",
        "dc:creator": "Olga Bedrina",
        "content": "In TeamCity Pipelines, build runners tell the system how to build, test, and package your code. For this latest release, we’ve revamped how build runners work. Here’s what’s new: New design for creating a build step With this most recent release of TeamCity Pipelines, we&#8217;ve made creating build steps even more straightforward. You can now [&#8230;]",
        "contentSnippet": "In TeamCity Pipelines, build runners tell the system how to build, test, and package your code. For this latest release, we’ve revamped how build runners work. Here’s what’s new: New design for creating a build step With this most recent release of TeamCity Pipelines, we’ve made creating build steps even more straightforward. You can now […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=512038",
        "categories": [
          "news",
          "release",
          "teamcity-pipelines-pulse"
        ],
        "isoDate": "2024-09-19T11:58:22.000Z"
      },
      {
        "creator": "Evgenia Verbina",
        "title": "How to Use FastAPI for Machine Learning",
        "link": "https://blog.jetbrains.com/pycharm/2024/09/how-to-use-fastapi-for-machine-learning/",
        "pubDate": "Thu, 19 Sep 2024 08:59:08 +0000",
        "content:encodedSnippet": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas, Polars, and Jupyter Notebook.\n\n\n\n\nFastAPI provides a quick way to build a backend service with Python. With a few decorators, you can turn your Python function into an API application. \nIt is widely used by many companies including Microsoft, Uber, and Netflix. According to the Python Developers Survey, FastAPI usage has grown from 21% in 2021 to 29% in 2023. For data scientists, it’s the second most popular framework, with 31% using it. \nIn this blog post, we will cover the basics of FastAPI for data scientists who may want to build a quick prototype for their project. \nWhat is FastAPI?\nFastAPI is a popular web framework for building APIs with Python, based on standard Python type hints. It is intuitive and easy to use, and it can provide a production-ready application in a short period of time. It is fully compatible with OpenAPI and JSON Schema.\nWhy use FastAPI for machine learning?\nMost teams working on machine learning projects consist of data scientists whose domains and professions lie on the statistics side of things. They may not have experience developing software or applications to ship their machine learning projects. FastAPI enables data scientists to easily create APIs for the following projects:\nDeploying prediction models\nThe data science team may have trained a model for the prediction of the sales demand in a warehouse. To make it useful, they have to provide an API interface so other parts of the stock management system can use this new prediction functionality.\nSuggestion engines\nOne of the very common uses of machine learning is as a system that provides suggestions based on the users’ choices. For example, if someone puts certain products in their shopping cart, more items can be suggested to that user. Such an e-commerce system requires an API call to the suggestion engine that takes input parameters.\nDynamic dashboards and reporting systems\nSometimes, reports for data science projects need to be presented as dashboards so users can inspect the results themselves. One possible approach is to have the data model provide an API. Frontend developers can use this API to create applications that allow users to interact with the data.\nAdvantages of using FastAPI\nCompared to other Python web frameworks, FastAPI is simple yet fully functional. Mainly using decorators and type hints, it allows you to build a web application without the complexity of building a whole ORM (object-relational mapping) model and with the flexibility of using any database, including any SQL and NoSQL databases. FastAPI also provides automatic documentation generation, support for additional information and validation for query parameters, and good async support.\nFast development\nCreating API calls in FastAPI is as easy as adding decorators in the Python code. Little to no backend experience is needed for anyone who wants to turn a Python function into an application that will respond to API calls.\nFast documentation\nFastAPI provides automatic interactive API documentation using Swagger UI, which is an industry standard. No extra effort is required to build clear documentation with API call examples. This creates an advantage for busy data science teams who may not have the energy and expertise to write technical specifications and documentation.\nEasy testing\nWriting tests is one of the most important steps in software development, but it can also be one of the most tedious, especially when the time of the data science team is valuable. Testing FastAPI is made simple thanks to Starlette and HTTPX. Most of the time no monkey patching is needed and tests are easy to write and understand.\nFast deployment\nFastAPI comes with a CLI tool that can bridge development and deployment smoothly. It allows you to switch between development mode and production mode easily. Once development is completed, the code can be easily deployed using a Docker container with images that have Python prebuilt.\nHow to use FastAPI for a machine learning project\nIn this example, we will turn a classification prediction model that uses the Nearest Neighbors algorithm to predict the species of various penguins based on their bill and flipper length into a backend application. We will provide an API that takes parameters from the query parameters of a URL and gives back the prediction. This shows how a prototype can be made quickly by any data scientist with no backend development experience.\nWe will use a simple `KNeighborsClassifier` on the penguin data set as an example. Details of how to build the model will be omitted, but feel free to check out the relevant notebook here. In the following tutorial, we will focus on the usage of FastAPI and explain some fundamental concepts. We will be building a prototype to do so. \n1. Start a FastAPI project with PyCharm\n\nIn this blog post, we will be using PyCharm Professional 2024.1. The best way to start using FastAPI is to create a FastAPI project with PyCharm. When you click New Project in PyCharm, you will be presented with a large selection of projects to choose from. Select the FastAPI tab:\n\nFrom here, you can put in the name of your project and take advantage of other options such as initializing Git and the virtual environment that you want to use.\nAfter doing so, you will see the basic structure of a FastAPI project set up for you.\n\nThere is also a `test_main.http` file set up for you to quickly test all the endpoints.\n\n\n\n\n\n2. Set up environment dependencies\nNext, set up our environment dependency with `requirements.txt` by selecting ​​Sync Python Requirements under PyCarm’s Tool menu.\n\nThen you can select the `requirements.txt` file to be used.\n\nYou can copy and use this `requirements.txt` file. We will be using pandas and scikit-learn for the machine learning part of the project. Also, add the `penguins.csv` file to your project directory.\n3. Set up your machine learning model\nArrange your machine learning code in the `main.py` file. We will start with a script that trains our model:\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\n\ndata = pd.read_csv('penguins.csv')\ndata = data.dropna()\n\nle = preprocessing.LabelEncoder()\nX = data[[\"bill_length_mm\", \"flipper_length_mm\"]]\nle.fit(data[\"species\"])\ny = le.transform(data[\"species\"])\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)\nclf = Pipeline(\n    steps=[(\"scaler\", StandardScaler()), (\"knn\", KNeighborsClassifier(n_neighbors=11))]\n)\nclf.set_params().fit(X_train, y_train)\nWe can place the above code after `app = FastAPI()`. All of it will be run when we start the application.\n\nHowever, there is a better way to run the start-up code we used to set up our model. We will cover that in a later part of the blog post.\n4. Request a response\nNext we will look at how to add our model to FastAPI functionality. As a first step, we will add a response to the root of the URL and just simply return a message about our model in JSON format. Change the code in `async def root():` from “Hello world” to our message like this:\n@app.get(\"/\")\nasync def root():\n    return {\n        \"Name\": \"Penguins Prediction\",\n        \"description\": \"This is a penguins prediction model based on the bill length and flipper length of the bird.\",\n    }\nNow, test our application. First, we will start our application, which is easy in PyCharm. Just press the arrow button () next to your project name at the top.\n\nIf you are using the default settings, your application will run on http://127.0.0.1:8000. You can double-check that by looking at the prompt from the Run window.\n\nOnce the process has started, let’s go to `test_main.http` and press the first arrow button () next to `GET`. From the HTTP Client in the Services window, you will see the response message that we put in.\n\nThe response JSON file is also saved for future inspection.\n5. Request with query parameters\nNext, we would like to let users make predictions by providing query parameters in the URL. Let’s add the code below after the `root` function.\n@app.get(\"/predict/\")\nasync def predict(bill_length_mm: float = 0.0, flipper_length_mm: float = 0.0):\n    param = {\n                \"bill_length_mm\": bill_length_mm,\n                \"flipper_length_mm\": flipper_length_mm\n            }\n    if bill_length_mm <=0.0 or flipper_length_mm <=0.0:\n        return {\n            \"parameters\": param,\n            \"error message\": \"Invalid input values\",\n        }\n    else:\n        result = clf.predict([[bill_length_mm, flipper_length_mm]])\n        return {\n            \"parameters\": param,\n            \"result\": le.inverse_transform(result)[0],\n        }\nHere we set the default value of the `bill_length_mm` and `flipper_length_mm` to be 0 if the user didn’t input a value. We also add a check to see if either of the values is 0 and return an error message instead of trying to predict which penguin the input refers to.\nIf the inputs are not 0, we will use the model to make a prediction and use the encoder to do an inverse transformation to get the label of the predicted target, i.e. the name of the penguin species.\nThis is not the only way you can verify inputs. You can also consider using Pydantic for input verification.\nIf you are using the same version of FastAPI as stated in `requirements.txt`, FastAPI automatically refreshes the service and applies changes on save. Now put in a new URL in `test_main.http` to test (separated from the URL before with ###):\n###\n\nGET http://127.0.0.1:8000/predict/?bill_length_mm=40.3&flipper_length_mm=195\nAccept: application/json\nPress the arrow button () next to our new URL and see the output.\n\nNext you can try a URL with one or both of the parameters removed to see the error message:\n###\n\nGET http://127.0.0.1:8000/predict/?bill_length_mm=40.3\nAccept: application/json\n\n6. Set up a machine learning model with lifespan events\nLast, let’s look at how we can set up our model with FastAPI lifespan events. The advantage of doing that is we can make sure no request will be accepted while the model is still being set up and the memory used will be cleaned up afterward. To do that, we will use an `asynccontextmanager`. Before `app = FastAPI()` we will add:\nfrom contextlib import asynccontextmanager\n\nml_models = {}\n\n@asynccontextmanager\nasync def lifespan(app: FastAPI):\n    # Set up the ML model here\n    \n    yield\n    # Clean up the models and release resources\n\n\n    ml_models.clear()\nNow we will move the import of pandas and scikit-learn to be alongside the other imports. We will also move our setup code inside the `lifespan` function, setting the machine learning model and LabelEncoder inside `ml_models` like this:\nfrom fastapi import FastAPI\nfrom contextlib import asynccontextmanager\n\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split\nfrom sklearn import preprocessing\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\n\nml_models = {}\n\n@asynccontextmanager\nasync def lifespan(app: FastAPI):\n    # Set up the ML model here\n\n    data = pd.read_csv('penguins.csv')\n    data = data.dropna()\n\n    le = preprocessing.LabelEncoder()\n    X = data[[\"bill_length_mm\", \"flipper_length_mm\"]]\n    le.fit(data[\"species\"])\n    y = le.transform(data[\"species\"])\n    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)\n    clf = Pipeline(\n        steps=[(\"scaler\", StandardScaler()), (\"knn\", KNeighborsClassifier(n_neighbors=11))]\n    )\n    clf.set_params().fit(X_train, y_train)\n\n    ml_models[\"clf\"] = clf\n    ml_models[\"le\"] = le\n\n    yield\n    # Clean up the models and release resources\n\n    ml_models.clear()\nAfter that we will add the `lifespan=lifespan` parameter in `app = FastAPI()`:\napp = FastAPI(lifespan=lifespan)\nNow save and test again. Everything should work and we should see the same result as before.\nAfterthought: When to train the model?\nFrom our example, you may wonder when the model is trained. Since `clf` is trained at the beginning, i.e. when the service is launched, you may wonder why we do not train the model every time someone makes a prediction.\nWe do not want the model to be trained every time someone makes a call, because it costs way more resources to re-train everything. Additionally, it may cause race conditions since our FastAPI application is working concurrently. This is especially the case if we use live data that changes all the time.\nTechnically, we can set up an API to collect data and re-train the model (which we will demonstrate in the next example). Other options would be to schedule a re-train at a certain time when a certain amount of new data has been collected or to let a super user upload new data and trigger the re-training.\nSo far, we are aiming to build a prototype that runs locally. Check out this article on deploying a FastAPI project on a cloud service for more information.\nWhat is concurrency?\nTo put it simply, concurrency is like when you are cooking in the kitchen, and while waiting for the water to boil, you go ahead and chop the vegetables. Since, in the web service world, the server is talking to many terminals, and the communication between the server and the terminals is slower than most internal applications, so the server will not talk to and serve the terminals one by one. Instead, it will talk to and serve many of them at the same time while fulfilling their requests. You may want to check out this explanation in the FastAPI documentation.\nIn Python, this is achieved by using async code. In our FastAPI code, the use of `async def` instead of `def` is obvious evidence that FastAPI is working concurrently. There are other keywords used in Python async code, like `await` and `asyncio.get_event_loop`, but we won’t be able to cover them in this blog post. \nHow to use FastAPI for an image classification project\nTo discover more FastAPI functionality, we will add an image classification model based on the MNIST example in Keras to our application as well (we are using the TensorFlow backend). If you installed the `requirements.txt` provided, you should have Keras and Pillow installed for image processing and building a convolutional neural network (CNN).\n1. Refactoring\nBefore we start, let’s refactor our code. To make the code more organized, we will put the model setup for the penguins prediction in a function:\ndef penguins_pipeline():\n    data = pd.read_csv('penguins.csv')\n    data = data.dropna()\n\n    le = preprocessing.LabelEncoder()\n    X = data[[\"bill_length_mm\", \"flipper_length_mm\"]]\n    le.fit(data[\"species\"])\n    y = le.transform(data[\"species\"])\n    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=0)\n    clf = Pipeline(\n        steps=[(\"scaler\", StandardScaler()), (\"knn\", KNeighborsClassifier(n_neighbors=11))]\n    )\n    clf.set_params().fit(X_train, y_train)\n\n    return clf, le\nThen we rewrite the lifespan function. With full-line code completion in PyCharm, it is very easy:\n\n\n\n\n2. Set up a CNN model for MNIST prediction\nIn similar fashion as the penguin prediction model, we create a function for MNIST prediction (and we will store the meta parameters globally):\n# MNIST model meta parameters\nnum_classes = 10\ninput_shape = (28, 28, 1)\nbatch_size = 128\nepochs = 15\n\ndef mnist_pipeline():\n    # Load the data and split it between train and test sets\n    (x_train, y_train), _ = keras.datasets.mnist.load_data()\n\n    # Scale images to the [0, 1] range\n    x_train = x_train.astype(\"float32\") / 255\n\n    # Make sure images have shape (28, 28, 1)\n    x_train = np.expand_dims(x_train, -1)\n\n    # convert class vectors to binary class matrices\n    y_train = keras.utils.to_categorical(y_train, num_classes)\n\n    model = keras.Sequential(\n        [\n            keras.Input(shape=input_shape),\n            layers.Conv2D(32, kernel_size=(3, 3), activation=\"relu\"),\n            layers.MaxPooling2D(pool_size=(2, 2)),\n            layers.Conv2D(64, kernel_size=(3, 3), activation=\"relu\"),\n            layers.MaxPooling2D(pool_size=(2, 2)),\n            layers.Flatten(),\n            layers.Dropout(0.5),\n            layers.Dense(num_classes, activation=\"softmax\"),\n        ]\n    )\n\n    model.compile(loss=\"categorical_crossentropy\", optimizer=\"adam\", metrics=[\"accuracy\"])\n\n    model.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, validation_split=0.1)\n\n    return model\nThen add the model setup in the lifespan function:\nml_models[\"cnn\"] = mnist_pipeline()\nNote that since this is added, every time you make changes to `main.py` and save, the model will be trained again. It can take a bit of time. So in development you may want to use a dummy model that requires no training time at all or a pre-trained model instead. After training, the CNN model will be ready to go.\n3. Set up a POST endpoint for uploading an image file for prediction\nTo set up an endpoint that takes an upload file, we have to use UploadFile in FastAPI:\n@app.post(\"/predict-image/\")\nasync def predicct_upload_file(file: UploadFile):\n    img = await file.read()\n    \n    # process image for prediction\n    img = Image.open(BytesIO(img)).convert('L')\n    img = np.array(img).astype(\"float32\") / 255\n    img = np.expand_dims(img, (0, -1))\n    \n    # predict the result\n    result = ml_models[\"cnn\"].predict(img).argmax(axis=-1)[0]\n    return {\"filename\": file.filename,\n            \"result\": str(result)}\nPlease note that this is a POST endpoint (so far we have only set up GET endpoints).\nDon’t forget to import `UploadFile` from `fastapi`:\nfrom fastapi import FastAPI, UploadFile\nAnd `Image` from Pillow. We are also using `BytesIO` from the `io` module:\nfrom PIL import Image\nfrom io import BytesIO\nTo test this using the PyCharm HTTP Client with a test image file, we will make use of the `multipart/form-data` encoding. You can check out the HTTP request syntax here. This is what you will put in the `test_in.http` file:\n###\n\nPOST http://127.0.0.1:8000/predict-image/ HTTP/1.1\nContent-Type: multipart/form-data; boundary=boundary\n\n--boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"test_img0.png\"\n\n< ./test_img0.png\n\n--boundary–\n4. Add an API to collect data and trigger retraining\nNow, here comes the retraining. We set up a POST endpoint like above to accept a zip file which contains training images and labels. The zip file will then be processed and the training data will be prepared. After that we will fit the CNN model again:\n@app.post(\"/upload-images/\")\nasync def retrain_upload_file(file: UploadFile):\n\n    img_files = []\n    labels_file = None\n    train_img = None\n\n    with ZipFile(BytesIO(await file.read()), 'r') as zfile:\n        for fname in zfile.namelist():\n            if fname[-4:] == '.txt' and fname[:2] != '__':\n                labels_file = fname\n            elif fname[-4:] == '.png':\n                img_files.append(fname)\n\n        if len(img_files) == 0:\n            return {\"error\": \"No training images (png files) found.\"}\n        else:\n            for fname in sorted(img_files):\n                with zfile.open(fname) as img_file:\n                    img = img_file.read()\n\n                    # process image\n                    img = Image.open(BytesIO(img)).convert('L')\n                    img = np.array(img).astype(\"float32\") / 255\n                    img = np.expand_dims(img, (0, -1))\n\n                    if train_img is None:\n                        train_img = img\n                    else:\n                        train_img = np.vstack((train_img, img))\n\n        if labels_file is None:\n            return {\"error\": \"No training labels file (txt file) found.\"}\n        else:\n            with zfile.open(labels_file) as labels:\n                labels_data = labels.read()\n                labels_data = labels_data.decode(\"utf-8\").split()\n                labels_data = np.array(labels_data).astype(\"int\")\n                labels_data = keras.utils.to_categorical(labels_data, num_classes)\n\n    # retrain model\n    ml_models[\"cnn\"].fit(train_img, labels_data, batch_size=batch_size, epochs=epochs, validation_split=0.1)\n\n    return {\"message\": \"Model trained successfully.\"}\nRemember to import `ZipFile`:\nfrom zipfile import ZipFile\nIf we now try the endpoint with this zip file of 1000 retraining images and labels, you will see that it takes a moment for the response to come, as the training is taking a while:\nPOST http://127.0.0.1:8000/upload-images/ HTTP/1.1\nContent-Type: multipart/form-data; boundary=boundary\n\n--boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"training_data.zip\"\n\n< ./retrain_img.zip\n\n--boundary--\nImagine the zip files contain more training data or you’re retraining a more complicated model. The user would then have to wait for a long time and it would seem like things are not working for them.\n5. Retrain the model with BackgroundTasks\nA better way to handle retraining is, after receiving the training data, we process it and check if the data is in the right format, then give a response saying that the retraining has restarted and train the model in `BackgroundTasks`. Here is how to do it. First, we will add `BackgroundTasks` to our `upload-images` endpoint:\n@app.post(\"/upload-image/\")\nasync def retrain_upload_file(file: UploadFile, background_tasks: BackgroundTasks):\n\t...\nRemember to import it from `fastapi`:\nfrom fastapi import FastAPI, UploadFile, BackgroundTasks\nThen, we will put the fitting of the model into the `background_tasks`:\n# retrain model\n    background_tasks.add_task(\n        ml_models[\"cnn\"].fit,\n        train_img,\n        labels_data,\n        batch_size=batch_size,\n        epochs=epochs,\n        validation_split=0.1\n    )\nAlso, we will update the message in the response:\nreturn {\"message\": \"Data received successfully, model training has started.\"}\nNow test the endpoint again. You will see that the response has arrived much quicker, and if you look at the Run window, you’ll see that the training is running after the response has arrived.\nAt this point, more functionality can be added, for example, an option to notify the user later (e.g. via email) when the training is finished or track the training progress in a dashboard when a full application is built.\nDevelop ML FastAPI applications with PyCharm\nFastAPI provides an easy way to convert your data science project into a working application in several easy steps. It is perfect for data science teams that want to provide an application prototype for their machine learning model which can be further developed into a professional web application if needed. \nPyCharm Professional is the Python IDE that allows you to develop FastAPI applications more easily with a preconfigured project for FastAPI, coding assistance, tailored run/debug configurations, and the Endpoints tool window for managing API endpoints efficiently.\nGet a free trial of PyCharm Professional\n                                                    \nIn this blog post, we showed the process of providing a simple API for a pre-trained prediction model. To learn more about FastAPI, I would suggest checking out the official FastAPI documentation. If you’re choosing between different frameworks, explore how FastAPI differs from Django.\nAbout the author\nCheuk Ting Ho\nCheuk has been a Data Scientist at various companies – a job that demands high numerical and programming skills, especially in Python. Following her passion for the tech community, Cheuk has been a Developer Advocate for three years. She also contributes to multiple open-source libraries like Hypothesis, Pytest, pandas, Polars, PyO3, Jupyter Notebook, and Django. Cheuk is currently a consultant and trainer at CMD Limes.",
        "dc:creator": "Evgenia Verbina",
        "content": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas, Polars, and Jupyter Notebook. FastAPI provides a quick way to build a backend service with Python. With a few decorators, you can turn your Python function into an API application. It is widely used [&#8230;]",
        "contentSnippet": "This is a guest post from Cheuk Ting Ho, a data scientist who contributes to multiple open-source libraries, such as pandas, Polars, and Jupyter Notebook. FastAPI provides a quick way to build a backend service with Python. With a few decorators, you can turn your Python function into an API application. It is widely used […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=509778",
        "categories": [
          "data-science",
          "how-tos"
        ],
        "isoDate": "2024-09-19T08:59:08.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "IntelliJ IDEA 2024.2.2 Is Out",
        "link": "https://blog.jetbrains.com/idea/2024/09/intellij-idea-2024-2-2/",
        "pubDate": "Wed, 18 Sep 2024 20:49:50 +0000",
        "content:encodedSnippet": "We’ve just released a new minor version for IntelliJ IDEA 2024.2 – 2024.2.2.\nYou can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website.\nHere are some of the notable updates:\nHighlighting no longer “blinks” upon typing. [IJPL-148285]\nDebugging for the spring-boot:run Maven goal is once again available. [IDEA-175246]\nNon-Latin letters and characters are properly displayed in the Run console. [IJPL-160012]\nIt’s again possible to save the project settings with Coverage if the Qodana plugin is enabled. [IDEA-357267]\nDeleting a draft comment for a GitLab merge request now works properly. [IJPL-82744]\nThe Scene Builder for JavaFX projects again works as intended. [IDEA-357493]\nThe Microsoft Defender configuration script now runs smoothly. [IJPL-37118]\nThe Big Data Tools plugin again works without reinstallation. [IJPL-159827]\nRunning XSLT transformations no longer returns an unknown error. [IJPL-160738]\nThe IDE now correctly shows only one banner when an annotation from an external annotator is added to the file. [IJPL-995]\nGenerating the XML document from an XSD schema again works as intended. [IJPL-160786]\nTo find out more details about the issues resolved, please refer to the release notes.\nIf you encounter any issues or would like to make a suggestion or a feature request, please submit them to our issue tracker.\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "We’ve just released a new minor version for IntelliJ IDEA 2024.2 – 2024.2.2. You can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website. Here are some of the notable updates: To find out more details about the [&#8230;]",
        "contentSnippet": "We’ve just released a new minor version for IntelliJ IDEA 2024.2 – 2024.2.2. You can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website. Here are some of the notable updates: To find out more details about the […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=509236",
        "categories": [
          "releases",
          "2024-2",
          "bug-fix-update",
          "intellij-idea-2024-2",
          "intellij-idea-2024-2-2"
        ],
        "isoDate": "2024-09-18T20:49:50.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Code Quality Booster: Live Qodana Demo and Best Practices for Code Analysis",
        "link": "https://blog.jetbrains.com/qodana/2024/09/code-quality-booster-live-qodana-demo-and-best-practices-for-code-analysis/",
        "pubDate": "Wed, 18 Sep 2024 15:36:20 +0000",
        "content:encodedSnippet": "Join us for a live demo of Qodana, the static code analysis platform from JetBrains. Discover how to integrate Qodana with your IDE and your CI pipeline, build quality gates, and catch critical issues early.\nDate: September 30, 2024\nTime: 6 pm CET (4 pm UTC)\nRegister for the webinar\n\n\n\n\nSession abstract\nWhether you’re new to Qodana or looking to deepen your understanding of the platform, this session will provide practical insights and live examples to help you streamline your development process.\nYou’ll learn:\nHow to set up Qodana in your development environment.\nHow to use Qodana’s powerful code analysis features.\nHow to integrate Qodana with your CI/CD pipeline.\nBest practices for using Qodana to improve code quality.\n\n\n\n\nAsking questions\nKai will try to answer all your questions during the session. If we run out of time, we’ll be sure to respond to remaining questions in a follow up blogpost.\nYour speaker and host\nKai Schmithuesen, Product Specialist at Qodana\nKai Schmithuesen, Product Specialist at Qodana\nKai is an accomplished product specialist with over 15 years of experience in the software sales industry, focusing on developer tools and practices. Originally from Germany, Kai spent over 10 years in Ireland working for US software companies before relocating to Stockholm, where he now oversees sales activities for Qodana.\nHappy developing!",
        "dc:creator": "Kerry Beetge",
        "content": "Join us for a live demo of Qodana, the static code analysis platform from JetBrains. Discover how to integrate Qodana with your IDE and your CI pipeline, build quality gates, and catch critical issues early. Date: September 30, 2024 Time:&#160;6 pm CET (4 pm UTC) Register for the webinar Session abstract Whether you&#8217;re new to [&#8230;]",
        "contentSnippet": "Join us for a live demo of Qodana, the static code analysis platform from JetBrains. Discover how to integrate Qodana with your IDE and your CI pipeline, build quality gates, and catch critical issues early. Date: September 30, 2024 Time: 6 pm CET (4 pm UTC) Register for the webinar Session abstract Whether you’re new to […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=511046",
        "categories": [
          "qodana",
          "agile-development",
          "cicd",
          "code-optiization",
          "code-review",
          "developers",
          "software-development",
          "software-engineers"
        ],
        "isoDate": "2024-09-18T15:36:20.000Z"
      },
      {
        "creator": "Alena Gupaisova",
        "title": "JetBrains Introduces Free Online Clubs for School Students",
        "link": "https://blog.jetbrains.com/education/2024/09/18/jetbrains-introduces-free-online-clubs-for-school-students/",
        "pubDate": "Wed, 18 Sep 2024 09:00:52 +0000",
        "content:encodedSnippet": "Starting in October, we invite teenagers interested in math, programming, and AI to join our free online clubs. Whether you want to participate in Olympiads or planning to study at high-intensity and prestigious STEM programs, our clubs will help you prepare and meet like-minded people from different countries. Take a closer look at the clubs if you plan to participate in the upcoming JetBrains Academy Youth Challenge.\nThe clubs will operate from October 2024 until the end of May 2025. They are designed for high schoolers but can also be interesting for younger students with experience in solving tasks outside the standard school curriculum. \nLearn more\n\nMath Club\nAI Club\nCoding Club\n\n\n\n\n\nMath Club\nEvery week, you’ll be given a set of 15 problems, each of increasing difficulty. You can solve those at any convenient time before the deadline. After that, you can discuss your solutions with your peers and coaches during the Math Club’s Saturday live sessions, which will last for 90 minutes.\nThe first semester focuses on polynomials, discrete probability, and graph theory. Students who solve at least 50% of the tasks will be invited to continue to the more advanced second semester with written solutions and oral defenses.\nThis club is particularly valuable for those who excel in programming. The course helps create a fundamental mathematical base to enhance your ability to solve programming problems more effectively. The course curriculum is designed by a team of mathematicians with expertise in preparing winners and medalists for major events like the International Mathematical Olympiad (IMO) and the European Girls’ Mathematical Olympiad (EGMO).\nFor students entering bachelor’s studies this year, your Math Club results may count as an additional five points (about one-third) of an entrance test mark for the BSc degrees supported by JetBrains: Computer Science and AI and Software, Data, and Technology.\nMore details\n                                                    \nAI Club\nIf you’re interested in diving into AI, learning the basics, and even putting in the effort to reach Olympiad level (like IOAI), take a closer look at our AI Club.\nThis club offers weekly lectures and live sessions every Wednesday, held by Alex Avdiushenko, PhD in math modeling and analyst on the JetBrains Education and Research team. You’ll learn about machine learning (data analysis and model training), neural networks, computer vision, and natural language processing (NLP).\nThis club will be especially beneficial to those interested in adding knowledge of AI to your math or coding skills.\nLearn more\n                                                    \nCoding Club\nOur Coding Club hosts weekly contests on the Codeforces platform. It’s a perfect match for those with some experience in competitive programming who want to master their problem-solving skills. \nEach week, Pavel Mavrin, ICPC World Champion 2004, IOI 2002 Silver Medalist, and instructor at JetBrains Academy, will prepare a mashup contest for you and discuss your solutions during live sessions held on Thursdays.\nJoin now",
        "dc:creator": "Alena Gupaisova",
        "content": "Starting in October, we invite teenagers interested in math, programming, and AI to join our free online clubs. Whether you want to participate in Olympiads or planning to study at high-intensity and prestigious STEM programs, our clubs will help you prepare and meet like-minded people from different countries. Take a closer look at the clubs [&#8230;]",
        "contentSnippet": "Starting in October, we invite teenagers interested in math, programming, and AI to join our free online clubs. Whether you want to participate in Olympiads or planning to study at high-intensity and prestigious STEM programs, our clubs will help you prepare and meet like-minded people from different countries. Take a closer look at the clubs […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=510844",
        "categories": [
          "jetbrains-academy",
          "offline-programs"
        ],
        "isoDate": "2024-09-18T09:00:52.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "article New updates to Planner comment notifications and settings in Planner Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Nayana Srikanth",
        "title": "Multi-Project Launch Configuration",
        "link": "https://devblogs.microsoft.com/visualstudio/multi-project-launch-configuration/",
        "pubDate": "Wed, 18 Sep 2024 16:08:38 +0000",
        "content:encodedSnippet": "Are you tired of the hassle of manually configuring your development environment every time you want to launch multiple projects? We’ve heard your feedback and are thrilled to announce a feature in Visual Studio that simplifies your workflow.\nThe Multi-Project Launch Configuration feature in Visual Studio allows developers to set up and save profiles for launching specific projects within a multi-project solution in predefined states for debugging. This simplifies the process of working with complex solutions, improves debugging efficiency, and enables easy sharing of configurations among team members.\n\nEnabling Multi Launch Profile:\nThe Multi-Project Launch Configuration is available in version 17.11. Enable the feature flag with the instructions below to start using it.\nIn Visual Studio, navigate to Tools > Options > Preview Features and toggle the checkbox for “Enable Multi Launch Profiles” to activate the feature.\n\nCreating Multi Launch Profile:\nOpen your Visual Studio solution that contains multiple projects.\nGo to the “Solution Explorer” on the right side of the Visual Studio window.\nRight-click on your solution (the top-level item in the Solution Explorer) and select “Configure Startup Projects…”.\n\nIn the Solution Property Pages, click on the “Common Properties” tab, and select “Configure Startup Projects”.\n\nIn the “Configure Startup Projects” section, choose the “Multiple startup projects” radio button.\nBelow the radio button, you’ll see a list of all the projects in your solution.\nSet the action for each project to either “Start,” “Start without debugging,” or “None,” and select debug target depending on your requirements.\n\nEnabling the “Share Profile” checkbox allows you to share the profile with the team by checking it into the config file in the Source Control repo.\nLaunch profiles are saved to a JSON file in the same directory as the solution. The “Share Profile” checkbox determines whether the profile is saved to a user-specific file (unchecked) or to a file intended for source control tracking, such as in Git (checked).\n\nOnce you’ve configured the startup action for each project, click the “OK” or “Apply” button to save the profile.\nThe created launch profile appears in the toolbar dropdown list, allowing you to select the profile you want to debug.\n\nEngage with us!\nWe would love to get your feedback on Multi Project Config, so please give it a try and let us know what you think! You can share any feedback via Developer Community to help us make Visual Studio better for you!\nThe post Multi-Project Launch Configuration appeared first on Visual Studio Blog.",
        "dc:creator": "Nayana Srikanth",
        "content": "<p>Are you tired of the hassle of manually configuring your development environment every time you want to launch multiple projects? We&#8217;ve heard your feedback and are thrilled to announce a feature in Visual Studio that simplifies your workflow. The Multi-Project Launch Configuration feature in Visual Studio allows developers to set up and save profiles for [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/multi-project-launch-configuration/\">Multi-Project Launch Configuration</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Are you tired of the hassle of manually configuring your development environment every time you want to launch multiple projects? We’ve heard your feedback and are thrilled to announce a feature in Visual Studio that simplifies your workflow. The Multi-Project Launch Configuration feature in Visual Studio allows developers to set up and save profiles for […]\nThe post Multi-Project Launch Configuration appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250651",
        "categories": [
          "Productivity",
          "Visual Studio"
        ],
        "isoDate": "2024-09-18T16:08:38.000Z"
      },
      {
        "creator": "Mark Downie",
        "title": "How to run .NET apps natively on Arm64 devices",
        "link": "https://devblogs.microsoft.com/visualstudio/how-to-run-net-apps-natively-on-arm64-devices/",
        "pubDate": "Tue, 17 Sep 2024 10:00:19 +0000",
        "content:encodedSnippet": "Are you developing .NET applications for Arm-based processors? Do you want to take advantage of the performance and power efficiency of running your apps natively on Arm64 devices? If so, you’ll be happy to hear that Visual Studio 2022 17.11 has a new feature that makes it easier than ever to do just that.\n\nVisual Studio 2022 natively supports building and debugging Arm64 apps on Arm-based processors. However, if you build your app with the AnyCPU setting, which is the default for most .NET projects, your app will run on an Arm64 device using x64 emulation. While this may seem counterintuitive, this approach allowed many apps with x64 dependencies to work reliably under emulation without requiring additional build or dependency changes.\nUnfortunately, under these conditions, it means your app won’t benefit from the native capabilities of the Arm64 CPU and may suffer from reduced performance and increased battery consumption.\nTo solve this problem, the Windows 24H2 update introduces a new setting for your app manifest files. This setting allows you to specify a list of supported architectures (currently amd64 or arm64) for your app, indicating that it should run natively on those platforms. For example, if you include arm64 in the list, your app will run using the Arm64 CLR on Arm64 devices when supported, even if it was built with the AnyCPU setting.\nHow to use the setting in Visual Studio 2022\nTo use the new setting in Visual Studio 2022, you need to do the following steps:\nMake sure you have the Windows 24H2 update installed on your development machine and your target device.\nOpen your .NET project in Visual Studio 2022 and right-click on your project in Solution Explorer and select Properties.\n In the Build area confirm that the AnyCPU configuration is enabled and that the Prefer 32-bit option is unselected.\nSelect the new Prefer native ARM64 option.\nSave and rebuild your project.\nDeploy your app to your Arm64 device and run it. You can also debug it using Visual Studio 2022, which will automatically detect the correct architecture and launch the debugger accordingly.\n\nEnjoy the benefits of native Arm64 apps\nBy using the new setting in Visual Studio 2022, you can easily run and debug your .NET apps natively on Arm64 devices, without changing your code or your build configuration. This will help you improve the performance, reliability, and battery life of your apps, and give your users a better experience.\nWe hope you enjoy this new feature and find it useful for your development scenarios. As always, we appreciate your> feedback and suggestions, which help us make Visual Studio better for you. Please let us know what you think by leaving a comment below, or by using the Report a Problem tool in Visual Studio. Thank you for choosing Visual Studio 2022!\nThe post How to run .NET apps natively on Arm64 devices appeared first on Visual Studio Blog.",
        "dc:creator": "Mark Downie",
        "content": "<p>Are you developing .NET applications for Arm-based processors? Do you want to take advantage of the performance and power efficiency of running your apps natively on Arm64 devices? If so, you&#8217;ll be happy to hear that Visual Studio 2022 17.11 has a new feature that makes it easier than ever to do just that. Visual [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/how-to-run-net-apps-natively-on-arm64-devices/\">How to run .NET apps natively on Arm64 devices</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Are you developing .NET applications for Arm-based processors? Do you want to take advantage of the performance and power efficiency of running your apps natively on Arm64 devices? If so, you’ll be happy to hear that Visual Studio 2022 17.11 has a new feature that makes it easier than ever to do just that. Visual […]\nThe post How to run .NET apps natively on Arm64 devices appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250623",
        "categories": [
          "performance",
          ".NET",
          "32-bit",
          "Arm64"
        ],
        "isoDate": "2024-09-17T10:00:19.000Z"
      },
      {
        "creator": "Peter Spada",
        "title": "Understanding the behavior of the XAML Designer with abstract base classes",
        "link": "https://devblogs.microsoft.com/visualstudio/understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes/",
        "pubDate": "Mon, 16 Sep 2024 13:49:39 +0000",
        "content:encodedSnippet": "Visual Studio 2022 introduced a new XAML designer for building WPF apps, with a goal of increasing the performance and reliability of the designer. The new designer can quickly open a XAML file by using WPF’s built-in parser and display. This new design has a nuanced behavior when the root XAML element derives from an abstract base class. This article helps with understanding implications for using an abstract base class and describes workarounds which can ensure a smooth design experience.\nThe Challenge with Abstract Base Classes\nWhen working with the XAML Designer, the base class of the root element is instantiated for display purposes. This allows developers to visualize and interact with their UI components directly within the designer, while the custom control is being developed. In the example screenshot below, the base class of the root element is UserControl. The custom control’s derived class is specified in the x:Class attribute as TestControl. Therefore, an instance of UserControl is instantiated for display in design view:\n\nHowever, an issue arises when the root element’s base class is abstract. Since abstract classes cannot be instantiated, the XAML Designer will find the first non-abstract base class and instantiate that instead. Most of the time, this will work well, but there are cases where this will break design view, possibly showing an error message. One case where design view breaks is when the abstract base class defines a property that is crucial for display, such as the Content property.\nIllustrative Example\nImagine you have an abstract base class as follows:\n\nIf this abstract class is the base class for your custom control, the XAML Designer will not be able to instantiate AbstractControlBase and will instead instantiate the Control class. The reason is that Control is the first non-abstract base class. This leads to any reference to AbstractControlBase being broken in design view. In the following screenshot, it shows how a ControlTemplate cannot be applied to AbstractControlBase, and the Content property cannot be used to display anything in design view:\n\nEffective Workarounds\nTo mitigate this issue, there are practical workarounds that ensure that the XAML Designer continues to function seamlessly.\n1. Move Display Properties to a Non-Abstract Base Class\nOne approach is to refactor your code by transferring the properties critical to design view to another level of base class that is not abstract. This adjustment allows the XAML Designer to instantiate and render the necessary components. The following code shows how the Content property was moved from AbstractControlBase to a new ControlBase class:\n\nIn the XAML file, the base class stays as AbstractControlBase, but the control template now applies to the concrete base class ControlBase:\n\n2. Utilize Standard Controls\nAnother strategy is to derive the abstract class from WPF’s ContentControl, which already provides common properties that are used for display in design view, such as the Content property. This method circumvents the instantiation issue associated with abstract classes, allowing your UI elements to be properly displayed while designing your XAML content.\n\n\nConclusion\nUnderstanding the implications of using abstract base classes and implementing effective workarounds can significantly enhance your design workflow. By moving properties to non-abstract base classes or utilizing standard controls, you can ensure that your UI components are rendered accurately, allowing you to harness the full potential of the XAML Designer.\nIf you have feedback about the XAML Designer, please let us know by using the Visual Studio Feedback Tool. We’re eager to hear what you think!\nThe post Understanding the behavior of the XAML Designer with abstract base classes appeared first on Visual Studio Blog.",
        "dc:creator": "Peter Spada",
        "content": "<p>Visual Studio 2022 introduced a new XAML designer for building WPF apps, with a goal of increasing the performance and reliability of the designer. The new designer can quickly open a XAML file by using WPF’s built-in parser and display. This new design has a nuanced behavior when the root XAML element derives from an [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/understanding-the-behavior-of-the-xaml-designer-with-abstract-base-classes/\">Understanding the behavior of the XAML Designer with abstract base classes</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 2022 introduced a new XAML designer for building WPF apps, with a goal of increasing the performance and reliability of the designer. The new designer can quickly open a XAML file by using WPF’s built-in parser and display. This new design has a nuanced behavior when the root XAML element derives from an […]\nThe post Understanding the behavior of the XAML Designer with abstract base classes appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=250610",
        "categories": [
          "Visual Studio",
          "WPF",
          "XAML"
        ],
        "isoDate": "2024-09-16T13:49:39.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "\r\n                            Brooks McMillin,Adrian Wood,Mark Breitenbach,Aditya Damani\r\n            \t\t\t",
        "title": "How we use Lakera Guard to secure our LLMs",
        "link": "https://dropbox.tech/security/how-we-use-lakera-guard-to-secure-our-llms",
        "pubDate": "Wed, 18 Sep 2024 07:00:00 -0700",
        "content:encodedSnippet": "From search to organization, rapid advancements in artificial intelligence (AI) have made it easier for Dropbox users to discover and interact with their files. However, these advancements can also introduce new security challenges. Large Language Models (LLMs), integral to some of our most recent intelligent features, are also susceptible to various threats—from data breaches and adversarial attacks to exploitation by malicious actors. While hundreds of millions of users already trust Dropbox to protect their content, ensuring the security and integrity of these models is essential for maintaining that trust.\nLast year we evaluated several security solutions to help safeguard our LLM-powered applications and ultimately chose Lakera Guard. With its robust capabilities, Lakera Guard helps us secure and protect user data, and—as outlined in our AI principles—uphold the reliability and trustworthiness of our intelligent features.\nAddressing these challenges requires a multifaceted approach, incorporating stringent security protocols, continuous monitoring, and proactive risk management strategies. In this story, we’ll share insights into our approach to securing our LLMs, the criteria we used to evaluate potential solutions, and the key benefits of implementing Lakera's technology.\n\r\n\r\n    \n What we were looking for\n\r\n\r\n\n\nLLM security is comprised of many parts. Common problems include reliability, consistency, alignment, and adversarial attacks. However, the scope of the problem we were trying to solve was more customer-centric—specifically, using LLMs to chat about, summarize, transcribe, and retrieve information, in addition to agent/assistant use cases. These kinds of untrusted user inputs could result in moderation issues or prompt injection—a method sometimes used to manipulate models—which creates a lot of headaches, including undesirable model outputs.\nWe considered a variety of open source, in-house, and proprietary options before narrowing our criteria to either open source or commercial tools. Whatever we chose, we decided the following requirements were mandatory:\nWe couldn’t call out to a third party. The solution had to be deployable in-house on our existing infrastructure.\nLow latency. Dropbox is committed to maximizing performance for users across all of its products. We couldn’t add latency to LLM-powered features any more than absolutely necessary, so we determined upper latency numbers with the product teams.\nLatency for a given context length is also an important sub-problem here. Many options perform well on context lengths of 4,000. Excellent support for long context lengths—the ability for models to process greater amounts of information—was critical, as many customer use cases routinely exceed this number.\nConfidence scores. API integrations that not only allowed extensive control over the categories of blocking, but also the sensitivity, were key (eg., separating the danger classification jailbreak based on confidence scores in order to ensure we could meet the diverse needs of our product teams).\nFuture intelligence and continuous improvement. Since LLM security is a fast evolving space, we wanted a solution that could also give us actionable insights into attacks and payloads in a rapidly shifting environment.\nIn fact, given the rapidly shifting environment, our top priority was selecting a solution that gave us enough of a foothold to observe and reorient as needed.\n\r\n\r\n    \n How we tested\n\r\n\r\n\n\nOnce we had a short list of open-source and commercial tools that met our criteria, we set up each tool internally for evaluation. For our test suite, we used Garak, an open-source LLM vulnerability scanner customized to run Dropbox-specific security tests. With Garak, we could evaluate the security coverage of each of the potential solutions. This allowed us to conduct a range of tests involving prompt injection, jailbreak, and other security assessments developed by Dropbox. \nWe then tested each solution directly against a range of LLMs already in use or under evaluation by our product teams. This enabled us to establish a baseline of each model’s vulnerability. For example, if a security tool blocked 90% of malicious prompts, but the LLM had already mitigated 85% of these vulnerabilities, we measured a net improvement of only 5%.\nFinally, we needed a tool that did not add excessive latency to LLM calls and respected the privacy of customer data (e.g., did not store prompt content or send it outside the Dropbox network). For this, we measured the response time of each security test and also monitored network requests and file changes to detect any potential breaches of user data.\nAfter extensive testing, Lakera Guard emerged as the product meeting all our requirements, offering both the lowest latency and highest security coverage.\n\r\n\r\n    \n How we integrated Lakera Guard\n\r\n\r\n\n\nLakera provides a Docker container that we run as an internal service at Dropbox. This means Lakera Guard is just an RPC call away from any LLM pipeline. Conceptually, the LLM security architecture at Dropbox is designed using LangChain as shown in the figure below. \n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/lakera/lakera-diagram1.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/lakera/lakera-diagram1.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1446\"\r\n             data-aem-asset-id=\"5b8c124b-6ee0-4211-98be-e604d783ae92:lakera-diagram1.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/lakera/lakera-diagram1.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2024/09/lakera/lakera-diagram1.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1446\"\r\n             data-aem-asset-id=\"5b8c124b-6ee0-4211-98be-e604d783ae92:lakera-diagram1.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nA high-level representation of the internal AI/ML security infrastructure at Dropbox\n\r\n        \r\n    \r\n\nHere, a textual LLM prompt is directed through one or more prompt security chains before hitting the model. We have a security chain that makes Lakera Guard security API endpoint requests to our internally-hosted Docker container, which responds with confidence scores for prompt injection and jailbreak attacks. Dropbox services can then action on the returned Lakera Guard prompt security categories as appropriate for the application. \nPrompts that are deemed to be safe are then passed to the LLM—either a third-party model, like GPT-4, or an internally hosted open-source model, like LLaMA 3, depending on the use case—which produces a textual response. The LLM’s response is then passed through our content moderation chains, which analyze the text for potentially harmful topics. The moderation chain calls out to Lakera’s content moderation API endpoint to identify harassing or explicit content that the Dropbox feature or service can withhold from the user as configured.\nIntegrating Lakera Guard into our Dropbox infrastructure was a gradual process. We started with one product directly calling the Lakera-provided Docker container. Eventually, we created a custom Dropbox service that can automatically scale up more containers as needed—and can be called via the LLM security layer we built as part of Dropbox’s central machine learning libraries.\n\r\n\r\n    \n What we learned, and what’s next\n\r\n\r\n\n\nThroughout this process, several product teams had concerns about latency—especially since many LLM use cases at Dropbox have prompts of more than 8,000 characters. We worked closely with Lakera to minimize added latency as much as possible, and our current average latency is now a 7x improvement for prompts with more than 8,000 characters.\nOur belief in Lakera is so strong that we've invested in its continued success and have collaborated with its teams on numerous improvements to Lakera Guard itself. We found novel ways to cause LLM hallucination and collaborated with Lakera to increase efficacy for malicious prompt detection. We also shared internal research—such as our work on repeated token attacks—as well as some interesting false positives.\nFinally, by working closely with the machine learning and product teams, we were able to help them meet their requirements while also achieving our security goals. For example, some of the false positives we encountered were a result of poor user input sanitization—or the process of filtering any potentially harmful or unwanted characters—which we were able to pass back to the product teams for improvement. Lakera has also been very interested in understanding our product flows to ensure they’re delivering a product that meets us where we are. \nWe’re currently planning to expand our Lakera Guard integration to all products using LLMs at Dropbox. This will involve tuning the detections for each use case and determining other potential causes of false positives or high latencies that can occur with some of the different data structures currently in use.\nOne of our core commitments at Dropbox is being worthy of our customers' trust. Partnering with Lakera to protect our users and their data is a testament to this promise. There are also many more interesting problems yet to be solved, and we plan to share more about how our approach to LLM security continues to evolve in future posts.\n~ ~ ~\nIf building innovative products, experiences, and infrastructure excites you, come build the future with us! Visit dropbox.com/jobs to see our open roles, and follow @LifeInsideDropbox on Instagram and Facebook to see what it's like to create a more enlightened way of working.",
        "dc:creator": "\r\n                            Brooks McMillin,Adrian Wood,Mark Breitenbach,Aditya Damani\r\n            \t\t\t",
        "content": "null",
        "contentSnippet": "null",
        "guid": "https://dropbox.tech/security/how-we-use-lakera-guard-to-secure-our-llms",
        "categories": [
          "LLM",
          "AI",
          "Security",
          "Lakera"
        ],
        "isoDate": "2024-09-18T14:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": [
      {
        "creator": "sunyzero",
        "title": "수영 영법 부상 : 충돌 증후군과 회전근개파열, 늑연골염",
        "link": "http://sunyzero.tistory.com/302",
        "pubDate": "Sat, 21 Sep 2024 14:41:35 +0900",
        "author": "sunyzero",
        "comments": "http://sunyzero.tistory.com/302#entry302comment",
        "content": "<p data-ke-size=\"size16\">수영은 꽤 안전한 운동이지만 그래도 부상이 발생하기도 한다. 제일 위험한 것은 심장에 무리가 오는 것으로 수영장을 오래 다니다보면 의외로 심장마비로 돌아가시는 분들을 보게 된다. 심장마비 정도는 아니지만 갑자기 차가운 물에 놀래서 담이 결리는 경우도 있다. 따라서 수영을 하기 전에는 꼭 준비운동을 하도록 해야 한다.</p>\n<p data-ke-size=\"size16\">준비운동은 별것 없이 간단하게 5분정도 관절을 돌려주기만 해도 된다. 특히 목, 손목/발목, 어깨, 무릎, 허리 정도만 잘 돌려도 상당히 도움이 된다. 주의할 점은 빠르게 돌리면 오히려 인대나 골격에 부상이 생기므로 보통의 속도로 돌리도록 한다. 그리고 남성이라면 팔굽혀펴기를 5~10회 정도 하는 것이 좋다. 팔굽혀펴기는 심장을 워밍업 시키는데 굉장히 좋다.</p>\n<p data-ke-size=\"size16\">그리고 수영을 하다보면 특정 관절이나 근육 부분이 너무 뜨겁다고 느낄 정도로 열이 오르고 아프다면 그걸 이겨내려고 하기보단 쉬도록 하자. 수영하면서 호흡이 가쁜 것은 괜찮지만 관절이나 근육이 아픈데도 이걸 극기훈련으로 여기는 분들이 있는데, <span style=\"background-color: #ffc9af;\">염증과 싸워서 얻을 것은 골병밖에 없다</span>. 또한 천천히 오래 하는 수영보다 약간 부하를 주면서 빠르게 단거리, 중거리 수영을 하는게 심장 및 골격근에 도움이 되는 경우가 많다.</p>\n<p data-ke-size=\"size16\">그러면 이번에는 수영에서 조심하지 않으면 생기는 부상에 대해서 살펴보자. 먼저 수영에서 가장 많이 부상을 당하는 영법은 의외로 <span style=\"background-color: #f6e199;\">배영(背泳, backstroke)</span>이다. 배영으로 생기는 부상은 어깨와 주로 무릎, 발목이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">1. 어깨 부상</h2>\n<p data-ke-size=\"size16\">앞서 언급한대로 배영을 하다보면 어깨쪽에 부상이 종종 생긴다. 특히 충돌증후군이 생기는 경우가 많다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"회전근개_충돌증후군.png\" data-origin-width=\"512\" data-origin-height=\"259\"><span data-url=\"https://blog.kakaocdn.net/dn/RpZn9/btsJIs5lSkl/8oDPINCp2UlVSS5mkjMuO1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/RpZn9/btsJIs5lSkl/8oDPINCp2UlVSS5mkjMuO1/img.png\" data-alt=\"충돌증후군에 의한 회전근개부상 (출처 헬스데일리)\"><img src=\"https://blog.kakaocdn.net/dn/RpZn9/btsJIs5lSkl/8oDPINCp2UlVSS5mkjMuO1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FRpZn9%2FbtsJIs5lSkl%2F8oDPINCp2UlVSS5mkjMuO1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"회전근개_충돌증후군.png\" data-origin-width=\"512\" data-origin-height=\"259\"/></span><figcaption>충돌증후군에 의한 회전근개부상 (출처 헬스데일리)</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">충돌증후군은 어깨 위뼈와 아래뼈의 간격이 좁아져서 서로 부딪히는 것을 의미한다. 보통 몸이 뻣뻣하거나 30대중후반 이상으로 나이가 있는 경우에 발생한다. 배영을 배울때 팔을 머리쪽으로 붙이라고 하는 경우가 많은데, 그건 선수들이나 가능한 것이고, 일반인들은 그렇게 하다간 부상을 당할 수 있다. 이건 강사분들이 운동을 하던 사람들이라 본인들의 어깨 관절이 일반인보다 부드러운 것을 잘 몰라서 그렇다고 생각된다.</p>\n<p data-ke-size=\"size16\">어깨충돌증후군이 발생해서 어깨 내부가 염증으로 부어있는 상태에서 계속 수영을 강행하면 회전근개에 부상을 입거나 최악의 경우 파열까지도 일어난다. 그리고 회전근개가 파열되면 최소 1~2년은 아웃이다. 따라서 배영을 하고 난 뒤에 어깨가 아프다면 수영을 1~2주 정도 쉬어보고, 배영시 어깨를 적당히 붙이고, 롤링을 통해 어깨에 무리를 주지 않도록 자세를 교정하는게 좋다. 상황에 따라서는 병원(재활의학과, 정형외과)에 가서 소염진통제를 처방받거나 더 심하다면 체외충격파 치료를 받는 것도 좋다.</p>\n<p data-ke-size=\"size16\">체외충격파의 경우에는 통증이나 파열 부위에 따라서 다르지만 치료 및 회복에 걸리는 시간이 최소 3~6개월 정도이다. 따라서 체외충격파 치료까지 가지 않으려면 되도록이면 통증을 참으면서 수영하지는 말아야 한다. 참고로 본인도 회전근개파열로 인해 거의 2년동안 수영을 쉰 적이 있다. 체외충격파만 20회 가까이 받았고, 소염진통제, 도수치료 등등 안해본 것이 없다. <span style=\"background-color: #9feec3;\">이 중에서 제일 효과가 좋았던 것은 단연코 체외충격파와 COX-2 소염진통제였다</span>.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><br />2. 늑연골염</h2>\n<p data-ke-size=\"size16\">수영은 가슴을 많이 쓰는 운동이므로 의외로 가슴 골격에 부상을 입기 쉽다. 그 중에 대표적인 것이 늑연골염이다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"315\" data-origin-height=\"368\"><span data-url=\"https://blog.kakaocdn.net/dn/nS6jP/btsJG3FJuHr/QwWRJOO0sC9E0DgRlukxgk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/nS6jP/btsJG3FJuHr/QwWRJOO0sC9E0DgRlukxgk/img.png\" data-alt=\"늑연골염\"><img src=\"https://blog.kakaocdn.net/dn/nS6jP/btsJG3FJuHr/QwWRJOO0sC9E0DgRlukxgk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FnS6jP%2FbtsJG3FJuHr%2FQwWRJOO0sC9E0DgRlukxgk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"315\" data-origin-height=\"368\"/></span><figcaption>늑연골염</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\"><br />갈비뼈에는 서로 잡아주는 연골로 늑연골이라는 것이 있다. 그런데 수영중에 롤링이나 접영, 평영, 배영을 하는 경우에는 평소에는 쓰지 않던 늑연골이 움직이게 되어 염증이 발생할 수 있다. 일반적으로 완전 초보보다는 중급~상급 정도에서 종종 많이 생긴다.</p>\n<p data-ke-size=\"size16\"><span style=\"background-color: #f6e199;\">늑연골쪽에 염증이 생기면 깊게 숨을 들이쉬거나 내쉴 때 흉통이 생긴다. 혹은 잠을 자려고 누웠을때 심장이나 폐쪽이 아프게 된다. 따라서 사람들이 심장병으로 오인하기도 한다</span>.</p>\n<p data-ke-size=\"size16\"><br />만일 수영 후 흉통이 생긴다면 명치나 옆갈비, 등쪽에 파스(소염 효과가 좋은 디클로페낙나트륨을 추천)를 붙이도록 한다. 그리고 1~2주 정도 수영을 쉬어보면 흉통이 가라앉는다. 그래도 낫지 않는다면 병원에서 COX-2 소염진통제를 처방 받는게 좋다. <br /><br /></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">3. 팔꿈치 부상</h2>\n<p data-ke-size=\"size16\">팔꿈치는 자유형을 장거리로 하는 경우에 주로 생긴다. 따라서 팔꿈치에 통증이 있다면 장거리 수영을 하지 않는 것이 좋다. 그 대신에 천천히 자유형을 10바퀴하는 것보다 빠르게 2~3바퀴를 하고 팔꿈치의 열을 충분히 식히는 방식으로 수영하는 것이 좋다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">4. 무릎, 발목 부상</h2>\n<p data-ke-size=\"size16\">수영을 할 때 발차기를 굉장히 쎄게 차는 분들이 있는데, 이런 경우 나중에 무릎이나 발목에 부상이 생길 수 있다. 물론 단거리 속도를 높일때는 강하게 차는게 좋지만 자신의 인대와 골격이 그걸 버티지 못하는데 강하게 차다보면 결국 부상이 생긴다.</p>\n<p data-ke-size=\"size16\">특히 평영할 때 너무 강하게 발을 차다보면 반월상연골을 다칠 수 있다. 반월상연골은 한번 다치면 재생이 불가능하므로 조심해야 한다. 반월상연골 파열의 특징은 무릎을 바늘로 찌르는 듯한 통증이 무작위로 나타나고, 양반다리를 하기 힘들어진다. (참고로 양반다리하다가도 뚝~ 소리와 함께 반월상연골이 파열되는 케이스가 있으니 조심해야 한다)&nbsp;</p>\n<p data-ke-size=\"size16\">만일 발목이나 무릎이 아프다면 <span style=\"background-color: #9feec3;\">TI영법(Total immersion)</span>을 사용해서 최대한 부상없이 수영하도록 한다. TI영법은 근육량이 적거나 혹은 나이가 좀 있는 경우라면 적극적으로 배우기를 추천한다. 아래 레퍼런스에 영상 링크를 적어두었다. TI영법은 꽤 유명한 영법이므로 유튜브에서 검색해도 바로 볼 수 있다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">결론</h2>\n<p data-ke-size=\"size16\">수영은 안전한 운동이지만 그래도 어깨, 늑골, 팔꿈치, 무릎, 발목등의 부상은 종종 있는 편이므로 이 부분만 조금 더 조심하면 좋다. 조심히 운동하면 70~80대가 되어도 할 수 있는 것이 수영이므로 젊을때 자세를 잘 잡아두는 것이 좋다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #333333; text-align: start;\" data-ke-size=\"size26\">레퍼런스</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><a href=\"https://www.wealthdaily.co.kr/1481\">어깨충돌증후군, 헬스데일리, </a><a href=\"https://www.wealthdaily.co.kr/1481\">https://www.wealthdaily.co.kr/1481</a><br /><br />TI영법,&nbsp; <a href=\"https://www.youtube.com/watch?v=B0PlagwpSpc\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=B0PlagwpSpc</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "수영은 꽤 안전한 운동이지만 그래도 부상이 발생하기도 한다. 제일 위험한 것은 심장에 무리가 오는 것으로 수영장을 오래 다니다보면 의외로 심장마비로 돌아가시는 분들을 보게 된다. 심장마비 정도는 아니지만 갑자기 차가운 물에 놀래서 담이 결리는 경우도 있다. 따라서 수영을 하기 전에는 꼭 준비운동을 하도록 해야 한다.\n준비운동은 별것 없이 간단하게 5분정도 관절을 돌려주기만 해도 된다. 특히 목, 손목/발목, 어깨, 무릎, 허리 정도만 잘 돌려도 상당히 도움이 된다. 주의할 점은 빠르게 돌리면 오히려 인대나 골격에 부상이 생기므로 보통의 속도로 돌리도록 한다. 그리고 남성이라면 팔굽혀펴기를 5~10회 정도 하는 것이 좋다. 팔굽혀펴기는 심장을 워밍업 시키는데 굉장히 좋다.\n그리고 수영을 하다보면 특정 관절이나 근육 부분이 너무 뜨겁다고 느낄 정도로 열이 오르고 아프다면 그걸 이겨내려고 하기보단 쉬도록 하자. 수영하면서 호흡이 가쁜 것은 괜찮지만 관절이나 근육이 아픈데도 이걸 극기훈련으로 여기는 분들이 있는데, 염증과 싸워서 얻을 것은 골병밖에 없다. 또한 천천히 오래 하는 수영보다 약간 부하를 주면서 빠르게 단거리, 중거리 수영을 하는게 심장 및 골격근에 도움이 되는 경우가 많다.\n그러면 이번에는 수영에서 조심하지 않으면 생기는 부상에 대해서 살펴보자. 먼저 수영에서 가장 많이 부상을 당하는 영법은 의외로 배영(背泳, backstroke)이다. 배영으로 생기는 부상은 어깨와 주로 무릎, 발목이다.\n \n1. 어깨 부상\n앞서 언급한대로 배영을 하다보면 어깨쪽에 부상이 종종 생긴다. 특히 충돌증후군이 생기는 경우가 많다.\n충돌증후군에 의한 회전근개부상 (출처 헬스데일리)\n\n\n충돌증후군은 어깨 위뼈와 아래뼈의 간격이 좁아져서 서로 부딪히는 것을 의미한다. 보통 몸이 뻣뻣하거나 30대중후반 이상으로 나이가 있는 경우에 발생한다. 배영을 배울때 팔을 머리쪽으로 붙이라고 하는 경우가 많은데, 그건 선수들이나 가능한 것이고, 일반인들은 그렇게 하다간 부상을 당할 수 있다. 이건 강사분들이 운동을 하던 사람들이라 본인들의 어깨 관절이 일반인보다 부드러운 것을 잘 몰라서 그렇다고 생각된다.\n어깨충돌증후군이 발생해서 어깨 내부가 염증으로 부어있는 상태에서 계속 수영을 강행하면 회전근개에 부상을 입거나 최악의 경우 파열까지도 일어난다. 그리고 회전근개가 파열되면 최소 1~2년은 아웃이다. 따라서 배영을 하고 난 뒤에 어깨가 아프다면 수영을 1~2주 정도 쉬어보고, 배영시 어깨를 적당히 붙이고, 롤링을 통해 어깨에 무리를 주지 않도록 자세를 교정하는게 좋다. 상황에 따라서는 병원(재활의학과, 정형외과)에 가서 소염진통제를 처방받거나 더 심하다면 체외충격파 치료를 받는 것도 좋다.\n체외충격파의 경우에는 통증이나 파열 부위에 따라서 다르지만 치료 및 회복에 걸리는 시간이 최소 3~6개월 정도이다. 따라서 체외충격파 치료까지 가지 않으려면 되도록이면 통증을 참으면서 수영하지는 말아야 한다. 참고로 본인도 회전근개파열로 인해 거의 2년동안 수영을 쉰 적이 있다. 체외충격파만 20회 가까이 받았고, 소염진통제, 도수치료 등등 안해본 것이 없다. 이 중에서 제일 효과가 좋았던 것은 단연코 체외충격파와 COX-2 소염진통제였다.\n \n2. 늑연골염\n수영은 가슴을 많이 쓰는 운동이므로 의외로 가슴 골격에 부상을 입기 쉽다. 그 중에 대표적인 것이 늑연골염이다.\n늑연골염\n\n\n\n갈비뼈에는 서로 잡아주는 연골로 늑연골이라는 것이 있다. 그런데 수영중에 롤링이나 접영, 평영, 배영을 하는 경우에는 평소에는 쓰지 않던 늑연골이 움직이게 되어 염증이 발생할 수 있다. 일반적으로 완전 초보보다는 중급~상급 정도에서 종종 많이 생긴다.\n늑연골쪽에 염증이 생기면 깊게 숨을 들이쉬거나 내쉴 때 흉통이 생긴다. 혹은 잠을 자려고 누웠을때 심장이나 폐쪽이 아프게 된다. 따라서 사람들이 심장병으로 오인하기도 한다.\n만일 수영 후 흉통이 생긴다면 명치나 옆갈비, 등쪽에 파스(소염 효과가 좋은 디클로페낙나트륨을 추천)를 붙이도록 한다. 그리고 1~2주 정도 수영을 쉬어보면 흉통이 가라앉는다. 그래도 낫지 않는다면 병원에서 COX-2 소염진통제를 처방 받는게 좋다. \n\n \n3. 팔꿈치 부상\n팔꿈치는 자유형을 장거리로 하는 경우에 주로 생긴다. 따라서 팔꿈치에 통증이 있다면 장거리 수영을 하지 않는 것이 좋다. 그 대신에 천천히 자유형을 10바퀴하는 것보다 빠르게 2~3바퀴를 하고 팔꿈치의 열을 충분히 식히는 방식으로 수영하는 것이 좋다.\n \n4. 무릎, 발목 부상\n수영을 할 때 발차기를 굉장히 쎄게 차는 분들이 있는데, 이런 경우 나중에 무릎이나 발목에 부상이 생길 수 있다. 물론 단거리 속도를 높일때는 강하게 차는게 좋지만 자신의 인대와 골격이 그걸 버티지 못하는데 강하게 차다보면 결국 부상이 생긴다.\n특히 평영할 때 너무 강하게 발을 차다보면 반월상연골을 다칠 수 있다. 반월상연골은 한번 다치면 재생이 불가능하므로 조심해야 한다. 반월상연골 파열의 특징은 무릎을 바늘로 찌르는 듯한 통증이 무작위로 나타나고, 양반다리를 하기 힘들어진다. (참고로 양반다리하다가도 뚝~ 소리와 함께 반월상연골이 파열되는 케이스가 있으니 조심해야 한다) \n만일 발목이나 무릎이 아프다면 TI영법(Total immersion)을 사용해서 최대한 부상없이 수영하도록 한다. TI영법은 근육량이 적거나 혹은 나이가 좀 있는 경우라면 적극적으로 배우기를 추천한다. 아래 레퍼런스에 영상 링크를 적어두었다. TI영법은 꽤 유명한 영법이므로 유튜브에서 검색해도 바로 볼 수 있다.\n \n결론\n수영은 안전한 운동이지만 그래도 어깨, 늑골, 팔꿈치, 무릎, 발목등의 부상은 종종 있는 편이므로 이 부분만 조금 더 조심하면 좋다. 조심히 운동하면 70~80대가 되어도 할 수 있는 것이 수영이므로 젊을때 자세를 잘 잡아두는 것이 좋다.\n \n레퍼런스\n어깨충돌증후군, 헬스데일리, https://www.wealthdaily.co.kr/1481\nTI영법,  https://www.youtube.com/watch?v=B0PlagwpSpc",
        "guid": "http://sunyzero.tistory.com/302",
        "categories": [
          "취미 관련/수영",
          "ti영법",
          "늑연골염",
          "반월상연골 파열",
          "수영 부상",
          "회전근개 파열"
        ],
        "isoDate": "2024-09-21T05:41:35.000Z"
      }
    ]
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김병환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "Apache Flink - Hello, World!",
        "link": "https://sungjk.github.io/2024/09/18/apache-flink.html",
        "pubDate": "2024-09-18T00:00:00+00:00",
        "content": "\n            \n            &lt;p&gt;Apache Flink를 처음 접하신 분이나 간단한 예제를 작성해보고 싶은 분들을 위해 작성한 글이에요. Architecture를 포함한 자세한 내부 동작 방식은 &lt;strong&gt;&lt;a href=&quot;https://flink.apache.org/&quot;&gt;Apache Flink 공식 문서&lt;/a&gt;&lt;/strong&gt;를 참고해주시길 바랄게요.&lt;/p&gt;\n\n&lt;h1 id=&quot;apache-flink&quot;&gt;Apache Flink&lt;/h1&gt;\n\n&lt;h3 id=&quot;stateful-computations-over-data-streams&quot;&gt;Stateful Computations over Data Streams&lt;/h3&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;Apache Flink is a framework and distributed processing engine for stateful computations over unbounded and bounded data streams. Flink has been designed to run in all common cluster environments, perform computations at in-memory speed and at any scale.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://flink.apache.org/&quot;&gt;Apache Flink(이하 Flink)&lt;/a&gt;&lt;/strong&gt;는 데이터 스트리밍 및 배치 처리용 오픈 소스 프레임워크입니다. 비슷하게 데이터 스트리밍이나 배치 프로세싱을 위해 Kafka Streams, Spark, Kinesis 등이 있는데요, Flink 공식 홈페이지에 들어가면 먼저 Catchphrase가 눈에 들어옵니다. &lt;strong&gt;Stateful Computations over Data Streams&lt;/strong&gt;. 왜 이 문구를 강조하고 있을까요?&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/apache-flink.png&quot; alt=&quot;Apache Flink&quot; title=&quot;Apache Flink&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;스트림(Stream)&lt;/strong&gt;이란 &lt;strong&gt;특정 시점에 일어난 이벤트의 연속&lt;/strong&gt;을 의미합니다. 예를 들어, 온도, 습도 등의 데이터를 실시간으로 수집하는 IoT 디바이스에서는 변화하는 온도와 습도가 스트림으로 구성될 수 있어요. 사용자가 앱에서 특정 버튼을 클릭한다던가 피드에서 스크롤을 하는 등의 행동 데이터들도 스트림으로 구성될 수 있습니다. 이처럼 스트림은 특정 시점에 일어나는 작고 독립된 변하지 않는 불변 객체입니다. 입력 데이터가 고정된 크기의 데이터 셋으로 제공되는 &lt;strong&gt;배치 처리(Batch Processing)&lt;/strong&gt;와 다르게, 스트림 처리는(Stream Processing)은 입력 데이터가 지속적으로 발생하고 이걸 실시간으로 처리하는게 목표예요. Flink는 단순히 쏟아지는 데이터를 처리하는걸 목표로 하지 않고, 세션 윈도우(Session Window, 특정 시간 동안의 사용자 활동)나 집계(Aggregation, 평균, 총합 등) 등 &lt;strong&gt;메모리 내에서 상태를 유지하고 관리&lt;/strong&gt;할 수 있는 강력한 기능을 제공합니다. 웹 애플리케이션에서 사용자가 다양한 페이지를 방문하는 동안 각 사용자의 세션을 실시간으로 추적한다던가, 결제 시스템에서 실시간으로 거래 데이터를 모니터링하고 특정 패턴을 찾아 이상 거래를 탐지하는 등 실시간으로 발생하는 스트림 데이터에서 상태를 유지하면서 연산을 수행할 수 있는 기능을 제공합니다. 그리고 Flink의 상태 관리 기능 덕분에 애플리케이션 개발자는 이 도구를 활용해서 다양한 실시간 애플리케이션을 구축하고 쉽게 운영할 수 있게 되었습니다.&lt;/p&gt;\n\n&lt;p&gt;도구를 잘 쓰려면 이 도구가 어떻게 돌아가는지, 그리고 어디에 쓰는 것이고 어떻게 쓰는 건지 아는게 중요하기 때문에 &lt;a href=&quot;https://flink.apache.org/what-is-flink/flink-architecture/&quot;&gt;Architecture&lt;/a&gt;와 &lt;a href=&quot;https://flink.apache.org/what-is-flink/flink-applications/&quot;&gt;API&lt;/a&gt;도 참고하시면 좋겠어요. Flink 학습을 위해 온라인 강의도 들어봤는데 아직까지는 공식 문서가 최고라 생각해요. 여기서 따로 설명은 하지 않겠습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-task-manager.png&quot; alt=&quot;Flink Task Manager&quot; title=&quot;Flink Task Manager&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink Runtime Flow&lt;/center&gt;\n\n&lt;h3 id=&quot;advantages&quot;&gt;Advantages&lt;/h3&gt;\n\n&lt;p&gt;제가 서버 개발자니.. 개발자 관점에서 Flink의 가장 대표적인 특징을 꼽으라면 &lt;strong&gt;Standalone&lt;/strong&gt;과 &lt;strong&gt;Checkpoints&lt;/strong&gt;를 이야기하고 싶습니다. 일례로 데이터 스트리밍에 많이 활용되는 &lt;a href=&quot;https://kafka.apache.org/documentation/streams/&quot;&gt;Apache Kafka Streams&lt;/a&gt;은 애플리케이션의 일부로 실행되는 라이브러리인 반면, Flink는 자체 스트림 처리 엔진을 가지고 있는 프레임워크라서 독립적으로 배포와 실행이 가능합니다. IDEA에서 코드만 작성해서 실행하면 내장된 Mini Cluster를 기반으로 쉽게 디버깅까지 할 수 있습니다. 그리고 체크포인트(Checkpoints)를 통해 애플리케이션의 상태를 주기적으로 저장하여 장애 발생시 자동으로 복구해줍니다(Fault-tolerance). 정확히 한 번만(Exactly-Once) 처리한다던가 Two-Phase Commit 기반의 원자적 커밋을 통해 데이터 일관성을 보장할 수도 있습니다.&lt;/p&gt;\n\n&lt;p&gt;그리고 하나만 더 꼽으라면 데이터 프로세싱을 위한 고수준의 API에 대해서 이야기하고 싶어요. &lt;a href=&quot;https://spark.apache.org/docs/latest/rdd-programming-guide.html&quot;&gt;Spark RDD&lt;/a&gt;를 다뤄 보신 분들이라면 아주 쉽게 사용해볼 수 있을거라 생각해요.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/spark-flink-operator.png&quot; alt=&quot;Flink Task Manager&quot; title=&quot;Flink Task Manager&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;이 Operator들은 Spark RDD를 모르더라도 Java나 Kotlin을 사용하거나 함수형 프로그래밍의 고차 함수(Higher-order Functions)에 익숙한 분들이라면 쉽게 접근할 수 있을거라 생각합니다. 쉴 새 없이 들어오는 데이터 스트림을 다른 형태로 변환하고 싶을때에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map&lt;/code&gt;과 같은 함수를 이용해서 새로운 데이터 스트림으로 변환하고, 특정 조건에 만족하는 데이터만 필터링하고 싶다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filter&lt;/code&gt; 함수를 사용하면 됩니다.&lt;/p&gt;\n\n&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 입력 데이터 스트림 생성&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// Filter: 짝수인 요소만 필터링&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;filtered&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FilterFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// Map: 필터링된 요소를 문자열로 변환&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;stringified&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filtered&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MapFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;use-cases&quot;&gt;Use Cases&lt;/h3&gt;\n\n&lt;p&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-stable/&quot;&gt;Apache Flink Documentation&lt;/a&gt;을 살펴보면 Source와 Sink라는 용어가 많이 보이는데, Apache Flink 뿐만 아니라 데이터 엔지니어링에서 흔히 사용되는 용어입니다. &lt;strong&gt;Source는 데이터 파이프라인의 시작 지점&lt;/strong&gt;으로, 데이터를 수집하여 시스템에 입력하는 역할을 합니다. &lt;strong&gt;Sink는 데이터 파이프라인의 종료 지점&lt;/strong&gt;으로, 데이터를 외부 시스템으로 출력하여 저장하거나 전송하는 역할을 합니다. 데이터 소스(Source)와 데이터 싱크(Sink)로서 외부 시스템과 데이터를 주고 받을 수 있도록 여러 Connector를 제공하고 있어요. 현재(2024.09.18) 기준으로 아래와 같은 Source, Sink Connector를 제공하고 있습니다. 이 내용은 &lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/overview/#flink-project-connectors&quot;&gt;Flink Project Connectors&lt;/a&gt;에서 확인할 수 있어요.&lt;/p&gt;\n\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/kafka/&quot;&gt;Apache Kafka&lt;/a&gt; (source/sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/dynamodb/&quot;&gt;Amazon DynamoDB&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/kinesis/&quot;&gt;Amazon Kinesis Data Streams&lt;/a&gt; (source/sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/elasticsearch/&quot;&gt;Elasticsearch&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/opensearch/&quot;&gt;Opensearch&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/filesystem/&quot;&gt;FileSystem&lt;/a&gt; (source/sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/jdbc/&quot;&gt;JDBC&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/mongodb/&quot;&gt;MongoDB&lt;/a&gt; (source/sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://bahir.apache.org/docs/flink/current/flink-streaming-redis/&quot;&gt;Redis&lt;/a&gt; (sink)&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://bahir.apache.org/docs/flink/current/flink-streaming-netty/&quot;&gt;Netty&lt;/a&gt; (source)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;데이터 소스(source)에서 실시간으로 데이터를 읽어서, 새로운 형태로 변환하거나 로컬 스토리지에 저장해놓고 SQL 쿼리를 통해 유의미한 결과를 만들고, 데이터 싱크(sink)에 데이터를 출력&lt;/strong&gt;합니다. 이런 기능이 있다면 우리는 어떤 문제를 효과적으로 해결할 수 있을까요? &lt;a href=&quot;https://flink.apache.org/what-is-flink/use-cases/&quot;&gt;공식 문서의 대표적인 유스케이스&lt;/a&gt;에서는 이벤트 드리븐 애플리케이션 개발과 데이터 분석 그리고 데이터 파이프라인에 구축의 기반을 다지는데 사용될 수 있다고 말하고 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-usecases-eventdrivenapps.png&quot; alt=&quot;Event-driven Applications&quot; title=&quot;Event-driven Applications&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink support event-driven applications&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-usecases-analytics.png&quot; alt=&quot;Data Analytics Applications&quot; title=&quot;Data Analytics Applications&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink support data analytics applications&lt;/center&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-usecases-datapipelines.png&quot; alt=&quot;Data Pipeline Applications&quot; title=&quot;Data Pipeline Applications&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink support data pipelines&lt;/center&gt;\n\n&lt;p&gt;잠깐 아주 간단한 예시 하나를 살펴볼게요. 사용자의 요청을 받아서 처리하는 웹 서버가 Database(DB)에 쓰기를 하면서 동시에 검색을 위해 Elastic Search(ES)에도 데이터를 적재한다고 가정해볼게요. 이 때 DB의 쓰기 연산과 ES로의 쓰기 연산이 서로 원자적으로 묶일 수 없다면 어떤 문제가 생길까요? DB에 쓰기는 성공하고 ES에 쓰기는 실패했으면, 사용자가 게시글을 쓰는데에 성공했지만 검색에는 노출이 안되는 문제가 발생할거에요. 그래서 이런 문제를 해결하기 위해 DB 쓰기와 ES 쓰기를 Kafka와 같은 이벤트 브로커를 활용해서 분리하는 전략을 취할 수 있어요. 이런 문제를 해결하기 위해 다양한 방법이 존재하는데, Flink로는 어떻게 해결할 수 있는지 살펴볼게요.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/sync-es.png&quot; alt=&quot;Sync Elastic Search&quot; title=&quot;Sync Elastic Search&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;별도 Worker를 통해 ES 데이터 적재&lt;/center&gt;\n\n&lt;p&gt;Flink 생태계에서 인기 있는 것 중 하나는 &lt;strong&gt;&lt;a href=&quot;https://nightlies.apache.org/flink/flink-cdc-docs-release-3.2/&quot;&gt;Flink CDC&lt;/a&gt;&lt;/strong&gt;입니다. Flink CDC는 &lt;a href=&quot;https://debezium.io/&quot;&gt;Debezium&lt;/a&gt;을 기반으로 데이터베이스의 변경 로그를 실시간으로 캡쳐해서 타겟 시스템으로 반영할 수 있게 도와주는 도구입니다. &lt;strong&gt;사용자가 DB에 쓰기 연산을 실행하면 Flink CDC가 변경 사항을 캡쳐해서 Kafka에 데이터 변경점을 기록하고, Flink 앱에서 변경점을 받아 변환을 한 다음 ES에 데이터를 적재&lt;/strong&gt;합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/flink-cdc-usage.png&quot; alt=&quot;Flink CDC Usage&quot; title=&quot;Flink CDC Usage&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;center&gt;Flink CDC 기반 ES 데이터 적재&lt;/center&gt;\n\n&lt;p&gt;Kafka와 같은 이벤트 브로커를 중심으로 ES 쓰기를 실행하니, 언뜻 보기엔 바로 위에서 이야기한 ‘ES 적재를 이벤트 기반으로 분리’와 별반 다르지 않아 보입니다. 그런데 Flink 기반으로 문제를 해결할 때 취할 수 있는 장점은 위에서 잠깐 이야기한 체크포인트(Checkpoint)를 활용할 수 있다는 것입니다. 장애 복구 관점에서 Worker에서 ES 쓰기를 어디까지 했는지 별도 저장소에 관리를 해야 할 필요가 있는데, Flink 기반의 데이터 처리는 체크포인트와 상태 관리를 통해 장애 복구 뿐만 아니라 데이터의 일관성 보장을 높일 수 있습니다. 복잡한 상태 관리와 장애 복구 등의 작업은 플랫폼(라이브러리나 프레임워크)에 적절히 위임하고, 엔지니어는 이런 도구를 잘 활용하여 어떤 가치를 창출할 수 있을지에 집중하는게 중요합니다. 이런 고민과 선택은 사용자에게 일관된 최상의 경험을 제공하는 길로 이어질 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;여기서 살펴본 건 하나의 예시일 뿐, 중요한 건 &lt;strong&gt;&apos;흐르는 데이터에 어떤 빨때를 꽂아서 어디에 활용해 볼 수 있을까?&apos;&lt;/strong&gt;라는 질문을 가지고 계속해서 고민하는 것입니다. 관습적으로 배치 잡을 사용해 처리하던 작업들을 스트리밍 애플리케이션으로 전환해서 처리할 수는 없을까요? 만약 데이터 처리를 위해 Spring Batch 부터 떠올린다면 Stream Processing도 함께 살펴보시길 추천할게요.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;quickstart&quot;&gt;Quickstart&lt;/h1&gt;\n\n&lt;p&gt;Apache Flink 애플리케이션을 실행하기 위해서는 먼저 Flink Cluster 환경 구축이 필요합니다. 클러스터를 통해 데이터를 병렬 처리하거나 내결함성을 제공해 데이터를 효율적으로 처리할 수 있습니다. 그리고 애플리케이션을 실행한다는 말은 Flink에 정의한 Job을 실행한다는 의미이기도 합니다. Cluster에는 실행 가능한 Jar 파일을 제출하면 되는데, 자바 애플리케이션 코드를 작성해서 빌드한 결과로 나온 Jar 파일을 제출하면 됩니다.&lt;/p&gt;\n\n&lt;p&gt;Production 환경에서 Flink 애플리케이션을 실행하려면 &lt;a href=&quot;https://aws.amazon.com/managed-service-apache-flink/&quot;&gt;Amazon Managed Service for Apache Flink&lt;/a&gt; 같은 솔루션을 써도 되고, &lt;a href=&quot;https://nightlies.apache.org/flink/flink-kubernetes-operator-docs-stable/docs/try-flink-kubernetes-operator/quick-start/&quot;&gt;Flink Kubernetes Operator&lt;/a&gt;를 이용해서 Kubernetes 위에서 Flink Cluster와 Job을 배포하고 관리할 수 있습니다. 여기서는 Mac OS 환경의 로컬 PC에서 Apache Flink 애플리케이션을 실행하는 여러 방법을 살펴보겠습니다.&lt;/p&gt;\n\n&lt;h3 id=&quot;1-idea에서-프로그램-실행&quot;&gt;1. IDEA에서 프로그램 실행&lt;/h3&gt;\n\n&lt;p&gt;가장 편하고 유용한 방법은 IntelliJ IDEA에서 main 함수를 바로 실행하는 것입니다. Flink 애플리케이션을 실행하려면 Cluster에 실행 가능한 Jar 파일을 제출해야 되는데, IDEA에서 버튼만 누르면 바로 실행이 되고 디버깅까지 되니 신기할 따름입니다. 그 이유는 Apache Flink에서는 로컬 환경에서 Flink Cluster를 에뮬레이션할 수 있게끔 &lt;a href=&quot;https://github.com/apache/flink/blob/master/flink-runtime/src/main/java/org/apache/flink/runtime/minicluster/MiniCluster.java&quot;&gt;MiniCluster&lt;/a&gt;를 제공하기 때문입니다. 그래서 Flink 애플리케이션을 만드는 개발자는 실제 클러스터를 구축할 필요 없이 로컬 환경에서 Flink Cluster에 앱을 실행하는 것처럼 시뮬레이션을 할 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-run-application.png&quot; alt=&quot;IDEA Run Application&quot; title=&quot;IDEA Run Application&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;2-local-flink-cluster-구축&quot;&gt;2. Local Flink Cluster 구축&lt;/h3&gt;\n\n&lt;p&gt;또 다른 방법은 직접 Flink Cluster를 로컬 환경에 구축해서 사용하는 것입니다. &lt;a href=&quot;https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/try-flink/local_installation/&quot;&gt;Apache Flink 공식 문서&lt;/a&gt;에서 Local Cluster를 구축할 수 있는 가이드를 제공하고 있습니다. Binary Release를 다운 받아서 압축을 푼 다음 아래 명령어를 실행해서 Flink Cluster를 시작하고 Jar 파일을 실행시켜서 Job을 제출할 수 있습니다.&lt;/p&gt;\n\n&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Flink Cluser 중지\n$ ./bin/stop-cluster.sh\n\n# Flink Cluser 시작\n$ ./bin/start-cluster.sh\n\n# Flink Cluster에 Flink Job 제출(실행)\n$ ./bin/flink run examples/streaming/WordCount.jar\n\n# Flink Cluster 로그 확인\n$ tail -f log/flink-*\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;2-1-idea에-flink-plugin-설치&quot;&gt;2-1. IDEA에 Flink Plugin 설치&lt;/h3&gt;\n\n&lt;p&gt;IntelliJ IDEA에서 Big Data Tools 플러그인 번들로 함께 사용할 수 있는 &lt;a href=&quot;https://plugins.jetbrains.com/plugin/21702-flink&quot;&gt;Flink Plugin&lt;/a&gt;을 제공합니다. 이 플러그인을 사용하면 Flink Cluster를 모니터링하거나 직접 Flink Job을 제출할 수 있는 기능을 제공합니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-settings-flink.png&quot; alt=&quot;IDEA Settings&quot; title=&quot;IDEA Settings&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-settings-flink-test-connection.png&quot; alt=&quot;IDEA Test Connection&quot; title=&quot;IDEA Test Connection&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;2-2-local-cluster에-jar-제출&quot;&gt;2-2. Local Cluster에 Jar 제출&lt;/h3&gt;\n\n&lt;p&gt;IDEA에 생성된 Flink Console에서 Submit New Job 클릭후 + 버튼을 누르면 빌드된 Jar 파일을 선택할 수 있습니다. Jar 파일을 선택하고 나서 실행(Run) 버튼을 클릭하면 Flink Cluster에 Jar 파일이 제출되고 정상이라면 Job이 실행됩니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-submit-new-job.png&quot; alt=&quot;IDEA Submit New Job&quot; title=&quot;IDEA Submit New Job&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-run-jar.png&quot; alt=&quot;IDEA Run Jar&quot; title=&quot;IDEA Run Jar&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-run-jar-2.png&quot; alt=&quot;IDEA Run Jar&quot; title=&quot;IDEA Run Jar&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;h3 id=&quot;2-3-local-cluster-모니터링&quot;&gt;2-3. Local Cluster 모니터링&lt;/h3&gt;\n\n&lt;p&gt;Console에서 Open in Browser 버튼을 클릭하면 현재 모니터링으로 연결된 Cluster의 상태를 확인할 수 있는 대시보드가 열립니다. 이 대시보드에서는 현재 실행중인 Job을 포함하여 Flink Cluster의 Task Manager, Job Manager 그리고 Clsuter logs 등을 확인할 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-cluster-web.png&quot; alt=&quot;IDEA Cluster Web&quot; title=&quot;IDEA Cluster Web&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;img src=&quot;/images/2024/09/18/idea-flink-cluster-dashboard.png&quot; alt=&quot;IDEA Cluster Dashboard&quot; title=&quot;IDEA Cluster Dashboard&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;hello-world&quot;&gt;Hello, World!&lt;/h1&gt;\n\n&lt;p&gt;이제 Flink 애플리케이션 실행 환경이 구축되었으니 모든 프로그래밍의 시작인 Hello, World를 만들어보겠습니다. 프로그래밍 언어의 첫 시작은 콘솔에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello, World!&lt;/code&gt; 문자열을 출력하는 것인데, 데이터 프로세싱에서는 단어 개수를 세는 Word Count를 입문용 예제로 다루고 있습니다. 여기서는 Flink를 활용해 문자열에 포함된 특정 단어들의 개수를 출력하는 Word Count Job을 만들어보겠습니다. 전체 코드는 &lt;a href=&quot;https://github.com/sungjk/flink-hello-world&quot;&gt;Github - flink-hello-world&lt;/a&gt;에서 확인할 수 있어요.&lt;/p&gt;\n\n&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.api.common.functions.FlatMapFunction&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.api.common.typeinfo.TypeHint&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.api.common.typeinfo.TypeInformation&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.api.java.tuple.Tuple2&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.streaming.api.environment.StreamExecutionEnvironment&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.flink.util.Collector&lt;/span&gt;\n\n&lt;span class=&quot;k&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WordCounterJob&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 데이터 소스로 사용할 문자열&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;words&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;\n            The quick brown fox jumps over the lazy dog.\n            The quick blue fox jumps over the lazy dog.\n            The quick brown cat jumps over the lazy dog.\n            The quick blue cat jumps over the lazy dog.\n        &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;trimIndent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n\n    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 스트리밍 실행 환경 생성&lt;/span&gt;\n        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StreamExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 문자열 데이터 소스 생성&lt;/span&gt;\n        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;in-memory-source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FlatMapFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Collector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                    &lt;span class=&quot;c1&quot;&gt;// 입력 문자열을 소문자로 변환하고, 정규식을 사용하여 단어로 분리&lt;/span&gt;\n                    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;tokens&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lowercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\\\\W+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toRegex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;\n                    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                            &lt;span class=&quot;c1&quot;&gt;// 각 단어와 그 단어의 개수를 나타내는 튜플(Tuple2&amp;lt;String, Int&amp;gt;)로 수집&lt;/span&gt;\n                            &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;\n                        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;\n            &lt;span class=&quot;c1&quot;&gt;// 반환 타입 정보 지정(Generic 타입의 한계를 해결하기 위해 TypeInformation을 사용)&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TypeInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TypeHint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}))&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tokenizer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n            &lt;span class=&quot;c1&quot;&gt;// 단어별로 그룹핑&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keyBy&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;c1&quot;&gt;// 각 그룹별로 두번째 필드인 단어의 개수를 합산&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;counter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 최종 결과를 표준 출력에 출력하는 싱크 연산 추가&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;print-sink&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 스트리밍 작업 실행&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JeremyWordCount&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;아마 95% 이상의 Flink 애플리케이션은 Java 언어로 작성되어 있을거라 생각합니다(샘플 예제를 몇가지 찾아봤지만 코틀린 코드는 발견하지 못했어요). 저는 자바 언어를 썩 즐겨 쓰지는 않아서 Flink 애플리케이션도 Kotlin으로 작성하고 있습니다. 그러다보니 아주 간혹 타입 때문에 귀찮을 때가 있는데 크게 불편할 정도는 아닙니다.&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;troubleshootings&quot;&gt;Troubleshootings&lt;/h1&gt;\n\n&lt;p&gt;실행 환경 구축부터 스스로 Word Count 앱을 작성하기까지 몇가지 우여곡절이 있었습니다. 코드는 정말 몇 줄 안되는데 빌드 과정, Jar 파일 생성 문제, Java의 Type Erase 현상 등 여러 문제들을 겪고 해결하는 과정을 거쳤습니다.&lt;/p&gt;\n\n&lt;h3 id=&quot;jar-내에-main-class-찾을-수-없음&quot;&gt;Jar 내에 Main class 찾을 수 없음&lt;/h3&gt;\n\n&lt;p&gt;에러 로그:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Neither&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;(해결 방법) Jar file에 Main class name 명시:&lt;/p&gt;\n\n&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// application(main)&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// entry point is not a method inside the class&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// use @JvmStatic annotation inside the companion object&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;companion&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;nd&quot;&gt;@JvmStatic&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n            &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n            &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// build.gradle.kts&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;archiveFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello-world.jar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;nf&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// add main class name&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Main-Class&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;io.sungjk.flink.Main&quot;&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;jar-내에-flink-job-찾을-수-없음&quot;&gt;Jar 내에 Flink Job 찾을 수 없음&lt;/h3&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;Could&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;job&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAR&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;file:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JAR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;does&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;exist:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;(해결 방법) Main Class 내에 테스트할 Job 추가:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\n&lt;span class=&quot;n&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WordCounterJob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;args:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StreamExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;\n        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;JeremyWordCount&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;gradle-모듈-의존성-찾지-못함&quot;&gt;gradle 모듈 의존성 찾지 못함&lt;/h3&gt;\n\n&lt;p&gt;에러 로그:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ProgramInvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;An&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occurred&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invoking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;method:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sungjk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PackagedProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;callMainMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PackagedProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;378&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PackagedProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;invokeInteractiveModeForExecution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;PackagedProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;223&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ClientUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;executeProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ClientUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;113&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CliFrontend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;executeProgram&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CliFrontend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1026&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;(해결 방법) Shadow Plugin 사용해서 모든 의존성을 단일 JAR 파일로 패키징한 후 shadowJar task 실행:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.github.johnrengelman.shadow&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;7.1.2&quot;&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n\n&lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shadowJar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;archiveFileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello-world.jar&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Main-Class&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;io.sungjk.flink.Main&quot;&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;h3 id=&quot;flink-cluster에서-타입-추론-불가type-erasure&quot;&gt;Flink Cluster에서 타입 추론 불가(Type Erasure)&lt;/h3&gt;\n\n&lt;p&gt;에러 로그:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;kt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;could&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;determined&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;automatically&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;due&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;erasure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;You&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;give&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hints&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(...)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transformation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;letting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ResultTypeQueryable&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;\n\t&lt;span class=&quot;nc&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Transformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOutputType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Transformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;557&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;streaming&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;datastream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;193&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;streaming&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;datastream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;KeyedStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;KeyedStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;118&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flink&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;streaming&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;datastream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keyBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;293&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;p&gt;(해결 방법) Flink의 TypeInformation 클래스를 사용하여 반환 타입 명시:&lt;/p&gt;\n\n&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FlatMapFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;\n        &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// Flink의 TypeInformation 클래스를 사용하여 반환 타입 명시&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TypeInformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TypeHint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Tuple2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}))&lt;/span&gt;\n    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tokenizer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;마치며&quot;&gt;마치며&lt;/h1&gt;\n\n&lt;p&gt;쏟아지는 데이터를 실시간으로 활용할 수 있는 환경이 갖추어지니 할 수 있는게 정말 많아졌습니다. 단순히 Apache Flink라는 새로운 도구에 익숙해진 건 단편적인 예시일 뿐, 데이터에 대해 눈이 떠졌다랄까요. 데이터 엔지니어 동료와 처음 티타임을 할 때 데이터에 무지한 저의 모습을 스스로 제 3자의 시각에서 바라보고 있는 느낌이 들었고, 머릿속에서는 새로운 터널에 들어서는 것만 같았습니다. 짧게는 3개월, 길게는 1년 뒤에 달라져 있을 제 모습이 상상되기도 했어요. 멋진 동료 덕분에 성장하고 있다는걸 느낄 수 있었고 도움이 필요하면 저도 많이 도와주고 싶다는 생각이 들었습니다.&lt;/p&gt;\n\n&lt;p&gt;이제 백엔드 엔지니어로서 다룰 수 있는 연장이 하나 더 늘어났습니다. 경계해야 할 건 모든게 다 못으로 보이지 않게 만드는 것. 실시간으로 데이터를 처리할 수 있는 능력이 생겼으니 모든 곳에 다 스트림 앱을 갖다 붙이고 싶을 수 있습니다. 그래서 이 도구로 해결하기에 적당한 문제가 무엇인지 알고 있는게 중요한데요. 처리할 데이터 소스와 싱크를 지원하는지 알아보고, 실시간성(Real-time) 그리고 Window 기반으로 이벤트를 처리해야 할 문제에 Flink를 추천하고 싶습니다. 실시간으로 발생하는 거래 데이터가 정상인지, 이상거래는 아닌지 &lt;a href=&quot;https://flink.apache.org/what-is-flink/flink-applications/#state&quot;&gt;State&lt;/a&gt;와 &lt;a href=&quot;https://flink.apache.org/what-is-flink/flink-applications/#time&quot;&gt;Time&lt;/a&gt;을 활용해서 판단할 수 있습니다.&lt;/p&gt;\n\n&lt;p&gt;마지막으로, 한국에도 Flink를 사용하는 회사들이 점점 많아지고 있는것 같은데, 기술 교류와 레퍼런스가 많아졌으면 좋겠다는 생각이 들었습니다. 생태계는 계속해서 발전하고 있다는 느낌이 드는데, 대부분 비슷하겠지만 구체적으로 어떤 니즈를 가지고 이 기술을 도입해서 사용하고 있는지가 궁금했습니다. 자주, 더 많은 기술 공유가 있기를!&lt;/p&gt;\n\n&lt;hr /&gt;\n\n&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;\n&lt;ul&gt;\n  &lt;li&gt;&lt;a href=&quot;https://flink.apache.org/&quot;&gt;Apache Flink&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=&quot;https://www.confluent.io/learn/apache-flink/&quot;&gt;What is Apache Flink?&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n            \n          ",
        "contentSnippet": "<p>Apache Flink를 처음 접하신 분이나 간단한 예제를 작성해보고 싶은 분들을 위해 작성한 글이에요. Architecture를 포함한 자세한 내부 동작 방식은 <strong><a href=\"https://flink.apache.org/\">Apache Flink 공식 문서</a></strong>를 참고해주시길 바랄게요.</p>\n\n<h1 id=\"apache-flink\">Apache Flink</h1>\n\n<h3 id=\"stateful-computations-over-data-streams\">Stateful Computations over Data Streams</h3>\n\n<blockquote>\n  <p>Apache Flink is a framework and distributed processing engine for stateful computations over unbounded and bounded data streams. Flink has been designed to run in all common cluster environments, perform computations at in-memory speed and at any scale.</p>\n</blockquote>\n\n<p><strong><a href=\"https://flink.apache.org/\">Apache Flink(이하 Flink)</a></strong>는 데이터 스트리밍 및 배치 처리용 오픈 소스 프레임워크입니다. 비슷하게 데이터 스트리밍이나 배치 프로세싱을 위해 Kafka Streams, Spark, Kinesis 등이 있는데요, Flink 공식 홈페이지에 들어가면 먼저 Catchphrase가 눈에 들어옵니다. <strong>Stateful Computations over Data Streams</strong>. 왜 이 문구를 강조하고 있을까요?</p>\n\n<p><img src=\"/images/2024/09/18/apache-flink.png\" alt=\"Apache Flink\" title=\"Apache Flink\" class=\"center-image\" /></p>\n\n<p><strong>스트림(Stream)</strong>이란 <strong>특정 시점에 일어난 이벤트의 연속</strong>을 의미합니다. 예를 들어, 온도, 습도 등의 데이터를 실시간으로 수집하는 IoT 디바이스에서는 변화하는 온도와 습도가 스트림으로 구성될 수 있어요. 사용자가 앱에서 특정 버튼을 클릭한다던가 피드에서 스크롤을 하는 등의 행동 데이터들도 스트림으로 구성될 수 있습니다. 이처럼 스트림은 특정 시점에 일어나는 작고 독립된 변하지 않는 불변 객체입니다. 입력 데이터가 고정된 크기의 데이터 셋으로 제공되는 <strong>배치 처리(Batch Processing)</strong>와 다르게, 스트림 처리는(Stream Processing)은 입력 데이터가 지속적으로 발생하고 이걸 실시간으로 처리하는게 목표예요. Flink는 단순히 쏟아지는 데이터를 처리하는걸 목표로 하지 않고, 세션 윈도우(Session Window, 특정 시간 동안의 사용자 활동)나 집계(Aggregation, 평균, 총합 등) 등 <strong>메모리 내에서 상태를 유지하고 관리</strong>할 수 있는 강력한 기능을 제공합니다. 웹 애플리케이션에서 사용자가 다양한 페이지를 방문하는 동안 각 사용자의 세션을 실시간으로 추적한다던가, 결제 시스템에서 실시간으로 거래 데이터를 모니터링하고 특정 패턴을 찾아 이상 거래를 탐지하는 등 실시간으로 발생하는 스트림 데이터에서 상태를 유지하면서 연산을 수행할 수 있는 기능을 제공합니다. 그리고 Flink의 상태 관리 기능 덕분에 애플리케이션 개발자는 이 도구를 활용해서 다양한 실시간 애플리케이션을 구축하고 쉽게 운영할 수 있게 되었습니다.</p>\n\n<p>도구를 잘 쓰려면 이 도구가 어떻게 돌아가는지, 그리고 어디에 쓰는 것이고 어떻게 쓰는 건지 아는게 중요하기 때문에 <a href=\"https://flink.apache.org/what-is-flink/flink-architecture/\">Architecture</a>와 <a href=\"https://flink.apache.org/what-is-flink/flink-applications/\">API</a>도 참고하시면 좋겠어요. Flink 학습을 위해 온라인 강의도 들어봤는데 아직까지는 공식 문서가 최고라 생각해요. 여기서 따로 설명은 하지 않겠습니다.</p>\n\n<p><img src=\"/images/2024/09/18/flink-task-manager.png\" alt=\"Flink Task Manager\" title=\"Flink Task Manager\" class=\"center-image\" /></p>\n\n<center>Flink Runtime Flow</center>\n\n<h3 id=\"advantages\">Advantages</h3>\n\n<p>제가 서버 개발자니.. 개발자 관점에서 Flink의 가장 대표적인 특징을 꼽으라면 <strong>Standalone</strong>과 <strong>Checkpoints</strong>를 이야기하고 싶습니다. 일례로 데이터 스트리밍에 많이 활용되는 <a href=\"https://kafka.apache.org/documentation/streams/\">Apache Kafka Streams</a>은 애플리케이션의 일부로 실행되는 라이브러리인 반면, Flink는 자체 스트림 처리 엔진을 가지고 있는 프레임워크라서 독립적으로 배포와 실행이 가능합니다. IDEA에서 코드만 작성해서 실행하면 내장된 Mini Cluster를 기반으로 쉽게 디버깅까지 할 수 있습니다. 그리고 체크포인트(Checkpoints)를 통해 애플리케이션의 상태를 주기적으로 저장하여 장애 발생시 자동으로 복구해줍니다(Fault-tolerance). 정확히 한 번만(Exactly-Once) 처리한다던가 Two-Phase Commit 기반의 원자적 커밋을 통해 데이터 일관성을 보장할 수도 있습니다.</p>\n\n<p>그리고 하나만 더 꼽으라면 데이터 프로세싱을 위한 고수준의 API에 대해서 이야기하고 싶어요. <a href=\"https://spark.apache.org/docs/latest/rdd-programming-guide.html\">Spark RDD</a>를 다뤄 보신 분들이라면 아주 쉽게 사용해볼 수 있을거라 생각해요.</p>\n\n<p><img src=\"/images/2024/09/18/spark-flink-operator.png\" alt=\"Flink Task Manager\" title=\"Flink Task Manager\" class=\"center-image\" /></p>\n\n<p>이 Operator들은 Spark RDD를 모르더라도 Java나 Kotlin을 사용하거나 함수형 프로그래밍의 고차 함수(Higher-order Functions)에 익숙한 분들이라면 쉽게 접근할 수 있을거라 생각합니다. 쉴 새 없이 들어오는 데이터 스트림을 다른 형태로 변환하고 싶을때에는 <code class=\"language-plaintext highlighter-rouge\">map</code>과 같은 함수를 이용해서 새로운 데이터 스트림으로 변환하고, 특정 조건에 만족하는 데이터만 필터링하고 싶다면 <code class=\"language-plaintext highlighter-rouge\">filter</code> 함수를 사용하면 됩니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// 입력 데이터 스트림 생성</span>\n<span class=\"kd\">val</span> <span class=\"py\">input</span><span class=\"p\">:</span> <span class=\"nc\">DataStream</span><span class=\"p\">&lt;</span><span class=\"nc\">Int</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"n\">env</span><span class=\"p\">.</span><span class=\"nf\">fromElements</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// Filter: 짝수인 요소만 필터링</span>\n<span class=\"kd\">val</span> <span class=\"py\">filtered</span><span class=\"p\">:</span> <span class=\"nc\">DataStream</span><span class=\"p\">&lt;</span><span class=\"nc\">Int</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"n\">input</span><span class=\"p\">.</span><span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"kd\">object</span> <span class=\"err\">: </span><span class=\"nc\">FilterFunction</span><span class=\"p\">&lt;</span><span class=\"nc\">Int</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">filter</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nc\">Int</span><span class=\"p\">):</span> <span class=\"nc\">Boolean</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">value</span> <span class=\"p\">%</span> <span class=\"mi\">2</span> <span class=\"p\">==</span> <span class=\"mi\">0</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\">// Map: 필터링된 요소를 문자열로 변환</span>\n<span class=\"kd\">val</span> <span class=\"py\">stringified</span><span class=\"p\">:</span> <span class=\"nc\">DataStream</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"n\">filtered</span><span class=\"p\">.</span><span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"kd\">object</span> <span class=\"err\">: </span><span class=\"nc\">MapFunction</span><span class=\"p\">&lt;</span><span class=\"nc\">Int</span><span class=\"p\">,</span> <span class=\"nc\">String</span><span class=\"p\">&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">map</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nc\">Int</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"nf\">toString</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">})</span>\n</code></pre></div></div>\n\n<h3 id=\"use-cases\">Use Cases</h3>\n\n<p><a href=\"https://nightlies.apache.org/flink/flink-docs-stable/\">Apache Flink Documentation</a>을 살펴보면 Source와 Sink라는 용어가 많이 보이는데, Apache Flink 뿐만 아니라 데이터 엔지니어링에서 흔히 사용되는 용어입니다. <strong>Source는 데이터 파이프라인의 시작 지점</strong>으로, 데이터를 수집하여 시스템에 입력하는 역할을 합니다. <strong>Sink는 데이터 파이프라인의 종료 지점</strong>으로, 데이터를 외부 시스템으로 출력하여 저장하거나 전송하는 역할을 합니다. 데이터 소스(Source)와 데이터 싱크(Sink)로서 외부 시스템과 데이터를 주고 받을 수 있도록 여러 Connector를 제공하고 있어요. 현재(2024.09.18) 기준으로 아래와 같은 Source, Sink Connector를 제공하고 있습니다. 이 내용은 <a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/overview/#flink-project-connectors\">Flink Project Connectors</a>에서 확인할 수 있어요.</p>\n\n<ul>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/kafka/\">Apache Kafka</a> (source/sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/dynamodb/\">Amazon DynamoDB</a> (sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/kinesis/\">Amazon Kinesis Data Streams</a> (source/sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/elasticsearch/\">Elasticsearch</a> (sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/opensearch/\">Opensearch</a> (sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/filesystem/\">FileSystem</a> (source/sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/jdbc/\">JDBC</a> (sink)</li>\n  <li><a href=\"https://nightlies.apache.org/flink/flink-docs-master/docs/connectors/datastream/mongodb/\">MongoDB</a> (source/sink)</li>\n  <li><a href=\"https://bahir.apache.org/docs/flink/current/flink-streaming-redis/\">Redis</a> (sink)</li>\n  <li><a href=\"https://bahir.apache.org/docs/flink/current/flink-streaming-netty/\">Netty</a> (source)</li>\n</ul>\n\n<p><strong>데이터 소스(source)에서 실시간으로 데이터를 읽어서, 새로운 형태로 변환하거나 로컬 스토리지에 저장해놓고 SQL 쿼리를 통해 유의미한 결과를 만들고, 데이터 싱크(sink)에 데이터를 출력</strong>합니다. 이런 기능이 있다면 우리는 어떤 문제를 효과적으로 해결할 수 있을까요? <a href=\"https://flink.apache.org/what-is-flink/use-cases/\">공식 문서의 대표적인 유스케이스</a>에서는 이벤트 드리븐 애플리케이션 개발과 데이터 분석 그리고 데이터 파이프라인에 구축의 기반을 다지는데 사용될 수 있다고 말하고 있습니다.</p>\n\n<p><img src=\"/images/2024/09/18/flink-usecases-eventdrivenapps.png\" alt=\"Event-driven Applications\" title=\"Event-driven Applications\" class=\"center-image\" /></p>\n\n<center>Flink support event-driven applications</center>\n\n<p><img src=\"/images/2024/09/18/flink-usecases-analytics.png\" alt=\"Data Analytics Applications\" title=\"Data Analytics Applications\" class=\"center-image\" /></p>\n\n<center>Flink support data analytics applications</center>\n\n<p><img src=\"/images/2024/09/18/flink-usecases-datapipelines.png\" alt=\"Data Pipeline Applications\" title=\"Data Pipeline Applications\" class=\"center-image\" /></p>\n\n<center>Flink support data pipelines</center>\n\n<p>잠깐 아주 간단한 예시 하나를 살펴볼게요. 사용자의 요청을 받아서 처리하는 웹 서버가 Database(DB)에 쓰기를 하면서 동시에 검색을 위해 Elastic Search(ES)에도 데이터를 적재한다고 가정해볼게요. 이 때 DB의 쓰기 연산과 ES로의 쓰기 연산이 서로 원자적으로 묶일 수 없다면 어떤 문제가 생길까요? DB에 쓰기는 성공하고 ES에 쓰기는 실패했으면, 사용자가 게시글을 쓰는데에 성공했지만 검색에는 노출이 안되는 문제가 발생할거에요. 그래서 이런 문제를 해결하기 위해 DB 쓰기와 ES 쓰기를 Kafka와 같은 이벤트 브로커를 활용해서 분리하는 전략을 취할 수 있어요. 이런 문제를 해결하기 위해 다양한 방법이 존재하는데, Flink로는 어떻게 해결할 수 있는지 살펴볼게요.</p>\n\n<p><img src=\"/images/2024/09/18/sync-es.png\" alt=\"Sync Elastic Search\" title=\"Sync Elastic Search\" class=\"center-image\" /></p>\n\n<center>별도 Worker를 통해 ES 데이터 적재</center>\n\n<p>Flink 생태계에서 인기 있는 것 중 하나는 <strong><a href=\"https://nightlies.apache.org/flink/flink-cdc-docs-release-3.2/\">Flink CDC</a></strong>입니다. Flink CDC는 <a href=\"https://debezium.io/\">Debezium</a>을 기반으로 데이터베이스의 변경 로그를 실시간으로 캡쳐해서 타겟 시스템으로 반영할 수 있게 도와주는 도구입니다. <strong>사용자가 DB에 쓰기 연산을 실행하면 Flink CDC가 변경 사항을 캡쳐해서 Kafka에 데이터 변경점을 기록하고, Flink 앱에서 변경점을 받아 변환을 한 다음 ES에 데이터를 적재</strong>합니다.</p>\n\n<p><img src=\"/images/2024/09/18/flink-cdc-usage.png\" alt=\"Flink CDC Usage\" title=\"Flink CDC Usage\" class=\"center-image\" /></p>\n\n<center>Flink CDC 기반 ES 데이터 적재</center>\n\n<p>Kafka와 같은 이벤트 브로커를 중심으로 ES 쓰기를 실행하니, 언뜻 보기엔 바로 위에서 이야기한 ‘ES 적재를 이벤트 기반으로 분리’와 별반 다르지 않아 보입니다. 그런데 Flink 기반으로 문제를 해결할 때 취할 수 있는 장점은 위에서 잠깐 이야기한 체크포인트(Checkpoint)를 활용할 수 있다는 것입니다. 장애 복구 관점에서 Worker에서 ES 쓰기를 어디까지 했는지 별도 저장소에 관리를 해야 할 필요가 있는데, Flink 기반의 데이터 처리는 체크포인트와 상태 관리를 통해 장애 복구 뿐만 아니라 데이터의 일관성 보장을 높일 수 있습니다. 복잡한 상태 관리와 장애 복구 등의 작업은 플랫폼(라이브러리나 프레임워크)에 적절히 위임하고, 엔지니어는 이런 도구를 잘 활용하여 어떤 가치를 창출할 수 있을지에 집중하는게 중요합니다. 이런 고민과 선택은 사용자에게 일관된 최상의 경험을 제공하는 길로 이어질 수 있습니다.</p>\n\n<p>여기서 살펴본 건 하나의 예시일 뿐, 중요한 건 <strong>'흐르는 데이터에 어떤 빨때를 꽂아서 어디에 활용해 볼 수 있을까?'</strong>라는 질문을 가지고 계속해서 고민하는 것입니다. 관습적으로 배치 잡을 사용해 처리하던 작업들을 스트리밍 애플리케이션으로 전환해서 처리할 수는 없을까요? 만약 데이터 처리를 위해 Spring Batch 부터 떠올린다면 Stream Processing도 함께 살펴보시길 추천할게요.</p>\n\n<hr />\n\n<h1 id=\"quickstart\">Quickstart</h1>\n\n<p>Apache Flink 애플리케이션을 실행하기 위해서는 먼저 Flink Cluster 환경 구축이 필요합니다. 클러스터를 통해 데이터를 병렬 처리하거나 내결함성을 제공해 데이터를 효율적으로 처리할 수 있습니다. 그리고 애플리케이션을 실행한다는 말은 Flink에 정의한 Job을 실행한다는 의미이기도 합니다. Cluster에는 실행 가능한 Jar 파일을 제출하면 되는데, 자바 애플리케이션 코드를 작성해서 빌드한 결과로 나온 Jar 파일을 제출하면 됩니다.</p>\n\n<p>Production 환경에서 Flink 애플리케이션을 실행하려면 <a href=\"https://aws.amazon.com/managed-service-apache-flink/\">Amazon Managed Service for Apache Flink</a> 같은 솔루션을 써도 되고, <a href=\"https://nightlies.apache.org/flink/flink-kubernetes-operator-docs-stable/docs/try-flink-kubernetes-operator/quick-start/\">Flink Kubernetes Operator</a>를 이용해서 Kubernetes 위에서 Flink Cluster와 Job을 배포하고 관리할 수 있습니다. 여기서는 Mac OS 환경의 로컬 PC에서 Apache Flink 애플리케이션을 실행하는 여러 방법을 살펴보겠습니다.</p>\n\n<h3 id=\"1-idea에서-프로그램-실행\">1. IDEA에서 프로그램 실행</h3>\n\n<p>가장 편하고 유용한 방법은 IntelliJ IDEA에서 main 함수를 바로 실행하는 것입니다. Flink 애플리케이션을 실행하려면 Cluster에 실행 가능한 Jar 파일을 제출해야 되는데, IDEA에서 버튼만 누르면 바로 실행이 되고 디버깅까지 되니 신기할 따름입니다. 그 이유는 Apache Flink에서는 로컬 환경에서 Flink Cluster를 에뮬레이션할 수 있게끔 <a href=\"https://github.com/apache/flink/blob/master/flink-runtime/src/main/java/org/apache/flink/runtime/minicluster/MiniCluster.java\">MiniCluster</a>를 제공하기 때문입니다. 그래서 Flink 애플리케이션을 만드는 개발자는 실제 클러스터를 구축할 필요 없이 로컬 환경에서 Flink Cluster에 앱을 실행하는 것처럼 시뮬레이션을 할 수 있습니다.</p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-run-application.png\" alt=\"IDEA Run Application\" title=\"IDEA Run Application\" class=\"center-image\" /></p>\n\n<h3 id=\"2-local-flink-cluster-구축\">2. Local Flink Cluster 구축</h3>\n\n<p>또 다른 방법은 직접 Flink Cluster를 로컬 환경에 구축해서 사용하는 것입니다. <a href=\"https://nightlies.apache.org/flink/flink-docs-release-1.20/docs/try-flink/local_installation/\">Apache Flink 공식 문서</a>에서 Local Cluster를 구축할 수 있는 가이드를 제공하고 있습니다. Binary Release를 다운 받아서 압축을 푼 다음 아래 명령어를 실행해서 Flink Cluster를 시작하고 Jar 파일을 실행시켜서 Job을 제출할 수 있습니다.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Flink Cluser 중지\n$ ./bin/stop-cluster.sh\n\n# Flink Cluser 시작\n$ ./bin/start-cluster.sh\n\n# Flink Cluster에 Flink Job 제출(실행)\n$ ./bin/flink run examples/streaming/WordCount.jar\n\n# Flink Cluster 로그 확인\n$ tail -f log/flink-*\n</code></pre></div></div>\n\n<h3 id=\"2-1-idea에-flink-plugin-설치\">2-1. IDEA에 Flink Plugin 설치</h3>\n\n<p>IntelliJ IDEA에서 Big Data Tools 플러그인 번들로 함께 사용할 수 있는 <a href=\"https://plugins.jetbrains.com/plugin/21702-flink\">Flink Plugin</a>을 제공합니다. 이 플러그인을 사용하면 Flink Cluster를 모니터링하거나 직접 Flink Job을 제출할 수 있는 기능을 제공합니다.</p>\n\n<p><img src=\"/images/2024/09/18/idea-settings-flink.png\" alt=\"IDEA Settings\" title=\"IDEA Settings\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/09/18/idea-settings-flink-test-connection.png\" alt=\"IDEA Test Connection\" title=\"IDEA Test Connection\" class=\"center-image\" /></p>\n\n<h3 id=\"2-2-local-cluster에-jar-제출\">2-2. Local Cluster에 Jar 제출</h3>\n\n<p>IDEA에 생성된 Flink Console에서 Submit New Job 클릭후 + 버튼을 누르면 빌드된 Jar 파일을 선택할 수 있습니다. Jar 파일을 선택하고 나서 실행(Run) 버튼을 클릭하면 Flink Cluster에 Jar 파일이 제출되고 정상이라면 Job이 실행됩니다.</p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-submit-new-job.png\" alt=\"IDEA Submit New Job\" title=\"IDEA Submit New Job\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-run-jar.png\" alt=\"IDEA Run Jar\" title=\"IDEA Run Jar\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-run-jar-2.png\" alt=\"IDEA Run Jar\" title=\"IDEA Run Jar\" class=\"center-image\" /></p>\n\n<h3 id=\"2-3-local-cluster-모니터링\">2-3. Local Cluster 모니터링</h3>\n\n<p>Console에서 Open in Browser 버튼을 클릭하면 현재 모니터링으로 연결된 Cluster의 상태를 확인할 수 있는 대시보드가 열립니다. 이 대시보드에서는 현재 실행중인 Job을 포함하여 Flink Cluster의 Task Manager, Job Manager 그리고 Clsuter logs 등을 확인할 수 있습니다.</p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-cluster-web.png\" alt=\"IDEA Cluster Web\" title=\"IDEA Cluster Web\" class=\"center-image\" /></p>\n\n<p><img src=\"/images/2024/09/18/idea-flink-cluster-dashboard.png\" alt=\"IDEA Cluster Dashboard\" title=\"IDEA Cluster Dashboard\" class=\"center-image\" /></p>\n\n<hr />\n\n<h1 id=\"hello-world\">Hello, World!</h1>\n\n<p>이제 Flink 애플리케이션 실행 환경이 구축되었으니 모든 프로그래밍의 시작인 Hello, World를 만들어보겠습니다. 프로그래밍 언어의 첫 시작은 콘솔에 <code class=\"language-plaintext highlighter-rouge\">Hello, World!</code> 문자열을 출력하는 것인데, 데이터 프로세싱에서는 단어 개수를 세는 Word Count를 입문용 예제로 다루고 있습니다. 여기서는 Flink를 활용해 문자열에 포함된 특정 단어들의 개수를 출력하는 Word Count Job을 만들어보겠습니다. 전체 코드는 <a href=\"https://github.com/sungjk/flink-hello-world\">Github - flink-hello-world</a>에서 확인할 수 있어요.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.api.common.functions.FlatMapFunction</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.api.common.typeinfo.TypeHint</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.api.common.typeinfo.TypeInformation</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.api.java.tuple.Tuple2</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.streaming.api.environment.StreamExecutionEnvironment</span>\n<span class=\"k\">import</span> <span class=\"nn\">org.apache.flink.util.Collector</span>\n\n<span class=\"k\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">WordCounterJob</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 데이터 소스로 사용할 문자열</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">words</span> <span class=\"p\">=</span> <span class=\"s\">\"\"\"\n            The quick brown fox jumps over the lazy dog.\n            The quick blue fox jumps over the lazy dog.\n            The quick brown cat jumps over the lazy dog.\n            The quick blue cat jumps over the lazy dog.\n        \"\"\"</span><span class=\"p\">.</span><span class=\"nf\">trimIndent</span><span class=\"p\">()</span>\n\n    <span class=\"k\">fun</span> <span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nc\">Array</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;)</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 스트리밍 실행 환경 생성</span>\n        <span class=\"kd\">val</span> <span class=\"py\">env</span> <span class=\"p\">=</span> <span class=\"nc\">StreamExecutionEnvironment</span><span class=\"p\">.</span><span class=\"nf\">getExecutionEnvironment</span><span class=\"p\">()</span>\n        <span class=\"c1\">// 문자열 데이터 소스 생성</span>\n        <span class=\"kd\">val</span> <span class=\"py\">source</span> <span class=\"p\">=</span> <span class=\"n\">env</span><span class=\"p\">.</span><span class=\"nf\">fromData</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">).</span><span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"s\">\"in-memory-source\"</span><span class=\"p\">)</span>\n        <span class=\"kd\">val</span> <span class=\"py\">counts</span> <span class=\"p\">=</span> <span class=\"n\">source</span>\n            <span class=\"p\">.</span><span class=\"nf\">flatMap</span><span class=\"p\">(</span><span class=\"kd\">object</span> <span class=\"err\">: </span><span class=\"nc\">FlatMapFunction</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Tuple2</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Int</span><span class=\"p\">&gt;&gt;</span> <span class=\"p\">{</span>\n                <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">flatMap</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"k\">out</span><span class=\"p\">:</span> <span class=\"nc\">Collector</span><span class=\"p\">&lt;</span><span class=\"nc\">Tuple2</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Int</span><span class=\"p\">&gt;&gt;)</span> <span class=\"p\">{</span>\n                    <span class=\"c1\">// 입력 문자열을 소문자로 변환하고, 정규식을 사용하여 단어로 분리</span>\n                    <span class=\"kd\">val</span> <span class=\"py\">tokens</span> <span class=\"p\">=</span> <span class=\"n\">value</span><span class=\"p\">.</span><span class=\"nf\">lowercase</span><span class=\"p\">().</span><span class=\"nf\">split</span><span class=\"p\">(</span><span class=\"s\">\"\\\\W+\"</span><span class=\"p\">.</span><span class=\"nf\">toRegex</span><span class=\"p\">())</span>\n                    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">token</span> <span class=\"k\">in</span> <span class=\"n\">tokens</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">.</span><span class=\"nf\">isNotEmpty</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n                            <span class=\"c1\">// 각 단어와 그 단어의 개수를 나타내는 튜플(Tuple2&lt;String, Int&gt;)로 수집</span>\n                            <span class=\"k\">out</span><span class=\"p\">.</span><span class=\"nf\">collect</span><span class=\"p\">(</span><span class=\"nc\">Tuple2</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">})</span>\n            <span class=\"c1\">// 반환 타입 정보 지정(Generic 타입의 한계를 해결하기 위해 TypeInformation을 사용)</span>\n            <span class=\"p\">.</span><span class=\"nf\">returns</span><span class=\"p\">(</span><span class=\"nc\">TypeInformation</span><span class=\"p\">.</span><span class=\"nf\">of</span><span class=\"p\">(</span><span class=\"kd\">object</span> <span class=\"err\">: </span><span class=\"nc\">TypeHint</span><span class=\"p\">&lt;</span><span class=\"nc\">Tuple2</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">,</span> <span class=\"nc\">Int</span><span class=\"p\">&gt;&gt;()</span> <span class=\"p\">{}))</span>\n            <span class=\"p\">.</span><span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"s\">\"tokenizer\"</span><span class=\"p\">)</span>\n            <span class=\"c1\">// 단어별로 그룹핑</span>\n            <span class=\"p\">.</span><span class=\"nf\">keyBy</span> <span class=\"p\">{</span> <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"n\">f0</span> <span class=\"p\">}</span>\n            <span class=\"c1\">// 각 그룹별로 두번째 필드인 단어의 개수를 합산</span>\n            <span class=\"p\">.</span><span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"s\">\"counter\"</span><span class=\"p\">)</span>\n        <span class=\"c1\">// 최종 결과를 표준 출력에 출력하는 싱크 연산 추가</span>\n        <span class=\"n\">counts</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">().</span><span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"s\">\"print-sink\"</span><span class=\"p\">)</span>\n        <span class=\"c1\">// 스트리밍 작업 실행</span>\n        <span class=\"n\">env</span><span class=\"p\">.</span><span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"s\">\"JeremyWordCount\"</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>아마 95% 이상의 Flink 애플리케이션은 Java 언어로 작성되어 있을거라 생각합니다(샘플 예제를 몇가지 찾아봤지만 코틀린 코드는 발견하지 못했어요). 저는 자바 언어를 썩 즐겨 쓰지는 않아서 Flink 애플리케이션도 Kotlin으로 작성하고 있습니다. 그러다보니 아주 간혹 타입 때문에 귀찮을 때가 있는데 크게 불편할 정도는 아닙니다.</p>\n\n<hr />\n\n<h1 id=\"troubleshootings\">Troubleshootings</h1>\n\n<p>실행 환경 구축부터 스스로 Word Count 앱을 작성하기까지 몇가지 우여곡절이 있었습니다. 코드는 정말 몇 줄 안되는데 빌드 과정, Jar 파일 생성 문제, Java의 Type Erase 현상 등 여러 문제들을 겪고 해결하는 과정을 거쳤습니다.</p>\n\n<h3 id=\"jar-내에-main-class-찾을-수-없음\">Jar 내에 Main class 찾을 수 없음</h3>\n\n<p>에러 로그:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">Neither</span> <span class=\"n\">a</span> <span class=\"err\">'</span><span class=\"nc\">Main</span><span class=\"o\">-</span><span class=\"nc\">Class</span><span class=\"err\">'</span><span class=\"o\">,</span> <span class=\"n\">nor</span> <span class=\"n\">a</span> <span class=\"err\">'</span><span class=\"n\">program</span><span class=\"o\">-</span><span class=\"kd\">class</span><span class=\"err\">'</span> <span class=\"nc\">entry</span> <span class=\"n\">was</span> <span class=\"n\">found</span> <span class=\"n\">in</span> <span class=\"n\">the</span> <span class=\"n\">jar</span> <span class=\"n\">file</span><span class=\"o\">.</span>\n</code></pre></div></div>\n\n<p>(해결 방법) Jar file에 Main class name 명시:</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// application(main)</span>\n<span class=\"kd\">class</span> <span class=\"nc\">Main</span> <span class=\"p\">{</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nc\">Array</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;)</span> <span class=\"p\">{</span>\n        <span class=\"o\">..</span><span class=\"p\">.</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// entry point is not a method inside the class</span>\n    <span class=\"c1\">// use @JvmStatic annotation inside the companion object</span>\n    <span class=\"k\">companion</span> <span class=\"k\">object</span> <span class=\"p\">:</span> <span class=\"nc\">Logger</span> <span class=\"p\">{</span>\n        <span class=\"nd\">@JvmStatic</span>\n        <span class=\"k\">fun</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nc\">Array</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;)</span> <span class=\"p\">{</span>\n            <span class=\"kd\">val</span> <span class=\"py\">main</span> <span class=\"p\">=</span> <span class=\"nc\">Main</span><span class=\"p\">()</span>\n            <span class=\"n\">main</span><span class=\"p\">.</span><span class=\"nf\">execute</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// build.gradle.kts</span>\n<span class=\"n\">tasks</span><span class=\"p\">.</span><span class=\"nf\">jar</span> <span class=\"p\">{</span>\n    <span class=\"n\">archiveFileName</span><span class=\"p\">.</span><span class=\"k\">set</span><span class=\"p\">(</span><span class=\"s\">\"hello-world.jar\"</span><span class=\"p\">)</span>\n    <span class=\"nf\">manifest</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// add main class name</span>\n        <span class=\"n\">attributes</span><span class=\"p\">[</span><span class=\"s\">\"Main-Class\"</span><span class=\"p\">]</span> <span class=\"p\">=</span> <span class=\"s\">\"io.sungjk.flink.Main\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"jar-내에-flink-job-찾을-수-없음\">Jar 내에 Flink Job 찾을 수 없음</h3>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">Could</span> <span class=\"n\">not</span> <span class=\"n\">get</span> <span class=\"n\">job</span> <span class=\"n\">jar</span> <span class=\"n\">and</span> <span class=\"n\">dependencies</span> <span class=\"n\">from</span> <span class=\"no\">JAR</span> <span class=\"nl\">file:</span> <span class=\"no\">JAR</span> <span class=\"n\">file</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"nl\">exist:</span> <span class=\"o\">...</span>\n</code></pre></div></div>\n\n<p>(해결 방법) Main Class 내에 테스트할 Job 추가:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"n\">internal</span> <span class=\"kd\">class</span> <span class=\"nc\">WordCounterJob</span> <span class=\"o\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">fun</span> <span class=\"nf\">execute</span><span class=\"o\">(</span><span class=\"nl\">args:</span> <span class=\"nc\">Array</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">&gt;)</span> <span class=\"o\">{</span>\n        <span class=\"n\">val</span> <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"nc\">StreamExecutionEnvironment</span><span class=\"o\">.</span><span class=\"na\">getExecutionEnvironment</span><span class=\"o\">()</span>\n        <span class=\"o\">...</span>\n        <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"na\">execute</span><span class=\"o\">(</span><span class=\"s\">\"JeremyWordCount\"</span><span class=\"o\">)</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre></div></div>\n\n<h3 id=\"gradle-모듈-의존성-찾지-못함\">gradle 모듈 의존성 찾지 못함</h3>\n\n<p>에러 로그:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">program</span><span class=\"o\">.</span><span class=\"na\">ProgramInvocationException</span><span class=\"o\">:</span> <span class=\"nc\">An</span> <span class=\"n\">error</span> <span class=\"n\">occurred</span> <span class=\"k\">while</span> <span class=\"n\">invoking</span> <span class=\"n\">the</span> <span class=\"n\">program</span><span class=\"err\">'</span><span class=\"n\">s</span> <span class=\"n\">main</span> <span class=\"nl\">method:</span> <span class=\"n\">io</span><span class=\"o\">/</span><span class=\"n\">sungjk</span><span class=\"o\">/</span><span class=\"n\">flink</span><span class=\"o\">/</span><span class=\"n\">common</span><span class=\"o\">/</span><span class=\"n\">utils</span><span class=\"o\">/</span><span class=\"nc\">Logger</span>\n\t<span class=\"n\">at</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">program</span><span class=\"o\">.</span><span class=\"na\">PackagedProgram</span><span class=\"o\">.</span><span class=\"na\">callMainMethod</span><span class=\"o\">(</span><span class=\"nc\">PackagedProgram</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">378</span><span class=\"o\">)</span>\n\t<span class=\"n\">at</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">program</span><span class=\"o\">.</span><span class=\"na\">PackagedProgram</span><span class=\"o\">.</span><span class=\"na\">invokeInteractiveModeForExecution</span><span class=\"o\">(</span><span class=\"nc\">PackagedProgram</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">223</span><span class=\"o\">)</span>\n\t<span class=\"n\">at</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">ClientUtils</span><span class=\"o\">.</span><span class=\"na\">executeProgram</span><span class=\"o\">(</span><span class=\"nc\">ClientUtils</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">113</span><span class=\"o\">)</span>\n\t<span class=\"n\">at</span> <span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">client</span><span class=\"o\">.</span><span class=\"na\">cli</span><span class=\"o\">.</span><span class=\"na\">CliFrontend</span><span class=\"o\">.</span><span class=\"na\">executeProgram</span><span class=\"o\">(</span><span class=\"nc\">CliFrontend</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">1026</span><span class=\"o\">)</span>\n</code></pre></div></div>\n\n<p>(해결 방법) Shadow Plugin 사용해서 모든 의존성을 단일 JAR 파일로 패키징한 후 shadowJar task 실행:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">plugins</span> <span class=\"o\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">id</span><span class=\"o\">(</span><span class=\"s\">\"com.github.johnrengelman.shadow\"</span><span class=\"o\">)</span> <span class=\"n\">version</span> <span class=\"s\">\"7.1.2\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"na\">shadowJar</span> <span class=\"o\">{</span>\n    <span class=\"n\">archiveFileName</span><span class=\"o\">.</span><span class=\"na\">set</span><span class=\"o\">(</span><span class=\"s\">\"hello-world.jar\"</span><span class=\"o\">)</span>\n    <span class=\"n\">manifest</span> <span class=\"o\">{</span>\n        <span class=\"n\">attributes</span><span class=\"o\">[</span><span class=\"s\">\"Main-Class\"</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"s\">\"io.sungjk.flink.Main\"</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n<span class=\"o\">...</span>\n</code></pre></div></div>\n\n<h3 id=\"flink-cluster에서-타입-추론-불가type-erasure\">Flink Cluster에서 타입 추론 불가(Type Erasure)</h3>\n\n<p>에러 로그:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nc\">The</span> <span class=\"k\">return</span> <span class=\"n\">type</span> <span class=\"n\">of</span> <span class=\"n\">function</span> <span class=\"err\">'</span><span class=\"n\">execute</span><span class=\"o\">(</span><span class=\"nc\">Main</span><span class=\"o\">.</span><span class=\"na\">kt</span><span class=\"o\">)</span><span class=\"err\">'</span> <span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">be</span> <span class=\"n\">determined</span> <span class=\"n\">automatically</span><span class=\"o\">,</span> <span class=\"n\">due</span> <span class=\"n\">to</span> <span class=\"n\">type</span> <span class=\"n\">erasure</span><span class=\"o\">.</span> <span class=\"nc\">You</span> <span class=\"n\">can</span> <span class=\"n\">give</span> <span class=\"n\">type</span> <span class=\"n\">information</span> <span class=\"n\">hints</span> <span class=\"n\">by</span> <span class=\"n\">using</span> <span class=\"n\">the</span> <span class=\"nf\">returns</span><span class=\"o\">(...)</span> <span class=\"n\">method</span> <span class=\"n\">on</span> <span class=\"n\">the</span> <span class=\"n\">result</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">transformation</span> <span class=\"n\">call</span><span class=\"o\">,</span> <span class=\"n\">or</span> <span class=\"n\">by</span> <span class=\"n\">letting</span> <span class=\"n\">your</span> <span class=\"n\">function</span> <span class=\"n\">implement</span> <span class=\"n\">the</span> <span class=\"err\">'</span><span class=\"nc\">ResultTypeQueryable</span><span class=\"err\">'</span> <span class=\"kd\">interface</span><span class=\"err\">.</span>\n\t<span class=\"nc\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">api</span><span class=\"o\">.</span><span class=\"na\">dag</span><span class=\"o\">.</span><span class=\"na\">Transformation</span><span class=\"o\">.</span><span class=\"na\">getOutputType</span><span class=\"o\">(</span><span class=\"nc\">Transformation</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">557</span><span class=\"o\">)</span>\n\t<span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">streaming</span><span class=\"o\">.</span><span class=\"na\">api</span><span class=\"o\">.</span><span class=\"na\">datastream</span><span class=\"o\">.</span><span class=\"na\">DataStream</span><span class=\"o\">.</span><span class=\"na\">getType</span><span class=\"o\">(</span><span class=\"nc\">DataStream</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">193</span><span class=\"o\">)</span>\n\t<span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">streaming</span><span class=\"o\">.</span><span class=\"na\">api</span><span class=\"o\">.</span><span class=\"na\">datastream</span><span class=\"o\">.</span><span class=\"na\">KeyedStream</span><span class=\"o\">.&lt;</span><span class=\"n\">init</span><span class=\"o\">&gt;(</span><span class=\"nc\">KeyedStream</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">118</span><span class=\"o\">)</span>\n\t<span class=\"n\">org</span><span class=\"o\">.</span><span class=\"na\">apache</span><span class=\"o\">.</span><span class=\"na\">flink</span><span class=\"o\">.</span><span class=\"na\">streaming</span><span class=\"o\">.</span><span class=\"na\">api</span><span class=\"o\">.</span><span class=\"na\">datastream</span><span class=\"o\">.</span><span class=\"na\">DataStream</span><span class=\"o\">.</span><span class=\"na\">keyBy</span><span class=\"o\">(</span><span class=\"nc\">DataStream</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">:</span><span class=\"mi\">293</span><span class=\"o\">)</span>\n\t<span class=\"o\">...</span>\n</code></pre></div></div>\n\n<p>(해결 방법) Flink의 TypeInformation 클래스를 사용하여 반환 타입 명시:</p>\n\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">...</span>\n<span class=\"n\">val</span> <span class=\"n\">counts</span> <span class=\"o\">=</span> <span class=\"n\">source</span>\n    <span class=\"o\">.</span><span class=\"na\">flatMap</span><span class=\"o\">(</span><span class=\"n\">object</span> <span class=\"o\">:</span> <span class=\"nc\">FlatMapFunction</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">Tuple2</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">Int</span><span class=\"o\">&gt;&gt;</span> <span class=\"o\">{</span>\n        <span class=\"o\">...</span>\n    <span class=\"o\">})</span>\n    <span class=\"c1\">// Flink의 TypeInformation 클래스를 사용하여 반환 타입 명시</span>\n    <span class=\"o\">.</span><span class=\"na\">returns</span><span class=\"o\">(</span><span class=\"nc\">TypeInformation</span><span class=\"o\">.</span><span class=\"na\">of</span><span class=\"o\">(</span><span class=\"n\">object</span> <span class=\"o\">:</span> <span class=\"nc\">TypeHint</span><span class=\"o\">&lt;</span><span class=\"nc\">Tuple2</span><span class=\"o\">&lt;</span><span class=\"nc\">String</span><span class=\"o\">,</span> <span class=\"nc\">Int</span><span class=\"o\">&gt;&gt;()</span> <span class=\"o\">{}))</span>\n    <span class=\"o\">.</span><span class=\"na\">name</span><span class=\"o\">(</span><span class=\"s\">\"tokenizer\"</span><span class=\"o\">)</span>\n<span class=\"o\">...</span>\n</code></pre></div></div>\n\n<hr />\n\n<h1 id=\"마치며\">마치며</h1>\n\n<p>쏟아지는 데이터를 실시간으로 활용할 수 있는 환경이 갖추어지니 할 수 있는게 정말 많아졌습니다. 단순히 Apache Flink라는 새로운 도구에 익숙해진 건 단편적인 예시일 뿐, 데이터에 대해 눈이 떠졌다랄까요. 데이터 엔지니어 동료와 처음 티타임을 할 때 데이터에 무지한 저의 모습을 스스로 제 3자의 시각에서 바라보고 있는 느낌이 들었고, 머릿속에서는 새로운 터널에 들어서는 것만 같았습니다. 짧게는 3개월, 길게는 1년 뒤에 달라져 있을 제 모습이 상상되기도 했어요. 멋진 동료 덕분에 성장하고 있다는걸 느낄 수 있었고 도움이 필요하면 저도 많이 도와주고 싶다는 생각이 들었습니다.</p>\n\n<p>이제 백엔드 엔지니어로서 다룰 수 있는 연장이 하나 더 늘어났습니다. 경계해야 할 건 모든게 다 못으로 보이지 않게 만드는 것. 실시간으로 데이터를 처리할 수 있는 능력이 생겼으니 모든 곳에 다 스트림 앱을 갖다 붙이고 싶을 수 있습니다. 그래서 이 도구로 해결하기에 적당한 문제가 무엇인지 알고 있는게 중요한데요. 처리할 데이터 소스와 싱크를 지원하는지 알아보고, 실시간성(Real-time) 그리고 Window 기반으로 이벤트를 처리해야 할 문제에 Flink를 추천하고 싶습니다. 실시간으로 발생하는 거래 데이터가 정상인지, 이상거래는 아닌지 <a href=\"https://flink.apache.org/what-is-flink/flink-applications/#state\">State</a>와 <a href=\"https://flink.apache.org/what-is-flink/flink-applications/#time\">Time</a>을 활용해서 판단할 수 있습니다.</p>\n\n<p>마지막으로, 한국에도 Flink를 사용하는 회사들이 점점 많아지고 있는것 같은데, 기술 교류와 레퍼런스가 많아졌으면 좋겠다는 생각이 들었습니다. 생태계는 계속해서 발전하고 있다는 느낌이 드는데, 대부분 비슷하겠지만 구체적으로 어떤 니즈를 가지고 이 기술을 도입해서 사용하고 있는지가 궁금했습니다. 자주, 더 많은 기술 공유가 있기를!</p>\n\n<hr />\n\n<h1 id=\"references\">References</h1>\n<ul>\n  <li><a href=\"https://flink.apache.org/\">Apache Flink</a></li>\n  <li><a href=\"https://www.confluent.io/learn/apache-flink/\">What is Apache Flink?</a></li>\n</ul>",
        "guid": "https://sungjk.github.io/2024/09/18/apache-flink.html",
        "isoDate": "2024-09-18T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "안드로이드 추천 앱, 추천 어플 (24.09.23) 스케치, 리뷰기록, 책만들기, 일러스트, 뷰티 앱",
        "link": "http://muzbox.tistory.com/483474",
        "pubDate": "Mon, 23 Sep 2024 09:51:14 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483474#entry483474comment",
        "content": "<p data-ke-size=\"size16\">구글 플레이 스토어의 수많은 앱 중, 유용하고 안전한 앱을 엄선해 매주 소개합니다. 신뢰할 수 있는 앱 리뷰를 확인하세요</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"추천앱240923.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/cCqfKC/btsJHSquUEp/2ooKPuiMmQ03bDRON4nFc0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cCqfKC/btsJHSquUEp/2ooKPuiMmQ03bDRON4nFc0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cCqfKC/btsJHSquUEp/2ooKPuiMmQ03bDRON4nFc0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcCqfKC%2FbtsJHSquUEp%2F2ooKPuiMmQ03bDRON4nFc0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"안드로이드 추천 앱, 추천 어플 (24.09.23)\" data-filename=\"추천앱240923.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">안드로이드 앱스토어인 구글 플레이 스토어에는 하루에도 엄청난 수의 앱과 게임이 신규로 등록됩니다. 이 모든앱들을 사용자가 확인하고 양질의 앱을 선택하는 것이 사실상 불가능 하다는 얘기죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한, 최근들어 강화되었다 하지만 여전히 구글 플레이스토어에는 유해한 앱들이 사라지지 않고 이들 앱으로 피해를 보는 사용자도 많습니다.본 블로그에서는 일주일에 한번정도 운영자가 직접 유용하고 편리한 앱을 엄선하여 소개합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size16\"><span style=\"color: #8cb3be;\"><b>'어떤오후의 프리웨어 이야기'에서 추천하는 2024년 9월 23일자 '안드로이드 추천 앱'입니다.</b></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>1. Concepts: 스케치, 노트, 드로잉</b></h2>\n<p data-ke-size=\"size16\">무한한 캔버스를 제공하는 벡터 기반 디지털 스케치북 앱으로, 아이디어 구상부터 최종 디자인까지 다양한 창작 활동을 지원합니다.</p>\n<p data-ke-size=\"size16\">압력, 기울기, 속도에 반응하는 사실적인 펜 도구와 다양한 색상 옵션을 제공하여 풍부한 표현이 가능하며, 레이어 시스템을 통해 복잡한 작업도 효율적으로 관리할 수 있습니다.</p>\n<p data-ke-size=\"size16\">벡터 기반 기술로 모든 요소를 쉽게 수정하고 조절할 수 있어, 유연한 작업 환경을 제공합니다.</p>\n<p data-ke-size=\"size16\">정밀한 드로잉을 위한 도형 안내선, 라이브 스냅, 치수 도구 등을 제공하여 전문적인 결과물 제작이 가능합니다.</p>\n<p data-ke-size=\"size16\">Android, ChromeOS, iOS, Windows 등 다양한 플랫폼을 지원하여 접근성이 뛰어나며, 무료 버전과 더 많은 기능을 제공하는 유료 구독 모델을 운영합니다.</p>\n<p data-ke-size=\"size16\">Disney, Playstation, Apple, Google 등 유명 기업의 창작자들도 사용하는 강력한 디지털 창작 도구입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Concepts.jpg\" data-origin-width=\"671\" data-origin-height=\"1333\"><span data-url=\"https://blog.kakaocdn.net/dn/c4ugUe/btsJHS4ThxY/aIY0MPVpw77lls7tIwXcK0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c4ugUe/btsJHS4ThxY/aIY0MPVpw77lls7tIwXcK0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/c4ugUe/btsJHS4ThxY/aIY0MPVpw77lls7tIwXcK0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc4ugUe%2FbtsJHS4ThxY%2FaIY0MPVpw77lls7tIwXcK0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Concepts: 스케치, 노트, 드로잉\" data-filename=\"Concepts.jpg\" data-origin-width=\"671\" data-origin-height=\"1333\"/></span></figure>\n</p>\n<figure id=\"og_1727052204429\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Concepts: 스케치, 노트, 드로잉 - Google Play 앱\" data-og-description=\"무제한의 유연한 스케치 기능\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=com.tophatch.concepts\" data-og-url=\"https://play.google.com/store/apps/details?id=com.tophatch.concepts&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/jSNjZ/hyW6LEfzLL/751RoD6SgZtmwlhrnazKh1/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/Rj2l5/hyW6zcH8v0/wvmeac1g2wS0nlRFxai7y0/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/BpFN2/hyW6FcWUfG/ReAbuox2BRCoRMdNoBes00/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\"><a href=\"https://play.google.com/store/apps/details?id=com.tophatch.concepts\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=com.tophatch.concepts\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/jSNjZ/hyW6LEfzLL/751RoD6SgZtmwlhrnazKh1/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/Rj2l5/hyW6zcH8v0/wvmeac1g2wS0nlRFxai7y0/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/BpFN2/hyW6FcWUfG/ReAbuox2BRCoRMdNoBes00/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Concepts: 스케치, 노트, 드로잉 - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">무제한의 유연한 스케치 기능</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>2.레포브 - 영화/책/맛집 &middot; 세상 모든 관점 기록</b></h2>\n<p data-ke-size=\"size16\">REcord your POV!는 우리의 다양한 경험과 생각을 한 곳에서 기록하고 관리할 수 있는 앱입니다. 영화, 책, 맛집, 여행지 등 모든 카테고리에 대한 우리의 관점을 쉽게 남길 수 있으며, 시간이 지나도 잊혀지지 않도록 보관합니다. 이 앱은 사용자 친화적인 인터페이스를 제공하여 기록을 남기기 쉽고, 다양한 방식으로 정리된 기록을 확인할 수 있습니다.</p>\n<p data-ke-size=\"size16\">안전한 저장 기능과 로그인 시스템을 통해 여러 기기에서 동시에 사용할 수 있어 편리합니다. REcord your POV!는 개인의 고유한 관점이 중요하다는 믿음을 바탕으로, 사용자가 자신의 소중한 관점을 지속적으로 쌓아나갈 수 있도록 돕는 것을 목표로 합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"레포브.jpg\" data-origin-width=\"755\" data-origin-height=\"1333\"><span data-url=\"https://blog.kakaocdn.net/dn/1hxUq/btsJG3zkFyc/YRIoZH6CUgVa0sf8sKvwLk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/1hxUq/btsJG3zkFyc/YRIoZH6CUgVa0sf8sKvwLk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/1hxUq/btsJG3zkFyc/YRIoZH6CUgVa0sf8sKvwLk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F1hxUq%2FbtsJG3zkFyc%2FYRIoZH6CUgVa0sf8sKvwLk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"레포브 - 영화/책/맛집 &middot; 세상 모든 관점 기록\" data-filename=\"레포브.jpg\" data-origin-width=\"755\" data-origin-height=\"1333\"/></span></figure>\n</p>\n<figure id=\"og_1727052206627\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"레포브 - 영화/책/맛집 &middot; 세상 모든 관점 기록 - Google Play 앱\" data-og-description=\"평점, 캘린더, 지도로 보는 모든 것에 대한 나의 기록\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=com.kilo.repov\" data-og-url=\"https://play.google.com/store/apps/details?id=com.kilo.repov&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/t3YkZ/hyW6BO90GP/2hvs8bz81g8ZRERZkQsU70/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/baTrpq/hyW6IAIYOh/9g0j2f8u8XZekh2ytWdT9K/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/cRPgme/hyW6DMYLV0/kpQjWT04MUasu8R00Pa5b1/img.png?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=com.kilo.repov\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=com.kilo.repov\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/t3YkZ/hyW6BO90GP/2hvs8bz81g8ZRERZkQsU70/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/baTrpq/hyW6IAIYOh/9g0j2f8u8XZekh2ytWdT9K/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/cRPgme/hyW6DMYLV0/kpQjWT04MUasu8R00Pa5b1/img.png?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">레포브 - 영화/책/맛집 &middot; 세상 모든 관점 기록 - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">평점, 캘린더, 지도로 보는 모든 것에 대한 나의 기록</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>3.하루북 - 책만들기, 글쓰기</b></h2>\n<p data-ke-size=\"size16\">일상의 소중한 순간을 간편하게 기록할 수 있는 앱입니다. 단 10분만 투자하여 사진 한 장, 글 한 줄로도 의미 있는 기록을 남길 수 있습니다. 사용자는 글꼴, 색상, 배경을 자유롭게 수정하여 개성을 표현할 수 있으며, 다양한 템플릿을 활용해 쉽고 빠르게 멋진 디자인을 만들 수 있습니다.</p>\n<p data-ke-size=\"size16\">이 앱은 갤러리나 웹 이미지에서 바로 글쓰기가 가능한 기능을 제공하여 사용자의 편의성을 높였습니다. 또한, 원하는 경우 다른 사람들과 자신의 하루를 공유할 수 있는 옵션도 있습니다. 하루북은 일상의 순간들을 모아 결국 한 권의 책으로 만들어주는 특별한 경험을 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"하루북.jpg\" data-origin-width=\"755\" data-origin-height=\"1333\"><span data-url=\"https://blog.kakaocdn.net/dn/ncJeA/btsJHyFQZ16/CzJELQ1XSLkFCbBu5ZmNB1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ncJeA/btsJHyFQZ16/CzJELQ1XSLkFCbBu5ZmNB1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ncJeA/btsJHyFQZ16/CzJELQ1XSLkFCbBu5ZmNB1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FncJeA%2FbtsJHyFQZ16%2FCzJELQ1XSLkFCbBu5ZmNB1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"하루북 - 책만들기, 글쓰기\" data-filename=\"하루북.jpg\" data-origin-width=\"755\" data-origin-height=\"1333\"/></span></figure>\n</p>\n<figure id=\"og_1727052208906\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"하루북 - 책만들기, 글쓰기 - Google Play 앱\" data-og-description=\"하루 10분, 나의 하루가 책이 되는 시간 세상에 하나뿐인 나만의 책을 만드세요.\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=com.espressobook.doy\" data-og-url=\"https://play.google.com/store/apps/details?id=com.espressobook.doy&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/cPOtq0/hyW6Hu3bFS/fO778O1b2SvUnwLwKXkWW0/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/BQdDI/hyW6KrMwz4/8uyHABhCrec1p38keTwm01/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/bcFHx2/hyW6BuQsEM/Mw22kDmMO2oYucxqdsCKH0/img.png?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=com.espressobook.doy\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=com.espressobook.doy\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cPOtq0/hyW6Hu3bFS/fO778O1b2SvUnwLwKXkWW0/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/BQdDI/hyW6KrMwz4/8uyHABhCrec1p38keTwm01/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/bcFHx2/hyW6BuQsEM/Mw22kDmMO2oYucxqdsCKH0/img.png?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">하루북 - 책만들기, 글쓰기 - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">하루 10분, 나의 하루가 책이 되는 시간 세상에 하나뿐인 나만의 책을 만드세요.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>4.Picsart Color Paint</b></h2>\n<p data-ke-size=\"size16\">디지털 일러스트레이션을 위한 강력하고 다재다능한 그리기 앱입니다. 초보자부터 전문가까지 모든 사용자를 위한 광범위한 기능을 제공합니다. 다중 레이어 지원, 정교한 컬러 믹서, 맞춤형 페인트 브러시, 독특한 대칭 그리기 기능, 다양한 텍스처 브러시 등을 통해 사용자의 창의성을 극대화합니다.<br />직관적인 인터페이스로 설계되어 사용자가 그리기에 더 집중할 수 있게 해주며, 간단한 낙서부터 복잡한 판타지 세계 창조까지 모든 종류의 작업이 가능합니다. 다양한 기능들(대칭 그리기, 텍스처 브러시, 패턴 채우기, 블렌딩 모드 등)과 함께 자동 복원 기능으로 작업 손실 걱정 없이 창작에 몰두할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Picsart Color Paint.jpg\" data-origin-width=\"755\" data-origin-height=\"1333\"><span data-url=\"https://blog.kakaocdn.net/dn/EQRRi/btsJGBXB3UC/QTO2Ds6O05RkkTgvck3NE1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/EQRRi/btsJGBXB3UC/QTO2Ds6O05RkkTgvck3NE1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/EQRRi/btsJGBXB3UC/QTO2Ds6O05RkkTgvck3NE1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FEQRRi%2FbtsJGBXB3UC%2FQTO2Ds6O05RkkTgvck3NE1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Picsart Color Paint\" data-filename=\"Picsart Color Paint.jpg\" data-origin-width=\"755\" data-origin-height=\"1333\"/></span></figure>\n</p>\n<figure id=\"og_1727052210390\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Picsart Color Paint - Google Play 앱\" data-og-description=\"포토와 배경에 굉장한 그림을 그리거나 색상을 더해보세요.\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=com.picsart.draw\" data-og-url=\"https://play.google.com/store/apps/details?id=com.picsart.draw&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/c0ONGT/hyW6BhjsgR/SX8NUq2TNgSzPykFeJe2E1/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/OJ96z/hyW6xMLJH1/s4dxvjk0iV34rWdZJYKTtK/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/FaUmT/hyW6MpEzbC/MhclJQqajz26AxeQFfAuqK/img.png?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=com.picsart.draw\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=com.picsart.draw\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/c0ONGT/hyW6BhjsgR/SX8NUq2TNgSzPykFeJe2E1/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/OJ96z/hyW6xMLJH1/s4dxvjk0iV34rWdZJYKTtK/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/FaUmT/hyW6MpEzbC/MhclJQqajz26AxeQFfAuqK/img.png?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Picsart Color Paint - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">포토와 배경에 굉장한 그림을 그리거나 색상을 더해보세요.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>5.화해</b></h2>\n<p data-ke-size=\"size16\">화해는 1000만 명 이상의 한국인이 사용하는 종합적인 뷰티 앱입니다. 이 앱은 사용자들에게 화장품에 대한 상세한 정보와 쇼핑 경험을 제공합니다. 800만 개가 넘는 실제 사용자의 리뷰를 통해 제품의 실제 효과를 확인할 수 있으며, 모든 화장품의 성분 정보를 제공하여 알레르기 유발 성분이나 특정 기능성 성분을 쉽게 확인할 수 있습니다.</p>\n<p data-ke-size=\"size16\">화해는 또한 다양한 카테고리별, 피부 타입별, 연령대별 인기 제품 랭킹을 제공하고, 사용자들이 본품 구매 전 샘플을 체험해볼 수 있는 기회를 제공합니다. 매일 오전 10시에 진행되는 특가 행사를 통해 사용자들은 인기 브랜드 제품을 저렴하게 구매할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"화해01.jpg\" data-origin-width=\"755\" data-origin-height=\"1333\"><span data-url=\"https://blog.kakaocdn.net/dn/zJATT/btsJHyMEhbU/ssEIKTgwPn0ch04MTrmks1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/zJATT/btsJHyMEhbU/ssEIKTgwPn0ch04MTrmks1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/zJATT/btsJHyMEhbU/ssEIKTgwPn0ch04MTrmks1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzJATT%2FbtsJHyMEhbU%2FssEIKTgwPn0ch04MTrmks1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"화해\" data-filename=\"화해01.jpg\" data-origin-width=\"755\" data-origin-height=\"1333\"/></span></figure>\n</p>\n<figure id=\"og_1727052297346\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"화해 - Google Play 앱\" data-og-description=\"화장품 살 땐 화해로 한 번에! 광고없는 솔직 리뷰, 내게 맞는 성분 탐색, 카테고리별 랭킹, 그리고 쇼핑까지!\" data-og-host=\"play.google.com\" data-og-source-url=\"https://play.google.com/store/apps/details?id=kr.co.company.hwahae\" data-og-url=\"https://play.google.com/store/apps/details?id=kr.co.company.hwahae&amp;hl=ko\" data-og-image=\"https://scrap.kakaocdn.net/dn/bmsp4m/hyW6EZpxL3/LcEpNugxlQRtAoxjwbvVG0/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/09mtT/hyW6zRjT7X/q2guNEw4Hsi7DJuMPQLkL1/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/9vpHO/hyW6KFj9m5/KVR9hniAYKg8kPXdEtIlJK/img.png?width=240&amp;height=240&amp;face=0_0_240_240\"><a href=\"https://play.google.com/store/apps/details?id=kr.co.company.hwahae\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.google.com/store/apps/details?id=kr.co.company.hwahae\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bmsp4m/hyW6EZpxL3/LcEpNugxlQRtAoxjwbvVG0/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/09mtT/hyW6zRjT7X/q2guNEw4Hsi7DJuMPQLkL1/img.png?width=600&amp;height=300&amp;face=0_0_600_300,https://scrap.kakaocdn.net/dn/9vpHO/hyW6KFj9m5/KVR9hniAYKg8kPXdEtIlJK/img.png?width=240&amp;height=240&amp;face=0_0_240_240');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">화해 - Google Play 앱</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">화장품 살 땐 화해로 한 번에! 광고없는 솔직 리뷰, 내게 맞는 성분 탐색, 카테고리별 랭킹, 그리고 쇼핑까지!</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.google.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "구글 플레이 스토어의 수많은 앱 중, 유용하고 안전한 앱을 엄선해 매주 소개합니다. 신뢰할 수 있는 앱 리뷰를 확인하세요\n\n\n \n안드로이드 앱스토어인 구글 플레이 스토어에는 하루에도 엄청난 수의 앱과 게임이 신규로 등록됩니다. 이 모든앱들을 사용자가 확인하고 양질의 앱을 선택하는 것이 사실상 불가능 하다는 얘기죠.\n \n또한, 최근들어 강화되었다 하지만 여전히 구글 플레이스토어에는 유해한 앱들이 사라지지 않고 이들 앱으로 피해를 보는 사용자도 많습니다.본 블로그에서는 일주일에 한번정도 운영자가 직접 유용하고 편리한 앱을 엄선하여 소개합니다.\n \n'어떤오후의 프리웨어 이야기'에서 추천하는 2024년 9월 23일자 '안드로이드 추천 앱'입니다.\n \n1. Concepts: 스케치, 노트, 드로잉\n무한한 캔버스를 제공하는 벡터 기반 디지털 스케치북 앱으로, 아이디어 구상부터 최종 디자인까지 다양한 창작 활동을 지원합니다.\n압력, 기울기, 속도에 반응하는 사실적인 펜 도구와 다양한 색상 옵션을 제공하여 풍부한 표현이 가능하며, 레이어 시스템을 통해 복잡한 작업도 효율적으로 관리할 수 있습니다.\n벡터 기반 기술로 모든 요소를 쉽게 수정하고 조절할 수 있어, 유연한 작업 환경을 제공합니다.\n정밀한 드로잉을 위한 도형 안내선, 라이브 스냅, 치수 도구 등을 제공하여 전문적인 결과물 제작이 가능합니다.\nAndroid, ChromeOS, iOS, Windows 등 다양한 플랫폼을 지원하여 접근성이 뛰어나며, 무료 버전과 더 많은 기능을 제공하는 유료 구독 모델을 운영합니다.\nDisney, Playstation, Apple, Google 등 유명 기업의 창작자들도 사용하는 강력한 디지털 창작 도구입니다.\n\n\n\n \nConcepts: 스케치, 노트, 드로잉 - Google Play 앱\n무제한의 유연한 스케치 기능\nplay.google.com\n\n \n \n \n2.레포브 - 영화/책/맛집 · 세상 모든 관점 기록\nREcord your POV!는 우리의 다양한 경험과 생각을 한 곳에서 기록하고 관리할 수 있는 앱입니다. 영화, 책, 맛집, 여행지 등 모든 카테고리에 대한 우리의 관점을 쉽게 남길 수 있으며, 시간이 지나도 잊혀지지 않도록 보관합니다. 이 앱은 사용자 친화적인 인터페이스를 제공하여 기록을 남기기 쉽고, 다양한 방식으로 정리된 기록을 확인할 수 있습니다.\n안전한 저장 기능과 로그인 시스템을 통해 여러 기기에서 동시에 사용할 수 있어 편리합니다. REcord your POV!는 개인의 고유한 관점이 중요하다는 믿음을 바탕으로, 사용자가 자신의 소중한 관점을 지속적으로 쌓아나갈 수 있도록 돕는 것을 목표로 합니다.\n\n\n\n \n레포브 - 영화/책/맛집 · 세상 모든 관점 기록 - Google Play 앱\n평점, 캘린더, 지도로 보는 모든 것에 대한 나의 기록\nplay.google.com\n\n \n \n \n3.하루북 - 책만들기, 글쓰기\n일상의 소중한 순간을 간편하게 기록할 수 있는 앱입니다. 단 10분만 투자하여 사진 한 장, 글 한 줄로도 의미 있는 기록을 남길 수 있습니다. 사용자는 글꼴, 색상, 배경을 자유롭게 수정하여 개성을 표현할 수 있으며, 다양한 템플릿을 활용해 쉽고 빠르게 멋진 디자인을 만들 수 있습니다.\n이 앱은 갤러리나 웹 이미지에서 바로 글쓰기가 가능한 기능을 제공하여 사용자의 편의성을 높였습니다. 또한, 원하는 경우 다른 사람들과 자신의 하루를 공유할 수 있는 옵션도 있습니다. 하루북은 일상의 순간들을 모아 결국 한 권의 책으로 만들어주는 특별한 경험을 제공합니다.\n\n\n\n \n하루북 - 책만들기, 글쓰기 - Google Play 앱\n하루 10분, 나의 하루가 책이 되는 시간 세상에 하나뿐인 나만의 책을 만드세요.\nplay.google.com\n\n \n \n \n4.Picsart Color Paint\n디지털 일러스트레이션을 위한 강력하고 다재다능한 그리기 앱입니다. 초보자부터 전문가까지 모든 사용자를 위한 광범위한 기능을 제공합니다. 다중 레이어 지원, 정교한 컬러 믹서, 맞춤형 페인트 브러시, 독특한 대칭 그리기 기능, 다양한 텍스처 브러시 등을 통해 사용자의 창의성을 극대화합니다.\n직관적인 인터페이스로 설계되어 사용자가 그리기에 더 집중할 수 있게 해주며, 간단한 낙서부터 복잡한 판타지 세계 창조까지 모든 종류의 작업이 가능합니다. 다양한 기능들(대칭 그리기, 텍스처 브러시, 패턴 채우기, 블렌딩 모드 등)과 함께 자동 복원 기능으로 작업 손실 걱정 없이 창작에 몰두할 수 있습니다.\n\n\n\n \nPicsart Color Paint - Google Play 앱\n포토와 배경에 굉장한 그림을 그리거나 색상을 더해보세요.\nplay.google.com\n\n \n \n \n5.화해\n화해는 1000만 명 이상의 한국인이 사용하는 종합적인 뷰티 앱입니다. 이 앱은 사용자들에게 화장품에 대한 상세한 정보와 쇼핑 경험을 제공합니다. 800만 개가 넘는 실제 사용자의 리뷰를 통해 제품의 실제 효과를 확인할 수 있으며, 모든 화장품의 성분 정보를 제공하여 알레르기 유발 성분이나 특정 기능성 성분을 쉽게 확인할 수 있습니다.\n화해는 또한 다양한 카테고리별, 피부 타입별, 연령대별 인기 제품 랭킹을 제공하고, 사용자들이 본품 구매 전 샘플을 체험해볼 수 있는 기회를 제공합니다. 매일 오전 10시에 진행되는 특가 행사를 통해 사용자들은 인기 브랜드 제품을 저렴하게 구매할 수 있습니다.\n\n\n\n \n화해 - Google Play 앱\n화장품 살 땐 화해로 한 번에! 광고없는 솔직 리뷰, 내게 맞는 성분 탐색, 카테고리별 랭킹, 그리고 쇼핑까지!\nplay.google.com",
        "guid": "http://muzbox.tistory.com/483474",
        "categories": [
          "ANDROID &amp; 모바일/추천 무료 앱",
          "리뷰기록",
          "모바일",
          "뷰티 앱",
          "스케치",
          "안드로이드 추천앱",
          "일러스트",
          "책만들기",
          "추천무료앱",
          "테크플러스"
        ],
        "isoDate": "2024-09-23T00:51:14.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "메모리를 이용해 ChatGPT에서 맞춤형 결과 얻는 방법",
        "link": "http://muzbox.tistory.com/483473",
        "pubDate": "Fri, 20 Sep 2024 07:26:34 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483473#entry483473comment",
        "content": "<p data-ke-size=\"size16\">ChatGPT의 메모리 기능을 활용하면 매번 처음부터 설명하지 않아도, 개인의 취향과 선호도에 맞춘 맞춤형 답변을 받을 수 있습니다. 이 블로그에서는 메모리 기능을 설정하고 활용하는 방법에 대해 자세히 다룹니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"메모리를 이용해 ChatGPT에서 맞춤형 결과 얻는 방법.png\" data-origin-width=\"1280\" data-origin-height=\"731\"><span data-url=\"https://blog.kakaocdn.net/dn/p8muB/btsJEicKVXm/q3WdVpOUUZ8fTaLyR5joBk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/p8muB/btsJEicKVXm/q3WdVpOUUZ8fTaLyR5joBk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/p8muB/btsJEicKVXm/q3WdVpOUUZ8fTaLyR5joBk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fp8muB%2FbtsJEicKVXm%2Fq3WdVpOUUZ8fTaLyR5joBk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"메모리를 이용해 ChatGPT에서 맞춤형 결과 얻는 방법\" data-filename=\"메모리를 이용해 ChatGPT에서 맞춤형 결과 얻는 방법.png\" data-origin-width=\"1280\" data-origin-height=\"731\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">최근 인공지능 기술이 급격히 발전하면서, 많은 사람들이 ChatGPT 같은 챗봇을 일상적인 도구로 활용하고 있습니다. 하지만 ChatGPT를 더 효율적으로 사용하는 방법 중 하나는 바로 '메모리' 기능입니다. 이 기능을 통해 챗봇이 사용자의 선호도나 과거 대화 내용을 기억하여 더 개인화된 답변을 제공할 수 있습니다. 이번 글에서는 ChatGPT의 메모리 기능이 무엇인지, 어떻게 설정하고 활용할 수 있는지 알아보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>ChatGPT 메모리 기능이란?</b></span></h2>\n<p data-ke-size=\"size16\">ChatGPT의 메모리 기능은 단순한 대화형 인공지능을 넘어 사용자의 과거 대화 내용을 기억하고, 이를 기반으로 맞춤형 답변을 제공하는 기능입니다. 예를 들어, 사용자가 \"저는 야외 활동을 좋아합니다\"라고 말하면, ChatGPT는 이 정보를 기억하고 향후 활동 추천 시 이러한 취향을 반영하게 됩니다.</p>\n<p data-ke-size=\"size16\">메모리 기능은 대화 중 자연스럽게 저장되며, 사용자는 명령어를 통해 특정 내용을 기억하거나 잊도록 지시할 수 있습니다. 이를 통해 매번 대화를 처음부터 다시 시작하지 않고, 사용자의 선호도와 성향에 맞춘 더 나은 답변을 받을 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>메모리 기능의 장점</b></span></h2>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>맞춤형 추천</b>: ChatGPT는 사용자의 취향을 기억하여 일관성 있는 추천을 제공합니다. 예를 들어, 사용자가 아침 운동을 선호한다고 입력하면, 이후 운동 루틴 제안 시 이러한 정보를 반영하여 더욱 개인화된 추천을 받을 수 있습니다.</li>\n<li><b>대화 시간 절약</b>: 매번 취향을 설명할 필요가 없기 때문에 대화 시간이 단축됩니다. 이는 특히 자주 대화하는 경우 매우 유용합니다.</li>\n<li><b>자연스러운 정보 업데이트</b>: 사용자의 취향이 바뀌면 \"아침 운동을 좋아한다는 정보를 잊어줘\"와 같은 간단한 명령어로 메모리를 수정할 수 있습니다.</li>\n<li><b>개인화된 피드백</b>: 음식 조리법을 찾을 때도 사용자의 시간 제약이나 재료 선호도를 기억하여 맞춤형 요리법을 추천해줍니다.</li>\n<li><b>기억 관리 기능</b>: 설정 메뉴에서 저장된 메모리를 관리할 수 있으며, 필요 시 삭제하거나 기능을 비활성화할 수도 있습니다.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>ChatGPT 메모리 기능의 사용법</b></span></h2>\n<h3 data-ke-size=\"size23\">1. 설정 방법</h3>\n<p data-ke-size=\"size16\">ChatGPT에서 메모리 기능을 사용하려면 설정 메뉴에서 개인화 탭으로 이동하여 메모리 기능을 활성화해야 합니다. 여기서 \"기억 관리\" 옵션을 통해 저장된 메모리를 확인하고, 불필요한 내용을 삭제할 수도 있습니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"U1.png\" data-origin-width=\"1223\" data-origin-height=\"646\"><span data-url=\"https://blog.kakaocdn.net/dn/EiwVd/btsJFad0uwT/sNTAwhiy3xkCCj3PQYxYIK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/EiwVd/btsJFad0uwT/sNTAwhiy3xkCCj3PQYxYIK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/EiwVd/btsJFad0uwT/sNTAwhiy3xkCCj3PQYxYIK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FEiwVd%2FbtsJFad0uwT%2FsNTAwhiy3xkCCj3PQYxYIK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"U1.png\" data-origin-width=\"1223\" data-origin-height=\"646\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"U2.png\" data-origin-width=\"1180\" data-origin-height=\"609\"><span data-url=\"https://blog.kakaocdn.net/dn/dmJKxb/btsJE1IbP7Q/QHOth18WBqnBiKwnVFxJWK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dmJKxb/btsJE1IbP7Q/QHOth18WBqnBiKwnVFxJWK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dmJKxb/btsJE1IbP7Q/QHOth18WBqnBiKwnVFxJWK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdmJKxb%2FbtsJE1IbP7Q%2FQHOth18WBqnBiKwnVFxJWK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"U2.png\" data-origin-width=\"1180\" data-origin-height=\"609\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">2. 대화 중 메모리 저장</h3>\n<p data-ke-size=\"size16\">대화 도중, 사용자가 특정 정보를 기억하게 하고 싶다면, \"내가 아침 운동을 좋아한다는 것을 기억해줘\"와 같이 자연스럽게 요청할 수 있습니다. 이렇게 입력하면, ChatGPT는 이후 대화에서 해당 정보를 반영하여 맞춤형 답변을 제공합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"t1.jpg\" data-origin-width=\"1917\" data-origin-height=\"859\"><span data-url=\"https://blog.kakaocdn.net/dn/vBIfn/btsJG6gMgNB/UrcGQlNnId2XLJoEddCHK0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/vBIfn/btsJG6gMgNB/UrcGQlNnId2XLJoEddCHK0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/vBIfn/btsJG6gMgNB/UrcGQlNnId2XLJoEddCHK0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FvBIfn%2FbtsJG6gMgNB%2FUrcGQlNnId2XLJoEddCHK0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"t1.jpg\" data-origin-width=\"1917\" data-origin-height=\"859\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"t2.jpg\" data-origin-width=\"1572\" data-origin-height=\"322\"><span data-url=\"https://blog.kakaocdn.net/dn/bI1Dvo/btsJF691B9h/2Kuf1E0yQX08PcFP1DLQP0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bI1Dvo/btsJF691B9h/2Kuf1E0yQX08PcFP1DLQP0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bI1Dvo/btsJF691B9h/2Kuf1E0yQX08PcFP1DLQP0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbI1Dvo%2FbtsJF691B9h%2F2Kuf1E0yQX08PcFP1DLQP0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"t2.jpg\" data-origin-width=\"1572\" data-origin-height=\"322\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">3. 메모리 삭제</h3>\n<p data-ke-size=\"size16\">메모리 기능을 관리하는 것은 간단합니다. 취향이 바뀌었을 때는 \"아침 운동 선호를 잊어줘\"와 같은 명령어로 메모리를 삭제할 수 있습니다. 또한 설정에서 전체 메모리를 한꺼번에 삭제하거나, 특정 메모리만 삭제하는 것도 가능합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"t3.jpg\" data-origin-width=\"1914\" data-origin-height=\"859\"><span data-url=\"https://blog.kakaocdn.net/dn/chOUAB/btsJGg5CMal/nEg5ur2wYZLozgp0qqbsXk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/chOUAB/btsJGg5CMal/nEg5ur2wYZLozgp0qqbsXk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/chOUAB/btsJGg5CMal/nEg5ur2wYZLozgp0qqbsXk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FchOUAB%2FbtsJGg5CMal%2FnEg5ur2wYZLozgp0qqbsXk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"t3.jpg\" data-origin-width=\"1914\" data-origin-height=\"859\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">4. 메모리 확인</h3>\n<p data-ke-size=\"size16\">현재 ChatGPT가 어떤 정보를 기억하고 있는지 궁금하다면 \"너는 나에 대해 무엇을 기억하고 있니?\"라는 질문을 던지면 됩니다. 그러면 ChatGPT는 저장된 정보를 요약해 보여줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>메모리 기능 활용 예시</b></span></h2>\n<p data-ke-size=\"size16\">메모리 기능은 다양한 상황에서 유용하게 활용될 수 있습니다. 특히 일상적인 활동을 더 효율적으로 관리할 수 있도록 도와줍니다.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>운동 계획</b>: 아침에 간단한 홈트레이닝을 선호하는 사용자는 매번 설명하지 않아도, ChatGPT가 선호도에 맞춘 운동 루틴을 제안해줍니다.</li>\n<li><b>식단 관리</b>: 바쁜 일상 속에서 빠르게 준비할 수 있는 레시피를 요청할 때, ChatGPT는 사용자의 시간 제약과 식재료 선호도를 기억하고 맞춤형 제안을 제공합니다.</li>\n<li><b>기억 관리</b>: 메모리 기능을 사용하면 ChatGPT가 사용자의 과거 대화를 토대로 더 정확한 답변을 제공하며, 일관성 있는 조언을 받을 수 있습니다.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>결론</b></span></h2>\n<p data-ke-size=\"size16\">ChatGPT의 메모리 기능을 활용하면, 인공지능 챗봇이 단순히 질문에 답변하는 것에서 더 나아가, 사용자의 성향과 선호도를 반영하여 더 개인화된 답변을 제공합니다. 이를 통해 매번 처음부터 다시 설명할 필요 없이 일관성 있고 효율적인 대화를 이어갈 수 있습니다. 메모리 기능을 활성화하고 적절히 활용하여, ChatGPT의 잠재력을 극대화해보세요.</p>",
        "contentSnippet": "ChatGPT의 메모리 기능을 활용하면 매번 처음부터 설명하지 않아도, 개인의 취향과 선호도에 맞춘 맞춤형 답변을 받을 수 있습니다. 이 블로그에서는 메모리 기능을 설정하고 활용하는 방법에 대해 자세히 다룹니다.\n\n\n \n최근 인공지능 기술이 급격히 발전하면서, 많은 사람들이 ChatGPT 같은 챗봇을 일상적인 도구로 활용하고 있습니다. 하지만 ChatGPT를 더 효율적으로 사용하는 방법 중 하나는 바로 '메모리' 기능입니다. 이 기능을 통해 챗봇이 사용자의 선호도나 과거 대화 내용을 기억하여 더 개인화된 답변을 제공할 수 있습니다. 이번 글에서는 ChatGPT의 메모리 기능이 무엇인지, 어떻게 설정하고 활용할 수 있는지 알아보겠습니다.\n \nChatGPT 메모리 기능이란?\nChatGPT의 메모리 기능은 단순한 대화형 인공지능을 넘어 사용자의 과거 대화 내용을 기억하고, 이를 기반으로 맞춤형 답변을 제공하는 기능입니다. 예를 들어, 사용자가 \"저는 야외 활동을 좋아합니다\"라고 말하면, ChatGPT는 이 정보를 기억하고 향후 활동 추천 시 이러한 취향을 반영하게 됩니다.\n메모리 기능은 대화 중 자연스럽게 저장되며, 사용자는 명령어를 통해 특정 내용을 기억하거나 잊도록 지시할 수 있습니다. 이를 통해 매번 대화를 처음부터 다시 시작하지 않고, 사용자의 선호도와 성향에 맞춘 더 나은 답변을 받을 수 있습니다.\n \n \n메모리 기능의 장점\n맞춤형 추천: ChatGPT는 사용자의 취향을 기억하여 일관성 있는 추천을 제공합니다. 예를 들어, 사용자가 아침 운동을 선호한다고 입력하면, 이후 운동 루틴 제안 시 이러한 정보를 반영하여 더욱 개인화된 추천을 받을 수 있습니다.\n대화 시간 절약: 매번 취향을 설명할 필요가 없기 때문에 대화 시간이 단축됩니다. 이는 특히 자주 대화하는 경우 매우 유용합니다.\n자연스러운 정보 업데이트: 사용자의 취향이 바뀌면 \"아침 운동을 좋아한다는 정보를 잊어줘\"와 같은 간단한 명령어로 메모리를 수정할 수 있습니다.\n개인화된 피드백: 음식 조리법을 찾을 때도 사용자의 시간 제약이나 재료 선호도를 기억하여 맞춤형 요리법을 추천해줍니다.\n기억 관리 기능: 설정 메뉴에서 저장된 메모리를 관리할 수 있으며, 필요 시 삭제하거나 기능을 비활성화할 수도 있습니다.\n \nChatGPT 메모리 기능의 사용법\n1. 설정 방법\nChatGPT에서 메모리 기능을 사용하려면 설정 메뉴에서 개인화 탭으로 이동하여 메모리 기능을 활성화해야 합니다. 여기서 \"기억 관리\" 옵션을 통해 저장된 메모리를 확인하고, 불필요한 내용을 삭제할 수도 있습니다. ▼\n\n\n\n2. 대화 중 메모리 저장\n대화 도중, 사용자가 특정 정보를 기억하게 하고 싶다면, \"내가 아침 운동을 좋아한다는 것을 기억해줘\"와 같이 자연스럽게 요청할 수 있습니다. 이렇게 입력하면, ChatGPT는 이후 대화에서 해당 정보를 반영하여 맞춤형 답변을 제공합니다. ▼\n\n\n\n3. 메모리 삭제\n메모리 기능을 관리하는 것은 간단합니다. 취향이 바뀌었을 때는 \"아침 운동 선호를 잊어줘\"와 같은 명령어로 메모리를 삭제할 수 있습니다. 또한 설정에서 전체 메모리를 한꺼번에 삭제하거나, 특정 메모리만 삭제하는 것도 가능합니다. ▼\n\n\n4. 메모리 확인\n현재 ChatGPT가 어떤 정보를 기억하고 있는지 궁금하다면 \"너는 나에 대해 무엇을 기억하고 있니?\"라는 질문을 던지면 됩니다. 그러면 ChatGPT는 저장된 정보를 요약해 보여줍니다.\n \n \n메모리 기능 활용 예시\n메모리 기능은 다양한 상황에서 유용하게 활용될 수 있습니다. 특히 일상적인 활동을 더 효율적으로 관리할 수 있도록 도와줍니다.\n운동 계획: 아침에 간단한 홈트레이닝을 선호하는 사용자는 매번 설명하지 않아도, ChatGPT가 선호도에 맞춘 운동 루틴을 제안해줍니다.\n식단 관리: 바쁜 일상 속에서 빠르게 준비할 수 있는 레시피를 요청할 때, ChatGPT는 사용자의 시간 제약과 식재료 선호도를 기억하고 맞춤형 제안을 제공합니다.\n기억 관리: 메모리 기능을 사용하면 ChatGPT가 사용자의 과거 대화를 토대로 더 정확한 답변을 제공하며, 일관성 있는 조언을 받을 수 있습니다.\n \n결론\nChatGPT의 메모리 기능을 활용하면, 인공지능 챗봇이 단순히 질문에 답변하는 것에서 더 나아가, 사용자의 성향과 선호도를 반영하여 더 개인화된 답변을 제공합니다. 이를 통해 매번 처음부터 다시 설명할 필요 없이 일관성 있고 효율적인 대화를 이어갈 수 있습니다. 메모리 기능을 활성화하고 적절히 활용하여, ChatGPT의 잠재력을 극대화해보세요.",
        "guid": "http://muzbox.tistory.com/483473",
        "categories": [
          "AI, 미래기술/채팅",
          "chatgpt 맞춤형 답변",
          "chatgpt 메모리",
          "chatgpt 설정",
          "대화형 AI",
          "맞춤형 추천",
          "메모리 관리",
          "인공지능 챗봇",
          "테"
        ],
        "isoDate": "2024-09-19T22:26:34.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "(AI 프롬프트 다이어리) 효율적인 회의를 위한 준비 가이드: 핵심 체크리스트",
        "link": "http://muzbox.tistory.com/483472",
        "pubDate": "Thu, 19 Sep 2024 21:50:59 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483472#entry483472comment",
        "content": "<p data-ke-size=\"size16\">중요한 회의를 준비할 때 필수적으로 고려해야 할 다섯 가지 요소를 알아보세요. 회의 목적 설정, 자료 준비, 역할 분배, 시간 관리, 후속 조치까지, 성공적인 회의를 위한 상세한 가이드와 실제 프롬프트 예시 및 결과를 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1792\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/dt5J8e/btsJERsa90m/nokli35HQlgqtOjzo4UK6k/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/dt5J8e/btsJERsa90m/nokli35HQlgqtOjzo4UK6k/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/dt5J8e/btsJERsa90m/nokli35HQlgqtOjzo4UK6k/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdt5J8e%2FbtsJERsa90m%2Fnokli35HQlgqtOjzo4UK6k%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"효율적인 회의를 위한 준비 가이드: 핵심 체크리스트 gpt 프롬프트\" width=\"700\" height=\"400\" data-origin-width=\"1792\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;회의는 회사의 중요한 의사결정을 내리기 위한 필수적인 과정 중 하나입니다. 하지만 모든 회의가 효율적이고 생산적으로 진행되는 것은 아닙니다. 회의의 성과는 준비 과정에 따라 크게 좌우될 수 있으며, 특히 중요한 회의를 준비할 때는 철저한 계획이 필수적입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;본 기사에서는 \"중요한 회의를 준비할 때 고려해야 할 다섯 가지\"라는 주제로 작성된 프롬프트와 그에 따른 실제 결과를 포함해, 회의를 어떻게 준비하고 운영할 수 있는지에 대해 단계별로 설명합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>프롬프트:</b></span></h2>\n<pre class=\"angelscript\"><code>중요한 회의를 준비할 때 고려해야 할 다섯 가지를 알려줘.  \n1. 회의의 목적을 분명히 정의하는 방법을 제안해줘.  \n2. 필요한 자료와 데이터를 미리 준비하는 팁을 알려줘.  \n3. 회의 참여자들에게 명확한 역할을 분배하는 방법을 추천해줘.  \n4. 회의의 흐름을 관리하고 시간 안배를 잘 할 수 있는 방법을 알려줘.  \n5. 회의 후 후속 조치 및 정리를 효과적으로 할 수 있는 팁을 제시해줘.</code></pre>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i><b>프롬프트 예시:</b></i></span></h3>\n<pre class=\"angelscript\"><code>중요한 회의를 준비할 때 고려해야 할 다섯 가지를 알려줘.  \n1. 회의 주제는 신제품 출시 전략이야.  \n2. 자료는 시장 조사 보고서와 판매 예측 데이터를 포함해야 해.  \n3. 팀원들에게 각자 역할을 분명하게 부여하고, 시간을 효율적으로 관리할 수 있는 방법을 알려줘.</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><i><b>프롬프트 결과:</b></i></span></h3>\n<pre class=\"erlang\"><code>1. 회의 목적 정의: 신제품 출시 전략을 논의하기 위한 회의라면, 회의의 목표를 명확히 설정하세요. \n예를 들어, 출시 일정 확정, 마케팅 전략 논의, 시장 반응 예측 등 구체적인 목표를 설정해 회의가 \n집중될 수 있도록 합니다.\n\n2. 자료 준비: 회의 전에 필요한 모든 자료(시장 조사 보고서, 판매 예측 데이터, 경쟁 분석 등)를 \n준비하고, 이를 참석자들에게 미리 공유하세요. 자료의 핵심 부분을 요약해 회의 시간 동안 빠르게 \n참고할 수 있도록 하면 좋습니다.\n\n3. 역할 분배: 회의 참석자들에게 명확한 역할을 부여하세요. 예를 들어, A는 시장 조사 결과를 발표하고, \nB는 판매 예측 데이터를 제공하며, C는 마케팅 전략을 제안하도록 역할을 미리 설정합니다. \n이를 통해 회의가 더욱 체계적으로 진행됩니다.\n\n4. 시간 관리: 각 주제에 할당할 시간을 미리 정하고, 회의 진행자가 시간 안배를 신경 쓰도록 합니다.\n타이머를 사용하거나 시간을 관리해주는 도구를 활용하여 논의가 시간 내에 완료되도록 하세요.\n\n5. 후속 조치 및 정리: 회의가 끝난 후, 논의된 주요 사항과 결정을 요약해 참석자들에게 전달하고, \n후속 조치를 책임질 사람을 지정합니다. 이를 통해 회의에서 결정된 사항이 실질적으로 이행될 수 있도록 합니다.</code></pre>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>회의를 성공적으로 준비하기 위한 5가지 필수 팁</b></span></h2>\n<h3 data-ke-size=\"size23\">1. 회의 목적을 명확히 설정하기</h3>\n<p data-ke-size=\"size16\">회의의 성공 여부는 그 목적을 얼마나 분명히 설정하느냐에 크게 좌우됩니다. 회의의 목적이 불분명하면 논의의 방향이 흐트러지고, 목표 달성이 어려워집니다. 신제품 출시 전략과 같은 주제를 다룬다면, 구체적인 목표를 설정하는 것이 필수입니다. 예를 들어, <b>출시 일정 확정</b>, <b>마케팅 전략 논의</b>, <b>시장 반응 예측</b> 등의 세부적인 목표를 회의 시작 전에 설정함으로써 논의가 더욱 집중될 수 있습니다.</p>\n<h3 data-ke-size=\"size23\">2. 자료와 데이터를 미리 준비하기</h3>\n<p data-ke-size=\"size16\">준비된 자료는 회의의 흐름을 좌우합니다. 신제품 출시 회의에서는 <b>시장 조사 보고서</b>, <b>판매 예측 데이터</b>와 같은 필수적인 자료가 준비되어야 합니다. 이 자료들은 회의 전에 참석자들과 미리 공유되어야 하며, 핵심 내용을 요약해 빠르게 참고할 수 있도록 준비하는 것이 좋습니다. 이렇게 하면 회의 중에 필요한 정보를 빠르게 확인할 수 있어 논의가 원활하게 진행됩니다.</p>\n<h3 data-ke-size=\"size23\">3. 역할 분배를 명확히 하기</h3>\n<p data-ke-size=\"size16\">회의 참석자들에게 명확한 역할을 부여하는 것은 회의의 체계적 진행을 보장합니다. 예를 들어, A는 <b>시장 조사 결과 발표</b>, B는 <b>판매 예측 데이터 제공</b>, C는 <b>마케팅 전략 제안</b> 등 각자의 역할을 미리 정해두면 혼란 없이 회의가 진행될 수 있습니다. 각자가 맡은 바를 준비하고 발표하면 회의가 효율적으로 운영됩니다.</p>\n<h3 data-ke-size=\"size23\">4. 시간 관리의 중요성</h3>\n<p data-ke-size=\"size16\">회의의 생산성은 시간을 어떻게 관리하느냐에 달려 있습니다. 각 주제에 대해 할당할 시간을 미리 설정하고, 이를 관리할 진행자를 지정해 회의가 지나치게 길어지지 않도록 해야 합니다. 타이머나 일정 관리 도구를 사용해 시간을 명확히 관리함으로써 효율적인 논의가 가능합니다.</p>\n<h3 data-ke-size=\"size23\">5. 회의 후속 조치 및 정리</h3>\n<p data-ke-size=\"size16\">회의가 끝난 후, 논의된 주요 사항과 결정을 정리하여 참석자들에게 공유하는 것이 중요합니다. 또한, 후속 조치를 책임질 사람을 지정해 회의에서 결정된 내용이 실제로 실행될 수 있도록 해야 합니다. 이를 통해 회의에서 논의된 사항들이 구체적인 결과로 이어지게 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>결론</b></span></h2>\n<p data-ke-size=\"size16\">중요한 회의는 제대로 된 준비 과정이 있을 때 더 큰 성과를 낼 수 있습니다. 이번 기사에서 제시한 다섯 가지 요소인 <b>회의 목적 정의</b>, <b>자료 준비</b>, <b>역할 분배</b>, <b>시간 관리</b>, <b>후속 조치</b>를 통해 체계적으로 회의를 준비한다면, 보다 효율적이고 생산적인 회의를 진행할 수 있을 것입니다.</p>",
        "contentSnippet": "중요한 회의를 준비할 때 필수적으로 고려해야 할 다섯 가지 요소를 알아보세요. 회의 목적 설정, 자료 준비, 역할 분배, 시간 관리, 후속 조치까지, 성공적인 회의를 위한 상세한 가이드와 실제 프롬프트 예시 및 결과를 제공합니다.\n\n\n \n 회의는 회사의 중요한 의사결정을 내리기 위한 필수적인 과정 중 하나입니다. 하지만 모든 회의가 효율적이고 생산적으로 진행되는 것은 아닙니다. 회의의 성과는 준비 과정에 따라 크게 좌우될 수 있으며, 특히 중요한 회의를 준비할 때는 철저한 계획이 필수적입니다.\n \n 본 기사에서는 \"중요한 회의를 준비할 때 고려해야 할 다섯 가지\"라는 주제로 작성된 프롬프트와 그에 따른 실제 결과를 포함해, 회의를 어떻게 준비하고 운영할 수 있는지에 대해 단계별로 설명합니다.\n \n프롬프트:\n중요한 회의를 준비할 때 고려해야 할 다섯 가지를 알려줘.  \n1. 회의의 목적을 분명히 정의하는 방법을 제안해줘.  \n2. 필요한 자료와 데이터를 미리 준비하는 팁을 알려줘.  \n3. 회의 참여자들에게 명확한 역할을 분배하는 방법을 추천해줘.  \n4. 회의의 흐름을 관리하고 시간 안배를 잘 할 수 있는 방법을 알려줘.  \n5. 회의 후 후속 조치 및 정리를 효과적으로 할 수 있는 팁을 제시해줘.\n프롬프트 예시:\n중요한 회의를 준비할 때 고려해야 할 다섯 가지를 알려줘.  \n1. 회의 주제는 신제품 출시 전략이야.  \n2. 자료는 시장 조사 보고서와 판매 예측 데이터를 포함해야 해.  \n3. 팀원들에게 각자 역할을 분명하게 부여하고, 시간을 효율적으로 관리할 수 있는 방법을 알려줘.\n \n프롬프트 결과:\n1. 회의 목적 정의: 신제품 출시 전략을 논의하기 위한 회의라면, 회의의 목표를 명확히 설정하세요. \n예를 들어, 출시 일정 확정, 마케팅 전략 논의, 시장 반응 예측 등 구체적인 목표를 설정해 회의가 \n집중될 수 있도록 합니다.\n\n2. 자료 준비: 회의 전에 필요한 모든 자료(시장 조사 보고서, 판매 예측 데이터, 경쟁 분석 등)를 \n준비하고, 이를 참석자들에게 미리 공유하세요. 자료의 핵심 부분을 요약해 회의 시간 동안 빠르게 \n참고할 수 있도록 하면 좋습니다.\n\n3. 역할 분배: 회의 참석자들에게 명확한 역할을 부여하세요. 예를 들어, A는 시장 조사 결과를 발표하고, \nB는 판매 예측 데이터를 제공하며, C는 마케팅 전략을 제안하도록 역할을 미리 설정합니다. \n이를 통해 회의가 더욱 체계적으로 진행됩니다.\n\n4. 시간 관리: 각 주제에 할당할 시간을 미리 정하고, 회의 진행자가 시간 안배를 신경 쓰도록 합니다.\n타이머를 사용하거나 시간을 관리해주는 도구를 활용하여 논의가 시간 내에 완료되도록 하세요.\n\n5. 후속 조치 및 정리: 회의가 끝난 후, 논의된 주요 사항과 결정을 요약해 참석자들에게 전달하고, \n후속 조치를 책임질 사람을 지정합니다. 이를 통해 회의에서 결정된 사항이 실질적으로 이행될 수 있도록 합니다.\n회의를 성공적으로 준비하기 위한 5가지 필수 팁\n1. 회의 목적을 명확히 설정하기\n회의의 성공 여부는 그 목적을 얼마나 분명히 설정하느냐에 크게 좌우됩니다. 회의의 목적이 불분명하면 논의의 방향이 흐트러지고, 목표 달성이 어려워집니다. 신제품 출시 전략과 같은 주제를 다룬다면, 구체적인 목표를 설정하는 것이 필수입니다. 예를 들어, 출시 일정 확정, 마케팅 전략 논의, 시장 반응 예측 등의 세부적인 목표를 회의 시작 전에 설정함으로써 논의가 더욱 집중될 수 있습니다.\n2. 자료와 데이터를 미리 준비하기\n준비된 자료는 회의의 흐름을 좌우합니다. 신제품 출시 회의에서는 시장 조사 보고서, 판매 예측 데이터와 같은 필수적인 자료가 준비되어야 합니다. 이 자료들은 회의 전에 참석자들과 미리 공유되어야 하며, 핵심 내용을 요약해 빠르게 참고할 수 있도록 준비하는 것이 좋습니다. 이렇게 하면 회의 중에 필요한 정보를 빠르게 확인할 수 있어 논의가 원활하게 진행됩니다.\n3. 역할 분배를 명확히 하기\n회의 참석자들에게 명확한 역할을 부여하는 것은 회의의 체계적 진행을 보장합니다. 예를 들어, A는 시장 조사 결과 발표, B는 판매 예측 데이터 제공, C는 마케팅 전략 제안 등 각자의 역할을 미리 정해두면 혼란 없이 회의가 진행될 수 있습니다. 각자가 맡은 바를 준비하고 발표하면 회의가 효율적으로 운영됩니다.\n4. 시간 관리의 중요성\n회의의 생산성은 시간을 어떻게 관리하느냐에 달려 있습니다. 각 주제에 대해 할당할 시간을 미리 설정하고, 이를 관리할 진행자를 지정해 회의가 지나치게 길어지지 않도록 해야 합니다. 타이머나 일정 관리 도구를 사용해 시간을 명확히 관리함으로써 효율적인 논의가 가능합니다.\n5. 회의 후속 조치 및 정리\n회의가 끝난 후, 논의된 주요 사항과 결정을 정리하여 참석자들에게 공유하는 것이 중요합니다. 또한, 후속 조치를 책임질 사람을 지정해 회의에서 결정된 내용이 실제로 실행될 수 있도록 해야 합니다. 이를 통해 회의에서 논의된 사항들이 구체적인 결과로 이어지게 됩니다.\n \n \n결론\n중요한 회의는 제대로 된 준비 과정이 있을 때 더 큰 성과를 낼 수 있습니다. 이번 기사에서 제시한 다섯 가지 요소인 회의 목적 정의, 자료 준비, 역할 분배, 시간 관리, 후속 조치를 통해 체계적으로 회의를 준비한다면, 보다 효율적이고 생산적인 회의를 진행할 수 있을 것입니다.",
        "guid": "http://muzbox.tistory.com/483472",
        "categories": [
          "AI, 미래기술/프롬프트 다이어리",
          "GPT프롬프트",
          "성공적인 회의",
          "역할 분배",
          "자료 준비",
          "챗GPT",
          "회의 목적",
          "회의 시간 관리",
          "회의 준비",
          "후속 조치"
        ],
        "isoDate": "2024-09-19T12:50:59.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "윈도우용 추천 프리웨어 (2024.9.19)  마인드 매핑, 무료 원격 제어, 이미지 필터, PC사용이력관리, 메타데이터 편집",
        "link": "http://muzbox.tistory.com/483471",
        "pubDate": "Thu, 19 Sep 2024 08:57:41 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483471#entry483471comment",
        "content": "<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"background-color: #ffffff; color: #0d0d0d; text-align: start;\">&nbsp;네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"추천프리웨어.png\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/7QfC6/btsJDXloCZu/bxhQpE0z4KKtvk7sGKY8E1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/7QfC6/btsJDXloCZu/bxhQpE0z4KKtvk7sGKY8E1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/7QfC6/btsJDXloCZu/bxhQpE0z4KKtvk7sGKY8E1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F7QfC6%2FbtsJDXloCZu%2FbxhQpE0z4KKtvk7sGKY8E1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"윈도우용 추천 프리웨어 (2024.9.19)\" data-filename=\"추천프리웨어.png\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><span style=\"color: #333333; text-align: left;\">&nbsp;윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는<span>&nbsp;</span></span><b><span style=\"color: #009a87;\">상용프로그램</span></b><span style=\"color: #333333; text-align: left;\">과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의<span>&nbsp;</span></span><span style=\"color: #ee2323;\"><b>쉐어웨어</b></span><span style=\"color: #333333; text-align: left;\">, 무료로 사용할 수 있는<span>&nbsp;</span></span><b><span style=\"color: #ef6f53;\">프리웨어</span></b>등으로 크게 3가지로 나뉘게 되는데요.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\"><br />&nbsp;물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 <span style=\"color: #006dd7;\"><b>최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개</b></span>하고 있습니다.</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: left;\" data-ke-size=\"size18\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size18\">'어떤오후의 프리웨어 이야기'에서 추천하는<br /><span style=\"color: #409d00;\">&nbsp;<b>2024년 9월 19일자 공개자료실 윈도우용 추천 프리웨어</b></span>입니다.</p>\n<p id=\"no_1\" data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>1. Freeplane (다용도 마인드 매핑 도구)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 정보를 조직화하고 시각화하며 공유하기 위한 무료 오픈소스 애플리케이션으로, 프리마인드(FreeMind)의 재설계 버전입니다. 이 프로그램은 단순한 마인드맵 작성을 넘어서 조건부 스타일링, 노드 내 정보 숨김 및 표시, 하이퍼링크 사용 등 다양한 기능을 제공합니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;캘린더와 리마인더 도구가 내장되어 있어 시간 및 프로젝트 관리에 유용하며, 개별 노드나 전체 맵에 대한 DES 암호화 기능도 제공합니다. 스크립트와 애드온을 통해 기능을 확장할 수 있으며, 완성된 맵은 이미지, HTML 페이지, Flash 등 다양한 형식으로 공유할 수 있습니다. 그러나 일부 내보내기 기능에서는 원본과 차이가 있을 수 있다는 점에 유의해야 합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"Freeplane.jpg\" data-origin-width=\"1042\" data-origin-height=\"669\"><span data-url=\"https://blog.kakaocdn.net/dn/bBgPSL/btsJE0PchcH/J1WKVEqqdk2IwSXJJzDKT1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bBgPSL/btsJE0PchcH/J1WKVEqqdk2IwSXJJzDKT1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bBgPSL/btsJE0PchcH/J1WKVEqqdk2IwSXJJzDKT1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbBgPSL%2FbtsJE0PchcH%2FJ1WKVEqqdk2IwSXJJzDKT1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"Freeplane.jpg\" data-origin-width=\"1042\" data-origin-height=\"669\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶ 프리웨어 - 개인/기업(오픈소스)</p>\n<p data-ke-size=\"size18\">▶ Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드◀</p>\n<figure id=\"og_1726703542928\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"product\" data-og-title=\"Freeplane\" data-og-description=\"Download Freeplane for free. Application for Mind Mapping, Knowledge and Project Management. Application for Mind Mapping, Knowledge Management, Project Management. Develop, organize and communicate your ideas and knowledge in the most effective way.\" data-og-host=\"sourceforge.net\" data-og-source-url=\"https://sourceforge.net/projects/freeplane/\" data-og-url=\"https://sourceforge.net/projects/freeplane/\" data-og-image=\"https://scrap.kakaocdn.net/dn/cvVyXh/hyW2Zcng1g/mGjKF7z1ugqM3ECkLkKTRk/img.png?width=48&amp;height=48&amp;face=0_0_48_48\"><a href=\"https://sourceforge.net/projects/freeplane/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://sourceforge.net/projects/freeplane/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cvVyXh/hyW2Zcng1g/mGjKF7z1ugqM3ECkLkKTRk/img.png?width=48&amp;height=48&amp;face=0_0_48_48');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Freeplane</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Download Freeplane for free. Application for Mind Mapping, Knowledge and Project Management. Application for Mind Mapping, Knowledge Management, Project Management. Develop, organize and communicate your ideas and knowledge in the most effective way.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">sourceforge.net</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_2\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>2. RustDesk (무료 원격 제어)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 팀뷰어(TeamViewer)가&nbsp;무료&nbsp;사용자에&nbsp;대한&nbsp;제한을&nbsp;강화하면서,&nbsp;러스트데스크(RustDesk)가&nbsp;오픈소스&nbsp;대안으로&nbsp;등장했습니다.&nbsp;러스트데스크는&nbsp;팀뷰어와&nbsp;유사한&nbsp;사용자&nbsp;경험을&nbsp;제공하며,&nbsp;숫자&nbsp;ID와&nbsp;비밀번호를&nbsp;사용하여&nbsp;원격&nbsp;지원&nbsp;및&nbsp;접속을&nbsp;가능하게&nbsp;합니다.&nbsp;이&nbsp;프로그램은&nbsp;다양한&nbsp;플랫폼에서&nbsp;사용할&nbsp;수&nbsp;있으며,&nbsp;화면&nbsp;공유부터&nbsp;완전한&nbsp;제어까지&nbsp;다양한&nbsp;수준의&nbsp;접근을&nbsp;허용합니다.&nbsp;러스트데스크는&nbsp;화면&nbsp;크기&nbsp;조정,&nbsp;텍스트&nbsp;메시지&nbsp;전송,&nbsp;파일&nbsp;전송&nbsp;등&nbsp;팀뷰어의&nbsp;주요&nbsp;기능들을&nbsp;대부분&nbsp;제공하지만,&nbsp;자체&nbsp;서버&nbsp;사용&nbsp;시&nbsp;연결&nbsp;속도가&nbsp;느릴&nbsp;수&nbsp;있다는&nbsp;단점이&nbsp;있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"RustDesk.png\" data-origin-width=\"1280\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/bh1Gj4/btsJF5oL9ce/lYcGaCJcyLZchagtRGfRXk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bh1Gj4/btsJF5oL9ce/lYcGaCJcyLZchagtRGfRXk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bh1Gj4/btsJF5oL9ce/lYcGaCJcyLZchagtRGfRXk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbh1Gj4%2FbtsJF5oL9ce%2FlYcGaCJcyLZchagtRGfRXk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"RustDesk.png\" data-origin-width=\"1280\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인/기업(오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드&nbsp;</p>\n<figure id=\"og_1726703654599\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"RustDesk &ndash; The Open Source Remote Desktop Access Software\" data-og-description=\"Open source remote desktop access solutions by RustDesk: connect to remote computers, provide remote support &amp; collaborate online, and alternative to TeamViewer.\" data-og-host=\"rustdesk.com\" data-og-source-url=\"https://rustdesk.com/\" data-og-url=\"https://rustdesk.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/NC8PW/hyW2V8QH9q/SQBH4RyzmsIUEhfsY47zmk/img.png?width=1600&amp;height=630&amp;face=0_0_1600_630,https://scrap.kakaocdn.net/dn/sMPdr/hyW6MbnjMj/Y77LYhQbTRWjp5YhydoDyK/img.png?width=1600&amp;height=630&amp;face=0_0_1600_630,https://scrap.kakaocdn.net/dn/bUghPZ/hyW2Ykhm2V/dvgKs5E3AYyewRL4qVNnK0/img.png?width=2223&amp;height=1482&amp;face=0_0_2223_1482\"><a href=\"https://rustdesk.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://rustdesk.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/NC8PW/hyW2V8QH9q/SQBH4RyzmsIUEhfsY47zmk/img.png?width=1600&amp;height=630&amp;face=0_0_1600_630,https://scrap.kakaocdn.net/dn/sMPdr/hyW6MbnjMj/Y77LYhQbTRWjp5YhydoDyK/img.png?width=1600&amp;height=630&amp;face=0_0_1600_630,https://scrap.kakaocdn.net/dn/bUghPZ/hyW2Ykhm2V/dvgKs5E3AYyewRL4qVNnK0/img.png?width=2223&amp;height=1482&amp;face=0_0_2223_1482');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">RustDesk &ndash; The Open Source Remote Desktop Access Software</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Open source remote desktop access solutions by RustDesk: connect to remote computers, provide remote support &amp; collaborate online, and alternative to TeamViewer.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">rustdesk.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_3\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>3. G'MIC (놀랍도록 유연한 이미지 처리 도구)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;명령줄이나 GIMP 플러그인을 통해 사용할 수 있는 강력한 이미지 처리 도구입니다. 이 프로그램은 간단한 이미지 보기와 변환부터 고급 필터 및 처리 명령어까지 다양한 기능을 제공합니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;이미지 미러링, 자르기, 회전, 크기 조정, 블러 및 샤프닝, 적목 현상 제거, 다양한 왜곡 효과 적용, 고품질 페인팅 및 드로잉 효과, 애니메이션 생성, 캡션 및 테두리 추가 등을 할 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;일부 효과는 사용하기 쉽지만, G'MIC은 전문가를 위한 놀라운 유연성도 제공하며, 이미지 처리뿐만 아니라 비디오 작업, 2D 또는 3D 함수 플로팅, 3D 로고 및 모델 생성, 필터링된 웹캠 스트림 표시 등 다양한 기능을 수행할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GMIC.png\" data-origin-width=\"967\" data-origin-height=\"683\"><span data-url=\"https://blog.kakaocdn.net/dn/3AfWp/btsJDTjbgW3/I6PJJukRZrohaMZp9uzOZ0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/3AfWp/btsJDTjbgW3/I6PJJukRZrohaMZp9uzOZ0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/3AfWp/btsJDTjbgW3/I6PJJukRZrohaMZp9uzOZ0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F3AfWp%2FbtsJDTjbgW3%2FI6PJJukRZrohaMZp9uzOZ0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"GMIC.png\" data-origin-width=\"967\" data-origin-height=\"683\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶ 프리웨어 - 개인/기업(오픈소스)</p>\n<p data-ke-size=\"size18\">▶Windows 10/11&nbsp;</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1726703700936\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"G'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source Framework for Image Processing - Main\" data-og-description=\"Here are some screenshots illustrating various uses of G'MIC. It shows how it is able to process and visualize different types of 1D/2D/3D image datasets. G'MIC is actually a handy toolbox for many image/signal processing applications. See also the Gallery\" data-og-host=\"gmic.eu\" data-og-source-url=\"https://gmic.eu/\" data-og-url=\"https://gmic.eu/\" data-og-image=\"\"><a href=\"https://gmic.eu/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://gmic.eu/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">G'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source Framework for Image Processing - Main</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Here are some screenshots illustrating various uses of G'MIC. It shows how it is able to process and visualize different types of 1D/2D/3D image datasets. G'MIC is actually a handy toolbox for many image/signal processing applications. See also the Gallery</p>\n<p class=\"og-host\" data-ke-size=\"size16\">gmic.eu</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_4\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>4. ManicTime (사용 중인 PC 프로그램과 사용 기간을 기록)<br /></b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp;단순히&nbsp;CAD&nbsp;도면을&nbsp;보는&nbsp;것&nbsp;이상의&nbsp;기능을&nbsp;제공합니다.&nbsp;2D&nbsp;DWG,&nbsp;3D&nbsp;STEP,&nbsp;2D/3D&nbsp;VariCAD&nbsp;등&nbsp;다양한&nbsp;형식의&nbsp;파일을&nbsp;지원하며,&nbsp;간단한&nbsp;조정과&nbsp;인쇄&nbsp;기능도&nbsp;갖추고&nbsp;있습니다.&nbsp;이&nbsp;프로그램은&nbsp;3D&nbsp;모델링에&nbsp;대해&nbsp;잘&nbsp;아는&nbsp;전문가들을&nbsp;위해&nbsp;설계되었습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;인터페이스는 현대적이지만 다양한 기능으로 인해 다소 복잡해 보일 수 있습니다. 그러나 CAD 경험이 있는 사용자라면 직관적으로 사용할 수 있을 것입니다. 도구 모음의 배치를 사용자가 원하는 대로 조정할 수 있는 것도 장점입니다.컴퓨터 사용을 모니터링하여 사용한 프로그램, 시간, 그리고 사용 기간을 추적하는 활동 추적기입니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;복잡한 설정 없이 프로그램을 실행하면 자동으로 사용자의 활동을 추적하며, 색상으로 구분된 타임라인을 통해 컴퓨터 사용 시간, 실행한 애플리케이션, 방문한 웹사이트, 작업한 문서 등을 한눈에 볼 수 있습니다. ManicTime은 raw 데이터를 표 형식으로 제공하고, 작업 세션 길이와 각 애플리케이션 사용 시간을 요약하여 보여줍니다. 또한 통계 탭에서는 상위 문서, 상위 애플리케이션 등 추가 정보를 제공하며, 이 데이터들은 PNG 이미지나 CSV 형식으로 내보낼 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"ManicTime.png\" data-origin-width=\"906\" data-origin-height=\"668\"><span data-url=\"https://blog.kakaocdn.net/dn/bFEL2q/btsJFGiobto/Wm3Cjlu3pOHuabZZ1H3u3k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bFEL2q/btsJFGiobto/Wm3Cjlu3pOHuabZZ1H3u3k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bFEL2q/btsJFGiobto/Wm3Cjlu3pOHuabZZ1H3u3k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbFEL2q%2FbtsJFGiobto%2FWm3Cjlu3pOHuabZZ1H3u3k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"ManicTime.png\" data-origin-width=\"906\" data-origin-height=\"668\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1726703760218\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ManicTime - Automatic time tracking software\" data-og-description=\"Manage your time better Let ManicTime focus on keeping track of your time, so you can focus on your business\" data-og-host=\"www.manictime.com\" data-og-source-url=\"https://www.manictime.com/\" data-og-url=\"https://www.manictime.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/bmwkPO/hyW6xedEyn/xj8JxJ8LkyU0N1FjNEwqi0/img.png?width=1444&amp;height=327&amp;face=0_0_1444_327\"><a href=\"https://www.manictime.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.manictime.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bmwkPO/hyW6xedEyn/xj8JxJ8LkyU0N1FjNEwqi0/img.png?width=1444&amp;height=327&amp;face=0_0_1444_327');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ManicTime - Automatic time tracking software</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Manage your time better Let ManicTime focus on keeping track of your time, so you can focus on your business</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.manictime.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p id=\"no_5\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><i><b>5. ExifTool (메타데이터 편집 프로그램)</b></i></span></h2>\n<p data-ke-size=\"size18\">&nbsp; 오디오,&nbsp;비디오,&nbsp;이미지,&nbsp;문서,&nbsp;아카이브&nbsp;등&nbsp;다양한&nbsp;파일&nbsp;유형의&nbsp;메타데이터를&nbsp;보고,&nbsp;편집하고,&nbsp;쓸&nbsp;수&nbsp;있게&nbsp;해주는&nbsp;명령줄&nbsp;도구입니다.&nbsp;이&nbsp;프로그램은&nbsp;일반적인&nbsp;파일&nbsp;형식뿐만&nbsp;아니라&nbsp;Adobe&nbsp;InDesign&nbsp;문서,&nbsp;Visio&nbsp;도면,&nbsp;다양한&nbsp;RAW&nbsp;형식&nbsp;등&nbsp;독점적인&nbsp;형식과&nbsp;RAR,&nbsp;WEBM,&nbsp;SWF&nbsp;같은&nbsp;예상치&nbsp;못한&nbsp;파일&nbsp;유형의&nbsp;메타데이터도&nbsp;처리할&nbsp;수&nbsp;있습니다.&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;ExifTool은 단순히 메타데이터를 표시, 편집, 쓰는 것을 넘어 메타데이터를 기반으로 파일을 처리하고, RAW 파일에서 썸네일 이미지를 추출하며, GPS 트랙 로그 파일을 기반으로 이미지에 지오태그를 추가하는 등 다양한 작업을 수행할 수 있습니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p data-ke-size=\"size18\">&nbsp;그러나 명령줄 도구이기 때문에 복잡한 구문을 익혀야 하는 어려움이 있지만, 간단한 작업부터 시작하여 점진적으로 기능을 익힐 수 있으며, 필요한 경우 그래픽 사용자 인터페이스를 제공하는 프론트엔드를 사용할 수도 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"ExifTool.png\" data-origin-width=\"637\" data-origin-height=\"383\"><span data-url=\"https://blog.kakaocdn.net/dn/Du9w3/btsJEEll01U/yuqCUMAipvqKJOhGE4vUIk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Du9w3/btsJEEll01U/yuqCUMAipvqKJOhGE4vUIk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Du9w3/btsJEEll01U/yuqCUMAipvqKJOhGE4vUIk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FDu9w3%2FbtsJEEll01U%2FyuqCUMAipvqKJOhGE4vUIk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"ExifTool.png\" data-origin-width=\"637\" data-origin-height=\"383\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">▶프리웨어 - 개인</p>\n<p data-ke-size=\"size18\">▶Windows 10/11</p>\n<p data-ke-size=\"size18\">▶무료 다운로드 ◀</p>\n<figure id=\"og_1726703799632\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ExifTool by Phil Harvey\" data-og-description=\"0 (Information&nbsp;Type) AAC, AFCP, AIFF, APE, APP0, APP1, APP11, APP12, APP13, APP14, APP15, APP2, APP3, APP4, APP5, APP6, APP7, APP8, APP9, ASF, Audible, Canon, CanonVRD, Composite, DICOM, DNG, DV, DjVu, Ducky, EXE, EXIF, ExifTool, FITS, FLAC, FLIR, File, F\" data-og-host=\"exiftool.org\" data-og-source-url=\"https://exiftool.org/\" data-og-url=\"https://exiftool.org/\" data-og-image=\"\"><a href=\"https://exiftool.org/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://exiftool.org/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ExifTool by Phil Harvey</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">0 (Information&nbsp;Type) AAC, AFCP, AIFF, APE, APP0, APP1, APP11, APP12, APP13, APP14, APP15, APP2, APP3, APP4, APP5, APP6, APP7, APP8, APP9, ASF, Audible, Canon, CanonVRD, Composite, DICOM, DNG, DV, DjVu, Ducky, EXE, EXIF, ExifTool, FITS, FLAC, FLIR, File, F</p>\n<p class=\"og-host\" data-ke-size=\"size16\">exiftool.org</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "네이버 소프트웨어와 같은 프로그램 소개 사이트가 종료된 후, 윈도우 운영체제를 사용하는 이용자들을 위해 공개 프리웨어 및 오픈소스 프로그램을 소개합니다. 유용한 무료 소프트웨어를 찾고자 하는 사용자들에게 정기적으로 알찬 정보를 제공합니다.\n\n\n \n 윈도우용 응용프로그램 (Application)은 수없이 많은 종류가 많은 개발자들에 의해 하루에도 수백,수천개가 새로 출시되고 그보다 더 많은 수의 프로그램들이 업데이트 됩니다. 이들 응용프로그램 (Application)은 비율을 지불해야하는 상용프로그램과 정품 구매를 확대하기 위해 공급하는 일종의 샘플 개념의 쉐어웨어, 무료로 사용할 수 있는 프리웨어등으로 크게 3가지로 나뉘게 되는데요.\n 물론 프리웨어에도 개인만 사용할 있다던가, 기업이나 관공서에서도 사용이 가능하다던가, 소스까지 같이 공개하여 맘대로 수정과 배포가 가능한 완전 무료등의 추가 분류가 필요합니다. 하지만, 개발자가 공개하는 무료배포의 의미가 정확하지 않는 프로그램도 많고, 저작권의 정의도 각양각색이라 본 블로그에서 소개하는 프리웨어도 최대한 확인이 가능한 범위에서 개인 또는 기업에서 사용가능한지를 구분하여 소개하고 있습니다.\n \n \n'어떤오후의 프리웨어 이야기'에서 추천하는\n 2024년 9월 19일자 공개자료실 윈도우용 추천 프리웨어입니다.\n \n \n1. Freeplane (다용도 마인드 매핑 도구)\n\n  정보를 조직화하고 시각화하며 공유하기 위한 무료 오픈소스 애플리케이션으로, 프리마인드(FreeMind)의 재설계 버전입니다. 이 프로그램은 단순한 마인드맵 작성을 넘어서 조건부 스타일링, 노드 내 정보 숨김 및 표시, 하이퍼링크 사용 등 다양한 기능을 제공합니다.\n \n 캘린더와 리마인더 도구가 내장되어 있어 시간 및 프로젝트 관리에 유용하며, 개별 노드나 전체 맵에 대한 DES 암호화 기능도 제공합니다. 스크립트와 애드온을 통해 기능을 확장할 수 있으며, 완성된 맵은 이미지, HTML 페이지, Flash 등 다양한 형식으로 공유할 수 있습니다. 그러나 일부 내보내기 기능에서는 원본과 차이가 있을 수 있다는 점에 유의해야 합니다.\n\n\n \n▶ 프리웨어 - 개인/기업(오픈소스)\n▶ Windows 10/11\n▶무료 다운로드◀\n\n \nFreeplane\nDownload Freeplane for free. Application for Mind Mapping, Knowledge and Project Management. Application for Mind Mapping, Knowledge Management, Project Management. Develop, organize and communicate your ideas and knowledge in the most effective way.\nsourceforge.net\n\n \n \n \n \n \n \n \n2. RustDesk (무료 원격 제어)\n  팀뷰어(TeamViewer)가 무료 사용자에 대한 제한을 강화하면서, 러스트데스크(RustDesk)가 오픈소스 대안으로 등장했습니다. 러스트데스크는 팀뷰어와 유사한 사용자 경험을 제공하며, 숫자 ID와 비밀번호를 사용하여 원격 지원 및 접속을 가능하게 합니다. 이 프로그램은 다양한 플랫폼에서 사용할 수 있으며, 화면 공유부터 완전한 제어까지 다양한 수준의 접근을 허용합니다. 러스트데스크는 화면 크기 조정, 텍스트 메시지 전송, 파일 전송 등 팀뷰어의 주요 기능들을 대부분 제공하지만, 자체 서버 사용 시 연결 속도가 느릴 수 있다는 단점이 있습니다.\n\n\n \n▶프리웨어 - 개인/기업(오픈소스)\n▶Windows 10/11\n▶무료 다운로드 \n\n \nRustDesk – The Open Source Remote Desktop Access Software\nOpen source remote desktop access solutions by RustDesk: connect to remote computers, provide remote support & collaborate online, and alternative to TeamViewer.\nrustdesk.com\n\n \n \n \n \n \n \n \n3. G'MIC (놀랍도록 유연한 이미지 처리 도구)\n 명령줄이나 GIMP 플러그인을 통해 사용할 수 있는 강력한 이미지 처리 도구입니다. 이 프로그램은 간단한 이미지 보기와 변환부터 고급 필터 및 처리 명령어까지 다양한 기능을 제공합니다.\n \n 이미지 미러링, 자르기, 회전, 크기 조정, 블러 및 샤프닝, 적목 현상 제거, 다양한 왜곡 효과 적용, 고품질 페인팅 및 드로잉 효과, 애니메이션 생성, 캡션 및 테두리 추가 등을 할 수 있습니다.\n \n 일부 효과는 사용하기 쉽지만, G'MIC은 전문가를 위한 놀라운 유연성도 제공하며, 이미지 처리뿐만 아니라 비디오 작업, 2D 또는 3D 함수 플로팅, 3D 로고 및 모델 생성, 필터링된 웹캠 스트림 표시 등 다양한 기능을 수행할 수 있습니다.\n\n\n▶ 프리웨어 - 개인/기업(오픈소스)\n▶Windows 10/11 \n▶무료 다운로드 ◀\n\n \nG'MIC - GREYC's Magic for Image Computing: A Full-Featured Open-Source Framework for Image Processing - Main\nHere are some screenshots illustrating various uses of G'MIC. It shows how it is able to process and visualize different types of 1D/2D/3D image datasets. G'MIC is actually a handy toolbox for many image/signal processing applications. See also the Gallery\ngmic.eu\n\n \n \n \n \n \n \n \n4. ManicTime (사용 중인 PC 프로그램과 사용 기간을 기록)\n\n 단순히 CAD 도면을 보는 것 이상의 기능을 제공합니다. 2D DWG, 3D STEP, 2D/3D VariCAD 등 다양한 형식의 파일을 지원하며, 간단한 조정과 인쇄 기능도 갖추고 있습니다. 이 프로그램은 3D 모델링에 대해 잘 아는 전문가들을 위해 설계되었습니다.\n \n 인터페이스는 현대적이지만 다양한 기능으로 인해 다소 복잡해 보일 수 있습니다. 그러나 CAD 경험이 있는 사용자라면 직관적으로 사용할 수 있을 것입니다. 도구 모음의 배치를 사용자가 원하는 대로 조정할 수 있는 것도 장점입니다.컴퓨터 사용을 모니터링하여 사용한 프로그램, 시간, 그리고 사용 기간을 추적하는 활동 추적기입니다.\n \n 복잡한 설정 없이 프로그램을 실행하면 자동으로 사용자의 활동을 추적하며, 색상으로 구분된 타임라인을 통해 컴퓨터 사용 시간, 실행한 애플리케이션, 방문한 웹사이트, 작업한 문서 등을 한눈에 볼 수 있습니다. ManicTime은 raw 데이터를 표 형식으로 제공하고, 작업 세션 길이와 각 애플리케이션 사용 시간을 요약하여 보여줍니다. 또한 통계 탭에서는 상위 문서, 상위 애플리케이션 등 추가 정보를 제공하며, 이 데이터들은 PNG 이미지나 CSV 형식으로 내보낼 수 있습니다.\n\n\n \n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nManicTime - Automatic time tracking software\nManage your time better Let ManicTime focus on keeping track of your time, so you can focus on your business\nwww.manictime.com\n\n \n \n \n \n \n \n5. ExifTool (메타데이터 편집 프로그램)\n  오디오, 비디오, 이미지, 문서, 아카이브 등 다양한 파일 유형의 메타데이터를 보고, 편집하고, 쓸 수 있게 해주는 명령줄 도구입니다. 이 프로그램은 일반적인 파일 형식뿐만 아니라 Adobe InDesign 문서, Visio 도면, 다양한 RAW 형식 등 독점적인 형식과 RAR, WEBM, SWF 같은 예상치 못한 파일 유형의 메타데이터도 처리할 수 있습니다. \n \n ExifTool은 단순히 메타데이터를 표시, 편집, 쓰는 것을 넘어 메타데이터를 기반으로 파일을 처리하고, RAW 파일에서 썸네일 이미지를 추출하며, GPS 트랙 로그 파일을 기반으로 이미지에 지오태그를 추가하는 등 다양한 작업을 수행할 수 있습니다.\n \n 그러나 명령줄 도구이기 때문에 복잡한 구문을 익혀야 하는 어려움이 있지만, 간단한 작업부터 시작하여 점진적으로 기능을 익힐 수 있으며, 필요한 경우 그래픽 사용자 인터페이스를 제공하는 프론트엔드를 사용할 수도 있습니다.\n\n\n▶프리웨어 - 개인\n▶Windows 10/11\n▶무료 다운로드 ◀\n\n \nExifTool by Phil Harvey\n0 (Information Type) AAC, AFCP, AIFF, APE, APP0, APP1, APP11, APP12, APP13, APP14, APP15, APP2, APP3, APP4, APP5, APP6, APP7, APP8, APP9, ASF, Audible, Canon, CanonVRD, Composite, DICOM, DNG, DV, DjVu, Ducky, EXE, EXIF, ExifTool, FITS, FLAC, FLIR, File, F\nexiftool.org",
        "guid": "http://muzbox.tistory.com/483471",
        "categories": [
          "NEWS/프리웨어 뉴스",
          "pc사용이력관리",
          "공개자료실",
          "마인드 매핑",
          "메타데이터 편집",
          "무료 원격 제어",
          "무료프로그램",
          "이미지 필터",
          "추천프로그램",
          "프리웨어"
        ],
        "isoDate": "2024-09-18T23:57:41.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": [
      {
        "creator": "늑돌이",
        "title": "DJI, 고화질&middot;고성능의 OSMO ACTION 5 Pro(오스모 액션 5 프로) 출시",
        "link": "https://lazion.com/2513724",
        "pubDate": "Fri, 20 Sep 2024 11:52:17 +0900",
        "author": "늑돌이",
        "comments": "https://lazion.com/2513724#entry2513724comment",
        "content": "<h3 data-ke-size=\"size23\">드론과 액션캠으로 유명한 <b>DJI</b>에서 차세대 12mm(1/1.3\") 센서와 고성능&middot;저전력 4nm 칩으로 고화질과 고성능을 강조한 <b>Osmo Action 5 Pro(오스모 액션 5프로)</b>를 출시했습니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"001 - a48eb8d8ef79317374c957996052d64c@ultra.jpg\" data-origin-width=\"1280\" data-origin-height=\"1280\"><span data-url=\"https://blog.kakaocdn.net/dn/vr9HT/btsJETp68Nh/qL2fzUbZosy2jo2FokGO41/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/vr9HT/btsJETp68Nh/qL2fzUbZosy2jo2FokGO41/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/vr9HT/btsJETp68Nh/qL2fzUbZosy2jo2FokGO41/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fvr9HT%2FbtsJETp68Nh%2FqL2fzUbZosy2jo2FokGO41%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"001 - a48eb8d8ef79317374c957996052d64c@ultra.jpg\" data-origin-width=\"1280\" data-origin-height=\"1280\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>Osmo Action 5 Pro(오스모 액션 5프로)의 주요 특징</b> </span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">1. 고화질의 차세대 12mm(1/1.3\") 센서 탑재</h4>\n<p data-ke-size=\"size16\">차세대 12mm(1/1.3\") 센서와 2.4&mu;m 픽셀 크기 및 최대 13.5스톱 다이내믹 레인지를 갖춘 첫 액션캠으로, 10-bit D-Log M 촬영 및 HLG(Hybrid Log-Gamma) 고휘도 디스플레이도 지원합니다. 4K/60fps 화질로 넓은 다이내믹 레인지 저조도 영상 촬영이 가능합니다. 어두운 환경을 위해 AI 노이즈 감소 알고리즘이 적용된 Super Night(슈퍼나이트) 모드도 제공합니다.<br /><br /></p>\n<h4 data-ke-size=\"size20\">2. 4nm 칩 채용으로 고성능&middot;저전력 달성</h4>\n<p data-ke-size=\"size16\">고성능 4nm 칩과 머신러닝 알고리즘이 탑재되어 피사체의 위치를 스마트하게 감지하고 모든 프레임에서 피사체를 중앙에 유지하도록 구도를 다이내믹하게 조정하는 피사체 중앙 유지 및 추적 기능을 탑재한 첫번째 액션 카메라입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1950mAh 용량의 배터리 하나로 이전 모델 대비 50% 향상된 최대 4시간 지속 사용이 가능합니다. 최저 -20&deg;C에서도 최대 3.6시간 동안 안정적으로 촬영 가능하며, DJI 30W USB-C 고속충전기를 사용하면 15분 충전으로 2시간 촬영이 가능합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_004 - 017f94ccdccb3fc53be11bc11e0b2527@ultra.jpg\" data-origin-width=\"1280\" data-origin-height=\"852\"><span data-url=\"https://blog.kakaocdn.net/dn/txkf0/btsJFGX3six/jMFRJaApdKBBhBHKwYR5pK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/txkf0/btsJFGX3six/jMFRJaApdKBBhBHKwYR5pK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/txkf0/btsJFGX3six/jMFRJaApdKBBhBHKwYR5pK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Ftxkf0%2FbtsJFGX3six%2FjMFRJaApdKBBhBHKwYR5pK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_004 - 017f94ccdccb3fc53be11bc11e0b2527@ultra.jpg\" data-origin-width=\"1280\" data-origin-height=\"852\"/></span></figure>\n</p>\n<h4 data-ke-size=\"size20\">3. 업계 최초 피사체 중앙 유지 및 추적 기능 탑재</h4>\n<p data-ke-size=\"size16\">Osmo Action 5 Pro는 피사체 중앙 유지 및 추적 기능을 탑재한 첫 액션 카메라로 크리에이터들은 짐벌 없이도 촬영을 할 수 있습니다. 고성능 4nm 칩과 머신러닝 알고리즘이 탑재되어 피사체의 위치를 스마트하게 감지하고 모든 프레임에서 피사체를 중앙에 유지하도록 구도를 다이내믹하게 조정하는 것도 가능합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">4. 개선된 수중 성능</h4>\n<p data-ke-size=\"size16\">별도의 케이스 없이도 최대 수심 20미터까지 방수 가능하며 내장 색온도 센서로 수중 활동을 사실적인 색감으로 표현합니다. 입수 시 자동 촬영 시작 및 수면 위로 떠오른 후에는 자동 촬영 중지가 가능하며 내장 압력계로 수중 수심과 활동 시간 및 고도 데이터를 기록할 수 있습니다. EN13319 인증을 받아 국제적인 다이빙 액세서리 표준을 충족합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">5. 듀얼 OLED 고휘도 터치스크린</h4>\n<p data-ke-size=\"size16\">전면 및 후면의 LCD 디스플레이가 고휘도 OLED 패널의 강화 유리 터치스크린 디스플레이로 업그레이드되었으며 전면 1.46인치, 후면 2.5인치로 더욱 커져 카메라 본체 크기는 그대로 유지하면서 화면을 크게 만들었습니다.</p>\n<p data-ke-size=\"size16\">최대 1000cd/㎡의 피크 밝기로 낮 시간대의 촬영이 더욱 쉬워졌습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">6. 그 밖의 개선사항들</h4>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>DJI OsmoAudio 연결 생태계를 활용, 블루투스로 DJI Mic 2에 직접 연결하여 스튜디오급 음향 제공</li>\n<li>내장 마이크의 오디오 백업 기능으로 주변 음향을 녹음해 풍부한 레이어를 추가 가능</li>\n<li>47GB 내장 메모리 더욱 최적화된 비트 전송률로 파일 크기 줄임 및 저장</li>\n<li>고속 전송 Wi-Fi 6.0 또는 USB 3.0 통해 최대 80MB/s 전송 지원</li>\n<li>Wi-Fi 라이브 다양한 해상도 지원</li>\n<li>타임코드 다수의 카메라에서 빠르게 영상 동기화 가능</li>\n<li>라이브 사진 3초 동영상을 다이내믹한 사진으로 변환 가능</li>\n<li>Pre-REC 공식 촬영 시작 전까지 중요한 순간을 빠르게 저장</li>\n<li>하이라이트 중요한 순간을 빠르게 표시해 편집 과정 속도 향상</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>Osmo Action 5 Pro(오스모 액션 5프로)의 가격 및 출시 정보</b></span></h3>\n<p data-ke-size=\"size16\"><br />DJI의 Osmo Action 5 Pro는 오늘부터 DJI 스토어(store.dji.com), 하이마트, 네이버 스마트 스토어 및 공인 판매처에서 구매 가능합니다. 현재 구매 가능한 구성은 다음과 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\"><b>Osmo&nbsp;Action&nbsp;5&nbsp;스탠더드&nbsp;콤보&nbsp;(509,000원)&nbsp;</b></h4>\n<p data-ke-size=\"size16\">구성품 : Osmo Action 5 Pro, Osmo Action 익스트림 배터리 플러스(1950 mAh), Osmo Action 듀얼 모드 보호 프레임, Osmo Action 퀵 릴리즈 어댑터 마운트, Osmo Action 곡면 부착 베이스, Osmo 고정 나사, Type-C to Type-C PD 케이블, Osmo Action 5 Pro 고무 렌즈 프로텍터, Osmo Action Pro 글라스 렌즈 커버, Osmo Action 미끄럼 방지 패드.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\"><b>Osmo Action 5 어드벤처 콤보 (639,000원)</b></h4>\n<p data-ke-size=\"size16\">구성품: 스탠더드 콤보 구성품 외에, Osmo Action 퀵 릴리즈 어댑터 마운트(미니), Osmo Action 다기능 배터리 케이스, Osmo 확장 로드(1.5m).</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">기타 구매 가능한 액세서리</h4>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>Osmo Action 콜드 슈 확장 키트 (24,900원)</li>\n<li>Osmo Action 헬멧 턱 마운트 (24,900원)</li>\n<li>Osmo Action 다기능 충전 핸들 (121,100원)</li>\n<li>Osmo Action 익스트림 배터리 플러스 1950 mAh (34,300원)</li>\n<li>Osmo 플렉시블 마운트 (19,140원)</li>\n<li>Osmo Action Pro 글라스 렌즈 커버 (19,100원)</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 밖에도 DJI 제품에 대한 종합 보상 서비스 플랜으로 <b>DJI Care Refresh</b>를 이용할 수 있습니다. 자연적 마모, 충돌, 침수 피해를 포함하는 우발적 손상에 대해 교체 서비스가 가능하며 고장 사고 발생 시 자기 부담금으로 손상된 제품을 교체 받을 수 있는데, DJI Care Refresh(1년 플랜)는 1년 이내 최대 2회 교체 서비스를 포함합니다. DJI Care Refresh(2년 플랜)는 2년 이내 최대 4회 교체 서비스를 포함합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GX1_c7sbAAAquQ3_h1600.jpg\" data-origin-width=\"1200\" data-origin-height=\"1600\"><span data-url=\"https://blog.kakaocdn.net/dn/Hf4I5/btsJGl6Wdny/TpTNKBIw9Fs5Lp5PBdOTD1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/Hf4I5/btsJGl6Wdny/TpTNKBIw9Fs5Lp5PBdOTD1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/Hf4I5/btsJGl6Wdny/TpTNKBIw9Fs5Lp5PBdOTD1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHf4I5%2FbtsJGl6Wdny%2FTpTNKBIw9Fs5Lp5PBdOTD1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"GX1_c7sbAAAquQ3_h1600.jpg\" data-origin-width=\"1200\" data-origin-height=\"1600\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: right;\" data-ke-size=\"size16\">(출처 : <a href=\"https://www.dji.com/kr/osmo-action-5-pro\" target=\"_blank\" rel=\"noopener\">DJI</a>)</p>",
        "contentSnippet": "드론과 액션캠으로 유명한 DJI에서 차세대 12mm(1/1.3\") 센서와 고성능·저전력 4nm 칩으로 고화질과 고성능을 강조한 Osmo Action 5 Pro(오스모 액션 5프로)를 출시했습니다.\n \n\n\n \n \nOsmo Action 5 Pro(오스모 액션 5프로)의 주요 특징 \n \n1. 고화질의 차세대 12mm(1/1.3\") 센서 탑재\n차세대 12mm(1/1.3\") 센서와 2.4μm 픽셀 크기 및 최대 13.5스톱 다이내믹 레인지를 갖춘 첫 액션캠으로, 10-bit D-Log M 촬영 및 HLG(Hybrid Log-Gamma) 고휘도 디스플레이도 지원합니다. 4K/60fps 화질로 넓은 다이내믹 레인지 저조도 영상 촬영이 가능합니다. 어두운 환경을 위해 AI 노이즈 감소 알고리즘이 적용된 Super Night(슈퍼나이트) 모드도 제공합니다.\n\n2. 4nm 칩 채용으로 고성능·저전력 달성\n고성능 4nm 칩과 머신러닝 알고리즘이 탑재되어 피사체의 위치를 스마트하게 감지하고 모든 프레임에서 피사체를 중앙에 유지하도록 구도를 다이내믹하게 조정하는 피사체 중앙 유지 및 추적 기능을 탑재한 첫번째 액션 카메라입니다.\n \n1950mAh 용량의 배터리 하나로 이전 모델 대비 50% 향상된 최대 4시간 지속 사용이 가능합니다. 최저 -20°C에서도 최대 3.6시간 동안 안정적으로 촬영 가능하며, DJI 30W USB-C 고속충전기를 사용하면 15분 충전으로 2시간 촬영이 가능합니다.\n\n\n3. 업계 최초 피사체 중앙 유지 및 추적 기능 탑재\nOsmo Action 5 Pro는 피사체 중앙 유지 및 추적 기능을 탑재한 첫 액션 카메라로 크리에이터들은 짐벌 없이도 촬영을 할 수 있습니다. 고성능 4nm 칩과 머신러닝 알고리즘이 탑재되어 피사체의 위치를 스마트하게 감지하고 모든 프레임에서 피사체를 중앙에 유지하도록 구도를 다이내믹하게 조정하는 것도 가능합니다.\n \n4. 개선된 수중 성능\n별도의 케이스 없이도 최대 수심 20미터까지 방수 가능하며 내장 색온도 센서로 수중 활동을 사실적인 색감으로 표현합니다. 입수 시 자동 촬영 시작 및 수면 위로 떠오른 후에는 자동 촬영 중지가 가능하며 내장 압력계로 수중 수심과 활동 시간 및 고도 데이터를 기록할 수 있습니다. EN13319 인증을 받아 국제적인 다이빙 액세서리 표준을 충족합니다.\n \n5. 듀얼 OLED 고휘도 터치스크린\n전면 및 후면의 LCD 디스플레이가 고휘도 OLED 패널의 강화 유리 터치스크린 디스플레이로 업그레이드되었으며 전면 1.46인치, 후면 2.5인치로 더욱 커져 카메라 본체 크기는 그대로 유지하면서 화면을 크게 만들었습니다.\n최대 1000cd/㎡의 피크 밝기로 낮 시간대의 촬영이 더욱 쉬워졌습니다.\n \n6. 그 밖의 개선사항들\nDJI OsmoAudio 연결 생태계를 활용, 블루투스로 DJI Mic 2에 직접 연결하여 스튜디오급 음향 제공\n내장 마이크의 오디오 백업 기능으로 주변 음향을 녹음해 풍부한 레이어를 추가 가능\n47GB 내장 메모리 더욱 최적화된 비트 전송률로 파일 크기 줄임 및 저장\n고속 전송 Wi-Fi 6.0 또는 USB 3.0 통해 최대 80MB/s 전송 지원\nWi-Fi 라이브 다양한 해상도 지원\n타임코드 다수의 카메라에서 빠르게 영상 동기화 가능\n라이브 사진 3초 동영상을 다이내믹한 사진으로 변환 가능\nPre-REC 공식 촬영 시작 전까지 중요한 순간을 빠르게 저장\n하이라이트 중요한 순간을 빠르게 표시해 편집 과정 속도 향상\n \nOsmo Action 5 Pro(오스모 액션 5프로)의 가격 및 출시 정보\nDJI의 Osmo Action 5 Pro는 오늘부터 DJI 스토어(store.dji.com), 하이마트, 네이버 스마트 스토어 및 공인 판매처에서 구매 가능합니다. 현재 구매 가능한 구성은 다음과 같습니다.\n \nOsmo Action 5 스탠더드 콤보 (509,000원) \n구성품 : Osmo Action 5 Pro, Osmo Action 익스트림 배터리 플러스(1950 mAh), Osmo Action 듀얼 모드 보호 프레임, Osmo Action 퀵 릴리즈 어댑터 마운트, Osmo Action 곡면 부착 베이스, Osmo 고정 나사, Type-C to Type-C PD 케이블, Osmo Action 5 Pro 고무 렌즈 프로텍터, Osmo Action Pro 글라스 렌즈 커버, Osmo Action 미끄럼 방지 패드.\n \nOsmo Action 5 어드벤처 콤보 (639,000원)\n구성품: 스탠더드 콤보 구성품 외에, Osmo Action 퀵 릴리즈 어댑터 마운트(미니), Osmo Action 다기능 배터리 케이스, Osmo 확장 로드(1.5m).\n \n기타 구매 가능한 액세서리\nOsmo Action 콜드 슈 확장 키트 (24,900원)\nOsmo Action 헬멧 턱 마운트 (24,900원)\nOsmo Action 다기능 충전 핸들 (121,100원)\nOsmo Action 익스트림 배터리 플러스 1950 mAh (34,300원)\nOsmo 플렉시블 마운트 (19,140원)\nOsmo Action Pro 글라스 렌즈 커버 (19,100원)\n \n이 밖에도 DJI 제품에 대한 종합 보상 서비스 플랜으로 DJI Care Refresh를 이용할 수 있습니다. 자연적 마모, 충돌, 침수 피해를 포함하는 우발적 손상에 대해 교체 서비스가 가능하며 고장 사고 발생 시 자기 부담금으로 손상된 제품을 교체 받을 수 있는데, DJI Care Refresh(1년 플랜)는 1년 이내 최대 2회 교체 서비스를 포함합니다. DJI Care Refresh(2년 플랜)는 2년 이내 최대 4회 교체 서비스를 포함합니다.\n \n\n\n \n \n(출처 : DJI)",
        "guid": "https://lazion.com/2513724",
        "categories": [
          "#카메라#녹음기",
          "ActionCam",
          "Camera",
          "DJI",
          "News",
          "osmo action 5 pro"
        ],
        "isoDate": "2024-09-20T02:52:17.000Z"
      }
    ]
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "「RULIWEB」",
        "title": "[PC] 20년 묵어도 최신 게임으로 남으려면, WoW: 내부 전쟁",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2253",
        "pubDate": "Sat, 21 Sep 2024 12:58:33 +0900",
        "author": "「RULIWEB」",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/24/09/21/192128c59384cacdc.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2024-09-21T03:58:33.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "[게임툰] 무협세스 메이커, 활협전",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2252",
        "pubDate": "Fri, 20 Sep 2024 15:08:44 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/24/09/20/1920e01fe1d51ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2024-09-20T06:08:44.000Z"
      },
      {
        "creator": "(RULIWEB`Д')/",
        "title": "[MULTI] 호그와트 레거시 2에 넣어줘, 해리 포터: 퀴디치 챔피언",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2251",
        "pubDate": "Thu, 19 Sep 2024 18:57:01 +0900",
        "author": "(RULIWEB`Д')/",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/24/09/19/19209a693404c329e.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2024-09-19T09:57:01.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "khris'log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "Windows 에서 Ctrl-L을 사용하여 클립보드 백업 유무에 관계없이 줄 삭제하기",
        "link": "https://jacking75.github.io/OS_windows_20240922/",
        "pubDate": "Sun, 22 Sep 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/1TjbcN_GqMXlx6YBspygr-ij5ZF3EOdBgGov3c5XhaQY/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/OS_windows_20240922/",
        "isoDate": "2024-09-21T15:00:00.000Z"
      },
      {
        "title": "알아두면 업무에 도움이 되는 유용한 도구 17선",
        "link": "https://jacking75.github.io/tech_20240919/",
        "pubDate": "Thu, 19 Sep 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/1vsGbeaCJYw6Jc5z271hPyPu0UXgIGlMnpH8riLQhz7w/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/tech_20240919/",
        "isoDate": "2024-09-18T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "소에게 VR 을 달아주었다.",
        "link": "http://serverdown.tistory.com/821",
        "pubDate": "Sun, 22 Sep 2024 19:02:47 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/821#entry821comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=_e3Vvvk-rjY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=_e3Vvvk-rjY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=_e3Vvvk-rjY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/NjAuv/hyW6G3N6xL/Du9PLCNsDYF7kZZfcV0n8K/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Why These Cows Are Wearing VR Glasses\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/_e3Vvvk-rjY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">소는 녹색 풀밭이 있으면 좋아해서</p>\n<p data-ke-size=\"size16\">vr 로 녹색 들판이 보이게 끼워줬더니 우유 생산이 늘어났다고 합니다.</p>\n<p data-ke-size=\"size16\">사람이 만족할 수준은 못되도 동물에게는 좋을 수 있나봅니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=_e3Vvvk-rjY\n\n\n\n소는 녹색 풀밭이 있으면 좋아해서\nvr 로 녹색 들판이 보이게 끼워줬더니 우유 생산이 늘어났다고 합니다.\n사람이 만족할 수준은 못되도 동물에게는 좋을 수 있나봅니다.",
        "guid": "http://serverdown.tistory.com/821",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-09-22T10:02:47.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "청동거울을 거울처럼 잘 보이게 해보자",
        "link": "http://serverdown.tistory.com/820",
        "pubDate": "Sun, 22 Sep 2024 03:17:20 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/820#entry820comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=hxDd8R8TPb4\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=hxDd8R8TPb4</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=hxDd8R8TPb4\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cqorod/hyW6Mv4Hzf/sFPVd4Q5usa83L26rK3Rd1/img.jpg?width=1280&amp;height=720&amp;face=1008_120_1172_300\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"직접 청동거울 복원해봤습니다\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/hxDd8R8TPb4\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">열심히 갈았다고 한다.</p>\n<p data-ke-size=\"size16\">반딱반딱</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"474\" data-origin-height=\"288\"><span data-url=\"https://blog.kakaocdn.net/dn/b7SWJ8/btsJIN9qwBG/DkFALJOEpOnZGD6vE5QKQk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b7SWJ8/btsJIN9qwBG/DkFALJOEpOnZGD6vE5QKQk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b7SWJ8/btsJIN9qwBG/DkFALJOEpOnZGD6vE5QKQk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb7SWJ8%2FbtsJIN9qwBG%2FDkFALJOEpOnZGD6vE5QKQk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"474\" data-origin-height=\"288\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"540\" data-origin-height=\"298\"><span data-url=\"https://blog.kakaocdn.net/dn/8yl3P/btsJIf6pqCl/HbgqxKYBY3s1XY34gtTNpK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/8yl3P/btsJIf6pqCl/HbgqxKYBY3s1XY34gtTNpK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/8yl3P/btsJIf6pqCl/HbgqxKYBY3s1XY34gtTNpK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F8yl3P%2FbtsJIf6pqCl%2FHbgqxKYBY3s1XY34gtTNpK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"540\" data-origin-height=\"298\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"744\" data-origin-height=\"301\"><span data-url=\"https://blog.kakaocdn.net/dn/dN9yzS/btsJHnxzhWh/bvoMWopkzKUrIAwMaVNivk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dN9yzS/btsJHnxzhWh/bvoMWopkzKUrIAwMaVNivk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dN9yzS/btsJHnxzhWh/bvoMWopkzKUrIAwMaVNivk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdN9yzS%2FbtsJHnxzhWh%2FbvoMWopkzKUrIAwMaVNivk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"744\" data-origin-height=\"301\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"734\" data-origin-height=\"332\"><span data-url=\"https://blog.kakaocdn.net/dn/bFB3AJ/btsJIhC8tHp/SIgYh3AqUOXTNKC2zQrtx1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bFB3AJ/btsJIhC8tHp/SIgYh3AqUOXTNKC2zQrtx1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bFB3AJ/btsJIhC8tHp/SIgYh3AqUOXTNKC2zQrtx1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbFB3AJ%2FbtsJIhC8tHp%2FSIgYh3AqUOXTNKC2zQrtx1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"734\" data-origin-height=\"332\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">반딱반딱</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=hxDd8R8TPb4\n\n\n\n \n열심히 갈았다고 한다.\n반딱반딱\n \n\n\n\n\n \n\n\n반딱반딱",
        "guid": "http://serverdown.tistory.com/820",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-09-21T18:17:20.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "안드로이드 화면 확대기능 / 손가락 세번 터치로 가능",
        "link": "http://serverdown.tistory.com/819",
        "pubDate": "Sun, 22 Sep 2024 02:53:30 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/819#entry819comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=4aAB4PRurVQ\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=4aAB4PRurVQ</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=4aAB4PRurVQ\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cR7yKu/hyW2Q7XC20/hMTVOMNnKKYkgd3KEfbIuk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"How to use Magnification on Android &amp; Everything You Need to Know! #accessibility\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/4aAB4PRurVQ\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">왜이케 눈을 감고 이야기하나 했는데 이 채널이 저시력자용 접근성을 설명하는 채널이였군요</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"815\" data-origin-height=\"270\"><span data-url=\"https://blog.kakaocdn.net/dn/cf9F9f/btsJHwVk7vh/wc7UEkTI06Y7kTpL3TsVn0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cf9F9f/btsJHwVk7vh/wc7UEkTI06Y7kTpL3TsVn0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cf9F9f/btsJHwVk7vh/wc7UEkTI06Y7kTpL3TsVn0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcf9F9f%2FbtsJHwVk7vh%2Fwc7UEkTI06Y7kTpL3TsVn0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"815\" data-origin-height=\"270\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상은 안드로이드 의 화면 확대에 대한 설명인데</p>\n<p data-ke-size=\"size16\">손가락 세번 터치로 화면을 확대해서 볼 수 있는 기능입니다.</p>\n<p data-ke-size=\"size16\">저시력자에게는 유용한 기능인데 UI 숨겨져있어서 잘 모를 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저는 앤버닉 RG556 안드로이드 게임기를 이용하는데 메뉴가 영문입니다.</p>\n<p data-ke-size=\"size16\">한글로는 잘 모르겠네요</p>\n<p data-ke-size=\"size16\">접근성 -&gt; 확대 (이게 한글로 뭐라고 적혀있을지 모르겠군요)</p>\n<p data-ke-size=\"size16\">숏첫 이라고 단축키를 켜는 체크박스 말고 글자를 누르면 숨겨진 UI 가 더있습니다.</p>\n<p data-ke-size=\"size16\">여기서 아래로 내려가면 세번 터치로 가능하게 하는 체크박스가 있습니다.</p>\n<p data-ke-size=\"size16\">이거 있으니 글자읽기에 많은 도움이 되었습니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=4aAB4PRurVQ\n\n\n\n왜이케 눈을 감고 이야기하나 했는데 이 채널이 저시력자용 접근성을 설명하는 채널이였군요\n\n\n \n영상은 안드로이드 의 화면 확대에 대한 설명인데\n손가락 세번 터치로 화면을 확대해서 볼 수 있는 기능입니다.\n저시력자에게는 유용한 기능인데 UI 숨겨져있어서 잘 모를 수 있습니다.\n \n저는 앤버닉 RG556 안드로이드 게임기를 이용하는데 메뉴가 영문입니다.\n한글로는 잘 모르겠네요\n접근성 -> 확대 (이게 한글로 뭐라고 적혀있을지 모르겠군요)\n숏첫 이라고 단축키를 켜는 체크박스 말고 글자를 누르면 숨겨진 UI 가 더있습니다.\n여기서 아래로 내려가면 세번 터치로 가능하게 하는 체크박스가 있습니다.\n이거 있으니 글자읽기에 많은 도움이 되었습니다.",
        "guid": "http://serverdown.tistory.com/819",
        "categories": [
          "유튜브",
          "rg556",
          "안드로이드"
        ],
        "isoDate": "2024-09-21T17:53:30.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "콘코드의 비하인드 스토리",
        "link": "http://serverdown.tistory.com/818",
        "pubDate": "Sun, 22 Sep 2024 02:42:28 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/818#entry818comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=hOhOLWuRT_w&amp;t=471s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=hOhOLWuRT_w&amp;t=471s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=hOhOLWuRT_w\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cLp11r/hyW6B2nFIn/QDcYwSGxV1KiffCpmfYdn0/img.jpg?width=1280&amp;height=720&amp;face=566_144_680_268\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"진짜 4억 달러?!(인수비 제외!) 소니, 콘코드 '플스의 미래'로 믿었다 외 | 게임 헤드라인\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/hOhOLWuRT_w\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">콘코드는 소니 플레이스테이션의 게임으로 출시되었으며 출시후 몇일만에 서비스 종료를 발표했습니다.</p>\n<p data-ke-size=\"size16\">서비스를 종료하는 속도도 놀랍지만 이 게임이 몰락한 이유는 반드시 알아야합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이외에도 알아야하는 망한 프로젝트 리스트는</p>\n<p data-ke-size=\"size16\">아타리의 ET 게임</p>\n<p data-ke-size=\"size16\">마이스페이스의 몰락과 페이스북의 성공</p>\n<p data-ke-size=\"size16\">위워크의 몰락</p>\n<p data-ke-size=\"size16\">등이 있겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">너무나 대단한 개발팀과 CEO 의 긍정으로 출시된 스토리 입니다.</p>\n<p data-ke-size=\"size16\">막을 수 있는 기회는 여러번 있었지만 CEO 가 가장큰 오판을 함으로서 이부분이 넘어가게됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">LGBT 나 정치적 옳바름 문제도 섞여있긴하지만 출시전 2년전에도 기대 수익 부분에서 문제가 있었군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번 몰락은 역사에도 남을 것 같습니다.<br />어쩌면 플레이스테이션의 몰락으로 이어질지도 모르겠군요</p>\n<p data-ke-size=\"size16\">어차피 이젠 스트리밍도 가능해서 가격도 올라가버린 PS5 PRO 같은 기기를 사느니</p>\n<p data-ke-size=\"size16\">시간당 돈을 내고 게임을 하는게 나쁜 선택이 아닐 것 같습니다. 게임할 시간이 부족한 사람들은 이방식도 괜찮겠다는 생각이 드네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=hOhOLWuRT_w&t=471s\n\n\n\n \n콘코드는 소니 플레이스테이션의 게임으로 출시되었으며 출시후 몇일만에 서비스 종료를 발표했습니다.\n서비스를 종료하는 속도도 놀랍지만 이 게임이 몰락한 이유는 반드시 알아야합니다.\n \n이외에도 알아야하는 망한 프로젝트 리스트는\n아타리의 ET 게임\n마이스페이스의 몰락과 페이스북의 성공\n위워크의 몰락\n등이 있겠습니다.\n \n너무나 대단한 개발팀과 CEO 의 긍정으로 출시된 스토리 입니다.\n막을 수 있는 기회는 여러번 있었지만 CEO 가 가장큰 오판을 함으로서 이부분이 넘어가게됩니다.\n \nLGBT 나 정치적 옳바름 문제도 섞여있긴하지만 출시전 2년전에도 기대 수익 부분에서 문제가 있었군요\n \n이번 몰락은 역사에도 남을 것 같습니다.\n어쩌면 플레이스테이션의 몰락으로 이어질지도 모르겠군요\n어차피 이젠 스트리밍도 가능해서 가격도 올라가버린 PS5 PRO 같은 기기를 사느니\n시간당 돈을 내고 게임을 하는게 나쁜 선택이 아닐 것 같습니다. 게임할 시간이 부족한 사람들은 이방식도 괜찮겠다는 생각이 드네요",
        "guid": "http://serverdown.tistory.com/818",
        "categories": [
          "유튜브",
          "게임"
        ],
        "isoDate": "2024-09-21T17:42:28.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "(작성중) 안드로이드 개발 기기를 안사고 게임기를 사보았다. RG556",
        "link": "http://serverdown.tistory.com/817",
        "pubDate": "Fri, 20 Sep 2024 12:33:38 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/817#entry817comment",
        "content": "<p data-ke-size=\"size16\">게임 잘되는 타블릿은 40만원 정도이고</p>\n<p data-ke-size=\"size16\">중고 겔럭시s 22 울트라는 45만원 정도 (갤 노트가 사라지고 울트라 가 생겼어요 화면큰거)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그러다 눈길이간게 안드로이드+ 에뮬레이터 게임기</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=3lVVeCv6FN4&amp;t=734s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=3lVVeCv6FN4&amp;t=734s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=3lVVeCv6FN4\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/kkoO8/hyW6FDLsUi/irgkBqzCkg91U2pXqjP1g1/img.jpg?width=1280&amp;height=720&amp;face=224_96_312_192\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[RG556] PS2까지 게임 플레이 가능한 앤버닉 고성능 게임기 anbernic RG556\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/3lVVeCv6FN4\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">RG556</p>\n<p data-ke-size=\"size16\">가격이 20만원 정도로 매우 싸며 게임을 위한거라 성능이 좋습니다.</p>\n<p data-ke-size=\"size16\">안드로이드 유니티 빌드가 잘돌아가는지가 관건이였는데</p>\n<p data-ke-size=\"size16\">원신을 위한 기기라서 그런지 그부분에선 문제가 없다고합니다.</p>\n<p data-ke-size=\"size16\">참고로 원신은 유니티로 만들어졌습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">외관은 매우 반딱반딱하고 유선형 입니다.<br />마음에 드는군요<br />(오래 써보니 너무 미끌거리네요)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 문서 보고 하고있는데<br /><a href=\"https://blog.naver.com/rupicat/223476020556\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://blog.naver.com/rupicat/223476020556</a></p>\n<p data-ke-size=\"size16\">켜는거 부터 막혔습니다.</p>\n<p data-ke-size=\"size16\">이거 어떻게 켜는걸까요...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/ulgEZ7nQo_I?t=205\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/ulgEZ7nQo_I?t=205</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=ulgEZ7nQo_I\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/m2TGh/hyW2PA0V3F/FXwtcXzuPlHUrn6ZJrYu61/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"RG556 - Unboxing | Size comparison &amp; First power on | Short PS2 Gameplay\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/ulgEZ7nQo_I\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">파워버튼이 상단 L 범퍼 옆에 있군요<br />화면켜는 버튼 오른족엔 볼륨 - + 버튼도 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">화면이 매우 밝고 휘황찬란해서 다크모드와 글씨를 좀 키워서 보고 있습니다. 잘 안보이네요</p>\n<p data-ke-size=\"size16\">구글 플레이 로그인도 하고요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제가 개발한 앱도 잘 돌아갔습니다.<br />안드로이드 기기로서 싸고 좋은거 같습니다.<br />유니티도 잘 돌아가고<br />레트로 게임도 잘 되구요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">레트로 게임기는 설정을 잘 몰라서 헤매는 중입니다.</p>\n<p data-ke-size=\"size16\">(계속 써보면서 작성중)</p>",
        "contentSnippet": "게임 잘되는 타블릿은 40만원 정도이고\n중고 겔럭시s 22 울트라는 45만원 정도 (갤 노트가 사라지고 울트라 가 생겼어요 화면큰거)\n \n그러다 눈길이간게 안드로이드+ 에뮬레이터 게임기\n영상: https://www.youtube.com/watch?v=3lVVeCv6FN4&t=734s\n\n\n\nRG556\n가격이 20만원 정도로 매우 싸며 게임을 위한거라 성능이 좋습니다.\n안드로이드 유니티 빌드가 잘돌아가는지가 관건이였는데\n원신을 위한 기기라서 그런지 그부분에선 문제가 없다고합니다.\n참고로 원신은 유니티로 만들어졌습니다.\n \n외관은 매우 반딱반딱하고 유선형 입니다.\n마음에 드는군요\n(오래 써보니 너무 미끌거리네요)\n \n이 문서 보고 하고있는데\nhttps://blog.naver.com/rupicat/223476020556\n켜는거 부터 막혔습니다.\n이거 어떻게 켜는걸까요...\n \n영상: https://youtu.be/ulgEZ7nQo_I?t=205\n\n\n\n파워버튼이 상단 L 범퍼 옆에 있군요\n화면켜는 버튼 오른족엔 볼륨 - + 버튼도 있습니다.\n \n화면이 매우 밝고 휘황찬란해서 다크모드와 글씨를 좀 키워서 보고 있습니다. 잘 안보이네요\n구글 플레이 로그인도 하고요\n \n제가 개발한 앱도 잘 돌아갔습니다.\n안드로이드 기기로서 싸고 좋은거 같습니다.\n유니티도 잘 돌아가고\n레트로 게임도 잘 되구요\n \n레트로 게임기는 설정을 잘 몰라서 헤매는 중입니다.\n(계속 써보면서 작성중)",
        "guid": "http://serverdown.tistory.com/817",
        "categories": [
          "프로그래밍/개발메모",
          "안드로이드"
        ],
        "isoDate": "2024-09-20T03:33:38.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "onAdFailedToLoad: Network error.",
        "link": "http://serverdown.tistory.com/816",
        "pubDate": "Fri, 20 Sep 2024 01:04:26 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/816#entry816comment",
        "content": "<p data-ke-size=\"size16\">flutter admob 개발중에 나는 에러입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">android studio 로 가상 디바이스 (AVD) 로 돌릴 경우 인터넷이 안되는 경우가 있습니다.</p>\n<p data-ke-size=\"size16\">이현상이 일어나면 삭제하고 다시 설치해도 계속 발생하더군요 방법은&nbsp;</p>\n<p data-ke-size=\"size16\">실제 장비로 개발하는게 제일 쉬운 해결책이구요</p>\n<p data-ke-size=\"size16\">가상장치를 사용하려면&nbsp;android studio 없이 장치를 직접 실행하는 방법이 있습니다.</p>\n<p data-ke-size=\"size16\">원본 내용: <a href=\"https://stackoverflow.com/questions/42736038/android-emulator-not-able-to-access-the-internet/50165129#50165129\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://stackoverflow.com/questions/42736038/android-emulator-not-able-to-access-the-internet/50165129#50165129</a></p>\n<p data-ke-size=\"size16\">여기보시면 DNS 충돌로 일터넷을 못하는 버그가 있으며 발생했다 고쳐졌다를 반복하는거 같습니다.</p>\n<p data-ke-size=\"size16\">먼저 android sdk 를 설치한 폴더로 가서</p>\n<p data-ke-size=\"size16\">emulator 폴더로 들어갑니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">명령어:</p>\n<p data-ke-size=\"size16\">emulator.exe&nbsp;-list-avds</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이걸 치면 현재 설정된 가상 장치들 목록이 나옵니다. 부디 이름을 짧게 고치세요</p>\n<p data-ke-size=\"size16\">C:\\Android\\sdk\\emulator&gt;emulator.exe&nbsp;-list-avds <br />Pixel_7</p>\n<p data-ke-size=\"size16\">저는 이런식으로 나오네요 Pixel_7 이 장치 이름입니다.</p>\n<p data-ke-size=\"size16\">emulator.exe&nbsp;-avd&nbsp;Pixel_7&nbsp;-dns-server&nbsp;8.8.8.8</p>\n<p data-ke-size=\"size16\">이 명령어로 DNS 를 8.8.8.8 로 맞춰서 실행하나봅니다.</p>\n<p data-ke-size=\"size16\">이러면 인터넷이 잘되니 사용하시구요</p>\n<p data-ke-size=\"size16\">ESC 로 뒤로가기가 안되는 문제가 있으니</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"204\" data-origin-height=\"281\"><span data-url=\"https://blog.kakaocdn.net/dn/b2bdlu/btsJGLDZiM8/PS32wJnneEGIJzPR0zlOVK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b2bdlu/btsJGLDZiM8/PS32wJnneEGIJzPR0zlOVK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b2bdlu/btsJGLDZiM8/PS32wJnneEGIJzPR0zlOVK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb2bdlu%2FbtsJGLDZiM8%2FPS32wJnneEGIJzPR0zlOVK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"204\" data-origin-height=\"281\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">옆에 동그라미 버튼 눌르셔야합니다. (불편)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">콜드 부트라는 메뉴도 알아두셔야하는데요</p>\n<p data-ke-size=\"size16\">Android Studio 의 device 메뉴에 보시면 있습니다.</p>\n<p data-ke-size=\"size16\">가끔 마우스로 제어가 안되면 이걸사용해야합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"612\" data-origin-height=\"429\"><span data-url=\"https://blog.kakaocdn.net/dn/2v6Rw/btsJGnXR7JK/Na8bG3YkBER1zejjIwwCVK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/2v6Rw/btsJGnXR7JK/Na8bG3YkBER1zejjIwwCVK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/2v6Rw/btsJGnXR7JK/Na8bG3YkBER1zejjIwwCVK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F2v6Rw%2FbtsJGnXR7JK%2FNa8bG3YkBER1zejjIwwCVK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"612\" data-origin-height=\"429\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">스샷을 잘 못직어서 잘렸는데요 기기 실행하는 메뉴에 점세개 있는 버튼 누르시면</p>\n<p data-ke-size=\"size16\">Cold Boot 라고 있습니다. 기기를 껏다켜는 기능입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">광고 작업하다 안되길레 황당해서 헤맸네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "flutter admob 개발중에 나는 에러입니다.\n \nandroid studio 로 가상 디바이스 (AVD) 로 돌릴 경우 인터넷이 안되는 경우가 있습니다.\n이현상이 일어나면 삭제하고 다시 설치해도 계속 발생하더군요 방법은 \n실제 장비로 개발하는게 제일 쉬운 해결책이구요\n가상장치를 사용하려면 android studio 없이 장치를 직접 실행하는 방법이 있습니다.\n원본 내용: https://stackoverflow.com/questions/42736038/android-emulator-not-able-to-access-the-internet/50165129#50165129\n여기보시면 DNS 충돌로 일터넷을 못하는 버그가 있으며 발생했다 고쳐졌다를 반복하는거 같습니다.\n먼저 android sdk 를 설치한 폴더로 가서\nemulator 폴더로 들어갑니다.\n \n명령어:\nemulator.exe -list-avds\n \n이걸 치면 현재 설정된 가상 장치들 목록이 나옵니다. 부디 이름을 짧게 고치세요\nC:\\Android\\sdk\\emulator>emulator.exe -list-avds \nPixel_7\n저는 이런식으로 나오네요 Pixel_7 이 장치 이름입니다.\nemulator.exe -avd Pixel_7 -dns-server 8.8.8.8\n이 명령어로 DNS 를 8.8.8.8 로 맞춰서 실행하나봅니다.\n이러면 인터넷이 잘되니 사용하시구요\nESC 로 뒤로가기가 안되는 문제가 있으니\n\n\n옆에 동그라미 버튼 눌르셔야합니다. (불편)\n \n콜드 부트라는 메뉴도 알아두셔야하는데요\nAndroid Studio 의 device 메뉴에 보시면 있습니다.\n가끔 마우스로 제어가 안되면 이걸사용해야합니다.\n\n\n스샷을 잘 못직어서 잘렸는데요 기기 실행하는 메뉴에 점세개 있는 버튼 누르시면\nCold Boot 라고 있습니다. 기기를 껏다켜는 기능입니다.\n \n광고 작업하다 안되길레 황당해서 헤맸네요",
        "guid": "http://serverdown.tistory.com/816",
        "categories": [
          "프로그래밍/개발메모",
          "AdMob",
          "FLUTTER"
        ],
        "isoDate": "2024-09-19T16:04:26.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "(진행중) 1인개발자 개인사업자 등록에서 앱스토어 런칭까지 진행기",
        "link": "http://serverdown.tistory.com/815",
        "pubDate": "Thu, 19 Sep 2024 15:46:31 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/815#entry815comment",
        "content": "<p data-ke-size=\"size16\">사전지식</p>\n<p data-ke-size=\"size16\">앱스토어에서 인앱을 팔려면 통신판매업자를 등록해야한다.</p>\n<p data-ke-size=\"size16\">통신 판매업자를 등록하려면 사업자등록번호가 필요하다</p>\n<p data-ke-size=\"size16\">사업다 등록을 하려면 인대차계약서가 필요하다.</p>\n<p data-ke-size=\"size16\">고로 나는 임대차계약부터 진행해야한다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1. 임대차계약서 등록</p>\n<p data-ke-size=\"size16\">부모님집에 살기 때문에 써달라고해야한다.</p>\n<p data-ke-size=\"size16\">월세 30만원 이하면 부모님이 월세 수익을 세금으로 내야한다거나 하진 않는거 같다.다&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. 개인사업자등록</p>\n<p data-ke-size=\"size16\">엣지 브라우저러 진행했고 팝업차단을 해지 해야한다. (팝업이 뜰 수 있게 해야한다)<br />크롬은 팝업 차단 해지가 잘안되서 버렸다.</p>\n<p data-ke-size=\"size16\">1. 홈텍스에 들어간다. <a href=\"https://www.hometax.go.kr/websquare/websquare.html?w2xPath=/ui/pp/index_pp.xml\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.hometax.go.kr/websquare/websquare.html?w2xPath=/ui/pp/index_pp.xml</a></p>\n<p data-ke-size=\"size16\">2. 공용인증서로 로그인하고</p>\n<p data-ke-size=\"size16\">3. 상단에 검색창에 [개인사업자] 라고 친다.</p>\n<p data-ke-size=\"size16\">4. [개인사업자 신청] 이라고 연관 검색어가 나온다. 수동으로 메뉴 찾으려고 했는데 포기했다. (메뉴가 너무 많다.)</p>\n<p data-ke-size=\"size16\">사업자 상호명 같은거 하나 정해야하고</p>\n<p data-ke-size=\"size16\">업종 넣으라는게 나오면 이거 입력&nbsp;<br />업태 : 정보통신업<br />업종&nbsp;코드&nbsp;:&nbsp;722000</p>\n<p data-ke-size=\"size16\">아직은 통신판매업자가 아니다.<br />통신판매 신고서를 내서 번호 받은 다음 할 수 있는거 같다.</p>\n<p data-ke-size=\"size16\">첨부파일의 기타 부분에 임대차계약서를 첨부하고 제출했다.</p>\n<p data-ke-size=\"size16\">다음날 오전 9 시에 세부사 ? 세무서? 에서 전화가 왔다.</p>\n<p data-ke-size=\"size16\">집주소에 호수를 빼먹었는데 집이 분리되어있다고 해서 넘어갔다.</p>\n<p data-ke-size=\"size16\">30분만에 사업자 등록되었다고 문자가 왔다.&nbsp;</p>\n<p data-ke-size=\"size16\">홈텍스에서 종이를 출력해서 보관하고 상호명으로 통장도 파야한다.<br />통장명이 사업자 상호명이랑 같아야한다. - 스토어에서 이걸 확인한다.</p>\n<p data-ke-size=\"size16\">핲으로 남은일<br />- 사업자 통장 만들기<br />- 사업자등록증으로 통신판매업 신고후 번호 받기<br />- 사업자등록증에 통신판매업 추가<br />- 구글 플레이 개발자 가입<br />- 구글 에드몹 가입<br /><span style=\"text-align: start;\">- 애플 개발자 가입</span> <br />- 앱 출시</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">사업자등록증 뽑기</h2>\n<p data-ke-size=\"size16\">홈텍스 -&gt; 상단 검색창 -&gt; 사업자등록증명<br />여기가시면 내가 소유한 사업자를 고를 수 있군요</p>\n<p data-ke-size=\"size16\">주민번호 표시 해서 출력했습니다.<br />(뭐가 필요한지는 모르겠습니다.)</p>\n<p data-ke-size=\"size16\">pdf 하나 저장하고 종이로도 인쇄합니다.<br />(내려가다보면 종이는 쓸일이 없었다.)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">개인사업자 계좌 만들기</h2>\n<p data-ke-size=\"size16\">은행으로 뛰어가지말고 <br />카카오뱅크를 보면 모바일로 계좌 만들 수 있습니다.<br />(진짜 사람 한번 안보고 모두 진행 가능한거 같군요)</p>\n<p data-ke-size=\"size16\">홍보영상: <a href=\"https://www.youtube.com/watch?v=fFau-nCmXcs\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=fFau-nCmXcs</a></p>\n<p data-ke-size=\"size16\">홍보영상엔 방법 같은건 없으니 굳이 볼필요 없음</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">카카오뱅크에 들어가면 내 계좌 밑에 [내 비지니스] 라고 있습니다.</p>\n<p data-ke-size=\"size16\">그거 눌러서 사업자등록번호 넣고 계좌를 만드시면 됩니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"434\" data-origin-height=\"601\"><span data-url=\"https://blog.kakaocdn.net/dn/bOpfiY/btsJHWFfy1E/dVEe5j2SOOYO6Z8PUNZDJk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bOpfiY/btsJHWFfy1E/dVEe5j2SOOYO6Z8PUNZDJk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bOpfiY/btsJHWFfy1E/dVEe5j2SOOYO6Z8PUNZDJk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbOpfiY%2FbtsJHWFfy1E%2FdVEe5j2SOOYO6Z8PUNZDJk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"434\" data-origin-height=\"601\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">(왜이케 돈이 없냐 내 계좌)</p>\n<p data-ke-size=\"size16\">이제 은행은 안가고 계좌를 해결했다.</p>\n<p data-ke-size=\"size16\">그다음은 통신사업자 등록을&nbsp; 하기전에 통신판매업 신고를 해야합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">통신판앱 번호 받기</h2>\n<p data-ke-size=\"size16\">통신판매업자는 통신판매업 번호를 필요로 합니다.</p>\n<p data-ke-size=\"size16\">정부24 에서 하는데 자주쓸꺼 같아 아이디를 만듭니다.<br />전화번호 로그인잘 안될때가 있음</p>\n<p data-ke-size=\"size16\">로그인하면 검색창에 [통신판매업신고] 를검색해서 페이지로 이동합니다.</p>\n<p data-ke-size=\"size16\">링크: <a href=\"https://www.gov.kr/mw/AA020InfoCappView.do?HighCtgCD=A09006&amp;CappBizCD=11300000006&amp;tp_seq=01\">통신판매업신고 | 민원안내 및 신청 | 정부24 (gov.kr)</a></p>\n<p data-ke-size=\"size16\">(링크는 시간이 지나면 잘 안될 수도 있으니 검색창을 이용하는 방법에 적응합시다.)</p>\n<p data-ke-size=\"size16\">하단 우측에 [발급하기] 버튼이 있음</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">(진행하면서 계속 추가됩니다.)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">-------------</p>\n<p data-ke-size=\"size16\">참고 중인 블로그 글은 이것이다.<br /><a href=\"https://forcreators.stoveindie.com/post/business-registration\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://forcreators.stoveindie.com/post/business-registration</a></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">너무 간단하게 적혀있어서 여기다 길게 쓰고있다.<br />은행 말고는 사람 안보고 진행 가능할꺼 같다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고2 네이버 블로그 글을 보고있는데</p>\n<p data-ke-size=\"size16\">대부분이 수익형 글이거나 세무서에서 홍보성으로 적어놓은글이였다.<br />수익형 그림과 글은 많이 넣어서 시간낭비가 심했고<br />세무서 글은 제목과 다른 필요없는 온갖 옵션을 적어놔서 읽자 지쳐서 나에게 오라고 하는 듯했다.</p>\n<p data-ke-size=\"size16\">AI 요약기능이 좋은거 같다. 내가 안읽어도 되고 필요한거만 요약해준다.</p>",
        "contentSnippet": "사전지식\n앱스토어에서 인앱을 팔려면 통신판매업자를 등록해야한다.\n통신 판매업자를 등록하려면 사업자등록번호가 필요하다\n사업다 등록을 하려면 인대차계약서가 필요하다.\n고로 나는 임대차계약부터 진행해야한다.\n \n1. 임대차계약서 등록\n부모님집에 살기 때문에 써달라고해야한다.\n월세 30만원 이하면 부모님이 월세 수익을 세금으로 내야한다거나 하진 않는거 같다.다 \n \n2. 개인사업자등록\n엣지 브라우저러 진행했고 팝업차단을 해지 해야한다. (팝업이 뜰 수 있게 해야한다)\n크롬은 팝업 차단 해지가 잘안되서 버렸다.\n1. 홈텍스에 들어간다. https://www.hometax.go.kr/websquare/websquare.html?w2xPath=/ui/pp/index_pp.xml\n2. 공용인증서로 로그인하고\n3. 상단에 검색창에 [개인사업자] 라고 친다.\n4. [개인사업자 신청] 이라고 연관 검색어가 나온다. 수동으로 메뉴 찾으려고 했는데 포기했다. (메뉴가 너무 많다.)\n사업자 상호명 같은거 하나 정해야하고\n업종 넣으라는게 나오면 이거 입력 \n업태 : 정보통신업\n업종 코드 : 722000\n아직은 통신판매업자가 아니다.\n통신판매 신고서를 내서 번호 받은 다음 할 수 있는거 같다.\n첨부파일의 기타 부분에 임대차계약서를 첨부하고 제출했다.\n다음날 오전 9 시에 세부사 ? 세무서? 에서 전화가 왔다.\n집주소에 호수를 빼먹었는데 집이 분리되어있다고 해서 넘어갔다.\n30분만에 사업자 등록되었다고 문자가 왔다. \n홈텍스에서 종이를 출력해서 보관하고 상호명으로 통장도 파야한다.\n통장명이 사업자 상호명이랑 같아야한다. - 스토어에서 이걸 확인한다.\n핲으로 남은일\n- 사업자 통장 만들기\n- 사업자등록증으로 통신판매업 신고후 번호 받기\n- 사업자등록증에 통신판매업 추가\n- 구글 플레이 개발자 가입\n- 구글 에드몹 가입\n- 애플 개발자 가입 \n- 앱 출시\n \n사업자등록증 뽑기\n홈텍스 -> 상단 검색창 -> 사업자등록증명\n여기가시면 내가 소유한 사업자를 고를 수 있군요\n주민번호 표시 해서 출력했습니다.\n(뭐가 필요한지는 모르겠습니다.)\npdf 하나 저장하고 종이로도 인쇄합니다.\n(내려가다보면 종이는 쓸일이 없었다.)\n \n개인사업자 계좌 만들기\n은행으로 뛰어가지말고 \n카카오뱅크를 보면 모바일로 계좌 만들 수 있습니다.\n(진짜 사람 한번 안보고 모두 진행 가능한거 같군요)\n홍보영상: https://www.youtube.com/watch?v=fFau-nCmXcs\n홍보영상엔 방법 같은건 없으니 굳이 볼필요 없음\n \n카카오뱅크에 들어가면 내 계좌 밑에 [내 비지니스] 라고 있습니다.\n그거 눌러서 사업자등록번호 넣고 계좌를 만드시면 됩니다.\n\n\n(왜이케 돈이 없냐 내 계좌)\n이제 은행은 안가고 계좌를 해결했다.\n그다음은 통신사업자 등록을  하기전에 통신판매업 신고를 해야합니다.\n \n \n통신판앱 번호 받기\n통신판매업자는 통신판매업 번호를 필요로 합니다.\n정부24 에서 하는데 자주쓸꺼 같아 아이디를 만듭니다.\n전화번호 로그인잘 안될때가 있음\n로그인하면 검색창에 [통신판매업신고] 를검색해서 페이지로 이동합니다.\n링크: 통신판매업신고 | 민원안내 및 신청 | 정부24 (gov.kr)\n(링크는 시간이 지나면 잘 안될 수도 있으니 검색창을 이용하는 방법에 적응합시다.)\n하단 우측에 [발급하기] 버튼이 있음\n \n \n \n \n \n \n(진행하면서 계속 추가됩니다.)\n \n-------------\n참고 중인 블로그 글은 이것이다.\nhttps://forcreators.stoveindie.com/post/business-registration\n너무 간단하게 적혀있어서 여기다 길게 쓰고있다.\n은행 말고는 사람 안보고 진행 가능할꺼 같다.\n \n참고2 네이버 블로그 글을 보고있는데\n대부분이 수익형 글이거나 세무서에서 홍보성으로 적어놓은글이였다.\n수익형 그림과 글은 많이 넣어서 시간낭비가 심했고\n세무서 글은 제목과 다른 필요없는 온갖 옵션을 적어놔서 읽자 지쳐서 나에게 오라고 하는 듯했다.\nAI 요약기능이 좋은거 같다. 내가 안읽어도 되고 필요한거만 요약해준다.",
        "guid": "http://serverdown.tistory.com/815",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2024-09-19T06:46:31.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "flutter aab 앱 서명 하기 / 스토어에 올리기",
        "link": "http://serverdown.tistory.com/814",
        "pubDate": "Tue, 17 Sep 2024 22:29:35 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/814#entry814comment",
        "content": "<p data-ke-size=\"size16\">문서의 설명이 유연하거나 위치에 따라 이상해서 되는 방법으로 다시 정리하겠습니다.</p>\n<p data-ke-size=\"size16\">참고 문서:&nbsp; <a href=\"https://docs.flutter.dev/deployment/android\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://docs.flutter.dev/deployment/android</a></p>\n<figure id=\"og_1726577759256\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Build and release an Android app\" data-og-description=\"How to prepare for and release an Android app to the Play store.\" data-og-host=\"docs.flutter.dev\" data-og-source-url=\"https://docs.flutter.dev/deployment/android\" data-og-url=\"https://docs.flutter.dev/deployment/android\" data-og-image=\"https://scrap.kakaocdn.net/dn/KtrpL/hyW20hSygE/bQymdAAXACFxzJ18jRARC0/img.png?width=937&amp;height=461&amp;face=0_0_937_461,https://scrap.kakaocdn.net/dn/paVEo/hyW23Tbz5M/orFKvg1yW5kZ7GyrRcFCw1/img.png?width=1902&amp;height=568&amp;face=0_0_1902_568,https://scrap.kakaocdn.net/dn/1YzTw/hyW6Jr0N66/zjkNFzhUtfr6PmFHxdxKk0/img.png?width=1558&amp;height=422&amp;face=0_0_1558_422\"><a href=\"https://docs.flutter.dev/deployment/android\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://docs.flutter.dev/deployment/android\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/KtrpL/hyW20hSygE/bQymdAAXACFxzJ18jRARC0/img.png?width=937&amp;height=461&amp;face=0_0_937_461,https://scrap.kakaocdn.net/dn/paVEo/hyW23Tbz5M/orFKvg1yW5kZ7GyrRcFCw1/img.png?width=1902&amp;height=568&amp;face=0_0_1902_568,https://scrap.kakaocdn.net/dn/1YzTw/hyW6Jr0N66/zjkNFzhUtfr6PmFHxdxKk0/img.png?width=1558&amp;height=422&amp;face=0_0_1558_422');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Build and release an Android app</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">How to prepare for and release an Android app to the Play store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">docs.flutter.dev</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size26\">문서의 함정</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"854\" data-origin-height=\"334\"><span data-url=\"https://blog.kakaocdn.net/dn/4mZf9/btsJFwNp8ln/61vBUPRz1bAHcb91ct40SK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/4mZf9/btsJFwNp8ln/61vBUPRz1bAHcb91ct40SK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/4mZf9/btsJFwNp8ln/61vBUPRz1bAHcb91ct40SK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F4mZf9%2FbtsJFwNp8ln%2F61vBUPRz1bAHcb91ct40SK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"854\" data-origin-height=\"334\"/></span></figure>\n</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">문서에서 고치라는 부분인데 if 처리를 해놯네요</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">파일이 없으면 빌드가 중단되야하는데 이걸 넘겨버려서 오류를 찾기 더 어렵게 되어있습니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">정말 쓸모없고 문제 찾기도 어렵게하는 방법이였습니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">jks 파일을 만드는 온갖 어려운 방법을 알려주는데 괜히 보면 시간낭비이니 잘 피하시길 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">1. jsk 파일 만들기</h2>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #ffffff;\">keytool -genkey -v -keystore key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias [별명]</span></div>\n</div>\n<p data-ke-size=\"size16\">[별명] 부분은 알아서 고치시고 key.jks 는 생성할 파일명인데 이파일명 기준으로 작성되니 그대로 쓰시길</p>\n<p data-ke-size=\"size16\">암호가 두개 있습니다. 확인을위해 한번더 입력하기 때문에 총 4번을 입력하는데</p>\n<p data-ke-size=\"size16\">다 같은걸 입력해야 관리가 쉽습니다.</p>\n<p data-ke-size=\"size16\">여러 정보를 요구하는데 다 입력안해도 되니 넘어가시고</p>\n<p data-ke-size=\"size16\">[예/아니오] 이부분 나오면 y 를 입력합니다.</p>\n<p data-ke-size=\"size16\">그다음에 두번째 암호를 입력하라는데 바로 엔터치면 위에서 입력한 암호와 동일하게 셋팅됩니다.</p>\n<p data-ke-size=\"size16\">저는 동일하게 했습니다. 절대 중요한게 아니니 복잡하게 하지마세요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2. <span style=\"text-align: left;\">key.properties</span></h2>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\"> </span><span style=\"text-align: left;\">만들 필요 없습니다. 넘어갑니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">jks 의 암호를 노출 시키지 않기위해서 다른파일에서 읽는건데<br /></span><span style=\"text-align: left;\">복잡하고 노출되도 활용할만한 가치가 없습니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"text-align: left;\">3. build.gradle 수정</span></h2>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">build.gradle 은 파일이 두군데 있습니다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: left;\">[내 플러터 프로젝트]/android/app/build.gradle 을 수정하세요</span></p>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #ffffff;\">buildTypes { &lt;-- 이부분을 수정합니다.</span></div>\n<div>&nbsp;</div>\n<div>&nbsp;</div>\n<div>\n<div style=\"background-color: #000000; color: #ffffff;\"><br />\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; signingConfigs {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; release {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storeFile file(</span><span style=\"color: #ce9178;\">\"../../key.jks\"</span><span style=\"color: #ffffff;\">)</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; keyAlias </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> \"[별명]\"</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; keyPassword </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> \"[암호]\"</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storePassword </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> <span style=\"text-align: start;\">\"[암호]\"</span> </span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; buildTypes {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; release {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signingConfig signingConfigs</span><span style=\"color: #d4d4d4;\">.</span><span style=\"color: #ffffff;\">release</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; }</span></div>\n</div>\n</div>\n<div>&nbsp;</div>\n</div>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">buildTypes<span>&nbsp; 위에 <span style=\"text-align: start;\">signingConfigs<span>&nbsp; 가 오고<br /></span></span></span></span> <span style=\"text-align: start;\">buildTypes</span><span style=\"background-color: #000000; color: #000000; text-align: start;\">&nbsp;<span>&nbsp; 안에는 debug 가 release 로 변경되었습니다.</span></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span>4. 파일위치 점검</span></span></h2>\n<p data-ke-size=\"size16\"><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span>[내 플러토 프로젝트]<br />&nbsp; ㄴ android<br />&nbsp; &nbsp; &nbsp; &nbsp;ㄴ app<br /></span></span><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; build.gradle<br />key.jks</span></span></p>\n<p data-ke-size=\"size16\"><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span>즉 key.jks 파일은 <span style=\"text-align: start;\">[내 플러토 프로젝트] 에 두시면 됩니다.</span></span></span></p>\n<p data-ke-size=\"size16\"><span style=\"background-color: #000000; color: #000000; text-align: start;\"><span><span style=\"text-align: start;\">pubspec.yaml <br />analysis_options.yaml<br />이 파일들이 있는 폴더에 같이 두세요</span></span></span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"265\" data-origin-height=\"570\"><span data-url=\"https://blog.kakaocdn.net/dn/btfLZp/btsJDcDCMJV/Nk0KoDr4gJVs4mew9u2i80/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/btfLZp/btsJDcDCMJV/Nk0KoDr4gJVs4mew9u2i80/img.png\"><img src=\"https://blog.kakaocdn.net/dn/btfLZp/btsJDcDCMJV/Nk0KoDr4gJVs4mew9u2i80/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbtfLZp%2FbtsJDcDCMJV%2FNk0KoDr4gJVs4mew9u2i80%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"265\" data-origin-height=\"570\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">요로케</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">5. 빌드하기</h2>\n<p data-ke-size=\"size16\">빌드는 터미널 명령어로 이걸 치세요&nbsp;</p>\n<p data-ke-size=\"size16\">flutter build aab</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">성공하면 녹색으로 알려줍니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"716\" data-origin-height=\"181\"><span data-url=\"https://blog.kakaocdn.net/dn/VT90d/btsJEPz6Z3J/HOAbQdxa3xhgSkLCKl8G00/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/VT90d/btsJEPz6Z3J/HOAbQdxa3xhgSkLCKl8G00/img.png\"><img src=\"https://blog.kakaocdn.net/dn/VT90d/btsJEPz6Z3J/HOAbQdxa3xhgSkLCKl8G00/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FVT90d%2FbtsJEPz6Z3J%2FHOAbQdxa3xhgSkLCKl8G00%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"716\" data-origin-height=\"181\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">6. 스토어에 올리기</h2>\n<p data-ke-size=\"size16\">결과물이 있는 폴더</p>\n<p data-ke-size=\"size16\">[내 플러터 프로젝트] / build / app / outputs / bundle / release</p>\n<p data-ke-size=\"size16\">아주 깊숙한 곳에있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">7. 다음번 스토어에 올릴때 빌드 코드를 변경하셔야합니다.</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"698\" data-origin-height=\"358\"><span data-url=\"https://blog.kakaocdn.net/dn/bDeCPA/btsJElTFCvq/1fCWQGzHRUJ2VgDcBQT5E1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bDeCPA/btsJElTFCvq/1fCWQGzHRUJ2VgDcBQT5E1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bDeCPA/btsJElTFCvq/1fCWQGzHRUJ2VgDcBQT5E1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbDeCPA%2FbtsJElTFCvq%2F1fCWQGzHRUJ2VgDcBQT5E1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-origin-width=\"698\" data-origin-height=\"358\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">위에서 고친 build.gradle 파일에 이런게 있습니다.</p>\n<p data-ke-size=\"size16\">flutter.versionCode 이걸로 검색하시면&nbsp;</p>\n<p data-ke-size=\"size16\">local.properties 라는 파일에 정의 되어있는데 스토어에 올릴때마다 이 숫자를 하나씩 올려야합니다.</p>\n<p data-ke-size=\"size16\">자주 고쳐야하니 기억해두시면 좋습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "문서의 설명이 유연하거나 위치에 따라 이상해서 되는 방법으로 다시 정리하겠습니다.\n참고 문서:  https://docs.flutter.dev/deployment/android\n\n \nBuild and release an Android app\nHow to prepare for and release an Android app to the Play store.\ndocs.flutter.dev\n\n \n문서의 함정\n\n\n문서에서 고치라는 부분인데 if 처리를 해놯네요\n파일이 없으면 빌드가 중단되야하는데 이걸 넘겨버려서 오류를 찾기 더 어렵게 되어있습니다.\n정말 쓸모없고 문제 찾기도 어렵게하는 방법이였습니다.\n \njks 파일을 만드는 온갖 어려운 방법을 알려주는데 괜히 보면 시간낭비이니 잘 피하시길 ...\n \n \n1. jsk 파일 만들기\nkeytool -genkey -v -keystore key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias [별명]\n[별명] 부분은 알아서 고치시고 key.jks 는 생성할 파일명인데 이파일명 기준으로 작성되니 그대로 쓰시길\n암호가 두개 있습니다. 확인을위해 한번더 입력하기 때문에 총 4번을 입력하는데\n다 같은걸 입력해야 관리가 쉽습니다.\n여러 정보를 요구하는데 다 입력안해도 되니 넘어가시고\n[예/아니오] 이부분 나오면 y 를 입력합니다.\n그다음에 두번째 암호를 입력하라는데 바로 엔터치면 위에서 입력한 암호와 동일하게 셋팅됩니다.\n저는 동일하게 했습니다. 절대 중요한게 아니니 복잡하게 하지마세요\n \n \n2. key.properties\n 만들 필요 없습니다. 넘어갑니다.\njks 의 암호를 노출 시키지 않기위해서 다른파일에서 읽는건데\n복잡하고 노출되도 활용할만한 가치가 없습니다.\n \n3. build.gradle 수정\nbuild.gradle 은 파일이 두군데 있습니다.\n[내 플러터 프로젝트]/android/app/build.gradle 을 수정하세요\nbuildTypes { <-- 이부분을 수정합니다.\n \n \n\n    signingConfigs {\n        release {\n            storeFile file(\"../../key.jks\")\n            keyAlias = \"[별명]\"\n            keyPassword = \"[암호]\"\n            storePassword = \"[암호]\" \n        }\n    }\n    buildTypes {\n        release {\n            signingConfig signingConfigs.release\n        }\n    }\n \nbuildTypes  위에 signingConfigs  가 오고\n buildTypes   안에는 debug 가 release 로 변경되었습니다.\n \n \n4. 파일위치 점검\n[내 플러토 프로젝트]\n  ㄴ android\n       ㄴ app\n            build.gradle\nkey.jks\n즉 key.jks 파일은 [내 플러토 프로젝트] 에 두시면 됩니다.\npubspec.yaml \nanalysis_options.yaml\n이 파일들이 있는 폴더에 같이 두세요\n\n\n요로케\n \n \n5. 빌드하기\n빌드는 터미널 명령어로 이걸 치세요 \nflutter build aab\n \n성공하면 녹색으로 알려줍니다.\n\n\n \n6. 스토어에 올리기\n결과물이 있는 폴더\n[내 플러터 프로젝트] / build / app / outputs / bundle / release\n아주 깊숙한 곳에있습니다.\n \n \n7. 다음번 스토어에 올릴때 빌드 코드를 변경하셔야합니다.\n\n\n위에서 고친 build.gradle 파일에 이런게 있습니다.\nflutter.versionCode 이걸로 검색하시면 \nlocal.properties 라는 파일에 정의 되어있는데 스토어에 올릴때마다 이 숫자를 하나씩 올려야합니다.\n자주 고쳐야하니 기억해두시면 좋습니다.",
        "guid": "http://serverdown.tistory.com/814",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2024-09-17T13:29:35.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "일억은퇴 - SPY 넣어두고 매월 뽑아쓰는 시나리오 백테스트",
        "link": "http://serverdown.tistory.com/812",
        "pubDate": "Tue, 17 Sep 2024 15:57:42 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/812#entry812comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=AwEfvZfvyRs\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=AwEfvZfvyRs</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=AwEfvZfvyRs\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bsb3Do/hyW6AV59gF/gx9NShNHDWk8rgMmTDNqDK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"SPY 1억 매수하고 월배당 100만원받기 테스트\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/AwEfvZfvyRs\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">백테스트는 거저 배울 수 있는 좋은 기회입니다.</p>\n<p data-ke-size=\"size16\">상황에 따라 다르긴한데</p>\n<p data-ke-size=\"size16\">가장 좋은 시나리오에서는 14년을 빼먹어도 원금이 늘어나는 결과가 나왔군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고로 향수 10년은 S&amp;P500 잘 못갈꺼라는 리포트가 있군요</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/KCEP-ZG7b2s?t=3896\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/KCEP-ZG7b2s?t=3896</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=KCEP-ZG7b2s\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/APHU4/hyW2W0RrZm/WLGBYFlc4t9qtpIuZYvt21/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"나쁘지 않은 미국 소비 | 50bp 베팅 &amp; 연착륙 전망하면서도 불안한 황소들 | 주가 부양 나선 마이크\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/KCEP-ZG7b2s\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다우배당을 노리는게 좋겠습니다.</p>\n<p data-ke-size=\"size16\">SCHD 추천</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=AwEfvZfvyRs\n\n\n\n백테스트는 거저 배울 수 있는 좋은 기회입니다.\n상황에 따라 다르긴한데\n가장 좋은 시나리오에서는 14년을 빼먹어도 원금이 늘어나는 결과가 나왔군요\n \n \n참고로 향수 10년은 S&P500 잘 못갈꺼라는 리포트가 있군요\n영상: https://youtu.be/KCEP-ZG7b2s?t=3896\n\n\n\n \n다우배당을 노리는게 좋겠습니다.\nSCHD 추천",
        "guid": "http://serverdown.tistory.com/812",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2024-09-17T06:57:42.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "flutter  &quot;YAML 디버깅에 대 한 확장이 없습니다. Marketplace에서 YAML 확장을 찾아야 하나요?&quot;",
        "link": "http://serverdown.tistory.com/811",
        "pubDate": "Tue, 17 Sep 2024 15:49:13 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/811#entry811comment",
        "content": "<p data-ke-size=\"size16\">vscode 로 flutter 개발중에 나는 경우 인데요</p>\n<p data-ke-size=\"size16\">실행할때 보통 [실행] -&gt; [디버깅 없이 실행] 을 누르게 되는데요</p>\n<p data-ke-size=\"size16\">이때 main.dart 파일 이 보이는 상태에서 해야합니다.</p>\n<p data-ke-size=\"size16\">현재보고있는 파일기준에 따라 에러 명령은 다르게 표시되는데요</p>\n<p data-ke-size=\"size16\">잘못 집어서 시간이 오래걸려서 찾아냈습니다. ㅠㅠ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">결론</h2>\n<p data-ke-size=\"size16\">main.dartk 가 보이는 상태에서 [실행] -&gt; [디버깅 ...] 을 누른다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "vscode 로 flutter 개발중에 나는 경우 인데요\n실행할때 보통 [실행] -> [디버깅 없이 실행] 을 누르게 되는데요\n이때 main.dart 파일 이 보이는 상태에서 해야합니다.\n현재보고있는 파일기준에 따라 에러 명령은 다르게 표시되는데요\n잘못 집어서 시간이 오래걸려서 찾아냈습니다. ㅠㅠ\n \n결론\nmain.dartk 가 보이는 상태에서 [실행] -> [디버깅 ...] 을 누른다.",
        "guid": "http://serverdown.tistory.com/811",
        "categories": [
          "프로그래밍/개발메모",
          "FLUTTER"
        ],
        "isoDate": "2024-09-17T06:49:13.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Hybrid's Notes",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "Promise.race로 실행 시간 제한 걸기",
        "link": "https://hyeonseok.com/blog/920",
        "pubDate": "Sun, 22 Sep 2024 11:47:25 GMT",
        "content": "<p>동시에 여러개의 비동기 처리를 할 때 <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"><code>Promise.all</code></a>을 사용해서 처리 속도를 올리곤 한다.</p>\r\n\r\n<pre><code>const results = await Promise.all([fetchData1(), fetchData2()]);</code></pre>\r\n\r\n<p>이렇게 하면 데이터 패칭을 동시에 요청하고 병렬로 둘 다 끝난 후에 <code>results</code>에 <code>[data1, data2]</code>와 같이 데이터가 들어간다.</p>\r\n\r\n<p>반면에 <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\"><code>Promise.race</code></a>를 사용하면 모든 처리가 끝날 때 까지 기다리지 않고 먼저 끝나는 것이 반환되어서 일종의 타임아웃을 걸 수 있다.</p>\r\n\r\n<pre><code></code>await Promise.race([\r\n  page.waitForNetworkIdle(),\r\n  new Promise(resolve => setTimeout(resolve, 5000)),\r\n]);</pre>\r\n\r\n<p>이렇게 하면 네트워크 활동이 끝나거나 5초가 지나거나 둘 중에 먼저 끝나는 것이 반환되어서 네트워크 활동이 5초 이상 지연될 경우에도 더이상 기다리지 않고 다음으로 넘어가게 할 수 있다.</p>\r\n\r\n<p>반환값을 사용하지 않거나 거부되는 상황이 중요하지 않다면 <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise/any\"><code>Promise.any</code></a>도 사용할 수 있다. <code>Promise.race</code>는 먼저 거부되는게 있으면 거부된 결과를 반환하는데 비해 <code>Promise.any</code>는 거부된 결과는 무시하고 해결된 결과가 나올때 반환을 한다. 빈 배열을 전달하면 <code>Promise.race</code>는 계속 기다리지만 <code>Promise.any</code>는 거부된 결과를 반환하며 바로 종료된다.</p>\r\n\r\n<p><code>Promise.all</code>도 거부냐 해결이냐에 따라서 동작이 약간 다른 <a href=\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\"><code>Promise.allSettled</code></a>가 있는데 <code>Promise.all</code>은 거부가 발행하면 이를 반환하며 대기가 끝나지만 <code>Promise.allSettled</code>는 거부냐 해결이냐에 상관없이 모든 결과를 기다린다. <code>Promise.allSettled</code>는 나중에 추가된 스펙이어서 지금까지는 원래 하던대로 <code>Promise.all</code>만 사용하고 있었는데 여러 데이터를 불러오는 작업은 서로 의존성이 없기 때문에 <code>Promise.allSettled</code>가 더 적절해 보인다. <a href=\"https://velog.io/@eggplantiny/Promise.allSettled-%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C-%EC%88%9C%EA%B0%84\"><code>Promise.allSettled</code>를 쓰면 실패하는 것이 있어도 나머지 성공한 결과를 사용</a>할 수 있기 때문에 유용할 때가 있다.</p>",
        "contentSnippet": "동시에 여러개의 비동기 처리를 할 때 Promise.all을 사용해서 처리 속도를 올리곤 한다.\n\r\n\r\nconst results = await Promise.all([fetchData1(), fetchData2()]);\n\r\n\r\n이렇게 하면 데이터 패칭을 동시에 요청하고 병렬로 둘 다 끝난 후에 results에 [data1, data2]와 같이 데이터가 들어간다.\n\r\n\r\n반면에 Promise.race를 사용하면 모든 처리가 끝날 때 까지 기다리지 않고 먼저 끝나는 것이 반환되어서 일종의 타임아웃을 걸 수 있다.\n\r\n\r\nawait Promise.race([\r\n  page.waitForNetworkIdle(),\r\n  new Promise(resolve => setTimeout(resolve, 5000)),\r\n]);\n\r\n\r\n이렇게 하면 네트워크 활동이 끝나거나 5초가 지나거나 둘 중에 먼저 끝나는 것이 반환되어서 네트워크 활동이 5초 이상 지연될 경우에도 더이상 기다리지 않고 다음으로 넘어가게 할 수 있다.\n\r\n\r\n반환값을 사용하지 않거나 거부되는 상황이 중요하지 않다면 Promise.any도 사용할 수 있다. Promise.race는 먼저 거부되는게 있으면 거부된 결과를 반환하는데 비해 Promise.any는 거부된 결과는 무시하고 해결된 결과가 나올때 반환을 한다. 빈 배열을 전달하면 Promise.race는 계속 기다리지만 Promise.any는 거부된 결과를 반환하며 바로 종료된다.\n\r\n\r\nPromise.all도 거부냐 해결이냐에 따라서 동작이 약간 다른 Promise.allSettled가 있는데 Promise.all은 거부가 발행하면 이를 반환하며 대기가 끝나지만 Promise.allSettled는 거부냐 해결이냐에 상관없이 모든 결과를 기다린다. Promise.allSettled는 나중에 추가된 스펙이어서 지금까지는 원래 하던대로 Promise.all만 사용하고 있었는데 여러 데이터를 불러오는 작업은 서로 의존성이 없기 때문에 Promise.allSettled가 더 적절해 보인다. Promise.allSettled를 쓰면 실패하는 것이 있어도 나머지 성공한 결과를 사용할 수 있기 때문에 유용할 때가 있다.",
        "guid": "https://hyeonseok.com/blog/920",
        "isoDate": "2024-09-22T11:47:25.000Z"
      }
    ]
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": []
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "이한",
    "category": "개인",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "제2의 한류",
        "link": "https://www.thestartupbible.com/2024/09/the-second-korean-wave.html",
        "pubDate": "Sun, 22 Sep 2024 21:29:00 +0000",
        "content:encodedSnippet": "얼마 전에 컴팩트하게 유럽 출장을 다녀왔다. 아주 짧은 기간 동안 3개국을 갔다 왔는데, 영국, 스페인, 그리고 이탈리아에서 하루에 미팅 하나씩하고 다시 귀국했다. 우리는 한국이랑 미국에만 집중적으로 투자하고 – 유럽에 포트폴리오 회사가 하나 있긴 하지만 – 우리에게 자금을 제공해 주는 투자자들도 유럽에는 거의 없어서, 일 때문에 유럽 갈 일은 지금까지 없었기 때문에 이번에 정말 오랜만에 유럽 땅을 밟았다.\n내가 마지막으로 유럽에 온 게 2000년도였으니까, 이번에 24년 만에 유럽에 왔다. 특히 어릴 적 살았던 스페인에는 이번에 무려 35년 만에 갔는데, 솔직히 너무 짧은 출장이라서 뭘 제대로 하지도 못했고, 뭘 제대로 먹지도 못했다. 한 나라에 하루도 안 있었지만, 오랜만에 유럽에 와서 나흘 동안 몇 가지 느낀 점이 있는데, 한국과 관련된 점들이고, 대부분 너무 좋은 느낌과 발견이었다.\n나는 초등학교 일부와 중학교를 유럽에서 다녔다. 이게 언제였냐면, 1988년 서울 올림픽 전이었는데, 모든 걸 사진같이 기억하고 있진 않지만, 그때까지만 해도 한국은 정말 못 사는 나라였다. 그 못 사는 나라에서 비행기를 타고 – 참고로, 당시엔 해외여행 자율화 이전이었다 –  외국에 나가려면 국가의 허락을 받고 나가야 하는 시기였다   유럽에 오니 어린이의 시각으로 봐도 유럽은 너무나 잘 사는 선진국이었다. 멋진 사회적 인프라, 온갖 맛있는 음식, 비싼 자동차, 옷도 잘 입는 멋쟁이들, 행동 하나하나에 여유가 넘쳐흐르는 선진국 사람들,,,뭐 이런 느낌이었고, 실은 이런 유럽의 선진국 이미지는 내 머릿속에 아주 오랫동안 남아있었다. 며칠 전 출장 전 까진.\n그런데 이번에 출장 와서 내가 보고 느낀 점들은 당시의 느낌과는 정반대였다. 가는 곳마다 스스로 이런 생각을 했던 것 같다. “어, 유럽이 이렇게 후졌었나? 내 기억으론 정말 잘 사는 나라였는데, 별거 아니네.” 심지어는 런던 호텔에서 우연히 대학교 선배를 만났는데, 이분도 나한테 비슷한 이야기를 했다. “기홍아, 영국이 원래 이렇게 후진 나라였니? 나는 한국이 훨씬 더 좋네.”\n한국이 모든 면에서 좋았다. 한국이 인프라도 잘 되어 있고, 솔직히 말해서 음식도 한국이 더 맛있었다.(동의하지 않는 분들이 더 많겠지만, 이탈리아에서 먹은 파스타보다 한국에서 먹는 파스타가 더 맛있었다). 좋은 자동차는 서울에 훨씬 더 많고, 심지어는 유럽의 멋쟁이들보다 강남과 성수의 한국인들의 패션이 더 시대를 앞서간다고 생각한다.\n실은, 내가 이렇게 느꼈던 건, 유럽이 못 살거나, 후져서가 아니다. 유럽 대부분의 국가들은 아주 잘 사는 선진국인데, 한국이 그동안 너무 발전을 많이 했고, 한국이 너무 좋은 나라가 됐기 때문에 내가 상대적으로 이런 감정들을 느꼈던 것 같다. 이제 한국은 아주 잘 사는 강한 나라가 됐고, 이 나라에 사는 사람들은 심지어 굉장히 똑똑하고, 정말 열심히 일한다. 유럽 가는 곳마다 투자자들이 나에게 가장 먼저 하는 말이, “한국 사람들 진짜 일 열심히 하는 것 같다. 그러니까 너넨 잘될 거야.”였는데, 내가 봐도 한국인들 정말 열심히 일한다. 내가 나에 대해서 이런 말 하는 게 좀 웃기지만, 솔직히 나만 봐도 진짜 열심히 일하는 것 같다. 앞으로 유럽 사람들이 계속 지금같이 일하고, 한국 사람들도 지금같이 일하면, 앞으로 10년 후에 한국은 유럽 그 어떤 나라보다 더 잘 사는 나라가 될 게 확실하다는 생각까지 했다.\n우린 이미 한류(Korean Wave)라는 말을 지난 몇 년 동안 많이 했는데, 내가 요새 느끼는 건, 이제 제2의 한류(2nd Korean Wave)가 시작되는 것 같다. 제1의 한류 기반이 제조업을 잘하고, 그냥 무작정 열심히 일하는 한국이었다면, 제2의 한류는 이보다 훨씬 더 많은 게 포함되어 있다. 이제 외국 사람들의 눈에는 한국은 이미 하드웨어를 잘하는 나라인데, 소프트웨어도 잘하고, 특히나 consumer 제품을 굉장히 잘 만드는 나라가 됐다. 실은 여기서 멈춘다면, 제2의 한류는 없을 것이다. 하드웨어랑 소프트웨어는 그냥 tech인데, tech 자체로만 다른 나라에 큰 영향을 미칠 순 없다. 그런데 한국은 이제 tech를 넘어서, 다른 나라의 문화에 영향을 주고 있고, 이게 시사하는 바는 정말 크다고 나는 생각한다. 한국은 음악도 잘 만들고, 영화도 잘 만들고, 무형의 자산인 콘텐츠 강국이 됐다. 그리고 내가 최근에 외국에 나갈 때마다 느끼는 건, 다른 무형의 자산인 음식에서도 한국은 큰 두각을 나타내고 있다. 한국 음식이 이젠 정말로 메인스트림이 되고 있다. 마지막으로, 한국은 스포츠도 잘한다. 많은 한국 프로 선수들이 전 세계 프로스포츠에서 너무나 잘하고 있다.\n이런 요소들이 모두 다 합쳐지면서 한국은 이제 외국인들의 문화에 직접적인 영향을 미칠 수 있는 역량을 갖게 된 나라가 됐다. 이로 인해, 외국인들의 한국에 대한 관심이 전반적으로 높아졌고, 이는 해외 투자자들의 돈을 한국으로 끌어들이는 결정적인 계기가 되고 있다. 과거 대비 해외 투자자들의 한국 회사, 또는 우리 같은 한국에 투자하는 펀드에 대한 관심이 차원이 다르게 바뀌었다는 걸 나는 항상 느끼고 있다.\n물론, 이런 내 생각과 의견에 100% 반대하는 분들도 많다. 한국의 미래는 어둡고, 더 이상 한국에 투자하지 않겠다는 한국 VC도 내 주변에 많다. 그리고 한국을 떠나는 사람들도 내 주변에는 많다. 하지만, 나는 앞으로 한국은 선진국에서 강대국으로 다시 한번 더 점프할 수 있는 내, 외부 기회가 너무 많다고 생각하고, 우리 모두 이 기회를 적극적으로 활용했으면 한다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/09/the-second-korean-wave.html#respond",
        "content": "얼마 전에 컴팩트하게 유럽 출장을 다녀왔다. 아주 짧은 기간 동안 3개국을 갔다 왔는데, 영국, 스페인, 그리고 이탈리아에서 하루에 미팅 하나씩하고 다시 귀국했다. 우리는 한국이랑 미국에만 집중적으로 투자하고 – 유럽에 포트폴리오 회사가 하나 있긴 하지만 – 우리에게 자금을 제공해 주는 투자자들도 유럽에는 거의 없어서, 일 때문에 유럽 갈 일은 지금까지 없었기 때문에 이번에 정말 오랜만에 유럽(...)",
        "contentSnippet": "얼마 전에 컴팩트하게 유럽 출장을 다녀왔다. 아주 짧은 기간 동안 3개국을 갔다 왔는데, 영국, 스페인, 그리고 이탈리아에서 하루에 미팅 하나씩하고 다시 귀국했다. 우리는 한국이랑 미국에만 집중적으로 투자하고 – 유럽에 포트폴리오 회사가 하나 있긴 하지만 – 우리에게 자금을 제공해 주는 투자자들도 유럽에는 거의 없어서, 일 때문에 유럽 갈 일은 지금까지 없었기 때문에 이번에 정말 오랜만에 유럽(...)",
        "guid": "https://www.thestartupbible.com/?p=9223",
        "categories": [
          "Uncategorized",
          "entertainment",
          "fundraising",
          "hardware",
          "inspiring",
          "korea",
          "software",
          "sports",
          "Strong",
          "technology"
        ],
        "isoDate": "2024-09-22T21:29:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "배고픔의 축복",
        "link": "https://www.thestartupbible.com/2024/09/the-blessings-of-a-lack-of-capital.html",
        "pubDate": "Wed, 18 Sep 2024 21:34:00 +0000",
        "content:encodedSnippet": "최근 2년 동안 워낙 경기도 안 좋았고, 앞으로도 그렇게 좋아질 것 같진 않아서, 대부분의 VC들은 활발하게 투자하기보단, 계속 보수적으로 시장을 관망하고 있다. 상황이 이렇다 보니, 사업을 시작하는 날부터 마이너스가 발생하고, 앞으로도 수년 동안 마이너스가 예상되는 대부분의 스타트업은 필요한 투자를 못 받고, 이로 인한 손실을 감당하지 못해서 하나씩 문을 닫고 있다. 아무리 좋은 창업가와 좋은 사업에 투자했더라도, 어느 순간까진 투자금으로 버텨야 하는 스타트업들이 적시에 필요한 투자를 지속적으로 못 받으면 폐업 말곤 별다른 선택이 없다.\n우리 투자사들도 마찬가지다. 아무리 좋은 회사에 투자했더라도, 매크로 시장을 이길 수 있는 초기 스타트업은 거의 없다. 대부분의 우리 투자사들도 하루가 멀다고 시장에 나와서 펀딩을 하고 있는데, 대부분 투자를 못 받거나, 받더라도 본인들이 원하는 조건이 아닌, 투자자들의 조건으로 투자를 받고 있다.\n돈이 꼭 필요한데 투자유치에 실패한 회사의 미래는 암울하다. 펀딩을 포기한 순간부턴 이젠 생존이 이들의 유일한 목표이자 옵션이 되는데, 생존을 위한 가이드라인 같은 건 없다. 그냥 무조건 버티면서 비용을 절감하는 게 유일한 가이드라인이다. 대부분 스타트업 비용의 절반 이상이 직원들 월급이라서 일단 무조건 사람을 내보내야 한다. 전에 내가 위기에 대처하는 방법이라는 글을 쓴 적이 있는데, 실은 구체적인 방법이 있다기보단, 그냥 무조건 허리띠 졸라매고 돈을 아껴야 한다는 내용이다.\n지난 2년 동안 매일매일 이런 위기 상황을 견디고 있는 우리 투자사들이 꽤 많다. 이 중 많은 회사들이 중간에 버티지 못하고 문을 닫았는데, 또 놀라운 건 이 비용절감 모드로 나름 잘 버티고 있는 회사들이 꽤 있다는 사실이다. 버티면서 아직도 생존하고 있는 회사들은 이제 더 이상 대규모의 마이너스가 발생하지 않고, 어떤 회사들은 흑자까지 경험하고 있다. 아직도 하루하루가 지옥 같지만, 이 회사 대표들과 이야기를 해보면 다들 한결같이 하는 말이 있다. 바로 2년 전에 투자를 받지 못했을 때, 그땐 너무 속상하고 세상이 끝날 것 같은 절망감에 휩싸였지만, 지금 생각해보면 회사에겐 축복이었다고 한다.\n그때 투자를 못 받았기 때문에, 그동안 한 번도 진지하게 고민해 보지 않았던, 제대로 된 비즈니스 모델에 대해서 아주 깊게 고민했고, 더 적은 자원으로 더 많은 결과를 만들기 위해서 진짜 창업가의 마인드로 사업을 바라볼 수 있게 됐다고 모두 말한다. 그 과정 자체는 너무 힘들었고, 다시 반복하라고 하면 싫겠지만, 지금 생각해 보면 투자를 받지 못해서 경험했던 배고픔이 회사에겐 오히려 더 단단하고 강하게 체질 개선을 할 수 있게 된 축복이라고 한다.\n이 회사 중 힘든 시기를 지나면서 엄청 뾰족한 비즈니스 모델을 찾은 곳도 있지만, 아직도 제대로 된 비즈니스 모델을 못 찾아서 헤매는 곳들도 많다. 이런 회사들이 유동성이 풍부할 때, 대규모의 투자를 받았다면 어떻게 됐을지 나는 요새 가끔 상상해 본다. 아마도 돈만 낭비하고, 사람만 쓸데없이 채용하고, 불필요하게 사업을 확장하면서 크게 망했을 것 같다.\n그래서 나는 요샌, 오히려 투자를 못 받아서 아주 배고프게 사업을 하는 건, 어쩌면 모두에게 축복이 될 수도 있다는 생각을 가끔 한다. 물론, 이 배고픔이 너무 오래 지속되진 않았으면 한다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/09/the-blessings-of-a-lack-of-capital.html#comments",
        "content": "최근 2년 동안 워낙 경기도 안 좋았고, 앞으로도 그렇게 좋아질 것 같진 않아서, 대부분의 VC들은 활발하게 투자하기보단, 계속 보수적으로 시장을 관망하고 있다. 상황이 이렇다 보니, 사업을 시작하는 날부터 마이너스가 발생하고, 앞으로도 수년 동안 마이너스가 예상되는 대부분의 스타트업은 필요한 투자를 못 받고, 이로 인한 손실을 감당하지 못해서 하나씩 문을 닫고 있다. 아무리 좋은 창업가와 좋은 사업에(...)",
        "contentSnippet": "최근 2년 동안 워낙 경기도 안 좋았고, 앞으로도 그렇게 좋아질 것 같진 않아서, 대부분의 VC들은 활발하게 투자하기보단, 계속 보수적으로 시장을 관망하고 있다. 상황이 이렇다 보니, 사업을 시작하는 날부터 마이너스가 발생하고, 앞으로도 수년 동안 마이너스가 예상되는 대부분의 스타트업은 필요한 투자를 못 받고, 이로 인한 손실을 감당하지 못해서 하나씩 문을 닫고 있다. 아무리 좋은 창업가와 좋은 사업에(...)",
        "guid": "https://www.thestartupbible.com/?p=9218",
        "categories": [
          "Uncategorized",
          "failure",
          "FoundersAtWork",
          "fundraising",
          "hustle",
          "Strong"
        ],
        "isoDate": "2024-09-18T21:34:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": []
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "나도 모르는 불법대출? 보이스피싱·명의도용 예방하기: 여신거래 안심차단 서비스",
        "link": "https://blog.toss.im/article/money-policies-26",
        "pubDate": "Fri, 20 Sep 2024 01:21:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}불법대출 같은 금전 피해를 막을 수 있는 서비스가 8월부터 시행됐어요. ‘여신거래 안심차단'서비스는 신용대출, 카드론, 신용카드 발급 등 신규 여신거래를 사전에 차단할 수 있는 서비스예요. 여신거래는 금융기관이 고객에게 돈을 빌려주는 거래를 뜻해요. 대출이나 신용카드 발급 등이 해당돼요. 여신거래 안심차단 서비스에 가입하는 즉시, 한국신용정보원에 정보가 등록돼 신규 여신거래가 실시간으로 차단돼요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}서비스 신청 방법\n현재 거래 중인 은행이나 농협, 수협, 우체국 영업점 등에 직접 방문해야 해요. 본인 확인만 거치면 신청이 완료돼 무척 간편해요. 따로 준비할 서류 없이 신분증만 가지고 방문하면 돼요.\n대부분의 금융사는 8월 23일부터 서비스를 시작했어요. 시스템을 개발 중인 일부 인터넷전문은행, 보험사, 여신전문 금융기관에서도 9월부터 서비스를 이용할 수 있어요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n서비스를 신청한 이후 대출 같은 여신거래를 하려면 서비스를 신청 했던 것과 똑같이, 거래를 희망하는 은행이나 농협, 수협, 우체국 등 금융회사 영업점을 방문해 서비스를 해지하면 돼요. 이때 영업점 직원은 보이스피싱이나 명의도용 등으로 고객이 서비스를 해지하려고 하는 건 아닌지 꼼꼼히 확인할 거예요. 금융사기는 청소년부터 고령자에 이르기까지 피해가 큰 만큼 미리 꼼꼼한 대비가 필요해요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희 이서영",
        "content": "불법대출 등을 실시간으로 차단할 수 있어요.",
        "contentSnippet": "불법대출 등을 실시간으로 차단할 수 있어요.",
        "guid": "https://blog.toss.im/article/money-policies-26",
        "isoDate": "2024-09-20T01:21:00.000Z"
      },
      {
        "title": "안정적인 현금 흐름을 위하여, 인컴 자산 자세히 알아보기",
        "link": "https://blog.toss.im/article/economic-terms-28-income-asset",
        "pubDate": "Thu, 19 Sep 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-p4abj2{display:contents;line-height:1.55;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}🔖 이번 주 경제 용어\n인컴자산\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}이번 주 경제 용어는 노후에 잘 살기 위해 필요한 정보예요.\n\n.css-1pgssrp{max-width:100%;border-radius:16px;}\n정기적으로 현금 흐름, 즉 인컴(Income)을 창출하는 자산을 말해요.\n\n\n노후 준비에서 제일 중요한 것은 무엇일까요? 안정적인 \"현금 흐름\"을 만드는 것인데요. 많은 사람들이 국민연금, 퇴직연금, 개인연금 등을 준비하는데, 이는 기본적으로 필요한 부분이고요. 보다 넉넉한 노후를 위해 연금 외에도 우리가 직접 챙겨볼 수 있는 자산이 더 있다는 것도 알고 계셨나요?\n그것은 바로 오늘 설명해드릴 ‘인컴 자산’입니다. 인컴 자산이란 쉽게 말해, 투자한 자산의 가치가 상승하면서도 정기적이고 꾸준한 현금을 얻을 수 있는 자산을 의미합니다. 이러한 자산은 불확실한 투자 환경에서 자산 가치가 급하게 오르내리는 상황에 올 수 있는 리스크를 줄이고, 안정적인 현금 흐름을 확보할 수 있다는 강점이 있습니다. 특히 은퇴 후 고정 수입이 줄어드는 시점에서 크게 빛을 발하지요.\n인컴 자산은 ‘어떤 종류의 현금을 받을 수 있느냐’에 따라 크게 2가지로 나뉩니다. 이자와 배당으로 나누어 설명해 드릴게요.\n.css-1swx3yz{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;font-weight:bold;}첫째, 이자를 받는 자산\n이자는 자산을 빌려주는 대가로 받는 돈을 의미합니다. 이자는 처음 돈을 빌려줄 때 약속받는 고정 수익이기 때문에, 자산 변동성이 크지 않다는 장점이 있습니다. 그래서 연금 외의 또 다른 정기적 수입원이 될 수 있다는 점에서 인기가 좋아요.\n이자를 받을 수 있는 자산 종류에는 우리가 잘 아는 예금, 적금 등의 저축성 상품도 있고요. 국채, 회사채와 같은 채권도 있습니다. 채권은 발행기관(정부, 기업 등)이 채권을 발행할 때 약속한 일정 기간 후에 원금을 갚는 구조로, 그 기간 동안 이자를 지급하는 구조입니다. 보통 채권 이자가 예·적금 이자보다 높은 편이라서 저축성 상품 이자보다 조금 더 높은 수익을 기대할 수 있다는 게 장점이에요.\n둘째, 배당을 받는 자산\n배당은 주식을 가지고 있는 사람들에게 각자 소유한 지분에 따라 기업이 이윤을 나눠주는 수익입니다. 특히 배당을 많이 주는 기업의 주식은 배당주라고 불리며, 투자자는 정기적으로 배당을 받을 수 있습니다.\n더 나아가 배당주는 주식이므로, 기업의 성장에 따른 자산 가치 상승도 기대할 수 있어요. 주식 가격이 오름에 따라 시세 차익까지 기대해볼 수 있는 것인데요. 현금 흐름과 시세 차익을 동시에 확보할 수 있는 투자 방식으로 활용되고 있습니다.\n그 외에도 대표적인 전통적인 방식으로 부동산에 투자해 임대료 수익을 창출할 수 있고요. 리츠(REITs, Real Estate Investment Trusts)와 같은 부동산 기반의 인컴 자산에 투자하여, 임대료 수익을 배당으로 돌려받는 방식도 있습니다.\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}쑥쑥 크는 월 배당 ETF…순자산 12조 돌파\n(연합인포맥스 2024.8.23)\n인컴형(배당·이자) 자산에 대한 투자 수요가 늘면서 매월 배당금을 챙길 수 있는 '월 배당' 상장지수펀드(ETF) 인기가 날로 커지고 있다. 23일 한국거래소에 따르면 국내 상장된 월 배당 ETF는 20일 기준 총 77개로, 순자산총액은 12조7천446억원에 달한다.\n월 배당 ETF 시장은 지난 2022년 6월 신한자산운용이 국내 최초 월 배당 상품인 'SOL 미국S&P500'를 출시한 이후 급속도로 몸집을 불렸다. 지난 5월 말만 해도 8조5천억원대 수준이었던 순자산 규모는 불과 3개월 사이 4조원가량 급증했다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}월 배당 ETF는 주식과 채권 등 편입 자산을 통해 발생한 이자·배당 수익을 매월 투자자들에게 지급한다. 정기적인 수익으로 안정적인 현금흐름을 확보할 수 있다는 점에서 은퇴를 앞둔 중장년층뿐만 아니라 젊은 층 사이에서도 인기를 끌고 있다.\n운용업계 관계자는 \"경제적 자유를 꿈꾸는 파이어족(조기 은퇴자)이 늘면서 추가적인 현금흐름을 확보하려는 젊은 층이 월 배당 ETF를 찾고 있다\"며 \"분배금을 재투자하거나 투자 포트폴리오 다변화를 위한 수단으로 월 배당 ETF가 적극적으로 활용되는 모습\"이라고 설명했다.(중략)\n\n\n노후 준비에서 중요한 것은 자산의 급격한 변동을 피하면서도, 꾸준하고 예측 가능한 현금 흐름을 만들어내는 것입니다. 특히, 근로 소득을 기대하기 힘든 순간에도 안정적인 수입을 지속적으로 창출할 수 있는 방법을 찾는 것이 핵심입니다. 이러한 이유로 인컴 자산은 노후 연금 목적으로 널리 사용돼요.\n특히 최근 들어 인컴 자산에 대한 관심이 급증하면서, ‘월 배당 상장지수펀드(ETF)’의 인기가 크게 상승하고 있습니다. 이 ETF는 주식이나 채권에서 발생하는 이자와 배당금을 매월 투자자들에게 지급하는 상품인데요. 매월 계좌로 들어오는 배당금이 안정적인 현금 흐름을 제공해주며, 주식 시장의 단기 변동성에 영향을 덜 받는다는 점이 매력적으로 작용하고 있기 때문입니다.\n이는 은퇴를 준비하는 사람들뿐 아니라, 경제적으로 안정적인 현금 흐름을 추구하는 사람들에게도 매우 매력적인 선택지로 자리 잡고 있는데요. 특히 정기적인 수입을 원하는 투자자들에게 인컴 자산이 중요한 이유는, 주가의 등락에 따른 위험을 줄이면서도 예측 가능한 수익을 확보할 수 있다는 점 때문입니다.\n사실 인컴 자산은 주로 은퇴를 앞둔 세대들이 선호하는 투자처였어요. 하지만 최근에는 경제적 자유를 꿈꾸는 젊은 세대, 특히 '파이어족' 사이에서 큰 관심을 받고 있습니다. 파이어족은 경제적 자립과 조기 은퇴를 목표로 하기 때문에 고정적인 소득을 확보하는 것이 중요합니다. 이 때문에, 월 배당 ETF와 같은 인컴 자산은 안정적인 현금 흐름을 제공하는 상품은 이들에게 좋은 투자 방식인 셈이죠.\n앞으로도 평균 수명이 점차 길어질수록, 일찍 일에서 벗어나 경제적으로 자유롭고 싶은 욕구가 커질수록, 그리고 세계 경제의 불확실성이 계속될수록 예측 가능한 수익을 제공하는 인컴 자산은 많은 투자자들에게 안정적인 투자처로 부각될 것으로 보입니다.\n오늘 함께 살펴본 인컴 자산에 속하는 다양한 금융상품 종류를 정리하면 아래와 같아요. 각각의 고유한 특징을 감안해 나의 재정 상황, 리스크 선호도, 투자 목표에 따른 적합한 상품을 선택하시기를 바랍니다.\n.css-hokoge{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;counter-reset:numberedList;}.css-hokoge ul,.css-hokoge ol{margin:16px 0 0;}.css-hokoge>li{counter-increment:numberedList;margin-bottom:16px;padding-left:24px;}.css-hokoge>li:last-of-type{margin-bottom:0;}.css-hokoge>li>span{position:relative;}.css-hokoge>li>span>:first-child::before{content:counter(numberedList) '.';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n예적금: 주로 은행에서 가입할 수 있으며 일정 기간 자금을 예치하고 그에 따른 고정 이자를 받을 수 있어요. 원금이 보전되며 안정적인 이자 수익을 기대할 수 있어요.\n다만, 안정성이 큰 만큼 다른 금융상품 대비 수익률은 높지 않을 수 있고 인플레이션 발생 시 돈의 실질 가치가 떨어질 수 있습니다.\n\n채권: 정부, 공공기관, 기업 등이 발행하는 채무 증서로 고정 이자를 지급하며 만기 시 원금 상환을 약속합니다. 채권 또한 안정적인 수익을 기대할 수 있어요.\n다만, 금리가 오르는 시기에는 채권 가격이 떨어질 수 있으며 발행자의 신용 등급이 낮아질 경우 원리금 지급이 어려워질 수 있습니다. 특히 회사채는 발행 기업의 재무 상태를 잘 살펴봐야 해요.\n\n배당주: 기업이 주주들에게 수익의 일부를 배당금으로 지급하는 주식이죠. 주가 상승을 통한 시세 차익과 정기적인 배당 수입을 통한 현금 흐름을 동시에 기대할 수 있습니다.\n다만, 주식인 만큼 주가는 하락할 수도 있고, 기업의 실적이 악화되면 배당금이 감소하거나 중단될 수 있어요.\n\n부동산: 보통 임대 수익을 통해 정기적인 현금 흐름을 기대할 수 있습니다. 주식과 비슷하게 부동산 가치가 오를 경우 시세 차익 또한 기대할 수 있어요.\n다만, 부동산은 즉시 현금화 하기가 어렵고 팔 때 시간이 오래 걸릴 수 있습니다. 또한 유지 관리, 세금, 보험, 수리비 등 지속적인 관리 비용이 발생한다는 점을 인지하시면 좋아요.\n\n리츠(REITs): 소액으로 다양한 부동산 포트폴리오에 투자할 수 있어서, 부동산을 직접 매매하지 않아도 부동산에 투자하는 효과를 누릴 수 있어요. 리츠는 소득의 대부분을 투자자에게 배당으로 분배해야 하므로, 일반적으로 높은 배당 수익이 기대됩니다.\n다만, 금리가 오를 때 배당 수익이 떨어질 수 있고 주가 하락으로도 이어질 수 있습니다. 또한 리츠 배당은 이자소득으로 간주되어 세율이 높게 매겨져요.\n\nETF: 개별 주식에 투자하는 것보다 리스크가 낮으며, 여러 주식으로 구성된 포트폴리오에 투자할 수 있어서 분산 효과를 누릴 수 있습니다. 주식 시장에 상장되어 있어 쉽게 거래가 가능하고, 현금화에도 용이해요.\n다만, 주식 시장의 흐름에 따라가는 자산이므로 하락장에서는 당연히 손실이 발생할 수 있습니다. 또한 리츠와 마찬가지로 배당금에 세금이 부과될 수 있어요.\n\n\n\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n상장지수펀드(ETF): 주식시장에 상장된 펀드. 여러 종목에 분산 투자할 수 있어서 리스크를 줄일 수 있어요. 개별 주식을 고르는 수고를 하지 않아도 된다는 펀드의 장점을 살리면서, 주식처럼 편리하게 거래할 수 있도록 만든 상품입니다.\n커버드콜(Covered Call): 주식 또는 ETF를 보유하면서 동시에 옵션을 매도해 추가적인 수익을 창출하는 전략. 이 전략은 시장이 상승할 때는 수익이 제한될 수 있지만, 하락기에는 옵션을 매도해 받은 프리미엄으로 주가 하락에 따른 손실을 어느 정도 상쇄할 수 있다는 장점이 있어요.\n월 배당: 주식이나 채권 등에서 발생한 이자나 배당금을 매월 지급하는 방식. 분기별 지급에 비해 매월 일정한 수익을 얻을 수 있어 월 단위 계획으로 생활비를 운영할 때 유리합니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "투자한 자산의 가치가 상승하면서도, 꾸준하게 현금 흐름을 만드는 방법",
        "contentSnippet": "투자한 자산의 가치가 상승하면서도, 꾸준하게 현금 흐름을 만드는 방법",
        "guid": "https://blog.toss.im/article/economic-terms-28-income-asset",
        "isoDate": "2024-09-19T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]