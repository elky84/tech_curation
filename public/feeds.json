[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sinem Akinci",
        "title": "Genetec uses Visual Studio, CMake, vcpkg, and Docker for remote Linux C++ development",
        "link": "https://devblogs.microsoft.com/cppblog/genetec-uses-visual-studio-for-cmake-and-remote-container-development/",
        "pubDate": "Tue, 23 Jul 2024 14:54:52 +0000",
        "content:encodedSnippet": "Over the past couple of months, the Microsoft C++ team reached out to a series of customers voting on a suggestion ticket asking for Remote Linux Unit Testing support to understand their full set of interactions and needs with CMake and remote Linux scenarios in Visual Studio. After these discussions, we built out a backlog of work items to deliver on any pain points in their experiences.\nOne of the customers we interviewed and worked closely with during the process was Georg Zankl, a software developer for Genetec. Georg manages a project that uses dev containers and CMake. Our team helped Georg to bridge the gap in his developer workflows between Visual Studio and VS Code, so that his team can use Visual Studio and benefit from this more powerful IDE, while having a reproducible dev environment in VS Code.\nSpecifically, he previously could not use CMake Presets with his Docker environment in Visual Studio, and his CTests were not discoverable in the Test Explorer UI. However, after working with the Microsoft C++ team, his CMake builds are now enabled in dev containers in Visual Studio, allowing him to utilize Visual Studio’s powerful IntelliSense and features.\nBelow is an interview with Georg on his overall experience. Thank you, Georg, for working with us!\nWhat does your team do?\nWe develop and deploy algorithms based on Deep Learning and Computer Vision for real-time video processing.\nWe use very large open-source libraries for video processing, Computer Vision, and Deep Learning. Usually, we require customized configurations and builds of those all while continuously updating them. We rely on docker and vcpkg (with nuget caching) to get reproducible, efficient builds. The builds of our C++ code are generally integrated in containerized C# applications.\nWhat was your prior development environment for managing your projects?\nWe use Windows workstations but deploy on Linux. We’ve used VS Code as it has very good support for this kind of development across programming languages, due to the dev container support. On the other hand, Visual Studio is more powerful with its IntelliSense and extensions for C++. Visual Studio had support for dev containers, which was a step for us to utilize the powerful IDE features with our workflow. However, it had some issues which were preventing us from utilizing this IDE. Most notably, CTest tests running from the UI did not work in the container, and the CMake Presets that included a path in our docker image were not properly recognized by Visual Studio and instead reverted to a default configuration.\nWhat was your experience working with the Microsoft C++ team? How did it enable you to adopt Visual Studio?\nThe Microsoft C++ team was very proactive in enabling our workflows and addressed the dev container issues for us step-by-step.\nCMake Presets including paths in the docker image and CTests now work for our environments in Visual Studio. The Visual Studio team worked diligently to ensure dev container support was available for these scenarios.\nWe can now use Visual Studio with pretty much the same setup that we use in VS Code, while benefiting from the more powerful IDE. With the fixes applied, VS CMake builds in dev containers work very well for us. All our tooling (gcc, ninja, cmake, vcpkg, ..) is now validated and versioned through our baseline docker container and developers can get started right away with Visual Studio or VS Code, simply by opening the project with devcontainers.\nNow, Genetec (and you) has first-class VS support available for using dev containers with their CMake project. Visual Studio is now more versatile than ever for remote Linux C++ developers who are looking to have reproducible developer environments across their IDEs.\nPlease try out Visual Studio 17.11 Preview 2 for this latest dev container support.\nThe Microsoft C++ team would love to hear from any teams that work with our IDE and would like to see improvements with their remote Linux and/or CMake scenarios. Please reach out to us at visualcpp@microsoft.com.\nThe post Genetec uses Visual Studio, CMake, vcpkg, and Docker for remote Linux C++ development appeared first on C++ Team Blog.",
        "dc:creator": "Sinem Akinci",
        "comments": "https://devblogs.microsoft.com/cppblog/genetec-uses-visual-studio-for-cmake-and-remote-container-development/#respond",
        "content": "<p>Over the past couple of months, the Microsoft C++ team reached out to a series of customers voting on a suggestion ticket asking for Remote Linux Unit Testing support to understand their full set of interactions and needs with CMake and remote Linux scenarios in Visual Studio.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/genetec-uses-visual-studio-for-cmake-and-remote-container-development/\">Genetec uses Visual Studio, CMake, vcpkg, and Docker for remote Linux C++ development</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Over the past couple of months, the Microsoft C++ team reached out to a series of customers voting on a suggestion ticket asking for Remote Linux Unit Testing support to understand their full set of interactions and needs with CMake and remote Linux scenarios in Visual Studio.\nThe post Genetec uses Visual Studio, CMake, vcpkg, and Docker for remote Linux C++ development appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=34406",
        "categories": [
          "C++",
          "CMake",
          "Containers",
          "Linux"
        ],
        "isoDate": "2024-07-23T14:54:52.000Z"
      },
      {
        "creator": "Erika Sweet",
        "title": "Improving GitHub Copilot Completions in VS Code for C++ Developers",
        "link": "https://devblogs.microsoft.com/cppblog/improving-github-copilot-completions-in-vs-code-for-c-developers/",
        "pubDate": "Mon, 22 Jul 2024 14:43:56 +0000",
        "content:encodedSnippet": "GitHub Copilot code completions are autocomplete-stye suggestions that appear inline as you code. Until today, they have used context from your active file and other tabs open in the editor to inform the suggestion that is returned. However, we know that more contextually relevant input leads to better suggestions. Our team has made changes to the C/C++ extension and the GitHub Copilot extension in VS Code to ensure that other relevant C++ context — like available types and methods — are also provided to Copilot completions.\nWhen you use the latest version of the C/C++ extension and the GitHub Copilot extension together in VS Code, directly-referenced header files will be automatically considered when gathering additional context for Copilot completions, even if they’re not open in the editor. This helps to reduce hallucinations and provide more relevant suggestions. Let’s look at an example.\nBefore: Directly-referenced header files are not considered as context for GitHub Copilot code completions\nIn this example, I want to create a new function in the OSS Dolphin codebase to find text files. When directly-referenced header files are not considered as context, GitHub Copilot hallucinates a non-existent FindFiles() function.\n\nAfter: Directly-referenced header files are considered as context for Github Copilot code completions\nNow, when directly-referenced header files are considered as context, Copilot correctly suggests an existing DoFileSearch() utility function declared in FileSearch.h.\n\nTo get started, make sure you’re using the GitHub Copilot extension version 1.205 or later and have an active GitHub Copilot subscription. You’ll also need the C/C++ extension version 1.21 or later with IntelliSense configured correctly. Version 1.21 of the C/C++ extension is currently in pre-release. Our team is committed to C++ Copilot support in both Visual Studio and VS Code, and similar support is coming to Visual Studio in Visual Studio 2022 version 17.12.\nContacts Us\nYour feedback helps inform our work to improve the Copilot experience for C++ developers in Visual Studio and VS Code. You can provide feedback on GitHub Copilot by opening a GitHub discussion. You can also reach our team via email (visualcpp@microsoft.com), X (@VisualC), or through the comments below.\nThe post Improving GitHub Copilot Completions in VS Code for C++ Developers appeared first on C++ Team Blog.",
        "dc:creator": "Erika Sweet",
        "comments": "https://devblogs.microsoft.com/cppblog/improving-github-copilot-completions-in-vs-code-for-c-developers/#comments",
        "content": "<p>GitHub Copilot code completions are autocomplete-stye suggestions that appear inline as you code. Until today, they have used context from your active file and other tabs open in the editor to inform the suggestion that is returned. However, we know that more contextually relevant input leads to better suggestions.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/improving-github-copilot-completions-in-vs-code-for-c-developers/\">Improving GitHub Copilot Completions in VS Code for C++ Developers</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "GitHub Copilot code completions are autocomplete-stye suggestions that appear inline as you code. Until today, they have used context from your active file and other tabs open in the editor to inform the suggestion that is returned. However, we know that more contextually relevant input leads to better suggestions.\nThe post Improving GitHub Copilot Completions in VS Code for C++ Developers appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=34429",
        "categories": [
          "Announcement",
          "C++",
          "Copilot",
          "Visual Studio Code"
        ],
        "isoDate": "2024-07-22T14:43:56.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Netflix TechBlog",
    "category": "기업",
    "posts": [
      {
        "creator": "Netflix Technology Blog",
        "title": "Maestro: Netflix’s Workflow Orchestrator",
        "link": "https://netflixtechblog.com/maestro-netflixs-workflow-orchestrator-ee13a06f9c78?source=rss----2615bd06b42e---4",
        "pubDate": "Mon, 22 Jul 2024 17:38:23 GMT",
        "content:encodedSnippet": "Maestro: Data/ML Workflow Orchestrator at Netflix\nBy Jun He, Natallia Dzenisenka, Praneeth Yenugutala, Yingyi Zhang, and Anjali Norwood\nTL;DR\nWe are thrilled to announce that the Maestro source code is now open to the public! Please visit the Maestro GitHub repository to get started. If you find it useful, please give us a star.\nWhat is Maestro\nMaestro is a general-purpose, horizontally scalable workflow orchestrator designed to manage large-scale workflows such as data pipelines and machine learning model training pipelines. It oversees the entire lifecycle of a workflow, from start to finish, including retries, queuing, task distribution to compute engines, etc.. Users can package their business logic in various formats such as Docker images, notebooks, bash script, SQL, Python, and more. Unlike traditional workflow orchestrators that only support Directed Acyclic Graphs (DAGs), Maestro supports both acyclic and cyclic workflows and also includes multiple reusable patterns, including foreach loops, subworkflow, and conditional branch, etc.\nOur Journey with Maestro\nSince we first introduced Maestro in this blog post, we have successfully migrated hundreds of thousands of workflows to it on behalf of users with minimal interruption. The transition was seamless, and Maestro has met our design goals by handling our ever-growing workloads. Over the past year, we’ve seen a remarkable 87.5% increase in executed jobs. Maestro now launches thousands of workflow instances and runs half a million jobs daily on average, and has completed around 2 million jobs on particularly busy days.\nScalability and Versatility\nMaestro is a fully managed workflow orchestrator that provides Workflow-as-a-Service to thousands of end users, applications, and services at Netflix. It supports a wide range of workflow use cases, including ETL pipelines, ML workflows, AB test pipelines, pipelines to move data between different storages, etc. Maestro’s horizontal scalability ensures it can manage both a large number of workflows and a large number of jobs within a single workflow.\nAt Netflix, workflows are intricately connected. Splitting them into smaller groups and managing them across different clusters adds unnecessary complexity and degrades the user experience. This approach also requires additional mechanisms to coordinate these fragmented workflows. Since Netflix’s data tables are housed in a single data warehouse, we believe a single orchestrator should handle all workflows accessing it.\nJoin us on this exciting journey by exploring the Maestro GitHub repository and contributing to its ongoing development. Your support and feedback are invaluable as we continue to improve the Maestro project.\nIntroducing Maestro\nNetflix Maestro offers a comprehensive set of features designed to meet the diverse needs of both engineers and non-engineers. It includes the common functions and reusable patterns applicable to various use cases in a loosely coupled way.\nA workflow definition is defined in a JSON format. Maestro combines user-supplied fields with those managed by Maestro to form a flexible and powerful orchestration definition. An example can be found in the Maestro repository wiki.\nA Maestro workflow definition comprises two main sections: properties and versioned workflow including its metadata. Properties include author and owner information, and execution settings. Maestro preserves key properties across workflow versions, such as author and owner information, run strategy, and concurrency settings. This consistency simplifies management and aids in trouble-shootings. If the ownership of the current workflow changes, the new owner can claim the ownership of the workflows without creating a new workflow version. Users can also enable the triggering or alerting features for a given workflow over the properties.\nVersioned workflow includes attributes like a unique identifier, name, description, tags, timeout settings, and criticality levels (low, medium, high) for prioritization. Each workflow change creates a new version, enabling tracking and easy reversion, with the active or the latest version used by default. A workflow consists of steps, which are the nodes in the workflow graph defined by users. Steps can represent jobs, another workflow using subworkflow step, or a loop using foreach step. Steps consist of unique identifiers, step types, tags, input and output step parameters, step dependencies, retry policies, and failure mode, step outputs, etc. Maestro supports configurable retry policies based on error types to enhance step resilience.\nThis high-level overview of Netflix Maestro’s workflow definition and properties highlights its flexibility to define complex workflows. Next, we dive into some of the useful features in the following sections.\nWorkflow Run Strategy\nUsers want to automate data pipelines while retaining control over the execution order. This is crucial when workflows cannot run in parallel or must halt current executions when new ones occur. Maestro uses predefined run strategies to decide whether a workflow instance should run or not. Here is the list of predefined run strategies Maestro offers.\nSequential Run Strategy\nThis is the default strategy used by maestro, which runs workflows one at a time based on a First-In-First-Out (FIFO) order. With this run strategy, Maestro runs workflows in the order they are triggered. Note that an execution does not depend on the previous states. Once a workflow instance reaches one of the terminal states, whether succeeded or not, Maestro will start the next one in the queue.\nStrict Sequential Run Strategy\nWith this run strategy, Maestro will run workflows in the order they are triggered but block execution if there’s a blocking error in the workflow instance history. Newly triggered workflow instances are queued until the error is resolved by manually restarting the failed instances or marking the failed ones unblocked.\n\nIn the above example, run5 fails at 5AM, then later runs are queued but do not run. When someone manually marks run5 unblocked or restarts it, then the workflow execution will resume. This run strategy is useful for time insensitive but business critical workflows. This gives the workflow owners the option to review the failures at a later time and unblock the executions after verifying the correctness.\nFirst-only Run Strategy\nWith this run strategy, Maestro ensures that the running workflow is complete before queueing a new workflow instance. If a new workflow instance is queued while the current one is still running, Maestro will remove the queued instance. Maestro will execute a new workflow instance only if there is no workflow instance currently running, effectively turning off queuing with this run strategy. This approach helps to avoid idempotency issues by not queuing new workflow instances.\nLast-only Run Strategy\nWith this run strategy, Maestro ensures the running workflow is the latest triggered one and keeps only the last instance. If a new workflow instance is queued while there is an existing workflow instance already running, Maestro will stop the running instance and execute the newly triggered one. This is useful if a workflow is designed to always process the latest data, such as processing the latest snapshot of an entire table each time.\nParallel with Concurrency Limit Run Strategy\nWith this run strategy, Maestro will run multiple triggered workflow instances in parallel, constrained by a predefined concurrency limit. This helps to fan out and distribute the execution, enabling the processing of large amounts of data within the time limit. A common use case for this strategy is for backfilling the old data.\nParameters and Expression Language Support\nIn Maestro, parameters play an important role. Maestro supports dynamic parameters with code injection, which is super useful and powerful. This feature significantly enhances the flexibility and dynamism of workflows, allowing using parameters to control execution logic and enable state sharing between workflows and their steps, as well as between upstream and downstream steps. Together with other Maestro features, it makes the defining of workflows dynamic and enables users to define parameterized workflows for complex use cases.\nHowever, code injection introduces significant security and safety concerns. For example, users might unintentionally write an infinite loop that creates an array and appends items to it, eventually crashing the server with out-of-memory (OOM) issues. While one approach could be to ask users to embed the injected code within their business logic instead of the workflow definition, this would impose additional work on users and tightly couple their business logic with the workflow. In certain cases, this approach blocks users to design some complex parameterized workflows.\nTo mitigate these risks and assist users to build parameterized workflows, we developed our own customized expression language parser, a simple, secure, and safe expression language (SEL). SEL supports code injection while incorporating validations during syntax tree parsing to protect the system. It leverages the Java Security Manager to restrict access, ensuring a secure and controlled environment for code execution.\nSimple, Secure, and Safe Expression Language (SEL)\nSEL is a homemade simple, secure, and safe expression language (SEL) to address the risks associated with code injection within Maestro parameterized workflows. It is a simple expression language and the grammar and syntax follow JLS (Java Language Specifications). SEL supports a subset of JLS, focusing on Maestro use cases. For example, it supports data types for all Maestro parameter types, raising errors, datetime handling, and many predefined utility methods. SEL also includes additional runtime checks, such as loop iteration limits, array size checks, object memory size limits and so on, to enhance security and reliability. For more details about SEL, please refer to the Maestro GitHub documentation.\nOutput Parameters\nTo further enhance parameter support, Maestro allows for callable step execution, which returns output parameters from user execution back to the system. The output data is transmitted to Maestro via its REST API, ensuring that the step runtime does not have direct access to the Maestro database. This approach significantly reduces security concerns.\nParameterized Workflows\nThanks to the powerful parameter support, users can easily create parameterized workflows in addition to static ones. Users enjoy defining parameterized workflows because they are easy to manage and troubleshoot while being powerful enough to solve complex use cases.\n\nStatic workflows are simple and easy to use but come with limitations. Often, users have to duplicate the same workflow multiple times to accommodate minor changes. Additionally, workflow and jobs cannot share the states without using parameters.\nOn the other hand, completely dynamic workflows can be challenging to manage and support. They are difficult to debug or troubleshoot and hard to be reused by others.\nParameterized workflows strike a balance by being initialized step by step at runtime based on user defined parameters. This approach provides great flexibility for users to control the execution at runtime while remaining easy to manage and understand.\n\nAs we described in the previous Maestro blog post, parameter support enables the creation of complex parameterized workflows, such as backfill data pipelines.\nWorkflow Execution Patterns\nMaestro provides multiple useful building blocks that allow users to easily define dataflow patterns or other workflow patterns. It provides support for common patterns directly within the Maestro engine. Direct engine support not only enables us to optimize these patterns but also ensures a consistent approach to implementing them. Next, we will talk about the three major building blocks that Maestro provides.\nForeach Support\nIn Maestro, the foreach pattern is modeled as a dedicated step within the original workflow definition. Each iteration of the foreach loop is internally treated as a separate workflow instance, which scales similarly as any other Maestro workflow based on the step executions (i.e. a sub-graph) defined within the foreach definition block. The execution of sub-graph within a foreach step is delegated to a separate workflow instance. Foreach step then monitors and collects the status of these foreach workflow instances, each managing the execution of a single iteration. For more details, please refer to our previous Maestro blog post.\nThe foreach pattern is frequently used to repeatedly run the same jobs with different parameters, such as data backfilling or machine learning model tuning. It would be tedious and time consuming to request users to explicitly define each iteration in the workflow definition (potentially hundreds of thousands of iterations). Additionally, users would need to create new workflows if the foreach range changes, further complicating the process.\nConditional Branch Support\nThe conditional branch feature allows subsequent steps to run only if specific conditions in the upstream step are met. These conditions are defined using the SEL expression language, which is evaluated at runtime. Combined with other building blocks, users can build powerful workflows, e.g. doing some remediation if the audit check step fails and then run the job again.\nSubworkflow Support\nThe subworkflow feature allows a workflow step to run another workflow, enabling the sharing of common functions across multiple workflows. This effectively enables “workflow as a function” and allows users to build a graph of workflows. For example, we have observed complex workflows consisting of hundreds of subworkflows to process data across hundreds tables, where subworkflows are provided by multiple teams.\nThese patterns can be combined together to build composite patterns for complex workflow use cases. For instance, we can loop over a set of subworkflows or run nested foreach loops. One example that Maestro users developed is an auto-recovery workflow that utilizes both conditional branch and subworkflow features to handle errors and retry jobs automatically.\n\nIn this example, subworkflow `job1` runs another workflow consisting of extract-transform-load (ETL) and audit jobs. Next, a status check job leverages the Maestro parameter and SEL support to retrieve the status of the previous job. Based on this status, it can decide whether to complete the workflow or to run a recovery job to address any data issues. After resolving the issue, it then executes subworkflow `job2`, which runs the same workflow as subworkflow `job1`.\nStep Runtime and Step Parameter\nStep Runtime Interface\nIn Maestro, we use step runtime to describe a job at execution time. The step runtime interface defines two pieces of information:\n\nA set of basic APIs to control the behavior of a step instance at execution runtime.\nSome simple data structures to track step runtime state and execution result.\n\nMaestro offers a few step runtime implementations such as foreach step runtime, subworkflow step runtime (mentioned in previous section). Each implementation defines its own logic for start, execute and terminate operations. At runtime, these operations control the way to initialize a step instance, perform the business logic and terminate the execution under certain conditions (i.e. manual intervention by users).\nAlso, Maestro step runtime internally keeps track of runtime state as well as the execution result of the step. The runtime state is used to determine the next state transition of the step and tell if it has failed or terminated. The execution result hosts both step artifacts and the timeline of step execution history, which are accessible by subsequent steps.\nStep Parameter Merging\nTo control step behavior in a dynamic way, Maestro supports both runtime parameters and tags injection in step runtime. This makes a Maestro step more flexible to absorb runtime changes (i.e. overridden parameters) before actually being started. Maestro internally maintains a step parameter map that is initially empty and is updated by merging step parameters in the order below:\n\nDefault General Parameters: Parameters merging starts from default parameters that in general every step should have. For example, workflow_instance_id, step_instance_uuid, step_attempt_id and step_id are required parameters for each maestro step. They are internally reserved by maestro and cannot be passed by users.\nInjected Parameters: Maestro then merges injected parameters (if present) into the parameter map. The injected parameters come from step runtime, which are dynamically generated based on step schema. Each type of step can have its own schema with specific parameters associated with this step. The step schema can evolve independently with no need to update Maestro code.\nDefault Typed Parameters: After injecting runtime parameters, Maestro tries to merge default parameters that are related to a specific type of step. For example, foreach step has loop_params and loop_index default parameters which are internally set by maestro and used for foreach step only.\nWorkflow and Step Info Parameters: These parameters contain information about step and the workflow it belongs to. This can be identity information, i.e. workflow_id and will be merged to step parameter map if present.\nUndefined New Parameters: When starting or restarting a maestro workflow instance, users can specify new step parameters that are not present in initial step definition. ParamsManager merges these parameters to ensure they are available at execution time.\nStep Definition Parameters: These step parameters are defined by users at definition time and get merged if they are not empty.\nRun and Restart Parameters: When starting or restarting a maestro workflow instance, users can override defined parameters by providing run or restart parameters. These two types of parameters are merged at the end so that step runtime can see the most recent and accurate parameter space.\n\nThe parameters merging logic can be visualized in the diagram below.\n\nStep Dependencies and Signals\nSteps in the Maestro execution workflow graph can express execution dependencies using step dependencies. A step dependency specifies the data-related conditions required by a step to start execution. These conditions are usually defined based on signals, which are pieces of messages carrying information such as parameter values and can be published through step outputs or external systems like SNS or Kafka messages.\nSignals in Maestro serve both signal trigger pattern and signal dependencies (a publisher-subscriber) pattern. One step can publish an output signal (a sample example) that can unblock the execution of multiple other steps that depend on it. A signal definition includes a list of mapped parameters, allowing Maestro to perform “signal matching” on a subset of fields. Additionally, Maestro supports signal operators like <, >, etc., on signal parameter values.\nNetflix has built various abstractions on top of the concept of signals. For instance, a ETL workflow can update a table with data and send signals that unblock steps in downstream workflows dependent on that data. Maestro supports “signal lineage,” which allows users to navigate all historical instances of signals and the workflow steps that match (i.e. publishing or consuming) those signals. Signal triggering guarantees exactly-once execution for the workflow subscribing a signal or a set of joined signals. This approach is efficient, as it conserves resources by only executing the workflow or step when the specified conditions in the signals are met. A signal service is implemented for those advanced abstractions. Please refer to the Maestro blog for further details on it.\nBreakpoint\nMaestro allows users to set breakpoints on workflow steps, functioning similarly to code-level breakpoints in an IDE. When a workflow instance executes and reaches a step with a breakpoint, that step enters a “paused” state. This halts the workflow graph’s progression until a user manually resumes from the breakpoint. If multiple instances of a workflow step are paused at a breakpoint, resuming one instance will only affect that specific instance, leaving the others in a paused state. Deleting the breakpoint will cause all paused step instances to resume.\nThis feature is particularly useful during the initial development of a workflow, allowing users to inspect step executions and output data. It is also beneficial when running a step multiple times in a “foreach” pattern with various input parameters. Setting a single breakpoint on a step will cause all iterations of the foreach loop to pause at that step for debugging purposes. Additionally, the breakpoint feature allows human intervention during the workflow execution and can also be used for other purposes, e.g. supporting mutating step states while the workflow is running.\nTimeline\nMaestro includes a step execution timeline, capturing all significant events such as execution state machine changes and the reasoning behind them. This feature is useful for debugging, providing insights into the status of a step. For example, it logs transitions such as “Created” and “Evaluating params”, etc. An example of a timeline is included here for reference. The implemented step runtimes can add the timeline events into the timeline to surface the execution information to the end users.\nRetry Policies\nMaestro supports retry policies for steps that reach a terminal state due to failure. Users can specify the number of retries and configure retry policies, including delays between retries and exponential backoff strategies, in addition to fixed interval retries. Maestro distinguishes between two types of retries: “platform” and “user.” Platform retries address platform-level errors unrelated to user logic, while user retries are for user-defined conditions. Each type can have its own set of retry policies.\nAutomatic retries are beneficial for handling transient errors that can be resolved without user intervention. Maestro provides the flexibility to set retries to zero for non-idempotent steps to avoid retry. This feature ensures that users have control over how retries are managed based on their specific requirements.\nAggregated View\nBecause a workflow instance can have multiple runs, it is important for users to see an aggregated state of all steps in the workflow instance. Aggregated view is computed by merging base aggregated view with current runs instance step statuses. For example, as you can see on the figure below simulating a simple case, there is a first run, where step1 and step2 succeeded, step3 failed, and step4 and step5 have not started. When the user restarts the run, the run starts from step3 in run 2 with step1 and step2 skipped which succeeded in the previous run. After all steps succeed, the aggregated view shows the run states for all steps.\n\nRollup\nRollup provides a high-level summary of a workflow instance, detailing the status of each step and the count of steps in each status. It flattens steps across the current instance and any nested non-inline workflows like subworkflows or foreach steps. For instance, if a successful workflow has three steps, one of which is a subworkflow corresponding to a five-step workflow, the rollup will indicate that seven steps succeeded. Only leaf steps are counted in the rollup, as other steps serve merely as pointers to concrete workflows.\nRollup also retains references to any non-successful steps, offering a clear overview of step statuses and facilitating easy navigation to problematic steps, even within nested workflows. The aggregated rollup for a workflow instance is calculated by combining the current run’s runtime data with a base rollup. The current state is derived from the statuses of active steps, including aggregated rollups for foreach and subworkflow steps. The base rollup is established when the workflow instance begins and includes statuses of inline steps (excluding foreach and subworkflows) from the previous run that are not part of the current run.\nFor subworkflow steps, the rollup simply reflects the rollup of the subworkflow instance. For foreach steps, the rollup combines the base rollup of the foreach step with the current state rollup. The base is derived from the previous run’s aggregated rollup, excluding the iterations to be restarted in the new run. The current state is periodically updated by aggregating rollups of running iterations until all iterations reach a terminal state.\nDue to these processes, the rollup model is eventually consistent. While the figure below illustrates a straightforward example of rollup, the calculations can become complex and recursive, especially with multiple levels of nested foreaches and subworkflows.\n\nMaestro Event Publishing\nWhen workflow definition, workflow instance or step instance is changed, Maestro generates an event, processes it internally and publishes the processed event to external system(s). Maestro has both internal and external events. The internal event tracks changes within the life cycle of workflow, workflow instance or step instance. It is published to an internal queue and processed within Maestro. After internal events are processed, some of them will be transformed into external event and sent out to the external queue (i.e. SNS, Kafka). The external event carries maestro status change information for downstream services. The event publishing flow is illustrated in the diagram below:\n\nAs shown in the diagram, the Maestro event processor bridges the two aforementioned Maestro events. It listens on the internal queue to get the published internal events. Within the processor, the internal job event is processed based on its type and gets converted to an external event if needed. The notification publisher at the end emits the external event so that downstream services can consume.\nThe downstream services are mostly event-driven. The Maestro event carries the most useful message for downstream services to capture different changes in Maestro. In general, these changes can be classified into two categories: workflow change and instance status change. The workflow change event is associated with actions at workflow level, i.e definition or properties of a workflow has changed. Meanwhile, instance status change tracks status transition on workflow instance or step instance.\nGet Started with Maestro\nMaestro has been extensively used within Netflix, and today, we are excited to make the Maestro source code publicly available. We hope that the scalability and usability that Maestro offers can expedite workflow development outside Netflix. We invite you to try Maestro, use it within your organization, and contribute to its development.\nYou can find the Maestro code repository at github.com/Netflix/maestro. If you have any questions, thoughts, or comments about Maestro, please feel free to create a GitHub issue in the Maestro repository. We are eager to hear from you.\nWe are taking workflow orchestration to the next level and constantly solving new problems and challenges, please stay tuned for updates. If you are passionate about solving large scale orchestration problems, please join us.\nAcknowledgements\nThanks to other Maestro team members, Binbing Hou, Zhuoran Dong, Brittany Truong, Deepak Ramalingam, Moctar Ba, for their contributions to the Maestro project. Thanks to our Product Manager Ashim Pokharel for driving the strategy and requirements. We’d also like to thank Andrew Seier, Romain Cledat, Olek Gorajek, and other stunning colleagues at Netflix for their contributions to the Maestro project. We also thank Prashanth Ramdas, Eva Tse, David Noor, Charles Smith and other leaders of Netflix engineering organizations for their constructive feedback and suggestions on the Maestro project.\n\nMaestro: Netflix’s Workflow Orchestrator was originally published in Netflix TechBlog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Netflix Technology Blog",
        "guid": "https://medium.com/p/ee13a06f9c78",
        "categories": [
          "orchestration",
          "machine-learning",
          "workflow",
          "data",
          "distributed-systems"
        ],
        "isoDate": "2024-07-22T17:38:23.000Z"
      }
    ]
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Irina Mariasova",
        "title": "Is Java Still Relevant Nowadays?",
        "link": "https://blog.jetbrains.com/idea/2024/07/is-java-still-relevant-nowadays/",
        "pubDate": "Fri, 26 Jul 2024 13:31:18 +0000",
        "content:encodedSnippet": "One of the biggest challenges for technologies nowadays is keeping up to date with the latest developments, remaining relevant to the demands of modern business, and continuing to provide added value for users. The world is changing faster than ever before, and the pace of this change shows no signs of slowing.\nAs a major programming language, Java is also subject to these challenges. Newer, simplified languages are introduced regularly. Can Java keep its crown? Is there still potential for those just starting their development careers with Java?\nIn this blog post that brings together data from The State of Developer Ecosystem 2023 and The State of Developer Ecosystem 2022 reports*, we’ll learn the answers to these questions and more. We’ll look at how Java stacks up against other languages, find out what sectors use it and for what products, provide data that can help you decide whether this language is worth learning, and, as a bonus, share an example Java developer profile to see if you can relate.\nHow does Java rank among other languages? \nAccording to the JetBrains Developer Ecosystem Survey 2023, Java continues to shine in the programming world with 49% of developers who have been using it over 2023. \nIt also secures its place as the most popular primary language* – 33% of developers choose it as their main tool! Notably, 58% of Java developers have no intention of migrating to other languages, highlighting Java’s reliability.\n* The list contains programming, scripting, and markup languages. \n\n\n\n\nDespite new languages emerging, Java is still strong. Between 47% and 54% of developers have consistently used Java over the last seven years, indicating its stability. Its ongoing updates and broad applications across multiple industries mean Java skills will stay valuable for years to come. Companies like JetBrains support and improve the Java ecosystem, ensuring it continues to be relevant and important​. \n\n\n\n\nWhat is Java used for?\nJava’s vast set of features and frameworks make it most suitable for creating websites, utilities, system software, databases, and libraries, as highlighted by recent trends in the developer community in The State of Developer Ecosystem 2023 survey.\n\n\n\n\n73% of respondents answered that IT is their company’s core business. Among IT-related industries, the most popular ones are IT services, mobile development, cloud computing, fintech, and big data. Developers working in non-IT-related industries most frequently work in banking, real estate, mortgage financing, accounting, finance, and insurance. Beyond these, other popular sectors include education and manufacturing, medicine and health, as well as sales, distribution, and retail.\n\n\n\n\nAs you see, Java is used in the most critical economic sectors. Its platform independence and strong enterprise support make it perfect for managing complex data in these industries.\nWho uses Java?\nAccording to our estimations, there are 4.6M professional Java developers in the world, with the majority of them based in China, India, the United States, Japan, Germany, and South Korea. \n\n\n\n\nBased on recent survey data, here’s an overview of the typical Java developer’s age, occupation, education, and preferred tools.\nAge \nThe age distribution of Java developers indicates a young and vibrant community.\n\n\n\n\nEducation and occupation \nA large number of Java developers (66%) work full time for a company or organization. Students and working students also account for a significant portion, making up 23%. Other job statuses include freelancers, self-employed, and partially employed.\n\n\n\n\nIn terms of job roles, a significant majority identify as developers, programmers, or software engineers. Other notable roles include architect, DevOps engineer, team lead, and technical support specialist. \n\n\n\n\nAs for education, Java developers tend to have a strong academic foundation.\n\n\n\n\nWork environments and tools \nProfessional Java developers heavily favor IntelliJ IDEA as their IDE of choice, with a remarkable 81% choosing JetBrains flagship product. \n\n\n\n\nWhen it comes to operating systems, Windows is the dominant platform for development, with 69% of Java developers using it. Linux (43%) and macOS (42%) are also widely used, reflecting the varied preferences in the development community.\n\n\n\n\nWriting assistance tools are not widely adopted, with 49% of developers not using any such tools. However, 36% use functionalities integrated into their working environment, and 18% use Grammarly.\nAs for the typical working environment, two monitors are the norm, with 60% of developers opting for two to enable multitasking.\nWhy choose to study Java nowadays?\nJava may not be the trendiest language, but it’s still worth adopting. Here are a few reasons: \nCareer opportunities and salary\nJava developers are always in demand, ensuring strong job prospects, career growth, and well-paying job opportunities, which makes it a smart financial choice.\nFor instance, 33% of new developers with less than one year of experience can expect to earn between $3,000 and $5,000 per month in the USA, according to Developer Ecosystem: Data Playground survey. This figure presents the net monthly salary distribution, excluding any bonuses.\n\n\n\n\nEducational foundation\nLearning Java provides a strong foundation in object-oriented programming (OOP). Its syntax and concepts are similar to many other languages, making it easier to pick up additional languages later on. Understanding Java can serve as a stepping stone to other technologies, broadening your skill set and career opportunities.\n\n\n\n\nJava remains one of the most popular languages taught in universities. In fact, 84% of the students who participated in the JetBrains Developer Ecosystem survey for 2023 reported studying Java in their educational institutions​​, and 64% mentioned that formal education allowed them to take their first steps toward becoming developers. \n\n\n\n\n\n\n\n\nA positive trend for Java is that many new developers are still choosing to start learning the language. As the survey showed, Java is among the top five languages that people have chosen to study in 2023. \n\n\n\n\nJava developer profile outside work\nNow let’s uncover the unique experiences and preferences of Java developers beyond their professional roles. What are the joys and challenges faced by modern Java developers? What do they enjoy, and how do they manage their work-life balance?\nWork-life balance \nWork-life balance is crucial, but how does it apply to Java developers?\nAs the survey shows, the majority of developers finish work in the early evening, but a significant 16% work late into the night (after 22:00), which could ruin a healthy work-life balance. \n\n\n\n\nAlso, many developers have a strong passion for coding, and 70% choose to code for fun, even during the weekends.\nWe found it interesting that Java developers are motivated not only by financial benefits but also by meaningful and impactful work. This means that when they see the results of their work, they may choose to work more but still feel balanced.\n\n\n\n\nAssuming that Java developers love working on meaningful projects, maintaining productivity is essential. Let’s see what are the favorite productivity boots among Java developers. \n\n\n\n\nFlexible working hours, good sleep, and meaningful projects can make developers happier and their lives more balanced.\nFree time and interests \nLet’s explore how Java developers spend their free time, what hobbies and interests they have, and what else contributes to their overall well-being.\n\n\n\n\nJava developers engage in a variety of hobbies during their free time.\n\n\n\n\nSince the majority of developers enjoy playing video games, we’ve asked them about their favorite genres, which include action games (48%), RPGs (47%), adventure games (45%), and strategic games (42%). \nAre Java developers sporty? \n\n\n\n\nJava developers have many interests, which shows that they are eager to learn and grow in different areas.\n\n\n\n\nWhat about social media? They overwhelmingly have personal accounts on the following websites and regularly browse them:\n\n\n\n\nAnd finally, the most important insight in our overview. This might just be the data point that helps you determine if you identify as a Java developer!\n\n\n\n\nConclusion\nWith the help of The State of Developer Ecosystem 2023 and 2022 surveys, we’ve found out that Java remains a key player in the tech world, powering enterprise software, mobile apps, and smaller utilities. Thus, learning Java provides a strong foundation in programming and opens doors to lucrative careers. \nWe’ve also presented some interesting data about modern Java developers, their lifestyles, life priorities, hobbies, and many other details. \nAfter reading this overview, what do you think about Java’s role today? If you’re not already, do you see yourself as a Java developer in the future? Share your thoughts in the comments below!\n*Despite all the measures we’ve taken to secure a representative pool of respondents, the results may be slightly shifted towards JetBrains product users, as they are more likely to take the survey.",
        "dc:creator": "Irina Mariasova",
        "content": "One of the biggest challenges for technologies nowadays is keeping up to date with the latest developments, remaining relevant to the demands of modern business, and continuing to provide added value for users. The world is changing faster than ever before, and the pace of this change shows no signs of slowing. As a major [&#8230;]",
        "contentSnippet": "One of the biggest challenges for technologies nowadays is keeping up to date with the latest developments, remaining relevant to the demands of modern business, and continuing to provide added value for users. The world is changing faster than ever before, and the pace of this change shows no signs of slowing. As a major […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=497122",
        "categories": [
          "java",
          "news",
          "statistics"
        ],
        "isoDate": "2024-07-26T13:31:18.000Z"
      },
      {
        "creator": "Maarten Balliauw",
        "title": "Make it Happen – With Easter Eggs",
        "link": "https://blog.jetbrains.com/blog/2024/07/26/make-it-happen-with-easter-eggs/",
        "pubDate": "Fri, 26 Jul 2024 12:40:55 +0000",
        "content:encodedSnippet": "Ever since the dawn of humanity, we’ve had a fascination with discovery. For Neanderthals, it was fire, for people of the Renaissance it was electricity, and now it’s funny cat gifs and Easter eggs hidden deep within videos. \nDespite clocking in at just 1 minute and 18 seconds, the “Make it happen. With code. | JetBrains IDEs” video contains ten developer-related Easter eggs. Did you find them all?\n\nWe didn’t make it easy! We wanted to really maximize the payoff of finding all ten. And for some, there was literally a payoff: the first few people to find all Easter eggs were treated to a one-year subscription to a JetBrains All Products Pack.\nBut now that all prizes have been claimed, we’ll put you out of your misery and reveal all ten Easter eggs in the video.\nEaster egg #1: Brainfuck code\n\n\n\n\nAt the 9-second mark, eagle-eyed viewers will have caught a glimpse of code, written in the mythical Brainfuck language. It’s not often that this code makes an appearance in the wild, yet it can technically be used to write any program with just eight simple commands… It would probably be interesting to know what console output is written by the program in this scene. We’ll leave that up to you – you can run the following code snippet using your Brainfuck interpreter of choice:\n+++++++++[>++++++++>+++++++++++>+++++++++++++>++++>+++++++++<<<<<-]>.>++.>++++.>----.>+.<<<.-..+++++.>-----.\nBrainfuck code has been around since 1993 and is known for its extreme minimalism – but definitely not for its simplicity. Commands need to be broken down into tiny steps, and there is so little abstraction that things get very long and complicated very quickly.\nEaster egg #2: hello world\n\n\n\n\nAs a staple part of any developer’s daily routine, coffee was bound to appear in this video. And if you thought this “cup of Joe” might be hiding an Easter egg, you were right!… sort of. The coffee itself isn’t where you should be looking – the Easter egg is the “hello, world” message displayed on the machine.\nDevelopers all over the world can attest to the significance of these two words, as they hold a very special place in our hearts. Why? “hello, world” is usually the very first program anyone will develop with a language. They are a great first step in helping to understand the syntax of the language you are about to learn.\nEaster egg #3: Kodee\n\n\n\n\nIf you know, you know! But if you don’t, let me explain! Kodee is the official mascot of the Kotlin language. Kotlin is a cross-platform, statically typed, general-purpose, high-level programming language with type inference. And to top it all off – Kotlin was designed and developed by JetBrains.\nIncluding a shot of this cheeky little rascal was our way of giving a shout-out to the millions of developers out there who use Kotlin. If you want to get up to speed on Kotlin and Kodee, the recent KotlinConf featured a boatload of announcements and insights.\nEaster egg #4: 418 I’m a teapot cup\n\n\n\n\nNot all developers drink coffee. In fact, some prefer a nice cup of tea. Some hardcore developers managed to catch this reference to an old April Fools’ joke: the Hyper Text Coffee Pot Control Protocol. \nThe HTTP 418 I'm a teapot client error response code indicates that the server refuses to brew coffee because it is, permanently, a teapot. Some websites use this response for requests they do not wish to handle, such as automated queries.\nEaster egg #5: No tabs beyond this point\n\n\n\n\nThe Easter eggs could be hidden in the subtlest of places, where, if you didn’t know the reference, you could have easily missed them. However, the Tabs vs. Spaces debate is one many developers will be familiar with.\nConsistent style and formatting in a codebase is important to help improve readability and maintainability – indentation being one of them. There are pros and cons to each character for indentation. And although I personally like the idea of using tabs for indentation because they help with accessibility, it’s really up to each development team to pick their preferred style. Since the scene is set in Space, we thought to include a reference to Tabs as an Easter egg here.\nEaster egg #6: It works on my machine\n\n\n\n\nBeing a developer can be hard, and making things work 100% of the time, can be harder. \n“It works on my machine ¯\\_(ツ)_/¯” is a cliché response when things go wrong… It’s up there with “Try turning it off and on again,” “It’s never done that before,” and the classic “It worked yesterday.” The environments where your application is used can greatly vary, so usually “it works on my machine” is the beginning of trying to figure out why things work on one machine, and not the other. \nThis is a shout-out to all you developers (and testers, and QAs) out there who are putting in maximum effort to make sure that the software runs on all machines!\nEaster egg #7: Kotlin garland\n\n\n\n\nWhenever we have a chance to celebrate Kotlin, you know we’re going to take it! This is another Easter egg that’s an easy find if you know what to look for – but borderline impossible if you don’t. What do you mean you don’t have a garland of the language you are coding with hanging in your office?\nIt’s Kotlin again!\nEaster egg #8: LEET\n\n\n\n\nYou have to be pretty “leet” yourself to catch the double whammy in this scene. But there is definitely something off with that clock.\nLeet – or as we elite developers call it, “1337” – lets us circumvent filters and say what we really want to say. 7h15 15 35p3c14lly u53ful f0r d3v3l0p3r5 wh0 n33d 70 74lk 70 34ch 07h3r unf1l73r3d 4nd h0n357ly.\nEaster egg #9: Rubber Duck debugging\n\n\n\n\nWhat the duck? Yes, the duck! This was another Easter egg reference to the bizarre (yet oddly brilliant) practice of asking an inanimate object for help. Because, you know, asking yourself questions would just be weird. \nRubber duck debugging is the act of working through problems by asking different questions to come up with ideas about what has gone wrong. The rubber duck is symbolic of having an inanimate object on your desk as something to converse with… so it is no longer weird to talk to yourself as you are actually talking to a rubber duck.\nEaster egg #10: JetBrains Amsterdam office coordinates\n\n\n\n\nAs we said, we didn’t want to make it too easy for people! The very last scene shows one final piece of code that defines the get_office_coords function. The code snippet contains coordinates, and anyone curious enough to look them up would find that they point to the JetBrains office in Amsterdam.\nThis time, the Easter egg is us. We have JetBrains offices all over the world – in Belgrade, Berlin, Boston, Foster City, Limassol, Marlton, Munich, Paphos, Prague, Shanghai, Warsaw, and Yerevan – for our 2.2k employees, who work together to develop the very best tools to develop with. This is our “Drive to Develop”, so you can Make it happen. With code.\nBonus Easter egg: It’s not a bug, it’s a feature!\n\n\n\n\nYou’ll notice an extra bonus Easter egg hidden on the mug near the end. When Grace Hopper first discovered an actual bug in the Mark II computer, leading to an operating issue, the word “bug” was introduced to mean an issue in a computer program. A bug implies there’s undesirable behavior in software, but is every bug really a bug? Some functionality may be considered a bug by some, but not others. For cases where the interpretation is subjective, and a bug may be an accidental feature, the phrase “It’s not a bug, it’s a feature” was introduced.\nThat is all for today! We hope you’ve enjoyed this blog post and it has helped you find all the subtle nods we’ve given to developers. You really are the reason we do what we do and try hard to make our tools provide value and an enjoyable experience. Without you, there is no JetBrains.\nHappy developing!",
        "dc:creator": "Maarten Balliauw",
        "content": "Ever since the dawn of humanity, we’ve had a fascination with discovery. For Neanderthals, it was fire, for people of the Renaissance it was electricity, and now it’s funny cat gifs and Easter eggs hidden deep within videos.&#160; Despite clocking in at just 1 minute and 18 seconds, the “Make it happen. With code. &#124; [&#8230;]",
        "contentSnippet": "Ever since the dawn of humanity, we’ve had a fascination with discovery. For Neanderthals, it was fire, for people of the Renaissance it was electricity, and now it’s funny cat gifs and Easter eggs hidden deep within videos.  Despite clocking in at just 1 minute and 18 seconds, the “Make it happen. With code. | […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=497169",
        "categories": [
          "news",
          "jetbrains-ides"
        ],
        "isoDate": "2024-07-26T12:40:55.000Z"
      },
      {
        "creator": "Oksana Mandryka",
        "title": "Use Microsoft Edge? Try Grazie!",
        "link": "https://blog.jetbrains.com/grazie/2024/07/use-microsoft-edge-try-grazie/",
        "pubDate": "Fri, 26 Jul 2024 09:38:41 +0000",
        "content:encodedSnippet": "We are excited to share that Grazie, our AI writing companion for people in tech, is now available for Microsoft Edge users. This is one more step towards streamlining your non-coding tasks wherever you work.\nHow to get started:\nInstall the Grazie extension in Microsoft Edge.\nSign in with your JetBrains Account or create one at https://account.jetbrains.com. You can also use your Google Account or Apple ID.\nPin the extension to the toolbar so you can quickly tune its settings and access Grazie’s AI chat.\nGo to your favorite website, select some text to play with, and see what Grazie can do! You can also just start typing in any text field and see what Grazie suggests.\n\n\n\n\nGrazie is currently available as a plugin for JetBrains IDEs and as an extension for Microsoft Edge, Safari, Google Chrome, Arc, and other Chromium-based browsers. Both the browser extension and the plugin are free.\nWe truly appreciate all of the feedback you send us – it helps us grow and improve. We’ve noted the frequent requests for a Firefox extension – rest assured, we’re listening! Stay tuned for our updates, and we look forward to bringing you more great news soon.\nYour JetBrains Team\nGet Grazie for Free\n                                                    \nPS\nThis text was proofread by Grazie.",
        "dc:creator": "Oksana Mandryka",
        "content": "We are excited to share that Grazie, our AI writing companion for people in tech, is now available for Microsoft Edge users. This is one more step towards streamlining your non-coding tasks wherever you work. How to get started: Grazie is currently available as a plugin for JetBrains IDEs and as an extension for Microsoft [&#8230;]",
        "contentSnippet": "We are excited to share that Grazie, our AI writing companion for people in tech, is now available for Microsoft Edge users. This is one more step towards streamlining your non-coding tasks wherever you work. How to get started: Grazie is currently available as a plugin for JetBrains IDEs and as an extension for Microsoft […]",
        "guid": "https://blog.jetbrains.com/?post_type=grazie&p=497013",
        "categories": [
          "news",
          "extensions",
          "grammar",
          "grazie",
          "microsoft-edge",
          "spellchecker",
          "writing-assistance"
        ],
        "isoDate": "2024-07-26T09:38:41.000Z"
      },
      {
        "creator": "Darya Sharkova",
        "title": "How to use Stimulus in your Rails apps with RubyMine",
        "link": "https://blog.jetbrains.com/ruby/2024/07/how-to-use-stimulus-in-your-rails-apps-with-rubymine/",
        "pubDate": "Thu, 25 Jul 2024 20:20:40 +0000",
        "content:encodedSnippet": "Hello everyone!\nThe RubyMine team is constantly striving to provide support for new technologies for Ruby and Rails. One of the most exciting recent additions to Rails is undoubtedly Hotwire, so we’ve prepared an overview of this suite of frameworks and a tutorial on how to use the most important Turbo and Stimulus features in your Rails app with RubyMine. This post covers Stimulus; For Turbo, please see our previous blog post.\nHotwire and Stimulus\nWhat is Hotwire?\nHotwire simplifies web development by sending HTML over the wire instead of JSON (hence the name, which stands for “HTML over the wire”). This reduces the amount of JavaScript developers need to write and the application needs to send to the browser, while also keeping template rendering on the server. Hotwire is made up of several frameworks: Turbo, Stimulus, and Strada. In this post, we’ll be looking at Stimulus.\nWhat is Stimulus?\nStimulus is a JavaScript framework designed to work with static HTML and its existing DOM elements. It lets users add JavaScript functionality to the DOM by connecting elements to Stimulus controllers, which can be used to manipulate the DOM. Its goal isn’t to provide a full JavaScript frontend, but rather to enhance existing HTML elements.\n\n\n\n\nThe stimulus-rails gem is shipped by default with Rails 7, so you can start using it in your applications right away!\nRubyMine provides support for Stimulus, such as code completion, navigation, and rename refactoring, which we encourage you to try as you make your way through the tutorial.\nTutorial: how to use Stimulus in Rails apps with RubyMine\nIn this tutorial, we’ll show you how to use the basic building blocks of Stimulus to easily integrate JavaScript into your applications. We’ll use a sample Rails application that allows the users to make accounts, create microposts, follow each other, and read the microposts in a feed.\nClone the sample Rails app\nFollow these steps to clone and run our sample app:\nCheck out the sample application at https://github.com/JetBrains/sample_rails_app_7th_ed/tree/hotwire_setup (make sure to switch to the hotwire_setup branch once you’ve cloned the project). For further information on how to set up a Git repository, please see the documentation.\nSpecify the Ruby interpreter and install the gems.\n\n\n\n\nAlice’s feed in the sample app\n\n\n\nLet’s explore Stimulus in action by building a simple Copy to clipboard button.\nCopy to clipboard button\nLet’s add a Copy to clipboard button next to our Delete link. The intended function of this new button is to copy the text of the micropost when we click on it.\n1. Open the _micropost.html.erb file and add the button to the view:\n<% if current_user?(micropost.user) %>\n  <%= link_to \"delete\", micropost, data: { \"turbo-method\": :delete,\n                                           turbo_confirm: \"You sure?\" } %>\n<% end %>\n\n<%= button_tag \"copy\", class: \"btn btn-link button-link-aligned\" %>\nTo copy the text with a single mouse click, we’ll need to use JavaScript. To do that, let’s connect our button to a Stimulus controller.\n2. Execute the following command using RubyMine’s Run Anything feature (Ctrl+Ctrl): rails generate stimulus clipboard\nGenerate Stimulus controller via Run Anything\n\n\n\n\nThis command will generate a Stimulus controller, which is the component that allows us to create a connection between our DOM elements and JavaScript.\nThe name of our controller is clipboard. This command generates a file named clipboard_controller.js in the app/javascript/controllers directory. The controllers from this directory are loaded automatically (see the file index.js).\n3. In the file _micropost.html.erb, add the data-controller attribute:\n<li id=\"micropost-<%= micropost.id %>\" data-controller=\"clipboard\">\n  ...\n</li>\nThis will allow us to connect our micropost to the clipboard controller. You can check if we successfully connected to the controller by adding some debug logging into the connect method and then checking the browser console upon loading the page.\n4. Update the copy button in _micropost.html.erb:\n<%=button_tag \"copy\", class: \"btn btn-link button-link-aligned\", data: { action: \"clipboard#copy\"} %>\nWhen we click on the button, we want to perform a specific action, namely, copying some text. That text should come from a certain target, the body of the micropost. Actions and targets are some of the core concepts of Stimulus.\nActions connect controller methods to DOM events. When you click on an element, input some text, or submit a form, you can invoke some JavaScript code by specifying a controller method using the data-action attribute. This is exactly what we did with our button in the code above.\n5. Add the copy method to the clipboard controller:\nTo copy the text, we can use the navigator.clipboard.writeText method, except we need some way of obtaining the element from which the text is to be copied. This is where targets come in handy.\n6. Add a target to your controller by pasting the following line into your controller class:\nstatic targets = [\"source\"];\nTargets let you reference DOM elements that you might want to manipulate in your controller.\nYou can specify which targets your controller is going to be using inside a static field in the controller class.\n7. Wrap the content of your micropost in a div tag in _micropost.html.erb:\n<div data-clipboard-target=\"source\">\n  <%= micropost.content %>\n</div>\nWe can refer to controller targets inside our HTML by using the data-[controller-name]-target attribute, e.g. data-clipboard-target = \"source\".\n8. Complete the body of the copy method:\n// clipboard_controller.js\n\ncopy() {\n  navigator.clipboard.writeText(this.sourceTarget.textContent);\n}\nWe can use this.sourceTarget to refer to the target inside our JavaScript controller.\nPlease note that navigator.clipboard is only available in secure contexts. For local development, you can run your app on localhost.\nThat’s it! Now we can copy the content of our microposts to the clipboard with a simple button click.\nHide a micropost from the feed\nOther important Stimulus concepts include values, classes, and outlets.\nYou might want to pass some values as attributes of the controller element and use those values in your JavaScript code. This is exactly what Stimulus values are designed to do. Specify them next to the data-controller attribute as follows:\n<li id=\"micropost-<%= micropost.id %>\" data-controller=\"clipboard\" data-clipboard-copyable-value=\"true\">\nHere, clipboard is the name of the controller, and copyable is the name of the property that we’d like to read (or write) in the controller. Then, you define the value names and types in the controller in a special static object, as shown below:\n// clipboard_controller.js\n\nstatic values = { copyable: Boolean };\nFor further information about available types, please consult the documentation.\nYou can reference the values in your JavaScript song as this.[valueName]Value:\n// clipboard_controller.js\n\nif (!this.copyableValue) {\n  ...\n}\nOutlets let you reference other Stimulus controllers and elements from within your controller: This way, different controllers in your project can communicate between themselves.\nClasses refer to CSS classes: You can manipulate them programmatically from your JavaScript code. Let’s take a closer look at how to work with them by implementing a controller that can hide microposts on our feed with a single click. The same effect can be achieved by directly manipulating the style of the element (target.style.display = \"none\"), but we’ll accomplish this by setting the CSS class of the element instead. We can reuse this technique for many other visual effects, too.\n1. Open the custom.scss file and add the following class:\n.invisible {\n  display: none\n}\n2. Generate a controller to manipulate the visibility of posts: rails generate stimulus visibility.\n3. Open the file visibility_controller.js and add a class and a target to the controller:\nimport { Controller } from \"@hotwired/stimulus\"\n\nexport default class extends Controller {\n  static classes = [\"hidden\"];\n  static targets = [\"hide\"];\n}\n4. Add a hide method to the controller:\nexport default class extends Controller {\n  ...\n   \n  hide() {\n    this.hideTarget.classList.add(this.hiddenClass);\n  }\n}\nThis method will then append the CSS class hidden to the target hide.\n5. Add the new controller and the class to the micropost view template by adding the following HTML attributes:\n<li id=\"micropost-<%= micropost.id %>\" data-controller=\"clipboard visibility\" data-visibility-hidden-class=\"invisible\" data-visibility-target=\"hide\">\nFirst, we add another controller: data-controller=\"clipboard visibility\". Second, we specify which actual CSS class the logical class from the controller corresponds to: data-visibility-hidden-class=\"invisible\". Classes must be specified on the same elements as the controllers to which they belong. Third, we specify the target that we want to hide, which is the entire micropost.\n6. Add a hide button to the right of each micropost in _micropost.html.erb:\n<span class=\"timestamp\">\n  ...\n  <%= button_tag \"hide\", class: \"btn btn-link button-link-aligned\", data: { action: \"visibility#hide\" }, style: \"float: right;\" %>\n</span>\nThe button uses Stimulus actions to connect to the controller method hide.\nIf we click on this button, the corresponding micropost will disappear.\n…until we refresh the page.\nThere are many ways to approach persisting the hidden state of a micropost here. For example, you could use Stimulus values and create a boolean value named hidden. Then, the hidden class will be automatically added to those elements for which the value is true. Alternatively, you could simply choose not to load such microposts from the database. To do that, though, we’ll need to communicate something back to our Rails app, which we can do by sending a simple request. Let’s revisit our hide method in the Stimulus controller.\n7. Add the following code to the hide method in visibility_controller.js:\nhide(e) {\n  this.hideTarget.classList.add(this.hiddenClass);\n \n  const id = e.target.dataset.id\n  const csrfToken = document.querySelector(\"[name='csrf-token']\").content\n  fetch(`/microposts/${id}/hide`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRF-Token': csrfToken\n    },\n    body: JSON.stringify({ hidden: true })\n  }).then(response => response.json())\n}\nWe’re now sending a very basic POST request to microposts/:id/hide. You could send anything in the body of the request, but here, we’ll simply state that hidden is now true.\nNotice that this code uses the micropost ID, which it must receive from the view.\n8. Pass the ID in the data hash next to the action in _micropost.html.erb:\n<%= button_tag \"hide\",\n              class: \"btn btn-link button-link-aligned\",\n              data: { action: \"visibility#hide\", id: micropost.id },\n              style: \"float: right;\" %>\n9. Add the following route to routes.rb:\npost 'microposts/:id/hide', to: 'microposts#hide'\n10. Add a hide method to microposts_controller.rb:\ndef hide\n  @micropost = Micropost.find(params[:id])\n  hidden_post = HiddenPost.new\n  hidden_post.user = current_user\n  hidden_post.micropost = @micropost\n  hidden_post.save\nend\n11. Use Run Anything to generate a model that will store information about hidden posts for a specific user:\nrails generate model HiddenPost user:references micropost:references\n12. Update the User#feed method in the user.rb file:\n# user.rb\n\ndef feed\n  following_ids = \"SELECT followed_id FROM relationships\n                  WHERE  follower_id = :user_id\"\n  hidden_posts_for_user = \"SELECT micropost_id FROM hidden_posts WHERE user_id = :user_id OR user_id IN (#{following_ids})\"\n  Micropost.where(\"user_id IN (#{following_ids})\n                  OR user_id = :user_id\", user_id: id)\n          .where(\"id NOT IN (#{hidden_posts_for_user})\", user_id: id)\n          .includes(:user, image_attachment: :blob)\nend\nNow that we’ve saved the information about hidden posts in the database, those will no longer be visible in the user feed, even after a page refresh.\nHide button in action\n\n\n\n\nConclusion\nIn this tutorial, we’ve explored the Stimulus framework and its core concepts: controllers, targets, and actions. We’ve learned to use Stimulus in our Rails applications to easily connect our DOM elements to JavaScript.\nTake advantage of Hotwire support in your favorite JetBrains IDE for Ruby and Rails. Download the latest RubyMine version from our website or via the free Toolbox App.\nTo learn about the newest features as they come out, please follow RubyMine on X.\nWe invite you to share your thoughts in the comments below and to suggest and vote for new features in the issue tracker.",
        "dc:creator": "Darya Sharkova",
        "content": "Hello everyone! The RubyMine team is constantly striving to provide support for new technologies for Ruby and Rails. One of the most exciting recent additions to Rails is undoubtedly Hotwire, so we’ve prepared an overview of this suite of frameworks and a tutorial on how to use the most important Turbo and Stimulus features in [&#8230;]",
        "contentSnippet": "Hello everyone! The RubyMine team is constantly striving to provide support for new technologies for Ruby and Rails. One of the most exciting recent additions to Rails is undoubtedly Hotwire, so we’ve prepared an overview of this suite of frameworks and a tutorial on how to use the most important Turbo and Stimulus features in […]",
        "guid": "https://blog.jetbrains.com/?post_type=ruby&p=495884",
        "categories": [
          "rails",
          "rubymine"
        ],
        "isoDate": "2024-07-25T20:20:40.000Z"
      },
      {
        "creator": "Daniela Bentrup",
        "title": "Fleet 1.38 Is Here With Support for Virtual Environments Created by Anaconda, Auto-Refresh for Log Files, Improved Proxy Setting Detection, and Much More",
        "link": "https://blog.jetbrains.com/fleet/2024/07/fleet-1-38-is-here-with-support-for-virtual-environments-created-by-anaconda-auto-refresh-for-log-files-improved-proxy-setting-detection-and-much-more/",
        "pubDate": "Thu, 25 Jul 2024 12:11:37 +0000",
        "content:encodedSnippet": "Fleet 1.38 is now available! Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using the Toolbox App.\nLet’s take a closer look at the highlights.\nDownload Fleet 1.38\nNew features\nAnaconda is a Python distribution that focuses primarily on data science and machine learning. It comes with its own package management system called Conda. With Fleet 1.38, existing Conda environments will be detected automatically. To use this feature, Conda must be installed in a known directory or added to the PATH variable. Alternatively, you can manually specify the Conda executable using the conda.executable settings key.\nYou can now reopen previously closed tabs with the ⌘⇧T / Ctrl+Shift+T shortcut.\n\n\n\n\n\nFleet 1.38 detects your operating system’s proxy configuration automatically, making it easier to use Fleet behind a firewall or on corporate networks.\nImprovements\nLog files are now refreshed in real time. File changes are automatically updated and will be shown in open log files in the editor.\nWith Fleet 1.38, we’ve introduced a lock icon that indicates a file is read-only.\n\n\n\n\n\n\nEvery tool window such as Git, Debug, or Docker will now reopen when Fleet restarts.\nWhen using remote workspaces in Fleet, Clone from Git can now clone to the remote workspace.\nYou can now use keyboard shortcuts to copy revision details in the History tool window.\n\n\n\n\n\nWe’ve made multiple improvements for configuring Python interpreters, including Pipenv and Poetry. Pipenv is a tool that provides everything you need to create a virtual environment for your Python project. Poetry is a tool for dependency management and packaging in Python. Pipenv and Poetry can now be installed via quick-fix. We’ve also updated notifications about Pipenv and Poetry being missing from PATH. Furthermore, Fleet now displays the actual Poetry error messages which helps you identify potential issues.\nBug fixes\nWe’ve also fixed several bugs:\nThe bottom split panel no longer closes when you open a new tool [FL-25489].\nAfter you rename a file, the file’s permissions no longer change [FL-21045].\nRemove unused imports now works as intended [FL-23572].\nSee the full release notes for more details about Fleet 1.38\nPlease report any problems you encounter to our issue tracker, and stay tuned for further exciting announcements.\nSupport for plugins and plugin APIs is a work in progress, but the list of bundled plugins is now available and visible to everyone. To view it, simply select Plugins from the Actions menu. \nJoin the JetBrains Tech Insights Lab to participate in surveys, interviews, and UX studies, and help us make JetBrains Fleet better!",
        "dc:creator": "Daniela Bentrup",
        "content": "Fleet 1.38 is now available! Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using the Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.38 New features Improvements Bug fixes We&#8217;ve also fixed several bugs: See the full release [&#8230;]",
        "contentSnippet": "Fleet 1.38 is now available! Explore our latest release, which introduces many new features designed to improve your development experience. You can update to this version using the Toolbox App. Let’s take a closer look at the highlights. Download Fleet 1.38 New features Improvements Bug fixes We’ve also fixed several bugs: See the full release […]",
        "guid": "https://blog.jetbrains.com/?post_type=fleet&p=495795",
        "categories": [
          "news",
          "releases"
        ],
        "isoDate": "2024-07-25T12:11:37.000Z"
      },
      {
        "creator": "Alina Terekhova",
        "title": "From Numbers to Clarity: Using Math to Simplify Data-Heavy Product Documentation",
        "link": "https://blog.jetbrains.com/writerside/2024/07/from-numbers-to-clarity-using-math-to-simplify-data-heavy-product-documentation/",
        "pubDate": "Thu, 25 Jul 2024 09:50:13 +0000",
        "content:encodedSnippet": "In today’s world, data platforms are crucial for any organization. These platforms make data storage assets available and provide the necessary tools to work with data effectively. In this blog post, we’ll explore the inner workings of JetBrains’ data kitchen and the role that documentation plays in it.\nWhat is the Product Analytics Platform at JetBrains\nThe JetBrains Product Analytics Platform is an internal statistics system that collects, stores, and displays anonymous feature usage data from users who have data sharing enabled. This data is gathered from various JetBrains products, plugins, and services, both internal and external. With the help of the platform, we are able to provide JetBrains teams with data storage and interactive self-service analytics through a web interface.\nSimilar well-known, publicly available products include Mixpanel, Amplitude, and Google Analytics, whose documentation we study closely both for reference purposes and to help us improve the platform.\n\n\n\n\nThe primary audience for JetBrains’ Analytics Platform is internal product and marketing managers, analysts, designers, researchers, developers, support, and QA specialists. \nThe Analytics Platform helps product managers better understand users’ environments and the value that new features bring to users. Marketing managers can spot technology trends among specific user segments. Designers can check which important UI elements aren’t discoverable or informative enough. Support and QA engineers can estimate the number of users affected by some critical problem. In a basic sense, the Analytics Platform is ultimately helpful for any professionals who build products at JetBrains. We serve a diverse audience who rely on data to support their decisions on product-related business questions.\nSome of our stakeholders have to understand whether they need a particular metric or request a new one, while others help implement and maintain data collection for those metrics. Both audiences often ask very specific questions and seek to understand every detail of data sources and metric calculations. As such, documentation efforts are at the heart of our work.\nWhy include formulas in documentation?\nIncluding math formulas in data product documentation is crucial for trust, clarity, and quick understanding. Just as a whiteboard in a math classroom simplifies learning, formulas in our documentation serve a similar purpose, converting metric calculations and data transformations into understandable terms.\nIncrease trust\nThe most important reason to include formulas in documentation is to increase trust. While interpreting the data, users need to understand how calculations are made before they can trust the results. Full transparency on how data is processed and metrics are calculated is the key to overcoming skepticism and establishing confidence, which is a major challenge in the data field.\nExplain complex concepts in simple terms\nThe internal workings of the Product Analytics Platform always involve large and complex SQL queries. Calculations may also occur in the data engineering code.\nFormulas and diagrams are perfect additions to the documentation in these cases, making complex concepts more accessible. They help users follow how data is prepared and calculated and eliminate the need for deep dives into discussions, underlying SQL queries, ETL operations, and data visualization code.\nProvide quick understanding\nFormulas, like other visual aids, attract user attention, provide instant understanding, and help users retain the information better. A well-placed formula or diagram allows readers to grasp the essence of a metric in seconds without needing to read through the entire page of text. This immediate clarity is important for users who need to make fast, informed, data-based decisions.\nAssess necessity: optional for common metrics, essential for lesser-known ones\nThere is one simple rule of thumb concerning formulas in documentation – they are optional for common metrics, yet essential for lesser-known ones.\nFor some popular well-known metrics – like usages, conversion, retention, DAU, and MAU – formulas are optional and can be included in the documentation only if some heuristic calculations are involved. However, including the full formula is critically important for less well-known metrics, such as APDEX.\nExamples from the JetBrains Product Analytics Platform documentation\nIn this section, we’ll provide selected examples of formulas from our internal User Guide about product metrics. Typically, it consists of two main parts: how to create a report and how to analyze the results with examples, tips, and points to consider. In some cases, it also includes a section on metric calculation logic.\nOften, our data analysts take an industry-standard metric, refine it with heuristics to match JetBrains’ business goals, and produce a more complicated calculation pipeline. \nThe challenge for technical writers is to conduct thorough research using the limited information available on the internet and continually refine details with the analysts and developers involved.\nThis task requires extensive questioning and review, often involving chasing multiple subject matter experts and gathering content from unstructured internal resources, such as tickets, users’ questions, Slack threads, and proof-of-concept research and prototypes. The final result is distilled into a page (or three) of documentation and a single formula.\nOne such example is the APDEX metric – Application Performance Index. APDEX is a standard for measuring the performance of software applications, focusing on user satisfaction. Our data analysts created a custom approach to this metric. In documenting this metric, it’s essential to provide as much information as possible without overcomplicating the explanations. That’s where we can add the metric formula.\n\n\n\n\nAnother example from our documentation involves explaining statistical concepts, such as a confidence interval. We add confidence intervals to all of the metrics we calculate to help users understand and interpret the data accurately. Since some product features are used more frequently than others, understanding the difference in usage numbers is critical.\nWhile information about confidence intervals is widely available on the internet, we needed to provide just the right amount of detail, specify the calculation model, and provide adapted examples that business people can comprehend. Additionally, we also walk users through these calculations to show how different sample sizes affect the confidence intervals.\n\n\n\n\n\n\n\n\nWriterside – a tool for data-heavy product documentation \nOur Product Analytics Platform team creates documentation with Writerside, a JetBrains in-house solution for authoring data-heavy docs. Block formulas have been supported in Writerside for a long time, using standard code block markup. Inline formulas are a recent addition following a large number of requests from users.\nYou can now add math formulas directly into your content without interrupting your flow. Use single dollar signs ($) around a formula for inline display or double dollar signs ($$) for a separate block display as required.\nHere is an illustration of how you can use it in line: $f(x) = x^2 – x^\\frac{1}{\\pi}$, and here it is as a block element:\n$$f(x) = x^2 – x^\\frac{1}{\\pi}$$\nWhich results in a view like this: \n\n\n\n\nFor those who stick to a semantic markup, we have introduced a dedicated <math> element for block formulas. This tag not only keeps the formula separate for emphasis and clarity but also enhances the semantic correctness of the documentation, making formulas easier to read than when a code block is used.\n<math>\nf(x) = x^2 – x^\\frac{1}{\\pi}\n</math>\nWriterside supports not only math expressions but also Mermaid, PlantUML, and D2 diagrams. You can check it out free of charge in the Early Access Program.\nConclusion\nIncluding mathematical formulas in your documentation can improve trust and clarity, and facilitate quick understanding. Formulas and diagrams can bridge the gap between technical details and user comprehension, especially for complex and lesser-known metrics or calculations.\nFormulas help break down difficult concepts, making them more accessible to a diverse audience – some may prefer reading detailed explanations, while others might find diagrams and formulas more helpful. Additionally, they help users who need to make quick decisions.\nHow do you incorporate mathematical formulas into your documentation? We’d love to see your tips and tricks in the comments below!",
        "dc:creator": "Alina Terekhova",
        "content": "In today’s world, data platforms are crucial for any organization. These platforms make data storage assets available and provide the necessary tools to work with data effectively. In this blog post, we’ll explore the inner workings of JetBrains&#8217; data kitchen and the role that documentation plays in it. What is the Product Analytics Platform at [&#8230;]",
        "contentSnippet": "In today’s world, data platforms are crucial for any organization. These platforms make data storage assets available and provide the necessary tools to work with data effectively. In this blog post, we’ll explore the inner workings of JetBrains’ data kitchen and the role that documentation plays in it. What is the Product Analytics Platform at […]",
        "guid": "https://blog.jetbrains.com/?post_type=writerside&p=496432",
        "categories": [
          "best-practices",
          "data-analysis",
          "documentation"
        ],
        "isoDate": "2024-07-25T09:50:13.000Z"
      },
      {
        "creator": "Anastasia Kazakova",
        "title": "ReSharper 20 years!",
        "link": "https://blog.jetbrains.com/dotnet/2024/07/23/resharper-20-years/",
        "pubDate": "Tue, 23 Jul 2024 14:50:38 +0000",
        "content:encodedSnippet": "JetBrains celebrated 24 years this February! Now, the company comprises 2,200 employees, 40 products, 3M total customers, and 11.4M users who regularly use and trust our tools. But how did it all start? IntelliJ IDEA was the first flagship product we launched, but right after that came ReSharper, which is celebrating 20 years on the market this week!\n\n\n\n\nBack in 2004\nYou still can find this message on our support forum from July 21, 2004:\n\nWe are proud to announce that ReSharper 1.0 have just been released today.\nWell, since then, we created Grazie to help check the quality of our texts before we publish them and avoid grammar mistakes 😉. Grazie has been integrated into ReSharper as the main spell-checking engine since v2023.3. But the most important thing is that 20 years ago, one of JetBrains’ most popular and exceptional products was released! And it’s still evolving to this day – check out the timeline:\nRESHARPER 20 TIMELINE\nThe first release announcement was posted by the then ReSharper team:\n\nValentin Kipyatkov\nDmitry Shaporenkov\nOleg Stepanov\nAndrey Simanovsky\nEugene Pasynkov\nNikolay Pultsin\nSergey Coox\nDmitry Lomov\n\n\n\n\nMany of these people are still with JetBrains after all these 20 years! Hard to believe, right? But it’s true! Some of the others are now driving other market leaders to their success. But back then, all together, these people took a brave and unique step in our company history – they created a tool for another vendor ecosystem, relying on it as a foundation and doing their best to improve it in the only way they knew and could utilize themselves.\nWe used to say that ReSharper makes Visual Studio a much better IDE. And, due to our branding research, many .NET developers (40%) strongly agree with that. With all of its 2,200 on-the-fly code inspections for C#, VB.NET, ASP.NET, and other technologies, as well as quick-fixes, 60+ handy refactorings and 450+ context actions, unique guidance throughout the standards, and best coding practices, ReSharper is there to set the .NET development standard for all developers and other tools.\nDid you know that…\nReSharper was not just a pioneer product, it also served as the main breadwinner for JetBrains for several years in a row and influenced .NET and other ecosystems a lot through these years.\nWe’ve included all the major milestones in the timeline, but we also want to share a few fun facts from our long history.\nDid you know that there was almost a ReSharper IDE back in 2005?\nAfter the release of Visual Studio 2005 and C# 2.0, plans to release a ReSharper IDE were scrapped due to the significant workload of building it from scratch in C#. Because ReSharper’s sales as a Visual Studio extension were growing and the Visual Studio Marketplace was expanding, we decided to focus on improving the existing extension. We never lost sight of our vision to create a .NET IDE, which was later achieved in the form of JetBrains Rider.\nSome code from the ReSharper IDE project remained in use for a long time, including the standalone app interface shell (tool windows and editor) that’s partially used in dotPeek, dotTrace, dotMemory, and dotCover, as well as a unit test runner, and an algorithm for diff comparisons in solution files.\n\n\n\n\nDid you know the ReSharper team once used an external utility app to tackle the limitations of the 32-bit Visual Studio process?\n\nReSharper faced memory limitations in Visual Studio, restricted to a few hundred MB, which was inadequate for complex projects. Additionally, .NET’s 16 MB block memory allocation caused severe fragmentation, leaving few continuous free blocks. To address this, Leonid Shalupov developed an app that launched before Visual Studio, intercepting VirtualAlloc/VirtualFree system calls to reduce fragmentation. The ReSharper Support team provided this app to customers until Visual Studio updates resolved the issue.\nDid you know that there is a Clippy extension for ReSharper?\nWith support for Office 2003 coming to an end, we decided to offer Clippy another job in ReSharper. What started as an April Fool’s Day joke actually became a working extension, which you can watch in action in a screencast by its author, Matt Ellis.\n\n\n\n\nAppreciations\nDuring the Oscar award ceremony speech, actors and actresses, filmmakers, producers, and others express gratitude to the audience, acknowledge the award recipient’s achievements, and inspire others. We want to follow this tradition here as well.\nFirst, we’d like to thank Microsoft. Without Visual Studio, there would be no ReSharper. And that means no Rider, dotTrace, dotMemory, dotCover, nor many other tools born from that experience at JetBrains. Visual Studio is the product that set the bar for us and made it possible for us to drive ReSharper’s innovations for years. And we are grateful to have such an inspiring companion! If we could invite one best friend to this birthday party, that would be you, our beloved Microsoft. 🎂\nSecond, we want to say a huge thank you to the whole JetBrains team. For the inspiration, dogfooding, critique, crazy ideas, and fantastic execution. These people not only bring you new versions of C# and smart AI actions, integrate essential tools, and do amazing demos teaching you the best .NET practices, they also create fun quizzes – like this one hidden in the C# example on the JetBrains Mono page, for example.\nLast but not least, we’d like to thank all our users for being with us, many for as long as 20 years. It’s an incredible feeling to keep seeing messages from developers who have been with us for years now. And we would love to tell you all in person today just how much we appreciate your support and trust. Please continue communicating your excitement, inspiration, and (of course) pain points to us, throwing out ideas, and triggering reminders for things we might have forgotten.\nA recent ReSharper brand survey we ran made some of you worry about our plans for ReSharper’s future. But we want to assure you that it’s not going anywhere. The way the .NET developers community sees ReSharper makes us think we are on the right track. The majority of the people we reached out to said:\n“A tool powered by the ReSharper code engine is the most productive tool for .NET developers.” JetBrains Rider, Fleet, Qodana, AI Assistant for Visual Studio confirms that. And we keep brainstorming new ideas. Have some of your own? Share them with us!\n“ReSharper serves as an inspiration for Visual Studio.” And we are happy to perform this role! We know that with Visual Studio, our ideas and vision will reach a wider audience. Guiding the whole community through the tool is an achievement that not that many vendors can boast.\n“ReSharper helps you learn C#.” With many teachers and educators working on the team, this is essential! Just check out our recent series on C# 12 (Primary Constructors, Interceptors, Alias Any Type, Collection Expressions).\nWe know there are things you expect from us, things we should change or improve, and things we want to achieve with ReSharper in the future. And we hope that, for many years to come, we will keep shaping .NET developers’ habits. Check this timeline to see how it all started and what it’s going to look like in the nearest future:\nRESHARPER 20 TIMELINE\nLet us know in the comments if you want us to add something or if you found any mistakes on this timeline. If we pick your story to be featured, you’ll get a ReSharper T-shirt or a voucher for the JetBrains Merch Store!\nTo wrap up, a few words from our team members:\nSergey Coox, ex-.NET Department Lead in JetBrains, Principal Engineer at JetBrains\nBy the time I joined JetBrains in 2004 to create a C# IDE, I’d been programming in C++ for 5–6 years. So, it was more logical for me to develop my new project in C++ and not in C#, which I didn’t know at that time. Also, C# was still quite young and less powerful than now. But developing in C# with ReSharper was such a pleasure that I started easily diving into C# and never regretted it. ReSharper 1.0 fully justified our company motto at that time, “Develop with pleasure!”, and stayed true to it throughout these past 20 years. Many ReSharper features became an industry standard and entered other languages and products.\nReSharper always cares about the details, and that’s what makes it unique among the others. Maybe “Details matter!” will become our new motto for the whole industry, thanks to ReSharper!\nAleksandr Shvedov, Team Lead in the IDE Core (Language support) team at JetBrains\nThe reason I started using ReSharper was the mind-blowing “smartness” of the IDE – ReSharper was catching the bugs in my code at the speed of thought, suggesting ways to make my code clearer and more concise in the process. It felt almost like the whole software developer job was about to be completely automated pretty soon.\nI was also fascinated by the people who managed to build this kind of experience. Luckily enough, I was noticed by the ReSharper team members and eventually joined the team, where I got to work alongside the smartest and most inspiring people I know. For me, the “smartness” of ReSharper’s features turned into an infinite sequence of challenging technical tasks in a quite complex domain. During my 13-year journey at JetBrains, we implemented countless IDE features, survived the pressure from our competitors, successfully adapted new .NET technologies, and influenced other JetBrains IDEs.\nDuring those years, the world has changed a lot. Many of the things that felt “smart” back in the day have now become the standard for IDE tools we use today. However, the window of opportunities to innovate in IDE tools is wider than ever. With the rapid evolution of programming languages, new hardware, new UI/UX ideas, the ML & AI revolution, and remote/collaborative/cloud development – I’m very excited to keep pushing our .NET IDEs forward in this new world!\nMaria Pleskunina, Support Engineer in .NET Support at JetBrains\nTwelve years ago, I discovered ReSharper while starting my C# development journey. Back then, I was amazed at how much better my code could look by using the quick fixes suggested by the tool. I felt proud that my name, as the author, would be next to such polished written code. A while later, I found myself on the ReSharper team.\nNow, I understand the impact ReSharper has had on the development world as a whole. It boosts developer productivity, enhances code quality, and allows developers to focus on solving complex problems without wasting energy on housekeeping. As one of our users said: “ReSharper has made us lazy, and we want more”. And that’s exactly how it is!\nI’m proud to be part of a team dedicated to improving ReSharper. Thanks to everyone who contributes to this incredible tool, especially our users. Working alongside such talented individuals worldwide is a privilege. I wish our team to continue to create magic and inspire developers around the world.\nMatt Ellis, Head of .NET Developer Advocacy Team at JetBrains\nI first encountered ReSharper while working as a developer, but I didn’t get what the fuss was about until I was pair programming with someone who really knew how to use it. My immediate reaction was an amazed “How did you do that?”, and like the rest of the team, I was soon obsessed with discovering new features, swapping keyboard shortcuts, and “coding to green” – aiming for that green check mark to show we’d evaluated all of ReSharper’s suggestions.\nVery quickly, I became interested in the technology that powered ReSharper and started maintaining the xUnit.net test runner plugin. It was easy to see how the products were so smart and innovative. After joining JetBrains as a developer advocate, I could see that the main reason for that is that the people are just as smart and innovative and just as obsessed with providing a great developer experience as I was with using it. If there’s one thing better than JetBrains products, it’s JetBrainers.\nDmitry Matveev, Technical Writer at JetBrains\nI join my colleagues in expressing appreciation for the incredible ReSharper team I’ve had the pleasure and honor of being part of. I want to take this opportunity to extend my thanks to our users for the invaluable feedback provided over the years. Your sophisticated insights have been instrumental in identifying and rectifying a lot of difficult-to-spot edge-case scenarios, which has immensely improved ReSharper’s overall performance and functionality.\nWe have many diligent users whose names have become familiar to everyone on the team. We often mention these users in our internal meetings, and everyone instantly knows who they are. They’re more than just users; they’re a vital part of our development process. Once again, a huge thanks to all of our users. Your active involvement and commitment truly make a significant difference.\nSlava Tutushkin, Software Developer at JetBrains\nThe main reason I was really unhappy having to switch to C# 1.0 as my main development language was the lack of something like IntelliJ IDEA for C#. A few moments later, and the world became a much better place to live: we got all that intelligence (and even more) with ReSharper 1.0, while being able to continue to use VS. I started converting everyone around me to JetBrains adepts. After some time it became evident to me that just using ReSharper was not enough, so I made the life-changing decision to join the ReSharper team.",
        "dc:creator": "Anastasia Kazakova",
        "content": "JetBrains celebrated 24 years this February! Now, the company comprises 2,200 employees, 40 products, 3M total customers, and 11.4M users who regularly use and trust our tools. But how did it all start? IntelliJ IDEA was the first flagship product we launched, but right after that came ReSharper, which is celebrating 20 years on the [&#8230;]",
        "contentSnippet": "JetBrains celebrated 24 years this February! Now, the company comprises 2,200 employees, 40 products, 3M total customers, and 11.4M users who regularly use and trust our tools. But how did it all start? IntelliJ IDEA was the first flagship product we launched, but right after that came ReSharper, which is celebrating 20 years on the […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=495973",
        "categories": [
          "net-tools",
          "news",
          "resharper"
        ],
        "isoDate": "2024-07-23T14:50:38.000Z"
      },
      {
        "creator": "Anna Ruban",
        "title": "Livestream – Jodie Burchell, Matt Ellis, Khalid Abuhakmeh, and Maarten Balliauw – AI in Game Development With JetBrains AI Assistant",
        "link": "https://blog.jetbrains.com/dotnet/2024/07/23/livestream-jodie-burchell-matt-ellis-khalid-abuhakmeh-and-maarten-balliauw-ai-in-game-development-with-jetbrains-ai-assistant/",
        "pubDate": "Tue, 23 Jul 2024 14:07:35 +0000",
        "content:encodedSnippet": "Join us Wednesday, August 7, 2024, at 2:00 pm UTC (check other timezones) for a free livestream entitled AI in Game Development With JetBrains AI Assistant, with JetBrains Developer Advocates Jodie Burchell, Matt Ellis, Khalid Abuhakmeh, and Maarten Balliauw.\nREGISTER FOR THE LIVESTREAM\n\n\n\n\nGame development has entered a new era with the rise of AI-powered tools. But where is AI truly helpful, and where should we tread carefully? Join JetBrains Developer Advocates as they explore the role of AI in game development and showcase the capabilities of JetBrains AI Assistant.\nIn this session, we will:\nShare insights from a survey of game developers on their views and experiences with AI tools, including where they see the most potential and the biggest challenges.\nDiscuss the strengths and limitations of large language models (LLMs) in the context of game development tasks. \nLearn where AI can help, and where traditional tools and methods are preferable.\nDemonstrate how to use AI Assistant in JetBrains Rider to boost your productivity when working with Unity, Unreal Engine, and Godot.\nThis livestream will be held on YouTube. It is for game developers of all levels who are curious about AI and its potential impact on the industry. Come learn how to create better games, faster – with or without AI.\nYou can register for the AI in Game Development With JetBrains AI Assistant livestream to receive a reminder closer to the date.\nAbout the presenters\nJodie Burchell\n\nDr. Jodie Burchell is the Developer Advocate for Data Science at JetBrains, having previously held the position of Lead Data Scientist at Verve Group Europe. She completed a PhD in clinical psychology and a postdoc in biostatistics, before leaving academia for a data science career. She has worked for eight years as a data scientist in both Australia and Germany, developing a range of products including recommendation systems, analysis platforms, search engine improvements, and audience profiling tools. She has held a broad range of responsibilities in her career, including everything from data analytics roles to maintaining machine learning solutions in production.\n\nMatt Ellis\n\nMatt Ellis is a Developer Advocate at JetBrains, working with lots of different IDEs and technologies such as the Unity and Unreal Engine game development tools in Rider, as well as Code With Me for collaborative editing and JetBrains Gateway for remote development. He has spent well over 20 years shipping software in various industries, and thoroughly enjoys working with IDEs and development tools as well as having fun with syntax trees and source code analysis. He also helps develop Rider’s Unity support and contributes to the popular IdeaVim plugin.\n\nKhalid Abuhakmeh\nKhalid Abuhakmeh is a JetBrains Developer Advocate focusing primarily on the .NET technology stack. He’s best known for his blog posts, open-source work, podcasts, and community engagement efforts, such as livestreams and event hosting.\nMaarten Balliauw\nMaarten Balliauw loves building web and cloud apps. His main interests are .NET web technologies, C#, Microsoft Azure, and application performance. He is a JetBrains Developer Advocate and the creator of SpeakerTravel. Maarten is a frequent speaker at various national and international events. In his free time, he brews his own beer. Maarten’s blog can be found at https://blog.maartenballiauw.be.",
        "dc:creator": "Anna Ruban",
        "content": "Join us Wednesday, August 7, 2024, at 2:00 pm UTC (check other timezones) for a free livestream entitled AI in Game Development With JetBrains AI Assistant, with JetBrains Developer Advocates Jodie Burchell, Matt Ellis, Khalid Abuhakmeh, and Maarten Balliauw. REGISTER FOR THE LIVESTREAM Game development has entered a new era with the rise of AI-powered [&#8230;]",
        "contentSnippet": "Join us Wednesday, August 7, 2024, at 2:00 pm UTC (check other timezones) for a free livestream entitled AI in Game Development With JetBrains AI Assistant, with JetBrains Developer Advocates Jodie Burchell, Matt Ellis, Khalid Abuhakmeh, and Maarten Balliauw. REGISTER FOR THE LIVESTREAM Game development has entered a new era with the rise of AI-powered […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=496349",
        "categories": [
          "net-tools",
          "ai-assistant",
          "livestreams",
          "rider",
          "gamedev",
          "webinar"
        ],
        "isoDate": "2024-07-23T14:07:35.000Z"
      },
      {
        "creator": "Tania Goral",
        "title": "The Best Laravel Tutorials and Resources for Developers",
        "link": "https://blog.jetbrains.com/phpstorm/2024/07/the-best-laravel-tutorials-and-resources-for-developers/",
        "pubDate": "Tue, 23 Jul 2024 11:52:52 +0000",
        "content:encodedSnippet": "Laravel is one of the most popular PHP frameworks, known for its elegant syntax and powerful features. According to the JetBrains Development Ecosystem Report 2023, over 60% of PHP developers use Laravel, and nowadays, many opt for this framework for their professional development.\nWhether you’re a beginner just starting with web development or an experienced pro looking to boost your skills, this blog post will guide you through the best educational resources available for mastering Laravel. From online courses and books to YouTube channels and community resources, you’ll find everything you need to become proficient in Laravel.\nOnline Courses\nOnline courses are a great way to learn Laravel at your own pace. They offer structured learning paths and hands-on projects to help you build real-world applications. Here are some of the best online courses available:\nLaracasts \nOften referred to as the “Netflix for developers”, Laracasts, managed by well-known Laravel community member Jeffrey Way, offers a vast library of high-quality video tutorials focused primarily on Laravel. It also includes a series on modern PHP development, testing, and other related technologies. With its active community and discussion forums, Laracasts is an essential resource for any Laravel developer.\nThe content ranges from beginner to advanced levels, covering fundamental concepts, real-world applications, and best practices. Here, you can find the most interesting ones depending on your experience:\n30 Days to Learn Laravel is an extensive series of video tutorials by Jeffrey Way that covers Laravel from the basics to advanced topics. It includes topics like routing, controllers, Eloquent ORM, testing, and deployment. The hands-on approach helps learners build applications while understanding the underlying concepts of Laravel.\nFor those who are already familiar with Laravel and ready to go deeper, discover the free PhpStorm for Laravel Developers series that is tailored to help Laravel developers maximize their efficiency using PhpStorm, a JetBrains IDE for PHP. This series covers a variety of topics, including PhpStorm basic setup and configuration, code navigation, refactoring, and debugging, specifically within a Laravel project. The series dives into advanced features like live templates, macros, and integration with Laravel tools such as Tinker and Artisan. Each episode is designed to help developers become more productive by leveraging PhpStorm’s powerful features tailored for Laravel development. This video course doesn’t require a Laracasts subscription.\n\n\n\n\nSubscription price: USD 15/month or USD 99/year, providing access to all content, including series on modern PHP development, testing, and more. Some courses are free.\nLaravel Daily\nLaravel Daily offers a variety of tutorials and tips focused on Laravel development and is managed by experienced web developer Povilas Korop. The content is updated regularly and covers both beginner and advanced topics in Laravel.\n\n\n\n\nIf you’ve just started with Laravel, the Laravel 11 For Beginners: Your First Project free course might be an ideal choice for you. It offers a practical introduction to Laravel 11 and, instead of delving deep into theory, focuses on creating a small project to manage a blog. By completing this project, learners will understand the essential features of Laravel, such as routing, Blade templates, database migrations, and Eloquent ORM.\nFor an intermediate level of experience, discover the Laravel Collections Chains: 15 Real Examples course, which focuses on mastering Laravel Collections through 15 practical, practical examples. Laravel Collections provide a fluent, convenient wrapper for working with arrays and data sets in Laravel. This course helps developers leverage the power of Collections to write more efficient and readable code, including various use cases such as data filtering, transformation, aggregation, and complex manipulations.\nSubscription price: USD 29/month or USD 129/year. Some courses are free.\nCodecourse\nCodecourse offers a variety of tutorials on web development at both the beginner and intermediate levels, with a strong focus on Laravel. Check out the Laravel Basics series, which takes you through the most-used parts of the framework to get you up and running in no time.\n\n\n\n\nUdemy\nUdemy is a large educational platform offering a variety of courses across different fields. One notable course for Laravel beginners is PHP with Laravel for Beginners – Become a Master in Laravel.\n\n\n\n\nThis tutorial is designed to take a learner from a complete beginner to a Laravel master. It covers the basics of PHP and Laravel, including routing, controllers, views, and database interactions with Eloquent ORM. The course includes hands-on projects, allowing you to build real-world applications and solidify your understanding. With lifetime access to the course materials, you can learn at your own pace.\nCourse price: USD 23 (prices may vary).\nCoursera\nCoursera is an online learning platform that partners with top universities and organizations worldwide to offer online courses, specializations, degrees, and professional certificates across a wide range of subjects.\n\n\n\n\nThe Mastering Laravel Framework and PHP course covers the essentials of PHP and the Laravel framework, which is ideal for beginners with some prior PHP knowledge. It starts with setting up a development environment, followed by fundamental PHP concepts, including arrays, functions, and form handling. The course then delves into the Laravel framework, covering key features such as routing, middleware, controllers, and views. Students will learn to build web applications from scratch, applying best practices in Laravel. The course includes video lectures, readings, and quizzes.\nCourse price: free to audit; сertificate available for a fee (typically around USD 49).\nBooks\nLaravel: Up & Running by Matt Stauffer\nApproved by the creator of Laravel, Taylor Otwell, Laravel: Up & Running is a comprehensive guide that takes you through the essentials of Laravel, from installation to advanced features. Matt Stauffer, a renowned Laravel developer, explains concepts clearly and provides practical examples. The book covers routing, middleware, controllers, Eloquent ORM, Blade templating, and more. It also dives into advanced topics like testing, queues, and real-time event broadcasting. \n“Not only is Matt one of the most knowledgeable members of the Laravel community, he is also a fantastic teacher. I’m proud to recommend this book as a thorough, extensive guide to the Laravel framework.”\n\n            \nTaylor Otwell,\n                                                                Creator of Laravel\n                                    \nThis book is a must-have for both new and experienced Laravel developers looking to solidify and deepen their knowledge.\nPrice: USD 39 (may vary).\nYouTube Channels\nYouTube is a fantastic resource for learning Laravel through video tutorials. Here are some of the best channels to help you get started:\nTraversy Media\nTraversy Media, created by Brad Traversy, is renowned for its high-quality web development tutorials. On this channel, you can find the Laravel Crash Course tutorial designed for beginners, which covers everything from setting up a Laravel project to deploying it.\nThe Net Ninja\nThe Net Ninja is another well-known source that provides detailed and well-structured tutorials on web development. The Laravel Tutorial for Beginners playlist covers the basics of Laravel, from installation to building a full-fledged web application. Each video is short and focused, making it easy to follow along and grasp the concepts.\nDocumentation and Community Resources\nOfficial Laravel documentation\nThe Laravel documentation is a comprehensive and up-to-date resource covering every aspect of the framework. It includes detailed explanations, code examples, and guides on various features such as routing, middleware, authentication, and more. It’s an essential resource for both new and experienced developers working with Laravel. Regular updates ensure that you have the latest information on new features and best practices.\nLaravel News\nLaravel News is a community-driven portal that provides the latest news, tutorials, and packages for Laravel. It features articles on new releases, best practices, and tips for improving your Laravel projects. The site also includes interviews with prominent Laravel developers and information about upcoming events and conferences. Laravel News is an excellent way to stay updated on the latest trends and developments in the Laravel ecosystem. It’s a valuable resource for continuous learning and keeping your skills sharp.\nLaravel Forum\nThe Laracasts forum is a vibrant community where you can ask questions, share knowledge, and discuss all things Laravel. The forums are frequented by experienced developers and Laravel experts who provide helpful advice and solutions. You can find discussions on a wide range of topics, from troubleshooting specific issues to best practices for Laravel development. Participating in the forums is a great way to connect with other developers and learn from their experiences. It’s an excellent resource for getting support and staying engaged with the Laravel community.\nLaravel Community\nLaravel.io is a Laravel community portal that provides various resources to help developers learn, share, and connect with others. It includes a forum, a compendium of articles written by community members covering a wide range of topics, a real-time chat that allows developers to communicate with each other for quick assistance, information, and more.\nClosing thoughts\nThis guide provides a comprehensive overview of the best resources available for learning Laravel. Whether you prefer structured online courses, in-depth books, engaging YouTube tutorials, or active community participation, there’s something here for every learner. Dive in, start exploring, and take your Laravel skills to the next level!",
        "dc:creator": "Tania Goral",
        "content": "Laravel is one of the most popular PHP frameworks, known for its elegant syntax and powerful features. According to the JetBrains Development Ecosystem Report 2023, over 60% of PHP developers use Laravel, and nowadays, many opt for this framework for their professional development. Whether you&#8217;re a beginner just starting with web development or an experienced [&#8230;]",
        "contentSnippet": "Laravel is one of the most popular PHP frameworks, known for its elegant syntax and powerful features. According to the JetBrains Development Ecosystem Report 2023, over 60% of PHP developers use Laravel, and nowadays, many opt for this framework for their professional development. Whether you’re a beginner just starting with web development or an experienced […]",
        "guid": "https://blog.jetbrains.com/?post_type=phpstorm&p=495349",
        "categories": [
          "tutorials",
          "laravel"
        ],
        "isoDate": "2024-07-23T11:52:52.000Z"
      },
      {
        "creator": "Yuri Trukhin",
        "title": "Using Dev Containers in JetBrains IDEs – Part 1",
        "link": "https://blog.jetbrains.com/idea/2024/07/using-dev-containers-in-jetbrains-ides-part-1/",
        "pubDate": "Mon, 22 Jul 2024 10:42:30 +0000",
        "content:encodedSnippet": "As cloud technologies and containerization evolve, we enter a new era of software development where flexibility, scalability, and efficiency become key requirements for any project. Dev Containers, or development containers, represent an approach to creating developer workspaces that allows you to focus on the code while worrying less about dependencies and surrounding infrastructure. This tool opens new horizons for simplifying development and ensuring projects’ consistency throughout their lifecycle.\nWhat are Dev Containers?\nDev Containers are Docker containers containing everything necessary for software development, including IDEs, specific software, tools, libraries, and even configured services, in an isolated environment that can be easily transferred and launched on any computer or cloud infrastructure. This solution allows developers and teams to abstract from the specifics of their operating system and maximally approximate the development conditions to the productive environment.\nIn simpler terms, they`re Docker containers (run locally or remotely) that include your project, IDE, and everything needed for development. The container’s settings are defined in a devcontainer.json file. If dependent containers are needed, for example, with databases or other services, Compose is supported. The Docker container can be launched from existing Docker images or built using a Dockerfile.\nAdvantages of using Dev Containers\nEnvironment consistency. Whether you are at the start of development or in the process of migrating an existing project, Dev Containers ensure that every team member works in an identical environment. This eliminates the “it works on my machine” problem when an application behaves differently on different machines.\nQuick workspace setup. Project launch and setup are reduced to a few commands, allowing new employees to start almost instantly and minimizing the time spent on costly environment setup.\nSecurity and isolation. Each Dev Container is fully isolated from your operating system, facilitating experimentation with new tools and technologies without affecting the settings or compatibility of your current tooling.\nEase of maintenance and updates. Updating tools and dependencies in a containerized environment does not require the lengthy and complex procedures often associated with traditional working environments.\nRemote development capability. The container can be run in a remote environment, and its resources and capabilities become available during development.\nGetting started with Dev Containers\nTo start with Dev Containers on your computer, you need:\nGit 2.25+\nDocker (if you plan to work only with Docker on a remote server, Docker CLI is sufficient)\nJetBrains IDE or JetBrains Gateway\nIf you want to run a Dev Container on a remote host, you’ll also need:\nLinux (including Linux on WSL2)\nOpenSSH Server with the option to connect from the client machine\nDocker with user-level rights\nDoes the project need to be prepared to run in a Dev Container?\nIf you are just starting to work with Dev Containers, there’s no need to initially configure anything in your project or worry about projects that do not yet support Dev Containers. Your JetBrains IDE will recognize that the project is not set up for Dev Containers and will offer a convenient wizard to help you select the necessary environment for launching the project. The Git-cloned project or the mounted project will be mapped to the user’s directory within the Dev Container.\nSubsequently, you can fine-tune all necessary Dev Container environment parameters in the devcontainer.json configuration file.\nIf devcontainer.json is located in one of the standard places, it will be automatically found by the IDE when creating a Dev Container:\n.devcontainer/devcontainer.json\n.devcontainer.json\n.devcontainer/<folder>/devcontainer.json (where <folder> is a sub-folder, one level deep)\nIn all these cases (unless otherwise defined in devcontainer.json) – the root of the Git-cloned project or the root of the mounted project will be mounted to the root of the project in the Dev Container.\nWe also support locating devcontainer.json in any project folder, for example:\ninfra/devcontainer.json\nservice1/devcontainer.json\nservice2/devcontainer.json\nThis is useful when working with monorepos containing microservices in different programming languages (requiring different environment settings) or those involving employees with different roles – developers, SRE/DevOps, testers, documentators, etc. In this case, when creating a Dev Container, you will need to explicitly specify where devcontainer.json is relative to the project root (through Specify Path). At the same time, the folder containing devcontainer.json (unless otherwise defined) will be mounted to the root of the project in the Dev Container.\nCreating your first Dev Container by cloning your project\nOpen JetBrains Gateway or the Welcome Screen in any JetBrains IDE.\nGo to the Dev Containers section and click on New Dev Container.\n\n\n\n\nYou can create a Dev Container from a VCS or local project.\nIn this example, we will create a Dev Container from a VCS project.\n\n\n\n\nIn the Docker section, you can choose where to create the Dev Container. The local Docker is offered by default, but you can click on “…” and add additional Docker servers from the cloud or WSL, for example, and set up the connection via SSH.\nIn the next section, we will discuss cases where this is useful.\nIn the Git Repository section, insert a git@ or https:// link to clone the repository into the Dev Container. Note that when cloning via SSH, you must have access to the cloned repository. Remember to add your key if you have not already done so.\nIn our first example, we will use the repository git@github.com:devcontainers/spec.git, where there are no specific configurations for Dev Containers – it could be any of your repositories.\n\n\n\n\nAfter adding, you can select the necessary Git branch (we will use main).\n\n\n\n\nIf there are no Dev Container configurations in standard places in the project (and no non-standard placement of devcontainer.json is explicitly stated via Specify Path), then in the next step, you will be prompted to choose a template for building the Dev Container.\nTo continue, press Build Container And Continue.\n\n\n\n\nThe Dev Container starts being built in the previously selected Docker location. A necessary temporary directory structure is created. Then, Git sparse-checkout is performed to try to find devcontainer.json metadata in standard locations (or explicitly specified non-standard ones).\nIf metadata is not found, as in our example, a Create Dev Container Configuration wizard opens, where you can choose the necessary configuration and options:\n\n\n\n\nAfter selecting the required configuration, the Dev Container starts being built. This is very similar to the way a typical Docker container is built, except here, the configuration described in the template or devcontainer.json metadata is applied, and the source texts are cloned into the container.\nIf the building process is successful, you will be able to choose the necessary IDE backend, which will be installed in the container and launched (even if not installed locally). You don’t necessarily have to make this selection every time – you can specify your IDE in devcontainer.json itself, and then that specific backend IDE will be launched automatically.\n\n\n\n\nAfter selecting the necessary IDE, click Continue. The necessary IDE backend will be downloaded (if it hadn’t been downloaded and cached previously), the container will be launched, and the IDE frontend (Gateway or Welcome Screen) will automatically connect to the IDE backend in the container.\n\n\n\n\nNow, you can start coding!\nFrom an architectural point of view, this works as shown here (if you are creating a Dev Container in Docker on a local machine):\n\n\n\n\nWhen you create a Dev Container in Docker on a remote machine (or in WSL with Docker and openssh-server installed), it works like this:\n\n\n\n\nThe IDE backend is launched in the container, and the source code from the specified repository is cloned. The IDE client connects to the backend, forming a Remote Development variant for working in the container (IDE Split Mode). When the frontend and backend communicate, a very efficient RD protocol is used – Rider has used the same protocol for many years – providing a local experience during remote development.\nIf you need to reconnect to the Dev Container, you can do so with one click from the Gateway or JetBrains IDE Welcome Screen. From here, if necessary, you can rebuild or remove Dev Containers.\n\n\n\n\nWriting a Dev Container in a local project and launching with source texts mounted\nOpen any of your local projects in a JetBrains IDE. In the context menu at the project root, click New| .devcontainer.\n\n\n\n\nYou will be offered a choice of templates from which you can create a devcontainer.json file. Let’s choose, for example, the Docker in Docker template, which allows working with deeper containers inside the container.\n\n\n\n\nIf you do not want to use templates, you can simply create a devcontainer.json file with the necessary content (pay attention to naming rules for auto-discovery in the repository).\nThe minimum necessary options for building are the container’s name and the name of the image from which it needs to be built.\n{\n\n name: \"Examples of Dev Containers\",\n\n image: \"ubuntu:latest\"\n\n}\nTo build the Dev Container, click on the gutter (the blue Dev Container icon next to the code), select Create Dev Container and Mount Source…, and then choose the IDE that you need in the container. \nThe Dev Container will be built and launched, and you will connect to the container.\n\n\n\n\nThe Mount Sources mode is convenient for debugging Dev Containers but is not recommended for permanent use due to the slower disk performance compared to Clone Sources… mode, which is recommended by default.\nThe first time any Dev Container is launched, the IDE backend is downloaded. When the same Dev Container is used again, downloading is not required. You can view the list of downloaded backends in the Manage Dev Container Backends section.\n\n\n\n\nConclusion\nMore information on the Dev Containers specification can be found on the containers.dev website and guides for using it can be found in the official documentation. In the following articles, we will take a more detailed look at devcontainer.json directly, with Dockerfile, Compose, and features, as well as writing the features themselves. We will also look at how to define IDE settings in the customizations section.\nIf you have questions about using Dev Containers, leave a comment. In subsequent articles, we’ll try to answer the most popular questions. If you have encountered a problem, write to us, and we’ll gladly help.",
        "dc:creator": "Yuri Trukhin",
        "content": "As cloud technologies and containerization evolve, we enter a new era of software development where flexibility, scalability, and efficiency become key requirements for any project. Dev Containers, or development containers, represent an approach to creating developer workspaces that allows you to focus on the code while worrying less about dependencies and surrounding infrastructure. This tool [&#8230;]",
        "contentSnippet": "As cloud technologies and containerization evolve, we enter a new era of software development where flexibility, scalability, and efficiency become key requirements for any project. Dev Containers, or development containers, represent an approach to creating developer workspaces that allows you to focus on the code while worrying less about dependencies and surrounding infrastructure. This tool […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=495768",
        "categories": [
          "plugin-development",
          "idea",
          "tutorials",
          "intellijidea-2",
          "dev-containers",
          "docker",
          "docker-compose"
        ],
        "isoDate": "2024-07-22T10:42:30.000Z"
      }
    ]
  },
  {
    "name": "Airbnb Engineering & Data Science",
    "category": "기업",
    "posts": [
      {
        "creator": "Andre Wiggins",
        "title": "How Airbnb Smoothly Upgrades React",
        "link": "https://medium.com/airbnb-engineering/how-airbnb-smoothly-upgrades-react-b1d772a565fd?source=rss----53c7c27702d5---4",
        "pubDate": "Tue, 23 Jul 2024 17:02:35 GMT",
        "content:encodedSnippet": "Incrementally modernizing our frontend infrastructure to roll out the latest React features without downgrades\n\nIntroduction\nAirbnb’s frontend recently reached a major milestone: all of our web surfaces have been upgraded from React 16 to React 18, the current major version of React¹. This was a big project for a product with many surfaces, including Guest and Host pages as well as many internal tools. To safely perform this upgrade, we created the React Upgrade System: reusable infrastructure that allows us to roll out new versions of React progressively across our monorepo and measure the results of the upgrade. In this blog post, we’ll discuss our upgrade philosophy, the system we created, and what we learned from performing this upgrade.\nWhile this post primarily focuses on React, the system and lessons are applicable to many web frameworks and libraries that require regular upgrades.\nChallenges of upgrading\nUpgrading dependencies is a common task in any long-lived project. Upgrades fix bugs, improve performance, and unlock new APIs. Some upgrades are simple, but upgrades become more difficult when large amounts of product code rely on changed APIs or subtle assumptions about behavior. In Airbnb’s web monorepo, we only allow one version of each top-level dependency (with some rare exceptions), with one package.json at the root of the repo. This ensures that code within the monorepo is internally compatible and consistent, and that we avoid shipping duplicate packages to users. Before the upgrade system, having a single version of each dependency meant performing an atomic update, which requires a huge amount of up-front migration work, a long-running upgrade branch, and a single milestone when it is finally deployed to users. Such an approach is error-prone and risky, thus requiring a “heroic” engineering effort to ship clean upgrades.\nIdeally, we’d be shipping small, incremental upgrades that have no issues. Without some way to test and progressively roll out this system to a large monorepo, we often needed to try upgrading multiple times, downgrading whenever any problems were found. Performance regressions were particularly difficult to catch using this upgrade strategy. Because there was no way to collect performance data prior to release, we went straight from 0% to 100% rollout on deployment.\nIdeal vs Reality graphs of our major and minor versions of React over time.\nOur goal with the React Upgrade System was to make more seamless upgrading less heroic and more routine. Specifically, our goals were to be able to:\n\nUpgrade incrementally so that we get feedback and learn lessons as soon as we can.\nUpgrade often so that the delta between our version and the upgraded version is as small as possible.\nTest upgrades so that we can precisely measure the performance impact of upgrades and make informed decisions about upgrade paths using this data.\n\nDesigning the React Upgrade System\nWorking backwards from these goals, we started to get an idea of what our ideal architecture would look like. We wanted to avoid a long-running upgrade branch so that we could upgrade incrementally, and we wanted to be able to A/B test the upgrade so that we would get feedback from production to inform shipping decisions.\nSimplified diagram of our ideal upgrade system\nThere were a couple of problems to solve with the most naive implementation of this system: we needed to pick a single version of React for rendering, and it was challenging to dynamically switch between the two versions at runtime. Here’s what the code would look like to render a basic application using this naive approach:\nimport React18 from 'react'; \nimport React16 from 'react'; // duplicated import?\nif (shouldEnableReact18()) {\n  const root = React18.createRoot(container);\n  root.render(<App />);\n} else {\n  React16.render(<App />, container);\n}\nThere are two issues with this:\n\nWe don’t want to bundle both versions of React in the application, or we’ll double our framework bundle size. Further, we might need to change the JSX transformation being used at build time, making our <App /> incompatible with one version or the other.\nIt’s not clear where the imports should come from. The ‘react’ dependency will point to either React 16 or React 18, but not to both.\n\nTo solve these problems, we used module aliasing to split the versions, and environment targeting to build and run the two split versions of React.\nModule aliasing\nWe addressed the problem of where these imports are coming from using module aliasing. Using yarn, we added another react dependency to our package.json, e.g.,\n\"react-18\": \"npm:react@18\"\nwhich allowed us to import React from the ‘react-18’ package. This got us part of the way there. Many tools (such as custom resolvers and build systems) need to know which of the two versions to use. To centralize the logic, we wired up all of our custom tooling into a central, “global alias” configuration. This global alias configuration allowed us to alias in one place for all of our different tools. Babel, Jest™, Webpack™, and other custom resolution logic all need to be aware of the conditions under which we want to redirect imports from ‘react’ to ‘react-18’. Aliasing the modules with our “global alias” configuration meant that user code did not need to change at all, and we were able to handle this redirect behind the scenes.\nTypeScript discrepancies\nGiven that any component could be run in React 16 or 18, we wanted to use the types for each component that work across both versions during our upgrade period. Thankfully, the React team has maintained backwards compatibility, even between major versions.\nWe installed the types for React 18, and for newly added APIs in React 18, we created a shim layer for these APIs that worked in both React 16 and 18 (for example, useTransition acted as a no-op in 16). For APIs with no possible shim (for example, useId), we indicated through type augmentation that this hook may be undefined at runtime.\nFor TypeScript-only breaking changes in React 18, we waited until the React 18 upgrade was complete before incrementally fixing these. We augmented the types to patch differences to allow progressively fixing these new Typescript errors in our monorepo.\nEnvironment targeting\nTo solve the problem of duplicated imports, we needed to produce two different build artifacts: one containing React 16 and one containing React 18. Let’s call these the “control” and “treatment” artifacts, respectively. Since Airbnb uses Server-Side Rendering (SSR), we also needed to run these two different artifacts in different node processes on the server. Using Kubernetes®, we set up two different Kubernetes environments that ran these control and treatment artifacts. Let’s call this setup environment targeting.\nModule aliasing and environment targeting in use together to deploy different versions of the framework together in production\nWe also wrote an environment variable (REACT_UPGRADE) to our assets at build time and set this variable at runtime in our node SSR service. This lets us perform conditional logic that might be necessarily on only one or the other side of our upgrade system.\nThis setup also worked for us in local development. Our “local” development environments were also deployed, so we were able to configure the React version for local development in the same way as production using this setup. As each SSR service was upgraded to React 18, we also switched the development environment for that service to React 18 to keep production and local development versions synchronized.\nTesting the upgrade\nAirbnb has a comprehensive test suite, which was helpful for building confidence in the safety of this upgrade before exposing the upgrade to users. Our test suite includes visual regression testing, integration testing, and unit testing. Before launching to users, we fixed all new failures in each of these suites.\nUnit tests were the hardest to abstract from framework internals. Because we use a combination of Enzyme and React Testing Library, we needed to fix assumptions about APIs and framework internals in unit tests, shims, and adapters. To achieve this, we ran all of our unit tests under both React 16 and 18, allowing existing failures in the React 18 test suite as we progressively fixed them. We used this “permitted failures” list to ratchet down the number of test failures over time, which prevented backsliding, as no new failures were allowed on the list. This approach allowed us to fix problems incrementally with components and our test environments.\nWe tracked the work of resolving hundreds of test failures with dashboards, merged fixes incrementally using the upgrade system, and split the work amongst a handful of developers. This made the migration work largely transparent to the broader frontend team and helped us gain confidence in the upgrade before rollout.\nProgressive rollout\nOnce we had module aliasing and environment targeting, we had the capability to author and deliver code for two different versions of React, all from the same codebase. To ensure safety and testability, we also needed a way of rolling out this new environment progressively. To reduce the amount of change happening at once, we wanted to control the roll out across traffic and product surfaces. Our experimentation infrastructure allowed us to direct traffic to each of our two production environments (control and treatment) at will. This setup also allowed us to test the upgrade internally first, and to completely turn off the upgrade if issues were found.\nControlling the rollout to different surfaces is more difficult. Within a Single Page App, managing multiple React versions would mean unmounting and mounting React roots. This would lead to poor performance and degrade the user experience.\nFor this reason, we managed the surface rollout upgrade at the app level. Airbnb’s monorepo houses many Single Page Apps, so it was useful to have the react upgrade system in place to be able to turn the upgrade on and off for each of these apps. Using our React Upgrade System, we were able to roll this out to a single app internally first, giving developers a way to opt-in and opt-out of the upgrade for testing, in both development and on our staging sites. This approach let us avoid having a long running feature branch, helping us achieve our goal of incremental upgrades.\nFeature adoption and future work\nUsing the system, we completely rolled out React 18 to all web surfaces at Airbnb, with no rollbacks required. After the upgrade, we were able to start testing new APIs such as new root APIs and concurrent rendering features. We intentionally held off for a few weeks on adopting these features until the upgrade had settled. This way we could be confident that we wouldn’t need to downgrade and have to revert code changes.\nIt’s been exciting to see performance improvements from adopting these new features, and we are continuing to experiment with expanding them to key UI surfaces that would benefit.\nTo ensure that our goal of upgrading is often met, we will use the React Upgrade System to test the canary channel of React. Instead of pointing to React 18, we can just point at the canary tag and get a preview of what migration work needs to be happening now for React 19. To make upgrading not require a heroic effort, staying current should be a continual effort spread out over time, rather than a large, one-off change.\nConclusion\nOur goals for the React Upgrade System were to enable us to upgrade incrementally, test upgrades, and upgrade often. Combining environment targeting and our aliasing system has allowed us to upgrade incrementally and test the upgrades. We’re beginning to run our frontend against React 19 beta, getting a head start on React 19.\nWe’d like to acknowledge the React team for putting effort into backwards compatibility between React versions, even major versions. Without that effort, this upgrade approach would not be possible.\nUsing the React Upgrade System, we gained confidence in our rollout of React 18, and will use this approach for future upgrades. We believe investing in an upgrading system is worthwhile, as upgrades will continue to be needed over time. The React Upgrade System has allowed us to test and roll out upgrades incrementally, ensuring that we’re delivering the best user experience and performance possible for our users.\nIf this kind of work sounds appealing to you, check out our open roles — we’re hiring!\nAcknowledgments\nMany thanks to Joshua Nelson for leading the effort to build the React Upgrade System as well as for drafting this blog post.\nAdditionally, thanks to Kim Nguyen, Callie Riggins Zetino, James Robinson, Dan Beam, Kaeson Ho, Rae Liu, Michael James, Noah Sugarman, Laurie Jin, Brie Bunge, Matt Mulder, Victor Lin for their assistance on this system and the pieces comprising it.\n[1]: React 17 was released in 2020 as a no-feature “stepping stone” release with minimal breaking changes. By the time we were working on this upgrade, React 18 had been released, so we opted to upgrade directly to 18. As of writing, React 19 is in beta, and we are reusing our React Upgrade System for React 19.\nAll product names, logos, and brands are property of their respective owners. All company, product and service names used in this website are for identification purposes only. Use of these names, logos, and brands does not imply endorsement.\n\nHow Airbnb Smoothly Upgrades React was originally published in The Airbnb Tech Blog on Medium, where people are continuing the conversation by highlighting and responding to this story.",
        "dc:creator": "Andre Wiggins",
        "guid": "https://medium.com/p/b1d772a565fd",
        "categories": [
          "front-end-development",
          "engineering",
          "web-development",
          "infrastructure",
          "react"
        ],
        "isoDate": "2024-07-23T17:02:35.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "PayPal Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "article New updates to Planner comment notifications and settings in Planner Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Laurent Bugnion",
        "title": "Visual Studio tip: Using Ctrl-L to delete a line with and without Clipboard backup",
        "link": "https://devblogs.microsoft.com/visualstudio/visual-studio-tip-deleting-a-line/",
        "pubDate": "Wed, 24 Jul 2024 07:00:17 +0000",
        "content:encodedSnippet": "Here is one Visual Studio tip from my colleague Gwyn Peña-Siguenza which I didn’t know about! Yes, even after 26 years using this fantastic tool, I am still discovering new features. So thanks to Gwyn for this!! This is all about deleting lines, and using the Windows Clipboard for support.\nYou can see the short video on our YouTube channel, and there is also a longer video with 20 must-know shortcuts here. Don’t forget to subscribe if you want to learn more tips!\n\nUsing the Clipboard History in Windows\nOne of my favorite tools on Windows is the Clipboard History. This feature was introduced in Windows 10 and is seriously adding productivity to my day-to-day. If you haven’t been using it, you need to enable it in the Windows settings. Simply follow the steps:\nGo to the Windows Settings\nSearch for Clipboard settings\nEnable “Clipboard History”\nWindows Clipboard settings\nTo test that this works, try the following:\nCopy one piece of text using Ctrl-C\nCopy another piece of text using Ctrl-C again.\nPress the Windows key and the V key together (Win-V)\nThis brings up a new window where you should be able to see the two entries you just copied at the top.\nThis enables you to copy multiple pieces of content in a document without having to always Ctrl-Tab back and forth between the original document and the target document. And the cool thing is that it even supports images!\nWindows Clipboard history with two items of text and one image\nDeleting a line with clipboard support\nSo why am I bringing this up? Well another thing that we do quite often in code is deleting lines. There’s even a joke that the best developers are not the one writing a lot of lines of code, but those who delete a lot of lines of code \nIn order to delete a whole line, most people would follow these steps:\nPlace the cursor on a line of code.\nMove the cursor to the top of the line with the Home key.\nIf the line was indented, press Home once again to ensure that the cursor is really on column 0.\nPress the Shift key.\nWith the Shift key pressed, move the cursor at the end of the line with the End key.\nWith the whole line selected, press the Delete button.\nProbably you will also have to press Delete once more to delete then empty line.\nThis is a lot of steps for a simple operation that we do a LOT in a developer’s day. Thankfully you can simplify it.\nPlace the cursor on a line of code.\nPress Ctrl-L.\nThat’s it. The line is deleted and there is no empty line remaining where it was. but the best part is, this line was saved in the Clipboard! To test this, simply press Win-V and you should see the line you just deleted on top of the history. Of course this also works for multiple lines.\nDeleting a line without clipboard support\nNow, sometimes you don’t want the deleted line(s) to be saved to the Clipboard history. In this case, follow these steps:\nPlace the cursor on a line of code.\nPress Ctrl-Shift-L.\nThis way you can keep your Clipboard history tidy.\nMore tips about Visual Studio\nHopefully these tips help you to be more productive! And if you want to learn more about key shortcuts in Visual Studio, you should watch Gwyn’s 5:30 minutes video on the Visual Studio YouTube channel.\nThe post Visual Studio tip: Using Ctrl-L to delete a line with and without Clipboard backup appeared first on Visual Studio Blog.",
        "dc:creator": "Laurent Bugnion",
        "content": "<p>Here is one Visual Studio tip from my colleague Gwyn Peña-Siguenza which I didn&#8217;t know about! Yes, even after 26 years using this fantastic tool, I am still discovering new features. So thanks to Gwyn for this!! This is all about deleting lines,</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/visual-studio-tip-deleting-a-line/\">Visual Studio tip: Using Ctrl-L to delete a line with and without Clipboard backup</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Here is one Visual Studio tip from my colleague Gwyn Peña-Siguenza which I didn’t know about! Yes, even after 26 years using this fantastic tool, I am still discovering new features. So thanks to Gwyn for this!! This is all about deleting lines,\nThe post Visual Studio tip: Using Ctrl-L to delete a line with and without Clipboard backup appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=249944",
        "categories": [
          "Visual Studio",
          "clipboard support",
          "Keyboard Shortcuts"
        ],
        "isoDate": "2024-07-24T07:00:17.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "\n                            Lihao He,Ganesh Rapolu,Yu-Wun Wang\n            \t\t\t",
        "title": "Meet Chrono, our scalable, consistent, metadata caching solution",
        "link": "https://dropbox.tech/infrastructure/meet-chrono-our-scalable-consistent-metadata-caching-solution",
        "pubDate": "Thu, 25 Jul 2024 05:00:00 -0700",
        "content:encodedSnippet": "Efficiently storing and retrieving metadata has long been a core focus for metadata teams at Dropbox, and in recent years we've made significant improvements to our foundational layer. By building our own incrementally scalable key-value storage, we’ve been able to avoid necessary doubling of our hardware fleet. As we scale, our evolution continues—but there are still challenges we cannot ignore.\nAt our current rate of growth, we knew there would come a time when the volume of read queries per second (QPS) could not be sustainably served by our existing underlying storage machines. Caching was the obvious solution—but not necessarily an easy one. \nInternal clients of Dropbox metadata have long relied on the assumption that data retrieved would provide a read-after-write guarantee (i.e., if I successfully write to a key, and then immediately subsequently read that key, absent other writes, I should see what I just wrote and not some stale value). If we were to weaken this guarantee, it would be impractical for the metadata team to audit and change every client team’s code. In addition, doing so could require significant client side code complication and/or re-design, reducing development velocity for product teams. \nIf we wanted to solve our high-volume read QPS problem while upholding our clients’ expectation of read consistency, traditional caching solutions would not work. We needed to find a scalable, consistent caching solution to solve both problems at once.\nOur answer is Chrono, a scalable, consistent caching system built on top of our key-value storage system, Panda. It can sustainably serve high-volume read QPS, and also allows us to make use of Panda followers to serve linearizable reads (ie. reads that are guaranteed to see the effect of all linearized prior writes). Relieving existing Panda load is important on its own, but this capability is also key to enabling new high-volume metadata workflows involving search and AI.\n -->\n\n        \n         \n        \n    \n\n            \nIllustration by Chia-Ni Wu; licensed under CC BY 4.0\n\n\n\n    \n Why is consistent caching so hard?\nNaive use of transparent caching at the database layer does not provide a read-after-write guarantee. For example, writing to the underlying storage system and then writing to the cache can leave stale data in the cache if the server orchestrating the writes crashes in between the two steps.\nEven simple pre-invalidation of the cache has issues. Imagine the following sequence where key K is initially mapped to value v1 in storage and v1 in the cache:\nWriter tries to write K=v2. It initially invalidates the cache for key K\nReader 1 looks in the cache, gets a miss, and reads from storage, getting value v1 for K\nWriter then issues and completes the write to storage\nReader 2 looks in the cache, gets a miss, and reads from storage, getting value v2 for K. Reader 2 then populates the cache with K=v2\nReader 1 then populates the cache with K=v1. The cache is now stale with respect to the underlying storage\n Solving consistent caching at scale\nChrono is built on top of Panda, our multi-version concurrency control (MVCC) key-value storage system. Panda provides a commit timestamp for every successful write, and every record (key/value pair) in Panda is associated with the commit timestamp of the write that created the record. The commit timestamp for a given key increases strictly monotonically with successive writes. Users can also issue reads using a specific snapshot timestamp in the commit timestamp timeline. \nThere are a few Panda APIs that make Chrono possible.\nWrite API\nWrite(keys, values, maxPermittedCommitTimestamp) -> commitTimestamp\nIn the Write API, the client tells Panda what keys and corresponding values it wants to write. In addition, if the commit timestamp chosen by Panda for the write transaction is higher than the optionally provided maxPermittedCommitTimestamp, Panda fails the write. \nSnapshot read API\nGet(key(s), readTimestamp) -> record(s)\nThe client specifies the read timestamp, and can read out the record value from that point in time. If the readTimestamp is sufficiently old, Panda will attempt to use followers to serve the Get request.\nGetLatest API\nGetLatest(key(s)) -> (record(s), readTimestamp)\nGetLatest takes in key(s) the client wants to read, then returns the latest records for those keys. The records contain the value of the key and the commit timestamp of the key. GetLatest reads the keys at a transactionally consistent point in time, and that read timestamp is returned to the caller. The readTimestamp is always higher than or equal to the commit timestamps of the returned records. Panda also guarantees that any write to any of the provided keys linearized after this GetLatest call will have a commit timestamp strictly greater than the returned readTimestamp.\nPanda’s GetLatest implementation strives to return the highest readTimestamp that is still guaranteed to be correct. Generally, the value of readTimestamp returned is fairly close to the current real time. This means that when we read the same key using GetLatest a few minutes apart—without any write to the key in between—we will receive same record and commit timestamp, but with a fresher readTimestamp in the more recent read.\nIf we reuse that readTimestamp by issuing a snapshot read, we will observe exactly the same records for those keys as what GetLatest returned. \n What Chrono does\nIn one sentence: Chrono is a service that tells you latest write attempt timestamp of every key in the storage system.\nChrono provides the following APIs:\nAttempt(key, attempt_ts) — Before writing a key to Panda, the client needs to first notify Chrono of the write attempt. The attempt_ts (which is used as the maxPermittedCommitTimestamp when calling Write) should be far enough in the future that the write to Panda does not fail, but not so far in the future that it prevents effective caching of that key for too long. A sensible balance is achieved with something similar to Attempt(key, Now() + 5s). This depends on loosely synchronized clocks for liveness but safety is always maintained, even with arbitrary clock skew.\nLatestAttemptTimestamp(key) -> ts — For every key queried, return an upper bound for the highest observed attempt timestamp.\nTo provide non-decreasing return values for LatestAttemptTimestamp  for any given key, even with crashes/restarts, Chrono stores and periodically advances a separate upper bound timestamp in persistent storage (e.g. Panda). If an Attempt() call provides an attempt_ts that is greater than the persisted upper bound, Chrono fails the request. On startup, a Chrono process reads the upper bound from storage and that is the minimum timestamp it returns for LatestAttemptTimestamp calls; this ensures that the timestamps returned by LatestAttemptTimestamp never go backwards for any given key.\nChrono does not store the data values corresponding to the keys. That responsibility is relegated to a key value (KV) cache system like Memcache or Redis. This KV cache can be lossy and/or serve stale data. Nevertheless we will see below that with these Panda and Chrono APIs, we can achieve consistent caching and not serve stale data to our users.\nThe full picture looks like this:\n -->\n\n        \n         \n        \n    \n\n            \n        \n    \n\nWe have two main components:\nChrono Server, which provides the two APIs we mentioned above.\nThe lifecycle management component is mainly in charge of whether a Chrono process has been properly bootstrapped and is ready to serve requests.\nThe timestamp table is where we conceptually store the mapping for key → highest observed Attempt timestamp. The implementation hashes the key and stores a single value for all keys that fall into the same hashed slot. This does introduce aliasing across keys that fall into the same hash equivalence class, but strictly bounds memory usage.\nMemcache, which holds the key →  mapping.\nBy decoupling of the data caching component and write attempt tracking component, we have the ability to scale just that component without interfering with other components. For example, if the cache hit rate is low due to insufficient memory allocated for the Memcache cluster, we are able to vertically or horizontally scale our Memcache fleet without touching the Chrono server. Although we show only one box each for Memcache and Chrono in the diagram above, both are sharded, horizontally-scalable systems in practice.\n How the Chrono protocol works\nBelow we will describe how a user of Chrono (for example Edgestore) would interact with Chrono, Memcache, and the underlying storage system in order to achieve consistent caching. At a high level, we are using the timestamps stored in Chrono to detect when Memcache entries are stale and avoid serving them.\nWrite path\n -->\n\n        \n         \n        \n    \n\n            \n        \n    \n\nThe client chooses a reasonable attempt_ts—slightly higher than time.Now() to account for clock skew and network round trip latencies—and calls Attempt(key, attempt_ts) to Chrono. Step one must succeed before proceeding to step two, or the flow is aborted.\nThe client then tries to commit the transaction to Panda using Write(key, value, maxPermittedCommitTimestamp=attempt_ts).\n\nRead path\n -->\n\n        \n         \n        \n    \n\n            \n        \n    \n\nIn parallel…\nLatestAttemptTimestamp(key) and gets LatestAttemptTS.\nMemcache.Get(key) and gets val, memcacheReadTS (or cache miss).\nNext, we validate cache freshness if we hit Memcache…\n\n\n\n    \n        Copy\n    \n    \nif LatestAttemptTS > memcacheReadTS {\r\n  // cache stale; need to read from storage.\r\n} else {\r\n  // cache hit; serve val we got from Memcache\r\n}\n\n\n\n…and upon cache miss/stale cache:\n -->\n\n        \n         \n        \n    \n\n            \n        \n    \n\nSend the GetLatest(key) request to storage and get a more recent (val, readTS) pair.\nThe client then populates (key, readTS, val) to Memcache.\n\nA concrete example\nThe client wants to write key K with value val. It informs Chrono it is attempting to write key K, expecting the commit timestamp won’t be higher than 10.\nAfter successfully calling chrono.Attempt(K, attempt_ts=10), the client proceeds to write to storage with Write(K, val, maxPermittedCommitTimestamp=10).\nThe storage commits the write and responds with 9 as the commit timestamp.\nThe client now issues a read for key K. It asks Chrono, and Chrono returns LatestAttemptTimestamp(K)=10. The client also asks Memcache about key K but misses in the cache.\nThe client issues storage.GetLatest(K), gets back K, val, readTS=11. The client then stores K → val, readTS=11 in Memcache.\nThe next time the client reads again, it can compare Memcache readTS=11 with Chrono's answer of LatestAttemptTimestamp(K)=10, and then use the value in Memcache as it’s fresher than the latest Attempt.\nEven in a situation where Memcache did not hold an entry for our target key, we can still take advantage of a snapshot read by doing a Get with a read timestamp value at least as high as the timestamp returned by Chrono’s LatestAttemptTimestamp. This is guaranteed to observe all linearized prior writes and in practice offloads significant traffic from the Panda leaders onto the followers because most reads are not to recently written keys.\n How does this provide consistent caching?\nIf everything is implemented correctly, we have the following facts:\nBefore any successful write to a given key K resulting in commit timestamp T_commit in Panda, we must have issued to Chrono a successful Attempt(K, T_attempt) call. It is the case then that T_commit  due to our use of maxPermittedCommitTimestamp.\nIf LatestAttemptTimestamp(K) follows some successful Attempt(K, T_attempt), then the timestamp returned by  LatestAttemptTimestamp(K) is greater than or equal to T_attempt.\nSuppose a key K exists in Memcache and is associated with its value (possibly a tombstone indicating deletion) and a read timestamp T_read.  We claim that if a client issues a read for K and we see T_read >= LatestAttemptTimestamp(K) (which would allow us to use the cached value), then the value in Memcache is a valid value to return to the user (guaranteed to include the latest linearized prior write). \nWe prove this by contradiction. If we returned a stale answer, there must be a newer Write for K in storage whose commit was linearized prior to the client-issued read with commit timestamp T_commit_newer > T_read (due to the guarantees provided by GetLatest mentioned earlier) when we returned the value corresponding to T_read from the cache.\nHowever for the Write with commit timestamp T_commit_newer to have succeeded, we must have first successfully called Chrono with an Attempt(K, T_attempt_newer) and T_commit_newer . Then, the LatestAttemptTimestamp(K) call for the read that happens subsequently (and which returned a stale value from the cache) would have returned a value that is at least as high as T_attempt_newer. But this means that we would not have used the value from the cache because LatestAttemptTimestamp(K) >= T_attempt_newer >= T_commit_newer > T_read. This is a contradiction, so there can be no such Write.\nValidation\nWe used a number of tools and techniques to help us verify the correctness of the caching protocol. The main one is TLA+, a formal specification language developed to design, model, document, and verify concurrent systems. It’s worth noting that expressing your system and invariants correctly in TLA+ does not necessarily mean you will implement the system correctly. We also wrote various self-checking workloads and verifiers to continually test in stage and production that we uphold internal invariants and provide externally visible read-after-write behavior when reads are served from the cache.\n Lessons learned\nStrong semantics (read-after-write) have a cost. Educate your clients from day one. Somewhat stale data is not necessarily a bad thing, and it is possible with upfront design to tolerate it in many scenarios. There is, however, a tradeoff between ease of development and platform sustainability. If you, as the system maintainer, have the choice, choose not to spoil the clients with strong guarantees.\nTLA+ is awesome. We used TLA+ in the design phase of Chrono to prove correctness—but it does not solve every problem for you. There are still a lot of things you need to consider before you can even express them in TLA+. Making incorrect assumptions about the environment or not modeling correctness-critical startup sequences may result in a model that gives false hope. We encountered this with a previous flawed iteration of the caching protocol that had a different but buggy startup sequence. We did not catch this in our initial model that only described steady state behavior; the bug was caught by human inspection and analysis. Subsequently modeling the startup sequence for the prior version of the protocol then quickly revealed an invariant violation. \nScale matters. The most time-consuming part was not building or debugging Chrono, but dealing with various operational issues common to many sharded systems—for example, how to design a sharding scheme that allows us to efficiently bundle Memcache requests to reduce overall request fanout and latency, how to debug and mitigate hot spotting in Chrono and Memcache pods, etc.\nA project of this magnitude doesn’t come together without the help of many incredible Dropboxers. We’d like to thank Metadata team members Jonathan Lee and Zhangfan Dong for their contributions. A special shoutout to alumnus Preslav Le who inspired and kickstarted the effort, and all Metadata alumni for their invaluable contributions to this project!\nFinally, we want to recognize our partners in Capacity, Fleet Management, Filesystem, Reliability, and Orchestration whose contributions and support helped us move this project forward. \n\n~ ~ ~\nIf building innovative products, experiences, and infrastructure excites you, come build the future with us! Visit dropbox.com/jobs to see our open roles, and follow @LifeInsideDropbox on Instagram and Facebook to see what it's like to create a more enlightened way of working.",
        "dc:creator": "\n                            Lihao He,Ganesh Rapolu,Yu-Wun Wang\n            \t\t\t",
        "content": "null",
        "contentSnippet": "null",
        "guid": "https://dropbox.tech/infrastructure/meet-chrono-our-scalable-consistent-metadata-caching-solution",
        "categories": [
          "Metadata",
          "Caching",
          "Databases",
          "Infrastructure",
          "storage",
          "Panda",
          "Chrono"
        ],
        "isoDate": "2024-07-25T12:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": [
      {
        "creator": "sunyzero",
        "title": "리눅스용 멀티미디어 프로그램 - 유튜브 플레이어, 다운로더",
        "link": "http://sunyzero.tistory.com/300",
        "pubDate": "Tue, 23 Jul 2024 22:20:26 +0900",
        "author": "sunyzero",
        "comments": "http://sunyzero.tistory.com/300#entry300comment",
        "content": "<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">리눅스에서 주로 사용하는 멀티미디어 프로그램으로는 다음과 같은 것들이 있다. (주로 본인이 사용하는 것 위주이므로 다른 사람들과는 목록이 다를 수 있다)</span></p>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr>\n<td style=\"width: 11.6279%;\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">음악</span></td>\n<td style=\"width: 88.3721%;\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">audacious = 음악 플레이어 <a href=\"https://sunyzero.tistory.com/297\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://sunyzero.tistory.com/297</a></span></td>\n</tr>\n<tr>\n<td style=\"width: 11.6279%;\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">영상</span></td>\n<td style=\"width: 88.3721%;\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"> celluloid = mpv의 프론트 엔드 </span><br /><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><span style=\"background-color: #f6e199;\">mpv</span> = 가장 많이 사용하는 영상 플레이어 <a href=\"https://sunyzero.tistory.com/255\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://sunyzero.tistory.com/255</a></span><br /><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">totem = mpv 대신에 사용하기도 한다.</span><br /><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><span style=\"background-color: #f6e199;\">freetube</span> = 유튜브 플레이어 (웹 페이지가 아닌 단독 플레이어로 좀 가볍고, 웹 브라우저의 영향을 받지 않는다)</span></td>\n</tr>\n<tr>\n<td style=\"width: 11.6279%;\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">다운로더</span></td>\n<td style=\"width: 88.3721%;\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\"><span style=\"background-color: #f6e199;\">clipgrab</span> = youtube, vimeo 같은 동영상 플랫폼에서 다운로드 한다</span><br /><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">youtube-dl = CLI 명령어로 유튜브 다운로드 하는 프로그램</span><br /><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">video-downloader = 유튜브 다운로드 프로그램</span></td>\n</tr>\n<tr>\n<td style=\"width: 11.6279%;\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">기타</span></td>\n<td style=\"width: 88.3721%;\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">playerctl = 동영상 제어 프로그램 (명령행에서 제어할 때 사용)<br />totem-video-thumbnailer = 비디오 파일에서 섬네일 추출하는 프로그램</span></td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">audacious나 mpv는 이미 다른 글에서 다뤘으므로 스킵하고, 몇몇 주요한 프로그램만 살펴보도록 하자.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">1. FreeTube&nbsp;</span><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">(Win/Mac 지원 가능)</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">FreeTube의 장점은 독립적인 앱이라 웹 브라우저 설정에 영향받지 않는 것이다. 웹 브라우저의 가속 설정이나 메모리 부족으로 죽을일도 없다. 실제로도 가볍다는 장점도 있다. 또한 윈도10/윈도11/Mac도 지원이 가능하다. 리눅스가 아닌 경우라면 공식 사이트에서 받으면 된다.</span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>FreeTube official site =&nbsp;<a href=\"https://freetubeapp.io/\">https://freetubeapp.io/</a></li>\n</ul>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">Linux에서 FreeTube 설치는 flatpak으로 진행한다. 당연히 flatpak이므로 Fedora 뿐만 아니라 다른 리눅스에서도 동일한 명령어로 설치할 수 있다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">설치는 아래와 같이 명령하는데, 만일 sudo 권한이 없다면 그냥 root로 유저를 변경한 다음에 설치한다. 하지만 설치 완료 후 실행은 일반 유저로 한다.</span></p>\n<pre id=\"code_1721739053627\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ sudo flatpak search freetube\nName          Description                                 Application ID               Version          Branch      Remotes\nFreeTube      An Open Source YouTube app for privacy      io.freetubeapp.FreeTube      0.21.1 Beta      stable      flathub\n\n위 검색된 결과에서 Application ID를 찾아서 설치한다.\n\n$ sudo flatpak install io.freetubeapp.FreeTube\nLooking for matches&hellip;\n...생략...\n        ID                               Branch          Op          Remote           Download\n 1. [✓] io.freetubeapp.FreeTube          stable          i           flathub          1.0 kB / 114.8 MB\n\nInstallation complete.\n\n\n$ flatpak list\nName                                Application ID                          Version        Branch      Installation\nExtension Manager                   com.mattjakeman.ExtensionManager        0.5.1          stable      system\nFreeTube                            io.freetubeapp.FreeTube                 0.21.1 Beta    stable      system\nPaper Clip                          io.github.diegoivan.pdf_metadata_editor 5.0            stable      system\nInspector                           io.github.nokse22.inspector             0.2.0          stable      system\nMission Center                      io.missioncenter.MissionCenter          0.5.2          stable      system\nFreedesktop Platform                org.freedesktop.Platform                freedesktop-sd 23.08       system\nMesa                                org.freedesktop.Platform.GL.default     24.1.3         23.08       system\nMesa (Extra)                        org.freedesktop.Platform.GL.default     24.1.3         23.08-extra system\nopenh264                            org.freedesktop.Platform.openh264       2.1.0          2.2.0       system\nopenh264                            org.freedesktop.Platform.openh264       2.4.1          2.4.1       system\nGaphor                              org.gaphor.Gaphor                       2.26.0         stable      system\nGNOME Application Platform version&hellip; org.gnome.Platform                                     46          system</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">설치 후 실행은 Super키(윈도우키)를 눌러서 검색에서 freetube를 타이핑 실행하거나, 터미널에서 flatpak run io.freetubeapp.FreeTube 로 실행해도 된다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"freetube_screenshot.png\" data-origin-width=\"934\" data-origin-height=\"681\"><span data-url=\"https://blog.kakaocdn.net/dn/bPRbOC/btsIJXzNzP2/zvg5klqG6yvuJAyekFcQs1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bPRbOC/btsIJXzNzP2/zvg5klqG6yvuJAyekFcQs1/img.png\" data-alt=\"freetube main\"><img src=\"https://blog.kakaocdn.net/dn/bPRbOC/btsIJXzNzP2/zvg5klqG6yvuJAyekFcQs1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbPRbOC%2FbtsIJXzNzP2%2Fzvg5klqG6yvuJAyekFcQs1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"freetube_screenshot.png\" data-origin-width=\"934\" data-origin-height=\"681\"/></span><figcaption>freetube main</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">FreeTube 사용시 유튜브 로그인을 하면 자신의 subscriptions 목록을 다 볼 수 있다. 물론 그냥 유튜브 영상 주소를 직접 넣거나 검색해도 된다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">2. ClipGrab (Win/Mac 지원 가능)</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">유튜브나 vimeo같은 곳의 영상을 로컬에 저장해서 안정적으로 플레이 할 때 사용한다. Fedora에서는 간단하게 dnf로 설치한다.</span></p>\n<pre id=\"code_1721739562442\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ sudo dnf -y install clipgrab</code></pre>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">개인적으로 Clipgrab의 속도가 빨라서 종종 사용하는 편이다. 참고로 ClipGrab은 윈도10/윈도11, Mac도 지원한다. 설치는 검색해보면 공식 다운로드 링크를 볼 수 있을 것이다. (이상한 곳에서 다운로드 받으면 바이러스에 걸리므로 항상 오피셜 사이트인지 확인하고 받자. 이왕이면 좋은 프로그램을 만든 저작자에게 도네이션하면 좋을 듯 싶다.)</span></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">ClipGrab official site = <a href=\"http://clipgrab.de/en\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">http://clipgrab.de/en</a></span></li>\n</ul>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"clipgrab_screenshot.png\" data-origin-width=\"939\" data-origin-height=\"692\"><span data-url=\"https://blog.kakaocdn.net/dn/kClGv/btsILxs7LIf/O7kL0el937RL1jSDLULNK0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/kClGv/btsILxs7LIf/O7kL0el937RL1jSDLULNK0/img.png\" data-alt=\"ClipGrab\"><img src=\"https://blog.kakaocdn.net/dn/kClGv/btsILxs7LIf/O7kL0el937RL1jSDLULNK0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FkClGv%2FbtsILxs7LIf%2FO7kL0el937RL1jSDLULNK0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"clipgrab_screenshot.png\" data-origin-width=\"939\" data-origin-height=\"692\"/></span><figcaption>ClipGrab</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">3. video-downloader</span></h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">유튜브 영상/음성을 로컬에 저장해서 안정적으로 플레이 할 때 사용한다. Fedora에서는 간단하게 dnf로 설치한다.</span></p>\n<pre id=\"code_1721739884674\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ sudo dnf -y install video-downloader</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">설치 후 실행은 Super키를 눌러 검색에서 video 혹은 비디오 정도만 쳐도 아이콘이 보이므로 실행하면 된다. 아니면 터미널에서 video-downloader를 쳐서 실행한다.</span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"video-downloader.png\" data-origin-width=\"722\" data-origin-height=\"550\"><span data-url=\"https://blog.kakaocdn.net/dn/FvHfB/btsII04XBa7/Lab4OhbLB0NQZWI6F6K0e1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/FvHfB/btsII04XBa7/Lab4OhbLB0NQZWI6F6K0e1/img.png\" data-alt=\"video-downloader\"><img src=\"https://blog.kakaocdn.net/dn/FvHfB/btsII04XBa7/Lab4OhbLB0NQZWI6F6K0e1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FFvHfB%2FbtsII04XBa7%2FLab4OhbLB0NQZWI6F6K0e1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"video-downloader.png\" data-origin-width=\"722\" data-origin-height=\"550\"/></span><figcaption>video-downloader</figcaption>\n</figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">video-downloader의 사용법은 너무 간단하므로 그냥 실행해서 이것저것 해보면 될 것이다.</span></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #333333; text-align: start;\" data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">4. playerctl</span></h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">외부에서 명령으로 음악, 영상 플레이어를 제어할 때 사용한다. 예를 들어 5초 뒤로 가게 하려면 아래와 같이 명령한다.</span></p>\n<pre id=\"code_1721740191482\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ playerctl position 5+</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">이외에 다양한 기능이 있으므로 help를 참고하기 바란다.</span></p>\n<pre id=\"code_1721740236986\" class=\"bash\" data-ke-language=\"bash\" data-ke-type=\"codeblock\"><code>$ playerctl -h\nUsage:\n  playerctl [OPTION&hellip;] COMMAND - Controller for media players\n\n  For players supporting the MPRIS D-Bus specification\n\nHelp Options:\n  -h, --help                     Show help options\n\nApplication Options:\n  -p, --player=NAME              A comma separated list of names of players to control (default: the first available player)\n  -a, --all-players              Select all available players to be controlled\n  -i, --ignore-player=IGNORE     A comma separated list of names of players to ignore.\n  -f, --format                   A format string for printing properties and metadata\n  -F, --follow                   Block and append the query to output when it changes for the most recently updated player.\n  -l, --list-all                 List the names of running players that can be controlled\n  -s, --no-messages              Suppress diagnostic messages\n  -v, --version                  Print version information\n\nAvailable Commands:\n  play                    Command the player to play\n  pause                   Command the player to pause\n  play-pause              Command the player to toggle between play/pause\n  stop                    Command the player to stop\n  next                    Command the player to skip to the next track\n  previous                Command the player to skip to the previous track\n  position [OFFSET][+/-]  Command the player to go to the position or seek forward/backward OFFSET in seconds\n  volume [LEVEL][+/-]     Print or set the volume to LEVEL from 0.0 to 1.0\n  status                  Get the play status of the player\n  metadata [KEY...]       Print metadata information for the current track. If KEY is passed,\n                          print only those values. KEY may be artist,title, album, or any key found in the metadata.\n  open [URI]              Command for the player to open given URI.\n                          URI can be either file path or remote URL.\n  loop [STATUS]           Print or set the loop status.\n                          Can be \"None\", \"Track\", or \"Playlist\".\n  shuffle [STATUS]        Print or set the shuffle status.\n                          Can be \"On\", \"Off\", or \"Toggle\".</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">참고</span></h2>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">FreeTube official site = <a href=\"https://freetubeapp.io/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://freetubeapp.io/</a></span></p>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">ClipGrab official site =&nbsp;<a href=\"http://clipgrab.de/en\">http://clipgrab.de/en</a></span></p>\n<p data-ke-size=\"size16\"><span style=\"font-family: 'Noto Sans Demilight', 'Noto Sans KR';\">video-downloader official site = <a href=\"https://github.com/Unrud/video-downloader\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://github.com/Unrud/video-downloader</a></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "리눅스에서 주로 사용하는 멀티미디어 프로그램으로는 다음과 같은 것들이 있다. (주로 본인이 사용하는 것 위주이므로 다른 사람들과는 목록이 다를 수 있다)\n음악\naudacious = 음악 플레이어 https://sunyzero.tistory.com/297\n\n\n영상\n celluloid = mpv의 프론트 엔드 \nmpv = 가장 많이 사용하는 영상 플레이어 https://sunyzero.tistory.com/255\ntotem = mpv 대신에 사용하기도 한다.\nfreetube = 유튜브 플레이어 (웹 페이지가 아닌 단독 플레이어로 좀 가볍고, 웹 브라우저의 영향을 받지 않는다)\n\n\n다운로더\nclipgrab = youtube, vimeo 같은 동영상 플랫폼에서 다운로드 한다\nyoutube-dl = CLI 명령어로 유튜브 다운로드 하는 프로그램\nvideo-downloader = 유튜브 다운로드 프로그램\n\n\n기타\nplayerctl = 동영상 제어 프로그램 (명령행에서 제어할 때 사용)\ntotem-video-thumbnailer = 비디오 파일에서 섬네일 추출하는 프로그램\n\n\n\naudacious나 mpv는 이미 다른 글에서 다뤘으므로 스킵하고, 몇몇 주요한 프로그램만 살펴보도록 하자.\n \n1. FreeTube (Win/Mac 지원 가능)\nFreeTube의 장점은 독립적인 앱이라 웹 브라우저 설정에 영향받지 않는 것이다. 웹 브라우저의 가속 설정이나 메모리 부족으로 죽을일도 없다. 실제로도 가볍다는 장점도 있다. 또한 윈도10/윈도11/Mac도 지원이 가능하다. 리눅스가 아닌 경우라면 공식 사이트에서 받으면 된다.\nFreeTube official site = https://freetubeapp.io/\nLinux에서 FreeTube 설치는 flatpak으로 진행한다. 당연히 flatpak이므로 Fedora 뿐만 아니라 다른 리눅스에서도 동일한 명령어로 설치할 수 있다.\n설치는 아래와 같이 명령하는데, 만일 sudo 권한이 없다면 그냥 root로 유저를 변경한 다음에 설치한다. 하지만 설치 완료 후 실행은 일반 유저로 한다.\n$ sudo flatpak search freetube\nName          Description                                 Application ID               Version          Branch      Remotes\nFreeTube      An Open Source YouTube app for privacy      io.freetubeapp.FreeTube      0.21.1 Beta      stable      flathub\n\n위 검색된 결과에서 Application ID를 찾아서 설치한다.\n\n$ sudo flatpak install io.freetubeapp.FreeTube\nLooking for matches…\n...생략...\n        ID                               Branch          Op          Remote           Download\n 1. [✓] io.freetubeapp.FreeTube          stable          i           flathub          1.0 kB / 114.8 MB\n\nInstallation complete.\n\n\n$ flatpak list\nName                                Application ID                          Version        Branch      Installation\nExtension Manager                   com.mattjakeman.ExtensionManager        0.5.1          stable      system\nFreeTube                            io.freetubeapp.FreeTube                 0.21.1 Beta    stable      system\nPaper Clip                          io.github.diegoivan.pdf_metadata_editor 5.0            stable      system\nInspector                           io.github.nokse22.inspector             0.2.0          stable      system\nMission Center                      io.missioncenter.MissionCenter          0.5.2          stable      system\nFreedesktop Platform                org.freedesktop.Platform                freedesktop-sd 23.08       system\nMesa                                org.freedesktop.Platform.GL.default     24.1.3         23.08       system\nMesa (Extra)                        org.freedesktop.Platform.GL.default     24.1.3         23.08-extra system\nopenh264                            org.freedesktop.Platform.openh264       2.1.0          2.2.0       system\nopenh264                            org.freedesktop.Platform.openh264       2.4.1          2.4.1       system\nGaphor                              org.gaphor.Gaphor                       2.26.0         stable      system\nGNOME Application Platform version… org.gnome.Platform                                     46          system\n \n설치 후 실행은 Super키(윈도우키)를 눌러서 검색에서 freetube를 타이핑 실행하거나, 터미널에서 flatpak run io.freetubeapp.FreeTube 로 실행해도 된다.\nfreetube main\n\n\nFreeTube 사용시 유튜브 로그인을 하면 자신의 subscriptions 목록을 다 볼 수 있다. 물론 그냥 유튜브 영상 주소를 직접 넣거나 검색해도 된다.\n \n2. ClipGrab (Win/Mac 지원 가능)\n유튜브나 vimeo같은 곳의 영상을 로컬에 저장해서 안정적으로 플레이 할 때 사용한다. Fedora에서는 간단하게 dnf로 설치한다.\n$ sudo dnf -y install clipgrab\n개인적으로 Clipgrab의 속도가 빨라서 종종 사용하는 편이다. 참고로 ClipGrab은 윈도10/윈도11, Mac도 지원한다. 설치는 검색해보면 공식 다운로드 링크를 볼 수 있을 것이다. (이상한 곳에서 다운로드 받으면 바이러스에 걸리므로 항상 오피셜 사이트인지 확인하고 받자. 이왕이면 좋은 프로그램을 만든 저작자에게 도네이션하면 좋을 듯 싶다.)\nClipGrab official site = http://clipgrab.de/en\nClipGrab\n\n\n \n3. video-downloader\n유튜브 영상/음성을 로컬에 저장해서 안정적으로 플레이 할 때 사용한다. Fedora에서는 간단하게 dnf로 설치한다.\n$ sudo dnf -y install video-downloader\n설치 후 실행은 Super키를 눌러 검색에서 video 혹은 비디오 정도만 쳐도 아이콘이 보이므로 실행하면 된다. 아니면 터미널에서 video-downloader를 쳐서 실행한다.\nvideo-downloader\n\n\nvideo-downloader의 사용법은 너무 간단하므로 그냥 실행해서 이것저것 해보면 될 것이다.\n \n4. playerctl\n외부에서 명령으로 음악, 영상 플레이어를 제어할 때 사용한다. 예를 들어 5초 뒤로 가게 하려면 아래와 같이 명령한다.\n$ playerctl position 5+\n이외에 다양한 기능이 있으므로 help를 참고하기 바란다.\n$ playerctl -h\nUsage:\n  playerctl [OPTION…] COMMAND - Controller for media players\n\n  For players supporting the MPRIS D-Bus specification\n\nHelp Options:\n  -h, --help                     Show help options\n\nApplication Options:\n  -p, --player=NAME              A comma separated list of names of players to control (default: the first available player)\n  -a, --all-players              Select all available players to be controlled\n  -i, --ignore-player=IGNORE     A comma separated list of names of players to ignore.\n  -f, --format                   A format string for printing properties and metadata\n  -F, --follow                   Block and append the query to output when it changes for the most recently updated player.\n  -l, --list-all                 List the names of running players that can be controlled\n  -s, --no-messages              Suppress diagnostic messages\n  -v, --version                  Print version information\n\nAvailable Commands:\n  play                    Command the player to play\n  pause                   Command the player to pause\n  play-pause              Command the player to toggle between play/pause\n  stop                    Command the player to stop\n  next                    Command the player to skip to the next track\n  previous                Command the player to skip to the previous track\n  position [OFFSET][+/-]  Command the player to go to the position or seek forward/backward OFFSET in seconds\n  volume [LEVEL][+/-]     Print or set the volume to LEVEL from 0.0 to 1.0\n  status                  Get the play status of the player\n  metadata [KEY...]       Print metadata information for the current track. If KEY is passed,\n                          print only those values. KEY may be artist,title, album, or any key found in the metadata.\n  open [URI]              Command for the player to open given URI.\n                          URI can be either file path or remote URL.\n  loop [STATUS]           Print or set the loop status.\n                          Can be \"None\", \"Track\", or \"Playlist\".\n  shuffle [STATUS]        Print or set the shuffle status.\n                          Can be \"On\", \"Off\", or \"Toggle\".\n \n참고\nFreeTube official site = https://freetubeapp.io/\nClipGrab official site = http://clipgrab.de/en\nvideo-downloader official site = https://github.com/Unrud/video-downloader",
        "guid": "http://sunyzero.tistory.com/300",
        "categories": [
          "컴퓨터 관련/리눅스 데스크탑",
          "clipgrab",
          "FreeTube",
          "linux",
          "video-downloader",
          "youtube-dl",
          "동영상 다운로더",
          "리눅스",
          "유튜브"
        ],
        "isoDate": "2024-07-23T13:20:26.000Z"
      }
    ]
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": [
      {
        "creator": "xguru",
        "title": "보드게임 리뷰 – 1846: 중서부로 달려라",
        "link": "https://xguru.net/2345",
        "pubDate": "Sun, 21 Jul 2024 12:23:33 +0000",
        "content:encodedSnippet": "1846~1935년을 배경으로 미국 중서부의 철도 회사들을 운영하는 주식+기차 보드게임.\n\n18XX는 1974년에 만들어진 Francis Tresham의 1829라는 게임에 기초해서 수많은 디자이너들이 이 게임의 룰을 도입한 수백종의 후속작을 만들면서 시리즈화 된 게임이다. \n18xx tree from Makecraftgame.com\n\n\n\n기본 18XX 시리즈 룰은 이렇다\n게임의 목표는 돈(현금 + 주식)을 많이 버는 것이다.\n플레이어인 나는 “주식 투자자“로 철도회사의 주식을 사고 판다.\n특정 회사의 주식을 가장 많이 가지고 있으면 나는 그 “회사의 사장“이 되어서 회사를 운영한다. 철로를 깔고 기차를 운영해서 돈을 번다. 그렇게 돈 번거는 내 것이 아닌 회사의 것이다. 즉, 내 돈과 회사의 돈은 철저히 분리되어 있다. (자연인과 법인이라고 보면 된다)\n회사가 돈을 벌어서 주주들에게 배당을 하면 주가가 올라가고, 자금을 모으기 위해 배당을 보류하면 주가가 떨어진다.\n회사는 자금을 모아서 기차를 사고, 운영해서 돈을 번다. 기차는 2개 도시만 움직이는 2기차 부터 여러개 도시를 통과하는 3,4,5,6,7,8 등부터 혹은 디젤 기차까지 업그레이드 된다. 2,3,4 등의 초기 기차는 특정 시점이 되면 노후화되어 폐기처분 된다.\n주주가 주식을 팔면 주가가 떨어진다. 사장인 나보다 주식 많은 사람이 생기면 회사 운영권이 넘어간다.\n은행에 돈이 떨어지면 그때 게임이 끝난다 (은행을 터뜨린다고 표현)\n가장 기본적인 룰이다. 즉 대부분의 보드게임은 내가 뭔가를 해서 나 혼자 돈을 버는데, 여기선 주식회사의 사장이 된다. 내가 버는 돈이 다 내꺼가 아니다. 배당을 통해서 다른 주주들도 돈을 벌게 해주니까 이기기 위해선 복잡한 계산이 필요하다. \n회사 자산을 다 팔아 치우고 깡통으로 만든 후 주식을 내다 팔아서, 회사를 2대 주주에게 넘기는 것도 가능하다. (폭탄 돌리기) 거기다 회사의 합병, 공매도, 운영하는 기차의 종류(화물,고속,지역..), 회사도 사기업부터 지역기반/다국적 회사들까지 다양해지면 정말 복잡한 주식게임이 된다.\n1846은 경제 전공자인 톰 레만이 룰을 수정해서 많이 현실적인 18시리즈.\n\n\n\n\n\n20% 짜리 사장 주식을 사면 바로 사장이 되면서 회사가 출범하고 운영이 가능. 사장이 지정하는 주가는 40-150 까지 설정이 가능. 초기 주가의 두배가 자본금으로 납입되는 것\n회사가 나머지 80% 주식을 가지고 시작하며, 누군가 현재 주가로 주식을 사가면 바로 자본금에 납입됨\n회사는 돈이 필요하면 현재 주가보다 한단계 낮은 금액으로 시장에 팔아서(신주 발행) 자금을 긴급 수혈 가능. 단 다시 사올 때는 한단계 높은 금액으로 사와야 함(자사주 매입)\n주식 라운드에서 주식 판매한다고 다 하락하는 건 아니고, 오직 사장이 주식을 팔때만 주가가 하락. 경영자가 주식을 파니까 이건 당연한 거지!\n주식 라운드가 끝났을 때 주식시장에 한주라도 남아있으면 주가 하락. 100% 모든 주식을 플레이어가 소유한 회사들은 주가가 상승. 시장에서 인기 있는 회사니까!\n회사의 총 수입을 배당, 반배당, 배당 보류 세가지로 운영 가능. 반배당하면 수익의 반은 회사가 가지고 나머지를 주주들한테 분배\n배당금액이 현재 주가대비 해서 2/3배 이상 크다면 주식이 2칸 또는 3칸 상승도 가능해서 수익이 많이 나는 회사은 주가가 폭발적으로 상승 가능\n사기업들도 특수 기능이 흥미롭게 되어있고, 경매가 아닌 독특한 드래프트 방식이어서 나름의 재미가 있음\n일리노이 센트럴 레일로드는 역사적으로 첫 토지 보조금을 받았던 철도회사여서, 그 사실이 게임내에 반영 되어있음. 출범할때 주식 한주 만큼을 은행에서 보조해주고, 특정 지역에 철도를 건설하는 비용을 $20에서 $0 으로 면제 해줌\n주식 라운드 1번에 운영 라운드 2번으로 고정\n실존했던 회사들인 New York Central Railroad(NYC), Pennsylvania Railroad(PRR), Illinois Central Railroad(IC), Baltimore & Ohio Railroad(B&O), Grant Trunk Railway(GT), Erie Railroad(ERIE), Chesapeake and Ohio Railway(C&O) 7개를 이용함. 회사 로고도 실제 그 회사들의 로고를 그대로 차용했음. 위키피디아에 찾아보면 그 회사들 정보를 다 검색 가능\n이날은 5명 풀로 시작해서, 10개의 모든 사기업과 7개 기업을 다 꺼내놓고 했음.\n드래프트인데도 다들 착하게? 2개씩 사기업을 선택해서 각자 2개씩 들고 시작.\n\n\n\n\n내 사기업으로 지도의 서쪽 끝지역인 세인트루이스/시카고에 고기 포장 회사 토큰($30)을 놓을수 있는 Meat Packing Company가 들어와서 나중에 일리노이 센트럴 레일로드(IC)를 운영. 후반부에 돈을 많이 벌려면 동/서를 연결하는 횡단 철도를 구성해야 하는데, C&O 와 NYC가 Columbus 도시를 선점하면서 횡단 철도가 차단되어 수익이 떡락 ㅠ\n결과적으로는 모든 도시에 $10 추가 수익을 가져다 주는 Mail Contract 사기업을 운영한 NYC 대표님이 엄청난 수익률을 자랑하며 1등으로 마무리\n\n\n\n\n오전 10시 30분에 설명 시작해서 1시간 설명하고, 중간에 점심/간식 시간 1시간을 제외하고 플레이만 총 7시간 30분 걸려서 저녁 8시에 끝났음\n아 너무 너무 재미나다. 매주 18시리즈만 한게임씩 돌리면 좋것다\n1846 #18xx #보드게임\nThe post 보드게임 리뷰 – 1846: 중서부로 달려라 first appeared on Guru's Blog.",
        "dc:creator": "xguru",
        "comments": "https://xguru.net/2345#respond",
        "content": "<p>1846~1935년을 배경으로 미국 중서부의 철도 회사들을 운영하는 주식+기차 보드게임. 18XX는 1974년에 만들어진 Francis Tresham의 1829라는 게임에 기초해서 수많은 디자이너들이 이 게임의 룰을 도입한 수백종의 후속작을 만들면서 시리즈화 된 게임이다. 기본 18XX 시리즈 룰은 이렇다 가장 기본적인 룰이다. 즉 대부분의 보드게임은 내가 뭔가를 해서 나 혼자 돈을 버는데, 여기선 주식회사의 사장이 된다. 내가 버는 돈이 다 [&#8230;]</p>\n<p>The post <a href=\"https://xguru.net/2345\">보드게임 리뷰 – 1846: 중서부로 달려라</a> first appeared on <a href=\"https://xguru.net\">Guru's Blog</a>.</p>",
        "contentSnippet": "1846~1935년을 배경으로 미국 중서부의 철도 회사들을 운영하는 주식+기차 보드게임. 18XX는 1974년에 만들어진 Francis Tresham의 1829라는 게임에 기초해서 수많은 디자이너들이 이 게임의 룰을 도입한 수백종의 후속작을 만들면서 시리즈화 된 게임이다. 기본 18XX 시리즈 룰은 이렇다 가장 기본적인 룰이다. 즉 대부분의 보드게임은 내가 뭔가를 해서 나 혼자 돈을 버는데, 여기선 주식회사의 사장이 된다. 내가 버는 돈이 다 […]\nThe post 보드게임 리뷰 – 1846: 중서부로 달려라 first appeared on Guru's Blog.",
        "guid": "https://xguru.net/?p=2345",
        "categories": [
          "보드게임"
        ],
        "isoDate": "2024-07-21T12:23:33.000Z"
      },
      {
        "creator": "xguru",
        "title": "보드게임 리뷰: 헤게모니 – 당신의 사회 계층을 승리로 이끄세요",
        "link": "https://xguru.net/2353",
        "pubDate": "Sun, 21 Jul 2024 11:53:24 +0000",
        "content:encodedSnippet": "노동자, 중산층, 자본가, 정부. 4인의 플레이어가 각 계층을 맡아서 저마다의 목표를 향해 플레이하는 보드게임. 부제목 “당신의 사회 계층을 승리로 이끄세요” 가 이해 될 만큼 굉장히 현실적인 요소들이 많이 반영되어서 해당 계층에 몰입해보는 효과도 있고, 계속 웃으면서 게임할 수 있음. \n\n문제는 4명 각각이 게임하는 방법이 조금씩 다르기 때문에 설명이 오래 걸린다는 것. 초플이라 2시간 설명하고 7시간 반동안 게임 했음. 물론 에러플 다수. 2차전 때는 각자 맡은 계층을 다시 하니 좀 빠르겠지 했는데 다들 고민이 많아지면서 8시간 반 게임을 해버림.\n노동자는 기업에서 일하며 임금을 받아 의료/교육/사치품 등으로 번영도를 올리는게 목표. 노조도 만들고 파업도 하고.\n자본가는 기업을 만들어서 식품/사치품 과 의료/교육 서비스를 생산. 물건을 다른 계층 및 해외에 수출해서 돈을 많이 버는게 목표.\n중산층은 취업해서 일을 하거나 소창업을 해서 돈도 벌고 물품도 생산하며 번영도와 돈 양쪽을 조화롭게 운영\n정부는 각 계층을 지원하여 지지도를 많이 얻으면 점수가 올라감. 정책에 관여해서 세금도 많이 벌고, 공기업도 운영.\n가장 중요한 것은 7가지의 정책. 재정/노동시장/과세/복지(교육 & 의료)/해외 무역/이민.\n\n\n\n\n 각 정책이 사회주의–신자유주의, 국수주의–세계통합주의 쪽으로 움직일때 마다 법인세,소득세,고용세,관세가 바뀌고, 이민자 및 공기업수도 조정됨. 이 정책 변경을 위해 법안을 발의하고 매 라운드 마다 투표가 일어남. 노동자/자본가/중산층은 각각 투표를 위해 자신들의 발언권 큐브를 주머니에 넣을 수 있음. \n매 라운드마다 투표단계에서 5개의 발언권 큐브를 뽑아서 정책 변경이 일어남. 보통은 매 라운드마다 인구수/기업수에 비례해서 큐브를 넣지만, 특정 카드를 활용해서 자신의 큐브를 더 넣어서 투표에서 더 유리해질 수도 있음. 투표와 별도로 영향력 큐브를 언론/방송 같은 기업을 통해 구매한 후 이걸로 투표 결과에 영향 미치는 것도 가능. 예를 들어 노동시장 정책에 따라 최저임금이 정해지고, 정책이 바뀌면 전체 기업들의 최저임금이 올라감.\n라운드 개요. 소득세, 고용세, 법인세 계산 방법\n\n\n\n정부는 투표는 불가능 하지만, 국영언론사 통해서 벌은 영향력 큐브를 캠페인 활동으로 가져와서 투표에 영향 미치는 것이 가능. 매 라운드 마다 정책 목표가 정해지고 그 정책과 일치하게 만들면 보너스가 주어지기 때문에 정책 부분을 계속 신경 써야함. 영향력이 많다면 돈이 부족할때 과세를 올려서 세금을 많이 받거나 하는 등의 작업도 가능함.\n\n\n\n\n정부는 매 턴마다 이슈가 발생하면 그걸 대응해서 각 계층의 지지도를 얻는 방식. 특정 계층이 소외받지 않게 지원해줘야 함. 마지막에 최하 지지도 2계층의 값을 받기 때문.\n각 계층에게는 40장의 행동카드가 주어지는데, 계층에 맞는 다양한 이슈들이 잘 구성되어 있음. 예를 들면 정부는 의료복지/사업보조금/취약계층지원/민영화/국영화 같은 액션 카드를 가지고 있음. 7장 받은뒤에 한장씩 내면서 5번의 행동을 하면 라운드 마무리. 총 5라운드동안 하니까 25개의 액션만으로 최고의 점수를 내야 함. 문제는 자신도 어떤 카드가 나올지 모르는데, 각 계층마다 약간 카운터 같은 카드가 나올 수 있기 때문에 잘하기가 어렵다는 것.\n정부는 민영화 카드로 자본가 계층에게 회사를 매각가능. 반대로 국영화도 있음 \n첫번째 플레이때는 4라운드 후반에 내가 맡은 “정부”가 대출금 한도를 넘어가면서 IMF가 발생. 모든 정책이 특정 칸으로 조정되어서 공기업 매각 및 최저임금이 최하 수준으로 변경됨. 그러면서 노동자 계층에 대량 실업자가 발생하자, 5라운드에 노동자 계층이 “시위”를 함. 시위가 발생하면 실업자를 해결하기 위해 기업을 더 만들어야 하는데, 누구도 돈이 없어서 기업을 못만드는 상황. 끝내 실업자를 고용하지 못한 중산층/자본가/정부 플레이어 모두 승점을 몇점씩 잃어버리는 광역기가 되어버렸음.\n하얀색은 의료 계층 종사자인데 편의점에서 일하고 있음\n\n\n\n너무 재미나서 2차전을 한번 더 하기로 함. 2주만에 모였더니 각자가 자기 룰도 기억 잘 안나서, 다른 계층은 꿈도 못 꾸고 예전과 같은 클래스 붙잡게 되어 나는 또 “정부” 담당. \n2차전에는 확장을 몇개 추가 \n”위기와 대처“ : 정부의 대출 초과로 IMF 발생시마다 상황을 바꿔줌\n”숨겨진 안건“ : 각 클래스별 히든 목표를 부여해서 추가 점수 획득 가능\n”역사적 사건들“ : 매 라운드마다 실제 있었던 사건이 하나 씩 열리면서 환경을 조금씩 바꿔 줌\n\n준비단계에서 ”미국 독립 혁명“ 카드가 나오면서 수출이 막혀버려서 자본가에게 불리한 판세가 구성. 게다가 1라운드 카드로 제 1차 세계대전이 발발하면서 자본가 계층이 가진 사치품 기업(쇼핑몰)을 국영화 시킴. 자본금의 2배를 자본가에게 주고 사야해서 이거 뭔가 했는데, 나중에 사치품 덕을 톡톡히 봄.\n기본적으로 정부는 의료,교육 서비스 밖에 생산이 안되는데 사치품을 생산할 수 있게 되면서 돈이 필요할때 마다 사치품을 해외에 수출 가능 해짐. 그래서 3라운드에서 정부에 돈이 떨어지면서 IMF로 가나 했는데, 사치품을 팔아 제끼면서 겨우 IMF를 막음. \n\n5라운드에 노동자 계층이 총파업을 단행. 원래 파업은 2개 기업밖에 안되는데, 노조 갯수 만큼 파업이 가능한 카드를 시전하면서 4개 노조의 힘으로 6개 기업이 파업에 돌입.\n공기업(대학병원, 국영방송국) 2개\n자본가 기업(종합대학, 기술대학) 2개\n중산층 기업(개인병원, 유기농 농장) 2개\n그러자 자본가 쪽에서 대학을 팔아 치워버리면서 대규모 실업자가 발생\n\n\n\n\n\n정작 마지막에 임금을 다 받지 못한 노동자 계층의 액션이 꼬이고, 중산층에서 정부의 의료서비스를 쓸데없이 사주는 오류플이 발생하면서 또 한번 나(정부)의 승리로 끝남.\n중산층 플레이어 : ”이 게임 밸붕이야!“\n자본가 플레이어 : ”잘하는 자본가에 맞춰서 밸런스를 잡은 거 아님?“\n노동자 플레이어 : ”한턴 꼬여서 망했어!“\n정말 즐거운 게임 “Hegemony – 헤게모니“\n이 게임 만든 친구들은 이런 테마에 재미들렸는지, 차기작으로 World Order 라는 게임을 준비중\n#보드게임 #헤게모니\nThe post 보드게임 리뷰: 헤게모니 – 당신의 사회 계층을 승리로 이끄세요 first appeared on Guru's Blog.",
        "dc:creator": "xguru",
        "comments": "https://xguru.net/2353#respond",
        "content": "<p>노동자, 중산층, 자본가, 정부. 4인의 플레이어가 각 계층을 맡아서 저마다의 목표를 향해 플레이하는 보드게임. 부제목 &#8220;당신의 사회 계층을 승리로 이끄세요&#8221; 가 이해 될 만큼 굉장히 현실적인 요소들이 많이 반영되어서 해당 계층에 몰입해보는 효과도 있고, 계속 웃으면서 게임할 수 있음. 문제는 4명 각각이 게임하는 방법이 조금씩 다르기 때문에 설명이 오래 걸린다는 것. 초플이라 2시간 설명하고 7시간 [&#8230;]</p>\n<p>The post <a href=\"https://xguru.net/2353\">보드게임 리뷰: 헤게모니 – 당신의 사회 계층을 승리로 이끄세요</a> first appeared on <a href=\"https://xguru.net\">Guru's Blog</a>.</p>",
        "contentSnippet": "노동자, 중산층, 자본가, 정부. 4인의 플레이어가 각 계층을 맡아서 저마다의 목표를 향해 플레이하는 보드게임. 부제목 “당신의 사회 계층을 승리로 이끄세요” 가 이해 될 만큼 굉장히 현실적인 요소들이 많이 반영되어서 해당 계층에 몰입해보는 효과도 있고, 계속 웃으면서 게임할 수 있음. 문제는 4명 각각이 게임하는 방법이 조금씩 다르기 때문에 설명이 오래 걸린다는 것. 초플이라 2시간 설명하고 7시간 […]\nThe post 보드게임 리뷰: 헤게모니 – 당신의 사회 계층을 승리로 이끄세요 first appeared on Guru's Blog.",
        "guid": "https://xguru.net/?p=2353",
        "categories": [
          "보드게임"
        ],
        "isoDate": "2024-07-21T11:53:24.000Z"
      }
    ]
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김범진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권영재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김병환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권혁우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김준형",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": [
      {
        "creator": "김상훈",
        "title": "쓰레기 AI에 대한 절망",
        "link": "https://interpiler.com/2024/07/25/%ec%93%b0%eb%a0%88%ea%b8%b0-ai%ec%97%90-%eb%8c%80%ed%95%9c-%ec%a0%88%eb%a7%9d/",
        "pubDate": "Wed, 24 Jul 2024 22:44:17 +0000",
        "content:encodedSnippet": "오늘 나스닥이 급락했다. 겨우 구글과 테슬라의 실적이 나쁘다는 뉴스 탓에 시장 전체가 패닉에 들어가는 게 아닐까 생각된다. 한편으로는 AI에 대한 과도한 기대가 걷히고 있기 때문일지도.\n작년 초의 환호 및 경악과 달리, 1년 반이 지난 현재, AI에 대한 현실적 평가는 ‘스팸 생성기’ 정도라는 비관이 팽배해지는 것 같다. 단 한명이 수백개의 가짜 뉴스를 단숨에 만들어 내고, 도널드 트럼프 암살시도 직후 X에 ‘카멀라 해리스 피격’ 토픽이 올라오고, 가짜 지식이 구글의 AI 검색결과 상단에서 추천되는 모습 등이 만들어낸 어찌 보면 그럴듯한 결과다.\n하지만 이런 문제가 발생하는 이유는 그저 LLM(대규모 언어모델, 즉 ChatGPT 등을 만드는 AI)과 인간의 사고방식이 다르기 때문이다. \n노엄 촘스키는 여기에 대해, 인간은 지구가 둥글다는 사실을 보고 나면 지구가 평평하다는 사실은 더 이상 학습하지 않지만, AI는 매 순간 지구가 둥글다는 사실과 평평하다는 사실을 동등하게 학습한 뒤 확률적으로 거래한 결과를 내놓는다고 설명한다. ‘적은’ 데이터로 ‘합리적’ 추론을 이끌어 내는 인간의 사고와 달리 ‘수많은’ 데이터로 ‘그럴듯한’ 결과를 생성해 내는 LLM 사고의 차이다. 더 단순하게 얘기하면, 인간은 올바른 것을 고민하지만 AI는 확률적으로 우세한 것을 고민한다.\n문제는 이 과정에 들어가는 에너지.\n인간의 두뇌는 그저 음식물 약간을 통해 위대한 문명을 만들어 내지만, AI의 두뇌인 데이터센터는 어마어마한 에너지를 소비하면서 ‘기대 이하’의 결과를 만들어낸다. 그런데 생각해 볼 점은 그 ‘기대’가 무엇이냐는 것. 어찌 보면 우리는 ‘AI가 모든 측면에서 사람보다 나을 것’이라고 기대해 왔다. 시도 쓰고, 계산도 하고, 로켓도 화성에 보내고, 핵융합 에너지도 만들어내고, 로봇도 만들어 가사노동도 대신해 주는 그런 만능 지능.\n그런데 실제로 지난 수년간 AI는 LLM이 아니어도 전에는 쉽게 찾지 못했던 지하 깊은 곳의 새로운 광산을 찾아냈고, 전력 효율을 높여 에너지를 아껴줬고, 단백질 구조를 분석해 신약 개발을 도왔다. 그러니까 사람을 공격할 정도로 발전하는 SF 수준의 AI에 대한 기대는 배신당했지만, 조용히 인류 문명을 돕는 측면에서 AI는 어느 때보다 강력한데, 욕망의 포로가 된 인간들의 과도한 기대가 과도한 절망감을 만들어내고 있다. AI 챗봇들은 이럴 때 주식을 더 사야 한다고 말할까, 이제 정리할 때라고 조언할까.",
        "dc:creator": "김상훈",
        "comments": "https://interpiler.com/2024/07/25/%ec%93%b0%eb%a0%88%ea%b8%b0-ai%ec%97%90-%eb%8c%80%ed%95%9c-%ec%a0%88%eb%a7%9d/#respond",
        "content": "오늘 나스닥이 급락했다. 겨우 구글과 테슬라의 실적이 나쁘다는 뉴스 탓에 시장 전체가 패닉에 들어가는 게 아닐까 생각된다. 한편으로는 AI에 대한 과도한 기대가 걷히고 있기 때문일지도. 작년 초의 환호 및 경악과 달리, 1년 반이 지난 현재, AI에 대한 현실적 평가는 &#8216;스팸 생성기&#8217; 정도라는 비관이 팽배해지는 것 같다. 단 한명이 수백개의 가짜 뉴스를 단숨에 만들어 내고, 도널드 &#8230; <a href=\"https://interpiler.com/2024/07/25/%ec%93%b0%eb%a0%88%ea%b8%b0-ai%ec%97%90-%eb%8c%80%ed%95%9c-%ec%a0%88%eb%a7%9d/\" class=\"more-link\">계속 읽기 <span class=\"screen-reader-text\">쓰레기 AI에 대한&#160;절망</span> <span class=\"meta-nav\">\t</span></a>",
        "contentSnippet": "오늘 나스닥이 급락했다. 겨우 구글과 테슬라의 실적이 나쁘다는 뉴스 탓에 시장 전체가 패닉에 들어가는 게 아닐까 생각된다. 한편으로는 AI에 대한 과도한 기대가 걷히고 있기 때문일지도. 작년 초의 환호 및 경악과 달리, 1년 반이 지난 현재, AI에 대한 현실적 평가는 ‘스팸 생성기’ 정도라는 비관이 팽배해지는 것 같다. 단 한명이 수백개의 가짜 뉴스를 단숨에 만들어 내고, 도널드 … 계속 읽기 쓰레기 AI에 대한 절망",
        "guid": "http://interpiler.com/?p=1498",
        "categories": [
          "That's IT"
        ],
        "isoDate": "2024-07-24T22:44:17.000Z"
      }
    ]
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "windows event 계정 정보",
        "link": "https://kangmyounghun.blogspot.com/2024/07/windows-event.html",
        "pubDate": "2024-07-24T07:43:00.004Z",
        "author": "강명훈",
        "content": "<div>윈도우 주요 이벤트 몇몇은 작업 주관자를 의미하는 subject와 작업 대상인 target 정보를 제공한다. 다음은 윈도우 기본 이벤트 4688. target 정보 누락 발생. <span style=\"font-size: x-small;\">(subject와 target이 같다는 의미인 것 같기는 한데)</span></div><div><br /></div>\n<div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3OTv8HpjejrtBfSaKd6g0SY0_EQEGKj8yonqh6c1Z_egx-RSy5cNwMJz3KCT8OSalaerVXhQE8AtRPrL4yMVVsWfp69jMkSU5KezPpUvvmP_hias5U7Ab8NOapM8u2KWWfPglfLM0J6DfLLZZe0cpkE5yvUu4mrn-2hgfpq9bO05izxpwIuwMGCC3djT_/s1280/event4688_splunk.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"651\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEh3OTv8HpjejrtBfSaKd6g0SY0_EQEGKj8yonqh6c1Z_egx-RSy5cNwMJz3KCT8OSalaerVXhQE8AtRPrL4yMVVsWfp69jMkSU5KezPpUvvmP_hias5U7Ab8NOapM8u2KWWfPglfLM0J6DfLLZZe0cpkE5yvUu4mrn-2hgfpq9bO05izxpwIuwMGCC3djT_/s520/event4688_splunk.png\" width=\"520\" /></a></div><br /><span><a name='more'></a></span></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi5rsrdIoKGlIOR8PyAx6vmrX30sffAiHaFBWZNaifdmn4DLtqRCTI_MOUBO3yH22XaoLAATMcMA4tM2QO7jawJc30k89zbbYVr3KyPUUTGstB9eWBD3w8tTcwirfYCgromhpGqtp6EKexSX5G0Aaf4PuAhPIkCbYR8qHEMNX9xbCdsxvlOjJtZwRzE83kG/s1280/event4688_elastic.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"520\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi5rsrdIoKGlIOR8PyAx6vmrX30sffAiHaFBWZNaifdmn4DLtqRCTI_MOUBO3yH22XaoLAATMcMA4tM2QO7jawJc30k89zbbYVr3KyPUUTGstB9eWBD3w8tTcwirfYCgromhpGqtp6EKexSX5G0Aaf4PuAhPIkCbYR8qHEMNX9xbCdsxvlOjJtZwRzE83kG/s520/event4688_elastic.png\" width=\"520\" /></a></div><div><br /></div><div>다음은 <a href=\"https://kangmyounghun.blogspot.com/2021/01/sysmon-dns.html\" target=\"_blank\">sysmon</a> 이벤트 1. 정보 누락이 발생하지 않는다. 4688 답답해서 개선한 모양.</div><div><br /></div>\n<div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj8sAvX3hICmDBwSabFLzYtKY469rUR2q__yKYGEfuF7OO8cL2nqdAzewuHLHFf-LZ6vWqIWl2wklgHFkmhMqfqvPAkmZutJApJcgatAFPcXNxLGlu_WiUrzfTZy96STDD7tVVCxYzf_B1JHR3kBuRnaCgqJlNkIkW5s_mGLYy3WFafqhsIRZwXtG-RfAjM/s1280/event1_splunk.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"647\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj8sAvX3hICmDBwSabFLzYtKY469rUR2q__yKYGEfuF7OO8cL2nqdAzewuHLHFf-LZ6vWqIWl2wklgHFkmhMqfqvPAkmZutJApJcgatAFPcXNxLGlu_WiUrzfTZy96STDD7tVVCxYzf_B1JHR3kBuRnaCgqJlNkIkW5s_mGLYy3WFafqhsIRZwXtG-RfAjM/s520/event1_splunk.png\" width=\"520\" /></a></div><div><br /></div></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjK0J6oeOdJW5Qlg_Nj-DzvB3PrslavhH3Tcz7QQJ1IRefMCVjdthIT3SP1SaFeEnJCVs3Sy_zCmwoxLOJrjlVmCO108b7kS4Y-11CLfoHZS_3w98TzRl6_F-LuE35Oy_Woacp1I1NiEbkCifQ4APZ9NPPRQr-EpnHBbSWEyyBEgcacfa2g3tcb5KNUOGza/s1280/event1_elastic.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"520\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjK0J6oeOdJW5Qlg_Nj-DzvB3PrslavhH3Tcz7QQJ1IRefMCVjdthIT3SP1SaFeEnJCVs3Sy_zCmwoxLOJrjlVmCO108b7kS4Y-11CLfoHZS_3w98TzRl6_F-LuE35Oy_Woacp1I1NiEbkCifQ4APZ9NPPRQr-EpnHBbSWEyyBEgcacfa2g3tcb5KNUOGza/s520/event1_elastic.png\" width=\"520\" /></a></div><br /><div>부모<span style=\"font-size: x-small;\">(<a href=\"https://en.wikipedia.org/wiki/Service_Control_Manager\" target=\"_blank\">services.exe</a>)</span>, 자식<span style=\"font-size: x-small;\">(<a href=\"https://en.wikipedia.org/wiki/Svchost.exe\" target=\"_blank\">svchost.exe</a>)</span> 모두&nbsp;사용자 의도와 관계없이 실행되는, 윈도우 자체인 시스템 프로세스인데 왜 administrator가 등장하는지는 모르겠다. <strike><span style=\"font-size: x-small;\"><a href=\"https://medium.com/@tareq.alkhatib/its-not-you-windows-security-logs-don-t-make-sense-4e421a0bbd0\" target=\"_blank\">내가 멍청한 게 아니라 윈도우가 복잡한거다</a></span></strike></div><div><br /></div><div><b><span style=\"font-size: x-large;\">사용자 모드 테스트</span></b></div><div><br /></div><div>일반 사용자 권한으로 메모장을 실행해봤다. 다음은 이벤트 4688. 관리자로 실행했을 땐 subject, 일반 사용자는 target을 봐야 한다.</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMmveAI91JiIJiHpNVhjkCncMzqmiBFcrHRo5ls6Edc3MTRAemyUkhKBdke6ssuIn3_clWRSB1VVX9KjZe1QVSsDMEYSZyFjfKAOH3MXu2b0kICHm3ys5pjih-cqWjHq0YnMQde-UlZtkoNKXJqtVc-7HMN5OR_ZhrTadcrUOKuXuvFmLFO35YKl9nWwTD/s1280/event4688_splunk2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"609\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiMmveAI91JiIJiHpNVhjkCncMzqmiBFcrHRo5ls6Edc3MTRAemyUkhKBdke6ssuIn3_clWRSB1VVX9KjZe1QVSsDMEYSZyFjfKAOH3MXu2b0kICHm3ys5pjih-cqWjHq0YnMQde-UlZtkoNKXJqtVc-7HMN5OR_ZhrTadcrUOKuXuvFmLFO35YKl9nWwTD/s520/event4688_splunk2.png\" width=\"520\" /></a></div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiR8xVyCI_O2cVT3PYT_NhsriaL1xzMD7sWNTzfCbFpVUWEB9GJOwiHp7DV0k4gvXTjKRNYVeuFIEv5G7bdx_g4zugDtWe_wo_Yygbse6i8ITKJBCPvGODNhnR5vIjst_akA_URGMs4OY2ycgWM4DaxN9XeQodV37ZMXeQVhmJY5hGDtQ_IGZ2aHjIrcdn5/s1280/event4688_elastic2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"474\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiR8xVyCI_O2cVT3PYT_NhsriaL1xzMD7sWNTzfCbFpVUWEB9GJOwiHp7DV0k4gvXTjKRNYVeuFIEv5G7bdx_g4zugDtWe_wo_Yygbse6i8ITKJBCPvGODNhnR5vIjst_akA_URGMs4OY2ycgWM4DaxN9XeQodV37ZMXeQVhmJY5hGDtQ_IGZ2aHjIrcdn5/s520/event4688_elastic2.png\" width=\"520\" /></a></div><br />\n<div>이벤트 1은 target만 보면 됨. sysmon 괜히 따로 만든 게 아니구나<span style=\"font-size: x-small;\">(..)</span></div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgg-1_ijf8mKXyQlyOwV0hyphenhyphen935v42bO8fGn776iS5Jft__-cBOhojA70pTEKlov5llIZvd31bCjXfnnXAxs9uAedZ8cKQ0o0PsYTezjFBqi82hiJQONWFMyeGIgx0tdjVROpAUGqOMPxGghRTZGRT9w_vuG4Cywnp09Lmrr5Dz-PGmPH8ovbjyhBN1Wu382/s1280/event1_splunk2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"607\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgg-1_ijf8mKXyQlyOwV0hyphenhyphen935v42bO8fGn776iS5Jft__-cBOhojA70pTEKlov5llIZvd31bCjXfnnXAxs9uAedZ8cKQ0o0PsYTezjFBqi82hiJQONWFMyeGIgx0tdjVROpAUGqOMPxGghRTZGRT9w_vuG4Cywnp09Lmrr5Dz-PGmPH8ovbjyhBN1Wu382/s520/event1_splunk2.png\" width=\"520\" /></a></div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjPKrgBIm9WHAOkZ-8n_DbQRQseVcFqyViGW6E99lIAIuYdooSdJJ6y6A8G2GmNeOinhm6DgSWjmcD-x8aJNYQ9-K0x0qMS_YvVHbi09uT-N_a4pfNFLaBXCdge33ELGZ-FQ2iLjPOQmDeRFWqC8Au7c3VmjQ3lZyFlkFcEdErmnGYsdj3l7r5QYzwC6Zbl/s1280/event1_elastic2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"474\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjPKrgBIm9WHAOkZ-8n_DbQRQseVcFqyViGW6E99lIAIuYdooSdJJ6y6A8G2GmNeOinhm6DgSWjmcD-x8aJNYQ9-K0x0qMS_YvVHbi09uT-N_a4pfNFLaBXCdge33ELGZ-FQ2iLjPOQmDeRFWqC8Au7c3VmjQ3lZyFlkFcEdErmnGYsdj3l7r5QYzwC6Zbl/s520/event1_elastic2.png\" width=\"520\" /></a></div><br />\n<div>이벤트 수집량은 엘라스틱이 살짝 더 많다. <a href=\"https://docs.splunk.com/Documentation/Splunk/8.1.2/Admin/Inputsconf#Windows_Event_Log_Monitor\" target=\"_blank\">checkpointInterval</a>을 더 줄여야 하나? 계정 정보 관점에서 필요한 정보 알아서 판단하라는 스플렁크와 나름 맥락에 맞는 user.name 정보를 보여주는 친절한 엘라스틱.</div><div><br /></div><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2023/02/blog-post.html\">엘라스틱의 윈도우 이벤트 계정 정보</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/02/blog-post_6.html\">스플렁크의 윈도우 이벤트 계정 정보</a></li></ul></div></div>",
        "contentSnippet": "윈도우 주요 이벤트 몇몇은 작업 주관자를 의미하는 subject와 작업 대상인 target 정보를 제공한다. 다음은 윈도우 기본 이벤트 4688. target 정보 누락 발생. (subject와 target이 같다는 의미인 것 같기는 한데)\n\n\n\n\n\n\n\n\n다음은 sysmon 이벤트 1. 정보 누락이 발생하지 않는다. 4688 답답해서 개선한 모양.\n\n\n\n\n\n\n\n\n부모(services.exe), 자식(svchost.exe) 모두 사용자 의도와 관계없이 실행되는, 윈도우 자체인 시스템 프로세스인데 왜 administrator가 등장하는지는 모르겠다. 내가 멍청한 게 아니라 윈도우가 복잡한거다\n\n\n사용자 모드 테스트\n\n\n일반 사용자 권한으로 메모장을 실행해봤다. 다음은 이벤트 4688. 관리자로 실행했을 땐 subject, 일반 사용자는 target을 봐야 한다.\n\n\n\n\n\n\n\n이벤트 1은 target만 보면 됨. sysmon 괜히 따로 만든 게 아니구나(..)\n\n\n\n\n\n\n\n이벤트 수집량은 엘라스틱이 살짝 더 많다. checkpointInterval을 더 줄여야 하나? 계정 정보 관점에서 필요한 정보 알아서 판단하라는 스플렁크와 나름 맥락에 맞는 user.name 정보를 보여주는 친절한 엘라스틱.\n\n\n관련 글\n\n엘라스틱의 윈도우 이벤트 계정 정보\n스플렁크의 윈도우 이벤트 계정 정보",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-3993482382563122761",
        "isoDate": "2024-07-24T07:43:00.004Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕홍",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성희",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강성훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": [
      {
        "creator": "bahamoth",
        "title": "지난 날을 반성하는 AWS Solutions Architect Associate 시험 후기",
        "link": "https://01010011.blog/2024/07/24/%ec%a7%80%eb%82%9c-%eb%82%a0%ec%9d%84-%eb%b0%98%ec%84%b1%ed%95%98%eb%8a%94-aws-solutions-architect-associate-%ec%8b%9c%ed%97%98-%ed%9b%84%ea%b8%b0/",
        "pubDate": "Wed, 24 Jul 2024 12:22:59 +0000",
        "content:encodedSnippet": "무려 5년 가까이 AWS 에서 서비스를 하고 있었지만 부끄럽게도 이제야 AWS Solutions Architect Associate (이하 SAA)시험을 치렀다. SAA 시험의 내용이나 난이도, 합격 방법 같은 글은 무수히 많기도 하고, 공부 방법이 까다롭거나 한 시험도 아니기 때문에 나는 좀 다른 글을 써볼까 한다. 우물 안 개구리의 반성문이랄까?\n나는 왜 5년 동안 SAA test를 보지 않았는가? – Platform Lock-in 이라는 핑계\n내가 맡은 서비스는 대략 5년 가까이 AWS에서 운영중이다. 5년이면 AWS의 무수한 운영 노하우나 비용 최적화 방안, 아키텍처 설계에 대해 빠삭하게 알만도 한데, 부끄럽게도 1~2년 전 까지는 AWS를 그리 잘 알지 못했다.\nAWS를 잘 몰라도 되는 핑계는 여럿 있었다. 운영 부서가 따로 존재하기 때문에 직접 AWS 콘솔에 들어가 무언가를 할 일이 별로 없었기도 하고, k8s 클러스터를 EC2에 구성해 두었기 때문에 AWS를 잘 몰라도 서비스 운영이 가능했다.\n돌이켜볼 때, 가장 고약한 핑계는 “Platform Lock-in 을 경계하는 아키텍처”였다. AWS 특정 서비스에 Lock-in이 되어 버리면 나중에 다른 클라우드 제공자로 넘어가고 싶어도 넘어갈 수가 없다. Lambda 나 SQS 대신 클라우드 네이티브 스택 만으로 서비스를 구성해야 언제든 AWS를 버리고 Azure 나 GCP 로 사뿐히 넘어갈 수 있다. 플랫폼 중립적인 기술만으로 클라우드를 사용한다니 얼핏 생각해보면 꽤나 일리있는 말인 것 같다.\nAWS나 GCP 혹은 Azure 에 플랫폼 중립적으로 구성, 수 년째 운영중인 서비스가 있다고 가정해보자. 클라우드 락인 요소가 없는 서비스라고 해서 IDC나 혹은 다른 클라우드에 마이그레이션을 하는 작업이 정말로 간단한 일일까?\n아무리 플랫폼 중립적인 기술로 서비스를 구성하였더라도 운영중인 서비스, 더우기 수 년간 쌓인 데이터가 고이 보관된 서비스의 클라우드 제공자를 특별한 이유 없이 손바닥 뒤집듯 바꾸는 것은 굳이 해서는 안될 일에 가깝다. 잘되어야 본전이고 실수라도 하면 일어나지 않았을 장애를 유발하는, 리스크의 상방이 열려있는 행위를 굳이 시간과 비용을 들여 한다는건 그리 좋은 선택지가 아니다. 지나고 나서야 드는 생각이지만 “Platform Lock-in”을 핑계로 사용중인 클라우드만의 우수한 기능을 사용하지 않는다는건 바보같은 짓이다. 어차피 당신은 지금 쓰고 있는 클라우드를 떠날 수 없다.(정확히는 굳이 떠날 필요가 없다.)\neks와 karpenter를 도입하고 클라우드 비용 20% 절감한 건에 관하여\n위에서 잠깐 언급했지만 1년 전만 해도 우리 서비스는 eks 대신 EC2에 클러스터를 직접 구성하는 방식이었다. 어느 정도 규모 있는 회사라면 관리부서에서 직접 인프라를 관리하기 마련이기에, k8s 클러스터 관리도 인프라 부서에서 한다. 보통은 표준화된 방법으로 관리를 하다보니 말 그대로 AWS에서 EC2 VM만 가져다 쓴 셈이지 AWS 클라우드만의 솔루션이나 기능은 왠만해선 잘 쓰지 않았다.\n그러다 우연한 기회에 EC2에 구성한 클러스터를 eks로 전환할 일이 있었는데, 기왕 전환하는 김에 karpenter 도 함께 도입하였다. AWS에서 야심차게 내놓은 오픈소스 클러스터 오토스케일러가 어떤지 궁금하기도 했다.\n놀랍게도!! karpenter 도입 이후 클라우드 비용이 20%가 넘게 줄어들었다. 데이터 저장구조나 코드, 아키텍처를 최적화하지 않고도 이렇게 간단히 클라우드 비용을 낮출 수 있다니! 맛난 공짜점심을 먹으며 어렴풋이 이런 생각이 들었다. \n“내가 AWS를 너무 몰랐구나.”\n마음 한 켠이 내키지 않는 농심 라면 스펙 외우기 \n플랫폼 중립적인 기술만으로 서비스를 구성한다는 회사의 방침도 방침이지만, 얼마 전까지는 나 역시도 이런 플랫폼 중립적인 아키텍처에 동의하는 바였다. 특히 AWS 특유의 촌스러운 서비스 명칭을 별도로 시간내서 공부해야 한다는게 마음 한 켠이 내키지 않았다. 내가 왜 굳이 SageMaker 나 OpenSearch, SQS, CloudFormation 같은 고유명사를 외워가며 이 서비스의 역할이 무엇인지 알아야 하나. 이건 마치 슈퍼에 진열된 라면의 특징을 외우는 것과 다를 바 없지 않나. 나는 나만의 라면 제조사 브랜드 중립적인 라면 끓이기 레시피를 선호한다고.\n농심 사리곰탕면의 나트륨 함량은 16g 이고 우윳빛 사골국 맛이 난다던지, 콕콕 스파게티의 열량은 284kcal 이라 한 사발만으로 부족하니 1.5사발을 해야 한다던지 등의 지식을 외우는 사람은 없잖아?\n사실 이 글을 쓰는 이유는 혹시라도 AWS 서비스를 알아가는 것에 대해 나와 같은 이유로 거부감을 가지는 사람이 있다면 지금이라도 생각을 바꾸기 바라는 마음에서다. 수십 년 째 클라우드 서비스 제공자 업계 부동의 1위인 업체에서 만든 서비스의 기능과 목적, 활용 사례를 알아보는 것 만으로도 많은 공부가 된다. 교만했던 나는 이 사실을 SAA 를 준비하면서 알게 되었다.\n그러니까 S3 라던지 SQS, Lambda 같은 것들은 사리곰탕면 같은 고유명사가 아니라 대일밴드나 에스컬레이터처럼 보통명사화 된 제품들이라는거다.\n다음은 AWS 에서 발간한 백서 “AWS Well-Architected Framework”의 링크다. 무려 910 페이지나 되는 글이라 쉽지 않겠지만 클라우드 환경에서의 설계 원칙이 무엇인지, AWS는 어떤 요소들을 중요하게 생각하는지 알 수 있는 글이기에 클라우드를 사용하여 서비스를 개발하는 아키텍트거나, 아키텍트를 꿈꾸는 사람, 그리고 SAA를 준비하는 사람이라면 일독을 권한다. 꼼꼼히 정독한다기보단 AWS에서 중요하게 여기는 설계 원칙과 모범 사례가 무엇인지 훑는 정도로 참고하면 적당할 듯 하다.\nhttps://docs.aws.amazon.com/ko_kr/wellarchitected/latest/framework/wellarchitected-framework.pdf#welcome\nChatGPT vs Claude – LLM과 함께 공부하는 SAA\nSAA를 준비한 기간은 대략 2주 정도이다. 아무래도 직장생활을 하면서 시험을 준비하다보니 많은 시간을 쏟기는 어렵다. 때문에 내가 선택한 공부 방법은 비용을 지불하면서라도 공부를 편하게 하는 것이었다. \nAWS Skill Builder 를 구독하면($29/월) 60문항 짜리 연습문제를 풀어볼 수 있는데, 이런 식으로 문제를 풀어봐야 SAA 시험이 어떤 식으로 출제되는지 감을 잡을 수 있다.\nExam Prep Enhanced Course: AWS Certified Solutions Architect – Associate(SAA-C03) 가 유료 강의이고 대부분의 내용이 유사하나 연습문제 갯수가 다르다(무료: 15문제 vs 유료: 60문제)\n실제 시험이 75문제(이중 15문제는 점수에 미포함, 실제론 60문제)이므로 60문제 짜리를 풀어봐야 시험에 가깝게 대비를 해볼 수가 있다.\n\n\n\n\n\n\n\n\n결정적으로 많은 도움을 받았던 도구는 ChatGPT와 Claude 였다. 처음에는 GPT로 학습을 하다 가끔씩 결정적인 오류를 자연스럽게 설명하는 만행(?)을 저지르는 바람에 Claude로 변경하였지만…\n내가 주로 활용했던 방식은 다음과 같다.\n문제를 풀다 모르는 서비스나 용어가 나오면 해당 단어에 대한 설명을 질의\n범용적인 기술 혹은 오픈소스 중에 유사한 기술이 있다면 비교\n실질적인 사용 사례\n문제를 풀 때 Kinesis Firehose 라는게 나왔는데 이 서비스가 어떤 것인지 사용을 해보지 않아서 설명만으로는 감이 잘 오지 않았다. 찾아보니 스트리밍 데이터에 대한 분석에 활용된다길래 Apache Spark 와 유사한 서비스인지 질문하였다.\n\n\n\n\n\n\n\n\n몇 번의 질의를 거치니 logstash와 같은 데이터 파이프라인 도구라는 것을 알 수 있었다. 특히 이런 시험문제의 요점 정리를 할 때는 매우 유용하다. – 사실 LLM 시대에 외워서 따는 자격증이 무슨 큰 의미가 있겠냐마는 어쨋든 공부에 도움이 되는건 맞다.\n특히 인프라 운영 부서가 나뉘어져 있는 회사에서는 보안이나 인증, 설정 관련한 솔루션 – WAF, Cognito 나 Config 등 – 은 써볼 기회가 잘 없을텐데, 이런 경우 해당 서비스에 대한 대략적인 개념을 파악할 때 도움이 된다.\nCloudFront + ECS + Lambda + Fargate + SQS + S3 = 가장 효율적인 아키텍처라는 가스라이팅\nSAA를 준비하다보면서 느낀 점을 말해보자면, 자꾸 AWS 솔루션이 클라우드 아키텍처에서 구성할 수 있는 최고로 효율적인 방안이라는 가스라이팅을 당하게 된다는거다. 이런 문제가 자꾸 나온다. \n‘다음 중 관리 코스트가 가장 낮은 아키텍처는?’\n‘다음 중 비용 효율적인 아키텍처는?’\n‘처리시간이 오래 소요되는 요청을 효과적으로 해결하는 아키텍처는?’\n이때 전가의 보도처럼 등장하는 솔루션이 Lambda + SQS + S3 이다. 문제에 따라 가끔 CloudFront, ECS와 Fargate 를 곁들이기도 한다. 이런 문제풀이를 계속하다보면 어느새 비동기 처리 문제 = Lambda + SQS 가 떠오른다. 비용 효율적인 Fargate나 빠른 응답성을 제공하는 CloudFront + S3 조합도 있다.\n사실 같은 AWS 솔루션을 쓰더라도 1가지 문제를 풀기 위한 다양한 방법이 존재한다. 이를테면 이 글의 서두에서 언급한 eks + Karpenter 를 사용하면 EC2를 쓰더라도 ECS 나 Fargate 보다 비용 효율적으로 동작시킬 수 있다. 하지만 이런 객관식 문제들은 모든 아키텍처 구성과 트레이드 오프를 다룰 수 없기에 어쩔 수 없이 특정 솔루션에 편향되어 있는 측면이 있다.\n비대면 시험의 주의점 – OnVue 는 iPhone의 연속성 카메라를 지원하지 않는다.\n만일 당신이 SAA를 비대면으로 치를 마음이 있고, 맥북과 보조 모니터 환경을 구성해 시험을 볼 예정이라면 당신은 매우 운이 좋은 사람이다. SAA 비대면 시험 솔루션인 OnVue 는 맥북 + 아이폰 연속성 카메라 구성을 제대로 지원하지 않는다. 별도의 웹캠을 구하던가 아니면 보조 모니터 대신 맥북 내장 모니터와 내장 웹캠을 써라.\n나는 OnVue 와 맥북-iPhone 의 연속성 카메라 호환성 문제로 첫번째 시험은 15분 쯤 경과한 시점에 더이상 진행을 하지 못하고 종료되었다. 시험을 치르기 전에 OnVue는 나의 시험 환경에 문제가 없는지 체크를 한다. 브라우저가 떠있다던가, 모니터가 2대 이상이라던가, 웹캠이나 마이크가 제대로 설치되지 않았다던가 하는 문제들을 차례로 검사하는데, 이때 아이폰 연속성 카메라에 대해서는 별다른 문제를 삼지 않는다. 다만 시험 시작 후 약 15분 쯤 경과하면 커서가 무지개로 변하고 아무 것도 할 수 없게 된다.\n몇 문제 풀어보지도 못하고 Fail할 뻔 했지만, 다행히 OnVue 측에서 다시 시험을 볼 수 있도록 조치해 주었다.\n\n\n\n\n\n요약\nSAA 시험 준비하는데 2주 걸림. 경력이 좀 된다면 2주면 충분하겠지만 주니어 직장인이라면 2주가 부족할 수도 있음.\nAWS Skill Builder 에서 $29/월 하는 구독을 해서 연습문제와 동영상 강의를 보는 것이 도움이 됨.\n덤프는 절반 이상이 오답임. 문제만 참고하고 스스로 풀어야 함.\nLLM 은 모르는 개념이나 용어, 서비스를 요약, 비교, 설명해주는 훌륭한 도구임.\n맥북 + 아이폰 연속성 카메라는 비대면 테스트와 호환되지 않음.",
        "dc:creator": "bahamoth",
        "comments": "https://01010011.blog/2024/07/24/%ec%a7%80%eb%82%9c-%eb%82%a0%ec%9d%84-%eb%b0%98%ec%84%b1%ed%95%98%eb%8a%94-aws-solutions-architect-associate-%ec%8b%9c%ed%97%98-%ed%9b%84%ea%b8%b0/#respond",
        "content": "무려 5년 가까이 AWS 에서 서비스를 하고 있었지만 부끄럽게도 이제야 AWS Solutions Architect Associate (이하 SAA)시험을 치렀다. SAA 시험의 내용이나 난이도, 합격 방법 같은 글은 무수히 많기도 하고, 공부 방법이 까다롭거나 한 시험도 아니기 때문에 나는 좀 다른 글을 써볼까 한다. 우물 안 개구리의 반성문이랄까? 나는 왜 5년 동안 SAA test를 보지 않았는가? &#8211; Platform [&#8230;]",
        "contentSnippet": "무려 5년 가까이 AWS 에서 서비스를 하고 있었지만 부끄럽게도 이제야 AWS Solutions Architect Associate (이하 SAA)시험을 치렀다. SAA 시험의 내용이나 난이도, 합격 방법 같은 글은 무수히 많기도 하고, 공부 방법이 까다롭거나 한 시험도 아니기 때문에 나는 좀 다른 글을 써볼까 한다. 우물 안 개구리의 반성문이랄까? 나는 왜 5년 동안 SAA test를 보지 않았는가? – Platform […]",
        "guid": "https://01010011.blog/?p=2026",
        "categories": [
          "programming"
        ],
        "isoDate": "2024-07-24T12:22:59.000Z"
      }
    ]
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "우리가 잘 몰랐던 엑셀의 놀라운 기능 3가지",
        "link": "http://muzbox.tistory.com/483452",
        "pubDate": "Mon, 22 Jul 2024 14:08:48 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483452#entry483452comment",
        "content": "<p data-ke-size=\"size16\">엑셀 사용자를 위한 놀라운 팁 3가지! 업무 효율을 높이고 데이터 시각화를 개선하는 방법을 소개합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"엑셀 잘 몰랐던 기능 3가지.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"><span data-url=\"https://blog.kakaocdn.net/dn/cK1tYM/btsIIBbIV8E/hEOCiXUX7n0kb4mT8GTeH1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cK1tYM/btsIIBbIV8E/hEOCiXUX7n0kb4mT8GTeH1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cK1tYM/btsIIBbIV8E/hEOCiXUX7n0kb4mT8GTeH1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcK1tYM%2FbtsIIBbIV8E%2FhEOCiXUX7n0kb4mT8GTeH1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"엑셀 잘 몰랐던 기능 3가지.jpg\" data-origin-width=\"500\" data-origin-height=\"500\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;<br />&nbsp;엑셀은 많은 사람들이 일상적으로 사용하는 필수 도구 중 하나입니다. 그러나 이 강력한 프로그램에는 잘 알려지지 않은 유용한 기능들이 숨겨져 있습니다. 이 글에서는 여러분이 몰랐을 수도 있는 엑셀의 다섯 가지 빠른 팁을 소개합니다. 이 팁들은 데이터를 더 효과적으로 관리하고 시각화하는 데 큰 도움이 될 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>1. 키보드 단축키로 배열 빠르게 선택하기</b></h2>\n<p data-ke-size=\"size16\">엑셀에서 작업을 할 때, Ctrl+A 단축키는 매우 유용한 도구입니다. 많은 사람들이 이 단축키를 알고 있지만, 실제로 어떤 상황에서 어떻게 작동하는지에 대해 잘 모르는 경우가 많습니다. 이 단축키를 사용하면 특정 셀이나 데이터 범위를 빠르게 선택할 수 있어 작업 시간을 크게 줄일 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">우선, 셀을 하나 선택한 후 Ctrl+A를 눌러보세요. 선택한 셀이 독립적인 셀이라면, 즉 다른 셀과 연결되지 않은 셀이라면, 전체 스프레드시트가 선택됩니다. 이는 전체 시트를 한 번에 복사하거나 서식을 적용할 때 매우 유용합니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"CTRL A 02.png\" data-origin-width=\"786\" data-origin-height=\"401\"><span data-url=\"https://blog.kakaocdn.net/dn/wLtpS/btsIGZyp7rM/8Xvm9yOZBkecs1lC2IiAk1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/wLtpS/btsIGZyp7rM/8Xvm9yOZBkecs1lC2IiAk1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/wLtpS/btsIGZyp7rM/8Xvm9yOZBkecs1lC2IiAk1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FwLtpS%2FbtsIGZyp7rM%2F8Xvm9yOZBkecs1lC2IiAk1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"CTRL A 02.png\" data-origin-width=\"786\" data-origin-height=\"401\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;반면, 선택한 셀이 데이터 범위 내에 있거나 테이블의 일부라면, Ctrl+A를 눌렀을 때 해당 배열만 선택됩니다. 예를 들어, 데이터가 입력된 열이나 행이 있는 경우, 이 단축키를 사용하면 해당 데이터 범위만 선택되므로 특정 영역에만 서식을 적용하거나 데이터를 복사할 수 있습니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"CTRL A 01.png\" data-origin-width=\"694\" data-origin-height=\"313\"><span data-url=\"https://blog.kakaocdn.net/dn/q698f/btsIIlmEEdQ/tTLsi3fHN1nkrgEQJxjkhk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/q698f/btsIIlmEEdQ/tTLsi3fHN1nkrgEQJxjkhk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/q698f/btsIIlmEEdQ/tTLsi3fHN1nkrgEQJxjkhk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fq698f%2FbtsIIlmEEdQ%2FtTLsi3fHN1nkrgEQJxjkhk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"CTRL A 01.png\" data-origin-width=\"694\" data-origin-height=\"313\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이러한 기능을 활용하면 마우스를 사용하여 일일이 데이터를 선택할 필요 없이, 키보드만으로도 빠르고 정확하게 데이터를 관리할 수 있습니다. 또한, Ctrl+A를 두 번 연속으로 누르면 처음에는 데이터 배열만 선택되지만, 다시 한 번 누르면 전체 시트가 선택됩니다. 이는 대규모 데이터 작업을 할 때 특히 유용합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 단축키를 익히고 나면 엑셀에서의 작업 효율성이 눈에 띄게 향상될 것입니다. 반복적인 작업을 줄이고, 더 중요한 분석 작업에 집중할 수 있게 도와줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>2. 슬라이서를 추가하여 데이터 빠르게 필터링하기</b></h2>\n<p data-ke-size=\"size16\">&nbsp;엑셀에서 데이터를 테이블 형식으로 구성할 때, 기본적으로 각 열의 맨 위에 필터 버튼이 자동으로 나타납니다. 필터 버튼을 사용하면 특정 데이터를 검색하고 분석하는 데 유용하지만, 특정 열을 자주 필터링해야 하는 경우 슬라이서를 추가하는 것이 더 효율적입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">슬라이서는 테이블의 특정 열에 대한 필터링 옵션을 제공하는 도구입니다. 시각적으로 직관적이어서 데이터 분석 작업을 보다 쉽고 빠르게 수행할 수 있게 도와줍니다. 예를 들어, 매출 데이터가 포함된 테이블에서 특정 매장이나 날짜 범위를 자주 필터링해야 한다면, 해당 열에 슬라이서를 추가하여 한눈에 필요한 데이터를 선택할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">슬라이서를 추가하는 방법은 간단합니다. 먼저, 테이블의 아무 셀이나 선택한 상태에서 리본 메뉴의 '표 디자인' 탭을 클릭합니다. 그런 다음 '슬라이서 삽입' 버튼을 클릭하면 슬라이서를 추가할 수 있는 창이 나타납니다. 여기서 슬라이서를 추가할 열을 선택하고 '확인'을 클릭하면 슬라이서가 테이블에 추가됩니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"슬라이서 추가 01.png\" data-origin-width=\"951\" data-origin-height=\"697\"><span data-url=\"https://blog.kakaocdn.net/dn/VUtzV/btsIJcCMjRZ/vyP9LVzSy5NjmKzjNyFAM0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/VUtzV/btsIJcCMjRZ/vyP9LVzSy5NjmKzjNyFAM0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/VUtzV/btsIJcCMjRZ/vyP9LVzSy5NjmKzjNyFAM0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FVUtzV%2FbtsIJcCMjRZ%2FvyP9LVzSy5NjmKzjNyFAM0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"슬라이서 추가 01.png\" data-origin-width=\"951\" data-origin-height=\"697\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">추가된 슬라이서는 마우스로 크기를 조정하거나 위치를 변경할 수 있으며, 슬라이서 탭을 통해 다양한 설정을 조정할 수 있습니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"슬라이서 추가 02.png\" data-origin-width=\"951\" data-origin-height=\"618\"><span data-url=\"https://blog.kakaocdn.net/dn/NvMBG/btsIHLe4zFE/N4e6YVwVHiEYuPAJFEPDn1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/NvMBG/btsIHLe4zFE/N4e6YVwVHiEYuPAJFEPDn1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/NvMBG/btsIHLe4zFE/N4e6YVwVHiEYuPAJFEPDn1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FNvMBG%2FbtsIHLe4zFE%2FN4e6YVwVHiEYuPAJFEPDn1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"슬라이서 추가 02.png\" data-origin-width=\"951\" data-origin-height=\"618\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">슬라이서의 제목을 제거하거나, 필터링 옵션을 세부적으로 설정할 수도 있습니다. 또한, Ctrl 키를 눌러 여러 항목을 동시에 선택하거나, Alt+C를 눌러 선택된 항목을 모두 지울 수 있어 매우 유용합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이렇게 슬라이서를 활용하면 데이터 필터링 작업이 훨씬 간편해지며, 분석 작업의 효율성이 크게 향상됩니다. 특히, 대규모 데이터를 다룰 때 여러 열을 동시에 필터링해야 하는 경우 슬라이서의 가치는 더욱 두드러집니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b>3. 스파크라인을 사용하여 트렌드 시각화하기</b></h2>\n<p data-ke-size=\"size16\">&nbsp;엑셀에서 데이터를 시각화하는 방법 중 가장 간단하고 효과적인 방법 중 하나는 스파크라인을 사용하는 것입니다. 스파크라인은 셀 내부에 삽입되는 작은 차트로, 데이터의 트렌드를 한눈에 파악할 수 있도록 도와줍니다. 일반적인 차트와 달리, 스파크라인은 공간을 많이 차지하지 않으면서도 중요한 정보를 시각적으로 전달할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;스파크라인에는 세 가지 주요 유형이 있습니다. 첫 번째는 '선 스파크라인'으로, 데이터의 연속적인 변화를 선 그래프로 표현합니다. 두 번째는 '열 스파크라인'으로, 각 데이터 포인트를 작은 막대 그래프로 나타내어 비교하기 쉽게 합니다. 세 번째는 '이익/손실 스파크라인'으로, 양수와 음수를 강조하여 수익과 손실을 명확히 구분할 수 있게 해줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;스파크라인을 추가하려면 먼저 데이터를 시각화할 셀 범위를 선택합니다. 그런 다음 리본 메뉴의 '삽입' 탭에서 '스파크라인' 그룹을 찾아 '선', '열', 또는 '승패' 중 하나를 선택합니다. 스파크라인을 삽입할 위치와 데이터를 선택한 후 '확인'을 클릭하면, 선택한 셀에 스파크라인이 추가됩니다. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"스파크라인 01 .png\" data-origin-width=\"944\" data-origin-height=\"608\"><span data-url=\"https://blog.kakaocdn.net/dn/bqlu3b/btsIHU3Y7tb/ERzq0uxVzveGUiNaLwFdT1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bqlu3b/btsIHU3Y7tb/ERzq0uxVzveGUiNaLwFdT1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bqlu3b/btsIHU3Y7tb/ERzq0uxVzveGUiNaLwFdT1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbqlu3b%2FbtsIHU3Y7tb%2FERzq0uxVzveGUiNaLwFdT1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"스파크라인 01 .png\" data-origin-width=\"944\" data-origin-height=\"608\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"스파크라인 02.png\" data-origin-width=\"1068\" data-origin-height=\"653\"><span data-url=\"https://blog.kakaocdn.net/dn/bTRB6X/btsIH1ory3V/L45bGkd1Hf3nvsUesL8Ut1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bTRB6X/btsIH1ory3V/L45bGkd1Hf3nvsUesL8Ut1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bTRB6X/btsIH1ory3V/L45bGkd1Hf3nvsUesL8Ut1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbTRB6X%2FbtsIH1ory3V%2FL45bGkd1Hf3nvsUesL8Ut1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"스파크라인 02.png\" data-origin-width=\"1068\" data-origin-height=\"653\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"스파크라인 03.png\" data-origin-width=\"1030\" data-origin-height=\"557\"><span data-url=\"https://blog.kakaocdn.net/dn/BQSap/btsIHYec5vX/peU1Py8rTy3yDymtmlLsAk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/BQSap/btsIHYec5vX/peU1Py8rTy3yDymtmlLsAk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/BQSap/btsIHYec5vX/peU1Py8rTy3yDymtmlLsAk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FBQSap%2FbtsIHYec5vX%2FpeU1Py8rTy3yDymtmlLsAk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"스파크라인 03.png\" data-origin-width=\"1030\" data-origin-height=\"557\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">스파크라인을 사용하면 시트의 다른 데이터와 함께 시각적으로 중요한 트렌드를 쉽게 확인할 수 있습니다. 예를 들어, 주간 매출 데이터를 분석할 때, 각 매장의 매출 변화를 스파크라인으로 표시하면 어느 매장이 상승세에 있는지, 어떤 매장이 하락세에 있는지를 한눈에 파악할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한, 스파크라인의 크기나 색상을 조정하여 가독성을 높일 수 있습니다. 셀의 크기를 조정하면 스파크라인도 자동으로 크기가 조정되며, 다양한 색상 옵션을 사용하여 데이터의 의미를 강조할 수 있습니다. 이렇게 하면 스프레드시트가 더 깔끔하고 전문적으로 보이게 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">스파크라인은 데이터 분석과 보고서 작성 시 매우 유용한 도구입니다. 복잡한 차트를 사용하지 않고도 간단하게 데이터를 시각화할 수 있어, 빠른 의사결정에 도움을 줄 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\"><b><span style=\"color: #7e98b1;\"><i>엑셀의 숨겨진 기능들을 활용하면 데이터를 더 효율적으로 관리하고 시각화할 수 있습니다. </i></span></b></p>\n<p data-ke-size=\"size18\"><b><span style=\"color: #7e98b1;\"><i>이번에 소개한 3가지 팁을 실무에 적용해 보세요. 엑셀 사용 능력을 한 단계 업그레이드할 수 있을 것입니다. </i></span></b></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=4RW5-y2VGxA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ytNdP/hyWCHvPzGl/4VXnn0dpeC1hXvxWRukv60/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"우리가 잘 몰랐던 엑셀의 놀라운 기능 3가지 #엑셀기초 #엑셀배우기\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/4RW5-y2VGxA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "엑셀 사용자를 위한 놀라운 팁 3가지! 업무 효율을 높이고 데이터 시각화를 개선하는 방법을 소개합니다.\n \n\n\n \n \n 엑셀은 많은 사람들이 일상적으로 사용하는 필수 도구 중 하나입니다. 그러나 이 강력한 프로그램에는 잘 알려지지 않은 유용한 기능들이 숨겨져 있습니다. 이 글에서는 여러분이 몰랐을 수도 있는 엑셀의 다섯 가지 빠른 팁을 소개합니다. 이 팁들은 데이터를 더 효과적으로 관리하고 시각화하는 데 큰 도움이 될 것입니다.\n \n1. 키보드 단축키로 배열 빠르게 선택하기\n엑셀에서 작업을 할 때, Ctrl+A 단축키는 매우 유용한 도구입니다. 많은 사람들이 이 단축키를 알고 있지만, 실제로 어떤 상황에서 어떻게 작동하는지에 대해 잘 모르는 경우가 많습니다. 이 단축키를 사용하면 특정 셀이나 데이터 범위를 빠르게 선택할 수 있어 작업 시간을 크게 줄일 수 있습니다.\n \n우선, 셀을 하나 선택한 후 Ctrl+A를 눌러보세요. 선택한 셀이 독립적인 셀이라면, 즉 다른 셀과 연결되지 않은 셀이라면, 전체 스프레드시트가 선택됩니다. 이는 전체 시트를 한 번에 복사하거나 서식을 적용할 때 매우 유용합니다. ▼\n\n\n \n \n 반면, 선택한 셀이 데이터 범위 내에 있거나 테이블의 일부라면, Ctrl+A를 눌렀을 때 해당 배열만 선택됩니다. 예를 들어, 데이터가 입력된 열이나 행이 있는 경우, 이 단축키를 사용하면 해당 데이터 범위만 선택되므로 특정 영역에만 서식을 적용하거나 데이터를 복사할 수 있습니다. ▼\n\n\n \n이러한 기능을 활용하면 마우스를 사용하여 일일이 데이터를 선택할 필요 없이, 키보드만으로도 빠르고 정확하게 데이터를 관리할 수 있습니다. 또한, Ctrl+A를 두 번 연속으로 누르면 처음에는 데이터 배열만 선택되지만, 다시 한 번 누르면 전체 시트가 선택됩니다. 이는 대규모 데이터 작업을 할 때 특히 유용합니다.\n \n이 단축키를 익히고 나면 엑셀에서의 작업 효율성이 눈에 띄게 향상될 것입니다. 반복적인 작업을 줄이고, 더 중요한 분석 작업에 집중할 수 있게 도와줍니다.\n \n \n2. 슬라이서를 추가하여 데이터 빠르게 필터링하기\n 엑셀에서 데이터를 테이블 형식으로 구성할 때, 기본적으로 각 열의 맨 위에 필터 버튼이 자동으로 나타납니다. 필터 버튼을 사용하면 특정 데이터를 검색하고 분석하는 데 유용하지만, 특정 열을 자주 필터링해야 하는 경우 슬라이서를 추가하는 것이 더 효율적입니다.\n \n슬라이서는 테이블의 특정 열에 대한 필터링 옵션을 제공하는 도구입니다. 시각적으로 직관적이어서 데이터 분석 작업을 보다 쉽고 빠르게 수행할 수 있게 도와줍니다. 예를 들어, 매출 데이터가 포함된 테이블에서 특정 매장이나 날짜 범위를 자주 필터링해야 한다면, 해당 열에 슬라이서를 추가하여 한눈에 필요한 데이터를 선택할 수 있습니다.\n \n슬라이서를 추가하는 방법은 간단합니다. 먼저, 테이블의 아무 셀이나 선택한 상태에서 리본 메뉴의 '표 디자인' 탭을 클릭합니다. 그런 다음 '슬라이서 삽입' 버튼을 클릭하면 슬라이서를 추가할 수 있는 창이 나타납니다. 여기서 슬라이서를 추가할 열을 선택하고 '확인'을 클릭하면 슬라이서가 테이블에 추가됩니다. ▼\n\n\n \n추가된 슬라이서는 마우스로 크기를 조정하거나 위치를 변경할 수 있으며, 슬라이서 탭을 통해 다양한 설정을 조정할 수 있습니다. ▼\n\n\n \n \n슬라이서의 제목을 제거하거나, 필터링 옵션을 세부적으로 설정할 수도 있습니다. 또한, Ctrl 키를 눌러 여러 항목을 동시에 선택하거나, Alt+C를 눌러 선택된 항목을 모두 지울 수 있어 매우 유용합니다.\n \n이렇게 슬라이서를 활용하면 데이터 필터링 작업이 훨씬 간편해지며, 분석 작업의 효율성이 크게 향상됩니다. 특히, 대규모 데이터를 다룰 때 여러 열을 동시에 필터링해야 하는 경우 슬라이서의 가치는 더욱 두드러집니다.\n \n \n3. 스파크라인을 사용하여 트렌드 시각화하기\n 엑셀에서 데이터를 시각화하는 방법 중 가장 간단하고 효과적인 방법 중 하나는 스파크라인을 사용하는 것입니다. 스파크라인은 셀 내부에 삽입되는 작은 차트로, 데이터의 트렌드를 한눈에 파악할 수 있도록 도와줍니다. 일반적인 차트와 달리, 스파크라인은 공간을 많이 차지하지 않으면서도 중요한 정보를 시각적으로 전달할 수 있습니다.\n \n 스파크라인에는 세 가지 주요 유형이 있습니다. 첫 번째는 '선 스파크라인'으로, 데이터의 연속적인 변화를 선 그래프로 표현합니다. 두 번째는 '열 스파크라인'으로, 각 데이터 포인트를 작은 막대 그래프로 나타내어 비교하기 쉽게 합니다. 세 번째는 '이익/손실 스파크라인'으로, 양수와 음수를 강조하여 수익과 손실을 명확히 구분할 수 있게 해줍니다.\n \n 스파크라인을 추가하려면 먼저 데이터를 시각화할 셀 범위를 선택합니다. 그런 다음 리본 메뉴의 '삽입' 탭에서 '스파크라인' 그룹을 찾아 '선', '열', 또는 '승패' 중 하나를 선택합니다. 스파크라인을 삽입할 위치와 데이터를 선택한 후 '확인'을 클릭하면, 선택한 셀에 스파크라인이 추가됩니다. ▼\n\n\n\n\n스파크라인을 사용하면 시트의 다른 데이터와 함께 시각적으로 중요한 트렌드를 쉽게 확인할 수 있습니다. 예를 들어, 주간 매출 데이터를 분석할 때, 각 매장의 매출 변화를 스파크라인으로 표시하면 어느 매장이 상승세에 있는지, 어떤 매장이 하락세에 있는지를 한눈에 파악할 수 있습니다.\n \n또한, 스파크라인의 크기나 색상을 조정하여 가독성을 높일 수 있습니다. 셀의 크기를 조정하면 스파크라인도 자동으로 크기가 조정되며, 다양한 색상 옵션을 사용하여 데이터의 의미를 강조할 수 있습니다. 이렇게 하면 스프레드시트가 더 깔끔하고 전문적으로 보이게 됩니다.\n \n스파크라인은 데이터 분석과 보고서 작성 시 매우 유용한 도구입니다. 복잡한 차트를 사용하지 않고도 간단하게 데이터를 시각화할 수 있어, 빠른 의사결정에 도움을 줄 수 있습니다.\n \n엑셀의 숨겨진 기능들을 활용하면 데이터를 더 효율적으로 관리하고 시각화할 수 있습니다. \n이번에 소개한 3가지 팁을 실무에 적용해 보세요. 엑셀 사용 능력을 한 단계 업그레이드할 수 있을 것입니다.",
        "guid": "http://muzbox.tistory.com/483452",
        "categories": [
          "오피스 프로그램 사용법/엑셀",
          "데이터 시각화",
          "엑셀 기능",
          "엑셀 스파크라인",
          "엑셀 슬라이서",
          "엑셀 팁",
          "엑셀꿀팁",
          "엑셀사용법"
        ],
        "isoDate": "2024-07-22T05:08:48.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": [
      {
        "creator": "늑돌이",
        "title": "미니스포럼, 고성능 미니PC MS-A1 출시 - 라이젠 8700G AM5 플랫폼",
        "link": "http://lazion.com/2513719",
        "pubDate": "Wed, 24 Jul 2024 18:59:58 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513719#entry2513719comment",
        "content": "<h3 data-ke-size=\"size23\">미니PC로 유명한 <b>미니스포럼(Minisforum)</b>에서 <b>AMD 라이젠7 8700G</b>를 지원하는 <b>MS-A1</b>을 출시합니다.</h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"006 - 2048x.jpg\" data-origin-width=\"2048\" data-origin-height=\"1154\"><span data-url=\"https://blog.kakaocdn.net/dn/cjyXrP/btsIMkA6hPF/ckKhyk1W6JuRDGkCqGOxO0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cjyXrP/btsIMkA6hPF/ckKhyk1W6JuRDGkCqGOxO0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cjyXrP/btsIMkA6hPF/ckKhyk1W6JuRDGkCqGOxO0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcjyXrP%2FbtsIMkA6hPF%2FckKhyk1W6JuRDGkCqGOxO0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"006 - 2048x.jpg\" data-origin-width=\"2048\" data-origin-height=\"1154\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>Minisforum </b></span><span style=\"color: #006dd7;\"><b>MS-A1의 주요 특징</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"007 - 1920x.jpg\" data-origin-width=\"1920\" data-origin-height=\"1187\"><span data-url=\"https://blog.kakaocdn.net/dn/b0cqX5/btsIKVCgwj5/nLZJVsv0LhIXgaEYcDiKBk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/b0cqX5/btsIKVCgwj5/nLZJVsv0LhIXgaEYcDiKBk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/b0cqX5/btsIKVCgwj5/nLZJVsv0LhIXgaEYcDiKBk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb0cqX5%2FbtsIKVCgwj5%2FnLZJVsv0LhIXgaEYcDiKBk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"007 - 1920x.jpg\" data-origin-width=\"1920\" data-origin-height=\"1187\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미니스포럼의 MS-A1은 가장 중요한 특징은 바로 높은 성능입니다. 노트북 CPU를 쓰는 경우가 많은 다른 미니PC와는 달리 MS-A1은 데스크탑 프로세서를 활용합니다. 특히 강력한 내장 GPU 성능으로 각광받고 있는 AMD 라이젠7 8700G 등 AM5 플랫폼을 지원하여 고성능을 구현합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_001 - 3-1.png\" data-origin-width=\"1600\" data-origin-height=\"924\"><span data-url=\"https://blog.kakaocdn.net/dn/wOCSF/btsIMHbxyi9/FdtFDNPekzN5l7GGBXWBL1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/wOCSF/btsIMHbxyi9/FdtFDNPekzN5l7GGBXWBL1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/wOCSF/btsIMHbxyi9/FdtFDNPekzN5l7GGBXWBL1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FwOCSF%2FbtsIMHbxyi9%2FFdtFDNPekzN5l7GGBXWBL1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_001 - 3-1.png\" data-origin-width=\"1600\" data-origin-height=\"924\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">지금은 최대 AMD 라이젠7 8700G까지 CPU를 탑재할 수 있으며 라이젠 9000번대 프로세서가 나오면 BIOS 업그레이드를 통해 지원할 에정입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미니PC임에도 불구하고 뛰어난 냉각 성능과<b> 폭넓은 확장성</b>을 자랑하는데, 저장소를 위한 M.2 PCIe 4.0 NVMe SSD 슬롯은 무려 네개나 갖추고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"016 - 12_5c0f7033-ea6b-4d9e-b17f-0d77f0ef2bf2.png\" data-origin-width=\"1600\" data-origin-height=\"686\"><span data-url=\"https://blog.kakaocdn.net/dn/bYkJ6U/btsIKBjLWck/VJSKN8uGx6aYkbXQBXfG40/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bYkJ6U/btsIKBjLWck/VJSKN8uGx6aYkbXQBXfG40/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bYkJ6U/btsIKBjLWck/VJSKN8uGx6aYkbXQBXfG40/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbYkJ6U%2FbtsIKBjLWck%2FVJSKN8uGx6aYkbXQBXfG40%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"016 - 12_5c0f7033-ea6b-4d9e-b17f-0d77f0ef2bf2.png\" data-origin-width=\"1600\" data-origin-height=\"686\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">전면에는 3.5mm의 콤보 오디오 잭과 USB 3.2 두개, USB 2.0 한개를 갖추고 있으며 후면에는 두개의 2.5Gbps 이더넷 단자가 준비되어 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"017 - 8_web.jpg\" data-origin-width=\"2000\" data-origin-height=\"1138\"><span data-url=\"https://blog.kakaocdn.net/dn/b1diep/btsIKALYB1z/mMhNEwZqzzu350gAhpCWH0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/b1diep/btsIKALYB1z/mMhNEwZqzzu350gAhpCWH0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/b1diep/btsIKALYB1z/mMhNEwZqzzu350gAhpCWH0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb1diep%2FbtsIKALYB1z%2FmMhNEwZqzzu350gAhpCWH0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"017 - 8_web.jpg\" data-origin-width=\"2000\" data-origin-height=\"1138\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">DP 2.0과 HDMI 2.1와 최대 40Gbps 속도를 지원하는 USB4 포트가 하나씩 있어서 최대 3개의 디스플레이와 동시 연결 가능합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"014 - 11_4efbf12a-9c51-44ba-865e-82edca18a2bc_web.jpg\" data-origin-width=\"2000\" data-origin-height=\"1125\"><span data-url=\"https://blog.kakaocdn.net/dn/c5RFXY/btsILffYQj5/CFGD0LpK5qxTZARvjnUBN1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c5RFXY/btsILffYQj5/CFGD0LpK5qxTZARvjnUBN1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/c5RFXY/btsILffYQj5/CFGD0LpK5qxTZARvjnUBN1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc5RFXY%2FbtsILffYQj5%2FCFGD0LpK5qxTZARvjnUBN1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"014 - 11_4efbf12a-9c51-44ba-865e-82edca18a2bc_web.jpg\" data-origin-width=\"2000\" data-origin-height=\"1125\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 밖에도 후면에는 USB 3.2와 USB 2.0 포트가 각각 하나씩 더 있으며 eGPU 연결을 위한 오큐링크(Oculink)도 제공합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"008 - 1200x.jpg\" data-origin-width=\"1200\" data-origin-height=\"675\"><span data-url=\"https://blog.kakaocdn.net/dn/d5jm5s/btsIKMep5cs/OGp3ffU8PKZNCJ2fHWMAb0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/d5jm5s/btsIKMep5cs/OGp3ffU8PKZNCJ2fHWMAb0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/d5jm5s/btsIKMep5cs/OGp3ffU8PKZNCJ2fHWMAb0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd5jm5s%2FbtsIKMep5cs%2FOGp3ffU8PKZNCJ2fHWMAb0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"008 - 1200x.jpg\" data-origin-width=\"1200\" data-origin-height=\"675\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고로 미니스포럼 MS-A1이 최대로 탑재할 수 있는 AMD 라이젠7 8700G는 8코어 16스레드의 데스크탑 CPU로 내장한 GPU인 Radeon 780M의 성능이 무척 뛰어난 것으로 잘 알려져 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>Minisforum MS-A1의 가격과 판매처?</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">현재 온라인 판매 중인 <b>미니스포럼 MS-A1의 가격</b>은 미국 달러 기준으로 다음과 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>베어본(CPU와 RAM, SSD, OS 없음) : <b>259달러(약 36만원)</b></li>\n<li>베어본+AMD Ryzen 7 8700G+32GB RAM+1TB SSD+Windows11 : <b>729달러(약 101만원)</b></li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">국가별 판매처는 다음과 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>미국 US store: <a href=\"https://t.co/tQbaamL8qx\"><span aria-hidden=\"true\">https://</span>s.minisforum.com/USms-a1</a></li>\n<li>유럽 EU store: <a href=\"https://t.co/LCDLGfEMpB\"><span aria-hidden=\"true\">https://</span>s.minisforum.com/DEms-a1</a></li>\n<li>일본 JP store: <a href=\"https://t.co/PDrKCr6niJ\"><span aria-hidden=\"true\">https://</span>s.minisforum.com/JPms-a1</a></li>\n<li>홍콩 HK store: <a href=\"https://t.co/NRRgqy1v2z\"><span aria-hidden=\"true\">https://</span>s.minisforum.com/HKms-a1</a></li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>Minisforum MS-A1의 주요 스펙(제원/사양)</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>CPU : 현재 <b>AMD Ryzen 7 8700G</b>까지 지원.<br /><b>라이젠 9000번대 프로세서의 경우 BIOS 업데이트를 통해 지원 예정</b>.</li>\n<li>칩셋 : AMD A300</li>\n<li>GPU : AMD Radeon Navi3 Graphics</li>\n<li>RAM : DDR5 Up to 5200MHz (듀얼 채널)</li>\n<li>SSD : <br />하단 - M.2&nbsp; 2280 SSD(PCIe 4.0x1), M.2&nbsp; 2280 SSD(PCIe 3.0x4)SSD <br />상단 - M.2&nbsp; 2280 SSD1(PCIe 4.0x4)<br />확장 - M.2&nbsp; U.2/2280 (PCIe 4.0x4)</li>\n<li>외부 연결 I/O<br />후면 : DC-IN Jack(19V/12.63A 240W), HDMI(4K@120Hz), DP(4K@144Hz), Oculink(PCIe 4.0x4), 타입C(Data+DP), 타입A(USB3.2 Gen2), 타입A(USB2.0), RJ45 (2.5G)x2(RTL8125BG)<br />전면 : 타입Ax2(USB3.2 Gen1), 타입A(USB2.0), 3.5mm 오디오 콤보 잭</li>\n<li>통신 포트 : M.2 2230(WiFi 6E 지원) / Bluetooth 5.2(PCIe-USB2)</li>\n<li>OS<b>: </b>Windows11 Home/Pro 64bit, Linux Ubuntu</li>\n</ul>\n<div class=\"notranslate\" style=\"all: initial;\">&nbsp;</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h4 data-ke-size=\"size20\">관련 글</h4>\n<figure id=\"og_1721815090263\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"인텔 N100 스틱PC, MINISFORUM S100(미니스포럼 S100) 출시\" data-og-description=\"초소형 PC를 만드는 미니스포럼(MINISFORUM)에서 S100이라는 이름으로 인텔 N100 프로세서가 들어간 스틱PC를 출시합니다.&nbsp;&nbsp;마치 좀 큰 USB 메모리스틱을 연상시키는 모양의 스틱PC는 주로 모니터 뒤에\" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513661\" data-og-url=\"https://lazion.com/2513661\" data-og-image=\"https://scrap.kakaocdn.net/dn/cZqUtP/hyWCMRXTyF/vqbp8lluk0Ne8XitTMK8lk/img.png?width=300&amp;height=300&amp;face=0_0_300_300,https://scrap.kakaocdn.net/dn/d3byEg/hyWGR48iM0/GKConAA71YsklAemKBTBs1/img.png?width=300&amp;height=300&amp;face=0_0_300_300,https://scrap.kakaocdn.net/dn/bbq2bs/hyWCIhHwLl/EINMhE4OC0n97G1UjvgER1/img.jpg?width=2000&amp;height=1125&amp;face=0_0_2000_1125\"><a href=\"https://lazion.com/2513661\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513661\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cZqUtP/hyWCMRXTyF/vqbp8lluk0Ne8XitTMK8lk/img.png?width=300&amp;height=300&amp;face=0_0_300_300,https://scrap.kakaocdn.net/dn/d3byEg/hyWGR48iM0/GKConAA71YsklAemKBTBs1/img.png?width=300&amp;height=300&amp;face=0_0_300_300,https://scrap.kakaocdn.net/dn/bbq2bs/hyWCIhHwLl/EINMhE4OC0n97G1UjvgER1/img.jpg?width=2000&amp;height=1125&amp;face=0_0_2000_1125');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">인텔 N100 스틱PC, MINISFORUM S100(미니스포럼 S100) 출시</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">초소형 PC를 만드는 미니스포럼(MINISFORUM)에서 S100이라는 이름으로 인텔 N100 프로세서가 들어간 스틱PC를 출시합니다.&nbsp;&nbsp;마치 좀 큰 USB 메모리스틱을 연상시키는 모양의 스틱PC는 주로 모니터 뒤에</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<figure id=\"og_1721815540877\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"클래식 맥(매킨토시) 닮은 아야네오 레트로 미니 PC(AYANEO Retro Mini PC) AM01\" data-og-description=\"기술이 발달하면서 더 높은 성능의 PC를 더 작은 크기로 만들 수 있게 되었습니다. 그 결과 나온 제품들이 미니 PC라 불리는 제품군이지요. 굳이 전통적인 데스크탑 형태를 띄지 않더라도 활용에\" data-og-host=\"lazion.com\" data-og-source-url=\"https://lazion.com/2513488\" data-og-url=\"https://lazion.com/2513488\" data-og-image=\"https://scrap.kakaocdn.net/dn/cCGYC2/hyWGNIqV08/8rYREKJQL8aSJbXYYY59h0/img.jpg?width=800&amp;height=450&amp;face=0_0_800_450,https://scrap.kakaocdn.net/dn/2xNph/hyWGRD3Hkt/C8j3WGzrQkhu1SGK8sY5kk/img.jpg?width=800&amp;height=450&amp;face=0_0_800_450,https://scrap.kakaocdn.net/dn/zv5Gg/hyWG3qXyFy/JkeZlTYc0aL1gxyVYLq6dk/img.jpg?width=1920&amp;height=1080&amp;face=0_0_1920_1080\"><a href=\"https://lazion.com/2513488\" rel=\"noopener\" data-source-url=\"https://lazion.com/2513488\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cCGYC2/hyWGNIqV08/8rYREKJQL8aSJbXYYY59h0/img.jpg?width=800&amp;height=450&amp;face=0_0_800_450,https://scrap.kakaocdn.net/dn/2xNph/hyWGRD3Hkt/C8j3WGzrQkhu1SGK8sY5kk/img.jpg?width=800&amp;height=450&amp;face=0_0_800_450,https://scrap.kakaocdn.net/dn/zv5Gg/hyWG3qXyFy/JkeZlTYc0aL1gxyVYLq6dk/img.jpg?width=1920&amp;height=1080&amp;face=0_0_1920_1080');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">클래식 맥(매킨토시) 닮은 아야네오 레트로 미니 PC(AYANEO Retro Mini PC) AM01</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">기술이 발달하면서 더 높은 성능의 PC를 더 작은 크기로 만들 수 있게 되었습니다. 그 결과 나온 제품들이 미니 PC라 불리는 제품군이지요. 굳이 전통적인 데스크탑 형태를 띄지 않더라도 활용에</p>\n<p class=\"og-host\" data-ke-size=\"size16\">lazion.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "미니PC로 유명한 미니스포럼(Minisforum)에서 AMD 라이젠7 8700G를 지원하는 MS-A1을 출시합니다.\n \n\n\n \nMinisforum MS-A1의 주요 특징\n \n\n\n \n미니스포럼의 MS-A1은 가장 중요한 특징은 바로 높은 성능입니다. 노트북 CPU를 쓰는 경우가 많은 다른 미니PC와는 달리 MS-A1은 데스크탑 프로세서를 활용합니다. 특히 강력한 내장 GPU 성능으로 각광받고 있는 AMD 라이젠7 8700G 등 AM5 플랫폼을 지원하여 고성능을 구현합니다.\n \n\n\n \n지금은 최대 AMD 라이젠7 8700G까지 CPU를 탑재할 수 있으며 라이젠 9000번대 프로세서가 나오면 BIOS 업그레이드를 통해 지원할 에정입니다.\n \n미니PC임에도 불구하고 뛰어난 냉각 성능과 폭넓은 확장성을 자랑하는데, 저장소를 위한 M.2 PCIe 4.0 NVMe SSD 슬롯은 무려 네개나 갖추고 있습니다.\n \n\n\n \n전면에는 3.5mm의 콤보 오디오 잭과 USB 3.2 두개, USB 2.0 한개를 갖추고 있으며 후면에는 두개의 2.5Gbps 이더넷 단자가 준비되어 있습니다.\n \n\n\n \nDP 2.0과 HDMI 2.1와 최대 40Gbps 속도를 지원하는 USB4 포트가 하나씩 있어서 최대 3개의 디스플레이와 동시 연결 가능합니다.\n \n\n\n \n이 밖에도 후면에는 USB 3.2와 USB 2.0 포트가 각각 하나씩 더 있으며 eGPU 연결을 위한 오큐링크(Oculink)도 제공합니다.\n \n\n\n \n참고로 미니스포럼 MS-A1이 최대로 탑재할 수 있는 AMD 라이젠7 8700G는 8코어 16스레드의 데스크탑 CPU로 내장한 GPU인 Radeon 780M의 성능이 무척 뛰어난 것으로 잘 알려져 있습니다.\n \n \nMinisforum MS-A1의 가격과 판매처?\n \n현재 온라인 판매 중인 미니스포럼 MS-A1의 가격은 미국 달러 기준으로 다음과 같습니다.\n \n베어본(CPU와 RAM, SSD, OS 없음) : 259달러(약 36만원)\n베어본+AMD Ryzen 7 8700G+32GB RAM+1TB SSD+Windows11 : 729달러(약 101만원)\n \n국가별 판매처는 다음과 같습니다.\n \n미국 US store: https://s.minisforum.com/USms-a1\n유럽 EU store: https://s.minisforum.com/DEms-a1\n일본 JP store: https://s.minisforum.com/JPms-a1\n홍콩 HK store: https://s.minisforum.com/HKms-a1\n \nMinisforum MS-A1의 주요 스펙(제원/사양)\n \nCPU : 현재 AMD Ryzen 7 8700G까지 지원.\n라이젠 9000번대 프로세서의 경우 BIOS 업데이트를 통해 지원 예정.\n칩셋 : AMD A300\nGPU : AMD Radeon Navi3 Graphics\nRAM : DDR5 Up to 5200MHz (듀얼 채널)\nSSD : \n하단 - M.2  2280 SSD(PCIe 4.0x1), M.2  2280 SSD(PCIe 3.0x4)SSD \n상단 - M.2  2280 SSD1(PCIe 4.0x4)\n확장 - M.2  U.2/2280 (PCIe 4.0x4)\n외부 연결 I/O\n후면 : DC-IN Jack(19V/12.63A 240W), HDMI(4K@120Hz), DP(4K@144Hz), Oculink(PCIe 4.0x4), 타입C(Data+DP), 타입A(USB3.2 Gen2), 타입A(USB2.0), RJ45 (2.5G)x2(RTL8125BG)\n전면 : 타입Ax2(USB3.2 Gen1), 타입A(USB2.0), 3.5mm 오디오 콤보 잭\n통신 포트 : M.2 2230(WiFi 6E 지원) / Bluetooth 5.2(PCIe-USB2)\nOS: Windows11 Home/Pro 64bit, Linux Ubuntu\n \n \n \n관련 글\n\n \n인텔 N100 스틱PC, MINISFORUM S100(미니스포럼 S100) 출시\n초소형 PC를 만드는 미니스포럼(MINISFORUM)에서 S100이라는 이름으로 인텔 N100 프로세서가 들어간 스틱PC를 출시합니다.  마치 좀 큰 USB 메모리스틱을 연상시키는 모양의 스틱PC는 주로 모니터 뒤에\nlazion.com\n\n\n \n클래식 맥(매킨토시) 닮은 아야네오 레트로 미니 PC(AYANEO Retro Mini PC) AM01\n기술이 발달하면서 더 높은 성능의 PC를 더 작은 크기로 만들 수 있게 되었습니다. 그 결과 나온 제품들이 미니 PC라 불리는 제품군이지요. 굳이 전통적인 데스크탑 형태를 띄지 않더라도 활용에\nlazion.com",
        "guid": "http://lazion.com/2513719",
        "categories": [
          "#작은PC/#미니PC",
          "8700g",
          "AM5",
          "AMD",
          "miniPC",
          "Minisforum",
          "ms-a1",
          "News",
          "PC",
          "Ryzen"
        ],
        "isoDate": "2024-07-24T09:59:58.000Z"
      },
      {
        "creator": "늑돌이",
        "title": "ipTIME 화면 확 바뀐 3세대 iUX 도입한 펌웨어 버전 15 배포",
        "link": "http://lazion.com/2513718",
        "pubDate": "Tue, 23 Jul 2024 15:33:45 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513718#entry2513718comment",
        "content": "<h3 data-ke-size=\"size23\">대한민국의 인터넷 공유기 시장을 지배하고 있는 <b>아이피타임(ipTIME)</b> 공유기 시리즈의 관리자 화면이 완전히 바뀌었습니다. <br /><br /></h3>\n<p data-ke-size=\"size16\">회사 이름인 <b>이에프엠네트웍스(EFM Networks)</b>보다는 자사의 인터넷 공유기 브랜드인 아이피타임으로 더 유명할 정도 많은 인기를 얻고있는 원인에는 적당한 가격도 있지만 역시 꾸준한 펌웨어 업데이트가 더 큰 이유일 겁니다. 특히 나온지 몇년씩 지난 공유기에도 지속적으로 필요한 업데이트를 제공하는 모습은 이용자들에게 큰 만족을 주었죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">덕분에 화려한 디자인과 강력한 기능과 성능으로 무장한 외산 공유기들과의 경쟁 속에서도 아이피타임 공유기는 많은 인기를 얻을 수 있었습니다만, 그래도 아쉬운 부분은 있었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아이피타임 공유기의 본체 디자인은 나름 괜찮은 수준입니다만, 관리자 화면의 UI는 좀 많이 아쉬웠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"ipTIME A2003NS-MU_12_01_logo.png\" data-origin-width=\"1794\" data-origin-height=\"1318\"><span data-url=\"https://blog.kakaocdn.net/dn/bNJKbi/btsIJVuM1vm/JLAB3OI6YPwQF0y04qFK50/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bNJKbi/btsIJVuM1vm/JLAB3OI6YPwQF0y04qFK50/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bNJKbi/btsIJVuM1vm/JLAB3OI6YPwQF0y04qFK50/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbNJKbi%2FbtsIJVuM1vm%2FJLAB3OI6YPwQF0y04qFK50%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"ipTIME A2003NS-MU_12_01_logo.png\" data-origin-width=\"1794\" data-origin-height=\"1318\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">기능 면에서야 익숙해지면 괜찮습니다만, 그래도 10여년 전이나 볼 듯한 디자인의 UI를 제공합니다. 쓰는데에는 문제가 없긴 하지만 그래도 아쉬운건 아쉬운거죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여기에 대해서는 이에프엠네트웍스에서도 알고 있었는지 이번에 펌웨어 버전 15를 발표하면서 3세대 iUX를 도입합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"iptime_AX2004M_15.00.2_01.logo.png\" data-origin-width=\"2122\" data-origin-height=\"1944\"><span data-url=\"https://blog.kakaocdn.net/dn/dN3PKv/btsIIkbrd6y/DiTM7d07EicMOIdd5hs3JK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dN3PKv/btsIIkbrd6y/DiTM7d07EicMOIdd5hs3JK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dN3PKv/btsIIkbrd6y/DiTM7d07EicMOIdd5hs3JK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdN3PKv%2FbtsIIkbrd6y%2FDiTM7d07EicMOIdd5hs3JK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"iptime_AX2004M_15.00.2_01.logo.png\" data-origin-width=\"2122\" data-origin-height=\"1944\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이렇습니다. 정말 확 달라졌죠. 이전 버전 대비 기능 면에서 큰 변화가 있던 건 아니지만 Material 디자인 기반으로 새로 만들어진 화면의 UI가 제법 볼만합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 새로운 UI는 기존에 펌웨어 버전 14가 지원되고 있는 모델에는 모두 업그레이드가 가능하다고 합니다.</p>\n<p data-ke-size=\"size16\">참고로 이번 펌웨어 버전 <b>15.00</b>은 지난 7월 16일 처음 배포되기 시작했으며, 오늘 7월 23일자로 자잘한 버그를 수정한 <b>15.00.2</b>가 다시 배포되었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_Screenshot 2024-07-24 at 11-28-09 AX2004M.png\" data-origin-width=\"1700\" data-origin-height=\"1198\"><span data-url=\"https://blog.kakaocdn.net/dn/c8bpFN/btsIJUC6M4n/hcRqKzpZOwzTvMzkwWAx10/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c8bpFN/btsIJUC6M4n/hcRqKzpZOwzTvMzkwWAx10/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c8bpFN/btsIJUC6M4n/hcRqKzpZOwzTvMzkwWAx10/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc8bpFN%2FbtsIJUC6M4n%2FhcRqKzpZOwzTvMzkwWAx10%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"edited_Screenshot 2024-07-24 at 11-28-09 AX2004M.png\" data-origin-width=\"1700\" data-origin-height=\"1198\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다음은 이에프엠네트웍스의 펌웨어 15 버전 배포에 대한 공지사항입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style3\"><b># 3세대 iUX 지원 정식 펌웨어 15 버전 배포</b> <br />- Material Design 기반의 사용자 친화적 디자인 <br />- 모바일 및 PC 통합 UI 지원 <br />- 다크모드 지원/즐겨찾기 기능 지원 <br />- 버전 : 15.00.2 <br />- 지원 대상 : 기존 14버전을 지원하는 전 제품 <br />- 펌웨어 배포 일정 <br />- 2024-07-16 : 11AX 공유기 제품 / 유선 공유기 제품 <br />- 2024-07-23 : 11AC 공유기 제품 / Ring AP 계열 제품 (15.00.2) <br />- 2024-07-25 : 11n 계열 제품 / Extender/Outdoor AP 제품 (15.00.2 베타 배포)<br />------------------------------------ <br /><br /><b># 3세대 iUX 지원 정식 펌웨어 15.00.2 배포</b> <br />- Material Design 기반의 사용자 친화적 디자인 <br />- 모바일 및 PC 통합 UI 지원 <br />- 다크모드 지원/즐겨찾기 기능 지원 <br /><br /><b>펌웨어 15.00.2 변경 사항</b> <br />- [ AX3000ITL ] 2.4G 무선 설정/초기화 이슈 해결 <br />- [ AX3000ITL ] 커넥션 정보 페이지가 안보이는 이슈 해결 <br />- [ AX3000M ] Radius 설정 후 스테이션 연결 시 공유기 재부팅 이슈 해결 <br />- [ T5008SE ] Easymesh 콘트롤러 + KT IPTV 모드 사용 시, 유선 동작 이슈 해결 <br />- [ T5008SE ] 내부 게이트웨이 사용 시 재부팅 이슈 해결 <br />- [ 인터넷 사용 제한 ] 사이트 차단 동작 이슈 해결 <br />- [ WiFi 기본 설정 ] 다크 모드일 때 '인증 및 암호화' 폰트 색상이 검은색으로 표시되는 문제점 해결 <br />- [ 관리자 E-mail 설정 ] co.kr 메일 도메인 입력 불가 이슈 해결 <br />- [ Easy Mesh 관리툴 ] 무선 밴드 OFF 시 SSID 표기 이슈 해결 <br />- [ Easy Mesh 관리툴 ] 컨트롤러 게이트웨이 정보 0.0.0.0 표기 증상 <br />- [ PPTP/LT2P 서버 ] 연결 후 인터넷 통신 불가 이슈 해결 <br />- [ 인터넷/WIFI 사용 제한 ] 사이트 접속 제한 동작 이슈 해결</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><a href=\"https://iptime.com/iptime/?uid=25871&amp;mod=document&amp;page_id=16\" target=\"_blank\" rel=\"noopener\">더 자세한 내용은 이곳을 참고하시기</a> 바랍니다.</p>",
        "contentSnippet": "대한민국의 인터넷 공유기 시장을 지배하고 있는 아이피타임(ipTIME) 공유기 시리즈의 관리자 화면이 완전히 바뀌었습니다. \n\n회사 이름인 이에프엠네트웍스(EFM Networks)보다는 자사의 인터넷 공유기 브랜드인 아이피타임으로 더 유명할 정도 많은 인기를 얻고있는 원인에는 적당한 가격도 있지만 역시 꾸준한 펌웨어 업데이트가 더 큰 이유일 겁니다. 특히 나온지 몇년씩 지난 공유기에도 지속적으로 필요한 업데이트를 제공하는 모습은 이용자들에게 큰 만족을 주었죠.\n \n덕분에 화려한 디자인과 강력한 기능과 성능으로 무장한 외산 공유기들과의 경쟁 속에서도 아이피타임 공유기는 많은 인기를 얻을 수 있었습니다만, 그래도 아쉬운 부분은 있었습니다.\n \n아이피타임 공유기의 본체 디자인은 나름 괜찮은 수준입니다만, 관리자 화면의 UI는 좀 많이 아쉬웠습니다.\n \n\n\n \n기능 면에서야 익숙해지면 괜찮습니다만, 그래도 10여년 전이나 볼 듯한 디자인의 UI를 제공합니다. 쓰는데에는 문제가 없긴 하지만 그래도 아쉬운건 아쉬운거죠.\n \n여기에 대해서는 이에프엠네트웍스에서도 알고 있었는지 이번에 펌웨어 버전 15를 발표하면서 3세대 iUX를 도입합니다.\n \n\n\n \n이렇습니다. 정말 확 달라졌죠. 이전 버전 대비 기능 면에서 큰 변화가 있던 건 아니지만 Material 디자인 기반으로 새로 만들어진 화면의 UI가 제법 볼만합니다.\n \n이 새로운 UI는 기존에 펌웨어 버전 14가 지원되고 있는 모델에는 모두 업그레이드가 가능하다고 합니다.\n참고로 이번 펌웨어 버전 15.00은 지난 7월 16일 처음 배포되기 시작했으며, 오늘 7월 23일자로 자잘한 버그를 수정한 15.00.2가 다시 배포되었습니다.\n \n\n\n \n다음은 이에프엠네트웍스의 펌웨어 15 버전 배포에 대한 공지사항입니다.\n \n# 3세대 iUX 지원 정식 펌웨어 15 버전 배포 \n- Material Design 기반의 사용자 친화적 디자인 \n- 모바일 및 PC 통합 UI 지원 \n- 다크모드 지원/즐겨찾기 기능 지원 \n- 버전 : 15.00.2 \n- 지원 대상 : 기존 14버전을 지원하는 전 제품 \n- 펌웨어 배포 일정 \n- 2024-07-16 : 11AX 공유기 제품 / 유선 공유기 제품 \n- 2024-07-23 : 11AC 공유기 제품 / Ring AP 계열 제품 (15.00.2) \n- 2024-07-25 : 11n 계열 제품 / Extender/Outdoor AP 제품 (15.00.2 베타 배포)\n------------------------------------ \n# 3세대 iUX 지원 정식 펌웨어 15.00.2 배포 \n- Material Design 기반의 사용자 친화적 디자인 \n- 모바일 및 PC 통합 UI 지원 \n- 다크모드 지원/즐겨찾기 기능 지원 \n펌웨어 15.00.2 변경 사항 \n- [ AX3000ITL ] 2.4G 무선 설정/초기화 이슈 해결 \n- [ AX3000ITL ] 커넥션 정보 페이지가 안보이는 이슈 해결 \n- [ AX3000M ] Radius 설정 후 스테이션 연결 시 공유기 재부팅 이슈 해결 \n- [ T5008SE ] Easymesh 콘트롤러 + KT IPTV 모드 사용 시, 유선 동작 이슈 해결 \n- [ T5008SE ] 내부 게이트웨이 사용 시 재부팅 이슈 해결 \n- [ 인터넷 사용 제한 ] 사이트 차단 동작 이슈 해결 \n- [ WiFi 기본 설정 ] 다크 모드일 때 '인증 및 암호화' 폰트 색상이 검은색으로 표시되는 문제점 해결 \n- [ 관리자 E-mail 설정 ] co.kr 메일 도메인 입력 불가 이슈 해결 \n- [ Easy Mesh 관리툴 ] 무선 밴드 OFF 시 SSID 표기 이슈 해결 \n- [ Easy Mesh 관리툴 ] 컨트롤러 게이트웨이 정보 0.0.0.0 표기 증상 \n- [ PPTP/LT2P 서버 ] 연결 후 인터넷 통신 불가 이슈 해결 \n- [ 인터넷/WIFI 사용 제한 ] 사이트 접속 제한 동작 이슈 해결\n \n더 자세한 내용은 이곳을 참고하시기 바랍니다.",
        "guid": "http://lazion.com/2513718",
        "categories": [
          "#주변기기/#통신#GPS#연결",
          "3세대 iux",
          "access point",
          "AP",
          "EFMNetworks",
          "iptime",
          "News",
          "Router",
          "공유기"
        ],
        "isoDate": "2024-07-23T06:33:45.000Z"
      }
    ]
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": []
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "khris'log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "VS Code - VSCode로 Linux 서버에 SSH 연결 및 개발",
        "link": "https://jacking75.github.io/VS_code_20240728/",
        "pubDate": "Sun, 28 Jul 2024 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRPsrdKWRjKkxTptY7YtUr2m9Qnn_g8AW9MkvBxDsqN6WwBKFMbqFMSTHaGErxptZHU5z1_Lam_02WO/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_code_20240728/",
        "isoDate": "2024-07-27T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "코딩 많이 한 날",
        "link": "https://jeho.page/essay/2024/07/26/good-day.html",
        "pubDate": "2024-07-26T09:58:00.000Z",
        "author": "김재호",
        "content": "<p>아침부터 자리에 앉아 열심히 코딩했습니다.</p>\n\n<p>주식창도 보지 않고.<br />\n뉴스도 보지 않고.<br />\n만화책이나 유튜브도 보지 않고.</p>\n\n<p>집중해서 코딩하다보니 어느덧 시간이 18시.<br />\n잠시 후엔 축구를 하러 나가야 합니다.</p>\n\n<p>이런 날이 참 좋습니다.<br />\n세상의 자극적인 이야기에 빠져들지 않고 책상에서 몰입하며 보낸 날.<br />\n할 일 다 하고 좋아하는 취미를 즐기러 가는 날.</p>\n\n<p>가장 뿌듯한 날은 코딩 많이 한 날입니다.<br />\n이런 날은 잠자리에 누우면 기분이 정말 좋습니다.<br />\n신나게 놀아버린 날과는 비교도 할 수 없는 기쁨.</p>\n\n<p>매일 오늘 같으면 좋겠습니다.</p>\n\n<p><img src=\"/assets/img/soccer.png\" alt=\"축구장\" /></p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2022/04/09/an-ordinary-day.html\">평범한 하루</a></li>\n  <li><a href=\"/essay/2023/01/25/fire-is-not-that-good.html\">논다고 좋은 게 아니야</a></li>\n</ul>",
        "contentSnippet": "아침부터 자리에 앉아 열심히 코딩했습니다.\n주식창도 보지 않고.\n집중해서 코딩하다보니 어느덧 시간이 18시.\n이런 날이 참 좋습니다.\n가장 뿌듯한 날은 코딩 많이 한 날입니다.\n매일 오늘 같으면 좋겠습니다.\n\n\n함께 읽으면 좋은 글:\n평범한 하루\n논다고 좋은 게 아니야",
        "summary": "아침부터 자리에 앉아 열심히 코딩했습니다.",
        "id": "https://jeho.page/essay/2024/07/26/good-day",
        "isoDate": "2024-07-26T09:58:00.000Z"
      },
      {
        "title": "오랜만에 카카오 아지트",
        "link": "https://jeho.page/essay/2024/07/25/kakao-fire-guys.html",
        "pubDate": "2024-07-25T06:10:00.000Z",
        "author": "김재호",
        "content": "<p>오랜만에 옛 동료들과 점심을 먹고 수다를 떨다가 들어왔습니다.<br />\n카카오 아지트 방문.</p>\n\n<p>깔끔하고 커다란 구내식당. 완전히 세대교체가 된 젊은 직원들.<br />\n실제로 다니는 사람들은 어떤 마음일지 모르겠지만…<br />\n외부인의 시선으로 봤을 땐 참 회사 다닐 맛 나겠다 싶었습니다.<br />\n다시 회사에 들어가면 어떨까 하는 생각마저 들 정도.</p>\n\n<p>12년 전에 처음 만나 새벽까지 일하던 사람들.<br />\n그때보다 훨씬 나이가 들었지만 여전히 밝고 건강해 보여서 좋았습니다.</p>\n\n<p>시간이 정말 빨리 간다는 생각도 듭니다.<br />\n이 아까운 시간을 어떻게 써야 죽는 날 후회하지 않게 보낼 수 있을까?<br />\n열심히 뭔가를 만들어보고, 좋아하는 사람들과 많이 웃으면서 시간을 보내고 싶습니다.</p>\n\n<p><img src=\"/assets/img/kakao/kakao_fire_2012.png\" alt=\"2012년 카카오 명랑 운동회\" /><br />\n<em>카카오 명랑 운동회, 안면도 꽃지 해수욕장, 2012년</em></p>\n\n<p><img src=\"/assets/img/kakao/kakao_fire_2015.png\" alt=\"H스퀘어, 2015년\" /><br />\n<em>H스퀘어, 2015년</em></p>\n\n<p><img src=\"/assets/img/kakao/kakao_fire_2024.png\" alt=\"카카오 아지트\" /><br />\n<em>카카오 아지트, 2024년</em></p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2022/05/02/kakao-ten-years.html\">카카오 - 완성되지 않은 회사</a></li>\n  <li><a href=\"/essay/2022/10/16/kakaotalk-server-development.html\">카카오톡 서버 개발의 추억</a></li>\n</ul>",
        "contentSnippet": "오랜만에 옛 동료들과 점심을 먹고 수다를 떨다가 들어왔습니다.\n깔끔하고 커다란 구내식당. 완전히 세대교체가 된 젊은 직원들.\n12년 전에 처음 만나 새벽까지 일하던 사람들.\n시간이 정말 빨리 간다는 생각도 듭니다.\n\n카카오 명랑 운동회, 안면도 꽃지 해수욕장, 2012년\n\nH스퀘어, 2015년\n\n카카오 아지트, 2024년\n\n함께 읽으면 좋은 글:\n카카오 - 완성되지 않은 회사\n카카오톡 서버 개발의 추억",
        "summary": "오랜만에 옛 동료들과 점심을 먹고 수다를 떨다가 들어왔습니다. 카카오 아지트 방문.",
        "id": "https://jeho.page/essay/2024/07/25/kakao-fire-guys",
        "isoDate": "2024-07-25T06:10:00.000Z"
      },
      {
        "title": "쓰레드가 도대체 뭔가요?",
        "link": "https://jeho.page/essay/2024/07/22/threads.html",
        "pubDate": "2024-07-22T06:44:00.000Z",
        "author": "김재호",
        "content": "<p>코딩을 처음 배울 때 가장 어려웠던 단어는 쓰레드였습니다.<br />\n쓰레드란 말만 나오면 가슴속이 답답했습니다.</p>\n\n<p>으아, 도대체 쓰레드가 뭐냐고.</p>\n\n<p><img src=\"/assets/img/threads.png\" alt=\"쓰레드를 설명\" /><br />\n<em>해커와 화가에서 폴 그레이엄이 절대 틀리는 일이 없다며 극찬한 공동 창업자 (<del>웜 바이러스의 창시자</del>) <a href=\"https://youtu.be/gA4YXUJX7t8?si=LzqB0gsEXn-nIns2&amp;t=280\">로버트 모리스의 쓰레드 설명</a></em></p>\n\n<p>교수님, 선배님들은 다들 저렇게 실을 그리며 코드가 흘러가는 흐름 같은 거라고 말해줬습니다.</p>\n\n<p>‘아니, 코드가 뭘 어딜 흘러가냐고.’</p>\n\n<p>회사에 들어가서야 깨달았습니다.<br />\n멀티 쓰레드 프로그램을 실제로 디버깅해보면서.<br />\n<a href=\"https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/beginthread-beginthreadex?view=msvc-170\">_beginthreadex</a> 함수와 <a href=\"https://learn.microsoft.com/ko-kr/windows/win32/api/synchapi/nf-synchapi-entercriticalsection\">EnterCriticalSection</a> 함수를 사용해서 버그를 고치는 과정에서 번쩍 깨달음이 왔던 기억이 납니다.</p>\n\n<p>그때까지 저는 스택이 프로세스 당 1개 있는 건 줄로 잘못 알고 있었습니다.<br />\n쓰레드 스택이란 표현을 듣는 순간 느낌이 왔습니다.<br />\n_beginthreadex를 통해 쓰레드를 하나 생성할 때마다 스택이 함께 생성된다는 것.<br />\n그 스택 크기는 1MB라는 것을 알게 되었습니다.<br />\n(커널 모드로 전환될 땐 고작 12KB의 커널 스택을 사용한다는 것도 나중에 알게 됐습니다.)</p>\n\n<p>아, 이제야 뭔지 알 것 같아.<br />\n지역 변수를 사용하면 멀티 쓰레드에서 문제가 없다느니, 쓰레드 로컬 스토리지가 뭐니 하는 말들이 그제야 이해가 되기 시작했습니다.</p>\n\n<p>어제부터 쓰레드(SNS)를 시작했는데, 쓰레드란 단어를 볼 때 마다 고통스러워하던 옛날 생각이 나서 주절거려 봤습니다. (웃음)<br />\n쓰레드 주소는 <a href=\"https://www.threads.net/@jehokim\">여기</a>입니다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2023/01/05/why-async.html\">왜 비동기 프로그래밍을 하나요?</a></li>\n  <li><a href=\"/programming/2011/07/17/알아두면-유용한-MoveFileEx-함수의-펜딩-옵션.html\">알아두면 유용한 MoveFileEx 함수의 펜딩 옵션</a></li>\n</ul>",
        "contentSnippet": "코딩을 처음 배울 때 가장 어려웠던 단어는 쓰레드였습니다.\n으아, 도대체 쓰레드가 뭐냐고.\n\n해커와 화가에서 폴 그레이엄이 절대 틀리는 일이 없다며 극찬한 공동 창업자 (웜 바이러스의 창시자) 로버트 모리스의 쓰레드 설명\n교수님, 선배님들은 다들 저렇게 실을 그리며 코드가 흘러가는 흐름 같은 거라고 말해줬습니다.\n‘아니, 코드가 뭘 어딜 흘러가냐고.’\n회사에 들어가서야 깨달았습니다.\n_beginthreadex 함수와 EnterCriticalSection 함수를 사용해서 버그를 고치는 과정에서 번쩍 깨달음이 왔던 기억이 납니다.\n그때까지 저는 스택이 프로세스 당 1개 있는 건 줄로 잘못 알고 있었습니다.\n아, 이제야 뭔지 알 것 같아.\n어제부터 쓰레드(SNS)를 시작했는데, 쓰레드란 단어를 볼 때 마다 고통스러워하던 옛날 생각이 나서 주절거려 봤습니다. (웃음)\n여기입니다.\n\n함께 읽으면 좋은 글:\n왜 비동기 프로그래밍을 하나요?\n알아두면 유용한 MoveFileEx 함수의 펜딩 옵션",
        "summary": "코딩을 처음 배울 때 가장 어려웠던 단어는 쓰레드였습니다. 쓰레드란 말만 나오면 가슴속이 답답했습니다.",
        "id": "https://jeho.page/essay/2024/07/22/threads",
        "isoDate": "2024-07-22T06:44:00.000Z"
      },
      {
        "title": "1인 창업 커뮤니티",
        "link": "https://jeho.page/essay/2024/07/22/solopreneur-community.html",
        "pubDate": "2024-07-22T03:10:00.000Z",
        "author": "김재호",
        "content": "<p>1인 창업 커뮤니티를 만들어 보면 어떨까?</p>\n\n<p>공간을 임대해서 1인 창업자들이 함께 모여 일할 수 있는 곳.<br />\n내 사무실로도 쓰고 남는 공간은 다른 1인 창업자들에게 빌려주고.<br />\n서로 끌어주고 힘이 될 수 있잖아.<br />\n임대료도 아낄 수 있고, 어쩌면 돈도 벌 수 있겠는데?</p>\n\n<p>1인 창업을 하면 친구들이 무척 보고 싶습니다.<br />\n나 혼자만 이상하게 하고 있는 것 아닐까 두려움 천지.<br />\n다른 사람들은 어떻게 개발하고 마케팅하는지 물어보고 싶은 것들 천지입니다.</p>\n\n<p>1인 창업자들이 모여서 함께 일하는 공간을 만든다면 이 문제를 해결할 수 있을까?</p>\n\n<p>그렇지 않을 거라고 생각합니다.<br />\n이런 외로움과 두려움을 이겨내는 것이 1인 창업의 시작.<br />\n스스로 동기부여할 수 없다면 커뮤니티도 별 소용없을 겁니다.<br />\n커뮤니티 내에서 포기하는 사람들은 계속 나오고 그걸 보고 또 영향받을 테니까.<br />\n스스로 동기부여 할 수 없는 사람들만 모여드는 모순적인 상황.</p>\n\n<p>1인 창업을 하겠다고 마음먹은 것은 그 단점들까지도 온전히 받아들이는 트레이드오프를 한 겁니다.<br />\n이걸 잊으면 안 됩니다. 좋은 점만 취할 수는 없습니다.</p>\n\n<p>혼자 걸어가는 외로움, 두려움과 싸워서 이겨내는 것이 쉬운 일이 아닙니다.<br />\n이걸 모른 채 시작한 사람들은 금세 포기하게 됩니다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2022/09/14/successful-developer.html\">1인 개발자 전성시대</a></li>\n  <li><a href=\"/essay/2024/03/18/surviving-alone.html\">1인 개발이란 전쟁터에서 혼자 살아남는 것</a></li>\n  <li><a href=\"/essay/2023/07/14/should-i-quit-company.html\">회사를 그만두고 1인 개발을 해야 할까요?</a></li>\n</ul>",
        "contentSnippet": "1인 창업 커뮤니티를 만들어 보면 어떨까?\n공간을 임대해서 1인 창업자들이 함께 모여 일할 수 있는 곳.\n1인 창업을 하면 친구들이 무척 보고 싶습니다.\n1인 창업자들이 모여서 함께 일하는 공간을 만든다면 이 문제를 해결할 수 있을까?\n그렇지 않을 거라고 생각합니다.\n1인 창업을 하겠다고 마음먹은 것은 그 단점들까지도 온전히 받아들이는 트레이드오프를 한 겁니다.\n혼자 걸어가는 외로움, 두려움과 싸워서 이겨내는 것이 쉬운 일이 아닙니다.\n\n함께 읽으면 좋은 글:\n1인 개발자 전성시대\n1인 개발이란 전쟁터에서 혼자 살아남는 것\n회사를 그만두고 1인 개발을 해야 할까요?",
        "summary": "1인 창업 커뮤니티를 만들어 보면 어떨까?",
        "id": "https://jeho.page/essay/2024/07/22/solopreneur-community",
        "isoDate": "2024-07-22T03:10:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": []
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Hybrid's Notes",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "Node의 SQLite 지원",
        "link": "https://hyeonseok.com/blog/915",
        "pubDate": "Sat, 27 Jul 2024 18:35:31 GMT",
        "content": "<p>노드(Node)가 22.5.0 버전 부터 <a href=\"https://nodejs.org/api/sqlite.html\"><code>node:sqlite</code> 모듈을 지원</a>하기 시작했다. 번(Bun)이 SQLite를 지원해서 쓰고 있었는데 <a href=\"https://hyeonseok.com/blog/914\">메모리 릭</a>때문에 하루에 한번씩 재시작하고 있었다. 이 기회에 다시 노드로 바꿨다.</p>\r\n\r\n<p><code>node:sqlite</code>는 아직 실험기능이어서 그냥 실행해서는 사용할 수 없고 <code>--experimental-sqlite</code> 플래그를 추가해줘야 한다.</p>\r\n\r\n<pre><code>node --experimental-sqlite myapp.js</code></pre>\r\n\r\n<p>아스트로(Astro) 개발 서버에 이 옵션을 활성화하려고 여기저기 추가해봤는데 쉽게 되지 않았다. 삽질한 끝에 <code>astro</code> 모듈을 <code>npx</code>로 실행하고 <code>--node-options</code> 플래그로 노드에 전달할 옵션을 추가해서 해결했다.</p>\r\n\r\n<pre><code>npx --node-options='--experimental-sqlite' astro dev</code></pre>\r\n\r\n<p>API는 거의 비슷해서 수정한 부분은 매우 적었다. <code>Database.query</code>를 <code>Database.prepare</code>로 바꿔주고 스테이트먼트에 파라메터를 넘겨줄 때 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\">스프레드</a> 구문으로 바꿔준게 다이다. 노드 런타임들도 서로 경쟁을 많이 하게 된 것 같다. 번은 메모리 릭 좀 빨리 고쳤으면 좋겠다.</p>\r\n",
        "contentSnippet": "노드(Node)가 22.5.0 버전 부터 node:sqlite 모듈을 지원하기 시작했다. 번(Bun)이 SQLite를 지원해서 쓰고 있었는데 메모리 릭때문에 하루에 한번씩 재시작하고 있었다. 이 기회에 다시 노드로 바꿨다.\n\r\n\r\nnode:sqlite는 아직 실험기능이어서 그냥 실행해서는 사용할 수 없고 --experimental-sqlite 플래그를 추가해줘야 한다.\n\r\n\r\nnode --experimental-sqlite myapp.js\n\r\n\r\n아스트로(Astro) 개발 서버에 이 옵션을 활성화하려고 여기저기 추가해봤는데 쉽게 되지 않았다. 삽질한 끝에 astro 모듈을 npx로 실행하고 --node-options 플래그로 노드에 전달할 옵션을 추가해서 해결했다.\n\r\n\r\nnpx --node-options='--experimental-sqlite' astro dev\n\r\n\r\nAPI는 거의 비슷해서 수정한 부분은 매우 적었다. Database.query를 Database.prepare로 바꿔주고 스테이트먼트에 파라메터를 넘겨줄 때 스프레드 구문으로 바꿔준게 다이다. 노드 런타임들도 서로 경쟁을 많이 하게 된 것 같다. 번은 메모리 릭 좀 빨리 고쳤으면 좋겠다.",
        "guid": "https://hyeonseok.com/blog/915",
        "isoDate": "2024-07-27T18:35:31.000Z"
      }
    ]
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "Headless CMS를 위한 변경 데이터 캡쳐(CDC) 기술 설계하기",
        "link": "https://techblog.lycorp.co.jp/ko/change-data-capture-for-headless-cms",
        "pubDate": "Tue, 23 Jul 2024 03:00:00 GMT",
        "content": "들어가며\n안녕하세요. UIT 팀 윤혜린입니다. LINE에서는 헤드리스 CMS인 LandPress Content를 사내 임직원 대상으로 운영하고 있습니다. 이 글에서는 LandPre...",
        "contentSnippet": "들어가며\n안녕하세요. UIT 팀 윤혜린입니다. LINE에서는 헤드리스 CMS인 LandPress Content를 사내 임직원 대상으로 운영하고 있습니다. 이 글에서는 LandPre...",
        "guid": "https://techblog.lycorp.co.jp/ko/change-data-capture-for-headless-cms",
        "isoDate": "2024-07-23T03:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "이한",
    "category": "개인",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황의윤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "불평하지 않는 길",
        "link": "https://www.thestartupbible.com/2024/07/complaining-and-blaming-is-not-a-part-of-our-job.html",
        "pubDate": "Wed, 24 Jul 2024 20:00:00 +0000",
        "content:encodedSnippet": "작년 말에는 지금쯤 되면 경기가 좀 회복되고, 투자 시장에 활기가 돌아올 줄 알았는데, 내가 요새 체감하는 건, 아직 정상화되려면 시간이 훨씬 더 오래 걸릴 것 같다. 아니면, 지금 이 불경기가 어쩌면 정상이라는 생각이 들 정도로 뭔가 느낌이 좋진 않다.\n우리 같은 투자자도 이런 느낌인데, 매일 힘든 사업을 해야 하는 우리의 창업가들은 오죽하랴. 정말 요새 죽을 맛이다. 특히, 자금이 떨어져서 펀딩을 해야 하는 대표들은 정말 살면서 가장 힘든 시기를 보내고 있을 것이다. 그래서 우리도 투자사 대표들에게 런웨이가 12~18개월 정도 있으면, 웬만하면 펀딩하지 말고 사업에 집중하고, 나중에 수치들이 더 좋아지면 그때 투자유치를 하라고 조언한다.\n하지만, 그래도 돈이 다 떨어졌으면, 경기랑 상관없이 투자를 받아야 한다. 우리 투자사들도 요새 펀딩하고 있는 곳들이 많긴 한데, 모두 다 힘들어하고, 회사가 원하는 투자 조건과는 한참 동떨어진, 그냥 주는 대로 받는 전략으로 가는 곳들도 많고, 우리도 기투자자로서 이런 조건이라도 투자받을 수 있으면 받아서, 일단 살아남으면서 버티자는 스탠스다.\n이 중에서도 특히나 힘들게 투자유치를 하는 회사가 몇 군데 있다. 일단 펀딩 하는데 걸린 절대적인 시간이 너무 길고, 투자를 커밋했던 VC들이 시간이 지연되면서 슬그머니 말을 번복하고, 이미 최종 투심까지 가서 결정된 곳들도 갑자기 정말 미안한 사정이 생기면서 취소되고, 이런 일이 생기다 보니 확신을 갖고 후속 투자를 준비하던 기존 투자자들도 하나둘씩 말이 달라지고 있다. 대부분 6개월 정도 힘들게 투자유치를 하다 보니, 이런 일이 생기면 대표는 지치면서 번아웃되고, 런웨이가 없어지니 직원들도 불안해하면서 어떤 분들을 퇴사하고, 결국엔 다시 원점으로 돌아와서 펀딩 전략을 새로 만들고 있다. 이 와중에 어떤 곳들은 투자자들과 이야기가 아주 잘 되고 있었는데, 같은 분야의 경쟁사가 상대적으로 낮은 밸류에 투자를 받으면서 그동안 합의됐던 밸류에이션이 조정되고 있고, 어떤 곳은 동종 업계의 회사가 상장했는데, 상장 후 주식가격이 형편없이 떨어지면서 다시 이야기는 원점으로 돌아왔다.\n여기까지 오면, 우리 같은 기존 주주들도 정말 힘이 빠지는데, 이 과정에서 정신적으로, 육체적으로 큰 타격을 받은 대표는 돌아버리기 일보 직전이다. 그냥 남 탓하면서 욕하고, 포기하고 싶을 것이다. 뭐 하나 뜻대로 되는 게 없다.\n어떻게 보면 이 창업가들의 잘못은 아니다. 우린 잘하고 있는데, 경기가 좋지 않아서 시장에 유동성이 부족해서 투자받는 게 힘든 것이다. 우린 잘하고 있는데, 동종 업계의 다른 회사가 잘 못 해서 우리가 어쩔 수 없이 영향을 받는 것이다. 갑자기 투자자가 투자 결정을 철회한 것도 대표의 잘못이 아니다. 이건 그 투자자가 나쁜 놈이기 때문이다. 이렇게 남을 탓하고, 불평해도 되지만, 우리가 투자하는 창업가들은 불평하지 않는다. 이들은 최선을 다한다. 그래도 일이 잘 안 풀리는 건 본인들이 어떻게 할 수 없다는 걸 인정하고, 그냥 또 다른 방법을 찾는다. 불평하지 않고 그냥 또 길을 찾는다.\n나도 이런 힘 빠지는 경험을 자주 한다. 새로운 펀드를 만들면서 너무 많은 거절을 당하고, 꼭 돈을 줄 것 같았던 투자자가 결국엔 투자하지 않는다. 동시에 우리가 투자한 너무 많은 회사가 망한다. 꼭 잘될 것만 같았던 회사들이 잘 안되고, 안 될 것 같았던 회사는 항상 잘 안된다. 이런 일들이 계속 일어나고 이로 인한 피로감이 쌓일수록 자신감이 떨어진다. 정말 내 뜻대로 되는 게 하나도 없다.\n실은, 이런 상황에서 나는 그냥 이래저래 불평만 하고 싶다. 나는 잘하고 있는데, 다른 사람이 나쁜 놈들이고, 내 잘못은 하나도 없다는 핑계를 대고 싶다. 하지만, 우리가 투자하는 창업가들이나 이들을 지원하는 우리나 모두 불평하는 데 익숙지 않은 일을 하고 있다. 원하는 것보다 훨씬 더 자주 거절당하고, 자주 넘어지지만, 그럴 때마다 불평하지 않고 다시 일어난다. 다시 일어나서 그냥 내가 해야 할 일을 한다. 우리가 선택한 길은 불평이라는 옵션이 없는 길이니까.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/07/complaining-and-blaming-is-not-a-part-of-our-job.html#respond",
        "content": "작년 말에는 지금쯤 되면 경기가 좀 회복되고, 투자 시장에 활기가 돌아올 줄 알았는데, 내가 요새 체감하는 건, 아직 정상화되려면 시간이 훨씬 더 오래 걸릴 것 같다. 아니면, 지금 이 불경기가 어쩌면 정상이라는 생각이 들 정도로 뭔가 느낌이 좋진 않다. 우리 같은 투자자도 이런 느낌인데, 매일 힘든 사업을 해야 하는 우리의 창업가들은 오죽하랴. 정말 요새 죽을(...)",
        "contentSnippet": "작년 말에는 지금쯤 되면 경기가 좀 회복되고, 투자 시장에 활기가 돌아올 줄 알았는데, 내가 요새 체감하는 건, 아직 정상화되려면 시간이 훨씬 더 오래 걸릴 것 같다. 아니면, 지금 이 불경기가 어쩌면 정상이라는 생각이 들 정도로 뭔가 느낌이 좋진 않다. 우리 같은 투자자도 이런 느낌인데, 매일 힘든 사업을 해야 하는 우리의 창업가들은 오죽하랴. 정말 요새 죽을(...)",
        "guid": "https://www.thestartupbible.com/?p=9163",
        "categories": [
          "Uncategorized",
          "failure",
          "FoundersAtWork",
          "fundraising",
          "hustle",
          "rejection",
          "Strong",
          "technology",
          "vc"
        ],
        "isoDate": "2024-07-24T20:00:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "세상에서 가장 큰 학교",
        "link": "https://www.thestartupbible.com/2024/07/being-a-vc-means-that-you-can-get-the-best-education-in-the-world-for-free.html",
        "pubDate": "Sun, 21 Jul 2024 21:23:00 +0000",
        "content:encodedSnippet": "2012년도에 스트롱을 시작했으니까, 이제 12년 동안 한국이라는 시장과 컨셉에 투자한 셈이다. 정말, 시간은 남이 뭘 하든지 상관없이 알아서 빨리 가는 것 같다. 그동안의 우리 성적표를 보면 나쁘지 않다. 나쁘지 않지만, 그렇다고 우리가 한국에서 가장 투자를 잘하는 VC는 아니다. 우리보다 더 수익률이 좋은 투자자도 많고, 우리보다 더 많은 유니콘 회사에 투자한 투자자도 많고, 우리보다 더 투자를 잘하는 투자자도 많다.\n그런데 그나마 다른 투자자들보다 스트롱이 제일 잘 한다고 생각하는 걸 딱 하나만 뽑자면, 아마도 한국에 투자하는 VC 중, 우리가 가장 많은 창업가와 회사를 검토한다는 점일 것 같다. 작년 한 해 동안 우리가 검토한 회사가 1,300개 정도였고, 해마다 우리 투자팀의 5명은 – 나 포함 – 1,000개 이상의 회사를 서류나 대면 미팅을 통해서 검토한다. 우린 워낙 초기 회사에 투자하기 때문에, 일단 많이 검토하고, 많이 만나고, 많이 이야기해야지만 우리가 창업가에게 찾는 다양한 정성적, 비정형적 자질들을 파악할 수 있다. 창업가들과의 만남을 최소화하고, 정량적인 데이터를 기반으로 투자하는 VC들도 있지만, 우리 모델은 이렇게 하는 것보다 무조건 발로 많이 뛰면서 최대한 많은 회사를 검토하고 만나야지 잘 작동한다는 걸 그동안의 경험으로 배우면서 느끼고 있다.\n그동안 이렇게 많은 회사와 미팅하면서 내가 느끼고 배운 점들이 상당히 많다. 물론, 어떤 미팅은 아주 좋고, 어떤 미팅은 별로이고, 어떤 미팅은 실제 투자로 이어지지만, 대부분의 미팅은 투자로 이어지지 않는다. 하지만, 지금까지 창업가들과의 만남 중 쓸모없는 미팅은 단 한 개도 없었다. 별로였던 미팅조차도, 다시는 이런 스타일의 창업가와는 미팅하면 안 되겠다는 배움을 얻을 수 있는 쓸모 있는 미팅이다.\n사람을 만날 때마다 뭔가를 배울 수 있다는 관점에서 보면, 그리고 배움은 좋다는 관점에서 보면, VC만큼 보람차고 배움을 많이 얻을 수 있는 직업은 없다고 생각한다. 특히 우리같이 가리지 않고 모든 분야에 투자하면, 정말 생각지도 못한 아이디어, 기발한 사업 모델, 그리고 뭐니 뭐니 해도 정말 독특하고 특이한 창업가들을 많이 만난다. 로켓 만드는 회사에서 햄버거 프랜차이즈 회사까지, 1년 내내 재미있고 신기한 사업을 하는 창업가들을 만날 수 있다. 나만 원한다면, 그리고 시간을 할애할 수만 있다면, 내가 만날 수 있는 창업가들은 무제한이고, 이들로부터 뭔가를 배울 기회는 무궁무진하다. 그리고 정말 좋은 점은, 내가 찾아가도 되지만, 많은 분들이 우리 사무실로 기꺼이 와서, 본인들이 지금까지 사업하면서 많게는 10년 넘게 배웠던 살아 있는 지식을 가감 없이 우리와 공유해 준다는 것이다. 끊임없는 배움을 가로막는 유일한 한계는 바로 내겐 하루에 24시간 밖에 없고, 창업가들을 만나는 것 외에 다른 할 일들이 있다는 점이다.\n결국 VC를 한다는 건 끝없이 듣고, 끝없이 생각하고, 끝없이 질문하는 건데, 이건 학교에서 공부하는 거랑 별반 다르지 않다. 아니, 학교에서보다 훨씬 더 가치 있는 교육을 받을 수 있다. 모든 게 죽은 지식이 아니라, 생생하게 살아있고, 인생에 큰 도움이 되는 지식과 경험이기 때문이다. 나는 내가 VC라는 직업에 종사하면서 세상에서 가장 큰 학교에 다니는 학생이라는 생각을 종종 한다. 원래는 비싼 등록금을 내면서 지식을 습득해야 하는데, 오히려 월급을 받으면서, 아주 편하게 우리 사무실에서 앉아서, 나보다 더 훨씬 더 똑똑하고 경험이 많은 선생님인 창업가들이, 본인들이 피똥 싸고 개고생하면서 습득한 지식을 전부 다 공유하는데, 이게 얼마나 좋은 직업인가?\n이런 맥락에서 투자를 접근하다보면, 우리가 제공하는 초기 자본이 회사의 지분을 취득하기 위한 투자금이라기보단, 아주 똑똑한 분들이 사업 하는 걸 가까이서 보고 많은 걸 배우기 위해서 내는 수업료나 등록금이라는 생각도 든다. 다만, 우리가 창업가분들로부터 이렇게 많은 걸 배우는데, 창업가분들도 우리에게 조금이라도 뭔가를 배울 수 있길 바란다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2024/07/being-a-vc-means-that-you-can-get-the-best-education-in-the-world-for-free.html#comments",
        "content": "2012년도에 스트롱을 시작했으니까, 이제 12년 동안 한국이라는 시장과 컨셉에 투자한 셈이다. 정말, 시간은 남이 뭘 하든지 상관없이 알아서 빨리 가는 것 같다. 그동안의 우리 성적표를 보면 나쁘지 않다. 나쁘지 않지만, 그렇다고 우리가 한국에서 가장 투자를 잘하는 VC는 아니다. 우리보다 더 수익률이 좋은 투자자도 많고, 우리보다 더 많은 유니콘 회사에 투자한 투자자도 많고, 우리보다 더 투자를(...)",
        "contentSnippet": "2012년도에 스트롱을 시작했으니까, 이제 12년 동안 한국이라는 시장과 컨셉에 투자한 셈이다. 정말, 시간은 남이 뭘 하든지 상관없이 알아서 빨리 가는 것 같다. 그동안의 우리 성적표를 보면 나쁘지 않다. 나쁘지 않지만, 그렇다고 우리가 한국에서 가장 투자를 잘하는 VC는 아니다. 우리보다 더 수익률이 좋은 투자자도 많고, 우리보다 더 많은 유니콘 회사에 투자한 투자자도 많고, 우리보다 더 투자를(...)",
        "guid": "https://www.thestartupbible.com/?p=9161",
        "categories": [
          "Uncategorized",
          "education",
          "korea",
          "Strong",
          "technology",
          "vc"
        ],
        "isoDate": "2024-07-21T21:23:00.000Z"
      }
    ]
  },
  {
    "name": "Build a Great Product",
    "category": "개인",
    "posts": [
      {
        "creator": "Sonu Jung",
        "title": "처음 일을 마주할 때",
        "link": "https://sonu.hashnode.dev/face-the-work-head-on",
        "pubDate": "Sun, 21 Jul 2024 01:21:38 GMT",
        "dc:creator": "Sonu Jung",
        "content": "머리가 복잡할 때 가끔 찾아보는 티비 시리즈 중 하나가 ‘중쇄를 찍자’이다. 만화 원작에 열혈 직장인이 주인공인 샐러리맨 판타지 드라마인데, 일을 진심인 사람들의 희노애락을 단순 명쾌하고 극적으로 표현해서 좋아한다.\n가장 좋아하는 에피소드는 사키구치 켄타로가 연기한 코이즈미 각성 편이다.\n원치 않던 영업 부서에 발령받아 처음에는 일에 흥미도 없고 시니컬한 자세를 취하던 코이즈미가, 자신의 의견이 동료들에게 인정받고 성과로 이어지면서 처음으로 일...",
        "contentSnippet": "머리가 복잡할 때 가끔 찾아보는 티비 시리즈 중 하나가 ‘중쇄를 찍자’이다. 만화 원작에 열혈 직장인이 주인공인 샐러리맨 판타지 드라마인데, 일을 진심인 사람들의 희노애락을 단순 명쾌하고 극적으로 표현해서 좋아한다.\n가장 좋아하는 에피소드는 사키구치 켄타로가 연기한 코이즈미 각성 편이다.\n원치 않던 영업 부서에 발령받아 처음에는 일에 흥미도 없고 시니컬한 자세를 취하던 코이즈미가, 자신의 의견이 동료들에게 인정받고 성과로 이어지면서 처음으로 일...",
        "guid": "https://sonu.hashnode.dev/face-the-work-head-on",
        "isoDate": "2024-07-21T01:21:38.000Z"
      }
    ]
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "쿠팡 엔지니어링",
    "category": "기업",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": [
      {
        "creator": "지마켓 기술블로그",
        "title": "오픈마켓 여행 플랫폼의 실전 API 연동 노하우",
        "link": "https://dev.gmarket.com/115",
        "pubDate": "Tue, 23 Jul 2024 10:59:22 +0900",
        "author": "지마켓 기술블로그",
        "comments": "https://dev.gmarket.com/115#entry115comment",
        "content": "<p data-ke-size=\"size16\">안녕하세요. Vertical Engineering 팀의 이지민입니다.<br />지마켓의 여행 플랫폼은 작년에 포스팅한<span>&nbsp;</span><a style=\"color: #0070d1;\" href=\"https://dev.gmarket.com/91\">오픈마켓에서 여행 플랫폼으로 살아남기</a>에서 소개드린 바 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여행 플랫폼은 지마켓의 커머스 시스템과 OTA(온라인 여행사 제휴업체) 서버의 API를 통합하여 서비스를 제공합니다. 이처럼 여러 서버와 의존성이 높아, 서비스의 복잡도가 높습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">특히, 실시간 API 연동을 요구하여, 견고하게 API를 호출해야 하는 비즈니스 도메인은 다음과 같습니다.</p>\n<ul style=\"list-style-type: disc; color: #333333; text-align: start;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">여행 상품 상세 페이지</li>\n<li style=\"list-style-type: disc;\">실시간 예약</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이번 글에서는 여행 상품 상세 페이지와 실시간 예약의 주요 특징과 고려 사항에 대해 설명하고자 합니다.</p>\n<h1 style=\"color: #333333; text-align: start;\">(1) 여행 상품 상세 페이지</h1>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여행 상품 상세 페이지는 내결함성(fault tolerance)이 높아야 하는 화면입니다. 이러한 요건이 생긴 배경과 개발 고려 사항은 다음과 같습니다.</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">특징</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여행 상품 상세 페이지는 지마켓 여행 플랫폼, 지마켓 커머스 시스템, OTA (온라인 여행사 제휴업체) 서버의 API를 조합하여 기능을 제공합니다. 한 화면에서 사용하는 API의 수만 10개 이상이고, 이를 책임지는 팀과 회사도 다양합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">다음은 상품 상세 페이지를 구성하기 위해 관여하는 서버를 추상화한 그림입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1_연계시스템.png\" data-origin-width=\"1280\" data-origin-height=\"750\"><span data-url=\"https://blog.kakaocdn.net/dn/2DO5W/btsIKio9coq/Ia6SB9ej4jRupQSKMBh151/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/2DO5W/btsIKio9coq/Ia6SB9ej4jRupQSKMBh151/img.png\"><img src=\"https://blog.kakaocdn.net/dn/2DO5W/btsIKio9coq/Ia6SB9ej4jRupQSKMBh151/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F2DO5W%2FbtsIKio9coq%2FIa6SB9ej4jRupQSKMBh151%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"1_연계시스템.png\" data-origin-width=\"1280\" data-origin-height=\"750\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><br /><br /></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여행플랫폼의 API에서 문제가 발생할 경우, 여행팀 내부에서 신속하게 대응할 수 있습니다. 반면, 외부에서 제공받은 API는 직접 제어하기 어렵습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">특히 일부 OTA (온라인 여행사 제휴업체)는 타사의 API를 직접 연동하기도 합니다. 이 경우, API 문제 발생 시, 대응이 더 어렵습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">하나의 상품 상세 페이지를 완성하는 과정은 여러 팀과 회사의 서버가 협력하는 복잡한 작업입니다. 그래서 다수의 API가 항상 완벽하게 동작하기를 기대하기 어렵습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이러한 특징으로 여행 상품 상세 페이지는 내결함성(fault tolerance)이 높은 시스템을 만들어야 한다는 미션이 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style1\"><span style=\"font-family: 'Noto Serif KR';\">fault&nbsp;tolerance:&nbsp;시스템을&nbsp;구성하는&nbsp;부품의&nbsp;일부에서&nbsp;결함(fault)&nbsp;또는&nbsp;고장(failure)이&nbsp;발생하여도&nbsp;정상적&nbsp;혹은&nbsp;부분적으로&nbsp;기능을&nbsp;수행할&nbsp;수&nbsp;있는&nbsp;시스템</span></blockquote>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">&nbsp;</h2>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">API 연동 고려 사항</h2>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">(a) 타임아웃 시간을 case by case으로 설정하기</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">일부 API의 응답 지연이 여행 상품 상세 페이지에 영향을 미치지 않게 하려면, 타임아웃을 적절하게 설정해야 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이때, 두 가지 특징을 고려하여, API 별로 적절한 타</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">임아웃을 설정해야 합니다.</p>\n<ul style=\"list-style-type: disc; color: #333333; text-align: start;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">중요도</li>\n<li style=\"list-style-type: disc;\">평균 응답시간</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">중요도가 낮은 API는타임아웃을 적절하게 설정하여, 응답 지연이 전체로 전파되지 않도록 해야 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">반면, 응답시간이 오래 걸리더라도 중요도가 높은 API은 최대한 기다려야 합니다. 대표적인 예로 가격과 재고 조회 API가 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여행 도메인에서 모든 실가격과 재고를 데이터베이스에 적재하는 것은 어렵습니다. 가격과 재고는 &ldquo;상품 x 옵션 x 연령별 요금제 x 날짜 x 시간&rdquo; 등등의 조합을 통해 결정됩니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">모든 조합을 사전에 저장해두는 것은 많은 비용이 들기 때문에 실시간으로 조회하여 연산해야 합니다. 이 경우, 오랜 시간 기다려야 합니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">(b) fallback: 결함이 발생하지 않은 척하기</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">특정 API에서 오류가 발생하는 경우, 일시적으로 기능을 제공하지 않는 방법으로 내결함성을 높일 수 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">예를 들어, 할인된 가격을 다루는 API에서 이슈가 발생하는 경우, 원가를 노출하는 경우가 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"2_fallback.png\" data-origin-width=\"1280\" data-origin-height=\"284\"><span data-url=\"https://blog.kakaocdn.net/dn/HJ6mV/btsIHE1XUYz/6Jm5Brxtk6vOv7iOZwnQ6k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/HJ6mV/btsIHE1XUYz/6Jm5Brxtk6vOv7iOZwnQ6k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/HJ6mV/btsIHE1XUYz/6Jm5Brxtk6vOv7iOZwnQ6k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHJ6mV%2FbtsIHE1XUYz%2F6Jm5Brxtk6vOv7iOZwnQ6k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"2_fallback.png\" data-origin-width=\"1280\" data-origin-height=\"284\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><a style=\"color: #0070d1;\" href=\"https://resilience4j.readme.io/\">reslience4j</a>을 사용하면 api 에러에 대한 fallback처리를 손쉽게 할 수 있습니다.<br />다음은 CircuitBreaker에 fallbackMethod를 적용한 샘플코드입니다.</p>\n<pre class=\"reasonml\" style=\"color: #333333; text-align: start;\" data-ke-language=\"java\"><code>@CircuitBreaker(name = \"discount\", fallbackMethod = \"getDiscountPriceFallback\")\npublic DiscountPrice getDiscountPrice(String productId, BigDecimal originPrice)\n    ...\n}\n\npublic DiscountPrice getDiscountPriceFallback(String productId, BigDecimal originPrice, Throwable t) {\n    return DiscountPrice.builder()\n    .price(originPrice)\n    .build();\n}</code></pre>\n<h1 style=\"color: #333333; text-align: start;\">(2) 실시간 예약</h1>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">실시간 예약 처리는 최종 일관성과 멱등성을 보장해야 합니다. 이러한 요건이 생긴 배경과 개발 고려 사항은 다음과 같습니다.</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">특징</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">고객의 결제가 승인되면, 예약을 확정하는 &ldquo;실시간 예약&rdquo;이 이루어집니다. &ldquo;실시간 예약&rdquo;은 지마켓 예약 플랫폼, 커머스 시스템, OTA (온라인 여행사 제휴업체)가 실예약을 계약하는 과정입니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이 과정이 중요한 이유는 크게 2가지입니다.</p>\n<ul style=\"list-style-type: disc; color: #333333; text-align: start;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">금전 거래와 관련 있다.\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">고객은 비용을 지불하고, 판매자는 대금에 대한 정산을 받는다.</li>\n<li style=\"list-style-type: disc;\">실시간 예약이 완료되는 시점부터 취소 위약금이 부과될 수 있다.</li>\n</ul>\n</li>\n<li style=\"list-style-type: disc;\">고객이 예약한 서비스를 확실하게 보장해야 한다.\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">만약 연동이 원활하지 않으면, 고객은 여행지에서 예약한 서비스를 제대로 제공받지 못하게 된다.</li>\n</ul>\n</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">각 시스템은 자신만의 고유한 상태를 지닙니다. 그리고 각 상태는 결제, 대금정산, 여행 서비스 제공 등의 기반 데이터로 사용됩니다. 그래서 세 개의 시스템은 일관된 상태로 동기화되어야 합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"3_시스템과_상태.png\" data-origin-width=\"1100\" data-origin-height=\"504\"><span data-url=\"https://blog.kakaocdn.net/dn/bwbtLy/btsIJxN4rYq/opDxBGvgFBjKqifLryNB90/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bwbtLy/btsIJxN4rYq/opDxBGvgFBjKqifLryNB90/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bwbtLy/btsIJxN4rYq/opDxBGvgFBjKqifLryNB90/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbwbtLy%2FbtsIJxN4rYq%2FopDxBGvgFBjKqifLryNB90%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"700\" height=\"321\" data-filename=\"3_시스템과_상태.png\" data-origin-width=\"1100\" data-origin-height=\"504\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이러한 특징에 의하여, 두 가지 비기능요건이 요구됩니다.</p>\n<ul style=\"list-style-type: disc; color: #333333; text-align: start;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">최종일관성 (eventual consistency)\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">일시적으로 상태가 어긋나더라도, 결국 동일한 단계의 상태로 동기화가 되어야 한다.</li>\n</ul>\n</li>\n<li style=\"list-style-type: disc;\">멱등성\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">동일한 연산을 여러 번 수행해도 결과가 동일해야 한다.</li>\n</ul>\n</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">API 연동 고려 사항</h2>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">(a) 상태머신 (state machine) 만들기</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">상태머신을 만들면, 복잡한 상태 연동 과정이 단순해집니다. 그리고 상태 동기화 함수의 재사용성도 높아집니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">상태머신을 설계할 때에는 다음 두 가지가 사전에 정의되어야 합니다.</p>\n<ul style=\"list-style-type: disc; color: #333333; text-align: start;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">각 시스템 별 상태 정의하기</li>\n<li style=\"list-style-type: disc;\">시스템 간 동일한 단계 매칭하기</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">다음 그림은 여행 플랫폼, 지마켓 커머스 시스템, 제휴사 시스템의 각 예약과 주문 상태에 대해 정의한 상태 다이어그램입니다.&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"4_상태다이어그램.png\" data-origin-width=\"1280\" data-origin-height=\"567\"><span data-url=\"https://blog.kakaocdn.net/dn/bf1zEK/btsIJwBFvms/P4R4l0VELsNnLfxTmUkobK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bf1zEK/btsIJwBFvms/P4R4l0VELsNnLfxTmUkobK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bf1zEK/btsIJwBFvms/P4R4l0VELsNnLfxTmUkobK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbf1zEK%2FbtsIJwBFvms%2FP4R4l0VELsNnLfxTmUkobK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"700\" height=\"310\" data-filename=\"4_상태다이어그램.png\" data-origin-width=\"1280\" data-origin-height=\"567\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여행플랫폼에서는 이처럼 상태의 흐름과 규칙을 사전에 정의한 후, 상태를 전이시키는 상태머신을 구현하였습니다.&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">(b) 대사배치 만들기</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">일시적인 장애로 인하여, 상태 연동 처리에 실패하는 경우가 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이때, 각 시스템의 예약 상태를 확인하고 재연동하는 대사 작업을 통해 이를 보강할 수 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">오케스트레이터 역할을 하는 배치 프로그램이 각 시스템의 상태를 확인합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">그리고 상태가 어긋난 경우, 상태머신을 통해 상태를 재연동합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"5_상태배치.png\" data-origin-width=\"1099\" data-origin-height=\"343\"><span data-url=\"https://blog.kakaocdn.net/dn/cTBlJa/btsIKe1k2TI/5nvIlJDWdAOur0C4uYtqM1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cTBlJa/btsIKe1k2TI/5nvIlJDWdAOur0C4uYtqM1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cTBlJa/btsIKe1k2TI/5nvIlJDWdAOur0C4uYtqM1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcTBlJa%2FbtsIKe1k2TI%2F5nvIlJDWdAOur0C4uYtqM1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"5_상태배치.png\" data-origin-width=\"1099\" data-origin-height=\"343\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이를 통해 상태가 일시적으로 어긋나더라도, 결국 일치하게 되는 최종일관성을 얻을 수 있습니다.</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">&nbsp;</h3>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">(c) 멱등성을 고려하여, 재시도하기</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">예약 상태 연동 과정에서 API 호출 에러가 발생하는 경우, 재시도로 문제를 해결할 수 있습니다. 그러나 예약 플랫폼에서는 에러응답을 받았으나, 연계 시스템에서는 정상적으로 접수된 상태일 수도 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">예를 들어, 타임아웃 및 네트워크 오류에 의하여 클라이언트는 에러가 났지만, 서버의 트랜잭션은 정상 종료가 된 경우가 그러합니다. 이 경우, API 호출을 재시도하면 연계 시스템 입장에서는 중복 요청이 됩니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">중복 요청 시, 연계시스템에서 에러를 리턴하는 경우가 있습니다. 이때 예약 플랫폼은 요청이 정상으로 접수된 것으로 인지할 수 있게 예외처리를 해야 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">(c-2) 중복 요청 시, 명시적인 에러코드가 반환되는 경우</h4>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"6_중복에러처리_에러코드.png\" data-origin-width=\"963\" data-origin-height=\"399\"><span data-url=\"https://blog.kakaocdn.net/dn/k2sWj/btsIJTXqR7R/qlDhAM6KhyVqwouRzmsm2K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/k2sWj/btsIJTXqR7R/qlDhAM6KhyVqwouRzmsm2K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/k2sWj/btsIJTXqR7R/qlDhAM6KhyVqwouRzmsm2K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fk2sWj%2FbtsIJTXqR7R%2FqlDhAM6KhyVqwouRzmsm2K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"600\" height=\"249\" data-filename=\"6_중복에러처리_에러코드.png\" data-origin-width=\"963\" data-origin-height=\"399\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">중복 요청 에러 코드가 내려오는 경우는 해피한 케이스입니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">해당 에러 코드가 내려오면 예약 플랫폼은 이를 성공으로 간주합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"color: #000000; text-align: start;\" data-ke-size=\"size20\">(c-2) 명시적인 에러코드는 없지만, 상태 조회 API를 제공하는 경우</h4>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"7_중복에러처리_상태조회.png\" data-origin-width=\"1060\" data-origin-height=\"405\"><span data-url=\"https://blog.kakaocdn.net/dn/Kirhl/btsIJHJHamb/PBSbuqeNRODdGfiw0fHwKk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Kirhl/btsIJHJHamb/PBSbuqeNRODdGfiw0fHwKk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Kirhl/btsIJHJHamb/PBSbuqeNRODdGfiw0fHwKk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FKirhl%2FbtsIJHJHamb%2FPBSbuqeNRODdGfiw0fHwKk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"600\" height=\"229\" data-filename=\"7_중복에러처리_상태조회.png\" data-origin-width=\"1060\" data-origin-height=\"405\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">때로는 중복요청으로 에러가 발생하더라도, 에러코드로 이를 식별할 수 없는 경우가 있습니다. 이 경우, 연계 시스템의 상태 조회 API를 활용하여 중복 호출 가능 여부를 판단할 수 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">때로는 연계 시스템의 상태가 다음 상태로 전이될 때까지 기다려야 하는 경우도 있습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이때에는<a style=\"color: #0070d1;\" href=\"https://www.baeldung.com/spring-retry\">spring-retry</a>의 exception, backoff 옵션을 사용하여, 일정시간 대기 이후 재시도를 할 수 있습니다.</p>\n<pre class=\"less\" style=\"color: #333333; text-align: start;\" data-ke-language=\"java\"><code>@Override\n@Retryable(value = NotReadyReservationException.class, backoff = @Backoff(delay = 5000), maxAttempts = 3)\npublic void reserve(String id) {\n    if(!isReservationReady(id)){\n        throw new NotReadyReservationException(id);\n    }\n    ...    \n}</code></pre>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\">(c) 보상 트랜잭션: 재시도로 해결할 수 없다면 깔끔하게 놓아주자.</h3>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">재시도로 해결할 수 없는 문제도 있습니다.</p>\n<ul style=\"list-style-type: disc; color: #333333; text-align: start;\" data-ke-list-type=\"disc\">\n<li style=\"list-style-type: disc;\">중복 호출 횟수만큼 실 데이터가 중복으로 접수되는 경우</li>\n<li style=\"list-style-type: disc;\">배치에서 일정 기간 동안 재시도를 했음에도 해결되지 않는 경우</li>\n</ul>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">이 경우, 보상 트랜잭션을 통해 데이터를 원상태로 돌려주어야 합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"8_보상트랜잭션_응답처리.png\" data-origin-width=\"1023\" data-origin-height=\"422\"><span data-url=\"https://blog.kakaocdn.net/dn/byzgri/btsIJCuRtop/6DU27QEsqfXwFG1iDrbNd1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/byzgri/btsIJCuRtop/6DU27QEsqfXwFG1iDrbNd1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/byzgri/btsIJCuRtop/6DU27QEsqfXwFG1iDrbNd1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbyzgri%2FbtsIJCuRtop%2F6DU27QEsqfXwFG1iDrbNd1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"600\" height=\"248\" data-filename=\"8_보상트랜잭션_응답처리.png\" data-origin-width=\"1023\" data-origin-height=\"422\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">보상 트랜잭션을 매끄럽게 처리하려면, 롤백을 하기 쉬운 순서대로 외부 시스템을 연동해야 합니다. 제어하기 어렵고, 금전 거래와 관련된 트랜잭션은 가장 나중에 호출하는 것이 좋습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">예를 들어, OTA (온라인 여행 제휴업체)와 실예약을 계약하는 시점부터 취소가 불가능하거나 취소위약금이 부과되는 경우가 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"9_취소환불규정사례.png\" data-origin-width=\"1848\" data-origin-height=\"498\"><span data-url=\"https://blog.kakaocdn.net/dn/baRxE3/btsIJ96NsjS/5463LGEo6PpK5HfDkhXBoK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/baRxE3/btsIJ96NsjS/5463LGEo6PpK5HfDkhXBoK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/baRxE3/btsIJ96NsjS/5463LGEo6PpK5HfDkhXBoK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbaRxE3%2FbtsIJ96NsjS%2F5463LGEo6PpK5HfDkhXBoK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" data-filename=\"9_취소환불규정사례.png\" data-origin-width=\"1848\" data-origin-height=\"498\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">만약 OTA (온라인 여행 제휴업체)와 실예약을 한 이후, 지마켓 내부 시스템 연동에 실패한다면 상황을 되돌리기 어렵습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"10_보상트랜잭션_워스트케이스.png\" data-origin-width=\"955\" data-origin-height=\"503\"><span data-url=\"https://blog.kakaocdn.net/dn/dhj6od/btsIJEe8HiJ/GOTt9HeaynifdNdq88T9K0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dhj6od/btsIJEe8HiJ/GOTt9HeaynifdNdq88T9K0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dhj6od/btsIJEe8HiJ/GOTt9HeaynifdNdq88T9K0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdhj6od%2FbtsIJEe8HiJ%2FGOTt9HeaynifdNdq88T9K0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"500\" height=\"263\" data-filename=\"10_보상트랜잭션_워스트케이스.png\" data-origin-width=\"955\" data-origin-height=\"503\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><br /><br /></p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">그래서 이 경우, 상대적으로 대응이 쉬운 시스템을 먼저 연동하는 것이 좋습니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">그리고 돌이킬 수 없는 요청은 최하단에 배치하는 것이 좋습니다.&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"11_보상트랜잭션_해피케이스.png\" data-origin-width=\"919\" data-origin-height=\"439\"><span data-url=\"https://blog.kakaocdn.net/dn/cvhFsj/btsII1BSenZ/fLTCOknkVxd4a8cn8k5a6k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cvhFsj/btsII1BSenZ/fLTCOknkVxd4a8cn8k5a6k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cvhFsj/btsII1BSenZ/fLTCOknkVxd4a8cn8k5a6k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcvhFsj%2FbtsII1BSenZ%2FfLTCOknkVxd4a8cn8k5a6k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" width=\"500\" height=\"239\" data-filename=\"11_보상트랜잭션_해피케이스.png\" data-origin-width=\"919\" data-origin-height=\"439\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">마치며</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">본 글을 통해 여러 시스템과 API를 연동하며, 고려했던 점들을 공유드렸습니다. 본 글이 API 연동 과정에서 어려움을 겪는 분들께 도움이 되었으면 합니다.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\">참고</h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\"><a style=\"color: #0070d1;\" href=\"https://item.gmarket.co.kr/Item?goodscode=2519411763\">[도서] 이벤트 기반 마이크로서비스 구축: 8장. 마이크로서비스 워크플로 구축</a><br /><a style=\"color: #0070d1;\" href=\"https://medium.com/expedia-group-tech/four-key-differences-between-online-travel-and-online-shopping-e-commerce-8512cc47b0bf\">[아티클] Four Key Differences Between &ldquo;Online Travel&rdquo; and &ldquo;Online Shopping&rdquo; E-commerce</a></p>",
        "contentSnippet": "안녕하세요. Vertical Engineering 팀의 이지민입니다.\n지마켓의 여행 플랫폼은 작년에 포스팅한 오픈마켓에서 여행 플랫폼으로 살아남기에서 소개드린 바 있습니다.\n여행 플랫폼은 지마켓의 커머스 시스템과 OTA(온라인 여행사 제휴업체) 서버의 API를 통합하여 서비스를 제공합니다. 이처럼 여러 서버와 의존성이 높아, 서비스의 복잡도가 높습니다.\n \n특히, 실시간 API 연동을 요구하여, 견고하게 API를 호출해야 하는 비즈니스 도메인은 다음과 같습니다.\n여행 상품 상세 페이지\n실시간 예약\n이번 글에서는 여행 상품 상세 페이지와 실시간 예약의 주요 특징과 고려 사항에 대해 설명하고자 합니다.\n(1) 여행 상품 상세 페이지\n여행 상품 상세 페이지는 내결함성(fault tolerance)이 높아야 하는 화면입니다. 이러한 요건이 생긴 배경과 개발 고려 사항은 다음과 같습니다.\n특징\n여행 상품 상세 페이지는 지마켓 여행 플랫폼, 지마켓 커머스 시스템, OTA (온라인 여행사 제휴업체) 서버의 API를 조합하여 기능을 제공합니다. 한 화면에서 사용하는 API의 수만 10개 이상이고, 이를 책임지는 팀과 회사도 다양합니다.\n다음은 상품 상세 페이지를 구성하기 위해 관여하는 서버를 추상화한 그림입니다.\n\n\n\n\n여행플랫폼의 API에서 문제가 발생할 경우, 여행팀 내부에서 신속하게 대응할 수 있습니다. 반면, 외부에서 제공받은 API는 직접 제어하기 어렵습니다.\n \n특히 일부 OTA (온라인 여행사 제휴업체)는 타사의 API를 직접 연동하기도 합니다. 이 경우, API 문제 발생 시, 대응이 더 어렵습니다.\n하나의 상품 상세 페이지를 완성하는 과정은 여러 팀과 회사의 서버가 협력하는 복잡한 작업입니다. 그래서 다수의 API가 항상 완벽하게 동작하기를 기대하기 어렵습니다.\n \n이러한 특징으로 여행 상품 상세 페이지는 내결함성(fault tolerance)이 높은 시스템을 만들어야 한다는 미션이 있습니다.\n \nfault tolerance: 시스템을 구성하는 부품의 일부에서 결함(fault) 또는 고장(failure)이 발생하여도 정상적 혹은 부분적으로 기능을 수행할 수 있는 시스템\n \nAPI 연동 고려 사항\n(a) 타임아웃 시간을 case by case으로 설정하기\n일부 API의 응답 지연이 여행 상품 상세 페이지에 영향을 미치지 않게 하려면, 타임아웃을 적절하게 설정해야 합니다.\n이때, 두 가지 특징을 고려하여, API 별로 적절한 타\n임아웃을 설정해야 합니다.\n중요도\n평균 응답시간\n중요도가 낮은 API는타임아웃을 적절하게 설정하여, 응답 지연이 전체로 전파되지 않도록 해야 합니다.\n반면, 응답시간이 오래 걸리더라도 중요도가 높은 API은 최대한 기다려야 합니다. 대표적인 예로 가격과 재고 조회 API가 있습니다.\n \n여행 도메인에서 모든 실가격과 재고를 데이터베이스에 적재하는 것은 어렵습니다. 가격과 재고는 “상품 x 옵션 x 연령별 요금제 x 날짜 x 시간” 등등의 조합을 통해 결정됩니다.\n \n모든 조합을 사전에 저장해두는 것은 많은 비용이 들기 때문에 실시간으로 조회하여 연산해야 합니다. 이 경우, 오랜 시간 기다려야 합니다.\n(b) fallback: 결함이 발생하지 않은 척하기\n특정 API에서 오류가 발생하는 경우, 일시적으로 기능을 제공하지 않는 방법으로 내결함성을 높일 수 있습니다.\n예를 들어, 할인된 가격을 다루는 API에서 이슈가 발생하는 경우, 원가를 노출하는 경우가 있습니다.\n\n\nreslience4j을 사용하면 api 에러에 대한 fallback처리를 손쉽게 할 수 있습니다.\n다음은 CircuitBreaker에 fallbackMethod를 적용한 샘플코드입니다.\n@CircuitBreaker(name = \"discount\", fallbackMethod = \"getDiscountPriceFallback\")\npublic DiscountPrice getDiscountPrice(String productId, BigDecimal originPrice)\n    ...\n}\n\npublic DiscountPrice getDiscountPriceFallback(String productId, BigDecimal originPrice, Throwable t) {\n    return DiscountPrice.builder()\n    .price(originPrice)\n    .build();\n}\n(2) 실시간 예약\n실시간 예약 처리는 최종 일관성과 멱등성을 보장해야 합니다. 이러한 요건이 생긴 배경과 개발 고려 사항은 다음과 같습니다.\n특징\n고객의 결제가 승인되면, 예약을 확정하는 “실시간 예약”이 이루어집니다. “실시간 예약”은 지마켓 예약 플랫폼, 커머스 시스템, OTA (온라인 여행사 제휴업체)가 실예약을 계약하는 과정입니다.\n이 과정이 중요한 이유는 크게 2가지입니다.\n금전 거래와 관련 있다.\n\n고객은 비용을 지불하고, 판매자는 대금에 대한 정산을 받는다.\n실시간 예약이 완료되는 시점부터 취소 위약금이 부과될 수 있다.\n고객이 예약한 서비스를 확실하게 보장해야 한다.\n\n만약 연동이 원활하지 않으면, 고객은 여행지에서 예약한 서비스를 제대로 제공받지 못하게 된다.\n각 시스템은 자신만의 고유한 상태를 지닙니다. 그리고 각 상태는 결제, 대금정산, 여행 서비스 제공 등의 기반 데이터로 사용됩니다. 그래서 세 개의 시스템은 일관된 상태로 동기화되어야 합니다.\n\n\n이러한 특징에 의하여, 두 가지 비기능요건이 요구됩니다.\n최종일관성 (eventual consistency)\n\n일시적으로 상태가 어긋나더라도, 결국 동일한 단계의 상태로 동기화가 되어야 한다.\n멱등성\n\n동일한 연산을 여러 번 수행해도 결과가 동일해야 한다.\n \nAPI 연동 고려 사항\n(a) 상태머신 (state machine) 만들기\n상태머신을 만들면, 복잡한 상태 연동 과정이 단순해집니다. 그리고 상태 동기화 함수의 재사용성도 높아집니다.\n상태머신을 설계할 때에는 다음 두 가지가 사전에 정의되어야 합니다.\n각 시스템 별 상태 정의하기\n시스템 간 동일한 단계 매칭하기\n다음 그림은 여행 플랫폼, 지마켓 커머스 시스템, 제휴사 시스템의 각 예약과 주문 상태에 대해 정의한 상태 다이어그램입니다. \n\n\n여행플랫폼에서는 이처럼 상태의 흐름과 규칙을 사전에 정의한 후, 상태를 전이시키는 상태머신을 구현하였습니다. \n \n(b) 대사배치 만들기\n일시적인 장애로 인하여, 상태 연동 처리에 실패하는 경우가 있습니다.\n이때, 각 시스템의 예약 상태를 확인하고 재연동하는 대사 작업을 통해 이를 보강할 수 있습니다.\n \n오케스트레이터 역할을 하는 배치 프로그램이 각 시스템의 상태를 확인합니다.\n그리고 상태가 어긋난 경우, 상태머신을 통해 상태를 재연동합니다.\n\n\n이를 통해 상태가 일시적으로 어긋나더라도, 결국 일치하게 되는 최종일관성을 얻을 수 있습니다.\n \n(c) 멱등성을 고려하여, 재시도하기\n예약 상태 연동 과정에서 API 호출 에러가 발생하는 경우, 재시도로 문제를 해결할 수 있습니다. 그러나 예약 플랫폼에서는 에러응답을 받았으나, 연계 시스템에서는 정상적으로 접수된 상태일 수도 있습니다.\n \n예를 들어, 타임아웃 및 네트워크 오류에 의하여 클라이언트는 에러가 났지만, 서버의 트랜잭션은 정상 종료가 된 경우가 그러합니다. 이 경우, API 호출을 재시도하면 연계 시스템 입장에서는 중복 요청이 됩니다.\n \n중복 요청 시, 연계시스템에서 에러를 리턴하는 경우가 있습니다. 이때 예약 플랫폼은 요청이 정상으로 접수된 것으로 인지할 수 있게 예외처리를 해야 합니다.\n \n(c-2) 중복 요청 시, 명시적인 에러코드가 반환되는 경우\n\n\n중복 요청 에러 코드가 내려오는 경우는 해피한 케이스입니다.\n해당 에러 코드가 내려오면 예약 플랫폼은 이를 성공으로 간주합니다.\n \n(c-2) 명시적인 에러코드는 없지만, 상태 조회 API를 제공하는 경우\n\n\n때로는 중복요청으로 에러가 발생하더라도, 에러코드로 이를 식별할 수 없는 경우가 있습니다. 이 경우, 연계 시스템의 상태 조회 API를 활용하여 중복 호출 가능 여부를 판단할 수 있습니다.\n \n때로는 연계 시스템의 상태가 다음 상태로 전이될 때까지 기다려야 하는 경우도 있습니다.\n이때에는spring-retry의 exception, backoff 옵션을 사용하여, 일정시간 대기 이후 재시도를 할 수 있습니다.\n@Override\n@Retryable(value = NotReadyReservationException.class, backoff = @Backoff(delay = 5000), maxAttempts = 3)\npublic void reserve(String id) {\n    if(!isReservationReady(id)){\n        throw new NotReadyReservationException(id);\n    }\n    ...    \n}\n \n(c) 보상 트랜잭션: 재시도로 해결할 수 없다면 깔끔하게 놓아주자.\n재시도로 해결할 수 없는 문제도 있습니다.\n중복 호출 횟수만큼 실 데이터가 중복으로 접수되는 경우\n배치에서 일정 기간 동안 재시도를 했음에도 해결되지 않는 경우\n이 경우, 보상 트랜잭션을 통해 데이터를 원상태로 돌려주어야 합니다.\n\n\n보상 트랜잭션을 매끄럽게 처리하려면, 롤백을 하기 쉬운 순서대로 외부 시스템을 연동해야 합니다. 제어하기 어렵고, 금전 거래와 관련된 트랜잭션은 가장 나중에 호출하는 것이 좋습니다.\n \n예를 들어, OTA (온라인 여행 제휴업체)와 실예약을 계약하는 시점부터 취소가 불가능하거나 취소위약금이 부과되는 경우가 있습니다.\n\n\n만약 OTA (온라인 여행 제휴업체)와 실예약을 한 이후, 지마켓 내부 시스템 연동에 실패한다면 상황을 되돌리기 어렵습니다.\n \n\n\n\n\n그래서 이 경우, 상대적으로 대응이 쉬운 시스템을 먼저 연동하는 것이 좋습니다.\n그리고 돌이킬 수 없는 요청은 최하단에 배치하는 것이 좋습니다. \n\n\n \n마치며\n본 글을 통해 여러 시스템과 API를 연동하며, 고려했던 점들을 공유드렸습니다. 본 글이 API 연동 과정에서 어려움을 겪는 분들께 도움이 되었으면 합니다.\n \n참고\n[도서] 이벤트 기반 마이크로서비스 구축: 8장. 마이크로서비스 워크플로 구축\n[아티클] Four Key Differences Between “Online Travel” and “Online Shopping” E-commerce",
        "guid": "https://dev.gmarket.com/115",
        "categories": [
          "Backend"
        ],
        "isoDate": "2024-07-23T01:59:22.000Z"
      }
    ]
  },
  {
    "name": "리멤버 (드라마 앤 컴퍼니)",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": [
      {
        "title": "책 '일의 격' 정리",
        "link": "https://hudi.blog/the-dignity-of-work/",
        "pubDate": "Sat, 27 Jul 2024 01:30:00 GMT",
        "content:encodedSnippet": "책 ‘일의 격’은 KT 엔터프라이즈 부문장 신수정의 책이다. 정확히는 ‘일의 격’은 저자가 저자의 페이스북에 꾸준히 올리는 일과 삶에 대한 글을 책으로 엮어 만든 것이다. 직전에 포스팅한 '프로그래머의 길, 멘토에게 묻다'와 마찬가지로 몇 달전에 읽은 책이지만 지금 올린다.\n사람은 어떻게 성장하는지, 조직을 어떻게 이끌어야 하는지, 어떤 삶의 태도를 가져야 하는지에 관하여 독자의 통찰이 담겨져있다. 통찰력있고 능력있는 상사와 매일 점심 식사를 같이 하게 되면 들을 법한 좋은 이야기들이 많이 담겨 있다고 생각한다.\n모든 내용을 포스트에 담기는 어렵고, 내가 좋다고 생각했던 부분을 간단하게 정리해본다. 정리한 것 중 특히나 더 좋은 것들은 * 로 표시한다.\n\n1장 - 성장\n\n보통 사람의 성공 비결은 과연 무엇일까? *\n2,000명의 유명한 과학자와 발명가의 업적을 조사한 결과, 나이와 무관하게 다작을 내는 시기에 가장 성공 가능성이 높은 결과물이 나온다는 것이 밝혀짐\n앨버트 라슬로 바라바시는 그의 책 ‘성공의 공식 포뮬러’에서 S=rQS=rQS=rQ (S = 성공, r = 아이디어의 가치, 능력, Q = 많은 시도, 집요함) 이라는 성공 공식을 제시한다. 즉, r이 낮더라도, Q를 높이면 뭔가 얻어걸려 성공할 가능성이 높아진다.\n그러므로 천재가 아닌 우리 같은 보통 사람들의 성공 비결은 단순하다. 나이가 먹어도 꾸준히 실행하는 것이다.\n집요하게 꾸준히 하면 운이 올 가능성이 높아진다. 운은 끊임없는 시도와 꾸준함에서 나온다.\n\n성공의 가장 큰 적은 실패가 아닌 지루함 *\n책 ‘아주 작은 습관의 힘’ 작가가 유명 코치에게 “뛰어난 선수와 보통 선수의 차이는 무엇인가요?” 라고 물었다. 작가는 능력, 운과 같은 답을 기대했지만, 돌아온 답은 ‘지루함을 견디는 것’ 이다.\n아마추어는 기분 좋을 때만 훈련한다. 보통 선수는 매일 훈련하지만 지루할 때면 대충 한다. 그러나 뛰어난 선수는 상관없이 훈련한다.\n책 ‘신경 끄기의 기술’ 에서는 “목표는 멋지지만 목표로 가는 길에는 똥 덩어리가 가득하다. 지루한 길이다. 성공을 결정하는 질문은 ‘나는 무엇을 하고 싶은가?’가 아니라, ‘그 과정에서 오는 고통을 견딜 수 있는가?’ 이다.”\n지루함을 견디는 방법은 ‘동일한 일을 그대로 반복하는 것이 아니라 조금씩 목표를 올려 도전함으로써 즐거움을 만드는 것’. 그리고 ‘이 과정을 습관화하여 자동으로 행동하게 만드는 것’.\n\n연봉을 더 받으려면? *\n개인의 연봉 = f(자신이 만드는 가치, 희소성)\n‘자신이 만드는(또는 기여하는) 가치’란 자신이 일함으로써 회사가 얼마나 이익을 창출할 수 있는가이다. 이는 개인의 능력만으로 결정되는 것은 아니고 회사의 수익 시스템과 결합하여 결정된다. 즉, 수익모델이 좋은 기업은 동일한 가치를 만드는 개인에게 비교적 더 많은 연봉을 줄 수 있다.\n연봉을 많이 받기 위한 규칙은 아래와 같다.\n법칙1 : 가능한 자신을 통해 만들 수 있는 가치가 큰 기업으로 가야한다.\n똑같은 능력의 사람으로 5천만원 밖에 못 만드는 회사도 있고 10억을 만드는 회사도 있다.\n단, 지금 큰 가치를 만드는 회사가 미래에도 계속 그러리라는 보장은 없다.\n법칙2 : 대체하기 어려운 희소성을 확보한다.\n내가 만들어 내는 가치가 ‘나’만이 만들어낼 수 있는지, 다른 사람이 내 자리에 있어도 만들어낼 수 있는지, 그 다른 사람들이 희소한지에 초점을 두어야 한다.\n오히려 작은 기업에 다닐 때 대체 가능한 사람이 주위에 더 없을 수 있다. 따라서 무조건 큰 기업에 가는 것이 나은 선택은 아닐 수 있다.\n\n하버드생보다 더 뛰어난 성과를 올리는 방법 *\n한 분야의 오랜 학습은 이것저것 잘하는 천재를 이긴다. 조금 덜 똑똑해도 한 분야를 끈질기게 오래 한 사람은 자신의 분야에 획을 그을 수 있다.\n스스로 머리가 부족하다고 여길수록 한 분야를 파라. 미친 듯이 오랜 기간 파라. 그러면 이것저것 관심 많고 인기 분야만 쫒아다니는 수재, 천재, 고학력자를 이길 수 있다. 세상은 알량한 머리와 학벌을 자랑하는 이들에 의해 바뀌는 게 아니다. 우직하고 호기심 있는 이들의 꾸준하고 피땀어린 노력에 의해 바뀐다.\n💬 사람들을 만나다보면, 가끔 그들의 천재성에 벽을 느끼는 경우가 많다. 그들과 가까워지는 유일한 방법은 우직한 노력이다.\n\n커리어의 80%는 예기치 않은 우연으로 결정된다\n인생은 구체적인 계획대로 돌아가지 않지만 북극성과 목적지는 명확히 정할 필요가 있다. 내가 어떤 미션이 있는가? 내가 이루려는 목표는 무엇인가? 를 정해야 한다. 단지, 그 미션과 목표를 이루어 가는 길은 우연이 개입하고 예측하기 어렵다는 것을 인정한다. 시행착오도 있을 수 있고 힘든 축적의 시기도 있다. 계획보다 느릴 수도 있다. 그러나 삶의 뜻이 분명하다면 그 과정을 인내하거나 나아가 즐길 수도 있다.\n계획을 세워야 한다. 계획 자체가 중요한 것이 아니라, 계획을 세우는 과정이 중요하다. 계획을 세우려 하면 생각을 하게 되고, 그것을 정리하고 가시화 하는 과정을 거친다. 그것이 계획만큼, 아니 계획보다 더 중요하다. 계획을 이루어나가려는 노력은 하라. 그러나 계획대로 안될 수도 있다는 사실을 인정한다.\n계획된 우연: 행운은 그냥 오는게 아니라 행운을 부르는 5가지 요소가 작동한다. 5가지 요인은 ‘호기심, 낙관성, 끈기, 융통성, 위험 감수’ 이다.\n삶은 ‘새옹지마’의 교훈이 작동한다. 처음 세웠던 계획이 망가졌지만, 그보다 더 나은 기회가 오기도 한다. 계획대로 잘 되었다고 너무 기뻐할 필요도 없다. 그게 그리 좋은 것은 아니었음을 이후 발견되기도 한다.\n\n어려움과 고민이 들 때 답을 찾는 질문\n스스로 답을 찾을 수 있는 5가지 질문\n내가 얻고 싶은 결과는? (원하는 것)\n나는 왜 그것을 얻고 싶은가? (목적)\n어떻게 하면 그것을 실현시킬 수 있는가? (실현 전략)\n그것은 내 미래에 어떤 의미가 있을까? (의미)\n지금 내가 할 일은? (행동)\n\n피하는 쪽이 아니라 향하는 쪽으로 생각하라\n원하는 모습을 추구하다보면 문제들은 자연스럽게 해결될 때가 많다.\n“무엇인가를 하지 않겠다는 결심을 마음에 새기는 것은 불가능하다”\n“나는 왜 돈이 부족할까?”, “나는 왜 실력이 부족할까?”, “나는 왜 나쁜 습관에 빠져있을까?” 등에 집중하다 보면 항상 돈이 부족한 채 실력이 부족한 채 그 습관에 빠져있는 채 살게 된다는 것이다. 코끼리를 생각에서 없애려 하지 말고, 대신에 강아지를 생각하자.\n중요한 것은 원하지 않는 것을 없애려는 데 에너지를 쏟기보다는 원하는 것에 에너지를 쓰는 것이 더 낫다. 내가 직장에서 어떤 모습을 만들까? 어떤 회사를 만들까? 어떤 사람이 될까? 돈을 많이 벌어 뭐할까? 에 집중하고 이를 위해 무엇을 할까? 를 실행하는 것이다.\n“피하려고 생각하기보다는 향해서 나아가려고 생각하라”\n자신의 부족함을 극복하기 위해 애쓰려는 노력을 원하는 형상이나 이미지를 만들고 이를 성취하는데 쓰라.\n\n집중력과 의지력의 명과 암\n어떤 것에 에너지를 과하게 쓰는 사람은 항상 그 이면이 있다.\n가난한 사람이 계속 가난한 상태를 유지하는 이유 중 하나는 현재 빈곤 해결에 에너지를 다 쏟아버리기 때문에, 조금 더 멀리 보는데 에너지를 쓸 여유가 없기 때문이라고 한다.\n밖에서는 유명하고 화려한 사람이 막상 집에서는 아무 대화도 없이 무기력하게 퍼져있고, 집에서 아무런 통제력을 발휘하지 못하고, 아이와 놀아주는 것등 소소한 일상을 즐거움으로 여기지 못한다. 에너지를 한 쪽에 너무 써서 다른 쪽에 집중력이나 의지력을 발휘할 여지가 없기 때문이기도 하다.\n그러므로 너무 한쪽에 모든 에너지를 써버리거나 매사에 과도한 열정과 의지력을 써버리는 것도 위험하다. 조금 남겨두어야 개인의 삶이나 진짜 원하는 꿈을 위해서도 쓸 수 있다. 일주일에 하루 정도는 눈앞에 일에서 벗어나 소소함을 누리거나 조금 먼 시각, 장기적인 시각에서 자신의 일과 삶을 돌이켜 볼 필요도 있다.\n\n과연 연주를 가장 잘 하는 연주자가 최고의 성공을 할까?\n런던의 한 연구팀은 클래식 경연 대회 결선에 오른 세 사람들 중 누가 우승할지 세 집단에 맞추게 하였다. 한 집단에는 소리만, 또 다른 한 집단에는 연주 모습과 소리를 함께, 또 한 집단은 소리는 끈 채 연주 모습만 보여주었다. 흥미롭게도 우승자를 가장 높은 확률로 맞춘 집단은, 소리는 끈 채 연주 모습만 보여준 집단이었다.\n실력이란 콘텐츠에만 있지 않다. 인간의 인식이란 그런 것이다. 그러므로 보이는 것도 매우 중요하다. 특히 실력이 비슷하다면 보이는 것이 성공의 차이를 결정한다.\n\n테레사 수녀가 비행기 1등석을 탄 이유\n자신이 원하고 필요한 사람들이 있는 공간에 자신을 던져라. 배울만한 분들, 도움받을 수 있는 분들에게 말을 건네고 그들과 함께하는 기회를 놓치지 마라.\n용기 있게 하되 예의가 바르기만 하면 통하지 않는 경우는 별로 없다. 성공한 인격자일수록 기꺼이 타인을 돕는 것을 즐겨 하기 때문이다.\n\n글로 쓰면 다룰 수 있다 *\n똑똑해보이는 사람들의 말을 글로 기록해보면, 흥미롭게도 비합리적인 인식과 믿음이 적지 않았다.\n생각을 글로 명료화 한다면, 그 생각을 다룰 수 있게 된다.\n글을 명료화하지 않으면 다루기 어렵다. 생각이란 실체가 없어 여기를 잡으면 저기로가고 저기를 잡으면 여기로 온다. 게다가 감정까지 복합되면 아무리 똑똑한 사람도 이를 다룬다는 것은 거의 불가능하다.\n일할 때, 보고서, 논문 쓸 때 뿐 아니라 자기 삶에서도 글을 써보면 좋겠다.\n너무 잘 쓰려 하지말고 내 감정, 생각을 2~3줄로 ‘명명’ 하거나 ‘명료화’ 하는 정도로 충분하다.\n💬 이 글을 읽고 나서는, 복잡한 문제를 해결하기 위해 거의 항상 글을 쓰면서 생각을 정리하게 되었다.\n\n강렬한 호기심, 그리고 지속하는 힘이 천재를 이긴다 *\n세상의 획을 긋는 성취는 알량한 ‘머리’와 ‘효율’에서 나오는 게 아니라 우직한 ‘엉덩이’에서 나온다. 특정 분야에 대한 강렬한 관심, 강한 흥미, 인내와 끈기에서 나온다.\n강렬한 이끌림이 있는 분야에 우직하게 몰두하는 ‘지속하는 힘’이 천재를 이긴다.\n\n효과적으로 배우는 방법은 비효율적으로 배우는 것이다\n수동적인 독서, 강의는 편하지만 한계가 분명하다.\n실제 삶의 변화가 이뤄지려면 뇌에 새겨져야 한다. 뇌에 새겨지려면, 스스로 몸과 머리를 쓰고 기록하고 실습하고 연습하고 자기가 이를 말로 이야기해봐야한다. 그것도 반복해서 해야 한다.\n이러기 위해서는 2가지 허들, ‘귀찮음’, ‘지루함’ 그리고 ‘돈과 시간의 낭비’ (책을 사서 혼자 하는 것 보다, 이를 수행하기 위한 과정에 참석하는 것 등) 를 넘어야 한다.\n\n‘처음부터 제대로’가 ‘민첩함’의 발목을 잡는다 *\n많은 기업들이 무언가를 하는데 조심스러워하고, 한번 하면 ‘제대로’, ‘실수 없이’, ‘실패 안 되게’, ‘예상 가능한 모든 기능을 반영해서’, ‘반드시 성공해야 한다’라는 의식이 강함을 발견한다. 이는 애자일 방식에 익숙하지 않은 기업들의 특징이다.\n개인도 유사하다. 어떤 사람들은 ‘처음부터 제대로’할 것이 아니라면 아예 실행하지 않는다. ‘실수’하거나 ‘실패’하려 하지 않는다. 특히, 지금까지 좋은 경력과 브랜드를 쌓아왔을수록, 성공과 인정의 욕구가 강할수록 더더욱 그러하다.\n그러나, 일단 작게 실험해보고 피드백을 받으며 발전시켜가는 것이 훨씬 효과적이고 효율적이다. 더더욱 변화가 빠르고 예측이 어려운 이 세상에서 말이다.\n💬 예전에 친구가 ‘애자일은 삶의 방식’ 이라고 이야기 했던게 기억난다. 당시에는 이해가지 않았는데, 요즘은 이 말이 이해가 간다.\n\n‘짧게라도 여러 번’ 전략\n연구자들은 1시간 X 2번 보다 10분 X 7번이 효과가 더 크다고 한다. 핵심은 ‘짧게라도 여러 번’ 이다.\n여러번 하려면 어떻게 해야할까? 만만해야 한다. 일로 느껴지거나 지치면 백전백패이다.\n‘시간이 아니라 횟수’, 이 전략은 ‘성장’ 뿐 아니라 ‘행복’의 법칙이기도 하다. 어쩌다 한 번 하는 긴 시간의 좋은 경험보다 짧은 여러 번의 경험이 삶을 더 풍요롭게 한다고 하니.\n\n낮은 수준의 생각 전략\n중요하지만 하기 싫은 일이 있을 때, 높은 수준의 생각을 써야 하는 것이 귀찮고 힘들 때, 단순한 일을 하고 낮은 수준의 생각을 함으로써 스트레스를 줄이고 자기 합리화를 하는 것을 ‘낮은 수준의 생각 전략’ 이라고 한다.\n영어 실력을 높이기 위해, 영어를 효과적으로 공부하는 법에 대한 책을 읽는 것 보다, 외국 친구 모임에 나가서 수다를 떠는 것이 더 효과가 좋다.\n자신이 바쁘다면 스스로에게 물어볼 필요가 있다. 내가 진짜 중요한 일에 바쁜가? 아니면 그것을 회피하기 위한 쉬운 일을 하면서 이게 그 중요한 일에 도움될 거야라고 스스로를 합리화하고 있는 것은 아닌가?\n💬 쉽고 그럴듯 해보이고 마치고나면 뿌듯하지만, 곰곰히 생각해보면 큰 의미 없는 일을 하고 있지 않는가?\n\n전략적 무능\n‘전략적 무능’. 우리가 모든 것에 유능해지려고 애쓸 필요가 없다는 뜻이다. 모든 것을 제대로 하고, 모든 것을 잘 하려 하면 바쁘고 에너지가 한없이 든다. 그러므로 때로 어떤 것들에는 ‘무능’해질 필요가 있다는 것이다. 가장 가치 있고 중요한 일에 초점을 맞추고 나머지는 전략적으로 대충 해도 된다는 것이다.\n이런 식으로 몇 가지 영역에서 ‘무능’을 선택하면 의외로 시간이 많이 남는다. 그 시간에 자기가 원하고 필요한 것을 하면 된다.\n모든 것에 ‘유능’하기는 어렵다. 물론 특정 시기는 절대적으로 바쁠 수 밖에 없다. 그러나 계속 그렇게 살 수는 없다. 매우 바쁘게 살고 이를 좀 변화하고 싶은 분이라면 한 번쯤 거절하고 쳐낼 것, 좀 무능할 영역을 찾아보시라. 그거 안 한다고 죽지도 않고 큰일 나지도 않는다.\n\n‘그때 그걸 했어야 했는데’를 지금 하라 *\n인생은 ‘워터폴(waterfall)’이 아니라 ‘이터레이션(iteration)’이다. 실수도 하고 오판도 한다. 여기서 레슨을 받아 다시 하면 된다.\n불가능한 일이 아니라면 ‘그때 그걸 했어야 했는데’ 를 지금 하면 된다. 그런데 왜 이렇게 하기 어려울까? ‘용기’가 부족하기 때문이다. 용먹을 용기, 과거 잘못된 판단을 시인할 용기, 자존심을 꺾을 용기, 미움받을 용기…\n그러므로 진짜 똑똑한 사람은 IQ가 좋고 좋은 학벌과 스펙을 쌓은 사람이 아니라 ‘용기 있는 사람’이다. 어중간하게 똑똑한 사람은 후회를 하고 평론을 하지만, 진짜 똑똑한 사람은 사과를 하고 변화를 만든다.\n💬 인생은 애자일\n\n제대로 망치를 두드려라\n열심히 땀을 뻘뻘 흘리며 일하는 게 중요한 것이 아니다. 열심히 일하는데 아무 곳이나 망치를 두드리면 오히려 상황을 악화시킨다.\n프로, 전문직이나 기업과 사회의 리더들은 ‘열심’이나 ‘노력’으로 박수를 받는 것이 아니다. ‘유능함’으로 박수를 받아야한다. 끝없는 훈련과 개발, 경험으로 역량을 쌓아 문제의 본질을 찾아 해결해야 박수를 받는 것이다.\n💬 열심히 하는게 중요한게 아니다. 잘 하는게 중요하다. 프로니까.\n\n피드백을 회피하지 말자\n‘피드백’이 없으면 절대 발전이 없다.\n천재가 아닌 이상 혼자의 방식대로 바둑을 둬서는 제대로 배우고 피드백 받은 사람들을 이길 수 없다.\n마찬가지로 일을 하거나 사업을 할 때, 훌륭한 코치를 찾아 제대로 된 피드백을 받아 성장하는 것이 효과적으로 효율적인 길임이 분명하다.\n그러니 누구든지 좋은 코치를 찾아야 하고, ‘피드백’을 받는 것을 회피하거나 두려워하지 말자.\n\n‘즐긴다’는 말의 허상\n의도적인 훈련이란 즐기기 쉽지 않다. 훈련자의 육체적, 정신적 자원을 모조리 투입해야 하기 때문이다. 훈련과정을 즐긴다면 그것은 의도적인 훈련이라 할 수 없다.\n1만 시간의 법칙은 오도된다. 중요한 것은 연습을 얼마나 했는가가 아니라 의도적인 연습을 얼마나 했는가이고 세계 최고 수준이 되려면 반복되고 지루한 의도적 훈련을 필수적으로 거쳐야 한다. 즐거울 수 없다.\n\n편도체 바로 옆을 까치발로 살금살금 지나가라 *\n인간의 뇌는 ‘변화’를 싫어한다. 인간의 뇌는 변화를 위협으로 인식하고, 이에 뇌의 부위인 편도체를 깨운다.\n그럼 성공적으로 변화하는 방법은 무엇인가? 편도체가 눈치채지 못하게 해버리는 것이다. 즉, 한번에 확 하려고 하지 말고 조금씩 하라는 것이다.\n결심은 좋으나 처음부터 무리하지 마라. 그리고 가능한 혼자 하지마라. 같이 하는 사람과 함께하되 작게 출발하라. 처음부터 절대 무리하고 힘 다 빼지 마라.\n편도체가 눈치채지 못하게, “Aim high, but start small”\n\n45세 때부터였다\n논리적이고 체계적으로 생각하는 가장 좋은 방법은, 생각을 글로 쓰는 것과 그림으로 그리는 것\n글로 쓰거나 그림으로 그리면, 생각을 더욱 정교화할 수 있고, 다룰 수 있게 된다.\n잘 쓰려, 길게 쓰려 하지 말고, 그냥 쓰고, 정기적으로 쓰는 것이 중요하다.\n\n2장 - 성공\n💬 2장은 주로 조직, 리더 등에 대한 이야기가 나온다. 지금은 실무 능력을 키워가는데 바쁜 단계라서 그런가, 아직 2장의 여러 내용들에 공감하기는 어려웠다.\n\n리더는 체스 플레이어가 아니라 정원사다\n저자가 직장생활을 돌이켜보니 존경할만한 리더들은 모두 정원사 같은 리더였다.\n정원사 같은 리더란, 사사건건 참견하고 지시하는 리더가 아니라, 내가 일을 잘 할 수 있도록 편안한 환경을 만들어 주는 리더.\n반면 만나고 싶지 않은 리더는 나를 체스판의 말로 여겼던 리더. 간섭하고, 통제하려 하고, 자신의 이익이 될때만 친절하게 대하면서, 책임을 미루려는 리더.\n\n왜 훌륭한 목표와 전략이 실행에서 실패할까? *\n연구결과 목표와 전략이 실행 단계에서 실패하는 4가지 근본 원인이 밝혀졌다.\n85%의 응답자는 조직의 목표를 몰랐다.\n85%의 응답자는 조직의 목표를 이루기 위해 자신이나 자신의 조직이 할 일을 명확히 몰랐다.\n87%의 응답자는 회사가 가장 중요해 하는 목표와 관련해서 성공하는지 실패하는지 몰랐다.\n79%는 목표 진행에 있어 자신의 명확한 책임을 몰랐다.\n💬 나는 회사와 얼라인 되어 있는가? 나는 나무가 아닌 숲을 보고 있는가? 내가 어떤 일을 해야 조직에 임팩트를 낼 수 있을까? 이런것들을 생각하면서 일해야지 올바른 우선순위가 나올 것 같다. 시야를 넓혀야한다.\n\n철학, 핵심가치에 대하여\n핵심가치는 매우 중요한데 미션보다 더 내재화하기 어렵다.\n핵심가치는 그걸 무시하고 돈 벌 다른 기회가 있을 때도 이것 대신 선택할 배짱이 있어야하는 가치이다. 의사결정의 우선순위다.\n만일 신뢰가 핵심가치라면, 고객의 신뢰를 좀 저버리고 돈 벌 기회가 있더라도 이 기회를 포기할 정도가 되어야 한다.\n아마존의 제프 베조스가 “더 나은 방안이 있으면 언제든 카멜레온처럼 바꾸라”고 했지만, 이는 핵심가치가 아니라 방법, 전략, 비즈니스 모델을 의미한다.\n이 철학은 가치-인재상-브랜드-기업문화와 다 연결되어 있다.\n아마존이나 애플이나 구글이 대단한 이유는 기술에도 있지만 자신들의 가치를 악착같이 지켜왔기 때문이다.\n\n최고의 실행이 안먹히는 이유 *\n우리가 책에서 본 최고의 실행을 도입할 때 주의할 것 중 하나는 Context를 놓치면 안된다는 것이다.\n책이나 강연에는 Context 가 없다. 저자들이나 강연자들 또한 다른 회사의 사정을 알 리가 없다.\n예를 들어, 대부분의 실리콘밸리 기업이 자율을 추구할 수 있는 이유는 구성원들의 역량이 있기 때문이다.\n💬 이건 경영과 조직관리 뿐 아니라, 기술에서도 적용되는 이야기인 듯 하다. 다른 조직에서의 Best practice 가, 우리 조직에서는 먹히지 않을 수 있다. 맥락을 항상 생각해야한다.\n\nLearn it all은 Know it all을 이긴다 *\n“Learn it all은 Know it all을 이긴다”. 이 말은 MS 회장 사티아 나델라가 한 말이다. 아는체 하지 말고 겸손하게 모른다는 것을 인정하고, 매일이 새로운 날이 되도록 탐구하고 실험하라는 것이다.\n불행히도 직장인들의 80%는 10년간 새로운 것들을 거의 배우지 않는다고 한다.\n회사를 다닌 기간, 경력이 중요한 것이 아니다. 중요한 것은 얼마나 배우고 성장했는가이다.\n모르는 것을 인정하고 끊임없이 배움을 추구하는 사람은, 자신은 이미 모든 것을 알고 있다고 착각하는 사람을 이긴다.\n\n우리가 진실이라고 받아들이는 가정이 때로 우리를 한계 짓는다 *\n한 영역에서 오래 일한 분들은 그 업무를 매우 잘 이해하고 전문성이 있음에 틀림 없다. 그런데 흥미롭게도 이들 대부분은 더 큰 애벌레가 되는 변화는 훌륭하게 해내지만, 애벌레가 나비가 되는 변신을 생각하는 데 있어서는 매우 힘들어한다. 왜 그럴까?\n첫째, 기존의 가정을 고수하고 있다. 어느 업무나 ‘이래야 한다’는 가정이 있다. 그 가정하에 오래 일하다 보면 어느새 그 가정은 절대 깨어질 수 없는 ‘법칙’이 된다. 이에 그 가정을 넘어서는 생각을 하지 못한다.\n둘째, ‘비효율의 숙달화’이다. 불편하고 비효율적인 일도 자꾸 하다 보면 숙달되어 편해진다. 편해지면 그게 바꾸어야 할 것이라는 것을 못 느낀다.\n해결 방법은 무엇일까?\n경험자들은 자신의 눈에 ‘맹점’이 있을 수 있다는 것을 인정해야 하고 (겸손), 자신이 고수하고 있는 가정이 무엇일지 생각해 본다.\n고객, 외부에서 온 직원, 신입 직원, 외부인들의 관점을 무시하지 말고 들을 필요가 있다. (물론 이들 이야기의 상당 부분은 비현실적이고 엉뚱한 이야기 일 수도 있다)\n자신과 다른 업종의 혁신을 참고하고, 새로운 관점을 얻기 위해 책을 읽고 공부하라.\n💬 Question Every Assumption. 단순하면서 어려운 말이다. 모든 기본 가정에 의문을 제기하기 위해서는 용기가 필요하다. 나는 아직 용기가 부족하다. 사색하면서 일해야한다. 당연한건 당연한게 아닐 수도 있다. Fresh eye 의 이야기를 경청하고, 내가 Fresh eye 라면 용기있게 발언하자.\n\n비효율의 숙달화 *\n일터에서 벌어지는 최악의 상황 중 하나는 ‘비효율의 숙달화’ 이다. 비효율적인 방식이지만, 시간이 지나면서 숙달되고, 나중에는 비효율적이라는 사실을 잊는다. 그러면서 자신은 하루 고생하면서 열심히 일했다고 생각한다.\n항상 스스로에게 물어보자. 우리는 ‘비효율을 숙달해서 혁신의 필요성을 잃어버린 것 아닌가?’, ‘고객과 외부자가 볼 때는 말도 안되는 비효율을 우리는 너무도 자연스럽게 받아들이는 것은 아닌가?’, ‘우리는 나비가 아닌 더 나은 애벌레가 되려 하는 것은 아닌가?’\n\n모르는 걸 모른다고 말할 용기 *\n마이크로소프트 전 CEO 스티브 발머는, 회사 내에서 직원들을 경쟁시켜 진짜 천재를 찾아내고자 했다. 실패하면 그는 천재가 아니라고 간주하여 낮은 평가를 주거나 해고했다.\n그러자 천재들은 실패하지도 않고 누구에게 묻지도 않으며, 정보를 공유하지도 않았다. 다들 아는체만 했다. 실패하거나 모르면 평가 절하되기 때문이다. 그리고 목표를 낮게 설정했다. 높게 했다가 실패하면 멍청이라고 비난 받기 때문이다.\n그런데 새롭게 CEO로 부임한 사티아 나델라는 임원과 기술자들이 모인 회의에서 “저는 이 기술을 몰라요. 설명을 해주세요” 라고 말했다고 한다. “모르는 것과 실패했다는 것은 멍청하다는 의미가 아닙니다. 성장을 의미하는 것입니다. 우리에겐 천재가 필요한 게 아니라 서로 협력하는 팀이 필요합니다”. 그러자 그동안 천재 흉내를 내었던 직원들은, 실패를 두려워하지 않고 높은 목표를 설정하고 정보를 오픈했다.\n💬 나는 아직 모르는 걸 모른다고 말할 용기가 부족하다. 하지만 많이 나아지고 있다. 1년전의 나는 모두에게 실력이 출중한 개발자로 비춰져야했다. 하지만 지금은 많이 내려 놓았다. 이런 태도가 되려 내 성장을 막는 다는 것을 깨달았기 때문이다. 난 앞으로도 더 모르는 것을 모른다고 말할 것이다. 모르는 것을 부끄러워하는 대신, 천재인척 하면서 성장하려 하지 않는 마음가짐을 부끄러워 할 것이다.\n\n리더가 상처받지 않고 직원 피드백 받는 법 *\n리더십 코치 골드스미스 박사는 ‘피드백’이 아닌 ‘피드포워드’를 하라고 한다. 피드백이 바꿀 수 없는 과거에 초점을 맞추는 것이라면, 피드포워드는 바꿀 수 있는 미래에 에너지를 집중하는 것이다.\n“내가 과거에 잘못한 것이 무엇인가요?”, “나의 문제가 무엇인가요?” 라고 묻는 대신 “내가 ~부분을 잘하고 싶은데 좋은 방법이 없을까요?” 라는 방식으로 질문하자. 전자는 피드백의 질문이라면, 후자는 피드포워드의 질문이다.\n💬 (약간 딴소리) 이 이야기가 머리속에 강하게 남았는데, 출처는 기억이 나지 않았었다. 확실히 책에 어떤 내용이 있었는지 기억하지 못하는 것 같아도, 읽은 내용은 나도 모르게 나의 생각을 구성하게 되는 것 같다.\n\n사람에게서 해결책을 찾으려 하지 마라 *\n교육도 중요하고, 인식 전환도 필요하지만, 사람을 중심으로 삼는 대책은 ‘지속 가능’하지 않다.\n더 중요한 대책은 사람들이 그런 행동을 자연스럽게 하지 않도록 유도하는 시스템을 만드는 것이다.\n예를 들면 실수를 최소화 하는 인터페이스, 보안 위반을 하지 않도록 하는 시스템 등이 지속 가능한 대책이라고 할 수 있다.\n💬 책 ‘더 시스템’ 에도 나온 것 처럼, 사람의 유한한 의지력에 기대기 보다는 시스템을 구축하는 편이 더 낫다.\n\n상대가 진짜 똑똑한지 허풍인지 구별하는 방법\n아마존의 제프 베조스는 자신이 같이 일하고자 하는 ‘똑똑한 사람’의 기준을 다음과 같이 말한다. “가장 똑똑한 사람들은 끊임없이 자신의 이해를 수정한다. 그들은 이미 해결했던 문제들에 대해서도 다시 고려해본다. 그들은 기존 사고에 대항하는 새로운 관점, 정보, 생각, 모순, 도전 등에 대해 열려있다. 자신의 예전 생각이 잘못되었다면 언제든 바꾼다.”\n자신의 의사결정을 바꾸는 것을 ‘자신이 틀렸고 패배했고 어리석었다’라는 것을 인정한다고 생각하면 안된다. 자신의 의견은 확고히 가지고 있되 가정과 사실이 바뀌면 과감히 변경하라는 것이다. 가정이 바뀌고, 사실이 바뀌고, 환경이 바뀌었는데도 일관성을 부르짖는 것은 만용일 뿐이다.\n연구에 의하면 ‘지적 겸손(Intellectual humility)’을 가진 사람이 더 나은 의사결정을 한다고 한다. 지적 겸손도가 높은 사람들은 “Strong opinions, which are weakly held (느슨하게 쥔 강한 의사 표현)”의 자세를 갖는다고 한다. 자신의 의견을 분명히 가지고는 있지만, 그것에 집착하지 않는다는 것이다.\n\n3장 - 성숙\n💬 여기부터는 삶과 인생에 대한 이야기가 많이 나온다. 블로그 주제와 다소 거리감(?) 있지 않나 싶지만, 이왕 여기까지 정리해본 김에 3장도 내용이 좋은 것들은 간단히 옮겨 본다.\n\n너무 일희일비할 필요가 없다\n어떤 벌어진 사건에 너무 일희일비할 필요가 없다. 과거는 과거다.\n나쁜 일이 벌어지면 좋은 일도 있으려니 하고 좋은 일이 벌어지면 감사하되 경계할 필요가 있다. 이것이 인생이다.\n\n과제의 분리 *\n인간관계를 힘들어하는 분들에게서 발견하는 두 가지 특성이 있는데, 하나는 ‘과제의 분리’를 잘 못하는 것이고, 또 하나는 ‘일어난일과 해석의 분리’를 잘 못하는 것이다.\n심리학자 아들러의 주장 중 하나인 ‘과제의 분리’는 자신의 일과 타인의 일을 구분하라는 것이다.\n‘과제의 분리’를 하면, 다른 사람이 나에 대해 어떻게 생각하는지 그리 괘념하지 않게 된다. 나에 대해 어떻게 생각하는지는 그의 일이지 나의 일이 아니다. 그러나 그가 어떻게 나를 생각하고 대하는가에 따라 내 감정이 흔들리는가 아닌가는 나의 과제이다. ‘과제의 분리’를 하면, 내가 누군가를 돕거나 벽을 허무는 것, 용서하는 것은 나의 과제이지만 그것을 받아들이는 것은 그의 과제라는 것을 알게 된다.\n나는 나의 과제를 하고 그는 그의 과제를 한다. 나는 타인의 과제에 끼어들지 않고 타인은 당신의 과제에 끼어들지 않게 한다.\n\n더 많이 행동하면 더 행복해진다\n저자가 행복에 관한 책을 몇권 읽고 요약한 것:\n유전적 요인이 50% 정도.\n환경적 요인(새집 구매, 좋은 직장, 좋은 배우자, 승진 등)이 10% 정도. 생각보다 비중은 낮다.\n나머지 40%는 매일매일의 습관이나 행동을 선택하는 방식. ‘스스로 의도한 행동’을 함으로써 행복을 느낀다고 한다 (자기효능감?). 행동한 결과가 성공일 때 행복한 것이 아니라, 원하는 행동 자체를 한 것이 행복을 결정한다고 한다.\n\n조금은 빈둥거려도 괜찮다\n매시간 빈둥거린다면 문제가 있지만, 매 순간 100% 빡빡하게 사는 것도 위험하다.\n20% 정도는 여유를 가지는 것이 좋을 듯 하다. 이래야 미래를 위한 고민도 하고, 가족과 책이나 자연을 즐기고, 비상 상황 시 백업으로 쓸 수 있다.\n의외로 열심히 살면서도 무언가 여유가 있으면 잘못 살고 있는 듯 죄의식을 느끼는 과도하게 성실한 분들이 꽤 있다. 죄의식을 놓을 필요가 있다. 20%는 좀 빈둥거려도 된다.\n\n그게 다다 *\n우리의 큰 실수 중 하나는 어떤 발생한 사건으로 그 사람의 인격이나 특성을 정형화하여 해석하는 것이다. 뭐 하나를 실수했을 뿐인데 ‘멍청하다’, ;칠칠치 못하다’, ‘바보 같다’의 정형화된 해석을 한다. 나를 환영하지 않는 상대의 어떤 하나의 행동에도 ‘그는 나를 싫어해’, ‘나는 사랑받을 존재가 아니야’ 등으로 일반화하기도 한다.\n실수를 했으면 고치면 되고, 잘못을 하면 꾸중을 듣고, 성과가 안 나오면 교훈 삼아 다음에 잘하면 되고, 차였으면 다른 사람을 찾으면 된다. 그게 다다.\n\n동일한 일만 계속하면 인생이 통째로 사라진다\n우리의 삶이 다람쥐 쳇바퀴 같다면 시간이 많이 흘러도 뇌에 남는 게 없다. 과거 10년 동안 뭘 했는지 기억에 별로 없다면 바로 이 때문이다.\n현재까지 인간의 수명을 크게 늘릴 방법은 없지만, 뇌가 느끼기에 수명을 늘릴 수 있는 방법이 있다. 그것은 바로 ‘변화하는 삶’을 사는 것이다. 변화가 많은 삶을 살수록 인생은 길어진다.\n\n너무 잘 될 때 조심하라\n과도하게 잘 풀리는 게 좋은 게 아니다. 고생도 하고, 좌절도 하고, 장애물도 만나면서 이를 극복하며 축적을 하나씩 할 때, 오히려 겸손할 수 있고 어려운 상황을 만나도 의연하게 대처할 수 있다.\n지금 인생이 잘 안풀린다면? 축적의 시간으로 생각하고 감사하라. 지금 너무 잘 풀린다면? 겸손하고 최악의 상황과 미래의 전환을 대비하라.\n💬 ’인생사 새옹지마’ 이야기가 많이 나온다.\n\n나는 나의 삶의 통제자요, 원인이요, 자유인인가?\n아무리 잘 먹고 잘 살아도 자신의 삶에 자신이 ‘원인’이요 ‘선택자’요 ‘창조자’가 아니라면 인간은 행복할 수 없다. 사육당하는 애완견과 다를 바 없을 것이다.\n연구에 의하면 인간이 실제 자신의 삶을 통제하지 못하더라도 통제하고 있다고 생각(착각)만 해도 삶은 훨씬 건강하고 행복해진다는 것이다. 인간의 ‘생각’은 ‘실재’에 대한 ‘관점’을 바꿀 수 있는 힘이 있다. 더욱 흥미로운 것은 많은 경우 ‘관점’을 바꾸면 ‘실재’도 정말 바뀌곤 한다는 것이다.\n💬 약간 다른 이야기이지만… 아인슈타인은 어려운 문제를 만났을 때 위기라고 생각하는 대신 흥미로운 ‘퍼즐’이라고 생각했다고 한다. 이런 관점의 전환이 우리의 문제 해결 능력을 높여주지 않을까.\n\n다른 사람들의 인정과 칭찬을 구할 필요가 없는 이유\n심리학자 아들러는 ‘타인의 인정을 구할 필요가 없다’고 말한다. 이런 삶은 다른 사람들의 기대를 만족시키는 삶을 살게 될 위험이 높다는 것이다. 궁극적으로는 ‘타인의 삶을 사는 것’으로 귀결된다.\n그는 이렇게 묻는다. “만일 당신이 다른 사람의 삶을 산다면, 누가 당신의 삶을 살아 줄 것인가? 당신 자신의 삶을 살 사람은 바로 당신이다”\n타인의 판단, 시선, 기대, 칭찬, 인정에 일희일비 하지 않고, 그저 쿨하게 받아들여라.\n\n정말 살고 싶은 삶은?\n“삶에서 가장 원하는 것이 무엇인가?” 라는 질문을 해보자. 돈, 권력, 명예 등 다양한 답변이 나올 것이다.\n그러면 “그것이 이루어지면 무엇을 하고 싶은가?” 라고 물어보자. 그 이상을 생각해보았는가?\n얻고 싶은 것을 얻는 것이 자신이 원하는 삶이라고 생각하지만, 어쩌면 정말 원하는 삶은 다른 것일 수도 있다.\n\n‘무거워서’ 힘든 게 아니다 *\n한 강사가 청중 앞에서 물컵을 들고 “이 물컵이 가벼운 가요? 무거운 가요?” 라고 물었다. 청중들은 ‘가볍다’고 했다. 그러자 그는 “만일 이 물컵을 1시간 동안 들 수 있을까요?” 라고 되물었다. 청준들은 30분 이상은 힘들다고 답했다.\n그는 다시 물었다. “힘들 때 마다 내렸다가 다시 들면 어떨까요?”. 그랬더니 청중들은 그러면 하루 종일이라도 들 수 있다고 답했다.\n스트레스, 염려, 책임, 불안, 경제적 짐의 가볍고 무거움과 삶이 힘든 것과는 관계가 별로 없다. 설령 그것이 가벼워도 힘들 수 있다. 역으로 돌덩이처럼 무거워도 힘들지 않을 수 있다. 가벼워도 힘든 이유는 틈틈이 내려놓지 않아서 이고, 무거워도 힘들지 않은 이유는 틈틈이 내려놓기 때문이다. 그러므로 자신이 힘든 것은 ‘무게’와 상관이 없다. ‘내려놓음’과 상관이 있다.\n\n스트레스는 나의 친구요 나의 도전이다\n신경 심리학자이자 뇌과학자 이안 로버트슨은 말했다.\n“스트레스의 강도가 너무 세면 사람을 무너뜨릴 수 있습니다. 그러나 극단적인 경우가 아니라면 그 스트레스는 사람에 따라 어떤 이에게는 자신을 발전시키는 ‘도전’이 되기도 하고, 어떤 이에게는 자신을 망가뜨리는 ‘위협’이 되기도 하빈다. 그러면 그 차이는 무엇일까요? ‘통제력’입니다. 스트레스는 자신을 강하게 할 수도 있고 무너뜨릴 수도 있는데, 그 핵심요소는 스트레스 자체에 있지 않고 스트레스에 대한 자신의 ‘태도’에 있습니다. 자신이 자신의 삶과 스트레스를 ‘통제’하고 있다고 ‘믿는’사람에게는 스트레스가 도전일 뿐입니다.”\n\n잘 안돼도 괜찮아\n스페인 인지치료학자 라파엘 산탄트루는 사람들이 기본적으로 기본적으로 가지고 있는 세 가지의 비합리적 신념에 대해 말한다.\n내가 하는 모든 것이 잘 되어야 돼.\n사람들은 나를 친절하고 공정하게 대해야 해.\n모든 일은 내 뜻대로 돌아가야 해.\n실제 가질 필요가 있는 합리적인 신념은 다음과 같다.\n모든 것을 잘하고 싶어. 하지만 못한다고 해도 망가지는 건 아냐.\n다른 사람들이 내게 친절하게 대하면 좋겠어. 하지만 그렇게 안해도 괜찮아.\n내 뜻대로 돌아가면 좋겠어. 하지만 그렇지 않아도 상관없어.\n\n자신의 삶을 바꿀 수 있는 것은 오직 ‘나 자신’ 뿐이다\n일어난 ‘사건’이나 주위의 ‘환경’, 나의 ‘모습’ 이 자체가 나의 삶을 좌지우지하는 것이 아니라 그것들에 ‘내가 부여한 의미(해석)’가 나의 삶을 좌지우지 한다.\n그 자체로는 아무 의미가 없다. 하지만 그럼에도 불구하고 우리가 그것들에 ‘의미를 부여하여’ 스스로를 행복하게도 불행하게도 만든다는 것이다.\n예를 들어 ‘시험의 실패’ 자체가 나를 불행으로 이끄는 것이 아니라 ‘시험에 실패했기에 나는 희망이 없고 미래가 없으며 능력이 없어’라는 의미 부여로 자신을 불행에 이끈다는 것이다.\n\n좋아한다고 너무 퍼주지 마라\n보스조르메니 나지는 인간관계에서 보이지 않는 ‘관계 통장’이 있다고 한다. 배려, 사랑, 칭찬, 코칭, 선물 등은 ‘입금’이고, 폭력, 무시, 화, 비난 등은 ‘출금’이다.\n서로 좋은 것을 주고받아 입금이 많이 쌓이면 웬만한 어려움이 생겨도 서로 견딜 수 있지만, 둘 다 또는 한쪽이 잔고가 없거나 마이너스 상태라면 조그만 위기가 와도 와르르 무너진다.\n\n두뇌에 가해지는 최악의 행동은 무엇일까?\n하버드 뇌과학자 존 레이티 박사는 “두뇌에 가해지는 최악의 행동은 무엇인가?” 에 ‘소극적 삶에 만족하며 사는 것’이라고 답했다. 익숙한대로 살고, 세상에 대해 호기심을 잃은 채 무관심한 태도로 살면 뇌를 약화시킨다고 한다.\n그렇게 되지 않으려면 어떻게 해야할까? 운동을 하고, 새로운 것을 배우고, 균형 잡히게 먹고, 영성과 명상의 시간을 가져야한다.\n\n등장 서적 정리\n책을 읽는 것 만큼, 좋은 책 목록을 확보하는 것 또한 중요하다는 것을 느끼는 요즘이다. 요즘 책을 읽는데 타율이 너무 낮다. 저자정도가 되는 사람이 읽은 책이라면 한번쯤 읽어볼만하다고 해서 책에서 등장하는 서적들을 정리해보았다. 누락이 있을 수 있다 (아마 많을거다).\n성공의 공식 포뮬러\n아주 작은 습관의 힘 (자주 등장한다)\n신경 끄기의 기술\n하버드 상위 1퍼센트의 비밀\n끝까지 해내는 힘\n학문의 즐거움\n모든 것은 태도에서 결정된다\n스스로 답을 찾는 힘\n동기 심리학\n틀리지 않는 법\n실행이 답이다\n결국 재능을 발견해낸 사람들의 법칙\n돈의 심리학",
        "content": "책 ‘일의 격’은 KT…",
        "contentSnippet": "책 ‘일의 격’은 KT…",
        "guid": "https://hudi.blog/the-dignity-of-work/",
        "isoDate": "2024-07-27T01:30:00.000Z"
      },
      {
        "title": "책 '프로그래머의 길, 멘토에게 묻다' 정리",
        "link": "https://hudi.blog/programmers-way-ask-mentor/",
        "pubDate": "Sun, 21 Jul 2024 19:00:00 GMT",
        "content:encodedSnippet": "‘프로그래머의 길, 멘토에게 묻다’ 라는 책을 몇달전에 읽었다. 책의 내용이 좋아 그냥 머릿속에서 휘발시켜버리기에는 아까워 블로그에 (내가 생각하는) 핵심 내용을 간단히 요약 정리해보고자 한다. 앞으로는 읽었던 책 중에서 블로그에 올릴만한 좋은 책들은 비슷하게 정리해서 올려볼까 한다.\n이 책의 원제는 ‘Apprenticeship Patterns : Guidance for the Aspiring Software Craftsman (견습생 패턴: 소프트웨어 장인을 꿈꾸는 이들을 위한 지침)’ 이다. 원제를 보면 알 수 있듯이, 이 책은 소프트웨어 장인정신에 대해 이야기하는 책이다. 프로그래머로서의 커리어를 걷는 이들이 마주하게 되는 상황, 문제, 해결방법을 마치 소프트웨어 패턴과 같이 정리해둔 책이다.\n개인적으로 좋다고 생각하는 파트에는 제목에 * 을 붙여두었다.\n\n1. 들어가는 글\n\n소프트웨어 장인정신이란 무엇인가?\n‘당신은 더 나아질 수 있으며 당신이 제대로 할 준비가 되어 있다면 모든 것은 개선될 수 있다’는 믿음\n“당신을 영리하고 재능있게 만드는 것은 노력이며, 실패란 단지 다음번에 다른 방법을 시도해 볼 수 있도록 하는 보상이다.”\n이러한 생각은 우리가 정해진 만큼의 재능을 가지고 태어났고, 실패란 재능이 부족하다는 표시라는 통념과는 정 반대이다.\n피드백을 바탕으로 항상 적응하고 변화해 갈 필요성. “자신의 행위에서 적합하지 못한 면을 깨닫고 그 해결책을 찾으려는” 자발성\n독단적이기보다는 실용적이려는 욕구. 일을 잘 하기 위해서 이론적인 순수함이나 앞날의 완벽함을 준비하는 것을 양보하는 태도\n지식을 쌓아두기만 하여 희소하게 만들기 보다는, 서로 나누는 편이 더 낫다는 신념\n자신이 틀렸다고 증명될지라도 기꺼이 실험하는 자세. 우리는 흔히 실패하지만, 얻은 교훈을 다음 실험에 활용할 수 있다.\n‘내적 통제위치’에 대한 헌신. 스스로 운명을 지배하고 책임지고자 하는 태도를 갖는 것\n프로세스 중심적이기 보다, 역량 중심적\n\n견습생이 된다는 것\n내가 지금 하고 있는 일을 항상 좀 더 좋고 세련되고 빠르게 해결하는 방법이 있을거라고 생각하는 태도\n발전해 가면서 더 나은 방법을 찾아 가는, 그리고 더 좋고 세련되고 빠른 방법을 배우도록 만드는 사람, 회사 혹은 상황을 찾는 상태이자 과정\n해답을 건네줄 누군가에게 의존하지 않으며 문제를 해결하는 건설적인 방법을 찾도록 하는 내적 추진력을 갖는다는 것은 커다란 가치가 있다.\n\n2. 잔을 비우다\n\n첫 번째 언어\n언어를 배우는 과정을 향상시킬 수 있는 방법 하나는, 실제 문제에 그 언어를 적용하는 것. 책같은 데 수록된, 규모가 작고 미리 잘 고안해둔 그런 예제만 가지고 공부하는 것은 어차피 한계가 있다.\n학습을 할 때에는 길이가 짧은 피드백 루프를 만들어, 자신의 진척 상황을 측정하는 것이 좋다. 피드백 루프를 만들기 좋은 방법은 TDD.\n언어를 혼자서 배울 수 있겠지만, 전문가들과 교류하지 않으면 그 언어의 진수를 깨우치는 데 오랜시간이 걸릴 수 있다. 특히, 공동체 내에 축적된 경험, 코드의 관용적 표현 방식등은 어떤때는 구전되는 것 밖에 없어 커뮤니티에 소속될 필요가 있다. 단, 최근에는 Effective ~ 와 같은 책들이 이런 미묘한 부분을 다뤄주기도 하므로, 가급적 빨리 이런 책들을 읽는다면 학습 속도도 빨라지고, 흔한 실수를 피하는데에도 도움이 될 것이다.\n💬 이펙티브 코틀린을 사두고 몇달동안 읽지를 않았는데, 근 시일내로 읽어보는게 좋겠다.\n\n흰 띠를 매라\n새로운 지식을 받아들이려면 우리는 과거의 경험과 선입견을 한 켠으로 밀어 둘 수 있어야 한다.\n새로운 지식이 충분히 흡수될 때 까지는 새 지식과 옛 지식이 섞이는 것을 피하고, 새로운 지식에 초보자의 마음가짐으로 접근해야한다. 관용적인 표현에 열려있으면, ‘어떤 언어를 가지고도 포트란처럼 코딩하기’와 같은 문제를 해결할 수 있고, 새로운 지식에 대한 깊은 이해를 얻게 된다.\n새로운 지식과 오래된 지식을 잘 융화시키면, 양쪽으로부터 생산적인 통찰력을 이끌어낼 수 있다.\n\n열정을 드러내라 *\n연구자들은 경험 수준이 다양한 사람들로 구성된 팀이 실제로 더 건강하다는 사실을 발견했다.\n“전반적인 이해력은 서로 다른 여러 수준의 경험이 상호 연관될 때 더욱 높아질 수 있다. 그 무엇도 당연하게 여기지 않는 신참들과, 알 것은 다 안다고 생각하는 고참들이 더 자주 밀접하게 소통할 때가 거기에 해당된다.”\n열정을 드러내는 것이야말로 견습생이 맞아야하는 책무이며, 팀에 열정을 불어넣고 모든것에 대해 질문하는 것이 본분이다. 팀에는 이런 신선한 관점을 지닌 독특한 위치에 있는 사람이 필요하다.\n\n구체적인 기술\n구체적인 기술을 습득해서 유지하라.\n당신이 우러러보는 역량을 가진 사람들의 이력서를 모아보고, 다섯가지 대표적인 역량을 뽑아보라.\n해당 역량이 당신이 들어가고 싶어하는 팀과 유사한 환경에서 쓸모가 있을지 판단해보고, 토이 프로젝트에 대한 계획을 세우고 실행하라.\n\n무지를 드러내라 *\n팀에게 자신이 성장하는 모습을 보여주어라.\n사람들에게 그들이 무엇을 원하는지 이제 당신이 이해하기 시작했고, 그것을 해낼 방법을 배워 가고 있는 중이라고 알려라.\n사람들을 안심시키기 위해 아는 척 하기 보다, 당신이 얼마나 잘 배울 수 있는지를 보여주어라. 당신의 평판은 어떤 지식을 알고 있느냐가 아니라, 학습하는 능력이 얼마나 좋은가를 기반으로 쌓여갈 것이다.\n무지를 드러내는 가장 확실한 방법은 질문하는 것이다. 이는 자존심에 상처를 받는 어려운일일 수 있다. 자존심에 상처를 입지 않는 방법으로 우회하는 것 보다, 질문하는 방법이 가장 가깝게 질러가는 길이다.\n질문하는 과정을 통해 팀에서 자신의 학습 능력을 보여주어라. 그리고 가끔은 사람들이 질문에 대답하는 과정에서 자기가 가진 지식을 새로이 명확하게 할 수 있다.\n“당신의 본능은 당신에게 무지를 숨기고 아는 척하라고 시키지만, 그렇게 하면 당신의 성장을 방해 받으며 성취해야 할 일도 가로막히게 될 뿐입니다”\n이러한 학습 과정에 익숙해져라. 이것이 장인 정신이다.\n장인에게 가장 중요한 특성 중 하나는 학습하는 능력, 즉 무지의 영역을 파악해서 이 영역을 줄이려 애쓰는 것이다.\n💬 나는 무지를 드러내는 것에 아직도 익숙치 않다. 하지만, 최근에는 의식적으로 연습하고 있다. 모르는 것이 있다면 (설령 쉬워 보이는 것이라도), 주변에게 도움을 청하고 지식을 얻는 방식에 익숙해져가고 있다.\n\n무지에 맞서라\n도구나 기법을 하나 고른 다음에 그것과 관련된 지식의 빈틈을 능동적으로 메워라.\n단, 이 패턴은 ‘무지를 드러내라’ 패턴과 함께 적용해야한다. 모든 이들이 몰래 공부하게 되면, 실패와 학습이 용납되지 않은 문화라는 폐단을 가져올 수 있다. 공개적인 학습은 견습생이 숙련공 단계로 발전해 가는 길 중 하나임을 기억해야한다.\n💬 내 전문성을 기르기 위해 기술에 대해 끊임없이 공부하자.\n\n깊은 쪽 *\n당신에게 두드러지는 역할이나 어려운 문제가 주어진다면, 그 기회를 놓치지 말고 두 손으로 꽉 잡아라.\n오히려 실패가 눈앞에 번히 보인다 할지라도 승진이나 해외 발령 같은 제안이 들어왔을 때 그것을 받아들이라는 말이다. 실패를 준비하고 그 실패로부터 일어설 때, 소심한 자들은 결코 볼 수 없는 문이 당신에게 열릴 것이다.\n이 패턴을 적용할 때는 무모하다기보다는 용감한 느낌이 들도록 해야 한다.\n💬 용기를 갖자. 성장하기 위해 지금까지 해온 것 보다 더 어려운 문제를 풀어내자.\n\n한발 물러서라\n너무나 광대한 자신의 무지에 직면하면서 압도당했다면, 평정을 되찾기 위해 자신이 지닌 익숙한 능력 속으로 잠시 후퇴하라.\n견습과정은 롤러코스터를 타는 것과 같다. 새로운 기술을 배우거나, 고객에게 가치를 제공할 때 짜릿함을 느낄 수도 있지만, 그 과정에서 만나는 장인이나 전문가들에 비해 자신이 얼마나 보잘것없는 지식을 가졌는지를 깨닫는, 숨막히는 두려움의 시간도 경험할 것이다. 이것은 긴 여정에 따르는 정상적이고도 회피할 수 없는 현상이다.\n이 패턴은 자신의 능력을 벗어난 데까지 뻗어 보려고 한 사람들과 관련이 깊다. 얼마나 오래, 멀리 후퇴해 있을지 의식적으로 한계를 지어두지 않으면, 두려움과 실패에 굴복하게 된다. 이 패턴은 다시 튀어 오르는 힘을 모으는 동안 필요할 뿐인 단기적인 처방책임을 알아야한다.\n\n3. 긴 여정을 걷다\n\n긴 여정\n이 여행(소프트웨어 장인이 되기 위한 과정)이 얼마나 길어질지에 대해서는 준비가 되어 있어야한다. 자신만의 지도를 그릴 때는 중년의 나이가 되어서도 여전히 현역 소프트웨어 개발자일 것이라는 점을 마음에 새기고 있어야 한다.\n앞으로 10년, 20년, 30년, 40년 뒤를 생각해보며, 그 때 당신이 어떤 종류와 경험을 쌓아왔으면 좋겠는지 상상해보라.\n💬 나는 40대가 되어서도 현역 프로그래머로 살고 싶다. 그때 쯤이면 나도 누군가에겐 존경받는 실력과 영향력 있는 프로그래머가 되어 있겠지? 하지만, 10년 ~ 40년 뒤의 이야기는 아직 잘 상상이 안된다.\n\n예술보다 기예 *\n한 사람의 장인으로서, 예술적 표현에 탐닉하기보다는 다른 이들의 필요를 충족시키는 무언가를 만드는 것이 먼저다.\n만약 당신이 만든것이 너무 아름다워서 실제로 쓰기는 어렵다는 이유로 끼니를 굶는다면, 당신은 장인의 길에서 벗어난 것이다. 사람들에게 유용한 무언가를 만드는것이 프로페셔널한 소프트웨어 개발이다.\n비록 마음에 차지 않더라도, 고객들이 만족할 만한 품질을 지닌 결과물이라면 내놓아야한다.\n“스스로 만족하기 위해서가 아니라 현실 사람들이 당면한 현실적인 문제와 씨름할 때 기량은 연마되는 것”\n고객의 요구(유용성)와, 당신을 장인이게 하는 내면적 기준(아름다움) 사이에서 균형을 잘 맞추어야 한다.\n시스템을 바닥부터 다시 짜려들기 보다는, 리팩터링을 통해 수정해 나가는 능력을 개발해야한다. “우리는 수리를 하면서 그것이 동작하는 원리를 이해하는 경우가 종종 있다.”\n💬 나는 가끔 일을 할 때 우선순위를 생각지 않고 아름다운 코드에 집착할 때가 있다. 성급한 추상화로 되려 이해가 어려운 코드를 짤 때도 있다. 우선순위를 잘 판단하고, 균형을 잡자.\n\n지속적인 동기 부여\n“돈을 벌기 위한 소프트웨어와, 만들기에 재미나는 소프트웨어 사이에는 서로 겹치는 부분이 그다지 많지 않다. (중략) 당신이 돈을 벌고자 한다면, 너무 지저분해서 누구든 공짜로는 해결하려 들지 않는 그런 문제를 안고 씨름해야 할 때가 많다.”\n황금 족쇄: “뭔가 새로운 걸 배우고는 싶지만, 내가 이미 알고있는 것만으로도 벌이가 너무 좋다.”\n긴 여정을 자유로이 갈 것인지 황금 족쇄에 묶일 것인지 택해야 하는 힘든 결정의 시기를 맞게 된다.\n당신이 긴 여정을 걷고 있다면, 당신 삶의 다양한 측면과도 조화를 이루면서도 소프트웨어 장인정신에 대해 열정을 키워 가는 태도가 반드시 필요하다.\n\n열정을 키워라 *\n당신이 좋아하는 일을 하라. 일에서 흥밋거리를 찾고, 그 중 즐길 수 있는 것들을 분별하고, 그 일에 자신을 쏟아 부어라.\n퇴근 후에 시간을 할애하여 부숴도 괜찮은 장난감을 만들어보라.\n“위대한 해커가 되기 위한 열쇠는 좋아하는 일을 하는 것. 무언가를 잘 하고 싶으면 그 일을 좋아해야한다.”\n마음이 맞는 사람을 찾고, 배운 것을 공유하고, 고전을 공부하고, 자신만의 지도를 그려라.\n긴 여정을 걷는 사람들은 몇 년 정도 전력 질주한 후에 그냥 소진되어 버리는 사람이 아니라, 수십 년은 지속할 수 있는 걸음걸이로 움직이는 사람들이다.\n열정을 키우고자 한다면, 당신이 기꺼이 일할 수 있는 주변 환경에 대해 미리 명확한 경계를 지어라. 팀의 다른 사람이 야근할 때 먼저 퇴근하거나, 험한 말이 오가는 회의에서 빠져 나오거나, 냉소적인 대화를 할 때 건설적인 주제로 대화를 돌리려 하거나, 자신의 최저 기준에 부합하지 않는 코드의 배포를 거부하는 것들을 의미한다. 이는 연봉 인상, 승진, 명성, 인기와는 거리가 멀어질 수 있지만, 자신의 열정을 굳게 지키고자 한다면 경계를 명확히 지어야한다.\n“열네 살 때 당신이 프로그래밍에서 느꼈던 경이로움, 그 느낌을 계속 지니도록 노력하기 바랍니다.”\n💬 오래 프로그래머로 일하기 위해, 항상 지속 가능성을 염두해두자.\n\n자신만의 지도를 그려라\n고용주가 제시하는 경력 관리 방향이 모두 당신에게 맞지 않는다면, 논리적이면서 의욕적으로 경력의 다음 단계를 준비하라.\n그 일은 당신의 고용주, 경력 카운슬러, 교수님이 도와줄 수 있는 일이 아니다.\n다음 단계에 도달하고, 궁극적으로 당신이 꿈꾸는 목적지에 이르는 진로를 계획하는 일은 당신 책임이다.\n더 나은 프로그래머가 되고자 하는 목표에 회사의 기대나 문화 같은 것이 방해가 되도록 두지 말라.\n💬 내 스스로의 커리어는 내 자신이 결정하고 책임지자.\n\n직위를 지표로 이용하라\n직위에 비해 다신이 과대 평가 받거나, 과소 평가 받는다는 생각이 들 수 있다.\n그럴 듯한 직함에 속지 마라.\n당신의 직책이 어떤 것인지 기로 상세하게 적어보고, 실제 당신이 하는 일과 당신의 역량 수준을 정확히 반영하라.\n이것을 꾸준히 업데이트하고, 때때로 이런 직책에 있는 낯선 사람을 당신이 어떤 눈으로 바라볼지 상상해보라.\n\n전장에 머물러라\n숙련됨은 연습을 중단하는 그 시점부터 퇴보하기 시작한다. 프로그램을 짜지 않는 하루하루마다 숙련공으로 가는 길은 점점 더 멀어간다.\n만약 기술 관리직 승진 제안을 받았지만 장인의 길에서 벗어나지 않으려면, 다른 형태의 보상 방안(연봉 상승, 기술 리더 역할)을 고용주와 논의하라.\n만약 당신의 조직이 경직된 곳이라면, 승진을 받아들여서 이 길에서 멀어지기보다 다른 곳에서 기회를 찾는 편이 더 나을 것이다.\n💬 나 또한 관리자로 승진해서 코딩과는 멀어지는 커리어를 밟고 싶지 않다. 회사나 인터넷에서 정말 오랜 기간 동안 현업 프로그래머의 커리어를 유지하는 분들을 종종 볼 수 있는데, 정말 멋지고 존경스럽다고 생각한다.\n\n또 다른 길\n만약 당신이 긴 여정 중 자신만의 지도를 그린 결과 이 길은 더이상 당신에게 적절한 선택이 아님을 깨달았다면.\n행여 이 길을 영원히 떠난다고 할지라도, 길을 걸어가며 키워나갔던 가치관과 원칙은 늘 당신과 함께할 것이다.\n교사나 윈드서핑 강사가 되거나, 아이를 키우기 위해 소프트웨어 개발을 떠난 동료들이 있다. 그리고 이렇게 잠시 떠났던 동료가 다시 돌아올 수도 있다.\n하지만 유감스럽게도 대개의 소프트웨어 조직은 이런 경우를 그다지 환영하지 않는듯 하다. 이런 경우 경력상 공백의 정당성을 증명해야 했다.\n이런 위험이 있지만 당신의 삶에서 무언가 다른 일을 해 보는 것을 두려워 하지 말았으면 한다.\n\n4. 정확한 자기 평가\n빠르게 학습하는 사람들이 마주하는 위험 중 하나는 좁은 연못 속 커다란 물고기가 되어버리는 것이다. 작은 연못이나 큰 물고기에게 잘못은 없지만, 큰 물고기가 광대한 연못 네트워크에 속한 다른 연못의 존재를 아는 것은 중요하다.\n재능있고 열심히 일하는 견습생이라면, 그가 이룬 작은 성공에 자족하지 말아야한다. 또한 자기가 제법 능력 있다는 생각 같은 것은 떨쳐버리고, 지금껏 긴 여정에서 얼마 되지 않는 거리를 걸어왔음을 깨달아야한다.\n당신의 목표는 자신의 능력을 평가하고 어제의 자신보다 더 나아질 수 있는 방법을 찾는 것이다.\n\n가장 뒤떨어진 이가 돼라 *\n당신의 배움이 더이상 진전이 없다면, 주변을 당신보다 뛰어난 개발자들로 채워라. 당신이 가장 뒤떨어진 멤버가 되며, 그 안에서 더 성장할 여지가 있는 팀을 찾아라.\n당신의 목표는 가장 못한 사람으로 머무르는 것이 아니라, 밑바닥부터 시작해서 위로 올라가는 것이기 때문이다.\n팀의 다른 사람들과 같은 수준이 될 때까지 의식적으로 개선할 방법을 찾으며 더 뛰어난 개발자들을 모방해 가야 한다.\n팀에서 배우려는 의식적인 노력이 없다면, 팀 전체를 끌어내리거나, 쫒겨날 위험도 감수해야한다.\n이는 가능한 한 빨리 우월한 지위를 얻는 것이 좋다는 시대 문화적 규범과는 배치된다. 하지만 한 사람의 견습생으로서, 당신은 권위를 늘리고 공고히 할 기회보다는 기예를 학습할 기회에 더 가치를 두어야 한다.\n제일 뒤처진 멤버로 의도적으로 팀에 합류하는 것에는 이기적인 면이 있다. 바닥을 쓸어라(팀에 기여하기 위해 하찮은 일을 찾아 나서는 것)와 구체적인 기술 패턴으로 이런 면을 보완해야한다. 이런 기여가 없다면, 이 패턴은 유능한 팀이 치명적으로 약화되는 사태를 불러올 수 있다.\n유능한 팀이 당신과 함께 일하는 리스크를 감수하는 이유는, 당신이 팀에 기여하는 바가 급속히 증가하기 때문이다.\n“내가 가야 하는 길을 이미 지나갔고, 앞에 놓인 구덩이를 피해 갈 방법을 아는 사람들 곁에 있으면서 배우는 기회라면 놓쳐서는 안 된다. 훌륭한 소프트웨어 개발자들과 곁에 있으면서 배우는 기회라면 놓쳐서는 안된다. 훌륭한 소프트웨어 개발자들과 짝을 이뤄 일한다는 것은 헤아릴 수 없는 가치를 지녔다.”\n💬 내가 생각하기엔, 감사하게도(?) 나는 회사에서 가장 뒤떨어진 이다. 나는 이런 좋은 환경에서 느리더라도 끊임 없이 노력하여 꾸준한 성장을 이뤄낼 것이고, 존경받는 탁월한 프로그래머가 될 것이다.\n\n멘토를 찾아라\n당신보다 앞서 지나간 사람들을 찾아서 그들로부터 배우도록 애써라.\n잠재적인 멘토에게 거절당하거나 이상하게 비친다고 해도, 그 리스크는 별 것 아닌 반면에 보상은 아주 크다는 점을 기억해 두라. 그 사람이 당신을 풀타임 견습생으로 받아들이는데는 관심이 없다고 해도, 점심식사라도 같이 하기를 청하는 것은 돈과 시간이 아깝지 않은 일이다.\n당신이 마스터의 경지에 이르는 것을 진지하게 생각한다면, 당신을 지도해 줄 멘터를 끈질기게 찾도록 하라.\n\n마음 맞는 사람들\n추진력을 계속 유지하려면, 특히 전담 멘토가 없는 경우에는, 비슷한 길을 걷고 있는 사람들과 빈번히 교류할 필요가 있다. 그러므로 뛰어난 개발자가 되고자 하는 사람들을 찾아 나서야 한다.\n당신이 사용하는 도구, 언어, 같이 일했던 사람들, 구독하는 블로그, 흥미를 느끼는 아이디어 같은 것들에 기초하여 가입할 만한 커뮤니티들을 조사하고 나열하라. 그 모임에 하나씩 참석해보고 당신에게 가장 흥미로운 그룹을 결정하라.\n\n팔꿈치를 맞대고\n주기적으로 만나는 멘토나 마음 맞는 사람이 있을지 몰라도, 소프트웨어를 개발할 때면 당신은 혼자다.\n다른 소프트웨어 개발자와 나란히 앉아서 실제로 같이 작업할 방법(사이드 프로젝트, 페어 프로그래밍 등)을 찾아보라. 세상에는 다른 개발자와 공통의 목표를 달성하기 위해서 같이 일할때만 배울 수 있는 것이 있다.\n\n바닥을 쓸어라\n단순하고 매력도 없지만 반드시 해야 하는 종류의 일에 자원하라. 이것은 꼭 그럴 필요 없는 일이라도 당신이 훌륭하게 해낸다는 것을 보임으로써 팀의 성공에 일찍 기여하는 좋은 방법이다.\n예를 들면 빌드 시스템 유지보수, 제품화 지원, 유지보수 요청 응대, 버그 수정, 코드 리뷰, 기술적 부채의 청산, 프로젝트 위키 셋업, 문서화 업데이트, 다른 사람의 아이디어에 대한 홍보 담당자 역할 등이 있다.\n이런 종류의 주변적인 일은 주로 팀에 이롭지만, 견습생인 당신 자신에게도 좋은 점이 있다. 학교 수업에서는 대개 허드렛일에 대한 부분은 건너뛰어 버리므로, 이런 일을 맡아 함으로써 당신 지식 사이에 놓인 빈틈을 메울 수 있다.\n불행히도 당신이 받은 (대학) 교육은 생각보다 현장에서 쓸모가 적다. 물론 채용할 때 전산학 학위를 중요하게 치는 조직이 많기는 하지마나, 채용되는 것과 팀에 합류하는 것은 다른 이야기다. 일단 발을 들여놓은 뒤에 당신이 받았던 그 온갖 교육이 하는 역할이란, 출근 첫 날 무엇을 보여줄지 사람들의 기대 수준을 높이는 것 뿐이다.\n이 패턴을 적용해서 생길 수 있는 부정적인 결과가 몇가지 있는데, 팀 내의 잡일꾼으로 굳어져서 아무도 하려 들지 않는 잡다한 일을 도맡게 되는 상황이다. 이런 상황에 처해있다면, 열정을 키우도록 노력하고, 열정을 드러내며, 스스로를 지지해서, 당신이 더 높은 수준의 업무를 맡을 자격이 있음을 증명해 보일 어떤 기회라도 잡도록 하라.\n\n5. 끊임없는 학습\n\n능력의 폭을 넓혀라\n새로운 정보를 얻고자 자기 능력의 폭을 넓히는 단계는 견습생에게 아주 중요하며, 가끔은 압도됨을 느낄 수 있다.\n당신은 새로운 지식을 이해하고 간직하며 적용하는 방법 뿐 아니라, 효과적으로 흡수할 수 있는 테크닉도 발전시켜 가야 한다.\n이 패턴은 소프트웨어 개발 서적 한 권 읽는 정도를 의미하지 않으며, 다양한 차원에 걸쳐서 새로운 지식과 경험을 찾아가는 활동을 수반한다.\n구글 리더와 같은 블로그 모아보기 사이트, 트위터에서 유명인사 팔로우, 메일링 리스트 가입, 로컬 유저 그룹 참여, 기술적 컨퍼런스 참여, 책을 읽은 뒤 저자에게 연락, 온라인 대학 강좌 및 팟캐스트 시청 등 수 많은 방법이 존재한다.\n\n연습, 연습, 또 연습\n지금 하는일에 더 능숙해지고 싶고, 새로운 분야에서 구체적인 기술 개발을 하고자 하지만, 일상적인 프로그래밍 환경에는 실수해 가면서 배울만한 여지가 없다면, 실수해도 마음 편한 환경에서 방해받지 않고 기예를 연마할 시간을 확보하라.\n“소프트웨어를 만들면서 우리는 업무 중에 연습을 하는데, 그것이 업무 중에 실수를 하게 되는 원인이다. 우리는 직업적인 일과 연습을 구분할 방법을 모색해야 한다. 우리에게는 연습 시간이 필요하다.”\n의도적인 수련 기법을 적용하고, 코드 카타를 사용하라.\n“초심자는 강의가 아니라 실제로 해보면서 배운다. 그들은 연습하고 연습하고 또 연습한다. (중략) 이처럼 같은 과제를 거듭 반복함으로써 우리는 자신의 기술을 연마하며, 우리 몸과 마음이 TDD와 단순한 설계의 규율에 감응하도록 훈련한다.”\n\n부숴도 괜찮은 장난감 *\n우리는 실패가 용납되지 않는 환경에서 일하고 있지만, 실패는 종종 무언가를 배울 수 있는 가장 좋은 방법이 된다.\n업무 때와 비슷한 도구를 써서, 개인적인 공간에 토이 시스템을 설계하고 구현하여 실패해 볼 수 있는 여지를 만들어라.\n예를 들면 위키, 캘린더, 주소록을 만드는 것이다.\n단, 이것들은 본디 장난감이며, 재미있어야한다는 것을 잊지 말아야 한다.\n이런 장난감들은 종종 업계 표준이라 할 도구들을 간단하게 재구현한 경우가 많은데, 그렇게 재구현하면서 당신은 그 도구가 지금의 설계에 이를 수 밖에 없었던 여러 이유를 한결 깊이 이해할 수 있게 된다.\n그러던 중 장난감 하나가 생명력을 얻어서 당신 외의 사용자가 생길 수도 있다.\n💬 단순히 프로그램을 구현하는 것을 넘어서, 의도적으로 설계나 성능등에 빈틈을 찾고, 실패시킬 수 있는 (버그를 찾거나, 스트레스 테스트를 하는 등) 일종의 샌드박스를 만든다는 의미에서 이 패턴이 좋다고 생각한다. 실무에서는 의도적으로 실패시키면 큰일나니까.\n\n소스를 활용하라\n프로그래머가 되고자 준비하는 가장 좋은 방법은 프로그램을 짜는 것이며, 다른 사람들이 작성한 뛰어난 프로그램을 공부하는 것이다.\n다른 사람의 코드를 찾아서 읽어라. 그 사람들의 코드를 읽고서 당신은 그들처럼 프로그래밍하는 법을 배우게 되고, 더 중요하게는, 당신을 둘러싼 인프라를 만들어 낸 사고 과정이 어떤 것이었는지 이해하게 된다.\n“프로그래밍 능력을 테스트하는 가장 좋은 방법 중 하나는, 프로그래머에게 30페이지 정도의 코드를 건네주고서 그 사람이 얼마나 빨리 그 코드를 통독하고 이해하는지 보는 것이다.”\n코드에서 신속히 지식을 흡수할 수 있는 사람은 머지 않아 더 우수한 프로그래머가 된다.\n\n일하면서 성찰하라 *\n사색하는 소프트웨어 개발자가 되어라.\n당신 팀의 나머지 사람들이 당연하게 여기는 것들에 대해 스스로 질문을 던져 보라. 만약 자신의 현재 업무 중에서 특별히 괴롭거나 기분 좋은 것이 있다면 왜 그런지 자문해 보라. 만약 괴로운 것이 있다면 그것을 개선할 방법에는 무엇이 있겠는가?\n💬 재직중인 회사의 코어 밸류 중 하나는 ‘Question Every Assumption (모든 기본 가정에 근원적 물음을 제기한다)’ 이다. ‘기존에 하던 대로’ 관성적으로 일을 하게 되면, 발전이 없어진다. 생각 하면서 일하자.\n\n배운 것을 기록하라 *\n과거로부터 배우지 못하는 이들은 같은 일을 되풀이하도록 되어 있다.\n당신이 걸어가는 여정의 기록을 일지나 개인 위키, 블로그 등으로 남겨라.\n이 패턴을 사용하는 사람들은 조만간 까다로운 문제의 해답을 찾을 때 검색엔진의 검색 결과에 자기 위키나 블로그가 나오는 순간을 경험하게 될 것이다.\n당신의 공책, 블로그, 위키 같은 것은 보육원이 되어야지 묘지가 되어버리면 곤란하다. 교훈들이 죽을 자리를 찾아오는 것이 아니라 이 기록으로부터 생겨나도록 해야한다. 그렇게 만들려면 당신이 썼던 글을 정기적으로 다시 읽어라.\n💬 실제로 내 블로그는 종종 구글 검색 결과에 등장하는데, 이럴 때면 기분이 좋다.\n\n배운 것을 공유하라 *\n배운 것을 정기적으로 공유하는 습관(블로그, 모임, 발표 등)을 견습과정 초기에 들여 놓아라.\n누군가를 가르친다는 것은 가르침을 받는 사람보다도 가르치는 사람에게 더 강력한 학습 도구가 된다.\n\n피드백 루프를 만들어라\n당신이 자기 능력에 대해 느끼는 감(자신이 유능해 보이거나, 자신감이 무너지거나)은, 같이 일하는 팀이란 존재에 의해 쉽사리 왜곡될 수 있다.\n다신의 수행 능력을 평가하는 데 어느 정도 객관성 있는 외부 데이터를 정기적으로 수집할 방안을 마련하라. 일찍, 자주, 효과적으로 피드백을 얻으려 애쓰면, 당신은 적어도 자신의 무능함을 자각할 가능성은 높일 수 있을 것이다.\n피드백을 얻는 방법은 TDD, 코드 리뷰, 시험, 자격 증명, 사람들에게 직접 물어보는 방법 등이 있다.\n유용한 피드백이란, 그것을 기반으로 삼아 실천할 수 있는 데이터이며, 특정한 행위를 더 하거나 덜 하도록 선택의 여지를 주는 데이터이다.\n\n실패하는 법을 배워라 *\n“천재성은 종종 잘못 이해된다. 그것은 탁월한 지적 능력의 문제가 아니라 성격의 문제다. 천재성은 무엇보다도 기꺼이 실패를 인지하고, 미봉책으로 가리려 하지 않으며, 변화하고자 하는 의지를 필요로 한다. 그것은 실패에 대한 의도적이고 심지어는 강박적인 성찰과, 새로운 해법에 대한 지속적인 탐색에서 비롯된다.”\n실패는 불가피한 것이다. 그것은 늦든 이르든 간에 모든 이에게 일어난다. 한 번도 실패해 본 적이 없는 사람이라면, 그는 자기 능력의 한계치까지 밀어붙이기를 피해 왔거나 자기 실수를 대수롭지 않게 여기도록 배운 사람이다.\n당신이 어떤 식으로 실패하곤 하는지 확인하고 고칠 부분은 바로 잡아라.\n\n6. 학습 과정의 구성\n\n독서 목록 *\n읽기로 한 책들을 추적해 갈 독서 목록을 유지하고, 다 읽은 책은 기억해두라.\n배운 것을 공유하라 정신에 따라서, 공개된 장소에 당신의 독서 목록을 올려두는 것을 한번 고려해 보라.\n책에서 얻는 가장 귀중한 것 중에 하나는 읽을 가치가 있는 다른 책의 목록이다. 시간이 지나면서 특정한 책이 계속해서 참고 문헌에 나타는 것을 발견하면, 그 책을 독서 목록에 가장 위에다 올려 놓아라. (Code Complete 35장과 The Pragmatic Programmer 의 참고 도서 목록에서 훌륭한 책들을 찾을 수 있다)\n이렇게 만들어낸 독서 목록은 당신의 것임을 기억하라. 당신의 현재 상황은 당신만이 올바르게 알고 있다. 그러므로 다음에 무엇을 학습할지 결정하는 사람은 바로 당신이어야 한다. 그리고 적절한 책을 적절한 시점에 읽는 것 역시 중요하다. 그렇게 하는 것이 현재의 경험과 지식으로는 제대로 이해하지 못할 책들을 쌓아 놓고 우왕좌앙하는 것보다 훨씬 효과적이다.\n💬 적절한 책을 적절한 시점에 읽는 것이 중요하다는 조언은 유용하다. 지금 현재 내가 처해있는 상황에서, 어떤 것을 학습해야 가장 효과가 좋을지 생각하고 학습하는 것이 중요하다.\n\n꾸준히 읽어라\n책을 다 읽은 후에도 그 추진력을 유지하라. 이 다음에 무슨 책을 읽을지, 지금 결정하라. 그 책을 사든지 빌리든지 해서 이 책을 끝내자마자 바로 그 책으로 넘어갈 수 있도록 하여라.\n두껍지 않은 책을 한 권 늘 지니고 다녀. 이렇게 해서 일상생활중에 잠깐식 비는 시간을 학습에 활용할 수 있다.\n\n고전을 공부하라 *\n독학으로 공부했거나 이론보다 기술 훈련을 더 중요시 하는 상당히 실무 중심적인 교육을 받았다면, 고전을 공부하라.\n무지를 드러내서 잘 모르는 개념이 어떤 뜻이며, 어떤 책에서 비롯되었는지 물어보고, 그 책을 당신의 독서 목록에 추가하라.\n성공적인 견습생들은 ‘수명이 긴 책’ (훌륭한 책)에 집중하는 경향이 있다.\n\n더 깊이 파고들어라 *\n당신은 수많은 도구들에 대한 피상적인 지식만 있다면, 미묘한 버그가 발생하거나 깊은 지식이 필요한 일을 할 때 늘 어쩔 줄 몰라 허둥대야 한다는 것을 알게 되었다. 당신의 지식이 너무나 피상적이라서, 어떤 계기나 누군가 때문에 시험에 들기 전까지는 자기가 아는 바가 얼마나 없는지 자각조차 못하는 것이다 (더닝 크루거 효과의 우매함의 봉우리).\n어떤 분야에 깊이 있는 지식을 가졌다는 사실은 당신에게 자신감을 준다. 더 중요한 것은 이런 지식의 깊이가 새로운 분야에 도전할 때 기댈 언덕이 되어주며 앞으로 나갈 힘을 부여한다는 것이다.\n또한 어떤 기술 분야를 깊이 파고든다면, 당신이 작업하고 있는 시스템의 물밑에서 무슨 일이 일어나고 있는지 설명할 수 있게 된다는 것이다.\n관점이 변화하면, 시스템의 여러 층위를 뚫고 문제를 쫒아가서 ‘모든 것이 뜻이 통하는’ 수준의 지식을 얻으려는 태도가 생겨난다. 이를테면 싱글코어에서 멀티코어로 노트북을 바꾼 뒤에 자바로 짠 동시성 테스트의 동작이 달라질 수 있다. 어떤 이들은 그저 어깨 한번 으쓱하고서 이제 그 테스트는 예측할 수 없게 동작한다고 생각하고 말 것이다. 하지만 다른 이들은 동시성 라이브러리, 자바 메모리 모델, 물리적 하드웨어 명세 같은 것을 통해 CPU 수준까지 문제를 쫒아갈 것이다.\n우리에게 필요한 것은 실행 중인 프로그램의 속을 들여다 볼 수 있게 해주는 디버거, 네트워크 트래픽을 볼 수 있는 통신 레벨 디버거, 명세서를 기꺼이 읽고자 하는 태도가 있다.\n근원적인 곳으로부터 정보를 얻자. 예를 들자면, 누군가 REST에 대한 이야기를 한다면, 이 경험을 REST의 원 개념이 정의된 로이 필딩의 박사 학위 논문을 읽을 이유로 생각해야 한다는 것이다. 이렇게 알게 된 것을 명확히 하거나 공유하기 위해서 블로그에 글로 정리해 보라.\n어떤 개념을 정말로 이해하려면 위키 백과, 알기 쉽게 풀어서 써 놓은 책, 그것을 인용한 블로그 등의 말을 그대로 받아들이지 않고, 그 개념이 최초로 언급된 당신의 전후 맥락을 재구성해 볼 필요가 있다. 이렇게 해야 개념의 정수가 그 모든 중간자들을 거치고도 살아남았을을 확인할 수 있다.\n그 아이디어를 누가 처음 생각해냈는지 조사하고, 그들이 풀려고 했던 문제가 무엇인지 이해하라. 이와 같은 역사적인 맥락에 관한 내용은 보통 그 개념이 전달되는 과정에서 사라진다.\n이와 같이 심도있는 이해에 초점을 맞출 때는, 뜻하지 않게 좁은 한 가지 분야에 대한 전문가의 길로 빠져버리는 일이 없도록 해야한다. 당신의 목표는, 소프트웨어 개발의 여러 측면이 지닌 상대적인 중요도에 대한 관점을 잃지 않으면서, 어떤 문제를 해결하는 데 필요한 지식을 가능한 한 많이 습득하는 것이다.\n표면적인 지식만 가졌을 때 초래될 수 있는 또 다른 결과는, 풀려고 하는 문제에 대해 잘 알려진 해법이 있는지 혹은 실질적으로 해결이 불가능한 문제인지 전혀 모를 수 있다는 것이다.\n수박 겉핥기식으로만 해서는 지금 모르는 것을 앞으로도 모를 것이며, 자기 지식의 한계가 어디까지인지 이해하지 않고 새로운 것을 깨달을 수는 없다.\n어떤 문제에 대해 모든 층위를 통틀어 조사하는 과정에서 밑바닥에 깔려 있던 전산학적 개념들이 드러나는 일이 흔하다. 단지 알고리즘이나 자료구조를 바꿨을 뿐인데, 몇 달씩 걸리던 배치 작업이 마우스 버튼을 다 누르기도 전에 끝날 수도 있다 (다른 사람에게는 마법처럼 보이는 일).\n이 패턴을 정기적으로 실천한다면, 당신은 자기 도구가 어떻게 동작하는지 진정으로 이해하는 사람들 중 하나가 될 것이다. 당신은 더 이상 코드 조각을 짜깁기 해놓고서 일이 되게 하려고 다른 사람들이 마법을 부려 주기를 바라지는 않을 것이다.\n💬 최근에 왜 깊이 있는 지식을 알고 있어야 하는지 이해했다. 깊이 있는 지식을 많이 알고 있는 사람일수록, 문제가 발생할때의 문제 해결 능력과 잠재적인 문제를 예방하는 예측 능력이 뛰어나다. 나는 이를 ‘문제 해결의 해상도가 높다’ 라고 표현한다. 문제 해결의 해상도가 높은 사람은, 문제 상황에서 자신이 택할 수 있는 선택지가 그렇지 않은 사람들보다 높다. 현대의 소프트웨어는 규모가 매우 크고, 복잡하고, 무겁다. 이런 소프트웨어를 잘 다루기 위해서는 깊이 있는 지식과 이해를 겸비해야겠다.\n\n익숙한 도구들\n익숙한 도구들을 선별해서 거기에 집중하라. 시간이 흐르면서 당신은 도구들이 편안하게 느껴질 것이다.\n이것은 생산성이 높아진다는 점에서 유익한 일이지만, 위험도 또한 존재한다. 조심하지 않는다면 당신은 이런 익숙한 도구들을 어떤 문제라도 해결할 수 있는 도깨비 방망이로 여기기 시작할지도 모른다.\n장담하건대, 당신이 견습생 때 쓰던 도구들은 숙련공이 되고 나서는 더이상 소용이 없다. 때가 되면 당신이 즐겨 쓰는 도구들은 모두 폐물이 될 것이다.\n당신의 경력이 성공적이려면, 익숙한 도구들을 쉽게 얻고 쉽게 버리는 법을 배워야한다.",
        "content": "…",
        "contentSnippet": "…",
        "guid": "https://hudi.blog/programmers-way-ask-mentor/",
        "isoDate": "2024-07-21T19:00:00.000Z"
      }
    ]
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "우리나라가 개최한 올림픽, 얼마 벌었을까?",
        "link": "https://blog.toss.im/article/behindthemoney-6",
        "pubDate": "Fri, 26 Jul 2024 01:10:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}💡 이 글에서 알 수 있는 것들 \n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1kxrhf3{white-space:pre-wrap;}기원전 올림픽의 모습\n88 서울 올림픽 비하인드 스토리\n88 서울 올림픽, 2018 평창 동계올림픽의 경제적 효과\n\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n우승하면 양 500마리\n상금을 둘러싼 치열한 경쟁\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n수많은 그리스인이 올림피아 신전을 가득 메우고 있다. 선수들의 표정은 비장하기 짝이 없다. 선수가 승리를 목표로 하는 것은 당연한바, 선수의 승리는 도시국가(폴리스)의 명예와도 직결되기 때문에 긴장은 극한에 다다른다. 경기의 시작과 동시에 함성이 쏟아지고 우승을 한 선수에게는 ‘헤라클레스의 성스러운 올리브 나뭇가지’ 계관이 씌워진다. 상금은 500드라크마, 무려 양 500마리를 살 수 있는 돈이다.\n4년에 한 번씩 열리던 고대 올림픽의 모습이다. 성대한 축제이기도 했지만 치열한 경쟁의 장이기도 했다. 종목은 단출했다. 달리기 경주로 시작해, 던지기, 멀리뛰기, 레슬링 등 몇 가지 종목이 추가되었다. 고대올림픽이 언제부터 시작되었는지는 정확히 모르지만, 기원전 776년부터 올림피아 제전이 공식화되었고 명맥을 이어오다 로마 시대 테오도시우스 황제가 금지*한 이후 사라졌다. 사실 이전부터, 그리스 문명이 쇠퇴하면서부터 꽤 오랜 기간 올림픽은 지역의 소박한 축제였다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*당시 로마는 기독교를 국교로 채택했었는데, 올림픽이 이교도들의 축제라는 이유로 금지했다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}19세기 들어 기적처럼 올림픽이 부활한다. 고고학과 민족주의 때문이었다. 19세기 초반, 독일 학자들을 중심으로 고대 올림피아 유적지가 발굴되었고 마침 그리스가 오스만투르크제국에서 독립한 것이다. 열렬한 민족주의자이자 르네상스적 소양이 충만했던 프랑스의 정치가 쿠베르탱은 올림픽부흥운동을 펼쳤다. 국제올림픽위원회(IOC)이 만들어졌고 우여곡절 끝에 1896년 제1회 근대올림픽이 그리스에서 열리게 된다. 주요 도시에서 돌아가면서 대회를 개최하는 규칙은 이때 만들어졌다.\n어느덧 우리나라도 올림픽을 두 번이나 개최한 나라가 되었다. 1988년 서울 하계올림픽과 2018년 평창 동계올림픽. 88 서울 올림픽은 지금까지도 메가 스포츠 이벤트의 성공적인 사례로 손꼽힌다. 물론 커다란 성공 뒤에는 씁쓸하고 속상했던 실패의 역사 또한 있다.\n서울의 국제무대 데뷔 좌절기\n88 서울올림픽보다 22년 전인 1966년. 서울은 제6회 아시안게임(1970년)의 개최 도시로 선정된다. 전쟁의 상흔을 극복하고 본격적인 공업 성장이 이루어지고 있었기 때문에 아니, 무엇보다 북한을 견제하기 위해 거대한 스포츠 행사가 필요했다. 당시 북한은 국제 스포츠 무대에서 상당한 활약을 펼쳤다. 1960년대 북한의 신금단 선수는 육상 400m, 800m에서 세계 신기록을 세웠고, 1966년 잉글랜드 월드컵에서는 북한 축구팀이 이탈리아를 꺾고 아시아 최초로 8강에 진출했다. 에우제비오*만 없었다면 4강도 가능했던 실력이었다.\n*포르투갈의 축구선수. 1966년 잉글랜드 월드컵에서 북한과 8강 맞붙어 0-3으로 뒤쳐지다 혼자 4골을 연달아 넣으며 포르투갈에 승리를 안겼다.\n간절한 바람과는 달리 국제대회를 유치하는 데는 돈도 시설도 부족했다. 당시 우리나라에서 규모가 제법 컸던 경기장은 3개뿐. 동대문운동장, 효창공원의 축구장, 장충체육관이 전부였다. 국제 스포츠대회의 다양한 종목을 소화하기에는 터무니없는 수준이었다.\n경기장만이 문제가 아니었다. 선수단과 취재진 등 국제대회 기간 동안 수많은 사람들이 방문하기 때문에 이들이 머무를 숙소를 비롯하여 각종 부대시설이 필요했다. 어디 그 뿐 인가. 김포공항에서 내려서 서울 시내로 오기까지 외국인들이 서울의 곳곳을 보게 되고, 신문은 물론이고 방송 촬영까지 이어질 텐데 당시 청계천은 물론이고 서울 곳곳에는 판자촌을 비롯해 무허가 건축물과 극빈에 시달리는 생활상이 일상이었다.\n1968년, 대회 2년을 앞두고 정부는 아시안게임 개최를 포기하고 만다. 아시안게임은 태국에서 치러졌는데 중도 포기한 대가로 무려 25만 달러의 적자 보전금을 태국에 지불해야만 했다.\n경기장 짓고, 도로 닦고, 아파트 세우고 \n제대로 준비한 올림픽 데뷔 무대\n국제무대 데뷔의 쓴맛을 본 후 심기일전해서 준비한 행사가 바로 88 서울올림픽이다. 강남개발은 대규모 국제대회 개최를 고려해 추진되었고, 박정희 정권이었던 1971년 잠실지구에 80만 평의 ‘스포츠대단지 조성계획'이 발표된다. 지금도 다양한 국내외 스포츠 행사와 공연에 활용되고 있는 잠실 올림픽 주경기장, 잠실 실내체육관, 잠실 야구장 등이 이 시기에 계획되었고 88 서울올림픽에서 빛을 보게 된다.\n1980년대 전두환 정권은 ‘한강종합개발계획’을 발표해 한강에 대규모 시민공원을 조성하고, 강변에 도시고속도로를 건설하였다. 오늘날 강변북로와 올림픽대로가 이 시기에 완성되었고 서울 시내에 고층 건물들도 들어섰다. 광화문 교보빌딩, 여의도 LG쌍둥이 빌딩부터 목동아파트 단지, 서초동 법원 건물 등이 모두 이 시기에 만들어졌는데 무엇보다 상징적인 건물은 1985년에 완공된 63빌딩이었다. 63빌딩은 당시 아시아에서 가장 높은 건물이었다.\n교통도 정비해 1987년, 지하철 2·3·4호선이 완공된다. 지하철 2호선은 종합운동장을 비롯해 올림픽 시설을 관통하는 순환선이었고 3·4호선은 서울을 X자로 통과하며 2호선을 관통했다. 서울 전역을 아우르는 지하철 시스템이 만들어진 것이다.\n이러한 도시 개발의 절정은 마라톤 코스에 고스란히 반영되었다. 원도심을 코스로 활용했던 대부분의 국가와 달리 우리나라는 한강, 여의도 아파트와 63빌딩 그리고 테헤란로를 포괄하는 강남 지역이 마라톤 코스가 되었다. 목동에서 한강변 도로가 조성된 것은 김포공항으로 입국한 사람들에게 서울의 발전상을 보여주기 위한 계획이었다면 마라톤은 전 세계에 생중계가 되었기 때문에 더욱 섬세하게 동선을 고려했던 것이다. \n마침 1987년 6월민주항쟁으로 민주화도 이뤘기 때문에 88 서울 올림픽은 문자 그대로 ‘한강의 기적’을 입증할 수 있는 절호의 기회였다. 실제로 올림픽 기간 동안 300만명에 가까운 관광객이 방문했고, 올림픽 방영권 수입은 약 4억 달러에 달했다. 88 서울 올림픽은 10여년만에 자유진영과 공산진영의 모든 국가들이 참여했기 때문에 세계적으로도 큰 주목을 받았다.\n서울이 ‘천만 서울' 타이틀을 얻게 된 것도 1988년 이후다. 올림픽 유치가 결정된 1981년 867만 명이었던 서울 인구는 대회 직후 1989년에 1,000만 명을 돌파했다. 예산 규모는 1조 32억 원에서 3조 5,585억 원으로 급증하였는데 인구도 예산도 늘면서 서울은 오늘날과 같은 세계적인 대도시가 되었다.\n평창동계올림픽 경제효과 64조?\n88 서울올림픽 이후 30년 만에 대한민국은 동계 올림픽을 개최했다. 2018 평창 동계올림픽덕분에 우리나라는 동·하계 올림픽을 모두 개최한 8번째 국가가 되었다.\n평창 동계올림픽 또한 크게 화제가 되었다. ‘안경 선배' 컬링 선수 김은정의 안경이 완판되었고, 이상화 곽윤기 윤성빈 등 선수들의 눈부신 활약은 국민들의 마음을 사로잡았다. 무엇보다 북한응원단 파견과 이후 남북관계에 훈풍이 불었던 것이 인상적이었다. 88 서울 올림픽이 냉전 화해의 장이었다면 평창 올림픽 또한 평화적 가치를 이루었다는 점에서 세계적으로 주목을 받았다. 그렇다면 경제적 효과는 어땠을까?\n약 64조 9,000억 원. 평창 동계올림픽의 경제적 효과가 무려 64조 원에 달한다는 주장이 언론을 통해 빈번히 인용되었다. 2011년 현대경제연구원이 추산한 금액이며 직접적 경제적 효과는 21조 1,000억 원 간접적 효과는 약 43조 8,000억 원으로 추산했다. 어떻게 이런 계산이 나왔을까?\n대회 개최에 소요되는 투자 금액이 7조 2,555억 원, 외국인 관광객이 1조 2,300억 원, 내국인 관광객이 4,000억 원을 쓸 것이며, 올림픽조직위원회의 대회 경비지출과 국내 기업들의 홍보 행사 지출액 규모 또한 3조 1,000억 원으로 전망했다. 이것만으로도 10조 원대의 경제 활동이 일어나기 때문에 여파를 고려해서 직접적인 경제효과를 두 배 정도로 추산했다.\n간접적으로는 ‘세계적 겨울 관광지로의 부상에 따른 추가 관광 효과’로 32조 2,000억 원을 예상하였다. 실례로 삿포로를 들었다. 일본처럼 세계적인 겨울 관광지로 급부상함에 따라 큰 수익이 오를 수 있다고 기대했다. 또한 ‘평창 및 강원도’ 같은 지역 브랜드는 물론이고 국가 이미지 또한 제고되기 때문에 여기에 11조를 더한 것이다.\n평창동계올림픽의 경우 경제적 효과를 두고 비판이 일기도 했다. 수십조에 달하는 어마어마한 경제효과는 보고서에 쓰여 있듯 대부분 ‘추산치’에 불과하기 때문이다. 대규모 고용효과 역시 ‘대체고용’에 불과하다. 토목 공사를 비롯해 특정 기간 개발 사업이 진행되지만 덕분에 지역 내에 여타의 개발 사업은 지체되거나 취소되는 경우가 빈번하기 때문에 특별한 효과가 없다고 할 수 있다. 삿포로가 일본의 대표적인 겨울철 관광지이긴 하지만 그것이 올림픽 때문에 이루어진 성과가 아닐뿐더러 국제대회 한 번으로 세계적인 관광지가 된 사례 또한 찾아보기 힘들다.\n긍정적인 평가들도 있었다. 평창 올림픽이 1조 4,000억 원의 소비지출 증가를 이루었고 그 결과 1분기 국내총생산(GDP)이 0.2% 올랐고 각종 경제 지표에 상승효과를 주었다는 것이다. 더구나 올림픽의 성공적인 개최가 한국 기업의 브랜드 이미지에 긍정적인 영향을 미쳤다는 보고 또한 있었다.\n하지만 이러한 주장들은 당초 64조에 달하는 추산치에 비해 극히 낮은 수준이고 수십조에 달하는 전망을 체감하기 또한 쉽지 않은 것이 현실이다. 더구나 시설 유지 비용 등 국제대회 개최 국가들이 대회가 끝난 후에 흔히 겪는 문제들 또한 반복되고 있다.\n기대감을 숫자로 포장하기보다는\n올림픽으로 인한 경제적 효과를 어떻게 평가해야 할까. 당연한 말이지만 올림픽마다 차이가 있다. 모든 올림픽이 88 서울 올림픽 같을 수는 없다는 말이다. 더구나 서울 올림픽 이후 지방자치제가 발전하면서 각종 국제대회나 행사가 개최되기도 했지만, 풍선처럼 부풀려진 경제효과가 현실화된 경우를 찾기는 어렵다. 서울올림픽 역시 수치로만 본다면 적자 올림픽이었다는 평가 또한 적지 않다.\n그럼에도 불구하고 올림픽 같은 메가 스포츠 이벤트는 흔치 않고 중동산유국 등 새롭게 떠오른 국가들이 올림픽을 통해 홍보 효과를 기대하는 모습은 앞으로도 반복될 것이다. 우리나라가 ‘한강의 기적’을 알리면서 선진국으로 우뚝 섰고, 일본은 1964년 도쿄올림픽을 통해, 중국은 2008년 베이징 올림픽을 통해 국가적 성공을 세계에 널리 알린 사례들이 있으니 말이다.\n그럼에도 불구하고 올림픽 같은 메가 스포츠 이벤트는 흔치 않고 중동산유국 등 새롭게 떠오른 나라들이 올림픽을 통해 홍보 효과를 기대하는 것은 앞으로도 반복될 것이다. 우리나라가 1980년대 3저호황 가운데 ‘한강의 기적’을 세계인들에게 알렸고, 일본은 1964년 도쿄올림픽을 통해 전후 경제 부흥을 알린 사례들을 보면 말이다.\n메가 스포츠 이벤트가 주는 경제적 이익과 사회적 파급은 분명히 존재한다. 하지만 올림픽을 통해 얼마를 벌 수 있을지, 환상에 가까운 기대감을 숫자로 포장하는 관행은 뚜렷한 허실이 있다. 국제대회와 행사 유치가 지닌 수많은 문제점에 대해 국민들은 너무나 잘 알고 있다. 왜 우리는 메가 스포츠 이벤트를 유치해야 할까. 지역 경제의 발달? 구체적으로 무엇이 어떻게? 사회 발전에 긍정적인 영향? 구체적으로 무엇이 어떻게? 보다 치밀하고 체계적인 관점에서의 고민이 필요하다.\n.css-13d8cj1{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;margin:24px 0 8px;cursor:pointer;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:var(--adaptiveGrey700);}\n.css-1dzrkjz{width:16px;margin-right:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\n.svg-icon-wrapper{position:relative;display:inline-block;width:24px;height:24px;}.svg-icon-wrapper >.svg-icon:empty+.svg-icon-fallback{visibility:visible;z-index:inherit;}.svg-icon{color:var(--adaptiveGrey900);display:inline-block;width:24px;height:24px;display:block;width:100%;height:100%;}.svg-icon svg,.svg-icon img{display:block;width:100%;height:100%;}.svg-icon--hide{display:none;}.svg-icon-fallback{position:absolute;left:0;right:0;top:0;z-index:z-index(hidden);visibility:hidden;display:block;width:100%;height:100%;}.svg-icon-fallback--show{visibility:visible;z-index:inherit;}\n참고자료 \n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 이은호",
        "content": "88 서울 올림픽, 2018 평창 동계올림픽의 경제적 효과",
        "contentSnippet": "88 서울 올림픽, 2018 평창 동계올림픽의 경제적 효과",
        "guid": "https://blog.toss.im/article/behindthemoney-6",
        "isoDate": "2024-07-26T01:10:00.000Z"
      },
      {
        "title": "예술인 고용보험, 예술활동 준비금 신청방법",
        "link": "https://blog.toss.im/article/money-policies-19",
        "pubDate": "Thu, 25 Jul 2024 05:22:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}예술인 고용보험 가입하면 \n구직급여와 출산급여를 받을 수 있어요\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}예술인 고용보험에 가입해 일정 기간 보험료를 납부해 일정 기준을 충족하면, .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}비자발적 실업 상태가 되었을 때 구직급여를 받을 수 있습니다. 여성의 경우, 출산으로 일을 하지 못하는 기간에 대한 급여를 받을 수 있어요.\n지원대상\n「예술인 복지법」에 따른 ‘문화예술용역 관련 계약’을 체결하고 자신이 직접 창작·실연·기술지원 등의 노무를 제공하는 사람\n가입방법\n문화예술용역 관련 계약을 체결한 사업주가 노무 제공 개시일 기준 다음달 15일까지 근로복지공단에 예술인 피보험자격 취득 신고\n지원내용\n➀ 구직급여\n수급요건\n이직일 이전 24개월 동안 9개월 이상 고용보험에 가입하고, 이직 사유가 비자발적인 예술인\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*둘 이상의 피보험 자격을 취득하고 예술인 구직급여를 받고자 할 경우 이직 전 24개월 중 3개월 이상 가입\n지급수준\n120~270일 범위에서 이직 전 평균 보수의 60%\n➁ 출산전후 급여\n수급요건\n출산(유산, 사산 등)일 전 피보험 단위기간이 3개월 이상\n지급수준\n월평균 보수의 100%를 90일간 지급\n*상한액 월 210만 원, 하한액 월 60만 원\n*다태아의 경우 120일간 지급\n문의\n-근로복지공단 서울특수형태근로종사자센터 예술인 가입부(1588-0075, 02-6946-0650)\n-한국예술인복지재단 예술인고용보험 안내 창구(2-03668-0287~8)\n예술인 고용보험료를\n80%까지 지원해요\n‘두루누리 사회보험료’는 소규모 사업장의 저임금 근로자와 사업주가 부담하는 사회보험료의 80%를 지원하는 제도인데요. 예술인 고용보험료도 지원 받을 수 있습니다.\n지원 대상\n문화예술용역관련·노무제공 계약을 체결한 사업의 월평균 보수 270만 원 미만 예술인·노무 제공자\n*단, 재산세 과세표준 합이 6억 원 이상 또는 종합소득이 4,300만 원 이상인 경우 제외\n지원 내용\n-(근로자 10인 미만) 예술인·노무제공자와 사업주가 부담하는 고용보험료의 80% 지원\n-(근로자 10인 이상) 예술인·노무제공자가 부담하는 고용보험료의 80% 지원\n신청방법\n-온라인: 4대 사회보험 정보연계센터(.css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}www.4insure.or.kr)\n-방문(서면·우편·팩스): 관할 근로복지공단 또는국민연금공단지사\n문의\n-근로복지공단 콜센터(1588-0075)\n-국민연금공단 고객센터(1355)\n2년에 한번, \n예술활동 준비금 300만 원을 지원해요\n경제적으로 어려움을 겪는 예술인이라면 격년제로 예술활동준비금(구 창작준비금)을 받을 수 있어요. 2년에 한번, 300만 원을 받을 수 있고, 신진예술인의 경우는 200만 원을 지원받을 수 있습니다.\n지원대상\n신청인의 소득인정액이 기준 중위소득의 120% 이하 이면서 예술활동증명을 완료한 예술인 2만 3,000명\n*일반예술인 2만 명, 신진예술인 3,000명\n*2023년 참여자는 제외\n지원내용\n-예술활동준비금 1인 300만 원 지원(격년제)\n-신진예술인의 경우 200만 원 지원(생애 1회)\n진행방식\n일반예술인 및 신진예술인 각각 연 1회 신청·접수 및 교부\n신청방법\n-온라인 신청: 예술활동준비금지원사업(www.kawfartist.net)\n-우편 신청: 한국예술인복지재단 예술활동지원팀\n문의\n한국예술인복지재단(02-3668-0277)\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희",
        "content": "예술인을 위한 지원정책 3가지를 소개해요.",
        "contentSnippet": "예술인을 위한 지원정책 3가지를 소개해요.",
        "guid": "https://blog.toss.im/article/money-policies-19",
        "isoDate": "2024-07-25T05:22:00.000Z"
      },
      {
        "title": "트럼프 후보의 공약집 Agenda 47 — 에너지, 국방, 무역 중심으로 살펴보기",
        "link": "https://blog.toss.im/article/economic-terms-23-agenda47",
        "pubDate": "Thu, 25 Jul 2024 02:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-8atqhb{width:100%;}.css-1c1qox8{font-size:30px;letter-spacing:0em;line-height:1.55;font-weight:bold;color:var(--adaptiveGrey900);margin:40px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-p4abj2{display:contents;line-height:1.55;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}🔖 이번 주 경제 용어\nAgenda 47\n.css-1pgssrp{max-width:100%;border-radius:16px;}.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}47대 미국 대통령 선거에 나서는 트럼프 후보의 공약집을 말해요.\n\n\n지난 7월 15일(현지 시각 기준), 미국 공화당 전당 대회에서 트럼프 전 대통령이 공화당의 최종 대선 후보로 확정되었습니다. 트럼프 전 대통령은 형사 기소 위험 등으로 인해 일부 공화당 내에서 후보 지명 철회를 주장하는 의견도 있었는데요. 그의 지지자들은 펜실베니아 유세 피격 사건 이후 트럼프 전 대통령의 결단력과 응집력을 높이게 되었습니다.\n특히, 트럼프 전 대통령이 피격 직후 주먹을 불끈 쥐고 '파이트(Fight)'를 외치는 장면과 함께 성조기가 펄럭이는 사진은 공화당 내에서의 지지를 높이고, 중도 성향 미국인들의 동조를 이끌어내는 데 기여했다는 평가를 받고 있습니다.\n그렇다면 트럼프 전 대통령의 계획도 살펴봐야겠죠. 그의 공약집은 ‘Agenda 47’로 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}트럼프 전 대통령 웹사이트에 올라와 있습니다. Agenda 47 은 미국 국익을 최우선으로 하는 내용을 담고 있습니다. ‘47’이라는 숫자는 47개의 공약을 뜻하는 게 아니라, 미국의 제 47대 대통령을 의미하고요.\n그중에서도 가장 핵심 주제인 에너지, 국방, 무역을 중심으로 알아보겠습니다. 특히 에너지 파트는 조 바이든 행정부의 친환경 정책을 폐기하고, 에너지 패권을 되찾을 것이라 밝혔어요. 트럼프 전 대통령이 대선에서 승리한다면, 우리 경제와 투자에도 적잖은 변화가 있을 것으로 예상되는데요. 그의 공약을 미리 알아두면 실전에 대비할 수 있겠죠?\n① 에너지\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n친환경 정책으로 에너지 비용이 높아지면서 인플레이션이 심화되었으니, 에너지 자립을 통해 가격을 낮춰 물가 인하를 이룬다.\n바이든 대통령의 인플레이션 감소법(IRA)는 '녹색 사기'로 판단하고, 친환경 에너지 보조금을 폐지한다.\n원자력 산업의 규제를 완화하고 인허가 절차를 간소화한다.\n화석 연료 사용을 확대하며, 이에 따라 파리 기후 협정 탈퇴를 추진할 계획이다.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}\n트럼프 후보는 미국을 세계 최저 비용으로 에너지를 확보할 수 있는 나라로 만들고자 합니다. 중동에 대한 의존을 줄이고 대규모 전력을 필요로 하는 AI 산업을 촉진하며, 낮은 전기 요금을 제공하는 것을 목표로 삼고 있어요.\n\n② 국방\n\n미국의 군대를 재건하여 미군의 문화와 명예를 회복할 것이다.\n국방비를 증액하고 새로운 미사일 방어 체계를 구축할 계획이다.\n우크라이나 전쟁에 소모된 비용을 회수하기 위한 노력을 강화할 것이다.\n국경 개방 정책을 종료하고 불법 체류 이민자에 대한 복지 지원을 중단할 것이다.\n\n미국은 새로운 미사일 방어 체계 구축 등 국방비 지출이 불가피할 것으로 예상됩니다. 또한, 미군 주둔 국가에 방위비 분담 증액을 요구할 가능성이 높고요. 이에 따라 각 나라마다 자체 방위비를 증가하게 되면, 방산 업체가 크게 주목받을 것으로 예상됩니다.\n\n③ 무역\n\n법인세율을 인하하여 기업 활동을 촉진하고 리쇼어링(reshoring)을 촉구할 것이다.\n필수 의약품 생산을 미국으로 복귀시킬 계획이다.\n보편적 관세 10%를 부과하며, 특히 중국산 제품에는 60%의 추가 관세를 부과할 예정이다.\n상호무역법의 유연한 적용을 통해 협상할 여지를 열어두되, 미국의 경제 우선주의는 변함이 없을 것이다.\n\n트럼프 전 대통령은 해외로 이탈한 일자리를 다시 미국으로 되돌리고, 중산층이 더 나은 삶을 살 수 있는 나라로 만들기 위해 노력할 것입니다. 중국산 제품에 대한 높은 관세 부과는 중국의 시장 접근을 억제하려는 목적을 가지고 있는데요. 이는 중국 경제에 큰 타격을 줄 수 있을 뿐만 아니라 우리 경제에도 중요한 영향을 미칠 수 있습니다.\n\n\n\n.css-2yhypk{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);font-style:italic;-webkit-text-decoration:underline!important;text-decoration:underline!important;}對中 테크 대결 핵심은 '전기'… 美 태양광·풍력 발전, 급속히 늘고 있다\n(조선일보 2024.5.30)\n세계는 만약 트럼프가 대통령이 된다면 미국이 어떻게 변화할 것인지 궁금해하고 있다. 트럼프는 이미 2023년에 의제47(Agenda 47)이라는 홈페이지를 통해 본인이 제47대 대통령으로 취임하면 무엇을 할 것인지에 대해 상세하게 밝혔다.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}트럼프의 공약 가운데 눈에 띄는 것은 미국을 세계에서 가장 저렴한 에너지와 전력 요금을 가진 나라로 만들겠다는 것이다. 트럼프는 미래는 인공지능(AI)의 시대가 될 텐데 인공지능의 발전에서 가장 중요한 것은 저렴하고 풍부한 전력이라고 단언한다. 자신은 석탄·가스·원자력을 비롯한 모든 에너지원 개발에 대한 규제를 해소하여 풍부한 전력을 안정적으로 저렴하게 공급할 수 있도록 함으로써 미국이 중국과의 경쟁에서 앞서 나갈 수 있도록 하겠다는 것이다.\n최근 미국에서는 전력 부족과 관련한 우려가 계속 제기되고 있다. 일론 머스크는 지난 3월 인공지능 클라우드가 6개월마다 10배씩 증가하는 상황임을 강조하면서 미국의 인공지능 발전의 장애물은 2023년에는 반도체 부족이었으며, 2024년 현재는 변압기 부족, 그리고 멀지 않은 미래에는 전력 부족이 될 것이라고 언급했다.\n미국의 인공지능 클라우드가 사용하는 전력량은 2027년이 되면 네덜란드 전체 전력 수요량과 맞먹는 수준에 이를 것으로 예측되고 있으며, 인공지능 서비스에 대한 수요 증가에 따라 전력 수요가 더 증가할 것은 충분히 예상할 수 있다. (중략)\n\n\n미국의 대통령 선거가 넉 달 앞으로 다가오면서 조 바이든 대통령과 도널드 트럼프 전 대통령의 정책에 대한 관심이 높아지고 있습니다. \n특히 세계는 트럼프가 다시 대통령이 되면 미국이 어떻게 변화할지에 대해 큰 관심을 보이고 있습니다. 트럼프는 이미 2023년에 ‘Agenda 47’에서 만약 자신이 47대 대통령이 되면 무엇을 할 것인지에 대해 구체적으로 밝혔습니다.\n그의 주요 공약 중 하나는 미국을 에너지와 전기 요금을 세계에서 가장 저렴하게 만들고 활용할 수 있는 나라로 만드는 것입니다. 이는 기사에서도 언급된 인공지능(AI) 기술 발전과 밀접한 관련이 있는데요. AI 발전에서 가장 중요한 요소는 ‘저렴하고 풍부한 전력’이기 때문입니다. \n이를 위해 트럼프 전 대통령은 석탄, 가스, 원자력 등 모든 에너지원 개발에 대한 규제를 완화하고, 안정적으로 저렴한 전력을 공급해 미국이 중국과의 경쟁에서 앞서 나가게 하겠다고 말했습니다.\n트럼프는 Agenda 47을 통해 이렇게 말합니다. “우리는 아주 값싼 에너지를 다시 가지게 될 것입니다. (We are going to have very inexpensive energy again.)” 얼핏 보면 에너지 생산 비용이 많이 드는 ‘친환경 발전'을 그만두고, 석유, 천연가스, 석탄 같은 비용이 낮은 에너지원에 대한 투자를 늘리겠다는 생각이 들 수 있는데요.\n미국에는 이미 태양광으로 전기를 생산하는 것이 더 저렴한 지역이 있습니다. 이곳에서는 트럼프가 말하는 ‘값싼 에너지'가 태양광이나 풍력이 될 수도 있는 것이죠. 트럼프의 에너지 정책을 화석 연료를 밀어주고 친환경 에너지를 밀어낸다고 이분법적으로 받아들일 필요는 없다는 말입니다.\n\n\nProject 2025: 보수 성향 싱크탱크 헤리티지재단에서 만든 보고서. 24년 미국 대통령 선거에서 공화당이 승리할 경우, 미국연방정부를 재편하기 위한 계획으로 보수 성향의 50여 개 단체와 360여 명의 전문가들이 참여해 만들었어요.\n상호무역법: 공정하고 상호적인 무역을 강화하기 위해 도입된 법. 이 법은 상대국이 미국 상품에 부과하는 관세에 상응하는 관세율을 상대국의 수입 상품에 부과함으로써 미국 산업을 활성화하려는 목적을 가지고 있어요.\n러닝메이트(Running Mate): 미국의 대통령 선거에서 대통령 후보가 지명하는 부통령 후보. 러닝메이트는 대통령 후보와 상호 보완적인 관계를 이루며, 대통령 후보의 약점을 보완하고 지지층을 확장하는 역할을 합니다. 이번 대선에서 공화당 트럼프 후보는 J.D.밴스 오하이오주 상원을 부통령 후보로 지명했어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 금혜원 Graphic 조수희 이동건",
        "content": "트럼프 전 대통령이 대선에서 승리한다면, 우리 경제와 투자에도 변화가 있을 것으로 예상되는데요. 그의 공약을 미리 알아두면 실전에 대비할 수 있겠죠?",
        "contentSnippet": "트럼프 전 대통령이 대선에서 승리한다면, 우리 경제와 투자에도 변화가 있을 것으로 예상되는데요. 그의 공약을 미리 알아두면 실전에 대비할 수 있겠죠?",
        "guid": "https://blog.toss.im/article/economic-terms-23-agenda47",
        "isoDate": "2024-07-25T02:00:00.000Z"
      },
      {
        "title": "토스, 공정거래 자율준수 프로그램 도입",
        "link": "https://blog.toss.im/article/toss-cp",
        "pubDate": "Tue, 23 Jul 2024 05:44:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}토스가 '공정거래 자율준수 프로그램(Compliance Program·이하 CP)’을 도입한다.\nCP는 기업이 공정거래 관련 법규를 스스로 준수하기 위해 자체적으로 제정 및 운영하는 교육, 감독 등의 제반 시스템을 의미한다. 이는 기업의 투명성을 강화하고 공정한 경쟁 환경을 조성하는 데 기여하고자 만들어진 제도다.\n토스는 지난 22일(월) 서울 강남구 역삼동 본사에서 CP 도입 선포식을 진행했다. 앞으로 CP 제도가 원활하게 운영되도록 별도의 기준을 마련하고, 팀원들이 준수해야 할 공정거래 관련 법규의 이해를 돕기 위한 자율준수 편람 및 교육을 제공할 계획이다. 또한 공정한 거래 문화가 제대로 작동하는지 수시로 점검하는 동시에 개선 활동도 수행할 예정이다.\n토스 이승건 대표는 선언문을 통해 “기업의 존립과 성장에 준법경영은 필수적인 사항”이라며 “CP 도입은 토스팀이 지향하는 자율과 책임의 가치를 반영하는 결정이라 생각하기에, 이를 위한 업무와 노력에 지원을 아끼지 않을 것”이라고 밝혔다.",
        "content": "22일 선포식 진행… 윤리경영의 중요성에 공감대 형성",
        "contentSnippet": "22일 선포식 진행… 윤리경영의 중요성에 공감대 형성",
        "guid": "https://blog.toss.im/article/toss-cp",
        "isoDate": "2024-07-23T05:44:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]