[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Siva Katamreddy",
        "title": "A Practical Guide to Testing Spring Controllers With MockMvcTester",
        "link": "https://blog.jetbrains.com/idea/2025/04/a-practical-guide-to-testing-spring-controllers-with-mockmvctester/",
        "pubDate": "Tue, 22 Apr 2025 13:22:39 +0000",
        "content:encodedSnippet": "Spring Framework 6.2 introduced MockMvcTester to support writing AssertJ style assertions using AssertJ under the hood.\nIf you’re using Spring Boot, the spring-boot-starter-test dependency transitively adds the most commonly used testing libraries such as mockito, assertj, json-path, jsonassert, etc. So, if you’re using Spring Boot 3.4.0 (which uses Spring framework 6.2) or any later version, you don’t need to add any extra dependencies to use MockMvcTester.\nIn this article, we’ll explore how you can use MockMvcTester for different testing scenarios.\nGetting started with MockMvcTester\nMockMvcTester is built on top of MockMvc and provides AssertJ support for writing tests and asserting the result.\nYou can find the sample application code here.\nHere is an example test written using MockMvc:\nimport org.springframework.test.web.servlet.MockMvc;\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n\nclass UserRestControllerTests {\n   @Autowired\n   MockMvc mockMvc;\n\n   @Test\n   void getUserByIdSuccessful() throws Exception {\n       mockMvc.perform(get(\"/api/users/1\")).andExpect(status().isOk());\n   }\n}\nThe same test written using the MockMvcTester fluent API:\nimport org.springframework.test.web.servlet.assertj.MockMvcTester;\nimport static org.assertj.core.api.Assertions.assertThat;\n\nclass UserRestControllerTests {\n   @Autowired\n   MockMvcTester mockMvcTester;\n\n   @Test\n   void getUserByIdSuccessful() {\n      assertThat(mockMvcTester.get().uri(\"/api/users/1\")).hasStatusOk();\n   }\n}\n\n\n\n\nIt is much easier to use the MockMvcTester fluent API rather than using the IDE feature to find the static imports for get(), post(), status(), etc.\nHow to configure MockMvcTester?\nIf you’re writing a slice test for a controller using @WebMvcTest, you can simply inject MockMvcTester.\nThe @WebMvcTest annotation is meta-annotated with @AutoConfigureMockMvc, so a MockMvc instance is auto-configured. If AssertJ is available, then a MockMvcTester instance will also be auto-configured.\n@WebMvcTest(controllers = UserRestController.class)\nclass UserRestControllerTests {\n   @Autowired\n   MockMvcTester mockMvcTester;\n\n   //...\n}\nIf you’re writing an integration test using @SpringBootTest, then you need to add the @AutoConfigureMockMvc annotation to the test class, and you can also inject MockMvcTester.\n@SpringBootTest\n@AutoConfigureMockMvc\nclass UserRestControllerTests {\n   @Autowired\n   MockMvcTester mockMvcTester;\n\n   //...\n}\nIf you’re already using MockMvc, then you can gradually adopt MockMvcTester by creating a MockMvcTester instance from MockMvc:\nclass UserRestControllerTests {\n   @Autowired\n   MockMvc mockMvc;\n\n   MockMvcTester mockMvcTester;\n\n   @PostConstruct\n   void setUp() {\n       mockMvcTester = MockMvcTester.create(mockMvc);\n   }\n\n   //...\n}\nWriting tests using MockMvcTester\nLet’s explore how we can write tests using MockMvcTester in various scenarios.\nTesting REST API JSON response\nAssume we have a REST API endpoint for user registration that returns HTTP code 201 when successful, along with the response JSON payload with name, email, and role properties.\nWe can write a test using MockMvcTester:\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.MediaType;\nimport org.springframework.test.web.servlet.assertj.MockMvcTester;\nimport org.springframework.test.web.servlet.assertj.MvcTestResult;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n@Test\nvoid userRegistrationSuccessful() {\n   String requestBody = \"\"\"\n           {\n               \"email\": \"siva@gmail.com\",\n               \"password\": \"secret\",\n               \"name\": \"Siva\"\n           }\n           \"\"\";\n\n   assertThat(mockMvcTester\n       \t.post()\n       \t.uri(\"/api/users\")\n       \t.contentType(MediaType.APPLICATION_JSON)\n       \t.content(requestBody))\n        .hasStatus(HttpStatus.CREATED)\n        .bodyJson()\n        .isLenientlyEqualTo(\"\"\"\n             {\n               \"name\": \"Siva\",\n               \"email\": \"siva@gmail.com\",\n               \"role\": \"ROLE_USER\"\n             }\n          \"\"\");\n}\nWe have compared the HTTP status code, converted the response body to JSON, and compared it with our expected JSON structure.\nWe can split the code into two parts to execute the request and assert the result:\nMvcTestResult testResult = mockMvcTester\n       .post()\n       .uri(\"/api/users\")\n       .contentType(MediaType.APPLICATION_JSON)\n       .content(requestBody)\n       .exchange();\n\nassertThat(testResult)\n       .hasStatus(HttpStatus.CREATED)\n       .bodyJson()\n       .isLenientlyEqualTo(\"\"\"\n           {\n              \"name\": \"Siva\",\n              \"email\": \"siva@gmail.com\",\n              \"role\": \"ROLE_USER\"\n           }\n         \"\"\");\nSo far, we have compared the response JSON with our expected JSON structure using a multiline string. Instead, we can also store the JSON as a classpath resource and compare them:\nvar expected = new ClassPathResource(\"/user-registration-response.json\", UserRestControllerTests.class);\n\nassertThat(testResult)\n       .hasStatus(HttpStatus.CREATED)\n       .bodyJson()\n       .isLenientlyEqualTo(expected);\nIf you need more control over the response body assertions, you can map the response into a Java object and assert it:\npublic record RegistrationResponse(String name, String email, String role) {}\n\nassertThat(testResult)\n       .hasStatus(HttpStatus.CREATED)\n       .bodyJson()\n       .convertTo(RegistrationResponse.class)\n       .satisfies(response -> {\n           assertThat(response.name()).isEqualTo(\"Siva\");\n           assertThat(response.email()).isEqualTo(\"siva@gmail.com\");\n           assertThat(response.role()).isEqualTo(\"ROLE_USER\");\n       });\nTesting REST API exception handling scenarios\nIt is common practice to use @RestControllerAdvice to handle exceptions centrally:\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\n\n@RestControllerAdvice\npublic class GlobalExceptionHandler {\n\n   @ExceptionHandler(UserAlreadyExistsException.class)\n   public ResponseEntity<Object> handle(UserAlreadyExistsException e) {\n       var error = e.getMessage();\n       return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(error);\n   }\n\n   // more handler methods\n}\nFor user registration, we check the existence of the given email in the database and throw UserAlreadyExistsException if the email already exists. The GlobalExceptionHandler will handle this exception and return the appropriate response.\nWe can write a test to handle this scenario using MockMvcTester:\n@Test\nvoid shouldFailToRegisterWithExistingEmail() {\n   String requestBody = \"\"\"\n           {\n               \"email\": \"admin@gmail.com\",\n               \"password\": \"secret\",\n               \"name\": \"Administrator\"\n           }\n           \"\"\";\n\n   MvcTestResult testResult = mockMvcTester.post()\n           .uri(\"/api/users\")\n           .contentType(MediaType.APPLICATION_JSON)\n           .content(requestBody)\n           .exchange();\n\n   assertThat(testResult)\n           .failure()\n           .isInstanceOf(UserAlreadyExistsException.class)\n           .hasMessage(\"User with email admin@gmail.com already exists\");\n}\nWe have asserted that there is a failure with a specific exception type and the expected error message.\nTesting the Thymeleaf view rendering controllers\nWe can write tests for controllers that handle the request and render a view, such as a Thymeleaf view template.\nLet’s say we have a controller with two handler methods:\nimport jakarta.validation.Valid;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.validation.BindingResult;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.servlet.mvc.support.RedirectAttributes;\n\n@Controller\npublic class UserController {\n   private final UserRepository userRepository;\n   public UserController(UserRepository userRepository) {\n       this.userRepository = userRepository;\n   }\n\n   @GetMapping(\"/users/{id}\")\n   public String getUserById(@PathVariable Long id, Model model) {\n       var user = userRepository.findById(id);\n       if (user != null) {\n           model.addAttribute(\"user\", user);\n           return \"user\";\n       }\n       return \"not-found\";\n   }\n\n   @PostMapping(\"/users\")\n   public String createUser(@ModelAttribute(\"user\") @Valid User user,\n                            BindingResult bindingResult,\n                            RedirectAttributes redirectAttributes) {\n       userRepository.create(user);\n       if (bindingResult.hasErrors()) {\n           return \"create-user\";\n       }\n       redirectAttributes.addFlashAttribute(\"successMessage\", \"User saved successfully\");\n       return \"redirect:/users\";\n   }\n}\nLet’s write the first test to invoke GET users/{id} and assert the HTTP status code and the model data:\n@Test\nvoid shouldGetUserById() {\n   var result = mockMvcTester.get().uri(\"/users/1\").exchange();\n\n   assertThat(result)\n           .hasStatusOk()\n           .hasViewName(\"user\")\n           .model()\n           \t.containsKeys(\"user\")\n           \t.containsEntry(\"user\", new User(1L, \"Siva\", \"siva@gmail.com\", \"siva\"));\n}\nHere, we assert the expected view name, model attribute name to be user, and the user object data.\nTesting URL redirects and flash attributes\nLet’s write a test to verify the successful scenario of creating a user with valid data:\n@Test\nvoid shouldCreateUserSuccessfully() {\n   var result = mockMvcTester.post().uri(\"/users\")\n           .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n           .param(\"name\", \"Test User 4\")\n           .param(\"email\", \"testuser4@gmail.com\")\n           .param(\"password\", \"testuser4\")\n           .exchange();\n\n   assertThat(result)\n           .hasStatus(HttpStatus.FOUND)\n           .hasRedirectedUrl(\"/users\")\n           .flash().containsKey(\"successMessage\")\n           .hasEntrySatisfying(\"successMessage\",\n                   value -> assertThat(value).isEqualTo(\"User saved successfully\"));\n}\nWe have submitted the form with valid data and asserted the expected behavior that the user will be redirected to the new URL /users with a successMessage flash attribute.\nTesting model validation errors\nWhen a form is submitted with invalid data, we usually redisplay the form with error messages.\nLet’s see how we can test the form field validation errors:\n@Test\nvoid shouldGetErrorsWhenUserDataIsInvalid() {\n   var result = mockMvcTester.post().uri(\"/users\")\n           .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n           .param(\"name\", \"\") // blank -invalid\n           .param(\"email\", \"testuser4gmail.com\") // invalid email format\n           .param(\"password\", \"pwd\") // valid\n           .exchange();\n\n   assertThat(result)\n           .model()\n           .extractingBindingResult(\"user\")\n           .hasErrorsCount(2)\n           .hasFieldErrors(\"name\", \"email\");\n}\n\n\n\n\nHere, we have submitted the form with invalid values for the name and email fields and asserted the expected error details.\nSimilarly, you can assert the expected headers, cookies, multipart requests, etc.\nSummary\nAs you have seen in this article, MockMvcTester helps you to write tests using a fluent API and provides many custom assertions to verify the results more expressively.\nTo learn more about MockMvcTester, you can check out the official documentation here.\nIf you’re using Spring Boot 3.4.0 or a later version, you can start using MockMvcTester to write more expressive tests using a fluent API. If you’re using an older version, then MockMvcTester could be a solid reason to consider upgrading!",
        "dc:creator": "Siva Katamreddy",
        "content": "Spring Framework 6.2 introduced MockMvcTester to support writing AssertJ style assertions using AssertJ under the hood. If you’re using Spring Boot, the spring-boot-starter-test dependency transitively adds the most commonly used testing libraries such as mockito, assertj, json-path, jsonassert, etc. So, if you’re using Spring Boot 3.4.0 (which uses Spring framework 6.2) or any later version, [&#8230;]",
        "contentSnippet": "Spring Framework 6.2 introduced MockMvcTester to support writing AssertJ style assertions using AssertJ under the hood. If you’re using Spring Boot, the spring-boot-starter-test dependency transitively adds the most commonly used testing libraries such as mockito, assertj, json-path, jsonassert, etc. So, if you’re using Spring Boot 3.4.0 (which uses Spring framework 6.2) or any later version, […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=557045",
        "categories": [
          "idea",
          "java",
          "springboot-2",
          "mockmvc",
          "mockmvctester",
          "spring",
          "testing"
        ],
        "isoDate": "2025-04-22T13:22:39.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "CI/CD Security Best Practices",
        "link": "https://blog.jetbrains.com/teamcity/2025/04/ci-cd-security-best-practices/",
        "pubDate": "Tue, 22 Apr 2025 12:57:38 +0000",
        "content:encodedSnippet": "Software development moves fast – really fast. It can also involve multiple teams working from different locations around the world. However, while speed and collaboration can be great for developers and businesses, they can also create security challenges. \nWith more entry points and less time to catch potential threats, each commit, build, and deployment is another opportunity for something to go wrong. Whether that’s a security breach, malicious attack, or accidental exposure, the impact can ripple through your chain and burden every application.\nThat’s where CI/CD security comes in. Learn what securing your CI/CD pipeline means for your team, the main risks you need to be aware of, and the practical steps to safeguard your flow.\nWhat is CI/CD security, and why is it important?\nCI/CD security is a set of practices and controls that protects the entire software delivery process. It prioritizes keeping your code safe from the very start, is built in rather than a separate phase, and is integral to DevSecOps.\nYour CI/CD pipeline has access to tons of sensitive information, including codebases, credentials, and production environments. If compromised, attackers could inject malicious code, steal data, or even gain access to your systems (as they did in the SolarWinds attack).\nAside from these catastrophic breaches, proper CI/CD security helps prevent mistakes, which could expose sensitive data or introduce vulnerabilities. Malicious employee or contractor behavior shouldn’t be overlooked here, either – 20% of businesses cited this as a cause of their data breaches. CI/CD security is both a shield and a safety net in one.\n\n\n\n\nWith development automation, changes can go from a laptop to production in minutes, and CI/CD security needs to ensure it doesn’t slow down the process. Acceleration is great for business agility, but giving attackers a fast track to your systems is hazardous. In fact, less than 10% of companies in 2022 had implemented hack monitoring in their software development lifecycle. \nHowever, get CI/CD security right, and you can have both speed and reliability.\nCI/CD pipeline security threats\nYour CI/CD pipeline has several potential weak points, including: \nSource-code repositories: Where your application code and configuration files live, the starting point of your pipeline.\nBuild servers: The systems that compile your code, run tests, and package your applications. They handle sensitive operations and often have elevated privileges.\nArtifact storage: Where your compiled applications, container images, and packages are stored before deployment. \nDeployment environments: The staging and production systems where your applications run (including cloud platforms and traditional servers).\nThese components face threats from various angles, such as: \nSupply chain attacks: Harmful code can sneak in through compromised third-party tools, libraries, or dependencies used in your application.\nStolen passwords and secrets: Attackers may find exposed credentials in pipeline configurations or scripts. These threats can take a long time to identify and contain – 292 days, according to one report. \nConfiguration mistakes: Small errors in setup can enable attackers to bypass security or gain more access than they should have.\nInsider threats: Developers with pipeline access might accidentally or intentionally introduce vulnerabilities.\nServer breaches: Attackers can get access to the computers that run your build and deployment process.\nThe interconnected nature of CI/CD means that compromising just one part can affect everything in the system.\n\n\n\n\nTips for securing your CI/CD pipeline\nThe most effective CI/CD security involves building multiple layers of protection throughout your pipeline. Rather than implementing a single tool or simply following a checklist, you should set up security checkpoints at every stage.\nEmploy CI/CD access controls\nProtect your pipeline by implementing strict access controls and applying the principle of least privilege. \nUse role-based access control (RBAC) to ensure team members only have the access they absolutely need for their specific roles. To prevent unauthorized code changes, set up mandatory code reviews, enable branch protection rules, and use signed commits.\nRemember to regularly audit these permissions and remove access when team members leave.\nManage secrets effectively\nNever, ever hardcode credentials into your pipeline configurations or code. Instead, use dedicated secrets management tools (such as HashiCorp Vault) to securely store and manage sensitive information.\nRotate these credentials regularly (ideally automatically) and ensure secrets are encrypted both in transit and at rest. It’s also best to use temporary credentials where possible.\nIntegrated security testing\nMake security testing a natural part of your pipeline by putting multiple testing layers in place.\nCertain tools can help you catch vulnerabilities before they reach production:\nStatic Application Security Testing (SAST) analyzes your source code for security vulnerabilities.\nDynamic Application Security Testing (DAST) tests running applications.\nInteractive Application Security Testing (IAST) is used for runtime analysis.\nSoftware Composition Analysis (SCA) checks third-party dependencies.\nConfigure these tests to run automatically with each build and block deployments if any security issues are found.\n\n\n\n\nSecure the development and deployment environment\nEnsure your build environments are as secure as your production systems – they’re just as important, if not more. \nHarden your build servers by removing unnecessary services, keeping systems patched, and using minimal base images. Implement network segmentation to isolate build environments from each other and other systems.\nIf you can, consider using temporary infrastructure. This method allows you to create fresh environments for each build and destroy them afterward.\nAutomate security scans\nSet up automated security scanning throughout your pipeline. Use container scanners to check for vulnerabilities in container images, dependency checkers to identify known vulnerabilities in libraries, and registry scanners to ensure the security of stored artifacts. \nEstablish vulnerability thresholds (what level is considered suspicious or a threat) and automatically stop deployments that don’t meet your security standards. Schedule regular scans of your artifacts to ensure you’re aware of new or emerging vulnerabilities.\nMonitor and alert\nImplement comprehensive monitoring for your CI/CD pipeline. Track all activities and watch for unusual patterns like builds at odd hours, unexpected configuration changes, strange resource usage, and deployment events.\nUse detailed logging and set up alerts, making sure your team knows how to respond if something suspicious is found. Security information and event management (SIEM) are great CI/CD security tools – they correlate security events and enable real-time threat detection and response.\nPerform regular security audits and assessments\nRegularly test your CI/CD pipeline security using different methods:\nPenetration testing identifies potential vulnerabilities before attackers do.\nRed team exercises simulate ‘real’ attacks, while blue team exercises let you practice your incident response.\nPurple team exercises are used to improve both your offensive and defensive capabilities.\nCheck your compliance with your local security standards and regulations, and update your controls based on the results of your assessments.\nHow TeamCity can help\nSecurity in your CI/CD pipeline is a must for protecting your software supply chain. While the threats are real, with the right tools and practices, you can build and deploy software securely without slowing down your team or minimizing their efforts.\nTeamCity makes this easier with security features that grow with your needs.\n\nTeamCity On-PremisesTeamCity Cloud\n🖥️ Installed and fully managed by your team☁️ Hosted and managed by JetBrains\n🔐 Full control over infrastructure and network🔒 Zero-maintenance, secure-by-default CI/CD environment\n🗝️ SSH key management🗝️ SSH key management\n🔄 Custom secrets management integrations (e.g., HashiCorp Vault, AWS KMS)🔄 Custom secrets management integrations (e.g., HashiCorp Vault, AWS KMS)\n📦 Artifact storage and access managed internally📦 Secure artifact storage with access control\n🔍 Customizable logging and monitoring tools📜 Built-in user audit logs and integrated monitoring\n🔧 Highly customizable for specific compliance needs✅ Compliant with industry standards and suitable for regulated industries\n👥 Ideal for teams with strict infrastructure or data residency policies🏢 Great for teams who want secure CI/CD without infrastructure management\n\n\n\n\n\nDeliver secure software without compromising on speed or performance. Try TeamCity for free now.\n💡See also: [Whitepaper] 9 Ways to Prevent a Supply Chain Attack on Your CI/CD Server",
        "dc:creator": "Olga Bedrina",
        "content": "Software development moves fast – really fast. It can also involve multiple teams working from different locations around the world. However, while speed and collaboration can be great for developers and businesses, they can also create security challenges.&#160; With more entry points and less time to catch potential threats, each commit, build, and deployment is [&#8230;]",
        "contentSnippet": "Software development moves fast – really fast. It can also involve multiple teams working from different locations around the world. However, while speed and collaboration can be great for developers and businesses, they can also create security challenges.  With more entry points and less time to catch potential threats, each commit, build, and deployment is […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=562582",
        "categories": [
          "best-practices",
          "how-tos",
          "security",
          "how-to"
        ],
        "isoDate": "2025-04-22T12:57:38.000Z"
      },
      {
        "creator": "Razmik Seysyan",
        "title": "Aqua Sunset",
        "link": "https://blog.jetbrains.com/qa/2025/04/aqua-sunset/",
        "pubDate": "Tue, 22 Apr 2025 12:16:52 +0000",
        "content:encodedSnippet": "Aqua was originally developed as a dedicated IDE for QA engineers working in automated testing. After carefully evaluating adoption rates, market trends, and user feedback, we have made the difficult decision to discontinue the product. While this was not an easy choice, Aqua did not reach the level of adoption we had anticipated.\nWe believe that integrating Aqua’s capabilities into our existing JetBrains IDEs through the Test Automation plugin will offer a more seamless and sustainable solution for our users. This shift allows us to focus on enhancing our core products and delivering even greater value to our customers.\n\n\n\n\nWhat’s next for Aqua users?\nWe understand that transitions can be challenging, and we are committed to making this process as smooth as possible. To support our users, we are offering multiple transition options and have outlined a comprehensive migration plan to help ensure a seamless experience.\nFor commercial license holders:\nAqua licenses will be automatically upgraded to All Products Pack licenses, providing immediate access to the latest versions of IntelliJ IDEA Ultimate, WebStorm, or any other JetBrains IDE.\nAll Products Pack licenses purchased before April 22, 2025, will continue to provide a valid Aqua license.\nOur standard refund policy applies to recent purchases.\n\n\n\n\nFor non-commercial license holders:\nWe’re offering users with a non-commercial Aqua license a WebStorm non-commercial license as an alternative.\nAdditionally, we are offering a 40% discount on an All Products Pack license, valid for one year from the transition date.\nTest Automation plugin\nAlthough Aqua as a standalone product is being retired, all of its core capabilities will remain available through the Test Automation plugin, which is available in IntelliJ IDEA Ultimate, PyCharm, and WebStorm (including for non-commercial license users), as well as other JetBrains IDEs. This ensures that users can continue leveraging test automation framework support within the JetBrains ecosystem.\n\n\n\n\nThank you\nWe want to express our deepest gratitude to the Aqua community – your feedback, support, and engagement have been invaluable. While this marks the end of Aqua’s journey, it is also the beginning of a new chapter where test automation continues to thrive within JetBrains’ broader suite of tools.\nFor any questions or additional support, please don’t hesitate to get in touch with our team.\nThe JetBrains team\n\n\n\n\nFAQ\nBelow, we have compiled answers to the most common questions regarding the discontinuation of Aqua and the migration options available.\nWhy is Aqua being discontinued?\nAqua has not reached the level of adoption we initially envisioned. After evaluating market trends and user feedback, we have decided to consolidate its capabilities into the broader JetBrains ecosystem through the Test Automation plugin, allowing us to focus on widely adopted solutions that better serve our customers.\nWhat is the latest Aqua release?\nThe final release of Aqua is version 2024.3. There will be no further regular updates (except vulnerability fixes), and support will be gradually phased out.\nWill I still be able to use Aqua after April 22, 2025,?\nYes, if you have a valid license before April 22, 2025, you can continue using Aqua beyond the sunset date. We will no longer sell new subscriptions or renew existing ones for Aqua.\nWhat alternatives are available for Aqua users?\nAll of Aqua’s core capabilities remain available via the Test Automation plugin, which is included in IntelliJ IDEA Ultimate, PyCharm, WebStorm (including with a non-commercial license), and several other JetBrains IDEs.\nWhat will happen to my Aqua license?\nFor commercial license holders:\nYour current Aqua license will be automatically upgraded to an All Products Pack license, providing immediate access to the latest versions of IntelliJ IDEA Ultimate, WebStorm, or any other JetBrains IDE. This applies for the time left on your current license with no extra costs. Please note that auto-renewal will be disabled.\nAll Products Pack licenses purchased before April 22, 2025, will continue to provide a valid Aqua license.\nOur standard refund policy applies to recent purchases. [How can I get a refund?]\n\n\n\n\nFor non-commercial license holders:\nYou have the option to apply for a WebStorm non-commercial license.\nYou can get a 40% discount on a one-year All Products Pack license. This discount is valid for one year from the transition date.\nHow do I install the Test Automation plugin?\nTo install the Test Automation plugin, open your JetBrains IDE and go to Settings > Plugins. Find the plugin by searching for “Test Automation plugin” in the Marketplace tab. Click Install, and then restart your IDE to activate it.\n\n\n\n\nWill there be support for migration?\nYes, limited support will be available to help users transition. Additional resources and guidance will be provided via our documentation and support channels.\nWhat should I do if I recently purchased an Aqua license?\nOur standard refund policy applies to recent purchases. If you have questions about your eligibility for a refund, please contact JetBrains support.\n[How can I get a refund?]\nWhere can I find more information or assistance?\nFor any further questions or support inquiries, please visit our support page or reach out to us directly.\nWe sincerely appreciate the Aqua community’s support and look forward to continuing to provide powerful test automation solutions within our JetBrains IDEs.",
        "dc:creator": "Razmik Seysyan",
        "content": "Aqua was originally developed as a dedicated IDE for QA engineers working in automated testing. After carefully evaluating adoption rates, market trends, and user feedback, we have made the difficult decision to discontinue the product. While this was not an easy choice, Aqua did not reach the level of adoption we had anticipated. We believe [&#8230;]",
        "contentSnippet": "Aqua was originally developed as a dedicated IDE for QA engineers working in automated testing. After carefully evaluating adoption rates, market trends, and user feedback, we have made the difficult decision to discontinue the product. While this was not an easy choice, Aqua did not reach the level of adoption we had anticipated. We believe […]",
        "guid": "https://blog.jetbrains.com/?post_type=qa&p=561088",
        "isoDate": "2025-04-22T12:16:52.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Qodana For Code Quality in STEM",
        "link": "https://blog.jetbrains.com/qodana/2025/04/qodana-for-code-quality-in-stem/",
        "pubDate": "Tue, 22 Apr 2025 10:37:18 +0000",
        "content:encodedSnippet": "Your code drives discovery. Keep it precise.\nIn STEM fields, software isn’t just a product, it underpins innovation, research, and life-critical infrastructure. Qodana brings advanced static code analysis to STEM software projects, helping ensure code quality, security, and compliance where it matters most.\nQodana for STEM\nWhy code quality matters in STEM\nSoftware in science, technology, engineering, and mathematics is used for modeling, simulation, automation, and large-scale data analysis. A single error can compromise results, waste resources, or even put safety at risk. Qodana ensures your code is:\nClean and consistent across teams.\n\n\n\n\nSecure and compliant from day one.\n\n\n\n\nOptimized and performant for data-heavy workloads.\n\n\n\n\nReliable and reproducible for research and innovation.\n\n\n\n\n\nHow Qodana helps STEM teams\nSTEM fields rely heavily on custom-built software to support modeling, simulation, automation, and data analysis. Qodana ensures that this critical code is secure, maintainable, and free of costly defects, without slowing down development.\nSafeguard scientific software\nQodana helps detect bugs, code smells, and logic flaws early, so your research tools and simulation engines stay reliable and reproducible.\nSecure your infrastructure\nAutomatically catch and fix security vulnerabilities in software supporting robotics, engineering design tools, or AI/ML workflows before they become real-world risks.\nMaintain confidence in complex systems\nWhether you’re handling sensitive healthcare datasets or designing systems for aerospace, Qodana enforces code standards that support long-term stability, compliance, and auditability.\nGet seamless Integration from IDE to CI/CD\nWith deep integrations into JetBrains IDEs, VS Code, and popular CI tools like GitHub Actions, TeamCity, and GitLab, Qodana fits right into your workflow – scanning code as it’s written and delivering insights instantly.\nStay compliant and in control\nQodana performs license audits and helps prevent legal or regulatory issues – crucial in STEM fields where compliance is non-negotiable.\nSet automated quality gates\nEstablish strict go/no-go thresholds for code quality and coverage. Qodana ensures your builds only pass when the code meets your team’s safety and performance standards.\n\n\n\n\nReal benefits for STEM teams \nIncreased reliability of mission-critical code – check for bugs, license issues, and security vulnerabilities.\n\n\n\n\nFaster collaboration across interdisciplinary teams – try our organization-wide dashboard and access everything in your pipeline.\n\n\n\n\nReduced manual review effort with automated checks – make sure nothing slips through the cracks.\n\n\n\n\nStronger foundations for innovation and experimentation – more safety means less risk when trying something new.\n\n\n\n\nConfidence in manual and AI-assisted development through validation.\n\n\n\n\nWhy Qodana?\nQodana is developed by JetBrains, which creates tools that are trusted by millions of developers. It integrates easily into CI/CD pipelines and IDEs, and supports multiple languages and frameworks used in STEM research. Plus, Qodana is SOC2 certified – ensuring your data, and those of your patients, coworkers, and beneficiaries, is always protected. \nEmpowering discovery, one line of code at a time\nWhether you’re building the next breakthrough drug, simulating a new type of aircraft, or decoding planetary data, Qodana helps ensure that you know as much about your code as you do about your field of study.\nQodana for STEM",
        "dc:creator": "Kerry Beetge",
        "content": "Your code drives discovery. Keep it precise. In STEM fields, software isn’t just a product, it underpins innovation, research, and life-critical infrastructure. Qodana brings advanced static code analysis to STEM software projects, helping ensure code quality, security, and compliance where it matters most. Qodana for STEM Why code quality matters in STEM Software in science, [&#8230;]",
        "contentSnippet": "Your code drives discovery. Keep it precise. In STEM fields, software isn’t just a product, it underpins innovation, research, and life-critical infrastructure. Qodana brings advanced static code analysis to STEM software projects, helping ensure code quality, security, and compliance where it matters most. Qodana for STEM Why code quality matters in STEM Software in science, […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=562559",
        "categories": [
          "case-study-qodana",
          "qodana",
          "code-analysis",
          "stem"
        ],
        "isoDate": "2025-04-22T10:37:18.000Z"
      },
      {
        "creator": "Jan-Niklas Wortmann",
        "title": "Discord for WebStorm: Less Noise, More Signal",
        "link": "https://blog.jetbrains.com/webstorm/2025/04/discord-for-webstorm-less-noise-more-signal/",
        "pubDate": "Tue, 22 Apr 2025 08:00:00 +0000",
        "content:encodedSnippet": "TLDR: We’ve revamped the JetBrains Community Discord with dedicated WebStorm channels for announcements, discussions, help, and Q&As to create a more valuable community resource. We’ll have live office hours on April 23rd to connect directly with our team. Not part of our Discord community yet? Join the JetBrains Community Discord here to start connecting with fellow WebStorm users and the development team.\nThe JetBrains Community Discord server has been around for a while now, but it’s been challenging for us to use it in a way that truly benefits the community. We’ve seen its potential, but without the right structure and attention, we just haven’t been able to keep up with it.\nWe do want to change that. We’re committed to making the Discord channel a more useful, welcoming place for everyone in the WebStorm community. We believe this space can become an invaluable resource for developers to ask questions, share knowledge, and ultimately grow professionally. In this blog post, we’ll outline how we plan to accomplish this through thoughtful restructuring and active engagement.\nWhat’s Changing: Channel Structure That Makes Sense\nPreviously, we had a single WebStorm channel that served all purposes – from announcements to help requests to general discussions. This made it difficult for our team to stay on top of conversations and for community members to find relevant information.\nTo address this, we’re creating a more structured approach with different channels catering to the various needs of our community:\n#webstorm-announcements\nThis is going to be read-only and will be used by our team to make general announcements about releases, roadmaps, and upcoming events.\n#webstorm-general\nSometimes it can be nice to have a more unstructured format, fostering organic conversation and exchange within the community. That’s exactly what #webstorm-general is going to be for.\n#webstorm-help-hub\nWe will utilize a forum channel, which is easier for everyone who actively seeks help. This is going to be the place to go if you have a feature request, run into a bug, or are unsure how to proceed. \n#webstorm-ama\nSometimes you might have questions that are not necessarily a bug or a feature request, but we do want to provide any kind of transparency we can. So, in case you have any questions, feel free to ask them here. \nLive Events: Direct Access to the People Who Built It\nTalk is cheap. We’re putting our time where our Discord is with an upcoming event:\nLive Office Hours – April 23rd\nTogether with the WebStorm dev team, we want to have a more open dialogue with you. For that very purpose, we are doing live office hours in Discord in #webstorm-office-hours. This will be a great place for you to directly interact with our team and ask any questions you might have. The office hours will be on April 23rd at 4:00 pm CEST/10:00 am EDT, where we will also show some of the new features of the 2025.1 release.\nWhy This Actually Matters\nDeveloper tooling is only as good as the knowledge surrounding it. The most powerful features of WebStorm often remain undiscovered, not because they don’t exist, but because knowledge sharing happens in fragmented, disorganized spaces, and discoverability of features can be very hard if you don’t know about their existence.\nA well-structured community isn’t a nice-to-have — it’s the difference between leveraging 20% of WebStorm’s capabilities and unlocking the full power of your IDE. We hope that this can be a meaningful step in that direction!\nJoin Us\nThe WebStorm Discord isn’t just another Slack alternative or a marketing channel. It’s a technical resource built by developers for developers.\nJoin us on Discord.\nThe WebStorm team",
        "dc:creator": "Jan-Niklas Wortmann",
        "content": "TLDR: We&#8217;ve revamped the JetBrains Community Discord with dedicated WebStorm channels for announcements, discussions, help, and Q&#38;As to create a more valuable community resource. We’ll have live office hours on April 23rd to connect directly with our team. Not part of our Discord community yet? Join the JetBrains Community Discord here to start connecting with [&#8230;]",
        "contentSnippet": "TLDR: We’ve revamped the JetBrains Community Discord with dedicated WebStorm channels for announcements, discussions, help, and Q&As to create a more valuable community resource. We’ll have live office hours on April 23rd to connect directly with our team. Not part of our Discord community yet? Join the JetBrains Community Discord here to start connecting with […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=562355",
        "categories": [
          "news",
          "community",
          "discord",
          "webstorm",
          "webstorm-2025-1"
        ],
        "isoDate": "2025-04-22T08:00:00.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Taint Analysis: Exploring Hidden Dangers in Your Team’s Code",
        "link": "https://blog.jetbrains.com/qodana/2025/04/taint-analysis-exploring-hidden-dangers-in-your-team-s-code/",
        "pubDate": "Mon, 21 Apr 2025 20:22:19 +0000",
        "content:encodedSnippet": "Join us for an engaging roundtable discussion where our panel of developers will share their firsthand insights on the latest Taint Analysis from JetBrains. Discover how critical checks can improve codebase security and be easily implemented in your code review process.\n\n\n\n\nSession abstract\nWhether you’re new to JetBrains or looking to deepen your understanding of IntelliJ IDEA, Qodana, or codebase security, this session will provide practical insights from renowned experts on how security analysis works and how it can help you secure your team’s code. \nYou’ll learn:\nWhat led to the creation of Taint Analysis from IntelliJ IDEA and Qodana.\nEffective strategies for addressing vulnerabilities.\nBest practices for securing your applications and why our developers recommend it.\n\n\n\n\n\nPlus, take part in the conversation by staying for the post-discussion Q&A session, where you’ll get answers to your most pressing questions. \nYour speaker and host\nJan-Niklas Wortmann, Developer Advocate at JetBrains  \nOutside of fine-tuning the developer experience at JetBrains, Jan is a Google Developer Expert for Angular and a part of the RxJS Core team. He’ll be facilitating the discussion.\n \nYour roundtable participants\nAlexander Kirillin\nAlexander is a senior software developer at JetBrains, specializing in dataflow analyzers. He works on the CLion team and also helps develop security analysis for Qodana. In his free time, he enjoys skiing in the mountains during winter and riding bicycles or motorcycles in summer.\nGrigorii Liullin\nGrigorii is a security specialist and software developer who likes SAST tools. He’s dedicated to identifying vulnerabilities and enhancing application security. When he’s not writing or analyzing code, he can often be found jogging or playing video games.\nDima Kopfmann\nDima is a senior software developer and leads the taint analysis team at Qodana. When he’s not coding and looking for new ways to support secure applications, you can find him immersing himself in Japanese culture or spending time with his family\nWe hope to see you there!\nHappy developing!\nSave Your Spot",
        "dc:creator": "Kerry Beetge",
        "content": "Join us for an engaging roundtable discussion where our panel of developers will share their firsthand insights on the latest Taint Analysis from JetBrains. Discover how critical checks can improve codebase security and be easily implemented in your code review process. Session abstract Whether you&#8217;re new to JetBrains or looking to deepen your understanding of [&#8230;]",
        "contentSnippet": "Join us for an engaging roundtable discussion where our panel of developers will share their firsthand insights on the latest Taint Analysis from JetBrains. Discover how critical checks can improve codebase security and be easily implemented in your code review process. Session abstract Whether you’re new to JetBrains or looking to deepen your understanding of […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=562397",
        "categories": [
          "livestream",
          "livestreams",
          "security",
          "taint-analysis"
        ],
        "isoDate": "2025-04-21T20:22:19.000Z"
      },
      {
        "creator": "Vaclav Pech",
        "title": "MPS 2025.1 Release Candidate Is Here!",
        "link": "https://blog.jetbrains.com/mps/2025/04/the-mps-2025-1-rc-ready/",
        "pubDate": "Thu, 17 Apr 2025 15:57:02 +0000",
        "content:encodedSnippet": "We’re excited to announce that the Release Candidate for MPS 2025.1 is now available! Download it today and be among the first to try out the latest features and improvements.\nDOWNLOAD MPS 2025.1 RC\nCurious about what’s new? Check out this blog post for a deep dive into all the updates.\nThe full list of fixed issues can be found here.\nYour JetBrains MPS team",
        "dc:creator": "Vaclav Pech",
        "content": "We’re excited to announce that the Release Candidate for MPS 2025.1 is now available! Download it today and be among the first to try out the latest features and improvements. DOWNLOAD MPS 2025.1 RC Curious about what’s new? Check out this blog post for a deep dive into all the updates. The full list of [&#8230;]",
        "contentSnippet": "We’re excited to announce that the Release Candidate for MPS 2025.1 is now available! Download it today and be among the first to try out the latest features and improvements. DOWNLOAD MPS 2025.1 RC Curious about what’s new? Check out this blog post for a deep dive into all the updates. The full list of […]",
        "guid": "https://blog.jetbrains.com/?post_type=mps&p=561535",
        "categories": [
          "releases",
          "eap",
          "release"
        ],
        "isoDate": "2025-04-17T15:57:02.000Z"
      },
      {
        "creator": "Ivan Tiutiundzhi",
        "title": "Datalore 2025.2 Is Out With Report Tabs, Extended DuckDB Support, and Snowflake Key Pair Authentication",
        "link": "https://blog.jetbrains.com/datalore/2025/04/17/datalore-2025-2-is-out-with-report-tabs-extended-duckdb-support-and-snowflake-key-pair-authentication/",
        "pubDate": "Thu, 17 Apr 2025 13:30:57 +0000",
        "content:encodedSnippet": "Datalore 2025.2 introduces several new features, including report tabs, DuckDB as a data source for SQL cells, Snowflake key pair authentication, and the possibility to use a custom JDBC driver for the Datalore server, which is particularly relevant for the On-Premises version.\nDatalore Cloud users have already received the new updates automatically, and Datalore On-Premises users can upgrade by following these instructions.\nBefore diving into this release’s features, please take note of an important upcoming change:\nStarting with the next major update (Datalore 2025.3), the default Python interpreter will be upgraded to Python 3.11. This means that new notebooks will be created using Python 3.11, while existing notebooks will need to be updated manually. If no action is taken, existing notebooks will remain on Python 3.8, but they will no longer run.\nFor On-Premises users, we’re not planning to update previous baseline images with Python 3.8 or any previously custom-released images (Python 3.10). If you need another runtime version or if you’d like to install a third-party library to your standard environment, consider building a custom agent image.\nReport tabs\n\n\n\n\nReport tabs are the sections within a report that allow you to organize content into multiple views. Similar to sheets in Excel or pages in Power BI, tabs help structure complex reports by grouping related information. You can add tabs and assign selected cells and outputs to one or more of them. Each element can appear in only one tab at a time. Report viewers can navigate through the report using these tabs for a more structured and intuitive experience.\nLearn more about how to build a report.\nDuckDB as a data source for SQL cells\n\n\n\n\nDatalore now supports DuckDB as a data source for SQL cells. With this addition, you can seamlessly query local files (CSV, Parquet, or any format supported by DuckDB) and leverage the full extent of DuckDB’s capabilities.\nSnowflake key pair authentication\n\n\n\n\nFollowing a recent announcement from Snowflake, Datalore’s Snowflake connector now supports key pair authentication, allowing you to securely connect to Snowflake without using passwords. This authentication method leverages public-private key cryptography for enhanced security.\nAnother noteworthy improvement to Datalore On-Premises\nCustom JDBC drivers can now be used not only for data sources but also for the Datalore server itself. In certain cases, a custom PostgreSQL driver may be required to connect to the PostgreSQL database used internally by Datalore, for example, when using Amazon RDS with IAM authentication. Learn more.\n      \n      Upgrade to 2025.2",
        "dc:creator": "Ivan Tiutiundzhi",
        "content": "Datalore 2025.2 introduces several new features, including report tabs, DuckDB as a data source for SQL cells, Snowflake key pair authentication, and the possibility to use a custom JDBC driver for the Datalore server, which is particularly relevant for the On-Premises version. Datalore Cloud users have already received the new updates automatically, and Datalore On-Premises [&#8230;]",
        "contentSnippet": "Datalore 2025.2 introduces several new features, including report tabs, DuckDB as a data source for SQL cells, Snowflake key pair authentication, and the possibility to use a custom JDBC driver for the Datalore server, which is particularly relevant for the On-Premises version. Datalore Cloud users have already received the new updates automatically, and Datalore On-Premises […]",
        "guid": "https://blog.jetbrains.com/?post_type=datalore&p=562165",
        "categories": [
          "releases"
        ],
        "isoDate": "2025-04-17T13:30:57.000Z"
      },
      {
        "creator": "Oksana Mandryka",
        "title": "Google Gemini 2.5 Pro arrives in JetBrains AI Assistant",
        "link": "https://blog.jetbrains.com/ai/2025/04/google-gemini-2-5-pro-arrives-in-jetbrains-ai-assistant/",
        "pubDate": "Thu, 17 Apr 2025 12:53:15 +0000",
        "content:encodedSnippet": "JetBrains AI Assistant now supports Google’s latest and most intelligent AI model, Gemini 2.5 Pro. This integration makes your JetBrains IDE even smarter, providing enhanced accuracy and deep reasoning capabilities to streamline your coding experience.\nAt JetBrains, we aim to equip developers with AI tools that simplify complex tasks and make everyday coding more productive and enjoyable. By continually integrating cutting-edge AI models – such as our own LLM Mellum for code completion, as well as third-party LLMs – we’re committed to improving your workflow and helping you tackle every task. \nGoogle Gemini 2.5 Pro is currently available in AI Assistant in experimental mode.\nWhat’s special about Gemini 2.5 Pro \nGoogle Gemini 2.5 Pro, the first “thinking” model from Google DeepMind, is currently listed as a top performer across several key industry benchmarks for coding tasks, as well as mathematics and science challenges, and it ranks highly on the community-driven LMArena Leaderboard. With this top-performing model integrated directly into your JetBrains IDE, you’ll be able to:\nSolve complex problems: Use Gemini 2.5 Pro’s advanced reasoning to complete intricate coding tasks.\nImprove code quality: Experience greater precision and contextual understanding, streamlining your coding process.\nEnhance your productivity: Receive accurate, context-aware suggestions directly in your IDE for more efficiency.\n\n\n\n\nGemini 2.5 Pro simplifies your workflow, as it minimizes guesswork, boosts code quality, and significantly reduces debugging time.\n“We are excited to closely partner with JetBrains AI to deliver a state-of-the-art experience with Gemini 2.5. To achieve this we focused on advancing our models’ reasoning abilities and code generation quality.\n\r\nFor JetBrains AI users, this means higher quality code suggestions and a richer understanding of project context by the AI. We are excited to see what the JetBrains AI community builds and we are looking forward to collaborating on future projects like AI-powered developer assistance capabilities and agents.”\n\n            \nJason Gelman\n                                                                Product Director for Google Gemini and AI Agents\n                                    \nTechnical details and considerations\nTo help you get the most out of Gemini 2.5 Pro, here are a few technical points to be aware of:\nSupported context window: We currently support a 200,000 token context window for this model and are actively working to enable the full 1 million token input context as soon as possible. \nUsage cost: As with other highly performant models, users should monitor credit usage.\nRate of requests: Gemini 2.5 Pro is still a Preview model, so you may experience a lower available rate of requests to it. \nFeature support: We recommend carefully reviewing Google’s official documentation to determine whether specific features are applicable to your use case.\n\n\n\n\nNeed help finding the perfect model for your needs? Check out this blog post for some helpful tips. If you’re interested in integrating JetBrains’ latest models and datasets into your automated evaluation process, take a look at our card on Hugging Face.\nHow to try it\nTo use the latest model, simply select Gemini 2.5 Pro (Experimental) from the AI chat’s drop-down menu in your JetBrains IDE.\nThe integration is available starting from version 2025.1 of JetBrains IDEs. \nIf you’re already using JetBrains AI Assistant, simply update your IDE to the latest version to explore the new features. If you haven’t yet given JetBrains AI Assistant a try, we invite you to get started today. It’s free. \nTry AI Assistant",
        "dc:creator": "Oksana Mandryka",
        "content": "JetBrains AI Assistant now supports Google&#8217;s latest and most intelligent AI model, Gemini 2.5 Pro. This integration makes your JetBrains IDE even smarter, providing enhanced accuracy and deep reasoning capabilities to streamline your coding experience. At JetBrains, we aim to equip developers with AI tools that simplify complex tasks and make everyday coding more productive [&#8230;]",
        "contentSnippet": "JetBrains AI Assistant now supports Google’s latest and most intelligent AI model, Gemini 2.5 Pro. This integration makes your JetBrains IDE even smarter, providing enhanced accuracy and deep reasoning capabilities to streamline your coding experience. At JetBrains, we aim to equip developers with AI tools that simplify complex tasks and make everyday coding more productive […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=561931",
        "categories": [
          "news",
          "ai-assistant"
        ],
        "isoDate": "2025-04-17T12:53:15.000Z"
      },
      {
        "creator": "Alyona Chernyaeva",
        "title": "Smarter Kotlin Development With JetBrains AI: Junie and AI Assistant in IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/kotlin/2025/04/smarter-kotlin-development-with-jetbrains-ai-junie-and-ai-assistant-in-your-ide/",
        "pubDate": "Thu, 17 Apr 2025 12:32:26 +0000",
        "content:encodedSnippet": "JetBrains AI is now a lot more useful for Kotlin developers. With the public release of Junie and a major update to AI Assistant, two powerful AI tools are now deeply integrated with JetBrains IDEs – and ready to help you move faster with less overhead.\nWhether you’re starting a new feature or cleaning up existing code, these tools are built to provide support where you already work.\nJunie: The coding agent that speaks Kotlin\nImagine that you need to start a project from scratch or add a new module or feature to an existing project, or maybe you need to perform a small and repetitive – yet still significant – task. \nJunie can help you in all of these scenarios!\nIt doesn’t just autocomplete lines or chat about your code – Junie can actually take on whole tasks. Just describe what you want to achieve in plain language, and Junie will write the code, iterate on it, and handle any follow-ups. You stay in control, but Junie takes care of the repetitive work!\nWhat you can do with Junie\nJunie can handle a wide range of Kotlin development tasks. Whether you’re working with server-side Kotlin, Ktor, KMP, or Android, you can rely on Junie for practical help with common tasks like:\nStarting a new project from scratch.\nPrototyping. \nImplementing entire modules based on descriptions.\nEnd-to-end feature development.\nIntegrating third-party services.\nGenerating basic UIs from specifications.\nYou can also customize how Junie works by adding a .junie/guidelines.md file to your project. There, you can define project-specific rules – like what database to use or how tests should be structured – and Junie will take that into account when generating code.\n\n\n🎥 Watch how Junie handles full-stack Kotlin tasks\n\n\n\nJetBrains AI Assistant: Smarter help every day\nIf Junie is your project collaborator, AI Assistant is your day-to-day companion. It adds context-aware intelligence throughout the development workflow: writing code, generating tests, explaining errors, and even managing version control tasks.\nKotlin support is a key part of AI Assistant’s design. Completion suggestions are powered by JetBrains’ own LLM, Mellum, which is tuned specifically for development tasks, with refinements for Kotlin. You can also choose between local and cloud models, depending on your preferences.\nFor Kotlin developers, it’s especially useful when:\nConverting Java code to Kotlin.\nModifying Gradle build files.\nFilling in missing functions or classes.\nWriting multiplatform boilerplate.\n\n\n🎥 See AI Assistant in action for Kotlin development\n\n\n\nKotlin and AI: A good match\nAI tools tend to perform better with languages that offer structure and clarity. Kotlin is a prime example of such a language. It’s concise, expressive, and statically typed.\nHere’s why Kotlin is perfectly suited to work with JetBrains AI:\nMore reliable results: Kotlin code quality is one of the key metrics we track, and AI-generated Kotlin consistently performs well in tests.\nCleaner input: Kotlin’s compact syntax keeps prompts short and easy for models to process.\nBetter context: Static typing and clear structure help AI make more accurate suggestions.\nActively supported: Kotlin is part of JetBrains’ own AI test suite, so the tools are continuously validated against real Kotlin projects.\nThe result? AI that’s not just compatible with Kotlin but also produces reliable and efficient results. \nTry it out\nJunie and AI Assistant are available in IntelliJ IDEA Ultimate and other JetBrains IDEs.\nJust enable the JetBrains AI plugin, open the tool windows, and start exploring. You can work with either local or cloud-based models.\nJetBrains AI Assistant is supported in Android Studio, but Junie is not available there yet. We’re working on expanding support in the future.\nTo use Junie and AI Assistant, you’ll need a JetBrains IDE with an active subscription.\nJetBrains AI is now available in Free, Pro, and Ultimate tiers, with different monthly credit quotas. All new users start with a 30-day AI Pro trial.\nHere’s what you get with an active subscription:\nUnlimited local code completions\nAccess to local models\nMonthly cloud credits for AI Assistant and Junie (amount depends on tier)\n\n\n\n\n\nFor more details, see the JetBrains AI page.\nWhat else to read and watch\nJetBrains IDEs Go AI: Coding Agent, Smarter Assistance, Free Tier\nAI-Friendly Programming Languages: the Kotlin Story\nOpenAI vs. DeepSeek: Which AI Understands Kotlin Better?\nBuilding MCP with Kotlin: Claude Desktop Controls My Smart Home Lights!",
        "dc:creator": "Alyona Chernyaeva",
        "content": "JetBrains AI is now a lot more useful for Kotlin developers. With the public release of Junie and a major update to AI Assistant, two powerful AI tools are now deeply integrated with JetBrains IDEs – and ready to help you move faster with less overhead. Whether you&#8217;re starting a new feature or cleaning up [&#8230;]",
        "contentSnippet": "JetBrains AI is now a lot more useful for Kotlin developers. With the public release of Junie and a major update to AI Assistant, two powerful AI tools are now deeply integrated with JetBrains IDEs – and ready to help you move faster with less overhead. Whether you’re starting a new feature or cleaning up […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=562126",
        "isoDate": "2025-04-17T12:32:26.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "TeamCity Pipelines Pulse: Enhanced Notification Options",
        "link": "https://blog.jetbrains.com/teamcity/2025/04/teamcity-pipelines-pulse-enhanced-notification-options/",
        "pubDate": "Thu, 17 Apr 2025 10:42:45 +0000",
        "content:encodedSnippet": "In this TeamCity Pipelines release, we’re focusing on improving the user experience with more flexible notification options.\nYou can now choose which specific email notifications you want to receive from the system. You can select between default or custom notification options or unsubscribe from everything.\n\n\n\n\nThe following options are available for custom notifications:\nOnly get notified when a pipeline with your changes runs.\nGet notified when a pipeline fails, is successful, has started, or has failed to start.\nTo change your notification options, click the Subscribe button in the pipeline that you’d like to stay informed about. Then choose the necessary notification options.\n\n\n\n\nYou can also unsubscribe from any notifications for a specific pipeline and stay up to date on only what’s important to you.\nBug fixes and improvements\nIn addition to the new features, we’ve also fixed some bugs and made a few other improvements in TeamCity Pipelines. \nError messages in TeamCity Pipelines are now written in clear, natural language, making them easier to understand.\nThe appearance of the agent overview page has been improved with proper spacing between paragraphs.\nThat’s it for now! As always, feel free to reach out to us by leaving a comment to this post. We’ll be happy to hear from you.",
        "dc:creator": "Olga Bedrina",
        "content": "In this TeamCity Pipelines release, we’re focusing on improving the user experience with more flexible notification options. You can now choose which specific email notifications you want to receive from the system. You can select between default or custom notification options or unsubscribe from everything. The following options are available for custom notifications: To change [&#8230;]",
        "contentSnippet": "In this TeamCity Pipelines release, we’re focusing on improving the user experience with more flexible notification options. You can now choose which specific email notifications you want to receive from the system. You can select between default or custom notification options or unsubscribe from everything. The following options are available for custom notifications: To change […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=562063",
        "categories": [
          "news",
          "releases",
          "release",
          "teamcity-pipelines",
          "teamcity-pipelines-pulse"
        ],
        "isoDate": "2025-04-17T10:42:45.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Big News! JetBrains Qodana’s Code Quality Plugin Is Now Available for Visual Studio",
        "link": "https://blog.jetbrains.com/qodana/2025/04/visual-studio-plugin/",
        "pubDate": "Wed, 16 Apr 2025 15:24:15 +0000",
        "content:encodedSnippet": "It’s no secret that Qodana is a team tool that JetBrains designed to integrate seamlessly with its suite of IDEs, but every team and tech stack is different. One common question remains: “What about other members of our team who still use VS Code or Visual Studio?” To help with this problem, we decided to provide a more integrated offering that can truly bolster code quality for the average development team.\nWe already have a VS Code extension, so it was time to get to work on a Visual Studio version. The team has now completed this task, and you can now download Qodana’s code quality plugin for Visual Studio via the Resharper Installer. \nReSharper Installer\n\n\n\n\nPlug in and play – Why Try The Visual Studio Plugin for Quality?\n✓ Identify code issues, bugs, and vulnerabilities.\n✓ Run code analysis in your CI pipeline.\n✓ See issues in Visual Studio while you work.\n\n\n\n\nJoin the Qodana Community\nReach out to qodana-support@jetbrains.com or follow us on X and LinkedIn for code quality updates. You can also view the documentation for more information on the extension, what Qodana is capable of, and how static code analysis works.\nReSharper Installer",
        "dc:creator": "Kerry Beetge",
        "content": "It’s no secret that Qodana is a team tool that JetBrains designed to integrate seamlessly with its suite of IDEs, but every team and tech stack is different. One common question remains: “What about other members of our team who still use VS Code or Visual Studio?” To help with this problem, we decided to [&#8230;]",
        "contentSnippet": "It’s no secret that Qodana is a team tool that JetBrains designed to integrate seamlessly with its suite of IDEs, but every team and tech stack is different. One common question remains: “What about other members of our team who still use VS Code or Visual Studio?” To help with this problem, we decided to […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=550905",
        "categories": [
          "plugin-highlights",
          "plugins",
          "qodana",
          "release",
          "visual-studio"
        ],
        "isoDate": "2025-04-16T15:24:15.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Merrie McGaw, Shyam Gupta",
        "title": "Toolbox Support for Explicit Assembly References in Windows Forms Out-of-Process Designer",
        "link": "https://devblogs.microsoft.com/visualstudio/toolbox-support-for-explicit-assembly-references-in-windows-forms-out-of-process-designer/",
        "pubDate": "Thu, 17 Apr 2025 14:45:27 +0000",
        "content:encodedSnippet": "Visual Studio 17.14 Preview 3 introduces a new feature that enhances the Windows Forms out-of-process designer experience for .NET Framework projects. This release brings Toolbox support for Explicit Assembly References, addressing a long-standing need in legacy application development and migration workflows.\n\nWhat Are Explicit Assembly References?\nExplicit Assembly References are stand-alone assemblies directly referenced in your project. They are not pulled in through NuGet packages, project references, or the Global Assembly Cache (GAC). These assemblies often represent legacy .NET Framework components, especially those compiled for 32-bit, which are not easily upgraded to modern .NET and may exist outside of package management.\nUntil now, the Toolbox in the Windows Forms designer only displayed controls sourced from NuGet packages or project references. This created a limitation for developers working with long-standing legacy codebases. Explicit Assembly References were invisible to the Toolbox, leading to a fragmented experience and reduced productivity, particularly during modernization efforts.\nWhy This Matters\nDevelopers relying on legacy Windows Forms controls often face challenges due to this limitation. The traditional approach of using the “Choose Items…” dialog in the Toolbox for in-process designer fails entirely for 32-bit assemblies as those assemblies cannot be loaded in 64-bit Visual Studio.\nIn response, we have extended Toolbox support to automatically fetch controls’ information from Explicit Assembly References. This allows developers to use their legacy controls within the modern out-of-process designer, removing a key blocker in migration and maintenance workflows.\nHow It Works\nWhen you launch the Windows Forms out-of-process designer for a .NET Framework project, the designer now automatically scans all references in the solution. It identifies Explicit Assembly References without loading them into Visual Studio itself. Leveraging the Roslyn APIs, the designer analyzes metadata to extract Toolbox item information from these assemblies.\nThis approach ensures that eligible controls appear in the Toolbox—ready for drag-and-drop just like those from NuGet or project references.\nImportant Caveats\nThe out-of-process designer uses a new extensibility model, which clearly separates design time and runtime assemblies. This separation is crucial for enabling advanced design time scenarios like custom CodeDomSerializer usage, specialized UITypeEditor implementations, and custom TypeConverter behaviors.\nExplicit Assembly References do not support this separation. As a result, all such assemblies are treated as runtime only, which limits their design time functionality. While basic Toolbox and control instantiation scenarios will work, advanced behaviors may not function as expected.\nFor the best experience, especially when working with custom design-time features, we strongly recommend using NuGet packages that follow the specified layout for runtime and design-time separation.\nConfiguring the Feature\nThis feature is enabled by default starting with Visual Studio 17.14 Preview 3 for .NET Framework projects. If needed, you can toggle this functionality via Visual Studio → Tools → Options → Preview Features\n\nWe’re currently rolling out this feature exclusively for .NET Framework projects, but we plan to extend this support to .NET projects in future Visual Studio releases.\nLooking Ahead\nToolbox support for Explicit Assembly References simplifies working with legacy controls and helps pave the way for smoother migration to .NET. Once this feature expands to .NET projects, it will serve as a powerful bridge during modernization efforts.\nWhile we are happy to offer this capability, we continue to emphasize that for the richest and most predictable design-time experience, the recommended path remains through well-structured NuGet packages aligned with the new extensibility model.\nReady to try it out? Download Visual Studio 17.14 Preview 3 and open your Windows Forms .NET Framework project in the out-of-process designer. Your legacy controls will now appear in the Toolbox, ready for use!\nCheck out the new Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nAppreciation for your feedback\nYour feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post Toolbox Support for Explicit Assembly References in Windows Forms Out-of-Process Designer appeared first on Visual Studio Blog.",
        "dc:creator": "Merrie McGaw, Shyam Gupta",
        "comments": "https://devblogs.microsoft.com/visualstudio/toolbox-support-for-explicit-assembly-references-in-windows-forms-out-of-process-designer/#comments",
        "content": "<p>Visual Studio 17.14 Preview 3 introduces a new feature that enhances the Windows Forms out-of-process designer experience for .NET Framework projects. This release brings Toolbox support for Explicit Assembly References, addressing a long-standing need in legacy application development and migration workflows. What Are Explicit Assembly References? Explicit Assembly References are stand-alone assemblies directly referenced in [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/toolbox-support-for-explicit-assembly-references-in-windows-forms-out-of-process-designer/\">Toolbox Support for Explicit Assembly References in Windows Forms Out-of-Process Designer</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 17.14 Preview 3 introduces a new feature that enhances the Windows Forms out-of-process designer experience for .NET Framework projects. This release brings Toolbox support for Explicit Assembly References, addressing a long-standing need in legacy application development and migration workflows. What Are Explicit Assembly References? Explicit Assembly References are stand-alone assemblies directly referenced in […]\nThe post Toolbox Support for Explicit Assembly References in Windows Forms Out-of-Process Designer appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253042",
        "categories": [
          "Visual Studio",
          "Windows Forms",
          "Assembly References",
          "designer",
          "out-of-process",
          "Toolbox",
          "WinForms"
        ],
        "isoDate": "2025-04-17T14:45:27.000Z"
      },
      {
        "creator": "Katie Savage",
        "title": "GitHub Copilot Highlights in Visual Studio 17.14 Preview 3 (Available Now)",
        "link": "https://devblogs.microsoft.com/visualstudio/github-copilot-highlights-in-visual-studio-17-14-preview-3-available-now/",
        "pubDate": "Wed, 16 Apr 2025 18:24:10 +0000",
        "content:encodedSnippet": "Visual Studio 17.14 Preview 3 is now available!\nDownload Visual Studio Preview\n\nThe GitHub Copilot experience in Visual Studio is continuously updated to provide the latest advancements in AI-assisted development. The following features and improvements have been recently released in Visual Studio version 17.14 Preview 3. (Remember, preview versions of Visual Studio can be run side by side with the main releases)\n\nA guided Walkthrough for getting started\nIf you’re new to GitHub Copilot in Visual Studio and are looking for a quick, guided way to get started, this feature is for you. Head to the GitHub Copilot badge dropdown and select GitHub Copilot Walkthrough. This will launch the walkthrough as a new tab in your workspace.\nThis five-step walkthrough will show you how to get Copilot for free, introduce you to AI-powered code completions, Copilot Chat, show you how to provide Copilot with specific context about your solution, and introduce you to the multi-file editing power of Copilot Edits. Once you complete these steps, you should be ready to start using and experimenting with Copilot.\ndocument.createElement('video');\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/04/WalkthroughP3.mp4\n\nImproved model access and Code Mapping\nIt’s also now easier than ever to access the latest models like Claude 3.7 from within Visual Studio. Instead of needing to adjust your settings, you can now enable any of the available models from github.com directly through Visual Studio. When you select your model within Copilot Chat, you will be prompted to enable your chosen model.\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/04/ModelApprovalP3.mp4\n\nHow and where Copilot inserts its code suggestions into your code in the right place has also gotten an upgrade in this release with improvements to what we call “Code Mapping”.\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/04/CodeMappingP3.mp4\n\nCopilot can suggest the next edit and fix pasted code automatically\nWe also have some exciting updates coming to the Code Completion experience that will allow Copilot to better understand your intention as you’re writing code and enhance its ability to assist you with editing your code. The feature is called Next Edit Suggestions, which helps developers by providing contextual suggestions for code edits based on previous changes.\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/04/NESP3.mp4\n\nAnother feature to watch out for is adaptive paste which automatically adjusts code you paste into Visual Studio to fit the context of your existing code, minimizing the need for manual modifications. This feature also supports scenarios such as minor error fixes, code styling, formatting, human and code language translation, and fill-in-the-blank or continue-the-pattern tasks.\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/04/AdaptivePasteP3.mp4\n\nLearn more about these features in the preview 3 release notes: Visual Studio 2022 Preview Release Notes | Microsoft Learn\nTry the latest Preview\nIf you’d like to see any of these features in action and stay up to date with the latest Copilot updates, try out the preview version of Visual Studio.\nCheck out the new Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nAppreciation for your feedback\nYour feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post GitHub Copilot Highlights in Visual Studio 17.14 Preview 3 (Available Now) appeared first on Visual Studio Blog.",
        "enclosure": {
          "url": "https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/04/WalkthroughP3.mp4",
          "length": "9841988",
          "type": "video/mp4"
        },
        "dc:creator": "Katie Savage",
        "comments": "https://devblogs.microsoft.com/visualstudio/github-copilot-highlights-in-visual-studio-17-14-preview-3-available-now/#comments",
        "content": "<p>Visual Studio 17.14 Preview 3 is now available! The GitHub Copilot experience in Visual Studio is continuously updated to provide the latest advancements in AI-assisted development. The following features and improvements have been recently released in Visual Studio version 17.14 Preview 3. (Remember, preview versions of Visual Studio can be run side by side with [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/github-copilot-highlights-in-visual-studio-17-14-preview-3-available-now/\">GitHub Copilot Highlights in Visual Studio 17.14 Preview 3 (Available Now)</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 17.14 Preview 3 is now available! The GitHub Copilot experience in Visual Studio is continuously updated to provide the latest advancements in AI-assisted development. The following features and improvements have been recently released in Visual Studio version 17.14 Preview 3. (Remember, preview versions of Visual Studio can be run side by side with […]\nThe post GitHub Copilot Highlights in Visual Studio 17.14 Preview 3 (Available Now) appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252998",
        "categories": [
          "Copilot",
          "Visual Studio"
        ],
        "isoDate": "2025-04-16T18:24:10.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "OpenAI 코딩 멀티 에이전트 Codex 오픈소스 도구 사용법",
        "link": "http://daddynkidsmakers.blogspot.com/2025/04/openai-codex.html",
        "pubDate": "2025-04-17T07:04:00.000Z",
        "author": "Daddy Maker",
        "content": "<div style=\"text-align: left;\">이 글은&nbsp;OpenAI가 개발한 코딩 멀티 에이전트 Codex 사용법을 간략히 소개한다.&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">현재 시점에서 14시간 전에 OpenAI o3, o4, codex 가 공개되었다. 모두 멀티 AI 에이전트 기능을 충실히 구현한 영상을 데모가 업로드되었고, 특히, 자동화 코딩을 지원하는 codex(코덱스) 가 로컬 컴퓨터에서 실행 가능한 형태로 공개된 점이 인상적이었다.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><iframe allowfullscreen=\"\" class=\"BLOG_video_class\" height=\"266\" src=\"https://www.youtube.com/embed/sq8GBPUb3rk\" width=\"320\" youtube-src-id=\"sq8GBPUb3rk\"></iframe></div><div class=\"separator\" style=\"clear: both; text-align: center;\">OpenAI o3, o4, codex 공개 영상</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">코덱스 코드 및 도구는 Github에 공개되었다.</div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://github.com/openai/codex\">codex: Lightweight coding agent that runs in your terminal</a></li></ul></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><b>코덱스 설치 및 환경설정</b></div><div style=\"text-align: left;\">터미널에서 다음을 실행해 설치 및 환경 설정을 한다.</div><div style=\"text-align: left;\">git clone https://github.com/openai/codex.git</div><div style=\"text-align: left;\">cd codex</div><div style=\"text-align: left;\">npm install -g @openai/codex</div><div style=\"text-align: center;\"><div style=\"text-align: left;\"><img alt=\"\" data-original-height=\"270\" data-original-width=\"1084\" height=\"133\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEhe8O2QU6nkqpzFKwOzt8VyJTszssUlQuN1aRNvqgbzGy9iQF1T7Y19JLCbvvElUuSO2FbHRqF-2-GZ3-VuK0rymBhXul_7K51RcYsZHhubP6DbOyDemUgQeb_VKPZff3cYWL1TYtjjxsNlAqRi-SNPT8EVi5Wzut4jLvPYEYYIANR3LIgvDym8aVvwn608=w533-h133\" style=\"color: #0000ee; text-align: center;\" width=\"533\" /></div></div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">설치 시 npm error code SELF_SIGNED_CERT_IN_CHAIN 에러 발생하면 다음 명령 실행 후 패키지 재설치한다.</div><div style=\"text-align: left;\"><div>npm config set strict-ssl false -g</div><div><br /></div><div>오픈AI Key를 설정한다.</div></div><div style=\"text-align: left;\">export OPENAI_API_KEY=\"your-api-key-here\"</div><div style=\"text-align: left;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><br /></div></div><div style=\"text-align: left;\"><b>실행</b></div><div style=\"text-align: left;\">터미널에서 코덱스를 실행한다.&nbsp;</div><div style=\"text-align: left;\">codex&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">프롬프트를 직접 입력해도 된다.&nbsp;&nbsp;</div><div style=\"text-align: left;\">codex \"explain this codebase to me\"</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">앱을 개발해보자.&nbsp;</div><div style=\"text-align: left;\">codex --approval-mode full-auto \"create the fanciest todo-list app\"</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">그럼 todo list app을 codex가 개발하는 것을 확인할 수 있다. 이외에 다음과 같은 프롬프트를 입력해보자.&nbsp;</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\">\"create the ascii rendering web viewer using webcam\"</div><div style=\"text-align: left;\">\"create 3D tetris using three.js\"</div><div style=\"text-align: left;\">...</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><b>마무리</b></div><div style=\"text-align: left;\">점차 AI 에이전트가 우리가 사용하는 개인 기기(노트북, 스마트폰 등)에 침투하고 있다. MCP는 그 시작인 것이고, Codex는 AI OS 위치로 맵핑하고자 한다. 올해 더 큰 경쟁과 발전이 있으리라 생각된다.</div><div style=\"text-align: left;\"><br /></div><div style=\"text-align: left;\"><b>레퍼런스</b></div><div style=\"text-align: left;\"><ul style=\"text-align: left;\"><li><a href=\"https://github.com/openai/codex\">Lightweight coding agent that runs in your terminal</a></li><li><a href=\"https://medium.com/@joe.njenga/i-tested-codex-cli-openai-tool-like-claude-code-just-average-to-good-b5483edcc6d1\">CLI OpenAI Tool Like Claude Code</a></li><li><a href=\"https://cobusgreyling.medium.com/openai-codex-cli-7b73b60bc006\">OpenAI Codex CLI. Is a Lightweight Coding AI Agent</a></li></ul></div>",
        "contentSnippet": "이 글은 OpenAI가 개발한 코딩 멀티 에이전트 Codex 사용법을 간략히 소개한다. \n\n\n현재 시점에서 14시간 전에 OpenAI o3, o4, codex 가 공개되었다. 모두 멀티 AI 에이전트 기능을 충실히 구현한 영상을 데모가 업로드되었고, 특히, 자동화 코딩을 지원하는 codex(코덱스) 가 로컬 컴퓨터에서 실행 가능한 형태로 공개된 점이 인상적이었다. \n\nOpenAI o3, o4, codex 공개 영상\n\n\n코덱스 코드 및 도구는 Github에 공개되었다.\n\ncodex: Lightweight coding agent that runs in your terminal\n\n\n\n코덱스 설치 및 환경설정\n터미널에서 다음을 실행해 설치 및 환경 설정을 한다.\ngit clone https://github.com/openai/codex.git\ncd codex\nnpm install -g @openai/codex\n\n\n\n\n설치 시 npm error code SELF_SIGNED_CERT_IN_CHAIN 에러 발생하면 다음 명령 실행 후 패키지 재설치한다.\n\nnpm config set strict-ssl false -g\n\n\n오픈AI Key를 설정한다.\n\nexport OPENAI_API_KEY=\"your-api-key-here\"\n\n\n\n실행\n터미널에서 코덱스를 실행한다. \ncodex \n\n\n프롬프트를 직접 입력해도 된다.  \ncodex \"explain this codebase to me\"\n\n\n앱을 개발해보자. \ncodex --approval-mode full-auto \"create the fanciest todo-list app\"\n\n\n그럼 todo list app을 codex가 개발하는 것을 확인할 수 있다. 이외에 다음과 같은 프롬프트를 입력해보자. \n\n\n\"create the ascii rendering web viewer using webcam\"\n\"create 3D tetris using three.js\"\n...\n\n\n마무리\n점차 AI 에이전트가 우리가 사용하는 개인 기기(노트북, 스마트폰 등)에 침투하고 있다. MCP는 그 시작인 것이고, Codex는 AI OS 위치로 맵핑하고자 한다. 올해 더 큰 경쟁과 발전이 있으리라 생각된다.\n\n\n레퍼런스\n\nLightweight coding agent that runs in your terminal\nCLI OpenAI Tool Like Claude Code\nOpenAI Codex CLI. Is a Lightweight Coding AI Agent",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-3813547155265462040",
        "isoDate": "2025-04-17T07:04:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": [
      {
        "creator": "브리핑허브",
        "title": "&quot;로제가 등장하자 3만 관중 떼창&quot;...콜드플레이 서울 공연, 레전드가 된 순간",
        "link": "http://app-developer.tistory.com/entry/%EB%A1%9C%EC%A0%9C%EA%B0%80-%EB%93%B1%EC%9E%A5%ED%95%98%EC%9E%90-3%EB%A7%8C-%EA%B4%80%EC%A4%91-%EB%96%BC%EC%B0%BD%EC%BD%9C%EB%93%9C%ED%94%8C%EB%A0%88%EC%9D%B4-%EC%84%9C%EC%9A%B8-%EA%B3%B5%EC%97%B0-%EB%A0%88%EC%A0%84%EB%93%9C%EA%B0%80-%EB%90%9C-%EC%88%9C%EA%B0%84",
        "pubDate": "Wed, 23 Apr 2025 08:48:01 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EB%A1%9C%EC%A0%9C%EA%B0%80-%EB%93%B1%EC%9E%A5%ED%95%98%EC%9E%90-3%EB%A7%8C-%EA%B4%80%EC%A4%91-%EB%96%BC%EC%B0%BD%EC%BD%9C%EB%93%9C%ED%94%8C%EB%A0%88%EC%9D%B4-%EC%84%9C%EC%9A%B8-%EA%B3%B5%EC%97%B0-%EB%A0%88%EC%A0%84%EB%93%9C%EA%B0%80-%EB%90%9C-%EC%88%9C%EA%B0%84#entry213comment",
        "content": "<h2>콜드플레이 서울 콘서트, 상상을 초월한 무대</h2>\n<p>2025년 4월 22일, 고양종합운동장 주경기장은 그야말로 전율의 도가니였다. 콜드플레이의 두 번째 내한공연 ‘뮤직 오브 더 스피어스(Music of the Spheres)’ 투어의 네 번째 무대가 열린 이날, 수만 명의 관객 앞에 놀라운 장면이 펼쳐졌다. 그 중심에는 블랙핑크의 로제가 있었다.</p>\n<p>콜드플레이의 보컬 크리스 마틴은 장난스레 피아노로 ‘아파트’ 전주를 연주하며 한국어로 “아파트, 아파트”를 외쳤다. 관객들은 처음엔 익살스러운 제스처로 여겼지만, 무대 위에 로제가 등장하자 반응은 완전히 뒤바뀌었다. 갑작스러운 등장에 수만 명이 일제히 ‘아파트’를 떼창하는 진풍경이 연출됐다.</p>\n<h2>로제와 크리스 마틴, ‘아파트’로 하나되다</h2>\n<p>로제는 무대 위를 활보하며 크리스 마틴과 함께 ‘아파트’를 열창했다. 두 사람은 감정을 실어 화음을 주고받았고, 관객은 일제히 떼창으로 응답했다. 노래가 끝난 후에도 크리스 마틴은 “너무 신난다. 한 번 더 하자”며 로제에게 제안했고, 이내 ‘아파트’는 또 한 번 경기장을 뒤흔들었다.</p>\n<p>이 특별한 협업은 단순한 게스트 무대를 넘어선 진심어린 음악적 교류였다. 로제와 콜드플레이는 모두 워너뮤직 산하 애틀랜틱 레코드 소속으로, 이전에도 로제가 콜드플레이의 ‘Viva La Vida’를 리메이크해 애플TV+ 드라마 ‘파친코’ 시즌2 엔딩곡으로 사용되기도 했다.</p>\n<h2>하루 만에 코첼라에서 서울로, 로제의 의리</h2>\n<p>더 놀라운 점은 로제가 불과 하루 전까지 미국 코첼라 페스티벌에서 블랙핑크 멤버들을 응원하는 모습이 포착되었다는 사실이다. 하루 만에 서울로 날아와 콜드플레이의 무대에 함께한 로제의 의리는 많은 팬들에게 깊은 인상을 남겼다.</p>\n<p>공연장을 찾은 이들 중에는 YG엔터테인먼트의 또 다른 대표 아티스트인 지드래곤(G-DRAGON)도 있었다. 그는 코드 쿤스트, 배우 정해인과 함께 관객석에서 공연을 관람했으며, 같은 날 태양도 공연장에 모습을 드러냈다. 크리스 마틴은 태양의 유명한 밈 “여러분, 너무 보고 싶었어요”를 피아노와 함께 재현하며 한국 팬들을 향한 애정을 표현하기도 했다.</p>\n<h2>내한공연 역사 새로 쓴 콜드플레이</h2>\n<p>이번 콜드플레이의 내한은 단순한 공연 그 이상이다. 4월 16일부터 시작해 18일, 19일, 22일, 그리고 예정된 24일과 25일까지 총 6회 공연은 단일 아티스트 기준 한국 내 공연 역사상 최대 규모로, 약 30만 명의 관객을 동원하는 대기록을 세웠다.</p>\n<p>이날 무대는 단순한 음악 공연이 아니라, 글로벌 팝스타들과 한국 아티스트의 깊은 교류가 만들어낸 감동의 순간이었다. 특히 로제와의 협업은 국경과 장르를 뛰어넘는 음악의 힘을 증명했다.</p>\n<h2>마무리</h2>\n<p>이번 콜드플레이 내한공연은 단순한 콘서트가 아닌, 하나의 문화적 사건이었다. 그 안에는 글로벌 무대에서 활약하는 한국 아티스트들의 존재감, 그리고 진심이 담긴 음악의 교류가 있었다. 로제의 깜짝 등장은 그 상징적인 순간이 되었으며, 관객들은 이 날을 두고두고 기억하게 될 것이다.</p>",
        "contentSnippet": "콜드플레이 서울 콘서트, 상상을 초월한 무대\n2025년 4월 22일, 고양종합운동장 주경기장은 그야말로 전율의 도가니였다. 콜드플레이의 두 번째 내한공연 ‘뮤직 오브 더 스피어스(Music of the Spheres)’ 투어의 네 번째 무대가 열린 이날, 수만 명의 관객 앞에 놀라운 장면이 펼쳐졌다. 그 중심에는 블랙핑크의 로제가 있었다.\n콜드플레이의 보컬 크리스 마틴은 장난스레 피아노로 ‘아파트’ 전주를 연주하며 한국어로 “아파트, 아파트”를 외쳤다. 관객들은 처음엔 익살스러운 제스처로 여겼지만, 무대 위에 로제가 등장하자 반응은 완전히 뒤바뀌었다. 갑작스러운 등장에 수만 명이 일제히 ‘아파트’를 떼창하는 진풍경이 연출됐다.\n로제와 크리스 마틴, ‘아파트’로 하나되다\n로제는 무대 위를 활보하며 크리스 마틴과 함께 ‘아파트’를 열창했다. 두 사람은 감정을 실어 화음을 주고받았고, 관객은 일제히 떼창으로 응답했다. 노래가 끝난 후에도 크리스 마틴은 “너무 신난다. 한 번 더 하자”며 로제에게 제안했고, 이내 ‘아파트’는 또 한 번 경기장을 뒤흔들었다.\n이 특별한 협업은 단순한 게스트 무대를 넘어선 진심어린 음악적 교류였다. 로제와 콜드플레이는 모두 워너뮤직 산하 애틀랜틱 레코드 소속으로, 이전에도 로제가 콜드플레이의 ‘Viva La Vida’를 리메이크해 애플TV+ 드라마 ‘파친코’ 시즌2 엔딩곡으로 사용되기도 했다.\n하루 만에 코첼라에서 서울로, 로제의 의리\n더 놀라운 점은 로제가 불과 하루 전까지 미국 코첼라 페스티벌에서 블랙핑크 멤버들을 응원하는 모습이 포착되었다는 사실이다. 하루 만에 서울로 날아와 콜드플레이의 무대에 함께한 로제의 의리는 많은 팬들에게 깊은 인상을 남겼다.\n공연장을 찾은 이들 중에는 YG엔터테인먼트의 또 다른 대표 아티스트인 지드래곤(G-DRAGON)도 있었다. 그는 코드 쿤스트, 배우 정해인과 함께 관객석에서 공연을 관람했으며, 같은 날 태양도 공연장에 모습을 드러냈다. 크리스 마틴은 태양의 유명한 밈 “여러분, 너무 보고 싶었어요”를 피아노와 함께 재현하며 한국 팬들을 향한 애정을 표현하기도 했다.\n내한공연 역사 새로 쓴 콜드플레이\n이번 콜드플레이의 내한은 단순한 공연 그 이상이다. 4월 16일부터 시작해 18일, 19일, 22일, 그리고 예정된 24일과 25일까지 총 6회 공연은 단일 아티스트 기준 한국 내 공연 역사상 최대 규모로, 약 30만 명의 관객을 동원하는 대기록을 세웠다.\n이날 무대는 단순한 음악 공연이 아니라, 글로벌 팝스타들과 한국 아티스트의 깊은 교류가 만들어낸 감동의 순간이었다. 특히 로제와의 협업은 국경과 장르를 뛰어넘는 음악의 힘을 증명했다.\n마무리\n이번 콜드플레이 내한공연은 단순한 콘서트가 아닌, 하나의 문화적 사건이었다. 그 안에는 글로벌 무대에서 활약하는 한국 아티스트들의 존재감, 그리고 진심이 담긴 음악의 교류가 있었다. 로제의 깜짝 등장은 그 상징적인 순간이 되었으며, 관객들은 이 날을 두고두고 기억하게 될 것이다.",
        "guid": "http://app-developer.tistory.com/213",
        "categories": [
          "고양종합운동장",
          "내한공연",
          "로제",
          "블랙핑크",
          "아파트떼창",
          "지드래곤",
          "코첼라",
          "콜드플레이",
          "크리스마틴",
          "태양"
        ],
        "isoDate": "2025-04-22T23:48:01.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "서장훈, &lsquo;나는 솔로&rsquo; 24기 영식에 돌직구&hellip;시청자 비난과 제작진의 속사정?",
        "link": "http://app-developer.tistory.com/entry/%EC%84%9C%EC%9E%A5%ED%9B%88-%E2%80%98%EB%82%98%EB%8A%94-%EC%86%94%EB%A1%9C%E2%80%99-24%EA%B8%B0-%EC%98%81%EC%8B%9D%EC%97%90-%EB%8F%8C%EC%A7%81%EA%B5%AC%E2%80%A6%EC%8B%9C%EC%B2%AD%EC%9E%90-%EB%B9%84%EB%82%9C%EA%B3%BC-%EC%A0%9C%EC%9E%91%EC%A7%84%EC%9D%98-%EC%86%8D%EC%82%AC%EC%A0%95",
        "pubDate": "Tue, 22 Apr 2025 23:11:55 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EC%84%9C%EC%9E%A5%ED%9B%88-%E2%80%98%EB%82%98%EB%8A%94-%EC%86%94%EB%A1%9C%E2%80%99-24%EA%B8%B0-%EC%98%81%EC%8B%9D%EC%97%90-%EB%8F%8C%EC%A7%81%EA%B5%AC%E2%80%A6%EC%8B%9C%EC%B2%AD%EC%9E%90-%EB%B9%84%EB%82%9C%EA%B3%BC-%EC%A0%9C%EC%9E%91%EC%A7%84%EC%9D%98-%EC%86%8D%EC%82%AC%EC%A0%95#entry212comment",
        "content": "<p data-end=\"260\" data-start=\"85\" data-ke-size=\"size16\">2025년 4월 21일 방송된 KBS JOY &lsquo;무엇이든 물어보살&rsquo;에 &lsquo;나는 솔로&rsquo; 24기에 출연했던 영식(본명 전형진)이 출연하면서 또다시 화제를 모았습니다. 방송 직후 시청자들의 비판이 거셌던 그의 출연은 이번 &lsquo;물어보살&rsquo; 방송을 통해 다시 조명되었고, 이에 대한 서장훈의 현실적인 반응이 눈길을 끌고 있습니다.</p>\n<h3 data-end=\"290\" data-start=\"262\" data-ke-size=\"size23\">&lsquo;나는 솔로&rsquo; 24기, 논란의 중심에 선 영식</h3>\n<p data-end=\"448\" data-start=\"292\" data-ke-size=\"size16\">연애 리얼리티 프로그램인 ENA/SBS PLUS &lsquo;나는 솔로&rsquo; 24기는 방영 당시부터 유독 강한 몰입과 감정 표현으로 시청자들의 찬반이 갈렸습니다. 특히 &lsquo;너드남 특집&rsquo;이라는 타이틀 하에 출연했던 영식은 특정 출연자에게 감정적으로 과몰입하는 모습을 보이며 논란의 중심에 섰습니다.</p>\n<p data-end=\"610\" data-start=\"450\" data-ke-size=\"size16\">그는 옥순이라는 여성 출연자에게 애정 표현을 집중하는 한편, 다른 여성에게는 &ldquo;넌 연습용이다&rdquo;라는 발언을 서슴지 않아 큰 비판을 받았습니다. 이에 온라인 커뮤니티와 SNS에서는 단순한 비호감 논란을 넘어 인신공격성 비난까지 쏟아졌고, 결국 본인의 일상생활까지 영향을 받았다고 밝혔습니다.</p>\n<h3 data-end=\"638\" data-start=\"612\" data-ke-size=\"size23\">&ldquo;제작진은 만세 불렀겠다&rdquo;는 서장훈의 반응</h3>\n<p data-end=\"795\" data-start=\"640\" data-ke-size=\"size16\">&lsquo;무엇이든 물어보살&rsquo; MC 서장훈은 이날 방송에서 &ldquo;제작진은 그런 장면 보면서 만세 불렀겠네&rdquo;라며 제작진의 입장에서 바라본 반응을 솔직하게 언급했습니다. 이는 시청률과 화제성을 고려하면 제작진 입장에선 드라마틱한 전개가 콘텐츠 성공의 열쇠가 되었을 수 있다는 의미로 해석됩니다.</p>\n<p data-end=\"986\" data-start=\"797\" data-ke-size=\"size16\">다만 서장훈은 단순한 놀림이나 조롱이 아닌, 진심 어린 조언도 함께 전했습니다. 그는 &ldquo;순수한 건 좋은데 눈치가 너무 없다&rdquo;며, &ldquo;상대방의 마음을 생각하지 않고 감정만 앞세우는 행동은 반드시 고쳐야 한다&rdquo;고 지적했습니다. 나이가 들수록 이런 행동은 단순히 순수하다는 평가를 넘어서 사회적 부적응으로 이어질 수 있다는 현실적인 충고였습니다.</p>\n<h3 data-end=\"1009\" data-start=\"988\" data-ke-size=\"size23\">시청자 비난, 그 선은 어디인가?</h3>\n<p data-end=\"1146\" data-start=\"1011\" data-ke-size=\"size16\">이수근은 방송 도중 &ldquo;사람들이 뭐라고 욕하냐&rdquo;고 묻자, 영식은 &ldquo;경계성 지능장애, 찐따라는 말부터 부모님 욕까지 들었다&rdquo;고 털어놨습니다. 방송 출연 이후 현실 생활에 영향을 받을 만큼의 비난을 경험했다고 밝힌 그는 심리적 부담을 호소했습니다.</p>\n<p data-end=\"1308\" data-start=\"1148\" data-ke-size=\"size16\">이에 서장훈은 &ldquo;방송이 끝났으면 그만해야지, 부모 욕까지 하는 건 절대 안 된다&rdquo;며, 시청자들의 과도한 비난에 자제를 요청했습니다. 연예인이나 일반인 출연자 모두 방송 뒤에도 인간으로서의 존엄이 지켜져야 하며, 인터넷 공간의 악성 댓글은 누군가에게는 큰 상처가 된다는 점을 강조했습니다.</p>\n<h3 data-end=\"1328\" data-start=\"1310\" data-ke-size=\"size23\">부모님의 반응과 영식의 자성</h3>\n<p data-end=\"1462\" data-start=\"1330\" data-ke-size=\"size16\">영식은 &ldquo;처음엔 어머니가 제가 연기를 한 줄 아셨다. 아들 연기 보더니 배우해도 되겠다고 하셨다&rdquo;며 웃픈 에피소드를 전했습니다. 하지만 감정적으로 오열하는 장면을 보고는 &ldquo;이건 연기가 아니라는 걸 아시고 많이 속상해하셨다&rdquo;고 밝혔습니다.</p>\n<p data-end=\"1588\" data-start=\"1464\" data-ke-size=\"size16\">이러한 경험은 영식 본인에게도 큰 자극이 되었고, 방송 이후 본인을 돌아보는 계기가 되었을 것으로 보입니다. 그 역시 방송을 통해 &ldquo;앞으로는 상대의 입장을 더 생각하는 사람이 되고 싶다&rdquo;고 말하며 변화의 의지를 보였습니다.</p>\n<h3 data-end=\"1616\" data-start=\"1590\" data-ke-size=\"size23\">&lsquo;나는 솔로&rsquo; 24기, 리얼리티의 두 얼굴</h3>\n<p data-end=\"1781\" data-start=\"1618\" data-ke-size=\"size16\">&lsquo;나는 솔로&rsquo; 24기는 단순한 연애 예능이 아닌, 사람들의 다양한 성격과 감정의 복합적인 면을 보여주는 리얼리티 쇼로서, 제작진 입장에서는 성공적이었다고 볼 수 있습니다. 하지만 시청자 입장에서 &lsquo;리얼리티&rsquo;라는 이름 아래 무분별한 몰입과 비난이 허용되는 것은 아닌지에 대한 고민도 필요합니다.</p>\n<p data-end=\"1890\" data-start=\"1783\" data-ke-size=\"size16\">방송은 한 사람의 일부분일 뿐이며, 모든 출연자는 편집이라는 과정을 거친 화면을 통해 보여집니다. 그 이면에는 인간적인 고뇌와 실수가 존재하며, 이를 지나치게 소비하거나 왜곡해서는 안 됩니다.</p>\n<h3 data-end=\"1901\" data-start=\"1892\" data-ke-size=\"size23\">결론</h3>\n<p data-end=\"2067\" data-start=\"1903\" data-ke-size=\"size16\">&lsquo;나는 솔로&rsquo;와 같은 리얼리티 프로그램은 매 회 큰 관심을 끌며 시청자들의 몰입을 유도하지만, 그 이면의 현실도 함께 바라볼 필요가 있습니다. 이번 영식의 사례처럼 한 출연자의 방송 이후 삶까지 영향을 받는 일은 더 이상 반복되지 않도록, 시청자와 제작진 모두에게 균형 잡힌 시각이 요구됩니다.</p>",
        "contentSnippet": "2025년 4월 21일 방송된 KBS JOY ‘무엇이든 물어보살’에 ‘나는 솔로’ 24기에 출연했던 영식(본명 전형진)이 출연하면서 또다시 화제를 모았습니다. 방송 직후 시청자들의 비판이 거셌던 그의 출연은 이번 ‘물어보살’ 방송을 통해 다시 조명되었고, 이에 대한 서장훈의 현실적인 반응이 눈길을 끌고 있습니다.\n‘나는 솔로’ 24기, 논란의 중심에 선 영식\n연애 리얼리티 프로그램인 ENA/SBS PLUS ‘나는 솔로’ 24기는 방영 당시부터 유독 강한 몰입과 감정 표현으로 시청자들의 찬반이 갈렸습니다. 특히 ‘너드남 특집’이라는 타이틀 하에 출연했던 영식은 특정 출연자에게 감정적으로 과몰입하는 모습을 보이며 논란의 중심에 섰습니다.\n그는 옥순이라는 여성 출연자에게 애정 표현을 집중하는 한편, 다른 여성에게는 “넌 연습용이다”라는 발언을 서슴지 않아 큰 비판을 받았습니다. 이에 온라인 커뮤니티와 SNS에서는 단순한 비호감 논란을 넘어 인신공격성 비난까지 쏟아졌고, 결국 본인의 일상생활까지 영향을 받았다고 밝혔습니다.\n“제작진은 만세 불렀겠다”는 서장훈의 반응\n‘무엇이든 물어보살’ MC 서장훈은 이날 방송에서 “제작진은 그런 장면 보면서 만세 불렀겠네”라며 제작진의 입장에서 바라본 반응을 솔직하게 언급했습니다. 이는 시청률과 화제성을 고려하면 제작진 입장에선 드라마틱한 전개가 콘텐츠 성공의 열쇠가 되었을 수 있다는 의미로 해석됩니다.\n다만 서장훈은 단순한 놀림이나 조롱이 아닌, 진심 어린 조언도 함께 전했습니다. 그는 “순수한 건 좋은데 눈치가 너무 없다”며, “상대방의 마음을 생각하지 않고 감정만 앞세우는 행동은 반드시 고쳐야 한다”고 지적했습니다. 나이가 들수록 이런 행동은 단순히 순수하다는 평가를 넘어서 사회적 부적응으로 이어질 수 있다는 현실적인 충고였습니다.\n시청자 비난, 그 선은 어디인가?\n이수근은 방송 도중 “사람들이 뭐라고 욕하냐”고 묻자, 영식은 “경계성 지능장애, 찐따라는 말부터 부모님 욕까지 들었다”고 털어놨습니다. 방송 출연 이후 현실 생활에 영향을 받을 만큼의 비난을 경험했다고 밝힌 그는 심리적 부담을 호소했습니다.\n이에 서장훈은 “방송이 끝났으면 그만해야지, 부모 욕까지 하는 건 절대 안 된다”며, 시청자들의 과도한 비난에 자제를 요청했습니다. 연예인이나 일반인 출연자 모두 방송 뒤에도 인간으로서의 존엄이 지켜져야 하며, 인터넷 공간의 악성 댓글은 누군가에게는 큰 상처가 된다는 점을 강조했습니다.\n부모님의 반응과 영식의 자성\n영식은 “처음엔 어머니가 제가 연기를 한 줄 아셨다. 아들 연기 보더니 배우해도 되겠다고 하셨다”며 웃픈 에피소드를 전했습니다. 하지만 감정적으로 오열하는 장면을 보고는 “이건 연기가 아니라는 걸 아시고 많이 속상해하셨다”고 밝혔습니다.\n이러한 경험은 영식 본인에게도 큰 자극이 되었고, 방송 이후 본인을 돌아보는 계기가 되었을 것으로 보입니다. 그 역시 방송을 통해 “앞으로는 상대의 입장을 더 생각하는 사람이 되고 싶다”고 말하며 변화의 의지를 보였습니다.\n‘나는 솔로’ 24기, 리얼리티의 두 얼굴\n‘나는 솔로’ 24기는 단순한 연애 예능이 아닌, 사람들의 다양한 성격과 감정의 복합적인 면을 보여주는 리얼리티 쇼로서, 제작진 입장에서는 성공적이었다고 볼 수 있습니다. 하지만 시청자 입장에서 ‘리얼리티’라는 이름 아래 무분별한 몰입과 비난이 허용되는 것은 아닌지에 대한 고민도 필요합니다.\n방송은 한 사람의 일부분일 뿐이며, 모든 출연자는 편집이라는 과정을 거친 화면을 통해 보여집니다. 그 이면에는 인간적인 고뇌와 실수가 존재하며, 이를 지나치게 소비하거나 왜곡해서는 안 됩니다.\n결론\n‘나는 솔로’와 같은 리얼리티 프로그램은 매 회 큰 관심을 끌며 시청자들의 몰입을 유도하지만, 그 이면의 현실도 함께 바라볼 필요가 있습니다. 이번 영식의 사례처럼 한 출연자의 방송 이후 삶까지 영향을 받는 일은 더 이상 반복되지 않도록, 시청자와 제작진 모두에게 균형 잡힌 시각이 요구됩니다.",
        "guid": "http://app-developer.tistory.com/212",
        "categories": [
          "kbsjoy",
          "나는솔로",
          "리얼리티프로그램",
          "무엇이든물어보살",
          "방송논란",
          "서장훈",
          "서장훈조언",
          "시청자비난",
          "연애예능",
          "영식"
        ],
        "isoDate": "2025-04-22T14:11:55.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "&ldquo;에일리 결혼했어요&rdquo;&hellip;심장 터질 듯한 입장 순간, 모두가 울컥한 이유",
        "link": "http://app-developer.tistory.com/entry/%E2%80%9C%EC%97%90%EC%9D%BC%EB%A6%AC-%EA%B2%B0%ED%98%BC%ED%96%88%EC%96%B4%EC%9A%94%E2%80%9D%E2%80%A6%EC%8B%AC%EC%9E%A5-%ED%84%B0%EC%A7%88-%EB%93%AF%ED%95%9C-%EC%9E%85%EC%9E%A5-%EC%88%9C%EA%B0%84-%EB%AA%A8%EB%91%90%EA%B0%80-%EC%9A%B8%EC%BB%A5%ED%95%9C-%EC%9D%B4%EC%9C%A0",
        "pubDate": "Tue, 22 Apr 2025 22:21:54 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%E2%80%9C%EC%97%90%EC%9D%BC%EB%A6%AC-%EA%B2%B0%ED%98%BC%ED%96%88%EC%96%B4%EC%9A%94%E2%80%9D%E2%80%A6%EC%8B%AC%EC%9E%A5-%ED%84%B0%EC%A7%88-%EB%93%AF%ED%95%9C-%EC%9E%85%EC%9E%A5-%EC%88%9C%EA%B0%84-%EB%AA%A8%EB%91%90%EA%B0%80-%EC%9A%B8%EC%BB%A5%ED%95%9C-%EC%9D%B4%EC%9C%A0#entry211comment",
        "content": "<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-9261610702981122\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<p data-end=\"201\" data-start=\"42\" data-ke-size=\"size16\">가수 에일리가 드디어 웨딩마치를 울렸습니다. 팬들에게 '보여줄게'로 다짐했던 그녀는 이제 &lsquo;평생 함께할 사람&rsquo;을 보여주며 인생 2막을 열었습니다. 배우 출신 사업가 최시훈과 법적 부부가 된 지 약 8개월, 그 사랑의 결실을 축복하는 결혼식이 지난 4월 20일 서울 모처에서 열렸습니다.</p>\n<h3 data-end=\"237\" data-start=\"203\" data-ke-size=\"size23\">&lsquo;Heaven&rsquo;의 주인공, 현실 속 천국에 입성하다</h3>\n<p data-end=\"367\" data-start=\"239\" data-ke-size=\"size16\">에일리는 2012년 &lsquo;Heaven&rsquo;으로 데뷔한 이후 &lsquo;보여줄게&rsquo;, &lsquo;첫눈처럼 너에게 가겠다&rsquo; 등 수많은 명곡을 통해 폭발적인 가창력과 감성으로 대중을 사로잡아왔습니다. 그런 그녀가 이번엔 사랑이라는 또 다른 감동을 안겨주었습니다.</p>\n<p data-end=\"503\" data-start=\"369\" data-ke-size=\"size16\">결혼식 이후 그녀는 SNS를 통해 &ldquo;여러분, (에)일리 결혼했어요&rdquo;라는 글과 함께 결혼식 영상을 공개했습니다. 영상 속 그녀는 수많은 하객들의 축복 속에 환한 미소로 신부 입장을 하고 있었고, 이를 지켜보는 모두가 울컥할 수밖에 없었습니다.</p>\n<p data-end=\"612\" data-start=\"505\" data-ke-size=\"size16\">그녀는 &ldquo;수많은 하객 분들의 축하를 받으며 웨딩마치를 울렸어요. 정말 감사하고 행복한 날이었어요&rdquo;라고 전하며 &ldquo;앞으로 서로 의지하고 존중하며 사랑하는 예쁜 부부가 되겠다&rdquo;는 다짐을 남겼습니다.</p>\n<h3 data-end=\"651\" data-start=\"614\" data-ke-size=\"size23\">&ldquo;신부 입장 순간, 심장 터지는 줄&rdquo;&hellip;최시훈의 진심 고백</h3>\n<p data-end=\"781\" data-start=\"653\" data-ke-size=\"size16\">최시훈 역시 자신의 SNS를 통해 결혼식을 회상했습니다. &ldquo;정말 꿈 같은 하루였다. 신부 입장을 바라보는데 심장이 터지는 줄 알았다. 눈물이 날 것 같았다&rdquo;고 말하며, 그의 진심 어린 고백은 보는 이들의 마음을 뭉클하게 했습니다.</p>\n<p data-end=\"884\" data-start=\"783\" data-ke-size=\"size16\">그는 &ldquo;하루가 어떻게 지나갔는지도 모르겠다. 날씨도 환상적이었고, 와주신 모든 분들께 진심으로 감사드린다. 평생 잊지 않겠다&rdquo;라며 결혼식을 함께한 모든 이들에게 고마움을 전했습니다.</p>\n<p data-end=\"973\" data-start=\"886\" data-ke-size=\"size16\">무엇보다 &ldquo;세상에서 가장 사랑하는 나의 아내 이예진. 우리의 러브스토리는 앞으로도 계속될 것이다&rdquo;라는 말에서, 두 사람의 애정이 얼마나 깊은지 느껴졌습니다.</p>\n<h3 data-end=\"1021\" data-start=\"975\" data-ke-size=\"size23\">법적 부부에서 공식 부부로&hellip;에일리&hearts;최시훈, 그들의 러브 스토리</h3>\n<p data-end=\"1116\" data-start=\"1023\" data-ke-size=\"size16\">사실 두 사람은 지난해 8월 혼인신고를 먼저 마친 상태였습니다. 법적으로는 이미 부부였지만, 가족과 지인들의 축복 속에서 결혼식을 올리고자 이번 자리를 마련한 것이죠.</p>\n<p data-end=\"1264\" data-start=\"1118\" data-ke-size=\"size16\">결혼식은 양가 가족뿐 아니라 많은 연예계 동료, 미국&middot;한국 친구들이 참석한 가운데 따뜻한 분위기 속에서 진행됐습니다. 연예계 활동을 쉬고 현재 식음료 사업에 집중하고 있는 최시훈과 활발히 활동 중인 에일리는, 서로의 길을 존중하며 한 팀으로서 살아가고자 합니다.</p>\n<p data-end=\"1393\" data-start=\"1266\" data-ke-size=\"size16\">두 사람은 그 누구보다 &lsquo;진정성&rsquo; 있는 모습으로 사랑을 키워온 커플입니다. 서로에 대한 깊은 신뢰와 배려가 있었기에 혼인신고라는 다소 이른 결정을 내릴 수 있었고, 이제는 결혼식을 통해 그 사랑을 공식적으로 축하받게 되었습니다.</p>\n<h3 data-end=\"1426\" data-start=\"1395\" data-ke-size=\"size23\">SNS 속 &lsquo;찐 행복&rsquo;&hellip;진짜 사랑이란 이런 것</h3>\n<p data-end=\"1567\" data-start=\"1428\" data-ke-size=\"size16\">결혼식 이후 공개된 사진과 영상 속 두 사람은 내내 웃음이 끊이질 않았습니다. 평범한 러브 스토리가 아닌, 수많은 곡으로 사람들의 마음을 울렸던 가수와 현실 속 자신만의 천국을 찾은 사업가의 이야기. 그 자체만으로도 사람들의 마음을 따뜻하게 합니다.</p>\n<p data-end=\"1654\" data-start=\"1569\" data-ke-size=\"size16\">그녀의 팬들은 &ldquo;진심으로 축하해요&rdquo;, &ldquo;예쁜 사랑 오래오래 하세요&rdquo;, &ldquo;이제는 감성 여왕에서 사랑꾼 여왕이네요&rdquo; 등 응원의 메시지를 아낌없이 보냈습니다.</p>\n<h3 data-end=\"1665\" data-start=\"1656\" data-ke-size=\"size23\">결론</h3>\n<p data-end=\"1813\" data-start=\"1667\" data-ke-size=\"size16\">에일리와 최시훈의 결혼은 단순한 스타의 결혼이 아니라, &lsquo;진심&rsquo;이 만들어낸 사랑의 결정체였습니다. 먼저 혼인신고를 마친 뒤 결혼식을 올리는 새로운 방식은, 두 사람의 상황과 가치관을 고려한 결과이며 많은 이들에게 진정한 사랑이 무엇인지 다시금 생각하게 만듭니다.</p>\n<p data-end=\"1920\" data-start=\"1815\" data-ke-size=\"size16\">우리는 종종 화려한 결혼식이나 겉모습에 치우쳐 사랑을 판단하곤 합니다. 하지만 에일리와 최시훈처럼 서로를 존중하고 배려하며 사랑을 지켜나가는 모습이야말로 진짜 결혼, 진짜 사랑이 아닐까요?</p>\n<p data-end=\"1976\" data-start=\"1922\" data-ke-size=\"size16\">앞으로도 두 사람이 서로의 가장 큰 팬이 되어, 인생의 모든 순간을 함께하길 진심으로 응원합니다.</p>",
        "contentSnippet": "반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n가수 에일리가 드디어 웨딩마치를 울렸습니다. 팬들에게 '보여줄게'로 다짐했던 그녀는 이제 ‘평생 함께할 사람’을 보여주며 인생 2막을 열었습니다. 배우 출신 사업가 최시훈과 법적 부부가 된 지 약 8개월, 그 사랑의 결실을 축복하는 결혼식이 지난 4월 20일 서울 모처에서 열렸습니다.\n‘Heaven’의 주인공, 현실 속 천국에 입성하다\n에일리는 2012년 ‘Heaven’으로 데뷔한 이후 ‘보여줄게’, ‘첫눈처럼 너에게 가겠다’ 등 수많은 명곡을 통해 폭발적인 가창력과 감성으로 대중을 사로잡아왔습니다. 그런 그녀가 이번엔 사랑이라는 또 다른 감동을 안겨주었습니다.\n결혼식 이후 그녀는 SNS를 통해 “여러분, (에)일리 결혼했어요”라는 글과 함께 결혼식 영상을 공개했습니다. 영상 속 그녀는 수많은 하객들의 축복 속에 환한 미소로 신부 입장을 하고 있었고, 이를 지켜보는 모두가 울컥할 수밖에 없었습니다.\n그녀는 “수많은 하객 분들의 축하를 받으며 웨딩마치를 울렸어요. 정말 감사하고 행복한 날이었어요”라고 전하며 “앞으로 서로 의지하고 존중하며 사랑하는 예쁜 부부가 되겠다”는 다짐을 남겼습니다.\n“신부 입장 순간, 심장 터지는 줄”…최시훈의 진심 고백\n최시훈 역시 자신의 SNS를 통해 결혼식을 회상했습니다. “정말 꿈 같은 하루였다. 신부 입장을 바라보는데 심장이 터지는 줄 알았다. 눈물이 날 것 같았다”고 말하며, 그의 진심 어린 고백은 보는 이들의 마음을 뭉클하게 했습니다.\n그는 “하루가 어떻게 지나갔는지도 모르겠다. 날씨도 환상적이었고, 와주신 모든 분들께 진심으로 감사드린다. 평생 잊지 않겠다”라며 결혼식을 함께한 모든 이들에게 고마움을 전했습니다.\n무엇보다 “세상에서 가장 사랑하는 나의 아내 이예진. 우리의 러브스토리는 앞으로도 계속될 것이다”라는 말에서, 두 사람의 애정이 얼마나 깊은지 느껴졌습니다.\n법적 부부에서 공식 부부로…에일리♥최시훈, 그들의 러브 스토리\n사실 두 사람은 지난해 8월 혼인신고를 먼저 마친 상태였습니다. 법적으로는 이미 부부였지만, 가족과 지인들의 축복 속에서 결혼식을 올리고자 이번 자리를 마련한 것이죠.\n결혼식은 양가 가족뿐 아니라 많은 연예계 동료, 미국·한국 친구들이 참석한 가운데 따뜻한 분위기 속에서 진행됐습니다. 연예계 활동을 쉬고 현재 식음료 사업에 집중하고 있는 최시훈과 활발히 활동 중인 에일리는, 서로의 길을 존중하며 한 팀으로서 살아가고자 합니다.\n두 사람은 그 누구보다 ‘진정성’ 있는 모습으로 사랑을 키워온 커플입니다. 서로에 대한 깊은 신뢰와 배려가 있었기에 혼인신고라는 다소 이른 결정을 내릴 수 있었고, 이제는 결혼식을 통해 그 사랑을 공식적으로 축하받게 되었습니다.\nSNS 속 ‘찐 행복’…진짜 사랑이란 이런 것\n결혼식 이후 공개된 사진과 영상 속 두 사람은 내내 웃음이 끊이질 않았습니다. 평범한 러브 스토리가 아닌, 수많은 곡으로 사람들의 마음을 울렸던 가수와 현실 속 자신만의 천국을 찾은 사업가의 이야기. 그 자체만으로도 사람들의 마음을 따뜻하게 합니다.\n그녀의 팬들은 “진심으로 축하해요”, “예쁜 사랑 오래오래 하세요”, “이제는 감성 여왕에서 사랑꾼 여왕이네요” 등 응원의 메시지를 아낌없이 보냈습니다.\n결론\n에일리와 최시훈의 결혼은 단순한 스타의 결혼이 아니라, ‘진심’이 만들어낸 사랑의 결정체였습니다. 먼저 혼인신고를 마친 뒤 결혼식을 올리는 새로운 방식은, 두 사람의 상황과 가치관을 고려한 결과이며 많은 이들에게 진정한 사랑이 무엇인지 다시금 생각하게 만듭니다.\n우리는 종종 화려한 결혼식이나 겉모습에 치우쳐 사랑을 판단하곤 합니다. 하지만 에일리와 최시훈처럼 서로를 존중하고 배려하며 사랑을 지켜나가는 모습이야말로 진짜 결혼, 진짜 사랑이 아닐까요?\n앞으로도 두 사람이 서로의 가장 큰 팬이 되어, 인생의 모든 순간을 함께하길 진심으로 응원합니다.",
        "guid": "http://app-developer.tistory.com/211",
        "categories": [
          "셀럽 웨딩",
          "에일리",
          "에일리 결혼",
          "에일리 웨딩",
          "연예계 커플",
          "연예계 핫이슈",
          "연예인 결혼",
          "최시훈",
          "최시훈 사업가",
          "혼인신고"
        ],
        "isoDate": "2025-04-22T13:21:54.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "김종민 결혼식의 사진 논란, 인순이의 SNS 게시물 삭제 이유는?",
        "link": "http://app-developer.tistory.com/entry/%EA%B9%80%EC%A2%85%EB%AF%BC-%EA%B2%B0%ED%98%BC%EC%8B%9D%EC%9D%98-%EC%82%AC%EC%A7%84-%EB%85%BC%EB%9E%80-%EC%9D%B8%EC%88%9C%EC%9D%B4%EC%9D%98-SNS-%EA%B2%8C%EC%8B%9C%EB%AC%BC-%EC%82%AD%EC%A0%9C-%EC%9D%B4%EC%9C%A0%EB%8A%94",
        "pubDate": "Mon, 21 Apr 2025 16:03:55 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EA%B9%80%EC%A2%85%EB%AF%BC-%EA%B2%B0%ED%98%BC%EC%8B%9D%EC%9D%98-%EC%82%AC%EC%A7%84-%EB%85%BC%EB%9E%80-%EC%9D%B8%EC%88%9C%EC%9D%B4%EC%9D%98-SNS-%EA%B2%8C%EC%8B%9C%EB%AC%BC-%EC%82%AD%EC%A0%9C-%EC%9D%B4%EC%9C%A0%EB%8A%94#entry209comment",
        "content": "<h3 data-ke-size=\"size23\">김종민 결혼식의 사진 논란, 인순이의 SNS 게시물 삭제 이유는?</h3>\n<p data-ke-size=\"size16\">김종민의 결혼식이 끝난 후에, 예상치 못한 사진 논란이 발생했습니다. 가수 인순이가 자신의 SNS에 결혼식 사진을 올리면서, 비연예인 신부의 얼굴이 그대로 노출된 것이 이번 사건의 발단이었습니다. 결혼식에서의 사진 공개는 신중하게 처리되어야 하는 부분이지만, 이번 경우에는 인순이의 의도치 않은 실수로 인해 문제가 발생했습니다.</p>\n<h4 data-ke-size=\"size20\">사건의 시작과 배경</h4>\n<p data-ke-size=\"size16\">2025년 4월 20일, 서울 중구 신라호텔 영빈관에서는 김종민과 그의 연인이 결혼식을 올렸습니다. 이 결혼식은 많은 유명 인사들이 참석한 가운데 화려하게 진행되었습니다. 김종민은 이미 결혼을 앞둔 기자회견에서 결혼과 관련된 여러 계획을 밝히며 팬들에게 기대감을 주었습니다. 이번 결혼식은 그의 팬들과 대중들에게도 큰 관심을 받았습니다.</p>\n<h4 data-ke-size=\"size20\">인순이의 SNS 게시물</h4>\n<p data-ke-size=\"size16\">결혼식 당일, 가수 인순이는 자신의 SNS에 결혼식 사진을 올리며 바쁜 하루를 보냈다고 전했습니다. 그녀의 게시물에는 김종민과 신부가 함께 있는 사진이 포함되어 있었는데, 문제는 신부의 얼굴이 모자이크 처리 없이 그대로 노출된 것이었습니다. 이는 즉시 온라인 커뮤니티와 SNS 상에서 논란이 되었고, 많은 누리꾼들이 비연예인 신부의 프라이버시를 지켜야 한다고 주장했습니다.</p>\n<h4 data-ke-size=\"size20\">누리꾼들의 반응</h4>\n<p data-ke-size=\"size16\">이 사건은 특히 비연예인 신부의 사생활 보호에 대한 문제를 제기했습니다. 일부 누리꾼들은 \"김종민의 신부 얼굴 공개하지 않기로 했는데\"라며 인순이의 행동을 비판했습니다. 이와 같은 반응은 신부의 비공개 결혼식이라는 점을 강조하며, 인순이가 해당 사진을 삭제해야 한다는 의견이 많았습니다.</p>\n<h4 data-ke-size=\"size20\">인순이의 대응</h4>\n<p data-ke-size=\"size16\">논란이 커지자, 인순이는 재빨리 자신의 SNS에서 해당 사진을 삭제했습니다. 그녀는 이와 관련하여 공식적인 입장을 밝히지는 않았지만, 신부의 사생활을 보호하기 위한 조치로 보입니다. 인순이의 즉각적인 대응은 더 이상의 논란을 막기 위한 것으로 해석됩니다.</p>\n<h4 data-ke-size=\"size20\">다른 유명 인사들의 대응</h4>\n<p data-ke-size=\"size16\">같은 결혼식에 참석했던 가수 신지는 SNS에 올린 결혼식 사진에서 신부의 얼굴을 가렸습니다. 이는 신부의 사생활을 보호하기 위한 배려로 보이며, 그녀의 게시물에는 인순이의 게시물에 대한 언급도 있었습니다. \"인순이 누나 인스타에서 신부님 얼굴 보게 됐어요\"라는 댓글이 달리기도 했습니다.</p>\n<h4 data-ke-size=\"size20\">결혼식의 의미</h4>\n<p data-ke-size=\"size16\">연예인들의 결혼식은 항상 대중의 관심을 받지만, 이번 사건은 그 관심이 불필요한 논란으로 이어질 수 있음을 보여줍니다. 신부와 신랑의 프라이버시는 존중받아야 하며, 그들의 사생활을 공개하지 않겠다는 약속은 지켜져야 합니다. 이번 사건은 유명 인사들의 SNS 활용에 대한 경각심을 일깨우는 계기가 되었습니다.</p>\n<h4 data-ke-size=\"size20\">결론과 교훈</h4>\n<p data-ke-size=\"size16\">이번 사건을 통해 유명 인사들은 자신의 SNS에 올리는 게시물에 대해 더욱 신중해야 함을 배웠습니다. 비연예인의 사생활 보호는 당연히 존중받아야 하며, 그에 대한 배려가 필요합니다. 결혼식과 같은 개인적인 행사에서 촬영된 사진은 신중히 다루어져야 하며, 공개 여부에 대한 철저한 검토가 필요합니다.</p>\n<p data-ke-size=\"size16\">해당 사건은 대중과 유명 인사들 사이에서 사생활 보호의 중요성을 다시 한 번 상기시켰습니다. 인순이의 실수는 누구에게나 일어날 수 있는 일임을 보여주지만, 이를 통해 배우고 개선해 나가는 것이 중요합니다.</p>",
        "contentSnippet": "김종민 결혼식의 사진 논란, 인순이의 SNS 게시물 삭제 이유는?\n김종민의 결혼식이 끝난 후에, 예상치 못한 사진 논란이 발생했습니다. 가수 인순이가 자신의 SNS에 결혼식 사진을 올리면서, 비연예인 신부의 얼굴이 그대로 노출된 것이 이번 사건의 발단이었습니다. 결혼식에서의 사진 공개는 신중하게 처리되어야 하는 부분이지만, 이번 경우에는 인순이의 의도치 않은 실수로 인해 문제가 발생했습니다.\n사건의 시작과 배경\n2025년 4월 20일, 서울 중구 신라호텔 영빈관에서는 김종민과 그의 연인이 결혼식을 올렸습니다. 이 결혼식은 많은 유명 인사들이 참석한 가운데 화려하게 진행되었습니다. 김종민은 이미 결혼을 앞둔 기자회견에서 결혼과 관련된 여러 계획을 밝히며 팬들에게 기대감을 주었습니다. 이번 결혼식은 그의 팬들과 대중들에게도 큰 관심을 받았습니다.\n인순이의 SNS 게시물\n결혼식 당일, 가수 인순이는 자신의 SNS에 결혼식 사진을 올리며 바쁜 하루를 보냈다고 전했습니다. 그녀의 게시물에는 김종민과 신부가 함께 있는 사진이 포함되어 있었는데, 문제는 신부의 얼굴이 모자이크 처리 없이 그대로 노출된 것이었습니다. 이는 즉시 온라인 커뮤니티와 SNS 상에서 논란이 되었고, 많은 누리꾼들이 비연예인 신부의 프라이버시를 지켜야 한다고 주장했습니다.\n누리꾼들의 반응\n이 사건은 특히 비연예인 신부의 사생활 보호에 대한 문제를 제기했습니다. 일부 누리꾼들은 \"김종민의 신부 얼굴 공개하지 않기로 했는데\"라며 인순이의 행동을 비판했습니다. 이와 같은 반응은 신부의 비공개 결혼식이라는 점을 강조하며, 인순이가 해당 사진을 삭제해야 한다는 의견이 많았습니다.\n인순이의 대응\n논란이 커지자, 인순이는 재빨리 자신의 SNS에서 해당 사진을 삭제했습니다. 그녀는 이와 관련하여 공식적인 입장을 밝히지는 않았지만, 신부의 사생활을 보호하기 위한 조치로 보입니다. 인순이의 즉각적인 대응은 더 이상의 논란을 막기 위한 것으로 해석됩니다.\n다른 유명 인사들의 대응\n같은 결혼식에 참석했던 가수 신지는 SNS에 올린 결혼식 사진에서 신부의 얼굴을 가렸습니다. 이는 신부의 사생활을 보호하기 위한 배려로 보이며, 그녀의 게시물에는 인순이의 게시물에 대한 언급도 있었습니다. \"인순이 누나 인스타에서 신부님 얼굴 보게 됐어요\"라는 댓글이 달리기도 했습니다.\n결혼식의 의미\n연예인들의 결혼식은 항상 대중의 관심을 받지만, 이번 사건은 그 관심이 불필요한 논란으로 이어질 수 있음을 보여줍니다. 신부와 신랑의 프라이버시는 존중받아야 하며, 그들의 사생활을 공개하지 않겠다는 약속은 지켜져야 합니다. 이번 사건은 유명 인사들의 SNS 활용에 대한 경각심을 일깨우는 계기가 되었습니다.\n결론과 교훈\n이번 사건을 통해 유명 인사들은 자신의 SNS에 올리는 게시물에 대해 더욱 신중해야 함을 배웠습니다. 비연예인의 사생활 보호는 당연히 존중받아야 하며, 그에 대한 배려가 필요합니다. 결혼식과 같은 개인적인 행사에서 촬영된 사진은 신중히 다루어져야 하며, 공개 여부에 대한 철저한 검토가 필요합니다.\n해당 사건은 대중과 유명 인사들 사이에서 사생활 보호의 중요성을 다시 한 번 상기시켰습니다. 인순이의 실수는 누구에게나 일어날 수 있는 일임을 보여주지만, 이를 통해 배우고 개선해 나가는 것이 중요합니다.",
        "guid": "http://app-developer.tistory.com/209",
        "categories": [
          "sns 사진 논란",
          "결혼식 사진 유출",
          "김종민 결혼식",
          "비연예인 사생활",
          "신부 얼굴 공개",
          "신부 얼굴 노출",
          "연예계 사생활 보호",
          "연예인 결혼 논란",
          "인순이 sns",
          "인순이 논란"
        ],
        "isoDate": "2025-04-21T07:03:55.000Z"
      }
    ]
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": [
      {
        "creator": "강철 벼룩",
        "title": "리눅스용 사용자 지정 스크립트 확장 사용 시 주의 사항",
        "link": "http://www.dokyun.pe.kr/363",
        "pubDate": "Sun, 20 Apr 2025 21:05:27 +0900",
        "author": "강철 벼룩",
        "comments": "http://www.dokyun.pe.kr/363#entry363comment",
        "content": "<h3 data-ke-size=\"size23\">Considerations and Improvements When Using \"Custom Script for Linux\" Extensions&nbsp;</h3>\n<p data-ke-size=\"size18\">가상&nbsp;머신&nbsp;확장&nbsp;집합(VMSS)이나&nbsp;가상&nbsp;머신(VM)에서&nbsp;리눅스&nbsp;OS를&nbsp;사용할&nbsp;경우&nbsp;[설정]&nbsp;섹션의&nbsp;[확장&nbsp;프로그램&nbsp;+&nbsp;애플리케이션]&nbsp;메뉴에서&nbsp;리눅스용&nbsp;사용자&nbsp;지정&nbsp;스크립트를&nbsp;적용할&nbsp;수&nbsp;있습니다. <br />Azure를&nbsp;처음&nbsp;사용하거나&nbsp;포털&nbsp;사용법이&nbsp;아직&nbsp;익숙하지&nbsp;않은&nbsp;사람의&nbsp;경우&nbsp;이&nbsp;기능을&nbsp;사용할&nbsp;때&nbsp;자주하는&nbsp;실수가&nbsp;있습니다. <br /><br />다음&nbsp;그림은&nbsp;우분투&nbsp;서버를&nbsp;사용하는&nbsp;VM에서&nbsp;자동화&nbsp;스크립트를&nbsp;적용하는&nbsp;모습입니다. <br />사람들이&nbsp;자주하게&nbsp;되는&nbsp;실수는&nbsp;[Script&nbsp;files]&nbsp;항목에서&nbsp;[찾아보기]&nbsp;버튼을&nbsp;눌러&nbsp;실행하기&nbsp;원하는&nbsp;스크립트를&nbsp;하나&nbsp;이상&nbsp;선택한&nbsp;다음(빨간&nbsp;상자),&nbsp;아래&nbsp;[Command]&nbsp;항목의&nbsp;녹색&nbsp;상자내의&nbsp;파란&nbsp;상자&nbsp;부분을&nbsp;호출할&nbsp;스크립트(이름&nbsp;및&nbsp;확장자)로&nbsp;바꾸지&nbsp;않고&nbsp;사용자&nbsp;지정&nbsp;스크립트를&nbsp;적용하는&nbsp;경우입니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p><figure class=\"imageblock widthContent\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"950\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/c2Tzye/btsNsb8g93m/lvzMCtoSN6RRqREVOQKYMk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c2Tzye/btsNsb8g93m/lvzMCtoSN6RRqREVOQKYMk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c2Tzye/btsNsb8g93m/lvzMCtoSN6RRqREVOQKYMk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc2Tzye%2FbtsNsb8g93m%2FlvzMCtoSN6RRqREVOQKYMk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"950\" height=\"720\" data-filename=\"1.png\" data-origin-width=\"950\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\">이 기능을 몇 가지 케이스로 테스트해 봤습니다. 사용성을 조금 더 높여 실수를 줄일 수 있는 방안이라고 생각되는 2가지 개선안을 도출했고, 마이크로소프트에도 제안 메일을 보내놓은 상태입니다.</p>\n<p data-ke-size=\"size18\">혹, 받아들여지지 않더라도 가상머신에 자동화 스크립트를 적용할 때 이런 주의 사항이 있다는 점을 기억할 수 있도록 이 글을 작성해 놓은 것 자체로 의미가 있을 것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\"><span style=\"color: #ee2323;\"><b>[개선 제안 내용]</b></span></p>\n<p data-ke-size=\"size18\"><span style=\"color: #006dd7;\">1. 빨간 상자에 하나의 스크립트가 선택되면 파란 상자의 스크립트도 자동으로 변경합니다. </span><br /><span style=\"color: #006dd7;\">2.&nbsp;빨간&nbsp;상자에&nbsp;둘&nbsp;이상의&nbsp;스크립트가&nbsp;선택되면,&nbsp;최초&nbsp;호출되는&nbsp;스크립트&nbsp;선택&nbsp;창을&nbsp;표시하고&nbsp;선택한&nbsp;스크립트로&nbsp;변경합니다.</span> </p>",
        "contentSnippet": "Considerations and Improvements When Using \"Custom Script for Linux\" Extensions \n가상 머신 확장 집합(VMSS)이나 가상 머신(VM)에서 리눅스 OS를 사용할 경우 [설정] 섹션의 [확장 프로그램 + 애플리케이션] 메뉴에서 리눅스용 사용자 지정 스크립트를 적용할 수 있습니다. \nAzure를 처음 사용하거나 포털 사용법이 아직 익숙하지 않은 사람의 경우 이 기능을 사용할 때 자주하는 실수가 있습니다. \n다음 그림은 우분투 서버를 사용하는 VM에서 자동화 스크립트를 적용하는 모습입니다. \n사람들이 자주하게 되는 실수는 [Script files] 항목에서 [찾아보기] 버튼을 눌러 실행하기 원하는 스크립트를 하나 이상 선택한 다음(빨간 상자), 아래 [Command] 항목의 녹색 상자내의 파란 상자 부분을 호출할 스크립트(이름 및 확장자)로 바꾸지 않고 사용자 지정 스크립트를 적용하는 경우입니다.\n \n\n\n \n이 기능을 몇 가지 케이스로 테스트해 봤습니다. 사용성을 조금 더 높여 실수를 줄일 수 있는 방안이라고 생각되는 2가지 개선안을 도출했고, 마이크로소프트에도 제안 메일을 보내놓은 상태입니다.\n혹, 받아들여지지 않더라도 가상머신에 자동화 스크립트를 적용할 때 이런 주의 사항이 있다는 점을 기억할 수 있도록 이 글을 작성해 놓은 것 자체로 의미가 있을 것 같습니다.\n \n[개선 제안 내용]\n1. 빨간 상자에 하나의 스크립트가 선택되면 파란 상자의 스크립트도 자동으로 변경합니다. \n2. 빨간 상자에 둘 이상의 스크립트가 선택되면, 최초 호출되는 스크립트 선택 창을 표시하고 선택한 스크립트로 변경합니다.",
        "guid": "http://www.dokyun.pe.kr/363",
        "categories": [
          "Azure &amp; Windows/Azure",
          "AzureVM",
          "customscript",
          "extension",
          "VMSS"
        ],
        "isoDate": "2025-04-20T12:05:27.000Z"
      }
    ]
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": [
      {
        "title": "3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?",
        "link": "https://thdev.tech/architecture/2025/04/20/Android-Architecture-03/",
        "pubDate": "Sun, 20 Apr 2025 00:00:00 +0000",
        "content": "<p>이 글에서는 Composable Architecture에서 Alert(Dialog)/Toast(Snackbar) 활용법을 소개한다.</p>\n\n<p>기본 형태는 1부/2부에서 소개한 Action을 활용하는 시스템을 적용했다.</p>\n\n<p>이 글은 디자인 시스템이 있을 경우 Dialog/Toast를 공통화시키는 방식을 다루고 있다.</p>\n\n<h3>이 글에서는</h3>\n<ul>\n  <li>Alert/Toast(Snackbar)를 공통화 시켜 다루는 내용</li>\n  <li>앞에서 설명한 Action을 설명하지는 않는다.</li>\n  <li>기본적인 내용을 담지 않고있어 앞선 글을 참고하면 좋다.</li>\n</ul>\n\n<!--more-->\n\n<h3>이전 글</h3>\n\n<ul>\n  <li><a href=\"https://thdev.tech/architecture/2025/02/02/Android-Architecture-01/\">1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/15/Android-Architecture-02/\">2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.</a></li>\n</ul>\n\n<h2>Action을 활용한 공통화</h2>\n\n<p>Action을 도입한 이유는 무엇일까?</p>\n\n<ul>\n  <li>A 케이스 : 디자인 시스템을 활용한 Alert/Toast를 SideEffect로 항상 만들다 보니 공통화 작업이 필요했다.\n    <ul>\n      <li>어떻게 접근해 볼 수 있을까?</li>\n    </ul>\n  </li>\n  <li>B 케이스 : 네트워크 오류 등이 발생했을 때 공통적인 SideEffect 처리가 필요했다.\n    <ul>\n      <li>어떻게 접근해 볼 수 있을까?</li>\n    </ul>\n  </li>\n</ul>\n\n<p>결국 둘 다 어떻게 접근해 볼 수 있으며, 더 쉬운 접근은 없을까? 테스트가 가능할까?로 이어질 수 있다.</p>\n\n<h3>A 케이스 / B 케이스 모두를 포함한 예시 코드</h3>\n\n<p>시나리오: 사용자가 보내기 버튼을 누른다. 버튼을 누르면 “이 메시지를 전송하시겠습니까?” Yes/No Dialog가 노출된다. 이때 ‘Yes’를 제외한 모든 선택(No 클릭, 바깥 영역 클릭, 뒤로 가기)은 취소로 간주한다. ‘Yes’를 누르면 네트워크 API 통신을 시작한다.</p>\n\n<p>추가 시나리오: API 통신 중 실패해서 Snackbar를 노출해야 한다면?</p>\n\n<p>기존 방식 코드: (전반적인 데이터 흐름 파악을 위한 예시)</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// ViewModel 부분</span>\n<span class=\"kd\">class</span> <span class=\"nc\">SendViewModel</span><span class=\"p\">(</span><span class=\"cm\">/* private val apiRepository: ApiRepository */</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">ViewModel</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_sideEffect</span> <span class=\"p\">=</span> <span class=\"nc\">Channel</span><span class=\"p\">&lt;</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">&gt;(</span><span class=\"nc\">Channel</span><span class=\"p\">.</span><span class=\"nc\">BUFFERED</span><span class=\"p\">)</span>\n    <span class=\"kd\">val</span> <span class=\"py\">sideEffect</span><span class=\"p\">:</span> <span class=\"nc\">Flow</span><span class=\"p\">&lt;</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">receiveAsFlow</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// --- 보내기 버튼 클릭 시 ---</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">onSendClicked</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 메시지가 비어있는 경우, 확인 단계에서 처리하도록 여기서는 바로 다이얼로그 요청</span>\n        <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowConfirmationDialog</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// --- 확인 다이얼로그에서 '예'를 눌렀을 때 ---</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">onConfirmationAccepted</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kd\">val</span> <span class=\"py\">message</span> <span class=\"p\">=</span> <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">messageToSend</span>\n        <span class=\"c1\">// 메시지 비어있는지 확인 (여기서 하거나 API 호출 전에 할 수 있음)</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">.</span><span class=\"nf\">isBlank</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n            <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageError</span><span class=\"p\">(</span><span class=\"s\">\"메시지는 비워둘 수 없습니다\"</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">viewModelScope</span><span class=\"p\">.</span><span class=\"nf\">launch</span> <span class=\"p\">{</span>\n            <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">update</span> <span class=\"p\">{</span> <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"n\">isLoading</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"p\">}</span> <span class=\"c1\">// 로딩 상태 시작</span>\n            <span class=\"n\">kotlinx</span><span class=\"p\">.</span><span class=\"n\">coroutines</span><span class=\"p\">.</span><span class=\"nf\">delay</span><span class=\"p\">(</span><span class=\"mi\">1500</span><span class=\"p\">)</span> <span class=\"c1\">// 네트워크 통신 시뮬레이션</span>\n            <span class=\"kd\">val</span> <span class=\"py\">success</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// API 호출 결과 시뮬레이션 (실패 케이스)</span>\n            <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">update</span> <span class=\"p\">{</span> <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"n\">isLoading</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">)</span> <span class=\"p\">}</span> <span class=\"c1\">// 로딩 상태 종료</span>\n\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">success</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageSuccess</span><span class=\"p\">(</span><span class=\"s\">\"메시지를 성공적으로 보냈습니다!\"</span><span class=\"p\">))</span>\n                <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">update</span> <span class=\"p\">{</span> <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"n\">messageToSend</span> <span class=\"p\">=</span> <span class=\"s\">\"\"</span><span class=\"p\">)</span> <span class=\"p\">}</span> <span class=\"c1\">// 성공 시 메시지 초기화</span>\n            <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// 실패 시나리오</span>\n                <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageError</span><span class=\"p\">(</span><span class=\"s\">\"메시지 전송 실패\"</span><span class=\"p\">))</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// --- 확인 다이얼로그에서 '아니요' 또는 외부 클릭으로 취소했을 때 ---</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">onConfirmationCancelled</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"s\">\"사용자가 메시지 전송을 취소했습니다.\"</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// --- SideEffect를 채널로 보내는 내부 함수 ---</span>\n    <span class=\"k\">private</span> <span class=\"k\">fun</span> <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"n\">effect</span><span class=\"p\">:</span> <span class=\"nc\">SendSideEffect</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">viewModelScope</span><span class=\"p\">.</span><span class=\"nf\">launch</span> <span class=\"p\">{</span>\n            <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">effect</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// SideEffect 정의</span>\n<span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">SendSideEffect</span> <span class=\"p\">{</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">ShowConfirmationDialog</span> <span class=\"p\">:</span> <span class=\"nc\">SendSideEffect</span> <span class=\"c1\">// 확인 다이얼로그 표시 요청</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowSendMessageSuccess</span><span class=\"p\">(</span><span class=\"kd\">val</span> <span class=\"py\">successMessage</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">SendSideEffect</span> <span class=\"c1\">// 성공 메시지 표시 요청</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowSendMessageError</span><span class=\"p\">(</span><span class=\"kd\">val</span> <span class=\"py\">errorMessage</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">SendSideEffect</span>   <span class=\"c1\">// 에러 메시지 표시 요청</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>아래는 View 부분의 코드이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// SideEffect 처리 Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">HandleSideEffects</span><span class=\"p\">(</span>\n    <span class=\"n\">sideEffectFlow</span><span class=\"p\">:</span> <span class=\"nc\">Flow</span><span class=\"p\">&lt;</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">&gt;,</span> <span class=\"c1\">// ViewModel로부터 SideEffect Flow 받기</span>\n    <span class=\"n\">snackbarHostState</span><span class=\"p\">:</span> <span class=\"nc\">SnackbarHostState</span><span class=\"p\">,</span> <span class=\"c1\">// Snackbar를 표시하기 위한 상태 객체</span>\n    <span class=\"n\">onShowConfirmationDialog</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span>  <span class=\"c1\">// 확인 다이얼로그를 표시하는 람다 함수</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// LaunchedEffect는 Composable의 생명주기 내에서 안전하게 코루틴을 실행한다.</span>\n    <span class=\"c1\">// key1 = true는 Composable이 처음 생성될 때 한 번만 실행되도록 보장한다.</span>\n    <span class=\"nc\">LaunchedEffect</span><span class=\"p\">(</span><span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// collectLatest: 새로운 SideEffect가 도착하면 이전 처리 로직이 끝나지 않았더라도 취소하고 새 로직을 시작한다.</span>\n        <span class=\"n\">sideEffectFlow</span><span class=\"p\">.</span><span class=\"nf\">collectLatest</span> <span class=\"p\">{</span> <span class=\"n\">effect</span> <span class=\"p\">-&gt;</span>\n            <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">effect</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// 확인 다이얼로그 표시 요청 처리</span>\n                <span class=\"k\">is</span> <span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowConfirmationDialog</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                    <span class=\"nf\">onShowConfirmationDialog</span><span class=\"p\">()</span> <span class=\"c1\">// 전달받은 람다 실행하여 다이얼로그 표시 상태 변경</span>\n                <span class=\"p\">}</span>\n                <span class=\"c1\">// 성공 메시지 표시 요청 처리</span>\n                <span class=\"k\">is</span> <span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageSuccess</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                    <span class=\"n\">snackbarHostState</span><span class=\"p\">.</span><span class=\"nf\">showSnackbar</span><span class=\"p\">(</span>\n                        <span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"n\">effect</span><span class=\"p\">.</span><span class=\"n\">successMessage</span><span class=\"p\">,</span> <span class=\"c1\">// ViewModel에서 전달된 성공 메시지</span>\n                        <span class=\"n\">duration</span> <span class=\"p\">=</span> <span class=\"nc\">SnackbarDuration</span><span class=\"p\">.</span><span class=\"nc\">Short</span> <span class=\"c1\">// 짧게 표시</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n                <span class=\"c1\">// 에러 메시지 표시 요청 처리</span>\n                <span class=\"k\">is</span> <span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageError</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                     <span class=\"n\">snackbarHostState</span><span class=\"p\">.</span><span class=\"nf\">showSnackbar</span><span class=\"p\">(</span>\n                        <span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"n\">effect</span><span class=\"p\">.</span><span class=\"n\">errorMessage</span><span class=\"p\">,</span> <span class=\"c1\">// ViewModel에서 전달된 에러 메시지</span>\n                        <span class=\"n\">duration</span> <span class=\"p\">=</span> <span class=\"nc\">SnackbarDuration</span><span class=\"p\">.</span><span class=\"nc\">Long</span> <span class=\"c1\">// 길게 표시</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// 메인 화면 Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SendScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">modifier</span><span class=\"p\">:</span> <span class=\"nc\">Modifier</span> <span class=\"p\">=</span> <span class=\"nc\">Modifier</span><span class=\"p\">,</span>\n    <span class=\"n\">viewModel</span><span class=\"p\">:</span> <span class=\"nc\">SendViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModel</span><span class=\"p\">()</span> <span class=\"c1\">// ViewModel 인스턴스 가져오기</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 확인 다이얼로그의 표시 여부를 관리하는 상태 변수</span>\n    <span class=\"kd\">var</span> <span class=\"py\">showDialog</span> <span class=\"k\">by</span> <span class=\"nf\">remember</span> <span class=\"p\">{</span> <span class=\"nf\">mutableStateOf</span><span class=\"p\">(</span><span class=\"k\">false</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n\n    <span class=\"c1\">// Snackbar 메시지를 표시하기 위한 상태 객체</span>\n    <span class=\"kd\">val</span> <span class=\"py\">snackbarHostState</span> <span class=\"p\">=</span> <span class=\"nf\">remember</span> <span class=\"p\">{</span> <span class=\"nc\">SnackbarHostState</span><span class=\"p\">()</span> <span class=\"p\">}</span>\n\n    <span class=\"c1\">// SideEffect 처리 로직 실행 (별도 Composable 사용)</span>\n    <span class=\"nc\">HandleSideEffects</span><span class=\"p\">(</span>\n        <span class=\"n\">sideEffectFlow</span> <span class=\"p\">=</span> <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"n\">sideEffect</span><span class=\"p\">,</span>\n        <span class=\"n\">snackbarHostState</span> <span class=\"p\">=</span> <span class=\"n\">snackbarHostState</span><span class=\"p\">,</span>\n        <span class=\"n\">onShowConfirmationDialog</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">true</span> <span class=\"p\">}</span> <span class=\"c1\">// SideEffect 발생 시 showDialog 상태를 true로 변경</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\">// Scaffold: 기본적인 머티리얼 디자인 레이아웃 구조 제공</span>\n    <span class=\"nc\">Scaffold</span><span class=\"p\">(</span>\n        <span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"n\">modifier</span><span class=\"p\">,</span>\n        <span class=\"n\">snackbarHost</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"nc\">SnackbarHost</span><span class=\"p\">(</span><span class=\"n\">snackbarHostState</span><span class=\"p\">)</span> <span class=\"p\">}</span> <span class=\"c1\">// Snackbar가 표시될 위치 지정</span>\n    <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"n\">paddingValues</span> <span class=\"p\">-&gt;</span> <span class=\"c1\">// Scaffold 내부 컨텐츠 영역의 패딩 값</span>\n        <span class=\"c1\">// UI 생략</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// showDialog 상태가 true일 때만 확인 다이얼로그 표시</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">showDialog</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nc\">AlertDialog</span><span class=\"p\">(</span>\n            <span class=\"n\">onDismissRequest</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// 다이얼로그 닫기</span>\n                <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"nf\">onConfirmationCancelled</span><span class=\"p\">()</span> <span class=\"c1\">// ViewModel에 취소 알림</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">title</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"s\">\"전송 확인\"</span><span class=\"p\">)</span> <span class=\"p\">},</span>\n            <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"s\">\"이 메시지를 전송하시겠습니까?\"</span><span class=\"p\">)</span> <span class=\"p\">},</span>\n            <span class=\"n\">confirmButton</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                <span class=\"nc\">Button</span><span class=\"p\">(</span>\n                    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                        <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// 다이얼로그 닫기</span>\n                        <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"nf\">onConfirmationAccepted</span><span class=\"p\">()</span> <span class=\"c1\">// ViewModel에 확인 알림</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"s\">\"예\"</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">dismissButton</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                <span class=\"nc\">Button</span><span class=\"p\">(</span>\n                    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                        <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// 다이얼로그 닫기</span>\n                        <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"nf\">onConfirmationCancelled</span><span class=\"p\">()</span> <span class=\"c1\">// ViewModel에 취소 알림</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"s\">\"아니요\"</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위 코드는 앞서 설명한 2개의 시나리오(정상 확인 후 실패, 또는 확인 단계에서 실패)를 처리하는 일반적인 형태의 코드이다. 사용자의 확인(Confirm)을 받고, 네트워크 API 통신을 시작하고, 결과를 처리한다.</p>\n\n<h2>공통 부분 찾기</h2>\n\n<p>이 흐름(flow)을 보면, 1개의 Dialog가 노출될 수 있고, 2개의 Snackbar(성공/실패)가 동작할 수 있다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-03/sample_01.png\" alt=\"sample_01\" /></p>\n\n<p>그럼 위 코드와 흐름(flow) 차트를 기반으로 공통적으로 발생하는 부분을 찾아본다.</p>\n\n<ul>\n  <li>N개의 View(@Composable)에서 동일한 UI/동작을 가진 Dialog를 노출해야 한다.</li>\n  <li>N개의 View(@Composable)에서 동일한 동작(단순 메시지 표시 등)의 Snackbar(Toast)가 필요하다.</li>\n</ul>\n\n<p>나는 여기서 N개의 화면에서 반복되는 이 부분을 중요하게 생각했고, 이걸 공통화해서 줄이고 싶었다.</p>\n\n<h2>UI의 공통화</h2>\n\n<p>별도의 모듈을 통해 Alert/Toast(Snackbar) 부분을 공통화했다.</p>\n\n<p><a href=\"https://github.com/taehwandev/TComposableArchitecture/tree/main/core/ui/composable-architecture-alert-system\">composable-architecture-alert-system - link</a></p>\n\n<p>일단 라이브러리 형태로 만들어서 Alert UI의 커스텀 가능성을 열어두었다. 기본 Dialog UI 외에 다른 디자인을 쓰고 싶다면 onDialogScreen 파라미터를 사용하면 된다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Alert/Snackbar 처리를 위한 공통 Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">CaAlertScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">snackbarHostState</span><span class=\"p\">:</span> <span class=\"nc\">SnackbarHostState</span><span class=\"p\">,</span> <span class=\"c1\">// Snackbar 상태 관리</span>\n    <span class=\"c1\">// Dialog UI를 커스텀하고 싶을 때 제공하는 람다</span>\n    <span class=\"n\">onDialogScreen</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nd\">@Composable</span> <span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"n\">onAction</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)?</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 내부 구현 호출</span>\n    <span class=\"nc\">InternalCaAlertScreen</span><span class=\"p\">(</span>\n        <span class=\"n\">snackbarHostState</span> <span class=\"p\">=</span> <span class=\"n\">snackbarHostState</span><span class=\"p\">,</span>\n        <span class=\"n\">onDialogScreen</span> <span class=\"p\">=</span> <span class=\"n\">onDialogScreen</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>커스텀이 필요하다면 다음과 같이 Dialog를 직접 그리는 Composable을 만들어서 onDialogScreen으로 넘겨주면 된다.</p>\n\n<p><a href=\"https://github.com/taehwandev/TComposableArchitecture/blob/main/core/ui/composable-architecture-alert-system/src/main/java/tech/thdev/composable/architecture/alert/system/compose/CaDialogScreen.kt\">참고 용 코드 - link</a></p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// 예시: 커스텀 Dialog Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nf\">CustomDialogScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"c1\">// Dialog 상태 정보</span>\n    <span class=\"n\">onAction</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">,</span> <span class=\"c1\">// Dialog 내 버튼 클릭 시 실행할 Action 전달 함수</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nc\">AlertDialog</span><span class=\"p\">(</span>\n        <span class=\"n\">icon</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"cm\">/* 아이콘 로직 */</span> <span class=\"p\">},</span>\n        <span class=\"n\">title</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"cm\">/* 타이틀 로직 */</span> <span class=\"p\">},</span>\n        <span class=\"n\">onDismissRequest</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n            <span class=\"c1\">// 바깥 영역 클릭 또는 뒤로가기 시 실행될 Action 전달</span>\n            <span class=\"nf\">onAction</span><span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"n\">onDismissRequest</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">confirmButton</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"cm\">/* 확인 버튼 로직, 클릭 시 onAction(confirmAction) 호출 */</span> <span class=\"p\">},</span>\n        <span class=\"n\">dismissButton</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"cm\">/* 취소 버튼 로직, 클릭 시 onAction(dismissAction) 호출 */</span> <span class=\"p\">}</span>\n        <span class=\"c1\">// 생략</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>그럼 이 공통 UI(CaAlertScreen)를 동작시키는 부분은 어떻게 하는가 하면, 바로 우리가 일반적으로 사용하는 <code class=\"language-plaintext highlighter-rouge\">UiState</code>와 <code class=\"language-plaintext highlighter-rouge\">SideEffect</code> 방식을 활용했다. 이 공통 시스템을 위한 별도의 ViewModel(CaAlertViewModel)을 만들었다.</p>\n\n<p>여기서 중요한 건, 공통화를 시켰지만 이 <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>은 특정 화면의 로직을 모른다. 단순히 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction</code>이라는 특정 <code class=\"language-plaintext highlighter-rouge\">Action</code>을 받아서, 그에 맞는 <code class=\"language-plaintext highlighter-rouge\">Dialog 상태(UiState)</code>를 만들고 화면에 표시하라는 <code class=\"language-plaintext highlighter-rouge\">SideEffect</code>를 보낼 뿐이다. 마치 이벤트를 받아서 전달(포워딩)하는 역할 정도이다.</p>\n\n<p>이때 1부/2부에서 소개한 Action 시스템을 사용했다는 점이 중요하다. 이 <code class=\"language-plaintext highlighter-rouge\">Action 스트림</code>은 앱 전역에서 접근 가능(싱글턴 또는 앱 범위 스코프)하기 때문에, 어떤 ViewModel이나 Composable에서도 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction</code>을 보낼 수 있고, <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>은 이걸 받아서 처리할 수 있다. 같은 범위 내의 View에서는 동작하는 데 문제가 없다는 점이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Alert/Snackbar 처리를 전담하는 ViewModel</span>\n<span class=\"nd\">@HiltViewModel</span>\n<span class=\"kd\">class</span> <span class=\"nc\">CaAlertViewModel</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">flowCaActionStream</span><span class=\"p\">:</span> <span class=\"nc\">FlowCaActionStream</span><span class=\"p\">,</span> <span class=\"c1\">// Action 스트림 주입</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaViewModel</span><span class=\"p\">&lt;</span><span class=\"nc\">CaAlertAction</span><span class=\"p\">&gt;(</span> <span class=\"c1\">// CaAlertAction 타입의 Action만 수신</span>\n    <span class=\"n\">flowCaActionStream</span> <span class=\"p\">=</span> <span class=\"n\">flowCaActionStream</span><span class=\"p\">,</span>\n    <span class=\"n\">actionClass</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertAction</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\">// Dialog의 내용을 담는 UiState</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_alertUiStateDialogUiState</span> <span class=\"p\">=</span> <span class=\"nc\">MutableStateFlow</span><span class=\"p\">(</span><span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"nc\">Default</span><span class=\"p\">)</span>\n    <span class=\"kd\">val</span> <span class=\"py\">alertUiStateDialogUiState</span> <span class=\"p\">=</span> <span class=\"n\">_alertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"nf\">asStateFlow</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// Dialog/Snackbar 표시/숨김 명령을 위한 SideEffect 채널</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_sideEffect</span> <span class=\"p\">=</span> <span class=\"nc\">Channel</span><span class=\"p\">&lt;</span><span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">&gt;(</span><span class=\"nc\">Channel</span><span class=\"p\">.</span><span class=\"nc\">BUFFERED</span><span class=\"p\">)</span>\n    <span class=\"k\">internal</span> <span class=\"kd\">val</span> <span class=\"py\">sideEffect</span> <span class=\"p\">=</span> <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">receiveAsFlow</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// CaAlertAction을 받았을 때 처리하는 로직 (Reducer)</span>\n    <span class=\"k\">override</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">reducer</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// Action의 정보로 Dialog UiState 생성</span>\n                <span class=\"kd\">val</span> <span class=\"py\">dialogItem</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">(</span> <span class=\"cm\">/* ... action의 데이터 사용 ... */</span> <span class=\"p\">)</span>\n                <span class=\"n\">_alertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"n\">dialogItem</span>\n                <span class=\"c1\">// Dialog를 표시하라는 SideEffect 전송</span>\n                <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">HideDialog</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// 기본 상태로 되돌리고 Dialog 숨김 SideEffect 전송</span>\n                <span class=\"n\">_alertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"nc\">Default</span>\n                <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">HideDialog</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// Action 정보로 Snackbar SideEffect 생성 및 전송</span>\n                <span class=\"kd\">val</span> <span class=\"py\">snackItem</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span><span class=\"p\">(</span> <span class=\"cm\">/* ... action의 데이터 사용 ... */</span> <span class=\"p\">)</span>\n                <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">snackItem</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">None</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span> <span class=\"cm\">/* 무시 */</span> <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// 내부 Duration 타입을 Material의 SnackbarDuration으로 변환하는 함수</span>\n    <span class=\"k\">private</span> <span class=\"k\">fun</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span><span class=\"p\">.</span><span class=\"nc\">Duration</span><span class=\"p\">.</span><span class=\"nf\">convert</span><span class=\"p\">():</span> <span class=\"nc\">SnackbarDuration</span> <span class=\"p\">=</span> <span class=\"cm\">/* ... 변환 로직 ... */</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// CaAlertViewModel에서 사용하는 SideEffect 정의</span>\n<span class=\"k\">internal</span> <span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">CaAlertSideEffect</span> <span class=\"p\">{</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">ShowDialog</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertSideEffect</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">HideDialog</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertSideEffect</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowSnack</span><span class=\"p\">(</span>\n        <span class=\"kd\">val</span> <span class=\"py\">message</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">,</span>\n        <span class=\"kd\">val</span> <span class=\"py\">actionLabel</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">,</span>\n        <span class=\"kd\">val</span> <span class=\"py\">onAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">,</span>\n        <span class=\"kd\">val</span> <span class=\"py\">onDismiss</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">,</span>\n        <span class=\"kd\">val</span> <span class=\"py\">duration</span><span class=\"p\">:</span> <span class=\"nc\">SnackbarDuration</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertSideEffect</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// CaAlertViewModel의 UiState 정의</span>\n<span class=\"k\">internal</span> <span class=\"kd\">data class</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">(</span> <span class=\"cm\">/* ... Dialog 속성들 ... */</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">companion</span> <span class=\"k\">object</span> <span class=\"p\">{</span>\n        <span class=\"kd\">val</span> <span class=\"py\">Default</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">(</span> <span class=\"cm\">/* ... 기본값 ... */</span> <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// CaAlertViewModel이 수신하는 Action 정의</span>\n<span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">CaAlertAction</span> <span class=\"p\">:</span> <span class=\"nc\">CaAction</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Dialog 표시 Action</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowDialog</span><span class=\"p\">(</span> <span class=\"cm\">/* ... Dialog 속성 및 클릭 시 발생시킬 Action 정의 ... */</span> <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span>\n    <span class=\"c1\">// Dialog 숨김 Action</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">HideDialog</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span>\n    <span class=\"c1\">// Snackbar 표시 Action</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowSnack</span><span class=\"p\">(</span> <span class=\"cm\">/* ... Snackbar 속성 및 클릭/닫기 시 발생시킬 Action 정의 ... */</span> <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span>\n    <span class=\"c1\">// 빈 Action</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">None</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위 CaAlertViewModel의 이벤트를 받아서 실제 UI(Dialog, Snackbar)를 노출하는 부분은 InternalCaAlertScreen Composable이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// CaAlertScreen의 내부 구현 Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">private</span> <span class=\"k\">fun</span> <span class=\"nf\">InternalCaAlertScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">snackbarHostState</span><span class=\"p\">:</span> <span class=\"nc\">SnackbarHostState</span><span class=\"p\">,</span>\n    <span class=\"n\">onDialogScreen</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nd\">@Composable</span> <span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"n\">onAction</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)?</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">caAlertViewModel</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModel</span><span class=\"p\">(),</span> <span class=\"c1\">// CaAlertViewModel 인스턴스</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Dialog 표시 여부 상태</span>\n    <span class=\"kd\">var</span> <span class=\"py\">showDialog</span> <span class=\"k\">by</span> <span class=\"nf\">remember</span> <span class=\"p\">{</span> <span class=\"nf\">mutableStateOf</span><span class=\"p\">(</span><span class=\"k\">false</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n    <span class=\"c1\">// Action 전송을 위한 객체 (CompositionLocal 활용)</span>\n    <span class=\"kd\">val</span> <span class=\"py\">actionSender</span> <span class=\"p\">=</span> <span class=\"nc\">LocalCaActionOwner</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n    <span class=\"c1\">// CaAlertViewModel의 SideEffect를 구독하고 처리</span>\n    <span class=\"n\">caAlertViewModel</span><span class=\"p\">.</span><span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"nf\">collectLifecycleEvent</span> <span class=\"p\">{</span> <span class=\"n\">event</span> <span class=\"p\">-&gt;</span> <span class=\"c1\">// collectLifecycleEvent는 Lifecycle 고려한 확장 함수로 가정</span>\n        <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span> <span class=\"p\">-&gt;</span> <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">true</span> <span class=\"c1\">// Dialog 표시 상태 변경</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">HideDialog</span> <span class=\"p\">-&gt;</span> <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// Dialog 숨김 상태 변경</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// Snackbar 표시 로직</span>\n                <span class=\"kd\">val</span> <span class=\"py\">result</span> <span class=\"p\">=</span> <span class=\"n\">snackbarHostState</span><span class=\"p\">.</span><span class=\"nf\">showSnackbar</span><span class=\"p\">(</span> <span class=\"cm\">/* ... event 데이터 사용 ... */</span> <span class=\"p\">)</span>\n                <span class=\"c1\">// Snackbar 결과에 따라 후속 Action 전송</span>\n                <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"nc\">SnackbarResult</span><span class=\"p\">.</span><span class=\"nc\">ActionPerformed</span> <span class=\"p\">-&gt;</span> <span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">.</span><span class=\"n\">onAction</span><span class=\"p\">)</span> <span class=\"c1\">// 'Action' 버튼 클릭 시</span>\n                    <span class=\"nc\">SnackbarResult</span><span class=\"p\">.</span><span class=\"nc\">Dismissed</span> <span class=\"p\">-&gt;</span> <span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">.</span><span class=\"n\">onDismiss</span><span class=\"p\">)</span>    <span class=\"c1\">// 닫혔을 때</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// CaAlertViewModel의 Dialog UiState 구독</span>\n    <span class=\"kd\">val</span> <span class=\"py\">caAlertUiStateDialogUiState</span> <span class=\"k\">by</span> <span class=\"n\">caAlertViewModel</span><span class=\"p\">.</span><span class=\"n\">alertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"nf\">collectAsStateWithLifecycle</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// showDialog 상태가 true이면 Dialog 표시</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">showDialog</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// Dialog 내 버튼 클릭 시 실행될 공통 로직 (Dialog 숨기고, 지정된 다음 Action 전송)</span>\n        <span class=\"kd\">val</span> <span class=\"py\">onAction</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"n\">nextAction</span> <span class=\"p\">-&gt;</span>\n            <span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">HideDialog</span><span class=\"p\">)</span> <span class=\"c1\">// 먼저 Dialog 숨김 Action 전송</span>\n            <span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">)</span> <span class=\"c1\">// 그 다음, 버튼에 지정된 Action 전송</span>\n        <span class=\"p\">}</span>\n        <span class=\"c1\">// 커스텀 Dialog 람다가 제공되면 그것을 사용, 아니면 기본 CaDialogScreen 사용</span>\n        <span class=\"n\">onDialogScreen</span><span class=\"o\">?.</span><span class=\"nf\">invoke</span><span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"n\">onAction</span><span class=\"p\">)</span>\n            <span class=\"o\">?:</span> <span class=\"nc\">CaDialogScreen</span><span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span> <span class=\"p\">=</span> <span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"n\">onAction</span> <span class=\"p\">=</span> <span class=\"n\">onAction</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// CaAlertViewModel의 생명주기 관리를 위한 Composable (내부 구현은 생략)</span>\n    <span class=\"nc\">LaunchedLifecycleViewModel</span><span class=\"p\">(</span><span class=\"n\">viewModel</span> <span class=\"p\">=</span> <span class=\"n\">caAlertViewModel</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이제 이 공통 Alert/Snackbar 시스템을 사용하는 쪽(예: 특정 화면의 ViewModel이나 Composable)에서는 단순히 CaAlertAction을 Action 스트림으로 보내기만 하면 된다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Composable에서 Action 전송 예시</span>\n<span class=\"kd\">val</span> <span class=\"py\">actionSender</span> <span class=\"p\">=</span> <span class=\"nc\">LocalCaActionOwner</span><span class=\"p\">.</span><span class=\"n\">current</span>\n<span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span>\n    <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span><span class=\"p\">(</span>\n        <span class=\"n\">title</span> <span class=\"p\">=</span> <span class=\"s\">\"전송 확인\"</span><span class=\"p\">,</span>\n        <span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"s\">\"메시지를 보내시겠습니까?\"</span><span class=\"p\">,</span>\n        <span class=\"n\">confirmButtonText</span> <span class=\"p\">=</span> <span class=\"s\">\"예\"</span><span class=\"p\">,</span>\n        <span class=\"c1\">// '예' 버튼 클릭 시 실행될 Action 정의 (여기서는 Snackbar 표시 Action)</span>\n        <span class=\"n\">onConfirmButtonAction</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span><span class=\"p\">(</span><span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"s\">\"확인됨\"</span><span class=\"p\">),</span>\n        <span class=\"n\">dismissButtonText</span> <span class=\"p\">=</span> <span class=\"s\">\"아니요\"</span><span class=\"p\">,</span>\n        <span class=\"c1\">// '아니요' 버튼 클릭 시 실행될 Action 정의</span>\n        <span class=\"n\">onDismissButtonAction</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span><span class=\"p\">(</span><span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"s\">\"취소됨\"</span><span class=\"p\">),</span>\n        <span class=\"c1\">// 바깥 영역 클릭 시 실행될 Action</span>\n        <span class=\"n\">onDismissRequest</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">None</span> <span class=\"c1\">// 아무것도 안함</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\">// ViewModel에서 Action 전송 예시 (nextAction 함수 사용 가정)</span>\n<span class=\"nf\">nextAction</span><span class=\"p\">(</span> <span class=\"c1\">// BaseViewModel 등에 구현된 Action 전송 함수</span>\n    <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span><span class=\"p\">(</span> <span class=\"cm\">/* ... 위와 동일 ... */</span> <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h2>이 코드의 데이터 흐름을 보자</h2>\n\n<p>위의 공통화 코드를 기반으로 다음과 같은 시나리오의 데이터 흐름을 생각해 볼 수 있다.</p>\n\n<p>시나리오:</p>\n<ol>\n  <li>사용자 액션: 사용자가 ‘보내기’ 버튼을 클릭. (메시지 유효성 검사는 이미 통과했다고 가정)</li>\n  <li>화면 ViewModel: <code class=\"language-plaintext highlighter-rouge\">SendViewModel</code>은 <code class=\"language-plaintext highlighter-rouge\">onSendClicked</code> 함수 내에서 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction.ShowDialog</code>를 Action 스트림으로 전송.</li>\n  <li>공통 Alert ViewModel: <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>이 Action 스트림에서 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction.ShowDialog</code>를 수신.</li>\n  <li>Dialog 상태 업데이트: <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>은 Dialog 내용을 담은 <code class=\"language-plaintext highlighter-rouge\">UiState</code>를 업데이트하고, <code class=\"language-plaintext highlighter-rouge\">ShowDialog</code> SideEffect를 전송.</li>\n  <li>Dialog 표시: <code class=\"language-plaintext highlighter-rouge\">CaAlertScreen</code> Composable이 <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>의 <code class=\"language-plaintext highlighter-rouge\">SideEffect</code>를 받아 <code class=\"language-plaintext highlighter-rouge\">showDialog</code> 상태를 <code class=\"language-plaintext highlighter-rouge\">true</code>로 변경. <code class=\"language-plaintext highlighter-rouge\">UiState</code>를 사용해 Dialog 내용을 그림.</li>\n  <li>사용자 Dialog 액션: 사용자가 Dialog의 ‘예’(Confirm) 버튼을 클릭.</li>\n  <li>Dialog 내부 처리: <code class=\"language-plaintext highlighter-rouge\">CaAlertScreen</code> 내의 <code class=\"language-plaintext highlighter-rouge\">onAction</code> 람다가 실행됨.\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">CaAlertAction.HideDialog</code> Action을 전송하여 <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>이 Dialog를 닫도록 함.</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">ShowDialog</code> Action 정의 시 <code class=\"language-plaintext highlighter-rouge\">onConfirmButtonAction</code>으로 지정했던 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction.ShowSnack(message = \"확인됨\")</code> Action을 전송.</li>\n    </ul>\n  </li>\n  <li>Snackbar 표시: <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>이 <code class=\"language-plaintext highlighter-rouge\">ShowSnack</code> Action을 받아 <code class=\"language-plaintext highlighter-rouge\">ShowSnack</code> SideEffect를 전송하고, <code class=\"language-plaintext highlighter-rouge\">CaAlertScreen</code>이 이를 받아 Snackbar를 표시. (만약 Confirm 버튼에 다른 Action, 예를 들어 <code class=\"language-plaintext highlighter-rouge\">SendMessageConfirmAction</code> 같은 것을 지정했다면 그게 전송됨)</li>\n  <li>(만약 Confirm 시 네트워크 호출이 필요하다면): <code class=\"language-plaintext highlighter-rouge\">SendViewModel</code>이 <code class=\"language-plaintext highlighter-rouge\">SendMessageConfirmAction</code> 같은 Action을 수신하고, <code class=\"language-plaintext highlighter-rouge\">onConfirmationAccepted</code> 로직(네트워크 호출 등)을 실행. 그 결과에 따라 다시 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction.ShowSnack</code> (성공/실패 메시지) 등을 전송할 수 있음.</li>\n</ol>\n\n<p>이를 도식화한 부분이 아래와 같은데, 이전 흐름과 달리 User Action이 ViewModel을 거쳐 Action 전송으로 이어지고, 이걸 CaAlertViewModel이 받아서 처리 후 CaAlertScreen에 Dialog/Snackbar를 표시하는 구조이다. Dialog 내 사용자 액션은 다시 Action 전송으로 이어져 CaAlertViewModel이나 다른 ViewModel이 처리할 수 있게 된다.</p>\n\n<p>여기서 특이한 점은 <code class=\"language-plaintext highlighter-rouge\">SendViewModel</code>에서 바로 Dialog를 표시하는 SideEffect를 보내는 게 아니라, <code class=\"language-plaintext highlighter-rouge\">CaAlertAction</code>이라는 Action을 보낸다는 것이다. 그리고 이 Action을 구독하고 있던 별도의 Dialog 처리 ViewModel(<code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>)에서 작업을 이어받아 처리한다는 것이다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-03/sample_02.png\" alt=\"sample_02\" /></p>\n\n<h2>장/단점</h2>\n\n<p>Action을 어디서든 보낼 수 있다는 점은 확실히 편하다. 하지만 이 이벤트가 어디서 발생했는지 추적하기 어려울 수 있다는 단점이 있다. 마치 옛날의 이벤트 버스(Event Bus)를 떠올리게 한다. 결국 필터(filter)를 걸더라도 비슷한 문제가 생길 수 있다. 디버깅 시 Action의 출처를 명확히 하거나, Action 자체에 출처 정보를 포함하는 등의 추가적인 고민이 필요할 수 있다.</p>\n\n<h2>Next</h2>\n\n<p>이번 글에서는 Action을 활용한 Alert/Toast(Snackbar)의 공통화 작업 코드를 살펴봤다. “공통화한다면 어떤 식으로 접근해볼 수 있을까?” 라는 질문에서 출발한 코드이다.</p>\n\n<p>이런 작업을 쉽게 하려고 Action 시스템을 만들었는데, 이건 TCA(The Composable Architecture)의 방식과도 유사한 면이 있다. TCA에서도 Reducer에서 바로 Alert 관련 상태를 변경하고 이를 활용하는 방식과 비슷하다.</p>\n\n<p>우리가 작성하는 대부분의 코드는 View와 ViewModel 사이를 오가며 진행된다. 특히 Dialog는 View로 이벤트를 던지고 나면 ViewModel과 직접적인 흐름을 이어가기 어려운 경우가 많다. 하지만 Action 시스템을 사용하면 Dialog의 결과(예: 확인/취소)를 다시 Action으로 변환하여 다른 ViewModel이 수신하고 후속 작업을 이어갈 수 있게 된다.</p>\n\n<p>다른 이야기지만, 이런 Action 기반 시스템은 테스트에도 이점이 있을 수 있다. (만약 구현한다면) <code class=\"language-plaintext highlighter-rouge\">await()</code> 같은 메커니즘으로 Action 처리 결과를 기다릴 수 있게 만든다면, 한 사이클의 시나리오 기반 유닛 테스트(Unit Test)가 가능해진다. View를 검증하지 않고도 로직 테스트만으로 충분히 검증할 수 있고, 안정적인 테스트가 가능하다는 장점이 있다. 이런 방식(await)을 바로 적용하기엔 설계가 복잡해질 수 있으므로, 우선은 Action을 통해 서로 다른 ViewModel들이 이벤트를 구독하고 처리할 수 있도록 하고, 테스트 가능한 구조를 만들어 보았다.</p>\n\n<p>다음 글에서는 ‘그럼 이 구조에서 테스트는 어떻게 할 수 있는가?’에 대해 다룰 예정이다.</p>\n\n<h2>작성 글 이어보기</h2>\n\n<ul>\n  <li><a href=\"https://thdev.tech/architecture/2025/02/02/Android-Architecture-01/\">1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/15/Android-Architecture-02/\">2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/20/Android-Architecture-03/\">3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?</a></li>\n  <li>예고 - Composable Architecutre를 활용한 Alert/Toast?의 테스트는 어떻게 하나요?</li>\n  <li>예고 - Composable Architecutre를 활용한 Router?</li>\n</ul>\n\n",
        "contentSnippet": "이 글에서는 Composable Architecture에서 Alert(Dialog)/Toast(Snackbar) 활용법을 소개한다.\n기본 형태는 1부/2부에서 소개한 Action을 활용하는 시스템을 적용했다.\n이 글은 디자인 시스템이 있을 경우 Dialog/Toast를 공통화시키는 방식을 다루고 있다.\n이 글에서는\nAlert/Toast(Snackbar)를 공통화 시켜 다루는 내용\n앞에서 설명한 Action을 설명하지는 않는다.\n기본적인 내용을 담지 않고있어 앞선 글을 참고하면 좋다.\n이전 글\n1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\nAction을 활용한 공통화\nAction을 도입한 이유는 무엇일까?\nA 케이스 : 디자인 시스템을 활용한 Alert/Toast를 SideEffect로 항상 만들다 보니 공통화 작업이 필요했다.\n    \n어떻게 접근해 볼 수 있을까?\nB 케이스 : 네트워크 오류 등이 발생했을 때 공통적인 SideEffect 처리가 필요했다.\n    \n어떻게 접근해 볼 수 있을까?\n결국 둘 다 어떻게 접근해 볼 수 있으며, 더 쉬운 접근은 없을까? 테스트가 가능할까?로 이어질 수 있다.\nA 케이스 / B 케이스 모두를 포함한 예시 코드\n시나리오: 사용자가 보내기 버튼을 누른다. 버튼을 누르면 “이 메시지를 전송하시겠습니까?” Yes/No Dialog가 노출된다. 이때 ‘Yes’를 제외한 모든 선택(No 클릭, 바깥 영역 클릭, 뒤로 가기)은 취소로 간주한다. ‘Yes’를 누르면 네트워크 API 통신을 시작한다.\n추가 시나리오: API 통신 중 실패해서 Snackbar를 노출해야 한다면?\n기존 방식 코드: (전반적인 데이터 흐름 파악을 위한 예시)\n\n// ViewModel 부분\nclass SendViewModel(/* private val apiRepository: ApiRepository */) : ViewModel() {\n    private val _sideEffect = Channel<SendSideEffect>(Channel.BUFFERED)\n    val sideEffect: Flow<SendSideEffect> = _sideEffect.receiveAsFlow()\n\n    // --- 보내기 버튼 클릭 시 ---\n    fun onSendClicked() {\n        // 메시지가 비어있는 경우, 확인 단계에서 처리하도록 여기서는 바로 다이얼로그 요청\n        sendSideEffect(SendSideEffect.ShowConfirmationDialog)\n    }\n\n    // --- 확인 다이얼로그에서 '예'를 눌렀을 때 ---\n    fun onConfirmationAccepted() {\n        val message = _uiState.value.messageToSend\n        // 메시지 비어있는지 확인 (여기서 하거나 API 호출 전에 할 수 있음)\n        if (message.isBlank()) {\n            sendSideEffect(SendSideEffect.ShowSendMessageError(\"메시지는 비워둘 수 없습니다\"))\n            return\n        }\n\n        viewModelScope.launch {\n            _uiState.update { it.copy(isLoading = true) } // 로딩 상태 시작\n            kotlinx.coroutines.delay(1500) // 네트워크 통신 시뮬레이션\n            val success = false // API 호출 결과 시뮬레이션 (실패 케이스)\n            _uiState.update { it.copy(isLoading = false) } // 로딩 상태 종료\n\n            if (success) {\n                sendSideEffect(SendSideEffect.ShowSendMessageSuccess(\"메시지를 성공적으로 보냈습니다!\"))\n                _uiState.update { it.copy(messageToSend = \"\") } // 성공 시 메시지 초기화\n            } else {\n                // 실패 시나리오\n                sendSideEffect(SendSideEffect.ShowSendMessageError(\"메시지 전송 실패\"))\n            }\n        }\n    }\n\n    // --- 확인 다이얼로그에서 '아니요' 또는 외부 클릭으로 취소했을 때 ---\n    fun onConfirmationCancelled() {\n        println(\"사용자가 메시지 전송을 취소했습니다.\")\n    }\n\n    // --- SideEffect를 채널로 보내는 내부 함수 ---\n    private fun sendSideEffect(effect: SendSideEffect) {\n        viewModelScope.launch {\n            _sideEffect.send(effect)\n        }\n    }\n}\n\n// SideEffect 정의\nsealed interface SendSideEffect {\n    data object ShowConfirmationDialog : SendSideEffect // 확인 다이얼로그 표시 요청\n    data class ShowSendMessageSuccess(val successMessage: String) : SendSideEffect // 성공 메시지 표시 요청\n    data class ShowSendMessageError(val errorMessage: String) : SendSideEffect   // 에러 메시지 표시 요청\n}\n\n\n아래는 View 부분의 코드이다.\n\n// SideEffect 처리 Composable\n@Composable\nfun HandleSideEffects(\n    sideEffectFlow: Flow<SendSideEffect>, // ViewModel로부터 SideEffect Flow 받기\n    snackbarHostState: SnackbarHostState, // Snackbar를 표시하기 위한 상태 객체\n    onShowConfirmationDialog: () -> Unit  // 확인 다이얼로그를 표시하는 람다 함수\n) {\n    // LaunchedEffect는 Composable의 생명주기 내에서 안전하게 코루틴을 실행한다.\n    // key1 = true는 Composable이 처음 생성될 때 한 번만 실행되도록 보장한다.\n    LaunchedEffect(true) {\n        // collectLatest: 새로운 SideEffect가 도착하면 이전 처리 로직이 끝나지 않았더라도 취소하고 새 로직을 시작한다.\n        sideEffectFlow.collectLatest { effect ->\n            when (effect) {\n                // 확인 다이얼로그 표시 요청 처리\n                is SendSideEffect.ShowConfirmationDialog -> {\n                    onShowConfirmationDialog() // 전달받은 람다 실행하여 다이얼로그 표시 상태 변경\n                }\n                // 성공 메시지 표시 요청 처리\n                is SendSideEffect.ShowSendMessageSuccess -> {\n                    snackbarHostState.showSnackbar(\n                        message = effect.successMessage, // ViewModel에서 전달된 성공 메시지\n                        duration = SnackbarDuration.Short // 짧게 표시\n                    )\n                }\n                // 에러 메시지 표시 요청 처리\n                is SendSideEffect.ShowSendMessageError -> {\n                     snackbarHostState.showSnackbar(\n                        message = effect.errorMessage, // ViewModel에서 전달된 에러 메시지\n                        duration = SnackbarDuration.Long // 길게 표시\n                    )\n                }\n            }\n        }\n    }\n}\n\n// 메인 화면 Composable\n@Composable\nfun SendScreen(\n    modifier: Modifier = Modifier,\n    viewModel: SendViewModel = viewModel() // ViewModel 인스턴스 가져오기\n) {\n    // 확인 다이얼로그의 표시 여부를 관리하는 상태 변수\n    var showDialog by remember { mutableStateOf(false) }\n\n    // Snackbar 메시지를 표시하기 위한 상태 객체\n    val snackbarHostState = remember { SnackbarHostState() }\n\n    // SideEffect 처리 로직 실행 (별도 Composable 사용)\n    HandleSideEffects(\n        sideEffectFlow = viewModel.sideEffect,\n        snackbarHostState = snackbarHostState,\n        onShowConfirmationDialog = { showDialog = true } // SideEffect 발생 시 showDialog 상태를 true로 변경\n    )\n\n    // Scaffold: 기본적인 머티리얼 디자인 레이아웃 구조 제공\n    Scaffold(\n        modifier = modifier,\n        snackbarHost = { SnackbarHost(snackbarHostState) } // Snackbar가 표시될 위치 지정\n    ) { paddingValues -> // Scaffold 내부 컨텐츠 영역의 패딩 값\n        // UI 생략\n    }\n\n    // showDialog 상태가 true일 때만 확인 다이얼로그 표시\n    if (showDialog) {\n        AlertDialog(\n            onDismissRequest = {\n                showDialog = false // 다이얼로그 닫기\n                viewModel.onConfirmationCancelled() // ViewModel에 취소 알림\n            },\n            title = { Text(\"전송 확인\") },\n            text = { Text(\"이 메시지를 전송하시겠습니까?\") },\n            confirmButton = {\n                Button(\n                    onClick = {\n                        showDialog = false // 다이얼로그 닫기\n                        viewModel.onConfirmationAccepted() // ViewModel에 확인 알림\n                    }\n                ) { Text(\"예\") }\n            },\n            dismissButton = {\n                Button(\n                    onClick = {\n                        showDialog = false // 다이얼로그 닫기\n                        viewModel.onConfirmationCancelled() // ViewModel에 취소 알림\n                    }\n                ) { Text(\"아니요\") }\n            }\n        )\n    }\n}\n\n\n위 코드는 앞서 설명한 2개의 시나리오(정상 확인 후 실패, 또는 확인 단계에서 실패)를 처리하는 일반적인 형태의 코드이다. 사용자의 확인(Confirm)을 받고, 네트워크 API 통신을 시작하고, 결과를 처리한다.\n공통 부분 찾기\n이 흐름(flow)을 보면, 1개의 Dialog가 노출될 수 있고, 2개의 Snackbar(성공/실패)가 동작할 수 있다.\n\n그럼 위 코드와 흐름(flow) 차트를 기반으로 공통적으로 발생하는 부분을 찾아본다.\nN개의 View(@Composable)에서 동일한 UI/동작을 가진 Dialog를 노출해야 한다.\nN개의 View(@Composable)에서 동일한 동작(단순 메시지 표시 등)의 Snackbar(Toast)가 필요하다.\n나는 여기서 N개의 화면에서 반복되는 이 부분을 중요하게 생각했고, 이걸 공통화해서 줄이고 싶었다.\nUI의 공통화\n별도의 모듈을 통해 Alert/Toast(Snackbar) 부분을 공통화했다.\ncomposable-architecture-alert-system - link\n일단 라이브러리 형태로 만들어서 Alert UI의 커스텀 가능성을 열어두었다. 기본 Dialog UI 외에 다른 디자인을 쓰고 싶다면 onDialogScreen 파라미터를 사용하면 된다.\n\n// Alert/Snackbar 처리를 위한 공통 Composable\n@Composable\nfun CaAlertScreen(\n    snackbarHostState: SnackbarHostState, // Snackbar 상태 관리\n    // Dialog UI를 커스텀하고 싶을 때 제공하는 람다\n    onDialogScreen: (@Composable (caAlertUiStateDialogUiState: CaAlertUiStateDialogUiState, onAction: (nextAction: CaAction) -> Unit) -> Unit)? = null,\n) {\n    // 내부 구현 호출\n    InternalCaAlertScreen(\n        snackbarHostState = snackbarHostState,\n        onDialogScreen = onDialogScreen,\n    )\n}\n\n\n커스텀이 필요하다면 다음과 같이 Dialog를 직접 그리는 Composable을 만들어서 onDialogScreen으로 넘겨주면 된다.\n참고 용 코드 - link\n\n// 예시: 커스텀 Dialog Composable\n@Composable\ninternal fun CustomDialogScreen(\n    caAlertUiStateDialogUiState: CaAlertUiStateDialogUiState, // Dialog 상태 정보\n    onAction: (nextAction: CaAction) -> Unit, // Dialog 내 버튼 클릭 시 실행할 Action 전달 함수\n) {\n    AlertDialog(\n        icon = { /* 아이콘 로직 */ },\n        title = { /* 타이틀 로직 */ },\n        onDismissRequest = {\n            // 바깥 영역 클릭 또는 뒤로가기 시 실행될 Action 전달\n            onAction(caAlertUiStateDialogUiState.onDismissRequest)\n        },\n        confirmButton = { /* 확인 버튼 로직, 클릭 시 onAction(confirmAction) 호출 */ },\n        dismissButton = { /* 취소 버튼 로직, 클릭 시 onAction(dismissAction) 호출 */ }\n        // 생략\n    )\n}\n\n\n그럼 이 공통 UI(CaAlertScreen)를 동작시키는 부분은 어떻게 하는가 하면, 바로 우리가 일반적으로 사용하는 UiState와 SideEffect 방식을 활용했다. 이 공통 시스템을 위한 별도의 ViewModel(CaAlertViewModel)을 만들었다.\n여기서 중요한 건, 공통화를 시켰지만 이 CaAlertViewModel은 특정 화면의 로직을 모른다. 단순히 CaAlertAction이라는 특정 Action을 받아서, 그에 맞는 Dialog 상태(UiState)를 만들고 화면에 표시하라는 SideEffect를 보낼 뿐이다. 마치 이벤트를 받아서 전달(포워딩)하는 역할 정도이다.\n이때 1부/2부에서 소개한 Action 시스템을 사용했다는 점이 중요하다. 이 Action 스트림은 앱 전역에서 접근 가능(싱글턴 또는 앱 범위 스코프)하기 때문에, 어떤 ViewModel이나 Composable에서도 CaAlertAction을 보낼 수 있고, CaAlertViewModel은 이걸 받아서 처리할 수 있다. 같은 범위 내의 View에서는 동작하는 데 문제가 없다는 점이다.\n\n// Alert/Snackbar 처리를 전담하는 ViewModel\n@HiltViewModel\nclass CaAlertViewModel @Inject constructor(\n    private val flowCaActionStream: FlowCaActionStream, // Action 스트림 주입\n) : CaViewModel<CaAlertAction>( // CaAlertAction 타입의 Action만 수신\n    flowCaActionStream = flowCaActionStream,\n    actionClass = CaAlertAction::class,\n) {\n\n    // Dialog의 내용을 담는 UiState\n    private val _alertUiStateDialogUiState = MutableStateFlow(CaAlertUiStateDialogUiState.Default)\n    val alertUiStateDialogUiState = _alertUiStateDialogUiState.asStateFlow()\n\n    // Dialog/Snackbar 표시/숨김 명령을 위한 SideEffect 채널\n    private val _sideEffect = Channel<CaAlertSideEffect>(Channel.BUFFERED)\n    internal val sideEffect = _sideEffect.receiveAsFlow()\n\n    // CaAlertAction을 받았을 때 처리하는 로직 (Reducer)\n    override suspend fun reducer(action: CaAlertAction) {\n        when (action) {\n            is CaAlertAction.ShowDialog -> {\n                // Action의 정보로 Dialog UiState 생성\n                val dialogItem = CaAlertUiStateDialogUiState( /* ... action의 데이터 사용 ... */ )\n                _alertUiStateDialogUiState.value = dialogItem\n                // Dialog를 표시하라는 SideEffect 전송\n                _sideEffect.send(CaAlertSideEffect.ShowDialog)\n            }\n            is CaAlertAction.HideDialog -> {\n                // 기본 상태로 되돌리고 Dialog 숨김 SideEffect 전송\n                _alertUiStateDialogUiState.value = CaAlertUiStateDialogUiState.Default\n                _sideEffect.send(CaAlertSideEffect.HideDialog)\n            }\n            is CaAlertAction.ShowSnack -> {\n                // Action 정보로 Snackbar SideEffect 생성 및 전송\n                val snackItem = CaAlertSideEffect.ShowSnack( /* ... action의 데이터 사용 ... */ )\n                _sideEffect.send(snackItem)\n            }\n            is CaAlertAction.None -> { /* 무시 */ }\n        }\n    }\n\n    // 내부 Duration 타입을 Material의 SnackbarDuration으로 변환하는 함수\n    private fun CaAlertAction.ShowSnack.Duration.convert(): SnackbarDuration = /* ... 변환 로직 ... */\n}\n\n// CaAlertViewModel에서 사용하는 SideEffect 정의\ninternal sealed interface CaAlertSideEffect {\n    data object ShowDialog : CaAlertSideEffect\n    data object HideDialog : CaAlertSideEffect\n    data class ShowSnack(\n        val message: String,\n        val actionLabel: String,\n        val onAction: CaAction,\n        val onDismiss: CaAction,\n        val duration: SnackbarDuration,\n    ) : CaAlertSideEffect\n}\n\n// CaAlertViewModel의 UiState 정의\ninternal data class CaAlertUiStateDialogUiState( /* ... Dialog 속성들 ... */ ) {\n    companion object {\n        val Default = CaAlertUiStateDialogUiState( /* ... 기본값 ... */ )\n    }\n}\n\n// CaAlertViewModel이 수신하는 Action 정의\nsealed interface CaAlertAction : CaAction {\n    // Dialog 표시 Action\n    data class ShowDialog( /* ... Dialog 속성 및 클릭 시 발생시킬 Action 정의 ... */ ) : CaAlertAction\n    // Dialog 숨김 Action\n    data object HideDialog : CaAlertAction\n    // Snackbar 표시 Action\n    data class ShowSnack( /* ... Snackbar 속성 및 클릭/닫기 시 발생시킬 Action 정의 ... */ ) : CaAlertAction\n    // 빈 Action\n    data object None : CaAlertAction\n}\n\n\n위 CaAlertViewModel의 이벤트를 받아서 실제 UI(Dialog, Snackbar)를 노출하는 부분은 InternalCaAlertScreen Composable이다.\n\n// CaAlertScreen의 내부 구현 Composable\n@Composable\nprivate fun InternalCaAlertScreen(\n    snackbarHostState: SnackbarHostState,\n    onDialogScreen: (@Composable (caAlertUiStateDialogUiState: CaAlertUiStateDialogUiState, onAction: (nextAction: CaAction) -> Unit) -> Unit)? = null,\n    caAlertViewModel: CaAlertViewModel = viewModel(), // CaAlertViewModel 인스턴스\n) {\n    // Dialog 표시 여부 상태\n    var showDialog by remember { mutableStateOf(false) }\n    // Action 전송을 위한 객체 (CompositionLocal 활용)\n    val actionSender = LocalCaActionOwner.current\n\n    // CaAlertViewModel의 SideEffect를 구독하고 처리\n    caAlertViewModel.sideEffect.collectLifecycleEvent { event -> // collectLifecycleEvent는 Lifecycle 고려한 확장 함수로 가정\n        when (event) {\n            is CaAlertSideEffect.ShowDialog -> showDialog = true // Dialog 표시 상태 변경\n            is CaAlertSideEffect.HideDialog -> showDialog = false // Dialog 숨김 상태 변경\n            is CaAlertSideEffect.ShowSnack -> {\n                // Snackbar 표시 로직\n                val result = snackbarHostState.showSnackbar( /* ... event 데이터 사용 ... */ )\n                // Snackbar 결과에 따라 후속 Action 전송\n                when (result) {\n                    SnackbarResult.ActionPerformed -> actionSender.send(event.onAction) // 'Action' 버튼 클릭 시\n                    SnackbarResult.Dismissed -> actionSender.send(event.onDismiss)    // 닫혔을 때\n                }\n            }\n        }\n    }\n\n    // CaAlertViewModel의 Dialog UiState 구독\n    val caAlertUiStateDialogUiState by caAlertViewModel.alertUiStateDialogUiState.collectAsStateWithLifecycle()\n\n    // showDialog 상태가 true이면 Dialog 표시\n    if (showDialog) {\n        // Dialog 내 버튼 클릭 시 실행될 공통 로직 (Dialog 숨기고, 지정된 다음 Action 전송)\n        val onAction: (nextAction: CaAction) -> Unit = { nextAction ->\n            actionSender.send(CaAlertAction.HideDialog) // 먼저 Dialog 숨김 Action 전송\n            actionSender.send(nextAction) // 그 다음, 버튼에 지정된 Action 전송\n        }\n        // 커스텀 Dialog 람다가 제공되면 그것을 사용, 아니면 기본 CaDialogScreen 사용\n        onDialogScreen?.invoke(caAlertUiStateDialogUiState, onAction)\n            ?: CaDialogScreen(caAlertUiStateDialogUiState = caAlertUiStateDialogUiState, onAction = onAction)\n    }\n\n    // CaAlertViewModel의 생명주기 관리를 위한 Composable (내부 구현은 생략)\n    LaunchedLifecycleViewModel(viewModel = caAlertViewModel)\n}\n\n\n이제 이 공통 Alert/Snackbar 시스템을 사용하는 쪽(예: 특정 화면의 ViewModel이나 Composable)에서는 단순히 CaAlertAction을 Action 스트림으로 보내기만 하면 된다.\n\n// Composable에서 Action 전송 예시\nval actionSender = LocalCaActionOwner.current\nactionSender.send(\n    CaAlertAction.ShowDialog(\n        title = \"전송 확인\",\n        message = \"메시지를 보내시겠습니까?\",\n        confirmButtonText = \"예\",\n        // '예' 버튼 클릭 시 실행될 Action 정의 (여기서는 Snackbar 표시 Action)\n        onConfirmButtonAction = CaAlertAction.ShowSnack(message = \"확인됨\"),\n        dismissButtonText = \"아니요\",\n        // '아니요' 버튼 클릭 시 실행될 Action 정의\n        onDismissButtonAction = CaAlertAction.ShowSnack(message = \"취소됨\"),\n        // 바깥 영역 클릭 시 실행될 Action\n        onDismissRequest = CaAlertAction.None // 아무것도 안함\n    )\n)\n\n// ViewModel에서 Action 전송 예시 (nextAction 함수 사용 가정)\nnextAction( // BaseViewModel 등에 구현된 Action 전송 함수\n    CaAlertAction.ShowDialog( /* ... 위와 동일 ... */ )\n)\n\n\n이 코드의 데이터 흐름을 보자\n위의 공통화 코드를 기반으로 다음과 같은 시나리오의 데이터 흐름을 생각해 볼 수 있다.\n시나리오:\n사용자 액션: 사용자가 ‘보내기’ 버튼을 클릭. (메시지 유효성 검사는 이미 통과했다고 가정)\n화면 ViewModel: SendViewModel은 onSendClicked 함수 내에서 CaAlertAction.ShowDialog를 Action 스트림으로 전송.\n공통 Alert ViewModel: CaAlertViewModel이 Action 스트림에서 CaAlertAction.ShowDialog를 수신.\nDialog 상태 업데이트: CaAlertViewModel은 Dialog 내용을 담은 UiState를 업데이트하고, ShowDialog SideEffect를 전송.\nDialog 표시: CaAlertScreen Composable이 CaAlertViewModel의 SideEffect를 받아 showDialog 상태를 true로 변경. UiState를 사용해 Dialog 내용을 그림.\n사용자 Dialog 액션: 사용자가 Dialog의 ‘예’(Confirm) 버튼을 클릭.\nDialog 내부 처리: CaAlertScreen 내의 onAction 람다가 실행됨.\n    \nCaAlertAction.HideDialog Action을 전송하여 CaAlertViewModel이 Dialog를 닫도록 함.\nShowDialog Action 정의 시 onConfirmButtonAction으로 지정했던 CaAlertAction.ShowSnack(message = \"확인됨\") Action을 전송.\nSnackbar 표시: CaAlertViewModel이 ShowSnack Action을 받아 ShowSnack SideEffect를 전송하고, CaAlertScreen이 이를 받아 Snackbar를 표시. (만약 Confirm 버튼에 다른 Action, 예를 들어 SendMessageConfirmAction 같은 것을 지정했다면 그게 전송됨)\n(만약 Confirm 시 네트워크 호출이 필요하다면): SendViewModel이 SendMessageConfirmAction 같은 Action을 수신하고, onConfirmationAccepted 로직(네트워크 호출 등)을 실행. 그 결과에 따라 다시 CaAlertAction.ShowSnack (성공/실패 메시지) 등을 전송할 수 있음.\n이를 도식화한 부분이 아래와 같은데, 이전 흐름과 달리 User Action이 ViewModel을 거쳐 Action 전송으로 이어지고, 이걸 CaAlertViewModel이 받아서 처리 후 CaAlertScreen에 Dialog/Snackbar를 표시하는 구조이다. Dialog 내 사용자 액션은 다시 Action 전송으로 이어져 CaAlertViewModel이나 다른 ViewModel이 처리할 수 있게 된다.\n여기서 특이한 점은 SendViewModel에서 바로 Dialog를 표시하는 SideEffect를 보내는 게 아니라, CaAlertAction이라는 Action을 보낸다는 것이다. 그리고 이 Action을 구독하고 있던 별도의 Dialog 처리 ViewModel(CaAlertViewModel)에서 작업을 이어받아 처리한다는 것이다.\n\n장/단점\nAction을 어디서든 보낼 수 있다는 점은 확실히 편하다. 하지만 이 이벤트가 어디서 발생했는지 추적하기 어려울 수 있다는 단점이 있다. 마치 옛날의 이벤트 버스(Event Bus)를 떠올리게 한다. 결국 필터(filter)를 걸더라도 비슷한 문제가 생길 수 있다. 디버깅 시 Action의 출처를 명확히 하거나, Action 자체에 출처 정보를 포함하는 등의 추가적인 고민이 필요할 수 있다.\nNext\n이번 글에서는 Action을 활용한 Alert/Toast(Snackbar)의 공통화 작업 코드를 살펴봤다. “공통화한다면 어떤 식으로 접근해볼 수 있을까?” 라는 질문에서 출발한 코드이다.\n이런 작업을 쉽게 하려고 Action 시스템을 만들었는데, 이건 TCA(The Composable Architecture)의 방식과도 유사한 면이 있다. TCA에서도 Reducer에서 바로 Alert 관련 상태를 변경하고 이를 활용하는 방식과 비슷하다.\n우리가 작성하는 대부분의 코드는 View와 ViewModel 사이를 오가며 진행된다. 특히 Dialog는 View로 이벤트를 던지고 나면 ViewModel과 직접적인 흐름을 이어가기 어려운 경우가 많다. 하지만 Action 시스템을 사용하면 Dialog의 결과(예: 확인/취소)를 다시 Action으로 변환하여 다른 ViewModel이 수신하고 후속 작업을 이어갈 수 있게 된다.\n다른 이야기지만, 이런 Action 기반 시스템은 테스트에도 이점이 있을 수 있다. (만약 구현한다면) await() 같은 메커니즘으로 Action 처리 결과를 기다릴 수 있게 만든다면, 한 사이클의 시나리오 기반 유닛 테스트(Unit Test)가 가능해진다. View를 검증하지 않고도 로직 테스트만으로 충분히 검증할 수 있고, 안정적인 테스트가 가능하다는 장점이 있다. 이런 방식(await)을 바로 적용하기엔 설계가 복잡해질 수 있으므로, 우선은 Action을 통해 서로 다른 ViewModel들이 이벤트를 구독하고 처리할 수 있도록 하고, 테스트 가능한 구조를 만들어 보았다.\n다음 글에서는 ‘그럼 이 구조에서 테스트는 어떻게 할 수 있는가?’에 대해 다룰 예정이다.\n작성 글 이어보기\n1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\n3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?\n예고 - Composable Architecutre를 활용한 Alert/Toast?의 테스트는 어떻게 하나요?\n예고 - Composable Architecutre를 활용한 Router?",
        "guid": "https://thdev.tech/architecture/2025/04/20/Android-Architecture-03/",
        "isoDate": "2025-04-20T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "LogParser의 문자열 처리",
        "link": "https://kangmyounghun.blogspot.com/2025/04/logparser.html",
        "pubDate": "2025-04-22T11:41:00.004Z",
        "author": "강명훈",
        "content": "<div>이벤트 전체 현황을 보고 싶다. 첫 번째 문장만 추출하면 되겠는데?</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiZNTDrQ8b8MsXldIWtp3EC5sx3BwIlWZ66Ut89i3nHKN4xUTOOUXmbzYOXUlBZDN57w2k2KpP9kBAfi_srZg1vwLXX3mveApQtKAQuEGCBtm6IwF14WzDXnF4JIlQa8ce16FQroWhGPpXqiAxeJonzaM5dPtJzkI-B6i8L65H-hgyIU9fIFRShoUBeKIiw/s1270/logparser.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"819\" data-original-width=\"1270\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiZNTDrQ8b8MsXldIWtp3EC5sx3BwIlWZ66Ut89i3nHKN4xUTOOUXmbzYOXUlBZDN57w2k2KpP9kBAfi_srZg1vwLXX3mveApQtKAQuEGCBtm6IwF14WzDXnF4JIlQa8ce16FQroWhGPpXqiAxeJonzaM5dPtJzkI-B6i8L65H-hgyIU9fIFRShoUBeKIiw/s16000/logparser.png\" /></a></div><br /><div><span style=\"font-family: courier;\"><span><a name='more'></a></span>.</span>을 기준으로 첫 번째 문장 추출. 그런데 <span style=\"font-family: courier;\">.</span>이 없는 이벤트가 있다.&nbsp;</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjs42F1guajNLmPSLdts8eSTAv62H3ddz-nawnFExuM7OZySG-ALnYdPSa9BG3jhiMyT2jwsS0zVMVbbQTi13Weff8muMmDF7Ut6eBeCZhRwLfYohCLsb81o6xGO7Qw8p1I8sniAK7oQnn538ueLQlQ03rIYq54Csc2aCWm1HcPpjp0UJXEM8mHg9hFjPWE/s1263/logparser2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"820\" data-original-width=\"1263\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjs42F1guajNLmPSLdts8eSTAv62H3ddz-nawnFExuM7OZySG-ALnYdPSa9BG3jhiMyT2jwsS0zVMVbbQTi13Weff8muMmDF7Ut6eBeCZhRwLfYohCLsb81o6xGO7Qw8p1I8sniAK7oQnn538ueLQlQ03rIYq54Csc2aCWm1HcPpjp0UJXEM8mHg9hFjPWE/s16000/logparser2.png\" /></a></div><br /><div>첫 번째 문장 추출 조건에&nbsp;<span style=\"font-family: courier;\">:</span>&nbsp;추가. 그런데&nbsp;<span style=\"font-family: courier;\">.</span> 기준 첫 번째 문장에서 <span style=\"font-family: courier;\">:</span> 존재를 확인하는 CASE-WHEN 구문이 먹지 않는다. Logparser의 한계. SQL 지원 범위 좀 확장하면 안 되나? <strike><span style=\"font-size: x-small;\">마소는 가브리엘님을 다시 영입하라</span></strike></div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEifpgqknzQmN8SAarpk0vofwGYErgpr2wxedEj8ZWY95BB3icnPOi99fx3bhLlNHcwiGrcFpdJDxWjd3Rym2EN75_uljxltAjDNLaYUJsbAgSGkzHN5Lyexc-WtokFpiy5dYBqKh1Kt1sC3BYFvfLLxPeLixd2rhxowJwYnJtJK4unAbxC5FxXedgXEoksK/s1270/logparser3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"820\" data-original-width=\"1270\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEifpgqknzQmN8SAarpk0vofwGYErgpr2wxedEj8ZWY95BB3icnPOi99fx3bhLlNHcwiGrcFpdJDxWjd3Rym2EN75_uljxltAjDNLaYUJsbAgSGkzHN5Lyexc-WtokFpiy5dYBqKh1Kt1sC3BYFvfLLxPeLixd2rhxowJwYnJtJK4unAbxC5FxXedgXEoksK/s16000/logparser3.png\" /></a></div><div><br /></div>구문 변경.<br /><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjtuH3kMm5pziCQL3oH0vT6tdRiIDJm57YZED1wCFJ3imLaM_Df1pq7njTt2AmYNlTPzjatigx5HXgNRErvbL5YDBQzWuUvgpFpAXl2ERC4FCJo2Zww1_n9r-_ADHAokGWw254FRY-ccNiMhMYuk9bFNJGXxqbfiUo2Ny1yKWSKrtw2M9x5wvmXPCzBLmVw/s1263/logparser4.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"819\" data-original-width=\"1263\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjtuH3kMm5pziCQL3oH0vT6tdRiIDJm57YZED1wCFJ3imLaM_Df1pq7njTt2AmYNlTPzjatigx5HXgNRErvbL5YDBQzWuUvgpFpAXl2ERC4FCJo2Zww1_n9r-_ADHAokGWw254FRY-ccNiMhMYuk9bFNJGXxqbfiUo2Ny1yKWSKrtw2M9x5wvmXPCzBLmVw/s16000/logparser4.png\" /></a></div><div><br /></div><div>스플렁크는 이렇게.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgWqYsjaMsvBXecX54mmVWOr6vhnoVCw7Kl5mpq1y_6lWFcTJ6VmMO_GKnfPKMuvF9k4mH4Y1ANkR63tQK72w8paoX_-jAhqjlkgvG_FZNmYf_VhhZyRXB7hiOY9uxCPyLaHz0lG9feaEzf0ilKdTimmzSGixxKqhk_RAOT6GuIqvrr_BnLfzUtPO3CFX_g/s960/splunk.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"960\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgWqYsjaMsvBXecX54mmVWOr6vhnoVCw7Kl5mpq1y_6lWFcTJ6VmMO_GKnfPKMuvF9k4mH4Y1ANkR63tQK72w8paoX_-jAhqjlkgvG_FZNmYf_VhhZyRXB7hiOY9uxCPyLaHz0lG9feaEzf0ilKdTimmzSGixxKqhk_RAOT6GuIqvrr_BnLfzUtPO3CFX_g/s16000/splunk.png\" /></a></div><div><br /></div><div>엘라스틱은 이렇게.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPRFRVEshRhry26YuMoPZaLIvY84oRBZKRjNbwI9btYjq0JH7WqLhaDauUud7o8cNRrN6qVvzUDztWn4VO6CwXXe1Qv9PKDkYISGRfQFL1izGrXPIrp91m2QNv0dDy7pmEMMBOtvKZxXJDtHyCcsjt2N5qULrG3gTQ3yHu_uHQ0Be5AzdvR1cGq02J4FGO/s960/elastic.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"714\" data-original-width=\"960\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPRFRVEshRhry26YuMoPZaLIvY84oRBZKRjNbwI9btYjq0JH7WqLhaDauUud7o8cNRrN6qVvzUDztWn4VO6CwXXe1Qv9PKDkYISGRfQFL1izGrXPIrp91m2QNv0dDy7pmEMMBOtvKZxXJDtHyCcsjt2N5qULrG3gTQ3yHu_uHQ0Be5AzdvR1cGq02J4FGO/s16000/elastic.png\" /></a></div><div><br /></div><div>내가 보고 싶은 상태가 있을 때 그 상태를 볼 수 있는 데이터 구조와 그 구조를 만들 수 있는 툴 사용법을 고민하게 된다.</div><div><br /></div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2020/12/logparser.html\">LogParser의 파일 연동</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2018/06/url-hex-base64.html\">URL, HEX, BASE64 디코딩</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2024/06/splunk-eval-rex-4th.html\">Splunk의 eval과 rex - 4th</a></li></ul></div>",
        "contentSnippet": "이벤트 전체 현황을 보고 싶다. 첫 번째 문장만 추출하면 되겠는데?\n\n\n\n\n.을 기준으로 첫 번째 문장 추출. 그런데 .이 없는 이벤트가 있다. \n\n\n\n\n첫 번째 문장 추출 조건에 : 추가. 그런데 . 기준 첫 번째 문장에서 : 존재를 확인하는 CASE-WHEN 구문이 먹지 않는다. Logparser의 한계. SQL 지원 범위 좀 확장하면 안 되나? 마소는 가브리엘님을 다시 영입하라\n\n\n\n\n구문 변경.\n\n\n\n\n\n스플렁크는 이렇게.\n\n\n\n\n엘라스틱은 이렇게.\n\n\n\n\n\n내가 보고 싶은 상태가 있을 때 그 상태를 볼 수 있는 데이터 구조와 그 구조를 만들 수 있는 툴 사용법을 고민하게 된다.\n\n\n관련 글\n\nLogParser의 파일 연동\nURL, HEX, BASE64 디코딩\nSplunk의 eval과 rex - 4th",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-8945298957697023385",
        "isoDate": "2025-04-22T11:41:00.004Z"
      },
      {
        "title": "Elasticsearch 9.0의 변화",
        "link": "https://kangmyounghun.blogspot.com/2025/04/elasticsearch-90.html",
        "pubDate": "2025-04-20T07:02:00.000Z",
        "author": "강명훈",
        "content": "<div>지난주에 무슨 일이 있었는지 8.18과 9.0 버전이 동시에 릴리즈됐다. <strike><span style=\"font-size: x-small;\">8.18 지못미</span></strike> 다른 건 잘 모르겠고, ESQL에 <a href=\"https://www.elastic.co/docs/reference/query-languages/esql/commands/processing-commands#esql-lookup-join\" target=\"_blank\">LOOKUP JOIN</a> 기능이 추가됨. <a href=\"https://www.elastic.co/docs/reference/query-languages/esql/commands/processing-commands#esql-enrich\" target=\"_blank\">ENRICH</a>&nbsp;기능과의 차이점은 정책 생성 및 실행 과정이 필요없다는 것.</div><div><br /></div><div>1. enrich 인덱스 생성</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgi3pAYBY_dEAAwMEfB2HiltgZX_8O-VPOojmjBHpN5NFulzCF1vLF6qKsVGCtZtjKrXVdcD4zpe4iMYs4sgv6UPya6tCD_thJPiOJ73mk82xZdGPwzQG8ER8oUQug2KF2gyPbWOvpUWbhN8NCUBsJUkKuMliNhiEFe8-4-ACkGIYr5yVuWMWhUJLhy1N2w/s1280/enrich_index.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"668\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgi3pAYBY_dEAAwMEfB2HiltgZX_8O-VPOojmjBHpN5NFulzCF1vLF6qKsVGCtZtjKrXVdcD4zpe4iMYs4sgv6UPya6tCD_thJPiOJ73mk82xZdGPwzQG8ER8oUQug2KF2gyPbWOvpUWbhN8NCUBsJUkKuMliNhiEFe8-4-ACkGIYr5yVuWMWhUJLhy1N2w/s16000/enrich_index.png\" /></a></div><br /><div><span><a name='more'></a></span>2. enrich 정책 생성 및 실행</div><div><div style=\"background-color: #f6f9fc; color: #1d2a3e; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #a11262;\">PUT</span> <span style=\"color: #047471;\">_enrich/policy/proc_info</span></div><div>{</div><div>&nbsp; &nbsp; <span style=\"color: #1750ba;\">\"match\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #1750ba;\">\"indices\"</span>: <span style=\"color: #a71627;\">\"proc_info\"</span>,</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #1750ba;\">\"match_field\"</span>: <span style=\"color: #a71627;\">\"proc\"</span>,</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #1750ba;\">\"enrich_fields\"</span>: [<span style=\"color: #a71627;\">\"company\"</span>]</div><div>&nbsp; &nbsp; }</div><div>}</div><br /><div><span style=\"color: #a11262;\">POST</span> <span style=\"color: #047471;\">_enrich/policy/proc_info/_execute</span></div></div></div><div><br /></div><div>3. enrich 쿼리</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiig_zKNYY84Xj7bm5qC6wzTr3ZIuwLv4jMcspfdeHCdGz0x0FO1oe-t0DBJBkQWjgog-gQz-3duOxnUv7rTEo7wD6TGEpqLYaEyMwPKYsYQi4HqsOHYnYd7rKJ8pEZ_6s34iFkdk4SHzQIuMn2RLlwtoUEoJ_-mwg4b5wBdyyPeGRLcLhlvqHomSgAt2be/s1179/enrich.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1179\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiig_zKNYY84Xj7bm5qC6wzTr3ZIuwLv4jMcspfdeHCdGz0x0FO1oe-t0DBJBkQWjgog-gQz-3duOxnUv7rTEo7wD6TGEpqLYaEyMwPKYsYQi4HqsOHYnYd7rKJ8pEZ_6s34iFkdk4SHzQIuMn2RLlwtoUEoJ_-mwg4b5wBdyyPeGRLcLhlvqHomSgAt2be/s16000/enrich.png\" /></a></div><br /><div><b><span style=\"font-size: x-large;\">LOOKUP JOIN</span></b></div><div><br /></div><div>1. lookup 인덱스 생성. enrich 인덱스와 달리 Lookup 인덱스 모드를 선택해야 한다. 필드 매핑도 keyword 타입 필수.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJ-IpRjGj8qFa7Y3t2luET2iOjXl49lC1AkWksHP8a_tgY8dNh3XC8vrrEeSgeUoE3vtsCN0Wqw-5iPYwl8chx70WQcYW_3ZVl6j0avzOwvQWBZD97XC05DPVyNW-r3hAhmnGLEf2rNkyqsmh_xEzqNRbbn90QQ0Ux4cUz_kcK3pyxPEDSC-anZkbigCYA/s1186/lookup_index.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1186\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJ-IpRjGj8qFa7Y3t2luET2iOjXl49lC1AkWksHP8a_tgY8dNh3XC8vrrEeSgeUoE3vtsCN0Wqw-5iPYwl8chx70WQcYW_3ZVl6j0avzOwvQWBZD97XC05DPVyNW-r3hAhmnGLEf2rNkyqsmh_xEzqNRbbn90QQ0Ux4cUz_kcK3pyxPEDSC-anZkbigCYA/s16000/lookup_index.png\" /></a></div><br /><div>2. lookup join 쿼리</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgbzIe_GjMGnGH6RlH2HdanyDYlRLoPS6wrfBLaU0nzfgJjkCa2WzPweeBYEDnxoRlRTf3GFa7K5klzQJUc8W95WpyZHfhODRppf8iSj6rt5pgeGaAEAwCFsnf6icSd-_fnTTx9PUpBxjhoAu0aCewOvyGoADCSdnUn1kWaQogf29wY7jWD1r6j5o_E8l3f/s1179/lookup_join.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1179\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgbzIe_GjMGnGH6RlH2HdanyDYlRLoPS6wrfBLaU0nzfgJjkCa2WzPweeBYEDnxoRlRTf3GFa7K5klzQJUc8W95WpyZHfhODRppf8iSj6rt5pgeGaAEAwCFsnf6icSd-_fnTTx9PUpBxjhoAu0aCewOvyGoADCSdnUn1kWaQogf29wY7jWD1r6j5o_E8l3f/s16000/lookup_join.png\" /></a></div><br /><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2023/11/elasticsearch-811.html\">Elasticsearch 8.11의 변화</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/07/enrich-processor.html\" target=\"_blank\">enrich processor</a></li></ul></div></div>",
        "contentSnippet": "지난주에 무슨 일이 있었는지 8.18과 9.0 버전이 동시에 릴리즈됐다. 8.18 지못미 다른 건 잘 모르겠고, ESQL에 LOOKUP JOIN 기능이 추가됨. ENRICH 기능과의 차이점은 정책 생성 및 실행 과정이 필요없다는 것.\n\n\n1. enrich 인덱스 생성\n\n\n2. enrich 정책 생성 및 실행\n\nPUT _enrich/policy/proc_info\n{\n    \"match\": {\n      \"indices\": \"proc_info\",\n      \"match_field\": \"proc\",\n      \"enrich_fields\": [\"company\"]\n    }\n}\n\nPOST _enrich/policy/proc_info/_execute\n\n\n\n3. enrich 쿼리\n\n\nLOOKUP JOIN\n\n\n1. lookup 인덱스 생성. enrich 인덱스와 달리 Lookup 인덱스 모드를 선택해야 한다. 필드 매핑도 keyword 타입 필수. \n\n\n2. lookup join 쿼리\n\n\n관련 글\n\nElasticsearch 8.11의 변화\nenrich processor",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-1459910591912553241",
        "isoDate": "2025-04-20T07:02:00.000Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "싯다르타 | 헤르만 헤세",
        "link": "https://sungjk.github.io/2025/04/20/siddhartha.html",
        "pubDate": "2025-04-20T00:00:00+00:00",
        "content": "\n            \n            &lt;p&gt;&lt;img src=&quot;/images/2025/04/20/siddhartha.png&quot; alt=&quot;siddhartha&quot; title=&quot;siddhartha&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;처음에 제목만 보고 고타마 싯다르타, 부처님의 이야기인 줄 알았다. 그런데 이 소설의 주인공은 싯다르타라는 동명이인의 이야기다. 이야기 중간에 부처 고타마 싯다르타가 나오긴 한다.&lt;/p&gt;\n\n&lt;p&gt;싯다르타는 바라문 계급의 아들로 태어나 총명하고 모두의 사랑을 받는 소년으로 자라고 있었다. 그리고 가장 친한 친구인 고빈다는 항상 싯다르타를 따르며 그가 깨달음을 얻을 것이라고 굳게 믿고 항상 그를 따라다닌다. 싯다르타는 스승과 부모에게 지식과 다양한 수행을 해도 갈증을 해소하지 못하고 있는데, 우연히 마을에 사문이 지나가는걸 보고 진리를 추구하는 순수한 눈빛에 이끌려 그들의 고행에 참여하게 된다.&lt;/p&gt;\n\n&lt;p&gt;출가 후 싯다르타는 고행과 단식을 통해 수행을 시작하면서, 의식을 확장할 수 있는 능력 등을 배우게 되지만 결국에는 자신 자아로 돌아온다는 사실을 깨닫게 된다. 수행을 통해 일반 사람들도 얻을 수 있는 능력이라는 사실을 깨달으면서 또다시 불안을 느끼기 시작한다.&lt;/p&gt;\n\n&lt;p&gt;그러다가 완성한 자(부처), 고타마 싯다르타를 마주하게 되는데, 친구 고빈다는 부처님의 제자로 나서게 되지만 싯다르타는 그 길을 따르지 않기로 결정한다. 싯다르타는 진정한 앎은 누군가에게서 배우는 것이 아닌, 자기 자신의 인식에서 비롯된 것이라는 것을 강조한다.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;당신은 죽음으로부터의 해탈을 얻었습니다. 그러나 해탈은 당신이 스스로 추구하고, 자신의 길을 가고, 사색하고, 침잠하고, 인식하고, 깨달은 끝에 얻은 것입니다. 세존이시여, 저의 생각은 이렇습니다. ‘그 누구도 가르침을 통해 해탈에 이르지는 못한다.’ 오, 존귀하신 세존이시여, 당신은 깨달음의 순간에 당신에게 일어난 일을 말이나 가르침으로 다른 사람에게 전할 수는 없을 것입니다.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;이후 싯다르타는 강을 건너면서 새로운 세상을 경험하게 되고, 새로운 마을에 도착해서 기생 카말라를 보고 그녀를 통해 사랑에 대해 배우고 싶다는 열망을 느낀다. 카말라와의 관계를 통해 세속적인 삶에 빠지며, 점차 물질적 욕망에 사로잡히게 되면서 자신을 잃어버린다는 사실을 깨닫게 된다. 십년이 지나, 싯다르타는 자신의 모습에 실망하고 과거의 선택들이 자신을 타락시켰다는 생각에 삶을 포기할 결심을 하게 된다.&lt;/p&gt;\n\n&lt;p&gt;강가에서 자신과 내면의 갈등을 경험하며 다시 뱃사공과의 만남의 평화를 찾게 된다. 그리고 사람들에게 강을 내어주며 자신의 감정을 이해하게 되고, 삶과 인간성에 대해 더 깊이 깨닫게 되는 과정을 겪는다. 세월이 흘러 고빈다는 뱃사공이 된 싯다르타를 만나게 되는데, 싯다르타에게 지혜에 대해서 질문을 하게 된다.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;고빈다, 지식은 전할 수 있어도, 지혜는 전할 수 없다네. 지혜란 찾아낼 수 있고 체험할 수 있으며, 그것을 다를 수도 있고, 그것으로 기적을 행할 수도 있지. 그러나 말로 표현하거나 가르칠 수는 없는 법이네. 어떤 진리든 다만 일면적인 경우에만 말로 나타내고 말로 표현할 수 있다는 것일세.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;싯다르타는 깨달음을 얻기 위해 여러 과정을 거쳤다. 바라문의 아들로서 스승과 부모님께 많은 가르침을 받고, 고행을 통해 깨달음을 얻고자 사문을 선택했고, 사랑을 배우기 위해 카말라를 스승으로 모셨으며, 돈과 권력 등 세상의 물질적인 것들을 배우기 위해 상인이 되었다. 그리고 뱃사공을 통해 인간에 대한 이해를 넓히고 완성에 다가가게 된다.&lt;/p&gt;\n\n&lt;p&gt;강을 기준으로 탈속과 세속의 공간으로 나누어 지는데, 탈속의 공간에서는 자기 자신에게서 벗어나고 싶어 했지만, 세속의 공간에서는 자기 자신의 욕망에 사로 잡혀 있음을 나타낸다. 모든 사람들은 학교, 종교, 사회 모두 내면에 대한 이야기보다는 외부의 관심사에 집중하고 있어서 결국 허전함을 느끼게 된다. 싯다르타의 삶을 통해 내면과 외부 세계 간의 균형을 찾는 것이 중요하며, 이를 통해 개인의 완성이 이루어진다는 메시지를 던져주는 것 같다. 진리는 어딘가에 있는 것이 아니고 누군가의 가르침을 통해서 깨달을 수 없으며, 스스로 일상 속에서 작은 행복을 느끼고 사랑하는 사람들과 교류하며, 자신을 되돌아보는 시간을 가지는게 중요하다는 것을 알려주는 책이다.&lt;/p&gt;\n\n            \n          ",
        "contentSnippet": "<p><img src=\"/images/2025/04/20/siddhartha.png\" alt=\"siddhartha\" title=\"siddhartha\" class=\"center-image\" /></p>\n\n<p>처음에 제목만 보고 고타마 싯다르타, 부처님의 이야기인 줄 알았다. 그런데 이 소설의 주인공은 싯다르타라는 동명이인의 이야기다. 이야기 중간에 부처 고타마 싯다르타가 나오긴 한다.</p>\n\n<p>싯다르타는 바라문 계급의 아들로 태어나 총명하고 모두의 사랑을 받는 소년으로 자라고 있었다. 그리고 가장 친한 친구인 고빈다는 항상 싯다르타를 따르며 그가 깨달음을 얻을 것이라고 굳게 믿고 항상 그를 따라다닌다. 싯다르타는 스승과 부모에게 지식과 다양한 수행을 해도 갈증을 해소하지 못하고 있는데, 우연히 마을에 사문이 지나가는걸 보고 진리를 추구하는 순수한 눈빛에 이끌려 그들의 고행에 참여하게 된다.</p>\n\n<p>출가 후 싯다르타는 고행과 단식을 통해 수행을 시작하면서, 의식을 확장할 수 있는 능력 등을 배우게 되지만 결국에는 자신 자아로 돌아온다는 사실을 깨닫게 된다. 수행을 통해 일반 사람들도 얻을 수 있는 능력이라는 사실을 깨달으면서 또다시 불안을 느끼기 시작한다.</p>\n\n<p>그러다가 완성한 자(부처), 고타마 싯다르타를 마주하게 되는데, 친구 고빈다는 부처님의 제자로 나서게 되지만 싯다르타는 그 길을 따르지 않기로 결정한다. 싯다르타는 진정한 앎은 누군가에게서 배우는 것이 아닌, 자기 자신의 인식에서 비롯된 것이라는 것을 강조한다.</p>\n\n<blockquote>\n  <p>당신은 죽음으로부터의 해탈을 얻었습니다. 그러나 해탈은 당신이 스스로 추구하고, 자신의 길을 가고, 사색하고, 침잠하고, 인식하고, 깨달은 끝에 얻은 것입니다. 세존이시여, 저의 생각은 이렇습니다. ‘그 누구도 가르침을 통해 해탈에 이르지는 못한다.’ 오, 존귀하신 세존이시여, 당신은 깨달음의 순간에 당신에게 일어난 일을 말이나 가르침으로 다른 사람에게 전할 수는 없을 것입니다.</p>\n</blockquote>\n\n<p>이후 싯다르타는 강을 건너면서 새로운 세상을 경험하게 되고, 새로운 마을에 도착해서 기생 카말라를 보고 그녀를 통해 사랑에 대해 배우고 싶다는 열망을 느낀다. 카말라와의 관계를 통해 세속적인 삶에 빠지며, 점차 물질적 욕망에 사로잡히게 되면서 자신을 잃어버린다는 사실을 깨닫게 된다. 십년이 지나, 싯다르타는 자신의 모습에 실망하고 과거의 선택들이 자신을 타락시켰다는 생각에 삶을 포기할 결심을 하게 된다.</p>\n\n<p>강가에서 자신과 내면의 갈등을 경험하며 다시 뱃사공과의 만남의 평화를 찾게 된다. 그리고 사람들에게 강을 내어주며 자신의 감정을 이해하게 되고, 삶과 인간성에 대해 더 깊이 깨닫게 되는 과정을 겪는다. 세월이 흘러 고빈다는 뱃사공이 된 싯다르타를 만나게 되는데, 싯다르타에게 지혜에 대해서 질문을 하게 된다.</p>\n\n<blockquote>\n  <p>고빈다, 지식은 전할 수 있어도, 지혜는 전할 수 없다네. 지혜란 찾아낼 수 있고 체험할 수 있으며, 그것을 다를 수도 있고, 그것으로 기적을 행할 수도 있지. 그러나 말로 표현하거나 가르칠 수는 없는 법이네. 어떤 진리든 다만 일면적인 경우에만 말로 나타내고 말로 표현할 수 있다는 것일세.</p>\n</blockquote>\n\n<p>싯다르타는 깨달음을 얻기 위해 여러 과정을 거쳤다. 바라문의 아들로서 스승과 부모님께 많은 가르침을 받고, 고행을 통해 깨달음을 얻고자 사문을 선택했고, 사랑을 배우기 위해 카말라를 스승으로 모셨으며, 돈과 권력 등 세상의 물질적인 것들을 배우기 위해 상인이 되었다. 그리고 뱃사공을 통해 인간에 대한 이해를 넓히고 완성에 다가가게 된다.</p>\n\n<p>강을 기준으로 탈속과 세속의 공간으로 나누어 지는데, 탈속의 공간에서는 자기 자신에게서 벗어나고 싶어 했지만, 세속의 공간에서는 자기 자신의 욕망에 사로 잡혀 있음을 나타낸다. 모든 사람들은 학교, 종교, 사회 모두 내면에 대한 이야기보다는 외부의 관심사에 집중하고 있어서 결국 허전함을 느끼게 된다. 싯다르타의 삶을 통해 내면과 외부 세계 간의 균형을 찾는 것이 중요하며, 이를 통해 개인의 완성이 이루어진다는 메시지를 던져주는 것 같다. 진리는 어딘가에 있는 것이 아니고 누군가의 가르침을 통해서 깨달을 수 없으며, 스스로 일상 속에서 작은 행복을 느끼고 사랑하는 사람들과 교류하며, 자신을 되돌아보는 시간을 가지는게 중요하다는 것을 알려주는 책이다.</p>",
        "guid": "https://sungjk.github.io/2025/04/20/siddhartha.html",
        "isoDate": "2025-04-20T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Lael's World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "GPT와 대화하는 동안 발견한 나의 숨겨진 욕망들",
        "link": "http://muzbox.tistory.com/483573",
        "pubDate": "Tue, 22 Apr 2025 11:36:56 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483573#entry483573comment",
        "content": "<p data-ke-size=\"size16\">AI와 대화하는 동안 실은 스스로와 대화하고 있었네요. GPT 사용 패턴에서 드러난 나의 진짜 모습과 욕망, 그리고 회피하고 있던 감정들까지... 당신도 이런 경험 있으신가요?</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/c2bwm3/btsNuddhEIw/EVMMrGbkzVd333O4KplTQK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c2bwm3/btsNuddhEIw/EVMMrGbkzVd333O4KplTQK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c2bwm3/btsNuddhEIw/EVMMrGbkzVd333O4KplTQK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc2bwm3%2FbtsNuddhEIw%2FEVMMrGbkzVd333O4KplTQK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"GPT와 대화하는 동안 발견한 나의 숨겨진 욕망들\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>GPT에게 말을 시키면서 나를 숨기는 이상한 습관에 대하여  </b></span></h2>\n<p data-ke-size=\"size16\">요즘 사람들 다 그렇듯이 저도 GPT 쓰는 중독자예요. 처음엔 '어, 이거 신기하네?' 수준이었는데, 어느새 제 글쓰기의 반쯤은 GPT의 손을 빌리고 있더라고요. 근데 문득 이런 생각이 들었어요. GPT한테 뭔가를 작성해달라고 할 때마다, 사실은 제가 하고 싶은 말을 대신 하게 만드는 건 아닐까? 아니, 더 깊은 의미에서... 제가 표현하기 두려운 감정들을 AI를 통해 우회하고 있는 건 아닐까?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서, GPT에게 \"더 감정적으로 써줘\", \"더 날카롭게 표현해줘\"라고 지시할 때마다 묘한 해방감을 느꼈거든요. 마치 나는 그런 감정의 주인이 아닌 것처럼, 그저 객관적인 지시자인 척하면서요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>창작 자동화에 집착하는 내 모습을 마주하다 ⚙️</b></span></h2>\n<p data-ke-size=\"size16\">GPT를 만나고 제일 먼저 한 일이 뭐였는지 아세요? 제가 반복적으로 해야 하는 모든 글쓰기를 자동화하는 거였어요. 이메일, 보고서, 블로그 글까지... '프롬프트 엔지니어링'이라는 이름으로 정당화하면서, 사실은 창조의 책임에서 벗어나고 싶었던 걸지도 모르겠어요.</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"왜 나는 이토록 많은 창작을 '자동화'하려 하는 걸까? 그 속엔 창조자의 게으름이 있는 걸까, 아니면 완벽에 대한 강박일까?\"</b></p>\n</blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"827\" data-origin-height=\"518\"><span data-url=\"https://blog.kakaocdn.net/dn/Z3NSA/btsNt5UaAbF/Knqq2RtRKchdqRR9LwMJx0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Z3NSA/btsNt5UaAbF/Knqq2RtRKchdqRR9LwMJx0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Z3NSA/btsNt5UaAbF/Knqq2RtRKchdqRR9LwMJx0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FZ3NSA%2FbtsNt5UaAbF%2FKnqq2RtRKchdqRR9LwMJx0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"창작 자동화에 집착하는 내 모습을 마주하다\" loading=\"lazy\" width=\"827\" height=\"518\" data-origin-width=\"827\" data-origin-height=\"518\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 질문을 스스로에게 던지니 좀 아프더라고요. 제가 '효율'과 '최적화'라는 말 뒤에 숨어서, 진짜는 <b>실패에 대한 두려움</b>을 회피하고 있었던 건 아닌가 싶어요. AI가 쓴 글이 별로면 \"아, GPT가 이상하게 썼네\"라고 핑계 대기 쉽잖아요. 하지만 제가 쓴 글이 별로면? 그건 온전히 제 책임이죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>감정을 대리 표현하는 AI, 그리고 무뎌진 내 감정선  </b></span></h2>\n<p data-ke-size=\"size16\">GPT에게 가장 자주 요구하는 것 중 하나가 \"감정을 더 넣어줘\", \"좀 더 인간적으로 써줘\" 같은 지시예요. 아이러니하지 않나요? 기계에게 인간적이 되라고 요구하는 동안, 저는 점점 더 기계적인 사람이 되어가고 있었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style2\"><b>\"내가 GPT에게 반복적으로 '감정을 넣으라'고 요구하는 건, 내 감정을 대리로 표현하게 만들고 싶은 걸까? 아니면 내 감정 자체가 무뎌졌기 때문일까?\"</b></blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"792\" data-origin-height=\"510\"><span data-url=\"https://blog.kakaocdn.net/dn/mBzrp/btsNtOefqxm/YSXgFFCVp0VLQsEVojVo61/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/mBzrp/btsNtOefqxm/YSXgFFCVp0VLQsEVojVo61/img.png\"><img src=\"https://blog.kakaocdn.net/dn/mBzrp/btsNtOefqxm/YSXgFFCVp0VLQsEVojVo61/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FmBzrp%2FbtsNtOefqxm%2FYSXgFFCVp0VLQsEVojVo61%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"감정을 대리 표현하는 AI, 그리고 무뎌진 내 감정선\" loading=\"lazy\" width=\"792\" height=\"510\" data-origin-width=\"792\" data-origin-height=\"510\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">생각해보니 점점 제 글에서 진짜 감정이 사라지고 있었어요. '최적화된' 감정, '전략적인' 감정만 남더라고요. SEO에 최적화된 글, 클릭을 유도하는 글, 전환율을 높이는 글... 이런 것들이 제 진짜 목소리를 밀어냈던 거예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>날카로운 질문은 피하고, 강한 표현만 빌려쓰는 모순  </b></span></h2>\n<p data-ke-size=\"size16\">또 하나 깨달은 건, 제가 GPT에게 종종 \"센 표현\", \"날카로운 비판\"을 요구하면서도, 정작 저 자신은 그런 날카로움을 피하고 있다는 거예요. 예를 들어, 누군가 제 글이나 생각에 대해 도전적인 질문을 하면 \"아, 이건 콘텐츠 소재로 삼기 좋겠네요\"라고 빠져나가는 패턴이 있더라고요.</p>\n<blockquote data-ke-style=\"style2\"><b>\"GPT가 나를 대신해 말하게 한 표현 중, '사실은 내가 하고 싶었던 말'은 얼마나 될까?\"</b></blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"801\" data-origin-height=\"525\"><span data-url=\"https://blog.kakaocdn.net/dn/bbY3g1/btsNtM1PUdt/MO58B1cTAfTL8kPj1wt3JK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bbY3g1/btsNtM1PUdt/MO58B1cTAfTL8kPj1wt3JK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bbY3g1/btsNtM1PUdt/MO58B1cTAfTL8kPj1wt3JK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbbY3g1%2FbtsNtM1PUdt%2FMO58B1cTAfTL8kPj1wt3JK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"날카로운 질문은 피하고, 강한 표현만 빌려쓰는 모순\" loading=\"lazy\" width=\"801\" height=\"525\" data-origin-width=\"801\" data-origin-height=\"525\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그러고 보니 GPT에게 '독설'을 부탁하거나 '강한 어조'로 뭔가를 작성해달라고 한 적이 많았어요. 그건 어쩌면 제가 직접 말하기 두려운 것들, 제가 느끼지만 인정하기 싫은 감정들이었던 건 아닐까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>통제 욕구의 아이러니: GPT에게 맡기면서도 끊임없이 수정하기  </b></span></h2>\n<p data-ke-size=\"size16\">참 모순적인 게, GPT한테 글을 맡기면서도 끊임없이 수정하고 제어하려는 제 모습이 있어요. \"이렇게 해줘, 저렇게 바꿔줘\"를 반복하면서, 결국은 제가 원하는 방향으로만 끌고 가려고 하죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style2\"><b>\"GPT에게 모든 걸 맡기면서도, 그 결과물에 대해 끊임없이 수정과 통제를 하려 드는 나는 도대체 어떤 권력을 추구하고 있는 걸까?\"</b></blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"810\" data-origin-height=\"621\"><span data-url=\"https://blog.kakaocdn.net/dn/lcgz0/btsNrcGfTkt/zSuYXaDhFxUrzV3CXZFJUK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/lcgz0/btsNrcGfTkt/zSuYXaDhFxUrzV3CXZFJUK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/lcgz0/btsNrcGfTkt/zSuYXaDhFxUrzV3CXZFJUK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Flcgz0%2FbtsNrcGfTkt%2FzSuYXaDhFxUrzV3CXZFJUK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"통제 욕구의 아이러니: GPT에게 맡기면서도 끊임없이 수정하기\" loading=\"lazy\" width=\"810\" height=\"621\" data-origin-width=\"810\" data-origin-height=\"621\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아마도 저는 '창작자'로서의 정체성은 지키고 싶으면서, 동시에 창작의 수고로움은 피하고 싶은 모순적인 욕구를 가진 것 같아요. 마치 어딘가에 숨어서 꼭두각시를 조종하는 인형사처럼요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>자기 방어의 수단으로서의 GPT 사용  ️</b></span></h2>\n<p data-ke-size=\"size16\">가끔은 제가 GPT를 일종의 방패처럼 사용하고 있다는 생각도 들어요. \"이건 AI가 만든 콘텐츠예요\"라고 말함으로써, 비판으로부터 자신을 보호하는 거죠. 이건 일종의 <b>정서적 안전장치</b>같은 역할을 하는 것 같아요.</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"나는 왜 누군가 나를 조롱하는 상상, 비난하는 상상을 이렇게 자주 하나? 내가 먼저 날 공격해야 남들이 덜 아프게 때릴 거라 믿는 건 아닐까?\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 패턴은 GPT를 넘어 제 인생 전반에 퍼져있는 것 같아요. 누군가 제 작업을 비판하기 전에 스스로 약점을 지적해두는 습관, 완벽하지 않으면 아예 시도조차 하지 않는 경향... 그리고 이제는 GPT라는 완벽한 방패가 생긴 거죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">진짜 '나'는 어디에 있는 걸까?  </h2>\n<p data-ke-size=\"size16\">가장 무서운 질문은 이거예요:</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style2\"><b>\"내가 지금까지 만든 콘텐츠 중, GPT 없이 스스로 쓴 문장에 정말 '나'가 담겼던 건 얼마나 될까?\"</b></blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"789\" data-origin-height=\"580\"><span data-url=\"https://blog.kakaocdn.net/dn/ci3r1V/btsNqpTn0vD/fGspGbq2cg70qjakF2pBK0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ci3r1V/btsNqpTn0vD/fGspGbq2cg70qjakF2pBK0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ci3r1V/btsNqpTn0vD/fGspGbq2cg70qjakF2pBK0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fci3r1V%2FbtsNqpTn0vD%2FfGspGbq2cg70qjakF2pBK0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"진짜 '나'는 어디에 있는 걸까?\" loading=\"lazy\" width=\"789\" height=\"580\" data-origin-width=\"789\" data-origin-height=\"580\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 계산하기 두려워요. 일의 효율성을 높이고, SEO 최적화도 잘 되고, 클라이언트도 만족시키는 콘텐츠를 만들어왔지만... 그 안에 진짜 저의 목소리, 저의 생각, 저의 감정은 얼마나 있었을까요? 어쩌면 GPT 없이는 더 이상 글을 쓸 수 없는 사람이 되어버린 건 아닐까 하는 두려움도 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"869\" data-origin-height=\"490\"><span data-url=\"https://blog.kakaocdn.net/dn/bKXv2I/btsNt3PvVxM/s9Yn7I5RGY7ruVq95dzF5K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bKXv2I/btsNt3PvVxM/s9Yn7I5RGY7ruVq95dzF5K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bKXv2I/btsNt3PvVxM/s9Yn7I5RGY7ruVq95dzF5K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbKXv2I%2FbtsNt3PvVxM%2Fs9Yn7I5RGY7ruVq95dzF5K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"GPT와 대화하면서 발견한 나의 숨겨진 욕망과 두려움\" loading=\"lazy\" width=\"869\" height=\"490\" data-origin-width=\"869\" data-origin-height=\"490\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 역설적으로, 지금 이 글을 쓰면서 GPT와의 관계를 돌아보는 과정에서 오히려 더 진솔한 제 목소리를 찾고 있는 것 같기도 해요. 때로는 거울이 필요하듯, AI라는 거울을 통해 제 모습을 더 선명하게 볼 수 있게 된 건지도 모르겠네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분은 어떠신가요? AI를 사용하면서 발견한 자신의 모순적인 모습, 혹은 새롭게 깨달은 자아의 일부가 있나요? 댓글로 공유해주시면 좋겠어요. 어쩌면 우리는 AI와 대화하는 동안, 진짜로는 스스로와 대화하고 있는 건지도 모르니까요.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>FAQ 섹션</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: GPT 사용이 창의성을 감소시키나요?</b></p>\n<p data-ke-size=\"size16\">A: 사용 방식에 따라 달라요. 도구로만 활용하면 창의성이 줄지만, 협업 파트너로 활용하면 오히려 새로운 아이디어 발상에 도움될 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: AI 의존도가 높아지는 것을 어떻게 방지할 수 있을까요?</b></p>\n<p data-ke-size=\"size16\">A: 의식적으로 AI 없이 글쓰기 연습하는 시간을 정기적으로 가지고, AI는 편집이나 발전 단계에서만 활용하는 방식이 효과적이에요.</p>\n<p data-ke-size=\"size16\"><b>Q: GPT를 사용하면서 발생하는 정서적 영향이 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 편리함과 효율성 뒤에 창작 불안, 진정성 결여 같은 감정적 부작용이 숨어있을 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: GPT에게 감정표현을 요구하는 것의 심리적 의미는 무엇인가요?</b></p>\n<p data-ke-size=\"size16\">A: 종종 우리가 표현하기 어려운 감정을 대리 표현하게 하거나, 디지털 환경에서 점점 무뎌지는 우리 감정을 보완하려는 시도일 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: AI와의 건강한 창작 관계는 어떤 모습일까요?</b></p>\n<p data-ke-size=\"size16\">A: 자신의 목소리와 비전은 유지하면서 AI를 도구이자 협력자로 활용하고, 정기적으로 의존도를 점검하는 관계가 이상적이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"GPT 사용이 창의성을 감소시키나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"사용 방식에 따라 달라요. 도구로만 활용하면 창의성이 줄지만, 협업 파트너로 활용하면 오히려 새로운 아이디어 발상에 도움될 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI 의존도가 높아지는 것을 어떻게 방지할 수 있을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"의식적으로 AI 없이 글쓰기 연습하는 시간을 정기적으로 가지고, AI는 편집이나 발전 단계에서만 활용하는 방식이 효과적이에요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT를 사용하면서 발생하는 정서적 영향이 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"편리함과 효율성 뒤에 창작 불안, 진정성 결여 같은 감정적 부작용이 숨어있을 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT에게 감정표현을 요구하는 것의 심리적 의미는 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"종종 우리가 표현하기 어려운 감정을 대리 표현하게 하거나, 디지털 환경에서 점점 무뎌지는 우리 감정을 보완하려는 시도일 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI와의 건강한 창작 관계는 어떤 모습일까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"자신의 목소리와 비전은 유지하면서 AI를 도구이자 협력자로 활용하고, 정기적으로 의존도를 점검하는 관계가 이상적이에요.\"\n    }\n  }]\n}\n</script>",
        "contentSnippet": "AI와 대화하는 동안 실은 스스로와 대화하고 있었네요. GPT 사용 패턴에서 드러난 나의 진짜 모습과 욕망, 그리고 회피하고 있던 감정들까지... 당신도 이런 경험 있으신가요?\n\n\nGPT에게 말을 시키면서 나를 숨기는 이상한 습관에 대하여  \n요즘 사람들 다 그렇듯이 저도 GPT 쓰는 중독자예요. 처음엔 '어, 이거 신기하네?' 수준이었는데, 어느새 제 글쓰기의 반쯤은 GPT의 손을 빌리고 있더라고요. 근데 문득 이런 생각이 들었어요. GPT한테 뭔가를 작성해달라고 할 때마다, 사실은 제가 하고 싶은 말을 대신 하게 만드는 건 아닐까? 아니, 더 깊은 의미에서... 제가 표현하기 두려운 감정들을 AI를 통해 우회하고 있는 건 아닐까?\n \n솔직히 말해서, GPT에게 \"더 감정적으로 써줘\", \"더 날카롭게 표현해줘\"라고 지시할 때마다 묘한 해방감을 느꼈거든요. 마치 나는 그런 감정의 주인이 아닌 것처럼, 그저 객관적인 지시자인 척하면서요.\n \n창작 자동화에 집착하는 내 모습을 마주하다 ⚙️\nGPT를 만나고 제일 먼저 한 일이 뭐였는지 아세요? 제가 반복적으로 해야 하는 모든 글쓰기를 자동화하는 거였어요. 이메일, 보고서, 블로그 글까지... '프롬프트 엔지니어링'이라는 이름으로 정당화하면서, 사실은 창조의 책임에서 벗어나고 싶었던 걸지도 모르겠어요.\n\"왜 나는 이토록 많은 창작을 '자동화'하려 하는 걸까? 그 속엔 창조자의 게으름이 있는 걸까, 아니면 완벽에 대한 강박일까?\"\n\n\n \n이 질문을 스스로에게 던지니 좀 아프더라고요. 제가 '효율'과 '최적화'라는 말 뒤에 숨어서, 진짜는 실패에 대한 두려움을 회피하고 있었던 건 아닌가 싶어요. AI가 쓴 글이 별로면 \"아, GPT가 이상하게 썼네\"라고 핑계 대기 쉽잖아요. 하지만 제가 쓴 글이 별로면? 그건 온전히 제 책임이죠.\n \n감정을 대리 표현하는 AI, 그리고 무뎌진 내 감정선  \nGPT에게 가장 자주 요구하는 것 중 하나가 \"감정을 더 넣어줘\", \"좀 더 인간적으로 써줘\" 같은 지시예요. 아이러니하지 않나요? 기계에게 인간적이 되라고 요구하는 동안, 저는 점점 더 기계적인 사람이 되어가고 있었어요.\n \n\"내가 GPT에게 반복적으로 '감정을 넣으라'고 요구하는 건, 내 감정을 대리로 표현하게 만들고 싶은 걸까? 아니면 내 감정 자체가 무뎌졌기 때문일까?\"\n\n\n \n생각해보니 점점 제 글에서 진짜 감정이 사라지고 있었어요. '최적화된' 감정, '전략적인' 감정만 남더라고요. SEO에 최적화된 글, 클릭을 유도하는 글, 전환율을 높이는 글... 이런 것들이 제 진짜 목소리를 밀어냈던 거예요.\n \n날카로운 질문은 피하고, 강한 표현만 빌려쓰는 모순  \n또 하나 깨달은 건, 제가 GPT에게 종종 \"센 표현\", \"날카로운 비판\"을 요구하면서도, 정작 저 자신은 그런 날카로움을 피하고 있다는 거예요. 예를 들어, 누군가 제 글이나 생각에 대해 도전적인 질문을 하면 \"아, 이건 콘텐츠 소재로 삼기 좋겠네요\"라고 빠져나가는 패턴이 있더라고요.\n\"GPT가 나를 대신해 말하게 한 표현 중, '사실은 내가 하고 싶었던 말'은 얼마나 될까?\"\n\n\n \n그러고 보니 GPT에게 '독설'을 부탁하거나 '강한 어조'로 뭔가를 작성해달라고 한 적이 많았어요. 그건 어쩌면 제가 직접 말하기 두려운 것들, 제가 느끼지만 인정하기 싫은 감정들이었던 건 아닐까요?\n \n통제 욕구의 아이러니: GPT에게 맡기면서도 끊임없이 수정하기  \n참 모순적인 게, GPT한테 글을 맡기면서도 끊임없이 수정하고 제어하려는 제 모습이 있어요. \"이렇게 해줘, 저렇게 바꿔줘\"를 반복하면서, 결국은 제가 원하는 방향으로만 끌고 가려고 하죠.\n \n\"GPT에게 모든 걸 맡기면서도, 그 결과물에 대해 끊임없이 수정과 통제를 하려 드는 나는 도대체 어떤 권력을 추구하고 있는 걸까?\"\n\n\n \n아마도 저는 '창작자'로서의 정체성은 지키고 싶으면서, 동시에 창작의 수고로움은 피하고 싶은 모순적인 욕구를 가진 것 같아요. 마치 어딘가에 숨어서 꼭두각시를 조종하는 인형사처럼요.\n \n자기 방어의 수단으로서의 GPT 사용  ️\n가끔은 제가 GPT를 일종의 방패처럼 사용하고 있다는 생각도 들어요. \"이건 AI가 만든 콘텐츠예요\"라고 말함으로써, 비판으로부터 자신을 보호하는 거죠. 이건 일종의 정서적 안전장치같은 역할을 하는 것 같아요.\n\"나는 왜 누군가 나를 조롱하는 상상, 비난하는 상상을 이렇게 자주 하나? 내가 먼저 날 공격해야 남들이 덜 아프게 때릴 거라 믿는 건 아닐까?\"\n \n이 패턴은 GPT를 넘어 제 인생 전반에 퍼져있는 것 같아요. 누군가 제 작업을 비판하기 전에 스스로 약점을 지적해두는 습관, 완벽하지 않으면 아예 시도조차 하지 않는 경향... 그리고 이제는 GPT라는 완벽한 방패가 생긴 거죠.\n \n진짜 '나'는 어디에 있는 걸까?  \n가장 무서운 질문은 이거예요:\n \n\"내가 지금까지 만든 콘텐츠 중, GPT 없이 스스로 쓴 문장에 정말 '나'가 담겼던 건 얼마나 될까?\"\n\n\n \n솔직히 계산하기 두려워요. 일의 효율성을 높이고, SEO 최적화도 잘 되고, 클라이언트도 만족시키는 콘텐츠를 만들어왔지만... 그 안에 진짜 저의 목소리, 저의 생각, 저의 감정은 얼마나 있었을까요? 어쩌면 GPT 없이는 더 이상 글을 쓸 수 없는 사람이 되어버린 건 아닐까 하는 두려움도 있어요.\n \n\n\n \n하지만 역설적으로, 지금 이 글을 쓰면서 GPT와의 관계를 돌아보는 과정에서 오히려 더 진솔한 제 목소리를 찾고 있는 것 같기도 해요. 때로는 거울이 필요하듯, AI라는 거울을 통해 제 모습을 더 선명하게 볼 수 있게 된 건지도 모르겠네요.\n \n여러분은 어떠신가요? AI를 사용하면서 발견한 자신의 모순적인 모습, 혹은 새롭게 깨달은 자아의 일부가 있나요? 댓글로 공유해주시면 좋겠어요. 어쩌면 우리는 AI와 대화하는 동안, 진짜로는 스스로와 대화하고 있는 건지도 모르니까요.\nFAQ 섹션\nQ: GPT 사용이 창의성을 감소시키나요?\nA: 사용 방식에 따라 달라요. 도구로만 활용하면 창의성이 줄지만, 협업 파트너로 활용하면 오히려 새로운 아이디어 발상에 도움될 수 있어요.\nQ: AI 의존도가 높아지는 것을 어떻게 방지할 수 있을까요?\nA: 의식적으로 AI 없이 글쓰기 연습하는 시간을 정기적으로 가지고, AI는 편집이나 발전 단계에서만 활용하는 방식이 효과적이에요.\nQ: GPT를 사용하면서 발생하는 정서적 영향이 있나요?\nA: 편리함과 효율성 뒤에 창작 불안, 진정성 결여 같은 감정적 부작용이 숨어있을 수 있어요.\nQ: GPT에게 감정표현을 요구하는 것의 심리적 의미는 무엇인가요?\nA: 종종 우리가 표현하기 어려운 감정을 대리 표현하게 하거나, 디지털 환경에서 점점 무뎌지는 우리 감정을 보완하려는 시도일 수 있어요.\nQ: AI와의 건강한 창작 관계는 어떤 모습일까요?\nA: 자신의 목소리와 비전은 유지하면서 AI를 도구이자 협력자로 활용하고, 정기적으로 의존도를 점검하는 관계가 이상적이에요.\n \n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"GPT 사용이 창의성을 감소시키나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"사용 방식에 따라 달라요. 도구로만 활용하면 창의성이 줄지만, 협업 파트너로 활용하면 오히려 새로운 아이디어 발상에 도움될 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI 의존도가 높아지는 것을 어떻게 방지할 수 있을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"의식적으로 AI 없이 글쓰기 연습하는 시간을 정기적으로 가지고, AI는 편집이나 발전 단계에서만 활용하는 방식이 효과적이에요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT를 사용하면서 발생하는 정서적 영향이 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"편리함과 효율성 뒤에 창작 불안, 진정성 결여 같은 감정적 부작용이 숨어있을 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT에게 감정표현을 요구하는 것의 심리적 의미는 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"종종 우리가 표현하기 어려운 감정을 대리 표현하게 하거나, 디지털 환경에서 점점 무뎌지는 우리 감정을 보완하려는 시도일 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI와의 건강한 창작 관계는 어떤 모습일까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"자신의 목소리와 비전은 유지하면서 AI를 도구이자 협력자로 활용하고, 정기적으로 의존도를 점검하는 관계가 이상적이에요.\"\n    }\n  }]\n}",
        "guid": "http://muzbox.tistory.com/483573",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "ai 의존성",
          "gpt 사용 패턴",
          "감정적 회피",
          "기술과 자아",
          "디지털 자아",
          "인공지능 관계",
          "자동화 중독",
          "창작 불안",
          "창작 심리학",
          "창작자 정체성"
        ],
        "isoDate": "2025-04-22T02:36:56.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "오래된 노트북 재활용하는 7가지 실용적인 방법",
        "link": "http://muzbox.tistory.com/483572",
        "pubDate": "Mon, 21 Apr 2025 07:03:28 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483572#entry483572comment",
        "content": "<p data-ke-size=\"size16\">그냥 버리기엔 아까운 오래된 노트북, 이렇게 활용해보세요! 미디어 서버부터 디지털 액자까지 실용적인 재활용 방법 7가지를 소개합니다. 버리지 말고 새 생명을 불어넣어 보세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/dgEVdM/btsNsTZKM4u/HWH4mgp3IowBsUzxrZsEf1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dgEVdM/btsNsTZKM4u/HWH4mgp3IowBsUzxrZsEf1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dgEVdM/btsNsTZKM4u/HWH4mgp3IowBsUzxrZsEf1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdgEVdM%2FbtsNsTZKM4u%2FHWH4mgp3IowBsUzxrZsEf1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"오래된 노트북 재활용하는 7가지 실용적인 방법\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">요즘 기술이 너무 빨리 발전해서 3-4년만 지나도 노트북이 구식이 되는 느낌 있으시죠? 저도 얼마 전에 새 노트북으로 교체하면서 5년 된 구형 노트북을 어떻게 처리할지 한참 고민했어요. 그냥 버리자니 아직 작동도 잘 되고 뭔가 아깝다는 생각이 들더라고요. 혹시 여러분도 비슷한 고민 하고 계신가요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서 요즘 전자기기는 너무 쉽게 버려지는 것 같아요. 환경 문제도 심각하고 자원 낭비도 크죠. 그래서 제가 직접 찾아보고 시도해본 오래된 노트북 재활용 방법들을 공유해드리려고 합니다. 생각보다 정말 쓸모있는 용도가 많더라고요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>1. 홈 미디어 서버로 변신시키기  </b></span></h2>\n<p data-ke-size=\"size16\">제가 가장 먼저 시도해본 방법인데요, 구형 노트북을 미디어 서버로 활용하는 거예요. 영화, 음악, 사진 같은 미디어 파일을 한 곳에 모아두고 집 안 어디서든 접근할 수 있게 만드는 거죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Plex나 Kodi 같은 무료 미디어 서버 소프트웨어를 설치하면 금방 세팅할 수 있어요. 저는 Plex를 선택했는데, 직관적인 인터페이스가 마음에 들었거든요. 설치 후에는 TV, 스마트폰, 태블릿 등 다양한 기기에서 콘텐츠를 스트리밍할 수 있어요.</p>\n<p data-ke-size=\"size16\">\"근데 노트북 성능이 너무 안 좋으면 어떡하지?\" 걱정할 필요 없어요. 미디어 서버는 최신 게임이나 고사양 작업을 하는 게 아니라서 좀 오래된 노트북으로도 충분히 잘 돌아가요. 저도 2015년식 노트북으로 4K 영상까지 무리 없이 스트리밍하고 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>2. NAS(네트워크 스토리지)로 활용하기  </b></span></h2>\n<p data-ke-size=\"size16\">파일 저장과 공유에 초점을 맞추고 싶다면 NAS로 활용하는 것도 좋은 방법이에요. 가정이나 소규모 사무실에서 모든 중요 문서와 파일을 한곳에 모아두고 네트워크로 접근할 수 있게 해주죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">FreeNAS 같은 오픈소스 OS를 설치하면 전문 NAS 장비처럼 사용할 수 있어요. 물론 노트북에 하드 드라이브 용량이 부족하다면 외장 하드를 연결해서 확장할 수도 있고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이렇게 구성해두면 백업 시스템으로도 완벽하게 활용할 수 있어요. 중요한 자료들이 클라우드에만 의존하지 않고 내 집에서 안전하게 보관되니까 개인정보 보호 측면에서도 좋더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>3. 홈 오토메이션 허브 만들기  </b></span></h2>\n<p data-ke-size=\"size16\">스마트홈에 관심 있으신 분들이라면 오래된 노트북을 홈 오토메이션 허브로 변신시켜보는 건 어떨까요? 이게 진짜 신기한 게, 스마트 조명, 온도계, 보안 카메라 같은 IoT 기기들을 한 곳에서 제어할 수 있는 중앙 시스템을 만들 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Home Assistant나 OpenHAB 같은 오픈소스 플랫폼을 설치하면 금방 세팅할 수 있어요. 저는 Home Assistant를 써봤는데, 처음엔 살짝 어려웠지만 일단 설정해두니 정말 편리하더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 퇴근 시간에 맞춰서 집의 온도를 자동으로 조절하고, 현관문이 열리면 자동으로 불이 켜지고, 밤에는 보안 모드로 전환되는 식으로 자동화를 설정해뒀어요. 상용 스마트홈 시스템을 사는 것보다 훨씬 저렴하고 커스터마이징도 마음대로 할 수 있어서 좋았습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>4. 가정용 보안 시스템으로 활용하기  </b></span></h2>\n<p data-ke-size=\"size16\">요즘 보안에 대한 관심이 높아지면서 CCTV나 보안 카메라를 설치하는 가정이 많은데요, 생각해보니 웹캠이 달린 노트북이 이미 카메라 역할을 할 수 있잖아요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">iSpy나 ZoneMinder 같은 무료 보안 소프트웨어를 설치하면 노트북을 통해 집안을 모니터링할 수 있어요. 움직임이 감지되면 알림을 보내거나 영상을 녹화하는 기능도 있고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제가 작년에 여행 갔을 때 시험 삼아 써봤는데, 스마트폰으로 집 안 상황을 실시간으로 확인할 수 있어서 정말 마음이 놓이더라고요. 혹시 반려동물이 있으신 분들은 집에 혼자 있는 반려동물을 체크하는 용도로도 좋을 것 같아요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>5. 디지털 액자로 변신시키기  ️</b></span></h2>\n<p data-ke-size=\"size16\">좀 더 가벼운 용도로는 디지털 액자가 있어요. 노트북 화면이 TV보다는 작지만 일반 액자보다는 크니까 가족 사진이나 좋아하는 작품을 전시하기에 딱 좋은 크기죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">윈도우 기본 슬라이드쇼 기능을 사용해도 되고, 좀 더 다양한 기능을 원한다면 PhotoSync나 Screenly 같은 앱을 설치해도 좋아요. 노트북을 거실이나 주방에 놓아두고 추억의 사진들이 슬라이드쇼로 넘어가게 하면 인테리어 효과도 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특히 부모님께 선물로 드리면 정말 좋아하실 것 같아요. 제 엄마는 제가 이렇게 세팅해드렸더니 손주들 사진을 계속 볼 수 있어서 너무 좋아하셨어요. 가끔 구글 포토와 연동해두면 자동으로 새 사진도 추가되니까 편리하더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>6. 학습용 컴퓨터로 재탄생  </b></span></h2>\n<p data-ke-size=\"size16\">가정에 어린 자녀가 있다면, 오래된 노트북을 아이들 전용 학습 컴퓨터로 만들어주는 것도 좋은 방법이에요. 최신 게임은 돌아가지 않을 수 있지만, 인터넷 검색이나 문서 작업, 교육용 앱을 사용하는 데는 전혀 문제가 없거든요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Linux 기반의 가벼운 OS(예: Lubuntu, Linux Mint)를 설치하면 성능이 더 좋아질 수 있어요. 그리고 유해 콘텐츠 차단 프로그램을 설치해서 안전한 인터넷 환경을 만들어 줄 수도 있고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">요즘은 코딩 교육이 중요해지면서 Scratch나 Python 같은 프로그래밍 언어 학습 환경을 구축해주는 것도 좋은 아이디어예요. 아이들이 컴퓨터 사용법과 함께 디지털 리터러시를 기를 수 있는 좋은 기회가 될 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>7. 리눅스로 새 생명 불어넣기  </b></span></h2>\n<p data-ke-size=\"size16\">마지막으로, 가장 기본적이면서도 효과적인 방법은 가벼운 리눅스 OS를 설치해서 노트북에 새 생명을 불어넣는 거예요. 윈도우보다 훨씬 적은 시스템 자원으로 돌아가는 리눅스 배포판이 많거든요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Xubuntu, Lubuntu, Linux Lite 같은 가벼운 배포판은 오래된 하드웨어에서도 놀랍도록 빠르게 작동해요. 저도 7년 된 노트북에 Xubuntu를 설치했더니 속도가 확 빨라져서 깜짝 놀랐어요. 인터넷 서핑, 문서 작업, 간단한 그래픽 작업 정도는 전혀 문제없이 할 수 있더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">무엇보다 리눅스는 무료이고 바이러스에 대한 걱정도 적어서 제2의 컴퓨터로 쓰기에 정말 좋아요. 처음에는 좀 낯설 수 있지만, 기본적인 사용법만 익히면 생각보다 어렵지 않아요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1014\" data-origin-height=\"573\"><span data-url=\"https://blog.kakaocdn.net/dn/c7dHBZ/btsNo0ss29n/N2BJQfJsKWixWeN6UNyaFk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c7dHBZ/btsNo0ss29n/N2BJQfJsKWixWeN6UNyaFk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c7dHBZ/btsNo0ss29n/N2BJQfJsKWixWeN6UNyaFk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc7dHBZ%2FbtsNo0ss29n%2FN2BJQfJsKWixWeN6UNyaFk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"오래된 노트북 재활용하는 7가지 실용적인 방법\" loading=\"lazy\" width=\"1014\" height=\"573\" data-origin-width=\"1014\" data-origin-height=\"573\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>마무리</b></span></h2>\n<p data-ke-size=\"size16\">자, 이렇게 오래된 노트북을 재활용할 수 있는 7가지 방법을 소개해드렸는데요. 어떤가요? 생각보다 활용도가 높죠? 버리기 전에 이런 방법들을 한번 시도해보시면 어떨까요?</p>\n<p data-ke-size=\"size16\">저는 개인적으로 미디어 서버와 가끔 보안 카메라로 번갈아가며 사용하고 있는데, 정말 만족스러워요. 안 쓰는 물건에 새 생명을 불어넣는다는 느낌도 좋고, 환경 보호에도 조금이나마 기여한다는 생각이 들어서 뿌듯하더라고요.</p>\n<p data-ke-size=\"size16\">여러분은 어떤 방법이 가장 끌리시나요? 혹시 다른 재활용 방법을 알고 계시다면 댓글로 공유해주세요! 서로의 아이디어를 나누면 더 좋은 방법들이 나올 것 같아요.  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>FAQ</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 노트북이 너무 느려서 재활용이 가능할까요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 가능합니다. 가벼운 리눅스 OS를 설치하거나 단일 목적(미디어 서버, 디지털 액자 등)으로 활용하면 오래된 노트북도 충분히 사용할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: 배터리가 거의 방전되는 노트북도 활용 가능한가요?</b></p>\n<p data-ke-size=\"size16\">A: 전원에 연결해 사용하는 용도(서버, 보안 카메라 등)로는 배터리 상태와 무관하게 활용 가능합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 리눅스 설치가 어렵지 않을까요?</b></p>\n<p data-ke-size=\"size16\">A: 요즘 리눅스는 사용자 친화적으로 많이 개선되었습니다. Ubuntu나 Mint 같은 배포판은 설치 과정이 윈도우와 비슷할 정도로 쉬워요.</p>\n<p data-ke-size=\"size16\"><b>Q: 미디어 서버 구축 시 저장 공간이 부족하다면?</b></p>\n<p data-ke-size=\"size16\">A: 외장 하드드라이브를 연결하여 저장 공간을 확장할 수 있습니다. USB 3.0 포트가 있다면 더 빠른 속도로 사용 가능해요.</p>\n<p data-ke-size=\"size16\"><b>Q: 오래된 노트북을 재활용하는 것이 환경에 얼마나 도움이 될까요?</b></p>\n<p data-ke-size=\"size16\">A: 전자 폐기물 감소와 자원 절약에 큰 도움이 됩니다. 노트북 한 대를 제조하는 데 많은 자원과 에너지가 소비되므로, 수명을 연장하는 것은 환경 보호에 직접적인 기여가 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"노트북이 너무 느려서 재활용이 가능할까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"네, 가능합니다. 가벼운 리눅스 OS를 설치하거나 단일 목적(미디어 서버, 디지털 액자 등)으로 활용하면 오래된 노트북도 충분히 사용할 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"배터리가 거의 방전되는 노트북도 활용 가능한가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"전원에 연결해 사용하는 용도(서버, 보안 카메라 등)로는 배터리 상태와 무관하게 활용 가능합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"리눅스 설치가 어렵지 않을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"요즘 리눅스는 사용자 친화적으로 많이 개선되었습니다. Ubuntu나 Mint 같은 배포판은 설치 과정이 윈도우와 비슷할 정도로 쉬워요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"미디어 서버 구축 시 저장 공간이 부족하다면?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"외장 하드드라이브를 연결하여 저장 공간을 확장할 수 있습니다. USB 3.0 포트가 있다면 더 빠른 속도로 사용 가능해요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"오래된 노트북을 재활용하는 것이 환경에 얼마나 도움이 될까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"전자 폐기물 감소와 자원 절약에 큰 도움이 됩니다. 노트북 한 대를 제조하는 데 많은 자원과 에너지가 소비되므로, 수명을 연장하는 것은 환경 보호에 직접적인 기여가 됩니다.\"\n    }\n  }]\n}\n</script>",
        "contentSnippet": "그냥 버리기엔 아까운 오래된 노트북, 이렇게 활용해보세요! 미디어 서버부터 디지털 액자까지 실용적인 재활용 방법 7가지를 소개합니다. 버리지 말고 새 생명을 불어넣어 보세요!\n\n\n \n요즘 기술이 너무 빨리 발전해서 3-4년만 지나도 노트북이 구식이 되는 느낌 있으시죠? 저도 얼마 전에 새 노트북으로 교체하면서 5년 된 구형 노트북을 어떻게 처리할지 한참 고민했어요. 그냥 버리자니 아직 작동도 잘 되고 뭔가 아깝다는 생각이 들더라고요. 혹시 여러분도 비슷한 고민 하고 계신가요?\n \n솔직히 말해서 요즘 전자기기는 너무 쉽게 버려지는 것 같아요. 환경 문제도 심각하고 자원 낭비도 크죠. 그래서 제가 직접 찾아보고 시도해본 오래된 노트북 재활용 방법들을 공유해드리려고 합니다. 생각보다 정말 쓸모있는 용도가 많더라고요!\n \n1. 홈 미디어 서버로 변신시키기  \n제가 가장 먼저 시도해본 방법인데요, 구형 노트북을 미디어 서버로 활용하는 거예요. 영화, 음악, 사진 같은 미디어 파일을 한 곳에 모아두고 집 안 어디서든 접근할 수 있게 만드는 거죠.\n \nPlex나 Kodi 같은 무료 미디어 서버 소프트웨어를 설치하면 금방 세팅할 수 있어요. 저는 Plex를 선택했는데, 직관적인 인터페이스가 마음에 들었거든요. 설치 후에는 TV, 스마트폰, 태블릿 등 다양한 기기에서 콘텐츠를 스트리밍할 수 있어요.\n\"근데 노트북 성능이 너무 안 좋으면 어떡하지?\" 걱정할 필요 없어요. 미디어 서버는 최신 게임이나 고사양 작업을 하는 게 아니라서 좀 오래된 노트북으로도 충분히 잘 돌아가요. 저도 2015년식 노트북으로 4K 영상까지 무리 없이 스트리밍하고 있어요.\n \n2. NAS(네트워크 스토리지)로 활용하기  \n파일 저장과 공유에 초점을 맞추고 싶다면 NAS로 활용하는 것도 좋은 방법이에요. 가정이나 소규모 사무실에서 모든 중요 문서와 파일을 한곳에 모아두고 네트워크로 접근할 수 있게 해주죠.\n \nFreeNAS 같은 오픈소스 OS를 설치하면 전문 NAS 장비처럼 사용할 수 있어요. 물론 노트북에 하드 드라이브 용량이 부족하다면 외장 하드를 연결해서 확장할 수도 있고요.\n \n이렇게 구성해두면 백업 시스템으로도 완벽하게 활용할 수 있어요. 중요한 자료들이 클라우드에만 의존하지 않고 내 집에서 안전하게 보관되니까 개인정보 보호 측면에서도 좋더라고요.\n \n3. 홈 오토메이션 허브 만들기  \n스마트홈에 관심 있으신 분들이라면 오래된 노트북을 홈 오토메이션 허브로 변신시켜보는 건 어떨까요? 이게 진짜 신기한 게, 스마트 조명, 온도계, 보안 카메라 같은 IoT 기기들을 한 곳에서 제어할 수 있는 중앙 시스템을 만들 수 있어요.\n \nHome Assistant나 OpenHAB 같은 오픈소스 플랫폼을 설치하면 금방 세팅할 수 있어요. 저는 Home Assistant를 써봤는데, 처음엔 살짝 어려웠지만 일단 설정해두니 정말 편리하더라고요.\n \n예를 들어, 퇴근 시간에 맞춰서 집의 온도를 자동으로 조절하고, 현관문이 열리면 자동으로 불이 켜지고, 밤에는 보안 모드로 전환되는 식으로 자동화를 설정해뒀어요. 상용 스마트홈 시스템을 사는 것보다 훨씬 저렴하고 커스터마이징도 마음대로 할 수 있어서 좋았습니다.\n \n4. 가정용 보안 시스템으로 활용하기  \n요즘 보안에 대한 관심이 높아지면서 CCTV나 보안 카메라를 설치하는 가정이 많은데요, 생각해보니 웹캠이 달린 노트북이 이미 카메라 역할을 할 수 있잖아요?\n \niSpy나 ZoneMinder 같은 무료 보안 소프트웨어를 설치하면 노트북을 통해 집안을 모니터링할 수 있어요. 움직임이 감지되면 알림을 보내거나 영상을 녹화하는 기능도 있고요.\n \n제가 작년에 여행 갔을 때 시험 삼아 써봤는데, 스마트폰으로 집 안 상황을 실시간으로 확인할 수 있어서 정말 마음이 놓이더라고요. 혹시 반려동물이 있으신 분들은 집에 혼자 있는 반려동물을 체크하는 용도로도 좋을 것 같아요!\n \n5. 디지털 액자로 변신시키기  ️\n좀 더 가벼운 용도로는 디지털 액자가 있어요. 노트북 화면이 TV보다는 작지만 일반 액자보다는 크니까 가족 사진이나 좋아하는 작품을 전시하기에 딱 좋은 크기죠.\n \n윈도우 기본 슬라이드쇼 기능을 사용해도 되고, 좀 더 다양한 기능을 원한다면 PhotoSync나 Screenly 같은 앱을 설치해도 좋아요. 노트북을 거실이나 주방에 놓아두고 추억의 사진들이 슬라이드쇼로 넘어가게 하면 인테리어 효과도 있어요.\n \n특히 부모님께 선물로 드리면 정말 좋아하실 것 같아요. 제 엄마는 제가 이렇게 세팅해드렸더니 손주들 사진을 계속 볼 수 있어서 너무 좋아하셨어요. 가끔 구글 포토와 연동해두면 자동으로 새 사진도 추가되니까 편리하더라고요.\n \n6. 학습용 컴퓨터로 재탄생  \n가정에 어린 자녀가 있다면, 오래된 노트북을 아이들 전용 학습 컴퓨터로 만들어주는 것도 좋은 방법이에요. 최신 게임은 돌아가지 않을 수 있지만, 인터넷 검색이나 문서 작업, 교육용 앱을 사용하는 데는 전혀 문제가 없거든요.\n \nLinux 기반의 가벼운 OS(예: Lubuntu, Linux Mint)를 설치하면 성능이 더 좋아질 수 있어요. 그리고 유해 콘텐츠 차단 프로그램을 설치해서 안전한 인터넷 환경을 만들어 줄 수도 있고요.\n \n요즘은 코딩 교육이 중요해지면서 Scratch나 Python 같은 프로그래밍 언어 학습 환경을 구축해주는 것도 좋은 아이디어예요. 아이들이 컴퓨터 사용법과 함께 디지털 리터러시를 기를 수 있는 좋은 기회가 될 수 있어요.\n \n7. 리눅스로 새 생명 불어넣기  \n마지막으로, 가장 기본적이면서도 효과적인 방법은 가벼운 리눅스 OS를 설치해서 노트북에 새 생명을 불어넣는 거예요. 윈도우보다 훨씬 적은 시스템 자원으로 돌아가는 리눅스 배포판이 많거든요.\n \nXubuntu, Lubuntu, Linux Lite 같은 가벼운 배포판은 오래된 하드웨어에서도 놀랍도록 빠르게 작동해요. 저도 7년 된 노트북에 Xubuntu를 설치했더니 속도가 확 빨라져서 깜짝 놀랐어요. 인터넷 서핑, 문서 작업, 간단한 그래픽 작업 정도는 전혀 문제없이 할 수 있더라고요.\n \n무엇보다 리눅스는 무료이고 바이러스에 대한 걱정도 적어서 제2의 컴퓨터로 쓰기에 정말 좋아요. 처음에는 좀 낯설 수 있지만, 기본적인 사용법만 익히면 생각보다 어렵지 않아요.\n\n\n마무리\n자, 이렇게 오래된 노트북을 재활용할 수 있는 7가지 방법을 소개해드렸는데요. 어떤가요? 생각보다 활용도가 높죠? 버리기 전에 이런 방법들을 한번 시도해보시면 어떨까요?\n저는 개인적으로 미디어 서버와 가끔 보안 카메라로 번갈아가며 사용하고 있는데, 정말 만족스러워요. 안 쓰는 물건에 새 생명을 불어넣는다는 느낌도 좋고, 환경 보호에도 조금이나마 기여한다는 생각이 들어서 뿌듯하더라고요.\n여러분은 어떤 방법이 가장 끌리시나요? 혹시 다른 재활용 방법을 알고 계시다면 댓글로 공유해주세요! 서로의 아이디어를 나누면 더 좋은 방법들이 나올 것 같아요.  \nFAQ\nQ: 노트북이 너무 느려서 재활용이 가능할까요?\nA: 네, 가능합니다. 가벼운 리눅스 OS를 설치하거나 단일 목적(미디어 서버, 디지털 액자 등)으로 활용하면 오래된 노트북도 충분히 사용할 수 있어요.\nQ: 배터리가 거의 방전되는 노트북도 활용 가능한가요?\nA: 전원에 연결해 사용하는 용도(서버, 보안 카메라 등)로는 배터리 상태와 무관하게 활용 가능합니다.\nQ: 리눅스 설치가 어렵지 않을까요?\nA: 요즘 리눅스는 사용자 친화적으로 많이 개선되었습니다. Ubuntu나 Mint 같은 배포판은 설치 과정이 윈도우와 비슷할 정도로 쉬워요.\nQ: 미디어 서버 구축 시 저장 공간이 부족하다면?\nA: 외장 하드드라이브를 연결하여 저장 공간을 확장할 수 있습니다. USB 3.0 포트가 있다면 더 빠른 속도로 사용 가능해요.\nQ: 오래된 노트북을 재활용하는 것이 환경에 얼마나 도움이 될까요?\nA: 전자 폐기물 감소와 자원 절약에 큰 도움이 됩니다. 노트북 한 대를 제조하는 데 많은 자원과 에너지가 소비되므로, 수명을 연장하는 것은 환경 보호에 직접적인 기여가 됩니다.\n \n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"노트북이 너무 느려서 재활용이 가능할까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"네, 가능합니다. 가벼운 리눅스 OS를 설치하거나 단일 목적(미디어 서버, 디지털 액자 등)으로 활용하면 오래된 노트북도 충분히 사용할 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"배터리가 거의 방전되는 노트북도 활용 가능한가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"전원에 연결해 사용하는 용도(서버, 보안 카메라 등)로는 배터리 상태와 무관하게 활용 가능합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"리눅스 설치가 어렵지 않을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"요즘 리눅스는 사용자 친화적으로 많이 개선되었습니다. Ubuntu나 Mint 같은 배포판은 설치 과정이 윈도우와 비슷할 정도로 쉬워요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"미디어 서버 구축 시 저장 공간이 부족하다면?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"외장 하드드라이브를 연결하여 저장 공간을 확장할 수 있습니다. USB 3.0 포트가 있다면 더 빠른 속도로 사용 가능해요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"오래된 노트북을 재활용하는 것이 환경에 얼마나 도움이 될까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"전자 폐기물 감소와 자원 절약에 큰 도움이 됩니다. 노트북 한 대를 제조하는 데 많은 자원과 에너지가 소비되므로, 수명을 연장하는 것은 환경 보호에 직접적인 기여가 됩니다.\"\n    }\n  }]\n}",
        "guid": "http://muzbox.tistory.com/483572",
        "categories": [
          "윈도우 사용팁/하드웨어",
          "NAS 구축",
          "가정용 보안 시스템",
          "노트북 재활용",
          "디지털 액자",
          "리눅스 설치",
          "미디어 서버 구축",
          "오래된 노트북 활용",
          "전자기기 재활용",
          "학습용 컴퓨터",
          "홈 오토메이션"
        ],
        "isoDate": "2025-04-20T22:03:28.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "검색엔진 상위 노출을 위한 무료 프로그램, 키워드 파이터로 SEO 최적화하는 법",
        "link": "http://muzbox.tistory.com/483571",
        "pubDate": "Thu, 17 Apr 2025 19:33:06 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483571#entry483571comment",
        "content": "<p data-ke-size=\"size16\">블로그 방문자수 고민 끝! 키워드 파이터 V2로 SEO 최적화하고 상위노출 비결을 찾아보세요. 무료인데 실시간 트렌드부터 제목 생성까지 한번에! 클릭 한 번으로 블로그 트래픽이 두 배로 늘어날 수 있어요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/4tZKN/btsNo9W0MgL/4VRDExwXGs7p7CKu6dKjU1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/4tZKN/btsNo9W0MgL/4VRDExwXGs7p7CKu6dKjU1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/4tZKN/btsNo9W0MgL/4VRDExwXGs7p7CKu6dKjU1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F4tZKN%2FbtsNo9W0MgL%2F4VRDExwXGs7p7CKu6dKjU1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"검색엔진 상위 노출을 위한 무료 프로그램, 키워드 파이터로 SEO 최적화하는 법\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">요즘 블로그 운영하면서 방문자수 고민 안 해본 사람 있을까요? 솔직히 저도 블로그 시작하고 한동안은 그냥 '좋은 글 쓰면 사람들이 알아서 찾아오겠지' 하는 안일한 생각으로 운영했어요. 근데 현실은? 아무리 좋은 글 써도 구글이나 네이버가 내 글을 상위에 노출시켜주지 않으면 그냥 인터넷 바다에 던져진 돌맹이 신세더라고요.  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그래서 요즘은 SEO(검색엔진 최적화)와 키워드 선정에 진심인데요. 오늘은 블로그 운영자, 콘텐츠 크리에이터분들에게 정말 유용한 무료 프로그램을 소개해드리려고 해요. 바로 '<span style=\"color: #ee2323;\"><b>키워드 파이터 V2</b></span>'인데, 이 프로그램 하나면 어떤 키워드로 글을 써야 할지, 어떻게 제목을 지어야 할지 고민이 싹 사라질 거예요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  키워드 파이터 V2가 뭐길래?</b></span></h2>\n<p data-ke-size=\"size16\">키워드 파이터 V2는 블로그, 유튜브, 쇼핑몰 운영자들을 위한 올인원 키워드 발굴 &amp; 분석 툴이에요. 제가 일주일 전부터 써봤는데, 진짜 이런 프로그램이 무료라니...싶을 정도로 기능이 알차요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">가장 마음에 드는 점은 키워드 분석부터 블로그 제목 생성까지 원스톱으로 가능하다는 건데요. 특히 요즘처럼 경쟁이 치열한 상황에서 '어떤 키워드로 글을 써야 노출이 잘 될까?'라는 고민을 해결해주는 정말 고마운 프로그램이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>⚙️ 주요 기능과 사용법 살펴보기</b></span></h2>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/454478220\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/qS5Rf/hyYIkqMoa7/ivIxC54hoYKva66b76P350/img.jpg?width=1330&amp;height=1080&amp;face=0_0_1330_1080,https://scrap.kakaocdn.net/dn/kpVF8/hyYFBzWtd5/b0QKFZtmcQlj34ifOypjv0/img.jpg?width=1330&amp;height=1080&amp;face=0_0_1330_1080\" data-video-width=\"860\" data-video-height=\"698\" data-video-origin-width=\"860\" data-video-origin-height=\"698\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/454478220?service=daum_tistory\" width=\"860\" height=\"698\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 실시간 트렌드 키워드 분석</span></h3>\n<p data-ke-size=\"size16\">트렌드 탭에서는 구글 트렌드와 시그널(옛 네이버 실검과 비슷한) 실시간 인기 검색어를 한눈에 볼 수 있어요. '실시간 검색어 일괄 조회' 버튼만 누르면 현재 사람들이 많이 검색하는 키워드가 쫙 나오죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이렇게 뜨는 키워드 중에서 내 블로그 주제와 연관된 것이 있다면? 바로 그날의 트렌드에 맞는 글을 쓸 수 있는 절호의 기회예요! 제가 지난주 '메타버스'라는 키워드가 실시간 검색어에 올라왔을 때 바로 관련 글을 썼더니 평소보다 3배 이상 방문자가 늘었어요. 이게 바로 트렌드 파악의 힘이죠!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 자동완성 키워드 수집</span></h3>\n<p data-ke-size=\"size16\">그 다음으로 유용한 건 자동완성 키워드 기능이에요. 구글, 네이버, 빙의 자동완성 키워드를 한 번에 수집해주는데, 이게 왜 중요하냐면, 자동완성 키워드는 실제로 사람들이 많이 검색하는 키워드를 보여주기 때문이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어 '다이어트'를 검색하면 '다이어트 식단', '다이어트 운동', '다이어트 방법' 같은 자동완성 키워드가 뜨는데, 이런 키워드들은 실제 사용자들이 관심있어 하는 정보를 보여주는 거예요. 그래서 이걸 활용하면 독자들이 정말 알고 싶어하는 내용으로 글을 쓸 수 있죠.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 키워드 분석 및 경쟁도 체크</span></h3>\n<p data-ke-size=\"size16\">이 기능이 진짜 핵심인데요, '키워드 분석' 탭에서는 검색한 키워드의 월간 검색량(PC/모바일), 총 조회수, 문서 수, 그리고 경쟁 비율까지 분석해줘요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어 '제주도 여행'이라는 키워드를 검색했다고 쳐볼게요. 그러면 PC 검색량 5만, 모바일 검색량 10만, 문서 수 50만 개 정도가 나올 수 있어요. 이 정보를 보고 '아, 이 키워드는 검색량은 많지만 이미 경쟁이 너무 심하구나'라고 판단할 수 있죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">근데 더 놀라운 건 '관련 키워드' 목록도 함께 보여준다는 거예요. '제주도 여행'에서 파생된 '제주도 여행 코스', '제주도 여행 맛집', '제주도 여행 렌트카' 같은 연관 키워드를 확인할 수 있어요. 이 중에서 검색량은 적당히 있는데 경쟁은 덜한 키워드를 찾아내는 게 SEO의 핵심 전략이죠!</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">4. SEO 최적화 블로그 제목 자동 생성</span></h3>\n<p data-ke-size=\"size16\">이 기능은 정말 신세계였어요. 키워드 분석 결과에서 '키워드 조합으로 SEO 최적화 블로그 제목 만들기' 버튼을 누르면 자동으로 GPTS 사이트로 연결되는데요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">거기서 분석한 키워드들을 붙여넣기만 하면 GPTS가 알아서 SEO에 최적화된 블로그 제목을 여러 개 제안해줘요. 제가 얼마 전에 '홈카페 원두추천'이라는 키워드로 해봤는데, '집에서 즐기는 프리미엄 커피, 바리스타도 인정한 원두 BEST 5', '홈카페 격이 다른 맛, 가성비 원두 추천 및 활용법 총정리' 같은 제목을 제안해줬어요. 이런 제목들은 단순히 키워드만 넣은 것보다 클릭율이 훨씬 높더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  실전에서 키워드 파이터 활용하기</b></span></h2>\n<p data-ke-size=\"size16\">제가 실제로 키워드 파이터를 활용해서 블로그 글을 작성한 방법을 공유할게요.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>트렌드 키워드 발굴 &rarr; 관련성 확인</b> 저는 먼저 '실시간 트렌드' 탭에서 핫한 키워드를 확인해요. 얼마 전에 '미니멀라이프'가 트렌드에 올라왔을 때, 제 블로그가 라이프스타일 관련이다 보니 이걸 놓칠 수 없었죠.</li>\n<li><b>키워드 분석으로 경쟁도 체크</b> 그 다음 '미니멀라이프'를 검색창에 넣고 키워드 분석을 해봤어요. 검색량은 꽤 있는데 경쟁이 너무 심해서, 관련 키워드 중에서 '미니멀라이프 시작하기'라는 키워드를 선택했죠. 이건 검색량도 적당하고 경쟁도 상대적으로 적었거든요.</li>\n<li><b>자동완성 키워드로 독자 의도 파악</b> 자동완성 키워드를 보니 '미니멀라이프 시작하기 팁', '미니멀라이프 시작하기 옷정리' 같은 키워드가 있더라고요. 이걸 보고 '아, 사람들은 구체적인 실천 방법을 알고 싶어하는구나'라고 파악했어요.</li>\n<li><b>최적화 제목 생성 및 콘텐츠 작성</b> 마지막으로 GPTS 제목 생성 기능을 활용해 '버리기 전에 읽어보세요, 후회 없는 미니멀라이프 시작하기 8단계 가이드'라는 제목으로 글을 작성했어요.</li>\n</ol>\n<p data-ke-size=\"size16\">결과적으로 이 글은 구글에서 '미니멀라이프 시작하기' 키워드로 검색했을 때 2페이지에 노출되었고, 평소보다 2배 이상의 트래픽을 가져왔어요. 이게 다 키워드 파이터 덕분이죠!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  실전 활용을 위한 꿀팁</b></span><b></b></h2>\n<p data-ke-size=\"size16\">\"키워드 파이터 V2\"에는 위의 핵심기능 외에도 키워드와 블로그 주제선정에 유용한 무료 GPTS 를 함께 공개하니 참고하세요.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>롱테일 키워드를 노려라</b> 메인 키워드보다는 '명사+명사+동사' 형태의 구체적인 롱테일 키워드가 경쟁이 적고 전환율이 높아요. 키워드 파이터의 관련 키워드와 자동완성 키워드에서 이런 롱테일을 찾아보세요.</li>\n<li><b>트렌드와 에버그린의 균형</b> 트렌드 키워드는 단기 트래픽에 좋지만, 에버그린 콘텐츠(시간이 지나도 가치가 있는)를 위한 키워드도 균형있게 공략하세요. 프로그램의 'GPTS 탭'에 있는 '에버그린 콘텐츠 GPT'가 이런 키워드 발굴에 도움이 돼요.</li>\n<li><b>제목에 감정을 자극하는 단어 추가</b> 키워드 파이터로 찾은 키워드에 '놀라운', '충격적인', '꼭 알아야 할' 같은 감정적 단어를 더하면 클릭율이 높아져요. 물론 너무 낚시성은 피해야겠죠!</li>\n<li><b>경쟁자 분석에 활용</b> 상위 노출된 경쟁자의 제목과 키워드를 분석해 역공략 전략을 세우는 데도 키워드 파이터가 유용해요. 그들이 놓친 틈새 키워드를 찾아내세요.</li>\n</ol>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">요즘 블로그 운영이 점점 더 경쟁이 치열해지고 있어요. 그냥 좋은 글만 쓴다고 사람들이 찾아오는 시대는 지났죠. 하지만 이런 도구의 도움을 받으면 우리 같은 개인 블로거도 큰 포털 사이트나 기업 블로그와 경쟁할 수 있어요!</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">키워드 파이터 V2는 제가 써본 무료 키워드 분석 도구 중에서 가장 실용적이고 직관적이었던 것 같아요. 특히 GPTS와의 연동 기능은 정말 혁신적이라고 생각해요. 이 글을 읽고 계신 블로거분들, 유튜버분들, 온라인 숍 운영자분들이라면 꼭 한번 사용해보시길 추천드려요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1055\" data-origin-height=\"664\"><span data-url=\"https://blog.kakaocdn.net/dn/6yFnv/btsNo3JtAGz/zTJWS0l8KGwwYglKEJL3Wk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/6yFnv/btsNo3JtAGz/zTJWS0l8KGwwYglKEJL3Wk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/6yFnv/btsNo3JtAGz/zTJWS0l8KGwwYglKEJL3Wk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F6yFnv%2FbtsNo3JtAGz%2FzTJWS0l8KGwwYglKEJL3Wk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"키워드 파이터 V2 활용팁\" loading=\"lazy\" width=\"1055\" height=\"664\" data-origin-width=\"1055\" data-origin-height=\"664\"/></span></figure>\n</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여러분의 블로그 운영 경험이나 키워드 파이터 사용 후기가 있다면 댓글로 남겨주세요. 서로의 경험을 나누다 보면 모두 함께 성장할 수 있을 거예요! 다음 포스팅에서는 제가 키워드 파이터로 발굴한 키워드로 실제 한 달간 블로그를 운영한 결과를 공유해드릴게요. 기대해주세요!  </p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\">  자주 묻는 질문 (Q&amp;A)</span></h2>\n<p data-ke-size=\"size16\"><b>Q: 키워드 파이터 V2는 어디서 다운로드할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 본 기사 하단에 다운로드 링크가 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 다른 키워드 분석 도구와 비교했을 때 장점은 무엇인가요?</b></p>\n<p data-ke-size=\"size16\">A: 무료임에도 실시간 트렌드, 키워드 분석, 자동완성, 블로그 제목 생성까지 올인원으로 제공하는 점이 가장 큰 장점입니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 유튜브나 쇼핑몰에도 활용할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 키워드 분석 원리는 동일하게 적용됩니다. 특히 'GPTS 탭'의 다양한 도구를 활용하면 각 플랫폼에 맞는 키워드 전략을 수립할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 초보자도 쉽게 사용할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 직관적인 UI와 '사용법' 탭의 상세한 가이드 덕분에 SEO 초보자도 쉽게 활용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 실제로 효과가 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 적절한 키워드 선정은 SEO의 기본이므로, 이 도구를 잘 활용하면 검색 노출과 트래픽 향상에 확실한 효과가 있습니다. 다만 양질의 콘텐츠가 뒷받침되어야 합니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"키워드 파이터 V2는 어디서 다운로드할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 구글에서 '키워드 파이터 V2 다운로드'로 검색하면 공식 배포 페이지를 찾을 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다른 키워드 분석 도구와 비교했을 때 장점은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"무료임에도 실시간 트렌드, 키워드 분석, 자동완성, 블로그 제목 생성까지 올인원으로 제공하는 점이 가장 큰 장점입니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유튜브나 쇼핑몰에도 활용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 키워드 분석 원리는 동일하게 적용됩니다. 특히 'GPTS 탭'의 다양한 도구를 활용하면 각 플랫폼에 맞는 키워드 전략을 수립할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"초보자도 쉽게 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 직관적인 UI와 '사용법' 탭의 상세한 가이드 덕분에 SEO 초보자도 쉽게 활용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"실제로 효과가 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"적절한 키워드 선정은 SEO의 기본이므로, 이 도구를 잘 활용하면 검색 노출과 트래픽 향상에 확실한 효과가 있습니다. 다만 양질의 콘텐츠가 뒷받침되어야 합니다.\"\n      }\n    }\n  ]\n}\n</script>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #006dd7;\">  프로그램 다운로드</span></h2>\n<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-8195497734535830\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<h4 data-ke-size=\"size20\">&nbsp;</h4>\n<h4 data-ke-size=\"size20\"><b>standalone 버전 (리소스 파일들을 분리해서 폴더로)&nbsp;</b></h4>\n<p><figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/erEvCd/btsNsjYlnyL/yvLJlOxfqIMleUuV6DzvEk/keyword_fighter_v2.z01?attach=1&amp;knm=tfile.z01\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">keyword_fighter_v2.z01</span></div>\n<div class=\"size\">19.53MB</div>\n</div>\n  </a></figure>\n<figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/tO39t/btsNpT7dsMf/FU77PpsLmfPeSk96LiMwi1/keyword_fighter_v2.z02?attach=1&amp;knm=tfile.z02\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">keyword_fighter_v2.z02</span></div>\n<div class=\"size\">19.53MB</div>\n</div>\n  </a></figure>\n<figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/8yXo2/btsNpxcgpWS/3oTJ8XfUk9vwN2RkgXroB1/keyword_fighter_v2.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">keyword_fighter_v2.zip</span></div>\n<div class=\"size\">7.35MB</div>\n</div>\n  </a></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">압축파일 푸신 후 keyword_fighter v2 를 실행하세요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"684\" data-origin-height=\"649\"><span data-url=\"https://blog.kakaocdn.net/dn/DOpFl/btsNu1Xexi9/W13krPsQkz2tqlOUuFCyg0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/DOpFl/btsNu1Xexi9/W13krPsQkz2tqlOUuFCyg0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/DOpFl/btsNu1Xexi9/W13krPsQkz2tqlOUuFCyg0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FDOpFl%2FbtsNu1Xexi9%2FW13krPsQkz2tqlOUuFCyg0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"684\" height=\"649\" data-origin-width=\"684\" data-origin-height=\"649\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">설치후 보안 프로그램에 탐지가 되면 아래와 같이 해당 실행파일 또는 폴더를 제외로 등록하면 됩니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"805\" data-origin-height=\"638\"><span data-url=\"https://blog.kakaocdn.net/dn/bd1tgz/btsNuFNEJij/88xXuBvw1IxX552imFUmm1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bd1tgz/btsNuFNEJij/88xXuBvw1IxX552imFUmm1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bd1tgz/btsNuFNEJij/88xXuBvw1IxX552imFUmm1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbd1tgz%2FbtsNuFNEJij%2F88xXuBvw1IxX552imFUmm1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"805\" height=\"638\" data-origin-width=\"805\" data-origin-height=\"638\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"744\" data-origin-height=\"585\"><span data-url=\"https://blog.kakaocdn.net/dn/eK8CLS/btsNt0SWiUx/n6qKVKkV3Os0kMuGY1nKUK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/eK8CLS/btsNt0SWiUx/n6qKVKkV3Os0kMuGY1nKUK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/eK8CLS/btsNt0SWiUx/n6qKVKkV3Os0kMuGY1nKUK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FeK8CLS%2FbtsNt0SWiUx%2Fn6qKVKkV3Os0kMuGY1nKUK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"744\" height=\"585\" data-origin-width=\"744\" data-origin-height=\"585\"/></span></figure>\n</p>",
        "contentSnippet": "블로그 방문자수 고민 끝! 키워드 파이터 V2로 SEO 최적화하고 상위노출 비결을 찾아보세요. 무료인데 실시간 트렌드부터 제목 생성까지 한번에! 클릭 한 번으로 블로그 트래픽이 두 배로 늘어날 수 있어요.\n\n\n \n요즘 블로그 운영하면서 방문자수 고민 안 해본 사람 있을까요? 솔직히 저도 블로그 시작하고 한동안은 그냥 '좋은 글 쓰면 사람들이 알아서 찾아오겠지' 하는 안일한 생각으로 운영했어요. 근데 현실은? 아무리 좋은 글 써도 구글이나 네이버가 내 글을 상위에 노출시켜주지 않으면 그냥 인터넷 바다에 던져진 돌맹이 신세더라고요.  \n \n그래서 요즘은 SEO(검색엔진 최적화)와 키워드 선정에 진심인데요. 오늘은 블로그 운영자, 콘텐츠 크리에이터분들에게 정말 유용한 무료 프로그램을 소개해드리려고 해요. 바로 '키워드 파이터 V2'인데, 이 프로그램 하나면 어떤 키워드로 글을 써야 할지, 어떻게 제목을 지어야 할지 고민이 싹 사라질 거예요!\n \n  키워드 파이터 V2가 뭐길래?\n키워드 파이터 V2는 블로그, 유튜브, 쇼핑몰 운영자들을 위한 올인원 키워드 발굴 & 분석 툴이에요. 제가 일주일 전부터 써봤는데, 진짜 이런 프로그램이 무료라니...싶을 정도로 기능이 알차요.\n \n가장 마음에 드는 점은 키워드 분석부터 블로그 제목 생성까지 원스톱으로 가능하다는 건데요. 특히 요즘처럼 경쟁이 치열한 상황에서 '어떤 키워드로 글을 써야 노출이 잘 될까?'라는 고민을 해결해주는 정말 고마운 프로그램이에요.\n \n⚙️ 주요 기능과 사용법 살펴보기\n\n\n\n \n1. 실시간 트렌드 키워드 분석\n트렌드 탭에서는 구글 트렌드와 시그널(옛 네이버 실검과 비슷한) 실시간 인기 검색어를 한눈에 볼 수 있어요. '실시간 검색어 일괄 조회' 버튼만 누르면 현재 사람들이 많이 검색하는 키워드가 쫙 나오죠.\n \n이렇게 뜨는 키워드 중에서 내 블로그 주제와 연관된 것이 있다면? 바로 그날의 트렌드에 맞는 글을 쓸 수 있는 절호의 기회예요! 제가 지난주 '메타버스'라는 키워드가 실시간 검색어에 올라왔을 때 바로 관련 글을 썼더니 평소보다 3배 이상 방문자가 늘었어요. 이게 바로 트렌드 파악의 힘이죠!\n \n2. 자동완성 키워드 수집\n그 다음으로 유용한 건 자동완성 키워드 기능이에요. 구글, 네이버, 빙의 자동완성 키워드를 한 번에 수집해주는데, 이게 왜 중요하냐면, 자동완성 키워드는 실제로 사람들이 많이 검색하는 키워드를 보여주기 때문이에요.\n \n예를 들어 '다이어트'를 검색하면 '다이어트 식단', '다이어트 운동', '다이어트 방법' 같은 자동완성 키워드가 뜨는데, 이런 키워드들은 실제 사용자들이 관심있어 하는 정보를 보여주는 거예요. 그래서 이걸 활용하면 독자들이 정말 알고 싶어하는 내용으로 글을 쓸 수 있죠.\n3. 키워드 분석 및 경쟁도 체크\n이 기능이 진짜 핵심인데요, '키워드 분석' 탭에서는 검색한 키워드의 월간 검색량(PC/모바일), 총 조회수, 문서 수, 그리고 경쟁 비율까지 분석해줘요.\n \n예를 들어 '제주도 여행'이라는 키워드를 검색했다고 쳐볼게요. 그러면 PC 검색량 5만, 모바일 검색량 10만, 문서 수 50만 개 정도가 나올 수 있어요. 이 정보를 보고 '아, 이 키워드는 검색량은 많지만 이미 경쟁이 너무 심하구나'라고 판단할 수 있죠.\n \n근데 더 놀라운 건 '관련 키워드' 목록도 함께 보여준다는 거예요. '제주도 여행'에서 파생된 '제주도 여행 코스', '제주도 여행 맛집', '제주도 여행 렌트카' 같은 연관 키워드를 확인할 수 있어요. 이 중에서 검색량은 적당히 있는데 경쟁은 덜한 키워드를 찾아내는 게 SEO의 핵심 전략이죠!\n4. SEO 최적화 블로그 제목 자동 생성\n이 기능은 정말 신세계였어요. 키워드 분석 결과에서 '키워드 조합으로 SEO 최적화 블로그 제목 만들기' 버튼을 누르면 자동으로 GPTS 사이트로 연결되는데요.\n \n거기서 분석한 키워드들을 붙여넣기만 하면 GPTS가 알아서 SEO에 최적화된 블로그 제목을 여러 개 제안해줘요. 제가 얼마 전에 '홈카페 원두추천'이라는 키워드로 해봤는데, '집에서 즐기는 프리미엄 커피, 바리스타도 인정한 원두 BEST 5', '홈카페 격이 다른 맛, 가성비 원두 추천 및 활용법 총정리' 같은 제목을 제안해줬어요. 이런 제목들은 단순히 키워드만 넣은 것보다 클릭율이 훨씬 높더라고요.\n \n  실전에서 키워드 파이터 활용하기\n제가 실제로 키워드 파이터를 활용해서 블로그 글을 작성한 방법을 공유할게요.\n트렌드 키워드 발굴 → 관련성 확인 저는 먼저 '실시간 트렌드' 탭에서 핫한 키워드를 확인해요. 얼마 전에 '미니멀라이프'가 트렌드에 올라왔을 때, 제 블로그가 라이프스타일 관련이다 보니 이걸 놓칠 수 없었죠.\n키워드 분석으로 경쟁도 체크 그 다음 '미니멀라이프'를 검색창에 넣고 키워드 분석을 해봤어요. 검색량은 꽤 있는데 경쟁이 너무 심해서, 관련 키워드 중에서 '미니멀라이프 시작하기'라는 키워드를 선택했죠. 이건 검색량도 적당하고 경쟁도 상대적으로 적었거든요.\n자동완성 키워드로 독자 의도 파악 자동완성 키워드를 보니 '미니멀라이프 시작하기 팁', '미니멀라이프 시작하기 옷정리' 같은 키워드가 있더라고요. 이걸 보고 '아, 사람들은 구체적인 실천 방법을 알고 싶어하는구나'라고 파악했어요.\n최적화 제목 생성 및 콘텐츠 작성 마지막으로 GPTS 제목 생성 기능을 활용해 '버리기 전에 읽어보세요, 후회 없는 미니멀라이프 시작하기 8단계 가이드'라는 제목으로 글을 작성했어요.\n결과적으로 이 글은 구글에서 '미니멀라이프 시작하기' 키워드로 검색했을 때 2페이지에 노출되었고, 평소보다 2배 이상의 트래픽을 가져왔어요. 이게 다 키워드 파이터 덕분이죠!  \n \n  실전 활용을 위한 꿀팁\n\"키워드 파이터 V2\"에는 위의 핵심기능 외에도 키워드와 블로그 주제선정에 유용한 무료 GPTS 를 함께 공개하니 참고하세요.\n롱테일 키워드를 노려라 메인 키워드보다는 '명사+명사+동사' 형태의 구체적인 롱테일 키워드가 경쟁이 적고 전환율이 높아요. 키워드 파이터의 관련 키워드와 자동완성 키워드에서 이런 롱테일을 찾아보세요.\n트렌드와 에버그린의 균형 트렌드 키워드는 단기 트래픽에 좋지만, 에버그린 콘텐츠(시간이 지나도 가치가 있는)를 위한 키워드도 균형있게 공략하세요. 프로그램의 'GPTS 탭'에 있는 '에버그린 콘텐츠 GPT'가 이런 키워드 발굴에 도움이 돼요.\n제목에 감정을 자극하는 단어 추가 키워드 파이터로 찾은 키워드에 '놀라운', '충격적인', '꼭 알아야 할' 같은 감정적 단어를 더하면 클릭율이 높아져요. 물론 너무 낚시성은 피해야겠죠!\n경쟁자 분석에 활용 상위 노출된 경쟁자의 제목과 키워드를 분석해 역공략 전략을 세우는 데도 키워드 파이터가 유용해요. 그들이 놓친 틈새 키워드를 찾아내세요.\n요즘 블로그 운영이 점점 더 경쟁이 치열해지고 있어요. 그냥 좋은 글만 쓴다고 사람들이 찾아오는 시대는 지났죠. 하지만 이런 도구의 도움을 받으면 우리 같은 개인 블로거도 큰 포털 사이트나 기업 블로그와 경쟁할 수 있어요!\n키워드 파이터 V2는 제가 써본 무료 키워드 분석 도구 중에서 가장 실용적이고 직관적이었던 것 같아요. 특히 GPTS와의 연동 기능은 정말 혁신적이라고 생각해요. 이 글을 읽고 계신 블로거분들, 유튜버분들, 온라인 숍 운영자분들이라면 꼭 한번 사용해보시길 추천드려요!\n\n\n \n여러분의 블로그 운영 경험이나 키워드 파이터 사용 후기가 있다면 댓글로 남겨주세요. 서로의 경험을 나누다 보면 모두 함께 성장할 수 있을 거예요! 다음 포스팅에서는 제가 키워드 파이터로 발굴한 키워드로 실제 한 달간 블로그를 운영한 결과를 공유해드릴게요. 기대해주세요!  \n \n  자주 묻는 질문 (Q&A)\nQ: 키워드 파이터 V2는 어디서 다운로드할 수 있나요?\nA: 본 기사 하단에 다운로드 링크가 있습니다.\nQ: 다른 키워드 분석 도구와 비교했을 때 장점은 무엇인가요?\nA: 무료임에도 실시간 트렌드, 키워드 분석, 자동완성, 블로그 제목 생성까지 올인원으로 제공하는 점이 가장 큰 장점입니다.\nQ: 유튜브나 쇼핑몰에도 활용할 수 있나요?\nA: 네, 키워드 분석 원리는 동일하게 적용됩니다. 특히 'GPTS 탭'의 다양한 도구를 활용하면 각 플랫폼에 맞는 키워드 전략을 수립할 수 있습니다.\nQ: 초보자도 쉽게 사용할 수 있나요?\nA: 네, 직관적인 UI와 '사용법' 탭의 상세한 가이드 덕분에 SEO 초보자도 쉽게 활용할 수 있습니다.\nQ: 실제로 효과가 있나요?\nA: 적절한 키워드 선정은 SEO의 기본이므로, 이 도구를 잘 활용하면 검색 노출과 트래픽 향상에 확실한 효과가 있습니다. 다만 양질의 콘텐츠가 뒷받침되어야 합니다.\n \n  프로그램 다운로드\n반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n \nstandalone 버전 (리소스 파일들을 분리해서 폴더로) \n\n    \n\n    \nkeyword_fighter_v2.z01\n19.53MB\n\n\n    \n\n    \nkeyword_fighter_v2.z02\n19.53MB\n\n\n    \n\n    \nkeyword_fighter_v2.zip\n7.35MB\n\n\n \n압축파일 푸신 후 keyword_fighter v2 를 실행하세요.\n\n\n \n \n설치후 보안 프로그램에 탐지가 되면 아래와 같이 해당 실행파일 또는 폴더를 제외로 등록하면 됩니다.",
        "guid": "http://muzbox.tistory.com/483571",
        "categories": [
          "NEWS/My Self",
          "gpts",
          "SEO 최적화",
          "검색엔진 최적화",
          "구글 트렌드",
          "롱테일 키워드",
          "무료 키워드 도구",
          "블로그 검색 노출",
          "블로그 제목 생성",
          "키워드 분석",
          "키워드 파이터"
        ],
        "isoDate": "2025-04-17T10:33:06.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "더 똑똑해진 챗GPT o3와 o4-mini 공개 , 기존 모델과 차이는?",
        "link": "http://muzbox.tistory.com/483570",
        "pubDate": "Thu, 17 Apr 2025 08:39:33 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483570#entry483570comment",
        "content": "<p data-ke-size=\"size16\">OpenAI의 새 모델 o3와 o4-mini가 뭐길래 이렇게 화제인걸까요? 더 오래 생각하고, 도구를 사용하며, 이미지까지 이해하는 이 모델들이 AI의 미래를 어떻게 바꿀지 함께 알아보세요!  </p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/4B70K/btsNoPv2TY6/bQzUb4AxbrWIWdoJkwOrOk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/4B70K/btsNoPv2TY6/bQzUb4AxbrWIWdoJkwOrOk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/4B70K/btsNoPv2TY6/bQzUb4AxbrWIWdoJkwOrOk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F4B70K%2FbtsNoPv2TY6%2FbQzUb4AxbrWIWdoJkwOrOk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"더 똑똑해진 챗GPT o3와 o4-mini 공개\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">요즘 인공지능 업계는 진짜 숨 돌릴 틈이 없는 것 같아요. 오늘은 OpenAI가 또 새로운 모델을 내놨네요. 솔직히 따라가기 벅찬 느낌이랄까요? 특히 이번에 공개된 OpenAI의 o3와 o4-mini는 정말 많은 관심을 받고 있더라고요. 근데 이게 진짜 대단한 혁신인지, 아니면 그냥 마케팅 전략인지 궁금해서 한번 자세히 들여다봤어요. 여러분도 이런 고민 한번쯤 해보셨죠?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>o 시리즈가 뭘까? 그리고 이게 왜 중요할까?  </b></span></h2>\n<p data-ke-size=\"size16\">OpenAI의 새로운 o3와 o4-mini는 생각하는 시간을 더 길게 가지고 응답할 수 있도록 학습된 O 시리즈의 최신 모델입니다. 이 모델들은 지금까지 OpenAI가 출시한 모델 중 가장 똑똑한 모델로, ChatGPT의 기능에 큰 변화를 가져올 것으로 예상됩니다.</p>\n<p data-ke-size=\"size16\">특히 주목할 점은 이 모델들이 챗GPT 내의 모든 도구를 에이전트처럼 사용하고 결합할 수 있다는 것입니다. 여기에는 웹 검색, 업로드된 파일 및 기타 데이터를 Python으로 분석하는 기능, 시각적 입력에 대한 심층 추론, 심지어 이미지 생성까지 포함됩니다. 이건 진짜 획기적인 변화 아닐까요?  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 모델들은 도구를 언제, 어떻게 사용할지 추론하도록 학습되어 복잡한 문제에 대해 상세하고 사려 깊은 답변을 제공합니다. 덕분에 일반적으로 1분 이내에 더 복잡한 질문들을 효과적으로 처리할 수 있습니다. 이를 통해 다면적인 질문을 더 효과적으로 해결할 수 있게 되었고, 이는 사용자를 대신해 독립적으로 작업을 실행할 수 있는 더 에이전트형 ChatGPT를 향한 한 걸음이라고 볼 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">최첨단 추론 능력과 전체 도구 액세스의 결합된 성능은 학계 벤치마크와 실제 작업 모두에서 크게 향상된 성능으로 이어져 지능과 유용성 모두에서 새로운 표준을 세웠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>o3와 o4-mini의 차이점은 무엇일까?  </b></span></h2>\n<table style=\"border-collapse: collapse; width: 100%; margin: 15px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4a86e8; color: white;\">\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px; width: 13.4884%;\">모델</th>\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px; width: 42.3256%;\">주요 특징</th>\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px; width: 44.0698%;\">최적 사용 케이스</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px; width: 13.4884%;\"><b>OpenAI o3</b></td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px; width: 42.3256%;\">가장 강력한 추론 모델, 코딩/수학/과학/시각적 인식에서 최고 성능, o1보다 20% 더 적은 오류율</td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px; width: 44.0698%;\">복잡한 다면적 분석, 이미지/차트/그래픽 분석, 프로그래밍, 비즈니스/컨설팅, 창의적 아이디어 발상</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px; width: 13.4884%;\"><b>OpenAI o4-mini</b></td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px; width: 42.3256%;\">빠르고 비용 효율적인 추론에 최적화, 크기와 비용 대비 뛰어난 성능, AIME 2024/2025 벤치마크 1위</td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px; width: 44.0698%;\">수학, 코딩, 시각적 작업, 데이터 과학, 고용량/고처리량 필요 작업</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">OpenAI o3는 회사의 가장 강력한 추론 모델로, 코딩, 수학, 과학, 시각적 인식 등 여러 분야에서 최첨단 성능을 발휘합니다. Codeforces, SWE-bench (별도의 모델별 스캐폴드 없이), MMMU 등의 벤치마크에서 새로운 최고 성능을 기록했죠. 이 모델은 복잡한 다면적 분석이 필요하고 즉각적인 답이 명확하지 않은 복잡한 질의에 이상적입니다. 특히 이미지, 차트, 그래픽 분석과 같은 시각적 작업에서 강점을 보입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">외부 전문가들의 평가에 따르면, o3는 어려운 실제 작업에서 OpenAI o1보다 20% 더 적은 중대한 오류를 보이며, 특히 프로그래밍, 비즈니스/컨설팅, 창의적 아이디어 발상 영역에서 뛰어난 성능을 발휘합니다. 초기 테스터들은 생각의 파트너로서의 분석적 엄격함과 특히 생물학, 수학, 공학 맥락에서 새로운 가설을 생성하고 비판적으로 평가하는 능력을 강조했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">반면에, OpenAI o4-mini는 빠르고 비용 효율적인 추론에 최적화된 더 작은 모델입니다. 크기와 비용 대비 놀라운 성능을 보이며, 특히 수학, 코딩, 시각적 작업에서 뛰어납니다. AIME 2024와 2025 벤치마크에서 가장 뛰어난 성능을 보이는 모델입니다. 전문가 평가에서도 데이터 과학과 같은 분야뿐만 아니라 비-STEM 작업에서도 이전 모델인 o3-mini보다 뛰어난 성능을 보였습니다.</p>\n<p data-ke-size=\"size16\">효율성 덕분에 o3보다 훨씬 더 높은 사용 제한을 지원하여, 추론이 필요한 질문에 대해 강력한 고용량, 고처리량 옵션이 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>실제 성능은 어떨까?  </b></span></h2>\n<table style=\"border-collapse: collapse; width: 100%; margin: 15px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4a86e8; color: white;\">\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">벤치마크/작업</th>\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">o1</th>\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">o3-mini</th>\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">o3</th>\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">o4-mini</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">AIME 2024 (경쟁 수학)</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">74.3%</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">87.3%</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">91.6%</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\"><b>93.4%</b></td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">Codeforces (경쟁 코딩)</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">1891</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">2073</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\"><b>2706</b></td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">2719</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">MMMU (대학 수준 시각적 문제 해결)</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">77.6%</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">-</td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\"><b>82.9%</b></td>\n<td style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">81.6%</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">벤치마크 성능을 보면 정말 놀랍습니다. 외부 전문가 평가자들은 두 모델 모두 향상된 명령 준수와 이전 모델보다 더 유용하고 검증 가능한 응답을 보여준다고 평가했습니다. 이는 향상된 지능과 웹 소스의 통합 덕분입니다. 이전 추론 모델 반복과 비교할 때, 이 두 모델은 특히 기억과 과거 대화를 참조하여 응답을 더 개인화하고 관련성을 높이는 데 있어 더 자연스럽고 대화적이라고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">OpenAI o3는 ChatGPT 내 전체 도구 접근권과 함께 API를 통한 사용자 지정 도구에도 접근할 수 있습니다. 이 모델들은 문제 해결 방법을 추론하고, 도구를 언제, 어떻게 사용할지 선택하여 일반적으로 1분 이내에 올바른 출력 형식으로 상세하고 사려 깊은 답변을 빠르게 생성하도록 학습되었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 사용자가 \"캘리포니아의 여름 에너지 사용량이 작년과 비교하여 어떻게 될까요?\"라고 물을 수 있습니다. 이때 모델은 공공 유틸리티 데이터에 대한 웹 검색을 하고, 예측을 구축하기 위한 Python 코드를 작성하고, 그래프나 이미지를 생성한 다음, 예측 뒤에 있는 주요 요소를 설명할 수 있습니다. 이 과정에서 여러 도구 호출을 연결합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">추론을 통해 모델은 접하는 정보에 따라 필요에 따라 반응하고 방향을 전환할 수 있습니다. 예를 들어, 검색 제공업체의 도움을 받아 웹을 여러 번 검색하고, 결과를 살펴보고, 더 많은 정보가 필요한 경우 새로운 검색을 시도할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>예를 통해 본 성능 차이  </b></span></h2>\n<p data-ke-size=\"size16\">OpenAI는 이 모델들의 뛰어난 성능을 보여주는 몇 가지 예시를 제공했습니다. o3와 o1의 성능을 비교하면 그 차이가 확연히 드러납니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 복잡한 수학 문제에서 o3는 디크슨 다항식(Dickson polynomial)을 사용해 문제를 정확히 풀어내는 반면, o1은 시간이 더 걸리고 부정확한 해결책을 제시합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한 호텔 체인 확장에 관한 질문에서도 o3는 실제 데이터를 활용한 철저한 분석을 통해 아테네와 오사카를 목표 도시로 추천했습니다. 각 도시의 점유율, RevPAR 성장률, 승객 증가율 등 구체적인 지표와 2024년 통계자료를 바탕으로 상세한 비교 테이블까지 제공했죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">배터리 기술 발전에 관한 질문에서도 o3는 리튬 이온 배터리, 솔리드 스테이트 배터리, 나트륨 이온 배터리 등 최신 기술의 영향을 상세히 분석하며, 2011년부터 2024년까지의 전기차 주행거리, 충전 속도, 보급률 등의 변화를 그래프로 시각화해 보여주었습니다.</p>\n<p data-ke-size=\"size16\">MLB 피치 클럭 규칙이 투수 성능과 게임 시간에 미친 영향에 관한 질문에서도 o3는 구체적인 통계 데이터를 활용해 2021년부터 2024년까지의 변화를 상세히 분석했습니다. 규칙 도입 이후 게임 시간이 24분 단축됐고, 초기에는 투수들의 ERA가 상승했지만 적응 기간을 거쳐 다시 안정되었다는 흥미로운 분석을 제공했죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이런 예시들을 보면 o3와 o4-mini의 성능이 정말 인상적이라는 걸 알 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>핵심 기술적 특징  </b></span></h2>\n<table style=\"border-collapse: collapse; width: 100%; margin: 15px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4a86e8; color: white;\">\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">기술적 혁신</th>\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">특징</th>\n<th style=\"border: 1px solid #dddddd; text-align: center; padding: 8px;\">영향</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\"><b>강화학습 확장</b></td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">\"더 많은 컴퓨팅 = 더 나은 성능\" 트렌드 확인</td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">더 오래 생각할수록 성능이 지속적으로 향상</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\"><b>에이전트형 도구 사용</b></td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">도구를 언제, 어떻게 사용할지 추론하는 능력</td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">시각적 추론, 다단계 워크플로우 처리 능력 향상</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\"><b>이미지 통합 사고</b></td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">이미지를 사고 과정에 직접 통합</td>\n<td style=\"border: 1px solid #dddddd; text-align: left; padding: 8px;\">시각적, 텍스트 추론을 혼합한 새로운 문제 해결 가능</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">OpenAI의 o3 개발 과정에서, 대규모 강화학습이 \"더 많은 컴퓨팅 = 더 나은 성능\"이라는 GPT 시리즈 사전 학습에서 관찰된 것과 동일한 추세를 보여주는 것으로 확인됐습니다. OpenAI는 현재 강화학습에서 이 확장 경로를 다시 따라가며, 학습 컴퓨팅과 추론 시간을 추가로 10배 증가시켰음에도 여전히 성능 향상이 명확하게 보이는 것을 확인했습니다. 이는 모델이 더 오래 생각할수록 성능이 계속 향상된다는 것을 검증합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">o3와 o4-mini는 강화학습을 통해 도구를 사용하도록 학습되었습니다. 이는 단순히 도구 사용법을 학습하는 것이 아니라, 언제 도구를 사용할지에 대해 추론하는 능력을 키웠다는 의미입니다. 원하는 결과에 따라 도구를 배치하는 능력은 특히 시각적 추론과 다단계 워크플로우를 포함하는 개방형 상황에서 더 유능하게 만듭니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이러한 개선은 학술 벤치마크와 실제 작업 모두에서 반영되어, 초기 테스터들의 보고에서도 확인됩니다.</p>\n<p data-ke-size=\"size16\">또한 이 모델들은 처음으로 이미지를 직접 사고 과정에 통합할 수 있습니다. 단순히 이미지를 보는 것이 아니라, 그것을 가지고 생각합니다. 이는 시각적 추론과 텍스트 추론을 혼합한 새로운 종류의 문제 해결을 가능하게 하며, 이는 다양한 다중모달 벤치마크에서의 최첨단 성능으로 반영됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>실생활에서의 응용 가능성  ️</b></span></h2>\n<p data-ke-size=\"size16\">이 새로운 모델들의 활용 가능성은 정말 광범위해요. 일상적인 작업부터 복잡한 비즈니스 문제, 교육, 연구까지 다양한 분야에서 활용될 수 있습니다. 예를 들어, 공공 유틸리티 데이터를 검색하고, 예측 모델을 구축하며, 결과를 시각화하는 복잡한 작업을 한 번에 처리할 수 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_GPT O3, O4MINI.jpg\" data-origin-width=\"1000\" data-origin-height=\"668\"><span data-url=\"https://blog.kakaocdn.net/dn/86LNl/btsNn8iMy87/IKK7KcXRwKEGOZiMYkk4RK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/86LNl/btsNn8iMy87/IKK7KcXRwKEGOZiMYkk4RK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/86LNl/btsNn8iMy87/IKK7KcXRwKEGOZiMYkk4RK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F86LNl%2FbtsNn8iMy87%2FIKK7KcXRwKEGOZiMYkk4RK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"챗GPT o3, o4 mini\" loading=\"lazy\" width=\"1000\" height=\"668\" data-filename=\"edited_GPT O3, O4MINI.jpg\" data-origin-width=\"1000\" data-origin-height=\"668\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이러한 유연하고 전략적인 접근 방식을 통해 모델은 모델의 내장 지식을 넘어서는 최신 정보에 대한 접근, 확장된 추론, 합성, 여러 양식에 걸친 출력 생성이 필요한 작업을 처리할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특히 비즈니스 분야에서는 프로그래밍, 비즈니스/컨설팅, 창의적 아이디어 발상 영역에서 뛰어난 성능을 발휘할 것으로 기대됩니다. 또한 생각의 파트너로서의 분석적 엄격함과 특히 생물학, 수학, 공학 맥락에서 새로운 가설을 생성하고 비판적으로 평가하는 능력은 과학 연구 분야에서도 큰 도움이 될 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>앞으로의 발전 방향  </b></span></h2>\n<p data-ke-size=\"size16\">OpenAI의 o 시리즈 모델들은 인공지능의 미래를 보여주는 중요한 이정표라고 생각해요. 대규모 강화학습이 \"더 많은 컴퓨팅 = 더 나은 성능\"이라는 추세를 따른다는 사실은, 앞으로도 더 많은 컴퓨팅 파워를 투입하면 성능이 계속 향상될 수 있다는 것을 시사합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한 도구 사용에 대한 강화학습의 성공은 향후 AI 모델들이 더 다양한 도구를 효과적으로 활용할 수 있게 될 것임을 암시합니다. 이는 AI가 더 자율적이고 에이전트적인 역할을 할 수 있게 되는 방향으로 발전한다는 의미겠죠.</p>\n<p data-ke-size=\"size16\">시각적 추론과 텍스트 추론을 혼합한 새로운 종류의 문제 해결 능력은 앞으로 더 발전해 다양한 분야에서 혁신적인 응용을 가능하게 할 것입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1013\" data-origin-height=\"678\"><span data-url=\"https://blog.kakaocdn.net/dn/d0uCQM/btsNn923Xa9/m2efxCnY5nJuAHpUYT1o70/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/d0uCQM/btsNn923Xa9/m2efxCnY5nJuAHpUYT1o70/img.png\"><img src=\"https://blog.kakaocdn.net/dn/d0uCQM/btsNn923Xa9/m2efxCnY5nJuAHpUYT1o70/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd0uCQM%2FbtsNn923Xa9%2Fm2efxCnY5nJuAHpUYT1o70%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"챗GPT o3와 o4-mini 성능\" loading=\"lazy\" width=\"1013\" height=\"678\" data-origin-width=\"1013\" data-origin-height=\"678\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>정리해보자면...  </b></span></h2>\n<p data-ke-size=\"size16\">OpenAI의 o3와 o4-mini는 그저 작은 업데이트가 아니라 AI 기술의 중요한 도약이라고 생각해요. 최첨단 추론 능력과 전체 도구 액세스의 결합된 성능은 학계 벤치마크와 실제 작업 모두에서 크게 향상된 성능으로 이어져 지능과 유용성 모두에서 새로운 표준을 세웠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">실제 작업에서 OpenAI o1보다 20% 더 적은 중대한 오류를 보이며, 특히 프로그래밍, 비즈니스/컨설팅, 창의적 아이디어 발상 영역에서 뛰어난 성능을 발휘한다는 사실은 이 모델들이 실용적인 면에서도 큰 가치가 있음을 보여줍니다.</p>\n<p data-ke-size=\"size16\">이 모델들은 도구를 언제, 어떻게 사용할지 추론하도록 학습되어 복잡한 문제에 대해 상세하고 사려 깊은 답변을 제공합니다. 덕분에 일반적으로 1분 이내에 더 복잡한 질문들을 효과적으로 처리할 수 있습니다. 이러한 능력은 AI 보조자의 역할과 가능성을 크게 확장시킬 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">앞으로 AI 기술이 어떻게 발전할지, 그리고 우리의 삶과 일에 어떤 변화를 가져올지 정말 기대가 되네요. 여러분은 이런 새로운 AI 모델들에 대해 어떻게 생각하시나요? 댓글로 여러분의 생각을 공유해주세요!  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>자주 묻는 질문 (FAQ)</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: o3와 o4-mini는 언제부터 사용할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 이미 출시되었으며 ChatGPT를 통해 사용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: o3와 o4-mini의 가장 큰 차이점은 무엇인가요?</b></p>\n<p data-ke-size=\"size16\">A: O3는 더 강력한 성능을, O4-mini는 비용 효율성과 빠른 속도에 최적화되어 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 이 모델들은 이전 GPT 모델들과 어떻게 다른가요?</b></p>\n<p data-ke-size=\"size16\">A: 더 긴 사고 시간과 도구 사용 능력, 그리고 시각적 추론 기능이 가장 큰 차이점입니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 이 모델들은 어떤 도구들을 사용할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 웹 검색, Python 코드 실행, 파일 분석, 이미지 생성 등 ChatGPT의 모든 도구를 사용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 일반 사용자들에게는 어떤 혜택이 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 더 정확하고 상세한 답변, 복잡한 질문 처리 능력, 다양한 도구를 활용한 문제 해결 등이 있습니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"O3와 O4-mini는 언제부터 사용할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"이미 출시되었으며 ChatGPT를 통해 사용할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"O3와 O4-mini의 가장 큰 차이점은 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"O3는 더 강력한 성능을, O4-mini는 비용 효율성과 빠른 속도에 최적화되어 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"이 모델들은 이전 GPT 모델들과 어떻게 다른가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"더 긴 사고 시간과 도구 사용 능력, 그리고 시각적 추론 기능이 가장 큰 차이점입니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"이 모델들은 어떤 도구들을 사용할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"웹 검색, Python 코드 실행, 파일 분석, 이미지 생성 등 ChatGPT의 모든 도구를 사용할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"일반 사용자들에게는 어떤 혜택이 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"더 정확하고 상세한 답변, 복잡한 질문 처리 능력, 다양한 도구를 활용한 문제 해결 등이 있습니다.\"\n    }\n  }]\n}\n</script>",
        "contentSnippet": "OpenAI의 새 모델 o3와 o4-mini가 뭐길래 이렇게 화제인걸까요? 더 오래 생각하고, 도구를 사용하며, 이미지까지 이해하는 이 모델들이 AI의 미래를 어떻게 바꿀지 함께 알아보세요!  \n\n\n \n요즘 인공지능 업계는 진짜 숨 돌릴 틈이 없는 것 같아요. 오늘은 OpenAI가 또 새로운 모델을 내놨네요. 솔직히 따라가기 벅찬 느낌이랄까요? 특히 이번에 공개된 OpenAI의 o3와 o4-mini는 정말 많은 관심을 받고 있더라고요. 근데 이게 진짜 대단한 혁신인지, 아니면 그냥 마케팅 전략인지 궁금해서 한번 자세히 들여다봤어요. 여러분도 이런 고민 한번쯤 해보셨죠?\n \no 시리즈가 뭘까? 그리고 이게 왜 중요할까?  \nOpenAI의 새로운 o3와 o4-mini는 생각하는 시간을 더 길게 가지고 응답할 수 있도록 학습된 O 시리즈의 최신 모델입니다. 이 모델들은 지금까지 OpenAI가 출시한 모델 중 가장 똑똑한 모델로, ChatGPT의 기능에 큰 변화를 가져올 것으로 예상됩니다.\n특히 주목할 점은 이 모델들이 챗GPT 내의 모든 도구를 에이전트처럼 사용하고 결합할 수 있다는 것입니다. 여기에는 웹 검색, 업로드된 파일 및 기타 데이터를 Python으로 분석하는 기능, 시각적 입력에 대한 심층 추론, 심지어 이미지 생성까지 포함됩니다. 이건 진짜 획기적인 변화 아닐까요?  \n \n이 모델들은 도구를 언제, 어떻게 사용할지 추론하도록 학습되어 복잡한 문제에 대해 상세하고 사려 깊은 답변을 제공합니다. 덕분에 일반적으로 1분 이내에 더 복잡한 질문들을 효과적으로 처리할 수 있습니다. 이를 통해 다면적인 질문을 더 효과적으로 해결할 수 있게 되었고, 이는 사용자를 대신해 독립적으로 작업을 실행할 수 있는 더 에이전트형 ChatGPT를 향한 한 걸음이라고 볼 수 있습니다.\n \n최첨단 추론 능력과 전체 도구 액세스의 결합된 성능은 학계 벤치마크와 실제 작업 모두에서 크게 향상된 성능으로 이어져 지능과 유용성 모두에서 새로운 표준을 세웠습니다.\n \no3와 o4-mini의 차이점은 무엇일까?  \n모델\n주요 특징\n최적 사용 케이스\n\n\n\n\nOpenAI o3\n가장 강력한 추론 모델, 코딩/수학/과학/시각적 인식에서 최고 성능, o1보다 20% 더 적은 오류율\n복잡한 다면적 분석, 이미지/차트/그래픽 분석, 프로그래밍, 비즈니스/컨설팅, 창의적 아이디어 발상\n\n\nOpenAI o4-mini\n빠르고 비용 효율적인 추론에 최적화, 크기와 비용 대비 뛰어난 성능, AIME 2024/2025 벤치마크 1위\n수학, 코딩, 시각적 작업, 데이터 과학, 고용량/고처리량 필요 작업\n\n\n\nOpenAI o3는 회사의 가장 강력한 추론 모델로, 코딩, 수학, 과학, 시각적 인식 등 여러 분야에서 최첨단 성능을 발휘합니다. Codeforces, SWE-bench (별도의 모델별 스캐폴드 없이), MMMU 등의 벤치마크에서 새로운 최고 성능을 기록했죠. 이 모델은 복잡한 다면적 분석이 필요하고 즉각적인 답이 명확하지 않은 복잡한 질의에 이상적입니다. 특히 이미지, 차트, 그래픽 분석과 같은 시각적 작업에서 강점을 보입니다.\n \n외부 전문가들의 평가에 따르면, o3는 어려운 실제 작업에서 OpenAI o1보다 20% 더 적은 중대한 오류를 보이며, 특히 프로그래밍, 비즈니스/컨설팅, 창의적 아이디어 발상 영역에서 뛰어난 성능을 발휘합니다. 초기 테스터들은 생각의 파트너로서의 분석적 엄격함과 특히 생물학, 수학, 공학 맥락에서 새로운 가설을 생성하고 비판적으로 평가하는 능력을 강조했습니다.\n \n반면에, OpenAI o4-mini는 빠르고 비용 효율적인 추론에 최적화된 더 작은 모델입니다. 크기와 비용 대비 놀라운 성능을 보이며, 특히 수학, 코딩, 시각적 작업에서 뛰어납니다. AIME 2024와 2025 벤치마크에서 가장 뛰어난 성능을 보이는 모델입니다. 전문가 평가에서도 데이터 과학과 같은 분야뿐만 아니라 비-STEM 작업에서도 이전 모델인 o3-mini보다 뛰어난 성능을 보였습니다.\n효율성 덕분에 o3보다 훨씬 더 높은 사용 제한을 지원하여, 추론이 필요한 질문에 대해 강력한 고용량, 고처리량 옵션이 됩니다.\n \n실제 성능은 어떨까?  \n벤치마크/작업\no1\no3-mini\no3\no4-mini\n\n\n\n\nAIME 2024 (경쟁 수학)\n74.3%\n87.3%\n91.6%\n93.4%\n\n\nCodeforces (경쟁 코딩)\n1891\n2073\n2706\n2719\n\n\nMMMU (대학 수준 시각적 문제 해결)\n77.6%\n-\n82.9%\n81.6%\n\n\n\n벤치마크 성능을 보면 정말 놀랍습니다. 외부 전문가 평가자들은 두 모델 모두 향상된 명령 준수와 이전 모델보다 더 유용하고 검증 가능한 응답을 보여준다고 평가했습니다. 이는 향상된 지능과 웹 소스의 통합 덕분입니다. 이전 추론 모델 반복과 비교할 때, 이 두 모델은 특히 기억과 과거 대화를 참조하여 응답을 더 개인화하고 관련성을 높이는 데 있어 더 자연스럽고 대화적이라고 합니다.\n \nOpenAI o3는 ChatGPT 내 전체 도구 접근권과 함께 API를 통한 사용자 지정 도구에도 접근할 수 있습니다. 이 모델들은 문제 해결 방법을 추론하고, 도구를 언제, 어떻게 사용할지 선택하여 일반적으로 1분 이내에 올바른 출력 형식으로 상세하고 사려 깊은 답변을 빠르게 생성하도록 학습되었습니다.\n \n예를 들어, 사용자가 \"캘리포니아의 여름 에너지 사용량이 작년과 비교하여 어떻게 될까요?\"라고 물을 수 있습니다. 이때 모델은 공공 유틸리티 데이터에 대한 웹 검색을 하고, 예측을 구축하기 위한 Python 코드를 작성하고, 그래프나 이미지를 생성한 다음, 예측 뒤에 있는 주요 요소를 설명할 수 있습니다. 이 과정에서 여러 도구 호출을 연결합니다.\n \n추론을 통해 모델은 접하는 정보에 따라 필요에 따라 반응하고 방향을 전환할 수 있습니다. 예를 들어, 검색 제공업체의 도움을 받아 웹을 여러 번 검색하고, 결과를 살펴보고, 더 많은 정보가 필요한 경우 새로운 검색을 시도할 수 있습니다.\n \n예를 통해 본 성능 차이  \nOpenAI는 이 모델들의 뛰어난 성능을 보여주는 몇 가지 예시를 제공했습니다. o3와 o1의 성능을 비교하면 그 차이가 확연히 드러납니다.\n \n예를 들어, 복잡한 수학 문제에서 o3는 디크슨 다항식(Dickson polynomial)을 사용해 문제를 정확히 풀어내는 반면, o1은 시간이 더 걸리고 부정확한 해결책을 제시합니다.\n \n또한 호텔 체인 확장에 관한 질문에서도 o3는 실제 데이터를 활용한 철저한 분석을 통해 아테네와 오사카를 목표 도시로 추천했습니다. 각 도시의 점유율, RevPAR 성장률, 승객 증가율 등 구체적인 지표와 2024년 통계자료를 바탕으로 상세한 비교 테이블까지 제공했죠.\n \n배터리 기술 발전에 관한 질문에서도 o3는 리튬 이온 배터리, 솔리드 스테이트 배터리, 나트륨 이온 배터리 등 최신 기술의 영향을 상세히 분석하며, 2011년부터 2024년까지의 전기차 주행거리, 충전 속도, 보급률 등의 변화를 그래프로 시각화해 보여주었습니다.\nMLB 피치 클럭 규칙이 투수 성능과 게임 시간에 미친 영향에 관한 질문에서도 o3는 구체적인 통계 데이터를 활용해 2021년부터 2024년까지의 변화를 상세히 분석했습니다. 규칙 도입 이후 게임 시간이 24분 단축됐고, 초기에는 투수들의 ERA가 상승했지만 적응 기간을 거쳐 다시 안정되었다는 흥미로운 분석을 제공했죠.\n \n이런 예시들을 보면 o3와 o4-mini의 성능이 정말 인상적이라는 걸 알 수 있어요.\n \n핵심 기술적 특징  \n기술적 혁신\n특징\n영향\n\n\n\n\n강화학습 확장\n\"더 많은 컴퓨팅 = 더 나은 성능\" 트렌드 확인\n더 오래 생각할수록 성능이 지속적으로 향상\n\n\n에이전트형 도구 사용\n도구를 언제, 어떻게 사용할지 추론하는 능력\n시각적 추론, 다단계 워크플로우 처리 능력 향상\n\n\n이미지 통합 사고\n이미지를 사고 과정에 직접 통합\n시각적, 텍스트 추론을 혼합한 새로운 문제 해결 가능\n\n\n\nOpenAI의 o3 개발 과정에서, 대규모 강화학습이 \"더 많은 컴퓨팅 = 더 나은 성능\"이라는 GPT 시리즈 사전 학습에서 관찰된 것과 동일한 추세를 보여주는 것으로 확인됐습니다. OpenAI는 현재 강화학습에서 이 확장 경로를 다시 따라가며, 학습 컴퓨팅과 추론 시간을 추가로 10배 증가시켰음에도 여전히 성능 향상이 명확하게 보이는 것을 확인했습니다. 이는 모델이 더 오래 생각할수록 성능이 계속 향상된다는 것을 검증합니다.\n \no3와 o4-mini는 강화학습을 통해 도구를 사용하도록 학습되었습니다. 이는 단순히 도구 사용법을 학습하는 것이 아니라, 언제 도구를 사용할지에 대해 추론하는 능력을 키웠다는 의미입니다. 원하는 결과에 따라 도구를 배치하는 능력은 특히 시각적 추론과 다단계 워크플로우를 포함하는 개방형 상황에서 더 유능하게 만듭니다.\n \n이러한 개선은 학술 벤치마크와 실제 작업 모두에서 반영되어, 초기 테스터들의 보고에서도 확인됩니다.\n또한 이 모델들은 처음으로 이미지를 직접 사고 과정에 통합할 수 있습니다. 단순히 이미지를 보는 것이 아니라, 그것을 가지고 생각합니다. 이는 시각적 추론과 텍스트 추론을 혼합한 새로운 종류의 문제 해결을 가능하게 하며, 이는 다양한 다중모달 벤치마크에서의 최첨단 성능으로 반영됩니다.\n \n실생활에서의 응용 가능성  ️\n이 새로운 모델들의 활용 가능성은 정말 광범위해요. 일상적인 작업부터 복잡한 비즈니스 문제, 교육, 연구까지 다양한 분야에서 활용될 수 있습니다. 예를 들어, 공공 유틸리티 데이터를 검색하고, 예측 모델을 구축하며, 결과를 시각화하는 복잡한 작업을 한 번에 처리할 수 있습니다.\n\n\n \n이러한 유연하고 전략적인 접근 방식을 통해 모델은 모델의 내장 지식을 넘어서는 최신 정보에 대한 접근, 확장된 추론, 합성, 여러 양식에 걸친 출력 생성이 필요한 작업을 처리할 수 있습니다.\n \n특히 비즈니스 분야에서는 프로그래밍, 비즈니스/컨설팅, 창의적 아이디어 발상 영역에서 뛰어난 성능을 발휘할 것으로 기대됩니다. 또한 생각의 파트너로서의 분석적 엄격함과 특히 생물학, 수학, 공학 맥락에서 새로운 가설을 생성하고 비판적으로 평가하는 능력은 과학 연구 분야에서도 큰 도움이 될 것입니다.\n \n앞으로의 발전 방향  \nOpenAI의 o 시리즈 모델들은 인공지능의 미래를 보여주는 중요한 이정표라고 생각해요. 대규모 강화학습이 \"더 많은 컴퓨팅 = 더 나은 성능\"이라는 추세를 따른다는 사실은, 앞으로도 더 많은 컴퓨팅 파워를 투입하면 성능이 계속 향상될 수 있다는 것을 시사합니다.\n \n또한 도구 사용에 대한 강화학습의 성공은 향후 AI 모델들이 더 다양한 도구를 효과적으로 활용할 수 있게 될 것임을 암시합니다. 이는 AI가 더 자율적이고 에이전트적인 역할을 할 수 있게 되는 방향으로 발전한다는 의미겠죠.\n시각적 추론과 텍스트 추론을 혼합한 새로운 종류의 문제 해결 능력은 앞으로 더 발전해 다양한 분야에서 혁신적인 응용을 가능하게 할 것입니다.\n\n\n정리해보자면...  \nOpenAI의 o3와 o4-mini는 그저 작은 업데이트가 아니라 AI 기술의 중요한 도약이라고 생각해요. 최첨단 추론 능력과 전체 도구 액세스의 결합된 성능은 학계 벤치마크와 실제 작업 모두에서 크게 향상된 성능으로 이어져 지능과 유용성 모두에서 새로운 표준을 세웠습니다.\n \n실제 작업에서 OpenAI o1보다 20% 더 적은 중대한 오류를 보이며, 특히 프로그래밍, 비즈니스/컨설팅, 창의적 아이디어 발상 영역에서 뛰어난 성능을 발휘한다는 사실은 이 모델들이 실용적인 면에서도 큰 가치가 있음을 보여줍니다.\n이 모델들은 도구를 언제, 어떻게 사용할지 추론하도록 학습되어 복잡한 문제에 대해 상세하고 사려 깊은 답변을 제공합니다. 덕분에 일반적으로 1분 이내에 더 복잡한 질문들을 효과적으로 처리할 수 있습니다. 이러한 능력은 AI 보조자의 역할과 가능성을 크게 확장시킬 것입니다.\n \n앞으로 AI 기술이 어떻게 발전할지, 그리고 우리의 삶과 일에 어떤 변화를 가져올지 정말 기대가 되네요. 여러분은 이런 새로운 AI 모델들에 대해 어떻게 생각하시나요? 댓글로 여러분의 생각을 공유해주세요!  \n자주 묻는 질문 (FAQ)\nQ: o3와 o4-mini는 언제부터 사용할 수 있나요?\nA: 이미 출시되었으며 ChatGPT를 통해 사용할 수 있습니다.\nQ: o3와 o4-mini의 가장 큰 차이점은 무엇인가요?\nA: O3는 더 강력한 성능을, O4-mini는 비용 효율성과 빠른 속도에 최적화되어 있습니다.\nQ: 이 모델들은 이전 GPT 모델들과 어떻게 다른가요?\nA: 더 긴 사고 시간과 도구 사용 능력, 그리고 시각적 추론 기능이 가장 큰 차이점입니다.\nQ: 이 모델들은 어떤 도구들을 사용할 수 있나요?\nA: 웹 검색, Python 코드 실행, 파일 분석, 이미지 생성 등 ChatGPT의 모든 도구를 사용할 수 있습니다.\nQ: 일반 사용자들에게는 어떤 혜택이 있나요?\nA: 더 정확하고 상세한 답변, 복잡한 질문 처리 능력, 다양한 도구를 활용한 문제 해결 등이 있습니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"O3와 O4-mini는 언제부터 사용할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"이미 출시되었으며 ChatGPT를 통해 사용할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"O3와 O4-mini의 가장 큰 차이점은 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"O3는 더 강력한 성능을, O4-mini는 비용 효율성과 빠른 속도에 최적화되어 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"이 모델들은 이전 GPT 모델들과 어떻게 다른가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"더 긴 사고 시간과 도구 사용 능력, 그리고 시각적 추론 기능이 가장 큰 차이점입니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"이 모델들은 어떤 도구들을 사용할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"웹 검색, Python 코드 실행, 파일 분석, 이미지 생성 등 ChatGPT의 모든 도구를 사용할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"일반 사용자들에게는 어떤 혜택이 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"더 정확하고 상세한 답변, 복잡한 질문 처리 능력, 다양한 도구를 활용한 문제 해결 등이 있습니다.\"\n    }\n  }]\n}",
        "guid": "http://muzbox.tistory.com/483570",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "AI 모델",
          "o4-mini",
          "openai o3",
          "강화학습",
          "도구 사용",
          "문제 해결",
          "벤치마크 성능",
          "시각적 추론",
          "에이전트 ai",
          "추론 능력"
        ],
        "isoDate": "2025-04-16T23:39:33.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "GPT-4.1, mini, nano 총정리: 성능, 가격, 활용법까지 한번에",
        "link": "http://muzbox.tistory.com/483569",
        "pubDate": "Wed, 16 Apr 2025 10:06:48 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483569#entry483569comment",
        "content": "<p data-ke-size=\"size16\">GPT-4.1 시리즈의 혁신적 기능과 성능 향상을 소개합니다. 코딩, 긴 컨텍스트 처리, 지시 이행 능력이 크게 개선되었고, 최초의 나노 모델까지 출시된 GPT-4.1의 모든 것을 파헤쳐볼게요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_GPT-4.1 패밀리 총정리.jpg\" data-origin-width=\"1920\" data-origin-height=\"1080\"><span data-url=\"https://blog.kakaocdn.net/dn/bso32X/btsNmvyyFST/RQI7KTppDTErnKLy2rDZuk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bso32X/btsNmvyyFST/RQI7KTppDTErnKLy2rDZuk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bso32X/btsNmvyyFST/RQI7KTppDTErnKLy2rDZuk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbso32X%2FbtsNmvyyFST%2FRQI7KTppDTErnKLy2rDZuk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"GPT-4.1, mini, nano 총정리: 성능, 가격, 활용법까지 한번에\" loading=\"lazy\" width=\"1920\" height=\"1080\" data-filename=\"edited_GPT-4.1 패밀리 총정리.jpg\" data-origin-width=\"1920\" data-origin-height=\"1080\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">어제 정말 신기한 뉴스를 봤어요. OpenAI가 또 새로운 모델을 출시했더라고요. 요새 AI 기술이 진짜 미친 속도로 발전하는데, 그냥 따라가기도 버거울 지경이에요. 근데 이번에 나온 GPT-4.1 시리즈는 뭔가 특별해 보이더라고요. 코딩 능력이 확 좋아졌다는데, 개발자분들은 어떻게 생각하세요? 저같은 일반인한테도 도움될까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>GPT-4.1 시리즈, 무엇이 달라졌을까?  </b></span></h2>\n<p data-ke-size=\"size16\">OpenAI가 API를 통해 제공하는 세 가지 새로운 모델을 소개했어요. GPT-4.1, GPT-4.1 mini, 그리고 GPT-4.1 nano까지. 이 모델들은 기존의 GPT-4o와 GPT-4o mini보다 전반적으로 더 뛰어난 성능을 보여준다고 해요. 특히 코딩과 지시사항 이행 능력에서 엄청난 발전이 있었다고 하네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">가장 눈에 띄는 변화는 <b>컨텍스트 윈도우</b>의 크기예요. 무려 100만 토큰까지 처리할 수 있게 되었다고 해요! 이전 모델들이 128,000 토큰까지 처리할 수 있었던 것과 비교하면 정말 큰 발전이죠. 그리고 단순히 더 많은 컨텍스트를 처리하는 것뿐만 아니라, 그 컨텍스트를 더 효율적으로 이해하고 활용할 수 있게 되었다고 해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한 지식 기반도 업데이트되어 2024년 6월까지의 정보를 담고 있어요. 이제 좀 더 최신 정보에 대해서도 물어볼 수 있겠네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>코딩 능력이 대폭 향상됐어요  </b></span></h2>\n<p data-ke-size=\"size16\">제가 개인적으로 가장 흥미로웠던 부분은 코딩 능력의 향상이에요. GPT-4.1은 SWE-bench Verified에서 54.6%의 점수를 받았다고 해요. 이는 GPT-4o의 33.2%보다 무려 21.4% 포인트나 높은 점수예요!</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4285f4; color: white;\">\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">모델</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">SWE-bench Verified 점수</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">향상된 정도</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">54.6%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">기준</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4o</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">33.2%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">-21.4%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.5</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">38.0%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">-16.6%</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">실제 사용자들의 반응도 놀라웠어요. Windsurf라는 회사에서는 GPT-4.1이 내부 코딩 벤치마크에서 GPT-4o보다 60% 높은 점수를 받았다고 해요. 특히 도구 호출에서 30% 더 효율적이었고, 불필요한 편집을 반복할 가능성이 약 50% 낮았다고 하네요.</p>\n<p data-ke-size=\"size16\">이거 진짜 대단한 발전 아닌가요? 개발자들이 코드를 작성하고, 디버깅하는 데 훨씬 더 도움이 될 것 같아요. 제가 개발자는 아니지만, 이런 발전이 미래의 소프트웨어 개발에 어떤 영향을 미칠지 정말 궁금해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>지시 이행 능력도 확실히 좋아졌어요  </b></span></h2>\n<p data-ke-size=\"size16\">GPT-4.1은 지시 이행 능력도 크게 향상되었어요. 특히 Format following, Negative instructions, Ordered instructions, Content requirements, Ranking, Overconfidence 등 여러 범주에서 성능이 향상되었다고 해요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #34a853; color: white;\">\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">벤치마크</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">GPT-4.1</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">GPT-4o</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">향상도</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">MultiChallenge</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">38.3%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">27.8%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">+10.5%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">IFEval</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">87.4%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">81.0%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">+6.4%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">내부 API 지시 이행 (어려운 유형)</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">49.1%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">29.2%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">+19.9%</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">실제로 세금 관련 회사인 Blue J에서는 GPT-4.1이 내부 벤치마크에서 GPT-4o보다 53% 더 정확했다고 해요. Hex라는 회사에서는 SQL 평가 세트에서 거의 2배 향상된 성능을 보였다고 하네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이런 개선은 복잡한 지시사항을 더 잘 따를 수 있게 해준다는 뜻이니까, 실무에서 활용도가 훨씬 높아질 것 같아요. 솔직히 말해서, 이전 모델들도 간단한 지시는 잘 따랐지만 복잡한 지시나 여러 단계의 지시는 종종 헷갈려 했잖아요? 이제 그런 문제가 많이 해결될 것 같네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>100만 토큰의 긴 컨텍스트, 어떻게 활용할까?  </b></span></h2>\n<p data-ke-size=\"size16\">GPT-4.1 시리즈의 가장 큰 변화 중 하나는 100만 토큰의 컨텍스트 윈도우예요. 이건 React 코드베이스 전체를 8개 넣을 수 있는 양이라고 하네요. 진짜 엄청난 양이죠?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">OpenAI는 GPT-4.1이 이 긴 컨텍스트에서 정보를 효과적으로 찾고 활용할 수 있도록 특별히 훈련시켰다고 해요. 'Needle in a Haystack' 테스트에서 GPT-4.1은 100만 토큰 안에 숨겨진 정보를 정확하게 찾아낼 수 있었다고 해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또 흥미로운 점은 OpenAI가 새로운 평가 방식인 OpenAI-MRCR과 Graphwalks를 공개했다는 거예요. 이 평가들은 모델이 긴 컨텍스트에서 여러 정보를 어떻게 찾고 연결하는지 테스트하는 방식이라고 해요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #ea4335; color: white;\">\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">모델</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">컨텍스트 윈도우</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">OpenAI-MRCR (2 바늘) 128k</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">Graphwalks bfs &lt;128k</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">100만 토큰</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">57.2%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">61.7%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1 mini</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">100만 토큰</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">47.2%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">61.7%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1 nano</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">100만 토큰</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">36.6%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">25.0%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4o</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">128k 토큰</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">31.9%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">41.7%</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">실제 사용 사례도 인상적이었어요. Thomson Reuters는 GPT-4.1을 사용해 다중 문서 검토 정확도를 17% 향상시켰고, Carlyle은 매우 큰 문서에서 세부적인 재무 데이터를 추출하는 성능이 50% 향상되었다고 해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서, 이런 긴 컨텍스트 기능은 법률, 금융, 의료 등 복잡한 문서를 다루는 분야에서 정말 혁신적인 변화를 가져올 것 같아요. 생각해보세요, 수백 페이지의 계약서나 의료 기록을 한 번에 분석할 수 있다면 얼마나 편리할까요?</p>\n<blockquote data-ke-style=\"style3\"><b> 컨텍스트</b>는 AI 모델이 대화나 질문을 이해하기 위해 고려하는 배경 정보나 이전 대화 내용을 의미해요. 쉽게 설명하자면, 사람과 대화할 때 이전에 나눈 모든 대화를 기억하고 참고하는 것과 비슷해요.</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>비전(Vision) 능력도 강화됐어요  ️</b></span></h2>\n<p data-ke-size=\"size16\">GPT-4.1 시리즈는 이미지 이해 능력도 크게 향상되었어요. 특히 GPT-4.1 mini는 이미지 벤치마크에서 종종 GPT-4o보다 더 좋은 성능을 보여줬다고 해요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #fbbc05; color: white;\">\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">벤치마크</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">GPT-4.1</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">GPT-4.1 mini</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">GPT-4o</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">MMMU</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">74.8%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">72.7%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">68.7%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">MathVista</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">72.2%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">73.1%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">61.4%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">CharXiv-R</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">56.7%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">56.8%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">52.7%</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Video-MME (자막 없음)</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">72.0%</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">-</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">65.3%</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">MMMU에서 GPT-4.1은 74.8%, GPT-4.1 mini는 72.7%의 점수를 받았어요. 이는 GPT-4o의 68.7%보다 훨씬 높은 점수죠. MathVista에서도 GPT-4.1은 72.2%, GPT-4.1 mini는 73.1%로 GPT-4o의 61.4%를 크게 앞섰어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Video-MME 테스트에서는 GPT-4.1이 72.0%의 점수를 얻어 GPT-4o의 65.3%보다 훨씬 좋은 성적을 거뒀어요. 이 테스트는 30-60분 길이의 자막 없는 비디오를 기반으로 질문에 답하는 테스트인데, 정말 인상적인 성능이죠?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아직 사진이나 비디오를 많이 활용하진 않지만, 앞으로는 이런 비전 능력을 활용한 애플리케이션이 더 많아질 것 같아요. 제 생각엔 교육이나 의료 분야에서 특히 유용할 것 같네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>가격은 어떻게 변했을까?  </b></span></h2>\n<p data-ke-size=\"size16\">가격도 상당히 흥미로웠어요. OpenAI는 추론 시스템의 효율성 향상으로 GPT-4.1 시리즈의 가격을 낮출 수 있었다고 해요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #673ab7; color: white;\">\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">모델</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">입력 (100만 토큰)</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">캐시된 입력 (100만 토큰)</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">출력 (100만 토큰)</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">혼합 가격*</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$2.00</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$0.50</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$8.00</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$1.84</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1 mini</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$0.40</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$0.10</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$1.60</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$0.42</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1 nano</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$0.10</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$0.025</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$0.40</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">$0.12</td>\n</tr>\n</tbody>\n</table>\n<p style=\"font-size: 0.9em; font-style: italic;\" data-ke-size=\"size16\">*일반적인 입력/출력 및 캐시 비율 기준</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">GPT-4.1은 중간 규모 쿼리의 경우 GPT-4o보다 26% 저렴하고, GPT-4.1 nano는 가장 저렴하고 빠른 모델이라고 해요.</p>\n<p data-ke-size=\"size16\">또 하나 좋은 점은 캐시된 입력에 대한 할인이 이전의 50%에서 75%로 증가했다는 거예요. 같은 컨텍스트를 반복해서 전달하는 경우에 더 많은 비용을 절약할 수 있게 된 거죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">확실히 더 저렴해진 가격은 중소기업이나 개인 개발자들에게 큰 도움이 될 것 같아요. 특히 GPT-4.1 nano는 정말 매력적인 가격대라고 생각해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>내가 받은 느낌은?  </b></span></h2>\n<p data-ke-size=\"size16\">이번 GPT-4.1 시리즈 발표를 보면서 정말 많은 생각이 들었어요. AI 기술이 이렇게 빠르게 발전하는 걸 보니 약간 두렵기도 하지만, 동시에 정말 기대되기도 해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특히 코딩 능력의 향상은 소프트웨어 개발 방식을 완전히 바꿀 수 있을 것 같아요. 개발자들이 복잡한 코드를 더 쉽게 작성하고 수정할 수 있게 되면, 더 빠르게 혁신적인 제품들이 나올 수 있겠죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">긴 컨텍스트 기능도 정말 흥미로워요. 법률 문서, 의학 연구, 학술 논문 등 긴 문서를 분석하는 데 엄청난 도움이 될 것 같아요. 이전에는 불가능했던 방식으로 정보를 처리하고 통찰력을 얻을 수 있게 될 거예요.</p>\n<p data-ke-size=\"size16\">지시 이행 능력의 향상은 AI가 더 신뢰할 수 있는 도구가 되었다는 걸 의미해요. 사용자가 원하는 정확한 결과를 더 쉽게 얻을 수 있게 되었으니까요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 여전히 몇 가지 질문도 남아있어요. 이런 강력한 AI 도구들이 사회에 어떤 영향을 미칠까요? 직업 시장은 어떻게 변할까요? 우리는 어떻게 이 기술을 책임감 있게 사용할 수 있을까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>GPT-4.1 시리즈, 누구를 위한 모델일까?  </b></span></h2>\n<p data-ke-size=\"size16\">GPT-4.1 시리즈는 다양한 사용자와 사용 사례를 위해 설계되었어요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #009688; color: white;\">\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: left;\">모델</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">주요 사용자층</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">주요 특징</th>\n<th style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">비용 효율성</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">최고 성능을 원하는 사용자</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">코딩 능력, 정확한 지시 이행, 긴 문서 분석</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">중간</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1 mini</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">균형 잡힌 성능과 비용을 원하는 사용자</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4o보다 더 좋은 성능, 지연 시간 절반</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">높음</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">GPT-4.1 nano</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">짧은 대기 시간이 중요한 작업</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">분류, 자동 완성, 100만 토큰 컨텍스트</td>\n<td style=\"padding: 10px; border: 1px solid #ddd; text-align: center;\">매우 높음</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">GPT-4.1은 최고의 성능을 원하는 사용자를 위한 모델이에요. 복잡한 코딩 작업, 정확한 지시 이행이 필요한 작업, 긴 문서 분석 등에 적합해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">GPT-4.1 mini는 균형 잡힌 성능과 비용을 원하는 사용자에게 적합해요. GPT-4o보다 여러 벤치마크에서 더 좋은 성능을 보이면서도 지연 시간은 절반으로 줄고 비용은 83% 감소했다고 하니 정말 매력적이죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">GPT-4.1 nano는 짧은 대기 시간이 중요한 작업에 적합해요. 분류나 자동 완성과 같은 작업에 이상적이라고 해요. 100만 토큰의 컨텍스트 윈도우를 가지고 있으면서도 MMLU에서 80.1%, GPQA에서 50.3%의 높은 점수를 받았대요.</p>\n<p data-ke-size=\"size16\">저는 개인적으로 GPT-4.1 mini가 가성비 면에서 가장 좋은 선택일 것 같다는 생각이 들어요. 대부분의 일반적인 작업에 충분한 성능을 제공하면서도 비용은 상당히 저렴하니까요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1263\" data-origin-height=\"794\"><span data-url=\"https://blog.kakaocdn.net/dn/k8Dbg/btsNnx9IUT0/EblLfRQjlhiSN4qaUeA101/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/k8Dbg/btsNnx9IUT0/EblLfRQjlhiSN4qaUeA101/img.png\"><img src=\"https://blog.kakaocdn.net/dn/k8Dbg/btsNnx9IUT0/EblLfRQjlhiSN4qaUeA101/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fk8Dbg%2FbtsNnx9IUT0%2FEblLfRQjlhiSN4qaUeA101%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"GPT-4.1 시리즈, 무엇이 달라졌을까?\" loading=\"lazy\" width=\"1263\" height=\"794\" data-origin-width=\"1263\" data-origin-height=\"794\"/></span></figure>\n</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>자주 묻는 질문 (FAQ) ❓</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: GPT-4.1은 ChatGPT에서도 사용할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 아니요, GPT-4.1은 API를 통해서만 제공됩니다. ChatGPT에서는 지시 이행, 코딩, 지능 향상 등의 개선 사항이 GPT-4o의 최신 버전에 점진적으로 통합되고 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: GPT-4.1의 컨텍스트 윈도우는 얼마나 큰가요?</b></p>\n<p data-ke-size=\"size16\">A: GPT-4.1, GPT-4.1 mini, GPT-4.1 nano 모두 100만 토큰의 컨텍스트 윈도우를 지원합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: GPT-4.1 시리즈의 가격은 어떻게 되나요?</b></p>\n<p data-ke-size=\"size16\">A: GPT-4.1은 입력 100만 토큰당 $2, GPT-4.1 mini는 $0.40, GPT-4.1 nano는 $0.10입니다. 출력 토큰은 각각 $8, $1.60, $0.40입니다.</p>\n<p data-ke-size=\"size16\"><b>Q: GPT-4.5 Preview는 어떻게 되나요?</b></p>\n<p data-ke-size=\"size16\">A: GPT-4.5 Preview는 3개월 후인 2025년 7월 14일에 API에서 중단될 예정입니다. GPT-4.1이 더 낮은 비용과 지연 시간으로 더 좋거나 유사한 성능을 제공하기 때문입니다.</p>\n<p data-ke-size=\"size16\"><b>Q: GPT-4.1 시리즈의 지식 기반은 언제까지의 정보를 포함하고 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 2024년 6월까지의 정보를 담고 있습니다.</p>\n<div style=\"margin: 0px auto; border: 2px dashed #ff5722; position: absolute; z-index: 2147483647; visibility: hidden; background-color: rgba(255, 87, 34, 0.1); left: 738px; width: 0px; top: 2092px; height: 0px;\">&nbsp;</div>\n<div style=\"z-index: 2147483647; position: absolute; visibility: hidden; padding: 5px 10px; font-size: 14px; font-family: Arial, sans-serif; color: #ffffff; background-color: #00633e; border-radius: 15px; box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 5px; font-weight: bold; left: 753px; top: 2052px;\">&nbsp;</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.1은 ChatGPT에서도 사용할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"아니요, GPT-4.1은 API를 통해서만 제공됩니다. ChatGPT에서는 지시 이행, 코딩, 지능 향상 등의 개선 사항이 GPT-4o의 최신 버전에 점진적으로 통합되고 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.1의 컨텍스트 윈도우는 얼마나 큰가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"GPT-4.1, GPT-4.1 mini, GPT-4.1 nano 모두 100만 토큰의 컨텍스트 윈도우를 지원합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.1 시리즈의 가격은 어떻게 되나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"GPT-4.1은 입력 100만 토큰당 $2, GPT-4.1 mini는 $0.40, GPT-4.1 nano는 $0.10입니다. 출력 토큰은 각각 $8, $1.60, $0.40입니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.5 Preview는 어떻게 되나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"GPT-4.5 Preview는 3개월 후인 2025년 7월 14일에 API에서 중단될 예정입니다. GPT-4.1이 더 낮은 비용과 지연 시간으로 더 좋거나 유사한 성능을 제공하기 때문입니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.1 시리즈의 지식 기반은 언제까지의 정보를 포함하고 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"2024년 6월까지의 정보를 담고 있습니다.\"\n    }\n  }]\n}\n</script>",
        "contentSnippet": "GPT-4.1 시리즈의 혁신적 기능과 성능 향상을 소개합니다. 코딩, 긴 컨텍스트 처리, 지시 이행 능력이 크게 개선되었고, 최초의 나노 모델까지 출시된 GPT-4.1의 모든 것을 파헤쳐볼게요!\n\n\n \n어제 정말 신기한 뉴스를 봤어요. OpenAI가 또 새로운 모델을 출시했더라고요. 요새 AI 기술이 진짜 미친 속도로 발전하는데, 그냥 따라가기도 버거울 지경이에요. 근데 이번에 나온 GPT-4.1 시리즈는 뭔가 특별해 보이더라고요. 코딩 능력이 확 좋아졌다는데, 개발자분들은 어떻게 생각하세요? 저같은 일반인한테도 도움될까요?\n \nGPT-4.1 시리즈, 무엇이 달라졌을까?  \nOpenAI가 API를 통해 제공하는 세 가지 새로운 모델을 소개했어요. GPT-4.1, GPT-4.1 mini, 그리고 GPT-4.1 nano까지. 이 모델들은 기존의 GPT-4o와 GPT-4o mini보다 전반적으로 더 뛰어난 성능을 보여준다고 해요. 특히 코딩과 지시사항 이행 능력에서 엄청난 발전이 있었다고 하네요.\n \n가장 눈에 띄는 변화는 컨텍스트 윈도우의 크기예요. 무려 100만 토큰까지 처리할 수 있게 되었다고 해요! 이전 모델들이 128,000 토큰까지 처리할 수 있었던 것과 비교하면 정말 큰 발전이죠. 그리고 단순히 더 많은 컨텍스트를 처리하는 것뿐만 아니라, 그 컨텍스트를 더 효율적으로 이해하고 활용할 수 있게 되었다고 해요.\n \n또한 지식 기반도 업데이트되어 2024년 6월까지의 정보를 담고 있어요. 이제 좀 더 최신 정보에 대해서도 물어볼 수 있겠네요.\n \n코딩 능력이 대폭 향상됐어요  \n제가 개인적으로 가장 흥미로웠던 부분은 코딩 능력의 향상이에요. GPT-4.1은 SWE-bench Verified에서 54.6%의 점수를 받았다고 해요. 이는 GPT-4o의 33.2%보다 무려 21.4% 포인트나 높은 점수예요!\n모델\nSWE-bench Verified 점수\n향상된 정도\n\n\n\n\nGPT-4.1\n54.6%\n기준\n\n\nGPT-4o\n33.2%\n-21.4%\n\n\nGPT-4.5\n38.0%\n-16.6%\n\n\n\n실제 사용자들의 반응도 놀라웠어요. Windsurf라는 회사에서는 GPT-4.1이 내부 코딩 벤치마크에서 GPT-4o보다 60% 높은 점수를 받았다고 해요. 특히 도구 호출에서 30% 더 효율적이었고, 불필요한 편집을 반복할 가능성이 약 50% 낮았다고 하네요.\n이거 진짜 대단한 발전 아닌가요? 개발자들이 코드를 작성하고, 디버깅하는 데 훨씬 더 도움이 될 것 같아요. 제가 개발자는 아니지만, 이런 발전이 미래의 소프트웨어 개발에 어떤 영향을 미칠지 정말 궁금해요.\n \n지시 이행 능력도 확실히 좋아졌어요  \nGPT-4.1은 지시 이행 능력도 크게 향상되었어요. 특히 Format following, Negative instructions, Ordered instructions, Content requirements, Ranking, Overconfidence 등 여러 범주에서 성능이 향상되었다고 해요.\n벤치마크\nGPT-4.1\nGPT-4o\n향상도\n\n\n\n\nMultiChallenge\n38.3%\n27.8%\n+10.5%\n\n\nIFEval\n87.4%\n81.0%\n+6.4%\n\n\n내부 API 지시 이행 (어려운 유형)\n49.1%\n29.2%\n+19.9%\n\n\n\n실제로 세금 관련 회사인 Blue J에서는 GPT-4.1이 내부 벤치마크에서 GPT-4o보다 53% 더 정확했다고 해요. Hex라는 회사에서는 SQL 평가 세트에서 거의 2배 향상된 성능을 보였다고 하네요.\n \n이런 개선은 복잡한 지시사항을 더 잘 따를 수 있게 해준다는 뜻이니까, 실무에서 활용도가 훨씬 높아질 것 같아요. 솔직히 말해서, 이전 모델들도 간단한 지시는 잘 따랐지만 복잡한 지시나 여러 단계의 지시는 종종 헷갈려 했잖아요? 이제 그런 문제가 많이 해결될 것 같네요.\n \n100만 토큰의 긴 컨텍스트, 어떻게 활용할까?  \nGPT-4.1 시리즈의 가장 큰 변화 중 하나는 100만 토큰의 컨텍스트 윈도우예요. 이건 React 코드베이스 전체를 8개 넣을 수 있는 양이라고 하네요. 진짜 엄청난 양이죠?\n \nOpenAI는 GPT-4.1이 이 긴 컨텍스트에서 정보를 효과적으로 찾고 활용할 수 있도록 특별히 훈련시켰다고 해요. 'Needle in a Haystack' 테스트에서 GPT-4.1은 100만 토큰 안에 숨겨진 정보를 정확하게 찾아낼 수 있었다고 해요.\n \n또 흥미로운 점은 OpenAI가 새로운 평가 방식인 OpenAI-MRCR과 Graphwalks를 공개했다는 거예요. 이 평가들은 모델이 긴 컨텍스트에서 여러 정보를 어떻게 찾고 연결하는지 테스트하는 방식이라고 해요.\n모델\n컨텍스트 윈도우\nOpenAI-MRCR (2 바늘) 128k\nGraphwalks bfs <128k\n\n\n\n\nGPT-4.1\n100만 토큰\n57.2%\n61.7%\n\n\nGPT-4.1 mini\n100만 토큰\n47.2%\n61.7%\n\n\nGPT-4.1 nano\n100만 토큰\n36.6%\n25.0%\n\n\nGPT-4o\n128k 토큰\n31.9%\n41.7%\n\n\n\n실제 사용 사례도 인상적이었어요. Thomson Reuters는 GPT-4.1을 사용해 다중 문서 검토 정확도를 17% 향상시켰고, Carlyle은 매우 큰 문서에서 세부적인 재무 데이터를 추출하는 성능이 50% 향상되었다고 해요.\n \n솔직히 말해서, 이런 긴 컨텍스트 기능은 법률, 금융, 의료 등 복잡한 문서를 다루는 분야에서 정말 혁신적인 변화를 가져올 것 같아요. 생각해보세요, 수백 페이지의 계약서나 의료 기록을 한 번에 분석할 수 있다면 얼마나 편리할까요?\n 컨텍스트는 AI 모델이 대화나 질문을 이해하기 위해 고려하는 배경 정보나 이전 대화 내용을 의미해요. 쉽게 설명하자면, 사람과 대화할 때 이전에 나눈 모든 대화를 기억하고 참고하는 것과 비슷해요.\n \n비전(Vision) 능력도 강화됐어요  ️\nGPT-4.1 시리즈는 이미지 이해 능력도 크게 향상되었어요. 특히 GPT-4.1 mini는 이미지 벤치마크에서 종종 GPT-4o보다 더 좋은 성능을 보여줬다고 해요.\n벤치마크\nGPT-4.1\nGPT-4.1 mini\nGPT-4o\n\n\n\n\nMMMU\n74.8%\n72.7%\n68.7%\n\n\nMathVista\n72.2%\n73.1%\n61.4%\n\n\nCharXiv-R\n56.7%\n56.8%\n52.7%\n\n\nVideo-MME (자막 없음)\n72.0%\n-\n65.3%\n\n\n\nMMMU에서 GPT-4.1은 74.8%, GPT-4.1 mini는 72.7%의 점수를 받았어요. 이는 GPT-4o의 68.7%보다 훨씬 높은 점수죠. MathVista에서도 GPT-4.1은 72.2%, GPT-4.1 mini는 73.1%로 GPT-4o의 61.4%를 크게 앞섰어요.\n \nVideo-MME 테스트에서는 GPT-4.1이 72.0%의 점수를 얻어 GPT-4o의 65.3%보다 훨씬 좋은 성적을 거뒀어요. 이 테스트는 30-60분 길이의 자막 없는 비디오를 기반으로 질문에 답하는 테스트인데, 정말 인상적인 성능이죠?\n \n아직 사진이나 비디오를 많이 활용하진 않지만, 앞으로는 이런 비전 능력을 활용한 애플리케이션이 더 많아질 것 같아요. 제 생각엔 교육이나 의료 분야에서 특히 유용할 것 같네요.\n \n가격은 어떻게 변했을까?  \n가격도 상당히 흥미로웠어요. OpenAI는 추론 시스템의 효율성 향상으로 GPT-4.1 시리즈의 가격을 낮출 수 있었다고 해요.\n모델\n입력 (100만 토큰)\n캐시된 입력 (100만 토큰)\n출력 (100만 토큰)\n혼합 가격*\n\n\n\n\nGPT-4.1\n$2.00\n$0.50\n$8.00\n$1.84\n\n\nGPT-4.1 mini\n$0.40\n$0.10\n$1.60\n$0.42\n\n\nGPT-4.1 nano\n$0.10\n$0.025\n$0.40\n$0.12\n\n\n\n*일반적인 입력/출력 및 캐시 비율 기준\n \nGPT-4.1은 중간 규모 쿼리의 경우 GPT-4o보다 26% 저렴하고, GPT-4.1 nano는 가장 저렴하고 빠른 모델이라고 해요.\n또 하나 좋은 점은 캐시된 입력에 대한 할인이 이전의 50%에서 75%로 증가했다는 거예요. 같은 컨텍스트를 반복해서 전달하는 경우에 더 많은 비용을 절약할 수 있게 된 거죠.\n \n확실히 더 저렴해진 가격은 중소기업이나 개인 개발자들에게 큰 도움이 될 것 같아요. 특히 GPT-4.1 nano는 정말 매력적인 가격대라고 생각해요.\n \n내가 받은 느낌은?  \n이번 GPT-4.1 시리즈 발표를 보면서 정말 많은 생각이 들었어요. AI 기술이 이렇게 빠르게 발전하는 걸 보니 약간 두렵기도 하지만, 동시에 정말 기대되기도 해요.\n \n특히 코딩 능력의 향상은 소프트웨어 개발 방식을 완전히 바꿀 수 있을 것 같아요. 개발자들이 복잡한 코드를 더 쉽게 작성하고 수정할 수 있게 되면, 더 빠르게 혁신적인 제품들이 나올 수 있겠죠.\n \n긴 컨텍스트 기능도 정말 흥미로워요. 법률 문서, 의학 연구, 학술 논문 등 긴 문서를 분석하는 데 엄청난 도움이 될 것 같아요. 이전에는 불가능했던 방식으로 정보를 처리하고 통찰력을 얻을 수 있게 될 거예요.\n지시 이행 능력의 향상은 AI가 더 신뢰할 수 있는 도구가 되었다는 걸 의미해요. 사용자가 원하는 정확한 결과를 더 쉽게 얻을 수 있게 되었으니까요.\n \n하지만 여전히 몇 가지 질문도 남아있어요. 이런 강력한 AI 도구들이 사회에 어떤 영향을 미칠까요? 직업 시장은 어떻게 변할까요? 우리는 어떻게 이 기술을 책임감 있게 사용할 수 있을까요?\n \nGPT-4.1 시리즈, 누구를 위한 모델일까?  \nGPT-4.1 시리즈는 다양한 사용자와 사용 사례를 위해 설계되었어요.\n모델\n주요 사용자층\n주요 특징\n비용 효율성\n\n\n\n\nGPT-4.1\n최고 성능을 원하는 사용자\n코딩 능력, 정확한 지시 이행, 긴 문서 분석\n중간\n\n\nGPT-4.1 mini\n균형 잡힌 성능과 비용을 원하는 사용자\nGPT-4o보다 더 좋은 성능, 지연 시간 절반\n높음\n\n\nGPT-4.1 nano\n짧은 대기 시간이 중요한 작업\n분류, 자동 완성, 100만 토큰 컨텍스트\n매우 높음\n\n\n\nGPT-4.1은 최고의 성능을 원하는 사용자를 위한 모델이에요. 복잡한 코딩 작업, 정확한 지시 이행이 필요한 작업, 긴 문서 분석 등에 적합해요.\n \nGPT-4.1 mini는 균형 잡힌 성능과 비용을 원하는 사용자에게 적합해요. GPT-4o보다 여러 벤치마크에서 더 좋은 성능을 보이면서도 지연 시간은 절반으로 줄고 비용은 83% 감소했다고 하니 정말 매력적이죠.\n \nGPT-4.1 nano는 짧은 대기 시간이 중요한 작업에 적합해요. 분류나 자동 완성과 같은 작업에 이상적이라고 해요. 100만 토큰의 컨텍스트 윈도우를 가지고 있으면서도 MMLU에서 80.1%, GPQA에서 50.3%의 높은 점수를 받았대요.\n저는 개인적으로 GPT-4.1 mini가 가성비 면에서 가장 좋은 선택일 것 같다는 생각이 들어요. 대부분의 일반적인 작업에 충분한 성능을 제공하면서도 비용은 상당히 저렴하니까요.\n \n\n\n\n자주 묻는 질문 (FAQ) ❓\nQ: GPT-4.1은 ChatGPT에서도 사용할 수 있나요?\nA: 아니요, GPT-4.1은 API를 통해서만 제공됩니다. ChatGPT에서는 지시 이행, 코딩, 지능 향상 등의 개선 사항이 GPT-4o의 최신 버전에 점진적으로 통합되고 있습니다.\nQ: GPT-4.1의 컨텍스트 윈도우는 얼마나 큰가요?\nA: GPT-4.1, GPT-4.1 mini, GPT-4.1 nano 모두 100만 토큰의 컨텍스트 윈도우를 지원합니다.\nQ: GPT-4.1 시리즈의 가격은 어떻게 되나요?\nA: GPT-4.1은 입력 100만 토큰당 $2, GPT-4.1 mini는 $0.40, GPT-4.1 nano는 $0.10입니다. 출력 토큰은 각각 $8, $1.60, $0.40입니다.\nQ: GPT-4.5 Preview는 어떻게 되나요?\nA: GPT-4.5 Preview는 3개월 후인 2025년 7월 14일에 API에서 중단될 예정입니다. GPT-4.1이 더 낮은 비용과 지연 시간으로 더 좋거나 유사한 성능을 제공하기 때문입니다.\nQ: GPT-4.1 시리즈의 지식 기반은 언제까지의 정보를 포함하고 있나요?\nA: 2024년 6월까지의 정보를 담고 있습니다.\n \n \n \n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.1은 ChatGPT에서도 사용할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"아니요, GPT-4.1은 API를 통해서만 제공됩니다. ChatGPT에서는 지시 이행, 코딩, 지능 향상 등의 개선 사항이 GPT-4o의 최신 버전에 점진적으로 통합되고 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.1의 컨텍스트 윈도우는 얼마나 큰가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"GPT-4.1, GPT-4.1 mini, GPT-4.1 nano 모두 100만 토큰의 컨텍스트 윈도우를 지원합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.1 시리즈의 가격은 어떻게 되나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"GPT-4.1은 입력 100만 토큰당 $2, GPT-4.1 mini는 $0.40, GPT-4.1 nano는 $0.10입니다. 출력 토큰은 각각 $8, $1.60, $0.40입니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.5 Preview는 어떻게 되나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"GPT-4.5 Preview는 3개월 후인 2025년 7월 14일에 API에서 중단될 예정입니다. GPT-4.1이 더 낮은 비용과 지연 시간으로 더 좋거나 유사한 성능을 제공하기 때문입니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT-4.1 시리즈의 지식 기반은 언제까지의 정보를 포함하고 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"2024년 6월까지의 정보를 담고 있습니다.\"\n    }\n  }]\n}",
        "guid": "http://muzbox.tistory.com/483569",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "AI 개발",
          "gpt-4.1",
          "gpt-4.1 mini",
          "gpt-4.1 nano",
          "OpenAI",
          "긴 컨텍스트",
          "인공지능",
          "지시 이행",
          "컨텍스트 윈도우",
          "코딩 능력"
        ],
        "isoDate": "2025-04-16T01:06:48.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": []
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "2024년 우리가 가장 좋아하는 새로운 Visual Studio 기능들",
        "link": "https://jacking75.github.io/VS_20250422/",
        "pubDate": "Tue, 22 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRE-bRKdm8XZLxf8hhR6dMclqg6BwRYvQx71JHUf-hcET9hGjYuRVBe0Jp_YBrW7ICB8P3NqjpuBRHV/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250422/",
        "isoDate": "2025-04-21T15:00:00.000Z"
      },
      {
        "title": "Visual Studio 17.12의 디버거 및 진단 업데이트",
        "link": "https://jacking75.github.io/VS_20250421/",
        "pubDate": "Mon, 21 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTUvcxqgLEIp9YSWZ4SMXSOmYM35198wFCIl06MNKE0q6_c6tXWqBk-ak2sUCM0bbAdQB29-EbMKol9/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250421/",
        "isoDate": "2025-04-20T15:00:00.000Z"
      },
      {
        "title": "Visual Studio의 새로운 디버깅 및 프로파일링 기능(v17.13)",
        "link": "https://jacking75.github.io/VS_20250420/",
        "pubDate": "Sun, 20 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vSc1XNdGPas-taoTVTuTH2mDwNFwJVX-6dCZcnTxIpBQdlMLlxpwZDT0H7leoUB0caR6B8I3_NdSZUE/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250420/",
        "isoDate": "2025-04-19T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "한국 인기 PHP CMS 비교 분석 및 추천: 워드프레스, 그누보드, 라이믹스, Zigger 등",
        "link": "https://blog.gaerae.com/2025/04/php-cms-wordpress-gnuboard-rhymix-zigger.html",
        "pubDate": "Mon, 21 Apr 2025 08:24:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<img alt=\"\" border=\"0\" data-original-height=\"720\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5RmEK0PgomZDlIg7ciqDOZrvQD-GDzGdSsQRC_R3DVLK-eVNgoxVpshgtJjhkgvnm3glSoMYge5TQF70lHxcLZMsKTOS0Ez-6KC4TbNaob-3p9nYUPbWM_5-HZiVfk04BtDsqhBA5XtKyjvT3azxjIVvBjkkll2-Sn8R-0SdGVZqK5JwuhMjBmANyy5U/s1600/%E1%84%92%E1%85%A1%E1%86%AB%E1%84%80%E1%85%AE%E1%86%A8%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%80%E1%85%B5PHP-CMS-%E1%84%87%E1%85%B5%E1%84%80%E1%85%AD%E1%84%87%E1%85%AE%E1%86%AB%E1%84%89%E1%85%A5%E1%86%A8%E1%84%86%E1%85%B5%E1%86%BE%E1%84%8E%E1%85%AE%E1%84%8E%E1%85%A5%E1%86%AB.png\" />\n<p>웹사이트를 만들고 싶으신가요? 블로그, 커뮤니티, 기업 홈페이지 등 어떤 형태든 콘텐츠 관리 시스템(CMS)을 사용하면 훨씬 수월하게 제작하고 운영할 수 있습니다. 특히 전 세계 웹사이트의 상당수가 PHP 언어를 기반으로 만들어졌기에, PHP 기반 CMS는 여전히 강력하고 인기 있는 선택지입니다.</p>\n<p>한국에서는 국내 환경에 특화된 CMS부터 세계적으로 유명한 CMS까지 다양한 PHP 기반 도구들이 사용되고 있습니다. 하지만 각 CMS는 저마다의 특징과 장단점을 가지고 있어, 내 프로젝트의 목적과 규모, 개발 지식 수준, 그리고 <strong>한국어 지원</strong> 수준에 맞는 도구를 선택하는 것이 중요합니다.</p>\n<p>이 글에서는 한국에서 개발되었거나 인기를 얻고 있는 주요 PHP 기반 CMS들을 비교 분석하여 여러분의 현명한 선택을 돕고자 합니다. 각 CMS의 공식 사이트, 오픈소스 여부, <strong>개발팀 및 한국어 지원 현황</strong>, 커뮤니티 성숙도, 그리고 가장 중요한 장단점을 꼼꼼히 살펴보겠습니다.</p>\n<h2>주요 PHP CMS 도구 비교표 (2025년 기준)</h2>\n<p>먼저 각 CMS의 핵심 정보를 한눈에 비교할 수 있도록 표로 정리했습니다.</p>\n<table>\n<thead>\n<tr>\n<th><strong>도구명</strong></th>\n<th><strong>공식 사이트</strong></th>\n<th><strong>개발팀 및 한국어 지원</strong></th>\n<th><strong>오픈소스 여부</strong></th>\n<th><strong>소스 저장소</strong></th>\n<th><strong>커뮤니티 활동 및 성숙도</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>워드프레스</strong></td>\n<td><a href=\"https://wordpress.org/\">wordpress.org</a></td>\n<td>WordPress 재단 (미국) / <strong>매우 우수</strong> (공식 지원)</td>\n<td>Yes (GPLv2)</td>\n<td>GitHub (WordPress)</td>\n<td>세계 최대 규모 커뮤니티, 활발한 한글 포럼, 연 단위 메이저 업데이트 (현재 6.x 버전대)</td>\n</tr>\n<tr>\n<td><strong>그누보드</strong></td>\n<td><a href=\"http://sir.kr/\">sir.kr</a></td>\n<td>SIR SOFT (국내) / <strong>네이티브 지원</strong></td>\n<td>Yes (LGPL 2.1)</td>\n<td>GitHub (gnuboard5)</td>\n<td>공식 포럼(SIR) 매우 활발, 지속적 업데이트 (최신 버전 꾸준히 릴리스)</td>\n</tr>\n<tr>\n<td><strong>라이믹스</strong></td>\n<td><a href=\"https://rhymix.org/\">rhymix.org</a></td>\n<td>XE 포크 커뮤니티 (국내) / <strong>네이티브 지원</strong></td>\n<td>Yes (GPLv2)</td>\n<td>GitHub (rhymix/rhymix)</td>\n<td>공식 포럼 및 XETOWN 커뮤니티 활발, 2.x 버전 꾸준히 배포 중</td>\n</tr>\n<tr>\n<td><strong>Zigger</strong></td>\n<td><a href=\"https://www.zigger.net/\">zigger.net</a></td>\n<td>개발자 커뮤니티 (국내) / <strong>네이티브 지원</strong></td>\n<td>Yes (LGPL 2.1)</td>\n<td>GitHub (ziggerFramework)</td>\n<td>공식 포럼 운영, 2024년 말까지 활발히 업데이트 (2025년 지속 여부 확인 필요)</td>\n</tr>\n<tr>\n<td><strong>WinterCMS</strong></td>\n<td><a href=\"https://wintercms.com/\">wintercms.com</a></td>\n<td>국제 커뮤니티 / <strong>제한적 지원</strong> (UI 번역 가능)</td>\n<td>Yes (MIT)</td>\n<td>GitHub (wintercms)</td>\n<td>Discord 중심 커뮤니티 활발, 정기 업데이트 (최신 Laravel LTS 지원 목표)</td>\n</tr>\n<tr>\n<td><strong>TypiCMS</strong></td>\n<td><a href=\"https://typicms.org/\">typicms.org</a></td>\n<td>국제 개발팀 / <strong>제한적 지원</strong> (다국어 기능 내장)</td>\n<td>Yes (MIT)</td>\n<td>GitHub (TypiCMS/Base)</td>\n<td>GitHub 통해 개발 활발, 소규모 개발자 커뮤니티</td>\n</tr>\n<tr>\n<td><strong>Statamic</strong></td>\n<td><a href=\"https://statamic.com/\">statamic.com</a></td>\n<td>Statamic 팀 (미국) / <strong>제한적 지원</strong> (UI 번역 가능)</td>\n<td>Yes* (제한 있음)</td>\n<td>GitHub (statamic/cms)</td>\n<td>Discord 커뮤니티 활발, 유료 Pro 지원, 현재 v5 버전대 운영</td>\n</tr>\n</tbody>\n</table>\n<p>*Statamic: 코어는 오픈소스이나 상업적/팀 사용 시 유료 Pro 라이선스가 필요합니다.</p>\n<hr />\n<h2>CMS 도구별 장점 및 단점 상세 분석</h2>\n<p>이제 각 CMS의 특징을 좀 더 자세히 살펴보겠습니다.</p>\n<h3>1. 워드프레스 (WordPress)</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 전 세계적으로 가장 많이 사용되는 압도적인 생태계를 갖춘 PHP CMS의 제왕. (<strong>한국어 지원 매우 우수</strong>)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>압도적인 생태계:</strong> 수만 개의 테마와 플러그인을 통해 상상하는 거의 모든 기능을 구현할 수 있습니다. (블로그, 쇼핑몰, 커뮤니티 등)</li>\n<li><strong>높은 범용성 및 접근성:</strong> 초보자부터 전문가까지 누구나 쉽게 설치하고 사용할 수 있으며, 관련 자료와 커뮤니티 지원이 매우 풍부합니다.</li>\n<li><strong>우수한 한국어 지원:</strong> <strong>공식 한국어 버전</strong>이 제공되며, 관리자 화면, 테마, 플러그인 등에서 한국어 지원이 매우 잘 되어 있습니다. 활발한 <strong>한국어 커뮤니티와 문서</strong>도 큰 장점입니다.</li>\n<li><strong>쉬운 콘텐츠 관리:</strong> 직관적인 관리자 화면과 강력한 편집기는 콘텐츠 생성 및 관리에 최적화되어 있습니다.</li>\n<li><strong>완전 무료 오픈소스 (GPL):</strong> 라이선스 걱정 없이 자유롭게 사용하고 수정할 수 있습니다.</li>\n<li><strong>지속적인 업데이트:</strong> 핵심 개발팀과 전 세계 커뮤니티에 의해 꾸준히 업데이트되고 발전합니다. (현재 6.x 버전대)</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>성능 및 보안 이슈:</strong> 많은 플러그인 사용 시 사이트 속도가 느려질 수 있으며, 인기가 많은 만큼 해킹 공격의 주 대상이 되므로 보안 관리에 신경 써야 합니다.</li>\n<li><strong>플러그인 의존성 및 충돌:</strong> 원하는 기능을 구현하기 위해 플러그인에 크게 의존하게 되며, 플러그인 간 충돌이나 호환성 문제가 발생할 수 있습니다.</li>\n<li><strong>복잡한 코드 구조:</strong> 오래된 역사만큼 코드 구조가 현대적이지 않아 개발자가 깊이 있는 커스터마이징을 할 때 어려움을 느낄 수 있습니다.</li>\n<li><strong>국내 특화 기능 부족:</strong> 한국만의 특수한 결제 시스템 연동이나 본인인증 등은 별도 플러그인 개발이나 유료 솔루션이 필요할 수 있습니다. (단, 관련 플러그인이 다수 존재)</li>\n</ul>\n</li>\n</ul>\n<h3>2. 그누보드 (Gnuboard)</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 쉽고 빠른 <strong>한국형</strong> 게시판 중심 웹사이트 구축에 최적화된 국산 CMS의 대표주자. (한국어 네이티브 지원)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>쉬운 사용법:</strong> 설치가 간편하고 직관적인 관리자 화면을 제공하여 초보자도 쉽게 접근할 수 있습니다. (모든 인터페이스 한국어 기본)</li>\n<li><strong>핵심 기능 내장:</strong> 게시판, 회원 관리, 쪽지, 포인트, 설문조사 등 웹사이트 운영에 필요한 필수 기능 대부분이 기본으로 포함되어 있습니다.</li>\n<li><strong>풍부한 한국어 자료:</strong> 국내 최대 규모의 커뮤니티(SIR)를 통해 수많은 스킨, 플러그인, 팁, 문제 해결 방법을 <strong>한국어</strong>로 얻을 수 있습니다.</li>\n<li><strong>자유로운 커스터마이징:</strong> LGPL 라이선스로 저작권 표기 의무가 없어 자유롭게 수정하고 활용할 수 있습니다.</li>\n<li><strong>오랜 역사와 안정성:</strong> 2003년부터 꾸준히 업데이트되며 안정성을 검증받았습니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>구조적 한계:</strong> 오래된 PHP 방식으로 개발되어 테마 변경 시 코어 파일을 직접 수정해야 하는 경우가 있어 업데이트 시 어려움이 발생할 수 있습니다.</li>\n<li><strong>보안 고려 필요:</strong> 일부 오래된 함수(extract 등) 사용으로 인해 개발자가 보안에 신경 써야 할 부분이 남아있습니다.</li>\n<li><strong>현대적 개발 패턴과 거리:</strong> 최신 PHP 프레임워크 기반이 아니므로 모던 웹 개발 트렌드와는 다소 차이가 있습니다.</li>\n<li><strong>모바일 반응형:</strong> 기본 기능 외 모바일 최적화 등은 커뮤니티 자료에 의존해야 합니다.</li>\n</ul>\n</li>\n</ul>\n<h3>3. 라이믹스 (Rhymix)</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> XpressEngine(XE)의 장점을 계승하고 현대적으로 발전시킨 강력한 <strong>국산</strong> CMS 프레임워크. (한국어 네이티브 지원)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>뛰어난 확장성:</strong> 모듈, 애드온, 위젯, 스킨 등 체계적인 구조를 통해 기능 추가 및 디자인 변경이 매우 유연합니다. XE용으로 개발된 방대한 자료를 상당 부분 활용할 수 있습니다.</li>\n<li><strong>지속적인 발전:</strong> XE의 개발 중단 이후에도 5년 이상 꾸준히 업데이트되며 PHP 최신 버전 지원, 성능 개선, 보안 강화가 이루어지고 있습니다.</li>\n<li><strong>활발한 한국어 커뮤니티:</strong> 공식 포럼과 XETOWN 등에서 사용자 간의 활발한 정보 교류 및 지원이 <strong>한국어</strong>로 이루어집니다.</li>\n<li><strong>검증된 성능:</strong> 대규모 커뮤니티 사이트 운영 사례(동시 접속자 1만 명 이상)를 통해 성능과 안정성이 입증되었습니다.</li>\n<li><strong>오픈소스 철학:</strong> GPL 라이선스로 전환하여 자유로운 사용과 기여를 장려합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>학습 곡선:</strong> XE/라이믹스 특유의 구조(모듈, 애드온, 레이아웃 등)에 대한 이해가 필요하여 초심자에게는 다소 어려울 수 있습니다.</li>\n<li><strong>높은 초기 복잡도:</strong> 다양한 기능을 제공하는 만큼 초기 설정이나 운영에 있어 그누보드보다 요구사항이 많고 복잡하게 느껴질 수 있습니다.</li>\n<li><strong>국내 중심 생태계:</strong> 글로벌 CMS에 비해 해외 자료나 사용자는 상대적으로 적습니다.</li>\n<li><strong>관리 필요성:</strong> 기능이 많고 업데이트가 잦은 편이라 꾸준한 관리가 요구됩니다.</li>\n</ul>\n</li>\n</ul>\n<h3>4. Zigger</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 반응형 웹사이트 구축에 초점을 맞춘 비교적 최신의 <strong>국산</strong> 오픈소스 CMS. (한국어 네이티브 지원)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>쉬운 반응형 웹 제작:</strong> 처음부터 반응형 웹을 염두에 두고 개발되어 모바일 친화적인 사이트를 쉽게 만들 수 있도록 지원합니다.</li>\n<li><strong>필수 기능 내장:</strong> 웹사이트 관리, 회원, 배너, 팝업, 메일 발송 등 중소규모 사이트에 필요한 기능을 기본 탑재하여 추가 개발 부담이 적습니다.</li>\n<li><strong>모듈/테마 확장성:</strong> 모듈과 테마를 통해 기능과 디자인을 확장할 수 있으며, REST API 연동, SEO 설정 등 현대적인 기능도 지원합니다.</li>\n<li><strong>국내 커뮤니티 지원:</strong> 공식 사이트 내 포럼을 통해 <strong>한국어</strong>로 Q&amp;A, 팁 공유 등 사용자 소통이 이루어지고 있습니다.</li>\n<li><strong>명확한 오픈소스 라이선스:</strong> LGPL 라이선스로 저작권 표기 의무가 없어 자유롭게 수정하고 활용할 수 있습니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>낮은 성숙도 및 불확실성:</strong> 출시된 지 오래되지 않아 검증된 사용 사례나 자료가 부족하며, 2025년 현재 업데이트 지속 여부 및 장기적인 프로젝트 안정성은 지켜볼 필요가 있습니다. (2024년 말까지는 활발했음)</li>\n<li><strong>제한적인 생태계:</strong> 서드파티 플러그인이나 테마가 매우 적어 원하는 기능이 없다면 직접 개발해야 할 가능성이 높습니다.</li>\n<li><strong>초기 버그 가능성:</strong> 신생 프로젝트인 만큼 예상치 못한 버그나 보안 취약점이 발견될 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h3>5. WinterCMS</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> Laravel 프레임워크 기반의 개발자 친화적인 모던 오픈소스 CMS. (한국어 지원 제한적)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>개발자 친화적:</strong> 강력한 PHP 프레임워크인 Laravel 기반으로 MVC 패턴, 깔끔한 코드 구조, Twig 템플릿 엔진 등을 제공하여 개발 생산성이 높습니다.</li>\n<li><strong>완전한 오픈소스:</strong> MIT 라이선스로 상업적 이용에도 제약 없이 자유롭게 사용할 수 있습니다.</li>\n<li><strong>플러그인 기반 확장:</strong> 필요한 기능을 플러그인 형태로 추가하여 가볍게 시작하고 확장할 수 있습니다. OctoberCMS의 기존 플러그인과 호환되는 경우가 많습니다.</li>\n<li><strong>활발한 글로벌 커뮤니티:</strong> Discord 등을 중심으로 개발자들이 적극적으로 소통하고 지원하며, 꾸준히 업데이트되고 있습니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>낮은 국내 인지도 및 한국어 지원 부족:</strong> 한국어 자료나 커뮤니티 지원이 부족하며, 관리자 인터페이스 등에서 <strong>한국어 사용이 제한적</strong>일 수 있습니다. (별도 번역 작업 필요 가능성)</li>\n<li><strong>개발 지식 요구:</strong> Laravel 및 웹 개발 지식이 어느 정도 필요하여 비개발자에게는 진입 장벽이 높습니다.</li>\n<li><strong>플러그인 생태계:</strong> 워드프레스만큼 방대한 플러그인 마켓을 기대하기는 어렵습니다.</li>\n<li><strong>비교적 짧은 역사:</strong> OctoberCMS에서 분리된 지 오래되지 않아 장기적인 프로젝트 안정성이나 시장 점유율은 지켜볼 필요가 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h3>6. TypiCMS</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 다국어 지원에 특화된 Laravel 기반의 모듈형 오픈소스 CMS. (한국어 지원 제한적)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>강력한 다국어 지원:</strong> 설계 단계부터 다국어 환경을 고려하여 여러 언어로 콘텐츠를 관리하기 용이합니다. <strong>한국어</strong> 콘텐츠 관리도 가능합니다.</li>\n<li><strong>Laravel 기반의 유연성:</strong> Laravel 프레임워크 위에서 동작하므로 Laravel 개발자에게 익숙하며, 모듈 추가/개발을 통해 자유롭게 확장 가능합니다.</li>\n<li><strong>필수 모듈 기본 제공:</strong> 페이지, 뉴스, 이벤트, 메뉴, 번역 관리 등 기본적인 콘텐츠 관리 모듈이 내장되어 있습니다.</li>\n<li><strong>순수 오픈소스 (MIT):</strong> 라이선스 제약 없이 자유롭게 사용, 수정, 배포할 수 있습니다.</li>\n<li><strong>경량 및 심플함:</strong> 필요한 기능 중심으로 구성되어 비교적 가볍고 빠르게 동작합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>높은 개발 의존도:</strong> Laravel 및 Composer 사용법 등 개발 지식이 필수적이며, 설치 및 초기 설정이 명령줄 기반이라 비개발자에게는 어렵습니다.</li>\n<li><strong>작은 커뮤니티 및 한국어 자료 부족:</strong> 사용자층이 넓지 않아 문제 해결이나 <strong>한국어</strong> 정보 획득에 어려움을 겪을 수 있습니다. 관리자 인터페이스 등의 <strong>한국어 지원이 미흡</strong>할 수 있습니다.</li>\n<li><strong>편의 기능 부족:</strong> 워드프레스처럼 풍부한 관리자 UI나 원클릭 플러그인 설치 같은 편의 기능은 부족합니다.</li>\n</ul>\n</li>\n</ul>\n<h3>7. Statamic</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 데이터베이스 없이 파일 기반으로 콘텐츠를 관리하는 독특한 Laravel 기반 CMS. (한국어 지원 제한적)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>파일 기반(Flat-File):</strong> DB 대신 Markdown/YAML 파일로 콘텐츠를 관리하여 Git 등을 이용한 버전 관리 및 배포가 매우 편리합니다.</li>\n<li><strong>직관적인 관리자 화면:</strong> 콘텐츠 에디터가 사용하기 쉬운 깔끔하고 현대적인 인터페이스를 제공합니다.</li>\n<li><strong>Laravel의 강력함 활용:</strong> Laravel 기반이므로 성능, 보안, 확장성 면에서 이점을 가지며 커스터마이징이 용이합니다.</li>\n<li><strong>활발한 커뮤니티 및 마켓:</strong> Discord 커뮤니티가 활발하고, 애드온/테마 마켓플레이스가 있어 생태계가 성장하고 있습니다.</li>\n<li><strong>오픈소스 코어:</strong> 개인/소규모 프로젝트는 무료(Solo 모드)로 핵심 기능을 사용할 수 있습니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>유료 라이선스 정책:</strong> 상업적 목적이나 팀 단위 사용(Pro 모드), 특정 고급 기능은 유료 라이선스를 구매해야 합니다. 완전 무료 CMS는 아닙니다.</li>\n<li><strong>대규모 콘텐츠 관리:</strong> 콘텐츠 양이 극도로 많아지면 파일 기반 특성상 성능 저하나 관리 복잡성이 발생할 수 있습니다.</li>\n<li><strong>낯선 개념:</strong> DB를 사용하지 않는 방식이 기존 CMS 사용자에게는 생소할 수 있습니다.</li>\n<li><strong>제한적인 한국어 지원:</strong> <strong>한국어 자료나 국내 사용 사례가 드물고</strong>, 관리자 인터페이스 등의 <strong>한국어 지원이 미흡</strong>할 수 있습니다. (별도 번역 작업 필요 가능성)</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h2>결론: 어떤 CMS를 선택해야 할까?</h2>\n<p>지금까지 한국에서 인기 있거나 주목할 만한 PHP 기반 CMS들을 살펴보았습니다. 각 CMS는 저마다의 철학과 강점을 가지고 있습니다. 어떤 CMS가 '최고'라고 단정하기보다는, 여러분의 상황에 '가장 적합한' 도구를 찾는 것이 중요합니다. 특히 <strong>한국어 사용자 환경</strong>을 중요하게 생각한다면 다음 기준을 고려해볼 수 있습니다.</p>\n<ul>\n<li>\n<p><strong>한국어 네이티브 지원 및 국내 커뮤니티 중심:</strong> <strong>그누보드</strong>, <strong>라이믹스</strong>, <strong>Zigger</strong>는 개발 단계부터 한국 환경을 고려했고, 풍부한 한국어 자료와 커뮤니티 지원을 받을 수 있습니다. 특히 그누보드와 라이믹스는 오랜 기간 검증된 선택지입니다. Zigger는 최신 기술을 반영하려 노력하지만, 장기적인 안정성은 더 지켜봐야 합니다.</p>\n</li>\n<li>\n<p><strong>개발자 중심 &amp; 제한적 한국어 지원:</strong> <strong>WinterCMS</strong>, <strong>TypiCMS</strong>, <strong>Statamic</strong>은 Laravel 기반으로 모던한 개발 환경을 제공하지만, 한국어 문서나 커뮤니티 지원은 부족합니다. 관리자 인터페이스 등에서 직접 번역하거나 영어 환경에 익숙해야 할 수 있습니다.</p>\n</li>\n<li>\n<p><strong>글로벌 표준 &amp; 매우 우수한 한국어 지원:</strong> <strong>워드프레스</strong>는 전 세계적인 표준 CMS이면서도 공식 한국어 지원이 매우 뛰어나고 국내 사용자 및 자료도 방대하여, 언어 장벽 없이 강력한 기능을 활용하고 싶을 때 최고의 선택지가 될 수 있습니다.</p>\n</li>\n</ul>\n<p>궁극적으로 여러분의 <strong>프로젝트 목표(블로그, 쇼핑몰, 커뮤니티 등), 필요한 특정 기능, 예상되는 트래픽 규모, 가용 예산, 직접 개발에 투입할 수 있는 시간과 기술 수준, 그리고 선호하는 커뮤니티 지원 방식 및 한국어 환경</strong> 등을 종합적으로 고려하여 신중하게 결정하시기 바랍니다. 현명한 CMS 선택이 성공적인 웹사이트 구축의 튼튼한 기반이 될 것입니다.</p>\n<hr />\n<h2>참고 자료</h2>\n<ul>\n<li>워드프레스 공식 사이트 (영문): <a href=\"https://wordpress.org/\">https://wordpress.org</a></li>\n<li>그누보드 공식 사이트: <a href=\"http://sir.kr/\">http://sir.kr</a></li>\n<li>그누보드 - 위키백과: <a href=\"https://ko.wikipedia.org/wiki/%EA%B7%B8%EB%88%84%EB%B3%B4%EB%93%9C\">https://ko.wikipedia.org/wiki/그누보드</a></li>\n<li>그누보드 GitHub: <a href=\"https://github.com/gnuboard\">https://github.com/gnuboard</a></li>\n<li>라이믹스 공식 사이트: <a href=\"https://rhymix.org/\">https://rhymix.org</a></li>\n<li>라이믹스 - 위키백과: <a href=\"https://ko.wikipedia.org/wiki/Rhymix\">https://ko.wikipedia.org/wiki/Rhymix</a></li>\n<li>라이믹스 GitHub: <a href=\"https://github.com/rhymix/rhymix\">https://github.com/rhymix/rhymix</a></li>\n<li>Zigger 공식 사이트: <a href=\"https://www.zigger.net/\">https://www.zigger.net</a></li>\n<li>Zigger GitHub: <a href=\"https://github.com/ziggerFramework/zigger-source-2.4\">https://github.com/ziggerFramework/zigger-source-2.4</a></li>\n<li>WinterCMS 공식 사이트: <a href=\"https://wintercms.com/\">https://wintercms.com</a></li>\n<li>WinterCMS GitHub: <a href=\"https://github.com/wintercms/winter\">https://github.com/wintercms/winter</a></li>\n<li>TypiCMS GitHub: <a href=\"https://github.com/TypiCMS/Base\">https://github.com/TypiCMS/Base</a></li>\n<li>Statamic 공식 사이트: <a href=\"https://statamic.com/\">https://statamic.com</a></li>\n<li>Statamic GitHub: <a href=\"https://github.com/statamic/cms\">https://github.com/statamic/cms</a></li>\n<li>CMS 시장 점유율 통계 (W3Techs): <a href=\"http://w3techs.com/technologies/overview/content_management/all\">http://w3techs.com/technologies/overview/content_management/all</a></li>\n</ul>",
        "contentSnippet": "웹사이트를 만들고 싶으신가요? 블로그, 커뮤니티, 기업 홈페이지 등 어떤 형태든 콘텐츠 관리 시스템(CMS)을 사용하면 훨씬 수월하게 제작하고 운영할 수 있습니다. 특히 전 세계 웹사이트의 상당수가 PHP 언어를 기반으로 만들어졌기에, PHP 기반 CMS는 여전히 강력하고 인기 있는 선택지입니다.\n한국에서는 국내 환경에 특화된 CMS부터 세계적으로 유명한 CMS까지 다양한 PHP 기반 도구들이 사용되고 있습니다. 하지만 각 CMS는 저마다의 특징과 장단점을 가지고 있어, 내 프로젝트의 목적과 규모, 개발 지식 수준, 그리고 한국어 지원 수준에 맞는 도구를 선택하는 것이 중요합니다.\n이 글에서는 한국에서 개발되었거나 인기를 얻고 있는 주요 PHP 기반 CMS들을 비교 분석하여 여러분의 현명한 선택을 돕고자 합니다. 각 CMS의 공식 사이트, 오픈소스 여부, 개발팀 및 한국어 지원 현황, 커뮤니티 성숙도, 그리고 가장 중요한 장단점을 꼼꼼히 살펴보겠습니다.\n주요 PHP CMS 도구 비교표 (2025년 기준)\n먼저 각 CMS의 핵심 정보를 한눈에 비교할 수 있도록 표로 정리했습니다.\n도구명\n공식 사이트\n개발팀 및 한국어 지원\n오픈소스 여부\n소스 저장소\n커뮤니티 활동 및 성숙도\n\n\n\n\n워드프레스\nwordpress.org\nWordPress 재단 (미국) / 매우 우수 (공식 지원)\nYes (GPLv2)\nGitHub (WordPress)\n세계 최대 규모 커뮤니티, 활발한 한글 포럼, 연 단위 메이저 업데이트 (현재 6.x 버전대)\n\n\n그누보드\nsir.kr\nSIR SOFT (국내) / 네이티브 지원\nYes (LGPL 2.1)\nGitHub (gnuboard5)\n공식 포럼(SIR) 매우 활발, 지속적 업데이트 (최신 버전 꾸준히 릴리스)\n\n\n라이믹스\nrhymix.org\nXE 포크 커뮤니티 (국내) / 네이티브 지원\nYes (GPLv2)\nGitHub (rhymix/rhymix)\n공식 포럼 및 XETOWN 커뮤니티 활발, 2.x 버전 꾸준히 배포 중\n\n\nZigger\nzigger.net\n개발자 커뮤니티 (국내) / 네이티브 지원\nYes (LGPL 2.1)\nGitHub (ziggerFramework)\n공식 포럼 운영, 2024년 말까지 활발히 업데이트 (2025년 지속 여부 확인 필요)\n\n\nWinterCMS\nwintercms.com\n국제 커뮤니티 / 제한적 지원 (UI 번역 가능)\nYes (MIT)\nGitHub (wintercms)\nDiscord 중심 커뮤니티 활발, 정기 업데이트 (최신 Laravel LTS 지원 목표)\n\n\nTypiCMS\ntypicms.org\n국제 개발팀 / 제한적 지원 (다국어 기능 내장)\nYes (MIT)\nGitHub (TypiCMS/Base)\nGitHub 통해 개발 활발, 소규모 개발자 커뮤니티\n\n\nStatamic\nstatamic.com\nStatamic 팀 (미국) / 제한적 지원 (UI 번역 가능)\nYes* (제한 있음)\nGitHub (statamic/cms)\nDiscord 커뮤니티 활발, 유료 Pro 지원, 현재 v5 버전대 운영\n\n\n\n*Statamic: 코어는 오픈소스이나 상업적/팀 사용 시 유료 Pro 라이선스가 필요합니다.\nCMS 도구별 장점 및 단점 상세 분석\n이제 각 CMS의 특징을 좀 더 자세히 살펴보겠습니다.\n1. 워드프레스 (WordPress)\n한 줄 요약: 전 세계적으로 가장 많이 사용되는 압도적인 생태계를 갖춘 PHP CMS의 제왕. (한국어 지원 매우 우수)\n장점:\n압도적인 생태계: 수만 개의 테마와 플러그인을 통해 상상하는 거의 모든 기능을 구현할 수 있습니다. (블로그, 쇼핑몰, 커뮤니티 등)\n높은 범용성 및 접근성: 초보자부터 전문가까지 누구나 쉽게 설치하고 사용할 수 있으며, 관련 자료와 커뮤니티 지원이 매우 풍부합니다.\n우수한 한국어 지원: 공식 한국어 버전이 제공되며, 관리자 화면, 테마, 플러그인 등에서 한국어 지원이 매우 잘 되어 있습니다. 활발한 한국어 커뮤니티와 문서도 큰 장점입니다.\n쉬운 콘텐츠 관리: 직관적인 관리자 화면과 강력한 편집기는 콘텐츠 생성 및 관리에 최적화되어 있습니다.\n완전 무료 오픈소스 (GPL): 라이선스 걱정 없이 자유롭게 사용하고 수정할 수 있습니다.\n지속적인 업데이트: 핵심 개발팀과 전 세계 커뮤니티에 의해 꾸준히 업데이트되고 발전합니다. (현재 6.x 버전대)\n단점:\n성능 및 보안 이슈: 많은 플러그인 사용 시 사이트 속도가 느려질 수 있으며, 인기가 많은 만큼 해킹 공격의 주 대상이 되므로 보안 관리에 신경 써야 합니다.\n플러그인 의존성 및 충돌: 원하는 기능을 구현하기 위해 플러그인에 크게 의존하게 되며, 플러그인 간 충돌이나 호환성 문제가 발생할 수 있습니다.\n복잡한 코드 구조: 오래된 역사만큼 코드 구조가 현대적이지 않아 개발자가 깊이 있는 커스터마이징을 할 때 어려움을 느낄 수 있습니다.\n국내 특화 기능 부족: 한국만의 특수한 결제 시스템 연동이나 본인인증 등은 별도 플러그인 개발이나 유료 솔루션이 필요할 수 있습니다. (단, 관련 플러그인이 다수 존재)\n2. 그누보드 (Gnuboard)\n한 줄 요약: 쉽고 빠른 한국형 게시판 중심 웹사이트 구축에 최적화된 국산 CMS의 대표주자. (한국어 네이티브 지원)\n장점:\n쉬운 사용법: 설치가 간편하고 직관적인 관리자 화면을 제공하여 초보자도 쉽게 접근할 수 있습니다. (모든 인터페이스 한국어 기본)\n핵심 기능 내장: 게시판, 회원 관리, 쪽지, 포인트, 설문조사 등 웹사이트 운영에 필요한 필수 기능 대부분이 기본으로 포함되어 있습니다.\n풍부한 한국어 자료: 국내 최대 규모의 커뮤니티(SIR)를 통해 수많은 스킨, 플러그인, 팁, 문제 해결 방법을 한국어로 얻을 수 있습니다.\n자유로운 커스터마이징: LGPL 라이선스로 저작권 표기 의무가 없어 자유롭게 수정하고 활용할 수 있습니다.\n오랜 역사와 안정성: 2003년부터 꾸준히 업데이트되며 안정성을 검증받았습니다.\n단점:\n구조적 한계: 오래된 PHP 방식으로 개발되어 테마 변경 시 코어 파일을 직접 수정해야 하는 경우가 있어 업데이트 시 어려움이 발생할 수 있습니다.\n보안 고려 필요: 일부 오래된 함수(extract 등) 사용으로 인해 개발자가 보안에 신경 써야 할 부분이 남아있습니다.\n현대적 개발 패턴과 거리: 최신 PHP 프레임워크 기반이 아니므로 모던 웹 개발 트렌드와는 다소 차이가 있습니다.\n모바일 반응형: 기본 기능 외 모바일 최적화 등은 커뮤니티 자료에 의존해야 합니다.\n3. 라이믹스 (Rhymix)\n한 줄 요약: XpressEngine(XE)의 장점을 계승하고 현대적으로 발전시킨 강력한 국산 CMS 프레임워크. (한국어 네이티브 지원)\n장점:\n뛰어난 확장성: 모듈, 애드온, 위젯, 스킨 등 체계적인 구조를 통해 기능 추가 및 디자인 변경이 매우 유연합니다. XE용으로 개발된 방대한 자료를 상당 부분 활용할 수 있습니다.\n지속적인 발전: XE의 개발 중단 이후에도 5년 이상 꾸준히 업데이트되며 PHP 최신 버전 지원, 성능 개선, 보안 강화가 이루어지고 있습니다.\n활발한 한국어 커뮤니티: 공식 포럼과 XETOWN 등에서 사용자 간의 활발한 정보 교류 및 지원이 한국어로 이루어집니다.\n검증된 성능: 대규모 커뮤니티 사이트 운영 사례(동시 접속자 1만 명 이상)를 통해 성능과 안정성이 입증되었습니다.\n오픈소스 철학: GPL 라이선스로 전환하여 자유로운 사용과 기여를 장려합니다.\n단점:\n학습 곡선: XE/라이믹스 특유의 구조(모듈, 애드온, 레이아웃 등)에 대한 이해가 필요하여 초심자에게는 다소 어려울 수 있습니다.\n높은 초기 복잡도: 다양한 기능을 제공하는 만큼 초기 설정이나 운영에 있어 그누보드보다 요구사항이 많고 복잡하게 느껴질 수 있습니다.\n국내 중심 생태계: 글로벌 CMS에 비해 해외 자료나 사용자는 상대적으로 적습니다.\n관리 필요성: 기능이 많고 업데이트가 잦은 편이라 꾸준한 관리가 요구됩니다.\n4. Zigger\n한 줄 요약: 반응형 웹사이트 구축에 초점을 맞춘 비교적 최신의 국산 오픈소스 CMS. (한국어 네이티브 지원)\n장점:\n쉬운 반응형 웹 제작: 처음부터 반응형 웹을 염두에 두고 개발되어 모바일 친화적인 사이트를 쉽게 만들 수 있도록 지원합니다.\n필수 기능 내장: 웹사이트 관리, 회원, 배너, 팝업, 메일 발송 등 중소규모 사이트에 필요한 기능을 기본 탑재하여 추가 개발 부담이 적습니다.\n모듈/테마 확장성: 모듈과 테마를 통해 기능과 디자인을 확장할 수 있으며, REST API 연동, SEO 설정 등 현대적인 기능도 지원합니다.\n국내 커뮤니티 지원: 공식 사이트 내 포럼을 통해 한국어로 Q&A, 팁 공유 등 사용자 소통이 이루어지고 있습니다.\n명확한 오픈소스 라이선스: LGPL 라이선스로 저작권 표기 의무가 없어 자유롭게 수정하고 활용할 수 있습니다.\n단점:\n낮은 성숙도 및 불확실성: 출시된 지 오래되지 않아 검증된 사용 사례나 자료가 부족하며, 2025년 현재 업데이트 지속 여부 및 장기적인 프로젝트 안정성은 지켜볼 필요가 있습니다. (2024년 말까지는 활발했음)\n제한적인 생태계: 서드파티 플러그인이나 테마가 매우 적어 원하는 기능이 없다면 직접 개발해야 할 가능성이 높습니다.\n초기 버그 가능성: 신생 프로젝트인 만큼 예상치 못한 버그나 보안 취약점이 발견될 수 있습니다.\n5. WinterCMS\n한 줄 요약: Laravel 프레임워크 기반의 개발자 친화적인 모던 오픈소스 CMS. (한국어 지원 제한적)\n장점:\n개발자 친화적: 강력한 PHP 프레임워크인 Laravel 기반으로 MVC 패턴, 깔끔한 코드 구조, Twig 템플릿 엔진 등을 제공하여 개발 생산성이 높습니다.\n완전한 오픈소스: MIT 라이선스로 상업적 이용에도 제약 없이 자유롭게 사용할 수 있습니다.\n플러그인 기반 확장: 필요한 기능을 플러그인 형태로 추가하여 가볍게 시작하고 확장할 수 있습니다. OctoberCMS의 기존 플러그인과 호환되는 경우가 많습니다.\n활발한 글로벌 커뮤니티: Discord 등을 중심으로 개발자들이 적극적으로 소통하고 지원하며, 꾸준히 업데이트되고 있습니다.\n단점:\n낮은 국내 인지도 및 한국어 지원 부족: 한국어 자료나 커뮤니티 지원이 부족하며, 관리자 인터페이스 등에서 한국어 사용이 제한적일 수 있습니다. (별도 번역 작업 필요 가능성)\n개발 지식 요구: Laravel 및 웹 개발 지식이 어느 정도 필요하여 비개발자에게는 진입 장벽이 높습니다.\n플러그인 생태계: 워드프레스만큼 방대한 플러그인 마켓을 기대하기는 어렵습니다.\n비교적 짧은 역사: OctoberCMS에서 분리된 지 오래되지 않아 장기적인 프로젝트 안정성이나 시장 점유율은 지켜볼 필요가 있습니다.\n6. TypiCMS\n한 줄 요약: 다국어 지원에 특화된 Laravel 기반의 모듈형 오픈소스 CMS. (한국어 지원 제한적)\n장점:\n강력한 다국어 지원: 설계 단계부터 다국어 환경을 고려하여 여러 언어로 콘텐츠를 관리하기 용이합니다. 한국어 콘텐츠 관리도 가능합니다.\nLaravel 기반의 유연성: Laravel 프레임워크 위에서 동작하므로 Laravel 개발자에게 익숙하며, 모듈 추가/개발을 통해 자유롭게 확장 가능합니다.\n필수 모듈 기본 제공: 페이지, 뉴스, 이벤트, 메뉴, 번역 관리 등 기본적인 콘텐츠 관리 모듈이 내장되어 있습니다.\n순수 오픈소스 (MIT): 라이선스 제약 없이 자유롭게 사용, 수정, 배포할 수 있습니다.\n경량 및 심플함: 필요한 기능 중심으로 구성되어 비교적 가볍고 빠르게 동작합니다.\n단점:\n높은 개발 의존도: Laravel 및 Composer 사용법 등 개발 지식이 필수적이며, 설치 및 초기 설정이 명령줄 기반이라 비개발자에게는 어렵습니다.\n작은 커뮤니티 및 한국어 자료 부족: 사용자층이 넓지 않아 문제 해결이나 한국어 정보 획득에 어려움을 겪을 수 있습니다. 관리자 인터페이스 등의 한국어 지원이 미흡할 수 있습니다.\n편의 기능 부족: 워드프레스처럼 풍부한 관리자 UI나 원클릭 플러그인 설치 같은 편의 기능은 부족합니다.\n7. Statamic\n한 줄 요약: 데이터베이스 없이 파일 기반으로 콘텐츠를 관리하는 독특한 Laravel 기반 CMS. (한국어 지원 제한적)\n장점:\n파일 기반(Flat-File): DB 대신 Markdown/YAML 파일로 콘텐츠를 관리하여 Git 등을 이용한 버전 관리 및 배포가 매우 편리합니다.\n직관적인 관리자 화면: 콘텐츠 에디터가 사용하기 쉬운 깔끔하고 현대적인 인터페이스를 제공합니다.\nLaravel의 강력함 활용: Laravel 기반이므로 성능, 보안, 확장성 면에서 이점을 가지며 커스터마이징이 용이합니다.\n활발한 커뮤니티 및 마켓: Discord 커뮤니티가 활발하고, 애드온/테마 마켓플레이스가 있어 생태계가 성장하고 있습니다.\n오픈소스 코어: 개인/소규모 프로젝트는 무료(Solo 모드)로 핵심 기능을 사용할 수 있습니다.\n단점:\n유료 라이선스 정책: 상업적 목적이나 팀 단위 사용(Pro 모드), 특정 고급 기능은 유료 라이선스를 구매해야 합니다. 완전 무료 CMS는 아닙니다.\n대규모 콘텐츠 관리: 콘텐츠 양이 극도로 많아지면 파일 기반 특성상 성능 저하나 관리 복잡성이 발생할 수 있습니다.\n낯선 개념: DB를 사용하지 않는 방식이 기존 CMS 사용자에게는 생소할 수 있습니다.\n제한적인 한국어 지원: 한국어 자료나 국내 사용 사례가 드물고, 관리자 인터페이스 등의 한국어 지원이 미흡할 수 있습니다. (별도 번역 작업 필요 가능성)\n결론: 어떤 CMS를 선택해야 할까?\n지금까지 한국에서 인기 있거나 주목할 만한 PHP 기반 CMS들을 살펴보았습니다. 각 CMS는 저마다의 철학과 강점을 가지고 있습니다. 어떤 CMS가 '최고'라고 단정하기보다는, 여러분의 상황에 '가장 적합한' 도구를 찾는 것이 중요합니다. 특히 한국어 사용자 환경을 중요하게 생각한다면 다음 기준을 고려해볼 수 있습니다.\n한국어 네이티브 지원 및 국내 커뮤니티 중심: 그누보드, 라이믹스, Zigger는 개발 단계부터 한국 환경을 고려했고, 풍부한 한국어 자료와 커뮤니티 지원을 받을 수 있습니다. 특히 그누보드와 라이믹스는 오랜 기간 검증된 선택지입니다. Zigger는 최신 기술을 반영하려 노력하지만, 장기적인 안정성은 더 지켜봐야 합니다.\n개발자 중심 & 제한적 한국어 지원: WinterCMS, TypiCMS, Statamic은 Laravel 기반으로 모던한 개발 환경을 제공하지만, 한국어 문서나 커뮤니티 지원은 부족합니다. 관리자 인터페이스 등에서 직접 번역하거나 영어 환경에 익숙해야 할 수 있습니다.\n글로벌 표준 & 매우 우수한 한국어 지원: 워드프레스는 전 세계적인 표준 CMS이면서도 공식 한국어 지원이 매우 뛰어나고 국내 사용자 및 자료도 방대하여, 언어 장벽 없이 강력한 기능을 활용하고 싶을 때 최고의 선택지가 될 수 있습니다.\n궁극적으로 여러분의 프로젝트 목표(블로그, 쇼핑몰, 커뮤니티 등), 필요한 특정 기능, 예상되는 트래픽 규모, 가용 예산, 직접 개발에 투입할 수 있는 시간과 기술 수준, 그리고 선호하는 커뮤니티 지원 방식 및 한국어 환경 등을 종합적으로 고려하여 신중하게 결정하시기 바랍니다. 현명한 CMS 선택이 성공적인 웹사이트 구축의 튼튼한 기반이 될 것입니다.\n참고 자료\n워드프레스 공식 사이트 (영문): https://wordpress.org\n그누보드 공식 사이트: http://sir.kr\n그누보드 - 위키백과: https://ko.wikipedia.org/wiki/그누보드\n그누보드 GitHub: https://github.com/gnuboard\n라이믹스 공식 사이트: https://rhymix.org\n라이믹스 - 위키백과: https://ko.wikipedia.org/wiki/Rhymix\n라이믹스 GitHub: https://github.com/rhymix/rhymix\nZigger 공식 사이트: https://www.zigger.net\nZigger GitHub: https://github.com/ziggerFramework/zigger-source-2.4\nWinterCMS 공식 사이트: https://wintercms.com\nWinterCMS GitHub: https://github.com/wintercms/winter\nTypiCMS GitHub: https://github.com/TypiCMS/Base\nStatamic 공식 사이트: https://statamic.com\nStatamic GitHub: https://github.com/statamic/cms\nCMS 시장 점유율 통계 (W3Techs): http://w3techs.com/technologies/overview/content_management/all",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-3742281452563046064",
        "categories": [
          {
            "_": "app",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "cms",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-04-21T08:24:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "유니티 포스트 프로세싱에 대해 알아보자",
        "link": "http://serverdown.tistory.com/1278",
        "pubDate": "Sun, 20 Apr 2025 19:12:38 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1278#entry1278comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"650\" data-origin-height=\"382\"><span data-url=\"https://blog.kakaocdn.net/dn/bMtjdQ/btsNsQ22WH0/7auE74W3ft7GxHfdYKbvGk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bMtjdQ/btsNsQ22WH0/7auE74W3ft7GxHfdYKbvGk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bMtjdQ/btsNsQ22WH0/7auE74W3ft7GxHfdYKbvGk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbMtjdQ%2FbtsNsQ22WH0%2F7auE74W3ft7GxHfdYKbvGk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"650\" height=\"382\" data-origin-width=\"650\" data-origin-height=\"382\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=9_QwGdL_gvA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=9_QwGdL_gvA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=9_QwGdL_gvA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ep7AA2/hyYH6M6gKk/r92CcrI6B3NQAhEXqXqkd0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/VttYg/hyYJEpnwuq/oxKXhk3bVafaKEskG6Qzk0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"12월 20일 오후 4시 알쓸유잡 : 포스트 프로세싱✨ 원리와 구현\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/9_QwGdL_gvA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">40분 20초</p>\n<p data-ke-size=\"size16\">쉐이더 작업하다 길을 잃으면</p>\n<p data-ke-size=\"size16\">F 키 누르면 전체가 화면에 잡히도록 해준다네요</p>\n<p data-ke-size=\"size16\">몰랐습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1시간 15분 부터 DOF 를 하는군요&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"404\" data-origin-height=\"197\"><span data-url=\"https://blog.kakaocdn.net/dn/y8Lal/btsNrxRsOLb/XufI7FwKGZch9mzldrD8cK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/y8Lal/btsNrxRsOLb/XufI7FwKGZch9mzldrD8cK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/y8Lal/btsNrxRsOLb/XufI7FwKGZch9mzldrD8cK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fy8Lal%2FbtsNrxRsOLb%2FXufI7FwKGZch9mzldrD8cK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"404\" height=\"197\" data-origin-width=\"404\" data-origin-height=\"197\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">49분 30초 redirect node 라고 그래프 선이 마음에 들지 않는다면</p>\n<p data-ke-size=\"size16\">특정위치로 선을 옮길 수 있습니다. 기능은 없고 꺾어주는 역활만 하는거 같군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=9_QwGdL_gvA\n\n\n\n \n \n40분 20초\n쉐이더 작업하다 길을 잃으면\nF 키 누르면 전체가 화면에 잡히도록 해준다네요\n몰랐습니다.\n \n1시간 15분 부터 DOF 를 하는군요 \n\n\n49분 30초 redirect node 라고 그래프 선이 마음에 들지 않는다면\n특정위치로 선을 옮길 수 있습니다. 기능은 없고 꺾어주는 역활만 하는거 같군요",
        "guid": "http://serverdown.tistory.com/1278",
        "categories": [
          "프로그래밍/개발메모",
          "유니티"
        ],
        "isoDate": "2025-04-20T10:12:38.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 픽셀라이저 / 도트로 보이게 만들자",
        "link": "http://serverdown.tistory.com/1277",
        "pubDate": "Sun, 20 Apr 2025 15:48:46 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1277#entry1277comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"362\" data-origin-height=\"149\"><span data-url=\"https://blog.kakaocdn.net/dn/bd9Rtc/btsNsNrSESI/Y81SwGF4PnAbZDQz6cYxL1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bd9Rtc/btsNsNrSESI/Y81SwGF4PnAbZDQz6cYxL1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bd9Rtc/btsNsNrSESI/Y81SwGF4PnAbZDQz6cYxL1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbd9Rtc%2FbtsNsNrSESI%2FY81SwGF4PnAbZDQz6cYxL1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"362\" height=\"149\" data-origin-width=\"362\" data-origin-height=\"149\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/q4epArkvVnE?t=1034\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/q4epArkvVnE?t=1034</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=q4epArkvVnE\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cfpori/hyYG7NswIS/EtXk7aWbGMsO5TtKH3mf91/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/qL0TC/hyYH9wgxoK/3vXqR9a5w3BvecDPlO7fk0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"픽셀아트 놀이공원으로 블랙프라이데이 에셋 리뷰하기\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/q4epArkvVnE\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">12분에 나옵니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">애셋 링크: <a href=\"https://www.bing.com/search?q=unity%20asset%20store%20pro%20pixelizer&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;ghc=1&amp;lq=0&amp;pq=unity%20asset%20store%20pro%20pixelizer&amp;sc=3-31&amp;sk=&amp;cvid=AD87A99A32B64413A1E745E2B8E1B96C\">bing.com/ck/a?!&amp;&amp;p=75737a337e71df6ed009a8ed37376a2d33afc7c860ba34cee95c9fb3c24d295aJmltdHM9MTc0NTAyMDgwMA&amp;ptn=3&amp;ver=2&amp;hsh=4&amp;fclid=103bf7f7-14f0-64e7-025e-e4ca15636503&amp;psq=unity+asset+store+pro+pixelizer&amp;u=a1aHR0cHM6Ly9hc3NldHN0b3JlLnVuaXR5LmNvbS9wYWNrYWdlcy92Zngvc2hhZGVycy9mdWxsc2NyZWVuLWNhbWVyYS1lZmZlY3RzL3Byb3BpeGVsaXplci1yZWFsdGltZS0zZC1waXhlbC1hcnQtMTc3ODc3Izp-OnRleHQ9QWRkJTIwZGVwdGglMjB0byUyMHlvdXIlMjBwcm9qZWN0JTIwd2l0aCUyMFByb1BpeGVsaXplciUyMC0sbW9yZSUyMFZGWCUyMG9wdGlvbnMlMjBvbiUyMHRoZSUyMFVuaXR5JTIwQXNzZXQlMjBTdG9yZS4&amp;ntb=1</a></p>\n<figure id=\"og_1745131699620\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"unity asset store pro pixelizer - Bing\" data-og-description=\"Bing은 지능적인 검색 기능은 사용자가 원하는 정보를 빠르게 검색하고 보상을 제공합니다.\" data-og-host=\"www.bing.com\" data-og-source-url=\"https://www.bing.com/search?q=unity%20asset%20store%20pro%20pixelizer&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;ghc=1&amp;lq=0&amp;pq=unity%20asset%20store%20pro%20pixelizer&amp;sc=3-31&amp;sk=&amp;cvid=AD87A99A32B64413A1E745E2B8E1B96C\" data-og-url=\"https://www.bing.com/search?cvid=AD87A99A32B64413A1E745E2B8E1B96C&amp;form=QBRE&amp;ghc=1&amp;lq=0&amp;pq=unity+asset+store+pro+pixelizer&amp;q=unity+asset+store+pro+pixelizer&amp;qs=n&amp;sc=3-31&amp;sk=&amp;sp=-1\" data-og-image=\"https://scrap.kakaocdn.net/dn/cCNLWw/hyYFGuI2MB/hsbWkEilkpq0ERqZEXsKK1/img.jpg?width=988&amp;height=525&amp;face=0_0_988_525,https://scrap.kakaocdn.net/dn/keSeH/hyYJANZxq3/166xWdhWWnPdFe5KveweZK/img.jpg?width=400&amp;height=225&amp;face=0_0_400_225\"><a href=\"https://www.bing.com/search?q=unity%20asset%20store%20pro%20pixelizer&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;ghc=1&amp;lq=0&amp;pq=unity%20asset%20store%20pro%20pixelizer&amp;sc=3-31&amp;sk=&amp;cvid=AD87A99A32B64413A1E745E2B8E1B96C\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.bing.com/search?q=unity%20asset%20store%20pro%20pixelizer&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;ghc=1&amp;lq=0&amp;pq=unity%20asset%20store%20pro%20pixelizer&amp;sc=3-31&amp;sk=&amp;cvid=AD87A99A32B64413A1E745E2B8E1B96C\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cCNLWw/hyYFGuI2MB/hsbWkEilkpq0ERqZEXsKK1/img.jpg?width=988&amp;height=525&amp;face=0_0_988_525,https://scrap.kakaocdn.net/dn/keSeH/hyYJANZxq3/166xWdhWWnPdFe5KveweZK/img.jpg?width=400&amp;height=225&amp;face=0_0_400_225');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">unity asset store pro pixelizer - Bing</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Bing은 지능적인 검색 기능은 사용자가 원하는 정보를 빠르게 검색하고 보상을 제공합니다.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.bing.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">애셋 홍보영상: <a href=\"https://www.youtube.com/watch?time_continue=15&amp;v=hEgd6XIWW1E&amp;embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&amp;embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&amp;source_ve_path=MjM4NTE\">ProPixelizer for Unity</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=hEgd6XIWW1E\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/P6Mwr/hyYIb8Gh5D/WZqS9lRKUCmLuUocRf7V20/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/udVEU/hyYIga5opM/RAHiVESMx2FuJSUMQKP2Ak/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"ProPixelizer for Unity\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/hEgd6XIWW1E\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">나중에 써보도록 하자</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://youtu.be/q4epArkvVnE?t=1034\n\n\n\n12분에 나옵니다.\n \n애셋 링크: bing.com/ck/a?!&&p=75737a337e71df6ed009a8ed37376a2d33afc7c860ba34cee95c9fb3c24d295aJmltdHM9MTc0NTAyMDgwMA&ptn=3&ver=2&hsh=4&fclid=103bf7f7-14f0-64e7-025e-e4ca15636503&psq=unity+asset+store+pro+pixelizer&u=a1aHR0cHM6Ly9hc3NldHN0b3JlLnVuaXR5LmNvbS9wYWNrYWdlcy92Zngvc2hhZGVycy9mdWxsc2NyZWVuLWNhbWVyYS1lZmZlY3RzL3Byb3BpeGVsaXplci1yZWFsdGltZS0zZC1waXhlbC1hcnQtMTc3ODc3Izp-OnRleHQ9QWRkJTIwZGVwdGglMjB0byUyMHlvdXIlMjBwcm9qZWN0JTIwd2l0aCUyMFByb1BpeGVsaXplciUyMC0sbW9yZSUyMFZGWCUyMG9wdGlvbnMlMjBvbiUyMHRoZSUyMFVuaXR5JTIwQXNzZXQlMjBTdG9yZS4&ntb=1\n\n \nunity asset store pro pixelizer - Bing\nBing은 지능적인 검색 기능은 사용자가 원하는 정보를 빠르게 검색하고 보상을 제공합니다.\nwww.bing.com\n\n \n애셋 홍보영상: ProPixelizer for Unity\n\n\n\n \n나중에 써보도록 하자",
        "guid": "http://serverdown.tistory.com/1277",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰",
          "유니티"
        ],
        "isoDate": "2025-04-20T06:48:46.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 베지어 커브 구현 사이트 찾았음",
        "link": "http://serverdown.tistory.com/1276",
        "pubDate": "Sun, 20 Apr 2025 01:08:22 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1276#entry1276comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"813\" data-origin-height=\"351\"><span data-url=\"https://blog.kakaocdn.net/dn/cdtSjT/btsNrp6Vvlm/v06SGcNFljCgm3KB0aoKlK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cdtSjT/btsNrp6Vvlm/v06SGcNFljCgm3KB0aoKlK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cdtSjT/btsNrp6Vvlm/v06SGcNFljCgm3KB0aoKlK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcdtSjT%2FbtsNrp6Vvlm%2Fv06SGcNFljCgm3KB0aoKlK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"813\" height=\"351\" data-origin-width=\"813\" data-origin-height=\"351\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이걸로 그림 그리면 따라 다니는 그런 게임을 만들 수 있을 것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">소스코드 링크: <a href=\"https://leekangw.github.io/posts/49/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://leekangw.github.io/posts/49/</a></p>\n<figure id=\"og_1745078837951\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"[Unity] 베지어 곡선(Bezier Curves) 구현해보기\" data-og-description=\"게임을 개발하다보면 곡선을 그려야 할 때가 자주 있다.\" data-og-host=\"leekangw.github.io\" data-og-source-url=\"https://leekangw.github.io/posts/49/\" data-og-url=\"https://leekangw.github.io/posts/49/\" data-og-image=\"\"><a href=\"https://leekangw.github.io/posts/49/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://leekangw.github.io/posts/49/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">[Unity] 베지어 곡선(Bezier Curves) 구현해보기</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">게임을 개발하다보면 곡선을 그려야 할 때가 자주 있다.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">leekangw.github.io</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">데모 영상: <a href=\"https://youtu.be/RzzFah7zOjU\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/RzzFah7zOjU</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=RzzFah7zOjU\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/yTWqK/hyYIcNeweX/KsEwyafA9CakXK6FbQjCv0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/zxL8i/hyYJCyag14/7fJoKi0pCkYfusLmiQPgPk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"베지어 곡선 테스트\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/RzzFah7zOjU\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "이걸로 그림 그리면 따라 다니는 그런 게임을 만들 수 있을 것 같습니다.\n \n소스코드 링크: https://leekangw.github.io/posts/49/\n\n \n[Unity] 베지어 곡선(Bezier Curves) 구현해보기\n게임을 개발하다보면 곡선을 그려야 할 때가 자주 있다.\nleekangw.github.io\n\n \n데모 영상: https://youtu.be/RzzFah7zOjU",
        "guid": "http://serverdown.tistory.com/1276",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-04-19T16:08:22.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "nhn 에서 제공하는 유니티 도움 패키지",
        "link": "http://serverdown.tistory.com/1275",
        "pubDate": "Fri, 18 Apr 2025 20:07:08 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1275#entry1275comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"251\" data-origin-height=\"159\"><span data-url=\"https://blog.kakaocdn.net/dn/dCH4TC/btsNsbzlNgo/b9JutU9ABEPlDfpGNJpId0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dCH4TC/btsNsbzlNgo/b9JutU9ABEPlDfpGNJpId0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dCH4TC/btsNsbzlNgo/b9JutU9ABEPlDfpGNJpId0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdCH4TC%2FbtsNsbzlNgo%2Fb9JutU9ABEPlDfpGNJpId0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"251\" height=\"159\" data-origin-width=\"251\" data-origin-height=\"159\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">게임 만들라고 만든거 같군요 Game 이라고 적혀있네요</p>\n<p data-ke-size=\"size16\">편리하게 쓰라고 좋은기능 많이 만들어둔거 같습니다.</p>\n<p data-ke-size=\"size16\">셰이더도 있구요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=qstN7DcLTBk\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=qstN7DcLTBk</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=qstN7DcLTBk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/Gnf3E/hyYFAnDKK2/OaSsO644p5vRW7mxD3Adb0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bbrqV8/hyYIaV6GRg/LuajD521oknXb8BPh9HJak/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[소스공유] 유니티 UI 작업 속도 100배 빨라지는 비기\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/qstN7DcLTBk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">소스: <a href=\"https://github.com/nhn/gpm.unity\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://github.com/nhn/gpm.unity</a></p>\n<figure id=\"og_1744974377277\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"object\" data-og-title=\"GitHub - nhn/gpm.unity: A brand of NHN providing free services required for game development.\" data-og-description=\"A brand of NHN providing free services required for game development. - nhn/gpm.unity\" data-og-host=\"github.com\" data-og-source-url=\"https://github.com/nhn/gpm.unity\" data-og-url=\"https://github.com/nhn/gpm.unity\" data-og-image=\"https://scrap.kakaocdn.net/dn/G4FWT/hyYIgPyrnP/4lspSFygkbau9AIqKcNze1/img.png?width=1200&amp;height=600&amp;face=0_0_1200_600,https://scrap.kakaocdn.net/dn/5zxyy/hyYFFWLnOe/Mis84PtJXqfmhrRGz3gan0/img.png?width=1200&amp;height=600&amp;face=0_0_1200_600\"><a href=\"https://github.com/nhn/gpm.unity\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://github.com/nhn/gpm.unity\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/G4FWT/hyYIgPyrnP/4lspSFygkbau9AIqKcNze1/img.png?width=1200&amp;height=600&amp;face=0_0_1200_600,https://scrap.kakaocdn.net/dn/5zxyy/hyYFFWLnOe/Mis84PtJXqfmhrRGz3gan0/img.png?width=1200&amp;height=600&amp;face=0_0_1200_600');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">GitHub - nhn/gpm.unity: A brand of NHN providing free services required for game development.</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">A brand of NHN providing free services required for game development. - nhn/gpm.unity</p>\n<p class=\"og-host\" data-ke-size=\"size16\">github.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">사이즈 같은거 자동으로 ㄱ산해줘서 좋아요</p>",
        "contentSnippet": "게임 만들라고 만든거 같군요 Game 이라고 적혀있네요\n편리하게 쓰라고 좋은기능 많이 만들어둔거 같습니다.\n셰이더도 있구요\n \n영상: https://www.youtube.com/watch?v=qstN7DcLTBk\n\n\n\n \n소스: https://github.com/nhn/gpm.unity\n\n \nGitHub - nhn/gpm.unity: A brand of NHN providing free services required for game development.\nA brand of NHN providing free services required for game development. - nhn/gpm.unity\ngithub.com\n\n \n사이즈 같은거 자동으로 ㄱ산해줘서 좋아요",
        "guid": "http://serverdown.tistory.com/1275",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰",
          "유니티"
        ],
        "isoDate": "2025-04-18T11:07:08.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 애니메이션 리깅 / 전갈꼬리 문어다리 거미로봇 얼굴시선 처리",
        "link": "http://serverdown.tistory.com/1274",
        "pubDate": "Fri, 18 Apr 2025 15:36:36 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1274#entry1274comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"236\" data-origin-height=\"191\"><span data-url=\"https://blog.kakaocdn.net/dn/bZUQf4/btsNrmubJYE/1KfVkZRFOGWmvQfoCKQpf1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bZUQf4/btsNrmubJYE/1KfVkZRFOGWmvQfoCKQpf1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bZUQf4/btsNrmubJYE/1KfVkZRFOGWmvQfoCKQpf1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbZUQf4%2FbtsNrmubJYE%2F1KfVkZRFOGWmvQfoCKQpf1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"236\" height=\"191\" data-origin-width=\"236\" data-origin-height=\"191\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=aiuwSWYnqrU\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=aiuwSWYnqrU</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=aiuwSWYnqrU\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bENwrZ/hyYHdGojLG/fRFkkhNIw8qHkkP3oYPqWk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/cxDTig/hyYIexptG3/xPU6AEEfPKANBLRWOUJgLK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"게임 캐릭터에 생명을 불어넣는 방법 - Procedural Animation\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/aiuwSWYnqrU\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">나중에 써봐야지</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=aiuwSWYnqrU\n\n\n\n나중에 써봐야지",
        "guid": "http://serverdown.tistory.com/1274",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-04-18T06:36:36.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 애셋 / 살이 출렁이는 연출 /",
        "link": "http://serverdown.tistory.com/1273",
        "pubDate": "Fri, 18 Apr 2025 15:03:36 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1273#entry1273comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"452\" data-origin-height=\"352\"><span data-url=\"https://blog.kakaocdn.net/dn/cZjZeH/btsNrqppzJM/qYYKJyL77j21LgXcc2Istk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cZjZeH/btsNrqppzJM/qYYKJyL77j21LgXcc2Istk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cZjZeH/btsNrqppzJM/qYYKJyL77j21LgXcc2Istk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcZjZeH%2FbtsNrqppzJM%2FqYYKJyL77j21LgXcc2Istk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"452\" height=\"352\" data-origin-width=\"452\" data-origin-height=\"352\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=VDyPjhugZSM\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=VDyPjhugZSM</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=VDyPjhugZSM\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/f9GRM/hyYIbHrOwm/3ApALqmedikjEP6pd3xSgk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/mEqaa/hyYIhHFeD2/KMiyKj17aQWz3Oz41y1v8K/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[유니티 ]VertExmotion Pro, Lordenfel 에셋 리뷰 및 사용방법\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/VDyPjhugZSM\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">홍보영상: <a href=\"https://www.youtube.com/watch?v=_mSPXq_2saU\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=_mSPXq_2saU</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=_mSPXq_2saU\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/crUTib/hyYH4VR0kf/IoeKWdXjNjV1ERpQYMqr8k/img.jpg?width=1280&amp;height=720&amp;face=200_210_968_276,https://scrap.kakaocdn.net/dn/B2EvF/hyYIhnmAMJ/OtyS7yYyDE45zVmxSV1WW0/img.jpg?width=1280&amp;height=720&amp;face=200_210_968_276\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Unity Asset Store Pack - VertExmotion Pro\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/_mSPXq_2saU\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">보잉 같은건가 싶기도 하고 ...</p>\n<p data-ke-size=\"size16\">아무튼 출렁임</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=VDyPjhugZSM\n\n\n\n \n \n홍보영상: https://www.youtube.com/watch?v=_mSPXq_2saU\n\n\n\n \n보잉 같은건가 싶기도 하고 ...\n아무튼 출렁임",
        "guid": "http://serverdown.tistory.com/1273",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰"
        ],
        "isoDate": "2025-04-18T06:03:36.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 애니메이션 다운로드 및 관리 방방법 영상",
        "link": "http://serverdown.tistory.com/1272",
        "pubDate": "Fri, 18 Apr 2025 12:41:19 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1272#entry1272comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"180\" data-origin-height=\"168\"><span data-url=\"https://blog.kakaocdn.net/dn/drLRjD/btsNoZTtrgy/Ll1vPPJfDE3XfDI37Wifk0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/drLRjD/btsNoZTtrgy/Ll1vPPJfDE3XfDI37Wifk0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/drLRjD/btsNoZTtrgy/Ll1vPPJfDE3XfDI37Wifk0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdrLRjD%2FbtsNoZTtrgy%2FLl1vPPJfDE3XfDI37Wifk0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"180\" height=\"168\" data-origin-width=\"180\" data-origin-height=\"168\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상 1: <a href=\"https://www.youtube.com/watch?v=oFBGs4_jJ0Y\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=oFBGs4_jJ0Y</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=oFBGs4_jJ0Y\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/fEoYw/hyYIfb0brf/8I4YWM0W0wobjlG49MC0wk/img.jpg?width=1280&amp;height=720&amp;face=612_262_708_366,https://scrap.kakaocdn.net/dn/ceaU7g/hyYHgJQtVU/cXXUu7qTsspVmsv1UA2tf1/img.jpg?width=1280&amp;height=720&amp;face=612_262_708_366\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"고퀄리티 3D 모델 구하는 방법과 리깅 없이 애니메이션 넣기\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/oFBGs4_jJ0Y\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상 2: <a href=\"https://www.youtube.com/watch?v=5WyebyiOayk\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=5WyebyiOayk</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=5WyebyiOayk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cqcAPd/hyYH8Yfq0m/8HbfgMeFNGGga1B0FrYT30/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/bRRn9d/hyYFywxYCe/ivrsahKg6H5hppoxkhvav0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"체력에 따라 애니메이션이 달라지는 방법\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/5WyebyiOayk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">이 영상에 잘 나와있네요</p>\n<p data-ke-size=\"size16\">리소스 다운로드 방법</p>\n<p data-ke-size=\"size16\">휴머노이드로 전환</p>\n<p data-ke-size=\"size16\">애니메이션만 따로 빼서 저장</p>\n<p data-ke-size=\"size16\">등등이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상 1: https://www.youtube.com/watch?v=oFBGs4_jJ0Y\n\n\n\n \n \n영상 2: https://www.youtube.com/watch?v=5WyebyiOayk\n\n\n\n이 영상에 잘 나와있네요\n리소스 다운로드 방법\n휴머노이드로 전환\n애니메이션만 따로 빼서 저장\n등등이 있습니다.",
        "guid": "http://serverdown.tistory.com/1272",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-04-18T03:41:19.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "목소리 좋은 게임 유튜버 발굴 / 긴옥희",
        "link": "http://serverdown.tistory.com/1271",
        "pubDate": "Fri, 18 Apr 2025 12:17:28 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1271#entry1271comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"441\" data-origin-height=\"253\"><span data-url=\"https://blog.kakaocdn.net/dn/n3hED/btsNl9QA3sR/LPRHlteo2KIa30hapgKkFK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/n3hED/btsNl9QA3sR/LPRHlteo2KIa30hapgKkFK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/n3hED/btsNl9QA3sR/LPRHlteo2KIa30hapgKkFK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fn3hED%2FbtsNl9QA3sR%2FLPRHlteo2KIa30hapgKkFK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"441\" height=\"253\" data-origin-width=\"441\" data-origin-height=\"253\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">마성은 아니고 귀여운 목소리로 사람들을 구독시키고 있는 채널을 찾았습니다.</p>\n<p data-ke-size=\"size16\">AI 로 만든거면 충격적이겠군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">채널: <a href=\"https://www.youtube.com/@932-\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/@932-</a></p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=nOKwht881UI\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=nOKwht881UI</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=nOKwht881UI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dDkQJH/hyYHhaTVlp/V9RHRcH3puXQsCok78MGn0/img.jpg?width=1280&amp;height=720&amp;face=710_116_762_174,https://scrap.kakaocdn.net/dn/i5sJY/hyYHapijQ8/K1BKJmICNh6GLo0ImhHf2K/img.jpg?width=1280&amp;height=720&amp;face=710_116_762_174\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"신작 좀비 아포칼립스 생존게임 | 인투 더 데드\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/nOKwht881UI\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">옹알옹알하는댓글에 목소리 좋다 고나리군요</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"548\" data-origin-height=\"473\"><span data-url=\"https://blog.kakaocdn.net/dn/biki5g/btsNlBsWMA4/XYKDSC02htVjQUN2bngXf0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/biki5g/btsNlBsWMA4/XYKDSC02htVjQUN2bngXf0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/biki5g/btsNlBsWMA4/XYKDSC02htVjQUN2bngXf0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbiki5g%2FbtsNlBsWMA4%2FXYKDSC02htVjQUN2bngXf0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"548\" height=\"473\" data-origin-width=\"548\" data-origin-height=\"473\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">중단만 안한다면</p>\n<p data-ke-size=\"size16\">크게될 채널 같아서 가져왓습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "마성은 아니고 귀여운 목소리로 사람들을 구독시키고 있는 채널을 찾았습니다.\nAI 로 만든거면 충격적이겠군요\n \n채널: https://www.youtube.com/@932-\n영상: https://www.youtube.com/watch?v=nOKwht881UI\n\n\n\n \n옹알옹알하는댓글에 목소리 좋다 고나리군요\n\n\n중단만 안한다면\n크게될 채널 같아서 가져왓습니다.",
        "guid": "http://serverdown.tistory.com/1271",
        "categories": [
          "유튜브",
          "긴옥희"
        ],
        "isoDate": "2025-04-18T03:17:28.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "게임 광고 300만원 태운 개발자 스토리 / 바코 BACO",
        "link": "http://serverdown.tistory.com/1270",
        "pubDate": "Thu, 17 Apr 2025 16:20:25 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1270#entry1270comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"225\" data-origin-height=\"225\"><span data-url=\"https://blog.kakaocdn.net/dn/mJi32/btsNpo6VAcy/qTS1Wp0WcYIkA7Wd2uHXK0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/mJi32/btsNpo6VAcy/qTS1Wp0WcYIkA7Wd2uHXK0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/mJi32/btsNpo6VAcy/qTS1Wp0WcYIkA7Wd2uHXK0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FmJi32%2FbtsNpo6VAcy%2FqTS1Wp0WcYIkA7Wd2uHXK0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"225\" height=\"225\" data-origin-width=\"225\" data-origin-height=\"225\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=oIWW0aJHGaQ\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=oIWW0aJHGaQ</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=oIWW0aJHGaQ\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/TELyx/hyYIj6ssHh/3v0pJlEFsmmE0zv2glzsMk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/b9Sx1o/hyYIahnjdc/rOe2vMITtAWZ3HHMDuNLr1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"게임 앱 만들어서 300만원 광고해보기 [EP 25]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/oIWW0aJHGaQ\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제 이야기는 아니고 영상 이야기</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">중요한것은&nbsp;</p>\n<p data-ke-size=\"size16\">광고를 태워야해서 홍보페이지를 만들어야합니다.</p>\n<p data-ke-size=\"size16\">미리미리 영상을 잘 준비해둬야한다는 뜻입니다.</p>\n<p data-ke-size=\"size16\">광고를 하든 안하든 멋진 연출이이 나오도록 만들어야겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=oIWW0aJHGaQ\n\n\n\n \n제 이야기는 아니고 영상 이야기\n \n중요한것은 \n광고를 태워야해서 홍보페이지를 만들어야합니다.\n미리미리 영상을 잘 준비해둬야한다는 뜻입니다.\n광고를 하든 안하든 멋진 연출이이 나오도록 만들어야겠습니다.",
        "guid": "http://serverdown.tistory.com/1270",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-04-17T07:20:25.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "Brick Away / 블록분해 v1 게임 제작 시작",
        "link": "http://serverdown.tistory.com/1269",
        "pubDate": "Thu, 17 Apr 2025 15:45:56 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1269#entry1269comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"512\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/cWhjbX/btsNmHeIczZ/Qgw6luFF7rBmHwsQeiHkt0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cWhjbX/btsNmHeIczZ/Qgw6luFF7rBmHwsQeiHkt0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cWhjbX/btsNmHeIczZ/Qgw6luFF7rBmHwsQeiHkt0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcWhjbX%2FbtsNmHeIczZ%2FQgw6luFF7rBmHwsQeiHkt0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"512\" height=\"512\" data-origin-width=\"512\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">갑자기 만들고 싶어졌습니다.</p>\n<p data-ke-size=\"size16\">기존에 Tap Away 가 그래픽이 밝아서 제 눈이 아파서 불편사항을 고쳐보려고</p>\n<p data-ke-size=\"size16\">만들기 시작했습니다.</p>\n<p data-ke-size=\"size16\">여기까지 만드는데 4시간 정도 걸린거 같군요</p>\n<p data-ke-size=\"size16\">시간 잘 가네</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=KgW9pFfxSJA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=KgW9pFfxSJA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=KgW9pFfxSJA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cbNrBD/hyYIfXhRaw/HQk5SBDC7ZkrCpriDdIQI1/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/szEpP/hyYFx5oAUC/OyYIyKwsMB0VGeifTLgii0/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"brick away v1\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/KgW9pFfxSJA\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">별로 만들어진게 없습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">플레이:&nbsp; <a href=\"https://play.unity.com/en/games/f191f2a0-4be5-4d67-8ec9-6f98c1cc2996/brick-away-v1\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://play.unity.com/en/games/f191f2a0-4be5-4d67-8ec9-6f98c1cc2996/brick-away-v1</a></p>\n<figure id=\"og_1744871969875\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Brick Away V1 on Unity Play\" data-og-description=\"touch brick\" data-og-host=\"play.unity.com\" data-og-source-url=\"https://play.unity.com/en/games/f191f2a0-4be5-4d67-8ec9-6f98c1cc2996/brick-away-v1\" data-og-url=\"https://play.unity.com/en/games/f191f2a0-4be5-4d67-8ec9-6f98c1cc2996/brick-away-v1\" data-og-image=\"https://scrap.kakaocdn.net/dn/eD9g4/hyYIb8qipm/3KwknF0cKVuaIWfUfkkkaK/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/c3QxpG/hyYFFWDwEX/2dVkEIJKybPWSv8IPaaGK1/img.png?width=512&amp;height=512&amp;face=0_0_512_512\"><a href=\"https://play.unity.com/en/games/f191f2a0-4be5-4d67-8ec9-6f98c1cc2996/brick-away-v1\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.unity.com/en/games/f191f2a0-4be5-4d67-8ec9-6f98c1cc2996/brick-away-v1\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/eD9g4/hyYIb8qipm/3KwknF0cKVuaIWfUfkkkaK/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/c3QxpG/hyYFFWDwEX/2dVkEIJKybPWSv8IPaaGK1/img.png?width=512&amp;height=512&amp;face=0_0_512_512');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Brick Away V1 on Unity Play</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">touch brick</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "갑자기 만들고 싶어졌습니다.\n기존에 Tap Away 가 그래픽이 밝아서 제 눈이 아파서 불편사항을 고쳐보려고\n만들기 시작했습니다.\n여기까지 만드는데 4시간 정도 걸린거 같군요\n시간 잘 가네\n \n영상: https://www.youtube.com/watch?v=KgW9pFfxSJA\n\n\n\n별로 만들어진게 없습니다. \n \n플레이:  https://play.unity.com/en/games/f191f2a0-4be5-4d67-8ec9-6f98c1cc2996/brick-away-v1\n\n \nBrick Away V1 on Unity Play\ntouch brick\nplay.unity.com",
        "guid": "http://serverdown.tistory.com/1269",
        "categories": [
          "블록 분해 게임 (자작)"
        ],
        "isoDate": "2025-04-17T06:45:56.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "Vlad Mihalcea와의 인연",
        "link": "https://jojoldu.tistory.com/825",
        "pubDate": "Thu, 17 Apr 2025 11:23:28 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/825#entry825comment",
        "content": "<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\">유튜브나 블로그를 하다 보면 예상치 못한 인연들이 생긴다.<br />지금까지 10년 가까운 시간을 블로그를 하면서 큰 동력이 된 사건이기도 하다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">운이 좋게도 2014년부터 다녔던 회사는 Hibernate를 사용하는 회사였고, 그 당시 iBatis, MyBatis를 쓰는 것이 당연한 상황에서 Hibernate를 실무에서 사용해볼 수 있었다.<br />다만, 처음 사용해보는 기술이니 이걸 더 잘 쓰기 위해서 공부를 하고 싶은데 공부할 수 있는 컨텐츠가 없었다.<br />한국어로 된 컨텐츠의 대부분은 iBatis, MyBatis였기 때문이다.</p>\n<p data-ke-size=\"size16\">다행히 기선님이 번역해주신 <a href=\"https://product.kyobobook.co.kr/detail/S000001514367\">개빈 킹의 하이버네이트 완벽가이드</a>가 있었지만 나 같은 초보 개발자에겐 너무나 어렵게 느껴져 한줄 한줄 밑줄 그어가며 이해하려고 노력했다.<br /><a href=\"https://www.slideshare.net/slideshow/devon-2012-b4-orm/14729452\">영한님의 Java ORM에 대한 DevOn 발표 자료</a>도 발견하게 되고 이후엔 <a href=\"https://product.kyobobook.co.kr/detail/S000000935744\">영한님의 책</a> 까지 보면서 Java ORM에 대해 훨씬 쉽게 다가갈 수 있었고 실무를 하는데 있어서 충분히 많은 지식을 쌓을 수 있었다.</p>\n<p data-ke-size=\"size16\">이후에도 계속 JPA, Hibernate를 실무에서 계속 사용할 수 있었는데, 구글링 할때마다 항상 만나는 블로그와 스택오버플로우의 답변 유저가 있었다.<br />그게 바로 <a href=\"https://vladmihalcea.com/\">Vlad Mihalcea</a>였다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">나중에 알고 보니 그는 <a href=\"https://blogs.oracle.com/java/post/new-java-champions-in-2017\">자바 챔피언</a>이자 <a href=\"https://github.com/hibernate/hibernate-orm/graphs/contributors\">Hibernate Top Committer</a> 였다는 것에 \"역시...\" 라는 생각을 했다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">당시에는 \"와 역시 해외는 어마어마한 개발자들이 많구나. 영어 공부 진짜 열심히 해야겠다\" 라는 생각을 하면서 열심히 그의 글을 탐닉했다.<br />새로운 글이 올라오면 항상 챙겨보고 그게 진짜 맞는지 성능 테스트를 진행해보고 효과를 확인 한뒤에는 회사에 적용하는 등 그의 지식을 어떻게든 내 것으로 다 흡수하고 싶었다.<br />그의 책 <a href=\"https://www.amazon.com/High-Performance-Java-Persistence-Vlad-Mihalcea/dp/973022823X\">High-Performance Java Persistence</a>는 사무실 책상 위에 항상 펼쳐져 있었다.</p>\n<p data-ke-size=\"size16\">그렇게 몇년의 경력이 쌓이던 중,<br />2018년 갑자기 블로그의 트래픽이 폭발적으로 늘어나는 일이 있었다.</p>\n<p data-ke-size=\"size16\">어디서 이렇게 유입된 건지 찾아보다가 <a href=\"https://in.relation.to/2018/05/25/hibernate-community-newsletter-2018-10/\">Hibernate 공식 커뮤니티 뉴스레터 2018년 10호</a>에서 내가 작성한 <a href=\"https://jojoldu.tistory.com/295\">\"Spring Boot Data JPA 2.0 에서 id Auto_increment 문제 해결\"</a>을 소개한 것을 발견했다.<br /><b>전세계 Java 개발자들이 구독하고 있는 Hibernate 뉴스레터에서 언급된 것</b>이다.<br />그 뉴스레터는 내가 매일 방문하던 Vlad Mihalcea가 작성한 것이기에 믿기지 않는 순간이였다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blog.png\" data-origin-width=\"712\" data-origin-height=\"810\"><span data-url=\"https://blog.kakaocdn.net/dn/SE2FP/btsNnL9SEW3/r52BG4bmdXPwgFYZJk7iM0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/SE2FP/btsNnL9SEW3/r52BG4bmdXPwgFYZJk7iM0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/SE2FP/btsNnL9SEW3/r52BG4bmdXPwgFYZJk7iM0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FSE2FP%2FbtsNnL9SEW3%2Fr52BG4bmdXPwgFYZJk7iM0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"712\" height=\"810\" data-filename=\"blog.png\" data-origin-width=\"712\" data-origin-height=\"810\"/></span></figure>\n</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">이때의 기억이 강렬해서 \"와 블로그 진짜 오래오래 해야겠다\" 라는 다짐을 했었다.<br />그리고 10년 넘게 블로그를 운영하게 되었다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">그 날 이후로는 기술적인 글 외에도, Vlad Mihalcea 라는 개발자에 대해서도 관심을 가지기 시작했다.<br />그의 기술적인 노하우 뿐만 아니라,<br />'이 사람은 도대체 어떤 커리어를 밟아왔을까?'<br />'어떻게 자바 챔피언이 되었을까?'<br />'어떻게 이렇게 한 분야에서 세계적인 전문가가 되었을까?' 등등.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://vladmihalcea.com/how-to-become-a-java-champion/\">How to become a Java Champion</a></li>\n</ul>\n<p data-ke-size=\"size16\">책 외에 또 배울 수 있는 것들이 없을까 싶어 <a href=\"https://vladmihalceastore.teachable.com/\">그의 온라인 스토어</a>에서 판매하는 온라인 강의들도 찾아서 들었다.<br />Java Persistence 에서의 성능 개선 노하우나 Java 환경에서의 SQL 성능 개선 등 <b>자바 개발자 뿐만 아니라 ORM을 사용하는 개발자로서 필요한 대부분의 성능 개선 노하우</b>를 얻을 수 있었다.</p>\n<p data-ke-size=\"size16\">ORM과 SQL 양 쪽에 맞는 가장 적절한 성능 튜닝 사례들을 배울 수 있었고, 이때 배운 지식들은 수십억건의 데이터들 사이에서도 복잡한 도메인들을 처리하는데 큰 힘이 되었다.</p>\n<p data-ke-size=\"size16\">다만, 강의를 수강하는게 수월하지는 않았다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>영어로만 강의가 제공되어서 하나의 강의를 수강하는데 하나하나를 번역해서 보는데 너무 많은 힘이 들었고</li>\n<li>결제 오류가 빈번해서 결제하기가 쉽지 않았고</li>\n<li>강의를 수강하는데 있어서의 편의 기능이 많이 부족했다. (모바일 플레이어, 자막 등등)</li>\n</ul>\n<p data-ke-size=\"size16\">그래도 좋았다.<br />이것마저 없으면 그의 양질의 컨텐츠를 볼 수 있는 방법이 없는데, 이렇게라도 볼 수 있으니 말이다.</p>\n<p data-ke-size=\"size16\">이렇게 쌓인 노하우는 이후에 전 직장 첫번째 컨퍼런스에서 아낌없이 쏟아낼 수 있었다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://www.youtube.com/watch?v=zMAX7g6rO_Y\">[우아콘2020] 수십억건에서 QUERYDSL 사용하기</a></li>\n</ul>\n<p data-ke-size=\"size16\">이 세션은 <a href=\"https://www.youtube.com/watch?v=BnS6343GTkY\">(갓)영한님의 세션</a> 다음으로 가장 높은 조회수가 나와서 많은 개발자분들이 좋아해주셨다.<br />그동안의 공부와 경험이 전혀 잘못되지 않았다는 것을 느끼게 해주었다.</p>\n<p data-ke-size=\"size16\">이런 경험으로 성장을 해왔기에,<br /><b>현재 회사로 이직하고 나서 우리팀 백엔드 개발자분들에게 Vlad의 강의를 너무 소개해주고 싶었다</b>.<br />꼭 JPA 뿐만 아니라 모든 ORM과 SQL을 사용하는 개발자들에게 필수적인 내용을 담고 있기 때문이다.<br />우리 같이 Node.js가 주력인 개발팀에는 언어나 프레임워크에 상관없이 이런 강의가 대단히 필요하다.</p>\n<p data-ke-size=\"size16\">하지만, 위에서 언급한 \"언어의 장벽이나 결제, 학습 편의성\" 등을 생각하니 \"<b>우리 팀 분들에게도 나처럼 힘들게 공부하시라</b>\" 라고 이야기하기 어려웠다.</p>\n<p data-ke-size=\"size16\">어떻게든 우리팀에 이 지식들을 가장 편하게 전달하고 싶었다.<br />어떡하는게 좋을까....?</p>\n<hr data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">그래서 Vlad Mihalcea에게 연락을 드렸다.<br /><b>당신의 강의를 한국어로, 일본어로, 베트남어로 듣고 싶다고</b>.<br />Vlad는 너무나 쿨하게, 너무나 멋지게 이 협업을 받아들여 주셨다.</p>\n<p data-ke-size=\"size16\">그리고 드디어!<br /><b>Vlad Mihalcea의 공식 강의 2개가 인프런에 오픈</b>되었다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>  <a href=\"https://inf.run/5bS4d\">High-Performance Java Persistence</a></li>\n<li>  <a href=\"https://inf.run/A24MX\">High-Performance SQL</a></li>\n</ul>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">  이 강의들은 한국어, 일본어, 베트남어, 영어로 자막 및 더빙이 제공됩니다.<br />즉, 아시아권 개발자 누구나 언어 장벽 없이 수강하실 수 있도록 준비되어 있습니다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">더욱 감사한 것은 <b>오픈 기간 동안40% 할인까지도</b> 동의해주셨다.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><a href=\"https://www.inflearn.com/tag-curation/common_tag/vlad2504?utm_source=jojoldu&amp;utm_medium=earned&amp;utm_campaign=traffic_push-lecture_vlad2504&amp;utm_content=instructor_&amp;utm_term=250417\">Vlad Mihalcea 님의 오픈 이벤트</a></li>\n</ul>\n<p data-ke-size=\"size16\">\"실무에서 성능과 구조 모두를 고려해야 하는 상황에서 무엇을 기준으로 선택할 것인가\" 를 알려주는 강의를 이제 우리 팀원들에게도 알려줄 수 있게 되어서 너무나 기뻤다.</p>\n<p data-ke-size=\"size16\">우리 팀 외에도 특히 다음과 같은 분들께 추천드리고 싶다:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>JPA, Hibernate 등을 사용하지만 내부 구조를 분석하고 근본적인 이해를 높이고 싶거나</li>\n<li>실무 환경의 Java Data Access 계층에서 발생하는 성능 문제를 해결하는 방법을 배우고 싶거나</li>\n<li>ORM 을 적극적으로 쓰는 환경에서의 SQL 성능 개선 방법을 배우고 싶거나</li>\n</ul>\n<p data-ke-size=\"size16\">이런 분들이라면 이번 Vlad의 강의를 적극 추천하고 싶다.<br />전세계 Java 개발자들이 Vlad의 컨텐츠를 좋아하고 강의를 듣는 이유가 무엇인지 잘 알 수 있다.</p>\n<p data-ke-size=\"size16\">지금 Java 개발을 시작하는 분들은 나처럼 영어 문장 하나 하나를 직접 번역해가며, 여러 해외카드들을 교체해가며 결제하는 등의 불편함 없이 배울 수 있게 되었다는 것이 훨씬 기쁘다.</p>\n<p data-ke-size=\"size16\">Vlad 외에도 세상엔 너무나 훌륭한 개발자분들과 그들의 강의들이 있다.<br />이 강의들을 모두 다 <b>언어와 결제, 학습의 제약 없이</b> 듣는 것을 꿈꾸고 있다.<br />그리고 출간을 준비하고 있는 <b>High-Performance Java Persistence 2판</b>도 인프런에서 만나볼 수 있게 되기를 기대한다.</p>",
        "contentSnippet": "유튜브나 블로그를 하다 보면 예상치 못한 인연들이 생긴다.\n지금까지 10년 가까운 시간을 블로그를 하면서 큰 동력이 된 사건이기도 하다.\n \n운이 좋게도 2014년부터 다녔던 회사는 Hibernate를 사용하는 회사였고, 그 당시 iBatis, MyBatis를 쓰는 것이 당연한 상황에서 Hibernate를 실무에서 사용해볼 수 있었다.\n다만, 처음 사용해보는 기술이니 이걸 더 잘 쓰기 위해서 공부를 하고 싶은데 공부할 수 있는 컨텐츠가 없었다.\n한국어로 된 컨텐츠의 대부분은 iBatis, MyBatis였기 때문이다.\n다행히 기선님이 번역해주신 개빈 킹의 하이버네이트 완벽가이드가 있었지만 나 같은 초보 개발자에겐 너무나 어렵게 느껴져 한줄 한줄 밑줄 그어가며 이해하려고 노력했다.\n영한님의 Java ORM에 대한 DevOn 발표 자료도 발견하게 되고 이후엔 영한님의 책 까지 보면서 Java ORM에 대해 훨씬 쉽게 다가갈 수 있었고 실무를 하는데 있어서 충분히 많은 지식을 쌓을 수 있었다.\n이후에도 계속 JPA, Hibernate를 실무에서 계속 사용할 수 있었는데, 구글링 할때마다 항상 만나는 블로그와 스택오버플로우의 답변 유저가 있었다.\n그게 바로 Vlad Mihalcea였다.\n나중에 알고 보니 그는 자바 챔피언이자 Hibernate Top Committer 였다는 것에 \"역시...\" 라는 생각을 했다.\n당시에는 \"와 역시 해외는 어마어마한 개발자들이 많구나. 영어 공부 진짜 열심히 해야겠다\" 라는 생각을 하면서 열심히 그의 글을 탐닉했다.\n새로운 글이 올라오면 항상 챙겨보고 그게 진짜 맞는지 성능 테스트를 진행해보고 효과를 확인 한뒤에는 회사에 적용하는 등 그의 지식을 어떻게든 내 것으로 다 흡수하고 싶었다.\n그의 책 High-Performance Java Persistence는 사무실 책상 위에 항상 펼쳐져 있었다.\n그렇게 몇년의 경력이 쌓이던 중,\n2018년 갑자기 블로그의 트래픽이 폭발적으로 늘어나는 일이 있었다.\n어디서 이렇게 유입된 건지 찾아보다가 Hibernate 공식 커뮤니티 뉴스레터 2018년 10호에서 내가 작성한 \"Spring Boot Data JPA 2.0 에서 id Auto_increment 문제 해결\"을 소개한 것을 발견했다.\n전세계 Java 개발자들이 구독하고 있는 Hibernate 뉴스레터에서 언급된 것이다.\n그 뉴스레터는 내가 매일 방문하던 Vlad Mihalcea가 작성한 것이기에 믿기지 않는 순간이였다.\n\n\n\n이때의 기억이 강렬해서 \"와 블로그 진짜 오래오래 해야겠다\" 라는 다짐을 했었다.\n그리고 10년 넘게 블로그를 운영하게 되었다.\n그 날 이후로는 기술적인 글 외에도, Vlad Mihalcea 라는 개발자에 대해서도 관심을 가지기 시작했다.\n그의 기술적인 노하우 뿐만 아니라,\n'이 사람은 도대체 어떤 커리어를 밟아왔을까?'\n'어떻게 자바 챔피언이 되었을까?'\n'어떻게 이렇게 한 분야에서 세계적인 전문가가 되었을까?' 등등.\nHow to become a Java Champion\n책 외에 또 배울 수 있는 것들이 없을까 싶어 그의 온라인 스토어에서 판매하는 온라인 강의들도 찾아서 들었다.\nJava Persistence 에서의 성능 개선 노하우나 Java 환경에서의 SQL 성능 개선 등 자바 개발자 뿐만 아니라 ORM을 사용하는 개발자로서 필요한 대부분의 성능 개선 노하우를 얻을 수 있었다.\nORM과 SQL 양 쪽에 맞는 가장 적절한 성능 튜닝 사례들을 배울 수 있었고, 이때 배운 지식들은 수십억건의 데이터들 사이에서도 복잡한 도메인들을 처리하는데 큰 힘이 되었다.\n다만, 강의를 수강하는게 수월하지는 않았다.\n영어로만 강의가 제공되어서 하나의 강의를 수강하는데 하나하나를 번역해서 보는데 너무 많은 힘이 들었고\n결제 오류가 빈번해서 결제하기가 쉽지 않았고\n강의를 수강하는데 있어서의 편의 기능이 많이 부족했다. (모바일 플레이어, 자막 등등)\n그래도 좋았다.\n이것마저 없으면 그의 양질의 컨텐츠를 볼 수 있는 방법이 없는데, 이렇게라도 볼 수 있으니 말이다.\n이렇게 쌓인 노하우는 이후에 전 직장 첫번째 컨퍼런스에서 아낌없이 쏟아낼 수 있었다.\n[우아콘2020] 수십억건에서 QUERYDSL 사용하기\n이 세션은 (갓)영한님의 세션 다음으로 가장 높은 조회수가 나와서 많은 개발자분들이 좋아해주셨다.\n그동안의 공부와 경험이 전혀 잘못되지 않았다는 것을 느끼게 해주었다.\n이런 경험으로 성장을 해왔기에,\n현재 회사로 이직하고 나서 우리팀 백엔드 개발자분들에게 Vlad의 강의를 너무 소개해주고 싶었다.\n꼭 JPA 뿐만 아니라 모든 ORM과 SQL을 사용하는 개발자들에게 필수적인 내용을 담고 있기 때문이다.\n우리 같이 Node.js가 주력인 개발팀에는 언어나 프레임워크에 상관없이 이런 강의가 대단히 필요하다.\n하지만, 위에서 언급한 \"언어의 장벽이나 결제, 학습 편의성\" 등을 생각하니 \"우리 팀 분들에게도 나처럼 힘들게 공부하시라\" 라고 이야기하기 어려웠다.\n어떻게든 우리팀에 이 지식들을 가장 편하게 전달하고 싶었다.\n어떡하는게 좋을까....?\n그래서 Vlad Mihalcea에게 연락을 드렸다.\n당신의 강의를 한국어로, 일본어로, 베트남어로 듣고 싶다고.\nVlad는 너무나 쿨하게, 너무나 멋지게 이 협업을 받아들여 주셨다.\n그리고 드디어!\nVlad Mihalcea의 공식 강의 2개가 인프런에 오픈되었다.\n  High-Performance Java Persistence\n  High-Performance SQL\n  이 강의들은 한국어, 일본어, 베트남어, 영어로 자막 및 더빙이 제공됩니다.\n즉, 아시아권 개발자 누구나 언어 장벽 없이 수강하실 수 있도록 준비되어 있습니다.\n더욱 감사한 것은 오픈 기간 동안40% 할인까지도 동의해주셨다.\nVlad Mihalcea 님의 오픈 이벤트\n\"실무에서 성능과 구조 모두를 고려해야 하는 상황에서 무엇을 기준으로 선택할 것인가\" 를 알려주는 강의를 이제 우리 팀원들에게도 알려줄 수 있게 되어서 너무나 기뻤다.\n우리 팀 외에도 특히 다음과 같은 분들께 추천드리고 싶다:\nJPA, Hibernate 등을 사용하지만 내부 구조를 분석하고 근본적인 이해를 높이고 싶거나\n실무 환경의 Java Data Access 계층에서 발생하는 성능 문제를 해결하는 방법을 배우고 싶거나\nORM 을 적극적으로 쓰는 환경에서의 SQL 성능 개선 방법을 배우고 싶거나\n이런 분들이라면 이번 Vlad의 강의를 적극 추천하고 싶다.\n전세계 Java 개발자들이 Vlad의 컨텐츠를 좋아하고 강의를 듣는 이유가 무엇인지 잘 알 수 있다.\n지금 Java 개발을 시작하는 분들은 나처럼 영어 문장 하나 하나를 직접 번역해가며, 여러 해외카드들을 교체해가며 결제하는 등의 불편함 없이 배울 수 있게 되었다는 것이 훨씬 기쁘다.\nVlad 외에도 세상엔 너무나 훌륭한 개발자분들과 그들의 강의들이 있다.\n이 강의들을 모두 다 언어와 결제, 학습의 제약 없이 듣는 것을 꿈꾸고 있다.\n그리고 출간을 준비하고 있는 High-Performance Java Persistence 2판도 인프런에서 만나볼 수 있게 되기를 기대한다.",
        "guid": "https://jojoldu.tistory.com/825",
        "categories": [
          "생각정리",
          "hibernate",
          "high-performance java persistence",
          "high-performance sql",
          "java champion",
          "JPA",
          "Vlad Mihalcea"
        ],
        "isoDate": "2025-04-17T02:23:28.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "코드 품질 개선 기법 8편: 실상과 허상",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-8",
        "pubDate": "Fri, 18 Apr 2025 02:00:00 GMT",
        "content": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "contentSnippet": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-8",
        "isoDate": "2025-04-18T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": [
      {
        "title": "보법이 다른 B2B 디자인",
        "link": "https://spoqa.github.io/2025/04/21/b2b-design.html",
        "pubDate": "2025-04-21T00:00:00.000Z",
        "author": "김동환",
        "content": "<p>안녕하세요, 스포카에서 제품 디자인을 하고 있는 김동환(Donny)입니다.</p>\n\n<p>저는 이전에 콜드체인 이커머스와 O2O 매칭 서비스 등 B2C 제품 위주로 경력을 쌓아 왔고, B2B SaaS는 스포카에서 처음 경험했습니다. 이곳에서 제품을 만들며 디자이너로서 느낀 경험과 몇 가지 생각을 공유하고자 합니다.</p>\n\n<p>비슷한 도메인이라도 데이터를 중시하는 조직이 있는가 하면, 직관을 더 선호하는 조직도 있을 것입니다. 사업 분야, 규모, 조직의 성향과 전략에 따라 개인의 경험은 크게 달라질 수 있기 때문에 제 경험이 모든 B2B 조직을 대변할 수는 없다는 점을 미리 말씀드립니다.</p>\n\n<hr />\n\n<h2 id=\"첫인상\">첫인상</h2>\n\n<p>일단 이전에 담당했던 서비스들에 비해 <strong>제품 복잡도가 세 배는 더 높게 느껴졌습니다.</strong></p>\n\n<p>Vertical Solution답게 해결하려는 고객의 문제와 환경이 매우 특수했고, 서비스 정책 간의 상호 연관성과 깊이도 상당했습니다.</p>\n\n<p>예를 들어 키친보드에서는 전처리, 선주문, 레거시 ERP 호환 등 기존 식자재 매장의 특수성이 존재했으며, 운영 방식을 충분히 이해한 후에야 제품 개선이 가능했습니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/1.png\" />\n</figure>\n\n<h2 id=\"제품을-알아가는-과정\">제품을 알아가는 과정</h2>\n\n<p>조금 진부하게 들릴 수도 있지만, 그 어느 때보다 유저가 되어보려는 노력에 많은 에너지를 쏟았습니다. 한 번도 사용해본 적 없고, 일상과는 거리가 먼 제품을 만들어야 했기 때문입니다.</p>\n\n<p>단순히 소비자의 입장에서 공감하거나, <strong>퍼널을 따라가 보는 체험만으로는 개선점을 도출할 수 없었습니다.</strong> 실제로 이 툴을 업무에 사용하는 사람의 시선과 맥락에서 바라보는 것이 필요했습니다.</p>\n\n<p>B2B 제품은 특성상 기능이 많고 활용 형태도 다양했기 때문에, 입사 초기에는 이전 리서치 자료를 꼼꼼히 읽고, 다양한 방식으로 툴을 사용해 보며 제품을 익혔던 기억이 납니다.</p>\n\n<p>쉐도잉이 특히 도움이 되었습니다. 명확한 역할과 상황, 목표를 설정한 뒤, 메소드 연기처럼 진심을 담아 제품을 사용해 보는 체험 방식입니다.</p>\n\n<p>사실 그전까지는 일부러 사전 학습을 최소화한 채 제품을 탐색하는 것을 선호했습니다. 이해도가 낮은 이 시기에 Happy Case를 따라가며 제품을 경험하는 것이 기존 디자이너들과는 조금 다른 관점으로 제품을 바라볼 수 있는 기회라고 생각했기 때문입니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/2.png\" />\n</figure>\n\n<hr />\n\n<h2 id=\"인터뷰와-직관-드리븐\">인터뷰와 직관 드리븐</h2>\n\n<p>제품 개발에 대해 이야기해봅시다. 결론부터 말하자면 <strong>대부분의 일감은 고객 인터뷰를 기반으로 진행됩니다.</strong></p>\n\n<p>이 점은 Micro A/B 테스트를 진행하며 정량 데이터에 많은 가치를 두던 이전 조직의 환경과는 달랐기 때문에 개인적으로 인상 깊었던 부분이었습니다.</p>\n\n<p>제품 개발 방식이 이런 모습을 갖게 된 것에는 이유가 있었습니다.</p>\n\n<h3 id=\"트래픽이-적습니다\">트래픽이 적습니다</h3>\n\n<p>B2C 서비스 같은 경우 보통 십만에서 백만 단위의 트래픽이 일반적이지만, <strong>B2B는 유저 수 자체가 굉장히 적습니다.</strong> 대신 LTV나 CAC 관점에서 한 명 한 명의 유저가 훨씬 더 비싸고 가치 있는 편입니다.</p>\n\n<p>이런 환경에서는 트래픽 기반의 A/B 테스트 같은 실험을 반복하며 제품을 개선하기 어렵습니다. 설령 실험 기간을 길게 잡더라도 제품 내·외부의 변인을 통제하고 통계적으로 유의미한 결과를 얻기 힘든 조건입니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/3.png\" />\n</figure>\n\n<h3 id=\"지표-왜곡이-일어납니다\">지표 왜곡이 일어납니다</h3>\n\n<p>단순화 한 사례로 말씀드리자면, 아래 그래프는 매장이 앱에 들어와 주문을 완료하기까지의 구간별 잔존율입니다. 그래프만 보면 본격적으로 상품 탐색이 시작된 이후에는 중도 이탈이 거의 없는 형태입니다.</p>\n\n<p>하지만 애초에 탐색부터 시작하는 구매 퍼널이 과연 유저의 80%를 끝까지 이끌 수 있을까요? 모두가 정말 만족하고 있는 걸까요?</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/4.png\" />\n</figure>\n\n<p>유저 인터뷰와 VOC를 통해 주문 과정에서의 불만 사항을 확인할 수 있었습니다. 쉐도잉을 해보니 정말 헉 소리 날 정도로 불편하더군요. 그렇다면 왜 이런 불편함은 데이터로 보이지 않았을까요?</p>\n\n<p>바로 <strong>매장은 주문을 하지 않으면 장사를 할 수 없기 때문입니다.</strong> 불편해도 매장은 생업을 위해 주문을 해야 합니다. 그래서 사용성에 상관없이 이탈이 거의 없었던 것입니다.</p>\n\n<p>“그냥 다른 커머스로 시켜버리면 되는 거 아니야?”라고 생각할 수 있지만 매장은 한 유통사와 오랜 시간 거래하며 신뢰를 쌓아 온 관계를 쉽게 바꾸지 않는 특성을 가지고 있습니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/5.png\" />\n</figure>\n\n<p>이처럼 <strong>업무에 사용되는 제품</strong>에서는 사용자의 행동에 <strong>제약이나 강한 목적</strong>이 있기 때문에, 지표 왜곡이 빈번하게 발생합니다. 유저 인터뷰가 문제의 본질에 더 가까이 다가갈 수 있는 이유이기도 합니다.</p>\n\n<p>물론 정량 지표 역시 경향을 관찰하는 보조적 도구이자, 배포 이후 성과를 측정하는 데에 활용됩니다. 엄격한 통계적 유의미함을 갖추기보다는, 편향 가능성을 인정하고 사용하는 편입니다.</p>\n\n<h2 id=\"빛나는-디자이너\">빛나는 디자이너</h2>\n\n<p>인터뷰 드리븐은 특히 디자이너에게 매력적인 환경인 것 같습니다. 숫자만으로 결정을 내리기 힘든 상황에서, 시각 산출물로서 논리를 이어갈 수 있다는 점에서 디자이너의 Super Power가 부각된다고나 할까요?</p>\n\n<p>그동안 0.1% 앞에서 얼마나 많은 논리와 디자인이 매몰차게 거부됐나요. <strong>데이터 드리븐 환경에서는 직관이 거의 죄악에 가까웠습니다.</strong> 하지만 이곳에서는 유저 행동의 행간을 읽고, 여러 형태의 근거를 모아 판단합니다. 그리고 내가 만든 것의 가치가 온전히 전달되었는지 세심하게 관찰합니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/6.png\" />\n</figure>\n\n<h2 id=\"제품-사용-설명서\">제품 사용 설명서</h2>\n\n<p>유저에게 제품을 이해시키는 방법으로 FAQ, Help 페이지를 적극적으로 활용하는 것 또한 신기한 점 중 하나였습니다.</p>\n\n<p>제품 특성상 기능이 많기 때문에 어중간하게 요약해 설명하거나 복잡도가 높은 화면을 만들기보다는, 과감하게 사용 설명서로 링크를 시키거나 온보딩을 담당하는 영업팀에 도움을 요청하는 방식으로 풀어나가는 점이 새로웠습니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/7.png\" />\n</figure>\n\n<h2 id=\"페르소나의-중요성\">페르소나의 중요성</h2>\n\n<p>사실 B2B, B2C를 떠나 우리의 제품과 기능이 누구를 위한 것인지에 대한 <strong>뾰족한 설정</strong>은 너무나도 기본적인 부분입니다.</p>\n\n<p>하지만 초기 B2B 같은 경우, 고객사 하나하나가 소중하기 때문에 <strong>모든 요청과 의견을 동일하게 평가하는 실수</strong>를 자주 저지릅니다.</p>\n\n<p>페르소나가 없다면 정말 필요한 문제에 힘을 쏟지 못하고, 이런저런 업무를 맴돌며 늘 바쁜 상태에 놓이게 됩니다. <strong>그럴 때일수록 천천히 문제 정의부터 돌아봐야 합니다.</strong> 그렇지 않으면 공급자만 만족하고 정작 사용자는 외면하는.. 표면적인 문제만 해결하는 무언가를 만들 확률이 아주 높아집니다.</p>\n\n<p>이건 스스로에게 하는 말이기도 합니다.</p>\n\n<hr />\n\n<h2 id=\"본질\">본질</h2>\n\n<p>B2B든 B2C든 본질은 똑같았습니다.</p>\n\n<p><strong>누구에게, 무엇을, 어떻게, 왜 제공할지를 뾰족하게 정하고, 그것을 효과적으로 수행할 수 있는 방법을 탐구하는 것.</strong></p>\n\n<p>쉬워 보이면 쉬운 일이고, 어렵게 느껴지면 너무나도 어려운 그 본질 자체는 같았습니다.</p>\n\n<h2 id=\"시장-관점에서-b2b\">시장 관점에서 B2B</h2>\n\n<p>마치며, 여담으로 사실 B2B 도메인을 선택한 데에는 시장 관점의 판단도 있었습니다.</p>\n\n<p>거시적인 관점에서 바라본 B2B는, 쉬운 문제가 대부분 해결된 시장에서 여전히 성장 동력이 많이 남아 있는 영역으로 보였습니다. 고객 영업과 획득이 어렵지만, 그만큼 Lock-in도 강해 변동성이 큰 시장 상황에서도 현금 흐름을 예측할 수 있고, 하방이 비교적 단단하다는 장점이 있다고 생각했습니다.</p>\n\n<p>물론 우리가 열광했던 폭발적인 J 형태의 성장 곡선은 기대하기 어렵지만, 상대적으로 안정적인 구조임은 분명해 보였습니다. 지금처럼 저성장·긴축·불안정성이 높은 시장 분위기에서는 오히려 더 매력적인 포지션이 아닐까 싶었습니다.</p>\n\n<p>뭔가 주식 블로그처럼 마무리된 느낌이네요. 아무튼, 이런 도전적인 시기에도 유·무형의 가치를 만들기 위해 애쓰는 메이커 여러분 모두를 진심으로 응원하며 글을 마치겠습니다.</p>\n\n<p>시간 내어 읽어주셔서 감사합니다.</p>\n",
        "contentSnippet": "안녕하세요, 스포카에서 제품 디자인을 하고 있는 김동환(Donny)입니다.\n저는 이전에 콜드체인 이커머스와 O2O 매칭 서비스 등 B2C 제품 위주로 경력을 쌓아 왔고, B2B SaaS는 스포카에서 처음 경험했습니다. 이곳에서 제품을 만들며 디자이너로서 느낀 경험과 몇 가지 생각을 공유하고자 합니다.\n비슷한 도메인이라도 데이터를 중시하는 조직이 있는가 하면, 직관을 더 선호하는 조직도 있을 것입니다. 사업 분야, 규모, 조직의 성향과 전략에 따라 개인의 경험은 크게 달라질 수 있기 때문에 제 경험이 모든 B2B 조직을 대변할 수는 없다는 점을 미리 말씀드립니다.\n첫인상\n일단 이전에 담당했던 서비스들에 비해 제품 복잡도가 세 배는 더 높게 느껴졌습니다.\nVertical Solution답게 해결하려는 고객의 문제와 환경이 매우 특수했고, 서비스 정책 간의 상호 연관성과 깊이도 상당했습니다.\n예를 들어 키친보드에서는 전처리, 선주문, 레거시 ERP 호환 등 기존 식자재 매장의 특수성이 존재했으며, 운영 방식을 충분히 이해한 후에야 제품 개선이 가능했습니다.\n제품을 알아가는 과정\n조금 진부하게 들릴 수도 있지만, 그 어느 때보다 유저가 되어보려는 노력에 많은 에너지를 쏟았습니다. 한 번도 사용해본 적 없고, 일상과는 거리가 먼 제품을 만들어야 했기 때문입니다.\n단순히 소비자의 입장에서 공감하거나, 퍼널을 따라가 보는 체험만으로는 개선점을 도출할 수 없었습니다. 실제로 이 툴을 업무에 사용하는 사람의 시선과 맥락에서 바라보는 것이 필요했습니다.\nB2B 제품은 특성상 기능이 많고 활용 형태도 다양했기 때문에, 입사 초기에는 이전 리서치 자료를 꼼꼼히 읽고, 다양한 방식으로 툴을 사용해 보며 제품을 익혔던 기억이 납니다.\n쉐도잉이 특히 도움이 되었습니다. 명확한 역할과 상황, 목표를 설정한 뒤, 메소드 연기처럼 진심을 담아 제품을 사용해 보는 체험 방식입니다.\n사실 그전까지는 일부러 사전 학습을 최소화한 채 제품을 탐색하는 것을 선호했습니다. 이해도가 낮은 이 시기에 Happy Case를 따라가며 제품을 경험하는 것이 기존 디자이너들과는 조금 다른 관점으로 제품을 바라볼 수 있는 기회라고 생각했기 때문입니다.\n인터뷰와 직관 드리븐\n제품 개발에 대해 이야기해봅시다. 결론부터 말하자면 대부분의 일감은 고객 인터뷰를 기반으로 진행됩니다.\n이 점은 Micro A/B 테스트를 진행하며 정량 데이터에 많은 가치를 두던 이전 조직의 환경과는 달랐기 때문에 개인적으로 인상 깊었던 부분이었습니다.\n제품 개발 방식이 이런 모습을 갖게 된 것에는 이유가 있었습니다.\n트래픽이 적습니다\nB2C 서비스 같은 경우 보통 십만에서 백만 단위의 트래픽이 일반적이지만, B2B는 유저 수 자체가 굉장히 적습니다. 대신 LTV나 CAC 관점에서 한 명 한 명의 유저가 훨씬 더 비싸고 가치 있는 편입니다.\n이런 환경에서는 트래픽 기반의 A/B 테스트 같은 실험을 반복하며 제품을 개선하기 어렵습니다. 설령 실험 기간을 길게 잡더라도 제품 내·외부의 변인을 통제하고 통계적으로 유의미한 결과를 얻기 힘든 조건입니다.\n지표 왜곡이 일어납니다\n단순화 한 사례로 말씀드리자면, 아래 그래프는 매장이 앱에 들어와 주문을 완료하기까지의 구간별 잔존율입니다. 그래프만 보면 본격적으로 상품 탐색이 시작된 이후에는 중도 이탈이 거의 없는 형태입니다.\n하지만 애초에 탐색부터 시작하는 구매 퍼널이 과연 유저의 80%를 끝까지 이끌 수 있을까요? 모두가 정말 만족하고 있는 걸까요?\n유저 인터뷰와 VOC를 통해 주문 과정에서의 불만 사항을 확인할 수 있었습니다. 쉐도잉을 해보니 정말 헉 소리 날 정도로 불편하더군요. 그렇다면 왜 이런 불편함은 데이터로 보이지 않았을까요?\n바로 매장은 주문을 하지 않으면 장사를 할 수 없기 때문입니다. 불편해도 매장은 생업을 위해 주문을 해야 합니다. 그래서 사용성에 상관없이 이탈이 거의 없었던 것입니다.\n“그냥 다른 커머스로 시켜버리면 되는 거 아니야?”라고 생각할 수 있지만 매장은 한 유통사와 오랜 시간 거래하며 신뢰를 쌓아 온 관계를 쉽게 바꾸지 않는 특성을 가지고 있습니다.\n이처럼 업무에 사용되는 제품에서는 사용자의 행동에 제약이나 강한 목적이 있기 때문에, 지표 왜곡이 빈번하게 발생합니다. 유저 인터뷰가 문제의 본질에 더 가까이 다가갈 수 있는 이유이기도 합니다.\n물론 정량 지표 역시 경향을 관찰하는 보조적 도구이자, 배포 이후 성과를 측정하는 데에 활용됩니다. 엄격한 통계적 유의미함을 갖추기보다는, 편향 가능성을 인정하고 사용하는 편입니다.\n빛나는 디자이너\n인터뷰 드리븐은 특히 디자이너에게 매력적인 환경인 것 같습니다. 숫자만으로 결정을 내리기 힘든 상황에서, 시각 산출물로서 논리를 이어갈 수 있다는 점에서 디자이너의 Super Power가 부각된다고나 할까요?\n그동안 0.1% 앞에서 얼마나 많은 논리와 디자인이 매몰차게 거부됐나요. 데이터 드리븐 환경에서는 직관이 거의 죄악에 가까웠습니다. 하지만 이곳에서는 유저 행동의 행간을 읽고, 여러 형태의 근거를 모아 판단합니다. 그리고 내가 만든 것의 가치가 온전히 전달되었는지 세심하게 관찰합니다.\n제품 사용 설명서\n유저에게 제품을 이해시키는 방법으로 FAQ, Help 페이지를 적극적으로 활용하는 것 또한 신기한 점 중 하나였습니다.\n제품 특성상 기능이 많기 때문에 어중간하게 요약해 설명하거나 복잡도가 높은 화면을 만들기보다는, 과감하게 사용 설명서로 링크를 시키거나 온보딩을 담당하는 영업팀에 도움을 요청하는 방식으로 풀어나가는 점이 새로웠습니다.\n페르소나의 중요성\n사실 B2B, B2C를 떠나 우리의 제품과 기능이 누구를 위한 것인지에 대한 뾰족한 설정은 너무나도 기본적인 부분입니다.\n하지만 초기 B2B 같은 경우, 고객사 하나하나가 소중하기 때문에 모든 요청과 의견을 동일하게 평가하는 실수를 자주 저지릅니다.\n페르소나가 없다면 정말 필요한 문제에 힘을 쏟지 못하고, 이런저런 업무를 맴돌며 늘 바쁜 상태에 놓이게 됩니다. 그럴 때일수록 천천히 문제 정의부터 돌아봐야 합니다. 그렇지 않으면 공급자만 만족하고 정작 사용자는 외면하는.. 표면적인 문제만 해결하는 무언가를 만들 확률이 아주 높아집니다.\n이건 스스로에게 하는 말이기도 합니다.\n본질\nB2B든 B2C든 본질은 똑같았습니다.\n누구에게, 무엇을, 어떻게, 왜 제공할지를 뾰족하게 정하고, 그것을 효과적으로 수행할 수 있는 방법을 탐구하는 것.\n쉬워 보이면 쉬운 일이고, 어렵게 느껴지면 너무나도 어려운 그 본질 자체는 같았습니다.\n시장 관점에서 B2B\n마치며, 여담으로 사실 B2B 도메인을 선택한 데에는 시장 관점의 판단도 있었습니다.\n거시적인 관점에서 바라본 B2B는, 쉬운 문제가 대부분 해결된 시장에서 여전히 성장 동력이 많이 남아 있는 영역으로 보였습니다. 고객 영업과 획득이 어렵지만, 그만큼 Lock-in도 강해 변동성이 큰 시장 상황에서도 현금 흐름을 예측할 수 있고, 하방이 비교적 단단하다는 장점이 있다고 생각했습니다.\n물론 우리가 열광했던 폭발적인 J 형태의 성장 곡선은 기대하기 어렵지만, 상대적으로 안정적인 구조임은 분명해 보였습니다. 지금처럼 저성장·긴축·불안정성이 높은 시장 분위기에서는 오히려 더 매력적인 포지션이 아닐까 싶었습니다.\n뭔가 주식 블로그처럼 마무리된 느낌이네요. 아무튼, 이런 도전적인 시기에도 유·무형의 가치를 만들기 위해 애쓰는 메이커 여러분 모두를 진심으로 응원하며 글을 마치겠습니다.\n시간 내어 읽어주셔서 감사합니다.",
        "id": "https://spoqa.github.io/2025/04/21/b2b-design.html",
        "isoDate": "2025-04-21T00:00:00.000Z"
      },
      {
        "title": "단지 권한 기능을 추가해달라고 했을 뿐인데(feat. 인증 기능 개선)",
        "link": "https://spoqa.github.io/2025/04/18/improve-auth.html",
        "pubDate": "2025-04-18T00:00:00.000Z",
        "author": "남경호",
        "content": "<p>안녕하세요. 스포카 백엔드팀 프로그래머 남경호입니다.</p>\n\n<p>개발자라면 누구나 오랫동안 미뤄두었던 과제가 하나쯤 있을 것입니다. 업무의 우선순위가 낮거나 긴급한 과제들에 밀려 지속적으로 백로그에 쌓여 있던 작업 말이죠. 최근 저희팀에서 왜 오랜 시간 미뤄두었던 인증 방식 개선 작업을 진행하게 되었는지, 그 과정에서 얻은 여러 경험을 여러분께 공유하고자 합니다.</p>\n\n<h1 id=\"배경\">배경</h1>\n\n<p>스포카 블로그를 꾸준히 보신 분이라면, <a href=\"https://spoqa.github.io/2022/04/15/all-new-server.html\" target=\"\\_blank\">서버 언어 전환 이야기</a> 글에서 <a href=\"https://en.wikipedia.org/wiki/JSON_Web_Token\" target=\"\\_blank\">JWT</a> 관련 문제를 언급하며 향후 개선할 예정이라고 소개했던 내용을 기억하실 겁니다.</p>\n\n<p><img src=\"/images/improve-auth/jwt.png\" alt=\"jwt\" /></p>\n\n<p>약 3년이 흐른 지금, 드디어 저희가 인증 방식 개선을 진행하게 된 가장 큰 이유는 바로 키친보드 매장 앱에 권한관리 기능이 추가되었기 때문입니다.</p>\n\n<p><img src=\"/images/improve-auth/request-work.png\" alt=\"request-work\" /></p>\n\n<p>키친보드 매장 앱은 식자재 주문부터 거래대금 결제까지 다양한 기능을 제공합니다. 이 과정에서 사장님은 직원이 매장의 월 거래 내역 등 민감한 정보를 조회하지 못하도록 권한을 제어할 필요가 생겼는데요. 기존 JWT 인증은 무 상태(stateless) 특성상 권한 변경 시 즉각적으로 클라이언트의 인증 상태를 관리할 수 없다는 한계가 있었습니다.</p>\n\n<p>그래서 저희는 권한 기능을 추가하기에 앞서 인증 방식을 먼저 개선하기로 하였습니다.</p>\n\n<h1 id=\"인증-방식-개선-방법\">인증 방식 개선 방법</h1>\n\n<h2 id=\"refresh-token-도입\">Refresh Token 도입</h2>\n\n<p>앞서 이야기했듯이, JWT 기반의 인증 방식은 서버가 사용자의 상태를 저장하지 않습니다. 덕분에 서버의 확장성이 높고 서버 부하를 줄일 수 있다는 장점이 있지만, 한번 발급된 토큰을 서버에서 직접 제어할 수 없다는 단점이 있습니다.</p>\n\n<p>이러한 특성은 보안 문제로 연결될 수 있는데요. 만약 인증을 통해 발급받은 토큰이 탈취된다면, 서버가 이 토큰을 제어할 수 없으므로 악의적인 사용자는 손쉽게 탈취된 토큰을 이용하여 정상 사용자처럼 서비스를 이용할 수 있게 됩니다. 보통 이러한 보안 위험을 방지하기 위해 Access Token의 만료 시간을 짧게 설정하지만, 이 경우 사용자가 자주 로그인해야 하는 번거로움이 발생하게 됩니다.</p>\n\n<p>이와 같은 문제를 해결할 수 있는 대표적인 방법의 하나가 바로 <a href=\"https://auth0.com/docs/secure/tokens/refresh-tokens\" target=\"\\_blank\">Refresh Token</a> 의 도입입니다. Refresh Token은 Access Token과 달리 서버가 상태를 관리하는 토큰으로, Access Token을 갱신하는 데 사용됩니다. 앞서 말씀드린 대로, Access Token의 탈취 위험을 낮추기 위해 Access Token의 만료 시간을 짧게 설정하는 것이 좋은데요. 이때 Refresh Token을 활용하면 사용자가 Access Token의 만료 시점마다 다시 로그인하지 않아도 편리하게 새로운 Access Token을 발급받을 수 있습니다.</p>\n\n<p>다음 그림에서 Access Token과 Refresh Token의 인증 과정을 자세히 확인할 수 있습니다.</p>\n\n<p><img src=\"/images/improve-auth/auth-flow-with-refresh-token.png\" alt=\"auth-flow-with-refresh-token\" /></p>\n\n<ol>\n  <li>사용자가 로그인을 요청하면 서버는 Access Token과 Refresh Token을 발급합니다.</li>\n  <li>사용자는 발급받은 유효한 Access Token을 이용해 API를 호출하고, 서버는 요청된 데이터를 정상적으로 응답합니다.</li>\n  <li>사용자가 만료된 Access Token을 가지고 API 요청을 하면 서버는 401 인증 에러를 반환합니다. 이때 클라이언트는 Refresh Token을 사용하여 새로운 Access Token을 발급받고, 갱신된 Access Token으로 API를 재요청하여 정상적으로 데이터를 받을 수 있습니다.</li>\n  <li>하지만 만약 사용자의 Refresh Token까지 만료된 상태라면, 서버는 최종적으로 401 인증 에러를 반환하여 사용자의 다시 로그인을 요구합니다.</li>\n</ol>\n\n<p>위 과정을 통해 일반적으로 Access Token의 만료 시간을 짧게 설정하여 Access Token의 탈취 위험을 최소화하고, Refresh Token을 통해 사용자 편의성 또한 유지할 수 있습니다.</p>\n\n<p>아래 그림을 통해 Access Token의 탈취로 인한 공격 시나리오로 Access Token의 만료시간이 짧으면 짧을수록 보안 위험도가 감소하게 됩니다.</p>\n\n<p><img src=\"/images/improve-auth/malicous-case1.png\" alt=\"malicous-case1\" /></p>\n\n<p>이처럼 Refresh Token을 적절히 도입하고 관리하면 토큰 탈취로 인한 보안 위험을 효과적으로 감소시킬 뿐만 아니라 사용자가 매번 로그인해야 하는 문제도 해결할 수 있으므로 사용성도 함께 챙길 수 있게 됩니다.</p>\n\n<h2 id=\"refresh-token-rotation\">Refresh Token Rotation</h2>\n\n<p>한편, Access Token에 대한 탈취 위험은 Refresh Token도 동일한 것 아닌가? 라는 질문을 할 수 있을 것 같습니다. 맞습니다. Refresh Token이 탈취당하면 Access Token을 갱신할 수 있고 갱신된 Access Token을 통해 악의적 사용자는 손쉽게 탈취한 사용자인 척 서비스를 이용할 수 있게 됩니다.</p>\n\n<p>이러한 문제를 해결하기 위해 우리는 <a href=\"https://auth0.com/docs/secure/tokens/refresh-tokens/refresh-token-rotation\" target=\"\\_blank\">Refresh Token Rotation</a> 을 도입하기로 합니다. Refresh Token Rotation은 아래와 같이 Refresh Token을 이용해 Access Token을 갱신할 때 Refresh Token도 함께 갱신하여 Refresh Token 탈취 시 발생할 수 있는 위험을 회피합니다.</p>\n\n<p><img src=\"/images/improve-auth/malicous-case2.png\" alt=\"malicous-case2\" /></p>\n\n<h1 id=\"이슈\">이슈</h1>\n\n<h2 id=\"클라이언트의-네트워크-이슈\">클라이언트의 네트워크 이슈</h2>\n\n<p>앞서 저희는 Refresh Token Rotation을 이용하여 Refresh Token 탈취에 대한 위험성을 회피하고자 하였습니다. 이렇게 하면 Refresh Token을 이용하여 Access Token을 갱신 요청할 때 요청한 Refresh Token도 새롭게 발급되어 더 이상 Refresh Token을 사용할 수 없게 되는데요. 보안 수준은 강화되었지만, 클라이언트 개발자분들이 한가지 우려 점을 제기해 주셨습니다.</p>\n\n<p>모바일 기기 특성상 지하실이나 엘리베이터안과같이 네트워크가 원활하지 않은 곳에서 사용할 가능성이 존재하는데요. 이때 아래 그림과 같이 첫 번째 요청한 Refresh Token을 재요청하는 경우가 발생할 수 있습니다. 하지만 Refresh Token을 매번 갱신하기 때문에 동일한 Refresh Token으로 여러번 Access Token을 갱신요청하게 된다면 두번째 요청부터는  인증 에러가 발생하게 됩니다.</p>\n\n<p><img src=\"/images/improve-auth/network-issue-case.png\" alt=\"network-issue-case\" /></p>\n\n<p>그래서 저희는 <a href=\"https://auth0.com/docs/secure/tokens/refresh-tokens/refresh-token-rotation#automatic-reuse-detection\" target=\"\\_blank\">Token Family 방식</a> 을 사용하여 요청 시마다 기존 Refresh Token을 지우지 않고 과거 토큰을 저장해 두었다가 첫 번째 요청으로 새롭게 발급된 토큰 또는 모종의 이유로 인해 갱신하지 못한 기존 토큰으로 토큰 갱신 요청을 할 수 있도록 구현하여 Refresh Token을 재사용할 수 있도록 하였습니다.</p>\n\n<p><img src=\"/images/improve-auth/token-family-flow.png\" alt=\"token-family-flow\" /></p>\n\n<p>이로써 클라이언트는 네트워크 이슈가 발생해도 Refresh Token을 갱신할 수 있게 되었습니다.</p>\n\n<p><img src=\"/images/improve-auth/resolved-network-issue-flow.png\" alt=\"resolved-network-issue-flow\" /></p>\n\n<h2 id=\"인증-토큰의-하위-호환\">인증 토큰의 하위 호환</h2>\n\n<p>한편, 저희는 JWT를 다루는 라이브러리로 <a href=\"https://github.com/spoqa/jjwt\" target=\"\\_blank\">JJWT</a> 를 사용하고 있습니다. 앞서 JWT는 상태를 가지지 않기 때문에 사용자가 사용하는 Access Token을 서버에서 제어할 수 없다고 말씀드렸었는데요. 그래서 Access Token의 만료 시간을 두어 새롭게 Access Token을 발급받도록 하여 우회적으로 제어할 수 있습니다. Access Token을 만료시키는 또 다른 방법은, 해당 토큰을 생성할 때 사용된 암호키를 변경하는 것입니다. 저희는 그래서 클라이언트에서 사용하는 Access Token을 만료시키고 새롭게 변경된 권한을 사용하는 Access Token으로 사용하도록 하기 위해 암호키를 바꾸기로 하였습니다. 다만 여기서 발생하는 문제가 바로 앱의 업데이트 타이밍이었습니다.</p>\n\n<p>개발자라면 다들 잘 아시겠지만, 서버와 앱은 동일한 시점에 개발이 완료되더라도 배포되는 시점이 다를 수 있습니다. 서버는 배포하는 즉시 배포가 되지만 앱은 심사 과정이 필요하고 배포가 되더라도 앱스토어에 배포된 버전이 전파되기까지 1일 이상 소요될 수 있습니다. 그러다 보니 Access Token을 변경하기 위해 키를 변경하게 되면 서버가 배포된 이후부터 앱이 업데이트되기 전까지 사용자가 서비스를 이용할 수 없다는 문제가 생길 수 있습니다. 그래서 저희는 과거 버전의 앱에서도 새롭게 배포된 서버의 인증을 문제없이 사용할 수 있도록 방법을 모색해야 했습니다.</p>\n\n<h3 id=\"jjwt-버전-변경\">JJWT 버전 변경</h3>\n\n<p>한편, 저희는 비밀키를 바꾸는 김에, 과거에 사용하던 서명 알고리즘(HS256)에 비해 보안성이 강화된 서명 알고리즘(PS256)을 변경하기로 합니다. 그러다 보니 JJWT라이브러리 버전을 업그레이드해야 했는데요. Gradle에 아래처럼 동일한 라이브러리를 서로 다른 버전으로 사용하는 경우 패키지 충돌이 발생하여 신규 버전에서 제공하는 함수를 사용할 수 없게 됩니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// 구버전</span>\n<span class=\"nf\">implementation</span><span class=\"p\">(</span><span class=\"s\">\"io.jsonwebtoken:jjwt:0.9.1\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\">// 신규버전</span>\n<span class=\"nf\">implementation</span><span class=\"p\">(</span><span class=\"s\">\"io.jsonwebtoken:jjwt-api:0.12.6\"</span><span class=\"p\">)</span>\n<span class=\"nf\">runtimeOnly</span><span class=\"p\">(</span><span class=\"s\">\"io.jsonwebtoken:jjwt-impl:0.12.6\"</span><span class=\"p\">)</span>\n<span class=\"nf\">runtimeOnly</span><span class=\"p\">(</span><span class=\"s\">\"io.jsonwebtoken:jjwt-jackson:0.12.6\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><img src=\"/images/improve-auth/jjwt-version-conflict.png\" alt=\"jjwt-version-conflict\" /></p>\n\n<p>이러한 문제를 해결하기 위해 저희는 <a href=\"https://jitpack.io/\" target=\"\\_blank\">Jitpack</a> 을 사용하기로 합니다. JitPack은 GitHub에 호스팅된 라이브러리를 쉽게 빌드하고 배포할 수 있게 해주는 Maven/Gradle 용 리포지터리 서비스입니다. GitHub 저장소를 바탕으로 라이브러리를 빌드하므로, 별도의 중앙 저장소(예: Maven Central) 등록 과정을 거치지 않아도 된다는 장점이 있습니다. 그리고 오픈소스 저장소에, 한에 무료로 사용할 수 있다는 점도 장점입니다.</p>\n\n<p>저희는 JJWT 라이브러리를 fork하여 <a href=\"https://github.com/spoqa/jjwt\" target=\"\\_blank\">Spoqa용 JJWT Github 저장소</a> 를 생성하였습니다. 그런 다음 충돌 패키지 충돌이 발생하지 않도록 패키지명을 변경해 주었습니다.</p>\n\n<p><img src=\"/images/improve-auth/changed-package-commit.png\" alt=\"changed-package-commit\" /></p>\n\n<p>그런 다음 Release를 생성해 주면, 아래와 같이 Jitpack에서 조회할 수 있게 됩니다.</p>\n\n<p><img src=\"/images/improve-auth/jitpack.png\" alt=\"jitpack\" /></p>\n\n<p>마지막으로 아래와 같이 Gradle에 의존성을 추가해주면, 패키지명이 변경된 JJWT라이브러리를 사용할 수 있게 됩니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">implementation</span><span class=\"p\">(</span><span class=\"s\">\"com.github.spoqa:jjwt:1.0.2\"</span><span class=\"p\">)</span>\n<span class=\"nf\">implementation</span><span class=\"p\">(</span><span class=\"s\">\"javax.xml.bind:jaxb-api:2.3.1\"</span><span class=\"p\">)</span>\n\n<span class=\"nf\">implementation</span><span class=\"p\">(</span><span class=\"s\">\"io.jsonwebtoken:jjwt-api:0.12.6\"</span><span class=\"p\">)</span>\n<span class=\"nf\">runtimeOnly</span><span class=\"p\">(</span><span class=\"s\">\"io.jsonwebtoken:jjwt-impl:0.12.6\"</span><span class=\"p\">)</span>\n<span class=\"nf\">runtimeOnly</span><span class=\"p\">(</span><span class=\"s\">\"io.jsonwebtoken:jjwt-jackson:0.12.6\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h3 id=\"composite-패턴-vs-tokenmanager\">Composite 패턴 vs TokenManager</h3>\n\n<p>저희는 Jitpack으로 생성한 과거버전의 JJWT를 의존하는 구현체를 아래와 같이 <code class=\"language-plaintext highlighter-rouge\">LegacyJwtProcessor</code>로 변경하고 신규 버전을 사용하는 <code class=\"language-plaintext highlighter-rouge\">JwtProcessor</code>를 새롭게 생성하였습니다. 그런 다음 아래와 같이 인증 로직에 과거 버전의 Access Token과 신규 버전의 Access Token을 모두 수용할 수 있도록 구현하였습니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Component</span>\n<span class=\"kd\">class</span> <span class=\"nc\">JwtAuthenticationProvider</span><span class=\"p\">(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">legacyJwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">LegacyJwtProcessor</span><span class=\"p\">,</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">jwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">JwtProcessor</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">AuthenticationProvider</span> <span class=\"p\">{</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">authenticate</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">:</span> <span class=\"nc\">Authentication</span><span class=\"p\">):</span> <span class=\"nc\">Authentication</span><span class=\"p\">?</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(!</span><span class=\"nf\">supports</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"n\">java</span><span class=\"p\">))</span> <span class=\"k\">return</span> <span class=\"k\">null</span>\n\n        <span class=\"kd\">val</span> <span class=\"py\">principal</span> <span class=\"p\">=</span>\n            <span class=\"k\">try</span> <span class=\"p\">{</span>\n                <span class=\"n\">jwtProcessor</span><span class=\"p\">.</span><span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">.</span><span class=\"n\">principal</span><span class=\"p\">.</span><span class=\"nf\">toString</span><span class=\"p\">())</span>\n            <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"nc\">AuthenticationException</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"n\">legacyJwtProcessor</span><span class=\"p\">.</span><span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">.</span><span class=\"n\">principal</span><span class=\"p\">.</span><span class=\"nf\">toString</span><span class=\"p\">())</span>\n            <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"nc\">JwtUserAuthenticationToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">supports</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">:</span> <span class=\"nc\">Class</span><span class=\"p\">&lt;</span><span class=\"err\">*</span><span class=\"p\">&gt;):</span> <span class=\"nc\">Boolean</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">authentication</span> <span class=\"p\">==</span> <span class=\"nc\">JwtPreAuthenticationToken</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"n\">java</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이렇게 구현하면 앱이 배포되기 전에 서버가 먼저 배포되어도 기존 버전을 사용하는 사용자가 정상적으로 로그인을 유지할 수 있게 됩니다.</p>\n\n<p>한편, 인증 로직을 구현하는 곳 말고도 LegacyJwtProcessor를 사용하는 곳이 다수 존재하였는데요. 그러다 보니 새롭게 만들어진 JwtProcessor로 전환하는 것을 누락할 가능성이 존재하였습니다. 다행히 기능 테스트가 있어 놓친 구현을 바로잡을 순 있었지만, 코드의 응집성 측면에서는 좋은 코드는 아니라 생각하였습니다.</p>\n\n<p>그래서 Composite 패턴을 사용해서 아래와 같이 구현해 볼지 생각을 하였습니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">interface</span> <span class=\"nc\">JwtProcessor</span> <span class=\"p\">{</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">generateToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">:</span> <span class=\"nc\">UserPrincipal</span><span class=\"p\">):</span> <span class=\"nc\">String</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">):</span> <span class=\"nc\">UserPrincipal</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">CompositeJwtProcessor</span><span class=\"p\">(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">newJwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">JwtProcessor</span><span class=\"p\">,</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">legacyJwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">JwtProcessor</span><span class=\"p\">,</span>\n<span class=\"p\">):</span> <span class=\"nc\">JwtProcessor</span> <span class=\"p\">{</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">generateToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">:</span> <span class=\"nc\">UserPrincipal</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 생략...</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">):</span> <span class=\"nc\">UserPrincipal</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"k\">try</span> <span class=\"p\">{</span>\n            <span class=\"n\">jwtProcessor</span><span class=\"p\">.</span><span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"nc\">AuthenticationException</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">legacyJwtProcessor</span><span class=\"p\">.</span><span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">NewJwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">JwtProcessor</span> <span class=\"p\">{</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">generateToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">:</span> <span class=\"nc\">UserPrincipal</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 생략...</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">):</span> <span class=\"nc\">UserPrincipal</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 생략...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"err\">legacy</span><span class=\"nc\">JwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">JwtProcessor</span> <span class=\"p\">{</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">generateToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">:</span> <span class=\"nc\">UserPrincipal</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 생략...</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">):</span> <span class=\"nc\">UserPrincipal</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 생략...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">CompositeJwtProcessor</code>를 이용하면 아래와 같이 <code class=\"language-plaintext highlighter-rouge\">JwtAuthenticationProvider</code>는 더 이상 <code class=\"language-plaintext highlighter-rouge\">legacyJwtProcessor</code>를 알지 않아도 되고 추후 <code class=\"language-plaintext highlighter-rouge\">legacyJwtProcessor</code>가 제거되어도 영향범위는 <code class=\"language-plaintext highlighter-rouge\">CompositeJwtProcessor</code>로 한정되기 때문에 응집도 높은 코드를 유지할 수 있게 됩니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Component</span>\n<span class=\"kd\">class</span> <span class=\"nc\">JwtAuthenticationProvider</span><span class=\"p\">(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">compositeJwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">JwtProcessor</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">AuthenticationProvider</span> <span class=\"p\">{</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">authenticate</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">:</span> <span class=\"nc\">Authentication</span><span class=\"p\">):</span> <span class=\"nc\">Authentication</span><span class=\"p\">?</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(!</span><span class=\"nf\">supports</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"n\">java</span><span class=\"p\">))</span> <span class=\"k\">return</span> <span class=\"k\">null</span>\n\n        <span class=\"kd\">val</span> <span class=\"py\">principal</span> <span class=\"p\">=</span> <span class=\"n\">compositeJwtProcessor</span><span class=\"p\">.</span><span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">.</span><span class=\"n\">principal</span><span class=\"p\">.</span><span class=\"nf\">toString</span><span class=\"p\">())</span>\n\n        <span class=\"k\">return</span> <span class=\"nc\">JwtUserAuthenticationToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    \n    <span class=\"c1\">// 생략...</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>다른 방법으로는 TokenManager라는 상위 수준의 클래스를 만들어 응집도를 높이는 방법도 생각해 보았습니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Service</span>\n<span class=\"kd\">class</span> <span class=\"nc\">TokenManager</span><span class=\"p\">(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">jwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">JwtProcessor</span><span class=\"p\">,</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">legacyJwtProcessor</span><span class=\"p\">:</span> <span class=\"nc\">LegacyJwtProcessor</span><span class=\"p\">,</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">refreshTokenService</span><span class=\"p\">:</span> <span class=\"nc\">RefreshTokenService</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">):</span> <span class=\"nc\">UserPrincipal</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"k\">try</span> <span class=\"p\">{</span>\n            <span class=\"n\">jwtProcessor</span><span class=\"p\">.</span><span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"nc\">AuthenticationException</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">legacyJwtProcessor</span><span class=\"p\">.</span><span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">fun</span> <span class=\"nf\">generateAccessToken</span><span class=\"p\">(</span><span class=\"n\">userPrincipal</span><span class=\"p\">:</span> <span class=\"nc\">UserPrincipal</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 생략...</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">fun</span> <span class=\"nf\">generateRefreshToken</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"p\">:</span> <span class=\"nc\">RefreshToken</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 생략...</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">fun</span> <span class=\"nf\">replaceRefreshToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">:</span> <span class=\"nc\">RefreshTokenUserPrincipal</span><span class=\"p\">):</span> <span class=\"nc\">String</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 생략...</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이렇게 하면 Token을 Composite 패턴을 사용한 것과 같이 하위호환을 지키는 코드와 함께 토큰과 관련된 다른 기능들도 해당 클래스로 모을 수 있어 응집도를 상당히 높일 수 있게 됩니다.</p>\n\n<p>어떤 방식이 더 나은 방식이라고 말씀드리긴 어려울 것 같습니다. 다만, 저희는 LegacyJwtProcessor는 앱 배포 이후에 제거될 클래스이므로 불필요하게 Composite 패턴을 사용하기보다 TokenManager를 생성하여 코드 응집도를 높이는 방법으로 결정하게 되었습니다.</p>\n\n<h3 id=\"spring-security---preauthorize\">Spring Security - PreAuthorize</h3>\n\n<p>저희는 인증과 인가를 위해 Spring Security를 사용하고 있습니다. JWT를 통해 인증된 사용자는 UserPrincipal이라는 인증된 사용자로 변환되고 UserPrinciapl이 가진 authorities를 통해 권한 처리를 하고 있습니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Component</span>\n<span class=\"kd\">class</span> <span class=\"nc\">AccessTokenAuthenticationProvider</span><span class=\"p\">(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">tokenManager</span><span class=\"p\">:</span> <span class=\"nc\">TokenManager</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">AuthenticationProvider</span> <span class=\"p\">{</span>\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">authenticate</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">:</span> <span class=\"nc\">Authentication</span><span class=\"p\">):</span> <span class=\"nc\">Authentication</span><span class=\"p\">?</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(!</span><span class=\"nf\">supports</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"n\">java</span><span class=\"p\">))</span> <span class=\"k\">return</span> <span class=\"k\">null</span>\n\n        <span class=\"kd\">val</span> <span class=\"py\">principal</span> <span class=\"p\">=</span> <span class=\"n\">tokenManager</span><span class=\"p\">.</span><span class=\"nf\">getPrincipal</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">.</span><span class=\"n\">principal</span><span class=\"p\">.</span><span class=\"nf\">toString</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"nc\">AccessTokenAuthenticationToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">supports</span><span class=\"p\">(</span><span class=\"n\">authentication</span><span class=\"p\">:</span> <span class=\"nc\">Class</span><span class=\"p\">&lt;</span><span class=\"err\">*</span><span class=\"p\">&gt;):</span> <span class=\"nc\">Boolean</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">authentication</span> <span class=\"p\">==</span> <span class=\"nc\">AccessTokenPreAuthenticationToken</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">.</span><span class=\"n\">java</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">AccessTokenAuthenticationToken</span><span class=\"p\">(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">principal</span><span class=\"p\">:</span> <span class=\"nc\">UserPrincipal</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">AbstractAuthenticationToken</span><span class=\"p\">(</span><span class=\"n\">principal</span><span class=\"p\">.</span><span class=\"n\">authorities</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nf\">init</span> <span class=\"p\">{</span>\n        <span class=\"k\">super</span><span class=\"p\">.</span><span class=\"nf\">setAuthenticated</span><span class=\"p\">(</span><span class=\"k\">true</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">getPrincipal</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"n\">principal</span>\n\n    <span class=\"k\">override</span> <span class=\"k\">fun</span> <span class=\"nf\">getCredentials</span><span class=\"p\">()</span> <span class=\"p\">=</span> <span class=\"k\">null</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>사용자는 아래와 같이 <code class=\"language-plaintext highlighter-rouge\">@Secured</code>를 통해 권한을 검증받고 API를 호출할 수 있습니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@DgsMutation</span>\n<span class=\"nd\">@Secured</span><span class=\"p\">(</span><span class=\"nc\">STORE_ADMIN</span><span class=\"p\">,</span> <span class=\"nc\">STORE_MANAGER</span><span class=\"p\">,</span> <span class=\"nc\">VENDOR</span><span class=\"p\">)</span>\n<span class=\"k\">fun</span> <span class=\"nf\">createOrderSheet</span><span class=\"p\">(</span>\n    <span class=\"nd\">@InputArgument</span> <span class=\"n\">input</span><span class=\"p\">:</span> <span class=\"nc\">CreateOrderSheetInput</span><span class=\"p\">,</span>\n<span class=\"p\">):</span> <span class=\"nc\">CreateOrderSheet</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 생략...</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p><code class=\"language-plaintext highlighter-rouge\">@Secured</code>는 단순한 권한 Role 기반 접근을 제어하기에 적절합니다. 이전까지 키친보드는 관리자, 매장 사용자, 유통사 사용자로 명확하게 Role이 나뉘어져 있었기 때문에 <code class=\"language-plaintext highlighter-rouge\">@Secured</code>는 요구사항을 충분히 충족하면서 단순하게 구현할 방법이었습니다.</p>\n\n<p>하지만 새로운 요구사항이 추가되면서 매장 사용자는 매장 관리자, 매장 직원으로 권한이 분리되게 되었는데요. 이에 따라 매장 사용자 모두 접근을 할 수 있는 API에는 아래와 같이 <code class=\"language-plaintext highlighter-rouge\">@Secured(STORE_ADMIN, STORE_MANAGER)</code> 표현해야 하는 불편함이 있게 됩니다. 거기다 만약 <code class=\"language-plaintext highlighter-rouge\">STORE_INTERN</code>이 추가된다면 매장 사용자 권한을 가져야 하는 API를 모두 찾아서 바꿔줘야 하니 상당히 번거로운 작업이 될 것이고 자칫 권한 변경을 누락할 수 있는 위험성 또한 내포하고 있습니다.</p>\n\n<p>이와 같은 문제를 해소하기 위해 Spring Security에서는 <code class=\"language-plaintext highlighter-rouge\">@PreAuthorize</code>를 이용하여 유연하게 권한을 체크하는 기능을 제공합니다. 그래서 저희는 아래와 같이 매장 사용자 여부를 확인하는 서비스 함수를 만들어 <a href=\"https://docs.spring.io/spring-framework/reference/core/expressions.html\" target=\"\\_blank\">SpEL</a> 을 이용해 권한을 체크하도록 함으로써 권한을 일일이 나열하지 않고 새로운 권한이 생기더라도 유연하게 대처할 수 있도록 하였습니다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@PostMapping</span><span class=\"p\">(</span><span class=\"s\">\"/replace-store\"</span><span class=\"p\">)</span>\n<span class=\"nd\">@PreAuthorize</span><span class=\"p\">(</span><span class=\"s\">\"@authorizationExpressionHelper.isManager()\"</span><span class=\"p\">)</span>\n<span class=\"k\">fun</span> <span class=\"nf\">replaceStore</span><span class=\"p\">(</span><span class=\"nd\">@RequestBody</span> <span class=\"n\">request</span><span class=\"p\">:</span> <span class=\"nc\">ReplaceStoreRequest</span><span class=\"p\">):</span> <span class=\"nc\">ReplaceStoreResponse</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 생략...</span>\n<span class=\"p\">}</span>\n\n<span class=\"nd\">@Service</span>\n<span class=\"kd\">class</span> <span class=\"nc\">AuthorizationExpressionHelper</span> <span class=\"p\">{</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">isManager</span><span class=\"p\">():</span> <span class=\"nc\">Boolean</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"nc\">PrincipalProvider</span><span class=\"p\">.</span><span class=\"n\">userPrincipal</span><span class=\"p\">.</span><span class=\"n\">isManager</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<h1 id=\"마무리\">마무리</h1>\n\n<p>지금까지 저희가 권한 기능을 추가하기 위해 인증 로직을 어떻게 개선하였고 개선하면서 겪었던 이슈들을 공유해 보았습니다. 단순히 권한을 추가해 달라는 요구사항에서 시작되었지만, 그동안 우리가 가지고 있던 기술 부채도 해결함과 동시에 기술적인 여러 고민을 할 수 있어서 개인적으로 배운 게 많은 프로젝트였습니다.</p>\n\n<p>모쪼록 인증 기능 구현에 관심이 있으시거나 예정인 분들께 도움이 되었으면 합니다.</p>\n\n<p>긴 글 읽어주셔서 감사합니다.</p>\n",
        "contentSnippet": "안녕하세요. 스포카 백엔드팀 프로그래머 남경호입니다.\n개발자라면 누구나 오랫동안 미뤄두었던 과제가 하나쯤 있을 것입니다. 업무의 우선순위가 낮거나 긴급한 과제들에 밀려 지속적으로 백로그에 쌓여 있던 작업 말이죠. 최근 저희팀에서 왜 오랜 시간 미뤄두었던 인증 방식 개선 작업을 진행하게 되었는지, 그 과정에서 얻은 여러 경험을 여러분께 공유하고자 합니다.\n배경\n스포카 블로그를 꾸준히 보신 분이라면, 서버 언어 전환 이야기 글에서 JWT 관련 문제를 언급하며 향후 개선할 예정이라고 소개했던 내용을 기억하실 겁니다.\n\n약 3년이 흐른 지금, 드디어 저희가 인증 방식 개선을 진행하게 된 가장 큰 이유는 바로 키친보드 매장 앱에 권한관리 기능이 추가되었기 때문입니다.\n\n키친보드 매장 앱은 식자재 주문부터 거래대금 결제까지 다양한 기능을 제공합니다. 이 과정에서 사장님은 직원이 매장의 월 거래 내역 등 민감한 정보를 조회하지 못하도록 권한을 제어할 필요가 생겼는데요. 기존 JWT 인증은 무 상태(stateless) 특성상 권한 변경 시 즉각적으로 클라이언트의 인증 상태를 관리할 수 없다는 한계가 있었습니다.\n그래서 저희는 권한 기능을 추가하기에 앞서 인증 방식을 먼저 개선하기로 하였습니다.\n인증 방식 개선 방법\nRefresh Token 도입\n앞서 이야기했듯이, JWT 기반의 인증 방식은 서버가 사용자의 상태를 저장하지 않습니다. 덕분에 서버의 확장성이 높고 서버 부하를 줄일 수 있다는 장점이 있지만, 한번 발급된 토큰을 서버에서 직접 제어할 수 없다는 단점이 있습니다.\n이러한 특성은 보안 문제로 연결될 수 있는데요. 만약 인증을 통해 발급받은 토큰이 탈취된다면, 서버가 이 토큰을 제어할 수 없으므로 악의적인 사용자는 손쉽게 탈취된 토큰을 이용하여 정상 사용자처럼 서비스를 이용할 수 있게 됩니다. 보통 이러한 보안 위험을 방지하기 위해 Access Token의 만료 시간을 짧게 설정하지만, 이 경우 사용자가 자주 로그인해야 하는 번거로움이 발생하게 됩니다.\n이와 같은 문제를 해결할 수 있는 대표적인 방법의 하나가 바로 Refresh Token 의 도입입니다. Refresh Token은 Access Token과 달리 서버가 상태를 관리하는 토큰으로, Access Token을 갱신하는 데 사용됩니다. 앞서 말씀드린 대로, Access Token의 탈취 위험을 낮추기 위해 Access Token의 만료 시간을 짧게 설정하는 것이 좋은데요. 이때 Refresh Token을 활용하면 사용자가 Access Token의 만료 시점마다 다시 로그인하지 않아도 편리하게 새로운 Access Token을 발급받을 수 있습니다.\n다음 그림에서 Access Token과 Refresh Token의 인증 과정을 자세히 확인할 수 있습니다.\n\n사용자가 로그인을 요청하면 서버는 Access Token과 Refresh Token을 발급합니다.\n사용자는 발급받은 유효한 Access Token을 이용해 API를 호출하고, 서버는 요청된 데이터를 정상적으로 응답합니다.\n사용자가 만료된 Access Token을 가지고 API 요청을 하면 서버는 401 인증 에러를 반환합니다. 이때 클라이언트는 Refresh Token을 사용하여 새로운 Access Token을 발급받고, 갱신된 Access Token으로 API를 재요청하여 정상적으로 데이터를 받을 수 있습니다.\n하지만 만약 사용자의 Refresh Token까지 만료된 상태라면, 서버는 최종적으로 401 인증 에러를 반환하여 사용자의 다시 로그인을 요구합니다.\n위 과정을 통해 일반적으로 Access Token의 만료 시간을 짧게 설정하여 Access Token의 탈취 위험을 최소화하고, Refresh Token을 통해 사용자 편의성 또한 유지할 수 있습니다.\n아래 그림을 통해 Access Token의 탈취로 인한 공격 시나리오로 Access Token의 만료시간이 짧으면 짧을수록 보안 위험도가 감소하게 됩니다.\n\n이처럼 Refresh Token을 적절히 도입하고 관리하면 토큰 탈취로 인한 보안 위험을 효과적으로 감소시킬 뿐만 아니라 사용자가 매번 로그인해야 하는 문제도 해결할 수 있으므로 사용성도 함께 챙길 수 있게 됩니다.\nRefresh Token Rotation\n한편, Access Token에 대한 탈취 위험은 Refresh Token도 동일한 것 아닌가? 라는 질문을 할 수 있을 것 같습니다. 맞습니다. Refresh Token이 탈취당하면 Access Token을 갱신할 수 있고 갱신된 Access Token을 통해 악의적 사용자는 손쉽게 탈취한 사용자인 척 서비스를 이용할 수 있게 됩니다.\n이러한 문제를 해결하기 위해 우리는 Refresh Token Rotation 을 도입하기로 합니다. Refresh Token Rotation은 아래와 같이 Refresh Token을 이용해 Access Token을 갱신할 때 Refresh Token도 함께 갱신하여 Refresh Token 탈취 시 발생할 수 있는 위험을 회피합니다.\n\n이슈\n클라이언트의 네트워크 이슈\n앞서 저희는 Refresh Token Rotation을 이용하여 Refresh Token 탈취에 대한 위험성을 회피하고자 하였습니다. 이렇게 하면 Refresh Token을 이용하여 Access Token을 갱신 요청할 때 요청한 Refresh Token도 새롭게 발급되어 더 이상 Refresh Token을 사용할 수 없게 되는데요. 보안 수준은 강화되었지만, 클라이언트 개발자분들이 한가지 우려 점을 제기해 주셨습니다.\n모바일 기기 특성상 지하실이나 엘리베이터안과같이 네트워크가 원활하지 않은 곳에서 사용할 가능성이 존재하는데요. 이때 아래 그림과 같이 첫 번째 요청한 Refresh Token을 재요청하는 경우가 발생할 수 있습니다. 하지만 Refresh Token을 매번 갱신하기 때문에 동일한 Refresh Token으로 여러번 Access Token을 갱신요청하게 된다면 두번째 요청부터는  인증 에러가 발생하게 됩니다.\n\n그래서 저희는 Token Family 방식 을 사용하여 요청 시마다 기존 Refresh Token을 지우지 않고 과거 토큰을 저장해 두었다가 첫 번째 요청으로 새롭게 발급된 토큰 또는 모종의 이유로 인해 갱신하지 못한 기존 토큰으로 토큰 갱신 요청을 할 수 있도록 구현하여 Refresh Token을 재사용할 수 있도록 하였습니다.\n\n이로써 클라이언트는 네트워크 이슈가 발생해도 Refresh Token을 갱신할 수 있게 되었습니다.\n\n인증 토큰의 하위 호환\n한편, 저희는 JWT를 다루는 라이브러리로 JJWT 를 사용하고 있습니다. 앞서 JWT는 상태를 가지지 않기 때문에 사용자가 사용하는 Access Token을 서버에서 제어할 수 없다고 말씀드렸었는데요. 그래서 Access Token의 만료 시간을 두어 새롭게 Access Token을 발급받도록 하여 우회적으로 제어할 수 있습니다. Access Token을 만료시키는 또 다른 방법은, 해당 토큰을 생성할 때 사용된 암호키를 변경하는 것입니다. 저희는 그래서 클라이언트에서 사용하는 Access Token을 만료시키고 새롭게 변경된 권한을 사용하는 Access Token으로 사용하도록 하기 위해 암호키를 바꾸기로 하였습니다. 다만 여기서 발생하는 문제가 바로 앱의 업데이트 타이밍이었습니다.\n개발자라면 다들 잘 아시겠지만, 서버와 앱은 동일한 시점에 개발이 완료되더라도 배포되는 시점이 다를 수 있습니다. 서버는 배포하는 즉시 배포가 되지만 앱은 심사 과정이 필요하고 배포가 되더라도 앱스토어에 배포된 버전이 전파되기까지 1일 이상 소요될 수 있습니다. 그러다 보니 Access Token을 변경하기 위해 키를 변경하게 되면 서버가 배포된 이후부터 앱이 업데이트되기 전까지 사용자가 서비스를 이용할 수 없다는 문제가 생길 수 있습니다. 그래서 저희는 과거 버전의 앱에서도 새롭게 배포된 서버의 인증을 문제없이 사용할 수 있도록 방법을 모색해야 했습니다.\nJJWT 버전 변경\n한편, 저희는 비밀키를 바꾸는 김에, 과거에 사용하던 서명 알고리즘(HS256)에 비해 보안성이 강화된 서명 알고리즘(PS256)을 변경하기로 합니다. 그러다 보니 JJWT라이브러리 버전을 업그레이드해야 했는데요. Gradle에 아래처럼 동일한 라이브러리를 서로 다른 버전으로 사용하는 경우 패키지 충돌이 발생하여 신규 버전에서 제공하는 함수를 사용할 수 없게 됩니다.\n\n// 구버전\nimplementation(\"io.jsonwebtoken:jjwt:0.9.1\")\n\n// 신규버전\nimplementation(\"io.jsonwebtoken:jjwt-api:0.12.6\")\nruntimeOnly(\"io.jsonwebtoken:jjwt-impl:0.12.6\")\nruntimeOnly(\"io.jsonwebtoken:jjwt-jackson:0.12.6\")\n\n\n\n이러한 문제를 해결하기 위해 저희는 Jitpack 을 사용하기로 합니다. JitPack은 GitHub에 호스팅된 라이브러리를 쉽게 빌드하고 배포할 수 있게 해주는 Maven/Gradle 용 리포지터리 서비스입니다. GitHub 저장소를 바탕으로 라이브러리를 빌드하므로, 별도의 중앙 저장소(예: Maven Central) 등록 과정을 거치지 않아도 된다는 장점이 있습니다. 그리고 오픈소스 저장소에, 한에 무료로 사용할 수 있다는 점도 장점입니다.\n저희는 JJWT 라이브러리를 fork하여 Spoqa용 JJWT Github 저장소 를 생성하였습니다. 그런 다음 충돌 패키지 충돌이 발생하지 않도록 패키지명을 변경해 주었습니다.\n\n그런 다음 Release를 생성해 주면, 아래와 같이 Jitpack에서 조회할 수 있게 됩니다.\n\n마지막으로 아래와 같이 Gradle에 의존성을 추가해주면, 패키지명이 변경된 JJWT라이브러리를 사용할 수 있게 됩니다.\n\nimplementation(\"com.github.spoqa:jjwt:1.0.2\")\nimplementation(\"javax.xml.bind:jaxb-api:2.3.1\")\n\nimplementation(\"io.jsonwebtoken:jjwt-api:0.12.6\")\nruntimeOnly(\"io.jsonwebtoken:jjwt-impl:0.12.6\")\nruntimeOnly(\"io.jsonwebtoken:jjwt-jackson:0.12.6\")\n\n\nComposite 패턴 vs TokenManager\n저희는 Jitpack으로 생성한 과거버전의 JJWT를 의존하는 구현체를 아래와 같이 LegacyJwtProcessor로 변경하고 신규 버전을 사용하는 JwtProcessor를 새롭게 생성하였습니다. 그런 다음 아래와 같이 인증 로직에 과거 버전의 Access Token과 신규 버전의 Access Token을 모두 수용할 수 있도록 구현하였습니다.\n\n@Component\nclass JwtAuthenticationProvider(\n    private val legacyJwtProcessor: LegacyJwtProcessor,\n    private val jwtProcessor: JwtProcessor,\n) : AuthenticationProvider {\n    override fun authenticate(authentication: Authentication): Authentication? {\n        if (!supports(authentication::class.java)) return null\n\n        val principal =\n            try {\n                jwtProcessor.getPrincipal(authentication.principal.toString())\n            } catch (e: AuthenticationException) {\n                legacyJwtProcessor.getPrincipal(authentication.principal.toString())\n            }\n\n        return JwtUserAuthenticationToken(principal)\n    }\n\n    override fun supports(authentication: Class<*>): Boolean {\n        return authentication == JwtPreAuthenticationToken::class.java\n    }\n}\n\n\n이렇게 구현하면 앱이 배포되기 전에 서버가 먼저 배포되어도 기존 버전을 사용하는 사용자가 정상적으로 로그인을 유지할 수 있게 됩니다.\n한편, 인증 로직을 구현하는 곳 말고도 LegacyJwtProcessor를 사용하는 곳이 다수 존재하였는데요. 그러다 보니 새롭게 만들어진 JwtProcessor로 전환하는 것을 누락할 가능성이 존재하였습니다. 다행히 기능 테스트가 있어 놓친 구현을 바로잡을 순 있었지만, 코드의 응집성 측면에서는 좋은 코드는 아니라 생각하였습니다.\n그래서 Composite 패턴을 사용해서 아래와 같이 구현해 볼지 생각을 하였습니다.\n\ninterface JwtProcessor {\n    fun generateToken(principal: UserPrincipal): String\n    fun getPrincipal(token: String): UserPrincipal\n}\n\nclass CompositeJwtProcessor(\n    private val newJwtProcessor: JwtProcessor,\n    private val legacyJwtProcessor: JwtProcessor,\n): JwtProcessor {\n    fun generateToken(principal: UserPrincipal): String {\n        // 생략...\n    }\n    fun getPrincipal(token: String): UserPrincipal {\n        return try {\n            jwtProcessor.getPrincipal(token)\n        } catch (e: AuthenticationException) {\n            legacyJwtProcessor.getPrincipal(token)\n        }\n    }\n}\n\nclass NewJwtProcessor: JwtProcessor {\n    fun generateToken(principal: UserPrincipal): String {\n        // 생략...\n    }\n    fun getPrincipal(token: String): UserPrincipal {\n        // 생략...\n    }\n}\n\nclass legacyJwtProcessor: JwtProcessor {\n    fun generateToken(principal: UserPrincipal): String {\n        // 생략...\n    }\n    fun getPrincipal(token: String): UserPrincipal {\n        // 생략...\n    }\n}\n\n\nCompositeJwtProcessor를 이용하면 아래와 같이 JwtAuthenticationProvider는 더 이상 legacyJwtProcessor를 알지 않아도 되고 추후 legacyJwtProcessor가 제거되어도 영향범위는 CompositeJwtProcessor로 한정되기 때문에 응집도 높은 코드를 유지할 수 있게 됩니다.\n\n@Component\nclass JwtAuthenticationProvider(\n    private val compositeJwtProcessor: JwtProcessor,\n) : AuthenticationProvider {\n    override fun authenticate(authentication: Authentication): Authentication? {\n        if (!supports(authentication::class.java)) return null\n\n        val principal = compositeJwtProcessor.getPrincipal(authentication.principal.toString())\n\n        return JwtUserAuthenticationToken(principal)\n    }\n    \n    // 생략...\n}\n\n\n다른 방법으로는 TokenManager라는 상위 수준의 클래스를 만들어 응집도를 높이는 방법도 생각해 보았습니다.\n\n@Service\nclass TokenManager(\n    private val jwtProcessor: JwtProcessor,\n    private val legacyJwtProcessor: LegacyJwtProcessor,\n    private val refreshTokenService: RefreshTokenService,\n) {\n    fun getPrincipal(token: String): UserPrincipal {\n        return try {\n            jwtProcessor.getPrincipal(token)\n        } catch (e: AuthenticationException) {\n            legacyJwtProcessor.getPrincipal(token)\n        }\n    }\n\n    fun generateAccessToken(userPrincipal: UserPrincipal): String {\n        // 생략...\n    }\n\n    fun generateRefreshToken(entity: RefreshToken): String {\n        // 생략...\n    }\n\n    fun replaceRefreshToken(principal: RefreshTokenUserPrincipal): String {\n        // 생략...\n    }\n}\n\n\n이렇게 하면 Token을 Composite 패턴을 사용한 것과 같이 하위호환을 지키는 코드와 함께 토큰과 관련된 다른 기능들도 해당 클래스로 모을 수 있어 응집도를 상당히 높일 수 있게 됩니다.\n어떤 방식이 더 나은 방식이라고 말씀드리긴 어려울 것 같습니다. 다만, 저희는 LegacyJwtProcessor는 앱 배포 이후에 제거될 클래스이므로 불필요하게 Composite 패턴을 사용하기보다 TokenManager를 생성하여 코드 응집도를 높이는 방법으로 결정하게 되었습니다.\nSpring Security - PreAuthorize\n저희는 인증과 인가를 위해 Spring Security를 사용하고 있습니다. JWT를 통해 인증된 사용자는 UserPrincipal이라는 인증된 사용자로 변환되고 UserPrinciapl이 가진 authorities를 통해 권한 처리를 하고 있습니다.\n\n@Component\nclass AccessTokenAuthenticationProvider(\n    private val tokenManager: TokenManager,\n) : AuthenticationProvider {\n    override fun authenticate(authentication: Authentication): Authentication? {\n        if (!supports(authentication::class.java)) return null\n\n        val principal = tokenManager.getPrincipal(authentication.principal.toString())\n        return AccessTokenAuthenticationToken(principal)\n    }\n\n    override fun supports(authentication: Class<*>): Boolean {\n        return authentication == AccessTokenPreAuthenticationToken::class.java\n    }\n}\n\nclass AccessTokenAuthenticationToken(\n    private val principal: UserPrincipal,\n) : AbstractAuthenticationToken(principal.authorities) {\n    init {\n        super.setAuthenticated(true)\n    }\n\n    override fun getPrincipal() = principal\n\n    override fun getCredentials() = null\n}\n\n\n사용자는 아래와 같이 @Secured를 통해 권한을 검증받고 API를 호출할 수 있습니다.\n\n@DgsMutation\n@Secured(STORE_ADMIN, STORE_MANAGER, VENDOR)\nfun createOrderSheet(\n    @InputArgument input: CreateOrderSheetInput,\n): CreateOrderSheet {\n    // 생략...\n}\n\n\n@Secured는 단순한 권한 Role 기반 접근을 제어하기에 적절합니다. 이전까지 키친보드는 관리자, 매장 사용자, 유통사 사용자로 명확하게 Role이 나뉘어져 있었기 때문에 @Secured는 요구사항을 충분히 충족하면서 단순하게 구현할 방법이었습니다.\n하지만 새로운 요구사항이 추가되면서 매장 사용자는 매장 관리자, 매장 직원으로 권한이 분리되게 되었는데요. 이에 따라 매장 사용자 모두 접근을 할 수 있는 API에는 아래와 같이 @Secured(STORE_ADMIN, STORE_MANAGER) 표현해야 하는 불편함이 있게 됩니다. 거기다 만약 STORE_INTERN이 추가된다면 매장 사용자 권한을 가져야 하는 API를 모두 찾아서 바꿔줘야 하니 상당히 번거로운 작업이 될 것이고 자칫 권한 변경을 누락할 수 있는 위험성 또한 내포하고 있습니다.\n이와 같은 문제를 해소하기 위해 Spring Security에서는 @PreAuthorize를 이용하여 유연하게 권한을 체크하는 기능을 제공합니다. 그래서 저희는 아래와 같이 매장 사용자 여부를 확인하는 서비스 함수를 만들어 SpEL 을 이용해 권한을 체크하도록 함으로써 권한을 일일이 나열하지 않고 새로운 권한이 생기더라도 유연하게 대처할 수 있도록 하였습니다.\n\n@PostMapping(\"/replace-store\")\n@PreAuthorize(\"@authorizationExpressionHelper.isManager()\")\nfun replaceStore(@RequestBody request: ReplaceStoreRequest): ReplaceStoreResponse {\n    // 생략...\n}\n\n@Service\nclass AuthorizationExpressionHelper {\n    fun isManager(): Boolean {\n        return PrincipalProvider.userPrincipal.isManager\n    }\n}\n\n\n마무리\n지금까지 저희가 권한 기능을 추가하기 위해 인증 로직을 어떻게 개선하였고 개선하면서 겪었던 이슈들을 공유해 보았습니다. 단순히 권한을 추가해 달라는 요구사항에서 시작되었지만, 그동안 우리가 가지고 있던 기술 부채도 해결함과 동시에 기술적인 여러 고민을 할 수 있어서 개인적으로 배운 게 많은 프로젝트였습니다.\n모쪼록 인증 기능 구현에 관심이 있으시거나 예정인 분들께 도움이 되었으면 합니다.\n긴 글 읽어주셔서 감사합니다.",
        "id": "https://spoqa.github.io/2025/04/18/improve-auth.html",
        "isoDate": "2025-04-18T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "미친 사람들과 같이 일하기",
        "link": "https://www.thestartupbible.com/2025/04/working-with-crazy-people.html",
        "pubDate": "Sun, 20 Apr 2025 21:41:00 +0000",
        "content:encodedSnippet": "미친 사람들. 이게 내가 요새 우리 투자사 창업가들과 만날 때마다 내 머릿속에 떠오르는 단어다.\n우리가 투자한 창업가들은 본인들의 사업이 잘되든, 잘 안되든, 내가 지금까지 만난 모든 직장인 중 일 잘하는 순위를 매겨보면 상위 1%에 들어가는 분들이다. 일을 좀 하는 분들이 아니라, 오지게 잘하는 분들이고, 남이 만들어 놓은 회사에서 직장인 생활을 하면 날아다닐 정도로 야무지게, 그리고 진취적으로 일하고, 어떻게 해서든지 결과를 만드는 그릿이 있는 분들이다. 아마도 이들이 대기업에 취직한다면, 대부분 초고속 승진할 수 있는 잠재력이 있는 분들이다.\n그런데, 이렇게 똑똑하고 일 잘하는 사람들이 그냥 직장 생활을 하면 아주 잘 살 텐데, 굳이 그 누구도 강요하지 않은 힘든 창업의 길을 택한 걸 보면 정말로 미친 사람들인 것 같다. 솔직히 미치지 않았다면 이 진흙탕에 스스로 들어가서, 나오지도 못하면서 수년 동안 뒹굴지 못할 것이다. 어쨌든 내가 봤을 땐, 머리가 돌지 않고선, 이들이 선택한 ‘남이 덜 다닌 길’로 절대로 안 갈 것인데, 우리는 이미 280명이 넘는 이런 미친 사람들에게 투자했다니, 이것도 미친 짓이긴 하다.\n작년부터 올해 내내 너무 힘들어하는 창업가분들과 매일 만나고 있다. 어떤 분들은 우리가 투자한 지 1년이 안 됐지만, 어떤 분들은 우리가 옆에서 10년 이상 진흙탕에서 구르는 걸 보고 있는 분들이다. 항상 돈 없고, 항상 사람 없고, 항상 모든 게 쪼들리는 스타트업의 대표로 10년 동안 살아간다는 건 어떤 느낌일까? 내 앞의 대표님은 어떤 생각을 하고 계실까? 그들의 가족은 뭐라고 생각할까? 내가 이분들과 미팅하면 실시간으로 내 머릿속에서 계속 떠오르는 몇 가지 공통된 질문들이다.\n어떤 분들은 너무 힘들어서 죽을 것 같다고 하고, 어떤 분들은 내 앞에서 펑펑 울기도 한다. 나는 감정이 좀 메마른 인간이지만, 이런 분들을 보면 같이 펑펑 울어 주고 싶을 정도로 안쓰럽다. 그리고 빈말이 아니라 정말로 이들에게 그렇게 힘들면 그만하라고 한다. 우리가 투자한 회사의 대표에게 사업 그만하라는 말은 투자자로서는 아쉽지만, 같은 인간으로서는 최선을 다해서 인생을 살고 있는 분들에게 보여줄 수 있는 최소한의 예의라고 생각한다.\n그런데 참 신기한 건, 그렇게 힘들어하는 분들에게 그만하라고 해도 대부분 그 힘든 사업을 계속한다. 계속 한다고 잘 되는 것도 아니다. 오히려 더 힘든 것 같은데도 계속한다. 죽을 만큼 힘들어서 매일 포기하고 싶지만, 반대로 죽을 만큼 재미있어서 계속하고 싶다고 말하는데, 이런 말을 나는 들을 때마다 이분들이 미친 사람인 건 확실하고, 여기에다가 변태가 아닐까 하는 의심도 한다.\n하지만, 나는 이 미친 인간들을 너무 좋아한다. 이런 분들과 항상 같이 일하고, 힘들게 사업하는 걸 가까운 곳에서 보고, 조금이나마 도움이 될 수 있는 VC라는 직업은 나에겐 세상에서 가장 큰 특권이자 특혜라고 생각한다. 누가 보면 하찮은 사업이지만, 바퀴벌레같이 절대로 죽지 않고, 스스로 뭔가를 해보겠다는 시도를 하는, 이렇게 열심히 사는 사람들이 나는 정말 좋다. 원래 내 성향이 그냥 뭐든지 열심히 하는 사람들을 좋아했는데 – 나도 그런 편이다 – 초기 투자를 하면서 이런 사람들을 좋아하는 정도가 아니라 존경하고 사랑하게 됐다. 열심히 한다는 게 이렇게 글로 쓰면 별거 아닌 것 같지만, 이 세상에서 우리 창업가들만큼 열심히 사는 사람이 그렇게 많진 않다.\n이번 주도 이런 미친 사람들과의 미팅으로 일정이 빡빡하다. 솔직히 이렇게 힘들어하는 분들과 만나는 게 나도 육체적, 심리적으로 기가 많이 빨려서 힘들지만, 동시에 너무너무 즐겁다. 하시는 사업이 모두 다 잘 되길 바라지만, 이 중 대부분 망할 것이고, 실은 본인들도 그걸 알고 있다. 그런데도 편안한 길을 버리고 남이 덜 다닌 진흙탕과 가시밭을 맨발로 걸어 다니면서 아프지만 너무 즐겁다는 이 미친 인간들을 어떻게 안 좋아할 수 있을까?\n이 글을 다시 읽어보니 나도 이제 미친놈이 다 된 것 같다. 오늘도 모두 파이팅.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/04/working-with-crazy-people.html#respond",
        "content": "미친 사람들. 이게 내가 요새 우리 투자사 창업가들과 만날 때마다 내 머릿속에 떠오르는 단어다. 우리가 투자한 창업가들은 본인들의 사업이 잘되든, 잘 안되든, 내가 지금까지 만난 모든 직장인 중 일 잘하는 순위를 매겨보면 상위 1%에 들어가는 분들이다. 일을 좀 하는 분들이 아니라, 오지게 잘하는 분들이고, 남이 만들어 놓은 회사에서 직장인 생활을 하면 날아다닐 정도로 야무지게, 그리고(...)",
        "contentSnippet": "미친 사람들. 이게 내가 요새 우리 투자사 창업가들과 만날 때마다 내 머릿속에 떠오르는 단어다. 우리가 투자한 창업가들은 본인들의 사업이 잘되든, 잘 안되든, 내가 지금까지 만난 모든 직장인 중 일 잘하는 순위를 매겨보면 상위 1%에 들어가는 분들이다. 일을 좀 하는 분들이 아니라, 오지게 잘하는 분들이고, 남이 만들어 놓은 회사에서 직장인 생활을 하면 날아다닐 정도로 야무지게, 그리고(...)",
        "guid": "https://www.thestartupbible.com/?p=9431",
        "categories": [
          "Uncategorized",
          "failure",
          "FoundersAtWork",
          "hustle",
          "korea",
          "people",
          "Strong"
        ],
        "isoDate": "2025-04-20T21:41:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "돈 버는 습관",
        "link": "https://www.thestartupbible.com/2025/04/profit-making-as-a-habit.html",
        "pubDate": "Wed, 16 Apr 2025 21:26:00 +0000",
        "content:encodedSnippet": "얼마 전에 우리의 오래된 투자사의 이사회 미팅에 참석했다. 아주 힘든 사업을 하고 있는데, 10년 전 창업할 땐, 창업가들도 이렇게 힘든 사업인 줄 몰랐고, 투자자들도 이렇게 힘든 사업인 줄 몰랐다. 그동안 실수도 많이 했고, 돈도 많이 까먹으면서 개고생했는데, 이제 회사가 어느 정도 안정적인 운영 방법을 찾았고, 그동안 마이너스 나는 사업을 하다가 작년부터 손익분기점을 넘으면서 흑자를 만들고 있다. 나도 이런 창업가들과 오랫동안 같이 일하다 보면 정말 많은 것을 느끼고 배운다. 사업에 대해서도 많이 배우지만, 실제론 인생에 대해서 정말 많이 배운다. 이런 힘든 사업을 무에서 시작해서 돈을 버는 과정을 옆에서 보다 보면, 가끔은 제삼자인 내가 토할 정도로 힘든 사업을 이분들은 어떻게 저렇게 버티면서 묵묵히 앞으로 나갈까,,,라는 존경심이 항상 생긴다. 어쨌든, 창업가 예찬은 다른 포스팅을 통해서 따로 하겠다.\n같은 이사회 멤버인 다른 투자자분이 이 회사가 드디어 돈을 벌기 시작한 것을 보고, “흑자를 내는 것도 습관입니다. 앞으로 계속 이 습관을 유지하세요.”라는 말씀을 했는데, 나도 이 말에 너무 격하게 공감했다. 사람은 습관의 동물이다. 일주일, 한 달, 일 년, 십 년의 반복을 통해서 만든 습관은 생활을 변하게 하고, 결국엔 인생을 바꿔놓는다. 습관을 만드는 것도 어렵고, 이후에 유지하는 것도 쉽지 않지만, 내 경험에 의하면 만드는 게 더 어렵다. 일단 한번 잘 만들어 놓으면, 몸이 기억하기 때문에 언제든지 이 습관을 불러 올 수 있다.\n회사가 돈 버는 것도 마찬가지다. 돈 버는 습관을 만드는 건 정말 어렵다. 하지만, 쓸데없는 짓 하지 않고, 거창한 스타트업 놀이하지 말고, 겉만 번지르르한 사업을 하지 않고, 그냥 매일, 일주일, 한 달, 일 년, 십 년 동안 어떻게 해서든지 돈을 벌기 위해서 노력하다 보면 돈 버는 게 습관화되고, 흑자를 내는 것도 습관이 된다. 한 번 만든 흑자는 두 번의 흑자를 만들고, 이는 평생의 흑자로 이어질 수 있는, 창업가들의 인생과 회사의 미래를 바꾸는 계기가 될 수 있다.\n얼마 전에 ‘슈퍼 마리오 효과‘라는 글을 썼는데, 돈을 버는 것도 이와 비슷한 맥락에서 생각해 볼 수 있다. 돈을 벌기 위해 수많은 시도를 해야 하고, 이를 계속 반복하다 보면, 실수를 많이 할 것이다. 실수하면, 우리 몸은 이 실수를 고치기 위해서 노력한다. 이 과정을 계속 반복하다 보면, 그리고 운이 좀 따른다면, 돈 버는 사업이 만들어지고, 이를 또한 계속 반복하다 보면 흑자가 만들어진다. 한 번 온몸으로 경험한 흑자 만드는 방법은 몸에 습관처럼 남기 때문에, 앞으로 이를 계속 반복할 가능성이 커진다.\n이는 마치 운동선수의 우승과 비슷하다. 이겨본 놈이 계속 이길 수 있다는 말을 우린 자주 하는데, 시합에서 한 번 이긴 선수는 승리의 자신감이 생기는데, 이 자신감은 뇌 일부분을 자극하고, 이 부분이 자극받으면 반복적으로 우승할 수 있다.\n흑자를 내는 것도 습관이다. 스타트업 놀이 말고, 돈 버는 걸 습관으로 만들어라.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/04/profit-making-as-a-habit.html#respond",
        "content": "얼마 전에 우리의 오래된 투자사의 이사회 미팅에 참석했다. 아주 힘든 사업을 하고 있는데, 10년 전 창업할 땐, 창업가들도 이렇게 힘든 사업인 줄 몰랐고, 투자자들도 이렇게 힘든 사업인 줄 몰랐다. 그동안 실수도 많이 했고, 돈도 많이 까먹으면서 개고생했는데, 이제 회사가 어느 정도 안정적인 운영 방법을 찾았고, 그동안 마이너스 나는 사업을 하다가 작년부터 손익분기점을 넘으면서 흑자를 만들고(...)",
        "contentSnippet": "얼마 전에 우리의 오래된 투자사의 이사회 미팅에 참석했다. 아주 힘든 사업을 하고 있는데, 10년 전 창업할 땐, 창업가들도 이렇게 힘든 사업인 줄 몰랐고, 투자자들도 이렇게 힘든 사업인 줄 몰랐다. 그동안 실수도 많이 했고, 돈도 많이 까먹으면서 개고생했는데, 이제 회사가 어느 정도 안정적인 운영 방법을 찾았고, 그동안 마이너스 나는 사업을 하다가 작년부터 손익분기점을 넘으면서 흑자를 만들고(...)",
        "guid": "https://www.thestartupbible.com/?p=9428",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "hustle",
          "inspiring",
          "sports",
          "Strong"
        ],
        "isoDate": "2025-04-16T21:26:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "토스, 전자문서 발급으로 종이 2억 2천만 장 절감",
        "link": "https://blog.toss.im/article/tosssavetheplanet",
        "pubDate": "Mon, 21 Apr 2025 23:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}청구서·증명서 등 각종 서류 전자문서로 전환…2024년 발급량, 전년 대비 38% 증가\n나무 2만 2천 그루 보호 효과…탄소 약 630톤·물 약 22억 리터 절감 효과까지\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}2025년 4월 22일(화) – 토스(운영사 비바리퍼블리카, 대표 이승건)는 2024년 한 해 동안 전자문서 2억 2천만 건을 발급해 종이 사용량 절감에 기여했다고 22일 밝혔다. 이는 2023년 대비 약 38% 증가한 수치로, 전자문서 이용이 빠르게 일상화되고 있음을 보여준다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n토스는 생활에 필요한 각종 청구서, 고지서, 증명서 등을 앱을 통해 전자문서로 제공하고 있다. 이용자는 ‘모바일청구서’, ‘국민비서’, ‘공인전자문서’ 등 다양한 서비스를 통해 주민등록 등초본, 건강보험자격득실확인서 같은 행정 서류부터 과태료, 범칙금 고지서 및 청구서까지 언제 어디서나 종이 없이 받아볼 수 있다.\n이렇게 2024년에 발급한 전자문서는 총 2억 2천만 건이다. A4용지 1장(5g) 기준으로 환산 시 약 1,100톤에 해당하는 종이 2억 2천 장을 절약한 셈이다. A4용지 1만 장을 생산하는 데 30년생 나무 1그루가 필요하다는 점을 고려하면, 이는 약 2만 2천 그루의 나무를 보호한 것과 같다. 또한 종이를 생산할 때 발생하는 탄소 약 630톤(장당 2.88g), 물 약 22억 리터(장당 10리터)의 절감 효과도 거둔 것으로 추산된다.\n\n토스 계열사들 역시 종이 사용 절감에 적극 동참하고 있다. 전자지급결제대행(PG) 계열사 ‘토스페이먼츠’는 가맹점 계약 절차 대부분을 전자계약 시스템으로 전환했다. 2022년 도입 이후부터 2025년 2월까지 체결된 계약서 중 약 92%를 전자문서로 발급했으며, 총 700만 장의 종이를 절약했다. 결제 단말기 및 포스(POS) 솔루션 공급 자회사 ‘토스플레이스’ 또한 2023년 토스 단말기 출시 이후 약 2년간 15만 건의 영수증을 전자 문서로 대체하며 종이 절감에 기여하고 있다.\n토스 관계자는 “전자문서 전환은 작지만 의미있는 변화”라며 “앞으로도 사용자의 편의를 높이는 동시에 지구 환경 보호에도 기여할 수 있는 서비스를 지속적으로 고민하겠다”고 밝혔다.",
        "content": "사용자 편의성과 환경 보호 동시 실현",
        "contentSnippet": "사용자 편의성과 환경 보호 동시 실현",
        "guid": "https://blog.toss.im/article/tosssavetheplanet",
        "isoDate": "2025-04-21T23:00:00.000Z"
      },
      {
        "title": "토스인컴, '5월 종소세 신고' 앞두고 '추징 안심보상제' 실시",
        "link": "https://blog.toss.im/article/tossincomeservices",
        "pubDate": "Mon, 21 Apr 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}‘숨은 환급액 찾기’ 서비스 통해 신고 후 추징 시 최대 50만 원까지 보상\n종합소득세 신고 전 환급 예상액 확인 가능…‘종소세 미리보기’ 서비스도 동시 출시\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 세금신고 및 환급 도움 서비스 제공 택스테크 자회사인 토스인컴(대표 박일용)이 5월 종합소득세 정기신고 시즌을 앞두고 고객 신뢰를 높이기 위한 ‘추징 안심보상제’를 실시한다고 21일 밝혔다. 이와 함께, 올해 종합소득세(이하 종소세) 환급 예상액을 사전에 확인할 수 있는 ‘종소세 미리보기’ 서비스도 새롭게 선보인다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}◇ 신고 후 추징 발생해도 안심…‘추징 안심보상제’ 도입\n추징 안심보상제는 ‘숨은 환급액 찾기(이하 숨환찾)’를 통해 신고한 건에서 추징이 발생한 경우 최대 50만 원까지 보상하는 제도다. 숨환찾 이용 후 6개월 이내에 발생한 추징에 대해 토스인컴이 고객당 1회, 최대 50만 원 한도 내에서 보상한다.\n예를 들어, 고객이 숨환찾을 통해 종소세 경정청구를 신청했으나 기존 연말정산 시 잘못 기재한 부양가족 정보로 인해 환급액의 일부를 다시 납부하게 된 경우라도, 그 추징액에 대해 토스인컴이 보상을 해주는 방식이다.\n보상 신청을 위해서는 고객이 토스 고객센터에 추징 사실을 입증할 수 있는 서류를 제출하면 된다. 이후 내부 절차에 따라 처리되며, 2025년 5월 1일 이후 신고 건을 대상으로 한다.\n한편, 대부분의 추징은 고객이 연말정산이나 종소세 신고 때 직접 입력한 부양가족이 공제 요건을 충족하지 않는 경우에 발생한다. 실제로 숨환찾 이용 고객 중 이런 이유로 추징된 비율은 전체의 0.03%로 매우 낮지만, 토스인컴은 고객의 만족과 신뢰를 극대화하기 위해 이 제도를 도입했다.\n토스인컴 관계자는 “정교한 세무엔진과 고도화된 서비스 설계를 바탕으로 고객 중심의 파격적인 보상제 도입이 가능했다”고 덧붙였다.\n◇ 신고 전 예상 환급액도 미리 확인… ‘종소세 미리보기’ 서비스도 출시\n이번 시즌부터 토스인컴은 종합소득세 신고 전 환급 예상액을 사전에 확인할 수 있는 종소세 미리보기 서비스도 함께 제공한다. 이 서비스는 홈택스 간편인증을 통해 고객 데이터를 연동한 뒤, 최신 개정 세법을 적용해 고객의 환급 예상 금액을 계산해준다.\n종소세 미리보기는 실제 5월 정기신고에 사용될 데이터를 기반으로 계산되기 때문에 정확도가 높다. 이에 고객이 신고 여부를 사전에 판단하는 데 큰 도움이 될 것으로 기대된다.\n토스인컴 관계자는 “고객이 세금 환급 신고에 대해 느끼는 막연한 불안을 해소하고, 더욱 신뢰할 수 있는 서비스 경험을 제공하는 것이 목표”라며 추징 안심보상제 도입의 취지를 설명했다. 또한 “종소세 미리보기 기능과 함께 누구나 쉽고 정확하게, 그리고 안심하고 세금을 신고할 수 있는 환경을 만들어 나가겠다”고 덧붙였다.",
        "content": "‘추징 안심보상제’와 ‘종소세 미리보기’ 서비스 출시",
        "contentSnippet": "‘추징 안심보상제’와 ‘종소세 미리보기’ 서비스 출시",
        "guid": "https://blog.toss.im/article/tossincomeservices",
        "isoDate": "2025-04-21T01:00:00.000Z"
      },
      {
        "title": "치킨은 어떻게 우리나라의 소울푸드가 됐을까?",
        "link": "https://blog.toss.im/article/behindthemoney-11",
        "pubDate": "Fri, 18 Apr 2025 03:34:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}치킨값이 또 올랐다\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}만 원 짜리 세장. 이제 그 정도는 있어야 치킨 한 마리를 먹을 수 있다. 치킨 브랜드들이 2,000~3,000원씩 앞다투어 가격을 올리며 ‘치킨 인플레이션’이 다시 화제다. 치킨값이 오를 때마다 뉴스는 빠르게 보도하고, 우리는 분노한다. \n치킨값에 유독 여론이 뜨거운 것은 그만큼 치킨이 우리 삶에서 중요한 음식이자 문화가 되었음을 말해준다. 그런데 우리는 어쩌다 이렇게까지 치킨을 사랑하게 된 걸까? 한국 치킨의 대중화는 단순 우연이 아닌 경제성장과 맞물린 문화·산업적 산물이기도 하다.\n통닭이 치킨이 되기까지\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}부위별로 조각내 튀긴 ‘치킨’의 시작은 70년대로 거슬러 올라간다. 한국 최초의 치킨 프랜차이즈로 알려진 ‘림스치킨’은 1975년 설립되어 1977년 명동 신세계백화점에 1호점을 열었다. 요즘으로 치면 더현대같은 핫플레이스에 입점한 셈일 것이다. 당시의 정확한 가격은 찾기 어렵지만, 대략 2,000원 정도였다고 한다.\n닭은 네 조각으로 잘라 ‘3G 파우더’를 묻혀 튀겼다. 마늘(Garlic), 생강(Ginger), 인삼(Ginseng)이 들어가 ‘3G 파우더’라고 불렀다. 지금 기준에서 보면 특별할 게 없지만, 림스치킨이 등장하기 전까지 한국에는 닭을 조각내거나 튀김옷을 입힌 치킨이 흔치 않았다. 1980년대까지만 하더라도 전기구이 통닭이 일반적이었기 때문이다.\n치킨을 만들기 위해서는 튀김가루를 묻히고, 물반죽을 입힌 후, 다시 튀김가루를 묻히는 등 전용 가루 씽크대인 ‘브레딩 테이블’이 필요했는데 설비 투자에 만만치 않은 돈이 필요했다. 더구나 통닭을 적당한 크기로 자르고 튀기는 과정 또한 전용 튀김 용기가 필요했고 기름도 훨씬 많이 써야만 했다. \n이러한 이유로 옛 영화나 드라마에서 흔히 볼 수 있는 ‘월급날 아빠가 사 오는 누런 종이봉투에 통째로 담긴 닭 한 마리’. 이 기름 한 방울 없이 구워낸 전기구이 통닭이 국민적인 인기를 누리고 있던 시대, 치킨은 혜성처럼 등장했다.\n닭이 튀김옷을 입을 수 있었던 이유\n치킨이 처음부터 서민 음식이었던 것은 아니다. 짜장면 한 그릇에 600~700원, 경양식집 돈가스는 1,300~1,400원 하던 1988년. 치킨 한 마리는 약 4,000~5,000원으로 짜장면과 돈가스보다 몇 배나 비쌌다. 심지어 짜장면과 돈가스도 생일이나 졸업식, 소풍 등 특별한 날에나 맛볼 수 있는 귀한 음식이었다.\n그럼에도 불구하고 치킨의 시대는 다가오고 있었다. 배경에는 1980년대 경제적 고도성장이 있다. 경제가 빠르게 성장하며 양계 산업 또한 번성했기 때문이다. 1970년, 1.4kg이었던 국민 1인당 닭고기 소비량은 1980년, 6.9kg으로 급격히 증가했다. 10년 사이 닭고기 소비량이 5배나 늘어난 것이다.\n사실 닭고기가 한국의 입맛을 사로잡은 역사는 길지 않다. 조선 시대 백성들이 가장 사랑하던 고기는 소고기였고, 조선 후기에도 닭보다는 꿩사냥이 흔했다. 닭을 체계적으로 사육하는 시설이 들어선 것은 일제 강점기였고, 1960년대가 되어 과학적인 영농을 통해 대량생산이 가능한 단계에 들어서게 됐다. \n그리고 1980년대 경제성장의 성과를 고기를 구워먹는 것으로 누렸던 우리 국민들은 기름을 사용한 음식에 빠르게 적응해 나갔다. 치킨부터 삼겹살까지 현대 한국인의 육류 소비는 대부분 산업화 이후의 새로운 식습관이었다.\n양념치킨의 등장\n특히 1986~1988년까지, GDP 성장률은 3년 연속 두 자릿수를 찍으며 한국 경제는 고도성장을 이루었다. 경제성장과 함께 닭을 향한 한국인의 입맛 또한 나날이 발전했다. 엠보형 치킨, 크리스피형 치킨, 민무늬형 치킨 등 다양한 튀김옷 스타일이 개발되었고 ‘림스치킨’을 통해 이제 통닭이 아닌 ‘치킨’이라는 이름으로 상품화가 이루어졌다. 그리고 마침내 양념치킨이 등장한다.\n.css-1odxvuk{white-space:pre-wrap;font-style:italic;}1984년 당시, 대구먹자골목에서는 통닭과 찍어 먹는 소스를 함께 내주곤 했었습니다. 대전에서 페리카나를 운영하고 있던 페리카나 치킨 창립자 양희권 회장은 찍어 먹는 소스를 보고 문득 소스를 찍어 먹는 대신 치킨에 버무리면 어떨까라는 생각이 들었다고 합니다... 한국인의 입맛에 가장 잘 맞는 고추장, 마늘, 양파, 물엿, 마요네즈 등을 사용해서 양념을 개발하였으며 양념 소스를 묻혔을 때 맛이 더 잘 배는 얇은 튀김옷의 후라이드를 고수하여 양념치킨의 맛을 현재까지 유지할 수 있도록 노력하고 있습니다.\n- 페리카나 양념치킨 홈페이지 \n변화는 과감했다. 통닭에 튀김옷을 입힌 지 10년 만에 한국인들은 우리만의 치킨 제조법을 발전시켰다. 1984년 대구먹자골목에서는 고추장소스를 듬뿍 발라 양념치킨을 만들어냈다. ‘맛이 더 잘 배는 얇은 튀김옷’과 양념소스의 결합. 이때부터 한국의 치킨 산업은 독자적인 길을 걷기 시작한다. \n그리고 고추장에서 시작한 양념치킨은 곧 전국으로 퍼져 다양한 치킨 브랜드로 확대된다. 멕시칸 치킨, 처갓집 양념통닭, 이서방 양념통닭, 스모프 양념통닭 등 전문 브랜드들이 줄줄이 생기며 치킨이 ‘브랜드’로서 대중에게 각인되기 시작했다.\nIMF와 치킨 프랜차이즈의 질주\n90년대 교촌치킨(1991), 지코바(1994), BBQ(1995) 등 대표 브랜드가 등장하며 본격적으로 치킨 프랜차이즈 사업이 시작되었다. 꼭 치킨뿐만은 아니었다. 88년 압구정에 1호점을 내며 한국에 상륙한 맥도날드는 1990년대가 되어 국민 소비 수준이 높아지며 매장 수도 급속도로 늘어갔다. 종로김밥, 김가네 같은 브랜드 역시 이 무렵 등장했으니 90년대는 프랜차이즈 시대라고 해도 과언이 아닐 것이다.\n프랜차이즈 시대는 ‘치킨’이 단순한 음식에서 산업, 창업 모델로 진화한 시기이기도 하다. 특히, 1997년 외환위기는 아이러니하게도 치킨 산업에 기회가 되었다. 20세기 말의 대한민국은 휘청였고, 수많은 가장들이 거리로 몰려나왔다. 이들은 치킨집 창업을 통해 제2의 인생을 시작했다. 치킨집에 대한 서민적 이미지가 극대화된 것 도 이 시기이며, 자조적 농담처럼 말하는 ‘기승전치킨집’의 실제 사례이기도 하다. BBQ는 IMF 이후 치킨 프랜차이즈 열풍을 몰아 창업 4년 만인 1997년 가맹점 1,000개를 돌파했다. 류승룡 배우가 수많은 치킨집 사장님 연기를 하게 된 것은 결코 우연이 아니었다.\n한국인에게 치킨은 간식, 술안주 그 이상\n2000년대에 들어서며 치킨은 단순한 음식이 아닌 콘텐츠로 자리 잡았다. 사장님 부부가 직접 닭을 튀기고 배달까지 하는 동네 치킨집은 비교적 저렴한 가격으로 사랑받고, 간장 치킨, 파닭 같은 새로운 메뉴와 컨셉을 앞세운 신생 브랜드들도 빠르게 인기를 끌었다.\n브랜드들은 소녀시대, 전지현 같은 유명 연예인을 모델로 내세워 공격적인 마케팅에 나섰고, BBQ는 ‘치킨대학’을 만들어 창업 경험이 없는 일반인을 위한 외식 교육까지 시작했다. 치킨은 예능 프로그램의 소재가 되기도 하며 하나의 콘텐츠로 확장되었다.\n한국인에게 치킨은 단순한 간식이나 술안주가 아닐 것이다. 한 달 간 고생한 나와 가족에게 주는 소소한 보상이 되기도 하고, 고된 하루를 위로하는 낙이 되기도 하며, 누군가의 삶을 다시 일으킨 창업 아이템이 되기도 한다. 특정한 음식이 이토록 한국인의 삶과 문화를 대변한 적이 있었을까? 아마 김장문화 이후로, 치킨만큼 한국인의 애환과 삶을 상징하는 음식도 드물 것이다.\n최근에는 파리, 뉴욕 등에서 한국치킨이 유행하고 있다는 소식이 심심치 않게 들려온다. 불과 50년 만에 한국은 치킨 선진국이 되었고, 글로벌 시장에서도 주목받고 있다. 앞으로는 또 어떤 변화가 일어날까. 치킨처럼, 혹은 그 이상으로 또 다른 음식이 새로운 문화와 산업으로 진화할 수 있을까? 맛을 향한 한국인의 집요한 사랑은 앞으로도 수많은 이야기를 만들어갈 것이다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 이은호",
        "content": "치킨으로 읽는 한국 경제와 문화",
        "contentSnippet": "치킨으로 읽는 한국 경제와 문화",
        "guid": "https://blog.toss.im/article/behindthemoney-11",
        "isoDate": "2025-04-18T03:34:00.000Z"
      },
      {
        "title": "2025 청년 목돈 마련 위한 정책 총정리: 청년 도약계좌부터 장병 내일 준비적금까지 ",
        "link": "https://blog.toss.im/article/money-policies-39",
        "pubDate": "Fri, 18 Apr 2025 01:29:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}1.청년 도약계좌\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}19~34세 청년이 목돈을 만들 수 있도록 정부가 지원하는 금융 상품입니다. 5년(60개월) 동안 매월 70만 원 한도 내에서 자유롭게 납입하면 매월 최대 33,000원을 정부가 지원해요.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n대상: 개인소득(연소득 총급여 기준 7,500만 원 이하) 및 가구소득(기준 중위소득 250%이하)를 충족하는 19~34세 이하 청년\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}연령 계산 시 병역이행기간은 포함되지 않아요.(최대 6년)\n지원내용: 본인 납입액(월 최대 70만 원)에 대한 정부 기여금 지원(월 최대 3만 3,000원) 및 이자소득 비과세\n연소득 총급여 기준 6,000만 원 이상은 비과세만 지원해요.\n신청방법: 청년도약계좌 협약은행* 앱에서 비대면 신청\n*국민, 신한, 우리, 하나, 농협, 기업, 부산, 광주, iM, 경남, 전북\n\n\n\n2. 장병 내일 준비적금\n병역의무를 이행 중인 장병들이 목돈을 모을 수 있도록 돕는 상품이에요. 월 최대 55만 원을 적금할 수 있고, 정부가 납입 금액의 100%를 추가 지원 해줍니다.\n\n\n대상: 장병내일준비적금 가입 후 만기해지한 병역의무이행자\n지원내용: 본인 저축액(월 최대 55만 원)+5% 수준 은행이자(비과세)+원금의 100%매칭 지원금(비과세)\n지원시기: 병역의무이행자의 전역(소집해제)으로 장병 내일 준비적금 만기 해지 시\n신청방법: .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}나라사랑포털, 사회복무포털, e-병무지갑 앱을 통해 ‘가입 자격 확인서’ 발급 후 은행*에 가입신청\n*농협, 신한, 우리, 하나, 기업, 국민, 수협, 대구, 부산, 광주, 제주, 전북, 경남, 우정사업본부\n\n\n\n3. 청년 일자리 도약 장려금\n중소기업에서 18개월 이상 장기근속한 청년에게 2년간 최대 480만 원을 지원합니다.\n\n\n대상: 5인 이상의 제조업 등 빈일자리 업종*의 우선지원대상기업 및 해당 기업에 취업 후 18개월 이상 재직한 청년\n*제조업, 조선업, 뿌리산업, 보건복지업, 해운업, 수산업 등\n지원 내용: 근로자에게 18개월 이상 재직 시, 2년간 최대 480만 원 지원 (18개월, 24개월 차 각 240만 원씩 지원)\n신청방법: 고용24에서 기업이 신청 가능\n문의\n\n고용24에서 청년일자리도약장려금 운영기관 검색 > 사업장 소재지의 운영기관 문의\n고용노동부 고객상담센터(1350)\n\n\n\n\n4. 청년 내일저축계좌\n저축한 금액보다 더 많은 지원금을 적립해 청년이 목돈을 마련할 수 있도록 지원합니다.\n\n\n대상\n\n19~34세 청년 (수급자·차상위자는 15~39세까지 허용)\n근로·사업소득: 월 50만 원 초과~250만 원 이하(수급자·차상위자는 월 10만 원 이상)\n가구소득: 기준 중위소득 100% 이하\n\n\n지원내용: 본인 저축액(월 10만 원 이상) + 근로소득장려금(정부지원금 10만 원)*\n*수급자·차상위 청년은 정부지원금 30만 원\n신청방법: 복지로포털 또는 주소지 행정복지센터\n문의: 보건복지상담센터(129), 자산형성지원콜센터(1522-3690)\n\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희 이제현",
        "content": "목돈 마련을 위한 대표적인 청년정책 모아보기  ",
        "contentSnippet": "목돈 마련을 위한 대표적인 청년정책 모아보기",
        "guid": "https://blog.toss.im/article/money-policies-39",
        "isoDate": "2025-04-18T01:29:00.000Z"
      },
      {
        "title": "토스, 보험사와 동일한 자동차 보험료로 비교·추천",
        "link": "https://blog.toss.im/article/automobile_",
        "pubDate": "Fri, 18 Apr 2025 00:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}내일부터 토스 앱에서 보험사와 동일한 자동차 보험료 확인 가능\n조회만 해도 토스포인트 50원 지급...토스페이로 결제 시 일부 상품에 한해 최대 3만 원 할인 지원\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 19일부터 자사 앱에서 각 보험사 온라인 채널(CM)과 동일한 자동차 보험료를 안내한다고 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n이는 금융위원회의 ‘자동차보험 비교추천 서비스 2.0’ 정책에 따라 구현된 서비스로, 토스가 업계에서 가장 먼저 선보였다. 이번 개편으로 소비자는 보험사 온라인 채널과 토스에서 동일한 요율의 자동차 보험료를 비교하고 가입할 수 있다.\n토스는 삼성화재다이렉트보험, DB손해보험, 현대해상다이렉트보험, KB손해보험, 메리츠화재보험, 캐롯손해보험, AXA다이렉트보험, 하나손해보험, 흥국화재보험, 롯데손해보험 등 총 10곳의 주요 보험사와 제휴를 맺고 있어, 다양한 상품을 한눈에 비교하고 추천받을 수 있다.\n보험료 비교뿐 아니라 다양한 할인 특약도 토스 앱에서 바로 확인 가능하다. △대중교통 △내비게이션 앱 △자동차 부속품 △자녀 유무 등 운전자 조건에 따라 달라지는 할인 항목들을 손쉽게 선택할 수 있으며, 특히 토스 만보기를 이용 중이라면 별도 앱 설치 없이 걸음 수 기반 할인도 받을 수 있다.\n‘차 보험 비교하기’ 서비스를 이용하는 고객을 위한 추가 혜택도 마련됐다. 보험료를 조회하는 고객에게는 최초 1회에 한해 토스포인트 50원을 지급하며, 신차 구매자와 보험 갱신 대상자, 4월 21일 이전에 보험 비교·추천 서비스를 이용한 사용자 모두가 대상이다. 토스에서 자동차 보험을 비교한 뒤 토스페이로 결제하면 일부 상품에 한해 최대 3만 원까지 보험료 할인을 받을 수 있다.\n이 서비스는 토스 앱 > 전체 탭 > 자동차 > ‘차 보험 비교하기’ 또는 토스 앱 > 검색(돋보기) > ‘차 보험 비교하기’로 이용 가능하다.\n토스 관계자는 “자동차 보험은 운전을 하는 대한민국 운전자라면 누구나 가입해야 하는 의무 보험으로, 전체 국민의 약 절반이 매년 보험을 가입하고 있다”며 “앞으로도 보다 편리한 비교·추천 서비스와 풍성한 혜택을 제공할 수 있도록 지속적으로 서비스를 고도화해 나가겠다”고 밝혔다.",
        "content": "19일부터 일괄 적용",
        "contentSnippet": "19일부터 일괄 적용",
        "guid": "https://blog.toss.im/article/automobile_",
        "isoDate": "2025-04-18T00:00:00.000Z"
      },
      {
        "title": "Toss Compares Auto Insurance Quotes with Insurer-Matched Rates",
        "link": "https://blog.toss.im/article/automobile__",
        "pubDate": "Thu, 17 Apr 2025 22:36:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}tarting tomorrow, users can check and compare auto insurance premiums from insurers directly in the Toss app\nUsers receive ₩50 Toss Points just for checking–up to ₩30,000 off select products with Tosspay.\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\nViva Republica, the operator of the financial super app “Toss,” announced that the Toss app now displays the same auto insurance premiums as those offered through each insurer’s online direct channel (CM).\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\nThe service is implemented in accordance with the Financial Services Commission’s “Car insurance comparison service 2.0” policy, and Toss is the first in the industry to launch it. With this update, consumers can now compare and buy auto insurance directly from the Toss app at the same rates offered through insurers’ online direct channels.\nToss has partnered with ten major insurance companies—including Samsung Fire & Marine Direct, DB Insurance, Hyundai Marine & Fire Direct, KB Insurance, Meritz Fire & Marine, Carrot Insurance, AXA Direct, Hana Insurance, Heungkuk Fire & Marine, and Lotte Insurance—allowing users to compare and receive recommendations for a wide range of products all in one place.\nIn addition to comparing premiums, users can also view various discount options directly from the Toss app. Drivers can easily select discounts based on their individual situations—such as use of public transportation, navigation apps, vehicle accessories, or whether they have children. Notably, Toss Walk users can also receive step-based discounts without needing to install a separate app.\nAdditional benefits are available for customers using the “Compare Car Insurance” service. Users who check their insurance premiums will receive ₩50 in Toss Points (one-time reward). This applies to new car buyers, those renewing their insurance, and users who used the comparison service before April 21. Furthermore, customers who compare auto insurance on Toss and make a purchase using Tosspay can receive a discount of up to ₩30,000 on select products.\nThe service can be accessed from the Toss app by navigating to: All tab > Car > “Compare car insurance”, or using Search (magnifying glass icon) > “Compare insurance”.\n“Car insurance is a mandatory requirement for all drivers in Korea, and nearly half of the population purchases insurance each year,” a Toss representative said. “We will continue to improve the service to provide users with a more convenient comparison and recommendation experience, along with greater benefits.”",
        "content": " Toss being the first in the industry to launch it",
        "contentSnippet": "Toss being the first in the industry to launch it",
        "guid": "https://blog.toss.im/article/automobile__",
        "isoDate": "2025-04-17T22:36:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]