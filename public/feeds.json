[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sy Brand",
        "title": "Pure Virtual C++ 2025: Pre-Conference Videos",
        "link": "https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-pre-conference-videos/",
        "pubDate": "Wed, 23 Apr 2025 18:46:32 +0000",
        "content:encodedSnippet": "Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It is running on 30th April.\nRegister for Free\n\nThe first half of our pre-conference videos is now available on YouTube. The videos are:\nMSVC C++23 Conformance\nSimplifying your Cross-Platform Development with Visual Studio\nC++ Dynamic Debugging\nHow Debuggers Work\nA Year in Review: Microsoft’s Latest CMake Improvements in Visual Studio and VS Code\nCMake Debugger for Projects Targeting Remote Linux Systems\nAI-generated doc comments in Visual Studio\nWe look forward to seeing you at Pure Virtual C++!\nThe post Pure Virtual C++ 2025: Pre-Conference Videos appeared first on C++ Team Blog.",
        "dc:creator": "Sy Brand",
        "comments": "https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-pre-conference-videos/#respond",
        "content": "<p>Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It is running on 30th April. The first half of our pre-conference videos is now available on YouTube. The videos are: MSVC C++23 Conformance Simplifying your Cross-Platform Development with Visual Studio C++ Dynamic Debugging How Debuggers Work A Year in Review: [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/pure-virtual-cpp-2025-pre-conference-videos/\">Pure Virtual C++ 2025: Pre-Conference Videos</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Pure Virtual C++ is our free, one-day, virtual conference for the whole C++ community. It is running on 30th April. The first half of our pre-conference videos is now available on YouTube. The videos are: MSVC C++23 Conformance Simplifying your Cross-Platform Development with Visual Studio C++ Dynamic Debugging How Debuggers Work A Year in Review: […]\nThe post Pure Virtual C++ 2025: Pre-Conference Videos appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35406",
        "categories": [
          "Announcement",
          "C++",
          "Pure Virtual C++"
        ],
        "isoDate": "2025-04-23T18:46:32.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Anton Semenkin",
        "title": "Mellum: How We Trained a Model to Excel in Code Completion",
        "link": "https://blog.jetbrains.com/ai/2025/04/mellum-how-we-trained-a-model-to-excel-in-code-completion/",
        "pubDate": "Thu, 24 Apr 2025 12:45:44 +0000",
        "content:encodedSnippet": "Code completion has always been a defining strength of JetBrains products. So, when adding AI into our products, we knew it had to deliver top-tier code completion. This post covers how we trained the model behind our cloud-based completion.\nInitial research: What about obvious model options?\nWe started by testing both closed-source LLMs via APIs and open-source alternatives. But we quickly hit some roadblocks:\nAs we were aiming for on-the-fly completion, typical chat LLMs proved themselves impractical due to high costs and substantial latency. Such models were also missing critical code completion features, like fill in the middle (FIM) and token healing. \nChat models also tend to provide their outputs in inconsistent format, making it harder to properly process the response and insert suggestions in the editor.\nOne of our biggest concerns was the lack of transparency about the data used for training, which could lead to potential risks related to the use of licensed code. While some open-source models do offer transparency in their data sources, we opted not to use them due to production stability issues.\nMellum: A bird’s-eye view of the model\nAfter evaluating our options, we concluded that a relatively small in-house code completion model was the way to go. We set a goal of training a high-quality model with reasonable inference costs and latency using transparent data. We determined that staying under 4B parameters would allow us to support efficient inference for all users. Additionally, since our model has been trained primarily on code, its token vocabulary is specialized for coding tasks. \nTo train the model, we implemented a three-stage process, with each stage bringing in new knowledge and improving the generation quality. We started with basic pre-training on a large corpus of standalone files and then fine-tuned on a smaller number of contextual examples. Finally, to align the model to our product needs and remove undesired generations, we used reinforcement learning with AI feedback (RLAIF). \nLet’s take a look at the training steps in detail.\nPre-training stage\nTo avoid risks connected with training data, we started training from scratch. The goal of the pre-training stage was to introduce the model to a wide variety of languages, make it learn the syntax, patterns, and general programming concepts. \nDataset\nWe used TheStack as the main source of code data in various languages. It’s not fully up to date, but we addressed this by collecting additional data with fresh code, filtering it by repo and files licenses and cleaning it of personal identifiable information (PII). This ensures that our dataset is both legally compliant and useful.\nPre-training process\nFor pre-training, we sampled our combined dataset multiple times to reach approximately 3 trillion tokens. We used an 8192-token context window and split the dataset into chunks of matching size. For half of the files in each chunk, we applied a fill-in-the-middle (FIM) transformation. This involves splitting the file into three parts (prefix, middle, and suffix), then rearranging them so that the model learns to predict the missing middle segment given the surrounding context. This technique encourages the model to consider both the preceding and following code when generating suggestions, which better mimics real-world usage in code editors.\nThe pre-training was conducted on a cluster of 16 nodes with 8 H100 GPUs each, and it took about 15 days to complete. The result was our 4B-parameter Mellum-base model. For comparison, 100M code completion models, which we deploy locally in JetBrains IDEs, typically train in about a week on a single 8 H100 GPUs node.\nThe pre-training produces a general-purpose code completion model with broad knowledge across many programming languages. However, at this step the model is trained to achieve one simple objective: prediction of the next token in a randomly selected segment of a file. Without more context, the model won’t understand your code structure and won’t know when to stop generating.\nThese limitations are precisely what the fine-tuning stage is designed to address.\nContext-aware fine-tuning\nBetter fill-in-the-middle examples\nUnlike pre-training – where we randomly select chunks of code for prediction – fine-tuning focuses on slicing the code in more meaningful ways, i.e. by extracting fragments you’re more likely to see “in the wild”.\nThe visual below illustrates this approach. The code shown in blue is what we ask the model to predict. In the second example, for instance, the selected fragment stays within the scope of a single function. This setup better reflects a typical user scenario.\n\n\n\n\nBuilding contextual examples\nEven with improved fill-in-the-middle splitting, we’re still operating within the scope of a single file, which doesn’t accurately reflect how most developers work. In practice, completing code often requires an understanding of surrounding files and broader project context.\nOne of JetBrains’ superpowers is expertise in symbol resolution, usage search, and other IDE tooling. So, for the sake of scalable data pre-processing, we launched an internal project called Code Engine: a cross-platform SDK providing a lightweight, high-performance CLI tool designed to collect contextual information directly from plain files, without requiring the project to be indexed. Such an SDK allowed us to build contextual examples across thousands of repositories on the internal MapReduce cluster in a reasonable amount of time.\nHowever, finding the right algorithms took some trial and error. Here are a few examples to give you an idea of some of the challenges we had to overcome while trying to find the best context collection approach for our model: \nSorting files that are most similar by Jaccard distance on lines\nUsing files from import statements\nCreating a repomap\n…and much more. \nLanguage-specific fine-tuning\nWe hypothesized that smaller models like ours could benefit significantly from specialization. While the base model is trained on over 80 programming languages, most users typically work with just one or two (e.g. Java or Python). As a result, we fine-tune separate models for some of the most popular languages, allowing them to better capture language-specific patterns, libraries, and developer workflows:\nmellum-all – supports the majority of languages and dialects available in JetBrains’ IDEs, but the completion quality is slightly lower than that of specialized models\nmellum-python – specialized for Python and Jupyter\nmellum-jotlin – specialized for Java and Kotlin\nmellum-web – specialized for the web (coming soon!)\nRefining with RLAIF\nThe final step in our training pipeline focuses on removing undesired behaviors due to misalignment between the model’s training objectives and user expectations. For instance, from a training perspective, it’s perfectly valid to generate placeholders like TODO(“Not implemented”) or pass since these patterns are common in public code repositories. However, these are not likely to be helpful as actual code completion suggestions.\nTo address such issues, we apply an additional training phase using reinforcement learning from AI feedback (RLAIF), incorporating synthetic data crafted from rules and model-generated preferences. We construct a dataset of completion pairs in two main categories:\nRule-based completion pairs: We take real examples from our dataset and deliberately degrade them – replacing meaningful code with generic placeholders like pass, comments, or TODO statements.\nMellum-generated completion pairs: For a given prompt, we generate two completions – one with low temperature (more deterministic and often higher quality), and another with high temperature (typically more erratic or lower quality). We then use an external LLM to rank the two completions, producing a labeled positive-negative pair.\n\n\n\n\nThis dataset is then used to train the model to better reflect user preferences. Currently, we use the direct preference optimization (DPO) algorithm, which makes the model more inclined to generate positive or preferred completion examples.\nThis approach not only increases the evaluation score but also reduces the number of annoying generation artifacts.\nHow good is Mellum?\nSpoiler: the model performs extremely well for its size! Here’s how we evaluated it:\nFirst, we evaluated our models on the internal benchmark that we call “JetBrains BigCode”.\nThen, we ran our models on well-known public benchmarks like SAFIM.\nFinally, we measured the user-centric metrics by leveraging feature usage logs.\nBelow, we break our feedback loops down into two categories: offline evaluation (with pre-determined datasets) and online evaluation (with real user data).\nOffline evaluation\nDiscussing datasets is always nice, but what about the metrics?\nWhile creating the dataset is challenging enough, it’s even more challenging to create a good metric that compares the ground truth completion with the one proposed by the neural model. We did a little research and ended up with a combination of two main metrics:\nEM:\n\nExact match – a popular choice for code completion evaluation.\nThe prediction is considered good if the first line of the completion matches the first line of the ground truth with minimal pre-processing. \nKK:\n\nThe metric was named after its authors, Karol and Katya, who designed it and manually annotated the threshold-estimating dataset.\nThe number of suggested lines that are found in the ground truth, divided by the total number of lines in the suggested completion.\nWe also use some additional evaluation techniques, including chrF and LLM-as-a-Judge, for comparing the model variations, but we won’t be covering them here for the sake of keeping the blog post concise. Keep following our updates for more!\nJetBrains BigCode\nWe evaluated the model using a benchmark dataset derived from our internal tool, JetBrains BigCode, covering the most popular languages supported by Mellum – including Python, Kotlin, and Java. We ensured that our evaluation dataset has no overlap with the training dataset and transformed it to the FIM structure with contexts gathered using Code Engine.\nOne of the key advantages of the JetBrains BigCode dataset is its ability to slice code snippets based on various features, such as repository topic, popularity, age, whether the code is main or test code, and recent activity (e.g. commits in the past year). This is done for two primary reasons. First, a well-performing model should demonstrate strong results across all these slices, not just on a subset of them. Second, public benchmarks often end up in model training datasets over time, leading to evaluation contamination. To mitigate the latter risk, we designed our age and activity slices to better reflect real-world conditions. \nAs a result, by maintaining full control over our dataset rather than relying on public benchmarks, we can more reliably assess model quality across different coding styles and practices. According to our experiments on JetBrains BigCode, the complicated nature of the base model does pay dividends in terms of performance. So, it’s demonstrably a good idea to have a strong base model, then fine-tune it, and then align it with DPO.\n\n\n\n\nAdditionally, our JetBrains BigCode evaluation runs show that we are in good company with well-known battle-tested polyglot models, while being smaller and more efficient. Of course, larger models do outperform us, but they come with significantly higher serving costs, making them less practical for our products.\nSingle-line suggestions quality (EM metric)\n\n\n\nPublic benchmarks\nBesides evaluation on an internal dataset, we compared the capabilities of our models on different public benchmarks like multilingual benchmark SAFIM (syntax-aware fill in the middle). Stay tuned as we will share benchmarks data for Mellum soon!\nThat said, it’s important to remember that benchmarks like JetBrains BigCode and SAFIM, while valuable for scalable offline evaluation, don’t fully capture the experience of a real developer using the model. And ultimately, that’s who we’re building for.\nOnline evaluation\nTo ensure a positive impact on the user experience, we measure several metrics on the feature usage logs, following the same pipeline we described in the paper Full Line Code Completion: Bringing AI to Desktop.\nLong story short, our main metric is called ratio of completed code (RoCC). It is defined as a ratio of symbols of code written with code completion among all code written in the editor. We generally try to optimize for this metric. The core idea and motivation are simple: the more generated text appears in the editor, the better our code completion is. The good thing about the RoCC is that we can vary the number of code completion contributors that we account for. This allows us to, for instance, calculate a general in-editor RoCC or Mellum-specific RoCC.\nAnother important metric is the acceptance rate (AR), which is the number of accepted suggestions divided by the number of all shown suggestions. This metric is widely used in the community and is also fairly intuitive: the more users accept our suggestions, the better.\nBelow, we provide some online metrics data for various popular languages:\n\nRoCC (Mellum + standard completion)RoCC (only Mellum)AR\nJava46%23%35%\nKotlin45%25%31%\nPython32%23%35%\nJS/TS39%23%32%\nC#45%18%32%\nGo45%30%44%\nPHP40%26%34%\nRust37%24%35%\n\n\n\n\n\nOutcomes and what’s next for Mellum\nThis was a challenging journey for our ML team, but it resulted in one general completion model and several specialized ones that are all available via the JetBrains AI platform and are currently powering code completion inside JetBrains AI Assistant. To conclude the blogpost, here are our few next steps:\nAs mentioned earlier, we are currently working on a specialized model for web development languages that should further boost quality for various languages, and we plan to make this publicly available at some point in the near future.\nWe would also like to scale the number of parameters further, introducing more diverse data to the training set at the same time. This way Mellum becomes capable of other AI-for-code tasks as well. Keep in mind that service performance remains a key for us, so we expect to stay within reasonable size boundaries as we expand the model. \nTry coding with Mellum and share your impressions with us!",
        "dc:creator": "Anton Semenkin",
        "content": "Code completion has always been a defining strength of JetBrains products. So, when adding AI into our products, we knew it had to deliver top-tier code completion. This post covers how we trained the model behind our cloud-based completion. Initial research: What about obvious model options? We started by testing both closed-source LLMs via APIs [&#8230;]",
        "contentSnippet": "Code completion has always been a defining strength of JetBrains products. So, when adding AI into our products, we knew it had to deliver top-tier code completion. This post covers how we trained the model behind our cloud-based completion. Initial research: What about obvious model options? We started by testing both closed-source LLMs via APIs […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=563113",
        "categories": [
          "jetbrains-ai",
          "ai",
          "mellum"
        ],
        "isoDate": "2025-04-24T12:45:44.000Z"
      },
      {
        "creator": "Marit van Dijk",
        "title": "Debugging Java Code in IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/04/debugging-java-code-in-intellij-idea/",
        "pubDate": "Thu, 24 Apr 2025 09:12:11 +0000",
        "content:encodedSnippet": "In this blog post, we will look at how to debug Java code using the IntelliJ IDEA debugger. We will look at how to fix a failing test, how to find out where an `Exception` is thrown, and how to find problems with our data. And we will learn some neat tricks about the debugger in the process! \nTo illustrate using the debugger, we will use a small example application that reads test scores from a CSV file, calculates the average score per student, and prints the results to the console. If you’d like to follow along, you can find the code here. \nDebug a failing test\nOne reason you might need the debugger is when one of your tests fails. In our example application, when we run the tests in `StudentTest`, we see that there is a failing test.\nFailing test\n\n\n\nCurrently, this test fails because the expected average does not match the result of the method `getAverageScore()`, as we can see on line 127. We can use the debugger to find out what the problem is and how to fix it. Let’s navigate to this method so we can set a breakpoint there to see what happens.\nSet a breakpoint\nWe can navigate to the method `getAverageScore()` using Jump to Source (⌘↓ on macOS / F4 on Windows/Linux) when our cursor is on the method. We can place a breakpoint, either by clicking in the gutter or using the shortcut (⌘F8 on macOS / Ctrl+F8 on Windows/Linux). Place the breakpoint on the first line of the method (line 50).\nBreakpoint in method\n\n\n\nRun in Debug mode\nWhen we run the test in Debug mode (⌃D on macOS / Shift+F9 on Windows/Linux), execution will stop when it hits the breakpoint, so that we can look at the state of our application. We see inline debugging information in the editor.\nRun in Debug mode\n\n\n\nHere we see that the list of `testScores` has `size = 3`. We can even click in the editor to expand this list to see details of the values in the list. We also see that `testScores.isEmpty()` evaluates to `false`, and therefore the `return` statement inside that `if` statement is unreachable and greyed out.\nIn the Debug tool window (⌘5 on macOS / Alt+5 on Windows/Linux), we see the call stack (the methods that were called) on the left. We can also see information about objects and variables, like the student and their test scores, in this example.\nDebug tool window\n\n\n\nStepping through the application\nNow, we can step through the code to see what happens, using different step actions.\nUse Step Over (F8) to step over a line and go to the next line, or use Step Into (F7) to step into a method that is called on a line. In this example, we can step into `getTestScore()` – which isn’t very interesting. When we step into a method, we can continue stepping to return to the call site once we exit the method, or use Step Out (Shift F8) to return right away. Notice that the variables and values that are shown inline and in the Debug tool window are updated as we step through the program.\nStep through the program\n\n\n\nOnce all the scores have been added, we see that the` totalScore` is 25. And here, we see the problem with our logic: we forgot to divide by the number of test scores!\nEvaluate expression\nTo fix our problem, we need to divide the total score by the number of test scores. To make sure our intended fix is correct, we can use Evaluate Expression. Right-click on `totalScore` in the editor to open the context menu and select Evaluate Expression. Alternatively, use the shortcut ⌥F8 on macOS / Alt+F8 on Windows/Linux.\nEvaluate Expression\n\n\n\nIf we evaluate `totalScore`, we get 25.0, as we can already see in the debugger. However, we can use Evaluate Expression to evaluate other expressions, even ones not currently part of our code. Here we can try out potential solutions. For example, if we evaluate `totalScore / testScores.size()`, we get “8.333333333333334”, which is the expected average. \nEvaluate Expression\n\n\n\nApply fix and rerun tests\nLet’s apply our fix to the code to return `totalScore / testScores.size()` instead of `totalScore` from the method `getAverageScore()`. When we rerun the test, we see that it now passes. Note that you might want to run all tests to make sure that your fix has not had any unintended side effects.\nTest passed\n\n\n\nSince we no longer need the breakpoint, we can remove it, either by clicking the breakpoint in the gutter or by using the shortcut ⌘F8 on macOS / Ctrl+F8 on Windows/Linux.\nRun the application\nNow that we’ve fixed our failing test and all the tests pass, let’s see if our application works correctly. Go to the `Main` class and run it, for example, by clicking the Run button in the gutter.\nDebug an Exception\nWhen we run the application, we see that there seems to be another problem! Our application throws a `DateTimeParseException`, with the message `Text ‘8.7’ could not be parsed at index 0`. Let’s use the debugger to find out what’s wrong. \nDateTimeParseException\n\n\n\nNote that we can create a breakpoint right from the console, by clicking the link Create breakpoint. This opens the Breakpoints dialog, where an Exception Breakpoint has been added for the `DateTimeParseException`.\nCreate Exception Breakpoint\n\n\n\nNow, when we run our application in Debug mode, execution will stop when and where this exception is thrown, so we can figure out what caused it. Execution stops in the `DateTimeFormatter` class. When we expand the `Exception` in the Debug tool window, we see that the `detailMessage` is “Text “8.7” cannot be parsed as a `DateTime`”. That makes sense, as the number 8.7 does not represent a valid date.\nReset frame\nTo find out where the incorrect value comes from, we can go back in the call stack. The call stack is shown in the left pane of the Debug tool window. We see a round arrow in front of the last method that was called. When we hover over this arrow, we see the option to Reset Frame.\nReset Frame\n\n\n\nWe can use Reset Frame to go back to the previous frame. Let’s do so until we get to the point in our code where we try to parse this value into a date. We will need to drop several frames until we get back to our own code. We see that we try to parse a `LocalDate` on line 38 of our `Main` class.\nNote that there are limitations to using Reset Frame; it only resets local variables, not static and instance variables. It also won’t undo any side effects of your application, like console output. While this is not relevant in the current example, you should be aware when you use Reset Frame in the future.\nWe are trying to parse a part of a line from our CSV file. Each line has been split into parts. To see all parts of the current line, click the View link next to the `parts` variable in the Debug tool window. Here we see that “8.7’ is actually a test score, as you might have guessed. We can also see that the line does contain a date, but it is in the next part of the line.\nReset Frame\n\n\n\nAs we can see in our code, we are parsing the same part of the line (`parts[3]`) twice! This looks like a copy-paste error! We should be parsing the part of the line that contains the date, which is `parts[4]`. Let’s fix that by changing line 38 to `var testDate = LocalDate.parse(parts[4]);`\nNote that we could have also gone directly to this line in the code from the console, by clicking the link “Main.java:38” in the console. However, it is useful to know how to set a breakpoint for an exception in case you ever need it.\nGo to line in code from console\n\n\n\nPrint to the console\nIn fact, while we’re here, let’s make sure that we are parsing all the parts of the lines correctly. \nAs we can see in the code just above (on line 25), our CSV file contains a header. Let’s print this header to the console to make sure we parse each part of the line to the correct field. We could add a `System.out.println()` to our code to print the header, but we don’t want to risk print statements ending up in production! Fortunately, there is a better way to do so.\nNon-suspending logging breakpoint\nLet’s create a non-suspending breakpoint, which means that execution will not stop on this breakpoint, and set it to log the line to the console when the breakpoint is hit.\nTo do so, create a breakpoint on line 27. Right-click the breakpoint and click More to open the Breakpoints dialog. Unselect Suspend to make this a non-suspending breakpoint. Next, select Log and Evaluate & log. Set the Evaluate & log field to `”Header: ” + line` and click Done. Notice that the breakpoint is yellow, to signify that this is a non-suspending breakpoint.\nNon-suspending breakpoint\n\n\n\nNow, when we run the application in Debug mode, we see that the header is printed to the console. But so are all the other lines from the file. To print only the header, the breakpoint should be on the next line. We could set a new breakpoint there, but then we’d have to redo the configuration…\nDrag and drop breakpoint\nInstead of creating a new breakpoint, we can drag and drop the existing breakpoint to the next line, preserving its configuration. \nDrag and drop breakpoint\n\n\n\nNow, when we run the application in Debug mode, only the header is printed to the console. Along with the output of our program, of course. It looks like our fields correspond correctly to the headers of the file.\nChecking the functionality of the application\nLet’s run our application again to see if everything is now as it should be. We see that the application runs without errors, but it looks like one of the students has a negative average test score.\nNegative average score\n\n\n\nThat can’t be right! Let’s see what’s going on. We’ll set a breakpoint in the code where we add test scores to the student (line 45 in `Main.java`). When we run our application in Debug mode, execution will stop every time this breakpoint is hit. We can click the Resume Program button (⌥⌘R on macOS / F9 on Windows/Linux), either in the Debug tool window, or inline in the editor, to get to the next test score.\nResume program\n\n\n\nEvery time we click the Resume Program button, we can see the values change both in the inline debugging information in the editor and in the Debug tool window. Execution will stop every time it hits this breakpoint, so for every test score. Since there are a lot of test scores in the file, this is going to take a while… \nResume program\n\n\n\nConditional breakpoint\nAs we are only interested in the test scores for a particular student, we don’t need execution to stop for each test score. Instead of clicking the Resume Program button many times in a row to get to the scores we’re interested in, we can use a conditional breakpoint – which will only halt execution under certain conditions.\nRight-click the breakpoint to open the Line Breakpoint dialog and edit the configuration for the breakpoint. Since we don’t need execution to suspend until we process this particular student’s test scores, we can set the field Condition to `studentName.equals(“Olivia Garcia”)` and click Done. \nConditional breakpoint\n\n\n\nNotice that the breakpoint has a small question mark in it, to signify that it is a conditional breakpoint. Now, when we resume our program, execution will stop only once we get to the test scores for the student whose name we have set in the condition. Here we can see that the test score is negative.\nNegative test score\n\n\n\nAdd watch\nTo see whether all test scores for this student are negative, let’s add a watch to the field `testScore`. Adding a watch makes it easier to explicitly watch the value of a field. Right-click on the variable `testScore` in the Threads & Variables tab in the Debug tool window and select Add to watches from the context menu. The watch will be shown in the right pane of the Debug tool window. \nAdd to Watches\n\n\n\nIf needed, select the Layout Settings icon at the top right of the Debug tool window and select Watches in the list, to show watches in the right pane.\nAdd Watches to Debug tool window\n\n\n\nWhen we click Resume Program and loop over this student’s scores, we see that all her scores are negative. That would explain her negative average… \nThis looks like a problem with the input data. Let’s open the CSV file to correct the scores and make sure Olivia’s scores are no longer negative. We can use multiple carets to fix all scores at the same time.\nIn this example, we can fix our input data ourselves. If you are dealing with user input that you can’t change, consider adding validation to the code, for example, that test scores cannot be negative.\nFinal check\nLet’s run our application one more time to see that everything is in order. We see that average scores are printed to the console for all students, and none of the scores are negative. This is how our application is expected to work. \nFinal check\n\n\n\nConclusion\nIn this blog post, we’ve seen how to use the debugger to find and fix several types of bugs, from problems with the logic in the code, to reasons that exceptions are thrown, and finding problems with input data.\nIs there anything else you’d like to learn about the debugger? Please tell us in the comments!",
        "dc:creator": "Marit van Dijk",
        "comments": "https://blog.jetbrains.com/idea/2025/04/debugging-java-code-in-intellij-idea/#respond",
        "content": "In this blog post, we will look at how to debug Java code using the IntelliJ IDEA debugger. We will look at how to fix a failing test, how to find out where an `Exception` is thrown, and how to find problems with our data. And we will learn some neat tricks about the debugger [&#8230;]",
        "contentSnippet": "In this blog post, we will look at how to debug Java code using the IntelliJ IDEA debugger. We will look at how to fix a failing test, how to find out where an `Exception` is thrown, and how to find problems with our data. And we will learn some neat tricks about the debugger […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=562760",
        "categories": [
          "idea",
          "java",
          "tutorials",
          "debug",
          "debugger",
          "debugging",
          "intelij-idea"
        ],
        "isoDate": "2025-04-24T09:12:11.000Z"
      },
      {
        "creator": "Clara Maine",
        "title": "Is It Still Worth Learning to Code in an AI World?",
        "link": "https://blog.jetbrains.com/education/2025/04/23/is-it-still-worth-learning-to-code/",
        "pubDate": "Wed, 23 Apr 2025 09:17:49 +0000",
        "content:encodedSnippet": "We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses.\nAt first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, and we are even considering disabling AI features in beginner programming courses by default at the request of our learners.\nDuring a time when many companies (including JetBrains) are embracing AI for developer productivity, these choices may seem strange. Shouldn’t students be learning to work with these tools from the beginning? Shouldn’t they be adapting to our new AI world?\nOur choice to move slowly and thoughtfully with regards to our educational AI features is intentional and assisted by our incredible research team. We recognize that LLMs can be incredibly useful to aid understanding of new concepts. However, we also think it is important to understand how these tools help and hurt learners, because there is good evidence they have the potential to do both. \n\n\n\n\nIn an effort to help guide learners during this time, we wrote four blog posts about learning to code in an AI world. This is the first in the series, keep an eye out for the next ones on our blog in the coming months.\nContents\n\nIs it still worth learning to code?\nWhat is computational thinking and how can you develop it?\nHow will careers in programming evolve with AI?\n\nIs it still worth learning to code?\nYes. Aside from its current utility in building software, coding builds computational thinking, strengthens problem-solving skills, and reinforces abstract concepts that are important in many disciplines. Programming skills help demystify the digital worlds we inhabit while giving you the power to actively shape and contribute to them.\nMost experts expect AI to augment future programming jobs, not replace them. Although AI-generated code is becoming increasingly prevalent, skilled people still need to review, debug, and take accountability for the quality of said code. How much of a technical foundation will they need to be able to do that? The safe answer is everything a traditional coder knows. Organizations are willing to pay for this level of expertise because, ultimately, deep knowledge and experience serve as risk mitigation in the face of evolving technology.\n\n\n\n\nEven in a future where software development can be completely automated with a prompt from someone with no technical knowledge, programming is an excellent exercise in a specific kind of thinking. In learning to solve problems computationally, we develop new ways of seeing. With this new set of eyes come new ways to make positive change in the world. This applies to both the physical world we inhabit (notice how many daily inconveniences might be solved by a simple program) and the digital ones (notice how software could be made better).\nNo matter how good the machines get, their adoption is guaranteed to be a long and messy process. Success in navigating this ever-shifting landscape will depend on your ability to adapt to new technology, and robust computational thinking skills will make that process much easier.\nWhat is computational thinking and how can you develop it?\nComputational thinking (sometimes called algorithmic thinking) is a name for the cognitive skills we build when we program. It involves breaking down complex problems into smaller, manageable parts, identifying patterns, and designing step-by-step solutions that can be implemented with code and algorithms.\nEven introductory programming courses naturally develop basic computational thinking. By writing programs to automate tasks, analyze data, or solve challenges, students learn to think in structured, algorithmic ways.\nIf you want to level-up your computational thinking beyond the basics and prepare for the challenges and opportunities of this new era, consider exploring courses that focus on algorithms and data structures. While they seem less practical than courses about specific tools and frameworks, the thinking tools these courses develop will last decades longer than any library or framework which is currently in vogue. \nOur educational research team is also using our open-source plugin to build Cognifire, a low-code learning environment to help students develop their computational thinking. Keep an eye on our newsletter for more information about that in the coming months!\nWe offer free algorithms and data structures courses you can complete in your IDE.\n\n\n\nIf you’re at the beginning of your learning journey, just remember that the challenges and frustrations you encounter when you’re programming are productive in the context of developing these intangible skills and intuitions you’ll need to master programming. Always keep in mind that developing this skill requires practice, reflection, and an openness to facing difficult problems that stretch your mental models.\nHow will careers in programming evolve with AI?\nThe general consensus is that developers will increasingly validate, debug, and communicate about AI-generated code. This will require a deep foundational knowledge, since it’s hard to efficiently debug code you couldn’t have written yourself.\nAt the moment, AI models struggle with broad-scope problems like identifying how changes in one part of a large codebase might affect other interconnected parts. They perform poorly with niche frameworks and tools, lack consistent creativity and deep domain expertise, and only really work if the prompter has given clear and detailed instructions, which is a skill in itself.\n\n\n\n\nWith time, it’s true that many of these shortcomings will improve, but which and how much is hard to say. If there is one thing we do know, it’s that automation is not new to programming, and AI is just another form of it. The job of “programmer” has evolved from doing complicated math by hand to punching machine code into cards, to writing assembly languages, then high-level languages – not to mention adapting to new IDEs and general tools like Git. Learning from history, we see that the tools always change, but the opportunities for people with technical knowledge and high-level reasoning skills continue to flourish. \nLooking into the future, we can expect the same dynamic: the robots are best used for repetitive, predictable work, and everything else will be handled by people. Put concretely, gone are the days of abundant programming jobs with relatively simple, repetitive, and mundane responsibilities.\nSo, does that mean junior developers will be more easily replaced by AI?\nWhile it’s true that roles and duties may change faster for inexperienced programmers than for others, that is because more (but not all) of their responsibilities involve wrestling with the boilerplate code that AI can generate most reliably. This doesn’t mean juniors are going to be replaced by AI – it just means they might spend slightly less time writing code, and more time thinking about it.\nExplore our course catalog\n                                                    \nThis is the first post in our series How to Learn to Program in an AI World, keep an eye out for the next ones on our blog in the coming months.",
        "dc:creator": "Clara Maine",
        "content": "We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses. At first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, [&#8230;]",
        "contentSnippet": "We recently released some new AI features for the JetBrains Academy plugin. Learners will now be able to use machine translation of course content, theory lookup, and AI hints for Kotlin courses. At first glance, these might seem fairly tame. There are no big LLM integrations, JetBrains AI Assistant is not being marketed toward beginners, […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=551833",
        "categories": [
          "jetbrains-academy",
          "ai",
          "ai-assistance",
          "career",
          "developers",
          "for-learners",
          "jetbrainsacademy-2",
          "learn",
          "learn-programming"
        ],
        "isoDate": "2025-04-23T09:17:49.000Z"
      },
      {
        "creator": "Siva Katamreddy",
        "title": "A Practical Guide to Testing Spring Controllers With MockMvcTester",
        "link": "https://blog.jetbrains.com/idea/2025/04/a-practical-guide-to-testing-spring-controllers-with-mockmvctester/",
        "pubDate": "Tue, 22 Apr 2025 13:22:39 +0000",
        "content:encodedSnippet": "Spring Framework 6.2 introduced MockMvcTester to support writing AssertJ style assertions using AssertJ under the hood.\nIf you’re using Spring Boot, the spring-boot-starter-test dependency transitively adds the most commonly used testing libraries such as mockito, assertj, json-path, jsonassert, etc. So, if you’re using Spring Boot 3.4.0 (which uses Spring framework 6.2) or any later version, you don’t need to add any extra dependencies to use MockMvcTester.\nIn this article, we’ll explore how you can use MockMvcTester for different testing scenarios.\nGetting started with MockMvcTester\nMockMvcTester is built on top of MockMvc and provides AssertJ support for writing tests and asserting the result.\nYou can find the sample application code here.\nHere is an example test written using MockMvc:\nimport org.springframework.test.web.servlet.MockMvc;\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n\nclass UserRestControllerTests {\n   @Autowired\n   MockMvc mockMvc;\n\n   @Test\n   void getUserByIdSuccessful() throws Exception {\n       mockMvc.perform(get(\"/api/users/1\")).andExpect(status().isOk());\n   }\n}\nThe same test written using the MockMvcTester fluent API:\nimport org.springframework.test.web.servlet.assertj.MockMvcTester;\nimport static org.assertj.core.api.Assertions.assertThat;\n\nclass UserRestControllerTests {\n   @Autowired\n   MockMvcTester mockMvcTester;\n\n   @Test\n   void getUserByIdSuccessful() {\n      assertThat(mockMvcTester.get().uri(\"/api/users/1\")).hasStatusOk();\n   }\n}\n\n\n\n\nIt is much easier to use the MockMvcTester fluent API rather than using the IDE feature to find the static imports for get(), post(), status(), etc.\nHow to configure MockMvcTester?\nIf you’re writing a slice test for a controller using @WebMvcTest, you can simply inject MockMvcTester.\nThe @WebMvcTest annotation is meta-annotated with @AutoConfigureMockMvc, so a MockMvc instance is auto-configured. If AssertJ is available, then a MockMvcTester instance will also be auto-configured.\n@WebMvcTest(controllers = UserRestController.class)\nclass UserRestControllerTests {\n   @Autowired\n   MockMvcTester mockMvcTester;\n\n   //...\n}\nIf you’re writing an integration test using @SpringBootTest, then you need to add the @AutoConfigureMockMvc annotation to the test class, and you can also inject MockMvcTester.\n@SpringBootTest\n@AutoConfigureMockMvc\nclass UserRestControllerTests {\n   @Autowired\n   MockMvcTester mockMvcTester;\n\n   //...\n}\nIf you’re already using MockMvc, then you can gradually adopt MockMvcTester by creating a MockMvcTester instance from MockMvc:\nclass UserRestControllerTests {\n   @Autowired\n   MockMvc mockMvc;\n\n   MockMvcTester mockMvcTester;\n\n   @PostConstruct\n   void setUp() {\n       mockMvcTester = MockMvcTester.create(mockMvc);\n   }\n\n   //...\n}\nWriting tests using MockMvcTester\nLet’s explore how we can write tests using MockMvcTester in various scenarios.\nTesting REST API JSON response\nAssume we have a REST API endpoint for user registration that returns HTTP code 201 when successful, along with the response JSON payload with name, email, and role properties.\nWe can write a test using MockMvcTester:\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.MediaType;\nimport org.springframework.test.web.servlet.assertj.MockMvcTester;\nimport org.springframework.test.web.servlet.assertj.MvcTestResult;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n@Test\nvoid userRegistrationSuccessful() {\n   String requestBody = \"\"\"\n           {\n               \"email\": \"siva@gmail.com\",\n               \"password\": \"secret\",\n               \"name\": \"Siva\"\n           }\n           \"\"\";\n\n   assertThat(mockMvcTester\n       \t.post()\n       \t.uri(\"/api/users\")\n       \t.contentType(MediaType.APPLICATION_JSON)\n       \t.content(requestBody))\n        .hasStatus(HttpStatus.CREATED)\n        .bodyJson()\n        .isLenientlyEqualTo(\"\"\"\n             {\n               \"name\": \"Siva\",\n               \"email\": \"siva@gmail.com\",\n               \"role\": \"ROLE_USER\"\n             }\n          \"\"\");\n}\nWe have compared the HTTP status code, converted the response body to JSON, and compared it with our expected JSON structure.\nWe can split the code into two parts to execute the request and assert the result:\nMvcTestResult testResult = mockMvcTester\n       .post()\n       .uri(\"/api/users\")\n       .contentType(MediaType.APPLICATION_JSON)\n       .content(requestBody)\n       .exchange();\n\nassertThat(testResult)\n       .hasStatus(HttpStatus.CREATED)\n       .bodyJson()\n       .isLenientlyEqualTo(\"\"\"\n           {\n              \"name\": \"Siva\",\n              \"email\": \"siva@gmail.com\",\n              \"role\": \"ROLE_USER\"\n           }\n         \"\"\");\nSo far, we have compared the response JSON with our expected JSON structure using a multiline string. Instead, we can also store the JSON as a classpath resource and compare them:\nvar expected = new ClassPathResource(\"/user-registration-response.json\", UserRestControllerTests.class);\n\nassertThat(testResult)\n       .hasStatus(HttpStatus.CREATED)\n       .bodyJson()\n       .isLenientlyEqualTo(expected);\nIf you need more control over the response body assertions, you can map the response into a Java object and assert it:\npublic record RegistrationResponse(String name, String email, String role) {}\n\nassertThat(testResult)\n       .hasStatus(HttpStatus.CREATED)\n       .bodyJson()\n       .convertTo(RegistrationResponse.class)\n       .satisfies(response -> {\n           assertThat(response.name()).isEqualTo(\"Siva\");\n           assertThat(response.email()).isEqualTo(\"siva@gmail.com\");\n           assertThat(response.role()).isEqualTo(\"ROLE_USER\");\n       });\nTesting REST API exception handling scenarios\nIt is common practice to use @RestControllerAdvice to handle exceptions centrally:\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\n\n@RestControllerAdvice\npublic class GlobalExceptionHandler {\n\n   @ExceptionHandler(UserAlreadyExistsException.class)\n   public ResponseEntity<Object> handle(UserAlreadyExistsException e) {\n       var error = e.getMessage();\n       return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(error);\n   }\n\n   // more handler methods\n}\nFor user registration, we check the existence of the given email in the database and throw UserAlreadyExistsException if the email already exists. The GlobalExceptionHandler will handle this exception and return the appropriate response.\nWe can write a test to handle this scenario using MockMvcTester:\n@Test\nvoid shouldFailToRegisterWithExistingEmail() {\n   String requestBody = \"\"\"\n           {\n               \"email\": \"admin@gmail.com\",\n               \"password\": \"secret\",\n               \"name\": \"Administrator\"\n           }\n           \"\"\";\n\n   MvcTestResult testResult = mockMvcTester.post()\n           .uri(\"/api/users\")\n           .contentType(MediaType.APPLICATION_JSON)\n           .content(requestBody)\n           .exchange();\n\n   assertThat(testResult)\n           .failure()\n           .isInstanceOf(UserAlreadyExistsException.class)\n           .hasMessage(\"User with email admin@gmail.com already exists\");\n}\nWe have asserted that there is a failure with a specific exception type and the expected error message.\nTesting the Thymeleaf view rendering controllers\nWe can write tests for controllers that handle the request and render a view, such as a Thymeleaf view template.\nLet’s say we have a controller with two handler methods:\nimport jakarta.validation.Valid;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.validation.BindingResult;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.ModelAttribute;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.servlet.mvc.support.RedirectAttributes;\n\n@Controller\npublic class UserController {\n   private final UserRepository userRepository;\n   public UserController(UserRepository userRepository) {\n       this.userRepository = userRepository;\n   }\n\n   @GetMapping(\"/users/{id}\")\n   public String getUserById(@PathVariable Long id, Model model) {\n       var user = userRepository.findById(id);\n       if (user != null) {\n           model.addAttribute(\"user\", user);\n           return \"user\";\n       }\n       return \"not-found\";\n   }\n\n   @PostMapping(\"/users\")\n   public String createUser(@ModelAttribute(\"user\") @Valid User user,\n                            BindingResult bindingResult,\n                            RedirectAttributes redirectAttributes) {\n       userRepository.create(user);\n       if (bindingResult.hasErrors()) {\n           return \"create-user\";\n       }\n       redirectAttributes.addFlashAttribute(\"successMessage\", \"User saved successfully\");\n       return \"redirect:/users\";\n   }\n}\nLet’s write the first test to invoke GET users/{id} and assert the HTTP status code and the model data:\n@Test\nvoid shouldGetUserById() {\n   var result = mockMvcTester.get().uri(\"/users/1\").exchange();\n\n   assertThat(result)\n           .hasStatusOk()\n           .hasViewName(\"user\")\n           .model()\n           \t.containsKeys(\"user\")\n           \t.containsEntry(\"user\", new User(1L, \"Siva\", \"siva@gmail.com\", \"siva\"));\n}\nHere, we assert the expected view name, model attribute name to be user, and the user object data.\nTesting URL redirects and flash attributes\nLet’s write a test to verify the successful scenario of creating a user with valid data:\n@Test\nvoid shouldCreateUserSuccessfully() {\n   var result = mockMvcTester.post().uri(\"/users\")\n           .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n           .param(\"name\", \"Test User 4\")\n           .param(\"email\", \"testuser4@gmail.com\")\n           .param(\"password\", \"testuser4\")\n           .exchange();\n\n   assertThat(result)\n           .hasStatus(HttpStatus.FOUND)\n           .hasRedirectedUrl(\"/users\")\n           .flash().containsKey(\"successMessage\")\n           .hasEntrySatisfying(\"successMessage\",\n                   value -> assertThat(value).isEqualTo(\"User saved successfully\"));\n}\nWe have submitted the form with valid data and asserted the expected behavior that the user will be redirected to the new URL /users with a successMessage flash attribute.\nTesting model validation errors\nWhen a form is submitted with invalid data, we usually redisplay the form with error messages.\nLet’s see how we can test the form field validation errors:\n@Test\nvoid shouldGetErrorsWhenUserDataIsInvalid() {\n   var result = mockMvcTester.post().uri(\"/users\")\n           .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n           .param(\"name\", \"\") // blank -invalid\n           .param(\"email\", \"testuser4gmail.com\") // invalid email format\n           .param(\"password\", \"pwd\") // valid\n           .exchange();\n\n   assertThat(result)\n           .model()\n           .extractingBindingResult(\"user\")\n           .hasErrorsCount(2)\n           .hasFieldErrors(\"name\", \"email\");\n}\n\n\n\n\nHere, we have submitted the form with invalid values for the name and email fields and asserted the expected error details.\nSimilarly, you can assert the expected headers, cookies, multipart requests, etc.\nSummary\nAs you have seen in this article, MockMvcTester helps you to write tests using a fluent API and provides many custom assertions to verify the results more expressively.\nTo learn more about MockMvcTester, you can check out the official documentation here.\nIf you’re using Spring Boot 3.4.0 or a later version, you can start using MockMvcTester to write more expressive tests using a fluent API. If you’re using an older version, then MockMvcTester could be a solid reason to consider upgrading!",
        "dc:creator": "Siva Katamreddy",
        "content": "Spring Framework 6.2 introduced MockMvcTester to support writing AssertJ style assertions using AssertJ under the hood. If you’re using Spring Boot, the spring-boot-starter-test dependency transitively adds the most commonly used testing libraries such as mockito, assertj, json-path, jsonassert, etc. So, if you’re using Spring Boot 3.4.0 (which uses Spring framework 6.2) or any later version, [&#8230;]",
        "contentSnippet": "Spring Framework 6.2 introduced MockMvcTester to support writing AssertJ style assertions using AssertJ under the hood. If you’re using Spring Boot, the spring-boot-starter-test dependency transitively adds the most commonly used testing libraries such as mockito, assertj, json-path, jsonassert, etc. So, if you’re using Spring Boot 3.4.0 (which uses Spring framework 6.2) or any later version, […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=557045",
        "categories": [
          "idea",
          "java",
          "springboot-2",
          "mockmvc",
          "mockmvctester",
          "spring",
          "testing"
        ],
        "isoDate": "2025-04-22T13:22:39.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "CI/CD Security Best Practices",
        "link": "https://blog.jetbrains.com/teamcity/2025/04/ci-cd-security-best-practices/",
        "pubDate": "Tue, 22 Apr 2025 12:57:38 +0000",
        "content:encodedSnippet": "Software development moves fast – really fast. It can also involve multiple teams working from different locations around the world. However, while speed and collaboration can be great for developers and businesses, they can also create security challenges. \nWith more entry points and less time to catch potential threats, each commit, build, and deployment is another opportunity for something to go wrong. Whether that’s a security breach, malicious attack, or accidental exposure, the impact can ripple through your chain and burden every application.\nThat’s where CI/CD security comes in. Learn what securing your CI/CD pipeline means for your team, the main risks you need to be aware of, and the practical steps to safeguard your flow.\nWhat is CI/CD security, and why is it important?\nCI/CD security is a set of practices and controls that protects the entire software delivery process. It prioritizes keeping your code safe from the very start, is built in rather than a separate phase, and is integral to DevSecOps.\nYour CI/CD pipeline has access to tons of sensitive information, including codebases, credentials, and production environments. If compromised, attackers could inject malicious code, steal data, or even gain access to your systems (as they did in the SolarWinds attack).\nAside from these catastrophic breaches, proper CI/CD security helps prevent mistakes, which could expose sensitive data or introduce vulnerabilities. Malicious employee or contractor behavior shouldn’t be overlooked here, either – 20% of businesses cited this as a cause of their data breaches. CI/CD security is both a shield and a safety net in one.\n\n\n\n\nWith development automation, changes can go from a laptop to production in minutes, and CI/CD security needs to ensure it doesn’t slow down the process. Acceleration is great for business agility, but giving attackers a fast track to your systems is hazardous. In fact, less than 10% of companies in 2022 had implemented hack monitoring in their software development lifecycle. \nHowever, get CI/CD security right, and you can have both speed and reliability.\nCI/CD pipeline security threats\nYour CI/CD pipeline has several potential weak points, including: \nSource-code repositories: Where your application code and configuration files live, the starting point of your pipeline.\nBuild servers: The systems that compile your code, run tests, and package your applications. They handle sensitive operations and often have elevated privileges.\nArtifact storage: Where your compiled applications, container images, and packages are stored before deployment. \nDeployment environments: The staging and production systems where your applications run (including cloud platforms and traditional servers).\nThese components face threats from various angles, such as: \nSupply chain attacks: Harmful code can sneak in through compromised third-party tools, libraries, or dependencies used in your application.\nStolen passwords and secrets: Attackers may find exposed credentials in pipeline configurations or scripts. These threats can take a long time to identify and contain – 292 days, according to one report. \nConfiguration mistakes: Small errors in setup can enable attackers to bypass security or gain more access than they should have.\nInsider threats: Developers with pipeline access might accidentally or intentionally introduce vulnerabilities.\nServer breaches: Attackers can get access to the computers that run your build and deployment process.\nThe interconnected nature of CI/CD means that compromising just one part can affect everything in the system.\n\n\n\n\nTips for securing your CI/CD pipeline\nThe most effective CI/CD security involves building multiple layers of protection throughout your pipeline. Rather than implementing a single tool or simply following a checklist, you should set up security checkpoints at every stage.\nEmploy CI/CD access controls\nProtect your pipeline by implementing strict access controls and applying the principle of least privilege. \nUse role-based access control (RBAC) to ensure team members only have the access they absolutely need for their specific roles. To prevent unauthorized code changes, set up mandatory code reviews, enable branch protection rules, and use signed commits.\nRemember to regularly audit these permissions and remove access when team members leave.\nManage secrets effectively\nNever, ever hardcode credentials into your pipeline configurations or code. Instead, use dedicated secrets management tools (such as HashiCorp Vault) to securely store and manage sensitive information.\nRotate these credentials regularly (ideally automatically) and ensure secrets are encrypted both in transit and at rest. It’s also best to use temporary credentials where possible.\nIntegrated security testing\nMake security testing a natural part of your pipeline by putting multiple testing layers in place.\nCertain tools can help you catch vulnerabilities before they reach production:\nStatic Application Security Testing (SAST) analyzes your source code for security vulnerabilities.\nDynamic Application Security Testing (DAST) tests running applications.\nInteractive Application Security Testing (IAST) is used for runtime analysis.\nSoftware Composition Analysis (SCA) checks third-party dependencies.\nConfigure these tests to run automatically with each build and block deployments if any security issues are found.\n\n\n\n\nSecure the development and deployment environment\nEnsure your build environments are as secure as your production systems – they’re just as important, if not more. \nHarden your build servers by removing unnecessary services, keeping systems patched, and using minimal base images. Implement network segmentation to isolate build environments from each other and other systems.\nIf you can, consider using temporary infrastructure. This method allows you to create fresh environments for each build and destroy them afterward.\nAutomate security scans\nSet up automated security scanning throughout your pipeline. Use container scanners to check for vulnerabilities in container images, dependency checkers to identify known vulnerabilities in libraries, and registry scanners to ensure the security of stored artifacts. \nEstablish vulnerability thresholds (what level is considered suspicious or a threat) and automatically stop deployments that don’t meet your security standards. Schedule regular scans of your artifacts to ensure you’re aware of new or emerging vulnerabilities.\nMonitor and alert\nImplement comprehensive monitoring for your CI/CD pipeline. Track all activities and watch for unusual patterns like builds at odd hours, unexpected configuration changes, strange resource usage, and deployment events.\nUse detailed logging and set up alerts, making sure your team knows how to respond if something suspicious is found. Security information and event management (SIEM) are great CI/CD security tools – they correlate security events and enable real-time threat detection and response.\nPerform regular security audits and assessments\nRegularly test your CI/CD pipeline security using different methods:\nPenetration testing identifies potential vulnerabilities before attackers do.\nRed team exercises simulate ‘real’ attacks, while blue team exercises let you practice your incident response.\nPurple team exercises are used to improve both your offensive and defensive capabilities.\nCheck your compliance with your local security standards and regulations, and update your controls based on the results of your assessments.\nHow TeamCity can help\nSecurity in your CI/CD pipeline is a must for protecting your software supply chain. While the threats are real, with the right tools and practices, you can build and deploy software securely without slowing down your team or minimizing their efforts.\nTeamCity makes this easier with security features that grow with your needs.\n\nTeamCity On-PremisesTeamCity Cloud\n🖥️ Installed and fully managed by your team☁️ Hosted and managed by JetBrains\n🔐 Full control over infrastructure and network🔒 Zero-maintenance, secure-by-default CI/CD environment\n🗝️ SSH key management🗝️ SSH key management\n🔄 Custom secrets management integrations (e.g., HashiCorp Vault, AWS KMS)🔄 Custom secrets management integrations (e.g., HashiCorp Vault, AWS KMS)\n📦 Artifact storage and access managed internally📦 Secure artifact storage with access control\n🔍 Customizable logging and monitoring tools📜 Built-in user audit logs and integrated monitoring\n🔧 Highly customizable for specific compliance needs✅ Compliant with industry standards and suitable for regulated industries\n👥 Ideal for teams with strict infrastructure or data residency policies🏢 Great for teams who want secure CI/CD without infrastructure management\n\n\n\n\n\nDeliver secure software without compromising on speed or performance. Try TeamCity for free now.\n💡See also: [Whitepaper] 9 Ways to Prevent a Supply Chain Attack on Your CI/CD Server",
        "dc:creator": "Olga Bedrina",
        "content": "Software development moves fast – really fast. It can also involve multiple teams working from different locations around the world. However, while speed and collaboration can be great for developers and businesses, they can also create security challenges.&#160; With more entry points and less time to catch potential threats, each commit, build, and deployment is [&#8230;]",
        "contentSnippet": "Software development moves fast – really fast. It can also involve multiple teams working from different locations around the world. However, while speed and collaboration can be great for developers and businesses, they can also create security challenges.  With more entry points and less time to catch potential threats, each commit, build, and deployment is […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=562582",
        "categories": [
          "best-practices",
          "how-tos",
          "security",
          "how-to"
        ],
        "isoDate": "2025-04-22T12:57:38.000Z"
      },
      {
        "creator": "Razmik Seysyan",
        "title": "Aqua Sunset",
        "link": "https://blog.jetbrains.com/qa/2025/04/aqua-sunset/",
        "pubDate": "Tue, 22 Apr 2025 12:16:52 +0000",
        "content:encodedSnippet": "Aqua was originally developed as a dedicated IDE for QA engineers working in automated testing. After carefully evaluating adoption rates, market trends, and user feedback, we have made the difficult decision to discontinue the product. While this was not an easy choice, Aqua did not reach the level of adoption we had anticipated.\nWe believe that integrating Aqua’s capabilities into our existing JetBrains IDEs through the Test Automation plugin will offer a more seamless and sustainable solution for our users. This shift allows us to focus on enhancing our core products and delivering even greater value to our customers.\n\n\n\n\nWhat’s next for Aqua users?\nWe understand that transitions can be challenging, and we are committed to making this process as smooth as possible. To support our users, we are offering multiple transition options and have outlined a comprehensive migration plan to help ensure a seamless experience.\nFor commercial license holders:\nAqua licenses will be automatically upgraded to All Products Pack licenses, providing immediate access to the latest versions of IntelliJ IDEA Ultimate, WebStorm, or any other JetBrains IDE.\nAll Products Pack licenses purchased before April 22, 2025, will continue to provide a valid Aqua license.\nOur standard refund policy applies to recent purchases.\n\n\n\n\nFor non-commercial license holders:\nWe’re offering users with a non-commercial Aqua license a WebStorm non-commercial license as an alternative.\nAdditionally, we are offering a 40% discount on an All Products Pack license, valid for one year from the transition date.\nTest Automation plugin\nAlthough Aqua as a standalone product is being retired, all of its core capabilities will remain available through the Test Automation plugin, which is available in IntelliJ IDEA Ultimate, PyCharm, and WebStorm (including for non-commercial license users), as well as other JetBrains IDEs. This ensures that users can continue leveraging test automation framework support within the JetBrains ecosystem.\n\n\n\n\nThank you\nWe want to express our deepest gratitude to the Aqua community – your feedback, support, and engagement have been invaluable. While this marks the end of Aqua’s journey, it is also the beginning of a new chapter where test automation continues to thrive within JetBrains’ broader suite of tools.\nFor any questions or additional support, please don’t hesitate to get in touch with our team.\nThe JetBrains team\n\n\n\n\nFAQ\nBelow, we have compiled answers to the most common questions regarding the discontinuation of Aqua and the migration options available.\nWhy is Aqua being discontinued?\nAqua has not reached the level of adoption we initially envisioned. After evaluating market trends and user feedback, we have decided to consolidate its capabilities into the broader JetBrains ecosystem through the Test Automation plugin, allowing us to focus on widely adopted solutions that better serve our customers.\nWhat is the latest Aqua release?\nThe final release of Aqua is version 2024.3. There will be no further regular updates (except vulnerability fixes), and support will be gradually phased out.\nWill I still be able to use Aqua after April 22, 2025,?\nYes, if you have a valid license before April 22, 2025, you can continue using Aqua beyond the sunset date. We will no longer sell new subscriptions or renew existing ones for Aqua.\nWhat alternatives are available for Aqua users?\nAll of Aqua’s core capabilities remain available via the Test Automation plugin, which is included in IntelliJ IDEA Ultimate, PyCharm, WebStorm (including with a non-commercial license), and several other JetBrains IDEs.\nWhat will happen to my Aqua license?\nFor commercial license holders:\nYour current Aqua license will be automatically upgraded to an All Products Pack license, providing immediate access to the latest versions of IntelliJ IDEA Ultimate, WebStorm, or any other JetBrains IDE. This applies for the time left on your current license with no extra costs. Please note that auto-renewal will be disabled.\nAll Products Pack licenses purchased before April 22, 2025, will continue to provide a valid Aqua license.\nOur standard refund policy applies to recent purchases. [How can I get a refund?]\n\n\n\n\nFor non-commercial license holders:\nYou have the option to apply for a WebStorm non-commercial license.\nYou can get a 40% discount on a one-year All Products Pack license. This discount is valid for one year from the transition date.\nHow do I install the Test Automation plugin?\nTo install the Test Automation plugin, open your JetBrains IDE and go to Settings > Plugins. Find the plugin by searching for “Test Automation plugin” in the Marketplace tab. Click Install, and then restart your IDE to activate it.\n\n\n\n\nWill there be support for migration?\nYes, limited support will be available to help users transition. Additional resources and guidance will be provided via our documentation and support channels.\nWhat should I do if I recently purchased an Aqua license?\nOur standard refund policy applies to recent purchases. If you have questions about your eligibility for a refund, please contact JetBrains support.\n[How can I get a refund?]\nWhere can I find more information or assistance?\nFor any further questions or support inquiries, please visit our support page or reach out to us directly.\nWe sincerely appreciate the Aqua community’s support and look forward to continuing to provide powerful test automation solutions within our JetBrains IDEs.",
        "dc:creator": "Razmik Seysyan",
        "content": "Aqua was originally developed as a dedicated IDE for QA engineers working in automated testing. After carefully evaluating adoption rates, market trends, and user feedback, we have made the difficult decision to discontinue the product. While this was not an easy choice, Aqua did not reach the level of adoption we had anticipated. We believe [&#8230;]",
        "contentSnippet": "Aqua was originally developed as a dedicated IDE for QA engineers working in automated testing. After carefully evaluating adoption rates, market trends, and user feedback, we have made the difficult decision to discontinue the product. While this was not an easy choice, Aqua did not reach the level of adoption we had anticipated. We believe […]",
        "guid": "https://blog.jetbrains.com/?post_type=qa&p=561088",
        "isoDate": "2025-04-22T12:16:52.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Qodana For Code Quality in STEM",
        "link": "https://blog.jetbrains.com/qodana/2025/04/qodana-for-code-quality-in-stem/",
        "pubDate": "Tue, 22 Apr 2025 10:37:18 +0000",
        "content:encodedSnippet": "Your code drives discovery. Keep it precise.\nIn STEM fields, software isn’t just a product, it underpins innovation, research, and life-critical infrastructure. Qodana brings advanced static code analysis to STEM software projects, helping ensure code quality, security, and compliance where it matters most.\nQodana for STEM\nWhy code quality matters in STEM\nSoftware in science, technology, engineering, and mathematics is used for modeling, simulation, automation, and large-scale data analysis. A single error can compromise results, waste resources, or even put safety at risk. Qodana ensures your code is:\nClean and consistent across teams.\n\n\n\n\nSecure and compliant from day one.\n\n\n\n\nOptimized and performant for data-heavy workloads.\n\n\n\n\nReliable and reproducible for research and innovation.\n\n\n\n\n\nHow Qodana helps STEM teams\nSTEM fields rely heavily on custom-built software to support modeling, simulation, automation, and data analysis. Qodana ensures that this critical code is secure, maintainable, and free of costly defects, without slowing down development.\nSafeguard scientific software\nQodana helps detect bugs, code smells, and logic flaws early, so your research tools and simulation engines stay reliable and reproducible.\nSecure your infrastructure\nAutomatically catch and fix security vulnerabilities in software supporting robotics, engineering design tools, or AI/ML workflows before they become real-world risks.\nMaintain confidence in complex systems\nWhether you’re handling sensitive healthcare datasets or designing systems for aerospace, Qodana enforces code standards that support long-term stability, compliance, and auditability.\nGet seamless Integration from IDE to CI/CD\nWith deep integrations into JetBrains IDEs, VS Code, and popular CI tools like GitHub Actions, TeamCity, and GitLab, Qodana fits right into your workflow – scanning code as it’s written and delivering insights instantly.\nStay compliant and in control\nQodana performs license audits and helps prevent legal or regulatory issues – crucial in STEM fields where compliance is non-negotiable.\nSet automated quality gates\nEstablish strict go/no-go thresholds for code quality and coverage. Qodana ensures your builds only pass when the code meets your team’s safety and performance standards.\n\n\n\n\nReal benefits for STEM teams \nIncreased reliability of mission-critical code – check for bugs, license issues, and security vulnerabilities.\n\n\n\n\nFaster collaboration across interdisciplinary teams – try our organization-wide dashboard and access everything in your pipeline.\n\n\n\n\nReduced manual review effort with automated checks – make sure nothing slips through the cracks.\n\n\n\n\nStronger foundations for innovation and experimentation – more safety means less risk when trying something new.\n\n\n\n\nConfidence in manual and AI-assisted development through validation.\n\n\n\n\nWhy Qodana?\nQodana is developed by JetBrains, which creates tools that are trusted by millions of developers. It integrates easily into CI/CD pipelines and IDEs, and supports multiple languages and frameworks used in STEM research. Plus, Qodana is SOC2 certified – ensuring your data, and those of your patients, coworkers, and beneficiaries, is always protected. \nEmpowering discovery, one line of code at a time\nWhether you’re building the next breakthrough drug, simulating a new type of aircraft, or decoding planetary data, Qodana helps ensure that you know as much about your code as you do about your field of study.\nQodana for STEM",
        "dc:creator": "Kerry Beetge",
        "content": "Your code drives discovery. Keep it precise. In STEM fields, software isn’t just a product, it underpins innovation, research, and life-critical infrastructure. Qodana brings advanced static code analysis to STEM software projects, helping ensure code quality, security, and compliance where it matters most. Qodana for STEM Why code quality matters in STEM Software in science, [&#8230;]",
        "contentSnippet": "Your code drives discovery. Keep it precise. In STEM fields, software isn’t just a product, it underpins innovation, research, and life-critical infrastructure. Qodana brings advanced static code analysis to STEM software projects, helping ensure code quality, security, and compliance where it matters most. Qodana for STEM Why code quality matters in STEM Software in science, […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=562559",
        "categories": [
          "case-study-qodana",
          "qodana",
          "code-analysis",
          "stem"
        ],
        "isoDate": "2025-04-22T10:37:18.000Z"
      },
      {
        "creator": "Jan-Niklas Wortmann",
        "title": "Discord for WebStorm: Less Noise, More Signal",
        "link": "https://blog.jetbrains.com/webstorm/2025/04/discord-for-webstorm-less-noise-more-signal/",
        "pubDate": "Tue, 22 Apr 2025 08:00:00 +0000",
        "content:encodedSnippet": "TLDR: We’ve revamped the JetBrains Community Discord with dedicated WebStorm channels for announcements, discussions, help, and Q&As to create a more valuable community resource. We’ll have live office hours on April 23rd to connect directly with our team. Not part of our Discord community yet? Join the JetBrains Community Discord here to start connecting with fellow WebStorm users and the development team.\nThe JetBrains Community Discord server has been around for a while now, but it’s been challenging for us to use it in a way that truly benefits the community. We’ve seen its potential, but without the right structure and attention, we just haven’t been able to keep up with it.\nWe do want to change that. We’re committed to making the Discord channel a more useful, welcoming place for everyone in the WebStorm community. We believe this space can become an invaluable resource for developers to ask questions, share knowledge, and ultimately grow professionally. In this blog post, we’ll outline how we plan to accomplish this through thoughtful restructuring and active engagement.\nWhat’s Changing: Channel Structure That Makes Sense\nPreviously, we had a single WebStorm channel that served all purposes – from announcements to help requests to general discussions. This made it difficult for our team to stay on top of conversations and for community members to find relevant information.\nTo address this, we’re creating a more structured approach with different channels catering to the various needs of our community:\n#webstorm-announcements\nThis is going to be read-only and will be used by our team to make general announcements about releases, roadmaps, and upcoming events.\n#webstorm-general\nSometimes it can be nice to have a more unstructured format, fostering organic conversation and exchange within the community. That’s exactly what #webstorm-general is going to be for.\n#webstorm-help-hub\nWe will utilize a forum channel, which is easier for everyone who actively seeks help. This is going to be the place to go if you have a feature request, run into a bug, or are unsure how to proceed. \n#webstorm-ama\nSometimes you might have questions that are not necessarily a bug or a feature request, but we do want to provide any kind of transparency we can. So, in case you have any questions, feel free to ask them here. \nLive Events: Direct Access to the People Who Built It\nTalk is cheap. We’re putting our time where our Discord is with an upcoming event:\nLive Office Hours – April 23rd\nTogether with the WebStorm dev team, we want to have a more open dialogue with you. For that very purpose, we are doing live office hours in Discord in #webstorm-office-hours. This will be a great place for you to directly interact with our team and ask any questions you might have. The office hours will be on April 23rd at 4:00 pm CEST/10:00 am EDT, where we will also show some of the new features of the 2025.1 release.\nWhy This Actually Matters\nDeveloper tooling is only as good as the knowledge surrounding it. The most powerful features of WebStorm often remain undiscovered, not because they don’t exist, but because knowledge sharing happens in fragmented, disorganized spaces, and discoverability of features can be very hard if you don’t know about their existence.\nA well-structured community isn’t a nice-to-have — it’s the difference between leveraging 20% of WebStorm’s capabilities and unlocking the full power of your IDE. We hope that this can be a meaningful step in that direction!\nJoin Us\nThe WebStorm Discord isn’t just another Slack alternative or a marketing channel. It’s a technical resource built by developers for developers.\nJoin us on Discord.\nThe WebStorm team",
        "dc:creator": "Jan-Niklas Wortmann",
        "content": "TLDR: We&#8217;ve revamped the JetBrains Community Discord with dedicated WebStorm channels for announcements, discussions, help, and Q&#38;As to create a more valuable community resource. We’ll have live office hours on April 23rd to connect directly with our team. Not part of our Discord community yet? Join the JetBrains Community Discord here to start connecting with [&#8230;]",
        "contentSnippet": "TLDR: We’ve revamped the JetBrains Community Discord with dedicated WebStorm channels for announcements, discussions, help, and Q&As to create a more valuable community resource. We’ll have live office hours on April 23rd to connect directly with our team. Not part of our Discord community yet? Join the JetBrains Community Discord here to start connecting with […]",
        "guid": "https://blog.jetbrains.com/?post_type=webstorm&p=562355",
        "categories": [
          "news",
          "community",
          "discord",
          "webstorm",
          "webstorm-2025-1"
        ],
        "isoDate": "2025-04-22T08:00:00.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Taint Analysis: Exploring Hidden Dangers in Your Team’s Code",
        "link": "https://blog.jetbrains.com/qodana/2025/04/taint-analysis-exploring-hidden-dangers-in-your-team-s-code/",
        "pubDate": "Mon, 21 Apr 2025 20:22:19 +0000",
        "content:encodedSnippet": "Join us for an engaging roundtable discussion where our panel of developers will share their firsthand insights on the latest Taint Analysis from JetBrains. Discover how critical checks can improve codebase security and be easily implemented in your code review process.\n\n\n\n\nSession abstract\nWhether you’re new to JetBrains or looking to deepen your understanding of IntelliJ IDEA, Qodana, or codebase security, this session will provide practical insights from renowned experts on how security analysis works and how it can help you secure your team’s code. \nYou’ll learn:\nWhat led to the creation of Taint Analysis from IntelliJ IDEA and Qodana.\nEffective strategies for addressing vulnerabilities.\nBest practices for securing your applications and why our developers recommend it.\n\n\n\n\n\nPlus, take part in the conversation by staying for the post-discussion Q&A session, where you’ll get answers to your most pressing questions. \nYour speaker and host\nJan-Niklas Wortmann, Developer Advocate at JetBrains  \nOutside of fine-tuning the developer experience at JetBrains, Jan is a Google Developer Expert for Angular and a part of the RxJS Core team. He’ll be facilitating the discussion.\n \nYour roundtable participants\nAlexander Kirillin\nAlexander is a senior software developer at JetBrains, specializing in dataflow analyzers. He works on the CLion team and also helps develop security analysis for Qodana. In his free time, he enjoys skiing in the mountains during winter and riding bicycles or motorcycles in summer.\nGrigorii Liullin\nGrigorii is a security specialist and software developer who likes SAST tools. He’s dedicated to identifying vulnerabilities and enhancing application security. When he’s not writing or analyzing code, he can often be found jogging or playing video games.\nDima Kopfmann\nDima is a senior software developer and leads the taint analysis team at Qodana. When he’s not coding and looking for new ways to support secure applications, you can find him immersing himself in Japanese culture or spending time with his family\nWe hope to see you there!\nHappy developing!\nSave Your Spot",
        "dc:creator": "Kerry Beetge",
        "content": "Join us for an engaging roundtable discussion where our panel of developers will share their firsthand insights on the latest Taint Analysis from JetBrains. Discover how critical checks can improve codebase security and be easily implemented in your code review process. Session abstract Whether you&#8217;re new to JetBrains or looking to deepen your understanding of [&#8230;]",
        "contentSnippet": "Join us for an engaging roundtable discussion where our panel of developers will share their firsthand insights on the latest Taint Analysis from JetBrains. Discover how critical checks can improve codebase security and be easily implemented in your code review process. Session abstract Whether you’re new to JetBrains or looking to deepen your understanding of […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=562397",
        "categories": [
          "livestream",
          "livestreams",
          "security",
          "taint-analysis"
        ],
        "isoDate": "2025-04-21T20:22:19.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Leah Tran",
        "title": "Effortless adjustments with an adaptive paste",
        "link": "https://devblogs.microsoft.com/visualstudio/effortless-adjustments-with-an-adaptive-paste/",
        "pubDate": "Wed, 23 Apr 2025 14:51:46 +0000",
        "content:encodedSnippet": "Find yourself needing to adjust pasted code to actually work in your project? Visual Studio 2022 introduces the capability to adapt your pasted code with Copilot to reduce the time you spend on making tedious changes.\nStreamline manual code modifications with adaptive paste\nWhen you’re copying and pasting code, the process often comes with extra steps. Adjusting parameters, correcting styling, or fixing even the most minor errors can slow down your workflow. These small, repetitive tasks add up and disrupt your focus. Addressing these challenges, Visual Studio introduces a new Copilot-powered capability that adapts pasted code seamlessly, saving you time and effort.\nThis feature intelligently adapts pasted code to your solution’s context, incorporating the new code into your existing project by:\nAligning syntax and styling with the document\nInferring parameter adjustments\nFixing minor errors\nSupporting language translation, human and code-based\nCompleting patterns or filling in blanks\nExample: Implementing interface members\nImagine you’re working with a `Math` class that implements the `IMath` interface. You copy and paste the implementation for the `Ceiling` method into the same file. Adapting the pasted code will adjust the code to implement the missing `Floor` method, completing the interface for you.\n\nHow to use it\nThe adaptive paste springs into action the moment you perform a regular paste using `Ctrl+V`, assuming the pasted code has at least three lines. When the “Tab to adapt” suggestion action appears, you can press the `TAB` key to request a suggestion. You’ll then see a diff that compares the original pasted code with the adjusted version, so you can preview changes before they’re applied.\nTry adaptive paste in Version 17.14 Preview 3\nStarting in Visual Studio 2022 version 17.14 Preview 3, you can try adaptive paste by turning on the option:\nTools > Options > GitHub > Copilot > Editor > Enable Adaptive Paste.\nOnce activated, adaptive paste becomes a helpful tool in your workflow. Whether you’re integrating new snippets, fixing small errors, or streamlining patterns, it supports you in coding more efficiently.\nCheck out the new Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nAppreciation for your feedback\nYour feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post Effortless adjustments with an adaptive paste appeared first on Visual Studio Blog.",
        "dc:creator": "Leah Tran",
        "comments": "https://devblogs.microsoft.com/visualstudio/effortless-adjustments-with-an-adaptive-paste/#respond",
        "content": "<p>Find yourself needing to adjust pasted code to actually work in your project? Visual Studio 2022 introduces the capability to adapt your pasted code with Copilot to reduce the time you spend on making tedious changes. Streamline manual code modifications with adaptive paste When you&#8217;re copying and pasting code, the process often comes with extra [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/effortless-adjustments-with-an-adaptive-paste/\">Effortless adjustments with an adaptive paste</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Find yourself needing to adjust pasted code to actually work in your project? Visual Studio 2022 introduces the capability to adapt your pasted code with Copilot to reduce the time you spend on making tedious changes. Streamline manual code modifications with adaptive paste When you’re copying and pasting code, the process often comes with extra […]\nThe post Effortless adjustments with an adaptive paste appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253081",
        "categories": [
          "Copilot",
          "Productivity",
          "Visual Studio"
        ],
        "isoDate": "2025-04-23T14:51:46.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "\r\n                            Ranjitha Gurunath Kulkarni,James Johnson\r\n            \t\t\t",
        "title": "Building Dash: How RAG and AI agents help us meet the needs of businesses",
        "link": "https://dropbox.tech/machine-learning/building-dash-rag-multi-step-ai-agents-business-users",
        "pubDate": "Thu, 24 Apr 2025 06:00:00 -0700",
        "content:encodedSnippet": "Knowledge workers today face myriad challenges in managing their digital workflows. Information is often scattered across multiple applications and formats, and finding the right document, message, or piece of information can be both tedious and time-consuming. This fragmentation creates two major problems for businesses: it hinders collaboration and productivity, and it can lead to costly security issues.\nTo address these challenges, we launched Dropbox Dash, a universal search and knowledge management product that combines AI-powered features with in-depth content access control. Designed to help knowledge workers organize their digital lives, Dash allows users to find, organize, share, and secure content across their apps so they can focus on the work that matters most.\nAt its core, Dash is a universal search product powered by many machine learning technologies and supercharged by generative AI. It offers a powerful AI-driven search experience with advanced filtering capabilities that allow users to quickly locate the information they need, regardless of where it’s stored. With granular access controls, Dash also makes sure employees and external partners see only the right content so that sensitive company information isn’t surfaced unintentionally. And with advanced AI features, Dash can summarize, answer questions, surface insights, and generate drafts.\nThroughout our development process, we experimented extensively and explored numerous solutions to build an AI product for businesses. In order to meet the challenges of modern work in data-intensive environments, we ultimately turned to retrieval-augmented generation (RAG) and AI agents. Additionally, we engineered a minimal Python interpreter focused exclusively on essential features required by our AI agents and supported by extensive testing and security reviews to ensure safe code execution.\nIn the following sections, we’ll dive into the specific challenges we faced while building Dash, the innovative solutions we developed to address them, and important lessons that’ll inform our work moving forward.\n\r\n\r\n \r\n\r\n@font-face {\r\nfont-family: 'AtlasGrotesk';\r\nsrc: url('https://cdn.prod.website-files.com/65dcd70b48edc3a7b446950e/65dce019c63112e617513c94_AtlasGrotesk-Medium-Web-vfl38XiTL.woff2') format('woff2');\r\nfont-weight: 500;\r\nfont-style: normal;\r\nfont-display: swap;\r\n}\r\n\r\n@font-face {\r\nfont-family: 'AtlasGrotesk';\r\nsrc: url('https://cdn.prod.website-files.com/65dcd70b48edc3a7b446950e/65dce019711b648fd1ccd24a_AtlasGrotesk-Regular-Web-vflk7bxjs.woff2') format('woff2');\r\nfont-weight: 400;\r\nfont-style: normal;\r\nfont-display: swap;\r\n}\r\n.xf-content-height {margin: 0;}\r\n#cta { font-family: AtlasGrotesk,sans-serif; font-size: .900rem; text-decoration: none; background: #f7f5f2; line-height: 1.69; box-sizing: border-box;}\r\n#cta-box { padding: 15px 20px 15px 20px; }\r\n#cta-hed {font-weight: 500;}\r\n#cta-indent {border-left: 5px solid #1e1919; padding-left:20px;}\r\n#cta a:link, #cta a:visited  {text-decoration: none;}\r\n#cta p { margin: 5px 0px 0px 0px; }\r\n\r\n.dr-theme-dark #cta {background: #000;}\r\n.dr-theme-dark #cta-box {border: 1px solid; border-bottom: 0;}\r\n.dr-theme-dark #cta-indent {border-left: 5px solid #f7f5f2;}\r\n.dr-theme-dark .button {background: #000;}\r\n\r\n.button {\r\n    background-color: #1e1919;\r\n    color:  #f7f5f2;\r\n    height: 2.5rem;\r\n    padding: 10px 5px 10px 20px;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    line-height: 1.2;\r\n    transition: all .3s;\r\n}\r\n\r\n.button:hover { background-color: #0061ff; }\r\n\r\nimg {vertical-align: middle; padding: 0px 1px 2px 0px;}\r\n\r\n.c17-plain-html {margin-bottom: 50px}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n Dropbox Dash: Find anything. Protect everything.\n\r\n\r\nFind, organize, and protect your work with Dropbox Dash. Now with advanced search for video and images—plus generative AI capabilities across even more connected apps.\n\r\n\r\n\r\n\r\n\r\n\nSee what's new →\n\r\n\r\n\r\n\n\n    \n\n\n\n    \n\n\n\nChallenges in making an AI product that’s ready for businesses\nBuilding an AI product like Dash presents a unique set of challenges that differ from those that developers typically encounter with consumer-facing applications. These challenges stem from the inherent complexities of business data environments, which are characterized by diversity, fragmentation, and multiple data modalities.\nUnderstanding and addressing these challenges is crucial for delivering effective AI solutions that meet the sophisticated needs of business users. Before we dive into how we solved ‌these challenges, let’s first take a look at what each of these data environments entails.\nData diversity\nData diversity refers to the wide range of data types that a business handles, including emails, documents, meeting notes, task management data, and more. Each type of data has its own structure and context, and that can complicate AI processing.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-01.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-01.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1080\"\r\n             data-aem-asset-id=\"e322a923-08a8-4585-bc83-f2f99496271c:BuildingDfB-01.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-01.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-01.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1080\"\r\n             data-aem-asset-id=\"e322a923-08a8-4585-bc83-f2f99496271c:BuildingDfB-01.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nExample of identifying the right data source, which requires domain knowledge and contextual information\n\r\n        \r\n    \r\n\nEffectively managing diverse data types is critical because each type of data has its own structure and context. For Dash to perform well in a business setting, it must seamlessly process and understand all these different data types.\nData fragmentation\nData fragmentation occurs when an organization’s data is spread across multiple applications. This means that relevant information isn’t stored in a single location, but is instead scattered across different tools and services.\nData fragmentation complicates the process of retrieving and synthesizing information. For users, this means context switching between multiple apps to manually search for the information they need, which is time-consuming, tedious, and inefficient. An AI system that can aggregate and make sense of fragmented data would greatly enhance the user experience by providing a unified and accessible information repository.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-02.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-02.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1080\"\r\n             data-aem-asset-id=\"d532fede-93b2-40e1-a8e8-2d753b43fd51:BuildingDfB-02.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-02.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-02.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"1080\"\r\n             data-aem-asset-id=\"d532fede-93b2-40e1-a8e8-2d753b43fd51:BuildingDfB-02.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nExample of information spread across multiple apps, which requires combining fragmented information to construct a complete answer\n\r\n        \r\n    \r\n\nData modalities\nData modalities refer to the different forms or modes in which data exists. Common modalities include text, images, audio, and video. Handling multiple data modalities is essential for providing a comprehensive AI solution.\nBusiness users often deal with a mix of text documents, images, presentations, and videos, among other formats. An AI system that can process and integrate all these modalities can provide a more complete and accurate response to user queries.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-03.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-03.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"880\"\r\n             data-aem-asset-id=\"8f4d9ce9-4bdf-4bb6-905e-9c4a23dc46e0:BuildingDfB-03.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-03.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/updated/BuildingDfB-03.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"880\"\r\n             data-aem-asset-id=\"8f4d9ce9-4bdf-4bb6-905e-9c4a23dc46e0:BuildingDfB-03.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nExample of information spread across multiple modalities\n\r\n        \r\n    \r\n\nIn summary, these challenges—data diversity, data fragmentation, and data modalities—present unique complexities when building these types of AI products. Addressing these challenges is essential to creating a robust and effective AI solution that meets the various needs of knowledge workers in dynamic and data-intensive environments. To pull this off, we implemented and experimented with multiple solutions. That’s where retrieval-augmented generation (RAG) and AI agents come in.\nLeveraging retrieval-augmented generation\nWhen building Dash, we knew that delivering accurate and relevant responses to user queries was paramount. That’s why we turned to RAG, an industry-standard approach for tasks like query responses and summarization. RAG's ability to combine external information retrieval with state-of-the-art generative models makes it the perfect fit for our product, especially in the complex landscape of enterprise data.\nRAG works by first retrieving the most relevant pieces of content from a dataset or knowledge base and then using a large language model (LLM) to generate a response based on that content. This approach ensures that the answers that the AI system provides aren’t only contextually relevant but also up to date, which is crucial in business environments where data is constantly evolving.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-04.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-04.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"640\"\r\n             data-aem-asset-id=\"276a85d0-169a-46f7-93e1-10ebfa5fecb5:BuildingDfB-04.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-04.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-04.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1440\"\r\n             data-sly-attribute.height=\"640\"\r\n             data-aem-asset-id=\"276a85d0-169a-46f7-93e1-10ebfa5fecb5:BuildingDfB-04.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nRetrieval-augmented generation (RAG)\n\r\n        \r\n    \r\n\nChoosing the right retrieval system\nThe retrieval system is the backbone of any RAG pipeline. It determines not just speed but also whether the LLM has the right context to generate meaningful answers—and a misstep here can compromise the entire user experience. Put another way, the retrieval system sets the bounds of what your LLM can “know” at inference time. It also greatly affects latency, which in turn impacts user satisfaction. And, it shapes the perceived quality of the final answer, since retrieval coverage can make or break correctness and completeness.\nThere are many options when it comes to designing a retrieval system. For question-answering systems, the most common one is to have a vector index where chunked data is indexed on their embeddings. Embeddings are simply a low-dimensional semantic representation of the chunk of data. To retrieve from such an index, semantic search is often used.\nAnother choice is to go with a more traditional approach to a search index, where documents are indexed by their lexical features (e.g., words that appear in the title or body). This approach, however, adds extra latency due to the need for on-the-fly chunking and re-ranking of the chunks during serving time.\nThere are many other options that prioritize data freshness, such as by directly interacting with the API for the platform where your data is stored, for example. But there are a few trade-offs to consider for each of these approaches:\nLatency vs. quality: There’s a pervasive assumption that you can’t have both extremely low latency and high-quality results. Why? Because advanced or larger embedding-based semantic searches may take longer due to their complexity—whether that’s a heavier model or additional reranking steps. For example, if you want more than 95% of your requests to reliably complete in under 1–2 seconds, you might have to use smaller embedding models, which can reduce retrieval accuracy. \nData freshness vs. scalability: Many projects need to keep their data fresh—for instance, re-indexing a news site every few minutes. Frequent re-indexing processes can hinder system throughput or spike latency when they’re underway. Alternatively, on-the-fly API calls to third-party data can push latency well above a few seconds. If near-real-time information is crucial (e.g., updating stock quotes), your system might spend more resources on frequent indexing or caching, throttling your ability to scale.\nBudget vs. user experience: High-quality solutions—advanced embeddings, re-ranking steps, and large-chunked indexes—often require additional compute, and more compute means more cost. If the user experience demands near-instant results with best-in-class recall, the resource burn can be significant. And if budgets are constrained, you might be forced to choose a simpler retrieval pipeline that could degrade the overall quality. \nFor Dash use cases, we prioritized reasonable latency but also high-quality and reasonable data freshness, with both periodic data syncs and the implementation of webhooks whenever appropriate. Specifically, we stayed under 1–2 seconds for over 95% of our queries, which allows us some latency budget for the rest of the pipeline so that our users don’t click away because the response time is too long.\nUltimately, we landed on a traditional information retrieval (IR) approach combined with on-the-fly chunking and reranking: \nTraditional IR: We use a lexical-based system, along with smarter rerankers that use embedding features. \nOn-the-fly chunking: Documents are chunked at query time to ensure we’re pulling only the relevant sections.\nReranking: A larger, but still efficient, embedding model then re-sorts those results to place the most relevant chunks at the top.\nIn practice, this yields high-quality results in under 2 seconds for over 95% of our queries, balancing speed and relevance. The combination allows us to keep costs in check while avoiding the pitfalls of purely semantic or purely lexical retrieval.\nQuality is best when measured end-to-end because all the parts of the RAG system need to work together effectively. Once we chose the retrieval system that best fit our needs, it was time to pick the best LLM for the job.\nChoosing the right model\nTo ensure this approach met our requirements, we conducted a rigorous evaluation. We tested multiple retrieval methods and model variations on several public datasets, including Google’s Natural Questions (featuring real user queries with large documents); MuSiQue (with multi-hop questions requiring information linking across different passages); and Microsoft’s Machine Reading Comprehension (containing often short passages and multi-document queries from Bing logs).\nWe also designed hand-tuned metrics to help evaluate the quality of generated answers. These included an LLM judge for answer correctness (passing retrieved evidence through an LLM to score final answer accuracy), an LLM judge for completeness (measuring the extent to which all relevant question aspects are addressed), as well as source precision, recall, and F1 metrics to evaluate how accurately we retrieved key passages needed for correct answers.\nBy cross-referencing these metrics, we could directly compare multiple open-source and closed-source LLMs in a consistent environment. This led us to narrow down a few model families that best suited Dash’s use cases.\nOur RAG system remains model agnostic: We want to provide the flexibility of choosing the models and providers our customers are most comfortable with. Being model agnostic also allows us to be prepared to adapt to rapid developments in the field of LLMs.\nAlthough RAG provides a solution for the most common types of questions—kinds that require fetching information from one or more documents—it’s incapable of performing complex, multi-step tasks. This is where AI agents come in.\nThe role of AI agents\nImagine you’ve asked a colleague to help you with a complex task, such as, “What’s the progress on projects in my team’s Q1 OKRs?” This person would likely find the answer to this question by first breaking it down into individual steps before tackling those steps one at a time.\nTo handle the business challenges outlined above, we need an AI system that can approach complex tasks like humans do. These tasks may require domain knowledge, contextual information, and planning and executing multiple steps—and AI agents are exceptional at doing just that.\nThe term \"AI agent\" is often used loosely across the tech industry, and with various interpretations. However, there’s a common theme among all of them: an AI agent is a system that can autonomously perform tasks with very little to no human interaction.\nAt Dropbox, our interpretation of AI agents is more specific and aligned with the needs of business applications. We view AI agents as multi-step orchestration systems that can dynamically break down user queries into individual steps, execute those steps using available resources and information from the current user, and generate a final response—all while requiring minimal human oversight.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-1200x628_05.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-1200x628_05.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2400\"\r\n             data-sly-attribute.height=\"1256\"\r\n             data-aem-asset-id=\"79f53398-3024-4cf7-87a4-69ce3ee639fc:BuildingDfB-1200x628_05.png\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-1200x628_05.png 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/april/building-dash-for-business/diagrams/BuildingDfB-1200x628_05.png\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"2400\"\r\n             data-sly-attribute.height=\"1256\"\r\n             data-aem-asset-id=\"79f53398-3024-4cf7-87a4-69ce3ee639fc:BuildingDfB-1200x628_05.png\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nAgents as multi-step orchestration\n\r\n        \r\n    \r\n\nThe multi-step orchestration in our AI agents includes two stages: planning and execution.\nStage 1: Planning\nThe planning stage involves breaking down a user's query into a sequence of high-level steps. This is done by an LLM, which interprets the query and generates simple code statements to express the logic of responding to the user’s query. The LLM-generated code is written in our domain-specific language (DSL), which is similar to the Python programming language. The initial plan of responding to the user’s query is restricted to high-level or simple code statements, which ensures clarity and precision in defining each step.\nFor example, let’s explore the request, \"Show me the notes for tomorrow’s all-hands meeting.\" These steps contain the logic necessary to respond to the query:\nResolve concrete dates and times for the phrase “tomorrow.” There needs to be an established time window to identify what “tomorrow” is referring to. This must be done relative to the current date and time.\nIdentify the meeting. There needs to be a search conducted for a meeting with a title matching \"all-hands\" (and within the determined time window).\nRetrieve notes. Documents attached to or linked from the identified meeting must be fetched.\nThe AI agent, however, expresses this logic as statements of code in our Python-like DSL. Below is a simplified version of what that’d look like:\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \ntime_window: TimeWindow = time_helper.get_time_window_for_tomorrow()\r\nmeeting: Meeting = meetings_helper.find_meeting(title=\"all-hands\", \r\ntime_window=time_window)\r\nnotes: list[Document] = meetings_helper.get_attached_documents(meeting=meeting)\n\r\n\r\n\r\n\r\n\n\r\n\n\nEach XXXX_helper object in the generated code contains functionality that acts as a building block for the LLM to use when expressing the logic of responding to the user’s query.\nStage 2: Execution\nThe next step is to validate and execute the logic that was expressed as code. The code is validated through static analysis to ensure correctness, safety, and to detect missing functionality. We intentionally allow the LLM to assume that missing functionality exists. If missing functionality is identified, we use the LLM a second time to implement the missing code.\nThis two-stage approach to generating code allows the agents to be clear and focused with an overall plan, while also being adaptable to new types and variations of user queries. Below is a simplified version of what the result of each of the steps might look like:\n1. Time window retrieval: Resolve the relative phrase “tomorrow” to concrete values.\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \ntime_window: TimeWindow = time_helper.get_time_window_for_tomorrow()\r\n# TimeWindow(start=\"2025-03-19\", end=\"2025-03-20\")\n\r\n\r\n\r\n\r\n\n\r\n\n\n2. Meeting identification: Search for the \"all-hands\" meeting within the resolved time window.\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \nmeeting: Meeting = meetings_helper.find_meeting(title=\"all-hands\", \r\ntime_window=time_window)\r\n# Meeting(title=\"Company All-Hands\", start_time=..., attendees=...)\n\r\n\r\n\r\n\r\n\n\r\n\n\n3. Document retrieval: Finally, fetch the notes attached to the identified meeting.\n\r\n\r\n\r\n\r\n\r\n\n\r\n\r\n\r\n    \r\n        Copy\r\n    \r\n    \nnotes: list[Document] = meetings_helper.get_attached_documents(meeting=meeting)\r\n# [Document(title=\"All-Hands-Notes\", content=\"...\")]\n\r\n\r\n\r\n\r\n\n\r\n\n\nThe final response to the user’s query is the result of the last step. In this example, the list of documents will be returned to the user.\nValidation and testing\nThe interpreter we use to execute the LLM-generated code was developed from scratch here at Dropbox. This gave us full control over everything inside the interpreter, including integrating static analysis passes and “dry runs,” in addition to having run-time type enforcement.\nStatic analysis allows our interpreter to examine the code without executing it, helping us automatically identify potential security risks, missing functionality, or code correctness errors. Having run-time type enforcement helps ensure that the data and objects being operated on are the types of values that we expect. In our example, the list of documents returned to the user will always be a list of documents.\nNormally, testing LLM integrations can be an ever-moving target. As new model versions are released, slight changes in how things are phrased or reacted to can be expected. Knowing exactly why a test failed or why the final response differed from expectations is often challenging.\nHowever, as a result of the LLM using code to express its logic in responding to the user, we’re able to make the LLM “show the work.” This helps with understanding at which step the logic failed, having more deterministic testing, and evaluating the response to a query. For example:\nLogic failure: “Can’t answer this question” vs. “Error on step 3 when fetching attached documents to meeting…”\nMore deterministic testing: Does resolving “tomorrow” always return the correct time window?\nEvaluating responses: “Does the response text have the approximate same meaning as what we expected?” vs. “Does the response value match the expected type list[Document]?”\nSecurity and efficiency\nTo address security concerns, we implemented security controls in our interpreter and its development process. Only the minimal required functionality is implemented in its runtime—feature parity with CPython isn’t the goal. This turns major security risks that exist in other full-featured interpreters into non-issues.\nAs we’ve explored, AI agents play a pivotal role in addressing the complexities of business tasks through their ability to plan and execute multi-step workflows autonomously. By leveraging LLMs and DSLs, these agents break down intricate queries into actionable steps, ensuring precision and efficiency. The structured approach, combined with strong typing and built-in security controls, enhances reliability and mitigates security risks.\nThe future of AI agents in business environments is promising. And as we continue to refine and expand their capabilities, they’ll become indispensable in streamlining operations, enhancing productivity, and driving innovation.\nLessons learned and future direction\nThroughout our journey in developing business-ready AI solutions, we’ve learned several valuable lessons that have shaped our approach and informed our decisions. While AI agents excel at handling complex tasks through multi-step orchestration, RAG remains indispensable for simpler information retrieval tasks. The key is determining the appropriate tool for each scenario.\nOur development of business AI solutions has forced us to adapt our approach to address data diversity, fragmentation, and modalities. We’ve had to innovate to make our solutions robust and scalable. We‘ve also observed that not all LLMs are equal: the same prompts can’t be used for different LLMs. This variability necessitates careful selection and optimization of prompts for LLMs to complete specific tasks.\nMoreover, the trade-offs between model size, latency, and accuracy are real. While larger models may provide more precise results, they can introduce delays that may not align with user expectations. Understanding these trade-offs is crucial for delivering a good user experience.\nLooking ahead, we’re excited to explore several promising directions that’ll further enhance our AI capabilities and drive innovation in knowledge management. Enabling AI agents to engage in multi-turn conversations will allow for more natural and intuitive interactions, mimicking human-like dialogue and improving the overall user experience. And developing self-reflective agents that can evaluate their own performance and adapt to new information will increase their autonomy and effectiveness, reducing the need for human intervention.\nIn addition, continuous fine-tuning of LLMs to align with specific business needs will enhance their relevance and accuracy, ensuring they meet the high standards of business environments. And lastly, expanding AI capabilities to support multiple languages will make our products more accessible and valuable to a global user base, fostering collaboration and productivity across diverse teams.\nThe integration of RAG and AI agents has significantly enhanced Dropbox Dash with AI capabilities to bring useful answers to users’ questions, and we’re focused on addressing challenges and exploring opportunities based on what we’ve learned. We’re also committed to our AI principles and being worthy of trust. By consistently innovating and refining our approach, we aim to develop products that meet the current needs of businesses and help move the future of knowledge work forward. \nThe landscape of business AI is evolving rapidly, and we’re excited about advancing AI capabilities to empower users to focus on truly meaningful, human work.",
        "dc:creator": "\r\n                            Ranjitha Gurunath Kulkarni,James Johnson\r\n            \t\t\t",
        "content": "null",
        "contentSnippet": "null",
        "guid": "https://dropbox.tech/machine-learning/building-dash-rag-multi-step-ai-agents-business-users",
        "categories": [
          "LLM",
          "models",
          "Machine Learning",
          "AI",
          "Dash",
          "Business"
        ],
        "isoDate": "2025-04-24T13:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": [
      {
        "creator": "브리핑허브",
        "title": "지역축제 홍보비 5억5천? 백종원 유튜브 영상 논란 총정리",
        "link": "http://app-developer.tistory.com/entry/%EC%A7%80%EC%97%AD%EC%B6%95%EC%A0%9C-%ED%99%8D%EB%B3%B4%EB%B9%84-5%EC%96%B55%EC%B2%9C-%EB%B0%B1%EC%A2%85%EC%9B%90-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%98%81%EC%83%81-%EB%85%BC%EB%9E%80-%EC%B4%9D%EC%A0%95%EB%A6%AC",
        "pubDate": "Fri, 25 Apr 2025 17:50:01 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EC%A7%80%EC%97%AD%EC%B6%95%EC%A0%9C-%ED%99%8D%EB%B3%B4%EB%B9%84-5%EC%96%B55%EC%B2%9C-%EB%B0%B1%EC%A2%85%EC%9B%90-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%98%81%EC%83%81-%EB%85%BC%EB%9E%80-%EC%B4%9D%EC%A0%95%EB%A6%AC#entry217comment",
        "content": "<h3 data-ke-size=\"size23\">5억5천만원, 지역축제 홍보에 과한 금액일까?</h3>\n<p data-ke-size=\"size16\">최근 <b>백종원 대표가 운영하는 더본코리아 자회사</b>가 인제군으로부터 지역축제 홍보 명목으로 <b>5억5000만원을 지급받은 사실</b>이 알려지며 논란이 일고 있습니다. 해당 금액은 인제군 축제 전체 예산 19억5000만원 중 28%에 해당하는 금액으로, 축제 예산 중 가장 큰 비중을 차지했습니다. 이 예산은 더본코리아 자회사 <b>티엠씨엔터</b>에 지급되었으며, 유튜브 영상 2편을 제작 및 업로드하는 조건이었습니다.</p>\n<h3 data-ke-size=\"size23\">문제의 유튜브 영상, 조회수는 높지만 효과는?</h3>\n<p data-ke-size=\"size16\">계약에 따라 <b>2023년 6월 9일과 7월 8일</b>에 백종원 대표 유튜브 채널에 영상이 올라갔습니다. &lsquo;몇날 며칠 고생 좀 했습니다&rsquo;, &lsquo;축제 바가지요금에 지친 사람 주목&rsquo;이라는 제목의 영상은 각각 85만, 56만 조회수를 기록했지만, 실질적인 지역경제 활성화 효과나 방문자 수 증대와 관련된 구체적인 데이터는 아직 공개되지 않았습니다. <b>홍보비 대비 효율성과 투명성에 대한 비판</b>이 계속되고 있습니다.</p>\n<h3 data-ke-size=\"size23\">위생 문제로 불붙은 여론&hellip; '백종원 방지법'까지?</h3>\n<p data-ke-size=\"size16\">논란은 단순한 예산 사용 문제를 넘어 <b>위생 문제</b>로까지 번졌습니다. 해당 영상에서 공사 자재를 활용한 바비큐 그릴, 농약 분무기를 통한 소스 분사 등 <b>비위생적 장면</b>이 포함돼 있다는 민원이 잇따르면서 국민신문고에도 수많은 신고가 접수된 상황입니다. 이로 인해 온라인 상에서는 &lsquo;<b>백종원 방지법</b>&rsquo; 제정 청원이 등장하기도 했으며, 일부에서는 <b>공공 행사에서 특정 기업의 독점</b>을 제한해야 한다는 목소리도 나오고 있습니다.</p>\n<h3 data-ke-size=\"size23\">더본코리아를 둘러싼 연이은 논란들</h3>\n<p data-ke-size=\"size16\">더본코리아는 이번 논란 이전에도 여러 의혹에 휩싸인 바 있습니다. &lsquo;<b>빽햄 선물세트 가격 논란</b>&rsquo;, &lsquo;<b>백석된장 원산지 표시 위반</b>&rsquo;, &lsquo;<b>술자리 면접 논란</b>&rsquo; 등 크고 작은 잡음이 끊이지 않고 있습니다. 이처럼 반복되는 논란 속에서 <b>브랜드 신뢰도 하락</b>과 더불어 백종원 대표 개인에 대한 이미지에도 적잖은 타격이 예상됩니다.</p>\n<h3 data-ke-size=\"size23\">결론: 공공 예산 집행, 더 투명하고 신중해야</h3>\n<p data-ke-size=\"size16\">이번 논란은 단순히 유튜브 영상 2편에 들어간 5억5천만 원이라는 금액만의 문제가 아닙니다. 공공 예산은 지역 주민과 국민의 세금으로 구성된 만큼, <b>그 사용의 투명성과 정당성</b>이 무엇보다 중요합니다. 또한 유명인의 영향력을 활용한 마케팅이 때로는 역효과를 불러올 수 있다는 점에서, <b>지자체와 기업 간의 계약 구조와 실행 방식에 대한 재점검</b>이 필요하다는 교훈을 남깁니다.</p>",
        "contentSnippet": "5억5천만원, 지역축제 홍보에 과한 금액일까?\n최근 백종원 대표가 운영하는 더본코리아 자회사가 인제군으로부터 지역축제 홍보 명목으로 5억5000만원을 지급받은 사실이 알려지며 논란이 일고 있습니다. 해당 금액은 인제군 축제 전체 예산 19억5000만원 중 28%에 해당하는 금액으로, 축제 예산 중 가장 큰 비중을 차지했습니다. 이 예산은 더본코리아 자회사 티엠씨엔터에 지급되었으며, 유튜브 영상 2편을 제작 및 업로드하는 조건이었습니다.\n문제의 유튜브 영상, 조회수는 높지만 효과는?\n계약에 따라 2023년 6월 9일과 7월 8일에 백종원 대표 유튜브 채널에 영상이 올라갔습니다. ‘몇날 며칠 고생 좀 했습니다’, ‘축제 바가지요금에 지친 사람 주목’이라는 제목의 영상은 각각 85만, 56만 조회수를 기록했지만, 실질적인 지역경제 활성화 효과나 방문자 수 증대와 관련된 구체적인 데이터는 아직 공개되지 않았습니다. 홍보비 대비 효율성과 투명성에 대한 비판이 계속되고 있습니다.\n위생 문제로 불붙은 여론… '백종원 방지법'까지?\n논란은 단순한 예산 사용 문제를 넘어 위생 문제로까지 번졌습니다. 해당 영상에서 공사 자재를 활용한 바비큐 그릴, 농약 분무기를 통한 소스 분사 등 비위생적 장면이 포함돼 있다는 민원이 잇따르면서 국민신문고에도 수많은 신고가 접수된 상황입니다. 이로 인해 온라인 상에서는 ‘백종원 방지법’ 제정 청원이 등장하기도 했으며, 일부에서는 공공 행사에서 특정 기업의 독점을 제한해야 한다는 목소리도 나오고 있습니다.\n더본코리아를 둘러싼 연이은 논란들\n더본코리아는 이번 논란 이전에도 여러 의혹에 휩싸인 바 있습니다. ‘빽햄 선물세트 가격 논란’, ‘백석된장 원산지 표시 위반’, ‘술자리 면접 논란’ 등 크고 작은 잡음이 끊이지 않고 있습니다. 이처럼 반복되는 논란 속에서 브랜드 신뢰도 하락과 더불어 백종원 대표 개인에 대한 이미지에도 적잖은 타격이 예상됩니다.\n결론: 공공 예산 집행, 더 투명하고 신중해야\n이번 논란은 단순히 유튜브 영상 2편에 들어간 5억5천만 원이라는 금액만의 문제가 아닙니다. 공공 예산은 지역 주민과 국민의 세금으로 구성된 만큼, 그 사용의 투명성과 정당성이 무엇보다 중요합니다. 또한 유명인의 영향력을 활용한 마케팅이 때로는 역효과를 불러올 수 있다는 점에서, 지자체와 기업 간의 계약 구조와 실행 방식에 대한 재점검이 필요하다는 교훈을 남깁니다.",
        "guid": "http://app-developer.tistory.com/217",
        "categories": [
          "공공예산",
          "더본코리아",
          "백종원",
          "백종원 방지법",
          "세금 논란",
          "식품위생법",
          "유튜브 홍보",
          "인제군 축제",
          "지역축제",
          "지역축제 문제"
        ],
        "isoDate": "2025-04-25T08:50:01.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "김호중 '음주 뺑소니' 실형 2년 6개월, 법원 판단",
        "link": "http://app-developer.tistory.com/entry/%EA%B9%80%ED%98%B8%EC%A4%91-%EC%9D%8C%EC%A3%BC-%EB%BA%91%EC%86%8C%EB%8B%88-%EC%8B%A4%ED%98%95-2%EB%85%84-6%EA%B0%9C%EC%9B%94-%EB%B2%95%EC%9B%90-%ED%8C%90%EB%8B%A8",
        "pubDate": "Fri, 25 Apr 2025 16:57:17 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EA%B9%80%ED%98%B8%EC%A4%91-%EC%9D%8C%EC%A3%BC-%EB%BA%91%EC%86%8C%EB%8B%88-%EC%8B%A4%ED%98%95-2%EB%85%84-6%EA%B0%9C%EC%9B%94-%EB%B2%95%EC%9B%90-%ED%8C%90%EB%8B%A8#entry216comment",
        "content": "<p data-ke-size=\"size16\">김호중 '음주 뺑소니' 실형 2년 6개월, 법원 판단 김호중,음주 뺑소니,음주운전 사고,도주치상,트로트 가수 논란,연예인 음주운전,실형 선고,법원 판결,사고 후 미조치,김호중 사건 정리</p>\n<p data-ke-size=\"size16\"><b>김호중 음주 뺑소니</b> 사건이 법원 판결로 결론을 맞이하면서 사회적 관심이 집중되고 있습니다. 트로트 가수 김호중은 서울 강남구 압구정로에서 발생한 음주운전 후 뺑소니 사고로 인해 <b>징역 2년 6개월</b>의 실형을 선고받았습니다.</p>\n<h3 data-ke-size=\"size23\">사건 개요: 김호중은 왜 법정에 섰나?</h3>\n<p data-ke-size=\"size16\">2024년 5월 9일 밤 11시 40분경, <b>김호중 음주 뺑소니</b> 사건은 서울 강남구에서 발생했습니다. 김 씨는 음주 상태로 벤츠 차량을 몰다 중앙선을 침범해 택시와 충돌한 후 아무런 조치 없이 도주했습니다. 이후 매니저를 시켜 허위 자수를 시도하면서 사태는 더욱 심각해졌습니다.</p>\n<h3 data-ke-size=\"size23\">재판부의 판단과 판결 이유</h3>\n<p data-ke-size=\"size16\">서울중앙지법 형사26단독 재판부는 <b>도주치상</b>, <b>도로교통법상 사고 후 미조치</b>, <b>위험운전치상</b> 등 혐의 모두를 유죄로 인정했습니다. 특히 재판부는 \"CCTV로도 음주 상태임이 명확하며, 책임 회피와 허위 자수는 죄질이 매우 불량하다\"고 지적했습니다.</p>\n<h3 data-ke-size=\"size23\">음주운전 혐의는 왜 빠졌을까?</h3>\n<p data-ke-size=\"size16\">김호중은 사건 발생 후 17시간이 지난 뒤 경찰에 출석했으며, 당시 측정된 <b>혈중알코올농도</b>는 법적 기준을 넘지 않았습니다. 이에 검찰은 음주운전 혐의는 입증이 어렵다고 판단해 공소장에서 제외했습니다.</p>\n<h3 data-ke-size=\"size23\">소속사와 매니저의 책임도 무겁다</h3>\n<p data-ke-size=\"size16\">이 사건에는 김호중 외에도 소속사 대표와 매니저가 관여했습니다. 대표는 징역 2년, 본부장은 1년 6개월, 매니저는 징역 1년에 집행유예 2년을 선고받았습니다. <b>김호중 음주 뺑소니</b> 사건은 단순한 연예인의 실수가 아닌, 조직적인 은폐 시도로까지 확산된 중대한 사건이었습니다.</p>\n<h3 data-ke-size=\"size23\">김호중 음주 뺑소니 사건에 대한 대중 반응</h3>\n<p data-ke-size=\"size16\">사건이 알려지면서 팬들과 대중은 큰 충격에 빠졌습니다. 특히 그동안 '성실한 이미지'로 알려졌던 김호중의 이중적인 행보에 대해 실망의 목소리가 커지고 있습니다.</p>\n<h3 data-ke-size=\"size23\">사건을 통해 본 연예인의 책임</h3>\n<p data-ke-size=\"size16\"><b>김호중 음주 뺑소니</b> 사건은 단순한 교통사고가 아닙니다. 대중의 사랑을 받는 연예인은 공인의 책임을 무겁게 받아들여야 하며, 그 행동 하나하나가 사회적 영향을 끼친다는 점을 이번 사건은 명확히 보여주었습니다.</p>\n<h3 data-ke-size=\"size23\">마무리: 책임 있는 태도가 신뢰를 만든다</h3>\n<p data-ke-size=\"size16\">신뢰는 하루아침에 얻어지지 않으며, 한번 무너진 신뢰를 회복하는 데는 더 큰 시간과 노력이 필요합니다. <b>김호중 음주 뺑소니</b> 사건은 단순한 연예인 일탈이 아닌, 사회적 경각심을 일깨우는 계기가 되었습니다. 법은 모두에게 평등하며, 유명인 역시 예외일 수 없습니다. 이제는 보다 책임 있는 행동과 진정성 있는 사과가 필요한 때입니다.</p>",
        "contentSnippet": "김호중 '음주 뺑소니' 실형 2년 6개월, 법원 판단 김호중,음주 뺑소니,음주운전 사고,도주치상,트로트 가수 논란,연예인 음주운전,실형 선고,법원 판결,사고 후 미조치,김호중 사건 정리\n김호중 음주 뺑소니 사건이 법원 판결로 결론을 맞이하면서 사회적 관심이 집중되고 있습니다. 트로트 가수 김호중은 서울 강남구 압구정로에서 발생한 음주운전 후 뺑소니 사고로 인해 징역 2년 6개월의 실형을 선고받았습니다.\n사건 개요: 김호중은 왜 법정에 섰나?\n2024년 5월 9일 밤 11시 40분경, 김호중 음주 뺑소니 사건은 서울 강남구에서 발생했습니다. 김 씨는 음주 상태로 벤츠 차량을 몰다 중앙선을 침범해 택시와 충돌한 후 아무런 조치 없이 도주했습니다. 이후 매니저를 시켜 허위 자수를 시도하면서 사태는 더욱 심각해졌습니다.\n재판부의 판단과 판결 이유\n서울중앙지법 형사26단독 재판부는 도주치상, 도로교통법상 사고 후 미조치, 위험운전치상 등 혐의 모두를 유죄로 인정했습니다. 특히 재판부는 \"CCTV로도 음주 상태임이 명확하며, 책임 회피와 허위 자수는 죄질이 매우 불량하다\"고 지적했습니다.\n음주운전 혐의는 왜 빠졌을까?\n김호중은 사건 발생 후 17시간이 지난 뒤 경찰에 출석했으며, 당시 측정된 혈중알코올농도는 법적 기준을 넘지 않았습니다. 이에 검찰은 음주운전 혐의는 입증이 어렵다고 판단해 공소장에서 제외했습니다.\n소속사와 매니저의 책임도 무겁다\n이 사건에는 김호중 외에도 소속사 대표와 매니저가 관여했습니다. 대표는 징역 2년, 본부장은 1년 6개월, 매니저는 징역 1년에 집행유예 2년을 선고받았습니다. 김호중 음주 뺑소니 사건은 단순한 연예인의 실수가 아닌, 조직적인 은폐 시도로까지 확산된 중대한 사건이었습니다.\n김호중 음주 뺑소니 사건에 대한 대중 반응\n사건이 알려지면서 팬들과 대중은 큰 충격에 빠졌습니다. 특히 그동안 '성실한 이미지'로 알려졌던 김호중의 이중적인 행보에 대해 실망의 목소리가 커지고 있습니다.\n사건을 통해 본 연예인의 책임\n김호중 음주 뺑소니 사건은 단순한 교통사고가 아닙니다. 대중의 사랑을 받는 연예인은 공인의 책임을 무겁게 받아들여야 하며, 그 행동 하나하나가 사회적 영향을 끼친다는 점을 이번 사건은 명확히 보여주었습니다.\n마무리: 책임 있는 태도가 신뢰를 만든다\n신뢰는 하루아침에 얻어지지 않으며, 한번 무너진 신뢰를 회복하는 데는 더 큰 시간과 노력이 필요합니다. 김호중 음주 뺑소니 사건은 단순한 연예인 일탈이 아닌, 사회적 경각심을 일깨우는 계기가 되었습니다. 법은 모두에게 평등하며, 유명인 역시 예외일 수 없습니다. 이제는 보다 책임 있는 행동과 진정성 있는 사과가 필요한 때입니다.",
        "guid": "http://app-developer.tistory.com/216",
        "categories": [
          "김호중",
          "김호중 사건 정리",
          "도주치상",
          "법원 판결",
          "사고 후 미조치",
          "실형 선고",
          "연예인 음주운전",
          "음주 뺑소니",
          "음주운전 사고",
          "트로트 가수 논란"
        ],
        "isoDate": "2025-04-25T07:57:17.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "지드래곤, 사나 태그하고 '빛삭'? 럽스타 의혹 진짜일까",
        "link": "http://app-developer.tistory.com/entry/%EC%A7%80%EB%93%9C%EB%9E%98%EA%B3%A4-%EC%82%AC%EB%82%98-%ED%83%9C%EA%B7%B8%ED%95%98%EA%B3%A0-%EB%B9%9B%EC%82%AD-%EB%9F%BD%EC%8A%A4%ED%83%80-%EC%9D%98%ED%98%B9-%EC%A7%84%EC%A7%9C%EC%9D%BC%EA%B9%8C",
        "pubDate": "Thu, 24 Apr 2025 08:32:27 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EC%A7%80%EB%93%9C%EB%9E%98%EA%B3%A4-%EC%82%AC%EB%82%98-%ED%83%9C%EA%B7%B8%ED%95%98%EA%B3%A0-%EB%B9%9B%EC%82%AD-%EB%9F%BD%EC%8A%A4%ED%83%80-%EC%9D%98%ED%98%B9-%EC%A7%84%EC%A7%9C%EC%9D%BC%EA%B9%8C#entry215comment",
        "content": "<h2><b>지드래곤 사나</b> 태그 논란, 무엇이 문제였나?</h2>\n<p><b>지드래곤 사나</b> 관련 이슈가 온라인에서 급속도로 확산 중입니다. 지난 22일, 지드래곤은 콜드플레이 내한 공연 현장을 SNS에 공유하며 트와이스 멤버 중 유독 <b>사나</b>만을 태그했는데요, 이 행위가 팬들 사이에서 열애 의혹으로 번졌습니다.</p>\n\n<h2>팬들의 반응, 단순 팬심일까? 럽스타 의혹일까?</h2>\n<p>지드래곤이 남긴 일본어 멘트 \"에?\"는 단순한 감탄사로 보일 수 있지만, <b>사나</b>가 일본인이라는 점과 맞물리며 오해를 불러일으켰습니다. 팬들 사이에서는 \"<b>지드래곤 사나</b> 럽스타그램 아니냐\", \"트와이스 다 나왔는데 왜 사나만?\"이라는 반응이 쏟아졌습니다.</p>\n\n<h3>SNS 게시물 ‘빛삭’으로 더 커진 의혹</h3>\n<p>논란이 거세지자 지드래곤은 해당 게시물을 빠르게 삭제했습니다. 이 삭제가 오히려 의혹을 더욱 키우는 결과를 낳았죠. 많은 팬들은 \"지우지 않았더라면 오히려 별일 없다고 생각했을 텐데\"라는 반응을 보였습니다.</p>\n\n<h2>콜드플레이와 트와이스의 특별한 무대</h2>\n<p>한편, <a href=\"https://twice.jype.com\" target=\"_self\">트와이스</a>는 이번 콜드플레이 내한 공연에 게스트로 참여하여 'We Pray' 무대를 선보였습니다. <b>지드래곤</b>이 공연을 관람한 후 <b>사나</b>만을 언급한 배경에 대해 궁금증이 커지는 이유기도 하죠.</p>\n\n<h2>SNS는 연예계의 ‘무기’인가 ‘리스크’인가</h2>\n<p>이번 <b>지드래곤 사나</b> 논란은 연예인들의 SNS 사용이 얼마나 큰 파장을 일으킬 수 있는지를 보여줍니다. 작은 태그 하나, 짧은 멘트 하나가 열애설로 비화할 수 있는 시대. 대중은 스타의 일거수일투족을 감시하고 해석하려 합니다.</p>\n\n<h3>스타의 SNS 관리, 전략이 필요한 시대</h3>\n<p>지금은 단순한 ‘팬 소통’의 도구를 넘어서 브랜드 전략으로 SNS가 사용됩니다. <b>지드래곤 사나</b>의 사례처럼, 무심코 올린 게시물 하나도 철저한 기획과 의도가 요구되는 시대임을 실감하게 합니다.</p>\n\n<h2>마무리</h2>\n<p>지드래곤과 사나를 둘러싼 열애 의혹은 결국 해프닝으로 마무리될 가능성이 높습니다. 하지만 이번 이슈를 통해 우리는 연예인의 SNS가 얼마나 큰 영향을 미치는지를 다시금 깨닫게 됩니다. 팬과 스타가 함께 만들어가는 건강한 디지털 문화를 기대해 봅니다.</p>",
        "contentSnippet": "지드래곤 사나 태그 논란, 무엇이 문제였나?\n지드래곤 사나 관련 이슈가 온라인에서 급속도로 확산 중입니다. 지난 22일, 지드래곤은 콜드플레이 내한 공연 현장을 SNS에 공유하며 트와이스 멤버 중 유독 사나만을 태그했는데요, 이 행위가 팬들 사이에서 열애 의혹으로 번졌습니다.\n팬들의 반응, 단순 팬심일까? 럽스타 의혹일까?\n지드래곤이 남긴 일본어 멘트 \"에?\"는 단순한 감탄사로 보일 수 있지만, 사나가 일본인이라는 점과 맞물리며 오해를 불러일으켰습니다. 팬들 사이에서는 \"지드래곤 사나 럽스타그램 아니냐\", \"트와이스 다 나왔는데 왜 사나만?\"이라는 반응이 쏟아졌습니다.\nSNS 게시물 ‘빛삭’으로 더 커진 의혹\n논란이 거세지자 지드래곤은 해당 게시물을 빠르게 삭제했습니다. 이 삭제가 오히려 의혹을 더욱 키우는 결과를 낳았죠. 많은 팬들은 \"지우지 않았더라면 오히려 별일 없다고 생각했을 텐데\"라는 반응을 보였습니다.\n콜드플레이와 트와이스의 특별한 무대\n한편, 트와이스는 이번 콜드플레이 내한 공연에 게스트로 참여하여 'We Pray' 무대를 선보였습니다. 지드래곤이 공연을 관람한 후 사나만을 언급한 배경에 대해 궁금증이 커지는 이유기도 하죠.\nSNS는 연예계의 ‘무기’인가 ‘리스크’인가\n이번 지드래곤 사나 논란은 연예인들의 SNS 사용이 얼마나 큰 파장을 일으킬 수 있는지를 보여줍니다. 작은 태그 하나, 짧은 멘트 하나가 열애설로 비화할 수 있는 시대. 대중은 스타의 일거수일투족을 감시하고 해석하려 합니다.\n스타의 SNS 관리, 전략이 필요한 시대\n지금은 단순한 ‘팬 소통’의 도구를 넘어서 브랜드 전략으로 SNS가 사용됩니다. 지드래곤 사나의 사례처럼, 무심코 올린 게시물 하나도 철저한 기획과 의도가 요구되는 시대임을 실감하게 합니다.\n마무리\n지드래곤과 사나를 둘러싼 열애 의혹은 결국 해프닝으로 마무리될 가능성이 높습니다. 하지만 이번 이슈를 통해 우리는 연예인의 SNS가 얼마나 큰 영향을 미치는지를 다시금 깨닫게 됩니다. 팬과 스타가 함께 만들어가는 건강한 디지털 문화를 기대해 봅니다.",
        "guid": "http://app-developer.tistory.com/215",
        "categories": [
          "럽스타그램",
          "사나",
          "사나 열애설",
          "지드래곤",
          "지드래곤 사나",
          "지드래곤 사나 럽스타",
          "지드래곤 열애설",
          "콜드플레이",
          "트와이스"
        ],
        "isoDate": "2025-04-23T23:32:27.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "박보검 미담, 이래서 모두가 사랑할 수밖에 없다",
        "link": "http://app-developer.tistory.com/entry/%EB%B0%95%EB%B3%B4%EA%B2%80-%EB%AF%B8%EB%8B%B4-%EC%9D%B4%EB%9E%98%EC%84%9C-%EB%AA%A8%EB%91%90%EA%B0%80-%EC%82%AC%EB%9E%91%ED%95%A0-%EC%88%98%EB%B0%96%EC%97%90-%EC%97%86%EB%8B%A4",
        "pubDate": "Wed, 23 Apr 2025 13:37:35 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EB%B0%95%EB%B3%B4%EA%B2%80-%EB%AF%B8%EB%8B%B4-%EC%9D%B4%EB%9E%98%EC%84%9C-%EB%AA%A8%EB%91%90%EA%B0%80-%EC%82%AC%EB%9E%91%ED%95%A0-%EC%88%98%EB%B0%96%EC%97%90-%EC%97%86%EB%8B%A4#entry214comment",
        "content": "\n<p><b>박보검 미담</b>은 그가 단순한 스타가 아닌, 인간적으로도 얼마나 따뜻한 사람인지를 보여주는 증거입니다. 연예계에 수많은 스타들이 있지만, 박보검처럼 모두에게 칭찬받는 사람은 드물죠. 다양한 <b>미담</b>이 전해지면서 팬이 아니더라도 그의 매력에 빠질 수밖에 없습니다.</p>\n\n<p>그의 미담 중 가장 유명한 것은 촬영 스태프들을 하나하나 챙기며 직접 감사 인사를 전했다는 일화입니다. 바쁜 스케줄 중에도 일일이 눈을 맞추며 인사하는 모습은 단순한 매너를 넘어선 <b>진심 어린 배려</b>였죠.</p>\n\n<p>또한 박보검은 팬서비스로도 유명합니다. 팬미팅 현장에서 직접 손편지를 써오거나, 오래 기다린 팬들에게 따뜻한 말 한마디를 건네는 모습은 SNS를 통해 수없이 공유되었고, <b>박보검 팬서비스</b>라는 키워드는 늘 화제가 되곤 합니다.</p>\n\n<p>박보검의 <a href=\"https://ko.wikipedia.org/wiki/박보검\" target=\"_self\">성격</a>을 드러내는 미담은 그의 봉사활동에서도 확인할 수 있습니다. 여러 차례 익명으로 기부하거나 자원봉사에 참여하는 모습은 소속사에서도 밝히지 않았던 사실들이 나중에 알려져 더욱 감동을 주었죠.</p>\n\n<p>심지어 방송국 스태프들 사이에서도 박보검은 \"감사합니다\", \"고생 많으셨어요\"라는 말을 가장 많이 하는 배우로 꼽힙니다. 이런 모습은 우연이 아닌, 그의 <b>진정성 있는 인성</b>을 보여주는 상징적인 부분입니다.</p>\n\n<p>팬들은 그의 일화를 접할 때마다 “이래서 박보검을 좋아할 수밖에 없다”며 감탄을 아끼지 않습니다. 최근 인터뷰에서도 그는 “좋은 사람이 되고 싶다”는 말을 여러 번 반복했으며, 이는 그가 보여주는 모든 행동에서 그대로 드러납니다.</p>\n\n<p>이렇듯 <b>박보검 미담</b>은 단순한 훈훈한 이야기를 넘어서, 우리 모두가 본받고 싶은 삶의 태도이기도 합니다. 연예인을 넘어 한 사람으로서의 모범이 되는 박보검의 진짜 이야기를 계속 기대하게 되는 이유입니다.</p>\n\n<p><b>마무리</b><br>박보검의 미담은 단지 유명인의 착한 일화로 끝나지 않습니다. 그는 꾸준히, 그리고 진심으로 주변 사람들을 배려하며 자신의 삶을 살아가고 있습니다. 우리가 그를 좋아하고 응원하는 이유는 바로 그런 진정성에서 비롯된 것이죠. 그의 행보를 통해 우리도 따뜻한 사람으로 성장할 수 있기를 바랍니다.</p>",
        "contentSnippet": "박보검 미담은 그가 단순한 스타가 아닌, 인간적으로도 얼마나 따뜻한 사람인지를 보여주는 증거입니다. 연예계에 수많은 스타들이 있지만, 박보검처럼 모두에게 칭찬받는 사람은 드물죠. 다양한 미담이 전해지면서 팬이 아니더라도 그의 매력에 빠질 수밖에 없습니다.\n그의 미담 중 가장 유명한 것은 촬영 스태프들을 하나하나 챙기며 직접 감사 인사를 전했다는 일화입니다. 바쁜 스케줄 중에도 일일이 눈을 맞추며 인사하는 모습은 단순한 매너를 넘어선 진심 어린 배려였죠.\n또한 박보검은 팬서비스로도 유명합니다. 팬미팅 현장에서 직접 손편지를 써오거나, 오래 기다린 팬들에게 따뜻한 말 한마디를 건네는 모습은 SNS를 통해 수없이 공유되었고, 박보검 팬서비스라는 키워드는 늘 화제가 되곤 합니다.\n박보검의 성격을 드러내는 미담은 그의 봉사활동에서도 확인할 수 있습니다. 여러 차례 익명으로 기부하거나 자원봉사에 참여하는 모습은 소속사에서도 밝히지 않았던 사실들이 나중에 알려져 더욱 감동을 주었죠.\n심지어 방송국 스태프들 사이에서도 박보검은 \"감사합니다\", \"고생 많으셨어요\"라는 말을 가장 많이 하는 배우로 꼽힙니다. 이런 모습은 우연이 아닌, 그의 진정성 있는 인성을 보여주는 상징적인 부분입니다.\n팬들은 그의 일화를 접할 때마다 “이래서 박보검을 좋아할 수밖에 없다”며 감탄을 아끼지 않습니다. 최근 인터뷰에서도 그는 “좋은 사람이 되고 싶다”는 말을 여러 번 반복했으며, 이는 그가 보여주는 모든 행동에서 그대로 드러납니다.\n이렇듯 박보검 미담은 단순한 훈훈한 이야기를 넘어서, 우리 모두가 본받고 싶은 삶의 태도이기도 합니다. 연예인을 넘어 한 사람으로서의 모범이 되는 박보검의 진짜 이야기를 계속 기대하게 되는 이유입니다.\n마무리\n박보검의 미담은 단지 유명인의 착한 일화로 끝나지 않습니다. 그는 꾸준히, 그리고 진심으로 주변 사람들을 배려하며 자신의 삶을 살아가고 있습니다. 우리가 그를 좋아하고 응원하는 이유는 바로 그런 진정성에서 비롯된 것이죠. 그의 행보를 통해 우리도 따뜻한 사람으로 성장할 수 있기를 바랍니다.",
        "guid": "http://app-developer.tistory.com/214",
        "categories": [
          "미담",
          "박보검",
          "박보검 이야기",
          "박보검 인성",
          "박보검 인터뷰",
          "박보검 착한 일화",
          "박보검 팬서비스",
          "연예인 미담",
          "훈훈한 연예인"
        ],
        "isoDate": "2025-04-23T04:37:35.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "&quot;로제가 등장하자 3만 관중 떼창&quot;...콜드플레이 서울 공연, 레전드가 된 순간",
        "link": "http://app-developer.tistory.com/entry/%EB%A1%9C%EC%A0%9C%EA%B0%80-%EB%93%B1%EC%9E%A5%ED%95%98%EC%9E%90-3%EB%A7%8C-%EA%B4%80%EC%A4%91-%EB%96%BC%EC%B0%BD%EC%BD%9C%EB%93%9C%ED%94%8C%EB%A0%88%EC%9D%B4-%EC%84%9C%EC%9A%B8-%EA%B3%B5%EC%97%B0-%EB%A0%88%EC%A0%84%EB%93%9C%EA%B0%80-%EB%90%9C-%EC%88%9C%EA%B0%84",
        "pubDate": "Wed, 23 Apr 2025 08:48:01 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EB%A1%9C%EC%A0%9C%EA%B0%80-%EB%93%B1%EC%9E%A5%ED%95%98%EC%9E%90-3%EB%A7%8C-%EA%B4%80%EC%A4%91-%EB%96%BC%EC%B0%BD%EC%BD%9C%EB%93%9C%ED%94%8C%EB%A0%88%EC%9D%B4-%EC%84%9C%EC%9A%B8-%EA%B3%B5%EC%97%B0-%EB%A0%88%EC%A0%84%EB%93%9C%EA%B0%80-%EB%90%9C-%EC%88%9C%EA%B0%84#entry213comment",
        "content": "<h2>콜드플레이 서울 콘서트, 상상을 초월한 무대</h2>\n<p>2025년 4월 22일, 고양종합운동장 주경기장은 그야말로 전율의 도가니였다. 콜드플레이의 두 번째 내한공연 ‘뮤직 오브 더 스피어스(Music of the Spheres)’ 투어의 네 번째 무대가 열린 이날, 수만 명의 관객 앞에 놀라운 장면이 펼쳐졌다. 그 중심에는 블랙핑크의 로제가 있었다.</p>\n<p>콜드플레이의 보컬 크리스 마틴은 장난스레 피아노로 ‘아파트’ 전주를 연주하며 한국어로 “아파트, 아파트”를 외쳤다. 관객들은 처음엔 익살스러운 제스처로 여겼지만, 무대 위에 로제가 등장하자 반응은 완전히 뒤바뀌었다. 갑작스러운 등장에 수만 명이 일제히 ‘아파트’를 떼창하는 진풍경이 연출됐다.</p>\n<h2>로제와 크리스 마틴, ‘아파트’로 하나되다</h2>\n<p>로제는 무대 위를 활보하며 크리스 마틴과 함께 ‘아파트’를 열창했다. 두 사람은 감정을 실어 화음을 주고받았고, 관객은 일제히 떼창으로 응답했다. 노래가 끝난 후에도 크리스 마틴은 “너무 신난다. 한 번 더 하자”며 로제에게 제안했고, 이내 ‘아파트’는 또 한 번 경기장을 뒤흔들었다.</p>\n<p>이 특별한 협업은 단순한 게스트 무대를 넘어선 진심어린 음악적 교류였다. 로제와 콜드플레이는 모두 워너뮤직 산하 애틀랜틱 레코드 소속으로, 이전에도 로제가 콜드플레이의 ‘Viva La Vida’를 리메이크해 애플TV+ 드라마 ‘파친코’ 시즌2 엔딩곡으로 사용되기도 했다.</p>\n<h2>하루 만에 코첼라에서 서울로, 로제의 의리</h2>\n<p>더 놀라운 점은 로제가 불과 하루 전까지 미국 코첼라 페스티벌에서 블랙핑크 멤버들을 응원하는 모습이 포착되었다는 사실이다. 하루 만에 서울로 날아와 콜드플레이의 무대에 함께한 로제의 의리는 많은 팬들에게 깊은 인상을 남겼다.</p>\n<p>공연장을 찾은 이들 중에는 YG엔터테인먼트의 또 다른 대표 아티스트인 지드래곤(G-DRAGON)도 있었다. 그는 코드 쿤스트, 배우 정해인과 함께 관객석에서 공연을 관람했으며, 같은 날 태양도 공연장에 모습을 드러냈다. 크리스 마틴은 태양의 유명한 밈 “여러분, 너무 보고 싶었어요”를 피아노와 함께 재현하며 한국 팬들을 향한 애정을 표현하기도 했다.</p>\n<h2>내한공연 역사 새로 쓴 콜드플레이</h2>\n<p>이번 콜드플레이의 내한은 단순한 공연 그 이상이다. 4월 16일부터 시작해 18일, 19일, 22일, 그리고 예정된 24일과 25일까지 총 6회 공연은 단일 아티스트 기준 한국 내 공연 역사상 최대 규모로, 약 30만 명의 관객을 동원하는 대기록을 세웠다.</p>\n<p>이날 무대는 단순한 음악 공연이 아니라, 글로벌 팝스타들과 한국 아티스트의 깊은 교류가 만들어낸 감동의 순간이었다. 특히 로제와의 협업은 국경과 장르를 뛰어넘는 음악의 힘을 증명했다.</p>\n<h2>마무리</h2>\n<p>이번 콜드플레이 내한공연은 단순한 콘서트가 아닌, 하나의 문화적 사건이었다. 그 안에는 글로벌 무대에서 활약하는 한국 아티스트들의 존재감, 그리고 진심이 담긴 음악의 교류가 있었다. 로제의 깜짝 등장은 그 상징적인 순간이 되었으며, 관객들은 이 날을 두고두고 기억하게 될 것이다.</p>",
        "contentSnippet": "콜드플레이 서울 콘서트, 상상을 초월한 무대\n2025년 4월 22일, 고양종합운동장 주경기장은 그야말로 전율의 도가니였다. 콜드플레이의 두 번째 내한공연 ‘뮤직 오브 더 스피어스(Music of the Spheres)’ 투어의 네 번째 무대가 열린 이날, 수만 명의 관객 앞에 놀라운 장면이 펼쳐졌다. 그 중심에는 블랙핑크의 로제가 있었다.\n콜드플레이의 보컬 크리스 마틴은 장난스레 피아노로 ‘아파트’ 전주를 연주하며 한국어로 “아파트, 아파트”를 외쳤다. 관객들은 처음엔 익살스러운 제스처로 여겼지만, 무대 위에 로제가 등장하자 반응은 완전히 뒤바뀌었다. 갑작스러운 등장에 수만 명이 일제히 ‘아파트’를 떼창하는 진풍경이 연출됐다.\n로제와 크리스 마틴, ‘아파트’로 하나되다\n로제는 무대 위를 활보하며 크리스 마틴과 함께 ‘아파트’를 열창했다. 두 사람은 감정을 실어 화음을 주고받았고, 관객은 일제히 떼창으로 응답했다. 노래가 끝난 후에도 크리스 마틴은 “너무 신난다. 한 번 더 하자”며 로제에게 제안했고, 이내 ‘아파트’는 또 한 번 경기장을 뒤흔들었다.\n이 특별한 협업은 단순한 게스트 무대를 넘어선 진심어린 음악적 교류였다. 로제와 콜드플레이는 모두 워너뮤직 산하 애틀랜틱 레코드 소속으로, 이전에도 로제가 콜드플레이의 ‘Viva La Vida’를 리메이크해 애플TV+ 드라마 ‘파친코’ 시즌2 엔딩곡으로 사용되기도 했다.\n하루 만에 코첼라에서 서울로, 로제의 의리\n더 놀라운 점은 로제가 불과 하루 전까지 미국 코첼라 페스티벌에서 블랙핑크 멤버들을 응원하는 모습이 포착되었다는 사실이다. 하루 만에 서울로 날아와 콜드플레이의 무대에 함께한 로제의 의리는 많은 팬들에게 깊은 인상을 남겼다.\n공연장을 찾은 이들 중에는 YG엔터테인먼트의 또 다른 대표 아티스트인 지드래곤(G-DRAGON)도 있었다. 그는 코드 쿤스트, 배우 정해인과 함께 관객석에서 공연을 관람했으며, 같은 날 태양도 공연장에 모습을 드러냈다. 크리스 마틴은 태양의 유명한 밈 “여러분, 너무 보고 싶었어요”를 피아노와 함께 재현하며 한국 팬들을 향한 애정을 표현하기도 했다.\n내한공연 역사 새로 쓴 콜드플레이\n이번 콜드플레이의 내한은 단순한 공연 그 이상이다. 4월 16일부터 시작해 18일, 19일, 22일, 그리고 예정된 24일과 25일까지 총 6회 공연은 단일 아티스트 기준 한국 내 공연 역사상 최대 규모로, 약 30만 명의 관객을 동원하는 대기록을 세웠다.\n이날 무대는 단순한 음악 공연이 아니라, 글로벌 팝스타들과 한국 아티스트의 깊은 교류가 만들어낸 감동의 순간이었다. 특히 로제와의 협업은 국경과 장르를 뛰어넘는 음악의 힘을 증명했다.\n마무리\n이번 콜드플레이 내한공연은 단순한 콘서트가 아닌, 하나의 문화적 사건이었다. 그 안에는 글로벌 무대에서 활약하는 한국 아티스트들의 존재감, 그리고 진심이 담긴 음악의 교류가 있었다. 로제의 깜짝 등장은 그 상징적인 순간이 되었으며, 관객들은 이 날을 두고두고 기억하게 될 것이다.",
        "guid": "http://app-developer.tistory.com/213",
        "categories": [
          "고양종합운동장",
          "내한공연",
          "로제",
          "블랙핑크",
          "아파트떼창",
          "지드래곤",
          "코첼라",
          "콜드플레이",
          "크리스마틴",
          "태양"
        ],
        "isoDate": "2025-04-22T23:48:01.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "서장훈, &lsquo;나는 솔로&rsquo; 24기 영식에 돌직구&hellip;시청자 비난과 제작진의 속사정?",
        "link": "http://app-developer.tistory.com/entry/%EC%84%9C%EC%9E%A5%ED%9B%88-%E2%80%98%EB%82%98%EB%8A%94-%EC%86%94%EB%A1%9C%E2%80%99-24%EA%B8%B0-%EC%98%81%EC%8B%9D%EC%97%90-%EB%8F%8C%EC%A7%81%EA%B5%AC%E2%80%A6%EC%8B%9C%EC%B2%AD%EC%9E%90-%EB%B9%84%EB%82%9C%EA%B3%BC-%EC%A0%9C%EC%9E%91%EC%A7%84%EC%9D%98-%EC%86%8D%EC%82%AC%EC%A0%95",
        "pubDate": "Tue, 22 Apr 2025 23:11:55 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EC%84%9C%EC%9E%A5%ED%9B%88-%E2%80%98%EB%82%98%EB%8A%94-%EC%86%94%EB%A1%9C%E2%80%99-24%EA%B8%B0-%EC%98%81%EC%8B%9D%EC%97%90-%EB%8F%8C%EC%A7%81%EA%B5%AC%E2%80%A6%EC%8B%9C%EC%B2%AD%EC%9E%90-%EB%B9%84%EB%82%9C%EA%B3%BC-%EC%A0%9C%EC%9E%91%EC%A7%84%EC%9D%98-%EC%86%8D%EC%82%AC%EC%A0%95#entry212comment",
        "content": "<p data-end=\"260\" data-start=\"85\" data-ke-size=\"size16\">2025년 4월 21일 방송된 KBS JOY &lsquo;무엇이든 물어보살&rsquo;에 &lsquo;나는 솔로&rsquo; 24기에 출연했던 영식(본명 전형진)이 출연하면서 또다시 화제를 모았습니다. 방송 직후 시청자들의 비판이 거셌던 그의 출연은 이번 &lsquo;물어보살&rsquo; 방송을 통해 다시 조명되었고, 이에 대한 서장훈의 현실적인 반응이 눈길을 끌고 있습니다.</p>\n<h3 data-end=\"290\" data-start=\"262\" data-ke-size=\"size23\">&lsquo;나는 솔로&rsquo; 24기, 논란의 중심에 선 영식</h3>\n<p data-end=\"448\" data-start=\"292\" data-ke-size=\"size16\">연애 리얼리티 프로그램인 ENA/SBS PLUS &lsquo;나는 솔로&rsquo; 24기는 방영 당시부터 유독 강한 몰입과 감정 표현으로 시청자들의 찬반이 갈렸습니다. 특히 &lsquo;너드남 특집&rsquo;이라는 타이틀 하에 출연했던 영식은 특정 출연자에게 감정적으로 과몰입하는 모습을 보이며 논란의 중심에 섰습니다.</p>\n<p data-end=\"610\" data-start=\"450\" data-ke-size=\"size16\">그는 옥순이라는 여성 출연자에게 애정 표현을 집중하는 한편, 다른 여성에게는 &ldquo;넌 연습용이다&rdquo;라는 발언을 서슴지 않아 큰 비판을 받았습니다. 이에 온라인 커뮤니티와 SNS에서는 단순한 비호감 논란을 넘어 인신공격성 비난까지 쏟아졌고, 결국 본인의 일상생활까지 영향을 받았다고 밝혔습니다.</p>\n<h3 data-end=\"638\" data-start=\"612\" data-ke-size=\"size23\">&ldquo;제작진은 만세 불렀겠다&rdquo;는 서장훈의 반응</h3>\n<p data-end=\"795\" data-start=\"640\" data-ke-size=\"size16\">&lsquo;무엇이든 물어보살&rsquo; MC 서장훈은 이날 방송에서 &ldquo;제작진은 그런 장면 보면서 만세 불렀겠네&rdquo;라며 제작진의 입장에서 바라본 반응을 솔직하게 언급했습니다. 이는 시청률과 화제성을 고려하면 제작진 입장에선 드라마틱한 전개가 콘텐츠 성공의 열쇠가 되었을 수 있다는 의미로 해석됩니다.</p>\n<p data-end=\"986\" data-start=\"797\" data-ke-size=\"size16\">다만 서장훈은 단순한 놀림이나 조롱이 아닌, 진심 어린 조언도 함께 전했습니다. 그는 &ldquo;순수한 건 좋은데 눈치가 너무 없다&rdquo;며, &ldquo;상대방의 마음을 생각하지 않고 감정만 앞세우는 행동은 반드시 고쳐야 한다&rdquo;고 지적했습니다. 나이가 들수록 이런 행동은 단순히 순수하다는 평가를 넘어서 사회적 부적응으로 이어질 수 있다는 현실적인 충고였습니다.</p>\n<h3 data-end=\"1009\" data-start=\"988\" data-ke-size=\"size23\">시청자 비난, 그 선은 어디인가?</h3>\n<p data-end=\"1146\" data-start=\"1011\" data-ke-size=\"size16\">이수근은 방송 도중 &ldquo;사람들이 뭐라고 욕하냐&rdquo;고 묻자, 영식은 &ldquo;경계성 지능장애, 찐따라는 말부터 부모님 욕까지 들었다&rdquo;고 털어놨습니다. 방송 출연 이후 현실 생활에 영향을 받을 만큼의 비난을 경험했다고 밝힌 그는 심리적 부담을 호소했습니다.</p>\n<p data-end=\"1308\" data-start=\"1148\" data-ke-size=\"size16\">이에 서장훈은 &ldquo;방송이 끝났으면 그만해야지, 부모 욕까지 하는 건 절대 안 된다&rdquo;며, 시청자들의 과도한 비난에 자제를 요청했습니다. 연예인이나 일반인 출연자 모두 방송 뒤에도 인간으로서의 존엄이 지켜져야 하며, 인터넷 공간의 악성 댓글은 누군가에게는 큰 상처가 된다는 점을 강조했습니다.</p>\n<h3 data-end=\"1328\" data-start=\"1310\" data-ke-size=\"size23\">부모님의 반응과 영식의 자성</h3>\n<p data-end=\"1462\" data-start=\"1330\" data-ke-size=\"size16\">영식은 &ldquo;처음엔 어머니가 제가 연기를 한 줄 아셨다. 아들 연기 보더니 배우해도 되겠다고 하셨다&rdquo;며 웃픈 에피소드를 전했습니다. 하지만 감정적으로 오열하는 장면을 보고는 &ldquo;이건 연기가 아니라는 걸 아시고 많이 속상해하셨다&rdquo;고 밝혔습니다.</p>\n<p data-end=\"1588\" data-start=\"1464\" data-ke-size=\"size16\">이러한 경험은 영식 본인에게도 큰 자극이 되었고, 방송 이후 본인을 돌아보는 계기가 되었을 것으로 보입니다. 그 역시 방송을 통해 &ldquo;앞으로는 상대의 입장을 더 생각하는 사람이 되고 싶다&rdquo;고 말하며 변화의 의지를 보였습니다.</p>\n<h3 data-end=\"1616\" data-start=\"1590\" data-ke-size=\"size23\">&lsquo;나는 솔로&rsquo; 24기, 리얼리티의 두 얼굴</h3>\n<p data-end=\"1781\" data-start=\"1618\" data-ke-size=\"size16\">&lsquo;나는 솔로&rsquo; 24기는 단순한 연애 예능이 아닌, 사람들의 다양한 성격과 감정의 복합적인 면을 보여주는 리얼리티 쇼로서, 제작진 입장에서는 성공적이었다고 볼 수 있습니다. 하지만 시청자 입장에서 &lsquo;리얼리티&rsquo;라는 이름 아래 무분별한 몰입과 비난이 허용되는 것은 아닌지에 대한 고민도 필요합니다.</p>\n<p data-end=\"1890\" data-start=\"1783\" data-ke-size=\"size16\">방송은 한 사람의 일부분일 뿐이며, 모든 출연자는 편집이라는 과정을 거친 화면을 통해 보여집니다. 그 이면에는 인간적인 고뇌와 실수가 존재하며, 이를 지나치게 소비하거나 왜곡해서는 안 됩니다.</p>\n<h3 data-end=\"1901\" data-start=\"1892\" data-ke-size=\"size23\">결론</h3>\n<p data-end=\"2067\" data-start=\"1903\" data-ke-size=\"size16\">&lsquo;나는 솔로&rsquo;와 같은 리얼리티 프로그램은 매 회 큰 관심을 끌며 시청자들의 몰입을 유도하지만, 그 이면의 현실도 함께 바라볼 필요가 있습니다. 이번 영식의 사례처럼 한 출연자의 방송 이후 삶까지 영향을 받는 일은 더 이상 반복되지 않도록, 시청자와 제작진 모두에게 균형 잡힌 시각이 요구됩니다.</p>",
        "contentSnippet": "2025년 4월 21일 방송된 KBS JOY ‘무엇이든 물어보살’에 ‘나는 솔로’ 24기에 출연했던 영식(본명 전형진)이 출연하면서 또다시 화제를 모았습니다. 방송 직후 시청자들의 비판이 거셌던 그의 출연은 이번 ‘물어보살’ 방송을 통해 다시 조명되었고, 이에 대한 서장훈의 현실적인 반응이 눈길을 끌고 있습니다.\n‘나는 솔로’ 24기, 논란의 중심에 선 영식\n연애 리얼리티 프로그램인 ENA/SBS PLUS ‘나는 솔로’ 24기는 방영 당시부터 유독 강한 몰입과 감정 표현으로 시청자들의 찬반이 갈렸습니다. 특히 ‘너드남 특집’이라는 타이틀 하에 출연했던 영식은 특정 출연자에게 감정적으로 과몰입하는 모습을 보이며 논란의 중심에 섰습니다.\n그는 옥순이라는 여성 출연자에게 애정 표현을 집중하는 한편, 다른 여성에게는 “넌 연습용이다”라는 발언을 서슴지 않아 큰 비판을 받았습니다. 이에 온라인 커뮤니티와 SNS에서는 단순한 비호감 논란을 넘어 인신공격성 비난까지 쏟아졌고, 결국 본인의 일상생활까지 영향을 받았다고 밝혔습니다.\n“제작진은 만세 불렀겠다”는 서장훈의 반응\n‘무엇이든 물어보살’ MC 서장훈은 이날 방송에서 “제작진은 그런 장면 보면서 만세 불렀겠네”라며 제작진의 입장에서 바라본 반응을 솔직하게 언급했습니다. 이는 시청률과 화제성을 고려하면 제작진 입장에선 드라마틱한 전개가 콘텐츠 성공의 열쇠가 되었을 수 있다는 의미로 해석됩니다.\n다만 서장훈은 단순한 놀림이나 조롱이 아닌, 진심 어린 조언도 함께 전했습니다. 그는 “순수한 건 좋은데 눈치가 너무 없다”며, “상대방의 마음을 생각하지 않고 감정만 앞세우는 행동은 반드시 고쳐야 한다”고 지적했습니다. 나이가 들수록 이런 행동은 단순히 순수하다는 평가를 넘어서 사회적 부적응으로 이어질 수 있다는 현실적인 충고였습니다.\n시청자 비난, 그 선은 어디인가?\n이수근은 방송 도중 “사람들이 뭐라고 욕하냐”고 묻자, 영식은 “경계성 지능장애, 찐따라는 말부터 부모님 욕까지 들었다”고 털어놨습니다. 방송 출연 이후 현실 생활에 영향을 받을 만큼의 비난을 경험했다고 밝힌 그는 심리적 부담을 호소했습니다.\n이에 서장훈은 “방송이 끝났으면 그만해야지, 부모 욕까지 하는 건 절대 안 된다”며, 시청자들의 과도한 비난에 자제를 요청했습니다. 연예인이나 일반인 출연자 모두 방송 뒤에도 인간으로서의 존엄이 지켜져야 하며, 인터넷 공간의 악성 댓글은 누군가에게는 큰 상처가 된다는 점을 강조했습니다.\n부모님의 반응과 영식의 자성\n영식은 “처음엔 어머니가 제가 연기를 한 줄 아셨다. 아들 연기 보더니 배우해도 되겠다고 하셨다”며 웃픈 에피소드를 전했습니다. 하지만 감정적으로 오열하는 장면을 보고는 “이건 연기가 아니라는 걸 아시고 많이 속상해하셨다”고 밝혔습니다.\n이러한 경험은 영식 본인에게도 큰 자극이 되었고, 방송 이후 본인을 돌아보는 계기가 되었을 것으로 보입니다. 그 역시 방송을 통해 “앞으로는 상대의 입장을 더 생각하는 사람이 되고 싶다”고 말하며 변화의 의지를 보였습니다.\n‘나는 솔로’ 24기, 리얼리티의 두 얼굴\n‘나는 솔로’ 24기는 단순한 연애 예능이 아닌, 사람들의 다양한 성격과 감정의 복합적인 면을 보여주는 리얼리티 쇼로서, 제작진 입장에서는 성공적이었다고 볼 수 있습니다. 하지만 시청자 입장에서 ‘리얼리티’라는 이름 아래 무분별한 몰입과 비난이 허용되는 것은 아닌지에 대한 고민도 필요합니다.\n방송은 한 사람의 일부분일 뿐이며, 모든 출연자는 편집이라는 과정을 거친 화면을 통해 보여집니다. 그 이면에는 인간적인 고뇌와 실수가 존재하며, 이를 지나치게 소비하거나 왜곡해서는 안 됩니다.\n결론\n‘나는 솔로’와 같은 리얼리티 프로그램은 매 회 큰 관심을 끌며 시청자들의 몰입을 유도하지만, 그 이면의 현실도 함께 바라볼 필요가 있습니다. 이번 영식의 사례처럼 한 출연자의 방송 이후 삶까지 영향을 받는 일은 더 이상 반복되지 않도록, 시청자와 제작진 모두에게 균형 잡힌 시각이 요구됩니다.",
        "guid": "http://app-developer.tistory.com/212",
        "categories": [
          "kbsjoy",
          "나는솔로",
          "리얼리티프로그램",
          "무엇이든물어보살",
          "방송논란",
          "서장훈",
          "서장훈조언",
          "시청자비난",
          "연애예능",
          "영식"
        ],
        "isoDate": "2025-04-22T14:11:55.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "&ldquo;에일리 결혼했어요&rdquo;&hellip;심장 터질 듯한 입장 순간, 모두가 울컥한 이유",
        "link": "http://app-developer.tistory.com/entry/%E2%80%9C%EC%97%90%EC%9D%BC%EB%A6%AC-%EA%B2%B0%ED%98%BC%ED%96%88%EC%96%B4%EC%9A%94%E2%80%9D%E2%80%A6%EC%8B%AC%EC%9E%A5-%ED%84%B0%EC%A7%88-%EB%93%AF%ED%95%9C-%EC%9E%85%EC%9E%A5-%EC%88%9C%EA%B0%84-%EB%AA%A8%EB%91%90%EA%B0%80-%EC%9A%B8%EC%BB%A5%ED%95%9C-%EC%9D%B4%EC%9C%A0",
        "pubDate": "Tue, 22 Apr 2025 22:21:54 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%E2%80%9C%EC%97%90%EC%9D%BC%EB%A6%AC-%EA%B2%B0%ED%98%BC%ED%96%88%EC%96%B4%EC%9A%94%E2%80%9D%E2%80%A6%EC%8B%AC%EC%9E%A5-%ED%84%B0%EC%A7%88-%EB%93%AF%ED%95%9C-%EC%9E%85%EC%9E%A5-%EC%88%9C%EA%B0%84-%EB%AA%A8%EB%91%90%EA%B0%80-%EC%9A%B8%EC%BB%A5%ED%95%9C-%EC%9D%B4%EC%9C%A0#entry211comment",
        "content": "<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-9261610702981122\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<p data-end=\"201\" data-start=\"42\" data-ke-size=\"size16\">가수 에일리가 드디어 웨딩마치를 울렸습니다. 팬들에게 '보여줄게'로 다짐했던 그녀는 이제 &lsquo;평생 함께할 사람&rsquo;을 보여주며 인생 2막을 열었습니다. 배우 출신 사업가 최시훈과 법적 부부가 된 지 약 8개월, 그 사랑의 결실을 축복하는 결혼식이 지난 4월 20일 서울 모처에서 열렸습니다.</p>\n<h3 data-end=\"237\" data-start=\"203\" data-ke-size=\"size23\">&lsquo;Heaven&rsquo;의 주인공, 현실 속 천국에 입성하다</h3>\n<p data-end=\"367\" data-start=\"239\" data-ke-size=\"size16\">에일리는 2012년 &lsquo;Heaven&rsquo;으로 데뷔한 이후 &lsquo;보여줄게&rsquo;, &lsquo;첫눈처럼 너에게 가겠다&rsquo; 등 수많은 명곡을 통해 폭발적인 가창력과 감성으로 대중을 사로잡아왔습니다. 그런 그녀가 이번엔 사랑이라는 또 다른 감동을 안겨주었습니다.</p>\n<p data-end=\"503\" data-start=\"369\" data-ke-size=\"size16\">결혼식 이후 그녀는 SNS를 통해 &ldquo;여러분, (에)일리 결혼했어요&rdquo;라는 글과 함께 결혼식 영상을 공개했습니다. 영상 속 그녀는 수많은 하객들의 축복 속에 환한 미소로 신부 입장을 하고 있었고, 이를 지켜보는 모두가 울컥할 수밖에 없었습니다.</p>\n<p data-end=\"612\" data-start=\"505\" data-ke-size=\"size16\">그녀는 &ldquo;수많은 하객 분들의 축하를 받으며 웨딩마치를 울렸어요. 정말 감사하고 행복한 날이었어요&rdquo;라고 전하며 &ldquo;앞으로 서로 의지하고 존중하며 사랑하는 예쁜 부부가 되겠다&rdquo;는 다짐을 남겼습니다.</p>\n<h3 data-end=\"651\" data-start=\"614\" data-ke-size=\"size23\">&ldquo;신부 입장 순간, 심장 터지는 줄&rdquo;&hellip;최시훈의 진심 고백</h3>\n<p data-end=\"781\" data-start=\"653\" data-ke-size=\"size16\">최시훈 역시 자신의 SNS를 통해 결혼식을 회상했습니다. &ldquo;정말 꿈 같은 하루였다. 신부 입장을 바라보는데 심장이 터지는 줄 알았다. 눈물이 날 것 같았다&rdquo;고 말하며, 그의 진심 어린 고백은 보는 이들의 마음을 뭉클하게 했습니다.</p>\n<p data-end=\"884\" data-start=\"783\" data-ke-size=\"size16\">그는 &ldquo;하루가 어떻게 지나갔는지도 모르겠다. 날씨도 환상적이었고, 와주신 모든 분들께 진심으로 감사드린다. 평생 잊지 않겠다&rdquo;라며 결혼식을 함께한 모든 이들에게 고마움을 전했습니다.</p>\n<p data-end=\"973\" data-start=\"886\" data-ke-size=\"size16\">무엇보다 &ldquo;세상에서 가장 사랑하는 나의 아내 이예진. 우리의 러브스토리는 앞으로도 계속될 것이다&rdquo;라는 말에서, 두 사람의 애정이 얼마나 깊은지 느껴졌습니다.</p>\n<h3 data-end=\"1021\" data-start=\"975\" data-ke-size=\"size23\">법적 부부에서 공식 부부로&hellip;에일리&hearts;최시훈, 그들의 러브 스토리</h3>\n<p data-end=\"1116\" data-start=\"1023\" data-ke-size=\"size16\">사실 두 사람은 지난해 8월 혼인신고를 먼저 마친 상태였습니다. 법적으로는 이미 부부였지만, 가족과 지인들의 축복 속에서 결혼식을 올리고자 이번 자리를 마련한 것이죠.</p>\n<p data-end=\"1264\" data-start=\"1118\" data-ke-size=\"size16\">결혼식은 양가 가족뿐 아니라 많은 연예계 동료, 미국&middot;한국 친구들이 참석한 가운데 따뜻한 분위기 속에서 진행됐습니다. 연예계 활동을 쉬고 현재 식음료 사업에 집중하고 있는 최시훈과 활발히 활동 중인 에일리는, 서로의 길을 존중하며 한 팀으로서 살아가고자 합니다.</p>\n<p data-end=\"1393\" data-start=\"1266\" data-ke-size=\"size16\">두 사람은 그 누구보다 &lsquo;진정성&rsquo; 있는 모습으로 사랑을 키워온 커플입니다. 서로에 대한 깊은 신뢰와 배려가 있었기에 혼인신고라는 다소 이른 결정을 내릴 수 있었고, 이제는 결혼식을 통해 그 사랑을 공식적으로 축하받게 되었습니다.</p>\n<h3 data-end=\"1426\" data-start=\"1395\" data-ke-size=\"size23\">SNS 속 &lsquo;찐 행복&rsquo;&hellip;진짜 사랑이란 이런 것</h3>\n<p data-end=\"1567\" data-start=\"1428\" data-ke-size=\"size16\">결혼식 이후 공개된 사진과 영상 속 두 사람은 내내 웃음이 끊이질 않았습니다. 평범한 러브 스토리가 아닌, 수많은 곡으로 사람들의 마음을 울렸던 가수와 현실 속 자신만의 천국을 찾은 사업가의 이야기. 그 자체만으로도 사람들의 마음을 따뜻하게 합니다.</p>\n<p data-end=\"1654\" data-start=\"1569\" data-ke-size=\"size16\">그녀의 팬들은 &ldquo;진심으로 축하해요&rdquo;, &ldquo;예쁜 사랑 오래오래 하세요&rdquo;, &ldquo;이제는 감성 여왕에서 사랑꾼 여왕이네요&rdquo; 등 응원의 메시지를 아낌없이 보냈습니다.</p>\n<h3 data-end=\"1665\" data-start=\"1656\" data-ke-size=\"size23\">결론</h3>\n<p data-end=\"1813\" data-start=\"1667\" data-ke-size=\"size16\">에일리와 최시훈의 결혼은 단순한 스타의 결혼이 아니라, &lsquo;진심&rsquo;이 만들어낸 사랑의 결정체였습니다. 먼저 혼인신고를 마친 뒤 결혼식을 올리는 새로운 방식은, 두 사람의 상황과 가치관을 고려한 결과이며 많은 이들에게 진정한 사랑이 무엇인지 다시금 생각하게 만듭니다.</p>\n<p data-end=\"1920\" data-start=\"1815\" data-ke-size=\"size16\">우리는 종종 화려한 결혼식이나 겉모습에 치우쳐 사랑을 판단하곤 합니다. 하지만 에일리와 최시훈처럼 서로를 존중하고 배려하며 사랑을 지켜나가는 모습이야말로 진짜 결혼, 진짜 사랑이 아닐까요?</p>\n<p data-end=\"1976\" data-start=\"1922\" data-ke-size=\"size16\">앞으로도 두 사람이 서로의 가장 큰 팬이 되어, 인생의 모든 순간을 함께하길 진심으로 응원합니다.</p>",
        "contentSnippet": "반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n가수 에일리가 드디어 웨딩마치를 울렸습니다. 팬들에게 '보여줄게'로 다짐했던 그녀는 이제 ‘평생 함께할 사람’을 보여주며 인생 2막을 열었습니다. 배우 출신 사업가 최시훈과 법적 부부가 된 지 약 8개월, 그 사랑의 결실을 축복하는 결혼식이 지난 4월 20일 서울 모처에서 열렸습니다.\n‘Heaven’의 주인공, 현실 속 천국에 입성하다\n에일리는 2012년 ‘Heaven’으로 데뷔한 이후 ‘보여줄게’, ‘첫눈처럼 너에게 가겠다’ 등 수많은 명곡을 통해 폭발적인 가창력과 감성으로 대중을 사로잡아왔습니다. 그런 그녀가 이번엔 사랑이라는 또 다른 감동을 안겨주었습니다.\n결혼식 이후 그녀는 SNS를 통해 “여러분, (에)일리 결혼했어요”라는 글과 함께 결혼식 영상을 공개했습니다. 영상 속 그녀는 수많은 하객들의 축복 속에 환한 미소로 신부 입장을 하고 있었고, 이를 지켜보는 모두가 울컥할 수밖에 없었습니다.\n그녀는 “수많은 하객 분들의 축하를 받으며 웨딩마치를 울렸어요. 정말 감사하고 행복한 날이었어요”라고 전하며 “앞으로 서로 의지하고 존중하며 사랑하는 예쁜 부부가 되겠다”는 다짐을 남겼습니다.\n“신부 입장 순간, 심장 터지는 줄”…최시훈의 진심 고백\n최시훈 역시 자신의 SNS를 통해 결혼식을 회상했습니다. “정말 꿈 같은 하루였다. 신부 입장을 바라보는데 심장이 터지는 줄 알았다. 눈물이 날 것 같았다”고 말하며, 그의 진심 어린 고백은 보는 이들의 마음을 뭉클하게 했습니다.\n그는 “하루가 어떻게 지나갔는지도 모르겠다. 날씨도 환상적이었고, 와주신 모든 분들께 진심으로 감사드린다. 평생 잊지 않겠다”라며 결혼식을 함께한 모든 이들에게 고마움을 전했습니다.\n무엇보다 “세상에서 가장 사랑하는 나의 아내 이예진. 우리의 러브스토리는 앞으로도 계속될 것이다”라는 말에서, 두 사람의 애정이 얼마나 깊은지 느껴졌습니다.\n법적 부부에서 공식 부부로…에일리♥최시훈, 그들의 러브 스토리\n사실 두 사람은 지난해 8월 혼인신고를 먼저 마친 상태였습니다. 법적으로는 이미 부부였지만, 가족과 지인들의 축복 속에서 결혼식을 올리고자 이번 자리를 마련한 것이죠.\n결혼식은 양가 가족뿐 아니라 많은 연예계 동료, 미국·한국 친구들이 참석한 가운데 따뜻한 분위기 속에서 진행됐습니다. 연예계 활동을 쉬고 현재 식음료 사업에 집중하고 있는 최시훈과 활발히 활동 중인 에일리는, 서로의 길을 존중하며 한 팀으로서 살아가고자 합니다.\n두 사람은 그 누구보다 ‘진정성’ 있는 모습으로 사랑을 키워온 커플입니다. 서로에 대한 깊은 신뢰와 배려가 있었기에 혼인신고라는 다소 이른 결정을 내릴 수 있었고, 이제는 결혼식을 통해 그 사랑을 공식적으로 축하받게 되었습니다.\nSNS 속 ‘찐 행복’…진짜 사랑이란 이런 것\n결혼식 이후 공개된 사진과 영상 속 두 사람은 내내 웃음이 끊이질 않았습니다. 평범한 러브 스토리가 아닌, 수많은 곡으로 사람들의 마음을 울렸던 가수와 현실 속 자신만의 천국을 찾은 사업가의 이야기. 그 자체만으로도 사람들의 마음을 따뜻하게 합니다.\n그녀의 팬들은 “진심으로 축하해요”, “예쁜 사랑 오래오래 하세요”, “이제는 감성 여왕에서 사랑꾼 여왕이네요” 등 응원의 메시지를 아낌없이 보냈습니다.\n결론\n에일리와 최시훈의 결혼은 단순한 스타의 결혼이 아니라, ‘진심’이 만들어낸 사랑의 결정체였습니다. 먼저 혼인신고를 마친 뒤 결혼식을 올리는 새로운 방식은, 두 사람의 상황과 가치관을 고려한 결과이며 많은 이들에게 진정한 사랑이 무엇인지 다시금 생각하게 만듭니다.\n우리는 종종 화려한 결혼식이나 겉모습에 치우쳐 사랑을 판단하곤 합니다. 하지만 에일리와 최시훈처럼 서로를 존중하고 배려하며 사랑을 지켜나가는 모습이야말로 진짜 결혼, 진짜 사랑이 아닐까요?\n앞으로도 두 사람이 서로의 가장 큰 팬이 되어, 인생의 모든 순간을 함께하길 진심으로 응원합니다.",
        "guid": "http://app-developer.tistory.com/211",
        "categories": [
          "셀럽 웨딩",
          "에일리",
          "에일리 결혼",
          "에일리 웨딩",
          "연예계 커플",
          "연예계 핫이슈",
          "연예인 결혼",
          "최시훈",
          "최시훈 사업가",
          "혼인신고"
        ],
        "isoDate": "2025-04-22T13:21:54.000Z"
      },
      {
        "creator": "브리핑허브",
        "title": "김종민 결혼식의 사진 논란, 인순이의 SNS 게시물 삭제 이유는?",
        "link": "http://app-developer.tistory.com/entry/%EA%B9%80%EC%A2%85%EB%AF%BC-%EA%B2%B0%ED%98%BC%EC%8B%9D%EC%9D%98-%EC%82%AC%EC%A7%84-%EB%85%BC%EB%9E%80-%EC%9D%B8%EC%88%9C%EC%9D%B4%EC%9D%98-SNS-%EA%B2%8C%EC%8B%9C%EB%AC%BC-%EC%82%AD%EC%A0%9C-%EC%9D%B4%EC%9C%A0%EB%8A%94",
        "pubDate": "Mon, 21 Apr 2025 16:03:55 +0900",
        "author": "브리핑허브",
        "comments": "http://app-developer.tistory.com/entry/%EA%B9%80%EC%A2%85%EB%AF%BC-%EA%B2%B0%ED%98%BC%EC%8B%9D%EC%9D%98-%EC%82%AC%EC%A7%84-%EB%85%BC%EB%9E%80-%EC%9D%B8%EC%88%9C%EC%9D%B4%EC%9D%98-SNS-%EA%B2%8C%EC%8B%9C%EB%AC%BC-%EC%82%AD%EC%A0%9C-%EC%9D%B4%EC%9C%A0%EB%8A%94#entry209comment",
        "content": "<h3 data-ke-size=\"size23\">김종민 결혼식의 사진 논란, 인순이의 SNS 게시물 삭제 이유는?</h3>\n<p data-ke-size=\"size16\">김종민의 결혼식이 끝난 후에, 예상치 못한 사진 논란이 발생했습니다. 가수 인순이가 자신의 SNS에 결혼식 사진을 올리면서, 비연예인 신부의 얼굴이 그대로 노출된 것이 이번 사건의 발단이었습니다. 결혼식에서의 사진 공개는 신중하게 처리되어야 하는 부분이지만, 이번 경우에는 인순이의 의도치 않은 실수로 인해 문제가 발생했습니다.</p>\n<h4 data-ke-size=\"size20\">사건의 시작과 배경</h4>\n<p data-ke-size=\"size16\">2025년 4월 20일, 서울 중구 신라호텔 영빈관에서는 김종민과 그의 연인이 결혼식을 올렸습니다. 이 결혼식은 많은 유명 인사들이 참석한 가운데 화려하게 진행되었습니다. 김종민은 이미 결혼을 앞둔 기자회견에서 결혼과 관련된 여러 계획을 밝히며 팬들에게 기대감을 주었습니다. 이번 결혼식은 그의 팬들과 대중들에게도 큰 관심을 받았습니다.</p>\n<h4 data-ke-size=\"size20\">인순이의 SNS 게시물</h4>\n<p data-ke-size=\"size16\">결혼식 당일, 가수 인순이는 자신의 SNS에 결혼식 사진을 올리며 바쁜 하루를 보냈다고 전했습니다. 그녀의 게시물에는 김종민과 신부가 함께 있는 사진이 포함되어 있었는데, 문제는 신부의 얼굴이 모자이크 처리 없이 그대로 노출된 것이었습니다. 이는 즉시 온라인 커뮤니티와 SNS 상에서 논란이 되었고, 많은 누리꾼들이 비연예인 신부의 프라이버시를 지켜야 한다고 주장했습니다.</p>\n<h4 data-ke-size=\"size20\">누리꾼들의 반응</h4>\n<p data-ke-size=\"size16\">이 사건은 특히 비연예인 신부의 사생활 보호에 대한 문제를 제기했습니다. 일부 누리꾼들은 \"김종민의 신부 얼굴 공개하지 않기로 했는데\"라며 인순이의 행동을 비판했습니다. 이와 같은 반응은 신부의 비공개 결혼식이라는 점을 강조하며, 인순이가 해당 사진을 삭제해야 한다는 의견이 많았습니다.</p>\n<h4 data-ke-size=\"size20\">인순이의 대응</h4>\n<p data-ke-size=\"size16\">논란이 커지자, 인순이는 재빨리 자신의 SNS에서 해당 사진을 삭제했습니다. 그녀는 이와 관련하여 공식적인 입장을 밝히지는 않았지만, 신부의 사생활을 보호하기 위한 조치로 보입니다. 인순이의 즉각적인 대응은 더 이상의 논란을 막기 위한 것으로 해석됩니다.</p>\n<h4 data-ke-size=\"size20\">다른 유명 인사들의 대응</h4>\n<p data-ke-size=\"size16\">같은 결혼식에 참석했던 가수 신지는 SNS에 올린 결혼식 사진에서 신부의 얼굴을 가렸습니다. 이는 신부의 사생활을 보호하기 위한 배려로 보이며, 그녀의 게시물에는 인순이의 게시물에 대한 언급도 있었습니다. \"인순이 누나 인스타에서 신부님 얼굴 보게 됐어요\"라는 댓글이 달리기도 했습니다.</p>\n<h4 data-ke-size=\"size20\">결혼식의 의미</h4>\n<p data-ke-size=\"size16\">연예인들의 결혼식은 항상 대중의 관심을 받지만, 이번 사건은 그 관심이 불필요한 논란으로 이어질 수 있음을 보여줍니다. 신부와 신랑의 프라이버시는 존중받아야 하며, 그들의 사생활을 공개하지 않겠다는 약속은 지켜져야 합니다. 이번 사건은 유명 인사들의 SNS 활용에 대한 경각심을 일깨우는 계기가 되었습니다.</p>\n<h4 data-ke-size=\"size20\">결론과 교훈</h4>\n<p data-ke-size=\"size16\">이번 사건을 통해 유명 인사들은 자신의 SNS에 올리는 게시물에 대해 더욱 신중해야 함을 배웠습니다. 비연예인의 사생활 보호는 당연히 존중받아야 하며, 그에 대한 배려가 필요합니다. 결혼식과 같은 개인적인 행사에서 촬영된 사진은 신중히 다루어져야 하며, 공개 여부에 대한 철저한 검토가 필요합니다.</p>\n<p data-ke-size=\"size16\">해당 사건은 대중과 유명 인사들 사이에서 사생활 보호의 중요성을 다시 한 번 상기시켰습니다. 인순이의 실수는 누구에게나 일어날 수 있는 일임을 보여주지만, 이를 통해 배우고 개선해 나가는 것이 중요합니다.</p>",
        "contentSnippet": "김종민 결혼식의 사진 논란, 인순이의 SNS 게시물 삭제 이유는?\n김종민의 결혼식이 끝난 후에, 예상치 못한 사진 논란이 발생했습니다. 가수 인순이가 자신의 SNS에 결혼식 사진을 올리면서, 비연예인 신부의 얼굴이 그대로 노출된 것이 이번 사건의 발단이었습니다. 결혼식에서의 사진 공개는 신중하게 처리되어야 하는 부분이지만, 이번 경우에는 인순이의 의도치 않은 실수로 인해 문제가 발생했습니다.\n사건의 시작과 배경\n2025년 4월 20일, 서울 중구 신라호텔 영빈관에서는 김종민과 그의 연인이 결혼식을 올렸습니다. 이 결혼식은 많은 유명 인사들이 참석한 가운데 화려하게 진행되었습니다. 김종민은 이미 결혼을 앞둔 기자회견에서 결혼과 관련된 여러 계획을 밝히며 팬들에게 기대감을 주었습니다. 이번 결혼식은 그의 팬들과 대중들에게도 큰 관심을 받았습니다.\n인순이의 SNS 게시물\n결혼식 당일, 가수 인순이는 자신의 SNS에 결혼식 사진을 올리며 바쁜 하루를 보냈다고 전했습니다. 그녀의 게시물에는 김종민과 신부가 함께 있는 사진이 포함되어 있었는데, 문제는 신부의 얼굴이 모자이크 처리 없이 그대로 노출된 것이었습니다. 이는 즉시 온라인 커뮤니티와 SNS 상에서 논란이 되었고, 많은 누리꾼들이 비연예인 신부의 프라이버시를 지켜야 한다고 주장했습니다.\n누리꾼들의 반응\n이 사건은 특히 비연예인 신부의 사생활 보호에 대한 문제를 제기했습니다. 일부 누리꾼들은 \"김종민의 신부 얼굴 공개하지 않기로 했는데\"라며 인순이의 행동을 비판했습니다. 이와 같은 반응은 신부의 비공개 결혼식이라는 점을 강조하며, 인순이가 해당 사진을 삭제해야 한다는 의견이 많았습니다.\n인순이의 대응\n논란이 커지자, 인순이는 재빨리 자신의 SNS에서 해당 사진을 삭제했습니다. 그녀는 이와 관련하여 공식적인 입장을 밝히지는 않았지만, 신부의 사생활을 보호하기 위한 조치로 보입니다. 인순이의 즉각적인 대응은 더 이상의 논란을 막기 위한 것으로 해석됩니다.\n다른 유명 인사들의 대응\n같은 결혼식에 참석했던 가수 신지는 SNS에 올린 결혼식 사진에서 신부의 얼굴을 가렸습니다. 이는 신부의 사생활을 보호하기 위한 배려로 보이며, 그녀의 게시물에는 인순이의 게시물에 대한 언급도 있었습니다. \"인순이 누나 인스타에서 신부님 얼굴 보게 됐어요\"라는 댓글이 달리기도 했습니다.\n결혼식의 의미\n연예인들의 결혼식은 항상 대중의 관심을 받지만, 이번 사건은 그 관심이 불필요한 논란으로 이어질 수 있음을 보여줍니다. 신부와 신랑의 프라이버시는 존중받아야 하며, 그들의 사생활을 공개하지 않겠다는 약속은 지켜져야 합니다. 이번 사건은 유명 인사들의 SNS 활용에 대한 경각심을 일깨우는 계기가 되었습니다.\n결론과 교훈\n이번 사건을 통해 유명 인사들은 자신의 SNS에 올리는 게시물에 대해 더욱 신중해야 함을 배웠습니다. 비연예인의 사생활 보호는 당연히 존중받아야 하며, 그에 대한 배려가 필요합니다. 결혼식과 같은 개인적인 행사에서 촬영된 사진은 신중히 다루어져야 하며, 공개 여부에 대한 철저한 검토가 필요합니다.\n해당 사건은 대중과 유명 인사들 사이에서 사생활 보호의 중요성을 다시 한 번 상기시켰습니다. 인순이의 실수는 누구에게나 일어날 수 있는 일임을 보여주지만, 이를 통해 배우고 개선해 나가는 것이 중요합니다.",
        "guid": "http://app-developer.tistory.com/209",
        "categories": [
          "sns 사진 논란",
          "결혼식 사진 유출",
          "김종민 결혼식",
          "비연예인 사생활",
          "신부 얼굴 공개",
          "신부 얼굴 노출",
          "연예계 사생활 보호",
          "연예인 결혼 논란",
          "인순이 sns",
          "인순이 논란"
        ],
        "isoDate": "2025-04-21T07:03:55.000Z"
      }
    ]
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": [
      {
        "creator": "강철 벼룩",
        "title": "리눅스용 사용자 지정 스크립트 확장 사용 시 주의 사항",
        "link": "http://www.dokyun.pe.kr/363",
        "pubDate": "Sun, 20 Apr 2025 21:05:27 +0900",
        "author": "강철 벼룩",
        "comments": "http://www.dokyun.pe.kr/363#entry363comment",
        "content": "<h3 data-ke-size=\"size23\">Considerations and Improvements When Using \"Custom Script for Linux\" Extensions&nbsp;</h3>\n<p data-ke-size=\"size18\">가상&nbsp;머신&nbsp;확장&nbsp;집합(VMSS)이나&nbsp;가상&nbsp;머신(VM)에서&nbsp;리눅스&nbsp;OS를&nbsp;사용할&nbsp;경우&nbsp;[설정]&nbsp;섹션의&nbsp;[확장&nbsp;프로그램&nbsp;+&nbsp;애플리케이션]&nbsp;메뉴에서&nbsp;리눅스용&nbsp;사용자&nbsp;지정&nbsp;스크립트를&nbsp;적용할&nbsp;수&nbsp;있습니다. <br />Azure를&nbsp;처음&nbsp;사용하거나&nbsp;포털&nbsp;사용법이&nbsp;아직&nbsp;익숙하지&nbsp;않은&nbsp;사람의&nbsp;경우&nbsp;이&nbsp;기능을&nbsp;사용할&nbsp;때&nbsp;자주하는&nbsp;실수가&nbsp;있습니다. <br /><br />다음&nbsp;그림은&nbsp;우분투&nbsp;서버를&nbsp;사용하는&nbsp;VM에서&nbsp;자동화&nbsp;스크립트를&nbsp;적용하는&nbsp;모습입니다. <br />사람들이&nbsp;자주하게&nbsp;되는&nbsp;실수는&nbsp;[Script&nbsp;files]&nbsp;항목에서&nbsp;[찾아보기]&nbsp;버튼을&nbsp;눌러&nbsp;실행하기&nbsp;원하는&nbsp;스크립트를&nbsp;하나&nbsp;이상&nbsp;선택한&nbsp;다음(빨간&nbsp;상자),&nbsp;아래&nbsp;[Command]&nbsp;항목의&nbsp;녹색&nbsp;상자내의&nbsp;파란&nbsp;상자&nbsp;부분을&nbsp;호출할&nbsp;스크립트(이름&nbsp;및&nbsp;확장자)로&nbsp;바꾸지&nbsp;않고&nbsp;사용자&nbsp;지정&nbsp;스크립트를&nbsp;적용하는&nbsp;경우입니다.</p>\n<p data-ke-size=\"size18\">&nbsp;</p>\n<p><figure class=\"imageblock widthContent\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"950\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/c2Tzye/btsNsb8g93m/lvzMCtoSN6RRqREVOQKYMk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c2Tzye/btsNsb8g93m/lvzMCtoSN6RRqREVOQKYMk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c2Tzye/btsNsb8g93m/lvzMCtoSN6RRqREVOQKYMk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc2Tzye%2FbtsNsb8g93m%2FlvzMCtoSN6RRqREVOQKYMk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"950\" height=\"720\" data-filename=\"1.png\" data-origin-width=\"950\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\">이 기능을 몇 가지 케이스로 테스트해 봤습니다. 사용성을 조금 더 높여 실수를 줄일 수 있는 방안이라고 생각되는 2가지 개선안을 도출했고, 마이크로소프트에도 제안 메일을 보내놓은 상태입니다.</p>\n<p data-ke-size=\"size18\">혹, 받아들여지지 않더라도 가상머신에 자동화 스크립트를 적용할 때 이런 주의 사항이 있다는 점을 기억할 수 있도록 이 글을 작성해 놓은 것 자체로 의미가 있을 것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\"><span style=\"color: #ee2323;\"><b>[개선 제안 내용]</b></span></p>\n<p data-ke-size=\"size18\"><span style=\"color: #006dd7;\">1. 빨간 상자에 하나의 스크립트가 선택되면 파란 상자의 스크립트도 자동으로 변경합니다. </span><br /><span style=\"color: #006dd7;\">2.&nbsp;빨간&nbsp;상자에&nbsp;둘&nbsp;이상의&nbsp;스크립트가&nbsp;선택되면,&nbsp;최초&nbsp;호출되는&nbsp;스크립트&nbsp;선택&nbsp;창을&nbsp;표시하고&nbsp;선택한&nbsp;스크립트로&nbsp;변경합니다.</span> </p>",
        "contentSnippet": "Considerations and Improvements When Using \"Custom Script for Linux\" Extensions \n가상 머신 확장 집합(VMSS)이나 가상 머신(VM)에서 리눅스 OS를 사용할 경우 [설정] 섹션의 [확장 프로그램 + 애플리케이션] 메뉴에서 리눅스용 사용자 지정 스크립트를 적용할 수 있습니다. \nAzure를 처음 사용하거나 포털 사용법이 아직 익숙하지 않은 사람의 경우 이 기능을 사용할 때 자주하는 실수가 있습니다. \n다음 그림은 우분투 서버를 사용하는 VM에서 자동화 스크립트를 적용하는 모습입니다. \n사람들이 자주하게 되는 실수는 [Script files] 항목에서 [찾아보기] 버튼을 눌러 실행하기 원하는 스크립트를 하나 이상 선택한 다음(빨간 상자), 아래 [Command] 항목의 녹색 상자내의 파란 상자 부분을 호출할 스크립트(이름 및 확장자)로 바꾸지 않고 사용자 지정 스크립트를 적용하는 경우입니다.\n \n\n\n \n이 기능을 몇 가지 케이스로 테스트해 봤습니다. 사용성을 조금 더 높여 실수를 줄일 수 있는 방안이라고 생각되는 2가지 개선안을 도출했고, 마이크로소프트에도 제안 메일을 보내놓은 상태입니다.\n혹, 받아들여지지 않더라도 가상머신에 자동화 스크립트를 적용할 때 이런 주의 사항이 있다는 점을 기억할 수 있도록 이 글을 작성해 놓은 것 자체로 의미가 있을 것 같습니다.\n \n[개선 제안 내용]\n1. 빨간 상자에 하나의 스크립트가 선택되면 파란 상자의 스크립트도 자동으로 변경합니다. \n2. 빨간 상자에 둘 이상의 스크립트가 선택되면, 최초 호출되는 스크립트 선택 창을 표시하고 선택한 스크립트로 변경합니다.",
        "guid": "http://www.dokyun.pe.kr/363",
        "categories": [
          "Azure &amp; Windows/Azure",
          "AzureVM",
          "customscript",
          "extension",
          "VMSS"
        ],
        "isoDate": "2025-04-20T12:05:27.000Z"
      }
    ]
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": [
      {
        "title": "3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?",
        "link": "https://thdev.tech/architecture/2025/04/20/Android-Architecture-03/",
        "pubDate": "Sun, 20 Apr 2025 00:00:00 +0000",
        "content": "<p>이 글에서는 Composable Architecture에서 Alert(Dialog)/Toast(Snackbar) 활용법을 소개한다.</p>\n\n<p>기본 형태는 1부/2부에서 소개한 Action을 활용하는 시스템을 적용했다.</p>\n\n<p>이 글은 디자인 시스템이 있을 경우 Dialog/Toast를 공통화시키는 방식을 다루고 있다.</p>\n\n<h3>이 글에서는</h3>\n<ul>\n  <li>Alert/Toast(Snackbar)를 공통화 시켜 다루는 내용</li>\n  <li>앞에서 설명한 Action을 설명하지는 않는다.</li>\n  <li>기본적인 내용을 담지 않고있어 앞선 글을 참고하면 좋다.</li>\n</ul>\n\n<!--more-->\n\n<h3>이전 글</h3>\n\n<ul>\n  <li><a href=\"https://thdev.tech/architecture/2025/02/02/Android-Architecture-01/\">1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/15/Android-Architecture-02/\">2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.</a></li>\n</ul>\n\n<h2>Action을 활용한 공통화</h2>\n\n<p>Action을 도입한 이유는 무엇일까?</p>\n\n<ul>\n  <li>A 케이스 : 디자인 시스템을 활용한 Alert/Toast를 SideEffect로 항상 만들다 보니 공통화 작업이 필요했다.\n    <ul>\n      <li>어떻게 접근해 볼 수 있을까?</li>\n    </ul>\n  </li>\n  <li>B 케이스 : 네트워크 오류 등이 발생했을 때 공통적인 SideEffect 처리가 필요했다.\n    <ul>\n      <li>어떻게 접근해 볼 수 있을까?</li>\n    </ul>\n  </li>\n</ul>\n\n<p>결국 둘 다 어떻게 접근해 볼 수 있으며, 더 쉬운 접근은 없을까? 테스트가 가능할까?로 이어질 수 있다.</p>\n\n<h3>A 케이스 / B 케이스 모두를 포함한 예시 코드</h3>\n\n<p>시나리오: 사용자가 보내기 버튼을 누른다. 버튼을 누르면 “이 메시지를 전송하시겠습니까?” Yes/No Dialog가 노출된다. 이때 ‘Yes’를 제외한 모든 선택(No 클릭, 바깥 영역 클릭, 뒤로 가기)은 취소로 간주한다. ‘Yes’를 누르면 네트워크 API 통신을 시작한다.</p>\n\n<p>추가 시나리오: API 통신 중 실패해서 Snackbar를 노출해야 한다면?</p>\n\n<p>기존 방식 코드: (전반적인 데이터 흐름 파악을 위한 예시)</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// ViewModel 부분</span>\n<span class=\"kd\">class</span> <span class=\"nc\">SendViewModel</span><span class=\"p\">(</span><span class=\"cm\">/* private val apiRepository: ApiRepository */</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">ViewModel</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_sideEffect</span> <span class=\"p\">=</span> <span class=\"nc\">Channel</span><span class=\"p\">&lt;</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">&gt;(</span><span class=\"nc\">Channel</span><span class=\"p\">.</span><span class=\"nc\">BUFFERED</span><span class=\"p\">)</span>\n    <span class=\"kd\">val</span> <span class=\"py\">sideEffect</span><span class=\"p\">:</span> <span class=\"nc\">Flow</span><span class=\"p\">&lt;</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">&gt;</span> <span class=\"p\">=</span> <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">receiveAsFlow</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// --- 보내기 버튼 클릭 시 ---</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">onSendClicked</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// 메시지가 비어있는 경우, 확인 단계에서 처리하도록 여기서는 바로 다이얼로그 요청</span>\n        <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowConfirmationDialog</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// --- 확인 다이얼로그에서 '예'를 눌렀을 때 ---</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">onConfirmationAccepted</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"kd\">val</span> <span class=\"py\">message</span> <span class=\"p\">=</span> <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">messageToSend</span>\n        <span class=\"c1\">// 메시지 비어있는지 확인 (여기서 하거나 API 호출 전에 할 수 있음)</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">.</span><span class=\"nf\">isBlank</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n            <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageError</span><span class=\"p\">(</span><span class=\"s\">\"메시지는 비워둘 수 없습니다\"</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">viewModelScope</span><span class=\"p\">.</span><span class=\"nf\">launch</span> <span class=\"p\">{</span>\n            <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">update</span> <span class=\"p\">{</span> <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"n\">isLoading</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"p\">}</span> <span class=\"c1\">// 로딩 상태 시작</span>\n            <span class=\"n\">kotlinx</span><span class=\"p\">.</span><span class=\"n\">coroutines</span><span class=\"p\">.</span><span class=\"nf\">delay</span><span class=\"p\">(</span><span class=\"mi\">1500</span><span class=\"p\">)</span> <span class=\"c1\">// 네트워크 통신 시뮬레이션</span>\n            <span class=\"kd\">val</span> <span class=\"py\">success</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// API 호출 결과 시뮬레이션 (실패 케이스)</span>\n            <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">update</span> <span class=\"p\">{</span> <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"n\">isLoading</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">)</span> <span class=\"p\">}</span> <span class=\"c1\">// 로딩 상태 종료</span>\n\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">success</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageSuccess</span><span class=\"p\">(</span><span class=\"s\">\"메시지를 성공적으로 보냈습니다!\"</span><span class=\"p\">))</span>\n                <span class=\"n\">_uiState</span><span class=\"p\">.</span><span class=\"nf\">update</span> <span class=\"p\">{</span> <span class=\"n\">it</span><span class=\"p\">.</span><span class=\"nf\">copy</span><span class=\"p\">(</span><span class=\"n\">messageToSend</span> <span class=\"p\">=</span> <span class=\"s\">\"\"</span><span class=\"p\">)</span> <span class=\"p\">}</span> <span class=\"c1\">// 성공 시 메시지 초기화</span>\n            <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// 실패 시나리오</span>\n                <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageError</span><span class=\"p\">(</span><span class=\"s\">\"메시지 전송 실패\"</span><span class=\"p\">))</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// --- 확인 다이얼로그에서 '아니요' 또는 외부 클릭으로 취소했을 때 ---</span>\n    <span class=\"k\">fun</span> <span class=\"nf\">onConfirmationCancelled</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nf\">println</span><span class=\"p\">(</span><span class=\"s\">\"사용자가 메시지 전송을 취소했습니다.\"</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// --- SideEffect를 채널로 보내는 내부 함수 ---</span>\n    <span class=\"k\">private</span> <span class=\"k\">fun</span> <span class=\"nf\">sendSideEffect</span><span class=\"p\">(</span><span class=\"n\">effect</span><span class=\"p\">:</span> <span class=\"nc\">SendSideEffect</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">viewModelScope</span><span class=\"p\">.</span><span class=\"nf\">launch</span> <span class=\"p\">{</span>\n            <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">effect</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// SideEffect 정의</span>\n<span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">SendSideEffect</span> <span class=\"p\">{</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">ShowConfirmationDialog</span> <span class=\"p\">:</span> <span class=\"nc\">SendSideEffect</span> <span class=\"c1\">// 확인 다이얼로그 표시 요청</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowSendMessageSuccess</span><span class=\"p\">(</span><span class=\"kd\">val</span> <span class=\"py\">successMessage</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">SendSideEffect</span> <span class=\"c1\">// 성공 메시지 표시 요청</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowSendMessageError</span><span class=\"p\">(</span><span class=\"kd\">val</span> <span class=\"py\">errorMessage</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">SendSideEffect</span>   <span class=\"c1\">// 에러 메시지 표시 요청</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>아래는 View 부분의 코드이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// SideEffect 처리 Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">HandleSideEffects</span><span class=\"p\">(</span>\n    <span class=\"n\">sideEffectFlow</span><span class=\"p\">:</span> <span class=\"nc\">Flow</span><span class=\"p\">&lt;</span><span class=\"nc\">SendSideEffect</span><span class=\"p\">&gt;,</span> <span class=\"c1\">// ViewModel로부터 SideEffect Flow 받기</span>\n    <span class=\"n\">snackbarHostState</span><span class=\"p\">:</span> <span class=\"nc\">SnackbarHostState</span><span class=\"p\">,</span> <span class=\"c1\">// Snackbar를 표시하기 위한 상태 객체</span>\n    <span class=\"n\">onShowConfirmationDialog</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span>  <span class=\"c1\">// 확인 다이얼로그를 표시하는 람다 함수</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// LaunchedEffect는 Composable의 생명주기 내에서 안전하게 코루틴을 실행한다.</span>\n    <span class=\"c1\">// key1 = true는 Composable이 처음 생성될 때 한 번만 실행되도록 보장한다.</span>\n    <span class=\"nc\">LaunchedEffect</span><span class=\"p\">(</span><span class=\"k\">true</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// collectLatest: 새로운 SideEffect가 도착하면 이전 처리 로직이 끝나지 않았더라도 취소하고 새 로직을 시작한다.</span>\n        <span class=\"n\">sideEffectFlow</span><span class=\"p\">.</span><span class=\"nf\">collectLatest</span> <span class=\"p\">{</span> <span class=\"n\">effect</span> <span class=\"p\">-&gt;</span>\n            <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">effect</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// 확인 다이얼로그 표시 요청 처리</span>\n                <span class=\"k\">is</span> <span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowConfirmationDialog</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                    <span class=\"nf\">onShowConfirmationDialog</span><span class=\"p\">()</span> <span class=\"c1\">// 전달받은 람다 실행하여 다이얼로그 표시 상태 변경</span>\n                <span class=\"p\">}</span>\n                <span class=\"c1\">// 성공 메시지 표시 요청 처리</span>\n                <span class=\"k\">is</span> <span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageSuccess</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                    <span class=\"n\">snackbarHostState</span><span class=\"p\">.</span><span class=\"nf\">showSnackbar</span><span class=\"p\">(</span>\n                        <span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"n\">effect</span><span class=\"p\">.</span><span class=\"n\">successMessage</span><span class=\"p\">,</span> <span class=\"c1\">// ViewModel에서 전달된 성공 메시지</span>\n                        <span class=\"n\">duration</span> <span class=\"p\">=</span> <span class=\"nc\">SnackbarDuration</span><span class=\"p\">.</span><span class=\"nc\">Short</span> <span class=\"c1\">// 짧게 표시</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n                <span class=\"c1\">// 에러 메시지 표시 요청 처리</span>\n                <span class=\"k\">is</span> <span class=\"nc\">SendSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSendMessageError</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                     <span class=\"n\">snackbarHostState</span><span class=\"p\">.</span><span class=\"nf\">showSnackbar</span><span class=\"p\">(</span>\n                        <span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"n\">effect</span><span class=\"p\">.</span><span class=\"n\">errorMessage</span><span class=\"p\">,</span> <span class=\"c1\">// ViewModel에서 전달된 에러 메시지</span>\n                        <span class=\"n\">duration</span> <span class=\"p\">=</span> <span class=\"nc\">SnackbarDuration</span><span class=\"p\">.</span><span class=\"nc\">Long</span> <span class=\"c1\">// 길게 표시</span>\n                    <span class=\"p\">)</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// 메인 화면 Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">SendScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">modifier</span><span class=\"p\">:</span> <span class=\"nc\">Modifier</span> <span class=\"p\">=</span> <span class=\"nc\">Modifier</span><span class=\"p\">,</span>\n    <span class=\"n\">viewModel</span><span class=\"p\">:</span> <span class=\"nc\">SendViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModel</span><span class=\"p\">()</span> <span class=\"c1\">// ViewModel 인스턴스 가져오기</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 확인 다이얼로그의 표시 여부를 관리하는 상태 변수</span>\n    <span class=\"kd\">var</span> <span class=\"py\">showDialog</span> <span class=\"k\">by</span> <span class=\"nf\">remember</span> <span class=\"p\">{</span> <span class=\"nf\">mutableStateOf</span><span class=\"p\">(</span><span class=\"k\">false</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n\n    <span class=\"c1\">// Snackbar 메시지를 표시하기 위한 상태 객체</span>\n    <span class=\"kd\">val</span> <span class=\"py\">snackbarHostState</span> <span class=\"p\">=</span> <span class=\"nf\">remember</span> <span class=\"p\">{</span> <span class=\"nc\">SnackbarHostState</span><span class=\"p\">()</span> <span class=\"p\">}</span>\n\n    <span class=\"c1\">// SideEffect 처리 로직 실행 (별도 Composable 사용)</span>\n    <span class=\"nc\">HandleSideEffects</span><span class=\"p\">(</span>\n        <span class=\"n\">sideEffectFlow</span> <span class=\"p\">=</span> <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"n\">sideEffect</span><span class=\"p\">,</span>\n        <span class=\"n\">snackbarHostState</span> <span class=\"p\">=</span> <span class=\"n\">snackbarHostState</span><span class=\"p\">,</span>\n        <span class=\"n\">onShowConfirmationDialog</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">true</span> <span class=\"p\">}</span> <span class=\"c1\">// SideEffect 발생 시 showDialog 상태를 true로 변경</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"c1\">// Scaffold: 기본적인 머티리얼 디자인 레이아웃 구조 제공</span>\n    <span class=\"nc\">Scaffold</span><span class=\"p\">(</span>\n        <span class=\"n\">modifier</span> <span class=\"p\">=</span> <span class=\"n\">modifier</span><span class=\"p\">,</span>\n        <span class=\"n\">snackbarHost</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"nc\">SnackbarHost</span><span class=\"p\">(</span><span class=\"n\">snackbarHostState</span><span class=\"p\">)</span> <span class=\"p\">}</span> <span class=\"c1\">// Snackbar가 표시될 위치 지정</span>\n    <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"n\">paddingValues</span> <span class=\"p\">-&gt;</span> <span class=\"c1\">// Scaffold 내부 컨텐츠 영역의 패딩 값</span>\n        <span class=\"c1\">// UI 생략</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// showDialog 상태가 true일 때만 확인 다이얼로그 표시</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">showDialog</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nc\">AlertDialog</span><span class=\"p\">(</span>\n            <span class=\"n\">onDismissRequest</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// 다이얼로그 닫기</span>\n                <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"nf\">onConfirmationCancelled</span><span class=\"p\">()</span> <span class=\"c1\">// ViewModel에 취소 알림</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">title</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"s\">\"전송 확인\"</span><span class=\"p\">)</span> <span class=\"p\">},</span>\n            <span class=\"n\">text</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"s\">\"이 메시지를 전송하시겠습니까?\"</span><span class=\"p\">)</span> <span class=\"p\">},</span>\n            <span class=\"n\">confirmButton</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                <span class=\"nc\">Button</span><span class=\"p\">(</span>\n                    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                        <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// 다이얼로그 닫기</span>\n                        <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"nf\">onConfirmationAccepted</span><span class=\"p\">()</span> <span class=\"c1\">// ViewModel에 확인 알림</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"s\">\"예\"</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">dismissButton</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                <span class=\"nc\">Button</span><span class=\"p\">(</span>\n                    <span class=\"n\">onClick</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n                        <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// 다이얼로그 닫기</span>\n                        <span class=\"n\">viewModel</span><span class=\"p\">.</span><span class=\"nf\">onConfirmationCancelled</span><span class=\"p\">()</span> <span class=\"c1\">// ViewModel에 취소 알림</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"nc\">Text</span><span class=\"p\">(</span><span class=\"s\">\"아니요\"</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위 코드는 앞서 설명한 2개의 시나리오(정상 확인 후 실패, 또는 확인 단계에서 실패)를 처리하는 일반적인 형태의 코드이다. 사용자의 확인(Confirm)을 받고, 네트워크 API 통신을 시작하고, 결과를 처리한다.</p>\n\n<h2>공통 부분 찾기</h2>\n\n<p>이 흐름(flow)을 보면, 1개의 Dialog가 노출될 수 있고, 2개의 Snackbar(성공/실패)가 동작할 수 있다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-03/sample_01.png\" alt=\"sample_01\" /></p>\n\n<p>그럼 위 코드와 흐름(flow) 차트를 기반으로 공통적으로 발생하는 부분을 찾아본다.</p>\n\n<ul>\n  <li>N개의 View(@Composable)에서 동일한 UI/동작을 가진 Dialog를 노출해야 한다.</li>\n  <li>N개의 View(@Composable)에서 동일한 동작(단순 메시지 표시 등)의 Snackbar(Toast)가 필요하다.</li>\n</ul>\n\n<p>나는 여기서 N개의 화면에서 반복되는 이 부분을 중요하게 생각했고, 이걸 공통화해서 줄이고 싶었다.</p>\n\n<h2>UI의 공통화</h2>\n\n<p>별도의 모듈을 통해 Alert/Toast(Snackbar) 부분을 공통화했다.</p>\n\n<p><a href=\"https://github.com/taehwandev/TComposableArchitecture/tree/main/core/ui/composable-architecture-alert-system\">composable-architecture-alert-system - link</a></p>\n\n<p>일단 라이브러리 형태로 만들어서 Alert UI의 커스텀 가능성을 열어두었다. 기본 Dialog UI 외에 다른 디자인을 쓰고 싶다면 onDialogScreen 파라미터를 사용하면 된다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Alert/Snackbar 처리를 위한 공통 Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">fun</span> <span class=\"nf\">CaAlertScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">snackbarHostState</span><span class=\"p\">:</span> <span class=\"nc\">SnackbarHostState</span><span class=\"p\">,</span> <span class=\"c1\">// Snackbar 상태 관리</span>\n    <span class=\"c1\">// Dialog UI를 커스텀하고 싶을 때 제공하는 람다</span>\n    <span class=\"n\">onDialogScreen</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nd\">@Composable</span> <span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"n\">onAction</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)?</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// 내부 구현 호출</span>\n    <span class=\"nc\">InternalCaAlertScreen</span><span class=\"p\">(</span>\n        <span class=\"n\">snackbarHostState</span> <span class=\"p\">=</span> <span class=\"n\">snackbarHostState</span><span class=\"p\">,</span>\n        <span class=\"n\">onDialogScreen</span> <span class=\"p\">=</span> <span class=\"n\">onDialogScreen</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>커스텀이 필요하다면 다음과 같이 Dialog를 직접 그리는 Composable을 만들어서 onDialogScreen으로 넘겨주면 된다.</p>\n\n<p><a href=\"https://github.com/taehwandev/TComposableArchitecture/blob/main/core/ui/composable-architecture-alert-system/src/main/java/tech/thdev/composable/architecture/alert/system/compose/CaDialogScreen.kt\">참고 용 코드 - link</a></p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// 예시: 커스텀 Dialog Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">internal</span> <span class=\"k\">fun</span> <span class=\"nf\">CustomDialogScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"c1\">// Dialog 상태 정보</span>\n    <span class=\"n\">onAction</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">,</span> <span class=\"c1\">// Dialog 내 버튼 클릭 시 실행할 Action 전달 함수</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nc\">AlertDialog</span><span class=\"p\">(</span>\n        <span class=\"n\">icon</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"cm\">/* 아이콘 로직 */</span> <span class=\"p\">},</span>\n        <span class=\"n\">title</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"cm\">/* 타이틀 로직 */</span> <span class=\"p\">},</span>\n        <span class=\"n\">onDismissRequest</span> <span class=\"p\">=</span> <span class=\"p\">{</span>\n            <span class=\"c1\">// 바깥 영역 클릭 또는 뒤로가기 시 실행될 Action 전달</span>\n            <span class=\"nf\">onAction</span><span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"n\">onDismissRequest</span><span class=\"p\">)</span>\n        <span class=\"p\">},</span>\n        <span class=\"n\">confirmButton</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"cm\">/* 확인 버튼 로직, 클릭 시 onAction(confirmAction) 호출 */</span> <span class=\"p\">},</span>\n        <span class=\"n\">dismissButton</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"cm\">/* 취소 버튼 로직, 클릭 시 onAction(dismissAction) 호출 */</span> <span class=\"p\">}</span>\n        <span class=\"c1\">// 생략</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>그럼 이 공통 UI(CaAlertScreen)를 동작시키는 부분은 어떻게 하는가 하면, 바로 우리가 일반적으로 사용하는 <code class=\"language-plaintext highlighter-rouge\">UiState</code>와 <code class=\"language-plaintext highlighter-rouge\">SideEffect</code> 방식을 활용했다. 이 공통 시스템을 위한 별도의 ViewModel(CaAlertViewModel)을 만들었다.</p>\n\n<p>여기서 중요한 건, 공통화를 시켰지만 이 <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>은 특정 화면의 로직을 모른다. 단순히 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction</code>이라는 특정 <code class=\"language-plaintext highlighter-rouge\">Action</code>을 받아서, 그에 맞는 <code class=\"language-plaintext highlighter-rouge\">Dialog 상태(UiState)</code>를 만들고 화면에 표시하라는 <code class=\"language-plaintext highlighter-rouge\">SideEffect</code>를 보낼 뿐이다. 마치 이벤트를 받아서 전달(포워딩)하는 역할 정도이다.</p>\n\n<p>이때 1부/2부에서 소개한 Action 시스템을 사용했다는 점이 중요하다. 이 <code class=\"language-plaintext highlighter-rouge\">Action 스트림</code>은 앱 전역에서 접근 가능(싱글턴 또는 앱 범위 스코프)하기 때문에, 어떤 ViewModel이나 Composable에서도 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction</code>을 보낼 수 있고, <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>은 이걸 받아서 처리할 수 있다. 같은 범위 내의 View에서는 동작하는 데 문제가 없다는 점이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Alert/Snackbar 처리를 전담하는 ViewModel</span>\n<span class=\"nd\">@HiltViewModel</span>\n<span class=\"kd\">class</span> <span class=\"nc\">CaAlertViewModel</span> <span class=\"nd\">@Inject</span> <span class=\"k\">constructor</span><span class=\"p\">(</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">flowCaActionStream</span><span class=\"p\">:</span> <span class=\"nc\">FlowCaActionStream</span><span class=\"p\">,</span> <span class=\"c1\">// Action 스트림 주입</span>\n<span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaViewModel</span><span class=\"p\">&lt;</span><span class=\"nc\">CaAlertAction</span><span class=\"p\">&gt;(</span> <span class=\"c1\">// CaAlertAction 타입의 Action만 수신</span>\n    <span class=\"n\">flowCaActionStream</span> <span class=\"p\">=</span> <span class=\"n\">flowCaActionStream</span><span class=\"p\">,</span>\n    <span class=\"n\">actionClass</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertAction</span><span class=\"o\">::</span><span class=\"k\">class</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\">// Dialog의 내용을 담는 UiState</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_alertUiStateDialogUiState</span> <span class=\"p\">=</span> <span class=\"nc\">MutableStateFlow</span><span class=\"p\">(</span><span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"nc\">Default</span><span class=\"p\">)</span>\n    <span class=\"kd\">val</span> <span class=\"py\">alertUiStateDialogUiState</span> <span class=\"p\">=</span> <span class=\"n\">_alertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"nf\">asStateFlow</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// Dialog/Snackbar 표시/숨김 명령을 위한 SideEffect 채널</span>\n    <span class=\"k\">private</span> <span class=\"kd\">val</span> <span class=\"py\">_sideEffect</span> <span class=\"p\">=</span> <span class=\"nc\">Channel</span><span class=\"p\">&lt;</span><span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">&gt;(</span><span class=\"nc\">Channel</span><span class=\"p\">.</span><span class=\"nc\">BUFFERED</span><span class=\"p\">)</span>\n    <span class=\"k\">internal</span> <span class=\"kd\">val</span> <span class=\"py\">sideEffect</span> <span class=\"p\">=</span> <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">receiveAsFlow</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// CaAlertAction을 받았을 때 처리하는 로직 (Reducer)</span>\n    <span class=\"k\">override</span> <span class=\"k\">suspend</span> <span class=\"k\">fun</span> <span class=\"nf\">reducer</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// Action의 정보로 Dialog UiState 생성</span>\n                <span class=\"kd\">val</span> <span class=\"py\">dialogItem</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">(</span> <span class=\"cm\">/* ... action의 데이터 사용 ... */</span> <span class=\"p\">)</span>\n                <span class=\"n\">_alertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"n\">dialogItem</span>\n                <span class=\"c1\">// Dialog를 표시하라는 SideEffect 전송</span>\n                <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">HideDialog</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// 기본 상태로 되돌리고 Dialog 숨김 SideEffect 전송</span>\n                <span class=\"n\">_alertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"n\">value</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"nc\">Default</span>\n                <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">HideDialog</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// Action 정보로 Snackbar SideEffect 생성 및 전송</span>\n                <span class=\"kd\">val</span> <span class=\"py\">snackItem</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span><span class=\"p\">(</span> <span class=\"cm\">/* ... action의 데이터 사용 ... */</span> <span class=\"p\">)</span>\n                <span class=\"n\">_sideEffect</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">snackItem</span><span class=\"p\">)</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">None</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span> <span class=\"cm\">/* 무시 */</span> <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// 내부 Duration 타입을 Material의 SnackbarDuration으로 변환하는 함수</span>\n    <span class=\"k\">private</span> <span class=\"k\">fun</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span><span class=\"p\">.</span><span class=\"nc\">Duration</span><span class=\"p\">.</span><span class=\"nf\">convert</span><span class=\"p\">():</span> <span class=\"nc\">SnackbarDuration</span> <span class=\"p\">=</span> <span class=\"cm\">/* ... 변환 로직 ... */</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// CaAlertViewModel에서 사용하는 SideEffect 정의</span>\n<span class=\"k\">internal</span> <span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">CaAlertSideEffect</span> <span class=\"p\">{</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">ShowDialog</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertSideEffect</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">HideDialog</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertSideEffect</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowSnack</span><span class=\"p\">(</span>\n        <span class=\"kd\">val</span> <span class=\"py\">message</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">,</span>\n        <span class=\"kd\">val</span> <span class=\"py\">actionLabel</span><span class=\"p\">:</span> <span class=\"nc\">String</span><span class=\"p\">,</span>\n        <span class=\"kd\">val</span> <span class=\"py\">onAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">,</span>\n        <span class=\"kd\">val</span> <span class=\"py\">onDismiss</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">,</span>\n        <span class=\"kd\">val</span> <span class=\"py\">duration</span><span class=\"p\">:</span> <span class=\"nc\">SnackbarDuration</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertSideEffect</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// CaAlertViewModel의 UiState 정의</span>\n<span class=\"k\">internal</span> <span class=\"kd\">data class</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">(</span> <span class=\"cm\">/* ... Dialog 속성들 ... */</span> <span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">companion</span> <span class=\"k\">object</span> <span class=\"p\">{</span>\n        <span class=\"kd\">val</span> <span class=\"py\">Default</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">(</span> <span class=\"cm\">/* ... 기본값 ... */</span> <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">// CaAlertViewModel이 수신하는 Action 정의</span>\n<span class=\"k\">sealed</span> <span class=\"kd\">interface</span> <span class=\"nc\">CaAlertAction</span> <span class=\"p\">:</span> <span class=\"nc\">CaAction</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Dialog 표시 Action</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowDialog</span><span class=\"p\">(</span> <span class=\"cm\">/* ... Dialog 속성 및 클릭 시 발생시킬 Action 정의 ... */</span> <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span>\n    <span class=\"c1\">// Dialog 숨김 Action</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">HideDialog</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span>\n    <span class=\"c1\">// Snackbar 표시 Action</span>\n    <span class=\"kd\">data class</span> <span class=\"nc\">ShowSnack</span><span class=\"p\">(</span> <span class=\"cm\">/* ... Snackbar 속성 및 클릭/닫기 시 발생시킬 Action 정의 ... */</span> <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span>\n    <span class=\"c1\">// 빈 Action</span>\n    <span class=\"n\">data</span> <span class=\"kd\">object</span> <span class=\"nc\">None</span> <span class=\"p\">:</span> <span class=\"nc\">CaAlertAction</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위 CaAlertViewModel의 이벤트를 받아서 실제 UI(Dialog, Snackbar)를 노출하는 부분은 InternalCaAlertScreen Composable이다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// CaAlertScreen의 내부 구현 Composable</span>\n<span class=\"nd\">@Composable</span>\n<span class=\"k\">private</span> <span class=\"k\">fun</span> <span class=\"nf\">InternalCaAlertScreen</span><span class=\"p\">(</span>\n    <span class=\"n\">snackbarHostState</span><span class=\"p\">:</span> <span class=\"nc\">SnackbarHostState</span><span class=\"p\">,</span>\n    <span class=\"n\">onDialogScreen</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nd\">@Composable</span> <span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"n\">onAction</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">)?</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">,</span>\n    <span class=\"n\">caAlertViewModel</span><span class=\"p\">:</span> <span class=\"nc\">CaAlertViewModel</span> <span class=\"p\">=</span> <span class=\"nf\">viewModel</span><span class=\"p\">(),</span> <span class=\"c1\">// CaAlertViewModel 인스턴스</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Dialog 표시 여부 상태</span>\n    <span class=\"kd\">var</span> <span class=\"py\">showDialog</span> <span class=\"k\">by</span> <span class=\"nf\">remember</span> <span class=\"p\">{</span> <span class=\"nf\">mutableStateOf</span><span class=\"p\">(</span><span class=\"k\">false</span><span class=\"p\">)</span> <span class=\"p\">}</span>\n    <span class=\"c1\">// Action 전송을 위한 객체 (CompositionLocal 활용)</span>\n    <span class=\"kd\">val</span> <span class=\"py\">actionSender</span> <span class=\"p\">=</span> <span class=\"nc\">LocalCaActionOwner</span><span class=\"p\">.</span><span class=\"n\">current</span>\n\n    <span class=\"c1\">// CaAlertViewModel의 SideEffect를 구독하고 처리</span>\n    <span class=\"n\">caAlertViewModel</span><span class=\"p\">.</span><span class=\"n\">sideEffect</span><span class=\"p\">.</span><span class=\"nf\">collectLifecycleEvent</span> <span class=\"p\">{</span> <span class=\"n\">event</span> <span class=\"p\">-&gt;</span> <span class=\"c1\">// collectLifecycleEvent는 Lifecycle 고려한 확장 함수로 가정</span>\n        <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span> <span class=\"p\">-&gt;</span> <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">true</span> <span class=\"c1\">// Dialog 표시 상태 변경</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">HideDialog</span> <span class=\"p\">-&gt;</span> <span class=\"n\">showDialog</span> <span class=\"p\">=</span> <span class=\"k\">false</span> <span class=\"c1\">// Dialog 숨김 상태 변경</span>\n            <span class=\"k\">is</span> <span class=\"nc\">CaAlertSideEffect</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span> <span class=\"p\">-&gt;</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// Snackbar 표시 로직</span>\n                <span class=\"kd\">val</span> <span class=\"py\">result</span> <span class=\"p\">=</span> <span class=\"n\">snackbarHostState</span><span class=\"p\">.</span><span class=\"nf\">showSnackbar</span><span class=\"p\">(</span> <span class=\"cm\">/* ... event 데이터 사용 ... */</span> <span class=\"p\">)</span>\n                <span class=\"c1\">// Snackbar 결과에 따라 후속 Action 전송</span>\n                <span class=\"k\">when</span> <span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"nc\">SnackbarResult</span><span class=\"p\">.</span><span class=\"nc\">ActionPerformed</span> <span class=\"p\">-&gt;</span> <span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">.</span><span class=\"n\">onAction</span><span class=\"p\">)</span> <span class=\"c1\">// 'Action' 버튼 클릭 시</span>\n                    <span class=\"nc\">SnackbarResult</span><span class=\"p\">.</span><span class=\"nc\">Dismissed</span> <span class=\"p\">-&gt;</span> <span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">.</span><span class=\"n\">onDismiss</span><span class=\"p\">)</span>    <span class=\"c1\">// 닫혔을 때</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// CaAlertViewModel의 Dialog UiState 구독</span>\n    <span class=\"kd\">val</span> <span class=\"py\">caAlertUiStateDialogUiState</span> <span class=\"k\">by</span> <span class=\"n\">caAlertViewModel</span><span class=\"p\">.</span><span class=\"n\">alertUiStateDialogUiState</span><span class=\"p\">.</span><span class=\"nf\">collectAsStateWithLifecycle</span><span class=\"p\">()</span>\n\n    <span class=\"c1\">// showDialog 상태가 true이면 Dialog 표시</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">showDialog</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"c1\">// Dialog 내 버튼 클릭 시 실행될 공통 로직 (Dialog 숨기고, 지정된 다음 Action 전송)</span>\n        <span class=\"kd\">val</span> <span class=\"py\">onAction</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">:</span> <span class=\"nc\">CaAction</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span> <span class=\"p\">=</span> <span class=\"p\">{</span> <span class=\"n\">nextAction</span> <span class=\"p\">-&gt;</span>\n            <span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">HideDialog</span><span class=\"p\">)</span> <span class=\"c1\">// 먼저 Dialog 숨김 Action 전송</span>\n            <span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">nextAction</span><span class=\"p\">)</span> <span class=\"c1\">// 그 다음, 버튼에 지정된 Action 전송</span>\n        <span class=\"p\">}</span>\n        <span class=\"c1\">// 커스텀 Dialog 람다가 제공되면 그것을 사용, 아니면 기본 CaDialogScreen 사용</span>\n        <span class=\"n\">onDialogScreen</span><span class=\"o\">?.</span><span class=\"nf\">invoke</span><span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"n\">onAction</span><span class=\"p\">)</span>\n            <span class=\"o\">?:</span> <span class=\"nc\">CaDialogScreen</span><span class=\"p\">(</span><span class=\"n\">caAlertUiStateDialogUiState</span> <span class=\"p\">=</span> <span class=\"n\">caAlertUiStateDialogUiState</span><span class=\"p\">,</span> <span class=\"n\">onAction</span> <span class=\"p\">=</span> <span class=\"n\">onAction</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"c1\">// CaAlertViewModel의 생명주기 관리를 위한 Composable (내부 구현은 생략)</span>\n    <span class=\"nc\">LaunchedLifecycleViewModel</span><span class=\"p\">(</span><span class=\"n\">viewModel</span> <span class=\"p\">=</span> <span class=\"n\">caAlertViewModel</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>이제 이 공통 Alert/Snackbar 시스템을 사용하는 쪽(예: 특정 화면의 ViewModel이나 Composable)에서는 단순히 CaAlertAction을 Action 스트림으로 보내기만 하면 된다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Composable에서 Action 전송 예시</span>\n<span class=\"kd\">val</span> <span class=\"py\">actionSender</span> <span class=\"p\">=</span> <span class=\"nc\">LocalCaActionOwner</span><span class=\"p\">.</span><span class=\"n\">current</span>\n<span class=\"n\">actionSender</span><span class=\"p\">.</span><span class=\"nf\">send</span><span class=\"p\">(</span>\n    <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span><span class=\"p\">(</span>\n        <span class=\"n\">title</span> <span class=\"p\">=</span> <span class=\"s\">\"전송 확인\"</span><span class=\"p\">,</span>\n        <span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"s\">\"메시지를 보내시겠습니까?\"</span><span class=\"p\">,</span>\n        <span class=\"n\">confirmButtonText</span> <span class=\"p\">=</span> <span class=\"s\">\"예\"</span><span class=\"p\">,</span>\n        <span class=\"c1\">// '예' 버튼 클릭 시 실행될 Action 정의 (여기서는 Snackbar 표시 Action)</span>\n        <span class=\"n\">onConfirmButtonAction</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span><span class=\"p\">(</span><span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"s\">\"확인됨\"</span><span class=\"p\">),</span>\n        <span class=\"n\">dismissButtonText</span> <span class=\"p\">=</span> <span class=\"s\">\"아니요\"</span><span class=\"p\">,</span>\n        <span class=\"c1\">// '아니요' 버튼 클릭 시 실행될 Action 정의</span>\n        <span class=\"n\">onDismissButtonAction</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowSnack</span><span class=\"p\">(</span><span class=\"n\">message</span> <span class=\"p\">=</span> <span class=\"s\">\"취소됨\"</span><span class=\"p\">),</span>\n        <span class=\"c1\">// 바깥 영역 클릭 시 실행될 Action</span>\n        <span class=\"n\">onDismissRequest</span> <span class=\"p\">=</span> <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">None</span> <span class=\"c1\">// 아무것도 안함</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\">// ViewModel에서 Action 전송 예시 (nextAction 함수 사용 가정)</span>\n<span class=\"nf\">nextAction</span><span class=\"p\">(</span> <span class=\"c1\">// BaseViewModel 등에 구현된 Action 전송 함수</span>\n    <span class=\"nc\">CaAlertAction</span><span class=\"p\">.</span><span class=\"nc\">ShowDialog</span><span class=\"p\">(</span> <span class=\"cm\">/* ... 위와 동일 ... */</span> <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div></div>\n\n<h2>이 코드의 데이터 흐름을 보자</h2>\n\n<p>위의 공통화 코드를 기반으로 다음과 같은 시나리오의 데이터 흐름을 생각해 볼 수 있다.</p>\n\n<p>시나리오:</p>\n<ol>\n  <li>사용자 액션: 사용자가 ‘보내기’ 버튼을 클릭. (메시지 유효성 검사는 이미 통과했다고 가정)</li>\n  <li>화면 ViewModel: <code class=\"language-plaintext highlighter-rouge\">SendViewModel</code>은 <code class=\"language-plaintext highlighter-rouge\">onSendClicked</code> 함수 내에서 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction.ShowDialog</code>를 Action 스트림으로 전송.</li>\n  <li>공통 Alert ViewModel: <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>이 Action 스트림에서 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction.ShowDialog</code>를 수신.</li>\n  <li>Dialog 상태 업데이트: <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>은 Dialog 내용을 담은 <code class=\"language-plaintext highlighter-rouge\">UiState</code>를 업데이트하고, <code class=\"language-plaintext highlighter-rouge\">ShowDialog</code> SideEffect를 전송.</li>\n  <li>Dialog 표시: <code class=\"language-plaintext highlighter-rouge\">CaAlertScreen</code> Composable이 <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>의 <code class=\"language-plaintext highlighter-rouge\">SideEffect</code>를 받아 <code class=\"language-plaintext highlighter-rouge\">showDialog</code> 상태를 <code class=\"language-plaintext highlighter-rouge\">true</code>로 변경. <code class=\"language-plaintext highlighter-rouge\">UiState</code>를 사용해 Dialog 내용을 그림.</li>\n  <li>사용자 Dialog 액션: 사용자가 Dialog의 ‘예’(Confirm) 버튼을 클릭.</li>\n  <li>Dialog 내부 처리: <code class=\"language-plaintext highlighter-rouge\">CaAlertScreen</code> 내의 <code class=\"language-plaintext highlighter-rouge\">onAction</code> 람다가 실행됨.\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">CaAlertAction.HideDialog</code> Action을 전송하여 <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>이 Dialog를 닫도록 함.</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">ShowDialog</code> Action 정의 시 <code class=\"language-plaintext highlighter-rouge\">onConfirmButtonAction</code>으로 지정했던 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction.ShowSnack(message = \"확인됨\")</code> Action을 전송.</li>\n    </ul>\n  </li>\n  <li>Snackbar 표시: <code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>이 <code class=\"language-plaintext highlighter-rouge\">ShowSnack</code> Action을 받아 <code class=\"language-plaintext highlighter-rouge\">ShowSnack</code> SideEffect를 전송하고, <code class=\"language-plaintext highlighter-rouge\">CaAlertScreen</code>이 이를 받아 Snackbar를 표시. (만약 Confirm 버튼에 다른 Action, 예를 들어 <code class=\"language-plaintext highlighter-rouge\">SendMessageConfirmAction</code> 같은 것을 지정했다면 그게 전송됨)</li>\n  <li>(만약 Confirm 시 네트워크 호출이 필요하다면): <code class=\"language-plaintext highlighter-rouge\">SendViewModel</code>이 <code class=\"language-plaintext highlighter-rouge\">SendMessageConfirmAction</code> 같은 Action을 수신하고, <code class=\"language-plaintext highlighter-rouge\">onConfirmationAccepted</code> 로직(네트워크 호출 등)을 실행. 그 결과에 따라 다시 <code class=\"language-plaintext highlighter-rouge\">CaAlertAction.ShowSnack</code> (성공/실패 메시지) 등을 전송할 수 있음.</li>\n</ol>\n\n<p>이를 도식화한 부분이 아래와 같은데, 이전 흐름과 달리 User Action이 ViewModel을 거쳐 Action 전송으로 이어지고, 이걸 CaAlertViewModel이 받아서 처리 후 CaAlertScreen에 Dialog/Snackbar를 표시하는 구조이다. Dialog 내 사용자 액션은 다시 Action 전송으로 이어져 CaAlertViewModel이나 다른 ViewModel이 처리할 수 있게 된다.</p>\n\n<p>여기서 특이한 점은 <code class=\"language-plaintext highlighter-rouge\">SendViewModel</code>에서 바로 Dialog를 표시하는 SideEffect를 보내는 게 아니라, <code class=\"language-plaintext highlighter-rouge\">CaAlertAction</code>이라는 Action을 보낸다는 것이다. 그리고 이 Action을 구독하고 있던 별도의 Dialog 처리 ViewModel(<code class=\"language-plaintext highlighter-rouge\">CaAlertViewModel</code>)에서 작업을 이어받아 처리한다는 것이다.</p>\n\n<p><img src=\"/images/posts/2025/Android-Architecture-03/sample_02.png\" alt=\"sample_02\" /></p>\n\n<h2>장/단점</h2>\n\n<p>Action을 어디서든 보낼 수 있다는 점은 확실히 편하다. 하지만 이 이벤트가 어디서 발생했는지 추적하기 어려울 수 있다는 단점이 있다. 마치 옛날의 이벤트 버스(Event Bus)를 떠올리게 한다. 결국 필터(filter)를 걸더라도 비슷한 문제가 생길 수 있다. 디버깅 시 Action의 출처를 명확히 하거나, Action 자체에 출처 정보를 포함하는 등의 추가적인 고민이 필요할 수 있다.</p>\n\n<h2>Next</h2>\n\n<p>이번 글에서는 Action을 활용한 Alert/Toast(Snackbar)의 공통화 작업 코드를 살펴봤다. “공통화한다면 어떤 식으로 접근해볼 수 있을까?” 라는 질문에서 출발한 코드이다.</p>\n\n<p>이런 작업을 쉽게 하려고 Action 시스템을 만들었는데, 이건 TCA(The Composable Architecture)의 방식과도 유사한 면이 있다. TCA에서도 Reducer에서 바로 Alert 관련 상태를 변경하고 이를 활용하는 방식과 비슷하다.</p>\n\n<p>우리가 작성하는 대부분의 코드는 View와 ViewModel 사이를 오가며 진행된다. 특히 Dialog는 View로 이벤트를 던지고 나면 ViewModel과 직접적인 흐름을 이어가기 어려운 경우가 많다. 하지만 Action 시스템을 사용하면 Dialog의 결과(예: 확인/취소)를 다시 Action으로 변환하여 다른 ViewModel이 수신하고 후속 작업을 이어갈 수 있게 된다.</p>\n\n<p>다른 이야기지만, 이런 Action 기반 시스템은 테스트에도 이점이 있을 수 있다. (만약 구현한다면) <code class=\"language-plaintext highlighter-rouge\">await()</code> 같은 메커니즘으로 Action 처리 결과를 기다릴 수 있게 만든다면, 한 사이클의 시나리오 기반 유닛 테스트(Unit Test)가 가능해진다. View를 검증하지 않고도 로직 테스트만으로 충분히 검증할 수 있고, 안정적인 테스트가 가능하다는 장점이 있다. 이런 방식(await)을 바로 적용하기엔 설계가 복잡해질 수 있으므로, 우선은 Action을 통해 서로 다른 ViewModel들이 이벤트를 구독하고 처리할 수 있도록 하고, 테스트 가능한 구조를 만들어 보았다.</p>\n\n<p>다음 글에서는 ‘그럼 이 구조에서 테스트는 어떻게 할 수 있는가?’에 대해 다룰 예정이다.</p>\n\n<h2>작성 글 이어보기</h2>\n\n<ul>\n  <li><a href=\"https://thdev.tech/architecture/2025/02/02/Android-Architecture-01/\">1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/15/Android-Architecture-02/\">2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.</a></li>\n  <li><a href=\"https://thdev.tech/architecture/2025/04/20/Android-Architecture-03/\">3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?</a></li>\n  <li>예고 - Composable Architecutre를 활용한 Alert/Toast?의 테스트는 어떻게 하나요?</li>\n  <li>예고 - Composable Architecutre를 활용한 Router?</li>\n</ul>\n\n",
        "contentSnippet": "이 글에서는 Composable Architecture에서 Alert(Dialog)/Toast(Snackbar) 활용법을 소개한다.\n기본 형태는 1부/2부에서 소개한 Action을 활용하는 시스템을 적용했다.\n이 글은 디자인 시스템이 있을 경우 Dialog/Toast를 공통화시키는 방식을 다루고 있다.\n이 글에서는\nAlert/Toast(Snackbar)를 공통화 시켜 다루는 내용\n앞에서 설명한 Action을 설명하지는 않는다.\n기본적인 내용을 담지 않고있어 앞선 글을 참고하면 좋다.\n이전 글\n1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\nAction을 활용한 공통화\nAction을 도입한 이유는 무엇일까?\nA 케이스 : 디자인 시스템을 활용한 Alert/Toast를 SideEffect로 항상 만들다 보니 공통화 작업이 필요했다.\n    \n어떻게 접근해 볼 수 있을까?\nB 케이스 : 네트워크 오류 등이 발생했을 때 공통적인 SideEffect 처리가 필요했다.\n    \n어떻게 접근해 볼 수 있을까?\n결국 둘 다 어떻게 접근해 볼 수 있으며, 더 쉬운 접근은 없을까? 테스트가 가능할까?로 이어질 수 있다.\nA 케이스 / B 케이스 모두를 포함한 예시 코드\n시나리오: 사용자가 보내기 버튼을 누른다. 버튼을 누르면 “이 메시지를 전송하시겠습니까?” Yes/No Dialog가 노출된다. 이때 ‘Yes’를 제외한 모든 선택(No 클릭, 바깥 영역 클릭, 뒤로 가기)은 취소로 간주한다. ‘Yes’를 누르면 네트워크 API 통신을 시작한다.\n추가 시나리오: API 통신 중 실패해서 Snackbar를 노출해야 한다면?\n기존 방식 코드: (전반적인 데이터 흐름 파악을 위한 예시)\n\n// ViewModel 부분\nclass SendViewModel(/* private val apiRepository: ApiRepository */) : ViewModel() {\n    private val _sideEffect = Channel<SendSideEffect>(Channel.BUFFERED)\n    val sideEffect: Flow<SendSideEffect> = _sideEffect.receiveAsFlow()\n\n    // --- 보내기 버튼 클릭 시 ---\n    fun onSendClicked() {\n        // 메시지가 비어있는 경우, 확인 단계에서 처리하도록 여기서는 바로 다이얼로그 요청\n        sendSideEffect(SendSideEffect.ShowConfirmationDialog)\n    }\n\n    // --- 확인 다이얼로그에서 '예'를 눌렀을 때 ---\n    fun onConfirmationAccepted() {\n        val message = _uiState.value.messageToSend\n        // 메시지 비어있는지 확인 (여기서 하거나 API 호출 전에 할 수 있음)\n        if (message.isBlank()) {\n            sendSideEffect(SendSideEffect.ShowSendMessageError(\"메시지는 비워둘 수 없습니다\"))\n            return\n        }\n\n        viewModelScope.launch {\n            _uiState.update { it.copy(isLoading = true) } // 로딩 상태 시작\n            kotlinx.coroutines.delay(1500) // 네트워크 통신 시뮬레이션\n            val success = false // API 호출 결과 시뮬레이션 (실패 케이스)\n            _uiState.update { it.copy(isLoading = false) } // 로딩 상태 종료\n\n            if (success) {\n                sendSideEffect(SendSideEffect.ShowSendMessageSuccess(\"메시지를 성공적으로 보냈습니다!\"))\n                _uiState.update { it.copy(messageToSend = \"\") } // 성공 시 메시지 초기화\n            } else {\n                // 실패 시나리오\n                sendSideEffect(SendSideEffect.ShowSendMessageError(\"메시지 전송 실패\"))\n            }\n        }\n    }\n\n    // --- 확인 다이얼로그에서 '아니요' 또는 외부 클릭으로 취소했을 때 ---\n    fun onConfirmationCancelled() {\n        println(\"사용자가 메시지 전송을 취소했습니다.\")\n    }\n\n    // --- SideEffect를 채널로 보내는 내부 함수 ---\n    private fun sendSideEffect(effect: SendSideEffect) {\n        viewModelScope.launch {\n            _sideEffect.send(effect)\n        }\n    }\n}\n\n// SideEffect 정의\nsealed interface SendSideEffect {\n    data object ShowConfirmationDialog : SendSideEffect // 확인 다이얼로그 표시 요청\n    data class ShowSendMessageSuccess(val successMessage: String) : SendSideEffect // 성공 메시지 표시 요청\n    data class ShowSendMessageError(val errorMessage: String) : SendSideEffect   // 에러 메시지 표시 요청\n}\n\n\n아래는 View 부분의 코드이다.\n\n// SideEffect 처리 Composable\n@Composable\nfun HandleSideEffects(\n    sideEffectFlow: Flow<SendSideEffect>, // ViewModel로부터 SideEffect Flow 받기\n    snackbarHostState: SnackbarHostState, // Snackbar를 표시하기 위한 상태 객체\n    onShowConfirmationDialog: () -> Unit  // 확인 다이얼로그를 표시하는 람다 함수\n) {\n    // LaunchedEffect는 Composable의 생명주기 내에서 안전하게 코루틴을 실행한다.\n    // key1 = true는 Composable이 처음 생성될 때 한 번만 실행되도록 보장한다.\n    LaunchedEffect(true) {\n        // collectLatest: 새로운 SideEffect가 도착하면 이전 처리 로직이 끝나지 않았더라도 취소하고 새 로직을 시작한다.\n        sideEffectFlow.collectLatest { effect ->\n            when (effect) {\n                // 확인 다이얼로그 표시 요청 처리\n                is SendSideEffect.ShowConfirmationDialog -> {\n                    onShowConfirmationDialog() // 전달받은 람다 실행하여 다이얼로그 표시 상태 변경\n                }\n                // 성공 메시지 표시 요청 처리\n                is SendSideEffect.ShowSendMessageSuccess -> {\n                    snackbarHostState.showSnackbar(\n                        message = effect.successMessage, // ViewModel에서 전달된 성공 메시지\n                        duration = SnackbarDuration.Short // 짧게 표시\n                    )\n                }\n                // 에러 메시지 표시 요청 처리\n                is SendSideEffect.ShowSendMessageError -> {\n                     snackbarHostState.showSnackbar(\n                        message = effect.errorMessage, // ViewModel에서 전달된 에러 메시지\n                        duration = SnackbarDuration.Long // 길게 표시\n                    )\n                }\n            }\n        }\n    }\n}\n\n// 메인 화면 Composable\n@Composable\nfun SendScreen(\n    modifier: Modifier = Modifier,\n    viewModel: SendViewModel = viewModel() // ViewModel 인스턴스 가져오기\n) {\n    // 확인 다이얼로그의 표시 여부를 관리하는 상태 변수\n    var showDialog by remember { mutableStateOf(false) }\n\n    // Snackbar 메시지를 표시하기 위한 상태 객체\n    val snackbarHostState = remember { SnackbarHostState() }\n\n    // SideEffect 처리 로직 실행 (별도 Composable 사용)\n    HandleSideEffects(\n        sideEffectFlow = viewModel.sideEffect,\n        snackbarHostState = snackbarHostState,\n        onShowConfirmationDialog = { showDialog = true } // SideEffect 발생 시 showDialog 상태를 true로 변경\n    )\n\n    // Scaffold: 기본적인 머티리얼 디자인 레이아웃 구조 제공\n    Scaffold(\n        modifier = modifier,\n        snackbarHost = { SnackbarHost(snackbarHostState) } // Snackbar가 표시될 위치 지정\n    ) { paddingValues -> // Scaffold 내부 컨텐츠 영역의 패딩 값\n        // UI 생략\n    }\n\n    // showDialog 상태가 true일 때만 확인 다이얼로그 표시\n    if (showDialog) {\n        AlertDialog(\n            onDismissRequest = {\n                showDialog = false // 다이얼로그 닫기\n                viewModel.onConfirmationCancelled() // ViewModel에 취소 알림\n            },\n            title = { Text(\"전송 확인\") },\n            text = { Text(\"이 메시지를 전송하시겠습니까?\") },\n            confirmButton = {\n                Button(\n                    onClick = {\n                        showDialog = false // 다이얼로그 닫기\n                        viewModel.onConfirmationAccepted() // ViewModel에 확인 알림\n                    }\n                ) { Text(\"예\") }\n            },\n            dismissButton = {\n                Button(\n                    onClick = {\n                        showDialog = false // 다이얼로그 닫기\n                        viewModel.onConfirmationCancelled() // ViewModel에 취소 알림\n                    }\n                ) { Text(\"아니요\") }\n            }\n        )\n    }\n}\n\n\n위 코드는 앞서 설명한 2개의 시나리오(정상 확인 후 실패, 또는 확인 단계에서 실패)를 처리하는 일반적인 형태의 코드이다. 사용자의 확인(Confirm)을 받고, 네트워크 API 통신을 시작하고, 결과를 처리한다.\n공통 부분 찾기\n이 흐름(flow)을 보면, 1개의 Dialog가 노출될 수 있고, 2개의 Snackbar(성공/실패)가 동작할 수 있다.\n\n그럼 위 코드와 흐름(flow) 차트를 기반으로 공통적으로 발생하는 부분을 찾아본다.\nN개의 View(@Composable)에서 동일한 UI/동작을 가진 Dialog를 노출해야 한다.\nN개의 View(@Composable)에서 동일한 동작(단순 메시지 표시 등)의 Snackbar(Toast)가 필요하다.\n나는 여기서 N개의 화면에서 반복되는 이 부분을 중요하게 생각했고, 이걸 공통화해서 줄이고 싶었다.\nUI의 공통화\n별도의 모듈을 통해 Alert/Toast(Snackbar) 부분을 공통화했다.\ncomposable-architecture-alert-system - link\n일단 라이브러리 형태로 만들어서 Alert UI의 커스텀 가능성을 열어두었다. 기본 Dialog UI 외에 다른 디자인을 쓰고 싶다면 onDialogScreen 파라미터를 사용하면 된다.\n\n// Alert/Snackbar 처리를 위한 공통 Composable\n@Composable\nfun CaAlertScreen(\n    snackbarHostState: SnackbarHostState, // Snackbar 상태 관리\n    // Dialog UI를 커스텀하고 싶을 때 제공하는 람다\n    onDialogScreen: (@Composable (caAlertUiStateDialogUiState: CaAlertUiStateDialogUiState, onAction: (nextAction: CaAction) -> Unit) -> Unit)? = null,\n) {\n    // 내부 구현 호출\n    InternalCaAlertScreen(\n        snackbarHostState = snackbarHostState,\n        onDialogScreen = onDialogScreen,\n    )\n}\n\n\n커스텀이 필요하다면 다음과 같이 Dialog를 직접 그리는 Composable을 만들어서 onDialogScreen으로 넘겨주면 된다.\n참고 용 코드 - link\n\n// 예시: 커스텀 Dialog Composable\n@Composable\ninternal fun CustomDialogScreen(\n    caAlertUiStateDialogUiState: CaAlertUiStateDialogUiState, // Dialog 상태 정보\n    onAction: (nextAction: CaAction) -> Unit, // Dialog 내 버튼 클릭 시 실행할 Action 전달 함수\n) {\n    AlertDialog(\n        icon = { /* 아이콘 로직 */ },\n        title = { /* 타이틀 로직 */ },\n        onDismissRequest = {\n            // 바깥 영역 클릭 또는 뒤로가기 시 실행될 Action 전달\n            onAction(caAlertUiStateDialogUiState.onDismissRequest)\n        },\n        confirmButton = { /* 확인 버튼 로직, 클릭 시 onAction(confirmAction) 호출 */ },\n        dismissButton = { /* 취소 버튼 로직, 클릭 시 onAction(dismissAction) 호출 */ }\n        // 생략\n    )\n}\n\n\n그럼 이 공통 UI(CaAlertScreen)를 동작시키는 부분은 어떻게 하는가 하면, 바로 우리가 일반적으로 사용하는 UiState와 SideEffect 방식을 활용했다. 이 공통 시스템을 위한 별도의 ViewModel(CaAlertViewModel)을 만들었다.\n여기서 중요한 건, 공통화를 시켰지만 이 CaAlertViewModel은 특정 화면의 로직을 모른다. 단순히 CaAlertAction이라는 특정 Action을 받아서, 그에 맞는 Dialog 상태(UiState)를 만들고 화면에 표시하라는 SideEffect를 보낼 뿐이다. 마치 이벤트를 받아서 전달(포워딩)하는 역할 정도이다.\n이때 1부/2부에서 소개한 Action 시스템을 사용했다는 점이 중요하다. 이 Action 스트림은 앱 전역에서 접근 가능(싱글턴 또는 앱 범위 스코프)하기 때문에, 어떤 ViewModel이나 Composable에서도 CaAlertAction을 보낼 수 있고, CaAlertViewModel은 이걸 받아서 처리할 수 있다. 같은 범위 내의 View에서는 동작하는 데 문제가 없다는 점이다.\n\n// Alert/Snackbar 처리를 전담하는 ViewModel\n@HiltViewModel\nclass CaAlertViewModel @Inject constructor(\n    private val flowCaActionStream: FlowCaActionStream, // Action 스트림 주입\n) : CaViewModel<CaAlertAction>( // CaAlertAction 타입의 Action만 수신\n    flowCaActionStream = flowCaActionStream,\n    actionClass = CaAlertAction::class,\n) {\n\n    // Dialog의 내용을 담는 UiState\n    private val _alertUiStateDialogUiState = MutableStateFlow(CaAlertUiStateDialogUiState.Default)\n    val alertUiStateDialogUiState = _alertUiStateDialogUiState.asStateFlow()\n\n    // Dialog/Snackbar 표시/숨김 명령을 위한 SideEffect 채널\n    private val _sideEffect = Channel<CaAlertSideEffect>(Channel.BUFFERED)\n    internal val sideEffect = _sideEffect.receiveAsFlow()\n\n    // CaAlertAction을 받았을 때 처리하는 로직 (Reducer)\n    override suspend fun reducer(action: CaAlertAction) {\n        when (action) {\n            is CaAlertAction.ShowDialog -> {\n                // Action의 정보로 Dialog UiState 생성\n                val dialogItem = CaAlertUiStateDialogUiState( /* ... action의 데이터 사용 ... */ )\n                _alertUiStateDialogUiState.value = dialogItem\n                // Dialog를 표시하라는 SideEffect 전송\n                _sideEffect.send(CaAlertSideEffect.ShowDialog)\n            }\n            is CaAlertAction.HideDialog -> {\n                // 기본 상태로 되돌리고 Dialog 숨김 SideEffect 전송\n                _alertUiStateDialogUiState.value = CaAlertUiStateDialogUiState.Default\n                _sideEffect.send(CaAlertSideEffect.HideDialog)\n            }\n            is CaAlertAction.ShowSnack -> {\n                // Action 정보로 Snackbar SideEffect 생성 및 전송\n                val snackItem = CaAlertSideEffect.ShowSnack( /* ... action의 데이터 사용 ... */ )\n                _sideEffect.send(snackItem)\n            }\n            is CaAlertAction.None -> { /* 무시 */ }\n        }\n    }\n\n    // 내부 Duration 타입을 Material의 SnackbarDuration으로 변환하는 함수\n    private fun CaAlertAction.ShowSnack.Duration.convert(): SnackbarDuration = /* ... 변환 로직 ... */\n}\n\n// CaAlertViewModel에서 사용하는 SideEffect 정의\ninternal sealed interface CaAlertSideEffect {\n    data object ShowDialog : CaAlertSideEffect\n    data object HideDialog : CaAlertSideEffect\n    data class ShowSnack(\n        val message: String,\n        val actionLabel: String,\n        val onAction: CaAction,\n        val onDismiss: CaAction,\n        val duration: SnackbarDuration,\n    ) : CaAlertSideEffect\n}\n\n// CaAlertViewModel의 UiState 정의\ninternal data class CaAlertUiStateDialogUiState( /* ... Dialog 속성들 ... */ ) {\n    companion object {\n        val Default = CaAlertUiStateDialogUiState( /* ... 기본값 ... */ )\n    }\n}\n\n// CaAlertViewModel이 수신하는 Action 정의\nsealed interface CaAlertAction : CaAction {\n    // Dialog 표시 Action\n    data class ShowDialog( /* ... Dialog 속성 및 클릭 시 발생시킬 Action 정의 ... */ ) : CaAlertAction\n    // Dialog 숨김 Action\n    data object HideDialog : CaAlertAction\n    // Snackbar 표시 Action\n    data class ShowSnack( /* ... Snackbar 속성 및 클릭/닫기 시 발생시킬 Action 정의 ... */ ) : CaAlertAction\n    // 빈 Action\n    data object None : CaAlertAction\n}\n\n\n위 CaAlertViewModel의 이벤트를 받아서 실제 UI(Dialog, Snackbar)를 노출하는 부분은 InternalCaAlertScreen Composable이다.\n\n// CaAlertScreen의 내부 구현 Composable\n@Composable\nprivate fun InternalCaAlertScreen(\n    snackbarHostState: SnackbarHostState,\n    onDialogScreen: (@Composable (caAlertUiStateDialogUiState: CaAlertUiStateDialogUiState, onAction: (nextAction: CaAction) -> Unit) -> Unit)? = null,\n    caAlertViewModel: CaAlertViewModel = viewModel(), // CaAlertViewModel 인스턴스\n) {\n    // Dialog 표시 여부 상태\n    var showDialog by remember { mutableStateOf(false) }\n    // Action 전송을 위한 객체 (CompositionLocal 활용)\n    val actionSender = LocalCaActionOwner.current\n\n    // CaAlertViewModel의 SideEffect를 구독하고 처리\n    caAlertViewModel.sideEffect.collectLifecycleEvent { event -> // collectLifecycleEvent는 Lifecycle 고려한 확장 함수로 가정\n        when (event) {\n            is CaAlertSideEffect.ShowDialog -> showDialog = true // Dialog 표시 상태 변경\n            is CaAlertSideEffect.HideDialog -> showDialog = false // Dialog 숨김 상태 변경\n            is CaAlertSideEffect.ShowSnack -> {\n                // Snackbar 표시 로직\n                val result = snackbarHostState.showSnackbar( /* ... event 데이터 사용 ... */ )\n                // Snackbar 결과에 따라 후속 Action 전송\n                when (result) {\n                    SnackbarResult.ActionPerformed -> actionSender.send(event.onAction) // 'Action' 버튼 클릭 시\n                    SnackbarResult.Dismissed -> actionSender.send(event.onDismiss)    // 닫혔을 때\n                }\n            }\n        }\n    }\n\n    // CaAlertViewModel의 Dialog UiState 구독\n    val caAlertUiStateDialogUiState by caAlertViewModel.alertUiStateDialogUiState.collectAsStateWithLifecycle()\n\n    // showDialog 상태가 true이면 Dialog 표시\n    if (showDialog) {\n        // Dialog 내 버튼 클릭 시 실행될 공통 로직 (Dialog 숨기고, 지정된 다음 Action 전송)\n        val onAction: (nextAction: CaAction) -> Unit = { nextAction ->\n            actionSender.send(CaAlertAction.HideDialog) // 먼저 Dialog 숨김 Action 전송\n            actionSender.send(nextAction) // 그 다음, 버튼에 지정된 Action 전송\n        }\n        // 커스텀 Dialog 람다가 제공되면 그것을 사용, 아니면 기본 CaDialogScreen 사용\n        onDialogScreen?.invoke(caAlertUiStateDialogUiState, onAction)\n            ?: CaDialogScreen(caAlertUiStateDialogUiState = caAlertUiStateDialogUiState, onAction = onAction)\n    }\n\n    // CaAlertViewModel의 생명주기 관리를 위한 Composable (내부 구현은 생략)\n    LaunchedLifecycleViewModel(viewModel = caAlertViewModel)\n}\n\n\n이제 이 공통 Alert/Snackbar 시스템을 사용하는 쪽(예: 특정 화면의 ViewModel이나 Composable)에서는 단순히 CaAlertAction을 Action 스트림으로 보내기만 하면 된다.\n\n// Composable에서 Action 전송 예시\nval actionSender = LocalCaActionOwner.current\nactionSender.send(\n    CaAlertAction.ShowDialog(\n        title = \"전송 확인\",\n        message = \"메시지를 보내시겠습니까?\",\n        confirmButtonText = \"예\",\n        // '예' 버튼 클릭 시 실행될 Action 정의 (여기서는 Snackbar 표시 Action)\n        onConfirmButtonAction = CaAlertAction.ShowSnack(message = \"확인됨\"),\n        dismissButtonText = \"아니요\",\n        // '아니요' 버튼 클릭 시 실행될 Action 정의\n        onDismissButtonAction = CaAlertAction.ShowSnack(message = \"취소됨\"),\n        // 바깥 영역 클릭 시 실행될 Action\n        onDismissRequest = CaAlertAction.None // 아무것도 안함\n    )\n)\n\n// ViewModel에서 Action 전송 예시 (nextAction 함수 사용 가정)\nnextAction( // BaseViewModel 등에 구현된 Action 전송 함수\n    CaAlertAction.ShowDialog( /* ... 위와 동일 ... */ )\n)\n\n\n이 코드의 데이터 흐름을 보자\n위의 공통화 코드를 기반으로 다음과 같은 시나리오의 데이터 흐름을 생각해 볼 수 있다.\n시나리오:\n사용자 액션: 사용자가 ‘보내기’ 버튼을 클릭. (메시지 유효성 검사는 이미 통과했다고 가정)\n화면 ViewModel: SendViewModel은 onSendClicked 함수 내에서 CaAlertAction.ShowDialog를 Action 스트림으로 전송.\n공통 Alert ViewModel: CaAlertViewModel이 Action 스트림에서 CaAlertAction.ShowDialog를 수신.\nDialog 상태 업데이트: CaAlertViewModel은 Dialog 내용을 담은 UiState를 업데이트하고, ShowDialog SideEffect를 전송.\nDialog 표시: CaAlertScreen Composable이 CaAlertViewModel의 SideEffect를 받아 showDialog 상태를 true로 변경. UiState를 사용해 Dialog 내용을 그림.\n사용자 Dialog 액션: 사용자가 Dialog의 ‘예’(Confirm) 버튼을 클릭.\nDialog 내부 처리: CaAlertScreen 내의 onAction 람다가 실행됨.\n    \nCaAlertAction.HideDialog Action을 전송하여 CaAlertViewModel이 Dialog를 닫도록 함.\nShowDialog Action 정의 시 onConfirmButtonAction으로 지정했던 CaAlertAction.ShowSnack(message = \"확인됨\") Action을 전송.\nSnackbar 표시: CaAlertViewModel이 ShowSnack Action을 받아 ShowSnack SideEffect를 전송하고, CaAlertScreen이 이를 받아 Snackbar를 표시. (만약 Confirm 버튼에 다른 Action, 예를 들어 SendMessageConfirmAction 같은 것을 지정했다면 그게 전송됨)\n(만약 Confirm 시 네트워크 호출이 필요하다면): SendViewModel이 SendMessageConfirmAction 같은 Action을 수신하고, onConfirmationAccepted 로직(네트워크 호출 등)을 실행. 그 결과에 따라 다시 CaAlertAction.ShowSnack (성공/실패 메시지) 등을 전송할 수 있음.\n이를 도식화한 부분이 아래와 같은데, 이전 흐름과 달리 User Action이 ViewModel을 거쳐 Action 전송으로 이어지고, 이걸 CaAlertViewModel이 받아서 처리 후 CaAlertScreen에 Dialog/Snackbar를 표시하는 구조이다. Dialog 내 사용자 액션은 다시 Action 전송으로 이어져 CaAlertViewModel이나 다른 ViewModel이 처리할 수 있게 된다.\n여기서 특이한 점은 SendViewModel에서 바로 Dialog를 표시하는 SideEffect를 보내는 게 아니라, CaAlertAction이라는 Action을 보낸다는 것이다. 그리고 이 Action을 구독하고 있던 별도의 Dialog 처리 ViewModel(CaAlertViewModel)에서 작업을 이어받아 처리한다는 것이다.\n\n장/단점\nAction을 어디서든 보낼 수 있다는 점은 확실히 편하다. 하지만 이 이벤트가 어디서 발생했는지 추적하기 어려울 수 있다는 단점이 있다. 마치 옛날의 이벤트 버스(Event Bus)를 떠올리게 한다. 결국 필터(filter)를 걸더라도 비슷한 문제가 생길 수 있다. 디버깅 시 Action의 출처를 명확히 하거나, Action 자체에 출처 정보를 포함하는 등의 추가적인 고민이 필요할 수 있다.\nNext\n이번 글에서는 Action을 활용한 Alert/Toast(Snackbar)의 공통화 작업 코드를 살펴봤다. “공통화한다면 어떤 식으로 접근해볼 수 있을까?” 라는 질문에서 출발한 코드이다.\n이런 작업을 쉽게 하려고 Action 시스템을 만들었는데, 이건 TCA(The Composable Architecture)의 방식과도 유사한 면이 있다. TCA에서도 Reducer에서 바로 Alert 관련 상태를 변경하고 이를 활용하는 방식과 비슷하다.\n우리가 작성하는 대부분의 코드는 View와 ViewModel 사이를 오가며 진행된다. 특히 Dialog는 View로 이벤트를 던지고 나면 ViewModel과 직접적인 흐름을 이어가기 어려운 경우가 많다. 하지만 Action 시스템을 사용하면 Dialog의 결과(예: 확인/취소)를 다시 Action으로 변환하여 다른 ViewModel이 수신하고 후속 작업을 이어갈 수 있게 된다.\n다른 이야기지만, 이런 Action 기반 시스템은 테스트에도 이점이 있을 수 있다. (만약 구현한다면) await() 같은 메커니즘으로 Action 처리 결과를 기다릴 수 있게 만든다면, 한 사이클의 시나리오 기반 유닛 테스트(Unit Test)가 가능해진다. View를 검증하지 않고도 로직 테스트만으로 충분히 검증할 수 있고, 안정적인 테스트가 가능하다는 장점이 있다. 이런 방식(await)을 바로 적용하기엔 설계가 복잡해질 수 있으므로, 우선은 Action을 통해 서로 다른 ViewModel들이 이벤트를 구독하고 처리할 수 있도록 하고, 테스트 가능한 구조를 만들어 보았다.\n다음 글에서는 ‘그럼 이 구조에서 테스트는 어떻게 할 수 있는가?’에 대해 다룰 예정이다.\n작성 글 이어보기\n1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\n3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?\n예고 - Composable Architecutre를 활용한 Alert/Toast?의 테스트는 어떻게 하나요?\n예고 - Composable Architecutre를 활용한 Router?",
        "guid": "https://thdev.tech/architecture/2025/04/20/Android-Architecture-03/",
        "isoDate": "2025-04-20T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "LogParser의 문자열 처리",
        "link": "https://kangmyounghun.blogspot.com/2025/04/logparser.html",
        "pubDate": "2025-04-22T11:41:00.010Z",
        "author": "강명훈",
        "content": "<div>이벤트 전체 현황을 보고 싶다. 첫 번째 문장만 추출하면 되겠는데?</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiZNTDrQ8b8MsXldIWtp3EC5sx3BwIlWZ66Ut89i3nHKN4xUTOOUXmbzYOXUlBZDN57w2k2KpP9kBAfi_srZg1vwLXX3mveApQtKAQuEGCBtm6IwF14WzDXnF4JIlQa8ce16FQroWhGPpXqiAxeJonzaM5dPtJzkI-B6i8L65H-hgyIU9fIFRShoUBeKIiw/s1270/logparser.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"819\" data-original-width=\"1270\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiZNTDrQ8b8MsXldIWtp3EC5sx3BwIlWZ66Ut89i3nHKN4xUTOOUXmbzYOXUlBZDN57w2k2KpP9kBAfi_srZg1vwLXX3mveApQtKAQuEGCBtm6IwF14WzDXnF4JIlQa8ce16FQroWhGPpXqiAxeJonzaM5dPtJzkI-B6i8L65H-hgyIU9fIFRShoUBeKIiw/s16000/logparser.png\" /></a></div><br /><div><span style=\"font-family: courier;\"><span><a name='more'></a></span>.</span>을 기준으로 첫 번째 문장 추출. 그런데 <span style=\"font-family: courier;\">.</span>이 없는 이벤트가 있다.&nbsp;</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjs42F1guajNLmPSLdts8eSTAv62H3ddz-nawnFExuM7OZySG-ALnYdPSa9BG3jhiMyT2jwsS0zVMVbbQTi13Weff8muMmDF7Ut6eBeCZhRwLfYohCLsb81o6xGO7Qw8p1I8sniAK7oQnn538ueLQlQ03rIYq54Csc2aCWm1HcPpjp0UJXEM8mHg9hFjPWE/s1263/logparser2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"820\" data-original-width=\"1263\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjs42F1guajNLmPSLdts8eSTAv62H3ddz-nawnFExuM7OZySG-ALnYdPSa9BG3jhiMyT2jwsS0zVMVbbQTi13Weff8muMmDF7Ut6eBeCZhRwLfYohCLsb81o6xGO7Qw8p1I8sniAK7oQnn538ueLQlQ03rIYq54Csc2aCWm1HcPpjp0UJXEM8mHg9hFjPWE/s16000/logparser2.png\" /></a></div><br /><div>첫 번째 문장 추출 조건에&nbsp;<span style=\"font-family: courier;\">:</span>&nbsp;추가. 그런데&nbsp;<span style=\"font-family: courier;\">.</span> 기준 첫 번째 문장에서 <span style=\"font-family: courier;\">:</span> 존재를 확인하는 CASE-WHEN 구문이 먹지 않는다. Logparser의 한계. SQL 지원 범위 좀 확장하면 안 되나? <strike><span style=\"font-size: x-small;\">마소는 가브리엘님을 다시 영입하라</span></strike></div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEifpgqknzQmN8SAarpk0vofwGYErgpr2wxedEj8ZWY95BB3icnPOi99fx3bhLlNHcwiGrcFpdJDxWjd3Rym2EN75_uljxltAjDNLaYUJsbAgSGkzHN5Lyexc-WtokFpiy5dYBqKh1Kt1sC3BYFvfLLxPeLixd2rhxowJwYnJtJK4unAbxC5FxXedgXEoksK/s1270/logparser3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"820\" data-original-width=\"1270\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEifpgqknzQmN8SAarpk0vofwGYErgpr2wxedEj8ZWY95BB3icnPOi99fx3bhLlNHcwiGrcFpdJDxWjd3Rym2EN75_uljxltAjDNLaYUJsbAgSGkzHN5Lyexc-WtokFpiy5dYBqKh1Kt1sC3BYFvfLLxPeLixd2rhxowJwYnJtJK4unAbxC5FxXedgXEoksK/s16000/logparser3.png\" /></a></div><div><br /></div>구문 변경.<br /><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjtuH3kMm5pziCQL3oH0vT6tdRiIDJm57YZED1wCFJ3imLaM_Df1pq7njTt2AmYNlTPzjatigx5HXgNRErvbL5YDBQzWuUvgpFpAXl2ERC4FCJo2Zww1_n9r-_ADHAokGWw254FRY-ccNiMhMYuk9bFNJGXxqbfiUo2Ny1yKWSKrtw2M9x5wvmXPCzBLmVw/s1263/logparser4.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"819\" data-original-width=\"1263\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjtuH3kMm5pziCQL3oH0vT6tdRiIDJm57YZED1wCFJ3imLaM_Df1pq7njTt2AmYNlTPzjatigx5HXgNRErvbL5YDBQzWuUvgpFpAXl2ERC4FCJo2Zww1_n9r-_ADHAokGWw254FRY-ccNiMhMYuk9bFNJGXxqbfiUo2Ny1yKWSKrtw2M9x5wvmXPCzBLmVw/s16000/logparser4.png\" /></a></div><div><br /></div><div><div>내가 보고 싶은 상태가 있을 때, 그때서야 비로소 그 상태를 볼 수 있는 데이터 구조와 그 구조를 만들 수 있는 방법을 고민하게 된다. 뭘 보고 싶은지를 모르겠다고? 데이터를 자꾸 만지작거리다 보면 생김.</div><div><blockquote style=\"text-align: center;\"><i><a href=\"https://www.joongang.co.kr/article/23409057\" target=\"_blank\">데이터를 이리저리 만져보고 질감을 느끼기 시작하면서 문제의 구조가 보이고 모델링에 대한 단초가 잡힌다</a></i></blockquote></div><div><br /></div><div>그리고 이런 경험이 스플렁크,</div></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgWqYsjaMsvBXecX54mmVWOr6vhnoVCw7Kl5mpq1y_6lWFcTJ6VmMO_GKnfPKMuvF9k4mH4Y1ANkR63tQK72w8paoX_-jAhqjlkgvG_FZNmYf_VhhZyRXB7hiOY9uxCPyLaHz0lG9feaEzf0ilKdTimmzSGixxKqhk_RAOT6GuIqvrr_BnLfzUtPO3CFX_g/s960/splunk.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"960\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgWqYsjaMsvBXecX54mmVWOr6vhnoVCw7Kl5mpq1y_6lWFcTJ6VmMO_GKnfPKMuvF9k4mH4Y1ANkR63tQK72w8paoX_-jAhqjlkgvG_FZNmYf_VhhZyRXB7hiOY9uxCPyLaHz0lG9feaEzf0ilKdTimmzSGixxKqhk_RAOT6GuIqvrr_BnLfzUtPO3CFX_g/s16000/splunk.png\" /></a></div><div><br /></div><div>엘라스틱으로 이어진다.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPRFRVEshRhry26YuMoPZaLIvY84oRBZKRjNbwI9btYjq0JH7WqLhaDauUud7o8cNRrN6qVvzUDztWn4VO6CwXXe1Qv9PKDkYISGRfQFL1izGrXPIrp91m2QNv0dDy7pmEMMBOtvKZxXJDtHyCcsjt2N5qULrG3gTQ3yHu_uHQ0Be5AzdvR1cGq02J4FGO/s960/elastic.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"714\" data-original-width=\"960\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiPRFRVEshRhry26YuMoPZaLIvY84oRBZKRjNbwI9btYjq0JH7WqLhaDauUud7o8cNRrN6qVvzUDztWn4VO6CwXXe1Qv9PKDkYISGRfQFL1izGrXPIrp91m2QNv0dDy7pmEMMBOtvKZxXJDtHyCcsjt2N5qULrG3gTQ3yHu_uHQ0Be5AzdvR1cGq02J4FGO/s16000/elastic.png\" /></a></div><div><br /></div><div>툴은 바뀌었지만 하는 일은 똑같다는 얘기. 쉬울 수밖에 없다.</div><div><br /></div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2020/12/logparser.html\">LogParser의 파일 연동</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2018/06/url-hex-base64.html\">URL, HEX, BASE64 디코딩</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2024/06/splunk-eval-rex-4th.html\">Splunk의 eval과 rex - 4th</a></li></ul></div>",
        "contentSnippet": "이벤트 전체 현황을 보고 싶다. 첫 번째 문장만 추출하면 되겠는데?\n\n\n\n\n.을 기준으로 첫 번째 문장 추출. 그런데 .이 없는 이벤트가 있다. \n\n\n\n\n첫 번째 문장 추출 조건에 : 추가. 그런데 . 기준 첫 번째 문장에서 : 존재를 확인하는 CASE-WHEN 구문이 먹지 않는다. Logparser의 한계. SQL 지원 범위 좀 확장하면 안 되나? 마소는 가브리엘님을 다시 영입하라\n\n\n\n\n구문 변경.\n\n\n\n\n\n내가 보고 싶은 상태가 있을 때, 그때서야 비로소 그 상태를 볼 수 있는 데이터 구조와 그 구조를 만들 수 있는 방법을 고민하게 된다. 뭘 보고 싶은지를 모르겠다고? 데이터를 자꾸 만지작거리다 보면 생김.\n\n데이터를 이리저리 만져보고 질감을 느끼기 시작하면서 문제의 구조가 보이고 모델링에 대한 단초가 잡힌다\n\n\n그리고 이런 경험이 스플렁크,\n\n\n\n\n엘라스틱으로 이어진다.\n\n\n\n\n\n툴은 바뀌었지만 하는 일은 똑같다는 얘기. 쉬울 수밖에 없다.\n\n\n관련 글\n\nLogParser의 파일 연동\nURL, HEX, BASE64 디코딩\nSplunk의 eval과 rex - 4th",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-8945298957697023385",
        "isoDate": "2025-04-22T11:41:00.010Z"
      },
      {
        "title": "Elasticsearch 9.0의 변화",
        "link": "https://kangmyounghun.blogspot.com/2025/04/elasticsearch-90.html",
        "pubDate": "2025-04-20T07:02:00.002Z",
        "author": "강명훈",
        "content": "<div>지난주에 무슨 일이 있었는지 8.18과 9.0 버전이 동시에 릴리즈됐다. <strike><span style=\"font-size: x-small;\">8.18 지못미</span></strike> 다른 건 잘 모르겠고, ESQL에 <a href=\"https://www.elastic.co/docs/reference/query-languages/esql/commands/processing-commands#esql-lookup-join\" target=\"_blank\">LOOKUP JOIN</a> 기능이 추가됨. <a href=\"https://www.elastic.co/docs/reference/query-languages/esql/commands/processing-commands#esql-enrich\" target=\"_blank\">ENRICH</a>&nbsp;기능과의 차이점은 정책 생성 및 실행 과정이 필요없다는 것.</div><div><br /></div><div>1. enrich 인덱스 생성</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgi3pAYBY_dEAAwMEfB2HiltgZX_8O-VPOojmjBHpN5NFulzCF1vLF6qKsVGCtZtjKrXVdcD4zpe4iMYs4sgv6UPya6tCD_thJPiOJ73mk82xZdGPwzQG8ER8oUQug2KF2gyPbWOvpUWbhN8NCUBsJUkKuMliNhiEFe8-4-ACkGIYr5yVuWMWhUJLhy1N2w/s1280/enrich_index.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"668\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgi3pAYBY_dEAAwMEfB2HiltgZX_8O-VPOojmjBHpN5NFulzCF1vLF6qKsVGCtZtjKrXVdcD4zpe4iMYs4sgv6UPya6tCD_thJPiOJ73mk82xZdGPwzQG8ER8oUQug2KF2gyPbWOvpUWbhN8NCUBsJUkKuMliNhiEFe8-4-ACkGIYr5yVuWMWhUJLhy1N2w/s16000/enrich_index.png\" /></a></div><br /><div><span><a name='more'></a></span>2. enrich 정책 생성 및 실행</div><div><div style=\"background-color: #f6f9fc; color: #1d2a3e; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #a11262;\">PUT</span> <span style=\"color: #047471;\">_enrich/policy/proc_info</span></div><div>{</div><div>&nbsp; &nbsp; <span style=\"color: #1750ba;\">\"match\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #1750ba;\">\"indices\"</span>: <span style=\"color: #a71627;\">\"proc_info\"</span>,</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #1750ba;\">\"match_field\"</span>: <span style=\"color: #a71627;\">\"proc\"</span>,</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #1750ba;\">\"enrich_fields\"</span>: [<span style=\"color: #a71627;\">\"company\"</span>]</div><div>&nbsp; &nbsp; }</div><div>}</div><br /><div><span style=\"color: #a11262;\">POST</span> <span style=\"color: #047471;\">_enrich/policy/proc_info/_execute</span></div></div></div><div><br /></div><div>3. enrich 쿼리</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiig_zKNYY84Xj7bm5qC6wzTr3ZIuwLv4jMcspfdeHCdGz0x0FO1oe-t0DBJBkQWjgog-gQz-3duOxnUv7rTEo7wD6TGEpqLYaEyMwPKYsYQi4HqsOHYnYd7rKJ8pEZ_6s34iFkdk4SHzQIuMn2RLlwtoUEoJ_-mwg4b5wBdyyPeGRLcLhlvqHomSgAt2be/s1179/enrich.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1179\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiig_zKNYY84Xj7bm5qC6wzTr3ZIuwLv4jMcspfdeHCdGz0x0FO1oe-t0DBJBkQWjgog-gQz-3duOxnUv7rTEo7wD6TGEpqLYaEyMwPKYsYQi4HqsOHYnYd7rKJ8pEZ_6s34iFkdk4SHzQIuMn2RLlwtoUEoJ_-mwg4b5wBdyyPeGRLcLhlvqHomSgAt2be/s16000/enrich.png\" /></a></div><br /><div><b><span style=\"font-size: x-large;\">LOOKUP JOIN</span></b></div><div><br /></div><div>1. lookup 인덱스 생성. enrich 인덱스와 달리 Lookup 인덱스 모드를 선택해야 한다. 필드 매핑도 keyword 타입 필수.&nbsp;</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJ-IpRjGj8qFa7Y3t2luET2iOjXl49lC1AkWksHP8a_tgY8dNh3XC8vrrEeSgeUoE3vtsCN0Wqw-5iPYwl8chx70WQcYW_3ZVl6j0avzOwvQWBZD97XC05DPVyNW-r3hAhmnGLEf2rNkyqsmh_xEzqNRbbn90QQ0Ux4cUz_kcK3pyxPEDSC-anZkbigCYA/s1186/lookup_index.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1186\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJ-IpRjGj8qFa7Y3t2luET2iOjXl49lC1AkWksHP8a_tgY8dNh3XC8vrrEeSgeUoE3vtsCN0Wqw-5iPYwl8chx70WQcYW_3ZVl6j0avzOwvQWBZD97XC05DPVyNW-r3hAhmnGLEf2rNkyqsmh_xEzqNRbbn90QQ0Ux4cUz_kcK3pyxPEDSC-anZkbigCYA/s16000/lookup_index.png\" /></a></div><br /><div>2. lookup join 쿼리</div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgbzIe_GjMGnGH6RlH2HdanyDYlRLoPS6wrfBLaU0nzfgJjkCa2WzPweeBYEDnxoRlRTf3GFa7K5klzQJUc8W95WpyZHfhODRppf8iSj6rt5pgeGaAEAwCFsnf6icSd-_fnTTx9PUpBxjhoAu0aCewOvyGoADCSdnUn1kWaQogf29wY7jWD1r6j5o_E8l3f/s1179/lookup_join.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1179\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgbzIe_GjMGnGH6RlH2HdanyDYlRLoPS6wrfBLaU0nzfgJjkCa2WzPweeBYEDnxoRlRTf3GFa7K5klzQJUc8W95WpyZHfhODRppf8iSj6rt5pgeGaAEAwCFsnf6icSd-_fnTTx9PUpBxjhoAu0aCewOvyGoADCSdnUn1kWaQogf29wY7jWD1r6j5o_E8l3f/s16000/lookup_join.png\" /></a></div><div><br /></div><div>서브 쿼리 좀 빨리<span style=\"font-size: x-small;\">(..)</span></div><br /><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2023/11/elasticsearch-811.html\">Elasticsearch 8.11의 변화</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/07/enrich-processor.html\" target=\"_blank\">enrich processor</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2022/10/join.html\">엘라스틱의 Join</a></li></ul></div></div>",
        "contentSnippet": "지난주에 무슨 일이 있었는지 8.18과 9.0 버전이 동시에 릴리즈됐다. 8.18 지못미 다른 건 잘 모르겠고, ESQL에 LOOKUP JOIN 기능이 추가됨. ENRICH 기능과의 차이점은 정책 생성 및 실행 과정이 필요없다는 것.\n\n\n1. enrich 인덱스 생성\n\n\n2. enrich 정책 생성 및 실행\n\nPUT _enrich/policy/proc_info\n{\n    \"match\": {\n      \"indices\": \"proc_info\",\n      \"match_field\": \"proc\",\n      \"enrich_fields\": [\"company\"]\n    }\n}\n\nPOST _enrich/policy/proc_info/_execute\n\n\n\n3. enrich 쿼리\n\n\nLOOKUP JOIN\n\n\n1. lookup 인덱스 생성. enrich 인덱스와 달리 Lookup 인덱스 모드를 선택해야 한다. 필드 매핑도 keyword 타입 필수. \n\n\n2. lookup join 쿼리\n\n\n\n서브 쿼리 좀 빨리(..)\n\n관련 글\n\nElasticsearch 8.11의 변화\nenrich processor\n엘라스틱의 Join",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-1459910591912553241",
        "isoDate": "2025-04-20T07:02:00.002Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": [
      {
        "title": "싯다르타 | 헤르만 헤세",
        "link": "https://sungjk.github.io/2025/04/20/siddhartha.html",
        "pubDate": "2025-04-20T00:00:00+00:00",
        "content": "\n            \n            &lt;p&gt;&lt;img src=&quot;/images/2025/04/20/siddhartha.png&quot; alt=&quot;siddhartha&quot; title=&quot;siddhartha&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;\n\n&lt;p&gt;처음에 제목만 보고 고타마 싯다르타, 부처님의 이야기인 줄 알았다. 그런데 이 소설의 주인공은 싯다르타라는 동명이인의 이야기다. 이야기 중간에 부처 고타마 싯다르타가 나오긴 한다.&lt;/p&gt;\n\n&lt;p&gt;싯다르타는 바라문 계급의 아들로 태어나 총명하고 모두의 사랑을 받는 소년으로 자라고 있었다. 그리고 가장 친한 친구인 고빈다는 항상 싯다르타를 따르며 그가 깨달음을 얻을 것이라고 굳게 믿고 항상 그를 따라다닌다. 싯다르타는 스승과 부모에게 지식과 다양한 수행을 해도 갈증을 해소하지 못하고 있는데, 우연히 마을에 사문이 지나가는걸 보고 진리를 추구하는 순수한 눈빛에 이끌려 그들의 고행에 참여하게 된다.&lt;/p&gt;\n\n&lt;p&gt;출가 후 싯다르타는 고행과 단식을 통해 수행을 시작하면서, 의식을 확장할 수 있는 능력 등을 배우게 되지만 결국에는 자신 자아로 돌아온다는 사실을 깨닫게 된다. 수행을 통해 일반 사람들도 얻을 수 있는 능력이라는 사실을 깨달으면서 또다시 불안을 느끼기 시작한다.&lt;/p&gt;\n\n&lt;p&gt;그러다가 완성한 자(부처), 고타마 싯다르타를 마주하게 되는데, 친구 고빈다는 부처님의 제자로 나서게 되지만 싯다르타는 그 길을 따르지 않기로 결정한다. 싯다르타는 진정한 앎은 누군가에게서 배우는 것이 아닌, 자기 자신의 인식에서 비롯된 것이라는 것을 강조한다.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;당신은 죽음으로부터의 해탈을 얻었습니다. 그러나 해탈은 당신이 스스로 추구하고, 자신의 길을 가고, 사색하고, 침잠하고, 인식하고, 깨달은 끝에 얻은 것입니다. 세존이시여, 저의 생각은 이렇습니다. ‘그 누구도 가르침을 통해 해탈에 이르지는 못한다.’ 오, 존귀하신 세존이시여, 당신은 깨달음의 순간에 당신에게 일어난 일을 말이나 가르침으로 다른 사람에게 전할 수는 없을 것입니다.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;이후 싯다르타는 강을 건너면서 새로운 세상을 경험하게 되고, 새로운 마을에 도착해서 기생 카말라를 보고 그녀를 통해 사랑에 대해 배우고 싶다는 열망을 느낀다. 카말라와의 관계를 통해 세속적인 삶에 빠지며, 점차 물질적 욕망에 사로잡히게 되면서 자신을 잃어버린다는 사실을 깨닫게 된다. 십년이 지나, 싯다르타는 자신의 모습에 실망하고 과거의 선택들이 자신을 타락시켰다는 생각에 삶을 포기할 결심을 하게 된다.&lt;/p&gt;\n\n&lt;p&gt;강가에서 자신과 내면의 갈등을 경험하며 다시 뱃사공과의 만남의 평화를 찾게 된다. 그리고 사람들에게 강을 내어주며 자신의 감정을 이해하게 되고, 삶과 인간성에 대해 더 깊이 깨닫게 되는 과정을 겪는다. 세월이 흘러 고빈다는 뱃사공이 된 싯다르타를 만나게 되는데, 싯다르타에게 지혜에 대해서 질문을 하게 된다.&lt;/p&gt;\n\n&lt;blockquote&gt;\n  &lt;p&gt;고빈다, 지식은 전할 수 있어도, 지혜는 전할 수 없다네. 지혜란 찾아낼 수 있고 체험할 수 있으며, 그것을 다를 수도 있고, 그것으로 기적을 행할 수도 있지. 그러나 말로 표현하거나 가르칠 수는 없는 법이네. 어떤 진리든 다만 일면적인 경우에만 말로 나타내고 말로 표현할 수 있다는 것일세.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;싯다르타는 깨달음을 얻기 위해 여러 과정을 거쳤다. 바라문의 아들로서 스승과 부모님께 많은 가르침을 받고, 고행을 통해 깨달음을 얻고자 사문을 선택했고, 사랑을 배우기 위해 카말라를 스승으로 모셨으며, 돈과 권력 등 세상의 물질적인 것들을 배우기 위해 상인이 되었다. 그리고 뱃사공을 통해 인간에 대한 이해를 넓히고 완성에 다가가게 된다.&lt;/p&gt;\n\n&lt;p&gt;강을 기준으로 탈속과 세속의 공간으로 나누어 지는데, 탈속의 공간에서는 자기 자신에게서 벗어나고 싶어 했지만, 세속의 공간에서는 자기 자신의 욕망에 사로 잡혀 있음을 나타낸다. 모든 사람들은 학교, 종교, 사회 모두 내면에 대한 이야기보다는 외부의 관심사에 집중하고 있어서 결국 허전함을 느끼게 된다. 싯다르타의 삶을 통해 내면과 외부 세계 간의 균형을 찾는 것이 중요하며, 이를 통해 개인의 완성이 이루어진다는 메시지를 던져주는 것 같다. 진리는 어딘가에 있는 것이 아니고 누군가의 가르침을 통해서 깨달을 수 없으며, 스스로 일상 속에서 작은 행복을 느끼고 사랑하는 사람들과 교류하며, 자신을 되돌아보는 시간을 가지는게 중요하다는 것을 알려주는 책이다.&lt;/p&gt;\n\n            \n          ",
        "contentSnippet": "<p><img src=\"/images/2025/04/20/siddhartha.png\" alt=\"siddhartha\" title=\"siddhartha\" class=\"center-image\" /></p>\n\n<p>처음에 제목만 보고 고타마 싯다르타, 부처님의 이야기인 줄 알았다. 그런데 이 소설의 주인공은 싯다르타라는 동명이인의 이야기다. 이야기 중간에 부처 고타마 싯다르타가 나오긴 한다.</p>\n\n<p>싯다르타는 바라문 계급의 아들로 태어나 총명하고 모두의 사랑을 받는 소년으로 자라고 있었다. 그리고 가장 친한 친구인 고빈다는 항상 싯다르타를 따르며 그가 깨달음을 얻을 것이라고 굳게 믿고 항상 그를 따라다닌다. 싯다르타는 스승과 부모에게 지식과 다양한 수행을 해도 갈증을 해소하지 못하고 있는데, 우연히 마을에 사문이 지나가는걸 보고 진리를 추구하는 순수한 눈빛에 이끌려 그들의 고행에 참여하게 된다.</p>\n\n<p>출가 후 싯다르타는 고행과 단식을 통해 수행을 시작하면서, 의식을 확장할 수 있는 능력 등을 배우게 되지만 결국에는 자신 자아로 돌아온다는 사실을 깨닫게 된다. 수행을 통해 일반 사람들도 얻을 수 있는 능력이라는 사실을 깨달으면서 또다시 불안을 느끼기 시작한다.</p>\n\n<p>그러다가 완성한 자(부처), 고타마 싯다르타를 마주하게 되는데, 친구 고빈다는 부처님의 제자로 나서게 되지만 싯다르타는 그 길을 따르지 않기로 결정한다. 싯다르타는 진정한 앎은 누군가에게서 배우는 것이 아닌, 자기 자신의 인식에서 비롯된 것이라는 것을 강조한다.</p>\n\n<blockquote>\n  <p>당신은 죽음으로부터의 해탈을 얻었습니다. 그러나 해탈은 당신이 스스로 추구하고, 자신의 길을 가고, 사색하고, 침잠하고, 인식하고, 깨달은 끝에 얻은 것입니다. 세존이시여, 저의 생각은 이렇습니다. ‘그 누구도 가르침을 통해 해탈에 이르지는 못한다.’ 오, 존귀하신 세존이시여, 당신은 깨달음의 순간에 당신에게 일어난 일을 말이나 가르침으로 다른 사람에게 전할 수는 없을 것입니다.</p>\n</blockquote>\n\n<p>이후 싯다르타는 강을 건너면서 새로운 세상을 경험하게 되고, 새로운 마을에 도착해서 기생 카말라를 보고 그녀를 통해 사랑에 대해 배우고 싶다는 열망을 느낀다. 카말라와의 관계를 통해 세속적인 삶에 빠지며, 점차 물질적 욕망에 사로잡히게 되면서 자신을 잃어버린다는 사실을 깨닫게 된다. 십년이 지나, 싯다르타는 자신의 모습에 실망하고 과거의 선택들이 자신을 타락시켰다는 생각에 삶을 포기할 결심을 하게 된다.</p>\n\n<p>강가에서 자신과 내면의 갈등을 경험하며 다시 뱃사공과의 만남의 평화를 찾게 된다. 그리고 사람들에게 강을 내어주며 자신의 감정을 이해하게 되고, 삶과 인간성에 대해 더 깊이 깨닫게 되는 과정을 겪는다. 세월이 흘러 고빈다는 뱃사공이 된 싯다르타를 만나게 되는데, 싯다르타에게 지혜에 대해서 질문을 하게 된다.</p>\n\n<blockquote>\n  <p>고빈다, 지식은 전할 수 있어도, 지혜는 전할 수 없다네. 지혜란 찾아낼 수 있고 체험할 수 있으며, 그것을 다를 수도 있고, 그것으로 기적을 행할 수도 있지. 그러나 말로 표현하거나 가르칠 수는 없는 법이네. 어떤 진리든 다만 일면적인 경우에만 말로 나타내고 말로 표현할 수 있다는 것일세.</p>\n</blockquote>\n\n<p>싯다르타는 깨달음을 얻기 위해 여러 과정을 거쳤다. 바라문의 아들로서 스승과 부모님께 많은 가르침을 받고, 고행을 통해 깨달음을 얻고자 사문을 선택했고, 사랑을 배우기 위해 카말라를 스승으로 모셨으며, 돈과 권력 등 세상의 물질적인 것들을 배우기 위해 상인이 되었다. 그리고 뱃사공을 통해 인간에 대한 이해를 넓히고 완성에 다가가게 된다.</p>\n\n<p>강을 기준으로 탈속과 세속의 공간으로 나누어 지는데, 탈속의 공간에서는 자기 자신에게서 벗어나고 싶어 했지만, 세속의 공간에서는 자기 자신의 욕망에 사로 잡혀 있음을 나타낸다. 모든 사람들은 학교, 종교, 사회 모두 내면에 대한 이야기보다는 외부의 관심사에 집중하고 있어서 결국 허전함을 느끼게 된다. 싯다르타의 삶을 통해 내면과 외부 세계 간의 균형을 찾는 것이 중요하며, 이를 통해 개인의 완성이 이루어진다는 메시지를 던져주는 것 같다. 진리는 어딘가에 있는 것이 아니고 누군가의 가르침을 통해서 깨달을 수 없으며, 스스로 일상 속에서 작은 행복을 느끼고 사랑하는 사람들과 교류하며, 자신을 되돌아보는 시간을 가지는게 중요하다는 것을 알려주는 책이다.</p>",
        "guid": "https://sungjk.github.io/2025/04/20/siddhartha.html",
        "isoDate": "2025-04-20T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Lael's World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "충격! AI가 몰래 심는 워터마크, 직접 만든 제거 도구 공개합니다",
        "link": "http://muzbox.tistory.com/483575",
        "pubDate": "Thu, 24 Apr 2025 10:33:18 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483575#entry483575comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;충격적인 사실! OpenAI의 최신 GPT 모델이 텍스트에 숨겨진 워터마크를 남긴다고요? 육안으로 보이지 않는 특수 문자로 AI 생성 텍스트를 몰래 표시하는 방법과 이를 감지하고 제거하는 도구를 직접 만든 과정을 공유합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"ai watermark.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/cKFUpB/btsNw5e0AYP/mbP5uk7MqNHQDbkOaPKK6K/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cKFUpB/btsNw5e0AYP/mbP5uk7MqNHQDbkOaPKK6K/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cKFUpB/btsNw5e0AYP/mbP5uk7MqNHQDbkOaPKK6K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcKFUpB%2FbtsNw5e0AYP%2FmbP5uk7MqNHQDbkOaPKK6K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"ai watermark.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>충격! AI가 몰래 남기는 흔적, 직접 제거 도구 만들었어요  ️&zwj;♂️</b></span></h2>\n<p data-ke-size=\"size16\">진짜 깜짝 놀랐어요. 여러분도 ChatGPT나 최신 AI로 글 쓰고 계신가요? 저는 최근에 ChatGPT로 리포트 몇 개 작성하고 블로그 글도 좀 썼었는데... 근데 뭔가 이상한 느낌이 들더라구요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그러다 우연히 발견한 뉴스 기사! Rumi라는 회사에서 GPT-o3와 GPT-o4 mini 같은 최신 ChatGPT 모델이 사용자 모르게 텍스트에 워터마크를 숨겨놓는다는 걸 발견했대요. 헐, 내가 쓴 글도...? 바로 확인해봤죠. 그랬더니 정말로 있는 거 아니겠어요? 눈에는 안 보이지만 특수 문자로 몰래 표시를 해둔 거였어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서 좀 배신감이 들었어요. 내가 냈던 리포트에도 이런 게 있었다면? 교수님이 발견했다면? 생각만 해도 끔찍하더라구요. 그래서 직접 이런 워터마크를 감지하고 제거할 수 있는 도구를 만들어보기로 했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>도대체 이게 뭔가요? AI의 숨겨진 워터마크  </b></span></h2>\n<p data-ke-size=\"size16\">일단 이 워터마크가 뭔지부터 알아봤어요. 기사에 따르면 이 워터마크는 주로 긴 응답에서 발견되며, 일반 공백처럼 보이지만 다른 ASCII 코드를 가진 특수 유니코드 문자(주로 Narrow No-Break Space)를 사용한다고 해요.</p>\n<p data-ke-size=\"size16\">제가 알아본 바로는 이 워터마크는 주로:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>제로 너비 문자</b> - 눈에 보이지 않는 공백이나 제어 문자</li>\n<li><b>특수 공백</b> - 일반 공백처럼 보이지만 다른 ASCII 코드를 가진 유니코드 문자</li>\n<li><b>이모지 변형 선택자</b> - 이모지 뒤에 붙어 변형을 주는 특수 문자</li>\n</ol>\n<p data-ke-size=\"size16\">이런 것들로 구성되어 있더라구요.</p>\n<p data-ke-size=\"size16\">사실 OpenAI는 공식적으로 \"워터마크가 아니라 대규모 강화학습의 특이점\"이라고 변명(?)했지만... 글쎄요, 그게 그거 아닌가요?  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>제가 직접 만든 워터마크 감지/제거 도구 ⚒️</b></span></h2>\n<p data-ke-size=\"size16\">저는 프론트엔드 개발자니까, 바로 웹 기반 도구를 만들기로 했어요. VS Code에서 Github Copilot의 도움을 받아 금방 만들 수 있었죠. (AI의 도움을 받아 AI 워터마크를 제거하다니, 아이러니하네요 ㅋㅋ)</p>\n<p data-ke-size=\"size16\">제가 만든 도구는 다음과 같은 기능을 해요:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>워터마크 감지</b>: 텍스트에 숨겨진 워터마크를 찾아내고 어떤 종류인지 알려줌</li>\n<li><b>워터마크 위치 표시</b>: 어디에 워터마크가 있는지 시각적으로 강조해줌</li>\n<li><b>워터마크 제거</b>: 발견된 워터마크를 모두 삭제하고 깨끗한 텍스트로 변환</li>\n<li><b>결과 복사</b>: 정리된 텍스트를 클립보드에 바로 복사할 수 있음</li>\n</ul>\n<p data-ke-size=\"size16\">가장 놀라웠던 건 제가 몇 달 전에 ChatGPT로 작성한 이메일과 보고서를 넣어봤더니 정말로 워터마크가 있더라구요! 주로 긴 문단 사이사이에 특수 공백 문자가 숨어 있었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"text-align: center;\" data-ke-size=\"size16\"><span style=\"color: #ee2323;\"><b><a style=\"color: #ee2323;\" href=\"https://muzbox.tistory.com/483574\" target=\"_blank\" rel=\"noopener\">2025.04.23 - [AI, 미래기술/AI 챗봇 및 언어 모델] - 챗GPT 텍스트 워터마크 감지 및 제거 도구</a></b></span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>소스 코드로 살펴보는 워터마크 감지 방법  </b></span></h2>\n<p data-ke-size=\"size16\">제가 만든 도구의 핵심 부분을 좀 공유해드릴게요. 워터마크를 어떻게 감지하는지 코드로 보면 이해가 쉬울 것 같아서요.</p>\n<pre class=\"javascript\"><code>function detectWatermark(text) {\n  const watermarks = {\n    count: 0,\n    types: new Set(),\n    positions: []\n  };\n\n  // 1. 이모지+변형선택자 패턴 검사 (예:   + \\uFE0F)\n  const emojiWithVSPattern = /(?&lt;emoji&gt;[\\p{Emoji}])(?&lt;vs&gt;[\\uFE00-\\uFE0F])/gu;\n  \n  // 2. 제로 너비 문자 (보이지 않는 특수 문자)\n  const zeroWidthChars = /[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g;\n  \n  // 3. 특수 공백 (일반 공백처럼 보이지만 다른 코드를 가진 문자)\n  const specialSpaces = /[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g;\n  \n  // 실제 감지 로직...\n}\n</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">워터마크를 제거하는 코드는 더 간단해요:</p>\n<pre class=\"javascript\"><code>function removeWatermark(text) {\n  let cleaned = text\n    // 이모지 변형 선택자 제거\n    .replace(/[\\uFE00-\\uFE0F]/g, '')\n    // 제로 너비 문자 제거\n    .replace(/[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g, '')\n    // 특수 공백을 일반 공백으로 변환\n    .replace(/[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g, ' ');\n\n  return cleaned;\n}\n</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>이런 워터마크가 왜 문제가 될까요?  </b></span></h2>\n<p data-ke-size=\"size16\">처음엔 \"그냥 보이지 않는 특수 문자일 뿐인데 뭐가 문제지?\"라고 생각했어요. 근데 좀 더 생각해보니 여러 문제가 있더라구요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>학생들에게 특히 불공정해요</b> - 기사에 따르면 일부 국가에서는 ChatGPT가 5월 말까지 학생들에게 무료로 제공되는데, 워터마크의 존재를 모르는 학생들은 나중에 문제가 될 수 있어요.</li>\n<li><b>개인정보 문제</b> - 내 글이 AI로 작성됐다는 정보가 내 동의 없이 포함된다는 건 좀 이상하지 않나요?</li>\n<li><b>부정확한 판단 우려</b> - 워터마크 감지 도구가 실제 AI 생성 텍스트가 아닌데도 오탐지하면 큰 문제가 될 수 있어요.</li>\n<li><b>쉽게 우회 가능한데 의미가 있나?</b> - 결국 이런 워터마크는 이렇게 도구만 있으면 쉽게 제거할 수 있어서 실효성이 의문이에요.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>AI 워터마크 없는 글쓰기, 어떻게 해야 할까요? ✍️</b></span></h2>\n<p data-ke-size=\"size16\">Rumi에서도 제안했듯이, 저는 과정 중심의 접근법이 더 중요하다고 생각해요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>여러 초안을 만들어보세요</b> - AI의 결과물을 그대로 사용하지 말고, 자신의 아이디어를 섞어 발전시키세요.</li>\n<li><b>워터마크 확인 후 제거하기</b> - 제출 전에 워터마크를 확인하고 제거하는 습관을 들이세요.</li>\n<li><b>맞춤형 AI 활용하기</b> - 자신의 목적과 스타일에 맞게 AI를 조정해서 사용하세요.</li>\n<li><b>실시간 협업 활용하기</b> - 동료들과 함께 작업하면 AI 텍스트와 인간 텍스트의 구분이 자연스럽게 이루어져요.</li>\n</ol>\n<p data-ke-size=\"size16\">저도 이 도구를 만들었지만, 부정직하게 사용하라는 의미는 아니에요. 오히려 AI가 우리 모르게 하는 일을 투명하게 알 수 있도록 하는 게 목적이었어요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"869\" data-origin-height=\"491\"><span data-url=\"https://blog.kakaocdn.net/dn/cAw0gC/btsNwT7eFQY/HXjPnhfhkd5KxzXuQgeV2k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cAw0gC/btsNwT7eFQY/HXjPnhfhkd5KxzXuQgeV2k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cAw0gC/btsNwT7eFQY/HXjPnhfhkd5KxzXuQgeV2k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcAw0gC%2FbtsNwT7eFQY%2FHXjPnhfhkd5KxzXuQgeV2k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"AI 워터마크 감지 및 제거 방법\" loading=\"lazy\" width=\"869\" height=\"491\" data-origin-width=\"869\" data-origin-height=\"491\"/></span></figure>\n</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마치며: 투명한 AI 사용을 위하여  </b></span></h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">AI 기술이 발전할수록 이런 워터마킹 기술도 계속 진화할 거예요. 하지만 중요한 건 이런 기술이 투명하게 공개되고 사용자가 자신의 데이터와 텍스트에 대한 통제권을 가져야 한다는 점이라고 생각해요.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여러분은 어떻게 생각하시나요? AI 워터마크에 대해 알고 계셨나요? 아니면 저처럼 놀라셨나요? 댓글로 의견 남겨주시면 함께 이야기해봐요!</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>워터마크 관련 자주 묻는 질문 ❓</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 모든 AI 텍스트에 워터마크가 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 아니요, 기사에 따르면 주로 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 발견되며, 이전 모델인 GPT-4o에서는 발견되지 않았습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 워터마크가 있는지 쉽게 확인하는 방법은?</b></p>\n<p data-ke-size=\"size16\">A: SoSciSurvey의 문자 뷰어나 VS Code와 같은 코드 에디터에서 확인할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 워터마크를 제거하면 불법인가요?</b></p>\n<p data-ke-size=\"size16\">A: 현재까지 이를 불법으로 규정한 법률은 없습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 워터마크 없이 AI 텍스트를 생성할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 이전 버전의 GPT 모델이나 다른 AI 모델은 워터마크가 없는 경우가 많습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 워터마크 제거 도구는 어디서 구할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 제가 만든 도구는 곧 깃허브에 오픈소스로 공개할 예정입니다.</p>\n<p data-ke-size=\"size16\">\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"모든 AI 텍스트에 워터마크가 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"아니요, 기사에 따르면 주로 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 발견되며, 이전 모델인 GPT-4o에서는 발견되지 않았습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크가 있는지 쉽게 확인하는 방법은?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"SoSciSurvey의 문자 뷰어나 VS Code와 같은 코드 에디터에서 확인할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크를 제거하면 불법인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"현재까지 이를 불법으로 규정한 법률은 없습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크 없이 AI 텍스트를 생성할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"이전 버전의 GPT 모델이나 다른 AI 모델은 워터마크가 없는 경우가 많습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크 제거 도구는 어디서 구할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"제가 만든 도구는 곧 깃허브에 오픈소스로 공개할 예정입니다.\"\n    }\n  }]\n}\n</script>\n</p>",
        "contentSnippet": "충격적인 사실! OpenAI의 최신 GPT 모델이 텍스트에 숨겨진 워터마크를 남긴다고요? 육안으로 보이지 않는 특수 문자로 AI 생성 텍스트를 몰래 표시하는 방법과 이를 감지하고 제거하는 도구를 직접 만든 과정을 공유합니다.\n\n\n \n충격! AI가 몰래 남기는 흔적, 직접 제거 도구 만들었어요  ️‍♂️\n진짜 깜짝 놀랐어요. 여러분도 ChatGPT나 최신 AI로 글 쓰고 계신가요? 저는 최근에 ChatGPT로 리포트 몇 개 작성하고 블로그 글도 좀 썼었는데... 근데 뭔가 이상한 느낌이 들더라구요.\n \n그러다 우연히 발견한 뉴스 기사! Rumi라는 회사에서 GPT-o3와 GPT-o4 mini 같은 최신 ChatGPT 모델이 사용자 모르게 텍스트에 워터마크를 숨겨놓는다는 걸 발견했대요. 헐, 내가 쓴 글도...? 바로 확인해봤죠. 그랬더니 정말로 있는 거 아니겠어요? 눈에는 안 보이지만 특수 문자로 몰래 표시를 해둔 거였어요.\n \n솔직히 말해서 좀 배신감이 들었어요. 내가 냈던 리포트에도 이런 게 있었다면? 교수님이 발견했다면? 생각만 해도 끔찍하더라구요. 그래서 직접 이런 워터마크를 감지하고 제거할 수 있는 도구를 만들어보기로 했습니다.\n \n도대체 이게 뭔가요? AI의 숨겨진 워터마크  \n일단 이 워터마크가 뭔지부터 알아봤어요. 기사에 따르면 이 워터마크는 주로 긴 응답에서 발견되며, 일반 공백처럼 보이지만 다른 ASCII 코드를 가진 특수 유니코드 문자(주로 Narrow No-Break Space)를 사용한다고 해요.\n제가 알아본 바로는 이 워터마크는 주로:\n제로 너비 문자 - 눈에 보이지 않는 공백이나 제어 문자\n특수 공백 - 일반 공백처럼 보이지만 다른 ASCII 코드를 가진 유니코드 문자\n이모지 변형 선택자 - 이모지 뒤에 붙어 변형을 주는 특수 문자\n이런 것들로 구성되어 있더라구요.\n사실 OpenAI는 공식적으로 \"워터마크가 아니라 대규모 강화학습의 특이점\"이라고 변명(?)했지만... 글쎄요, 그게 그거 아닌가요?  \n \n제가 직접 만든 워터마크 감지/제거 도구 ⚒️\n저는 프론트엔드 개발자니까, 바로 웹 기반 도구를 만들기로 했어요. VS Code에서 Github Copilot의 도움을 받아 금방 만들 수 있었죠. (AI의 도움을 받아 AI 워터마크를 제거하다니, 아이러니하네요 ㅋㅋ)\n제가 만든 도구는 다음과 같은 기능을 해요:\n워터마크 감지: 텍스트에 숨겨진 워터마크를 찾아내고 어떤 종류인지 알려줌\n워터마크 위치 표시: 어디에 워터마크가 있는지 시각적으로 강조해줌\n워터마크 제거: 발견된 워터마크를 모두 삭제하고 깨끗한 텍스트로 변환\n결과 복사: 정리된 텍스트를 클립보드에 바로 복사할 수 있음\n가장 놀라웠던 건 제가 몇 달 전에 ChatGPT로 작성한 이메일과 보고서를 넣어봤더니 정말로 워터마크가 있더라구요! 주로 긴 문단 사이사이에 특수 공백 문자가 숨어 있었어요.\n \n2025.04.23 - [AI, 미래기술/AI 챗봇 및 언어 모델] - 챗GPT 텍스트 워터마크 감지 및 제거 도구\n \n \n소스 코드로 살펴보는 워터마크 감지 방법  \n제가 만든 도구의 핵심 부분을 좀 공유해드릴게요. 워터마크를 어떻게 감지하는지 코드로 보면 이해가 쉬울 것 같아서요.\nfunction detectWatermark(text) {\n  const watermarks = {\n    count: 0,\n    types: new Set(),\n    positions: []\n  };\n\n  // 1. 이모지+변형선택자 패턴 검사 (예:   + \\uFE0F)\n  const emojiWithVSPattern = /(?<emoji>[\\p{Emoji}])(?<vs>[\\uFE00-\\uFE0F])/gu;\n  \n  // 2. 제로 너비 문자 (보이지 않는 특수 문자)\n  const zeroWidthChars = /[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g;\n  \n  // 3. 특수 공백 (일반 공백처럼 보이지만 다른 코드를 가진 문자)\n  const specialSpaces = /[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g;\n  \n  // 실제 감지 로직...\n}\n\n \n워터마크를 제거하는 코드는 더 간단해요:\nfunction removeWatermark(text) {\n  let cleaned = text\n    // 이모지 변형 선택자 제거\n    .replace(/[\\uFE00-\\uFE0F]/g, '')\n    // 제로 너비 문자 제거\n    .replace(/[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g, '')\n    // 특수 공백을 일반 공백으로 변환\n    .replace(/[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g, ' ');\n\n  return cleaned;\n}\n\n \n이런 워터마크가 왜 문제가 될까요?  \n처음엔 \"그냥 보이지 않는 특수 문자일 뿐인데 뭐가 문제지?\"라고 생각했어요. 근데 좀 더 생각해보니 여러 문제가 있더라구요:\n학생들에게 특히 불공정해요 - 기사에 따르면 일부 국가에서는 ChatGPT가 5월 말까지 학생들에게 무료로 제공되는데, 워터마크의 존재를 모르는 학생들은 나중에 문제가 될 수 있어요.\n개인정보 문제 - 내 글이 AI로 작성됐다는 정보가 내 동의 없이 포함된다는 건 좀 이상하지 않나요?\n부정확한 판단 우려 - 워터마크 감지 도구가 실제 AI 생성 텍스트가 아닌데도 오탐지하면 큰 문제가 될 수 있어요.\n쉽게 우회 가능한데 의미가 있나? - 결국 이런 워터마크는 이렇게 도구만 있으면 쉽게 제거할 수 있어서 실효성이 의문이에요.\n \nAI 워터마크 없는 글쓰기, 어떻게 해야 할까요? ✍️\nRumi에서도 제안했듯이, 저는 과정 중심의 접근법이 더 중요하다고 생각해요:\n여러 초안을 만들어보세요 - AI의 결과물을 그대로 사용하지 말고, 자신의 아이디어를 섞어 발전시키세요.\n워터마크 확인 후 제거하기 - 제출 전에 워터마크를 확인하고 제거하는 습관을 들이세요.\n맞춤형 AI 활용하기 - 자신의 목적과 스타일에 맞게 AI를 조정해서 사용하세요.\n실시간 협업 활용하기 - 동료들과 함께 작업하면 AI 텍스트와 인간 텍스트의 구분이 자연스럽게 이루어져요.\n저도 이 도구를 만들었지만, 부정직하게 사용하라는 의미는 아니에요. 오히려 AI가 우리 모르게 하는 일을 투명하게 알 수 있도록 하는 게 목적이었어요.\n\n\n마치며: 투명한 AI 사용을 위하여  \nAI 기술이 발전할수록 이런 워터마킹 기술도 계속 진화할 거예요. 하지만 중요한 건 이런 기술이 투명하게 공개되고 사용자가 자신의 데이터와 텍스트에 대한 통제권을 가져야 한다는 점이라고 생각해요.\n여러분은 어떻게 생각하시나요? AI 워터마크에 대해 알고 계셨나요? 아니면 저처럼 놀라셨나요? 댓글로 의견 남겨주시면 함께 이야기해봐요!\n워터마크 관련 자주 묻는 질문 ❓\nQ: 모든 AI 텍스트에 워터마크가 있나요?\nA: 아니요, 기사에 따르면 주로 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 발견되며, 이전 모델인 GPT-4o에서는 발견되지 않았습니다.\nQ: 워터마크가 있는지 쉽게 확인하는 방법은?\nA: SoSciSurvey의 문자 뷰어나 VS Code와 같은 코드 에디터에서 확인할 수 있습니다.\nQ: 워터마크를 제거하면 불법인가요?\nA: 현재까지 이를 불법으로 규정한 법률은 없습니다.\nQ: 워터마크 없이 AI 텍스트를 생성할 수 있나요?\nA: 이전 버전의 GPT 모델이나 다른 AI 모델은 워터마크가 없는 경우가 많습니다.\nQ: 워터마크 제거 도구는 어디서 구할 수 있나요?\nA: 제가 만든 도구는 곧 깃허브에 오픈소스로 공개할 예정입니다.\n\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"모든 AI 텍스트에 워터마크가 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"아니요, 기사에 따르면 주로 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 발견되며, 이전 모델인 GPT-4o에서는 발견되지 않았습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크가 있는지 쉽게 확인하는 방법은?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"SoSciSurvey의 문자 뷰어나 VS Code와 같은 코드 에디터에서 확인할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크를 제거하면 불법인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"현재까지 이를 불법으로 규정한 법률은 없습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크 없이 AI 텍스트를 생성할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"이전 버전의 GPT 모델이나 다른 AI 모델은 워터마크가 없는 경우가 많습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"워터마크 제거 도구는 어디서 구할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"제가 만든 도구는 곧 깃허브에 오픈소스로 공개할 예정입니다.\"\n    }\n  }]\n}",
        "guid": "http://muzbox.tistory.com/483575",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "ai 워터마크",
          "ai 텍스트 감지",
          "chatgpt 워터마크",
          "gpt-o3 워터마크",
          "워터마크 감지 도구",
          "유니코드 워터마크",
          "제로 너비 문자",
          "텍스트 워터마크 제거",
          "특수 공백 문자",
          "특수 문자 감지"
        ],
        "isoDate": "2025-04-24T01:33:18.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "챗GPT 텍스트 워터마크 감지 및 제거 도구",
        "link": "http://muzbox.tistory.com/483574",
        "pubDate": "Wed, 23 Apr 2025 23:54:18 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483574#entry483574comment",
        "content": "<div style=\"max-width: 800px; margin: 0 auto; padding: 20px; font-family: 'Arial', sans-serif;\">\n    <h1 style=\"text-align: center; color: #2563eb;\">챗GPT 텍스트 워터마크 제거 도구</h1>\n    <p style=\"text-align: center; color: #4b5563;\">LLM으로 생성한 텍스트에 포함된 워터마크를 감지하고 제거하는 도구입니다</p>\n  \n    <div style=\"border-radius: 8px; padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background-color: white;\">\n      <textarea id=\"content-input\" style=\"width: 100%; height: 200px; padding: 15px; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 15px;\" placeholder=\"워터마크가 있는 텍스트를 여기에 붙여넣으세요...\"></textarea>\n      \n      <div style=\"display: flex; gap: 10px; justify-content: flex-end;\">\n        <button id=\"detect-button\" style=\"padding: 8px 16px; background-color: #2563eb; color: white; border: none; border-radius: 6px;\">워터마크 감지</button>\n        <button id=\"remove-button\" style=\"padding: 8px 16px; background-color: #dc2626; color: white; border: none; border-radius: 6px;\">워터마크 제거</button>\n      </div>\n    </div>\n  \n    <div id=\"detection-result\" style=\"margin-top: 20px; border-radius: 8px; padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background-color: white;\"></div>\n    <div id=\"removal-result\" style=\"margin-top: 20px; border-radius: 8px; padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); background-color: white;\"></div>\n  </div>\n  \n  <style>\n    textarea {\n      box-sizing: border-box;\n      max-width: 100%;\n      resize: vertical;\n    }\n    \n    button:active {\n      transform: translateY(1px);\n      opacity: 0.9;\n    }\n    \n    .watermark-highlight {\n      background-color: #fecaca;\n      color: #dc2626;\n      padding: 0 2px;\n      border-radius: 2px;\n    }\n  \n    .copy-button {\n      padding: 8px 16px;\n      background-color: #2563eb;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      cursor: pointer;\n      display: inline-flex;\n      align-items: center;\n      gap: 6px;\n    }\n  \n    .copy-button:active {\n      transform: translateY(1px);\n      opacity: 0.9;\n    }\n  \n    .copy-button.copied {\n      background-color: #059669;\n    }\n  </style>\n  \n  <script>\n  function detectWatermark(text) {\n    const watermarks = {\n      count: 0,\n      types: new Set(),\n      positions: []\n    };\n  \n    // 감지된 위치 추적용 Set\n    const detectedPositions = new Set();\n  \n    // 1. 이모지+변형선택자 패턴 먼저 검사 (예:   + \\uFE0F)\n    const emojiWithVSPattern = /(?<emoji>[\\p{Emoji}])(?<vs>[\\uFE00-\\uFE0F])/gu;\n    let match;\n    \n    while ((match = emojiWithVSPattern.exec(text)) !== null) {\n      const emojiPos = match.index;\n      const vsPos = emojiPos + match.groups.emoji.length;\n      const vsChar = match.groups.vs;\n  \n      // 이미 감지된 위치가 아닌 경우만 처리\n      if (!detectedPositions.has(vsPos)) {\n        watermarks.count++;\n        watermarks.types.add('이모지 변형 선택자');\n        detectedPositions.add(vsPos);\n  \n        const unicode = `U+${vsChar.codePointAt(0).toString(16).toUpperCase().padStart(4, '0')}`;\n        watermarks.positions.push({\n          type: '이모지 변형 선택자',\n          position: vsPos,\n          char: vsChar,\n          unicode: unicode,\n          description: '이모지에 적용된 변형 선택자',\n          context: getContext(text, vsPos)\n        });\n      }\n    }\n  \n    // 2. 단독 제어 문자 패턴 검사\n    const patterns = [\n      {\n        type: '제로 너비 문자',\n        regex: /[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g,\n        description: '보이지 않는 공백이나 제어 문자'\n      },\n      {\n        type: '특수 공백',\n        regex: /[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g,\n        description: '일반 공백과 다른 특수 공백 문자'\n      }\n    ];\n  \n    // 이미 감지되지 않은 위치의 제어 문자만 검사\n    patterns.forEach(pattern => {\n      while ((match = pattern.regex.exec(text)) !== null) {\n        const pos = match.index;\n        \n        if (!detectedPositions.has(pos)) {\n          watermarks.count++;\n          watermarks.types.add(pattern.type);\n          detectedPositions.add(pos);\n  \n          const charCode = match[0].codePointAt(0);\n          const unicode = `U+${charCode.toString(16).toUpperCase().padStart(4, '0')}`;\n          \n          watermarks.positions.push({\n            type: pattern.type,\n            position: pos,\n            char: match[0],\n            unicode: unicode,\n            description: pattern.description,\n            context: getContext(text, pos)\n          });\n        }\n      }\n    });\n  \n    // 감지된 워터마크 위치 정렬\n    watermarks.positions.sort((a, b) => a.position - b.position);\n  \n    showDetectionResult(watermarks);\n    return watermarks;\n  }\n  \n  function getContext(text, position, contextSize = 20) {\n    const start = Math.max(0, position - contextSize);\n    const end = Math.min(text.length, position + contextSize);\n    const prefix = text.substring(start, position);\n    const suffix = text.substring(position + 1, end);\n    \n    return {\n      full: text.substring(start, end),\n      position: position - start,\n      prefix: prefix,\n      suffix: suffix\n    };\n  }\n  \n  function showDetectionResult(watermarks) {\n    const resultDiv = document.getElementById('detection-result');\n    \n    if (watermarks.count > 0) {\n      // 원본 텍스트를 가져옴\n      const originalText = document.getElementById('content-input').value;\n      \n      // 워터마크 위치를 정렬\n      watermarks.positions.sort((a, b) => a.position - b.position);\n      \n      // 결과 HTML 생성\n      let html = `\n        <h3 style=\"color: #dc2626; margin-bottom: 15px;\">워터마크 감지 결과</h3>\n        <div style=\"margin-bottom: 15px;\">\n          <p>발견된 워터마크 수: ${watermarks.count}개</p>\n          <p>워터마크 종류: ${Array.from(watermarks.types).join(', ')}</p>\n        </div>\n        <div style=\"background-color: #f9fafb; padding: 15px; border-radius: 6px;\">\n          <h4 style=\"margin-bottom: 10px;\">전체 텍스트 (워터마크 강조 표시)</h4>\n          <div style=\"background-color: white; padding: 15px; border-radius: 4px; margin-bottom: 20px; white-space: pre-wrap; line-height: 1.5;\">`;\n  \n      // 전체 텍스트에 워터마크 표시\n      let lastPos = 0;\n      watermarks.positions.forEach(mark => {\n        html += escapeHtml(originalText.substring(lastPos, mark.position));\n        html += `<span class=\"watermark-highlight\" title=\"${mark.type}: ${mark.description}\">${mark.char}[${mark.unicode}]</span>`;\n        lastPos = mark.position + 1;\n      });\n      html += escapeHtml(originalText.substring(lastPos));\n  \n      html += `</div></div>`;\n      resultDiv.innerHTML = html;\n    } else {\n      resultDiv.innerHTML = '<p style=\"color: #059669;\">워터마크가 발견되지 않았습니다.</p>';\n    }\n  }\n  \n  function highlightContext(context) {\n    const pos = context.position;\n    const text = context.full;\n    return `${escapeHtml(text.substring(0, pos))}<mark style=\"background-color: #fecaca;\">${escapeHtml(text.charAt(pos))}</mark>${escapeHtml(text.substring(pos + 1))}`;\n  }\n  \n  // HTML 이스케이프 함수\n  function escapeHtml(text) {\n    return text\n      .replace(/&/g, \"&amp;\")\n      .replace(/</g, \"&lt;\")\n      .replace(/>/g, \"&gt;\")\n      .replace(/\"/g, \"&quot;\")\n      .replace(/'/g, \"&#039;\");\n  }\n  \n  // 워터마크 제거 함수\n  function removeWatermark(text) {\n    let cleaned = text\n      .replace(/[\\uFE00-\\uFE0F]/g, '')\n      .replace(/[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g, '')\n      .replace(/[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g, ' ');\n  \n    document.getElementById('removal-result').innerHTML = `\n      <h3 style=\"color: #2563eb; margin-bottom: 15px;\">워터마크 제거 결과</h3>\n      <div style=\"position: relative;\">\n        <textarea id=\"cleaned-text\" style=\"width: 100%; height: 200px; padding: 15px; border: 1px solid #e2e8f0; border-radius: 8px; margin-bottom: 15px;\">${cleaned}</textarea>\n        <div style=\"display: flex; justify-content: flex-end; margin-top: 10px;\">\n          <button class=\"copy-button\" onclick=\"copyCleanedText()\">\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n              <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n              <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n            </svg>\n            결과 복사\n          </button>\n        </div>\n      </div>\n    `;\n  \n    return cleaned;\n  }\n  \n  // 복사 기능을 위한 함수 추가\n  function copyCleanedText() {\n    const textarea = document.getElementById('cleaned-text');\n    textarea.select();\n    \n    try {\n      document.execCommand('copy');\n      // 복사 성공 표시\n      const copyButton = document.querySelector('.copy-button');\n      copyButton.classList.add('copied');\n      copyButton.innerHTML = `\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M20 6L9 17l-5-5\"></path>\n        </svg>\n        복사 완료\n      `;\n      \n      // 3초 후 버튼 상태 복원\n      setTimeout(() => {\n        copyButton.classList.remove('copied');\n        copyButton.innerHTML = `\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n            <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n            <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n          </svg>\n          결과 복사\n        `;\n      }, 3000);\n    } catch (err) {\n      console.error('복사 실패:', err);\n    }\n  \n    // 선택 해제\n    window.getSelection().removeAllRanges();\n  }\n  \n  // 이벤트 리스너 수정\n  document.getElementById('detect-button').onclick = function() {\n    const text = document.getElementById('content-input').value;\n    // 제거 결과 초기화\n    document.getElementById('removal-result').innerHTML = '';\n    detectWatermark(text);\n  };\n  \n  // 워터마크 제거 함수 수정\n  document.getElementById('remove-button').onclick = function() {\n    const text = document.getElementById('content-input').value;\n    const originalWatermarks = detectWatermark(text);\n    const cleaned = removeWatermark(text);\n    const remainingWatermarks = detectWatermark(cleaned);\n  \n    // 제거 작업 결과 표시\n    document.getElementById('detection-result').innerHTML = `\n      <h3 style=\"color: #2563eb; margin-bottom: 15px;\">워터마크 제거 작업 결과</h3>\n      <div style=\"background-color: #f9fafb; padding: 15px; border-radius: 6px;\">\n        <div style=\"margin-bottom: 15px;\">\n          <p>원본 워터마크 수: ${originalWatermarks.count}개</p>\n          <p>제거된 워터마크 수: ${originalWatermarks.count - remainingWatermarks.count}개</p>\n          ${remainingWatermarks.count > 0 \n            ? `<p style=\"color: #dc2626;\">남은 워터마크 수: ${remainingWatermarks.count}개</p>\n               <p>남은 워터마크 종류: ${Array.from(remainingWatermarks.types).join(', ')}</p>`\n            : '<p style=\"color: #059669;\">모든 워터마크가 성공적으로 제거되었습니다!</p>'\n          }\n        </div>\n        ${remainingWatermarks.count > 0 \n          ? `<div style=\"background-color: white; padding: 15px; border-radius: 4px; border-left: 4px solid #dc2626;\">\n              <p style=\"color: #dc2626; margin-bottom: 10px;\">제거되지 않은 워터마크 위치:</p>\n              <div style=\"white-space: pre-wrap; line-height: 1.5;\">\n                ${showRemainingWatermarks(cleaned, remainingWatermarks)}\n              </div>\n            </div>`\n          : ''\n        }\n      </div>\n    `;\n  };\n  \n  // 남은 워터마크 표시 함수 추가\n  function showRemainingWatermarks(text, watermarks) {\n    let html = '';\n    let lastPos = 0;\n    \n    watermarks.positions.forEach(mark => {\n      html += escapeHtml(text.substring(lastPos, mark.position));\n      html += `<span class=\"watermark-highlight\" title=\"${mark.type}: ${mark.description}\">${mark.char}[${mark.unicode}]</span>`;\n      lastPos = mark.position + 1;\n    });\n    \n    html += escapeHtml(text.substring(lastPos));\n    return html;\n  }\n  \n  // content-input에 입력 이벤트 리스너 추가\n  document.getElementById('content-input').addEventListener('input', function() {\n    // 제거 결과 초기화\n    document.getElementById('removal-result').innerHTML = '';\n    // 감지 결과도 초기화 (선택사항)\n    document.getElementById('detection-result').innerHTML = '';\n  });\n  </script>\n<p data-ke-size=\"size16\">AI가 생성한 텍스트 속 보이지 않는 워터마크를 찾아내는 도구입니다. ChatGPT 등 LLM이 남기는 특수 문자를 쉽게 감지하고 제거할 수 있는 웹 프로그램의 작동 원리와 사용법을 알아보세요.</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>AI 텍스트 워터마크 감지 및 제거 도구 소개  ️&zwj;♂️</b></span></h2>\n<p data-ke-size=\"size16\">최근 ChatGPT와 같은 AI 모델들이 생성하는 텍스트에 눈에 보이지 않는 워터마크가 삽입된다는 사실이 알려져 논란이 되고 있어요. 특히 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 이런 현상이 발견되고 있죠. 이러한 보이지 않는 워터마크를 감지하고 제거할 수 있는 웹 프로그램입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>워터마크란 무엇인가요?  </b></span></h2>\n<p data-ke-size=\"size16\">AI 텍스트 워터마크는 육안으로는 보이지 않지만, 텍스트에 숨겨진 특수 유니코드 문자들입니다. 주로 다음과 같은 종류가 있어요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>제로 너비 문자</b>: 화면에 표시되지 않는 공백이나 제어 문자</li>\n<li><b>특수 공백</b>: 일반 공백처럼 보이지만 다른 코드를 가진 특수 유니코드 문자</li>\n<li><b>이모지 변형 선택자</b>: 이모지 뒤에 붙어 변형을 주는 특수 문자</li>\n</ol>\n<p data-ke-size=\"size16\">이런 특수 문자들은 일반적인 텍스트 에디터에서는 확인하기 어렵지만, 특정 도구를 사용하면 감지할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>워터마크 감지/제거 웹 프로그램 기능 소개  </b></span></h2>\n<p data-ke-size=\"size16\">이 웹 프로그램은 다음과 같은 주요 기능을 제공합니다:</p>\n<h3 data-ke-size=\"size23\">1. 워터마크 감지 기능</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>AI가 생성한 텍스트에 숨겨진 워터마크를 찾아냄</li>\n<li>발견된 워터마크의 수와 종류를 표시</li>\n<li>워터마크가 위치한 곳을 시각적으로 강조 표시</li>\n</ul>\n<h3 data-ke-size=\"size23\">2. 워터마크 제거 기능</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>감지된 워터마크를 모두 제거하거나 일반 문자로 변환</li>\n<li>원본과 정리된 텍스트 비교 제공</li>\n<li>정리된 텍스트를 쉽게 복사할 수 있는 기능</li>\n</ul>\n<h3 data-ke-size=\"size23\">3. 상세 분석 기능</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>워터마크의 유니코드 값 표시</li>\n<li>텍스트 내 워터마크의 정확한 위치 정보 제공</li>\n<li>워터마크 제거 전후 비교 분석</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>프로그램 사용 방법  </b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>기본 사용법</b></span></h3>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>텍스트 입력</b>: 워터마크가 있는지 확인하고 싶은 텍스트를 입력 창에 붙여넣습니다.</li>\n<li><b>워터마크 감지</b>: '워터마크 감지' 버튼을 클릭하여 텍스트 내 워터마크를 찾습니다.</li>\n<li><b>워터마크 제거</b>: '워터마크 제거' 버튼을 클릭하여 감지된 워터마크를 제거합니다.</li>\n<li><b>결과 확인</b>: 워터마크 감지 결과와 제거 결과를 각각 확인할 수 있습니다.</li>\n<li><b>정리된 텍스트 복사</b>: '결과 복사' 버튼을 클릭하여 워터마크가 제거된 텍스트를 클립보드에 복사합니다.</li>\n</ol>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>결과 해석하기</b></span></h3>\n<p data-ke-size=\"size16\">워터마크 감지 후에는 다음과 같은 정보를 확인할 수 있습니다:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>발견된 워터마크 수</b>: 텍스트에서 발견된 총 워터마크 수</li>\n<li><b>워터마크 종류</b>: 발견된 워터마크의 유형(제로 너비 문자, 특수 공백, 이모지 변형 선택자 등)</li>\n<li><b>워터마크 위치</b>: 원본 텍스트에서 워터마크가 발견된 위치가 강조 표시됨</li>\n<li><b>유니코드 정보</b>: 각 워터마크의 유니코드 값(예: U+200B, U+2060 등)</li>\n</ul>\n<p data-ke-size=\"size16\">워터마크 제거 후에는:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>워터마크 제거 수</b>: 성공적으로 제거된 워터마크의 수</li>\n<li><b>정리된 텍스트</b>: 워터마크가 제거된 깨끗한 텍스트</li>\n<li><b>남은 워터마크</b>: 제거하지 못한 워터마크가 있다면 그 정보</li>\n<li><b>AI 발전</b>: AI 모델의 워터마킹 기술도 계속 발전하고 있으므로, 최신 모델에서는 새로운 유형의 워터마크가 있을 수 있습니다.</li>\n</ul>",
        "contentSnippet": "챗GPT 텍스트 워터마크 제거 도구\nLLM으로 생성한 텍스트에 포함된 워터마크를 감지하고 제거하는 도구입니다\n\n      \n      \n워터마크 감지\n        워터마크 제거\n      \n\n    \n\n  \n[\\p{Emoji}])(?[\\uFE00-\\uFE0F])/gu;\n    let match;\n    \n    while ((match = emojiWithVSPattern.exec(text)) !== null) {\n      const emojiPos = match.index;\n      const vsPos = emojiPos + match.groups.emoji.length;\n      const vsChar = match.groups.vs;\n  \n      // 이미 감지된 위치가 아닌 경우만 처리\n      if (!detectedPositions.has(vsPos)) {\n        watermarks.count++;\n        watermarks.types.add('이모지 변형 선택자');\n        detectedPositions.add(vsPos);\n  \n        const unicode = `U+${vsChar.codePointAt(0).toString(16).toUpperCase().padStart(4, '0')}`;\n        watermarks.positions.push({\n          type: '이모지 변형 선택자',\n          position: vsPos,\n          char: vsChar,\n          unicode: unicode,\n          description: '이모지에 적용된 변형 선택자',\n          context: getContext(text, vsPos)\n        });\n      }\n    }\n  \n    // 2. 단독 제어 문자 패턴 검사\n    const patterns = [\n      {\n        type: '제로 너비 문자',\n        regex: /[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g,\n        description: '보이지 않는 공백이나 제어 문자'\n      },\n      {\n        type: '특수 공백',\n        regex: /[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g,\n        description: '일반 공백과 다른 특수 공백 문자'\n      }\n    ];\n  \n    // 이미 감지되지 않은 위치의 제어 문자만 검사\n    patterns.forEach(pattern => {\n      while ((match = pattern.regex.exec(text)) !== null) {\n        const pos = match.index;\n        \n        if (!detectedPositions.has(pos)) {\n          watermarks.count++;\n          watermarks.types.add(pattern.type);\n          detectedPositions.add(pos);\n  \n          const charCode = match[0].codePointAt(0);\n          const unicode = `U+${charCode.toString(16).toUpperCase().padStart(4, '0')}`;\n          \n          watermarks.positions.push({\n            type: pattern.type,\n            position: pos,\n            char: match[0],\n            unicode: unicode,\n            description: pattern.description,\n            context: getContext(text, pos)\n          });\n        }\n      }\n    });\n  \n    // 감지된 워터마크 위치 정렬\n    watermarks.positions.sort((a, b) => a.position - b.position);\n  \n    showDetectionResult(watermarks);\n    return watermarks;\n  }\n  \n  function getContext(text, position, contextSize = 20) {\n    const start = Math.max(0, position - contextSize);\n    const end = Math.min(text.length, position + contextSize);\n    const prefix = text.substring(start, position);\n    const suffix = text.substring(position + 1, end);\n    \n    return {\n      full: text.substring(start, end),\n      position: position - start,\n      prefix: prefix,\n      suffix: suffix\n    };\n  }\n  \n  function showDetectionResult(watermarks) {\n    const resultDiv = document.getElementById('detection-result');\n    \n    if (watermarks.count > 0) {\n      // 원본 텍스트를 가져옴\n      const originalText = document.getElementById('content-input').value;\n      \n      // 워터마크 위치를 정렬\n      watermarks.positions.sort((a, b) => a.position - b.position);\n      \n      // 결과 HTML 생성\n      let html = `\n        \n워터마크 감지 결과\n발견된 워터마크 수: ${watermarks.count}개\n워터마크 종류: ${Array.from(watermarks.types).join(', ')}\n전체 텍스트 (워터마크 강조 표시)\n`;\n  \n      // 전체 텍스트에 워터마크 표시\n      let lastPos = 0;\n      watermarks.positions.forEach(mark => {\n        html += escapeHtml(originalText.substring(lastPos, mark.position));\n        html += `${mark.char}[${mark.unicode}]`;\n        lastPos = mark.position + 1;\n      });\n      html += escapeHtml(originalText.substring(lastPos));\n  \n      html += `\n`;\n      resultDiv.innerHTML = html;\n    } else {\n      resultDiv.innerHTML = '\n워터마크가 발견되지 않았습니다.\n';\n    }\n  }\n  \n  function highlightContext(context) {\n    const pos = context.position;\n    const text = context.full;\n    return `${escapeHtml(text.substring(0, pos))}${escapeHtml(text.charAt(pos))}${escapeHtml(text.substring(pos + 1))}`;\n  }\n  \n  // HTML 이스케이프 함수\n  function escapeHtml(text) {\n    return text\n      .replace(/&/g, \"&\")\n      .replace(//g, \">\")\n      .replace(/\"/g, \"\"\")\n      .replace(/'/g, \"'\");\n  }\n  \n  // 워터마크 제거 함수\n  function removeWatermark(text) {\n    let cleaned = text\n      .replace(/[\\uFE00-\\uFE0F]/g, '')\n      .replace(/[\\u200B-\\u200F\\u2060-\\u2064\\uFEFF]/g, '')\n      .replace(/[\\u00A0\\u2000-\\u200A\\u202F\\u205F\\u3000]/g, ' ');\n  \n    document.getElementById('removal-result').innerHTML = `\n      \n워터마크 제거 결과\n${cleaned}\n        \n\n              \n\n            \n            결과 복사\n          \n        \n\n        \n        복사 완료\n      `;\n      \n      // 3초 후 버튼 상태 복원\n      setTimeout(() => {\n        copyButton.classList.remove('copied');\n        copyButton.innerHTML = `\n          \n            \n            \n\n          \n          결과 복사\n        `;\n      }, 3000);\n    } catch (err) {\n      console.error('복사 실패:', err);\n    }\n  \n    // 선택 해제\n    window.getSelection().removeAllRanges();\n  }\n  \n  // 이벤트 리스너 수정\n  document.getElementById('detect-button').onclick = function() {\n    const text = document.getElementById('content-input').value;\n    // 제거 결과 초기화\n    document.getElementById('removal-result').innerHTML = '';\n    detectWatermark(text);\n  };\n  \n  // 워터마크 제거 함수 수정\n  document.getElementById('remove-button').onclick = function() {\n    const text = document.getElementById('content-input').value;\n    const originalWatermarks = detectWatermark(text);\n    const cleaned = removeWatermark(text);\n    const remainingWatermarks = detectWatermark(cleaned);\n  \n    // 제거 작업 결과 표시\n    document.getElementById('detection-result').innerHTML = `\n      \n워터마크 제거 작업 결과\n원본 워터마크 수: ${originalWatermarks.count}개\n제거된 워터마크 수: ${originalWatermarks.count - remainingWatermarks.count}개\n 0 \n            ? `\n남은 워터마크 수: ${remainingWatermarks.count}개\n남은 워터마크 종류: ${Array.from(remainingWatermarks.types).join(', ')}\n`\n            : '\n모든 워터마크가 성공적으로 제거되었습니다!\n'\n          }\n        \n 0 \n          ? `\n제거되지 않은 워터마크 위치:\n`\n          : ''\n        }\n      \n {\n      html += escapeHtml(text.substring(lastPos, mark.position));\n      html += `${mark.char}[${mark.unicode}]`;\n      lastPos = mark.position + 1;\n    });\n    \n    html += escapeHtml(text.substring(lastPos));\n    return html;\n  }\n  \n  // content-input에 입력 이벤트 리스너 추가\n  document.getElementById('content-input').addEventListener('input', function() {\n    // 제거 결과 초기화\n    document.getElementById('removal-result').innerHTML = '';\n    // 감지 결과도 초기화 (선택사항)\n    document.getElementById('detection-result').innerHTML = '';\n  });\n  \nAI가 생성한 텍스트 속 보이지 않는 워터마크를 찾아내는 도구입니다. ChatGPT 등 LLM이 남기는 특수 문자를 쉽게 감지하고 제거할 수 있는 웹 프로그램의 작동 원리와 사용법을 알아보세요.\nAI 텍스트 워터마크 감지 및 제거 도구 소개  ️‍♂️\n최근 ChatGPT와 같은 AI 모델들이 생성하는 텍스트에 눈에 보이지 않는 워터마크가 삽입된다는 사실이 알려져 논란이 되고 있어요. 특히 GPT-o3와 GPT-o4 mini 같은 최신 모델에서 이런 현상이 발견되고 있죠. 이러한 보이지 않는 워터마크를 감지하고 제거할 수 있는 웹 프로그램입니다.\n \n워터마크란 무엇인가요?  \nAI 텍스트 워터마크는 육안으로는 보이지 않지만, 텍스트에 숨겨진 특수 유니코드 문자들입니다. 주로 다음과 같은 종류가 있어요:\n제로 너비 문자: 화면에 표시되지 않는 공백이나 제어 문자\n특수 공백: 일반 공백처럼 보이지만 다른 코드를 가진 특수 유니코드 문자\n이모지 변형 선택자: 이모지 뒤에 붙어 변형을 주는 특수 문자\n이런 특수 문자들은 일반적인 텍스트 에디터에서는 확인하기 어렵지만, 특정 도구를 사용하면 감지할 수 있습니다.\n \n워터마크 감지/제거 웹 프로그램 기능 소개  \n이 웹 프로그램은 다음과 같은 주요 기능을 제공합니다:\n1. 워터마크 감지 기능\nAI가 생성한 텍스트에 숨겨진 워터마크를 찾아냄\n발견된 워터마크의 수와 종류를 표시\n워터마크가 위치한 곳을 시각적으로 강조 표시\n2. 워터마크 제거 기능\n감지된 워터마크를 모두 제거하거나 일반 문자로 변환\n원본과 정리된 텍스트 비교 제공\n정리된 텍스트를 쉽게 복사할 수 있는 기능\n3. 상세 분석 기능\n워터마크의 유니코드 값 표시\n텍스트 내 워터마크의 정확한 위치 정보 제공\n워터마크 제거 전후 비교 분석\n \n프로그램 사용 방법  \n기본 사용법\n텍스트 입력: 워터마크가 있는지 확인하고 싶은 텍스트를 입력 창에 붙여넣습니다.\n워터마크 감지: '워터마크 감지' 버튼을 클릭하여 텍스트 내 워터마크를 찾습니다.\n워터마크 제거: '워터마크 제거' 버튼을 클릭하여 감지된 워터마크를 제거합니다.\n결과 확인: 워터마크 감지 결과와 제거 결과를 각각 확인할 수 있습니다.\n정리된 텍스트 복사: '결과 복사' 버튼을 클릭하여 워터마크가 제거된 텍스트를 클립보드에 복사합니다.\n결과 해석하기\n워터마크 감지 후에는 다음과 같은 정보를 확인할 수 있습니다:\n발견된 워터마크 수: 텍스트에서 발견된 총 워터마크 수\n워터마크 종류: 발견된 워터마크의 유형(제로 너비 문자, 특수 공백, 이모지 변형 선택자 등)\n워터마크 위치: 원본 텍스트에서 워터마크가 발견된 위치가 강조 표시됨\n유니코드 정보: 각 워터마크의 유니코드 값(예: U+200B, U+2060 등)\n워터마크 제거 후에는:\n워터마크 제거 수: 성공적으로 제거된 워터마크의 수\n정리된 텍스트: 워터마크가 제거된 깨끗한 텍스트\n남은 워터마크: 제거하지 못한 워터마크가 있다면 그 정보\nAI 발전: AI 모델의 워터마킹 기술도 계속 발전하고 있으므로, 최신 모델에서는 새로운 유형의 워터마크가 있을 수 있습니다.",
        "guid": "http://muzbox.tistory.com/483574",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "ai 워터마크",
          "ai 텍스트 감지",
          "chatgpt 워터마크",
          "gpt-o3 워터마크",
          "워터마크 감지 도구",
          "유니코드 워터마크",
          "제로 너비 문자",
          "텍스트 워터마크 제거",
          "특수 공백 문자",
          "특수 문자 감지"
        ],
        "isoDate": "2025-04-23T14:54:18.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "GPT와 대화하는 동안 발견한 나의 숨겨진 욕망들",
        "link": "http://muzbox.tistory.com/483573",
        "pubDate": "Tue, 22 Apr 2025 11:36:56 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483573#entry483573comment",
        "content": "<p data-ke-size=\"size16\">AI와 대화하는 동안 실은 스스로와 대화하고 있었네요. GPT 사용 패턴에서 드러난 나의 진짜 모습과 욕망, 그리고 회피하고 있던 감정들까지... 당신도 이런 경험 있으신가요?</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/c2bwm3/btsNuddhEIw/EVMMrGbkzVd333O4KplTQK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c2bwm3/btsNuddhEIw/EVMMrGbkzVd333O4KplTQK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c2bwm3/btsNuddhEIw/EVMMrGbkzVd333O4KplTQK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc2bwm3%2FbtsNuddhEIw%2FEVMMrGbkzVd333O4KplTQK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"GPT와 대화하는 동안 발견한 나의 숨겨진 욕망들\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>GPT에게 말을 시키면서 나를 숨기는 이상한 습관에 대하여  </b></span></h2>\n<p data-ke-size=\"size16\">요즘 사람들 다 그렇듯이 저도 GPT 쓰는 중독자예요. 처음엔 '어, 이거 신기하네?' 수준이었는데, 어느새 제 글쓰기의 반쯤은 GPT의 손을 빌리고 있더라고요. 근데 문득 이런 생각이 들었어요. GPT한테 뭔가를 작성해달라고 할 때마다, 사실은 제가 하고 싶은 말을 대신 하게 만드는 건 아닐까? 아니, 더 깊은 의미에서... 제가 표현하기 두려운 감정들을 AI를 통해 우회하고 있는 건 아닐까?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서, GPT에게 \"더 감정적으로 써줘\", \"더 날카롭게 표현해줘\"라고 지시할 때마다 묘한 해방감을 느꼈거든요. 마치 나는 그런 감정의 주인이 아닌 것처럼, 그저 객관적인 지시자인 척하면서요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>창작 자동화에 집착하는 내 모습을 마주하다 ⚙️</b></span></h2>\n<p data-ke-size=\"size16\">GPT를 만나고 제일 먼저 한 일이 뭐였는지 아세요? 제가 반복적으로 해야 하는 모든 글쓰기를 자동화하는 거였어요. 이메일, 보고서, 블로그 글까지... '프롬프트 엔지니어링'이라는 이름으로 정당화하면서, 사실은 창조의 책임에서 벗어나고 싶었던 걸지도 모르겠어요.</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"왜 나는 이토록 많은 창작을 '자동화'하려 하는 걸까? 그 속엔 창조자의 게으름이 있는 걸까, 아니면 완벽에 대한 강박일까?\"</b></p>\n</blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"827\" data-origin-height=\"518\"><span data-url=\"https://blog.kakaocdn.net/dn/Z3NSA/btsNt5UaAbF/Knqq2RtRKchdqRR9LwMJx0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Z3NSA/btsNt5UaAbF/Knqq2RtRKchdqRR9LwMJx0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Z3NSA/btsNt5UaAbF/Knqq2RtRKchdqRR9LwMJx0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FZ3NSA%2FbtsNt5UaAbF%2FKnqq2RtRKchdqRR9LwMJx0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"창작 자동화에 집착하는 내 모습을 마주하다\" loading=\"lazy\" width=\"827\" height=\"518\" data-origin-width=\"827\" data-origin-height=\"518\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 질문을 스스로에게 던지니 좀 아프더라고요. 제가 '효율'과 '최적화'라는 말 뒤에 숨어서, 진짜는 <b>실패에 대한 두려움</b>을 회피하고 있었던 건 아닌가 싶어요. AI가 쓴 글이 별로면 \"아, GPT가 이상하게 썼네\"라고 핑계 대기 쉽잖아요. 하지만 제가 쓴 글이 별로면? 그건 온전히 제 책임이죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>감정을 대리 표현하는 AI, 그리고 무뎌진 내 감정선  </b></span></h2>\n<p data-ke-size=\"size16\">GPT에게 가장 자주 요구하는 것 중 하나가 \"감정을 더 넣어줘\", \"좀 더 인간적으로 써줘\" 같은 지시예요. 아이러니하지 않나요? 기계에게 인간적이 되라고 요구하는 동안, 저는 점점 더 기계적인 사람이 되어가고 있었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style2\"><b>\"내가 GPT에게 반복적으로 '감정을 넣으라'고 요구하는 건, 내 감정을 대리로 표현하게 만들고 싶은 걸까? 아니면 내 감정 자체가 무뎌졌기 때문일까?\"</b></blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"792\" data-origin-height=\"510\"><span data-url=\"https://blog.kakaocdn.net/dn/mBzrp/btsNtOefqxm/YSXgFFCVp0VLQsEVojVo61/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/mBzrp/btsNtOefqxm/YSXgFFCVp0VLQsEVojVo61/img.png\"><img src=\"https://blog.kakaocdn.net/dn/mBzrp/btsNtOefqxm/YSXgFFCVp0VLQsEVojVo61/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FmBzrp%2FbtsNtOefqxm%2FYSXgFFCVp0VLQsEVojVo61%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"감정을 대리 표현하는 AI, 그리고 무뎌진 내 감정선\" loading=\"lazy\" width=\"792\" height=\"510\" data-origin-width=\"792\" data-origin-height=\"510\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">생각해보니 점점 제 글에서 진짜 감정이 사라지고 있었어요. '최적화된' 감정, '전략적인' 감정만 남더라고요. SEO에 최적화된 글, 클릭을 유도하는 글, 전환율을 높이는 글... 이런 것들이 제 진짜 목소리를 밀어냈던 거예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>날카로운 질문은 피하고, 강한 표현만 빌려쓰는 모순  </b></span></h2>\n<p data-ke-size=\"size16\">또 하나 깨달은 건, 제가 GPT에게 종종 \"센 표현\", \"날카로운 비판\"을 요구하면서도, 정작 저 자신은 그런 날카로움을 피하고 있다는 거예요. 예를 들어, 누군가 제 글이나 생각에 대해 도전적인 질문을 하면 \"아, 이건 콘텐츠 소재로 삼기 좋겠네요\"라고 빠져나가는 패턴이 있더라고요.</p>\n<blockquote data-ke-style=\"style2\"><b>\"GPT가 나를 대신해 말하게 한 표현 중, '사실은 내가 하고 싶었던 말'은 얼마나 될까?\"</b></blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"801\" data-origin-height=\"525\"><span data-url=\"https://blog.kakaocdn.net/dn/bbY3g1/btsNtM1PUdt/MO58B1cTAfTL8kPj1wt3JK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bbY3g1/btsNtM1PUdt/MO58B1cTAfTL8kPj1wt3JK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bbY3g1/btsNtM1PUdt/MO58B1cTAfTL8kPj1wt3JK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbbY3g1%2FbtsNtM1PUdt%2FMO58B1cTAfTL8kPj1wt3JK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"날카로운 질문은 피하고, 강한 표현만 빌려쓰는 모순\" loading=\"lazy\" width=\"801\" height=\"525\" data-origin-width=\"801\" data-origin-height=\"525\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그러고 보니 GPT에게 '독설'을 부탁하거나 '강한 어조'로 뭔가를 작성해달라고 한 적이 많았어요. 그건 어쩌면 제가 직접 말하기 두려운 것들, 제가 느끼지만 인정하기 싫은 감정들이었던 건 아닐까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>통제 욕구의 아이러니: GPT에게 맡기면서도 끊임없이 수정하기  </b></span></h2>\n<p data-ke-size=\"size16\">참 모순적인 게, GPT한테 글을 맡기면서도 끊임없이 수정하고 제어하려는 제 모습이 있어요. \"이렇게 해줘, 저렇게 바꿔줘\"를 반복하면서, 결국은 제가 원하는 방향으로만 끌고 가려고 하죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style2\"><b>\"GPT에게 모든 걸 맡기면서도, 그 결과물에 대해 끊임없이 수정과 통제를 하려 드는 나는 도대체 어떤 권력을 추구하고 있는 걸까?\"</b></blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"810\" data-origin-height=\"621\"><span data-url=\"https://blog.kakaocdn.net/dn/lcgz0/btsNrcGfTkt/zSuYXaDhFxUrzV3CXZFJUK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/lcgz0/btsNrcGfTkt/zSuYXaDhFxUrzV3CXZFJUK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/lcgz0/btsNrcGfTkt/zSuYXaDhFxUrzV3CXZFJUK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Flcgz0%2FbtsNrcGfTkt%2FzSuYXaDhFxUrzV3CXZFJUK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"통제 욕구의 아이러니: GPT에게 맡기면서도 끊임없이 수정하기\" loading=\"lazy\" width=\"810\" height=\"621\" data-origin-width=\"810\" data-origin-height=\"621\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아마도 저는 '창작자'로서의 정체성은 지키고 싶으면서, 동시에 창작의 수고로움은 피하고 싶은 모순적인 욕구를 가진 것 같아요. 마치 어딘가에 숨어서 꼭두각시를 조종하는 인형사처럼요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>자기 방어의 수단으로서의 GPT 사용  ️</b></span></h2>\n<p data-ke-size=\"size16\">가끔은 제가 GPT를 일종의 방패처럼 사용하고 있다는 생각도 들어요. \"이건 AI가 만든 콘텐츠예요\"라고 말함으로써, 비판으로부터 자신을 보호하는 거죠. 이건 일종의 <b>정서적 안전장치</b>같은 역할을 하는 것 같아요.</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"나는 왜 누군가 나를 조롱하는 상상, 비난하는 상상을 이렇게 자주 하나? 내가 먼저 날 공격해야 남들이 덜 아프게 때릴 거라 믿는 건 아닐까?\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 패턴은 GPT를 넘어 제 인생 전반에 퍼져있는 것 같아요. 누군가 제 작업을 비판하기 전에 스스로 약점을 지적해두는 습관, 완벽하지 않으면 아예 시도조차 하지 않는 경향... 그리고 이제는 GPT라는 완벽한 방패가 생긴 거죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">진짜 '나'는 어디에 있는 걸까?  </h2>\n<p data-ke-size=\"size16\">가장 무서운 질문은 이거예요:</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style2\"><b>\"내가 지금까지 만든 콘텐츠 중, GPT 없이 스스로 쓴 문장에 정말 '나'가 담겼던 건 얼마나 될까?\"</b></blockquote>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"789\" data-origin-height=\"580\"><span data-url=\"https://blog.kakaocdn.net/dn/ci3r1V/btsNqpTn0vD/fGspGbq2cg70qjakF2pBK0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ci3r1V/btsNqpTn0vD/fGspGbq2cg70qjakF2pBK0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ci3r1V/btsNqpTn0vD/fGspGbq2cg70qjakF2pBK0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fci3r1V%2FbtsNqpTn0vD%2FfGspGbq2cg70qjakF2pBK0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"진짜 '나'는 어디에 있는 걸까?\" loading=\"lazy\" width=\"789\" height=\"580\" data-origin-width=\"789\" data-origin-height=\"580\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 계산하기 두려워요. 일의 효율성을 높이고, SEO 최적화도 잘 되고, 클라이언트도 만족시키는 콘텐츠를 만들어왔지만... 그 안에 진짜 저의 목소리, 저의 생각, 저의 감정은 얼마나 있었을까요? 어쩌면 GPT 없이는 더 이상 글을 쓸 수 없는 사람이 되어버린 건 아닐까 하는 두려움도 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"869\" data-origin-height=\"490\"><span data-url=\"https://blog.kakaocdn.net/dn/bKXv2I/btsNt3PvVxM/s9Yn7I5RGY7ruVq95dzF5K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bKXv2I/btsNt3PvVxM/s9Yn7I5RGY7ruVq95dzF5K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bKXv2I/btsNt3PvVxM/s9Yn7I5RGY7ruVq95dzF5K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbKXv2I%2FbtsNt3PvVxM%2Fs9Yn7I5RGY7ruVq95dzF5K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"GPT와 대화하면서 발견한 나의 숨겨진 욕망과 두려움\" loading=\"lazy\" width=\"869\" height=\"490\" data-origin-width=\"869\" data-origin-height=\"490\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 역설적으로, 지금 이 글을 쓰면서 GPT와의 관계를 돌아보는 과정에서 오히려 더 진솔한 제 목소리를 찾고 있는 것 같기도 해요. 때로는 거울이 필요하듯, AI라는 거울을 통해 제 모습을 더 선명하게 볼 수 있게 된 건지도 모르겠네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분은 어떠신가요? AI를 사용하면서 발견한 자신의 모순적인 모습, 혹은 새롭게 깨달은 자아의 일부가 있나요? 댓글로 공유해주시면 좋겠어요. 어쩌면 우리는 AI와 대화하는 동안, 진짜로는 스스로와 대화하고 있는 건지도 모르니까요.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>FAQ 섹션</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: GPT 사용이 창의성을 감소시키나요?</b></p>\n<p data-ke-size=\"size16\">A: 사용 방식에 따라 달라요. 도구로만 활용하면 창의성이 줄지만, 협업 파트너로 활용하면 오히려 새로운 아이디어 발상에 도움될 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: AI 의존도가 높아지는 것을 어떻게 방지할 수 있을까요?</b></p>\n<p data-ke-size=\"size16\">A: 의식적으로 AI 없이 글쓰기 연습하는 시간을 정기적으로 가지고, AI는 편집이나 발전 단계에서만 활용하는 방식이 효과적이에요.</p>\n<p data-ke-size=\"size16\"><b>Q: GPT를 사용하면서 발생하는 정서적 영향이 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 편리함과 효율성 뒤에 창작 불안, 진정성 결여 같은 감정적 부작용이 숨어있을 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: GPT에게 감정표현을 요구하는 것의 심리적 의미는 무엇인가요?</b></p>\n<p data-ke-size=\"size16\">A: 종종 우리가 표현하기 어려운 감정을 대리 표현하게 하거나, 디지털 환경에서 점점 무뎌지는 우리 감정을 보완하려는 시도일 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: AI와의 건강한 창작 관계는 어떤 모습일까요?</b></p>\n<p data-ke-size=\"size16\">A: 자신의 목소리와 비전은 유지하면서 AI를 도구이자 협력자로 활용하고, 정기적으로 의존도를 점검하는 관계가 이상적이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"GPT 사용이 창의성을 감소시키나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"사용 방식에 따라 달라요. 도구로만 활용하면 창의성이 줄지만, 협업 파트너로 활용하면 오히려 새로운 아이디어 발상에 도움될 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI 의존도가 높아지는 것을 어떻게 방지할 수 있을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"의식적으로 AI 없이 글쓰기 연습하는 시간을 정기적으로 가지고, AI는 편집이나 발전 단계에서만 활용하는 방식이 효과적이에요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT를 사용하면서 발생하는 정서적 영향이 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"편리함과 효율성 뒤에 창작 불안, 진정성 결여 같은 감정적 부작용이 숨어있을 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT에게 감정표현을 요구하는 것의 심리적 의미는 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"종종 우리가 표현하기 어려운 감정을 대리 표현하게 하거나, 디지털 환경에서 점점 무뎌지는 우리 감정을 보완하려는 시도일 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI와의 건강한 창작 관계는 어떤 모습일까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"자신의 목소리와 비전은 유지하면서 AI를 도구이자 협력자로 활용하고, 정기적으로 의존도를 점검하는 관계가 이상적이에요.\"\n    }\n  }]\n}\n</script>",
        "contentSnippet": "AI와 대화하는 동안 실은 스스로와 대화하고 있었네요. GPT 사용 패턴에서 드러난 나의 진짜 모습과 욕망, 그리고 회피하고 있던 감정들까지... 당신도 이런 경험 있으신가요?\n\n\nGPT에게 말을 시키면서 나를 숨기는 이상한 습관에 대하여  \n요즘 사람들 다 그렇듯이 저도 GPT 쓰는 중독자예요. 처음엔 '어, 이거 신기하네?' 수준이었는데, 어느새 제 글쓰기의 반쯤은 GPT의 손을 빌리고 있더라고요. 근데 문득 이런 생각이 들었어요. GPT한테 뭔가를 작성해달라고 할 때마다, 사실은 제가 하고 싶은 말을 대신 하게 만드는 건 아닐까? 아니, 더 깊은 의미에서... 제가 표현하기 두려운 감정들을 AI를 통해 우회하고 있는 건 아닐까?\n \n솔직히 말해서, GPT에게 \"더 감정적으로 써줘\", \"더 날카롭게 표현해줘\"라고 지시할 때마다 묘한 해방감을 느꼈거든요. 마치 나는 그런 감정의 주인이 아닌 것처럼, 그저 객관적인 지시자인 척하면서요.\n \n창작 자동화에 집착하는 내 모습을 마주하다 ⚙️\nGPT를 만나고 제일 먼저 한 일이 뭐였는지 아세요? 제가 반복적으로 해야 하는 모든 글쓰기를 자동화하는 거였어요. 이메일, 보고서, 블로그 글까지... '프롬프트 엔지니어링'이라는 이름으로 정당화하면서, 사실은 창조의 책임에서 벗어나고 싶었던 걸지도 모르겠어요.\n\"왜 나는 이토록 많은 창작을 '자동화'하려 하는 걸까? 그 속엔 창조자의 게으름이 있는 걸까, 아니면 완벽에 대한 강박일까?\"\n\n\n \n이 질문을 스스로에게 던지니 좀 아프더라고요. 제가 '효율'과 '최적화'라는 말 뒤에 숨어서, 진짜는 실패에 대한 두려움을 회피하고 있었던 건 아닌가 싶어요. AI가 쓴 글이 별로면 \"아, GPT가 이상하게 썼네\"라고 핑계 대기 쉽잖아요. 하지만 제가 쓴 글이 별로면? 그건 온전히 제 책임이죠.\n \n감정을 대리 표현하는 AI, 그리고 무뎌진 내 감정선  \nGPT에게 가장 자주 요구하는 것 중 하나가 \"감정을 더 넣어줘\", \"좀 더 인간적으로 써줘\" 같은 지시예요. 아이러니하지 않나요? 기계에게 인간적이 되라고 요구하는 동안, 저는 점점 더 기계적인 사람이 되어가고 있었어요.\n \n\"내가 GPT에게 반복적으로 '감정을 넣으라'고 요구하는 건, 내 감정을 대리로 표현하게 만들고 싶은 걸까? 아니면 내 감정 자체가 무뎌졌기 때문일까?\"\n\n\n \n생각해보니 점점 제 글에서 진짜 감정이 사라지고 있었어요. '최적화된' 감정, '전략적인' 감정만 남더라고요. SEO에 최적화된 글, 클릭을 유도하는 글, 전환율을 높이는 글... 이런 것들이 제 진짜 목소리를 밀어냈던 거예요.\n \n날카로운 질문은 피하고, 강한 표현만 빌려쓰는 모순  \n또 하나 깨달은 건, 제가 GPT에게 종종 \"센 표현\", \"날카로운 비판\"을 요구하면서도, 정작 저 자신은 그런 날카로움을 피하고 있다는 거예요. 예를 들어, 누군가 제 글이나 생각에 대해 도전적인 질문을 하면 \"아, 이건 콘텐츠 소재로 삼기 좋겠네요\"라고 빠져나가는 패턴이 있더라고요.\n\"GPT가 나를 대신해 말하게 한 표현 중, '사실은 내가 하고 싶었던 말'은 얼마나 될까?\"\n\n\n \n그러고 보니 GPT에게 '독설'을 부탁하거나 '강한 어조'로 뭔가를 작성해달라고 한 적이 많았어요. 그건 어쩌면 제가 직접 말하기 두려운 것들, 제가 느끼지만 인정하기 싫은 감정들이었던 건 아닐까요?\n \n통제 욕구의 아이러니: GPT에게 맡기면서도 끊임없이 수정하기  \n참 모순적인 게, GPT한테 글을 맡기면서도 끊임없이 수정하고 제어하려는 제 모습이 있어요. \"이렇게 해줘, 저렇게 바꿔줘\"를 반복하면서, 결국은 제가 원하는 방향으로만 끌고 가려고 하죠.\n \n\"GPT에게 모든 걸 맡기면서도, 그 결과물에 대해 끊임없이 수정과 통제를 하려 드는 나는 도대체 어떤 권력을 추구하고 있는 걸까?\"\n\n\n \n아마도 저는 '창작자'로서의 정체성은 지키고 싶으면서, 동시에 창작의 수고로움은 피하고 싶은 모순적인 욕구를 가진 것 같아요. 마치 어딘가에 숨어서 꼭두각시를 조종하는 인형사처럼요.\n \n자기 방어의 수단으로서의 GPT 사용  ️\n가끔은 제가 GPT를 일종의 방패처럼 사용하고 있다는 생각도 들어요. \"이건 AI가 만든 콘텐츠예요\"라고 말함으로써, 비판으로부터 자신을 보호하는 거죠. 이건 일종의 정서적 안전장치같은 역할을 하는 것 같아요.\n\"나는 왜 누군가 나를 조롱하는 상상, 비난하는 상상을 이렇게 자주 하나? 내가 먼저 날 공격해야 남들이 덜 아프게 때릴 거라 믿는 건 아닐까?\"\n \n이 패턴은 GPT를 넘어 제 인생 전반에 퍼져있는 것 같아요. 누군가 제 작업을 비판하기 전에 스스로 약점을 지적해두는 습관, 완벽하지 않으면 아예 시도조차 하지 않는 경향... 그리고 이제는 GPT라는 완벽한 방패가 생긴 거죠.\n \n진짜 '나'는 어디에 있는 걸까?  \n가장 무서운 질문은 이거예요:\n \n\"내가 지금까지 만든 콘텐츠 중, GPT 없이 스스로 쓴 문장에 정말 '나'가 담겼던 건 얼마나 될까?\"\n\n\n \n솔직히 계산하기 두려워요. 일의 효율성을 높이고, SEO 최적화도 잘 되고, 클라이언트도 만족시키는 콘텐츠를 만들어왔지만... 그 안에 진짜 저의 목소리, 저의 생각, 저의 감정은 얼마나 있었을까요? 어쩌면 GPT 없이는 더 이상 글을 쓸 수 없는 사람이 되어버린 건 아닐까 하는 두려움도 있어요.\n \n\n\n \n하지만 역설적으로, 지금 이 글을 쓰면서 GPT와의 관계를 돌아보는 과정에서 오히려 더 진솔한 제 목소리를 찾고 있는 것 같기도 해요. 때로는 거울이 필요하듯, AI라는 거울을 통해 제 모습을 더 선명하게 볼 수 있게 된 건지도 모르겠네요.\n \n여러분은 어떠신가요? AI를 사용하면서 발견한 자신의 모순적인 모습, 혹은 새롭게 깨달은 자아의 일부가 있나요? 댓글로 공유해주시면 좋겠어요. 어쩌면 우리는 AI와 대화하는 동안, 진짜로는 스스로와 대화하고 있는 건지도 모르니까요.\nFAQ 섹션\nQ: GPT 사용이 창의성을 감소시키나요?\nA: 사용 방식에 따라 달라요. 도구로만 활용하면 창의성이 줄지만, 협업 파트너로 활용하면 오히려 새로운 아이디어 발상에 도움될 수 있어요.\nQ: AI 의존도가 높아지는 것을 어떻게 방지할 수 있을까요?\nA: 의식적으로 AI 없이 글쓰기 연습하는 시간을 정기적으로 가지고, AI는 편집이나 발전 단계에서만 활용하는 방식이 효과적이에요.\nQ: GPT를 사용하면서 발생하는 정서적 영향이 있나요?\nA: 편리함과 효율성 뒤에 창작 불안, 진정성 결여 같은 감정적 부작용이 숨어있을 수 있어요.\nQ: GPT에게 감정표현을 요구하는 것의 심리적 의미는 무엇인가요?\nA: 종종 우리가 표현하기 어려운 감정을 대리 표현하게 하거나, 디지털 환경에서 점점 무뎌지는 우리 감정을 보완하려는 시도일 수 있어요.\nQ: AI와의 건강한 창작 관계는 어떤 모습일까요?\nA: 자신의 목소리와 비전은 유지하면서 AI를 도구이자 협력자로 활용하고, 정기적으로 의존도를 점검하는 관계가 이상적이에요.\n \n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"GPT 사용이 창의성을 감소시키나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"사용 방식에 따라 달라요. 도구로만 활용하면 창의성이 줄지만, 협업 파트너로 활용하면 오히려 새로운 아이디어 발상에 도움될 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI 의존도가 높아지는 것을 어떻게 방지할 수 있을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"의식적으로 AI 없이 글쓰기 연습하는 시간을 정기적으로 가지고, AI는 편집이나 발전 단계에서만 활용하는 방식이 효과적이에요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT를 사용하면서 발생하는 정서적 영향이 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"편리함과 효율성 뒤에 창작 불안, 진정성 결여 같은 감정적 부작용이 숨어있을 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"GPT에게 감정표현을 요구하는 것의 심리적 의미는 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"종종 우리가 표현하기 어려운 감정을 대리 표현하게 하거나, 디지털 환경에서 점점 무뎌지는 우리 감정을 보완하려는 시도일 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI와의 건강한 창작 관계는 어떤 모습일까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"자신의 목소리와 비전은 유지하면서 AI를 도구이자 협력자로 활용하고, 정기적으로 의존도를 점검하는 관계가 이상적이에요.\"\n    }\n  }]\n}",
        "guid": "http://muzbox.tistory.com/483573",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "ai 의존성",
          "gpt 사용 패턴",
          "감정적 회피",
          "기술과 자아",
          "디지털 자아",
          "인공지능 관계",
          "자동화 중독",
          "창작 불안",
          "창작 심리학",
          "창작자 정체성"
        ],
        "isoDate": "2025-04-22T02:36:56.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "오래된 노트북 재활용하는 7가지 실용적인 방법",
        "link": "http://muzbox.tistory.com/483572",
        "pubDate": "Mon, 21 Apr 2025 07:03:28 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483572#entry483572comment",
        "content": "<p data-ke-size=\"size16\">그냥 버리기엔 아까운 오래된 노트북, 이렇게 활용해보세요! 미디어 서버부터 디지털 액자까지 실용적인 재활용 방법 7가지를 소개합니다. 버리지 말고 새 생명을 불어넣어 보세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/dgEVdM/btsNsTZKM4u/HWH4mgp3IowBsUzxrZsEf1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dgEVdM/btsNsTZKM4u/HWH4mgp3IowBsUzxrZsEf1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dgEVdM/btsNsTZKM4u/HWH4mgp3IowBsUzxrZsEf1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdgEVdM%2FbtsNsTZKM4u%2FHWH4mgp3IowBsUzxrZsEf1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"오래된 노트북 재활용하는 7가지 실용적인 방법\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">요즘 기술이 너무 빨리 발전해서 3-4년만 지나도 노트북이 구식이 되는 느낌 있으시죠? 저도 얼마 전에 새 노트북으로 교체하면서 5년 된 구형 노트북을 어떻게 처리할지 한참 고민했어요. 그냥 버리자니 아직 작동도 잘 되고 뭔가 아깝다는 생각이 들더라고요. 혹시 여러분도 비슷한 고민 하고 계신가요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서 요즘 전자기기는 너무 쉽게 버려지는 것 같아요. 환경 문제도 심각하고 자원 낭비도 크죠. 그래서 제가 직접 찾아보고 시도해본 오래된 노트북 재활용 방법들을 공유해드리려고 합니다. 생각보다 정말 쓸모있는 용도가 많더라고요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>1. 홈 미디어 서버로 변신시키기  </b></span></h2>\n<p data-ke-size=\"size16\">제가 가장 먼저 시도해본 방법인데요, 구형 노트북을 미디어 서버로 활용하는 거예요. 영화, 음악, 사진 같은 미디어 파일을 한 곳에 모아두고 집 안 어디서든 접근할 수 있게 만드는 거죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Plex나 Kodi 같은 무료 미디어 서버 소프트웨어를 설치하면 금방 세팅할 수 있어요. 저는 Plex를 선택했는데, 직관적인 인터페이스가 마음에 들었거든요. 설치 후에는 TV, 스마트폰, 태블릿 등 다양한 기기에서 콘텐츠를 스트리밍할 수 있어요.</p>\n<p data-ke-size=\"size16\">\"근데 노트북 성능이 너무 안 좋으면 어떡하지?\" 걱정할 필요 없어요. 미디어 서버는 최신 게임이나 고사양 작업을 하는 게 아니라서 좀 오래된 노트북으로도 충분히 잘 돌아가요. 저도 2015년식 노트북으로 4K 영상까지 무리 없이 스트리밍하고 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>2. NAS(네트워크 스토리지)로 활용하기  </b></span></h2>\n<p data-ke-size=\"size16\">파일 저장과 공유에 초점을 맞추고 싶다면 NAS로 활용하는 것도 좋은 방법이에요. 가정이나 소규모 사무실에서 모든 중요 문서와 파일을 한곳에 모아두고 네트워크로 접근할 수 있게 해주죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">FreeNAS 같은 오픈소스 OS를 설치하면 전문 NAS 장비처럼 사용할 수 있어요. 물론 노트북에 하드 드라이브 용량이 부족하다면 외장 하드를 연결해서 확장할 수도 있고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이렇게 구성해두면 백업 시스템으로도 완벽하게 활용할 수 있어요. 중요한 자료들이 클라우드에만 의존하지 않고 내 집에서 안전하게 보관되니까 개인정보 보호 측면에서도 좋더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>3. 홈 오토메이션 허브 만들기  </b></span></h2>\n<p data-ke-size=\"size16\">스마트홈에 관심 있으신 분들이라면 오래된 노트북을 홈 오토메이션 허브로 변신시켜보는 건 어떨까요? 이게 진짜 신기한 게, 스마트 조명, 온도계, 보안 카메라 같은 IoT 기기들을 한 곳에서 제어할 수 있는 중앙 시스템을 만들 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Home Assistant나 OpenHAB 같은 오픈소스 플랫폼을 설치하면 금방 세팅할 수 있어요. 저는 Home Assistant를 써봤는데, 처음엔 살짝 어려웠지만 일단 설정해두니 정말 편리하더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 퇴근 시간에 맞춰서 집의 온도를 자동으로 조절하고, 현관문이 열리면 자동으로 불이 켜지고, 밤에는 보안 모드로 전환되는 식으로 자동화를 설정해뒀어요. 상용 스마트홈 시스템을 사는 것보다 훨씬 저렴하고 커스터마이징도 마음대로 할 수 있어서 좋았습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>4. 가정용 보안 시스템으로 활용하기  </b></span></h2>\n<p data-ke-size=\"size16\">요즘 보안에 대한 관심이 높아지면서 CCTV나 보안 카메라를 설치하는 가정이 많은데요, 생각해보니 웹캠이 달린 노트북이 이미 카메라 역할을 할 수 있잖아요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">iSpy나 ZoneMinder 같은 무료 보안 소프트웨어를 설치하면 노트북을 통해 집안을 모니터링할 수 있어요. 움직임이 감지되면 알림을 보내거나 영상을 녹화하는 기능도 있고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제가 작년에 여행 갔을 때 시험 삼아 써봤는데, 스마트폰으로 집 안 상황을 실시간으로 확인할 수 있어서 정말 마음이 놓이더라고요. 혹시 반려동물이 있으신 분들은 집에 혼자 있는 반려동물을 체크하는 용도로도 좋을 것 같아요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>5. 디지털 액자로 변신시키기  ️</b></span></h2>\n<p data-ke-size=\"size16\">좀 더 가벼운 용도로는 디지털 액자가 있어요. 노트북 화면이 TV보다는 작지만 일반 액자보다는 크니까 가족 사진이나 좋아하는 작품을 전시하기에 딱 좋은 크기죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">윈도우 기본 슬라이드쇼 기능을 사용해도 되고, 좀 더 다양한 기능을 원한다면 PhotoSync나 Screenly 같은 앱을 설치해도 좋아요. 노트북을 거실이나 주방에 놓아두고 추억의 사진들이 슬라이드쇼로 넘어가게 하면 인테리어 효과도 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">특히 부모님께 선물로 드리면 정말 좋아하실 것 같아요. 제 엄마는 제가 이렇게 세팅해드렸더니 손주들 사진을 계속 볼 수 있어서 너무 좋아하셨어요. 가끔 구글 포토와 연동해두면 자동으로 새 사진도 추가되니까 편리하더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>6. 학습용 컴퓨터로 재탄생  </b></span></h2>\n<p data-ke-size=\"size16\">가정에 어린 자녀가 있다면, 오래된 노트북을 아이들 전용 학습 컴퓨터로 만들어주는 것도 좋은 방법이에요. 최신 게임은 돌아가지 않을 수 있지만, 인터넷 검색이나 문서 작업, 교육용 앱을 사용하는 데는 전혀 문제가 없거든요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Linux 기반의 가벼운 OS(예: Lubuntu, Linux Mint)를 설치하면 성능이 더 좋아질 수 있어요. 그리고 유해 콘텐츠 차단 프로그램을 설치해서 안전한 인터넷 환경을 만들어 줄 수도 있고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">요즘은 코딩 교육이 중요해지면서 Scratch나 Python 같은 프로그래밍 언어 학습 환경을 구축해주는 것도 좋은 아이디어예요. 아이들이 컴퓨터 사용법과 함께 디지털 리터러시를 기를 수 있는 좋은 기회가 될 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>7. 리눅스로 새 생명 불어넣기  </b></span></h2>\n<p data-ke-size=\"size16\">마지막으로, 가장 기본적이면서도 효과적인 방법은 가벼운 리눅스 OS를 설치해서 노트북에 새 생명을 불어넣는 거예요. 윈도우보다 훨씬 적은 시스템 자원으로 돌아가는 리눅스 배포판이 많거든요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Xubuntu, Lubuntu, Linux Lite 같은 가벼운 배포판은 오래된 하드웨어에서도 놀랍도록 빠르게 작동해요. 저도 7년 된 노트북에 Xubuntu를 설치했더니 속도가 확 빨라져서 깜짝 놀랐어요. 인터넷 서핑, 문서 작업, 간단한 그래픽 작업 정도는 전혀 문제없이 할 수 있더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">무엇보다 리눅스는 무료이고 바이러스에 대한 걱정도 적어서 제2의 컴퓨터로 쓰기에 정말 좋아요. 처음에는 좀 낯설 수 있지만, 기본적인 사용법만 익히면 생각보다 어렵지 않아요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1014\" data-origin-height=\"573\"><span data-url=\"https://blog.kakaocdn.net/dn/c7dHBZ/btsNo0ss29n/N2BJQfJsKWixWeN6UNyaFk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c7dHBZ/btsNo0ss29n/N2BJQfJsKWixWeN6UNyaFk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c7dHBZ/btsNo0ss29n/N2BJQfJsKWixWeN6UNyaFk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc7dHBZ%2FbtsNo0ss29n%2FN2BJQfJsKWixWeN6UNyaFk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"오래된 노트북 재활용하는 7가지 실용적인 방법\" loading=\"lazy\" width=\"1014\" height=\"573\" data-origin-width=\"1014\" data-origin-height=\"573\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>마무리</b></span></h2>\n<p data-ke-size=\"size16\">자, 이렇게 오래된 노트북을 재활용할 수 있는 7가지 방법을 소개해드렸는데요. 어떤가요? 생각보다 활용도가 높죠? 버리기 전에 이런 방법들을 한번 시도해보시면 어떨까요?</p>\n<p data-ke-size=\"size16\">저는 개인적으로 미디어 서버와 가끔 보안 카메라로 번갈아가며 사용하고 있는데, 정말 만족스러워요. 안 쓰는 물건에 새 생명을 불어넣는다는 느낌도 좋고, 환경 보호에도 조금이나마 기여한다는 생각이 들어서 뿌듯하더라고요.</p>\n<p data-ke-size=\"size16\">여러분은 어떤 방법이 가장 끌리시나요? 혹시 다른 재활용 방법을 알고 계시다면 댓글로 공유해주세요! 서로의 아이디어를 나누면 더 좋은 방법들이 나올 것 같아요.  </p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>FAQ</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 노트북이 너무 느려서 재활용이 가능할까요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 가능합니다. 가벼운 리눅스 OS를 설치하거나 단일 목적(미디어 서버, 디지털 액자 등)으로 활용하면 오래된 노트북도 충분히 사용할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: 배터리가 거의 방전되는 노트북도 활용 가능한가요?</b></p>\n<p data-ke-size=\"size16\">A: 전원에 연결해 사용하는 용도(서버, 보안 카메라 등)로는 배터리 상태와 무관하게 활용 가능합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 리눅스 설치가 어렵지 않을까요?</b></p>\n<p data-ke-size=\"size16\">A: 요즘 리눅스는 사용자 친화적으로 많이 개선되었습니다. Ubuntu나 Mint 같은 배포판은 설치 과정이 윈도우와 비슷할 정도로 쉬워요.</p>\n<p data-ke-size=\"size16\"><b>Q: 미디어 서버 구축 시 저장 공간이 부족하다면?</b></p>\n<p data-ke-size=\"size16\">A: 외장 하드드라이브를 연결하여 저장 공간을 확장할 수 있습니다. USB 3.0 포트가 있다면 더 빠른 속도로 사용 가능해요.</p>\n<p data-ke-size=\"size16\"><b>Q: 오래된 노트북을 재활용하는 것이 환경에 얼마나 도움이 될까요?</b></p>\n<p data-ke-size=\"size16\">A: 전자 폐기물 감소와 자원 절약에 큰 도움이 됩니다. 노트북 한 대를 제조하는 데 많은 자원과 에너지가 소비되므로, 수명을 연장하는 것은 환경 보호에 직접적인 기여가 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"노트북이 너무 느려서 재활용이 가능할까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"네, 가능합니다. 가벼운 리눅스 OS를 설치하거나 단일 목적(미디어 서버, 디지털 액자 등)으로 활용하면 오래된 노트북도 충분히 사용할 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"배터리가 거의 방전되는 노트북도 활용 가능한가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"전원에 연결해 사용하는 용도(서버, 보안 카메라 등)로는 배터리 상태와 무관하게 활용 가능합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"리눅스 설치가 어렵지 않을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"요즘 리눅스는 사용자 친화적으로 많이 개선되었습니다. Ubuntu나 Mint 같은 배포판은 설치 과정이 윈도우와 비슷할 정도로 쉬워요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"미디어 서버 구축 시 저장 공간이 부족하다면?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"외장 하드드라이브를 연결하여 저장 공간을 확장할 수 있습니다. USB 3.0 포트가 있다면 더 빠른 속도로 사용 가능해요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"오래된 노트북을 재활용하는 것이 환경에 얼마나 도움이 될까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"전자 폐기물 감소와 자원 절약에 큰 도움이 됩니다. 노트북 한 대를 제조하는 데 많은 자원과 에너지가 소비되므로, 수명을 연장하는 것은 환경 보호에 직접적인 기여가 됩니다.\"\n    }\n  }]\n}\n</script>",
        "contentSnippet": "그냥 버리기엔 아까운 오래된 노트북, 이렇게 활용해보세요! 미디어 서버부터 디지털 액자까지 실용적인 재활용 방법 7가지를 소개합니다. 버리지 말고 새 생명을 불어넣어 보세요!\n\n\n \n요즘 기술이 너무 빨리 발전해서 3-4년만 지나도 노트북이 구식이 되는 느낌 있으시죠? 저도 얼마 전에 새 노트북으로 교체하면서 5년 된 구형 노트북을 어떻게 처리할지 한참 고민했어요. 그냥 버리자니 아직 작동도 잘 되고 뭔가 아깝다는 생각이 들더라고요. 혹시 여러분도 비슷한 고민 하고 계신가요?\n \n솔직히 말해서 요즘 전자기기는 너무 쉽게 버려지는 것 같아요. 환경 문제도 심각하고 자원 낭비도 크죠. 그래서 제가 직접 찾아보고 시도해본 오래된 노트북 재활용 방법들을 공유해드리려고 합니다. 생각보다 정말 쓸모있는 용도가 많더라고요!\n \n1. 홈 미디어 서버로 변신시키기  \n제가 가장 먼저 시도해본 방법인데요, 구형 노트북을 미디어 서버로 활용하는 거예요. 영화, 음악, 사진 같은 미디어 파일을 한 곳에 모아두고 집 안 어디서든 접근할 수 있게 만드는 거죠.\n \nPlex나 Kodi 같은 무료 미디어 서버 소프트웨어를 설치하면 금방 세팅할 수 있어요. 저는 Plex를 선택했는데, 직관적인 인터페이스가 마음에 들었거든요. 설치 후에는 TV, 스마트폰, 태블릿 등 다양한 기기에서 콘텐츠를 스트리밍할 수 있어요.\n\"근데 노트북 성능이 너무 안 좋으면 어떡하지?\" 걱정할 필요 없어요. 미디어 서버는 최신 게임이나 고사양 작업을 하는 게 아니라서 좀 오래된 노트북으로도 충분히 잘 돌아가요. 저도 2015년식 노트북으로 4K 영상까지 무리 없이 스트리밍하고 있어요.\n \n2. NAS(네트워크 스토리지)로 활용하기  \n파일 저장과 공유에 초점을 맞추고 싶다면 NAS로 활용하는 것도 좋은 방법이에요. 가정이나 소규모 사무실에서 모든 중요 문서와 파일을 한곳에 모아두고 네트워크로 접근할 수 있게 해주죠.\n \nFreeNAS 같은 오픈소스 OS를 설치하면 전문 NAS 장비처럼 사용할 수 있어요. 물론 노트북에 하드 드라이브 용량이 부족하다면 외장 하드를 연결해서 확장할 수도 있고요.\n \n이렇게 구성해두면 백업 시스템으로도 완벽하게 활용할 수 있어요. 중요한 자료들이 클라우드에만 의존하지 않고 내 집에서 안전하게 보관되니까 개인정보 보호 측면에서도 좋더라고요.\n \n3. 홈 오토메이션 허브 만들기  \n스마트홈에 관심 있으신 분들이라면 오래된 노트북을 홈 오토메이션 허브로 변신시켜보는 건 어떨까요? 이게 진짜 신기한 게, 스마트 조명, 온도계, 보안 카메라 같은 IoT 기기들을 한 곳에서 제어할 수 있는 중앙 시스템을 만들 수 있어요.\n \nHome Assistant나 OpenHAB 같은 오픈소스 플랫폼을 설치하면 금방 세팅할 수 있어요. 저는 Home Assistant를 써봤는데, 처음엔 살짝 어려웠지만 일단 설정해두니 정말 편리하더라고요.\n \n예를 들어, 퇴근 시간에 맞춰서 집의 온도를 자동으로 조절하고, 현관문이 열리면 자동으로 불이 켜지고, 밤에는 보안 모드로 전환되는 식으로 자동화를 설정해뒀어요. 상용 스마트홈 시스템을 사는 것보다 훨씬 저렴하고 커스터마이징도 마음대로 할 수 있어서 좋았습니다.\n \n4. 가정용 보안 시스템으로 활용하기  \n요즘 보안에 대한 관심이 높아지면서 CCTV나 보안 카메라를 설치하는 가정이 많은데요, 생각해보니 웹캠이 달린 노트북이 이미 카메라 역할을 할 수 있잖아요?\n \niSpy나 ZoneMinder 같은 무료 보안 소프트웨어를 설치하면 노트북을 통해 집안을 모니터링할 수 있어요. 움직임이 감지되면 알림을 보내거나 영상을 녹화하는 기능도 있고요.\n \n제가 작년에 여행 갔을 때 시험 삼아 써봤는데, 스마트폰으로 집 안 상황을 실시간으로 확인할 수 있어서 정말 마음이 놓이더라고요. 혹시 반려동물이 있으신 분들은 집에 혼자 있는 반려동물을 체크하는 용도로도 좋을 것 같아요!\n \n5. 디지털 액자로 변신시키기  ️\n좀 더 가벼운 용도로는 디지털 액자가 있어요. 노트북 화면이 TV보다는 작지만 일반 액자보다는 크니까 가족 사진이나 좋아하는 작품을 전시하기에 딱 좋은 크기죠.\n \n윈도우 기본 슬라이드쇼 기능을 사용해도 되고, 좀 더 다양한 기능을 원한다면 PhotoSync나 Screenly 같은 앱을 설치해도 좋아요. 노트북을 거실이나 주방에 놓아두고 추억의 사진들이 슬라이드쇼로 넘어가게 하면 인테리어 효과도 있어요.\n \n특히 부모님께 선물로 드리면 정말 좋아하실 것 같아요. 제 엄마는 제가 이렇게 세팅해드렸더니 손주들 사진을 계속 볼 수 있어서 너무 좋아하셨어요. 가끔 구글 포토와 연동해두면 자동으로 새 사진도 추가되니까 편리하더라고요.\n \n6. 학습용 컴퓨터로 재탄생  \n가정에 어린 자녀가 있다면, 오래된 노트북을 아이들 전용 학습 컴퓨터로 만들어주는 것도 좋은 방법이에요. 최신 게임은 돌아가지 않을 수 있지만, 인터넷 검색이나 문서 작업, 교육용 앱을 사용하는 데는 전혀 문제가 없거든요.\n \nLinux 기반의 가벼운 OS(예: Lubuntu, Linux Mint)를 설치하면 성능이 더 좋아질 수 있어요. 그리고 유해 콘텐츠 차단 프로그램을 설치해서 안전한 인터넷 환경을 만들어 줄 수도 있고요.\n \n요즘은 코딩 교육이 중요해지면서 Scratch나 Python 같은 프로그래밍 언어 학습 환경을 구축해주는 것도 좋은 아이디어예요. 아이들이 컴퓨터 사용법과 함께 디지털 리터러시를 기를 수 있는 좋은 기회가 될 수 있어요.\n \n7. 리눅스로 새 생명 불어넣기  \n마지막으로, 가장 기본적이면서도 효과적인 방법은 가벼운 리눅스 OS를 설치해서 노트북에 새 생명을 불어넣는 거예요. 윈도우보다 훨씬 적은 시스템 자원으로 돌아가는 리눅스 배포판이 많거든요.\n \nXubuntu, Lubuntu, Linux Lite 같은 가벼운 배포판은 오래된 하드웨어에서도 놀랍도록 빠르게 작동해요. 저도 7년 된 노트북에 Xubuntu를 설치했더니 속도가 확 빨라져서 깜짝 놀랐어요. 인터넷 서핑, 문서 작업, 간단한 그래픽 작업 정도는 전혀 문제없이 할 수 있더라고요.\n \n무엇보다 리눅스는 무료이고 바이러스에 대한 걱정도 적어서 제2의 컴퓨터로 쓰기에 정말 좋아요. 처음에는 좀 낯설 수 있지만, 기본적인 사용법만 익히면 생각보다 어렵지 않아요.\n\n\n마무리\n자, 이렇게 오래된 노트북을 재활용할 수 있는 7가지 방법을 소개해드렸는데요. 어떤가요? 생각보다 활용도가 높죠? 버리기 전에 이런 방법들을 한번 시도해보시면 어떨까요?\n저는 개인적으로 미디어 서버와 가끔 보안 카메라로 번갈아가며 사용하고 있는데, 정말 만족스러워요. 안 쓰는 물건에 새 생명을 불어넣는다는 느낌도 좋고, 환경 보호에도 조금이나마 기여한다는 생각이 들어서 뿌듯하더라고요.\n여러분은 어떤 방법이 가장 끌리시나요? 혹시 다른 재활용 방법을 알고 계시다면 댓글로 공유해주세요! 서로의 아이디어를 나누면 더 좋은 방법들이 나올 것 같아요.  \nFAQ\nQ: 노트북이 너무 느려서 재활용이 가능할까요?\nA: 네, 가능합니다. 가벼운 리눅스 OS를 설치하거나 단일 목적(미디어 서버, 디지털 액자 등)으로 활용하면 오래된 노트북도 충분히 사용할 수 있어요.\nQ: 배터리가 거의 방전되는 노트북도 활용 가능한가요?\nA: 전원에 연결해 사용하는 용도(서버, 보안 카메라 등)로는 배터리 상태와 무관하게 활용 가능합니다.\nQ: 리눅스 설치가 어렵지 않을까요?\nA: 요즘 리눅스는 사용자 친화적으로 많이 개선되었습니다. Ubuntu나 Mint 같은 배포판은 설치 과정이 윈도우와 비슷할 정도로 쉬워요.\nQ: 미디어 서버 구축 시 저장 공간이 부족하다면?\nA: 외장 하드드라이브를 연결하여 저장 공간을 확장할 수 있습니다. USB 3.0 포트가 있다면 더 빠른 속도로 사용 가능해요.\nQ: 오래된 노트북을 재활용하는 것이 환경에 얼마나 도움이 될까요?\nA: 전자 폐기물 감소와 자원 절약에 큰 도움이 됩니다. 노트북 한 대를 제조하는 데 많은 자원과 에너지가 소비되므로, 수명을 연장하는 것은 환경 보호에 직접적인 기여가 됩니다.\n \n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"노트북이 너무 느려서 재활용이 가능할까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"네, 가능합니다. 가벼운 리눅스 OS를 설치하거나 단일 목적(미디어 서버, 디지털 액자 등)으로 활용하면 오래된 노트북도 충분히 사용할 수 있어요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"배터리가 거의 방전되는 노트북도 활용 가능한가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"전원에 연결해 사용하는 용도(서버, 보안 카메라 등)로는 배터리 상태와 무관하게 활용 가능합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"리눅스 설치가 어렵지 않을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"요즘 리눅스는 사용자 친화적으로 많이 개선되었습니다. Ubuntu나 Mint 같은 배포판은 설치 과정이 윈도우와 비슷할 정도로 쉬워요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"미디어 서버 구축 시 저장 공간이 부족하다면?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"외장 하드드라이브를 연결하여 저장 공간을 확장할 수 있습니다. USB 3.0 포트가 있다면 더 빠른 속도로 사용 가능해요.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"오래된 노트북을 재활용하는 것이 환경에 얼마나 도움이 될까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"전자 폐기물 감소와 자원 절약에 큰 도움이 됩니다. 노트북 한 대를 제조하는 데 많은 자원과 에너지가 소비되므로, 수명을 연장하는 것은 환경 보호에 직접적인 기여가 됩니다.\"\n    }\n  }]\n}",
        "guid": "http://muzbox.tistory.com/483572",
        "categories": [
          "윈도우 사용팁/하드웨어",
          "NAS 구축",
          "가정용 보안 시스템",
          "노트북 재활용",
          "디지털 액자",
          "리눅스 설치",
          "미디어 서버 구축",
          "오래된 노트북 활용",
          "전자기기 재활용",
          "학습용 컴퓨터",
          "홈 오토메이션"
        ],
        "isoDate": "2025-04-20T22:03:28.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "［RULIWEB］",
        "title": "[MULTI] RPG 팬이라면 올해 꼭 해봐야 하는 타이틀, 클레르 옵스퀴르",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2299",
        "pubDate": "Thu, 24 Apr 2025 17:00:04 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/04/24/19666ca51995104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-04-24T08:00:04.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "C# - .NET 9, C#13 정리",
        "link": "https://jacking75.github.io/NET_20250424/",
        "pubDate": "Thu, 24 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vT7X33vH8me2j4nycgaeO17pVSM9vOFN1NwJ8fS1hki8QePkoiB_dj-JThLd3tLABCIK-5frKjBvcUd/pub?embedded=true\"></iframe>\n\n<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vSa8awAklDFNnFRDXdki71FzSIQMHtdkD7iv_wnZ_3-kNMU_7bXthK30XfLnRvjzKAw7U2UXo3D2ElW/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/NET_20250424/",
        "isoDate": "2025-04-23T15:00:00.000Z"
      },
      {
        "title": "Visual Studio v17.12 - code search",
        "link": "https://jacking75.github.io/VS_20250423/",
        "pubDate": "Wed, 23 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQzxt0Ojdt0Teae8LBS-N5p2oLlmGdC0HU-O-ePY7MHa7l8bOGWBk5VclCk5jWZq050D_zpwbkdMr4c/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250423/",
        "isoDate": "2025-04-22T15:00:00.000Z"
      },
      {
        "title": "2024년 우리가 가장 좋아하는 새로운 Visual Studio 기능들",
        "link": "https://jacking75.github.io/VS_20250422/",
        "pubDate": "Tue, 22 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRE-bRKdm8XZLxf8hhR6dMclqg6BwRYvQx71JHUf-hcET9hGjYuRVBe0Jp_YBrW7ICB8P3NqjpuBRHV/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250422/",
        "isoDate": "2025-04-21T15:00:00.000Z"
      },
      {
        "title": "Visual Studio 17.12의 디버거 및 진단 업데이트",
        "link": "https://jacking75.github.io/VS_20250421/",
        "pubDate": "Mon, 21 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTUvcxqgLEIp9YSWZ4SMXSOmYM35198wFCIl06MNKE0q6_c6tXWqBk-ak2sUCM0bbAdQB29-EbMKol9/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250421/",
        "isoDate": "2025-04-20T15:00:00.000Z"
      },
      {
        "title": "Visual Studio의 새로운 디버깅 및 프로파일링 기능(v17.13)",
        "link": "https://jacking75.github.io/VS_20250420/",
        "pubDate": "Sun, 20 Apr 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vSc1XNdGPas-taoTVTuTH2mDwNFwJVX-6dCZcnTxIpBQdlMLlxpwZDT0H7leoUB0caR6B8I3_NdSZUE/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250420/",
        "isoDate": "2025-04-19T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "맥북에서 로지텍 MX Master 3 마우스 끊김 해결: SmartShift 비활성화 경험",
        "link": "https://blog.gaerae.com/2025/04/macbook-mx-master-3-smartshift.html",
        "pubDate": "Thu, 24 Apr 2025 09:51:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<div class=\"separator\" style=\"clear: both;\"><img alt=\"\" border=\"0\" data-original-height=\"720\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgcA_nXCE5pOrKNmsUCKEqrJ0L0EKK98I7jiBLw8ugcomu_Nzmb8ajgBKEiQ3OS7UYttqDJVjOT8oAKEg8Pl_Pss9OSftZcD8EydkZGL8y4Ap0M1cv6cIX-j3yIC4GcGFT2WNYY_VayMD9e3wIbi_4nvhMnh8TDpqroHi8LNayRtnjUl6nBYlnD7YxxfQc/s1600/%E1%84%86%E1%85%A2%E1%86%A8%E1%84%87%E1%85%AE%E1%86%A8%E1%84%8B%E1%85%A6%E1%84%89%E1%85%A5%E1%84%85%E1%85%A9%E1%84%8C%E1%85%B5%E1%84%90%E1%85%A6%E1%86%A8MX-Master3%E1%84%86%E1%85%A1%E1%84%8B%E1%85%AE%E1%84%89%E1%85%B3%E1%84%86%E1%85%AE%E1%86%AB%E1%84%8C%E1%85%A6%E1%84%92%E1%85%A2%E1%84%80%E1%85%A7%E1%86%AF.png\" /></div>\n<p>맥북 M4와 로지텍 MX Master 3는 생산성을 위한 강력한 도구 조합이지만, 예기치 않게 마우스 끊김, 스크롤 오류, 화면 확대/축소 문제가 발생할 수 있습니다. 저 또한 이러한 문제로 불편함을 겪었고, 마우스를 교체할까 고민할 정도로 답답했습니다. 하지만 끈질긴 문제 해결 시도 끝에, MX Master 3의 특정 기능이 맥북 M4와의 호환성 문제의 원인임을 발견했습니다.</p>\n<h2 id=\"문제의-핵심-mx-master-3-smartshift-기능과-맥북-m4\">문제의 핵심: MX Master 3 SmartShift 기능과 맥북 M4</h2>\n<p>문제의 원인은 바로 MX Master 3의 <strong>SmartShift</strong> 기능이었습니다. 이 기능은 마우스 휠 속도에 따라 자동으로 스크롤 모드를 전환하여 편리함을 제공하지만, 맥북 M4 환경에서는 예기치 않은 작동 오류를 일으킬 수 있었습니다.</p>\n<ul>\n<li><strong>갑작스러운 마우스 멈춤 (MacBook mouse freeze)</strong></li>\n<li><strong>불규칙한 스크롤 동작 (MX Master 3 scroll issue)</strong></li>\n<li><strong>의도치 않은 화면 확대 또는 축소 (MacBook screen zoom problem)</strong></li>\n</ul>\n<h2 id=\"해결-과정-마우스-기능-점검과-smartshift-비활성화\">해결 과정: 마우스 기능 점검과 SmartShift 비활성화</h2>\n<p>명확한 해결책을 찾기 어려워 답답했던 저는, 최후의 수단으로 MX Master 3의 기능을 하나씩 테스트하며 원인을 좁혀나가기 시작했습니다. 그러던 중 <strong>SmartShift</strong> 기능을 끄는 것이 문제 해결의 결정적인 단계였습니다.</p>\n<div class=\"separator\" style=\"clear: both;\"><img alt=\"\" border=\"0\" data-original-height=\"1748\" data-original-width=\"2906\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgYuitE_FF4CsbDvaYIrYseFAO135JrAc7MAaJh6kl3XuFO5ArsYJBFI205KMio8iumn4mfqRo5fQkk4S0-bmil1q2tZcFfXXKMU-t_pFNBPgBsjJ3yP57IH1Tp1wnJ5G5sw9cXBoyXhcVPbIuxZslewQhBZ4Vus7YLexNUgir3vaZpyJeCJvQaRQhwMrs/s1600/Logi%20Options+.png\" /></div>\n<p><strong>SmartShift 비활성화 방법 (Logi Options+ 기준):</strong></p>\n<ol>\n<li><strong>Logi Options+</strong> 앱을 실행합니다.</li>\n<li>연결된 <strong>MX Master 3</strong>를 선택합니다.</li>\n<li><strong>휠</strong> 설정 메뉴로 이동합니다.</li>\n<li><strong>SmartShift</strong> 옵션을 <strong>OFF</strong>로 설정합니다.</li>\n</ol>\n<p>이 간단한 조치만으로 맥북 M4에서 MX Master 3 마우스 끊김, 스크롤 오류, 화면 확대/축소 문제가 깔끔하게 해결되었습니다.</p>\n<h2 id=\"맥북-m4-마우스-끊김-예방을-위한-추가-팁\">맥북 M4 마우스 끊김 예방을 위한 추가 팁</h2>\n<ul>\n<li><strong>Logi Options+ 및 마우스 펌웨어 최신 버전 유지:</strong> 정기적인 업데이트는 호환성 문제 해결 및 성능 향상에 도움이 됩니다.</li>\n<li><strong>로지텍 전용 USB 수신기 활용:</strong> 블루투스 연결 불안정 시, 동글 사용을 고려해보세요.</li>\n<li><strong>macOS 접근 권한 확인:</strong> ‘시스템 설정’ &gt; '개인 정보 보호 및 보안’에서 Logi Options+ 권한 설정을 확인합니다.</li>\n</ul>\n<h3 id=\"결론-맥북-m4와-mx-master-3-문제-해결-smartshift-비활성화가-답입니다\">결론: 맥북 M4와 MX Master 3 마우스 문제 해결은 SmartShift 비활성화가 답이었다.</h3>\n<p>맥북 M4 환경에서 로지텍 MX Master 3 마우스 사용 중 끊김, 스크롤 이상, 화면 확대/축소 현상을 겪고 있다면, <strong>SmartShift</strong> 기능을 비활성화하는 것이 효과적인 해결책이 될 수 있습니다. 마우스 교체를 고려하기 전에 이 방법을 시도하여 쾌적한 맥북 사용 환경을 되찾으시길 바랍니다.</p>\n\n",
        "contentSnippet": "맥북 M4와 로지텍 MX Master 3는 생산성을 위한 강력한 도구 조합이지만, 예기치 않게 마우스 끊김, 스크롤 오류, 화면 확대/축소 문제가 발생할 수 있습니다. 저 또한 이러한 문제로 불편함을 겪었고, 마우스를 교체할까 고민할 정도로 답답했습니다. 하지만 끈질긴 문제 해결 시도 끝에, MX Master 3의 특정 기능이 맥북 M4와의 호환성 문제의 원인임을 발견했습니다.\n문제의 핵심: MX Master 3 SmartShift 기능과 맥북 M4\n문제의 원인은 바로 MX Master 3의 SmartShift 기능이었습니다. 이 기능은 마우스 휠 속도에 따라 자동으로 스크롤 모드를 전환하여 편리함을 제공하지만, 맥북 M4 환경에서는 예기치 않은 작동 오류를 일으킬 수 있었습니다.\n갑작스러운 마우스 멈춤 (MacBook mouse freeze)\n불규칙한 스크롤 동작 (MX Master 3 scroll issue)\n의도치 않은 화면 확대 또는 축소 (MacBook screen zoom problem)\n해결 과정: 마우스 기능 점검과 SmartShift 비활성화\n명확한 해결책을 찾기 어려워 답답했던 저는, 최후의 수단으로 MX Master 3의 기능을 하나씩 테스트하며 원인을 좁혀나가기 시작했습니다. 그러던 중 SmartShift 기능을 끄는 것이 문제 해결의 결정적인 단계였습니다.\n\nSmartShift 비활성화 방법 (Logi Options+ 기준):\nLogi Options+ 앱을 실행합니다.\n연결된 MX Master 3를 선택합니다.\n휠 설정 메뉴로 이동합니다.\nSmartShift 옵션을 OFF로 설정합니다.\n이 간단한 조치만으로 맥북 M4에서 MX Master 3 마우스 끊김, 스크롤 오류, 화면 확대/축소 문제가 깔끔하게 해결되었습니다.\n맥북 M4 마우스 끊김 예방을 위한 추가 팁\nLogi Options+ 및 마우스 펌웨어 최신 버전 유지: 정기적인 업데이트는 호환성 문제 해결 및 성능 향상에 도움이 됩니다.\n로지텍 전용 USB 수신기 활용: 블루투스 연결 불안정 시, 동글 사용을 고려해보세요.\nmacOS 접근 권한 확인: ‘시스템 설정’ > '개인 정보 보호 및 보안’에서 Logi Options+ 권한 설정을 확인합니다.\n결론: 맥북 M4와 MX Master 3 마우스 문제 해결은 SmartShift 비활성화가 답이었다.\n맥북 M4 환경에서 로지텍 MX Master 3 마우스 사용 중 끊김, 스크롤 이상, 화면 확대/축소 현상을 겪고 있다면, SmartShift 기능을 비활성화하는 것이 효과적인 해결책이 될 수 있습니다. 마우스 교체를 고려하기 전에 이 방법을 시도하여 쾌적한 맥북 사용 환경을 되찾으시길 바랍니다.",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-8985923721643124072",
        "categories": [
          {
            "_": "macbook",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "mouse",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-04-24T09:51:00.000Z"
      },
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "한국 인기 PHP CMS 비교 분석 및 추천: 워드프레스, 그누보드, 라이믹스, Zigger 등",
        "link": "https://blog.gaerae.com/2025/04/php-cms-wordpress-gnuboard-rhymix-zigger.html",
        "pubDate": "Mon, 21 Apr 2025 08:24:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<img alt=\"\" border=\"0\" data-original-height=\"720\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg5RmEK0PgomZDlIg7ciqDOZrvQD-GDzGdSsQRC_R3DVLK-eVNgoxVpshgtJjhkgvnm3glSoMYge5TQF70lHxcLZMsKTOS0Ez-6KC4TbNaob-3p9nYUPbWM_5-HZiVfk04BtDsqhBA5XtKyjvT3azxjIVvBjkkll2-Sn8R-0SdGVZqK5JwuhMjBmANyy5U/s1600/%E1%84%92%E1%85%A1%E1%86%AB%E1%84%80%E1%85%AE%E1%86%A8%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%80%E1%85%B5PHP-CMS-%E1%84%87%E1%85%B5%E1%84%80%E1%85%AD%E1%84%87%E1%85%AE%E1%86%AB%E1%84%89%E1%85%A5%E1%86%A8%E1%84%86%E1%85%B5%E1%86%BE%E1%84%8E%E1%85%AE%E1%84%8E%E1%85%A5%E1%86%AB.png\" />\n<p>웹사이트를 만들고 싶으신가요? 블로그, 커뮤니티, 기업 홈페이지 등 어떤 형태든 콘텐츠 관리 시스템(CMS)을 사용하면 훨씬 수월하게 제작하고 운영할 수 있습니다. 특히 전 세계 웹사이트의 상당수가 PHP 언어를 기반으로 만들어졌기에, PHP 기반 CMS는 여전히 강력하고 인기 있는 선택지입니다.</p>\n<p>한국에서는 국내 환경에 특화된 CMS부터 세계적으로 유명한 CMS까지 다양한 PHP 기반 도구들이 사용되고 있습니다. 하지만 각 CMS는 저마다의 특징과 장단점을 가지고 있어, 내 프로젝트의 목적과 규모, 개발 지식 수준, 그리고 <strong>한국어 지원</strong> 수준에 맞는 도구를 선택하는 것이 중요합니다.</p>\n<p>이 글에서는 한국에서 개발되었거나 인기를 얻고 있는 주요 PHP 기반 CMS들을 비교 분석하여 여러분의 현명한 선택을 돕고자 합니다. 각 CMS의 공식 사이트, 오픈소스 여부, <strong>개발팀 및 한국어 지원 현황</strong>, 커뮤니티 성숙도, 그리고 가장 중요한 장단점을 꼼꼼히 살펴보겠습니다.</p>\n<h2>주요 PHP CMS 도구 비교표 (2025년 기준)</h2>\n<p>먼저 각 CMS의 핵심 정보를 한눈에 비교할 수 있도록 표로 정리했습니다.</p>\n<table>\n<thead>\n<tr>\n<th><strong>도구명</strong></th>\n<th><strong>공식 사이트</strong></th>\n<th><strong>개발팀 및 한국어 지원</strong></th>\n<th><strong>오픈소스 여부</strong></th>\n<th><strong>소스 저장소</strong></th>\n<th><strong>커뮤니티 활동 및 성숙도</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>워드프레스</strong></td>\n<td><a href=\"https://wordpress.org/\">wordpress.org</a></td>\n<td>WordPress 재단 (미국) / <strong>매우 우수</strong> (공식 지원)</td>\n<td>Yes (GPLv2)</td>\n<td>GitHub (WordPress)</td>\n<td>세계 최대 규모 커뮤니티, 활발한 한글 포럼, 연 단위 메이저 업데이트 (현재 6.x 버전대)</td>\n</tr>\n<tr>\n<td><strong>그누보드</strong></td>\n<td><a href=\"http://sir.kr/\">sir.kr</a></td>\n<td>SIR SOFT (국내) / <strong>네이티브 지원</strong></td>\n<td>Yes (LGPL 2.1)</td>\n<td>GitHub (gnuboard5)</td>\n<td>공식 포럼(SIR) 매우 활발, 지속적 업데이트 (최신 버전 꾸준히 릴리스)</td>\n</tr>\n<tr>\n<td><strong>라이믹스</strong></td>\n<td><a href=\"https://rhymix.org/\">rhymix.org</a></td>\n<td>XE 포크 커뮤니티 (국내) / <strong>네이티브 지원</strong></td>\n<td>Yes (GPLv2)</td>\n<td>GitHub (rhymix/rhymix)</td>\n<td>공식 포럼 및 XETOWN 커뮤니티 활발, 2.x 버전 꾸준히 배포 중</td>\n</tr>\n<tr>\n<td><strong>Zigger</strong></td>\n<td><a href=\"https://www.zigger.net/\">zigger.net</a></td>\n<td>개발자 커뮤니티 (국내) / <strong>네이티브 지원</strong></td>\n<td>Yes (LGPL 2.1)</td>\n<td>GitHub (ziggerFramework)</td>\n<td>공식 포럼 운영, 2024년 말까지 활발히 업데이트 (2025년 지속 여부 확인 필요)</td>\n</tr>\n<tr>\n<td><strong>WinterCMS</strong></td>\n<td><a href=\"https://wintercms.com/\">wintercms.com</a></td>\n<td>국제 커뮤니티 / <strong>제한적 지원</strong> (UI 번역 가능)</td>\n<td>Yes (MIT)</td>\n<td>GitHub (wintercms)</td>\n<td>Discord 중심 커뮤니티 활발, 정기 업데이트 (최신 Laravel LTS 지원 목표)</td>\n</tr>\n<tr>\n<td><strong>TypiCMS</strong></td>\n<td><a href=\"https://typicms.org/\">typicms.org</a></td>\n<td>국제 개발팀 / <strong>제한적 지원</strong> (다국어 기능 내장)</td>\n<td>Yes (MIT)</td>\n<td>GitHub (TypiCMS/Base)</td>\n<td>GitHub 통해 개발 활발, 소규모 개발자 커뮤니티</td>\n</tr>\n<tr>\n<td><strong>Statamic</strong></td>\n<td><a href=\"https://statamic.com/\">statamic.com</a></td>\n<td>Statamic 팀 (미국) / <strong>제한적 지원</strong> (UI 번역 가능)</td>\n<td>Yes* (제한 있음)</td>\n<td>GitHub (statamic/cms)</td>\n<td>Discord 커뮤니티 활발, 유료 Pro 지원, 현재 v5 버전대 운영</td>\n</tr>\n</tbody>\n</table>\n<p>*Statamic: 코어는 오픈소스이나 상업적/팀 사용 시 유료 Pro 라이선스가 필요합니다.</p>\n<hr />\n<h2>CMS 도구별 장점 및 단점 상세 분석</h2>\n<p>이제 각 CMS의 특징을 좀 더 자세히 살펴보겠습니다.</p>\n<h3>1. 워드프레스 (WordPress)</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 전 세계적으로 가장 많이 사용되는 압도적인 생태계를 갖춘 PHP CMS의 제왕. (<strong>한국어 지원 매우 우수</strong>)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>압도적인 생태계:</strong> 수만 개의 테마와 플러그인을 통해 상상하는 거의 모든 기능을 구현할 수 있습니다. (블로그, 쇼핑몰, 커뮤니티 등)</li>\n<li><strong>높은 범용성 및 접근성:</strong> 초보자부터 전문가까지 누구나 쉽게 설치하고 사용할 수 있으며, 관련 자료와 커뮤니티 지원이 매우 풍부합니다.</li>\n<li><strong>우수한 한국어 지원:</strong> <strong>공식 한국어 버전</strong>이 제공되며, 관리자 화면, 테마, 플러그인 등에서 한국어 지원이 매우 잘 되어 있습니다. 활발한 <strong>한국어 커뮤니티와 문서</strong>도 큰 장점입니다.</li>\n<li><strong>쉬운 콘텐츠 관리:</strong> 직관적인 관리자 화면과 강력한 편집기는 콘텐츠 생성 및 관리에 최적화되어 있습니다.</li>\n<li><strong>완전 무료 오픈소스 (GPL):</strong> 라이선스 걱정 없이 자유롭게 사용하고 수정할 수 있습니다.</li>\n<li><strong>지속적인 업데이트:</strong> 핵심 개발팀과 전 세계 커뮤니티에 의해 꾸준히 업데이트되고 발전합니다. (현재 6.x 버전대)</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>성능 및 보안 이슈:</strong> 많은 플러그인 사용 시 사이트 속도가 느려질 수 있으며, 인기가 많은 만큼 해킹 공격의 주 대상이 되므로 보안 관리에 신경 써야 합니다.</li>\n<li><strong>플러그인 의존성 및 충돌:</strong> 원하는 기능을 구현하기 위해 플러그인에 크게 의존하게 되며, 플러그인 간 충돌이나 호환성 문제가 발생할 수 있습니다.</li>\n<li><strong>복잡한 코드 구조:</strong> 오래된 역사만큼 코드 구조가 현대적이지 않아 개발자가 깊이 있는 커스터마이징을 할 때 어려움을 느낄 수 있습니다.</li>\n<li><strong>국내 특화 기능 부족:</strong> 한국만의 특수한 결제 시스템 연동이나 본인인증 등은 별도 플러그인 개발이나 유료 솔루션이 필요할 수 있습니다. (단, 관련 플러그인이 다수 존재)</li>\n</ul>\n</li>\n</ul>\n<h3>2. 그누보드 (Gnuboard)</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 쉽고 빠른 <strong>한국형</strong> 게시판 중심 웹사이트 구축에 최적화된 국산 CMS의 대표주자. (한국어 네이티브 지원)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>쉬운 사용법:</strong> 설치가 간편하고 직관적인 관리자 화면을 제공하여 초보자도 쉽게 접근할 수 있습니다. (모든 인터페이스 한국어 기본)</li>\n<li><strong>핵심 기능 내장:</strong> 게시판, 회원 관리, 쪽지, 포인트, 설문조사 등 웹사이트 운영에 필요한 필수 기능 대부분이 기본으로 포함되어 있습니다.</li>\n<li><strong>풍부한 한국어 자료:</strong> 국내 최대 규모의 커뮤니티(SIR)를 통해 수많은 스킨, 플러그인, 팁, 문제 해결 방법을 <strong>한국어</strong>로 얻을 수 있습니다.</li>\n<li><strong>자유로운 커스터마이징:</strong> LGPL 라이선스로 저작권 표기 의무가 없어 자유롭게 수정하고 활용할 수 있습니다.</li>\n<li><strong>오랜 역사와 안정성:</strong> 2003년부터 꾸준히 업데이트되며 안정성을 검증받았습니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>구조적 한계:</strong> 오래된 PHP 방식으로 개발되어 테마 변경 시 코어 파일을 직접 수정해야 하는 경우가 있어 업데이트 시 어려움이 발생할 수 있습니다.</li>\n<li><strong>보안 고려 필요:</strong> 일부 오래된 함수(extract 등) 사용으로 인해 개발자가 보안에 신경 써야 할 부분이 남아있습니다.</li>\n<li><strong>현대적 개발 패턴과 거리:</strong> 최신 PHP 프레임워크 기반이 아니므로 모던 웹 개발 트렌드와는 다소 차이가 있습니다.</li>\n<li><strong>모바일 반응형:</strong> 기본 기능 외 모바일 최적화 등은 커뮤니티 자료에 의존해야 합니다.</li>\n</ul>\n</li>\n</ul>\n<h3>3. 라이믹스 (Rhymix)</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> XpressEngine(XE)의 장점을 계승하고 현대적으로 발전시킨 강력한 <strong>국산</strong> CMS 프레임워크. (한국어 네이티브 지원)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>뛰어난 확장성:</strong> 모듈, 애드온, 위젯, 스킨 등 체계적인 구조를 통해 기능 추가 및 디자인 변경이 매우 유연합니다. XE용으로 개발된 방대한 자료를 상당 부분 활용할 수 있습니다.</li>\n<li><strong>지속적인 발전:</strong> XE의 개발 중단 이후에도 5년 이상 꾸준히 업데이트되며 PHP 최신 버전 지원, 성능 개선, 보안 강화가 이루어지고 있습니다.</li>\n<li><strong>활발한 한국어 커뮤니티:</strong> 공식 포럼과 XETOWN 등에서 사용자 간의 활발한 정보 교류 및 지원이 <strong>한국어</strong>로 이루어집니다.</li>\n<li><strong>검증된 성능:</strong> 대규모 커뮤니티 사이트 운영 사례(동시 접속자 1만 명 이상)를 통해 성능과 안정성이 입증되었습니다.</li>\n<li><strong>오픈소스 철학:</strong> GPL 라이선스로 전환하여 자유로운 사용과 기여를 장려합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>학습 곡선:</strong> XE/라이믹스 특유의 구조(모듈, 애드온, 레이아웃 등)에 대한 이해가 필요하여 초심자에게는 다소 어려울 수 있습니다.</li>\n<li><strong>높은 초기 복잡도:</strong> 다양한 기능을 제공하는 만큼 초기 설정이나 운영에 있어 그누보드보다 요구사항이 많고 복잡하게 느껴질 수 있습니다.</li>\n<li><strong>국내 중심 생태계:</strong> 글로벌 CMS에 비해 해외 자료나 사용자는 상대적으로 적습니다.</li>\n<li><strong>관리 필요성:</strong> 기능이 많고 업데이트가 잦은 편이라 꾸준한 관리가 요구됩니다.</li>\n</ul>\n</li>\n</ul>\n<h3>4. Zigger</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 반응형 웹사이트 구축에 초점을 맞춘 비교적 최신의 <strong>국산</strong> 오픈소스 CMS. (한국어 네이티브 지원)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>쉬운 반응형 웹 제작:</strong> 처음부터 반응형 웹을 염두에 두고 개발되어 모바일 친화적인 사이트를 쉽게 만들 수 있도록 지원합니다.</li>\n<li><strong>필수 기능 내장:</strong> 웹사이트 관리, 회원, 배너, 팝업, 메일 발송 등 중소규모 사이트에 필요한 기능을 기본 탑재하여 추가 개발 부담이 적습니다.</li>\n<li><strong>모듈/테마 확장성:</strong> 모듈과 테마를 통해 기능과 디자인을 확장할 수 있으며, REST API 연동, SEO 설정 등 현대적인 기능도 지원합니다.</li>\n<li><strong>국내 커뮤니티 지원:</strong> 공식 사이트 내 포럼을 통해 <strong>한국어</strong>로 Q&amp;A, 팁 공유 등 사용자 소통이 이루어지고 있습니다.</li>\n<li><strong>명확한 오픈소스 라이선스:</strong> LGPL 라이선스로 저작권 표기 의무가 없어 자유롭게 수정하고 활용할 수 있습니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>낮은 성숙도 및 불확실성:</strong> 출시된 지 오래되지 않아 검증된 사용 사례나 자료가 부족하며, 2025년 현재 업데이트 지속 여부 및 장기적인 프로젝트 안정성은 지켜볼 필요가 있습니다. (2024년 말까지는 활발했음)</li>\n<li><strong>제한적인 생태계:</strong> 서드파티 플러그인이나 테마가 매우 적어 원하는 기능이 없다면 직접 개발해야 할 가능성이 높습니다.</li>\n<li><strong>초기 버그 가능성:</strong> 신생 프로젝트인 만큼 예상치 못한 버그나 보안 취약점이 발견될 수 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h3>5. WinterCMS</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> Laravel 프레임워크 기반의 개발자 친화적인 모던 오픈소스 CMS. (한국어 지원 제한적)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>개발자 친화적:</strong> 강력한 PHP 프레임워크인 Laravel 기반으로 MVC 패턴, 깔끔한 코드 구조, Twig 템플릿 엔진 등을 제공하여 개발 생산성이 높습니다.</li>\n<li><strong>완전한 오픈소스:</strong> MIT 라이선스로 상업적 이용에도 제약 없이 자유롭게 사용할 수 있습니다.</li>\n<li><strong>플러그인 기반 확장:</strong> 필요한 기능을 플러그인 형태로 추가하여 가볍게 시작하고 확장할 수 있습니다. OctoberCMS의 기존 플러그인과 호환되는 경우가 많습니다.</li>\n<li><strong>활발한 글로벌 커뮤니티:</strong> Discord 등을 중심으로 개발자들이 적극적으로 소통하고 지원하며, 꾸준히 업데이트되고 있습니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>낮은 국내 인지도 및 한국어 지원 부족:</strong> 한국어 자료나 커뮤니티 지원이 부족하며, 관리자 인터페이스 등에서 <strong>한국어 사용이 제한적</strong>일 수 있습니다. (별도 번역 작업 필요 가능성)</li>\n<li><strong>개발 지식 요구:</strong> Laravel 및 웹 개발 지식이 어느 정도 필요하여 비개발자에게는 진입 장벽이 높습니다.</li>\n<li><strong>플러그인 생태계:</strong> 워드프레스만큼 방대한 플러그인 마켓을 기대하기는 어렵습니다.</li>\n<li><strong>비교적 짧은 역사:</strong> OctoberCMS에서 분리된 지 오래되지 않아 장기적인 프로젝트 안정성이나 시장 점유율은 지켜볼 필요가 있습니다.</li>\n</ul>\n</li>\n</ul>\n<h3>6. TypiCMS</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 다국어 지원에 특화된 Laravel 기반의 모듈형 오픈소스 CMS. (한국어 지원 제한적)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>강력한 다국어 지원:</strong> 설계 단계부터 다국어 환경을 고려하여 여러 언어로 콘텐츠를 관리하기 용이합니다. <strong>한국어</strong> 콘텐츠 관리도 가능합니다.</li>\n<li><strong>Laravel 기반의 유연성:</strong> Laravel 프레임워크 위에서 동작하므로 Laravel 개발자에게 익숙하며, 모듈 추가/개발을 통해 자유롭게 확장 가능합니다.</li>\n<li><strong>필수 모듈 기본 제공:</strong> 페이지, 뉴스, 이벤트, 메뉴, 번역 관리 등 기본적인 콘텐츠 관리 모듈이 내장되어 있습니다.</li>\n<li><strong>순수 오픈소스 (MIT):</strong> 라이선스 제약 없이 자유롭게 사용, 수정, 배포할 수 있습니다.</li>\n<li><strong>경량 및 심플함:</strong> 필요한 기능 중심으로 구성되어 비교적 가볍고 빠르게 동작합니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>높은 개발 의존도:</strong> Laravel 및 Composer 사용법 등 개발 지식이 필수적이며, 설치 및 초기 설정이 명령줄 기반이라 비개발자에게는 어렵습니다.</li>\n<li><strong>작은 커뮤니티 및 한국어 자료 부족:</strong> 사용자층이 넓지 않아 문제 해결이나 <strong>한국어</strong> 정보 획득에 어려움을 겪을 수 있습니다. 관리자 인터페이스 등의 <strong>한국어 지원이 미흡</strong>할 수 있습니다.</li>\n<li><strong>편의 기능 부족:</strong> 워드프레스처럼 풍부한 관리자 UI나 원클릭 플러그인 설치 같은 편의 기능은 부족합니다.</li>\n</ul>\n</li>\n</ul>\n<h3>7. Statamic</h3>\n<ul>\n<li>\n<p><strong>한 줄 요약:</strong> 데이터베이스 없이 파일 기반으로 콘텐츠를 관리하는 독특한 Laravel 기반 CMS. (한국어 지원 제한적)</p>\n</li>\n<li>\n<p><strong>장점:</strong></p>\n<ul>\n<li><strong>파일 기반(Flat-File):</strong> DB 대신 Markdown/YAML 파일로 콘텐츠를 관리하여 Git 등을 이용한 버전 관리 및 배포가 매우 편리합니다.</li>\n<li><strong>직관적인 관리자 화면:</strong> 콘텐츠 에디터가 사용하기 쉬운 깔끔하고 현대적인 인터페이스를 제공합니다.</li>\n<li><strong>Laravel의 강력함 활용:</strong> Laravel 기반이므로 성능, 보안, 확장성 면에서 이점을 가지며 커스터마이징이 용이합니다.</li>\n<li><strong>활발한 커뮤니티 및 마켓:</strong> Discord 커뮤니티가 활발하고, 애드온/테마 마켓플레이스가 있어 생태계가 성장하고 있습니다.</li>\n<li><strong>오픈소스 코어:</strong> 개인/소규모 프로젝트는 무료(Solo 모드)로 핵심 기능을 사용할 수 있습니다.</li>\n</ul>\n</li>\n<li>\n<p><strong>단점:</strong></p>\n<ul>\n<li><strong>유료 라이선스 정책:</strong> 상업적 목적이나 팀 단위 사용(Pro 모드), 특정 고급 기능은 유료 라이선스를 구매해야 합니다. 완전 무료 CMS는 아닙니다.</li>\n<li><strong>대규모 콘텐츠 관리:</strong> 콘텐츠 양이 극도로 많아지면 파일 기반 특성상 성능 저하나 관리 복잡성이 발생할 수 있습니다.</li>\n<li><strong>낯선 개념:</strong> DB를 사용하지 않는 방식이 기존 CMS 사용자에게는 생소할 수 있습니다.</li>\n<li><strong>제한적인 한국어 지원:</strong> <strong>한국어 자료나 국내 사용 사례가 드물고</strong>, 관리자 인터페이스 등의 <strong>한국어 지원이 미흡</strong>할 수 있습니다. (별도 번역 작업 필요 가능성)</li>\n</ul>\n</li>\n</ul>\n<hr />\n<h2>결론: 어떤 CMS를 선택해야 할까?</h2>\n<p>지금까지 한국에서 인기 있거나 주목할 만한 PHP 기반 CMS들을 살펴보았습니다. 각 CMS는 저마다의 철학과 강점을 가지고 있습니다. 어떤 CMS가 '최고'라고 단정하기보다는, 여러분의 상황에 '가장 적합한' 도구를 찾는 것이 중요합니다. 특히 <strong>한국어 사용자 환경</strong>을 중요하게 생각한다면 다음 기준을 고려해볼 수 있습니다.</p>\n<ul>\n<li>\n<p><strong>한국어 네이티브 지원 및 국내 커뮤니티 중심:</strong> <strong>그누보드</strong>, <strong>라이믹스</strong>, <strong>Zigger</strong>는 개발 단계부터 한국 환경을 고려했고, 풍부한 한국어 자료와 커뮤니티 지원을 받을 수 있습니다. 특히 그누보드와 라이믹스는 오랜 기간 검증된 선택지입니다. Zigger는 최신 기술을 반영하려 노력하지만, 장기적인 안정성은 더 지켜봐야 합니다.</p>\n</li>\n<li>\n<p><strong>개발자 중심 &amp; 제한적 한국어 지원:</strong> <strong>WinterCMS</strong>, <strong>TypiCMS</strong>, <strong>Statamic</strong>은 Laravel 기반으로 모던한 개발 환경을 제공하지만, 한국어 문서나 커뮤니티 지원은 부족합니다. 관리자 인터페이스 등에서 직접 번역하거나 영어 환경에 익숙해야 할 수 있습니다.</p>\n</li>\n<li>\n<p><strong>글로벌 표준 &amp; 매우 우수한 한국어 지원:</strong> <strong>워드프레스</strong>는 전 세계적인 표준 CMS이면서도 공식 한국어 지원이 매우 뛰어나고 국내 사용자 및 자료도 방대하여, 언어 장벽 없이 강력한 기능을 활용하고 싶을 때 최고의 선택지가 될 수 있습니다.</p>\n</li>\n</ul>\n<p>궁극적으로 여러분의 <strong>프로젝트 목표(블로그, 쇼핑몰, 커뮤니티 등), 필요한 특정 기능, 예상되는 트래픽 규모, 가용 예산, 직접 개발에 투입할 수 있는 시간과 기술 수준, 그리고 선호하는 커뮤니티 지원 방식 및 한국어 환경</strong> 등을 종합적으로 고려하여 신중하게 결정하시기 바랍니다. 현명한 CMS 선택이 성공적인 웹사이트 구축의 튼튼한 기반이 될 것입니다.</p>\n<hr />\n<h2>참고 자료</h2>\n<ul>\n<li>워드프레스 공식 사이트 (영문): <a href=\"https://wordpress.org/\">https://wordpress.org</a></li>\n<li>그누보드 공식 사이트: <a href=\"http://sir.kr/\">http://sir.kr</a></li>\n<li>그누보드 - 위키백과: <a href=\"https://ko.wikipedia.org/wiki/%EA%B7%B8%EB%88%84%EB%B3%B4%EB%93%9C\">https://ko.wikipedia.org/wiki/그누보드</a></li>\n<li>그누보드 GitHub: <a href=\"https://github.com/gnuboard\">https://github.com/gnuboard</a></li>\n<li>라이믹스 공식 사이트: <a href=\"https://rhymix.org/\">https://rhymix.org</a></li>\n<li>라이믹스 - 위키백과: <a href=\"https://ko.wikipedia.org/wiki/Rhymix\">https://ko.wikipedia.org/wiki/Rhymix</a></li>\n<li>라이믹스 GitHub: <a href=\"https://github.com/rhymix/rhymix\">https://github.com/rhymix/rhymix</a></li>\n<li>Zigger 공식 사이트: <a href=\"https://www.zigger.net/\">https://www.zigger.net</a></li>\n<li>Zigger GitHub: <a href=\"https://github.com/ziggerFramework/zigger-source-2.4\">https://github.com/ziggerFramework/zigger-source-2.4</a></li>\n<li>WinterCMS 공식 사이트: <a href=\"https://wintercms.com/\">https://wintercms.com</a></li>\n<li>WinterCMS GitHub: <a href=\"https://github.com/wintercms/winter\">https://github.com/wintercms/winter</a></li>\n<li>TypiCMS GitHub: <a href=\"https://github.com/TypiCMS/Base\">https://github.com/TypiCMS/Base</a></li>\n<li>Statamic 공식 사이트: <a href=\"https://statamic.com/\">https://statamic.com</a></li>\n<li>Statamic GitHub: <a href=\"https://github.com/statamic/cms\">https://github.com/statamic/cms</a></li>\n<li>CMS 시장 점유율 통계 (W3Techs): <a href=\"http://w3techs.com/technologies/overview/content_management/all\">http://w3techs.com/technologies/overview/content_management/all</a></li>\n</ul>",
        "contentSnippet": "웹사이트를 만들고 싶으신가요? 블로그, 커뮤니티, 기업 홈페이지 등 어떤 형태든 콘텐츠 관리 시스템(CMS)을 사용하면 훨씬 수월하게 제작하고 운영할 수 있습니다. 특히 전 세계 웹사이트의 상당수가 PHP 언어를 기반으로 만들어졌기에, PHP 기반 CMS는 여전히 강력하고 인기 있는 선택지입니다.\n한국에서는 국내 환경에 특화된 CMS부터 세계적으로 유명한 CMS까지 다양한 PHP 기반 도구들이 사용되고 있습니다. 하지만 각 CMS는 저마다의 특징과 장단점을 가지고 있어, 내 프로젝트의 목적과 규모, 개발 지식 수준, 그리고 한국어 지원 수준에 맞는 도구를 선택하는 것이 중요합니다.\n이 글에서는 한국에서 개발되었거나 인기를 얻고 있는 주요 PHP 기반 CMS들을 비교 분석하여 여러분의 현명한 선택을 돕고자 합니다. 각 CMS의 공식 사이트, 오픈소스 여부, 개발팀 및 한국어 지원 현황, 커뮤니티 성숙도, 그리고 가장 중요한 장단점을 꼼꼼히 살펴보겠습니다.\n주요 PHP CMS 도구 비교표 (2025년 기준)\n먼저 각 CMS의 핵심 정보를 한눈에 비교할 수 있도록 표로 정리했습니다.\n도구명\n공식 사이트\n개발팀 및 한국어 지원\n오픈소스 여부\n소스 저장소\n커뮤니티 활동 및 성숙도\n\n\n\n\n워드프레스\nwordpress.org\nWordPress 재단 (미국) / 매우 우수 (공식 지원)\nYes (GPLv2)\nGitHub (WordPress)\n세계 최대 규모 커뮤니티, 활발한 한글 포럼, 연 단위 메이저 업데이트 (현재 6.x 버전대)\n\n\n그누보드\nsir.kr\nSIR SOFT (국내) / 네이티브 지원\nYes (LGPL 2.1)\nGitHub (gnuboard5)\n공식 포럼(SIR) 매우 활발, 지속적 업데이트 (최신 버전 꾸준히 릴리스)\n\n\n라이믹스\nrhymix.org\nXE 포크 커뮤니티 (국내) / 네이티브 지원\nYes (GPLv2)\nGitHub (rhymix/rhymix)\n공식 포럼 및 XETOWN 커뮤니티 활발, 2.x 버전 꾸준히 배포 중\n\n\nZigger\nzigger.net\n개발자 커뮤니티 (국내) / 네이티브 지원\nYes (LGPL 2.1)\nGitHub (ziggerFramework)\n공식 포럼 운영, 2024년 말까지 활발히 업데이트 (2025년 지속 여부 확인 필요)\n\n\nWinterCMS\nwintercms.com\n국제 커뮤니티 / 제한적 지원 (UI 번역 가능)\nYes (MIT)\nGitHub (wintercms)\nDiscord 중심 커뮤니티 활발, 정기 업데이트 (최신 Laravel LTS 지원 목표)\n\n\nTypiCMS\ntypicms.org\n국제 개발팀 / 제한적 지원 (다국어 기능 내장)\nYes (MIT)\nGitHub (TypiCMS/Base)\nGitHub 통해 개발 활발, 소규모 개발자 커뮤니티\n\n\nStatamic\nstatamic.com\nStatamic 팀 (미국) / 제한적 지원 (UI 번역 가능)\nYes* (제한 있음)\nGitHub (statamic/cms)\nDiscord 커뮤니티 활발, 유료 Pro 지원, 현재 v5 버전대 운영\n\n\n\n*Statamic: 코어는 오픈소스이나 상업적/팀 사용 시 유료 Pro 라이선스가 필요합니다.\nCMS 도구별 장점 및 단점 상세 분석\n이제 각 CMS의 특징을 좀 더 자세히 살펴보겠습니다.\n1. 워드프레스 (WordPress)\n한 줄 요약: 전 세계적으로 가장 많이 사용되는 압도적인 생태계를 갖춘 PHP CMS의 제왕. (한국어 지원 매우 우수)\n장점:\n압도적인 생태계: 수만 개의 테마와 플러그인을 통해 상상하는 거의 모든 기능을 구현할 수 있습니다. (블로그, 쇼핑몰, 커뮤니티 등)\n높은 범용성 및 접근성: 초보자부터 전문가까지 누구나 쉽게 설치하고 사용할 수 있으며, 관련 자료와 커뮤니티 지원이 매우 풍부합니다.\n우수한 한국어 지원: 공식 한국어 버전이 제공되며, 관리자 화면, 테마, 플러그인 등에서 한국어 지원이 매우 잘 되어 있습니다. 활발한 한국어 커뮤니티와 문서도 큰 장점입니다.\n쉬운 콘텐츠 관리: 직관적인 관리자 화면과 강력한 편집기는 콘텐츠 생성 및 관리에 최적화되어 있습니다.\n완전 무료 오픈소스 (GPL): 라이선스 걱정 없이 자유롭게 사용하고 수정할 수 있습니다.\n지속적인 업데이트: 핵심 개발팀과 전 세계 커뮤니티에 의해 꾸준히 업데이트되고 발전합니다. (현재 6.x 버전대)\n단점:\n성능 및 보안 이슈: 많은 플러그인 사용 시 사이트 속도가 느려질 수 있으며, 인기가 많은 만큼 해킹 공격의 주 대상이 되므로 보안 관리에 신경 써야 합니다.\n플러그인 의존성 및 충돌: 원하는 기능을 구현하기 위해 플러그인에 크게 의존하게 되며, 플러그인 간 충돌이나 호환성 문제가 발생할 수 있습니다.\n복잡한 코드 구조: 오래된 역사만큼 코드 구조가 현대적이지 않아 개발자가 깊이 있는 커스터마이징을 할 때 어려움을 느낄 수 있습니다.\n국내 특화 기능 부족: 한국만의 특수한 결제 시스템 연동이나 본인인증 등은 별도 플러그인 개발이나 유료 솔루션이 필요할 수 있습니다. (단, 관련 플러그인이 다수 존재)\n2. 그누보드 (Gnuboard)\n한 줄 요약: 쉽고 빠른 한국형 게시판 중심 웹사이트 구축에 최적화된 국산 CMS의 대표주자. (한국어 네이티브 지원)\n장점:\n쉬운 사용법: 설치가 간편하고 직관적인 관리자 화면을 제공하여 초보자도 쉽게 접근할 수 있습니다. (모든 인터페이스 한국어 기본)\n핵심 기능 내장: 게시판, 회원 관리, 쪽지, 포인트, 설문조사 등 웹사이트 운영에 필요한 필수 기능 대부분이 기본으로 포함되어 있습니다.\n풍부한 한국어 자료: 국내 최대 규모의 커뮤니티(SIR)를 통해 수많은 스킨, 플러그인, 팁, 문제 해결 방법을 한국어로 얻을 수 있습니다.\n자유로운 커스터마이징: LGPL 라이선스로 저작권 표기 의무가 없어 자유롭게 수정하고 활용할 수 있습니다.\n오랜 역사와 안정성: 2003년부터 꾸준히 업데이트되며 안정성을 검증받았습니다.\n단점:\n구조적 한계: 오래된 PHP 방식으로 개발되어 테마 변경 시 코어 파일을 직접 수정해야 하는 경우가 있어 업데이트 시 어려움이 발생할 수 있습니다.\n보안 고려 필요: 일부 오래된 함수(extract 등) 사용으로 인해 개발자가 보안에 신경 써야 할 부분이 남아있습니다.\n현대적 개발 패턴과 거리: 최신 PHP 프레임워크 기반이 아니므로 모던 웹 개발 트렌드와는 다소 차이가 있습니다.\n모바일 반응형: 기본 기능 외 모바일 최적화 등은 커뮤니티 자료에 의존해야 합니다.\n3. 라이믹스 (Rhymix)\n한 줄 요약: XpressEngine(XE)의 장점을 계승하고 현대적으로 발전시킨 강력한 국산 CMS 프레임워크. (한국어 네이티브 지원)\n장점:\n뛰어난 확장성: 모듈, 애드온, 위젯, 스킨 등 체계적인 구조를 통해 기능 추가 및 디자인 변경이 매우 유연합니다. XE용으로 개발된 방대한 자료를 상당 부분 활용할 수 있습니다.\n지속적인 발전: XE의 개발 중단 이후에도 5년 이상 꾸준히 업데이트되며 PHP 최신 버전 지원, 성능 개선, 보안 강화가 이루어지고 있습니다.\n활발한 한국어 커뮤니티: 공식 포럼과 XETOWN 등에서 사용자 간의 활발한 정보 교류 및 지원이 한국어로 이루어집니다.\n검증된 성능: 대규모 커뮤니티 사이트 운영 사례(동시 접속자 1만 명 이상)를 통해 성능과 안정성이 입증되었습니다.\n오픈소스 철학: GPL 라이선스로 전환하여 자유로운 사용과 기여를 장려합니다.\n단점:\n학습 곡선: XE/라이믹스 특유의 구조(모듈, 애드온, 레이아웃 등)에 대한 이해가 필요하여 초심자에게는 다소 어려울 수 있습니다.\n높은 초기 복잡도: 다양한 기능을 제공하는 만큼 초기 설정이나 운영에 있어 그누보드보다 요구사항이 많고 복잡하게 느껴질 수 있습니다.\n국내 중심 생태계: 글로벌 CMS에 비해 해외 자료나 사용자는 상대적으로 적습니다.\n관리 필요성: 기능이 많고 업데이트가 잦은 편이라 꾸준한 관리가 요구됩니다.\n4. Zigger\n한 줄 요약: 반응형 웹사이트 구축에 초점을 맞춘 비교적 최신의 국산 오픈소스 CMS. (한국어 네이티브 지원)\n장점:\n쉬운 반응형 웹 제작: 처음부터 반응형 웹을 염두에 두고 개발되어 모바일 친화적인 사이트를 쉽게 만들 수 있도록 지원합니다.\n필수 기능 내장: 웹사이트 관리, 회원, 배너, 팝업, 메일 발송 등 중소규모 사이트에 필요한 기능을 기본 탑재하여 추가 개발 부담이 적습니다.\n모듈/테마 확장성: 모듈과 테마를 통해 기능과 디자인을 확장할 수 있으며, REST API 연동, SEO 설정 등 현대적인 기능도 지원합니다.\n국내 커뮤니티 지원: 공식 사이트 내 포럼을 통해 한국어로 Q&A, 팁 공유 등 사용자 소통이 이루어지고 있습니다.\n명확한 오픈소스 라이선스: LGPL 라이선스로 저작권 표기 의무가 없어 자유롭게 수정하고 활용할 수 있습니다.\n단점:\n낮은 성숙도 및 불확실성: 출시된 지 오래되지 않아 검증된 사용 사례나 자료가 부족하며, 2025년 현재 업데이트 지속 여부 및 장기적인 프로젝트 안정성은 지켜볼 필요가 있습니다. (2024년 말까지는 활발했음)\n제한적인 생태계: 서드파티 플러그인이나 테마가 매우 적어 원하는 기능이 없다면 직접 개발해야 할 가능성이 높습니다.\n초기 버그 가능성: 신생 프로젝트인 만큼 예상치 못한 버그나 보안 취약점이 발견될 수 있습니다.\n5. WinterCMS\n한 줄 요약: Laravel 프레임워크 기반의 개발자 친화적인 모던 오픈소스 CMS. (한국어 지원 제한적)\n장점:\n개발자 친화적: 강력한 PHP 프레임워크인 Laravel 기반으로 MVC 패턴, 깔끔한 코드 구조, Twig 템플릿 엔진 등을 제공하여 개발 생산성이 높습니다.\n완전한 오픈소스: MIT 라이선스로 상업적 이용에도 제약 없이 자유롭게 사용할 수 있습니다.\n플러그인 기반 확장: 필요한 기능을 플러그인 형태로 추가하여 가볍게 시작하고 확장할 수 있습니다. OctoberCMS의 기존 플러그인과 호환되는 경우가 많습니다.\n활발한 글로벌 커뮤니티: Discord 등을 중심으로 개발자들이 적극적으로 소통하고 지원하며, 꾸준히 업데이트되고 있습니다.\n단점:\n낮은 국내 인지도 및 한국어 지원 부족: 한국어 자료나 커뮤니티 지원이 부족하며, 관리자 인터페이스 등에서 한국어 사용이 제한적일 수 있습니다. (별도 번역 작업 필요 가능성)\n개발 지식 요구: Laravel 및 웹 개발 지식이 어느 정도 필요하여 비개발자에게는 진입 장벽이 높습니다.\n플러그인 생태계: 워드프레스만큼 방대한 플러그인 마켓을 기대하기는 어렵습니다.\n비교적 짧은 역사: OctoberCMS에서 분리된 지 오래되지 않아 장기적인 프로젝트 안정성이나 시장 점유율은 지켜볼 필요가 있습니다.\n6. TypiCMS\n한 줄 요약: 다국어 지원에 특화된 Laravel 기반의 모듈형 오픈소스 CMS. (한국어 지원 제한적)\n장점:\n강력한 다국어 지원: 설계 단계부터 다국어 환경을 고려하여 여러 언어로 콘텐츠를 관리하기 용이합니다. 한국어 콘텐츠 관리도 가능합니다.\nLaravel 기반의 유연성: Laravel 프레임워크 위에서 동작하므로 Laravel 개발자에게 익숙하며, 모듈 추가/개발을 통해 자유롭게 확장 가능합니다.\n필수 모듈 기본 제공: 페이지, 뉴스, 이벤트, 메뉴, 번역 관리 등 기본적인 콘텐츠 관리 모듈이 내장되어 있습니다.\n순수 오픈소스 (MIT): 라이선스 제약 없이 자유롭게 사용, 수정, 배포할 수 있습니다.\n경량 및 심플함: 필요한 기능 중심으로 구성되어 비교적 가볍고 빠르게 동작합니다.\n단점:\n높은 개발 의존도: Laravel 및 Composer 사용법 등 개발 지식이 필수적이며, 설치 및 초기 설정이 명령줄 기반이라 비개발자에게는 어렵습니다.\n작은 커뮤니티 및 한국어 자료 부족: 사용자층이 넓지 않아 문제 해결이나 한국어 정보 획득에 어려움을 겪을 수 있습니다. 관리자 인터페이스 등의 한국어 지원이 미흡할 수 있습니다.\n편의 기능 부족: 워드프레스처럼 풍부한 관리자 UI나 원클릭 플러그인 설치 같은 편의 기능은 부족합니다.\n7. Statamic\n한 줄 요약: 데이터베이스 없이 파일 기반으로 콘텐츠를 관리하는 독특한 Laravel 기반 CMS. (한국어 지원 제한적)\n장점:\n파일 기반(Flat-File): DB 대신 Markdown/YAML 파일로 콘텐츠를 관리하여 Git 등을 이용한 버전 관리 및 배포가 매우 편리합니다.\n직관적인 관리자 화면: 콘텐츠 에디터가 사용하기 쉬운 깔끔하고 현대적인 인터페이스를 제공합니다.\nLaravel의 강력함 활용: Laravel 기반이므로 성능, 보안, 확장성 면에서 이점을 가지며 커스터마이징이 용이합니다.\n활발한 커뮤니티 및 마켓: Discord 커뮤니티가 활발하고, 애드온/테마 마켓플레이스가 있어 생태계가 성장하고 있습니다.\n오픈소스 코어: 개인/소규모 프로젝트는 무료(Solo 모드)로 핵심 기능을 사용할 수 있습니다.\n단점:\n유료 라이선스 정책: 상업적 목적이나 팀 단위 사용(Pro 모드), 특정 고급 기능은 유료 라이선스를 구매해야 합니다. 완전 무료 CMS는 아닙니다.\n대규모 콘텐츠 관리: 콘텐츠 양이 극도로 많아지면 파일 기반 특성상 성능 저하나 관리 복잡성이 발생할 수 있습니다.\n낯선 개념: DB를 사용하지 않는 방식이 기존 CMS 사용자에게는 생소할 수 있습니다.\n제한적인 한국어 지원: 한국어 자료나 국내 사용 사례가 드물고, 관리자 인터페이스 등의 한국어 지원이 미흡할 수 있습니다. (별도 번역 작업 필요 가능성)\n결론: 어떤 CMS를 선택해야 할까?\n지금까지 한국에서 인기 있거나 주목할 만한 PHP 기반 CMS들을 살펴보았습니다. 각 CMS는 저마다의 철학과 강점을 가지고 있습니다. 어떤 CMS가 '최고'라고 단정하기보다는, 여러분의 상황에 '가장 적합한' 도구를 찾는 것이 중요합니다. 특히 한국어 사용자 환경을 중요하게 생각한다면 다음 기준을 고려해볼 수 있습니다.\n한국어 네이티브 지원 및 국내 커뮤니티 중심: 그누보드, 라이믹스, Zigger는 개발 단계부터 한국 환경을 고려했고, 풍부한 한국어 자료와 커뮤니티 지원을 받을 수 있습니다. 특히 그누보드와 라이믹스는 오랜 기간 검증된 선택지입니다. Zigger는 최신 기술을 반영하려 노력하지만, 장기적인 안정성은 더 지켜봐야 합니다.\n개발자 중심 & 제한적 한국어 지원: WinterCMS, TypiCMS, Statamic은 Laravel 기반으로 모던한 개발 환경을 제공하지만, 한국어 문서나 커뮤니티 지원은 부족합니다. 관리자 인터페이스 등에서 직접 번역하거나 영어 환경에 익숙해야 할 수 있습니다.\n글로벌 표준 & 매우 우수한 한국어 지원: 워드프레스는 전 세계적인 표준 CMS이면서도 공식 한국어 지원이 매우 뛰어나고 국내 사용자 및 자료도 방대하여, 언어 장벽 없이 강력한 기능을 활용하고 싶을 때 최고의 선택지가 될 수 있습니다.\n궁극적으로 여러분의 프로젝트 목표(블로그, 쇼핑몰, 커뮤니티 등), 필요한 특정 기능, 예상되는 트래픽 규모, 가용 예산, 직접 개발에 투입할 수 있는 시간과 기술 수준, 그리고 선호하는 커뮤니티 지원 방식 및 한국어 환경 등을 종합적으로 고려하여 신중하게 결정하시기 바랍니다. 현명한 CMS 선택이 성공적인 웹사이트 구축의 튼튼한 기반이 될 것입니다.\n참고 자료\n워드프레스 공식 사이트 (영문): https://wordpress.org\n그누보드 공식 사이트: http://sir.kr\n그누보드 - 위키백과: https://ko.wikipedia.org/wiki/그누보드\n그누보드 GitHub: https://github.com/gnuboard\n라이믹스 공식 사이트: https://rhymix.org\n라이믹스 - 위키백과: https://ko.wikipedia.org/wiki/Rhymix\n라이믹스 GitHub: https://github.com/rhymix/rhymix\nZigger 공식 사이트: https://www.zigger.net\nZigger GitHub: https://github.com/ziggerFramework/zigger-source-2.4\nWinterCMS 공식 사이트: https://wintercms.com\nWinterCMS GitHub: https://github.com/wintercms/winter\nTypiCMS GitHub: https://github.com/TypiCMS/Base\nStatamic 공식 사이트: https://statamic.com\nStatamic GitHub: https://github.com/statamic/cms\nCMS 시장 점유율 통계 (W3Techs): http://w3techs.com/technologies/overview/content_management/all",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-3742281452563046064",
        "categories": [
          {
            "_": "app",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "cms",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-04-21T08:24:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "2025-04 현재 플라자 합의 비슷한 일이 일어나고 있다.",
        "link": "http://serverdown.tistory.com/1286",
        "pubDate": "Fri, 25 Apr 2025 22:14:35 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1286#entry1286comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"301\" data-origin-height=\"167\"><span data-url=\"https://blog.kakaocdn.net/dn/CdIT8/btsNAhmMrSp/OuIQkXKAKZLv4i8yzcZ4Bk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/CdIT8/btsNAhmMrSp/OuIQkXKAKZLv4i8yzcZ4Bk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/CdIT8/btsNAhmMrSp/OuIQkXKAKZLv4i8yzcZ4Bk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FCdIT8%2FbtsNAhmMrSp%2FOuIQkXKAKZLv4i8yzcZ4Bk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"301\" height=\"167\" data-origin-width=\"301\" data-origin-height=\"167\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=L7W702-Z8dE\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=L7W702-Z8dE</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=L7W702-Z8dE\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/czEE8x/hyYH6mOqL8/9GBkJO66H5tuXxZrKQ0drK/img.jpg?width=1280&amp;height=720&amp;face=250_110_1108_276,https://scrap.kakaocdn.net/dn/P8x1D/hyYFBAZlIP/jpgC4w5t4NKu26dcpX5XkK/img.jpg?width=1280&amp;height=720&amp;face=250_110_1108_276\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"'관세 폭탄' 트럼프라서가 아니다...미국의 조정 사이클 [월간 오건영 1부]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/L7W702-Z8dE\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">플라자 합의는 1985년 9월 22일에 있었습니다.</p>\n<p data-ke-size=\"size16\">물론 이 당시에는 플라자 합의의 내용이 알려지지 않았고 그냥 회의했다 정도만 알려졌습니다.</p>\n<p data-ke-size=\"size16\">1년정도 지나 분석해보니 일본의 환율이 어마어마하게 내려가게 되었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">이번에도</h2>\n<p data-ke-size=\"size16\">현재도 미국은 관세를 통한 엄청난 영향을 보여줬었고 90일 연기한 상태입니다.</p>\n<p data-ke-size=\"size16\">힘을 보여주고 이제 합의 하자는 것이죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미국의 단기채권을 장기 채권으로 전환이 시급한 문제라 이것을 진행하는게 아닌가 하는 추측을 영상에서 합니다.</p>\n<p data-ke-size=\"size16\">예를들어 한국이가서 우리가 채권 사줄태니 중국의 2차전지를 막아달라고 한다면 한국이 2차전지 시장을 크게 먹을 수 있을 것입니다.</p>\n<p data-ke-size=\"size16\">반대로 중국이 와서 한국보다 더 많은 국채를 해결해준다면 미국은 중국의 베터리도 받아들일 수 있을 것입니다.</p>\n<p data-ke-size=\"size16\">물론 시진핑은 그러지 않겠지만 차기 세력은 그런 결정을 할 수도 있겠죠</p>\n<p data-ke-size=\"size16\">현재도 시진핑은 우리는 협상같은거 안한도고 하지만<br />트럼프는 현재 협의 중이라고 밝힌 상태입니다.</p>\n<p data-ke-size=\"size16\">바이든이 발행한 미국의 단기채권을 장기채권으로 돌려면 미국은 부채의 짐에서 탈출이 가능합니다.</p>\n<p data-ke-size=\"size16\">영상에서는 이 문제가 해결될 수도 있지만<br />반 미국 세력이 생겨나 그들만의 단톡방을 파게될 가능성도 있다고 봅니다.</p>\n<p data-ke-size=\"size16\">항상 미국이 이긴다고 봐서는 안되고 다양한 자산군에 분산해 두는게 중요할 것같습니다.</p>\n<p data-ke-size=\"size16\">약달러로 간다면 미국주식이 오르더라도 손실이 날 수도 있으니 안심해선 안되고&nbsp;</p>\n<p data-ke-size=\"size16\">적당히 오르면 적당히 빠진 자산을 채워넣는 일을 해야할 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=L7W702-Z8dE\n\n\n\n \n \n플라자 합의는 1985년 9월 22일에 있었습니다.\n물론 이 당시에는 플라자 합의의 내용이 알려지지 않았고 그냥 회의했다 정도만 알려졌습니다.\n1년정도 지나 분석해보니 일본의 환율이 어마어마하게 내려가게 되었습니다.\n \n \n이번에도\n현재도 미국은 관세를 통한 엄청난 영향을 보여줬었고 90일 연기한 상태입니다.\n힘을 보여주고 이제 합의 하자는 것이죠\n \n미국의 단기채권을 장기 채권으로 전환이 시급한 문제라 이것을 진행하는게 아닌가 하는 추측을 영상에서 합니다.\n예를들어 한국이가서 우리가 채권 사줄태니 중국의 2차전지를 막아달라고 한다면 한국이 2차전지 시장을 크게 먹을 수 있을 것입니다.\n반대로 중국이 와서 한국보다 더 많은 국채를 해결해준다면 미국은 중국의 베터리도 받아들일 수 있을 것입니다.\n물론 시진핑은 그러지 않겠지만 차기 세력은 그런 결정을 할 수도 있겠죠\n현재도 시진핑은 우리는 협상같은거 안한도고 하지만\n트럼프는 현재 협의 중이라고 밝힌 상태입니다.\n바이든이 발행한 미국의 단기채권을 장기채권으로 돌려면 미국은 부채의 짐에서 탈출이 가능합니다.\n영상에서는 이 문제가 해결될 수도 있지만\n반 미국 세력이 생겨나 그들만의 단톡방을 파게될 가능성도 있다고 봅니다.\n항상 미국이 이긴다고 봐서는 안되고 다양한 자산군에 분산해 두는게 중요할 것같습니다.\n약달러로 간다면 미국주식이 오르더라도 손실이 날 수도 있으니 안심해선 안되고 \n적당히 오르면 적당히 빠진 자산을 채워넣는 일을 해야할 것입니다.",
        "guid": "http://serverdown.tistory.com/1286",
        "categories": [
          "유튜브",
          "미국",
          "플라자합의"
        ],
        "isoDate": "2025-04-25T13:14:35.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 텍스트 -&gt; 보이스 애셋 나왔군요",
        "link": "http://serverdown.tistory.com/1285",
        "pubDate": "Fri, 25 Apr 2025 17:38:42 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1285#entry1285comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"333\" data-origin-height=\"251\"><span data-url=\"https://blog.kakaocdn.net/dn/cqbvy3/btsNAcSYtB1/IHYKp7eG2z7zcyxKZMarPK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cqbvy3/btsNAcSYtB1/IHYKp7eG2z7zcyxKZMarPK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cqbvy3/btsNAcSYtB1/IHYKp7eG2z7zcyxKZMarPK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcqbvy3%2FbtsNAcSYtB1%2FIHYKp7eG2z7zcyxKZMarPK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"333\" height=\"251\" data-origin-width=\"333\" data-origin-height=\"251\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size26\">DeepVoice AI - Text To Voice</h2>\n<p data-ke-size=\"size16\">언제 나온건지 모르겠지만 할인중이군요&nbsp;</p>\n<p data-ke-size=\"size16\">게임 개발중엔 어차피 음성을 넣을 수 없으니 이거 써서 채워넣으면 좋아보이네요</p>\n<p data-ke-size=\"size16\">음성으로 입모양 맞추는 애샛도 어디서 본거 같은데 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">애셋 : <a href=\"https://assetstore.unity.com/packages/tools/generative-ai/deepvoice-ai-text-to-voice-251738\">DeepVoice AI - Text To Voice | Generative AI | Unity Asset Store</a></p>\n<figure id=\"og_1745570126973\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"DeepVoice AI - Text To Voice | 생성형 AI | Unity Asset Store\" data-og-description=\"Get the DeepVoice AI - Text To Voice package from AiKodex and speed up your game development process. Find this &amp; other 생성형 AI options on the Unity Asset Store.\" data-og-host=\"assetstore.unity.com\" data-og-source-url=\"https://assetstore.unity.com/packages/tools/generative-ai/deepvoice-ai-text-to-voice-251738\" data-og-url=\"https://assetstore.unity.com/packages/tools/generative-ai/deepvoice-ai-text-to-voice-251738\" data-og-image=\"https://scrap.kakaocdn.net/dn/cfo7RL/hyYFyqIiQD/dFplxTQi1ilJ0j2P46WXpK/img.jpg?width=1950&amp;height=1300&amp;face=0_0_1950_1300,https://scrap.kakaocdn.net/dn/cnWMwV/hyYJu9BvPl/BUCkfsK9HVCKd2LofkAPDk/img.jpg?width=1950&amp;height=1300&amp;face=0_0_1950_1300\"><a href=\"https://assetstore.unity.com/packages/tools/generative-ai/deepvoice-ai-text-to-voice-251738\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://assetstore.unity.com/packages/tools/generative-ai/deepvoice-ai-text-to-voice-251738\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cfo7RL/hyYFyqIiQD/dFplxTQi1ilJ0j2P46WXpK/img.jpg?width=1950&amp;height=1300&amp;face=0_0_1950_1300,https://scrap.kakaocdn.net/dn/cnWMwV/hyYJu9BvPl/BUCkfsK9HVCKd2LofkAPDk/img.jpg?width=1950&amp;height=1300&amp;face=0_0_1950_1300');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">DeepVoice AI - Text To Voice | 생성형 AI | Unity Asset Store</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Get the DeepVoice AI - Text To Voice package from AiKodex and speed up your game development process. Find this &amp; other 생성형 AI options on the Unity Asset Store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">assetstore.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">소개 영상 : <a href=\"https://www.youtube.com/watch?v=sSbI9G67v0E&amp;t=25s\">DeepVoice AI - Text To Voice [Updated] - YouTube</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=sSbI9G67v0E\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cFBQs4/hyYH4WNYbu/mUsZL3CwyXOrm4BMwYak8k/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/OZY7V/hyYH5OXBod/QDzVk3RerAOgwTIYay5eQ0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"DeepVoice AI - Text To Voice [Updated]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/sSbI9G67v0E\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">개발방법 설명: <a href=\"https://www.youtube.com/watch?v=zsUBPYRauCQ\">Getting Started - DeepVoice AI</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=zsUBPYRauCQ\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/WhW1L/hyYFyjWgzh/JuijNhoYi5GAEMstfYQQTK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/0KqJn/hyYJtJEnX1/uQIJeR1oH6eyGOuqBGNVb1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Getting Started - DeepVoice AI\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/zsUBPYRauCQ\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "DeepVoice AI - Text To Voice\n언제 나온건지 모르겠지만 할인중이군요 \n게임 개발중엔 어차피 음성을 넣을 수 없으니 이거 써서 채워넣으면 좋아보이네요\n음성으로 입모양 맞추는 애샛도 어디서 본거 같은데 ...\n \n애셋 : DeepVoice AI - Text To Voice | Generative AI | Unity Asset Store\n\n \nDeepVoice AI - Text To Voice | 생성형 AI | Unity Asset Store\nGet the DeepVoice AI - Text To Voice package from AiKodex and speed up your game development process. Find this & other 생성형 AI options on the Unity Asset Store.\nassetstore.unity.com\n\n \n소개 영상 : DeepVoice AI - Text To Voice [Updated] - YouTube\n\n\n\n \n개발방법 설명: Getting Started - DeepVoice AI",
        "guid": "http://serverdown.tistory.com/1285",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰",
          "유니티"
        ],
        "isoDate": "2025-04-25T08:38:42.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "Brick Away v4 / 블록분해 v4 / 줌 추",
        "link": "http://serverdown.tistory.com/1284",
        "pubDate": "Fri, 25 Apr 2025 16:48:05 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1284#entry1284comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"558\" data-origin-height=\"403\"><span data-url=\"https://blog.kakaocdn.net/dn/bNvTbD/btsNy9WXDvX/WYINyEkCLgv6FBMU4wfXx0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bNvTbD/btsNy9WXDvX/WYINyEkCLgv6FBMU4wfXx0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bNvTbD/btsNy9WXDvX/WYINyEkCLgv6FBMU4wfXx0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbNvTbD%2FbtsNy9WXDvX%2FWYINyEkCLgv6FBMU4wfXx0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"558\" height=\"403\" data-origin-width=\"558\" data-origin-height=\"403\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">v4</h2>\n<p data-ke-size=\"size16\">-&nbsp;회전&nbsp;속도&nbsp;줄임 <br />-&nbsp;줌&nbsp;기능&nbsp;추가 <br />-&nbsp;상자&nbsp;도망가는&nbsp;속도&nbsp;증가 <br />-&nbsp;드레그&nbsp;중&nbsp;클릭되는&nbsp;문제&nbsp;수정</p>\n<p data-ke-size=\"size16\">수정했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">플레이 페이지: <a href=\"https://play.unity.com/en/games/afc05233-1897-436d-867d-d31bde7d6217/brick-away-v4\">Unity Play | Brick Away V4 game</a></p>\n<figure id=\"og_1745567258500\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Brick Away V4 on Unity Play\" data-og-description=\"- Reduced rotation speed - Added zoom slider - Increased box escape speed - Fixed issue with clicking while dragging\" data-og-host=\"play.unity.com\" data-og-source-url=\"https://play.unity.com/en/games/afc05233-1897-436d-867d-d31bde7d6217/brick-away-v4\" data-og-url=\"https://play.unity.com/en/games/afc05233-1897-436d-867d-d31bde7d6217/brick-away-v4\" data-og-image=\"https://scrap.kakaocdn.net/dn/bZkCst/hyYFDFyRih/DXZMA6pmCw0pRMEQrZOR40/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/jlLc2/hyYH9KzpZA/0Qkeek14wma8USexYyoD3k/img.png?width=512&amp;height=512&amp;face=0_0_512_512\"><a href=\"https://play.unity.com/en/games/afc05233-1897-436d-867d-d31bde7d6217/brick-away-v4\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.unity.com/en/games/afc05233-1897-436d-867d-d31bde7d6217/brick-away-v4\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bZkCst/hyYFDFyRih/DXZMA6pmCw0pRMEQrZOR40/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/jlLc2/hyYH9KzpZA/0Qkeek14wma8USexYyoD3k/img.png?width=512&amp;height=512&amp;face=0_0_512_512');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Brick Away V4 on Unity Play</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">- Reduced rotation speed - Added zoom slider - Increased box escape speed - Fixed issue with clicking while dragging</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "v4\n- 회전 속도 줄임 \n- 줌 기능 추가 \n- 상자 도망가는 속도 증가 \n- 드레그 중 클릭되는 문제 수정\n수정했습니다.\n \n플레이 페이지: Unity Play | Brick Away V4 game\n\n \nBrick Away V4 on Unity Play\n- Reduced rotation speed - Added zoom slider - Increased box escape speed - Fixed issue with clicking while dragging\nplay.unity.com",
        "guid": "http://serverdown.tistory.com/1284",
        "categories": [
          "블록 분해 게임 (자작)"
        ],
        "isoDate": "2025-04-25T07:48:05.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "이 영상은 먼데 조회수가 500만이 나오나 ... / 전설의 레전드 질문 영상",
        "link": "http://serverdown.tistory.com/1283",
        "pubDate": "Fri, 25 Apr 2025 11:00:01 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1283#entry1283comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"581\" data-origin-height=\"265\"><span data-url=\"https://blog.kakaocdn.net/dn/ynmxM/btsNzf9ruFR/TJKyEEKIgL7UIKZiPkKKi0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ynmxM/btsNzf9ruFR/TJKyEEKIgL7UIKZiPkKKi0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ynmxM/btsNzf9ruFR/TJKyEEKIgL7UIKZiPkKKi0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FynmxM%2FbtsNzf9ruFR%2FTJKyEEKIgL7UIKZiPkKKi0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"581\" height=\"265\" data-origin-width=\"581\" data-origin-height=\"265\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">아니 이영상 뭐길레 조회수가 500만이지 ㄷㄷ</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=-4zNBne9v7w\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=-4zNBne9v7w</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=-4zNBne9v7w\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/gWGPl/hyYFFDiPUF/RkmeroosmUuaYyeDsx7NHk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/j1yJa/hyYFD6zCOs/ZSV8xngLcmghrkh6lkoxwk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"이 곡의 제목을 아시는 분은 제발 알려주세요 부탁드립니다\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/-4zNBne9v7w\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">50초가 안되는 영상이며</p>\n<p data-ke-size=\"size16\">이 곡의 제목을 묻는 영상이며</p>\n<p data-ke-size=\"size16\">이곡의 제목을 묻고 있는 질문 영상이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">그렇다....</h2>\n<p data-ke-size=\"size16\">이 영상은 평범하지 않다.</p>\n<p data-ke-size=\"size16\">전설로 돌아다니는 이상하게 묻고 똑바로 알려주는 시리즈의 그 전개 이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상의 설명은 몇년전 (?) 우연히 들었던 곡의 맬로디가 생각나&nbsp;</p>\n<p data-ke-size=\"size16\">피아노로 쳐서 영상을 올린뒤 제목을 붇고 잇다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">상황을 한줄 요약한 댓글</h2>\n<p data-ke-size=\"size16\">생각 나는건 알겠는데 몇년전껄 기억해서 피아노로 친다는 것</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"672\" data-origin-height=\"169\"><span data-url=\"https://blog.kakaocdn.net/dn/cnYFUA/btsNzGeHGbd/iRzbkK3FHOHDJGCikSIOK1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cnYFUA/btsNzGeHGbd/iRzbkK3FHOHDJGCikSIOK1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cnYFUA/btsNzGeHGbd/iRzbkK3FHOHDJGCikSIOK1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcnYFUA%2FbtsNzGeHGbd%2FiRzbkK3FHOHDJGCikSIOK1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"672\" height=\"169\" data-origin-width=\"672\" data-origin-height=\"169\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">아주 잘 요약한 댓글도 있는데 좋아요가 2.4만이넹&nbsp;</p>\n<p data-ke-size=\"size16\">그런데 이 댓글이 베스트 뎃글이 아니다.</p>\n<h2 data-ke-size=\"size26\">1위는 당연히 답변이다.</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"384\" data-origin-height=\"270\"><span data-url=\"https://blog.kakaocdn.net/dn/dp6iTC/btsNzid4KuO/Kw5EYzUxJEkOuYB8mbuKF0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dp6iTC/btsNzid4KuO/Kw5EYzUxJEkOuYB8mbuKF0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dp6iTC/btsNzid4KuO/Kw5EYzUxJEkOuYB8mbuKF0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdp6iTC%2FbtsNzid4KuO%2FKw5EYzUxJEkOuYB8mbuKF0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"384\" height=\"270\" data-origin-width=\"384\" data-origin-height=\"270\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">좋아요 난리낫다.</p>\n<p data-ke-size=\"size16\">아쉽게도 수정됨이 붙어있는걸로 봐서</p>\n<p data-ke-size=\"size16\">오타가 난건지 한번 고쳤다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">Aether 라고 한데 그래서 이게 뭔가 해서 찾아봤다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">영상: <a href=\"https://www.youtube.com/watch?v=MU3u1EU182o\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=MU3u1EU182o</a></span></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=MU3u1EU182o\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/1nYAM/hyYH7FTsMa/f1r26XkSt2ZvEb9LA9YfCK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/cnQoGS/hyYIkeaxt4/5RprsfL050ZdSm3zCDGnxK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[Official] Aether / Powerless [AD:PIANO 3]\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/MU3u1EU182o\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">좋네요</p>\n<p data-ke-size=\"size16\">좋으면 됐지</p>",
        "contentSnippet": "아니 이영상 뭐길레 조회수가 500만이지 ㄷㄷ\n영상: https://www.youtube.com/watch?v=-4zNBne9v7w\n\n\n\n50초가 안되는 영상이며\n이 곡의 제목을 묻는 영상이며\n이곡의 제목을 묻고 있는 질문 영상이다.\n \n그렇다....\n이 영상은 평범하지 않다.\n전설로 돌아다니는 이상하게 묻고 똑바로 알려주는 시리즈의 그 전개 이다.\n \n영상의 설명은 몇년전 (?) 우연히 들었던 곡의 맬로디가 생각나 \n피아노로 쳐서 영상을 올린뒤 제목을 붇고 잇다.\n \n상황을 한줄 요약한 댓글\n생각 나는건 알겠는데 몇년전껄 기억해서 피아노로 친다는 것\n\n\n아주 잘 요약한 댓글도 있는데 좋아요가 2.4만이넹 \n그런데 이 댓글이 베스트 뎃글이 아니다.\n1위는 당연히 답변이다.\n\n\n좋아요 난리낫다.\n아쉽게도 수정됨이 붙어있는걸로 봐서\n오타가 난건지 한번 고쳤다.\nAether 라고 한데 그래서 이게 뭔가 해서 찾아봤다.\n \n영상: https://www.youtube.com/watch?v=MU3u1EU182o\n\n\n\n좋네요\n좋으면 됐지",
        "guid": "http://serverdown.tistory.com/1283",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-04-25T02:00:01.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "THE FIRST TAKE 일본 음악 채널을 발견",
        "link": "http://serverdown.tistory.com/1282",
        "pubDate": "Fri, 25 Apr 2025 10:45:31 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1282#entry1282comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1138\" data-origin-height=\"188\"><span data-url=\"https://blog.kakaocdn.net/dn/oJdYT/btsNyNFBeex/YkOYt2fiEsanQ8XIY9GTtK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/oJdYT/btsNyNFBeex/YkOYt2fiEsanQ8XIY9GTtK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/oJdYT/btsNyNFBeex/YkOYt2fiEsanQ8XIY9GTtK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FoJdYT%2FbtsNyNFBeex%2FYkOYt2fiEsanQ8XIY9GTtK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1138\" height=\"188\" data-origin-width=\"1138\" data-origin-height=\"188\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"668\" data-origin-height=\"264\"><span data-url=\"https://blog.kakaocdn.net/dn/rrRCG/btsNxXWtRa6/EJ0rk1KcurHqF5oa4fdf81/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/rrRCG/btsNxXWtRa6/EJ0rk1KcurHqF5oa4fdf81/img.png\"><img src=\"https://blog.kakaocdn.net/dn/rrRCG/btsNxXWtRa6/EJ0rk1KcurHqF5oa4fdf81/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FrrRCG%2FbtsNxXWtRa6%2FEJ0rk1KcurHqF5oa4fdf81%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"668\" height=\"264\" data-origin-width=\"668\" data-origin-height=\"264\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">와우 천만 ㄷㄷㄷ</p>\n<p data-ke-size=\"size16\">우연히 원피스 오프닝 공이 떠서 보다보니</p>\n<p data-ke-size=\"size16\">WE EAR : <a href=\"https://www.youtube.com/watch?v=HB4iNVa746E\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=HB4iNVa746E</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=HB4iNVa746E\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/f4e7Z/hyYIbIiy4r/6wIqqmnu0InT4wgifPRAi1/img.jpg?width=1280&amp;height=720&amp;face=418_122_588_292,https://scrap.kakaocdn.net/dn/bWSgBO/hyYH5OTcrw/GFjkyRqALybzYmlh6xqxf0/img.jpg?width=1280&amp;height=720&amp;face=418_122_588_292\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Hiroshi Kitadani - We Are! / THE FIRST TAKE\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/HB4iNVa746E\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">이 채널은 보컬 녹음을 최대한 생생하게 하는데 중점을 두는거 같습니다.</p>\n<p data-ke-size=\"size16\">1년전이면 거의 최근이군요 10년전 노래이니</p>\n<p data-ke-size=\"size16\">최근에 무슨 활동을 하나 해서 최신 영상을 보</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"854\" data-origin-height=\"556\"><span data-url=\"https://blog.kakaocdn.net/dn/bkFv4N/btsNxVRVJLf/eNMuEZaYMk5aYhDlF58yd1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bkFv4N/btsNxVRVJLf/eNMuEZaYMk5aYhDlF58yd1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bkFv4N/btsNxVRVJLf/eNMuEZaYMk5aYhDlF58yd1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbkFv4N%2FbtsNxVRVJLf%2FeNMuEZaYMk5aYhDlF58yd1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"854\" height=\"556\" data-origin-width=\"854\" data-origin-height=\"556\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">뭔가 일본어로 적혀있고 ...</p>\n<p data-ke-size=\"size16\">본거 같은 글자이고....</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=XXQVmvOqB8w\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=XXQVmvOqB8w</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=XXQVmvOqB8w\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/d0uJ5y/hyYIcmVLNT/TqTueDed4wNEg5t7sLciQ1/img.jpg?width=1280&amp;height=720&amp;face=122_136_420_462,https://scrap.kakaocdn.net/dn/gQrzu/hyYL5tveSt/U3hu5wwPLKDAGTpKSBhMz0/img.jpg?width=1280&amp;height=720&amp;face=122_136_420_462\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"ナナヲアカリ - 明日の私に幸あれ / THE FIRST TAKE\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/XXQVmvOqB8w\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">빠빠라빠 빠라빠람 하던 그것이였군요</p>\n<p data-ke-size=\"size16\">2025년 1분기에 특이한 엔딩공으로 유명했던&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"200\" data-origin-height=\"290\"><span data-url=\"https://blog.kakaocdn.net/dn/xNWtO/btsNzckyL3o/cBAf7oT3ngjPoB57P341t1/img.webp\" data-phocus=\"https://blog.kakaocdn.net/dn/xNWtO/btsNzckyL3o/cBAf7oT3ngjPoB57P341t1/img.webp\"><img src=\"https://blog.kakaocdn.net/dn/xNWtO/btsNzckyL3o/cBAf7oT3ngjPoB57P341t1/img.webp\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FxNWtO%2FbtsNzckyL3o%2FcBAf7oT3ngjPoB57P341t1%2Fimg.webp\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"200\" height=\"290\" data-origin-width=\"200\" data-origin-height=\"290\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">그림이 왜이케 작지</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"482\" data-origin-height=\"813\"><span data-url=\"https://blog.kakaocdn.net/dn/u7AN6/btsNzjRAspA/vwIBtjPZzsuY3of1atRY8K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/u7AN6/btsNzjRAspA/vwIBtjPZzsuY3of1atRY8K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/u7AN6/btsNzjRAspA/vwIBtjPZzsuY3of1atRY8K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fu7AN6%2FbtsNzjRAspA%2FvwIBtjPZzsuY3of1atRY8K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"482\" height=\"813\" data-origin-width=\"482\" data-origin-height=\"813\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이 애니의 내용은 빨리 퇴근하려고 길드 접수원이 던전을 토벌해버리는 것으로 시작되는데</p>\n<p data-ke-size=\"size16\">후반엔 내용을 늘려야 해서 인지 복잡하게 흘럭가게 됩니다.</p>\n<p data-ke-size=\"size16\">기억해둬야하는건 엔딩공이 인기가 있었다는 것 정도</p>\n<p data-ke-size=\"size16\">녹음에 노력을 많이 쓴 채널이라는 점에서 좋은 발견이였습니다.</p>\n<p data-ke-size=\"size16\">애니만 있는건 아니고 클래식 연주도 있고 다양하게 영상을 만드네요</p>\n<p data-ke-size=\"size16\">지켜봐야할것 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "와우 천만 ㄷㄷㄷ\n우연히 원피스 오프닝 공이 떠서 보다보니\nWE EAR : https://www.youtube.com/watch?v=HB4iNVa746E\n\n\n\n이 채널은 보컬 녹음을 최대한 생생하게 하는데 중점을 두는거 같습니다.\n1년전이면 거의 최근이군요 10년전 노래이니\n최근에 무슨 활동을 하나 해서 최신 영상을 보\n\n\n뭔가 일본어로 적혀있고 ...\n본거 같은 글자이고....\n \n영상: https://www.youtube.com/watch?v=XXQVmvOqB8w\n\n\n\n빠빠라빠 빠라빠람 하던 그것이였군요\n2025년 1분기에 특이한 엔딩공으로 유명했던 \n\n\n그림이 왜이케 작지\n\n\n이 애니의 내용은 빨리 퇴근하려고 길드 접수원이 던전을 토벌해버리는 것으로 시작되는데\n후반엔 내용을 늘려야 해서 인지 복잡하게 흘럭가게 됩니다.\n기억해둬야하는건 엔딩공이 인기가 있었다는 것 정도\n녹음에 노력을 많이 쓴 채널이라는 점에서 좋은 발견이였습니다.\n애니만 있는건 아니고 클래식 연주도 있고 다양하게 영상을 만드네요\n지켜봐야할것 같습니다.",
        "guid": "http://serverdown.tistory.com/1282",
        "categories": [
          "유튜브",
          "일본음악"
        ],
        "isoDate": "2025-04-25T01:45:31.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "Brick Away v2 / 블록분해 v2 / 회전, 레벨 생성",
        "link": "http://serverdown.tistory.com/1281",
        "pubDate": "Thu, 24 Apr 2025 16:20:56 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1281#entry1281comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"558\" data-origin-height=\"403\"><a href=\"https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2\" target=\"_blank\" title=\"https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2\"><img src=\"https://blog.kakaocdn.net/dn/SM8yT/btsNyfvnBmx/o0ib1sOpOEcKLQpmwTCfG1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FSM8yT%2FbtsNyfvnBmx%2Fo0ib1sOpOEcKLQpmwTCfG1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"558\" height=\"403\" data-origin-width=\"558\" data-origin-height=\"403\"/></a></figure>\n</p>\n<p data-ke-size=\"size16\">두번째 버전 출시 했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">관련 링크</h2>\n<p data-ke-size=\"size16\">플레이 링크: <a href=\"https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2</a></p>\n<figure id=\"og_1745567109378\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Brick Away V2 on Unity Play\" data-og-description=\"v2 - mouse drag rotation - random level generate BLOG: https://serverdown.tistory.com/category/%EB%B8%94%EB%A1%9D%20%EB%B6%84%ED%95%B4%20%EA%B2%8C%EC%9E%84%20%28%EC%9E%90%EC%9E%91%29\" data-og-host=\"play.unity.com\" data-og-source-url=\"https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2\" data-og-url=\"https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2\" data-og-image=\"https://scrap.kakaocdn.net/dn/g5zVF/hyYFz4edpY/Aj1V5X56O6wLg08b4hUUK1/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/b75drU/hyYIcgcMfj/E6PliK0Z3a27k8knO7bUt1/img.png?width=512&amp;height=512&amp;face=0_0_512_512\"><a href=\"https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/g5zVF/hyYFz4edpY/Aj1V5X56O6wLg08b4hUUK1/img.png?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/b75drU/hyYIcgcMfj/E6PliK0Z3a27k8knO7bUt1/img.png?width=512&amp;height=512&amp;face=0_0_512_512');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Brick Away V2 on Unity Play</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">v2 - mouse drag rotation - random level generate BLOG: https://serverdown.tistory.com/category/%EB%B8%94%EB%A1%9D%20%EB%B6%84%ED%95%B4%20%EA%B2%8C%EC%9E%84%20%28%EC%9E%90%EC%9E%91%29</p>\n<p class=\"og-host\" data-ke-size=\"size16\">play.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">플레이 영상: <a href=\"https://www.youtube.com/watch?v=_EVuM-JzcMw\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=_EVuM-JzcMw</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=_EVuM-JzcMw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/eyqgF/hyYIcAjRBG/T5okIxEaKIjaE7BOKjam2k/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/CtnxJ/hyYFziFcz5/GlfRTVerjRVC1lbrKyTMiK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Brick Away v2 play\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/_EVuM-JzcMw\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">마우스 드레그로 회전 가능합니다.</p>\n<p data-ke-size=\"size16\">레벨을 랜덤으로 생성합니다.</p>\n<p data-ke-size=\"size16\">클리어 하면 레벨이 올라갑니다.<br />레벨은 상자 수를 의미합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">다음 버전 예정</h2>\n<p data-ke-size=\"size16\">레벨 생성이 잘 되도록 수정 예정</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "두번째 버전 출시 했습니다.\n \n관련 링크\n플레이 링크: https://play.unity.com/en/games/1108fd21-5ab1-481e-a4c8-7dc42a7641e9/brick-away-v2\n\n \nBrick Away V2 on Unity Play\nv2 - mouse drag rotation - random level generate BLOG: https://serverdown.tistory.com/category/%EB%B8%94%EB%A1%9D%20%EB%B6%84%ED%95%B4%20%EA%B2%8C%EC%9E%84%20%28%EC%9E%90%EC%9E%91%29\nplay.unity.com\n\n \n \n \n플레이 영상: https://www.youtube.com/watch?v=_EVuM-JzcMw\n\n\n\n \n \n \n마우스 드레그로 회전 가능합니다.\n레벨을 랜덤으로 생성합니다.\n클리어 하면 레벨이 올라갑니다.\n레벨은 상자 수를 의미합니다.\n \n다음 버전 예정\n레벨 생성이 잘 되도록 수정 예정",
        "guid": "http://serverdown.tistory.com/1281",
        "categories": [
          "블록 분해 게임 (자작)",
          "게임",
          "유니티",
          "자작"
        ],
        "isoDate": "2025-04-24T07:20:56.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 게임 수학을 배워보자",
        "link": "http://serverdown.tistory.com/1280",
        "pubDate": "Wed, 23 Apr 2025 19:10:57 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1280#entry1280comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"299\" data-origin-height=\"168\"><span data-url=\"https://blog.kakaocdn.net/dn/Dmz77/btsNv9omGSl/9NBNqTnUzXkiksV2L20jJ1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/Dmz77/btsNv9omGSl/9NBNqTnUzXkiksV2L20jJ1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/Dmz77/btsNv9omGSl/9NBNqTnUzXkiksV2L20jJ1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FDmz77%2FbtsNv9omGSl%2F9NBNqTnUzXkiksV2L20jJ1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"299\" height=\"168\" data-origin-width=\"299\" data-origin-height=\"168\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=U4MyjA16hgY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=U4MyjA16hgY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=U4MyjA16hgY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ceB4LK/hyYIkkDkUq/3uRJryQKYIKQ66W0vsjXEK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/b4uXCK/hyYIhg7xGw/dsYQThUlKsyrNlIKkXeWkK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"알쓸유잡 4월 :  수포자를 위한 게임수학 2부\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/U4MyjA16hgY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">포기하지 말고</p>\n<p data-ke-size=\"size16\">자주 보면 이해 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=U4MyjA16hgY\n\n\n\n포기하지 말고\n자주 보면 이해 됩니다.",
        "guid": "http://serverdown.tistory.com/1280",
        "categories": [
          "프로그래밍/개발메모",
          "유니티"
        ],
        "isoDate": "2025-04-23T10:10:57.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "Add Force 1 - v39 / 히어로 추가 (개발중)",
        "link": "http://serverdown.tistory.com/1279",
        "pubDate": "Wed, 23 Apr 2025 14:52:37 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1279#entry1279comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"512\" data-origin-height=\"512\"><span data-url=\"https://blog.kakaocdn.net/dn/b7Abo8/btsNwWhw4c4/7f8ZqL5aENwd4YFuH6elX0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b7Abo8/btsNwWhw4c4/7f8ZqL5aENwd4YFuH6elX0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b7Abo8/btsNwWhw4c4/7f8ZqL5aENwd4YFuH6elX0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb7Abo8%2FbtsNwWhw4c4%2F7f8ZqL5aENwd4YFuH6elX0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"512\" height=\"512\" data-origin-width=\"512\" data-origin-height=\"512\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 그림을 앱 이콘으로 사용할 예정입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">컨셉</h2>\n<p data-ke-size=\"size16\">기사 캐릭터가 등장하며 광고를 보고 구매할 수 있습니다.</p>\n<p data-ke-size=\"size16\">기사 캐릭터는 게임중에 난입하여 적들을 칼로 공격합니다.</p>\n<p data-ke-size=\"size16\">총알을 기사에게 발사하면 기사가 레벨업을 합니다.</p>\n<p data-ke-size=\"size16\">레벨업을 하면 더 빠른 공격과 공격력을 가지게 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"647\" data-origin-height=\"359\"><span data-url=\"https://blog.kakaocdn.net/dn/Ds8Nk/btsNuGzWXzc/BK6Rc4mKzGJGoDxG13wiQ1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Ds8Nk/btsNuGzWXzc/BK6Rc4mKzGJGoDxG13wiQ1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Ds8Nk/btsNuGzWXzc/BK6Rc4mKzGJGoDxG13wiQ1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FDs8Nk%2FbtsNuGzWXzc%2FBK6Rc4mKzGJGoDxG13wiQ1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"647\" height=\"359\" data-origin-width=\"647\" data-origin-height=\"359\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">히어로 버튼이 추가되었습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"644\" data-origin-height=\"371\"><span data-url=\"https://blog.kakaocdn.net/dn/bsltik/btsNuJRDXXO/QYkp1KZnMRrICaG3QYnb4k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bsltik/btsNuJRDXXO/QYkp1KZnMRrICaG3QYnb4k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bsltik/btsNuJRDXXO/QYkp1KZnMRrICaG3QYnb4k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbsltik%2FbtsNuJRDXXO%2FQYkp1KZnMRrICaG3QYnb4k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"644\" height=\"371\" data-origin-width=\"644\" data-origin-height=\"371\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">광고를 시청하면</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"648\" data-origin-height=\"367\"><span data-url=\"https://blog.kakaocdn.net/dn/XPiNY/btsNxiSyleE/JfsFIBWiFJNZUGKoJ8xT50/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/XPiNY/btsNxiSyleE/JfsFIBWiFJNZUGKoJ8xT50/img.png\"><img src=\"https://blog.kakaocdn.net/dn/XPiNY/btsNxiSyleE/JfsFIBWiFJNZUGKoJ8xT50/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FXPiNY%2FbtsNxiSyleE%2FJfsFIBWiFJNZUGKoJ8xT50%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"648\" height=\"367\" data-origin-width=\"648\" data-origin-height=\"367\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">등장 할 수 있는 상태가 됩니다.</p>\n<p data-ke-size=\"size16\">(개발중)</p>",
        "contentSnippet": "이 그림을 앱 이콘으로 사용할 예정입니다.\n \n컨셉\n기사 캐릭터가 등장하며 광고를 보고 구매할 수 있습니다.\n기사 캐릭터는 게임중에 난입하여 적들을 칼로 공격합니다.\n총알을 기사에게 발사하면 기사가 레벨업을 합니다.\n레벨업을 하면 더 빠른 공격과 공격력을 가지게 됩니다.\n \n\n\n히어로 버튼이 추가되었습니다.\n\n\n광고를 시청하면\n\n\n등장 할 수 있는 상태가 됩니다.\n(개발중)",
        "guid": "http://serverdown.tistory.com/1279",
        "categories": [
          "Add Force 1 (자작)"
        ],
        "isoDate": "2025-04-23T05:52:37.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 포스트 프로세싱에 대해 알아보자",
        "link": "http://serverdown.tistory.com/1278",
        "pubDate": "Sun, 20 Apr 2025 19:12:38 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1278#entry1278comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"650\" data-origin-height=\"382\"><span data-url=\"https://blog.kakaocdn.net/dn/bMtjdQ/btsNsQ22WH0/7auE74W3ft7GxHfdYKbvGk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bMtjdQ/btsNsQ22WH0/7auE74W3ft7GxHfdYKbvGk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bMtjdQ/btsNsQ22WH0/7auE74W3ft7GxHfdYKbvGk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbMtjdQ%2FbtsNsQ22WH0%2F7auE74W3ft7GxHfdYKbvGk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"650\" height=\"382\" data-origin-width=\"650\" data-origin-height=\"382\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=9_QwGdL_gvA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=9_QwGdL_gvA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=9_QwGdL_gvA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ep7AA2/hyYH6M6gKk/r92CcrI6B3NQAhEXqXqkd0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/VttYg/hyYJEpnwuq/oxKXhk3bVafaKEskG6Qzk0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"12월 20일 오후 4시 알쓸유잡 : 포스트 프로세싱✨ 원리와 구현\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/9_QwGdL_gvA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">40분 20초</p>\n<p data-ke-size=\"size16\">쉐이더 작업하다 길을 잃으면</p>\n<p data-ke-size=\"size16\">F 키 누르면 전체가 화면에 잡히도록 해준다네요</p>\n<p data-ke-size=\"size16\">몰랐습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1시간 15분 부터 DOF 를 하는군요&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"404\" data-origin-height=\"197\"><span data-url=\"https://blog.kakaocdn.net/dn/y8Lal/btsNrxRsOLb/XufI7FwKGZch9mzldrD8cK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/y8Lal/btsNrxRsOLb/XufI7FwKGZch9mzldrD8cK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/y8Lal/btsNrxRsOLb/XufI7FwKGZch9mzldrD8cK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fy8Lal%2FbtsNrxRsOLb%2FXufI7FwKGZch9mzldrD8cK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"404\" height=\"197\" data-origin-width=\"404\" data-origin-height=\"197\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">49분 30초 redirect node 라고 그래프 선이 마음에 들지 않는다면</p>\n<p data-ke-size=\"size16\">특정위치로 선을 옮길 수 있습니다. 기능은 없고 꺾어주는 역활만 하는거 같군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=9_QwGdL_gvA\n\n\n\n \n \n40분 20초\n쉐이더 작업하다 길을 잃으면\nF 키 누르면 전체가 화면에 잡히도록 해준다네요\n몰랐습니다.\n \n1시간 15분 부터 DOF 를 하는군요 \n\n\n49분 30초 redirect node 라고 그래프 선이 마음에 들지 않는다면\n특정위치로 선을 옮길 수 있습니다. 기능은 없고 꺾어주는 역활만 하는거 같군요",
        "guid": "http://serverdown.tistory.com/1278",
        "categories": [
          "프로그래밍/개발메모",
          "유니티"
        ],
        "isoDate": "2025-04-20T10:12:38.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 비쥬얼 에셋 / 픽셀라이저  / 워터 / 뷰티파이 / 뷰블리",
        "link": "http://serverdown.tistory.com/1277",
        "pubDate": "Sun, 20 Apr 2025 15:48:46 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1277#entry1277comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"362\" data-origin-height=\"149\"><span data-url=\"https://blog.kakaocdn.net/dn/bd9Rtc/btsNsNrSESI/Y81SwGF4PnAbZDQz6cYxL1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bd9Rtc/btsNsNrSESI/Y81SwGF4PnAbZDQz6cYxL1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bd9Rtc/btsNsNrSESI/Y81SwGF4PnAbZDQz6cYxL1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbd9Rtc%2FbtsNsNrSESI%2FY81SwGF4PnAbZDQz6cYxL1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"362\" height=\"149\" data-origin-width=\"362\" data-origin-height=\"149\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">1. 픽셀라이저 ProPixelizer</h2>\n<p data-ke-size=\"size16\">픽셀라이저는 3D 환경을 픽셀 아트 처럼 보이도록하는 셰이더 입니다.</p>\n<p data-ke-size=\"size16\">아래는 설명</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://youtu.be/q4epArkvVnE?t=1034\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://youtu.be/q4epArkvVnE?t=1034</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=q4epArkvVnE\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cfpori/hyYG7NswIS/EtXk7aWbGMsO5TtKH3mf91/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/qL0TC/hyYH9wgxoK/3vXqR9a5w3BvecDPlO7fk0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"픽셀아트 놀이공원으로 블랙프라이데이 에셋 리뷰하기\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/q4epArkvVnE\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">12분에 나옵니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">애셋 링크: <a href=\"https://www.bing.com/search?q=unity%20asset%20store%20pro%20pixelizer&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;ghc=1&amp;lq=0&amp;pq=unity%20asset%20store%20pro%20pixelizer&amp;sc=3-31&amp;sk=&amp;cvid=AD87A99A32B64413A1E745E2B8E1B96C\">bing.com/ck/a?!&amp;&amp;p=75737a337e71df6ed009a8ed37376a2d33afc7c860ba34cee95c9fb3c24d295aJmltdHM9MTc0NTAyMDgwMA&amp;ptn=3&amp;ver=2&amp;hsh=4&amp;fclid=103bf7f7-14f0-64e7-025e-e4ca15636503&amp;psq=unity+asset+store+pro+pixelizer&amp;u=a1aHR0cHM6Ly9hc3NldHN0b3JlLnVuaXR5LmNvbS9wYWNrYWdlcy92Zngvc2hhZGVycy9mdWxsc2NyZWVuLWNhbWVyYS1lZmZlY3RzL3Byb3BpeGVsaXplci1yZWFsdGltZS0zZC1waXhlbC1hcnQtMTc3ODc3Izp-OnRleHQ9QWRkJTIwZGVwdGglMjB0byUyMHlvdXIlMjBwcm9qZWN0JTIwd2l0aCUyMFByb1BpeGVsaXplciUyMC0sbW9yZSUyMFZGWCUyMG9wdGlvbnMlMjBvbiUyMHRoZSUyMFVuaXR5JTIwQXNzZXQlMjBTdG9yZS4&amp;ntb=1</a></p>\n<figure id=\"og_1745131699620\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"unity asset store pro pixelizer - Bing\" data-og-description=\"Bing은 지능적인 검색 기능은 사용자가 원하는 정보를 빠르게 검색하고 보상을 제공합니다.\" data-og-host=\"www.bing.com\" data-og-source-url=\"https://www.bing.com/search?q=unity%20asset%20store%20pro%20pixelizer&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;ghc=1&amp;lq=0&amp;pq=unity%20asset%20store%20pro%20pixelizer&amp;sc=3-31&amp;sk=&amp;cvid=AD87A99A32B64413A1E745E2B8E1B96C\" data-og-url=\"https://www.bing.com/search?cvid=AD87A99A32B64413A1E745E2B8E1B96C&amp;form=QBRE&amp;ghc=1&amp;lq=0&amp;pq=unity+asset+store+pro+pixelizer&amp;q=unity+asset+store+pro+pixelizer&amp;qs=n&amp;sc=3-31&amp;sk=&amp;sp=-1\" data-og-image=\"https://scrap.kakaocdn.net/dn/cCNLWw/hyYFGuI2MB/hsbWkEilkpq0ERqZEXsKK1/img.jpg?width=988&amp;height=525&amp;face=0_0_988_525,https://scrap.kakaocdn.net/dn/keSeH/hyYJANZxq3/166xWdhWWnPdFe5KveweZK/img.jpg?width=400&amp;height=225&amp;face=0_0_400_225\"><a href=\"https://www.bing.com/search?q=unity%20asset%20store%20pro%20pixelizer&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;ghc=1&amp;lq=0&amp;pq=unity%20asset%20store%20pro%20pixelizer&amp;sc=3-31&amp;sk=&amp;cvid=AD87A99A32B64413A1E745E2B8E1B96C\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://www.bing.com/search?q=unity%20asset%20store%20pro%20pixelizer&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;ghc=1&amp;lq=0&amp;pq=unity%20asset%20store%20pro%20pixelizer&amp;sc=3-31&amp;sk=&amp;cvid=AD87A99A32B64413A1E745E2B8E1B96C\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cCNLWw/hyYFGuI2MB/hsbWkEilkpq0ERqZEXsKK1/img.jpg?width=988&amp;height=525&amp;face=0_0_988_525,https://scrap.kakaocdn.net/dn/keSeH/hyYJANZxq3/166xWdhWWnPdFe5KveweZK/img.jpg?width=400&amp;height=225&amp;face=0_0_400_225');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">unity asset store pro pixelizer - Bing</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Bing은 지능적인 검색 기능은 사용자가 원하는 정보를 빠르게 검색하고 보상을 제공합니다.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">www.bing.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">애셋 홍보영상: <a href=\"https://www.youtube.com/watch?time_continue=15&amp;v=hEgd6XIWW1E&amp;embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&amp;embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&amp;source_ve_path=MjM4NTE\">ProPixelizer for Unity</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=hEgd6XIWW1E\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/P6Mwr/hyYIb8Gh5D/WZqS9lRKUCmLuUocRf7V20/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/udVEU/hyYIga5opM/RAHiVESMx2FuJSUMQKP2Ak/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"ProPixelizer for Unity\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/hEgd6XIWW1E\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">나중에 써보도록 하자</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2. 뷰티파이3 Beautify 3&nbsp;</h2>\n<p data-ke-size=\"size16\">설정해두면 3D 환경이 바로 멋지게 보입니다.</p>\n<p data-ke-size=\"size16\">애셋링크: <a href=\"https://assetstore.unity.com/packages/vfx/shaders/fullscreen-camera-effects/beautify-3-advanced-post-processing-233073\">Beautify 3 - Advanced Post Processing | Fullscreen &amp; Camera Effects | Unity Asset Store</a></p>\n<figure id=\"og_1745517566756\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Beautify 3 - Advanced Post Processing | 카메라 효과 | Unity Asset Store\" data-og-description=\"Add depth to your project with Beautify 3 - Advanced Post Processing asset from Kronnect. Find this &amp; more 시각 효과 options on the Unity Asset Store.\" data-og-host=\"assetstore.unity.com\" data-og-source-url=\"https://assetstore.unity.com/packages/vfx/shaders/fullscreen-camera-effects/beautify-3-advanced-post-processing-233073\" data-og-url=\"https://assetstore.unity.com/packages/vfx/shaders/fullscreen-camera-effects/beautify-3-advanced-post-processing-233073\" data-og-image=\"https://scrap.kakaocdn.net/dn/xoX7q/hyYIb2yPPw/20YyRGCyufjLHBmP50GvEK/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/bzimJv/hyYL9QaRLx/yP8FJvkPSSKXPpRAVPymC0/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630\"><a href=\"https://assetstore.unity.com/packages/vfx/shaders/fullscreen-camera-effects/beautify-3-advanced-post-processing-233073\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://assetstore.unity.com/packages/vfx/shaders/fullscreen-camera-effects/beautify-3-advanced-post-processing-233073\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/xoX7q/hyYIb2yPPw/20YyRGCyufjLHBmP50GvEK/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/bzimJv/hyYL9QaRLx/yP8FJvkPSSKXPpRAVPymC0/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Beautify 3 - Advanced Post Processing | 카메라 효과 | Unity Asset Store</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Add depth to your project with Beautify 3 - Advanced Post Processing asset from Kronnect. Find this &amp; more 시각 효과 options on the Unity Asset Store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">assetstore.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?time_continue=18&amp;v=aVuVNpSI0g4&amp;embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&amp;embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&amp;source_ve_path=MjM4NTE\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?time_continue=18&amp;v=aVuVNpSI0g4&amp;embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&amp;embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&amp;source_ve_path=MjM4NTE</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=aVuVNpSI0g4\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/TMNUy/hyYFDk83qg/gZ8Q1vCzfKxbk2l4ygzxkK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/EXERu/hyYFDrUi1w/A3N1rjTS5nf6y8ra6fPyKK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Beautify 3 - Advanced Post Processing for Unity\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/aVuVNpSI0g4\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">3. 스타일라이즈 워터 3 Stylized&nbsp;Water&nbsp;2</h2>\n<p data-ke-size=\"size16\">물을 편하게 만들어 주며 물위에 둥둥 뜬 물체를 표현해줍니다.</p>\n<p data-ke-size=\"size16\">애셋링크: <a href=\"https://assetstore.unity.com/packages/vfx/shaders/stylized-water-2-170386?aid=1100lkbzf&amp;pubref=22BFxWER\">Stylized Water 2 | VFX Shaders | Unity Asset Store</a></p>\n<figure id=\"og_1745517700010\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Stylized Water 2 | 시각 효과 셰이더 | Unity Asset Store\" data-og-description=\"Add depth to your next project with Stylized Water 2 from Staggart Creations. Find this &amp; more 시각 효과 셰이더 on the Unity Asset Store.\" data-og-host=\"assetstore.unity.com\" data-og-source-url=\"https://assetstore.unity.com/packages/vfx/shaders/stylized-water-2-170386?aid=1100lkbzf&amp;pubref=22BFxWER\" data-og-url=\"https://assetstore.unity.com/packages/vfx/shaders/stylized-water-2-170386?aid=1100lkbzf&amp;pubref=22BFxWER\" data-og-image=\"https://scrap.kakaocdn.net/dn/cQMU03/hyYIjferAr/EIMGkVYVKIm3EYRKgrXks1/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/I2zTQ/hyYFyjOwDN/W09BMK9n6fTPlgDsYnQulK/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630\"><a href=\"https://assetstore.unity.com/packages/vfx/shaders/stylized-water-2-170386?aid=1100lkbzf&amp;pubref=22BFxWER\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://assetstore.unity.com/packages/vfx/shaders/stylized-water-2-170386?aid=1100lkbzf&amp;pubref=22BFxWER\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/cQMU03/hyYIjferAr/EIMGkVYVKIm3EYRKgrXks1/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/I2zTQ/hyYFyjOwDN/W09BMK9n6fTPlgDsYnQulK/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Stylized Water 2 | 시각 효과 셰이더 | Unity Asset Store</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Add depth to your next project with Stylized Water 2 from Staggart Creations. Find this &amp; more 시각 효과 셰이더 on the Unity Asset Store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">assetstore.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?time_continue=14&amp;v=BRRejyG5Vtc&amp;embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&amp;embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&amp;source_ve_path=MjM4NTE\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?time_continue=14&amp;v=BRRejyG5Vtc&amp;embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&amp;embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&amp;source_ve_path=MjM4NTE</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=BRRejyG5Vtc\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dFPY0G/hyYL42o1Ek/rKeKB3lDnTpfPWsSbyZ9J0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/QezjM/hyYH9wVTUi/lvhIjN3Qalg7fgARasPFR1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Stylized Water 2 for Unity 2021-2023\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/BRRejyG5Vtc\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">4. 큐블리 Quibli:&nbsp;Anime&nbsp;Shaders&nbsp;and&nbsp;Tools</h2>\n<p data-ke-size=\"size16\">카툰 랜더링을 쉽게 해줍니다.</p>\n<p data-ke-size=\"size16\">모델이 딱히 좋지 못하다면 이걸로 발라버리면 색이 멋지게 나옵니다.</p>\n<p data-ke-size=\"size16\">애셋 링크: <a href=\"https://assetstore.unity.com/packages/vfx/quibli-anime-shaders-and-tools-203178?aid=1100lkbzf&amp;pubref=22BFxWER\">Quibli: Anime Shaders and Tools | VFX | Unity Asset Store</a></p>\n<figure id=\"og_1745517912913\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Quibli: Anime Shaders and Tools | 시각 효과 | Unity Asset Store\" data-og-description=\"Get the Quibli: Anime Shaders and Tools package from Dustyroom and speed up your game development process. Find this &amp; other 시각 효과 options on the Unity Asset Store.\" data-og-host=\"assetstore.unity.com\" data-og-source-url=\"https://assetstore.unity.com/packages/vfx/quibli-anime-shaders-and-tools-203178?aid=1100lkbzf&amp;pubref=22BFxWER\" data-og-url=\"https://assetstore.unity.com/packages/vfx/quibli-anime-shaders-and-tools-203178?aid=1100lkbzf&amp;pubref=22BFxWER\" data-og-image=\"https://scrap.kakaocdn.net/dn/Wyp7k/hyYIkLYSS7/2LKI03UR4bRmdv5pZ0Xlk1/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/VsoNC/hyYIkFcGgA/KqljHf72SyMHzcm2vHqIB1/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630\"><a href=\"https://assetstore.unity.com/packages/vfx/quibli-anime-shaders-and-tools-203178?aid=1100lkbzf&amp;pubref=22BFxWER\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://assetstore.unity.com/packages/vfx/quibli-anime-shaders-and-tools-203178?aid=1100lkbzf&amp;pubref=22BFxWER\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/Wyp7k/hyYIkLYSS7/2LKI03UR4bRmdv5pZ0Xlk1/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/VsoNC/hyYIkFcGgA/KqljHf72SyMHzcm2vHqIB1/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Quibli: Anime Shaders and Tools | 시각 효과 | Unity Asset Store</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Get the Quibli: Anime Shaders and Tools package from Dustyroom and speed up your game development process. Find this &amp; other 시각 효과 options on the Unity Asset Store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">assetstore.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=BD4Mpq8BqQk&amp;t=34s\">Quibli - Anime Shaders and Tools</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=BD4Mpq8BqQk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/380re/hyYIf4X26q/WB1gAebFtrZKUKKGzd7JJ0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/dtfVCG/hyYFBt4zPS/5KAc1mRLSzLKhhIDcVWjV1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Quibli - Anime Shaders and Tools\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/BD4Mpq8BqQk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이정도만 있으면 화면 조작으로 해볼만한건 다 할 수 있겠군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "1. 픽셀라이저 ProPixelizer\n픽셀라이저는 3D 환경을 픽셀 아트 처럼 보이도록하는 셰이더 입니다.\n아래는 설명\n영상: https://youtu.be/q4epArkvVnE?t=1034\n\n\n\n12분에 나옵니다.\n \n애셋 링크: bing.com/ck/a?!&&p=75737a337e71df6ed009a8ed37376a2d33afc7c860ba34cee95c9fb3c24d295aJmltdHM9MTc0NTAyMDgwMA&ptn=3&ver=2&hsh=4&fclid=103bf7f7-14f0-64e7-025e-e4ca15636503&psq=unity+asset+store+pro+pixelizer&u=a1aHR0cHM6Ly9hc3NldHN0b3JlLnVuaXR5LmNvbS9wYWNrYWdlcy92Zngvc2hhZGVycy9mdWxsc2NyZWVuLWNhbWVyYS1lZmZlY3RzL3Byb3BpeGVsaXplci1yZWFsdGltZS0zZC1waXhlbC1hcnQtMTc3ODc3Izp-OnRleHQ9QWRkJTIwZGVwdGglMjB0byUyMHlvdXIlMjBwcm9qZWN0JTIwd2l0aCUyMFByb1BpeGVsaXplciUyMC0sbW9yZSUyMFZGWCUyMG9wdGlvbnMlMjBvbiUyMHRoZSUyMFVuaXR5JTIwQXNzZXQlMjBTdG9yZS4&ntb=1\n\n \nunity asset store pro pixelizer - Bing\nBing은 지능적인 검색 기능은 사용자가 원하는 정보를 빠르게 검색하고 보상을 제공합니다.\nwww.bing.com\n\n \n애셋 홍보영상: ProPixelizer for Unity\n\n\n\n \n나중에 써보도록 하자\n \n2. 뷰티파이3 Beautify 3 \n설정해두면 3D 환경이 바로 멋지게 보입니다.\n애셋링크: Beautify 3 - Advanced Post Processing | Fullscreen & Camera Effects | Unity Asset Store\n\n \nBeautify 3 - Advanced Post Processing | 카메라 효과 | Unity Asset Store\nAdd depth to your project with Beautify 3 - Advanced Post Processing asset from Kronnect. Find this & more 시각 효과 options on the Unity Asset Store.\nassetstore.unity.com\n\n영상: https://www.youtube.com/watch?time_continue=18&v=aVuVNpSI0g4&embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&source_ve_path=MjM4NTE\n\n\n\n \n \n3. 스타일라이즈 워터 3 Stylized Water 2\n물을 편하게 만들어 주며 물위에 둥둥 뜬 물체를 표현해줍니다.\n애셋링크: Stylized Water 2 | VFX Shaders | Unity Asset Store\n\n \nStylized Water 2 | 시각 효과 셰이더 | Unity Asset Store\nAdd depth to your next project with Stylized Water 2 from Staggart Creations. Find this & more 시각 효과 셰이더 on the Unity Asset Store.\nassetstore.unity.com\n\n영상: https://www.youtube.com/watch?time_continue=14&v=BRRejyG5Vtc&embeds_referring_euri=https%3A%2F%2Fassetstore.unity.com%2F&embeds_referring_origin=https%3A%2F%2Fassetstore.unity.com&source_ve_path=MjM4NTE\n\n\n\n \n \n4. 큐블리 Quibli: Anime Shaders and Tools\n카툰 랜더링을 쉽게 해줍니다.\n모델이 딱히 좋지 못하다면 이걸로 발라버리면 색이 멋지게 나옵니다.\n애셋 링크: Quibli: Anime Shaders and Tools | VFX | Unity Asset Store\n\n \nQuibli: Anime Shaders and Tools | 시각 효과 | Unity Asset Store\nGet the Quibli: Anime Shaders and Tools package from Dustyroom and speed up your game development process. Find this & other 시각 효과 options on the Unity Asset Store.\nassetstore.unity.com\n\n영상: Quibli - Anime Shaders and Tools\n\n\n\n \n \n이정도만 있으면 화면 조작으로 해볼만한건 다 할 수 있겠군요",
        "guid": "http://serverdown.tistory.com/1277",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰",
          "유니티"
        ],
        "isoDate": "2025-04-20T06:48:46.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": []
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": [
      {
        "creator": "megayuchi",
        "title": "기아플렉스 ev6 48시간 대여 후기.",
        "link": "https://megayuchi.com/2025/04/25/%ea%b8%b0%ec%95%84%ed%94%8c%eb%a0%89%ec%8a%a4-ev6-48%ec%8b%9c%ea%b0%84-%eb%8c%80%ec%97%ac-%ed%9b%84%ea%b8%b0/",
        "pubDate": "Fri, 25 Apr 2025 08:01:24 +0000",
        "content:encodedSnippet": "기아플렉스로 48시간 대여한 ev6 반납완료.\n원래대로라면 내일 오전 10시 반납이지만 더 운행할 일이 없는데 폭탄을 안고 있을 이유가 없다. 작은 상처라도 나면 내가 변상해야 하므로 스트레스 받기 싫어서 조기 반납했다.\n차는 좋았다. 예상대로 좋았고 나한테 잘 맞았다.\n다만 제주도에서 렌트하는 것과는 달리 100%면책 보험같은게 없는게 큰 문제다.\n자기부담금 50만원의 대인/대물 보험만 있고 여기서 사이드미러, 휠, 타이어 등은 보상이 안된다. 문콕이나 범퍼 스크래치같은건 어차피 수리비 50이 안되는 경우가 대부분이므로 사실상 보험처리가 안된다. 이런 손상의 경우 고객한테 수리비가 그대로 청구된다.\n검색해보면 ‘내가 한거 아닌것 같은데 나중에 수리비 청구서 받았다’는 글이 몇 개 있다. 인기가 많아서 차량 예약이 힘들다는데 광고성 훼이크 후기만 있지 제대로 된 후기는 별로 없다.\n차를 수령했을때 배송기사분이 사진을 찍으면서 차량에 문제가 없다고 말씀하셨는데 혹시 몰라서 내 쪽에서도 사진을 찍어뒀었다. 몇 시간 뒤에 pc에서 사진을 확인해보니 미세한 문콕이 2개 있었다. 기아플렉스에서 보내온 문자에 보면 차량 수령시 스크래치등을 발견하면 사진을 촬영해서 고객센터 이메일로 보내달라고 적혀있다. 따라서 차량 수령시 내쪽에서 촬영한 사진을 설명 적어서 대표이메일로 보냈다.\n애초에 이런건 차량 출고할 때 검수해서 다음번 사용자한테 고지해줬어야 하는거 아닌가? 이거 내가 사진 안찍어뒀으면 내 책임으로 돌아올 수 있는 건이다.\n나와 무관한 원래 있던 손상으로도 덤태기 쓸까봐 스트레스를 받는데 대여기간 중에 문콕테러를 당하거나 돌빵이라도 맞으면 어찌하나? \n어쨌든 최대한 조심해서 문콕 안당하고 스크래치 안만들고 마지막 확인 촬영까지 했고 오후 4시30분에 배송기사분이 차를 인수해갔다.\n이런건 결국 완전면책 제도가 없으면 불안감이 사라질 수가 없다. 내가 아무리 조심해도 문콕 테러나 돌빵 같은건 100% 피할 수가 없으니까.\n그런고로 다시는 이용하지 않을 생각.\n통장잔고 20억 되면 내 명의로 뽑고, 아니면 그냥 집차나 가끔 타고 제주도 가서 렌트나 해야지.",
        "dc:creator": "megayuchi",
        "comments": "https://megayuchi.com/2025/04/25/%ea%b8%b0%ec%95%84%ed%94%8c%eb%a0%89%ec%8a%a4-ev6-48%ec%8b%9c%ea%b0%84-%eb%8c%80%ec%97%ac-%ed%9b%84%ea%b8%b0/#respond",
        "content": "기아플렉스로 48시간 대여한 ev6 반납완료. 원래대로라면 내일 오전 10시 반납이지만 더 운행할 일이 없는데 폭탄을 안고 있을 이유가 없다. 작은 상처라도 나면 내가 변상해야 하므로 스트레스 받기 싫어서 조기 반납했다. 차는 좋았다. 예상대로 좋았고 나한테 잘 맞았다. 다만 제주도에서 렌트하는 것과는 달리 100%면책 보험같은게 없는게 큰 문제다. 자기부담금 50만원의 대인/대물 보험만 있고 여기서 사이드미러, 휠, &#8230; <a class=\"more-link\" href=\"https://megayuchi.com/2025/04/25/%ea%b8%b0%ec%95%84%ed%94%8c%eb%a0%89%ec%8a%a4-ev6-48%ec%8b%9c%ea%b0%84-%eb%8c%80%ec%97%ac-%ed%9b%84%ea%b8%b0/\">More <span class=\"screen-reader-text\">기아플렉스 ev6 48시간 대여&#160;후기.</span></a>",
        "contentSnippet": "기아플렉스로 48시간 대여한 ev6 반납완료. 원래대로라면 내일 오전 10시 반납이지만 더 운행할 일이 없는데 폭탄을 안고 있을 이유가 없다. 작은 상처라도 나면 내가 변상해야 하므로 스트레스 받기 싫어서 조기 반납했다. 차는 좋았다. 예상대로 좋았고 나한테 잘 맞았다. 다만 제주도에서 렌트하는 것과는 달리 100%면책 보험같은게 없는게 큰 문제다. 자기부담금 50만원의 대인/대물 보험만 있고 여기서 사이드미러, 휠, … More 기아플렉스 ev6 48시간 대여 후기.",
        "guid": "http://megayuchi.com/?p=7092",
        "categories": [
          "Pub",
          "ev6",
          "렌트카",
          "기아플렉스"
        ],
        "isoDate": "2025-04-25T08:01:24.000Z"
      }
    ]
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": [
      {
        "creator": "Sangkon Han",
        "title": "내 맘대로 위클리 뉴스 - 2025년 15주(2025.04.13 - 2025.04.19)",
        "link": "https://www.sangkon.com/sigmadream_weekly_2025_15/",
        "pubDate": "Sat, 19 Apr 2025 18:53:00 GMT",
        "content:encodedSnippet": "Python\n14 Advanced Python Features\n이 기사는 파이썬의 단순한 팁을 넘어선 14가지 고급 기능들을 소개하며, 각 기능에 대한 설명, 예제 코드, 추가 자료 링크를 제공합니다.\nIs Python Code Sensitive to CPU Caching?\n파이썬에서도 CPU 캐시 효과가 성능에 큰 영향을 미치는지 실험한 결과, 리스트 크기가 커질수록 순차 접근 대비 무작위 접근 속도가 현저히 느려짐(최대 약 3.8배)을 보여주어 캐시 효율성을 고려할 필요가 있음을 시사합니다.\nJavaScript\nAdvanced React in the Wild\n\n이 기사는 2022년부터 2025년까지 실제 React/Next.js 프로덕션 사례 연구를 통해 성능 최적화, 렌더링 전략, 캐싱, 상태 관리, 개발자 경험 및 접근성 등의 문제를 해결하고 사용자 경험을 개선한 고급 기법들을 분석합니다.\nOOP\nBuild a Model Context Protocol (MCP) server in C#\n\nC# SDK를 사용하여 AI 모델과 클라이언트 간 통신을 위한 Model Context Protocol(MCP) 서버를 구축하고, 데이터 통합 및 게시하는 방법을 설명하는 글입니다.\nEtc\nBuild the Linkedin \"Add experience\" form\nHow to build Hot Module Replacement in Python",
        "dc:creator": "Sangkon Han",
        "content": "<h2 id=\"python\">Python</h2>\n<ul>\n<li>\n<p><a href=\"https://blog.edward-li.com/tech/advanced-python-features/\">14 Advanced Python Features</a></p>\n<ul>\n<li>&#xC774; &#xAE30;&#xC0AC;&#xB294; &#xD30C;&#xC774;&#xC36C;&#xC758; &#xB2E8;&#xC21C;&#xD55C; &#xD301;&#xC744; &#xB118;&#xC5B4;&#xC120; 14&#xAC00;&#xC9C0; &#xACE0;&#xAE09; &#xAE30;&#xB2A5;&#xB4E4;&#xC744; &#xC18C;&#xAC1C;&#xD558;&#xBA70;, &#xAC01; &#xAE30;&#xB2A5;&#xC5D0; &#xB300;&#xD55C; &#xC124;&#xBA85;, &#xC608;&#xC81C; &#xCF54;&#xB4DC;, &#xCD94;&#xAC00; &#xC790;&#xB8CC;</li></ul></li></ul>",
        "contentSnippet": "Python\n14 Advanced Python Features\n이 기사는 파이썬의 단순한 팁을 넘어선 14가지 고급 기능들을 소개하며, 각 기능에 대한 설명, 예제 코드, 추가 자료",
        "guid": "6809370f256b8994e9fc1274",
        "categories": [
          "주간 뉴스"
        ],
        "isoDate": "2025-04-19T18:53:00.000Z"
      }
    ]
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "코드 품질 개선 기법 9편: 왔던 길을 되돌아가 보자",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-9",
        "pubDate": "Fri, 25 Apr 2025 02:10:00 GMT",
        "content": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "contentSnippet": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-9",
        "isoDate": "2025-04-25T02:10:00.000Z"
      },
      {
        "title": "LY Corporation의 프런트엔드 기술 동향을 알아보자! State of LY Frontend 2024 실시 보고서",
        "link": "https://techblog.lycorp.co.jp/ko/state-of-ly-frontend-2024-report",
        "pubDate": "Wed, 23 Apr 2025 07:30:00 GMT",
        "content": "LY Corporation에서는 2024년 10월에 사내 웹 프런트엔드 개발에 관여하는 사내 구성원을 대상으로 본인이 생각하는 2024년의 웹 프런트엔드 관련 근황 및 관련 툴 이...",
        "contentSnippet": "LY Corporation에서는 2024년 10월에 사내 웹 프런트엔드 개발에 관여하는 사내 구성원을 대상으로 본인이 생각하는 2024년의 웹 프런트엔드 관련 근황 및 관련 툴 이...",
        "guid": "https://techblog.lycorp.co.jp/ko/state-of-ly-frontend-2024-report",
        "isoDate": "2025-04-23T07:30:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": [
      {
        "title": "보법이 다른 B2B 디자인",
        "link": "https://spoqa.github.io/2025/04/21/b2b-design.html",
        "pubDate": "2025-04-21T00:00:00.000Z",
        "author": "김동환",
        "content": "<p>안녕하세요, 스포카에서 제품 디자인을 하고 있는 김동환(Donny)입니다.</p>\n\n<p>저는 이전에 콜드체인 이커머스와 O2O 매칭 서비스 등 B2C 제품 위주로 경력을 쌓아 왔고, B2B SaaS는 스포카에서 처음 경험했습니다. 이곳에서 제품을 만들며 디자이너로서 느낀 경험과 몇 가지 생각을 공유하고자 합니다.</p>\n\n<p>비슷한 도메인이라도 데이터를 중시하는 조직이 있는가 하면, 직관을 더 선호하는 조직도 있을 것입니다. 사업 분야, 규모, 조직의 성향과 전략에 따라 개인의 경험은 크게 달라질 수 있기 때문에 제 경험이 모든 B2B 조직을 대변할 수는 없다는 점을 미리 말씀드립니다.</p>\n\n<hr />\n\n<h2 id=\"첫인상\">첫인상</h2>\n\n<p>일단 이전에 담당했던 서비스들에 비해 <strong>제품 복잡도가 세 배는 더 높게 느껴졌습니다.</strong></p>\n\n<p>Vertical Solution답게 해결하려는 고객의 문제와 환경이 매우 특수했고, 서비스 정책 간의 상호 연관성과 깊이도 상당했습니다.</p>\n\n<p>예를 들어 키친보드에서는 전처리, 선주문, 레거시 ERP 호환 등 기존 식자재 매장의 특수성이 존재했으며, 운영 방식을 충분히 이해한 후에야 제품 개선이 가능했습니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/1.png\" />\n</figure>\n\n<h2 id=\"제품을-알아가는-과정\">제품을 알아가는 과정</h2>\n\n<p>조금 진부하게 들릴 수도 있지만, 그 어느 때보다 유저가 되어보려는 노력에 많은 에너지를 쏟았습니다. 한 번도 사용해본 적 없고, 일상과는 거리가 먼 제품을 만들어야 했기 때문입니다.</p>\n\n<p>단순히 소비자의 입장에서 공감하거나, <strong>퍼널을 따라가 보는 체험만으로는 개선점을 도출할 수 없었습니다.</strong> 실제로 이 툴을 업무에 사용하는 사람의 시선과 맥락에서 바라보는 것이 필요했습니다.</p>\n\n<p>B2B 제품은 특성상 기능이 많고 활용 형태도 다양했기 때문에, 입사 초기에는 이전 리서치 자료를 꼼꼼히 읽고, 다양한 방식으로 툴을 사용해 보며 제품을 익혔던 기억이 납니다.</p>\n\n<p>쉐도잉이 특히 도움이 되었습니다. 명확한 역할과 상황, 목표를 설정한 뒤, 메소드 연기처럼 진심을 담아 제품을 사용해 보는 체험 방식입니다.</p>\n\n<p>사실 그전까지는 일부러 사전 학습을 최소화한 채 제품을 탐색하는 것을 선호했습니다. 이해도가 낮은 이 시기에 Happy Case를 따라가며 제품을 경험하는 것이 기존 디자이너들과는 조금 다른 관점으로 제품을 바라볼 수 있는 기회라고 생각했기 때문입니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/2.png\" />\n</figure>\n\n<hr />\n\n<h2 id=\"인터뷰와-직관-드리븐\">인터뷰와 직관 드리븐</h2>\n\n<p>제품 개발에 대해 이야기해봅시다. 결론부터 말하자면 <strong>대부분의 일감은 고객 인터뷰를 기반으로 진행됩니다.</strong></p>\n\n<p>이 점은 Micro A/B 테스트를 진행하며 정량 데이터에 많은 가치를 두던 이전 조직의 환경과는 달랐기 때문에 개인적으로 인상 깊었던 부분이었습니다.</p>\n\n<p>제품 개발 방식이 이런 모습을 갖게 된 것에는 이유가 있었습니다.</p>\n\n<h3 id=\"트래픽이-적습니다\">트래픽이 적습니다</h3>\n\n<p>B2C 서비스 같은 경우 보통 십만에서 백만 단위의 트래픽이 일반적이지만, <strong>B2B는 유저 수 자체가 굉장히 적습니다.</strong> 대신 LTV나 CAC 관점에서 한 명 한 명의 유저가 훨씬 더 비싸고 가치 있는 편입니다.</p>\n\n<p>이런 환경에서는 트래픽 기반의 A/B 테스트 같은 실험을 반복하며 제품을 개선하기 어렵습니다. 설령 실험 기간을 길게 잡더라도 제품 내·외부의 변인을 통제하고 통계적으로 유의미한 결과를 얻기 힘든 조건입니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/3.png\" />\n</figure>\n\n<h3 id=\"지표-왜곡이-일어납니다\">지표 왜곡이 일어납니다</h3>\n\n<p>단순화 한 사례로 말씀드리자면, 아래 그래프는 매장이 앱에 들어와 주문을 완료하기까지의 구간별 잔존율입니다. 그래프만 보면 본격적으로 상품 탐색이 시작된 이후에는 중도 이탈이 거의 없는 형태입니다.</p>\n\n<p>하지만 애초에 탐색부터 시작하는 구매 퍼널이 과연 유저의 80%를 끝까지 이끌 수 있을까요? 모두가 정말 만족하고 있는 걸까요?</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/4.png\" />\n</figure>\n\n<p>유저 인터뷰와 VOC를 통해 주문 과정에서의 불만 사항을 확인할 수 있었습니다. 쉐도잉을 해보니 정말 헉 소리 날 정도로 불편하더군요. 그렇다면 왜 이런 불편함은 데이터로 보이지 않았을까요?</p>\n\n<p>바로 <strong>매장은 주문을 하지 않으면 장사를 할 수 없기 때문입니다.</strong> 불편해도 매장은 생업을 위해 주문을 해야 합니다. 그래서 사용성에 상관없이 이탈이 거의 없었던 것입니다.</p>\n\n<p>“그냥 다른 커머스로 시켜버리면 되는 거 아니야?”라고 생각할 수 있지만 매장은 한 유통사와 오랜 시간 거래하며 신뢰를 쌓아 온 관계를 쉽게 바꾸지 않는 특성을 가지고 있습니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/5.png\" />\n</figure>\n\n<p>이처럼 <strong>업무에 사용되는 제품</strong>에서는 사용자의 행동에 <strong>제약이나 강한 목적</strong>이 있기 때문에, 지표 왜곡이 빈번하게 발생합니다. 유저 인터뷰가 문제의 본질에 더 가까이 다가갈 수 있는 이유이기도 합니다.</p>\n\n<p>물론 정량 지표 역시 경향을 관찰하는 보조적 도구이자, 배포 이후 성과를 측정하는 데에 활용됩니다. 엄격한 통계적 유의미함을 갖추기보다는, 편향 가능성을 인정하고 사용하는 편입니다.</p>\n\n<h2 id=\"빛나는-디자이너\">빛나는 디자이너</h2>\n\n<p>인터뷰 드리븐은 특히 디자이너에게 매력적인 환경인 것 같습니다. 숫자만으로 결정을 내리기 힘든 상황에서, 시각 산출물로서 논리를 이어갈 수 있다는 점에서 디자이너의 Super Power가 부각된다고나 할까요?</p>\n\n<p>그동안 0.1% 앞에서 얼마나 많은 논리와 디자인이 매몰차게 거부됐나요. <strong>데이터 드리븐 환경에서는 직관이 거의 죄악에 가까웠습니다.</strong> 하지만 이곳에서는 유저 행동의 행간을 읽고, 여러 형태의 근거를 모아 판단합니다. 그리고 내가 만든 것의 가치가 온전히 전달되었는지 세심하게 관찰합니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/6.png\" />\n</figure>\n\n<h2 id=\"제품-사용-설명서\">제품 사용 설명서</h2>\n\n<p>유저에게 제품을 이해시키는 방법으로 FAQ, Help 페이지를 적극적으로 활용하는 것 또한 신기한 점 중 하나였습니다.</p>\n\n<p>제품 특성상 기능이 많기 때문에 어중간하게 요약해 설명하거나 복잡도가 높은 화면을 만들기보다는, 과감하게 사용 설명서로 링크를 시키거나 온보딩을 담당하는 영업팀에 도움을 요청하는 방식으로 풀어나가는 점이 새로웠습니다.</p>\n\n<figure>\n  <img src=\"/images/2025-04-07/7.png\" />\n</figure>\n\n<h2 id=\"페르소나의-중요성\">페르소나의 중요성</h2>\n\n<p>사실 B2B, B2C를 떠나 우리의 제품과 기능이 누구를 위한 것인지에 대한 <strong>뾰족한 설정</strong>은 너무나도 기본적인 부분입니다.</p>\n\n<p>하지만 초기 B2B 같은 경우, 고객사 하나하나가 소중하기 때문에 <strong>모든 요청과 의견을 동일하게 평가하는 실수</strong>를 자주 저지릅니다.</p>\n\n<p>페르소나가 없다면 정말 필요한 문제에 힘을 쏟지 못하고, 이런저런 업무를 맴돌며 늘 바쁜 상태에 놓이게 됩니다. <strong>그럴 때일수록 천천히 문제 정의부터 돌아봐야 합니다.</strong> 그렇지 않으면 공급자만 만족하고 정작 사용자는 외면하는.. 표면적인 문제만 해결하는 무언가를 만들 확률이 아주 높아집니다.</p>\n\n<p>이건 스스로에게 하는 말이기도 합니다.</p>\n\n<hr />\n\n<h2 id=\"본질\">본질</h2>\n\n<p>B2B든 B2C든 본질은 똑같았습니다.</p>\n\n<p><strong>누구에게, 무엇을, 어떻게, 왜 제공할지를 뾰족하게 정하고, 그것을 효과적으로 수행할 수 있는 방법을 탐구하는 것.</strong></p>\n\n<p>쉬워 보이면 쉬운 일이고, 어렵게 느껴지면 너무나도 어려운 그 본질 자체는 같았습니다.</p>\n\n<h2 id=\"시장-관점에서-b2b\">시장 관점에서 B2B</h2>\n\n<p>마치며, 여담으로 사실 B2B 도메인을 선택한 데에는 시장 관점의 판단도 있었습니다.</p>\n\n<p>거시적인 관점에서 바라본 B2B는, 쉬운 문제가 대부분 해결된 시장에서 여전히 성장 동력이 많이 남아 있는 영역으로 보였습니다. 고객 영업과 획득이 어렵지만, 그만큼 Lock-in도 강해 변동성이 큰 시장 상황에서도 현금 흐름을 예측할 수 있고, 하방이 비교적 단단하다는 장점이 있다고 생각했습니다.</p>\n\n<p>물론 우리가 열광했던 폭발적인 J 형태의 성장 곡선은 기대하기 어렵지만, 상대적으로 안정적인 구조임은 분명해 보였습니다. 지금처럼 저성장·긴축·불안정성이 높은 시장 분위기에서는 오히려 더 매력적인 포지션이 아닐까 싶었습니다.</p>\n\n<p>뭔가 주식 블로그처럼 마무리된 느낌이네요. 아무튼, 이런 도전적인 시기에도 유·무형의 가치를 만들기 위해 애쓰는 메이커 여러분 모두를 진심으로 응원하며 글을 마치겠습니다.</p>\n\n<p>시간 내어 읽어주셔서 감사합니다.</p>\n",
        "contentSnippet": "안녕하세요, 스포카에서 제품 디자인을 하고 있는 김동환(Donny)입니다.\n저는 이전에 콜드체인 이커머스와 O2O 매칭 서비스 등 B2C 제품 위주로 경력을 쌓아 왔고, B2B SaaS는 스포카에서 처음 경험했습니다. 이곳에서 제품을 만들며 디자이너로서 느낀 경험과 몇 가지 생각을 공유하고자 합니다.\n비슷한 도메인이라도 데이터를 중시하는 조직이 있는가 하면, 직관을 더 선호하는 조직도 있을 것입니다. 사업 분야, 규모, 조직의 성향과 전략에 따라 개인의 경험은 크게 달라질 수 있기 때문에 제 경험이 모든 B2B 조직을 대변할 수는 없다는 점을 미리 말씀드립니다.\n첫인상\n일단 이전에 담당했던 서비스들에 비해 제품 복잡도가 세 배는 더 높게 느껴졌습니다.\nVertical Solution답게 해결하려는 고객의 문제와 환경이 매우 특수했고, 서비스 정책 간의 상호 연관성과 깊이도 상당했습니다.\n예를 들어 키친보드에서는 전처리, 선주문, 레거시 ERP 호환 등 기존 식자재 매장의 특수성이 존재했으며, 운영 방식을 충분히 이해한 후에야 제품 개선이 가능했습니다.\n제품을 알아가는 과정\n조금 진부하게 들릴 수도 있지만, 그 어느 때보다 유저가 되어보려는 노력에 많은 에너지를 쏟았습니다. 한 번도 사용해본 적 없고, 일상과는 거리가 먼 제품을 만들어야 했기 때문입니다.\n단순히 소비자의 입장에서 공감하거나, 퍼널을 따라가 보는 체험만으로는 개선점을 도출할 수 없었습니다. 실제로 이 툴을 업무에 사용하는 사람의 시선과 맥락에서 바라보는 것이 필요했습니다.\nB2B 제품은 특성상 기능이 많고 활용 형태도 다양했기 때문에, 입사 초기에는 이전 리서치 자료를 꼼꼼히 읽고, 다양한 방식으로 툴을 사용해 보며 제품을 익혔던 기억이 납니다.\n쉐도잉이 특히 도움이 되었습니다. 명확한 역할과 상황, 목표를 설정한 뒤, 메소드 연기처럼 진심을 담아 제품을 사용해 보는 체험 방식입니다.\n사실 그전까지는 일부러 사전 학습을 최소화한 채 제품을 탐색하는 것을 선호했습니다. 이해도가 낮은 이 시기에 Happy Case를 따라가며 제품을 경험하는 것이 기존 디자이너들과는 조금 다른 관점으로 제품을 바라볼 수 있는 기회라고 생각했기 때문입니다.\n인터뷰와 직관 드리븐\n제품 개발에 대해 이야기해봅시다. 결론부터 말하자면 대부분의 일감은 고객 인터뷰를 기반으로 진행됩니다.\n이 점은 Micro A/B 테스트를 진행하며 정량 데이터에 많은 가치를 두던 이전 조직의 환경과는 달랐기 때문에 개인적으로 인상 깊었던 부분이었습니다.\n제품 개발 방식이 이런 모습을 갖게 된 것에는 이유가 있었습니다.\n트래픽이 적습니다\nB2C 서비스 같은 경우 보통 십만에서 백만 단위의 트래픽이 일반적이지만, B2B는 유저 수 자체가 굉장히 적습니다. 대신 LTV나 CAC 관점에서 한 명 한 명의 유저가 훨씬 더 비싸고 가치 있는 편입니다.\n이런 환경에서는 트래픽 기반의 A/B 테스트 같은 실험을 반복하며 제품을 개선하기 어렵습니다. 설령 실험 기간을 길게 잡더라도 제품 내·외부의 변인을 통제하고 통계적으로 유의미한 결과를 얻기 힘든 조건입니다.\n지표 왜곡이 일어납니다\n단순화 한 사례로 말씀드리자면, 아래 그래프는 매장이 앱에 들어와 주문을 완료하기까지의 구간별 잔존율입니다. 그래프만 보면 본격적으로 상품 탐색이 시작된 이후에는 중도 이탈이 거의 없는 형태입니다.\n하지만 애초에 탐색부터 시작하는 구매 퍼널이 과연 유저의 80%를 끝까지 이끌 수 있을까요? 모두가 정말 만족하고 있는 걸까요?\n유저 인터뷰와 VOC를 통해 주문 과정에서의 불만 사항을 확인할 수 있었습니다. 쉐도잉을 해보니 정말 헉 소리 날 정도로 불편하더군요. 그렇다면 왜 이런 불편함은 데이터로 보이지 않았을까요?\n바로 매장은 주문을 하지 않으면 장사를 할 수 없기 때문입니다. 불편해도 매장은 생업을 위해 주문을 해야 합니다. 그래서 사용성에 상관없이 이탈이 거의 없었던 것입니다.\n“그냥 다른 커머스로 시켜버리면 되는 거 아니야?”라고 생각할 수 있지만 매장은 한 유통사와 오랜 시간 거래하며 신뢰를 쌓아 온 관계를 쉽게 바꾸지 않는 특성을 가지고 있습니다.\n이처럼 업무에 사용되는 제품에서는 사용자의 행동에 제약이나 강한 목적이 있기 때문에, 지표 왜곡이 빈번하게 발생합니다. 유저 인터뷰가 문제의 본질에 더 가까이 다가갈 수 있는 이유이기도 합니다.\n물론 정량 지표 역시 경향을 관찰하는 보조적 도구이자, 배포 이후 성과를 측정하는 데에 활용됩니다. 엄격한 통계적 유의미함을 갖추기보다는, 편향 가능성을 인정하고 사용하는 편입니다.\n빛나는 디자이너\n인터뷰 드리븐은 특히 디자이너에게 매력적인 환경인 것 같습니다. 숫자만으로 결정을 내리기 힘든 상황에서, 시각 산출물로서 논리를 이어갈 수 있다는 점에서 디자이너의 Super Power가 부각된다고나 할까요?\n그동안 0.1% 앞에서 얼마나 많은 논리와 디자인이 매몰차게 거부됐나요. 데이터 드리븐 환경에서는 직관이 거의 죄악에 가까웠습니다. 하지만 이곳에서는 유저 행동의 행간을 읽고, 여러 형태의 근거를 모아 판단합니다. 그리고 내가 만든 것의 가치가 온전히 전달되었는지 세심하게 관찰합니다.\n제품 사용 설명서\n유저에게 제품을 이해시키는 방법으로 FAQ, Help 페이지를 적극적으로 활용하는 것 또한 신기한 점 중 하나였습니다.\n제품 특성상 기능이 많기 때문에 어중간하게 요약해 설명하거나 복잡도가 높은 화면을 만들기보다는, 과감하게 사용 설명서로 링크를 시키거나 온보딩을 담당하는 영업팀에 도움을 요청하는 방식으로 풀어나가는 점이 새로웠습니다.\n페르소나의 중요성\n사실 B2B, B2C를 떠나 우리의 제품과 기능이 누구를 위한 것인지에 대한 뾰족한 설정은 너무나도 기본적인 부분입니다.\n하지만 초기 B2B 같은 경우, 고객사 하나하나가 소중하기 때문에 모든 요청과 의견을 동일하게 평가하는 실수를 자주 저지릅니다.\n페르소나가 없다면 정말 필요한 문제에 힘을 쏟지 못하고, 이런저런 업무를 맴돌며 늘 바쁜 상태에 놓이게 됩니다. 그럴 때일수록 천천히 문제 정의부터 돌아봐야 합니다. 그렇지 않으면 공급자만 만족하고 정작 사용자는 외면하는.. 표면적인 문제만 해결하는 무언가를 만들 확률이 아주 높아집니다.\n이건 스스로에게 하는 말이기도 합니다.\n본질\nB2B든 B2C든 본질은 똑같았습니다.\n누구에게, 무엇을, 어떻게, 왜 제공할지를 뾰족하게 정하고, 그것을 효과적으로 수행할 수 있는 방법을 탐구하는 것.\n쉬워 보이면 쉬운 일이고, 어렵게 느껴지면 너무나도 어려운 그 본질 자체는 같았습니다.\n시장 관점에서 B2B\n마치며, 여담으로 사실 B2B 도메인을 선택한 데에는 시장 관점의 판단도 있었습니다.\n거시적인 관점에서 바라본 B2B는, 쉬운 문제가 대부분 해결된 시장에서 여전히 성장 동력이 많이 남아 있는 영역으로 보였습니다. 고객 영업과 획득이 어렵지만, 그만큼 Lock-in도 강해 변동성이 큰 시장 상황에서도 현금 흐름을 예측할 수 있고, 하방이 비교적 단단하다는 장점이 있다고 생각했습니다.\n물론 우리가 열광했던 폭발적인 J 형태의 성장 곡선은 기대하기 어렵지만, 상대적으로 안정적인 구조임은 분명해 보였습니다. 지금처럼 저성장·긴축·불안정성이 높은 시장 분위기에서는 오히려 더 매력적인 포지션이 아닐까 싶었습니다.\n뭔가 주식 블로그처럼 마무리된 느낌이네요. 아무튼, 이런 도전적인 시기에도 유·무형의 가치를 만들기 위해 애쓰는 메이커 여러분 모두를 진심으로 응원하며 글을 마치겠습니다.\n시간 내어 읽어주셔서 감사합니다.",
        "id": "https://spoqa.github.io/2025/04/21/b2b-design.html",
        "isoDate": "2025-04-21T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "언젠가는",
        "link": "https://www.thestartupbible.com/2025/04/your-time-will-come-someday.html",
        "pubDate": "Wed, 23 Apr 2025 20:01:00 +0000",
        "content:encodedSnippet": "2주 전 열렸던 2025년도 마스터스 골프 대회를 드디어 로리 맥길로이가 우승했다. 맥길로이가 2009년도를 시작으로 그동안 17번이나 마스터스에 참가했는데, 탑텐은 여러 번 했고 준우승도 한 번 했지만, 우승은 이번이 처음이었다. 16년 만에 거머쥔 우승 트로피였고, 그 누구보다 우승을 간절히 원했던 선수였기 때문에, 이번 우승은 나에게도 굉장히 감동적으로 다가왔다.\n우승 인터뷰에서 맥길로이가 이런 말을 했다. “과연 내가 이 대회를 우승할 수 있을지 의문하기 시작했다.(I started to wonder if my time would ever come)”. 그가 울먹이면서 이 말을 하는 그 순간, 바로 우리가 투자한 창업가들의 모습이 그대로 떠올랐다.\n맥길로이가 마스터스 대회에 첫 출전 했을 때의 나이가 18살이었다. 엄청난 거물 신인이었고, 그의 기세와 실력은 마스터스 대회를 한 10번은 우승할 수 있을 것 같았다. 첫 출전부터 우승을 노렸지만, 우승하지 못했을 때 그의 심정은, “첫 출전이니까 괜찮아. 나는 젊고 앞으로 기회는 너무 많아. 내년엔 우승해야지.” 정도이지 않았을까 생각한다. 그런데 그다음 해에도 우승에 실패했다. 이번에도 “괜찮아. 난 아직 10대야. 내년에 이기면 돼.”라고, 생각했을 것이다. 하지만, 3년 차도 우승하지 못했고, 그다음에도 못 했고, 수년 동안 계속 우승에 실패했다. 어떤 해엔 우승에 가까이 갔지만, 반면에 형편없는 성적으로 마친 적도 많다. 그러면서 맥길로이도 20대가 됐고, 다시 30대가 됐다. 체력도 예전 같지가 않고, 민첩성과 시력도 떨어지면서 더 이상 “내년에 우승하면 돼.”라는 자신감보단, “내가 과연 우승할 수 있을까?”라는 의구심이 마음을 지배하기 시작했다.\n나는 맥길로이는 개인적으로 모르지만, 그가 지난 17년 동안 마스터스 대회에 대해서 느꼈던 이 감정의 변화는 아주 정확하게 이해한다. 나도 스트롱을 운영하면서 비슷한 과정을 겪었고, 지금 이 순간에도 우리가 투자한 창업가들이 맥길로이가 거친 과정을 그대로 경험하고 있기 때문이다.\n먼저, 스트롱 이야기를 해보자. 2012년도에 우린 1호 펀드를 만들었고, 2015년도에 2호 펀드를 만들었다. VC를 처음 시작할 땐, TechCrunch나 WSJ에서 읽는 것처럼, 우리도 좋은 회사에 투자해서 50배, 100배의 수익을 만들 수 있다는 자신감과 순진한 희망으로 가득 차 있었다. 투자를 시작하고, 첫 2년이 지났을 땐 “이 회사들은 아직 시간이 걸려. 조금만 더 지나면 엑싯이 한두 개는 나올 거야.”라는 희망과 자신감이 아직 충만했다. 그런데 3년, 그리고 4년이 지나면서 이 희망이 서서히 의구심으로 바뀌기 시작했다. 유니콘이 될 거로 생각했던 투자사들이 점점 더 싹수가 노래 보이면서, 과연 이 중 엑싯이 하나라도 나올지 스스로에게 의문하기 시작했다. 그리고 이 의구심은 시간이 갈수록 점점 더 조바심과 절망감으로 매우 빠르게 바뀌면서 “나는 과연 투자해서 돈을 벌 수 있을까? 나에게도 엑싯이라는게 생길까?”를 의문하기 시작했다. 하지만, 내가 하는 투자가 맞다면 언젠가는 좋은 결실을 볼 것이라는 믿음을 억지로라도 스스로에게 주입하면서 계속 버텼고, 2017년도에 우리가 가장 먼저 투자했던 코빗이 좋은 엑싯을 했다. 이를 계기로 그동안 쌓인 의구심이 다시 자신감과 희망으로 바뀌었고, 이후 우린 계속 좋은 투자를 할 수 있게 됐다. 하지만, 이 과정에서 나는 맥길로이가 겪었던 그 똑같은 희망 -> 의심 -> 절망, 변화의 과정을 거쳤고, 이게 정확히 어떤 감정인지 잘 이해하고 있다.\n우리가 투자한 창업가들도 모두 다 이런 과정을 경험한다. 아마도 대부분 5년 정도 사업하면 좋은 엑싯을 하거나, 회사가 괄목할 만한 성장을 할 것이라는 희망을 품고 창업했을 것이다. 하지만, 사업이라는 게 생각보다 어렵다. 첫 1년은 개고생인데, 이때만 해도 체력도 있고, 희망도 있고, 자신감도 있어서 “한 2년만 더 하면 잘할 수 있을 거야”라는 생각으로 더 열심히 한다. 제품도 열심히 만들고, 펀딩도 열심히 하고, 좋은 사람도 열심히 채용한다. 하지만, 잘 안된다. 제품을 아무리 잘 만들어도 고객은 안 생기고, 수많은 투자자를 만나지만 그 누구도 돈은 안 주고, 아무도 우리 회사에 오려고 하지 않는다. 그래도 계속 희망과 자신감으로 몇 년을 더 버틴다. 딱 일 년만 더 하면 모든 게 잘될 거라는 생각으로. 이 과정을 거치면서 10년이라는 세월이 흐른다. 회사는 안 망했지만, 창업 초기에 꿈꿨던 성장은 아직도 너무 멀리 있고, 이 10년 동안 창업가의 희망은 의구심으로 바뀌면서 “과연 내가 이 사업을 성공시킬 수 있을까?”라는 질문을 스스로에게 매일 하게 된다. 이게 요새 내가 거의 매일 경험하는 상황이다.\n맥길로이가 걸어온 길과 그 감정의 변화를 나는 잘 알기 때문에, 내가 그를 그렇게 좋아하진 않지만, 그의 이번 마스터스 우승은 감동 그 자체였다. 그는 또, “꿈이 있으면 절대로 포기하지 마라. 다시 일어나서 도전해라. 계속 열심히 노력해라. 그러면 꿈을 이룩할 수 있을 것이다.”라는 이야기를 했다. 실은, 이 말은 누구나 다 할 수 있는 너무 뻔한 말이긴 하지만, 이 말을 하는 대부분의 사람은 이 말을 할 자격이 없지만, 맥길로이는 이 말을 할 수 있는 자격을 스스로 얻었다고 생각한다.\n우리 창업가들이 나에게 자주 물어본다. “대표님, 저도 이 미친 짓 한지가 이제 8년째인데요, 제가 과연 이 사업을 성공시킬 수 있을까요?”\n솔직히, 내가 대답하기에 굉장히 부담스럽고 어려운 질문이라서 나도 항상 생각을 많이 하는데, 그럼에도 내 대답은 항상 “지금까지 안 망했으면 뭔가는 제대로 하고 있다고 생각해요. 계속 도전하고, 계속 열심히 하다 보면 언젠가는 기회가 올 것입니다.”이다.\n그 언젠가가 정말로 언제일진 나도 잘 모르겠지만, 언젠가는 할 수 있다는 믿음조차 없다면 우린 이 험난하고 미친 여정을 계속할 수 없을 것이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/04/your-time-will-come-someday.html#respond",
        "content": "2주 전 열렸던 2025년도 마스터스 골프 대회를 드디어 로리 맥길로이가 우승했다. 맥길로이가 2009년도를 시작으로 그동안 17번이나 마스터스에 참가했는데, 탑텐은 여러 번 했고 준우승도 한 번 했지만, 우승은 이번이 처음이었다. 16년 만에 거머쥔 우승 트로피였고, 그 누구보다 우승을 간절히 원했던 선수였기 때문에, 이번 우승은 나에게도 굉장히 감동적으로 다가왔다. 우승 인터뷰에서 맥길로이가 이런 말을 했다. “과연 내가(...)",
        "contentSnippet": "2주 전 열렸던 2025년도 마스터스 골프 대회를 드디어 로리 맥길로이가 우승했다. 맥길로이가 2009년도를 시작으로 그동안 17번이나 마스터스에 참가했는데, 탑텐은 여러 번 했고 준우승도 한 번 했지만, 우승은 이번이 처음이었다. 16년 만에 거머쥔 우승 트로피였고, 그 누구보다 우승을 간절히 원했던 선수였기 때문에, 이번 우승은 나에게도 굉장히 감동적으로 다가왔다. 우승 인터뷰에서 맥길로이가 이런 말을 했다. “과연 내가(...)",
        "guid": "https://www.thestartupbible.com/?p=9433",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "hustle",
          "sports",
          "Strong"
        ],
        "isoDate": "2025-04-23T20:01:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "미친 사람들과 같이 일하기",
        "link": "https://www.thestartupbible.com/2025/04/working-with-crazy-people.html",
        "pubDate": "Sun, 20 Apr 2025 21:41:00 +0000",
        "content:encodedSnippet": "미친 사람들. 이게 내가 요새 우리 투자사 창업가들과 만날 때마다 내 머릿속에 떠오르는 단어다.\n우리가 투자한 창업가들은 본인들의 사업이 잘되든, 잘 안되든, 내가 지금까지 만난 모든 직장인 중 일 잘하는 순위를 매겨보면 상위 1%에 들어가는 분들이다. 일을 좀 하는 분들이 아니라, 오지게 잘하는 분들이고, 남이 만들어 놓은 회사에서 직장인 생활을 하면 날아다닐 정도로 야무지게, 그리고 진취적으로 일하고, 어떻게 해서든지 결과를 만드는 그릿이 있는 분들이다. 아마도 이들이 대기업에 취직한다면, 대부분 초고속 승진할 수 있는 잠재력이 있는 분들이다.\n그런데, 이렇게 똑똑하고 일 잘하는 사람들이 그냥 직장 생활을 하면 아주 잘 살 텐데, 굳이 그 누구도 강요하지 않은 힘든 창업의 길을 택한 걸 보면 정말로 미친 사람들인 것 같다. 솔직히 미치지 않았다면 이 진흙탕에 스스로 들어가서, 나오지도 못하면서 수년 동안 뒹굴지 못할 것이다. 어쨌든 내가 봤을 땐, 머리가 돌지 않고선, 이들이 선택한 ‘남이 덜 다닌 길’로 절대로 안 갈 것인데, 우리는 이미 280명이 넘는 이런 미친 사람들에게 투자했다니, 이것도 미친 짓이긴 하다.\n작년부터 올해 내내 너무 힘들어하는 창업가분들과 매일 만나고 있다. 어떤 분들은 우리가 투자한 지 1년이 안 됐지만, 어떤 분들은 우리가 옆에서 10년 이상 진흙탕에서 구르는 걸 보고 있는 분들이다. 항상 돈 없고, 항상 사람 없고, 항상 모든 게 쪼들리는 스타트업의 대표로 10년 동안 살아간다는 건 어떤 느낌일까? 내 앞의 대표님은 어떤 생각을 하고 계실까? 그들의 가족은 뭐라고 생각할까? 내가 이분들과 미팅하면 실시간으로 내 머릿속에서 계속 떠오르는 몇 가지 공통된 질문들이다.\n어떤 분들은 너무 힘들어서 죽을 것 같다고 하고, 어떤 분들은 내 앞에서 펑펑 울기도 한다. 나는 감정이 좀 메마른 인간이지만, 이런 분들을 보면 같이 펑펑 울어 주고 싶을 정도로 안쓰럽다. 그리고 빈말이 아니라 정말로 이들에게 그렇게 힘들면 그만하라고 한다. 우리가 투자한 회사의 대표에게 사업 그만하라는 말은 투자자로서는 아쉽지만, 같은 인간으로서는 최선을 다해서 인생을 살고 있는 분들에게 보여줄 수 있는 최소한의 예의라고 생각한다.\n그런데 참 신기한 건, 그렇게 힘들어하는 분들에게 그만하라고 해도 대부분 그 힘든 사업을 계속한다. 계속 한다고 잘 되는 것도 아니다. 오히려 더 힘든 것 같은데도 계속한다. 죽을 만큼 힘들어서 매일 포기하고 싶지만, 반대로 죽을 만큼 재미있어서 계속하고 싶다고 말하는데, 이런 말을 나는 들을 때마다 이분들이 미친 사람인 건 확실하고, 여기에다가 변태가 아닐까 하는 의심도 한다.\n하지만, 나는 이 미친 인간들을 너무 좋아한다. 이런 분들과 항상 같이 일하고, 힘들게 사업하는 걸 가까운 곳에서 보고, 조금이나마 도움이 될 수 있는 VC라는 직업은 나에겐 세상에서 가장 큰 특권이자 특혜라고 생각한다. 누가 보면 하찮은 사업이지만, 바퀴벌레같이 절대로 죽지 않고, 스스로 뭔가를 해보겠다는 시도를 하는, 이렇게 열심히 사는 사람들이 나는 정말 좋다. 원래 내 성향이 그냥 뭐든지 열심히 하는 사람들을 좋아했는데 – 나도 그런 편이다 – 초기 투자를 하면서 이런 사람들을 좋아하는 정도가 아니라 존경하고 사랑하게 됐다. 열심히 한다는 게 이렇게 글로 쓰면 별거 아닌 것 같지만, 이 세상에서 우리 창업가들만큼 열심히 사는 사람이 그렇게 많진 않다.\n이번 주도 이런 미친 사람들과의 미팅으로 일정이 빡빡하다. 솔직히 이렇게 힘들어하는 분들과 만나는 게 나도 육체적, 심리적으로 기가 많이 빨려서 힘들지만, 동시에 너무너무 즐겁다. 하시는 사업이 모두 다 잘 되길 바라지만, 이 중 대부분 망할 것이고, 실은 본인들도 그걸 알고 있다. 그런데도 편안한 길을 버리고 남이 덜 다닌 진흙탕과 가시밭을 맨발로 걸어 다니면서 아프지만 너무 즐겁다는 이 미친 인간들을 어떻게 안 좋아할 수 있을까?\n이 글을 다시 읽어보니 나도 이제 미친놈이 다 된 것 같다. 오늘도 모두 파이팅.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/04/working-with-crazy-people.html#comments",
        "content": "미친 사람들. 이게 내가 요새 우리 투자사 창업가들과 만날 때마다 내 머릿속에 떠오르는 단어다. 우리가 투자한 창업가들은 본인들의 사업이 잘되든, 잘 안되든, 내가 지금까지 만난 모든 직장인 중 일 잘하는 순위를 매겨보면 상위 1%에 들어가는 분들이다. 일을 좀 하는 분들이 아니라, 오지게 잘하는 분들이고, 남이 만들어 놓은 회사에서 직장인 생활을 하면 날아다닐 정도로 야무지게, 그리고(...)",
        "contentSnippet": "미친 사람들. 이게 내가 요새 우리 투자사 창업가들과 만날 때마다 내 머릿속에 떠오르는 단어다. 우리가 투자한 창업가들은 본인들의 사업이 잘되든, 잘 안되든, 내가 지금까지 만난 모든 직장인 중 일 잘하는 순위를 매겨보면 상위 1%에 들어가는 분들이다. 일을 좀 하는 분들이 아니라, 오지게 잘하는 분들이고, 남이 만들어 놓은 회사에서 직장인 생활을 하면 날아다닐 정도로 야무지게, 그리고(...)",
        "guid": "https://www.thestartupbible.com/?p=9431",
        "categories": [
          "Uncategorized",
          "failure",
          "FoundersAtWork",
          "hustle",
          "korea",
          "people",
          "Strong"
        ],
        "isoDate": "2025-04-20T21:41:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "2025 일하는 부모의 임신·출산·육아 부담을 덜어줄 제도 10가지: '출산전후 휴가급여’부터 '아동수당’까지",
        "link": "https://blog.toss.im/article/money-policies-40",
        "pubDate": "Fri, 25 Apr 2025 00:41:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}출산전후 휴가급여\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}출산전후(유산, 사산) 휴가를 사용하고, 고용보험 피보험 단위 기간이 180일 이상인 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}근로자에게 휴가급여 최대 210만 원을 지원합니다.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n지원 내용: 통상임금의 100% (상한액 월 210만 원)\n신청 방법: .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n배우자 출산휴가급여\n배우자 출산휴가를 사용하고 고용보험 피보험 단위 기간이 180일 이상인 우선지원대상기업 근로자에게 최대 160만 원을 지원합니다.\n\n\n지원 내용: 20일 유급휴가로 통상임금의 100% (상한액 약 160만 원)\n신청 방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n난임치료휴가급여\n난임치료 예정이거나, 난임치료를 하고 있는 남녀 근로자라면 연간 6일 이내의 휴가를 사용할 수 있어요. 우선지원대상기업 소속 근로자라면 난임치료휴가 기간 중 최초 2일에 대해서 급여를 지원받을 수 있습니다.\n\n\n지원 내용: 난임치료를 위해 연간 6일 이내의 휴가를 쓸 수 있고, 최초 2일은 유급(1일, 약 8만 원) 지원\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*2024. 10. 22일부터 난임치료휴가 청구 과정에서 알게 되는 질환이나 치료 내용 등의 정보를 누설하지 않도록 사업주의 비밀유지 의무도 신설되었어요.\n신청방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n임신기 근로시간 단축\n임신 12주 이내 또는 32주 이후인 근로자라면 1일 2시간의 근로시간을 단축할 수 있습니다.\n\n\n지원 내용: 임신 12주 이내 및 32주 이후, 1일 최대 2시간\n*고위험 임신부는 의사 진단을 받아 임신 전기간 사용 가능해요.\n신청 방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n첫만남 이용권\n아동양육에 필요한 것들을 준비할 수 있도록 출생아 1인당 200만 원 이상의 바우처를 지급합니다. 바우처는 아동출생일 2년간 사용 가능해요.\n\n\n지원 대상: 주민등록번호를 부여받은 아동 (2024년 1월 1일 이후 출생아로서 주민등록상 생년월일로부터 2년이 초과되지 않은 출생아)\n지원 내용: 출생아 1인당 200만 원 이상의 바우처 지급\n*시설보호아동의 경우 현금 지급\n*2024년 1월 1일 이후 출생아부터는 첫째아 200만 원, 둘째아 이상 300만 원 지급\n지원 시기: 신청 후 30일 이내\n신청 방법: 복지로 또는 아동 주소지 행정복지센터\n\n\n3~5세 유치원 학비\n국·공립 및 사립유치원을 다니는 아이에게 교육비와 방과 후 과정비를 지원합니다. 부모의 소득과 상관없이 지원받을 수 있어요.\n\n\n지원 대상: 국·공·사립유치원에 다니는 3~5세 유아\n지원 내용:\n\n국·공립유치원: 교육비 월 10만 원 + 방과 후 과정비 월 5만 원\n사립유치원: 교육비 월 28만 원 + 방과 후 과정비 월 7만 원\n*2025년의 경우 4~5세 유아에 대해 유치원 학비 매월 5만 원 추가 지원\n\n\n신청 방법: 복지로 또는 읍·면·동 행정복지센터\n문의: 0079에듀콜(1544-0079)\n\n\n아동수당\n8세 미만 모든 아동에게 매월 25일 10만 원씩 현금으로 지급합니다. 부모의 소득과 상관없이 초등학교 2학년의 생일이 속한 달 전까지 모두 받을 수 있어요.\n\n\n지원 대상: 국내에 거주하는 8세 미만(0~95개월) 대한민국 모든 아동\n*부모가 외국인이어도 아동이 한국 국적이라면 지원 가능\n지원 내용: 아동 1인당 매월 10만 원 지급\n신청 기간: 출생신고 후 언제든지 신청 가능\n신청 방법: 복지로, 아동 주소지 또는 거주지 등 전국 읍·면·동 행정복지센터\n\n\n육아휴직 급여\n고용보험 피보험 단위 기간이 180일 이상으로 8세 이하 또는 초등학교 2학년 이하 자녀를 둔 근로자라면 육아휴직 급여를 받을 수 있어요.\n\n\n지원 내용:\n\n육아휴직 1~3개월: 통상임금 100% (상한액 250만 원)\n육아휴직 4~6개월: 통상임금 100% (상한액 200만 원)\n육아휴직 7개월 이후: 통상임금 80% (상한액 160만 원)\n\n\n신청 방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n육아기 근로시간 단축급여\n육아기 근로시간 단축을 30일 이상 사용하고, 고용보험 피보험 단위 기간이 180일 이상인 근로자라면 근로시간 단축분에 대한 지원을 받을 수 있어요.\n\n\n지원 내용:\n\n매주 최초 10시간 단축분: 월 통상임금의 100% (상한액 220만 원, 하한액 50만 원)x(10/단축 전 소정근로시간)\n나머지 근로시간 단축분: 월 통상임금의 80%(상한액 150만 원, 하한액 50만원)x{(단축 전 소정근로시간-단축 후 소정근로시간-10)/단축 전 소정근로시간}\n\n\n신청 방법: 고용24 또는 거주지/사업장 소재지 관할 고용센터\n\n\n가족돌봄휴가\n급작스럽게 가족을 돌봐야 할 때, 연간 10일의 휴가를 사용할 수 있습니다. 사업주는 휴가를 허용해 주어야 하며, 무급휴가로 처리됩니다. (무급휴가여도 근속 기간에 포함해 계산)\n\n\n지원 대상: 긴급하게 돌봄이 필요한 가족*이 있는 근로자\n*자녀, 손자녀, 조부모, 부모, 배우자, 배우자의 부모\n사용 기간:\n\n연간 최장 10일 (연장되는 경우 20일, 한부모근로자는 25일)\n*1일 단위로 사용 가능해요\n\n\n신청 방법: 가족돌봄휴가 사용희망 날짜, 돌보는 대상인 가족의 성명과 생년월일 등에 대한 사항을 적은 문서를 사업주에게 제출\n\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희 이제현",
        "content": "대표적인 임신·출산·육아 지원정책 모아보기 ",
        "contentSnippet": "대표적인 임신·출산·육아 지원정책 모아보기",
        "guid": "https://blog.toss.im/article/money-policies-40",
        "isoDate": "2025-04-25T00:41:00.000Z"
      },
      {
        "title": "토스페이먼츠 ‘퀵계좌이체’, 출시 2년 만에 누적 이용자 수 650만명 돌파",
        "link": "https://blog.toss.im/article/tosspaymentsquick",
        "pubDate": "Thu, 24 Apr 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}주요 결제수단으로 성장… 누적 결제액 6500억원, 누적 가맹점 수 2.2만곳\n이용 편의성↑… 가맹점 수수료 부담↓… 보안성↑\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 전자지급결제대행(PG) 계열사 토스페이먼츠(대표 임한욱)가 2023년 4월 출시한 간편 계좌이체 서비스 ‘퀵계좌이체’의 누적 이용자 수가 2년 만에 650만명을 돌파했다고 24일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n퀵계좌이체는 커머스, 콘텐츠, 여행·항공 업종 등 결제 단계가 중요한 업종을 중심으로 주요 결제수단으로 자리잡고 있다. 누적 결제액은 6500억원, 누적 가맹점 수는 2만2000곳에 달한다.\n퀵계좌이체는 오픈뱅킹 기반의 거래 방식을 통해 복잡한 절차 없이 간편한 결제 경험을 제공한다. 실시간 계좌이체가 공인인증서를 요구하는 반면 퀵계좌이체는 인증서 설치 없이 손쉽게 계좌를 등록할 수 있다. 한 번 계좌를 등록하면 6자리 비밀번호로 토스페이먼츠 퀵계좌이체 가맹점 어디서나 간편한 결제가 가능하다. 등록한 휴대폰 번호로 현금영수증도 자동 발급된다.\n가맹점 입장에서 퀵계좌이체의 최대 강점은 수수료가 신용카드 대비 낮아 비용절감 효과가 크다는 점이다. 결제 성공률은 실시간 계좌이체보다 37.6%포인트 높은 87.2%이며 재사용률은 2.8배에 달한다. 결제 모듈 도입을 위한 연동 리소스도 다른 결제 방식 대비 적어 개발 인력이 부족한 중소사업자도 쉽게 도입할 수 있다.\n높은 보안성도 퀵계좌이체의 강점이다. 부정 거래 탐지 시스템(FDS, Fraud Detection System)을 통해 이상 거래 발생 시 자동으로 결제를 차단하거나 추가 인증을 요구하는 등의 안전 장치를 마련했다. 에스크로(Escrow, 결제대금 예치) 서비스도 지원한다. 이를 통해 가맹점과 소비자 모두가 신뢰할 수 있는 결제 환경을 제공한다.\n토스페이먼츠 관계자는 “퀵계좌이체는 전환율 개선과 수수료 절감이라는 실질적 효과를 기반으로 B2B 결제 수단으로서 입지를 넓혀가고 있다”며 “앞으로도 더 많은 가맹점과 소비자가 퀵계좌이체를 이용할 수 있도록 서비스를 지속 고도화하겠다”고 말했다.",
        "content": "누적 결제액 6500억원, 누적 가맹점 수 2.2만곳",
        "contentSnippet": "누적 결제액 6500억원, 누적 가맹점 수 2.2만곳",
        "guid": "https://blog.toss.im/article/tosspaymentsquick",
        "isoDate": "2025-04-24T01:00:00.000Z"
      },
      {
        "title": "프리랜서 종합소득세 신고, 이것만 알아도 충분해요",
        "link": "https://blog.toss.im/article/tossmoment-8",
        "pubDate": "Wed, 23 Apr 2025 04:53:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}5월은 프리랜서들에게 특히 바쁜 계절입니다. 종합소득세 신고를 위해 작년 매출을 정리하고, 차곡차곡 모아둔 지출 자료를 찾다 보면 어느새 하루는 훌쩍 지나가죠. 오랜 경력의 프리랜서들도 세금 신고는 매번 까다롭다고 말하는데, 하물며 이제 막 프리랜서 세계에 발 디딘 분들에게는 이게 얼마나 복잡하고 어려운 일일까요?\n그래서 준비했습니다. 프리랜서라면 꼭 알아야 할 종합소득세 신고 방식. 귀중한 시간 아낄 수 있도록, 꼭 알아야 할 내용만 정리했어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}3.3% 뗐는데,\n세금은 왜 또 내야 하나요?\n프리랜서로 일을 하면 대부분 받기로 한 금액에서 3.3%를 떼고 받아요. 그래서 ‘이미 세금을 냈는데, 왜 또 종합소득세로 세금을 내는 거지?’ 하고 의아해하는 분들도 많습니다.\n이 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}3.3%는 소득세 3%와 지방소득세 0.3%를 원천징수한 것인데요. 이건 임시로 낸 세금에 가까워요. 세금은 소득에 비례해서 산출되는데, 실제로 내야 할 세금을 당장 실시간으로 알 수는 없으니 대략적으로 계산해서 미리 납부하는 거라고 생각하시면 돼요.\n실제로 납부할 세금은 종합소득세 신고를 통해 1년 동안의 소득, 지출, 공제 항목 등을 다 합산하고 계산해야 정확히 알 수 있어요. 이때 3.3%를 떼고 미리 납부한 세금과 비교해서 세금을 더 내거나 돌려받게 됩니다.\n프리랜서가 버는 돈은\n사업소득이에요\n세법에서는 프리랜서를 '개인이 물적 시설 없이 근로자를 고용하지 않고 독립된 자격으로 용역을 공급하고 대가를 받는 사람'으로 규정하고, 인적용역 사업자로 분류해요. 그래서 프리랜서가 일하고 받는 돈은 근로소득이 아니라 사업소득에 해당하죠.\n사업소득은 금액과 관계없이 종합소득세 신고 의무가 있고, 5월이 되면 종합소득세 안내문을 받게 됩니다. 평소엔 쓰지 않는 낯선 용어들이 많아 복잡하게 느껴질 수 있지만, 기본 개념 몇 가지만 알아두면 안내문을 이해하는 데 큰 도움이 돼요.\n세금을 합리적으로 내고 싶은 프리랜서라면 단순경비율과 기준경비율, 간편장부와 복식부기에 대해서는 꼭 알아두는 게 좋아요.\n추계신고,\n단순경비율과 기준경비율\n세금은 소득에 비례해 부과됩니다. 소득은 수입에서 경비를 뺀 금액이에요. 경비는 수입과 지출을 기록하는 장부를 통해 증빙하는 게 원칙이지만, 경비율을 적용하면 장부 없이도 일정 부분을 경비로 인정받을 수 있어요. 이를 추계신고라고 합니다.\n경비율은 ‘이 일을 하는 프리랜서라면 이 정도는 경비로 썼겠지’ 하고 국세청이 정한 추정 비율이에요. 정확한 경비율 수치와 적용 기준은 업종에 따라 달라지기 때문에, 내가 하는 일의 업종코드는 정확히 알아둬야 해요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n단순경비율\n단순경비율은 장부를 작성할 여력이 없을 정도로 적은 소득을 얻는 사업자를 위한 제도예요. 증빙자료 없이도 수입의 일정 비율을 전부 경비로 인정하는 방식이죠.\n예를 들어 연 수입이 3,000만 원이고 단순경비율이 60%에 해당하는 프리랜서라면, 아무런 자료 없이 1,800만 원은 경비로 인정 받고, 나머지 1,200만 원에 대해서만 세금이 매겨집니다.\n업종에 따라 경비율 수치는 다르지만 대체로 높은 비율이 적용되기 때문에, 단순경비율 대상자라면 이를 활용하는 게 나은 선택인 경우가 많아요.\n기준경비율\n기준경비율은 단순경비율이 적용되지 않는 프리랜서에게 적용되는 방식이에요. 일정 수입 이상이거나 특정 업종*에 해당한다면 이 방식으로 신고하게 되죠. 기준경비율은 수입 전체에 비율을 곱하는 단순경비율과 달리, 교통비나 식비, 통신비 등 기타경비에만 일정 비율을 적용해 경비를 계산합니다.\n문제는 임차료, 인건비, 매입비 같은 주요경비가 전체 지출에서 큰 비중을 차지한다는 점이에요. 게다가 기준경비율은 단순경비율만큼 비율이 높지도 않아서, 기타경비로 인정받는 금액도 그리 크지 않죠. 그래서 기준경비율 대상자라면, 지출 자료를 잘 정리해 장부를 작성하고 기장신고를 하는 게 절세에 유리한 경우가 많습니다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}* 변호사, 회계사, 건축사, 약사 등 전문직 사업자는 수입 규모에 상관없이 기준경비율이 적용돼요\n\n기장신고,\n간편장부와 복식부기\n앞서 경비율을 적용한 추계신고에 대해 설명했지만, 세금은 수입과 지출을 기록한 장부를 기준으로 신고하는 게 원칙이에요. 이를 기장신고라고 해요. 기장신고에는 비교적 간단하게 장부를 작성하는 간편장부와, 회계 기준에 따라 정식 장부를 작성하는 복식부기 두 가지 방식이 있어요.\n정부는 업종을 도·소매업, 제조·건설업, 서비스업 등으로 나누고, 각 업종별로 수입 기준을 정해 기장 의무 여부를 다르게 설정해두었어요. 많은 프리랜서가 종사하고 있는 서비스업의 경우 연 수입이 7,500만 원 미만이면 간편장부를 쓸 수 있지만, 그 이상이라면 복식부기를 의무적으로 작성해야 해요.\n간편장부\n간편장부는 말 그대로 간편하게 장부를 작성해 신고하는 방식이에요. 국세청에서 제공하는 프로그램을 이용하면, 수입과 지출을 항목별로 가계부 쓰듯 채울 수 있어 전문적인 회계 지식 없이도 혼자서 충분히 작성할 수 있어요.\n간편장부의 가장 큰 장점은, 추계신고처럼 일정 비율로 계산하는 방식이 아니라 실제로 지출한 금액을 그대로 비용으로 인정받을 수 있다는 점이에요. 또한 적자가 발생한 경우에는 이월결손금 제도를 통해 최대 15년간 소득에서 이전에 발생한 손실금을 공제받을 수 있어요. 프리랜서 초기라서 적자를 보고 있지만, 나중에 사업 규모가 커지며 흑자 전환을 기대한다면 지금부터 간편장부를 써두는 게 좋습니다.\n.css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}국세청 사이트에서는 간편장부 작성대상자 업종 기준을 확인할 수 있고, 간편장부 작성 프로그램도 다운받을 수 있어요.\n복식부기\n복식부기는 돈이 어디서 와서 어디로 갔는지를 차변과 대변으로 기록하는 장부 작성법이에요. 모든 수입과 지출을 꼼꼼히 기록하고, 그에 대한 증빙 자료도 함께 준비해야 하죠. 복잡하고 손이 많이 가지만, 실제 지출을 세세하게 반영할 수 있어 지출이 크거나 세무관리가 중요한 프리랜서에게는 적합한 방식입니다. 작성이 까다롭고 전문 지식이 필요하기 때문에 세무사 등 전문가의 도움을 받는 게 좋아요.\n간편장부 대상자라도 복식부기로 신고하면 기장세액의 20%를 감면받아 최대 100만 원까지 아낄 수 있어요. 세무사 비용보다 공제 혜택이 더 크다면 복식부기로 신고하는 게 유리하죠.\n\n* 대표적인 프리랜서에 해당하는 .css-114ityv{white-space:pre-wrap;cursor:pointer;-webkit-text-decoration:underline!important;text-decoration:underline!important;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}배달라이더의 소득세 신고방법이에요. 업종코드에 따라 경비율 수치와 적용기준, 복식부기 의무 기준 금액은 달라져요.\n몰라서 더 냈던 세금\n토스에서 찾아가세요\n나에게 잘 맞는 신고 방식을 잘 골랐다고 하더라도, 문득 ‘예전에도 이 경비를 챙겼었나?’, ‘공제 다 못 받아서 세금 더 낸 건 아닌가?’ 같은 생각이 들 때가 있어요. 마감에 맞춰 신고는 했더라도, 제대로 챙긴 게 맞는지는 나중에도 알기 어려우니까요.\n하지만 이미 지나간 신고라도, 놓친 세금 항목이 있었다면 지금이라도 돌려받을 수 있어요. ‘경정청구’라는 제도를 통해, 최대 5년 전까지 잘못 신고한 내용을 정정하고 환급금을 받을 수 있거든요.\n토스에서는 지난 종합소득세 신고에서 빠뜨린 경비나 공제 항목이 있었는지 꼼꼼히 찾아볼 수 있어요. 예전에 내가 더 낸 세금이 있었는지 토스에서 바로 확인해보세요. 놓쳤던 환급액을 찾게 될지도 몰라요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 조수희 이제현 윤자영\n이 콘텐츠는 2025.4.23. 기준으로 작성되었습니다.",
        "content": "프리랜서라면 꼭 알아야 할 종합소득세 신고 방식",
        "contentSnippet": "프리랜서라면 꼭 알아야 할 종합소득세 신고 방식",
        "guid": "https://blog.toss.im/article/tossmoment-8",
        "isoDate": "2025-04-23T04:53:00.000Z"
      },
      {
        "title": "토스, 전자문서 발급으로 종이 2억 2천만 장 절감",
        "link": "https://blog.toss.im/article/tosssavetheplanet",
        "pubDate": "Mon, 21 Apr 2025 23:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}청구서·증명서 등 각종 서류 전자문서로 전환…2024년 발급량, 전년 대비 38% 증가\n나무 2만 2천 그루 보호 효과…탄소 약 630톤·물 약 22억 리터 절감 효과까지\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}2025년 4월 22일(화) – 토스(운영사 비바리퍼블리카, 대표 이승건)는 2024년 한 해 동안 전자문서 2억 2천만 건을 발급해 종이 사용량 절감에 기여했다고 22일 밝혔다. 이는 2023년 대비 약 38% 증가한 수치로, 전자문서 이용이 빠르게 일상화되고 있음을 보여준다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n토스는 생활에 필요한 각종 청구서, 고지서, 증명서 등을 앱을 통해 전자문서로 제공하고 있다. 이용자는 ‘모바일청구서’, ‘국민비서’, ‘공인전자문서’ 등 다양한 서비스를 통해 주민등록 등초본, 건강보험자격득실확인서 같은 행정 서류부터 과태료, 범칙금 고지서 및 청구서까지 언제 어디서나 종이 없이 받아볼 수 있다.\n이렇게 2024년에 발급한 전자문서는 총 2억 2천만 건이다. A4용지 1장(5g) 기준으로 환산 시 약 1,100톤에 해당하는 종이 2억 2천 장을 절약한 셈이다. A4용지 1만 장을 생산하는 데 30년생 나무 1그루가 필요하다는 점을 고려하면, 이는 약 2만 2천 그루의 나무를 보호한 것과 같다. 또한 종이를 생산할 때 발생하는 탄소 약 630톤(장당 2.88g), 물 약 22억 리터(장당 10리터)의 절감 효과도 거둔 것으로 추산된다.\n\n토스 계열사들 역시 종이 사용 절감에 적극 동참하고 있다. 전자지급결제대행(PG) 계열사 ‘토스페이먼츠’는 가맹점 계약 절차 대부분을 전자계약 시스템으로 전환했다. 2022년 도입 이후부터 2025년 2월까지 체결된 계약서 중 약 92%를 전자문서로 발급했으며, 총 700만 장의 종이를 절약했다. 결제 단말기 및 포스(POS) 솔루션 공급 자회사 ‘토스플레이스’ 또한 2023년 토스 단말기 출시 이후 약 2년간 15만 건의 영수증을 전자 문서로 대체하며 종이 절감에 기여하고 있다.\n토스 관계자는 “전자문서 전환은 작지만 의미있는 변화”라며 “앞으로도 사용자의 편의를 높이는 동시에 지구 환경 보호에도 기여할 수 있는 서비스를 지속적으로 고민하겠다”고 밝혔다.",
        "content": "사용자 편의성과 환경 보호 동시 실현",
        "contentSnippet": "사용자 편의성과 환경 보호 동시 실현",
        "guid": "https://blog.toss.im/article/tosssavetheplanet",
        "isoDate": "2025-04-21T23:00:00.000Z"
      },
      {
        "title": "Toss Cuts 220 Million Sheets of Paper With E-document Issuance",
        "link": "https://blog.toss.im/article/savetheearthh",
        "pubDate": "Mon, 21 Apr 2025 22:12:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}Switching bills, certificates, and other documents to digital formats — 38% increase in issuance compared to 2023\nProtecting 22,000 trees — saving approximately 630 tons of carbon and 2.2 billion liters of water\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\nViva Republica, the operator of the financial super app “Toss,” announced that it issued 220 million electronic documents in 2024, significantly reducing paper usage. This represents a 38% increase from 2023, reflecting the rapid normalization of digital document use in everyday life.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\nToss offers a variety of essential documents, such as bills, notices, and certificates, as electronic documents through its app. Users can access administrative documents like resident registration copies and national health insurance records, as well as traffic fines and penalty notices, anytime and anywhere, without paper, using services such as mobile bills, GoodPy, and public e-documents.\nThe 220 million electronic documents issued in 2024 equate to approximately 220 million sheets of paper, or around 1,100 tons, based on an A4 sheet weighing 5g. Considering that one 30-year-old tree is needed to produce 10,000 sheets of paper, this translates to the protection of approximately 22,000 trees. Additionally, it's estimated that this effort helped avoid around 630 tons of carbon emissions (2.88g per sheet) and saved approximately 2.2 billion liters of water (10 liters per sheet), which are typically consumed during paper production.\n\nToss affiliates are also actively contributing to reducing paper usage. Toss Payments, the company’s payment gateway (PG) affiliate, has transitioned most of its merchant contract processes to an electronic contract system. Since its introduction in 2022 up to February 2025, about 92% of all contracts were issued electronically, saving around 7 million sheets of paper. Similarly, Toss Place, Toss’ subsidiary providing payment terminals and POS solutions, has replaced around 150,000 receipts with electronic documents over the past two years since launching its terminal in 2023.\n“Transitioning to electronic documents is a small yet meaningful change,\" a Toss representative said. “We will continue developing services that enhance user convenience while contributing to the protection of our planet.”",
        "content": "Achieving User Convenience and Environmental Sustainability",
        "contentSnippet": "Achieving User Convenience and Environmental Sustainability",
        "guid": "https://blog.toss.im/article/savetheearthh",
        "isoDate": "2025-04-21T22:12:00.000Z"
      },
      {
        "title": "토스인컴, '5월 종소세 신고' 앞두고 '추징 안심보상제' 실시",
        "link": "https://blog.toss.im/article/tossincomeservices",
        "pubDate": "Mon, 21 Apr 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}‘숨은 환급액 찾기’ 서비스 통해 신고 후 추징 시 최대 50만 원까지 보상\n종합소득세 신고 전 환급 예상액 확인 가능…‘종소세 미리보기’ 서비스도 동시 출시\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 세금신고 및 환급 도움 서비스 제공 택스테크 자회사인 토스인컴(대표 박일용)이 5월 종합소득세 정기신고 시즌을 앞두고 고객 신뢰를 높이기 위한 ‘추징 안심보상제’를 실시한다고 21일 밝혔다. 이와 함께, 올해 종합소득세(이하 종소세) 환급 예상액을 사전에 확인할 수 있는 ‘종소세 미리보기’ 서비스도 새롭게 선보인다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}◇ 신고 후 추징 발생해도 안심…‘추징 안심보상제’ 도입\n추징 안심보상제는 ‘숨은 환급액 찾기(이하 숨환찾)’를 통해 신고한 건에서 추징이 발생한 경우 최대 50만 원까지 보상하는 제도다. 숨환찾 이용 후 6개월 이내에 발생한 추징에 대해 토스인컴이 고객당 1회, 최대 50만 원 한도 내에서 보상한다.\n예를 들어, 고객이 숨환찾을 통해 종소세 경정청구를 신청했으나 기존 연말정산 시 잘못 기재한 부양가족 정보로 인해 환급액의 일부를 다시 납부하게 된 경우라도, 그 추징액에 대해 토스인컴이 보상을 해주는 방식이다.\n보상 신청을 위해서는 고객이 토스 고객센터에 추징 사실을 입증할 수 있는 서류를 제출하면 된다. 이후 내부 절차에 따라 처리되며, 2025년 5월 1일 이후 신고 건을 대상으로 한다.\n한편, 대부분의 추징은 고객이 연말정산이나 종소세 신고 때 직접 입력한 부양가족이 공제 요건을 충족하지 않는 경우에 발생한다. 실제로 숨환찾 이용 고객 중 이런 이유로 추징된 비율은 전체의 0.03%로 매우 낮지만, 토스인컴은 고객의 만족과 신뢰를 극대화하기 위해 이 제도를 도입했다.\n토스인컴 관계자는 “정교한 세무엔진과 고도화된 서비스 설계를 바탕으로 고객 중심의 파격적인 보상제 도입이 가능했다”고 덧붙였다.\n◇ 신고 전 예상 환급액도 미리 확인… ‘종소세 미리보기’ 서비스도 출시\n이번 시즌부터 토스인컴은 종합소득세 신고 전 환급 예상액을 사전에 확인할 수 있는 종소세 미리보기 서비스도 함께 제공한다. 이 서비스는 홈택스 간편인증을 통해 고객 데이터를 연동한 뒤, 최신 개정 세법을 적용해 고객의 환급 예상 금액을 계산해준다.\n종소세 미리보기는 실제 5월 정기신고에 사용될 데이터를 기반으로 계산되기 때문에 정확도가 높다. 이에 고객이 신고 여부를 사전에 판단하는 데 큰 도움이 될 것으로 기대된다.\n토스인컴 관계자는 “고객이 세금 환급 신고에 대해 느끼는 막연한 불안을 해소하고, 더욱 신뢰할 수 있는 서비스 경험을 제공하는 것이 목표”라며 추징 안심보상제 도입의 취지를 설명했다. 또한 “종소세 미리보기 기능과 함께 누구나 쉽고 정확하게, 그리고 안심하고 세금을 신고할 수 있는 환경을 만들어 나가겠다”고 덧붙였다.",
        "content": "‘추징 안심보상제’와 ‘종소세 미리보기’ 서비스 출시",
        "contentSnippet": "‘추징 안심보상제’와 ‘종소세 미리보기’ 서비스 출시",
        "guid": "https://blog.toss.im/article/tossincomeservices",
        "isoDate": "2025-04-21T01:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]