[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": [
      {
        "creator": "리승환",
        "title": "이커머스와 홈쇼핑이 선택한 커머스 AI 솔루션 ‘에이플러스AI’: 버즈니 남상협 대표 인터뷰",
        "link": "https://ppss.kr/archives/269388",
        "pubDate": "Thu, 15 May 2025 02:00:20 +0000",
        "content:encodedSnippet": "이승환: 자기소개 부탁드립니다.\n남상협: 버즈니 대표 남상협입니다. 여러 홈쇼핑을 한데 모아 보는 앱 ‘홈쇼핑모아’를 운영하고 있고요. 이를 운영하며 쌓아온 여러 커머스AI 기술을 B2B로 보급하고 있습니다. 바로 ‘에이플러스AI’라는 버즈니의 신규 AI 비즈니스인데요. 현재 론칭 1년 만에 CJ온스타일 등 홈쇼핑 및 주요 이커머스사 10곳에 커머스AI 기술 공급 계약을 체결했습니다. AI 비즈니스 부문은 작년에 10배 정도 성장했고, 올해도 4배 이상 성장할 것으로 보입니다.\nAI Summit Seoul 2024에서 ‘생성AI와 LLM이 차세대 e커머스 고객 경험 시대를 열다’라는 주제로 발표 중인 버즈니 남상협 공동대표\n이승환: 에이플러스AI는 어떤 거죠?\n남상협: 다양한 커머스AI 기술을 구독 형태로 제공하고 있는데요. 먼저 시작은 ‘카테고리 자동 설정 기능’이었어요. 보통 셀러들은 솔루션을 통해, 원클릭으로 여러 커머스 플랫폼에 제품을 한 번에 넣거든요. 근데 커머스 플랫폼마다 규격이 달라서 엉뚱한 카테고리에 물건이 들어갈 때가 많아요. 이러다 보면 또 문제가 커머스 플랫폼 ‘검색 엔진’의 품질이 떨어져요. 그래서 저희는 AI로 각 플랫폼에 맞게 카테고리를 지정해 주는 겁니다.\n상품 카테고리 분류AI 예시: 이런 식으로 알아서 카테고리를 추천해 준다\n이승환: AI가 제품 상세 페이지를 읽고 카테고리를 구분해 주는 건가요?\n남상협: 아니오. 제품 단일 이미지만 보고도 분류 가능합니다. 이미 신세계라이브쇼핑, CJ온스타일 등 다양한 대형 플랫폼에 들어가 있습니다. 그밖에 다양한 제품 정보도 자동으로 뽑아줘요. 단위당 가격, 최저가 비교 등… 그렇게 검색 품질을 높이다 보니, 자연히 AI 기반 ‘검색엔진’까지 공급하게 됐어요.\n \n커머스 플랫폼의 검색엔진 변경만으로, 검색에서 나오는 매출이 몇 배로 뛴다\n이승환: 하긴 저도 쇼핑 검색해보면 엉망으로 나오는 사이트들이 꽤 있더라고요.\n남상협: 그게, 기존 커머스 플랫폼의 검색 엔진은 대개 텍스트 기반의 ‘문헌 검색’을 그대로 따서 쓴 게 많아요. 예로 구글과 네이버만 해도 검색에서 ‘쇼핑’ 탭이 따로 있잖아요? 그런데 많은 커머스 플랫폼이 ‘쇼핑’에 잘 특화되어 있지 않고 ‘문헌 검색’을 그대로 쓰니, 엉뚱한 결괏값이 나오는 겁니다.\n이승환: 쇼핑 검색은 어떤 점에서 좀 다른가요?\n남상협: 일반 검색도 상위 노출을 위한 어뷰징이 많은데, 커머스는 훨씬 더해요. 예로 ‘A라면’을 팔면서 ‘B라면’ 데이터를 넣는 식으로 상위노출하려는 곳이 많았죠. 이걸 플랫폼이 하나하나 다 잡아내는 건 불가능에 가깝거든요. 그러다 보니 검색 품질이 점점 안 좋아져요. 검색하면 내 마음에 딱 맞는 제품을 추천해 줘야 하는데 엉뚱한 제품을 불러오는 거죠. 그러면 자연히 전환율이 낮아지고, 그러다 보면 장기적으로는 플랫폼 고객 이탈률이 높아지죠.\n기존 검색엔진과는 확연한 차이를 보여준다\n이승환: 그러면 버즈니의 에이플러스 검색AI는 어떤 점이 다른가요?\n남상협: 저희가 개발한 AI 기반 쇼핑 검색 엔진은 ‘토큰 베이스’가 아닌 ‘벡터 검색’입니다. 사람이 아닌 AI가 제품 관련 데이터를 정확히 입력합니다. 이를 통해 검색 품질이 높아지고, 구매 전환율도 함께 높아지는 거죠.\n이승환: 제가 문과라 수리탐구2를 안 배워서 벡터를 잘 모릅니다…\n남상협: 음… 이렇게 생각하시면 돼요. 뷰티 브랜드 중 ‘에이지투웨니스’라는 브랜드가 있는데요. 토큰 검색은 ‘에이지투웨니스’와 ‘AGE20’S’, ‘에이지투엔티스’를 다르게 인식해요. ‘벡터 검색’은 이런 여러 동일 검색어들을 하나의 ‘의미 공간’에 담는다고 보면 돼요. AI가 여러 사용자의 액션 데이터를 분석해서, 키워드를 자동으로 생성하는 거죠. 어차피 오타를 낸 사용자들은 비슷한 액션을 취할 테니까요.\n키워드가 아닌, 의미를 나타내는 벡터로 표현하기 때문에, 어떤 입력에 대해서도 가장 의미적으로 유사한 상품을 찾는다. 무엇을 입력해도 가장 관련 있는 것을 찾아준다\n이승환: 실제 성과는 어땠나요?\n남상협: 최근 저희 에이플러스 검색AI를 도입한 ‘어바웃펫’은 정말 극적인 효과가 났어요. 도입 후 검색 기반 주문이 약 350% 늘었어요. 물론 여기는 특이할 정도로 많이 늘어난 곳이긴 하고요. 보통은 40% 정도 늘어납니다.\n \nAI 검색, 일단 월 100만원에 도입 가능\n이승환: 왜케 확 늘어나는 거죠;;;\n남상협: 좀 말이 그렇지만, 커머스 플랫폼들이 사용하던 기존의 검색 엔진이 너무 낡았어요. 이커머스 초기에야 수동으로 어느 정도 해결이 가능했지만, 지금은 기존 엔진이 감당하기 힘들 정도로 제품과 거래가 늘었잖아요. 그래서 딥러닝 없이는 정확도를 높이기가 힘듭니다.\n한 고객사가 에이플러스 검색AI를 도입에 앞서 기존 검색 솔루션과 에이플러스AI의 검색 성과(주문액) 비교 ab테스트\n이승환: 아무 쇼핑몰이나 플랫폼에 넣어도 그만큼 매출이 오르나요?\n남상협: 아무래도 차이는 있습니다만, 말씀드렸듯 평균 40%는 올라옵니다만 너무 작은 곳은 안 됩니다. AI 검색 엔진이 유용하려면 일단 상품 개수가 많아야 합니다. 예로 작은 소호 쇼핑몰에 상품이 100개밖에 없다, 그러면 의미가 없습니다. 또 사용자와 활동도 어느 정도는 돼야 합니다.\n이승환: 검색AI 도입은 어렵지 않나요? 버즈니에서 다 해주시는지…\n남상협: 아, 그건 스크립트 한 줄만 심어주시면, 커머스 플랫폼에서 일어나는 모든 액션을 저희 서버에 쏘게 됩니다. 저희 API 연결이 굉장히 간단해요. 필요할 경우에는 저희가 어느 정도 손을 봅니다. 그렇게 연동해서 한두 달 정도 있으면 고객 액션 데이터를 받아들이며 점점 정확도가 올라갑니다. 보통 한두 달이면 잘 작동해요.\n이승환: 그러면 그 버즈니 검색AI 사용료는 얼마인가요?\n남상협: 우선 AB테스트 비용으로 월 100만원에 제공하고 있어요. 대부분의 고객사는 테스트 후 도입으로 이어집니다. 고객사 상황에 따라 사용료가 책정되고요, 기존 검색엔진과 함께 사용하는 경우도 있습니다. 예를 들어 검색 결과가 없을 때가 있잖아요? 그때만 우리 검색 엔진으로 연결하는 거죠. ‘실패 검색AI’ 기술인데요. 기존 검색 엔진은 검색 결과가 없으니 매출이 0인데, 우리 검색 엔진은 관련 제품을 노출시켜서 매출을 늘려주는 겁니다. 이를 통해 버즈니 검색 엔진으로 전환한 기업이 꽤 돼요.\n버즈니 실패 검색AI를 도입한 고객사 사례\n이승환: 네? 검색 결과가 안 나온다는 건 좀 충격인데요;;; 팔려면 뭐라도 유관 상품을 찾아내야 할 텐데.\n남상협: 솔직히 저희도 충격이었습니다(…) 저희는 저와 공동대표로 있는 김성국 대표 2명이 다 기술자 출신이에요. 둘 다 대학원에서 검색을 전공했어요. 그래서 창업 초기부터 초보적이나마 ‘딥러닝’을 적용하고 있었습니다. ‘홈쇼핑모아’를 운영하면서 계속해서 이 검색엔진을 발전시켰죠. 저희가 편하려고 시작한 일이었죠. 그래서 다른 데도 다 비슷하게 하겠지… 라고 생각을 했는데 아니더라고요. 그래서 자연스럽게 쇼핑 관련 검색AI 솔루션 판매에 나서게 됐어요.\n \n구매 전환율을 2배 높이는 커머스에 특화된 추천 AI\n이승환: 그러면 검색 엔진 외에 다른 솔루션은 어떤 게 있나요?\n남상협: 많지요. ‘추천AI’가 대표적인데요. 이것도 자사 서비스 ‘홈쇼핑모아’에서 쓰려고 개발한 건데, 내부적으로 평가가 좋아서 외부 플랫폼에도 판매하고 있습니다. 플랫폼 업체들이 ‘검색’에 돈을 쓰는 건 좀 부담스러워하는데, 추천은 상대적으로 좀 쉽게 받아들여요. 그래서 ‘추천’ 솔루션을 넣었다가 ‘검색’으로 이어지는 경우도 있어요.\n이승환: ‘추천AI’이라 함은 어떤…\n남상협: 예로 특정 상품 페이지에서, 사용자가 구매할 확률이 높은 또다른 상품을 추천해 주는 거죠. ‘당신이 좋아할 만한 상품’ 이런 거요. 저희는 ‘홈쇼핑모아’라는 커머스 플랫폼을 10년 이상 운영해 왔고, 여기에 최적화된 추천 알고리즘을 계속해서 개발해 왔어요. 그래서 커머스 플랫폼에서 추천AI를 도입하기에 적합한 거죠. 실제로 모 커머스 플랫폼 추천 엔진 테스트에서는 기존 추천 엔진 대비 구매 전환율이 2배로 늘어 계약으로 바로 이어졌어요.\n평균이 40% 정도고, 많으면 100% 이상이 오르기도 한다\n이승환: 근데 추천은 오히려 되게 쉬울 것 같거든요. A제품 구매한 사람들이 B제품도 많이 구매했다면 B제품을 산다거나…\n남상협: 그건 수많은 로직 중에 하나에 불과해요. 저도 석박사 때 연구한 경험을 가지고, 제일 좋은 알고리즘 넣으면 될 거라 생각했어요. 근데 10년째 어려움을 겪고 있는 게, ‘검색’과 달리 ‘추천’은 주관적인 면이 강해요. 예를 들면 ‘사과’를 검색한 사람에게 ‘배’나 ‘수박’을 내놓는 건 당연히 말이 안되잖아요? 그런데 ‘추천’은 누군가에게는 다른 과일을 추천하는 게 맞을 때가 있거든요.\n이승환: 아… 그렇네요;;;\n남상협: 그리고 ‘추천’이 어려운 또 하나의 이유가요. 검색에 비해 추천은 ‘시점’에 따라 차이가 큽니다. 예로 이 사람이 과거에 골프를 좋아했지만 테니스로 넘어갔다면, 과거 시점의 데이터가 별 의미가 없어집니다. 그렇다고 최신 정보만 가지고 볼 수도 없고… 결국 알고리즘 뿐 아니라 사용자의 기호, 타임라인 등을 맥락을 종합적으로 봐야 합니다. 이를 잘 해결하는 게 저희가 10년 이상 쌓아온 노하우고요.\n단순히 로그만 학습하는 것을 넘어서, 이커머스 데이터를 이해하는 다양한 기반 기술을 융합적으로 활용해 추천\n이승환: 근데 커머스 플랫폼마다 상품 구성이 다르고, 또 고객층이 다르잖아요? 그러면 이에 맞게 AI 엔진도 커스터마이징해야 하나요?\n남상협: 큰 차이는 없습니다. 어차피 AI는 해당 플랫폼 고객의 행동 패턴을 학습하는 거니까요. 다만 플랫폼마다 운영 방식의 차이가 있으니, 여기에 맞춰드리는 있어요. 예로 쇼핑몰에서 시즌마다 미는 기획전이나 상품 리스트가 있을 거 아니에요? 거기에 나오는 상품만 가지고 개인화를 하고 싶다, 아니면 오늘의 딜 안에서 추천하고 싶다. 이런 요청에 맞춰 주는 거죠.\n이승환: 그런 건 할 때마다 버즈니에서 코드 짜줘야 하나요?\n남상협: 아니오. 일반화돼 있습니다. 플랫폼에서 원하는 요구 사항을 저희에게 알려주시면, 처음에는 저희가 기능 개편을 위해 코딩을 할 때도 있는데요. 그 이후에는 플랫폼 회사에서 알아서 하면 돼요. 일단 저희도 한번 그런 기능을 만들어두면, 다른 플랫폼에서도 쓸 수 있으니까 크게 재지 않고 기능 개발해 드립니다.\n이승환: 그러면 추천AI 도입 비용은 어떻게 측정됩니까?\n남상협: 추천AI는 업체마다 월 과금액 차이가 크긴 해요. 애초에 각 쇼핑몰과 플랫폼마다 사용 트래픽 차이도 크고, 또 그들마다 원하는 범위도 다르거든요. 최근 대형 커머스 서비스 한곳과 이야기 중인데, 여기는 일반적인 쇼핑 플랫폼과 비교해서 훨씬 비용이 크겠죠. 트래픽도 높고, 요구사항도 많을 테니까요.\n10년 넘게 커머스AI 기술을 갈고닦는 기업 버즈니\n☞ AI회의록 Knoi 1개월 무료이용하기\n☞ 에이플러스AI 데모사이트 바로가기\n \n숏폼과 리뷰도 AI를 통해서 엄청난 생산성 향상\n이승환: 계속해서 다른 커머스 AI 솔루션도 소개해 주시죠.\n남상협: ‘숏폼AI’와 ‘리뷰AI’가 있어요. 먼저 ‘숏폼AI’를 설명 드리면요. 저희가 ‘홈쇼핑모아’를 운영했잖아요. 홈쇼핑은 영상을 기반으로 판매하잖아요. 그래서 저희는 어떤 제품의 어떤 영상이 나올 때 구매가 많이 이뤄지는지, 10년 간 데이터가 쌓여 있어요. 그래서 ‘홈쇼핑모아’에 입점한 홈쇼핑사를 대상으로 ‘가장 중요한 영상’을 자동으로 잘라주는 기능을 만들었어요.\n버즈니 숏폼AI 고객사 서비스 적용 사례\n이승환: 오, 정말 편하겠네요.\n남상협: 네. 그런데 그게 업계에서 입소문이 나면서, 커머스 관련 회사들이 하나씩 좀 쓰고 싶다는 이야기를 해주셨어요. 어느 회사는 숏폼 영상을 3시간에 하나씩 만들고 있었는데, 저희 숏폼 플랫폼을 쓴 후 1시간에 4개씩 만들고 있다 하더라고요. 실제로 숏폼AI를 이용해 1시간 분량의 영상을 입력하면 AI가 핵심만 추출해 5분 만에 6개의 숏폼영상으로 만들어 줍니다.\n빠르게 숏폼 영상을 만들 수 있다\n이승환: 그러면 ‘프리미어’ 같은 영상 편집 툴에 연동해서 써야 하나요?\n남상협: 기본적으로 분석을 포함한 자체 툴을 제공합니다. 여기서 특정 숏폼을 자를 수도 있고, 중간에 자막 넣는 등 편집도 다 돼요. 또 말씀하신 것처럼 필요하면 영상을 추출 후 프리미어 등에서 편히 작업할 수도 있습니다. 근데 애초에 그렇게 이것저것 편집을 하는 경우가 많지는 않아요. 애초에 잘된 부분을 분석하고 활용하는 걸로 충분한 경우가 많아서요.\n리뷰AI 도입 고객사 사례\n이승환: 다음으로 ‘리뷰AI’는 어떤가요?\n남상협: 리뷰 라는게 결국 ‘고객’을 위해 있는 거잖아요. 즉 사람들이 원하는 정보를 주는 건데, 모든 리뷰를 분석해서 AI가 대표적인 리뷰를 자동 생성해 주는 거죠. 여러 리뷰를 뒤지지 않아도 ‘아, 이런 제품이구나’를 알 수 있도록요. 또 좀 더 세부적으로 알 수 있도록, 만족도, 사이즈, 가성비 등 다양한 키워드와 표현으로 추려 볼 수도 있습니다. 그 키워드만 클릭하면, 이 제품의 내 관심 있는 속성이 어떤지 빠르게 볼 수 있죠.\n \nAI 챗봇을 통해 24시간 제품 상담까지 가능\n이승환: 이것도 커스터마이징 안 해도 되나요?\n남상협: 네. 이것도 AI가 자동으로 합니다. 물론 UX 부분은 고객사에서 수정해야겠지요. 또 판매자들을 위한 AI 기능도 있는데요. 쇼핑몰 보면 같은 상품인데 옵션만 약간 다르게 해서 제품을 엄청 많이 올리는 경우가 있어요. 그러면 같은 상품인데 리뷰가 엄청 흩어져 있어요. 저희는 AI를 통해 그런 제품들의 리뷰를 다 하나로 묶어줘요. 여기에 제품의 OCR을 읽어내서 특징을 잡아주기도 하고요. 그밖에도 ‘챗봇AI’도 제공하고 있어요.\n이승환: 챗봇이면 고객 상담인가요?\n남상협: 아니오. 현재 신세계라이브쇼핑이나 쇼핑엔티에 공급하고 있는데, 상품 관련 정보를 명확히 제공해 주는 것에 가까워요. 아무렇게나 물어봐도 다 잘 대답해 줘요. 예로 질문 관련해서 영상의 특정 부분을 참조하라고 정보를 전달해주기도 하고요. 색상 같은 건 기본이고, 내 키와 몸무게 알려주며 어떤 사이즈 입어야 하는지 알려주고, 또 세탁 어떻게 해야 하는지 등 온갖 사소한 질문에도 답해줘요. 고객센터로 넘길만한 질문은 또 알아서 넘겨주고요.\n챗봇AI 고객사 도입 사례\n이승환: 진짜 AI로 별 희한한 게 다 되네요;;;\n남상협: 근데 결국 오랜 시간 AI 기술을 쇼핑에 접목시킨 게, 다양한 형태로 접목시킨 거예요. 운이 좋았던 게, 저희는 그저 우리 회사 생산성을 높이기 위해 AI를 일찍부터 도입한 건데 10년 만에 빛을 본 거니까요. 이 외에도 저희 버즈니 회사 안에서는 아예 모든 파일과 회의 녹취를 한데 모아놓고 AI를 활용해서 정보를 찾아볼 수 있도록 세팅해서 업무를 진행하고 있어요. 지금 인터뷰도 실시간으로 저장되고 AI가 정리해 줍니다. 공유도 할 수 있고요.\n\n이승환: 와, 이건 정말 좋은데요. 저도 좀 쓸 수 없을까요?\n남상협: 네 이번에 새롭게 오픈한 AI회의록 Knoi인데요. 녹음된 회의 내용을 AI가 자동으로 정리까지 해줍니다. 우선 현재 초기버전에는 미팅 녹취와 AI회의록 정리 기능이 포함되어 있습니다.\n\n앞으로 노이는 현재 버즈니 내부에서 구성원들이 이용하는 형태로 단순한 AI 회의록 도구를 넘어, 팀의 생산성과 퍼포먼스를 극대화하는 AI 협업 플랫폼으로 만들어 나갈 계획입니다. 구체적으로는 팀이 가진 모든 문서, 코드, 메신저 대화 등을 AI가 통합적으로 이해하고 이를 기반으로 지식 체계를 자동으로 구축해 팀의 생산성과 효율을 극대화하는 서비스로 개선해 나갈 계획입니다.\n이승환: 감사합니다. 마지막으로 한마디 부탁드립니다.\n남상협: 지난해 ‘홈쇼핑모아’와 신규 비즈니스 ‘에이플러스AI’의 성장에 힘입어 월간 기준 흑자 달성에 성공했는데요, 올해는 ‘홈쇼핑모아’로 더욱 탄탄한 현금흐름을 만들고, 에이플러스AI로 빠르게 시장을 선점해 나갈 계획입니다.\n☞ AI회의록 Knoi 1개월 무료이용하기\nhttp://knoi.ai/coupon\n☞ 에이플러스AI 데모사이트 바로가기\nhttps://www.aplusai.ai/",
        "enclosure": {
          "type": "image/jpeg",
          "length": "0",
          "url": "https://ppss.kr/wp-content/uploads/2025/05/1-2.jpg"
        },
        "dc:creator": "리승환",
        "content": "이승환: 자기소개 부탁드립니다. 남상협: 버즈니 대표 남상협입니다. 여러 홈쇼핑을 한데 모아 보는 앱 ‘홈쇼핑모아’를 운영하고 있고요. 이를 운영하며 쌓아온 여러 커머스AI 기술을 B2B로 보급하고 있습니다. 바로 ‘에이플러스AI’라는 버즈니의 신규 AI 비즈니스인데요. 현재 론칭 1년 만에 CJ온스타일 등 홈쇼핑 및 주요 이커머스사 10곳에 커머스AI 기술 공급 계약을 체결했습니다. AI 비즈니스 부문은 작년에 10배 정도 성장했고, 올해도 [&#8230;]",
        "contentSnippet": "이승환: 자기소개 부탁드립니다. 남상협: 버즈니 대표 남상협입니다. 여러 홈쇼핑을 한데 모아 보는 앱 ‘홈쇼핑모아’를 운영하고 있고요. 이를 운영하며 쌓아온 여러 커머스AI 기술을 B2B로 보급하고 있습니다. 바로 ‘에이플러스AI’라는 버즈니의 신규 AI 비즈니스인데요. 현재 론칭 1년 만에 CJ온스타일 등 홈쇼핑 및 주요 이커머스사 10곳에 커머스AI 기술 공급 계약을 체결했습니다. AI 비즈니스 부문은 작년에 10배 정도 성장했고, 올해도 […]",
        "guid": "https://ppss.kr/?p=269388",
        "categories": [
          "IT",
          "마케팅",
          "스타트업",
          "인터뷰"
        ],
        "isoDate": "2025-05-15T02:00:20.000Z"
      }
    ]
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Journey to 1000 models: Scaling Instagram’s recommendation system",
        "link": "https://engineering.fb.com/2025/05/21/production-engineering/journey-to-1000-models-scaling-instagrams-recommendation-system/",
        "pubDate": "Wed, 21 May 2025 16:00:38 +0000",
        "content:encodedSnippet": "In this post, we explore how Instagram has successfully scaled its algorithm to include over 1000 ML models without sacrificing recommendation quality or reliability. \nWe delve into the intricacies of managing such a vast array of models, each with its own performance characteristics and product goals. \nWe share insights and lessons learned along the way—from the initial realization that our infrastructure maturity was lagging behind our ambitious scaling goals, to the innovative solutions we implemented to bridge these gaps.\nIn the ever-evolving landscape of social media, Instagram serves as a hub for creative expression and connection, continually adapting to meet the dynamic needs of its global community. At the heart of this adaptability lies a web of machine learning (ML) models, each playing a crucial role in personalizing experiences. As Instagram’s reach and influence has grown, so too has the complexity of its algorithmic infrastructure. This growth, while exciting, presents a unique set of challenges, particularly in terms of reliability and scalability.\nJoin us as we uncover the strategies and tools that have enabled Instagram to maintain its position at the forefront of social media innovation, ensuring a seamless and engaging experience for billions of users worldwide.\n\nAre there really that many ML models in Instagram?\nThough what shows up in Feed, Stories, and Reels is personally ranked, the number of ranked surfaces goes much deeper—to which comments surface in Feed, which notifications are “important,” or whom you might tag in a post. These are all driven by ML recommendations. \nWithin a given surface, we’ll have different layers of the ranking funnel: sourcing (retrieval), early-stage ranking (ESR), and late-stage ranking (LSR). We operate on fewer candidates as we progress through the funnel, as the underlying operations grow more expensive (see Figure 1 below):\nFigure 1: The ranking funnel.\nWithin each surface and layer, there is constant experimentation, and these permutations create a severe infrastructure challenge. We need to allow room for our ML engineers to experiment with changes such as adjusting weights for a given prediction. The net result, depicted below in Figure 2, is a large number of models serving user traffic in production:\nFigure 2: An expression of the factors behind the fleet’s numerical growth.\nHow did we realize infra maturity wasn’t going to catch up?\nIdentified risks\nWe identified several risks associated with scaling our algorithm, rooted in complaints about ML productivity and repeating patterns of issues:\nDiscovery: Even as a team focused on one app — Instagram — we couldn’t stay on top of the growth, and product ML teams were maintaining separate sources of truth, if any, for their models in production.\nRelease: We didn’t have a consistent way to launch new models safely, and the process was slow, impacting ML velocity and, therefore, product innovation.\nHealth: We lacked a consistent definition of model prediction quality, and with the diversity of surfaces and subtlety of degraded ranking, quality issues went unnoticed.\nSolution overview\nTo address these risks, we implemented several solutions:\nModel registry: We built a registry that serves as a ledger for production model importance and business function foremost, among other metadata. This registry serves as our foundational source of truth, upon which we can leverage automation to uplevel system-wide observability, change management, and model health.\nModel launch tooling: We developed a more ideal flow for launching new models that includes estimation, approval, prep, scale-up, and finalization. This process is now automated, and we’ve reduced the time it takes to launch a new model from days to hours.\nModel stability: We defined and operationalized model stability, a pioneering metric that measures the accuracy of our model predictions. We’ve leveraged model stability to produce SLOs for all models in the model registry, which enables simple understanding of the entire product surface’s ML health.\nModel registry\nWhat did model investigations look like prior to the registry?\nBefore we created the model registry, the investigation process was a time-consuming and error-prone experience for on-call engineers and model owners. An on-call engineer had to ask multiple questions to model owners to gather information, as depicted Figure 3 below, about the context of what this model does in the stack and to clarify how important it is to the business.\nFigure 3: A fictional but typical non-productive investigation.\nUnderstanding this context is extremely important to the operational response: Depending on the importance of the model and the criticality of the surface it’s supporting, the response is going to differ in kind. When a model is an experiment serving a small percentage of the traffic, an appropriate response can be to end the experiment and reroute the traffic back to the main model (the baseline). But if there’s a problem with the baseline model that needs to be handled with urgency, it’s not possible to “just turn it off.” The engineer on call has to loop in the model owner, defeating the purpose of having a dedicated on-call.\nTo avoid holding up an operational response on a single POC, we needed a central source of truth for model importance and business function. What if the model is not available? What if 10 of these issues happen concurrently? \nWith the development of the model registry, we standardized the collection of model importance and business function information, ensuring most of our operational resources were going towards the most important models.\nWhat problems did the model registry solve?\nThe model registry is a system of record built on top of Configerator, Meta’s distributed configuration suite . This schematized ledger (see an example in Figure 4 and detailed further below) provides read-and-write access to operational data based on the inventory of production models. It’s a flexible and extensible foundation upon which one can build automation and tools to solve problems that are specific to individual organizations within Meta that are not served by the general tooling. \nFigure 4: An abridged example of what a model registry entry looks like.\nAs Instagram scaled its investment in AI through rapid innovation in content recommendations, the number of models and AI assets grew; as a result, it has been increasingly important — but also increasingly difficult — to maintain a minimum standard for all of our models, as we lacked an authoritative source for the business context as well as for a model’s importance. \nIn creating the model registry, we set out to provide a structured interface for collecting business context via model types, importance via criticality, and additional metadata that would enable model understanding. Below, we’ll get into the model types, criticality, and automation we’ve built for this purpose.\nModel types\nAt a high level, model type describes the purpose for the ML workload where it represents a category or class of models that share a common purpose or are used in similar contexts. For example, we have “ig_stories_tray_mtml” which is a string attached to training flows, model checkpoints, inference services, and more. Put simply, a model type identifies for the reader this model’s purpose in the ranking funnel.\nLet’s break it down: \n“ig_stories_tray_mtml” → “ig” “stories” “tray” “mtml”\n“ig”: This model is an “ig” model as opposed to “fb” or “whatsapp”.\n“stories”: This model serves IG Stories.\n“tray”: This model serves in the main IG Stories tray (as opposed to stories in some other surface).\n “mtml”: This model is a multi-task-multi-label model, commonly used in late-stage ranking.\nWe can then use these model type strings to tag AI assets, and since they serve as proxies for business context, we can use them also for asset management, policy enforcement, analytics, and more.\nThe metadata entries in the model registry are anchored on two main types that describe model instances (ModelMetadata) as well as model types (ModelTypeMetadata). These types are made up of “core” attributes that are universally applicable, as well as “extended” attributes that allow different teams to encode their opinions about how these entries will inform operations. For example, in Instagram our extended attributes encode “baseline” and “holdout” model IDs, which are used in our ranking infrastructure to orchestrate ranking funnel execution. \nCriticality\nIn addition to defining business function, we had to establish clear guidelines for model importance. Within Meta, SEVs and services have a unified-importance tier system where the Global Service Index (GSI) records a criticality from TIER0 to TIER4 based on the maximum incident severity level the service can cause, from SEV0 as the most critical to SEV4 as simply a “heads up.” Since GSI criticality had social proof at the company, and infra engineers were familiar with this system, we adopted these criticalities for models and now annotate them at the model type and model level.\nNo longer would each team decide to raise their own model services to TIER1 for themselves, increasing the burden on all teams that support these models. Teams needed to provide an immediate response (available 24/7) on call and be able to prove that their models contributed meaningfully to critical business metrics to qualify for elevated monitoring.\nConfiguration structure as a foundation for automation \nOnce we had onboarded a critical mass of Instagram models to the model registry, we could begin to fully integrate with our monitoring and observability suite using our Meta-wide configuration solution, Configerator. With this, we could now have model performance monitoring and alerts that are fully automated and integrated with our tooling for SLIs called SLICK, dashboards that allow us to monitor models across many time series dimensions, and a suite of alerting specific to the model that is driven from the entries in the model registry.\nThis provided all our teams confidence that our monitoring coverage was complete and automated.\nLaunching\nWhile a point-in-time snapshot of models in production is great for static systems, Instagram’s ML landscape is constantly shifting. With the rapid increase of iteration on the recommendation system driving an increased number of launches, it became clear our infrastructure support to make this happen was not adequate. Time-to-launch was a bottleneck in ML velocity, and we needed to drive it down.\nWhat did the process look like?\nConventionally, services were longstanding systems that had engineers supporting them to tune. Even when new changes would introduce new capacity regression risks, we could gate this behind change safety mechanisms. \nHowever, our modeling and experimentation structure was unique in that we were planning for more rapid iteration, and our options were insufficient. To safely test the extent of load a new service could support, we would clone the entire service, send shadow traffic (i.e., cloned traffic that isn’t processed by our clients), and run multiple overload tests until we found a consistent peak throughput. But this wasn’t a perfect science. Sometimes we didn’t send enough traffic, and sometimes we’d send too much, and the amount could change throughout the day due to variations in global user behavior. \nThis could easily take two days to get right, including actually debugging the performance itself when the results weren’t expected. Once we got the result, we’d then have to estimate the final cost. Below (in Figure 5) is the formula we landed on.\nFigure 5: A formula calculating capacity estimations for a new launch.\nThe actual traffic shifting portion was tedious as well. For example, when we managed to fully estimate that we needed 500 replicas to host the new service, we might not actually have 500 spares lying around to do a full replacement, so launching was a delicate process of partially sizing up by approximately 20%, sending 20% of traffic over, and then scaling down the old service by 20% to reclaim and recycle the capacity. Rinse, repeat. Inefficient!\nAnd by the time we got to the end of this arduous process, the ordeal still wasn’t over. Each team was responsible for correctly setting up new alerts for their baseline in a timely fashion, or else their old models could and did trigger false alarms. \nHow does forcing virtual pools aid product growth?\nOne of the prerequisites for fixing competition for resources and unblocking productivity was to put up guardrails. Prior to this, it was “first come first served,” with no clear way to even “reserve” future freed capacity. It was also hard to reason about fairness from an infra perspective: Would it make sense to give each team equal pools, or give each individual person a maximum limit? \nAs it turned out, not all MLEs are experimenting at the same time, due to staggered progress on their work, so individual (per-engineer) limits were not ideal. One member might be in the experimentation stage and another might be training. So our solution was to provide bandwidth to each team. \nOnce each team — and therefore product — had quotas distributed, their launch policy became more clear cut. Some teams established free launching as long as the team was within quota. Others required no regressions in capacity usage. But mostly this unlocked our ability to run launches in parallel, since each one required much less red tape, and prioritization was no longer done at the org level.\nWhat other tooling improved launching?\nAs mentioned earlier, preplanning with capacity estimations was critical to understanding cost and ensuring reliability. We were often asked, Why not let autoscaling take care of everything? The problem was that each service could be configured slightly differently than a previously optimized service, or some architectural change could have affected the performance of the model. We didn’t have an infinite amount of supply to work with, so by the time we fully traffic-shifted everything over, we might find that we didn’t have enough supply. Reverting is costly, taking hours to get through each stage.\nBy doing capacity estimations in advance, this also allowed us and each team to accurately evaluate metric improvement versus cost. It might be worthwhile to double our costs if something would increase time spent on the app by 1%, but likely not for a 0.05% improvement where we could better spend that capacity funding another initiative.  \nWith partners in AI Infra, we developed two major solutions to this process: offline performance evaluation and an automated launching platform.\nWe simplified determining performance of a new service using recorded traffic. Pre-recorded traffic was continuously collected into a data warehouse that the benchmarker could read from, and we’d spin up temporary jobs with this automation. One job would replay different levels of traffic continuously and send it to another job that was a clone of the existing experiment. By putting stoppers on desired latency and error rates, the tooling would eventually output a converged stable number that we could understand as the max load (see Figure 6).\nFigure 6: Load tests converging on an accurate measure of load.\nThe launch platform itself would input the numbers we captured from these tests, automatically collect demand data as defined, and run that same formula to calculate a cost. The platform would then perform the upscaling/downscaling cycle for teams as we shifted traffic.\nAnd finally, by leveraging the model registry, we were able to land this model change in code (see example in Figure 6), to help us better maintain and understand the 1000+ models within our fleet. Likewise, this bolstered our trust in the model registry, which was now directly tied to the model launch lifecycle.\nFigure 7: A theoretical model registry change during launch.\nThis suite of launch automation has dramatically reduced the class of SEVs related to model launches, improved our pace of innovation from a few to more than 10 launches per week, and reduced the amount of time engineers spend conducting a launch by more than two days.\nModel stability\nAs the number of models in production increased, our organization started to feel the effects of an inconsistent measure of model health. While ranking models are run like any other distributed backend system (receive a request, produce a response), one may think a universal SLO that measures request success rate can suffice to capture holistic health. This is not the case for ranking models, as the accuracy of recommendations received carries significant importance to the end-user experience. If we consider a user who is a huge fan of golf but does not enjoy cooking content (see the “available & irrelevant” case in Figure 8 below), we see an example of this inaccuracy in practice. This is precisely what the model stability metric sought to capture.\nFigure 8: Different types of responses that can be provided to an end user.\nWhy is measuring ranking model reliability unique?\nRanking models, unlike traditional idempotent request/response backends, produce scores predicting user action given a set of candidates (PLIKE, PCOMMENT, PFOLLOW, etc.). These scores then combine and are used to determine which candidates are most relevant to an end user. It’s important that these scores accurately reflect user interest, as their accuracy is directly correlated to user engagement. If we recommend irrelevant content, user engagement suffers. The model stability metric was designed to make it easy to measure this accuracy and detect inaccuracy at our scale. \nLet’s discuss how this works.\nDefining model stability\nModels are complex, and they produce multiple output predictions. Let’s take a simplified example (shown in Figure 9 below) of a multi-task-multi-label (MTML) model predicting three actions:\nFigure 9: A simplified MTML model predicting three actions.\nFor us to claim this model is stable, we must also claim that each underlying prediction is stable.\nWhen evaluating the accuracy of a ranking model’s predictions, we typically look at two metrics:\nModel calibration, which is based on observed real-world outcomes and answers the question, “Are we over- or under-predicting user action?” It is calculated as a ratio of predicted click-through-rate (CTR) and empirical CTR. A perfect predictor will have calibration centered at 1.\nModel normalized entropy (NE), which measures the discriminative power of a predictor, and answers the question, “How well can this predictor separate action from inaction?” It is calculated as a ratio of the average log-loss per impression to what the average log-loss per impression would be if we always predicted the empirical CTR. With NE, lower values are better, and an NE of 1 is equivalent to random predictions.\n(For more information regarding our choice of prediction evaluation metrics, please refer to the paper, “Practical Lessons from Predicting Clicks on Ads at Facebook.”)\nA model’s predictions are unstable when either calibration or NE are out of their expected healthy ranges. To determine what a healthy range is, we must look at each metric in real time, and Figure 10 below shows what these time series can look like:\nFigure 10: Example predictions of calibration and NE over a period of time.\nBy observing the trend of a healthy prediction, we can apply thresholds for our evaluation metrics. When these thresholds are breached, the underlying prediction is considered unstable.\nFrom here, we can define model stability as a binary indicator across a model’s predictions. It is 1 if all underlying predictions are stable, and 0 if any prediction is unstable. This is an extremely powerful method of reacting to real-time prediction instability as well as a tool for understanding trends in predictive health per model or across distinct products ranking funnels.\nOperationalizing model stability\nWith a real-time view on model predictive health, we can leverage this unified definition of model stability and apply it to all of our models in production, once again leveraging the model registry as a ledger to hold this important data. In Figure 11 below, we can see the addition of model stability metric metadata after we determined the expected thresholds.\nFigure 11: Model stability definitions stored in the model registry.\nGiven the large number of models in production, each producing many predictions, building a portable definition of model health applicable to all of our ranking models represented an important milestone toward upleveling Instagram’s ML infrastructure maturity. This has unlocked our ability to build generic alerting to guarantee detection of our most important models becoming unstable, thereby moving us closer to mitigation when our recommendation system is at risk. \nSince the addition of these metrics and alerting, ML teams have discovered previously hidden issues within their models and addressed them faster than before, leading to higher-quality recommendations.\nKey takeaways\nIn our journey to scale Instagram’s algorithm to manage over 1000 models, we have learned several critical lessons that have shaped our approach and infrastructure. These takeaways not only highlight the challenges we faced but also underscore the strategies that led to our success.\nInfra understanding is the foundation to building the right tools\nA unified understanding of our infrastructure footprint was essential in developing the right tools to support our scaling efforts. By identifying the gaps and potential risks in our existing systems, we were able to implement solutions such as the model registry that significantly improved our operational efficiency and reliability posture.\nHelping colleagues move fast means we all move faster\nBy addressing the model iteration bottleneck, we enabled our teams to innovate more rapidly. Our focus on creating a seamless, self-service process for model iteration empowered client teams to take ownership of their workflows. This not only accelerated their progress but also reduced the operational burden on our infrastructure team. As a result, the entire organization benefited from increased agility and productivity.\nReliability must consider quality\nEnsuring the reliability of our models required us to redefine how we measure and maintain model quality. By operationalizing model stability and establishing clear metrics for model health, we were able to proactively manage the performance of our models. This approach enables us to maintain high standards of quality across our recommendation systems, ultimately enhancing user engagement and satisfaction.\nOur experience in scaling Instagram’s recommendation system has reinforced the importance of infrastructure understanding, collaboration, and a focus on quality. By building robust tools and processes, we have not only improved our own operations but also empowered our colleagues to drive innovation and growth across the platform.\nThe post Journey to 1000 models: Scaling Instagram’s recommendation system appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>In this post, we explore how Instagram has successfully scaled its algorithm to include over 1000 ML models without sacrificing recommendation quality or reliability.  We delve into the intricacies of managing such a vast array of models, each with its own performance characteristics and product goals.  We share insights and lessons learned along the way—from [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/05/21/production-engineering/journey-to-1000-models-scaling-instagrams-recommendation-system/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/05/21/production-engineering/journey-to-1000-models-scaling-instagrams-recommendation-system/\">Journey to 1000 models: Scaling Instagram&#8217;s recommendation system</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "In this post, we explore how Instagram has successfully scaled its algorithm to include over 1000 ML models without sacrificing recommendation quality or reliability.  We delve into the intricacies of managing such a vast array of models, each with its own performance characteristics and product goals.  We share insights and lessons learned along the way—from [...]\nRead More...\nThe post Journey to 1000 models: Scaling Instagram’s recommendation system appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22525",
        "categories": [
          "Production Engineering",
          "Instagram"
        ],
        "isoDate": "2025-05-21T16:00:38.000Z"
      },
      {
        "creator": "",
        "title": "Meta’s Full-stack HHVM optimizations for GenAI",
        "link": "https://engineering.fb.com/2025/05/20/web/metas-full-stack-hhvm-optimizations-for-genai/",
        "pubDate": "Tue, 20 May 2025 16:00:29 +0000",
        "content:encodedSnippet": "As Meta has launched new, innovative products leveraging generative AI (GenAI), we need to make sure the underlying infrastructure components evolve along with it. Applying infrastructure knowledge and optimizations have allowed us to adapt to changing product requirements, delivering a better product along the way. Ultimately, our infrastructure systems need to balance our need to ship high-quality experiences with a need to run systems sustainability. \nSplitting GenAI inference traffic out into a dedicated WWW tenant, which allows specialized runtime and warm-up configuration, has enabled us to meet both of those goals while delivering a 30% improvement in latency. \n\nWho we are\nAs the Web Foundation team, we operate Meta’s monolithic web tier, running Hack. The team is composed of cross-functional engineers who make sure the infrastructure behind the web tier is healthy and well designed. We jump into incident response, work on some of the most complex areas of the infrastructure, and help build whatever we need to keep the site happily up and running.\nTo accomplish this, we have established a series of best practices on being a “good citizen” of the shared tier. We need to ensure that all requests comply with these guidelines to prevent issues from spilling over and affecting other teams’ products. One core rule is the request runtime—limiting a request to 30 seconds of execution. This is a consequence of the HHVM (HipHop Virtual Machine) runtime—each request has a corresponding worker thread, of which there is a finite number. To ensure there are always threads available to serve incoming requests, we need to balance the resources available on each host with its expected throughput. If requests are taking too long, there will be fewer available threads to process new requests, leading to user-visible unavailability. \nThe changing landscape\nClassically, webservers at Meta are optimized for serving front-end requests—rendering webpages and serving GraphQL queries. These requests’ latency is typically measured in hundreds of milliseconds to seconds (substantially below the 30-second limit), which enables hosts to process approximately 500 queries per second.\nAdditionally, a web server will spend about two-thirds of its time doing input/output (I/O), and the remaining third doing CPU work. This fact has influenced the design of the Hack language, which supports asyncio, a type of cooperative multi-tasking, and all the core libraries support these primitives to increase performance and decrease the amount of time the CPU is sitting idle, waiting for I/O.\nGenAI products, especially LLMs, have a different set of requirements. These are driven by the core inference flow: The model responds with a stream of tokens that can take seconds or minutes to complete. A user may see this as a chatbot “typing” a response. This isn’t an effect to make our products seem friendlier; it’s the speed at which our models think! After a user submits a query to the model, we need to start streaming these responses back to the user as fast as possible. On top of that, the total latency of the request is now substantially longer (measured in seconds). These properties have two effects on the infrastructure—minimal overhead on the critical path before calling the LLM, and a long duration for the rest of the request, most of which is spent waiting on I/O. (See Figures 1 and 2 below).\nFigure 1: Percent of time spent on I/O, typical requests (~70%) vs. GenAI (~90%).\n \nFigure 2: Overall request latency CDF; typical requests vs. GenAI.\nA series of optimizations\nThis shift in requirements allowed Web Foundation to reexamine the rules of running the monolithic web tier. We then launched a dedicated web tenant (a standalone deployment of WWW) that allowed custom configuration, which we could better tune to the needs of the workload.\nRequest timeout\nFirst, running on an isolated web tier allowed us to increase the runtime limit for GenAI requests. This is a straightforward change, but it allowed us to isolate the longer-running traffic to avoid adverse impacts on the rest of the production tier. This way, we can avoid requests timing out if inference takes longer than 30 seconds.\nThread-pool sizing\nRunning requests for longer means there is reduced availability of worker threads (which, remember, map 1:1 with processed requests). Since webservers have a finite amount of memory, we can divide the total memory available by the per-request memory limit to get a peak number of active requests; this in turn tells us how many requests we can execute simultaneously. We ended up running with approximately 1000 threads on GenAI hosts, as compared to a couple of hundred on normal webservers.\nJIT cache and “jumpstart”\nHHVM is a just-in-time (JIT) interpreted language, which means the first time a given function executes, the machine needs to compile it to lower-level machine code for execution. Additionally, a technique called Jump-Start allows a webserver to seed its JIT cache with outputs from a previously warmed server. By allowing GenAI hosts to use Jump-Start profiles from the main web tier, we are able to greatly speed up execution, even if the code overlap is not identical. \nRequest warm-up\nHHVM also supports the execution of dummy requests at server startup, which we can execute, and then we can discard the results. The intent here is to warm non-code caches within the webserver. Configuration values and service discovery info are normally fetched inline the first time they are needed and then cached within the webserver. By fetching and caching this information in warm-up requests, we prevent our users from observing the latency of these initial fetches. \nShadow traffic\nFinally, Meta heavily uses real-time configuration to control feature rollouts, which means that jumpstart profiles consumed at startup time might not cover all future code paths the server will execute. To maintain coverage in the steady state, we also added request shadowing, so we can ensure that gating changes are still covered in the JIT cache.\nThe post Meta’s Full-stack HHVM optimizations for GenAI appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>As Meta has launched new, innovative products leveraging generative AI (GenAI), we need to make sure the underlying infrastructure components evolve along with it. Applying infrastructure knowledge and optimizations have allowed us to adapt to changing product requirements, delivering a better product along the way. Ultimately, our infrastructure systems need to balance our need to [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/05/20/web/metas-full-stack-hhvm-optimizations-for-genai/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/05/20/web/metas-full-stack-hhvm-optimizations-for-genai/\">Meta&#8217;s Full-stack HHVM optimizations for GenAI</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "As Meta has launched new, innovative products leveraging generative AI (GenAI), we need to make sure the underlying infrastructure components evolve along with it. Applying infrastructure knowledge and optimizations have allowed us to adapt to changing product requirements, delivering a better product along the way. Ultimately, our infrastructure systems need to balance our need to [...]\nRead More...\nThe post Meta’s Full-stack HHVM optimizations for GenAI appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22498",
        "categories": [
          "Data Infrastructure",
          "DevInfra",
          "Production Engineering",
          "Web"
        ],
        "isoDate": "2025-05-20T16:00:29.000Z"
      },
      {
        "creator": "",
        "title": "Open-sourcing Pyrefly: A faster Python type checker written in Rust",
        "link": "https://engineering.fb.com/2025/05/15/developer-tools/open-sourcing-pyrefly-a-faster-python-type-checker-written-in-rust/",
        "pubDate": "Thu, 15 May 2025 18:30:33 +0000",
        "content:encodedSnippet": "Back in 2017, engineers at Meta sought to create a type checker for Instagram’s typed Python codebase. Years later, as the type system continued to evolve, that type checker eventually became Pyrefly. \nPyrefly is a new type checker and IDE experience for Python, written with Rust, and now available for the entire Python community to use! It’s open-source, supports both CLI usage and IDE integration. and is designed to help you catch errors before runtime in Python codebases of any size.\nOn this episode of the Meta Tech Podcast, Pascal Hartig sits down with Maggie, Rebecca, and Neil — some of the team behind Pyrefly —  to discuss this latest  release from Meta and how they built an incremental type checker that scales to mono repositories.\nDownload or listen to the episode below:\n\nYou can also find the episode wherever you get your podcasts, including:\nSpotify\nApple Podcasts\nPocket Casts\nThe Meta Tech Podcast is a podcast, brought to you by Meta, where we highlight the work Meta’s engineers are doing at every level – from low-level frameworks to end-user features.\nSend us feedback on Instagram, Threads, or X.\nAnd if you’re interested in learning more about career opportunities at Meta visit the Meta Careers page.\nLinks\nPyrefly\nPyre\nRuff\nPEP 484\nThe post Open-sourcing Pyrefly: A faster Python type checker written in Rust appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Back in 2017, engineers at Meta sought to create a type checker for Instagram&#8217;s typed Python codebase. Years later, as the type system continued to evolve, that type checker eventually became Pyrefly.  Pyrefly is a new type checker and IDE experience for Python, written with Rust, and now available for the entire Python community to [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/05/15/developer-tools/open-sourcing-pyrefly-a-faster-python-type-checker-written-in-rust/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/05/15/developer-tools/open-sourcing-pyrefly-a-faster-python-type-checker-written-in-rust/\">Open-sourcing Pyrefly: A faster Python type checker written in Rust</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Back in 2017, engineers at Meta sought to create a type checker for Instagram’s typed Python codebase. Years later, as the type system continued to evolve, that type checker eventually became Pyrefly.  Pyrefly is a new type checker and IDE experience for Python, written with Rust, and now available for the entire Python community to [...]\nRead More...\nThe post Open-sourcing Pyrefly: A faster Python type checker written in Rust appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22509",
        "categories": [
          "Culture",
          "DevInfra",
          "Open Source",
          "Meta Tech Podcast"
        ],
        "isoDate": "2025-05-15T18:30:33.000Z"
      },
      {
        "creator": "",
        "title": "Introducing Pyrefly: A new type checker and IDE experience for Python",
        "link": "https://engineering.fb.com/2025/05/15/developer-tools/introducing-pyrefly-a-new-type-checker-and-ide-experience-for-python/",
        "pubDate": "Thu, 15 May 2025 18:30:08 +0000",
        "content:encodedSnippet": "Today we are announcing an alpha version of Pyrefly, an open source Python type checker and IDE extension crafted in Rust. Pyrefly is a static type checker that analyzes Python code to ensure type consistency and help you catch errors throughout your codebase before your code runs. It also supports IDE integration and CLI usage to give you flexibility in how you incorporate it into your workflow. \nThe open source community is the backbone of the Python language. We are eager to collaborate on Pyrefly with the community and improve Python’s type system and the many libraries that we all rely on.  \nGet started\nReady to dive in? The official Pyrefly website has all the details, but to quickly get started:\nInstall Pyrefly on the command-line: pip install pyrefly.\nMigrate your existing type checker configuration to Pyrefly.\nEnhance Your IDE: Download the Pyrefly extension for VSCode and enjoy a lightning fast IDE experience from starter projects to monorepos.\nLeave feedback for us on GitHub.\nWhy we built Pyrefly\nBack in 2017, we embarked on a mission to create a type checker that could handle Instagram’s massive codebase of typed Python. This mission led to the birth of the Pyre type checker, inspired by the robust designs of Hack and Flow, and written in OCaml to deliver scalable performance. \nOver the years, Pyre served us well, but as the type system evolved and the need for typechecking to drive responsive IDE emerged, it was clear that we needed to take a new approach. We explored alternate solutions and leveraged community tools like Pyright for code navigation. But the need for an extensible type checker that can bring code navigation, checking at scale, and exporting types to other services drove us to start over, creating Pyrefly. \nThe principles behind Pyrefly\nToday, we’re excited to unveil Pyrefly, a project we’ve been developing openly on GitHub. We invite you to explore our work and try it out on your own project. While a project like Pyrefly is the sum of thousands of technical choices, a few notable principles we’ve followed are:\nPerformance\nWe want to shift checks that used to happen later on CI to happening on every single keystroke. That requires checking code at speed (on large codebases we can check 1.8 million lines of code per second!) and careful thought to incrementality and updates. Pyrefly is implemented in Rust and designed for high performance on codebases of all sizes.\nIDE first\nWe want the IDE and command line to share a consistent view of the world, which means crafting abstractions that capture the differences without incurring unnecessary costs. Designing these abstractions from the beginning is much easier than retrofitting them, which we tried with Pyre.\nInference\nSome Python programs are typed, but many aren’t. We want users to benefit from types even if they haven’t annotated their code – so automatically infer types for returns and local variables and display them in the IDE. What’s more, in the IDE you can even double click to insert these inferred types if you think that would make the program better.\nOpen source\nPython is open source, and hugely popular. The Python typing specification is open source, which made Pyrefly vastly easier to develop. Many of the libraries Meta contributes to are open source,( e.g., PyTorch).\nPyrefly is also open source, available on GitHub under the MIT license, and we encourage pull requests and issue reports. We also have a Discord channel for more free flowing discussions. We would love to build a community around Pyrefly.\nThe future of Pyrefly\nWe will work with the Python community to drive the language forward and improve the developer experience. Since the beginning of Pyre, we open sourced our code and contributed a number of PEPs alongside the community of type checker maintainers. We feel we can do more with Pyrefly to help Python developers leverage the benefits of types for developers, library authors, and folks just learning the language. \nMeta has leveraged types in dynamic languages from the beginning and knows the significant benefits it brings to developer productivity and security. We plan to share more of our learnings and tooling with blogs, better types in the ecosystem and language enhancements. \nToday we’re releasing Pyrefly as an alpha. At the same time, we’re busy burning down the long-tail of bugs and features aiming to remove the alpha label this Summer. Your feedback is invaluable to get there, so please give it a try and report your bugs or things you think can be improved. Even if Pyrefly isn’t right for your project, we would love to hear how you use types and what you would like to see improved in your editor.\nJoin us on the journey as we help illuminate your bugs with Pyrefly. Happy coding! \nHear more about Pyrefly \nCheck out the episode of the Meta Tech Podcast where several team members share their experience developing Pyrefly and technical details for how it works. We also just talked at PyCon US about high-performance Python through faster type checking and free threaded execution.\nTo learn more about Meta Open Source, visit our open source site, subscribe to our YouTube channel, or follow us on Facebook, Threads, X, and LinkedIn.\nAcknowledgements \nPyrefly was created By Meta’s Python Language Tooling Team: Jia Chen, Rebecca Chen, Sam Goldman, David Luo, Kyle Into, Zeina Migeed, Neil Mitchell, Maggie Moss, Conner Nilsen, Aaron Pollack, Teddy Sudol, Steven Troxler, Lucian Wischik, Danny Yang, and Sam Zhou.\nThe post Introducing Pyrefly: A new type checker and IDE experience for Python appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Today we are announcing an alpha version of Pyrefly, an open source Python type checker and IDE extension crafted in Rust. Pyrefly is a static type checker that analyzes Python code to ensure type consistency and help you catch errors throughout your codebase before your code runs. It also supports IDE integration and CLI usage [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/05/15/developer-tools/introducing-pyrefly-a-new-type-checker-and-ide-experience-for-python/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/05/15/developer-tools/introducing-pyrefly-a-new-type-checker-and-ide-experience-for-python/\">Introducing Pyrefly: A new type checker and IDE experience for Python</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Today we are announcing an alpha version of Pyrefly, an open source Python type checker and IDE extension crafted in Rust. Pyrefly is a static type checker that analyzes Python code to ensure type consistency and help you catch errors throughout your codebase before your code runs. It also supports IDE integration and CLI usage [...]\nRead More...\nThe post Introducing Pyrefly: A new type checker and IDE experience for Python appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22495",
        "categories": [
          "DevInfra",
          "Open Source"
        ],
        "isoDate": "2025-05-15T18:30:08.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Kerry Beetge",
        "title": "Qodana Case Study: How JetBrains Kotlin QA Scaled Quality for Kotlin 2.0",
        "link": "https://blog.jetbrains.com/qodana/2025/05/qodana-case-study-kotlin/",
        "pubDate": "Wed, 21 May 2025 15:01:27 +0000",
        "content:encodedSnippet": "Qodana case study\n\n\n\n\nTable of Contents\n\nThe challenge: Complexity without clear-cut use cases\nThe solution: Static analysis with Qodana\nHow Kotlin integrated Qodana\nResults: Faster releases, more confidence\nLooking ahead\n\nWhen we prepared to release IntelliJ IDEA support for Kotlin 2.0, a major milestone for their compiler and ecosystem, their QA team faced a formidable challenge: how to ensure consistent, reliable quality across a complex and evolving codebase without slowing down development.\nWith the Kotlin compiler, IDE plugin, and numerous inspections being refactored and rewritten, the need for deep validation was clear, but the scope made traditional manual testing impractical. That’s where Qodana came in.\nThe challenge: Complexity without clear-cut use cases\nRather than discrete features with predictable behavior, Kotlin QA was dealing with broad architectural changes, language-level enhancements, and evolving development workflows. Many of these updates didn’t come with fixed test scenarios. Instead, the QA team had to understand and test large interconnected systems within the scope of the IDE quickly and at scale.\nThe release of Kotlin 2.0 brought major updates to the compiler, improving performance and extensibility, while also introducing necessary refactorings and reductions in technical debt. Alongside this, the Kotlin IDE plugin underwent substantial changes, including complete rewrites of many inspections used to detect unreachable or unconventional code.\nThese inspections needed to work reliably across every conceivable language construct. Manually verifying each one would have required hundreds of hours and substantial QA bandwidth, something the team simply didn’t have.\nThe solution: Static analysis with Qodana\nTo help meet this challenge, the Kotlin QA team turned to Qodana as a supporting tool in the process.\nTheir strategy was to leverage static code analysis to both improve code health and test the inspections themselves by running them on large, real-world codebases like IntelliJ IDEA, which is developed using both Kotlin and Java.\nThis gave the team immediate value in two ways:\nValidation at scale: They could confirm that inspections were functioning as expected across millions of lines of code quickly, automatically, and comprehensively.\n\n\n\n\nEarly detection: Static analysis helped uncover edge cases, inconsistencies, and bugs that wouldn’t have surfaced through manual exploratory testing.\nThis image is for illustrative purposes only as the Kotlin profile is confidential. \n\n\n\nHow Kotlin integrated Qodana\nAfter experimenting with Qodana locally, the team integrated it into their CI pipeline using TeamCity. They added Qodana as a build step and began publishing results to Qodana Cloud.\nTo ensure focus, they used baseline files to filter out known issues, allowing them to zero in on new, unexpected regressions without unnecessary noise. The result was a streamlined workflow that supported both developers and QA engineers by delivering fast, actionable feedback.\nSupporting strategic testing\nThis initiative has brought a significant improvement for both QA and the development team. It took automated regression testing to the next level, providing solid ground for further development.\nQodana played a key role in enabling this shift:\nBy automating deep inspection coverage, it freed the team to focus on high-value, human-driven exploratory testing of complex integration parts.\n\n\n\n\nIt allowed the team to move faster while maintaining confidence in the quality of the Kotlin ecosystem.\n\n\n\n\n\nResults: Faster releases, more confidence\nSaved time and effort: Manual testing was no longer a bottleneck.\nImproved accuracy: Real-world validation caught bugs earlier and more reliably.\nIncreased team buy-in: The approach was well-received across the team, and quickly became a standard part of Kotlin QA’s workflow.\nLooking ahead\nFollowing the success of this initiative, the Kotlin team is exploring further expansion of static analysis with Qodana, including:\nDeeper CI integration and infrastructure automation.\nPerformance QA support.\nContinued evolution of their Exploratory QA model.\nLiliia Abdulina, Head of QA For Kotlin Language and Ecosystem Teams\nQodana really saved us when we were rolling out Kotlin 2.0 IDE support. It helped us scale testing across large codebases and identify problems early – without overwhelming our team with manual work. The developers were genuinely impressed by the results, and the whole team values the stability and speed we’ve gained.”\nKotlin uses Qodana to analyze complex, modular systems. Your team can also use Qodana for code quality and as a core pillar of your QA strategy.\nWant to integrate Qodana into your team’s QA workflow? Learn more about how Qodana works or dive into another Qodana case study with Moovit. \nTry Qodana",
        "dc:creator": "Kerry Beetge",
        "content": "When we prepared to release IntelliJ IDEA support for Kotlin 2.0, a major milestone for their compiler and ecosystem, their QA team faced a formidable challenge: how to ensure consistent, reliable quality across a complex and evolving codebase without slowing down development. With the Kotlin compiler, IDE plugin, and numerous inspections being refactored and rewritten, [&#8230;]",
        "contentSnippet": "When we prepared to release IntelliJ IDEA support for Kotlin 2.0, a major milestone for their compiler and ecosystem, their QA team faced a formidable challenge: how to ensure consistent, reliable quality across a complex and evolving codebase without slowing down development. With the Kotlin compiler, IDE plugin, and numerous inspections being refactored and rewritten, […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=568973",
        "categories": [
          "case-study-qodana",
          "kotlin",
          "qodana"
        ],
        "isoDate": "2025-05-21T15:01:27.000Z"
      },
      {
        "creator": "Dmitry Savvinov",
        "title": "Amper Update, May 2025 – A Standalone Build Tool for Kotlin, Server-Side and Multiplatform",
        "link": "https://blog.jetbrains.com/amper/2025/05/amper-update-may-2025/",
        "pubDate": "Wed, 21 May 2025 10:38:40 +0000",
        "content:encodedSnippet": "Amper 0.7.0 is here, expanding beyond multiplatform apps to include support for server-side development with Ktor and Spring, adding iOS to Amper’s list of supported Kotlin Multiplatform targets, and much more. The standalone version of Amper is now the primary focus of the project, and the Gradle-based variant is being phased out. Read on for details, and as always, see the release notes for the full list of changes.\nTo use Amper’s latest features, get IntelliJ IDEA 2025.1.2 Preview (or newer).\nServer-side support for Ktor and Spring\nAmper now offers support for Ktor and Spring projects out of the box, including the ability to package executable JARs and use BOM dependencies, as well as IDE integrations.\nThe ktor-simplest-sample shows a minimal REST service built with Ktor and Amper:\n\n\n\n\nAmper also supports Spring Boot applications. Try the classic Spring PetClinic sample – now built with Amper:\n\n\n\n\nYou can enable support for Ktor or Spring in the module.yaml file:\nproduct: jvm/app\n\nsettings:\n  ktor: enabled\n  # or\n  springBoot: enabled\n  # ... rest of your module configuration ...\nThis sets up your module with sensible defaults: It adds the required compiler plugins like no-arg and all-open for Spring, applies the appropriate BOM, configures version catalogs, and lets you build an executable JAR using the new amper package command.\nAmper integrates fully with existing IDE functionality for both Ktor and Spring. You get all the essentials, like run configurations and endpoint discovery, and advanced framework-specific tools, such as the Spring Bean Graph.\n\n\n\n\nTo try Amper in server-side projects, refer to the samples in the repository. You can also use the new templates for server-side projects included in the amper init command.\nTry the server-side samples\n                                                    \nIDE improvements\nImproved diagnostics and quick-fixes\nIn Amper 0.7.0, we’ve made a number of existing warnings and error messages more readable and actionable. We also ensured that Amper degrades gracefully when there are errors in the configuration, preserving tooling support to help you resolve any issues. Here are a few highlights:\nIf a dependency version is overridden by another dependency that requests a newer version, Amper now reports this as a warning, provides a detailed explanation of why the override occurred, and offers a quick-fix to update the version to match:\n\n\n\n\nAmper now provides clear errors when a multiplatform dependency is missing support for one or more targets required by the module that includes it, and offers various quick-fixes to resolve the issue:\n\n\n\n\nProviding clear diagnostics and actionable guidance for misconfigured builds is one of our top priorities. We’re continuing to improve here and welcome your feedback in the issue tracker.\nAdding dependencies for unresolved references\nWhen your code references a symbol from another module that isn’t declared as a dependency yet, Amper now offers a quick-fix to add it as a dependency without requiring you to leave the Kotlin file you’re editing:\n\n\n\n\nThis quick-fix currently works for unresolved references to other modules within your project. We’re planning to add support for external libraries like kotlinx.coroutines in upcoming releases.\nKotlin Multiplatform support in standalone Amper\nWith 0.7.0, the standalone version of Amper now supports Kotlin Multiplatform development for iOS, in addition to Android and Desktop. You can build, package, and run KMP apps for these platforms entirely with Amper. No need to directly configure other build tools – Amper handles all native toolchain integrations behind the scenes.\nAs an example, we have converted the updated KotlinConf app for these platforms to Amper. You can find the code on this branch.\n\n\n\n\n\n\n\n\nTo learn more about KMP projects with Amper, take a look at the samples in the repository.\nTry the Amper-based KMP samples\n                                                    \nThe future of standalone Amper and Gradle-based Amper\nAmper was initially released as a Gradle-based configuration tool. Gradle’s capabilities and plugin ecosystem helped us prototype quickly and supported early adoption patterns, including per-module migration and the ability to customize the build logic.\nSince then, we’ve released a standalone version of Amper that handles the build process entirely on its own, without requiring users to interact with other build tools. Our goal was to answer a few key questions:\nDo we gain any user-visible benefits by writing and maintaining a full-fledged build system?\nIs it feasible to support most common scenarios out of the box without relying on third-party plugins?\nCan Amper provide enough flexibility to cover advanced real-life scenarios without sacrificing high-quality tooling support?\nToday, we’re excited to share the results of this research. The standalone version of Amper is now the main path forward. Gradle-based Amper is deprecated and will be phased out in future releases.\nThe standalone version of Amper already supports core KMP and server-side scenarios. In fact, the Amper project itself has been built using standalone Amper for several releases now! Many existing Amper diagnostics, quick-fixes, refactorings, and other features are only possible because Amper controls the entire build process, and we see huge potential for further evolution.\nWe’re also confident that Amper can offer the flexibility and customizability needed for advanced use cases: custom packaging and deployment, environment-specific configuration (for example, for CI), and plugins. We’re actively working on extensibility to enable all these use cases. We plan to share the first preview of Amper’s extensibility API soon.\nIf you’re attending KotlinConf this week, watch our talk on May 22 to hear more about Amper’s direction, and stop by our booth to discuss Amper!\nUpdated dependency versions\nAmper now uses Compose Multiplatform 1.8.0 by default, which brings Compose Multiplatform support for iOS to Stable.\nGetting started with Amper 0.7.0\nTo update an existing standalone Amper project, run the update command:\n./amper update\nTo start a new project, simply use init:\namper init\nFor examples, see the sample projects in the Amper repository.\nTo enjoy full support for the latest Amper features, use IntelliJ IDEA 2025.1.2 Preview (or newer).\nTry Amper\n                                                    \nShare your feedback\nAmper is still experimental and under active development. You can provide feedback about your experience by joining the discussion in the Kotlinlang Slack’s #amper channel or sharing your suggestions and ideas in a YouTrack issue. Your input and use cases help shape the future of Amper!",
        "dc:creator": "Dmitry Savvinov",
        "content": "Amper 0.7.0 is here, expanding beyond multiplatform apps to include support for server-side development with Ktor and Spring, adding iOS to Amper’s list of supported Kotlin Multiplatform targets, and much more. The standalone version of Amper is now the primary focus of the project, and the Gradle-based variant is being phased out. Read on for [&#8230;]",
        "contentSnippet": "Amper 0.7.0 is here, expanding beyond multiplatform apps to include support for server-side development with Ktor and Spring, adding iOS to Amper’s list of supported Kotlin Multiplatform targets, and much more. The standalone version of Amper is now the primary focus of the project, and the Gradle-based variant is being phased out. Read on for […]",
        "guid": "https://blog.jetbrains.com/?post_type=amper&p=568261",
        "isoDate": "2025-05-21T10:38:40.000Z"
      },
      {
        "creator": "Siva Katamreddy",
        "title": "Coding Guidelines for Your AI Agents",
        "link": "https://blog.jetbrains.com/idea/2025/05/coding-guidelines-for-your-ai-agents/",
        "pubDate": "Wed, 21 May 2025 09:01:18 +0000",
        "content:encodedSnippet": "As software developers, we invest significant time and effort learning various technologies, understanding design patterns, avoiding anti-patterns, and striving to write clean, maintainable code. Over the years, this knowledge becomes second nature, guiding our decisions as we design systems, write features, and review code.\nBut the landscape is evolving fast.\nWe’re now entering a new era of software development, where AI agents are becoming our pair programmers, code reviewers, and even architects. These AI tools are powerful, but they’re only as good as the instructions we provide. If we want these agents to generate code that’s idiomatic, secure, maintainable, and aligned with our standards, we should communicate our intent very clearly to the agents to avoid any assumptions.\nWhy guidelines matter more than ever\nNowadays, asking an AI agent to “create a Spring Boot REST API” will give you a working result, but it may:\nMiss pagination for list APIs.\nUse field injection instead of constructor injection.\nSkip error handling or logging.\nNot adhere to your project’s package structure or naming conventions.\nThis is where technology-specific coding guidelines come into play. They provide:\nA clear standard for how code should be written in a given language or framework.\nA reference point for developers to onboard quickly and write consistent code.\nA contract to share with AI agents when prompting them to generate code.\nOur goal: a living catalog of AI-friendly coding guidelines\nWe’re working on building a catalog of guidelines – a developer-centric and AI-ready resource that outlines best practices for commonly used technologies like Java, Spring Boot, Spring Data, Spring Security, Docker, Testcontainers, and more.\nThe guidelines will include:\nPreferred coding styles and conventions\nDos and Don’ts (best practices vs. anti-patterns)\nCommon “gotchas” to avoid\nReal-world code examples with explanations\nHow this helps developers and AI agents alike\nFor developers, this catalog becomes a trusted reference – something they can consult before implementing a feature, doing a code review, or mentoring a teammate.\nFor AI agents, it becomes recommended guidelines – a set of standards you can paste into a prompt and instruct agents to follow when generating code.\nExample use case\nYou could start a prompt with:\nGenerate a Spring Boot REST controller following these guidelines:\nUse constructor-based dependency injection\nReturn ResponseEntity with proper status codes\nValidate input using @Valid and return meaningful error responses\nAvoid using Optional in request bodies\nAnd the result? The generated code is more aligned with your expectations, saving time on refactoring and reviews.\nHow to use guidelines with Junie\nJunie is an autonomous AI coding agent from JetBrains. You can specify your coding style, best practices, and general preferences by specifying your desired guidelines in the .junie/guidelines.md file so that Junie will follow them while generating code.\nCheck out the junie-guidelines repository, which has a catalog of guidelines for various technologies. \nYou can add all the guidelines for various technologies that you are using into the .junie/guidelines.md file and delegate tasks to Junie. Junie will take these guidelines into consideration while generating the code so that you don’t have to add these guidelines in each prompt. \nHow to use Junie guidelines in existing (legacy) projects?\nFor greenfield projects, you can use the guidelines from the catalog and start building your application. But what about existing applications that already follow certain conventions and patterns?\nYou can ask Junie to create a guidelines.md file that includes the coding conventions being followed in the current codebase so far.\n\nOnce the guidelines.md file is generated, you can tweak it to add more guidelines or update the existing ones as needed.\nSummary\nThis living catalog of AI-friendly coding guidelines is more than just documentation. It’s a community-driven playbook designed to keep our codebases consistent, reliable, and future-ready. By pooling our collective expertise in areas like Java, Spring Boot, Docker, and Testcontainers, we’ve created a single source of truth that benefits both human developers and AI-powered tools. Whether you’re implementing a tricky feature, conducting a code review, or fine-tuning your AI prompts, these guidelines will save you time and prevent common pitfalls.\nNOTE: Some guidelines are opinionated, and your views and those of the author may differ on certain points. Feel free to modify the guidelines to suit your needs and team preferences.\nWe plan to publish the first batch of guidelines soon and open it for community contributions. If you care about code quality in the age of AI, this is your chance to help define what good AI-generated code looks like.\nWe are working on creating guidelines for various programming languages including Java, Kotlin, Python, Go, JavaScript/TypeScript, etc.\nWe invite you to visit the junie-guidelines repository on GitHub, explore the existing sections, and, most importantly, contribute your own guidelines.\nHave a favorite pattern, a memorable gotcha, or an example that perfectly illustrates a best practice? Submit a pull request! Your contributions will not only strengthen the catalog but also help shape the future of AI-assisted development. Let’s build this resource together and set a new standard for coding excellence.",
        "dc:creator": "Siva Katamreddy",
        "content": "As software developers, we invest significant time and effort learning various technologies, understanding design patterns, avoiding anti-patterns, and striving to write clean, maintainable code. Over the years, this knowledge becomes second nature, guiding our decisions as we design systems, write features, and review code. But the landscape is evolving fast. We’re now entering a new [&#8230;]",
        "contentSnippet": "As software developers, we invest significant time and effort learning various technologies, understanding design patterns, avoiding anti-patterns, and striving to write clean, maintainable code. Over the years, this knowledge becomes second nature, guiding our decisions as we design systems, write features, and review code. But the landscape is evolving fast. We’re now entering a new […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=568016",
        "categories": [
          "jetbrains-ai",
          "ai-agents",
          "junie"
        ],
        "isoDate": "2025-05-21T09:01:18.000Z"
      },
      {
        "creator": "Vaclav Pech",
        "title": "Moving the MPS Forum to the New JetBrains Platform Community Space",
        "link": "https://blog.jetbrains.com/mps/2025/05/mps-forum-moved/",
        "pubDate": "Wed, 21 May 2025 05:22:46 +0000",
        "content:encodedSnippet": "Discussions help communities evolve and thrive. The MPS community has been relying on the MPS Slack channel and the Zendesk community forum for many years. While Slack has served its purpose as a place for instantly exchanging advice and ideas, the forum has gradually fallen out of use. This is for good reason – the forum platform is inefficient for discussing software development topics. It lacks advanced code formatting capabilities, doesn’t support Markdown, which is widely used by software developers, and has an inconvenient search engine, among other issues.\nIntroducing the new JetBrains Platform community space\nWe are happy to join other JetBrains tools in the new JetBrains Platform community space. A dedicated category has been created to host the MPS community’s conversations. Please bookmark this link and start using it for future technical discussions.\nHow to get started\nJetBrains Platform allows you to sign up through JetBrains Hub or your Google account. You can use your existing JetBrains Hub account or easily create one using one of the SSO providers.\nWelcome to JetBrains Platform! post for instructions on how to get started. As you become familiar with the interface, feel free to browse existing topics or create a new one in the MPS category.\nWhat will happen to the current forum?\nThe Zendesk forum for MPS developers will be preserved in read-only mode, ensuring that the knowledge accumulated over the years remains accessible. We encourage all community members to join us in moving to the new and improved space. We are always open to further improvement, so please provide us with your feedback.\nJetBrains platform!\nYour JetBrains MPS team",
        "dc:creator": "Vaclav Pech",
        "content": "Discussions help communities evolve and thrive. The MPS community has been relying on the MPS Slack channel and the Zendesk community forum for many years. While Slack has served its purpose as a place for instantly exchanging advice and ideas, the forum has gradually fallen out of use. This is for good reason – the [&#8230;]",
        "contentSnippet": "Discussions help communities evolve and thrive. The MPS community has been relying on the MPS Slack channel and the Zendesk community forum for many years. While Slack has served its purpose as a place for instantly exchanging advice and ideas, the forum has gradually fallen out of use. This is for good reason – the […]",
        "guid": "https://blog.jetbrains.com/?post_type=mps&p=563108",
        "categories": [
          "announcement"
        ],
        "isoDate": "2025-05-21T05:22:46.000Z"
      },
      {
        "creator": "Andrew Zakonov",
        "title": "What’s next for Junie: building a smart and controllable AI coding agent",
        "link": "https://blog.jetbrains.com/junie/2025/05/what-s-next-for-junie-building-a-smart-and-controllable-ai-coding-agent/",
        "pubDate": "Tue, 20 May 2025 16:14:24 +0000",
        "content:encodedSnippet": "For the last few months, our team has been on a thrilling journey, building the next generation of AI-assisted tools – Junie, the coding agent by JetBrains. After countless hours of experiments, collecting your feedback, and using Junie internally, we are convinced that coding agents bring a paradigm shift in how software is built.\nToday, we want to share our vision and priorities for Junie, built for developers who love to code.\nIncreased end-to-end development speed\nWe believe true speed isn’t measured in how fast an AI generates lines of code – it’s measured from the moment you conceive an idea to the moment your code is merged, until it is deployed, delivering value to users.\n\n\n\n\nThat’s why we are investing lots of product and technical effort into every step of the developer workflow:\nFormulating tasks, following up on recent tasks, or even brainstorming new ideas: Ask mode was released in April, so you could discuss ideas with Junie, provide better follow-ups, and improve collaboration with our agent.\n\n\n\n\nUnderstanding and controlling Junie better: The Plan feature provides clear reasoning and a two-column interface so you can see the high-level direction and the specific steps being done. If you want to change the plan, you can stop Junie, add new hints in the follow-up, and continue the task with better guidance. We are now investing in stop-continue mode improvements and are also planning to implement support for real-time steering mode.\n\n\n\n\nReviewing code effectively and quickly: Developing both Code mode and Ask mode helps you to provide follow-ups, discuss the changes, and implement them as quickly as possible – and exactly in the way you want them.\n\n\n\n\nMuch-improved terminal-based integration: Ask Junie to run scripts, read logs, or deploy. Open the interactive Junie terminal to see and control what’s going on. Manual approval mode and brave mode offer more autonomous execution, with many improvements coming to brave mode to give you greater flexibility and granular control.\n\n\n\n\nQuality of generated code: The efforts here will reduce the probability that you’ll discard generated code, rewrite it, or need to deal with introduced technical debt that slows you down later.\n\n\n\n\nA manageable and developer-centric AI agent\nWe dislike black-box AI as much as anyone. Our goal with Junie is simple: We don’t want you playing a turn-based game with a coding agent where, when an agent makes a move, you spend 10 minutes reading code trying to figure out what happened, then you comment or roll back, and the agent continues. \nThis is not an effective approach, which is why we’re investing in the Plan feature, a clear and structured overview of steps. Junie proposes solutions clearly, always showing you the plan and intermediate steps, as well as the reasoning behind them. Work with Junie as your collaborator and save time. Read the explanation, see if tests were performed, and review test code – or stop at any moment if you disagree, provide guidance in the follow-up input, and continue moving in a good direction.\n\n\n\n\nAutomatic gear-shift approach for models\nIn a rapidly evolving AI industry, new models emerge all the time, which is why Junie isn’t locked into a single AI model. Instead, we test multiple models and configurations, including new ones, evaluating them against real coding benchmarks, real-world tasks, and user feedback.\nOur philosophy is simple: It’s our job, not yours, to determine which model performs best for a given task. This data-driven approach ensures Junie’s model choices consistently remain top-tier without requiring guesswork on your end. \nThis year, we will definitely ship an advanced mode that allows the manual selection of models and custom model endpoints (we use this internally for our experiments). But in most cases, if we’ve done our job right, Junie will use the best model (or combination of models) for your task, like driving an automatic transmission vehicle instead of a manual.\nCustomizing Junie for any task, developer, or team\nOne size never fits all in software development. We understand that every developer and team has preferences for the behavior of the coding agent. Junie is different for everyone. Some might want Junie to be conservative and only make changes when it’s very sure about them; others might prefer it to be aggressive and creative. Currently, .junie/guidelines.md provides basic solutions and customization, and we recommend actively using it for maximum value. \nAt the same time, we’re working on implementing better configurable settings for customizing Junie’s behavior, for example, adjustable dials for creativity, risk tolerance, coding style strictness, etc. Additionally, some configurations are purely guideline-based, while others could be deterministic, such as a setting to always run tests before submitting – another area we’re actively exploring.\n\n\n\n\nScaling to bigger tasks\nRight now, Junie is good for tasks with five or ten files and up to a few dozen steps. But we’re building it capable of breaking large coding tasks into smaller ones, completing them in parallel, and seamlessly connecting them. Our goal is to help you delegate complex tasks to Junie, even when they take hundreds of files and steps. \nWe see this as the logical next step in collaboration with the coding agents: Today developers understand the limits of coding agents, breaking large tasks into smaller, manageable pieces. Tomorrow Junie will handle this autonomously, allowing you to focus on more important problems and searching for solutions.\nIntroducing new pricing tiers\nOur goal is to make Junie available to as many developers as we can, while offering a worry-free pricing model for those who use it regularly. Junie should never force you to count tokens, limit runs, or second-guess your usage. To do this, we introduced two main tiers: JetBrains AI Pro, which gives you a chance to evaluate Junie and use it from time to time, and JetBrains AI Ultimate, which covers most of the needs and requests of users. \nAt the same time, we’ve noticed some confusion from JetBrains AI Pro users about usage limits that are being reached too fast. We are working on both optimizing context usage and improving transparency around the quota spent for Junie so you can control it better. \nAn agent for developers who love to code\nA year ago, our first prototype scored about 20% on SWEBench. By January, we improved that score to 53%. Today, we’re at 60.8%. The result is currently one of the highest in the industry. It shows how well the AI produces correct code for real-world coding tasks – and how much you can trust your coding agent.\n\nHowever, our most important metric is not the highest benchmark, nor the amount of code generated for the project, nor its speed. We value your feedback and prioritize the quality of UX.\nThe best car isn’t necessarily the fastest car, and being a good collaborator involves more than just completing coding tasks quickly. During the EAP phase, we worked closely with initial user feedback, made dozens of improvements, and added several major features. We’ve seen clear progress in how our coding agent is perceived, and our plan is to develop Junie based on our vision, objective evaluations, and your feedback. \nMake it happen. With code.\nWith Junie",
        "dc:creator": "Andrew Zakonov",
        "content": "For the last few months, our team has been on a thrilling journey, building the next generation of AI-assisted tools – Junie, the coding agent by JetBrains. After countless hours of experiments, collecting your feedback, and using Junie internally, we are convinced that coding agents bring a paradigm shift in how software is built. Today, [&#8230;]",
        "contentSnippet": "For the last few months, our team has been on a thrilling journey, building the next generation of AI-assisted tools – Junie, the coding agent by JetBrains. After countless hours of experiments, collecting your feedback, and using Junie internally, we are convinced that coding agents bring a paradigm shift in how software is built. Today, […]",
        "guid": "https://blog.jetbrains.com/?post_type=junie&p=567337",
        "categories": [
          "news"
        ],
        "isoDate": "2025-05-20T16:14:24.000Z"
      },
      {
        "creator": "Anton Yalyshev",
        "title": "Kotlin and Azul: Collaboration for Enhanced Runtime Performance",
        "link": "https://blog.jetbrains.com/kotlin/2025/05/kotlin-and-azul-collaboration-for-enhanced-runtime-performance/",
        "pubDate": "Tue, 20 May 2025 13:00:09 +0000",
        "content:encodedSnippet": "Striving for high application performance\nFor many years, JetBrains has aimed to help developers write high-performance applications by providing tools for development and diagnostics. On the Kotlin team, we pay close attention to performance, offering language features such as inline functions and classes, optimizations in the standard library, thoughtful bytecode generation, and the Kotlin coroutines library, among other initiatives.\nA significant contribution to runtime performance comes from the JDK. We believe that viewing these components as an integrated system can bring even greater performance benefits.\nWe are excited to announce a strategic technical collaboration with Azul, a renowned high-performance JVM provider. Azul has a longstanding reputation in the Java community for delivering JVM innovations that address some of the toughest performance challenges facing JVM-based applications.\nJoining forces for JVM performance\nThis collaboration is driven by a shared vision: by closely examining how Kotlin-generated bytecode interacts with advanced JVM optimizations, we can uncover new ways to enhance runtime performance. Azul’s deep JVM expertise, combined with Kotlin’s ability to control bytecode generation, offers a unique opportunity to optimize the entire execution stack.\nUltimately, our collaboration aims to benefit both specialized high-performance JVM implementations (like Zing) and standard JVMs such as OpenJDK, thus helping all Kotlin users achieve better performance out of the box.\nOur first Step: Establishing clear benchmarks\nFirst, we needed to verify that existing features of the Zing JDK (also known as Azul’s Platform Prime product) positively impact Kotlin applications. We selected a Kotlin project from the widely respected TechEmpower Framework Benchmarks, which reflect typical backend workloads. The test exercised the ORM, database connectivity, dynamically sized collections, sorting, server-side templates, and other standard operations. Additionally, we implemented an application that performs CPU-intensive and memory-intensive operations. We ran these applications using different JDKs – standard OpenJDK and the high-performance Zing JDK – and tested them under high load.\nEarly results from this effort have already shown significant promise. The chart below illustrates the improvement in performance metrics when using the Zing JDK compared to OpenJDK.\n\nTechEmpower testCPU-intensive testMemory-intensive test\nLatency Avg23.9%28.0%27.8%\nThroughput30.5%39.0%38.1%\n\nTest environment\nZing JDK version: zing25.02.0.0-2-jdk11.0.26\nOpenJDK version: 21.0.7\nJVM run config: -Xms2g -Xmx2g\nHardware config: AWS EC2, 8 vCPUs, 16GB \nOS: Amazon Linux 2023\n\n\n\n\nStandard deviation for throughput remained within 15%. \nApart from using different JDKs, the test machines were identical. The performance enhancements observed can be attributed to key Platform Prime technologies:\nFalcon JIT compiler: Utilizes LLVM-based optimization techniques, enabling deeper optimizations and improved throughput. This directly enhances the execution efficiency of bytecode generated by the Kotlin compiler.\nC4 Pauseless Garbage Collector: Continuously manages memory concurrently without “stop-the-world” pauses, significantly reducing latency spikes and maintaining consistent response times, particularly beneficial for coroutine-intensive Kotlin applications.\nNext steps: Deeper exploration and optimization\nEncouraged by these findings, our next objectives are:\nTo expand benchmark coverage by adding various real-world use cases. The Azul team will also add Kotlin projects for regular testing of their JDK distributions.\nTo delve deeper into potential bytecode-level optimizations within the Kotlin compiler itself. The Azul engineering team will advise us on JVM requirements for bytecode optimizations. With this data, Kotlin’s compiler team will explore targeted changes in bytecode generation that could further boost runtime performance.\nJoin our journey\nWe invite the Kotlin community to participate in this exploration of runtime performance. What kinds of optimizations have worked for you? How does your application behave under load? Share your stories about achieving high runtime performance. If you’re curious, try running your server-side Kotlin applications on Platform Prime and observe how it performs in your environment.\nUpcoming webinar: Dive deeper into JVM performance\nStay tuned for our upcoming joint Kotlin-Azul webinar, where our engineers will present practical optimization strategies covering the entire technology stack – from the JVM platform to web application frameworks. We’ll be announcing registration details soon.",
        "dc:creator": "Anton Yalyshev",
        "content": "Striving for high application performance For many years, JetBrains has aimed to help developers write high-performance applications by providing tools for development and diagnostics. On the Kotlin team, we pay close attention to performance, offering language features such as inline functions and classes, optimizations in the standard library, thoughtful bytecode generation, and the Kotlin coroutines [&#8230;]",
        "contentSnippet": "Striving for high application performance For many years, JetBrains has aimed to help developers write high-performance applications by providing tools for development and diagnostics. On the Kotlin team, we pay close attention to performance, offering language features such as inline functions and classes, optimizations in the standard library, thoughtful bytecode generation, and the Kotlin coroutines […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=567713",
        "isoDate": "2025-05-20T13:00:09.000Z"
      },
      {
        "creator": "Kerry Beetge",
        "title": "Qodana’s New Insights Dashboard Provides Cross-Project Code Analysis Data",
        "link": "https://blog.jetbrains.com/qodana/2025/05/insights-dashboard-cross-project-code-analysis/",
        "pubDate": "Mon, 19 May 2025 19:20:34 +0000",
        "content:encodedSnippet": "Cross-project code analysis \n\n\n\n\nTable of Contents\n\nWho is it for?\nHow can the new Insights dashboard boost your team’s code confidence in their code?\nData and features you’ll find on the new Insights dashboard\n\nAvailable widgets﻿\nProjects﻿\nScans﻿\nAverage code coverage rate﻿\nAverage license audit rate﻿\nProblems by severity﻿\nProblems over a specific period﻿\nProjects sorted﻿\nProblems sorted﻿\nJoin the Qodana community for more on cross-project code analysis\n\n\nManaging code quality can be a challenge in itself, even without the complexity of multiple projects. Thanks to our new Insights dashboard you can now get a near-instant overview of the code quality and performance of all your projects whenever you need it, without having to constantly switch between projects.\nGet Qodana\nWho is it for?\nThe interactive Insights dashboard is a helpful tool for everyone, from team leads to project managers who need quick insights into project health and progress with the option to dive deeper. \nHow can the new Insights dashboard boost your team’s code confidence in their code?\n✅ Get a sense of the overall code health of your organization.\n✅ Make sure there are no critical vulnerabilities in the projects you analyze.\n✅ Track trends in code quality over time to help you make strategic decisions.\n✅ Identify projects where code analysis is not executed correctly.\nCross-project code analysis – Qodana Insights Dashboard Demo\n\n\n\nData and features you’ll find on the new Insights dashboard\nWith the new Insights dashboard, you can quickly determine the health of your projects with a high-level overview of the:\nTotal number of problems:\n\nFilter by teams, projects, inspections, inspection baseline states\nGroup by severity, inspection, and project\nTotal number of projects with an indication of:\n\nProjects where Qodana is not set up\nInactive projects – where Qodana has not been run in the last month\nState of third-party library licenses:\n\nProjects by license audit status: pass/fail/disabled\nState of test code coverage:\n\nProjects by code coverage: percentage/disabled/enabled\nSort inspections by:\n\nOccurrence\nSeverity\nSort projects by:\n\nTotal number of problems\nNumber of critical problems\nCode coverage percentage\nTake a look at the preview below to see what you can accomplish directly from the Insights dashboard. \n\n\n\n\nThe upper part of the Insights page contains filters that let you filter widgets by projects, severities, baseline, and inspections.\nAfter you configure all the widgets, you can copy the link to the page that contains this configuration state.\n\n\n\n\nAvailable widgets﻿\nProjects﻿\nDisplays the number of active and inactive projects in your organization.\nActive are the projects which reports were uploaded to Qodana Cloud within 90 days. A project is classified as inactive in case it contains sanity problems or its reports are older than 90 days.\nIf you hover over this dashboard, you can see the number of active and inactive projects. Here, you can click the line describing inactive projects to navigate to a comprehensive list these projects.\n\n\n\n\nScans﻿\nThis dashboard provides information about analyses performed on your projects excluding pull or merge requests and carried out by Qodana versions 2024.2 or later.\nAverage code coverage rate﻿\nIndicates the extent to which your projects are covered with tests, calculated using the code coverage feature, and lets you navigate to the projects with disabled code coverage.\nIf you hover over the widget, you can view the number of projects covered and not covered with tests and navigate to the respective projects.\n\n\n\n\nAverage license audit rate﻿\nIndicates the percentage of projects that passed the codebase analysis using the license audit feature.\nIf you hover over the widget, you can navigate to the projects where license audit failed or was not enabled, and view related analysis reports.\n\n\n\n\nProblems by severity﻿\nContains the diagram showing the problem numbers by their severities, see the description of severities for details.\n\n\n\n\nProblems over a specific period﻿\nShows the number of problems detected in your projects on a specific date within the latest 90 days. Using this diagram, you can see the progress in code quality.\n\n\n\n\nProjects sorted﻿\nIn the lower-left part of the Insights page, you can filter your projects by the number of problems, number of critical problems, as well as code coverage.\n\n\n\n\nBy clicking a specific project entry, you can navigate to a project page.\nProblems sorted﻿\nIn the lower part of the Insights page, you can sort problems detected in your projects by severity and occurrence.\n\n\n\n\nTo view all projects containing a specific problem, click a problem in this widget. To search a problem by its name, in the lower part of the widget click View all problems and use the search field.\nJoin the Qodana community for more on cross-project code analysis\nBe the first to learn about new insights into code quality, as well as tool and product updates from JetBrains Qodana. Join us on X, LinkedIn, and Reddit, or subscribe to updates.\nBookmark Dashboard Docs",
        "dc:creator": "Kerry Beetge",
        "content": "Managing code quality can be a challenge in itself, even without the complexity of multiple projects. Thanks to our new Insights dashboard you can now get a near-instant overview of the code quality and performance of all your projects whenever you need it, without having to constantly switch between projects. Get Qodana Who is it [&#8230;]",
        "contentSnippet": "Managing code quality can be a challenge in itself, even without the complexity of multiple projects. Thanks to our new Insights dashboard you can now get a near-instant overview of the code quality and performance of all your projects whenever you need it, without having to constantly switch between projects. Get Qodana Who is it […]",
        "guid": "https://blog.jetbrains.com/?post_type=qodana&p=567912",
        "categories": [
          "releases",
          "code-quality",
          "dashboards",
          "qodana"
        ],
        "isoDate": "2025-05-19T19:20:34.000Z"
      },
      {
        "creator": "Ekaterina Volodko",
        "title": "Kotlin Multiplatform Tooling: Now in IntelliJ IDEA and Android Studio",
        "link": "https://blog.jetbrains.com/kotlin/2025/05/kotlin-multiplatform-tooling-now-in-intellij-idea-and-android-studio/",
        "pubDate": "Mon, 19 May 2025 15:38:18 +0000",
        "content:encodedSnippet": "We recently outlined our plans for the future of Kotlin Multiplatform tooling. Today, we’re putting those plans into action with the Beta release of the new KMP plugin for your favorite IDEs – IntelliJ IDEA and Android Studio. This plugin simplifies every part of the KMP experience, from project setup to cross-platform development and Compose UI previews.\nTry the KMP Plugin\nIntegrated New Project wizard\nWith the plugin installed, you can create new KMP projects directly in the IDE.\nThe wizard supports all target combinations of Android, iOS, desktop, web, and server. You can also choose between a native UI or a shared UI with Compose Multiplatform.\n\nPreflight checks\nWhen you open a project, the plugin runs environment checks automatically. It verifies your OS, Java setup, Android SDK, Xcode installation, and Gradle configuration. If anything’s missing or outdated, you’ll get recommendations on how to fix it.\n\nReady to run\nAfter indexing, the plugin automatically generates run configurations for all platforms available in your project – Android, iOS, web, desktop, and server. \nFor iOS and Android, you can select simulators or emulators, or set up a physical device with the plugin’s guidance.\n\n\n\n\n\nCross-language support\nFor projects with both Kotlin and Swift, the plugin enables cross-language navigation, syntax highlighting, quick documentation, and debugging in your IDE.\n\nDebugging support for iOS is already available in Android Studio and IntelliJ IDEA Ultimate, and support in IntelliJ IDEA Community Edition is coming later.\nCompose Multiplatform support\nCompose Multiplatform for iOS recently became Stable, allowing you to confidently build beautiful shared UIs for production use across iOS, Android, and desktop. \nCompose Multiplatform code is fully supported in the IDE, with features like autocompletion, navigation, refactorings, and resource support. Thanks to UI previews that are available even from common code, you can preview components directly in the IDE without deploying your app.\n\n\n\n\n\nCompose Hot Reload\nWe know that fast iteration is key when building UIs. With Compose Hot Reload, you can instantly see UI changes without restarting your app or losing its state. \nCompose Hot Reload runs on the desktop JVM target, but even if your project is focused on mobile, you can add a desktop target just for development purposes.\nAs you modify your Compose code – adjusting layouts, styles, or logic – Hot Reload detects changes and applies them live to your running app. It’s not limited to small tweaks – you can change method signatures, remove existing code, and even create new classes. Your app retains its state, including the current screen and user input.\nYou can safely use Hot Reload for production apps, as it only affects development builds. To get started, add the Compose Hot Reload Gradle plugin to your project – see the documentation for setup details.\n\n\n\n\nTry Compose Hot Reload\nHow to install the KMP plugin\nThe Kotlin Multiplatform plugin is available via JetBrains Marketplace for IntelliJ IDEA 2025.1.1.1 and Android Studio Narwhal 2025.1.1. It only supports macOS for now, but Windows and Linux support is coming soon. \nNote that you need to explicitly enable K2 mode. To do this, go to Settings | Languages & Frameworks | Kotlin and select the Enable K2 mode checkbox.\nWhat’s next for Kotlin Multiplatform tooling\nThe KMP plugin is currently in Beta. It is ready for production use and already provides a solid foundation for Kotlin Multiplatform development.\nWe are actively working to expand its capabilities, polish the experience, and address known limitations. Your feedback is crucial to help us refine the tooling further. Our initial focus is on mobile development, with desktop and web improvements coming next.\nWe plan to stabilize the KMP plugin later this year, expand operating system support, and introduce new features based on your feedback.\nUpcoming tooling improvements include:\nWindows and Linux support\nYou’ll be able to use the KMP plugin on Windows and Linux. Running iOS applications will remain macOS-specific.\n\nAdvanced IDE support for Swift\nThe current plugin version already supports basic code completion and editing for Swift code. More advanced features, such as finding usages and type hierarchy navigation, are still planned.\n\n\n\n\nEasier KMP module creation\nYou’ll be able to create new Kotlin Multiplatform modules using the integrated KMP wizard.\n\n\n\n\nImproved tooling support for web and desktop platforms\nAfter stabilizing mobile platform support, we will focus on improving tooling for desktop and web development, aiming for a smoother, unified multiplatform experience.\nShare your feedback\nWe’d love to hear your feedback! Please share it in the #multiplatform channel on the Kotlinlang Slack (get an invite). If you encounter any issues, please report them through our issue tracker.\nTry the KMP Plugin\nRead more\nGet started with Kotlin Multiplatform\nCompose Multiplatform for iOS Is Stable and Production-Ready\nPresent and Future of Kotlin for Web\nKotlin Multiplatform Tooling – Shifting Gears",
        "dc:creator": "Ekaterina Volodko",
        "content": "We recently outlined our plans for the future of Kotlin Multiplatform tooling. Today, we’re putting those plans into action with the Beta release of the new KMP plugin for your favorite IDEs – IntelliJ IDEA and Android Studio. This plugin simplifies every part of the KMP experience, from project setup to cross-platform development and Compose [&#8230;]",
        "contentSnippet": "We recently outlined our plans for the future of Kotlin Multiplatform tooling. Today, we’re putting those plans into action with the Beta release of the new KMP plugin for your favorite IDEs – IntelliJ IDEA and Android Studio. This plugin simplifies every part of the KMP experience, from project setup to cross-platform development and Compose […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=567546",
        "categories": [
          "multiplatform"
        ],
        "isoDate": "2025-05-19T15:38:18.000Z"
      },
      {
        "creator": "Hanna Yakush",
        "title": "PhpStorm 2025.2 Early Access Program Is Now Open",
        "link": "https://blog.jetbrains.com/phpstorm/2025/05/phpstorm-2025-2-early-access-program-is-now-open/",
        "pubDate": "Mon, 19 May 2025 12:37:06 +0000",
        "content:encodedSnippet": "We’re opening the Early Access Program (EAP) for the next major PhpStorm 2025.2 release.\n\n\n\n    \nDownload PhpStorm 2025.2 EAP\n                                                    \nAbout Early Access Program (EAP)\nIf you’re not familiar with how our Early Access Program (EAP) works, here’s a quick overview:\nWe release new EAP builds weekly, giving you a sneak peek at upcoming features.\nEAP builds are completely free to use and do not require a license.\nYou can install the EAP version alongside your stable PhpStorm installation, so there’s no need to uninstall your current version.\nThe most convenient way to access EAP builds and keep both your stable and EAP versions up-to-date is by using our Toolbox App.\nAlternatively, you can download EAP builds from the EAP page or set up your IDE to automatically receive updates by selecting Check IDE Updates for the Early Access Program under Settings/Preferences | Appearance & Behavior | System Settings | Updates.",
        "dc:creator": "Hanna Yakush",
        "content": "We’re opening the Early Access Program (EAP) for the next major&#160;PhpStorm 2025.2 release. About Early Access Program (EAP) If you&#8217;re not familiar with how our Early Access Program (EAP) works, here&#8217;s a quick overview:",
        "contentSnippet": "We’re opening the Early Access Program (EAP) for the next major PhpStorm 2025.2 release. About Early Access Program (EAP) If you’re not familiar with how our Early Access Program (EAP) works, here’s a quick overview:",
        "guid": "https://blog.jetbrains.com/?post_type=phpstorm&p=567566",
        "categories": [
          "eap",
          "2025-2"
        ],
        "isoDate": "2025-05-19T12:37:06.000Z"
      },
      {
        "creator": "Anastasia Kazakova",
        "title": "JetBrains AI Assistant – Now in Visual Studio Code",
        "link": "https://blog.jetbrains.com/ai/2025/05/jetbrains-ai-assistant-now-in-visual-studio-code/",
        "pubDate": "Mon, 19 May 2025 11:11:06 +0000",
        "content:encodedSnippet": "At JetBrains, we design AI to empower developers and streamline their development process with AI-powered features integrated directly into their editor. From the beginning, AI Assistant was available only within JetBrains IDEs, and later in Android Studio, both of which are built on the IntelliJ Platform. While we’re incredibly proud of the deep integrations and performance those offer, we recognize that many developers have established workflows and preferences that don’t center exclusively around JetBrains products and the IntelliJ platform. We also believe that AI innovation shouldn’t be confined to a single technology provider, a single IDE, or even a family of IDEs from one vendor.\nIn order to reach a broader developer community and demonstrate our commitment to IDE-agnostic AI assistance, we’re introducing JetBrains AI Assistant for Visual Studio Code. This reflects our ongoing investment in building a comprehensive AI ecosystem, ensuring that cutting-edge technology is accessible to everyone, not just those using our IDEs.\n\n\n\n\nToday we’re launching the JetBrains AI Assistant for Visual Studio Code public preview. We invite you to participate and share your feedback with us.\nParticipate in Public Preview\n                                                    \nDuring the public preview, either use your current JetBrains AI subscription or, if you don’t have one, automatically get a free AI EAP license once you log in with your JetBrains Account.\nWhy try JetBrains AI Assistant in Visual Studio Code?\nWhether Visual Studio Code is your primary code editor or a companion tool to JetBrains IDEs or Visual Studio, JetBrains AI Assistant enhances productivity and joy by seamlessly integrating into your development workflow. We’ve built it on the following pillars:\nJetBrains long-term experience and expertise in programming languages. Our many years of accumulated knowledge help us deliver first-class development tooling and advanced support for LLM context collection. JetBrains AI Assistant for Visual Studio Code is now available for Java, Kotlin, JavaScript, TypeScript, Python, C#, C++, and C.\n\n\n\n\nMellum, JetBrains’ proprietary LLM (now also open-sourced) trained from scratch specifically to power cloud-based code completion in JetBrains AI Assistant. Benefit from the precise code completion suggestions for a single line or entire code blocks.\n\n\n\n\nJetBrains AI Assistant relies on top-tier local and cloud AI models. Our users are free to choose the best-fitting LLM for their current coding task or preference, ensuring optimal results every time. In JetBrains AI Assistant for Visual Studio Code, you can select from Gemini, Claude, and various GPT models.\nLocal models are not yet available in the preview for Visual Studio Code, but will be added later.\nExplore the full power of AI – delegate complex tasks to the built-in coding AI agent, leveraging its strengths to achieve optimal results under your supervision.\n\nThe agent used in AI Assistant for Visual Studio Code is different from Junie. In the new AI-powered development world, agents evolve quickly and effectively support developers in handling complex tasks. We experiment with new solutions and bring the best to our users. This agent is in active development by our AI Platform team and might later be integrated in other solutions from JetBrains. At the moment, the LLM quota consumption by the agent can be quite high in some cases. You’ll get an in-product notification when you are close to reaching the quota.\n\n\n\n\n\n\nAn AI chat with a comprehensive understanding of the entire codebase and deep knowledge of the target programming language. Ask questions using natural language, refine your prompt iteratively, and even make multiple file edits simultaneously without leaving the AI chat interface.\n\n\n\n\nOther AI-powered actions to boost developer productivity include generating commit messages, inline documentation, asking AI to explain what a block of code does, finding errors or mistakes, and even suggesting improvements for the selected code block.\nYou can find a full overview of features on our site and in our online documentation.\nInstallation details\nDuring the public preview, you can either use your current JetBrains AI subscription or, if you don’t have one, automatically get a free AI EAP license once you log in with your JetBrains Account. JetBrains AI plans and pricing will apply after the full public release. For our organizational customers, JetBrains AI Assistant for Visual Studio Code preview is also available with AI Enterprise.\nThe extension is available on the Visual Studio Code marketplace. While we are focused on an extension for Visual Studio Code right now, you are free to install our extension in other editors that are compatible with Visual Studio Code. We don’t impose any restrictions on such usage. The links to .vsix files are available in our online documentation.\nImportant notes and known limitations\nJetBrains AI Assistant does not provide language support features like code highlighting, code analysis, or refactoring. To access those capabilities, you may want to install a corresponding language support extension. For C#, we recommend using ReSharper for Visual Studio Code.\nDue to temporary implementation limitations while in preview, JetBrains AI Assistant for Visual Studio Code doesn’t work for our Chinese users. We hope to bring it to China soon.\nFeedback and bug reporting\nYour feedback is important to us, and it will help us improve JetBrains AI Assistant:\nSubmit bugs or just share your feedback to our issue tracker.\nContact our support via the form.\nRequest assistance by clicking on “Report issue or feedback” in the JetBrains AI Assistant view.\n\n\n\n    \nParticipate in Public Preview",
        "dc:creator": "Anastasia Kazakova",
        "content": "At JetBrains, we design AI to empower developers and streamline their development process with AI-powered features integrated directly into their editor. From the beginning, AI Assistant was available only within JetBrains IDEs, and later in Android Studio, both of which are built on the IntelliJ Platform. While we&#8217;re incredibly proud of the deep integrations and [&#8230;]",
        "contentSnippet": "At JetBrains, we design AI to empower developers and streamline their development process with AI-powered features integrated directly into their editor. From the beginning, AI Assistant was available only within JetBrains IDEs, and later in Android Studio, both of which are built on the IntelliJ Platform. While we’re incredibly proud of the deep integrations and […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=567614",
        "categories": [
          "news",
          "ai-in-ides",
          "jetbrains-ai",
          "vs-code"
        ],
        "isoDate": "2025-05-19T11:11:06.000Z"
      },
      {
        "creator": "Sasha Ivanova",
        "title": "ReSharper Comes to Microsoft Visual Studio Code: Public Preview Now Open",
        "link": "https://blog.jetbrains.com/dotnet/2025/05/19/resharper-comes-to-microsoft-visual-studio-code/",
        "pubDate": "Mon, 19 May 2025 11:10:42 +0000",
        "content:encodedSnippet": "For the past 20 years, ReSharper has been the legendary .NET productivity tool that changed how millions of developers explore, write, and improve their code in Microsoft Visual Studio. Today, we’re bringing this transformative experience to a new environment.\nReSharper is now available as an extension for Visual Studio Code.\n\n\n\n\nWhether VS Code is your primary editor or a companion tool to JetBrains Rider or Visual Studio, ReSharper’s productivity features will elevate your development experience. Now you can enjoy the same powerful code analysis, Rename refactoring, and intuitive Solution Explorer that millions of developers trust – all within VS Code’s streamlined interface.\nJoin the productivity club\n                                                    \nWhat ReSharper for VS Code offers\nReSharper for VS Code brings a focused set of productivity tools to your editing experience, including:\nInsightful code analysis to detect and fix errors and code smells in real time.\nSmart code completion and contextual suggestions to speed up development.\nReSharper Solution Explorer for VS Code allows you to navigate large codebases with ease.\nRename refactoring to safely update symbols across your entire project.\nConsistent code formatting based on your team’s style guide.\nFast navigation to files, types, symbols, and usages.\n\n\n\n\nYou can find a full overview of features on our landing page here.\n\n\n\n\nPublic preview\nReSharper for Visual Studio Code is currently available as part of a public preview. During this stage, the extension is free to use. Each build is limited to 30 days.\nOnce the preview ends, ReSharper for VS Code will become available as part of the dotUltimate subscription. You can review the pricing options for dotUltimate here. There will also be a free tier for non-commercial usage.\nGetting started is easy\nOnce you install the ReSharper for Visual Studio Code extension from the Microsoft Visual Studio Marketplace, just open your workspace as usual. \nReSharper will automatically scan for solution files (.sln / .slnx) in your workspace:\nIf it finds one solution, it will open it for you automatically.\nIf it finds more than one, you’ll see an Open Solution button – just click it to choose the solution you want to work with.\nFrom there, ReSharper gets to work indexing your code and enabling its productivity tools right away.\nCompatibility notice\nReSharper for Visual Studio Code is not compatible with the Microsoft C# and C# Dev Kit extensions. To ensure smooth operation, make sure both are disabled before using ReSharper.\nSupport\nIf you need assistance, a great place to start is our web help documentation. If you don’t find what you’re looking for there, feel free to post your question on the ReSharper community forum, where our team and other users can help.\nFeedback and bug reporting\nWe’re eager to hear your feedback. Please use our issue tracker for that. You can also report bugs and request assistance from inside the product by clicking on the R# icon in the task bar and selecting “Contact Support”. \nMore good news\nAlongside ReSharper, we’re excited to launch JetBrains AI Assistant for Visual Studio Code in public preview! This tool brings the power of AI into your everyday workflow with natural language chat that understands your project context, intelligent single- and multiline code completion, automatic documentation generation, and more. Discover how it can transform your coding experience in our launch announcement.\nWe’re excited to bring ReSharper to the Visual Studio Code community and even more excited to see what you do with it. Whether you’ve been using ReSharper for decades or you’re trying it for the first time, we hope this new extension becomes an essential part of your development workflow.\nJoin the public preview",
        "dc:creator": "Sasha Ivanova",
        "content": "For the past 20 years, ReSharper has been the legendary .NET productivity tool that changed how millions of developers explore, write, and improve their code in Microsoft Visual Studio. Today, we&#8217;re bringing this transformative experience to a new environment. ReSharper is now available as an extension for Visual Studio Code. Whether VS Code is your [&#8230;]",
        "contentSnippet": "For the past 20 years, ReSharper has been the legendary .NET productivity tool that changed how millions of developers explore, write, and improve their code in Microsoft Visual Studio. Today, we’re bringing this transformative experience to a new environment. ReSharper is now available as an extension for Visual Studio Code. Whether VS Code is your […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=567833",
        "categories": [
          "net-tools",
          "news",
          "releases",
          "resharper",
          "eap",
          "lsp",
          "public-preview",
          "release",
          "resharper-for-vs-code",
          "visual-studio-code",
          "vs-code"
        ],
        "isoDate": "2025-05-19T11:10:42.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "Finding Your Tribe – JUGs Unveiled ",
        "link": "https://blog.jetbrains.com/idea/2025/05/finding-your-tribe-jugs-unveiled/",
        "pubDate": "Mon, 19 May 2025 08:16:24 +0000",
        "content:encodedSnippet": "Ever catch yourself venting to your AI assistant at 2 am about more than just code? We get it. Debugging can very quickly turn into a therapy session. But when it comes to real talk, real career advice, and real connections, nothing beats an actual community.\nJava User Groups (JUGs) are spaces where Java devs swap stories, share knowledge, and grow together – no awkward small talk with a chatbot required.\nIn this post, we’ll break down what JUGs are, why they’re worth your time, and how to get involved. Let’s go!\nWhat are JUGs?\nJava User Groups (JUGs) are developer communities where Java people hang out – online or in-person – to chat about new trends, squash coding bugs together, and learn from industry professionals. \nJUGs are volunteer-driven, so you won’t find anyone trying to sell you anything. Instead, they operate on the concept of developers helping developers. \nMost JUGs host regular meetups packed with technical talks, hands-on workshops, and open Q&A sessions. These gatherings are nearly always free and welcome everyone, from total beginners to experts who’ve been coding for years. Some JUGs even organize annual conferences for their region, which are usually not free but gather a lot of interesting speakers to learn from. \nOutside of meetups, many groups also keep things lively with mailing lists, forums, or chat channels, so you can keep learning and getting help anytime. \nThe point is simple: encourage Java knowledge, support fellow coders, and create a safe, inclusive space to grow and connect.\nWhy Join JUGs?\nJUGs are a goldmine for learning, networking, and career growth. \nHere’s why you should join:\nStay up to date – Learn about new Java features, frameworks, and best practices through expert talks and workshops. Sometimes, you’ll pick up something you weren’t even looking for that ends up being surprisingly useful.\nExpand your network – Meet fellow developers, find mentors, and discover job opportunities through community connections.\nBoost your career – Speaking at JUGs, leading initiatives, or contributing to discussions can increase your visibility and even lead to conference speaking gigs.\nGet support and mentorship – JUGs provide a friendly space to ask questions, share knowledge, and grow alongside others. It doesn’t matter if you’re just starting out or leading a team, everyone’s on equal footing – no titles, no barriers, just real conversations.\nRoles inside JUGs\nEvery JUG runs a little differently. There’s no fixed formula for how things are organized internally, and that’s exactly what makes them special.\nWhatever the setup, there are always one or more leaders who take responsibility for keeping things moving. They plan meetups, connect with speakers, find venues, and hold the whole thing together. It’s voluntary work driven by passion, not perks.\nMembers, on the other hand, can contribute in any way they like, whether joining discussions, giving talks, helping with logistics, or simply showing up and supporting the group. There’s no pressure, just participation. Over time, those who keep showing up often become co-organizers or leaders themselves.\nJUGs are powered by people who care about Java and the ecosystem, so there’s always a place and a role to suit you. \nHow to join JUGs?\nIt is very easy to share your passion for Java with fellow developers: \nFind a local JUG on Meetup, Java User Groups, or Oracle’s JCP page.\nNo local JUG? Start your own or join Virtual JUG (vJUG) online!\nShow up, connect, and start learning, contributing, and having fun with a like-minded crowd! \nDevelop user groups together with JetBrains\nJetBrains is all about supporting developer communities. Our User Groups program offers free licenses for JetBrains tools, swag for giveaways, and promotional support to help you run engaging meetups and events. To learn more or apply for support, visit our dedicated page.\nThe most active JUGs\nJUGs are everywhere, covering every continent except Antarctica. The numbers speak for themselves: more than 350 JUGs exist worldwide, and over 100 of them actively collaborate with the Java Community Process (JCP) as official partners.\nWhich JUGs are the most active? If any of these are near you, consider joining!\nOnline \n🌍 Virtual JUG (vJUG)\nA Java meetup without borders, vJUG is entirely online, boasting a massive 19,000+ members from across the globe. With regular virtual sessions featuring top-notch speakers, it’s an easy, low-commitment way to stay sharp on Java, no matter where you are.\nEurope\n🇬🇧 London Java Community (LJC) (UK)\nLeaders: Barry Cranford, Martijn Verburg, Mel Tizzard, and others.\nMembers: 8,500+\nIn London’s buzzing tech scene, LJC is a force to be reckoned with. Known for its open-source contributions and strong ties to the JCP, it runs regular events from JVM language workshops to hackathons.\nLJC also holds a seat on the JCP, shaping Java’s evolution, and runs mentorship programs to help developers level up.\n🇳🇱 NLJUG (Netherlands)\nLeaders: Bert Breeman, Martin Smelt, Bert Jan Schrijver, Brian Vermeer, Bas Knopper, and Marianne Hoornenborg.\nMembers: 5,000+\nNLJUG connects developers, companies, and academic institutions across the country. Its leadership team drives initiatives like J-Fall and J-Spring that are some of Europe’s biggest Java events. Beyond events, NLJUG runs an academy, publishes the Dutch Java Magazine, and has a seat at the JCP table. \n🇳🇱 AmsterdamJUG (Netherlands)\nLeaders: Vladimir Dejanović, Geertjan Wielenga, Roy Braam, and Iva Dejanović. \nMembers: 4,400+\nAmsterdamJUG is one of the most active JUGs in the world. From meetups at venues like Code Nomads, OpenValue, and JetBrains office to collaborations with companies like Uber Technologies, there’s always something happening. \n🇵🇱 Polish JUG (Poland)\nLeaders: Adrian Nowak, Andrzej Grzesik, Jakub Dżon, and Konrad Malawski. \nMembers: 3,400+\nThis is one of the oldest and most influential Java communities in Central Europe. Apart from regular networking and educational events, this JUG has been instrumental in translating key Java literature, such as Thinking in Java, into Polish. \nThe group is also known for co-organizing GeeCON, a major Java conference held in Poland and the Czech Republic. \n🇧🇪 Belgian JUG (Belgium)\nLeaders: Founded by Stephan Janssen, now led by Tom Cools. Other members are: Frank Delporte, Loïc Magnette, Olivier Hubaut. \nMembers: 2,000+\nBelgian JUG is the birthplace of something much bigger: Devoxx. Founded in the late 1990s, Belgian JUG launched JavaPolis in 2001. It was a local event that later evolved into Devoxx, now one of the biggest Java conferences worldwide. Devoxx Belgium alone attracts thousands of developers every year.\nBelgian JUG also founded:\nDevoxx4Kids – An event introducing children to Java and programming.\nVoxxed Days – A series of Java-focused events across different cities.\nThis JUG proves that a small community can create a global movement.\nTo get involved or attend an event, check out their Meetup page or visit their GitHub for community projects and resources.​\n🇪🇸 Barcelona JUG (Spain)\nLeaders: Jonathan Vila, Anyul Rivas, Nacho Cougil, Alejandro Martínez, and others. \nMembers: 2,400+\nWith 2,400 registered members on Meetup, the group runs regular events listed on their website. The leaders are also behind the hugely popular Java conference formerly known as JBCN, now rebranded as DevBcn.\n🇳🇴 javaBin (Norway)\nLeaders: Dervis Mansuroglu, Alexander Samsig, Øyvind Løkling, Rafael Winterhalter, Karl Syvert Løland, Børge Nese, Alexander Amiri, Sverre Moe, Orathai Mai Khanasa, Chris Searle, and Janniche Lange. \nMembers: 6,000+\njavaBin is one of Norway’s largest tech communities. It boasts nearly 6,000 members and over 50 active contributors who organize events and workshops throughout the year. \nThe organization has branches in several regions of Norway. Each branch hosts regular meetups, student events, and even activities for kids. \njavaBin’s flagship event is JavaZone, held annually in September. This conference is one of the world’s largest community-driven Java events. Organized entirely by volunteers, JavaZone offers a platform for knowledge sharing, networking, and celebrating the Java ecosystem.\n🇨🇭 JUG Switzerland (Switzerland) \nLeaders: Marcus Fihlon, Philipp Oser, Dominik Berger, Patrick Baumgartner, Thomas Wenger, Christian Stettler, Michael Inden, Ursula Burri, and Sibylle Walther.\nMembers: 1,500+\nDespite smaller meetup sizes, the Swiss JUG makes up for it with well-organized logistics that keep its members connected across Switzerland. Their events are held in various cities, including Zürich, Basel, Bern, Lucerne, and St. Gallen. Thanks to this, it maintains an active and engaged community.\n🇫🇷 Paris JUG (France)\nLeaders: Charles Sabourdin, José Paumard, Khanh Tuong Maudoux, and Bruce Bujon.\nMembers: 200+\nThis vibrant community of Java enthusiasts in Paris hosts meetups quite often. If you cannot attend them, Paris JUG records most sessions and shares them on their YouTube channel. To stay informed about upcoming events, you can subscribe to their mailing list.​\nNorth America\n🇺🇸 San Francisco JUG – SFJUG (USA)\nLeaders: Pieter Humphrey, Chris Richardson, Aleksandar Gargenta, Rooz Mohazzab, etc.\nMembers: 8,900+\nLocated in the heart of Silicon Valley, SFJUG has grown to over 8,400 members since 2008. With regular expert talks and strong networking opportunities, it’s an ideal hub for Java developers in one of the world’s top tech cities. SFJUG also has a YouTube channel with some helpful materials. \n🇺🇸 Atlanta JUG (AJUG) (USA)\nLeaders: Pratik Patel, Vincent Mayers, Burk Hufnagel, and others. \nMembers: 3,900+\nAJUG does more than just host meetups, it runs Devnexus, the largest Java conference in the US. Held in Atlanta, Devnexus attracts developers from across the country (and beyond) to explore cutting-edge Java and JVM technologies. \nAJUG shows that even outside Silicon Valley, JUGs can thrive and build world-class developer communities.\n🇺🇸 Garden State JUG (USA)\nLeaders: Michael Redlich, Barry Burd, Chandra Guntur, Paul Syers, Neha Sardana, Scott Selikoff, and Caitlin Mahoney.\nMembers: 300+\nEstablished in February 2001 (originally as the ACGNJ Java Users Group), GSJUG is a non-profit organization dedicated to promoting the use of Java platforms, APIs, and the language. The group focuses on JVM technologies such as Java EE, Jakarta EE, MicroProfile, Spring, Groovy, and Kotlin, while occasionally exploring non-JVM topics like Meteor, AngularJS, and Rust. GSJUG is a proud member of the MicroProfile Working Group and the Jakarta EE Ambassadors and has adopted the Jakarta NoSQL specification. \nMeetings are generally held on the second Tuesday of each month, typically at Drew University in Madison, New Jersey, with options for online attendance via their YouTube channel.\n🇺🇸 Chicago JUG (USA)\nLeaders: Mary Grygleski, Freddy Guime, and others. \nMembers: 3,600+\nRegular activities of the CJUG include monthly tech talks, code-a-thons, mentorship programs, and networking events. This JUG also collaborates with local universities to engage emerging developers and supports open-source initiatives like the Adopt a JSR program.\n🇺🇸 New York Java SIG – NYJavaSIG (USA)\nLeaders: Frank Greco, Barry Burd, and others.\nMembers: 1,100+ members on Meetup and thousands more who’ve been part of its events and network since 1995.\nFounded in 1995, NYJavaSIG is the oldest Java User Group in existence. Over the years, it has hosted hundreds of talks featuring industry legends and Java Champions.\nWith thousands of members, NYJavaSIG remains the largest JUG in the US, influencing Java education in New York City and beyond. \nThey also share talk recordings and slides, extending their reach far beyond in-person attendees.\nSouth America\n🇧🇷 SouJava (Brazil)\nLeaders: Founded in 1999 by Bruno Souza (aka the Brazilian JavaMan) and Einar Saukas. Bruno Souza’s contributions earned him a Lifetime Achievement Award at JavaOne 2022. Another significant leader is Maximillian Arruda.\nMembers: One of the largest JUGs globally, with 40,000+ members.\nSouJava is deeply embedded in Brazil’s developer scene. It was also the first JUG to gain a seat on the JCP Executive Committee, influencing Java standards at the highest level.\nBeyond leadership, SouJava actively contributes to open-source projects and organizes local conferences and workshops across Latin America. If you’re in the region, this JUG is a must-join. \n🇪🇨 Ecuador JUG (Ecuador)\nLeader: Alberto Salazar and a team of dedicated co-organizers.\nMembers: 580+\nThey host bi-monthly technical sessions and run study circles aimed at helping developers tackle real-world challenges and prepare for Java certifications. Beyond meetups, Ecuador JUG maintains an active GitHub presence, sharing demos and workshop materials.\n🇩🇴 Java Dominicano (Dominican Republic)\nLeaders: Eudris Cabrera, Carlos Camacho, Brayan Muñoz, and Freddy Peña. \nMembers: 250+ and growing\nFounded in February 2014, this vibrant group of 250+ members is all about collaboration and knowledge sharing. They host monthly meetups with both local and international speakers.\nTheir flagship event, JConf Dominicana, is the Caribbean’s only dedicated Java conference, drawing nearly 250 attendees last year. Recently, the group won the 2024 JCP Award in the Java in Education Community category, recognizing their major impact in empowering new developers. \nAsia-Pacific\n🇯🇵 Japan JUG – JJUG (Japan)\nLeaders: Shin Tanimoto and Yusuke Suzuki.\nMembers: 13,000+\nJJUG is renowned for its flagship event, the JJUG Cross Community Conference (CCC), held twice a year in spring and autumn. These conferences attract around 1,000 participants, featuring sessions on the latest Java technologies and practices. In addition to the CCC, JJUG hosts monthly night seminars, which are evening sessions focusing on specific Java-related topics. \n🇮🇳 Bangalore JUG (India)\nLeaders: Vaibhav Choudhary, Jayashree S Kumar, Sathish Kumar Thiyagarajan, Fairoz Matte, and Souvik Das.\nMembers: 12,000+\nThis is one of India’s most active and dynamic Java communities. It stands out for its commitment to community-driven initiatives. Notably, it organizes Javafest, an annual, non-profit technology conference.\n🇮🇳 Delhi-NCR JUG (India)\nLeaders: Mala Gupta and a team of organizers.\nMembers: 1,800+\nThis JUG is the heart of North India’s Java community. Right in the middle of the fast-growing Delhi tech scene, this group brings together developers, architects, and tech enthusiasts eager to push Java forward. They run deep-dive workshops, expert-led webinars, and casual yet insightful talks that cover everything from JVM performance tuning to AI in Java. \nThey also engage with the community through their LinkedIn page and YouTube channel, providing access to past talks and updates on upcoming events.\n🇸🇬 Singa Dev (formerly SingaJUG) (Singapore)\nLeaders: Michael Isvy, Andrey Bodoev, and others.\nMembers: 2,200+\nOriginally established as a Java User Group, SingaJUG has evolved into Singa Dev to embrace a broader focus on open-source technologies and polyglot programming. \nThe team of dedicated organizers coordinates regular meetups featuring talks on topics like AI coding assistants, Spring Security, and JWT. These events are designed to foster an inclusive and respectful environment, encouraging knowledge sharing among developers of all levels.\nAfrica\n🇰🇪 Kenya Java User Group (Kenya)\nLeaders: Michael Muite, Dorice Amolo, Trevor Mbugua, and Abdirahman Abdullahi.\nMembers: The exact number of members isn’t publicly listed.\nKenya JUG is a community of Java enthusiasts based in Nairobi, Kenya. The group focuses on collaborations among Java developers through meetups, workshops, and knowledge-sharing sessions. They are active on GitHub and YouTube, where they share their resources and knowledge. \n🇿🇦 Jozi-JUG (South Africa)\nLeaders: Corneil du Plessis, Samantha Hayward and others.\nMembers: 3,200+\nJozi-JUG is based in Johannesburg, South Africa. This group is committed to expanding the JVM community, sharing knowledge, building technical skills, and creating lasting friendships among Java developers. Notably, Jozi-JUG was recognized with the 2023 JCP Award in the Java in Education Community category.\nJUG initiatives shaping Java\nJUGs don’t just bring developers together – they actively shape Java’s future. These efforts have influenced Java standardization, open-source projects, and even education:\nAdopt a JSR – Started by the London Java Community (LJC) and SouJava, this program allowed developers to contribute to Java Specification Requests (JSRs). JUGs tested early builds, provided feedback, and helped refine major Java features like lambdas in Java 8 and modules in Java 9, making Java releases more developer-friendly. The Adopt a JSR program also helped increase transparency and community trust in the JCP, which was often criticized as opaque before.\nAdoptOpenJDK / Adoptium – When developers needed free, high-quality JDK builds, JUG members stepped up. LJC-led AdoptOpenJDK provided OpenJDK binaries used in production worldwide. It later became Adoptium, now a major source of Java distributions, proving JUGs can drive open-source infrastructure.\nDevoxx4Kids – Created by Belgian JUG/Devoxx, this global initiative introduces kids to programming with Minecraft modding, Lego Mindstorms, and Java games. With JUG-led workshops from Europe to Africa, it inspires the next generation of developers while expanding Java’s reach. It has also helped break down barriers for young girls and underrepresented communities in tech.\nJUG Leadership in JCP – Some JUGs, like LJC and SouJava, hold seats on the Java Community Process Executive Committee, advocating for transparency and developer-friendly Java releases. JUG leaders have co-led JSRs and helped shape Java SE’s evolution.\nConclusion\nJUGs bring developers together to learn, collaborate, and shape Java’s future. Are you part of a JUG? How has it helped you grow professionally or personally? Share your experiences and let’s highlight the impact of these communities!",
        "dc:creator": "Irina Mariasova",
        "content": "Ever catch yourself venting to your AI assistant at 2 am about more than just code? We get it. Debugging can very quickly turn into a therapy session. But when it comes to real talk, real career advice, and real connections, nothing beats an actual community. Java User Groups (JUGs) are spaces where Java devs [&#8230;]",
        "contentSnippet": "Ever catch yourself venting to your AI assistant at 2 am about more than just code? We get it. Debugging can very quickly turn into a therapy session. But when it comes to real talk, real career advice, and real connections, nothing beats an actual community. Java User Groups (JUGs) are spaces where Java devs […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=567777",
        "categories": [
          "info",
          "idea",
          "intellij-idea",
          "jug",
          "jugs"
        ],
        "isoDate": "2025-05-19T08:16:24.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Ruben Rios",
        "title": "Connecting to Private NuGet Feeds Just Got Easier",
        "link": "https://devblogs.microsoft.com/visualstudio/connecting-to-private-nuget-feeds-just-got-easier/",
        "pubDate": "Wed, 21 May 2025 15:55:18 +0000",
        "content:encodedSnippet": "The Visual Studio 2022 17.14 update is here, and it brings great quality-of-life improvements—especially around NuGet authentication. From context about the authentication needs of private NuGet feeds to a simplified account selection workflow, this update helps you stay focused on your code! If you haven’t already, download the latest Visual Studio update to take advantage of this and the rest of the improvements.\nStreamlining the NuGet authentication experience\nOver the past year, we’ve made significant strides to improve the identity and authentication experiences across Visual Studio 2022. For instance, we introduced Web Account Manager (WAM) support to unify and simplify the sign-in experience of Entra ID accounts & we recently followed that up by adding multi-account support for GitHub, making it easier than ever to manage your GitHub identities inside Visual Studio.\nToday, we’re excited to share the next step in that journey: a more intuitive and reliable NuGet authentication experience. With the latest update, Visual Studio now proactively detects when authentication is needed during package restore and presents a new dialog that provides helpful context—such as which feed you’re attempting to access—and makes it easy to select the account best suited for the job. This small but impactful change simplifies the sign-in process, reduces authentication prompts, and helps you stay focused on your coding needs.\nHere’s what you can expect:\nClearer sign-in guidance showing you the specific NuGet feed you are accessing.\nImproved support for multi-factor authentication (MFA) allows you to efficiently manage accounts needed for NuGet restore operations, whether adding new accounts, selecting from existing ones, or re-entering credentials directly within the dialog.\nA more predictable sign in experience, with fewer repeated prompts and less authentication guesswork.\n\nTry It Out and Keep the Feedback Coming\nWe’ll continue investing in making the Visual Studio’s identity and authentication experiences more seamless, secure, and intuitive so please, keep the feedback coming— Every suggestion, upvote, and report helps us prioritize the areas that matter most to you. And while we’ve made great progress, we’re far from done!\nThe post Connecting to Private NuGet Feeds Just Got Easier appeared first on Visual Studio Blog.",
        "dc:creator": "Ruben Rios",
        "comments": "https://devblogs.microsoft.com/visualstudio/connecting-to-private-nuget-feeds-just-got-easier/#respond",
        "content": "<p>The Visual Studio 2022 17.14 update is here, and it brings great quality-of-life improvements—especially around NuGet authentication. From context about the authentication needs of private NuGet feeds to a simplified account selection workflow, this update helps you stay focused on your code! If you haven’t already, download the latest Visual Studio update to take advantage [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/connecting-to-private-nuget-feeds-just-got-easier/\">Connecting to Private NuGet Feeds Just Got Easier</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "The Visual Studio 2022 17.14 update is here, and it brings great quality-of-life improvements—especially around NuGet authentication. From context about the authentication needs of private NuGet feeds to a simplified account selection workflow, this update helps you stay focused on your code! If you haven’t already, download the latest Visual Studio update to take advantage […]\nThe post Connecting to Private NuGet Feeds Just Got Easier appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253176",
        "categories": [
          "Visual Studio",
          "Authentication",
          "NuGet",
          "nuget packages"
        ],
        "isoDate": "2025-05-21T15:55:18.000Z"
      },
      {
        "creator": "McKenna Barlow",
        "title": "Faster .NET Upgrades Powered by GitHub Copilot",
        "link": "https://devblogs.microsoft.com/visualstudio/faster-net-upgrades-powered-by-github-copilot/",
        "pubDate": "Mon, 19 May 2025 16:00:43 +0000",
        "content:encodedSnippet": "Introducing GitHub Copilot app modernization – Upgrade for .NET\nYou probably don’t look forward to the process of modernizing your applications. It can be time consuming, risky, and full of manual toil. Today we’re changing that.\nWe’re thrilled to introduce the public preview of GitHub Copilot app modernization – Upgrade for .NET, an AI-powered experience that helps you bring your .NET applications to the latest version quicker and more confidently than ever before. Powered by GitHub Copilot and Agent Mode, it serves as an intelligent upgrade companion that understands your code, determines the right upgrade path, and applies changes step by step with minimal manual effort.\nRead more about the public preview on our .NET blog.\nGet Started with Faster .NET Upgrades Today!\nGetting started with GitHub Copilot app modernization – Upgrade for .NET is easy.\nStep 1: Install the Extension\nHead to the Visual Studio Marketplace and download the GitHub Copilot app modernization – Upgrade for .NET extension. Once installed, you’re ready!\nStep 2: Use Copilot Agent Mode\nTo unlock the full power of AI-assisted upgrades, install the latest version of Visual Studio 17.14 and sign-in to a GitHub account with an active Copilot subscription.\nEnsure you have agent mode enabled: In Visual Studio, go to Tools > Options > GitHub > Copilot > Copilot Chat and select “Enable agent mode in the chat pane.”\nTurn on Agent Mode: To get started, open the GitHub Copilot Chat window, click the “Ask” button, then click “Agent”. This turns on Copilot Agent Mode, which gives you a smarter, more natural way to do the upgrades.\nSelect the Upgrade Tool: Once in Copilot Agent Mode, be sure to select the “Upgrade” tool from the Copilot Chat Tool Selector. Otherwise, Agent Mode won’t be able to use the specialized upgrade tools.\n\nFor more information on Agent Mode, check out our blog on the topic.\nHow to Run the Upgrade\nYou’ve got two options:\nRight-click your project or solution in Solution Explorer and select “Upgrade with GitHub Copilot”\n\nOr, just tell Copilot what you want to do in the chat:\n “Upgrade my solution to .NET 8”\n\nThat’s it. GitHub Copilot gets to work analyzing your code, preparing the upgrade, and guiding you through code changes.\nWhat’s Included?\n Automated code transformations: Copilot automatically makes the changes required to get your applications running on modern .NET.\ndocument.createElement('video');\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/GHCPUA-Update-Progress-Focus-1.mp4\n\n Customizable workflows: You can tailor which projects to upgrade, whether to address packages with security vulnerabilities in your upgrade, and more.\n Learning from your manual changes: When manual intervention is required, GitHub Copilot can learn from your manual changes and apply those learnings if it encounters a similar situation later on in your upgrade.\n\n Git Integration: Git commits are automatically created on your behalf so that you can adopt and test changes incrementally.\n\n Automatic test validation: It automatically runs your application’s unit tests to ensure correct behavior post-upgrade.\n Agent Mode functionality: Take advantage of Copilot Agent Mode with the latest preview version of Visual Studio installed.\nPlease Share Your Feedback\nStart your upgrade journey today with GitHub Copilot app modernization – Upgrade for .NET! Your feedback is crucial to us as we aim to improve the product during this public preview. To share feedback with the team, please utilize the “Leave Feedback” button in the upper right corner of the Upgrade Manager UX in Visual Studio.\n\nWe also welcome feedback via email to ghcpuacusteng@microsoft.com, as well as direct responses to our feedback survey.\nCheck out the new Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nThe post Faster .NET Upgrades Powered by GitHub Copilot appeared first on Visual Studio Blog.",
        "enclosure": {
          "url": "https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/GHCPUA-Update-Progress-Focus-1.mp4",
          "length": "4797367",
          "type": "video/mp4"
        },
        "dc:creator": "McKenna Barlow",
        "comments": "https://devblogs.microsoft.com/visualstudio/faster-net-upgrades-powered-by-github-copilot/#respond",
        "content": "<p>Introducing GitHub Copilot app modernization – Upgrade for .NET You probably don’t look forward to the process of modernizing your applications. It can be time consuming, risky, and full of manual toil. Today we’re changing that. We’re thrilled to introduce the public preview of GitHub Copilot app modernization &#8211; Upgrade for .NET, an AI-powered experience [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/faster-net-upgrades-powered-by-github-copilot/\">Faster .NET Upgrades Powered by GitHub Copilot</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Introducing GitHub Copilot app modernization – Upgrade for .NET You probably don’t look forward to the process of modernizing your applications. It can be time consuming, risky, and full of manual toil. Today we’re changing that. We’re thrilled to introduce the public preview of GitHub Copilot app modernization – Upgrade for .NET, an AI-powered experience […]\nThe post Faster .NET Upgrades Powered by GitHub Copilot appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253273",
        "categories": [
          "Artificial Intelligence",
          "GitHub Copilot",
          "Visual Studio",
          ".NET",
          ".NET upgrade",
          "Modernization",
          "Upgrade"
        ],
        "isoDate": "2025-05-19T16:00:43.000Z"
      },
      {
        "creator": "Jim Harrer",
        "title": "How to Watch Microsoft Build 2025 Online",
        "link": "https://devblogs.microsoft.com/visualstudio/how-to-watch-microsoft-build-2025-online/",
        "pubDate": "Fri, 16 May 2025 14:00:41 +0000",
        "content:encodedSnippet": "Microsoft Build 2025 Is Here! — How to Make the Most of It Virtually\nIt’s that time again—Microsoft Build has started! Microsoft Build 2025 runs this week (May 19–22)—and now’s the perfect time to catch the sessions live or watch past sessions on-demand.\nThis year, Build is more accessible than ever. Every keynote, breakout session, demo theater, and even our hands-on labs are available to stream—live or on-demand—completely free. No travel. No ticket. Just you, your browser, and some of the best developer content of the year.\nI’ve had the privilege of working alongside our Product Managers and Engineering teams to help bring these new experiences to life. And I can confidently say—this year’s lineup is comprehensive, with something for every Visual Studio user. From deep dives into .NET and GitHub Copilot in Visual Studio, to lightning-fast demo theaters and hands-on labs powered by the Microsoft Skillable platform, there’s truly something for everyone.\nSCHEDULE BUILDER\n\nStep 1: Customize Your Schedule\nIf you do just one thing today, head over to build.microsoft.com and use the free Schedule Builder. It’s the easiest way to:\nAdd Must Watch sessions from Satya Nadella, Kevin Scott, Amanda Silver, and Scott Guthrie and friends.\nPick breakouts tailored to your interests—Visual Studio, AI agents, .NET 9, GitHub Copilot, Azure, and more.\nQueue up on-demand sessions you can catch later, even after the event ends.\n And this year, keep an eye out for “AI Agents” and “Agentic” —a new way to think about how AI works with you, not just for you. Visual Studio is evolving, and the sessions hinting at this shift are worth flagging.\nStep 2: Prioritize Live Viewing (and Must-Watch Sessions)\nMany sessions—especially keynotes—feature live Q&A and real-time demos you won’t want to miss. And with 133 sessions focused on Developer Tools and .NET, there’s truly something for everyone.\nI encourage you to use the schedule builder and find the topics you’re interested in. Here are just a few I’ll be attending in person to help get you started:\nMust Watch!\nOpening Keynote with Satya Nadella – Big-picture announcements across AI, Copilot, and developer platforms.\nUnpacking the tech with Kevin Scott, Charles Lamanna, and Scott Guthrie – A deeper look at what’s next for developers using Microsoft tools.\nReimagining Software Development and DevOps with Agentic AI – Amanda Silver and Mario Rodriguez show how Agentic AI is being infused across the entire development lifecycle—from brainstorming to release. See how GitHub Copilot is evolving to help teams plan smarter, code faster, and stay in flow across Visual Studio and GitHub.\nEpic Closing Demo with Mark Russinovich and Scott Hanselman -A high-energy, code-first finale weaving together Build’s boldest tech—from Copilot PCs to frontier models, Visual Studio, and vibe coding—all live with Mark and Scott.\nMore to add to your watch list:\nTop GitHub Copilot Features You Missed in Visual Studio 2022 – Visual Studio now delivers its most AI-powered experience yet—with GitHub Copilot deeply integrated into your daily workflow. In this session, we’ll walk through the latest Copilot features lighting up in Visual Studio, including Agent Mode (Preview), which brings goal-driven, multi-step assistance right into the IDE.\nThe Future of .NET App Modernization Streamlined with AI – GitHub Copilot and Agents are transforming how developers modernize their applications and get them cloud ready. Come see how GitHub Copilot Upgrade for .NET helps you upgrade your .NET applications directly from Visual Studio. From project and dependency analysis, plan execution, automatic self-healing, detailed reporting, and more. Hear from industry experts who are transforming their .NET app modernization with GitHub Copilot.\nYet “Another Highly Technical Talk” with Hanselman and Toub – Following from their “Highly Technical Talk” at Build 2024, join Scott Hanselman and partner software engineer Stephen Toub for another talk that is 100% LIVE demo. Zero slides, just code. In this “highly technical talk” on the internals of .NET, they’ll look for performance issues and fix them live on stage. In this talk, you’ll learn debugging, performance, and optimization skills. If you are super advanced, level up, and let’s see how deep you can go!\nUnleash Developer Potential with AI and Dev Box – Microsoft Dev Box is reimagining the developer environment. See how this customizable, project-focused platform supports AI development with flexible compute, seamless integration with Visual Studio and VS Code, and team-specific setups that go beyond traditional VDI. Learn how Dev Box is enabling the next generation of productivity.\nDemo Theaters and Labs:\nDemo Theaters and Labs give you two great ways to explore what’s new. Demos are quick, 15-minute lightning sessions—perfect for discovering new features and getting inspired fast. Labs go deeper with guided, hands-on experiences you can follow step-by-step, right in your browser. Whether you join live or watch later, both formats are available online and designed to fit your pace.\nLab: Hands-on with GitHub Copilot in Visual Studio – Want to go from curious to confident with Copilot in Visual Studio? This lab walks you through real scenarios that show just how integrated and helpful Copilot has become.\nGet guided, interactive practice using AI inside the IDE.\nDemo: Build, Deploy & Use Your First Model Context Protocol (MCP) Server – Curious about what MCP really is? This lightning-fast session will walk you through building your very first Model Context Protocol server from scratch. You’ll create it in VS Code, test it live, and deploy it—learning why this matters for agent-based development along the way.\nCan’t catch them all live? No worries—everything is available on-demand after Build so you can watch at your own pace.\nStep 3: Stay Connected\nFollow the conversation on #MSBuild, #VisualStudio and #dotNET on X. Ask questions, share what you’re learning, and connect with other developers from around the world. You’ll find inspiration in the comments—and maybe even a new collaborator.\nUse the Schedule Builder today.\nStart building your watchlist now at build.microsoft.com, and I’ll see you—virtually—next week.\nLet’s code the future together.\n….Jim\nCheck out the new Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nAppreciation for your feedback\nYour feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post How to Watch Microsoft Build 2025 Online appeared first on Visual Studio Blog.",
        "dc:creator": "Jim Harrer",
        "comments": "https://devblogs.microsoft.com/visualstudio/how-to-watch-microsoft-build-2025-online/#comments",
        "content": "<p>Microsoft Build 2025 Is Here! — How to Make the Most of It Virtually It’s that time again—Microsoft Build has started! Microsoft Build 2025 runs this week (May 19–22)—and now’s the perfect time to catch the sessions live or watch past sessions on-demand. This year, Build is more accessible than ever. Every keynote, breakout session, [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/how-to-watch-microsoft-build-2025-online/\">How to Watch Microsoft Build 2025 Online</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Microsoft Build 2025 Is Here! — How to Make the Most of It Virtually It’s that time again—Microsoft Build has started! Microsoft Build 2025 runs this week (May 19–22)—and now’s the perfect time to catch the sessions live or watch past sessions on-demand. This year, Build is more accessible than ever. Every keynote, breakout session, […]\nThe post How to Watch Microsoft Build 2025 Online appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253248",
        "categories": [
          "Events",
          "GitHub Copilot",
          "Visual Studio",
          "MSBuild"
        ],
        "isoDate": "2025-05-16T14:00:41.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": [
      {
        "title": "ReAct 에이전트 프레임웍 내부 코드 구조 개발해보기",
        "link": "http://daddynkidsmakers.blogspot.com/2025/05/react.html",
        "pubDate": "2025-05-18T05:02:00.000Z",
        "author": "Daddy Maker",
        "content": "<p><span style=\"font-family: arial;\">ReAct(Reasoning and Acting) 에이전트 구조는 대형 언어 모델(LLM)을 기반으로 도구 호출 기능을 통합한 지능형 에이전트 시스템을 구현하는 설계 방식이다. 사용자의 지시를 추론하고 필요한 경우 외부 도구를 호출하여 목표를 달성하는 능력을 지니며, 최근 AutoGPT, BabyAGI, Manus 등 다양한 오픈소스 프로젝트에서 채택되고 있다. 이 글에서는&nbsp;&nbsp;ReAct 에이전트 프레임웍 내부 코드 구조를 직접 개발해본다. 아울러, ReAct 에이전트의 문제점들을 살펴보고 솔류션을 생각해본다.&nbsp;</span></p><p><span style=\"font-family: arial;\"></span></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhFza9t48lEoYvtS99Xf0-_rwvZu5aBl1NqhckKY-S1YPS2VEm33kpNlRPd3moXwMyVmQttaGUMef8J6ZKriV7mdANf6LrObDS3vfEjWqLrQcKUBgFYZ_bucfRojpc9hbfFU2seCLYfJQ6F1ikObp6l4FD20poLHaZvNDqGBPeQchS1DKrSOw7dqgCF6RRG/s716/d02b2eaa-16c3-4f92-8f97-06329fbcccd4_716x550.gif\" style=\"margin-left: 1em; margin-right: 1em;\"><span style=\"font-family: arial;\"><img border=\"0\" data-original-height=\"550\" data-original-width=\"716\" height=\"246\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhFza9t48lEoYvtS99Xf0-_rwvZu5aBl1NqhckKY-S1YPS2VEm33kpNlRPd3moXwMyVmQttaGUMef8J6ZKriV7mdANf6LrObDS3vfEjWqLrQcKUBgFYZ_bucfRojpc9hbfFU2seCLYfJQ6F1ikObp6l4FD20poLHaZvNDqGBPeQchS1DKrSOw7dqgCF6RRG/s320/d02b2eaa-16c3-4f92-8f97-06329fbcccd4_716x550.gif\" width=\"320\" /></span></a></div></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><span style=\"font-family: arial;\">ReAct Agent 구조(<a href=\"https://www.dailydoseofds.com/ai-agents-crash-course-part-10-with-implementation/\" style=\"text-align: left;\">AI Agents Crash Course—Part 10 (With Implementation</a><span style=\"text-align: left;\">)</span></span></div><p></p><p><b><span style=\"font-family: arial; font-size: medium;\">ReAct 구조&nbsp;</span></b></p><p data-end=\"183\" data-start=\"0\"><span style=\"font-family: arial;\"><span data-end=\"31\" data-start=\"12\">ReAct 시퀀스 처리 구조</span>는 LLM 기반 에이전트가 사고(Think), 행동(Act), 관찰(Observe), 결론(Final)의 단계로 사용자 질의에 응답하는 체계적 프로세스이다. 이 구조는 복잡한 문제 해결을 위해 LLM이 도구와 상호작용하면서 점진적으로 정답을 유도해내도록 설계되었다.</span></p><p data-end=\"221\" data-start=\"185\"><span style=\"font-family: arial;\">다음은 해당 코드에서 구현된 <span data-end=\"218\" data-start=\"201\">ReAct 시퀀스의 흐름</span>이다.</span></p><ol data-end=\"694\" data-start=\"223\" style=\"text-align: left;\">\n<li data-end=\"340\" data-start=\"223\">\n<p data-end=\"340\" data-start=\"226\"><span style=\"font-family: arial;\"><strong data-end=\"235\" data-start=\"226\">Think</strong><br data-end=\"238\" data-start=\"235\" />\nLLM은 질문에 대한 분석을 수행하며 필요한 경우 어떤 도구를 사용할지를 판단한다. 이 단계는 주로 텍스트 상의 추론 내용으로 표현되며, 도구 실행 없이 논리 전개만 이루어진다.</span></p>\n</li>\n<li data-end=\"472\" data-start=\"342\">\n<div><span style=\"font-family: arial;\"><strong data-end=\"352\" data-start=\"345\">Act<br /></strong>\n필요하다고 판단되면 <code data-end=\"391\" data-start=\"369\">Act: ToolName[Input]</code> 또는 <code data-end=\"417\" data-start=\"395\">Act: ToolName(Input)</code> 형식으로 도구 호출을 지시한다. 이 지시문은 정규표현식으로 감지되어 실제 도구 실행이 트리거된다.</span></div>\n</li>\n<li data-end=\"580\" data-start=\"474\">\n<p data-end=\"580\" data-start=\"477\"><span style=\"font-family: arial;\"><strong data-end=\"488\" data-start=\"477\">Observe</strong><br data-end=\"491\" data-start=\"488\" />\n호출된 도구가 실행되고, 그 결과는 <code data-end=\"524\" data-start=\"514\">Observe:</code> 접두사를 붙여 기록된다. 이 결과는 이후 컨텍스트에 포함되어 다음 LLM 호출의 입력으로 사용된다.</span></p>\n</li>\n<li data-end=\"694\" data-start=\"582\">\n<p data-end=\"694\" data-start=\"585\"><span style=\"font-family: arial;\"><strong data-end=\"594\" data-start=\"585\">Final</strong><br data-end=\"597\" data-start=\"594\" />\n충분한 정보가 수집되면 <code data-end=\"628\" data-start=\"613\">Final Answer:</code> 형식으로 최종 응답을 제공한다. 이는 루프를 종료시키는 조건이기도 하며, 에이전트의 실행 결과로 사용자에게 출력된다.</span></p>\n</li>\n</ol><p>\n\n\n</p><p data-end=\"779\" data-start=\"696\"><span style=\"font-family: arial;\">이러한 시퀀스를 통해 LLM은 단순히 한 번에 답변하는 것이 아니라, 도구를 여러 번 사용하고 그 결과를 반영하며 점진적으로 정확한 응답에 도달한다.</span></p><p><span style=\"font-family: arial; font-size: medium;\"><b>ReAct 에이전트 내부 코드 구현해보기</b></span></p><p><span style=\"font-family: arial;\">앞서 언급된 개념을 고려해 ReAct 에이전트의 핵심적인 코드만 구현해 본다. 다음과 같이 관련 라이브러리를 설치한다.</span></p><p><span style=\"font-family: arial;\">pip install langchain&nbsp;</span></p><p><span style=\"font-family: arial;\">다음과 같이 코드를 구현한다.&nbsp;</span></p><div style=\"background-color: #1f1f1f; color: #cccccc; font-size: 12px; line-height: 16px; white-space: pre;\"><div><span style=\"font-family: arial;\"><span style=\"color: #c586c0;\">import</span> <span style=\"color: #4ec9b0;\">re</span>, <span style=\"color: #4ec9b0;\">os</span></span></div><div><span style=\"font-family: arial;\"><span style=\"color: #c586c0;\">from</span> <span style=\"color: #4ec9b0;\">langchain</span>.<span style=\"color: #4ec9b0;\">tools</span> <span style=\"color: #c586c0;\">import</span> <span style=\"color: #4ec9b0;\">Tool</span></span></div><div><span style=\"font-family: arial;\"><span style=\"color: #c586c0;\">from</span> <span style=\"color: #4ec9b0;\">langchain_community</span>.<span style=\"color: #4ec9b0;\">tools</span>.<span style=\"color: #4ec9b0;\">tavily_search</span> <span style=\"color: #c586c0;\">import</span> <span style=\"color: #4ec9b0;\">TavilySearchResults</span></span></div><div><span style=\"font-family: arial;\"><span style=\"color: #c586c0;\">from</span> <span style=\"color: #4ec9b0;\">langchain</span>.<span style=\"color: #4ec9b0;\">chat_models</span> <span style=\"color: #c586c0;\">import</span> ChatOpenAI</span></div><div><span style=\"font-family: arial;\"><span style=\"color: #c586c0;\">from</span> <span style=\"color: #4ec9b0;\">langchain</span>.<span style=\"color: #4ec9b0;\">schema</span> <span style=\"color: #c586c0;\">import</span> <span style=\"color: #4ec9b0;\">HumanMessage</span></span></div><div><span style=\"font-family: arial;\"><span style=\"color: #c586c0;\">from</span> <span style=\"color: #4ec9b0;\">dotenv</span> <span style=\"color: #c586c0;\">import</span> <span style=\"color: #dcdcaa;\">load_dotenv</span></span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\"><span style=\"color: #dcdcaa;\">load_dotenv</span>()</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #6a9955; font-family: arial;\"># Calculator function</span></div><div><span style=\"font-family: arial;\"><span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">calculator</span>(<span style=\"color: #9cdcfe;\">input_str</span>: <span style=\"color: #4ec9b0;\">str</span>) -&gt; <span style=\"color: #4ec9b0;\">str</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #c586c0;\">try</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">result</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #dcdcaa;\">eval</span>(<span style=\"color: #9cdcfe;\">input_str</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #4ec9b0;\">str</span>(<span style=\"color: #9cdcfe;\">result</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #c586c0;\">except</span> <span style=\"color: #4ec9b0;\">Exception</span> <span style=\"color: #c586c0;\">as</span> <span style=\"color: #9cdcfe;\">e</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #569cd6;\">f</span><span style=\"color: #ce9178;\">\"Error: </span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">e</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">\"</span></span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\"><span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">FireCrawlResults</span>(<span style=\"color: #9cdcfe;\">max_results</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #b5cea8;\">3</span>, <span style=\"color: #9cdcfe;\">search_type</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ce9178;\">\"web\"</span>):</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #c586c0;\">from</span> <span style=\"color: #4ec9b0;\">langchain_community</span>.<span style=\"color: #4ec9b0;\">tools</span>.fire_crawl <span style=\"color: #c586c0;\">import</span> FireCrawlResults</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> FireCrawlResults(<span style=\"color: #9cdcfe;\">max_results</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">max_results</span>, <span style=\"color: #9cdcfe;\">search_type</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">search_type</span>) <span style=\"color: #6a9955;\"># TBD</span></span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #6a9955; font-family: arial;\"># Initialize tools</span></div><div><span style=\"font-family: arial;\"><span style=\"color: #9cdcfe;\">tools</span> <span style=\"color: #d4d4d4;\">=</span> [</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #4ec9b0;\">Tool</span>(</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">name</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ce9178;\">\"Calculator\"</span>,</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">func</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #dcdcaa;\">calculator</span>,</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">description</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ce9178;\">\"Evaluates mathematical expressions. Input should be a valid Python expression.\"</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; ),</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #4ec9b0;\">TavilySearchResults</span>(<span style=\"color: #9cdcfe;\">max_results</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #b5cea8;\">3</span>, <span style=\"color: #9cdcfe;\">search_type</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ce9178;\">\"web\"</span>),</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #6a9955;\"># FireCrawlResults(max_results=3, search_type=\"web\"),</span></span></div><div><span style=\"font-family: arial;\">]</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #6a9955; font-family: arial;\"># Function to extract tool prototype info</span></div><div><span style=\"font-family: arial;\"><span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">get_tools_info</span>(<span style=\"color: #9cdcfe;\">tools</span>):</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #9cdcfe;\">info_list</span> <span style=\"color: #d4d4d4;\">=</span> []</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #c586c0;\">for</span> <span style=\"color: #9cdcfe;\">tool</span> <span style=\"color: #c586c0;\">in</span> <span style=\"color: #9cdcfe;\">tools</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #6a9955;\"># Try to get function signature if possible</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #dcdcaa;\">hasattr</span>(<span style=\"color: #9cdcfe;\">tool</span>, <span style=\"color: #ce9178;\">\"func\"</span>):</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">proto</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #569cd6;\">f</span><span style=\"color: #ce9178;\">\"</span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">tool</span>.<span style=\"color: #9cdcfe;\">name</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">(input: str)\"</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">else</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">proto</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #569cd6;\">f</span><span style=\"color: #ce9178;\">\"</span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">tool</span>.<span style=\"color: #9cdcfe;\">name</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">(input: str)\"</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">desc</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #dcdcaa;\">getattr</span>(<span style=\"color: #9cdcfe;\">tool</span>, <span style=\"color: #ce9178;\">\"description\"</span>, <span style=\"color: #ce9178;\">\"No description.\"</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">info_list</span>.<span style=\"color: #dcdcaa;\">append</span>(<span style=\"color: #569cd6;\">f</span><span style=\"color: #ce9178;\">\"- </span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">proto</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">: </span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">desc</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">\"</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #ce9178;\">\"</span><span style=\"color: #d7ba7d;\">\\n</span><span style=\"color: #ce9178;\">\"</span>.<span style=\"color: #dcdcaa;\">join</span>(<span style=\"color: #9cdcfe;\">info_list</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #6a9955; font-family: arial;\"># Initialize the language model</span></div><div><span style=\"font-family: arial;\"><span style=\"color: #9cdcfe;\">llm</span> <span style=\"color: #d4d4d4;\">=</span> ChatOpenAI(<span style=\"color: #9cdcfe;\">temperature</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #b5cea8;\">0</span>, <span style=\"color: #9cdcfe;\">model</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ce9178;\">\"gpt-4\"</span>, <span style=\"color: #9cdcfe;\">max_tokens</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #b5cea8;\">4000</span>)</span></div><div><span style=\"font-family: arial;\"><span style=\"color: #9cdcfe;\">answer_validation_llm</span> <span style=\"color: #d4d4d4;\">=</span> ChatOpenAI(<span style=\"color: #9cdcfe;\">temperature</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #b5cea8;\">0</span>, <span style=\"color: #9cdcfe;\">model</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ce9178;\">\"gpt-4-turbo\"</span>, <span style=\"color: #9cdcfe;\">max_tokens</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #b5cea8;\">4000</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #6a9955; font-family: arial;\"># Prompt template for ReAct</span></div><div><span style=\"font-family: arial;\"><span style=\"color: #9cdcfe;\">prompt_template</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #ce9178;\">\"\"\"</span></span></div><div><span style=\"font-family: arial;\"><span style=\"color: #ce9178;\">Instruction: </span><span style=\"color: #569cd6;\">{instruct}</span></span></div><div><span style=\"color: #ce9178; font-family: arial;\">IMPORTANT: If you do not know the answer, do not use 'Final Answer', just say 'I don't know'.</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #ce9178; font-family: arial;\">Tools you can use:</span></div><div><span style=\"color: #569cd6; font-family: arial;\">{tools}</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #ce9178; font-family: arial;\">Context:</span></div><div><span style=\"color: #569cd6; font-family: arial;\">{context}</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #ce9178; font-family: arial;\">Query:</span></div><div><span style=\"color: #569cd6; font-family: arial;\">{query}</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"color: #ce9178; font-family: arial;\">You should follow the ReAct pattern:</span></div><div><span style=\"color: #ce9178; font-family: arial;\">- Think: Reason about the question or next step.</span></div><div><span style=\"color: #ce9178; font-family: arial;\">- Act: If needed, use a tool in the format Act: &lt;tool&gt;[&lt;input&gt;].</span></div><div><span style=\"color: #ce9178; font-family: arial;\">- Observe: Note the result of the action.</span></div><div><span style=\"color: #ce9178; font-family: arial;\">- Final: Give the final answer in the format Final Answer: &lt;answer&gt;.</span></div><div><span style=\"color: #ce9178; font-family: arial;\">\"\"\"</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\"><span style=\"color: #9cdcfe;\">answer_validation_prompt</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #ce9178;\">\"\"\"</span></span></div><div><span style=\"font-family: arial;\"><span style=\"color: #ce9178;\">Question: </span><span style=\"color: #569cd6;\">{question}</span></span></div><div><span style=\"font-family: arial;\"><span style=\"color: #ce9178;\">Answer: </span><span style=\"color: #569cd6;\">{answer}</span></span></div><div><span style=\"color: #ce9178; font-family: arial;\">Is the answer relevant and correct for the question? Reply only with \"yes\" or \"no\" and a short reason.</span></div><div><span style=\"color: #ce9178; font-family: arial;\">\"\"\"</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\"><span style=\"color: #569cd6;\">class</span> <span style=\"color: #4ec9b0;\">ReActAgent</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">__init__</span>(<span style=\"color: #9cdcfe;\">self</span>, <span style=\"color: #9cdcfe;\">llm</span>, <span style=\"color: #9cdcfe;\">tools</span>, <span style=\"color: #9cdcfe;\">prompt_template</span>):</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">self</span>.<span style=\"color: #9cdcfe;\">llm</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">llm</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">self</span>.<span style=\"color: #9cdcfe;\">tools</span> <span style=\"color: #d4d4d4;\">=</span> {<span style=\"color: #9cdcfe;\">tool</span>.<span style=\"color: #9cdcfe;\">name</span>: <span style=\"color: #9cdcfe;\">tool</span> <span style=\"color: #c586c0;\">for</span> <span style=\"color: #9cdcfe;\">tool</span> <span style=\"color: #c586c0;\">in</span> <span style=\"color: #9cdcfe;\">tools</span>}</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">self</span>.<span style=\"color: #9cdcfe;\">prompt_template</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">prompt_template</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">self</span>.<span style=\"color: #9cdcfe;\">tools_info</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #dcdcaa;\">get_tools_info</span>(<span style=\"color: #9cdcfe;\">tools</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">validate_answer</span>(<span style=\"color: #9cdcfe;\">self</span>, <span style=\"color: #9cdcfe;\">question</span>, <span style=\"color: #9cdcfe;\">answer</span>):</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">prompt</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">answer_validation_prompt</span>.<span style=\"color: #dcdcaa;\">format</span>(<span style=\"color: #9cdcfe;\">question</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">question</span>, <span style=\"color: #9cdcfe;\">answer</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">answer</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">messages</span> <span style=\"color: #d4d4d4;\">=</span> [<span style=\"color: #4ec9b0;\">HumanMessage</span>(<span style=\"color: #9cdcfe;\">content</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">prompt</span>)]</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">output</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">answer_validation_llm</span>(<span style=\"color: #9cdcfe;\">messages</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">response</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">output</span>.content.strip().lower()</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #9cdcfe;\">response</span>.startswith(<span style=\"color: #ce9178;\">\"yes\"</span>), <span style=\"color: #9cdcfe;\">response</span></span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">run</span>(<span style=\"color: #9cdcfe;\">self</span>, <span style=\"color: #9cdcfe;\">input_query</span>: <span style=\"color: #4ec9b0;\">str</span>):</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">history</span> <span style=\"color: #d4d4d4;\">=</span> []</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">while</span> <span style=\"color: #569cd6;\">True</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">prompt</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">self</span>.<span style=\"color: #9cdcfe;\">prompt_template</span>.<span style=\"color: #dcdcaa;\">format</span>(</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">instruct</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ce9178;\">\"Answer the question in detail using ReAct reasoning.\"</span>,</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">tools</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">self</span>.<span style=\"color: #9cdcfe;\">tools_info</span>,</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">context</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ce9178;\">\"</span><span style=\"color: #d7ba7d;\">\\n</span><span style=\"color: #ce9178;\">\"</span>.<span style=\"color: #dcdcaa;\">join</span>(<span style=\"color: #9cdcfe;\">history</span>),</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">query</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">input_query</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">messages</span> <span style=\"color: #d4d4d4;\">=</span> [<span style=\"color: #4ec9b0;\">HumanMessage</span>(<span style=\"color: #9cdcfe;\">content</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">prompt</span>)]</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">output</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">self</span>.<span style=\"color: #9cdcfe;\">llm</span>(<span style=\"color: #9cdcfe;\">messages</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">response</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">output</span>.content.strip()</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">history</span>.<span style=\"color: #dcdcaa;\">append</span>(<span style=\"color: #9cdcfe;\">response</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #6a9955;\"># Check for Final Answer</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">final_match</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #4ec9b0;\">re</span>.<span style=\"color: #dcdcaa;\">search</span>(<span style=\"color: #569cd6;\">r</span><span style=\"color: #d16969;\">\"Final Answer:\\s</span><span style=\"color: #d7ba7d;\">*</span><span style=\"color: #ce9178;\">(</span><span style=\"color: #d16969;\">.</span><span style=\"color: #d7ba7d;\">*</span><span style=\"color: #ce9178;\">)</span><span style=\"color: #d16969;\">\"</span>, <span style=\"color: #9cdcfe;\">response</span>, <span style=\"color: #4ec9b0;\">re</span>.<span style=\"color: #9cdcfe;\">IGNORECASE</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #9cdcfe;\">final_match</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">answer</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">final_match</span>.<span style=\"color: #dcdcaa;\">group</span>(<span style=\"color: #b5cea8;\">1</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #6a9955;\"># is_valid, validation_msg = self.validate_answer(input_query, answer) # TBD. 실제 react 코드 확인.</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #6a9955;\"># if is_valid:</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #9cdcfe;\">answer</span></span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #6a9955;\"># Detect action</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">action_match</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #4ec9b0;\">re</span>.<span style=\"color: #dcdcaa;\">search</span>(<span style=\"color: #569cd6;\">r</span><span style=\"color: #d16969;\">\"Act:\\s</span><span style=\"color: #d7ba7d;\">*</span><span style=\"color: #ce9178;\">(</span><span style=\"color: #d16969;\">\\w</span><span style=\"color: #d7ba7d;\">+</span><span style=\"color: #ce9178;\">)[</span><span style=\"color: #d7ba7d;\">\\[\\(</span><span style=\"color: #ce9178;\">](</span><span style=\"color: #d16969;\">.</span><span style=\"color: #d7ba7d;\">*</span><span style=\"color: #ce9178;\">)[</span><span style=\"color: #d7ba7d;\">\\]\\)</span><span style=\"color: #ce9178;\">]</span><span style=\"color: #d16969;\">\"</span>, <span style=\"color: #9cdcfe;\">response</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #9cdcfe;\">action_match</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">action_name</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">action_match</span>.<span style=\"color: #dcdcaa;\">group</span>(<span style=\"color: #b5cea8;\">1</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">action_input</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">action_match</span>.<span style=\"color: #dcdcaa;\">group</span>(<span style=\"color: #b5cea8;\">2</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #569cd6;\">f</span><span style=\"color: #ce9178;\">\"Action detected: </span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">action_name</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\"> with input: </span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">action_input</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">\"</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">tool</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">self</span>.<span style=\"color: #9cdcfe;\">tools</span>.<span style=\"color: #dcdcaa;\">get</span>(<span style=\"color: #9cdcfe;\">action_name</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #569cd6;\">not</span> <span style=\"color: #9cdcfe;\">tool</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">history</span>.<span style=\"color: #dcdcaa;\">append</span>(<span style=\"color: #569cd6;\">f</span><span style=\"color: #ce9178;\">\"Observe: Unknown tool: </span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">action_name</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">\"</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">continue</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">action_input</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">action_input</span>.<span style=\"color: #dcdcaa;\">replace</span>(<span style=\"color: #ce9178;\">\"'\"</span>, <span style=\"color: #ce9178;\">\"\"</span>).<span style=\"color: #dcdcaa;\">replace</span>(<span style=\"color: #ce9178;\">'\"'</span>, <span style=\"color: #ce9178;\">\"\"</span>) &nbsp; </span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">result</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">tool</span>.run(<span style=\"color: #9cdcfe;\">action_input</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">history</span>.<span style=\"color: #dcdcaa;\">append</span>(<span style=\"color: #569cd6;\">f</span><span style=\"color: #ce9178;\">\"Observe: </span><span style=\"color: #569cd6;\">{</span><span style=\"color: #9cdcfe;\">result</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">\"</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">else</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #6a9955;\"># If no action and no final answer, just continue (could be Think step)</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">continue</span></span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\"><span style=\"color: #9cdcfe;\">agent</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #4ec9b0;\">ReActAgent</span>(<span style=\"color: #9cdcfe;\">llm</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">llm</span>, <span style=\"color: #9cdcfe;\">tools</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">tools</span>, <span style=\"color: #9cdcfe;\">prompt_template</span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #9cdcfe;\">prompt_template</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\"><span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">test</span>():</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #9cdcfe;\">query</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #ce9178;\">\"What is the result of 12 * (3 + 4)?\"</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #9cdcfe;\">result</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">agent</span>.<span style=\"color: #dcdcaa;\">run</span>(<span style=\"color: #9cdcfe;\">query</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #9cdcfe;\">result</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #9cdcfe;\">query</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #ce9178;\">\"What is the capital of France?\"</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #9cdcfe;\">result</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">agent</span>.<span style=\"color: #dcdcaa;\">run</span>(<span style=\"color: #9cdcfe;\">query</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #9cdcfe;\">result</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #9cdcfe;\">query</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #ce9178;\">\"In web, What is Taewook kang's paper about Geo BIM using BIM and GIS?\"</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #9cdcfe;\">result</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">agent</span>.<span style=\"color: #dcdcaa;\">run</span>(<span style=\"color: #9cdcfe;\">query</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #9cdcfe;\">result</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\"><span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">main</span>():</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #ce9178;\">\"ReAct Agent is ready to use.\"</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #ce9178;\">\"Available tools:\"</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #c586c0;\">for</span> <span style=\"color: #9cdcfe;\">tool</span> <span style=\"color: #c586c0;\">in</span> <span style=\"color: #9cdcfe;\">agent</span>.<span style=\"color: #9cdcfe;\">tools_info</span>.<span style=\"color: #dcdcaa;\">split</span>(<span style=\"color: #ce9178;\">\"</span><span style=\"color: #d7ba7d;\">\\n</span><span style=\"color: #ce9178;\">\"</span>):</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #9cdcfe;\">tool</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #6a9955;\"># test()</span></span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #ce9178;\">\"</span><span style=\"color: #d7ba7d;\">\\n</span><span style=\"color: #ce9178;\">Interactive mode:\"</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #c586c0;\">while</span> <span style=\"color: #569cd6;\">True</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">query</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #dcdcaa;\">input</span>(<span style=\"color: #ce9178;\">\"Enter your query (or 'exit' to quit): \"</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #9cdcfe;\">query</span>.<span style=\"color: #dcdcaa;\">lower</span>() <span style=\"color: #d4d4d4;\">==</span> <span style=\"color: #ce9178;\">\"exit\"</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">break</span></span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #9cdcfe;\">result</span> <span style=\"color: #d4d4d4;\">=</span> <span style=\"color: #9cdcfe;\">agent</span>.<span style=\"color: #dcdcaa;\">run</span>(<span style=\"color: #9cdcfe;\">query</span>)</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #dcdcaa;\">print</span>(<span style=\"color: #9cdcfe;\">result</span>)</span></div><span style=\"font-family: arial;\"><br /></span><div><span style=\"font-family: arial;\"><span style=\"color: #c586c0;\">if</span> <span style=\"color: #9cdcfe;\">__name__</span> <span style=\"color: #d4d4d4;\">==</span> <span style=\"color: #ce9178;\">\"__main__\"</span>:</span></div><div><span style=\"font-family: arial;\">&nbsp; &nbsp; <span style=\"color: #dcdcaa;\">main</span>()</span></div><span style=\"font-family: arial;\"><br /><br /></span></div><p><span style=\"font-family: arial;\">이 코드는 ReAct 시퀀스를 중심으로 구성되어 있다. ReAct란 LLM이 단순한 질의응답을 넘어서서, 생각하고 도구를 사용하고 그 결과를 바탕으로 다시 추론한 뒤 최종적인 답을 내리는 일련의 추론 패턴이다. 이 흐름은 크게 네 단계로 나뉜다.&nbsp;</span></p><p><span style=\"font-family: arial;\">첫째, Think 단계에서는 주어진 질문에 대해 어떻게 접근할지를 LLM이 서술적으로 사고한다. 둘째, Act 단계에서는 필요하다고 판단한 도구를 지정된 형식으로 호출한다. 이때 Act: ToolName[Input] 형식을 사용한다. 셋째, Observe 단계에서는 실행된 도구의 결과를 받아 LLM의 다음 추론에 포함될 수 있도록 기록한다. 넷째, Final 단계에서는 Final Answer: 답변 형식으로 최종 결론을 도출한다.</span></p><p><span style=\"font-family: arial;\">이러한 시퀀스를 실제로 구현하기 위해 코드에서는 특정 정규표현식을 사용하여 각 단계를 감지하고 분기 처리한다. 예를 들어, Act 단계는 Act:라는 키워드를 통해 감지되고, 대응되는 도구 이름과 입력값이 추출된다. 대응되는 도구가 존재하면 해당 함수나 객체의 run 메서드를 호출하여 결과를 얻고, 이를 Observe로 기록하여 다음 프롬프트 생성 시 문맥으로 전달한다. Final Answer가 감지되면 그 값을 최종 출력으로 반환하면서 루프를 종료한다.</span></p><p><span style=\"font-family: arial;\">코드는 먼저 환경변수를 불러오고, 수학 계산용 calculator 함수와 웹 검색용 Tavily 도구를 정의하고 tools 목록에 등록한다. 각 도구는 Tool 객체로 구성되며, name, func, description 속성을 갖는다. 이 도구들의 인터페이스 정보는 get_tools_info 함수를 통해 LLM 프롬프트에 전달할 수 있는 형식으로 변환된다.</span></p><p><span style=\"font-family: arial;\">ReActAgent 클래스는 핵심 로직을 담당한다. 생성자에서는 도구를 이름으로 접근 가능하도록 딕셔너리 형태로 구성하며, 프롬프트 템플릿에 포함할 도구 설명을 자동으로 생성한다. run 메서드는 LLM과의 대화를 이끄는 루프이다. 사용자의 입력 쿼리를 바탕으로 Think부터 Final 단계까지의 응답을 순차적으로 생성하고, 도구 호출이 필요한 경우 자동으로 감지하여 실행한다.</span></p><p><span style=\"font-family: arial;\">LLM은 ChatOpenAI 클래스를 통해 초기화되며, 주 모델과 검증용 모델이 따로 구성된다. 현재 코드는 검증 부분이 주석 처리되어 있어 정답 검증은 수행되지 않지만 validate_answer 메서드는 존재한다. 해당 메서드는 question과 answer를 받아 프롬프트에 삽입하고 gpt-4-turbo 모델로부터 응답을 받아 yes 또는 no 여부와 사유를 반환한다.</span></p><p>\n\n\n\n\n</p><p><span style=\"font-family: arial;\">main 함수는 인터랙티브한 사용자 입력을 받아 ReActAgent를 호출하는 실행 루틴이다. 사용자가 exit이라고 입력할 때까지 질의를 받고 응답을 출력하는 루프를 구성한다. 이로써 ReActAgent는 반복적인 질의응답 상황에서도 도구를 활용하여 논리적 사고 과정을 수행하고, 외부 정보에 기반한 정답을 도출할 수 있도록 설계되어 있다.</span></p><p><span style=\"font-family: arial; font-size: medium;\"><b>주요 문제 유형</b></span></p><p><span style=\"font-family: arial;\">ReAct 기반 에이전트는 구현 및 실전 적용 과정에서 여러 구조적 문제와 비효율이 발생한다. 이러한 문제 사례를 분석하고, 실제 커뮤니티에서 공유된 해결 전략과 함께 개선 방향을 확인해 본다.</span></p><p><span style=\"font-family: arial;\"><b>추론 오류<br /></b>\n에이전트가 잘못된 전제나 문맥에 기반하여 부적절한 도구를 선택하거나 오답을 도출하는 문제가 빈번히 발생한다. 이는 LLM의 한계와 프롬프트 설계 미비, 또는 이전 상태 정보의 왜곡에 기인한다.</span></p><p><span style=\"font-family: arial;\"><b>반복 및 루프 문제<br /></b>\n에이전트가 목표에 도달하지 못하고 동일한 행동을 반복 수행하는 루프에 빠지는 문제가 자주 발생한다. 이는 max_steps 제한이 없거나, 실패 판단 기준이 모호한 경우에 두드러진다.</span></p><p><span style=\"font-family: arial;\"><b>결과 검증 실패<br /></b>\n에이전트가 도출한 결과가 부정확하거나 무의미함에도 불구하고, 이를 최종 결과로 판단하고 종료되는 문제가 있다. 이는 정답 여부를 평가할 수 있는 검증 메커니즘의 부재 혹은 Verifier LLM의 오판 때문이다.</span></p><p><span style=\"font-family: arial;\"><b>지연 및 비용 문제<br /></b>\nReAct 구조는 추론 Think, 행동 Act, 검증 Verify 단계에서 각각 LLM 호출이 필요하므로 응답 지연이 누적되며, 고성능 모델 사용 시 비용 또한 급증하게 된다.</span></p><p><span style=\"font-family: arial;\"><b>상태 관리 실패<br /></b>\n에이전트가 이전 문맥을 적절히 유지하지 못하거나, 기억을 잘못 참조하여 추론에 실패하는 경우가 있다. 이는 memory overflow, context 길이 초과 등으로 인해 발생한다.</span></p><p><span style=\"font-family: arial; font-size: medium;\"><b>해외 커뮤니티 보고 사례</b></span></p><p><span style=\"font-family: arial;\">Reddit, GitHub, Hacker News 등 해외 커뮤니티에서는 위 문제들이 반복적으로 보고되고 있다. 주요 사례는 다음과 같다</span></p><p><span style=\"font-family: arial;\"><a href=\"https://www.reddit.com/r/LangChain/comments/1i1w6h5/react_agent_is_too_slow_suggestions_on_better/\">r/React</a> 에서는 Langchain의 늦은 React 에이전트 성능에 대한 문제가 제기된 적이 있다. 이런 사례는 수도 없이 많다.</span></p><p><span style=\"font-family: arial;\">r/AutoGPT에서는 도구 호출 반복, final answer 오류 등 루프와 검증 문제를 다룬 글들이 다수 존재한다.</span></p><p><span style=\"font-family: arial;\">\nr/MachineLearning에서는 hallucination 문제, tool selection 오류에 대한 토론이 있다<br />\nGitHub Issues의 OpenDevin, Voyager 등의 리포지터리에서도 루프, 상태 관리 문제, 도구 실행 실패가 자주 보고되고 있다</span></p><p><span style=\"font-family: arial;\">이는 ReAct 구조의 본질적인 설계 한계와 관련되며, 이를 보완하기 위한 다양한 시도들이 커뮤니티에서 논의되고 있다</span></p><p><span style=\"font-family: arial; font-size: medium;\"><b>해결 방안</b></span></p><p><span style=\"font-family: arial;\"><b>Verifier LLM의 도입<br /></b>\n추론 결과에 대해 별도의 고성능 LLM을 사용하여 정답 여부를 판단하도록 구성하는 방식이다 예를 들어 GPT 35 기반 ReAct 에이전트를 GPT 4 기반 Verifier로 보완하는 사례가 있다</span></p><p><span style=\"font-family: arial;\"><b>Confidence 기반 조건 실행<br /></b>\nLLM이 응답에 대한 신뢰도 confidence score를 함께 출력하도록 하고, 일정 기준 미만일 경우에만 검증자 호출 또는 재시도를 수행하는 방식이다</span></p><p><span style=\"font-family: arial;\"><b>행동 다양성 유도 및 페널티 적용<br /></b>\n같은 도구를 반복 호출하지 않도록 행동 선택 시 다양성을 보장하거나 페널티 기반 scoring 방식을 적용한다</span></p><p><span style=\"font-family: arial;\"><b>결과 품질 기반 Soft Fallback 적용<br /></b>\n결과가 일정 기준 미달일 경우 완료 실패 메시지를 출력하거나, 대체 응답을 제공하는 방식으로 흐름을 마무리한다</span></p><p><span style=\"font-family: arial;\"><b>도메인 기반 grounding 기법<br /></b>\n도메인 특화 지식을 embedding하거나 retriever를 통해 grounding context를 제공함으로써 hallucination을 감소시키는 방식이다</span></p><p data-pm-slice=\"1 1 []\"><b><span style=\"font-family: arial; font-size: medium;\">LLM 처리 지연 보완을 위한 전략</span></b></p><p><span style=\"font-family: arial;\">ReAct 구조에서는 LLM을 여러 번 호출하는 구조로 인해 응답 시간이 증가하는 문제가 발생한다. 이를 해결하기 위한 보완 전략은 다음과 같다</span></p><p><span style=\"font-family: arial;\">첫째, 동일한 LLM을 사용하는 것이 아니라 추론 단계는 경량 LLM을 사용하고 검증 단계는 고성능 LLM을 사용하는 방식으로 역할 분리를 통해 효율을 높이는 방안이 있다</span></p><p><span style=\"font-family: arial;\">둘째, LLM의 confidence score를 이용하여 신뢰도가 충분히 높은 경우에는 검증 단계를 생략함으로써 전체 호출 횟수를 줄일 수 있다</span></p><p><span style=\"font-family: arial;\">셋째, 여러 행동 중 하나를 선택할 때 prefetch 또는 batch decoding 방식을 사용하여 예측을 병렬적으로 수행하면 전체 응답 지연을 줄일 수 있다</span></p><p><span style=\"font-family: arial;\">넷째, 반복되는 도구 호출에 대해서는 캐싱 메커니즘을 도입하거나 결과를 저장하여 재활용함으로써 불필요한 호출을 방지할 수 있다</span></p><p><span style=\"font-family: arial;\">다섯째, 검증자 역할을 하는 LLM을 완전한 LLM이 아니라 룰 기반 평가기 또는 소형 모델로 대체하여 빠르게 판단하게 하는 방식도 고려할 수 있다</span></p><p><span style=\"font-family: arial; font-size: medium;\"><b>코드 기반 구현 예시 요약</b></span></p><p><span style=\"font-family: arial;\">ReAct 기반 구조는 보통 다음 흐름으로 구성된다</span></p><p></p><ol style=\"text-align: left;\"><li><span style=\"font-family: arial;\">사용자 입력 수신</span></li><li><span style=\"font-family: arial;\">\nLLM을 통해 행동 계획 수립 Think</span></li><li><span style=\"font-family: arial;\">\n해당 도구 실행 Act</span></li><li><span style=\"font-family: arial;\">\n결과 수신 후 Verifier를 통해 정답 여부 판단 Verify</span></li><li><span style=\"font-family: arial;\">\n정답 시 종료, 실패 시 재시도 또는 fallback 처리</span></li></ol><p></p><p><span style=\"font-family: arial;\">이러한 구조는 Python 코드로 구현할 수 있으며, 각 함수는 다음과 같은 역할을 수행한다</span></p><p></p><ol style=\"text-align: left;\"><li><span style=\"font-family: arial;\">think goal 행동 계획 생성</span></li><li><span style=\"font-family: arial;\">\nact action 도구 실행 및 결과 수신</span></li><li><span style=\"font-family: arial;\">\nverify result, goal 결과 검증</span></li><li><span style=\"font-family: arial;\">\nrun goal 전체 흐름 통제 및 반복 로직 포함</span></li></ol><p></p><p><b><span style=\"font-family: arial; font-size: medium;\">결론</span></b></p><p><span style=\"font-family: arial;\">ReAct 기반 에이전트는 고도의 자율성을 지닌 시스템이나, 구조적으로 여러 한계가 존재한다. 특히 결과 검증 실패, 반복 루프, hallucination, 비용 증가 문제는 실제 운영 및 서비스화에 있어 큰 장애 요인이 된다. 이를 해결하기 위해서는 검증자 LLM 도입, confidence 기반 흐름 제어, 도구 호출의 다양성 보장, grounding 및 fallback 전략이 함께 설계될 수 있다.</span></p><p><span style=\"font-family: arial;\"><br /></span></p><p><span style=\"font-family: arial; font-size: medium;\"><b>부록: 보고서 형식 AI 에이전트 패턴</b></span></p><p><span style=\"font-family: arial;\">ReAct 에이전트는 Reasoning and Acting의 약어로, LLM이 툴과 상호작용하며 문제를 해결하는 패턴이다. 이 구조는 인간처럼 사고하고, 필요한 정보를 외부 도구에서 검색하거나 계산을 수행한 뒤, 최종적으로 응답을 생성한다. 이로 인해 복잡한 질의나 멀티스텝 추론이 필요한 경우에 적합한 패턴으로 여겨진다. 그러나 이러한 장점에도 불구하고, LLM이 여러 차례 호출되고 툴도 반복적으로 작동하므로 응답 시간이 느려지고, API 사용량 증가로 인해 비용이 상승하는 단점이 존재한다.</span></p><p><span style=\"font-family: arial;\">한편 단순히 보고서를 생성하는 용도로 LLM을 사용하는 경우라면, 복잡한 Reasoning이나 여러 번의 외부 툴 호출은 필요하지 않다. 이때는 ReAct 에이전트를 사용하는 것이 오히려 비효율적이며, 불필요한 구조적 복잡성과 지연을 유발한다. 따라서 보고서 자동 생성이라는 목적에 최적화된 에이전트 구조는 단일 호출 기반 구조가 적합하다.</span></p><p></p><div class=\"separator\" style=\"clear: both; text-align: center;\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/a/AVvXsEj7WkoP4LpGymVKTBPMTSvVnTh63QmgSrEuTL7hrRsou3DCNHZuq_age-BU1xeusui0OQ9s-mZce9mzj9lzUpWIbixs7SRovXeP3Ffw6qYZC1cJUXXuVvGSgUs5B784vK_y9L-iqtxObUBkRLOxBBDq7pfjT1wiPMBum76fYe8nWFDSCbHQ0lwF4iYJDFgo\" style=\"margin-left: 1em; margin-right: 1em;\"><span style=\"font-family: arial;\"><img alt=\"\" data-original-height=\"511\" data-original-width=\"1031\" height=\"281\" src=\"https://blogger.googleusercontent.com/img/a/AVvXsEj7WkoP4LpGymVKTBPMTSvVnTh63QmgSrEuTL7hrRsou3DCNHZuq_age-BU1xeusui0OQ9s-mZce9mzj9lzUpWIbixs7SRovXeP3Ffw6qYZC1cJUXXuVvGSgUs5B784vK_y9L-iqtxObUBkRLOxBBDq7pfjT1wiPMBum76fYe8nWFDSCbHQ0lwF4iYJDFgo=w566-h281\" width=\"566\" /></span></a></div></div><p><span style=\"font-family: arial;\">이 구조는 Single-Shot LLM Invocation 패턴으로 명명된다. 이 방식은 LLM을 한 번만 호출하여 입력된 요구 사항에 맞는 보고서를 즉시 생성한다. 별도의 도구 호출이나 intermediate step 없이 하나의 잘 설계된 프롬프트를 중심으로 전체 작업이 이루어진다. 이 패턴은 속도가 빠르고, 처리 흐름이 단순하며, LLM API 호출 횟수를 최소화하므로 비용이 낮다. 특히 단일 보고서, 요약, 이메일 초안, 블로그 콘텐츠와 같은 목적에 적합하며, 사용자의 입력 내용에 따라 문서 포맷이나 톤을 조정하는 것만으로 충분한 성능을 발휘한다.</span></p><p><span style=\"font-family: arial;\">단일 호출 구조는 별도의 외부 툴이나 체인을 필요로 하지 않기 때문에 LangChain이나 ReAct 구조 없이도 Python 코드 수준에서 간단히 구현이 가능하다. 예를 들어, 사용자가 요구사항을 입력하면 그에 맞는 템플릿 기반 프롬프트를 작성하고, 이를 LLM에 전달해 한 번에 결과를 반환받는 방식이다. 이러한 프롬프트에 보고서의 형식, 어조, 길이 등을 명시하면, 결과물의 일관성과 품질도 충분히 확보할 수 있다.</span></p><p><span style=\"font-family: arial;\">이 외에도 필요에 따라 Plan-and-Write 패턴을 고려할 수 있다. 이 패턴은 먼저 전체 문서의 개요를 작성한 뒤, 각 항목에 따라 내용을 생성하는 방식이다. 좀 더 명확한 구성과 섹션 구분이 필요할 때 유용하다. 통계 수치나 외부 데이터를 포함해야 할 경우에는 Toolformer와 같이 선택적으로 툴을 호출하는 패턴을 도입할 수 있다. 마지막으로 문서가 일정한 형식을 유지해야 하거나 후처리를 자동화해야 할 때는 Structured Prompting 패턴을 사용할 수 있으며, JSON 또는 Markdown 형식으로 문서 구조를 고정하여 일관성을 높인다.</span></p><p><span style=\"font-family: arial;\">\n\n\n\n\n</span></p><p><span style=\"font-family: arial;\">결론적으로, 보고서 자동 생성처럼 복잡한 추론이나 외부 툴 연동이 불필요한 작업에는 ReAct와 같은 다단계 에이전트 구조는 적합하지 않다. 대신 단일 LLM 호출로 작업을 완료하는 Single-Shot 방식이 가장 효율적이며, 프롬프트 최적화만으로 높은 품질의 결과를 얻을 수 있다.&nbsp;</span></p><p><span style=\"font-family: arial; font-size: medium;\"><b>부록: AI 에이전트 오케스트레이션</b></span></p><p>사용자 질문에 따라 적절한 에이전트 패턴을 선택하기 위해서는 입력의 목적과 복잡성을 빠르게 분류할 수 있는 에이전트 오케스트레이션 메커니즘이 필요하다. 다음 의사코드는 솔류션을 보여준다.&nbsp;</p><div style=\"background-color: #1f1f1f; color: #cccccc; font-family: Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; line-height: 16px; white-space: pre;\"><div><span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">classify_input</span>(<span style=\"color: #9cdcfe;\">user_input</span>):</div><div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #ce9178;\">\"보고서\"</span> <span style=\"color: #569cd6;\">in</span> user_input <span style=\"color: #569cd6;\">or</span> <span style=\"color: #ce9178;\">\"작성해\"</span> <span style=\"color: #569cd6;\">in</span> user_input:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #ce9178;\">\"simple_generation\"</span></div><div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #ce9178;\">\"json\"</span> <span style=\"color: #569cd6;\">in</span> user_input <span style=\"color: #569cd6;\">or</span> <span style=\"color: #ce9178;\">\"표로\"</span> <span style=\"color: #569cd6;\">in</span> user_input:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #ce9178;\">\"structured_output\"</span></div><div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #ce9178;\">\"비교해\"</span> <span style=\"color: #569cd6;\">in</span> user_input <span style=\"color: #569cd6;\">or</span> <span style=\"color: #ce9178;\">\"어떤게 더 나아\"</span> <span style=\"color: #569cd6;\">in</span> user_input:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #ce9178;\">\"tool_assisted\"</span></div><div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> <span style=\"color: #ce9178;\">\"계산\"</span> <span style=\"color: #569cd6;\">in</span> user_input <span style=\"color: #569cd6;\">or</span> <span style=\"color: #dcdcaa;\">any</span>(op <span style=\"color: #c586c0;\">in</span> user_input <span style=\"color: #c586c0;\">for</span> op <span style=\"color: #c586c0;\">in</span> <span style=\"color: #ce9178;\">\"+-*/\"</span>):</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #ce9178;\">\"tool_assisted\"</span></div><div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> <span style=\"color: #ce9178;\">\"multi_step_reasoning\"</span></div><div><span style=\"color: #ce9178;\"><br /></span></div><div><div style=\"line-height: 16px;\"><div><span style=\"color: #569cd6;\">def</span> <span style=\"color: #dcdcaa;\">classify_input</span>(<span style=\"color: #9cdcfe;\">user_input</span>):</div><div>&nbsp; &nbsp; result <span style=\"color: #d4d4d4;\">=</span> rule_based_classifier(user_input)</div><div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">if</span> result <span style=\"color: #d4d4d4;\">==</span> <span style=\"color: #ce9178;\">\"unknown\"</span>:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> llm_classifier(user_input)</div><div>&nbsp; &nbsp; <span style=\"color: #c586c0;\">return</span> result</div></div></div></div><p>여기서는 classify_input 함수가 사용되며, 이 함수는 사용자의 입력 문장을 분석하여 어떤 처리 패턴이 적합한지를 판단하는 역할을 수행한다. 하지만 이 함수 자체가 느리거나 LLM 호출을 과도하게 유발하면 전체 시스템의 응답성이 떨어지므로, 이를 빠르게 실행할 수 있는 설계가 중요하다.</p><p>classify_input을 빠르게 실행하기 위한 방법은 크게 세 가지로 구분된다. 첫 번째는 경량 LLM을 사용하는 방식이다. 이 방법은 GPT-3.5 Turbo, Claude Instant, DistilBERT 등의 속도가 빠른 경량 언어 모델을 활용하여 입력을 분류하는 방식이다. 프롬프트는 미리 정의된 범주 중에서 입력이 어떤 태스크 유형에 해당하는지를 선택하게 하며, 이에 따라 적절한 패턴으로 연결된다. 이 방식은 유연하고 적응력이 높지만, 여전히 LLM 호출이기 때문에 응답 속도에 영향을 줄 수 있다. 그럼에도 불구하고 ReAct 등 복잡한 구조보다는 훨씬 빠르고 저비용이다.</p><p>두 번째 방식은 규칙 기반 분류 방식이다. 이는 키워드 기반으로 입력 문장을 빠르게 분류하는 방법으로, 예를 들어 ‘보고서’, ‘작성해’ 등의 단어가 포함되어 있으면 단순 생성 태스크로 간주하고, ‘비교’, ‘계산’, ‘표로’ 등의 단어가 있으면 툴 기반 또는 구조화된 출력을 요구하는 태스크로 분류하는 것이다. 이 방식은 매우 빠르며, 수 마이크로초 이내에 실행이 가능하고, 비용도 발생하지 않는다. 그러나 복잡한 문장이나 여러 의미가 섞인 문장에 대해서는 정확하게 분류하지 못할 위험이 있다.</p><p>세 번째는 하이브리드 방식이다. 이 방식은 앞서 언급한 규칙 기반 분류기를 우선 사용하고, 그 결과가 불확실하거나 unknown일 경우에만 경량 LLM을 호출하여 보완 분류를 수행한다. 이 구조는 속도와 정확도 사이의 균형을 잡기 위해 매우 현실적인 대안이며, 실제로 OpenAI API 기반 에이전트나 LangChain의 라우팅 모듈에서도 유사한 방식이 채택된다. 구현은 상대적으로 복잡할 수 있으나, 전체 시스템의 응답성과 품질을 함께 유지할 수 있는 방법이다.</p><p>\n\n\n\n</p><p>결론적으로 classify_input 함수를 빠르게 실행하기 위해서는 입력의 유형과 빈도에 따라 최적화 전략을 선택해야 한다. 단순한 텍스트 입력이 반복되는 시스템에서는 규칙 기반 분류기로 충분하며, 복합 입력이 자주 등장하는 환경에서는 하이브리드 분류기를 설계하는 것이 이상적이다.&nbsp;</p>",
        "contentSnippet": "ReAct(Reasoning and Acting) 에이전트 구조는 대형 언어 모델(LLM)을 기반으로 도구 호출 기능을 통합한 지능형 에이전트 시스템을 구현하는 설계 방식이다. 사용자의 지시를 추론하고 필요한 경우 외부 도구를 호출하여 목표를 달성하는 능력을 지니며, 최근 AutoGPT, BabyAGI, Manus 등 다양한 오픈소스 프로젝트에서 채택되고 있다. 이 글에서는  ReAct 에이전트 프레임웍 내부 코드 구조를 직접 개발해본다. 아울러, ReAct 에이전트의 문제점들을 살펴보고 솔류션을 생각해본다. \n\n\n\n\nReAct Agent 구조(AI Agents Crash Course—Part 10 (With Implementation)\n\nReAct 구조 \nReAct 시퀀스 처리 구조는 LLM 기반 에이전트가 사고(Think), 행동(Act), 관찰(Observe), 결론(Final)의 단계로 사용자 질의에 응답하는 체계적 프로세스이다. 이 구조는 복잡한 문제 해결을 위해 LLM이 도구와 상호작용하면서 점진적으로 정답을 유도해내도록 설계되었다.\n다음은 해당 코드에서 구현된 ReAct 시퀀스의 흐름이다.\n\n\nThink\n\n\n\nAct\n\n필요하다고 판단되면 Act: ToolName[Input] 또는 Act: ToolName(Input) 형식으로 도구 호출을 지시한다. 이 지시문은 정규표현식으로 감지되어 실제 도구 실행이 트리거된다.\nObserve\nObserve: 접두사를 붙여 기록된다. 이 결과는 이후 컨텍스트에 포함되어 다음 LLM 호출의 입력으로 사용된다.\nFinal\nFinal Answer: 형식으로 최종 응답을 제공한다. 이는 루프를 종료시키는 조건이기도 하며, 에이전트의 실행 결과로 사용자에게 출력된다.\n\n\n\n\n이러한 시퀀스를 통해 LLM은 단순히 한 번에 답변하는 것이 아니라, 도구를 여러 번 사용하고 그 결과를 반영하며 점진적으로 정확한 응답에 도달한다.\nReAct 에이전트 내부 코드 구현해보기\n앞서 언급된 개념을 고려해 ReAct 에이전트의 핵심적인 코드만 구현해 본다. 다음과 같이 관련 라이브러리를 설치한다.\npip install langchain \n다음과 같이 코드를 구현한다. \n\nimport re, os\nfrom langchain.tools import Tool\nfrom langchain_community.tools.tavily_search import TavilySearchResults\nfrom langchain.chat_models import ChatOpenAI\nfrom langchain.schema import HumanMessage\nfrom dotenv import load_dotenv\n\n\nload_dotenv()\n\n\n# Calculator function\ndef calculator(input_str: str) -> str:\n    try:\n        result = eval(input_str)\n        return str(result)\n    except Exception as e:\n        return f\"Error: {e}\"\n\n\ndef FireCrawlResults(max_results=3, search_type=\"web\"):\n    from langchain_community.tools.fire_crawl import FireCrawlResults\n    return FireCrawlResults(max_results=max_results, search_type=search_type) # TBD\n\n\n# Initialize tools\ntools = [\n    Tool(\n        name=\"Calculator\",\n        func=calculator,\n        description=\"Evaluates mathematical expressions. Input should be a valid Python expression.\"\n    ),\n    TavilySearchResults(max_results=3, search_type=\"web\"),\n    # FireCrawlResults(max_results=3, search_type=\"web\"),\n]\n\n\n# Function to extract tool prototype info\ndef get_tools_info(tools):\n    info_list = []\n    for tool in tools:\n        # Try to get function signature if possible\n        if hasattr(tool, \"func\"):\n            proto = f\"{tool.name}(input: str)\"\n        else:\n            proto = f\"{tool.name}(input: str)\"\n        desc = getattr(tool, \"description\", \"No description.\")\n        info_list.append(f\"- {proto}: {desc}\")\n    return \"\\n\".join(info_list)\n\n\n# Initialize the language model\nllm = ChatOpenAI(temperature=0, model=\"gpt-4\", max_tokens=4000)\nanswer_validation_llm = ChatOpenAI(temperature=0, model=\"gpt-4-turbo\", max_tokens=4000)\n\n\n# Prompt template for ReAct\nprompt_template = \"\"\"\nInstruction: {instruct}\nIMPORTANT: If you do not know the answer, do not use 'Final Answer', just say 'I don't know'.\n\n\nTools you can use:\n{tools}\n\n\nContext:\n{context}\n\n\nQuery:\n{query}\n\n\nYou should follow the ReAct pattern:\n- Think: Reason about the question or next step.\n- Act: If needed, use a tool in the format Act: <tool>[<input>].\n- Observe: Note the result of the action.\n- Final: Give the final answer in the format Final Answer: <answer>.\n\"\"\"\n\n\nanswer_validation_prompt = \"\"\"\nQuestion: {question}\nAnswer: {answer}\nIs the answer relevant and correct for the question? Reply only with \"yes\" or \"no\" and a short reason.\n\"\"\"\n\n\nclass ReActAgent:\n    def __init__(self, llm, tools, prompt_template):\n        self.llm = llm\n        self.tools = {tool.name: tool for tool in tools}\n        self.prompt_template = prompt_template\n        self.tools_info = get_tools_info(tools)\n\n\n    def validate_answer(self, question, answer):\n        prompt = answer_validation_prompt.format(question=question, answer=answer)\n        messages = [HumanMessage(content=prompt)]\n        output = answer_validation_llm(messages)\n        response = output.content.strip().lower()\n        return response.startswith(\"yes\"), response\n\n\n    def run(self, input_query: str):\n        history = []\n        while True:\n            prompt = self.prompt_template.format(\n                instruct=\"Answer the question in detail using ReAct reasoning.\",\n                tools=self.tools_info,\n                context=\"\\n\".join(history),\n                query=input_query\n            )\n            messages = [HumanMessage(content=prompt)]\n            output = self.llm(messages)\n            response = output.content.strip()\n            history.append(response)\n\n\n            # Check for Final Answer\n            final_match = re.search(r\"Final Answer:\\s*(.*)\", response, re.IGNORECASE)\n            if final_match:\n                answer = final_match.group(1)\n                # is_valid, validation_msg = self.validate_answer(input_query, answer) # TBD. 실제 react 코드 확인.\n                # if is_valid:\n                return answer\n\n\n            # Detect action\n            action_match = re.search(r\"Act:\\s*(\\w+)[\\[\\(](.*)[\\]\\)]\", response)\n            if action_match:\n                action_name = action_match.group(1)\n                action_input = action_match.group(2)\n                print(f\"Action detected: {action_name} with input: {action_input}\")\n\n\n                tool = self.tools.get(action_name)\n                if not tool:\n                    history.append(f\"Observe: Unknown tool: {action_name}\")\n                    continue\n                action_input = action_input.replace(\"'\", \"\").replace('\"', \"\")   \n                result = tool.run(action_input)\n                history.append(f\"Observe: {result}\")\n            else:\n                # If no action and no final answer, just continue (could be Think step)\n                continue\n\n\nagent = ReActAgent(llm=llm, tools=tools, prompt_template=prompt_template)\n\n\ndef test():\n    query = \"What is the result of 12 * (3 + 4)?\"\n    result = agent.run(query)\n    print(result)\n\n\n    query = \"What is the capital of France?\"\n    result = agent.run(query)\n    print(result)\n\n\n    query = \"In web, What is Taewook kang's paper about Geo BIM using BIM and GIS?\"\n    result = agent.run(query)\n    print(result)\n\n\ndef main():\n    print(\"ReAct Agent is ready to use.\")\n    print(\"Available tools:\")\n    for tool in agent.tools_info.split(\"\\n\"):\n        print(tool)\n\n\n    # test()\n\n\n    print(\"\\nInteractive mode:\")\n    while True:\n        query = input(\"Enter your query (or 'exit' to quit): \")\n        if query.lower() == \"exit\":\n            break\n        result = agent.run(query)\n        print(result)\n\n\nif __name__ == \"__main__\":\n    main()\n\n\n이 코드는 ReAct 시퀀스를 중심으로 구성되어 있다. ReAct란 LLM이 단순한 질의응답을 넘어서서, 생각하고 도구를 사용하고 그 결과를 바탕으로 다시 추론한 뒤 최종적인 답을 내리는 일련의 추론 패턴이다. 이 흐름은 크게 네 단계로 나뉜다. \n첫째, Think 단계에서는 주어진 질문에 대해 어떻게 접근할지를 LLM이 서술적으로 사고한다. 둘째, Act 단계에서는 필요하다고 판단한 도구를 지정된 형식으로 호출한다. 이때 Act: ToolName[Input] 형식을 사용한다. 셋째, Observe 단계에서는 실행된 도구의 결과를 받아 LLM의 다음 추론에 포함될 수 있도록 기록한다. 넷째, Final 단계에서는 Final Answer: 답변 형식으로 최종 결론을 도출한다.\n이러한 시퀀스를 실제로 구현하기 위해 코드에서는 특정 정규표현식을 사용하여 각 단계를 감지하고 분기 처리한다. 예를 들어, Act 단계는 Act:라는 키워드를 통해 감지되고, 대응되는 도구 이름과 입력값이 추출된다. 대응되는 도구가 존재하면 해당 함수나 객체의 run 메서드를 호출하여 결과를 얻고, 이를 Observe로 기록하여 다음 프롬프트 생성 시 문맥으로 전달한다. Final Answer가 감지되면 그 값을 최종 출력으로 반환하면서 루프를 종료한다.\n코드는 먼저 환경변수를 불러오고, 수학 계산용 calculator 함수와 웹 검색용 Tavily 도구를 정의하고 tools 목록에 등록한다. 각 도구는 Tool 객체로 구성되며, name, func, description 속성을 갖는다. 이 도구들의 인터페이스 정보는 get_tools_info 함수를 통해 LLM 프롬프트에 전달할 수 있는 형식으로 변환된다.\nReActAgent 클래스는 핵심 로직을 담당한다. 생성자에서는 도구를 이름으로 접근 가능하도록 딕셔너리 형태로 구성하며, 프롬프트 템플릿에 포함할 도구 설명을 자동으로 생성한다. run 메서드는 LLM과의 대화를 이끄는 루프이다. 사용자의 입력 쿼리를 바탕으로 Think부터 Final 단계까지의 응답을 순차적으로 생성하고, 도구 호출이 필요한 경우 자동으로 감지하여 실행한다.\nLLM은 ChatOpenAI 클래스를 통해 초기화되며, 주 모델과 검증용 모델이 따로 구성된다. 현재 코드는 검증 부분이 주석 처리되어 있어 정답 검증은 수행되지 않지만 validate_answer 메서드는 존재한다. 해당 메서드는 question과 answer를 받아 프롬프트에 삽입하고 gpt-4-turbo 모델로부터 응답을 받아 yes 또는 no 여부와 사유를 반환한다.\n\n\n\n\n\n\nmain 함수는 인터랙티브한 사용자 입력을 받아 ReActAgent를 호출하는 실행 루틴이다. 사용자가 exit이라고 입력할 때까지 질의를 받고 응답을 출력하는 루프를 구성한다. 이로써 ReActAgent는 반복적인 질의응답 상황에서도 도구를 활용하여 논리적 사고 과정을 수행하고, 외부 정보에 기반한 정답을 도출할 수 있도록 설계되어 있다.\n주요 문제 유형\nReAct 기반 에이전트는 구현 및 실전 적용 과정에서 여러 구조적 문제와 비효율이 발생한다. 이러한 문제 사례를 분석하고, 실제 커뮤니티에서 공유된 해결 전략과 함께 개선 방향을 확인해 본다.\n추론 오류\n\n에이전트가 잘못된 전제나 문맥에 기반하여 부적절한 도구를 선택하거나 오답을 도출하는 문제가 빈번히 발생한다. 이는 LLM의 한계와 프롬프트 설계 미비, 또는 이전 상태 정보의 왜곡에 기인한다.\n반복 및 루프 문제\n\n에이전트가 목표에 도달하지 못하고 동일한 행동을 반복 수행하는 루프에 빠지는 문제가 자주 발생한다. 이는 max_steps 제한이 없거나, 실패 판단 기준이 모호한 경우에 두드러진다.\n결과 검증 실패\n\n에이전트가 도출한 결과가 부정확하거나 무의미함에도 불구하고, 이를 최종 결과로 판단하고 종료되는 문제가 있다. 이는 정답 여부를 평가할 수 있는 검증 메커니즘의 부재 혹은 Verifier LLM의 오판 때문이다.\n지연 및 비용 문제\n\nReAct 구조는 추론 Think, 행동 Act, 검증 Verify 단계에서 각각 LLM 호출이 필요하므로 응답 지연이 누적되며, 고성능 모델 사용 시 비용 또한 급증하게 된다.\n상태 관리 실패\n\n에이전트가 이전 문맥을 적절히 유지하지 못하거나, 기억을 잘못 참조하여 추론에 실패하는 경우가 있다. 이는 memory overflow, context 길이 초과 등으로 인해 발생한다.\n해외 커뮤니티 보고 사례\nReddit, GitHub, Hacker News 등 해외 커뮤니티에서는 위 문제들이 반복적으로 보고되고 있다. 주요 사례는 다음과 같다\nr/React 에서는 Langchain의 늦은 React 에이전트 성능에 대한 문제가 제기된 적이 있다. 이런 사례는 수도 없이 많다.\nr/AutoGPT에서는 도구 호출 반복, final answer 오류 등 루프와 검증 문제를 다룬 글들이 다수 존재한다.\n\nr/MachineLearning에서는 hallucination 문제, tool selection 오류에 대한 토론이 있다\n\n이는 ReAct 구조의 본질적인 설계 한계와 관련되며, 이를 보완하기 위한 다양한 시도들이 커뮤니티에서 논의되고 있다\n해결 방안\nVerifier LLM의 도입\n\n추론 결과에 대해 별도의 고성능 LLM을 사용하여 정답 여부를 판단하도록 구성하는 방식이다 예를 들어 GPT 35 기반 ReAct 에이전트를 GPT 4 기반 Verifier로 보완하는 사례가 있다\nConfidence 기반 조건 실행\n\nLLM이 응답에 대한 신뢰도 confidence score를 함께 출력하도록 하고, 일정 기준 미만일 경우에만 검증자 호출 또는 재시도를 수행하는 방식이다\n행동 다양성 유도 및 페널티 적용\n\n같은 도구를 반복 호출하지 않도록 행동 선택 시 다양성을 보장하거나 페널티 기반 scoring 방식을 적용한다\n결과 품질 기반 Soft Fallback 적용\n\n결과가 일정 기준 미달일 경우 완료 실패 메시지를 출력하거나, 대체 응답을 제공하는 방식으로 흐름을 마무리한다\n도메인 기반 grounding 기법\n\n도메인 특화 지식을 embedding하거나 retriever를 통해 grounding context를 제공함으로써 hallucination을 감소시키는 방식이다\nLLM 처리 지연 보완을 위한 전략\nReAct 구조에서는 LLM을 여러 번 호출하는 구조로 인해 응답 시간이 증가하는 문제가 발생한다. 이를 해결하기 위한 보완 전략은 다음과 같다\n첫째, 동일한 LLM을 사용하는 것이 아니라 추론 단계는 경량 LLM을 사용하고 검증 단계는 고성능 LLM을 사용하는 방식으로 역할 분리를 통해 효율을 높이는 방안이 있다\n둘째, LLM의 confidence score를 이용하여 신뢰도가 충분히 높은 경우에는 검증 단계를 생략함으로써 전체 호출 횟수를 줄일 수 있다\n셋째, 여러 행동 중 하나를 선택할 때 prefetch 또는 batch decoding 방식을 사용하여 예측을 병렬적으로 수행하면 전체 응답 지연을 줄일 수 있다\n넷째, 반복되는 도구 호출에 대해서는 캐싱 메커니즘을 도입하거나 결과를 저장하여 재활용함으로써 불필요한 호출을 방지할 수 있다\n다섯째, 검증자 역할을 하는 LLM을 완전한 LLM이 아니라 룰 기반 평가기 또는 소형 모델로 대체하여 빠르게 판단하게 하는 방식도 고려할 수 있다\n코드 기반 구현 예시 요약\nReAct 기반 구조는 보통 다음 흐름으로 구성된다\n\n\n사용자 입력 수신\n\nLLM을 통해 행동 계획 수립 Think\n\n해당 도구 실행 Act\n\n결과 수신 후 Verifier를 통해 정답 여부 판단 Verify\n\n정답 시 종료, 실패 시 재시도 또는 fallback 처리\n\n\n이러한 구조는 Python 코드로 구현할 수 있으며, 각 함수는 다음과 같은 역할을 수행한다\n\n\nthink goal 행동 계획 생성\n\nact action 도구 실행 및 결과 수신\n\nverify result, goal 결과 검증\n\nrun goal 전체 흐름 통제 및 반복 로직 포함\n\n\n결론\nReAct 기반 에이전트는 고도의 자율성을 지닌 시스템이나, 구조적으로 여러 한계가 존재한다. 특히 결과 검증 실패, 반복 루프, hallucination, 비용 증가 문제는 실제 운영 및 서비스화에 있어 큰 장애 요인이 된다. 이를 해결하기 위해서는 검증자 LLM 도입, confidence 기반 흐름 제어, 도구 호출의 다양성 보장, grounding 및 fallback 전략이 함께 설계될 수 있다.\n\n\n부록: 보고서 형식 AI 에이전트 패턴\nReAct 에이전트는 Reasoning and Acting의 약어로, LLM이 툴과 상호작용하며 문제를 해결하는 패턴이다. 이 구조는 인간처럼 사고하고, 필요한 정보를 외부 도구에서 검색하거나 계산을 수행한 뒤, 최종적으로 응답을 생성한다. 이로 인해 복잡한 질의나 멀티스텝 추론이 필요한 경우에 적합한 패턴으로 여겨진다. 그러나 이러한 장점에도 불구하고, LLM이 여러 차례 호출되고 툴도 반복적으로 작동하므로 응답 시간이 느려지고, API 사용량 증가로 인해 비용이 상승하는 단점이 존재한다.\n한편 단순히 보고서를 생성하는 용도로 LLM을 사용하는 경우라면, 복잡한 Reasoning이나 여러 번의 외부 툴 호출은 필요하지 않다. 이때는 ReAct 에이전트를 사용하는 것이 오히려 비효율적이며, 불필요한 구조적 복잡성과 지연을 유발한다. 따라서 보고서 자동 생성이라는 목적에 최적화된 에이전트 구조는 단일 호출 기반 구조가 적합하다.\n\n\n\n\n이 구조는 Single-Shot LLM Invocation 패턴으로 명명된다. 이 방식은 LLM을 한 번만 호출하여 입력된 요구 사항에 맞는 보고서를 즉시 생성한다. 별도의 도구 호출이나 intermediate step 없이 하나의 잘 설계된 프롬프트를 중심으로 전체 작업이 이루어진다. 이 패턴은 속도가 빠르고, 처리 흐름이 단순하며, LLM API 호출 횟수를 최소화하므로 비용이 낮다. 특히 단일 보고서, 요약, 이메일 초안, 블로그 콘텐츠와 같은 목적에 적합하며, 사용자의 입력 내용에 따라 문서 포맷이나 톤을 조정하는 것만으로 충분한 성능을 발휘한다.\n단일 호출 구조는 별도의 외부 툴이나 체인을 필요로 하지 않기 때문에 LangChain이나 ReAct 구조 없이도 Python 코드 수준에서 간단히 구현이 가능하다. 예를 들어, 사용자가 요구사항을 입력하면 그에 맞는 템플릿 기반 프롬프트를 작성하고, 이를 LLM에 전달해 한 번에 결과를 반환받는 방식이다. 이러한 프롬프트에 보고서의 형식, 어조, 길이 등을 명시하면, 결과물의 일관성과 품질도 충분히 확보할 수 있다.\n이 외에도 필요에 따라 Plan-and-Write 패턴을 고려할 수 있다. 이 패턴은 먼저 전체 문서의 개요를 작성한 뒤, 각 항목에 따라 내용을 생성하는 방식이다. 좀 더 명확한 구성과 섹션 구분이 필요할 때 유용하다. 통계 수치나 외부 데이터를 포함해야 할 경우에는 Toolformer와 같이 선택적으로 툴을 호출하는 패턴을 도입할 수 있다. 마지막으로 문서가 일정한 형식을 유지해야 하거나 후처리를 자동화해야 할 때는 Structured Prompting 패턴을 사용할 수 있으며, JSON 또는 Markdown 형식으로 문서 구조를 고정하여 일관성을 높인다.\n\n\n\n\n\n\n결론적으로, 보고서 자동 생성처럼 복잡한 추론이나 외부 툴 연동이 불필요한 작업에는 ReAct와 같은 다단계 에이전트 구조는 적합하지 않다. 대신 단일 LLM 호출로 작업을 완료하는 Single-Shot 방식이 가장 효율적이며, 프롬프트 최적화만으로 높은 품질의 결과를 얻을 수 있다. \n부록: AI 에이전트 오케스트레이션\n사용자 질문에 따라 적절한 에이전트 패턴을 선택하기 위해서는 입력의 목적과 복잡성을 빠르게 분류할 수 있는 에이전트 오케스트레이션 메커니즘이 필요하다. 다음 의사코드는 솔류션을 보여준다. \n\ndef classify_input(user_input):\n    if \"보고서\" in user_input or \"작성해\" in user_input:\n        return \"simple_generation\"\n    if \"json\" in user_input or \"표로\" in user_input:\n        return \"structured_output\"\n    if \"비교해\" in user_input or \"어떤게 더 나아\" in user_input:\n        return \"tool_assisted\"\n    if \"계산\" in user_input or any(op in user_input for op in \"+-*/\"):\n        return \"tool_assisted\"\n    return \"multi_step_reasoning\"\n\n\n\ndef classify_input(user_input):\n    result = rule_based_classifier(user_input)\n    if result == \"unknown\":\n        return llm_classifier(user_input)\n    return result\n\n\n여기서는 classify_input 함수가 사용되며, 이 함수는 사용자의 입력 문장을 분석하여 어떤 처리 패턴이 적합한지를 판단하는 역할을 수행한다. 하지만 이 함수 자체가 느리거나 LLM 호출을 과도하게 유발하면 전체 시스템의 응답성이 떨어지므로, 이를 빠르게 실행할 수 있는 설계가 중요하다.\nclassify_input을 빠르게 실행하기 위한 방법은 크게 세 가지로 구분된다. 첫 번째는 경량 LLM을 사용하는 방식이다. 이 방법은 GPT-3.5 Turbo, Claude Instant, DistilBERT 등의 속도가 빠른 경량 언어 모델을 활용하여 입력을 분류하는 방식이다. 프롬프트는 미리 정의된 범주 중에서 입력이 어떤 태스크 유형에 해당하는지를 선택하게 하며, 이에 따라 적절한 패턴으로 연결된다. 이 방식은 유연하고 적응력이 높지만, 여전히 LLM 호출이기 때문에 응답 속도에 영향을 줄 수 있다. 그럼에도 불구하고 ReAct 등 복잡한 구조보다는 훨씬 빠르고 저비용이다.\n두 번째 방식은 규칙 기반 분류 방식이다. 이는 키워드 기반으로 입력 문장을 빠르게 분류하는 방법으로, 예를 들어 ‘보고서’, ‘작성해’ 등의 단어가 포함되어 있으면 단순 생성 태스크로 간주하고, ‘비교’, ‘계산’, ‘표로’ 등의 단어가 있으면 툴 기반 또는 구조화된 출력을 요구하는 태스크로 분류하는 것이다. 이 방식은 매우 빠르며, 수 마이크로초 이내에 실행이 가능하고, 비용도 발생하지 않는다. 그러나 복잡한 문장이나 여러 의미가 섞인 문장에 대해서는 정확하게 분류하지 못할 위험이 있다.\n세 번째는 하이브리드 방식이다. 이 방식은 앞서 언급한 규칙 기반 분류기를 우선 사용하고, 그 결과가 불확실하거나 unknown일 경우에만 경량 LLM을 호출하여 보완 분류를 수행한다. 이 구조는 속도와 정확도 사이의 균형을 잡기 위해 매우 현실적인 대안이며, 실제로 OpenAI API 기반 에이전트나 LangChain의 라우팅 모듈에서도 유사한 방식이 채택된다. 구현은 상대적으로 복잡할 수 있으나, 전체 시스템의 응답성과 품질을 함께 유지할 수 있는 방법이다.\n\n\n\n\n\n결론적으로 classify_input 함수를 빠르게 실행하기 위해서는 입력의 유형과 빈도에 따라 최적화 전략을 선택해야 한다. 단순한 텍스트 입력이 반복되는 시스템에서는 규칙 기반 분류기로 충분하며, 복합 입력이 자주 등장하는 환경에서는 하이브리드 분류기를 설계하는 것이 이상적이다.",
        "id": "tag:blogger.com,1999:blog-5201956450461596914.post-1504859320890437239",
        "isoDate": "2025-05-18T05:02:00.000Z"
      }
    ]
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "Elasticsearch 9.0의 변화 - 2nd",
        "link": "https://kangmyounghun.blogspot.com/2025/05/elasticsearch-90-2nd.html",
        "pubDate": "2025-05-20T12:43:00.002Z",
        "author": "강명훈",
        "content": "<div>stack mornitoring 실행하니 이런 에러가 뜬다. <a href=\"https://www.elastic.co/docs/deploy-manage/security/secure-saved-objects#xpack-security-secure-saved-objects\" target=\"_blank\">개체 암호화</a>키가 필요하다고?</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjIFMEoaw1454oElbn5WtV8YpBqgccDjayl0zvblWoKmNoovho8gfVZDlFOIejHv9985WNDdPTTZaH85VZLej8LaMZKg3eVjqYG_EnuVhHrXR9Zwla_8N0EbCTBybdNP3TaAT2VtmhmZqWGarRz8KSOf7hCrx8pFvIZo7NR46nNvGfhoevDD1BAdnElQKlQ/s1058/stack_monitoring.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1058\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjIFMEoaw1454oElbn5WtV8YpBqgccDjayl0zvblWoKmNoovho8gfVZDlFOIejHv9985WNDdPTTZaH85VZLej8LaMZKg3eVjqYG_EnuVhHrXR9Zwla_8N0EbCTBybdNP3TaAT2VtmhmZqWGarRz8KSOf7hCrx8pFvIZo7NR46nNvGfhoevDD1BAdnElQKlQ/s16000/stack_monitoring.png\" /></a></div><br /><div><span><a name='more'></a></span>까라면 까야지<span style=\"font-size: x-small;\">(..)</span> <a href=\"https://www.elastic.co/docs/reference/kibana/commands/kibana-encryption-keys\" target=\"_blank\">암호화키 생성</a>.</div>\n<div><br /></div>\n<div class=\"colorscripter-code\" style=\"color: #010101; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; overflow: auto; position: relative;\"><table cellpadding=\"0\" cellspacing=\"0\" class=\"colorscripter-code-table\" style=\"background-color: #fafafa; border-radius: 4px; border: none; margin: 0px; padding: 0px;\"><tbody><tr><td style=\"padding: 6px 0px; text-align: left;\"><div style=\"color: #010101; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; line-height: 130%; margin: 0px; padding: 0px;\"><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">PS&nbsp;D:\\ELK\\kibana<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span><span style=\"color: #0099cc;\">9.</span><span style=\"color: #0099cc;\">0.</span><span style=\"color: #0099cc;\">1</span>\\bin<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">&gt;</span>&nbsp;.\\kibana<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>encryption<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>keys.bat&nbsp;generate&nbsp;<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>i</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\"><span style=\"color: #999999;\">##&nbsp;Kibana&nbsp;Encryption&nbsp;Key&nbsp;Generation&nbsp;Utility</span></div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">The&nbsp;<span style=\"color: #63a35c;\">'generate'</span>&nbsp;command&nbsp;guides&nbsp;you&nbsp;through&nbsp;the&nbsp;process&nbsp;of&nbsp;setting&nbsp;encryption&nbsp;keys&nbsp;<span style=\"color: #a71d5d;\">for</span>:</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">xpack.encryptedSavedObjects.encryptionKey</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;&nbsp;&nbsp;&nbsp;Used&nbsp;to&nbsp;encrypt&nbsp;stored&nbsp;objects&nbsp;such&nbsp;as&nbsp;dashboards&nbsp;and&nbsp;visualizations</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;&nbsp;&nbsp;&nbsp;https:<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span><span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>www.elastic.co<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>guide<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>en<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>kibana<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>current<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>xpack<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>security<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>secure<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>saved<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>objects.html<span style=\"color: #999999;\">#xpack-security-secure-saved-objects</span></div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">xpack.reporting.encryptionKey</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;&nbsp;&nbsp;&nbsp;Used&nbsp;to&nbsp;encrypt&nbsp;saved&nbsp;reports</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;&nbsp;&nbsp;&nbsp;https:<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span><span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>www.elastic.co<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>guide<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>en<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>kibana<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>current<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>reporting<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>settings<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>kb.html<span style=\"color: #999999;\">#general-reporting-settings</span></div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">xpack.security.encryptionKey</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;&nbsp;&nbsp;&nbsp;Used&nbsp;to&nbsp;encrypt&nbsp;session&nbsp;information</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;&nbsp;&nbsp;&nbsp;https:<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span><span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>www.elastic.co<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>guide<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>en<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>kibana<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>current<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>security<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>settings<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>kb.html<span style=\"color: #999999;\">#security-session-and-cookie-settings</span></div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Already&nbsp;defined&nbsp;settings&nbsp;are&nbsp;ignored&nbsp;and&nbsp;can&nbsp;be&nbsp;regenerated&nbsp;using&nbsp;the&nbsp;<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span><span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span>force&nbsp;flag.&nbsp;&nbsp;Check&nbsp;the&nbsp;documentation&nbsp;links&nbsp;<span style=\"color: #a71d5d;\">for</span>&nbsp;instructions&nbsp;on&nbsp;how&nbsp;to&nbsp;rotate&nbsp;encryption&nbsp;keys.</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Definitions&nbsp;should&nbsp;be&nbsp;<span style=\"color: #066de2;\">set</span>&nbsp;in&nbsp;the&nbsp;kibana.yml&nbsp;used&nbsp;configure&nbsp;Kibana.</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">This&nbsp;tool&nbsp;will&nbsp;ask&nbsp;you&nbsp;a&nbsp;number&nbsp;of&nbsp;questions&nbsp;in&nbsp;order&nbsp;to&nbsp;generate&nbsp;the&nbsp;right&nbsp;<span style=\"color: #066de2;\">set</span>&nbsp;of&nbsp;keys&nbsp;<span style=\"color: #a71d5d;\">for</span>&nbsp;your&nbsp;needs.</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Set&nbsp;xpack.encryptedSavedObjects.encryptionKey?&nbsp;[y<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>N]&nbsp;y</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Set&nbsp;xpack.reporting.encryptionKey?&nbsp;[y<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>N]&nbsp;n</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Set&nbsp;xpack.security.encryptionKey?&nbsp;[y<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>N]&nbsp;n</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">The&nbsp;following&nbsp;key&nbsp;was&nbsp;generated:</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">xpack.encryptedSavedObjects.encryptionKey</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">&nbsp;</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Save&nbsp;generated&nbsp;keys&nbsp;to&nbsp;a&nbsp;sample&nbsp;Kibana&nbsp;configuration&nbsp;file?&nbsp;[y<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">/</span>N]&nbsp;y</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">What&nbsp;filename&nbsp;should&nbsp;be&nbsp;used&nbsp;<span style=\"color: #a71d5d;\">for</span>&nbsp;the&nbsp;sample&nbsp;Kibana&nbsp;config&nbsp;file?&nbsp;[D:\\ELK\\kibana<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span><span style=\"color: #0099cc;\">9.</span><span style=\"color: #0099cc;\">0.</span><span style=\"color: #0099cc;\">1</span>\\config\\kibana.sample.yml]):</div><div style=\"line-height: 130%; padding: 0px 6px; white-space: pre;\">Wrote&nbsp;configuration&nbsp;to&nbsp;D:\\ELK\\kibana<span style=\"color: #0086b3;\"></span><span style=\"color: #a71d5d;\">-</span><span style=\"color: #0099cc;\">9.</span><span style=\"color: #0099cc;\">0.</span><span style=\"color: #0099cc;\">1</span>\\config\\kibana.sample.yml</div></div><div style=\"font-size: 9px; font-style: italic; margin-right: 5px; margin-top: -13px; text-align: right;\"><a href=\"http://colorscripter.com/info#e\" style=\"color: #e5e5e5text-decoration:none;\" target=\"_blank\">Colored by Color Scripter</a></div></td><td style=\"padding: 0px 2px 4px 0px; vertical-align: bottom;\"><a href=\"http://colorscripter.com/info#e\" style=\"color: white; text-decoration: none;\" target=\"_blank\"><span style=\"background-color: #e5e5e5; border-radius: 10px; color: white; font-size: 9px; padding: 1px; word-break: normal;\">cs</span></a></td></tr></tbody></table></div>\n<div><br /></div>\n<div>생성된 암호화키 설정 추가.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJF-0iX_GaJTqg_mYGmlzNCHDSE-TotZhbynV8bFii1rh_gtbmkbU0Jqt7GjuEadP9qda7-gyTXSCOTMQrMHKhO1Es1DliMTNyd2F8GXYZdq_q4Xr35rXbE9m82N4-zqIm0UnVj98JwjDpluuFPMgb2IkE1p5UL-iiP28e4PzJBVMzEdzoHfoROLmbqQgm/s1280/encryptionkey.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"504\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgJF-0iX_GaJTqg_mYGmlzNCHDSE-TotZhbynV8bFii1rh_gtbmkbU0Jqt7GjuEadP9qda7-gyTXSCOTMQrMHKhO1Es1DliMTNyd2F8GXYZdq_q4Xr35rXbE9m82N4-zqIm0UnVj98JwjDpluuFPMgb2IkE1p5UL-iiP28e4PzJBVMzEdzoHfoROLmbqQgm/s16000/encryptionkey.png\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgKznmVhtsi3K424n9fzslt1INTUF4DnL0YE5vvlYMJTw4p8e9ouurQC8p8KNyxLFFql-3MzHGDtaOZ4L-YwEnSbOkCMec_n27fK8ZSmxz0Ye0Zi61bbdaWDGn5tnz3N70d528iZQQearaRVMoQ3k1wrblWknQfSOYFI-0xfjddWX8S7LhKVnVgARYuHp8P/s1230/stack_monitoring2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1230\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgKznmVhtsi3K424n9fzslt1INTUF4DnL0YE5vvlYMJTw4p8e9ouurQC8p8KNyxLFFql-3MzHGDtaOZ4L-YwEnSbOkCMec_n27fK8ZSmxz0Ye0Zi61bbdaWDGn5tnz3N70d528iZQQearaRVMoQ3k1wrblWknQfSOYFI-0xfjddWX8S7LhKVnVgARYuHp8P/s16000/stack_monitoring2.png\" /></a></div><div><br /></div><div>보안이 계속 강화된다. 중요하지 보안<span style=\"font-size: x-small;\">(..)</span></div><div><br /></div><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/04/elasticsearch-90.html\">Elasticsearch 9.0의 변화</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/11/elasticsearch-811.html\">Elasticsearch 8.11의 변화</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2025/05/filebeat-90.html\">Filebeat 9.0의 변화</a></li></ul></div></div>",
        "contentSnippet": "stack mornitoring 실행하니 이런 에러가 뜬다. 개체 암호화키가 필요하다고?\n\n\n\n\n까라면 까야지(..) 암호화키 생성.\n\n\n\nPS D:\\ELK\\kibana-9.0.1\\bin> .\\kibana-encryption-keys.bat generate -i\n## Kibana Encryption Key Generation Utility\n \nThe 'generate' command guides you through the process of setting encryption keys for:\n \nxpack.encryptedSavedObjects.encryptionKey\n    Used to encrypt stored objects such as dashboards and visualizations\n    https://www.elastic.co/guide/en/kibana/current/xpack-security-secure-saved-objects.html#xpack-security-secure-saved-objects\n \nxpack.reporting.encryptionKey\n    Used to encrypt saved reports\n    https://www.elastic.co/guide/en/kibana/current/reporting-settings-kb.html#general-reporting-settings\n \nxpack.security.encryptionKey\n    Used to encrypt session information\n    https://www.elastic.co/guide/en/kibana/current/security-settings-kb.html#security-session-and-cookie-settings\n \n \nAlready defined settings are ignored and can be regenerated using the --force flag.  Check the documentation links for instructions on how to rotate encryption keys.\nDefinitions should be set in the kibana.yml used configure Kibana.\n \nThis tool will ask you a number of questions in order to generate the right set of keys for your needs.\n \nSet xpack.encryptedSavedObjects.encryptionKey? [y/N] y\nSet xpack.reporting.encryptionKey? [y/N] n\nSet xpack.security.encryptionKey? [y/N] n\n \nThe following key was generated:\nxpack.encryptedSavedObjects.encryptionKey\n \nSave generated keys to a sample Kibana configuration file? [y/N] y\nWhat filename should be used for the sample Kibana config file? [D:\\ELK\\kibana-9.0.1\\config\\kibana.sample.yml]):\nWrote configuration to D:\\ELK\\kibana-9.0.1\\config\\kibana.sample.yml\n\nColored by Color Scripter\ncs\n\n\n\n\n생성된 암호화키 설정 추가.\n\n\n\n\n\n\n보안이 계속 강화된다. 중요하지 보안(..)\n\n\n관련 글\n\nElasticsearch 9.0의 변화\nElasticsearch 8.11의 변화\nFilebeat 9.0의 변화",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-1664616455105635469",
        "isoDate": "2025-05-20T12:43:00.002Z"
      },
      {
        "title": "엘라스틱 Runtime field - 12th",
        "link": "https://kangmyounghun.blogspot.com/2025/05/runtime-field-12th.html",
        "pubDate": "2025-05-18T05:46:00.006Z",
        "author": "강명훈",
        "content": "<div>잘 동작하는 정규표현식.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgsER5yPb02rLYwOhDt2AoF1dtFE744vpC5DxqJ-aaiCwwRlGsR1cvEuNyqQ1RqzXurJueQ_iVnj9dBTnNJiNYqQ4fyqfvXAB-slx1Uha-ohObIeMLlabTPnLEzQVwHgpIXmjCxogmhmrDT4Xcd1OrRVUGSUcLKNFj0xeA9yJb7k37B3e3oWxZCuPQi5QyV/s1280/regex.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"654\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgsER5yPb02rLYwOhDt2AoF1dtFE744vpC5DxqJ-aaiCwwRlGsR1cvEuNyqQ1RqzXurJueQ_iVnj9dBTnNJiNYqQ4fyqfvXAB-slx1Uha-ohObIeMLlabTPnLEzQVwHgpIXmjCxogmhmrDT4Xcd1OrRVUGSUcLKNFj0xeA9yJb7k37B3e3oWxZCuPQi5QyV/s16000/regex.png\" /></a></div><div><br />\n</div><div><span><a name='more'></a></span>url 필드 추출.</div>\n<div><pre><code><span style=\"font-family: courier;\"><div>PUT sample/_mapping</div><div>{</div><div>&nbsp; &nbsp; \"runtime\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"url\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"type\": \"keyword\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"script\": \"\"\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (doc['message.keyword'].value =~ /\\?/) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; def str=/[^\"]+\"\\S+ ([^?]+)\\?/.matcher(doc['message.keyword'].value);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (str.find()) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; emit(str.group(1))</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; def str=/[^\"]+\"\\S+ (\\S+)/.matcher(doc['message.keyword'].value);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (str.find()) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; emit(str.group(1))</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"\"\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>}</div></span></code></pre></div>\n<div><br /></div><div>필드는 잘 만들어졌는데,</div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjc55RY4K5xfEtDH5Ozy19pxAoEX1Sgru41m45IA0xarGVmv7PIbQNe5FGF4Jz958-nY0HbF62DmckcGZ7Tr8xiFkDGDXUEw2Jl-CacXY7euTdSLcAaRig1wRaSxDiUBCdRs7tUA2u8schx5l0dMPHh5DFUfOP_5ZiX-ugBQnA5lLUybOFdJOC0n-005UIq/s1280/dataview.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"620\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjc55RY4K5xfEtDH5Ozy19pxAoEX1Sgru41m45IA0xarGVmv7PIbQNe5FGF4Jz958-nY0HbF62DmckcGZ7Tr8xiFkDGDXUEw2Jl-CacXY7euTdSLcAaRig1wRaSxDiUBCdRs7tUA2u8schx5l0dMPHh5DFUfOP_5ZiX-ugBQnA5lLUybOFdJOC0n-005UIq/s16000/dataview.png\" /></a></div><br />\n<div>조회가 안 된다. <a href=\"https://www.elastic.co/docs/reference/scripting-languages/painless/brief-painless-walkthrough#modules-scripting-painless-regex\" target=\"_blank\">painless 스크립트에 정규표현식 제한</a>을 걸어놓은 모양. <span style=\"font-size: x-small;\">(v9부터 걸린 건가?)</span></div><div><br /></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEix6UjUbAMZs1iN9P_yCstWedgDxX4njkioT1HpCTKV2E7N7mcOathXFVM8ZUoNk2UjT3gaoKzMEfEvmmUJ7QXxVqKO6CPDcbvdKLmKfkA7kEDDmfp2KiY8Q6vI8kCQN0EmySIEL2PQXXUrrR2o-pjfPChm00sQzB5dd1_AF1c8DCO-LxNIlMsMb8gi264v/s1026/painless_regex.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1026\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEix6UjUbAMZs1iN9P_yCstWedgDxX4njkioT1HpCTKV2E7N7mcOathXFVM8ZUoNk2UjT3gaoKzMEfEvmmUJ7QXxVqKO6CPDcbvdKLmKfkA7kEDDmfp2KiY8Q6vI8kCQN0EmySIEL2PQXXUrrR2o-pjfPChm00sQzB5dd1_AF1c8DCO-LxNIlMsMb8gi264v/s16000/painless_regex.png\" /></a></div><br />\n<div>제한을 풀기 위한&nbsp;<a href=\"https://www.elastic.co/docs/reference/elasticsearch/configuration-reference/circuit-breaker-settings#script-painless-regex-limit-factor\" target=\"_blank\">script.painless.regex.enabled</a>&nbsp;설정 추가.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgUsNyp6W0u3BB_b5p8OEV02T4pMqivQ9B6EcEfnppShV12DK8oQy7j1lOLx5WJuAriwskV2f_pMPnbCgb6OJ0SnrhXPOiOs8M1YWVg3fr_gaQVBTM9ioxFF3ecqZ5itqYyqb1xq28RyDQCnIiltihKThC0HP2sPIFVFESn1P5MdNNcsmNmqhWv1Ngv5l7x/s1207/painless_regex2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"479\" data-original-width=\"1207\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgUsNyp6W0u3BB_b5p8OEV02T4pMqivQ9B6EcEfnppShV12DK8oQy7j1lOLx5WJuAriwskV2f_pMPnbCgb6OJ0SnrhXPOiOs8M1YWVg3fr_gaQVBTM9ioxFF3ecqZ5itqYyqb1xq28RyDQCnIiltihKThC0HP2sPIFVFESn1P5MdNNcsmNmqhWv1Ngv5l7x/s16000/painless_regex2.png\" /></a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiym_rWzVkljBoyKCJnELgX2keMzy_synUpRbrq0ZNDpqaLjK3JnIXXVKhzzN51m-RQeu6tXnSDtA-Lk6uouPEoHI4yvgXHpeBB4b0JPTNvEgES2BmfuH4jg6WzttRIo8_8fXfsAFXi5VwYNsEDQGALl3sXUxVx1Ypg-183AXrXn91bFKDnKR8V4iCu6v06/s1280/runtime_field.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"648\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiym_rWzVkljBoyKCJnELgX2keMzy_synUpRbrq0ZNDpqaLjK3JnIXXVKhzzN51m-RQeu6tXnSDtA-Lk6uouPEoHI4yvgXHpeBB4b0JPTNvEgES2BmfuH4jg6WzttRIo8_8fXfsAFXi5VwYNsEDQGALl3sXUxVx1Ypg-183AXrXn91bFKDnKR8V4iCu6v06/s16000/runtime_field.png\" /></a></div>\n<div><br /></div><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/03/runtime-field-11th.html\">엘라스틱 Runtime field - 11th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/03/712.html\" target=\"\">엘라스틱 Runtime field</a></li><li><a href=\"http://kangmyounghun.blogspot.com/2018/07/elasticsearch-scripted-field.html\" target=\"\">엘라스틱 Sscripted field</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/09/2nd.html\" target=\"\">정규표현식 몰라도 된다 - 2nd</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/09/convert-ip-to-decimal.html\">convert ip to decimal</a></li></ul></div></div>",
        "contentSnippet": "잘 동작하는 정규표현식.\n\n\n\n\nurl 필드 추출.\n\nPUT sample/_mapping\n{\n    \"runtime\": {\n        \"url\": {\n            \"type\": \"keyword\",\n            \"script\": \"\"\"\n                if (doc['message.keyword'].value =~ /\\?/) {\n                    def str=/[^\"]+\"\\S+ ([^?]+)\\?/.matcher(doc['message.keyword'].value);\n                    if (str.find()) {\n                        emit(str.group(1))\n                    }\n                } else {\n                    def str=/[^\"]+\"\\S+ (\\S+)/.matcher(doc['message.keyword'].value);\n                    if (str.find()) {\n                        emit(str.group(1))\n                    }\n                }\n            \"\"\"\n        }\n    }\n}\n\n\n\n\n필드는 잘 만들어졌는데,\n\n\n\n\n조회가 안 된다. painless 스크립트에 정규표현식 제한을 걸어놓은 모양. (v9부터 걸린 건가?)\n\n\n\n\n제한을 풀기 위한 script.painless.regex.enabled 설정 추가.\n\n\n\n\n\n\n관련 글\n\n엘라스틱 Runtime field - 11th\n엘라스틱 Runtime field\n엘라스틱 Sscripted field\n정규표현식 몰라도 된다 - 2nd\nconvert ip to decimal",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-657105889296755122",
        "isoDate": "2025-05-18T05:46:00.006Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Lael's World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "구글 AI 울트라 - 월 25만원의 초강력 AI 구독 서비스, 정말 가치가 있을까?",
        "link": "http://muzbox.tistory.com/483596",
        "pubDate": "Wed, 21 May 2025 16:14:48 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483596#entry483596comment",
        "content": "<p data-ke-size=\"size16\">구글 AI 울트라 최신 소식: 월 $249.99의 VIP급 AI 구독 서비스 총정리! 제미니 최고급 버전, 비오 3 얼리 액세스, 30TB 스토리지, 유튜브 프리미엄까지 한 번에. 영화 제작자와 개발자를 위한 구글의 혁신적 AI 플랜을 알아보세요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GOOGLE AI ULTRA.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/ch2aKh/btsN6Cji20y/jayoeodthe2LjEiUNIeNMk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ch2aKh/btsN6Cji20y/jayoeodthe2LjEiUNIeNMk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ch2aKh/btsN6Cji20y/jayoeodthe2LjEiUNIeNMk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fch2aKh%2FbtsN6Cji20y%2Fjayoeodthe2LjEiUNIeNMk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"구글 AI 울트라 - 월 25만원의 초강력 AI 구독 서비스, 정말 가치가 있을까?\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"GOOGLE AI ULTRA.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;아침에 일어나 뉴스를 확인하는데 눈을 의심했어요. 구글에서 또 신규 AI 서비스를 출시했다고? 어제만 해도 일반 프리미엄 플랜을 쓰고 있었는데, 갑자기 '울트라'라니... 솔직히 호기심이 막 솟았습니다. 이 새로운 서비스가 정말 월 25만원이 넘는 가치가 있을지, 특히 영상 제작이나 복잡한 연구를 자주 하는 분들에게 어떤 변화를 가져올지 궁금해서 바로 살펴봤어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분도 최신 AI 기술에 관심이 있으신가요? 아니면 단순히 비싼 신규 서비스가 출시될 때마다 \"이게 왜 필요하지?\"라는 생각이 드시나요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>구글 AI 울트라란 무엇인가?  </b></span></h2>\n<p data-ke-size=\"size16\">구글 AI 울트라는 2025년 5월 20일 출시된 구글의 최상위 AI 구독 플랜입니다. 일단 이름부터가 '울트라'잖아요. 이름 그대로 구글 AI의 모든 최고급 기능과 최대 사용량, 그리고 최신 모델에 대한 우선 접근권을 제공하는 서비스예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">심릿 벤-야이르 구글 포토 및 구글 원 부사장은 \"영화 제작자, 개발자, 크리에이티브 전문가 또는 단순히 구글 AI의 최고 수준을 원하는 사용자를 위한 VIP 패스\"라고 소개했어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">현재 미국에서만 월 $249.99(약 34만원)에 제공되지만, 첫 3개월 동안 50% 할인 혜택이 있다고 하네요. 국내 출시 일정은 아직 공개되지 않았지만, 곧 다른 국가로도 확장될 예정이라고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>구글 AI 울트라의 핵심 기능 및 혜택  </b></span></h2>\n<p data-ke-size=\"size16\">제가 직접 구글 공식 블로그의 정보를 종합해서 가장 인상적인 기능들을 정리해봤어요:</p>\n<h3 data-ke-size=\"size23\">1. 제미니(Gemini) 최상위 버전</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>딥 리서치</b>: 기존 연구 기능보다 훨씬 더 깊은 수준의 분석 가능</li>\n<li><b>비오 2(Veo 2)</b>: 최첨단 비디오 생성 모델 접근 권한</li>\n<li><b>비오 3(Veo 3)</b>: 초기 접근 권한 제공(아직 정식 출시 안 됨)</li>\n<li><b>딥 싱크 2.5 Pro</b>: 몇 주 내에 향상된 추론 모드 접근 권한 제공 예정</li>\n</ul>\n<h3 data-ke-size=\"size23\">2. 플로우(Flow) - 새로운 AI 영화 제작 도구</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>구글 딥마인드의 가장 진보된 모델(비오, 이마젠, 제미니) 맞춤 설계</li>\n<li>직관적인 프롬프트로 영화적 클립, 장면, 일관된 내러티브 제작 가능</li>\n<li>1080p 비디오 생성, 고급 카메라 제어 기능</li>\n<li>비오 3 모델 얼리 액세스</li>\n</ul>\n<h3 data-ke-size=\"size23\">3. 위스크(Whisk) - 아이디어 시각화 도구</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>텍스트와 이미지 프롬프트로 빠르게 아이디어 탐색 및 시각화</li>\n<li>위스크 애니메이트: 이미지를 비오 2 모델로 생생한 8초 비디오로 변환</li>\n<li>가장 높은 사용 한도 제공</li>\n</ul>\n<h3 data-ke-size=\"size23\">4. 노트북LM(NotebookLM)</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>올해 말 가장 높은 사용 한도와 향상된 모델 기능 제공 예정</li>\n<li>학습, 교육, 프로젝트에 최적화</li>\n</ul>\n<h3 data-ke-size=\"size23\">5. 프로젝트 마리너(Project Mariner)</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>에이전트 연구 프로토타입</li>\n<li>연구부터 예약, 구매까지 최대 10개 작업 동시 관리 가능</li>\n<li>단일 대시보드에서 모든 작업 관리</li>\n</ul>\n<h3 data-ke-size=\"size23\">6. 기타 통합 서비스</h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>제미니 인 크롬</b>: 내일부터 크롬 브라우저 내에서 제미니 조기 액세스</li>\n<li><b>유튜브 프리미엄</b>: 개인 유튜브 프리미엄 플랜 포함</li>\n<li><b>30TB 스토리지</b>: 구글 포토, 드라이브, 지메일 전체에 걸쳐 대용량 저장공간</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>구글 AI 프로와의 차이점 - 정말 가치가 있을까?  </b></span></h2>\n<p data-ke-size=\"size16\">제가 가장 궁금했던 부분은 기존의 AI 프리미엄 플랜(이제 구글 AI 프로로 변경)과 비교했을 때 실제로 어떤 차이가 있는지였어요. 구글이 공개한 비교표를 분석해보니:</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0; font-family: Arial, sans-serif;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4285f4; color: white;\">\n<th style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">기능</th>\n<th style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">구글 AI 프로</th>\n<th style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">구글 AI 울트라</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"background-color: #f8f8f8;\">\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">가격</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">$19.99/월</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">$249.99/월</td>\n</tr>\n<tr>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">제미니</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">제미니 Advanced</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">최상위 제미니 경험</td>\n</tr>\n<tr style=\"background-color: #f8f8f8;\">\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">플로우(Flow)</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">비오 2 제한적 접근</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">비오 3 포함 전체 기능</td>\n</tr>\n<tr>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">위스크(Whisk)</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">기본 기능</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">최대 사용량 한도</td>\n</tr>\n<tr style=\"background-color: #f8f8f8;\">\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">스토리지</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">2TB</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">30TB</td>\n</tr>\n<tr>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">유튜브</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">없음</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">유튜브 프리미엄 포함</td>\n</tr>\n<tr style=\"background-color: #f8f8f8;\">\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">프로젝트 마리너</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">없음</td>\n<td style=\"padding: 12px 15px; text-align: left; border: 1px solid #ddd;\">포함</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">여기서 특히 주목할 점은 구글 AI 프로 사용자들도 추가 비용 없이 플로우 AI 영화 제작 기능 및 크롬에서의 제미니 조기 접근 권한이 제공된다는 거예요. 미국에서 먼저 시작해 다른 국가로 확대될 예정이라고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>실제 활용 사례 - 누구에게 필요할까?  </b></span></h2>\n<p data-ke-size=\"size16\">제 생각에 이 서비스는 아래와 같은 사용자들에게 특히 유용할 것 같아요:</p>\n<h3 data-ke-size=\"size23\">1. 프로페셔널 크리에이터 및 영화 제작자</h3>\n<p data-ke-size=\"size16\">비오 3 모델과 플로우 도구를 활용한 고급 영상 제작이 가능합니다. 제가 영상 프로듀서 친구에게 물어보니, 간단한 프로젝트에서 포스트 프로덕션 시간을 50-60% 줄일 수 있을 것 같다고 하더라고요.</p>\n<h3 data-ke-size=\"size23\">2. 개발자 및 연구원</h3>\n<p data-ke-size=\"size16\">딥 리서치와 딥 싱크 기능을 통해 복잡한 코딩 작업과 학술 연구에 활용할 수 있습니다. 특히 논문 작성이나 데이터 분석에 유용할 것 같아요.</p>\n<h3 data-ke-size=\"size23\">3. 비즈니스 전문가</h3>\n<p data-ke-size=\"size16\">프로젝트 마리너를 통해 여러 작업을 동시에 관리하고 효율성을 극대화할 수 있습니다. 특히 많은 프로젝트를 동시에 진행하는 프리랜서나 창업자에게 유용하겠죠.</p>\n<h3 data-ke-size=\"size23\">4. 대용량 스토리지 필요 사용자</h3>\n<p data-ke-size=\"size16\">30TB의 스토리지는 사진, 영상, 문서 등을 대량으로 저장하는 사용자에게 매력적인 옵션입니다. 특히 고해상도 영상 작업을 많이 하는 분들에게요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>구글 AI 울트라의 한계와 고려사항 ⚠️</b></span></h2>\n<p data-ke-size=\"size16\">하지만 모든 좋은 점에도 불구하고, 몇 가지 고려해야 할 사항이 있어요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>높은 가격대</b>: 월 $249.99는 개인 사용자에게는 부담스러운 가격입니다. 비즈니스나 전문가가 아니라면 비용 대비 효율성을 신중히 고려해야 해요.</li>\n<li><b>국가별 가용성</b>: 현재 미국에서만 제공되며, 다른 국가 출시 일정은 불확실합니다. 한국에서는 언제 사용할 수 있을지 아직 미정이에요.</li>\n<li><b>인터넷 의존성</b>: 대부분의 기능이 클라우드 기반이므로 안정적인 인터넷 연결이 필요합니다. 인터넷이 불안정한 환경에서는 활용도가 떨어질 수 있어요.</li>\n<li><b>학습 곡선</b>: 다양한 고급 기능을 최대한 활용하려면 일정 수준의 학습이 필요합니다. 특히 플로우나 제미니의 고급 기능은 숙련도가 필요할 수 있어요.</li>\n</ol>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>대학생을 위한 혜택 - 무료 AI 프로 접근  </b></span></h2>\n<p data-ke-size=\"size16\">&nbsp;흥미롭게도 구글은 일본, 브라질, 인도네시아, 영국의 대학생들에게도 학교 연도 동안 구글 AI 프로에 무료로 접근할 수 있는 혜택을 확대한다고 밝혔습니다. 이전에 미국 대학생들에게만 제공되었던 혜택이 더 많은 국가로 확대되는 것이죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이런 교육 분야 지원은 미래 인재 육성과 AI 기술 보급에 중요한 역할을 할 것으로 보여요. 특히 딥 러닝이나 자연어 처리를 배우는 학생들에게는 실무적인 경험을 쌓을 수 있는 좋은 기회가 될 것 같습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"793\" data-origin-height=\"469\"><span data-url=\"https://blog.kakaocdn.net/dn/owXLF/btsN6SsVcJb/VFWpBPKW7Px99Kmu5Exxz0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/owXLF/btsN6SsVcJb/VFWpBPKW7Px99Kmu5Exxz0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/owXLF/btsN6SsVcJb/VFWpBPKW7Px99Kmu5Exxz0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FowXLF%2FbtsN6SsVcJb%2FVFWpBPKW7Px99Kmu5Exxz0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"구글 AI 울트라 출시\" loading=\"lazy\" width=\"793\" height=\"469\" data-origin-width=\"793\" data-origin-height=\"469\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>마무리: 미래 AI의 방향성  </b></span></h2>\n<p data-ke-size=\"size16\">구글 AI 울트라의 출시는 AI 기술의 대중화와 전문화가 동시에 진행되고 있음을 보여줍니다. 월 $19.99의 프로 플랜은 일반 사용자를 위한 것이라면, 월 $249.99의 울트라 플랜은 AI 기술을 직업이나 전문적인 작업에 적극 활용하는 사용자들을 위한 것으로 보여요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">앞으로 AI 기술이 더욱 발전하면서 이런 서비스의 가격은 내려가고 기능은 더욱 강화될 것으로 기대됩니다. 지금 당장 울트라 플랜이 필요하지 않더라도, 이런 최신 기술들이 앞으로 어떻게 우리 일상과 업무를 변화시킬지 지켜보는 것도 흥미로울 것 같네요.</p>\n<p data-ke-size=\"size16\">AI 기술에 관심이 있거나 실제로 전문적인 작업에 활용해보고 싶으신 분들이라면, 3개월 50% 할인 혜택을 활용해 구글 AI 울트라를 시험해보는 것도 좋은 방법일 수 있겠습니다. 무엇보다 자신의 필요와 사용 패턴에 맞는 서비스를 선택하는 것이 중요하다고 생각해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분은 어떻게 생각하시나요? 구글 AI 울트라 같은 고급 AI 서비스가 여러분의 일상이나 업무에 어떤 변화를 가져올 것 같나요? 댓글로 여러분의 생각을 공유해주세요!</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>자주 묻는 질문 (FAQ)</b></span></h2>\n<p data-ke-size=\"size16\"><b>1. 구글 AI 울트라는 언제 한국에서 이용 가능한가요?</b></p>\n<p data-ke-size=\"size16\">구글은 현재 미국에서만 서비스를 제공하고 있으며, 추후 다른 국가로 확장 예정이라고만 밝혔습니다. 정확한 한국 출시 일정은 아직 공개되지 않았습니다.</p>\n<p data-ke-size=\"size16\"><b>2. 구글 AI 프로와 울트라의 가장 큰 차이점은 무엇인가요?</b></p>\n<p data-ke-size=\"size16\">가장 큰 차이점은 비오 3 모델 접근권, 30TB 스토리지, 유튜브 프리미엄 포함, 프로젝트 마리너 접근성 등이 있습니다. 또한 모든 서비스에서 최대 사용량 한도를 제공합니다.</p>\n<p data-ke-size=\"size16\"><b>3. 학생도 구글 AI 울트라를 할인받을 수 있나요?</b></p>\n<p data-ke-size=\"size16\">현재 구글은 특정 국가(미국, 일본, 브라질, 인도네시아, 영국)의 대학생들에게 구글 AI 프로를 무료로 제공하고 있지만, 울트라 플랜에 대한 학생 할인은 아직 발표되지 않았습니다.</p>\n<p data-ke-size=\"size16\"><b>4. 플로우(Flow)와a 위스크(Whisk)는 어떻게 다른가요?</b></p>\n<p data-ke-size=\"size16\">플로우는 영화적 영상 제작에 초점을 맞춘 도구인 반면, 위스크는 일반적인 아이디어 시각화와 이미지를 짧은 애니메이션으로 변환하는 데 중점을 둡니다.</p>\n<p data-ke-size=\"size16\"><b>5. 30TB 스토리지는 얼마나 많은 데이터를 저장할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">30TB는 약 6,000시간의 HD 영상이나 900만 장의 고해상도 사진, 또는 1,500만 개의 문서 파일을 저장할 수 있는 용량입니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"구글 AI 울트라는 언제 한국에서 이용 가능한가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"구글은 현재 미국에서만 서비스를 제공하고 있으며, 추후 다른 국가로 확장 예정이라고만 밝혔습니다. 정확한 한국 출시 일정은 아직 공개되지 않았습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"구글 AI 프로와 울트라의 가장 큰 차이점은 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"가장 큰 차이점은 비오 3 모델 접근권, 30TB 스토리지, 유튜브 프리미엄 포함, 프로젝트 마리너 접근성 등이 있습니다. 또한 모든 서비스에서 최대 사용량 한도를 제공합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"학생도 구글 AI 울트라를 할인받을 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"현재 구글은 특정 국가(미국, 일본, 브라질, 인도네시아, 영국)의 대학생들에게 구글 AI 프로를 무료로 제공하고 있지만, 울트라 플랜에 대한 학생 할인은 아직 발표되지 않았습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"플로우(Flow)와 위스크(Whisk)는 어떻게 다른가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"플로우는 영화적 영상 제작에 초점을 맞춘 도구인 반면, 위스크는 일반적인 아이디어 시각화와 이미지를 짧은 애니메이션으로 변환하는 데 중점을 둡니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"30TB 스토리지는 얼마나 많은 데이터를 저장할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"30TB는 약 6,000시간의 HD 영상이나 900만 장의 고해상도 사진, 또는 1,500만 개의 문서 파일을 저장할 수 있는 용량입니다.\"\n    }\n  }]\n}\n</script>",
        "contentSnippet": "구글 AI 울트라 최신 소식: 월 $249.99의 VIP급 AI 구독 서비스 총정리! 제미니 최고급 버전, 비오 3 얼리 액세스, 30TB 스토리지, 유튜브 프리미엄까지 한 번에. 영화 제작자와 개발자를 위한 구글의 혁신적 AI 플랜을 알아보세요.\n\n\n \n 아침에 일어나 뉴스를 확인하는데 눈을 의심했어요. 구글에서 또 신규 AI 서비스를 출시했다고? 어제만 해도 일반 프리미엄 플랜을 쓰고 있었는데, 갑자기 '울트라'라니... 솔직히 호기심이 막 솟았습니다. 이 새로운 서비스가 정말 월 25만원이 넘는 가치가 있을지, 특히 영상 제작이나 복잡한 연구를 자주 하는 분들에게 어떤 변화를 가져올지 궁금해서 바로 살펴봤어요.\n \n여러분도 최신 AI 기술에 관심이 있으신가요? 아니면 단순히 비싼 신규 서비스가 출시될 때마다 \"이게 왜 필요하지?\"라는 생각이 드시나요?\n \n구글 AI 울트라란 무엇인가?  \n구글 AI 울트라는 2025년 5월 20일 출시된 구글의 최상위 AI 구독 플랜입니다. 일단 이름부터가 '울트라'잖아요. 이름 그대로 구글 AI의 모든 최고급 기능과 최대 사용량, 그리고 최신 모델에 대한 우선 접근권을 제공하는 서비스예요.\n \n심릿 벤-야이르 구글 포토 및 구글 원 부사장은 \"영화 제작자, 개발자, 크리에이티브 전문가 또는 단순히 구글 AI의 최고 수준을 원하는 사용자를 위한 VIP 패스\"라고 소개했어요.\n \n현재 미국에서만 월 $249.99(약 34만원)에 제공되지만, 첫 3개월 동안 50% 할인 혜택이 있다고 하네요. 국내 출시 일정은 아직 공개되지 않았지만, 곧 다른 국가로도 확장될 예정이라고 합니다.\n \n구글 AI 울트라의 핵심 기능 및 혜택  \n제가 직접 구글 공식 블로그의 정보를 종합해서 가장 인상적인 기능들을 정리해봤어요:\n1. 제미니(Gemini) 최상위 버전\n딥 리서치: 기존 연구 기능보다 훨씬 더 깊은 수준의 분석 가능\n비오 2(Veo 2): 최첨단 비디오 생성 모델 접근 권한\n비오 3(Veo 3): 초기 접근 권한 제공(아직 정식 출시 안 됨)\n딥 싱크 2.5 Pro: 몇 주 내에 향상된 추론 모드 접근 권한 제공 예정\n2. 플로우(Flow) - 새로운 AI 영화 제작 도구\n구글 딥마인드의 가장 진보된 모델(비오, 이마젠, 제미니) 맞춤 설계\n직관적인 프롬프트로 영화적 클립, 장면, 일관된 내러티브 제작 가능\n1080p 비디오 생성, 고급 카메라 제어 기능\n비오 3 모델 얼리 액세스\n3. 위스크(Whisk) - 아이디어 시각화 도구\n텍스트와 이미지 프롬프트로 빠르게 아이디어 탐색 및 시각화\n위스크 애니메이트: 이미지를 비오 2 모델로 생생한 8초 비디오로 변환\n가장 높은 사용 한도 제공\n4. 노트북LM(NotebookLM)\n올해 말 가장 높은 사용 한도와 향상된 모델 기능 제공 예정\n학습, 교육, 프로젝트에 최적화\n5. 프로젝트 마리너(Project Mariner)\n에이전트 연구 프로토타입\n연구부터 예약, 구매까지 최대 10개 작업 동시 관리 가능\n단일 대시보드에서 모든 작업 관리\n6. 기타 통합 서비스\n제미니 인 크롬: 내일부터 크롬 브라우저 내에서 제미니 조기 액세스\n유튜브 프리미엄: 개인 유튜브 프리미엄 플랜 포함\n30TB 스토리지: 구글 포토, 드라이브, 지메일 전체에 걸쳐 대용량 저장공간\n \n구글 AI 프로와의 차이점 - 정말 가치가 있을까?  \n제가 가장 궁금했던 부분은 기존의 AI 프리미엄 플랜(이제 구글 AI 프로로 변경)과 비교했을 때 실제로 어떤 차이가 있는지였어요. 구글이 공개한 비교표를 분석해보니:\n기능\n구글 AI 프로\n구글 AI 울트라\n\n\n\n\n가격\n$19.99/월\n$249.99/월\n\n\n제미니\n제미니 Advanced\n최상위 제미니 경험\n\n\n플로우(Flow)\n비오 2 제한적 접근\n비오 3 포함 전체 기능\n\n\n위스크(Whisk)\n기본 기능\n최대 사용량 한도\n\n\n스토리지\n2TB\n30TB\n\n\n유튜브\n없음\n유튜브 프리미엄 포함\n\n\n프로젝트 마리너\n없음\n포함\n\n\n\n여기서 특히 주목할 점은 구글 AI 프로 사용자들도 추가 비용 없이 플로우 AI 영화 제작 기능 및 크롬에서의 제미니 조기 접근 권한이 제공된다는 거예요. 미국에서 먼저 시작해 다른 국가로 확대될 예정이라고 합니다.\n \n실제 활용 사례 - 누구에게 필요할까?  \n제 생각에 이 서비스는 아래와 같은 사용자들에게 특히 유용할 것 같아요:\n1. 프로페셔널 크리에이터 및 영화 제작자\n비오 3 모델과 플로우 도구를 활용한 고급 영상 제작이 가능합니다. 제가 영상 프로듀서 친구에게 물어보니, 간단한 프로젝트에서 포스트 프로덕션 시간을 50-60% 줄일 수 있을 것 같다고 하더라고요.\n2. 개발자 및 연구원\n딥 리서치와 딥 싱크 기능을 통해 복잡한 코딩 작업과 학술 연구에 활용할 수 있습니다. 특히 논문 작성이나 데이터 분석에 유용할 것 같아요.\n3. 비즈니스 전문가\n프로젝트 마리너를 통해 여러 작업을 동시에 관리하고 효율성을 극대화할 수 있습니다. 특히 많은 프로젝트를 동시에 진행하는 프리랜서나 창업자에게 유용하겠죠.\n4. 대용량 스토리지 필요 사용자\n30TB의 스토리지는 사진, 영상, 문서 등을 대량으로 저장하는 사용자에게 매력적인 옵션입니다. 특히 고해상도 영상 작업을 많이 하는 분들에게요.\n \n \n구글 AI 울트라의 한계와 고려사항 ⚠️\n하지만 모든 좋은 점에도 불구하고, 몇 가지 고려해야 할 사항이 있어요:\n높은 가격대: 월 $249.99는 개인 사용자에게는 부담스러운 가격입니다. 비즈니스나 전문가가 아니라면 비용 대비 효율성을 신중히 고려해야 해요.\n국가별 가용성: 현재 미국에서만 제공되며, 다른 국가 출시 일정은 불확실합니다. 한국에서는 언제 사용할 수 있을지 아직 미정이에요.\n인터넷 의존성: 대부분의 기능이 클라우드 기반이므로 안정적인 인터넷 연결이 필요합니다. 인터넷이 불안정한 환경에서는 활용도가 떨어질 수 있어요.\n학습 곡선: 다양한 고급 기능을 최대한 활용하려면 일정 수준의 학습이 필요합니다. 특히 플로우나 제미니의 고급 기능은 숙련도가 필요할 수 있어요.\n \n대학생을 위한 혜택 - 무료 AI 프로 접근  \n 흥미롭게도 구글은 일본, 브라질, 인도네시아, 영국의 대학생들에게도 학교 연도 동안 구글 AI 프로에 무료로 접근할 수 있는 혜택을 확대한다고 밝혔습니다. 이전에 미국 대학생들에게만 제공되었던 혜택이 더 많은 국가로 확대되는 것이죠.\n \n이런 교육 분야 지원은 미래 인재 육성과 AI 기술 보급에 중요한 역할을 할 것으로 보여요. 특히 딥 러닝이나 자연어 처리를 배우는 학생들에게는 실무적인 경험을 쌓을 수 있는 좋은 기회가 될 것 같습니다.\n\n\n마무리: 미래 AI의 방향성  \n구글 AI 울트라의 출시는 AI 기술의 대중화와 전문화가 동시에 진행되고 있음을 보여줍니다. 월 $19.99의 프로 플랜은 일반 사용자를 위한 것이라면, 월 $249.99의 울트라 플랜은 AI 기술을 직업이나 전문적인 작업에 적극 활용하는 사용자들을 위한 것으로 보여요.\n \n앞으로 AI 기술이 더욱 발전하면서 이런 서비스의 가격은 내려가고 기능은 더욱 강화될 것으로 기대됩니다. 지금 당장 울트라 플랜이 필요하지 않더라도, 이런 최신 기술들이 앞으로 어떻게 우리 일상과 업무를 변화시킬지 지켜보는 것도 흥미로울 것 같네요.\nAI 기술에 관심이 있거나 실제로 전문적인 작업에 활용해보고 싶으신 분들이라면, 3개월 50% 할인 혜택을 활용해 구글 AI 울트라를 시험해보는 것도 좋은 방법일 수 있겠습니다. 무엇보다 자신의 필요와 사용 패턴에 맞는 서비스를 선택하는 것이 중요하다고 생각해요.\n \n여러분은 어떻게 생각하시나요? 구글 AI 울트라 같은 고급 AI 서비스가 여러분의 일상이나 업무에 어떤 변화를 가져올 것 같나요? 댓글로 여러분의 생각을 공유해주세요!\n자주 묻는 질문 (FAQ)\n1. 구글 AI 울트라는 언제 한국에서 이용 가능한가요?\n구글은 현재 미국에서만 서비스를 제공하고 있으며, 추후 다른 국가로 확장 예정이라고만 밝혔습니다. 정확한 한국 출시 일정은 아직 공개되지 않았습니다.\n2. 구글 AI 프로와 울트라의 가장 큰 차이점은 무엇인가요?\n가장 큰 차이점은 비오 3 모델 접근권, 30TB 스토리지, 유튜브 프리미엄 포함, 프로젝트 마리너 접근성 등이 있습니다. 또한 모든 서비스에서 최대 사용량 한도를 제공합니다.\n3. 학생도 구글 AI 울트라를 할인받을 수 있나요?\n현재 구글은 특정 국가(미국, 일본, 브라질, 인도네시아, 영국)의 대학생들에게 구글 AI 프로를 무료로 제공하고 있지만, 울트라 플랜에 대한 학생 할인은 아직 발표되지 않았습니다.\n4. 플로우(Flow)와a 위스크(Whisk)는 어떻게 다른가요?\n플로우는 영화적 영상 제작에 초점을 맞춘 도구인 반면, 위스크는 일반적인 아이디어 시각화와 이미지를 짧은 애니메이션으로 변환하는 데 중점을 둡니다.\n5. 30TB 스토리지는 얼마나 많은 데이터를 저장할 수 있나요?\n30TB는 약 6,000시간의 HD 영상이나 900만 장의 고해상도 사진, 또는 1,500만 개의 문서 파일을 저장할 수 있는 용량입니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"구글 AI 울트라는 언제 한국에서 이용 가능한가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"구글은 현재 미국에서만 서비스를 제공하고 있으며, 추후 다른 국가로 확장 예정이라고만 밝혔습니다. 정확한 한국 출시 일정은 아직 공개되지 않았습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"구글 AI 프로와 울트라의 가장 큰 차이점은 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"가장 큰 차이점은 비오 3 모델 접근권, 30TB 스토리지, 유튜브 프리미엄 포함, 프로젝트 마리너 접근성 등이 있습니다. 또한 모든 서비스에서 최대 사용량 한도를 제공합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"학생도 구글 AI 울트라를 할인받을 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"현재 구글은 특정 국가(미국, 일본, 브라질, 인도네시아, 영국)의 대학생들에게 구글 AI 프로를 무료로 제공하고 있지만, 울트라 플랜에 대한 학생 할인은 아직 발표되지 않았습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"플로우(Flow)와 위스크(Whisk)는 어떻게 다른가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"플로우는 영화적 영상 제작에 초점을 맞춘 도구인 반면, 위스크는 일반적인 아이디어 시각화와 이미지를 짧은 애니메이션으로 변환하는 데 중점을 둡니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"30TB 스토리지는 얼마나 많은 데이터를 저장할 수 있나요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"30TB는 약 6,000시간의 HD 영상이나 900만 장의 고해상도 사진, 또는 1,500만 개의 문서 파일을 저장할 수 있는 용량입니다.\"\n    }\n  }]\n}",
        "guid": "http://muzbox.tistory.com/483596",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "30tb 스토리지",
          "ai 영화 제작",
          "구글 ai 울트라",
          "딥 리서치",
          "비오 3",
          "위스크",
          "유튜브 프리미엄",
          "제미니",
          "프로젝트 마리너",
          "플로우"
        ],
        "isoDate": "2025-05-21T07:14:48.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "단 5분 만에 SEO 최적화된 멋진 블로그 글 완성? Gemini Gem 지침 전격 공개!",
        "link": "http://muzbox.tistory.com/483588",
        "pubDate": "Sat, 17 May 2025 20:49:08 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483588#entry483588comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px;\">\n<p data-ke-size=\"size8\">&nbsp;</p>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\">&nbsp;블로그 글쓰기, 아직도 시간과 씨름하고 계신가요? SEO 최적화는 물론, 전문가 수준의 시각화까지! 이제 Gemini AI와 특별 제작된 Gem 지침으로 놀라운 변화를 경험하세요. 이 글 하나로 모든 것을 알려드립니다!</div>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/q0cAH/btsN105nXQ9/czZDUy7kKPHK1TE16ebVpK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/q0cAH/btsN105nXQ9/czZDUy7kKPHK1TE16ebVpK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/q0cAH/btsN105nXQ9/czZDUy7kKPHK1TE16ebVpK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fq0cAH%2FbtsN105nXQ9%2FczZDUy7kKPHK1TE16ebVpK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"단 5분 만에 SEO 최적화된 멋진 블로그 글 완성? Gemini Gem 지침 전격 공개!\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;혹시 블로그 포스팅 하나 만드는 데 얼마나 시간을 쏟고 계신가요? 좋은 콘텐츠를 만들고 싶은 마음은 굴뚝같지만, 막상 키보드 앞에 앉으면 아이디어 구상부터 자료 조사, 글쓰기, 이미지 편집, 그리고 가장 머리 아픈 SEO 최적화까지... 정말 만만치 않은 작업이죠. 저도 예전에는 글 하나 올리려면 몇 시간은 훌쩍 넘기기 일쑤였어요. 하지만 만약 이 모든 과정을 단 몇 분 만에, 그것도 전문가 수준으로 해낼 수 있다면 어떨 것 같으세요? 오늘은 바로 그 마법 같은 이야기를 해보려고 합니다! ✨</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 15px; text-align: center;\" data-ke-size=\"size16\">*&nbsp;본&nbsp;포스팅은&nbsp;지금&nbsp;소개하는&nbsp;&nbsp;<b>'SEO&nbsp;최적화&nbsp;시각화&nbsp;Gem&nbsp;지침'&nbsp;&nbsp;</b>를&nbsp;사용하여&nbsp;생성하였습니다. <br />&nbsp;&nbsp;자세한&nbsp;사용법은&nbsp;본문&nbsp;아래&nbsp;유튜브&nbsp;영상을&nbsp;참고하세요!</p>\n<p style=\"margin-bottom: 15px; text-align: center;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>Gemini AI와 'Gem 지침'이란 무엇일까요?  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">최근 구글에서 선보인 Gemini AI는 정말 놀라운 능력을 보여주고 있는데요, 특히 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">제미나이 2.5 플래시 모델</span>은 응답 속도도 빠르고, 무료 사용자도 충분한 컨텍스트 용량과 사용량을 제공해서 콘텐츠 제작에 아주 유용해요. 기존의 AI 도구들이 유료 구독을 해도 긴 글을 생성할 때 잘리거나, HTML 코드를 한 번에 만들기 어려웠던 점을 생각하면 정말 획기적이죠.</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">여기에 더해 'Gem 지침'(Gems)이라는 강력한 기능이 있는데요, 이건 마치 Gemini AI에게 특별한 임무를 부여하는 것과 같아요. 사용자가 원하는 특정 목적에 맞게 AI를 맞춤 설정해서, 해당 분야의 전문가처럼 똑똑하게 만들어주는 기능이랍니다!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>✨ 특별 제작! 'SEO 최적화 &amp; 시각화 Gem 지침' 무료 배포!  </b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">그래서 제가 직접 만들었습니다! 바로 <span style=\"background-color: #fffde7; padding: 2px 4px; border-radius: 3px;\">블로그 포스팅에 특화된 'SEO 최적화 &amp; 시각화 Gem 지침'</span>인데요, 이 지침을 Gemini AI에 적용하면 마치 전문 블로그 편집팀이 옆에서 도와주는 것처럼 퀄리티 높은 글을 순식간에 완성할 수 있어요. 더 놀라운 건, 이 강력한 Gem 지침을 여러분께 <b>완전 무료로 배포</b>한다는 사실!</p>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">이 Gem 지침의 주요 특징은 다음과 같아요:</p>\n<ul style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 5px;\"><b>자동 SEO 최적화:</b> 글의 주제에 맞춰 핵심 키워드를 자연스럽게 배치하고, 검색 엔진이 좋아하는 구조로 글을 작성해줘요. JSON-LD 스키마도 포함되어 있어 검색 결과 노출에 유리하답니다!</li>\n<li style=\"margin-bottom: 5px;\"><b>전문가 수준의 시각화:</b> 단순히 텍스트만 나열하는 것이 아니라, 가독성을 높이는 다양한 시각적 요소(예: 정보 박스, 표, 하이라이트, 요약 카드 등)를 자동으로 적용해줘요.</li>\n<li style=\"margin-bottom: 5px;\"><b>다섯 가지 컬러 테마:</b> 블로그 분위기나 개인 취향에 맞게 5가지 전문가 디자인의 컬러 테마 중 하나를 선택할 수 있어요. 오늘은 그중에서도 '블루-그레이' 테마를 적용한 예시를 보여드릴 거예요!</li>\n<li style=\"margin-bottom: 5px;\"><b>인터랙티브 요소 추가 가능:</b> 필요에 따라 계산기나 자가진단 테스트 같은 간단한 JavaScript 기반의 인터랙티브 요소도 요청할 수 있답니다.</li>\n<li style=\"margin-bottom: 5px;\"><b>시간 절약 &amp; 품질 향상:</b> 이 모든 과정을 통해 블로그 작성 시간을 획기적으로 줄이면서도, 콘텐츠의 질은 오히려 높일 수 있어요!</li>\n</ul>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>  알아두세요!</b><br />이 Gem 지침은 정보 제공형 콘텐츠(튜토리얼, 가이드, 설명서, 안내문 등)에 특히 효과적이에요. 물론, 창의적인 아이디어를 더하면 다양한 주제의 블로그 포스트에도 활용 가능하답니다!</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>  'SEO 최적화 &amp; 시각화 Gem 지침' 설정 방법 (초간단!)</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 그럼 이 멋진 Gem 지침을 어떻게 설정하는지 알아볼까요? 정말 간단하니 차근차근 따라 해 보세요.</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>Gem 지침 파일 다운로드:</b> 제가 제공하는 링크를 통해 Gem 지침 파일(txt)과 5가지 컬러 테마 샘플 파일들을 다운로드 받으세요. (실제 배포 시 여기에 다운로드 링크가 제공될 예정입니다!)</li>\n<li style=\"margin-bottom: 8px;\"><b>Gemini AI 접속 및 'Gem 탐색':</b> Gemini AI (gemini.google.com)에 접속한 후, 왼쪽 메뉴에서 'Gem 탐색'(또는 유사한 메뉴)을 클릭하세요.</li>\n<li style=\"margin-bottom: 8px;\"><b>새로운 Gem 만들기:</b> '새 Gem 만들기'(또는 '+') 버튼을 클릭합니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>Gem 이름 지정:</b> 생성할 Gem의 이름을 입력해주세요. 예를 들어 \"나만의 블로그 비서\"처럼요!</li>\n<li style=\"margin-bottom: 8px;\"><b>지침 붙여넣기:</b> 다운로드한 Gem 지침 파일(SEO 최적화 블로그 GEMS 지침.txt)의 내용을 복사해서 '요청사항' 입력란에 그대로 붙여넣으세요.</li>\n<li style=\"margin-bottom: 8px;\"><b>지식 파일 추가:</b> 함께 다운로드한 5가지 컬러 테마 샘플 파일들을 '지식' 에 '파일 첨부' 합니다. 이렇게 하면 Gem이 다양한 테마를 이해하고 적용할 수 있게 됩니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>저장하면 끝!:</b> 마지막으로 '저장' 또는 '만들기' 버튼을 누르면 여러분만의 강력한 블로그 작성 Gem이 탄생합니다! 정말 쉽죠?  </li>\n</ol>\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 8px; margin: 20px 0;\">\n<h3 style=\"font-size: 18px; color: #333; margin: 0 0 10px;\" data-ke-size=\"size23\">  잠깐! 컬러 테마 파일은 왜 필요할까요?</h3>\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">컬러 테마 샘플 파일들은 Gem AI가 각 테마의 색상 조합, 분위기, 스타일을 학습하는 데 사용돼요. 이 파일들을 '지식'으로 제공함으로써, 여러분이 특정 테마를 요청했을 때 AI가 해당 테마의 디자인 가이드라인에 맞춰 일관성 있고 아름다운 결과물을 생성할 수 있도록 돕는답니다.</p>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>  Gem 지침, 이렇게 활용해보세요! (활용팁 &amp; 주의사항)</b></h2>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">Gem 지침을 만들었다면, 이제 사용하는 일만 남았죠!</p>\n<ol style=\"margin: 0 0 15px 20px; padding: 0;\" data-ke-list-type=\"decimal\">\n<li style=\"margin-bottom: 8px;\"><b>주제 선정 및 키워드 리서치:</b> 글을 쓰기 전에 어떤 주제로 쓸지, 어떤 키워드를 포함할지 미리 생각해보세요. 주요 키워드를 2~3개 포함해서 요청하면 SEO에 더욱 효과적인 글을 얻을 수 있어요.</li>\n<li style=\"margin-bottom: 8px;\"><b>Gem 실행 및 주제 입력:</b> 만들어둔 Gem을 실행하고, 작성하고 싶은 블로그 포스트의 주제를 입력하세요. 예를 들어, \"건강한 아침을 위한 5가지 습관\"처럼요.</li>\n<li style=\"margin-bottom: 8px;\"><b>컬러 테마 선택:</b> Gem이 컬러 테마를 선택하라고 물어볼 거예요. 그때 원하는 테마 번호(예: 1번 블루-그레이)를 입력하면 됩니다.</li>\n<li style=\"margin-bottom: 8px;\"><b>결과 확인 및 수정:</b> 잠시 기다리면 HTML 코드로 된 블로그 포스트가 뚝딱 만들어질 거예요! 결과물을 바로 블로그에 붙여넣기 전에, CodePen 같은 HTML 미리보기 도구를 사용해서 디자인이나 내용에 수정할 부분은 없는지 확인하는 것이 좋아요.</li>\n</ol>\n<div style=\"background-color: #ffebee; border-left: 4px solid #f44336; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\"><b>⚠️ 주의하세요!</b><br />Gemini AI는 매우 뛰어나지만, 때로는 부정확하거나 어색한 내용을 생성할 수도 있어요. 특히 YMYL(Your Money Your Life)처럼 민감한 주제에 대해서는 반드시 생성된 내용을 꼼꼼히 검토하고, 필요한 경우 전문가의 도움을 받아 사실관계를 확인하는 것이 중요합니다.</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<div style=\"border-top: 1px dashed #ddd; margin: 30px 0;\">&nbsp;</div>\n<style>\n    .single-summary-card-container {\n        font-family: 'Noto Sans KR', sans-serif;\n        display: flex; \n        justify-content: center; \n        align-items: center; \n        padding: 20px 10px; \n        background-color: #f0f2f5; \n        margin: 20px 0;\n    }\n    .single-summary-card {\n        width: 100%; \n        max-width: 700px; /* 카드의 최대 너비 */\n        aspect-ratio: 16 / 9; \n        background-color: #ffffff;\n        border-radius: 12px;\n        box-shadow: 0 6px 18px rgba(0,0,0,0.12);\n        padding: 20px; \n        display: flex;\n        flex-direction: column; \n        overflow: hidden; \n        border: 1px solid #e0e0e0;\n    }\n    .single-summary-card .card-header {\n        display: flex;\n        align-items: center;\n        border-bottom: 2px solid #1a73e8;\n        padding-bottom: 10px; \n        margin-bottom: 10px; \n    }\n    .single-summary-card .card-header-icon {\n        font-size: 32px; /* 아이콘 크기 증가 */\n        color: #1a73e8; margin-right: 12px;\n    }\n    .single-summary-card .card-header h3 {\n        font-size: 24px; /* 헤더 제목 글꼴 크기 증가 */\n        color: #1a73e8;\n        margin: 0;\n        line-height: 1.3; font-weight: 700;\n    }\n    .single-summary-card .card-content {\n        flex-grow: 1; \n        display: flex; flex-direction: column;\n        justify-content: space-around; \n        font-size: 16px; /* 내용 글꼴 크기 증가 */\n        line-height: 1.6; color: #333;\n    }\n    .single-summary-card .card-content .section {\n        margin-bottom: 8px; /* 내용 섹션 간 간격 약간 증가 */\n    }\n    .single-summary-card .card-content strong {\n        color: #005cb2; font-weight: 600;\n    }\n    .single-summary-card .card-content .highlight {\n        background-color: #fffde7; padding: 2px 5px; /* 하이라이트 패딩 약간 조정 */\n        border-radius: 3px;\n        font-weight: bold; }\n    .single-summary-card .card-content .formula {\n        background-color: #e8f4fd;\n        padding: 5px 8px; /* 수식 패딩 약간 증가 */\n        border-radius: 4px;\n        font-size: 0.9em; /* 내용 글꼴 크기에 따라 상대적으로 조절됨 (16px * 0.9 = 14.4px) */\n        text-align: center; margin-top: 4px; /* 수식 상단 마진 약간 증가 */\n        color: #155724; }\n    .single-summary-card .card-footer {\n        font-size: 13px; /* 푸터 글꼴 크기 증가 */\n        color: #777;\n        text-align: center;\n        padding-top: 10px; /* 푸터 상단 패딩 약간 증가 */\n        border-top: 1px dashed #ddd;\n        margin-top: auto; }\n\n    /* 화면(또는 컨테이너) 너비가 480px 이하일 때 적용되는 스타일 (모바일 최적화) */\n    @media (max-width: 480px) {\n        .single-summary-card {\n            padding: 15px; }\n        .single-summary-card .card-header-icon {\n            font-size: 28px; /* 모바일에서 아이콘 크기 조정 */\n        }\n        .single-summary-card .card-header h3 {\n            font-size: 20px; /* 모바일에서 헤더 제목 글꼴 크기 조정 */\n        }\n        .single-summary-card .card-content {\n            font-size: 14px; /* 모바일에서 내용 글꼴 크기 조정 */\n            line-height: 1.55; }\n        .single-summary-card .card-content .section {\n            margin-bottom: 6px; /* 모바일에서 섹션 간 간격 조정 */\n        }\n         .single-summary-card .card-content .formula {\n            padding: 4px 6px; font-size: 0.9em; /* 14px * 0.9 = 12.6px */\n        }\n        .single-summary-card .card-footer {\n            font-size: 12px; /* 모바일에서 푸터 글꼴 크기 조정 */\n            padding-top: 8px; }\n    }\n    </style>\n<div class=\"single-summary-card-container\">\n<div class=\"single-summary-card\">\n<div class=\"card-header\"><span class=\"card-header-icon\"> </span>\n<h3 data-ke-size=\"size23\">'SEO &amp; 시각화 Gem 지침' 핵심 요약</h3>\n</div>\n<div class=\"card-content\">\n<div class=\"section\"><b>✨ Gem 지침이란?:</b> Gemini AI를 <span class=\"highlight\">특정 목적에 맞게 최적화</span>하는 맞춤 설정 기능!</div>\n<div class=\"section\"><b>  무료 배포 혜택:</b> SEO 최적화, 전문가급 시각화, 5가지 컬러 테마, 시간 절약까지!</div>\n<div class=\"section\"><b> ️ 초간단 설정:</b> 제공된 지침/샘플 파일 다운로드 후 Gem에 <span class=\"highlight\">복사 &amp; 붙여넣기</span>하면 끝!</div>\n<div class=\"section\"><b>  똑똑한 활용법:</b> 주제 선정 &rarr; Gem 실행 &rarr; 테마 선택 &rarr; <span class=\"highlight\">결과 확인 및 최종 검토!</span></div>\n</div>\n<div class=\"card-footer\">지금 바로 Gem 지침을 활용해 블로그 콘텐츠 제작의 신세계를 경험하세요!</div>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>자주 묻는 질문 ❓</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 이 Gem 지침은 어떤 블로그 플랫폼에서 사용할 수 있나요?</div>\n<div style=\"padding-left: 15px;\">A: Gem 지침은 HTML 코드를 생성해주기 때문에, 티스토리, 워드프레스 등 대부분의 HTML 편집을 지원하는 블로그 플랫폼에서 사용 가능합니다.</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 코딩을 전혀 모르는데 사용하기 어렵지 않을까요?</div>\n<div style=\"padding-left: 15px;\">A: 전혀요! Gem 지침 설정은 단순히 텍스트 파일을 복사해서 붙여넣는 수준이며, 생성된 HTML 코드도 전체 복사해서 블로그 글쓰기 창의 HTML 모드에 붙여넣기만 하면 됩니다. 코딩 지식 없이도 충분히 활용 가능해요.  </div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: Gem 지침을 사용하면 무조건 상위 노출이 되나요?</div>\n<div style=\"padding-left: 15px;\">A: SEO(검색 엔진 최적화)는 매우 복잡하고 다양한 요인이 작용합니다. 이 Gem 지침은 기술적인 SEO 요소(키워드 배치, 구조화된 데이터 등)를 상당 부분 자동화해주어 검색 결과에 긍정적인 영향을 줄 수 있지만, 콘텐츠의 질, 독창성, 다른 웹사이트의 링크 등 다른 중요한 요소들도 함께 관리되어야 합니다. 꾸준히 양질의 콘텐츠를 발행하는 것이 가장 중요해요!</div>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\">Q: 제공되는 5가지 컬러 테마 외에 다른 디자인을 사용하고 싶으면 어떻게 하나요?</div>\n<div style=\"padding-left: 15px;\">A: 물론입니다! 제공되는 Gem 지침과 컬러 테마 샘플 파일을 참고하여 CSS 스타일 코드를 직접 수정하시면 자신만의 독창적인 디자인을 만들 수 있습니다. HTML과 CSS에 대한 약간의 지식이 있다면 더욱 다양한 시도를 해볼 수 있겠죠?</div>\n</div>\n</div>\n<p style=\"margin-bottom: 15px;\" data-ke-size=\"size16\">자, 어떠셨나요? 이제 여러분도 Gemini AI와 제가 제공하는 'SEO 최적화 &amp; 시각화 Gem 지침'을 활용해서 블로그 콘텐츠 제작의 효율성과 품질을 한 단계 끌어올릴 수 있습니다! 앞으로 이 Gem 지침이 여러분의 성공적인 블로그 운영에 큰 도움이 되기를 바랍니다. 더 궁금한 점이 있으시거나 Gem 지침 파일이 필요하시면 언제든지 댓글로 문의해주세요!  </p>\n<script type=\"application/ld+json\">\n    {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n            {\n                \"@type\": \"Question\",\n                \"name\": \"이 Gem 지침은 어떤 블로그 플랫폼에서 사용할 수 있나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  Gem 지침은 HTML 코드를 생성해주기 때문에, 티스토리, 워드프레스 등 대부분의 HTML 편집을 지원하는 블로그 플랫폼에서 사용 가능합니다.\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"코딩을 전혀 모르는데 사용하기 어렵지 않을까요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  전혀요! Gem 지침 설정은 단순히 텍스트 파일을 복사해서 붙여넣는 수준이며, 생성된 HTML 코드도 전체 복사해서 블로그 글쓰기 창의 HTML 모드에 붙여넣기만 하면 됩니다. 코딩 지식 없이도 충분히 활용 가능해요.  \"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"Gem 지침을 사용하면 무조건 상위 노출이 되나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  SEO(검색 엔진 최적화)는 매우 복잡하고 다양한 요인이 작용합니다. 이 Gem 지침은 기술적인 SEO 요소(키워드 배치, 구조화된 데이터 등)를 상당 부분 자동화해주어 검색 결과에 긍정적인 영향을 줄 수 있지만, 콘텐츠의 질, 독창성, 다른 웹사이트의 링크 등 다른 중요한 요소들도 함께 관리되어야 합니다. 꾸준히 양질의 콘텐츠를 발행하는 것이 가장 중요해요!\"\n                }\n            },\n            {\n                \"@type\": \"Question\",\n                \"name\": \"제공되는 5가지 컬러 테마 외에 다른 디자인을 사용하고 싶으면 어떻게 하나요?\",\n                \"acceptedAnswer\": {\n                    \"@type\": \"Answer\",\n                    \"text\": \"  물론입니다! 제공되는 Gem 지침과 컬러 테마 샘플 파일을 참고하여 CSS 스타일 코드를 직접 수정하시면 자신만의 독창적인 디자인을 만들 수 있습니다. HTML과 CSS에 대한 약간의 지식이 있다면 더욱 다양한 시도를 해볼 수 있겠죠?\"\n                }\n            }\n        ]\n    }\n    </script>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>지침 다운로드</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">&nbsp;</div>\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\"><figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/edxB44/btsN21WFIHA/kPzrUc7njb2H5h50r6RlEk/SEO%20%EC%B5%9C%EC%A0%81%ED%99%94%20%EB%B8%94%EB%A1%9C%EA%B7%B8%20GEMS%20%EC%A7%80%EC%B9%A8.zip?attach=1&amp;knm=tfile.zip\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">SEO 최적화 블로그 GEMS 지침.zip</span></div>\n<div class=\"size\">0.03MB</div>\n</div>\n  </a></figure>\n</div>\n</div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=wKQJJWRTrL4\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bba5kh/hyYTigNdjF/wrDafRawM4D2GQSoq30rn0/img.jpg?width=1280&amp;height=720&amp;face=382_134_530_294,https://scrap.kakaocdn.net/dn/jBwa2/hyYU25pe9z/1A2NP4u41uGylRCtEtl2xk/img.jpg?width=1280&amp;height=720&amp;face=382_134_530_294\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"AI로 블로그 글쓰기 끝판왕 등장! 초고속에 무료라니! GEMINI 활용법\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/wKQJJWRTrL4\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: #1a73e8; margin: 30px 0 15px; padding-bottom: 8px; border-bottom: 2px solid #eaeaea;\" data-ke-size=\"size26\"><b>티스토리에 인터렉티브 요소 추가시 작동오류 해결방법</b></h2>\n<div style=\"margin: 30px 0;\">\n<div style=\"margin-bottom: 20px;\">\n<div style=\"font-weight: bold; margin-bottom: 5px;\"><span style=\"background-color: #ffffff; color: #0f0f0f; text-align: start;\">티스토리는 보안상 이유로 기본 모드에서 script 태그를 자동으로 삭제하거나 비활성화합니다. (제가 알려드린 GEM 의 문제가 아닙니다.) 걱정마세요. 방법은 있습니다. 블로그 기사에 계산기 같은 자바스크립트가 있으면... HTML 모드에서만 작업하시고... 바로 발생하면 됩니다. 기본모드로 가지 마시고....</span></div>\n<div style=\"font-weight: bold; margin-bottom: 5px;\">&nbsp;</div>\n<div style=\"font-weight: bold; margin-bottom: 5px;\"><span style=\"background-color: #ffffff; color: #0f0f0f; text-align: start;\">아래 영상을 보시면 바로 해결!!</span></div>\n</div>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/455242506\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/k99EA/hyYU1y2vUS/AMjNu56TrLVDxqXB5vIhZk/img.jpg?width=1920&amp;height=1034&amp;face=0_0_1920_1034,https://scrap.kakaocdn.net/dn/dy8GF8/hyYU5alI6u/11418ygi9A9yAadLCvKYKK/img.jpg?width=1920&amp;height=1034&amp;face=0_0_1920_1034\" data-video-width=\"860\" data-video-height=\"463\" data-video-origin-width=\"860\" data-video-origin-height=\"463\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"'어떤오후의 프리웨어 이야기 (유용한 IT정보)'에서 업로드한 동영상\" data-video-play-service=\"daum_tistory\" data-original-url=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/455242506?service=daum_tistory\" width=\"860\" height=\"463\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n</div>",
        "contentSnippet": "블로그 글쓰기, 아직도 시간과 씨름하고 계신가요? SEO 최적화는 물론, 전문가 수준의 시각화까지! 이제 Gemini AI와 특별 제작된 Gem 지침으로 놀라운 변화를 경험하세요. 이 글 하나로 모든 것을 알려드립니다!\n\n\n \n 혹시 블로그 포스팅 하나 만드는 데 얼마나 시간을 쏟고 계신가요? 좋은 콘텐츠를 만들고 싶은 마음은 굴뚝같지만, 막상 키보드 앞에 앉으면 아이디어 구상부터 자료 조사, 글쓰기, 이미지 편집, 그리고 가장 머리 아픈 SEO 최적화까지... 정말 만만치 않은 작업이죠. 저도 예전에는 글 하나 올리려면 몇 시간은 훌쩍 넘기기 일쑤였어요. 하지만 만약 이 모든 과정을 단 몇 분 만에, 그것도 전문가 수준으로 해낼 수 있다면 어떨 것 같으세요? 오늘은 바로 그 마법 같은 이야기를 해보려고 합니다! ✨\n \n* 본 포스팅은 지금 소개하는  'SEO 최적화 시각화 Gem 지침'  를 사용하여 생성하였습니다. \n  자세한 사용법은 본문 아래 유튜브 영상을 참고하세요!\n \nGemini AI와 'Gem 지침'이란 무엇일까요?  \n최근 구글에서 선보인 Gemini AI는 정말 놀라운 능력을 보여주고 있는데요, 특히 제미나이 2.5 플래시 모델은 응답 속도도 빠르고, 무료 사용자도 충분한 컨텍스트 용량과 사용량을 제공해서 콘텐츠 제작에 아주 유용해요. 기존의 AI 도구들이 유료 구독을 해도 긴 글을 생성할 때 잘리거나, HTML 코드를 한 번에 만들기 어려웠던 점을 생각하면 정말 획기적이죠.\n여기에 더해 'Gem 지침'(Gems)이라는 강력한 기능이 있는데요, 이건 마치 Gemini AI에게 특별한 임무를 부여하는 것과 같아요. 사용자가 원하는 특정 목적에 맞게 AI를 맞춤 설정해서, 해당 분야의 전문가처럼 똑똑하게 만들어주는 기능이랍니다!\n \n✨ 특별 제작! 'SEO 최적화 & 시각화 Gem 지침' 무료 배포!  \n그래서 제가 직접 만들었습니다! 바로 블로그 포스팅에 특화된 'SEO 최적화 & 시각화 Gem 지침'인데요, 이 지침을 Gemini AI에 적용하면 마치 전문 블로그 편집팀이 옆에서 도와주는 것처럼 퀄리티 높은 글을 순식간에 완성할 수 있어요. 더 놀라운 건, 이 강력한 Gem 지침을 여러분께 완전 무료로 배포한다는 사실!\n이 Gem 지침의 주요 특징은 다음과 같아요:\n자동 SEO 최적화: 글의 주제에 맞춰 핵심 키워드를 자연스럽게 배치하고, 검색 엔진이 좋아하는 구조로 글을 작성해줘요. JSON-LD 스키마도 포함되어 있어 검색 결과 노출에 유리하답니다!\n전문가 수준의 시각화: 단순히 텍스트만 나열하는 것이 아니라, 가독성을 높이는 다양한 시각적 요소(예: 정보 박스, 표, 하이라이트, 요약 카드 등)를 자동으로 적용해줘요.\n다섯 가지 컬러 테마: 블로그 분위기나 개인 취향에 맞게 5가지 전문가 디자인의 컬러 테마 중 하나를 선택할 수 있어요. 오늘은 그중에서도 '블루-그레이' 테마를 적용한 예시를 보여드릴 거예요!\n인터랙티브 요소 추가 가능: 필요에 따라 계산기나 자가진단 테스트 같은 간단한 JavaScript 기반의 인터랙티브 요소도 요청할 수 있답니다.\n시간 절약 & 품질 향상: 이 모든 과정을 통해 블로그 작성 시간을 획기적으로 줄이면서도, 콘텐츠의 질은 오히려 높일 수 있어요!\n  알아두세요!\n이 Gem 지침은 정보 제공형 콘텐츠(튜토리얼, 가이드, 설명서, 안내문 등)에 특히 효과적이에요. 물론, 창의적인 아이디어를 더하면 다양한 주제의 블로그 포스트에도 활용 가능하답니다!\n \n  'SEO 최적화 & 시각화 Gem 지침' 설정 방법 (초간단!)\n자, 그럼 이 멋진 Gem 지침을 어떻게 설정하는지 알아볼까요? 정말 간단하니 차근차근 따라 해 보세요.\nGem 지침 파일 다운로드: 제가 제공하는 링크를 통해 Gem 지침 파일(txt)과 5가지 컬러 테마 샘플 파일들을 다운로드 받으세요. (실제 배포 시 여기에 다운로드 링크가 제공될 예정입니다!)\nGemini AI 접속 및 'Gem 탐색': Gemini AI (gemini.google.com)에 접속한 후, 왼쪽 메뉴에서 'Gem 탐색'(또는 유사한 메뉴)을 클릭하세요.\n새로운 Gem 만들기: '새 Gem 만들기'(또는 '+') 버튼을 클릭합니다.\nGem 이름 지정: 생성할 Gem의 이름을 입력해주세요. 예를 들어 \"나만의 블로그 비서\"처럼요!\n지침 붙여넣기: 다운로드한 Gem 지침 파일(SEO 최적화 블로그 GEMS 지침.txt)의 내용을 복사해서 '요청사항' 입력란에 그대로 붙여넣으세요.\n지식 파일 추가: 함께 다운로드한 5가지 컬러 테마 샘플 파일들을 '지식' 에 '파일 첨부' 합니다. 이렇게 하면 Gem이 다양한 테마를 이해하고 적용할 수 있게 됩니다.\n저장하면 끝!: 마지막으로 '저장' 또는 '만들기' 버튼을 누르면 여러분만의 강력한 블로그 작성 Gem이 탄생합니다! 정말 쉽죠?  \n  잠깐! 컬러 테마 파일은 왜 필요할까요?\n컬러 테마 샘플 파일들은 Gem AI가 각 테마의 색상 조합, 분위기, 스타일을 학습하는 데 사용돼요. 이 파일들을 '지식'으로 제공함으로써, 여러분이 특정 테마를 요청했을 때 AI가 해당 테마의 디자인 가이드라인에 맞춰 일관성 있고 아름다운 결과물을 생성할 수 있도록 돕는답니다.\n \n  Gem 지침, 이렇게 활용해보세요! (활용팁 & 주의사항)\nGem 지침을 만들었다면, 이제 사용하는 일만 남았죠!\n주제 선정 및 키워드 리서치: 글을 쓰기 전에 어떤 주제로 쓸지, 어떤 키워드를 포함할지 미리 생각해보세요. 주요 키워드를 2~3개 포함해서 요청하면 SEO에 더욱 효과적인 글을 얻을 수 있어요.\nGem 실행 및 주제 입력: 만들어둔 Gem을 실행하고, 작성하고 싶은 블로그 포스트의 주제를 입력하세요. 예를 들어, \"건강한 아침을 위한 5가지 습관\"처럼요.\n컬러 테마 선택: Gem이 컬러 테마를 선택하라고 물어볼 거예요. 그때 원하는 테마 번호(예: 1번 블루-그레이)를 입력하면 됩니다.\n결과 확인 및 수정: 잠시 기다리면 HTML 코드로 된 블로그 포스트가 뚝딱 만들어질 거예요! 결과물을 바로 블로그에 붙여넣기 전에, CodePen 같은 HTML 미리보기 도구를 사용해서 디자인이나 내용에 수정할 부분은 없는지 확인하는 것이 좋아요.\n⚠️ 주의하세요!\nGemini AI는 매우 뛰어나지만, 때로는 부정확하거나 어색한 내용을 생성할 수도 있어요. 특히 YMYL(Your Money Your Life)처럼 민감한 주제에 대해서는 반드시 생성된 내용을 꼼꼼히 검토하고, 필요한 경우 전문가의 도움을 받아 사실관계를 확인하는 것이 중요합니다.\n \n \n \n'SEO & 시각화 Gem 지침' 핵심 요약\n✨ Gem 지침이란?: Gemini AI를 특정 목적에 맞게 최적화하는 맞춤 설정 기능!\n  무료 배포 혜택: SEO 최적화, 전문가급 시각화, 5가지 컬러 테마, 시간 절약까지!\n ️ 초간단 설정: 제공된 지침/샘플 파일 다운로드 후 Gem에 복사 & 붙여넣기하면 끝!\n  똑똑한 활용법: 주제 선정 → Gem 실행 → 테마 선택 → 결과 확인 및 최종 검토!\n지금 바로 Gem 지침을 활용해 블로그 콘텐츠 제작의 신세계를 경험하세요!\n자주 묻는 질문 ❓\nQ: 이 Gem 지침은 어떤 블로그 플랫폼에서 사용할 수 있나요?\nA: Gem 지침은 HTML 코드를 생성해주기 때문에, 티스토리, 워드프레스 등 대부분의 HTML 편집을 지원하는 블로그 플랫폼에서 사용 가능합니다.\nQ: 코딩을 전혀 모르는데 사용하기 어렵지 않을까요?\nA: 전혀요! Gem 지침 설정은 단순히 텍스트 파일을 복사해서 붙여넣는 수준이며, 생성된 HTML 코드도 전체 복사해서 블로그 글쓰기 창의 HTML 모드에 붙여넣기만 하면 됩니다. 코딩 지식 없이도 충분히 활용 가능해요.  \nQ: Gem 지침을 사용하면 무조건 상위 노출이 되나요?\nA: SEO(검색 엔진 최적화)는 매우 복잡하고 다양한 요인이 작용합니다. 이 Gem 지침은 기술적인 SEO 요소(키워드 배치, 구조화된 데이터 등)를 상당 부분 자동화해주어 검색 결과에 긍정적인 영향을 줄 수 있지만, 콘텐츠의 질, 독창성, 다른 웹사이트의 링크 등 다른 중요한 요소들도 함께 관리되어야 합니다. 꾸준히 양질의 콘텐츠를 발행하는 것이 가장 중요해요!\nQ: 제공되는 5가지 컬러 테마 외에 다른 디자인을 사용하고 싶으면 어떻게 하나요?\nA: 물론입니다! 제공되는 Gem 지침과 컬러 테마 샘플 파일을 참고하여 CSS 스타일 코드를 직접 수정하시면 자신만의 독창적인 디자인을 만들 수 있습니다. HTML과 CSS에 대한 약간의 지식이 있다면 더욱 다양한 시도를 해볼 수 있겠죠?\n자, 어떠셨나요? 이제 여러분도 Gemini AI와 제가 제공하는 'SEO 최적화 & 시각화 Gem 지침'을 활용해서 블로그 콘텐츠 제작의 효율성과 품질을 한 단계 끌어올릴 수 있습니다! 앞으로 이 Gem 지침이 여러분의 성공적인 블로그 운영에 큰 도움이 되기를 바랍니다. 더 궁금한 점이 있으시거나 Gem 지침 파일이 필요하시면 언제든지 댓글로 문의해주세요!  \n \n지침 다운로드\n \n\n    \n\n    \nSEO 최적화 블로그 GEMS 지침.zip\n0.03MB\n\n\n\n\n \n\n\n\n \n \n티스토리에 인터렉티브 요소 추가시 작동오류 해결방법\n티스토리는 보안상 이유로 기본 모드에서 script 태그를 자동으로 삭제하거나 비활성화합니다. (제가 알려드린 GEM 의 문제가 아닙니다.) 걱정마세요. 방법은 있습니다. 블로그 기사에 계산기 같은 자바스크립트가 있으면... HTML 모드에서만 작업하시고... 바로 발생하면 됩니다. 기본모드로 가지 마시고....\n \n아래 영상을 보시면 바로 해결!!",
        "guid": "http://muzbox.tistory.com/483588",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "AI 블로깅",
          "gem 지침",
          "Gemini",
          "html 생성",
          "SEO 최적화",
          "무료 ai",
          "블로그 글쓰기",
          "블로그 자동화",
          "시각화",
          "콘텐츠 생성 ai"
        ],
        "isoDate": "2025-05-17T11:49:08.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "퍼플렉시티 프롬프트 마스터로 정보 검색 시간 절반으로 줄이기 (무료 E-BOOK 배포)",
        "link": "http://muzbox.tistory.com/483585",
        "pubDate": "Thu, 15 May 2025 15:18:31 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483585#entry483585comment",
        "content": "<p data-ke-size=\"size16\">\"퍼플렉시티 AI 프롬프트 마스터\" E-BOOK으로 검색의 새 지평을 열고, 원하는 정보를 정확히 찾아내는 프롬프트 작성법의 모든 것을 무료로 배워보세요. 초보자부터 전문가까지 누구나 활용 가능합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1536\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/dqikbq/btsNYv5TlkC/ofBtZlNttOt99kvNnUdaB0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dqikbq/btsNYv5TlkC/ofBtZlNttOt99kvNnUdaB0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dqikbq/btsNYv5TlkC/ofBtZlNttOt99kvNnUdaB0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdqikbq%2FbtsNYv5TlkC%2FofBtZlNttOt99kvNnUdaB0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"퍼플렉시티 프롬프트 마스터로 정보 검색 시간 절반으로 줄이기\" loading=\"lazy\" width=\"1536\" height=\"1024\" data-origin-width=\"1536\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">평소 AI 기술과 검색 최적화에 관심이 많았습니다. 특히 퍼플렉시티 AI를 사용하면서 그 잠재력에 놀랐지만, 동시에 이를 제대로 활용하는 방법에 대한 체계적인 안내서가 부족하다는 점이 아쉬웠어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">수많은 시행착오를 거치며 프롬프트 작성 기술을 연구하고, 다양한 기능들을 탐색하면서 축적된 노하우를 정리해 \"퍼플렉시티 AI 프롬프트 마스터\" E-BOOK을 만들었습니다. 이 지식을 공유함으로써 더 많은 분들이 정보 검색의 효율성을 높이고, 퍼플렉시티 AI의 진정한 가치를 경험하셨으면 하는 바람이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>E-BOOK에서 다루는 핵심 내용</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 퍼플렉시티 AI의 강력한 기능들</span></h3>\n<p data-ke-size=\"size16\">퍼플렉시티(<a href=\"https://www.perplexity.ai/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.perplexity.ai/</a>)는 단순한 검색엔진이 아닙니다. AI 챗봇의 대화 능력과 실시간 검색 엔진의 정보 수집 능력이 결합된 혁신적인 도구죠. 이 E-BOOK에서는 기존 검색 엔진과의 명확한 차이점을 설명하고, 이 차이를 활용하는 방법을 알려드립니다.</p>\n<p data-ke-size=\"size16\">특히 '집중 모드(Focus Modes)'는 검색 경험을 완전히 바꿔놓는 기능입니다. 학술 연구에는 학술 집중 모드, 소셜 미디어 반응 조사에는 레딧이나 소셜 미디어 집중 모드를 활용하면 검색 결과의 질이 확연히 달라집니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 명확한 지시와 맥락 제공의 중요성</span></h3>\n<p data-ke-size=\"size16\">프롬프트 작성의 가장 중요한 원칙 중 하나는 명확한 지시와 충분한 맥락 제공입니다. 예를 들어, \"AI에 대해 알려줘\"라고 물으면 너무 광범위해서 유용한 정보를 얻기 어렵죠. 하지만 \"최근 3년간 주목받은 생성형 AI 기술의 주요 발전 사항과, 이러한 기술이 실제 비즈니스 환경에 적용된 구체적인 사례 3가지를 설명해줘\"라고 하면 훨씬 정확하고 유용한 답변을 받을 수 있습니다.</p>\n<p data-ke-size=\"size16\">이 E-BOOK에서는 다양한 예시와 함께 효과적인 프롬프트 작성 원칙을 단계별로 설명합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 출력 형식 지정으로 정보 활용도 높이기</span></h3>\n<p data-ke-size=\"size16\">정보를 어떤 형태로 받고 싶은지 명시하는 것도 중요합니다. 표, 목록, 단계별 지침, 코드 블록 등 원하는 형식을 지정하면 답변의 가독성과 활용도가 크게 높아집니다. 비즈니스 보고서 작성이나 데이터 분석, 프로젝트 기획 등에서 이 기술이 특히 유용합니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">4. 실전 프롬프트 템플릿 50가지</span></h3>\n<p data-ke-size=\"size16\">이 E-BOOK의 핵심은 다양한 상황별 프롬프트 템플릿 50개입니다. 일상생활, 학습 및 연구, 업무 및 비즈니스, 콘텐츠 제작, 기술 및 코딩, 여행, 건강 등 분야별로 즉시 활용 가능한 프롬프트 예시를 제공합니다.</p>\n<p data-ke-size=\"size16\">각 템플릿은 실제 사용 환경에서 테스트되었으며, 필요에 따라 수정하여 사용할 수 있도록 설계되었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>퍼플렉시티 AI의 고급 기능 활용</b></span></h2>\n<p data-ke-size=\"size16\">E-BOOK에서 특별히 강조하는 부분은 퍼플렉시티의 고급 기능들입니다. '스페이스(Spaces)'와 '컬렉션(Collections)' 기능을 활용하면 정보 탐색과 지식 관리의 효율성이 크게 향상됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">'스페이스'는 특정 주제나 프로젝트에 대한 맞춤형 작업 공간을 생성하고, 관련 대화와 자료를 한 곳에 모아 관리할 수 있게 해줍니다. 예를 들어, 연구 프로젝트를 위한 전용 스페이스를 만들고 맞춤형 지침을 설정하면, 해당 주제에 특화된 정보 검색 환경을 구축할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">'컬렉션' 기능은 유용한 대화나 검색 결과를 주제별로 저장하고 분류하여, 필요할 때 쉽게 찾아볼 수 있게 해줍니다. 이는 지속적인 학습이나 장기 프로젝트에 특히 유용합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>프롬프트 최적화와 테스트 방법</b></span></h2>\n<p data-ke-size=\"size16\">효과적인 프롬프트 작성은 한 번에 완성되지 않습니다. 이 E-BOOK에서는 프롬프트를 체계적으로 테스트하고 최적화하는 방법을 상세히 안내합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">기본적인 프롬프트로 시작하여, 결과를 분석하고, 한 번에 한두 가지 요소만 변경하며 테스트하는 접근법을 제안합니다. 또한 \"나쁜\" 결과로부터 배우는 방법도 설명합니다. 기대에 미치지 못하는 답변이 나왔을 때, 그 원인을 분석하고 프롬프트를 개선하는 과정이 실력 향상의 열쇠입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>이 E-BOOK이 필요한 분들</b></span></h2>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>퍼플렉시티 AI를 처음 접하는 초보자부터 이미 사용 중인 중급자까지</li>\n<li>학술 연구나 논문 작성 시 효율적으로 자료를 찾고 싶은 학생과 연구자</li>\n<li>비즈니스 보고서, 시장 분석, 경쟁사 조사를 해야 하는 비즈니스 전문가</li>\n<li>블로그 글, 소설, 시나리오 등 창의적 콘텐츠를 만드는 크리에이터</li>\n<li>코딩, 개발, 기술 문서 작성 등에 도움이 필요한 개발자와 엔지니어</li>\n<li>일상에서 시간을 절약하고 더 정확한 정보를 얻고 싶은 모든 분들</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b><span style=\"color: #006dd7;\">E-BOOK을 만들며 느낀 점</span></b></h2>\n<p data-ke-size=\"size16\">이 E-BOOK을 작성하면서 가장 흥미로웠던 점은 퍼플렉시티 AI의 무한한 가능성을 발견하는 과정이었습니다. 단순한 검색 도구를 넘어, 제대로 활용하면 지식 탐색과 창출의 강력한 동반자가 될 수 있음을 경험했습니다.</p>\n<p data-ke-size=\"size16\">특히 프롬프트 작성 기술이 발전함에 따라 받는 정보의 질이 비약적으로 향상되는 것을 보며, 이 지식을 더 많은 분들과 공유하고 싶다는 생각이 강해졌습니다. 정보의 홍수 속에서 필요한 정보를 정확히 찾아내는 능력은 현대 사회에서 가장 중요한 스킬 중 하나이기 때문입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>무료로 만나보세요</b></span></h2>\n<p data-ke-size=\"size16\">이 E-BOOK을 통해 퍼플렉시티 AI의 잠재력을 최대한 활용하는 방법을 배우시고, 더 효율적으로 정보를 찾고, 시간을 절약하며, 더 나은 결과물을 만들어내시길 바랍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">정보 검색의 패러다임을 바꿀 준비가 되셨나요? 이 E-BOOK과 함께 퍼플렉시티 AI를 마스터하고, 정보의 바다를 더 스마트하게 항해해보세요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">[WEB 버전]</span></h3>\n<figure id=\"og_1747289399771\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"AI Prompt Engineering Guide\" data-og-description=\"Learn AI prompt engineering with this comprehensive guide and examples.\" data-og-host=\"e6jn2uzdvs.app.youware.com\" data-og-source-url=\"https://e6jn2uzdvs.app.youware.com/\" data-og-url=\"https://e6jn2uzdvs.app.youware.com/\" data-og-image=\"https://scrap.kakaocdn.net/dn/BNU3G/hyYRwfqgdW/3T8x3nk14U1hv5wgiiKcP0/img.jpg?width=800&amp;height=450&amp;face=0_0_800_450,https://scrap.kakaocdn.net/dn/c5vIWi/hyYVbHqzmg/30INGGRToc2vwWtwZz1dnK/img.jpg?width=800&amp;height=450&amp;face=0_0_800_450\"><a href=\"https://e6jn2uzdvs.app.youware.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://e6jn2uzdvs.app.youware.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/BNU3G/hyYRwfqgdW/3T8x3nk14U1hv5wgiiKcP0/img.jpg?width=800&amp;height=450&amp;face=0_0_800_450,https://scrap.kakaocdn.net/dn/c5vIWi/hyYVbHqzmg/30INGGRToc2vwWtwZz1dnK/img.jpg?width=800&amp;height=450&amp;face=0_0_800_450');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">AI Prompt Engineering Guide</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Learn AI prompt engineering with this comprehensive guide and examples.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">e6jn2uzdvs.app.youware.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">[PDF 버전]</span></h3>\n<p><figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/4uCcZ/btsNZaGGjIp/2vD9pg7HMS0h4eojSi160k/%ED%8D%BC%ED%94%8C%EB%A0%89%EC%8B%9C%ED%8B%B0%20AI%20%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8%20%EB%A7%88%EC%8A%A4%ED%84%B0.pdf?attach=1&amp;knm=tfile.pdf\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">퍼플렉시티 AI 프롬프트 마스터.pdf</span></div>\n<div class=\"size\">3.86MB</div>\n</div>\n  </a></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"955\" data-origin-height=\"576\"><span data-url=\"https://blog.kakaocdn.net/dn/emaJW8/btsNYJvYlCq/HMx8baezuOTxyq5JkDKRB1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/emaJW8/btsNYJvYlCq/HMx8baezuOTxyq5JkDKRB1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/emaJW8/btsNYJvYlCq/HMx8baezuOTxyq5JkDKRB1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FemaJW8%2FbtsNYJvYlCq%2FHMx8baezuOTxyq5JkDKRB1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"perplexity 프롬프트 마스터\" loading=\"lazy\" width=\"955\" height=\"576\" data-origin-width=\"955\" data-origin-height=\"576\"/></span></figure>\n</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>FAQ</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 퍼플렉시티 AI란 정확히 무엇인가요?</b><br />A: 퍼플렉시티 AI는 단순한 검색 엔진을 넘어 사용자의 질문 의도를 깊이 이해하고 실시간으로 웹을 검색해 관련성 높은 정보를 제공하는 지능형 답변 엔진입니다. AI 챗봇의 대화 능력과 검색 엔진의 정보 수집 능력이 결합되어 정보를 소비하고 활용하는 방식을 근본적으로 변화시킵니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 이 E-BOOK은 초보자도 이해할 수 있나요?</b><br />A: 네, 퍼플렉시티 AI의 기본 개념부터 시작하여 고급 테크닉까지 단계적으로 설명하고 있어 누구나 쉽게 따라할 수 있습니다. 명확한 예시와 실전 템플릿이 포함되어 있어 바로 활용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 실제 업무에 바로 적용할 수 있는 내용인가요?</b><br />A: 네, 학술 연구, 비즈니스 분석, 콘텐츠 제작, 코딩 등 다양한 분야의 실전 템플릿이 50개 포함되어 있습니다. 각 템플릿은 실제 사용 환경에서 테스트되었으며, 필요에 따라 수정하여 바로 활용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 무료 배포는 언제까지인가요?</b><br />A: 현재 한정된 기간 동안 무료로 제공하고 있습니다. 퍼플렉시티 AI 활용법을 더 많은 분들과 공유하기 위한 목적으로, 향후에는 유료로 전환될 수 있으니 서둘러 다운로드하시는 것이 좋습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 퍼플렉시티 AI 외에 다른 AI 도구에도 적용 가능한가요?</b><br />A: 기본적인 프롬프트 작성 원칙은 ChatGPT, Bard 등 다른 AI 도구에도 적용 가능합니다. 그러나 이 E-BOOK은 특별히 퍼플렉시티 AI의 고유 기능(집중 모드, 스페이스, 컬렉션 등)을 활용하는 방법에 중점을 두고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"퍼플렉시티 AI란 정확히 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"퍼플렉시티 AI는 단순한 검색 엔진을 넘어 사용자의 질문 의도를 깊이 이해하고 실시간으로 웹을 검색해 관련성 높은 정보를 제공하는 지능형 답변 엔진입니다. AI 챗봇의 대화 능력과 검색 엔진의 정보 수집 능력이 결합되어 정보를 소비하고 활용하는 방식을 근본적으로 변화시킵니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이 가이드는 초보자도 이해할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 퍼플렉시티 AI의 기본 개념부터 시작하여 고급 테크닉까지 단계적으로 설명하고 있어 누구나 쉽게 따라할 수 있습니다. 명확한 예시와 실전 템플릿이 포함되어 있어 바로 활용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"실제 업무에 바로 적용할 수 있는 내용인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 학술 연구, 비즈니스 분석, 콘텐츠 제작, 코딩 등 다양한 분야의 실전 템플릿이 50개 포함되어 있습니다. 각 템플릿은 실제 사용 환경에서 테스트되었으며, 필요에 따라 수정하여 바로 활용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 배포는 언제까지인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 한정된 기간 동안 무료로 제공하고 있습니다. 퍼플렉시티 AI 활용법을 더 많은 분들과 공유하기 위한 목적으로, 향후에는 유료로 전환될 수 있으니 서둘러 다운로드하시는 것이 좋습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"퍼플렉시티 AI 외에 다른 AI 도구에도 적용 가능한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"기본적인 프롬프트 작성 원칙은 ChatGPT, Bard 등 다른 AI 도구에도 적용 가능합니다. 그러나 이 가이드는 특별히 퍼플렉시티 AI의 고유 기능(집중 모드, 스페이스, 컬렉션 등)을 활용하는 방법에 중점을 두고 있습니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "\"퍼플렉시티 AI 프롬프트 마스터\" E-BOOK으로 검색의 새 지평을 열고, 원하는 정보를 정확히 찾아내는 프롬프트 작성법의 모든 것을 무료로 배워보세요. 초보자부터 전문가까지 누구나 활용 가능합니다.\n\n\n \n평소 AI 기술과 검색 최적화에 관심이 많았습니다. 특히 퍼플렉시티 AI를 사용하면서 그 잠재력에 놀랐지만, 동시에 이를 제대로 활용하는 방법에 대한 체계적인 안내서가 부족하다는 점이 아쉬웠어요.\n \n수많은 시행착오를 거치며 프롬프트 작성 기술을 연구하고, 다양한 기능들을 탐색하면서 축적된 노하우를 정리해 \"퍼플렉시티 AI 프롬프트 마스터\" E-BOOK을 만들었습니다. 이 지식을 공유함으로써 더 많은 분들이 정보 검색의 효율성을 높이고, 퍼플렉시티 AI의 진정한 가치를 경험하셨으면 하는 바람이 있습니다.\n \nE-BOOK에서 다루는 핵심 내용\n1. 퍼플렉시티 AI의 강력한 기능들\n퍼플렉시티(https://www.perplexity.ai/)는 단순한 검색엔진이 아닙니다. AI 챗봇의 대화 능력과 실시간 검색 엔진의 정보 수집 능력이 결합된 혁신적인 도구죠. 이 E-BOOK에서는 기존 검색 엔진과의 명확한 차이점을 설명하고, 이 차이를 활용하는 방법을 알려드립니다.\n특히 '집중 모드(Focus Modes)'는 검색 경험을 완전히 바꿔놓는 기능입니다. 학술 연구에는 학술 집중 모드, 소셜 미디어 반응 조사에는 레딧이나 소셜 미디어 집중 모드를 활용하면 검색 결과의 질이 확연히 달라집니다.\n2. 명확한 지시와 맥락 제공의 중요성\n프롬프트 작성의 가장 중요한 원칙 중 하나는 명확한 지시와 충분한 맥락 제공입니다. 예를 들어, \"AI에 대해 알려줘\"라고 물으면 너무 광범위해서 유용한 정보를 얻기 어렵죠. 하지만 \"최근 3년간 주목받은 생성형 AI 기술의 주요 발전 사항과, 이러한 기술이 실제 비즈니스 환경에 적용된 구체적인 사례 3가지를 설명해줘\"라고 하면 훨씬 정확하고 유용한 답변을 받을 수 있습니다.\n이 E-BOOK에서는 다양한 예시와 함께 효과적인 프롬프트 작성 원칙을 단계별로 설명합니다.\n3. 출력 형식 지정으로 정보 활용도 높이기\n정보를 어떤 형태로 받고 싶은지 명시하는 것도 중요합니다. 표, 목록, 단계별 지침, 코드 블록 등 원하는 형식을 지정하면 답변의 가독성과 활용도가 크게 높아집니다. 비즈니스 보고서 작성이나 데이터 분석, 프로젝트 기획 등에서 이 기술이 특히 유용합니다.\n4. 실전 프롬프트 템플릿 50가지\n이 E-BOOK의 핵심은 다양한 상황별 프롬프트 템플릿 50개입니다. 일상생활, 학습 및 연구, 업무 및 비즈니스, 콘텐츠 제작, 기술 및 코딩, 여행, 건강 등 분야별로 즉시 활용 가능한 프롬프트 예시를 제공합니다.\n각 템플릿은 실제 사용 환경에서 테스트되었으며, 필요에 따라 수정하여 사용할 수 있도록 설계되었습니다.\n \n퍼플렉시티 AI의 고급 기능 활용\nE-BOOK에서 특별히 강조하는 부분은 퍼플렉시티의 고급 기능들입니다. '스페이스(Spaces)'와 '컬렉션(Collections)' 기능을 활용하면 정보 탐색과 지식 관리의 효율성이 크게 향상됩니다.\n \n'스페이스'는 특정 주제나 프로젝트에 대한 맞춤형 작업 공간을 생성하고, 관련 대화와 자료를 한 곳에 모아 관리할 수 있게 해줍니다. 예를 들어, 연구 프로젝트를 위한 전용 스페이스를 만들고 맞춤형 지침을 설정하면, 해당 주제에 특화된 정보 검색 환경을 구축할 수 있습니다.\n \n'컬렉션' 기능은 유용한 대화나 검색 결과를 주제별로 저장하고 분류하여, 필요할 때 쉽게 찾아볼 수 있게 해줍니다. 이는 지속적인 학습이나 장기 프로젝트에 특히 유용합니다.\n \n프롬프트 최적화와 테스트 방법\n효과적인 프롬프트 작성은 한 번에 완성되지 않습니다. 이 E-BOOK에서는 프롬프트를 체계적으로 테스트하고 최적화하는 방법을 상세히 안내합니다.\n \n기본적인 프롬프트로 시작하여, 결과를 분석하고, 한 번에 한두 가지 요소만 변경하며 테스트하는 접근법을 제안합니다. 또한 \"나쁜\" 결과로부터 배우는 방법도 설명합니다. 기대에 미치지 못하는 답변이 나왔을 때, 그 원인을 분석하고 프롬프트를 개선하는 과정이 실력 향상의 열쇠입니다.\n \n이 E-BOOK이 필요한 분들\n퍼플렉시티 AI를 처음 접하는 초보자부터 이미 사용 중인 중급자까지\n학술 연구나 논문 작성 시 효율적으로 자료를 찾고 싶은 학생과 연구자\n비즈니스 보고서, 시장 분석, 경쟁사 조사를 해야 하는 비즈니스 전문가\n블로그 글, 소설, 시나리오 등 창의적 콘텐츠를 만드는 크리에이터\n코딩, 개발, 기술 문서 작성 등에 도움이 필요한 개발자와 엔지니어\n일상에서 시간을 절약하고 더 정확한 정보를 얻고 싶은 모든 분들\n \nE-BOOK을 만들며 느낀 점\n이 E-BOOK을 작성하면서 가장 흥미로웠던 점은 퍼플렉시티 AI의 무한한 가능성을 발견하는 과정이었습니다. 단순한 검색 도구를 넘어, 제대로 활용하면 지식 탐색과 창출의 강력한 동반자가 될 수 있음을 경험했습니다.\n특히 프롬프트 작성 기술이 발전함에 따라 받는 정보의 질이 비약적으로 향상되는 것을 보며, 이 지식을 더 많은 분들과 공유하고 싶다는 생각이 강해졌습니다. 정보의 홍수 속에서 필요한 정보를 정확히 찾아내는 능력은 현대 사회에서 가장 중요한 스킬 중 하나이기 때문입니다.\n \n무료로 만나보세요\n이 E-BOOK을 통해 퍼플렉시티 AI의 잠재력을 최대한 활용하는 방법을 배우시고, 더 효율적으로 정보를 찾고, 시간을 절약하며, 더 나은 결과물을 만들어내시길 바랍니다.\n \n정보 검색의 패러다임을 바꿀 준비가 되셨나요? 이 E-BOOK과 함께 퍼플렉시티 AI를 마스터하고, 정보의 바다를 더 스마트하게 항해해보세요!\n \n[WEB 버전]\n\n \nAI Prompt Engineering Guide\nLearn AI prompt engineering with this comprehensive guide and examples.\ne6jn2uzdvs.app.youware.com\n\n \n[PDF 버전]\n\n    \n\n    \n퍼플렉시티 AI 프롬프트 마스터.pdf\n3.86MB\n\n\n \n\n\n\nFAQ\nQ: 퍼플렉시티 AI란 정확히 무엇인가요?\nA: 퍼플렉시티 AI는 단순한 검색 엔진을 넘어 사용자의 질문 의도를 깊이 이해하고 실시간으로 웹을 검색해 관련성 높은 정보를 제공하는 지능형 답변 엔진입니다. AI 챗봇의 대화 능력과 검색 엔진의 정보 수집 능력이 결합되어 정보를 소비하고 활용하는 방식을 근본적으로 변화시킵니다.\nQ: 이 E-BOOK은 초보자도 이해할 수 있나요?\nA: 네, 퍼플렉시티 AI의 기본 개념부터 시작하여 고급 테크닉까지 단계적으로 설명하고 있어 누구나 쉽게 따라할 수 있습니다. 명확한 예시와 실전 템플릿이 포함되어 있어 바로 활용할 수 있습니다.\nQ: 실제 업무에 바로 적용할 수 있는 내용인가요?\nA: 네, 학술 연구, 비즈니스 분석, 콘텐츠 제작, 코딩 등 다양한 분야의 실전 템플릿이 50개 포함되어 있습니다. 각 템플릿은 실제 사용 환경에서 테스트되었으며, 필요에 따라 수정하여 바로 활용할 수 있습니다.\nQ: 무료 배포는 언제까지인가요?\nA: 현재 한정된 기간 동안 무료로 제공하고 있습니다. 퍼플렉시티 AI 활용법을 더 많은 분들과 공유하기 위한 목적으로, 향후에는 유료로 전환될 수 있으니 서둘러 다운로드하시는 것이 좋습니다.\nQ: 퍼플렉시티 AI 외에 다른 AI 도구에도 적용 가능한가요?\nA: 기본적인 프롬프트 작성 원칙은 ChatGPT, Bard 등 다른 AI 도구에도 적용 가능합니다. 그러나 이 E-BOOK은 특별히 퍼플렉시티 AI의 고유 기능(집중 모드, 스페이스, 컬렉션 등)을 활용하는 방법에 중점을 두고 있습니다.\n \n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"퍼플렉시티 AI란 정확히 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"퍼플렉시티 AI는 단순한 검색 엔진을 넘어 사용자의 질문 의도를 깊이 이해하고 실시간으로 웹을 검색해 관련성 높은 정보를 제공하는 지능형 답변 엔진입니다. AI 챗봇의 대화 능력과 검색 엔진의 정보 수집 능력이 결합되어 정보를 소비하고 활용하는 방식을 근본적으로 변화시킵니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이 가이드는 초보자도 이해할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 퍼플렉시티 AI의 기본 개념부터 시작하여 고급 테크닉까지 단계적으로 설명하고 있어 누구나 쉽게 따라할 수 있습니다. 명확한 예시와 실전 템플릿이 포함되어 있어 바로 활용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"실제 업무에 바로 적용할 수 있는 내용인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 학술 연구, 비즈니스 분석, 콘텐츠 제작, 코딩 등 다양한 분야의 실전 템플릿이 50개 포함되어 있습니다. 각 템플릿은 실제 사용 환경에서 테스트되었으며, 필요에 따라 수정하여 바로 활용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 배포는 언제까지인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 한정된 기간 동안 무료로 제공하고 있습니다. 퍼플렉시티 AI 활용법을 더 많은 분들과 공유하기 위한 목적으로, 향후에는 유료로 전환될 수 있으니 서둘러 다운로드하시는 것이 좋습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"퍼플렉시티 AI 외에 다른 AI 도구에도 적용 가능한가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"기본적인 프롬프트 작성 원칙은 ChatGPT, Bard 등 다른 AI 도구에도 적용 가능합니다. 그러나 이 가이드는 특별히 퍼플렉시티 AI의 고유 기능(집중 모드, 스페이스, 컬렉션 등)을 활용하는 방법에 중점을 두고 있습니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483585",
        "categories": [
          "AI, 미래기술/AI 검색 및 리서치 도구",
          "ai 활용 e-book",
          "검색 효율 향상",
          "무료 전자책",
          "정보 검색 최적화",
          "지능형 검색 도구",
          "퍼플렉시티 ai",
          "퍼플렉시티 고급 기능",
          "프롬프트 작성법",
          "프롬프트 최적화",
          "효율적 검색 기법"
        ],
        "isoDate": "2025-05-15T06:18:31.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": [
      {
        "creator": "늑돌이",
        "title": "초저렴 3500원 무선이어폰 투키(Toocki) TQ-EJ04, 쓸만할까?",
        "link": "http://lazion.com/2513745",
        "pubDate": "Mon, 19 May 2025 08:21:19 +0900",
        "author": "늑돌이",
        "comments": "http://lazion.com/2513745#entry2513745comment",
        "content": "<p data-ke-size=\"size16\">이제 전세계 제조업의 중심은 중국이다. 중국의 공장이 멈추면 인류 사회가 받는 타격이 클 것이라는 것에는 많은 분들이 동의하실 듯.<br /><br />그 바로 옆에 살고 있는 우리나라 또한 그 영향을 강하게 받고 있다. 특히 직구라는 형태로 다양한 제품이 우리나라 소비자들을 만났고, 가격 면에서의 충격은 상당했다. 최근에는 제조 기술 또한 발전하여 그 품질도 우습게 볼 수준은 아니다.<br /><br />그리고 귀마저 못 생겨 무선 이어폰의 탈출 시도가 잦은 바람에 잘 고정되는 무선 이어폰을 찾는 글쓴이에게 가성비 휴대폰 충전기 브랜드로 유명한 <b>투키(TOOCKI)</b>의 제품 하나가 눈에 띄었다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>3500원짜리 무선 이어폰 Toocki TQ-EJ04</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">늑돌이가 그 제품을 한번 사볼까 했던 이유는 단 하나. 가격이었다.</p>\n<p data-ke-size=\"size16\">알X 직구 사이트에서 <b>단돈 7000원에 투키는 이 TQ-EJ04 무선 이어폰 두개</b>를 살 수 있었다. <b>하나당 가격은 3500원 꼴</b>(당시 환율 기준. 지금은 더 싸다)이다. 물론 배송료 포함이고 일주일도 안 되어 무사히 도착했다. 빠르게 살펴보자.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"tq-ej04_11.jpg\" data-origin-width=\"1600\" data-origin-height=\"1600\"><span data-url=\"https://blog.kakaocdn.net/dn/bmbZ3H/btsN2pDwdZu/EAR7XBiZNzzq8ilSTsGm2K/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bmbZ3H/btsN2pDwdZu/EAR7XBiZNzzq8ilSTsGm2K/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bmbZ3H/btsN2pDwdZu/EAR7XBiZNzzq8ilSTsGm2K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbmbZ3H%2FbtsN2pDwdZu%2FEAR7XBiZNzzq8ilSTsGm2K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1600\" height=\"1600\" data-filename=\"tq-ej04_11.jpg\" data-origin-width=\"1600\" data-origin-height=\"1600\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>생각보다 괜찮은 만듦새</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"20250404_155827.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/bn62tR/btsN1qpQ7vh/bIp83qaJSvTCx2Wl9rSxyk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bn62tR/btsN1qpQ7vh/bIp83qaJSvTCx2Wl9rSxyk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bn62tR/btsN1qpQ7vh/bIp83qaJSvTCx2Wl9rSxyk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbn62tR%2FbtsN1qpQ7vh%2FbIp83qaJSvTCx2Wl9rSxyk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1600\" height=\"1200\" data-filename=\"20250404_155827.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">기본 스펙은 위 상자에 적힌 대로. 블루투스 5.3을 지원하며 정확하게 안 적혀있지만 SBC와 AAC 코덱은 지원하는 것으로 추정된다. 멀티 페어링 같은 건 안 되지만 무선 연결이 빨리 되어 좋다.</p>\n<p data-ke-size=\"size16\"><br />배터리 용량은 80mAh.&nbsp;충전도 USB 타입C 단자로 충분하며, 연속 사용시간은 8시간이라는데 한계까지 써본 적은 없다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">뭔가 인증 및 검사를 받았다는데 구체적으로는 안 적혀있다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"mj_20250404_155938.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/s4BSQ/btsN2I3T6Ij/mIhyNMBdovKhDhC7SIGsk0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/s4BSQ/btsN2I3T6Ij/mIhyNMBdovKhDhC7SIGsk0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/s4BSQ/btsN2I3T6Ij/mIhyNMBdovKhDhC7SIGsk0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fs4BSQ%2FbtsN2I3T6Ij%2FmIhyNMBdovKhDhC7SIGsk0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1600\" height=\"1200\" data-filename=\"mj_20250404_155938.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><br />부속품은 한글(!) 설명서와 짧은 충전 케이블과 본체가 전부지만 3500원짜리라 생각하니 만듦새가 꽤 괜찮다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"mj_20250404_160012.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/ckk59h/btsN1M7jDn3/b6ZMP4tpkmgzFkxIYLU640/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ckk59h/btsN1M7jDn3/b6ZMP4tpkmgzFkxIYLU640/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ckk59h/btsN1M7jDn3/b6ZMP4tpkmgzFkxIYLU640/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fckk59h%2FbtsN1M7jDn3%2Fb6ZMP4tpkmgzFkxIYLU640%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1600\" height=\"1200\" data-filename=\"mj_20250404_160012.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">탄성있는&nbsp;실리콘으로&nbsp;코팅된&nbsp;밴드가&nbsp;있어&nbsp;머리에&nbsp;장착하면&nbsp;거칠게&nbsp;움직여도&nbsp;쉽게&nbsp;떨어지지&nbsp;않으며,&nbsp;귀에&nbsp;꽂는&nbsp;방식은&nbsp;아니기&nbsp;때문에&nbsp;귓구멍은&nbsp;아프지&nbsp;않은게&nbsp;장점이다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"20250404_160110.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/bX0w1z/btsN2Ll1EU5/4jAuNako5qLW9QXlSmVamK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bX0w1z/btsN2Ll1EU5/4jAuNako5qLW9QXlSmVamK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bX0w1z/btsN2Ll1EU5/4jAuNako5qLW9QXlSmVamK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbX0w1z%2FbtsN2Ll1EU5%2F4jAuNako5qLW9QXlSmVamK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1600\" height=\"1200\" data-filename=\"20250404_160110.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 제품의 색상은 베이지인데, 이거 말고도 까망이나 핑크, 보라색 제품도 있다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><b><span style=\"color: #006dd7;\">공기 전도 이어폰이라는데, 음질과 통화품질은?</span></b></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">3500원짜리 이어폰에 좋은 음질을 바라는 건 날강도 아닐까 하는 생각이 들긴 하지만 그래도 평가를 한다면,</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"mj_20250404_160027.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/ohEF0/btsN1BLsdrS/cXKVJMeAcxoiD7lKCIHSi0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/ohEF0/btsN1BLsdrS/cXKVJMeAcxoiD7lKCIHSi0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/ohEF0/btsN1BLsdrS/cXKVJMeAcxoiD7lKCIHSi0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FohEF0%2FbtsN1BLsdrS%2FcXKVJMeAcxoiD7lKCIHSi0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1600\" height=\"1200\" data-filename=\"mj_20250404_160027.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><br />예상보다는 괜찮아서 못 들어줄 정도는 아니다. 물론 구조적으로나 가격적으로나 한계가 있지만 그 쓰임새를 생각해 보면 그럭저럭 받아줄 만 하다.<br /><br />오해하지 말아야 할 것은 이 제품은 <b>골전도 이어폰이 아니라는 것</b>이다. <b>공기 전도 이어폰</b>이라고 말하는데 우리가 평소에 듣는 소리는 공기를 매질로 전달되니 공기 전도라는게 특별한 건 아니고 <b>귀 옆에 작은 스피커를 얹어 놓은 형태</b>다. 구분하자면 개방형 이어폰에 가깝겠다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">14.2mm의 드라이버를 달았다고는 하는데 일반적인 대중 음악을 듣는데에는 큰 무리는 없다. 다만 구조상 저음은 약하고 고음의 경우 치찰음에서 찢어지는 경우가 드물지만 있다.</p>\n<p data-ke-size=\"size16\"><br />태생적으로 개방형인 만큼 소리가 밖으로 새어나갈 수 밖에 없으니 주변에 사람이 있고 조용한 곳이라면 음량을 최소한으로 낮출 필요가 있다. 반대로 주변이 매우 시끄럽다면 이어폰에서 나오는 소리도 잘 못 알아들을 수도 있다.<br /><br /><span style=\"color: #0593d3;\"><b>전화 통화 품질</b></span> 또한 마찬가지인데, 마이크와 입의 위치가 꽤 떨어져 있기 때문에 주변이 어느 정도 조용하고 내가 큰 소리로 말할 수 있는 여건이라면 통화가 어렵지 않지만 주변이 시끄럽거나 조용히 말해야 한다면 상대가 알아듣지 못하는 경우가 많으니 주의하시길.<br /><br />대신 귀를 막지 않는 개방형인 만큼 듣고 있는 소리를 잠깐 멈추거나 줄인다면<b> 외부의 소리를 듣는데 지장이 거의 없다는 건 장점</b>이다. 글쓴이는 이 제품을 착용한 상태로 바깥의 소리를 듣거나 주변 사람과 대화를 하는데 있어서는 별 문제가 없었다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><b><span style=\"color: #006dd7;\">조작과 휴대성</span></b></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"mj_20250404_160209.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/bMtPnV/btsN1NZpTcf/dfDAH1mFgSnUlVHKK47sgK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bMtPnV/btsN1NZpTcf/dfDAH1mFgSnUlVHKK47sgK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bMtPnV/btsN1NZpTcf/dfDAH1mFgSnUlVHKK47sgK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbMtPnV%2FbtsN1NZpTcf%2FdfDAH1mFgSnUlVHKK47sgK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1600\" height=\"1200\" data-filename=\"mj_20250404_160209.jpg\" data-origin-width=\"1600\" data-origin-height=\"1200\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><br />TQ-EJ04는 오른쪽의 파워 로고가 있는 터치패드를 사용하여 모든 조작을 한다. 조작 방법이 무척 단순한지라 외워두면 편하다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">- 1회 탭 : 전화 받기 또는 음악의 재생/멈춤</p>\n<p data-ke-size=\"size16\">- 2회 탭 : 전화 끊기 또는 다음 곡 재생</p>\n<p data-ke-size=\"size16\">- 3회 탭 : 이전 곡 재생</p>\n<p data-ke-size=\"size16\">- 2초 누르기 : 전화 왔을때 거절하기</p>\n<p data-ke-size=\"size16\">- 3초 누르기 : 전원 켜기 또는 음성 어시스턴트 호출</p>\n<p data-ke-size=\"size16\">- 8초 누르기 : 전원 끄기<br /><br />뜻밖에도 많은 기능을 담아둔지라 익숙해지면 편하지만 누를 생각이 없었는데 실수로 건드려서 오작동이 일어나는 경우가 종종 있는 건 단점.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"mj_20250404_201751.jpg\" data-origin-width=\"1200\" data-origin-height=\"1600\"><span data-url=\"https://blog.kakaocdn.net/dn/povdy/btsN0QvSMOv/7wnCTOCiglnlOmszqZQjy0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/povdy/btsN0QvSMOv/7wnCTOCiglnlOmszqZQjy0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/povdy/btsN0QvSMOv/7wnCTOCiglnlOmszqZQjy0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fpovdy%2FbtsN0QvSMOv%2F7wnCTOCiglnlOmszqZQjy0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1200\" height=\"1600\" data-filename=\"mj_20250404_201751.jpg\" data-origin-width=\"1200\" data-origin-height=\"1600\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><br /><b>무게는 스펙상 12.5g이지만 직접 재보니 13g(0.5g은 표시안되는 저울임)</b>으로 휴대는 주머니건 가방이건 대충 넣어서 갖고 다니면 되니 부담이 없다. <br /><br /></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #006dd7;\"><b>투키 TQ-EJ04 - 야외 활동하는 이들을 위한 막 쓰는 무선 이어폰</b></span></h3>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 제품의 존재 이유는 역시 <b>야외 활동</b>이다.</p>\n<p data-ke-size=\"size16\">머리에 착 달라붙어서 특별히 신경쓰지 않아도 떨어지지 않으며, 한쪽 터치 패드만으로 이어폰의 기능을 활용하는 데에는 문제가 없어 산책이나 더 거친 운동에도 적합하다. 물론 방수방진 수준은 IPX4 수준이라 수영은 안 된다. 다만 음질은 그다지 좋지 않고 통화 품질도 제한적인 환경에서만 쓸만하다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그리고 또 한가지, 30분 정도 쓰고 있으면 이어폰이 얹어진 귀 상단 부분이 다소 부담스럽다. <s>아들은 아빠가 머리가 커서 그렇다고 한다&nbsp;</s></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">가성비로 사뒀다가 운동용 가방 안 쪽이건 책상 서랍 한 구석이나 차의 글로브박스 건 던져 뒀다가 필요할 때 쓴다면 꽤 괜찮지 않을까 생각한다. 그 이상을 원한다면 다른 제품을 알아보시길.<br /><br />참고로 이 제품의 구입을 원한다면 알리익스프레스 등 직구 사이트에서 <b>toocki 공기 전도 이어폰</b> 등의 키워드로 검색하면 찾을 수 있을 것이다. 저렴하지만 그래도 구입 전에 정말 필요한지 한번 더 생각해 보시길.</p>\n<div class=\"notranslate\" style=\"all: initial;\">&nbsp;</div>",
        "contentSnippet": "이제 전세계 제조업의 중심은 중국이다. 중국의 공장이 멈추면 인류 사회가 받는 타격이 클 것이라는 것에는 많은 분들이 동의하실 듯.\n그 바로 옆에 살고 있는 우리나라 또한 그 영향을 강하게 받고 있다. 특히 직구라는 형태로 다양한 제품이 우리나라 소비자들을 만났고, 가격 면에서의 충격은 상당했다. 최근에는 제조 기술 또한 발전하여 그 품질도 우습게 볼 수준은 아니다.\n그리고 귀마저 못 생겨 무선 이어폰의 탈출 시도가 잦은 바람에 잘 고정되는 무선 이어폰을 찾는 글쓴이에게 가성비 휴대폰 충전기 브랜드로 유명한 투키(TOOCKI)의 제품 하나가 눈에 띄었다. \n \n3500원짜리 무선 이어폰 Toocki TQ-EJ04\n \n늑돌이가 그 제품을 한번 사볼까 했던 이유는 단 하나. 가격이었다.\n알X 직구 사이트에서 단돈 7000원에 투키는 이 TQ-EJ04 무선 이어폰 두개를 살 수 있었다. 하나당 가격은 3500원 꼴(당시 환율 기준. 지금은 더 싸다)이다. 물론 배송료 포함이고 일주일도 안 되어 무사히 도착했다. 빠르게 살펴보자.\n \n\n\n \n \n생각보다 괜찮은 만듦새\n \n\n\n \n기본 스펙은 위 상자에 적힌 대로. 블루투스 5.3을 지원하며 정확하게 안 적혀있지만 SBC와 AAC 코덱은 지원하는 것으로 추정된다. 멀티 페어링 같은 건 안 되지만 무선 연결이 빨리 되어 좋다.\n배터리 용량은 80mAh. 충전도 USB 타입C 단자로 충분하며, 연속 사용시간은 8시간이라는데 한계까지 써본 적은 없다.\n \n뭔가 인증 및 검사를 받았다는데 구체적으로는 안 적혀있다.\n \n\n\n\n부속품은 한글(!) 설명서와 짧은 충전 케이블과 본체가 전부지만 3500원짜리라 생각하니 만듦새가 꽤 괜찮다. \n \n\n\n \n탄성있는 실리콘으로 코팅된 밴드가 있어 머리에 장착하면 거칠게 움직여도 쉽게 떨어지지 않으며, 귀에 꽂는 방식은 아니기 때문에 귓구멍은 아프지 않은게 장점이다. \n \n\n\n \n이 제품의 색상은 베이지인데, 이거 말고도 까망이나 핑크, 보라색 제품도 있다.\n \n \n \n공기 전도 이어폰이라는데, 음질과 통화품질은?\n \n3500원짜리 이어폰에 좋은 음질을 바라는 건 날강도 아닐까 하는 생각이 들긴 하지만 그래도 평가를 한다면,\n \n\n\n\n예상보다는 괜찮아서 못 들어줄 정도는 아니다. 물론 구조적으로나 가격적으로나 한계가 있지만 그 쓰임새를 생각해 보면 그럭저럭 받아줄 만 하다.\n오해하지 말아야 할 것은 이 제품은 골전도 이어폰이 아니라는 것이다. 공기 전도 이어폰이라고 말하는데 우리가 평소에 듣는 소리는 공기를 매질로 전달되니 공기 전도라는게 특별한 건 아니고 귀 옆에 작은 스피커를 얹어 놓은 형태다. 구분하자면 개방형 이어폰에 가깝겠다.\n \n14.2mm의 드라이버를 달았다고는 하는데 일반적인 대중 음악을 듣는데에는 큰 무리는 없다. 다만 구조상 저음은 약하고 고음의 경우 치찰음에서 찢어지는 경우가 드물지만 있다.\n태생적으로 개방형인 만큼 소리가 밖으로 새어나갈 수 밖에 없으니 주변에 사람이 있고 조용한 곳이라면 음량을 최소한으로 낮출 필요가 있다. 반대로 주변이 매우 시끄럽다면 이어폰에서 나오는 소리도 잘 못 알아들을 수도 있다.\n전화 통화 품질 또한 마찬가지인데, 마이크와 입의 위치가 꽤 떨어져 있기 때문에 주변이 어느 정도 조용하고 내가 큰 소리로 말할 수 있는 여건이라면 통화가 어렵지 않지만 주변이 시끄럽거나 조용히 말해야 한다면 상대가 알아듣지 못하는 경우가 많으니 주의하시길.\n대신 귀를 막지 않는 개방형인 만큼 듣고 있는 소리를 잠깐 멈추거나 줄인다면 외부의 소리를 듣는데 지장이 거의 없다는 건 장점이다. 글쓴이는 이 제품을 착용한 상태로 바깥의 소리를 듣거나 주변 사람과 대화를 하는데 있어서는 별 문제가 없었다.\n \n \n조작과 휴대성\n \n\n\n\nTQ-EJ04는 오른쪽의 파워 로고가 있는 터치패드를 사용하여 모든 조작을 한다. 조작 방법이 무척 단순한지라 외워두면 편하다.\n \n- 1회 탭 : 전화 받기 또는 음악의 재생/멈춤\n- 2회 탭 : 전화 끊기 또는 다음 곡 재생\n- 3회 탭 : 이전 곡 재생\n- 2초 누르기 : 전화 왔을때 거절하기\n- 3초 누르기 : 전원 켜기 또는 음성 어시스턴트 호출\n- 8초 누르기 : 전원 끄기\n뜻밖에도 많은 기능을 담아둔지라 익숙해지면 편하지만 누를 생각이 없었는데 실수로 건드려서 오작동이 일어나는 경우가 종종 있는 건 단점.\n \n\n\n\n무게는 스펙상 12.5g이지만 직접 재보니 13g(0.5g은 표시안되는 저울임)으로 휴대는 주머니건 가방이건 대충 넣어서 갖고 다니면 되니 부담이 없다. \n\n \n투키 TQ-EJ04 - 야외 활동하는 이들을 위한 막 쓰는 무선 이어폰\n \n이 제품의 존재 이유는 역시 야외 활동이다.\n머리에 착 달라붙어서 특별히 신경쓰지 않아도 떨어지지 않으며, 한쪽 터치 패드만으로 이어폰의 기능을 활용하는 데에는 문제가 없어 산책이나 더 거친 운동에도 적합하다. 물론 방수방진 수준은 IPX4 수준이라 수영은 안 된다. 다만 음질은 그다지 좋지 않고 통화 품질도 제한적인 환경에서만 쓸만하다.\n \n그리고 또 한가지, 30분 정도 쓰고 있으면 이어폰이 얹어진 귀 상단 부분이 다소 부담스럽다. 아들은 아빠가 머리가 커서 그렇다고 한다 \n \n가성비로 사뒀다가 운동용 가방 안 쪽이건 책상 서랍 한 구석이나 차의 글로브박스 건 던져 뒀다가 필요할 때 쓴다면 꽤 괜찮지 않을까 생각한다. 그 이상을 원한다면 다른 제품을 알아보시길.\n참고로 이 제품의 구입을 원한다면 알리익스프레스 등 직구 사이트에서 toocki 공기 전도 이어폰 등의 키워드로 검색하면 찾을 수 있을 것이다. 저렴하지만 그래도 구입 전에 정말 필요한지 한번 더 생각해 보시길.",
        "guid": "http://lazion.com/2513745",
        "categories": [
          "#오디오#헤드폰#이어폰",
          "Audio",
          "Earphone",
          "Outdoor",
          "Review",
          "Sports",
          "Toocki",
          "tq-ej04",
          "Wireless"
        ],
        "isoDate": "2025-05-18T23:21:19.000Z"
      }
    ]
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "(RULIWEB`Д')/",
        "title": "[MULTI] 치열히 맞붙는 무(武)·역사 이면의 협(俠), 명말: 공허의 깃털",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2310",
        "pubDate": "Wed, 21 May 2025 18:00:00 +0900",
        "author": "(RULIWEB`Д')/",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/25/05/21/196f201d5204c329e.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-05-21T09:00:00.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 3화, 목표가 생긴데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2309",
        "pubDate": "Wed, 21 May 2025 17:10:55 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/05/21/196f1d5898c51ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-05-21T08:10:55.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "아니 진짜 눌렀다고!! 클레르 옵스퀴르: 33 원정대",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2308",
        "pubDate": "Tue, 20 May 2025 23:21:18 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/05/20/196ee0d301651ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2025-05-20T14:21:18.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "스펠 카드를 걸고 펼쳐지는 승부! 동방 스펠 카니발",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2307",
        "pubDate": "Tue, 20 May 2025 23:01:39 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/05/20/196edfce3e351ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2025-05-20T14:01:39.000Z"
      },
      {
        "creator": "［RULIWEB］",
        "title": "[MULTI] 큰 진화 없이 돌아온 회귀자가 주는 재미, 세븐나이츠 리버스",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2306",
        "pubDate": "Mon, 19 May 2025 16:15:57 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/05/19/196e76503bb5104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-05-19T07:15:57.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "JetBrains Rider에서 사용할 수 있는 12가지 디버깅 기법",
        "link": "https://jacking75.github.io/jetbrains_20250519/",
        "pubDate": "Mon, 19 May 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTduAI1ug4X3Dl0dzMefbHbY2GKXN8cEDmOWp1mhbW_BTGjFR4Dm7dXi4gKzvpjIAsYV7sEnbc62De2/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/jetbrains_20250519/",
        "isoDate": "2025-05-18T15:00:00.000Z"
      },
      {
        "title": "Rider로 쉽게 하는 코드 리뷰",
        "link": "https://jacking75.github.io/jetbrains_20250518/",
        "pubDate": "Sun, 18 May 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTmpOGewUJsyPxQqrzeM58ngfwcAeybA-_jegpySWD_O4STxmbX_x-HyQ3ckMz9fdDab9vddy-XDsA0/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/jetbrains_20250518/",
        "isoDate": "2025-05-17T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "작은 성공의 기쁨",
        "link": "https://jeho.page/essay/2025/05/21/small-wins.html",
        "pubDate": "2025-05-21T13:41:00.000Z",
        "author": "김재호",
        "content": "<p>목표를 크게 잡는 것을 좋아하지 않습니다.<br />\n내가 딱 할 수 있을 만큼만.<br />\n아니, 차라리 그보다 약간 작게 잡는 것을 좋아합니다.</p>\n\n<p>작은 성공의 기쁨을 맛보기 위해서.</p>\n\n<p>목표를 높게 잡으라는 말을 믿지 않습니다.<br />\n실패해서 중간에 포기한 적이 훨씬 많았으니까.</p>\n\n<p>어릴 때는 항상 목표를 높게 잡았습니다.<br />\n실력도 없으면서. 내 주제도 모른 채. 그냥 남들이 다들 높게 잡으라고 말하니까.<br />\n그 목표에 도달한 적이 한 번도 없었습니다.<br />\n도달은커녕 중간까지 가기도 힘들었습니다. 몇 발자국 내딛다 포기해버릴 뿐.</p>\n\n<p>언젠가부터는 목표치를 낮게 잡기 시작했습니다.<br />\n목표를 달성하는 작은 성공들을 맛보게 됐습니다.<br />\n작은 성공이지만 굉장히 의미 있는 순간입니다.<br />\n이런 작은 성공의 기쁨을 맛보면서 지치지 않고 계속 나아갈 수 있는 힘을 얻거든요.<br />\n어릴 땐 이걸 잘 몰랐습니다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2022/07/04/slow-steady.html\">느려도 좋으니 매일 한 걸음씩 전진</a></li>\n  <li><a href=\"/essay/2022/03/10/growth-rate.html\">내 몸에 맞는 속도로 걸어가기</a></li>\n</ul>",
        "contentSnippet": "목표를 크게 잡는 것을 좋아하지 않습니다.\n작은 성공의 기쁨을 맛보기 위해서.\n목표를 높게 잡으라는 말을 믿지 않습니다.\n어릴 때는 항상 목표를 높게 잡았습니다.\n언젠가부터는 목표치를 낮게 잡기 시작했습니다.\n\n함께 읽으면 좋은 글:\n느려도 좋으니 매일 한 걸음씩 전진\n내 몸에 맞는 속도로 걸어가기",
        "summary": "목표를 크게 잡는 것을 좋아하지 않습니다. 내가 딱 할 수 있을 만큼만. 아니, 차라리 그보다 약간 작게 잡는 것을 좋아합니다.",
        "id": "https://jeho.page/essay/2025/05/21/small-wins",
        "isoDate": "2025-05-21T13:41:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "Stitch, 구글이 만든 UI 디자인을 위한 AI 도구",
        "link": "https://blog.gaerae.com/2025/05/google-labs-stitch-ui-coding-design-tool.html",
        "pubDate": "Wed, 21 May 2025 02:53:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<figure>\n<img alt=\"\" border=\"0\" data-original-height=\"1558\" data-original-width=\"3024\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjK4-DoS54dajRFKlBrhcVaU929rePn1WWRIIZNkcDNPvsnAdylBhb5aCoGk2zcM-hxSV8QnnhJBfdlZmoJlZnjGdv3jlaeOTHdUo7HsZ1ZNRDyKz6n5t8MqB5sK-_x2eGXFNOAoXKh-6qesNuEaqXea_-2DuI3z-kFgG3cdz0F_yptbH2h3f6KjyBpe-w/s1600/stitch.png\" style=\"width: 100%;\" />\n  <figcaption>Google Labs: Stitch</figcaption>\n</figure>\n<p>구글이 개발자 컨퍼런스 I/O 2025에서 공개한 새로운 AI 기반 UI 디자인 도구 'Stitch'가 디자인과 개발 프로세스를 혁신적으로 변화시키고 있습니다. 이 글에서는 Stitch의 주요 기능과 활용 방법에 대해 자세히 알아보겠습니다.</p>\n<h2 id=\"stitch란-무엇인가\">Stitch란 무엇인가?</h2>\n<p>Stitch는 구글 랩스(Google Labs)에서 출시한 실험적 AI 도구로, 간단한 텍스트 프롬프트나 이미지 입력을 복잡한 UI 디자인과 프론트엔드 코드로 빠르게 변환해주는 서비스입니다. 디자이너와 엔지니어 간의 협업을 원활하게 하기 위해 개발된 이 도구는 Gemini 2.5 Pro의 멀티모달 기능을 활용하여 디자인과 개발 워크플로우를 통합합니다.</p>\n<p>특히 주목할 점은 개발자들이 초기 UI 아이디어를 몇 분 만에 실제 작동하는 앱 디자인으로 전환할 수 있다는 것입니다. 이는 디자인 컴포넌트를 수동으로 만들고 코딩하는 지루한 작업에서 개발자를 해방시켜 줍니다.</p><p>'Galileo AI'를 인수 후Stitch로 출시했습니다.</p>\n<blockquote class=\"twitter-tweet\"><p dir=\"ltr\" lang=\"en\">I’m excited to share that:<br /><br />1. Galileo AI has been acquired by <a href=\"https://twitter.com/Google?ref_src=twsrc%5Etfw\">@Google</a>.<br />2. We launched today the next generation of our product, powered by Gemini: Stitch<br /><br />More on this big news below. <a href=\"https://t.co/fC7Pzl1YB9\">pic.twitter.com/fC7Pzl1YB9</a></p>— Arnaud Benard (@arnaudai) <a href=\"https://twitter.com/arnaudai/status/1924942577545195982?ref_src=twsrc%5Etfw\">May 20, 2025</a></blockquote> <script async=\"\" charset=\"utf-8\" src=\"https://platform.twitter.com/widgets.js\"></script>\n<h2 id=\"stitch의-주요-기능\">Stitch의 주요 기능</h2>\n<h3 id=\"텍스트-프롬프트-기반-ui-생성\">1. 텍스트 프롬프트 기반 UI 생성</h3>\n<p>자연어로 원하는 애플리케이션을 설명하면 Stitch가 이를 분석하여 맞춤형 시각적 인터페이스를 생성합니다. 색상 팔레트나 사용자 경험 요소 등 세부 사항을 지정할 수 있어 원하는 디자인에 가까운 결과물을 얻을 수 있습니다.</p>\n<h3 id=\"이미지-참조-기능\">2. 이미지 참조 기능</h3>\n<p>화이트보드에 그린 스케치, 매력적인 UI 스크린샷, 또는 대략적인 와이어프레임을 업로드하면 Stitch가 이를 처리하여 디지털 UI를 생성합니다. 프레임, 스케치, UI 디자인 스크린샷 등 다양한 시각적 참조를 활용할 수 있어 더욱 정교한 결과물을 얻을 수 있습니다.</p>\n<h3 id=\"다양한-디자인-변형-생성\">3. 다양한 디자인 변형 생성</h3>\n<p>Stitch는 여러 인터페이스 변형을 생성할 수 있어 다양한 스타일과 레이아웃을 실험해볼 수 있습니다. 디자인은 반복적인 과정이므로, 이 기능을 통해 원하는 모양과 느낌을 얻을 때까지 여러 옵션을 탐색할 수 있습니다.</p>\n<h3 id=\"코드-생성-및-figma-연동\">4. 코드 생성 및 Figma 연동</h3>\n<p>Stitch는 UI 컴포넌트와 함께 완전히 작동하는 프론트엔드 코드를 생성합니다. 이 코드는 애플리케이션에 직접 통합하거나 Figma로 내보내 디자인 요소를 더 세밀하게 조정할 수 있습니다. 이는 기존 시스템과의 원활한 통합과 디자이너와의 협업을 가능하게 합니다.</p>\n<h2 id=\"실제-활용-사례\">실제 활용 사례</h2>\n<p>구글 제품 매니저 캐시 코레벡(Kathy Korevec)은 Stitch를 사용하여 만든 두 가지 프로젝트를 시연했습니다:</p>\n<ul>\n<li>책 관련 앱을 위한 반응형 모바일 UI 디자인</li>\n<li>양봉을 위한 웹 대시보드</li>\n</ul>\n<p>그녀는 Stitch를 \"초기 반복 작업을 완료하고 거기서부터 계속 진행할 수 있는 곳\"이라고 설명했습니다.</p>\n<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" frameborder=\"0\" height=\"315\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/q39uczIW_MY?si=2OkpVVyB7bD2RDPR\" title=\"YouTube video player\" width=\"560\"></iframe>\n<h2 id=\"stitch의-미래-계획\">Stitch의 미래 계획</h2>\n<p>구글은 가까운 미래에 Stitch에 스크린샷 편집 기능을 추가할 계획입니다. 이 기능을 통해 수정하고 싶은 객체의 스크린샷을 찍고 원하는 수정 사항을 주석으로 달 수 있게 될 예정입니다.</p>\n<p>코레벡은 Stitch가 강력한 도구이지만 Figma나 Adobe XD와 같은 완전한 디자인 플랫폼을 대체하기 위한 것은 아니라고 명확히 했습니다.</p>\n<h2 id=\"다른-ai-도구와의-연계\">다른 AI 도구와의 연계</h2>\n<p>Stitch와 함께 구글은 코드 버그 수정을 돕는 AI 에이전트인 '<a href=\"https://jules.google/\">Jules</a>'에 대한 접근성도 확대했습니다. 현재 공개 베타 버전인 Jules는 개발자가 복잡한 코드를 이해하고, GitHub에서 풀 리퀘스트를 생성하며, 백로그 항목과 프로그래밍 작업을 관리하는 데 도움을 줍니다.</p>\n<h2 id=\"stitch-사용해보기\">Stitch 사용해보기</h2>\n<p>Stitch는 현재 구글 랩스를 통해 접근할 수 있으며, 영어로 제공됩니다. 관심 있는 개발자와 디자이너는 <a href=\"https://stitch.withgoogle.com/\">stitch.withgoogle.com</a>에서 이 혁신적인 도구를 직접 체험해볼 수 있습니다.</p>\n<h2 id=\"결론\">결론</h2>\n<p>Stitch는 디자인과 개발 사이의 간극을 좁히는 혁신적인 도구로, 복잡한 UI 디자인 프로세스를 간소화하고 개발자와 디자이너 모두에게 효율적인 워크플로우를 제공합니다. AI 기술의 발전으로 앱 개발 과정이 더욱 창의적이고 생산적으로 변화하고 있는 좋은 예시입니다. 앞으로 Stitch가 어떻게 발전하고 디자인-개발 생태계에 어떤 영향을 미칠지 지켜볼 가치가 있습니다.</p>\n<h2 id=\"참고-출처\">참고 출처</h2>\n<ul>\n<li><a href=\"https://stitch.withgoogle.com/\">Google Stitch 공식 웹사이트</a></li>\n<li><a href=\"https://developers.googleblog.com/en/stitch-a-new-way-to-design-uis/\">Google Developers Blog: \"From idea to app: Introducing Stitch, a new way to design UIs\"</a></li>\n<li><a href=\"https://www.theverge.com/news/670773/google-labs-stitch-ui-coding-design-tool\">The Verge: \"Google made an AI coding tool specifically for UI design\"</a></li>\n</ul>\n",
        "contentSnippet": "Google Labs: Stitch\n\n구글이 개발자 컨퍼런스 I/O 2025에서 공개한 새로운 AI 기반 UI 디자인 도구 'Stitch'가 디자인과 개발 프로세스를 혁신적으로 변화시키고 있습니다. 이 글에서는 Stitch의 주요 기능과 활용 방법에 대해 자세히 알아보겠습니다.\nStitch란 무엇인가?\nStitch는 구글 랩스(Google Labs)에서 출시한 실험적 AI 도구로, 간단한 텍스트 프롬프트나 이미지 입력을 복잡한 UI 디자인과 프론트엔드 코드로 빠르게 변환해주는 서비스입니다. 디자이너와 엔지니어 간의 협업을 원활하게 하기 위해 개발된 이 도구는 Gemini 2.5 Pro의 멀티모달 기능을 활용하여 디자인과 개발 워크플로우를 통합합니다.\n특히 주목할 점은 개발자들이 초기 UI 아이디어를 몇 분 만에 실제 작동하는 앱 디자인으로 전환할 수 있다는 것입니다. 이는 디자인 컴포넌트를 수동으로 만들고 코딩하는 지루한 작업에서 개발자를 해방시켜 줍니다.\n'Galileo AI'를 인수 후Stitch로 출시했습니다.\nI’m excited to share that:\n1. Galileo AI has been acquired by @Google.\n2. We launched today the next generation of our product, powered by Gemini: Stitch\nMore on this big news below. pic.twitter.com/fC7Pzl1YB9\n— Arnaud Benard (@arnaudai) May 20, 2025\n \nStitch의 주요 기능\n1. 텍스트 프롬프트 기반 UI 생성\n자연어로 원하는 애플리케이션을 설명하면 Stitch가 이를 분석하여 맞춤형 시각적 인터페이스를 생성합니다. 색상 팔레트나 사용자 경험 요소 등 세부 사항을 지정할 수 있어 원하는 디자인에 가까운 결과물을 얻을 수 있습니다.\n2. 이미지 참조 기능\n화이트보드에 그린 스케치, 매력적인 UI 스크린샷, 또는 대략적인 와이어프레임을 업로드하면 Stitch가 이를 처리하여 디지털 UI를 생성합니다. 프레임, 스케치, UI 디자인 스크린샷 등 다양한 시각적 참조를 활용할 수 있어 더욱 정교한 결과물을 얻을 수 있습니다.\n3. 다양한 디자인 변형 생성\nStitch는 여러 인터페이스 변형을 생성할 수 있어 다양한 스타일과 레이아웃을 실험해볼 수 있습니다. 디자인은 반복적인 과정이므로, 이 기능을 통해 원하는 모양과 느낌을 얻을 때까지 여러 옵션을 탐색할 수 있습니다.\n4. 코드 생성 및 Figma 연동\nStitch는 UI 컴포넌트와 함께 완전히 작동하는 프론트엔드 코드를 생성합니다. 이 코드는 애플리케이션에 직접 통합하거나 Figma로 내보내 디자인 요소를 더 세밀하게 조정할 수 있습니다. 이는 기존 시스템과의 원활한 통합과 디자이너와의 협업을 가능하게 합니다.\n실제 활용 사례\n구글 제품 매니저 캐시 코레벡(Kathy Korevec)은 Stitch를 사용하여 만든 두 가지 프로젝트를 시연했습니다:\n책 관련 앱을 위한 반응형 모바일 UI 디자인\n양봉을 위한 웹 대시보드\n그녀는 Stitch를 \"초기 반복 작업을 완료하고 거기서부터 계속 진행할 수 있는 곳\"이라고 설명했습니다.\n\nStitch의 미래 계획\n구글은 가까운 미래에 Stitch에 스크린샷 편집 기능을 추가할 계획입니다. 이 기능을 통해 수정하고 싶은 객체의 스크린샷을 찍고 원하는 수정 사항을 주석으로 달 수 있게 될 예정입니다.\n코레벡은 Stitch가 강력한 도구이지만 Figma나 Adobe XD와 같은 완전한 디자인 플랫폼을 대체하기 위한 것은 아니라고 명확히 했습니다.\n다른 AI 도구와의 연계\nStitch와 함께 구글은 코드 버그 수정을 돕는 AI 에이전트인 'Jules'에 대한 접근성도 확대했습니다. 현재 공개 베타 버전인 Jules는 개발자가 복잡한 코드를 이해하고, GitHub에서 풀 리퀘스트를 생성하며, 백로그 항목과 프로그래밍 작업을 관리하는 데 도움을 줍니다.\nStitch 사용해보기\nStitch는 현재 구글 랩스를 통해 접근할 수 있으며, 영어로 제공됩니다. 관심 있는 개발자와 디자이너는 stitch.withgoogle.com에서 이 혁신적인 도구를 직접 체험해볼 수 있습니다.\n결론\nStitch는 디자인과 개발 사이의 간극을 좁히는 혁신적인 도구로, 복잡한 UI 디자인 프로세스를 간소화하고 개발자와 디자이너 모두에게 효율적인 워크플로우를 제공합니다. AI 기술의 발전으로 앱 개발 과정이 더욱 창의적이고 생산적으로 변화하고 있는 좋은 예시입니다. 앞으로 Stitch가 어떻게 발전하고 디자인-개발 생태계에 어떤 영향을 미칠지 지켜볼 가치가 있습니다.\n참고 출처\nGoogle Stitch 공식 웹사이트\nGoogle Developers Blog: \"From idea to app: Introducing Stitch, a new way to design UIs\"\nThe Verge: \"Google made an AI coding tool specifically for UI design\"",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-9214868919793724248",
        "categories": [
          {
            "_": "news",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "tool",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-05-21T02:53:00.000Z"
      },
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "VS Code, 오픈소스 AI 에디터로 진화: GitHub Copilot Chat 통합의 의미",
        "link": "https://blog.gaerae.com/2025/05/vscode-open-source-ai-editor.html",
        "pubDate": "Tue, 20 May 2025 05:46:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<figure>\n  <img alt=\"\" border=\"0\" data-original-height=\"720\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj5mCMAqbcZ1QNhIS6cmwqnFKt1EqCEanUw-kQxG0ayxl_KjPY-DzpzOVdyrAFpTn8c5LZJFeRM7YRRR1-Z_95kVB2nf7ZDqZ5NHR29l55OaH1MMx-aovyddm4o9YUHm4I-Uiz1nhbjFDstHgG2ktPRTX68L_qoFG129k5r9gvFLzazVNYPzI4Kw6M3FJg/s1600/Open-Source-AI-Editor.jpeg\" style=\"width: 100%;\" />\n  <figcaption>VS Code: Open Source AI Editor</figcaption>\n</figure>\n<p>개발자들에게 가장 사랑받는 코드 에디터 VS Code가 AI 시대에 새로운 변화를 맞이하고 있습니다. Microsoft는 어떻게 개발자 경험을 한 단계 더 발전시키려 하는 걸까요?</p>\n<h2 id=\"요약\">요약</h2>\n<p>VS Code 팀은 2025년 5월 19일 GitHub Copilot Chat 익스텐션의 소스 코드를 MIT 라이선스로 오픈소스로 공개하고, 해당 AI 기능을 단계적으로 VS Code 코어에 통합해 <b>'오픈소스 AI 에디터'</b>로 진화시키겠다고 발표했습니다. 이 변화는 별도 익스텐션 설치 없이 Cursor나 Windsurf처럼 자연스럽게 AI 기능을 사용할 수 있는 환경을 제공하며, AI 개발 도구의 투명성과 보안성을 강화해 개발자 경험을 한층 끌어올릴 것으로 기대됩니다.</p>\n<h2 id=\"배경-및-동기\">배경 및 동기</h2>\n<ul>\n<li>\n<p><strong>오픈 소스 전통</strong><br />\nVS Code는 지난 10년간 GitHub에서 가장 성공적인 오픈소스 프로젝트 중 하나로 성장했으며, 전 세계에서 많은 개발자가 매월 사용하고 있습니다.</p>\n</li>\n<li>\n<p><strong>AI 개발 패러다임 전환</strong><br />\n대형 언어 모델(LLM)의 품질 향상으로 '비밀 소스' 프롬프트 전략 의존도가 감소했고, Agent Mode와 Next Edit Suggestions 같은 공통 UI 패턴이 표준화됐습니다.</p>\n</li>\n<li>\n<p><strong>투명성과 보안 강화 요구</strong><br />\n커뮤니티에서 AI 에디터의 데이터 수집 방식에 대한 투명성을 요구해 왔으며, 악의적 확장(extension)으로부터 보안을 확보하려면 소스 코드 공개가 필수적이라는 목소리가 커지고 있습니다.</p>\n</li>\n</ul>\n<h2 id=\"주요-내용\">주요 내용</h2>\n<ol>\n<li>\n<p><strong>GitHub Copilot Chat 익스텐션 코드 공개</strong><br />\n익스텐션 전체 소스 코드를 MIT 라이선스로 GitHub에 공개합니다.</p>\n</li>\n<li>\n<p><strong>AI 기능의 에디터 코어 통합</strong><br />\n공개된 익스텐션 코드를 VS Code 코어에 리팩토링해 내장 AI 기능으로 전환합니다.</p>\n</li>\n<li>\n<p><strong>프롬프트 테스트 인프라 오픈소스화</strong><br />\nLLM 특성상 테스트와 빌드가 어려운 AI 기능 기여를 돕기 위해 프롬프트 테스트 인프라를 공개합니다.</p>\n</li>\n<li>\n<p><strong>커뮤니티 기여 활성화</strong><br />\nAI 기능 기여 방식을 일반 코드 기여와 동일하게 단순화해 누구나 쉽게 PR을 생성·테스트할 수 있도록 합니다.</p>\n</li>\n</ol>\n<h2 id=\"영향-및-기대-효과\">영향 및 기대 효과</h2>\n<ul>\n<li>\n<p><strong>생산성 향상</strong><br />\n개발자는 AI 기능을 직접 커스터마이징 및 확장할 수 있어 일상적인 코드 작성과 디버깅 과정이 크게 단축됩니다.</p>\n</li>\n<li>\n<p><strong>생태계 확장</strong><br />\n오픈소스화로 다양한 서드파티 확장 프로그램이 AI 에디터 기능을 활용 및 개선하며, VS Code 마켓플레이스 확장 수는 더욱 늘어날 것으로 보입니다.</p>\n</li>\n<li>\n<p><strong>보안성과 투명성 강화</strong><br />\n커뮤니티 코드 리뷰를 통해 악의적 행위를 조기에 탐지와 수정하며, 데이터 수집 방식을 직접 검증할 수 있어 신뢰도가 높아집니다.</p>\n</li>\n</ul>\n<h2 id=\"향후-계획\">향후 계획</h2>\n<ul>\n<li>\n<p><strong>코드 공개 일정</strong><br />\n몇 주 내에 Copilot Chat 익스텐션 레포지토리를 공개하고, 핵심 AI 컴포넌트를 차례로 코어에 반영할 예정입니다.</p>\n</li>\n<li>\n<p><strong>이터레이션 플랜과 FAQ 업데이트</strong><br />\nGitHub에 공개된 이터레이션 플랜과 공식 FAQ를 통해 단계별 진행 상황을 투명하게 공유하고, 커뮤니티 피드백을 반영합니다.</p>\n</li>\n<li>\n<p><strong>성능과 UX 개선 지속</strong><br />\n오픈소스 커뮤니티의 기여를 통해 AI 모델 호출 성능 최적화 및 사용자 경험(UX) 개선을 꾸준히 이어갈 계획입니다.</p>\n</li>\n</ul>\n<h2 id=\"출처\">출처</h2>\n<ol>\n<li>\n<a href=\"https://code.visualstudio.com/blogs/2025/05/19/openSourceAIEditor\">VS Code: Open Source AI Editor – Visual Studio Code Blog</a>\n</li>\n<li>\n<a href=\"https://code.visualstudio.com/docs/supporting/FAQ#_open-sourcing-ai-in-vs-code\">Visual Studio Code FAQ – Visual Studio Code Blog</a>\n</li>\n<li>\n<a href=\"https://techstartups.com/2025/05/19/microsoft-makes-visual-studio-code-vs-code-an-open-source-ai-editor-ushering-in-a-new-era-of-developer-tools/\">Microsoft makes Visual Studio Code (VS Code) an open source AI – TechStartups</a>\n</li>\n<li>\n<a href=\"https://techcrunch.com/2025/05/19/microsoft-open-sources-a-command-line-text-editor-and-more-at-build/\">Microsoft open sources a command-line text editor and more at Build – TechCrunch</a>\n</li>\n<li>\n<a href=\"https://www.theverge.com/news/669339/github-ai-coding-agent-fix-bugs\">GitHub’s new AI coding agent can fix bugs for you – The Verge</a>\n</li>\n<li>\n<a href=\"https://visualstudiomagazine.com/articles/2025/04/04/vs-code-v1-99-is-all-about-copilot-chat.aspx\">VS Code v1.99 Is All About Copilot Chat AI, Including Agent Mode – Visual Studio Magazine</a>\n</li>\n<li>\n<a href=\"https://www.runtime.news/visual-studio-code-helped-microsoft-win-developers-new-ai-coding-editors-want-to-own-the-future/\">Visual Studio Code helped Microsoft win developers – Runtime.news</a>\n</li>\n<li>\n<a href=\"https://www.thurrott.com/dev/321070/visual-studio-and-visual-studio-code-have-50-million-maus\">Visual Studio and Visual Studio Code Have 50 Million MAUs – Thurrott.com</a>\n</li>\n</ol>\n\n",
        "contentSnippet": "VS Code: Open Source AI Editor\n\n개발자들에게 가장 사랑받는 코드 에디터 VS Code가 AI 시대에 새로운 변화를 맞이하고 있습니다. Microsoft는 어떻게 개발자 경험을 한 단계 더 발전시키려 하는 걸까요?\n요약\nVS Code 팀은 2025년 5월 19일 GitHub Copilot Chat 익스텐션의 소스 코드를 MIT 라이선스로 오픈소스로 공개하고, 해당 AI 기능을 단계적으로 VS Code 코어에 통합해 '오픈소스 AI 에디터'로 진화시키겠다고 발표했습니다. 이 변화는 별도 익스텐션 설치 없이 Cursor나 Windsurf처럼 자연스럽게 AI 기능을 사용할 수 있는 환경을 제공하며, AI 개발 도구의 투명성과 보안성을 강화해 개발자 경험을 한층 끌어올릴 것으로 기대됩니다.\n배경 및 동기\n오픈 소스 전통\nAI 개발 패러다임 전환\n투명성과 보안 강화 요구\n주요 내용\nGitHub Copilot Chat 익스텐션 코드 공개\nAI 기능의 에디터 코어 통합\n프롬프트 테스트 인프라 오픈소스화\n커뮤니티 기여 활성화\n영향 및 기대 효과\n생산성 향상\n생태계 확장\n보안성과 투명성 강화\n향후 계획\n코드 공개 일정\n이터레이션 플랜과 FAQ 업데이트\n성능과 UX 개선 지속\n출처\nVS Code: Open Source AI Editor – Visual Studio Code Blog\n\n\nVisual Studio Code FAQ – Visual Studio Code Blog\n\n\nMicrosoft makes Visual Studio Code (VS Code) an open source AI – TechStartups\n\n\nMicrosoft open sources a command-line text editor and more at Build – TechCrunch\n\n\nGitHub’s new AI coding agent can fix bugs for you – The Verge\n\n\nVS Code v1.99 Is All About Copilot Chat AI, Including Agent Mode – Visual Studio Magazine\n\n\nVisual Studio Code helped Microsoft win developers – Runtime.news\n\n\nVisual Studio and Visual Studio Code Have 50 Million MAUs – Thurrott.com",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-8287197163262401129",
        "categories": [
          {
            "_": "news",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-05-20T05:46:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "ngrok 집에서 https 서비스 사용하기",
        "link": "http://serverdown.tistory.com/1330",
        "pubDate": "Wed, 21 May 2025 20:28:26 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1330#entry1330comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1300\" data-origin-height=\"487\"><span data-url=\"https://blog.kakaocdn.net/dn/bA4t8q/btsN755Zyk9/fN6fDbqK2hv1JCC3zTXVNK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bA4t8q/btsN755Zyk9/fN6fDbqK2hv1JCC3zTXVNK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bA4t8q/btsN755Zyk9/fN6fDbqK2hv1JCC3zTXVNK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbA4t8q%2FbtsN755Zyk9%2FfN6fDbqK2hv1JCC3zTXVNK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1300\" height=\"487\" data-origin-width=\"1300\" data-origin-height=\"487\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">ngrrok 은 나는 http 서버를 띄우고</p>\n<p data-ke-size=\"size16\">ngrok 이 https 서버를 대신 띄워서 요청을 받으면 내컴퓨터 쪽으로 대신 쏴주는 기능을 합니다.</p>\n<p data-ke-size=\"size16\">nginx 프록시 같은걸 하는데 내컴이 아니라 어떤 서비스가 해준다는 것입니다.</p>\n<p data-ke-size=\"size16\">그래서 나는 https 인증서를 준비할 필요가 없습니다.</p>\n<p data-ke-size=\"size16\">아주 편리합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">시연 영상</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=FOsKPjrDP_g\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=FOsKPjrDP_g</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=FOsKPjrDP_g\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/fgTKS/hyYVdNtwIE/E8XuMl7OgSSOdTQQMWMbRk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/Gtujo/hyYWVkscji/tq0kpZpocmOfJwOYPSr2V1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"라인 챗봇 만들기 #1\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/FOsKPjrDP_g\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2분 28초에 나오는데요</p>\n<p data-ke-size=\"size16\">라인봇을 돌리려면 라인서버에서 전달하는 웹연결을 받을 수 있어야합니다.</p>\n<p data-ke-size=\"size16\">웹 훅이라고 하는데요</p>\n<p data-ke-size=\"size16\">대화방에서 일어나는 일을 라인서버가 지정된 주소로 계속 쏴줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">지정된 주소는 https 이기 때문에 인증서도 설치하고 그런 번거로운 일을 해야하는데요</p>\n<p data-ke-size=\"size16\">이런거 다 퀴찮으면</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">ngrok 이 https 요청을 대신 받고&nbsp;</p>\n<p data-ke-size=\"size16\">ngrok 과 내 컴퓨터는 http 통신을 하면 인증서를 준비하지 않아도 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">신기한 서비스라 남겨둡니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "ngrrok 은 나는 http 서버를 띄우고\nngrok 이 https 서버를 대신 띄워서 요청을 받으면 내컴퓨터 쪽으로 대신 쏴주는 기능을 합니다.\nnginx 프록시 같은걸 하는데 내컴이 아니라 어떤 서비스가 해준다는 것입니다.\n그래서 나는 https 인증서를 준비할 필요가 없습니다.\n아주 편리합니다.\n \n시연 영상\n영상: https://www.youtube.com/watch?v=FOsKPjrDP_g\n\n\n\n \n2분 28초에 나오는데요\n라인봇을 돌리려면 라인서버에서 전달하는 웹연결을 받을 수 있어야합니다.\n웹 훅이라고 하는데요\n대화방에서 일어나는 일을 라인서버가 지정된 주소로 계속 쏴줍니다.\n \n지정된 주소는 https 이기 때문에 인증서도 설치하고 그런 번거로운 일을 해야하는데요\n이런거 다 퀴찮으면\n \nngrok 이 https 요청을 대신 받고 \nngrok 과 내 컴퓨터는 http 통신을 하면 인증서를 준비하지 않아도 됩니다.\n \n신기한 서비스라 남겨둡니다.",
        "guid": "http://serverdown.tistory.com/1330",
        "categories": [
          "프로그래밍/개발메모",
          "ngrok",
          "웹훅"
        ],
        "isoDate": "2025-05-21T11:28:26.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2025년 해외주식 앵도소득세 납부기 / 키움증권 / 자동대행 했음",
        "link": "http://serverdown.tistory.com/1329",
        "pubDate": "Wed, 21 May 2025 16:47:40 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1329#entry1329comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"552\" data-origin-height=\"366\"><span data-url=\"https://blog.kakaocdn.net/dn/bzt2QI/btsN5MAapy1/RvoDT4kYwQBMMIErGenAmk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bzt2QI/btsN5MAapy1/RvoDT4kYwQBMMIErGenAmk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bzt2QI/btsN5MAapy1/RvoDT4kYwQBMMIErGenAmk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbzt2QI%2FbtsN5MAapy1%2FRvoDT4kYwQBMMIErGenAmk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"552\" height=\"366\" data-origin-width=\"552\" data-origin-height=\"366\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">양도 낸다는 양도소득세 시간입니다.</p>\n<p data-ke-size=\"size16\">5월에 내야하는데</p>\n<p data-ke-size=\"size16\">해외주식양도소득세는 4월에 자동대행을 신청합니다.</p>\n<p data-ke-size=\"size16\">신청안했다면 지욱의 액셀맛을 봐야합니다.</p>\n<p data-ke-size=\"size16\">이부분은 설명하지 않겠습니다.<br />(저는 대행을 신청했기 때문에 ...)</p>\n<p data-ke-size=\"size16\">저는 수동으로 신청을 2밴 해봤습니다. 두번다 지옥이였습니다.</p>\n<p data-ke-size=\"size16\">키움증권을 사용하는데요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">세무서에서 메일로 신고서가 왔습니다.</p>\n<p data-ke-size=\"size16\">위텍스에서 내라고 하네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">탑부하기전에 팝업 허용을 해야합니다.</h2>\n<p data-ke-size=\"size16\">저는 크롬 쓰기 때문에 크롬 기준으로 설명합니다.</p>\n<p data-ke-size=\"size16\">우층 상단에 점 세개 있는 버튼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"311\" data-origin-height=\"173\"><span data-url=\"https://blog.kakaocdn.net/dn/cZO3Jb/btsN5QWkH5L/ysLAEysV1D2WDVeCahawV0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cZO3Jb/btsN5QWkH5L/ysLAEysV1D2WDVeCahawV0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cZO3Jb/btsN5QWkH5L/ysLAEysV1D2WDVeCahawV0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcZO3Jb%2FbtsN5QWkH5L%2FysLAEysV1D2WDVeCahawV0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"311\" height=\"173\" data-origin-width=\"311\" data-origin-height=\"173\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">메뉴에서 [설정]</p>\n<p data-ke-size=\"size16\">상단에서 [팝업 및 리디렉션] 검색</p>\n<p data-ke-size=\"size16\">[사이트 설정] 클릭</p>\n<p data-ke-size=\"size16\">[팝업&nbsp;및&nbsp;리디렉션] 클릭</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"668\" data-origin-height=\"411\"><span data-url=\"https://blog.kakaocdn.net/dn/cmwUaD/btsN5v52asM/BxB2ZJ8wuxmrlExLSAu0v0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cmwUaD/btsN5v52asM/BxB2ZJ8wuxmrlExLSAu0v0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cmwUaD/btsN5v52asM/BxB2ZJ8wuxmrlExLSAu0v0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcmwUaD%2FbtsN5v52asM%2FBxB2ZJ8wuxmrlExLSAu0v0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"668\" height=\"411\" data-origin-width=\"668\" data-origin-height=\"411\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이거 켜둡니다.</p>\n<p data-ke-size=\"size16\">다 납부하고나면 두번째 껄로 설정해서 막아야합니다.</p>\n<p data-ke-size=\"size16\">기억해두시구요<br />1년에 한번하는거라 귀찮아도 참습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">지방세 납부는 위텍스</h2>\n<p data-ke-size=\"size16\">위텍스 - <a href=\"https://wetax.go.kr/main.do\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://wetax.go.kr/main.do</a></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"870\" data-origin-height=\"330\"><span data-url=\"https://blog.kakaocdn.net/dn/oCTRF/btsN45mt2pd/GjUdbrqqWRYCNfV4GqkTq1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/oCTRF/btsN45mt2pd/GjUdbrqqWRYCNfV4GqkTq1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/oCTRF/btsN45mt2pd/GjUdbrqqWRYCNfV4GqkTq1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FoCTRF%2FbtsN45mt2pd%2FGjUdbrqqWRYCNfV4GqkTq1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"870\" height=\"330\" data-origin-width=\"870\" data-origin-height=\"330\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">납부하기 버튼 누릅니다.</p>\n<p data-ke-size=\"size16\">로그인하라는데 회원가입해두면 휴대폰 번호로 로그인 가능합니다. <br />가입해두시구요</p>\n<p data-ke-size=\"size16\">로그인하면 첫화면으로 다시 튕깁니다. (왜징??)</p>\n<p data-ke-size=\"size16\">다시 납부하기 버튼 찾아 누릅니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">미납된 지방세 내라는데 양도소득세의 10%를 내야합니다.<br />내시구요</p>\n<p data-ke-size=\"size16\">이때 팝업이 뜹니다. 위에서 팝업을 허용했다면 내는데 문제가 없을 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">낸다음 화인하는 방법은 모르겠습니다.</p>\n<p data-ke-size=\"size16\">다음에 들어와보면 내라는 소리가 없길레 성공했다고 생각되는군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">양도세 납부는 홈텍스</h2>\n<p data-ke-size=\"size16\">홈텍스 - <a href=\"https://hometax.go.kr/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://hometax.go.kr/</a></p>\n<p data-ke-size=\"size16\">홈텍스에 가면 홈텍스 버튼이 있군요 (상자안에 상자 같은 느낌인가...)</p>\n<p data-ke-size=\"size16\">로그인 하시구요</p>\n<p data-ke-size=\"size16\">우측 상단의 [나의 홈텍스] 누릅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"486\" data-origin-height=\"385\"><span data-url=\"https://blog.kakaocdn.net/dn/ceABbj/btsN7fVsSal/BU1Mr8GUXMMbKECVoiNsB1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ceABbj/btsN7fVsSal/BU1Mr8GUXMMbKECVoiNsB1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ceABbj/btsN7fVsSal/BU1Mr8GUXMMbKECVoiNsB1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FceABbj%2FbtsN7fVsSal%2FBU1Mr8GUXMMbKECVoiNsB1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"486\" height=\"385\" data-origin-width=\"486\" data-origin-height=\"385\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">누르면 내 양도사게 정산되어있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"345\" data-origin-height=\"253\"><span data-url=\"https://blog.kakaocdn.net/dn/TPpOS/btsN5Stb0TG/ldLpxg9qtrRkEZ9cujfl0K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/TPpOS/btsN5Stb0TG/ldLpxg9qtrRkEZ9cujfl0K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/TPpOS/btsN5Stb0TG/ldLpxg9qtrRkEZ9cujfl0K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FTPpOS%2FbtsN5Stb0TG%2FldLpxg9qtrRkEZ9cujfl0K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"345\" height=\"253\" data-origin-width=\"345\" data-origin-height=\"253\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">눌러보면 아래쪽에 [납부하기] 버튼 있습니다.</p>\n<p data-ke-size=\"size16\">납부합니다.</p>\n<p data-ke-size=\"size16\">납부하고 나서 다시 들어가서 납부하려고 하면 리스트에서 사라져있습니다.<br />이러면 낸거 확인하신 것입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">끝났으면 팝업 허용 끄세요</h2>\n<p data-ke-size=\"size16\">끝났으면 위에서 팝업창 허용한거 다시 차단으로 바꿔둡니다.</p>\n<p data-ke-size=\"size16\">리다이렉션가 팝업은 이상한 사이트 방문으로 자동으로 해킹당하는걸 막는 유용한 기능이라 차단하는게 맞습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "양도 낸다는 양도소득세 시간입니다.\n5월에 내야하는데\n해외주식양도소득세는 4월에 자동대행을 신청합니다.\n신청안했다면 지욱의 액셀맛을 봐야합니다.\n이부분은 설명하지 않겠습니다.\n(저는 대행을 신청했기 때문에 ...)\n저는 수동으로 신청을 2밴 해봤습니다. 두번다 지옥이였습니다.\n키움증권을 사용하는데요\n \n세무서에서 메일로 신고서가 왔습니다.\n위텍스에서 내라고 하네요\n \n탑부하기전에 팝업 허용을 해야합니다.\n저는 크롬 쓰기 때문에 크롬 기준으로 설명합니다.\n우층 상단에 점 세개 있는 버튼\n\n\n메뉴에서 [설정]\n상단에서 [팝업 및 리디렉션] 검색\n[사이트 설정] 클릭\n[팝업 및 리디렉션] 클릭\n\n\n이거 켜둡니다.\n다 납부하고나면 두번째 껄로 설정해서 막아야합니다.\n기억해두시구요\n1년에 한번하는거라 귀찮아도 참습니다.\n \n지방세 납부는 위텍스\n위텍스 - https://wetax.go.kr/main.do\n\n\n납부하기 버튼 누릅니다.\n로그인하라는데 회원가입해두면 휴대폰 번호로 로그인 가능합니다. \n가입해두시구요\n로그인하면 첫화면으로 다시 튕깁니다. (왜징??)\n다시 납부하기 버튼 찾아 누릅니다.\n \n미납된 지방세 내라는데 양도소득세의 10%를 내야합니다.\n내시구요\n이때 팝업이 뜹니다. 위에서 팝업을 허용했다면 내는데 문제가 없을 것입니다.\n \n낸다음 화인하는 방법은 모르겠습니다.\n다음에 들어와보면 내라는 소리가 없길레 성공했다고 생각되는군요\n \n양도세 납부는 홈텍스\n홈텍스 - https://hometax.go.kr/\n홈텍스에 가면 홈텍스 버튼이 있군요 (상자안에 상자 같은 느낌인가...)\n로그인 하시구요\n우측 상단의 [나의 홈텍스] 누릅니다.\n\n\n누르면 내 양도사게 정산되어있습니다.\n\n\n눌러보면 아래쪽에 [납부하기] 버튼 있습니다.\n납부합니다.\n납부하고 나서 다시 들어가서 납부하려고 하면 리스트에서 사라져있습니다.\n이러면 낸거 확인하신 것입니다.\n \n끝났으면 팝업 허용 끄세요\n끝났으면 위에서 팝업창 허용한거 다시 차단으로 바꿔둡니다.\n리다이렉션가 팝업은 이상한 사이트 방문으로 자동으로 해킹당하는걸 막는 유용한 기능이라 차단하는게 맞습니다.",
        "guid": "http://serverdown.tistory.com/1329",
        "categories": [
          "투자",
          "해외주식양도소득세"
        ],
        "isoDate": "2025-05-21T07:47:40.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2025-05-21 (수) 개발일지",
        "link": "http://serverdown.tistory.com/1328",
        "pubDate": "Wed, 21 May 2025 11:23:29 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1328#entry1328comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"607\" data-origin-height=\"404\"><span data-url=\"https://blog.kakaocdn.net/dn/didSx0/btsN4veovTI/utxXsFyw0aZvgb4k1kQeq1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/didSx0/btsN4veovTI/utxXsFyw0aZvgb4k1kQeq1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/didSx0/btsN4veovTI/utxXsFyw0aZvgb4k1kQeq1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdidSx0%2FbtsN4veovTI%2FutxXsFyw0aZvgb4k1kQeq1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"607\" height=\"404\" data-origin-width=\"607\" data-origin-height=\"404\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">p-server&nbsp; - try - catch 없어서 또 시간낭비</h2>\n<p data-ke-size=\"size16\">서버 포트를 변경했는데 연결테스트 하는 과정에서 예외가 발생했다.<br />해당 코드는 try - catch 가 없는 단순 axios.get() 함수 였으나<br />로그를 보고는 알아먹기 힘들게 짜여져있었다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1061\" data-origin-height=\"431\"><span data-url=\"https://blog.kakaocdn.net/dn/bq4QrZ/btsN5Yzrfr9/IQr1fJkksz21dtChOwLDNk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bq4QrZ/btsN5Yzrfr9/IQr1fJkksz21dtChOwLDNk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bq4QrZ/btsN5Yzrfr9/IQr1fJkksz21dtChOwLDNk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbq4QrZ%2FbtsN5Yzrfr9%2FIQr1fJkksz21dtChOwLDNk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1061\" height=\"431\" data-origin-width=\"1061\" data-origin-height=\"431\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">1. 테스트 시작할때 로그가 없어서 시작하는 곳을 찾지 못해 시간을 낭비했다.</p>\n<p data-ke-size=\"size16\">2. 그리고 try - catch 추가</p>\n<p data-ke-size=\"size16\">아무튼 이런일들이 있었다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">BBG - 앱 심사 거부 후기</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"505\" data-origin-height=\"167\"><span data-url=\"https://blog.kakaocdn.net/dn/bV1HL6/btsN45TudQe/ktEDZFtlLyzNtHktLkm7p0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bV1HL6/btsN45TudQe/ktEDZFtlLyzNtHktLkm7p0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bV1HL6/btsN45TudQe/ktEDZFtlLyzNtHktLkm7p0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbV1HL6%2FbtsN45TudQe%2FktEDZFtlLyzNtHktLkm7p0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"505\" height=\"167\" data-origin-width=\"505\" data-origin-height=\"167\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">프로젝트 맴버들에게는 선정성 이슈 해결해달라고 말은해뒀는데 <br />더 이상 진행하고 싶지는 않다.</p>\n<p data-ke-size=\"size16\">애초에 결과가 불확실한 상태에서 너무 많은 노력을 쏟아부었다.</p>\n<p data-ke-size=\"size16\">결국 매몰 비용으로 다가오고 감당해야한다.</p>\n<p data-ke-size=\"size16\">프로젝트를 버릴 경우 아이러니하게도 노력이 덜들어가면 그만큼 손실이 줄어든다.<br />그리고 대부분의 프로젝트는 망한다.</p>\n<p data-ke-size=\"size16\">마지막으로 가장 중요한 것을 가장 늦게 알아버렸다.<br />애초에 안되는줄 알았으면 노력이 많이 들어갈 일도 없었을 것이다.</p>\n<p data-ke-size=\"size16\">게임 출시를 맡겼으나 이것은 결과를 너무 늦게 알게 되는 원인이 되었다.</p>\n<p data-ke-size=\"size16\">가장 이상적인 순서 다음과 같다.</p>\n<p data-ke-size=\"size16\">더미 게임에 문제될 이미지만 붙여서<br />&nbsp;\"공개 테스트\" 를 진행한다.</p>\n<p data-ke-size=\"size16\">-&gt; 공개 테스트가 가능하다면 출시가능하다는 것이니<br /><span style=\"color: initial; letter-spacing: 0px;\">&nbsp; &nbsp; &nbsp;이때부터 본격적인 개발을 하면된다.</span></p>\n<p data-ke-size=\"size16\">-&gt; 안된다면 여기까지 노력한 비용만 매몰하면 될 것이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "p-server  - try - catch 없어서 또 시간낭비\n서버 포트를 변경했는데 연결테스트 하는 과정에서 예외가 발생했다.\n해당 코드는 try - catch 가 없는 단순 axios.get() 함수 였으나\n로그를 보고는 알아먹기 힘들게 짜여져있었다.\n\n\n1. 테스트 시작할때 로그가 없어서 시작하는 곳을 찾지 못해 시간을 낭비했다.\n2. 그리고 try - catch 추가\n아무튼 이런일들이 있었다.\n \nBBG - 앱 심사 거부 후기\n\n\n프로젝트 맴버들에게는 선정성 이슈 해결해달라고 말은해뒀는데 \n더 이상 진행하고 싶지는 않다.\n애초에 결과가 불확실한 상태에서 너무 많은 노력을 쏟아부었다.\n결국 매몰 비용으로 다가오고 감당해야한다.\n프로젝트를 버릴 경우 아이러니하게도 노력이 덜들어가면 그만큼 손실이 줄어든다.\n그리고 대부분의 프로젝트는 망한다.\n마지막으로 가장 중요한 것을 가장 늦게 알아버렸다.\n애초에 안되는줄 알았으면 노력이 많이 들어갈 일도 없었을 것이다.\n게임 출시를 맡겼으나 이것은 결과를 너무 늦게 알게 되는 원인이 되었다.\n가장 이상적인 순서 다음과 같다.\n더미 게임에 문제될 이미지만 붙여서\n \"공개 테스트\" 를 진행한다.\n-> 공개 테스트가 가능하다면 출시가능하다는 것이니\n     이때부터 본격적인 개발을 하면된다.\n-> 안된다면 여기까지 노력한 비용만 매몰하면 될 것이다.",
        "guid": "http://serverdown.tistory.com/1328",
        "categories": [
          "프로그래밍/개발메모",
          "개발일지",
          "업데이트"
        ],
        "isoDate": "2025-05-21T02:23:29.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2025-05-19 (월) 개발일지",
        "link": "http://serverdown.tistory.com/1327",
        "pubDate": "Mon, 19 May 2025 12:13:19 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1327#entry1327comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"607\" data-origin-height=\"404\"><span data-url=\"https://blog.kakaocdn.net/dn/dwDWYi/btsN1BrHEcE/TNaV1LtJqZZWJNvQ5wilrk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dwDWYi/btsN1BrHEcE/TNaV1LtJqZZWJNvQ5wilrk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dwDWYi/btsN1BrHEcE/TNaV1LtJqZZWJNvQ5wilrk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdwDWYi%2FbtsN1BrHEcE%2FTNaV1LtJqZZWJNvQ5wilrk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"607\" height=\"404\" data-origin-width=\"607\" data-origin-height=\"404\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">썸네일 좀 바꿔야 할꺼 같다...</p>\n<p data-ke-size=\"size16\">(대충 만든 썸네일을 이렇게 많이 쓸지 몰랐다.)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">엘릭서 Elixir</h2>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=-lgtb-YSUWE&amp;t=901s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=-lgtb-YSUWE&amp;t=901s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=-lgtb-YSUWE\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/Ems8Q/hyYVgv6Tjc/FSjNxSaMJxAt1H0ZqwpmC1/img.jpg?width=1280&amp;height=720&amp;face=96_346_260_526,https://scrap.kakaocdn.net/dn/LJPo4/hyYU7eQVHG/nACOphGPPKYwu9cgMteD10/img.jpg?width=1280&amp;height=720&amp;face=96_346_260_526\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Elixir Programming Introduction - Complete Tutorial!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/-lgtb-YSUWE\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">18분대에서 해메고 있다.</p>\n<p data-ke-size=\"size16\">오전에 엘릭서 잠시 손뎄다가 미궁으로 빠졌다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"816\" data-origin-height=\"678\"><span data-url=\"https://blog.kakaocdn.net/dn/d8TQMi/btsN1Bk1BXu/oRf3KM8trkVAC1tnoyUPBK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/d8TQMi/btsN1Bk1BXu/oRf3KM8trkVAC1tnoyUPBK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/d8TQMi/btsN1Bk1BXu/oRf3KM8trkVAC1tnoyUPBK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd8TQMi%2FbtsN1Bk1BXu%2FoRf3KM8trkVAC1tnoyUPBK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"816\" height=\"678\" data-origin-width=\"816\" data-origin-height=\"678\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">핼로우 월드 하나찍는데 뭔가 줄줄이 나온다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"784\" data-origin-height=\"277\"><span data-url=\"https://blog.kakaocdn.net/dn/c8MIXC/btsN2OwVRTQ/3nWK99Z2YdRyitHpcvCgEk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c8MIXC/btsN2OwVRTQ/3nWK99Z2YdRyitHpcvCgEk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c8MIXC/btsN2OwVRTQ/3nWK99Z2YdRyitHpcvCgEk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc8MIXC%2FbtsN2OwVRTQ%2F3nWK99Z2YdRyitHpcvCgEk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"784\" height=\"277\" data-origin-width=\"784\" data-origin-height=\"277\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">코드는 여기 한줄 넣은것 뿐이다.<br />빼면 아무것도 찍히지 않고 끝난다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"466\" data-origin-height=\"100\"><span data-url=\"https://blog.kakaocdn.net/dn/bBqZg5/btsN2RmSiIj/AhomnhuXAl9DFbfCfGVdBK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bBqZg5/btsN2RmSiIj/AhomnhuXAl9DFbfCfGVdBK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bBqZg5/btsN2RmSiIj/AhomnhuXAl9DFbfCfGVdBK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbBqZg5%2FbtsN2RmSiIj%2FAhomnhuXAl9DFbfCfGVdBK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"466\" height=\"100\" data-origin-width=\"466\" data-origin-height=\"100\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">영상에서도 이거에 대해 어렵다고 말은 하는데<br /><span style=\"color: initial; letter-spacing: 0px;\">아무도 쉽게 알려주진 않는다.</span></p>\n<p data-ke-size=\"size16\">시간이 많이 걸릴꺼 같아 일단 접었다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">BBG 프로젝트</h2>\n<p data-ke-size=\"size16\">BBG 는 별도의 그룹과 진행중이다.</p>\n<p data-ke-size=\"size16\">UI 를 협업할 수 있게 빼달라는 요청에 어제 다 뺏다.</p>\n<p data-ke-size=\"size16\">협업이 시작되면다시 더많은 버그가 생길 것이다.</p>\n<p data-ke-size=\"size16\">프리팹이 깨지지 않게 분리해주면 연결된 링크가 깨지는 식으로 문제가 생긴다.</p>\n<p data-ke-size=\"size16\">내가 할일은 에디터에서 미리 발견해서<br />유저에게 문제가 있는 빌드가 전달 되지 않도록 막는 것이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">BGG 추가 사항</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"505\" data-origin-height=\"167\"><span data-url=\"https://blog.kakaocdn.net/dn/uT7AK/btsN46kwdss/cqOzJSpAziKVxsketnhCYK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/uT7AK/btsN46kwdss/cqOzJSpAziKVxsketnhCYK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/uT7AK/btsN46kwdss/cqOzJSpAziKVxsketnhCYK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FuT7AK%2FbtsN46kwdss%2FcqOzJSpAziKVxsketnhCYK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"505\" height=\"167\" data-origin-width=\"505\" data-origin-height=\"167\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">프로젝트 좌초 가능성이 있어보이는군요</p>\n<p data-ke-size=\"size16\">미소녀 이미지로 유저를 후킹 해보려는 시도를 했었는데</p>\n<p data-ke-size=\"size16\">실패했다고 합니다.</p>",
        "contentSnippet": "썸네일 좀 바꿔야 할꺼 같다...\n(대충 만든 썸네일을 이렇게 많이 쓸지 몰랐다.)\n \n엘릭서 Elixir\n영상: https://www.youtube.com/watch?v=-lgtb-YSUWE&t=901s\n\n\n\n18분대에서 해메고 있다.\n오전에 엘릭서 잠시 손뎄다가 미궁으로 빠졌다.\n \n\n\n핼로우 월드 하나찍는데 뭔가 줄줄이 나온다.\n\n\n코드는 여기 한줄 넣은것 뿐이다.\n빼면 아무것도 찍히지 않고 끝난다.\n\n\n영상에서도 이거에 대해 어렵다고 말은 하는데\n아무도 쉽게 알려주진 않는다.\n시간이 많이 걸릴꺼 같아 일단 접었다.\n \nBBG 프로젝트\nBBG 는 별도의 그룹과 진행중이다.\nUI 를 협업할 수 있게 빼달라는 요청에 어제 다 뺏다.\n협업이 시작되면다시 더많은 버그가 생길 것이다.\n프리팹이 깨지지 않게 분리해주면 연결된 링크가 깨지는 식으로 문제가 생긴다.\n내가 할일은 에디터에서 미리 발견해서\n유저에게 문제가 있는 빌드가 전달 되지 않도록 막는 것이다.\n \nBGG 추가 사항\n\n\n프로젝트 좌초 가능성이 있어보이는군요\n미소녀 이미지로 유저를 후킹 해보려는 시도를 했었는데\n실패했다고 합니다.",
        "guid": "http://serverdown.tistory.com/1327",
        "isoDate": "2025-05-19T03:13:19.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "prisma migrage 꼬인거 해결하기",
        "link": "http://serverdown.tistory.com/1326",
        "pubDate": "Sun, 18 May 2025 19:51:11 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1326#entry1326comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"538\" data-origin-height=\"416\"><span data-url=\"https://blog.kakaocdn.net/dn/v2CzF/btsN00ljWb5/KZK53xuB908DZmwYyeqfkK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/v2CzF/btsN00ljWb5/KZK53xuB908DZmwYyeqfkK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/v2CzF/btsN00ljWb5/KZK53xuB908DZmwYyeqfkK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fv2CzF%2FbtsN00ljWb5%2FKZK53xuB908DZmwYyeqfkK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"538\" height=\"416\" data-origin-width=\"538\" data-origin-height=\"416\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이글 보고 참고 했습니다.</p>\n<p data-ke-size=\"size16\">글: <a href=\"https://jamie-em-lee.tistory.com/115\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://jamie-em-lee.tistory.com/115</a></p>\n<figure id=\"og_1747564561145\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"Prisma 스키마 동기화 중 Schema Drift 발생 시 데이터베이스 리셋 없이 해결하기\" data-og-description=\"개요 내가 일하는 곳은 Prisma + PostgreSQL을 스택으로 한다. 프리즈마 스키마와 데이터베이스 스키마 동기화 과정 중에 발생한 스키마 드리프트(schema drift)를 어떻게 리셋 없이 해결했는지 작성해보\" data-og-host=\"jamie-em-lee.tistory.com\" data-og-source-url=\"https://jamie-em-lee.tistory.com/115\" data-og-url=\"https://jamie-em-lee.tistory.com/115\" data-og-image=\"https://scrap.kakaocdn.net/dn/04YeO/hyYU2xD39a/YsAjU9wFTZxUGGujVnUznk/img.png?width=800&amp;height=800&amp;face=0_0_800_800,https://scrap.kakaocdn.net/dn/kkriH/hyYVaCrkkF/D4K59v3bN7g9yBnGRTVFf0/img.png?width=800&amp;height=800&amp;face=0_0_800_800,https://scrap.kakaocdn.net/dn/dRQZf0/hyYU5ulXSg/PIIqAD00D8YV7IxTHWpBEK/img.png?width=512&amp;height=512&amp;face=0_0_512_512\"><a href=\"https://jamie-em-lee.tistory.com/115\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://jamie-em-lee.tistory.com/115\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/04YeO/hyYU2xD39a/YsAjU9wFTZxUGGujVnUznk/img.png?width=800&amp;height=800&amp;face=0_0_800_800,https://scrap.kakaocdn.net/dn/kkriH/hyYVaCrkkF/D4K59v3bN7g9yBnGRTVFf0/img.png?width=800&amp;height=800&amp;face=0_0_800_800,https://scrap.kakaocdn.net/dn/dRQZf0/hyYU5ulXSg/PIIqAD00D8YV7IxTHWpBEK/img.png?width=512&amp;height=512&amp;face=0_0_512_512');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Prisma 스키마 동기화 중 Schema Drift 발생 시 데이터베이스 리셋 없이 해결하기</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">개요 내가 일하는 곳은 Prisma + PostgreSQL을 스택으로 한다. 프리즈마 스키마와 데이터베이스 스키마 동기화 과정 중에 발생한 스키마 드리프트(schema drift)를 어떻게 리셋 없이 해결했는지 작성해보</p>\n<p class=\"og-host\" data-ke-size=\"size16\">jamie-em-lee.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">글내용이 맞으며 저는 이상한짓을 해서 추가로 작업을 더 해야했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">DateTime 에 기본값을 특정 날짜로 하려다 실패를 했는데 이후에 할줄을 몰라</p>\n<p data-ke-size=\"size16\">/prisma/migrate 폴더를 주워 보기도 하고</p>\n<p data-ke-size=\"size16\">db 에 _prisma_migrations 테이블을 지워보기도 했는데&nbsp;</p>\n<p data-ke-size=\"size16\">이러면 더 꼬여버려서 db 지우고 다시하라는 애러가 뜬 상태였습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"730\" data-origin-height=\"130\"><span data-url=\"https://blog.kakaocdn.net/dn/bvGf7B/btsN1fWNQ9T/wntsMeyzNUA3zR2MMCkNjK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bvGf7B/btsN1fWNQ9T/wntsMeyzNUA3zR2MMCkNjK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bvGf7B/btsN1fWNQ9T/wntsMeyzNUA3zR2MMCkNjK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbvGf7B%2FbtsN1fWNQ9T%2FwntsMeyzNUA3zR2MMCkNjK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"730\" height=\"130\" data-origin-width=\"730\" data-origin-height=\"130\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">reset 을 하면 말그대로 디비가 다 날아가서 텅빈 상태가 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">먼저 db 와 내 schema.prisma 와의 차이를 구합니다.</p>\n<p data-ke-size=\"size16\"><br />npx&nbsp;prisma&nbsp;migrate&nbsp;diff&nbsp;` <br />&nbsp; &nbsp; --from-schema-datasource .\\prisma\\schema.prisma ` <br />&nbsp; &nbsp; --to-schema-datamodel .\\prisma\\schema.prisma ` <br />&nbsp; &nbsp; --script &gt; .\\prisma\\rollback.sql </p>\n<p data-ke-size=\"size16\">VSCODE 에서 열어봅니다.</p>\n<p data-ke-size=\"size16\">powershell 에서는 ` 글자(숫자1 왼족의 키) 가 멀티라인 명령어를 의미합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"694\" data-origin-height=\"144\"><span data-url=\"https://blog.kakaocdn.net/dn/bnnPtU/btsN2rhnJlq/zikz477QtXTrnSHqtak7ok/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bnnPtU/btsN2rhnJlq/zikz477QtXTrnSHqtak7ok/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bnnPtU/btsN2rhnJlq/zikz477QtXTrnSHqtak7ok/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbnnPtU%2FbtsN2rhnJlq%2Fzikz477QtXTrnSHqtak7ok%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"694\" height=\"144\" data-origin-width=\"694\" data-origin-height=\"144\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">powershell 에서 텍스트를 추출하면 utf-16 이 되는거 같습니다.</p>\n<p data-ke-size=\"size16\">이 상태로는 사용할 수 없으니 utf-8 로 변경해줍니다.</p>\n<p data-ke-size=\"size16\">[UTF-16] 이라고 표시된 부분을 클릭합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"298\" data-origin-height=\"140\"><span data-url=\"https://blog.kakaocdn.net/dn/sqiBq/btsN3i44NKk/Hpkb7BcB9wWkVgzLwZ5Nm1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/sqiBq/btsN3i44NKk/Hpkb7BcB9wWkVgzLwZ5Nm1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/sqiBq/btsN3i44NKk/Hpkb7BcB9wWkVgzLwZ5Nm1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FsqiBq%2FbtsN3i44NKk%2FHpkb7BcB9wWkVgzLwZ5Nm1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"298\" height=\"140\" data-origin-width=\"298\" data-origin-height=\"140\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">상단에 Save with Encoding 누릅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"274\" data-origin-height=\"167\"><span data-url=\"https://blog.kakaocdn.net/dn/c2pTeC/btsN1jdRFzu/36khUHmX5AS51HmOnj2Vg0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c2pTeC/btsN1jdRFzu/36khUHmX5AS51HmOnj2Vg0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c2pTeC/btsN1jdRFzu/36khUHmX5AS51HmOnj2Vg0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc2pTeC%2FbtsN1jdRFzu%2F36khUHmX5AS51HmOnj2Vg0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"274\" height=\"167\" data-origin-width=\"274\" data-origin-height=\"167\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">UTF-8 고릅니다.</p>\n<p data-ke-size=\"size16\">UTF-8 with BOM 은 안해봤습니다. 글자 앞에 2글자의 특수값이 들어가는데 없어도 될꺼 같습니다.</p>\n<p data-ke-size=\"size16\">npx&nbsp;prisma&nbsp;db&nbsp;execute&nbsp;` <br />&nbsp; &nbsp; --file .\\prisma\\rollback.sql ` <br />&nbsp; &nbsp; --schema .\\prisma\\schema.prisma </p>\n<p data-ke-size=\"size16\">쿼리를 전송합니다.</p>\n<p data-ke-size=\"size16\">성공하면 이다음부터는 정상적으로 사용 가능합니다.</p>\n<p data-ke-size=\"size16\">npx&nbsp;prisma&nbsp;migrate&nbsp;dev</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저는 위에서한 뻘짓 때문에 살아나지 못했고</p>\n<p data-ke-size=\"size16\">db 백업후에 다 날리고 reset 하고 마이그래이트 다시 진행했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "이글 보고 참고 했습니다.\n글: https://jamie-em-lee.tistory.com/115\n\n \nPrisma 스키마 동기화 중 Schema Drift 발생 시 데이터베이스 리셋 없이 해결하기\n개요 내가 일하는 곳은 Prisma + PostgreSQL을 스택으로 한다. 프리즈마 스키마와 데이터베이스 스키마 동기화 과정 중에 발생한 스키마 드리프트(schema drift)를 어떻게 리셋 없이 해결했는지 작성해보\njamie-em-lee.tistory.com\n\n \n글내용이 맞으며 저는 이상한짓을 해서 추가로 작업을 더 해야했습니다.\n \nDateTime 에 기본값을 특정 날짜로 하려다 실패를 했는데 이후에 할줄을 몰라\n/prisma/migrate 폴더를 주워 보기도 하고\ndb 에 _prisma_migrations 테이블을 지워보기도 했는데 \n이러면 더 꼬여버려서 db 지우고 다시하라는 애러가 뜬 상태였습니다.\n\n\nreset 을 하면 말그대로 디비가 다 날아가서 텅빈 상태가 됩니다.\n \n먼저 db 와 내 schema.prisma 와의 차이를 구합니다.\nnpx prisma migrate diff ` \n    --from-schema-datasource .\\prisma\\schema.prisma ` \n    --to-schema-datamodel .\\prisma\\schema.prisma ` \n    --script > .\\prisma\\rollback.sql \nVSCODE 에서 열어봅니다.\npowershell 에서는 ` 글자(숫자1 왼족의 키) 가 멀티라인 명령어를 의미합니다.\n\n\npowershell 에서 텍스트를 추출하면 utf-16 이 되는거 같습니다.\n이 상태로는 사용할 수 없으니 utf-8 로 변경해줍니다.\n[UTF-16] 이라고 표시된 부분을 클릭합니다.\n\n\n상단에 Save with Encoding 누릅니다.\n\n\nUTF-8 고릅니다.\nUTF-8 with BOM 은 안해봤습니다. 글자 앞에 2글자의 특수값이 들어가는데 없어도 될꺼 같습니다.\nnpx prisma db execute ` \n    --file .\\prisma\\rollback.sql ` \n    --schema .\\prisma\\schema.prisma \n쿼리를 전송합니다.\n성공하면 이다음부터는 정상적으로 사용 가능합니다.\nnpx prisma migrate dev\n \n저는 위에서한 뻘짓 때문에 살아나지 못했고\ndb 백업후에 다 날리고 reset 하고 마이그래이트 다시 진행했습니다.",
        "guid": "http://serverdown.tistory.com/1326",
        "categories": [
          "프로그래밍/개발메모",
          "Prisma",
          "문제해결",
          "프리스마"
        ],
        "isoDate": "2025-05-18T10:51:11.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2025-05-18 (일) 개발일지 / 로그 찍다 서버  쥬금",
        "link": "http://serverdown.tistory.com/1325",
        "pubDate": "Sun, 18 May 2025 12:23:21 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1325#entry1325comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"607\" data-origin-height=\"404\"><span data-url=\"https://blog.kakaocdn.net/dn/b7S7Sb/btsN2GLZAv1/Ny0e4rvTireruKI8OIhvq1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b7S7Sb/btsN2GLZAv1/Ny0e4rvTireruKI8OIhvq1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b7S7Sb/btsN2GLZAv1/Ny0e4rvTireruKI8OIhvq1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb7S7Sb%2FbtsN2GLZAv1%2FNy0e4rvTireruKI8OIhvq1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"607\" height=\"404\" data-origin-width=\"607\" data-origin-height=\"404\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1. console.info 함수를 덮어 썼는데 죽어버렸다.</p>\n<p data-ke-size=\"size16\">express 에서 req.params 를 로그를 찍었는데 프로그램이 예외를 밷으면 처리를 못했습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"987\" data-origin-height=\"276\"><span data-url=\"https://blog.kakaocdn.net/dn/BXOaJ/btsN2mNJZY7/tsafyYaaT8NNTJse9kE3FK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/BXOaJ/btsN2mNJZY7/tsafyYaaT8NNTJse9kE3FK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/BXOaJ/btsN2mNJZY7/tsafyYaaT8NNTJse9kE3FK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FBXOaJ%2FbtsN2mNJZY7%2FtsafyYaaT8NNTJse9kE3FK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"987\" height=\"276\" data-origin-width=\"987\" data-origin-height=\"276\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">거의 2시간을 디버깅 해서 찾았는데 황당하군요</p>\n<p data-ke-size=\"size16\">console.info 를 winston 의 로그 함수로 교체를 했는데</p>\n<p data-ke-size=\"size16\">예가 object 를 인자로 받으면 로그를 찍다 말고 예외를 던져버렸습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">시간낭비 갑이군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">로그 함수 내부에 try-catch 걸고.</h3>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #569cd6;\">type</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #4ec9b0;\">LOG_FUNC</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> (</span><span style=\"color: #9cdcfe;\">text</span><span style=\"color: #d4d4d4;\">:</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #4ec9b0;\">string</span><span style=\"color: #ffffff;\">) </span><span style=\"color: #569cd6;\">=&gt;</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #4ec9b0;\">void</span><span style=\"color: #ffffff;\">;</span></div>\n<div><span style=\"color: #569cd6;\">function</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #dcdcaa;\">log_write</span><span style=\"color: #ffffff;\">(</span><span style=\"color: #dcdcaa;\">func</span><span style=\"color: #d4d4d4;\">:</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #4ec9b0;\">LOG_FUNC</span><span style=\"color: #ffffff;\">, </span><span style=\"color: #9cdcfe;\">arr</span><span style=\"color: #d4d4d4;\">:</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #4ec9b0;\">any</span><span style=\"color: #ffffff;\">[]) {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; </span><span style=\"color: #c586c0;\">try</span><span style=\"color: #ffffff;\"> {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #569cd6;\">let</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">output</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #ce9178;\">\"\"</span><span style=\"color: #ffffff;\">;</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #c586c0;\">for</span><span style=\"color: #ffffff;\"> (</span><span style=\"color: #569cd6;\">let</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #b5cea8;\">0</span><span style=\"color: #ffffff;\">; </span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">&lt;</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">arr</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #9cdcfe;\">length</span><span style=\"color: #ffffff;\">; </span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #d4d4d4;\">++</span><span style=\"color: #ffffff;\">) {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #ffffff;\"> (</span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">!=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #b5cea8;\">0</span><span style=\"color: #ffffff;\">) </span><span style=\"color: #9cdcfe;\">output</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">+=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #ce9178;\">\" \"</span><span style=\"color: #ffffff;\">;</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; </span><span style=\"color: #569cd6;\">const</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">data</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">arr</span><span style=\"color: #ffffff;\">[</span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #ffffff;\">];</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; </span><span style=\"color: #c586c0;\">if</span><span style=\"color: #ffffff;\"> (</span><span style=\"color: #569cd6;\">typeof</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">data</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">==</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #ce9178;\">\"object\"</span><span style=\"color: #ffffff;\">) {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\"color: #9cdcfe;\">output</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">+=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">JSON</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #dcdcaa;\">stringify</span><span style=\"color: #ffffff;\">(</span><span style=\"color: #9cdcfe;\">data</span><span style=\"color: #ffffff;\">);</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; } </span><span style=\"color: #c586c0;\">else</span><span style=\"color: #ffffff;\"> {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\"color: #9cdcfe;\">output</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">+=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">data</span><span style=\"color: #ffffff;\">;</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; &nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; }</span></div>\n<br />\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #dcdcaa;\">func</span><span style=\"color: #ffffff;\">(</span><span style=\"color: #9cdcfe;\">output</span><span style=\"color: #ffffff;\">);</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; } </span><span style=\"color: #c586c0;\">catch</span><span style=\"color: #ffffff;\"> (</span><span style=\"color: #9cdcfe;\">err</span><span style=\"color: #ffffff;\">) {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #569cd6;\">const</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">e</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">err</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #c586c0;\">as</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #4ec9b0;\">Error</span><span style=\"color: #ffffff;\">;</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #dcdcaa;\">func</span><span style=\"color: #ffffff;\">(</span><span style=\"color: #ce9178;\">`log_write_fail </span><span style=\"color: #569cd6;\">${</span><span style=\"color: #9cdcfe;\">e</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #9cdcfe;\">message</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\"> </span><span style=\"color: #569cd6;\">${</span><span style=\"color: #9cdcfe;\">e</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #9cdcfe;\">stack</span><span style=\"color: #569cd6;\">}</span><span style=\"color: #ce9178;\">`</span><span style=\"color: #ffffff;\">);</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">}</span></div>\n<br />\n<div><span style=\"color: #9cdcfe;\">console</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #dcdcaa;\">info</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #569cd6;\">function</span><span style=\"color: #ffffff;\"> () {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; </span><span style=\"color: #569cd6;\">const</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">arr</span><span style=\"color: #d4d4d4;\">:</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #4ec9b0;\">any</span><span style=\"color: #ffffff;\">[] </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> [];</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; </span><span style=\"color: #c586c0;\">for</span><span style=\"color: #ffffff;\"> (</span><span style=\"color: #569cd6;\">let</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #b5cea8;\">0</span><span style=\"color: #ffffff;\">; </span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">&lt;</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">arguments</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #9cdcfe;\">length</span><span style=\"color: #ffffff;\">; </span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #d4d4d4;\">++</span><span style=\"color: #ffffff;\">) {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #569cd6;\">const</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">data</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #d4d4d4;\">=</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">arguments</span><span style=\"color: #ffffff;\">[</span><span style=\"color: #9cdcfe;\">i</span><span style=\"color: #ffffff;\">];</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #9cdcfe;\">arr</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #dcdcaa;\">push</span><span style=\"color: #ffffff;\">(</span><span style=\"color: #9cdcfe;\">data</span><span style=\"color: #ffffff;\">);</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; }</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; </span><span style=\"color: #dcdcaa;\">log_write</span><span style=\"color: #ffffff;\">(</span><span style=\"color: #9cdcfe;\">logger</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #dcdcaa;\">info</span><span style=\"color: #ffffff;\">, </span><span style=\"color: #9cdcfe;\">arr</span><span style=\"color: #ffffff;\">);</span></div>\n<div><span style=\"color: #ffffff;\">};</span></div>\n</div>\n<p data-ke-size=\"size16\">시간 낭비로 일요일을 시작했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "1. console.info 함수를 덮어 썼는데 죽어버렸다.\nexpress 에서 req.params 를 로그를 찍었는데 프로그램이 예외를 밷으면 처리를 못했습니다.\n\n\n거의 2시간을 디버깅 해서 찾았는데 황당하군요\nconsole.info 를 winston 의 로그 함수로 교체를 했는데\n예가 object 를 인자로 받으면 로그를 찍다 말고 예외를 던져버렸습니다. \n시간낭비 갑이군요\n \n로그 함수 내부에 try-catch 걸고.\ntype LOG_FUNC = (text: string) => void;\nfunction log_write(func: LOG_FUNC, arr: any[]) {\n  try {\n    let output = \"\";\n    for (let i = 0; i < arr.length; i++) {\n      if (i != 0) output += \" \";\n      const data = arr[i];\n      if (typeof data == \"object\") {\n        output += JSON.stringify(data);\n      } else {\n        output += data;\n      }\n    }\n    func(output);\n  } catch (err) {\n    const e = err as Error;\n    func(`log_write_fail ${e.message} ${e.stack}`);\n  }\n}\nconsole.info = function () {\n  const arr: any[] = [];\n  for (let i = 0; i < arguments.length; i++) {\n    const data = arguments[i];\n    arr.push(data);\n  }\n  log_write(logger.info, arr);\n};\n시간 낭비로 일요일을 시작했습니다.",
        "guid": "http://serverdown.tistory.com/1325",
        "categories": [
          "프로그래밍/개발메모",
          "업데이트",
          "작업일지"
        ],
        "isoDate": "2025-05-18T03:23:21.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2025-05-17 (토) 개발일지 / 서버 죽음 / 개인정보처리방침",
        "link": "http://serverdown.tistory.com/1324",
        "pubDate": "Sat, 17 May 2025 13:03:56 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1324#entry1324comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"607\" data-origin-height=\"404\"><span data-url=\"https://blog.kakaocdn.net/dn/Sd1Vg/btsN2QHAe9Q/v5kqzFgPiwu425Ppim3U7K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Sd1Vg/btsN2QHAe9Q/v5kqzFgPiwu425Ppim3U7K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Sd1Vg/btsN2QHAe9Q/v5kqzFgPiwu425Ppim3U7K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FSd1Vg%2FbtsN2QHAe9Q%2Fv5kqzFgPiwu425Ppim3U7K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"607\" height=\"404\" data-origin-width=\"607\" data-origin-height=\"404\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">1. 죽은 웹서버 원인 파악</h2>\n<p data-ke-size=\"size16\">일어나보니 웹서버가 죽어있었습니다.</p>\n<p data-ke-size=\"size16\">누가 /?XDEBUG_SESSION_START=phpstorm</p>\n<p data-ke-size=\"size16\">이런식으로 호출했나봅니다.</p>\n<p data-ke-size=\"size16\">phpstorm 의 취약점을 노리는 걸까요</p>\n<p data-ke-size=\"size16\">제 express 서버는 없는 파일에 대한 예외처리가 없어서 프로그램이 종료되었습니다.</p>\n<p data-ke-size=\"size16\">ENOENT:&nbsp;no&nbsp;such&nbsp;file&nbsp;or&nbsp;directory,&nbsp;open&nbsp;'/home/gunil/pto/node-sidnft-firebase/pi4server/public/?XDEBUG_SESSION_START=phpstorm' <br />&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;\"/home/gunil/pto/node-sidnft-firebase/pi4server/public/?XDEBUG_SESSION_START=phpstorm\", <br />&nbsp;syscall:&nbsp;\"open\", <br />&nbsp;&nbsp;&nbsp;errno:&nbsp;-2, <br />&nbsp;&nbsp;&nbsp;&nbsp;code: \"ENOENT\"</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"540\" data-origin-height=\"432\"><span data-url=\"https://blog.kakaocdn.net/dn/bs05GO/btsN1ck4Bho/Dv56WcdDOTxdbuAz6fz3OK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bs05GO/btsN1ck4Bho/Dv56WcdDOTxdbuAz6fz3OK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bs05GO/btsN1ck4Bho/Dv56WcdDOTxdbuAz6fz3OK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbs05GO%2FbtsN1ck4Bho%2FDv56WcdDOTxdbuAz6fz3OK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"540\" height=\"432\" data-origin-width=\"540\" data-origin-height=\"432\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">아래에 catch 가 있지만 이곳으로 예외가 오진 않습니다.</p>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #4ec9b0;\">fs</span><span style=\"color: #ffffff;\">.</span><span style=\"color: #dcdcaa;\">createReadStream</span></div>\n</div>\n<p data-ke-size=\"size16\">함수는 await 로 실행되는게 아니라서 다른 분기를 타는 것이겠지요</p>\n<p data-ke-size=\"size16\">전용 에러 처리함수인 on(\"error\" ~~~) f를 추가로 넣었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2. 신규 앱 심사&nbsp; 거부 사유 체크</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"439\" data-origin-height=\"152\"><span data-url=\"https://blog.kakaocdn.net/dn/8hdt5/btsN1hUqn7R/xiHofwLwarWKRpTohomBIK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/8hdt5/btsN1hUqn7R/xiHofwLwarWKRpTohomBIK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/8hdt5/btsN1hUqn7R/xiHofwLwarWKRpTohomBIK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F8hdt5%2FbtsN1hUqn7R%2FxiHofwLwarWKRpTohomBIK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"439\" height=\"152\" data-origin-width=\"439\" data-origin-height=\"152\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">오래전에 웹 페이지를 만들고 관리를 안했는데<br />개인정보처리방침 부분은 날림으로 만들었습니다..</p>\n<p data-ke-size=\"size16\">\" <span style=\"text-align: start;\">개인정보처리방침\" 이라는 문구가 표시되어야하고 ....</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">타이틀에도 표시하라고 본문에도 영어/한국어 다 적었습니다.<br /></span><span style=\"text-align: start;\">타이틀 수정은 자바스크립트로</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">document.title = \"~~~\";</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"> 이런식으로 하면 바로 바꼈습니다.</span></p>\n<p data-ke-size=\"size16\">추가로 혹시나 해서 개인정보처리방침 URL 도 수정해서 다시 검토 신청 했습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "1. 죽은 웹서버 원인 파악\n일어나보니 웹서버가 죽어있었습니다.\n누가 /?XDEBUG_SESSION_START=phpstorm\n이런식으로 호출했나봅니다.\nphpstorm 의 취약점을 노리는 걸까요\n제 express 서버는 없는 파일에 대한 예외처리가 없어서 프로그램이 종료되었습니다.\nENOENT: no such file or directory, open '/home/gunil/pto/node-sidnft-firebase/pi4server/public/?XDEBUG_SESSION_START=phpstorm' \n    path: \"/home/gunil/pto/node-sidnft-firebase/pi4server/public/?XDEBUG_SESSION_START=phpstorm\", \n syscall: \"open\", \n   errno: -2, \n    code: \"ENOENT\"\n \n\n\n아래에 catch 가 있지만 이곳으로 예외가 오진 않습니다.\nfs.createReadStream\n함수는 await 로 실행되는게 아니라서 다른 분기를 타는 것이겠지요\n전용 에러 처리함수인 on(\"error\" ~~~) f를 추가로 넣었습니다.\n \n2. 신규 앱 심사  거부 사유 체크\n\n\n오래전에 웹 페이지를 만들고 관리를 안했는데\n개인정보처리방침 부분은 날림으로 만들었습니다..\n\" 개인정보처리방침\" 이라는 문구가 표시되어야하고 ....\n타이틀에도 표시하라고 본문에도 영어/한국어 다 적었습니다.\n타이틀 수정은 자바스크립트로\ndocument.title = \"~~~\";\n 이런식으로 하면 바로 바꼈습니다.\n추가로 혹시나 해서 개인정보처리방침 URL 도 수정해서 다시 검토 신청 했습니다.",
        "guid": "http://serverdown.tistory.com/1324",
        "categories": [
          "프로그래밍/개발메모",
          "Express",
          "업데이트",
          "작업일지"
        ],
        "isoDate": "2025-05-17T04:03:56.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "2025-05-16 (금) 개발일지",
        "link": "http://serverdown.tistory.com/1323",
        "pubDate": "Fri, 16 May 2025 12:46:59 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1323#entry1323comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"607\" data-origin-height=\"404\"><span data-url=\"https://blog.kakaocdn.net/dn/byalYp/btsNYVcKDUh/kLJuwldmxRKGx3puWH5pyK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/byalYp/btsNYVcKDUh/kLJuwldmxRKGx3puWH5pyK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/byalYp/btsNYVcKDUh/kLJuwldmxRKGx3puWH5pyK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbyalYp%2FbtsNYVcKDUh%2FkLJuwldmxRKGx3puWH5pyK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"607\" height=\"404\" data-origin-width=\"607\" data-origin-height=\"404\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">1. 앨릭서 시작</h2>\n<p data-ke-size=\"size16\">영상과 버전이 달라서 명령어가 이상하게 동작했다.</p>\n<p data-ke-size=\"size16\">큰일이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=IiIgm_yaoOA&amp;t=1578s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=IiIgm_yaoOA&amp;t=1578s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=IiIgm_yaoOA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/ilef3/hyYU933yt9/MNQMp9WccK4HH1k2kRCIek/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/dY93fI/hyYThBLsNR/9ixPj3QZaftUK86TOxx7lK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Functional Programming with Elixir &ndash; Full Course\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/IiIgm_yaoOA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">영상의; 상황</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1446\" data-origin-height=\"273\"><span data-url=\"https://blog.kakaocdn.net/dn/d4Sm5Q/btsNYIEEIi6/a00xk1hRgElucgCC9Hfmjk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/d4Sm5Q/btsNYIEEIi6/a00xk1hRgElucgCC9Hfmjk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/d4Sm5Q/btsNYIEEIi6/a00xk1hRgElucgCC9Hfmjk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd4Sm5Q%2FbtsNYIEEIi6%2Fa00xk1hRgElucgCC9Hfmjk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1446\" height=\"273\" data-origin-width=\"1446\" data-origin-height=\"273\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">내 상태</p>\n<p data-ke-size=\"size16\">$&nbsp;elixir&nbsp;-v <br />Erlang/OTP&nbsp;27&nbsp;[erts-15.2.7]&nbsp;[source]&nbsp;[64-bit]&nbsp;[smp:12:12]&nbsp;[ds:12:12:10]&nbsp;[async-threads:1]&nbsp;[jit:ns] <br /><br />Elixir&nbsp;1.18.3&nbsp;(compiled&nbsp;with&nbsp;Erlang/OTP&nbsp;25)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">설치 페이지에서 제공되는 버전</p>\n<p data-ke-size=\"size16\">설치페이지: <a href=\"https://elixir-lang.org/install.html#windows\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://elixir-lang.org/install.html#windows</a></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"511\" data-origin-height=\"377\"><span data-url=\"https://blog.kakaocdn.net/dn/cBupVS/btsNYHTeQUw/lK6tuS7MUWPA8DutNy8WKK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cBupVS/btsNYHTeQUw/lK6tuS7MUWPA8DutNy8WKK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cBupVS/btsNYHTeQUw/lK6tuS7MUWPA8DutNy8WKK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcBupVS%2FbtsNYHTeQUw%2FlK6tuS7MUWPA8DutNy8WKK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"511\" height=\"377\" data-origin-width=\"511\" data-origin-height=\"377\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">iex 하면 프로그램가능한 상태가 되어야하는데 나는 추가 명령어를 오청받고 있다.</p>\n<p data-ke-size=\"size16\">컴터 재부팅하니 영상처럼 프로그램 가능한 상태로 돌아왔다.</p>\n<p data-ke-size=\"size16\">다행이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2. 비트액스 홈페이지 개선</h2>\n<p data-ke-size=\"size16\">기기별 가성비 추천을 해주려는데 아직은 보기 불편하다.</p>\n<p data-ke-size=\"size16\">해시레이트 / 소비전력 =&gt; 성능<br />성능 / 가격 =&gt; 가성비</p>\n<p data-ke-size=\"size16\">이런식으로 표시해야겠다.</p>\n<p data-ke-size=\"size16\">가격이 중요하니 유저들보고 가격 넣으라고 하면 좋을꺼 같다.</p>\n<h3 data-ke-size=\"size23\">수정전&nbsp;</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"623\" data-origin-height=\"556\"><span data-url=\"https://blog.kakaocdn.net/dn/bT903b/btsNYCLfff6/RKIWURhKHUkOOUPBnaxfTk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bT903b/btsNYCLfff6/RKIWURhKHUkOOUPBnaxfTk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bT903b/btsNYCLfff6/RKIWURhKHUkOOUPBnaxfTk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbT903b%2FbtsNYCLfff6%2FRKIWURhKHUkOOUPBnaxfTk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"623\" height=\"556\" data-origin-width=\"623\" data-origin-height=\"556\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\">화면엔 안보이지만&nbsp; 가로로 스크롤도 표시되고 잇다.</p>\n<p data-ke-size=\"size18\">화면크기보다 큰 페이지가 표시되는거 같다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\">고친 후</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"248\" data-origin-height=\"344\"><span data-url=\"https://blog.kakaocdn.net/dn/XfVqg/btsNZfWKqO3/sHrfwmtnMswT3RBk4UpoV0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/XfVqg/btsNZfWKqO3/sHrfwmtnMswT3RBk4UpoV0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/XfVqg/btsNZfWKqO3/sHrfwmtnMswT3RBk4UpoV0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FXfVqg%2FbtsNZfWKqO3%2FsHrfwmtnMswT3RBk4UpoV0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"248\" height=\"344\" data-origin-width=\"248\" data-origin-height=\"344\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">왜이케 비였냐...</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이상한 가로 스크롤 자꾸 생겨서 보기 안좋았다.</span></p>\n<p data-ke-size=\"size16\">페이지 시작할때 이거 두개를 넣어줘서 해결했는데 모든 사이트에 적용해야겠다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"639\" data-origin-height=\"189\"><span data-url=\"https://blog.kakaocdn.net/dn/dLLL62/btsN1gGrpEg/OYAujOKXmKhugQAJiR0ed1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dLLL62/btsN1gGrpEg/OYAujOKXmKhugQAJiR0ed1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dLLL62/btsN1gGrpEg/OYAujOKXmKhugQAJiR0ed1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdLLL62%2FbtsN1gGrpEg%2FOYAujOKXmKhugQAJiR0ed1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"639\" height=\"189\" data-origin-width=\"639\" data-origin-height=\"189\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">3. apps 의 모바일 표시가 이상하다.</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"301\" data-origin-height=\"312\"><span data-url=\"https://blog.kakaocdn.net/dn/ct3LQb/btsNYtgJctu/UOFv18ohgmt5yyEu0jtUj0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ct3LQb/btsNYtgJctu/UOFv18ohgmt5yyEu0jtUj0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ct3LQb/btsNYtgJctu/UOFv18ohgmt5yyEu0jtUj0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fct3LQb%2FbtsNYtgJctu%2FUOFv18ohgmt5yyEu0jtUj0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"301\" height=\"312\" data-origin-width=\"301\" data-origin-height=\"312\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">위에 비트액스랑 동일한 문제인데.</p>\n<p data-ke-size=\"size16\">같이 수정해줘야겠다.</p>\n<h3 data-ke-size=\"size23\">수정후:</h3>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">결과 페이지:<span>&nbsp;</span></span><a href=\"https://apps.sidnft.com/\">https://apps.sidnft.com/</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #000000; color: #000000;\" data-ke-size=\"size16\">수정후 영상:<span>&nbsp;</span><a href=\"https://youtu.be/z5BdUTrJC8w\">https://youtu.be/z5BdUTrJC8w</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=z5BdUTrJC8w\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/zi5bx/hyYRrL7eph/eHnQnckYs4Kyf5Iv5uQjxK/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360,https://scrap.kakaocdn.net/dn/SwVCV/hyYTb9vifz/8J8oTm1fviwXhyaP8B6uBk/img.jpg?width=480&amp;height=360&amp;face=0_0_480_360\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"웹 해상도 대응\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/z5BdUTrJC8w\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">1. 좌우 스크롤을 제거함 (화면 크기보다 큰 무언가가 있어서 제거했음)<br />2. 모바일 해상도 대응</p>\n<p data-ke-size=\"size16\">완성도좀 높이자!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "1. 앨릭서 시작\n영상과 버전이 달라서 명령어가 이상하게 동작했다.\n큰일이다.\n \n영상: https://www.youtube.com/watch?v=IiIgm_yaoOA&t=1578s\n\n\n\n영상의; 상황\n\n\n내 상태\n$ elixir -v \nErlang/OTP 27 [erts-15.2.7] [source] [64-bit] [smp:12:12] [ds:12:12:10] [async-threads:1] [jit:ns] \nElixir 1.18.3 (compiled with Erlang/OTP 25)\n \n설치 페이지에서 제공되는 버전\n설치페이지: https://elixir-lang.org/install.html#windows\n\n\niex 하면 프로그램가능한 상태가 되어야하는데 나는 추가 명령어를 오청받고 있다.\n컴터 재부팅하니 영상처럼 프로그램 가능한 상태로 돌아왔다.\n다행이다.\n \n \n \n \n2. 비트액스 홈페이지 개선\n기기별 가성비 추천을 해주려는데 아직은 보기 불편하다.\n해시레이트 / 소비전력 => 성능\n성능 / 가격 => 가성비\n이런식으로 표시해야겠다.\n가격이 중요하니 유저들보고 가격 넣으라고 하면 좋을꺼 같다.\n수정전 \n\n\n화면엔 안보이지만  가로로 스크롤도 표시되고 잇다.\n화면크기보다 큰 페이지가 표시되는거 같다.\n \n고친 후\n\n\n왜이케 비였냐...\n이상한 가로 스크롤 자꾸 생겨서 보기 안좋았다.\n페이지 시작할때 이거 두개를 넣어줘서 해결했는데 모든 사이트에 적용해야겠다.\n\n\n \n \n3. apps 의 모바일 표시가 이상하다.\n\n\n위에 비트액스랑 동일한 문제인데.\n같이 수정해줘야겠다.\n수정후:\n결과 페이지: https://apps.sidnft.com/\n \n수정후 영상: https://youtu.be/z5BdUTrJC8w\n\n\n\n1. 좌우 스크롤을 제거함 (화면 크기보다 큰 무언가가 있어서 제거했음)\n2. 모바일 해상도 대응\n완성도좀 높이자!",
        "guid": "http://serverdown.tistory.com/1323",
        "categories": [
          "프로그래밍/개발메모",
          "개발일지"
        ],
        "isoDate": "2025-05-16T03:46:59.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "대규모 서비스 Elixir 엘릭서를 배워야하는 이유",
        "link": "http://serverdown.tistory.com/1322",
        "pubDate": "Thu, 15 May 2025 17:36:26 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1322#entry1322comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"607\" data-origin-height=\"404\"><span data-url=\"https://blog.kakaocdn.net/dn/zfoAo/btsNZIpCz4m/1bUFWyj9AkFtsVv6miNpR0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/zfoAo/btsNZIpCz4m/1bUFWyj9AkFtsVv6miNpR0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/zfoAo/btsNZIpCz4m/1bUFWyj9AkFtsVv6miNpR0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzfoAo%2FbtsNZIpCz4m%2F1bUFWyj9AkFtsVv6miNpR0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"607\" height=\"404\" data-origin-width=\"607\" data-origin-height=\"404\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">선행지식 엘릭서는 얼랭의 상위 호한 언어입니다.</span></p>\n<p data-ke-size=\"size16\">얼랭에서 되는건 엘릭서에서 다 된다고 보시면 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=Rjyf_dELAeg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=Rjyf_dELAeg</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=Rjyf_dELAeg\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bxxJDS/hyYU7E2SBt/yCftcU6yp2FeKDpxfh6jqK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/52ABQ/hyYRk67qK6/IfFXekYyJpAtzT2fagw8jK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[OKKY 3월 세미나] Elixir: 대용량 분산 웹개발의 혁명 (부제: Java / C++ / Python이 OOP 언어가 아닌 이유)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/Rjyf_dELAeg\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">1:17:00&nbsp;</p>\n<p data-ke-size=\"size16\">텔레그램과 디스코드 는 아주 많은 유저를 처리해야하는 서비스인데</p>\n<p data-ke-size=\"size16\">소규모팀으로 운영되고 있다.</p>\n<p data-ke-size=\"size16\">이것이 가능한 이유는 얼랭의 여러대의 컴퓨터를 하나의 컴퓨터 처럼 동작시킬 수 있다는 점 때문이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">얼랭은 다른 컴퓨터의 함수를 실행시킬 수 는 언어입니다.</p>\n<p data-ke-size=\"size16\">마치 모든 함수가자동으로 rest 서비스를 한는것 처럼 구현되어있는데요</p>\n<p data-ke-size=\"size16\">이 점을 이용하면 아무 컴퓨터에대가 명령을 던져 실행시킬 수 잇습니다.</p>\n<p data-ke-size=\"size16\">그점을 이용한거 같군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">초반에 장점중에 아주큰 숫자를 문제 없이 처리할 수 있는 기능도 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">중간에는 웹소켓에 대한 이야기도 나오는데요</p>\n<p data-ke-size=\"size16\">웹이 처음부터 웹소켓이 되었다면 지금처럼 페이지 받고 데이터 받고 하는 식으로 개발이 되었겠느냐는 이야기도 있습니다.</p>\n<p data-ke-size=\"size16\">엘릭서를 잘 이용하면 클라이언트 쪽에는 아주 작은 자바스크립트 하나만 있고</p>\n<p data-ke-size=\"size16\">웹소켓으로 서버쪽 함수를 호출해 이것 저것 가져올 수 도 있을거 같습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">러스트도 다 죽은 마당에 엘릭서를 배워볼까 하는 생각이 드는 영상이였습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "선행지식 엘릭서는 얼랭의 상위 호한 언어입니다.\n얼랭에서 되는건 엘릭서에서 다 된다고 보시면 됩니다.\n \n영상: https://www.youtube.com/watch?v=Rjyf_dELAeg\n\n\n\n \n1:17:00 \n텔레그램과 디스코드 는 아주 많은 유저를 처리해야하는 서비스인데\n소규모팀으로 운영되고 있다.\n이것이 가능한 이유는 얼랭의 여러대의 컴퓨터를 하나의 컴퓨터 처럼 동작시킬 수 있다는 점 때문이다.\n \n얼랭은 다른 컴퓨터의 함수를 실행시킬 수 는 언어입니다.\n마치 모든 함수가자동으로 rest 서비스를 한는것 처럼 구현되어있는데요\n이 점을 이용하면 아무 컴퓨터에대가 명령을 던져 실행시킬 수 잇습니다.\n그점을 이용한거 같군요\n \n초반에 장점중에 아주큰 숫자를 문제 없이 처리할 수 있는 기능도 있습니다.\n \n중간에는 웹소켓에 대한 이야기도 나오는데요\n웹이 처음부터 웹소켓이 되었다면 지금처럼 페이지 받고 데이터 받고 하는 식으로 개발이 되었겠느냐는 이야기도 있습니다.\n엘릭서를 잘 이용하면 클라이언트 쪽에는 아주 작은 자바스크립트 하나만 있고\n웹소켓으로 서버쪽 함수를 호출해 이것 저것 가져올 수 도 있을거 같습니다.\n \n러스트도 다 죽은 마당에 엘릭서를 배워볼까 하는 생각이 드는 영상이였습니다.",
        "guid": "http://serverdown.tistory.com/1322",
        "categories": [
          "프로그래밍/개발메모",
          "elixir",
          "언어",
          "엘릭서",
          "프로그래밍"
        ],
        "isoDate": "2025-05-15T08:36:26.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "프로세스를 촘촘하게 만드는 사람",
        "link": "https://jojoldu.tistory.com/829",
        "pubDate": "Tue, 20 May 2025 09:27:40 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/829#entry829comment",
        "content": "<p data-ke-size=\"size16\">최근에 <a href=\"https://www.etnews.com/201309020216\">쿠팡의 조직 문화</a>에 대해 이야기를 나눌 기회가 있었다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">쿠팡의 인재론은 한 축은 실적, 한 축은 가치관으로 평가한다.<br />실적이 좋고 가치관이 훌륭한 사람은 스타(star),<br />실적도 안 되고 가치관이 엉망인 사람은 개(dog)다.<br />실적은 안 좋고 가치관이 잘 맞는 사람은 물음표(?)다.<br />가장 문제는 실적이 좋지만 가치관이 안 맞는 사람이다.<br />이런 사람은 독(poison)으로 분류한다.<br /><b>장기적으로 독을 밀어내고 물음표를 과감하게 기용할 수 있는 혜안이 필요하다</b>.<br />문화가 항상 앞서야 한다.<br />회사에 핵심 가치가 필요한 이유다.</p>\n</blockquote>\n<p data-ke-size=\"size16\">쿠팡을 다녀본 적은 없지만, 각자가 경험한 조직들을 기준으로 이 스타(star), 개(dog), 물음표(?), 독(poison) 에 대해 나눴다.<br />그러다 <b>어떤 사람이 독(poison)</b> 인가에 대한 질문이 나왔다.<br />이에 대해 여러 이야기가 나왔지만, 나는 \"<b>프로세스/제도를 더 촘촘하게 만드는 사람이 독인것 같다</b>\" 는 이야기를 했다.</p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p data-ke-size=\"size16\">A 회사는 바쁘게 일 하느라 저녁 식사를 제때 못하는 분들을 위해 김밥을 준비했다.<br />\"저녁 식사 못하고 야근하신 분들은 김밥 드세요\" 라는 회사의 공지가 나왔다.<br />일부의 사람이 30분 야근을 하면서 퇴근길에 이 김밥을 챙겨가기 시작했다.<br />김밥의 양이 부족해서 원래 목적이였던 사람들은 여전히 제때 끼니를 챙기지 못했다.<br />이후에는 <b>김밥을 가져갈 수 있는 조건이 하나둘씩 생기기 시작했다</b>.</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>9시 이후 퇴근 하시는 분들만 가져갈 수 있습니다.</li>\n<li>김밥 수령하신 분들은 이름을 작성해주세요.</li>\n<li>대리 수령은 안됩니다.</li>\n</ul>\n<p data-ke-size=\"size16\">등등.</p>\n<p data-ke-size=\"size16\">하나둘씩 <b>김밥을 먹을 수 있는 조건들이 촘촘하게 만들어지기 시작하니</b> 이제는 진짜 김밥을 먹길 바랬던 대상자들도 먹지 않게 되었다.<br />\"김밥을 먹으면 8시까지 무조건 야근 해야하는구나\"<br />\"김밥 하나 먹으려고 너무 짜친다 그냥 안먹고 일 하련다\" 등등의 이유로 말이다.</p>\n<p data-ke-size=\"size16\">소수의 오남용 하는 사람들로 조직의 프로세스, 제도는 더 촘촘하게 만들어진다.<br />그리고 촘촘하게 만들수록 조직은 제대로 굴러가기 힘들고 짜치는 조직이 되어간다.</p>\n<p data-ke-size=\"size16\">누군가는 이렇게 얘기할 수도 있다.<br />\"아니 김밥 그거 얼마나 한다고 넉넉하게 준비하면 되지 뭐 이렇게 치사하게 구냐\" 라고.<br />근데 김밥이라는건 <b>조직에서 관리하는 일종의 리소스</b>를 표현한 것 뿐이다.</p>\n<p data-ke-size=\"size16\">회사의 모든 리소스는 항상 제한된 상황에서 운영된다.<br />아무리 필요한 사람이 있더라도 의도와 다르게 오남용하는 것까지 고려해서 충분한 리소스가 확보되어야만 모든 프로세스와 제도가 도입되어야하는 것인가?<br />아무리 필요한 사람이 있더라도 그만큼의 리소스가 확보되지 않으면 도입을 못하는 것인가?<br />그건 아닐 것이다.<br />더 열정적으로 일을 하는 사람들이 있다면 그들을 위해 지원해야할 것들이 있다면 더 지원해야하고, 프로세스와 제도는 더 느슨하게, 더 자유롭게 활용할 수 있도록 해야한다.</p>\n<p data-ke-size=\"size16\">그렇지만 특정 몇 명으로 인해 프로세스와 제도가 계속해서 촘촘하게 만들어진다면 그들은 조직을 망치는 사람들로서 경계해야한다.</p>\n<p data-ke-size=\"size16\">\"<b>기준이 모호하니깐 사람들이 프로세스를 악용한다</b>\" 라는 이야기는 반은 맞지만 반은 맞지 않다.<br />기준을 명확하게 만들려고, \"이럴때는 이렇게 하셔야 하고, 저럴때는 저렇게 하셔야 합니다\" 라는 형태로 프로세스가 계속해서 촘촘하게 만들어지는 것이 더 성과내기 좋은 조직이란 말인가?</p>\n<p data-ke-size=\"size16\">\"<b>프로세스가 모호하다고 느껴질 때 그때 개인의 이득이 되는 선택을 하느냐, 전체에 이득이 되는 선택을 하느냐</b>\"에 따라 프로세스가 더 촘촘해지기도 하고, 더 느슨해지기도 한다.</p>\n<p data-ke-size=\"size16\">프로세스가 모든 상황에 대해서 정확하게 가이드를 할 순 없다.<br /><b>프로세스가 촘촘할수록 개인별 역량과 도전은 제한받을 수 밖에 없다</b>.<br />프로세스 혹은 제도는 최소한의 기본을 가지고 있고,<br />대부분의 가치판단이 모호할 때는 회사의 문화, 가치관에 따라 개인이 결정하는 것이 훨씬 더 좋다고 생각한다.<br />결국 <b>제도는 기본과 원칙에 충실하게 만들되, 문화, 가치관에 대한 교육에 좀 더 집중하는 편이 맞는 경우가 훨씬 많은 것 같다</b>.</p>",
        "contentSnippet": "최근에 쿠팡의 조직 문화에 대해 이야기를 나눌 기회가 있었다.\n쿠팡의 인재론은 한 축은 실적, 한 축은 가치관으로 평가한다.\n실적이 좋고 가치관이 훌륭한 사람은 스타(star),\n실적도 안 되고 가치관이 엉망인 사람은 개(dog)다.\n실적은 안 좋고 가치관이 잘 맞는 사람은 물음표(?)다.\n가장 문제는 실적이 좋지만 가치관이 안 맞는 사람이다.\n이런 사람은 독(poison)으로 분류한다.\n장기적으로 독을 밀어내고 물음표를 과감하게 기용할 수 있는 혜안이 필요하다.\n문화가 항상 앞서야 한다.\n회사에 핵심 가치가 필요한 이유다.\n쿠팡을 다녀본 적은 없지만, 각자가 경험한 조직들을 기준으로 이 스타(star), 개(dog), 물음표(?), 독(poison) 에 대해 나눴다.\n그러다 어떤 사람이 독(poison) 인가에 대한 질문이 나왔다.\n이에 대해 여러 이야기가 나왔지만, 나는 \"프로세스/제도를 더 촘촘하게 만드는 사람이 독인것 같다\" 는 이야기를 했다.\nA 회사는 바쁘게 일 하느라 저녁 식사를 제때 못하는 분들을 위해 김밥을 준비했다.\n\"저녁 식사 못하고 야근하신 분들은 김밥 드세요\" 라는 회사의 공지가 나왔다.\n일부의 사람이 30분 야근을 하면서 퇴근길에 이 김밥을 챙겨가기 시작했다.\n김밥의 양이 부족해서 원래 목적이였던 사람들은 여전히 제때 끼니를 챙기지 못했다.\n이후에는 김밥을 가져갈 수 있는 조건이 하나둘씩 생기기 시작했다.\n9시 이후 퇴근 하시는 분들만 가져갈 수 있습니다.\n김밥 수령하신 분들은 이름을 작성해주세요.\n대리 수령은 안됩니다.\n등등.\n하나둘씩 김밥을 먹을 수 있는 조건들이 촘촘하게 만들어지기 시작하니 이제는 진짜 김밥을 먹길 바랬던 대상자들도 먹지 않게 되었다.\n\"김밥을 먹으면 8시까지 무조건 야근 해야하는구나\"\n\"김밥 하나 먹으려고 너무 짜친다 그냥 안먹고 일 하련다\" 등등의 이유로 말이다.\n소수의 오남용 하는 사람들로 조직의 프로세스, 제도는 더 촘촘하게 만들어진다.\n그리고 촘촘하게 만들수록 조직은 제대로 굴러가기 힘들고 짜치는 조직이 되어간다.\n누군가는 이렇게 얘기할 수도 있다.\n\"아니 김밥 그거 얼마나 한다고 넉넉하게 준비하면 되지 뭐 이렇게 치사하게 구냐\" 라고.\n근데 김밥이라는건 조직에서 관리하는 일종의 리소스를 표현한 것 뿐이다.\n회사의 모든 리소스는 항상 제한된 상황에서 운영된다.\n아무리 필요한 사람이 있더라도 의도와 다르게 오남용하는 것까지 고려해서 충분한 리소스가 확보되어야만 모든 프로세스와 제도가 도입되어야하는 것인가?\n아무리 필요한 사람이 있더라도 그만큼의 리소스가 확보되지 않으면 도입을 못하는 것인가?\n그건 아닐 것이다.\n더 열정적으로 일을 하는 사람들이 있다면 그들을 위해 지원해야할 것들이 있다면 더 지원해야하고, 프로세스와 제도는 더 느슨하게, 더 자유롭게 활용할 수 있도록 해야한다.\n그렇지만 특정 몇 명으로 인해 프로세스와 제도가 계속해서 촘촘하게 만들어진다면 그들은 조직을 망치는 사람들로서 경계해야한다.\n\"기준이 모호하니깐 사람들이 프로세스를 악용한다\" 라는 이야기는 반은 맞지만 반은 맞지 않다.\n기준을 명확하게 만들려고, \"이럴때는 이렇게 하셔야 하고, 저럴때는 저렇게 하셔야 합니다\" 라는 형태로 프로세스가 계속해서 촘촘하게 만들어지는 것이 더 성과내기 좋은 조직이란 말인가?\n\"프로세스가 모호하다고 느껴질 때 그때 개인의 이득이 되는 선택을 하느냐, 전체에 이득이 되는 선택을 하느냐\"에 따라 프로세스가 더 촘촘해지기도 하고, 더 느슨해지기도 한다.\n프로세스가 모든 상황에 대해서 정확하게 가이드를 할 순 없다.\n프로세스가 촘촘할수록 개인별 역량과 도전은 제한받을 수 밖에 없다.\n프로세스 혹은 제도는 최소한의 기본을 가지고 있고,\n대부분의 가치판단이 모호할 때는 회사의 문화, 가치관에 따라 개인이 결정하는 것이 훨씬 더 좋다고 생각한다.\n결국 제도는 기본과 원칙에 충실하게 만들되, 문화, 가치관에 대한 교육에 좀 더 집중하는 편이 맞는 경우가 훨씬 많은 것 같다.",
        "guid": "https://jojoldu.tistory.com/829",
        "categories": [
          "생각정리",
          "배민",
          "스타트업",
          "인프런",
          "조직문화",
          "쿠팡"
        ],
        "isoDate": "2025-05-20T00:27:40.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": [
      {
        "title": "Vite 개발 환경에 정적 파일 디렉토리 추가하기",
        "link": "https://hyeonseok.com/blog/935",
        "pubDate": "Sun, 18 May 2025 17:50:24 GMT",
        "content": "<p>스벨트킷에서 <code>src</code>나 <code>static</code> 디렉토리가 아닌 다른 곳의 파일을 브라우저에서 접근하면 아래와 같은 403 오류가 발생한다.</p>\r\n\r\n<pre>403 Restricted\r\n\r\nThe request url \"/Users/hyeonseok/repo/photo-date/uploads/c8a1cbda-d16f-4289-a2b0-318f1ddfea6e.HEIC\" is outside of Vite serving allow list.\r\n\r\n- /Users/hyeonseok/repo/photo-date/src/lib\r\n- /Users/hyeonseok/repo/photo-date/src/routes\r\n- /Users/hyeonseok/repo/photo-date/.svelte-kit\r\n- /Users/hyeonseok/repo/photo-date/src\r\n- /Users/hyeonseok/repo/photo-date/node_modules\r\n\r\nRefer to docs https://vite.dev/config/server-options.html#server-fs-allow for configurations and more details.</pre>\r\n\r\n<p>위에 나열된 디렉토리가 아닌 곳에 있는 파일에 접근하려면 <code>server.fs.allow</code>에 경로를 추가해 주면 된다. <code>vite.config.ts</code>에 아래와 같이 추가하면 해결된다.</p>\r\n\r\n<pre><code>export default defineConfig({\r\n  plugins: [sveltekit()],\r\n  server: {\r\n    fs: {\r\n      allow: ['./uploads']\r\n    }\r\n  }\r\n});</code></pre>\r\n\r\n<p>알고나면 쉬운데 챗지피티나 제미나이나 둘 다 <code>svelte.config.js</code>에 <code>vite</code>나 <code>vitePlugin</code>을 추가하라고 해서 한참을 삽질하다가 혹시나 해서 <code>vite.config.ts</code>에 넣으니 바로 된다.</p>\r\n\r\n<p>기본 디렉토리인 <code>static/</code>을 사용하면 해결되기는 하는 문제인데 상용 환경에는 <code>static</code> 디렉토리가 없고 <code>client/</code>에 내용이 복사된다. 동적으로 스태틱 파일을 저장하고 싶은데 상용과 개발이 서로 달라서 코드를 분기해 줘야 했다. 위의 방법으로 스태틱 디렉토리를 추가하면 개발 환경과 상용 환경 양쪽에서 같은 디렉토리를 사용하도록 설정할 수 있다. 상용에서는 어차피 엔진엑스를 사용하기 때문에 적절히 <code>root</code> 하나 추가해 주면 된다.</p>",
        "contentSnippet": "스벨트킷에서 src나 static 디렉토리가 아닌 다른 곳의 파일을 브라우저에서 접근하면 아래와 같은 403 오류가 발생한다.\n\r\n\r\n403 Restricted\r\n\r\nThe request url \"/Users/hyeonseok/repo/photo-date/uploads/c8a1cbda-d16f-4289-a2b0-318f1ddfea6e.HEIC\" is outside of Vite serving allow list.\r\n\r\n- /Users/hyeonseok/repo/photo-date/src/lib\r\n- /Users/hyeonseok/repo/photo-date/src/routes\r\n- /Users/hyeonseok/repo/photo-date/.svelte-kit\r\n- /Users/hyeonseok/repo/photo-date/src\r\n- /Users/hyeonseok/repo/photo-date/node_modules\r\n\r\nRefer to docs https://vite.dev/config/server-options.html#server-fs-allow for configurations and more details.\n\r\n\r\n위에 나열된 디렉토리가 아닌 곳에 있는 파일에 접근하려면 server.fs.allow에 경로를 추가해 주면 된다. vite.config.ts에 아래와 같이 추가하면 해결된다.\n\r\n\r\nexport default defineConfig({\r\n  plugins: [sveltekit()],\r\n  server: {\r\n    fs: {\r\n      allow: ['./uploads']\r\n    }\r\n  }\r\n});\n\r\n\r\n알고나면 쉬운데 챗지피티나 제미나이나 둘 다 svelte.config.js에 vite나 vitePlugin을 추가하라고 해서 한참을 삽질하다가 혹시나 해서 vite.config.ts에 넣으니 바로 된다.\n\r\n\r\n기본 디렉토리인 static/을 사용하면 해결되기는 하는 문제인데 상용 환경에는 static 디렉토리가 없고 client/에 내용이 복사된다. 동적으로 스태틱 파일을 저장하고 싶은데 상용과 개발이 서로 달라서 코드를 분기해 줘야 했다. 위의 방법으로 스태틱 디렉토리를 추가하면 개발 환경과 상용 환경 양쪽에서 같은 디렉토리를 사용하도록 설정할 수 있다. 상용에서는 어차피 엔진엑스를 사용하기 때문에 적절히 root 하나 추가해 주면 된다.",
        "guid": "https://hyeonseok.com/blog/935",
        "isoDate": "2025-05-18T17:50:24.000Z"
      }
    ]
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "AI로 생성한 이미지는 어떻게 평가할까요? (인페인팅 적용편)",
        "link": "https://techblog.lycorp.co.jp/ko/how-to-evaluate-ai-generated-images-3-inpainting",
        "pubDate": "Wed, 21 May 2025 02:00:00 GMT",
        "content": "들어가며안녕하세요. 저희 AMD(Applied ML Dev) 팀에서는 생성형 AI를 포함한 다양한 AI/ML 모델을 개발하고 서비스에 적용하고 있습니다.앞서 발행한 AI로 생성한 ...",
        "contentSnippet": "들어가며안녕하세요. 저희 AMD(Applied ML Dev) 팀에서는 생성형 AI를 포함한 다양한 AI/ML 모델을 개발하고 서비스에 적용하고 있습니다.앞서 발행한 AI로 생성한 ...",
        "guid": "https://techblog.lycorp.co.jp/ko/how-to-evaluate-ai-generated-images-3-inpainting",
        "isoDate": "2025-05-21T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": [
      {
        "creator": "호돌맨",
        "title": "미즈노 배드민턴화 정리",
        "link": "https://hodolman.tistory.com/75",
        "pubDate": "Sun, 18 May 2025 19:33:54 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/75#entry75comment",
        "content": "<h3 data-ke-size=\"size23\"><span style=\"font-family: AppleSDGothicNeo-Regular, 'Malgun Gothic', '맑은 고딕', dotum, 돋움, sans-serif;\">웨이브 팡2</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"600\" data-origin-height=\"600\"><span data-url=\"https://blog.kakaocdn.net/dn/bRnkom/btsN27vLwV9/FpJ2Cbk3mAnTc2iBZcRex0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bRnkom/btsN27vLwV9/FpJ2Cbk3mAnTc2iBZcRex0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bRnkom/btsN27vLwV9/FpJ2Cbk3mAnTc2iBZcRex0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbRnkom%2FbtsN27vLwV9%2FFpJ2Cbk3mAnTc2iBZcRex0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"350\" height=\"350\" data-filename=\"blob\" data-origin-width=\"600\" data-origin-height=\"600\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\"><span style=\"font-family: AppleSDGothicNeo-Regular, 'Malgun Gothic', '맑은 고딕', dotum, 돋움, sans-serif;\">웨이브팡 EL2</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"954\" data-origin-height=\"886\"><span data-url=\"https://blog.kakaocdn.net/dn/btvzwX/btsN123tkCR/A7gwnXKLtUK6vb2vgk1PE1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/btvzwX/btsN123tkCR/A7gwnXKLtUK6vb2vgk1PE1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/btvzwX/btsN123tkCR/A7gwnXKLtUK6vb2vgk1PE1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbtvzwX%2FbtsN123tkCR%2FA7gwnXKLtUK6vb2vgk1PE1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"392\" height=\"364\" data-filename=\"blob\" data-origin-width=\"954\" data-origin-height=\"886\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">스텔스 네오2</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"492\" data-origin-height=\"492\"><span data-url=\"https://blog.kakaocdn.net/dn/QGBUI/btsN1ZyWJns/nbsJh6FhxjiOsD77qXwnPk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/QGBUI/btsN1ZyWJns/nbsJh6FhxjiOsD77qXwnPk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/QGBUI/btsN1ZyWJns/nbsJh6FhxjiOsD77qXwnPk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FQGBUI%2FbtsN1ZyWJns%2FnbsJh6FhxjiOsD77qXwnPk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"492\" height=\"492\" data-filename=\"blob\" data-origin-width=\"492\" data-origin-height=\"492\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">클로 네오2</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"814\" data-origin-height=\"854\"><span data-url=\"https://blog.kakaocdn.net/dn/rR7pf/btsN2Q858TD/p5d8Y5sm2O9mbIA4kYTatk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/rR7pf/btsN2Q858TD/p5d8Y5sm2O9mbIA4kYTatk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/rR7pf/btsN2Q858TD/p5d8Y5sm2O9mbIA4kYTatk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FrR7pf%2FbtsN2Q858TD%2Fp5d8Y5sm2O9mbIA4kYTatk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"814\" height=\"854\" data-filename=\"blob\" data-origin-width=\"814\" data-origin-height=\"854\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">클로3</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"224\" data-origin-height=\"224\"><span data-url=\"https://blog.kakaocdn.net/dn/bL0YRw/btsN1ZlpckU/ECb6PPDnTblPeQ6Qh7WB91/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bL0YRw/btsN1ZlpckU/ECb6PPDnTblPeQ6Qh7WB91/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bL0YRw/btsN1ZlpckU/ECb6PPDnTblPeQ6Qh7WB91/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbL0YRw%2FbtsN1ZlpckU%2FECb6PPDnTblPeQ6Qh7WB91%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"224\" height=\"224\" data-filename=\"blob\" data-origin-width=\"224\" data-origin-height=\"224\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">65z3</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"455\" data-origin-height=\"400\"><span data-url=\"https://blog.kakaocdn.net/dn/bWjBin/btsN2H5mcFV/GCfsh5JvDkhkjiT7wisGK1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bWjBin/btsN2H5mcFV/GCfsh5JvDkhkjiT7wisGK1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bWjBin/btsN2H5mcFV/GCfsh5JvDkhkjiT7wisGK1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbWjBin%2FbtsN2H5mcFV%2FGCfsh5JvDkhkjiT7wisGK1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"455\" height=\"400\" data-filename=\"blob\" data-origin-width=\"455\" data-origin-height=\"400\"/></span></figure>\n</p>\n<h3 data-ke-size=\"size23\">65z4</h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"487\" data-origin-height=\"397\"><span data-url=\"https://blog.kakaocdn.net/dn/bAXqM1/btsN1Pi0uZH/qTaQ5UAGNHIKD4kI3Ksab0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bAXqM1/btsN1Pi0uZH/qTaQ5UAGNHIKD4kI3Ksab0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bAXqM1/btsN1Pi0uZH/qTaQ5UAGNHIKD4kI3Ksab0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbAXqM1%2FbtsN1Pi0uZH%2FqTaQ5UAGNHIKD4kI3Ksab0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"487\" height=\"397\" data-filename=\"blob\" data-origin-width=\"487\" data-origin-height=\"397\"/></span></figure>\n</p>",
        "contentSnippet": "웨이브 팡2\n\n\n웨이브팡 EL2\n\n\n스텔스 네오2\n\n\n클로 네오2\n\n\n클로3\n\n\n65z3\n\n\n65z4",
        "guid": "https://hodolman.tistory.com/75",
        "categories": [
          "우당탕탕 대모험"
        ],
        "isoDate": "2025-05-18T10:33:54.000Z"
      }
    ]
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "독서와 복리",
        "link": "https://www.thestartupbible.com/2025/05/everything-is-about-compounding.html",
        "pubDate": "Wed, 21 May 2025 21:32:00 +0000",
        "content:encodedSnippet": "나는 2020년부터 해마다 50권 이상의 책을 읽는 걸 목표로 세우고, 실제로 5년째 그 목표를 달성하고 있다. 올해도, 이 페이스로 계속 간다면 50권은 읽을 수 있을 것 같다. 2020년 이전에도 독서를 좋아했지만, 2019년 말에 개인적인 깨달음이 몇 가지 있었고, 독서를 통한 휴식, 독서를 통한 정신 정화, 그리고 독서를 통한 힐링을 해보기로 했다.\n나에겐 독서가 잘 맞는다. 이 세상에 나쁜 책은 없다는 생각으로, 그냥 한 권을 집으면 웬만하면 완독하고 있다. 몇 시간만 한 권을 읽는 데 할애하면, 그 책을 쓴 저자가 수년, 또는 수십 년 동안 공부하고, 분석하고, 느낀 생각과 내용을 상대적으로 짧은 시간 동안 습득해서 내 지식과 간접 경험으로 만들 수 있다는 건 이 세상에서 가장 남는 장사라고 생각한다.\n그런데 굳이 일 년에 50권이라는 목표를 세우고 독서를 해야 하는가? 안 그래도 바쁘고 빡빡한 세상에서 휴식과 힐링을 위한 독서에도 이렇게 50권이라는 정량적인 목표를 세우고, 한 권을 읽을 때마다 그 숫자를 기록하는, 마치 사업 KPI 관리하듯이 해야 하나? 실은 내 와이프도 나에게 비슷한 말을 하는데, 이건 그냥 내 스타일인 것 같다. 그래서 누가 나에게 취미를 물어본다면, 선뜻 독서라고 하지 못한다. 취미의 정의 자체가 전문적으로 하는 것이 아니라 즐기기 위해서 하는 일인데, 마치 나는 50권을 목표로 설정하고 독서를 숙제 하듯 강제로 하는 것 같기 때문이다.\n어떤 분이 최근에 나에게 바쁜 일상에서 독서를 꾸준히, 정기적으로, 그리고 되도록 많이 할 수 있는 방법에 관해서 물어봤는데, 나는 독서에 대해 이런 생각을 하고 있다.\n첫 번째 법칙은, 독서는 시간이 날 때마다 하는 게 아니라, 독서하기 위해서 시간을 만들어야 한다. 이렇게 하지 않으면 바쁜 일상에서 일 년에 책 한 권도 못 읽는다. 일 년에 책 한 권 안 읽는다고 세상이 무너지는 건 아니다. 큰일이 나는 것도 아니다. 하지만, 책을 읽지 않고 1년, 5년, 10년, 이렇게 세월이 지나다 보면, 마음속의 교양 부재와 머릿속의 멍청함에도 복리가 적용돼서 정말 교양 없고 멍청한 사람이 될 것이다. 실은, 독서뿐만 아니라 모든 좋은 습관을 만들기 위해선, 일부러 시간을 만들어야 한다. 어쨌든, 나도 바쁜 삶을 살고 있지만, 독서하기 위해서 일부러 시간을 만들고 있다.\n두 번째, 나는 되도록 주중에 저녁 약속을 안 잡는다. 모든 비즈니스 관련 일정은 업무 시간 중에 잡고, 식사를 해야 하면 웬만하면 점심 약속으로 한다. 저녁 약속을 가급적 안 잡는 습관은 10년 됐는데, 이렇게 하면 상당히 많은 시간을 확보할 수 있다. 일 끝나고, 집에 와서 밥 먹고, 이메일 조금 더 하고, 집안일해도, 독서할 수 있는 시간을 확보할 수 있다.\n세 번째, 매일 최소 15분 독서를 한다. 물론, 1시간 하는 경우도 있고, 10분 하는 경우도 있는데, 기본 원칙은 매일 15분 독서다. 15분은 솔직히 긴 시간은 아니지만, 이게 일주일, 한 달, 1년, 10년 누적되면서 복리가 적용되면 엄청난 독서량이 된다.\n독서를 매일 조금씩 하다 보면, 책을 읽는 속도도 빨라져서 더 많은 책을 읽을 수 있다. 나는 이렇게 책을 읽다 보니, 이제 독서는 지친 내 영혼과 육체를 힐링하는 루틴이 된 것 같다. 운동도 독서랑 비슷한 선상에 있지만, 운동은 15분이 아니라 최소 1시간의 시간이 필요하기 때문에 저녁보단 오전에 해야 하고, 어느 정도 각을 잡고 해야 한다.\n복리는 우리 인생 모든 습관과 행동에 적용된다. 독서에도 적용되는 복리의 마법을 모두 느껴보시길.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/05/everything-is-about-compounding.html#respond",
        "content": "나는 2020년부터 해마다 50권 이상의 책을 읽는 걸 목표로 세우고, 실제로 5년째 그 목표를 달성하고 있다. 올해도, 이 페이스로 계속 간다면 50권은 읽을 수 있을 것 같다. 2020년 이전에도 독서를 좋아했지만, 2019년 말에 개인적인 깨달음이 몇 가지 있었고, 독서를 통한 휴식, 독서를 통한 정신 정화, 그리고 독서를 통한 힐링을 해보기로 했다. 나에겐 독서가 잘 맞는다.(...)",
        "contentSnippet": "나는 2020년부터 해마다 50권 이상의 책을 읽는 걸 목표로 세우고, 실제로 5년째 그 목표를 달성하고 있다. 올해도, 이 페이스로 계속 간다면 50권은 읽을 수 있을 것 같다. 2020년 이전에도 독서를 좋아했지만, 2019년 말에 개인적인 깨달음이 몇 가지 있었고, 독서를 통한 휴식, 독서를 통한 정신 정화, 그리고 독서를 통한 힐링을 해보기로 했다. 나에겐 독서가 잘 맞는다.(...)",
        "guid": "https://www.thestartupbible.com/?p=9450",
        "categories": [
          "Uncategorized",
          "books",
          "compounding",
          "general",
          "inspiring"
        ],
        "isoDate": "2025-05-21T21:32:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "투자, 그리고 바로 해고",
        "link": "https://www.thestartupbible.com/2025/05/stay-lean-and-dont-fuck-up-with-investors-money.html",
        "pubDate": "Sun, 18 May 2025 21:25:00 +0000",
        "content:encodedSnippet": "2021년도에도 투자받고, 또 최근에 투자받은 대표들은 두 시점에서의 전반적인 업계 분위기와 투자자들의 분위기가 180도 다르다는 것을 느꼈을 것이다. 2021년도는 나의 짧은 VC 경력 중 가장 흥미로운? 한 해였고, 돈이 완전히 메마를 것 같았지만, 역사상 가장 많은 돈이 시장에 풀렸던 시기였다.\n이때 투자 받은 창업가들은 대부분 회사의 실적이나 수치 대비 훨씬 더 높은 밸류에이션에 훨씬 더 많은 투자금을 받았고, 당시 투자자들 분위기는 투자금을 최대한 빨리 소진해서 더 높은 밸류에 또 투자받자는 게 지배적이었다. 회사가 제대로 된 비즈니스 모델로 건강한 매출을 만들 수 있는지는 그 누구도 신경 쓰지 않았고, 최대한 많이 채용하고, 최대한 마케팅 많이 태우고, 최대한 직원들을 위한 복지에 돈을 많이 써서, 투자받은 돈을 최대한 빨리 쓰고, 내실보단 더 커진 외형으로 이전 가치보다 5배 이상의 밸류로 또 투자 받는데 모든 신경이 집중되어 있었을 것이다.\n우리도 당시에 신기했던 게, 좋은 창업가들이지만, 매출도 없고, 비즈니스 모델도 없는, 창업한 지 3개월밖에 안 되는 회사들이 기업 가치 200억 원 이상에 펀드레이징을 하고 있었고, 이들에게 투자하는 VC들이 정말 많았다는 점이다. 이 VC들에게 뭘 보고 이렇게 비싸게 투자했냐고 물어보면, “몇 달 뒤에 더 높은 가치에 투자받으면 되죠.”라는 답변이 돌아왔다. 우리가 만났던 이런 회사들은 대부분 지금은 문을 닫았거나, 아직 살아 있다면 당시에 투자받았던 200억 원 이상의 밸류보다 훨씬 낮은 50억 원대 밸류로 다운 라운드를 하고 있다. 많은 회사들이 비즈니스 자체도 피봇팅을 하기도 했다.\n요샌 분위기가 완전히 달라졌다. VC들은 검토하는 회사가 도대체 어떻게 돈을 벌 수 있을지, 최대한 빨리 손익분기점에 도달하기 위한 전략이 있는지, 그리고 기업가치가 합리적인지, 여러 가지를 매우 꼼꼼하게 챙긴다. 투자금의 용도가 더 많은 사람을 채용하고, 유료 마케팅을 하는 거라면, 3년 전만 해도 이 전략에 손뼉 치던 투자자들은 이제 회의적인 시각으로 이 전략을 바라본다. 그래서 2021년 도에도 투자받고, 최근에 또 투자를 받았던 대표들과 이야기를 해보면, 온탕에 있다가 갑자기 냉탕에 들어온 기분이고, 같은 투자자 지면 그동안 분위기와 투자 전략이 어쩜 이렇게 달라졌는지 상당히 놀란다.\n우린 2021년도에도 열심히 투자했지만, 위에서 말한 대로 미친 밸류에이션에 투자는 가급적 자제했다. 아무리 좋은 창업가들이 가능성이 높은 사업을 해도, 우리가 원하는 밸류가 아니면 웬만하면 안 들어갔다. 실은, 이렇게 하고도 그 회사가 계속 성장하고 투자도 잘 받으면, 우리가 실수했는가 후회도 했지만, 지금 와서 생각해 보면 참 잘한 것 같다.\n요새 우리가 신규 투자를 하거나, 기투자사들에 후속 투자를 할 때, 내가 농담 반 진담 반으로 하는 두 가지 이야기가 있다.\n하나는, 투자하면서 대표들에게 이번 라운드의 목적은 이 투자금을 안 쓰는 것이라고 한다. 회사를 운영하고 성장시키려면 당연히 돈을 써야 하지만, 그만큼 돈을 소중하게 쓰고, 최대한 회사를 lean 하게 운영하면서, 가능하면 이번 투자금으로 흑자를 만들어 보라는 경고이자 부탁이다.\n둘째는, 투자받아서 사람을 더 채용하는 전략이 아닌, 완전히 그 반대 전략을 구사하라고 한다. 즉, 이번 투자를 받으면서, 회사에 기여를 못 하는 직원들을 대량 해고하라고 한다. 투자를 받는 회사들은 나름 잘하는 회사지만, 계속 그 기조를 유지하려면, 최대한 lean 하게 회사를 운영해야 하고, 이걸 가능케 하는 건 더 적은 인원으로 더 많은 일을 하는 시스템이다. 내가 얼마 전에 채용에 대한 글을 썼는데, 이 기준에 부합하지 않는 사람은 절대로 채용하지 말고, 100% 기여를 못 하는 직원이 있다면, 과감하게 내보내라고 한다. AI도 좋아져서, 사람이 하는 low level 작업은 충분히 기계의 도움을 받을 수 있다.\n두 가지 경고이자 부탁이자 조언은 물론, 꼭 그렇게 하라는 말이 아니라, 최대한 회사를 lean 하게 운영하고 바보 같은 짓을 하지 말라는 말이다. 우리 포트폴리오 창업가분들뿐만 아니라, 모든 창업가가 명심해야 할 내용이다.\n투자를 크게 받았다면? 그 돈을 최대한 쓰지 말아라. 최대한 채용하지 말고, 오히려 투자금이 납입된 그날 불필요한 인력을 해고해라.\n투자를 적게 받았다면? 그 돈을 최대한 쓰지 말아라. 최대한 채용하지 말고, 오히려 투자금이 납입된 그날 불필요한 인력을 대량 해고해라.\n투자를 못 받았다면? 돈을 더 아끼고, 사람 절대 채용하지 말고, 있는 적은 인력도 더 줄여라. \n실제로 돈을 버는 사업만이 살아남을 수 있는 현실로 온 것을 환영한다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/05/stay-lean-and-dont-fuck-up-with-investors-money.html#comments",
        "content": "2021년도에도 투자받고, 또 최근에 투자받은 대표들은 두 시점에서의 전반적인 업계 분위기와 투자자들의 분위기가 180도 다르다는 것을 느꼈을 것이다. 2021년도는 나의 짧은 VC 경력 중 가장 흥미로운? 한 해였고, 돈이 완전히 메마를 것 같았지만, 역사상 가장 많은 돈이 시장에 풀렸던 시기였다. 이때 투자 받은 창업가들은 대부분 회사의 실적이나 수치 대비 훨씬 더 높은 밸류에이션에 훨씬 더(...)",
        "contentSnippet": "2021년도에도 투자받고, 또 최근에 투자받은 대표들은 두 시점에서의 전반적인 업계 분위기와 투자자들의 분위기가 180도 다르다는 것을 느꼈을 것이다. 2021년도는 나의 짧은 VC 경력 중 가장 흥미로운? 한 해였고, 돈이 완전히 메마를 것 같았지만, 역사상 가장 많은 돈이 시장에 풀렸던 시기였다. 이때 투자 받은 창업가들은 대부분 회사의 실적이나 수치 대비 훨씬 더 높은 밸류에이션에 훨씬 더(...)",
        "guid": "https://www.thestartupbible.com/?p=9447",
        "categories": [
          "Uncategorized",
          "firing",
          "FoundersAtWork",
          "hiring",
          "people",
          "Strong",
          "vc"
        ],
        "isoDate": "2025-05-18T21:25:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "토스, ‘자산 보호 알림’ 서비스 출시",
        "link": "https://blog.toss.im/article/ALARM",
        "pubDate": "Wed, 21 May 2025 08:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}마이데이터로 신규 금융자산 알림 및 조회 할 수 있도록 해\n명의도용 등으로 인한 금융상품 개설 시 피해 확산 방지 목적\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 ‘자산 보호 알림’ 서비스를 선보인다고 21일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n자산 보호 알림은 본인 이름으로 새로운 금융자산이 생기면 이용자에게 해당 사실을 알리는 서비스다. 개인정보 도용 등으로 이용자가 인지하지 못하는 금융상품이 개설된 경우, 이 사실을 알려 피해 확산을 방지하는 목적이다.\n서비스 신청 시 마이데이터를 통하여 확인이 필요한 금융자산을 안내한다. 마이데이터는 여러 금융사에 흩어져 있는 정보를 한곳에 모아 관리하도록 돕는 제도다. 토스는 이를 활용해 새로 개설된 은행 예적금∙대출 계좌, 신용∙체크카드 등을 확인할 수 있도록 구성했다.\n서비스 이용자가 토스 마이데이터 서비스에 접속하면 연결된 금융기관에 본인 명의 신규 자산이 있는지 1일 1회씩 업데이트되고, 확인이 필요한 자산이 발견되면 알림을 받게 된다. 앱 미접속 시에도 새로운 금융자산이 생기면 주 1회 알림을 받는다.\n자산 보호 알림으로 이용자가 직접 개설하거나 발급하지 않은 금융상품이 조회되는 경우에는 △피해 금융사에 거래정지 요청 △수사기관 신고 △통신사 소액결제 차단 등 피해 확산 방지를 위한 방법을 안내한다.\n토스 관계자는 “자산 보호 알림은 명의도용이 의심되는 금융상품을 확인할 수 있도록 지원함으로써, 금융자산을 안전하게 지키는 데 기여할 것으로 기대한다”며 “앞으로도 안전하고 신뢰할 수 있는 금융 생활 환경을 만들기 위해 노력하겠다”고 말했다.",
        "content": "신규 개설된 금융자산 알림",
        "contentSnippet": "신규 개설된 금융자산 알림",
        "guid": "https://blog.toss.im/article/ALARM",
        "isoDate": "2025-05-21T08:00:00.000Z"
      },
      {
        "title": "이제 App Store에서도 토스페이로 결제하세요",
        "link": "https://blog.toss.im/article/appstore-tosspay",
        "pubDate": "Wed, 21 May 2025 02:03:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}이제, App Store(앱스토어)에서도 토스페이로 결제할 수 있어요 \n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}Apple App Store(애플 앱스토어)에서 토스페이로 결제할 수 있게 되었습니다. 간편하고 안전한 결제 수단 토스페이, 지금 바로 Apple App Store(애플 앱스토어)에서도 경험해보세요.\n토스페이는 토스 앱만 있으면 누구나 쉽고 안전하게 결제할 수 있는 간편결제 서비스예요.\n토스 앱에 결제수단으로 등록된 계좌 혹은 카드 등을 통해, 토스페이 가맹점에서 편리하게 결제할 수 있죠. 손쉬운 계좌 연결과 한 번의 인증으로 빠르고 안전한 결제 환경을 제공합니다.\n토스페이 이용자들은 이번 Apple(애플)과의 제휴로 구글 플레이스토어와 더불어 Apple App Store(애플 앱스토어)에서도 더욱 편리하게 결제할 수 있답니다. \n앱, 게임, 구독 서비스까지 이제 토스페이와 함께 한층 더 간편해진 모바일 라이프를 즐겨보세요.\nApp Store(앱스토어)에서 토스페이로 결제하는 방법, 매우 간편해요\n.css-hokoge{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;counter-reset:numberedList;}.css-hokoge ul,.css-hokoge ol{margin:16px 0 0;}.css-hokoge>li{counter-increment:numberedList;margin-bottom:16px;padding-left:24px;}.css-hokoge>li:last-of-type{margin-bottom:0;}.css-hokoge>li>span{position:relative;}.css-hokoge>li>span>:first-child::before{content:counter(numberedList) '.';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n아이폰(iPhone) ‘설정’ 앱을 열고, 사용자 이름을 탭한 후 ‘결제 및 배송’을 선택하세요.\n‘지불 방법 추가’를 누르면 다양한 지불 방법이 리스트에 떠요.\n‘토스페이’를 선택하고 ‘토스페이에 로그인’하면 토스 앱으로 이동하는데요. 토스페이 결제수단 중 App Store(앱스토어)에 등록할 결제수단을 선택하면 끝이에요. (토스 앱에 쌓인 포인트도 토스페이 결제 시 이용할 수 있어요)\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-8atqhb{width:100%;}\niOS 유저라면 App Store(앱스토어) 결제 수단을 지금 바로 토스페이로 변경해보세요!",
        "content": "앱, 게임, 구독 서비스까지 이제 토스페이와 함께 한층 더 간편해진 모바일 라이프를 즐겨보세요",
        "contentSnippet": "앱, 게임, 구독 서비스까지 이제 토스페이와 함께 한층 더 간편해진 모바일 라이프를 즐겨보세요",
        "guid": "https://blog.toss.im/article/appstore-tosspay",
        "isoDate": "2025-05-21T02:03:00.000Z"
      },
      {
        "title": "토스플레이스, ‘토플크루’ 크리에이터 모집",
        "link": "https://blog.toss.im/article/TOPLCREW",
        "pubDate": "Tue, 20 May 2025 07:24:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}제품 후기 영상 제작해 SNS 올리면 끝… 내달 15일까지 모집\n프론트·터미널·포스 장점 및 특정 기능 사용 시 꿀팁 등 전수\n앞으로도 가맹점주 목소리 담을 수 있도록 다양한 시도 계획\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 결제 단말기 및 포스(POS) 솔루션 공급 자회사 토스플레이스(대표 최재호)가 가맹점주와 함께 하는 ‘토플크루’ 크리에이터 1기를 모집한다고 20일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n내달 15일까지 모집하는 토플크루는 가맹점주가 토스플레이스의 제품 후기를 영상 콘텐츠로 제작하면 활동비 50만 원을 지급하는 앰배서더 프로그램이다. 토스플레이스의 프론트, 터미널, 포스(POS) 중 최소 1종을 실제로 사용하는 가맹점주 중 SNS를 운영 중이라면 누구나 지원 가능하며, 활동 참여도에 따라 최대 200만 원의 혜택이 주어진다.\n토플크루로 선정된 총 10인은 오는 8월 8일까지 약 6주 동안 총 2개의 영상 콘텐츠를 제작해 개인 SNS에 올리면 된다. 가맹점주로서 직접 사용하면서 느꼈던 토스플레이스의 장점 및 프론트·터미널·포스 내 특정 기능을 사용하는 꿀팁 등 토스플레이스와 함께 한 운영 노하우를 담으면 된다.\n토스플레이스 홈페이지를 통해 지원할 수 있으며, 정기적 콘텐츠 제작 가능 여부 및 브랜드 적합도 등을 종합적으로 고려해 선발할 예정이다. 최종 선발자는 오는 6월 18일 개별 발표되며, 오프라인 발대식은 6월 25일에 토스플레이스 본사에서 진행된다. 선정된 참가자에게는 콘텐츠 제작을 위한 SNS 교육과 다양한 혜택도 함께 제공될 예정이다.\n토스플레이스는 가맹점주의 진짜 경험을 통해 제품의 신뢰도를 높이고, 사용자 중심의 브랜드 경험을 확산하고자 이번 프로그램을 기획했다. 생생한 이용 후기를 통해 더 많은 가맹점주에게 실질적인 도움을 줄 수 있을 것으로 기대하고 있다.\n토스플레이스 신중희 사업총괄은 “토플크루는 단순한 후기 이벤트를 넘어 사용자와 함께 브랜드를 만들어가는 프로그램”이라면서 “토스플레이스는 앞으로도 ‘사장님의 최고 파트너’로서 가맹점주 목소리를 담을 수 있는 다양한 시도를 계속해 나가겠다”고 말했다.",
        "content": "사장님들의 진짜 후기… 내달 15일까지 모집",
        "contentSnippet": "사장님들의 진짜 후기… 내달 15일까지 모집",
        "guid": "https://blog.toss.im/article/TOPLCREW",
        "isoDate": "2025-05-20T07:24:00.000Z"
      },
      {
        "title": "토스, Apple App Store에 토스페이로 간편결제 지원한다",
        "link": "https://blog.toss.im/article/appletosspay",
        "pubDate": "Fri, 16 May 2025 01:23:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}App Store·Apple Music·Apple Arcade·Apple TV 앱·iCloud 저장 공간 등에서 토스페이 이용\n토스페이로 편리하고 안전하게 Apple 서비스 구독 및 구입 가능해져\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 토스페이를 Apple 서비스 결제 수단으로 지원한다고 16일 밝혔다. 앞으로 App Store, Apple Music, Apple TV 앱, Apple Arcade, iCloud 저장 공간 등에서 토스페이로 결제 가능하다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n토스페이는 사전에 카드, 계좌를 등록하여 편리하게 결제할 수 있는 토스의 간편결제 서비스다. 토스페이로 이용자들은 보다 간편하고 안전하게 Apple 서비스 구독 및 구입을 할 수 있게 됐다.\nApple 계정에 토스페이를 연결하면 바로 서비스 이용이 가능하다. 기기 설정에서 결제 및 배송을 선택, 결제 방법 추가에 토스페이를 등록하면 된다. 이후 iOS에서 토스페이를 활용해 빠르고 원활하게 결제하고 손쉽게 콘텐츠를 이용할 수 있다.\n토스 관계자는 “토스페이가 Apple 주요 결제 수단으로 추가되면서, 보다 편리하고 안전한 토스페이 결제 경험을 더 많은 이용자들에게 제공할 수 있게 돼 기쁘다”며 “이용자 중심으로 간편결제 경험을 확대함에 있어 글로벌 플랫폼인 Apple 서비스 결제 지원은 중요한 의미를 지닌다”라고 말했다.",
        "content": "토스페이로 편리하고 안전하게 Apple 서비스 구독 및 구입 가능해져",
        "contentSnippet": "토스페이로 편리하고 안전하게 Apple 서비스 구독 및 구입 가능해져",
        "guid": "https://blog.toss.im/article/appletosspay",
        "isoDate": "2025-05-16T01:23:00.000Z"
      },
      {
        "title": "토스, 2025년 1분기 연결 영업수익 5,679억 원…전년 동기 대비 29.1% 성장",
        "link": "https://blog.toss.im/article/251Q",
        "pubDate": "Thu, 15 May 2025 07:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}연결 영업이익 709억 원, 연결 당기순이익 489억 원으로 흑자 기조 이어가\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n모바일 금융 플랫폼 토스(운영사 비바리퍼블리카, 대표 이승건)가 2025년 1분기 연결 기준 영업이익 709억 원을 기록하며 2024년 연간 흑자 전환에 이어 올해도 견조한 실적 흐름을 이어간다고 15일 밝혔다.\n1분기 연결 영업수익(매출)은 5,679억 원으로 전년 동기 대비 29.1% 증가했다. 연결 영업이익은 709억 원, 연결 당기순이익은 489억 원으로, 전년 동기 대비 모두 흑자 전환하며 수익성과 성장성을 동시에 입증했다.\n이번 실적은 비바리퍼블리카를 비롯한 주요 계열사들의 고른 성장세가 바탕이 됐다. 토스증권은 해외 주식 위탁매매 부문의 성장에 힘입어 1,569억 원의 매출을 기록했고, 토스인컴은 약 800만 명의 이용자 기반을 바탕으로 89억 원의 매출을 달성했다.\n비바리퍼블리카 자체 실적도 개선됐다. 1분기 영업수익은 1,573억 원으로 전년 동기 대비 34.6% 증가했으며, 영업이익 51억 원, 당기순이익 524억 원을 기록하며 흑자 전환했다. 이는 토스 앱의 2,480만 월간 활성 사용자 수(Monthly Active User, MAU) 등의 안정적인 사용자 지표를 바탕으로 기업 고객 유입이 확대됨에 따라 광고, 간편결제, 커머스, 대출중개 등 전 사업 부문에서 고른 성장을 나타낸 결과다.\n토스 관계자는 “모든 사업 영역에서의 균형 잡힌 성장과 수익 구조 개선이 호실적으로 이어졌다”라며, “앞으로도 핵심 사업 경쟁력 강화와 효율적인 운영을 통해 지속 가능한 성장을 이어가겠다”라고 밝혔다.",
        "content": "연결 영업이익 709억 원, 연결 당기순이익 489억 원으로 흑자 기조 이어가",
        "contentSnippet": "연결 영업이익 709억 원, 연결 당기순이익 489억 원으로 흑자 기조 이어가",
        "guid": "https://blog.toss.im/article/251Q",
        "isoDate": "2025-05-15T07:00:00.000Z"
      },
      {
        "title": "연 최대 30만 원, 경차라면 기름값 지원받아요: 경차 유류세 환급 제도",
        "link": "https://blog.toss.im/article/money-policies-42",
        "pubDate": "Thu, 15 May 2025 06:01:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}경차 유류세 환급 제도란? \n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n경차를 소유하고 있다면 연간 최대 30만 원 유류비를 환급받을 수 있어요. ‘1세대 1경차’* 소유자가 유류구매카드를 통해 경차 연료를 구입하는 경우, 유류비를 지원받을 수 있어요.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*경차 소유자 및 주민등록표상 동거 가족이 소유한 경차 각각의 합계가 한 대인 경우\n오는 2026년까지 시행 예정이니 놓치기 전에 경차 유류세 환급제도를 이용해 보세요.\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}지원 대상\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}한집에 사는 가족이 경형 승용차 한 대만 소유하거나, 경형 승합차 한 대만 소유하거나, 경형 승용차와 경형 승합차를 각각 한 대씩만 소유한 경우 지원 대상에 해당해요. 내 차가 지원 대상 경차인지 알고 싶다면 자동차등록증을 확인해 보세요.\n단, 아래의 경우는 지원 대상에서 제외돼요. \n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n경형 승용(승합)차와 다른 일반 승용(승합)차를 동시에 소유한 경우\n경형 승용(승합)차를 두 대 이상 소유한 경우\n법인 차량 또는 개인명의 단체 차량인 경우\n경형 화물자동차인 경우\n장애인·국가유공자 유류비 지원을 받고 있는 경우\n\n환급 방법\n미리 신청한 ‘유류구매카드’로 기름을 넣으면 결제 금액에서 할인 금액을 차감받는 방식이에요.\n휘발유와 경유는 리터당 250원, 액화석유가스(LPG)는 리터당 161원의 유류세를 할인받아요.\n\n환급을 받을 수 있는 1회당 결제금액은 최대 6만 원, 1일 결제금액은 최대 12만 원이에요.\n연중 미사용 한도 (30만 원 이하)는 다음 연도로 이월되지 않아요.\n중고 경차 구매 시에도 동일하게 적용돼요.\n과거 현금이나 다른 카드로 주유비를 결제했다면 추후 환급은 불가해요.\n\n유류구매카드 발급 방법\n유류구매카드는 롯데·신한·현대카드사 가운데 한 곳을 선택해 신청할 수 있어요.\n차량 등록증, 신분증(사본)을 구비하여 방문·전화·인터넷 신청 중 편한 방법을 이용하면 돼요. 모두 법적으로 정해진 환급 혜택을 제공하지만, 카드사별로 부가 혜택이 다르니 꼼꼼히 비교해 보고 나에게 맞는 카드를 선택해 보세요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 권민지 이지영 Graphic 이제현 최서윤 조수희",
        "content": "유류구매카드 발급받으면 기름 넣는 즉시 환급받을 수 있어요.",
        "contentSnippet": "유류구매카드 발급받으면 기름 넣는 즉시 환급받을 수 있어요.",
        "guid": "https://blog.toss.im/article/money-policies-42",
        "isoDate": "2025-05-15T06:01:00.000Z"
      },
      {
        "title": "토스, 국내 최초 ‘한도 높은 신용카드 찾기’ 전 카드사 입점 완료",
        "link": "https://blog.toss.im/article/card",
        "pubDate": "Thu, 15 May 2025 04:28:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}BC카드 입점으로 8대 專업계 카드사 모두 참여\n총 161개 카드 한도 및 발급 가능 여부 확인 가능...금융소비자 선택 폭 넓어져\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)는 국내 플랫폼 중 최초로 주요 8대 전업계 카드사가 모두 입점했다고 15일 밝혔다. 이번에 BC카드사가 ‘한도 높은 신용카드 찾기’ 서비스에 입점하면서, 해당 서비스는 주요 전업계 카드사 전체 라인업을 갖추게 됐다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n‘한도 높은 신용카드 찾기’는 사용자의 신용점수를 기반으로 다양한 카드사의 신용카드 한도를 비교해 주고, 발급 가능 여부까지 한 번에 확인할 수 있는 서비스다. 현재 ▲신한카드 ▲삼성카드 ▲현대카드 ▲KB국민카드▲롯데카드▲우리카드▲하나카드, 그리고 이번에 추가된 BC카드까지 총 8개 카드사의 161종 신용카드를 대상으로 추천을 제공한다.\n사용자는 ‘토스 앱’ > ‘카드 발급’ > ‘신용카드 만들기’ > ‘한도 높은 신용카드 만들기’ 메뉴에서 확인 가능하며, 최초 1회 조회 시 누구나 카드 발급 여부와 관계없이 토스포인트 3원을 받을 수 있다.\n이 서비스는 2022년 4월 첫 출시된 이후 3년간 약 510만 명의 사용자가 이용했으며, 사용자 편의성과 접근성 덕분에 금융소비자의 합리적인 선택을 돕는 대표적인 카드 비교추천 서비스로 자리 잡고 있다.\n토스 관계자는 “신용카드 발급은 단순히 카드 한도나 혜택만이 아니라, 개인의 신용 상태와 금융 습관에 맞는 선택이 중요하다”며 “토스는 앞으로도 다양한 카드사와의 제휴를 확대하고, 금융소비자가 더 나은 결정을 내릴 수 있도록 지속적으로 서비스를 고도화할 계획”이라고 밝혔다.\n한편, 토스는 한도 조회 외에도 ‘카드 혜택 비교하고 추천 받기’, ‘이달의 이벤트 카드 보기’ 등 다양한 카드 비교 서비스를 제공하고 있다. 신용카드는 물론 체크카드까지 포함하여 총 252종의 카드를 비교추천 받고, 발급 신청까지 가능한 통합 플랫폼으로 자리매김하고 있다. 5월에 특별 프로모션 중인 자세한 내용은 토스 앱에서 확인할 수 있다.",
        "content": "금융소비자 선택 폭 넓어져",
        "contentSnippet": "금융소비자 선택 폭 넓어져",
        "guid": "https://blog.toss.im/article/card",
        "isoDate": "2025-05-15T04:28:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]