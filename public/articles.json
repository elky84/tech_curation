[
  {
    "id": 1,
    "imageUrl": "",
    "title": "중국에서도 작동하는 Vercel 사이트 만들기: cname-china 설정 완벽 가이드",
    "description": "개요\nVercel로 배포한 웹사이트가 중국에서 접속되지 않아 고민하고 계신가요?\n이 문제는 중국의 인터넷 검열 시스템과 Vercel의 글로벌 인프라 구조 간의 충돌로 발생합니다. 흥미롭게도, 일부 경우에는 특별한 설정 없이도 중국에서 접속이 가능할 수 있습니다. 이는 Vercel의 지속적인 인프라 개선이나 중국 인터넷 정책의 일시적 변화 때문일 수 있습니다.\n문제가 발생하고 있다면 공식 해결책을 적용하는 것이 좋습니다.\n이 글에서는 문제의 정확한 원인과 Vercel이 공식적으로 제공하는 cname-china 설정을 통한 해결 방법을 단계별로 상세히 안내해 드립니다.\n중국에서 Vercel 사이트가 차단되는 이유\n중국은 만리방화벽(Great Firewall, GFW)이라 불리는 인터넷 검열 시스템을 운영하여 해외 서비스에 대한 접속을 제한합니다. Vercel의 기본 도메인(*.vercel.app, vercel.com)은 이러한 차단 대상에 포함되어 있으며, 주요 차단 방식은 다음과 같습니다:\nDNS 오염(DNS Pollution): 중국 내 DNS 서버가 Vercel 도메인에 대한 요청을 가로채 잘못된 IP 주소를 반환하거나 응답하지 않습니다.\nSNI 필터링(SNI Filtering): HTTPS 연결 과정에서 TLS 핸드셰이크 단계의 SNI(Server Name Indication) 정보를 검사하여 Vercel 관련 도메인 접속을 차단합니다.\nIP 차단: Vercel이 사용하는 일부 IP 대역에 대한 직접적인 차단이 이루어집니다.\nVercel은 이러한 중국 내 접속 장애 문제를 인지하고, 해결하기 위한 공식 솔루션을 발표했습니다.\ncname-china 설정의 원리와 효과\nVercel은 중국 사용자의 접속 문제를 해결하기 위해 중국에 최적화된 별도의 DNS 설정을 제공하고 있습니다:\n설정 유형\n일반 설정\n중국 최적화 설정\n\n\n\n\nCNAME 레코드\ncname.vercel-dns.com\ncname-china.vercel-dns.com\n\n\nA 레코드\n76.76.21.21\n76.223.126.88\n\n\n\n이 cname-china 설정은 다음과 같은 원리로 작동합니다:\n중국의 GFW 차단 규칙을 우회하는 네트워크 경로 사용\n중국 내 주요 ISP와 최적화된 연결 경로 확보\n중국 접속자를 위한 별도의 트래픽 라우팅 제공\n중요한 점은 이 설정이 중국 외 지역의 성능에 부정적인 영향을 미치지 않는다는 것입니다. Vercel의 글로벌 CDN은 Anycast 기술을 사용하여 사용자 위치에 따라 적절한 엣지 서버로 연결합니다.\n단계별 설정 가이드\n1. Vercel 프로젝트에 커스텀 도메인 추가\nVercel 대시보드에 로그인합니다.\n해당 프로젝트를 선택합니다.\n'Settings' 탭으로 이동합니다.\n'Domains' 섹션에서 'Add Domain' 버튼을 클릭합니다.\n사용할 도메인 이름(예: example.com)을 입력하고 추가합니다.\n2. DNS 제공자에서 레코드 설정 변경\n사용 중인 DNS 제공자(Cloudflare, Namecheap, GoDaddy 등)의 관리 페이지에서 다음과 같이 DNS 레코드를 설정합니다.\n루트 도메인(예: example.com)의 경우의 DNS 레코드 설정 표\n레코드 유형\n호스트/이름\n값/대상\nTTL\n\n\n\n\nA\n@ (또는 루트)\n76.223.126.88\n자동 또는 3600\n\n\n\n서브도메인(예: blog.example.com)의 경우의 DNS 레코드 설정 표\n레코드 유형\n호스트/이름\n값/대상\nTTL\n\n\n\n\nCNAME\nblog\ncname-china.vercel-dns.com\n자동 또는 3600\n\n3. DNS 변경 사항 전파 확인\nDNS 정보가 전 세계 서버에 전파되기까지 최대 24시간이 소요될 수 있습니다. 다음 도구를 사용하여 전파 상태를 확인할 수 있습니다:\nDNS Checker\nWhatsMyDNS\n4. Vercel에서 도메인 확인\nVercel 프로젝트의 'Domains' 설정으로 돌아갑니다.\n추가한 도메인 상태가 'Valid Configuration'으로 표시되는지 확인합니다.\n문제가 있다면 Vercel의 오류 메시지를 확인하고 DNS 설정을 재점검합니다.\n설정 효과 확인 방법\n중국 내 접속 가능 여부를 확인하는 방법은 다음과 같습니다:\n1. 중국 지역 VPN 사용\n중국 지역 VPN을 통해 사이트에 직접 접속해보는 방법입니다.\n2. 온라인 테스트 도구 활용\n중국 내 접속성을 테스트할 수 있는 다음 도구들을 활용할 수 있습니다:\n17CE: 중국 내 여러 지역에서의 웹사이트 접속성 테스트 제공\nPing.pe: 전 세계 여러 지역에서의 핑 테스트 제공\nWebSitePulse: 중국 내 접속 테스트 도구\n성공 사례 분석\n사례 1: Next.js 공식 문서 사이트\nNext.js 공식 문서 사이트는 cname-china 설정 적용 후 중국 내 접속 성공률이 68%에서 94%로 크게 개선되었습니다. 특히 광저우 지역에서는 응답 시간이 412ms에서 189ms로 절반 이상 감소했습니다.\n사례 2: 개인 개발자 프로젝트\nGitHub 커뮤니티에서 보고된 사례에 따르면, 개인 개발자들이 운영하는 포트폴리오 및 프로젝트 사이트들도 cname-china 설정 적용 후 중국 내에서 안정적으로 접속이 가능해졌습니다.\n자주 묻는 질문 (FAQ)\nQ: 기존 Vercel 도메인(vercel.app)도 중국에서 접속 가능하게 할 수 있나요?\nA: 불가능합니다. 기본 Vercel 도메인은 설정이 불가능하여, 커스텀 도메인을 사용해야만 cname-china 설정을 적용할 수 있습니다.\nQ: cname-china 설정이 다른 국가 사용자에게 부정적인 영향을 미치나요?\nA: 아닙니다. Vercel의 Anycast 기술은 사용자 위치에 따라 최적의 서버로 라우팅하므로, 중국 외 지역 사용자들은 기존과 동일한 경로로 접속하게 됩니다.\nQ: 중국에서 100% 접속이 보장되나요?\nA: 완벽한 보장은 어렵습니다. 중국의 인터넷 정책은 수시로 변경될 수 있으며, 지역과 ISP에 따라 차이가 있을 수 있습니다. 하지만 cname-china 설정은 접속 성공률을 크게 향상시키는 것으로 입증되었습니다.\nQ: 특별한 설정 없이도 접속이 되는 경우가 있는데, 그래도 cname-china 설정을 해야 하나요?\nA: Vercel은 이 문제를 인지하고 개선하기 위해 노력하고 있다고 합니다. 하지만 중국에서 접속이 중요하다면 설정하는 것을 권장합니다. 일시적으로 접속이 되더라도 중국의 인터넷 정책은 예고 없이 변경될 수 있으며, cname-china 설정을 통해 더 안정적이고 빠른 접속을 보장받을 수 있습니다.\n\n결론\nVercel로 배포한 웹사이트의 중국 내 접근성 문제는 cname-china.vercel-dns.com DNS 설정을 통해 효과적으로 해결할 수 있습니다. 이는 Vercel이 공식적으로 제공하는 해결책으로, 중국의 특수한 인터넷 환경에 대응하면서도 글로벌 사용자 경험을 유지할 수 있는 방법입니다.\n흥미로운 점은 일부 경우에 특별한 설정 없이도 중국에서 Vercel 사이트가 접속될 수 있다는 것입니다. 이는 Vercel의 지속적인 인프라 개선이나 중국 내 인터넷 정책의 일시적 변화 때문일 수 있습니다. 그러나 이러한 접속은 불안정하며 예고 없이 차단될 수 있으므로, 안정적인 서비스를 위해서는 cname-china 설정을 적용하는 것이 현명합니다.\n이 설정은 기술적으로 복잡하지 않으며, DNS 설정 변경만으로 간단히 적용할 수 있습니다. 개발자들은 이를 활용하여 중국을 포함한 전 세계 사용자들에게 안정적인 서비스를 제공할 수 있습니다.\n글로벌 서비스를 운영하는 개발자라면 cname-china 설정을 적용하여 중국 시장의 높은 잠재력을 활용해보시기 바랍니다!\n\n\n참고 자료\n\nVercel 공식 DNS 관리 가이드\nVercel 공식 도메인 문제 해결 가이드\nGitHub Discussions - Next.js China Deployment\nVercel 공식 상태 페이지\n중국에서의 Vercel 작동 방식 분석\npage is blocked in China",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.gaerae.com/2025/04/vercel-is-not-easily-accessible-in-china.html",
    "pubDate": "Tue, 01 Apr 2025 05:48:00 +0000",
    "creator": "noreply@blogger.com (Unknown)",
    "categories": [
      {
        "_": "cloud",
        "$": {
          "domain": "http://www.blogger.com/atom/ns#"
        }
      },
      {
        "_": "domain",
        "$": {
          "domain": "http://www.blogger.com/atom/ns#"
        }
      }
    ]
  },
  {
    "id": 2,
    "imageUrl": "",
    "title": "Toss Donates Royalties from ‘The Money Book’ to Support Wildfire Recovery Efforts",
    "description": "40 million donated – Entire second round of royalties from The Money Book",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.toss.im/article/wildfiredonation",
    "pubDate": "Sat, 29 Mar 2025 22:00:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 3,
    "imageUrl": "",
    "title": "토스, 첫 연간 흑자 전환…창사 이래 최대 매출 달성",
    "description": "2024년 연결 영업수익 1조9,556억 원, 연결 영업이익 907억 원 기록",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.toss.im/article/FirstFullYearNetProfit",
    "pubDate": "Fri, 28 Mar 2025 07:00:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 4,
    "imageUrl": "",
    "title": "카이스트 망막 재생 방법 발견",
    "description": "영상: https://www.youtube.com/shorts/8HRRG2ZM__4\n \n\n\n\n어류는 밀러 세포가 역분화 해서 망막세포가 재생되는 것을 발견함\n와우\n \n나오 이제 좀 볼 수 있으려나",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1244",
    "pubDate": "Tue, 1 Apr 2025 21:28:39 +0900",
    "creator": "SIDNFT",
    "categories": [
      "유튜브",
      "망막"
    ]
  },
  {
    "id": 5,
    "imageUrl": "",
    "title": "봇 테스트 하다가",
    "description": "64코어 128스레드 머신 1개에서 동접 5천의 봇을 스폰했더니 CPU를 다 쓰고있음... 열심히 만들었는데 겨우 5천밖에 못버티는 꼬라지를 보니 울화통 터지기도 하고.. 기대한만큼 성능이 안나와서 그냥 답답하네... 글로벌 DB에서 CPU를 엄청나게 먹고있는걸로 보이는데.. 많이 먹을때는 거의 70%정도.. 에휴.. 이걸 쓰자마자 서버 머신은 셧다운됐고 재부팅중.. 요즘 일도 잘 안풀리고 하이고~ 착잡하다 ㅜ ------------------- 글로벌 DB의 CPU 사용량이 비정상적으로 높은게 이해가 안돼서 살펴보니 봇이 무차별적으로 게시판에 글을 작성하고 있는 로직이 있는 것을 발견함 DB 머신은 따로 두는데는 이유가 있음을 느끼고.. 게시판 작성 로직.......",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.naver.com/boyism/223815579930?fromRss=true&trackingCode=rss",
    "pubDate": "Mon, 31 Mar 2025 04:34:15 +0900",
    "creator": "boyism",
    "categories": [
      "바람의나라"
    ]
  },
  {
    "id": 6,
    "imageUrl": "",
    "title": "ReSharper’s Out-of-Process Journey: Major Progress and Next Steps",
    "description": "Good news, everyone! After years of work on one of our most challenging projects, we’re excited to share major progress on ReSharper’s out-of-process implementation. For those of you who’ve been following our journey, asking thoughtful questions, and patiently waiting for updates, we want to let you know how far we’ve come. Your continued support has […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/dotnet/2025/04/01/resharper-out-of-process-update/",
    "pubDate": "Tue, 01 Apr 2025 09:37:31 +0000",
    "creator": "Sasha Ivanova",
    "categories": [
      "net-tools",
      "resharper",
      "oop",
      "out-of-process",
      "resharper_oop"
    ]
  },
  {
    "id": 7,
    "imageUrl": "",
    "title": "CURSOR 리뷰 / 유니티 로 폴가이즈 만들기 도전 / 유니티 로 폴가이즈 만들기 도전",
    "description": "영상: https://www.youtube.com/watch?v=4OgU0f9N0jo\n\n\n\n유니티로 도전하는 영상입니다.\n폴가이즈를 만들어 달라고 했고\n멀티플레이 게임으로 만들려고 하네요\n너무 방대해서 그런지 실패합니다.\n어마어마하게 만들긴하는데\n제대로 동작은 안되었다고 합니다.\n \n총평 \n코파일럿 보다 좋다.\n명령을 잘 내려야 할것이다.\n좀 더 써봐야겠다.\n \n성장 더하고 오라는 뜻인거 같기도 하군요",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1240",
    "pubDate": "Mon, 31 Mar 2025 04:24:22 +0900",
    "creator": "SIDNFT",
    "categories": [
      "프로그래밍/개발메모",
      "cursor"
    ]
  },
  {
    "id": 8,
    "imageUrl": "",
    "title": "글또 1~10기. 7년의 커뮤니티 운영 회고",
    "description": "이 글은 개발자 글쓰기 모임 - 글또를 7년 동안 운영하며 배운 것을 회고하기 위한 목적으로 작성했습니다\n키워드 : 글또, 글또 회고, 커뮤니티 운영\n\n글또 소개\n글또는 2018년 1월 3일에 만든 개발자 글쓰기 커뮤니티\n    \n글또의 풀 네임은 “글 쓰는 또라이가 세상을 바꾼다”로, 페이스북 그룹의 “얼또(얼리 또라이가 세상을 바꾼다)”의 이름에 영감을 받고, 운영자이신 미정님에게 허락을 구하고 사용했다\n기본적인 규칙은 예치금을 납부하고, 2주에 글을 1번씩 제출하는 것\n    \n중간에 쉬어가기 위한 패스는 2번 주어졌다\n활동 기간은 6달\n2주에 1개씩 작성하면 총 12개의 글을 작성하게 된다\n2025년 3월 기준 총 약 1,000명이 참여했다\n10기 기준 글쓰기, 글쓰기 세미나, 커피챗/모각글, 큐레이션, 소모임, 100명 규모의 오프라인 모임, 대나무숲 등의 활동들이 존재\n    \n더 자세한 내용은 글또 웹페이지에 작성된 글또 소개 참고\n글또의 기수별 참여자 수는 아래 그래프를 보면 확인할 수 있다\n    \n1기를 13명으로 시작해서, 10기는 639명까지 확장했다. 4900% 성장을 이룬셈\n매번 전 기수 대비 인원이 최소 30%씩 증가했고, 참여자의 평균 40%는 다음 기수를 연장했음(6개월 뒤 리텐션 40%)\n\n\n글또를 만들고 계속 운영한 계기\n처음엔 주변 지인들이 개발 블로그를 쓰고 싶은데, 어렵다고 이야기를 들었다. 하고 싶지만 의지가 잘 생기지 않는다는 이야기를 들었고, 주변 지인들을 돕기 위해 모임을 만들기 시작했다\n손실 회피 성향 + 사회적 지지 + 책임감을 기반으로 한 모임 생성\n    \n손실 회피 성향을 자극하기 위해 예치금을 걷었고, 다른 사람들과 글쓰기를 약속하면 사회적 지직와 책임감이 생겨 글을 쓰게 될 것이라 생각했다\n기수가 지나면서 개인적인 관점에서 인생의 깨달음이 생기고, 많은 분들이 좋은 길로 나아가길 바라면서 책임감에 커뮤니티를 꾸준히 운영했다\n\n\n시간의 흐름에 따른 글또의 성장과 변화\n지금 돌이켜 생각하면 초기 / 중기 / 후기로 볼 수 있다. 대부분의 변화는 후기에 많이 있다\n초기에 글또를 참여한 분이 10기에 다시 참여하셨는데, 천지 개벽 수준이라고 말하셨다. 내가 생각해도 천지 개벽 수준이다. 많은 것들을 시도했고, 많은 문화를 만들었다. 시간이 걸린 일이다\n과거에 작성한 글또 회고 글도 지금 다시 보면 참 재미있고, 과거의 내 생각을 다시 볼 수 있어 재밌다\n    \n글또 2기 다짐글\n글또 4기 다짐글\n글또 4기 운영 회고 및 글또 5기를 준비하며 쓰는 글\n글또 10기 참여자 관점, 운영자 관점의 다짐\n\n1기-3기 : 글또의 초기\n1기\n    \n2018년 2월 ~ 7월\n글또 1기(13명) 참여\n페이스북 그룹에서 활동\nOT를 하면서 오프라인으로 모여서 이야기를 나눴던 기억이 있다. 이 과정에서 메일로 내용을 취합\n이 시기엔 글쓰기에 집중했던 시기라 커뮤니티라고 할 요소는 적었다. 자신의 글을 블로그에 작성하고, 페이스북 그룹에 글을 올린다\n이 방법은 소수 인원일 때는 괜찮으나, 페이스북 알고리즘에 영향을 받고, 서로 글을 확인하는 것이 불편했다\n2기\n    \n2018년 11월 ~ 2019년 5월\n글또 2기(25명) 참여\n슬랙에서 활동\n수동 글 리뷰어 배정\n직무 별로 퍼실리테이터를 두고, 퍼실리테이터분들이 대화를 자연스럽게 진행할 수 있도록 했다(Thanks to 권혁우님, 민지연님, 이종호님)\nWrite the Docs Seoul : 글쓰는 개발자 모임, 글또 발표\n        \n이 때 작성했던 발표 자료를 봤는데, 내가 잊고 살았던 것도 있고 계속 간직했던 것도 있다. 꾸준함엔 힘이 있다\n평소에 기록을 해두고, 발표를 하면 나중에 먼 훗날 돌이켜 볼 때 도움이 된다. 그래서 글을 작성한다\n마이크로소프트웨어 396호에 “개발자 글쓰기 모임, 글또” 투고\n3기\n    \n2019년 7월 ~ 12월\n총 4명의 운영진(Thanks to 고석진님, 이동규님, 이보라님, 전인아님)\n글또 3기(44명) 참여\n슬랙에서 활동\n슬랙에서 글 제출을 확인하고 리뷰어를 확인해주는 자동화 코드 개발(지니)\n글 리뷰어 자동 배정 시스템 개발(Thanks to 지찬규님)\n데이터야놀자 2019 발표 컨설팅\n        \n정민정님의 Gan을 활용한, 내 손글씨를 따라쓰는 인공지능\n이창현님의 타다(TADA) 서비스의 데이터 웨어하우스 : 태초부터 현재까지\n마이크로소프트웨어(IT 잡지) 399호에 “글또의 자동화 요정, 지니 프로젝트” 투고\n\n4기-6기 : 글또의 중기\n이 시기는 코로나로 인해 오프라인 모임이 어려웠던 시기였다. 그런 반면 사람들이 모임에 대한 욕구가 늘어났고, 참여자들은 많아졌는데 어떻게 해야 좋을지를 고민했던 시기\n    \n회사 업무도 많았던 시기라 회사 업무에 집중했다. 커뮤니티 관점에서는 천천히 발전했다\n5기 때부터는 참여자보단 운영자 역할에 집중했다(그러다가 10기에 다시 참여자로 복귀)\n맥북을 보다가 OT 자료를 다시 봤다. 초기에 OT 자료는 30~60쪽이였다. 10기 OT 자료는 159쪽인데, 예전 OT 자료와 지금 OT 자료를 보면 나 또한 의견을 전달하는 능력이 많이 달라졌다는 것을 느낄 수 있고, 커뮤니티에 대한 고민을 정말 많이 했다는 것이 느껴진다. 참 격세지감을 느낀다. 어렸을 때의 나는 이렇게 했구나\n\n4기\n    \n2020년 3월 ~ 8월\n총 11명의 운영진(Thanks to 고석진님, 구유림님, 김지훈님, 류지환님, 마광휘님, 이상협님, 이종진님, 이창현님, 전인아님, 정민정님, 지찬규님)\n글또 로고 제작(Thanks to 김나영님)\n글또 4기(69명) 참여\n신입 멘토링 진행\n5기\n    \n2020년 11월 ~ 2021년 5월\n5, 6기 때는 운영진을 모집하지 않고 필요할 때만 도움을 구했다. 코로나 시기였고, 회사에서 업무가 너무 많았다. 회사 일도 너무 재밌어서 열심히 했다. 모빌리티 업계에서 데이터 분석, 데이터 엔지니어링, 머신러닝을 모두 할 수 있다는 것은 다시 생각해도 너무 즐거운 경험이다. 게다가 쏘카/타다의 비즈니스 모델이 달라서 데이터를 활용하는 방식이 다른데, 둘 다 경험할 수 있는 점은 다시 생각해도 감사하다. 운이 좋았다\n글또 5기(94명) 참여\n고민있어요 채널 생성 : Anonymous Bot 활용\n온라인 모임 2회\n팀별 온라인 회고\n신입 멘토링 진행\n쉼에 대한 이야기 : 쉼퍼런스 진행\n회고 모음집 제작\n6기\n    \n6기 때는 과거에 했던 것들을 반복했다. 무언가 새로운 것을 하진 않고, 지금 인원을 유지한 상태로 진행했다\n슬랙을 들어가서 채널을 보는데 이 때 운영진 채널이 없다. 이 시기에 운영진 없이 진행했나? 이건 기억이 희미해졌다. 6기까지는 별도로 운영진 회의록 템플릿이 없었다\n2021년 8월 ~ 2022년 1월\n글또 6기(132명) 참여\n기억나는 것은 6기 때 굿즈를 처음 제작했다. 이 때 처음 굿즈를 만들었고, 이 당시에 작업실에 물건 받아서 손수 포장해서 보냈던 기억이 있다. 가내 수공업을 하면서 보내는 것은 정말 어렵구나를 느꼈다\n가운데에 있는 글또 키링이 제일 비쌌던 기억이 있다. 그래도 받은 분들이 좋아했던 기억이 난다.\n\n\n2기 ~ 6기 슬랙 채널\n생성되는 모든 퍼블릭 채널에서 어떤 이야기를 하시나 보곤 했는데, 시간이 지나니 이런 것들도 있구나..! 다시 상기할 수 있다\n2~6기의 슬랙 채널만 봐도 어떤 일이 있었는지 유추할 수 있다\n점점 커뮤니티로 커지는 것이 느껴진다\n초기, 중기 땐 나도 인간적으로 덜 성숙(?)했고 일단 하면서 개선했던 것 같다. 지금 생각해보면 초기, 중기 때는 나도 20대였다. 많은 경험을 하고, 책도 읽고 그러면서 발전한 내 생각이 글또에도 반영된 것 같다\n\n\n7기 : 글또의 후기 시작, 마치 르네상스\n이 시기부터 큰 변화의 시작이 보였다. 참여하는 분들이 100명이 넘어가면서 고민해야 할 부분이 많아졌고, 서로 더 많이 교류할 수 있도록 도와주는 것이 필요했다\n    \n개인적으론 이 시기엔 퇴사를 앞두고 있었다. 퇴사 전에 할 일들이 참 많았고, 커뮤니티 일도 많았다\n7기를 대비하기 위해 습관 형성에 대한 논문, 서적들을 학습했고, 조직을 어떻게 꾸릴 것인가에 대한 것도 고민했다\n사실 이 시기부터 후기가 아니라 중기로 봐야하나? 싶은데 일단 후기로 작성해본다.\n2022년 5월 ~ 2022년 10월\n글또 7기(182명) 참여\n    \n운영진 8명(Thanks to 김정희님, 김진환님, 박상오님, 이민경님, 이상협님, 이찬주님, 정종윤님, 조동민님)\n이 시기부터 운영진 활동을 더 구체화했다. 어떻게 해야 운영진분들도 동기부여를 잘 받을 수 있을까?를 고민했다\n익명 슬랙 메세지 전송을 위한 대나무숲 봇 개발(Thanks to 정종윤님)\n    \n종윤님의 개발 과정 글\n같은 직군별 커피챗\n글또 내부 컨퍼런스 (글또콘)\n    \n글또콘 발표 자료\n\n운영진 활동의 체계화\n과거 기수엔 운영진이 있었어도 체계적이지 않았다. 왜 체계적이지 않았는가 생각해보면 나 또한 체계적으로 일을 한다는 것에 대해 경험이 없었기 때문이다. 쏘카에서 팀 리드, 디렉터 역할을 하면서 조직의 문서 작성, 체계적인 구조, 어떻게 상호 협력할 것인가 등을 고민했던 부분이 크게 도움이 되었다\n쏘카의 경험을 기반으로 운영진 활동 또한 개편했고, 매 기수 구조적인 변화를 조금씩 만들었다\n    \n이 때 Ground Rule을 만들고, 이걸 계속 활용했다\n대표적인 Ground Rule은 다음과 같다\n        \n운영진 내에서 모이면 노션에 기록을 남긴다(템플릿 2-3개가 제공)\n운영진 내에서 만들어지는 설문, 발표 자료 등은 하나의 구글 드라이브에 저장한다\n너무 열심히 하지 말기. 많은 것을 동시에 하려고 하지 않는다. 딱 1가지만 해보기. 회사 일에 집중하면서 시간이 날 때 글또 운영진 활동을 한다\n            \n만약 동시에 많은 것을 하려고 하면, 성윤이 이를 억제할 수 있음\n내가 제일 중요하게 생각한 관점인데, 너무 열심히 하면 반발심으로 번아웃이 심하게 올 수 있다고 생각했다. 그래서 역설적이지만 너무 열심히 하지 말라고 이야기해왔다. 이건 나에게도 하는 말이다\n글또 운영진 활동을 하면서 “즐겁게” 하고 있나 생각해보기. 즐겁게 하고 있지 않다면 잘못되고 있다고 생각하기. 즐겁게 하면서 활동하는 것이 우리의 핵심\n인생에서 갑자기 힘든 일이 생길 수 있고, 그 시기에 무리하게 일을 하지 말고 사람들에게 자신의 상황을 공유하고 회복하는 것에 집중하기\n언제든 고민이 있다면 성윤에게 DM하기. 무엇이어도 좋으니 고민을 들을게요\n당연한 것처럼 보이지만, 막상 상황이 되면 당연하지 않기에 항상 강조했고, 안전하다는 것을 알려주고 싶었다\n커뮤니티의 비전을 이 때 다시 잡았다. 결국 글또를 통해 내가 전하고 싶은 가치가 무엇인가? 계속 생각했고, 마침내 다음과 같은 문장을 작성할 수 있었다\n    \n글을 작성하는 개발 직군분들이 모여서, 좋은 영향을 주고 서로 같이 자랄 수 있는 커뮤니티\n운영진 전체 모임은 1~2달에 1번만 진행하고 모였을 땐 일 이야기는 후딱 끝내고(?) 같이 대화를 하거나 즐거운 경험을 하도록 하려고 했다. 회사처럼 일 이야기만 하는 회의를 안하고 싶었다(근데 나중에는 나보다 다른 분들이 글또 운영에 대한 이야기를 더 많이 하자고 하셔서 그렇게 했었다)\n\n대나무숲\n살다보면 고민이 생긴다. 아 이거 어떻게 해야할까? 모르겠다 싶은 그런 고민\n    \n이런 고민들을 어딘가 나눌 공간이 있으면 좋지 않을까?란 생각을 했고, 글또 내에서 만들었다\n기존엔 만들어진 앱을 사용하다가 종윤님이 대나무숲을 만들어 주셨다\n        \n임금님 귀는 당나귀 귀! 대나무숲 슬랙 앱 만들기\n익명 채널은 항상 트레이드 오프가 있다. 사람들이 일반적으로 아는 익명 채널처럼 쓰면 점점 처음 의도와 변질될 의도가 있다\n그래서 처음에 명확하게 대나무숲을 어떻게 써야 하는지 가이드를 드렸다\n        \n욕이나 반말은 불가능\n다른 사람을 공격하는 말투는 이유 고지 후 삭제\n이렇게 운영하니까, 따뜻한 익명 채널이 되었다\n    \n실제로 많은 고민들을 나누고, 익명이 아니라 실명으로 댓글을 다는 분도 생기고, 그러다가 커피챗도 하는 경우가 있었다\n대나무숲에 글을 작성한 사람을 로깅할 것인가에 대한 문제도 논의했는데, 이걸 로깅하는 것 자체가 불안함이 생길 수 있다고 생각해서 구성원들을 믿고 로깅을 하지 않았다. 지금까지 문제가 된 케이스는 거의 없다.\n많은 분들이 대나무숲에서 공감을 얻는다고 말하셨다. 따뜻한 공간을 만들기 위해 익명 채널을 만들고, 잘 운영하는 것이 핵심이였다\n나는 항상 실명으로 남기곤 했는데, 사실 나도 익명으로 올린 적이 있다\n    \n그냥 샴푸를 사야하는데 탈모용 샴푸가 있나 싶어 물어봤다(사실 저 탈모 없는데 이거 올리려고 10기 때 올려봄)\n\n10기 때 성장에 대해 고민이 있다는 글에 작성한 댓글\n\n\n오프라인 모임\n코로나가 끝나가서, 다 같이 모여보자!라는 생각을 가지며 오프라인 모임인 글또콘을 준비했다\n컬리에서 준비했는데, 그 때 참 잘 준비해주셔서 잘 수행했다. 그리고 10기 데이터 반상회 때 다시 컬리를 찾아서 반가웠다\n글또콘에 다녀온 직후에 작성한 글\n\n\n굿즈\n6기 때 굿즈 만들 때 고생해서(?) 이번엔 좀 더 편하게 만들고 싶었다\n운영진이신 김진환님께서 도움을 주셔서 만들 수 있었다\n    \n풀 패키지로 만들었는데, 그 이후엔 이렇게 만들지 못해서 아쉽다\n비용이 많이 드는데, 인원이 많아져서 감당하기 어렵다고 판단했다\n굿즈를 만드는 운영진이 계속 있어야 하는데, 암묵지가 개인에게 귀속될 경우에 대대손손 유지가 되지 않는다. 나도 어느정도 알고 있었지만, 더 체계화를 해야겠다고 다짐했던 시기\n만약 다시 한다면 연예인 팬클럽처럼 가입 후에 제작해서 전달하면 좋을 것 같다. 굿즈는 소속감을 줄 수 있는 매개체다\n진환님이 작성해주신 글또 7기 굿즈 제작기\n\n\n\n8기\n2023년 2월 ~ 23년 7월\n글또 8기(336명) 참여\n    \n18명의 운영진(Thanks to 강나영님, 김동인님, 김은찬님, 김재휘님, 김정희님, 류지환님, 송현주님, 오원종님, 이수현님, 이찬주님, 임지영님, 임지훈님, 정종윤님, 정현수님, 조슬지님, 채정현님, 최현구님)\n글 제출을 편하게 진행하기 위한 또봇 개발(Thanks to 김은찬님)\n커피챗과 피드백을 합친 커피드백 시도\n제출한 글을 큐레이션하는 큐레이션 시작\n    \n큐레이션 모음\n글또의 세계관 재구축 : 빌리지 / 코어\n오프라인 모임인 반상회 진행\n    \n빌리지 반상회 발표 자료\n글쓰기 교육 진행\n\n지원 방식의 개선\n신규 지원을 할 때, 삶의 지도라는 것을 받았다\n    \n자신이 살아온 과정을 작성하는 미션으로 자신에 대해 생각해보는 기회를 드리고 싶었다\n참고로 이 과정에서 잘 작성했다, 잘 작성하지 못했다란 가치 판단은 하지 않고 주어진 기준 이상으로 작성했는지를 봤다. 주어진 요구 조건을 명확히 지키는가? 작성된 내용을 지킨 분들만 합격을 드렸다\n        \n불합격은 대부분 글자수를 미달하거나, 완성하지 못했거나, 권한을 풀지 않은 경우 발생했다.\n불합격을 많이 드리는 것이 내게 불편한 마음이였다. 그래서 나는 최대한 기회를 드리고 싶었다. 불합격이 많은 요즘 시대에 내가 합격을 드려서, 참여자분들의 자존감에 조금이나마 도움이 되면 좋지 않을까? 라는 생각을 했다. 그럼에도 불구하고 기준은 명확히 설정해서 그 기준을 지켰다. 그 기준을 통과하지 못한 분들에게 불합격 메일을 보내는 것은 여전히 내게 힘든 기억이다. 인원이 많아질수록 이 괴로운 경험이 커진다.\n운영진분들에게 공유드린 삶의 지도 합격과 불합격의 기준\n\n\n운영진 활동\n운영진도 많아지면서, 커뮤니티에서 내가 누구를 케어해야 할까? 생각하면 운영진이라고 생각했다. 운영진분들이 나아가서 더 많은 분들에게 도움을 줄 것이라 생각했다\n커뮤니티를 오래 운영하면서 느낀 점은 자발적으로 돕는 선한 의도가 있어도 장기적으로 가는 것이 참 어렵다. 그리고 열심히 하겠다고 했다가 못했을 때 머쓱해지는 것이 있고, 그래서 더 나타나지 않는 경우가 있다. 이 머쓱함을 모르는 사람들은 그냥 활동을 안했다고 생각하는 경우가 있다. 나는 이런 상황이 건전하지 않다고 생각했고, 누구나 힘들 수 있고 그런 시기를 말해도 문제가 안되도록 운영진을 꾸리고 싶었다\n    \n운영진 OT에서 당부한 이야기\n위에 7기 그라운드 룰과 맥락은 같지만, 더 잘 전달하려고 했다\n\n아, 그리고 9기 운영진 MT도 다녀왔고, 마지막엔 다 같이 사진도 찍었다. 이것도 다 추억이니 남겨둔다(혹시 자신의 얼굴을 가리고 싶은 분이 있다면 연락주셔요)\n\n\n\n세계관 재구축\n기존에는 글또의 세계관이라는 것이 따로 없었고, 채널을 구분하는 prefix(1_, 2_, 3_ 이런 느낌)만 있었다. 그러나 사람들이 더 많아지면서 각각의 prefix에도 의미를 부여해야 더 이해하기 쉽다고 생각했다\n    \n글또는 여러 사람들이 참여하는 큰 공동체라 생각했고, 각 공동체는 직무 별로 마을이 있다고 생각했다. 그래서 빌리지 채널을 만들었고, 이 빌리지는 같은 직무가 있는 채널이다.\n        \n그리고 빌리지 내에 코어 채널이 있다. 코어 채널은 7~10명 정도 되는 인원이 같이 있고, 글을 제출하는 공간이다\n코어 채널에서 서로 글을 조금씩 보고, 빌리지 채널로 확장되길 바라는 마음으로 지었다\n직무 별 오프라인 모임은 빌리지의 모임이기에 빌리지 반상회라고 지었다. 반상회라고 하면 요즘은 잘 안하지만, 아파트에서 반상회를 진행하는 것을 상상하며 서로 안건에 대해 이야기도 하고, 어떻게 지내나, 음식도 나눠 먹고 등을 생각하면서 지었다\n소모임 채널(4_)은 소모임 채널이라고 정의했다. 이후 10기 때 소모임 채널도 의미를 더 부여했다\n아래는 빌리지 반상회 소개 글. 운영진이 다 진행하는 것이 아니라 반상회 준비위를 새로 꾸려서 진행했다\n\n\n봇의 진화\n개인적으로 8기 때 “또봇”의 탄생이 많은 사람들이 편해지고, 할 수 있는 것들이 많아졌다. 은찬님이 참 감사하다\n그 전에는 글을 작성한 후, 슬랙에 전송한 후에 제출 이모지를 누르면 제출 이모지 여부에 따라 글 제출을 확인했다\n    \n그러나 봇이 생기면서 아예 또봇을 통해 글을 제출할 수 있고, 데이터를 더 잘 관리할 수 있게 되었다\n처음엔 글 제출 기능만 있었는데 10기 때는 더 많은 기능을 담당하고, 앞단에서 데이터를 저장하는 역할도 하고 있다\n    \n글또에 참여하는 분들이 봇을 보면 참 신기하게 생각하는데, 그 중에 대표적인 친구가 또봇이다. 또봇 스티커도 만들어서 오프라인 모임 때 공유하고 있다\n또봇에 대한 내용은 은찬님의 글을 공유\n    \n개발자 글쓰기 커뮤니티는 ‘슬랙 봇’을 어떻게 사용하고 있을까?\n카테고리 수집하려다 슬랙 봇까지 개발해버린 건에 대하여…\n대표적으로 할 수 있는 글 제출 과정은 아래와 같다\n\n\n\n  \n또한 생일 축하 봇도 만들었다\n    \n생일이란 것을 중요하게 생각하는 사람이라, 생일 축하를 해왔다.\n기존에는 생일이 기록된 시트에서 보고 수작업으로 했으나, 재휘님이 운영진 채널에 하루에 1번씩 메시지가 오도록 해줬다\n그걸 보고 생일 명단을 확인하고, 채널에 공유한다. 생일 짤도 한 30개 정도 저장되어 있다.\n이렇게 생일 축하하는 과정을 통해 따뜻함이 전해지길 바랐다. 우연히 만난 것이 아니니까\nApps Script를 사용해 구현했다. 아래는 운영진 채널에 도착하는 내용. 운영진 두분이 생일이셔서 운영진끼리 생일 축하도 하고, 다른 채널에도 공유했다\n\n\n글쓰기 교육\n커뮤니티를 5년 정도 운영하니 사람들이 겪는 반복적인 패턴이 보였고, 그 패턴들은 과거의 나도 경험했던 요소였다. 그래서 이걸 어떻게 도움을 드릴까? 고민하다가 내가 글을 어떻게 작성하는지, 많이 겪는 고충들을 공유했다\n    \n이 때 진행한 내용을 토대로 10기 할 때 인프런에 강의를 출시했다. 블로그 페이지뷰 300만이 알려주는 “실용주의 기술 블로그 글쓰기”\n좋은 글을 쓴다는 것은 하루 아침에 되지 않는다. 꾸준함이 수반되어야 하고, 좋은 글을 하나만 쓰는 것이 아니라 꾸준히 쓰면서 점점 글의 역량이 올라가야 한다\n        \n그와 더불어서 SEO도 챙기는 것이 필요한데, SEO에 대해 많은 분들이 모른다. 그냥 글만 쓰고 누군가 내 글을 찾아주면 좋겠다고 생각한다. 물론 검색 엔진이 잘 색인해주면 좋겠지만, 블로그 운영 초반일 때는 SEO에 대한 전략도 가지고 있으면 좋다\n포트폴리오로 활용하고 싶은데 글을 잘 작성하지 못하는 분들이 종종 조급해 하는 경우가 있는데, 처음부터 다 잘하려는 것보다 점진적으로 가면 된다고 말씀드렸다\n글을 작성하거나, 어떤 일을 할 때 대부분 마음가짐, 멘탈 관리가 중요하다\n이 내용을 나중에 데보션에서 강의했었다\n이 강의를 처음에 하지 않고, 3회차 제출 후에 진행했다.\n    \n이렇게 한 이유는 강의를 처음에 들으면 “당연한 것 아니야?”라고 생각할 수 있기 때문이다. 대부분 그렇다. 근데 막상 하면 힘들다\n그래서 애초에 3번 글을 쓰면서 글쓰기가 좀 어렵구나라는 것을 인지하고 => 그 때 이야기를 하는 것이 효과적이라 생각했다\n문제 상황을 겪기 전까지는 공감하지 못할 수 있다고 생각해서 일부러 이런 방식으로 강의를 진행했다\n많은 분들이 언급하는 글쓰기의 어려움은 아래와 같다. 강의 내용 중 일부다. 글또에 오래 참여하신 분들은 이 어려움에 대해서는 이제 얼추 해결된 것 같다\n\n\n\n9기\n2023년 11월 ~ 2024년 5월\n글또 9기(452명)\n    \n25명의 운영진(Thanks to 강나영님, 강승현님, 김은찬님, 김재휘님, 김정희님, 김준홍님, 류지환님, 박수민님, 배지훈님, 성연찬님, 송경근님, 송민혜님, 신해나라님, 이찬주님, 임정님, 임지훈님, 정이태님, 정종윤님, 정현수님, 조동민님, 조재우님, 지정수님, 채정현님, 최현구님)\n4명의 커뮤니티 매니저(강나영님, 김정희님, 조동민님, 채정현님) : 운영진들의 활동을 즐겁게 하려면 어떻게 해야할까?를 고민하는 파트\n\n봇, 시스템 개발\n데이터 파이프라인 구축(To BigQuery)\n    \n또봇은 데이터를 스프레드시트로 저장하는데, 참여자들의 유저 로그(슬랙 데이터)를 분석하는 것이 좋다고 판단했다. 그래서 슬랙의 Export 기능을 사용해 BigQuery로 데이터를 추출했다\n그러나 슬랙 데이터의 문제는 이모지 데이터에 있다. 이모지를 언제 했는지에 대한 시간 데이터는 없고, 추출을 시도할 때 최신의 상태만 제공한다. 스냅샷 데이터라고 볼 수 있다\n        \n스냅샷이여도 사용할 수 있기 때문에, BigQuery에 적재해서 글또의 핵심 지표를 확인했다\nCRM Push 메세지 봇 데달부 개발\n    \n위 데이터 파이프라인이 구축되었으니, 사람들에게 가치를 제공해줄 수 있다고 생각했다\n글또에서 활동을 얼마나 했는지 보여주면 좋겠다는 생각을 했고, 실시간은 아니지만 주기적으로 메시지를 전달해도 좋을 것 같았다. 그래서 운영진분들이 개발을 해주셨고, 사람들에게 그동안 활동을 정리해서 공유했다\n이 부분은 9기에 실험적으로 시도해서, 10기에도 진행했다\n운영 자동화를 위한 글팽이 개발\n    \n사람이 많아지면 간단하게 사람을 태그하는 것도 일이다. 운영진의 수도 많아져서 하나씩 다 체크하는 것이 어려웠다\n슬랙의 메시지에 이모지를 안한 사람을 자동으로 태그하는 운영 유틸성 봇인 글팽이을 만들었다\n제출 글을 확인해주는 글빼미 개발\n    \n글또는 1,000자 이상의 글을 작성해야 하는 기준이 있다. 그러나 글을 제출할 때 보면 글자수가 800자인 경우도 존재한다. 이럴 경우엔 제출 글로 인정하지 못한다.\n건수가 많진 않지만, 직접 해왔는데 운영의 부담으로 다가왔다. 그래서 이를 해결하기 위해 제출된 글을 보고 글자수를 확인하는 글빼미가 개발되었다\n이어져서 글빼미는 밑에 나오는 LLM 기반 큐레이션과 합쳐져서 LLM 기반 글 피드백 시스템으로 진화한다\nLLM 기반 큐레이션\n    \n참여자가 450명이 넘어간다는 것은 2주에 제출되는 글이 최소 400개는 된다는 말이다. 이걸 큐레이션 크루분들이 다 보면서 확인하기엔 시간이 많이 걸린다\n이것도 운영의 이슈기 때문에 LLM을 사용해 자동화를 진행했다. 제출된 글들을 점수화해서 기준에 맞는 것들 위주로 글을 보고 큐레이션을 진행했다\n큐레이션 과정은 아래 글에 자세히 나와있다\n        \n큐레이션은 어떻게 이루어질까요?\n글또 웹페이지 제작\n    \n기존엔 내 노션을 사용해서 글또 소식을 알렸는데, 글또의 웹페이지를 만들었다\n9기 중후반에 만들었고, 이걸 기반으로 10기 때는 글또에서 진행되는 여러 내용을 블로그로 남겨두고 싶었다. 글로 남겨두면 운영진분들은 자신의 경험이 되고, 참여자분들에겐 추억으로 남을 수 있을 것이라 믿었다\n그 외에도 사람들의 인터랙션을 그래프 관점으로 봤다. 그래프를 집계하면 Tabular가 되지만, 그래프로 시각화하는 것이 꽤 괜찮다는 것을 느꼈다\n봇, 시스템 개발에선 운영진분들이 거의 다 구현을 해주셨다. 나는 방향성이나 의사결정을 해야하는 것들 위주로 정리했다. 이렇게 봇, 시스템이 발전하는 것은 나에게도 영감을 주었고, 글또 참여자분들에게도 영감을 주었다(매 기수 OT 때마다 봇의 기능이 확장되기에)\n봇의 세계관\n\n\n사람들의 연결\n글또의 제일 핵심 목표는 글을 잘 작성하는 것이다. 두번째 목표는 사람들과 연결되는 것. 어떻게 해야 연결을 더 잘 시켜줄 수 있을까?를 고민했다\n같은 직무 내 랜덤 커피챗\n    \n글또는 자유롭게 커피챗을 하고 인증하는 문화가 존재한다. 많은 분들이 커피챗을 자발적으로 하고, 커피챗을 모집하기도 한다. 처음이 어렵지만, 그 이후엔 자주 참여하는 패턴을 보인다\n이 자율 커피챗도 잘 동작하지만, 커피챗 참여가 주저되는 것도 사실이다. 그래서 글또에서 랜덤 커피챗을 매칭한다. 이 때 제일 어려운 것은 조편성이다\n거리, 연차, 주제 등 다양한 요구 사항이 있다. 이 때 모든 요구 조건을 다 수용하는 것은 어려워서 연차나 소재 위주로 조를 나눴다\n직무 별 오프라인 빌리지 반상회\n    \n오프라인 반상회 프로세스가 구체화가 되었고, 이 프로세스를 기반으로 10회 넘는 행사를 진행했다\n이제 100~150명 규모의 행사는 쉽게 운영할 수 있다. 제일 어려운 것은 장소 섭외다. 장소만 잘 섭외되면 그 이후는 컨셉 회의, 우리가 행사에서 바라는 것을 기반으로 확장할 수 있다\n커뮤니티의 행사에 도움이 되길 바라는 마음에 프로세스를 공유\n        \n글또 오프라인 모임 프로세스 템플릿\n\n그 외에도 Activation 크루에서 글또하우스라는 이름으로 사람들과 고민 상담소를 진행했다. 처음엔 나는 조금만 참여하면서 살짝 살짝 관여했다. 모두 다 내가 관여한다면 스스로 하는 것이 줄어들 수 있기 때문에(내가 이야기를 하면 그 결정으로 갈 확률이 높기에) 자율성을 드리기 위해 적당히 관여했다\n회고 소규모 모임도 했던 것이 떠오른다. 소규모 모임이여도 작은 모임이 점점 더 커질 수 있다고 믿기 때문에 어떤 것이여도 괜찮다고 운영진분들에게 계속 말했던 기억이 난다\n\n회사들과 협업\n회사들과 협업도 늘어났다. 열심히 사는 사람들이 모인 커뮤니티라서 교육이나 책 관련 후원이 많았다\n유데미에서 강의를 제공해주셨고, 코딩 테스트 플랫폼인 코드트리에서 체험권을 제공해주셨다\n그 외에도 빌리지 반상회를 위해 다양한 기업들이 공간을 빌려주셨다\n    \n채널톡, 우아한형제들, 팀 스파르타, 잡플래닛 담당자분들 모두 감사합니다\n\n\n10기\n2024년 9월 ~ 2025년 3월\n글또 10기(639명)\n    \n34명의 운영진(Thanks to 강나영님, 강승현님, 곽승예님, 곽희진님, 금정민님, 김은찬님, 김재휘님, 김정희님, 김준성님, 김해인님, 류지환님, 박건희님, 박수민님, 배지훈님, 성연찬님, 송경근님, 송민혜님, 이용선님, 이찬주님, 이호동님, 임정님, 임지훈님, 전희선님, 정윤영님, 정이태님, 정종윤님, 정현수님, 조동민님, 조재우님, 지정수님, 채정현님, 최태영님, 최현구님)\n\n운영진 팀(크루) 조직\n10기 때 운영진은 목적 조직으로 변화했다. 기존엔 기능 조직스럽게 움직였다면, 이번엔 목적 조직처럼 움직였다\n컨텐츠 크루, 커뮤니티 in 커뮤니티 크루는 신설했고 나머지는 기존에 있던 크루였다\n    \n(크루 : 운영진의 팀을 의미)\n컨텐츠 크루를 만든 것은 웹페이지가 생겼기 때문에, 컨텐츠를 추가하고 싶었다. 기억이 선명하게 남아있게 하고 싶었다\n커뮤니티 in 커뮤니티 크루는 4채널에 대한 Best Practice를 보여주는 크루다. 4채널을 만든 분들에게 4장님이란 명칭을 부여하고, 어떻게 해야 커뮤니티를 잘 운영할 수 있을지 알려드렸다\n        \n운영진에서 운영하는 대표 채널인 다진마늘(목표를 다지자)을 운영했고, 나는 커뮤니티를 어떻게 잘 운영할 수 있을지에 대한 교육을 진행했다\n실제로 다진마늘에 참여하신 분들이 이후 글또 활동이 활발해지는 데이터를 확인하고 추후에 다진마늘은 기존 유저의 채널로 만들고, 마늘쫑이라는 신규 멤버를 위한 채널을 만들었다. 마늘쫑에서 신규 멤버들끼리 온보딩을 하고 다진마늘로 보내는 방식이다(다진마늘 채널은 월별로 모집을 하고 있다)\n각 크루들의 역할\n    \n또봇/자동화 크루 : 또봇 고도화 및 자동화 시스템 개발(글팽이, 종이비행기, 포인트 시스템, 생일 알람)\n모임 크루 : 오프라인 반상회 모임 운영\nCRM 크루 : 글또분들의 참여를 독려하는 메시지 개발\nActivation 크루 : 커뮤니티의 활성화를 위한 Activation 실행. 다 같이 썰매를 타러 가기도 하고, 팟캐스트도 만들어서 배포하고 있다\n컨텐츠 크루 : 글또의 블로그에 컨텐츠 발행\n큐레이션 크루 : 글또의 제출 글 큐레이션 운영 및 글 피드백 자동화(글빼미)\n커뮤니티 in 커뮤니티 크루 : 글또의 소모임(4채널) 활성화를 위한 Best Practice 채널 운영(다진마늘)\n\n크루 외에도 TF 목적으로 어떤 집단이 리텐션이 높은가?라는 질문을 분석하기 위한 프로젝트이글 TF도 있다. 관련 내용은 곧 글또 블로그에 올라갈 예정이다. 어떤 사람들이 많이 활동하는지를 데이터를 통해 알아볼 수 있었다(Thanks to 곽승예님, 김해인님, 송해인님)\n10기 운영진 MT도 다녀왔다. 이 나이에 MT라니! 라는 생각도 했는데, 운영진분들이 가자고 하셔서 다녀왔다. 참 고마운 분들이다\n    \n운영진분들에게 감사를 표하기 위해 글또 로고가 박힌 후드와 NFC 명함을 선물로 드렸다\n\n\n오리엔테이션\n오리엔테이션에 정말 많은 공을 들였다\n    \nOT 때 많은 동기부여를 주는 것이 제일 중요하다고 생각했다. 제품으로 치면 제품의 온보딩으로 볼 수 있다\n많은 고민을 했고, 일반적인 커뮤니티 소개가 아니라 커뮤니티를 만든 “나”부터 소개를 시작했다. 나의 특성이 뭐고, 내 인생 비전이 무엇이고, 글또도 그 비전을 이루는 과정에서 만들었다는 이야기.\n그리고 참여자들이 어떻게 되면 좋겠다는 내 바람을 공유하면서, 비전 소개, 핵심 활동 소개\n활동 소개를 하면서 글또의 다양한 봇들을 소개\n참여하는 분들이 겪을 수 있는 상황, 마음가짐을 미리 제시하고 어떻게 활동하면 좋을지 활동 지침도 드렸다\n모든 것의 변화는 누군가 만들지 않고, 자신이 만든다는 메시지도 제시한다. “변화는 다른 사람이 만들어주지 않고 자신이 만듭니다”\n10기 OT 자료는 159쪽이나 되었다. 1시간 10~20분 정도 진행되지만 단순히 내용 전달이 아니라 스토리를 담은 OT로 만들었다. 실제로 들어보면 사람들의 동기부여가 올라갔다고 들었고, 기수를 연장하는 분들도 지루하지 않도록 내용을 매 기수 바꿨다\n10기 OT 자료를 그대로 공유하는 것은 어렵고, 일부를 아래에 붙여본다\n    \nOT에 참여했던 분들은 다시 생각해보는 기회가 되면 좋겠고, 커뮤니티에 관심이 있는 분들에겐 영감이 되길\n\n\n따뜻함과 유익함 전달하기\n커뮤니티가 잘 운영되려면 운영자의 노력이 꽤 필요하다. 필요하지 않다고는 말 못하겠다\n    \n나는 내가 잘할 수 있는 방식으로 따뜻함과 유익함을 전달하려고 했다\n나는 다른 사람을 생각해서 메시지를 작성하는 것에 부담을 느끼지 않고, 내용을 보고 정리하면서 내 의견을 정리하는 것을 즐긴다\n그래서 공지사항 메시지를 꾸준히 작성하고(마감 하루 전의 응원 메시지) 자료를 보고 유익한 자료가 있다면 채널에 공유했다\n회사에서도 팀장이나 대표가 모범을 보여야 그걸 따라서 구성원들도 실행한다는 말이 있다. 이 개념처럼 나도 어떤 것을 하는지, 왜 하는지를 공유하고 싶었다\n    \n근데 다시 봐도 내가 말이 많은 것 같다\n\n\n\n\n\n\n봇, 시스템 개발\n데이터 수집 역할 : 슬랙 Export -> 또봇이 데이터 수집\n    \n슬랙 봇에서 소켓 모드로 변경하면 슬랙에서 발생하는 모든 이벤트의 데이터를 수집할 수 있다\n참여자들의 행동 데이터를 수집할 수 있게 되었고, 이런 데이터를 수집해 바로 BigQuery로 보냈다\n유저의 행동이 발생하면 또봇이 받아서 넘기는 형태\n정확하지는 않지만 카프카처럼 앞단의 데이터를 받아서 다른 곳으로 넘기는 역할을 했다\n이 방식이 생겨서 또 여러가지가 가능했다. 밑에 나오는 포인트 시스템도 소켓 모드가 있어서 가능했다\n포인트 시스템, 종이비행기\n    \n은찬님과 구의역 탐탐에서 엄청 이야기를 하면서 설득했던 기억이 난다\n10기 때 새로운 시스템을 도입하고 싶었다. 나도 즐겁게 커뮤니티를 운영하려면 어떻게 해야할까? 나의 마음이 즐거워야 커뮤니티도 즐겁게 운영할 수 있어서 생각하다가 포인트 시스템과 종이비행기를 생각했다\n포인트 시스템은 글을 제출할 때 점수를 얻는 시스템이고, 공지사항을 확인하거나 커피챗 인증을 할 때마다 얻을 수 있다\n        \n글을 끊기지 않고 연속적으로 글을 작성하면 포인트를 많이 받을 수 있게 된다\n또한 특정 시즌엔 포인트 2배 시스템도 진행했다\n포인트로 뭘 할 수 있냐?라는 질문도 할 수 있지만 자신의 커뮤니티 내 활동을 이렇게 숫자로 보는 것이 큰 힘이 있다\n이걸 위해 게임 기획 책을 보면서 레벨업에 필요한 경험치는 어떻게 산출하나 공부했다. 지수적으로 갈 것인지 로그처럼 할 것인지 등 여러 의사 결정이 있었다. 그리고 그걸 경험하는 사람들이 어떤 감정일지 생각했다\n종이비행기는 일종의 편지다\n        \n슬랙 DM으로도 감사함을 표시할 수 있지만, 슬랙 DM은 내용이 더 쌓이면 흘러가기 마련이다\n그래서 누군가에게 감사함을 표시할 수 있는 종이비행기를 만들었다. 슬랙의 계정을 토큰으로 받아 웹페이지에 들어가면 자신에게 받은 종이비행기와 보낸 종이비행기를 확인할 수 있다\n따뜻함을 명시적으로 전달하는 매개체로 종이비행기를 사용했다\n또봇의 홈 탭\n    \n공지사항에 :noti-check: 이모지를 남길 경우 포인트, 글 제출시 포인트, 커피챗 인증시 포인트 등 다양하게 설계\n\n종이 비행기\n\n\n\n커피챗 인증 과정 고도화\n\n\n\n  \n글팽이\n    \n운영 자동화를 위한 글팽이도 계속 진화했다\n특정 유저 그룹을 태그하는 기능 : 예를 들어 @운영진_모임 을 하면 해당 사람들을 대신 소환해준다. 이게 유료 기능에선 제공하는 기능인데, 유료기도 하고 추가하는 과정이 편하지 않았다. 그래서 스프레드시트 기반으로 유저를 설정하면, 태그를 해주는 기능을 개발했다\n최근에는 랜덤 선택 기능도 추가했다. 어떤 활동을 할 때 랜덤으로 뽑고 싶을 때 활용할 수 있다. 모임 참여자를 선택할 때, 카드깡을 할 때(?) 사용한다\n태그한 후, 쓰레드에 @글팽이 체크 라고 하면 태그 대상 중 이모지를 하지 않은 사람에게 댓글을 달아달라고 한다\n\n\n\n  \n모두 반응했다면, 모두 반응했다고 응답한다\n\n\n\n  \n글빼미\n    \n기존엔 작성한 글의 글자수만 확인해주던 글빼미가 글을 피드백을 해주는 능력까지 생겼다\n종윤님과 지훈님의 협업으로 만들 수 있었다. 이 피드백은 내가 4기 때부터 바랬던 기능인데 10기 때 드디어 꿈이 실현되었다\n자세한 내용은 다음 두 글에서 확인할 수 있다\n        \n🦉 글또의 제출 글 검수 자동화 봇: 글빼미를 소개합니다!\n🦉 LLM 기반 블로그 피드백 자동화 : 글빼미의 피드백은 어떻게 이루어질까요\n지니\n    \n기존의 데달부에서 이름을 지니로 바꾸었고(과거의 BigQuery 추출 봇이 지니였다) 데이터 파이프라인을 고도화했다\n스프레드시트의 데이터를 BigQuery로 옮기는 코드를 작성했고, 그 과정에서 Airflow를 활용했다. 데이터 분석가 운영진분들이 Airflow를 사용해보고 싶어하셔서, 이걸 한번 사용하는 것도 괜찮겠다 싶어서 채택했다. 그 과정에서 스프레드시트 => BigQuery로 멱등하게 데이터를 추출하려면 어떻게 해야할지?에 대한 질문을 조동민님에게 계속 드렸다(나의 하드 트레이닝을 받으셔서 Airflow에 익숙해지셨다..ㅎ..)\n그리고 복주머니라는 이름으로 설날 전에 메시지를 보냈다. 받은 분들이 따뜻함을 느끼셨고, 2번째 하다보니 더 익숙해지는 것을 보일 수 있었다\n복주머니 관련 글도 곧 글또 블로그에 올라갈 예정이다\n\n회사들과 협업\n10기 때도 회사들과 협업을 진행했다\n    \n길벗과 한빛미디어에서 책을 후원해주셔서 사람들에게 책을 볼 수 있는 기회를 드렸다\n인프런과 협업해서 30% 쿠폰을 모두 다 받을 수 있게 해주었다\n코드트리는 한번 더 협업을 진행해서 알고리즘 테스트를 경험할 수 있게 해주었다\n모두 감사합니다\n튜링의 사과와 협업해서, 좋은 공간을 활용할 수 있었다\n    \n많은 분들이 이번 주 튜사가서 공부하실 분? 이런 내용을 보기도 하고, 튜링의 사과에서 모여서 각자 글쓰기(모각글)도 진행했다\n그 외에도 슬라이스와 협업해서 운영진분들의 NFC 명함을 제작했다\n    \n슬라이스 블로그 글\n\n데이터 기반 의사결정\n본업이 데이터 과학자인데 데이터를 부분적으로만 사용하고 있었다. 더 데이터를 잘 살펴보겠다는 다짐을 하며  BI 대시보드를 만들었고, 핵심 지표를 보면서 의사 결정을 진행했다\nBigQuery에서 스프레드시트로 데이터를 Export하는 것이 쉽기 때문에 스프레드시트로 BI를 구축했다\n아래와 같은 형태로 대시보드를 구축했는데, 자세한 내용은 올해 데이터야놀자 때 계속..\n\n\n\n운영자 관점 : 글또 운영의 경험과 배움\n이 부분은 떠오르는 것 위주로 기록. 엄청 정제된 글이 아니라 의식의 흐름으로 지금 떠오르는 내용을 작성한다\n\n커뮤니티 운영에 대해 떠오르는 생각\n커뮤니티는 힘이 있다\n    \n다정함도 힘이 있다. 아이유님의 뮤비인 Love wins all을 보면 대혐오의 시대에 그래도 사랑이 있으면 좋겠다는 메시지를 남긴다. 나 또한 이런 시기에 다정한 공간을 만들고 싶었다\n그러나 커뮤니티는 지속적으로 운영하는 것은 에너지가 많이 든다\n1주일에 2~30시간 넘게 글또를 위해 사용했다. 카톡이나 인스타보다 더 많이 접속한다\n에너지가 많이 들기 때문에 운영자의 멘탈 관리가 중요하다\n    \n커뮤니티에선 운영자들의 멘탈, 상황이 중요하다\n운영진도 여기에 포함되지만, 운영진이 아닌 커뮤니티를 이끄는 제일 권한이 많은 사람의 멘탈 관리가 필요하다\n운영진이 있어도 외롭게 느껴질 수도 있다. 그럴 때 너무 혼자 있는 것보단 운영자도 운영진과 같이 이야기를 나누는 것이 필요하다. 누구나 살다보면 힘든 시기가 있으니까\n운영진이 생각할 때 즐겁고, 재밌는 것을 해야한다. 그러고 이렇게 해야한다는 것을 운영진에게 잘 전달하면 된다. 그래야 지속성이 생긴다\n기수제로 바꿔서 동아리처럼 운영할 수도 있지만, 누군가가 몇 년동안 꾸준히 운영하는 것도 중요하다고 생각해서 계속 운영했다. 그리고 나의 의지를 받을 분이 없기도 했다\n    \n실제로 이 시기에 대기업에서 가업 승계를 어떻게 하는지, 후계자 양성을 어떻게 하는지, 대표를 어떻게 뽑는지 등을 많이 찾아봤다. 외부 CEO가 와서 성공한 케이스가 있는지 등\n프로세스의 중요성 : 문서화, 템플릿\n    \n프로세스를 만들면, 그 이후에 드는 에너지를 줄일 수 있다\n그리고 행사를 운영할 때, 어떤 작업을 할 때 반복적으로 사용할 수 있는데, 그럴 때 문서가 잘 작성되어 있으면 좋다\n봇의 자동화\n    \n단순한 작업이여도 반복된다면 그것은 자동화를 해야하는 대상이다. 반복의 기준은 3회 이상으로 정했다\n의사결정 기준의 확립\n    \n커뮤니티를 운영하다보면 애매한 일이 발생할 수 있다. 그 때 어떻게 할 것인가? 애매한 상황에 어떤 식으로 의사결정을 할 것인지 명확한 기준이 필요하다\n생각이 계속 고정되어 있으면 안된다\n    \n생각을 고정하지 않고 발산을 해서 시야를 넓히기도 하고, 너무 시야가 넓다면 줄이는 수렴 작업이 필요하다\n발산 - 수렴을 하면서 계속 발전하는 방식으로 나아가야 한다\n데이터 기반 의사 결정\n    \n커뮤니티 또한 제품이다. 제품을 만드는 것처럼 생각해보자\n참여하는 분들이 어떤 생각을 하고 있을까? 계속 고민한다. 어떻게 해야 더 좋은 가치를 받게 할 수 있을까? 지금 어떤 것을 느끼고 있을까?\n        \n이걸 나타내기 위한 지표는 무엇일까?\n그럼 뭘 해볼까?\n실험을 해보고, 반응이 오르는지 본다\nAB Test를 하기 어려울 확률이 높아서 전후 비교를 주로 했다\n운영자에게 연락하는 것은 DM이 아니라 퍼블릭 채널(문의 채널)을 만들어서 운영했다\n    \n참여자가 많은데, 많은 사람들이 내게 DM을 하면 내가 마음속으로 여유가 적어질 것이라 생각했다\n고인물이 티가 안나는 커뮤니티를 만들자\n    \n커뮤니티에 기수를 명시하는 곳도 있는데, 글또는 그런 것이 없다. 매번 슬랙 워크스페이스를 다시 만들었다\n그래서 말을 안하면 이 사람이 글또를 얼마나 했는지 모른다. 그래서 실제로 글또 언제부터 하셨나요?를 물어보는 경우도 있다\n커뮤니티에서 기수가 뭐가 중요할까, 그냥 계속 하고 있는지가 중요하지. 이런 생각을 해서 고인물이 티가 나지 않는 공간으로 만들었다. 그냥 다 똑같은 참여자다\n자신만의 흐름에 맞게 커뮤니티에 참여하는 사람도 괜찮다\n    \n커뮤니티에서 제공하는 모든 것을 다 경험할 필요가 없다. 각자의 목적에 맞게 커뮤니티를 잘 활용하면 된다\n너무 강요해서도 안되고, 경험을 제안하는 정도로 해본다\n다른 사람들이 열심히 활동하는데 난? 이런 생각을 가지는 경우가 있는데 그런 경우도 괜찮다고 말했다. 다른 사람과의 비교보단 과거의 나와 비교를 해야한다\n기쁜 일은 같이 축하하고, 슬픈 일은 같이 나눈다\n    \n나는 누군가의 죽음에 대해 민감하게 받아들인다. 대학교 1학년 때, 동기가 아팠던 기억이 있기 때문이다. 그리고 작년에 친할머니가 돌아가시면서 참 많이 슬펐다\n이런 슬플 때 찾아가면 조금이라도 힘이 되지 않을까 싶어서 장례식이 있다면 최대한 가려고 한다\n10기 때 장례식을 겪은 분이 계셔서 말씀을 드리지 않고 찾아갔다. 갔는데 참 눈시울이 붉어졌다. 그 감정을 아니까. 조금이나마 힘이 되었길\n위기를 위기로 생각하지 않고 기회로 생각하는 자세\n    \n위기라는 것은 마음 먹기 다르다고 생각하는데, 어렵거나 힘든 상황이 오면 그냥 즐겁게 문제를 해결해본다\n그래서 여태까지 위기가 뭐냐고 물어보면 떠오르진 않는다. 결국 해결했으니까\n어떻게 온보딩을 해야 할까? 매일 고민했다\n    \n어떤 모임에 처음 갈 때 항상 떨리는 기억이 있다. 예를 들어 오프라인 첫 모임이나 커피챗 첫 모임 때 갈까 말까? 고민을 하다가 가는 경우가 있다. 이런 분들을 위해 서로 모임 전에 조를 짜거나 익숙한 사람들과 라포를 쌓고 점진적으로 가면 만족도가 높을 것 같다\n막상 만나면 참 좋은 이야기를 한다. 그 과정을 더 좋게 해주는 것이 커뮤니티의 역할\n비판이 와도 비판으로 받지 않기\n    \n8기? 쯤엔 생일 축하를 공지사항 채널에서 진행했는데, 익명으로 왜 생일을 공지로 하는지 모르겠다는 메시지를 받은 적이 있다. 또한 채널 태그를 안하면 좋겠다(자주 안하지만 울린다고)는 의견도 같이 주셨다(지금 생각해보면 좀 뾰족하게 말을 하셨던 것 같다)\n이걸 보고 감정적으로 화를 내진 않았고, 오 이런 의견도 있구나 => 그럼 어떻게 해야할까?\n        \n생일 축하는 진짜 하고 싶은데! 그럼 채널을 옮기면 되겠다\n채널 태그는 많이 하진 않고 중요한 시점에만 하는데 그건 타협이 어렵겠다\n            \n대신, 채널 태그를 하는 시간을 정해야겠다\n회사에 있을 시간에는 채널 태그를 하지 않겠다!라는 기준을 세웠다\n운영진분들이 무언가 공지할 때 내가 항상 “채널 태그는 언제 하는 것이 좋아요”라는 말을 들었을 것이다. 다 의도가 있었다\n비판이 와도, 내가 비판으로 받아들이지 않고 그럼 뭘 해야할까? 를 생각하면 된다\n            \n오 이런 케이스도 있군 => Action Item\n내가 왜 이런 생각을 하는지 맥락과 이렇게 해보겠다라고 했는데 그 이후에 답변이 없었다\n이 비판이 나를 비판하는 것이 아니라 그냥 자신의 고민을 말했던 것이라고 생각하고, 이 분이 회사에서 힘든 일이 있어서 여유가 없어서 이렇게 했을 수도 있다. 누구나 그럴 수 있으니까. 나는 이해한다(그렇지만 다른 사람에게나 퍼블릭한 공간에 너무 뾰족한 것을 말하는 것은 용납하지 않는다)\n비슷하게 누군가 커뮤니티의 행동에 불만을 표하면 => 맥락을 최대한 설명하고, 그렇게 했던 분이 커뮤니티를 좋아할 수 있도록 만들려고 노력했다\n사람들이 감동을 받을 포인트를 만든다. 아주 많이. 그게 중첩이 되면 사람들이 감동을 받을 것\n    \n생일 축하\n공지 글의 메시지 톤\n활동 포인트\n주기적인 모임\n익명 고민 상담\n비교하지 않는 문화\n커피챗\n소모임 활동\n지역 모임\n반상회\n번개\n삶에 대한 질문\n좋은 자료 공유\n글 큐레이션\nAI 피드백\n종이 비행기\n팟캐스트\n기업과 협업(코드트리, 책 등)\n회고 템플릿, 여러 강의(글쓰기, 인생 등)\n여러가지가 다 의도가 있었다. 그 중에서 모두 경험하신 분도 있고, 경험하지 못한 분도 있을 것이다. 그거에 따라 커뮤니티에 더 Engage가 되었을 것 같다\n        \n물론 모두 다 경험하지 않아도 괜찮다. 자신의 선택에 맞게 가면 된다\n다만 그런 기회를 잘 만들고, 한번 경험하게 해주는 것이 나의 역할이였다\n\n비전과 동기부여\n커뮤니티도 비전이 중요하다. 이 커뮤니티에 참여해서 당신이 어떻게 될 것이다!라는 것을 보여주는 것이 필요하다. 그리고 그걸 상상하고, 하나씩 하다보면 결국 이룬 것이 핵심이다\n    \n물론 그게 모두 같은 모습일 수는 없고, 사람마다 만족도가 다를 것이다. 그래도 커뮤니티에 참여하기 전과 후를 비교해보면 무언가를 했다고 느끼는 것이 핵심이다\n참여자들의 동기부여\n    \n참여자들이 어떤 목적으로 커뮤니티를 들어왔는지에 따라 동기부여 전략이 달라진다\n어떤 사람들을 글을 쓰기 위해서 들어오는 경우도 있고, 어떤 사람들은 자신이명해지기 위해, 어떤 사람들은 사람을 만나기 위해 등 다양하다.\n고객이 분화되는 것을 의미하고, 그에 맞게 동기부여를 해야한다\n이렇게 다양한 고객군에게 어떤 가치를 줄 수 있을지 계속 생각해본다\n본질적으로 제일 중요한 가치는 무엇인가?\n사람들에게 정당성을 주는게 필요하다\n    \n정당성이라는 것은 이렇게 해야만 한다는 것을 의미한다\n정당성이라는 것은 여기는 이게 규칙이니까 이걸 해도 됩니다. 괜찮아요 등을 의미한다\n커피챗을 마음 편히 해보세요. 대나무숲을 편히 사용하세요. 이렇게 해보세요! 등 이런 규칙들을 모두 해보는 것을 권했다\n처음이 중요하다\n    \n처음이 제일 동기부여가 잘 되어있고, 동기가 점점 떨어지는 것은 당연하다\n내려가는 시점에 어떤 활동을 통해 다시 올리는지가 중요하고, OT 때 위에 나온 비전, 동기부여, 정당성을 다 잘 제시하는 것이 중요하다\n그 과정에서 어떻게 스토리를 전달할 것인지 많이 고민했다\n\n결국 사람이다\n좋은 사람이 모이고, 좋은 관계를 만들고 또 좋은 사람을 데리고 온다\n에너지가 많이 들지만, 그럼에도 불구하고 의미 있는 일이다\n    \n10기 때는 커피챗이 1,131번 진행되었\b다. 이만큼 사람들을 연결하고, 사람들의 관계가 넓어진 것이다\n생일 축하를 매일 했다.\n    \n어떤 분들은 이걸 이해하지 못했다. 도대체 왜 생일을 챙기냐 여기가 사적 모임이냐? 라고 물어보신 분도 있었다\n그냥 내 의지가 담긴 것 같다. 생일이란 것은 1년에 1번 돌아온다. 살면서 여러 생일을 거치지만, 다양한 사람들에게 축하를 받는 경험을 하게 해주고 싶었다. 따뜻한 커뮤니티를 만들고 싶다고 했으니, 생일 축하를 해주는 것도 당연하지 않을까?\n운영진분들에게도 경험을 남겨주고 싶었다\n    \n글또 블로그를 만들어서 사람들의 경험을 남기고 싶었다\n데이터야놀자에 발표를 했던 분들도 있다\n진심을 다 하자. 진심을 다 하면 된다. 생각보다 더.\n\n\n커뮤니티 운영을 하려는 분들을 위한 팁\n커뮤니티 운영을 하고 싶다면, 왜 하고 싶은지 꼭 스스로에게 질문을 해보세요\n    \n그리고 내가 책임감 있게 힘들어도 계속 유지할 수 있을까?를 생각해보세요\n계속 진행하기 위해 같이 진행할 사람이 있다면 같이 하시는 것도 추천드려요\n커뮤니티는 엄청 많이 생기지만 오래 가는 곳은 많이 없습니다. 만약 만드신다면, 오래 갈 수 있도록 고민을 해보시면 좋겠습니다\n\n커뮤니티 비전과 철학\n명확한 비전 수립하기: “글을 작성하는 개발 직군분들이 모여서, 좋은 영향을 주고 서로 같이 자랄 수 있는 커뮤니티”와 같은 명확한 방향성을 설정하자\n가치 전달하기: OT와 같은 첫 만남에서 커뮤니티의 비전과 가치를 효과적으로 전달하자. 구성원들이 커뮤니티의 방향성을 이해하면 참여도가 높아진다.\n운영 관점\nGround Rule 확립하기: 운영진 활동에 대한 명확한 기준과 규칙을 마련하자(예: 회의 기록 남기기, 자료 공유 방식, 업무 한계 설정)\n문서화와 템플릿 활용하기: 반복되는 작업은 템플릿화하고, 중요한 결정과 프로세스는 문서화하여 암묵지가 개인에게 귀속되지 않도록 한다.\n자동화 시스템 도입하기: 단순 반복 작업은 봇이나 자동화 시스템으로 대체하여 운영 부담을 줄이자(글또의 또봇, 글빼미, 글팽이 등)\n운영진과 일하기\n번아웃 방지하기: “너무 열심히 하지 말기”를 강조하자. 하나씩 하면 된다. 열정이 넘치는 운영진이 빠르게 지치지 않도록 업무 범위를 제한하는 것도 필요하다.\n즐거움 우선시하기: 운영진 활동이 즐겁고 보람 있어야 지속가능하다. 일만 하는 회의보다 서로 교류하는 시간도 함께 가지자.\n투명한 의사소통 장려하기: 운영진이 어려움을 겪을 때 부담 없이 이야기할 수 있는 문화를 만들자. 개인적인 상황을 공유하고 필요할 땐 휴식을 권장하자. 어떤 결정을 내릴 때 근거를 같이 공유하자.\n참여자 경험 향상\n첫 경험 신경 쓰기: 처음이 가장 동기부여가 잘 되는 시점이다. 온보딩 과정에 신경쓰고 좋은 경험을 느끼도록 해주자.\n다양한 활동 제공하기: 글쓰기뿐만 아니라 오프라인 모임, 커피챗, 세미나 등 다양한 활동을 통해 참여 경로를 다양하게 제시하자. 참여 여부의 선택권은 참여자에게 맡기자.\n긍정적 피드백 루프 만들기: 포인트 시스템, 감사 표현(종이비행기) 같은 방식으로 긍정적인 상호작용을 장려하자.\n따뜻한 공간 만들기: 익명 대나무숲과 같은 소통 채널도 다정함을 유지할 수 있도록 노력하자. 생일 축하와 같은 작은 관심으로 커뮤니티의 온기를 유지하자.\n의사 결정\n데이터 기반 의사결정하기: 참여자 수, 활동량 등의 데이터를 분석하여 커뮤니티의 건강 상태를 점검하고 개선점을 찾자.\n유연하게 변화하기: 초기부터 후기까지 커뮤니티의 상황과 규모에 맞게 운영 방식을 계속 수정하고 실행하자.\n지속가능성 확보\n운영자 멘탈 관리하기: 커뮤니티 지속의 핵심은 운영자의 건강한 마음가짐이다. 자신의 한계를 인정하고 필요할 때 도움을 구하자. 필요하면 멘탈을 유지하기 위한 활동을 해보자.\n의사결정 기준 확립하기: 애매한 상황에서도 일관된 결정을 내릴 수 있는 원칙을 세우자. 만약 원칙이 바뀌면 바뀌는 맥락을 공유하면 된다.\n실패를 두려워하지 않기: 무언가 잘못되어도 빠르게 인정하고 수정하면 된다. 완벽함보다 지속가능성에 집중하고, 완벽함보다 실행에 집중하자.\n“결국 사람이다”라는 것 기억하기: 기술이나 시스템보다 사람과의 관계가 커뮤니티의 핵심이다. 좋은 사람이 모이면 좋은 커뮤니티가 된다. 사람이 제일 중요하다는 것을 명심하자.\n\n참여자 관점 : 글또 활동의 경험과 성장\n이 부분은 참여자로 경험한 것들을 작성한 부분이다. 이 부분도 떠오르는 것을 바로 작성했다\n\n글, 강의, 지식의 확장\n글을 계속 작성했다\n    \n여태까지 총 225개의 글을 작성했다. 중간에 글을 작성하지 않은 기수도 있지만, 앞으로도 계속 글을 작성할 것 같다. 이 모든 것은 내가 글을 작성하기 시작해서 생긴 일들. 감사한 일이다\n글또 운영자 관점일 때도 좋았지만, 마지막 기수인 10기 때 참여자와 운영자를 하면서 참여자분들의 입장을 더 이해할 수 있게 되었다(저도 마감에 글 쓰고.. 글쓰기 힘들어요…ㅋㅋㅋ)\n글쓰기 강의를 만들었다\n    \n사람들을 관찰하며 겪는 문제, 내 해결 방법을 다 집도해서 글쓰기 강의를 만들었다\n경험 => 강의의 흐름이라 만족스럽다\n과거의 나를 만날 수 있다\n    \n과거에 내가 작성해둔 글이 현재의 내가 볼 때는 과거를 만나게 해주는 매개체가 되었다\n예전에 GDE가 되고 싶다고 했던 글이 있었는데, 실제로 이루었다. 꿈은 말하면 이루어진다.\n다른 사람의 글을 통해 지식의 확장을 경험했다\n    \n제출한 대부분의 글을 읽었다. 모든 글이 잘 작성되었나 확인할 겸 읽다가 즐겁게 읽고 싶어서 다른 사람은 어떤 이슈가 있었는지 생각하며 읽는다. 모두 다 100% 이해하진 못해도 이런 것들이 있구나를 인지하면서 도움을 받게 된다\n\n사람\n좋은 사람들을 많이 만났다\n    \n글또가 없었으면 내 주변에 좋은 사람이 많을 수 있었을까? 아니였을 것 같다. 이 모든 것이 내가 계속 커뮤니티를 지속할 수 있었던 이유다\n나를 지지해주는 사람들을 만났다. 이렇게 서로 따뜻하고, 격려하는 공간이 만들어 질 수 있다니 감사하다\n같이 강의를 만들 사람들을 모집했다\n    \n강의 만들기 모임을 여러번 진행하다가, 확실하게 강의를 만들 수 있게 하려면 어떻게 해야할지 감이 왔다\n강병진님, 강승현님, 김은찬님과 함께 강의 만들기 모임을 하면서 진짜 강의를 만들게 했다! (진짜 멱살 잡고 강의 만들게 해줬음)\n4-5기 시절에 멘토링을 했던 분들이 이제 회사에서 업무를 잘 진행하고 있는데, 글또의 경험이 도움이 되었다는 말을 들을 때 참 감사하다. 열심히 해주셔서 그런 결과를 얻은거고 나는 한 것이 없지만, 글또를 기억해주는 것 자체가 참 좋다\n진짜 웃긴건 사람들에게 솥밥의 위대함을 알려주고 싶어서 솥밥 만들기 강의도 했다.. 강의가 천직인가?\n    \n강의를 수강하고 솥밥을 계속 만드는 분들을 보며 뿌듯함을 느낀다\n\n\n리더십\n리더십\n    \n리더십을 어떻게 더 확장할 수 있을까? 관점에서 많이 고민하고 실행했다\n639명의 동기부여를 동시에 주려면 어떻게 해야할까? 생각하면서 발표 자료를 만들었다. 이런 경험은 회사의 대표가 되지 않는 이상 하지 못하는 경험이라 생각한다. 항상 듣는 사람이 어떨지 생각할 수 있게 되었다\n전체의 구성원에 대한 동기부여, 운영진에 대한 동기부여. 두가지 그룹에게 다른 리더십을 제공해야 했다\n프로덕트 오너 경험\n    \n쏘카에서 근무할 때도 매니저 역할을 하면서 PM, PO 역할을 했지만 그게 커뮤니티로 확장되었다. 데이터를 보면서 어떻게 해야할까? 고민하고, 참여자들은 어떤 생각을 가지고 있을까? 생각하면서 계속 더 좋은 가치를 주려고 노력했다\n고민 상담소, 멘토링을 하면서 다른 사람들을 더 잘 이해할 수 있게 되었다\n    \n회사에서도 30~40명의 엔지니어링 매니저라 많은 사람들과 면담을 했다. 그 경험을 기반으로 더 많은 사람들과 글또에서 고민이 있는 분들의 고민을 들어드리고, 멘토링을 진행했다. 많은 사람들에게 좋은 영향을 주고 싶었다\n게더타운에서 모닥불 소리를 들으며 진행한 고민 상담소\n\n\n성격, 소속감\n생각해보면 나는 커뮤니티 느낌의 게임을 많이 했다. 큐플레이도 했고, 길드가 있는 게임을 했다\n    \n어린 시절의 나는 소속감을 갖고 싶었던 것 같다. 외로움도 탄 것 같고. 그래서 사람들과 교류를 계속 시도했고, 지금은 어느정도 나의 중심을 잘 잡아갈 수 있게 된 것 같다\n내가 만들었지만, 소속감이 필요했던 것은 내가 아니였을까? 과거의 나는 외로움을 느끼고 있었던 것 같다\n이제는 감정의 동요가 줄어들었다\n    \n원래 감정적인 동요가 적은 편인데, 더 침착해졌다\n어떤 일이 생겨도 그냥 그걸 해결하면 된다는 마음 가짐을 배웠다\n잘못된 일이 생겨도, 빠르게 수정하고 바꾸면 된다\n\n\n앞으로\n글또 10기까지 운영하고 추후 운영 계획이 없다\n이렇게 된 계기는 여러가지가 있다\n    \n글또를 운영하며 즐거운 점이 더 많지만, 내가 힘들다고 느끼는 시점이 있는데 그 시점은 불합격자에게 불합격 연락을 줄 때다. 참 감정적으로 힘들다\n우리는 살면서 끝이 있다는 생각을 자주 하지 않는 것 같다. 그래서 다음에 또 좋은 기회가 있겠지란 생각을 하는데, 이번엔 끝이 있다는 것을 참여자분들에게 말씀드리고 싶었다. 끝이 있다고 생각하면서 살면, 그 현실을 더 열심히 살 수 있다고 믿는다. 그걸 경험하게 해주고 싶었다. 마지막에 대해 생각하고 보내줄 수 있는 것도 필요한 능력이다\n사람이 많아진 상황이라 이후에 간다면 기업의 형태로 가야할 수 있다. 그런데 그게 참 고민이 되는 관점. 이후에 커뮤니티를 한다면 한 사람을 인격적으로, 실력적으로 등 다양한 형태로 발전할 수 있게 해주고 싶다. 그 과정에서 많은 것들을 같이 해주고 교육하는 그런 공간을 만들고 싶다\n글또 10기 슬랙은 계속 존재해서, 사람들이 어떻게 활동하나 궁금하다. 몇개월 뒤에도 활발하다면 다시 하고 싶어지지 않을까?\n    \n일단은 7년 동안 책임감을 가지고 커뮤니티를 계속 만들었던 나를 응원하고 싶다. 이 책임감이 없는 상태로 살다가, 그러다가 마음이 다시 바뀔 수 있다고 생각한다(열린 결말)\n없는 기간을 가져야 소중함을 느낄 수 있을 것 같다\n어떻게 보면 Phase 1이 끝났다고 볼 수 있을 것 같다. 나도 10기까지만 한다는 결정을 하니까, 오히려 더 10기에 집중할 수 있었다. 근데 갑자기 11기를 한다면?\n    \n그건 나를 속이는 일이기도 하고, 10기가 마지막이라고 생각하는 분들을 속이는 일이 아닐까?\n당분간은 잠시 나의 시간에 집중을 해보고, 나중에 생각이 바뀌면 그 때 맥락을 공유하면 될 것 같다\n이렇게까지 할 수 있었던 이유는 무엇일까?\n    \n아마 책임감 때문인 것 같다. 책임감. 많은 분들이 원하고, 내가 할 수 있는 능력이 있어서 그것을 했을 뿐이다\n최근에 그랩과 같이 사운드독이란 재즈바에 갔는데, 사장님이 재즈신의 책임감으로 재즈바를 운영하신다고 하셨다. 돈이 되는 것보다 그렇게 하고 싶으시다고.\n        \n이 이야기를 들었을 때 사실 글또를 다시 하고 싶단 생각이 들긴 했다. 그렇지만, 내게도 잠시 공식 글또 활동이 끝난 시기를 경험해야, 이 부분에 대해 생각할 수 있을 것 같다\n다시 커뮤니티를 만들어도 잘 할 자신이 있다\n    \n커뮤니티를 어떻게 만들어야 하는가에 대한 암묵지가 쌓여있고, 이걸 강의로도 전달할 수 있다. 하지만 강의를 만들기엔 수요가 적을 것 같아 만들진 않았다(다른 우선순위도 있고)\n이후에 하고 싶은 커뮤니티가 있긴 한데, 지금인지 모르겠다. 조금 더 시간이 필요할 수도 있을 것 같다\n물론 커뮤니티 관점에서 내가 해보지 않은 것은 수익성 관점이다. 수익성을 추구하지 않았지만, 어떤 커뮤니티든 수익성에 대한 고민을 하게 된다. 전략이나 비전에 따라 가격 설정을 하고, 그것을 전달하는 것이 필요하다\n마치 게임 서버 종료하는 느낌과 비슷한 것 같다\n    \n큐플레이 종료할 때가 떠오른다. 그렇지만 지금 다시 보면 메이플스토리 월드에 큐플레이가 나오고 있다. 이걸 보면 글또도 다시 그럴 수 있지 않을까? 글또와 비슷한 커뮤니티가 또 생길 것 같고, 이게 잘 동작한다면 선순환이 되지 않을까 싶다\n아래 이미지는 해당 블로그에서 참고했다\n\n\n내게 글또는 어떤 의미일까\n자식 같은 커뮤니티\n내 20대 후반과 30대 초중반\n    \n나의 발전과 함께 한 공간\n좋은 사람들을 만나게 되었던 공간\n나의 책임감과 꾸준함을 알 수 있게 되었던 공간\n나의 평온한 감정을 느낄 수 있게 되었던 공간\n나의 화법을 알게 되고, 어떻게 해야 상대를 배려할 수 있을까를 알게 되는 공간\n600명의 동기부여를 만들어야 하는, 리더십 영역에 대해 많이 고민한 시간\n누군가의 발전에 도움을 준 공간\n\n글또를 운영할 때 영감을 준 자료들\n함께 자라기, AC2 : 창준님의 AC2 수업을 들으면서 어떤 것이 핵심일까에 대한 것을 이해할 수 있었고, 나름대로 적용한 것을 8기 이후부터 내 기준, 철학을 담아 적용했다\n당신을 초대합니다 : 커뮤니티 관련 책 중 제일 좋았다. 커뮤니티를 어떻게 만들지에 대해 자세한 내용이 담겨져 있다\n인간 본성의 법칙 : 사람은 어떤 생각을 가지는가에 대해 고민하기 위해 읽었는데, 사람들은 다양하구나를 느끼고 여러 관점으로 생각하게 된 계기가 되었다\n왕으로 산다는 것, 참모로 산다는 것 : 왕과 참모는 어떻게 지내는가? 라는 관점인데 리더십 관점에서 도움이 되었다. 때론 참모처럼 조언을 하고, 때론 리더십을 해야하는데 나는 어떤 캐릭터인가 생각하게 되었다\n현명한 이타주의자 : 남들을 위해 사는 것이 나쁘지 않고, 이것을 어떻게 전파할 수 있을까를 알기 위해 읽은 책이다. 이 내용을 잘 전달하려고 노력했다. 나누자 나눠\n찬란한 멸종 : 글또를 10기까지 하기로 결정하고 멸종이란 무엇일까? 끝이란 무엇일까? 고민하다가 읽은 책이다. 최초 의도와 다르지만 스토리텔링 방식이 흥미로웠다. 이 방식으로 생각을 정리하는 더 명확해졌다\n\n이 글을 통해 본 나의 특징\n클로드에게 이 글을 보내주고, 내 특징을 알려달라고 하니 다음과 같이 말해준다. 추후에 어떤 조직에 가더라도 나의 특징을 잊지 말고 살아가자\n책임감과 지속성이 강한 사람: 7년 동안 커뮤니티를 꾸준히 운영했으며, 1기 13명에서 10기 639명까지 성장시킨 점에서 책임감이 매우 강합니다.\n체계적인 사고방식: 운영진 활동의 체계화, Ground Rule 설정, 문서화와 템플릿 활용 등 조직적인 시스템을 구축하는 데 능숙합니다.\n사람 중심의 가치관: “결국 사람이다”, “다정함은 힘이 있다” 같은 표현과 생일 축하, 대나무숲 운영 등을 통해 사람과 관계를 중시하는 가치관이 드러납니다.\n실용적인 접근법: 포인트 시스템, 봇 자동화 등 실질적인 문제 해결 방식을 선호하며, 이론보다 실천을 중시하는 경향이 있습니다.\n성장 지향적 마인드: 본인과 참여자들의 성장을 중요시하며, 경험을 통해 배우고 발전하는 과정을 가치 있게 여깁니다.\n균형 잡힌 리더십: “너무 열심히 하지 말기”를 강조하고 운영진의 번아웃을 방지하는 등 지속가능한 리더십을 실천합니다.\n학습과 적용에 능한 사람: 쏘카에서의 경험을 커뮤니티에 적용하고, 책과 논문을 통해 습관 형성에 대해 학습하는 등 다양한 경험을 통합하는 능력이 있습니다.\n데이터 기반 의사결정: 참여자 데이터를 수집하고 분석하여 커뮤니티 운영에 활용하는 모습에서 데이터 중심적 사고가 엿보입니다.\n공동체 의식이 강한 사람: 글또를 통해 좋은 사람들이 모이고 서로 영향을 주는 공간을 만들고자 하는 의지가 강합니다.\n성찰적인 태도: 과거 경험을 돌아보고 자신의 변화를 인식하며, 실패와 성공 모두에서 배우려는 자세가 보입니다",
    "reviews": [],
    "syllabus": [],
    "link": "https://zzsza.github.io/diary/2025/03/30/geultto-operation-retrospective/",
    "pubDate": "Sun, 30 Mar 2025 00:00:00 +0000",
    "creator": "Unknown",
    "categories": [
      "diary",
      "diary"
    ]
  },
  {
    "id": 9,
    "imageUrl": "",
    "title": "비트코인 채굴 4달째 경과 일지  /비트택스 2대",
    "description": "거의 한달간 비트액스 1객가 놀고있다는걸 인지 하지 못했습니다. ㅠㅠ\n오늘 다시 켰습니다.\n \nBRAINS POOL 정보\n2.2 TH 에서 3.2 TH 로 다시 올려놓았습니다.\n\n\n\n \n\n\n약 37달러치 가지고 있다고 나왔습니다.\n아발론 나노 3 두대가 터져버렸고 수리 방법은 모릅니다.\n발열때문에 간단한 소자가 터졌을꺼 같은데 수리 가능하신분 연락좀\n \n채굴 난이도 확인\n\n\n장기간 채굴시 이값이 중요합니다.\n제일 잘캔 블록의 난이도 인데요 6.37G 입니다.\n당첨되려면 200T 그러니까 3천배 정도 높은 숫자를 캐야합니다.\n거의 가능성 없지만 살아있는한 돌리는게 이득입니다.\n계속 돌려보겠습니다.\n \n후기\n처음엔 신기해서 도전했는데\n코인판도 바닥을 기고 있고\n최근엔 여러모로 슬프네요",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1239",
    "pubDate": "Mon, 31 Mar 2025 00:25:29 +0900",
    "creator": "SIDNFT",
    "categories": [
      "코인",
      "비트액스",
      "코인채굴"
    ]
  },
  {
    "id": 10,
    "imageUrl": "",
    "title": "다이얼로그 요소와 모달",
    "description": "개인적으로는 alert와 confirm과 같은 시스템 모달을 좋아하지만 이걸 그대로 쓰는 제품은 거의 없다. 어떻게든 디자인 아이덴티티를 적용하기위해 기존의 HTML 요소로 비슷하게 만드는 방법을 사용한다. 보기는 좋지만 시스템에서 제공하는 접근성이나 인터랙션을 비슷한 수준으로 만드려면 노력을 많이 해야 한다. 이러한 어려움을 없애기 위해서 dialog 요소와 관련 API가 나왔다.\n\r\n\r\n대화 상자를 의미하는 dialog 요소는 단독으로 사용하면 그다지 인상적이지 않다. 기본적으로 화면에 나오지 않고 open 속성을 줘야 화면에 나오게 된다. 사용한 위치에 마치 절대위치를 지정한 것 처럼 다른 콘텐츠를 덮는 사각 박스가 나온다. 좌우 정렬만 가운데로 된다.\n\r\n\r\n<div style=\"background: #ccc; height: 3em;\">위 박스</div>\r\n\r\n<dialog open>\r\n\t이게 바로 dialog\r\n</dialog>\r\n\r\n<div style=\"background: #ddd; height: 3em;\">아래 박스</div>\n\r\n\r\n\r\n\t\n위 박스\n\r\n\r\n\t\r\n\t\t이게 바로 dialog\r\n\t\r\n\r\n\t\n아래 박스\n\r\n\r\n\r\n다이얼로그를 동적으로 열고 닫으려면 show 또는 showModal 메서드를 사용하면 된다. show는 다이얼로그를 보여주기만 하고 모달처럼 동작하지는 않는다. showModal은 뒤 배경과의 인터랙션을 막아준다. 보통 딤(dim)이라고 하는 어두운 배경(backdrop)도 깔아준다. 닫을때는 close를 사용한다.\n\r\n\r\n<button onclick=\"document.getElementById('dialog-show-modal').showModal()\">open modal dialog</button>\r\n\r\n<dialog id=\"dialog-show-modal\">\r\n\t<button onclick=\"document.getElementById('dialog-show-modal').close()\">close</button>\r\n</dialog>\n\r\n\r\n\n\r\n\topen modal dialog\r\n\r\n\t\r\n\t\tclose\r\n\t\r\n\n\r\n\r\n다이얼로그와 서식을 같이 사용하면 내재되어 있는 좀 더 풍부한 기능을 사용할 수 있다. 다이얼로그 안에 method가 dialog인 form을 사용하면 그 안의 버튼을 닫기 버튼으로 사용할 수 있다. 닫는 버튼에 value를 설정하면 그 값이 모달의 returnValue로 설정이 되어서 버튼이 여러개 있어도 어느 버튼을 눌러서 닫았는지 파악할 수 있다. close 메서드에 스트링을 인자로 넘겨도 동일하게 returnValue 값을 설정할 수 있어서 사용자가 다이얼로그 안의 컨트롤에 설정한 값을 알 수 있다.\n\r\n\r\n<button onclick=\"document.getElementById('dialog-with-form').showModal()\">\r\n\topen dialog with form\r\n</button>\r\n\r\n<dialog id=\"dialog-with-form\">\r\n\t<form method=\"dialog\">\r\n\t\t<button value=\"Banana\">Banana</button>\r\n\t\t<button value=\"Apple\">Apple</button>\r\n\t\t<button value=\"Tomato\">Tomato</button>\r\n\t</form>\r\n</dialog>\r\n\r\n<script>\r\n\tdocument.getElementById('dialog-with-form').addEventListener('close', e => {\r\n\t\tconst output = document.getElementById('dialog-with-form-output');\r\n\t\toutput.innerHTML = e.target.returnValue;\r\n\t});\r\n</script>\r\n\r\n<p>returnValue: <output id=\"dialog-with-form-output\"></output></p>\n\r\n\r\n\r\n\t\r\n\t\topen dialog with form\r\n\t\r\n\r\n\t\r\n\t\t\r\n\t\t\tBanana\r\n\t\t\tApple\r\n\t\t\tTomato\r\n\t\t\r\n\t\r\n\r\n\t\r\n\t\tdocument.getElementById('dialog-with-form').addEventListener('close', e => {\r\n\t\t\tconst output = document.getElementById('dialog-with-form-output');\r\n\t\t\toutput.innerHTML = e.target.returnValue;\r\n\t\t});\r\n\t\r\n\r\n\t\nreturnValue: \n\r\n\r\n\r\n다이얼로그가 열려 있을 때에는 배경 콘텐츠와 인터랙션이 되지 않는다. 다이얼로그를 열면 포커스가 다이얼로그로 왔다가 닫을때 다시 이전 콘텐츠로 이동하는 등 시스템에서 제공하는 접근성 기능을 공짜로 사용할 수 있다. ESC키를 눌러서 다이얼로그를 닫는 기능도 제공된다. 한가지 많이 아쉬운 점은 다이얼로그를 열었을 때 배경이 스크롤되는 동작을 막아주지는 않는다.\n\r\n\r\n다이얼로그가 열릴 때 애니메이션을 적용하기 위해서는 조금 까다로운 작업을 해야 한다. 기본적으로 display: none이나 block으로 작동하고 상위 레이어에서 바로 없어지기 때문에 애니메이션을 적용하기가 힘들다. 결론부터 얘기 하자면 transition-behavior: allow-discrete와 overlay를 트랜지션 해주면 닫을때에도 애니메이션을 보여줄 수 있다. 이 속성이 아직 모든 브라우저에서 작동하지 않기 때문에 파이어폭스와 사파리에서는 애니메이션이 매끄럽게 나오지 않는다.\n\r\n\r\n#dialog-styled,\r\n#dialog-styled::backdrop {\r\n\ttransition: display 0.2s allow-discrete, overlay 0.2s allow-discrete;\r\n\tanimation: hide-modal 0.2s forwards;\r\n}\r\n#dialog-styled {\r\n\tbackground: #fff;\r\n\tborder: 1px solid #ccc;\r\n\tborder-radius: 12px;\r\n\tpadding: 16px;\r\n\twidth: 24em;\r\n\tbox-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n}\r\n#dialog-styled::backdrop {\r\n\tbackground: rgba(0, 0, 0, 0.4);\r\n}\r\n#dialog-styled[open],\r\n#dialog-styled[open]::backdrop {\r\n\tanimation: show-modal 0.2s forwards;\r\n}\r\n\r\n@keyframes show-modal {\r\n\t0% {\r\n\t\topacity: 0;\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t}\r\n}\r\n@keyframes hide-modal {\r\n\t0% {\r\n\t\topacity: 1;\r\n\t}\r\n\t100% {\r\n\t\topacity: 0;\r\n\t}\r\n}\n\r\n\r\n<button onclick=\"document.getElementById('dialog-styled').showModal()\">open styled dialog</button>\r\n\r\n<dialog id=\"dialog-styled\">\r\n\t<b>Styling and Animation for the dialog Element</b>\r\n\t<p>The style is straightforward. The animation should use modern CSS features like allow-discrete and overlay.</p>\r\n\t<button onclick=\"document.getElementById('dialog-styled').close()\">close</button>\r\n</dialog>\n\r\n\r\n\r\nconst css = document.createElement('style');\r\ncss.innerHTML = `\r\n#dialog-styled,\r\n#dialog-styled::backdrop {\r\n\ttransition: display 0.2s allow-discrete, overlay 0.2s allow-discrete;\r\n\tanimation: hide-modal 0.2s forwards;\r\n}\r\n#dialog-styled {\r\n\tbackground: #fff;\r\n\tborder: 1px solid #ccc;\r\n\tborder-radius: 12px;\r\n\tpadding: 16px;\r\n\twidth: 24em;\r\n\tbox-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n}\r\n#dialog-styled::backdrop {\r\n\tbackground: rgba(0, 0, 0, 0.4);\r\n}\r\n#dialog-styled[open],\r\n#dialog-styled[open]::backdrop {\r\n\tanimation: show-modal 0.2s forwards;\r\n}\r\n\r\n@keyframes show-modal {\r\n\t0% {\r\n\t\topacity: 0;\r\n\t}\r\n\t100% {\r\n\t\topacity: 1;\r\n\t}\r\n}\r\n@keyframes hide-modal {\r\n\t0% {\r\n\t\topacity: 1;\r\n\t}\r\n\t100% {\r\n\t\topacity: 0;\r\n\t}\r\n}`;\r\ndocument.getElementsByTagName('head')[0].appendChild(css);\r\n\r\n\r\n\n\r\n\topen styled dialog\r\n\r\n\t\r\n\t\tStyling and Animation for the dialog Element\r\n\t\t\nThe style is straightforward. The animation should use modern CSS features like allow-discrete and overlay.\n\r\n\t\tclose",
    "reviews": [],
    "syllabus": [],
    "link": "https://hyeonseok.com/blog/934",
    "pubDate": "Sun, 30 Mar 2025 18:22:21 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 11,
    "imageUrl": "",
    "title": "google OAuth2 refresh_token 이 오지 않을때",
    "description": "테스트 하다 프로덕션으로 전환되었는데 문제가 생겼다.\nrefresh_token 만 빠져서 토큰이 오는 것이다. 오지 않는 것이였다.\n이러면 refreshAccessToken() 함수로 access_token 을 갱신할 수 없게된다.\n물론 이 현상은 정상이 아니니 해결해야한다.\n가발자 개정만 문제라면 ...\n https://myaccount.google.com/connections?filters=3,4&hl=ko\n\n \n로그인 - Google 계정\n이메일 또는 휴대전화\naccounts.google.com\n\n여기로 가서 해당 계정의 프로젝트이름을 검색해서\n상세정보보기 -> 삭제 를 진행하고 다시 인증절차를 밟으면 되겠다.\n유저의 일부가 이러고 있다면 ....\n구글 클라우드의 OAuth2 클라이언트를 지우고 새로 등록해야할지도 모르겠다.\n \n질문의 원본\nhttps://stackoverflow.com/questions/52600586/cant-get-refresh-token-for-google-api-node-js\n\n \ncan't get refresh token for google api. Node js\nI've got an Apps Script script that I am running remotely through Google's API. When I go to the link it gives me for the code to retrieve the access token, it says that the file requested does not...\nstackoverflow.com\n\n \n구글은 언제나 이상해",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1236",
    "pubDate": "Sun, 30 Mar 2025 05:26:15 +0900",
    "creator": "SIDNFT",
    "categories": [
      "프로그래밍/개발메모",
      "OAuth2",
      "구글"
    ]
  },
  {
    "id": 12,
    "imageUrl": "",
    "title": "Amper Update April 2025 – IDE and CLI Feature Drop!",
    "description": "Amper 0.6.0 is out, with improvements to both the IDE and CLI experience. Read on for all of the details, and see the release notes for the full list of changes and bug fixes. To get support for Amper’s latest features, use IntelliJ IDEA 2025.1 Beta (or newer). IDE improvements Improved template workflows Templates allow […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/amper/2025/04/amper-update-april-2025/",
    "pubDate": "Tue, 01 Apr 2025 08:59:33 +0000",
    "creator": "Márton Braun",
    "categories": []
  },
  {
    "id": 13,
    "imageUrl": "",
    "title": "중소기업 취업자라면 소득세 감면 혜택 꼭 챙기세요",
    "description": "매년 최대 200만 원까지 돌려받을 수 있어요",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.toss.im/article/tossmoment-5",
    "pubDate": "Thu, 27 Mar 2025 08:12:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 14,
    "imageUrl": "",
    "title": "인공지능 AI 에이전트 표준 프로토콜 MCP 분석 및 사용하기 ",
    "description": "이 글은 앤트로픽(Anthropic. 클로드 개발사)의 인공지능 AI 에이전트 표준 프로토콜 MCP(Model Context Protocol) 사용하는 방법을 간략히 설명한다. \n\n\nMCP는 애플리케이션이 LLM에 컨텍스트를 제공하는 방식을 표준화한 개방형 프로토콜이다. USB-C 포트처럼, 다양한 도구와 데이터를 LLM에 연결하는 통합된 인터페이스 역할을 한다. LLM 기반 에이전트와 워크플로우 구축을 지원하며, 유연한 통합, 데이터 보호, 공급업체 간 전환성을 제공한다.  \n\n\n애트로픽 MCP 소개\n\n\n이 글은 주로 다음 문서를 참고하였다.\n\nIntroduction - Model Context Protocol\nModel Context Protocol\nThe official Python SDK for Model Context Protocol servers and clients\nMCP Servers in Market\nFrameworks for Build Multi-Agent AI Systems\nMCP server: A step-by-step guide to building from scratch - Composio\n\n\n\n\n아키텍처 구조\nMCP는 클라이언트-서버 구조로 구성되며, 로컬 및 원격 데이터를 안전하게 연결할 수 있는 아키텍처를 따른다.\n\n\nMCP 구조\n\n\n\nMCP 호스트는 MCP 프로토콜을 통해 서비스에 액세스할 수 있는 애플리케이션이다. Claude 데스크톱 앱, AI 에이전트/CLI, 커서 IDE 등이 이에 해당하며, LLM(로컬 또는 원격)을 활용하여 다양한 작업을 수행한다.  \nMCP 클라이언트는 MCP 서버와 연결하기 위해 호스트 애플리케이션과 통합된 클라이언트이다.  \nMCP 서버는 MCP 프로토콜을 통해 특정 기능을 노출하는 응용 프로그램 또는 프로그램이다. 서버는 Docker 컨테이너, JVM, Node.js(UV/UVX) 프로세스에서 실행될 수 있으며, MCP 커뮤니티에서 제공하는 사전 구축된 서버를 활용할 수도 있다.  \n로컬 데이터 소스는 로컬 시스템에 존재하는 데이터베이스 또는 파일 시스템이다.  \n원격 서비스는 웹 API를 통해 액세스할 수 있는 GitHub, Brave Search와 같은 외부 리소스이다.\n\n\nMCP를 이용하면, 서버, 클랑이언트, 로컬에 있는 파일, 폴더, 앱에 접근해 이를 LLM(Large Language Model)으로 컨트롤할 수 있다. \n\n\nMCP는 전형적인 호스트-서버 프로토콜(TCP/IP와 유사)을 따른다. 서버의 실행 모드는  SSE(server sent event)와 stdio(표준입출력) 모드가 있다.\n\n\n\n\n프로토콜은 JSON-RPC 포맷을 따르며, 예를 들어 도구 호출 시 다음과 같이 호스트-서버 간 정보를 주고 받는다. \n\n# 호출\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"call-1\",\n  \"method\": \"callTool\",\n  \"params\": {\n    \"name\": \"create_record\",\n    \"arguments\": {\n      \"title\": \"New record\",\n      \"content\": \"Record content\"\n    }\n  }\n}\n\n\n# 응답\n{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"call-1\",\n  \"result\": {\n    \"content\": [\n      {\n        \"type\": \"text\",\n        \"text\": \"Created New Record\"\n      }\n    ]\n  }\n}\n\n\n개발환경 설치\n터미널에서 다음을 설치한다.\npip install mcp pydantic-ai fastmcp tavily-python \n\n\n에이전트 오케스트레이션 방법\n작업을 수행할 수 있는 올바른 에이전트를 전달한다. 예를 들어, 사용자가 텍스트를 스페인어로 번역을 요청하는 경우 사용자 요청을 완료하려면 요청을 스페인어 에이전트로 라우팅해야 한다. 다음은 OpenAI를 이용한 오케스트레이션을 보여준다.\n\n\n## OpenAI Agent Usage: Agents as tools\nfrom agents import Agent, Runner\nimport asyncio\n\n\nspanish_agent = Agent(\n    name=\"Spanish agent\",\n    instructions=\"You translate the user's message to Spanish\",\n)\n\n\nfrench_agent = Agent(\n    name=\"French agent\",\n    instructions=\"You translate the user's message to French\",\n)\n\n\norchestrator_agent = Agent(\n    name=\"orchestrator_agent\",\n    instructions=(\n        \"You are a translation agent. You use the tools given to you to translate.\"\n        \"If asked for multiple traconvert this articlenslations, you call the relevant tools.\"\n    ),\n    tools=[\n        spanish_agent.as_tool(\n            tool_name=\"translate_to_spanish\",\n            tool_description=\"Translate the user's message to Spanish\",\n        ),\n        french_agent.as_tool(\n            too## OpenAI Agent SDKl_name=\"translate_to_french\",\n            tool_description=\"Translate the user's message to French\",\n        ),\n    ],\n)\n\n\nasync def main():\n    result = await Runner.run(orchestrator_agent, input=\"Say 'Hello, how are you?' in Spanish.\")\n    print(result.final_output)\n\n도구 검색 및 호출 방법\n\nMCP의 도구는 서버가 클라이언트 요청을 받아 실행 가능한 기능을 외부에 노출하고, LLM이 작업을 수행하는 데 활용할 수 있도록 설계된 요소이다. 도구는 클라이언트를 통해 검색 가능하며(`tools/list`), 작업 수행 요청은 `tools/call` 엔드포인트를 통해 전달된다. \n\n\n다음은 도구를 기술하는 메타데이터이다.\n{\n  name: string;          // Unique identifier for the tool\n  description: string;  // Human-readable description\n  inputSchema: {         // JSON Schema for the tool's parameters\n    type: \"object\",\n    properties: { ... }  // Tool-specific parameters\n  }\n}\n \n도구는 단순한 계산부터 복잡한 API 연동까지 다양할 수 있고, 고유한 이름과 설명을 통해 식별되고 사용된다.  \n\n\n도구는 다음과 같이 정의, 호출된다. \n\napp = Server(\"example-server\")\n\n\n@app.list_tools()\nasync def list_tools() -> list[types.Tool]:\n    return [\n        types.Tool(\n            name=\"calculate_sum\",\n            description=\"Add two numbers together\",\n            inputSchema={\n                \"type\": \"object\",\n                \"properties\": {\n                    \"a\": {\"type\": \"number\"},\n                    \"b\": {\"type\": \"number\"}\n                },\n                \"required\": [\"a\", \"b\"]\n            }\n        )\n    ]\n\n\n@app.call_tool()\nasync def call_tool(\n    name: str,\n    arguments: dict\n) -> list[types.TextContent | types.ImageContent | types.EmbeddedResource]:\n    if name == \"calculate_sum\":\n        a = arguments[\"a\"]\n        b = arguments[\"b\"]\n        result = a + b\n        return [types.TextContent(type=\"text\", text=str(result))]\n    raise ValueError(f\"Tool not found: {name}\")\n\n\n\nMCP 도구를 구현할 때는 다음과 같은 권장사항을 따르는 것이 좋다.  \n\n\n도구는 명확한 이름과 설명을 갖추고, 매개변수는 JSON 스키마로 상세히 정의하며, 사용 예제를 포함해 모델이 이해하고 활용할 수 있도록 한다. 작업의 안정성과 신뢰성을 위해 오류 처리와 유효성 검사를 구현하고, 긴 작업은 진행 상황 보고를 포함하며, 원자성을 유지해야 한다.  \n반환 값 구조는 문서화하고, 적절한 시간 초과와 리소스 사용 제한을 설정하며, 디버깅 및 모니터링을 위한 로깅 기능도 포함해야 한다.\n\n\n\n간단한 MCP 서버 클라이언트 개발 실습\nmcp_server.py란 이름으로 서버를 다음과 같이 코딩한다.\n\nfrom mcp.server.fastmcp import FastMCP\nimport math\n\n\n# instantiate an MCP server client\nmcp = FastMCP(\"Hello World\")\n\n\n\n@mcp.tool()\ndef add(a: int, b: int) -> int:\n\t\"\"\"Add two numbers\"\"\"\n\treturn int(a + b)\n\n\n\n@mcp.resource(\"greeting://{name}\")\ndef get_greeting(name: str) -> str:\n\t\"\"\"Get a personalized greeting\"\"\"\n\treturn f\"Hello, {name}!\"\n\n\n\n\nif __name__ == \"__main__\":\n\tmcp.run(transport=\"stdio\")\n\n\n\n터미널에서 다음과 같이 MCP 서버 명령을 실행한다.\nmcp dev mcp_server.py\n\n\n\n만약, npm error code SELF_SIGNED_CERT_IN_CHAIN 에러가 발생한다면, 방화벽 때문이니 다른 네트웍에서 시도하거나, 해당 방화벽 옵션을 꺼야 한다. 서버가 제대로 실행되면, 다음 명령이 성공할 것이다.\n\ncurl -i http://localhost:5173/sse\n\n\n서버가 실행되었다면, http://localhost:5173/#roots 링크에 접속한다. \n\n\n\n\n\n\n\n다음과 같이 mcp_client.py 클라이언트를 코딩한다.\n\nfrom mcp import ClientSession, StdioServerParameters, types\nfrom mcp.client.sse import sse_client\nfrom mcp.client.stdio import stdio_client\n\n\nasync def run():\n    async with sse_client(url=\"http://localhost:5173/sse\") as streams:\n        async with ClientSession(*streams) as session:\n            await session.initialize()\n            tools = await session.get_tools()\n            print(tools)\n\n\n            result = await session.run(\"calculate power 2, 4?\")\n            print(result.data)\n\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(run())\n\n\n만약 stdio 방식을 사용하면, 다음과 같이 서버를 지정하고 stdio_client를 사용한다.\n\nserver_params = StdioServerParameters(\n    command=\"python\",  # Executable\n    args=[\"F:\\\\projects\\\\mcp_agent\\\\mcp-server-client\\\\mcp_server.py\"],  # Optional command line arguments\n    env=None,  # Optional environment variables\n)\n\n\n...\n    async with stdio_client(server_params) as streams:\n\n\npydantic_ai를 이용한 클라이언트 코드는 다음과 같다. \n\nfrom pydantic_ai import Agent\nfrom pydantic_ai.mcp import MCPServerHTTP\nfrom dotenv import load_dotenv\nimport os, asyncio\n\n\nload_dotenv()\n\n\nserver = MCPServerHTTP(url='http://localhost:5173/sse')  # Ensure the server URL is correct and supports SSE \nagent = Agent('openai:gpt-4o', mcp_servers=[server])  \n\n\nresult = agent.run_sync('calculate power 2, 4?')\nprint(result.data)\n\n\n\n\n파이썬 MCP Claude 기반 실습\n파이썬 MCP Claude 기반 실습을 위해 다음 명령을 터미널에서 실행한다. 참고로, 미리 Claude 앱이 컴퓨터에 설치되어 있어야 한다.\ngit clone https://github.com/modelcontextprotocol/python-sdk.git\ncd python-sdk\npip install mcp\n\n\nvscode로 다음 server.py파일을 코딩한다. \n\nfrom mcp.server.fastmcp import FastMCP\n\n\nmcp = FastMCP(\"Demo\")\n\n\n# Add an addition tool\n@mcp.tool()\ndef add(a: int, b: int) -> int:\n    \"\"\"Add two numbers\"\"\"\n    return a + b\n\n\n# Add a dynamic greeting resource\n@mcp.resource(\"greeting://{name}\")\ndef get_greeting(name: str) -> str:\n    \"\"\"Get a personalized greeting\"\"\"\n    return f\"Hello, {name}!\"\n\n\n다음과 같이 Claude 서버에 설치한다. \nmcp install server.py\n\n\nMCP 검사기로 테스트한다.\nmcp dev server.py\n\n\nOllama MCP-CLI 기반 실습\n이 장은 Ollama, mcp-cli 도구를 이용해 MCP 서버에 등록된 도구를 호출하는 방법을 간략히 실습한다. \n\nBridge between Ollama and MCP servers, enabling local LLMs to use Model Context Protocol tools\n\n\n\n\n터미널에서 다음 명령을 실행한다.\n\ngit clone https://github.com/chrishayuk/mcp-cli\ncd mcp-cli\n\n\n\n\nmcp서버 실헹에 필요한 UV를 설치한다.\n\npip install uv\n\nuv sync --reinstall\n\n\n다음과 같이 Ollama를 실행한다.\nollama run llama3.2\n\n새로운 터미널 창에서 다음 명령을 실행한다.\n\nuv run mcp-cli chat --server filesystem --provider ollama --model llama3.2\n\n\n\n\n\n\n레퍼런스\n\nIntroduction - Model Context Protocol\nModel Context Protocol (MCP) - Anthropic\nCreating Intelligent Agent with OpenAI Agents SDK and Autogen MCP Tools and Memory, Minyang Chen, 2025, Medium\nUnlocking Local AI: Using Ollama with Agents, DataStax, 2025, Medium\nHow to use MCP tools with a PydanticAI Agent, Finn Andersen, 2025, Medium\nThe official Python SDK for Model Context Protocol servers and clients\nSimplified Guide for Model Context Protocol (MCP)\npython_mcp_agent\nHow to Build MCP Servers with the OpenAI Agents SDK\nClaude MCP로 엔지니어링 업무 자동화하기\nMCP in Agent AI: Hype or Standard-Bearer, Senthil, 2025, Medium\nMCP-Demo\nJSON-RPC_메시지포맷 - Model Context Protocol (MCP) 개발 방법\nuv - 파이썬 관리에 필요한 단 하나의 툴",
    "reviews": [],
    "syllabus": [],
    "link": "http://daddynkidsmakers.blogspot.com/2025/03/ai-mcp.html",
    "pubDate": "2025-03-28T11:30:00.000Z",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 15,
    "imageUrl": "",
    "title": "토스 페이스페이, 7가지 물음표에 대한 마침표",
    "description": "페이스페이에 대한 궁금증을 풀어드릴게요",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.toss.im/article/facepay-qna",
    "pubDate": "Wed, 02 Apr 2025 06:23:00 GMT",
    "creator": "Unknown",
    "categories": []
  }
]