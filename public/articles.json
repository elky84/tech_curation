[
  {
    "id": 1,
    "imageUrl": "",
    "title": "실수에서 더 나은 시작으로",
    "description": "미생이란 컨텐츠는 스토브리그와 더불어서 회사생활을 어떤 시각으로 바라봐야하는가에 대해 좋은 힌트를 많이 줬다.\n웹툰과 드라마 모두 다 봤지만, 특히나 드라마에서는 연출이 더 극적이라 그런지 감정과 생각이 잘 전달되었다.\n드라마 13화는 주인공 장그래가 속한 영업 3팀이 문제가 생긴 사업을 좋은 사업으로 전환 하는 에피소드이다.\n같은 팀 박종식 과장이 요르단 중고차 사업을 맡은 후 현지에 친인척 이름으로 페이퍼컴퍼니를 설립하고 중고차 수입을 밀어주는 형식으로 비리를 저지른다.\n비리가 발견되고 나서 회사는 박종식 과장을 해임하고, 회사의 오점인 요르단 중고차 사업을 지운다.\n하지만 영업 3팀의 입장에서는 박종식 과장이 비리를 저지르긴 했지만 요르단 사업 그 자체만 봤을때는 너무나 좋은 사업이라고 판단했다.\n이 사업을 다시 시작하고 싶은데, 이미 비리로 인해 여러 사람이 해임되고 회사에서 쉬쉬하는 상황에서 어떻게 다시 이 사업을 해야한다고 임원들을 설득할 수 있을까?\n오상식 차장은 요르단 중고차 사업을 다시 시작해야한다고 설득해야하는 프레젠테이션 자리에서 임원진들에게 그간 비리로 인해 그만두었던 사업들에 대해 이야기한다.\n\"문제가 생기자 회사는 각 사건을 신속하고 정확하게 해결했습니다.\n깔끔하게 정리한 것입니다.\n그리고 그 사건을 지워버렸습니다.\"\n...\n\"문제가 생긴 사업에 대해서 두 번 다시 입 밖에 꺼내지 않는 것은 우리가 선택하고 회사가 결정한 일입니다.\n그렇다면 우리가 지워버린 그 사업들은 어디에서 어떻게 되었는지 아십니까?\n지금부터 보실 내용은 우리가 생각하기도 싫어 지워버렸던 그 사업을 가져간 타 업체들의 실적입니다\"\n...\n\"죄를 처벌했으니, 그 일은 잊혀져야 맞는 것입니까?\n저희는 ‘죄’만 들어내기로 했습니다.\"\n출처:  [#미생] 13화 13분만에 몰아보기\n10년이 지났지만 생각이 날 정도로 이 에피소드는 내 회사 생활에 큰 영향을 줬다.\n\"실수, 실패라고 불렀던 그 지점을 새로운 시작점으로 전환\" 하게 만드는 이야기에 보는 내내 두근거렸다.\n언젠간 나도 저렇게 실패를 새로운 시작으로 전환하는 일을 해봐야지 같은 생각을 하면서 말이다.\n2024년 2월, 인프런이 글로벌하게 트위터에서 언급된 적이 있다.\n전 세계 개발자들이 구독하는 유명 유튜버 codewithAntonio님이 우리 플랫폼에 대해 언급한 것이였다.\n“I just found out that instructor on @inflearn, a company with $4M+ in funding is using my open-source code and selling them as courses.”\n— 원문 트윗 보기\n\n\n인프런에 올라온 한 강의가 Antonio님의 유료 강의와 똑같다는 것이었다.\n완전히 처음 겪는 일에 잠시 멍해졌다.\n주말임에도 급하게 해당 강의를 확인했다.\n그 와중에 CS 문의들이 쏟아지기 시작했다.\nAntonio님의 팬인 수강생분들이 하나둘씩 “내가 너무 좋아하는 Antonio 강의인데, 이 강의랑 구조가 하나도 빠짐없이 똑같다”는 제보를 보내셨다.\n쏟아지는 CS에 대해 답변드리고, Antonio님께 사과 메세지를 전달드리고, 내부적으로는 실제로 그런 일이 맞는지 검토하는 등 정신 없는 주말을 보냈다.\n강의 내용을 검토한 결과, 의심의 여지 없이 복제 강의였다.\n지식 공유자분께서 업로드한 강의였기에 혹시나 Antonio님과 사전에 논의된 적이 있었는지 확인을 요청드렸다.\n모든 내용을 확인해보니 결국 두 분의 소통 과정에 문제가 있었고, Antonio님 입장에서는 전혀 생각하지 못했던 협업이였다.\n플랫폼을 운영하는 입장에서 가만히 있을 순 없었다.\n곧바로 강의를 삭제하고 강의를 결제한 수강생분들께는 사과의 말씀과 함께 전액 환불을 했다.\n내부적으로 모든 내용이 정리가 되고나서는 대표님께서 직접 공식 사과문을 게시했다.\n이제 막 글로벌 전환을 하고 있었기에 이번 사건이 너무 크게 다가왔다.\n글로벌 개발자분들께는 \"인프런? 거기 강의 훔쳐서 만드는 곳이잖아\" 라는 인상을 드린 것은 아닐까 하는 걱정과 앞으로 어떻게 이런 문제를 사전에 잡아낼 수 있을지에 대한 고민이 함께 생겼다.\n전세계에서 만들어지는 모든 컨텐츠를 우리가 다 확인할 순 없는데 어떻게 검수할 것인가.\n수많은 트위터 댓글과 인용에 남긴 부정적 의견들을 어떻게 전환할 수 있을까 등등.\n여러가지 생각과 고민을 하던 중 믿기 힘든 문의가 올라왔다.\n“강의 철회 안내 메일을 받았습니다.\n그런데 저는 이 강의가 너무 좋았어요.\n이번 진행중인 프로젝트를 완료 하고나서 열공하려고 했거든요 ㅜㅜ\n끝까지 보고 싶습니다.”\n강의를 환불받은 수강생분들의 문의였다.\n미생 13화 요르단 사업 PT가 다시금 떠올랐다.\n이대로 Antonio님과 죄송한 관계로 끝난다면 해외의 많은 개발자들분들은 인프런을 여전히 카피캣 강의 서비스로 기억할 것이다.\n복사된 강의를 봤던 한국의 수강생분들은 저 좋은 콘텐츠를 더이상 한국어로는 보지 못한다.\n그래서 '죄'는 들어내고 콘텐츠만 봤다.\nAntonio님은 다양한 주제의 서비스 구현 강의들이 있었다.\n듀오링고, 구글 Docs, 트위치, 넷플릭스, 스포티파이, 글로벌 이커머스 등 새로운 서비스를 구현 해야 한다면 이 중에 하나쯤은 있을 것 같은 주제의 강의들을 거의다 가지고 계셨다.\n실수는 있었지만, 그것을 더 나은 시작으로 바꾸기로 했다.\n글로벌 플랫폼으로 전환하고 나서 곧바로 Antonio님께 연락을 드렸다.\n인프런을, 우리를 어떻게 생각할지 걱정도 앞섰지만, 그럼에도 이 콘텐츠를 꼭 한국의 개발자분들께 더 많이 알리고 싶었다.\nHello Antonio,\nI’m the CTO at Inflearn...\n(중략)\nThis collaboration is our way of making amends for the previous incident and ensuring your invaluable content gets the recognition it deserves...\nAntonio님은 놀라울 정도로 성숙하게, 따뜻하게 답해주셨다.\n“Hi Donguk,\nThank you for reaching out!\nI understand that managing content across a large platform can be challenging, and I truly appreciate the steps you're taking to improve your internal processes. No hard feelings on my end, and I’m glad to see the positive changes you're implementing.  ”\n그리고 Antonio님과 같이 협업을 시작하게 되었다!\nAntonio님은 항상 강의의 유료 자료 전체를 구매하는 방식으로만 판매하셨다.\n평생 구독 같은 느낌이다.\n다만, 이런 All or Nothing 의 판매가 국내에서는 이해하기 힘든 모델일 것이라고 봤다.\n딱 하나만 들으면 되는데 모든 콘텐츠를 구매하는 것은 부담스러울 수 있을 것 같다는 의견을 나눴다.\n그래서 이번에 우리와의 협업에서는 단건 구매가 가능하도록 각각의 강의를 아주 저렴하게 판매하기로 했다.\n그리고 그렇게 많은 논의 끝에 나온 첫 주제는 대표작 YouTube Clone 프로젝트 이다.\nNext.js 15 & React 19 기반 최신 스택을 기반으로 비디오 플레이어, 컨텐츠 피드, 구독, 좋아요 등을 다 만들어보는 강좌이다.\n그의 뜻에 따라 기존 가격도 낮게 설정하고, 얼리버드 할인 역시 큰 폭으로 진행하게 되었다.\n가격을 떠나 요즘 풀스택 구현을 원하시는 분들에게 필요한 대부분의 내용이 포함되어 있었다.\n  Next.js 15 & React 19 기반 최신 스택\n ️ DrizzleORM 기반 PostgreSQL\n  TailwindCSS와 ShadcnUI를 활용한 세련된 UI 구성\n  AI 기반 제목, 소개, 썸네일 자동 생성\n  조회수, 좋아요, 트래픽을 확인할 수 있는 크리에이터 스튜디오\n등 단순히 “유튜브처럼 생긴 무언가”를 만드는 수준을 넘어서 지금 우리가 매일 쓰는 유튜브의 핵심 기능들을 하나하나 직접 구현하면서 배워나가는 구조다.\n이 모든 것을 한 프로젝트 안에서 경험할 수 있는, 그야말로 현업형 풀스택 클론 코딩 강의였다.\n우리는 실수를 했다.\n하지만 그 실수를 투명하게 바로잡고,\n진짜 제작자분과 제대로 된 기회를 만들 수 있었다.\n앞으로도 우리는 계속 실수할 수 있다.\n다만, 그 실수는 실수에서 끝나지 않고, 항상 더 나은 시작으로 만들 수 있을 것 같다는 자신이 생겼다.",
    "reviews": [],
    "syllabus": [],
    "link": "https://jojoldu.tistory.com/830",
    "pubDate": "Fri, 30 May 2025 00:06:22 +0900",
    "creator": "향로 (기억보단 기록을)",
    "categories": [
      "생각정리",
      "Antonio",
      "미생",
      "안토니오",
      "인프런",
      "클론코딩"
    ]
  },
  {
    "id": 2,
    "imageUrl": "",
    "title": "Introducing Live Watches in CLion’s Debugger",
    "description": "The latest CLion 2025.2 EAP build, 252.18003.25, includes one of the most requested features for embedded development: live watches. It allows you to monitor global variables in real time without stopping the debugger or the program’s execution. This feature is particularly useful for embedded developers working with time-sensitive protocols, such as Bluetooth, or with physical […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/clion/2025/05/introducing-live-watches/",
    "pubDate": "Thu, 29 May 2025 14:30:51 +0000",
    "creator": "Oleg Zinovyev",
    "categories": [
      "eap",
      "news",
      "debugger",
      "embedded",
      "live-watches"
    ]
  },
  {
    "id": 3,
    "imageUrl": "",
    "title": "다시 - Composable Architecture 설계 변경",
    "description": "Composable Architecture에 대한 세 편의 글에 이어 이번 글을 작성하게 되었다. 이번에는 전반적인 설계가 변경되어 사실상 새로운 아키텍처라고 볼 수 있다.\n가장 큰 변화는 무엇인가?\n싱글턴으로 활용하던 Action을 ViewModel에 한정하여 사용하도록 변경했다.\nRouter를 새로 추가했으며, Action과 독립적으로 동작하도록 개선했다.\n이 글에서는\nAction 활용법 개선 방안을 알아본다.\n이전 설계에서 발생했던 문제점들을 짚어본다.\n설명에 포함된 샘플 화면\n이 글의 설명은 다음 샘플 프로젝트를 기반으로 한다.\nTComposableArchitecture - GitHub - link\n\nAction은 그대로 사용하지만, 범위는 제한한다.\nAction 자체는 이전과 동일하게 사용한다. 하지만 기존에는 싱글턴으로 어디서든 접근하고 활용할 수 있었던 점을, 이제는 Compose와 ViewModel 간의 1:1 관계로 한정했다.\n\n이로 인해 ActionViewModel이라는 BaseViewModel이 추가되었다. 이 ViewModel은 Action을 활용하기 위한 핵심 동작 코드를 포함하고 있다. 특히, flowAction을 처리하는 코드가 이곳에 위치한다.\nActionViewModel - link\n\nabstract class ActionViewModel<ACTION : Action>(\n    private val flowActionStream: FlowActionStream,\n    actionClass: KClass<ACTION>,\n) : ViewModel() {\n\n    @Inject\n    internal lateinit var actionSender: ActionSender\n\n    @VisibleForTesting\n    var flowActionJob: Job? = null\n\n    @VisibleForTesting\n    val flowAction by lazy {\n        flowActionStream.flowAction()\n            .filterIsInstance(actionClass)\n            .onEach {\n                handleAction(action = it) // Action을 처리하기 위함\n            }\n    }\n\n    internal fun loadAction() {\n        cancelAction()\n\n        flowActionJob = flowAction\n            .launchIn(viewModelScope)\n    }\n\n    /**\n     * ViewModel created only call once.\n     */\n    open fun onCreated() {}\n\n    internal fun cancelAction() {\n        if (flowActionJob?.isActive == true) {\n            flowActionJob?.cancel()\n            flowActionJob = null\n        }\n    }\n\n    fun nextAction(action: ACTION) {\n        flowActionStream.nextAction(action)\n    }\n\n    abstract suspend fun handleAction(action: ACTION)\n}\n\n\nBase ViewModel은 어디까지나 사용 편의성을 위한 것이므로, internal 키워드를 통해 불필요한 외부 접근을 최소한으로 제한한다.\nActionViewModel 활용 예시\nSettingsViewModel - link에서 전체 코드를 확인할 수 있다. 여기서는 UiState를 통해 화면을 갱신하고, Action을 통해 이벤트를 업데이트하는 과정을 적용한다.\n관련 코드는 다음과 같습니다.\n\n@HiltViewModel\ninternal class SettingsViewModel @Inject constructor(\n    flowActionStream: FlowActionStream,\n) : ActionViewModel<SettingsAction>(flowActionStream, SettingsAction::class) {\n\n    // UI의 상태를 업데이트합니다.\n    private val _settingsUiState = MutableStateFlow(SettingsUiState.Default)\n    val settingsUiState = _settingsUiState.asStateFlow()\n\n    override suspend fun handleAction(action: SettingsAction) {\n        when (action) {\n            is SettingsAction.ThemeModeChange -> { // action으로 들어온 ThemeModeChange 이벤트를 처리합니다.\n                _settingsUiState.update {\n                    it.copy(\n                        mode = action.mode,\n                    )\n                }\n            }\n        }\n    }\n}\n\n\nUI에서의 사용 방법\n개발하다 보면 활용성을 높이기 위한 방식으로 접근할 수밖에 없다. 이는 새로운 방식에 익숙해지는 시간과 노력이 필요하다는 의미이기도 한다.\n하지만 기존 방식보다는 훨씬 쉽게 접근하면서도 사이드 이펙트 발생을 최소화하는 형태로 접근한다.\n\n@Composable\ninternal fun InternalSettingsScreen(\n    settingsViewModel: SettingsViewModel = hiltViewModel(),\n) {\n    ActionSenderCompositionLocalProvider(settingsViewModel) { // 필수로 필요\n        val settingsUiState by settingsViewModel.settingsUiState.collectAsStateWithLifecycle()\n\n        InternalSettingsScreen(\n            // Your screen paramater\n        )\n    }\n}\n\n\nActionSenderCompositionLocalProvider를 추가해야 합니다. 기존에는 싱글턴이었기 때문에 Activity에서 이를 처리했지만, 이제는 ViewModel이 필요한 시점에 즉시 추가할 수 있습니다.\n만약 Action을 활용하지 않겠다면 직접 구현하여 사용할 수 있지만, Lifecycle만 사용하겠다면 LaunchedLifecycleActionViewModel을 호출해야 합니다.\n이 코드에서는 CompositionLocalProvider를 활용하여 범위가 지정된 ActionSender를 사용하기 위해 ActionSenderCompositionLocalProvider를 활용합니다.\nActionViewModel에 대한 Unit Test\nUnit Test를 통해 로직 테스트를 진행할 수 있다. 물론 ActionSenderCompositionLocalProvider가 적용되지 않았다는 점은 직접 UI를 눌러보며 테스트하거나, UI Test를 진행해야 한다.\n여기서는 Unit Test 코드를 살펴보겠다.\n위 샘플 코드에서 한 가지 시나리오를 기반으로 Unit Test가 가능하다.\nView에서 Theme 옵션 중 하나를 선택한다.\nRepository를 통해 로컬 데이터 업데이트를 처리한다. (이 코드에는 포함되어 있지 않는다.)\n업데이트가 성공하면 UI를 갱신한다.\n여기서는 Mockito, Turbine, Coroutines Test를 활용하여 Unit Test를 진행한다.\n\ninternal class SettingsViewModelTest {\n\n    private val flowActionStream = mock<FlowActionStream>()\n\n    private val viewModel = SettingsViewModel(\n        flowActionStream = flowActionStream,\n    )\n\n    @Test\n    fun `test ThemeModeChange`() = runTest {\n        // UI에서 DARK 테마 변경 버튼을 눌렀다고 가정합니다.\n        val mockItem = SettingsAction.ThemeModeChange(mode = SettingsUiState.Mode.DARK)\n        // flowAction에서 이를 전달해줍니다.\n        whenever(flowActionStream.flowAction()).thenReturn(flowOf(mockItem))\n\n        viewModel.flowAction\n            .test { // 구독 및 테스트 시작\n                // awaitItem()을 통해 눌린 정보를 확인합니다.\n                Assert.assertEquals(\n                    SettingsAction.ThemeModeChange(mode = SettingsUiState.Mode.DARK),\n                    awaitItem()\n                )\n\n                // UiState 갱신을 확인합니다.\n                Assert.assertEquals(\n                    SettingsUiState(\n                        mode = SettingsUiState.Mode.DARK,\n                    ),\n                    viewModel.settingsUiState.value\n                )\n\n                // Mockito를 활용하였으므로 flowAction 이벤트가 들어왔는지 확인합니다.\n                verify(flowActionStream).flowAction()\n\n                cancelAndIgnoreRemainingEvents()\n            }\n    }\n}\n\n\n설계 방향\n원래의 설계는 이 Action을 활용하여 앱 전체에 하나의 Event Bus를 만들 생각이었다. 하지만 사용하다 보니 단점이 더 많아 이 부분을 제거하고, View와 ViewModel 간의 1:1 관계로 제약했다.\n싱글턴을 제한하기 위해 두 번째 글을 작성했지만, 결국 그 부분도 설계상의 미스가 있었기에, 완전히 새롭게 1:1로 한정한 Action으로 개선했다.\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\nNext\n이로 인해 전역 Action을 통해 처리할 수 있었던 Alert/Toast, Router 시스템도 새로 만들어야 했다.\n달라진 점이라면 이제 정말 필요할 때 Action과 무관하게 단독으로 사용할 수 있게 되었다는 점이다.\nRouter: 액티비티, 내비게이션 간 화면 이동과 처리를 담당하며, Navigator를 활용해 화면 이동이 가능하다.\n    \n이전에는 액션을 통해 이를 활용하던 부분은 모두 제거되어 코드에 반영되어 있다. 이 내용은 다음 글에서 자세히 다룰 예정이다.\nAlert/Toast: Action을 통해 이벤트를 전달하고 전달받는 처리를 하려고 했으나, Action 개선으로 단독 시스템으로 만들어질 예정이다. (샘플이라고 생각하는 것이 맞다.)\n기반 코드가 변경되었으니, 완전히 새로운 형태의 아키텍처라고 보는 것이 더 적절할 것이다.\nRouter 부분에서 싱글 액티비티를 활용하는 부분은 드로이드 나이츠 코드에 반영되어 있다.\ndroidknights 2025 - Router\n작성 글 이어보기\n1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\n3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?",
    "reviews": [],
    "syllabus": [],
    "link": "https://thdev.tech/architecture/2025/06/01/Android-Architecture-new-01/",
    "pubDate": "Sun, 01 Jun 2025 00:00:00 +0000",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 4,
    "imageUrl": "",
    "title": "[MULTI] 시도는 좋았던 3D 메트로배니아, 블레이드 오브 파이어",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://bbs.ruliweb.com/news/board/11/read/2313",
    "pubDate": "Thu, 29 May 2025 17:25:07 +0900",
    "creator": "［RULIWEB］",
    "categories": [
      "리뷰"
    ]
  },
  {
    "id": 5,
    "imageUrl": "",
    "title": "복잡한 회원 인증 프로세스, 기본 원칙만 알면 쉽습니다",
    "description": "팀장님: \"회원 인증 체계를 리뉴얼해 봅시다\"기획자: \"인... 인증이요?\" ('인증 시스템 레거시도 많아 보이고 복잡해 보이는데... 좀 무섭네...')'인증'이란 단어는 듣기만...",
    "reviews": [],
    "syllabus": [],
    "link": "https://techblog.lycorp.co.jp/ko/introduction-to-membership-authentication-system-renewal-case-study",
    "pubDate": "Fri, 30 May 2025 02:00:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 6,
    "imageUrl": "",
    "title": "NHN Cloud 빠른 시작 가이드를 소개합니다",
    "description": "![자산 2.png](https://image.toast.com/aaaadh/alpha/2025/techblog/uC790uC0B0%202.png)\r\r\n\r\r\n# 들어가며\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드가 출시되었습니다. NHN Cloud는 현재까지 110개가 넘는 서비스를 제공 중인데요. 이렇게 다양하고 많은 서비스를 처음 사용하고자 할 때 어디서부터 시작해야 할지에 대한 과정은 설레면서도 막막함을 동반하는데요. NHN Cloud를 처음 접해보는 분들을 위해 최대한 빠르고 쉽게 NHN Cloud를 익힐 수 있도록 돕기 위한 빠른 시작 가이드를 소개합니다.\r\r\n\r\r\n# 빠른 시작 가이드란?\r\r\n\r\r\n빠른 시작 가이드는 사용자가 서비스를 신속하게 이해하고 바로 사용할 수 있도록 도와주는 간결한 문서입니다. 여기서 중요한 점은 **간결성**이데요. 빠른 시작 가이드는 간결하고 핵심적인 내용을 담고 있어 사용자가 서비스를 시작하는데 필요한 정보만 포함하고 불필요한 세부사항은 생략합니다.\r\r\n\r\r\n또한 **작업 중심적**으로 특정 작업을 빠르게 완료하기 위한 정보만 포함합니다. 따라서 NHN Cloud 빠른 시작 가이드도 총 12개의 학습 모듈에서 완수해야 할 작업을 중심으로 구성되어 있습니다. 각 학습 모듈에서 이전에 생성한 리소스를 재활용하여 복잡한 초기 설정 작업을 간소화해 주요 작업을 빠르게 진행할 수 있도록 설계하였습니다.\r\r\n\r\r\n빠른 시작 가이드와 튜토리얼이 같은 목적을 가진 문서로 보일 수 있지만 사실 두 문서는 서로 다른 목적을 가집니다. 두 문서 모두 어떤 기능을 사용하거나 작업을 완료하는 방법을 다루는 문서이지만 튜토리얼은 앞서 설명한 빠른 시작 가이드의 특징과 다르게 사용자가 더 넓고 복잡한 작업을 수행할 수 있도록 돕습니다. 따라서 타깃 대상도 처음 서비스를 사용하는 사용자가 아닌 심화 학습을 원하는 사용자이며 빠른 시작 가이드 대비 내용이 더 길고 복잡한 작업을 다룹니다.\r\r\n\r\r\n## NHN Cloud 빠른 시작 가이드\r\r\n\r\r\n**NHN Cloud 빠른 시작 가이드**는 NHN Cloud를 처음 이용하는 사용자를 위한 단계별 온보딩 가이드입니다. 본 가이드를 통해 빠른 시간 내에 다양한 클라우드 리소스를 효율적으로 관리하고 설정할 수 있는 통합 관리 도구인 NHN Cloud 콘솔의 사용법을 익히고 클라우드 서비스를 제공할 수 있습니다.\r\r\n\r\r\n가이드는 아래와 같이 12개의 학습 모듈로 구성되어 있습니다. 각 학습 모듈은 쉽게 따라 할 수 있도록 실습 예제를 제공합니다. NHN Cloud 회원 가입 이후부터 기본 콘솔 사용법을 익히고 최종적으로 간단한 클라우드 아키텍처를 구성해 서비스를 제공할 수 있습니다.\r\r\n\r\r\n [NHN Cloud 빠른 시작 가이드 바로가기](https://docs.nhncloud.com/ko/quickstarts/ko/overview/)\r\r\n\r\r\n\r\r\n![NHN Portal 개선 빠른 시작 가이드@2x (1).png](https://image.toast.com/aaaadh/alpha/2025/techblog/NHN%20Portal%20uAC1CuC120%20uBE60uB978%20uC2DCuC791%20uAC00uC774uB4DC2x%201.png)\r\r\n\r\r\n## 빠른 시작 가이드 구성\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드의 학습 모듈은 크게 3가지 영역으로 구성됩니다.\r\r\n\r\r\n1. 학습 목표: 학습 모듈을 통해 배울 내용을 간략하게 보여줍니다.\r\r\n2. 시작하기 전에: 학습 모듈을 매끄럽게 수행하기 위해 필요한 준비 사항을 보여줍니다.\r\r\n3. 실습 과제: 학습 모듈에서 수행할 과제 내용을 다루며 여러 단계로 나누어 설명합니다.\r\r\n4. 참고 자료: 해당 학습 모듈과 관련된 더 깊이 있는 정보를 확인할 수 있습니다.\r\r\n\r\r\n\r\r\n빠른 시작 가이드는 NHN Cloud 입문자가 쉽게 익힐 수 있게 작성된 문서입니다. 따라서 각 학습 모듈에서 동일한 조직, 프로젝트, 리전, 가용성 영역을 사용하여 복잡한 설정 작업을 최대한 간소화하였습니다.\r\r\n\r\r\n* 조직: MyORG\r\r\n* 프로젝트: MyPRJ\r\r\n* 리전: 평촌 Region\r\r\n* VPC: MyVPC\r\r\n* 서브넷: MySubnet\r\r\n\r\r\n![0. 개요.png](https://image.toast.com/aaaadh/alpha/2025/techblog/0.%20uAC1CuC694.png)\r\r\n\r\r\n총 12개의 학습 모듈은 서로 연계되어 있습니다. 따라서 하나의 학습 모듈에서 생성한 리소스를 재사용하므로 마지막 학습 모듈을 마치기 전까지 리소스를 삭제하지 않는 것을 권장합니다. 학습 모듈의 실습 과제들을 차근차근 따라 해 보면서 생성한 리소스를 활용하여 `학습 모듈 10. 확장성과 성능 최적화`을 완수하면 아래와 같은 클라우드 아키텍처를 완성할 수 있습니다.\r\r\n\r\r\n![모듈 10. 확장성과 성능 최적화.png](https://image.toast.com/aaaadh/alpha/2025/techblog/uBAA8uB4C8%2010.%20uD655uC7A5uC131uACFC%20uC131uB2A5%20uCD5CuC801uD654.png)\r\r\n\r\r\n\r\r\n> 오토 스케일링, 로드 밸런싱 서비스를 사용해 안정적인 데이터 관리를 위한 효율적이고 유연하며 확장 가능한 시스템을 완성할 수 있습니다.\r\r\n\r\r\n## 더 알아보기\r\r\n\r\r\nNHN Cloud 빠른 시작 가이드를 통해 NHN Cloud와 친숙해 지셨다면 한 걸음 더 나아가 NHN Cloud 교육센터를 통해 더 깊이있고 심화된 내용을 학습하실 수 있습니다. NHN Cloud는 NHN Cloud 콘솔을 직접 사용하며 배울 수 있는 교육 과정을 제공하고 있는데요. 빠른 시작 가이드에서 다루는 내용 뿐 아니라 클라우드 및 컨테이너에 대한 기본 개념과 NHN Cloud의 컨테이너 서비스인 `NHN Kubernetes Service(NKS)`와 `NHN Container Registry(NCR)`에 대해 심도있게 학습할 수 있습니다. NHN Cloud 교육센터에서 제공하는 클라우드 기초 지식부터 심화 내용을 다루는 교육 과정을 통해 클라우드 역량을 향상하고 더 나아가 NHN Cloud 자격증을 이수할 수 있습니다.\r\r\n\r\r\n [NHN Cloud 교육센터 바로가기](https://www.nhncloud.com/kr/edu)\r\r\n\r\r\n![footer.png](https://image.toast.com/aaaadh/alpha/2025/techblog/footer.png)",
    "reviews": [],
    "syllabus": [],
    "link": "https://meetup.nhncloud.com/posts/392",
    "pubDate": "Wed, 28 May 2025 06:40:47 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 7,
    "imageUrl": "",
    "title": "Plugin Verifier and API Compatibility Maintenance: Livestream Recording & Key Takeaways",
    "description": "In a recent session, IntelliJ Platform Developer Advocate Róbert Novotný walked through the Plugin Verifier—one of the most important tools for maintaining plugin compatibility across JetBrains IDEs. The session focused on spotting breaking API changes, avoiding internal APIs, and verifying plugin behavior across IDE versions. If you couldn’t join us live, the full recording is […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/platform/2025/05/plugin-verifier-and-api-compatibility-maintenance-livestream-recording-amp-key-takeaways/",
    "pubDate": "Fri, 30 May 2025 13:34:43 +0000",
    "creator": "Elena Kerpeleva",
    "categories": [
      "plugin-development",
      "livestreams",
      "marketplace",
      "jetbrains-marketplace",
      "livestream"
    ]
  },
  {
    "id": 8,
    "imageUrl": "",
    "title": "주택 임대차 계약 신고제, 임차인의 권리 보호가 더 간편해져요",
    "description": "모르고 놓친다면 이제부터 과태료를 내야해요",
    "reviews": [],
    "syllabus": [],
    "link": "https://toss.im/tossfeed/article/36981",
    "pubDate": "Thu, 29 May 2025 23:00:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 9,
    "imageUrl": "",
    "title": "GitHub Copilot의 Visual Studio 자동 문서 댓글 생성 기능 소개",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://jacking75.github.io/ai-github_copilot_20250602/",
    "pubDate": "Mon, 02 Jun 2025 00:00:00 +0900",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 10,
    "imageUrl": "",
    "title": "2025-05-26 주간 업무일지",
    "description": "매일 쓰니까 글이 너무 많아지네요 주간으로 바꿨습니다.\n\n\n별로 한것도 없는데 165일이 지났습니다. ㄷㄷㄷ\n \n1. 웹페이지의 내용을 채우기위해 html 을 직접 고칠 순 없고 markdown 작업을 진행중입니다.\n2. 이메일 내용도 마크다운으로 변경 중입니다.\n\n\n \n\n\n이런식으로 메일이 잘 옵니다. 정크메일 문제는 없군요\n \n3. AI 에이전트를 좀 파봤는데 유료 결제 없이는 안되는거 같습니다.\n구글 ADK  과 A2A 를 해봤는데 \nADK 는 유료 결제에서 막혀서 진행이 중단되었고\nA2A 는 세팅 하는게 힘들어서 포기했습니다. ADK 보다 훨씬 큰 무언가가 있나봅니다.\nAI Agent 는 주석으로 함수 호출 방법을 설명하면\nAI 처리중에 알아서 함수를 호출해서 결과를 뽑아 오는 기능입니다.\n예제에서는 날씨 API 호출 방법을 설명하고 AI 한태 날씨를 물어보면 그 함수가 호출 되는걸 보여주고 있더군요\n \n4. BBG 최적화 작업 (진행중)\n다음주 까지 데이터를 입력한다고 하니 \n저도 진행 해야할꺼 같습니다.\n마음은 수이 코인 작업 하고 싶은데 ...",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1337",
    "pubDate": "Fri, 30 May 2025 11:34:57 +0900",
    "creator": "SIDNFT",
    "categories": [
      "프로그래밍/개발메모",
      "업데이트",
      "작업일지"
    ]
  },
  {
    "id": 11,
    "imageUrl": "",
    "title": "Google Play 앱 애드몹 붙이기 절차 / 2025년 5월",
    "description": "애드몹 붙이는 제대로된 절차가 없어서 시행착오 끝에 배운 결과를 요약합니다.\n \n1. 구글 플레이에 앱을 만든다.\n앱 만들기의 시작입니다.\n \n2. 애드몹 가입하고  앱 추가한다.\n광고 붙이기 시작이죠\n \n3. 애드몹에서 제공하는 app-ads.txt 정보를 홈페이지에 올린다.\n홈페이지 주소가\nhttps://apps.sidnft.com\n이라면\nhttps://apps.sidnft.com/app-ads.txt\n로 접속하면 파일 내용이 보여야한다.\n도메인네임/app-ads.txt 가 기준입니다. 서브 드렉토리는 인정하지 않습니다.\n도메인네임/game/app-ads.txt 같이 중간에 폴더명은 안쳐준다는 것입니다.\n \n \n \n4. 구글 플레이 앱 정보 -> 홈페이지 주소를 등록한다.\n개발자의 홈페이지를 이야기하는게 아니고\n앱의 홈페이지 입니다.\n \n5. 앱을 공개 테스트까지 진행한다.\n공개 테스트를 진행해야 스토어 앱 주소가 나옵니다.\n \n6. 공개 테스트 앱 링크를 가지고 애드몹에서 스토오 정보를 연결한다.\n애드몹에 보면 스토어 등록 정보를 입력하는 곳이 있습니다.\n거기다 넣고 검색해서 앱이 나와야 합니다.\n앱이 2개 나오는 경우가 있는데 하나는 인증 받을 수 없고 다른 하나는 인증 받을 수 있습니다.\n인증이 안되면 다른걸로 다시 등록해서 인증 받아보세요\n여기까지 해서 애드몹 인증이 끝나면 정상적인 광고를 받을 수 있습니다.\n빨리 적느라 메뉴의 위치를 생략했는데 나중에 채워두겠습니다.",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1333",
    "pubDate": "Tue, 27 May 2025 13:41:20 +0900",
    "creator": "SIDNFT",
    "categories": [
      "프로그래밍/개발메모",
      "애드몹",
      "앱개발"
    ]
  },
  {
    "id": 12,
    "imageUrl": "",
    "title": "소수몽키 / 미국 원자력 행정명령 / 로봇이 애 돌보는 시대 5년내 ?",
    "description": "영상: https://www.youtube.com/watch?v=KOKlis2GPzo&t=799s\n\n\n\n \n미국 원자력이 가고 있습니다. \n지금 사기엔 비싸고 다음번을 노려봅시다.\n끝물이 아니라 한참 갈 것 같습니다.\n \nCEG 컨스털레이션 에너지\n세계최대 원전 관리 회사\n \nOKLO 오클로 \n핵물질 재처리\n상용화 가능하다. 발언 있었음\n임원이 백악관 장관으로 갔다고 함\n두개게 유망해보입니다.\n제네럴 메터리얼은 상장이 안되어있다고 하네\n \n \n로봇 이야기하다 테슬라 로봇이 유튜브로 학습을 할 수 있다고 합니다.\n청소나 일을 밸울 수도 있지만 \n최종적으로 애들도 돌보고 학교 학원도 보내주고 할 수 있을 것 같습니다.\n이러면 출산율 다시 늘어나겠죠",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1336",
    "pubDate": "Wed, 28 May 2025 00:01:32 +0900",
    "creator": "SIDNFT",
    "categories": [
      "원자력",
      "휴머노이드"
    ]
  },
  {
    "id": 13,
    "imageUrl": "",
    "title": "악역영애 4컷 만화 - 4화, 선생님의 부탁인데스와",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://bbs.ruliweb.com/news/board/11/read/2312",
    "pubDate": "Wed, 28 May 2025 15:17:46 +0900",
    "creator": "｜RULIWEB｜",
    "categories": [
      "웹툰"
    ]
  },
  {
    "id": 14,
    "imageUrl": "",
    "title": "지난 10년을 회고하며",
    "description": "오늘은 제가 센드버드에 입사한 지 정확히 10년이 되는 날입니다.10년 전 오늘, 2015년 5월 30일, 역삼동의 스타트업 공간 마루180에서 제 개인 노트북을 연결해 첫 업무를 시작했던 기억이 생생합니다. ‘자이버’라는 이름으로 사업 소개서를 만들고, 저녁에는 ‘화덕’이라는 치킨집에서 환영회를 했던 풍경도 아직 떠오릅니다. 돌아보면, 만약 지금까지 해야만 했던 경험들을 10년 전의 제가 미리 알았더라면, 스타트업이라는 선택 자체를 망설였을지도Continue reading \"지난 10년을 회고하며\"\n지난 10년을 회고하며 appeared first on Kimchi hill.",
    "reviews": [],
    "syllabus": [],
    "link": "https://kimchihill.com/2025/05/30/kr-looking-back-on-the-past-10-years/?utm_source=rss&utm_medium=rss&utm_campaign=kr-looking-back-on-the-past-10-years",
    "pubDate": "Fri, 30 May 2025 04:34:54 +0000",
    "creator": "kimchihill",
    "categories": [
      "Korean essay"
    ]
  },
  {
    "id": 15,
    "imageUrl": "",
    "title": "PHP Annotated – May 2025",
    "description": "Welcome to the May edition of PHP Annotated! It’s been a minute since the last edition. Turns out time flies when you’re deep in foundation work, and the occasional existential debugging session. But we are back. Here’s everything you might’ve missed in the PHP world, we dug through the noise so you can just enjoy […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/phpstorm/2025/05/php-annotated-may-2025/",
    "pubDate": "Fri, 30 May 2025 15:36:07 +0000",
    "creator": "Roman Pronskiy",
    "categories": [
      "laravel",
      "php",
      "php-8-4",
      "php-8-5",
      "php-annotated-monthly",
      "rfc",
      "symfony"
    ]
  }
]