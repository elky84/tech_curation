[
  {
    "id": 1,
    "imageUrl": "",
    "title": "Junie and RubyMine: Your Winning Combo",
    "description": "Junie, a powerful AI coding agent from JetBrains, is available in RubyMine! Install the plugin and try it out now! Why Junie is a game-changer Unlike other AI coding agents, Junie leverages the robust power of JetBrains IDEs and reliable large language models (LLMs) to deliver exceptional results with high precision. According to SWE-bench Verified, […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/ruby/2025/06/junie-and-rubymine-your-winning-combo/",
    "pubDate": "Tue, 03 Jun 2025 07:55:50 +0000",
    "creator": "Alexey Varfolomeev",
    "categories": [
      "jetbrains-ai",
      "rubymine",
      "ai",
      "ai-agent",
      "junie"
    ]
  },
  {
    "id": 2,
    "imageUrl": "",
    "title": "Plugin Verifier and API Compatibility Maintenance: Livestream Recording & Key Takeaways",
    "description": "In a recent session, IntelliJ Platform Developer Advocate Róbert Novotný walked through the Plugin Verifier—one of the most important tools for maintaining plugin compatibility across JetBrains IDEs. The session focused on spotting breaking API changes, avoiding internal APIs, and verifying plugin behavior across IDE versions. If you couldn’t join us live, the full recording is […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/platform/2025/05/plugin-verifier-and-api-compatibility-maintenance-livestream-recording-amp-key-takeaways/",
    "pubDate": "Fri, 30 May 2025 13:34:43 +0000",
    "creator": "Elena Kerpeleva",
    "categories": [
      "plugin-development",
      "livestreams",
      "marketplace",
      "jetbrains-marketplace",
      "livestream"
    ]
  },
  {
    "id": 3,
    "imageUrl": "",
    "title": "코드 품질 개선 기법 14편: 책임을 부여하는 오직 하나의 책임",
    "description": "이 글은 2024년 2월 22일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 ...",
    "reviews": [],
    "syllabus": [],
    "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-14",
    "pubDate": "Wed, 04 Jun 2025 02:00:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 4,
    "imageUrl": "",
    "title": "PHP Annotated – May 2025",
    "description": "Welcome to the May edition of PHP Annotated! It’s been a minute since the last edition. Turns out time flies when you’re deep in foundation work, and the occasional existential debugging session. But we are back. Here’s everything you might’ve missed in the PHP world, we dug through the noise so you can just enjoy […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/phpstorm/2025/05/php-annotated-may-2025/",
    "pubDate": "Fri, 30 May 2025 15:36:07 +0000",
    "creator": "Roman Pronskiy",
    "categories": [
      "laravel",
      "php",
      "php-8-4",
      "php-8-5",
      "php-annotated-monthly",
      "rfc",
      "symfony"
    ]
  },
  {
    "id": 5,
    "imageUrl": "",
    "title": "다시 2부 - Composable Architecture - 라우터 소개",
    "description": "원래는 Action 시스템을 활용해서 Router를 쓰려고 설계했지만, 필자가 기존에 사용하던 방식 중 하나로 돌아가 거기서부터 다시 설계되었다.\n이 라우터는 크게 두 가지 상황에 활용 가능하다.\nActivity 간 화면 이동\nCompose Navigation 간 화면 이동\n만약 싱글 액티비티(Single Activity) 구조를 쓴다면 Compose Navigation 부분만 적용하면 되니 더 쉽게 사용 가능하다.\n여기서는 어떻게 활용되었을까?\nActivity는 Dagger의 IntoMap을 활용해서 Key/Value 매핑으로 ActivityRoute를 상속받아 구현한 객체를 정의해서 사용한다.\nCompose Navigation은 NavigationRoute를 상속받아 구현한다.\n이 글에서는\n새로운 Router의 설계 철학 및 동작 방식을 자세히 알아본다.\nActivity 및 Compose Navigation에서 Router를 활용하는 구체적인 코드 예시를 살펴본다.\nRoute\nNavigationRoute는 드로이드 나이츠(Droid Knights) 프로젝트에도 적용되었으며, 다음 링크를 통해 라우팅 방식을 확인해볼 수 있다.\ndroidknights 2025 - Router\n이 글에서는 TComposableArchitecture - GitHub - link에서 적용된 방법을 중심으로 설명한다.\n사용법\n사용법은 간단하다. Navigator를 주입받아 활용하며, 이동할 Activity 또는 Navigation을 Navigator에서 제공하는 navigate만 호출하면 된다.\n\n@HiltViewModel\ninternal class SearchViewModel @Inject constructor(\n    flowActionStream: FlowActionStream,\n    private val navigator: Navigator,\n) : ActionViewModel<SearchAction>(flowActionStream, SearchAction::class) {\n\n    override suspend fun handleAction(action: SearchAction) {\n        when (action) {\n            is SearchAction.ShowDetail -> { // Activity 이동 시\n                navigator.navigate(\n                    activityRoute = DetailActivityRouter::class,\n                    argumentMap = mapOf(\n                        DetailActivityRouter.PUT_DATA to DetailData(text = action.message),\n                    ),\n                )\n            }\n\n            is SearchAction.SwitchNavigation -> { // Compose Navigation 이동 시\n                navigator.navigate(\n                    navigationRoute = action.navItem.route,\n                    saveState = true,\n                )\n            }\n        }\n    }\n}\n\n\n여기서의 설계는?\n먼저 Compose Navigation에 대한 시퀀스를 살펴보자.\nView - Action - ViewModel - Router - RouterViewModel - RouterView로 이어지는 흐름을 알 수 있다.\n이를 쉽게 이해하기 위해 Repository 패턴에 비유하면, 두 개의 View에서 데이터 통신하는 방법을 설명한 그림으로 생각하면 된다. Router 부분이 Repository로 볼 수 있다.\nView - Action - ViewModel - Repository - RouterViewModel - RouterView\n이를 도식화하면\n\n이번에는 Activity를 이동한다면? 한단계가 더 추가됨을 알 수 있다.\nActivityJourney라는 개념을 활용해서 이동할 Activity가 포함되어 있는지 추가로 검증하고, Activity를 이동한다.\nView - Action - ViewModel - Router - (ActivityJourney) - RouterViewModel - RouterView\n\n이 코드를 이해하는 데 있어서 중요한 점은 두 개의 View가 어떻게 데이터를 통신하는가이다.\n가장 쉬운 방법은 싱글턴으로 처리된 Repository를 활용하는 것이거나, Activity 사이에 위치한 하나의 Repository를 활용하는 방법일 것이다. 보통은 Repository를 싱글턴으로 활용하니, 여기서도 동일하다고 이해하면 된다.\nRouter 코드\n먼저 우리가 활용할 Navigator는 인터페이스로 정의되어 있다. 구현체는 모두 숨겨져 있다.\n이때 구현체를 완전히 분리하고 싶다면, 인터페이스 모듈과 구현체 모듈을 두 개 만들어 활용하는 방식을 고려할 수 있다. 이 방식은 droidknights 2025 - Router에 포함되어 있으니 참고하길 바란다.\n\ninterface Navigator {\n\n    suspend fun <T : ActivityRoute> navigate(\n        activityRoute: KClass<T>,\n        argumentMap: Map<String, Parcelable> = emptyMap(),\n    )\n\n    suspend fun navigate(\n        navigationRoute: NavigationRoute,\n        saveState: Boolean = false,\n    )\n\n    suspend fun navigateBack()\n}\n\n\n위 코드에 대한 구현체는 다음과 같다.\nInternalNavigatorImpl은 Router 모듈 내부에서만 활용하기 위한 것으로, val channel: Channel<InternalRoute> 한 줄이 포함되어 있다.\n\n@ActivityRetainedScoped\ninternal class InternalNavigatorImpl @Inject constructor() : Navigator, InternalNavigator {\n\n    override val channel = Channel<InternalRoute>(Channel.BUFFERED)\n\n    // 아래에서 설명\n    override suspend fun <T : ActivityRoute> navigate(activityRoute: KClass<T>, argumentMap: Map<String, Parcelable>) {\n        channel.send(\n            InternalRoute.Activity(\n                activityRoute = activityRoute,\n                argumentMap = argumentMap,\n            )\n        )\n    }\n\n    override suspend fun navigate(navigationRoute: NavigationRoute, saveState: Boolean) {\n        channel.send(\n            InternalRoute.Navigation(\n                navigationRoute = navigationRoute,\n                saveState = saveState,\n            )\n        )\n    }\n\n    override suspend fun navigateBack() {\n        channel.send(InternalRoute.NavigateBack)\n    }\n}\n\n\n위 Router는 DI(Dependency Injection)를 통해 싱글턴으로 구성되어 있다.\n\n@Module\n@InstallIn(ActivityRetainedComponent::class)\ninternal abstract class RouterModel {\n\n    @Binds\n    @ActivityRetainedScoped\n    abstract fun provideNavigator(\n        navigator: InternalNavigatorImpl\n    ): Navigator\n\n    @Binds\n    @ActivityRetainedScoped\n    abstract fun provideInternalNavigator(\n        navigator: InternalNavigatorImpl\n    ): InternalNavigator\n}\n\n\nViewModel에서는 이를 활용해서, SideEffect로 View에서 collect할 수 있도록 구성되었으니, 기존 코드와 크게 다른 부분은 없다고 생각한다.\n\n@HiltViewModel\ninternal class InternalRouteViewModel @Inject internal constructor(\n    navigator: InternalNavigator,\n    private val journeyMapper: InternalActivityRouteMapper,\n) : ViewModel() {\n\n    val sideEffect by lazy(LazyThreadSafetyMode.NONE) {\n        navigator.channel.receiveAsFlow()\n            .map { router ->\n                when (router) {\n                    is InternalRoute.Activity<*> -> {\n                        journeyMapper.getJourneyOrNull(router.activityRoute)?.let {\n                            InternalRouteSideEffect.NavigateActivity(\n                                activityRoute = it,\n                                argumentMap = router.argumentMap,\n                            )\n                        }\n                    }\n\n                    is InternalRoute.Navigation -> {\n                        InternalRouteSideEffect.Navigate(\n                            navigationRoute = router.navigationRoute,\n                            saveState = router.saveState,\n                        )\n                    }\n\n                    is InternalRoute.NavigateBack -> {\n                        InternalRouteSideEffect.NavigateBack\n                    }\n                }\n            }\n            .filterNotNull()\n    }\n}\n\n\nView에서는\nView에서 SideEffect를 받아 처리하는 코드이다. 주로 화면 이동과 뒤로가기 이벤트를 처리할 수 있다.\nNavigateBack은 Activity와 Navigation 둘 다를 혼용 처리하기 위해 마지막 Entry가 있는지 한 번 더 체크하고 처리하도록 작성되었다.\n첫 화면에서는 보통 <나 X 버튼을 사용하지는 않지만, 적용은 해두었다.\n이 코드에서는 Navigation 처리에 대한 내용이므로 Activity 관련 코드는 제거되었다.\n\n@Composable\nprivate fun InternalLaunchedRouter(\n    navHostController: NavHostController? = null,\n    internalRouterViewModel: InternalRouteViewModel = viewModel(),\n) {\n    val activity = LocalActivity.current\n    val lifecycleOwner = LocalLifecycleOwner.current\n    LaunchedEffect(internalRouterViewModel, lifecycleOwner) {\n        lifecycleOwner.repeatOnLifecycle(Lifecycle.State.STARTED) {\n            internalRouterViewModel.sideEffect.collectLatest { sideEffect ->\n                when (sideEffect) {\n                    is InternalRouteSideEffect.NavigateBack -> {\n                        if (navHostController?.previousBackStackEntry != null) {\n                            navHostController.popBackStack()\n                        } else {\n                            activity?.finish()\n                        }\n                    }\n\n                    is InternalRouteSideEffect.Navigate -> {\n                        navHostController?.let { navigation ->\n                            navigation.navigate(sideEffect.navigationRoute) {\n                                navigation.graph.findStartDestination().route?.let {\n                                    popUpTo(it) {\n                                        saveState = sideEffect.saveState\n                                    }\n                                }\n                                restoreState = sideEffect.saveState\n                            }\n                        }\n                    }\n\n                    is InternalRouteSideEffect.NavigateActivity -> {\n                        activity?.startActivity(\n                            sideEffect.activityRoute.getActivity(activity).apply {\n                                sideEffect.argumentMap.entries.forEach { (key, value) ->\n                                    putExtra(key, value)\n                                }\n                            }\n                        )\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n이 코드가 처음 소개된 Flow 다이어그램에 해당한다.\n\n정의는?\nNavigationRoute를 상속받아 Route를 구현하고, 이를 Navigation 화면에 적용해야 한다.\n\n@Serializable\nobject SettingsRoute : NavigationRoute\n\n\n그리고 연결할 지점에는 NavGraphBuilder를 통해 네비게이션에서 활용할 composable을 정의하면 된다.\n\nfun NavGraphBuilder.settingsNavGraph() {\n    composable<SettingsRoute> {\n        InternalSettingsScreen()\n    }\n}\n\n\n네비게이션을 활용하는 방법은 기존과 동일하므로, 여기서는 설명은 생략하고 일부 코드를 올려둔다.\n\nScaffold(\n    bottomBar = {\n        NavigationBar {\n            navigationUiState.navigation.forEach { navItem ->\n                NavigationBarItem(\n                    selected = navigationUiState.selectNav == navItem,\n                    onClick = {\n                        onClick(navItem)\n                    },\n                    // 생략\n                )\n            }\n        }\n    },\n    modifier = modifier\n) { innerPadding ->\n    Box(\n        modifier = Modifier\n            .padding(innerPadding)\n            .padding(horizontal = 10.dp)\n    ) {\n        NavHost( // 네비게이션\n            navController = navController,\n            startDestination = NavigationUiState.Default.selectNav.route,\n        ) {\n            searchNavGraph()\n            settingsNavGraph()\n        }\n    }\n}\n\n\nActivity\nActivity 라우팅은 Compose Navigation보다 조금 더 복잡할 수 있다.\n우선 다시 Router 코드로 돌아가서 중요한 부분만 살펴보자. 여기서는 DI인 Dagger를 활용했으니 Dagger를 활용한 방법으로 접근한다.\n먼저 RouterKey라는 MapKey를 정의했다. 이를 활용해서 클래스 정보를 Key/Value로 매핑할 수 있도록 한다.\n\n@MapKey\nannotation class RouteKey(\n    val value: KClass<out ActivityRoute>,\n)\n\n\n그리고 SomeActivityRouter를 정의하고, 이를 상속받아 구현한다. 여기서 getActivity()를 구현해서 Intent 정보를 함께 전달하게 된다.\n\ninternal class MainActivityRouteImpl @Inject constructor() : MainActivityRouter {\n\n    override fun getActivity(context: Context): Intent =\n        Intent(context, MainActivity::class.java)\n}\n\n\nDI를 활용해 이 RouterImpl이 MainActivityRouter임을 알려주기 위해 @IntoMap과 @RouteKey를 활용해서 처리한다.\n\n@Module\n@InstallIn(SingletonComponent::class)\ninternal abstract class MainModule {\n\n    @Binds\n    @IntoMap\n    @RouteKey(MainActivityRouter::class)\n    abstract fun bindMainActivityRoute(\n        mainActivityRoute: MainActivityRouteImpl,\n    ): ActivityRoute\n}\n\n\n위 코드는 KSP(Kotlin Symbol Processing)를 활용하면 더 쉽게 자동화할 수 있다. 어차피 수동으로 만들더라도 같은 패턴만 나오도록 만들면 되기 때문이다. 특히 Activity를 찾는 것이 중요하며, Intent 객체를 처음부터 만드는 것도 아니기에 이러한 접근이 가능하다.\nKSP 관련 글\nAndroid KSP(Kotlin Symbol Processing) 활용을 위한 준비단계! - link\nAndroid KSP(Kotlin Symbol Processing) 활용할 수 있는 샘플 코드 작업 - link\n코드를 실행하면 런타임에 아래의 map: Map<Class<out ActivityRoute>, @JvmSuppressWildcards ActivityRoute> 부분에서 ActivityRoute로 정의한 정보를 찾아 Map 형태로 전달하고 이를 활용할 수 있다.\n아쉽게도 KClass를 바로 활용하려고 했지만, 런타임에서 오류가 발생해서 Java Class를 활용하게 되었다.\n\n@Module\n@InstallIn(SingletonComponent::class)\ninternal object JourneyRouterModule {\n\n    @Provides\n    @Singleton\n    fun providerInternalActivityRouteMapper(\n        map: Map<Class<out ActivityRoute>, @JvmSuppressWildcards ActivityRoute>,\n    ): InternalActivityRouteMapper =\n        InternalActivityRouteMapper(map)\n}\n\n\n마지막으로 접근해야 할 정보는 getJourneyOrNull에서 찾아서 startActivity할 수 있다.\n\n@Singleton\ninternal class InternalActivityRouteMapper @Inject constructor(\n    @get:VisibleForTesting val mapper: Map<Class<out ActivityRoute>, ActivityRoute>,\n) {\n\n    /**\n     * Find and return ActivityRoute from the data stored in Mapper.\n     */\n    internal fun getJourneyOrNull(journeyKClass: KClass<*>): ActivityRoute? =\n        synchronized(mapper) {\n            mapper[journeyKClass.java]\n        }\n}\n\n\nActivity라서\nCompose Navigation에서는 @Serializable object SettingsRoute : NavigationRoute와 같이 @Serializable 데이터 클래스만 정의하면 동작에 문제가 없고, 필요한 데이터도 간단하게 넘겨줄 수 있다.\n하지만 Activity는 필요한 데이터를 넘기기 위해 별도의 arguments를 사용해야 한다는 차이점이 있다.\n그래서 Navigator 인터페이스에 아래와 같이 arguments를 받을 수 있도록 추가해두었다.\n\ninterface Navigator {\n\n    suspend fun <T : ActivityRoute> navigate(\n        activityRoute: KClass<T>,\n        argumentMap: Map<String, Parcelable> = emptyMap(),\n    )\n\n    suspend fun navigate(\n        navigationRoute: NavigationRoute,\n        saveState: Boolean = false,\n    )\n}\n\n\n데이터 전달을 위함이니 Parcelable로 제한해두었다.\nNavigator를 활용하면 getJourneyOrNull 부분을 ViewModel에서 처리하고있음을 아래와 같이 확인할 수 있다.\n\n@HiltViewModel\ninternal class InternalRouteViewModel @Inject internal constructor(\n    navigator: InternalNavigator,\n    private val journeyMapper: InternalActivityRouteMapper,\n) : ViewModel() {\n\n    val sideEffect by lazy(LazyThreadSafetyMode.NONE) {\n        navigator.channel.receiveAsFlow()\n            .map { router ->\n                when (router) {\n                    is InternalRoute.Activity<*> -> {\n                        journeyMapper.getJourneyOrNull(router.activityRoute)?.let {\n                            InternalRouteSideEffect.NavigateActivity(\n                                activityRoute = it,\n                                argumentMap = router.argumentMap,\n                            )\n                        }\n                    }\n                }\n            }\n            .filterNotNull()\n    }\n}\n\n\n이 코드 부분을 도식화한 부분이 아래와 같다.\n\n정리하면\nView에서 화면 이동 이벤트가 발생한다.\nViewModel에서 Navigator를 통해 Activity/Compose Navigation으로 이벤트를 이동 요청한다.\n    \nActivity 이동: DI를 통해 주입받은 ActivityRoute 정보를 자동으로 매핑하여 InternalActivityRouteMapper에 사전 보관된 정보와 매칭하여 startActivity를 호출한다.\nNavigation 이동: Compose Navigation을 통해 Map에 포함되어있을 경우 이동한다.\n남은 작업은 다음과 같다.\nActivityResult 처리\nNavigationResult 처리\n사용법\n앞서 소개한 Action과 다르게 Router는 Activity를 기반하여 동작한다. A/B Activity가 있다고 하더라도, InternalActivityRouteMapper는 싱글턴이지만 실제 동작은 서로 무관하게 동작한다.\n그래서 각 Activity마다 아래와 같은 코드를 선택적으로 주입해 주어야 한다. 싱글 액티비티 구조라면 당연히 하나면 충분하지만, 서브 네비게이션에 대한 구조를 적용하지 않아서 현재는 모든 경우에 대응되지는 않는다.\n\nval navHostController = rememberNavController()\nLaunchedRouter(navHostController)\n\n// or\nLaunchedRouter() // navHostController default null\n\n\nNext\nAction을 새로 짜면서 Router도 몇 번의 수정이 있었다.\n기존 Action 방식에서의 문제점은 다음과 같았다.\nA/B/C 화면 어디서든 동일한 이벤트인 뒤로가기(back) 이벤트를 받는다면, 모든 화면에서 action을 처리해버리고 원치 않는 종료가 일어날 수 있다는 점이었다. 사이드 이펙트를 통해 막을 수는 있었지만 근본적인 문제 해결도 아니고, 오히려 복잡성을 높이는 코드였기에 수정되면서 원래 사용하던 방식으로 되돌아갔다는 점이다.\n더 나아가 네비게이션에서만 Router를 활용하고 싶다면 드로이드 나이츠 코드를 참고해보면 좋을 것 같다.\ndroidknights 2025 - Router\n작성 글 이어보기\n1부 - 컴포즈에 사용할 Composable Architecture 설명(리엑트?)\n2부 - Composable Architecture는 만들었는데 문제가 있었네? 개선해보자.\n3부 - Composable Architecture에서는 Alert/Toast는 어떻게 사용할 수 있는가?\n다시 - Composable Architecture 설계 변경",
    "reviews": [],
    "syllabus": [],
    "link": "https://thdev.tech/architecture/2025/06/02/Android-Architecture-new-02/",
    "pubDate": "Mon, 02 Jun 2025 00:00:00 +0000",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 6,
    "imageUrl": "",
    "title": "Hidden Truths About Developer Experience: Three Key Insights From Our Research",
    "description": "Developer experience (DevEx) and developer productivity (DP) are hot topics. Many companies are already working actively to measure and improve them, while others, if not already doing this, are at least aware of them. However, what we’re interested in is what’s really happening inside companies when it comes to DevEx and DP. To get a […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/research/2025/06/hidden-truths-about-developer-experience-three-key-insights-from-our-research/",
    "pubDate": "Wed, 04 Jun 2025 13:04:55 +0000",
    "creator": "Yanina Ledovaya",
    "categories": [
      "research",
      "developer-experience",
      "jetbrains-deveco"
    ]
  },
  {
    "id": 7,
    "imageUrl": "",
    "title": "IntelliJ IDEA 2025.1.2 Is Out!",
    "description": "IntelliJ IDEA 2025.1.2 has arrived with several valuable fixes. You can update to this version from inside the IDE, using the Toolbox App, or using snaps if you are a Ubuntu user. You can also download it from our website. Here are the most notable updates included in this version: To find out more details about the […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/idea/2025/06/intellij-idea-2025-1-2/",
    "pubDate": "Wed, 04 Jun 2025 14:08:58 +0000",
    "creator": "Maria Kosukhina",
    "categories": [
      "releases",
      "bug-fix-update",
      "intellij-idea-2025-1",
      "intellij-idea-2025-1-2-2"
    ]
  },
  {
    "id": 8,
    "imageUrl": "",
    "title": "쿠팡을 이용한 결과",
    "description": "쿠팡에서의 제품 구입 패턴을 바꿔야겠다.\n와우회원을 탈퇴하거나 네이버 쇼핑과 잘 믹스 해야겠다.\n이유는 이렇다.\n- 저품질, 불만족스러운 제품을 많이 사게 됐다. 리뷰를 꼼꼼히 보고 샀지만, 쉽게 망가지거나 금방 해져버리는 물건들이 많았다. 흔히 말하는 ‘불만족-알리택갈이’ 제품의 구매 비중이 점점 늘어났다는 얘기다. 특히 생활용품에서 이런 불만족이 컸다. 쿠팡이 그런 제품을 일부러 권한 건 아니지만, 문방구 앞 달고나처럼 달콤한 유혹을 뿌리칠 수 없었다.\n- 로켓배송은 사실 필요가 없었다. 구입 이력을 보니 ‘꼭 오늘, 내일 필요해!’라는 제품은 하나도 없었다. 당일이나 하루 만에 도착하는 배송이 편리하다는 착각에 빠져 있었던 것이다. 쾌락과 편리함의 경계를 제대로 구분하지 못한 탓이 크다.\n- 내 기준에 맞는 제품은 대부분 로켓배송이 아니거나, 가격에서 이점이 없다.\n- 쿠팡플레이는 애초에 보지 않는다.",
    "reviews": [],
    "syllabus": [],
    "link": "https://hodolman.tistory.com/76",
    "pubDate": "Sun, 1 Jun 2025 23:39:39 +0900",
    "creator": "호돌맨",
    "categories": [
      "우당탕탕 대모험"
    ]
  },
  {
    "id": 9,
    "imageUrl": "",
    "title": "Microsoft, Anthropic과 협력하여 모델 컨텍스트 프로토콜용 공식 C# SDK 개발",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://jacking75.github.io/NET_20250604/",
    "pubDate": "Wed, 04 Jun 2025 00:00:00 +0900",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 10,
    "imageUrl": "",
    "title": "AI스트레스, 다들 없으세요?",
    "description": "저는 국내 대형 카드사에 재직 중입니다. 금융회사가 다 그렇듯 상당히 보수적이고 변화에 늦은 편이죠. 그런데 작년 말 갑자기 회사 안에 AI 본부가 생겼습니다. AI가 화두긴 화두인가 봅니다. 세상이 변하고 있으니 빨리 쫓아가야죠.  그런데 제가 불려 들어갔습니다. 그냥도 아니고 팀장입니다. (제가요? 왜요? 라고 요즘 MZ들 하는 말 저도 해 보고 싶었습니다만…) 네, 작년 말 이후로 갑자기 […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://ppss.kr/archives/268818",
    "pubDate": "Mon, 02 Jun 2025 03:06:01 +0000",
    "creator": "길진세",
    "categories": [
      "IT",
      "사회"
    ]
  },
  {
    "id": 11,
    "imageUrl": "",
    "title": "AI 이미지 프롬프트 생성기 무료로 사용하세요",
    "description": "AI 이미지 프롬프트 생성기는 복잡한 프롬프트 작성 없이 간단한 옵션 선택만으로 전문적인 AI 이미지 생성 프롬프트를 만들어주는 도구입니다. 성별, 인종, 직업부터 표정, 동작, 의상, 배경까지 세밀한 옵션을 제공하며, 창작 아이디어가 막혔을 때는 랜덤 생성 기능으로 새로운 영감을 얻을 수 있습니다.\n \n DALL·E, Midjourney, Stable Diffusion, GPT-4o 등 각 AI 플랫폼에 최적화된 4가지 형태의 프롬프트를 동시에 생성해주어 어떤 도구든 바로 사용할 수 있습니다. 한국어-영어 병기로 제공되어 이해하기 쉽고, 웹브라우저에서 설치 없이 즉시 사용 가능합니다. AI 이미지 생성 초보자부터 전문가까지, 3분 만에 원하는 캐릭터와 장면을 만들어보세요!\n\n\n \n\n    \n      tailwind.config = {\n        theme: {\n          extend: {\n            colors: {\n              'brand-primary': '#1e40af', // Deep blue\n              'brand-secondary': '#3b82f6', // Lighter blue\n              'brand-accent': '#fbbf24', // Amber accent\n              'neutral-dark': '#1f2937', // Dark gray\n              'neutral-medium': '#4b5563', // Medium gray\n              'neutral-light': '#d1d5db', // Light gray\n              'neutral-extralight': '#f3f4f6', // Extra light gray for backgrounds\n            },\n            fontFamily: {\n              sans: ['Inter', 'sans-serif'], // Using Inter as a modern sans-serif\n            },\n          }\n        }\n      }\n    \n    \n\n\n    \n      // --- Constants and Types (from types.ts and constants.ts) ---\n      const Category = {\n        GENDER: \"성별\\n(Gender)\",\n        RACE: \"인종\\n(Race)\",\n        OCCUPATION: \"직업\\n(Occupation)\",\n        EXPRESSION: \"표정\\n(Facial Expression)\",\n        ACTION: \"동작\\n(Action/Pose)\",\n        CLOTHING: \"복장\\n(Clothing)\",\n        ACCESSORIES: \"액세서리\\n(Accessories)\",\n        BACKGROUND: \"배경\\n(Background)\",\n        STYLE: \"화풍\\n(Art Style)\",\n        ASPECT_RATIO: \"이미지 비율\\n(Image Aspect Ratio)\",\n        FRAMING: \"촬영 구도\\n(Shot Type/Framing)\"\n      };\n\n      const ExpressionSubCategory = {\n        HAPPY_JOYFUL: \"행복/기쁨\\n(Happy/Joyful)\",\n        SAD_SORROWFUL: \"슬픔/비통\\n(Sad/Sorrowful)\",\n        ANGRY_FURIOUS: \"분노/격노\\n(Angry/Furious)\",\n        SURPRISED_SHOCKED: \"놀람/충격\\n(Surprised/Shocked)\",\n        THOUGHTFUL_SERIOUS: \"생각/진지\\n(Thoughtful/Serious)\",\n        NEUTRAL: \"중립적\\n(Neutral)\",\n        FEARFUL_ANXIOUS: \"두려움/불안\\n(Fearful/Anxious)\",\n        PLAYFUL_MISCHIEVOUS: \"장난스러운/익살스러운\\n(Playful/Mischievous)\",\n        LOVE_AFFECTION: \"사랑/애정\\n(Love/Affection)\",\n        CONFIDENT_PROUD: \"자신감/자부심\\n(Confident/Proud)\",\n        DAILY_LIFE_EXPRESSIONS: \"일상 표정\\n(Daily Life Expressions)\"\n      };\n\n      const ActionSubCategory = {\n        STATIC_POSES: \"정적 자세\\n(Static Poses)\",\n        DYNAMIC_MOVEMENT: \"동적 움직임\\n(Dynamic Movement)\",\n        INTERACTION_OBJECT: \"사물과 상호작용\\n(Interaction with Object)\",\n        MAGICAL_FANTASY: \"마법/판타지 동작\\n(Magical/Fantasy Actions)\",\n        DAILY_LIFE: \"일상 활동\\n(Daily Life Activities)\",\n        COMBAT_POSES: \"전투 자세\\n(Combat Poses)\",\n        ARTISTIC_CREATIVE: \"예술/창작 활동\\n(Artistic/Creative)\",\n        SPORTS_ATHLETICS: \"스포츠/운동\\n(Sports/Athletics)\",\n        COMMUNICATION_GESTURES: \"소통/제스처\\n(Communication/Gestures)\",\n        HOUSEHOLD_CHORES: \"집안일\\n(Household Chores)\"\n      };\n\n      const ClothingSubCategory = {\n        MODERN_CASUAL: \"현대/캐주얼\\n(Modern/Casual)\",\n        FORMAL_ELEGANT: \"정장/우아함\\n(Formal/Elegant)\",\n        HISTORICAL_TRADITIONAL: \"역사적/전통적\\n(Historical/Traditional)\",\n        FANTASY_SCI_FI: \"판타지/SF\\n(Fantasy/Sci-Fi)\",\n        OCCUPATIONAL_UNIFORM: \"직업/유니폼\\n(Occupational/Uniform)\",\n        CULTURAL_ETHNIC: \"문화/민족 의상\\n(Cultural/Ethnic)\",\n        SLEEPWEAR_LOUNGEWEAR: \"잠옷/실내복\\n(Sleepwear/Loungewear)\",\n        PROTECTIVE_GEAR: \"보호 장비\\n(Protective Gear)\",\n        EVERYDAY_WEAR: \"일상복\\n(Everyday Wear)\"\n      };\n      \n      const AccessoriesSubCategory = {\n        MAIN_ACCESSORIES: \"주요 액세서리 타입\\n(Main Accessory Types)\"\n      };\n\n      const BackgroundSubCategory = {\n        NATURE_LANDSCAPE: \"자연/풍경\\n(Nature/Landscape)\",\n        URBAN_CITYSCAPE: \"도시/건축\\n(Urban/Cityscape)\",\n        INTERIOR_SPACES: \"실내 공간\\n(Interior Spaces)\",\n        FANTASY_SURREAL: \"판타지/초현실\\n(Fantasy/Surreal)\",\n        ABSTRACT_MINIMALIST: \"추상/미니멀\\n(Abstract/Minimalist)\",\n        HISTORICAL_RUINS: \"역사적 유적\\n(Historical/Ruins)\",\n        SPACE_COSMIC: \"우주/천체\\n(Space/Cosmic)\",\n        WEATHER_ATMOSPHERE: \"날씨/분위기\\n(Weather/Atmosphere)\",\n        PATTERNS_TEXTURES: \"패턴/질감\\n(Patterns/Textures)\",\n        EVERYDAY_LOCATIONS: \"일상 장소\\n(Everyday Locations)\"\n      };\n      \n      const NONE_OPTION_VALUE = \"none\";\n      const NONE_OPTION_LABEL = \"선택 안함\\n(None)\";\n      const NONE_OPTION = { value: NONE_OPTION_VALUE, label: NONE_OPTION_LABEL };\n\n      const GENDER_OPTIONS = [\n        { value: \"man\", label: \"남성\\n(Man)\" }, { value: \"woman\", label: \"여성\\n(Woman)\" }, { value: \"non-binary person\", label: \"논바이너리\\n(Non-binary Person)\" }, { value: \"androgynous person\", label: \"양성적인 사람\\n(Androgynous Person)\" }, { value: \"genderfluid person\", label: \"젠더플루이드\\n(Genderfluid Person)\" }, { value: \"agender person\", label: \"에이젠더\\n(Agender Person)\" }, { value: \"boy\", label: \"소년\\n(Boy)\" }, { value: \"girl\", label: \"소녀\\n(Girl)\" }, { value: \"young man\", label: \"청년\\n(Young Man)\" }, { value: \"young woman\", label: \"젊은 여성\\n(Young Woman)\" }, { value: \"middle-aged man\", label: \"중년 남성\\n(Middle-aged Man)\" }, { value: \"middle-aged woman\", label: \"중년 여성\\n(Middle-aged Woman)\" }, { value: \"elderly man\", label: \"노년 남성\\n(Elderly Man)\" }, { value: \"elderly woman\", label: \"노년 여성\\n(Elderly Woman)\" }, { value: \"transgender man\", label: \"트랜스젠더 남성\\n(Transgender Man)\" }, { value: \"transgender woman\", label: \"트랜스젠더 여성\\n(Transgender Woman)\" },\n      ];\n      const RACE_OPTIONS = [\n        { value: \"Korean\", label: \"한국인\\n(Korean)\" }, { value: \"Japanese\", label: \"일본인\\n(Japanese)\" }, { value: \"Chinese (Han, Uyghur, Tibetan, etc.)\", label: \"중국인 (한족, 위구르족 등)\\n(Chinese)\" }, { value: \"Caucasian (e.g., Northern European, Southern European, Slavic, American)\", label: \"백인 (북유럽, 남유럽, 미국 백인 등)\\n(Caucasian)\" }, { value: \"African descent (e.g., Nigerian, Ethiopian, Kenyan, Afro-Caribbean, African American)\", label: \"아프리카계 (나이지리아, 아프리카계 미국인 등)\\n(African descent)\" }, { value: \"Hispanic/Latinx (e.g., Mexican, Brazilian, Puerto Rican, Cuban, Colombian)\", label: \"히스패닉/라틴계 (멕시코, 브라질 등)\\n(Hispanic/Latinx)\" }, { value: \"Middle Eastern (e.g., Arab, Persian, Turkish, Israeli)\", label: \"중동인 (아랍, 페르시아 등)\\n(Middle Eastern)\" }, { value: \"South Asian (e.g., Indian, Pakistani, Bangladeshi, Sri Lankan)\", label: \"남아시아인 (인도 등)\\n(South Asian)\" }, { value: \"Southeast Asian (e.g., Vietnamese, Thai, Filipino, Malaysian, Indonesian)\", label: \"동남아시아인 (베트남 등)\\n(Southeast Asian)\" }, { value: \"Indigenous/Native American (e.g., Navajo, Inuit, Cherokee, Sioux)\", label: \"원주민/아메리카 원주민\\n(Indigenous/Native American)\" }, { value: \"Pacific Islander (e.g., Polynesian, Melanesian, Micronesian)\", label: \"태평양 섬 주민\\n(Pacific Islander)\" }, { value: \"Nordic (e.g. Swedish, Norwegian, Danish)\", label: \"북유럽인\\n(Nordic)\" }, { value: \"Eastern European (e.g., Russian, Polish, Ukrainian, Czech)\", label: \"동유럽인 (러시아, 폴란드 등)\\n(Eastern European)\" }, { value: \"Mediterranean (e.g., Greek, Italian, Spanish)\", label: \"지중해인 (그리스, 이탈리아 등)\\n(Mediterranean)\" }, { value: \"Celtic (e.g. Irish, Scottish, Welsh)\", label: \"켈트족\\n(Celtic)\" }, { value: \"Aboriginal Australian\", label: \"호주 원주민\\n(Aboriginal Australian)\" }, { value: \"Maori\", label: \"마오리족\\n(Maori)\" }, { value: \"mixed race/ethnicity\", label: \"혼혈/다민족\\n(Mixed Race/Ethnicity)\" }, { value: \"fantasy race (e.g., elf, orc, dwarf, fairy, gnome, troll)\", label: \"판타지 종족 (엘프, 오크 등)\\n(Fantasy Race)\" }, { value: \"extraterrestrial/alien species\", label: \"외계 종족\\n(Alien Species)\" }, { value: \"a person from a specific city (e.g., New Yorker, Parisian, Seoulite)\", label: \"특정 도시 사람 (뉴요커, 파리지앵 등)\\n(Person from a specific city)\"}, { value: \"a tourist\", label: \"관광객\\n(A tourist)\"},\n      ];\n      const OCCUPATION_OPTIONS = [\n        NONE_OPTION, { value: \"student\", label: \"학생\\n(Student)\" }, { value: \"office worker\", label: \"직장인\\n(Office worker)\" }, { value: \"homemaker\", label: \"주부\\n(Homemaker)\" }, { value: \"retiree\", label: \"은퇴자\\n(Retiree)\" }, { value: \"freelancer\", label: \"프리랜서\\n(Freelancer)\" }, { value: \"artist\", label: \"예술가\\n(Artist)\" }, { value: \"shop assistant\", label: \"점원\\n(Shop assistant)\"}, { value: \"teacher\", label: \"교사\\n(Teacher)\"}, { value: \"commuter\", label: \"통근자\\n(Commuter)\"}, { value: \"doctor\", label: \"의사\\n(Doctor)\" }, { value: \"nurse\", label: \"간호사\\n(Nurse)\" }, { value: \"engineer\", label: \"엔지니어\\n(Engineer)\" }, { value: \"scientist\", label: \"과학자\\n(Scientist)\" }, { value: \"chef\", label: \"요리사\\n(Chef)\" }, { value: \"police officer\", label: \"경찰관\\n(Police Officer)\" }, { value: \"firefighter\", label: \"소방관\\n(Firefighter)\" }, { value: \"musician\", label: \"음악가\\n(Musician)\" }, { value: \"writer\", label: \"작가\\n(Writer)\" }, { value: \"athlete\", label: \"운동선수\\n(Athlete)\" }, { value: \"farmer\", label: \"농부\\n(Farmer)\" }, { value: \"pilot\", label: \"조종사\\n(Pilot)\" }, { value: \"construction worker\", label: \"건설 노동자\\n(Construction Worker)\" }, { value: \"librarian\", label: \"사서\\n(Librarian)\" }, { value: \"barista\", label: \"바리스타\\n(Barista)\" }, { value: \"actor/actress\", label: \"배우\\n(Actor/Actress)\" }, { value: \"dancer\", label: \"댄서\\n(Dancer)\" }, { value: \"detective\", label: \"탐정\\n(Detective)\" }, { value: \"journalist\", label: \"기자\\n(Journalist)\" }, { value: \"photographer\", label: \"사진작가\\n(Photographer)\" }, { value: \"programmer/developer\", label: \"프로그래머/개발자\\n(Programmer/Developer)\" }, { value: \"researcher\", label: \"연구원\\n(Researcher)\" }, { value: \"singer\", label: \"가수\\n(Singer)\" }, { value: \"soldier\", label: \"군인\\n(Soldier)\" }, { value: \"translator\", label: \"번역가\\n(Translator)\" }, { value: \"waiter/waitress\", label: \"웨이터/웨이트리스\\n(Waiter/Waitress)\" }, { value: \"wizard/sorcerer/mage\", label: \"마법사\\n(Wizard/Sorcerer/Mage)\" }, { value: \"knight/warrior\", label: \"기사/전사\\n(Knight/Warrior)\" }, { value: \"king/queen/royalty\", label: \"왕/여왕/왕족\\n(King/Queen/Royalty)\" }, { value: \"adventurer/explorer\", label: \"모험가/탐험가\\n(Adventurer/Explorer)\" }, { value: \"spy/secret agent\", label: \"스파이/비밀 요원\\n(Spy/Secret Agent)\" }, { value: \"pirate\", label: \"해적\\n(Pirate)\" }, { value: \"astronaut\", label: \"우주비행사\\n(Astronaut)\" }, { value: \"cyborg\", label: \"사이보그\\n(Cyborg)\" }, { value: \"robot/android\", label: \"로봇/안드로이드\\n(Robot/Android)\" }, { value: \"alien\", label: \"외계인\\n(Alien)\" },\n      ];\n      const STYLE_OPTIONS = [\n        NONE_OPTION, { value: \"photorealistic\", label: \"사진 같은\\n(Photorealistic)\" }, { value: \"digital painting (e.g. detailed, painterly, speedpaint)\", label: \"디지털 페인팅\\n(Digital Painting)\" }, { value: \"anime style (e.g., Studio Ghibli, Shonen, Magical Girl, 90s retro, modern moe)\", label: \"애니메이션 스타일\\n(Anime Style)\" }, { value: \"fantasy art (e.g., D&D style, epic, high fantasy, dark fantasy, whimsical)\", label: \"판타지 아트\\n(Fantasy Art)\" }, { value: \"sci-fi concept art (e.g., futuristic, dystopian, utopian, cyberpunk, biopunk)\", label: \"SF 컨셉 아트\\n(Sci-fi Concept Art)\" }, { value: \"impressionistic painting (Monet, Renoir style)\", label: \"인상주의풍 회화\\n(Impressionistic Painting)\" }, { value: \"oil painting (classical, modern, abstract, impasto)\", label: \"유화\\n(Oil Painting)\" }, { value: \"watercolor art (delicate, vibrant, wet-on-wet, dry brush)\", label: \"수채화\\n(Watercolor Art)\" }, { value: \"pixel art (e.g., 8-bit, 16-bit, isometric, modern indie)\", label: \"픽셀 아트\\n(Pixel Art)\" }, { value: \"cartoon style (e.g., Disney, Looney Tunes, modern flat, CalArts, rubber hose)\", label: \"카툰 스타일\\n(Cartoon Style)\" }, { value: \"steampunk art (Victorian, mechanical, goggles, gears)\", label: \"스팀펑크 아트\\n(Steampunk Art)\" }, { value: \"gothic art (dark, ornate, moody, macabre)\", label: \"고딕 아트\\n(Gothic Art)\" }, { value: \"ink wash painting (Sumi-e, East Asian calligraphy, monochrome)\", label: \"수묵화\\n(Ink Wash Painting)\" }, { value: \"baroque style painting (dramatic, rich detail, chiaroscuro)\", label: \"바로크 양식 회화\\n(Baroque Style Painting)\" }, { value: \"art nouveau (elegant, decorative, flowing lines, Mucha style)\", label: \"아르누보\\n(Art Nouveau)\" }, { value: \"minimalist vector art (clean, geometric, flat colors)\", label: \"미니멀리스트 벡터 아트\\n(Minimalist Vector Art)\" }, { value: \"concept art sketch (rough, dynamic, exploratory)\", label: \"컨셉 아트 스케치\\n(Concept Art Sketch)\" }, { value: \"graphic novel style (bold lines, paneling effect, dynamic shading)\", label: \"그래픽 노블 스타일\\n(Graphic Novel Style)\" }, { value: \"surrealism (dreamlike, illogical, Dali, Magritte style)\", label: \"초현실주의\\n(Surrealism)\" }, { value: \"cyberpunk art (neon, futuristic, gritty, Blade Runner aesthetic)\", label: \"사이버펑크 아트\\n(Cyberpunk Art)\" }, { value: \"ukiyo-e (Japanese woodblock print, Hokusai style)\", label: \"우키요에\\n(Ukiyo-e)\" }, { value: \"art deco (geometric, luxurious, Roaring Twenties)\", label: \"아르데코\\n(Art Deco)\" }, { value: \"chalk art (pastel, textured, ephemeral)\", label: \"분필 아트\\n(Chalk Art)\" }, { value: \"stained glass window (vibrant colors, lead lines, gothic, tiffany)\", label: \"스테인드 글라스\\n(Stained Glass Window)\" }, { value: \"claymation style (Aardman, tactile, stop-motion look)\", label: \"클레이메이션 스타일\\n(Claymation Style)\" }, { value: \"vintage comic book art (dot shading, bold outlines, retro)\", label: \"빈티지 만화책 아트\\n(Vintage Comic Book Art)\" }, { value: \"children's book illustration (whimsical, colorful, charming)\", label: \"동화 삽화\\n(Children's Book Illustration)\" }, { value: \"sticker art (die-cut, glossy, pop art)\", label: \"스티커 아트\\n(Sticker Art)\" }, { value: \"tarot card art (symbolic, mystical, Rider-Waite style)\", label: \"타로 카드 아트\\n(Tarot Card Art)\" }, { value: \"low poly 3D render (geometric, stylized, retro game look)\", label: \"로우 폴리 3D 렌더\\n(Low Poly 3D Render)\" }, { value: \"vaporwave aesthetic (nostalgic, neon, retro-futuristic, glitch art)\", label: \"베이퍼웨이브 미학\\n(Vaporwave Aesthetic)\" }, { value: \"expressionism (emotional, distorted, bold colors, Munch style)\", label: \"표현주의\\n(Expressionism)\" }, { value: \"cubism (geometric forms, multiple perspectives, Picasso style)\", label: \"입체주의\\n(Cubism)\" }, { value: \"pointillism (Seurat style, dots of color)\", label: \"점묘법\\n(Pointillism)\" }, { value: \"tribal art (patterns, symbolic, indigenous motifs)\", label: \"부족 예술\\n(Tribal Art)\" }, { value: \"daily life snapshot style\", label: \"일상 스냅 사진 스타일\\n(Daily life snapshot style)\" }, { value: \"documentary style\", label: \"다큐멘터리 스타일\\n(Documentary style)\" }, { value: \"CCTV footage style\", label: \"CCTV 화면 스타일\\n(CCTV footage style)\" }, { value: \"blog photo style\", label: \"블로그 사진 스타일\\n(Blog photo style)\" }, { value: \"food photography style\", label: \"음식 사진 스타일\\n(Food photography style)\" }, { value: \"fashion editorial style\", label: \"패션 화보 스타일\\n(Fashion editorial style)\" }, { value: \"vintage film photography (e.g. 35mm, polaroid)\", label: \"빈티지 필름 사진 (35mm, 폴라로이드)\\n(Vintage film photography)\" },\n      ];\n      const ASPECT_RATIO_OPTIONS = [\n        NONE_OPTION, { value: \"1:1\", label: \"정사각형 (1:1)\\n(Square 1:1)\" }, { value: \"16:9\", label: \"가로형 HD (16:9)\\n(Landscape HD 16:9)\" }, { value: \"9:16\", label: \"세로형 스토리 (9:16)\\n(Portrait Story 9:16)\" }, { value: \"4:3\", label: \"클래식 TV (4:3)\\n(Classic TV 4:3)\" }, { value: \"3:2\", label: \"사진 DSLR (3:2)\\n(Photo DSLR 3:2)\" }, { value: \"21:9\", label: \"시네마스코프 (21:9)\\n(Cinemascope 21:9)\" }, { value: \"3:4\", label: \"세로형 사진 (3:4)\\n(Portrait Photo 3:4)\" }, { value: \"2:1\", label: \"파노라마 (2:1)\\n(Panorama 2:1)\" }, { value: \"5:4\", label: \"대형 사진 (5:4)\\n(Large Format Photo 5:4)\" }, { value: \"1.85:1\", label: \"와이드스크린 미국 (1.85:1)\\n(Widescreen US 1.85:1)\" }, { value: \"2.39:1\", label: \"아나모픽 시네마 (2.39:1)\\n(Anamorphic Cinema 2.39:1)\" }, { value: \"1.618:1\", label: \"황금 비율 (~1.618:1)\\n(Golden Ratio ~1.618:1)\" }, { value: \"1:1.414\", label: \"A4 용지 비율 (~1:1.414)\\n(A4 Paper ~1:1.414)\" }, { value: \"3:1\", label: \"초광각 파노라마 (예: 3:1)\\n(Ultra-wide Panoramic 3:1)\" },\n      ];\n      const FRAMING_OPTIONS = [\n        NONE_OPTION, { value: \"full body shot\", label: \"전신샷\\n(Full body shot)\"}, { value: \"medium shot (from waist up)\", label: \"미디엄 샷 (허리 위)\\n(Medium shot)\"}, { value: \"cowboy shot (mid-thigh up)\", label: \"카우보이 샷 (허벅지 중간 위)\\n(Cowboy shot)\"}, { value: \"upper body shot (chest up)\", label: \"상반신 샷 (가슴 위)\\n(Upper body shot)\"}, { value: \"close-up shot (face focused)\", label: \"클로즈업 샷 (얼굴 중심)\\n(Close-up shot)\"}, { value: \"extreme close-up (features like eyes or lips)\", label: \"익스트림 클로즈업 (눈, 입 등 특징)\\n(Extreme close-up)\"}, { value: \"portrait shot (head and shoulders)\", label: \"초상화 샷 (머리와 어깨)\\n(Portrait shot)\"}, { value: \"establishing shot (shows environment, character small)\", label: \"설정 샷 (환경 중심, 인물 작게)\\n(Establishing shot)\"}, { value: \"low angle shot (camera looks up)\", label: \"로우 앵글 샷 (아래에서 위로)\\n(Low angle shot)\"}, { value: \"high angle shot (camera looks down)\", label: \"하이 앵글 샷 (위에서 아래로)\\n(High angle shot)\"}, { value: \"dutch angle shot (tilted camera)\", label: \"더치 앵글 샷 (기울어진 카메라)\\n(Dutch angle shot)\"}, { value: \"over-the-shoulder shot\", label: \"어깨너머 샷\\n(Over-the-shoulder shot)\"}, { value: \"point-of-view shot (POV)\", label: \"1인칭 시점 샷 (POV)\\n(Point-of-view shot)\"}, { value: \"selfie angle\", label: \"셀카 구도\\n(Selfie angle)\"}, { value: \"vlog style shot\", label: \"브이로그 스타일 샷\\n(Vlog style shot)\"}, { value: \"eye-level shot\", label: \"눈높이 샷\\n(Eye-level shot)\"},\n      ];\n\n      const EXPRESSION_SUB_CATEGORY_LIST = Object.values(ExpressionSubCategory).map(val => ({value: val, label: val}));\n      const EXPRESSION_DETAIL_OPTIONS = {\n        [ExpressionSubCategory.HAPPY_JOYFUL]: [\n          NONE_OPTION, { value: \"smiling gently\", label: \"부드럽게 미소짓는\\n(Smiling gently)\" }, { value: \"laughing joyfully, eyes crinkled\", label: \"즐겁게 웃으며 눈가 주름진\\n(Laughing joyfully, eyes crinkled)\" }, { value: \"beaming with pure happiness\", label: \"순수한 행복감에 환하게 웃는\\n(Beaming with pure happiness)\" }, { value: \"grinning mischievously, a playful glint in the eyes\", label: \"장난스럽게 히죽이며 눈 반짝\\n(Grinning mischievously)\" }, { value: \"content and satisfied, a calm smile\", label: \"만족스럽고 흡족한, 차분한 미소\\n(Content and satisfied, calm smile)\" }, { value: \"radiant smile, full of warmth\", label: \"따뜻함 가득한 빛나는 미소\\n(Radiant smile, full of warmth)\" }, { value: \"eyes sparkling with delight\", label: \"기쁨으로 반짝이는 눈\\n(Eyes sparkling with delight)\" }, { value: \"a cheerful, open-mouthed laugh\", label: \"활기차고 입 벌리고 웃는\\n(Cheerful, open-mouthed laugh)\" }, { value: \"exuberant laughter, head thrown back\", label: \"열광적으로 웃으며 고개 젖힌\\n(Exuberant laughter, head thrown back)\" }, { value: \"a shy, sweet smile\", label: \"수줍은, 달콤한 미소\\n(A shy, sweet smile)\" }, { value: \"smirking confidently\", label: \"자신감 있게 히죽이는\\n(Smirking confidently)\" }, { value: \"a subtle, knowing smile\", label: \"미묘하고 안다는 듯한 미소\\n(Subtle, knowing smile)\" }, { value: \"overjoyed expression\", label: \"매우 기뻐하는 표정\\n(Overjoyed expression)\" }, { value: \"ecstatic with joy\", label: \"황홀경에 빠진 듯 기뻐하는\\n(Ecstatic with joy)\" }, { value: \"blissful smile\", label: \"더없이 행복한 미소\\n(Blissful smile)\" }, { value: \"chuckling softly\", label: \"부드럽게 킥킥거리는\\n(Chuckling softly)\" }, { value: \"gleeful expression\", label: \"아주 신난 표정\\n(Gleeful expression)\" }, { value: \"elated and jumping for joy\", label: \"기뻐서 펄쩍 뛰는\\n(Elated and jumping for joy)\" }, { value: \"heartfelt smile of gratitude\", label: \"진심 어린 감사의 미소\\n(Heartfelt smile of gratitude)\" }, { value: \"bright, sunny disposition\", label: \"밝고 명랑한 표정\\n(Bright, sunny disposition)\" }, { value: \"relaxed smile\", label: \"느긋하게 미소짓는\\n(Relaxed smile)\"}, { value: \"peaceful smile\", label: \"평화로운 미소\\n(Peaceful smile)\"},\n        ],\n        [ExpressionSubCategory.SAD_SORROWFUL]: [\n          NONE_OPTION, { value: \"looking melancholic, gazing into the distance\", label: \"우울하게 먼 곳 응시\\n(Looking melancholic, gazing)\" }, { value: \"shedding a single, glistening tear\", label: \"반짝이는 눈물 한 방울\\n(Shedding a single tear)\" }, { value: \"with a sorrowful, downturned mouth\", label: \"애처롭게 처진 입매\\n(Sorrowful, downturned mouth)\" }, { value: \"visibly heartbroken, eyes welling up\", label: \"상심하여 눈물 그렁그렁\\n(Visibly heartbroken, eyes welling)\" }, { value: \"a pained expression, enduring suffering\", label: \"고통을 견디는 표정\\n(A pained expression, enduring)\" }, { value: \"eyes filled with unshed tears\", label: \"눈물 가득 고인 눈\\n(Eyes filled with unshed tears)\" }, { value: \"gloomy and dejected\", label: \"침울하고 낙담한\\n(Gloomy and dejected)\" }, { value: \"quietly crying, shoulders shaking\", label: \"조용히 울며 어깨 들썩이는\\n(Quietly crying, shoulders shaking)\" }, { value: \"expression of deep grief\", label: \"깊은 슬픔의 표정\\n(Expression of deep grief)\" }, { value: \"forlorn look, feeling abandoned\", label: \"쓸쓸하고 버려진 듯한 표정\\n(Forlorn look, abandoned)\" }, { value: \"lips trembling with sadness\", label: \"슬픔으로 입술을 떠는\\n(Lips trembling with sadness)\" }, { value: \"despairing gaze, losing hope\", label: \"절망적인 시선, 희망 잃은\\n(Despairing gaze, losing hope)\" }, { value: \"somber and downcast\", label: \"침통하고 풀이 죽은\\n(Somber and downcast)\" }, { value: \"mournful expression\", label: \"애도하는 표정\\n(Mournful expression)\" }, { value: \"eyes reflecting deep sorrow\", label: \"깊은 슬픔이 비치는 눈\\n(Eyes reflecting deep sorrow)\" }, { value: \"heavy-hearted look\", label: \"무거운 마음의 표정\\n(Heavy-hearted look)\" }, { value: \"tears streaming down face\", label: \"얼굴에 눈물이 흐르는\\n(Tears streaming down face)\" }, { value: \"expression of regret\", label: \"후회하는 표정\\n(Expression of regret)\" }, { value: \"anguished cry\", label: \"고뇌에 찬 울부짖음\\n(Anguished cry)\" }, { value: \"slightly disappointed\", label: \"약간 실망한\\n(Slightly disappointed)\"}, { value: \"bored expression\", label: \"지루해하는 표정\\n(Bored expression)\"},\n        ],\n        [ExpressionSubCategory.ANGRY_FURIOUS]: [\n          NONE_OPTION, { value: \"frowning deeply, eyebrows knitted\", label: \"잔뜩 찡그린, 미간 찌푸린\\n(Frowning deeply, eyebrows knitted)\" }, { value: \"with a furious glare, eyes narrowed\", label: \"격노한 시선, 눈 가늘게 뜬\\n(Furious glare, eyes narrowed)\" }, { value: \"lips pressed tightly in anger\", label: \"분노로 입술 꽉 다문\\n(Lips pressed tightly in anger)\" }, { value: \"seething with suppressed rage, jaw clenched\", label: \"억눌린 분노, 턱 악문\\n(Seething with suppressed rage)\" }, { value: \"snarling in contempt\", label: \"경멸하며 으르렁거리는\\n(Snarling in contempt)\" }, { value: \"eyes burning with fury\", label: \"분노로 불타는 눈\\n(Eyes burning with fury)\" }, { value: \"face flushed with anger\", label: \"분노로 얼굴 붉어진\\n(Face flushed with anger)\" }, { value: \"a cold, hard stare of disapproval\", label: \"차갑고 단호한 불만의 시선\\n(Cold, hard stare of disapproval)\" }, { value: \"indignant expression, feeling wronged\", label: \"분개한 표정, 억울함\\n(Indignant expression, wronged)\" }, { value: \"about to shout in rage\", label: \"분노로 소리치기 직전\\n(About to shout in rage)\" }, { value: \"menacing look, threatening\", label: \"위협적인 표정, 협박하는 듯\\n(Menacing look, threatening)\" }, { value: \"irritated and scowling\", label: \"짜증나서 얼굴 찌푸린\\n(Irritated and scowling)\" }, { value: \"veins popping on forehead from anger\", label: \"분노로 이마에 핏대 선\\n(Veins popping from anger)\" }, { value: \"baring teeth in aggression\", label: \"공격적으로 이를 드러낸\\n(Baring teeth in aggression)\" }, { value: \"a look of utter outrage\", label: \"극도의 격분 표정\\n(Look of utter outrage)\" }, { value: \"stormy expression\", label: \"폭풍 같은 표정\\n(Stormy expression)\" }, { value: \"hostile glare\", label: \"적대적인 시선\\n(Hostile glare)\" }, { value: \"resentful look\", label: \"분개하는 표정\\n(Resentful look)\" }, { value: \"annoyed expression\", label: \"짜증난 표정\\n(Annoyed expression)\" },\n        ],\n        [ExpressionSubCategory.SURPRISED_SHOCKED]: [\n          NONE_OPTION, { value: \"eyes wide with surprise, mouth agape\", label: \"놀라서 눈 휘둥그레, 입 벌린\\n(Eyes wide with surprise, mouth agape)\" }, { value: \"jaw slightly dropped in disbelief\", label: \"믿기지 않아 입 살짝 벌린\\n(Jaw slightly dropped in disbelief)\" }, { value: \"looking utterly astonished\", label: \"완전히 경악한 표정\\n(Looking utterly astonished)\" }, { value: \"flabbergasted, hand covering mouth\", label: \"어안 벙벙, 손으로 입 가린\\n(Flabbergasted, hand covering mouth)\" }, { value: \"a sudden look of realization, eyes lighting up\", label: \"갑자기 깨달은 표정, 눈 반짝\\n(Sudden look of realization, eyes light up)\" }, { value: \"eyebrows raised high in shock\", label: \"충격으로 눈썹 치켜올린\\n(Eyebrows raised high in shock)\" }, { value: \"startled expression, jumping back slightly\", label: \"화들짝 놀란 표정, 살짝 뒷걸음질\\n(Startled expression, jumping back)\" }, { value: \"momentarily speechless from awe\", label: \"경외감에 순간 말을 잃은\\n(Momentarily speechless from awe)\" }, { value: \"wide-eyed wonder at a magical sight\", label: \"마법 같은 광경에 경이로운 눈빛\\n(Wide-eyed wonder at magical sight)\" }, { value: \"taken aback by an unexpected event\", label: \"예상치 못한 일에 깜짝 놀란\\n(Taken aback by unexpected event)\" }, { value: \"frozen in surprise\", label: \"놀라서 얼어붙은\\n(Frozen in surprise)\" }, { value: \"gasping in amazement\", label: \"경탄하며 숨을 헐떡이는\\n(Gasping in amazement)\" }, { value: \"eyes popping out (cartoonish)\", label: \"눈이 튀어나올 듯 (만화적)\\n(Eyes popping out (cartoonish))\" }, { value: \"a look of bewilderment\", label: \"어리둥절한 표정\\n(Look of bewilderment)\" }, { value: \"stunned silence\", label: \"충격으로 할 말을 잃은\\n(Stunned silence)\" }, { value: \"mildly surprised\", label: \"살짝 놀란\\n(Mildly surprised)\"},\n        ],\n        [ExpressionSubCategory.THOUGHTFUL_SERIOUS]: [\n          NONE_OPTION, { value: \"deep in thought, chin resting on hand\", label: \"생각 잠겨 손으로 턱 괸\\n(Deep in thought, chin on hand)\" }, { value: \"with a serious, focused gaze, lips pursed\", label: \"진지하고 집중된 시선, 입 오므린\\n(Serious, focused gaze, lips pursed)\" }, { value: \"pensive expression, looking downwards thoughtfully\", label: \"수심 잠겨 아래를 사려 깊게\\n(Pensive expression, looking downwards)\" }, { value: \"analytical look, scrutinizing something intently\", label: \"무언가를 꼼꼼히 살피는 분석적 표정\\n(Analytical look, scrutinizing)\" }, { value: \"contemplative and calm, reflecting deeply\", label: \"사색적이고 차분한, 깊이 성찰\\n(Contemplative and calm, reflecting)\" }, { value: \"determined expression, eyes set on a goal\", label: \"단호한 표정, 목표에 시선 고정\\n(Determined expression, eyes on goal)\" }, { value: \"concentrating intently on a complex task\", label: \"복잡한 작업에 열중하여 집중\\n(Concentrating intently on task)\" }, { value: \"a grave and solemn look, understanding the weight\", label: \"근엄하고 엄숙한 표정, 무게감 이해\\n(Grave and solemn look, understanding)\" }, { value: \"lost in thought, oblivious to surroundings\", label: \"생각에 빠져 주변을 의식 못함\\n(Lost in thought, oblivious)\" }, { value: \"resolute and unwavering, firm in conviction\", label: \"결연하고 흔들림 없는, 확고한 신념\\n(Resolute and unwavering, firm)\" }, { value: \"introspective gaze\", label: \"자기 성찰적인 시선\\n(Introspective gaze)\" }, { value: \"philosophical expression\", label: \"철학적인 표정\\n(Philosophical expression)\" }, { value: \"calculating and strategic look\", label: \"계산적이고 전략적인 표정\\n(Calculating and strategic look)\" }, { value: \"listening intently with a serious face\", label: \"진지한 얼굴로 열심히 듣는\\n(Listening intently, serious face)\" }, { value: \"pondering a difficult question\", label: \"어려운 질문을 숙고하는\\n(Pondering a difficult question)\" }, { value: \"deeply thinking about something\", label: \"무언가에 골똘히 생각하는\\n(Deeply thinking about something)\"}, { value: \"contemplating daily worries\", label: \"일상적인 고민을 하는\\n(Contemplating daily worries)\"},\n        ],\n        [ExpressionSubCategory.NEUTRAL]: [\n          NONE_OPTION, { value: \"neutral expression, looking directly ahead\", label: \"무표정, 정면 응시\\n(Neutral expression, looking ahead)\" }, { value: \"calm and composed, observing quietly\", label: \"차분하고 침착, 조용히 관찰\\n(Calm and composed, observing)\" }, { value: \"stoic, unreadable expression, betraying no emotion\", label: \"금욕적, 읽을 수 없는 표정\\n(Stoic, unreadable expression)\" }, { value: \"a blank, impassive face\", label: \"텅 빈, 아무 감정 없는 얼굴\\n(A blank, impassive face)\" }, { value: \"patiently waiting, expressionless\", label: \"끈기 있게 기다리는, 무표정\\n(Patiently waiting, expressionless)\" }, { value: \"serene and untroubled, at peace\", label: \"고요하고 평온한, 평화로운\\n(Serene and untroubled, at peace)\" }, { value: \"attentive but emotionless, focused\", label: \"주의 깊지만 감정 없는, 집중\\n(Attentive but emotionless, focused)\" }, { value: \"plain expression, simple and unadorned\", label: \"꾸밈없는 표정, 단순 소박\\n(Plain expression, simple)\" }, { value: \"dispassionate look\", label: \"냉정한 표정\\n(Dispassionate look)\" }, { value: \"objective and detached gaze\", label: \"객관적이고 초연한 시선\\n(Objective and detached gaze)\" }, { value: \"mildly curious but otherwise neutral\", label: \"약간 호기심 있지만 중립적\\n(Mildly curious but neutral)\" }, { value: \"resting face\", label: \"편안한 얼굴 (무표정)\\n(Resting face)\" }, { value: \"indifferent expression\", label: \"무심한 표정\\n(Indifferent expression)\"},\n        ],\n        [ExpressionSubCategory.FEARFUL_ANXIOUS]: [\n          NONE_OPTION, { value: \"eyes wide with fear, pupils dilated\", label: \"두려움에 눈 크게, 동공 확장\\n(Eyes wide with fear, pupils dilated)\" }, { value: \"trembling with anxiety, looking around nervously\", label: \"불안감에 떨며 초조하게 두리번\\n(Trembling with anxiety, looking around)\" }, { value: \"a look of sheer terror, face pale\", label: \"순전한 공포, 창백한 얼굴\\n(Look of sheer terror, face pale)\" }, { value: \"nervously biting lip, fidgeting\", label: \"초조하게 입술 깨물며 꼼지락\\n(Nervously biting lip, fidgeting)\" }, { value: \"sweating and pale with fright\", label: \"공포에 질려 땀, 창백\\n(Sweating and pale with fright)\" }, { value: \"worried and apprehensive, expecting something bad\", label: \"걱정하고 염려, 나쁜 일 예상\\n(Worried and apprehensive, expecting bad)\" }, { value: \"panicked expression, eyes darting\", label: \"공황 상태, 눈알 두리번\\n(Panicked expression, eyes darting)\" }, { value: \"hesitant and fearful, reluctant to proceed\", label: \"망설이며 두려워, 나아가길 주저\\n(Hesitant and fearful, reluctant)\" }, { value: \"cowering in fear\", label: \"두려움에 움츠린\\n(Cowering in fear)\" }, { value: \"a silent scream of terror\", label: \"공포의 소리 없는 비명\\n(Silent scream of terror)\" }, { value: \"chattering teeth from fear\", label: \"두려움으로 이가 딱딱거리는\\n(Chattering teeth from fear)\" }, { value: \"look of impending doom\", label: \"임박한 파멸의 표정\\n(Look of impending doom)\" }, { value: \"eyes showing deep unease\", label: \"깊은 불안감이 드러나는 눈\\n(Eyes showing deep unease)\" }, { value: \"slightly nervous\", label: \"약간 긴장한\\n(Slightly nervous)\"},\n        ],\n        [ExpressionSubCategory.PLAYFUL_MISCHIEVOUS]: [\n          NONE_OPTION, { value: \"winking slyly, a secret shared\", label: \"교활하게 윙크, 비밀 공유\\n(Winking slyly, secret shared)\" }, { value: \"sticking tongue out playfully\", label: \"장난스럽게 혀 내미는\\n(Sticking tongue out playfully)\" }, { value: \"a cheeky grin, up to no good\", label: \"까불거리는 미소, 못된 장난 궁리\\n(A cheeky grin, up to no good)\" }, { value: \"eyes dancing with amusement and mischief\", label: \"재미와 장난기로 눈 반짝\\n(Eyes dancing with amusement)\" }, { value: \"a teasing smile, inviting play\", label: \"놀리는 듯한 미소, 놀자고 유혹\\n(A teasing smile, inviting play)\" }, { value: \"poking fun with a lighthearted expression\", label: \"가벼운 표정으로 농담하는\\n(Poking fun, lighthearted)\" }, { value: \"ready for some fun, eager and impish expression\", label: \"즐길 준비, 열정적이고 장난기 어린\\n(Ready for fun, eager and impish)\" }, { value: \"uproarious laughter at a practical joke\", label: \"짓궂은 장난에 배꼽 빠지게 웃는\\n(Uproarious laughter at joke)\"}, { value: \"suppressing a giggle\", label: \"웃음을 참는\\n(Suppressing a giggle)\" }, { value: \"a playful pout\", label: \"장난스럽게 입을 삐죽 내민\\n(A playful pout)\" }, { value: \"eyes full of impish delight\", label: \"장난기 가득한 기쁨의 눈빛\\n(Eyes full of impish delight)\" }, { value: \"conspiratorial whisper and a grin\", label: \"음모를 꾸미는 듯한 속삭임과 미소\\n(Conspiratorial whisper and grin)\" }, { value: \"lightly joking expression\", label: \"가볍게 농담하는 표정\\n(Lightly joking expression)\"},\n        ],\n        [ExpressionSubCategory.LOVE_AFFECTION]: [\n          NONE_OPTION, { value: \"gazing lovingly with soft eyes\", label: \"부드러운 눈으로 사랑스럽게 응시\\n(Gazing lovingly, soft eyes)\" }, { value: \"a gentle, affectionate smile\", label: \"온화하고 애정 어린 미소\\n(Gentle, affectionate smile)\" }, { value: \"eyes full of adoration\", label: \"흠모로 가득 찬 눈\\n(Eyes full of adoration)\" }, { value: \"blowing a kiss\", label: \"키스를 날리는\\n(Blowing a kiss)\" }, { value: \"a warm, heartfelt expression of love\", label: \"따뜻하고 진심 어린 사랑의 표현\\n(Warm, heartfelt expression of love)\" }, { value: \"smiling tenderly\", label: \"부드럽게 미소짓는\\n(Smiling tenderly)\" }, { value: \"yearning look\", label: \"갈망하는 표정\\n(Yearning look)\" }, { value: \"blushing shyly with affection\", label: \"애정으로 수줍게 얼굴 붉히는\\n(Blushing shyly with affection)\" }, { value: \"coy smile\", label: \"수줍은 미소\\n(Coy smile)\" }, { value: \"eyes shining with romantic interest\", label: \"낭만적 관심으로 빛나는 눈\\n(Eyes shining with romantic interest)\" }, { value: \"caring look\", label: \"다정한 표정\\n(Caring look)\"},\n        ],\n        [ExpressionSubCategory.CONFIDENT_PROUD]: [\n          NONE_OPTION, { value: \"standing tall with a proud smile\", label: \"자랑스러운 미소로 당당히 선\\n(Standing tall, proud smile)\" }, { value: \"a confident smirk, self-assured\", label: \"자신감 넘치는 히죽임, 확신에 찬\\n(Confident smirk, self-assured)\" }, { value: \"eyes reflecting strong self-belief\", label: \"강한 자신감이 비치는 눈\\n(Eyes reflecting strong self-belief)\" }, { value: \"head held high with dignity\", label: \"위엄 있게 고개를 든\\n(Head held high with dignity)\" }, { value: \"a look of quiet accomplishment\", label: \"조용한 성취감의 표정\\n(Look of quiet accomplishment)\" }, { value: \"assertive gaze\", label: \"단호한 시선\\n(Assertive gaze)\" }, { value: \"smug expression\", label: \"우쭐대는 표정\\n(Smug expression)\" }, { value: \"radiating self-confidence\", label: \"자신감을 뿜어내는\\n(Radiating self-confidence)\" }, { value: \"a determined and bold look\", label: \"단호하고 대담한 표정\\n(Determined and bold look)\" }, { value: \"looking triumphant\", label: \"승리에 찬 표정\\n(Looking triumphant)\" }, { value: \"self-satisfied smile\", label: \"자기만족의 미소\\n(Self-satisfied smile)\"},\n        ],\n        [ExpressionSubCategory.DAILY_LIFE_EXPRESSIONS]: [\n          NONE_OPTION, { value: \"ordinary daily expression\", label: \"평범한 일상의 표정\\n(Ordinary daily expression)\"}, { value: \"spacing out while commuting\", label: \"출퇴근길 멍한 표정\\n(Spacing out while commuting)\"}, { value: \"slightly tired after work\", label: \"퇴근 후 약간 지친 표정\\n(Slightly tired after work)\"}, { value: \"focused while reading a book\", label: \"책 읽으며 집중한 표정\\n(Focused while reading a book)\"}, { value: \"relaxed while watching TV\", label: \"TV 보며 편안한 표정\\n(Relaxed while watching TV)\"}, { value: \"yawning in the morning\", label: \"아침에 하품하는 표정\\n(Yawning in the morning)\"}, { value: \"listening to music with enjoyment\", label: \"음악 감상하며 즐거운 표정\\n(Enjoying music)\"}, { value: \"contemplating what to eat\", label: \"무엇을 먹을지 고민하는 표정\\n(Contemplating what to eat)\"}, { value: \"browsing smartphone with interest\", label: \"스마트폰 흥미롭게 보는 표정\\n(Browsing smartphone with interest)\"}, { value: \"waiting for coffee, looking expectant\", label: \"커피 기다리며 기대하는 표정\\n(Waiting for coffee, expectant)\"},\n        ],\n      };\n      const ACTION_SUB_CATEGORY_LIST = Object.values(ActionSubCategory).map(val => ({value: val, label: val}));\n      const ACTION_DETAIL_OPTIONS = {\n        [ActionSubCategory.STATIC_POSES]: [\n          NONE_OPTION, { value: \"standing confidently, hands on hips\", label: \"자신감 있게 서서 허리 손\\n(Standing confidently, hands on hips)\" }, { value: \"sitting gracefully on a throne, regal posture\", label: \"왕좌에 우아하게, 위엄 있는 자세\\n(Sitting gracefully on throne, regal)\" }, { value: \"leaning casually against a weathered brick wall\", label: \"낡은 벽돌 벽에 무심하게 기댄\\n(Leaning casually on brick wall)\" }, { value: \"arms crossed, looking contemplative and serious\", label: \"팔짱 끼고 생각 잠긴 듯 진지\\n(Arms crossed, contemplative serious)\" }, { value: \"kneeling respectfully, head bowed slightly\", label: \"공손하게 무릎 꿇고 고개 살짝\\n(Kneeling respectfully, head bowed)\" }, { value: \"reclining elegantly on a chaise lounge, relaxed\", label: \"긴 의자에 우아하게, 편안한\\n(Reclining elegantly on chaise lounge)\" }, { value: \"posing dramatically with one hand outstretched, palm up\", label: \"한 손 뻗고 극적 포즈, 손바닥 위로\\n(Posing dramatically, hand outstretched)\" }, { value: \"standing with feet shoulder-width apart, alert and ready\", label: \"발 어깨 너비, 경계하며 준비된\\n(Standing alert, feet shoulder-width)\" }, { value: \"meditating in a lotus position, serene expression\", label: \"연꽃 자세로 명상, 고요한 표정\\n(Meditating in lotus position, serene)\" }, { value: \"profile view, gazing into the horizon with hope\", label: \"옆모습, 희망 안고 수평선 응시\\n(Profile view, gazing into horizon)\" }, { value: \"silhouetted against a bright sunset or moon\", label: \"밝은 석양/달 등지고 실루엣\\n(Silhouetted against sunset/moon)\" }, { value: \"heroic stance, chest out, looking upwards\", label: \"영웅적 자세, 가슴 펴고 위를 봄\\n(Heroic stance, chest out, upwards)\" }, { value: \"lounging casually on a sofa\", label: \"소파에 편안하게 기대앉은\\n(Lounging casually on sofa)\" }, { value: \"power pose, feet planted firmly, looking determined\", label: \"파워 포즈, 발 굳건히, 단호한\\n(Power pose, feet firm, determined)\" }, { value: \"contrapposto pose, weight shifted to one leg\", label: \"콘트라포스토 자세, 한쪽 다리에 체중\\n(Contrapposto pose, weight shifted)\" }, { value: \"crouching low to the ground, observant\", label: \"땅에 낮게 웅크린, 관찰하는\\n(Crouching low, observant)\" }, { value: \"hands clasped behind back, thoughtful\", label: \"손 등 뒤로 깍지, 생각에 잠긴\\n(Hands clasped behind back)\" }, { value: \"one hand resting on chin, pondering\", label: \"한 손 턱에, 숙고하는\\n(One hand on chin, pondering)\" }, { value: \"standing still looking out window\", label: \"가만히 서서 창밖을 보는\\n(Standing still looking out window)\"}, { value: \"sitting at a table\", label: \"테이블에 앉아있는\\n(Sitting at a table)\"}, { value: \"lying in bed looking at ceiling\", label: \"침대에 누워 천장 보는\\n(Lying in bed looking at ceiling)\"},\n        ],\n        [ActionSubCategory.DYNAMIC_MOVEMENT]: [\n          NONE_OPTION, { value: \"walking purposefully through a crowded street, focused\", label: \"붐비는 거리, 목표 향해 집중\\n(Walking purposefully, crowded street)\" }, { value: \"running swiftly through a sun-dappled forest, agile\", label: \"햇살 비치는 숲, 민첩하게 달리는\\n(Running swiftly, sun-dappled forest)\" }, { value: \"jumping gracefully in mid-air, like a ballet dancer\", label: \"발레리나처럼 공중 우아하게 점프\\n(Jumping gracefully, ballet dancer)\" }, { value: \"dancing energetically to a vibrant rhythm, joyful\", label: \"활기찬 리듬에 힘차게 춤, 즐거운\\n(Dancing energetically, vibrant rhythm)\" }, { value: \"sprinting at full speed, determined to win\", label: \"전속력 질주, 이기려는 의지\\n(Sprinting full speed, determined)\" }, { value: \"leaping over an obstacle with ease\", label: \"장애물을 가뿐히 뛰어넘는\\n(Leaping over obstacle with ease)\" }, { value: \"twirling in a flowing gown, creating motion blur\", label: \"흐르는 드레스 입고 회전, 모션 블러\\n(Twirling in flowing gown, motion blur)\" }, { value: \"swimming powerfully in clear turquoise water\", label: \"맑은 청록색 물, 힘차게 수영\\n(Swimming powerfully, clear water)\" }, { value: \"falling through the air, arms outstretched\", label: \"공중에서 떨어지는, 팔 벌린\\n(Falling through air, arms outstretched)\" }, { value: \"riding a galloping horse across a field\", label: \"질주하는 말 타고 들판 가로지르는\\n(Riding galloping horse across field)\" }, { value: \"skateboarding down a ramp, performing a trick\", label: \"경사로 스케이트보드, 묘기\\n(Skateboarding down ramp, trick)\" }, { value: \"flying through the sky with wings or powers\", label: \"날개/능력으로 하늘 나는\\n(Flying through sky, wings/powers)\" }, { value: \"sliding down a snowy hill on a sled\", label: \"눈 덮인 언덕 썰매 타고 내려오는\\n(Sliding down snowy hill on sled)\" }, { value: \"surfing a large ocean wave\", label: \"큰 파도를 서핑하는\\n(Surfing a large ocean wave)\" }, { value: \"climbing a steep rock face\", label: \"가파른 암벽 등반하는\\n(Climbing steep rock face)\" }, { value: \"somersaulting in mid-air\", label: \"공중제비 도는\\n(Somersaulting in mid-air)\" }, { value: \"spinning rapidly, creating a blur\", label: \"빠르게 회전하며 잔상 만드는\\n(Spinning rapidly, creating blur)\" }, { value: \"walking quickly\", label: \"빠르게 걷는\\n(Walking quickly)\"}, { value: \"going up/down stairs\", label: \"계단을 오르내리는\\n(Going up/down stairs)\"}, { value: \"light jogging\", label: \"가볍게 조깅하는\\n(Light jogging)\"},\n        ],\n        [ActionSubCategory.INTERACTION_OBJECT]: [\n          NONE_OPTION, { value: \"reading an ancient, leather-bound book by candlelight\", label: \"촛불 아래 고대 가죽 책 읽는\\n(Reading ancient book by candlelight)\" }, { value: \"holding a mysterious, glowing orb that pulses with light\", label: \"빛나는 신비로운 구체 들고 있는\\n(Holding mysterious glowing orb)\" }, { value: \"writing intently with a feathered quill on parchment\", label: \"양피지에 깃펜으로 열심히 글 쓰는\\n(Writing with quill on parchment)\" }, { value: \"playing a haunting melody on a violin in a dark room\", label: \"어두운 방, 바이올린 연주\\n(Playing haunting melody on violin)\" }, { value: \"examining a delicate flower with a magnifying glass\", label: \"돋보기로 섬세한 꽃 살펴보는\\n(Examining flower with magnifying glass)\" }, { value: \"drinking from a rustic wooden cup, thoughtful\", label: \"소박한 나무 잔, 생각에 잠겨\\n(Drinking from rustic wooden cup)\" }, { value: \"painting on a canvas with focused expression, art studio\", label: \"캔버스에 그림, 집중된 표정, 화실\\n(Painting on canvas, focused, studio)\" }, { value: \"sculpting clay into a lifelike figure\", label: \"점토로 실물 같은 형상 빚는\\n(Sculpting clay into lifelike figure)\" }, { value: \"using a futuristic holographic interface with glowing hands\", label: \"미래형 홀로그램 인터페이스 사용\\n(Using futuristic holographic interface)\" }, { value: \"sharpening a gleaming sword with a whetstone\", label: \"빛나는 검을 숫돌로 가는\\n(Sharpening gleaming sword)\" }, { value: \"unlocking an ornate, ancient chest with a key\", label: \"화려한 고대 상자 열쇠로 여는\\n(Unlocking ornate ancient chest)\" }, { value: \"sipping tea from a delicate porcelain cup\", label: \"섬세한 도자기 컵으로 차 마시는\\n(Sipping tea from porcelain cup)\" }, { value: \"typing furiously on a glowing keyboard\", label: \"빛나는 키보드 맹렬히 타이핑\\n(Typing furiously on glowing keyboard)\" }, { value: \"adjusting spectacles while reading a scroll\", label: \"두루마리 읽으며 안경 고쳐 쓰는\\n(Adjusting spectacles, reading scroll)\" }, { value: \"holding a lantern aloft in a dark cave\", label: \"어두운 동굴 속 랜턴 높이 든\\n(Holding lantern in dark cave)\" }, { value: \"stirring a bubbling cauldron with a wooden spoon\", label: \"나무 숟가락으로 끓는 솥 젓는\\n(Stirring bubbling cauldron)\" }, { value: \"offering a glowing apple\", label: \"빛나는 사과를 건네는\\n(Offering a glowing apple)\" }, { value: \"using a smartphone\", label: \"스마트폰을 사용하는\\n(Using a smartphone)\"}, { value: \"working on a laptop\", label: \"노트북으로 작업하는\\n(Working on a laptop)\"}, { value: \"pressing a TV remote\", label: \"TV 리모컨을 누르는\\n(Pressing a TV remote)\"}, { value: \"carrying a bag\", label: \"가방을 드는\\n(Carrying a bag)\"}, { value: \"opening an umbrella\", label: \"우산을 펴는\\n(Opening an umbrella)\"}, { value: \"holding a coffee cup\", label: \"커피 컵을 들고 있는\\n(Holding a coffee cup)\"},\n        ],\n        [ActionSubCategory.MAGICAL_FANTASY]: [\n          NONE_OPTION, { value: \"casting a powerful spell, hands glowing with arcane energy\", label: \"강력한 마법 시전, 손에 비전 에너지\\n(Casting powerful spell, arcane energy)\" }, { value: \"wielding a legendary sword that hums with ancient power\", label: \"전설의 검 휘두르며 고대 힘 진동\\n(Wielding legendary sword, ancient power)\" }, { value: \"summoning a majestic mythical creature (e.g., dragon, phoenix, griffin)\", label: \"웅장한 신화 생물 소환 (용, 불사조)\\n(Summoning majestic mythical creature)\" }, { value: \"levitating slightly off the ground, surrounded by a faint shimmering aura\", label: \"땅에서 살짝 떠오르며 희미한 오라\\n(Levitating slightly, shimmering aura)\" }, { value: \"conjuring swirling flames in the palm of a hand\", label: \"손바닥에 소용돌이치는 불꽃 생성\\n(Conjuring swirling flames in palm)\" }, { value: \"opening a shimmering portal to another dimension or world\", label: \"다른 차원/세계로 빛나는 포털 여는\\n(Opening shimmering portal)\" }, { value: \"communicating telepathically with an ancient, wise animal\", label: \"고대 현명한 동물과 텔레파시 소통\\n(Telepathically communicating with animal)\" }, { value: \"healing a wounded creature with glowing, gentle hands\", label: \"빛나는 손으로 상처 입은 생물 치유\\n(Healing wounded creature, glowing hands)\" }, { value: \"transforming into a powerful animal or mythical beast\", label: \"강력한 동물/신화 야수로 변신\\n(Transforming into animal/beast)\" }, { value: \"reading prophecies from ancient, glowing runes or crystals\", label: \"고대 빛나는 룬/수정 예언 읽는\\n(Reading prophecies from runes/crystals)\" }, { value: \"weaving illusions with intricate hand gestures\", label: \"복잡한 손짓으로 환상 엮는\\n(Weaving illusions with hand gestures)\" }, { value: \"channeling lightning from a stormy sky\", label: \"폭풍우 치는 하늘에서 번개 유도\\n(Channeling lightning from stormy sky)\" }, { value: \"controlling plants and nature with a gesture\", label: \"몸짓으로 식물과 자연 조종\\n(Controlling plants with gesture)\" }, { value: \"wearing an amulet that deflects magical attacks\", label: \"마법 공격 막는 부적 착용\\n(Wearing amulet deflecting magic)\" }, { value: \"drawing power from the moon or stars\", label: \"달/별에서 힘을 끌어오는\\n(Drawing power from moon/stars)\" },\n        ],\n        [ActionSubCategory.DAILY_LIFE]: [\n          NONE_OPTION, { value: \"sipping tea thoughtfully by a rain-streaked window\", label: \"빗줄기 창가, 생각 잠겨 차 마시는\\n(Sipping tea by rain-streaked window)\" }, { value: \"looking out a window at a bustling cityscape, contemplative\", label: \"창밖 붐비는 도시, 사색에 잠긴\\n(Looking out window at cityscape)\" }, { value: \"engaged in an animated conversation with a friend at a cafe\", label: \"카페 친구와 활기찬 대화\\n(Animated conversation at cafe)\" }, { value: \"working diligently on a laptop in a cozy, book-filled study\", label: \"책 가득한 서재, 노트북 작업\\n(Working on laptop in cozy study)\" }, { value: \"cooking a delicious meal in a sunlit, rustic kitchen\", label: \"햇볕 드는 주방, 맛있는 요리\\n(Cooking meal in sunlit kitchen)\" }, { value: \"strolling leisurely through a park on a sunny autumn day\", label: \"화창한 가을날 공원 한가로이 산책\\n(Strolling through park, autumn day)\" }, { value: \"laughing heartily with friends around a dinner table\", label: \"식탁 친구들과 진심으로 웃는\\n(Laughing with friends at dinner)\" }, { value: \"listening to music with headphones, eyes closed, lost in melody\", label: \"헤드폰 음악 감상, 눈 감고 멜로디에\\n(Listening to music, eyes closed)\" }, { value: \"tending to plants in a small, vibrant window garden\", label: \"작고 활기찬 창가 정원 식물 돌보는\\n(Tending plants in window garden)\" }, { value: \"enjoying a quiet moment of reflection on a park bench\", label: \"공원 벤치, 조용히 사색 즐기는\\n(Quiet reflection on park bench)\" }, { value: \"reading a newspaper on a subway train\", label: \"지하철에서 신문 읽는\\n(Reading newspaper on subway)\" }, { value: \"walking a dog in the park\", label: \"공원에서 개 산책시키는\\n(Walking dog in park)\" }, { value: \"shopping for groceries at a local market\", label: \"지역 시장에서 식료품 쇼핑\\n(Shopping for groceries at market)\" }, { value: \"playing a board game with family\", label: \"가족과 보드게임 하는\\n(Playing board game with family)\" }, { value: \"riding a bicycle down a tree-lined street\", label: \"가로수길 자전거 타는\\n(Riding bicycle down street)\" }, { value: \"attending an online meeting\", label: \"온라인 회의 참여하는\\n(Attending an online meeting)\"}, { value: \"receiving food delivery\", label: \"음식 배달받는\\n(Receiving food delivery)\"}, { value: \"opening a delivery box\", label: \"택배 상자 여는\\n(Opening a delivery box)\"}, { value: \"using public transportation\", label: \"대중교통 이용하는\\n(Using public transportation)\"}, { value: \"using an ATM\", label: \"은행 ATM 사용하는\\n(Using an ATM)\"}, { value: \"texting on a phone\", label: \"휴대폰으로 문자 보내는\\n(Texting on a phone)\"}, { value: \"taking a selfie\", label: \"셀카 찍는\\n(Taking a selfie)\"}, { value: \"browsing social media\", label: \"SNS 탐색하는\\n(Browsing social media)\"},\n        ],\n        [ActionSubCategory.HOUSEHOLD_CHORES]: [\n          NONE_OPTION, { value: \"washing dishes at the kitchen sink\", label: \"부엌 싱크대에서 설거지하는\\n(Washing dishes at kitchen sink)\"}, { value: \"vacuuming the living room carpet\", label: \"거실 카펫 진공청소기로 청소하는\\n(Vacuuming living room carpet)\"}, { value: \"doing laundry, loading washing machine\", label: \"세탁하며 세탁기에 빨랫감 넣는\\n(Doing laundry, loading machine)\"}, { value: \"hanging clothes out to dry\", label: \"빨래 너는\\n(Hanging clothes out to dry)\"}, { value: \"ironing clothes on an ironing board\", label: \"다리미판 위에서 옷 다리는\\n(Ironing clothes on board)\"}, { value: \"cooking on a stove\", label: \"가스레인지/인덕션 위에서 요리하는\\n(Cooking on a stove)\"}, { value: \"setting the dinner table\", label: \"저녁 식탁 차리는\\n(Setting the dinner table)\"}, { value: \"taking out the trash/recycling\", label: \"쓰레기/재활용품 버리러 가는\\n(Taking out trash/recycling)\"}, { value: \"watering houseplants\", label: \"집 안 화분에 물 주는\\n(Watering houseplants)\"}, { value: \"sweeping the floor with a broom\", label: \"빗자루로 바닥 쓰는\\n(Sweeping floor with broom)\"}, { value: \"making the bed\", label: \"침대 정리하는\\n(Making the bed)\"}, { value: \"dusting furniture\", label: \"가구 먼지 터는\\n(Dusting furniture)\"},\n        ],\n        [ActionSubCategory.COMBAT_POSES]: [\n          NONE_OPTION, { value: \"in a dynamic sword-fighting stance, ready to strike or parry\", label: \"역동적 검술 자세, 공격/방어 준비\\n(Dynamic sword-fighting stance)\" }, { value: \"aiming a bow and arrow with deadly precision, focused\", label: \"활과 화살 정밀 조준, 집중\\n(Aiming bow and arrow, precision)\" }, { value: \"dodging an incoming attack with agility and grace\", label: \"공격 민첩하고 우아하게 피하는\\n(Dodging attack with agility)\" }, { value: \"parrying a powerful blow with a sturdy shield\", label: \"강력한 공격 견고한 방패로 막는\\n(Parrying blow with shield)\" }, { value: \"in a martial arts kiai pose, channeling energy\", label: \"무술 기합 자세, 에너지 집중\\n(Martial arts kiai pose, channeling)\" }, { value: \"sneaking stealthily through shadows, knife drawn\", label: \"그림자 속 은밀히, 칼 뽑아 든\\n(Sneaking through shadows, knife drawn)\" }, { value: \"holding a glowing magical staff, prepared for magical battle\", label: \"빛나는 마법 지팡이, 마법 전투 준비\\n(Holding magical staff, magic battle)\" }, { value: \"throwing a powerful punch with great force and speed\", label: \"강력한 펀치, 엄청난 힘과 속도\\n(Throwing powerful punch, force/speed)\" }, { value: \"victorious pose over a defeated foe (implied), looking tired but proud\", label: \"승리 포즈 (암시적), 지쳤지만 자랑스러운\\n(Victorious pose, tired but proud)\" }, { value: \"defensive stance, protecting an innocent person or object\", label: \"방어 자세, 무고한 이/물건 보호\\n(Defensive stance, protecting innocent)\" }, { value: \"dual-wielding daggers in a ready stance\", label: \"쌍단검 들고 준비 자세\\n(Dual-wielding daggers, ready stance)\" }, { value: \"firing a futuristic laser pistol\", label: \"미래형 레이저 권총 발사\\n(Firing futuristic laser pistol)\" }, { value: \"mid-air kick, martial arts style\", label: \"공중 발차기, 무술 스타일\\n(Mid-air kick, martial arts)\" }, { value: \"holding a spear, braced for impact\", label: \"창 들고 충격 대비 자세\\n(Holding spear, braced for impact)\" }, { value: \"drawing a sword from its scabbard\", label: \"칼집에서 검 뽑는 중\\n(Drawing sword from scabbard)\" },\n        ],\n        [ActionSubCategory.ARTISTIC_CREATIVE]: [\n          NONE_OPTION, { value: \"playing a grand piano with passion, music notes floating\", label: \"그랜드 피아노 열정적 연주, 음표\\n(Playing grand piano, passion, notes)\" }, { value: \"singing into a vintage microphone on a stage, spotlight\", label: \"무대 빈티지 마이크 노래, 스포트라이트\\n(Singing into vintage microphone, stage)\" }, { value: \"conducting an orchestra with dramatic, sweeping gestures\", label: \"극적 몸짓으로 오케스트라 지휘\\n(Conducting orchestra, dramatic gestures)\" }, { value: \"writing poetry in a leather-bound notebook with a fountain pen\", label: \"가죽 노트, 만년필로 시 쓰는\\n(Writing poetry, leather notebook)\" }, { value: \"taking a photograph with an old, classic film camera\", label: \"오래된 클래식 필름 카메라 사진 촬영\\n(Photographing with classic film camera)\" }, { value: \"designing on a glowing digital tablet with a stylus\", label: \"빛나는 디지털 태블릿, 스타일러스 디자인\\n(Designing on digital tablet, stylus)\" }, { value: \"arranging colorful flowers into a beautiful, intricate bouquet\", label: \"형형색색 꽃, 아름다운 꽃다발 제작\\n(Arranging flowers into bouquet)\" }, { value: \"lost in the music while playing an acoustic guitar by a campfire\", label: \"캠프파이어 옆, 기타 연주 몰입\\n(Playing guitar by campfire, lost in music)\" }, { value: \"sculpting a masterpiece from a block of marble\", label: \"대리석으로 걸작 조각하는\\n(Sculpting marble masterpiece)\" }, { value: \"directing a film scene with a megaphone\", label: \"확성기 들고 영화 장면 감독하는\\n(Directing film scene with megaphone)\" }, { value: \"DJing at a vibrant nightclub, hands on turntables\", label: \"활기찬 클럽 DJ, 턴테이블에 손\\n(DJing at nightclub, turntables)\" }, { value: \"street artist spray-painting a mural on a brick wall\", label: \"벽돌 벽에 그래피티, 거리 예술가\\n(Street artist spray-painting mural)\" }, { value: \"composing music at a piano, surrounded by sheet music\", label: \"피아노 작곡, 악보에 둘러싸여\\n(Composing music at piano, sheet music)\" }, { value: \"sketching in a notebook at a cafe\", label: \"카페에서 노트에 스케치하는\\n(Sketching in notebook at cafe)\"},\n        ],\n        [ActionSubCategory.SPORTS_ATHLETICS]: [\n          NONE_OPTION, { value: \"kicking a soccer ball towards a goal\", label: \"축구공 골대 향해 차는\\n(Kicking soccer ball to goal)\" }, { value: \"shooting a basketball at a hoop\", label: \"농구공 림 향해 쏘는\\n(Shooting basketball at hoop)\" }, { value: \"swinging a tennis racket to hit a ball\", label: \"테니스 라켓 휘둘러 공 치는\\n(Swinging tennis racket)\" }, { value: \"running a marathon, determined expression\", label: \"마라톤 달리는, 단호한 표정\\n(Running marathon, determined)\" }, { value: \"lifting heavy weights at a gym\", label: \"헬스장에서 무거운 역기 드는\\n(Lifting heavy weights at gym)\" }, { value: \"performing a gymnastic routine on a balance beam\", label: \"평균대에서 체조 연기\\n(Gymnastic routine on balance beam)\" }, { value: \"ice skating gracefully on a frozen pond\", label: \"얼어붙은 연못, 우아하게 스케이팅\\n(Ice skating gracefully on pond)\" }, { value: \"diving into a swimming pool\", label: \"수영장으로 다이빙하는\\n(Diving into swimming pool)\" }, { value: \"hitting a baseball with a bat\", label: \"야구 방망이로 공 치는\\n(Hitting baseball with bat)\" }, { value: \"skiing down a snowy mountain slope\", label: \"눈 덮인 산비탈 스키 타는\\n(Skiing down mountain slope)\" }, { value: \"doing yoga poses at home\", label: \"집에서 요가 자세 하는\\n(Doing yoga poses at home)\"},\n        ],\n        [ActionSubCategory.COMMUNICATION_GESTURES]: [\n          NONE_OPTION, { value: \"waving hello or goodbye with a smile\", label: \"미소 지으며 안녕 손 흔드는\\n(Waving hello/goodbye with smile)\" }, { value: \"pointing towards something interesting\", label: \"흥미로운 것 가리키는\\n(Pointing towards something)\" }, { value: \"giving a thumbs up gesture of approval\", label: \"승인하며 엄지척 하는\\n(Giving thumbs up gesture)\" }, { value: \"shrugging shoulders, indicating uncertainty\", label: \"어깨 으쓱, 불확실함 표시\\n(Shrugging shoulders, uncertainty)\" }, { value: \"facepalming in exasperation\", label: \"절망감에 얼굴 감싸는 (페이스팜)\\n(Facepalming in exasperation)\" }, { value: \"holding a hand to ear, listening intently\", label: \"귀에 손 대고 열심히 듣는\\n(Hand to ear, listening intently)\" }, { value: \"making a 'shhh' gesture with finger to lips\", label: \"입술에 손가락, '쉿' 제스처\\n(Making 'shhh' gesture)\" }, { value: \"clapping hands in applause\", label: \"박수 치는\\n(Clapping hands in applause)\" }, { value: \"offering a handshake\", label: \"악수 청하는\\n(Offering a handshake)\" }, { value: \"beckoning someone closer with a hand gesture\", label: \"손짓으로 가까이 오라고 부르는\\n(Beckoning someone closer)\" }, { value: \"talking on the phone\", label: \"전화 통화하는\\n(Talking on the phone)\"}, { value: \"video calling on a laptop\", label: \"노트북으로 화상 통화하는\\n(Video calling on laptop)\"},\n        ],\n      };\n      const CLOTHING_SUB_CATEGORY_LIST = Object.values(ClothingSubCategory).map(val => ({value: val, label: val}));\n      const CLOTHING_DETAIL_OPTIONS = {\n        [ClothingSubCategory.MODERN_CASUAL]: [\n          NONE_OPTION, { value: \"wearing a graphic t-shirt, ripped jeans, and sneakers\", label: \"그래픽 티, 찢청, 스니커즈\\n(Graphic t-shirt, ripped jeans, sneakers)\" }, { value: \"in a comfortable oversized hoodie, leggings, and boots\", label: \"오버사이즈 후드티, 레깅스, 부츠\\n(Oversized hoodie, leggings, boots)\" }, { value: \"sporting a stylish leather jacket over a simple blouse and dark pants\", label: \"가죽 재킷, 블라우스, 어두운 바지\\n(Leather jacket, blouse, dark pants)\" }, { value: \"dressed in trendy athleisure wear, like a matching sweatsuit\", label: \"트렌디 애슬레저룩 (세트 운동복)\\n(Trendy athleisure, sweatsuit)\" }, { value: \"a flowy bohemian maxi dress with sandals and layered necklaces\", label: \"보헤미안 맥시 드레스, 샌들, 목걸이\\n(Bohemian maxi dress, sandals)\" }, { value: \"a simple sundress and a wide-brimmed straw hat\", label: \"심플 선드레스, 넓은 밀짚모자\\n(Simple sundress, straw hat)\" }, { value: \"denim jacket, white tee, and chinos with rolled cuffs\", label: \"데님 재킷, 흰 티, 치노 팬츠 (롤업)\\n(Denim jacket, white tee, chinos)\" }, { value: \"a knitted chunky sweater and corduroy pants, autumn style\", label: \"청키 니트 스웨터, 코듀로이 팬츠\\n(Knitted sweater, corduroy pants)\" }, { value: \"a band t-shirt, cargo shorts, and combat boots\", label: \"밴드 티셔츠, 카고 반바지, 전투화\\n(Band t-shirt, cargo shorts, boots)\" }, { value: \"urban streetwear with a baseball cap, bomber jacket, and joggers\", label: \"어반 스트릿웨어, 야구모자, 봄버, 조거\\n(Urban streetwear, cap, bomber)\" }, { value: \"plaid flannel shirt open over a tank top, with skinny jeans\", label: \"체크 플란넬 셔츠, 탱크탑, 스키니진\\n(Plaid flannel, tank top, skinny jeans)\" }, { value: \"polo shirt and khaki shorts, preppy look\", label: \"폴로 셔츠, 카키 반바지, 프레피룩\\n(Polo shirt, khaki shorts, preppy)\" }, { value: \"jumpsuit or romper with fashionable belt\", label: \"점프수트/롬퍼, 패션 벨트\\n(Jumpsuit/romper, fashion belt)\" }, { value: \"tie-dye t-shirt and denim cutoffs\", label: \"타이다이 티셔츠, 데님 컷오프\\n(Tie-dye t-shirt, denim cutoffs)\" }, { value: \"linen shirt and shorts, beachwear\", label: \"리넨 셔츠와 반바지, 비치웨어\\n(Linen shirt and shorts, beachwear)\" }, { value: \"cotton t-shirt and jeans\", label: \"면 티셔츠와 청바지\\n(Cotton t-shirt and jeans)\"}, { value: \"sweater and cotton pants\", label: \"스웨터와 면바지\\n(Sweater and cotton pants)\"}, { value: \"tracksuit set\", label: \"트레이닝복 세트\\n(Tracksuit set)\"}, { value: \"cardigan and slacks\", label: \"가디건과 슬랙스\\n(Cardigan and slacks)\"},\n        ],\n        [ClothingSubCategory.FORMAL_ELEGANT]: [\n          NONE_OPTION, { value: \"in a sharp, tailored business suit (charcoal grey, navy) with a silk tie\", label: \"잘 재단된 정장(회색/네이비), 실크 넥타이\\n(Tailored suit, silk tie)\" }, { value: \"wearing an elegant floor-length evening gown (e.g., velvet, satin) with sparkling jewelry\", label: \"우아한 이브닝 드레스(벨벳/새틴), 보석\\n(Elegant evening gown, jewelry)\" }, { value: \"in a classic black tuxedo with a bow tie and cummerbund\", label: \"클래식 블랙 턱시도, 나비넥타이\\n(Classic black tuxedo, bow tie)\" }, { value: \"adorned in a sophisticated cocktail dress (e.g., little black dress) and high heels\", label: \"세련된 칵테일 드레스, 하이힐\\n(Sophisticated cocktail dress, heels)\" }, { value: \"a stylish pantsuit (e.g., bold color, wide leg) with statement accessories\", label: \"스타일리시 팬츠수트, 포인트 액세서리\\n(Stylish pantsuit, statement accessories)\" }, { value: \"a flowing silk blouse and a high-waisted pencil skirt\", label: \"실크 블라우스, 하이웨이스트 펜슬 스커트\\n(Silk blouse, pencil skirt)\" }, { value: \"a velvet smoking jacket over formal trousers with loafers\", label: \"벨벳 스모킹 재킷, 정장 바지, 로퍼\\n(Velvet smoking jacket, trousers)\" }, { value: \"a glamorous ballgown with intricate beading and a full skirt\", label: \"화려한 무도회 드레스, 비즈 장식\\n(Glamorous ballgown, beading)\" }, { value: \"wearing a sophisticated three-piece suit with a pocket watch\", label: \"세련된 쓰리피스 수트, 회중시계\\n(Sophisticated three-piece suit)\" }, { value: \"a chic sheath dress with a string of pearls\", label: \"시크한 시스 드레스, 진주 목걸이\\n(Chic sheath dress, pearls)\" }, { value: \"morning suit for formal daytime events\", label: \"모닝 수트 (주간 정장)\\n(Morning suit for daytime events)\" }, { value: \"opera gloves with an off-the-shoulder gown\", label: \"오페라 글러브, 오프숄더 가운\\n(Opera gloves, off-shoulder gown)\" }, { value: \"tailcoat and white tie for ultra-formal occasions\", label: \"연미복과 흰색 타이 (최고 정장)\\n(Tailcoat and white tie)\" }, { value: \"business casual (blazer and chinos)\", label: \"비즈니스 캐주얼 (블레이저와 치노)\\n(Business casual)\"},\n        ],\n        [ClothingSubCategory.HISTORICAL_TRADITIONAL]: [\n          NONE_OPTION, { value: \"wearing traditional Korean Hanbok with intricate gold embroidery and norigae\", label: \"전통 한복, 금박 자수, 노리개\\n(Korean Hanbok, gold embroidery, norigae)\" }, { value: \"in shining medieval knight armor with a heraldic sigil on the breastplate\", label: \"중세 기사 갑옷, 가슴판 문장\\n(Medieval knight armor, heraldic sigil)\" }, { value: \"dressed in elaborate Victorian era attire with a corset, bustle, and lace details\", label: \"빅토리아 시대 의상, 코르셋, 버슬, 레이스\\n(Victorian attire, corset, bustle, lace)\" }, { value: \"wearing a flowing Roman toga and intricate sandals, laurel wreath\", label: \"로마 토가, 샌들, 월계관\\n(Roman toga, sandals, laurel wreath)\" }, { value: \"in a Japanese kimono with a decorative obi sash and geta sandals\", label: \"일본 기모노, 장식 오비, 게다\\n(Japanese kimono, obi, geta)\" }, { value: \"dressed as an Egyptian pharaoh with a nemes headdress, kohl eyeliner, and gold jewelry\", label: \"이집트 파라오, 네메스, 콜 아이라이너, 금 장신구\\n(Egyptian pharaoh, nemes, kohl)\" }, { value: \"Viking warrior attire with fur-lined cloak, leather armor, and horned helmet (optional)\", label: \"바이킹 전사, 모피 망토, 가죽 갑옷, 뿔투구\\n(Viking attire, fur cloak, leather armor)\" }, { value: \"Renaissance noble clothing with ruffs, velvet doublet, and jeweled accessories\", label: \"르네상스 귀족, 러프, 벨벳, 보석\\n(Renaissance noble, ruffs, velvet)\" }, { value: \"Ancient Greek chiton or peplos, simple and elegant\", label: \"고대 그리스 키톤/페플로스, 단순 우아\\n(Ancient Greek chiton/peplos)\" }, { value: \"Scottish kilt with tartan pattern, sporran, and sgian-dubh knife\", label: \"스코틀랜드 킬트, 타탄, 스포런, 단검\\n(Scottish kilt, tartan, sporran)\" }, { value: \"1920s flapper dress with beads, sequins, and a feathered headband\", label: \"1920년대 플래퍼 드레스, 비즈, 깃털\\n(1920s flapper dress, beads, feathers)\" }, { value: \"Wild West cowboy/cowgirl attire: denim, leather chaps, cowboy hat, boots\", label: \"서부 카우보이/걸: 데님, 가죽챕스, 모자\\n(Wild West cowboy/cowgirl attire)\" }, { value: \"Chinese Hanfu, elegant flowing robes\", label: \"중국 한푸, 우아하고 흐르는 도포\\n(Chinese Hanfu, flowing robes)\" }, { value: \"Ottoman Empire kaftan, richly embroidered\", label: \"오스만 제국 카프탄, 화려한 자수\\n(Ottoman Empire kaftan, embroidered)\" },\n        ],\n        [ClothingSubCategory.FANTASY_SCI_FI]: [\n          NONE_OPTION, { value: \"in futuristic cyberpunk gear with neon accents, cybernetic implants, and a trench coat\", label: \"사이버펑크 장비, 네온, 임플란트, 트렌치코트\\n(Cyberpunk gear, neon, implants, trench coat)\" }, { value: \"wearing rugged adventurer's leather armor with pouches, straps, and a tattered cloak\", label: \"모험가 가죽 갑옷, 주머니, 끈, 낡은 망토\\n(Adventurer's leather armor, cloak)\" }, { value: \"in a flowing, ethereal elven robe embroidered with silver thread and leaf motifs\", label: \"엘프 로브, 은실 자수, 잎사귀 무늬\\n(Elven robe, silver embroidery, leaves)\" }, { value: \"donning a sleek, high-tech spacesuit with a reflective visor and glowing blue lights\", label: \"첨단 우주복, 반사 바이저, 파란 불빛\\n(High-tech spacesuit, visor, blue lights)\" }, { value: \"dressed as a sorcerer with a long, star-patterned cloak, pointed hat, and a staff\", label: \"마법사, 별무늬 망토, 뾰족 모자, 지팡이\\n(Sorcerer, star cloak, pointed hat, staff)\" }, { value: \"wearing post-apocalyptic scavenger outfit made of patched leather, metal scraps, and goggles\", label: \"포스트 아포칼립스, 가죽, 금속 조각, 고글\\n(Post-apocalyptic scavenger, scraps, goggles)\" }, { value: \"celestial being adorned in starry, cosmic fabric that shimmers and flows\", label: \"천상의 존재, 별/우주 무늬 천\\n(Celestial being, starry cosmic fabric)\" }, { value: \"dwarven warrior armor, heavy, ornate, with rune engravings and a horned helmet\", label: \"드워프 전사 갑옷, 무겁고 화려, 룬 각인\\n(Dwarven armor, ornate, runes, helmet)\" }, { value: \"steampunk inventor attire with goggles, gears, a waistcoat, and tool belt\", label: \"스팀펑크 발명가, 고글, 기어, 조끼, 공구 벨트\\n(Steampunk inventor, goggles, gears, tool belt)\" }, { value: \"alien race traditional garments, bioluminescent patterns, unusual materials\", label: \"외계 종족 전통 의상, 생체 발광, 특이 소재\\n(Alien garments, bioluminescent, unusual)\" }, { value: \"fairy costume with gossamer wings and flower crown\", label: \"요정 의상, 얇은 날개, 꽃 화관\\n(Fairy costume, gossamer wings, flower crown)\" }, { value: \"space pirate outfit, rugged and functional with a bandana\", label: \"우주 해적 복장, 거칠고 기능적, 반다나\\n(Space pirate, rugged, bandana)\" }, { value: \"mage robes with elemental symbols (fire, water, air, earth)\", label: \"원소 상징 마법사 로브 (불, 물, 공기, 흙)\\n(Mage robes, elemental symbols)\" }, { value: \"time traveler's eclectic outfit, mixing eras\", label: \"시간 여행자 복장, 여러 시대 혼합\\n(Time traveler, eclectic, mixed eras)\" },\n        ],\n        [ClothingSubCategory.OCCUPATIONAL_UNIFORM]: [\n          NONE_OPTION, { value: \"wearing a crisp white doctor's lab coat with a stethoscope around the neck\", label: \"의사 가운, 목에 청진기\\n(Doctor's lab coat, stethoscope)\" }, { value: \"in a firefighter's heavy-duty bunker gear with a helmet and oxygen mask\", label: \"소방관 방화복, 헬멧, 산소마스크\\n(Firefighter bunker gear, helmet, mask)\" }, { value: \"dressed as a chef with a tall white toque, double-breasted jacket, and a stained apron\", label: \"요리사, 높은 모자, 더블자켓, 앞치마\\n(Chef, toque, double-breasted jacket)\" }, { value: \"in a sharp pilot's uniform with epaulets, wings pin, and a cap\", label: \"조종사 유니폼, 견장, 윙뱃지, 모자\\n(Pilot uniform, epaulets, wings pin, cap)\" }, { value: \"police officer uniform with a badge, utility belt, and a holstered sidearm\", label: \"경찰 제복, 배지, 유틸리티 벨트, 권총\\n(Police officer, badge, utility belt, sidearm)\" }, { value: \"scientist in a full-body hazmat suit with a transparent face shield\", label: \"과학자, 전신 방호복, 투명 안면 보호구\\n(Scientist, hazmat suit, face shield)\" }, { value: \"construction worker with a hard hat, reflective vest, and tool belt\", label: \"건설 노동자, 안전모, 반사 조끼, 공구 벨트\\n(Construction worker, hard hat, vest, tools)\" }, { value: \"soldier in camouflage combat uniform, helmet, and tactical vest\", label: \"군인, 위장 전투복, 헬멧, 전술 조끼\\n(Soldier, camouflage, helmet, tactical vest)\" }, { value: \"librarian with glasses on a chain, a cardigan, and a sensible skirt\", label: \"사서, 안경줄, 카디건, 단정한 치마\\n(Librarian, glasses chain, cardigan, skirt)\" }, { value: \"artist with a paint-splattered smock, beret, and holding brushes\", label: \"예술가, 물감 튄 작업복, 베레모, 붓\\n(Artist, paint-splattered smock, beret)\" }, { value: \"astronaut in a bulky spacesuit with NASA patches\", label: \"우주비행사, 두툼한 우주복, NASA 패치\\n(Astronaut, bulky spacesuit, NASA patches)\" }, { value: \"judge in a black robe with a gavel\", label: \"판사, 검은 법복, 의사봉\\n(Judge, black robe, gavel)\" }, { value: \"ballerina in a tutu and pointe shoes\", label: \"발레리나, 튜튜, 토슈즈\\n(Ballerina, tutu, pointe shoes)\" }, { value: \"sailor uniform, white and navy blue with a sailor cap\", label: \"선원 제복, 흰색/남색, 세일러캡\\n(Sailor uniform, white/navy, cap)\" }, { value: \"cafe staff uniform (apron, simple shirt)\", label: \"카페 직원 유니폼 (앞치마, 셔츠)\\n(Cafe staff uniform)\"}, { value: \"convenience store staff uniform (vest or polo shirt)\", label: \"편의점 직원 유니폼 (조끼 또는 폴로셔츠)\\n(Convenience store staff uniform)\"}, { value: \"delivery person outfit (branded jacket/cap)\", label: \"배달원 복장 (브랜드 재킷/모자)\\n(Delivery person outfit)\"},\n        ],\n        [ClothingSubCategory.CULTURAL_ETHNIC]: [\n          NONE_OPTION, { value: \"Indian sari (e.g., silk, cotton) with intricate gold embroidery and matching blouse\", label: \"인도 사리(실크/면), 금 자수, 블라우스\\n(Indian sari, gold embroidery, blouse)\" }, { value: \"Chinese qipao (cheongsam) in silk with dragon or phoenix motifs\", label: \"중국 치파오(실크), 용/봉황 무늬\\n(Chinese qipao, silk, dragon/phoenix)\" }, { value: \"Scottish kilt with sporran, sgian-dubh, kilt pin, and ghillie brogues\", label: \"스코틀랜드 킬트, 스포런, 단검, 핀, 신발\\n(Scottish kilt, sporran, sgian-dubh, pin)\" }, { value: \"Native American tribal regalia with beadwork, feathers, and leather fringe\", label: \"아메리카 원주민 예복, 비즈, 깃털, 가죽 술\\n(Native American regalia, beadwork, feathers)\" }, { value: \"African dashiki with vibrant Kente cloth patterns and a kufi cap\", label: \"아프리카 다시키, 켄테 천, 쿠피 모자\\n(African dashiki, Kente patterns, kufi cap)\" }, { value: \"Middle Eastern abaya and shayla, elegant and modest\", label: \"중동 아바야, 샤일라, 우아하고 단정\\n(Middle Eastern abaya, shayla, elegant)\" }, { value: \"Dutch traditional clothing with wooden clogs (klompen) and lace cap\", label: \"네덜란드 전통 의상, 나막신, 레이스 모자\\n(Dutch traditional, clogs, lace cap)\" }, { value: \"Russian sarafan (pinafore dress) and kokoshnik (headdress)\", label: \"러시아 사라판, 코코쉬닉 (머리장식)\\n(Russian sarafan, kokoshnik)\" }, { value: \"Mexican charro suit for men or folklorico dress for women, colorful and embroidered\", label: \"멕시코 차로 수트/폴클로리코 드레스\\n(Mexican charro/folklorico, colorful)\" }, { value: \"Vietnamese Ao Dai, long tunic over trousers\", label: \"베트남 아오자이, 바지 위 긴 튜닉\\n(Vietnamese Ao Dai, tunic over trousers)\" }, { value: \"Tibetan chuba with colorful apron (pangden for women)\", label: \"티베트 추바, 화려한 앞치마 (팡덴)\\n(Tibetan chuba, colorful apron)\" }, { value: \"Hawaiian aloha shirt or muumuu dress with lei\", label: \"하와이 알로하 셔츠/무무, 레이\\n(Hawaiian aloha/muumuu, lei)\" }, { value: \"Spanish flamenco dress with ruffles and a fan\", label: \"스페인 플라멩코 드레스, 러플, 부채\\n(Spanish flamenco dress, ruffles, fan)\" },\n        ],\n        [ClothingSubCategory.SLEEPWEAR_LOUNGEWEAR]: [\n          NONE_OPTION, { value: \"cozy flannel pajamas with a cute print (e.g., stars, animals)\", label: \"아늑한 플란넬 파자마 (별/동물 무늬)\\n(Cozy flannel pajamas, cute print)\" }, { value: \"silk nightgown and matching robe set, luxurious\", label: \"실크 나이트가운, 로브 세트, 고급스러운\\n(Silk nightgown and robe set, luxurious)\" }, { value: \"comfortable sweatpants and a loose, oversized t-shirt\", label: \"편안한 운동복 바지, 헐렁한 티셔츠\\n(Comfortable sweatpants, loose t-shirt)\" }, { value: \"plush bathrobe and fuzzy slippers, ultimate comfort\", label: \"푹신한 목욕 가운, 털 슬리퍼, 최고 편안함\\n(Plush bathrobe, fuzzy slippers, comfort)\" }, { value: \"onesie pajamas with an animal design (e.g., unicorn, dinosaur)\", label: \"동물 디자인 원지 파자마 (유니콘, 공룡)\\n(Onesie pajamas, animal design)\" }, { value: \"simple cotton nightshirt, breathable and soft\", label: \"심플 면 나이트셔츠, 통기성, 부드러움\\n(Simple cotton nightshirt, breathable)\" }, { value: \"yoga pants and a tank top, for relaxing at home\", label: \"요가 팬츠, 탱크탑, 집에서 휴식용\\n(Yoga pants and tank top, relaxing)\" }, { value: \"kimono-style robe made of soft cotton or silk\", label: \"기모노 스타일 로브 (면/실크)\\n(Kimono-style robe, soft cotton/silk)\" }, { value: \"thermal underwear set for cold nights\", label: \"추운 밤용 보온 내의 세트\\n(Thermal underwear set, cold nights)\" }, { value: \"sleep mask and earplugs for undisturbed sleep\", label: \"수면 안대, 귀마개, 숙면용\\n(Sleep mask and earplugs)\" }, { value: \"cashmere loungewear set (sweater and pants)\", label: \"캐시미어 라운지웨어 세트 (스웨터, 바지)\\n(Cashmere loungewear set)\" }, { value: \"short pajama set (shorts and camisole)\", label: \"짧은 파자마 세트 (반바지, 캐미솔)\\n(Short pajama set, shorts/camisole)\" }, { value: \"hooded robe\", label: \"후드 달린 목욕 가운\\n(Hooded robe)\"}, { value: \"comfortable easywear set\", label: \"편안한 이지웨어 세트\\n(Comfortable easywear set)\"},\n        ],\n        [ClothingSubCategory.PROTECTIVE_GEAR]: [\n          NONE_OPTION, { value: \"motorcycle helmet and leather racing suit\", label: \"오토바이 헬멧, 가죽 레이싱 수트\\n(Motorcycle helmet, leather suit)\" }, { value: \"knight's full plate armor, gleaming\", label: \"기사의 전신 판금 갑옷, 빛나는\\n(Knight's full plate armor, gleaming)\" }, { value: \"riot police gear: shield, helmet, body armor\", label: \"진압 경찰 장비: 방패, 헬멧, 방탄복\\n(Riot police gear: shield, helmet)\" }, { value: \"welder's mask and thick gloves\", label: \"용접 마스크와 두꺼운 장갑\\n(Welder's mask and thick gloves)\" }, { value: \"beekeeper's suit and veiled hat\", label: \"양봉가 복장과 망사 모자\\n(Beekeeper's suit and veiled hat)\" }, { value: \"bomb disposal suit, heavy and padded\", label: \"폭탄 처리반 복장, 무겁고 두툼한\\n(Bomb disposal suit, heavy)\" }, { value: \"fencing mask and padded jacket\", label: \"펜싱 마스크와 패딩 재킷\\n(Fencing mask and padded jacket)\" }, { value: \"chainmail shirt under a tunic\", label: \"튜닉 아래 체인메일 셔츠\\n(Chainmail shirt under tunic)\" }, { value: \"gas mask and goggles\", label: \"방독면과 고글\\n(Gas mask and goggles)\" }, { value: \"bulletproof vest (tactical)\", label: \"방탄조끼 (전술용)\\n(Bulletproof vest (tactical))\" }, { value: \"bicycle helmet\", label: \"자전거 헬멧\\n(Bicycle helmet)\"}, { value: \"safety goggles\", label: \"보안경\\n(Safety goggles)\"},\n        ],\n        [ClothingSubCategory.EVERYDAY_WEAR]: [\n          NONE_OPTION, { value: \"a simple t-shirt and shorts\", label: \"간단한 티셔츠와 반바지\\n(Simple t-shirt and shorts)\"}, { value: \"jeans and a casual shirt\", label: \"청바지와 캐주얼 셔츠\\n(Jeans and casual shirt)\"}, { value: \"a comfortable knit sweater and slacks\", label: \"편안한 니트 스웨터와 슬랙스\\n(Comfortable knit sweater and slacks)\"}, { value: \"a hoodie and sweatpants\", label: \"후드티와 운동복 바지\\n(Hoodie and sweatpants)\"}, { value: \"a polo shirt and chinos\", label: \"폴로 셔츠와 치노 팬츠\\n(Polo shirt and chinos)\"}, { value: \"a light windbreaker jacket\", label: \"가벼운 바람막이 재킷\\n(Light windbreaker jacket)\"}, { value: \"summer dress\", label: \"여름 원피스\\n(Summer dress)\"}, { value: \"office attire (blouse and skirt/pants)\", label: \"사무실 복장 (블라우스와 치마/바지)\\n(Office attire)\"}, { value: \"school uniform\", label: \"교복\\n(School uniform)\"}, { value: \"sports jersey and shorts\", label: \"스포츠 저지와 반바지\\n(Sports jersey and shorts)\"},\n        ]\n      };\n      \n      const ACCESSORIES_SUB_CATEGORY_LIST = Object.values(AccessoriesSubCategory).map(val => ({value: val, label: val}));\n      const ACCESSORIES_DETAIL_OPTIONS = {\n        [AccessoriesSubCategory.MAIN_ACCESSORIES]: [ \n            NONE_OPTION, { value: \"wearing a wide-brimmed sun hat\", label: \"넓은 챙의 태양 모자 착용\\n(Wearing wide-brimmed sun hat)\" }, { value: \"elegant pearl necklace and earrings\", label: \"우아한 진주 목걸이와 귀걸이\\n(Elegant pearl necklace and earrings)\" }, { value: \"leather satchel bag slung across the shoulder\", label: \"가죽 사첼백 어깨에 걸친\\n(Leather satchel bag, shoulder)\" }, { value: \"round-framed spectacles perched on the nose\", label: \"코에 걸친 동그란 안경\\n(Round-framed spectacles on nose)\" }, { value: \"a mysterious locket worn around the neck\", label: \"목에 건 신비로운 로켓 펜던트\\n(Mysterious locket around neck)\" }, { value: \"fingerless gloves, practical or stylish\", label: \"실용적/스타일리시한 반장갑\\n(Fingerless gloves, practical/stylish)\" }, { value: \"a colorful silk scarf tied elegantly\", label: \"화려한 실크 스카프 우아하게 맨\\n(Colorful silk scarf tied elegantly)\" }, { value: \"a utility belt with various pouches and tools\", label: \"다양한 주머니와 도구 달린 유틸리티 벨트\\n(Utility belt, pouches and tools)\" }, { value: \"intricate tribal tattoos visible on arms/shoulders\", label: \"팔/어깨에 보이는 복잡한 부족 문신\\n(Intricate tribal tattoos visible)\" }, { value: \"a single red rose tucked behind the ear\", label: \"귀 뒤에 꽂은 한 송이 붉은 장미\\n(Single red rose behind ear)\" }, { value: \"steampunk goggles resting on forehead\", label: \"이마에 얹은 스팀펑크 고글\\n(Steampunk goggles on forehead)\" }, { value: \"a crown of flowers (flower crown)\", label: \"꽃으로 만든 왕관 (화관)\\n(Crown of flowers / flower crown)\" }, { value: \"worn leather wristbands\", label: \"낡은 가죽 손목 밴드\\n(Worn leather wristbands)\" }, { value: \"a backpack for adventuring\", label: \"모험용 배낭\\n(Backpack for adventuring)\" }, { value: \"a jeweled tiara\", label: \"보석 박힌 티아라\\n(Jeweled tiara)\" }, { value: \"backpack\", label: \"백팩\\n(Backpack)\"}, { value: \"eco bag\", label: \"에코백\\n(Eco bag)\"}, { value: \"smartwatch\", label: \"스마트워치\\n(Smartwatch)\"}, { value: \"eyeglasses\", label: \"안경\\n(Eyeglasses)\"}, { value: \"sunglasses\", label: \"선글라스\\n(Sunglasses)\"}, { value: \"baseball cap\", label: \"야구 모자\\n(Baseball cap)\"}, { value: \"beanie\", label: \"비니\\n(Beanie)\"}, { value: \"headphones around neck\", label: \"목에 건 헤드폰\\n(Headphones around neck)\"},\n        ],\n      };\n\n      const BACKGROUND_SUB_CATEGORY_LIST = Object.values(BackgroundSubCategory).map(val => ({value: val, label: val}));\n      const BACKGROUND_DETAIL_OPTIONS = {\n        [BackgroundSubCategory.NATURE_LANDSCAPE]: [\n          NONE_OPTION, { value: \"in an enchanted forest clearing, sunlight filtering through ancient, mossy trees\", label: \"마법 숲 공터, 이끼 낀 나무 햇빛\\n(Enchanted forest, sunlight, mossy trees)\" }, { value: \"atop a misty mountain peak overlooking a vast, cloud-filled valley at dawn\", label: \"안개 낀 산봉우리, 구름 계곡 새벽\\n(Misty mountain peak, cloud valley, dawn)\" }, { value: \"on a serene tropical beach at sunset, with silhouetted palm trees and calm, reflective ocean\", label: \"고요한 열대 해변 일몰, 야자수 실루엣\\n(Tropical beach sunset, palm silhouettes)\" }, { value: \"amidst a vibrant field of wildflowers under a clear, vast blue sky with fluffy clouds\", label: \"활기찬 들꽃밭, 맑고 푸른 하늘 구름\\n(Wildflower field, clear blue sky, clouds)\" }, { value: \"by a cascading waterfall in a lush, steamy jungle with exotic birds\", label: \"계단식 폭포, 무성한 정글, 이국적 새\\n(Cascading waterfall, lush jungle, birds)\" }, { value: \"in a snowy arctic landscape with the aurora borealis dancing in the night sky\", label: \"눈 덮인 북극, 오로라 춤추는 밤하늘\\n(Snowy arctic, aurora borealis, night sky)\" }, { value: \"deep within a mysterious, bioluminescent mushroom forest, glowing particles in air\", label: \"신비로운 발광 버섯 숲, 빛나는 입자\\n(Bioluminescent mushroom forest, particles)\" }, { value: \"on the edge of a dramatic, windswept cliff overlooking a stormy sea\", label: \"극적인 절벽, 폭풍우 치는 바다\\n(Dramatic cliff, stormy sea)\" }, { value: \"in a tranquil bamboo forest, sunlight dappling through leaves\", label: \"고요한 대나무 숲, 햇살 얼룩무늬\\n(Tranquil bamboo forest, dappled sunlight)\" }, { value: \"a desert oasis with swaying palm trees, a small clear pool, and distant dunes\", label: \"사막 오아시스, 야자수, 맑은 연못, 모래 언덕\\n(Desert oasis, palm trees, pool, dunes)\" }, { value: \"autumn forest with a carpet of colorful falling leaves and golden light\", label: \"가을 숲, 형형색색 낙엽, 황금빛\\n(Autumn forest, colorful leaves, golden light)\" }, { value: \"rolling green hills under a summer sky, like the Shire\", label: \"푸른 구릉지, 여름 하늘 (샤이어처럼)\\n(Rolling green hills, summer sky, Shire)\" }, { value: \"a field of lavender stretching to the horizon\", label: \"지평선까지 펼쳐진 라벤더 밭\\n(Field of lavender to horizon)\" }, { value: \"inside a giant, ancient hollow tree\", label: \"거대하고 오래된 속 빈 나무 안\\n(Inside giant hollow tree)\" }, { value: \"a serene lake reflecting the sky like a mirror\", label: \"하늘 비추는 고요한 호수 (거울처럼)\\n(Serene lake reflecting sky, mirror)\" }, { value: \"a volcanic landscape with flowing lava and smoke\", label: \"흐르는 용암과 연기, 화산 지형\\n(Volcanic landscape, lava, smoke)\" }, { value: \"neighborhood park with trees and benches\", label: \"동네 공원 (나무와 벤치)\\n(Neighborhood park)\"}, { value: \"front yard garden with flowers\", label: \"집 앞 정원 (꽃들)\\n(Front yard garden)\"}, { value: \"riverside walking path\", label: \"강변 산책로\\n(Riverside walking path)\"},\n        ],\n        [BackgroundSubCategory.URBAN_CITYSCAPE]: [\n          NONE_OPTION, { value: \"in a neon-lit cyberpunk cityscape with flying vehicles, towering holographic advertisements\", label: \"네온 사이버펑크, 비행 차량, 홀로그램 광고\\n(Neon cyberpunk, flying vehicles, ads)\" }, { value: \"on a bustling city street at night, wet pavement reflecting colorful lights, steam from vents\", label: \"밤의 붐비는 거리, 젖은 포장도로, 다채로운 빛\\n(Bustling city night, wet pavement, lights)\" }, { value: \"overlooking a sprawling futuristic metropolis from a high-tech balcony, city lights twinkling\", label: \"미래형 대도시 조망, 첨단 발코니, 도시 불빛\\n(Futuristic metropolis, high-tech balcony)\" }, { value: \"in a quaint, cobblestone European alleyway with charming cafes, flower boxes, and old lanterns\", label: \"유럽 자갈길 골목, 매력적 카페, 꽃 상자\\n(Cobblestone European alley, cafes, flowers)\" }, { value: \"on a rooftop overlooking a dense city at sunset, warm golden hour light\", label: \"해질녘 옥상, 빽빽한 도시, 황금 시간대 빛\\n(Rooftop city sunset, golden hour)\" }, { value: \"abandoned, overgrown city ruins, vines covering crumbling buildings\", label: \"버려진 도시 폐허, 덩굴 덮인 건물\\n(Abandoned city ruins, overgrown vines)\" }, { value: \"inside a grand, bustling international marketplace or bazaar, full of exotic goods\", label: \"웅장하고 붐비는 국제 시장/바자, 이국적 상품\\n(Bustling international market/bazaar)\" }, { value: \"a quiet suburban street with identical, well-maintained houses and green lawns\", label: \"조용한 교외 거리, 똑같은 집, 푸른 잔디\\n(Quiet suburban street, identical houses)\" }, { value: \"a gritty, industrial district with towering smokestacks, factories, and rusty pipes\", label: \"거친 산업 지구, 굴뚝, 공장, 녹슨 파이프\\n(Gritty industrial district, smokestacks)\" }, { value: \"modern minimalist cityscape with sleek glass skyscrapers and geometric architecture\", label: \"현대 미니멀 도시, 유리 마천루, 기하학 건축\\n(Modern minimalist city, glass skyscrapers)\" }, { value: \"a grand central park in a major city, with fountains and skyline views\", label: \"대도시 중앙 공원, 분수, 스카이라인\\n(Grand central park, fountains, skyline)\" }, { value: \"a historic city square with ancient monuments and pigeons\", label: \"역사적인 도시 광장, 고대 기념물, 비둘기\\n(Historic city square, monuments, pigeons)\" }, { value: \"a crowded subway station platform with arriving train\", label: \"붐비는 지하철역 플랫폼, 도착하는 열차\\n(Crowded subway station, arriving train)\" }, { value: \"a Venetian canal with gondolas and colorful buildings\", label: \"베네치아 운하, 곤돌라, 다채로운 건물\\n(Venetian canal, gondolas, buildings)\" }, { value: \"a futuristic biodome city, blending nature and technology\", label: \"미래형 바이오돔 도시, 자연과 기술 융합\\n(Futuristic biodome city, nature/tech)\" }, { value: \"ordinary residential alley\", label: \"평범한 주택가 골목\\n(Ordinary residential alley)\"}, { value: \"apartment complex playground\", label: \"아파트 단지 놀이터\\n(Apartment complex playground)\"}, { value: \"busy downtown street in daytime\", label: \"낮의 번화가 거리\\n(Busy downtown street in daytime)\"},\n        ],\n        [BackgroundSubCategory.INTERIOR_SPACES]: [\n          NONE_OPTION, { value: \"in a grand, ancient library filled with dusty tomes, scrolls, and a spiral staircase\", label: \"웅장한 고대 도서관, 고서, 두루마리, 나선형 계단\\n(Ancient library, tomes, scrolls, staircase)\" }, { value: \"inside a cozy, fire-lit medieval tavern with wooden beams, tankards, and cheerful patrons\", label: \"아늑한 중세 선술집, 벽난로, 나무 들보, 맥주잔\\n(Cozy medieval tavern, fire-lit, patrons)\" }, { value: \"on the command bridge of a futuristic starship, overlooking a vibrant nebula through a large viewport\", label: \"미래 우주선 함교, 성운 조망, 대형 창문\\n(Starship bridge, nebula viewport)\" }, { value: \"in a minimalist modern apartment with large windows offering panoramic city views at night\", label: \"미니멀 현대 아파트, 큰 창문, 야경\\n(Minimalist apartment, panoramic city views)\" }, { value: \"a lavish baroque palace ballroom with crystal chandeliers, gilded decorations, and a polished dance floor\", label: \"바로크 궁전 무도회장, 샹들리에, 금박 장식\\n(Baroque palace ballroom, chandeliers)\" }, { value: \"a secret alchemist's laboratory filled with bubbling potions, strange glowing devices, and ancient texts\", label: \"비밀 연금술사 실험실, 물약, 이상한 장치\\n(Alchemist's lab, potions, glowing devices)\" }, { value: \"a child's whimsical bedroom filled with colorful toys, hand-drawn pictures, and fairy lights\", label: \"아이의 기발한 침실, 장난감, 그림, 요정 조명\\n(Child's whimsical bedroom, toys, lights)\" }, { value: \"an opulent art gallery with famous paintings on ornate walls, velvet ropes\", label: \"호화로운 미술관, 유명 그림, 벨벳 로프\\n(Opulent art gallery, famous paintings)\" }, { value: \"a cluttered artist's studio with canvases, paint tubes everywhere, and easels\", label: \"어수선한 예술가 작업실, 캔버스, 물감\\n(Cluttered artist's studio, canvases, paint)\" }, { value: \"a high-tech, sterile laboratory with advanced scientific equipment and holographic displays\", label: \"첨단 무균 실험실, 고급 장비, 홀로그램\\n(High-tech sterile lab, advanced equipment)\" }, { value: \"a grand cathedral interior with stained glass windows and high vaulted ceilings\", label: \"웅장한 대성당 내부, 스테인드 글라스, 높은 천장\\n(Grand cathedral interior, stained glass)\" }, { value: \"a cozy bookstore cafe with shelves packed with books and comfy armchairs\", label: \"아늑한 북카페, 책꽂이, 편안한 안락의자\\n(Cozy bookstore cafe, packed shelves)\" }, { value: \"an old, dusty attic filled with forgotten treasures and cobwebs\", label: \"오래되고 먼지 쌓인 다락방, 잊혀진 보물\\n(Old dusty attic, forgotten treasures)\" }, { value: \"a luxurious hotel lobby with a grand staircase and marble floors\", label: \"호화로운 호텔 로비, 대형 계단, 대리석 바닥\\n(Luxurious hotel lobby, grand staircase)\" }, { value: \"a greenhouse filled with exotic plants and flowers, sunlight streaming in\", label: \"이국적인 식물 가득한 온실, 햇빛\\n(Greenhouse, exotic plants, sunlight)\" }, { value: \"ordinary apartment living room\", label: \"일반 가정집 거실\\n(Ordinary apartment living room)\"}, { value: \"typical bedroom with a bed and desk\", label: \"일반적인 침실 (침대와 책상)\\n(Typical bedroom)\"}, { value: \"modern kitchen with appliances\", label: \"현대적인 부엌 (가전제품들)\\n(Modern kitchen)\"},\n        ],\n        [BackgroundSubCategory.EVERYDAY_LOCATIONS]: [\n          NONE_OPTION, { value: \"a typical office cubicle or open-plan office\", label: \"일반적인 사무실 칸막이/오픈형 사무실\\n(Typical office cubicle/open-plan)\"}, { value: \"inside a bustling supermarket aisle\", label: \"붐비는 슈퍼마켓 통로 안\\n(Inside bustling supermarket aisle)\"}, { value: \"a quiet library reading room with bookshelves\", label: \"조용한 도서관 열람실 (책장들)\\n(Quiet library reading room)\"}, { value: \"a local coffee shop with a few patrons\", label: \"동네 커피숍 (손님 몇 명)\\n(Local coffee shop)\"}, { value: \"a classroom with desks and a whiteboard\", label: \"교실 (책상과 화이트보드)\\n(Classroom with desks)\"}, { value: \"a university campus quad or pathway\", label: \"대학교 캠퍼스 광장/길\\n(University campus quad/pathway)\"}, { value: \"inside a public bus or subway train\", label: \"공공 버스/지하철 내부\\n(Inside public bus/subway)\"}, { value: \"a bus stop shelter\", label: \"버스 정류장 쉼터\\n(Bus stop shelter)\"}, { value: \"a hospital waiting room or corridor\", label: \"병원 대기실/복도\\n(Hospital waiting room/corridor)\"}, { value: \"a gym with exercise equipment\", label: \"헬스장 (운동 기구들)\\n(Gym with exercise equipment)\"}, { value: \"a local park playground\", label: \"동네 공원 놀이터\\n(Local park playground)\"}, { value: \"a movie theater lobby or auditorium\", label: \"영화관 로비/상영관\\n(Movie theater lobby/auditorium)\"}, { value: \"a restaurant dining area\", label: \"식당 식사 공간\\n(Restaurant dining area)\"}, { value: \"a shopping mall interior\", label: \"쇼핑몰 내부\\n(Shopping mall interior)\"}, { value: \"a hair salon or barber shop\", label: \"미용실/이발소\\n(Hair salon/barber shop)\"},\n        ],\n        [BackgroundSubCategory.FANTASY_SURREAL]: [\n          NONE_OPTION, { value: \"before a swirling cosmic nebula, stars glittering like scattered diamonds, planets visible\", label: \"소용돌이 성운, 다이아몬드 별, 행성\\n(Swirling cosmic nebula, glittering stars)\" }, { value: \"in a bizarre dreamscape with floating islands, impossible Escher-like architecture, and waterfalls flowing upwards\", label: \"기괴한 꿈 풍경, 떠다니는 섬, 에셔 건축\\n(Dreamscape, floating islands, Escher arch)\" }, { value: \"within an alien jungle, glowing flora and fauna, two moons in a purple sky\", label: \"외계 정글, 발광 동식물, 보라색 하늘 두 달\\n(Alien jungle, glowing flora/fauna, two moons)\" }, { value: \"in a cavern made of giant, luminous crystals that hum with energy\", label: \"거대 발광 수정 동굴, 에너지 진동\\n(Cavern of giant luminous crystals, hums)\"}, { value: \"a world where gravity works differently, people walking on ceilings or sideways on walls\", label: \"중력 다른 세계, 천장/벽 걷는 사람\\n(Different gravity, people on ceilings/walls)\" }, { value: \"a landscape made entirely of candy, sweets, and gingerbread houses\", label: \"사탕/과자/진저브레드 집 풍경\\n(Landscape of candy, sweets, gingerbread)\" }, { value: \"underwater city ruins of a lost Atlantean civilization, schools of fish swimming through\", label: \"수중 도시 폐허 (아틀란티스), 물고기 떼\\n(Underwater city ruins, Atlantean, fish)\" }, { value: \"a sky filled with giant, floating jellyfish-like creatures that emit soft light\", label: \"거대 해파리 생물 떠다니는 하늘, 부드러운 빛\\n(Sky with giant floating jellyfish creatures)\" }, { value: \"a library where books fly like birds and whisper ancient secrets\", label: \"책이 새처럼 날고 비밀 속삭이는 도서관\\n(Library, flying books, whispering secrets)\" }, { value: \"a chessboard landscape with giant, sentient game pieces\", label: \"거대 체스 말 있는 체스판 풍경, 지각 있는\\n(Chessboard landscape, sentient pieces)\" }, { value: \"a forest where trees have human-like faces and watch passersby\", label: \"나무에 사람 얼굴, 지나가는 이 보는 숲\\n(Forest, trees with human faces)\" }, { value: \"a city built on the back of a colossal, ancient creature\", label: \"거대한 고대 생물 등 위 도시\\n(City on colossal creature's back)\" }, { value: \"a realm made of clouds, with cloud castles and pathways\", label: \"구름으로 만들어진 영역, 구름 성/길\\n(Realm made of clouds, cloud castles)\" }, { value: \"a surreal desert with melting clocks and distorted figures (Dali-esque)\", label: \"녹는 시계, 왜곡된 형상 사막 (달리풍)\\n(Surreal desert, melting clocks, Dali-esque)\" },\n        ],\n        [BackgroundSubCategory.ABSTRACT_MINIMALIST]: [\n          NONE_OPTION, { value: \"against a solid, vibrant color backdrop (e.g., crimson red, deep teal, sunshine yellow)\", label: \"생생한 단색 배경 (진홍색, 청록색 등)\\n(Solid vibrant color backdrop, e.g. teal)\" }, { value: \"with bold, contrasting geometric patterns (circles, triangles, lines, chevrons)\", label: \"굵고 대조적인 기하학 패턴 (원, 삼각형)\\n(Bold contrasting geometric patterns)\" }, { value: \"a soft, ethereal gradient background transitioning between harmonious pastel colors\", label: \"부드러운 파스텔 그라데이션 배경\\n(Soft ethereal gradient, pastel colors)\" }, { value: \"a minimalist textured wall (e.g., raw concrete, brushed metal, dark wood grain, stucco)\", label: \"미니멀 질감 벽 (콘크리트, 메탈, 나무결)\\n(Minimalist textured wall, concrete/metal)\" }, { value: \"a single, stark light source casting long, dramatic shadows on a plain surface\", label: \"단일 광원, 길고 극적인 그림자\\n(Single stark light source, long shadows)\" }, { value: \"monochromatic background with varying shades of a single color (e.g., greyscale, bluescale)\", label: \"단색 배경, 다양한 음영 (회색조 등)\\n(Monochromatic background, shades of color)\" }, { value: \"dynamic abstract light streaks, bokeh effects, and lens flares\", label: \"역동적 추상 광선, 보케, 렌즈 플레어\\n(Dynamic abstract light streaks, bokeh)\" }, { value: \"clean white void or infinite studio background, emphasizing subject\", label: \"깨끗한 흰색 공간/스튜디오 배경, 피사체 강조\\n(Clean white void/studio, emphasis)\" }, { value: \"watercolor splashes and drips in abstract, artistic forms against a paper texture\", label: \"추상 수채화 물감, 종이 질감\\n(Watercolor splashes/drips, abstract)\" }, { value: \"minimalist lines forming a subtle horizon, architectural suggestion, or wave pattern\", label: \"미니멀 선, 미묘한 수평선/구조/파도\\n(Minimalist lines, subtle horizon/structure)\" }, { value: \"a field of color, with the subject as a small focal point\", label: \"색면, 피사체는 작은 초점\\n(Field of color, subject as focal point)\" }, { value: \"negative space heavily utilized, subject off-center\", label: \"여백 활용, 피사체 중심에서 벗어남\\n(Negative space utilized, off-center)\" }, { value: \"fractal patterns, intricate and repeating\", label: \"프랙탈 패턴, 복잡하고 반복적\\n(Fractal patterns, intricate, repeating)\" },\n        ],\n        [BackgroundSubCategory.HISTORICAL_RUINS]: [\n          NONE_OPTION, { value: \"exploring crumbling ancient Greek temples (e.g., Parthenon) with broken columns\", label: \"고대 그리스 신전, 부서진 기둥\\n(Crumbling Greek temples, broken columns)\" }, { value: \"amongst overgrown Mayan pyramids in a dense, misty jungle setting\", label: \"초목 무성한 마야 피라미드, 안개 낀 정글\\n(Overgrown Mayan pyramids, misty jungle)\" }, { value: \"inside a dilapidated medieval castle keep, ivy climbing the stone walls\", label: \"황폐한 중세 성채, 담쟁이덩굴 돌벽\\n(Dilapidated medieval castle, ivy walls)\" }, { value: \"wandering through the Roman Forum ruins, with fallen statues and arches\", label: \"로마 포룸 유적, 쓰러진 조각상, 아치\\n(Roman Forum ruins, fallen statues, arches)\" }, { value: \"a forgotten, sand-covered city in the desert, half-buried structures (e.g., Petra-like)\", label: \"사막 잊혀진 도시, 모래 덮인 구조물\\n(Sand-covered city, half-buried, Petra)\" }, { value: \"ruined Gothic cathedral with broken stained glass windows and crumbling gargoyles\", label: \"폐허 고딕 대성당, 깨진 스테인드 글라스\\n(Ruined Gothic cathedral, broken glass)\" }, { value: \"ancient stone circle (e.g., Stonehenge) under a dramatic, starry night sky or sunset\", label: \"고대 석조 원형 유적 (스톤헨지), 별밤/일몰\\n(Ancient stone circle, starry night/sunset)\" }, { value: \"sunken city ruins visible beneath clear turquoise water, coral growing on structures\", label: \"침몰 도시 유적, 맑은 청록색 물, 산호\\n(Sunken city ruins, clear water, coral)\" }, { value: \"ruins of an ancient amphitheater\", label: \"고대 원형극장 유적\\n(Ruins of ancient amphitheater)\" }, { value: \"a desolate battlefield with remnants of ancient warfare\", label: \"황량한 전쟁터, 고대 전쟁 잔해\\n(Desolate battlefield, ancient warfare)\" }, { value: \"abandoned Victorian manor, haunted and decaying\", label: \"버려진 빅토리아풍 저택, 유령 들린 듯\\n(Abandoned Victorian manor, haunted)\" },\n        ],\n        [BackgroundSubCategory.SPACE_COSMIC]: [\n          NONE_OPTION, { value: \"floating in zero gravity inside a spaceship, looking out at a stunning view of Earth\", label: \"우주선 무중력, 지구 바라보는\\n(Floating zero-G in spaceship, view Earth)\" }, { value: \"standing on the desolate, red desert landscape of Mars, with Olympus Mons in distance\", label: \"화성 붉은 사막, 멀리 올림푸스 산\\n(Mars red desert, Olympus Mons distance)\" }, { value: \"amidst a vibrant, colorful nebula with swirling gas clouds and distant, twinkling stars\", label: \"생생한 성운, 소용돌이 가스, 먼 별\\n(Vibrant nebula, swirling gas, distant stars)\" }, { value: \"on an alien planet with bizarre, crystalline rock formations and multiple moons in a green sky\", label: \"외계 행성, 기괴한 수정 암석, 여러 달\\n(Alien planet, crystalline rocks, moons)\" }, { value: \"inside a sleek space station orbiting a colossal gas giant (like Jupiter or Saturn with rings)\", label: \"우주 정거장 내부, 거대 가스 행성 공전\\n(Space station orbiting gas giant, rings)\" }, { value: \"witnessing a spectacular supernova explosion from a safe distance, bright and colorful\", label: \"장엄한 초신성 폭발 목격, 밝고 화려\\n(Witnessing supernova, bright, colorful)\" }, { value: \"navigating through the intricate rings of Saturn, icy particles glittering\", label: \"토성 고리 통과, 얼음 입자 반짝임\\n(Navigating Saturn's rings, icy particles)\" }, { value: \"a dense field of asteroids drifting silently in the blackness of space\", label: \"소행성 지대, 우주 암흑 속 표류\\n(Asteroid field drifting in space)\" }, { value: \"a lone astronaut on the Moon, Earth visible in the sky\", label: \"달 위 외로운 우주비행사, 하늘에 지구\\n(Lone astronaut on Moon, Earth visible)\" }, { value: \"a futuristic colony on a terraformed planet\", label: \"테라포밍된 행성 위 미래 식민지\\n(Futuristic colony on terraformed planet)\" }, { value: \"approaching a mysterious black hole, light bending around it\", label: \"신비로운 블랙홀 접근, 빛 왜곡\\n(Approaching black hole, light bending)\" }, { value: \"inside a comet's tail, icy and ethereal\", label: \"혜성 꼬리 내부, 얼음 같고 천상적\\n(Inside comet's tail, icy, ethereal)\" },\n        ],\n        [BackgroundSubCategory.WEATHER_ATMOSPHERE]: [\n          NONE_OPTION, { value: \"a dramatic thunderstorm with flashing lightning and heavy rain\", label: \"극적인 뇌우, 번개, 폭우\\n(Dramatic thunderstorm, lightning, rain)\" }, { value: \"a serene foggy morning, mist obscuring distant objects\", label: \"고요한 안개 낀 아침, 안개 자욱\\n(Serene foggy morning, mist)\" }, { value: \"a blizzard with swirling snow and strong winds\", label: \"눈보라, 휘몰아치는 눈, 강풍\\n(Blizzard, swirling snow, strong winds)\" }, { value: \"a beautiful sunset with vibrant orange, pink, and purple clouds\", label: \"아름다운 일몰, 다채로운 구름색\\n(Beautiful sunset, vibrant clouds)\" }, { value: \"a clear night sky full of stars and the Milky Way visible\", label: \"맑은 밤하늘, 별 가득, 은하수\\n(Clear night sky, stars, Milky Way)\" }, { value: \"a double rainbow after a spring shower\", label: \"봄 소나기 후 쌍무지개\\n(Double rainbow after spring shower)\" }, { value: \"dust storm in a desert landscape\", label: \"사막 풍경 속 모래폭풍\\n(Dust storm in desert)\" }, { value: \"sunlight breaking through dark storm clouds (crepuscular rays)\", label: \"먹구름 뚫고 나오는 햇빛 (빛내림)\\n(Sunlight through storm clouds, rays)\" }, { value: \"hazy, humid summer day\", label: \"흐릿하고 습한 여름날\\n(Hazy, humid summer day)\" }, { value: \"crisp, clear autumn day with blue sky\", label: \"상쾌하고 맑은 가을날, 푸른 하늘\\n(Crisp, clear autumn day, blue sky)\" }, { value: \"light rain falling on a city street\", label: \"도시 거리에 가랑비 내리는\\n(Light rain on city street)\"},\n        ],\n        [BackgroundSubCategory.PATTERNS_TEXTURES]: [\n          NONE_OPTION, { value: \"against a wall of intricate, repeating geometric tiles\", label: \"복잡하고 반복적인 기하학 타일 벽\\n(Wall of geometric tiles, repeating)\" }, { value: \"on a surface of cracked earth or dry mud\", label: \"갈라진 땅 또는 마른 진흙 표면\\n(Cracked earth / dry mud surface)\" }, { value: \"surrounded by swirling, abstract smoke patterns\", label: \"소용돌이치는 추상적 연기 패턴\\n(Swirling abstract smoke patterns)\" }, { value: \"against a backdrop of flowing, liquid metal\", label: \"흐르는 액체 금속 배경\\n(Flowing liquid metal backdrop)\" }, { value: \"a textured surface of rough stone or brick\", label: \"거친 돌 또는 벽돌 질감 표면\\n(Rough stone or brick texture)\" }, { value: \"rippling water surface texture\", label: \"잔물결 이는 수면 질감\\n(Rippling water surface texture)\" }, { value: \"close-up of iridescent fish scales or feathers\", label: \"무지갯빛 물고기 비늘/깃털 클로즈업\\n(Iridescent fish scales/feathers closeup)\" }, { value: \"a field of stars as a textured background\", label: \"별밭 질감 배경\\n(Field of stars as textured background)\" }, { value: \"a wall covered in dense, green ivy\", label: \"푸른 담쟁이덩굴로 뒤덮인 벽\\n(Wall covered in dense green ivy)\" }, { value: \"polished wood grain texture\", label: \"윤이 나는 나뭇결 질감\\n(Polished wood grain texture)\" }, { value: \"simple wallpaper pattern\", label: \"단순한 벽지 패턴\\n(Simple wallpaper pattern)\"},\n        ],\n      };\n      \n\n      const DEFAULT_SELECTIONS = {\n        [Category.GENDER]: GENDER_OPTIONS[0].value,\n        [Category.RACE]: RACE_OPTIONS[0].value,\n        [Category.OCCUPATION]: NONE_OPTION_VALUE, \n        customOccupationDetail: \"\",\n        [Category.STYLE]: NONE_OPTION_VALUE,\n        [Category.ASPECT_RATIO]: NONE_OPTION_VALUE,\n        [Category.FRAMING]: NONE_OPTION_VALUE,\n        expressionSubCategory: EXPRESSION_SUB_CATEGORY_LIST[0].value,\n        expressionOption: EXPRESSION_DETAIL_OPTIONS[EXPRESSION_SUB_CATEGORY_LIST[0].value]?.[0]?.value || NONE_OPTION_VALUE,\n        customExpressionDetail: \"\",\n        actionSubCategory: ACTION_SUB_CATEGORY_LIST.find(opt => opt.value === ActionSubCategory.DAILY_LIFE)?.value || ACTION_SUB_CATEGORY_LIST[0].value,\n        actionOption: ACTION_DETAIL_OPTIONS[ActionSubCategory.DAILY_LIFE]?.[0]?.value || ACTION_DETAIL_OPTIONS[ACTION_SUB_CATEGORY_LIST[0].value]?.[0]?.value || NONE_OPTION_VALUE,\n        customActionDetail: \"\",\n        clothingSubCategory: CLOTHING_SUB_CATEGORY_LIST.find(opt => opt.value === ClothingSubCategory.EVERYDAY_WEAR)?.value || CLOTHING_SUB_CATEGORY_LIST[0].value,\n        clothingOption: CLOTHING_DETAIL_OPTIONS[ClothingSubCategory.EVERYDAY_WEAR]?.[0]?.value || CLOTHING_DETAIL_OPTIONS[CLOTHING_SUB_CATEGORY_LIST[0].value]?.[0]?.value || NONE_OPTION_VALUE,\n        customClothingDetail: \"\",\n        accessoriesSubCategory: ACCESSORIES_SUB_CATEGORY_LIST[0].value,\n        accessoriesOption: ACCESSORIES_DETAIL_OPTIONS[ACCESSORIES_SUB_CATEGORY_LIST[0].value]?.[0]?.value || NONE_OPTION_VALUE,\n        customAccessoriesDetail: \"\",\n        backgroundSubCategory: BACKGROUND_SUB_CATEGORY_LIST.find(opt => opt.value === BackgroundSubCategory.EVERYDAY_LOCATIONS)?.value || BACKGROUND_SUB_CATEGORY_LIST[0].value,\n        backgroundOption: BACKGROUND_DETAIL_OPTIONS[BackgroundSubCategory.EVERYDAY_LOCATIONS]?.[0]?.value || BACKGROUND_DETAIL_OPTIONS[BACKGROUND_SUB_CATEGORY_LIST[0].value]?.[0]?.value || NONE_OPTION_VALUE,\n        customBackgroundDetail: \"\",\n      };\n\n      // --- Global State ---\n      let selections = { ...DEFAULT_SELECTIONS };\n      let generatedPrompt = \"\";\n      let generatedImageFXPrompt = \"\";\n      let generatedMidjourneyPrompt = \"\";\n      let generatedStableDiffusionPrompt = \"\";\n      let error = null;\n      let promptCopied = false;\n      let imageFXPromptCopied = false;\n      let midjourneyPromptCopied = false;\n      let stableDiffusionPromptCopied = false;\n\n      // --- SVG Icons ---\n      const ClipboardIconSVG = `\n`;\n      const YouTubeIconSVG = `\n`;\n      const ShuffleIconSVG = `\n`;\n      const DiceIconSVG = `\n\n`;\n\n      // --- Helper Functions ---\n      function getRandomOptionExcludingNone(options) {\n        const filteredOptions = options.filter(opt => opt.value !== NONE_OPTION_VALUE);\n        if (filteredOptions.length > 0) {\n          return filteredOptions[Math.floor(Math.random() * filteredOptions.length)].value;\n        }\n        return options.find(opt => opt.value === NONE_OPTION_VALUE)?.value || (options.length > 0 ? options[0].value : NONE_OPTION_VALUE);\n      }\n\n      function resetOutputs() {\n        generatedPrompt = \"\"; \n        generatedImageFXPrompt = \"\";\n        generatedMidjourneyPrompt = \"\";\n        generatedStableDiffusionPrompt = \"\";\n        error = null;\n        promptCopied = false;\n        imageFXPromptCopied = false;\n        midjourneyPromptCopied = false;\n        stableDiffusionPromptCopied = false;\n        renderResultsPanel(); // Re-render results to clear them\n      }\n\n      // --- DOM Creation Functions ---\n      function createElement(tag, classList = [], attributes = {}, innerHTML = '', textContent = '') {\n        const el = document.createElement(tag);\n        if (classList.length > 0) el.classList.add(...classList);\n        for (const key in attributes) {\n          el.setAttribute(key, attributes[key]);\n        }\n        if (innerHTML) el.innerHTML = innerHTML;\n        if (textContent) el.textContent = textContent;\n        return el;\n      }\n      \n      function createSelectDropdown(id, labelText, options, value, onChangeCallback, customClassName = '') {\n        const baseDivClasses = ['mb-4'];\n        const allDivClasses = customClassName \n            ? baseDivClasses.concat(customClassName.split(' ').filter(c => c.trim() !== '')) \n            : baseDivClasses;\n        const div = createElement('div', allDivClasses);\n\n        const label = createElement('label', ['block', 'text-sm', 'font-medium', 'text-gray-500', 'mb-1', 'whitespace-pre-line', 'h-10'], { for: id }, '', labelText);\n        \n        const select = createElement('select', ['w-full', 'p-3', 'border', 'border-neutral-light', 'rounded-lg', 'shadow-sm', 'focus:ring-brand-secondary', 'focus:border-brand-secondary', 'transition', 'duration-150', 'ease-in-out', 'bg-white', 'text-neutral-dark'], { id });\n        select.value = value;\n        select.addEventListener('change', onChangeCallback);\n\n        options.forEach(option => {\n          const optElement = createElement('option', [], { value: option.value }, '', option.label.replace(/\\n/g, ' '));\n          select.appendChild(optElement);\n        });\n\n        div.appendChild(label);\n        div.appendChild(select);\n        return div;\n      }\n      \n      function createTextInput(id, placeholder, value, onChangeCallback, customClassName = '') {\n        const inputClasses = ['w-full', 'p-3', 'border', 'border-neutral-light', 'rounded-lg', 'shadow-sm', 'focus:ring-brand-secondary', 'focus:border-brand-secondary', 'transition', 'duration-150', 'ease-in-out', 'bg-white', 'text-neutral-dark', 'placeholder-gray-400'];\n        if (customClassName) {\n            inputClasses.push(...customClassName.split(' ').filter(c => c.trim() !== ''));\n        }\n        const input = createElement('input', inputClasses, { type: 'text', id, placeholder });\n        input.value = value;\n        input.addEventListener('input', onChangeCallback); \n        return input;\n      }\n\n      function createButton(id, text, iconSVG, onClickCallback, classList = [], ariaLabel = '') {\n        const button = createElement('button', classList, { id, 'aria-label': ariaLabel || text }, (iconSVG ? iconSVG : '') + text);\n        button.addEventListener('click', onClickCallback);\n        return button;\n      }\n\n      // --- Event Handler Functions ---\n      function handleSimpleSelectionChange(categoryKey, value) {\n        selections[categoryKey] = value;\n        resetOutputs();\n      }\n\n      function handleOccupationChange(value) {\n        selections[Category.OCCUPATION] = value;\n        selections.customOccupationDetail = \"\";\n        document.getElementById('customOccupationDetail').value = \"\"; // Clear input field\n        resetOutputs();\n      }\n\n      function handleCustomOccupationDetailChange(event) {\n        selections.customOccupationDetail = event.target.value;\n        resetOutputs();\n      }\n      \n      function handleSubCategoryChange(categoryType, subCategoryValue) {\n        const subCatKey = `${categoryType}SubCategory`;\n        const optionKey = `${categoryType}Option`;\n        const customDetailKey = `custom${categoryType.charAt(0).toUpperCase() + categoryType.slice(1)}Detail`;\n        \n        selections[subCatKey] = subCategoryValue;\n        const detailOptionsForSubCat = getDetailOptionsForSubCategory(categoryType, subCategoryValue);\n        selections[optionKey] = detailOptionsForSubCat.find(opt => opt.value === NONE_OPTION_VALUE)?.value || NONE_OPTION_VALUE;\n        selections[customDetailKey] = \"\";\n\n        // Re-render the specific detail dropdown and custom input\n        const detailDropdownId = `${categoryType}Option`;\n        const customInputId = `custom${categoryType.charAt(0).toUpperCase() + categoryType.slice(1)}Detail`;\n        const detailDropdown = document.getElementById(detailDropdownId);\n        const customInput = document.getElementById(customInputId);\n\n        if (detailDropdown) {\n            detailDropdown.innerHTML = ''; // Clear existing options\n            detailOptionsForSubCat.forEach(opt => {\n                const optionElement = createElement('option', [], {value: opt.value}, '', opt.label.replace(/\\n/g, ' '));\n                detailDropdown.appendChild(optionElement);\n            });\n            detailDropdown.value = selections[optionKey];\n        }\n        if (customInput) {\n            customInput.value = \"\";\n        }\n        resetOutputs();\n      }\n\n      function handleDetailOptionChange(categoryType, optionValue) {\n        const optionKey = `${categoryType}Option`;\n        const customDetailKey = `custom${categoryType.charAt(0).toUpperCase() + categoryType.slice(1)}Detail`;\n\n        selections[optionKey] = optionValue;\n        selections[customDetailKey] = \"\";\n\n        const customInputId = `custom${categoryType.charAt(0).toUpperCase() + categoryType.slice(1)}Detail`;\n        const customInput = document.getElementById(customInputId);\n        if (customInput) customInput.value = \"\";\n        \n        resetOutputs();\n      }\n      \n      function handleCustomDetailChange(categoryType, customValue) {\n        const customDetailKey = `custom${categoryType.charAt(0).toUpperCase() + categoryType.slice(1)}Detail`;\n        selections[customDetailKey] = customValue;\n        resetOutputs();\n      }\n\n      function handleRandomizeGenderRace() {\n        selections[Category.GENDER] = getRandomOptionExcludingNone(GENDER_OPTIONS);\n        selections[Category.RACE] = getRandomOptionExcludingNone(RACE_OPTIONS);\n        \n        // Update UI\n        document.getElementById(Category.GENDER).value = selections[Category.GENDER];\n        document.getElementById(Category.RACE).value = selections[Category.RACE];\n        resetOutputs();\n      }\n\n      function handleRandomizeRemainingDetails() {\n        selections[Category.STYLE] = getRandomOptionExcludingNone(STYLE_OPTIONS);\n        selections[Category.ASPECT_RATIO] = getRandomOptionExcludingNone(ASPECT_RATIO_OPTIONS);\n        selections[Category.FRAMING] = getRandomOptionExcludingNone(FRAMING_OPTIONS);\n\n        document.getElementById(Category.STYLE).value = selections[Category.STYLE];\n        document.getElementById(Category.ASPECT_RATIO).value = selections[Category.ASPECT_RATIO];\n        document.getElementById(Category.FRAMING).value = selections[Category.FRAMING];\n\n        ['expression', 'action', 'clothing', 'accessories', 'background'].forEach(type => {\n            const subCatList = getSubCategoryListByType(type);\n            if (!subCatList || subCatList.length === 0) return;\n            const randomSubCat = subCatList[Math.floor(Math.random() * subCatList.length)].value;\n            selections[`${type}SubCategory`] = randomSubCat;\n            \n            const detailOpts = getDetailOptionsForSubCategory(type, randomSubCat);\n            selections[`${type}Option`] = getRandomOptionExcludingNone(detailOpts);\n            selections[`custom${type.charAt(0).toUpperCase() + type.slice(1)}Detail`] = \"\";\n\n            // Update UI for complex category\n            document.getElementById(`${type}SubCategory`).value = randomSubCat;\n            const detailDropdown = document.getElementById(`${type}Option`);\n            detailDropdown.innerHTML = '';\n            detailOpts.forEach(opt => {\n              const optionEl = createElement('option',[], {value: opt.value}, '', opt.label.replace(/\\n/g, ' '));\n              detailDropdown.appendChild(optionEl);\n            });\n            detailDropdown.value = selections[`${type}Option`];\n            document.getElementById(`custom${type.charAt(0).toUpperCase() + type.slice(1)}Detail`).value = \"\";\n        });\n        resetOutputs();\n      }\n\n      function constructPrompt() {\n        error = null;\n        resetOutputs(); \n\n        const {\n          [Category.GENDER]: gender, [Category.RACE]: race, [Category.OCCUPATION]: occupation, customOccupationDetail,\n          [Category.STYLE]: style, [Category.ASPECT_RATIO]: aspectRatio, [Category.FRAMING]: framing,\n          expressionSubCategory, expressionOption, customExpressionDetail,\n          actionSubCategory, actionOption, customActionDetail,\n          clothingSubCategory, clothingOption, customClothingDetail,\n          accessoriesSubCategory, accessoriesOption, customAccessoriesDetail,\n          backgroundSubCategory, backgroundOption, customBackgroundDetail,\n        } = selections;\n        \n        const finalOccupation = customOccupationDetail || (occupation !== NONE_OPTION_VALUE ? occupation : \"\");\n        const finalExpression = customExpressionDetail || (expressionOption !== NONE_OPTION_VALUE ? expressionOption : \"\");\n        const finalAction = customActionDetail || (actionOption !== NONE_OPTION_VALUE ? actionOption : \"\");\n        const finalClothing = customClothingDetail || (clothingOption !== NONE_OPTION_VALUE ? clothingOption : \"\");\n        const finalAccessories = customAccessoriesDetail || (accessoriesOption !== NONE_OPTION_VALUE ? accessoriesOption : \"\");\n        const finalBackground = customBackgroundDetail || (backgroundOption !== NONE_OPTION_VALUE ? backgroundOption : \"\");\n\n        let dalle2PromptText = style !== NONE_OPTION_VALUE ? `A ${style} image of a ${race} ${gender}` : `An image of a ${race} ${gender}`;\n        if (finalOccupation) dalle2PromptText += ` who is a ${finalOccupation}`;\n        if (framing !== NONE_OPTION_VALUE) dalle2PromptText += `, ${framing}`;\n        if (finalExpression) dalle2PromptText += `, ${finalExpression}`;\n        if (finalAction) dalle2PromptText += `, ${finalAction}`;\n        if (finalClothing) dalle2PromptText += `, wearing ${finalClothing}`;\n        if (finalAccessories) dalle2PromptText += `, with ${finalAccessories}`;\n        if (finalBackground) dalle2PromptText += `. The scene is ${finalBackground}`;\n        dalle2PromptText += `. High detail, cinematic lighting, intricate details, sharp focus.`;\n        if (aspectRatio !== NONE_OPTION_VALUE) dalle2PromptText += ` Image aspect ratio: ${aspectRatio}.`;\n        generatedPrompt = dalle2PromptText;\n\n        let gpt4oDalle3PromptText = `Create an image of a {${race}} {${gender}}.`;\n        if (finalOccupation) gpt4oDalle3PromptText += ` Occupation: {${finalOccupation}}.`;\n        if (finalExpression) gpt4oDalle3PromptText += ` Facial expression: {${finalExpression}}.`;\n        if (finalAction) gpt4oDalle3PromptText += ` Action/Pose: {${finalAction}}.`;\n        if (finalClothing) gpt4oDalle3PromptText += ` Clothing: {${finalClothing}}.`;\n        if (finalAccessories) gpt4oDalle3PromptText += ` Accessories: {${finalAccessories}}.`;\n        if (finalBackground) gpt4oDalle3PromptText += ` Background: {${finalBackground}}.`;\n        if (style !== NONE_OPTION_VALUE) gpt4oDalle3PromptText += ` Art style: {${style}}.`;\n        if (framing !== NONE_OPTION_VALUE) gpt4oDalle3PromptText += ` Shot type/framing: {${framing}}.`;\n        if (aspectRatio !== NONE_OPTION_VALUE) gpt4oDalle3PromptText += ` Aspect ratio: {${aspectRatio}}.`;\n        gpt4oDalle3PromptText += ` Additional details: {high detail, cinematic lighting, intricate details, sharp focus}.`;\n        generatedImageFXPrompt = gpt4oDalle3PromptText.replace(/{\\s*}/g, '').replace(/\\.\\s*\\./g, '.').trim();\n\n        const mjAspectRatioToken = aspectRatio !== NONE_OPTION_VALUE && aspectRatio.includes(':') ? `--ar ${aspectRatio}` : ``;\n        let mjPromptParts = [];\n        mjPromptParts.push(`${race} ${gender}`);\n        if (finalOccupation) mjPromptParts.push(finalOccupation);\n        if (finalExpression) mjPromptParts.push(finalExpression);\n        if (finalAction) mjPromptParts.push(finalAction);\n        if (finalClothing) mjPromptParts.push(`wearing ${finalClothing}`);\n        if (finalAccessories) mjPromptParts.push(`with ${finalAccessories}`);\n        if (finalBackground) mjPromptParts.push(`in ${finalBackground}`);\n        if (style !== NONE_OPTION_VALUE) mjPromptParts.push(style);\n        if (framing !== NONE_OPTION_VALUE) mjPromptParts.push(framing);\n        mjPromptParts.push(\"high detail, cinematic lighting, intricate details, sharp focus\");\n        let mjPromptStr = mjPromptParts.filter(p => p && p.trim() !== \"\").join(', ');\n        if (mjAspectRatioToken) mjPromptStr += ` ${mjAspectRatioToken}`;\n        generatedMidjourneyPrompt = mjPromptStr.replace(/\\s*,\\s*,/g, ',').replace(/,\\s*$/,'').trim();\n\n        let sdPositivePromptParts = [];\n        const addSdPart = (part, weight = 1.0) => {\n          if (part && part.trim() !== \"\") {\n            const cleanedPart = part.split('\\n')[0]; \n            if (weight !== 1.0) sdPositivePromptParts.push(`(${cleanedPart}:${weight.toFixed(1)})`);\n            else sdPositivePromptParts.push(cleanedPart);\n          }\n        };\n        addSdPart(`${race} ${gender}`, 1.3);\n        if (finalOccupation) addSdPart(finalOccupation, 1.2);\n        if (finalExpression) addSdPart(finalExpression, 1.1);\n        if (finalAction) addSdPart(finalAction, 1.1);\n        if (finalClothing) addSdPart(`wearing ${finalClothing}`, 1.1);\n        if (finalAccessories) addSdPart(`with ${finalAccessories}`, 1.1);\n        if (finalBackground) addSdPart(`in ${finalBackground}`, 1.1);\n        if (style !== NONE_OPTION_VALUE) addSdPart(style, 1.2);\n        if (framing !== NONE_OPTION_VALUE) addSdPart(framing);\n        addSdPart(\"high detail\", 1.2); addSdPart(\"cinematic lighting\", 1.1); addSdPart(\"intricate details\"); addSdPart(\"sharp focus\");\n        const sdPositivePrompt = sdPositivePromptParts.join(', ');\n        const sdNegativePrompt = \"ugly, tiling, poorly drawn hands, poorly drawn feet, poorly drawn face, out of frame, extra limbs, disfigured, deformed, body out of frame, blurry, bad anatomy, blurred, watermark, grainy, signature, cut off, draft, low quality, worst quality, (multiple people:1.3), (extra fingers:1.2), (mutated hands:1.2), (bad proportions:1.1), (jpeg artifacts:1.1)\";\n        generatedStableDiffusionPrompt = `Positive: ${sdPositivePrompt}\\n\\nNegative: ${sdNegativePrompt}`;\n        \n        renderResultsPanel();\n      }\n\n      function handleCopyPrompt(promptToCopy, type) {\n        if (!promptToCopy) return;\n        navigator.clipboard.writeText(promptToCopy).then(() => {\n          let copyButton;\n          if (type === 'general') { promptCopied = true; copyButton = document.getElementById('copyGeneralPrompt'); }\n          else if (type === 'imagefx') { imageFXPromptCopied = true; copyButton = document.getElementById('copyImageFXPrompt'); }\n          else if (type === 'midjourney') { midjourneyPromptCopied = true; copyButton = document.getElementById('copyMidjourneyPrompt'); }\n          else if (type === 'stablediffusion') { stableDiffusionPromptCopied = true; copyButton = document.getElementById('copyStableDiffusionPrompt');}\n          \n          if(copyButton) {\n            const originalText = copyButton.innerHTML;\n            const copiedTextContent = type === 'general' ? 'DALL·E 2/Bing/Image-FX 복사됨! (Copied!)' :\n                                   type === 'imagefx' ? 'GPT-4o/DALL·E 3 복사됨! (Copied!)' :\n                                   type === 'midjourney' ? 'Midjourney 복사됨! (Copied!)' :\n                                   'Stable Diffusion 복사됨! (Copied!)';\n            copyButton.innerHTML = ClipboardIconSVG + copiedTextContent;\n            setTimeout(() => {\n              if (type === 'general') promptCopied = false;\n              else if (type === 'imagefx') imageFXPromptCopied = false;\n              else if (type === 'midjourney') midjourneyPromptCopied = false;\n              else if (type === 'stablediffusion') stableDiffusionPromptCopied = false;\n              copyButton.innerHTML = originalText; // Restore original button text\n            }, 2000);\n          }\n        }).catch(err => {\n          console.error(`Failed to copy ${type} prompt: `, err);\n          error = `프롬프트 복사에 실패했습니다. (Failed to copy ${type} prompt.)`;\n          renderResultsPanel();\n        });\n      }\n      \n      function getSubCategoryListByType(type) {\n        if (type === 'expression') return EXPRESSION_SUB_CATEGORY_LIST;\n        if (type === 'action') return ACTION_SUB_CATEGORY_LIST;\n        if (type === 'clothing') return CLOTHING_SUB_CATEGORY_LIST;\n        if (type === 'accessories') return ACCESSORIES_SUB_CATEGORY_LIST;\n        if (type === 'background') return BACKGROUND_SUB_CATEGORY_LIST;\n        return [];\n      }\n\n      function getDetailOptionsForSubCategory(type, subCategoryValue) {\n          if (type === 'expression') return EXPRESSION_DETAIL_OPTIONS[subCategoryValue] || [NONE_OPTION];\n          if (type === 'action') return ACTION_DETAIL_OPTIONS[subCategoryValue] || [NONE_OPTION];\n          if (type === 'clothing') return CLOTHING_DETAIL_OPTIONS[subCategoryValue] || [NONE_OPTION];\n          if (type === 'accessories') return ACCESSORIES_DETAIL_OPTIONS[subCategoryValue] || [NONE_OPTION];\n          if (type === 'background') return BACKGROUND_DETAIL_OPTIONS[subCategoryValue] || [NONE_OPTION];\n          return [NONE_OPTION];\n      }\n\n      // --- UI Rendering Functions ---\n      function renderApp() {\n        const root = document.getElementById('root');\n        root.innerHTML = ''; // Clear previous content\n        root.className = 'min-h-screen bg-gradient-to-br from-neutral-dark via-gray-800 to-neutral-dark text-neutral-extralight p-4 sm:p-8 flex flex-col items-center';\n\n        // Header\n        const header = createElement('header', ['w-full', 'max-w-5xl', 'mb-8', 'text-center']);\n        header.appendChild(createElement('h1', ['text-4xl', 'sm:text-5xl', 'font-bold', 'text-transparent', 'bg-clip-text', 'bg-gradient-to-r', 'from-brand-secondary', 'via-brand-accent', 'to-pink-500', 'mb-2'], {}, 'AI 이미지 프롬프트 생성기'));\n        header.appendChild(createElement('p', ['text-lg', 'text-neutral-light'], {}, '원하는 옵션을 선택하여 독창적인 이미지 프롬프트를 만들어보세요!'));\n        root.appendChild(header);\n\n        // Main\n        const main = createElement('main', ['w-full', 'max-w-5xl', 'grid', 'grid-cols-1', 'gap-8']);\n        \n        // Options Panel\n        const optionsPanel = createElement('section', ['bg-gray-800', 'p-6', 'rounded-xl', 'shadow-2xl', 'border', 'border-gray-700', 'space-y-8']);\n        optionsPanel.appendChild(createElement('h2', ['text-2xl', 'font-semibold', 'mb-3', 'text-brand-accent', 'border-b-2', 'border-brand-accent', 'pb-2'], {}, '옵션 선택 (Select Options)'));\n        \n        // Basic Character\n        const basicCharDiv = createElement('div');\n        basicCharDiv.appendChild(createElement('h3', ['text-xl', 'font-semibold', 'mb-4', 'text-neutral-light', 'border-l-4', 'border-brand-secondary', 'pl-3'], {}, '기본 캐릭터 설정 (Basic Character)'));\n        const basicCharGrid = createElement('div', ['grid', 'grid-cols-1', 'sm:grid-cols-2', 'gap-4']);\n        basicCharGrid.appendChild(createSelectDropdown(Category.GENDER, Category.GENDER, GENDER_OPTIONS, selections[Category.GENDER], (e) => handleSimpleSelectionChange(Category.GENDER, e.target.value), 'text-neutral-dark'));\n        basicCharGrid.appendChild(createSelectDropdown(Category.RACE, Category.RACE, RACE_OPTIONS, selections[Category.RACE], (e) => handleSimpleSelectionChange(Category.RACE, e.target.value), 'text-neutral-dark'));\n        basicCharDiv.appendChild(basicCharGrid);\n        basicCharDiv.appendChild(createButton('randomizeGenderRaceBtn', '랜덤 성별 & 인종 (Random Gender & Race)', ShuffleIconSVG, handleRandomizeGenderRace, ['w-full', 'mt-4', 'bg-purple-600', 'hover:bg-purple-700', 'text-white', 'font-semibold', 'py-2.5', 'px-4', 'rounded-lg', 'shadow-md', 'hover:shadow-lg', 'transition', 'duration-150', 'ease-in-out', 'focus:outline-none', 'focus:ring-2', 'focus:ring-purple-400', 'focus:ring-opacity-50', 'flex', 'items-center', 'justify-center', 'transform', 'hover:scale-105']));\n        optionsPanel.appendChild(basicCharDiv);\n\n        // Occupation\n        const occupationDiv = createElement('div');\n        occupationDiv.appendChild(createElement('h3', ['text-xl', 'font-semibold', 'mb-4', 'text-neutral-light', 'border-l-4', 'border-brand-secondary', 'pl-3'], {}, '직업 설정 (Occupation)'));\n        const occupationInnerDiv = createElement('div', ['mt-0']);\n        occupationInnerDiv.appendChild(createSelectDropdown(Category.OCCUPATION, Category.OCCUPATION, OCCUPATION_OPTIONS, selections[Category.OCCUPATION], (e) => handleOccupationChange(e.target.value), 'text-neutral-dark mb-2'));\n        occupationInnerDiv.appendChild(createTextInput('customOccupationDetail', '또는 직접 직업 입력 (Or type custom occupation)...', selections.customOccupationDetail, (e) => handleCustomOccupationDetailChange(e)));\n        occupationDiv.appendChild(occupationInnerDiv);\n        optionsPanel.appendChild(occupationDiv);\n\n        // Randomize Others Button and Art Style/Framing/Ratio\n        const randomizeAndArtDiv = createElement('div');\n        randomizeAndArtDiv.appendChild(createButton('randomizeOthersBtn', '선택 캐릭터 외 랜덤 조합 (Randomize Others)', DiceIconSVG, handleRandomizeRemainingDetails, ['w-full', 'mb-4', 'bg-teal-500', 'hover:bg-teal-600', 'text-white', 'font-semibold', 'py-2.5', 'px-4', 'rounded-lg', 'shadow-md', 'hover:shadow-lg', 'transition', 'duration-150', 'ease-in-out', 'focus:outline-none', 'focus:ring-2', 'focus:ring-teal-300', 'focus:ring-opacity-50', 'flex', 'items-center', 'justify-center', 'transform', 'hover:scale-105']));\n        randomizeAndArtDiv.appendChild(createElement('h3', ['text-xl', 'font-semibold', 'mb-4', 'text-neutral-light', 'border-l-4', 'border-brand-secondary', 'pl-3'], {}, '화풍, 구도 및 비율 (Art Style, Framing & Ratio)'));\n        const artStyleGrid = createElement('div', ['grid', 'grid-cols-1', 'sm:grid-cols-2', 'md:grid-cols-3', 'gap-4']);\n        artStyleGrid.appendChild(createSelectDropdown(Category.STYLE, Category.STYLE, STYLE_OPTIONS, selections[Category.STYLE], (e) => handleSimpleSelectionChange(Category.STYLE, e.target.value), 'text-neutral-dark'));\n        artStyleGrid.appendChild(createSelectDropdown(Category.FRAMING, Category.FRAMING, FRAMING_OPTIONS, selections[Category.FRAMING], (e) => handleSimpleSelectionChange(Category.FRAMING, e.target.value), 'text-neutral-dark'));\n        artStyleGrid.appendChild(createSelectDropdown(Category.ASPECT_RATIO, Category.ASPECT_RATIO, ASPECT_RATIO_OPTIONS, selections[Category.ASPECT_RATIO], (e) => handleSimpleSelectionChange(Category.ASPECT_RATIO, e.target.value), 'text-neutral-dark'));\n        randomizeAndArtDiv.appendChild(artStyleGrid);\n        optionsPanel.appendChild(randomizeAndArtDiv);\n\n        // Complex Categories\n        const complexCategoryConfigs = [\n            { type: 'expression', label: Category.EXPRESSION, subCategoryList: EXPRESSION_SUB_CATEGORY_LIST, detailOptionsMap: EXPRESSION_DETAIL_OPTIONS },\n            { type: 'action', label: Category.ACTION, subCategoryList: ACTION_SUB_CATEGORY_LIST, detailOptionsMap: ACTION_DETAIL_OPTIONS },\n            { type: 'clothing', label: Category.CLOTHING, subCategoryList: CLOTHING_SUB_CATEGORY_LIST, detailOptionsMap: CLOTHING_DETAIL_OPTIONS },\n            { type: 'accessories', label: Category.ACCESSORIES, subCategoryList: ACCESSORIES_SUB_CATEGORY_LIST, detailOptionsMap: ACCESSORIES_DETAIL_OPTIONS },\n            { type: 'background', label: Category.BACKGROUND, subCategoryList: BACKGROUND_SUB_CATEGORY_LIST, detailOptionsMap: BACKGROUND_DETAIL_OPTIONS },\n        ];\n\n        complexCategoryConfigs.forEach(config => {\n            const catDiv = createElement('div', [], { id: `${config.type}Container`});\n            catDiv.appendChild(createElement('h3', ['text-xl', 'font-semibold', 'mb-4', 'text-neutral-light', 'border-l-4', 'border-brand-secondary', 'pl-3'], {}, config.label.replace('\\\\n', ' ')));\n            const catGrid = createElement('div', ['grid', 'grid-cols-1', 'sm:grid-cols-2', 'gap-x-4']);\n            \n            catGrid.appendChild(createSelectDropdown(\n                `${config.type}SubCategory`, \n                `${config.label.split('\\n')[0]} 타입 (Type)`, \n                config.subCategoryList, \n                selections[`${config.type}SubCategory`], \n                (e) => handleSubCategoryChange(config.type, e.target.value),\n                'text-neutral-dark'\n            ));\n            \n            const detailContainer = createElement('div');\n            const currentSubCategoryValue = selections[`${config.type}SubCategory`] || (config.subCategoryList.length > 0 ? config.subCategoryList[0].value : undefined);\n            const currentDetailOptions = currentSubCategoryValue ? (config.detailOptionsMap[currentSubCategoryValue] || [NONE_OPTION]) : [NONE_OPTION];\n            \n            detailContainer.appendChild(createSelectDropdown(\n                `${config.type}Option`, \n                `세부 ${config.label.split('\\n')[0]} (Detail)`, \n                currentDetailOptions, \n                selections[`${config.type}Option`], \n                (e) => handleDetailOptionChange(config.type, e.target.value),\n                'text-neutral-dark mb-2'\n            ));\n            detailContainer.appendChild(createTextInput(\n                `custom${config.type.charAt(0).toUpperCase() + config.type.slice(1)}Detail`,\n                `또는 직접 입력 (Or type custom ${config.type})...`,\n                selections[`custom${config.type.charAt(0).toUpperCase() + config.type.slice(1)}Detail`],\n                (e) => handleCustomDetailChange(config.type, e.target.value)\n            ));\n            catGrid.appendChild(detailContainer);\n            catDiv.appendChild(catGrid);\n            optionsPanel.appendChild(catDiv);\n        });\n\n        optionsPanel.appendChild(createButton('generatePromptBtn', '프롬프트 생성 (Generate Prompt)', null, constructPrompt, ['w-full', 'mt-6', 'bg-gradient-to-r', 'from-brand-primary', 'to-brand-secondary', 'hover:from-brand-secondary', 'hover:to-brand-primary', 'text-white', 'font-semibold', 'py-3', 'px-6', 'rounded-lg', 'shadow-md', 'hover:shadow-lg', 'transform', 'hover:scale-105', 'transition', 'duration-300', 'ease-in-out', 'focus:outline-none', 'focus:ring-2', 'focus:ring-brand-accent', 'focus:ring-opacity-50']));\n        main.appendChild(optionsPanel);\n\n        // Results Panel (placeholder, will be populated by renderResultsPanel)\n        const resultsPanel = createElement('section', ['bg-gray-800', 'p-6', 'rounded-xl', 'shadow-2xl', 'border', 'border-gray-700', 'space-y-4'], { id: 'resultsPanel' });\n        main.appendChild(resultsPanel);\n        renderResultsPanel(); // Initial render of results panel\n\n        root.appendChild(main);\n\n        // Footer\n        const footer = createElement('footer', ['w-full', 'max-w-5xl', 'mt-12', 'text-center', 'text-neutral-medium', 'text-sm', 'space-y-3']);\n        footer.appendChild(createElement('p', [], {}, `Created by GPT PARK © ${new Date().getFullYear()}. GPT PARK의 AI 이미지 프롬프트 생성기.`));\n        const youtubeLink = createElement('a', ['inline-flex', 'items-center', 'justify-center', 'bg-red-600', 'hover:bg-red-700', 'text-white', 'font-semibold', 'py-2', 'px-4', 'rounded-lg', 'shadow-md', 'hover:shadow-lg', 'transition', 'duration-300', 'ease-in-out', 'transform', 'hover:scale-105', 'focus:outline-none', 'focus:ring-2', 'focus:ring-red-400', 'focus:ring-opacity-50'], { href: \"https://www.youtube.com/@AIFACT-GPTPARK\", target: \"_blank\", rel: \"noopener noreferrer\", 'aria-label': \"GPT PARK 유튜브 채널 방문\" }, YouTubeIconSVG + 'GPT PARK 유튜브 채널 (YouTube)');\n        footer.appendChild(youtubeLink);\n        root.appendChild(footer);\n      }\n\n      function renderResultsPanel() {\n        const resultsPanel = document.getElementById('resultsPanel');\n        if (!resultsPanel) return;\n        resultsPanel.innerHTML = ''; // Clear previous results\n\n        resultsPanel.appendChild(createElement('h2', ['text-2xl', 'font-semibold', 'mb-3', 'text-brand-accent', 'border-b-2', 'border-brand-accent', 'pb-2'], {}, '결과 (Results)'));\n\n        if (error) {\n          const errorDiv = createElement('div', ['bg-red-100', 'border-l-4', 'border-red-500', 'text-red-700', 'p-4', 'my-4', 'rounded-md', 'shadow-md'], { role: 'alert' });\n          errorDiv.appendChild(createElement('p', ['font-bold'], {}, '오류 (Error)'));\n          errorDiv.appendChild(createElement('p', [], {}, error));\n          resultsPanel.appendChild(errorDiv);\n        }\n\n        const createPromptSection = (id, title, promptText, copyHandler, copiedFlag, buttonTextPrefix, bgColorClass, borderColorClass, titleColorClass, textBgClass, buttonBgClass, buttonHoverBgClass, buttonRingClass) => {\n            if (!promptText) return null;\n            const sectionDiv = createElement('div', ['p-4', 'rounded-xl', bgColorClass, 'border', borderColorClass]);\n            sectionDiv.appendChild(createElement('h3', ['text-xl', 'font-semibold', 'mb-2', titleColorClass], {}, title));\n            const promptDisplay = createElement('div', [textBgClass, 'p-3', 'rounded-lg', 'text-neutral-extralight', 'text-sm', 'leading-relaxed', 'shadow-inner', 'break-words']);\n            promptDisplay.appendChild(createElement('p', [], {}, promptText));\n            sectionDiv.appendChild(promptDisplay);\n            \n            const buttonText = copiedFlag ? `${buttonTextPrefix.split(' ')[0]} 복사됨! (Copied!)` : `${buttonTextPrefix} 프롬프트 복사`;\n            sectionDiv.appendChild(createButton(\n                `copy${id}Prompt`,\n                buttonText,\n                ClipboardIconSVG,\n                () => copyHandler(promptText, id.toLowerCase()),\n                ['w-full', 'mt-3', buttonBgClass, buttonHoverBgClass, 'text-white', 'font-semibold', 'py-2', 'px-4', 'rounded-lg', 'shadow-sm', 'hover:shadow-md', 'transition', 'duration-150', 'ease-in-out', 'focus:outline-none', 'focus:ring-2', buttonRingClass, 'focus:ring-opacity-50', 'flex', 'items-center', 'justify-center'],\n                copiedFlag ? `${buttonTextPrefix} 프롬프트 복사됨` : `${buttonTextPrefix} 프롬프트 복사`\n            ));\n            return sectionDiv;\n        };\n        \n        const generalPromptSection = createPromptSection('General', 'DALL·E 2 / Bing Image Creator / Google Image-FX 프롬프트 (For DALL·E 2 / Bing Image Creator / Google Image-FX):', generatedPrompt, handleCopyPrompt, promptCopied, 'DALL·E 2/Bing/Image-FX', 'bg-gray-700', 'border-gray-600', 'text-neutral-light', 'bg-gray-600', 'bg-gray-500', 'hover:bg-gray-400', 'focus:ring-gray-300');\n        if(generalPromptSection) resultsPanel.appendChild(generalPromptSection);\n\n        const imageFXPromptSection = createPromptSection('ImageFX', 'GPT-4o / DALL·E 3 / OpenAI API 프롬프트 (For GPT-4o / DALL·E 3 / OpenAI API):', generatedImageFXPrompt, handleCopyPrompt, imageFXPromptCopied, 'GPT-4o/DALL·E 3/API', 'bg-blue-950', 'border-blue-800', 'text-blue-300', 'bg-blue-900', 'bg-blue-700', 'hover:bg-blue-600', 'focus:ring-blue-500');\n        if(imageFXPromptSection) resultsPanel.appendChild(imageFXPromptSection);\n\n        const midjourneyPromptSection = createPromptSection('Midjourney', 'Midjourney 프롬프트 (For Midjourney):', generatedMidjourneyPrompt, handleCopyPrompt, midjourneyPromptCopied, 'Midjourney', 'bg-purple-950', 'border-purple-800', 'text-purple-300', 'bg-purple-900', 'bg-purple-700', 'hover:bg-purple-600', 'focus:ring-purple-500');\n        if(midjourneyPromptSection) resultsPanel.appendChild(midjourneyPromptSection);\n        \n        const stableDiffusionSection = createPromptSection('StableDiffusion', 'Stable Diffusion 프롬프트 (For WebUI, ComfyUI, InvokeAI etc.):', generatedStableDiffusionPrompt, handleCopyPrompt, stableDiffusionPromptCopied, 'Stable Diffusion', 'bg-teal-950', 'border-teal-800', 'text-teal-300', 'bg-teal-900', 'bg-teal-700', 'hover:bg-teal-600', 'focus:ring-teal-500');\n         if(stableDiffusionSection) {\n            // For Stable Diffusion, ensure pre-line for the negative prompt\n            const promptDisplayDiv = stableDiffusionSection.querySelector('.bg-teal-900');\n            if(promptDisplayDiv) promptDisplayDiv.classList.add('whitespace-pre-line');\n            resultsPanel.appendChild(stableDiffusionSection);\n        }\n\n\n        if (!generatedPrompt && !generatedImageFXPrompt && !generatedMidjourneyPrompt && !generatedStableDiffusionPrompt && !error) {\n          const placeholderDiv = createElement('div', ['text-center', 'text-neutral-medium', 'py-10']);\n          const placeholderSVG = `\n`;\n          placeholderDiv.innerHTML = placeholderSVG;\n          placeholderDiv.appendChild(createElement('p', [], {}, '옵션을 선택하고 프롬프트를 생성해보세요.\n(Select options and generate a prompt.)'));\n          resultsPanel.appendChild(placeholderDiv);\n        }\n      }\n\n      // --- Initialization ---\n      document.addEventListener('DOMContentLoaded', renderApp);",
    "reviews": [],
    "syllabus": [],
    "link": "http://muzbox.tistory.com/483603",
    "pubDate": "Wed, 4 Jun 2025 07:19:12 +0900",
    "creator": "어떤오후의 프리웨어 이야기",
    "categories": [
      "AI, 미래기술/AI 인사이트",
      "ai이미지생성",
      "DALL&middot;E",
      "Midjourney",
      "Sora",
      "Stable Diffusion",
      "미드저니",
      "이미지 생성 프롬프트",
      "인공지능",
      "챗GPT",
      "프롬프트 생성기"
    ]
  },
  {
    "id": 12,
    "imageUrl": "",
    "title": "Looking Back on the Past 10 Years",
    "description": "Today marks exactly 10 years since I joined Sendbird. On May 30, 2015, I still remember walking into Maru180, a co-working space in Yeoksam, Seoul, plugging in my personal laptop, and getting to work. I wrote our very first company deck under the name “Jiver,” and we wrapped up the day with a small welcomeContinue reading \"Looking Back on the Past 10 Years\"\nLooking Back on the Past 10 Years appeared first on Kimchi hill.",
    "reviews": [],
    "syllabus": [],
    "link": "https://kimchihill.com/2025/05/30/looking-back-on-the-past-10-years/?utm_source=rss&utm_medium=rss&utm_campaign=looking-back-on-the-past-10-years",
    "pubDate": "Fri, 30 May 2025 04:45:09 +0000",
    "creator": "kimchihill",
    "categories": [
      "Korean essay"
    ]
  },
  {
    "id": 13,
    "imageUrl": "",
    "title": "앱 개발 개척시대",
    "description": "AI 시대에는 개발자가 유리한가?\n다 똑같다고 생각합니다. 모두가 같은 출발선.\n제가 공부한 모든 컴퓨터 공학 지식의 가치를 0으로 설정했습니다.\n서부 개척시대에서 요이땅 하고 땅따먹기를 하러 가는 느낌입니다.\n어쩌면 이게 제 개발자 경력의 마지막은 아닐까?\n\n\n함께 읽으면 좋은 글:\n1인 개발자 전성시대\n1인 개발이란 전쟁터에서 혼자 살아남는 것",
    "reviews": [],
    "syllabus": [],
    "link": "https://jeho.page/essay/2025/06/05/at-the-app-development-race.html",
    "pubDate": "2025-06-05T02:44:00.000Z",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 14,
    "imageUrl": "",
    "title": "대환대출로 신용대출 이자 줄일 수 있어요",
    "description": "이자 부담 줄일 수 있는 신용대출 갈아타기",
    "reviews": [],
    "syllabus": [],
    "link": "https://toss.im/tossfeed/article/tossmoment-11",
    "pubDate": "Thu, 05 Jun 2025 06:31:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 15,
    "imageUrl": "",
    "title": "지난 10년을 회고하며",
    "description": "오늘은 제가 센드버드에 입사한 지 정확히 10년이 되는 날입니다.10년 전 오늘, 2015년 5월 30일, 역삼동의 스타트업 공간 마루180에서 제 개인 노트북을 연결해 첫 업무를 시작했던 기억이 생생합니다. ‘자이버’라는 이름으로 사업 소개서를 만들고, 저녁에는 ‘화덕’이라는 치킨집에서 환영회를 했던 풍경도 아직 떠오릅니다. 돌아보면, 만약 지금까지 해야만 했던 경험들을 10년 전의 제가 미리 알았더라면, 스타트업이라는 선택 자체를 망설였을지도Continue reading \"지난 10년을 회고하며\"\n지난 10년을 회고하며 appeared first on Kimchi hill.",
    "reviews": [],
    "syllabus": [],
    "link": "https://kimchihill.com/2025/05/30/kr-looking-back-on-the-past-10-years/?utm_source=rss&utm_medium=rss&utm_campaign=kr-looking-back-on-the-past-10-years",
    "pubDate": "Fri, 30 May 2025 04:34:54 +0000",
    "creator": "kimchihill",
    "categories": [
      "Korean essay"
    ]
  }
]