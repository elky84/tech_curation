[
  {
    "id": 1,
    "imageUrl": "",
    "title": "A New Ranking Framework for Better Notification Quality on Instagram",
    "description": "We’re sharing how Meta is applying machine learning (ML) and diversity algorithms to improve notification quality and user experience.  We’ve introduced a diversity-aware notification ranking framework to reduce uniformity and deliver a more varied and engaging mix of notifications. This new framework reduces the volume of notifications and drives higher engagement rates through more diverse [...]\nRead More...\nThe post A New Ranking Framework for Better Notification Quality on Instagram appeared first on Engineering at Meta.",
    "reviews": [],
    "syllabus": [],
    "link": "https://engineering.fb.com/2025/09/02/ml-applications/a-new-ranking-framework-for-better-notification-quality-on-instagram/",
    "pubDate": "Tue, 02 Sep 2025 16:00:08 +0000",
    "creator": "Unknown",
    "categories": [
      "ML Applications",
      "Instagram"
    ]
  },
  {
    "id": 2,
    "imageUrl": "",
    "title": "비만약 2년 미국에서 발생하는 부작용",
    "description": "최근 노보노디스크 일라일리 등의 주가가 많이 빠졌는데\n비만약 부작용 소송때문이였군요\n영상에서는 성능이 워낙 좋다보니 사람들이 적당히 끊어야하는데 더 많이 오래 쓰다가 부작용이 생기는거 같습니다.\n연예인들 사진보니 못 끊을만 하군요 체형이 바뀌네요 ㄷㄷ\n \n영상: https://www.youtube.com/watch?v=4HFkbeGrHM0",
    "reviews": [],
    "syllabus": [],
    "link": "http://serverdown.tistory.com/1385",
    "pubDate": "Tue, 2 Sep 2025 15:42:11 +0900",
    "creator": "SIDNFT",
    "categories": [
      "비만약"
    ]
  },
  {
    "id": 3,
    "imageUrl": "",
    "title": "Enhanced Vulnerable API Detection in JetBrains IDEs and Qodana",
    "description": "At the start of the year, we announced a partnership with Mend.io to maximize code security in JetBrains tools. The partnership provided us with quality data about vulnerable and malicious packages, allowing our IDEs and Qodana to spot them for you in your projects. Over the last few months, we have been working on integrating […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/idea/2025/09/enhanced-vulnerable-api-detection-in-jetbrains-ides-and-qodana/",
    "pubDate": "Wed, 03 Sep 2025 08:20:35 +0000",
    "creator": "Dmitry Protsenko",
    "categories": [
      "news",
      "plugins",
      "package-checker",
      "security-checks"
    ]
  },
  {
    "id": 4,
    "imageUrl": "",
    "title": "RubyMine Is Now Free for Non-Commercial Use",
    "description": "Hold on to your helper methods – RubyMine is now FREE for non-commercial use! Whether you’re learning Ruby and Rails, pushing open-source forward, creating dev content, or building your passion project, we want to make sure you have the tools to enjoy what you do even more… for free. Another chapter in the story We […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/ruby/2025/09/rubymine-is-now-free-for-non-commercial-use/",
    "pubDate": "Tue, 02 Sep 2025 10:58:39 +0000",
    "creator": "Iryna Pisklyarova",
    "categories": [
      "releases",
      "rubymine",
      "news"
    ]
  },
  {
    "id": 5,
    "imageUrl": "",
    "title": "Boost Your Copilot Collaboration with Reusable Prompt Files",
    "description": "Writing effective prompts for AI tools can be time-consuming and challenging. Cement those efforts by leveraging reusable prompt files. These custom prompts allow for quick access at the prompt box, and they’re automatically stored and shared with your teammates to make it easy to multiply your Copilot successes.   Reusable prompt files solve the prompt-writing challenge  Reusable prompt files let you write, save, and run prompts right […]\nThe post Boost Your Copilot Collaboration with Reusable Prompt Files appeared first on Visual Studio Blog.",
    "reviews": [],
    "syllabus": [],
    "link": "https://devblogs.microsoft.com/visualstudio/boost-your-copilot-collaboration-with-reusable-prompt-files/",
    "pubDate": "Tue, 02 Sep 2025 12:00:42 +0000",
    "creator": "Jessie Houghton",
    "categories": [
      "Visual Studio",
      "Customization",
      "GitHub Copilot",
      "GitHub Copilot Chat",
      "Prompting"
    ]
  },
  {
    "id": 6,
    "imageUrl": "",
    "title": "정규표현식 성능을 높이려면",
    "description": "정규표현식 메타문자의 성능 우선순위가 있느냐는 질문을 받았다. 일단 메타문자는 검사 범위의 차이를 가지고 있을 뿐, 성능 차이는 없다. 하지만 성능 우열을 결정할 수는 있다. 기준은 내가 찾으려는 문자열의 위치. \n\n\n수량자는 최대 검사모드가 디폴트이기 때문에 .*은 입력 순간 모든 문자를 검사한다. 이후 종료 문자인 b를 찾아야 하는데 b의 위치는 뒤에서 두 번째이므로 한 단계만 뒤로 후퇴하면 끝.\n\n\n\n\n\nb의 위치가 바뀌면?\n\n\n같은 정규표현식임에도 .*으로 모든 문자를 검사한 상태에서 앞부분에 위치한 b를 찾기 위해 수백 단계의 후퇴 과정이 발생한다.\n\n\n\n\n\n수량자 최소 검사모드\n\n\n*?는 최소 검사모드이기 때문에 앞에서부터 하나씩 검사한다. 결과적으로 뒤에서 두 번째 위치하는 b를 찾기 위해 수백 단계의 검사 과정 발생.\n\n\n\n그래서 b가 앞부분에 있을 때는 검사가 순식간에 끝난다.\n\n\n\n정규표현식을 잘 쓰고 싶다면 정규표현식이 아닌 데이터에 집중해야 한다.\n\n정규표현식 3원칙\n\n검사 대상 문자열에 대한 충분한 이해\n뚜렷한 검사 목적\n정규표현식에 대한 충분한 이해 \n\n이 책이 끝날 때까지 이 3원칙, 특히 대상 문자열에 대한 이해의 중요성을 지겹게 강조하는 나를 만나게 될 것이다. - 데이터 분석이 쉬워지는 정규표현식 (57페이지)\n\n\n\n관련 글\n\n정규표현식이 최선일까?\n정규표현식 몰라도 된다",
    "reviews": [],
    "syllabus": [],
    "link": "https://kangmyounghun.blogspot.com/2025/08/blog-post.html",
    "pubDate": "2025-08-30T06:30:00.004Z",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 7,
    "imageUrl": "",
    "title": "해적정신이 울려퍼진 토스 얼라인먼트 위크",
    "description": "2025년 하반기 토스 얼라인먼트 위크, 그 뜨거운 순간을 공개합니다",
    "reviews": [],
    "syllabus": [],
    "link": "https://toss.im/tossfeed/article/alignmentweek25",
    "pubDate": "Wed, 03 Sep 2025 02:41:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 8,
    "imageUrl": "",
    "title": "오픈챗 메시지들로부터 트렌딩 키워드 추출하기",
    "description": "들어가며안녕하세요. AI Services Lab 팀의 ML 엔지니어 박희웅입니다. 저희 팀에서는 LINE 오픈챗과 관련해 다양한 AI/ML 모델을 개발해 서빙하고 있는데요. 지난 ...",
    "reviews": [],
    "syllabus": [],
    "link": "https://techblog.lycorp.co.jp/ko/extracting-trending-keywords-from-openchat-messages",
    "pubDate": "Fri, 29 Aug 2025 02:00:00 GMT",
    "creator": "Unknown",
    "categories": []
  },
  {
    "id": 9,
    "imageUrl": "",
    "title": "나노바나나를 가장 스마트하게 사용하는 법. 바나나 캔버스 무료 공개",
    "description": "AI 이미지 생성과 편집의 새로운 지평을 연 구글의 제미나이 2.5 Flash Image, 일명 나노바나나를 가장 스마트하게 활용하는 법을 소개합니다. 특히 나노바나나의 강력한 기능을 누구나 쉽게 사용할 수 있도록 무료로 공개된 '바나나 캔버스' 앱의 모든 것을 파헤쳐 볼게요. AI 이미지 작업에 관심 있는 분들이라면 이 글을 통해 놀라운 신세계를 경험하게 되실 겁니다.\n  나노바나나, 과연 무엇일까요?\n\n\n여러분, 혹시 나노바나나라는 이름을 들어보셨나요? 이름만 들어도 뭔가 귀엽고 동시에 최첨단 느낌이 들죠? 사실 이 매력적인 이름은 구글이 공식 발표한 제미나이 2.5 Flash Image 모델에 커뮤니티에서 붙여준 별명이에요. 왜 하필 '나노바나나'인지는 정확히 알려지지 않았지만, 확실히 더 친숙하게 느껴지는 건 저뿐만이 아닐 겁니다.\n중요한 점은 나노바나나가 단순히 이미지를 생성하는 수준을 넘어섰다는 거예요. 기존 AI 이미지 도구들과는 차원이 다른 성능을 보여줍니다. 텍스트 기반 생성 및 편집 기능이 업그레이드되었을 뿐만 아니라, 특히 캐릭터 일관성 유지와 다중 이미지 합성 능력을 혁신적으로 강화했죠. 이제 어떤 놀라운 일들을 할 수 있는지 구체적으로 파고들어 볼까요?\n✨ 나노바나나의 핵심 기능 3가지\n1. 놀라운 캐릭터 일관성 유지\n이 기능은 정말 많은 분들이 기다려왔던 혁신일 거예요. 기존 AI 도구들은 같은 캐릭터를 여러 장면에서 그릴 때마다 얼굴이 미묘하게 달라지는 문제가 있었거든요. 마치 쌍둥이인데 디테일이 조금씩 다른 느낌이랄까요? 나노바나나는 이 문제를 완전히 해결했습니다!\n비밀은 '정체성 임베딩 고정 기술'에 있습니다. 캐릭터의 얼굴 윤곽, 눈코입 비율, 헤어스타일, 의상 특징 등을 디지털 지문처럼 저장하고, 새로운 장면을 만들 때마다 이 지문을 참조해서 동일한 캐릭터를 완벽하게 유지하는 거죠. 예를 들어, 원본 캐릭터에게 \"이 사람을 웃게 해줘. 안경을 씌워줘.\"라고 명령하면, AI는 캐릭터의 고유 지문에 웃는 표정과 안경을 자연스럽게 적용해준답니다. 정말 대단하지 않나요?\n2. 여러 이미지를 하나로 합치는 마법 같은 합성 능력\n두 번째 핵심 기능은 다중 이미지 합성 능력입니다. 예를 들어, 가족사진과 환상적인 풍경 사진이 있다고 해보세요. 나노바나나에게 \"이 가족을 저 배경에 자연스럽게 배치해줘\"라고 요청하면, AI는 조명, 그림자, 원근감까지 모두 고려해서 원래부터 그 배경에서 찍었던 것처럼 완벽하고 자연스러운 합성 이미지를 만들어줍니다. 합성 티가 전혀 나지 않는다는 게 정말 핵심이죠.\n3. 오차 없는 정확한 텍스트 표현\n마지막은 이미지 내 텍스트를 정확하게 표현하는 능력입니다. 기존 AI 이미지 도구들은 글자를 넣어달라고 하면 뒤틀리거나 깨지는 경우가 많았어요. 하지만 나노바나나는 로고, 포스터, 간판 등 어떤 시각물을 만들 때도 글자를 정확하고 깔끔하게 넣어줍니다.\n예를 들어, 특정 웨비나 안내 포스터를 \"텍스트는 영어로\" 지정해서 만들어달라고 하면, 텍스트 내용까지 정확하게 반영된 이미지를 생성해줍니다. 아직 한글 렌더링은 지원하지 않지만, 현재 결과물을 보면 조만간 한글도 완벽하게 지원할 날이 머지않았다는 생각이 들어요. 정말 기대되는 부분이죠.\n  나노바나나, 기존 툴과 무엇이 다를까? (VS 포토샵)\n혹시 이런 생각 해보셨을 수도 있어요. \"이런 기능들, 포토샵 같은 전문 이미지 편집 프로그램으로도 할 수 있는 거 아닌가?\" 네, 맞아요. 기존 툴로도 할 수 있는 작업들이었죠. 하지만 여기서 우리가 주목해야 할 결정적인 차이점들이 있습니다. AI가 가져온 혁신이 무엇인지 명확히 알 수 있는 부분이에요.\n1. 압도적인 작업 시간 단축\n가장 먼저 체감할 수 있는 차이는 작업 시간의 엄청난 격차입니다. 포토샵에서 한 사람의 얼굴 표정을 바꾸려면 숙련된 디자이너라도 몇 시간은 걸릴 작업일 겁니다. 그런데 나노바나나는 \"이 사람을 웃게 해줘\"라고 한 마디만 하면 10초 안에 결과를 보여줍니다. 이게 바로 AI의 힘이자, 우리가 AI를 주목해야 하는 이유죠.\n2. 전문가 수준의 기술적 난이도 해소\n두 번째는 기술적 난이도입니다. 포토샵으로 자연스러운 합성을 하려면 조명, 그림자, 색온도, 원근감까지 모든 요소를 수동으로 맞춰야 합니다. 이건 전문 지식과 경험이 없으면 불가능에 가까운 작업이에요. 나노바나나는 이 모든 것을 AI가 알아서 계산하고 처리해줍니다. 일반 사용자 입장에서는 정말 꿈같은 일이죠.\n3. 무한한 창의적 가능성 확장\n마지막은 창의적 가능성입니다. 포토샵은 '기존 편집' 도구에 가깝지만, 나노바나나는 '없던 것을 새로 만들어내는' 생성형 AI예요. \"이 사람을 중세 시대 기사로 만들어줘\"라고 입력하면, 갑옷부터 배경까지 모든 것을 새로 생성해서 자연스럽게 합성해줍니다. 포토샵으로는 상상하기 힘들 정도로 복잡한 작업이죠.\n  핵심 포인트: 나노바나나는 속도, 쉬운 접근성, 무한한 생성력 면에서 기존 툴을 압도합니다. 전문 지식 없이도 높은 퀄리티의 결과물을 얻을 수 있다는 점이 가장 큰 매력이죠.\n⚠️ 주의해야 할 점도 있어요\n물론 나노바나나가 혁신적인 도구인 건 분명하지만, 만능은 아닙니다. AI 기반 도구들이 가진 몇 가지 주의할 점들도 분명히 존재해요. 이 점들을 잘 이해하고 사용한다면 훨씬 더 스마트하게 나노바나나를 활용할 수 있을 거예요.\n1. 정확성과 일관성 문제\n포토샵은 사용자가 원하는 대로 정확히 조작할 수 있지만, AI는 가끔 예상과 다른 결과를 만들어내기도 해요. 복잡한 요구사항일수록 원하는 결과를 얻기까지 여러 번 시도하거나 프롬프트를 수정해야 할 수도 있습니다.\n2. 세밀한 컨트롤의 한계\n포토샵은 픽셀 단위로 정밀하게 수정 가능하지만, AI는 아직 그 정도의 세밀한 조정 능력은 부족합니다. 전체적인 느낌은 훌륭하지만, 특정 부분의 디테일한 요청은 한계가 있을 수 있어요.\n3. 예측 불가능성\n같은 프롬프트를 입력해도 AI는 매번 조금씩 다른 결과를 내놓을 수 있습니다. 이것이 창의성 측면에서는 장점이지만, 정확히 예측 가능한 결과가 필요한 작업에서는 단점이 될 수 있죠.\n결론적으로, AI 이미지 편집은 빠르고, 쉽고, 창의적인 작업에는 혁신적입니다. 하지만 정밀하고 예측 가능한 전문 작업에서는 기존 툴들과 함께 사용하는 것이 현명하다고 생각해요. 특히 우리 같은 일반 사용자들에게는 나노바나나 같은 AI 도구가 정말 게임 체인저가 될 수 있다는 사실은 변함없죠. 무료로 사용할 수 있다는 점도 큰 장점입니다.\n  나노바나나로 나만의 앱 만들기: 두 가지 접근법\n이렇게 강력한 나노바나나 기능을 활용해서 나만의 AI 앱을 직접 만들어 볼 수 있다는 사실, 알고 계셨나요? 저는 두 가지 방법으로 접근해봤고, 과정이 정말 흥미로웠답니다!\n1. '바이브 코딩 아이디어 챗봇' 활용\n\n\n\n\n'바이브 코딩 아이디어 챗' 실행 후, 나노바나나의 새 기능(일관성 유지, 자연스러운 합성, 정밀 수정)을 활용한 앱 아이디어(원본 사진 업로드 후 합성/복원/컬러화)를 요청했습니다.\n챗봇과 대화하며 앱 제작 질문 10개를 완성, 이를 복사하여 AI STUDIO의 BUILD에 순차적으로 입력했습니다. (한 번에 다 넣기보단 한두 개씩 빌드업 추천!)\n처음엔 UI가 영어로, 합성 기능에 에러가 있었지만, '한국어 버전으로 변경', '프롬프트 결과를 흰색으로 변경', 'Auto Fix' 기능 등을 활용해 해결했습니다. 사진 복원 기능도 나중에 복원, 컬러화, 업스케일 기능을 추가 요청하여 완성했죠. 바이브 코딩은 때론 디버깅이 필요하답니다.\n바이브코딩 아이디어 챗 + 나노바나나 활용 앱 바로가기\n \n2. 구글 나노바나나 프롬프트 가이드 기반 제작\n\n\n\nAI STUDIO 설정에서 나노 이미지 문서 페이지로 이동, '프롬프트 엔지니어링' 섹션의 가이드 내용을 메모장에 저장했습니다.\nBUILD 섹션에서 저장한 가이드를 업로드하고 \"첨부 문서를 분석하고, 문서에 포함된 모든 이미지 생성, 편집과 프롬프트 기법이 반영된 한글 앱을 만들어\"라고 요청했습니다.\n프롬프트 가이드 기반 앱도 잘 작동하는 것을 확인했어요. 바이브 코딩은 직접 요청, 디자인 제공, 문서 학습 등 다양한 방식으로 사용자가 원하는 결과를 얻을 수 있도록 돕는 유연한 플랫폼입니다.\n \n나노바나나 프로프트 엔지니어링 가이드 활용한 앱 바로가기\n \n  바나나 캔버스 무료 공개! 스마트 이미지 작업의 시작\n\n\n이런 과정을 거쳐 제가 만든 앱이 바로 '바나나 캔버스'입니다. 이 앱은 구글의 제미나이 2.5 Flash Image (나노바나나)와 이마젠 4.0을 기반으로 한 올인원 이미지 생성 및 편집 도구예요. 직접 써보니 정말 상상 이상의 편리함을 제공하더군요.\n바나나 캔버스는 텍스트 설명만으로 이미지를 창조하고, 기존 이미지를 전문가 수준으로 편집하며, 여러 이미지를 창의적으로 합성하는 등 다채로운 시각적 작업을 지원합니다. 핵심 차별점은 강력한 '프롬프트 제안' 기능이에요. AI가 사용자의 의도를 분석해 최적의 지시문을 자동 생성해주므로, 복잡한 프롬프트 지식 없이도 누구나 전문가 수준의 결과물을 손쉽게 얻을 수 있습니다.\n ️ 바나나 캔버스 화면 구성 한눈에 보기 (입력-제어-결과)\n바나나 캔버스는 사용자가 직관적으로 작업 흐름을 따라갈 수 있도록 '입력, 제어, 결과'의 3단 구조로 화면이 설계되어 있어요. 왼쪽에서 오른쪽으로 자연스럽게 작업이 진행되어 처음 사용하는 분들도 어렵지 않을 겁니다.\n1. 왼쪽: 모든 작업의 시작점 '입력'\n모든 작업의 시작점. 텍스트로 새 이미지를 만들거나, PC 이미지를 불러와 '빠른 작업'을 실행할 수 있습니다.\n2. 중앙: 핵심 제어 영역 '편집 및 합성'\n이미지 편집과 합성의 핵심. 불러온 이미지의 스타일 변경이나 여러 이미지 합성 등 구체적인 지시를 내리는 곳입니다.\n3. 오른쪽: 최종 결과 확인 영역 '결과'\nAI가 생성한 최종 결과물 표시 영역. 로딩, 오류, 완성 이미지 확인 및 저장 공간입니다.\n ️ 바나나 캔버스의 주요 기능 상세 가이드\n이제 바나나 캔버스가 제공하는 주요 기능들을 좀 더 자세히 알아볼 시간이에요. 정말 다재다능한 툴이라는 걸 느끼실 겁니다.\n1. 텍스트로 새 이미지 만들기\n아이디어만으로 완전히 새로운 이미지를 만들어내는 기능. 아이디어 입력 → 카테고리 선택 → 종횡비 선택 → 이미지 생성 순으로 진행합니다. \"밤하늘을 나는 고래\"처럼 간단한 아이디어를 입력해도 AI가 전문적인 지시문으로 자동 변환해주니, 프롬프트 지식 없이도 전문가 수준의 결과물을 얻을 수 있어요.\n2. 이미지를 업로드하고 '빠른 작업' 활용하기\nPC 이미지를 불러와 모든 작업의 기준으로 삼는 기능. 업로드 후 '빠른 작업'으로 자주 사용하는 편집을 원클릭으로 실행할 수 있습니다.\n배경 제거: 피사체만 깔끔하게 제거, 투명 PNG 파일로 저장.\n부분 삭제: 지우고 싶은 부분을 칠하면 AI가 주변과 어울리게 채워줍니다.\n증명사진 변환: 인물 사진을 정장/흰색 배경으로 변환, 정면 사진이 아니어도 정면으로 변환까지!\n평면도를 3D로: 2D 건축 평면도를 가구가 배치된 사실적인 3D 아이소메트릭 뷰로 시각화.\n만화 패널 변환: 이미지를 만화 장면처럼 변환 (느와르, 웹툰, 코믹스 스타일 선택 가능). 텍스트 언어 지정 (한국어 렌더링은 아직 완벽하지 않음).\n3. 중앙 제어 영역의 고급 기능들\n더 강력하고 전문적인 기능들을 살펴볼 차례입니다.\n복원 기능: 오래된 사진 손상 채우기, 흑백 컬러화, 2~4배 업스케일.\n채색하기: 스케치/라인 아트에 색과 명암을 칠해 완성된 일러스트로.\n스타일 변환: 원본의 구도/내용 유지, 아트 스타일만 재창조 (예: 피규어, 애니메이션).\n이미지 합성: 여러 이미지를 놀랍도록 자연스럽게 합성 (예: 가족+바다, 모델+가방+선글라스+한복).\n인생 앨범 제작: 인물 사진 한 장으로 유아기부터 노년기까지의 모습이 담긴 콜라주 앨범 생성. 정말 특별한 기능이에요!\n바나나 캔버스 (BANANA CANVAS) 바로 사용하기\n  핵심 요약\n1. 나노바나나는 구글 제미나이 2.5 Flash Image의 별명으로, 캐릭터 일관성, 다중 이미지 합성, 정확한 텍스트 렌더링 등 혁신적 성능을 자랑합니다.\n2. 포토샵 등 기존 툴 대비 압도적인 작업 시간 단축, 낮은 기술적 난이도, 무한한 창의적 가능성을 제공합니다.\n3. '바나나 캔버스'는 나노바나나 기반의 무료 올인원 이미지 도구로, 텍스트-이미지 생성부터 고급 편집, 합성을 모두 지원합니다.\n4. 강력한 '프롬프트 제안' 기능과 직관적인 3단 화면 구성으로 초보자도 쉽게 전문가 수준의 결과물을 만들 수 있습니다.\n※ 나노바나나와 바나나 캔버스는 AI 기술의 집약체로, 여러분의 이미지 작업에 혁신적인 변화를 가져올 것입니다. 지금 바로 경험해보세요!\n❓ 자주 묻는 질문 (FAQ)\nQ1: 나노바나나는 무엇이며, 어떤 점이 특별한가요?\nA1: 나노바나나는 구글 제미나이 2.5 Flash Image 모델의 커뮤니티 별명입니다. 기존 AI 이미지 생성 도구들과 달리 캐릭터 일관성 유지, 다중 이미지 합성, 이미지 내 텍스트 정확한 렌더링 등 탁월한 성능을 제공합니다.\nQ2: '바나나 캔버스'는 어떤 앱인가요?\nA2: 바나나 캔버스는 나노바나나(제미나이 2.5 Flash Image)와 이마젠 4.0 기반의 올인원 이미지 생성 및 편집 앱입니다. 텍스트 이미지 생성, 기존 이미지 편집 및 합성 등 다양한 시각 작업을 지원하며, 특히 '프롬프트 제안' 기능으로 초보자도 쉽게 전문가 수준의 결과물을 얻을 수 있습니다.\nQ3: 바나나 캔버스가 제공하는 '빠른 작업'에는 어떤 기능들이 있나요?\nA3: '빠른 작업'에는 배경 제거, 이미지 내 특정 부분 삭제, 인물 증명사진 변환, 2D 평면도를 3D 아이소메트릭 뷰로 변환, 이미지를 만화 패널 스타일로 바꾸는 기능 등이 포함되어 있습니다. 자주 쓰는 편집 기능을 원클릭으로 편리하게 실행할 수 있습니다.\nQ4: 바나나 캔버스를 사용하려면 AI나 프롬프트 지식이 많이 필요한가요?\nA4: 아닙니다! 바나나 캔버스는 '프롬프트 제안' 기능을 통해 사용자의 간단한 아이디어를 분석하여 최적의 지시문을 자동으로 생성해줍니다. 따라서 복잡한 프롬프트 엔지니어링 지식 없이도 누구나 쉽고 직관적으로 고품질의 AI 이미지를 생성하고 편집할 수 있습니다.\n \n\n\n\n \n \n{\"@context\":\"https://schema.org\",\"@type\":\"FAQPage\",\"mainEntity\":[{\"@type\":\"Question\",\"name\":\"나노바나나는 무엇이며, 어떤 점이 특별한가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"나노바나나는 구글 제미나이 2.5 Flash Image 모델의 커뮤니티 별명입니다. 기존 AI 이미지 생성 도구들과 달리 캐릭터 일관성 유지, 다중 이미지 합성, 이미지 내 텍스트 정확한 렌더링 등 탁월한 성능을 제공합니다.\"}},{\"@type\":\"Question\",\"name\":\"'바나나 캔버스'는 어떤 앱인가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"바나나 캔버스는 나노바나나(제미나이 2.5 Flash Image)와 이마젠 4.0 기반의 올인원 이미지 생성 및 편집 앱입니다. 텍스트 이미지 생성, 기존 이미지 편집 및 합성 등 다양한 시각 작업을 지원하며, 특히 '프롬프트 제안' 기능으로 초보자도 쉽게 전문가 수준의 결과물을 얻을 수 있습니다.\"}},{\"@type\":\"Question\",\"name\":\"바나나 캔버스가 제공하는 '빠른 작업'에는 어떤 기능들이 있나요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"'빠른 작업'에는 배경 제거, 이미지 내 특정 부분 삭제, 인물 증명사진 변환, 2D 평면도를 3D 아이소메트릭 뷰로 변환, 이미지를 만화 패널 스타일로 바꾸는 기능 등이 포함되어 있습니다. 자주 쓰는 편집 기능을 원클릭으로 편리하게 실행할 수 있습니다.\"}},{\"@type\":\"Question\",\"name\":\"바나나 캔버스를 사용하려면 AI나 프롬프트 지식이 많이 필요한가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"아닙니다! 바나나 캔버스는 '프롬프트 제안' 기능을 통해 사용자의 간단한 아이디어를 분석하여 최적의 지시문을 자동으로 생성해줍니다. 따라서 복잡한 프롬프트 엔지니어링 지식 없이도 누구나 쉽고 직관적으로 고품질의 AI 이미지를 생성하고 편집할 수 있습니다.\"}}]} \n이것으로 바나나 캔버스의 모든 기능과 사용법을 자세히 알아보았습니다. 정말 이 앱 하나로 상상 이상으로 다양한 이미지 작업을 할 수 있다는 걸 느끼셨을 거예요. 처음에는 복잡해 보일 수도 있지만, 저처럼 몇 번 사용해보시면 굉장히 직관적이고 쉽다는 걸 금방 느끼실 수 있을 겁니다. 왼쪽에서 오른쪽으로 자연스럽게 진행되는 작업 흐름만 기억하시면 헷갈리지 않고 스마트하게 활용하실 수 있을 거예요. 여러분의 창의적인 작업을 응원합니다!",
    "reviews": [],
    "syllabus": [],
    "link": "http://muzbox.tistory.com/483649",
    "pubDate": "Sun, 31 Aug 2025 16:34:01 +0900",
    "creator": "어떤오후의 프리웨어 이야기",
    "categories": [
      "AI, 미래기술/AI 인사이트",
      "AI 스튜디오",
      "AI 이미지 생성",
      "Gemini 2.5 Flash Image",
      "나노바나나",
      "다중 이미지 합성",
      "무료 AI 도구",
      "바나나 캔버스",
      "이미지 편집",
      "캐릭터 일관성",
      "프롬프트 엔지니어링"
    ]
  },
  {
    "id": 10,
    "imageUrl": "",
    "title": "전통적인 비즈니스",
    "description": "2016년에 시작한 대치동 입시 전문 '시대인재' 가 누적 글로벌 가입 9,200만명, MAU 800만, 누적 투자 1,500억의 '콴다' 를 운영하는 매스프레소의 최대 주주가 되었다고 한다.\n'시대인재' 하이컨시, 틱톡 제치고 '매스프레소' 최대주주로\n소프트웨어가 세상을 집어삼키는 시대가 왔고,\nAI가 세상을 다 휩쓸것 같지만,\n불황에는 전통 산업이 소프트웨어 기업을 집어삼키는게 훨씬 쉬워진 것 같다.\n누적 글로벌 가입 9,200만명, MAU 800만이면 정말 성공한 제품이다.\n한국에서 시작한 회사 중 이정도의 성적표를 서비스가 몇개나 있을까 생각한다면 정말 대단한 회사이고 제품이다.\n그럼에도 전통적인 입시 교육 회사가 쉽게 기술과 제품을 살 수 있게 됐다.  \n한국이라는 곳에서 제품을 만든다면 섹터에 따라 글로벌 제품의 방정식이 생각보다 큰 가치를 못낼 수도 있다는걸,\n우리 제품이 속해있는 섹터가 어떻게 돈을 버는지 이해하는 것이 훨씬 더 중요하다는 걸 다시금 느낀다.  \n전통적인 사업을 하는 기업들의 비즈니스가 얼마나 강력한지도 다시금 깨닫고 말이다.\n혼자 자취할때 자주 보던 '오늘의 집'도 이제는 '한샘'과 '이케아'를 본다.\n'리디' 페이퍼를 버전별로 사다가 이제는 다시 교보문고를 찾아간다.\n인터넷 은행을 쓰던 중 이제는 좀 더 예금 이율이 높은 전통 은행에 예금을 넣는다.\n물론 넷플릭스, 쿠팡, 배민, 토스 증권은 여전히 내 일상을 바꾸었지만 다시 원래대로 돌아간 것들이 대단히 많다.\n모두가 넷플릭스, 쿠팡, 배민, 토스와 같을 수 없다는 것도 알게 됐다.  \n스타트업이 세상을 바꾸는 혁신에 대해 함부로 무시해서 안되지만,\n전통 기업이 갖고 있는 비즈니스 모델이 얼마나 단단한지도 함부로 봐선 안된다는 것도 알게 됐다.  \n사업이라는 건 정말 어렵고,\n그걸 20년, 30년 계속 해오신 분들은 정말 대단하신 분들이라는걸 요즘 많이 느낀다.",
    "reviews": [],
    "syllabus": [],
    "link": "https://jojoldu.tistory.com/843",
    "pubDate": "Sun, 31 Aug 2025 18:34:32 +0900",
    "creator": "향로 (기억보단 기록을)",
    "categories": [
      "생각정리",
      "매스프레소",
      "사업",
      "스타트업",
      "시대인재",
      "콴다"
    ]
  },
  {
    "id": 11,
    "imageUrl": "",
    "title": "마치 한 편의 마피아 영화, 마피아: 올드 컨트리",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://bbs.ruliweb.com/news/board/11/read/2352",
    "pubDate": "Sun, 31 Aug 2025 22:43:23 +0900",
    "creator": "｜RULIWEB｜",
    "categories": [
      "게임툰"
    ]
  },
  {
    "id": 12,
    "imageUrl": "",
    "title": "ReSharper’s New Out-of-Process Engine Cuts Visual Studio startup UI freezes by 61%",
    "description": "Visual Studio power users love ReSharper’s deep analysis, but the cost has been the occasional UI hiccup that breaks the flow of work. In ReSharper 2025.2, analysis runs in a separate 64-bit worker out of Visual Studio’s UI process. Previously, ReSharper shared Visual Studio’s UI process, so long analyses could stall the UI thread. Now, […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/dotnet/2025/08/28/resharper-s-new-out-of-process-engine-cuts-ui-freezes-in-visual-studio-by-80/",
    "pubDate": "Thu, 28 Aug 2025 07:00:00 +0000",
    "creator": "Mehul Harry",
    "categories": [
      "how-tos",
      "news",
      "resharper",
      "oop",
      "out-of-process",
      "performance",
      "resharper_oop",
      "visual-studio"
    ]
  },
  {
    "id": 13,
    "imageUrl": "",
    "title": "[MULTI] 겉보기는 좋으나 속은 부실하고 엉성한 액션, 로스트 소울 어사이드",
    "description": "No description available",
    "reviews": [],
    "syllabus": [],
    "link": "https://bbs.ruliweb.com/news/board/11/read/2354",
    "pubDate": "Tue, 02 Sep 2025 17:09:28 +0900",
    "creator": "［RULIWEB］",
    "categories": [
      "리뷰"
    ]
  },
  {
    "id": 14,
    "imageUrl": "",
    "title": "ICPC World Finals Livestream: ecnerwala and SecondThread Speed-Solving Kotlin Challenge",
    "description": "Join us live from the ICPC World Finals in Baku, Azerbaijan, for a special event. This year, we are hosting a head-to-head match where two of the world’s top competitive programmers, Andrew ‘ecnerwala’ He and David ‘SecondThread’ Harmeyer, will speed-solve Kotlin problems in real time.  Save the date: September 2, 2025, at 9:30 am UTC […]",
    "reviews": [],
    "syllabus": [],
    "link": "https://blog.jetbrains.com/kotlin/2025/08/icpc-world-finals-livestream-ecnerwala-secondthread-kotlin/",
    "pubDate": "Fri, 29 Aug 2025 19:29:31 +0000",
    "creator": "Ksenia Shneyveys",
    "categories": [
      "news",
      "competitive-programming",
      "icpc",
      "livestream"
    ]
  },
  {
    "id": 15,
    "imageUrl": "",
    "title": "300만 줄의 코드로 배운 것들",
    "description": "+270만, -240만, 290개\n이건 내가 처음부터 끝까지 서비스 하나를 만들고 약 4년간 작성해본 코드 양이며, 모듈 숫자이다.\n혼자 서비스를 하면서 선택한 아키텍처 덕분에 안정적인 서비스를 해볼 수 있었다. 정승욱님이 발표한 코드 제로 관련에 나온 코드를 기반하여 수정하고 개선한 프로젝트를 사용했다.\n최근엔 iOS 개발도 약 10개월 진행하였는데 iOS TCA를 이해하면서 작성한 코드 역시 +46만 줄, -32만 줄 수정하였다.\n안드로이드 개발자가 본 iOS TCA 살펴보기\n이 글에서는\n4년간 서비스를 만들며 다듬어온 실용적인 모듈화 전략\n인터페이스 분리 원칙(ISP)을 적용해 빌드 속도를 개선한 경험을 소개\n시나리오 기반의 유닛 테스트 방법\n모듈화\n모듈화의 목적은 무엇일까? 클린 아키텍처를 사용하기 위해서는 모듈화를 해야 한다는 이야기가 있다.\n그렇지 않다. 필자의 모듈은 크게 4가지로 나뉜다.\nCore: UI를 제외한 기본 동작을 처리하는 모듈, 여기에는 테스트용 모듈도 포함된다.\nCore-App: 앱 내에서 사용하기 위한 디자인 시스템, UI를 포함하는 모듈이다. 이 역시 테스트 용도 모듈이 포함된다.\nData: 일반적으로 클린 아키텍처의 data, domain, data store 등을 포함한다.\nFeature: 화면을 기준으로 정리한 모듈\n2개의 Core를 나눈 이유는 완전 기본 동작을 위한 코드와 앱 내에서 UI를 포함하는 부분을 나누기 위함이다. 그 말은 core는 어디서든 사용할 수 있음을 뜻하는 완전 코어한 모듈이다.\nISP(인터페이스 분리 원칙)\n모든 코드는 인터페이스 분리 원칙을 기반한 모듈화 구성이다.\n다음 구성에 대한 참고 : 드로이드 나이츠 코드를 참고하면 이를 볼 수 있다.\ninterface를 정의하는 모듈 하나\n구현체를 정의하는 모듈\n테스트 시에 가져다 사용할 Fake 모듈\nFeature에는 interface를 기반하여 모든 코드를 구성하고, 테스트를 위한 fake 모듈을 기반하여 테스트를 진행할 수 있다.\n구현체 모듈을 수정하더라도 interface를 바라보는 모듈은 재빌드 대상에서 제외되기 때문에 더 빠른 개발이 가능한데, 일반적으로 1분에서 최대 3분 이내 빌드 가능해 빠른 개발이 가능했었다.\n이건 단순 모듈의 분리가 아닌 interface를 바라보도록 만든 구조 덕분에 가능했다고 생각한다.\n다만, core를 수정한다면 implementation이 feature의 구현체들이 참조하기 때문에 오랜 시간 걸릴 수 있다.\n서버에서 내려주는 오류에 따른 응답 처리\n서버 응답에 대한 처리는 서버에서 Alert/Toast 등의 노출도 제어할 수 있도록 개발하였다.\n이에 따라 Error 발생 시 모든 기본 응답은 서버에서 내려주는 대로 노출할 수 있게 되었다. 화면 별로 처음 로드하는 기준을 정하고, 재시도 가능한 형태를 구분하여 개발하였다.\n데이터\n네트워크 모듈의 interface를 주입받아 사용한다. 로컬 데이터는 앱의 성격상 정말 필요한 경우가 아니라면 사용할 일은 없다. 보통 금융 관련은 로컬에 데이터를 저장하는 선택보단 실시간 데이터가 더 중요하다.\n금융 앱의 특성상 데이터를 저장할 때는 기본 Android Keystore를 활용하여 저장하고 값을 꺼내 사용한다.\n도메인은 사용했나?\n도메인은 이전 글에서 작성했지만 클라이언트 아키텍처에 대한 단상 - ‘서버’가 진짜 ‘도메인’ 아닐까? 정말 필요하지 않은 이상 사용하지 않았다.\n1개 이상의 repository에 접근해서 서로 다른 데이터의 합이 필요한 경우 사용하였다. 지금 공부하는 개발자들은 안드로이드 아키텍처에 가깝다고 생각하겠지만, 지금까지 꾸준히 MVP > MVVM > 클린 아키텍처 적용을 해본 개발자들이라면 원래 그런 것 아니야? 라는 생각을 하는 것은 당연하다. 필자도 오랜 기간 단순 포워딩하는 것이 필요하지 않음을 알고 있다.\nView\n뷰와 뷰모델의 사용은 그냥 흔한 방식이다. UiState를 활용해 데이터를 처리하도록 만들었고, 이때 @Immutable, @Stable을 붙여 사용하였다.\n\n@Immutable\ndata class SomeUiState(\n    val items: ImmutableList<String>,\n    val showProgress: Boolean,\n    val showPlaceholder: Boolean,\n) {\n\n    companion object {\n        \n        val Default = SomeUiState(\n            items = persistentListOf(),\n            showProgress = false,\n            showPlaceholder = false,\n        )\n\n        val Placeholder = Default.copy(\n            showPlaceholder = true,\n            items = persistentListOf(\"a\", \"b\"),\n        )\n    }\n}\n\n\n위와 같은 형태이다. 리컴포지션을 중요하게 생각하니 ImmutableList 역시 사용한다.\nCompose는 일반적인 방식이며, Stateful, Stateless를 구분하여 사용하며\nSomeRoute: Navigation에서 불러지는 화면\nSomeScreen: Route에서 불러다 사용하는 내부의 internal fun SomeScreen()\nSomeComponent: Screen을 조합하는 모든 구성 요소는 Component를 활용한다.\n    \n당연하지만 Component는 Stateless 형태로 작성해야 한다. 다만 모듈의 위치에 따라 data class를 전달받기도 한다.\n시나리오 기반 테스트\n모든 ViewModel의 로직은 UnitTest를 포함하는데, 2023 드로이드 나이츠 발표자료에서 일부 소개한 방식을 사용한다.\n아래와 같은 시나리오 기반의 코드가 가능하다.\n사용자가 버튼을 누른다.\n입력값이 있다면 flow를 진행하고, 그렇지 않다면 filter에 걸린다.\nUiState 상 프로그레스를 실행한다.\n동의 화면이(Alert/BottomSheet 등)이 뜨면 응답에 따라 동작이 달라진다.\n    \nYes 진행하고 네트워크 통신을 시작한다.\nNo 진행을 중단하고 프로그레스를 원래 상태로 되돌린다.\n네트워크 응답에 따라\n    \n실패하면 서버에서 내려주는 Alert/Toast 등을 노출하고 프로그레스를 되돌린다.\n성공하면 완료 처리한다.\n위의 모든 단계를 UnitTest에서 테스트하고 버튼의 복구까지 이어지는 UiState의 상태를 확인하는 식으로 개발하였다. 모두 완벽하진 않다. 다만 UiTest를 하지 않아도 UnitTest 만으로 어느 정도 범위에서 안정적인 서비스가 가능하다는 장점을 가진다.\n이런 테스트는 1,000개가 넘게 포함되어 있었다.\nKSP를 활용한 Hilt Module 정의\n메모리상 빠르게 사라질 수 있도록 하려고 Data 모듈에 대한 정의는 Activity 라이프사이클에 따르도록 만들었고, 정말 필요한 경우가 아니라면 싱글턴은 최소한으로 사용하였다.\n이런 부분도 자동화를 하고 싶었고, KSP를 활용해 자동화했다. 기존에는 Dagger를 활용하였는데, Hilt를 사용함으로써 더 간결해졌다.\nKSP를 활용해 Hilt 모듈을 자동으로 생성할 수 있도록 만들어 사용하였는데, Kilt(Kotlin + Hilt)를 별도로 만들어 두었다.\n@KiltGenerateModule을 추가하면 자동으로 Hilt의 @Module을 만들어주는 역할을 한다.\n참고 : Dagger를 사용하면 사실상 빌드 시간이 더 단축된다. Hilt는 수동으로 구성하던 많은 코드를 자동으로 만드는데 이 역할은 Android Studio의 플러그인이 해주고 있다. 다만 빌드 시간이 늘어날 수밖에 없다.(사실 Dagger일 때 1-2분이었지만 3분 이상으로 늘기도 했다)\n수많은 모듈\n수많은 모듈에서는 당연하지만 결국 모듈의 관리가 가장 중요하다.\nAndroid에서 효율적인 모듈 디펜던시 관리하기, build-logic으로 전환하기?\nbuild-logic을 사용하는 것은 어찌 보면 필수이다. 최소한의 코드를 사용하여 build.gradle.kts를 관리하여야 한다.\n그리고 필자는 사실상 App 모듈을 수정하지 않는 것을 선호한다. 사실 만들고 나면 고칠 일은 거의 없다. 모두 피처 모듈의 형태를 띠고 있으니 더더욱 수정할 일은 없다.\n그럼 implementation은 어떻게 하는가? 위 글에도 나오긴 하지만 이제 저 방식으로도 힘들다.\n그래서 수정한 코드 방식은 아래와 같다.\n\ndependencies {\n    rootProject.subprojects.filterProject {\n        implementation(it)\n    }\n}\n\n\n필터는 왜 필요한가? 모든 모듈이 하위에 바로 위치하는 것은 아니다. :폴더:폴더:모듈 의 형태를 가지는 경우가 더 흔하다. 그래서 filter를 통해 구분한다.\n\nfun Set<Project>.filterProject(\n    body: (target: Project) -> Unit,\n) {\n    forEach { project ->\n        if (project.name != \"app\" && project.buildFile.isFile) {\n            body(project)\n        }\n    }\n}\n\n\n사실상 위에서부터 순서대로 settings.gradle.kts에 정의한 모든 모듈을 참조하기에 app 모듈이 아닌 경우를 구분해야 한다.\n어찌 보면 단점이다. 기존엔 그냥 특정 모듈을 바로 공통으로 접근할 수 있었는데, 그렇지 않아서 수정한 상태다.\n레거시 ViewModel에서 AAC-ViewModel로\nAAC-ViewModel을 사용하지 않았다. 이유는 굳이 써야 할 이유가 없었다.\n하지만 안드로이드 16이 나오면서 이제 AAC-ViewModel을 꼭 사용하긴 해야 한다. 그렇지 않다면 데이터 savedstate를 처리해 주어야 한다. 안드로이드 16부터는 폴더블 기기 600dp 부터 화면 회전이 강제화된다. 회전을 막는다고 하더라도 무시되고 동작한다.\n예외를 하면 회전했을 때 좌우에 여백을 공백으로 만들 뿐 회전을 막는 것 역시 아니다. 근데 최근에 이거 안 쓰는 개발자가 있을까 싶다.\niOS TCA\nTCA를 처음부터 한 것은 아니고 중간부터 투입되어 개발하게 되었다.\n안드로이드 개발자가 본 iOS TCA 살펴보기\nTCA는 리덕스로 작성되어 있다. 다행히도 안드로이드 개발에서 사용하던 플로우 이벤트 처리 방식을 그대로 이어가면서 개발이 가능하였다는 점이다. 적응하는 시간은 오래 걸렸다. 일반적으로 UiState를 리턴하는 리액트 방식과는 다르게 다음 액션을 전달하는 방식의 차이가 있다. 그래서 이후 안드로이드 아키텍처를 만들면서 소개한 내용과 이어진다.(블로그 글 참고)\n10개월이라는 짧은 기간 동안 TCA를 사용해보면서 느낀 점은 딱 하나. 오류 위치를 알려주지 않는다. 의외로 해결법은 간단한데, 코드를 분리해야 한다. 코드를 분리한다고 하여도 오류를 잘 알려주는 것은 아니다.\n그냥 어딘가 문법 오류가 있다. 끝. 일일이 주석 처리해 가면서 찾아야 한다. 다행히 런타임 오류가 아닌 것이 어디인가 싶다.\n그리고 또 하나 경험한 내용은 앱의 이름 덕분에 앱이 그냥 종료되어지는 오류도 만나보았다. 특정 버전의 OS에서만 오류가 발생하였다. 의심 가는 걸 Gemini와 GPT 둘 다에게 질문했지만 찾지 못했다. 결국 감으로 찾은 이유는 앱 이름이 겹쳐서였다는 사실이다.\n앱이 그냥 아무 이유 없이 꺼지는데 분석을 자세히 해보면 더 빨리 찾았겠지만 iOS 경험이 많지 않은 상태에서 AI가 없었다면 며칠 걸렸을지도 모르지만 다행히 하루 만에 이유를 찾고 해결해보았다.\n결국\n결국 요구사항을 잘 반영하는 코드를 만들고 싶은 욕심과 AI를 더 잘 활용하는 방법 등이 있다.\nTCA를 하면서 한 가지 느낀 점은 굳이 Data 모듈도 나누어야 할까? 라는 의문이다. 자동화를 통해 Data 모듈도 KSP로 JSON 통신하는 것을 만들고, 이것을 API 정의한 것에 연동하는 과정을 만들면 더 쉬운 개발도 가능하다는 점이다.\n그런 관점에서 이전에 작성한 도메인 관련 글의 인사이트를 다시 얻게 되었다.\n마무리\n약 4년 동안 입력한 코드 양만 합산 316만 줄이다. 여기에는 자동으로 생성되어지는 json이나 파일들이 있을 거니 이런 걸 제외하더라도 300만 줄의 코드를 쳤다는 것이긴 하다. 단순히 파일 이동도 있으니 더 제외하면 더 줄어들겠지만.\n코드양이 많다고 많은 걸 해본 것도 아니다. 그냥 즐겁게 코드를 입력하고, 이해하기 위해서 기존의 코드를 가져와 그대로 사용하지 않고 직접 입력하면서 이해하는 것을 우선하려고 노력하였다. 다행히 이를 통해 더 많은 코드를 수정하고 반영할 수 있었다.\n다만 누구나 이 코드를 수정할 수 있는가? 뷰는 가능하지만 core는 어렵다. 기본적인 이해를 바탕으로 하기에는 프레임워크를 이해해야 하는 것과 같다.",
    "reviews": [],
    "syllabus": [],
    "link": "https://thdev.tech/review/2025/08/31/Review-Android/",
    "pubDate": "Sun, 31 Aug 2025 00:00:00 +0000",
    "creator": "Unknown",
    "categories": []
  }
]