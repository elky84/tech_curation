[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Enabling Kotlin incremental compilation on Buck2",
        "link": "https://engineering.fb.com/2025/08/26/open-source/enabling-kotlin-incremental-compilation-on-buck2/",
        "pubDate": "Tue, 26 Aug 2025 16:00:52 +0000",
        "content:encodedSnippet": "The Kotlin incremental compiler has been a true gem for developers chasing faster compilation since its introduction in build tools. Now, we’re excited to bring its benefits to Buck2 –  Meta’s build system – to unlock even more speed and efficiency for Kotlin developers.\n\nUnlike a traditional compiler that recompiles an entire module every time, an incremental compiler focuses only on what was changed. This cuts down compilation time in a big way, especially when modules contain a large number of source files.\nBuck2 promotes small modules as a key strategy for achieving fast build times. Our codebase followed that principle closely, and for a long time, it worked well. With only a handful of files in each module, and Buck2’s support for fast incremental builds and parallel execution, incremental compilation didn’t seem like something we needed.\nBut, let’s be real: Codebases grow, teams change, and reality sometimes drifts away from the original plan. Over time, some modules started getting bigger – either from legacy or just organic growth. And while big modules were still the exception, they started having quite an impact on build times.\nSo we gave the Kotlin incremental compiler a closer look – and we’re glad we did. The results? Some critical modules now build up to 3x faster. That’s a big win for developer productivity and overall build happiness. \nCurious about how we made it all work in Buck2? Keep reading. We’ll walk you through the steps we took to bring the Kotlin incremental compiler to life in our Android toolchain.\nStep 1: Integrating Kotlin’s Build Tools API\nAs of Kotlin 2.2.0, the only guaranteed public contract to use the compiler is through the command-line interface (CLI). But since the CLI doesn’t support incremental compilation (at least for now), it didn’t meet our needs. Alternatively, we could integrate the Kotlin incremental compiler directly via the internal compiler’s components – APIs that are technically accessible but not intended for public use. However, relying on them would’ve made our toolchain fragile and likely to break with every Kotlin update since there’s no guarantee of backward compatibility. That didn’t seem like the right path either.\nThen we came across the Build Tools API (KEEP), introduced in Kotlin 1.9.20 as the official integration point for the compiler – including support for incremental compilation. Although the API was still marked as experimental, we decided to give it a try. We knew it would eventually stabilize, and saw it as a great opportunity to get in early, provide feedback, and help shape its direction. Compared to using internal components, it offered a far more sustainable and future-proof approach to integration.\n Depending on kotlin-compiler? Watch out!\nIn the Java world, a shaded library is a modified version of the library where the class and package names are changed. This process – called shading – is a handy way to avoid classpath conflicts, prevent version clashes between libraries, and keeps internal details from leaking out.\nHere’s quick example:\n\n\nUnshaded (original) class: com.intellij.util.io.DataExternalizer\nShaded class: org.jetbrains.kotlin.com.intellij.util.io.DataExternalizer\nThe Build Tools API depends on the shaded version of the Kotlin compiler (kotlin-compiler-embeddable). But our Android toolchain was historically built with the unshaded one (kotlin-compiler). That mismatch led to java.lang.NoClassDefFoundError crashes when testing the integration because the shaded classes simply weren’t on the classpath.\nReplacing the unshaded compiler across the entire Android toolchain would’ve been a big effort. So to keep moving forward, we went with a quick workaround: We unshaded the Build Tools API instead.  Using the jarjar library, we stripped the org.jetbrains.kotlin prefix from class names and rebuilt the library.\nDon’t worry, once we had a working prototype and confirmed everything behaved as expected, we circled back and did it right – fully migrating our toolchain to use the shaded Kotlin compiler. That brought us back in line with the API’s expectations and gave us a more stable setup for the future.\nStep 2: Keeping previous output around for the incremental compiler\nTo compile incrementally, the Kotlin compiler needs access to the output from the previous build. Simple enough, but Buck2 deletes that output by default before rebuilding a module. \nWith incremental actions, you can configure Buck2 to skip the automatic cleanup of previous outputs. This gives your build actions access to everything from the last run. The tradeoff is that it’s now up to you to figure out what’s still useful and manually clean up the rest. It’s a bit more work, but it’s exactly what we needed to make incremental compilation possible.\nStep 3: Making the incremental compiler cache relocatable\nAt first, this might not seem like a big deal. You’re not planning to move your codebase around, so why worry about making the cache relocatable, right?\nWell… that’s until you realize you’re no longer in a tiny team, and you’re definitely not the only one building the project. Suddenly, it does matter.\nBuck2 supports distributed builds, which means your builds don’t have to run only on your local machine. They can be executed elsewhere, with the results sent back to you. And if your compiler cache isn’t relocatable, this setup can quickly lead to trouble – from conflicting overloads to strange ambiguity errors caused by mismatched paths in cached data.\nSo we made sure to configure the root project directory and the build directory explicitly in the incremental compilation settings. This keeps the compiler cache stable and reliable, no matter who runs the build or where it happens.\nStep 4: Configuring the incremental compiler\nIn a nutshell, to decide what needs to be recompiled, the Kotlin incremental compiler looks for changes in two places:\n\n\nFiles within the module being rebuilt.\nThe module’s dependencies.\nOnce the changes are found, the compiler figures out which files in the module are affected – whether by direct edits or through updated dependencies – and recompiles only those.\nTo get this process rolling, the compiler needs just a little nudge to understand how much work it really has to do.\nSo let’s give it that nudge!\nTracking changes inside the module\nWhen it comes to tracking changes, you’ve got two options: You can either let the compiler do its magic and detect changes automatically, or you can give it a hand by passing a list of modified files yourself. The first option is great if you don’t know which files have changed or if you just want to get something working quickly (like we did during prototyping). However, if you’re on a Kotlin version earlier than 2.1.20, you have to provide this information yourself. Automatic source change detection via the Build Tools API isn’t available prior to that. Even with newer versions, if the build tool already has the change list before compilation, it’s still worth using it to optimize the process.\nThis is where Buck’s incremental actions come in handy again! Not only can we preserve the output from the previous run, but we also get hash digests for every action input. By comparing those hashes with the ones from the last build, we can generate a list of changed files. From there, we pass that list to the compiler to kick off incremental compilation right away – no need for the compiler to do any change detection on its own.\nTracking changes in dependencies\nSometimes it’s not the module itself that changes, it’s something the module depends on. In these cases, the compiler relies on classpath snapshot. These snapshots capture the Application Binary Interface (ABI) of a library. By comparing the current snapshots to the previous one, the compiler can detect changes in dependencies and figure out which files in your module are affected. This adds an extra layer of filtering on top of standard compilation avoidance.\nIn Buck2, we added a dedicated action to generate classpath snapshots from library outputs. This artifact is then passed as an input to the consuming module, right alongside the library’s compiled output. The best part? Since it’s a separate action, it can be run remotely or be pulled from cache, so your machine doesn’t have to do the heavy lifting of extracting ABI at this step.\n\nIf, after all, only your module changes but your dependencies do not, the API also lets you skip the snapshot comparison entirely if your build tool handles the dependency analysis on its own. Since we already had the necessary data from Buck2’s incremental actions, adding this optimization was almost free.\nStep 5: Making compiler plugins work with the incremental compiler\nOne of the biggest challenges we faced when integrating the incremental compiler was making it play nicely with our custom compiler plugins, many of which are important to our build optimization strategy. This step was necessary for unlocking the full performance benefits of incremental compilation, but it came with two major issues we needed to solve.\n Problem 1: Incomplete results\nAs we already know, the input to the incremental compiler does not have to include all Kotlin source files. Our plugins weren’t designed for this and ended up producing incomplete results when run on just a subset of files. We had to make them incremental as well so they could handle partial inputs correctly.\n\n Problem 2: Multiple rounds of Compilation\nThe Kotlin incremental compiler doesn’t just recompile the files that changed in a module. It may also need to recompile other files in the same module that are affected by those changes. Figuring out the exact set of affected files is tricky, especially when circular dependencies come into play. To handle this, the incremental compiler approximates the affected set by compiling in multiple rounds within a single build.\nCurious how that works under the hood? The Kotlin blog on fast compilation has a great deep dive that’s worth checking out.\nThis behavior comes with a side effect, though. Since the compiler may run in multiple rounds with different sets of files, compiler plugins can also be triggered multiple times, each time with a different input. That can be problematic, as later plugin runs may override outputs produced by earlier ones. To avoid this, we updated our plugins to accumulate their results across rounds rather than replacing them.\n\nStep 6: Verifying the functionality of annotation processors\nMost of our annotation processors use Kotlin Symbol Processing (KSP2), which made this step pretty smooth. KSP2 is designed as a standalone tool that uses the Kotlin Analysis API to analyze source code. Unlike compiler plugins, it runs independently from the standard compilation flow. Thanks to this setup, we were able to continue using KSP2 without any changes.\n Bonus: KSP2 comes with its own built-in incremental processing support. It’s fully self-contained and doesn’t depend on the incremental compiler at all. \nBefore we adopted KSP2 (or when we were using an older version of the Kotlin Annotation Processing Tool (KAPT), which operates as a plugin) our annotation processors ran in a separate step dedicated solely to annotation processing. That step ran before the main compilation and was always non-incremental.\nStep 7: Enabling compilation against ABI\nTo maximize cache hits, Buck2 builds Android modules against the class ABI instead of the full JAR. For Kotlin targets, we use the jvm-abi-gen compiler plugin to generate class ABI during compilation.\nBut once we turned on incremental compilation, a couple of new challenges popped up:\nThe jvm-abi-gen plugin currently lacks direct support for incremental compilation, which ties back to the issues we mentioned earlier with compiler plugins.\nABI extraction now happens twice – once during compilation via jvm-abi-gen, and again when the incremental compiler creates classpath snapshots.\nIn theory, both problems could be solved by switching to full JAR compilation and relying on classpath snapshots to maintain cache hits. While that could work in principle, it would mean giving up some of the build optimizations we’ve already got in place – a trade-off that needs careful evaluation before making any changes.\nFor now, we’ve implemented a custom (yet suboptimal) solution that merges the newly generated ABI with the previous result. It gets the job done, but we’re still actively exploring better long-term alternatives.\nIdeally, we’d be able to reuse the information already collected for classpath snapshot or, even better, have this kind of support built directly into the Kotlin compiler. There’s an open ticket for that: KT-62881. Fingers crossed!\nStep 8: Testing\nMeasuring the impact of build changes is not an easy task. Benchmarking is great for getting a sense of a feature’s potential, but it doesn’t always reflect how things perform in “the real world.” Pre/post testing can help with that, but it’s tough to isolate the impact of a single change, especially when you’re not the only one pushing code. \nWe set up A/B testing to overcome these obstacles and measure the true impact of the Kotlin incremental compiler on Meta’s codebase with high confidence. It took a bit of extra work to keep the cache healthy across variants, but it gave us a clean, isolated view of how much difference the incremental compiler really made at scale.\nWe started with the largest modules –  the ones we already knew were slowing builds the most. Given their size and known impact, we expected to see benefits quickly. And sure enough, we did.\nThe impact of incremental compilation \nThe graph below shows early results on how enabling incremental compilation for selected targets impacts their local build times during incremental builds over a 4-week period. This includes not just compilation, but also annotation processing, and a few other optimisations we’ve added along the way.\nWith incremental compilation, we’ve seen about a 30% improvement for the average developer. And for modules without annotation processing, the speed nearly doubled. That was more than enough to convince us that the incremental compiler is here to stay. \n\nWhat’s next\nKotlin incremental compilation is now supported in Buck2, and we’re actively rolling it out across our codebase! For now, it’s available for internal use only, but we’re working on bringing it to the recently introduced open source toolchain as well.\nBut that’s not all! We’re also exploring ways to expand incrementality across the entire Android toolchain, including tools like Kosabi (the Kotlin counterpart to Jasabi), to deliver even faster build times and even better developer experience.\nTo learn more about Meta Open Source, visit our open source site, subscribe to our YouTube channel, or follow us on Facebook, Threads, X and LinkedIn.\nThe post Enabling Kotlin incremental compilation on Buck2 appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>The Kotlin incremental compiler has been a true gem for developers chasing faster compilation since its introduction in build tools. Now, we’re excited to bring its benefits to Buck2 –  Meta’s build system – to unlock even more speed and efficiency for Kotlin developers. Unlike a traditional compiler that recompiles an entire module every time, [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/08/26/open-source/enabling-kotlin-incremental-compilation-on-buck2/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/08/26/open-source/enabling-kotlin-incremental-compilation-on-buck2/\">Enabling Kotlin incremental compilation on Buck2</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "The Kotlin incremental compiler has been a true gem for developers chasing faster compilation since its introduction in build tools. Now, we’re excited to bring its benefits to Buck2 –  Meta’s build system – to unlock even more speed and efficiency for Kotlin developers. Unlike a traditional compiler that recompiles an entire module every time, [...]\nRead More...\nThe post Enabling Kotlin incremental compilation on Buck2 appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22830",
        "categories": [
          "Open Source"
        ],
        "isoDate": "2025-08-26T16:00:52.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Katie Fraser",
        "title": "Meet Our Newest Innovators: Welcoming AI4SE Interns as JetBrains Employees!",
        "link": "https://blog.jetbrains.com/research/2025/09/ai4se-interns-jetbrains-part-1/",
        "pubDate": "Mon, 01 Sep 2025 15:17:40 +0000",
        "content:encodedSnippet": "Picture this: You’re working on your MSc thesis as an intern in software engineering, not just as an academic exercise, but side-by-side with an industry team, tackling real projects and real problems, refining code, and witnessing your ideas come alive. By the time you’ve graduated, you’re already a valued team member, ready to hit the ground running . \nIn a short series of posts, we will tell you about four recent graduates who have done exactly that, thanks to our AI for Software Engineering ( AI4SE ) research partnership with Delft University of Technology ( TU Delft ). Having recently completed their MSc thesis work as interns here at JetBrains, they are now starting full-time positions with us. \nThis first post will tell you a little about them and their experiences at JetBrains so far, and the second will go deeper into their new roles.\nIncoming AI4SE graduates to JetBrains \nWhile working on their MSc theses, these students got hands-on experience in the tech world. And now they’re full-time innovators sharing how their internships became the launchpad for their careers. Here are Milan, Nadine, Saga, and Sergey:\n\nMilan de Koning, Nadine Kuo, Saga Rut Sunnevudóttir, and Sergey Datskiv\nDuring their time as interns with us, they worked on projects covering various topics and contributed important research. For many of them, their work will grow into journal papers in the coming months. \nOur AI4SE Partnership\nThe AI4SE program merges academic research with industry collaboration. Together with our partners at TU Delft, we are committed to advancing cutting-edge research on the impact and utilization of AI methodologies in software engineering, focusing on areas such as software development, testing, and programming education.\nAI4SE was launched in 2023, and each year four to five students work together with researchers on topics within the five research tracks (more details on who is involved can be found on the AI4SE People  page). Several of our teams participate: Software Testing Research, HAX, Dynamic Program Analysis, Education Research teams; alongside teams from the TU Delft side: AISE and CISE research labs from the Software Engineering Research Group and the Center of Education and Learning . The program additionally is part of the Innovation Center for Artificial Intelligence (ICAI).\nWhat it’s like to be an AI4SE intern at JetBrains\nOverall, the interns enjoyed the same status as full-fledged employees, with the encouragement to ask questions and present their own ideas. The environment is intellectually stimulating and the company culture is very supportive.\n\n\n\n\n\nAI4SE students’ research topics\nThis cohort researched topics from different AI4SE tracks and worked with various JetBrains departments. \n“The opportunity to work with cutting-edge technology is something that I am very grateful for.”\n\n            \nMilan\n                                                        \nHere are more details on their thesis work:\nMilan’s thesis looked at data leakage, or when a model sees parts of the test data during training. For the thesis, he:\nWorked within Track 1 and with the Software Testing Research team.\nUsed metamorphic testing, which changes code without altering its meaning, to reveal when models rely on memorization rather than true understanding.\nStudied how this can lead to inflated results in automated bug-fixing systems.\nNadine’s thesis involved designing and evaluating a proactive AI assistant in enterprise integrated development environments (IDEs), to supplement earlier related work confined to controlled laboratory settings. For the thesis, she:\nWorked within Track 3 and with our Human-AI eXperience (HAX) and Fleet teams.\nDeveloped a system that proactively suggests code improvements via in-editor cues and the AI Chat, based on heuristics for help-seeking moments. \nEvaluated the final design with an in-the-wild study, engaging professional developers to understand how timing, representation, and context influence user experience and perceptions.\nSaga’s thesis focused on evaluating the current status of state-of-the-art test generation tools for JavaScript and TypeScript. For the thesis, she:\nWorked within Track 1 and with the Software Testing Research and  WebStorm teams. \nBuilt a benchmark for assessing these tools, specifically JetBrains AI Assistant.\nSergey’s thesis concerned improving the current state-of-the-art unit test-case generation approach with LLMs. For the thesis, he:\nWorked within Track 1 and with the Software Testing Research team.\nStudied the possible challenges and benefits of using LLMs for test case generation and integration into existing tools.\nTips for incoming students\n“ It was inspiring to connect with like-minded peers who were also passionate about the future of AI in software engineering.”\n\n            \nNadine\n                                                        \nStarting an internship at a new company might be daunting. Here, our graduates share some tips for future interns on how to get the most out of their experience:\n\n\n\n\nFrom what we’ve seen so far, it’s clear that our graduates’ willingness to learn, ask questions, and jump right into challenging projects has created a rich experience both for them and for us. We look forward to sharing more about their experiences as they continue to grow with us. Stay tuned for Part II!\nIf you are a TU Delft student interested in joining AI4SE, contact Mitchell Olsthoorn for general questions about the thesis procedures, or reach out to the university track leads to learn about project opportunities.",
        "dc:creator": "Katie Fraser",
        "content": "Picture this: You’re working on your MSc thesis as an intern in software engineering, not just as an academic exercise, but side-by-side with an industry team, tackling real projects and real problems, refining code, and witnessing your ideas come alive. By the time you’ve graduated, you’re already a valued team member, ready to hit the [&#8230;]",
        "contentSnippet": "Picture this: You’re working on your MSc thesis as an intern in software engineering, not just as an academic exercise, but side-by-side with an industry team, tackling real projects and real problems, refining code, and witnessing your ideas come alive. By the time you’ve graduated, you’re already a valued team member, ready to hit the […]",
        "guid": "https://blog.jetbrains.com/?post_type=research&p=585185",
        "categories": [
          "news",
          "research",
          "ai4se",
          "interns",
          "interviews"
        ],
        "isoDate": "2025-09-01T15:17:40.000Z"
      },
      {
        "creator": "Jakub Chrzanowski",
        "title": "The LSP API Is Now Available to All IntelliJ IDEA Users and Plugin Developers",
        "link": "https://blog.jetbrains.com/platform/2025/09/the-lsp-api-is-now-available-to-all-intellij-idea-users-and-plugin-developers/",
        "pubDate": "Mon, 01 Sep 2025 09:02:50 +0000",
        "content:encodedSnippet": "The way developers create plugins implementing the Language Server Protocol (LSP) in JetBrains IDEs is undergoing a significant shift. With PyCharm and IntelliJ IDEA adopting a unified distribution model, we’re removing a key obstacle that has been limiting LSP adoption within the IntelliJ Platform ecosystem. Starting with IntelliJ IDEA Ultimate 2025.2, users can continue using a limited set of features, including the LSP API, even after their subscription expires. Community Edition (CE) will still be available in 2025.2 but will not include LSP support. See our other announcement to learn more.\nKey changes in LSP availability\nThe most important update affects how LSP functionality is distributed in JetBrains IDEs:\nImmediate impact (2025.2): The LSP API, which is already available to IntelliJ IDEA Ultimate users, will now be accessible for free within a limited feature set when their subscription expires. This change addresses long-standing feedback from plugin developers and smaller language communities, ensuring users no longer need to consider licensing restrictions when choosing between platforms.\nFuture changes (2025.3): With the new unified distribution, the traditional Community Edition will be sunset. All users will download a single IntelliJ IDEA installer, with IntelliJ IDEA Ultimate features requiring a subscription to be unlocked, but LSP support will remain available to everyone.\nThe LSP implementation itself stays closed-source and commercial, but we’ll keep it fully accessible for third-party plugins at no charge. This means plugin developers can now target a much broader user base without requiring their users to purchase the IntelliJ IDEA license.\nWhat does this mean for plugin developers \nThis change addresses one of the most persistent complaints from the developer community. Previously, plugins using the LSP were essentially limited to IntelliJ IDEA Ultimate users, creating a significant barrier for:\nOpen-source plugin developers who wanted to provide LSP-based language support without restricting their user base.\nNiche language communities, where requiring a paid subscription made adoption impractical, especially for small teams or individual contributors.\nEducational environments, where managing different IDE editions added unnecessary complexity and friction.\nThe unified approach means plugin developers can now:\nBuild LSP-based plugins that work for users of all JetBrains IDEs.\nReduce the complexity of explaining installation requirements to users.\nCompete more effectively with competitors’ extensions, which have had universal LSP support.\nCurrent LSP capabilities and setup\nThe LSP API in the IntelliJ Platform has matured significantly since its introduction in 2023.2 and currently supports the following:\nCore language features:\nCode completion with resolve support\nGo to definition and type definition\nHover documentation\nFind references definition\nSemantic highlighting\nDiagnostics (both push and pull models)\nAdvanced features:\nCode actions and quick-fixes\nDocument formatting\nDocument links and color preview\nIntention actions\nWorkspace commands\nPlugin developers should target IntelliJ IDEA Ultimate 2025.2.1+ and include the optional dependency on the com.intellij.modules.lsp module in the plugin.xml file.\n<idea-plugin>\n  <depends optional=”true” config-file=\"lsp.xml\">com.intellij.modules.lsp</depends>\n</idea-plugin>\nTo ensure the plugin is only available for installation in 2025.2.1+ and later, specify the since-build property in your build.gradle.kts file with:\nintellijPlatform {\n    pluginConfiguration {\n        ideaVersion {\n            sinceBuild = \"252.25557\"\n        }\n    }\n}\nIf your project is based on the Plugin Template, set the relevant build number in the gradle.properties file:\npluginSinceBuild=252.25557\nTo integrate the Kotlin LSP, two components are needed:\nAn LSP server descriptor that specifies supported files and offers a command line to launch the server as a standalone process.\nAn LSP support provider that ensures the server is accessible for a given file.\nServer Descriptor\nThe following KotlinLspServerDescriptor creates an LSP support provider for the Language Server for Kotlin that handles Kotlin files (.kt extension). The provider will ensure that the language server runs in a separate process from the kotlin-lsp binary available in the PATH environment variable.\nprivate class KotlinLspServerDescriptor(project: Project)\n    : ProjectWideLspServerDescriptor(project, \"KN Kotlin LSP\") {\n\n    override fun isSupportedFile(file: VirtualFile) =\n        file.extension == \"kt\"\n\n    override fun createCommandLine() =\n        GeneralCommandLine(\"kotlin-lsp\", \"--stdio\")\n}\nLSP Support Provider\nCreate an LSP support provider that initiates the LSP server when needed, using the appropriate server descriptor.\nclass KotlinLspServerSupportProvider : LspServerSupportProvider {\n\n    override fun fileOpened(\n        project: Project,\n        file: VirtualFile,\n        serverStarter: LspServerSupportProvider.LspServerStarter,\n    ) {\n        if (file.extension == \"kt\") {\n            serverStarter.ensureServerStarted(\n                KotlinLspServerDescriptor(project)\n            )\n        }\n    }\n}\nThe LSP support provider must be registered in the plugin descriptor, next to the main plugin.xml, within the existing lsp.xml file.\n<idea-plugin>\n  <extensions defaultExtensionNs=\"com.intellij\">\n    <platform.lsp.serverSupportProvider\n      implementation=\"com.example.KotlinLspServerSupportProvider\"/>\n  </extensions>\n</idea-plugin>\nYou can find the above LSP implementation as a Kotlin Notebook example here: https://github.com/Kotlin/kotlin-notebook-intellij-platform/blob/master/examples/lsp.ipynb\nTrade-offs\nThe IntelliJ Platform documentation is clear about positioning: The LSP approach shouldn’t be considered as a replacement for the existing language API but rather as an added value. While LSP development offers significant advantages, such as reduced maintenance effort, faster development cycles, and cross-platform consistency, it is important to keep the following limitations in mind:\nLimited IDE integration: The LSP approach provides less access to the IntelliJ Platform’s robust native features, which are deeply integrated via the Program Structure Interface (PSI).\nPerformance considerations: Using an LSP-based plugin introduces communication overhead compared to native implementations.\nFeature parity gaps: Some advanced IDE features may not currently have LSP equivalents, limiting the scope for certain plugin developers.\nThe LSP serves as a practical, lightweight solution for plugin developers seeking to reduce complexity and expand their reach while delivering consistent language support. For those who need deeper integration with IntelliJ Platform features, native APIs like the PSI remain the preferred choice.\nGetting started with LSP development\nTo explore LSP integration, plugin developers should:\nReview the comprehensive documentation available in the IntelliJ Platform Plugin SDK.\nExamine existing implementations like the open-source Prisma ORM plugin.\nStart with basic features and gradually add more sophisticated capabilities.\nPlan for the 2025.2 release to leverage universal LSP support.\nWrapping up and looking ahead\nRemoving commercial licensing for LSP integration on the IntelliJ Platform eliminates a significant problem for plugin developers, allowing them to prioritize efficiency and feature work.\nMore importantly, this shift represents more than a purely technical change; it underscores JetBrains’ recognition that language server development should be accessible to the broader developer community, not just those building commercial products.\nWhile LSP integration won’t replace every native API, it provides a practical, lightweight solution for delivering consistent language support across all JetBrains IDEs. This fosters competition and presents an opportunity for plugin creators to target a broader audience. With the 2025.2 release, plugin authors can now evaluate and adopt the LSP on its technical merits, free from licensing constraints.",
        "dc:creator": "Jakub Chrzanowski",
        "content": "The way developers create plugins implementing the Language Server Protocol (LSP) in JetBrains IDEs is undergoing a significant shift. With PyCharm and IntelliJ IDEA adopting a unified distribution model, we’re removing a key obstacle that has been limiting LSP adoption within the IntelliJ Platform ecosystem. Starting with IntelliJ IDEA Ultimate 2025.2, users can continue using [&#8230;]",
        "contentSnippet": "The way developers create plugins implementing the Language Server Protocol (LSP) in JetBrains IDEs is undergoing a significant shift. With PyCharm and IntelliJ IDEA adopting a unified distribution model, we’re removing a key obstacle that has been limiting LSP adoption within the IntelliJ Platform ecosystem. Starting with IntelliJ IDEA Ultimate 2025.2, users can continue using […]",
        "guid": "https://blog.jetbrains.com/?post_type=platform&p=590419",
        "categories": [
          "idea",
          "intellij-platform",
          "news",
          "intellij-idea",
          "lsp",
          "plugin-development"
        ],
        "isoDate": "2025-09-01T09:02:50.000Z"
      },
      {
        "creator": "Ksenia Shneyveys",
        "title": "ICPC World Finals Livestream: ecnerwala and SecondThread Speed-Solving Kotlin Challenge",
        "link": "https://blog.jetbrains.com/kotlin/2025/08/icpc-world-finals-livestream-ecnerwala-secondthread-kotlin/",
        "pubDate": "Fri, 29 Aug 2025 19:29:31 +0000",
        "content:encodedSnippet": "Join us live from the ICPC World Finals in Baku, Azerbaijan, for a special event. This year, we are hosting a head-to-head match where two of the world’s top competitive programmers, Andrew ‘ecnerwala’ He and David ‘SecondThread’ Harmeyer, will speed-solve Kotlin problems in real time. \nSave the date: September 2, 2025, at 9:30 am UTC\n\n\n\n\n\n\nAbout the competitors\nAndrew ‘ecnerwala’ He\nOne of the most accomplished competitive programmers in the world, Andrew is a Codeforces Legendary Grandmaster, two-time IOI gold medalist, ICPC World Finals medalist, double Google Code Jam medalist, and Facebook Hacker Cup champion.\nDavid ‘SecondThread’ Harmeyer\nDavid leads Meta’s Hacker Cup and is a long‑time judge and problem setter, as well as a Codeforces International Grandmaster, two‑time ICPC World Finals competitor, and competitive‑programming YouTuber and ICPC Live interviewer. \nAbout the event\nThe match will be hosted by Sebastian Aigner, Developer Advocate at JetBrains. He will open the stream with an introduction to the modern development ecosystem and Kotlin’s place in it, before handing the stage over to the competitors.\nIn the match, you’ll see how top programmers approach challenges under time pressure, showing off their speed and precision, as well as Kotlin’s strengths as a language for problem-solving. Even if you’ve never followed a coding competition before, watching Andrew and David is a great way to experience the excitement of problem-solving at the highest level. \nTune in to our livestream\n         \nThe problem set and Kotlin Heroes\nThe problem set will come from the Kotlin Heroes: Episode 13 practice round, which will be released at the time of the livestream. The official Kotlin Heroes contest will follow on September 12. And if you feel inspired by the match between ecnerwala and SecondThread, you should sign up to take part! \nA programming competition is more than just a contest – it’s a showcase of creativity, mathematical thinking, and coding mastery. Kotlin Heroes in particular is a great opportunity for everyone to try problem-solving, explore the elegance of Kotlin’s concise syntax, and win prizes!\nJoin Kotlin Heroes\n         \nTo prepare for the event and brush up on Kotlin and competitive programming, check out our competitive programming tutorial and YouTube playlist.\nDon’t miss this rare occasion! Mark September 2, 9:30 am UTC on your calendar and join us live to see Kotlin in action at the ICPC World Finals.\nSee you soon!",
        "dc:creator": "Ksenia Shneyveys",
        "content": "Join us live from the ICPC World Finals in Baku, Azerbaijan, for a special event. This year, we are hosting a head-to-head match where two of the world’s top competitive programmers, Andrew ‘ecnerwala’ He and David ‘SecondThread’ Harmeyer, will speed-solve Kotlin problems in real time.&#160; Save the date: September 2, 2025, at 9:30 am UTC [&#8230;]",
        "contentSnippet": "Join us live from the ICPC World Finals in Baku, Azerbaijan, for a special event. This year, we are hosting a head-to-head match where two of the world’s top competitive programmers, Andrew ‘ecnerwala’ He and David ‘SecondThread’ Harmeyer, will speed-solve Kotlin problems in real time.  Save the date: September 2, 2025, at 9:30 am UTC […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=595459",
        "categories": [
          "news",
          "competitive-programming",
          "icpc",
          "livestream"
        ],
        "isoDate": "2025-08-29T19:29:31.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "IntelliJ IDEA 2025.2.1 Is Out!",
        "link": "https://blog.jetbrains.com/idea/2025/08/intellij-idea-2025-2-1/",
        "pubDate": "Fri, 29 Aug 2025 09:34:49 +0000",
        "content:encodedSnippet": "We’ve just released the first minor update for IntelliJ IDEA 2025.2 – v2025.2.1.\nYou can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website.\nThis release includes the following improvements:\nThe IDE correctly interprets and manages EAR artifact configurations as expected. [IDEA-373295]\nThe Create Branch action is now accessible from all parts of the UI again. [IJPL-199191]\nExporting diagrams as SVG now works as intended. [IJPL-174653]\nMaven Runner now properly recognizes and handles JVM options starting with the -X prefix in the VM Options field as expected. [IDEA-376845]\nTerminal processes again terminate correctly on Windows. [IJPL-159752]\nThe IDE again correctly recognizes valid WebLogic server home paths and runs the WebLogic server. [IDEA-376172, IDEA-377454]\nThe IDE now correctly runs the main() functions in Kotlin projects built with Gradle 9.0. [IDEA-376030]\nMaven run configurations again properly recognize and execute custom POM files specified with the -f option. [IDEA-376875] \nTo find out more about the resolved issues, please refer to the release notes.\nIf you encounter any issues or would like to make a suggestion or a feature request, please submit them to our issue tracker.\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "We’ve just released the first minor update for IntelliJ IDEA 2025.2 – v2025.2.1. You can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website. This release includes the following improvements: To find out more about the resolved issues, [&#8230;]",
        "contentSnippet": "We’ve just released the first minor update for IntelliJ IDEA 2025.2 – v2025.2.1. You can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website. This release includes the following improvements: To find out more about the resolved issues, […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=594278",
        "categories": [
          "releases",
          "bug-fix-update",
          "intellij-idea-2025-2"
        ],
        "isoDate": "2025-08-29T09:34:49.000Z"
      },
      {
        "creator": "Julia Shashkova",
        "title": "IntelliJ IDEA 2025.1.5 Is Out!",
        "link": "https://blog.jetbrains.com/idea/2025/08/intellij-idea-2025-1-5/",
        "pubDate": "Thu, 28 Aug 2025 16:20:57 +0000",
        "content:encodedSnippet": "We’ve released another update for IntelliJ IDEA 2025.1 – v2025.1.5.\nYou can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website.\nThis release includes the following updates:\nThe IDE interface now performs seamlessly during Google Meet screen sharing on macOS when a second monitor is connected. [JBR-7582]\nUrlClassLoader.getFiles now returns the expected instances of java.nio.file.Path without conflicting with other paths. [IJPL-187780] \nTo find out more about the resolved issues, please refer to the release notes.\nIf you encounter any issues or would like to make a suggestion or a feature request, please submit them to our issue tracker.\nHappy developing!",
        "dc:creator": "Julia Shashkova",
        "content": "We’ve released another update for IntelliJ IDEA 2025.1 – v2025.1.5. You can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website. This release includes the following updates: To find out more about the resolved issues, please refer to [&#8230;]",
        "contentSnippet": "We’ve released another update for IntelliJ IDEA 2025.1 – v2025.1.5. You can update to this version from inside the IDE, via the Toolbox App, or by using snaps for Ubuntu. You can also download it from our website. This release includes the following updates: To find out more about the resolved issues, please refer to […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=594646",
        "categories": [
          "releases",
          "bug-fix-update",
          "intellij-idea-2025-1"
        ],
        "isoDate": "2025-08-28T16:20:57.000Z"
      },
      {
        "creator": "Vadim Briliantov",
        "title": "Koog 0.4.0 Is Out: Observable, Predictable, and Deployable Anywhere You Build",
        "link": "https://blog.jetbrains.com/ai/2025/08/koog-0-4-0-is-out-observable-predictable-and-deployable-anywhere-you-build/",
        "pubDate": "Thu, 28 Aug 2025 09:26:51 +0000",
        "content:encodedSnippet": "Featuring Langfuse and W&B Weave Support, Ktor Integration, Native Structured Output, iOS Target, GPT-5, and More.\nKoog 0.3.0 was about making agents smarter and persistent. Koog 0.4.0 is about making them observable, seamlessly deployable in your stack, and more predictable in their outputs – all while introducing support for new models and platforms.\nRead on to discover the key highlights of this release and the pain points it is designed to address.\nLearn more\n🕵️ Observe what your agents do with OpenTelemetry support for W&B Weave and Langfuse\nWhen something goes wrong with an agent in production, the first questions that pop up are “Where did the tokens go?” and “Why is this happening?”. Koog 0.4.0 comes with full OpenTelemetry support for both W&B Weave and Langfuse.\nSimply install the desired plugin on any agent and point it to your backend. You’ll be able to see the nested agentic events (nodes, tool calls, LLM requests, and system prompts), along with token and cost breakdowns for each request. In Langfuse, you can also visualize how a run fans out and converges, which is perfect for debugging complex graphs.\nW&B Weave setup:\nval agent = AIAgent(\n    ...\n) {\n    install(OpenTelemetry) {\n        addWeaveExporter(\n            weaveOtelBaseUrl = \"WEAVE_TELEMETRY_URL\",\n            weaveApiKey = \"WEAVE_API_KEY\",\n            weaveEntity = \"WEAVE_ENTITY\",\n            weaveProjectName = \"WEAVE_PROJECT_NAME\"\n        )\n    }\n}\nThis will allow you to see the traces from your agent in W&B Weave:\n\n\n\n\nLangfuse setup:\nval agent = AIAgent(\n    ...\n) {\n    install(OpenTelemetry) {\n        addLangfuseExporter(\n            langfuseUrl = \"LANGFUSE_URL\",\n            langfusePublicKey = \"LANGFUSE_PUBLIC_KEY\",\n            langfuseSecretKey = \"LANGFUSE_SECRET_KEY\"\n        )\n    }\n}\nThis allows you to see the agent traces and their graph visualisations in Langfuse:\n\n\n\n\nOnce everything is connected, head to your observability tool to inspect traces, usage, and costs.\n🧩 Drop-in Ktor integration to put Koog behind your API in minutes\nAlready have a Ktor server? Perfect! Just install Koog as a Ktor plugin, configure providers in application.conf or application.yaml, and call agents from any route. No more connecting LLM clients across modules – your routes just request an agent and are ready to go.\nNow you can configure Koog in application.yaml:\nkoog:\n  openai.apikey: \"$OPENAI_API_KEY:your-openai-api-key\"\n  anthropic.apikey: \"$ANTHROPIC_API_KEY:your-anthropic-api-key\"\n  google.apikey: \"$GOOGLE_API_KEY:your-google-api-key\"\n  openrouter.apikey: \"$OPENROUTER_API_KEY:your-openrouter-api-key\"\n  deepseek.apikey: \"$DEEPSEEK_API_KEY:your-deepseek-api-key\"\n  ollama.enabled: \"$DEBUG:false\"\nOr in code:\nfun Application.module() {\n    install(Koog) {\n        llm {\n            openAI(apiKey = \"your-openai-api-key\")\n            anthropic(apiKey = \"your-anthropic-api-key\")\n            ollama { baseUrl = \"http://localhost:11434\" }\n            google(apiKey = \"your-google-api-key\")\n            openRouter(apiKey = \"your-openrouter-api-key\")\n            deepSeek(apiKey = \"your-deepseek-api-key\")\n        }\n    }\n}\nNext, you can use aiAgent anywhere in your routes:\nrouting {\n    route(\"/ai\") {\n        post(\"/chat\") {\n            val userInput = call.receive<String>()\n            val output = aiAgent(\n                strategy = reActStrategy(),\n                model = OpenAIModels.Chat.GPT4_1,\n                input = userInput\n            )\n            call.respond(HttpStatusCode.OK, output)\n        }\n    }\n}\n🏛️ Structured output that actually holds up in production\nCalling an LLM and getting exactly the data format you need feels magical – until it stops working and the magic dries up. Koog 0.4.0 adds native structured output (supported by some LLMs) with a lot of pragmatic guardrails like retries and fixing strategies.\nWhen a model supports structured output, Koog uses it directly. Otherwise, Koog falls back to a tuned prompt and, if needed, retries with a fixing parser powered by a separate model until the payload looks exactly the way you need it to.\nDefine your schema once:\n@Serializable\n@LLMDescription(\"Weather forecast for a location\")\ndata class WeatherForecast(\n    @property:LLMDescription(\"Location name\") val location: String,\n    @property:LLMDescription(\"Temperature in Celsius\") val temperature: Int,\n    @property:LLMDescription(\"Weather conditions (e.g., sunny, cloudy, rainy)\") val conditions: String\n)\nYou decide which approach fits your use case best. Request data from the model natively when supported, and through prompts when it isn’t:\nval response = requestLLMStructured<WeatherForecast>()\nYou can add automatic fixing and examples to make it more resilient:\nval weather = requestLLMStructured<WeatherForecast>(\n    fixingParser = StructureFixingParser(\n        fixingModel = OpenAIModels.Chat.GPT4o,\n        retries = 5\n    ),\n    examples = listOf(\n        WeatherForecast(\"New York\", 22, \"cloudy\"),\n        WeatherForecast(\"Monaco\", 29, \"sunny\")\n    )\n)\n👋 Introducing the new Koog target – iOS\nKoog is now available on iOS as part of our focus on Kotlin Multiplatform. Build your agent once and ship it to iOS, Android, and JVM backends – all with the same strategy graphs, tests, and observability hooks. Note: Please use Koog version 0.4.1 to build for iOS.\n🤔 Tune how models think with GPT-5 and custom parameters\nWant your model to think harder on complex problems, or say less in chat-like flows? Version 0.4.0 adds GPT-5 support and custom LLM parameters, including settings like reasoningEffort, so you can balance quality, latency, and cost for each call.\nval params = OpenAIChatParams(\n    /* other params... */\n    reasoningEffort = ReasoningEffort.HIGH\n)\nval prompt = prompt(\"test\", params) {\n    system(\"You are a mathematician\")\n    user(\"Solve the equation: x^2 - 1 = 2x\")\n}\nopenAIClient.execute(prompt, model = OpenAIModels.Chat.GPT5)\n🔄 Fail smarter – production-grade retries for flaky calls and subgraphs\nIt’s inevitable – sometimes LLM calls time out, tools misbehave, or networks hiccup. Koog 0.4.0 introduces RetryingLLMClient, with Conservative, Production, and Aggressive presets, as well as fine-grained control when you need it:\nval baseClient = OpenAILLMClient(\"API_KEY\")\nval resilientClient = RetryingLLMClient(\n    delegate = baseClient,\n    config = RetryConfig.PRODUCTION  // or CONSERVATIVE, AGGRESSIVE, DISABLED\n)\nBecause retries work best with feedback, you can wrap any action (even part of a strategy) in subgraphWithRetry, approve or reject results programmatically, and give the LLM targeted hints on each attempt:\nsubgraphWithRetry(\n    condition = { result ->\n        if (result.isGood()) Approve\n        else Reject(feedback = \"Try again but think harder! $result looks off.\")\n    },\n    maxRetries = 5\n) {\n    /* any actions here that you want to retry */\n}\n📦 Out-of-the-box DeepSeek support \nPrefer DeepSeek models? Koog now ships with a DeepSeek client that includes ready-to-use models:\nval client = DeepSeekLLMClient(\"API_KEY\")\nclient.execute(\n    prompt = prompt(\"for-deepseek\") {\n        system(\"You are a philosopher\")\n        user(\"What is the meaning of life, the universe, and everything?\")\n    },\n    model = DeepSeekModels.DeepSeekReasoner\n)\nAs DeepSeek’s API and lineup of models continue to evolve, Koog gives you a simple and straightforward way to slot them into your agents.\n✨ Try Koog 0.4.0\nIf you’re building agents that must be observable, deployable, predictable, and truly multiplatform, Koog 0.4.0 is the right choice. Explore the docs, connect OpenTelemetry to W&B Weave or Langfuse, and drop Koog into your Ktor server to get an agent-ready backend in minutes.\n🤝 Your contributions make the difference\nWe’d like to take this opportunity to extend a huge thank-you to the entire community for contributing to the development of Koog through your feedback, issue reports, and pull requests!\nHere’s a list of this release’s top contributors:\nNathan Fallet added support for the iOS target.\nDidier Villevalois – added contextLength and maxOutputTokens to LLModel.\nSergey Kuznetsov – fixed URL generation in AzureOpenAIClientSettings.\nMicah – added the missing Document capabilities for LLModel across providers.\njonghoonpark – refined the NumberGuessingAgent example.\nAteş Görpelioğlu helped with adding tool arguments to OpenTelemetry events",
        "dc:creator": "Vadim Briliantov",
        "content": "Featuring Langfuse and W&#38;B Weave Support, Ktor Integration, Native Structured Output, iOS Target, GPT-5, and More. Koog 0.3.0 was about making agents smarter and persistent. Koog 0.4.0 is about making them observable, seamlessly deployable in your stack, and more predictable in their outputs – all while introducing support for new models and platforms. Read on [&#8230;]",
        "contentSnippet": "Featuring Langfuse and W&B Weave Support, Ktor Integration, Native Structured Output, iOS Target, GPT-5, and More. Koog 0.3.0 was about making agents smarter and persistent. Koog 0.4.0 is about making them observable, seamlessly deployable in your stack, and more predictable in their outputs – all while introducing support for new models and platforms. Read on […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=594576",
        "categories": [
          "news",
          "releases"
        ],
        "isoDate": "2025-08-28T09:26:51.000Z"
      },
      {
        "creator": "Mehul Harry",
        "title": "ReSharper’s New Out-of-Process Engine Cuts Visual Studio startup UI freezes by 61%",
        "link": "https://blog.jetbrains.com/dotnet/2025/08/28/resharper-s-new-out-of-process-engine-cuts-ui-freezes-in-visual-studio-by-80/",
        "pubDate": "Thu, 28 Aug 2025 07:00:00 +0000",
        "content:encodedSnippet": "Visual Studio power users love ReSharper’s deep analysis, but the cost has been the occasional UI hiccup that breaks the flow of work. In ReSharper 2025.2, analysis runs in a separate 64-bit worker out of Visual Studio’s UI process. Previously, ReSharper shared Visual Studio’s UI process, so long analyses could stall the UI thread. Now, Visual Studio keeps repainting while ReSharper crunches. \nWe tested this new approach on the Orchard Core solution. During Visual Studio launch, total UI freezes of 100 ms or longer fell from 26 s with ReSharper 2025.1.4 (in-process) to 10.1 s with ReSharper 2025.2 running out of process — a 61% reduction. The side-by-side UI-pause visualizer shows the experience during startup. Here’s how we measured it. \nTesting methods\nWe ran two measurements on the Orchard Core solution (about 223 projects). First, we used ETW MessageCheckDelay to detect UI freezes. For greater flexibility, we later switched to custom tooling that detects periods when the UI thread becomes unresponsive.\nWe then summed all UI freezes of 100 ms or longer occurring during Visual Studio launch, regardless of source.\nWe measured ReSharper 2025.1.4, ReSharper 2025.2 (in-process), ReSharper 2025.2 (out of process), and Visual Studio without any extension installed.\nStartup results – Visual Studio launch (100 ms or longer, all sources)\nThe graph below shows cumulative UI freezes of 100 ms or longer during Visual Studio startup: \n\n\n\n\nFor context, Visual Studio without ReSharper measured 6.3 s during Visual Studio startup in our lab. Deviation from our previous measurements is possible, as the tests were performed locally in different environments by different people using different methods. We are currently implementing even more optimizations for Out-of-Process mode.\nWhat changed under the hood\nMost analysis now runs out of process, so heavy work no longer blocks the Visual Studio UI thread.\nSmarter scheduling reduces contention during typing, completion, and navigation.\nCaches and indexes live in a separate process to avoid extra work inside Visual Studio.\nVisual comparison\nBelow is the side-by-side UI-pause visualizer demo, recorded in similar conditions to the previous table. It demonstrates opening and working in the Orchard Core solution on the same machine with both versions.\nLeft: ReSharper 2025.1.4 (in-process) · Right: ReSharper 2025.2 (out of process)\n\n\n\n\nThe bars at the bottom indicate intervals when the UI thread is unresponsive. A bar turns red when an interval is 100 ms or longer. During those times, typing or clicking in the IDE has no effect. At a glance, you’ll see fewer red bars on the right (out of process), indicating a smoother user experience.\nIf you’ve seen Visual Studio warn that ReSharper is slowing down your computer, Out-of-Process mode targets the root causes behind that warning, so you should now see fewer alerts.\nKnown limitations in 2025.2 (out of process)\nOut-of-Process mode still has some limitations, as it does not yet support the following functionality:\nAI-powered features\nDebugger integrations\nDPA, dotMemory, dotTrace, and dotCover integrations\nTemplate editor\nDiagramming tools\nWe’re actively working to bring these features into Out-of-Process mode, and you can follow our progress in YouTrack.\nLearn more about Out-of-Process mode and how to enable it on this page.\nWhat we’re improving next\nRight-click latency: Profiling highlighted hot spots in PsiFiles.GetPsiFiles and SqlInjectionPsiProvider.ComputeDataForFileContext. We’ve reduced the impact for 2025.2 and will continue to monitor them in real-world projects.\nMethodology and thresholds: We’ll keep validating on larger solutions and may adjust freeze thresholds as we learn more.\nTry it today\n\n\n\n\nThere are four ways to enable Out-of-Process mode in ReSharper 2025.2 or later.\nFrom the menu, go to Extensions | ReSharper | R# Out-of-Process and select Switch to Out-of-Process mode.\nFrom the menu, go to Extensions | ReSharper | Options | Environment | Products & Features and select Run ReSharper in a separate process (preview). When you click Apply, you may be prompted to restart ReSharper.\nUse the Go to action, Ctrl+Shift+A, and then simply type “Switch to Out-of-Process mode” and press Enter.\nIn the status bar (after you’ve enabled Out-of-Process mode at least once), click the R# Out-of-Process indicator and choose Switch to Out-of-Process mode.\nTo revert, you can use any of the paths above and select Switch to In-Process mode. If none of these work, you can start Visual Studio with /ReSharper.InProcess to temporarily revert to In-Process mode and save your choice in the options.\nPower user tip: Start Visual Studio with /ReSharper.OOP to launch directly in Out-of-Process mode.\nCall for feedback\nWhile we are encouraged by the results of our tests, we really want to know if the editor feels faster to you. We invite you to share frame drops, trace files, or even a quick screen recording GIF. We read every report.\nOptionally share anonymous usage statistics\nTo help us validate performance improvements at scale, you can opt in to ReSharper’s Usage Statistics program.\nOpt in: From the menu, go to Extensions | ReSharper | Options | Environment | Usage Statistics, check Participate anonymously in the Usage Statistics program, and then click Save.\nOnly aggregate, anonymous data is sent — no project names or source code. See the Options panel for details.Beyond raw speed, Out-of-Process mode helps ensure ReSharper remains a first-class bridge for Visual Studio users and a stepping-stone for anyone curious about our standalone IDE, Rider.",
        "dc:creator": "Mehul Harry",
        "content": "Visual Studio power users love ReSharper’s deep analysis, but the cost has been the occasional UI hiccup that breaks the flow of work. In ReSharper 2025.2, analysis runs in a separate 64-bit worker out of Visual Studio’s UI process. Previously, ReSharper shared Visual Studio’s UI process, so long analyses could stall the UI thread. Now, [&#8230;]",
        "contentSnippet": "Visual Studio power users love ReSharper’s deep analysis, but the cost has been the occasional UI hiccup that breaks the flow of work. In ReSharper 2025.2, analysis runs in a separate 64-bit worker out of Visual Studio’s UI process. Previously, ReSharper shared Visual Studio’s UI process, so long analyses could stall the UI thread. Now, […]",
        "guid": "https://blog.jetbrains.com/?post_type=dotnet&p=594839",
        "categories": [
          "how-tos",
          "news",
          "resharper",
          "oop",
          "out-of-process",
          "performance",
          "resharper_oop",
          "visual-studio"
        ],
        "isoDate": "2025-08-28T07:00:00.000Z"
      },
      {
        "creator": "Oleg Zinovyev",
        "title": "What’s Next for CLion: The 2025.3 Roadmap",
        "link": "https://blog.jetbrains.com/clion/2025/08/2025-3-roadmap/",
        "pubDate": "Wed, 27 Aug 2025 14:46:13 +0000",
        "content:encodedSnippet": "We’ve begun work on our next major release, 2025.3, which we plan to introduce in November. After reviewing your feedback and our strategic goals, we’ve prioritized the following:\n🚀  Transitioning to the CLion Nova language engine as the default.\n🏗️  Improvements to project formats and build tools.\n🎛️  Improvements to features for embedded development.\n🤖  Support for Junie, JetBrains’ smart coding agent.\nRead on to learn more about our planned updates.\nOur team is committed to creating an IDE that makes development smooth and productive. However, the following is only a preliminary roadmap. We can’t guarantee that all the issues and features listed below will be addressed and implemented in CLion 2025.3. Unexpected circumstances could require us to modify our plans or implementation timelines for some items.\nCLion Nova as the default engine\nThe CLion Nova language engine has been the default for new CLion users since v2024.2. Over the past year, we’ve added the most requested features and fixed critical bugs. We’re now ready to set CLion Nova as the default engine for all users in v2025.3.\nPlease note that you will still be able to use the legacy CLion Classic engine. However, we don’t plan to allocate further resources to its development. All new language-specific features will be available only in CLion Nova.\nWe’ll explain this update in more detail in an upcoming blog post.\nProject formats and build tools\nSysbuild support for nRF Connect SDK projects: In v2025.1, we introduced sysbuild support for Zephyr West projects, which works well with projects that use the vanilla Zephyr RTOS. However, the nRF Connect SDK uses a forked version of Zephyr and sysbuild as the default build tool, while CLion currently expects the default configuration to be non-sysbuild. As a result, CLion cannot read the nRF Connect SDK project information, so users cannot run or debug projects. We plan to solve this issue in v2025.3 (CPP-43380). For now, depending on the configuration, you can enter --no-sysbuild or --sysbuild in the advanced settings of your West project to run or debug an nRF Connect SDK project.\nSupport for Bazel 9: As part of our ongoing efforts to improve the Bazel plugin integration in CLion, we plan to add support for the next major version of the build tool. We recently took over the development of the Bazel for CLion plugin from Google. Our main goals are to improve the plugin’s stability and enhance the user experience.\nEmbedded development\nBundled PlatformIO: The current PlatformIO integration is provided by the corresponding plugin. In v2025.3, we plan to bundle the plugin so that you won’t need to install PlatformIO manually. We’ve already made several usability improvements to the current integration to ensure a smooth transition. These improvements include providing more information on various errors and how to fix them, enabling the import of a project using platformio.ini when no project model is available, and suggesting the reloading of a PlatformIO project when new files are added to the project root.\nImprovements to live watches: In v2025.2, we introduced the live watches feature, which allows you to monitor global variables in real time. In the next release, we plan to enhance the feature’s functionality by enabling you to view structure and peripheral registry values, export data in the CSV format, use autocompletion for variable names, and more.\nImprovements to ESP-IDF: We’re working on better integration with the ESP-IDF framework, improving it step by step. Several related updates will be introduced in v2025.3.\nDebugger\nImprovements to Qt renderers: Qt renderers, introduced earlier this year, allow you to view Qt-specific variables in a human-readable form. For the upcoming release, our focus will be on fixing some bugs that users reported (CPP-43815, CPP-44928). If you’re new to working with Qt projects in CLion, check out our documentation or this blog post from our colleagues at Qt: Developing Qt applications with CLion.\nSupport for Junie\nJunie is an AI coding agent that can serve as a full-fledged pair programmer. We’d hoped to complete the Junie integration in the previous release, but, unfortunately, it took more time than expected. We plan to complete it for the next release.\nConclusion\nThe Early Access Program is just around the corner and will give you the chance to try all the new features planned for the next major release for free. In the meantime, upgrade to CLion 2025.2 if you haven’t already done so, and let us know what you think!\nDOWNLOAD CLION 2025.2",
        "dc:creator": "Oleg Zinovyev",
        "content": "We’ve begun work on our next major release, 2025.3, which we plan to introduce in November. After reviewing your feedback and our strategic goals, we’ve prioritized the following: 🚀 Transitioning to the CLion Nova language engine as the default. 🏗️ Improvements to project formats and build tools. 🎛️ Improvements to features for embedded development. 🤖 [&#8230;]",
        "contentSnippet": "We’ve begun work on our next major release, 2025.3, which we plan to introduce in November. After reviewing your feedback and our strategic goals, we’ve prioritized the following: 🚀 Transitioning to the CLion Nova language engine as the default. 🏗️ Improvements to project formats and build tools. 🎛️ Improvements to features for embedded development. 🤖 […]",
        "guid": "https://blog.jetbrains.com/?post_type=clion&p=595211",
        "categories": [
          "news",
          "roadmap",
          "clionnova",
          "esp32",
          "junie",
          "platformio",
          "qt",
          "sysbuild",
          "zephyr-west"
        ],
        "isoDate": "2025-08-27T14:46:13.000Z"
      },
      {
        "creator": "Alyona Chernyaeva",
        "title": "Exploring Data Science With Kotlin: A Powerlifting Case Study",
        "link": "https://blog.jetbrains.com/kotlin/2025/08/exploring-data-science-with-kotlin-a-powerlifting-case-study/",
        "pubDate": "Wed, 27 Aug 2025 10:18:33 +0000",
        "content:encodedSnippet": "This is a guest post from Adele Carpenter. Adele is a Software Engineer and Consultant at Trifork Amsterdam, where she works on educational systems in the Kotlin/Java/Spring ecosystem and advises customers on their projects.\nTL;DR\nThis blog post uses a dataset from the sport of powerlifting to get you up and running with Kotlin Notebooks, DataFrame, and Kandy, using a PostgreSQL data source for your analysis. It covers:\nData science basics\nConnecting an external data source to your Kotlin Notebook\nAccessing and manipulating the data with DataFrame\nPlotting your findings with the Kandy Library\nThe sample project contains everything you need to create your first plot!\nHave you ever wanted to play around with a dataset, but the thought of setting up a python development environment seemed like too much of a hassle?\nOr was that only me?\nIn my work, I sit firmly in the Kotlin/JVM ecosystem. And I like it here. I also have a hobby that I am really passionate about: powerlifting. The sport where we wear funny little jumpsuits and try to lift as much weight as we can for one repetition in the squat, bench press, and deadlift.\nPowerlifting is somewhat of a niche sport; however, it is growing rapidly and has a strong, supportive community. It is also a data-driven sport that has birthed an open-source dataset containing the results of powerlifting competitions held all over the world. The full dataset is over 3.3 million rows and counting. I was really interested to see what insights lay inside, but I had never written a line of Python before, and didn’t feel like dumping 3.3 million rows in Excel. It’s also not a very elegant solution for a software engineer.\nWouldn’t it be great to use a familiar language and IDE while I’m learning data science?\nEnter Kotlin Notebook.\nKotlin for data science is nothing new: the JetBrains team has been doing great work in this area for some time, and the ecosystem just keeps getting better. You have all the building blocks you need to go from questions to answers in a very short time.\nKotlin Notebook is a plugin you can add to an IDE you’re already familiar with, IntelliJ IDEA, and can have you inspecting your dataset within minutes. The dataset does not have to be limited to niche hobbies. For example, has “the business” ever asked you a question for which you knew you had the data, but you didn’t know how to turn it into actionable information? Like the rate of adoption of a new feature you’d recently launched?\nGetting started\nTo get started, just download the Kotlin Notebook plugin from JetBrains Marketplace.\nThe next step is to connect your data source. A lot of examples you find online will have you import a .csv and manipulate it in memory as a dataframe. This is a fine approach for smaller datasets (up to 100,000 rows), but for larger datasets, it can end up being slow and impractical.\nThe Kotlin DataFrame library provides several convenient functions for accessing your datasource and manipulating the results as a dataframe. A dataframe is a tabular data structure consisting of rows and columns, similar to a spreadsheet or an SQL table. It is a common and powerful abstraction used in data science.\nThe rest of this article is going to assume that you’re following along with the sample project. However, if you have a database you’d like to explore, you can of course connect it up and try to draw out your own insights!\nThe sample project looks at participation in the sport of powerlifting in 2023.\nOpen up the sample project and take a look at my-first-notebook.ipynb.\nFirst, we import the Kotlin DataFrame and Kandy libraries.\nkotlin notebook\n\n%use kandy\n\n%use dataframe\nKandy is an open-source plotting library for Kotlin based on the lets-plot visualization library. Data is nice, but seeing is believing. Kandy helps us turn rows and columns full of numbers into actionable insights.\nBut before we can get plotting, we need data. We connect to the containerized Postgres database using a URL, username, and password. Then, we can fetch the contents of the powerlifting_data table using readSqlTable.\nkotlin notebook\n\nval dbConfig = DbConnectionConfig(URL, USER_NAME, PASSWORD)\n\nval data = DataFrame.readSqlTable(dbConfig, \"powerlifting_data\")\nImporting the entire table defeats the purpose of creating a database, so I would not recommend making this your standard workflow (especially if you have more than 100,000 rows). But for today’s exploratory purposes, it’s a fine place to start. Later, I’ll show you how to use SQL queries and dataframes together to help you work more efficiently. \nUnderstanding the dataset\nIn order to do data science well, you need to understand your dataset. Taking the time to get to know your dataset helps you avoid making incorrect assumptions and drawing (costly) incorrect conclusions. I cannot stress enough the importance of this step! This is why I started my data science journey with powerlifting. It’s a domain I have experienced firsthand, and it is much more than a dataset to me. Let me show you what I mean. \nWe can use the describe function from Kotlin Dataframe on the fetched data.\nkotlin notebook\n\ndata.describe()\n\n\n\n\nThe describe() function gives us some essential information about our powerlifting dataset. The column names are listed on the left, in the name column, alongside some summary statistics. Using the output, we can say:\nThe dataset has 178,972 rows.\nOf those, 104,960 are unique names (lifters).\nName, sex, event, equipment, place, federation, date, country, and meetname are mandatory fields.\nAll other fields are nullable (potentially empty).\nThe most common event is SBD and with minimal equipment (aka Raw).\nThere are also some other curious things that may not be clear if you do not understand powerlifting:\n1. The minimums for the squat, bench, and deadlift are all negative. This is how a missed lift is represented in the dataset. A missed lift is one that was attempted during the competition but was not completed successfully; therefore, it does not contribute to the final score or total for the lifter. This convention makes the mean and median values from the describe() function largely useless.\n2. The entries squat4kg, bench4kg, and deadlift4kg have a large number of null values. Fourth attempts are rare and do not count toward the TotalKg. They are used for recording single-lift records (e.g. deadlift world record) and can only be taken under special circumstances. For most purposes, you can leave these values out of your analyses.\nAnswering your first research question \nIn a powerlifting meet, each competitor attempts three lifts: squat, bench press, and deadlift. They get three attempts per lift, for a total of nine attempts. The heaviest successful attempt in each lift is added together for their total score.\nPrevailing powerlifting wisdom tells us that completing all lifts in a powerlifting meet to the required standard, aka going 9/9 (“nine for nine”), is the best way to have a successful meet. Here, success is defined not just in terms of maximizing your chances of a spot on the podium, but also for the mental benefits of achieving what you came for.\nSo, as a powerlifter myself, I was really curious to know:\nIs it really better to go nine for nine when chasing a win? Or is that YOLO deadlift actually a good idea?\nIn order to answer this question, we can start by plotting a simple distribution of the number of winners at each number of successful attempts. That’s what we’ll be working through in the rest of this post.\nCollecting only the data you need with SQL\nAs already mentioned, loading the whole database into memory to perform your analysis is next to impossible if your dataset is very large. So why not use SQL to only load the data that you need?\nIn order to answer the research question, I need to find the lifters who got first place in a meet, and then the number of successful lifts they made. Seems simple enough, right?\nAs data science practitioners, there is no teacher or answer book to tell us whether we are right or wrong. We need to combine our knowledge of the domain with sound data science practices and be able to defend any conclusions that we make.\nIn this case, from my experience in powerlifting, I know that\nIn some competitions, there is only one lifter per weight class, which means they will be awarded first place no matter how poorly they do. For this reason, setting a minimum number of entrants per weight class makes sense.\nIn the dataset, competitions are unique by meetname and date.\nFor a specific competition, a class is unique not just by weightclass, but also by division (e.g. juniors, open, and masters).\nSo that leads to the following query. You will see that I’ve filtered out null results in the query, but of course, you could do that directly in the dataframe using the filter function in the dataframe library.\nYou can see that I’ve written a function to return the string query. Of course, you can just write the string directly, but I like to create a function so that the query is easily modifiable with placeholders. For example, to look at a particular year/s or to quickly iterate on the number of entries (lifters) in a weight class. The ability to quickly iterate, learn, and discover is a key component of a successful data science workflow.\nkotlin notebook\n\nfun queryByTimePeriodAndEntries(startYear: String, endYear: String, entries: Int) = \n    \"\"\"\nSELECT\n    pd.*\nFROM\n    powerlifting_data pd\n        JOIN\n    (\n        SELECT\n            meet_name,\n            date,\n            weight_class_kg,\n            division,\n            COUNT(*) AS lifter_count\n        FROM\n            powerlifting_data\n        WHERE\n            date BETWEEN '$startYear-01-01' AND '$endYear-12-31'\n        GROUP BY\n            meet_name, date, weight_class_kg, division\n        HAVING\n            COUNT(*) >= $entries\n    ) AS qualified_classes\n    ON me.meet_name = qualified_classes.meet_name\n        AND me.date = qualified_classes.date\n        AND me.weight_class_kg = qualified_classes.weight_class_kg\n        AND me.division = qualified_classes.division\nWHERE\nme.event = 'SBD'\n  AND me.date BETWEEN '$startYear-01-01' AND '$endYear-12-31'\n  AND me.squat1_kg IS NOT NULL\n  AND me.squat2_kg IS NOT NULL\n  AND me.squat3_kg IS NOT NULL\n  AND me.bench1_kg IS NOT NULL\n  AND me.bench2_kg IS NOT NULL\n  AND me.bench3_kg IS NOT NULL\n  AND me.deadlift1_kg IS NOT NULL\n  AND me.deadlift2_kg IS NOT NULL\n  AND me.deadlift3_kg IS NOT NULL\n  AND me.best3_bench_kg IS NOT NULL\n  AND me.best3_squat_kg IS NOT NULL\n  AND me.best3_deadlift_kg IS NOT NULL\n  AND place != 'NS'; -- no shows are excluded\n    \"\"\"\n\n\n\n\nTo run our query, we can use the readSqlQuery method provided by the DataFrame library. In my experience, I found it a little fussy with white space, so I prefer to create a helper function, which you can find in util.Helpers. The helper function is called fetchResults. Such a function is likely to be used a lot, across multiple analyses. Further, since it simply executes a string query, it also doesn’t change very much. This makes it a good candidate to put into an external Helpers class that we can import into the notebook. Externalising functionality like this means we can keep the boilerplate out of our notebook by defining it once and importing it. \nIf the Helpers class didn’t import, make sure you go to the settings for this notebook and click on Select Modules to Use in the Notebook. Once you change this setting, you will need to restart your Kotlin Notebook Kernel. Then, util.Helpers will be available to import.\n\n\n\n\nSo to start our analysis, we build the query by specifying the startYear, endYear, and the minimum number of entries (lifters) per event.\nThen, we use the helper function to open the database connection, run the query, and then close the connection.\nkotlin notebook\n\nimport util.Helpers\n\nval helpers = Helpers()\n\nval query = queryByTimePeriodAndEntries(\"2023\", \"2023\", 3)\n\nval data = helpers.fetchResults(query)\nNow that we have the results, we can print the first 10 rows using the head function. This is a good habit to get into so you can check that your results make sense as you go and can identify any errors or curiosities early on. We could also run the describe function again to confirm the number of rows, and that we correctly removed null values for our nine lifts (squat1kg, squat2kg, squat3kg, bench1kg, etc.).\nkotlin notebook\n\ndata.head(10)\n\ndata.describe()\nWith this filtered raw data, we can use the DataFrame library to collect our results into a frame of two columns: successfulLifts and count.\nIn order to take advantage of Kotlin’s strong typing as we process our data using Kotlin DataFrame, we can define the schema LifterData with the @DataSchema annotation.\nSo we can define our data as follows:\nkotlin notebook\n\nimport org.jetbrains.kotlinx.dataframe.annotations.*\n\n@DataSchema\n\ninterface LifterData {\n\n    val place: String\n\n    val squat1kg: Double\n\n    val squat2kg: Double\n\n    val squat3kg: Double\n\n    val bench1kg: Double\n\n    val bench2kg: Double\n\n    val bench3kg: Double\n\n    val deadlift1kg: Double\n\n    val deadlift2kg: Double\n\n    val deadlift3kg: Double\n\n}\n\nval successfulLifts = column<Int>(\"successfulLifts\")\n\nval count = column<Int>(\"count\")\n\nval columns = listOf(\n\n    data.squat1kg, data.squat2kg, data.squat3kg,\n\n    data.bench1kg, data.bench2kg, data.bench3kg,\n\n    data.deadlift1kg, data.deadlift2kg, data.deadlift3kg\n\n)\nAs discussed earlier, a positive value for a lift indicates that it was successful. If it is negative, the lift was attempted, but it was ruled a “no lift” and not counted towards the total or final score for the lifter.\nSo using this knowledge, and the data structure we have defined, we can create a function addNumberOfSuccessfulLifts to modify our raw data returned from our SQL query.\nkotlin notebook\n\nfun addNumberOfSuccessfulLifts(data: DataFrame<LifterData>, firstPlaceOnly: Boolean = true): AnyFrame {\n\n    val df = if (firstPlaceOnly) data.filter { it.place == \"1\" } else data\n\n    return df.add(successfulLifts) {\n\n        columns.count { value -> it[value] > 0 }\n\n    }\n\n        .groupBy { it[successfulLifts] }\n\n        .aggregate {\n\n            count() into count\n\n        }\n\n        .drop { it[successfulLifts] in listOf(0, 1, 2) }\n\n        .sortBy(successfulLifts)\n\n}\nHere’s a simple breakdown of what addNumberOfSuccessfulLifts does:\n1. Counts successful lift attempts:\n   – It looks at nine columns: squat1kg, squat2kg, squat3kg, bench1kg, etc.\n   – If a value is greater than 0, it’s considered a successful attempt.\n   – It counts the number of successful attempts for each row and stores it in a new column called successfulLifts.\n2. Groups the data by the number of successfulLifts.\n3. Uses the aggregate function to count how many rows fall into each successfulLifts group (creating a count column).\n4. Removes any anomalous rows where lifters have 0, 1, or 2 successful lifts.\n5. Sorts the remaining data by successfulLifts in ascending order.\nTip!\nTo call addNumberOfSuccessfulLifts without typing errors, we need to cast data to the data schema LifterData we defined above.\nkotlin notebook\n\nval winnersDataFrame = addNumberOfSuccessfulLifts(data.cast<LifterData>())\nAfter calling addNumberOfSuccessfulLifts, we can confirm that it does as intended, by printing the results and inspecting them. The head function is not necessary here, as the dataframe is small, but since it’s good practice, you can make a habit of using it. If you ask for more rows than exist in the dataframe, then it will simply return the entire dataframe.\nkotlin notebook\n\nwinnersDataFrame // OR\n\nwinnersDataFrame.head(10)\n\n\n\n\nPlotting your results with Kandy\nNow the fun can begin… plotting our results with Kandy 🥳\nKandy is a declarative plotting library for Kotlin that allows for easy and intuitive data visualization. Lucky for us, Kandy and DataFrame are a match made in heaven.\nKandy uses code blocks to define plot elements and supports custom styles, themes, and layout adjustments.\nLet’s start with a simple bar chart to visualize the distribution of winners at each number of successful lift attempts. All we need to do is specify which column to map to the x-axis and which to map to the y-axis!\nkotlin notebook\n\nplot(winnersDataFrame) {\n\n    bars {\n\n        x(successfulLifts) \n\n        y(count)\n\n    }\n\n}\nWhich gives us:\n\n\n\n\nPlotting in this simple fashion will make use of default formatting and will use axis labels that are the same as the dataframe accessors. This is not ideal, so we can customize it a bit more. And while it looks like a lot of code, its declarative nature makes it easy to follow.\nkotlin notebook\n\nkandyConfig.themeApplied = false\n\nplot(winnersDataFrame) {\n\n    bars {\n\n        x(successfulLifts)\n\n        y(count) {\n\n            axis.name = \"Number of Winners\"\n\n            axis {\n\n                breaks(listOf(500,1000,1500,2000,2500,3000,3500,4000,4500,5000), format = \"d\")\n\n            }\n\n        }\n\n        fillColor = Color.hex(\"#fec92e\")\n\n        borderLine {\n\n            color = Color.hex(\"#777777\")\n\n            width = 0.5\n\n        }\n\n    }\n\n    layout {\n\n        title = \"Distribution of Winners by Successful Attempts\"\n\n        caption = \"Data: Open powerlifting meets 2023\"\n\n        size = 600 to 300 // default is 600 to 400\n\n        xAxisLabel = \"Successful Attempts\" // alternative to axis.name used for the y axis\n\n        style {\n\n            global {\n\n                text {\n\n                    fontFamily = FontFamily.custom(\"Helvetica Neue\")\n\n                }\n\n                plotCanvas {\n\n                    title {\n\n                        hJust = 0.5 // center the title\n\n                        margin = Margin(10.0)\n\n                        fontSize = 17.0\n\n                    }\n\n                    caption {\n\n                        hJust = 1.0 // align right\n\n                        margin = Margin(10.0, 0.0, 0.0, 0.0)\n\n                    }\n\n                    margin = Margin(0.0, 30.0, 0.0, 5.0)\n\n                }\n\n            }\n\n        }\n\n    }\n\n}.save(\"distribution-of-winners-custom-formatting.svg\")\nAs you can see, we have added a title and axis labels, changed the font, centered the title, and set some margins. We also set custom axis intervals, or breaks at multiples of 500.\nTip! \nKotlin notebooks will apply your chart formatting on top of your IDE theme. So to see what your chart will look like when exported with the .save() function, you can set kandyConfig.themeApplied = false.\nAnd so with these small changes applied, our chart now looks like this:\n\n\n\n\nLooking at this chart, it may be tempting to conclude that actually going 8/9 is the superior strategy in a powerlifting meet, since there are the most winners in this group. This stumped me for a few minutes as well until I realized that lifters who go nine for nine are a special breed and are probably just simply outnumbered. With this in mind, let’s do the visualization again to answer the question:\nOut of all lifters that achieve X number of successful attempts, what percentage of those get first place?\nYou may have already spotted the firstPlaceOnly boolean in the addNumberOfSuccessfulLifts function. By default, it is set to true. Now we can call the function again on our dataframe with firstPlaceOnly set to false, so that we get the distribution of successful attempts for all lifters.\nkotlin notebook\n\nval allLiftersDataFrame = addNumberOfSuccessfulLifts(data, false)\nNow we merge the two dataframes winnersDataFrame and allLiftersDataFrame into a new dataframe dfRatioWinners and calculate the proportion of winners at each number of successful attempts.\nkotlin notebook\n\nval dfRatioWinners =\n\n    dataFrameOf(winnersDataFrame.rename(count).into(winners).columns() + allLiftersDataFrame.select(count).rename(count).into(allLifters).columns())\n\n        .add(ratioWinners) {\n\n            (it[winners].toDouble() / it[allLifters].toDouble()) * 100.0\n\n        }\nHere’s what the code does:\n– Renames the count column in the winnersDataFrame to winners.\n– Selects and renames count in the allLiftersDataFrame to allLifters. The select is important as otherwise you are attempting to add the column successfulLifts into your new dataframe twice, which will throw a runtime error.\n– Combines both columns into the new dataframe.\n– Adds a new column ratioWinners. \n– Calculates winners as a percentage of alllifters. They are each cast to a double so that the division of Int is not rounded to zero before being multiplied by 100 (don’t ask me how long it took me to spot this bug the first time 😉).\nIf we print the resulting dataframe, we get:\nkotlin notebook\n\ndfRatioWinners\n\n\n\n\nPlotting this with Kandy allows us to identify any trend a little easier. You can see this time I’ve assigned the plot to a variable. I prefer this as it provides a little more flexibility in saving the plot or making use of multiplots such as plotBunch (more on this later).\nkotlin notebook\n\nval plotRatioWinners = plot(dfRatioWinners) {\n\n    bars {\n\n        x(successfulLifts) \n\n        y(ratioWinners) {\n\n            axis.name = \"Percentage\"\n\n            axis {\n\n                breaks(listOf(5,10,15,20, 25), format = \"{.0f}%\")\n\n            }\n\n        }\n\n        fillColor = Color.hex(\"#fec92e\")\n\n        borderLine {\n\n            color = Color.hex(\"#777777\")\n\n            width = 0.5\n\n        }\n\n    }\n\n    layout {\n\n        title = \"Percentage of First Places by Successful Lifts\"\n\n        subtitle = \"At least 3 lifters in weight class\"\n\n        caption = \"Data: Open powerlifting meets 2023\"\n\n        size = 600 to 300\n\n        xAxisLabel = \"Successful Attempts\"\n\n        style {\n\n            global {\n\n                text {\n\n                    fontFamily = FontFamily.custom(\"Helvetica Neue\")\n\n                }\n\n                plotCanvas {\n\n                    title {\n\n                        hJust = 0.5\n\n                        margin = Margin(10.0)\n\n                        fontSize = 14.0\n\n                    }\n\n                    subtitle {\n\n                        hJust = 0.5\n\n                        margin = Margin(5.0)\n\n                        fontSize = 11.0\n\n                    }\n\n                    caption {\n\n                        hJust = 1.0\n\n                        margin = Margin(10.0, 0.0, 0.0, 0.0)\n\n                    }\n\n                    margin = Margin(5.0, 30.0, 20.0, 5.0)\n\n                }\n\n            }\n\n        }\n\n    }\n\n}\n\nplotRatioWinners\n\n\n\n\nNow that we have removed the bias due to different group sizes, the story is now a little clearer and lends support to the hypothesis that going 9/9 increases your chances of winning.\nAlthough there were far more winners in 2023 who went 8/9 over 9/9, when we look at the percentage of lifters who went 9/9 and who won, we see that the rate of winning is 26.5% in the 9/9 group compared to 25.8% in the 8/9 group.\nWe can now create a multiplot to make a comparison of the two charts a little easier.\nComparing multiple plots with `plotBunch`\nTo compare both charts, you can use plotBunch. plotBunch is really handy as you can specify exactly how you want your charts arranged.\nkotlin notebook\n\nplotBunch {\n\n    add(plotWinners, 0, 0, 600, 300) // top x position, top y position, width, height\n\n    add(plotRatioWinners, 0, 300, 600, 300) // top y position set to height of chart on top (300)\n\n}\n\n\n\n\nAnswering the research question\nWith this simple analysis, we managed to show that there is indeed a higher rate of winning in the 9/9 group.\nSo, is this it? Does this mean we can say for certain that going 9/9 is always better? Not quite. We can still improve our analysis by:\nTrying to replicate this finding over a longer time, e.g. five or ten years.\nTrying to see if this finding holds for five or ten competitors per weight class.\nTrying to find if this holds at the elite level (elite level can be inferred by filtering on the value in the federation column. For example, if the federation is IPF, then these are international competitions).\nData science is as much about storytelling as it is about data. Call me old-fashioned, but what we’re calling AI in 2025 is really just supercharged data science. The models and methods driving the development of LLMs have their foundation in data science.\nThis is why it’s important to be critical of these models and the stories that they’re telling you. Ask any seasoned data scientist, and they will tell you just how easy it is to make a mistake and draw an incorrect conclusion.\nJust because the tools exist and are easy to use doesn’t mean that they are always going to give you the right answer.\nThe way that we can guard against costly mistakes is not just a sound understanding of data science basics, but also by understanding the domain in which we are operating. \nData science mindset\nEarlier, I mentioned the importance of having a quick and iterative workflow. The reason for this is so that we can run multiple simulations quickly, test assumptions, and get feedback. Doing this helps us build a deep and intimate knowledge of our dataset.\nWhen it comes to data science, iterating quickly is of more importance than your code being production-ready. It’s okay to “cheat” a little and write code you’re maybe a little bit ashamed of. If it helps you iterate quickly, then being a little bit ashamed is a trade-off worth making.\nKotlin Notebook, Kotlin DataFrame, and Kandy provide a nice balance here. They work seamlessly together to allow us to balance discovery with features we enjoy as backend developers, like type-checking and code completion. Further, by working in a familiar development environment such as IntelliJ IDEA and connecting to an external data source, we can start to interact with our data right away. Learning and discovering within minutes.\nSo what are you waiting for? What is something you are curious about? Is there a dataset for it? If so, you already have the tools to start discovering! 💪\nWhere to from here?\nIf you haven’t already, clone the sample repo. A bonus analysis can be found at the bottom of my-first-research-question.ipynb.\nInspired to investigate a topic of your own? Find a dataset about a topic you care about, Kaggle is a great place to start. No matter your chosen topic, remember to stay curious and iterate quickly!\nApply this in your day job. What are you or “the business” curious about? Connect an existing SQL data source and see what insights can be found.\nUse the sample repo as a source of inspiration for your analysis and let me know what you find. You can find me on Bluesky.\nAbout the author\nAdele Carpenter\nAdele Carpenter is a Software Engineer and Consultant at Trifork Amsterdam, where she works on systems for the educational sector. Most of her work day is spent in the Kotlin/Java/Spring ecosystem, although increasingly she plays a pivotal role as trusted advisor to Trifork’s customers.\nAdele is an experienced international speaker, having spoken at multiple editions of NDC, GOTO, Devoxx, and JavaZone. As a speaker, she uses her exposure to real-world customer projects, experiences outside of tech, and passion for story-telling to distill complex ideas into their essential parts. All with an air of good humor.\nWhen she’s not at her computer or on stage, you can find her in the gym pumping some serious iron as she pursues powerlifting.",
        "dc:creator": "Alyona Chernyaeva",
        "content": "This is a guest post from Adele Carpenter. Adele is a Software Engineer and Consultant at Trifork Amsterdam, where she works on educational systems in the Kotlin/Java/Spring ecosystem and advises customers on their projects. TL;DR This blog post uses a dataset from the sport of powerlifting to get you up and running with Kotlin Notebooks, [&#8230;]",
        "contentSnippet": "This is a guest post from Adele Carpenter. Adele is a Software Engineer and Consultant at Trifork Amsterdam, where she works on educational systems in the Kotlin/Java/Spring ecosystem and advises customers on their projects. TL;DR This blog post uses a dataset from the sport of powerlifting to get you up and running with Kotlin Notebooks, […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=593546",
        "isoDate": "2025-08-27T10:18:33.000Z"
      },
      {
        "creator": "Alena Gupaisova",
        "title": "Ready for the Best School Year Ever? Join Our STEM Clubs, Camps, and Competitions",
        "link": "https://blog.jetbrains.com/education/2025/08/27/new-school-year-2025-2026/",
        "pubDate": "Wed, 27 Aug 2025 07:45:19 +0000",
        "content:encodedSnippet": "The start of a new school year brings new chances to learn, grow, and geek out on the stuff you love. If you’re into math, coding, or AI, we’ve got you covered with fun and challenging activities. \nTable of Contents\n\nYouth Clubs\nMath Club\nAI Club\nCoding Club\n\nYouth Coding Challenge competition\nACTS camps\nACTS online\nACTS 2026.1\n\n\nYouth Clubs\nJoin one (or more) of our free online clubs to sharpen your skills, prep for olympiads, or just explore what you love with peers from around the world. Weekly sessions, expert instructors, and a global community await.\nMath Club\nThis is an opportunity to build your mathematical foundations so you can solve programming problems more effectively. \nYou get 10–15 progressively challenging problems to solve each week, plus a 90-minute live session on Saturdays. \nWith two difficulty levels to choose from, you can find content that suits your individual needs. \nInstructors:\n\nOlga Telesheva has over 15 years of experience teaching mathematics, including several years specializing in olympiad mathematics. \nFedor Bakharev holds a PhD in mathematics and is actively engaged in mathematical physics research, particularly in advancing the spectral theory of differential operators. \nTop performers will be awarded 5 points for their entrance test for the Computer Science and Artificial Intelligence BSc program at Neapolis University Pafos, which offers full JetBrains Foundation Scholarships. \nJoin the Math Club\n                                                    \nAI Club\nDive into AI: Learn the basics or even take a swing at reaching an olympiad level (like IOAI).\nParticipate in live sessions every Wednesday, and complete homework assignments to keep building your skills through the week.\nInstructor: \n\nAlex Avdiushenko has a PhD in math modeling and is an analyst on the JetBrains Education and Research team.\nJoin the AI Club\n                                                    \nCoding Club\nThis is a perfect opportunity for those with some experience in competitive programming who want to master their problem-solving skills.\nIt consists of a weekly mashup of problems from previous Codeforces contests, curated by the instructor. \nInstructor: \n\nPavel Mavrin is a 2004 ICPC World Champion, 2002 IOI Silver Medalist, and instructor at JetBrains Academy.\nJoin the Coding Club\n                                                    \nYouth Coding Challenge competition\nGet ready for the JetBrains Youth Coding Challenge, the competition for young coders! This year, it will be split into two parts: a coding competition in November 2025 and a math competition in early 2026.\n\n\n\n\nJust as you’d expect, the Youth Coding Challenge is a tough contest with participants from all over the world. But this time, winning comes with an even bigger prize: an invitation to the Algorithm and Code Training School camps, which will take place both online and in Romania.\nTwo leagues: Junior (ages 13–15) and Senior (ages 16–19)\nNovember 2, 9:00 am – 12:00 pm UTC\nRegister now!\n                                                    \n\n\n\n\nACTS camps\nThis season, we’re hosting not one, but two Algorithm and Code Training School camps: one online and one in-person in Romania!\nACTS online\nThis four-day online intensive camp is designed for school students aged 13–-19 who want to improve their skills in competitive programming.\nWhen: January 16–20, 2026\nWhere: Online\nIdeal for: Students looking to improve their knowledge and skills in key competitive programming topics and boost their performance in national and international competitions. \nWho’s eligible: Secondary school students aged 13–19\nHow to get an invitation: Participate in the Youth Coding Challenge competition and show your best.\nLearn more!\n                                                    \nACTS 2026.1\nWhen: January 24 – February 3, 2026\nWhere: Romania, the exact venue will be announced later.\nIdeal for: Students with a track record in coding competitions on the national level and olympiads who aim to excel internationally.\nWho’s eligible: Secondary school students aged 16–19, though country restrictions may apply. \nNumber of spots: Up to 60.\nCosts: The camp fee is EUR 100 and will cover meals and accommodation, while participants will be responsible for travel costs.\nHow to get an invitation: Participate in the Youth Coding Challenge competition and be among the top participants.\nMore opportunities: If you perform well at the camp, you may get fast-tracked to an interview for a JetBrains Foundation Scholarship for the Computer Science and Artificial Intelligence BSc program at Neapolis University Pafos and the Software, Data and Technology BSc program at Constructor University Bremen.\nLearn more!",
        "dc:creator": "Alena Gupaisova",
        "content": "The start of a new school year brings new chances to learn, grow, and geek out on the stuff you love. If you&#8217;re into math, coding, or AI, we’ve got you covered with fun and challenging activities.&#160; Youth Clubs Join one (or more) of our free online clubs to sharpen your skills, prep for olympiads, [&#8230;]",
        "contentSnippet": "The start of a new school year brings new chances to learn, grow, and geek out on the stuff you love. If you’re into math, coding, or AI, we’ve got you covered with fun and challenging activities.  Youth Clubs Join one (or more) of our free online clubs to sharpen your skills, prep for olympiads, […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=594890",
        "categories": [
          "jetbrains-academy",
          "offline-programs",
          "csai",
          "sdt"
        ],
        "isoDate": "2025-08-27T07:45:19.000Z"
      },
      {
        "creator": "Ksenia Shneyveys",
        "title": "How Kotlin Notebook Helps You Teach Programming",
        "link": "https://blog.jetbrains.com/kotlin/2025/08/how-kotlin-notebook-helps-teach-programming/",
        "pubDate": "Tue, 26 Aug 2025 19:21:30 +0000",
        "content:encodedSnippet": "Kotlin Notebook is a great tool for educators who want to teach programming in a more hands-on way. It lets you combine runnable code, Markdown textual explanations, and visualizations in one interactive environment. There’s no need to switch between multiple windows with slides, live demos, and IDEs during lectures. You can use a single notebook to write, explain, and run Kotlin code – all in one place.\nWe spoke with Anastasiia Birillo, the Head of the Education Research Group at JetBrains and former Kotlin lecturer at Constructor University in Bremen, and Kotlin Notebook Team Lead Ilya Muradyan to see how the notebooks are actually used in classes.\nAnastasiia has made her course notebooks publicly available. Check out the full notebook directory. For comparison, see the ‘Programming in Kotlin’ public materials – a slide-based course format.\nKotlin notebooks rely on the Kotlin Notebook plugin, which is bundled and enabled in IntelliJ IDEA by default, making setup simple.\nGet started with Kotlin Notebook\n         \nReal classroom use\nIn her course at Constructor University, Anastasiia used notebooks to teach programming in Kotlin. Each topic was built around a structured notebook with organized chapters consisting of Kotlin code cells with immediate outputs and explanations written in Markdown. Students watched her walk through the material live and had a copy of the notebook to rerun everything on their own.\n“I wanted students to see the whole idea, not just disconnected snippets. Kotlin notebooks made that possible. It worked really well for the interactive format of lectures with examples, prototypes, and concept exploration – they complemented IntelliJ IDEA for larger projects and practice.”\n\n            \nAnastasiia Birillo\n                                                                Head of the Education Research Group at JetBrains and former Kotlin lecturer at Constructor University in Bremen\n                                    \nExplore real teaching notebooks used at Constructor University. Here are a few shared by Anastasia:\nCollections\nObject-Oriented Programming\nGenerics\nWhy teach with notebooks\nIncremental execution\nKotlin notebooks support cell-based execution, allowing you to show language constructs and code snippets in an isolated way, debugging, testing, and rerunning chunks of code without restarting your whole script. This structure makes them ideal for live demos, debugging, or step-by-step teaching and live walk-throughs.\n“Kotlin notebooks gave structure to my lectures,” Anastasiia says. “Students could focus on the concepts instead of reading whole code snippets.”\nMarkdown + code\nNotebooks combine different types of data in a single interactive space. Want to mix runnable code snippets with explanations and visualizations? Kotlin Notebook helps bring programming concepts to life!\nEasy setup and sharing\nEverything can be easily launched in preset environments. This is especially useful for online classes, where students engage with notebooks shared with them via GitHub with minimal tech overhead. You can also easily share your work between other clients supporting notebooks – see the README for more details. \nTry it yourself: Sample notebooks\nKotlin Notebook is an incredibly effective tool for explaining code and exploring concepts in a structured, runnable way. \n“Thousands of developers already use notebooks for their everyday tasks. We think they address educators’ needs pretty well. Give the notebooks a try and share your feedback with us.”\n\n            \nIlya Muradyan\n                                                                Kotlin Notebook Team Lead\n                                    \nIf you teach Kotlin, run programming workshops, or just want a better way to demo code, give Kotlin notebooks a try. They offer fast setup, more focused lessons, runnable lectures, and support for code, text, and visuals in one file. \nTry Kotlin Notebook now\n         \nHave you used Kotlin Notebook in your classroom or project? Let us know at education@kotlinlang.org. We’d love to hear how you are using it!",
        "dc:creator": "Ksenia Shneyveys",
        "content": "Kotlin Notebook is a great tool for educators who want to teach programming in a more hands-on way. It lets you combine runnable code, Markdown textual explanations, and visualizations in one interactive environment. There’s no need to switch between multiple windows with slides, live demos, and IDEs during lectures. You can use a single notebook [&#8230;]",
        "contentSnippet": "Kotlin Notebook is a great tool for educators who want to teach programming in a more hands-on way. It lets you combine runnable code, Markdown textual explanations, and visualizations in one interactive environment. There’s no need to switch between multiple windows with slides, live demos, and IDEs during lectures. You can use a single notebook […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=594750",
        "categories": [
          "news",
          "education",
          "education-research",
          "kotlin-notebook"
        ],
        "isoDate": "2025-08-26T19:21:30.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "How to Build a CI/CD Pipeline for iOS Projects",
        "link": "https://blog.jetbrains.com/teamcity/2025/08/cicd-for-ios/",
        "pubDate": "Tue, 26 Aug 2025 15:52:42 +0000",
        "content:encodedSnippet": "This article was brought to you by Kumar Harsh, draft.dev.\nDeveloping and releasing iOS applications involves navigating a complex web of code signing, provisioning profiles, multiple iOS versions, and stringent App Store guidelines/requirements. \nWithout an automated continuous integration, continuous delivery and/or deployment (CI/CD) pipeline, these challenges can lead to slower release cycles, increased errors, and inconsistent workflows.\nJetBrains TeamCity Cloud is an iOS DevOps CI/CD solution with support for Swift and Objective-C, macOS build agents, seamless integration with Xcode, and advanced configuration options via YAML. TeamCity simplifies the process of building, testing, and deploying iOS applications.\nIn this article, you will learn how to set up an end-to-end CI/CD pipeline for your iOS projects using TeamCity Cloud. It covers everything from integrating version control systems (VCSs) and automating builds with fastlane to signing and packaging your apps and deploying them to TestFlight.\nUnderstanding the iOS CI/CD pipeline\nA well-structured CI/CD pipeline for iOS applications automates repetitive tasks and ensures high-quality, consistent releases. Before you start building the pipeline, let’s break down the typical stages of an iOS pipeline and how TeamCity Cloud supports each part of the process.\nCode checkout and version control integration\nA typical pipeline begins with fetching the latest changes from your version control system (VCS), such as GitHub, GitLab, or Bitbucket. TeamCity offers built-in integrations for popular VCS providers, allowing you to easily connect your repository and configure access credentials.\n\n\n\n\nYou can set up build triggers so that the pipeline runs automatically on every push or pull request or commit to specific branches. This ensures your project is always tested against the latest code changes.\nBuilding iOS applications with Xcode\nOnce the code is checked out, the next step is to build the project. You can use either the default xcodebuild command line tool or any third-party tool, such as fastlane. In this step, the build tool compiles the source code, assembles resources, and generates the app bundle.\nYou can define build steps for different configurations—such as Debug, Release, or custom schemes—directly in TeamCity. When used with TeamCity Build Parameters, you can reuse the same pipeline for multiple configurations.\nWith Matrix Build on TeamCity, you can even take this a step further and generate multiple builds in parallel using a combination of values for your build parameters. This gives you the flexibility to target multiple environments or testing scenarios.\nExample of matrix builds in TeamCity\n\n\n\nTesting across multiple iOS versions\nTo maintain code quality and prevent regressions, you should always consider including automated testing. TeamCity optimizes automated tests through its parallel testing capabilities. It allows you to test across multiple simulated iOS versions and device configurations simultaneously, reducing feedback cycles and ensuring broader coverage.\nStatic code analysis and code coverage reporting\nStatic code analysis helps catch issues early in the development cycle. You can integrate tools like SwiftLint as build steps to enforce style and coding conventions.\nFor deeper insights, TeamCity supports code-quality tools, like JetBrains Qodana, and can generate code coverage reports to help evaluate test completeness and identify untested areas of your codebase.\nSigning and packaging (IPA files)\nOne of the more intricate parts of iOS CI/CD is managing code signing. Modern iOS DevOps practices recommend using a Git-based or file bucket-based store for certificates and keys. \nPopular tools, like fastlane, offer out-of-the-box support to implement and use these practices conveniently. You can always use git (with SSH authentication) or the AWS CLI tool to connect to your private certificates store from inside your pipelines and sign your apps as needed.\nDeploying to TestFlight or the App Store\nFinally, once your app is built, tested, and signed, it’s ready to be distributed. Tools like fastlane can automate the upload of your IPA files to TestFlight or the App Store from within your pipelines. Y\nou might need to configure App Store Connect or Apple’s application-specific passwords to make this work. But it makes it very easy to push changes to a dedicated TestFlight branch in your VCS repo, which are then uploaded to TestFlight within minutes.\nYou can also configure separate workflows for beta and production releases, include postdeployment notifications for your team, and monitor the deployment status via TeamCity’s dashboards.\nNow that you understand the usual components that make up an iOS pipeline, it’s time to build one yourself! Here’s a rough overview of what this pipeline does:\n\n\n\n\nPrerequisites\nYou’ll need the following before you can move ahead:\nAccess to a TeamCity server or TeamCity Cloud with Mac build agents. Feel free to create a TeamCity Cloud trial account here.\nAn iOS project hosted on GitHub. You can use one of your own projects or fork this one to your repo to follow along.\nAn Apple Developer Program account.\nAccess to the App Store Connect platform.\nfastlane installed locally.\nAn Amazon Web Service (AWS) Simple Storage Service (S3) bucket to store app-signing certificates and profiles.\nSetting up the iOS project\nThis tutorial uses fastlane to define the workflows that will be automated with TeamCity. It’s a popular mobile DevOps tool used across iOS and Android projects.\nInitializing fastlane\nOnce you have cloned the forked repo locally and set up fastlane, run the following command in a terminal inside your project directory:\nfastlane init\nSelect Automate beta distribution to TestFlight as the answer for What would you like to use fastlane for? \nThe CLI will then ask for your Apple ID username and attempt to log in to your App Store Connect account. Once it’s logged in, it will create a fastlane/ folder inside your project directory along with an Appfile. \nThis Appfile will contain the details about your project that you will supply during the fastlane init process. These details can include the app bundle, your Apple ID email, and your Apple Developer team ID.\nNote that for now, fastlane init will hard-code these values in the Appfile, but before pushing the fastlane files to your repo, you should replace these with environment variables; you’ll learn how to do this later in the tutorial.\nSetting up the beta lane\nNext, you need to paste the following contents into fastlane/Fastfile:\ndefault_platform(:ios)\n\nbefore_all do\n  create_keychain(\n    name: \"keychain\",\n    password: \"password\",\n    default_keychain: true,\n    unlock: true,\n    timeout: 3600,\n    lock_when_sleeps: false\n  )\n  match(type: \"appstore\", keychain_name: \"keychain\", keychain_password: \"password\", readonly: true)\nend\n\n\nplatform :ios do\n  desc \"Build and upload to TestFlight\"\n  lane :beta do |options|\n    # Increment build number\n    increment_build_number(xcodeproj: \"Facto.xcodeproj\")\n    \n    # Build the app\n    build_app(\n      scheme: \"Facto\",\n      configuration: \"Release\",\n      export_method: \"app-store\",\n      export_options: {\n        provisioningProfiles: {\n          \"dev.draft.Facto\" => \"Facto Distribution\"\n        }\n      }\n    )\n\n    api_key = app_store_connect_api_key(\n      key_id: options[:key_id],\n      issuer_id: options[:issuer_id],\n      key_filepath: File.absolute_path(\"tmp/AuthKey.p8\"),\n      duration: 1200,\n      in_house: false\n    )\n        \n    # Upload to TestFlight\n    pilot(\n      api_key: api_key,\n      skip_waiting_for_build_processing: true,\n      skip_submission: true\n    )\n    \n  end\nend\nThe Fastfile is where you define lanes—automated workflows that fastlane will run for you. The Fastfile above sets up a lane called beta to build and upload your iOS app to TestFlight.\nThe default_platform(:ios) statement tells fastlane that you’re working with an iOS project, so all lanes will assume this unless otherwise specified.\nThe before_all block runs before any lane is executed. It carries out two tasks before running any lanes:\ncreate_keychain: This creates and unlocks a temporary keychain for your build. This is safer and cleaner than using your login keychain directly. In CI systems, this is a mandatory step as the runner environment often doesn’t ship with a keychain.\nmatch: This uses match to fetch the appropriate App Store provisioning profile from a shared certificate repo and installs it into the keychain. readonly: true ensures that no new profiles are created during the process.\nThe beta lane is your main automation workflow. You’ll run this in TeamCity when you’re ready to build the app and push it to TestFlight.\nEach step in this lane performs a part of the TestFlight release process:\nincrement_build_number(xcodeproj: \"Facto.xcodeproj\") automatically increases the build number in your Xcode project. This is required for each TestFlight upload.\nbuild_app(...) builds your iOS app for distribution. It uses the Facto scheme based on the example app provided above, but please make sure to update it to your app’s scheme. Next, it uses the Release configuration and exports the app for the App Store (export_method: \"app-store\"). It also specifies the correct provisioning profile to use for the given bundle identifier. Make sure to update this to match your provisioning profile.\napi_key = app_store_connect_api_key(...) loads a private API key (named AuthKey.p8) to authenticate securely with App Store Connect. The key ID and issuer ID are passed in via options, so you can keep secrets outside the code. You will need to set these up in the CI system before you can run the beta lane.\nFinally, pilot(...) uploads the build to TestFlight using the previously generated api_key. It doesn’t wait for Apple’s build processing to finish or submit the build for App Review, which makes sense during internal testing.\nThis Fastfile allows you to simply call fastlane beta in your TeamCity job after setting up the necessary credentials and have fastlane take care of all deployment tasks.\nConfiguring fastlane match\nNow that your Fastfile is set up, the next step is to configure match, which will handle code signing for you. Code signing is a necessary part of the iOS build and distribution process, and match helps automate it in a safe and scalable way, which is especially useful when working in CI environments like TeamCity.\nTo do that, run the following in your project directory:\nfastlane match init\nThis command will guide you through a short process of configuring a few match preferences and will create a Matchfile for you at the end.\nAs part of this process, fastlane will prompt you to choose a storage backend. For this tutorial, select S3. Here’s why:\nEasier setup: Git-based storage typically requires configuring SSH keys or access tokens in your CI pipeline, which can be tedious and error-prone.\nBetter access control: With S3, you can use IAM roles, bucket policies, or presigned URLs to control who can access signing assets tightly.\nMore secure: S3 eliminates the need to expose or manage SSH credentials and can integrate with cloud-native security tooling for auditing and access logging.\nOnce the Matchfile is created, make sure to fill in your S3 bucket’s name in the s3_bucket(\"\") statement in the file.\nRun the following command to store your certificates and profiles in this bucket using match:\nfastlane match appstore\nThis command tells fastlane to generate or download the necessary signing certificates and provisioning profiles for App Store distribution.\nOnce that’s done, fastlane will upload your certificates and provisioning profiles to the S3 bucket and automatically pull them down during builds. You won’t need to manage or manually install signing files anymore; match will do it for you.\nAt this point, you should update your Appfile to remove the hard-coded credentials that fastlane init created. Storing sensitive values directly in configuration files poses a security risk if they’re accidentally committed to version control. \nInstead, you’ll use environment variables to supply these values securely. Replace the contents of the fastlane/Appfile file with the following:\napp_identifier ENV[\"APP_IDENTIFIER\"]\napple_id ENV[\"APPLE_ID\"]\nteam_id ENV[\"TEAM_ID\"]\nAt this point, you are ready to start building a TeamCity pipeline. Make sure to commit the fastlane folder and its contents (Appfile, Fastfile, and Matchfile) to your app’s GitHub repo before moving ahead.\nCreate a new project in TeamCity Cloud\nNow that your iOS project is set up with fastlane, it’s time to create a new project in TeamCity Cloud. This will be the foundation of your CI/CD pipeline.\nLet’s start with a project creation. Head over to your TeamCity Cloud instance and click the + sign in the menu on the left. Click Manually, choose the name for your project, and TeamCity will automatically fill out the Project ID for you. Then click Create:\n\n\n\n\nYou’ll then see the project overview page. Here, you can set up VCS roots for the project, define parameters and other settings. You can also choose whether you want to create a pipeline for the project or use a build configuration.\nHere’s a short description how the two differ:\nPipeline: A simplified alternative to build configurations linked in a build chain. Features a smart visual editor and allows you to use YAML for configuration-as-code.\nBuild configuration: Build configurations and pipelines represent actual CI/CD routines. A build configuration stores a sequence of build steps (basic operations to be performed during a build run), and settings required to execute these steps. \nIn this tutorial, we’ll proceed with pipelines. Click the + Create pipeline button in the UI.\n\n\n\n\nOn the next step, search for the repo that you forked. After you select the repo, you’ll see a few more fields on the page:\n\n\n\n\nHere, set a name for the pipeline and leave the other options as defaults. Once that’s done, click Create. This will create the pipeline for you. \nAlso, since you selected the default options when choosing the repo and creating the pipeline (set Default branch to main and Branches to monitor to All branches), this pipeline will be configured to run whenever a commit is pushed to any branch on the repo. You can change this option later if you want, though.\nOnce the pipeline is created, you’ll be navigated to the pipeline editor view, with options to create build configurations, add build steps, configure triggers, and set up your iOS deployment workflow:\n\n\n\n\nYou can now start configuring your jobs!\nConfigure build job\nYou’ll notice that an empty job has already been created for you with the name Job 1. You will update this job to set up your iOS development credentials and run the fastlane beta command.\nFirst of all, you need to set the runner for the job. By default, TeamCity runs jobs on a Linux-based runner. However, you need a macOS-based runner for building iOS projects, so in the right pane under Runs On, search for and select macOS 14 Sonoma Medium Arm64 as the runner:\n\n\n\n\nNext, in the Steps section of the same pane, click Script to add a new script-based step. This is where you will write the script for your fastlane beta call.\nName the step as Push beta and paste the following script in the Script content field:\nexport AWS_ACCESS_KEY_ID=%AWS_ACCESS_KEY_ID%\nexport AWS_SECRET_ACCESS_KEY=%AWS_SECRET_ACCESS_KEY%\nexport AWS_REGION=%AWS_REGION%\n\nmkdir -p fastlane/tmp\n\naws secretsmanager get-secret-value \\\n    --secret-id ASC_KEY \\\n    --output text \\\n    --query SecretString | base64 -d -o fastlane/tmp/AuthKey.p8\n\nexport KEY_ID=`aws secretsmanager get-secret-value \\\n    --secret-id ASC_KEY_ID \\\n    --output text \\\n    --query 'SecretString' | cut -d '\"' -f4`\n                   \nexport ISSUER_ID=`aws secretsmanager get-secret-value \\\n    --secret-id ASC_ISSUER_ID \\\n    --output text \\\n    --query 'SecretString' | cut -d '\"' -f4`\n\nexport APP_IDENTIFIER=`aws secretsmanager get-secret-value \\\n    --secret-id APP_IDENTIFIER \\\n    --output text \\\n    --query 'SecretString' | cut -d '\"' -f4`\n\nexport APPLE_ID=`aws secretsmanager get-secret-value \\\n    --secret-id APPLE_ID \\\n    --output text \\\n    --query 'SecretString' | cut -d '\"' -f4`\n\nexport MATCH_PASSWORD=`aws secretsmanager get-secret-value \\\n    --secret-id MATCH_PASSWORD \\\n    --output text \\\n    --query 'SecretString' | cut -d '\"' -f4`\n\nexport TEAM_ID=`aws secretsmanager get-secret-value \\\n    --secret-id TEAM_ID \\\n    --output text \\\n    --query 'SecretString' | cut -d '\"' -f4`\n\nbundle install\n\nbundle exec fastlane beta \\\n    key_id:\"$KEY_ID\" \\\n    issuer_id:\"$ISSUER_ID\"\n\n\n\n\nLet’s take a moment to understand what this script does:\nAWS credentials setup:\nexport AWS_ACCESS_KEY_ID=%AWS_ACCESS_KEY_ID%\nexport AWS_SECRET_ACCESS_KEY=%AWS_SECRET_ACCESS_KEY%\nexport AWS_REGION=%AWS_REGION%\nThese lines set up AWS credentials that will be used to access AWS Secrets Manager. The %VARIABLE% syntax is TeamCity’s way of referencing build parameters.\nApp Store Connect key setup:\nmkdir -p fastlane/tmp\naws secretsmanager get-secret-value \\\n    --secret-id ASC_KEY \\\n    --output text \\\n    --query SecretString | base64 -d -o fastlane/tmp/AuthKey.p8\nThis creates a temporary directory for the App Store Connect API key and downloads it from AWS Secrets Manager. The key is stored in Base64 format and needs to be decoded.\nEnvironment variables from Secrets:\nexport KEY_ID=`aws secretsmanager get-secret-value \\\n    --secret-id ASC_KEY_ID \\\n    --output text \\\n    --query 'SecretString' | cut -d '\"' -f4`\nThis pattern is repeated for all sensitive values (ISSUER_ID, APP_IDENTIFIER, APPLE_ID, MATCH_PASSWORD, and TEAM_ID). Each secret is retrieved from AWS Secrets Manager and stored as an environment variable. The cut -d '\"' -f4 command extracts the actual value from the JSON response.\nDependencies and execution:\nbundle install\nbundle exec fastlane beta \\\n    key_id:\"$KEY_ID\" \\\n    issuer_id:\"$ISSUER_ID\"\nFinally, the script installs Ruby dependencies using Bundler and runs the beta lane with the necessary parameters.\nThis approach has several security benefits:\nSensitive credentials are stored in AWS Secrets Manager, not in TeamCity.\nThe App Store Connect API key is only temporarily available during the build.\nAll sensitive values are passed as environment variables, not command line arguments.\nYou are able to use these tools (aws, bundle, base64, etc.) without having to install them because TeamCity-hosted runners ship with a list of preinstalled software.\nNote that using an external, secure credentials manager is always recommended in production environments, which is why it has been demonstrated above. \nHowever, if you just want to set up the pipeline quickly, you can choose to skip the next section and supply the credentials through TeamCity build parameters. But please make sure to always use credential managers in production.\nSet up AWS Secrets\nBefore you can run this script, you’ll need to set up the following secrets in AWS Secrets Manager:\nASC_KEY: Your App Store Connect API key file (.p8) in Base64 format\nASC_KEY_ID: Your App Store Connect API key ID\nASC_ISSUER_ID: Your App Store Connect API issuer ID\nAPP_IDENTIFIER: Your app’s bundle identifier\nAPPLE_ID: Your Apple ID email\nMATCH_PASSWORD: Password for encrypting/decrypting certificates in match\nTEAM_ID: Your Apple Developer team ID\nYou can follow this guide to create secrets through the AWS console. Make sure these secrets are set up correctly before moving ahead:\n\n\n\n\nSet up build parameters\nTo access these secrets from your pipeline, you need to provide the aws CLI tool with an access key and secret pair that has the necessary permissions to access the secret.\nNote that in TeamCity On-Premises, you can instead use the AWS Connection to provide your pipeline with a method to connect with your AWS resources with temporary credentials instead of exposing static ones.\nYou’ll need to set up three build parameters:\nAWS_ACCESS_KEY_ID: Your AWS access key\nAWS_SECRET_ACCESS_KEY: Your AWS secret key\nAWS_REGION: The AWS region where your secrets are stored (eg us-east-1)\nOnce you have generated these, head over to your pipeline details page and click Pipeline settings above Job Details:\n\n\n\n\nThe right pane will now show pipeline configuration details. You can find both parameters and secrets on this page. TeamCity secrets are build parameters whose actual values are stored securely by TeamCity, hidden away from the web UI, logs, YAML configurations, and other locations.\nYou will notice a + icon next to No Secrets. Click it to add new secrets. Add the secrets listed above. Once that’s done, here’s what the pipeline settings page should look like:\n\n\n\n\nWith these configurations in place, your build job is ready to run. When triggered, it will:\nset up the necessary Apple development credentials from AWS;\ndownload and configure the App Store Connect API key; and\nrun fastlane to build and deploy your app to TestFlight.\nTesting the pipeline\nTo trigger a build, you can either push a new commit to the repo or click the purple Run button at the top right of the TeamCity web portal. It should trigger a new build for you and take you to the build details page. In about four minutes, the build should complete running successfully:\n\n\n\n\nYou can explore the build logs in the right panel to understand how the build processed and read any warning, info, or error messages that were generated. TeamCity groups logs by steps, and searching for and downloading log files is a straightforward process.\nOnce the build completes successfully, you should receive an email from App Store Connect on the email address linked to your Apple ID:\n\n\n\n\nIf you log in to your App Store Connect portal, you will see the new version ready to be rolled out for testing:\n\n\n\n\nThis means that your iOS pipeline is working correctly!\nConclusion\nIn this guide, you learned how to build a modern CI/CD pipeline for iOS applications using TeamCity Cloud and fastlane, thus automating your entire workflow from local development to TestFlight deployment. \nThe result is a fully automated pipeline that picks up commits, runs builds, uploads to TestFlight, and provides complete visibility through dashboards, which creates a repeatable workflow that reduces manual effort, eliminates common errors, and ensures consistent app delivery.\nWhile this tutorial focused on TestFlight deployment, the same setup can be extended to include test automation, static analysis, App Store deployment, and team notifications. With TeamCity Cloud’s advanced features — such as live test reporting, matrix builds, and build chains — you have all the tools you need to scale your iOS delivery process as your app and team grow.\n\n                                \nStart a free trial",
        "dc:creator": "Olga Bedrina",
        "content": "This article was brought to you by Kumar Harsh, draft.dev. Developing and releasing iOS applications involves navigating a complex web of code signing, provisioning profiles, multiple iOS versions, and stringent App Store guidelines/requirements. Without an automated continuous integration, continuous delivery and/or deployment (CI/CD) pipeline, these challenges can lead to slower release cycles, increased errors, and [&#8230;]",
        "contentSnippet": "This article was brought to you by Kumar Harsh, draft.dev. Developing and releasing iOS applications involves navigating a complex web of code signing, provisioning profiles, multiple iOS versions, and stringent App Store guidelines/requirements. Without an automated continuous integration, continuous delivery and/or deployment (CI/CD) pipeline, these challenges can lead to slower release cycles, increased errors, and […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=594006",
        "categories": [
          "ios",
          "tutorials",
          "how-to",
          "tutorial"
        ],
        "isoDate": "2025-08-26T15:52:42.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Rhea Patel",
        "title": "Roadmap for AI in Visual Studio (September)",
        "link": "https://devblogs.microsoft.com/visualstudio/roadmap-for-ai-in-visual-studio-september/",
        "pubDate": "Wed, 27 Aug 2025 18:02:11 +0000",
        "content:encodedSnippet": "Today, we’re excited to share our public roadmap, which outlines the next steps in evolving Visual Studio with AI-powered agentic experiences. With every month, we aim to deliver smarter, faster, and more intuitive tools that enhance your coding experience.\nDisclaimer: The items outlined here represent ongoing work for the month. They are not commitments or guarantees for delivery within the current month.\nWith that said, here is what we are working on!\nNew Modes for Debugging and Profiling: \nWe’re streamlining how you find and switch between modes and making sure both built-in and extension-provided modes can handle more complex workflows.\nTwo new agent-powered tools are in progress:\nProfiler agent\nDebugger agent \nSupporting Customization via Modes\nWe are making it seamless to integrate your workflows across your development stack into Visual Studio, tailoring them to you and your organization.\nCustom modes for Copilot Chat\nModel Context Protocol (MCP) Enabled in All Modes\nAgent Mode/Chat:                              \nWe’ve been listening to your feedback on Agent Mode and Chat, and we’re making some big improvements.\nFaster performance\nAgent Mode tool: Speed improvements for code mapping across more models\nBetter visibility\nAgent Mode Progress Indication\nAgent Mode as the default chat experience (Experiment)\nExpanding Agent Mode functionality\nAgent mode tool: run test(s) through test explorer and package search\nSmarter context retention\nProject memories for Copilot Chat\nPlanning/To dos in Copilot Chat\nInstruction file support for Copilot Chat\nMore control\nAllow Disabling Built-In Tools\nRedirect Agent Mode Mid Response\n \nModel Context Proctol (MCP) \nWe want you to bring your entire development stack into Visual Studio, supported by the same security, governance, and trust you expect from our product. To make this possible, we’re expanding support for these capabilities and making them easier to use.\nSupport Prompt\nSupport Resources\nSupport Sampling\nRegistry support for browsing and installing MCP servers\nEnabling governance to support allowlists for MCP servers\nModels\nWe’re committed to giving you access to the latest models, and in Visual Studio we carefully evaluate them to make sure you get the best possible experience. With the recent introduction of Bring Your Own Key, your choice of models is expanding even further.\nGitHub Copilot native support:\nClaude Opus 4.1\nGPT-5 Mini\nBring Your Own Key support:\nAzure Foundry\nCustom URLs (add your own endpoints)\n \nAzure Agentic DevOps\nWe’re bringing the power of agentic workflows and Azure-native capabilities directly into Visual Studio, so you can build, deploy, and manage your applications with the same security, governance, and trust you expect from our platform. The public preview is now available in Visual Studio 2022, featuring an automatic installation of Azure MCP for a seamless start.\nHere’s what’s coming next:\n1P Azure MCP installation in Visual Studio 2026\n\nPublishing and CI/CD (GitHub Actions & Azure DevOps) support to Azure App Service for .NET applications\nCustom modes tailored for Azure developers\nEditor improvements\nCopilot-powered code completions and suggestions in your editor are triggered effortlessly and can accelerate your daily programming. We want to deliver a smooth and intuitive experience for you when interacting with these suggestions that minimize potential conflicts.\nReceive next edit suggestions predicted based on your last edits\nCopilot keyboard shortcut to accept suggestion.\nUse Synthetic Text to Improve Copilot Completions Experiences\nTo make Visual Studio a truly AI-integrated IDE, we want to ensure that Copilot is seamlessly available at every step of your development workflow—not just for writing code, but also for searching, fixing errors, writing unit tests, and even committing and pushing your changes.\nCopilot Supported All-In-One Search Experience\nQuickly Get Copilot Assistance from Your Context Menu\nWe’re excited for you to try these new experiences soon. If you have feedback, post it in the developer community ticket linked above. For other ideas or suggestions, drop a comment below or create a new ticket—our team reviews them all.\nThanks \nThe post Roadmap for AI in Visual Studio (September) appeared first on Visual Studio Blog.",
        "dc:creator": "Rhea Patel",
        "comments": "https://devblogs.microsoft.com/visualstudio/roadmap-for-ai-in-visual-studio-september/#comments",
        "content": "<p>Today, we’re excited to share our public roadmap, which outlines the next steps in evolving Visual Studio with AI-powered agentic experiences. With every month, we aim to deliver smarter, faster, and more intuitive tools that enhance your coding experience. Disclaimer: The items outlined here represent ongoing work for the month. They are not commitments or [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/roadmap-for-ai-in-visual-studio-september/\">Roadmap for AI in Visual Studio (September)</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Today, we’re excited to share our public roadmap, which outlines the next steps in evolving Visual Studio with AI-powered agentic experiences. With every month, we aim to deliver smarter, faster, and more intuitive tools that enhance your coding experience. Disclaimer: The items outlined here represent ongoing work for the month. They are not commitments or […]\nThe post Roadmap for AI in Visual Studio (September) appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=254064",
        "categories": [
          "Copilot",
          "Visual Studio",
          "Agent",
          "Artificial Intelligence",
          "Chat",
          "Models",
          "Roadmap"
        ],
        "isoDate": "2025-08-27T18:02:11.000Z"
      },
      {
        "creator": "Mads Kristensen",
        "title": "The Visual Studio August Update is here – smarter AI, better debugging, and more control",
        "link": "https://devblogs.microsoft.com/visualstudio/the-visual-studio-august-update-is-here-smarter-ai-better-debugging-and-more-control/",
        "pubDate": "Tue, 26 Aug 2025 18:22:28 +0000",
        "content:encodedSnippet": "The August 2025 update for Visual Studio 2022 (v17.14) is now available, and it’s all about helping developers stay focused, productive, and in control. Whether you’re building games, tuning performance, or exploring AI, this release brings meaningful improvements that make everyday development smoother and smarter.\n\nGPT-5 support now available\nWe’re excited to announce that GPT-5 is now available in Visual Studio, bringing the latest advancements in AI directly to your development environment. With GPT-5 integration, you can leverage more powerful, accurate, and context-aware code suggestions and chat experiences. Whether you’re writing complex algorithms, refactoring large codebases, or brainstorming new features, GPT-5 helps you move faster and with greater confidence.\n\nConnect your entire stack with MCP\nWe’re excited to announce that MCP (Model Context Protocol) support is now generally available in Visual Studio. MCP is a powerful protocol that connects AI agents to external tools – like databases, code search, and deployment systems – without needing custom integrations for each one. Think of it as the HTTP of tool connectivity.\nWith this release, Visual Studio makes it easier than ever to manage and connect to MCP servers:\nOAuth support for any provider: Authenticate with any OAuth provider directly from Visual Studio using the new authorization spec.\nOne-click server install from the web: Add MCP servers with a single click from supported repositories – no more manual JSON editing.\nNew server add flow: Use the green plus button in the Copilot Chat tool picker to quickly configure and connect to new servers.\nGovernance controls: Organizations can now manage MCP access via GitHub policy settings for better compliance and control.\n\nThis update makes MCP a first-class experience in Visual Studio, helping teams unlock richer, real-time context across their entire engineering stack.\nSmarter Copilot Chat with better context\nCopilot Chat can now more reliably surface relevant code snippets. It now uses improved semantic code search to better identify when a query should trigger a code lookup. When that context is detected, it searches across your solution or workspace to retrieve the most relevant snippets, even from natural language descriptions, reducing the need to manually navigate your codebase.\n\nSign Up for Copilot with Google\nGetting started with Copilot is now easier than ever. You can sign up using your Google account directly from Visual Studio. It’s a fast, frictionless way to get up and running with AI-powered coding-no extra setup required.\n\nBring your own AI model to Chat\nWant more control over your AI experience? You can now connect your own language models to Visual Studio Chat using API keys from OpenAI, Google, or Anthropic. This gives you the flexibility to choose the model that best fits your workflow, whether you’re optimizing for performance, privacy, or experimentation.\n\nUnified debugging for Unreal Engine\nIf you’re working in C++ with Unreal Engine, debugging just got a major upgrade. Visual Studio now lets you debug Blueprint and native code together in a single session. You’ll see Blueprint data in the call stack and locals window, and you can even set breakpoints directly in Blueprint code.\n\nThis makes it easier to trace interactions and fix issues across both scripting layers.\nCopilot Suggestions when you want them\nPrefer a quieter editor? You can now disable automatic Copilot suggestions and trigger them manually with keyboard shortcuts. This gives you full control over when suggestions appear, helping you stay focused when you need to and get help when you want it.\nCleaner editing with collapsed suggestions\nNext Edit Suggestions (NES) are now hidden by default. Instead of popping up automatically, they appear as a subtle margin indicator when relevant. You decide when to engage, keeping your editor clean and distraction-free.\n\nAccept code completions partially\nHave you ever wanted to only accept the first couple words or lines of a Copilot code completions instead of accepting the whole thing? We are excited to announce that you will now be able to partially accept a completion word by word or line by line!\nGit context in Copilot Chat\nCopilot Chat now understands your Git history. You can reference commits and uncommitted changes directly in chat to summarize work, explain updates, or generate tests-all without leaving the editor.\n\nThis makes it easier to stay in flow while reviewing or refining your code.\nBuilt with your feedback\nMany of the features and fixes in this release come directly from the Developer Community. Your suggestions and bug reports continue to shape Visual Studio, and we’re grateful for your input. You can explore all the community-driven updates and fixes in the release notes.\nThanks again for your feedback and support. We’re excited to keep building Visual Studio with you-one update at a time. Let us know what you think, and as always, happy coding!\nThe post The Visual Studio August Update is here – smarter AI, better debugging, and more control appeared first on Visual Studio Blog.",
        "dc:creator": "Mads Kristensen",
        "comments": "https://devblogs.microsoft.com/visualstudio/the-visual-studio-august-update-is-here-smarter-ai-better-debugging-and-more-control/#comments",
        "content": "<p>The August 2025 update for Visual Studio 2022 (v17.14) is now available, and it’s all about helping developers stay focused, productive, and in control. Whether you&#8217;re building games, tuning performance, or exploring AI, this release brings meaningful improvements that make everyday development smoother and smarter. GPT-5 support now available We&#8217;re excited to announce that GPT-5 [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/the-visual-studio-august-update-is-here-smarter-ai-better-debugging-and-more-control/\">The Visual Studio August Update is here &#8211; smarter AI, better debugging, and more control</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "The August 2025 update for Visual Studio 2022 (v17.14) is now available, and it’s all about helping developers stay focused, productive, and in control. Whether you’re building games, tuning performance, or exploring AI, this release brings meaningful improvements that make everyday development smoother and smarter. GPT-5 support now available We’re excited to announce that GPT-5 […]\nThe post The Visual Studio August Update is here – smarter AI, better debugging, and more control appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=254076",
        "categories": [
          "Copilot",
          "Debug",
          "Git",
          "GitHub Copilot",
          "Productivity",
          "Visual Studio",
          "C++",
          "MCP",
          "Models",
          "Next Edits Suggestion",
          "Sign in"
        ],
        "isoDate": "2025-08-26T18:22:28.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "\r\n                            Catie Keck\r\n            \t\t\t",
        "title": "Hack Week 2025: How these engineers liquid-cooled a GPU server",
        "link": "https://dropbox.tech/culture/hack-week-2025-liquid-cooling-gpu-server",
        "pubDate": "Wed, 27 Aug 2025 08:00:00 -0700",
        "content:encodedSnippet": "Hack Week 2025 at Dropbox centered on the theme “Keep It Simple,” offering opportunities for innovation, experimentation, and finding smart solutions to complex challenges. With in-person hubs in San Francisco, Seattle, and Warsaw—as well as the option to hack virtually—the July event brought together Dropbox developers to explore new ideas and build projects that could shape future products and workflows for tools like Dropbox Dash.\nOne standout effort, “Liquid Cooling CPU/GPU Hardware,” earned the Learn Fast award for accelerating learning and innovation. The team—Bobby Woolweaver, Daniel Coultas, Eddie del Rio, Eric Shobe, and Daniel Parker-Focht—designed a custom liquid cooling system for high-powered GPU servers to tackle the rising thermal demands of AI workloads. They built a lab setup, tested core components, and demonstrated significant benefits: 20–30°C lower operating temperatures under stress, quieter performance than air cooling, and the potential for power savings and environmental benefits.\nForward-looking in scope, the project explores next-generation GPU servers that may require liquid cooling due to increases in power consumption and heat generation. The team plans to expand testing with more liquid cooling labs in multiple data centers. We sat down with systems engineer Bobby Woolweaver and data center engineer Daniel Coultas to discuss their award-winning project and what it could mean for the future of infrastructure at Dropbox.\n\r\n\r\n \r\n\r\n@font-face {\r\nfont-family: 'AtlasGrotesk';\r\nsrc: url('https://cdn.prod.website-files.com/65dcd70b48edc3a7b446950e/65dce019c63112e617513c94_AtlasGrotesk-Medium-Web-vfl38XiTL.woff2') format('woff2');\r\nfont-weight: 500;\r\nfont-style: normal;\r\nfont-display: swap;\r\n}\r\n\r\n@font-face {\r\nfont-family: 'AtlasGrotesk';\r\nsrc: url('https://cdn.prod.website-files.com/65dcd70b48edc3a7b446950e/65dce019711b648fd1ccd24a_AtlasGrotesk-Regular-Web-vflk7bxjs.woff2') format('woff2');\r\nfont-weight: 400;\r\nfont-style: normal;\r\nfont-display: swap;\r\n}\r\n.xf-content-height {margin: 0;}\r\n#cta { font-family: AtlasGrotesk,sans-serif; font-size: .900rem; text-decoration: none; background: #f7f5f2; line-height: 1.69; box-sizing: border-box;}\r\n#cta-box { padding: 15px 20px 15px 20px; }\r\n#cta-hed {font-weight: 500;}\r\n#cta-indent {border-left: 5px solid #1e1919; padding-left:20px;}\r\n#cta a:link, #cta a:visited  {text-decoration: none;}\r\n#cta p { margin: 5px 0px 0px 0px; }\r\n\r\n.dr-theme-dark #cta {background: #000;}\r\n.dr-theme-dark #cta-box {border: 1px solid; border-bottom: 0;}\r\n.dr-theme-dark #cta-indent {border-left: 5px solid #f7f5f2;}\r\n.dr-theme-dark .button {background: #000;}\r\n\r\n.button {\r\n    background-color: #1e1919;\r\n    color:  #f7f5f2;\r\n    height: 2.5rem;\r\n    padding: 10px 5px 10px 20px;\r\n    font-size: 1rem;\r\n    font-weight: 500;\r\n    line-height: 1.2;\r\n    transition: all .3s;\r\n}\r\n\r\n.button:hover { background-color: #0061ff; }\r\n\r\nimg {vertical-align: middle; padding: 0px 1px 2px 0px;}\r\n\r\n.c17-plain-html {margin-bottom: 50px}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n Dropbox Dash: Find anything. Protect everything.\n\r\n\r\nFind, organize, and protect your work with Dropbox Dash. Now with advanced search for video and images—plus generative AI capabilities across even more connected apps.\n\r\n\r\n\r\n\r\n\r\n\nSee what's new →\n\r\n\r\n\r\n\n\n    \n\n\n\n    \n\n\n\nYour experimental lab took home our Learn Fast award this year. Walk us through what you built and how.\n For the Hack Week project, we built our own liquid cooling system from scratch. Normally, these systems come pre-assembled with pumps, radiators, and fans, and you just plug them in. But since we had trouble sourcing a complete system in time, we decided to put one together ourselves. We used scaled-down versions of the same core components you’d see in a data center liquid cooling setup: radiators to exhaust heat, fans, a pump, a reservoir, tubing, manifolds, and some basic sensors. The sensors were key so we could monitor performance and make sure everything was pumping correctly before we connected any expensive GPUs. Once that was in place, we hooked it up to the server itself.\nWhat thermal performance observations did you make while working on this project?\n In terms of immediate thermal benefits, we saw a big difference. When running workloads on the liquid-cooled setup compared to our current air-cooled production system, temperatures were around 20–30°C lower under heavy stress tests. Though these were torture-style tests—even harsher than what we’d normally see in production.\nAnother key part of Hack Week was having the dedicated time to experiment with fan configurations. Since liquid cooling handled the CPUs and GPUs, we were able to remove or run many fans at lower speeds. We still needed some airflow for other components like DIMMs and the network card at the back, but those draw much less power and run at lower thermals compared to the GPUs and CPUs. Daniel even suggested building a specific airflow baffle to direct cooling to exactly where it’s needed.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/august/hack-week-2025/body/OB3buGnk.jpeg 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/august/hack-week-2025/body/OB3buGnk.jpeg\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1600\"\r\n             data-sly-attribute.height=\"1200\"\r\n             data-aem-asset-id=\"decbf330-15bc-4063-af4e-414cb202e6ac:OB3buGnk.jpeg\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/august/hack-week-2025/body/OB3buGnk.jpeg 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/august/hack-week-2025/body/OB3buGnk.jpeg\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1600\"\r\n             data-sly-attribute.height=\"1200\"\r\n             data-aem-asset-id=\"decbf330-15bc-4063-af4e-414cb202e6ac:OB3buGnk.jpeg\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nThe liquid cooling team’s lab at Hack Week 2025\n\r\n        \r\n    \r\n\nLiquid cooling has been around for years. What first sparked your interest in exploring it as a potential solution for Dropbox?\n Liquid cooling has been around for a while, and the industry has been actively experimenting with it. We’ve followed the technology closely, including by attending conventions like the Open Compute Project summit where it’s a big topic. Bobby and I have seen these setups before and thought, this is really interesting—how could we apply it to Dropbox? We’ve had that question in the back of our minds for years now, and now we’re finally turning it into something concrete.\nBobby: Right. But it’s not as simple as just plugging in a liquid-cooled server. We need the right infrastructure in place so that if future high-performance servers require it, we’ll be ready. This project was about building that foundation.\nSo the challenge you’re solving for is future-focused—preparing for next-gen hardware and higher power needs?\n Exactly. It’s about handling both individual server power draw and the overall data center footprint. As new servers demand more power, sticking with only air cooling would force us to spread them out over more space. With liquid cooling, we can stay efficient—using less space, less energy, and potentially lowering costs.\nHow might this technology fit into our current and future infrastructure strategy, particularly with respect to our focus on supporting AI workloads?\n We’re seeing a greater need today for new solutions, especially with GPUs and AI workloads. These systems draw a huge amount of power and generate significant heat. While vendors aren’t yet requiring liquid cooling for their top-tier GPUs, we know it’s on the horizon. Air cooling may soon only support mid-range options.\nDaniel: And with Dropbox focusing more on AI initiatives, it gave us the push we needed. As we expand into GPU-heavy systems, it’s important to evaluate higher-powered setups. Hack Week was the perfect opportunity to explore that.\n\r\n\r\n    \r\n        \r\n            \r\n    \r\n\r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n\r\n        \r\n        \r\n\r\n        \r\n        <!-- <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/august/hack-week-2025/body/PJmnNZ_g.jpeg 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/august/hack-week-2025/body/PJmnNZ_g.jpeg\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1600\"\r\n             data-sly-attribute.height=\"1200\"\r\n             data-aem-asset-id=\"951ce483-71af-4f20-aed1-6c9629cd51e1:PJmnNZ_g.jpeg\"\r\n             data-trackable=\"true\" />\r\n        <img data-sly-test.highRes=\"false\"\r\n             srcset=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/august/hack-week-2025/body/PJmnNZ_g.jpeg 2x,  1x\"\r\n             src=\"/cms/content/dam/dropbox/tech-blog/en-us/2025/august/hack-week-2025/body/PJmnNZ_g.jpeg\"\r\n             aria-hidden=\"\"\r\n             alt=\"\"\r\n             class=\"\"\r\n             data-sly-attribute.width=\"1600\"\r\n             data-sly-attribute.height=\"1200\"\r\n             data-aem-asset-id=\"951ce483-71af-4f20-aed1-6c9629cd51e1:PJmnNZ_g.jpeg\"\r\n             data-trackable=\"true\" /> -->\r\n\r\n        \r\n         \r\n        \r\n    \r\n\r\n            \nThe prototype liquid-cooled GPU server\n\r\n        \r\n    \r\n\nHack Week is a self-driven initiative where engineers are encouraged to explore projects independently. What resourcing or support were you given to explore this project?\n Dropbox has always made it possible for us to experiment. I’ve always felt supported to try new ideas. Our team was really interested in liquid cooling, and since Bobby’s team shared that interest, we were able to secure some funding to kick the project off. It gave us the chance to dive in ourselves and really have fun with it. Of course, we still have to balance it with our regular work, but we’ve been empowered to make the time and space to do that.\nBobby: I’d say the same. Both of our teams strongly believe this is an area we need to invest in—to research, lay the groundwork, and be ready for what’s coming. Once we showed that, we received support all the way up to move forward. So it’s been great to have that backing and be able to push ahead.\nIn-person events like Hack Week are an important part of the Virtual First experience at Dropbox. You both had the chance to attend in person for the first time this year. What did you enjoy about the experience? What were some of the benefits of working together in a physical space?\n I enjoyed getting to hack with the team and connect with people across the company that I don’t usually see. Being in the same room made it easy to bounce ideas off each other and solve issues quickly. For us in physical infrastructure, we usually kick off projects or bring-ups on site at a data center so we can quickly work through challenges and issues that are a normal part of any new project.\nDaniel: My experience is very similar to Bobby’s. Being in person, we have easy access to the minds of our peers. We can bounce ideas off them, pick up workflow improvements, and problem-solve very quickly.\nAdditional contributors to this project include Eric Shobe, Eddie del Rio, and Daniel Parker-Focht.\n~ ~ ~ \nIf building innovative products, experiences, and infrastructure excites you, come build the future with us! Visit jobs.dropbox.com to see our open roles, and follow @LifeInsideDropbox on Instagram and Facebook to see what it's like to create a more enlightened way of working.",
        "dc:creator": "\r\n                            Catie Keck\r\n            \t\t\t",
        "content": "null",
        "contentSnippet": "null",
        "guid": "https://dropbox.tech/culture/hack-week-2025-liquid-cooling-gpu-server",
        "categories": [
          "Culture",
          "AI",
          "Developers",
          "Infrastructure"
        ],
        "isoDate": "2025-08-27T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": [
      {
        "title": "300만 줄의 코드로 배운 것들",
        "link": "https://thdev.tech/review/2025/08/31/Review-Android/",
        "pubDate": "Sun, 31 Aug 2025 00:00:00 +0000",
        "content": "<p>+270만, -240만, 290개</p>\n\n<p>이건 내가 처음부터 끝까지 서비스 하나를 만들고 약 4년간 작성해본 코드 양이며, 모듈 숫자이다.</p>\n\n<p>혼자 서비스를 하면서 선택한 아키텍처 덕분에 안정적인 서비스를 해볼 수 있었다. <a href=\"https://www.youtube.com/embed/lkrEfYO54xU\">정승욱님이 발표한 코드 제로 관련</a>에 나온 코드를 기반하여 수정하고 개선한 프로젝트를 사용했다.</p>\n\n<p>최근엔 iOS 개발도 약 10개월 진행하였는데 iOS TCA를 이해하면서 작성한 코드 역시 +46만 줄, -32만 줄 수정하였다.</p>\n\n<p><a href=\"https://thdev.tech/tca/2025/01/04/iOS-TCA/\">안드로이드 개발자가 본 iOS TCA 살펴보기</a></p>\n\n<h3>이 글에서는</h3>\n<ul>\n  <li>4년간 서비스를 만들며 다듬어온 실용적인 모듈화 전략</li>\n  <li>인터페이스 분리 원칙(ISP)을 적용해 빌드 속도를 개선한 경험을 소개</li>\n  <li>시나리오 기반의 유닛 테스트 방법</li>\n</ul>\n\n<!--more-->\n\n<h2>모듈화</h2>\n\n<p>모듈화의 목적은 무엇일까? 클린 아키텍처를 사용하기 위해서는 모듈화를 해야 한다는 이야기가 있다.</p>\n\n<p>그렇지 않다. 필자의 모듈은 크게 4가지로 나뉜다.</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">Core</code>: UI를 제외한 기본 동작을 처리하는 모듈, 여기에는 테스트용 모듈도 포함된다.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Core-App</code>: 앱 내에서 사용하기 위한 디자인 시스템, UI를 포함하는 모듈이다. 이 역시 테스트 용도 모듈이 포함된다.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Data</code>: 일반적으로 클린 아키텍처의 data, domain, data store 등을 포함한다.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">Feature</code>: 화면을 기준으로 정리한 모듈</li>\n</ul>\n\n<p>2개의 Core를 나눈 이유는 완전 기본 동작을 위한 코드와 앱 내에서 UI를 포함하는 부분을 나누기 위함이다. 그 말은 core는 어디서든 사용할 수 있음을 뜻하는 완전 코어한 모듈이다.</p>\n\n<h2>ISP(인터페이스 분리 원칙)</h2>\n\n<p>모든 코드는 인터페이스 분리 원칙을 기반한 모듈화 구성이다.</p>\n\n<p>다음 구성에 대한 참고 : 드로이드 나이츠 코드를 참고하면 이를 볼 수 있다.</p>\n\n<ul>\n  <li>interface를 정의하는 모듈 하나</li>\n  <li>구현체를 정의하는 모듈</li>\n  <li>테스트 시에 가져다 사용할 Fake 모듈</li>\n</ul>\n\n<p>Feature에는 interface를 기반하여 모든 코드를 구성하고, 테스트를 위한 fake 모듈을 기반하여 테스트를 진행할 수 있다.</p>\n\n<p>구현체 모듈을 수정하더라도 interface를 바라보는 모듈은 재빌드 대상에서 제외되기 때문에 더 빠른 개발이 가능한데, 일반적으로 1분에서 최대 3분 이내 빌드 가능해 빠른 개발이 가능했었다.</p>\n\n<p>이건 단순 모듈의 분리가 아닌 interface를 바라보도록 만든 구조 덕분에 가능했다고 생각한다.</p>\n\n<p>다만, core를 수정한다면 implementation이 feature의 구현체들이 참조하기 때문에 오랜 시간 걸릴 수 있다.</p>\n\n<h2>서버에서 내려주는 오류에 따른 응답 처리</h2>\n\n<p>서버 응답에 대한 처리는 서버에서 Alert/Toast 등의 노출도 제어할 수 있도록 개발하였다.</p>\n\n<p>이에 따라 Error 발생 시 모든 기본 응답은 서버에서 내려주는 대로 노출할 수 있게 되었다. 화면 별로 처음 로드하는 기준을 정하고, 재시도 가능한 형태를 구분하여 개발하였다.</p>\n\n<h2>데이터</h2>\n\n<p>네트워크 모듈의 interface를 주입받아 사용한다. 로컬 데이터는 앱의 성격상 정말 필요한 경우가 아니라면 사용할 일은 없다. 보통 금융 관련은 로컬에 데이터를 저장하는 선택보단 실시간 데이터가 더 중요하다.</p>\n\n<p>금융 앱의 특성상 데이터를 저장할 때는 기본 <a href=\"https://developer.android.com/privacy-and-security/keystore\">Android Keystore</a>를 활용하여 저장하고 값을 꺼내 사용한다.</p>\n\n<h2>도메인은 사용했나?</h2>\n\n<p>도메인은 이전 글에서 작성했지만 <a href=\"https://thdev.tech/architecture/2025/08/17/Clean-Android/\">클라이언트 아키텍처에 대한 단상 - ‘서버’가 진짜 ‘도메인’ 아닐까?</a> 정말 필요하지 않은 이상 사용하지 않았다.</p>\n\n<p>1개 이상의 repository에 접근해서 서로 다른 데이터의 합이 필요한 경우 사용하였다. 지금 공부하는 개발자들은 안드로이드 아키텍처에 가깝다고 생각하겠지만, 지금까지 꾸준히 MVP &gt; MVVM &gt; 클린 아키텍처 적용을 해본 개발자들이라면 원래 그런 것 아니야? 라는 생각을 하는 것은 당연하다. 필자도 오랜 기간 단순 포워딩하는 것이 필요하지 않음을 알고 있다.</p>\n\n<h2>View</h2>\n\n<p>뷰와 뷰모델의 사용은 그냥 흔한 방식이다. UiState를 활용해 데이터를 처리하도록 만들었고, 이때 <code class=\"language-plaintext highlighter-rouge\">@Immutable</code>, <code class=\"language-plaintext highlighter-rouge\">@Stable</code>을 붙여 사용하였다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nd\">@Immutable</span>\n<span class=\"kd\">data class</span> <span class=\"nc\">SomeUiState</span><span class=\"p\">(</span>\n    <span class=\"kd\">val</span> <span class=\"py\">items</span><span class=\"p\">:</span> <span class=\"nc\">ImmutableList</span><span class=\"p\">&lt;</span><span class=\"nc\">String</span><span class=\"p\">&gt;,</span>\n    <span class=\"kd\">val</span> <span class=\"py\">showProgress</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span><span class=\"p\">,</span>\n    <span class=\"kd\">val</span> <span class=\"py\">showPlaceholder</span><span class=\"p\">:</span> <span class=\"nc\">Boolean</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n\n    <span class=\"k\">companion</span> <span class=\"k\">object</span> <span class=\"p\">{</span>\n        \n        <span class=\"kd\">val</span> <span class=\"py\">Default</span> <span class=\"p\">=</span> <span class=\"nc\">SomeUiState</span><span class=\"p\">(</span>\n            <span class=\"n\">items</span> <span class=\"p\">=</span> <span class=\"nf\">persistentListOf</span><span class=\"p\">(),</span>\n            <span class=\"n\">showProgress</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">,</span>\n            <span class=\"n\">showPlaceholder</span> <span class=\"p\">=</span> <span class=\"k\">false</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"kd\">val</span> <span class=\"py\">Placeholder</span> <span class=\"p\">=</span> <span class=\"nc\">Default</span><span class=\"p\">.</span><span class=\"nf\">copy</span><span class=\"p\">(</span>\n            <span class=\"n\">showPlaceholder</span> <span class=\"p\">=</span> <span class=\"k\">true</span><span class=\"p\">,</span>\n            <span class=\"n\">items</span> <span class=\"p\">=</span> <span class=\"nf\">persistentListOf</span><span class=\"p\">(</span><span class=\"s\">\"a\"</span><span class=\"p\">,</span> <span class=\"s\">\"b\"</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>위와 같은 형태이다. 리컴포지션을 중요하게 생각하니 <code class=\"language-plaintext highlighter-rouge\">ImmutableList</code> 역시 사용한다.</p>\n\n<p>Compose는 일반적인 방식이며, Stateful, Stateless를 구분하여 사용하며</p>\n\n<ul>\n  <li>SomeRoute: Navigation에서 불러지는 화면</li>\n  <li>SomeScreen: Route에서 불러다 사용하는 내부의 internal fun SomeScreen()</li>\n  <li>SomeComponent: Screen을 조합하는 모든 구성 요소는 Component를 활용한다.\n    <ul>\n      <li>당연하지만 Component는 Stateless 형태로 작성해야 한다. 다만 모듈의 위치에 따라 data class를 전달받기도 한다.</li>\n    </ul>\n  </li>\n</ul>\n\n<h2>시나리오 기반 테스트</h2>\n\n<p>모든 ViewModel의 로직은 UnitTest를 포함하는데, <a href=\"https://speakerdeck.com/taehwandev/android-mvvm-paeteonyi-jeobgeunbeob-2023-deuroideu-naiceu\">2023 드로이드 나이츠</a> 발표자료에서 일부 소개한 방식을 사용한다.</p>\n\n<p>아래와 같은 시나리오 기반의 코드가 가능하다.</p>\n\n<ul>\n  <li>사용자가 버튼을 누른다.</li>\n  <li>입력값이 있다면 flow를 진행하고, 그렇지 않다면 filter에 걸린다.</li>\n  <li>UiState 상 프로그레스를 실행한다.</li>\n  <li>동의 화면이(Alert/BottomSheet 등)이 뜨면 응답에 따라 동작이 달라진다.\n    <ul>\n      <li>Yes 진행하고 네트워크 통신을 시작한다.</li>\n      <li>No 진행을 중단하고 프로그레스를 원래 상태로 되돌린다.</li>\n    </ul>\n  </li>\n  <li>네트워크 응답에 따라\n    <ul>\n      <li>실패하면 서버에서 내려주는 Alert/Toast 등을 노출하고 프로그레스를 되돌린다.</li>\n      <li>성공하면 완료 처리한다.</li>\n    </ul>\n  </li>\n</ul>\n\n<p>위의 모든 단계를 UnitTest에서 테스트하고 버튼의 복구까지 이어지는 UiState의 상태를 확인하는 식으로 개발하였다. 모두 완벽하진 않다. 다만 UiTest를 하지 않아도 UnitTest 만으로 어느 정도 범위에서 안정적인 서비스가 가능하다는 장점을 가진다.</p>\n\n<p>이런 테스트는 1,000개가 넘게 포함되어 있었다.</p>\n\n<h2>KSP를 활용한 Hilt Module 정의</h2>\n\n<p>메모리상 빠르게 사라질 수 있도록 하려고 Data 모듈에 대한 정의는 Activity 라이프사이클에 따르도록 만들었고, 정말 필요한 경우가 아니라면 싱글턴은 최소한으로 사용하였다.</p>\n\n<p>이런 부분도 자동화를 하고 싶었고, KSP를 활용해 자동화했다. 기존에는 Dagger를 활용하였는데, Hilt를 사용함으로써 더 간결해졌다.</p>\n\n<p>KSP를 활용해 Hilt 모듈을 자동으로 생성할 수 있도록 만들어 사용하였는데, <a href=\"https://github.com/taehwandev/Kilt\">Kilt(Kotlin + Hilt)</a>를 별도로 만들어 두었다.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">@KiltGenerateModule</code>을 추가하면 자동으로 Hilt의 <code class=\"language-plaintext highlighter-rouge\">@Module</code>을 만들어주는 역할을 한다.</p>\n\n<p>참고 : Dagger를 사용하면 사실상 빌드 시간이 더 단축된다. Hilt는 수동으로 구성하던 많은 코드를 자동으로 만드는데 이 역할은 Android Studio의 플러그인이 해주고 있다. 다만 빌드 시간이 늘어날 수밖에 없다.(사실 Dagger일 때 1-2분이었지만 3분 이상으로 늘기도 했다)</p>\n\n<h2>수많은 모듈</h2>\n\n<p>수많은 모듈에서는 당연하지만 결국 모듈의 관리가 가장 중요하다.</p>\n\n<p><a href=\"https://thdev.tech/android/2024/10/20/Android-dependency-manage/\">Android에서 효율적인 모듈 디펜던시 관리하기, build-logic으로 전환하기?</a></p>\n\n<p>build-logic을 사용하는 것은 어찌 보면 필수이다. 최소한의 코드를 사용하여 build.gradle.kts를 관리하여야 한다.</p>\n\n<p>그리고 필자는 사실상 App 모듈을 수정하지 않는 것을 선호한다. 사실 만들고 나면 고칠 일은 거의 없다. 모두 피처 모듈의 형태를 띠고 있으니 더더욱 수정할 일은 없다.</p>\n\n<p>그럼 implementation은 어떻게 하는가? 위 글에도 나오긴 하지만 이제 저 방식으로도 힘들다.</p>\n\n<p>그래서 수정한 코드 방식은 아래와 같다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">dependencies</span> <span class=\"p\">{</span>\n    <span class=\"n\">rootProject</span><span class=\"p\">.</span><span class=\"n\">subprojects</span><span class=\"p\">.</span><span class=\"nf\">filterProject</span> <span class=\"p\">{</span>\n        <span class=\"nf\">implementation</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>필터는 왜 필요한가? 모든 모듈이 하위에 바로 위치하는 것은 아니다. :폴더:폴더:모듈 의 형태를 가지는 경우가 더 흔하다. 그래서 filter를 통해 구분한다.</p>\n\n<div class=\"language-kotlin highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">fun</span> <span class=\"nf\">Set</span><span class=\"p\">&lt;</span><span class=\"nc\">Project</span><span class=\"p\">&gt;.</span><span class=\"nf\">filterProject</span><span class=\"p\">(</span>\n    <span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nc\">Project</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nc\">Unit</span><span class=\"p\">,</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nf\">forEach</span> <span class=\"p\">{</span> <span class=\"n\">project</span> <span class=\"p\">-&gt;</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">.</span><span class=\"n\">name</span> <span class=\"p\">!=</span> <span class=\"s\">\"app\"</span> <span class=\"p\">&amp;&amp;</span> <span class=\"n\">project</span><span class=\"p\">.</span><span class=\"n\">buildFile</span><span class=\"p\">.</span><span class=\"n\">isFile</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nf\">body</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>사실상 위에서부터 순서대로 <code class=\"language-plaintext highlighter-rouge\">settings.gradle.kts</code>에 정의한 모든 모듈을 참조하기에 app 모듈이 아닌 경우를 구분해야 한다.</p>\n\n<p>어찌 보면 단점이다. 기존엔 그냥 특정 모듈을 바로 공통으로 접근할 수 있었는데, 그렇지 않아서 수정한 상태다.</p>\n\n<h2>레거시 ViewModel에서 AAC-ViewModel로</h2>\n\n<p>AAC-ViewModel을 사용하지 않았다. 이유는 굳이 써야 할 이유가 없었다.</p>\n\n<p>하지만 안드로이드 16이 나오면서 이제 AAC-ViewModel을 꼭 사용하긴 해야 한다. 그렇지 않다면 데이터 savedstate를 처리해 주어야 한다. 안드로이드 16부터는 폴더블 기기 600dp 부터 화면 회전이 강제화된다. 회전을 막는다고 하더라도 무시되고 동작한다.</p>\n\n<p>예외를 하면 회전했을 때 좌우에 여백을 공백으로 만들 뿐 회전을 막는 것 역시 아니다. 근데 최근에 이거 안 쓰는 개발자가 있을까 싶다.</p>\n\n<h2>iOS TCA</h2>\n\n<p>TCA를 처음부터 한 것은 아니고 중간부터 투입되어 개발하게 되었다.</p>\n\n<p><a href=\"https://thdev.tech/tca/2025/01/04/iOS-TCA/\">안드로이드 개발자가 본 iOS TCA 살펴보기</a></p>\n\n<p>TCA는 리덕스로 작성되어 있다. 다행히도 안드로이드 개발에서 사용하던 플로우 이벤트 처리 방식을 그대로 이어가면서 개발이 가능하였다는 점이다. 적응하는 시간은 오래 걸렸다. 일반적으로 UiState를 리턴하는 리액트 방식과는 다르게 다음 액션을 전달하는 방식의 차이가 있다. 그래서 이후 안드로이드 아키텍처를 만들면서 소개한 내용과 이어진다.(블로그 글 참고)</p>\n\n<p>10개월이라는 짧은 기간 동안 TCA를 사용해보면서 느낀 점은 딱 하나. 오류 위치를 알려주지 않는다. 의외로 해결법은 간단한데, 코드를 분리해야 한다. 코드를 분리한다고 하여도 오류를 잘 알려주는 것은 아니다.</p>\n\n<p>그냥 어딘가 문법 오류가 있다. 끝. 일일이 주석 처리해 가면서 찾아야 한다. 다행히 런타임 오류가 아닌 것이 어디인가 싶다.</p>\n\n<p>그리고 또 하나 경험한 내용은 앱의 이름 덕분에 앱이 그냥 종료되어지는 오류도 만나보았다. 특정 버전의 OS에서만 오류가 발생하였다. 의심 가는 걸 Gemini와 GPT 둘 다에게 질문했지만 찾지 못했다. 결국 감으로 찾은 이유는 앱 이름이 겹쳐서였다는 사실이다.</p>\n\n<p>앱이 그냥 아무 이유 없이 꺼지는데 분석을 자세히 해보면 더 빨리 찾았겠지만 iOS 경험이 많지 않은 상태에서 AI가 없었다면 며칠 걸렸을지도 모르지만 다행히 하루 만에 이유를 찾고 해결해보았다.</p>\n\n<h2>결국</h2>\n\n<p>결국 요구사항을 잘 반영하는 코드를 만들고 싶은 욕심과 AI를 더 잘 활용하는 방법 등이 있다.</p>\n\n<p>TCA를 하면서 한 가지 느낀 점은 <code class=\"language-plaintext highlighter-rouge\">굳이 Data 모듈도 나누어야 할까?</code> 라는 의문이다. 자동화를 통해 Data 모듈도 KSP로 JSON 통신하는 것을 만들고, 이것을 API 정의한 것에 연동하는 과정을 만들면 더 쉬운 개발도 가능하다는 점이다.</p>\n\n<p>그런 관점에서 이전에 작성한 <code class=\"language-plaintext highlighter-rouge\">도메인 관련 글의 인사이트를 다시 얻게 되었다.</code></p>\n\n<h2>마무리</h2>\n\n<p>약 4년 동안 입력한 코드 양만 합산 316만 줄이다. 여기에는 자동으로 생성되어지는 json이나 파일들이 있을 거니 이런 걸 제외하더라도 300만 줄의 코드를 쳤다는 것이긴 하다. 단순히 파일 이동도 있으니 더 제외하면 더 줄어들겠지만.</p>\n\n<p>코드양이 많다고 많은 걸 해본 것도 아니다. 그냥 즐겁게 코드를 입력하고, 이해하기 위해서 기존의 코드를 가져와 그대로 사용하지 않고 직접 입력하면서 이해하는 것을 우선하려고 노력하였다. 다행히 이를 통해 더 많은 코드를 수정하고 반영할 수 있었다.</p>\n\n<p>다만 누구나 이 코드를 수정할 수 있는가? 뷰는 가능하지만 core는 어렵다. 기본적인 이해를 바탕으로 하기에는 프레임워크를 이해해야 하는 것과 같다.</p>\n\n",
        "contentSnippet": "+270만, -240만, 290개\n이건 내가 처음부터 끝까지 서비스 하나를 만들고 약 4년간 작성해본 코드 양이며, 모듈 숫자이다.\n혼자 서비스를 하면서 선택한 아키텍처 덕분에 안정적인 서비스를 해볼 수 있었다. 정승욱님이 발표한 코드 제로 관련에 나온 코드를 기반하여 수정하고 개선한 프로젝트를 사용했다.\n최근엔 iOS 개발도 약 10개월 진행하였는데 iOS TCA를 이해하면서 작성한 코드 역시 +46만 줄, -32만 줄 수정하였다.\n안드로이드 개발자가 본 iOS TCA 살펴보기\n이 글에서는\n4년간 서비스를 만들며 다듬어온 실용적인 모듈화 전략\n인터페이스 분리 원칙(ISP)을 적용해 빌드 속도를 개선한 경험을 소개\n시나리오 기반의 유닛 테스트 방법\n모듈화\n모듈화의 목적은 무엇일까? 클린 아키텍처를 사용하기 위해서는 모듈화를 해야 한다는 이야기가 있다.\n그렇지 않다. 필자의 모듈은 크게 4가지로 나뉜다.\nCore: UI를 제외한 기본 동작을 처리하는 모듈, 여기에는 테스트용 모듈도 포함된다.\nCore-App: 앱 내에서 사용하기 위한 디자인 시스템, UI를 포함하는 모듈이다. 이 역시 테스트 용도 모듈이 포함된다.\nData: 일반적으로 클린 아키텍처의 data, domain, data store 등을 포함한다.\nFeature: 화면을 기준으로 정리한 모듈\n2개의 Core를 나눈 이유는 완전 기본 동작을 위한 코드와 앱 내에서 UI를 포함하는 부분을 나누기 위함이다. 그 말은 core는 어디서든 사용할 수 있음을 뜻하는 완전 코어한 모듈이다.\nISP(인터페이스 분리 원칙)\n모든 코드는 인터페이스 분리 원칙을 기반한 모듈화 구성이다.\n다음 구성에 대한 참고 : 드로이드 나이츠 코드를 참고하면 이를 볼 수 있다.\ninterface를 정의하는 모듈 하나\n구현체를 정의하는 모듈\n테스트 시에 가져다 사용할 Fake 모듈\nFeature에는 interface를 기반하여 모든 코드를 구성하고, 테스트를 위한 fake 모듈을 기반하여 테스트를 진행할 수 있다.\n구현체 모듈을 수정하더라도 interface를 바라보는 모듈은 재빌드 대상에서 제외되기 때문에 더 빠른 개발이 가능한데, 일반적으로 1분에서 최대 3분 이내 빌드 가능해 빠른 개발이 가능했었다.\n이건 단순 모듈의 분리가 아닌 interface를 바라보도록 만든 구조 덕분에 가능했다고 생각한다.\n다만, core를 수정한다면 implementation이 feature의 구현체들이 참조하기 때문에 오랜 시간 걸릴 수 있다.\n서버에서 내려주는 오류에 따른 응답 처리\n서버 응답에 대한 처리는 서버에서 Alert/Toast 등의 노출도 제어할 수 있도록 개발하였다.\n이에 따라 Error 발생 시 모든 기본 응답은 서버에서 내려주는 대로 노출할 수 있게 되었다. 화면 별로 처음 로드하는 기준을 정하고, 재시도 가능한 형태를 구분하여 개발하였다.\n데이터\n네트워크 모듈의 interface를 주입받아 사용한다. 로컬 데이터는 앱의 성격상 정말 필요한 경우가 아니라면 사용할 일은 없다. 보통 금융 관련은 로컬에 데이터를 저장하는 선택보단 실시간 데이터가 더 중요하다.\n금융 앱의 특성상 데이터를 저장할 때는 기본 Android Keystore를 활용하여 저장하고 값을 꺼내 사용한다.\n도메인은 사용했나?\n도메인은 이전 글에서 작성했지만 클라이언트 아키텍처에 대한 단상 - ‘서버’가 진짜 ‘도메인’ 아닐까? 정말 필요하지 않은 이상 사용하지 않았다.\n1개 이상의 repository에 접근해서 서로 다른 데이터의 합이 필요한 경우 사용하였다. 지금 공부하는 개발자들은 안드로이드 아키텍처에 가깝다고 생각하겠지만, 지금까지 꾸준히 MVP > MVVM > 클린 아키텍처 적용을 해본 개발자들이라면 원래 그런 것 아니야? 라는 생각을 하는 것은 당연하다. 필자도 오랜 기간 단순 포워딩하는 것이 필요하지 않음을 알고 있다.\nView\n뷰와 뷰모델의 사용은 그냥 흔한 방식이다. UiState를 활용해 데이터를 처리하도록 만들었고, 이때 @Immutable, @Stable을 붙여 사용하였다.\n\n@Immutable\ndata class SomeUiState(\n    val items: ImmutableList<String>,\n    val showProgress: Boolean,\n    val showPlaceholder: Boolean,\n) {\n\n    companion object {\n        \n        val Default = SomeUiState(\n            items = persistentListOf(),\n            showProgress = false,\n            showPlaceholder = false,\n        )\n\n        val Placeholder = Default.copy(\n            showPlaceholder = true,\n            items = persistentListOf(\"a\", \"b\"),\n        )\n    }\n}\n\n\n위와 같은 형태이다. 리컴포지션을 중요하게 생각하니 ImmutableList 역시 사용한다.\nCompose는 일반적인 방식이며, Stateful, Stateless를 구분하여 사용하며\nSomeRoute: Navigation에서 불러지는 화면\nSomeScreen: Route에서 불러다 사용하는 내부의 internal fun SomeScreen()\nSomeComponent: Screen을 조합하는 모든 구성 요소는 Component를 활용한다.\n    \n당연하지만 Component는 Stateless 형태로 작성해야 한다. 다만 모듈의 위치에 따라 data class를 전달받기도 한다.\n시나리오 기반 테스트\n모든 ViewModel의 로직은 UnitTest를 포함하는데, 2023 드로이드 나이츠 발표자료에서 일부 소개한 방식을 사용한다.\n아래와 같은 시나리오 기반의 코드가 가능하다.\n사용자가 버튼을 누른다.\n입력값이 있다면 flow를 진행하고, 그렇지 않다면 filter에 걸린다.\nUiState 상 프로그레스를 실행한다.\n동의 화면이(Alert/BottomSheet 등)이 뜨면 응답에 따라 동작이 달라진다.\n    \nYes 진행하고 네트워크 통신을 시작한다.\nNo 진행을 중단하고 프로그레스를 원래 상태로 되돌린다.\n네트워크 응답에 따라\n    \n실패하면 서버에서 내려주는 Alert/Toast 등을 노출하고 프로그레스를 되돌린다.\n성공하면 완료 처리한다.\n위의 모든 단계를 UnitTest에서 테스트하고 버튼의 복구까지 이어지는 UiState의 상태를 확인하는 식으로 개발하였다. 모두 완벽하진 않다. 다만 UiTest를 하지 않아도 UnitTest 만으로 어느 정도 범위에서 안정적인 서비스가 가능하다는 장점을 가진다.\n이런 테스트는 1,000개가 넘게 포함되어 있었다.\nKSP를 활용한 Hilt Module 정의\n메모리상 빠르게 사라질 수 있도록 하려고 Data 모듈에 대한 정의는 Activity 라이프사이클에 따르도록 만들었고, 정말 필요한 경우가 아니라면 싱글턴은 최소한으로 사용하였다.\n이런 부분도 자동화를 하고 싶었고, KSP를 활용해 자동화했다. 기존에는 Dagger를 활용하였는데, Hilt를 사용함으로써 더 간결해졌다.\nKSP를 활용해 Hilt 모듈을 자동으로 생성할 수 있도록 만들어 사용하였는데, Kilt(Kotlin + Hilt)를 별도로 만들어 두었다.\n@KiltGenerateModule을 추가하면 자동으로 Hilt의 @Module을 만들어주는 역할을 한다.\n참고 : Dagger를 사용하면 사실상 빌드 시간이 더 단축된다. Hilt는 수동으로 구성하던 많은 코드를 자동으로 만드는데 이 역할은 Android Studio의 플러그인이 해주고 있다. 다만 빌드 시간이 늘어날 수밖에 없다.(사실 Dagger일 때 1-2분이었지만 3분 이상으로 늘기도 했다)\n수많은 모듈\n수많은 모듈에서는 당연하지만 결국 모듈의 관리가 가장 중요하다.\nAndroid에서 효율적인 모듈 디펜던시 관리하기, build-logic으로 전환하기?\nbuild-logic을 사용하는 것은 어찌 보면 필수이다. 최소한의 코드를 사용하여 build.gradle.kts를 관리하여야 한다.\n그리고 필자는 사실상 App 모듈을 수정하지 않는 것을 선호한다. 사실 만들고 나면 고칠 일은 거의 없다. 모두 피처 모듈의 형태를 띠고 있으니 더더욱 수정할 일은 없다.\n그럼 implementation은 어떻게 하는가? 위 글에도 나오긴 하지만 이제 저 방식으로도 힘들다.\n그래서 수정한 코드 방식은 아래와 같다.\n\ndependencies {\n    rootProject.subprojects.filterProject {\n        implementation(it)\n    }\n}\n\n\n필터는 왜 필요한가? 모든 모듈이 하위에 바로 위치하는 것은 아니다. :폴더:폴더:모듈 의 형태를 가지는 경우가 더 흔하다. 그래서 filter를 통해 구분한다.\n\nfun Set<Project>.filterProject(\n    body: (target: Project) -> Unit,\n) {\n    forEach { project ->\n        if (project.name != \"app\" && project.buildFile.isFile) {\n            body(project)\n        }\n    }\n}\n\n\n사실상 위에서부터 순서대로 settings.gradle.kts에 정의한 모든 모듈을 참조하기에 app 모듈이 아닌 경우를 구분해야 한다.\n어찌 보면 단점이다. 기존엔 그냥 특정 모듈을 바로 공통으로 접근할 수 있었는데, 그렇지 않아서 수정한 상태다.\n레거시 ViewModel에서 AAC-ViewModel로\nAAC-ViewModel을 사용하지 않았다. 이유는 굳이 써야 할 이유가 없었다.\n하지만 안드로이드 16이 나오면서 이제 AAC-ViewModel을 꼭 사용하긴 해야 한다. 그렇지 않다면 데이터 savedstate를 처리해 주어야 한다. 안드로이드 16부터는 폴더블 기기 600dp 부터 화면 회전이 강제화된다. 회전을 막는다고 하더라도 무시되고 동작한다.\n예외를 하면 회전했을 때 좌우에 여백을 공백으로 만들 뿐 회전을 막는 것 역시 아니다. 근데 최근에 이거 안 쓰는 개발자가 있을까 싶다.\niOS TCA\nTCA를 처음부터 한 것은 아니고 중간부터 투입되어 개발하게 되었다.\n안드로이드 개발자가 본 iOS TCA 살펴보기\nTCA는 리덕스로 작성되어 있다. 다행히도 안드로이드 개발에서 사용하던 플로우 이벤트 처리 방식을 그대로 이어가면서 개발이 가능하였다는 점이다. 적응하는 시간은 오래 걸렸다. 일반적으로 UiState를 리턴하는 리액트 방식과는 다르게 다음 액션을 전달하는 방식의 차이가 있다. 그래서 이후 안드로이드 아키텍처를 만들면서 소개한 내용과 이어진다.(블로그 글 참고)\n10개월이라는 짧은 기간 동안 TCA를 사용해보면서 느낀 점은 딱 하나. 오류 위치를 알려주지 않는다. 의외로 해결법은 간단한데, 코드를 분리해야 한다. 코드를 분리한다고 하여도 오류를 잘 알려주는 것은 아니다.\n그냥 어딘가 문법 오류가 있다. 끝. 일일이 주석 처리해 가면서 찾아야 한다. 다행히 런타임 오류가 아닌 것이 어디인가 싶다.\n그리고 또 하나 경험한 내용은 앱의 이름 덕분에 앱이 그냥 종료되어지는 오류도 만나보았다. 특정 버전의 OS에서만 오류가 발생하였다. 의심 가는 걸 Gemini와 GPT 둘 다에게 질문했지만 찾지 못했다. 결국 감으로 찾은 이유는 앱 이름이 겹쳐서였다는 사실이다.\n앱이 그냥 아무 이유 없이 꺼지는데 분석을 자세히 해보면 더 빨리 찾았겠지만 iOS 경험이 많지 않은 상태에서 AI가 없었다면 며칠 걸렸을지도 모르지만 다행히 하루 만에 이유를 찾고 해결해보았다.\n결국\n결국 요구사항을 잘 반영하는 코드를 만들고 싶은 욕심과 AI를 더 잘 활용하는 방법 등이 있다.\nTCA를 하면서 한 가지 느낀 점은 굳이 Data 모듈도 나누어야 할까? 라는 의문이다. 자동화를 통해 Data 모듈도 KSP로 JSON 통신하는 것을 만들고, 이것을 API 정의한 것에 연동하는 과정을 만들면 더 쉬운 개발도 가능하다는 점이다.\n그런 관점에서 이전에 작성한 도메인 관련 글의 인사이트를 다시 얻게 되었다.\n마무리\n약 4년 동안 입력한 코드 양만 합산 316만 줄이다. 여기에는 자동으로 생성되어지는 json이나 파일들이 있을 거니 이런 걸 제외하더라도 300만 줄의 코드를 쳤다는 것이긴 하다. 단순히 파일 이동도 있으니 더 제외하면 더 줄어들겠지만.\n코드양이 많다고 많은 걸 해본 것도 아니다. 그냥 즐겁게 코드를 입력하고, 이해하기 위해서 기존의 코드를 가져와 그대로 사용하지 않고 직접 입력하면서 이해하는 것을 우선하려고 노력하였다. 다행히 이를 통해 더 많은 코드를 수정하고 반영할 수 있었다.\n다만 누구나 이 코드를 수정할 수 있는가? 뷰는 가능하지만 core는 어렵다. 기본적인 이해를 바탕으로 하기에는 프레임워크를 이해해야 하는 것과 같다.",
        "guid": "https://thdev.tech/review/2025/08/31/Review-Android/",
        "isoDate": "2025-08-31T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "정규표현식 성능을 높이려면",
        "link": "https://kangmyounghun.blogspot.com/2025/08/blog-post.html",
        "pubDate": "2025-08-30T06:30:00.004Z",
        "author": "강명훈",
        "content": "<div>정규표현식 메타문자의 성능 우선순위가 있느냐는 질문을 받았다. 일단 메타문자는 검사 범위의 차이를 가지고 있을 뿐, 성능 차이는 없다. 하지만 성능 우열을 결정할 수는 있다. 기준은 내가 찾으려는 문자열의 위치.&nbsp;</div><div><br /></div><div>수량자는 최대 검사모드가 디폴트이기 때문에 <span style=\"font-family: courier;\">.*</span>은 입력 순간 모든 문자를 검사한다. 이후 종료 문자인 b를 찾아야 하는데 b의 위치는 뒤에서 두 번째이므로 한 단계만 뒤로 후퇴하면 끝.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiu1H04-U3NE3aiTakg9FvNGNwuhIvnZqjqo0TyM60HyiPebOT_VsySd3FbCeXvR26Hl45zswXZvEIKfyz80bbrYuJdq3CApBj3eSSY2b-EY1F0-q9ojKwlFNGZwuKThhFJEPSDbqXgJ_h7DTcOVYepgAJ0edbPFziCNNvEA2zIHvXPlygle3uML0SHuwjC/s1280/regex_greedy.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"666\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiu1H04-U3NE3aiTakg9FvNGNwuhIvnZqjqo0TyM60HyiPebOT_VsySd3FbCeXvR26Hl45zswXZvEIKfyz80bbrYuJdq3CApBj3eSSY2b-EY1F0-q9ojKwlFNGZwuKThhFJEPSDbqXgJ_h7DTcOVYepgAJ0edbPFziCNNvEA2zIHvXPlygle3uML0SHuwjC/s16000/regex_greedy.png\" /></a></div><div><br /></div><span><a name='more'></a></span><div><b><span style=\"font-size: x-large;\">b의 위치가 바뀌면?</span></b></div><div><br /></div><div><div>같은 정규표현식임에도 <span style=\"font-family: courier;\">.*</span>으로 모든 문자를 검사한 상태에서 앞부분에 위치한 b를 찾기 위해 수백 단계의 후퇴 과정이 발생한다.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgZ1fxhzMmYk5G6MX2TBTPYP_G3InofCvLkD9raDA_sWpNWsHSNnNBZIN4DhTmePZZe5S3DDqcN0-gDSiImzoiT2kGq3QkWKwyUsEM8-W7VPH3tBLPT4Y2P6UhjCFC5ti83BMYuiHi7znFYWlbnEqkAzNlWBfwbOomh1br0P-0UJYmqGwErSQ2qvupI1zsg/s1280/regex_greedy2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"667\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgZ1fxhzMmYk5G6MX2TBTPYP_G3InofCvLkD9raDA_sWpNWsHSNnNBZIN4DhTmePZZe5S3DDqcN0-gDSiImzoiT2kGq3QkWKwyUsEM8-W7VPH3tBLPT4Y2P6UhjCFC5ti83BMYuiHi7znFYWlbnEqkAzNlWBfwbOomh1br0P-0UJYmqGwErSQ2qvupI1zsg/s16000/regex_greedy2.png\" /></a></div><div><br /></div><div><b><span style=\"font-size: x-large;\">수량자 최소 검사모드</span></b></div><div><br /></div><div><span style=\"font-family: courier;\">*?</span>는 최소 검사모드이기 때문에 앞에서부터 하나씩 검사한다. 결과적으로 뒤에서 두 번째 위치하는 b를 찾기 위해 수백 단계의 검사 과정 발생.</div></div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGTAIFlHLiXFwi2sma0cy-vT-BFIZSKwuuzj0oHoxUX1gqhuWm_iMMjnGVltOFfM55STLTEzqUCD5IKjvVOcOoxwjRa8dOqk_9EK3k4TMv_qqhYgKJz4gzAY4an8innFylDEU2iesGAIgPX3TRuMRcxh-Gc2ERztoTTKOFGWyW7yR8JxFoM0yZ1wgElqb3/s1280/regex_ungreedy.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"667\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiGTAIFlHLiXFwi2sma0cy-vT-BFIZSKwuuzj0oHoxUX1gqhuWm_iMMjnGVltOFfM55STLTEzqUCD5IKjvVOcOoxwjRa8dOqk_9EK3k4TMv_qqhYgKJz4gzAY4an8innFylDEU2iesGAIgPX3TRuMRcxh-Gc2ERztoTTKOFGWyW7yR8JxFoM0yZ1wgElqb3/s16000/regex_ungreedy.png\" /></a></div><br /><div>그래서 b가 앞부분에 있을 때는 검사가 순식간에&nbsp;끝난다.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiqBgf6fuhlUBeCIg9-Jj2eulj5SEMOT748qQzdwt0YKa2PpEj30rAhg_3jdkp7-gHJr6LXf7XoXTJ152Qp9e1i9J6j1RHdAP25MZVc7ZfLSgIY8ZgdJheLKoAm5aJxPL6V1RmAuU-eawRtI-cyR52fiAI5Fs204wgBY7eqzem1HSQQ0rhIxVbtD_20cmz3/s1280/regex_ungreedy2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"667\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiqBgf6fuhlUBeCIg9-Jj2eulj5SEMOT748qQzdwt0YKa2PpEj30rAhg_3jdkp7-gHJr6LXf7XoXTJ152Qp9e1i9J6j1RHdAP25MZVc7ZfLSgIY8ZgdJheLKoAm5aJxPL6V1RmAuU-eawRtI-cyR52fiAI5Fs204wgBY7eqzem1HSQQ0rhIxVbtD_20cmz3/s16000/regex_ungreedy2.png\" /></a></div><br /><div>정규표현식을 잘 쓰고 싶다면 정규표현식이 아닌 데이터에 집중해야 한다.</div><ul><li>정규표현식 3원칙</li></ul><ol><li>검사 대상 문자열에 대한 충분한 이해</li><li>뚜렷한 검사 목적</li><li>정규표현식에 대한 충분한 이해&nbsp;</li></ol><blockquote class=\"tr_bq\"><div style=\"text-align: center;\"><i>이 책이 끝날 때까지 이 3원칙, 특히 대상 문자열에 대한 이해의 중요성을 지겹게 강조하는 나를 만나게 될 것이다.</i>&nbsp;- 데이터 분석이 쉬워지는 정규표현식&nbsp;<span style=\"font-size: x-small;\">(57페이지)</span></div></blockquote><div><br /></div><div><div><b>관련 글</b></div><div><ul><li><a href=\"https://kangmyounghun.blogspot.com/2018/08/blog-post_26.html\" target=\"\">정규표현식이 최선일까?</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2021/09/blog-post.html\" target=\"\">정규표현식 몰라도 된다</a></li></ul></div></div>",
        "contentSnippet": "정규표현식 메타문자의 성능 우선순위가 있느냐는 질문을 받았다. 일단 메타문자는 검사 범위의 차이를 가지고 있을 뿐, 성능 차이는 없다. 하지만 성능 우열을 결정할 수는 있다. 기준은 내가 찾으려는 문자열의 위치. \n\n\n수량자는 최대 검사모드가 디폴트이기 때문에 .*은 입력 순간 모든 문자를 검사한다. 이후 종료 문자인 b를 찾아야 하는데 b의 위치는 뒤에서 두 번째이므로 한 단계만 뒤로 후퇴하면 끝.\n\n\n\n\n\nb의 위치가 바뀌면?\n\n\n같은 정규표현식임에도 .*으로 모든 문자를 검사한 상태에서 앞부분에 위치한 b를 찾기 위해 수백 단계의 후퇴 과정이 발생한다.\n\n\n\n\n\n수량자 최소 검사모드\n\n\n*?는 최소 검사모드이기 때문에 앞에서부터 하나씩 검사한다. 결과적으로 뒤에서 두 번째 위치하는 b를 찾기 위해 수백 단계의 검사 과정 발생.\n\n\n\n그래서 b가 앞부분에 있을 때는 검사가 순식간에 끝난다.\n\n\n\n정규표현식을 잘 쓰고 싶다면 정규표현식이 아닌 데이터에 집중해야 한다.\n\n정규표현식 3원칙\n\n검사 대상 문자열에 대한 충분한 이해\n뚜렷한 검사 목적\n정규표현식에 대한 충분한 이해 \n\n이 책이 끝날 때까지 이 3원칙, 특히 대상 문자열에 대한 이해의 중요성을 지겹게 강조하는 나를 만나게 될 것이다. - 데이터 분석이 쉬워지는 정규표현식 (57페이지)\n\n\n\n관련 글\n\n정규표현식이 최선일까?\n정규표현식 몰라도 된다",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-5968656879403128716",
        "isoDate": "2025-08-30T06:30:00.004Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "죽은 키워드도 살리는 2025년형 블로그 제목 전략: 롱테일과 사용자 심리 분석의 만남",
        "link": "http://muzbox.tistory.com/483650",
        "pubDate": "Tue, 2 Sep 2025 00:29:19 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483650#entry483650comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #3c4043;\">\n<div style=\"background-color: #e8f4fd; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\">블로그 제목, 그냥 만드시나요? 2025년에는 검색엔진과 사용자 심리를 동시에 사로잡는 전략이 필수입니다. 죽은 키워드도 살려내는 롱테일 키워드와 사용자 의도 분석의 만남, 그리고 네이버 상위 노출 블로그 제목 생성기(GEM) 활용 팁까지, 이 글 하나로 당신의 블로그 클릭률을 폭발적으로 끌어올릴 비밀을 공개합니다.</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  왜 블로그 제목 전략이 중요할까요?</b></h2>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"download.jpg\" data-origin-width=\"1200\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/baxXa0/btsQeysXMQm/EVDmb1Gs6h6I2n1omuapy1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/baxXa0/btsQeysXMQm/EVDmb1Gs6h6I2n1omuapy1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/baxXa0/btsQeysXMQm/EVDmb1Gs6h6I2n1omuapy1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbaxXa0%2FbtsQeysXMQm%2FEVDmb1Gs6h6I2n1omuapy1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"죽은 키워드도 살리는 2025년형 블로그 제목 전략: 롱테일과 사용자 심리 분석의 만남\" loading=\"lazy\" width=\"500\" height=\"500\" data-filename=\"download.jpg\" data-origin-width=\"1200\" data-origin-height=\"1200\"/></span></figure>\n\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;블로그 글을 아무리 열심히 써도, 사람들이 클릭하지 않으면 아무 소용 없겠죠? 마치 가게 문 앞에 멋진 간판이 없으면 손님들이 들어올 생각조차 하지 않는 것과 같아요. 제목은 독자와 검색엔진 모두에게 내 글의 첫인상을 결정하는 가장 중요한 요소입니다. 단순히 키워드를 나열하는 시대는 지났어요. 이제는 롱테일 키워드의 잠재력과 독자의 숨겨진 심리까지 파고드는 전략이 필요합니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">특히 2025년에는 검색 알고리즘이 더욱 고도화되면서, 단순히 검색량 높은 키워드만 따라가는 방식으로는 한계가 명확해졌어요. 사용자의 <b>&lsquo;진짜 검색 의도&rsquo;</b>를 파악하고, 이를 제목에 녹여내는 것이야말로 죽어가는 키워드도 살려내고 상위 노출을 가능하게 하는 핵심 비법이 됩니다.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  기존 블로그 제목, 무엇이 문제일까요?</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">제가 많은 블로그들을 분석하면서 느낀 점인데요, 많은 분들이 제목을 만들 때 몇 가지 공통적인 패턴을 보이시더라고요. 예를 들어, '손흥민 LAFC 이적설' 같은 주제를 다룬다고 할 때, 단순히 '손흥민 LAFC 이적설 정리'처럼 작성하는 경우가 많아요. 물론 나쁘다는 건 아니지만, 아쉽게도 클릭을 유도하는 힘이 좀 부족하다고 해야 할까요? 한번 기존 제목들의 일반적인 특징을 살펴볼게요.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\">기존 제목 분석 (일반적인 경향)</h3>\n<div style=\"background-color: #f8f9fa; padding: 15px; border-radius: 8px; border: 1px solid #dadce0; margin-bottom: 20px;\">\n<ul style=\"list-style-type: disc; margin-left: 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>핵심 키워드 중심:</b> 대부분 주제의 핵심이 되는 단어(예: 손흥민, 오이무침, 맥시부펜)만으로 제목을 구성하려는 경향이 강해요.</li>\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>클릭 유도/특징 키워드 부족:</b> '공개', '비법', '간단한', '아삭하게' 등 사용자의 행동이나 감정을 유도하는 매력적인 단어들이 부족한 경우가 많아요.</li>\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>구체적인 숫자/인물/고유 키워드 활용 미흡:</b> '백종원', '메시', 'BEST 50'처럼 신뢰나 호기심을 주는 구체적인 요소들이 잘 보이지 않아요.</li>\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>자극적인 문구 지양:</b> 너무 자극적인 문구는 지양하지만, 반대로 너무 평범해서 클릭 욕구를 떨어뜨리는 경향도 있어요.</li>\n</ul>\n<p style=\"margin-bottom: 20px; color: #3c4043;\" data-ke-size=\"size16\">결론적으로, 기존 제목들은 <b>정보 전달에는 충실하지만, 차별성이 부족하고 독자의 클릭을 유도하는 힘이 약하다</b>는 단점이 있어요. 검색 결과 페이지에서 수많은 경쟁 글들 사이에서 내 글을 돋보이게 만들기가 어렵다는 거죠.</p>\n</div>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">  <b>TIP:</b> 당신의 블로그 제목이 혹시 위에서 언급한 단점들을 가지고 있지는 않나요? 지금 바로 확인해보세요!</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>✨ 2025년형 블로그 제목 전략: 롱테일과 사용자 심리 분석</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">그럼 이제 어떻게 해야 할까요? 2025년에는 <b>롱테일 키워드의 힘</b>과 <b>사용자 심리 분석</b>을 결합한 제목 전략이 필요합니다. 상위 노출에 최적화된 제목은 단순히 정보를 나열하는 것을 넘어, 독자의 문제를 해결해주고, 궁금증을 자극하며, 명확한 가치를 제안해야 해요.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\">롱테일 키워드, 왜 중요할까요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">롱테일 키워드는 검색량은 적지만, 특정 의도를 가진 사용자가 검색할 확률이 높고 경쟁이 덜한 키워드를 말해요. 예를 들어, '블로그 제목'보다 '초보 블로거를 위한 클릭률 높이는 블로그 제목 전략'이 롱테일 키워드에 해당하죠. 이런 키워드를 공략하면 적은 노력으로도 상위 노출의 기회를 잡을 수 있답니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\">사용자 심리 분석, 어떻게 제목에 녹여낼까요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">사용자 심리 분석은 크게 세 가지 질문으로 시작해요.</p>\n<ul style=\"list-style-type: decimal; margin-left: 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>사용자의 문제점(Pain Point)은 무엇인가?</b> (예: 블로그 제목을 어떻게 지어야 할지 모르겠다)</li>\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>사용자가 원하는 해결책은 무엇인가?</b> (예: 클릭률이 높은 제목을 만들고 싶다)</li>\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>내 글이 제공하는 특별한 가치(Value Proposition)는 무엇인가?</b> (예: 2025년형 최신 전략, GEM 활용 비법)</li>\n</ul>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이 세 가지 질문에 대한 답을 제목에 응축하여 담아내는 거죠. 정말 쉽지 않죠? 그래서 제가 오늘 아주 특별한 도구를 소개해 드리려고 합니다.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  상위 노출 블로그 제목 생성기(GEM) 활용 가이드</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">네이버에서 제공하는 <b>&lsquo;상위 노출 블로그 제목 생성기(GEM)&rsquo;</b>는 제가 위에서 설명한 복잡한 분석 과정을 자동으로 수행하여 최적의 제목을 제안해주는 정말 강력한 도구예요. 저도 블로그 글을 쓸 때 자주 활용하는데, 정말 만족도가 높았어요. 이 도구를 어떻게 활용하면 좋을지 구체적으로 알려드릴게요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\"><b>GEM 만들기</b></h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\"><span style=\"color: #3c4043; text-align: start;\"><b>1. 새 GEM 만들기 :</b> GEMINI 좌측 메뉴 - Gems 탐색하기 -&nbsp; '+ 새 Gem' 버튼을 클릭합니다.</span>&nbsp;</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"0.png\" data-origin-width=\"1356\" data-origin-height=\"748\"><span data-url=\"https://blog.kakaocdn.net/dn/N4ghf/btsQhUHRZ1n/IARvGckhizivqd5tkYtNKk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/N4ghf/btsQhUHRZ1n/IARvGckhizivqd5tkYtNKk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/N4ghf/btsQhUHRZ1n/IARvGckhizivqd5tkYtNKk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FN4ghf%2FbtsQhUHRZ1n%2FIARvGckhizivqd5tkYtNKk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1356\" height=\"748\" data-filename=\"0.png\" data-origin-width=\"1356\" data-origin-height=\"748\"/></span></figure>\n\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>2. GEM 생성 : </b>제목을 입력하고, 본문 아래 첨부된 TEXT 파일의 모든 내용을 요청사항에 붙여넣고 저장하면 GEM 이 만들어 집니다.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"A.png\" data-origin-width=\"1336\" data-origin-height=\"1021\"><span data-url=\"https://blog.kakaocdn.net/dn/cHBllH/btsQgNJpXQL/WS9jFFaFvTguqq72HSh131/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cHBllH/btsQgNJpXQL/WS9jFFaFvTguqq72HSh131/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cHBllH/btsQgNJpXQL/WS9jFFaFvTguqq72HSh131/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcHBllH%2FbtsQgNJpXQL%2FWS9jFFaFvTguqq72HSh131%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1336\" height=\"1021\" data-filename=\"A.png\" data-origin-width=\"1336\" data-origin-height=\"1021\"/></span></figure>\n\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\"><b>GEM 활용</b></h3>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\">프로세스 (네이버 Creator Advisor 연동)</h3>\n<p data-ke-size=\"size16\"><b>1. Creator Advisor 방문:</b> 먼저 <a href=\"https://creator-advisor.naver.com/\" target=\"_blank\" rel=\"noopener\">creator-advisor.naver.com</a>에 접속해서 현재 트렌드 키워드와 관련 네이버 블로그 상위 기사 제목들을 파악하세요. 시장의 흐름과 경쟁 블로그들의 전략을 엿볼 수 있는 아주 좋은 기회예요. </p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"C1.png\" data-origin-width=\"1026\" data-origin-height=\"618\"><span data-url=\"https://blog.kakaocdn.net/dn/bzw6DI/btsQhWFDpqQ/CHjlIrle5qky5LhMu8xKXK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bzw6DI/btsQhWFDpqQ/CHjlIrle5qky5LhMu8xKXK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bzw6DI/btsQhWFDpqQ/CHjlIrle5qky5LhMu8xKXK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbzw6DI%2FbtsQhWFDpqQ%2FCHjlIrle5qky5LhMu8xKXK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1026\" height=\"618\" data-filename=\"C1.png\" data-origin-width=\"1026\" data-origin-height=\"618\"/></span></figure>\n\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"C2.png\" data-origin-width=\"1048\" data-origin-height=\"649\"><span data-url=\"https://blog.kakaocdn.net/dn/dhQ5jr/btsQfgFEWmr/PeTftrw0J2BjSzMdPFHvfK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dhQ5jr/btsQfgFEWmr/PeTftrw0J2BjSzMdPFHvfK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dhQ5jr/btsQfgFEWmr/PeTftrw0J2BjSzMdPFHvfK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdhQ5jr%2FbtsQfgFEWmr%2FPeTftrw0J2BjSzMdPFHvfK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1048\" height=\"649\" data-filename=\"C2.png\" data-origin-width=\"1048\" data-origin-height=\"649\"/></span></figure>\n\n<p data-ke-size=\"size16\"><br /><b>2. 주제 및 핵심 키워드 입력:&nbsp;</b> 위의 제목 리스트를 캡쳐한후&nbsp; GEM 실행후 업로드 하고 엔터만 하면!!<br /><br /><b>3. GEM의 기존 제목 분석:</b> GEM은 입력된 정보를 바탕으로 기존 제목들의 공통점을 분석해줍니다. 핵심 키워드, 클릭 유도 키워드, 구체적인 정보, 자극적인 문구 등을 카테고리별로 분류해서 보여줄 거예요. 이 부분이 정말 유용해요! 내 제목에 어떤 요소가 부족했는지 한눈에 파악할 수 있거든요. <br /><br /><b>4. 최적화 제목 제안:</b> 분석 결과를 토대로, GEM은 상위 노출에 최적화된 새로운 제목 대안 3가지를 제시합니다. 단순히 키워드 조합이 아니라, 앞서 설명했던 사용자의 Pain Point, 해결책, 가치 제안이 녹아든 제목들이에요. 각 제안별로 어떤 강점이 있는지 구체적으로 설명해줘서 왜 그 제목이 효과적인지 바로 이해할 수 있어요.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"908\" data-origin-height=\"576\"><span data-url=\"https://blog.kakaocdn.net/dn/bgSRvW/btsQhlTpGFa/GpUwa6tJqJkZTHB5ptxpK1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bgSRvW/btsQhlTpGFa/GpUwa6tJqJkZTHB5ptxpK1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bgSRvW/btsQhlTpGFa/GpUwa6tJqJkZTHB5ptxpK1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbgSRvW%2FbtsQhlTpGFa%2FGpUwa6tJqJkZTHB5ptxpK1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"908\" height=\"576\" data-origin-width=\"908\" data-origin-height=\"576\"/></span></figure>\n\n<p data-ke-size=\"size16\"><br /><br /><b>4. 최종 제목 선택 및 개선: </b>제시된 제목들 중에서 가장 마음에 드는 것을 선택하거나, 또는 이를 바탕으로 나만의 개성을 담아 조금 더 다듬어 최종&nbsp;제목으로&nbsp;확정합니다.&nbsp;GEM이&nbsp;준&nbsp;제목을&nbsp;그대로&nbsp;써도&nbsp;좋지만,&nbsp;내&nbsp;목소리를&nbsp;더하면&nbsp;더&nbsp;좋겠죠!</p>\n<div style=\"background-color: #fce8e6; border-left: 4px solid #d93025; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">⚠️ <b>주의:</b> GEM은 강력한 도구지만, 맹신은 금물! 도구의 제안을 참고하되, 최종적으로는 자신의 글 내용과 독자의 특성을 가장 잘 이해하는 블로거인 당신의 판단이 중요합니다.</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  분석 기반 상위 노출 최적화 제목 제안 (예시)</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">위에서 설명드린 GEM의 프로세스를 거쳐 제가 직접 몇 가지 제목들을 생성해봤어요. 단순히 정보를 나열하는 것을 넘어, 신뢰도와 객관성을 향상시키고, 사용자의 Pain Point를 해결하여 완결성 있는 가치를 제안하는 제목들입니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\">제안 1 (가장 추천): 문제 해결 및 가치 제안 강조 스타일</h3>\n<blockquote style=\"background-color: #f1f3f4; border-left: 5px solid #1a73e8; margin: 15px 0; padding: 10px 20px; font-style: italic; color: #3c4043; border-radius: 4px;\" data-ke-style=\"style1\"><b>2025 블로그 제목, 죽은 키워드도 살리는 롱테일 &amp; 심리 분석 필승 전략</b></blockquote>\n<ul style=\"list-style-type: disc; margin-left: 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>강점:</b> '2025'로 최신성을 강조하고, '죽은 키워드도 살리는'이라는 자극적인 문구로 독자의 호기심과 문제 해결 욕구를 동시에 자극합니다. '필승 전략'으로 해결책에 대한 기대감을 높여요.</li>\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>강점:</b> '롱테일'과 '심리 분석'이라는 핵심 키워드를 명확히 제시하여 글의 전문성과 가치를 드러냅니다.</li>\n</ul>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\">제안 2: 구체적인 방법론 제시 및 전문가적 신뢰 강조 스타일</h3>\n<blockquote style=\"background-color: #f1f3f4; border-left: 5px solid #1a73e8; margin: 15px 0; padding: 10px 20px; font-style: italic; color: #3c4043; border-radius: 4px;\" data-ke-style=\"style1\"><b>클릭률 300% 상승? 롱테일과 사용자 의도 분석으로 블로그 제목 마스터하기</b></blockquote>\n<ul style=\"list-style-type: disc; margin-left: 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>강점:</b> '클릭률 300% 상승?'이라는 구체적인 수치와 질문 형식으로 독자의 궁금증과 성과에 대한 기대를 불러일으킵니다.</li>\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>강점:</b> '롱테일과 사용자 의도 분석'으로 핵심 방법론을 명확히 제시하고, '블로그 제목 마스터하기'로 최종적인 목표와 전문성을 강조해요.</li>\n</ul>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px;\" data-ke-size=\"size23\">제안 3: 독자의 Pain Point 공감 및 실용적 해결책 제시 스타일</h3>\n<blockquote style=\"background-color: #f1f3f4; border-left: 5px solid #1a73e8; margin: 15px 0; padding: 10px 20px; font-style: italic; color: #3c4043; border-radius: 4px;\" data-ke-style=\"style1\"><b>&ldquo;내 블로그 글 왜 안 읽지?&rdquo; 네이버 상위 1%만 아는 제목 공식 대공개!</b></blockquote>\n<ul style=\"list-style-type: disc; margin-left: 20px; padding: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>강점:</b> 독자의 흔한 고민을 직접적인 질문('내 블로그 글 왜 안 읽지?')으로 제시하여 강한 공감대를 형성합니다.</li>\n<li style=\"margin-bottom: 10px; color: #3c4043;\"><b>강점:</b> '네이버 상위 1%만 아는'이라는 희소성과 비밀스러운 정보에 대한 기대감을 높여 클릭을 유도합니다. '제목 공식 대공개'로 명확한 해결책을 제시해요.</li>\n</ul>\n<div style=\"background-color: #f8f9fa; padding: 25px; border-radius: 8px; border: 1px solid #dadce0; box-shadow: 0 4px 12px rgba(0,0,0,0.1); margin: 40px 0;\">\n<div style=\"border-bottom: 1px solid #1a73e8; padding-bottom: 15px; margin-bottom: 20px;\"><span style=\"font-size: 26px; color: #1a73e8; font-weight: bold;\">  핵심 요약</span></div>\n<ul style=\"list-style-type: none; padding: 0; margin: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 15px;\"><b>1. 제목은 블로그의 얼굴:</b> 단순히 정보 전달을 넘어 클릭을 유도하는 첫인상이자 검색엔진 최적화의 핵심입니다.</li>\n<li style=\"margin-bottom: 15px;\"><b>2. 롱테일 키워드의 힘:</b> 경쟁은 적고 의도는 명확한 롱테일 키워드로 상위 노출의 기회를 잡으세요.</li>\n<li style=\"margin-bottom: 15px;\"><b>3. 사용자 심리 분석:</b> 독자의 문제점, 원하는 해결책, 글의 특별한 가치를 제목에 녹여내세요.</li>\n<li style=\"margin-bottom: 0;\"><b>4. GEM으로 제목 마스터:</b> 네이버 상위 노출 블로그 제목 생성기(GEM)를 활용해 효율적으로 최적의 제목을 찾아보세요.</li>\n</ul>\n<div style=\"margin-top: 25px; font-size: 14px; color: #5f6368; border-top: 1px dashed #dadce0; padding-top: 15px;\">이 핵심 전략들을 통해 당신의 블로그 글이 더 많은 독자에게 가닿고, 더 큰 영향력을 발휘하기를 바랍니다.</div>\n</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>❓ 자주 묻는 질문 (FAQ)</b></h2>\n<div style=\"margin-bottom: 20px;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin: 20px 0 10px;\" data-ke-size=\"size23\">Q1: 롱테일 키워드는 어떻게 찾나요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A1: 네이버 키워드 도구나 구글 키워드 플래너, 그리고 네이버 Creator Advisor 같은 도구를 활용하여 핵심 키워드와 연관된 확장 검색어들을 찾아볼 수 있습니다. 실제 사용자들이 어떤 질문을 하는지 파악하는 것이 중요해요.</p>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin: 20px 0 10px;\" data-ke-size=\"size23\">Q2: GEM이 제시한 제목을 꼭 그대로 사용해야 하나요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A2: 아니요, GEM은 최적화된 제목을 제안하는 도우미 역할을 합니다. 제안된 제목을 바탕으로 자신의 글의 개성과 문체에 맞춰 조금 더 다듬거나, 아이디어를 얻어 새로운 제목을 창조하는 것도 좋은 방법이에요.</p>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin: 20px 0 10px;\" data-ke-size=\"size23\">Q3: 모든 블로그 글에 제목 전략을 적용해야 하나요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A3: 네, 가능하면 모든 글에 적용하는 것이 좋습니다. 특히 검색 유입이 중요한 정보성 글이나 리뷰 글의 경우, 제목 전략이 클릭률과 상위 노출에 결정적인 영향을 미칠 수 있습니다. 꾸준한 적용이 중요해요.</p>\n</div>\n<script type=\"application/ld+json\">\n  {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n      {\n        \"@type\": \"Question\",\n        \"name\": \"롱테일 키워드는 어떻게 찾나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"네이버 키워드 도구나 구글 키워드 플래너, 그리고 네이버 Creator Advisor 같은 도구를 활용하여 핵심 키워드와 연관된 확장 검색어들을 찾아볼 수 있습니다. 실제 사용자들이 어떤 질문을 하는지 파악하는 것이 중요해요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"GEM이 제시한 제목을 꼭 그대로 사용해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"아니요, GEM은 최적화된 제목을 제안하는 도우미 역할을 합니다. 제안된 제목을 바탕으로 자신의 글의 개성과 문체에 맞춰 조금 더 다듬거나, 아이디어를 얻어 새로운 제목을 창조하는 것도 좋은 방법이에요.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"모든 블로그 글에 제목 전략을 적용해야 하나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"네, 가능하면 모든 글에 적용하는 것이 좋습니다. 특히 검색 유입이 중요한 정보성 글이나 리뷰 글의 경우, 제목 전략이 클릭률과 상위 노출에 결정적인 영향을 미칠 수 있습니다. 꾸준한 적용이 중요해요.\"\n        }\n      }\n    ]\n  }\n  </script>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">자, 이제 2025년 블로그 제목 전략의 핵심과 GEM 활용법까지 모두 아셨으니, 여러분의 블로그 글이 더 많은 독자들에게 사랑받을 일만 남았네요! 이 전략들을 꾸준히 적용해서 여러분의 블로그가 상위 노출의 꿈을 이루시길 진심으로 응원합니다. 궁금한 점이 있다면 언제든지 댓글로 남겨주세요!</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<figure class=\"fileblock\" data-ke-align=\"alignCenter\"><a href=\"https://blog.kakaocdn.net/dn/cFL2DT/dJMb9O1BMRp/ldWbU8YMQZKWvR8o6gZbQ0/gem%20%EC%A7%80%EC%B9%A8.txt?attach=1&amp;knm=tfile.txt\" class=\"\">\n    <div class=\"image\"></div>\n    <div class=\"desc\"><div class=\"filename\"><span class=\"name\">gem 지침.txt</span></div>\n<div class=\"size\">0.00MB</div>\n</div>\n  </a></figure>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "블로그 제목, 그냥 만드시나요? 2025년에는 검색엔진과 사용자 심리를 동시에 사로잡는 전략이 필수입니다. 죽은 키워드도 살려내는 롱테일 키워드와 사용자 의도 분석의 만남, 그리고 네이버 상위 노출 블로그 제목 생성기(GEM) 활용 팁까지, 이 글 하나로 당신의 블로그 클릭률을 폭발적으로 끌어올릴 비밀을 공개합니다.\n  왜 블로그 제목 전략이 중요할까요?\n\n\n \n 블로그 글을 아무리 열심히 써도, 사람들이 클릭하지 않으면 아무 소용 없겠죠? 마치 가게 문 앞에 멋진 간판이 없으면 손님들이 들어올 생각조차 하지 않는 것과 같아요. 제목은 독자와 검색엔진 모두에게 내 글의 첫인상을 결정하는 가장 중요한 요소입니다. 단순히 키워드를 나열하는 시대는 지났어요. 이제는 롱테일 키워드의 잠재력과 독자의 숨겨진 심리까지 파고드는 전략이 필요합니다.\n특히 2025년에는 검색 알고리즘이 더욱 고도화되면서, 단순히 검색량 높은 키워드만 따라가는 방식으로는 한계가 명확해졌어요. 사용자의 ‘진짜 검색 의도’를 파악하고, 이를 제목에 녹여내는 것이야말로 죽어가는 키워드도 살려내고 상위 노출을 가능하게 하는 핵심 비법이 됩니다.\n  기존 블로그 제목, 무엇이 문제일까요?\n제가 많은 블로그들을 분석하면서 느낀 점인데요, 많은 분들이 제목을 만들 때 몇 가지 공통적인 패턴을 보이시더라고요. 예를 들어, '손흥민 LAFC 이적설' 같은 주제를 다룬다고 할 때, 단순히 '손흥민 LAFC 이적설 정리'처럼 작성하는 경우가 많아요. 물론 나쁘다는 건 아니지만, 아쉽게도 클릭을 유도하는 힘이 좀 부족하다고 해야 할까요? 한번 기존 제목들의 일반적인 특징을 살펴볼게요.\n기존 제목 분석 (일반적인 경향)\n핵심 키워드 중심: 대부분 주제의 핵심이 되는 단어(예: 손흥민, 오이무침, 맥시부펜)만으로 제목을 구성하려는 경향이 강해요.\n클릭 유도/특징 키워드 부족: '공개', '비법', '간단한', '아삭하게' 등 사용자의 행동이나 감정을 유도하는 매력적인 단어들이 부족한 경우가 많아요.\n구체적인 숫자/인물/고유 키워드 활용 미흡: '백종원', '메시', 'BEST 50'처럼 신뢰나 호기심을 주는 구체적인 요소들이 잘 보이지 않아요.\n자극적인 문구 지양: 너무 자극적인 문구는 지양하지만, 반대로 너무 평범해서 클릭 욕구를 떨어뜨리는 경향도 있어요.\n결론적으로, 기존 제목들은 정보 전달에는 충실하지만, 차별성이 부족하고 독자의 클릭을 유도하는 힘이 약하다는 단점이 있어요. 검색 결과 페이지에서 수많은 경쟁 글들 사이에서 내 글을 돋보이게 만들기가 어렵다는 거죠.\n  TIP: 당신의 블로그 제목이 혹시 위에서 언급한 단점들을 가지고 있지는 않나요? 지금 바로 확인해보세요!\n✨ 2025년형 블로그 제목 전략: 롱테일과 사용자 심리 분석\n그럼 이제 어떻게 해야 할까요? 2025년에는 롱테일 키워드의 힘과 사용자 심리 분석을 결합한 제목 전략이 필요합니다. 상위 노출에 최적화된 제목은 단순히 정보를 나열하는 것을 넘어, 독자의 문제를 해결해주고, 궁금증을 자극하며, 명확한 가치를 제안해야 해요.\n롱테일 키워드, 왜 중요할까요?\n롱테일 키워드는 검색량은 적지만, 특정 의도를 가진 사용자가 검색할 확률이 높고 경쟁이 덜한 키워드를 말해요. 예를 들어, '블로그 제목'보다 '초보 블로거를 위한 클릭률 높이는 블로그 제목 전략'이 롱테일 키워드에 해당하죠. 이런 키워드를 공략하면 적은 노력으로도 상위 노출의 기회를 잡을 수 있답니다.\n사용자 심리 분석, 어떻게 제목에 녹여낼까요?\n사용자 심리 분석은 크게 세 가지 질문으로 시작해요.\n사용자의 문제점(Pain Point)은 무엇인가? (예: 블로그 제목을 어떻게 지어야 할지 모르겠다)\n사용자가 원하는 해결책은 무엇인가? (예: 클릭률이 높은 제목을 만들고 싶다)\n내 글이 제공하는 특별한 가치(Value Proposition)는 무엇인가? (예: 2025년형 최신 전략, GEM 활용 비법)\n이 세 가지 질문에 대한 답을 제목에 응축하여 담아내는 거죠. 정말 쉽지 않죠? 그래서 제가 오늘 아주 특별한 도구를 소개해 드리려고 합니다.\n  상위 노출 블로그 제목 생성기(GEM) 활용 가이드\n네이버에서 제공하는 ‘상위 노출 블로그 제목 생성기(GEM)’는 제가 위에서 설명한 복잡한 분석 과정을 자동으로 수행하여 최적의 제목을 제안해주는 정말 강력한 도구예요. 저도 블로그 글을 쓸 때 자주 활용하는데, 정말 만족도가 높았어요. 이 도구를 어떻게 활용하면 좋을지 구체적으로 알려드릴게요.\n \nGEM 만들기\n1. 새 GEM 만들기 : GEMINI 좌측 메뉴 - Gems 탐색하기 -  '+ 새 Gem' 버튼을 클릭합니다. \n\n\n \n2. GEM 생성 : 제목을 입력하고, 본문 아래 첨부된 TEXT 파일의 모든 내용을 요청사항에 붙여넣고 저장하면 GEM 이 만들어 집니다.\n\n\n \n \nGEM 활용\n프로세스 (네이버 Creator Advisor 연동)\n1. Creator Advisor 방문: 먼저 creator-advisor.naver.com에 접속해서 현재 트렌드 키워드와 관련 네이버 블로그 상위 기사 제목들을 파악하세요. 시장의 흐름과 경쟁 블로그들의 전략을 엿볼 수 있는 아주 좋은 기회예요. \n\n\n \n\n\n\n2. 주제 및 핵심 키워드 입력:  위의 제목 리스트를 캡쳐한후  GEM 실행후 업로드 하고 엔터만 하면!!\n3. GEM의 기존 제목 분석: GEM은 입력된 정보를 바탕으로 기존 제목들의 공통점을 분석해줍니다. 핵심 키워드, 클릭 유도 키워드, 구체적인 정보, 자극적인 문구 등을 카테고리별로 분류해서 보여줄 거예요. 이 부분이 정말 유용해요! 내 제목에 어떤 요소가 부족했는지 한눈에 파악할 수 있거든요. \n4. 최적화 제목 제안: 분석 결과를 토대로, GEM은 상위 노출에 최적화된 새로운 제목 대안 3가지를 제시합니다. 단순히 키워드 조합이 아니라, 앞서 설명했던 사용자의 Pain Point, 해결책, 가치 제안이 녹아든 제목들이에요. 각 제안별로 어떤 강점이 있는지 구체적으로 설명해줘서 왜 그 제목이 효과적인지 바로 이해할 수 있어요.\n\n\n\n4. 최종 제목 선택 및 개선: 제시된 제목들 중에서 가장 마음에 드는 것을 선택하거나, 또는 이를 바탕으로 나만의 개성을 담아 조금 더 다듬어 최종 제목으로 확정합니다. GEM이 준 제목을 그대로 써도 좋지만, 내 목소리를 더하면 더 좋겠죠!\n⚠️ 주의: GEM은 강력한 도구지만, 맹신은 금물! 도구의 제안을 참고하되, 최종적으로는 자신의 글 내용과 독자의 특성을 가장 잘 이해하는 블로거인 당신의 판단이 중요합니다.\n  분석 기반 상위 노출 최적화 제목 제안 (예시)\n위에서 설명드린 GEM의 프로세스를 거쳐 제가 직접 몇 가지 제목들을 생성해봤어요. 단순히 정보를 나열하는 것을 넘어, 신뢰도와 객관성을 향상시키고, 사용자의 Pain Point를 해결하여 완결성 있는 가치를 제안하는 제목들입니다.\n제안 1 (가장 추천): 문제 해결 및 가치 제안 강조 스타일\n2025 블로그 제목, 죽은 키워드도 살리는 롱테일 & 심리 분석 필승 전략\n강점: '2025'로 최신성을 강조하고, '죽은 키워드도 살리는'이라는 자극적인 문구로 독자의 호기심과 문제 해결 욕구를 동시에 자극합니다. '필승 전략'으로 해결책에 대한 기대감을 높여요.\n강점: '롱테일'과 '심리 분석'이라는 핵심 키워드를 명확히 제시하여 글의 전문성과 가치를 드러냅니다.\n제안 2: 구체적인 방법론 제시 및 전문가적 신뢰 강조 스타일\n클릭률 300% 상승? 롱테일과 사용자 의도 분석으로 블로그 제목 마스터하기\n강점: '클릭률 300% 상승?'이라는 구체적인 수치와 질문 형식으로 독자의 궁금증과 성과에 대한 기대를 불러일으킵니다.\n강점: '롱테일과 사용자 의도 분석'으로 핵심 방법론을 명확히 제시하고, '블로그 제목 마스터하기'로 최종적인 목표와 전문성을 강조해요.\n제안 3: 독자의 Pain Point 공감 및 실용적 해결책 제시 스타일\n“내 블로그 글 왜 안 읽지?” 네이버 상위 1%만 아는 제목 공식 대공개!\n강점: 독자의 흔한 고민을 직접적인 질문('내 블로그 글 왜 안 읽지?')으로 제시하여 강한 공감대를 형성합니다.\n강점: '네이버 상위 1%만 아는'이라는 희소성과 비밀스러운 정보에 대한 기대감을 높여 클릭을 유도합니다. '제목 공식 대공개'로 명확한 해결책을 제시해요.\n  핵심 요약\n1. 제목은 블로그의 얼굴: 단순히 정보 전달을 넘어 클릭을 유도하는 첫인상이자 검색엔진 최적화의 핵심입니다.\n2. 롱테일 키워드의 힘: 경쟁은 적고 의도는 명확한 롱테일 키워드로 상위 노출의 기회를 잡으세요.\n3. 사용자 심리 분석: 독자의 문제점, 원하는 해결책, 글의 특별한 가치를 제목에 녹여내세요.\n4. GEM으로 제목 마스터: 네이버 상위 노출 블로그 제목 생성기(GEM)를 활용해 효율적으로 최적의 제목을 찾아보세요.\n이 핵심 전략들을 통해 당신의 블로그 글이 더 많은 독자에게 가닿고, 더 큰 영향력을 발휘하기를 바랍니다.\n❓ 자주 묻는 질문 (FAQ)\nQ1: 롱테일 키워드는 어떻게 찾나요?\nA1: 네이버 키워드 도구나 구글 키워드 플래너, 그리고 네이버 Creator Advisor 같은 도구를 활용하여 핵심 키워드와 연관된 확장 검색어들을 찾아볼 수 있습니다. 실제 사용자들이 어떤 질문을 하는지 파악하는 것이 중요해요.\nQ2: GEM이 제시한 제목을 꼭 그대로 사용해야 하나요?\nA2: 아니요, GEM은 최적화된 제목을 제안하는 도우미 역할을 합니다. 제안된 제목을 바탕으로 자신의 글의 개성과 문체에 맞춰 조금 더 다듬거나, 아이디어를 얻어 새로운 제목을 창조하는 것도 좋은 방법이에요.\nQ3: 모든 블로그 글에 제목 전략을 적용해야 하나요?\nA3: 네, 가능하면 모든 글에 적용하는 것이 좋습니다. 특히 검색 유입이 중요한 정보성 글이나 리뷰 글의 경우, 제목 전략이 클릭률과 상위 노출에 결정적인 영향을 미칠 수 있습니다. 꾸준한 적용이 중요해요.\n자, 이제 2025년 블로그 제목 전략의 핵심과 GEM 활용법까지 모두 아셨으니, 여러분의 블로그 글이 더 많은 독자들에게 사랑받을 일만 남았네요! 이 전략들을 꾸준히 적용해서 여러분의 블로그가 상위 노출의 꿈을 이루시길 진심으로 응원합니다. 궁금한 점이 있다면 언제든지 댓글로 남겨주세요!\n \n\n    \n\n    \ngem 지침.txt\n0.00MB",
        "guid": "http://muzbox.tistory.com/483650",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 지침 무료 배포",
          "Creator Advisor",
          "GEM 제목 생성기",
          "SEO 최적화",
          "네이버 블로그",
          "롱테일 키워드",
          "블로그 제목 전략",
          "사용자 심리 분석",
          "상위 노출 비법",
          "콘텐츠 마케팅",
          "클릭률 높이기"
        ],
        "isoDate": "2025-09-01T15:29:19.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "나노바나나를 가장 스마트하게 사용하는 법. 바나나 캔버스 무료 공개",
        "link": "http://muzbox.tistory.com/483649",
        "pubDate": "Sun, 31 Aug 2025 16:34:01 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483649#entry483649comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #3c4043;\">\n<div style=\"background-color: #e8f4fd; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\">\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">AI 이미지 생성과 편집의 새로운 지평을 연 구글의 <b>제미나이 2.5 Flash Image</b>, 일명 <b>나노바나나</b>를 가장 스마트하게 활용하는 법을 소개합니다. 특히 나노바나나의 강력한 기능을 누구나 쉽게 사용할 수 있도록 무료로 공개된 <b>'바나나 캔버스'</b> 앱의 모든 것을 파헤쳐 볼게요. AI 이미지 작업에 관심 있는 분들이라면 이 글을 통해 놀라운 신세계를 경험하게 되실 겁니다.</p>\n</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  나노바나나, 과연 무엇일까요?</b></h2>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"바나나 캔버스 무료공개.jpeg\" data-origin-width=\"1200\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/bgIyaE/btsQcl1ImXm/l5Sk01i7pDTC3KeQWmXsaK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bgIyaE/btsQcl1ImXm/l5Sk01i7pDTC3KeQWmXsaK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bgIyaE/btsQcl1ImXm/l5Sk01i7pDTC3KeQWmXsaK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbgIyaE%2FbtsQcl1ImXm%2Fl5Sk01i7pDTC3KeQWmXsaK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바나나 캔버스 무료 공개\" loading=\"lazy\" width=\"500\" height=\"500\" data-filename=\"바나나 캔버스 무료공개.jpeg\" data-origin-width=\"1200\" data-origin-height=\"1200\"/></span></figure>\n\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">여러분, 혹시 <b>나노바나나</b>라는 이름을 들어보셨나요? 이름만 들어도 뭔가 귀엽고 동시에 최첨단 느낌이 들죠? 사실 이 매력적인 이름은 구글이 공식 발표한 <b>제미나이 2.5 Flash Image</b> 모델에 커뮤니티에서 붙여준 별명이에요. 왜 하필 '나노바나나'인지는 정확히 알려지지 않았지만, 확실히 더 친숙하게 느껴지는 건 저뿐만이 아닐 겁니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">중요한 점은 나노바나나가 단순히 이미지를 생성하는 수준을 넘어섰다는 거예요. 기존 AI 이미지 도구들과는 <b>차원이 다른 성능</b>을 보여줍니다. 텍스트 기반 생성 및 편집 기능이 업그레이드되었을 뿐만 아니라, 특히 <b>캐릭터 일관성 유지</b>와 <b>다중 이미지 합성</b> 능력을 혁신적으로 강화했죠. 이제 어떤 놀라운 일들을 할 수 있는지 구체적으로 파고들어 볼까요?</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>✨ 나노바나나의 핵심 기능 3가지</b></h2>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">1. 놀라운 캐릭터 일관성 유지</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이 기능은 정말 많은 분들이 기다려왔던 혁신일 거예요. 기존 AI 도구들은 같은 캐릭터를 여러 장면에서 그릴 때마다 얼굴이 미묘하게 달라지는 문제가 있었거든요. 마치 쌍둥이인데 디테일이 조금씩 다른 느낌이랄까요? 나노바나나는 이 문제를 완전히 해결했습니다!</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">비밀은 <b>'정체성 임베딩 고정 기술'</b>에 있습니다. 캐릭터의 얼굴 윤곽, 눈코입 비율, 헤어스타일, 의상 특징 등을 <b>디지털 지문</b>처럼 저장하고, 새로운 장면을 만들 때마다 이 지문을 참조해서 동일한 캐릭터를 완벽하게 유지하는 거죠. 예를 들어, 원본 캐릭터에게 \"이 사람을 웃게 해줘. 안경을 씌워줘.\"라고 명령하면, AI는 캐릭터의 고유 지문에 웃는 표정과 안경을 자연스럽게 적용해준답니다. 정말 대단하지 않나요?</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">2. 여러 이미지를 하나로 합치는 마법 같은 합성 능력</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">두 번째 핵심 기능은 <b>다중 이미지 합성 능력</b>입니다. 예를 들어, 가족사진과 환상적인 풍경 사진이 있다고 해보세요. 나노바나나에게 \"이 가족을 저 배경에 자연스럽게 배치해줘\"라고 요청하면, AI는 <b>조명, 그림자, 원근감까지 모두 고려</b>해서 원래부터 그 배경에서 찍었던 것처럼 완벽하고 자연스러운 합성 이미지를 만들어줍니다. 합성 티가 전혀 나지 않는다는 게 정말 핵심이죠.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">3. 오차 없는 정확한 텍스트 표현</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">마지막은 <b>이미지 내 텍스트를 정확하게 표현하는 능력</b>입니다. 기존 AI 이미지 도구들은 글자를 넣어달라고 하면 뒤틀리거나 깨지는 경우가 많았어요. 하지만 나노바나나는 로고, 포스터, 간판 등 어떤 시각물을 만들 때도 글자를 <b>정확하고 깔끔하게</b> 넣어줍니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">예를 들어, 특정 웨비나 안내 포스터를 \"텍스트는 영어로\" 지정해서 만들어달라고 하면, 텍스트 내용까지 정확하게 반영된 이미지를 생성해줍니다. 아직 <b>한글 렌더링</b>은 지원하지 않지만, 현재 결과물을 보면 조만간 한글도 완벽하게 지원할 날이 머지않았다는 생각이 들어요. 정말 기대되는 부분이죠.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  나노바나나, 기존 툴과 무엇이 다를까? (VS 포토샵)</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">혹시 이런 생각 해보셨을 수도 있어요. \"이런 기능들, 포토샵 같은 전문 이미지 편집 프로그램으로도 할 수 있는 거 아닌가?\" 네, 맞아요. 기존 툴로도 할 수 있는 작업들이었죠. 하지만 여기서 우리가 주목해야 할 <b>결정적인 차이점들</b>이 있습니다. AI가 가져온 혁신이 무엇인지 명확히 알 수 있는 부분이에요.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">1. 압도적인 작업 시간 단축</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">가장 먼저 체감할 수 있는 차이는 <b>작업 시간의 엄청난 격차</b>입니다. 포토샵에서 한 사람의 얼굴 표정을 바꾸려면 숙련된 디자이너라도 몇 시간은 걸릴 작업일 겁니다. 그런데 나노바나나는 \"이 사람을 웃게 해줘\"라고 한 마디만 하면 <b>10초 안에 결과</b>를 보여줍니다. 이게 바로 AI의 힘이자, 우리가 AI를 주목해야 하는 이유죠.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">2. 전문가 수준의 기술적 난이도 해소</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">두 번째는 <b>기술적 난이도</b>입니다. 포토샵으로 자연스러운 합성을 하려면 조명, 그림자, 색온도, 원근감까지 모든 요소를 수동으로 맞춰야 합니다. 이건 전문 지식과 경험이 없으면 불가능에 가까운 작업이에요. 나노바나나는 이 모든 것을 <b>AI가 알아서 계산하고 처리</b>해줍니다. 일반 사용자 입장에서는 정말 꿈같은 일이죠.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">3. 무한한 창의적 가능성 확장</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">마지막은 <b>창의적 가능성</b>입니다. 포토샵은 '기존 편집' 도구에 가깝지만, 나노바나나는 '없던 것을 새로 만들어내는' <b>생성형 AI</b>예요. \"이 사람을 중세 시대 기사로 만들어줘\"라고 입력하면, 갑옷부터 배경까지 모든 것을 새로 생성해서 자연스럽게 합성해줍니다. 포토샵으로는 상상하기 힘들 정도로 복잡한 작업이죠.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">\n<p style=\"margin-bottom: 5px; color: #3c4043;\" data-ke-size=\"size16\"><b>  핵심 포인트:</b> 나노바나나는 <b>속도, 쉬운 접근성, 무한한 생성력</b> 면에서 기존 툴을 압도합니다. 전문 지식 없이도 높은 퀄리티의 결과물을 얻을 수 있다는 점이 가장 큰 매력이죠.</p>\n</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>⚠️ 주의해야 할 점도 있어요</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">물론 나노바나나가 혁신적인 도구인 건 분명하지만, 만능은 아닙니다. AI 기반 도구들이 가진 <b>몇 가지 주의할 점</b>들도 분명히 존재해요. 이 점들을 잘 이해하고 사용한다면 훨씬 더 스마트하게 나노바나나를 활용할 수 있을 거예요.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">1. 정확성과 일관성 문제</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">포토샵은 사용자가 원하는 대로 정확히 조작할 수 있지만, AI는 가끔 <b>예상과 다른 결과</b>를 만들어내기도 해요. 복잡한 요구사항일수록 원하는 결과를 얻기까지 여러 번 시도하거나 프롬프트를 수정해야 할 수도 있습니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">2. 세밀한 컨트롤의 한계</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">포토샵은 픽셀 단위로 정밀하게 수정 가능하지만, AI는 아직 그 정도의 <b>세밀한 조정 능력</b>은 부족합니다. 전체적인 느낌은 훌륭하지만, 특정 부분의 디테일한 요청은 한계가 있을 수 있어요.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">3. 예측 불가능성</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">같은 프롬프트를 입력해도 AI는 매번 <b>조금씩 다른 결과</b>를 내놓을 수 있습니다. 이것이 창의성 측면에서는 장점이지만, 정확히 예측 가능한 결과가 필요한 작업에서는 단점이 될 수 있죠.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">결론적으로, AI 이미지 편집은 <b>빠르고, 쉽고, 창의적인 작업</b>에는 혁신적입니다. 하지만 정밀하고 예측 가능한 전문 작업에서는 기존 툴들과 <b>함께 사용하는 것이 현명</b>하다고 생각해요. 특히 우리 같은 일반 사용자들에게는 나노바나나 같은 AI 도구가 정말 <b>게임 체인저</b>가 될 수 있다는 사실은 변함없죠. 무료로 사용할 수 있다는 점도 큰 장점입니다.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  나노바나나로 나만의 앱 만들기: 두 가지 접근법</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이렇게 강력한 나노바나나 기능을 활용해서 나만의 AI 앱을 직접 만들어 볼 수 있다는 사실, 알고 계셨나요? 저는 두 가지 방법으로 접근해봤고, 과정이 정말 흥미로웠답니다!</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">1. '바이브 코딩 아이디어 챗봇' 활용</h3>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"바이브.png\" data-origin-width=\"1622\" data-origin-height=\"757\"><span data-url=\"https://blog.kakaocdn.net/dn/cH3GqO/btsQcqBVcbL/7q4uO4JqiLZyanKBoD3K91/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cH3GqO/btsQcqBVcbL/7q4uO4JqiLZyanKBoD3K91/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cH3GqO/btsQcqBVcbL/7q4uO4JqiLZyanKBoD3K91/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcH3GqO%2FbtsQcqBVcbL%2F7q4uO4JqiLZyanKBoD3K91%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바이브코딩 아이디어 챗봇\" loading=\"lazy\" width=\"1622\" height=\"757\" data-filename=\"바이브.png\" data-origin-width=\"1622\" data-origin-height=\"757\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"감성스튜디오.png\" data-origin-width=\"1186\" data-origin-height=\"668\"><span data-url=\"https://blog.kakaocdn.net/dn/ctS0BE/btsQdkOO02s/JLXgNzMrpqYp6tMhp4WLy0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ctS0BE/btsQdkOO02s/JLXgNzMrpqYp6tMhp4WLy0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ctS0BE/btsQdkOO02s/JLXgNzMrpqYp6tMhp4WLy0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FctS0BE%2FbtsQdkOO02s%2FJLXgNzMrpqYp6tMhp4WLy0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"샘플1차 결과물\" loading=\"lazy\" width=\"1186\" height=\"668\" data-filename=\"감성스튜디오.png\" data-origin-width=\"1186\" data-origin-height=\"668\"/></span></figure>\n\n<ul style=\"list-style-type: disc; margin-left: 20px; margin-bottom: 20px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px;\">'바이브 코딩 아이디어 챗' 실행 후, 나노바나나의 새 기능(일관성 유지, 자연스러운 합성, 정밀 수정)을 활용한 앱 아이디어(원본 사진 업로드 후 합성/복원/컬러화)를 요청했습니다.</li>\n<li style=\"margin-bottom: 10px;\">챗봇과 대화하며 앱 제작 질문 10개를 완성, 이를 복사하여 <b>AI STUDIO의 BUILD</b>에 순차적으로 입력했습니다. (한 번에 다 넣기보단 한두 개씩 빌드업 추천!)</li>\n<li style=\"margin-bottom: 10px;\">처음엔 UI가 영어로, 합성 기능에 에러가 있었지만, '한국어 버전으로 변경', '프롬프트 결과를 흰색으로 변경', 'Auto Fix' 기능 등을 활용해 해결했습니다. 사진 복원 기능도 나중에 복원, 컬러화, 업스케일 기능을 추가 요청하여 완성했죠. 바이브 코딩은 때론 디버깅이 필요하답니다.</li>\n</ul>\n<h4 style=\"text-align: center;\" data-ke-size=\"size20\"><a href=\"https://aistudio.google.com/app/prompts/109z-U4ASvLuLIXtcgvNzb9JvT6_hjdLy\" target=\"_blank\" rel=\"noopener\"><span style=\"color: #ef5369;\"><b>바이브코딩 아이디어 챗 + 나노바나나 활용 앱 바로가기</b></span></a></h4>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">2. 구글 나노바나나 프롬프트 가이드 기반 제작</h3>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"가이즈.png\" data-origin-width=\"1231\" data-origin-height=\"717\"><span data-url=\"https://blog.kakaocdn.net/dn/qTyQY/btsQequdBUq/2DFJpYOvESdXMaA5lyueAk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/qTyQY/btsQequdBUq/2DFJpYOvESdXMaA5lyueAk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/qTyQY/btsQequdBUq/2DFJpYOvESdXMaA5lyueAk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FqTyQY%2FbtsQequdBUq%2F2DFJpYOvESdXMaA5lyueAk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"샘플2차 결과물\" loading=\"lazy\" width=\"1231\" height=\"717\" data-filename=\"가이즈.png\" data-origin-width=\"1231\" data-origin-height=\"717\"/></span></figure>\n\n<ul style=\"list-style-type: disc; margin-left: 20px; margin-bottom: 20px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px;\"><b>AI STUDIO 설정</b>에서 나노 이미지 문서 페이지로 이동, '프롬프트 엔지니어링' 섹션의 가이드 내용을 메모장에 저장했습니다.</li>\n<li style=\"margin-bottom: 10px;\">BUILD 섹션에서 저장한 가이드를 업로드하고 <b>\"첨부 문서를 분석하고, 문서에 포함된 모든 이미지 생성, 편집과 프롬프트 기법이 반영된 한글 앱을 만들어\"</b>라고 요청했습니다.</li>\n</ul>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">프롬프트 가이드 기반 앱도 잘 작동하는 것을 확인했어요. 바이브 코딩은 직접 요청, 디자인 제공, 문서 학습 등 다양한 방식으로 사용자가 원하는 결과를 얻을 수 있도록 돕는 유연한 플랫폼입니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<h4 style=\"margin-bottom: 20px; text-align: center;\" data-ke-size=\"size20\"><a href=\"https://aistudio.google.com/app/prompts/18Yd81wpu-dkp-ZQmGU2B4Zn0j_XJKrU-\" target=\"_blank\" rel=\"noopener\"><span style=\"color: #ef6f53;\"><b>나노바나나 프로프트 엔지니어링 가이드 활용한 앱 바로가기</b></span></a></h4>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  바나나 캔버스 무료 공개! 스마트 이미지 작업의 시작</b></h2>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"바나나 캔버스.png\" data-origin-width=\"976\" data-origin-height=\"645\"><span data-url=\"https://blog.kakaocdn.net/dn/cvNC53/btsQc2gtilL/SLWOLwQ3dX6kOZS4ycuKt1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cvNC53/btsQc2gtilL/SLWOLwQ3dX6kOZS4ycuKt1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cvNC53/btsQc2gtilL/SLWOLwQ3dX6kOZS4ycuKt1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcvNC53%2FbtsQc2gtilL%2FSLWOLwQ3dX6kOZS4ycuKt1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바나나 캔버스\" loading=\"lazy\" width=\"976\" height=\"645\" data-filename=\"바나나 캔버스.png\" data-origin-width=\"976\" data-origin-height=\"645\"/></span></figure>\n\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이런 과정을 거쳐 제가 만든 앱이 바로 <b>'바나나 캔버스'</b>입니다. 이 앱은 구글의 <b>제미나이 2.5 Flash Image (나노바나나)</b>와 <b>이마젠 4.0</b>을 기반으로 한 <b>올인원 이미지 생성 및 편집 도구</b>예요. 직접 써보니 정말 상상 이상의 편리함을 제공하더군요.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">바나나 캔버스는 텍스트 설명만으로 이미지를 창조하고, 기존 이미지를 전문가 수준으로 편집하며, 여러 이미지를 창의적으로 합성하는 등 다채로운 시각적 작업을 지원합니다. 핵심 차별점은 강력한 <b>'프롬프트 제안' 기능</b>이에요. AI가 사용자의 의도를 분석해 <b>최적의 지시문을 자동 생성</b>해주므로, 복잡한 프롬프트 지식 없이도 누구나 전문가 수준의 결과물을 손쉽게 얻을 수 있습니다.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b> ️ 바나나 캔버스 화면 구성 한눈에 보기 (입력-제어-결과)</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">바나나 캔버스는 사용자가 직관적으로 작업 흐름을 따라갈 수 있도록 <b>'입력, 제어, 결과'의 3단 구조</b>로 화면이 설계되어 있어요. 왼쪽에서 오른쪽으로 자연스럽게 작업이 진행되어 처음 사용하는 분들도 어렵지 않을 겁니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">1. 왼쪽: 모든 작업의 시작점 '입력'</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">모든 작업의 시작점. 텍스트로 새 이미지를 만들거나, PC 이미지를 불러와 <b>'빠른 작업'</b>을 실행할 수 있습니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">2. 중앙: 핵심 제어 영역 '편집 및 합성'</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이미지 편집과 합성의 핵심. 불러온 이미지의 스타일 변경이나 여러 이미지 합성 등 구체적인 지시를 내리는 곳입니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">3. 오른쪽: 최종 결과 확인 영역 '결과'</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">AI가 생성한 <b>최종 결과물</b> 표시 영역. 로딩, 오류, 완성 이미지 확인 및 저장 공간입니다.</p>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b> ️ 바나나 캔버스의 주요 기능 상세 가이드</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이제 바나나 캔버스가 제공하는 주요 기능들을 좀 더 자세히 알아볼 시간이에요. 정말 다재다능한 툴이라는 걸 느끼실 겁니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">1. 텍스트로 새 이미지 만들기</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">아이디어만으로 <b>완전히 새로운 이미지</b>를 만들어내는 기능. 아이디어 입력 &rarr; 카테고리 선택 &rarr; 종횡비 선택 &rarr; 이미지 생성 순으로 진행합니다. <b>\"밤하늘을 나는 고래\"</b>처럼 간단한 아이디어를 입력해도 AI가 <b>전문적인 지시문으로 자동 변환</b>해주니, 프롬프트 지식 없이도 전문가 수준의 결과물을 얻을 수 있어요.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">2. 이미지를 업로드하고 '빠른 작업' 활용하기</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">PC 이미지를 불러와 모든 작업의 기준으로 삼는 기능. 업로드 후 <b>'빠른 작업'</b>으로 자주 사용하는 편집을 원클릭으로 실행할 수 있습니다.</p>\n<ul style=\"list-style-type: disc; margin-left: 20px; margin-bottom: 20px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px;\"><b>배경 제거:</b> 피사체만 깔끔하게 제거, 투명 PNG 파일로 저장.</li>\n<li style=\"margin-bottom: 10px;\"><b>부분 삭제:</b> 지우고 싶은 부분을 칠하면 AI가 주변과 어울리게 채워줍니다.</li>\n<li style=\"margin-bottom: 10px;\"><b>증명사진 변환:</b> 인물 사진을 정장/흰색 배경으로 변환, 정면 사진이 아니어도 <b>정면으로 변환</b>까지!</li>\n<li style=\"margin-bottom: 10px;\"><b>평면도를 3D로:</b> 2D 건축 평면도를 가구가 배치된 사실적인 3D 아이소메트릭 뷰로 시각화.</li>\n<li style=\"margin-bottom: 10px;\"><b>만화 패널 변환:</b> 이미지를 만화 장면처럼 변환 (느와르, 웹툰, 코믹스 스타일 선택 가능). 텍스트 언어 지정 (한국어 렌더링은 아직 완벽하지 않음).</li>\n</ul>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">3. 중앙 제어 영역의 고급 기능들</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">더 강력하고 전문적인 기능들을 살펴볼 차례입니다.</p>\n<ul style=\"list-style-type: disc; margin-left: 20px; margin-bottom: 20px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px;\"><b>복원 기능:</b> 오래된 사진 손상 채우기, 흑백 컬러화, 2~4배 <b>업스케일</b>.</li>\n<li style=\"margin-bottom: 10px;\"><b>채색하기:</b> 스케치/라인 아트에 색과 명암을 칠해 완성된 일러스트로.</li>\n<li style=\"margin-bottom: 10px;\"><b>스타일 변환:</b> 원본의 구도/내용 유지, 아트 스타일만 재창조 (예: 피규어, 애니메이션).</li>\n<li style=\"margin-bottom: 10px;\"><b>이미지 합성:</b> 여러 이미지를 <b>놀랍도록 자연스럽게 합성</b> (예: 가족+바다, 모델+가방+선글라스+한복).</li>\n<li style=\"margin-bottom: 10px;\"><b>인생 앨범 제작:</b> 인물 사진 한 장으로 유아기부터 노년기까지의 모습이 담긴 <b>콜라주 앨범</b> 생성. 정말 특별한 기능이에요!</li>\n</ul>\n<h4 style=\"text-align: center;\" data-ke-size=\"size20\"><span style=\"color: #ee2323;\"><a style=\"color: #ee2323;\" href=\"https://aistudio.google.com/app/apps/drive/12ImooLuxgrC85w3p81ELhcbAfCW9mQWp\" target=\"_blank\" rel=\"noopener\"><u><b>바나나 캔버스 (BANANA CANVAS) 바로 사용하기</b></u></a></span></h4>\n<div style=\"background-color: #f8f9fa; border: 1px solid #dadce0; border-radius: 8px; padding: 25px; margin: 30px 0; box-shadow: 0 4px 12px rgba(0,0,0,0.1);\">\n<h3 style=\"font-size: 26px; color: #1a73e8; margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid #1a73e8;\" data-ke-size=\"size23\">  핵심 요약</h3>\n<p style=\"font-size: 17px; margin-bottom: 15px;\" data-ke-size=\"size16\"><b>1. 나노바나나는 구글 제미나이 2.5 Flash Image의 별명으로, <span style=\"color: #1a73e8;\">캐릭터 일관성, 다중 이미지 합성, 정확한 텍스트 렌더링</span> 등 혁신적 성능을 자랑합니다.</b></p>\n<p style=\"font-size: 17px; margin-bottom: 15px;\" data-ke-size=\"size16\"><b>2. 포토샵 등 기존 툴 대비 <span style=\"color: #1a73e8;\">압도적인 작업 시간 단축</span>, <span style=\"color: #1a73e8;\">낮은 기술적 난이도</span>, <span style=\"color: #1a73e8;\">무한한 창의적 가능성</span>을 제공합니다.</b></p>\n<p style=\"font-size: 17px; margin-bottom: 15px;\" data-ke-size=\"size16\"><b>3. '바나나 캔버스'는 나노바나나 기반의 <span style=\"color: #1a73e8;\">무료 올인원 이미지 도구</span>로, 텍스트-이미지 생성부터 고급 편집, 합성을 모두 지원합니다.</b></p>\n<p style=\"font-size: 17px; margin-bottom: 0;\" data-ke-size=\"size16\"><b>4. 강력한 <span style=\"color: #1a73e8;\">'프롬프트 제안' 기능</span>과 <span style=\"color: #1a73e8;\">직관적인 3단 화면 구성</span>으로 초보자도 쉽게 전문가 수준의 결과물을 만들 수 있습니다.</b></p>\n<div style=\"margin-top: 20px; padding-top: 15px; border-top: 1px dashed #dadce0; font-size: 14px; color: #5f6368;\">\n<p style=\"margin-bottom: 0;\" data-ke-size=\"size16\">※ 나노바나나와 바나나 캔버스는 AI 기술의 집약체로, 여러분의 이미지 작업에 혁신적인 변화를 가져올 것입니다. 지금 바로 경험해보세요!</p>\n</div>\n</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>❓ 자주 묻는 질문 (FAQ)</b></h2>\n<h3 style=\"font-size: 18px; color: #3c4043; margin-top: 20px; margin-bottom: 10px;\" data-ke-size=\"size23\">Q1: 나노바나나는 무엇이며, 어떤 점이 특별한가요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A1: 나노바나나는 구글 제미나이 2.5 Flash Image 모델의 커뮤니티 별명입니다. 기존 AI 이미지 생성 도구들과 달리 캐릭터 일관성 유지, 다중 이미지 합성, 이미지 내 텍스트 정확한 렌더링 등 탁월한 성능을 제공합니다.</p>\n<h3 style=\"font-size: 18px; color: #3c4043; margin-top: 20px; margin-bottom: 10px;\" data-ke-size=\"size23\">Q2: '바나나 캔버스'는 어떤 앱인가요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A2: 바나나 캔버스는 나노바나나(제미나이 2.5 Flash Image)와 이마젠 4.0 기반의 올인원 이미지 생성 및 편집 앱입니다. 텍스트 이미지 생성, 기존 이미지 편집 및 합성 등 다양한 시각 작업을 지원하며, 특히 '프롬프트 제안' 기능으로 초보자도 쉽게 전문가 수준의 결과물을 얻을 수 있습니다.</p>\n<h3 style=\"font-size: 18px; color: #3c4043; margin-top: 20px; margin-bottom: 10px;\" data-ke-size=\"size23\">Q3: 바나나 캔버스가 제공하는 '빠른 작업'에는 어떤 기능들이 있나요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A3: '빠른 작업'에는 배경 제거, 이미지 내 특정 부분 삭제, 인물 증명사진 변환, 2D 평면도를 3D 아이소메트릭 뷰로 변환, 이미지를 만화 패널 스타일로 바꾸는 기능 등이 포함되어 있습니다. 자주 쓰는 편집 기능을 원클릭으로 편리하게 실행할 수 있습니다.</p>\n<h3 style=\"font-size: 18px; color: #3c4043; margin-top: 20px; margin-bottom: 10px;\" data-ke-size=\"size23\">Q4: 바나나 캔버스를 사용하려면 AI나 프롬프트 지식이 많이 필요한가요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">A4: 아닙니다! 바나나 캔버스는 '프롬프트 제안' 기능을 통해 사용자의 간단한 아이디어를 분석하여 최적의 지시문을 자동으로 생성해줍니다. 따라서 복잡한 프롬프트 엔지니어링 지식 없이도 누구나 쉽고 직관적으로 고품질의 AI 이미지를 생성하고 편집할 수 있습니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=ZRWAdm4JeMA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/9EHHH/hyZDW5dEeT/38LhrVkIGXB3bxvKK9Pxqk/img.jpg?width=480&amp;height=360&amp;face=220_48_308_144,https://scrap.kakaocdn.net/dn/eAHeK/hyZC8rr2wf/2h9tdYer5JUu2sqTlx1T0K/img.jpg?width=480&amp;height=360&amp;face=220_48_308_144\" data-video-width=\"480\" data-video-height=\"360\" data-video-origin-width=\"480\" data-video-origin-height=\"360\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"나노바나나를 가장 스마트하게 사용하는 법 | 바이브코딩 3편\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/ZRWAdm4JeMA\" width=\"480\" height=\"360\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<script type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"FAQPage\",\"mainEntity\":[{\"@type\":\"Question\",\"name\":\"나노바나나는 무엇이며, 어떤 점이 특별한가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"나노바나나는 구글 제미나이 2.5 Flash Image 모델의 커뮤니티 별명입니다. 기존 AI 이미지 생성 도구들과 달리 캐릭터 일관성 유지, 다중 이미지 합성, 이미지 내 텍스트 정확한 렌더링 등 탁월한 성능을 제공합니다.\"}},{\"@type\":\"Question\",\"name\":\"'바나나 캔버스'는 어떤 앱인가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"바나나 캔버스는 나노바나나(제미나이 2.5 Flash Image)와 이마젠 4.0 기반의 올인원 이미지 생성 및 편집 앱입니다. 텍스트 이미지 생성, 기존 이미지 편집 및 합성 등 다양한 시각 작업을 지원하며, 특히 '프롬프트 제안' 기능으로 초보자도 쉽게 전문가 수준의 결과물을 얻을 수 있습니다.\"}},{\"@type\":\"Question\",\"name\":\"바나나 캔버스가 제공하는 '빠른 작업'에는 어떤 기능들이 있나요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"'빠른 작업'에는 배경 제거, 이미지 내 특정 부분 삭제, 인물 증명사진 변환, 2D 평면도를 3D 아이소메트릭 뷰로 변환, 이미지를 만화 패널 스타일로 바꾸는 기능 등이 포함되어 있습니다. 자주 쓰는 편집 기능을 원클릭으로 편리하게 실행할 수 있습니다.\"}},{\"@type\":\"Question\",\"name\":\"바나나 캔버스를 사용하려면 AI나 프롬프트 지식이 많이 필요한가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"아닙니다! 바나나 캔버스는 '프롬프트 제안' 기능을 통해 사용자의 간단한 아이디어를 분석하여 최적의 지시문을 자동으로 생성해줍니다. 따라서 복잡한 프롬프트 엔지니어링 지식 없이도 누구나 쉽고 직관적으로 고품질의 AI 이미지를 생성하고 편집할 수 있습니다.\"}}]} </script>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">이것으로 바나나 캔버스의 모든 기능과 사용법을 자세히 알아보았습니다. 정말 이 앱 하나로 상상 이상으로 다양한 이미지 작업을 할 수 있다는 걸 느끼셨을 거예요. 처음에는 복잡해 보일 수도 있지만, 저처럼 몇 번 사용해보시면 굉장히 직관적이고 쉽다는 걸 금방 느끼실 수 있을 겁니다. 왼쪽에서 오른쪽으로 자연스럽게 진행되는 작업 흐름만 기억하시면 헷갈리지 않고 스마트하게 활용하실 수 있을 거예요. 여러분의 창의적인 작업을 응원합니다!</p>\n</div>",
        "contentSnippet": "AI 이미지 생성과 편집의 새로운 지평을 연 구글의 제미나이 2.5 Flash Image, 일명 나노바나나를 가장 스마트하게 활용하는 법을 소개합니다. 특히 나노바나나의 강력한 기능을 누구나 쉽게 사용할 수 있도록 무료로 공개된 '바나나 캔버스' 앱의 모든 것을 파헤쳐 볼게요. AI 이미지 작업에 관심 있는 분들이라면 이 글을 통해 놀라운 신세계를 경험하게 되실 겁니다.\n  나노바나나, 과연 무엇일까요?\n\n\n여러분, 혹시 나노바나나라는 이름을 들어보셨나요? 이름만 들어도 뭔가 귀엽고 동시에 최첨단 느낌이 들죠? 사실 이 매력적인 이름은 구글이 공식 발표한 제미나이 2.5 Flash Image 모델에 커뮤니티에서 붙여준 별명이에요. 왜 하필 '나노바나나'인지는 정확히 알려지지 않았지만, 확실히 더 친숙하게 느껴지는 건 저뿐만이 아닐 겁니다.\n중요한 점은 나노바나나가 단순히 이미지를 생성하는 수준을 넘어섰다는 거예요. 기존 AI 이미지 도구들과는 차원이 다른 성능을 보여줍니다. 텍스트 기반 생성 및 편집 기능이 업그레이드되었을 뿐만 아니라, 특히 캐릭터 일관성 유지와 다중 이미지 합성 능력을 혁신적으로 강화했죠. 이제 어떤 놀라운 일들을 할 수 있는지 구체적으로 파고들어 볼까요?\n✨ 나노바나나의 핵심 기능 3가지\n1. 놀라운 캐릭터 일관성 유지\n이 기능은 정말 많은 분들이 기다려왔던 혁신일 거예요. 기존 AI 도구들은 같은 캐릭터를 여러 장면에서 그릴 때마다 얼굴이 미묘하게 달라지는 문제가 있었거든요. 마치 쌍둥이인데 디테일이 조금씩 다른 느낌이랄까요? 나노바나나는 이 문제를 완전히 해결했습니다!\n비밀은 '정체성 임베딩 고정 기술'에 있습니다. 캐릭터의 얼굴 윤곽, 눈코입 비율, 헤어스타일, 의상 특징 등을 디지털 지문처럼 저장하고, 새로운 장면을 만들 때마다 이 지문을 참조해서 동일한 캐릭터를 완벽하게 유지하는 거죠. 예를 들어, 원본 캐릭터에게 \"이 사람을 웃게 해줘. 안경을 씌워줘.\"라고 명령하면, AI는 캐릭터의 고유 지문에 웃는 표정과 안경을 자연스럽게 적용해준답니다. 정말 대단하지 않나요?\n2. 여러 이미지를 하나로 합치는 마법 같은 합성 능력\n두 번째 핵심 기능은 다중 이미지 합성 능력입니다. 예를 들어, 가족사진과 환상적인 풍경 사진이 있다고 해보세요. 나노바나나에게 \"이 가족을 저 배경에 자연스럽게 배치해줘\"라고 요청하면, AI는 조명, 그림자, 원근감까지 모두 고려해서 원래부터 그 배경에서 찍었던 것처럼 완벽하고 자연스러운 합성 이미지를 만들어줍니다. 합성 티가 전혀 나지 않는다는 게 정말 핵심이죠.\n3. 오차 없는 정확한 텍스트 표현\n마지막은 이미지 내 텍스트를 정확하게 표현하는 능력입니다. 기존 AI 이미지 도구들은 글자를 넣어달라고 하면 뒤틀리거나 깨지는 경우가 많았어요. 하지만 나노바나나는 로고, 포스터, 간판 등 어떤 시각물을 만들 때도 글자를 정확하고 깔끔하게 넣어줍니다.\n예를 들어, 특정 웨비나 안내 포스터를 \"텍스트는 영어로\" 지정해서 만들어달라고 하면, 텍스트 내용까지 정확하게 반영된 이미지를 생성해줍니다. 아직 한글 렌더링은 지원하지 않지만, 현재 결과물을 보면 조만간 한글도 완벽하게 지원할 날이 머지않았다는 생각이 들어요. 정말 기대되는 부분이죠.\n  나노바나나, 기존 툴과 무엇이 다를까? (VS 포토샵)\n혹시 이런 생각 해보셨을 수도 있어요. \"이런 기능들, 포토샵 같은 전문 이미지 편집 프로그램으로도 할 수 있는 거 아닌가?\" 네, 맞아요. 기존 툴로도 할 수 있는 작업들이었죠. 하지만 여기서 우리가 주목해야 할 결정적인 차이점들이 있습니다. AI가 가져온 혁신이 무엇인지 명확히 알 수 있는 부분이에요.\n1. 압도적인 작업 시간 단축\n가장 먼저 체감할 수 있는 차이는 작업 시간의 엄청난 격차입니다. 포토샵에서 한 사람의 얼굴 표정을 바꾸려면 숙련된 디자이너라도 몇 시간은 걸릴 작업일 겁니다. 그런데 나노바나나는 \"이 사람을 웃게 해줘\"라고 한 마디만 하면 10초 안에 결과를 보여줍니다. 이게 바로 AI의 힘이자, 우리가 AI를 주목해야 하는 이유죠.\n2. 전문가 수준의 기술적 난이도 해소\n두 번째는 기술적 난이도입니다. 포토샵으로 자연스러운 합성을 하려면 조명, 그림자, 색온도, 원근감까지 모든 요소를 수동으로 맞춰야 합니다. 이건 전문 지식과 경험이 없으면 불가능에 가까운 작업이에요. 나노바나나는 이 모든 것을 AI가 알아서 계산하고 처리해줍니다. 일반 사용자 입장에서는 정말 꿈같은 일이죠.\n3. 무한한 창의적 가능성 확장\n마지막은 창의적 가능성입니다. 포토샵은 '기존 편집' 도구에 가깝지만, 나노바나나는 '없던 것을 새로 만들어내는' 생성형 AI예요. \"이 사람을 중세 시대 기사로 만들어줘\"라고 입력하면, 갑옷부터 배경까지 모든 것을 새로 생성해서 자연스럽게 합성해줍니다. 포토샵으로는 상상하기 힘들 정도로 복잡한 작업이죠.\n  핵심 포인트: 나노바나나는 속도, 쉬운 접근성, 무한한 생성력 면에서 기존 툴을 압도합니다. 전문 지식 없이도 높은 퀄리티의 결과물을 얻을 수 있다는 점이 가장 큰 매력이죠.\n⚠️ 주의해야 할 점도 있어요\n물론 나노바나나가 혁신적인 도구인 건 분명하지만, 만능은 아닙니다. AI 기반 도구들이 가진 몇 가지 주의할 점들도 분명히 존재해요. 이 점들을 잘 이해하고 사용한다면 훨씬 더 스마트하게 나노바나나를 활용할 수 있을 거예요.\n1. 정확성과 일관성 문제\n포토샵은 사용자가 원하는 대로 정확히 조작할 수 있지만, AI는 가끔 예상과 다른 결과를 만들어내기도 해요. 복잡한 요구사항일수록 원하는 결과를 얻기까지 여러 번 시도하거나 프롬프트를 수정해야 할 수도 있습니다.\n2. 세밀한 컨트롤의 한계\n포토샵은 픽셀 단위로 정밀하게 수정 가능하지만, AI는 아직 그 정도의 세밀한 조정 능력은 부족합니다. 전체적인 느낌은 훌륭하지만, 특정 부분의 디테일한 요청은 한계가 있을 수 있어요.\n3. 예측 불가능성\n같은 프롬프트를 입력해도 AI는 매번 조금씩 다른 결과를 내놓을 수 있습니다. 이것이 창의성 측면에서는 장점이지만, 정확히 예측 가능한 결과가 필요한 작업에서는 단점이 될 수 있죠.\n결론적으로, AI 이미지 편집은 빠르고, 쉽고, 창의적인 작업에는 혁신적입니다. 하지만 정밀하고 예측 가능한 전문 작업에서는 기존 툴들과 함께 사용하는 것이 현명하다고 생각해요. 특히 우리 같은 일반 사용자들에게는 나노바나나 같은 AI 도구가 정말 게임 체인저가 될 수 있다는 사실은 변함없죠. 무료로 사용할 수 있다는 점도 큰 장점입니다.\n  나노바나나로 나만의 앱 만들기: 두 가지 접근법\n이렇게 강력한 나노바나나 기능을 활용해서 나만의 AI 앱을 직접 만들어 볼 수 있다는 사실, 알고 계셨나요? 저는 두 가지 방법으로 접근해봤고, 과정이 정말 흥미로웠답니다!\n1. '바이브 코딩 아이디어 챗봇' 활용\n\n\n\n\n'바이브 코딩 아이디어 챗' 실행 후, 나노바나나의 새 기능(일관성 유지, 자연스러운 합성, 정밀 수정)을 활용한 앱 아이디어(원본 사진 업로드 후 합성/복원/컬러화)를 요청했습니다.\n챗봇과 대화하며 앱 제작 질문 10개를 완성, 이를 복사하여 AI STUDIO의 BUILD에 순차적으로 입력했습니다. (한 번에 다 넣기보단 한두 개씩 빌드업 추천!)\n처음엔 UI가 영어로, 합성 기능에 에러가 있었지만, '한국어 버전으로 변경', '프롬프트 결과를 흰색으로 변경', 'Auto Fix' 기능 등을 활용해 해결했습니다. 사진 복원 기능도 나중에 복원, 컬러화, 업스케일 기능을 추가 요청하여 완성했죠. 바이브 코딩은 때론 디버깅이 필요하답니다.\n바이브코딩 아이디어 챗 + 나노바나나 활용 앱 바로가기\n \n2. 구글 나노바나나 프롬프트 가이드 기반 제작\n\n\n\nAI STUDIO 설정에서 나노 이미지 문서 페이지로 이동, '프롬프트 엔지니어링' 섹션의 가이드 내용을 메모장에 저장했습니다.\nBUILD 섹션에서 저장한 가이드를 업로드하고 \"첨부 문서를 분석하고, 문서에 포함된 모든 이미지 생성, 편집과 프롬프트 기법이 반영된 한글 앱을 만들어\"라고 요청했습니다.\n프롬프트 가이드 기반 앱도 잘 작동하는 것을 확인했어요. 바이브 코딩은 직접 요청, 디자인 제공, 문서 학습 등 다양한 방식으로 사용자가 원하는 결과를 얻을 수 있도록 돕는 유연한 플랫폼입니다.\n \n나노바나나 프로프트 엔지니어링 가이드 활용한 앱 바로가기\n \n  바나나 캔버스 무료 공개! 스마트 이미지 작업의 시작\n\n\n이런 과정을 거쳐 제가 만든 앱이 바로 '바나나 캔버스'입니다. 이 앱은 구글의 제미나이 2.5 Flash Image (나노바나나)와 이마젠 4.0을 기반으로 한 올인원 이미지 생성 및 편집 도구예요. 직접 써보니 정말 상상 이상의 편리함을 제공하더군요.\n바나나 캔버스는 텍스트 설명만으로 이미지를 창조하고, 기존 이미지를 전문가 수준으로 편집하며, 여러 이미지를 창의적으로 합성하는 등 다채로운 시각적 작업을 지원합니다. 핵심 차별점은 강력한 '프롬프트 제안' 기능이에요. AI가 사용자의 의도를 분석해 최적의 지시문을 자동 생성해주므로, 복잡한 프롬프트 지식 없이도 누구나 전문가 수준의 결과물을 손쉽게 얻을 수 있습니다.\n ️ 바나나 캔버스 화면 구성 한눈에 보기 (입력-제어-결과)\n바나나 캔버스는 사용자가 직관적으로 작업 흐름을 따라갈 수 있도록 '입력, 제어, 결과'의 3단 구조로 화면이 설계되어 있어요. 왼쪽에서 오른쪽으로 자연스럽게 작업이 진행되어 처음 사용하는 분들도 어렵지 않을 겁니다.\n1. 왼쪽: 모든 작업의 시작점 '입력'\n모든 작업의 시작점. 텍스트로 새 이미지를 만들거나, PC 이미지를 불러와 '빠른 작업'을 실행할 수 있습니다.\n2. 중앙: 핵심 제어 영역 '편집 및 합성'\n이미지 편집과 합성의 핵심. 불러온 이미지의 스타일 변경이나 여러 이미지 합성 등 구체적인 지시를 내리는 곳입니다.\n3. 오른쪽: 최종 결과 확인 영역 '결과'\nAI가 생성한 최종 결과물 표시 영역. 로딩, 오류, 완성 이미지 확인 및 저장 공간입니다.\n ️ 바나나 캔버스의 주요 기능 상세 가이드\n이제 바나나 캔버스가 제공하는 주요 기능들을 좀 더 자세히 알아볼 시간이에요. 정말 다재다능한 툴이라는 걸 느끼실 겁니다.\n1. 텍스트로 새 이미지 만들기\n아이디어만으로 완전히 새로운 이미지를 만들어내는 기능. 아이디어 입력 → 카테고리 선택 → 종횡비 선택 → 이미지 생성 순으로 진행합니다. \"밤하늘을 나는 고래\"처럼 간단한 아이디어를 입력해도 AI가 전문적인 지시문으로 자동 변환해주니, 프롬프트 지식 없이도 전문가 수준의 결과물을 얻을 수 있어요.\n2. 이미지를 업로드하고 '빠른 작업' 활용하기\nPC 이미지를 불러와 모든 작업의 기준으로 삼는 기능. 업로드 후 '빠른 작업'으로 자주 사용하는 편집을 원클릭으로 실행할 수 있습니다.\n배경 제거: 피사체만 깔끔하게 제거, 투명 PNG 파일로 저장.\n부분 삭제: 지우고 싶은 부분을 칠하면 AI가 주변과 어울리게 채워줍니다.\n증명사진 변환: 인물 사진을 정장/흰색 배경으로 변환, 정면 사진이 아니어도 정면으로 변환까지!\n평면도를 3D로: 2D 건축 평면도를 가구가 배치된 사실적인 3D 아이소메트릭 뷰로 시각화.\n만화 패널 변환: 이미지를 만화 장면처럼 변환 (느와르, 웹툰, 코믹스 스타일 선택 가능). 텍스트 언어 지정 (한국어 렌더링은 아직 완벽하지 않음).\n3. 중앙 제어 영역의 고급 기능들\n더 강력하고 전문적인 기능들을 살펴볼 차례입니다.\n복원 기능: 오래된 사진 손상 채우기, 흑백 컬러화, 2~4배 업스케일.\n채색하기: 스케치/라인 아트에 색과 명암을 칠해 완성된 일러스트로.\n스타일 변환: 원본의 구도/내용 유지, 아트 스타일만 재창조 (예: 피규어, 애니메이션).\n이미지 합성: 여러 이미지를 놀랍도록 자연스럽게 합성 (예: 가족+바다, 모델+가방+선글라스+한복).\n인생 앨범 제작: 인물 사진 한 장으로 유아기부터 노년기까지의 모습이 담긴 콜라주 앨범 생성. 정말 특별한 기능이에요!\n바나나 캔버스 (BANANA CANVAS) 바로 사용하기\n  핵심 요약\n1. 나노바나나는 구글 제미나이 2.5 Flash Image의 별명으로, 캐릭터 일관성, 다중 이미지 합성, 정확한 텍스트 렌더링 등 혁신적 성능을 자랑합니다.\n2. 포토샵 등 기존 툴 대비 압도적인 작업 시간 단축, 낮은 기술적 난이도, 무한한 창의적 가능성을 제공합니다.\n3. '바나나 캔버스'는 나노바나나 기반의 무료 올인원 이미지 도구로, 텍스트-이미지 생성부터 고급 편집, 합성을 모두 지원합니다.\n4. 강력한 '프롬프트 제안' 기능과 직관적인 3단 화면 구성으로 초보자도 쉽게 전문가 수준의 결과물을 만들 수 있습니다.\n※ 나노바나나와 바나나 캔버스는 AI 기술의 집약체로, 여러분의 이미지 작업에 혁신적인 변화를 가져올 것입니다. 지금 바로 경험해보세요!\n❓ 자주 묻는 질문 (FAQ)\nQ1: 나노바나나는 무엇이며, 어떤 점이 특별한가요?\nA1: 나노바나나는 구글 제미나이 2.5 Flash Image 모델의 커뮤니티 별명입니다. 기존 AI 이미지 생성 도구들과 달리 캐릭터 일관성 유지, 다중 이미지 합성, 이미지 내 텍스트 정확한 렌더링 등 탁월한 성능을 제공합니다.\nQ2: '바나나 캔버스'는 어떤 앱인가요?\nA2: 바나나 캔버스는 나노바나나(제미나이 2.5 Flash Image)와 이마젠 4.0 기반의 올인원 이미지 생성 및 편집 앱입니다. 텍스트 이미지 생성, 기존 이미지 편집 및 합성 등 다양한 시각 작업을 지원하며, 특히 '프롬프트 제안' 기능으로 초보자도 쉽게 전문가 수준의 결과물을 얻을 수 있습니다.\nQ3: 바나나 캔버스가 제공하는 '빠른 작업'에는 어떤 기능들이 있나요?\nA3: '빠른 작업'에는 배경 제거, 이미지 내 특정 부분 삭제, 인물 증명사진 변환, 2D 평면도를 3D 아이소메트릭 뷰로 변환, 이미지를 만화 패널 스타일로 바꾸는 기능 등이 포함되어 있습니다. 자주 쓰는 편집 기능을 원클릭으로 편리하게 실행할 수 있습니다.\nQ4: 바나나 캔버스를 사용하려면 AI나 프롬프트 지식이 많이 필요한가요?\nA4: 아닙니다! 바나나 캔버스는 '프롬프트 제안' 기능을 통해 사용자의 간단한 아이디어를 분석하여 최적의 지시문을 자동으로 생성해줍니다. 따라서 복잡한 프롬프트 엔지니어링 지식 없이도 누구나 쉽고 직관적으로 고품질의 AI 이미지를 생성하고 편집할 수 있습니다.\n \n\n\n\n \n \n{\"@context\":\"https://schema.org\",\"@type\":\"FAQPage\",\"mainEntity\":[{\"@type\":\"Question\",\"name\":\"나노바나나는 무엇이며, 어떤 점이 특별한가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"나노바나나는 구글 제미나이 2.5 Flash Image 모델의 커뮤니티 별명입니다. 기존 AI 이미지 생성 도구들과 달리 캐릭터 일관성 유지, 다중 이미지 합성, 이미지 내 텍스트 정확한 렌더링 등 탁월한 성능을 제공합니다.\"}},{\"@type\":\"Question\",\"name\":\"'바나나 캔버스'는 어떤 앱인가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"바나나 캔버스는 나노바나나(제미나이 2.5 Flash Image)와 이마젠 4.0 기반의 올인원 이미지 생성 및 편집 앱입니다. 텍스트 이미지 생성, 기존 이미지 편집 및 합성 등 다양한 시각 작업을 지원하며, 특히 '프롬프트 제안' 기능으로 초보자도 쉽게 전문가 수준의 결과물을 얻을 수 있습니다.\"}},{\"@type\":\"Question\",\"name\":\"바나나 캔버스가 제공하는 '빠른 작업'에는 어떤 기능들이 있나요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"'빠른 작업'에는 배경 제거, 이미지 내 특정 부분 삭제, 인물 증명사진 변환, 2D 평면도를 3D 아이소메트릭 뷰로 변환, 이미지를 만화 패널 스타일로 바꾸는 기능 등이 포함되어 있습니다. 자주 쓰는 편집 기능을 원클릭으로 편리하게 실행할 수 있습니다.\"}},{\"@type\":\"Question\",\"name\":\"바나나 캔버스를 사용하려면 AI나 프롬프트 지식이 많이 필요한가요?\",\"acceptedAnswer\":{\"@type\":\"Answer\",\"text\":\"아닙니다! 바나나 캔버스는 '프롬프트 제안' 기능을 통해 사용자의 간단한 아이디어를 분석하여 최적의 지시문을 자동으로 생성해줍니다. 따라서 복잡한 프롬프트 엔지니어링 지식 없이도 누구나 쉽고 직관적으로 고품질의 AI 이미지를 생성하고 편집할 수 있습니다.\"}}]} \n이것으로 바나나 캔버스의 모든 기능과 사용법을 자세히 알아보았습니다. 정말 이 앱 하나로 상상 이상으로 다양한 이미지 작업을 할 수 있다는 걸 느끼셨을 거예요. 처음에는 복잡해 보일 수도 있지만, 저처럼 몇 번 사용해보시면 굉장히 직관적이고 쉽다는 걸 금방 느끼실 수 있을 겁니다. 왼쪽에서 오른쪽으로 자연스럽게 진행되는 작업 흐름만 기억하시면 헷갈리지 않고 스마트하게 활용하실 수 있을 거예요. 여러분의 창의적인 작업을 응원합니다!",
        "guid": "http://muzbox.tistory.com/483649",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "AI 스튜디오",
          "AI 이미지 생성",
          "Gemini 2.5 Flash Image",
          "나노바나나",
          "다중 이미지 합성",
          "무료 AI 도구",
          "바나나 캔버스",
          "이미지 편집",
          "캐릭터 일관성",
          "프롬프트 엔지니어링"
        ],
        "isoDate": "2025-08-31T07:34:01.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "월 20만원 클로드 AI 구독? 브라우저 제어 기능, 과연 그 값어치를 할까",
        "link": "http://muzbox.tistory.com/483648",
        "pubDate": "Fri, 29 Aug 2025 10:53:42 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483648#entry483648comment",
        "content": "<div style=\"font-family: 'Noto Sans KR', sans-serif; line-height: 1.6; max-width: 800px; margin: 0 auto; font-size: 16px; box-sizing: border-box; color: #3c4043;\">\n<div style=\"background-color: #e8f4fd; padding: 15px; border-radius: 8px; font-style: italic; margin-bottom: 25px; font-size: 15px;\">월 20만원이라는 거액을 들여 클로드 AI의 브라우저 제어 기능을 구독해야 할까요? 앤트로픽의 새로운 크롬 확장 프로그램이 우리의 웹 브라우징 경험을 어떻게 바꾸고, 어떤 잠재적 위험을 안고 있는지 심층적으로 분석합니다. 이 혁신적인 기능이 과연 그 값어치를 하는지 함께 고민해 보세요.</div>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">요즘 AI 기술 발전 속도가 정말 무섭다는 생각을 많이 하는데요, 여러분은 어떠세요? 특히 앤트로픽(Anthropic)의 클로드(Claude) AI가 최근 공개한 기능은 저를 깜짝 놀라게 했습니다. 바로 '브라우저 제어' 기능인데요. 아니, AI가 내 브라우저를 직접 조작한다고? 솔직히 처음 들었을 때 기대보다는 좀 묘한 불안감이 앞섰어요. 과연 이 기능이 우리에게 어떤 의미를 가지며, 또 월 20만원에 달하는(?) 구독료가 과연 합당한지, 오늘은 저와 함께 이 흥미로운 주제를 파헤쳐볼까 합니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">앤트로픽은 최근 클로드 AI의 크롬 확장 프로그램을 공개하며, 특정 사용자들을 대상으로 이 기능을 시험하고 있다고 발표했어요. 이 확장 프로그램은 클로드가 사용자의 브라우저 활동을 '볼 수' 있게 할 뿐만 아니라, 심지어는 사용자를 대신해 '작업을 수행할 수' 있도록 한다고 합니다. 마치 미래 영화에서 보던 일이 현실이 되는 것만 같은 느낌이죠. 그런데 말입니다, 이 미래가 정말 우리가 원하던 미래일까요?  </p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"월 20만원 클로드 AI 브라우저 제어 기능, 과연 그 값어치를 할까.jpeg\" data-origin-width=\"1200\" data-origin-height=\"1200\"><span data-url=\"https://blog.kakaocdn.net/dn/YTx2K/btsQcoWTCFQ/AB0eUvltEigtgx0W8X4Y8k/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/YTx2K/btsQcoWTCFQ/AB0eUvltEigtgx0W8X4Y8k/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/YTx2K/btsQcoWTCFQ/AB0eUvltEigtgx0W8X4Y8k/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FYTx2K%2FbtsQcoWTCFQ%2FAB0eUvltEigtgx0W8X4Y8k%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"클로드 AI가 브라우저를 제어하는 미래지향적인 모습. 파란색 빛을 내는 AI 오브가 노트북 화면 속 웹 브라우저를 조작하는 이미지.\" loading=\"lazy\" width=\"500\" height=\"500\" data-filename=\"월 20만원 클로드 AI 브라우저 제어 기능, 과연 그 값어치를 할까.jpeg\" data-origin-width=\"1200\" data-origin-height=\"1200\"/></span></figure>\n\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  클로드 AI의 브라우저 제어 기능, 무엇이 가능할까?</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">클로드 AI의 브라우저 제어 기능은 크게 두 가지 측면에서 작동합니다. 하나는 '맥락 이해 능력'의 강화이고, 다른 하나는 '실제 브라우저 조작'입니다. 이 두 가지가 합쳐지면 상상 이상의 시너지를 낼 수 있다고 하는데요, 자세히 한번 들여다보죠.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=mCj4kx_P2Ak\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/NDqdA/hyZGaHD3uY/rsbq26OuhokAstbu2KkmNK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/cE3rxT/hyZDLWDOly/MREkrwlMQGG2dhuKjm6aok/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Research Preview: Claude for Chrome\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/mCj4kx_P2Ak\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">브라우저 내용 파악 및 응답 개선</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">가장 기본적인 기능은 클로드가 사용자가 브라우저에서 무엇을 하고 있는지 실시간으로 파악하는 것입니다. 예를 들어, 제가 어떤 기사를 읽고 있다면 클로드는 그 내용을 이해하고 제가 던지는 질문에 훨씬 더 정확하고 맥락에 맞는 답변을 해줄 수 있게 되는 거죠. 마치 옆에서 제 활동을 지켜보며 언제든 조언해 줄 준비가 된 비서 같다고 할까요? 확장 프로그램 내 챗봇 창을 통해 이런 상호작용이 가능하다고 합니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">브라우저 직접 제어: 미래인가, 과도한 개입인가?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">앤트로픽의 비전은 여기서 멈추지 않습니다. 클로드는 단순히 맥락을 파악하는 것을 넘어, 직접 브라우저를 조작하여 사용자를 대신해 작업을 수행할 수 있습니다. 상상만 해도 대단하지 않나요? 몇 가지 예시를 통해 이 기능을 좀 더 구체적으로 살펴보겠습니다.</p>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">  <b>예시 1: 아파트 매물 찾기</b><br />여러분, 이사할 집을 찾아본 경험 있으시죠? 앤트로픽은 사용자가 Zillow(해외 부동산 웹사이트)에서 아파트를 찾을 때, 클로드에게 원하는 조건을 말하면 클로드가 직접 Zillow에 접속해 매물을 검색하고, 가장 적합한 목록을 찾아 공유해 줄 수 있다고 설명합니다. 심지어 어떤 페이지 콘텐츠를 읽어야 하는지 등 필요한 권한까지 사용자에게 알려준다고 해요.</div>\n<div style=\"background-color: #e8f4fd; border-left: 4px solid #1a73e8; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">  <b>예시 2: 음식 주문하기</b><br />저녁 메뉴를 고르다가 '마늘 면'이 갑자기 당기는 날이 있죠? 클로드에게 DoorDash(해외 배달 앱)에서 평점 좋은 마늘 면 식당을 찾아 장바구니에 담아달라고 요청할 수 있습니다. 클로드는 DoorDash 홈페이지를 인식하고, '마늘 면'을 검색창에 입력한 뒤 엔터 키를 누르는 일련의 과정을 직접 보여준다고 합니다. 이거, 거의 SF 영화의 한 장면 아닌가요?</div>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">음... 솔직히 말해서, 광고하는 대로 작동한다면 정말 엄청난 기능임은 분명합니다. 하지만 제가 직접 써보니, 아니 솔직히 말하면 아직 써보지 못했지만 상상해볼 때, 과연 모든 일에 AI의 도움을 받아야 할까 하는 의문이 들어요. 저는 새로운 아파트를 찾아보는 과정이나, 맛있는 저녁 식당을 고르는 과정에서 나름의 즐거움을 느끼거든요. 클로드가 어떤 기준으로 '나에게 맞는' 아파트를 고르고, 어떤 식당의 '마늘 면'이 가장 맛있을 거라고 판단할 수 있을까요? 이런 주관적인 선택들은 여전히 사람의 몫이라고 생각합니다.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"클로드 AI가 웹 브라우저에서 검색 버튼을 누르고 텍스트를 입력하는 모습. AI의 직접적인 웹 조작을 상징합니다.jpeg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/owANx/btsQbZDjJC9/5SPYU4sCvQZybkTIUDVfAk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/owANx/btsQbZDjJC9/5SPYU4sCvQZybkTIUDVfAk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/owANx/btsQbZDjJC9/5SPYU4sCvQZybkTIUDVfAk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FowANx%2FbtsQbZDjJC9%2F5SPYU4sCvQZybkTIUDVfAk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"클로드 AI가 웹 브라우저에서 검색 버튼을 누르고 텍스트를 입력하는 모습. AI의 직접적인 웹 조작을 상징합니다.\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"클로드 AI가 웹 브라우저에서 검색 버튼을 누르고 텍스트를 입력하는 모습. AI의 직접적인 웹 조작을 상징합니다.jpeg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>⚠️ 편리함 뒤에 숨겨진 위험: 클로드 AI와 보안 문제</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">아무리 편리하다고 해도, AI가 내 브라우저를 직접 제어한다는 것은 필연적으로 보안 문제와 연결될 수밖에 없습니다. 앤트로픽 역시 이 부분에 대해 투명하게 언급하고 있는데요, 중요한 것은 우리가 어떤 위험을 감수해야 하는지 정확히 알아야 한다는 점입니다.</p>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">프롬프트 인젝션 공격의 위험성</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">앤트로픽은 AI 브라우저가 '프롬프트 인젝션 공격'에 취약할 수 있다고 인정했습니다. 이는 악의적인 행위자가 AI 모델에 악성 지시를 삽입하여 오작동을 유도하는 사이버 공격의 일종입니다. 테스트 결과, 안전장치를 구현하기 전에는 이런 공격의 성공률이 무려 23.6%에 달했다고 해요.</p>\n<div style=\"background-color: #fce8e6; border-left: 4px solid #d93025; padding: 15px; margin: 20px 0; border-radius: 0 8px 8px 0;\">⚠️ <b>끔찍한 예시: 메일함 삭제 공격</b><br />실제로 앤트로픽의 한 테스트에서, 클로드 AI는 악성 지시가 담긴 이메일을 읽고는 사용자의 메일함에 있는 모든 이메일을 삭제하는 명령을 그대로 수행했다고 합니다. 상상만 해도 아찔하죠? 소중한 메일들이 한순간에 사라진다면... 정말 생각하기도 싫습니다.</div>\n<h3 style=\"font-size: 19px; color: #1a73e8; margin: 25px 0 10px; font-weight: 600;\" data-ke-size=\"size23\">앤트로픽의 안전장치와 현재의 한계</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">다행히 앤트로픽은 이러한 보안 우려를 해소하기 위해 여러 안전장치를 마련하고 있다고 밝혔습니다. 사용자에게 사이트별 권한을 제어할 수 있는 기능을 제공하고, 콘텐츠 게시, 구매, 개인 정보 공유와 같은 '고위험' 작업 전에 반드시 사용자에게 확인을 거치도록 한다고 해요. 또한, 클로드의 개인 데이터 처리 방식에 대한 지침을 개선하고, 금융 거래나 성인/불법 콘텐츠 관련 사이트 등 '고위험 사이트'에 대해서는 아예 접근을 차단했다고 합니다. 이런 노력들은 분명 긍정적입니다. 하지만... 그럼에도 불구하고 아직은 초기 단계라 조심스러울 수밖에 없다는 게 제 생각입니다. 계속해서 안전장치를 보강 중이며, 그래서 현재는 테스트 규모도 매우 제한적이라고 하네요.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"AI 브라우저 제어 기능의 보안 위험을 상징하는 이미지. 파란색 방패 주위에 빨간색 경고 아이콘들이 떠 있습니다.jpeg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/wh0IJ/btsQaP86ZSs/LhLlt9ZIv6RKOrzWGFcDN1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/wh0IJ/btsQaP86ZSs/LhLlt9ZIv6RKOrzWGFcDN1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/wh0IJ/btsQaP86ZSs/LhLlt9ZIv6RKOrzWGFcDN1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fwh0IJ%2FbtsQaP86ZSs%2FLhLlt9ZIv6RKOrzWGFcDN1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"AI 브라우저 제어 기능의 보안 위험을 상징하는 이미지. 파란색 방패 주위에 빨간색 경고 아이콘들이 떠 있습니다.\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"AI 브라우저 제어 기능의 보안 위험을 상징하는 이미지. 파란색 방패 주위에 빨간색 경고 아이콘들이 떠 있습니다.jpeg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>  월 20만원? 클로드 AI 브라우저 제어 기능, 어떻게 사용할 수 있나?</b></h2>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">자, 그럼 이 혁신적이면서도 논란의 여지가 있는 기능을 어떻게 하면 사용할 수 있을까요? 현재로서는 접근이 상당히 제한적입니다. 앤트로픽은 초기 테스트를 오직 1,000명의 클로드 맥스(Claude Max) 구독자에게만 제공하고 있습니다. 여기서 중요한 건 '맥스' 구독료인데요, 월 100달러 또는 200달러에 달하는, 우리 돈으로 치면 대략 월 13만원에서 26만원(환율에 따라 변동) 정도의 어마어마한 금액입니다.  </p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">앤트로픽은 향후 몇 주에 걸쳐 더 많은 맥스 구독자에게 초기 접근 권한을 확대할 예정이라고 합니다. 제 생각에는 언젠가는 프로 구독자(월 20달러)에게도 테스트 기회가 주어지지 않을까 조심스럽게 예측해봅니다만, 현재로서는 '그들만의 리그'라고 볼 수 있겠습니다. 지금 당장이라도 기다림 명단에 등록할 수는 있지만, 앞서 언급된 위험을 감수해야 한다는 경고 문구를 간과해서는 안 됩니다. 즉, 악의적인 사용자들로부터 다음과 같은 위험에 노출될 수 있다는 거죠.</p>\n<ul style=\"list-style-type: disc; margin-left: 20px; margin-bottom: 20px;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 10px;\">여러분의 계정이나 파일에 접근</li>\n<li style=\"margin-bottom: 10px;\">개인 정보 공유</li>\n<li style=\"margin-bottom: 10px;\">여러분을 대신한 구매 진행</li>\n<li style=\"margin-bottom: 10px;\">의도하지 않은 행동 수행</li>\n</ul>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">음, 단순히 편리함을 얻기 위해 감수하기에는 위험 부담이 너무 크지 않나 하는 생각이 강하게 듭니다. 특히나 월 20만원 이상의 비용을 지불해야 한다는 점을 고려하면 말이죠.</p>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"클로드 AI 구독의 높은 비용을 나타내는 이미지. 디지털 돼지 저금통 위로 '월 200달러'라는 가격표가 크게 표시되어 있습니다.jpeg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/XQn5m/btsP9MSKfiA/XT8DEGcABFS3RgTyf9Tc7K/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/XQn5m/btsP9MSKfiA/XT8DEGcABFS3RgTyf9Tc7K/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/XQn5m/btsP9MSKfiA/XT8DEGcABFS3RgTyf9Tc7K/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FXQn5m%2FbtsP9MSKfiA%2FXT8DEGcABFS3RgTyf9Tc7K%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"클로드 AI 구독의 높은 비용을 나타내는 이미지. 디지털 돼지 저금통 위로 '월 200달러'라는 가격표가 크게 표시되어 있습니다.\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"클로드 AI 구독의 높은 비용을 나타내는 이미지. 디지털 돼지 저금통 위로 '월 200달러'라는 가격표가 크게 표시되어 있습니다.jpeg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n\n<div style=\"background-color: #f8f9fa; border: 1px solid #dadce0; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); padding: 25px; margin: 40px 0;\">\n<div style=\"font-size: 26px; color: #1a73e8; font-weight: bold; margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid #1a73e8;\">  핵심 요약</div>\n<ul style=\"list-style-type: none; padding: 0; margin: 0;\" data-ke-list-type=\"disc\">\n<li style=\"margin-bottom: 15px; font-size: 17px;\"><b>브라우저 제어 기능</b>: 클로드 AI가 사용자의 브라우저 활동을 파악하고, 직접 웹사이트를 조작하여 작업을 대신 수행합니다.</li>\n<li style=\"margin-bottom: 15px; font-size: 17px;\"><b>잠재적 편리성</b>: 아파트 검색, 음식 주문 등 반복적이거나 시간 소모적인 작업을 AI가 대신 처리해줄 수 있습니다.</li>\n<li style=\"margin-bottom: 15px; font-size: 17px;\"><b>심각한 보안 우려</b>: 프롬프트 인젝션 공격에 취약하며, 초기 테스트에서 악성 지시에 따라 이메일을 삭제한 사례가 보고되었습니다.</li>\n<li style=\"margin-bottom: 0px; font-size: 17px;\"><b>높은 구독료와 제한된 접근</b>: 현재 월 100~200달러의 클로드 맥스 구독자에게만 제공되며, 여전히 여러 위험을 안고 있습니다.</li>\n</ul>\n<div style=\"margin-top: 25px; padding-top: 15px; border-top: 1px dashed #dadce0; font-size: 14px; color: #5f6368;\">이 기능은 미래 기술의 한 단면을 보여주지만, 개인 정보 보호와 보안에 대한 신중한 고려가 필요합니다. 과연 그 값어치를 할지는 사용자의 판단에 달려 있습니다.</div>\n</div>\n<h2 style=\"font-size: 22px; color: white; background: linear-gradient(to right, #1a73e8, #004d99); margin: 30px 0 15px; border-radius: 10px; padding: 10px 25px; text-shadow: 1px 1px 2px rgba(0,0,0,0.2); font-weight: bold; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\" data-ke-size=\"size26\"><b>❓ 자주 묻는 질문 (FAQ)</b></h2>\n<div style=\"margin-bottom: 20px;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin-bottom: 10px; font-weight: 600;\" data-ke-size=\"size23\">Q1: 클로드 AI 브라우저 제어 기능의 구독료는 얼마인가요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">현재 이 기능은 앤트로픽의 최상위 플랜인 클로드 맥스(Claude Max) 구독자에게만 제공되며, 월 100달러 또는 200달러(한화 약 13만원~26만원, 환율에 따라 변동)입니다. 상당히 높은 가격대입니다.</p>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin-bottom: 10px; font-weight: 600;\" data-ke-size=\"size23\">Q2: 브라우저 제어 기능은 어떤 작업을 대신 해줄 수 있나요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">웹사이트 탐색, 특정 정보 검색, 온라인 양식 작성, 아파트 매물 찾기, 음식 주문하기 등 사용자를 대신하여 브라우저에서 다양한 작업을 수행할 수 있습니다. 맥락을 이해하고 적절한 조치를 취하는 것이 가능하다고 합니다.</p>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin-bottom: 10px; font-weight: 600;\" data-ke-size=\"size23\">Q3: 클로드 AI 브라우저 제어 기능 사용 시 보안 위험은 없나요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">앤트로픽은 '프롬프트 인젝션 공격'과 같은 잠재적 보안 위험이 있음을 인정하고 있습니다. 현재 안전장치를 마련하고 있지만, 사용자의 계정 접근, 개인 정보 공유, 무단 구매 등 악의적인 행위에 노출될 위험이 여전히 존재할 수 있습니다. 아직 초기 테스트 단계라 주의가 필요합니다.</p>\n</div>\n<div style=\"margin-bottom: 20px;\">\n<h3 style=\"font-size: 18px; color: #1a73e8; margin-bottom: 10px; font-weight: 600;\" data-ke-size=\"size23\">Q4: 일반 사용자도 이 기능을 곧 사용할 수 있을까요?</h3>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">현재는 극히 제한된 클로드 맥스 구독자에게만 초기 접근이 허용되고 있습니다. 앤트로픽은 점진적으로 더 많은 맥스 구독자에게 확대한 뒤, 향후에는 프로 구독자에게도 기회가 주어질 가능성이 있다고 예측해 볼 수 있습니다. 하지만 일반 사용자가 바로 접근하기까지는 상당한 시간이 걸릴 것으로 예상됩니다.</p>\n</div>\n<script type=\"application/ld+json\">\n  {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n      {\n        \"@type\": \"Question\",\n        \"name\": \"클로드 AI 브라우저 제어 기능의 구독료는 얼마인가요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"현재 이 기능은 앤트로픽의 최상위 플랜인 클로드 맥스(Claude Max) 구독자에게만 제공되며, 월 100달러 또는 200달러(한화 약 13만원~26만원, 환율에 따라 변동)입니다. 상당히 높은 가격대입니다.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"브라우저 제어 기능은 어떤 작업을 대신 해줄 수 있나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"웹사이트 탐색, 특정 정보 검색, 온라인 양식 작성, 아파트 매물 찾기, 음식 주문하기 등 사용자를 대신하여 브라우저에서 다양한 작업을 수행할 수 있습니다. 맥락을 이해하고 적절한 조치를 취하는 것이 가능하다고 합니다.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"클로드 AI 브라우저 제어 기능 사용 시 보안 위험은 없나요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"앤트로픽은 '프롬프트 인젝션 공격'과 같은 잠재적 보안 위험이 있음을 인정하고 있습니다. 현재 안전장치를 마련하고 있지만, 사용자의 계정 접근, 개인 정보 공유, 무단 구매 등 악의적인 행위에 노출될 위험이 여전히 존재할 수 있습니다. 아직 초기 테스트 단계라 주의가 필요합니다.\"\n        }\n      },\n      {\n        \"@type\": \"Question\",\n        \"name\": \"일반 사용자도 이 기능을 곧 사용할 수 있을까요?\",\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": \"현재는 극히 제한된 클로드 맥스 구독자에게만 초기 접근이 허용되고 있습니다. 앤트로픽은 점진적으로 더 많은 맥스 구독자에게 확대한 뒤, 향후에는 프로 구독자에게도 기회가 주어질 가능성이 있다고 예측해 볼 수 있습니다. 하지만 일반 사용자가 바로 접근하기까지는 상당한 시간이 걸릴 것으로 예상됩니다.\"\n        }\n      }\n    ]\n  }\n  </script>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">월 20만원이라는 높은 비용을 감수하면서 클로드 AI의 브라우저 제어 기능을 구독할 가치가 있을까요? 편리함의 극대화를 추구하는 사람들에게는 매력적인 제안일 수 있습니다. 하지만 제 개인적인 생각으로는, 아직은 보안 문제와 주관적인 판단의 영역에서 넘어야 할 산이 많아 보입니다. 당장은 제가 직접 브라우징하고 선택하는 즐거움을 포기할 만큼의 매력은 못 느끼는 게 솔직한 심정입니다.</p>\n<p style=\"margin-bottom: 20px;\" data-ke-size=\"size16\">물론, 앞으로 기술이 발전하고 안전장치가 더욱 견고해진다면 이야기는 달라질 수 있겠죠. 여러분은 이 혁신적인 기능에 대해 어떻게 생각하시나요? 댓글로 의견을 공유해 주세요!  </p>\n</div>",
        "contentSnippet": "월 20만원이라는 거액을 들여 클로드 AI의 브라우저 제어 기능을 구독해야 할까요? 앤트로픽의 새로운 크롬 확장 프로그램이 우리의 웹 브라우징 경험을 어떻게 바꾸고, 어떤 잠재적 위험을 안고 있는지 심층적으로 분석합니다. 이 혁신적인 기능이 과연 그 값어치를 하는지 함께 고민해 보세요.\n요즘 AI 기술 발전 속도가 정말 무섭다는 생각을 많이 하는데요, 여러분은 어떠세요? 특히 앤트로픽(Anthropic)의 클로드(Claude) AI가 최근 공개한 기능은 저를 깜짝 놀라게 했습니다. 바로 '브라우저 제어' 기능인데요. 아니, AI가 내 브라우저를 직접 조작한다고? 솔직히 처음 들었을 때 기대보다는 좀 묘한 불안감이 앞섰어요. 과연 이 기능이 우리에게 어떤 의미를 가지며, 또 월 20만원에 달하는(?) 구독료가 과연 합당한지, 오늘은 저와 함께 이 흥미로운 주제를 파헤쳐볼까 합니다.\n앤트로픽은 최근 클로드 AI의 크롬 확장 프로그램을 공개하며, 특정 사용자들을 대상으로 이 기능을 시험하고 있다고 발표했어요. 이 확장 프로그램은 클로드가 사용자의 브라우저 활동을 '볼 수' 있게 할 뿐만 아니라, 심지어는 사용자를 대신해 '작업을 수행할 수' 있도록 한다고 합니다. 마치 미래 영화에서 보던 일이 현실이 되는 것만 같은 느낌이죠. 그런데 말입니다, 이 미래가 정말 우리가 원하던 미래일까요?  \n\n\n  클로드 AI의 브라우저 제어 기능, 무엇이 가능할까?\n클로드 AI의 브라우저 제어 기능은 크게 두 가지 측면에서 작동합니다. 하나는 '맥락 이해 능력'의 강화이고, 다른 하나는 '실제 브라우저 조작'입니다. 이 두 가지가 합쳐지면 상상 이상의 시너지를 낼 수 있다고 하는데요, 자세히 한번 들여다보죠.\n \n\n\n\n \n브라우저 내용 파악 및 응답 개선\n가장 기본적인 기능은 클로드가 사용자가 브라우저에서 무엇을 하고 있는지 실시간으로 파악하는 것입니다. 예를 들어, 제가 어떤 기사를 읽고 있다면 클로드는 그 내용을 이해하고 제가 던지는 질문에 훨씬 더 정확하고 맥락에 맞는 답변을 해줄 수 있게 되는 거죠. 마치 옆에서 제 활동을 지켜보며 언제든 조언해 줄 준비가 된 비서 같다고 할까요? 확장 프로그램 내 챗봇 창을 통해 이런 상호작용이 가능하다고 합니다.\n브라우저 직접 제어: 미래인가, 과도한 개입인가?\n앤트로픽의 비전은 여기서 멈추지 않습니다. 클로드는 단순히 맥락을 파악하는 것을 넘어, 직접 브라우저를 조작하여 사용자를 대신해 작업을 수행할 수 있습니다. 상상만 해도 대단하지 않나요? 몇 가지 예시를 통해 이 기능을 좀 더 구체적으로 살펴보겠습니다.\n  예시 1: 아파트 매물 찾기\n여러분, 이사할 집을 찾아본 경험 있으시죠? 앤트로픽은 사용자가 Zillow(해외 부동산 웹사이트)에서 아파트를 찾을 때, 클로드에게 원하는 조건을 말하면 클로드가 직접 Zillow에 접속해 매물을 검색하고, 가장 적합한 목록을 찾아 공유해 줄 수 있다고 설명합니다. 심지어 어떤 페이지 콘텐츠를 읽어야 하는지 등 필요한 권한까지 사용자에게 알려준다고 해요.\n  예시 2: 음식 주문하기\n저녁 메뉴를 고르다가 '마늘 면'이 갑자기 당기는 날이 있죠? 클로드에게 DoorDash(해외 배달 앱)에서 평점 좋은 마늘 면 식당을 찾아 장바구니에 담아달라고 요청할 수 있습니다. 클로드는 DoorDash 홈페이지를 인식하고, '마늘 면'을 검색창에 입력한 뒤 엔터 키를 누르는 일련의 과정을 직접 보여준다고 합니다. 이거, 거의 SF 영화의 한 장면 아닌가요?\n음... 솔직히 말해서, 광고하는 대로 작동한다면 정말 엄청난 기능임은 분명합니다. 하지만 제가 직접 써보니, 아니 솔직히 말하면 아직 써보지 못했지만 상상해볼 때, 과연 모든 일에 AI의 도움을 받아야 할까 하는 의문이 들어요. 저는 새로운 아파트를 찾아보는 과정이나, 맛있는 저녁 식당을 고르는 과정에서 나름의 즐거움을 느끼거든요. 클로드가 어떤 기준으로 '나에게 맞는' 아파트를 고르고, 어떤 식당의 '마늘 면'이 가장 맛있을 거라고 판단할 수 있을까요? 이런 주관적인 선택들은 여전히 사람의 몫이라고 생각합니다.\n\n\n⚠️ 편리함 뒤에 숨겨진 위험: 클로드 AI와 보안 문제\n아무리 편리하다고 해도, AI가 내 브라우저를 직접 제어한다는 것은 필연적으로 보안 문제와 연결될 수밖에 없습니다. 앤트로픽 역시 이 부분에 대해 투명하게 언급하고 있는데요, 중요한 것은 우리가 어떤 위험을 감수해야 하는지 정확히 알아야 한다는 점입니다.\n프롬프트 인젝션 공격의 위험성\n앤트로픽은 AI 브라우저가 '프롬프트 인젝션 공격'에 취약할 수 있다고 인정했습니다. 이는 악의적인 행위자가 AI 모델에 악성 지시를 삽입하여 오작동을 유도하는 사이버 공격의 일종입니다. 테스트 결과, 안전장치를 구현하기 전에는 이런 공격의 성공률이 무려 23.6%에 달했다고 해요.\n⚠️ 끔찍한 예시: 메일함 삭제 공격\n실제로 앤트로픽의 한 테스트에서, 클로드 AI는 악성 지시가 담긴 이메일을 읽고는 사용자의 메일함에 있는 모든 이메일을 삭제하는 명령을 그대로 수행했다고 합니다. 상상만 해도 아찔하죠? 소중한 메일들이 한순간에 사라진다면... 정말 생각하기도 싫습니다.\n앤트로픽의 안전장치와 현재의 한계\n다행히 앤트로픽은 이러한 보안 우려를 해소하기 위해 여러 안전장치를 마련하고 있다고 밝혔습니다. 사용자에게 사이트별 권한을 제어할 수 있는 기능을 제공하고, 콘텐츠 게시, 구매, 개인 정보 공유와 같은 '고위험' 작업 전에 반드시 사용자에게 확인을 거치도록 한다고 해요. 또한, 클로드의 개인 데이터 처리 방식에 대한 지침을 개선하고, 금융 거래나 성인/불법 콘텐츠 관련 사이트 등 '고위험 사이트'에 대해서는 아예 접근을 차단했다고 합니다. 이런 노력들은 분명 긍정적입니다. 하지만... 그럼에도 불구하고 아직은 초기 단계라 조심스러울 수밖에 없다는 게 제 생각입니다. 계속해서 안전장치를 보강 중이며, 그래서 현재는 테스트 규모도 매우 제한적이라고 하네요.\n\n\n  월 20만원? 클로드 AI 브라우저 제어 기능, 어떻게 사용할 수 있나?\n자, 그럼 이 혁신적이면서도 논란의 여지가 있는 기능을 어떻게 하면 사용할 수 있을까요? 현재로서는 접근이 상당히 제한적입니다. 앤트로픽은 초기 테스트를 오직 1,000명의 클로드 맥스(Claude Max) 구독자에게만 제공하고 있습니다. 여기서 중요한 건 '맥스' 구독료인데요, 월 100달러 또는 200달러에 달하는, 우리 돈으로 치면 대략 월 13만원에서 26만원(환율에 따라 변동) 정도의 어마어마한 금액입니다.  \n앤트로픽은 향후 몇 주에 걸쳐 더 많은 맥스 구독자에게 초기 접근 권한을 확대할 예정이라고 합니다. 제 생각에는 언젠가는 프로 구독자(월 20달러)에게도 테스트 기회가 주어지지 않을까 조심스럽게 예측해봅니다만, 현재로서는 '그들만의 리그'라고 볼 수 있겠습니다. 지금 당장이라도 기다림 명단에 등록할 수는 있지만, 앞서 언급된 위험을 감수해야 한다는 경고 문구를 간과해서는 안 됩니다. 즉, 악의적인 사용자들로부터 다음과 같은 위험에 노출될 수 있다는 거죠.\n여러분의 계정이나 파일에 접근\n개인 정보 공유\n여러분을 대신한 구매 진행\n의도하지 않은 행동 수행\n음, 단순히 편리함을 얻기 위해 감수하기에는 위험 부담이 너무 크지 않나 하는 생각이 강하게 듭니다. 특히나 월 20만원 이상의 비용을 지불해야 한다는 점을 고려하면 말이죠.\n\n\n\n  핵심 요약\n브라우저 제어 기능: 클로드 AI가 사용자의 브라우저 활동을 파악하고, 직접 웹사이트를 조작하여 작업을 대신 수행합니다.\n잠재적 편리성: 아파트 검색, 음식 주문 등 반복적이거나 시간 소모적인 작업을 AI가 대신 처리해줄 수 있습니다.\n심각한 보안 우려: 프롬프트 인젝션 공격에 취약하며, 초기 테스트에서 악성 지시에 따라 이메일을 삭제한 사례가 보고되었습니다.\n높은 구독료와 제한된 접근: 현재 월 100~200달러의 클로드 맥스 구독자에게만 제공되며, 여전히 여러 위험을 안고 있습니다.\n이 기능은 미래 기술의 한 단면을 보여주지만, 개인 정보 보호와 보안에 대한 신중한 고려가 필요합니다. 과연 그 값어치를 할지는 사용자의 판단에 달려 있습니다.\n❓ 자주 묻는 질문 (FAQ)\nQ1: 클로드 AI 브라우저 제어 기능의 구독료는 얼마인가요?\n현재 이 기능은 앤트로픽의 최상위 플랜인 클로드 맥스(Claude Max) 구독자에게만 제공되며, 월 100달러 또는 200달러(한화 약 13만원~26만원, 환율에 따라 변동)입니다. 상당히 높은 가격대입니다.\nQ2: 브라우저 제어 기능은 어떤 작업을 대신 해줄 수 있나요?\n웹사이트 탐색, 특정 정보 검색, 온라인 양식 작성, 아파트 매물 찾기, 음식 주문하기 등 사용자를 대신하여 브라우저에서 다양한 작업을 수행할 수 있습니다. 맥락을 이해하고 적절한 조치를 취하는 것이 가능하다고 합니다.\nQ3: 클로드 AI 브라우저 제어 기능 사용 시 보안 위험은 없나요?\n앤트로픽은 '프롬프트 인젝션 공격'과 같은 잠재적 보안 위험이 있음을 인정하고 있습니다. 현재 안전장치를 마련하고 있지만, 사용자의 계정 접근, 개인 정보 공유, 무단 구매 등 악의적인 행위에 노출될 위험이 여전히 존재할 수 있습니다. 아직 초기 테스트 단계라 주의가 필요합니다.\nQ4: 일반 사용자도 이 기능을 곧 사용할 수 있을까요?\n현재는 극히 제한된 클로드 맥스 구독자에게만 초기 접근이 허용되고 있습니다. 앤트로픽은 점진적으로 더 많은 맥스 구독자에게 확대한 뒤, 향후에는 프로 구독자에게도 기회가 주어질 가능성이 있다고 예측해 볼 수 있습니다. 하지만 일반 사용자가 바로 접근하기까지는 상당한 시간이 걸릴 것으로 예상됩니다.\n월 20만원이라는 높은 비용을 감수하면서 클로드 AI의 브라우저 제어 기능을 구독할 가치가 있을까요? 편리함의 극대화를 추구하는 사람들에게는 매력적인 제안일 수 있습니다. 하지만 제 개인적인 생각으로는, 아직은 보안 문제와 주관적인 판단의 영역에서 넘어야 할 산이 많아 보입니다. 당장은 제가 직접 브라우징하고 선택하는 즐거움을 포기할 만큼의 매력은 못 느끼는 게 솔직한 심정입니다.\n물론, 앞으로 기술이 발전하고 안전장치가 더욱 견고해진다면 이야기는 달라질 수 있겠죠. 여러분은 이 혁신적인 기능에 대해 어떻게 생각하시나요? 댓글로 의견을 공유해 주세요!",
        "guid": "http://muzbox.tistory.com/483648",
        "categories": [
          "AI, 미래기술/AI 인사이트",
          "AI 구독료",
          "AI 보안 문제",
          "AI 자동화",
          "브라우저 제어",
          "앤트로픽",
          "인공지능 확장 프로그램",
          "크롬 확장 프로그램",
          "클로드 ai",
          "클로드 맥스",
          "프롬프트 인젝션"
        ],
        "isoDate": "2025-08-29T01:53:42.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "［RULIWEB］",
        "title": "[MULTI] 이제는 익숙해지고 무뎌진 각별함과 황홀함, 소드 오브 더 씨",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2353",
        "pubDate": "Mon, 01 Sep 2025 17:08:18 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/09/01/19904516bb05104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-09-01T08:08:18.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "마치 한 편의 마피아 영화, 마피아: 올드 컨트리",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2352",
        "pubDate": "Sun, 31 Aug 2025 22:43:23 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/08/31/1990055edeb51ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2025-08-31T13:43:23.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "배고픈 드래곤 소녀 육성기, 드래플린",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2351",
        "pubDate": "Wed, 27 Aug 2025 21:43:12 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i3.ruliweb.com/thumb/25/08/27/198eb8c667451ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2025-08-27T12:43:12.000Z"
      },
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 16화, 보답인데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2350",
        "pubDate": "Wed, 27 Aug 2025 21:26:17 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/08/27/198eb7dd0a951ad6b.jpg\">",
        "contentSnippet": "",
        "categories": [
          "웹툰"
        ],
        "isoDate": "2025-08-27T12:26:17.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "HTTP에 대해 처음 아하 모먼트를 느꼈던 순간",
        "link": "https://jeho.page/programming/2025/09/01/http-smtp.html",
        "pubDate": "2025-09-01T03:41:00.000Z",
        "author": "김재호",
        "content": "<p>오래전 HTTP 프로토콜을 공부하다가 느꼈던 기쁜 감정이 떠올랐습니다.<br />\n텔넷을 통해 웹서버에 접속해 HTTP 메시지를 보내고 응답을 받던 순간.</p>\n\n<p>텔넷으로 웹서버에 접속한 뒤</p>\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">telnet</span> <span class=\"n\">example</span><span class=\"p\">.</span><span class=\"nf\">com</span> <span class=\"mi\">80</span>\n</code></pre></div></div>\n\n<p>HTTP 메시지를 스스로 한땀한땀 입력해 봅니다.  <br />\n한 글자씩 타이핑하면서 줄바꿈도 해봐야 합니다.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"no\">GET</span> <span class=\"sr\">/index.html HTTP/</span><span class=\"mf\">1.1</span>\n<span class=\"no\">Host</span><span class=\"p\">:</span> <span class=\"n\">example</span><span class=\"p\">.</span><span class=\"nf\">com</span>\n<span class=\"no\">User</span><span class=\"o\">-</span><span class=\"no\">Agent</span><span class=\"p\">:</span> <span class=\"n\">jeho</span>\n\n</code></pre></div></div>\n\n<p>마지막에 빈 줄을 꼭 넣어야 서버가 “아, 요청이 끝났구나” 하고 응답을 줍니다.<br />\n서버에서 200 OK 와 함께 응답이 내려오는 순간 아하 모먼트를 느꼈습니다. 바로 이런 거였구나!</p>\n\n<p><img src=\"/assets/img/http.png\" alt=\"http 응답\" /></p>\n\n<p>마찬가지로 POST 요청도 보내보면서 어떻게 파라메터가 전달되는지도 관찰하고…<br />\nSMTP(이메일) 또한 프로토콜도 텔넷으로 경험할 수 있습니다.<br />\n검은 텔넷 화면에서 그저 몇 글자 타이핑했을 뿐인데 그게 실제 이메일로 발송되는 순간 ‘아하!’ 하며 깨달음을 얻게 됩니다.</p>\n\n<p>이렇게 기반 프로토콜의 이해를 높여가면 라이브러리도 쉽게 사용할 수 있고 트러블 슈팅도 잘할 수 있게 됩니다.\n<br />\n<br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/programming/2011/01/04/typedef-이해하기.html\">typedef 이해하기</a></li>\n  <li><a href=\"/programming/2010/12/27/파일-조작-테스트를-위한-최고의-프로그램.html\">파일시스템 Api 를 공부하기 위한 최고의 프로그램</a></li>\n</ul>",
        "contentSnippet": "오래전 HTTP 프로토콜을 공부하다가 느꼈던 기쁜 감정이 떠올랐습니다.\n텔넷으로 웹서버에 접속한 뒤\n\ntelnet example.com 80\n\n\nHTTP 메시지를 스스로 한땀한땀 입력해 봅니다.  \n\nGET /index.html HTTP/1.1\nHost: example.com\nUser-Agent: jeho\n\n\n\n마지막에 빈 줄을 꼭 넣어야 서버가 “아, 요청이 끝났구나” 하고 응답을 줍니다.\n\n마찬가지로 POST 요청도 보내보면서 어떻게 파라메터가 전달되는지도 관찰하고…\n이렇게 기반 프로토콜의 이해를 높여가면 라이브러리도 쉽게 사용할 수 있고 트러블 슈팅도 잘할 수 있게 됩니다.\n\n\n함께 읽으면 좋은 글:\ntypedef 이해하기\n파일시스템 Api 를 공부하기 위한 최고의 프로그램",
        "summary": "오래전 HTTP 프로토콜을 공부하다가 느꼈던 기쁜 감정이 떠올랐습니다. 텔넷을 통해 웹서버에 접속해 HTTP 메시지를 보내고 응답을 받던 순간.",
        "id": "https://jeho.page/programming/2025/09/01/http-smtp",
        "isoDate": "2025-09-01T03:41:00.000Z"
      },
      {
        "title": "내가 가본 우리나라 앱 개발 뒷 이야기",
        "link": "https://jeho.page/essay/2025/08/27/my-korea-map.html",
        "pubDate": "2025-08-26T15:59:00.000Z",
        "author": "김재호",
        "content": "<p>며칠 전 공개했던 <a href=\"/essay/2025/08/01/my-korea-map.html\">내가 가본 우리나라</a> 웹사이트를 앱으로도 만들어봤습니다.<br />\n<a href=\"https://play.google.com/store/apps/details?id=com.my.koreamap&amp;hl=ko\">안드로이드</a>, <a href=\"https://apps.apple.com/kr/app/id6749817480\">아이폰</a> 그리고 맥 앱까지. (맥은 아직 심사 중이에요)</p>\n\n<p>간단한 아이디어였고 제가 쓰고 싶은 마음에 만들기도 했지만,<br />\n레일즈 8을 좀 더 알아보고자 하는 마음.<br />\n제 기술 스택을 정돈해 보고 싶은 마음이 있었어요.</p>\n\n<p>루비 온 레일즈, Vue.js, React<br />\nSwiftUI, 플러터, React Native, Universal Windows Platform</p>\n\n<p>계속 이렇게 공부만 하면서 왔다 갔다 해야 하나?<br />\n좀 잘 정리해서 내 주력 스택을 확정시킬 순 없을까?</p>\n\n<p>루비 온 레일즈 8의 기본 기능을 최대한 활용해 보고 싶었습니다.</p>\n<ul>\n  <li>Hotwire, Stimulus, Turbo, importmap을 통한 외부 종속성 없는 자바스크립트 환경.</li>\n  <li>Kamal 을 통한 배포.</li>\n  <li>Solid Queue를 통한 백그라운드 작업.</li>\n  <li>Solid Cache 캐싱.</li>\n  <li>sqlite와 홈서버로 프로덕션 환경 운영해 보기.</li>\n  <li><del>Hotwire Native를 통한 모바일 앱 개발까지.</del></li>\n</ul>\n\n<p>웹사이트를 다 만들고 나서 아주 홀가분했습니다. Hotwire에 대해 거의 아는 게 없었지만 AI 덕분에 수월했어요.<br />\nReact 같은 걸 쓸 필요가 있나? 하는 생각을 많이 했습니다. Webpack이나 Vite 같은 피곤한 도구들 안 봐도 되는 것도 정말 좋았고요.</p>\n\n<p>모바일 앱을 만들기 위해 <a href=\"https://native.hotwired.dev/\">Hotwire Native</a>와 이틀 정도 씨름하다가…<br />\n이건 도저히 안 되겠다. 더러워서 못 해먹겠다 하고 포기했습니다.</p>\n\n<p>결국 플러터를 선택해서 안드로이드, 아이폰, 맥 앱을 만들었습니다.<br />\n총 코드는 90% 정도가 레일즈이고 10% 정도가 플러터.</p>\n\n<p>클로드 코드로만 작업했고, 제가 직접 코드에 관여한 부분은 없었던 것 같아요.<br />\n클로드 코드를 사용할 때는 <a href=\"/essay/2025/07/23/context-swiching.html\">여러 작업을 병렬로 안 하고 최대한 순차적으로</a> 진행하려고 노력했습니다.<br />\n다른 프로젝트도 신경 쓰지 않고요. 안 그러면 제 머리가 따라갈 수 없어서.  <br />\n여담이지만 저는 클로드 코드에 mcp도 하나도 연결하지 않았고, 남들이 만든 agents.md 같은 것들도 잘 보지 않습니다. 노땅이 다 된 것 같아요.</p>\n\n<p>규모가 작은 앱이긴 하지만, 이번 작업으로 이 스택에 자신감이 생겼습니다.<br />\n앞으로도 새로운 서비스 만들 땐 이렇게 만들지 않을까 싶습니다. 😁\n<br />\n<br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2023/01/04/dont-say-ruby-is-slow.html\">루비가 느리다고?</a></li>\n  <li><a href=\"/essay/2024/04/29/home-server.html\">집에서 서버를 운영하는 게 가능한가요?</a></li>\n  <li><a href=\"/essay/2025/08/11/solo-developer.html\">진짜 1인 개발자 전성시대</a></li>\n</ul>",
        "contentSnippet": "며칠 전 공개했던 내가 가본 우리나라 웹사이트를 앱으로도 만들어봤습니다.\n안드로이드, 아이폰 그리고 맥 앱까지. (맥은 아직 심사 중이에요)\n간단한 아이디어였고 제가 쓰고 싶은 마음에 만들기도 했지만,\n루비 온 레일즈, Vue.js, React\n계속 이렇게 공부만 하면서 왔다 갔다 해야 하나?\n루비 온 레일즈 8의 기본 기능을 최대한 활용해 보고 싶었습니다.\nHotwire, Stimulus, Turbo, importmap을 통한 외부 종속성 없는 자바스크립트 환경.\nKamal 을 통한 배포.\nSolid Queue를 통한 백그라운드 작업.\nSolid Cache 캐싱.\nsqlite와 홈서버로 프로덕션 환경 운영해 보기.\nHotwire Native를 통한 모바일 앱 개발까지.\n웹사이트를 다 만들고 나서 아주 홀가분했습니다. Hotwire에 대해 거의 아는 게 없었지만 AI 덕분에 수월했어요.\n모바일 앱을 만들기 위해 Hotwire Native와 이틀 정도 씨름하다가…\n결국 플러터를 선택해서 안드로이드, 아이폰, 맥 앱을 만들었습니다.\n클로드 코드로만 작업했고, 제가 직접 코드에 관여한 부분은 없었던 것 같아요.\n여러 작업을 병렬로 안 하고 최대한 순차적으로 진행하려고 노력했습니다.\n규모가 작은 앱이긴 하지만, 이번 작업으로 이 스택에 자신감이 생겼습니다.\n함께 읽으면 좋은 글:\n루비가 느리다고?\n집에서 서버를 운영하는 게 가능한가요?\n진짜 1인 개발자 전성시대",
        "summary": "며칠 전 공개했던 내가 가본 우리나라 웹사이트를 앱으로도 만들어봤습니다. 안드로이드, 아이폰 그리고 맥 앱까지. (맥은 아직 심사 중이에요)",
        "id": "https://jeho.page/essay/2025/08/27/my-korea-map",
        "isoDate": "2025-08-26T15:59:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "2025년 튤립 버블 이미 터졌었다 / 중국 보이차 폭락 사건",
        "link": "http://serverdown.tistory.com/1384",
        "pubDate": "Fri, 29 Aug 2025 20:25:44 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1384#entry1384comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"225\" data-origin-height=\"225\"><span data-url=\"https://blog.kakaocdn.net/dn/cGxNoN/btsQd1VnWAl/xNnPOu10j1GuaRlsZyVrc0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cGxNoN/btsQd1VnWAl/xNnPOu10j1GuaRlsZyVrc0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cGxNoN/btsQd1VnWAl/xNnPOu10j1GuaRlsZyVrc0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcGxNoN%2FbtsQd1VnWAl%2FxNnPOu10j1GuaRlsZyVrc0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"225\" height=\"225\" data-origin-width=\"225\" data-origin-height=\"225\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">(뭐냐이거 고사리인가)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=udo-O5P6ne0\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=udo-O5P6ne0</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=udo-O5P6ne0\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/njbBP/hyZGaOr8A5/MPSk5ydmdfa5mvaRBW0npk/img.jpg?width=1280&amp;height=720&amp;face=530_146_1222_264,https://scrap.kakaocdn.net/dn/hCsE1/hyZGf94Juv/2J6dLJBmszYEcKRJJqJlq1/img.jpg?width=1280&amp;height=720&amp;face=530_146_1222_264\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[글로벌리포트] 보이차의 몰락 | 우편의 종말 | 베네수엘라 암호화폐 - 한경제 기자(한국경제신문\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/udo-O5P6ne0\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">보이차 1kg 에 5억가던게 현재 5천만원이며 살아날 가승성이 없어보입니다.</p>\n<p data-ke-size=\"size16\">보이차는 오래두면 숙성이라고 해서 가치가 올라가는 이상한 상품인데요</p>\n<p data-ke-size=\"size16\">이때문에 사람들이 사서 보관해두기도하고 뇌물로 주기도 해서&nbsp;</p>\n<p data-ke-size=\"size16\">부정부패 청산을 위해 여러가지 고치를 하다보니</p>\n<p data-ke-size=\"size16\">보이차 랑 마오타이 술 등의 가격이 맛이 가버렸군요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">모르는 사이에 맛탱이가 가는 사업들이 있었군요</p>",
        "contentSnippet": "(뭐냐이거 고사리인가)\n \n영상: https://www.youtube.com/watch?v=udo-O5P6ne0\n\n\n\n \n보이차 1kg 에 5억가던게 현재 5천만원이며 살아날 가승성이 없어보입니다.\n보이차는 오래두면 숙성이라고 해서 가치가 올라가는 이상한 상품인데요\n이때문에 사람들이 사서 보관해두기도하고 뇌물로 주기도 해서 \n부정부패 청산을 위해 여러가지 고치를 하다보니\n보이차 랑 마오타이 술 등의 가격이 맛이 가버렸군요.\n \n모르는 사이에 맛탱이가 가는 사업들이 있었군요",
        "guid": "http://serverdown.tistory.com/1384",
        "categories": [
          "유튜브",
          "버블",
          "보이차",
          "중국"
        ],
        "isoDate": "2025-08-29T11:25:44.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "유니티 옷감 머리 가슴 구현 / 매지카 클로우즈 애셋 / Magica Cloth",
        "link": "http://serverdown.tistory.com/1383",
        "pubDate": "Tue, 26 Aug 2025 20:59:15 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1383#entry1383comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"802\" data-origin-height=\"494\"><span data-url=\"https://blog.kakaocdn.net/dn/mbf6T/btsP564JOjY/aMF2BwYv7sdwPF6Fb21HJ0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/mbf6T/btsP564JOjY/aMF2BwYv7sdwPF6Fb21HJ0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/mbf6T/btsP564JOjY/aMF2BwYv7sdwPF6Fb21HJ0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fmbf6T%2FbtsP564JOjY%2FaMF2BwYv7sdwPF6Fb21HJ0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"802\" height=\"494\" data-origin-width=\"802\" data-origin-height=\"494\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">장점은 리깅 없이 구현할 수 있다는 것입니다.</p>\n<p data-ke-size=\"size16\">Boing 으로 해봤는데 Boing 은 뼈가 있어야합니다.</p>\n<p data-ke-size=\"size16\">불편하기도하고 옷감 퀄리티도 나지 않습니다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=Md-NCpkwt_Y\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=Md-NCpkwt_Y</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=Md-NCpkwt_Y\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bfpeVP/hyZC4IIetR/6d2XMHOPXBeQjeG0ykhO80/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/dzhnL4/hyZCYaGiQK/Nn4EhU6bCquRK1hbTPgxS0/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"[유니티] Magica Cloth 2 에셋 소개 및 사용 방법.\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/Md-NCpkwt_Y\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상 참고하시구요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"441\" data-origin-height=\"182\"><span data-url=\"https://blog.kakaocdn.net/dn/dQOmxk/btsP7A4MPCO/K4tKdIAnhkFmsGevUcwU90/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dQOmxk/btsP7A4MPCO/K4tKdIAnhkFmsGevUcwU90/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dQOmxk/btsP7A4MPCO/K4tKdIAnhkFmsGevUcwU90/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdQOmxk%2FbtsP7A4MPCO%2FK4tKdIAnhkFmsGevUcwU90%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"441\" height=\"182\" data-origin-width=\"441\" data-origin-height=\"182\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">저는 할인 할때 사둡니다.</p>\n<p data-ke-size=\"size16\">버튜버에도 쓸 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "장점은 리깅 없이 구현할 수 있다는 것입니다.\nBoing 으로 해봤는데 Boing 은 뼈가 있어야합니다.\n불편하기도하고 옷감 퀄리티도 나지 않습니다. \n \n영상: https://www.youtube.com/watch?v=Md-NCpkwt_Y\n\n\n\n \n영상 참고하시구요\n \n\n\n저는 할인 할때 사둡니다.\n버튜버에도 쓸 수 있습니다.",
        "guid": "http://serverdown.tistory.com/1383",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰",
          "매지카",
          "옷감",
          "유니티"
        ],
        "isoDate": "2025-08-26T11:59:15.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": [
      {
        "creator": "coolspeed",
        "title": "Cursor의 빠른 속도의 비밀",
        "link": "https://coolspeed.wordpress.com/2025/09/01/cursor%ec%9d%98-%eb%b9%a0%eb%a5%b8-%ec%86%8d%eb%8f%84%ec%9d%98-%eb%b9%84%eb%b0%80/",
        "pubDate": "Mon, 01 Sep 2025 14:32:03 +0000",
        "content:encodedSnippet": "AI 기술 스터디를 같이 하실 분들을 모집합니다.\n“AI 기술 스터디” 단톡방: https://open.kakao.com/o/gEb65cPh",
        "dc:creator": "coolspeed",
        "comments": "https://coolspeed.wordpress.com/2025/09/01/cursor%ec%9d%98-%eb%b9%a0%eb%a5%b8-%ec%86%8d%eb%8f%84%ec%9d%98-%eb%b9%84%eb%b0%80/#respond",
        "content": "Cursor 에디터가 어떻게 이토록 빠르게 작동하는지, 그 기술적 배경을 설명하는 강의영상입니다.",
        "contentSnippet": "Cursor 에디터가 어떻게 이토록 빠르게 작동하는지, 그 기술적 배경을 설명하는 강의영상입니다.",
        "guid": "http://coolspeed.wordpress.com/?p=3487",
        "categories": [
          "AI",
          "programming",
          "Cursor",
          "Vibe-coding"
        ],
        "isoDate": "2025-09-01T14:32:03.000Z"
      }
    ]
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "전통적인 비즈니스",
        "link": "https://jojoldu.tistory.com/843",
        "pubDate": "Sun, 31 Aug 2025 18:34:32 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/843#entry843comment",
        "content": "<p>2016년에 시작한 대치동 입시 전문 &#39;시대인재&#39; 가 누적 글로벌 가입 9,200만명, MAU 800만, 누적 투자 1,500억의 &#39;콴다&#39; 를 운영하는 매스프레소의 최대 주주가 되었다고 한다.</p>\n<ul>\n<li><a href=\"https://www.thebell.co.kr/free/content/ArticleView.asp?key=202508250943089640107331\">&#39;시대인재&#39; 하이컨시, 틱톡 제치고 &#39;매스프레소&#39; 최대주주로</a></li>\n</ul>\n<p>소프트웨어가 세상을 집어삼키는 시대가 왔고,<br>AI가 세상을 다 휩쓸것 같지만,<br>불황에는 전통 산업이 소프트웨어 기업을 집어삼키는게 훨씬 쉬워진 것 같다.</p>\n<p>누적 글로벌 가입 9,200만명, MAU 800만이면 정말 성공한 제품이다.<br>한국에서 시작한 회사 중 이정도의 성적표를 서비스가 몇개나 있을까 생각한다면 정말 대단한 회사이고 제품이다.<br>그럼에도 전통적인 입시 교육 회사가 쉽게 기술과 제품을 살 수 있게 됐다.  </p>\n<p>한국이라는 곳에서 제품을 만든다면 섹터에 따라 글로벌 제품의 방정식이 생각보다 큰 가치를 못낼 수도 있다는걸,<br>우리 제품이 속해있는 섹터가 어떻게 돈을 버는지 이해하는 것이 훨씬 더 중요하다는 걸 다시금 느낀다.  </p>\n<p>전통적인 사업을 하는 기업들의 비즈니스가 얼마나 강력한지도 다시금 깨닫고 말이다.</p>\n<p>혼자 자취할때 자주 보던 &#39;오늘의 집&#39;도 이제는 &#39;한샘&#39;과 &#39;이케아&#39;를 본다.<br>&#39;리디&#39; 페이퍼를 버전별로 사다가 이제는 다시 교보문고를 찾아간다.<br>인터넷 은행을 쓰던 중 이제는 좀 더 예금 이율이 높은 전통 은행에 예금을 넣는다.</p>\n<p>물론 넷플릭스, 쿠팡, 배민, 토스 증권은 여전히 내 일상을 바꾸었지만 다시 원래대로 돌아간 것들이 대단히 많다.<br>모두가 넷플릭스, 쿠팡, 배민, 토스와 같을 수 없다는 것도 알게 됐다.  </p>\n<p>스타트업이 세상을 바꾸는 혁신에 대해 함부로 무시해서 안되지만,<br>전통 기업이 갖고 있는 비즈니스 모델이 얼마나 단단한지도 함부로 봐선 안된다는 것도 알게 됐다.  </p>\n<p>사업이라는 건 정말 어렵고,<br>그걸 20년, 30년 계속 해오신 분들은 정말 대단하신 분들이라는걸 요즘 많이 느낀다.</p>",
        "contentSnippet": "2016년에 시작한 대치동 입시 전문 '시대인재' 가 누적 글로벌 가입 9,200만명, MAU 800만, 누적 투자 1,500억의 '콴다' 를 운영하는 매스프레소의 최대 주주가 되었다고 한다.\n'시대인재' 하이컨시, 틱톡 제치고 '매스프레소' 최대주주로\n소프트웨어가 세상을 집어삼키는 시대가 왔고,\nAI가 세상을 다 휩쓸것 같지만,\n불황에는 전통 산업이 소프트웨어 기업을 집어삼키는게 훨씬 쉬워진 것 같다.\n누적 글로벌 가입 9,200만명, MAU 800만이면 정말 성공한 제품이다.\n한국에서 시작한 회사 중 이정도의 성적표를 서비스가 몇개나 있을까 생각한다면 정말 대단한 회사이고 제품이다.\n그럼에도 전통적인 입시 교육 회사가 쉽게 기술과 제품을 살 수 있게 됐다.  \n한국이라는 곳에서 제품을 만든다면 섹터에 따라 글로벌 제품의 방정식이 생각보다 큰 가치를 못낼 수도 있다는걸,\n우리 제품이 속해있는 섹터가 어떻게 돈을 버는지 이해하는 것이 훨씬 더 중요하다는 걸 다시금 느낀다.  \n전통적인 사업을 하는 기업들의 비즈니스가 얼마나 강력한지도 다시금 깨닫고 말이다.\n혼자 자취할때 자주 보던 '오늘의 집'도 이제는 '한샘'과 '이케아'를 본다.\n'리디' 페이퍼를 버전별로 사다가 이제는 다시 교보문고를 찾아간다.\n인터넷 은행을 쓰던 중 이제는 좀 더 예금 이율이 높은 전통 은행에 예금을 넣는다.\n물론 넷플릭스, 쿠팡, 배민, 토스 증권은 여전히 내 일상을 바꾸었지만 다시 원래대로 돌아간 것들이 대단히 많다.\n모두가 넷플릭스, 쿠팡, 배민, 토스와 같을 수 없다는 것도 알게 됐다.  \n스타트업이 세상을 바꾸는 혁신에 대해 함부로 무시해서 안되지만,\n전통 기업이 갖고 있는 비즈니스 모델이 얼마나 단단한지도 함부로 봐선 안된다는 것도 알게 됐다.  \n사업이라는 건 정말 어렵고,\n그걸 20년, 30년 계속 해오신 분들은 정말 대단하신 분들이라는걸 요즘 많이 느낀다.",
        "guid": "https://jojoldu.tistory.com/843",
        "categories": [
          "생각정리",
          "매스프레소",
          "사업",
          "스타트업",
          "시대인재",
          "콴다"
        ],
        "isoDate": "2025-08-31T09:34:32.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "오픈챗 메시지들로부터 트렌딩 키워드 추출하기",
        "link": "https://techblog.lycorp.co.jp/ko/extracting-trending-keywords-from-openchat-messages",
        "pubDate": "Fri, 29 Aug 2025 02:00:00 GMT",
        "content": "들어가며안녕하세요. AI Services Lab 팀의 ML 엔지니어 박희웅입니다. 저희 팀에서는 LINE 오픈챗과 관련해 다양한 AI/ML 모델을 개발해 서빙하고 있는데요. 지난 ...",
        "contentSnippet": "들어가며안녕하세요. AI Services Lab 팀의 ML 엔지니어 박희웅입니다. 저희 팀에서는 LINE 오픈챗과 관련해 다양한 AI/ML 모델을 개발해 서빙하고 있는데요. 지난 ...",
        "guid": "https://techblog.lycorp.co.jp/ko/extracting-trending-keywords-from-openchat-messages",
        "isoDate": "2025-08-29T02:00:00.000Z"
      },
      {
        "title": "코드 품질 개선 기법 18편: 함수만 보고 관계는 보지 못한다",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-18",
        "pubDate": "Wed, 27 Aug 2025 02:00:00 GMT",
        "content": "이 글은 2024년 3월 21일에 일본어로 먼저 발행된 기사를 번역한 글입니다.LY Corporation은 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "contentSnippet": "이 글은 2024년 3월 21일에 일본어로 먼저 발행된 기사를 번역한 글입니다.LY Corporation은 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰고...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-18",
        "isoDate": "2025-08-27T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": [
      {
        "title": "@TransactionalEventListener 내부 동작 보기",
        "link": "https://velog.io/@sweet_sumin/TransactionalEventListener-%EB%82%B4%EB%B6%80-%EB%8F%99%EC%9E%91-%EB%B3%B4%EA%B8%B0",
        "pubDate": "Fri, 29 Aug 2025 05:32:00 GMT",
        "content": "<h2 id=\"📌-개요\">📌 개요</h2>\n<p>스프링을 사용하다 보면 이벤트 기반 아키텍처를 자주 접하게 된다. 그 중 많이 쓰는 것이 @TransactionalEventListener인데, 적용과 별개로 내부 동작을 파헤치는 곳이 없는 것 같아 아주 조금 확인해보는 시간을 가지려고 한다. </p>\n<p>@TransactionalEventListener는 Spring의 트랜잭션 동기화(Transaction Synchronization) 메커니즘을 활용해 이벤트 실행 시점을 트랜잭션의 상태와 결합합니다. 핵심적으로, 이벤트가 발행될 때 즉시 실행되지 않고, 트랜잭션의 특정 단계(커밋, 롤백 등)에 맞춰 실행되도록 &#39;예약&#39;하는 방식으로 동작한다.</p>\n<h2 id=\"📌-기본-개념\">📌 기본 개념</h2>\n<h3 id=\"기본-이벤트-리스너-vs-트랜잭셔널-이벤트-리스너\">기본 이벤트 리스너 vs 트랜잭셔널 이벤트 리스너</h3>\n<h4 id=\"기본-이벤트-리스너\">기본 이벤트 리스너</h4>\n<pre><code>@Component\nclass OrderEventHandler {\n\n    @EventListener\n    fun handle(event: PaidCompleteEvent) {\n        log.info(&quot;일반 이벤트 리스너 호출: ${event.orderUUId}&quot;)\n    }\n}</code></pre><ul>\n<li><p>ApplicationEventPublisher.publishEvent(event) 호출 시 즉시 실행</p>\n</li>\n<li><p>트랜잭션과 무관하게 동작</p>\n</li>\n</ul>\n<h4 id=\"트랜잭셔널-이벤트-리스너\">트랜잭셔널 이벤트 리스너</h4>\n<pre><code>@Component\nclass OrderEventHandler {\n\n    @TransactionalEventListener(phase = TransactionPhase.AFTER_COMMIT)\n    fun handle(event: PaidCompleteEvent) {\n        log.info(&quot;트랜잭션 커밋 이후 실행: ${event.orderUUId}&quot;)\n    }\n}</code></pre><ul>\n<li>트랜잭션 경계와 결합</li>\n<li>phase에 따라 실행 시점 제어 가능</li>\n</ul>\n<h3 id=\"실행-시점-transactionphase\">실행 시점 (TransactionPhase)</h3>\n<p>@TransactionalEventListener는 트랜잭션의 수명 주기에 맞춰 이벤트를 실행한다.</p>\n<table>\n<thead>\n<tr>\n<th>Phase</th>\n<th>When</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>BEFORE_COMMIT</code></td>\n<td>커밋 직전에 실행</td>\n</tr>\n<tr>\n<td><code>AFTER_COMMIT</code></td>\n<td>커밋 성공 직후 실행 (기본값)</td>\n</tr>\n<tr>\n<td><code>AFTER_ROLLBACK</code></td>\n<td>롤백 직후 실행</td>\n</tr>\n<tr>\n<td><code>AFTER_COMPLETION</code></td>\n<td>커밋/롤백 완료 후 실행 (성공/실패 무관)</td>\n</tr>\n</tbody></table>\n<h2 id=\"📌-내부-동작\">📌 내부 동작</h2>\n<h3 id=\"1-이벤트-발행\">1. 이벤트 발행</h3>\n<pre><code>eventPublisher.publishEvent(new PaidCompleteEvent(...));\n</code></pre><ul>\n<li>이 시점에서는 즉시 실행되지 않는다.</li>\n<li>대신, TransactionSynchronizationManager에 &quot;트랜잭션 끝날 때 실행할 콜백&quot;을 등록한다.</li>\n</ul>\n<h3 id=\"2-transactionaleventlistener의-특별한-처리\">2. @TransactionalEventListener의 특별한 처리</h3>\n<p>스프링 부트가 실행될 때, TransactionalEventListenerFactory라는 BeanPostProcessor가 등록된다.\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/55261860-5215-47f5-a356-ae50d2f0f79c/image.png\" alt=\"\"></p>\n<p>이 Factory는 @TransactionalEventListener가 붙은 메서드를 스캔한다. 해당 메서드를 TransactionalApplicationListener라는 특별한 리스너 객체로 감싼다. 즉, &quot;이 메서드는 단순한 이벤트 리스너가 아니라, 트랜잭션 경계와 관련된 특별한 리스너&quot;라고 스프링에 알려주는 장치이다.\n<strong>역할</strong>: @TransactionalEventListener가 붙은 메서드를 스프링 이벤트 리스너로 등록하는 팩토리</p>\n<blockquote>\n<p>💡 주요 메서드</p>\n</blockquote>\n<ul>\n<li><strong>supportsMethod : 특정 메서드가 이벤트 리스너로 등록될 수 있는지 판단</strong></li>\n<li><strong>createApplicationListener : 실제 이벤트를 처리할 ApplicationListener 인스턴스를 생성</strong><ul>\n<li><ol>\n<li>일반 이벤트 리스너는 ApplicationListenerMethodAdapter를 쓰지만,\n@TransactionalEventListener는 TransactionalApplicationListenerMethodAdapter를 쓴다.</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>이 어댑터가 트랜잭션과 연동되어 이벤트 실행 시점을 BEFORE_COMMIT, AFTER_COMMIT, AFTER_ROLLBACK, AFTER_COMPLETION으로 맞춰 준다.</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-메서드와-이벤트를-연결하는-adapter--transactionalapplicationlistenermethodadapter\">3. 메서드와 이벤트를 연결하는 Adapter : TransactionalApplicationListenerMethodAdapter</h3>\n<ul>\n<li>역할 : @TransactionalEventListener 메서드를 감싸서 트랜잭션 라이프사이클에 맞게 실행 시점을 조정하는 어댑터</li>\n</ul>\n<ol>\n<li>@TransactionalEventListener가 붙은 메서드를 감싸서 <strong>트랜잭션 동기화 매니저(TransactionSynchronizationManager)</strong>에 등록</li>\n<li>지정된 트랜잭션 Phase(BEFORE_COMMIT, AFTER_COMMIT, AFTER_ROLLBACK, AFTER_COMPLETION)에 이벤트 실행 시점을 맞춤</li>\n</ol>\n<p>내부에 여러 메서드가 있지만 내가 생각했을때 onApplicationEvent 메서드가 핵심인것 같다. \n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/3ed54c99-75b2-4cd7-861b-d7e72c9b88d7/image.png\" alt=\"\"></p>\n<h4 id=\"트랜잭션이-활성화되어-있을-때\">트랜잭션이 활성화되어 있을 때</h4>\n<ul>\n<li><p><strong>TransactionalApplicationListenerSynchronization.register(...) 호출 시 이벤트를 즉시 실행하지 않고 예약한다.</strong></p>\n</li>\n<li><p>예약된 이벤트는 트랜잭션이 커밋되거나 롤백될 때 실행된다.</p>\n</li>\n<li><p>내부적으로 TransactionSynchronizationManager에 등록되어 트랜잭션과 이벤트 실행을 동기화한다.</p>\n</li>\n</ul>\n<h4 id=\"트랜잭션이-없지만-fallback-실행이-허용된-경우\">트랜잭션이 없지만 fallback 실행이 허용된 경우</h4>\n<ul>\n<li>isDefaultExecution()이 true이면, 트랜잭션 없이도 이벤트를 즉시 실행한다.</li>\n<li>단, Phase가 AFTER_ROLLBACK인 경우 경고 로그를 남긴다.<h4 id=\"트랜잭션도-없고-fallback도-허용되지-않은-경우\">트랜잭션도 없고 fallback도 허용되지 않은 경우</h4>\n</li>\n<li>이벤트는 무시되고 실행되지 않는다.</li>\n</ul>\n<p>이 메서드 덕분에 트랜잭션 커밋 이후에만 실행해야 하는 로직과, 트랜잭션과 상관없이 바로 실행해도 되는 로직을 명확히 구분할 수 있는 것 같다.</p>\n<h4 id=\"역할-정리\">역할 정리</h4>\n<p>너무 이해하기 어렵다. 역할을 단순히 정리를 하자면</p>\n<ul>\n<li>트랜잭션 활성 여부 판단</li>\n<li>이벤트를 즉시 실행할지, 등록할지, 무시할지 결정</li>\n<li>등록이 성공하면 실제 이벤트 실행은 Synchronization에게 위임</li>\n</ul>\n<h3 id=\"4-트랜잭션-시점에-맞춰-이벤트-실행을-담당--transactionalapplicationlistenersynchronization\">4. 트랜잭션 시점에 맞춰 이벤트 실행을 담당 : TransactionalApplicationListenerSynchronization</h3>\n<h4 id=\"이벤트-실행-자체와-콜백-관리를-책임지는-핵심-메서드--processeventwithcallbacks\">이벤트 실행 자체와 콜백 관리를 책임지는 핵심 메서드:  processEventWithCallbacks()</h4>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/8e57ee6e-bb30-4ff0-9c93-adb767325e2d/image.png\" alt=\"\"></p>\n<ul>\n<li>역할: 트랜잭션 시점에 이벤트를 실제로 실행</li>\n<li>콜백 처리: 이벤트 실행 전(preProcessEvent), 후(postProcessEvent) 콜백 지원</li>\n<li>예외 처리: 이벤트 실행 중 예외 발생 시 postProcessEvent에 예외 전달</li>\n</ul>\n<h4 id=\"이벤트-실행-메서드--beforecommit-aftercompletion\">이벤트 실행 메서드 : beforeCommit, afterCompletion</h4>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/170e73e4-b9ea-49ae-8b3f-0f9f42e1af0e/image.png\" alt=\"\"></p>\n<ul>\n<li>트랜잭션 커밋 전 : beforeCommit (TransactionPhase.BEFORE_COMMIT일 때만)</li>\n<li>트랜잭션이 완료된 후 : afterCompletion</li>\n</ul>\n<h4 id=\"클래스-역할-정리\">클래스 역할 정리</h4>\n<ul>\n<li>이벤트를 트랜잭션 Commit/Rollback 시점에 실행</li>\n<li>BEFORE_COMMIT, AFTER_COMMIT, AFTER_ROLLBACK, AFTER_COMPLETION 모두 처리 가능</li>\n<li>이벤트 실행 전후로 콜백(pre/post) 처리 가능</li>\n<li>트랜잭션이 없으면 fallbackExecution 옵션에 따라 즉시 실행하거나 무시</li>\n</ul>\n<h2 id=\"📌-정리\">📌 정리</h2>\n<ol>\n<li><p><strong>이벤트 발행</strong>: 서비스 계층에서 ApplicationEventPublisher.publishEvent()가 호출</p>\n</li>\n<li><p><strong>어댑터 실행</strong>: TransactionalApplicationListenerMethodAdapter의 onApplicationEvent 메서드가 호출.</p>\n</li>\n<li><p><strong>트랜잭션 동기화 등록</strong>: 현재 활성화된 트랜잭션이 있으면, 이벤트와 그 실행 정보를 담은 TransactionalApplicationListenerSynchronization 객체를 TransactionSynchronizationManager에 등록.</p>\n</li>\n<li><p><strong>트랜잭션 종료</strong>: 트랜잭션이 커밋되거나 롤백되면, TransactionSynchronizationManager는 등록된 TransactionalApplicationListenerSynchronization 객체의 콜백 메서드(beforeCommit 또는 afterCompletion)를 호출.</p>\n</li>\n<li><p><strong>이벤트 실행</strong>: 콜백 메서드는 @TransactionalEventListener에 지정된 TransactionPhase에 따라 예약된 이벤트 핸들러 메서드를 실제로 호출.</p>\n</li>\n</ol>\n",
        "contentSnippet": "📌 개요\n스프링을 사용하다 보면 이벤트 기반 아키텍처를 자주 접하게 된다. 그 중 많이 쓰는 것이 @TransactionalEventListener인데, 적용과 별개로 내부 동작을 파헤치는 곳이 없는 것 같아 아주 조금 확인해보는 시간을 가지려고 한다. \n@TransactionalEventListener는 Spring의 트랜잭션 동기화(Transaction Synchronization) 메커니즘을 활용해 이벤트 실행 시점을 트랜잭션의 상태와 결합합니다. 핵심적으로, 이벤트가 발행될 때 즉시 실행되지 않고, 트랜잭션의 특정 단계(커밋, 롤백 등)에 맞춰 실행되도록 '예약'하는 방식으로 동작한다.\n📌 기본 개념\n기본 이벤트 리스너 vs 트랜잭셔널 이벤트 리스너\n기본 이벤트 리스너\n@Component\nclass OrderEventHandler {\n\n    @EventListener\n    fun handle(event: PaidCompleteEvent) {\n        log.info(\"일반 이벤트 리스너 호출: ${event.orderUUId}\")\n    }\n}\n\n\nApplicationEventPublisher.publishEvent(event) 호출 시 즉시 실행\n트랜잭션과 무관하게 동작\n트랜잭셔널 이벤트 리스너\n@Component\nclass OrderEventHandler {\n\n    @TransactionalEventListener(phase = TransactionPhase.AFTER_COMMIT)\n    fun handle(event: PaidCompleteEvent) {\n        log.info(\"트랜잭션 커밋 이후 실행: ${event.orderUUId}\")\n    }\n}\n\n트랜잭션 경계와 결합\nphase에 따라 실행 시점 제어 가능\n실행 시점 (TransactionPhase)\n@TransactionalEventListener는 트랜잭션의 수명 주기에 맞춰 이벤트를 실행한다.\nPhase\nWhen\n\n\n\nBEFORE_COMMIT\n커밋 직전에 실행\n\n\nAFTER_COMMIT\n커밋 성공 직후 실행 (기본값)\n\n\nAFTER_ROLLBACK\n롤백 직후 실행\n\n\nAFTER_COMPLETION\n커밋/롤백 완료 후 실행 (성공/실패 무관)\n\n\n📌 내부 동작\n1. 이벤트 발행\neventPublisher.publishEvent(new PaidCompleteEvent(...));\n\n\n이 시점에서는 즉시 실행되지 않는다.\n대신, TransactionSynchronizationManager에 \"트랜잭션 끝날 때 실행할 콜백\"을 등록한다.\n2. @TransactionalEventListener의 특별한 처리\n스프링 부트가 실행될 때, TransactionalEventListenerFactory라는 BeanPostProcessor가 등록된다.\n\n이 Factory는 @TransactionalEventListener가 붙은 메서드를 스캔한다. 해당 메서드를 TransactionalApplicationListener라는 특별한 리스너 객체로 감싼다. 즉, \"이 메서드는 단순한 이벤트 리스너가 아니라, 트랜잭션 경계와 관련된 특별한 리스너\"라고 스프링에 알려주는 장치이다.\n역할: @TransactionalEventListener가 붙은 메서드를 스프링 이벤트 리스너로 등록하는 팩토리\n💡 주요 메서드\nsupportsMethod : 특정 메서드가 이벤트 리스너로 등록될 수 있는지 판단\ncreateApplicationListener : 실제 이벤트를 처리할 ApplicationListener 인스턴스를 생성\n\n일반 이벤트 리스너는 ApplicationListenerMethodAdapter를 쓰지만,\n@TransactionalEventListener는 TransactionalApplicationListenerMethodAdapter를 쓴다.\n\n이 어댑터가 트랜잭션과 연동되어 이벤트 실행 시점을 BEFORE_COMMIT, AFTER_COMMIT, AFTER_ROLLBACK, AFTER_COMPLETION으로 맞춰 준다.\n3. 메서드와 이벤트를 연결하는 Adapter : TransactionalApplicationListenerMethodAdapter\n역할 : @TransactionalEventListener 메서드를 감싸서 트랜잭션 라이프사이클에 맞게 실행 시점을 조정하는 어댑터\n@TransactionalEventListener가 붙은 메서드를 감싸서 트랜잭션 동기화 매니저(TransactionSynchronizationManager)에 등록\n지정된 트랜잭션 Phase(BEFORE_COMMIT, AFTER_COMMIT, AFTER_ROLLBACK, AFTER_COMPLETION)에 이벤트 실행 시점을 맞춤\n내부에 여러 메서드가 있지만 내가 생각했을때 onApplicationEvent 메서드가 핵심인것 같다. \n\n트랜잭션이 활성화되어 있을 때\nTransactionalApplicationListenerSynchronization.register(...) 호출 시 이벤트를 즉시 실행하지 않고 예약한다.\n예약된 이벤트는 트랜잭션이 커밋되거나 롤백될 때 실행된다.\n내부적으로 TransactionSynchronizationManager에 등록되어 트랜잭션과 이벤트 실행을 동기화한다.\n트랜잭션이 없지만 fallback 실행이 허용된 경우\nisDefaultExecution()이 true이면, 트랜잭션 없이도 이벤트를 즉시 실행한다.\n단, Phase가 AFTER_ROLLBACK인 경우 경고 로그를 남긴다.\n트랜잭션도 없고 fallback도 허용되지 않은 경우\n이벤트는 무시되고 실행되지 않는다.\n이 메서드 덕분에 트랜잭션 커밋 이후에만 실행해야 하는 로직과, 트랜잭션과 상관없이 바로 실행해도 되는 로직을 명확히 구분할 수 있는 것 같다.\n역할 정리\n너무 이해하기 어렵다. 역할을 단순히 정리를 하자면\n트랜잭션 활성 여부 판단\n이벤트를 즉시 실행할지, 등록할지, 무시할지 결정\n등록이 성공하면 실제 이벤트 실행은 Synchronization에게 위임\n4. 트랜잭션 시점에 맞춰 이벤트 실행을 담당 : TransactionalApplicationListenerSynchronization\n이벤트 실행 자체와 콜백 관리를 책임지는 핵심 메서드:  processEventWithCallbacks()\n\n역할: 트랜잭션 시점에 이벤트를 실제로 실행\n콜백 처리: 이벤트 실행 전(preProcessEvent), 후(postProcessEvent) 콜백 지원\n예외 처리: 이벤트 실행 중 예외 발생 시 postProcessEvent에 예외 전달\n이벤트 실행 메서드 : beforeCommit, afterCompletion\n\n트랜잭션 커밋 전 : beforeCommit (TransactionPhase.BEFORE_COMMIT일 때만)\n트랜잭션이 완료된 후 : afterCompletion\n클래스 역할 정리\n이벤트를 트랜잭션 Commit/Rollback 시점에 실행\nBEFORE_COMMIT, AFTER_COMMIT, AFTER_ROLLBACK, AFTER_COMPLETION 모두 처리 가능\n이벤트 실행 전후로 콜백(pre/post) 처리 가능\n트랜잭션이 없으면 fallbackExecution 옵션에 따라 즉시 실행하거나 무시\n📌 정리\n이벤트 발행: 서비스 계층에서 ApplicationEventPublisher.publishEvent()가 호출\n어댑터 실행: TransactionalApplicationListenerMethodAdapter의 onApplicationEvent 메서드가 호출.\n트랜잭션 동기화 등록: 현재 활성화된 트랜잭션이 있으면, 이벤트와 그 실행 정보를 담은 TransactionalApplicationListenerSynchronization 객체를 TransactionSynchronizationManager에 등록.\n트랜잭션 종료: 트랜잭션이 커밋되거나 롤백되면, TransactionSynchronizationManager는 등록된 TransactionalApplicationListenerSynchronization 객체의 콜백 메서드(beforeCommit 또는 afterCompletion)를 호출.\n이벤트 실행: 콜백 메서드는 @TransactionalEventListener에 지정된 TransactionPhase에 따라 예약된 이벤트 핸들러 메서드를 실제로 호출.",
        "guid": "https://velog.io/@sweet_sumin/TransactionalEventListener-%EB%82%B4%EB%B6%80-%EB%8F%99%EC%9E%91-%EB%B3%B4%EA%B8%B0",
        "isoDate": "2025-08-29T05:32:00.000Z"
      }
    ]
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "집착이 유니콘을 만든다",
        "link": "https://www.thestartupbible.com/2025/09/only-obsession-will-make-unicorn.html",
        "pubDate": "Sun, 31 Aug 2025 21:26:00 +0000",
        "content:encodedSnippet": "나를 만난 전문직 – 교수, 의사, 변호사, 연예인 등 – 파트타임 창업가들은 잘 알 텐데, 나는 이런 분들한테 투자하지 않는다. 최근 몇 개월 동안 이런 회사들을 몇 개 만났는데, 아직도 이렇게 여러 가지 일을 동시에 완벽하게 할 수 있다고 생각하는 분들이 많다는 것에 좀 놀랐다.\n창업이 과거에 비해 더 쉬워졌고, 더 저렴해졌고, 요샌 일부 일을 AI가 대신해 주지만, 일단 스타트업은 남들보다 더 짧은 시간에 저 많은 성장을 압축해서 만들어야 한다. 그리고 이렇게 하기 위해선 기본적으로 더 많이, 더 열심히 일해야 한다. 그리고 집착해야 한다. 제품에 집착해야 하고, 고객에게 집착해야 하고, 펀드레이징에 집착해야 하고, 좋은 사람을 회사에 채용하는 것에 집착해야 한다. 그리고 이런 집착은 기본적으로 사업에 올인하지 않으면 생길 수가 없다. 취미생활로 스타트업을 하는 분들에게 집착은 생길 수가 없다.\n풀타임으로 학교에서 학생들을 가르치는 교수들이 스타트업을 창업했다면, 그리고 이분들이 대표이사라도, 이분들에겐 여전히 교직생활이 풀타임 업무이다. 스타트업은 그냥 투잡 중 하나의 부업이자 취미생활이다. 왜냐하면, 이분의 우선순위는 항상 학교가 될 것이기 때문이다. 학교에 소속되어 있고, 여기서 주 수입이 나오기 때문에, 회사 일을 하다 가도 갑자기 학교에서 부르면 그쪽으로 뛰어가야 한다.\n풀타임으로 병원에서 일하는 의사가 스타트업을 창업했다면, 이분에게도 의사가 풀타임 업무이고 스타트업은 부업이자 취미생활이다.\n풀타임으로 방송 생활을 하거나 연기를 하는 연예인이 스타트업을 창업했다면, 이분에게도 연예인이 풀타임 업무이고 스타트업은 부업이자 취미생활이다.\n나의 이 발언을 보고 발끈하는 분들이 분명히 있을 것이다. 실제 대면 미팅에서도 내가 “그럼 사업은 누가 하나요?”라고 물어보면 흥분하시는 분들이 상당히 많다. 대부분 돌아오는 답변은 거의 비슷하다. 교수님들은 학교에서 가르치는 과목이 별로 없어서 나머지 시간은 전부 다 회사에서 보낸다고 하고, 의사들은 병원이 본인 없어도 잘 돌아가기 때문에 대부분의 시간은 스타트업하는 데 보낸다고 하고, 연예인들은 연예 활동을 계속하는 것이 회사 일에 큰 도움이 된다고 한다. 그리고 그 누구도 이 사업에 언젠가는 완전히 올인 하겠다는 계획을 하고 있지 않다. 계속 본인들은 파트타임이고, 대표이사 또는 공동창업가라서 회사의 큰 결정에 관여할 것이지만, 결국 실제 사업은 다른 코파운더나 다른 직원들이 할 것이라고 한다. 실은, 그렇게 말하진 않지만, 결국 말을 들어보면 이런 의미라고 나는 해석한다.\n이런 분들이 운영하는 회사는 좋은 성과를 못 만드나? 꼭 그런 건 아니다. 우리 주변에 교수, 의사, 연예인, 변호사가 창업한 회사가 잘 되는 경우를 찾아보면 그 사례가 적지 않을 것이다. 하지만, 이런 회사들이 유니콘이 되는 경우는 거의 없다. 왜냐하면 유니콘을 만들기 위해선 사업에 집착해야 하고, 집착이란 1년 365일, 하루 24시간 사업에 대해서만 생각해야지만 생기는 것이기 때문이다.\nLA에 본사를 둔 The Honest Company라는 스타트업이 있다. 이 회사의 공동창업가는 배우 제시카 알바인데, 연예인들이 이분 같이 사업에 집착할 수 있다면 어쩌면 유니콘을 만들 수 있을 것이다. 나도 우리 포트폴리오사와의 협력 때문에 알바씨를 두 번 직접 만나본 적이 있다. 내가 듣기론 이분은 회사를 하기 위해서 모든 연기 활동을 잠정적으로 중단했고, 다른 직원분들에게 물어보니 매일 회사에 출근해서 밤늦게까지 일한다고 들었다. 그리고 회사의 모든 미팅에 참석하고, 모든 투자자 미팅에도 참석했다. 우리가 했던 미팅에도 전부 다 들어왔고, 준비를 잘하고 들어와서 좋은 대화를 할 수 있었다. 이 정도면 가능하다.\n회사에 매일 출근하지 않고, 회사의 모든 미팅에 참석하지 않고, 회사에 대해서 매일 24시간 고민하고 생각하지 않는다면, 집착이 생길 수 없고, 집착하지 않으면 유니콘은 만들 수가 없다. 현재 풀타임 직업/직책의 유명세, 지위, 네트워크가 어려운 미팅을 몇 번 성사시킬 순 있지만, 유니콘을 만드는 것은 유명세나 지위가 아니라 집착이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/09/only-obsession-will-make-unicorn.html#respond",
        "content": "나를 만난 전문직 – 교수, 의사, 변호사, 연예인 등 – 파트타임 창업가들은 잘 알 텐데, 나는 이런 분들한테 투자하지 않는다. 최근 몇 개월 동안 이런 회사들을 몇 개 만났는데, 아직도 이렇게 여러 가지 일을 동시에 완벽하게 할 수 있다고 생각하는 분들이 많다는 것에 좀 놀랐다. 창업이 과거에 비해 더 쉬워졌고, 더 저렴해졌고, 요샌 일부 일을(...)",
        "contentSnippet": "나를 만난 전문직 – 교수, 의사, 변호사, 연예인 등 – 파트타임 창업가들은 잘 알 텐데, 나는 이런 분들한테 투자하지 않는다. 최근 몇 개월 동안 이런 회사들을 몇 개 만났는데, 아직도 이렇게 여러 가지 일을 동시에 완벽하게 할 수 있다고 생각하는 분들이 많다는 것에 좀 놀랐다. 창업이 과거에 비해 더 쉬워졌고, 더 저렴해졌고, 요샌 일부 일을(...)",
        "guid": "https://www.thestartupbible.com/?p=9545",
        "categories": [
          "Uncategorized",
          "FoundersAtWork",
          "people",
          "unicorn",
          "vc"
        ],
        "isoDate": "2025-08-31T21:26:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "AI의 독",
        "link": "https://www.thestartupbible.com/2025/08/be-careful-what-you-ask-for-with-ai.html",
        "pubDate": "Wed, 27 Aug 2025 21:26:00 +0000",
        "content:encodedSnippet": "전에 내가 AI가 중요한 게 아니라 비즈니스가 더 중요하다는 글을 썼는데, 그 내용의 연장선상의 글이다. 요새 직업상 또는 비직업상 만나는 사람들이, 정도의 차이는 있지만, 모두 다 AI 이야기를 한다. 특히나 창업가들은 AI라는 이 거대한 tech 물결을 어떻게 더 잘 타서 남들보다 더 빨리, 그리고 더 멀리 갈 수 있을지 매일 고민하면서 부서와 업무와는 상관없이 전사적 AI 도입을 외치고 있다.\n실은, 기술의 변화에 민감하게 반응하고, 남들보다 빨리 이런 기술을 도입하는 건 여러 가지 면에서 바람직한 현상이다. 국가적으로도 한국은 AI 도입에 꽤 잘 대응하고 있다고 생각한다. 하지만, 모든 현상에는 양면이 있는데 AI에도 어두운 면이 있고, 최근에 만난 많은 창업가들이 AI의 독에 물렸다는 생각을 떨칠 수가 없다.\n많은 창업가들이 AI가 모든 것을 해결해 줄 것으로 생각한다. 이런 분들을 만나 보면 사람도 채용할 필요가 없고, 코딩도 배울 필요가 없고, 콘텐츠도 깊게 고민해서 만들 필요가 없고, 고객이나 협력업체에 보낼 이메일도 고민할 필요가 없다고 한다. 모든 걸 AI로 완벽하게 해결할 수 있다고 하는데, 나는 이와는 반대로 생각한다. 업무의 모든 면에서 우리가 기계의 도움을 받을 수 있지만, 결국 마지막 5%는 – 우리가 하는 일을 완성하고, 고객이 기꺼이 돈을 지불하는 게 이 마지막 5%이다 – 사람이 직접 해야 한다는 게 내 생각이다. 많은 전문가들이 초지능의 시대가 멀지 않았다고 하지만, 나는 인간은 초지능 그 이상의 지능, 창의력, 그리고 여기서 파생되는 응용력을 가졌고, 결국 누구나 다 AI를 활용해서 누구나 다 비슷한 걸 만들 수 있는 이 시대에 이길 수 있는 제품, 서비스 그리고 사업을 만들 수 있는 건 이런 인간의 능력이라고 생각한다.\n어떤 창업가는 지금까지 외부 투자 없이 연간 수십억 원의 매출을 만들었고, 영업이익까지 발생하는 좋은 브랜드를 만들었다. 처음으로 펀드레이징을 하는데, 투자받으면 AI에 올인해서 고객의 데이터를 축적한 후, AI를 활용해서 초개인화된 브랜드를 판매하겠다고 한다. 물론, 이 전략은 교과서적으론 매우 이상적인 방향으로 회사를 성장시킬 수 있다. 그런데 나는 이분에게 지금까지 특별하게 데이터를 활용하지도 않고 기술을 깊게 적용하지도 않고 잘했고, 지금까지 했던 그 방식으로 연 매출 천억 원 까지 할 수 있는데 굳이 지금, 이 시점에 기존의 방법을 버리고, 회사가 잘하지도 못하는 AI에 올인하는 180도 다른 전략을 도입하는 이유를 물어봤다.\n특별한 이유는 없었다. 그냥 너도나도 다 AI 이야기를 하고 있고, 주변에 사업하는 다른 창업가분들에게 물어보니 모두 다 AI가 미래라는 말을 하고, 본인이 봤을 때도 데이터를 활용해서 AI 에이전트를 통한 한 초개인화 된 전략이야말로 수조 원짜리 회사를 만들 수 있는 방법이기 때문이라고 했다. 그런데 이런 이유는 그 어떤 사업에 갖다 붙여도 말이 되는 너무나 말로 하기엔 쉽지만, 실행하기엔 정말 어려운 전략이다.\n이미 몇 회사들은 기존에 하던 방식으로 계속 사업을 해도 충분히 잘할 수 있고, 현재 매출의 10배까지 할 수 있음에도, 갑자기 회사의 방향을 AI에 올인 했다가 후회하고 있다. 멀쩡하게 잘 되던 사업을 버리고 AI에 올인 했는데, 그사이에 다른 경쟁사들이 이 회사가 원래 잘하고 있던 분야에서 시장을 야금야금 다 뺏어갔다. 그리고 AI에 몰방하는 게 우리 사업에 맞는 전략이 아니라는 걸 깨달았을 땐, 이미 너무 늦어버린 것이다.\n실은, 이런 회사들이 이렇게 방향을 급하게 바꾸게 된 배경엔 투자자들도 한몫했다. 투자하는 조건으로 무조건 AI native 회사로 체질 개선하는 걸 요구했고, 계속 AI 뽐뿌질을 했기 때문이다. \n이 글을 읽고 내가 AI를 과소평가하거나 무시한다고 생각하면 오산이다. 우리 사업의 본질과 비즈니스 모델에 대해 명확하게 이해하고, 우리 고객은 왜 우리 제품을 구매하는지 명확하게 판단한 후에 과연 우리는 AI를 어떻게 활용하면 현재 사업을 10배, 100배 이상 키울 수 있는지에 대해 진지하게 고민한 후에 행동으로 옮겼으면 하는 게 내가 말하고자 하는 포인트이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/08/be-careful-what-you-ask-for-with-ai.html#comments",
        "content": "전에 내가 AI가 중요한 게 아니라 비즈니스가 더 중요하다는 글을 썼는데, 그 내용의 연장선상의 글이다. 요새 직업상 또는 비직업상 만나는 사람들이, 정도의 차이는 있지만, 모두 다 AI 이야기를 한다. 특히나 창업가들은 AI라는 이 거대한 tech 물결을 어떻게 더 잘 타서 남들보다 더 빨리, 그리고 더 멀리 갈 수 있을지 매일 고민하면서 부서와 업무와는 상관없이 전사적(...)",
        "contentSnippet": "전에 내가 AI가 중요한 게 아니라 비즈니스가 더 중요하다는 글을 썼는데, 그 내용의 연장선상의 글이다. 요새 직업상 또는 비직업상 만나는 사람들이, 정도의 차이는 있지만, 모두 다 AI 이야기를 한다. 특히나 창업가들은 AI라는 이 거대한 tech 물결을 어떻게 더 잘 타서 남들보다 더 빨리, 그리고 더 멀리 갈 수 있을지 매일 고민하면서 부서와 업무와는 상관없이 전사적(...)",
        "guid": "https://www.thestartupbible.com/?p=9542",
        "categories": [
          "Uncategorized",
          "ai",
          "FoundersAtWork",
          "strategy",
          "technology",
          "vc"
        ],
        "isoDate": "2025-08-27T21:26:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "토스, 첫 기술 경진대회 ‘NEXT ML 챌린지’ 참가자 모집",
        "link": "https://toss.im/tossfeed/article/nextml",
        "pubDate": "Sun, 31 Aug 2025 22:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}‘광고 클릭 예측(CTR) 모델 개발’ 주제로 10월 13일 오전 10시까지 참가 가능\n총 상금 1,000만 원, 본선 진출 30팀은 토스 채용 시 서류 전형 면제 혜택\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 ‘NEXT ML 챌린지’ 참가자를 9월 1일 오전 10시부터 10월 13일 오전 10시까지 모집한다고 1일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\nNEXT ML 챌린지는 토스가 주최하는 첫 기술 경진대회다. 토스는 올해부터 ML(Machine Learning, ML) 엔지니어들이 현업에서 풀고 있는 기술 문제를 공개하고, 우수 인재 발굴에 나선다. 특히 올해 12월 중순부터 토스에 입사할 수 있고, ML 개발에 관심이 있다면 누구나 대회에 참가할 수 있다.\n이번 챌린지 주제는 ‘광고 클릭 예측(Click-Through Rate, CTR) 모델 개발’이다. 실제 토스 앱 내 광고 데이터를 활용해 가상의 사용자가 어떤 광고를 클릭할 것인지에 대한 확률을 빠르고 정확하게 예상하는 ML 알고리즘을 만드는 것이 대회의 핵심이다.\n대회는 예선과 본선 두 단계로 진행된다. 예선은 9월 8일 오전 10시부터 10월 13일 오전 10시까지 열리며, 참가자들이 만든 모델 성능을 점수화해 순위를 매기는 ‘리더보드’ 방식으로 평가한다. 이후 상위 30팀이 본선에 진출해 10월 17일까지 5일간 모델 개발 보고서 제출과 코드 검증을 진행한다. 토스는 이를 심사해 11월 3일 최종 수상자를 발표할 예정이다.\n상금은 총 1,000만 원 규모다. 1위부터 3위에게 각각 500만 원, 300만 원, 200만 원을 지급한다. 또한 본선에 진출한 30팀에는 토스 채용 지원 시 서류 평가가 면제되는 혜택이 주어진다. 다만 지원자의 재학 또는 재직 상태에 따라 지원 가능한 공고는 상이하며, 자세한 내용은 대회 주관사 데이콘의 공식 홈페이지에서 확인할 수 있다.\n토스 관계자는 “토스 광고는 ML 기술을 통해 예측의 정확도와 의사결정의 수준을 높여가고 있다”며 “NEXT ML 챌린지는 단순한 기술 경연을 넘어, 창의적 해법과 미래의 혁신을 만들어가는 도전의 장이 될 것”이라고 말했다.",
        "content": "‘광고 클릭 예측(CTR) 모델 개발’ 주제로 10월 13일 오전 10시까지 참가 가능",
        "contentSnippet": "‘광고 클릭 예측(CTR) 모델 개발’ 주제로 10월 13일 오전 10시까지 참가 가능",
        "guid": "https://toss.im/tossfeed/article/nextml",
        "isoDate": "2025-08-31T22:00:00.000Z"
      },
      {
        "title": "토스, ‘2025 광주디자인비엔날레’ 참가",
        "link": "https://toss.im/tossfeed/article/2025universaldesgin",
        "pubDate": "Sat, 30 Aug 2025 23:36:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}8월 30일부터 ‘모두의 세상, 각자의 도구’로 체험 전시 부스 개최… 금융 플랫폼 단독 참가\n접근성 전담 조직 ‘유니버설 디자인팀’ 통해 금융 접근성 향상 위한 기술 문화적 노력 지속\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 8월 30일부터 11월 2일까지 광주광역시 북구에서 열리는 ‘2025 광주디자인비엔날레’ 전시에 참여한다고 31일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n올해로 11회를 맞은 광주디자인비엔날레는 세계 최초의 디자인 비엔날레로, 디자인과 문화를 아우르는 국제적 예술 축제로 자리매김해 왔다. 이번 비엔날레는 ‘너라는 세계: 디자인은 인간을 어떻게 끌어안는가’를 주제로 포용적인 사회를 만드는 디자인의 역할을 다양한 체험 전시로 풀어낸다.\n토스는 이번 전시에 유일한 금융 플랫폼으로 참여하며, 토스가 추구해 온 ‘누구에게나 평등한 금융’ 철학을 포용 디자인 관점에서 재해석한 전시 공간을 선보인다. 토스가 운영하는 ‘모두의 세계, 각자의 도구’ 부스는 광주비엔날레전시관 2전시관에서 만나볼 수 있다.\n\n부스에서는 교사, 화가, 수영 선수 등 다양한 직업을 가진 시각장애인 5명의 인터뷰 영상이 재생되며,  그들이 어떻게 도구를 통해 세상과 연결되고 전문성을 발휘하는지를 보여준다. 방문객은 영상에 나온 실제 도구를 보면서, 자신만의 방식으로 세상을 탐색하며 살아가는 주체적인 존재와 간접적으로 연결되는 경험을 할 수 있다.\n\n전시를 기획한 유니버설 디자인팀(Universal Design Team)은 장애, 연령 등 개인의 특성을 넘어 모두에게 열린 토스의 사용 화면(UI, User Interface)을 만드는 조직이다. 특히, 화면 정보를 소리내 읽어주는 기술 도구 ‘스크린리더’로 시각장애인과 비장애인이 동일한 금융 서비스를 이용할 수 있도록 포용적인 사용자 경험(UX, User eXperience)을 설계한다.\n토스는 유니버설 디자인팀을 필두로 접근성 향상을 위한 기술 문화적 변화와 노력을 지속하고 있다. ▲서비스 설계 단계부터 접근성을 반영하는 자동화 시스템 ‘앨리(Ally)’ 개발 ▲스크린리더 기능 업데이트를 사용자에게 알리는 ‘스크린리더 새소식’ 발행 ▲시각장애인 컨설턴트 협업을 통한 월 100여 건의 접근성 오류 개선 등을 이어가며 금융을 보편적 경험으로 구현하고자 한다.\n토스 관계자는 “접근성이란 장애인을 위한 별도의 장치가 아니라, 모두가 자연스럽게 같은 서비스를 공유할 수 있는 연결고리”라며 “누구나 복잡한 설명 또는 타인의 도움 없이도 금융의 주체가 될 수 있는 가장 쉬운 서비스를 만들겠다”고 밝혔다.\n한편, 이번 전시에서 공개하는 시각장애인 5명의 인터뷰 영상은 토스 공식 유튜브 채널에서도 확인할 수 있다.",
        "content": "포용 디자인 전시 공간 운영",
        "contentSnippet": "포용 디자인 전시 공간 운영",
        "guid": "https://toss.im/tossfeed/article/2025universaldesgin",
        "isoDate": "2025-08-30T23:36:00.000Z"
      },
      {
        "title": "트럼프의 MAGA는 사라지지 않을 것이다",
        "link": "https://toss.im/tossfeed/article/US-Investment-Insights-1",
        "pubDate": "Fri, 29 Aug 2025 02:48:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}📃 .css-q3ktjb{white-space:pre-wrap;font-weight:bold;}토스증권 리서치센터 리포트\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n⟨다녀왔습니다 워싱턴 D.C. - 01. MAGA는 사라지지 않을 구호다⟩\n토스증권 리서치센터 애널리스트들은 최근 미국 정치의 심장 워싱턴 D.C.를 다녀왔습니다. 트럼프 당선 이후 정치가 글로벌 주식시장을 흔드는 지금, 현장에서 투자 아이디어를 찾기 위해서였죠.\n그곳에서 얻은 첫 번째 인사이트는 분명했습니다. 트럼프가 퇴임하더라도, MAGA(Make America Great Again)로 상징되는 미국 우선주의는 쉽게 사라지지 않을 것이라는 사실이었어요.\n\n워싱턴 D.C. 출장 기간 동안 백악관, 국회의사당, 허드슨 연구소 같은 싱크탱크까지 두루 돌아보고 왔습니다. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}이 과정에서 특히 인상적이었던 건 곳곳에서 발견한 ‘미국 우선주의’의 흔적이었습니다. 실제로 백악관 근처 노점에는 America First나 MAGA(Make America Great Again) 문구가 새겨진 모자와 티셔츠를 쉽게 찾아볼 수 있었죠.\n이 문구들은 트럼프 대통령을 상징하는 슬로건인데요. 트럼프 정부 출범 직후 높은 관세, 제조업 부흥 등 미국의 이익을 최우선에 두는 정책들이 시행됐고, 이는 상반기 주식시장을 크게 흔든 요인이 되었습니다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}백악관 주변 노점상에서 판매 중인 MAGA 기념품 / 사진: 로이터\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\nMAGA는\n트럼프가 만든 구호가 아니다\n‘MAGA’와 ‘America First’ 같은 구호는 트럼프의 전유물처럼 보이지만, 사실 그가 처음 만든 말은 아닙니다.\n워싱턴 D.C.에 있는 국회의사당 돔 천장과 벽화에는 독립선언, 서부 개척, 남북전쟁 장면이 새겨져 있었고, 국립문서관과 의사당 도서관에는 미국 정치사의 중요한 순간들이 보존되어 있습니다. 기록들을 읽어보니, 건국 초기부터 미국은 ‘자국 우선주의’라는 메시지를 일관되게 반복해 왔다는 점을 확인할 수 있었습니다.\n초대 대통령 조지 워싱턴은 고별사에서 “외국과의 영속적 동맹을 경계하라”고 말했습니다. 제임스 먼로 대통령이 공표한 ‘먼로 독트린’에는 “외국의 체제 확장 시도는 우리의 평화와 안전에 위협이 된다”는 문장이 담겨 있었습니다. 자국 우선주의를 외교 정책의 핵심 원칙으로 못 박은 것이죠.\n\n미국의 주요 역사, 정치 서적 등이 있는 국회의사당 도서관 / 사진: 토스증권\n이후 ‘America First’는 시대마다 되살아났습니다. 1930~40년대 대공황 시기에는 은행 파산과 중산층 붕괴 속에서 미국우선위원회(America First Committee, AFC)가 결성돼 전국적 운동을 벌였고, 정부의 2차 세계대전 유럽 지원을 막아내기도 했습니다. 진주만 공습으로 미국이 전쟁에 참여하면서 미국우선위원회는 해체되었지만, 반공주의나 이민 제한, 방위비 감축 등의 정책 기조로 이어졌습니다.\n1970년대 후반, 베트남전에서 사실상 패배하고, 경기 침체까지 이어지며 자신감을 잃은 미국은 또 한 번 위기를 맞았습니다. 이때 로널드 레이건 대통령이 내세운 슬로건이 바로 ‘MAGA’였습니다.\n트럼프의 MAGA는 새로 등장한 구호가 아니라, 위기 때마다 반복돼 온 ‘미국 우선주의’ 전통의 최신 버전이라 할 수 있습니다.\n\n미국우선위원회 로고와 레이건 MAGA 캠페인 로고\n바이든도 사실은\n자국 우선주의였다\n민주당 출신으로 국제 협력과 동맹 복원을 강조해 온 바이든 정부조차, 실제로는 미국 우선주의에 기반한 정책을 펼쳤습니다. 핵심은 보조금과 투자 인센티브를 통해 글로벌 기업들을 미국으로 끌어들인 것이었습니다.\n특히 제조업 기반을 회복하고, 중국을 견제하려는 의도가 뚜렷했습니다. 중국이 희토류와 반도체 같은 핵심 자원을 무역 무기로 활용할 가능성이 커지면서, IRA*와 CHIPS법**으로 새로운 무역 장벽을 세운 것이죠.\n.css-1ebvaan{white-space:pre-wrap;font-weight:bold;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}* 인플레이션 감축법: 보조금 지급 조건으로 미국산 부품 사용과 현지 생산을 의무화, 해외 기업의 미국 투자 유도\n** 반도체 지원법: 중국 내 첨단 반도체 투자를 제한하며, 미국과 동맹국 중심의 공급망을 구축\n이 때문에 워싱턴 현지에서는 바이든 정부의 기조를 ‘바이든 버전의 MAGA’라고 부르기도 했습니다. 겉으로는 동맹과 협력을 내세웠지만, 실제 정책은 미국 산업과 기술 주권 강화를 지향했고, 트럼프 정부의 노선과 본질적으로 크게 다르지 않았기 때문입니다.\n\nMAGA는 앞으로도\n계속될 것이다\n트럼프의 MAGA는 새롭게 등장한 구호가 아니라, 오래전부터 이어져 온 ‘미국 우선주의’의 현대적 반복입니다. 그리고 이 흐름은 앞으로도 쉽게 사라지지 않을 가능성이 큽니다.\n지금도 미국은 위기 속에 있습니다. 중국의 추격, 기업들의 해외 이전, 줄어드는 제조업 일자리, 높아진 물가, 불안정한 공급망, 격화되는 기술 패권 경쟁. 이러한 환경은 다시금 자국 우선주의 전략을 강화하는 배경이 되고 있죠.\n미국 우선주의는 미국 정치사의 오랜 전통인 만큼 앞으로도 지속될 가능성이 큽니다. 강도가 잠시 완화될 수는 있어도, 언제든 다시 강화될 수 있죠.\n따라서 투자자라면 중장기 전략을 세울 때 반드시 이 흐름을 고려해야 합니다. 미국 우선주의는 글로벌 산업 전반을 흔들고, 결국 주식시장에도 직접적인 영향을 미치기 때문입니다.\n이어지는 다음 글에서는 미국 우선주의가 주요 산업에 어떤 영향을 미칠지, 투자자들이 취할 전략은 무엇일지 구체적으로 짚어드리겠습니다.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 기명균 이준혁 윤동해 Writer 이영곤 애널리스트",
        "content": "미국 역사 속에서 반복되는 America First",
        "contentSnippet": "미국 역사 속에서 반복되는 America First",
        "guid": "https://toss.im/tossfeed/article/US-Investment-Insights-1",
        "isoDate": "2025-08-29T02:48:00.000Z"
      },
      {
        "title": "토스, 아고다와 업무협약 체결..결제 편의성 강화 및 공동 프로모션 협력",
        "link": "https://toss.im/tossfeed/article/agoda",
        "pubDate": "Wed, 27 Aug 2025 08:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}26일 토스 본사서 협약식…토스 오규인 부사장, 아고다 줄리아나 리타노  부사장 등 참석\n아고다에 토스페이 도입, 양사 공동 마케팅 등으로 고객 편의성·혜택 강화\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 글로벌 디지털 여행 플랫폼 아고다(Agoda)와 전략적 업무협약(MOU)을 체결했다고 27일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n26일 서울 강남구 역삼동 토스 본사에서 열린 협약식에는 토스 오규인 부사장, 아고다 줄리아나 리타노(Giuliana Riitano) 부사장 등 양사 주요 관계자가 참석했다. 양사는 토스 간편결제 서비스와 아고다의 글로벌 플랫폼을 연계해 고객 편의성과 혜택을 강화하는 협력을 본격화하기로 했다.\n이번 협약으로 아고다 플랫폼에서 여행 상품 결제 시 토스페이를 사용할 수 있게 된다. 토스는 간편하고 직관적인 결제 UX/UI를 통해 아고다 고객들에게 한층 편리한 결제 경험을 제공할 계획이다.\n양사는 공동 마케팅과 프로모션, 데이터 기반 신규 유저 확보 등 다양한 활동을 통해 고객 혜택을 강화하고 이용자 저변을 확대할 방침이다. 또한 해당 파트너십을 통해 토스 해외여행 홈 내 아고다 서비스를 연계하는 등 이용자 접점을 확대하고 편의성을 높이는 방안도 추진한다.\n토스 오규인 부사장은 “글로벌 대표 여행 플랫폼 아고다와의 협약이 토스페이 저변을 넓히는 중요한 계기가 될 것이라 기대한다”며 “고객이 결제 과정에서 더 큰 편의성과 혜택을 체감할 수 있도록 양사가 다양한 영역에서 협력을 이어갈 계획”이라고 말했다.\n아고다 줄리아나 리타노 부사장은 “대한민국을 대표하는 금융 플랫폼 토스와의 협약을 통해 아고다 고객들에게 보다 편리한 결제 환경 및 경험, 매력적인 고객 리워드를 제공할 수 있게 되어 기대가 크다”며 “앞으로도 양사가 긴밀하게 협력해 고객들의 니즈에 맞춘 새롭고 다양한 서비스와 혜택을 선보이겠다”고 밝혔다.",
        "content": "토스 오규인 부사장, 아고다 줄리아나 리타노  부사장 등 참석",
        "contentSnippet": "토스 오규인 부사장, 아고다 줄리아나 리타노  부사장 등 참석",
        "guid": "https://toss.im/tossfeed/article/agoda",
        "isoDate": "2025-08-27T08:00:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]