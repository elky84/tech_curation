[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": []
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "David Li",
        "title": "C++ Dynamic Debugging: Full Debuggability for Optimized Builds",
        "link": "https://devblogs.microsoft.com/cppblog/cpp-dynamic-debugging-full-debuggability-for-optimized-builds/",
        "pubDate": "Wed, 19 Mar 2025 18:33:52 +0000",
        "content:encodedSnippet": "Over the past 5 years, we’ve had many incredible opportunities to engage with game developers. From AAA studios to indie developers, the passion for slashing iteration times is significant. Amidst all the fantastic feedback we’ve received for Visual Studio, one sentiment has rung loud and clear: a desire to debug optimized C++ code without sacrificing performance. Although game developers have voiced this need the loudest, we know that solving this issue will benefit many other C++ workflows. While we’ve consistently rolled out many productivity and performance enhancements over the years, debugging optimized code has always been at the top of everyone’s wish list.\nCurrent Issues with Debugging Optimized Code\nThrough our conversations with game developers, we’ve heard about some common problems when debugging optimized code:\nTrying to inspect locals often yields the “Variable is optimized away” message in the watch window.\nStep-over and step-into don’t always step over, or into, the expected code paths.\nLosing time while iterating with #pragma optimize to try and undo optimizations, requiring a rebuild and restart of the debugger.\nThanks to your feedback, the team has been hard at work to come up with a creative solution.\nAnnouncing: C++ Dynamic Debugging\nWe are thrilled to announce that C++ Dynamic Debugging is now available as a preview feature exclusively with the MSVC toolset. This feature dynamically deoptimizes code that you set breakpoints on or step into, giving you the performance of optimized code with the debugging experience of unoptimized code.\nTry C++ Dynamic Debugging today in Visual Studio 2022 version 17.14 Preview 2.\nDownload\n\nWithout C++ Dynamic Debugging\nWith C++ Dynamic Debugging\n“The new feature is exceptional. I now have reliable stepwise debugging, variable inspection, and program counter jumping without needing to recompile with pragma optimize.”\n– Jess Kube, Principal Software Engineer, The Coalition\nUsing it daily, the new feature improved my ability to debug and investigate quicker. I don’t need to manually deoptimize my files anymore”\n– Matthew Koch, Principal Software Engineer, Halo Studios\n“With the new feature, breakpoints in inlined functions will now be hit. Previously, I had to use a debug build or #pragma optimize and remember to remove it before code review”\n– Keith Stockdale, Senior Software Engineer, Rare\n\nGetting Started with C++ Dynamic Debugging\nYou only need a few short clicks to turn on C++ Dynamic Debugging for your project. After activating these options, you must rebuild to start using C++ Dynamic Debugging.\nMSBuild C++ Projects\nTo begin, change your configuration to Release mode. Next, right-click on your project and click on Properties to open the Configuration Properties menu. In this menu, click on Advanced > Use C++ Dynamic Debugging > Yes. Lastly, rebuild your project.\nSetting this property will turn off Whole Program Optimization.\nConfiguration Properties\nOther Build Systems\nPass the new /dynamicdeopt switch to cl.exe, lib.exe, and link.exe\nFor Unreal Engine developers, UE 5.6 will support the bDynamicDebugging Windows platform flag.\nPlease see documentation for more details.\nSystem Requirements\nVisual Studio 2022 Version 17.14 Preview 2\nMSVC Toolset 19.44\nX64 architecture\nNot compatible with LTCG, PGO, OPT-ICF flags\nUsing C++ Dynamic Debugging\nTurning on C++ Dynamic Debugging and rebuilding unlocks familiar debugging patterns for optimized code without compromising on performance.\nBreakpoints\nYour breakpoints will get hit in deoptimized code. Look for the [Deoptimized] tag in the Call Stack window to know that you can view all your locals.\nConditional and Dependent Breakpoints\nSet Conditional and Dependent Breakpoints as if the code was unoptimized; you can add conditional breakpoints to variables that have been optimized away in your optimized binaries.\nStepping Actions\nStep Over to the next line of your source code as if the code was unoptimized.\nStepping Actions\nStep In to any function, and those functions will be deoptimized as well. In addition, Step In will now step into __forceinline functions.\nStep Into __forceinline functions\nSet Next Statement\nUsing Set Next Statement in a deoptimized frame works as if the code was unoptimized.\nSet Next Statement\nCall Stack Window\nIn your Call Stack window, you will see that any frames that have been deoptimized will have a [deoptimized] tag.\nCall Stack Window\nVisual Studio only deoptimizes the frame corresponding to your breakpoint or functions stepped into. Frames higher up in the call stack remain optimized for performance. You can select additional frames in the Call Stack window and click “Deoptimize on next entry” to deoptimize those functions when they are entered the next time.\n\nManaging “Deoptimize on next entry” breakpoints\nBreakpoints added through “Deoptimize on next entry” are listed in the Breakpoints window. You can export these Breakpoints for later use. To return your application to full optimization, delete these breakpoints.\nDeoptimized Breakpoints\nMiddleware Support\nWe have been working closely with our middleware partners to ensure that C++ Dynamic Debugging works with popular middleware tools.\nUnreal Engine\nIn Unreal Engine version 5.6, Unreal Build Tool and Unreal Build Accelerator will support C++ Dynamic Debugging natively. To try the feature today, please manually apply the change, temporarily disable Unreal Build Accelerator, and see our documentation for more details.\nIncrediBuild\nIncrediBuild 10.24 or later supports C++ Dynamic Debugging.\nFastBuild\nTo use C++ Dynamic Debugging with FastBuild, please see this Pull Request.\nXbox GDK\nOut-of-the-box support for C++ Dynamic Debugging will be available in an April 2025 update. To try this feature today, please refer to the official GDK documentation.\nOverhead Considerations\nWhile using C++ Dynamic Debugging, it’s important to acknowledge the following considerations. Despite these overhead costs, we are confident that your overall iteration time will benefit significantly.\nFile Output Size\nIn our assessments, using a modified version of the Lyra Sample project, we observed a 2.4x increase in the build output size.\nBuild Time\nEnd-to-end Build Time\nDepending on the project, we saw an increase in end-to-end build time ranging from 1.05x to 1.15x.\nIteration Build Time\nFor small and medium-sized binaries, the increase in iteration build time was less than 1.2x. For larger binaries, such as monolithic games, the increase was up to 1.8x.\nMitigations for Iteration Build Time\nIf the increase in iteration time is too burdensome for large binaries, you can try the undocumented /d2DDTrimInlines compiler switch. This switch, subject-to-change and removal, reduces the iteration time overhead from 1.8x to 1.4x at the cost of increased end-to-end build time. The switch also removes the ability to step into small __forceinline/inline functions.\nKnown Issues\nBy design:\nUnexpected PDB error, LIMIT (12), check for insufficient disk space, invalid path, or insufficient privilege.\nStepping in disassembly window remains optimized.\nFixed in Visual Studio 2022 17.4 Preview 3:\nCrash with memcmp and other intrinsic imports with /MD\nIncorrect emission of C4714\nMissing feature from x86_x64 compiler\nInstrumentation-based profiling doesn’t work\nCrash stepping past C++ exception catch handlers\nActive Issues:\nStarting the debugger with F10 or F11 keeps main() optimized\nImageBase is 0 when debugging\nCrash stepping into __try block that has access violation\nConclusion\nTry C++ Dynamic Debugging today: Experience the benefits of debug builds and the speed of optimized builds.\nDownload\n\nC++ Dynamic Debugging is a preview feature. Thank you to everyone who gave us feedback on debugging optimized code. This feature would not have been possible without your feedback. We love to hear how much time this feature has saved you and how you’re incorporating it into your workflow. Furthermore, we invite you to keep sending feedback so we can make C++ Dynamic Debugging even better. We truly appreciate your feedback and encourage you to keep sharing your thoughts and ideas with us through Developer Community, X (@VisualC), or email at visualcpp@microsoft.com.\n \n \n \n \n \n \n \n \n \n \n \n \nThe post C++ Dynamic Debugging: Full Debuggability for Optimized Builds appeared first on C++ Team Blog.",
        "dc:creator": "David Li",
        "comments": "https://devblogs.microsoft.com/cppblog/cpp-dynamic-debugging-full-debuggability-for-optimized-builds/#comments",
        "content": "<p>Over the past 5 years, we’ve had many incredible opportunities to engage with game developers. From AAA studios to indie developers, the passion for slashing iteration times is significant. Amidst all the fantastic feedback we&#8217;ve received for Visual Studio, one sentiment has rung loud and clear: a desire to debug optimized C++ code without sacrificing [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/cpp-dynamic-debugging-full-debuggability-for-optimized-builds/\">C++ Dynamic Debugging: Full Debuggability for Optimized Builds</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Over the past 5 years, we’ve had many incredible opportunities to engage with game developers. From AAA studios to indie developers, the passion for slashing iteration times is significant. Amidst all the fantastic feedback we’ve received for Visual Studio, one sentiment has rung loud and clear: a desire to debug optimized C++ code without sacrificing […]\nThe post C++ Dynamic Debugging: Full Debuggability for Optimized Builds appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35229",
        "categories": [
          "C++",
          "Game Development",
          "debugging",
          "Optimized Builds"
        ],
        "isoDate": "2025-03-19T18:33:52.000Z"
      },
      {
        "creator": "Moyo Okeremi",
        "title": "Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50%",
        "link": "https://devblogs.microsoft.com/cppblog/optimizing-build-times-with-build-insights-how-activision-cut-call-of-dutys-build-time-by-50/",
        "pubDate": "Tue, 18 Mar 2025 13:51:17 +0000",
        "content:encodedSnippet": "Slow build times are a major headache for developers, especially in large, complex C++ codebases like game engines. Every minute spent waiting on a build is time that could be used to refine features, resolve issues, or push development forward. Activision faced this challenge with Call of Duty: Modern Warfare II, where prolonged build times were slowing down iteration and impeding workflows. By leveraging Build Insights, they identified key inefficiencies, optimized bottlenecks, and successfully reduced build times from 27:49 minutes to just 14:25 minutes—cutting them in half. Read more about their journey in our detailed breakdown on Microsoft Game Dev.\n\nBuild times impact every aspect of development. When builds are slow, valuable engineering time is lost—time that could be spent improving features, optimizing performance, or debugging critical issues. Slow builds also create bottlenecks in our continuous integration pipelines, delaying the verification of every piece of code and content that goes into our games. To keep our development workflow efficient, we need our builds to be as fast as possible, and Build Insights provides that capability to our teams. — Michael Vance, SVP & Fellow Software Engineer, Activision\n\nThrough a collaboration between Activision, the Xbox Advanced Technology Group (ATG), and the MSVC team, optimizations were made to force inlining, linker efficiency, and whole-program analysis, leading to dramatic improvements in build performance. These insights not only benefited Call of Duty but also contributed to broader enhancements in MSVC’s LTCG and linker performance, positively impacting other major projects like Fortnite, Chrome, and TensorFlow.\nTo dive deeper into how these optimizations were achieved and how Build Insights can help your own development workflow, read the full article on How Build Insights Reduced Call of Duty: Modern Warfare II’s Build Times by 50%. You can also check out our YouTube Video, explore our blog post, or dive into our documentation to start optimizing your builds today.\nThe post Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50% appeared first on C++ Team Blog.",
        "dc:creator": "Moyo Okeremi",
        "comments": "https://devblogs.microsoft.com/cppblog/optimizing-build-times-with-build-insights-how-activision-cut-call-of-dutys-build-time-by-50/#respond",
        "content": "<p>Slow build times are a major headache for developers, especially in large, complex C++ codebases like game engines. Every minute spent waiting on a build is time that could be used to refine features, resolve issues, or push development forward. Activision faced this challenge with Call of Duty: Modern Warfare II, where prolonged build times [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/optimizing-build-times-with-build-insights-how-activision-cut-call-of-dutys-build-time-by-50/\">Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50%</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Slow build times are a major headache for developers, especially in large, complex C++ codebases like game engines. Every minute spent waiting on a build is time that could be used to refine features, resolve issues, or push development forward. Activision faced this challenge with Call of Duty: Modern Warfare II, where prolonged build times […]\nThe post Optimizing Build Times with Build Insights: How Activision Cut Call of Duty’s Build Time by 50% appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35227",
        "categories": [
          "Build Insights",
          "Build Optimization",
          "C++",
          "Game Development",
          "Activision"
        ],
        "isoDate": "2025-03-18T13:51:17.000Z"
      },
      {
        "creator": "David Li",
        "title": "Visual Studio at GDC 2025",
        "link": "https://devblogs.microsoft.com/cppblog/visual-studio-at-gdc-2025/",
        "pubDate": "Fri, 14 Mar 2025 17:07:48 +0000",
        "content:encodedSnippet": "Join us in-person at Game Developers Conference 2025 with an in-depth look at how Visual Studio and GitHub Copilot can streamline your iteration workflow. Don’t miss the unveiling of our biggest C++ debugger update yet.\n\nSession Title: Accelerating Your Inner Loop with Visual Studio and GitHub Copilot\nSession Info: March 19th, 2025, 12:30 PM-1:30 PM Pacific Time | GDC Industry Stage, Expo Floor, South Hall\nAbstract: Get ready to supercharge your development process with the newest features in Visual Studio! This year, we’re thrilled to unveil our most powerful C++ debugger upgrade yet, designed to slash your iteration times. You’ll also see how our native support for Unreal Engine projects makes your workflow smoother than ever. Plus, check out the latest GitHub Copilot updates for C++ development, no matter what source control provider you use. Don’t miss our exciting demos that highlight the future of game development in Visual Studio and show why it’s the ultimate platform for editing, debugging, and building games.\nWe look forward to seeing you and chatting with you at GDC 2025.\nThe post Visual Studio at GDC 2025 appeared first on C++ Team Blog.",
        "dc:creator": "David Li",
        "comments": "https://devblogs.microsoft.com/cppblog/visual-studio-at-gdc-2025/#respond",
        "content": "<p>Join us in-person at Game Developers Conference 2025 with an in-depth look at how Visual Studio and GitHub Copilot can streamline your iteration workflow. Don’t miss the unveiling of our biggest C++ debugger update yet. Session Title: Accelerating Your Inner Loop with Visual Studio and GitHub Copilot Session Info: March 19th, 2025, 12:30 PM-1:30 PM Pacific Time &#124; [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/visual-studio-at-gdc-2025/\">Visual Studio at GDC 2025</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Join us in-person at Game Developers Conference 2025 with an in-depth look at how Visual Studio and GitHub Copilot can streamline your iteration workflow. Don’t miss the unveiling of our biggest C++ debugger update yet. Session Title: Accelerating Your Inner Loop with Visual Studio and GitHub Copilot Session Info: March 19th, 2025, 12:30 PM-1:30 PM Pacific Time | […]\nThe post Visual Studio at GDC 2025 appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35221",
        "categories": [
          "Game Development",
          "C++"
        ],
        "isoDate": "2025-03-14T17:07:48.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Dmitrii Korovin",
        "title": "What’s New in TeamCity 2025.03: Recipes, Improved Docker and Podman Integration, UI Updates, and More",
        "link": "https://blog.jetbrains.com/teamcity/2025/03/teamcity-2025-03-release",
        "pubDate": "Thu, 20 Mar 2025 15:31:43 +0000",
        "content:encodedSnippet": "TeamCity’s first major release of the year, version 2025.03, is now available. It’s packed with new features, including massive UI updates, a new Run in Docker build feature, and JetBrains-crafted recipes available in our Marketplace.\nUI updates\nIn line with our commitment to make TeamCity easier and more intuitive to use, this release introduces significant UI improvements:\nSimplified navigation: The Edit Project/Configuration button is now a Settings toggle, with distinct accent colors for View and Edit modes. Once you switch to Edit mode, you can navigate across multiple projects without exiting it.\n\n\n\n\n\nOrganized settings: Project settings are now grouped into categories for easier navigation, while build configuration settings are arranged as tabs.\n\n\n\n\n\nRefined layout: The headers of project, configuration, and build pages are now more compact, and build pages highlight key details like the repository branch, build time, and queue time. The Actions menu is now conveniently accessible via an ellipsis button next to Run.\n\n\n\n\nIntroducing recipes (goodbye meta-runners!)\nThis release marks the beginning of meta-runners’ evolution into recipes. While the core idea remains, recipes offer new advantages. For example, you can:\nDefine them in XML or, in future TeamCity versions, YAML\nUse ones hand-crafted by JetBrains from Marketplace\n\n\n\n\nIn upcoming releases, we plan to add support for sharing your own recipes on Marketplace. Share your feedback and public recipe design ideas in the comments under this YouTrack ticket: TW-91941.\nEnhanced parameter control\nThe Parameters tab now separates input and output parameters:\nInput parameters are your standard pre-2025.03 parameters designed to be used directly by their parent configurations.\nOutput parameters are parameters with explicit access permissions, shareable with dependent configurations via the dep.<config_name>.<parameter_name> syntax.\n\n\n\n\nThis clear separation serves two purposes: enhancing security by keeping parameters that were never meant to be shared private, and allowing configuration developers to focus on adjusting their input parameters without worrying about breaking other configurations that import them.\nPerforce manual and automatic merge support\nTeamCity now supports manual and automatic code merges between Perforce streams:\nThe automatic merge feature supports configurations that use Perforce VCS roots.\nThe Actions build menu includes an option to merge changes to a target Perforce stream manually.\nImproved Docker and Podman integration\nVersion 2025.03 also includes a few updates that widen your options for running builds inside containers.\nYou can run all configuration steps in a single container using the new Run in Docker build feature.\nKotlin script build steps now support the Container Wrapper, which allows them to run in Docker and Podman containers.\nThe Docker Support feature is now called Docker Registry Connections, better reflecting its role in managing private container registry logins and image cleanup.\nThe complete list of implemented features and fixed issues is available in our documentation: \nWhat’s New \nRelease Notes\nIf you have any questions, feel free to get in touch with us in the comments below or via the support form. We do our best to answer them all!",
        "dc:creator": "Dmitrii Korovin",
        "content": "TeamCity&#8217;s first major release of the year, version 2025.03, is now available. It’s packed with new features, including massive UI updates, a new Run in Docker build feature, and JetBrains-crafted recipes available in our Marketplace. UI updates In line with our commitment to make TeamCity easier and more intuitive to use, this release introduces significant [&#8230;]",
        "contentSnippet": "TeamCity’s first major release of the year, version 2025.03, is now available. It’s packed with new features, including massive UI updates, a new Run in Docker build feature, and JetBrains-crafted recipes available in our Marketplace. UI updates In line with our commitment to make TeamCity easier and more intuitive to use, this release introduces significant […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=552474",
        "categories": [
          "release",
          "teamcity"
        ],
        "isoDate": "2025-03-20T15:31:43.000Z"
      },
      {
        "creator": "daniel.csorba@jetbrains.com",
        "title": "Kotlin 2.1.20 Released",
        "link": "https://blog.jetbrains.com/kotlin/2025/03/kotlin-2-1-20-released",
        "pubDate": "Thu, 20 Mar 2025 11:59:50 +0000",
        "content:encodedSnippet": "The Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0. Here are some highlights from this release:\nK2 compiler updates: New default kapt compiler plugin.\nKotlin Multiplatform: A new DSL to replace Gradle’s Application plugin in multiplatform projects.\nKotlin/Native: Inlining optimization to improve runtime performance.\nKotlin/Wasm: Custom formatters are now enabled by default in development builds.\nGradle support: Support for adding custom publication variants in multiplatform and JVM projects.\nStandard library: Introduction of common atomic types, improved UUID support, and a new time-tracking functionality.\nCompose compiler: Now includes source information by default across all platforms.\nFor the complete list of changes, refer to What’s new in Kotlin 2.1.20 or the release notes on GitHub.\nHow to install Kotlin 2.1.20\nStarting from IntelliJ IDEA 2023.3 and Android Studio Iguana (2023.2.1) Canary 15, the Kotlin plugin is distributed as a bundled plugin included in your IDE. This means that you can’t install the plugin from JetBrains Marketplace anymore.\nTo update to the new Kotlin version, change the Kotlin version to 2.1.20 in your build scripts.\nIf you need the command-line compiler, download it from the GitHub release page.\nIf you run into any problems\nFind help on Slack (get an invite).\nReport issues to our issue tracker, YouTrack.\nStay up to date with the latest Kotlin features! Subscribe to receive Kotlin updates by filling out the form at the bottom of this post. ⬇️\nSpecial thanks to our EAP Champions\nZac Sweers\nAlexander Nozik\nBenoit ‘BoD’ Lubek\nYang\nJake Wharton\nRick Clephas\nRussell Wolf\nJohannes Svensson\nŁukasz Wasylkowski\nDavid Lopez\nArtyom Shendrik\nFlorian Schreiber\nSechaba Mofokeng\nAmr Yousef\nKacper Wojciechowski\nBernd Prünster\nAnderson Lameck\nWhat else to read\nWhat’s new in Kotlin 2.1.20 documentation\nKotlin 2.1.0 compatibility guide\nK2 compiler migration guide\nK2 Compiler Performance Benchmarks and How to Measure Them on Your Projects\nKotlin EAP Champions",
        "dc:creator": "daniel.csorba@jetbrains.com",
        "content": "The Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0. Here are some highlights from this release: For the complete list of changes, refer to What&#8217;s new in Kotlin 2.1.20 or the release notes on GitHub. How to install Kotlin 2.1.20 Starting from IntelliJ IDEA 2023.3 and Android [&#8230;]",
        "contentSnippet": "The Kotlin 2.1.20 release is out! This version includes performance improvements and bug fixes for Kotlin 2.1.0. Here are some highlights from this release: For the complete list of changes, refer to What’s new in Kotlin 2.1.20 or the release notes on GitHub. How to install Kotlin 2.1.20 Starting from IntelliJ IDEA 2023.3 and Android […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=551913",
        "categories": [
          "releases"
        ],
        "isoDate": "2025-03-20T11:59:50.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "TeamCity Roadmap 2025: Updating the UI, TeamCity Recipes, and Much More",
        "link": "https://blog.jetbrains.com/teamcity/2025/03/teamcity-roadmap-2025",
        "pubDate": "Wed, 19 Mar 2025 14:32:32 +0000",
        "content:encodedSnippet": "This year, the TeamCity team is working on a number of new initiatives, including updating the UI, TeamCity recipes, Jenkins migration tools, and many others. Read on to learn what our focus is for 2025.\nModernizing the TeamCity Enterprise interface\nIn 2025, we’re taking a major step forward in enhancing the TeamCity experience. The modern TeamCity Pipelines interface is making its way to TeamCity Enterprise, bringing a fresh, intuitive UI to enterprise users.\n\n\n\n\nThis move aligns with our broader vision of making Pipelines accessible to all TeamCity Enterprise customers. Why? Because we believe it delivers value on multiple levels:\nSimplifies project setup. Getting started should be effortless, whether you’re a new user or an experienced DevOps engineer.\nEnhances the build chain editing experience. We’re improving how you configure and visualize your CI/CD pipelines.\nProvides YAML support. YAML is a popular way of configuring pipelines as code, and we want to provide this option to those customers who need it.\nIntroduces full branching support. Work seamlessly with feature branches, pull requests, and complex Git workflows to improve collaboration and automation.\n\n\n\n\n\nStay tuned for more improvements as we continue updating the product UI!\nVCS integrations: UX improvements\nThis year, we’re focusing on redesigning the user experience to make it easier to configure connections, manage VCS roots, and streamline repository setup. \nWe’re also enhancing TeamCity’s integration with Perforce, GitHub, and other VCS roots.\nTeamCity recipes\nRecipes are reusable YAML-based actions that simplify build configuration by handling tasks like setting up tools, running tests, or validating source files.\n\n\n\n\nHow it works\nWhen adding a build step, you can search for actions that fit your needs (e.g. “aws” or “node”).\nTeamCity suggests matching actions, and you can then select and apply the desired action. \nThis feature will make the build configuration process faster, more flexible, and easier to share, as we’re planning to make recipes shareable.\nDependency cache\nTeamCity’s dependency cache enhances the existing build caching mechanism by automatically managing commonly used build system directories. Currently, you must manually specify which directories to cache between build agents within the artifact storage. \nWith this improvement, TeamCity will automatically detect and cache well-known directories for supported build systems, reducing manual setup and ensuring a seamless experience. This is particularly beneficial for teams using ephemeral cloud agents and TeamCity Pipelines, where maintaining persistent build data is crucial. \nFor now, the feature will support Maven, Gradle, and NuGet build runners.\nThere are two main benefits that the feature brings:\nSignificantly improved out-of-the-box usability, aligning with our goal of delivering a top-tier CI/CD experience with minimal configuration.\n\n\n\n\nMinimized end-user spending. By caching dependencies, you can significantly reduce build duration, thus reducing costs.\nImproving build feature usability\nMany important build features in TeamCity are hard to discover and configure due to their placement in the Build Features list. To improve discoverability and usability, we’re integrating build features directly into the execution page, making them easier to access and configure. \nThis update streamlines workflows while maintaining compatibility with plugins and the Kotlin DSL, ensuring a more intuitive and efficient setup.\n[Experimental] Jenkins migration tool\nJenkins remains one of the most popular CI/CD solutions. According to the State of Developer Ecosystem Report, 46% of respondents reported using it regularly in their organization.\nWhile it’s a great open-source product, it comes with its limitations, including a cumbersome UI, complex setup, and numerous plugins to handle – all this can be a hassle to manage. \nWe’re building a migration tool to make it easier for teams to switch from Jenkins to TeamCity. If you’re looking for a powerful CI/CD solution that supports complex workflows, this tool will help you migrate your pipelines without the hassle of moving everything manually.\nMeanwhile, if you’d like to explore how you can migrate your CI/CD projects from Jenkins to TeamCity, we can help! Please reach out to us via this form.\nDynamic pipelines: flexible build chains in TeamCity\nCurrently, build chains in TeamCity are static, requiring manual updates to build configurations and dependencies when changes are needed. While this works well for stable pipelines, it becomes cumbersome in scenarios requiring flexibility.\nFor example, if test suites are distributed across multiple build configurations, adding a new suite means modifying the build chain for all branches and ensuring the new configuration is disabled where it’s not needed. This manual process makes it difficult to efficiently manage dynamic workflows.\nTo address this, we are exploring the ability to dynamically generate pipelines at runtime, allowing build configurations to be defined programmatically based on branch-specific logic, test distribution strategies, or other dynamic factors. This would eliminate the need for rigid, pre-defined build chains and offer more adaptability for complex CI/CD workflows.\nSimilar to Jenkins’ Pipeline plugin, this approach could introduce a DSL-based scripting mechanism that allows teams to define pipelines in version control, ensuring greater flexibility and automation in pipeline execution.\nFollow our progress on YouTrack.\nEnhancing the Kotlin DSL with the K2 compiler\nKotlin is introducing the K2 compiler, a next-generation compiler that brings improved performance and new language features. One key benefit for TeamCity is the reduced compilation time for versioned settings, minimizing the delay between configuration changes and their application.\nTo leverage these improvements, we plan to adopt the K2 compiler for processing the Kotlin DSL. However, since K2 introduces some breaking changes, we will carefully evaluate its impact on existing configurations to ensure a smooth transition for users.\nReading configurations from Git for multi-node setups\nIn multi-node TeamCity installations, configuration files are currently stored on a shared disk, which introduces several challenges. Nodes simultaneously reading and modifying configuration files can cause consistency issues, and setting up a shared disk with acceptable performance is often complex.\nTo address these challenges, we plan to store and synchronize configuration files in Git, leveraging the existing repository used by TeamCity for tracking configuration changes. This approach will ensure reliable, conflict-free configuration management across multiple nodes while eliminating the need for a dedicated shared disk.\nAlibaba Cloud support\nWe are exploring Alibaba Cloud integration to expand TeamCity’s support for diverse cloud environments. This will enable users to seamlessly connect TeamCity with Alibaba Cloud services, improving scalability, resource management, and automation for CI/CD workflows. \nWe hope that the integration will be especially valuable for teams leveraging Alibaba Cloud’s infrastructure for build agents, storage, and deployments, ensuring a smoother experience for users in the Asia-Pacific market and beyond. If you’re using Alibaba Cloud, we’d love to talk with you!\nAgent autoscaling\nTo enhance efficiency and flexibility in TeamCity, we are introducing agent autoscaling, allowing users to better manage cloud-based build agents. This feature addresses two key user needs:\nMinimum available agents. Ensures a baseline number of agents are always ready, reducing wait times, especially when agents have long startup durations.\nScheduled scaling. Allows users to adjust the maximum number of agents dynamically based on a predefined schedule, optimizing resource allocation during peak and off-peak hours.\nBy automating agent availability, this feature improves CI/CD performance, reduces manual scaling efforts, and helps teams control costs while ensuring builds run smoothly.\nTeamCity Pipelines\nAt the moment, TeamCity Pipelines is a lightweight, easy-to-use, yet powerful CI/CD product for smaller teams. It cuts your runtime by up to 40%, helping you build and deliver faster, thanks to smart features like the visual pipeline editor and optimization center.\nHere’s what we’re working on this year for TeamCity Pipelines.\nJob debugging: pause and investigate failures in real time\nDebugging failed builds often means reacting after the fact – opening the terminal and investigating what went wrong. But what if you could pause a job right at the moment an issue occurs?\nWith our new job debugging feature, you’ll be able to set breakpoints before or after specific build steps, making it easier to pinpoint problems as they happen.\n\n\n\n\nThis brings a more interactive debugging experience inspired by familiar concepts from IntelliJ IDEA, such as breakpoint toggling and a dedicated Debug button.\nIn the future, we plan to refine this further by allowing breakpoints within individual CLI script commands.\nMore VCS integration options\nYou can now build your GitHub, GitLab, Bitbucket, and Git projects in TeamCity Pipelines. This year, we’ll be expanding VCS integration functionality to include the Commit Status Publisher and other powerful features. Stay tuned!\nPersonal notifications\nYou can now subscribe to receive notifications when a pipeline fails. Sometimes, however, you might want to receive more (or less) information about build statuses, etc. You’ll be able to choose the events that you want to be notified about, for example, when a pipeline fails to start, when the first build error occurs, and others.\nIntegration with IntelliJ IDEA\nWe’re working on a seamless integration between IntelliJ IDEA and TeamCity Pipelines. The integration will make it easier to manage CI/CD workflows directly from the IDE. Developers will be able to trigger builds and monitor results without leaving their coding environment. \nThis seamless connection helps streamline development, reducing context switching and making CI/CD an integral part of the development process.\nRestricting incoming dependencies for enhanced security\nTo improve security and control, we are working on a feature that will allow project administrators to restrict and view incoming snapshots and artifact dependencies for build configurations.\nThe new restriction mechanism will empower administrators to define and control which projects and configurations can establish dependencies, reducing security risks and ensuring better oversight of build relationships.\nThat’s it for now! If you have a feature request, please feel free to share it with us via this form.",
        "dc:creator": "Olga Bedrina",
        "content": "This year, the TeamCity team is working on a number of new initiatives, including updating the UI, TeamCity recipes, Jenkins migration tools, and many others. Read on to learn what our focus is for 2025. Modernizing the TeamCity Enterprise interface In 2025, we’re taking a major step forward in enhancing the TeamCity experience. The modern [&#8230;]",
        "contentSnippet": "This year, the TeamCity team is working on a number of new initiatives, including updating the UI, TeamCity recipes, Jenkins migration tools, and many others. Read on to learn what our focus is for 2025. Modernizing the TeamCity Enterprise interface In 2025, we’re taking a major step forward in enhancing the TeamCity experience. The modern […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=553716",
        "categories": [
          "roadmap"
        ],
        "isoDate": "2025-03-19T14:32:32.000Z"
      },
      {
        "creator": "Galina Ryazanskaya",
        "title": "Using AI Agents for Notebook Debugging",
        "link": "https://blog.jetbrains.com/ai/2025/03/using-ai-agents-for-notebook-debugging",
        "pubDate": "Wed, 19 Mar 2025 12:53:50 +0000",
        "content:encodedSnippet": "Debugging computational notebooks can be quite frustrating for a variety of reasons, including issues like out-of-order cell execution, missing data files, and library conflicts. Traditional AI tools often struggle with these problems due to the interactive nature of notebooks, but at JetBrains, we are exploring new solutions.\nOur research team has developed a prototype of an AI agent that autonomously fixes notebook errors by modifying and executing cells until the problems are solved. \nIn this post, we’ll explore how the prototype works, how it improves the debugging process, and how it compares to simpler LLM-based solutions in terms of cost and user experience.\nWhy automate notebook debugging\nComputational notebooks are widely used for data analysis, research, and hypothesis testing because they allow users to integrate different data types and execute cells non-linearly. This creates vast opportunities for experimentation and use in data science.\nHowever, this flexibility and interactivity come at the cost of reproducibility and having to deal with frequent bugs. Studies show that up to 75% of Jupyter notebooks cannot be re-run without issues. At the same time, debugging them is particularly difficult, as it requires the interactive, iterative inspection of errors and their context rather than simple static analysis.\nUsing LLMs like GPT-4 is standard practice for other debugging tasks. However, for notebook debugging, it is rather challenging due to context size limitations. Notebooks require runtime information to reflect their state, which means they often need a large context window for error resolution. AI agents address this by interacting with notebooks iteratively – much like humans do, but significantly faster.\nThe JetBrains Research team has created a prototype of just such an AI agent for Datalore. It is capable of creating, editing, and executing cells to resolve runtime exceptions.\nHere’s a short demo showcasing the debugging AI agent in action:\n\n\n\n\n\n\nIf you want to see a detailed report on this project, check out this preprint. These results were also presented at EMNLP, a leading conference for natural language processing and artificial intelligence.\nHow does the debugging AI agent work?\n\nLet’s start with a broad overview of our AI agent system. It consists of three main components – the LLM module, the environment, and the user interface – which work together as follows:\nStart: Whenever the execution of a cell results in an exception, the debugging AI agent can be called with a Fix with AI Agent button that appears below the error message. When clicked, it starts the agentic debugging cycle, which is shown as an interaction with an LLM in a separate window. \n\n\n\n\n\nCycle: At each iteration of the debugging cycle, the LLM module collects the required information and adds it to the debugging prompt passed to the LLM, in this case, GPT-4. The LLM then generates an answer, which includes some reasoning as well as the next action, such as editing and executing cells or finishing the debugging process once the error has been resolved. The action suggested by the model is then executed in the environment, and the results are added to the prompt for the next round of debugging. \n\n\n\n\n\nFinish: This iterative loop continues until the error is resolved or until the limit on time or the number of iterations is reached. In our experiments, most of the debugging runs ended in the error being successfully resolved after only a few steps, so the limits were rarely required in practice.\nHow does the AI agent prompt the LLM?\nLet’s take a closer look at the core of our AI agent system, namely, the LLM module. Our AI agent prompts the LLM using a “system prompt” that covers the general approach to the task and a “user prompt” containing specific details about the current stage of the debugging run. Below, you can see shortened versions of the two prompts.\n\nSystem prompt\nGeneral purposeYou are a coding assistant that should help solve the user’s error in a computational notebook. You should use functions to help handle real-time user queries and return outputs only in the form of valid JSON.\nAvailable toolsYou have a few ways of interacting with the environment:\nchange the code of the existing cells, run it, and give the output.add a new cell with your own code, run it, and give the output.run any cell as is and give the output.If you’re sure the error won’t show up in the cell where it was found, you can run finish.\nWorkflow guidelinesKeep trying for at least 10 steps before you stop, but if you think you’ve solved the problem, you can run finish right away.If you can fix the error without changing any code, do that. Don’t edit the existing code or add new code unless you really need to.Use only the functions given to you. If you have many functions to choose from, pick the one that solves the problem quickest.When you think you’ve fixed the problem, run finish to say you’re done.\nHacksJust adding try – except is not a solution. Commenting out the code that produced the error is not a solution. You should propose only meaningful solutions. \n\n\n\n\n\n\n\nInitial user promptHere’s a Jupyter notebook. It uses {separator} as a separator between cells. Note that cell indexes START FROM 1! {notebook} An error occurred in the cell with num {cell_num}. The error trace is the following: {error} Please resolve the error. You must use only the tools defined above to resolve the error. Return output only as valid JSON. \n\n\n\n\n\nThe system prompt opens with a general description of the problem, provides some guidelines on how it should be solved, and then closes with instructions about actions. We use reflection as the algorithm for choosing the next action, asking the LLM to reflect on the outcomes of the previous actions taken before selecting the next tool to call. The reflections are output as comments for each selected action and are available at all following steps. The guidelines also encourage the LLM to explore the environment and discourage large outputs and “hacks”, such as deleting the error cell or commenting out the problematic code. \nThe user prompt initially consists of the notebook code and the error cell number, again accompanied by a short task description. After each step, the actions suggested by the LLM are converted into commands and executed, and the result is collected as an input for the next user prompt, along with the conversation history.\nYou can observe the entire debugging process in real time via the interface where the conversation and the actions are visualized.\nHow costly is the AI agent?\nA significant cost with any AI system comes from running large language models, with costs primarily driven by the number of request and response tokens processed.\nTo compare costs, we evaluated the AI agent against a simpler zero-shot debugging approach in Datalore, using 100 hours of hackathon coding records. The dataset featured an extensive notebook action history, so the errors that occurred could be reproduced and addressed by either of the AI solutions. On average, resolving an error with the AI agent was 2.5 times as expensive, costing $0.22 per error with GPT-4 versus $0.09 with the simpler method.\nThe AI agent’s higher cost came mainly from using three times as many request tokens for its memory stack, while the number of response tokens was similar between methods. Nevertheless, the cost remained practical for industry use since input tokens are cheaper and most errors were fixed on the first step.\nUser feedback about the AI agent\nWe used the same zero-shot baseline to compare the user experiences with these two AI algorithms. In particular, we wanted to know how well users thought the AI agent resolved problems and how much they believed it could improve their productivity. We had two groups of programmers complete the same data-filtering task. One group used the zero-shot baseline, and the other used our agentic solution.\n\n\n\n\nWe found that the users were quite satisfied with both solutions, rating them either good or excellent, and they slightly favored the AI agent. The users also seemed to rely more on the AI agent. However, the participants also reported that the agentic solution was less easy to use. We suspect this may be due to the lack of user control over its actions as well as the speed at which it acts. \nIn the feedback, the users suggested that slowing down the conversation and highlighting the introduced changes in the notebook would provide more insight into the AI agent’s thought process and solution. They also proposed making the agentic solution process more interactive so they have a way of interrupting or changing the actions suggested by the AI agent. Finally, they asked for a way to access the agent before any error has occurred.\nBenefits of AI debugging: Looking forward\nFinally, we compared the AI agent to the unaided human debugging process that comprised our dataset. In this comparison, the agentic solution offers obvious benefits:\nFaster debugging: The AI agent typically fixed issues in under a minute, while humans took an average of 3.5 minutes and up to 20 minutes for more complex cases.\nEffectiveness for common small errors: The agent quickly resolved small bugs, like incorrect pandas functions or arguments.\nInsights into root causes: The agent highlighted and explained changes, which helped to identify root causes of and solutions for errors.\nThe main takeaways of the study for the agentic debugging research concern the areas of improvement:\nReduced cost: One solution to the higher cost of the agentic approach could be history caching, which can reduce the number of request tokens used. \nIncreased user control: The study of user experience highlighted that users would prefer to have more control over the process, such as the option to call the agent before any error occurs. \nBuilding on top of this work, we will continue making Datalore smarter with AI-based features.",
        "dc:creator": "Galina Ryazanskaya",
        "content": "Debugging computational notebooks can be quite frustrating for a variety of reasons, including issues like out-of-order cell execution, missing data files, and library conflicts. Traditional AI tools often struggle with these problems due to the interactive nature of notebooks, but at JetBrains, we are exploring new solutions. Our research team has developed a prototype of [&#8230;]",
        "contentSnippet": "Debugging computational notebooks can be quite frustrating for a variety of reasons, including issues like out-of-order cell execution, missing data files, and library conflicts. Traditional AI tools often struggle with these problems due to the interactive nature of notebooks, but at JetBrains, we are exploring new solutions. Our research team has developed a prototype of […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=553433",
        "categories": [
          "research",
          "ai-agent",
          "ai-agents",
          "debug",
          "debugging"
        ],
        "isoDate": "2025-03-19T12:53:50.000Z"
      },
      {
        "creator": "Alyona Chernyaeva",
        "title": "Shout-Out to Kotlin for Server-Side Content Creators! ",
        "link": "https://blog.jetbrains.com/kotlin/2025/03/shout-out-to-kotlin-for-server-side-content-creators",
        "pubDate": "Tue, 18 Mar 2025 13:13:03 +0000",
        "content:encodedSnippet": "If you’re using Kotlin for server-side development and sharing your experiences – whether through blog posts, videos, or sample projects – know that we see you, and we want to highlight your work!\nRecent picks from the community\n📖 [Article] From Java to Kotlin — a practical example of how to convert code – Paul Newport shows how to convert Java code to idiomatic Kotlin, improve null safety, and migrate tests to Kotest.\n🎥 [Video series] Ktor Server Fundamentals – Akash Kamati covers Ktor fundamentals, routing, authentication, and more to help you build robust backend applications with Kotlin.\n🎥 [Video series]  Ktor and MongoDB – Akash Kamati walks through setting up MongoDB with Ktor, covering CRUD operations, full-text search, aggregation, and query optimization for scalable Kotlin applications.\n💻 [Project] Kotlin WoT & Agent ReaCtor (ARC) Framework – Robert Winkler is developing a Kotlin-based client/server framework for AI agents and tools, integrating W3C WoT compatibility with Ktor.\n📖 [Article] Integrating Firebase JWT token verification in Ktor – Part 1 – Jamie Craane explains how to integrate Firebase JWT authentication in Ktor, covering secure token verification, authentication setup, and best practices for handling JWTs.\n📖 [Article] Integrating Firebase JWT token verification in Ktor – Part 2 – In part two, Jamie Craane explores linking Firebase users to a database, using custom tokens, Exposed SQL, and Kotlin context. \n💻 [Project]  Stove – E2E Testing for JVM Backends – Oğuzhan Soykan introduces Stove, a Kotlin-based framework for testing Ktor, Spring Boot, and Micronaut, with built-in support for Kafka, PostgreSQL, and more.\nIf you’re creating something like this, we’d love to see it!\nWhat’s in it for you?\nCreating high-quality content takes time and effort, and we want to make sure it gets the recognition it deserves. Every few months, the Kotlin team will pick standout content and help amplify it by:\nFeaturing it on the Kotlin blog.\nSharing it on @Kotlin X, Kotlin Slack (get an invite here), and YouTube.\nNeed content ideas?\nNot sure what to cover? Here are some of the most requested topics:\nBest practices for using Kotlin in backend development.\nMigrating an existing Java Spring backend to Kotlin.\nOptimizing microservices with Kotlin.\nBuilding with Ktor or Spring Boot in Kotlin.\nUsing Kotlin for AI-powered backend systems.\nOf course, these are just suggestions – if you’ve got insights or experiences to share, we’d love to see them!\nHow to share your work\nTo make your content easier to find, use the tag #KotlinServerSide on platforms that support it.\nWe’re excited to see what you create!",
        "dc:creator": "Alyona Chernyaeva",
        "content": "If you&#8217;re using Kotlin for server-side development and sharing your experiences – whether through blog posts, videos, or sample projects – know that we see you, and we want to highlight your work! Recent picks from the community 📖 [Article] From Java to Kotlin — a practical example of how to convert code – Paul [&#8230;]",
        "contentSnippet": "If you’re using Kotlin for server-side development and sharing your experiences – whether through blog posts, videos, or sample projects – know that we see you, and we want to highlight your work! Recent picks from the community 📖 [Article] From Java to Kotlin — a practical example of how to convert code – Paul […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=553532",
        "isoDate": "2025-03-18T13:13:03.000Z"
      },
      {
        "creator": "Irina Mariasova",
        "title": "AI Code Completion: Less Is More",
        "link": "https://blog.jetbrains.com/ai/2025/03/ai-code-completion-less-is-more",
        "pubDate": "Tue, 18 Mar 2025 10:55:26 +0000",
        "content:encodedSnippet": "If you’ve been following our journey, you might’ve read our recent blog post on the Complete the Un-Completable: The State of AI Completion in JetBrains IDEs. From that post, you might remember this cool chart on code completions. In April, something exciting happened: our acceptance rate went up while the explicit cancel rate dropped.\n\n\n\n\nIn this blog post, we’ll break down why and how we got the results without retraining our generation model. \nMan shall not live on LLM alone\nThe LLM that provides your code suggestions is the heart of AI-powered code completion, but it’s not the whole show. There’s a ton happening behind the scenes, in particular on the plugin side, like deciding:\nWhen to show a suggestion. \nIf a suggestion should be single-line or multi-line.\nWhich suggestions to show or conceal – for instance, a suggestion could be semantically incorrect, score too low, or use offensive or inappropriate language. \nBut sometimes, defining the filtering rules is not that straightforward.\nWhat we are trying to achieve\nSimply put, we want to show you only the suggestions you’ll actually use. That means fewer unwanted suggestions – ones you’ll cancel, edit, or delete – without losing the power of our code completion feature. In terms of metrics, we’re working to: \nIncrease the acceptance rate.\nCut down the explicit cancel rate and the percentage of edited/deleted suggestions.\nMaintain or increase the ratio of completed code. \nAll you need is logs\nSo, how do we achieve all of this? The obvious answer is to improve the completion model. \nHowever, it’s not that simple:\nIt’s expensive and time-consuming. Training a better model takes a lot of resources.\nWe can’t see where things go wrong. We don’t store users’ code, so we can’t analyze bad suggestions.\nContext alone isn’t enough – things like user behavior and how a suggestion fits with nearby lines also matter.\nLightweight local filter model\nInstead of going down that long road of improving the completion LLM, we took a different approach: a lightweight local filter model.\nThis model runs on top of the completion LLM and is trained using anonymized logs.\nThe model helps decide whether a suggestion should be shown by analyzing:\nContext: The file/project context (like the language used as well as the number and type of imports) and the completion context (like features that describe a caret location). \nUser behavior: The typing speed and the time spent since last typing.\nThe suggestion itself: Whether references are resolved, if the suggestion repeats itself or is similar to surrounding lines, and additional model outputs like token scores and token entropy.\n\n\n\n\nThe job of the lightweight local filter model is simple: it decides whether to accept or reject a suggestion based on your actions. However, we’ve guided the model a bit during training. We gave extra weight to explicit user actions, like when you explicitly accept or cancel a suggestion. If you edit or delete a suggestion after accepting it, we treat it as less of a win – the more you change, the less weight it gets.\nTechnically speaking, the model is built with CatBoost, which is efficient and doesn’t need tons of data. The model is specifically designed to be lightweight – once trained, it becomes a compact 2.5 MB file and runs directly in Kotlin on users’ machines, making predictions in 1–2 milliseconds.\nWhat we have achieved\nOur A/B tests in the EAP showed great results, and they’re getting even better. The filter model boosted the acceptance rate by ~50% and cut the explicit cancel rate by ~40%, all while keeping the ratio of completed code steady.\nWe officially rolled out the filter model in version 2024.1 of JetBrains IDEs for a range of languages, including Java, Kotlin, Python, PHP, JavaScript/TypeScript, Go, CSS, and Ruby. In later versions we also covered C#, C++, Rust, and HCL, plus the local filter model for cloud completion with Mellum in Python, Java, and Kotlin. We plan to cover even more languages soon.\nMeanwhile, both the local code completion model and the lightweight local filter model continue to evolve and improve together.\n\n\n\n\nWhat we have learned\nEven if your LLM is already doing a great job, there’s always room for improvement. You don’t always need massive, complex models to make a difference. Sometimes, the smart use of extra data like logs can do the trick. So, what’s next for AI-powered code completion? How far can we push it?\nShare your thoughts and ideas in the comments below!",
        "dc:creator": "Irina Mariasova",
        "content": "If you&#8217;ve been following our journey, you might&#8217;ve read our recent blog post on the Complete the Un-Completable: The State of AI Completion in JetBrains IDEs. From that post, you might remember this cool chart on code completions. In April, something exciting happened: our acceptance rate went up while the explicit cancel rate dropped. In [&#8230;]",
        "contentSnippet": "If you’ve been following our journey, you might’ve read our recent blog post on the Complete the Un-Completable: The State of AI Completion in JetBrains IDEs. From that post, you might remember this cool chart on code completions. In April, something exciting happened: our acceptance rate went up while the explicit cancel rate dropped. In […]",
        "guid": "https://blog.jetbrains.com/?post_type=ai&p=553317",
        "categories": [
          "ai-assistant",
          "ai",
          "ai-code-completion",
          "code-completion",
          "llm"
        ],
        "isoDate": "2025-03-18T10:55:26.000Z"
      },
      {
        "creator": "Maria Kosukhina",
        "title": "IntelliJ IDEA 2024.3.5 Is Out!",
        "link": "https://blog.jetbrains.com/idea/2025/03/intellij-idea-2024-3-5",
        "pubDate": "Tue, 18 Mar 2025 10:38:35 +0000",
        "content:encodedSnippet": "We’ve released another update for v2024.3! \nYou can update to this version from inside the IDE, using the Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our website.\nThis new version that brings the following valuable improvements: \nThe code completion popup once again includes a dropdown menu, allowing for quick access to additional actions and settings. [IJPL-177749]\nYou can now customize the hostname length in HostLabelDropdown, improving usability for infrastructures with longer hostnames. [IJPL-178086]\nBreakpoints in Dart code can once again be set and hit. [IDEA-367839]\n\n\n\n\nTo see the full list of issues addressed in this version, please refer to the release notes. \nIf you encounter any issues, please submit a report using our issue tracker. \nHappy developing!",
        "dc:creator": "Maria Kosukhina",
        "content": "We’ve released another update for v2024.3! You can update to this version from inside the IDE, using the&#160;Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our&#160;website. This new version that brings the following valuable improvements:&#160; To see the full list of issues addressed in this [&#8230;]",
        "contentSnippet": "We’ve released another update for v2024.3! You can update to this version from inside the IDE, using the Toolbox App, or by using snaps if you are a Ubuntu user. You can also download it from our website. This new version that brings the following valuable improvements:  To see the full list of issues addressed in this […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=552833",
        "categories": [
          "releases",
          "2024-3",
          "bug-fix-update",
          "intellij-idea-2024-3"
        ],
        "isoDate": "2025-03-18T10:38:35.000Z"
      },
      {
        "creator": "Sue",
        "title": "数据科学中的数据清理",
        "link": "https://blog.jetbrains.com/pycharm/2025/03/data-cleaning-in-data-science",
        "pubDate": "Tue, 18 Mar 2025 10:00:12 +0000",
        "content:encodedSnippet": "在本数据科学博文系列中，我们探讨了从哪里获取数据以及如何使用 pandas 探索数据，不过虽然这些数据对于学习非常有用，但它与我们所说的真实世界数据并不相似。 用于学习的数据通常已经过清理和整理，方便您快速学习而不必考虑数据清理，但真实世界数据存在问题并且很混乱。 真实世界数据需要清理才能提供有用的洞察，这就是本文的主题。 \n数据问题可能来自数据本身的行为、数据收集方式，甚至是数据输入方式。 流程的每个阶段都可能发生错误和疏忽。 \n我们在这里专门讨论数据清理而不是数据转换。 数据清理可以确保您从数据中得出的结论可以泛化到您定义的总体。 数据转换则涉及转换数据格式、对数据进行归一化和聚合数据等任务。 \n数据清理为什么重要？\n关于数据集，我们首先需要了解的是它们代表什么。 大多数数据集都是代表更广泛总体的样本，通过处理此样本，您能够将发现外推（或泛化）到该总体。 例如，我们在前两篇博文中使用了一个数据集。 这个数据集广泛涉及房屋销售，但只覆盖一小块地理区域、一小段时间，并且可能不是该区域和时间段内的所有房屋；它是一个更大总体的样本。 \n您的数据需要是更广泛总体的代表性样本，例如该地区在一段规定时间内的所有房屋销售情况。 为了确保我们的数据是更广泛总体的代表性样本，我们必须首先定义总体的边界。 \n您可能会想到，除了人口普查数据以外，使用整个总体往往不切实际，因此您需要确定您的边界。 这些边界可能是地理的、人口统计的、基于时间的、基于行动的（例如事务性）或特定于行业的。 您可以通过多种方式定义总体，但要可靠地泛化数据，必须在清理数据之前进行定义。\n总体而言，如果您计划将数据用于任何类型的分析或机器学习，您都需要花时间清理数据，确保您可以依赖您的洞察并将其泛化到真实世界。 清理数据可以获得更准确的分析，并且在机器学习方面也可以提高性能。\n如果不清理数据，您会面临许多风险，例如无法将研究结果可靠地泛化到更广泛的总体、不准确的汇总统计信息和不正确的可视化效果。 如果您使用数据训练机器学习模型，这也可能导致错误和不准确的预测。\n\n免费试用 PyCharm Professional\n\n数据清理示例\n我们将介绍可用于清理数据的五项任务。 这份列表并不完整，但对于处理真实世界数据是一个很好的起点。\n对数据去重\n重复问题会扭曲您的数据。 假设，您正在绘制一个使用销售价格频率的直方图。 如果有相同值的重复项，最终会得到一个基于重复价格的不准确模式的直方图。 \n另外，当我们谈论数据集中的重复问题时，我们谈论的是整行的重复，每一行都是一个单独的观察值。 列中将有重复值，如我们所预料。 我们只谈论重复观察值。 \n好在我们可以使用一种 pandas 方法帮助我们检测数据中是否存在重复项。 如果需要提醒，我们可以使用 JetBrains AI 聊天编写提示，例如：\nCode to identify duplicate rows\n得到代码：\nduplicate_rows = df[df.duplicated()]\nduplicate_rows\n此代码假定您的 DataFrame 名为 df，因此如果不是这个名字，应该将其更改为 DataFrame 的名称。 \n我们一直在使用的 Ames Housing 数据集中没有重复数据，但如果您想尝试，可以选择 CITES Wildlife Trade Database 数据集，看看是否可以使用上述 pandas 方法找到重复项。\n在数据集中发现重复项后，必须将其移除，避免扭曲结果。 您同样可以使用 JetBrains AI 为此获取代码，提示如下：\nCode to drop duplicates from my dataframe \n生成的代码会删除重复项，重置 DataFrame 的索引，然后将其显示为名为 df_cleaned 的新 DataFrame：\ndf_cleaned = df.drop_duplicates()\ndf_cleaned.reset_index(drop=True, inplace=True)\ndf_cleaned\n还有其他 pandas 函数可用于更高级的重复项管理，但这已经足以让您开始对数据集进行去重。\n处理不合理值\n当数据输入错误或数据收集过程中出现问题时，可能会出现不合理值。 对于我们的 Ames Housing 数据集，不合理值可能是负的 SalePrice，或者 Roof Style 的数字值。\n要发现数据集中的不合理值，需要采取广泛的方式，包括查看汇总统计信息、检查收集器为每列定义的数据验证规则、注意不在验证范围内的任何数据点，以及使用可视化效果确定模式和看起来可能异常的情况。 \n您需要处理不合理值，因为它们会增加噪音并给分析带来问题。 不过，如何处理这些值则需要视情况而定。 如果相对于数据集大小没有太多不合理值，您可以移除包含它们的记录。 例如，如果在数据集的第 214 行中发现了一个不合理值，您可以使用 pandas drop 函数从数据集中移除该行。 \n同样，我们可以使用提示让 JetBrains AI 生成我们需要的代码： \nCode that drops index 214 from #df_cleaned\n注意，在 PyCharm 的 Jupyter Notebook 中，我可以在单词前加上 # 符号，向 JetBrains AI Assistant 表明我正在提供额外上下文，在本例中，DataFrame 被称为 df_cleaned。\n生成的代码将从 DataFrame 中移除该观察值，重置索引并显示：\ndf_cleaned = df_cleaned.drop(index=214)\ndf_cleaned.reset_index(drop=True, inplace=True)\ndf_cleaned\n处理不合理值的另一种常用策略是插补，即根据定义的策略用不同的合理值替换该值。 最常见的策略之一是使用中位值替换不合理值。 由于中位数不受异常值影响，数据科学家通常为此目的选择它，但同样，在某些情况下，数据的平均值或众数值可能更合适。 \n或者，如果您具有关于数据集以及数据收集方式的领域知识，可以用更有意义的值替换不合理值。 如果您参与或了解数据收集流程，这个选项可能更合适。 \n不合理值的处理取决于它们在数据集中的普遍性、数据的收集方式和您打算如何定义总体以及领域知识等其他因素。 \n格式化数据\n您经常可以在汇总统计信息或为了解数据形状而执行的早期可视化中发现格式设置问题。 格式不一致的一些例子包括数字值没有全部定义到相同的小数位，或拼写方面的差异，例如“first”和“1st”。 不正确的数据格式设置也会对数据的内存占用产生影响。\n发现数据集中的格式设置问题后，就需要将值标准化。 根据面临的问题，这通常涉及定义您自己的标准和应用更改。 同样，pandas 库在这里有一些有用的函数，例如 round。 如果要将 SalePrice 列四舍五入到小数点后 2 位，我们可以让 JetBrains AI 生成代码：\nCode to round #SalePrice to two decimal places \n生成的代码将执行舍入，然后打印出前 10 行以供检查：\ndf_cleaned['SalePrice'] = df_cleaned['SalePrice].round(2)\ndf_cleaned.head()\n再举一个拼写可能不一致的例子 – 例如，HouseStyle 列同时包含“1Story”和“OneStory”，并且您确信它们是同一个意思。 可以使用以下提示获取代码：\nCode to change all instances of #OneStory to #1Story in #HouseStyle \n生成的代码会将 OneStory 的所有实例替换为 1Story：\ndf_cleaned[HouseStyle'] = df_cleaned['HouseStyle'].replace('OneStory', '1Story')\n解决异常值\n异常值在数据集中非常常见，但如何处理它们（如果有）则非常依赖于具体情况。 发现异常值的最简单方式之一是使用箱线图，它使用 seaborn 和 matplotlib 库。 如果您需要快速回顾，我先前在关于使用 pandas 探索数据的博文中探讨过箱线图。 \n对于这个箱线图，我们将查看 Ames Housing 数据集中的 SalePrice。 同样，我将使用 JetBrains AI 生成代码，给出如下提示：\nCode to create a box plot of #SalePrice \n以下是我们需要运行的代码：\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Create a box plot for SalePrice\nplt.figure(figsize=(10, 6))\nsns.boxplot(x=df_cleaned['SalePrice'])\nplt.title('Box Plot of SalePrice')\nplt.xlabel('SalePrice')\nplt.show()\n箱线图告诉我们有一个正偏斜，因为蓝色框内的垂直中线位于中心的左侧。 正偏斜告诉我们，较低端的房价更多，这并不奇怪。 箱线图还直观地告诉我们右侧有很多异常值。 这些房屋的数量很少，但其价格却远高于中位价格。\n\n您可能会接受这些异常值，因为预计少数房屋的价格高于大多数房屋的价格是很正常的。 不过，这完全取决于您想要泛化到的总体以及您想要从数据中得出的结论。 明确界定什么是总体的一部分、什么不是总体的一部分，可以让您做出明智的决定，判断数据中的异常值是否会成为问题。 \n例如，如果总体由不会购买昂贵豪宅的人群组成，那么您可能可以删除这些异常值。 如果总体人口结构中包括可能购买这些昂贵房屋的人群，那么您可能应该将它们保留，因为它们与您的总体相关。\n我在这里讲解了箱线图作为发现异常值的方式，但散点图和直方图等选项也可以快速显示数据中是否存在异常值，让您做出明智的决定，判断是否需要对它们采取任何措施。\n解决异常值通常分为两类 – 将其删除或使用不易出现异常值的汇总统计信息。 首先，我们需要确切知道它们是哪些行。 \n到目前为止，我们只讨论了如何通过视觉识别。 还有不同的方式来确定哪些观察值是异常值，哪些不是异常值。 一种常见的方式是使用修正 Z 分数。 在我们了解如何以及为何修正之前，Z 分数定义为：\nZ 分数 = (数据点值 – 平均值) / 标准差\n修正 Z 分数来检测异常值的原因是，平均值和标准差由于计算方式都容易受到异常值的影响。 修正 Z 分数定义为：\n修正 Z 分数 = (数据点值 – 中位数) / 绝对偏差中位数\n正如我们在讨论汇总统计信息时所了解到的，中位数不受异常值影响。 绝对偏差中位数是数据集与中位数的绝对偏差的中位值。 例如，如果数据集包含以下值：\n1, 2, 2, 2, 3, 3, 3, 5,9\n那么中位数就是 3，即数据集中间的值。 与中位值 3 的偏差按上面列出的顺序如下：\n2, 1, 1, 1, 0, 0, 0, 2, 5\n按升序排列：\n0, 0, 0, 1, 1, 1, 2, 2, 5\n这意味着此示例中的绝对偏差中位数为 1。\n如何计算 SalePrice 数据集的修正 Z 分数？ 向 JetBrains AI 提供以下提示：\nGiven:\nModified Z-score = (data point value – median) / median absolute deviation\nCalculate the Modified Z-score for #SalePrice \n这会产生以下代码：\nimport pandas as pd\nfrom scipy.stats import median_abs_deviation\n\n\n# Assuming 'data' is your DataFrame and it contains the 'SalePrice' column\n\n\n# Calculate the median for the SalePrice column\nmedian_sale_price = data['SalePrice'].median()\n\n\n# Calculate the Median Absolute Deviation (MAD) for the SalePrice column\nmad_sale_price = median_abs_deviation(data['SalePrice'], scale='normal')\n\n\n# Calculate the Modified Z-scores for the SalePrice column\ndata['Modified_Z_Score'] = (data['SalePrice'] - median_sale_price) / mad_sale_price\n\n\n# Display the first few rows with the Modified Z-scores\nprint(data[['SalePrice', 'Modified_Z_Score']].head())\n安装所需软件包并运行此代码后，我们可以看到我们已经完成了一部分，但现在我们需要根据修正 Z 分数来确定 SalePrice 的异常值。 一般观点是，异常值是任何 >=3 或 <=-3 的值，不过，值得注意的是，像大多数统计决策一样，它可以并且应当根据您的数据集进行调整。 <=-3 however, it’s worth noting that like most statistical decisions, it can and should be tailored to your dataset. \n我们再给 JetBrains AI 传递一个提示，进一步定制输出：\nJust list those that have a #Modified_Z_Score of 3 or above or -3 or below \n我将选取这段代码，把它替换为上面的相关行：\n# Filter the rows where the Modified Z-score is 3 or above, or -3 or below\noutliers = data[(data['Modified_Z_Score'] >= 3) | (data['Modified_Z_Score'] <= -3)]\n\n\n# Print all the filtered rows, showing their index and SalePrice\noutliers = (outliers[['SalePrice', 'Modified_Z_Score']])\noutliers\n我修改了这段代码，将异常值保存在名为 outliers 的新 DataFrame 中并将其打印出来以供查看。 \n下一步是从 DataFrame 中移除这些异常值。 我们再次使用 JetBrains AI 生成代码，提示如下：\nCreate a new dataframe without the outliers \ndata_without_outliers = data.drop(index=outliers.index)\n\n\n# Display the new DataFrame without outliers\nprint(data_without_outliers)\n我们的新 DataFrame (data_without_outliers) 排除了那些 SalePrice 变量被视为异常值的值。 \n我们可以更新箱线图代码来查看新的 DataFrame。 如我们的预期，它仍然显示出正偏斜，但被视为异常值的值已被移除：\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Create a box plot for SalePrice\nplt.figure(figsize=(10, 6))\nsns.boxplot(x=data_without_outliers['SalePrice'])\nplt.title('Box Plot of SalePrice')\nplt.xlabel('SalePrice')\nplt.show()\n\n在结束之前，我们看一下从 DataFrame 中移除的观察值占比是多少，因为我们根据 SalePrice 将它们视为异常值。\n我们可以使用如下提示：\nCalculate the percentage of observations removed between #data and #data_without_outliers\n# Calculate the number of observations in the original and filtered DataFrames\noriginal_count = len(data)\nfiltered_count = len(data_without_outliers)\n\n# Calculate the number of removed observations\nremoved_count = original_count - filtered_count\n\n# Calculate the percentage of observations removed\npercentage_removed = (removed_count / original_count) * 100\n\n# Display the percentage\nprint(f\"Percentage of observations removed: {percentage_removed:.2f}%\")\nPyCharm 告诉我们 5.67% 的观察值已被移除。\n如前所述，如果要保留异常值，可以使用中位数和四分位距等不易受异常值影响的汇总值。 如果您知道处理的数据集包含未移除的异常值，因为它们与您定义的总体和想要得出的结论相关，您可以使用这些测量值来得出结论。\n缺失值\n发现数据集中缺失值的最快方式是使用汇总统计信息。 提醒一下，在 DataFrame 中，点击右侧的 Show Column Statistics（显示列统计信息），然后选择 Compact（紧凑）。 列中的缺失值以红色显示，如我们的 Ames Housing 数据集中的 Lot Frontage 所示：\n\n对于我们的数据，我们需要考虑三种缺失：\n完全随机缺失\n随机缺失\n非随机缺失\n完全随机缺失\n完全随机缺失意味着数据完全偶然缺失，并且缺失的事实与数据集中的其他变量无关。 例如，有人忘记回答调查问题时，就会发生这种情况。 \n完全随机缺失的数据很少见，但也是最容易处理的数据之一。 如果有相对较少的观察值完全随机缺失，最常见的方式是删除这些观察值，因为这样不会影响数据集的完整性，从而不会影响您希望得出的结论。 \n随机缺失\n随机缺失看起来没有模式，但我们可以通过测量的其他变量来解释这种模式。 例如，有人由于数据收集方式没有回答调查问题。\n再来看我们的 Ames Housing 数据集，对于某些房地产中介出售的房屋，也许 Lot Frontage 变量缺失的频率更高。 在这种情况下，这种缺失可能是由于某些机构的数据录入做法不一致造成的。 如果属实，那么 Lot Frontage 数据的缺失与出售该房产的机构收集数据的方式有关（这是一个观察到的特征），而与 Lot Frontage 本身无关。 \n当数据随机缺失时，您会想了解数据缺失的原因，这通常需要深入探究数据的收集方式。 了解数据缺失原因后，就可以选择要采取的操作。 处理随机缺失的一种常见方式是插补值。 我们已经针对不合理值探讨过这种方式，但它也是一个解决缺失的有效策略。 根据定义的总体和想要得出的结论，您可以选择多种选项，在此示例中包括使用房屋大小、建造年份和销售价格等相关变量。 如果您了解缺失数据背后的模式，您通常可以使用上下文信息插补值，从而确保数据集中数据之间的关系得以保留。  \n非随机缺失\n最后，非随机缺失是指缺失数据的可能性与未观察到的数据有关。 这意味着缺失取决于未观察到的数据。 \n我们最后一次回到 Ames Housing 数据集以及我们在 Lot Frontage 中缺失数据的事实。 一种非随机数据缺失的情况是卖家认为 Lot Frontage 较小，故意选择不报告，因为报告可能会降低房价。 如果 Lot Frontage 数据缺失的可能性取决于正面本身的大小（未观察到），更小的地块正面被报告的可能性更小，意味着缺失与缺失值直接相关。\n直观呈现缺失\n每当数据缺失时，您都需要确定是否存在模式。 如果存在模式，那么在泛化数据之前您很可能必须解决这个问题。 \n寻找模式的最简单方式之一是使用热图可视化。 在进入代码之前，我们先排除没有缺失的变量。 我们可以提示 JetBrains AI 生成代码：\nCode to create a new dataframe that contains only columns with missingness \n得到代码：\n# Identify columns with any missing values\ncolumns_with_missing = data.columns[data.isnull().any()]\n\n# Create a new DataFrame with only columns that have missing values\ndata_with_missingness = data[columns_with_missing]\n\n# Display the new DataFrame\nprint(data_with_missingness)\n运行代码之前，更改最后一行，以便我们可以从 PyCharm 的 DataFrame 布局中受益：\ndata_with_missingness\n现在该创建热图了，我们将再次提示 JetBrains AI 生成代码：\nCreate a heatmap of #data_with_missingness that is transposed\n得到代码：\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Transpose the data_with_missingness DataFrame\ntransposed_data = data_with_missingness.T\n\n\n# Create a heatmap to visualize missingness\nplt.figure(figsize=(12, 8))\nsns.heatmap(transposed_data.isnull(), cbar=False, yticklabels=True)\nplt.title('Missing Data Heatmap (Transposed)')\nplt.xlabel('Instances')\nplt.ylabel('Features')\nplt.tight_layout()\nplt.show()\n请注意，我从热图实参中移除了 cmap=’viridis’，因为我感觉它难以查看。 \n\n热图表明可能存在缺失模式，因为相同的变量在多行中缺失。 在一组中，我们可以看到 Bsmt Qual、Bsmt Cond、Bsmt Exposure、BsmtFin Type 1 和 Bsmt Fin Type 2 在相同的观察值中全部缺失。 在另一组中，我们可以看到相同的观察值中缺失 Garage Type、Garage Yr Bit、Garage Finish、Garage Qual 和 Garage Cond。\n这些变量都与地下室和车库有关，但还有其他与车库或地下室相关的变量并没有缺失。 一种可能的解释是，在收集数据时，不同房产中介对车库和地下室提出了不同的问题，而且并非所有中介都在数据库中记录了尽可能多的详细信息。 这种情况在您没有自行收集的数据上很常见，如果您需要详细了解数据集中的缺失，可以探索数据的收集方式。\n数据清理的最佳做法\n如前所述，定义总体是数据清理最佳做法的重点。 开始清理数据之前，您应该清楚自己想要实现什么以及如何泛化数据。 \n您需要确保所有方法都可重现，因为可重现性也说明数据干净。 不可重现的情况后续可能产生重大影响。 因此，我建议保持 Jupyter Notebook 整洁有序，同时利用 Markdown 功能记录每一步决策，特别是在清理时。 \n清理数据时，您应当逐步进行，修改 DataFrame 而不是原始 CSV 文件或数据库，并确保使用可重现、记录良好的代码完成所有操作。\n总结\n数据清理是一个很大的话题，可能存在很多挑战。 数据集越大，清理过程就越具有挑战性。 您需要注意总体以更广泛地泛化结论，同时在移除和插补缺失值之间取得平衡，并理解数据缺失的根本原因。 \n您可以把自己想象成数据的声音。 您了解数据的历程以及如何在各个阶段维护数据完整性。 您是记录这段历程并与他人分享的最佳人选。 \n\n免费试用 PyCharm Professional\n\n\n\n\n\n本博文英文原作者：\nHelen Scott",
        "dc:creator": "Sue",
        "content": "在本数据科学博文系列中，我们探讨了从哪里获取数据以及如何使用 pandas 探索数据，不过虽然这些数据对于学习非常有用，但它与我们所说的真实世界数据并不相似。 用于学习的数据通常已经过清理和整理，方便您快速学习而不必考虑数据清理，但真实世界数据存在问题并且很混乱。 真实世界数据需要清理才能提供有用的洞察，这就是本文的主题。  数据问题可能来自数据本身的行为、数据收集方式，甚至是数据输入方式。 流程的每个阶段都可能发生错误和疏忽。  我们在这里专门讨论数据清理而不是数据转换。 数据清理可以确保您从数据中得出的结论可以泛化到您定义的总体。 数据转换则涉及转换数据格式、对数据进行归一化和聚合数据等任务。  数据清理为什么重要？ 关于数据集，我们首先需要了解的是它们代表什么。 大多数数据集都是代表更广泛总体的样本，通过处理此样本，您能够将发现外推（或泛化）到该总体。 例如，我们在前两篇博文中使用了一个数据集。 这个数据集广泛涉及房屋销售，但只覆盖一小块地理区域、一小段时间，并且可能不是该区域和时间段内的所有房屋；它是一个更大总体的样本。  您的数据需要是更广泛总体的代表性样本，例如该地区在一段规定时间内的所有房屋销售情况。 为了确保我们的数据是更广泛总体的代表性样本，我们必须首先定义总体的边界。  您可能会想到，除了人口普查数据以外，使用整个总体往往不切实际，因此您需要确定您的边界。 这些边界可能是地理的、人口统计的、基于时间的、基于行动的（例如事务性）或特定于行业的。 您可以通过多种方式定义总体，但要可靠地泛化数据，必须在清理数据之前进行定义。 总体而言，如果您计划将数据用于任何类型的分析或机器学习，您都需要花时间清理数据，确保您可以依赖您的洞察并将其泛化到真实世界。 清理数据可以获得更准确的分析，并且在机器学习方面也可以提高性能。 如果不清理数据，您会面临许多风险，例如无法将研究结果可靠地泛化到更广泛的总体、不准确的汇总统计信息和不正确的可视化效果。 如果您使用数据训练机器学习模型，这也可能导致错误和不准确的预测。 免费试用 PyCharm Professional 数据清理示例 我们将介绍可用于清理数据的五项任务。 这份列表并不完整，但对于处理真实世界数据是一个很好的起点。 对数据去重 重复问题会扭曲您的数据。 假设，您正在绘制一个使用销售价格频率的直方图。 如果有相同值的重复项，最终会得到一个基于重复价格的不准确模式的直方图。  另外，当我们谈论数据集中的重复问题时，我们谈论的是整行的重复，每一行都是一个单独的观察值。 列中将有重复值，如我们所预料。 我们只谈论重复观察值。  好在我们可以使用一种 pandas 方法帮助我们检测数据中是否存在重复项。 如果需要提醒，我们可以使用 JetBrains AI 聊天编写提示，例如： Code to identify duplicate rows 得到代码： duplicate_rows = df[df.duplicated()] duplicate_rows 此代码假定您的 [&#8230;]",
        "contentSnippet": "在本数据科学博文系列中，我们探讨了从哪里获取数据以及如何使用 pandas 探索数据，不过虽然这些数据对于学习非常有用，但它与我们所说的真实世界数据并不相似。 用于学习的数据通常已经过清理和整理，方便您快速学习而不必考虑数据清理，但真实世界数据存在问题并且很混乱。 真实世界数据需要清理才能提供有用的洞察，这就是本文的主题。  数据问题可能来自数据本身的行为、数据收集方式，甚至是数据输入方式。 流程的每个阶段都可能发生错误和疏忽。  我们在这里专门讨论数据清理而不是数据转换。 数据清理可以确保您从数据中得出的结论可以泛化到您定义的总体。 数据转换则涉及转换数据格式、对数据进行归一化和聚合数据等任务。  数据清理为什么重要？ 关于数据集，我们首先需要了解的是它们代表什么。 大多数数据集都是代表更广泛总体的样本，通过处理此样本，您能够将发现外推（或泛化）到该总体。 例如，我们在前两篇博文中使用了一个数据集。 这个数据集广泛涉及房屋销售，但只覆盖一小块地理区域、一小段时间，并且可能不是该区域和时间段内的所有房屋；它是一个更大总体的样本。  您的数据需要是更广泛总体的代表性样本，例如该地区在一段规定时间内的所有房屋销售情况。 为了确保我们的数据是更广泛总体的代表性样本，我们必须首先定义总体的边界。  您可能会想到，除了人口普查数据以外，使用整个总体往往不切实际，因此您需要确定您的边界。 这些边界可能是地理的、人口统计的、基于时间的、基于行动的（例如事务性）或特定于行业的。 您可以通过多种方式定义总体，但要可靠地泛化数据，必须在清理数据之前进行定义。 总体而言，如果您计划将数据用于任何类型的分析或机器学习，您都需要花时间清理数据，确保您可以依赖您的洞察并将其泛化到真实世界。 清理数据可以获得更准确的分析，并且在机器学习方面也可以提高性能。 如果不清理数据，您会面临许多风险，例如无法将研究结果可靠地泛化到更广泛的总体、不准确的汇总统计信息和不正确的可视化效果。 如果您使用数据训练机器学习模型，这也可能导致错误和不准确的预测。 免费试用 PyCharm Professional 数据清理示例 我们将介绍可用于清理数据的五项任务。 这份列表并不完整，但对于处理真实世界数据是一个很好的起点。 对数据去重 重复问题会扭曲您的数据。 假设，您正在绘制一个使用销售价格频率的直方图。 如果有相同值的重复项，最终会得到一个基于重复价格的不准确模式的直方图。  另外，当我们谈论数据集中的重复问题时，我们谈论的是整行的重复，每一行都是一个单独的观察值。 列中将有重复值，如我们所预料。 我们只谈论重复观察值。  好在我们可以使用一种 pandas 方法帮助我们检测数据中是否存在重复项。 如果需要提醒，我们可以使用 JetBrains AI 聊天编写提示，例如： Code to identify duplicate rows 得到代码： duplicate_rows = df[df.duplicated()] duplicate_rows 此代码假定您的 […]",
        "guid": "https://blog.jetbrains.com/?post_type=pycharm&p=550137",
        "categories": [
          "data-science"
        ],
        "isoDate": "2025-03-18T10:00:12.000Z"
      },
      {
        "creator": "Mala Gupta",
        "title": "Java 24 and IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/03/java-24-and-intellij-idea",
        "pubDate": "Tue, 18 Mar 2025 08:35:35 +0000",
        "content:encodedSnippet": "IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases!\nI’m often asked, “What’s the best feature of Java 24?” My answer? Why pick just one? 🙂\nJava 24 continues to enhance the language with improvements like Simple source files and instance main methods, Primitive Types in Patterns, instanceof, and switch, Module Import Declarations, Flexible constructor bodies, and API enhancements such as Stream Gatherers – plus many more.\nOne of Java’s greatest strengths is its predictable six-month release cadence, allowing developers to explore both production and preview features regularly. However, keeping up with new features every six months can feel overwhelming. In this blog post, I’ll walk you through a few key Java 24 features – what they are, how you can use them, and how IntelliJ IDEA supports them. But first, let’s make sure you have the right setup in place.\nSimple source files and instance main methods (JEP 495)\nImplicit classes and import statements, shorter main() method, ‘println()’, to output values – make it easier for beginners to get started in Java. If you are an experienced developer, these features can help you create scripts, games, and utilities using fewer lines of code.\nIf you are new to this feature, I’d recommend you to check out my introductory blog post – Java 24: ‘HelloWorld’ and ‘main()’ meet minimalistic and detailed blog post – Java 24: Build Games, Prototypes, Utilities, and More –With Less Boilerplate, that talks about its practical use cases. This feature can not only help new developers get started with writing programs like simple calculations, printing patterns, enjoy joy of programming by creating simple console and gui based games, but also help create utilities for experienced developers such as processing files, or access web resources.\nIn this section, I’ll focus on IntelliJ IDEA’s support for this Java feature.\nCreate a simple source file with instance main method\nWhen you use IntelliJ IDEA to create and run your simple files, you could run it like any other executable class (saves you from specifying the compilation or run time command line parameters that you must use otherwise). If you miss setting the language level to 24, IntelliJ IDEA can detect that and prompt you to do so (as shown below):\n\n\n\n\nChanging an implicit class to a regular class\nWhen you are ready to level up and work with other concepts like user defined classes, you might want to convert your implicit classes to a regular class. You can use context action ‘Convert implicitly declared class into regular class‘, as shown below (this action will add relevant import statements):\n\n\n\n\nConverting a regular class to an implicit class\nSometimes a packaged class might be better off as an implicit class because it might not be using the concepts meant for a regular class. If so, you could do that by using the action ‘Convert into implicitly declared class’ (as shown below). During the conversion, IntelliJ IDEA will remove the import statements that are no longer required:\n\n\n\n\nBehind the scenes – implicit class with instance method main()\nBehind the scenes, the Java compiler creates an implicit top level class, with a no-argument constructor, so that these classes don’t need to be treated in a way that is different to the regular classes.\nHere’s a gif that shows a decompiled class for you (via Decompiler feature in IntelliJ IDEA) for the source code file AnimateText.java:\n\n\n\n\nInteracting with console – println() vs. System.out.println() calls\nTo make it simpler for new developers to interact with the console, that is, output messages to console and to read input from it, a new class – java.io.IO was created in Java 23. It contains just a handful of overloaded readln() and println() methods (as shown below):\n\n\n\nClass java.io.IO is automatically imported in implicit classes. So, instead of using System.out.println(), you can now use println() to output messages to a console (and readln() to read from console). Interestingly, println() was added to this class in Java 24.\nOverloaded main method in the implicit class\nWhen you overload main() method in an implicit class, there would be an order of preference to be considered ‘the’ main() method. All of these following methods are valid signatures of main() methods in an implicit class:\npublic static void main(String args[]) {}\npublic void main(String args[]) {}\npublic static void main() {}\nstatic void main() {}\npublic void main() {}\nvoid main() {}\n\n\n\nWhen you have overloaded main() method in your implicit class, IntelliJ IDEA would show the run icon next to the correct or preferred ‘main’ method:\n\n\n\n\nMissing main method in an implicit class\nIf there is no valid main method detected in an implicit class, IntelliJ IDEA could add one for you, as shown in the following gif:\n\n\n\n\nPrimitive Types in Patterns, instanceof, and switch (Preview Feature)\nCurrently in its second preview, the feature Primitive Types in Patterns, instanceof, and switch enhances Java’s pattern matching capabilities by incorporating primitive types across all pattern. This allows you to use primitive type patterns directly with instanceof and switch expressions (which was earlier restricted to objects), streamlining code and reducing the need for manual type conversions.\nA quick example\nThis feature enables you to use primitive types in switch expressions with guard patterns, as follows:\npublic String getHTTPCodeDesc(int code) {\n   return switch(code) {\n       case 100 -> \"Continue\";\n       case 200 -> \"OK\";\n       case 301 -> \"Moved Permanently\";\n       case 302 -> \"Found\";\n       case 400 -> \"Bad Request\";\n       case 500 -> \"Internal Server Error\";\n       case 502 -> \"Bad Gateway\";\n       case int i when i > 100 && i < 200 -> \"Informational\";\n       case int i when i > 200 && i < 300 -> \"Successful\";\n       case int i when i > 302 && i < 400 -> \"Redirection\";\n       case int i when i > 400 && i < 500 -> \"Client Error\";\n       case int i when i > 502 && i < 600 -> \"Server Error\";\n       default                            -> \"Unknown error\";\n   };\n}\n\n\n\nSimilarly, you could use primitives with instanceof operator. \nThis feature is being previewed again without any change. I covered this feature together with how IntelliJ IDEA supports it in my previous blog post – Java 23 and IntelliJ IDEA. I’d suggest you check it out for details. This blog post answers questions, such as what does it mean to add primitive types to Pattern Matching, to multiple examples and robust data flow analysis in IntelliJ IDEA.\nInterview with creators of this feature\nWe also interviewed the owner of this feature, Aggelos Biboudis, Principal Member Technical Staff, Oracle, Brian Goetz, Java language Architect with Oracle, Tagir Valeev, Java Team Technical Lead, JetBrains.\n\n    \nCheck it out to find out the bigger picture of why primitive data types are being added to the Java language and the finer details of the changes they propose. \nModule Import Declarations\nIn its second preview, Module Import Declarations enables you to import all packages exported by a module in a single declaration. It simplifies the reuse of modular libraries without requiring the importing code to be modularized itself. For example, the declaration import module java.base; imports all public top-level classes and interfaces from packages exported by the java.base module, eliminating the need for multiple individual import statements. This improves readability of code, especially when working with extensive APIs.\nA quick example\nImagine your code includes multiple import statements, such as the following:\nimport java.io.*;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.lang.reflect.*;\nimport java.nio.*;\nThese could be replaced by an import module statement, as follows:\nimport java.base.*;\nWhich packages are exported by the module java.base (or other modules)?\nIt is simple to answer this question when you are using IntelliJ IDEA. Click on the module name in the editor or use the relevant shortcut (Go to Declaration or Usages) and you could view the definition of this module to find out all the modules exported by this module. This is shown in the following gif:\n\n\n\n\nInterview with creators of this feature\nWe also interviewed the owner of this feature, GavinBierman, Programming Language Designer at Oracle.\n\n    \nGavin covered the differences between single-type import and type-import-on-demand declarations, explaining what they are and why individuals and organizations prefer one style over the other. He also talked about how the “Module Import Declarations” feature automatically imports on demand from transitive dependencies of modules. He covered ambiguous imports and how to deal with them, name ambiguity, and how to submit relevant feedback on this feature to the teams at OpenJDK. \nFlexible Constructor bodies\nIn its third preview, this feature is useful when a superclass calls a method from its constructor and you want to override this method in a subclass and want to access a field from the subclass inside this method. Previously, the subclass field would not be initialized when the method was called from the superclass constructor. Now it is possible to initialize the field and prevent surprises. Here’s an example code to show this feature:\nabstract class Action {\n   public Action() {\n       System.out.println(\"performing \" + getText());\n   }\n   public abstract String getText();\n}\nclass DoubleAction extends Action {\n   private final String text;\n   private DoubleAction(String text) {\n       this.text = text; // this did not compile before Java 23 with preview features enabled.\n       super();\n   }\n   @Override public String getText() {\n       return text + text;\n   }\n}\n\n\n\nIf you are new to this feature, don’t miss checking out my detailed blog post on this feature, Constructor Makeover in Java 22 | The IntelliJ IDEA Blog, which talks about the why and how of this feature.\nPreview Features\nThe features covered in this blog post are preview and not production features. With Java’s new release cadence of six months, new language features are released as preview features. They may be reintroduced in later Java versions in the second or more preview, with or without changes. Once they are stable enough, they may be added to Java as a standard language feature.\nPreview language features are complete but not permanent, which essentially means that these features are ready to be used by developers, although their finer details could change in future Java releases depending on developer feedback. Unlike an API, language features can’t be deprecated in the future. So, if you have feedback about any of the preview language features, feel free to share it on the JDK mailing list (free registration required).\nBecause of how these features work, IntelliJ IDEA is committed to only supporting preview features for the current JDK. Preview language features can change across Java versions, until they are dropped or added as a standard language feature. Code that uses a preview language feature from an older release of the Java SE Platform might not compile or run on a newer release.\nSummary\nJava 24 introduces key enhancements like Simple Source Files, Primitive Type Patterns, Module Import Declarations, and Flexible Constructor Bodies. IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases!\nWith intelligent assistance, IntelliJ IDEA simplifies adopting Java 24’s features by offering smart code suggestions, seamless conversions, and robust analysis. Its support ensures a smooth development experience as Java evolves.",
        "dc:creator": "Mala Gupta",
        "content": "IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases! I’m often asked, “What’s the best feature of Java 24?” My answer? Why pick just one? 🙂 Java 24 continues to enhance the language with improvements like Simple source files and instance main methods, Primitive Types [&#8230;]",
        "contentSnippet": "IntelliJ IDEA has supported Java 24 since an earlier release, with more enhancements being added in the later releases! I’m often asked, “What’s the best feature of Java 24?” My answer? Why pick just one? 🙂 Java 24 continues to enhance the language with improvements like Simple source files and instance main methods, Primitive Types […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=552955",
        "categories": [
          "idea",
          "java",
          "intellijidea",
          "java24",
          "whatsnew-2"
        ],
        "isoDate": "2025-03-18T08:35:35.000Z"
      },
      {
        "creator": "Helen Scott",
        "title": "データクリーニングとは？データサイエンスで重要な手順とベストプラクティス",
        "link": "https://blog.jetbrains.com/pycharm/2025/03/data-cleaning-in-data-science",
        "pubDate": "Tue, 18 Mar 2025 05:28:36 +0000",
        "content:encodedSnippet": "データサイエンスに関するこのブログ連載記事では、データの入手場所と pandas を使用してそのようなデータを探索する方法について説明してきました。そのようなデータは学習用途に最適ですが、現実世界のデータとはまったく異なっています。 学習用のデータはデータクリーニングとキュレーションが完了した状態で提供されることが多いため、データクリーニングの世界を経験しなくてもすぐに学習に取り掛かることができます。一方、現実世界のデータは問題があり、整理されていないものです。 現実世界のデータの場合、有用なインサイトを得るためには事前にクリーニングを行う必要があります。それが今回のブログ記事のトピックです。\nデータの問題は、データ自体の挙動、データの収集方法、さらにはデータの入力方法によって発生する可能性があります。 ミスや見過ごしは、これらのどの段階においても発生しうるものです。\nここではデータ変換ではなく、データクリーニングに限定して説明しています。 データクリーニングでは、データから導き出した結論を定義した母集団に一般化することができます。 対照的に、データ変換ではデータ形式の変換、データの正規化、データの集計などのタスクが伴います。\nなぜデータクリーニングが重要なのか？データ分析の精度を向上させる理由\nデータベースについて最初に理解する必要があるのは、それが何を代表しているかということです。 ほとんどのデータセットはより幅広い母集団を代表するサンプルであり、このサンプルを処理して得られた結果をその母集団に外挿する（または一般化）できるようになります。 たとえば、前の 2 つのブログ記事では、あるデータセットを使用しました。 そのデータセットは大まかには住宅販売に関するものですが、小さな地理的なエリアと短い期間のみを網羅しているもので、そのエリアと期間内のすべての住宅を網羅していない可能性があります。これが、より大きな母集団のサンプルです。\nデータはより幅広い母集団を代表するサンプルである必要があります。たとえば、定義した期間における対象エリアのすべての住宅販売が挙げられます。 使用するデータを確実により幅広い母集団を代表するサンプルにするには、最初に母集団の境界を定義する必要があります。\nご想像の通り、おそらく国勢調査データを除けば、母集団全体を使って作業するのは往々にして現実的ではありません。そのため、境界をどこに置くのかを決める必要があります。 そのような境界は、地理、人口統計、期間、行動や活動（取引など）、または業界固有のものなどにすることができます。 母集団の定義には多数の方法がありますが、データを確実に一般化するには、データをクリーニングする前に定義しておく必要があります。\n要するに、分析や機械学習などの目的でデータを使用する場合は時間をかけてデータをクリーニングし、インサイトを信頼して現実世界に一般化できるようにする必要があります。 データをクリーニングすると分析の正確性が増し、機械学習においてはパフォーマンスも改善されます。\nデータをクリーニングしなければ学習結果を幅広い母集団に確実に一般化できず、要約統計が不正確になり、不正に可視化されるなどの問題が発生する可能性があります。 データを使用して機械学習モデルをトレーニングしようとしている場合は、それがエラーや不正確な予測の原因になる可能性もあります。\n\nPyCharm Professional を無料で試す\n\nデータクリーニングの具体例 – 5 つの主要手順\nデータのクリーニングに使用できる 5 つのタスクを見てみましょう。 このリストは網羅的なものではありませんが、初めて現実世界のデータに取り掛かる際には役に立つはずです。\nデータの重複排除\n重複はデータを歪める可能性があるため、問題です。 販売価格の出現頻度を使用してヒストグラムを作成していると想像してください。 同じ値が重複している場合、重複した価格に基づいて不正確なパターンのあるヒストグラムが作成されてしまいます。\n補足しておきますが、ここでデータセットの重複が問題であると言う場合は、各行が単一の観測値になっている行そのものが重複していることを指しています。 列には重複した値があっても、それは予想されることです。 ここでは、重複した観測値についてのみ取り上げています。\n幸いにも、データ内の重複を検出するのに役立つ pandas メソッドがあります。 必要であれば、JetBrains AI チャットで以下のようなプロンプトを入力すると、その使用方法を調べることができます。\nCode to identify duplicate rows\n以下の結果が出力されます。\nduplicate_rows = df[df.duplicated()]\nduplicate_rows\nこのコードでは DataFrame が \"df\" という名前である想定になっているため、必要に応じて使用している DataFrame の名前に合わせて変更してください。\nこれまで使用してきた Ames Housing データセットには重複データはありませんが、上記の pandas メソッドを試してみたい方は CITES Wildlife Trade Database データセットに対して使用し、重複の有無を確認してみてください。\nデータセット内に重複が見つかったら、それを除去して結果に歪みが生じないようにする必要があります。 そのためのコードも JetBrains AI で次のプロンプトを使用して得られます。\nCode to drop duplicates from my dataframe \n出力されたコードでは重複が排除され、DataFrame のインデックスがリセットされ、その後に df_cleaned という名前の新しい DataFrame としてデータセットが表示されます。\ndf_cleaned = df.drop_duplicates()\ndf_cleaned.reset_index(drop=True, inplace=True)\ndf_cleaned\nより高度な重複管理に使用できる pandas 関数は他にもありますが、データセットの重複排除が初めての方にはこれで十分です。\nあり得ない値の処理\nデータが誤って入力された場合やデータ収集プロセスで何らかのエラーが発生した場合、あり得ない値が発生する場合があります。 Ames Housing データセットの場合は、マイナスの SalePrice や Roof Style に使用されている数値があり得ない値になるでしょう。\nデータセット内のあり得ない値を特定するには、要約統計を確認する、列ごとに収集者によって定義されたデータ検証ルールを確認する、その検証から外れているデータポイントを記録する、可視化によって異常だと思われるパターンやその他の特徴を特定する、といった多様な手法があります。\nあり得ない値はノイズの混入や分析時の問題の原因となり得るため、処理する必要があります。 ただし、処理方法にはさまざまな解釈があります。 データセットのサイズに比べてあり得ない値の数が多くなければ、そのような値を含むレコードを除去するとよいでしょう。 たとえば、データセットの 214 行目にあり得ない値を見つけた場合、pandas drop 関数でその行をデータセットから除去することができます。\nここでも JetBrains AI で以下のようなプロンプトを使用し、必要なコードを生成できます。\nCode that drops index 214 from #df_cleaned\nPyCharm の Jupyter ノートブックでは、単語の前に # 記号を付けることで、JetBrains AI Assistant に追加のコンテキストを提供していることを示すことができます。ここでは、DataFrame が \"df_cleaned\" という名前であることを示しています。\n生成されたコードでは対象の観測値が DataFrame から除去され、インデックスがリセットされてから表示されます。\ndf_cleaned = df_cleaned.drop(index=214)\ndf_cleaned.reset_index(drop=True, inplace=True)\ndf_cleaned\nあり得ない値を処理する戦略としては、代入を使用するのも一般的です。つまり、あり得ない値を定義された戦略に基づいて別のあり得る値に置き換えるのです。 最も一般的な戦略の 1 つは、あり得ない値の代わりに中央値を使用することです。 中央値は外れ値の影響を受けないため、データサイエンティストにこの目的でよく選ばれていますが、それと同様にデータの平均値やモード値の方が適している場合もあります。\nデータセットとそのデータの収集方法に関する専門知識がある場合は、あり得ない値をより意味のある値に置き換えることもできます。 データ収集プロセスに関わっている場合やそのプロセスを理解している場合は、こちらの方法が適しているかもしれません。\nどの方法を選択してあり得ない値を処理するかは、データセット内でのその値の出現頻度、データの収集方法、母集団の定義方法、および専門知識などの他の要因によって異なります。\nデータの書式\n多くの場合、要約統計や早い段階で可視化を行ってデータの形状に関する概要を把握することで、書式の問題を特定できます。 書式が矛盾している例には、小数点以下の桁数の定義が統一されていない数値や、”first” や “1st” のようなスペルのばらつきが挙げられます。 データの書式が誤っている場合、データのメモリ使用量にも問題が生じる可能性があります。\nデータセット内で書式の問題が見つかった場合は、値を標準化する必要があります。 発生している問題によりますが、通常は独自の標準を定義して変更を適用する必要があります。 これについても、pandas ライブラリには round のような便利な関数が用意されています。 SalesPrice 列を小数点以下 2 桁に丸める場合は、以下のようにして JetBrains AI にそのコードを問い合わせることができます。\nCode to round #SalePrice to two decimal places \n生成されるコードでは丸めが実行され、それを確認できるように最初の 10 行が出力されます。\ndf_cleaned['SalePrice'] = df_cleaned['SalePrice].round(2)\ndf_cleaned.head()\nスペルに矛盾がある場合の例も見てみましょう。たとえば、HouseStyle 列に “1Story” と “OneStory” の両方が存在しており、これらが同じものを意味していることが分かっているとします。 以下のプロンプトを使用すると、この矛盾を解決するためのコードを取得できます。\nCode to change all instances of #OneStory to #1Story in #HouseStyle \n生成されるコードはまさにこの矛盾を解消し、すべての “OneStory” を “1Story” に置き換えます。\ndf_cleaned[HouseStyle'] = df_cleaned['HouseStyle'].replace('OneStory', '1Story')\n外れ値の解決\n外れ値はデータセットではよく発生しますが、その対処方法はコンテキストによって大きく異なります。 外れ値を最も簡単に特定するには箱ひげ図を使用する方法がありますが、これには seaborn ライブラリと matplotlib ライブラリを使用します。 箱ひげ図については、pandas でデータを探索する方法に関する前のブログ記事で説明しています。簡単なおさらいが必要であれば、そちらをご覧ください。\nこの箱ひげ図を使用するため、Ames Housing データセットの SalesPrice を見てみましょう。 ここでも JetBrains AI で以下のようなプロンプトを使ってコードを生成します。\nCode to create a box plot of #SalePrice \n実行すべきコードが以下のように生成されます。\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Create a box plot for SalePrice\nplt.figure(figsize=(10, 6))\nsns.boxplot(x=df_cleaned['SalePrice'])\nplt.title('Box Plot of SalePrice')\nplt.xlabel('SalePrice')\nplt.show()\n箱ひげ図から、青い箱の内側にある縦の中央値の線が中心より左側にあるため、正の歪みがあることが分かります。 正の歪みはより比較的安価な住宅価格が多いことを示していますが、これは驚くべきことではありません。 箱ひげ図からは、右側に外れ値が多いことも視覚的に分かります。 これは、中央価格よりもはるかに高価な少数の住宅があることを示しています。\n\n大多数の住宅よりも高価な小数の住宅があることはよくあることなので、このような外れ値があることは受け入れられるかと思いますが、 すべては一般化する母集団とデータから導き出す結論によって決まります。 母集団に含まれるものと含まれないものに明確な境界を引くことで、データ内の外れ値が問題となるかどうかを情報に基づいて判断できるようになります。\nたとえば、母集団を構成するのが高価な豪邸を購入しない人々なら、そのような外れ値を削除できるかもしれません。 しかし、母集団にこのような高価な住宅を購入する可能性があると合理的に考えられる人が含まれているのなら、このような外れ値は母集団に関連性があるため、残すべきかもしれません。\nここでは箱ひげ図を外れ値の特定方法として取り上げていますが、散布図やヒストグラムなどの他の方法でもデータに外れ値が含まれるかどうかを素早く確認し、外れ値に対処すべきかどうかを情報に基づいて判断できます。\n外れ値の解決方法は一般的に 2 つに分類されます。外れ値を削除するか、外れ値にあまり影響を受けない要約統計を使用するかの 2 つです。 前者の場合、外れ値が実際にどの行であるかを知る必要があります。\nこれまでは外れ値を視覚的に特定する方法について説明してきました。 どの観測値が外れ値であるかどうかを判断するにはさまざまな方法があります。 一般的な方法の 1 つは、修正 Z スコアという手法を使用することです。 Z スコアがどのような理由でどう修正されているのかを見る前に、その基本的な定義が以下であることを知っておきましょう。\nZ スコア = (データポイントの値 – 平均値) / 標準偏差\n外れ値を検出するために Z スコアを修正する理由は、平均値も標準偏差もその計算方法によっては外れ値の影響を受けやすいためです。 修正 Z スコアは以下のように定義されています。\n修正 Z スコア = (データポイントの値 – 中央値) / 中央絶対偏差\n要約統計を取り上げた際に学習したように、中央値は外れ値の影響を受けません。 中央絶対偏差は、データセットの中央値からの絶対偏差の中央値です。 たとえば、データセットに以下の値が含まれているとします。\n1, 2, 2, 2, 3, 3, 3, 5,9\nこの場合、中央値はデータセットの中央にある値である 3 になります。 中央値である 3 からの偏差は、上記の順では以下のようになります。\n2, 1, 1, 1, 0, 0, 0, 2, 5\nこれらの値を昇順に並べ替えます。\n0, 0, 0, 1, 1, 1, 2, 2, 5\nしたがって、この例での中央絶対偏差は 1 となります。\nこの記事の例に使用しているデータセットでは、SalePrice の修正 Z スコアをどのように求められるでしょうか？ JetBrains AI に以下のプロンプトを使用してみましょう。\nGiven:\nModified Z-score = (data point value – median) / median absolute deviation\nCalculate the Modified Z-score for #SalePrice \n以下のコードが生成されます。\nimport pandas as pd\nfrom scipy.stats import median_abs_deviation\n\n\n# Assuming 'data' is your DataFrame and it contains the 'SalePrice' column\n\n\n# Calculate the median for the SalePrice column\nmedian_sale_price = data['SalePrice'].median()\n\n\n# Calculate the Median Absolute Deviation (MAD) for the SalePrice column\nmad_sale_price = median_abs_deviation(data['SalePrice'], scale='normal')\n\n\n# Calculate the Modified Z-scores for the SalePrice column\ndata['Modified_Z_Score'] = (data['SalePrice'] - median_sale_price) / mad_sale_price\n\n\n# Display the first few rows with the Modified Z-scores\nprint(data[['SalePrice', 'Modified_Z_Score']].head())\n必要なパッケージをインストールしてこのコードを実行すると、目的を途中まで果たすことができます。しかし、次は SalePrice の外れ値が何であるかを修正 Z スコアに基づいて判断する必要があります。 ここでは一般常識に従って外れ値を >=3 または <=-3 としますが、ほとんどの統計的決定と同様に、外れ値は使用しているデータセットに合わせて調整でき、そうする必要があることに留意してください。 <=-3 however, it’s worth noting that like most statistical decisions, it can and should be tailored to your dataset. 出力をさらにカスタマイズするため、JetBrains AI に別のプロンプトを渡しましょう。 Just list those that have a #Modified_Z_Score of 3 or above or -3 or below \nこのコードスニペットを採用し、上記の関連する行に置き換えます。\n# Filter the rows where the Modified Z-score is 3 or above, or -3 or below\noutliers = data[(data['Modified_Z_Score'] >= 3) | (data['Modified_Z_Score'] <= -3)]\n\n\n# Print all the filtered rows, showing their index and SalePrice\noutliers = (outliers[['SalePrice', 'Modified_Z_Score']])\noutliers\n“outliers” という新しい DataFrame に外れ値を格納し、その値を出力して内容を確認できるようにこのコードを修正しました。\n次のステップでは、これらの外れ値を DataFrame から削除します。 ここでも JetBrains AI で以下のようなプロンプトを使用し、コードを生成できます。\nCreate a new dataframe without the outliers \ndata_without_outliers = data.drop(index=outliers.index)\n\n\n# Display the new DataFrame without outliers\nprint(data_without_outliers)\n“data_without_outliers” という新しい DataFrame では、SalePrice の変数が外れ値と見なされる値が除外されています。\n箱ひげ図のコードを更新して新しい DataFrame を確認してみましょう。 予想していた通り、正の歪みは依然として示されていますが、外れ値として見なされる値は除去されています。\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Create a box plot for SalePrice\nplt.figure(figsize=(10, 6))\nsns.boxplot(x=data_without_outliers['SalePrice'])\nplt.title('Box Plot of SalePrice')\nplt.xlabel('SalePrice')\nplt.show()\n\nここで終わる前に、SalePrice に基づいて外れ値と見なしたことで DataFrame から除去された観測値の数をパーセント率でみてみましょう。\n以下のようなプロンプトを使用できます。\nCalculate the percentage of observations removed between #data and #data_without_outliers\n# Calculate the number of observations in the original and filtered DataFrames\noriginal_count = len(data)\nfiltered_count = len(data_without_outliers)\n\n# Calculate the number of removed observations\nremoved_count = original_count - filtered_count\n\n# Calculate the percentage of observations removed\npercentage_removed = (removed_count / original_count) * 100\n\n# Display the percentage\nprint(f\"Percentage of observations removed: {percentage_removed:.2f}%\")\nPyCharm により、5.67% の観測値が除去されたことが示されています。\n前述のように、外れ値を残す場合は、外れ値の影響を受けにくい中央値や四分位範囲などの要約値を使用してみてください。 定義した母集団と導き出す結論に関連性があるために除去していない外れ値が含まれていることが分かっているデータセットを処理する場合は、それらの測定値を使用して結論を出すことを検討するとよいでしょう。\n欠損値\nデータセット内の欠損値を最も素早く特定する方法は、要約統計を使用することです。 念のため、DataFrame 内で右側にある Show Column Statistics（列統計の表示）をクリックしてから Compact（コンパクト）を選択してください。 Ames housing データセットの Lot Frontage で分かるように、列の欠損値は赤色で示されます。\n\nこのデータに関して検討すべき欠損には以下の 3 種類があります。\n完全にランダムな欠損\nランダムな欠損\nランダムでない欠損\n完全にランダムな欠損\n完全にランダムな欠損とは、完全に偶発的にデータが欠落しており、欠落の原因がデータセット内の他の変数と無関係であることを指します。 これは、アンケートの質問に回答漏れがある場合などに発生することがあります。\n完全にランダムな欠損データはまれにしか発生しませんが、最も対処しやすいものでもあります。 完全にランダムに欠損している観測値の数が比較的少数である場合は、そのような観測値を削除するのが最も一般的な対処法です。そのような観測値は削除してもデータセットの整合性に影響することはなく、導き出そうとしている結論にも影響しないためです。\nランダムな欠損\nランダムな欠損には欠損のパターンがなさそうに見えても、測定した他の変数からパターンを説明できる欠損を指します。 たとえば、データの収集方法が原因でアンケートの質問に回答漏れがあった場合が挙げられます。\nAmes housing データセットをもう一度見てみましょう。Lot Frontage 変数は、特定の不動産会社が販売した住宅では欠損の頻度が高くなっているはずです。 この場合、この欠損は不動産会社が入力したデータに整合性がないことが原因だと考えられます。 それが事実である場合、Lot Frontage データが欠損していることは Lot Frontage そのものではなく、物件を販売した不動産会社によるデータ収集方法（観測対象の特性）に関連していることになります。\nデータがランダムに欠損している場合は、データが欠損している理由を理解することをお勧めします。これには多くの場合、データの収集方法を調べる作業が伴います。 データが欠損している理由を理解したら、対処法を選択できます。 比較的よく選択されているランダムな欠損の対処法には、値の代入があります。 この対処法はあり得ない値に関してすでに触れましたが、欠損にも有効です。 この例で言えば、住宅の規模、建築年、販売価格などの相関変数を使用することも含め、定義された母集団と導き出したい結論に応じてさまざまな選択肢があります。 欠損データの原因となっているパターンを理解するには、コンテキスト情報を使用して値を代入できることもしばしばです。それにより、データセット内のデータ間の関連が維持されます。\nランダムでない欠損\n最後に取り上げるランダムでない欠損は、データが欠損する可能性が観測対象外のデータに関連している場合に発生します。 つまり、欠損が未観測のデータに依存しているということです。\n最後にもう一度 Ames housing データセットに戻り、Lot Frontage に欠損データがある事実に目を向けましょう。 データの欠損がランダムでない状況としては、販売者が Lot Frontage を小さいと見なし、それを報告することで住宅の販売価格が下がってしまうことを恐れて意図的に報告しなかった場合が挙げられます。 Lot Frontage データが欠損している可能性が間口そのものの規模（観測対象外）に依存しているのであれば、間口が小さいほど報告される可能性が低く、欠損が直接欠損値に関連していることになります。\n欠損の可視化\nデータが欠損している場合は、パターンがあるかどうかを確認する必要があります。 パターンがある場合は、データを一般化する前に対処しなければならない可能性のある問題が存在することになります。\nパターンを最も簡単に探すには、ヒートマップ可視化を使用する方法があります。 そのコードに着手する前に、欠損のない変数を除外しましょう。 JetBrains AI に以下のプロンプトを送ると、必要なコードが得られます。\nCode to create a new dataframe that contains only columns with missingness \n以下のコードが出力されます。\n# Identify columns with any missing values\ncolumns_with_missing = data.columns[data.isnull().any()]\n\n# Create a new DataFrame with only columns that have missing values\ndata_with_missingness = data[columns_with_missing]\n\n# Display the new DataFrame\nprint(data_with_missingness)\nこのコードを実行する前に、最後の行を変更して PyCharm の素晴らしい DataFrame レイアウトを利用できるようにします。\ndata_with_missingness\nでは、ヒートマップを作成しましょう。ここでも JetBrains AI に以下のプロンプトを送信してコードを取得します。\nCreate a heatmap of #data_with_missingness that is transposed\n以下の結果が出力されます。\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n\n# Transpose the data_with_missingness DataFrame\ntransposed_data = data_with_missingness.T\n\n\n# Create a heatmap to visualize missingness\nplt.figure(figsize=(12, 8))\nsns.heatmap(transposed_data.isnull(), cbar=False, yticklabels=True)\nplt.title('Missing Data Heatmap (Transposed)')\nplt.xlabel('Instances')\nplt.ylabel('Features')\nplt.tight_layout()\nplt.show()\nなお、heatmap の引数から cmap=’viridis’ を除去しました。それを使うと見にくくなるためです。\n\nこのヒートマップでは、同じ変数が複数の行にわたって欠損しているため、欠損のパターンがあると考えられます。 あるグループでは、Bsmt Qual、Bsmt Cond、Bsmt Exposure、BsmtFin Type 1、およびBsmt Fin Type 2 が同じ観測値からすべて欠損しているのが分かります。 別のグループでは、Garage Type、Garage Yr Bit、Garage Finish、Garage Qual、Garage Cond が同じ観測値からすべて欠損しています。\nこれらの変数はすべて地下室と車庫に関連していますが、欠損していない、車庫または地下室に関連する他の変数もあります。 この欠損を説明するとすれば、データが収集された際に別々の不動産会社で車庫と地下室に関する別々の質問が問われたものの、その中にデータセットにあるものほど詳しく記録されていないデータがある場合が挙げられます。 このような状況は自分で収集していないデータを扱う場合にはよく発生するため、データセット内の欠損を詳しく知る必要がある場合は、データの収集方法を調べることをお勧めします。\nデータクリーニングのベストプラクティス – 効率的な前処理のコツ\n前述のように、母集団の定義はデータクリーニングのベストプラクティスの中でも特に優先すべき事項です。 クリーニングを始める前に、何を達成したいのか、どのようにデータを一般化したいのかを知っておくことが重要です。\nすべての方法が再現可能であることを確認する必要があります。なぜなら、再現性はクリーンなデータにも関連しているからです。 再現できない状況だと、後続の作業に大きな影響を与えかねません。 このため、Jupyter ノートブックを整理して順序を維持し、すべてのステップで（特にクリーニングでは）Markdown 機能を活用して意思決定を文書化することをお勧めします。\nデータをクリーニングする際には段階的に作業を進め、元の CSV ファイルやデータベースではなく DataFrame を修正するようにし、再現可能で十分に文書化されたコードですべてを実施することをお勧めします。\nまとめ – データサイエンスにおけるデータクリーニングの重要性\nデータクリーニングは大きなテーマであり、多くの課題に直面する可能性があります。 データセットが大きくなるほど、クリーニングプロセスも困難になります。 母集団を念頭に置き、欠損値の除去と代入のどちらを優先すべきかを考慮してそれらのバランスを保ち、データが元々欠損している理由を理解しながら、結論をより広範に一般化する必要があります。\n自分自身をデータの声として考えましょう。 データがたどってきた過程や、あらゆる段階でデータの整合性をどのように維持してきたかを理解しているのはあなた自身です。 その過程を文書化し、他の人に共有するのに最適な人物はあなたです。\n\nPyCharm Professional を無料で試す\n\nオリジナル（英語）ブログ投稿記事の作者：\nHelen Scott",
        "dc:creator": "Helen Scott",
        "content": "データサイエンスに関するこのブログ連載記事では、データの入手場所と pandas を使用してそのようなデータを探索する方法について説明してきました。そのようなデータは学習用途に最適ですが、現実世界のデータとはまったく異なっています。 学習用のデータはデータクリーニングとキュレーションが完了した状態で提供されることが多いため、データクリーニングの世界を経験しなくてもすぐに学習に取り掛かることができます。一方、現実世界のデータは問題があり、整理されていないものです。 現実世界のデータの場合、有用なインサイトを得るためには事前にクリーニングを行う必要があります。それが今回のブログ記事のトピックです。 データの問題は、データ自体の挙動、データの収集方法、さらにはデータの入力方法によって発生する可能性があります。 ミスや見過ごしは、これらのどの段階においても発生しうるものです。 ここではデータ変換ではなく、データクリーニングに限定して説明しています。 データクリーニングでは、データから導き出した結論を定義した母集団に一般化することができます。 対照的に、データ変換ではデータ形式の変換、データの正規化、データの集計などのタスクが伴います。 なぜデータクリーニングが重要なのか？データ分析の精度を向上させる理由 データベースについて最初に理解する必要があるのは、それが何を代表しているかということです。 ほとんどのデータセットはより幅広い母集団を代表するサンプルであり、このサンプルを処理して得られた結果をその母集団に外挿する（または一般化）できるようになります。 たとえば、前の 2 つのブログ記事では、あるデータセットを使用しました。 そのデータセットは大まかには住宅販売に関するものですが、小さな地理的なエリアと短い期間のみを網羅しているもので、そのエリアと期間内のすべての住宅を網羅していない可能性があります。これが、より大きな母集団のサンプルです。 データはより幅広い母集団を代表するサンプルである必要があります。たとえば、定義した期間における対象エリアのすべての住宅販売が挙げられます。 使用するデータを確実により幅広い母集団を代表するサンプルにするには、最初に母集団の境界を定義する必要があります。 ご想像の通り、おそらく国勢調査データを除けば、母集団全体を使って作業するのは往々にして現実的ではありません。そのため、境界をどこに置くのかを決める必要があります。 そのような境界は、地理、人口統計、期間、行動や活動（取引など）、または業界固有のものなどにすることができます。 母集団の定義には多数の方法がありますが、データを確実に一般化するには、データをクリーニングする前に定義しておく必要があります。 要するに、分析や機械学習などの目的でデータを使用する場合は時間をかけてデータをクリーニングし、インサイトを信頼して現実世界に一般化できるようにする必要があります。 データをクリーニングすると分析の正確性が増し、機械学習においてはパフォーマンスも改善されます。 データをクリーニングしなければ学習結果を幅広い母集団に確実に一般化できず、要約統計が不正確になり、不正に可視化されるなどの問題が発生する可能性があります。 データを使用して機械学習モデルをトレーニングしようとしている場合は、それがエラーや不正確な予測の原因になる可能性もあります。 PyCharm Professional を無料で試す データクリーニングの具体例 – 5 つの主要手順 データのクリーニングに使用できる 5 つのタスクを見てみましょう。 このリストは網羅的なものではありませんが、初めて現実世界のデータに取り掛かる際には役に立つはずです。 データの重複排除 重複はデータを歪める可能性があるため、問題です。 販売価格の出現頻度を使用してヒストグラムを作成していると想像してください。 同じ値が重複している場合、重複した価格に基づいて不正確なパターンのあるヒストグラムが作成されてしまいます。 補足しておきますが、ここでデータセットの重複が問題であると言う場合は、各行が単一の観測値になっている行そのものが重複していることを指しています。 列には重複した値があっても、それは予想されることです。 ここでは、重複した観測値についてのみ取り上げています。 幸いにも、データ内の重複を検出するのに役立つ pandas メソッドがあります。 必要であれば、JetBrains AI チャットで以下のようなプロンプトを入力すると、その使用方法を調べることができます。 Code to identify duplicate rows [&#8230;]",
        "contentSnippet": "データサイエンスに関するこのブログ連載記事では、データの入手場所と pandas を使用してそのようなデータを探索する方法について説明してきました。そのようなデータは学習用途に最適ですが、現実世界のデータとはまったく異なっています。 学習用のデータはデータクリーニングとキュレーションが完了した状態で提供されることが多いため、データクリーニングの世界を経験しなくてもすぐに学習に取り掛かることができます。一方、現実世界のデータは問題があり、整理されていないものです。 現実世界のデータの場合、有用なインサイトを得るためには事前にクリーニングを行う必要があります。それが今回のブログ記事のトピックです。 データの問題は、データ自体の挙動、データの収集方法、さらにはデータの入力方法によって発生する可能性があります。 ミスや見過ごしは、これらのどの段階においても発生しうるものです。 ここではデータ変換ではなく、データクリーニングに限定して説明しています。 データクリーニングでは、データから導き出した結論を定義した母集団に一般化することができます。 対照的に、データ変換ではデータ形式の変換、データの正規化、データの集計などのタスクが伴います。 なぜデータクリーニングが重要なのか？データ分析の精度を向上させる理由 データベースについて最初に理解する必要があるのは、それが何を代表しているかということです。 ほとんどのデータセットはより幅広い母集団を代表するサンプルであり、このサンプルを処理して得られた結果をその母集団に外挿する（または一般化）できるようになります。 たとえば、前の 2 つのブログ記事では、あるデータセットを使用しました。 そのデータセットは大まかには住宅販売に関するものですが、小さな地理的なエリアと短い期間のみを網羅しているもので、そのエリアと期間内のすべての住宅を網羅していない可能性があります。これが、より大きな母集団のサンプルです。 データはより幅広い母集団を代表するサンプルである必要があります。たとえば、定義した期間における対象エリアのすべての住宅販売が挙げられます。 使用するデータを確実により幅広い母集団を代表するサンプルにするには、最初に母集団の境界を定義する必要があります。 ご想像の通り、おそらく国勢調査データを除けば、母集団全体を使って作業するのは往々にして現実的ではありません。そのため、境界をどこに置くのかを決める必要があります。 そのような境界は、地理、人口統計、期間、行動や活動（取引など）、または業界固有のものなどにすることができます。 母集団の定義には多数の方法がありますが、データを確実に一般化するには、データをクリーニングする前に定義しておく必要があります。 要するに、分析や機械学習などの目的でデータを使用する場合は時間をかけてデータをクリーニングし、インサイトを信頼して現実世界に一般化できるようにする必要があります。 データをクリーニングすると分析の正確性が増し、機械学習においてはパフォーマンスも改善されます。 データをクリーニングしなければ学習結果を幅広い母集団に確実に一般化できず、要約統計が不正確になり、不正に可視化されるなどの問題が発生する可能性があります。 データを使用して機械学習モデルをトレーニングしようとしている場合は、それがエラーや不正確な予測の原因になる可能性もあります。 PyCharm Professional を無料で試す データクリーニングの具体例 – 5 つの主要手順 データのクリーニングに使用できる 5 つのタスクを見てみましょう。 このリストは網羅的なものではありませんが、初めて現実世界のデータに取り掛かる際には役に立つはずです。 データの重複排除 重複はデータを歪める可能性があるため、問題です。 販売価格の出現頻度を使用してヒストグラムを作成していると想像してください。 同じ値が重複している場合、重複した価格に基づいて不正確なパターンのあるヒストグラムが作成されてしまいます。 補足しておきますが、ここでデータセットの重複が問題であると言う場合は、各行が単一の観測値になっている行そのものが重複していることを指しています。 列には重複した値があっても、それは予想されることです。 ここでは、重複した観測値についてのみ取り上げています。 幸いにも、データ内の重複を検出するのに役立つ pandas メソッドがあります。 必要であれば、JetBrains AI チャットで以下のようなプロンプトを入力すると、その使用方法を調べることができます。 Code to identify duplicate rows […]",
        "guid": "https://blog.jetbrains.com/pycharm/2025/01/data-cleaning-in-data-science/",
        "categories": [
          "data-science"
        ],
        "isoDate": "2025-03-18T05:28:36.000Z"
      },
      {
        "creator": "Delphine Massenhove",
        "title": "JetBrains et LinkedIn s’associent pour proposer un nouveau certificat professionnel",
        "link": "https://blog.jetbrains.com/team/2025/03/17/jetbrains-et-linkedin-s-associent-pour-proposer-un-nouveau-certificat-professionnel",
        "pubDate": "Mon, 17 Mar 2025 12:40:48 +0000",
        "content:encodedSnippet": "Nous avons le plaisir d’annoncer notre partenariat avec LinkedIn afin de proposer un certificat professionnel Java Foundations exclusivement disponible sur LinkedIn Learning.\nAvec une plateforme comptant plus d’un milliard de membres et permettant le recrutement de 7 personnes chaque minute, LinkedIn fournit un accès incomparable à une multitude d’opportunités professionnelles. En associant nos expertises respectives dans les domaines du développement logiciel et de la formation, nous avons conçu une offre combinant un parcours professionnel créé par des experts et des possibilités de réseautage.\n\n\nCOMMENCER À APPRENDRE\nQu’est-ce qu’un certificat professionnel ?\nLinkedIn Learning propose déjà des certificats professionnels d’entreprises reconnues comme Microsoft, Atlassian, GitHub et Adobe. Ces certificats professionnels permettent de suivre facilement des cours, de passer des évaluations et de faire connaître vos compétences, tout cela sur LinkedIn, ce qui est idéal pour attirer l’attention des recruteurs.\n\nForts de plus de 20 ans d’expérience du développement logiciel et de la confiance de 11,4 millions de développeurs dans le monde, nous pouvons vous assurer que vous bénéficierez d’une formation d’un haut niveau de qualité. Le Certificat professionnel Java Foundations enrichit votre profil LinkedIn, valide vos compétences en programmation Java et vous permet de travailler sur des cas concrets. Vous travaillerez dans IntelliJ IDEA, l’IDE le plus utilisé pour le développement Java, et pourrez ainsi acquérir des compétences pratiques essentielles pour votre carrière.\nPourquoi Java ?\n78 % des développeurs Java utilisant IntelliJ IDEA et notre plateforme de formation JetBrains Academy comptant plus d’un million d’inscrits, proposer un certificat professionnel Java Foundations sur LinkedIn Learning nous est apparu comme une nouvelle étape évidente. Mais alors qu’aujourd’hui tout le monde parle de l’IA, pourquoi l’apprentissage de Java reste-t-il intéressant ?\nTout d’abord, Java fournit des bases solides en matière de concepts de programmation. La connaissance de Java permet d’évoluer plus facilement vers des domaines spécialisés tels que l’IA par la suite. Les réponses à notre Enquête sur la Courbe d’Apprentissage dans l’informatique en 2024, menée auprès de plus de 23 000 apprenants dans le monde ont révélé que la plupart d’entre eux commencent par apprendre des langages de programmation fondamentaux comme Java.\nJava reste l’un des langages de programmation les plus utilisés dans de nombreux domaines, du développement mobile aux solutions d’entreprises à grande échelle. La demande de développeurs Java continue de croître, ce qui est un gage de stabilité et d’opportunités pour votre parcours professionnel.\nCe que vous apprendez\nLe Certificat professionnel Java Foundations comprend cinq cours qui vont de la découverte de Java à sa maîtrise. À la fin de cette série de cours, vous aurez acquis les compétences requises pour postuler en tant que développeur junior sur LinkedIn.\nSyntaxe et structure\nVous commencerez par apprendre comment installer Java et IntelliJ IDEA, et à travailler avec les variables, les types de données et les es composants clés du langage. Vous travaillerez également sur le contrôle de flux de programmes avec la logique conditionnelle et les boucles, ainsi que sur l’utilisation des collections Java.\nObjets et API\nAu cours de cette formation, vous suivrez des cours sur les fondamentaux des objets et des API en Java. Vous étudierez les concepts et principes essentiels du langage comme l’héritage, le polymorphisme, l’abstraction, les interfaces et les structures de données, et apprendrez comment gérer les exceptions, résoudre les erreurs et éviter les fuites de mémoire.\nProgrammation orientée objet\nCe cours traite des bases de la programmation orientée objet en Java, pour vous aider à écrire du code sécurisé, évolutif et durable. Vous découvrirez comment les principes orientés objet sont intégrés dans le langage avec les classes, les instances et les constructeurs pour représenter des objets du monde réel.\nStructures de données\nLes structures de données sont cruciales pour quasiment toutes les applications. Cette formation traite des structures de données essentielles et de leurs utilisations, ainsi que de considérations comme la vitesse et les performances. Vous aurez des cours sur les tableaux, leurs avantages et inconvénients, et comment les utiliser efficacement. Vous verrez également plus en détail les collections Java et notamment l’interface Collection, qui est à la base de la plupart des structures de données Java.\nAPI JDBC (Java Database Connectivity)\nLes développeurs travaillant sur la création d’applications mobiles, web ou desktop doivent souvent intégrer des bases de données relationnelles. Dans ce cours, vous découvrirez l’API JDBC et apprendrez comment l’utiliser pour gérer des bases de données comme Postgres, Oracle, MySQL et SQL Server dans les applications Java.\nNous avons hâte de vous voir commencer le Certificat professionnel Java Foundations et faire vos premiers pas vers une carrière de développeur. N’hésitez pas à nous faire part de vos impressions et à nous parler de votre progression, et pensez à partager votre certificat et à nous taguer sur LinkedIn !\nL’Équipe JetBrains\nAuteur de l’article original en anglais :\nAnastasia Khramushina",
        "dc:creator": "Delphine Massenhove",
        "content": "Nous avons le plaisir d&#8217;annoncer notre partenariat avec LinkedIn afin de proposer un certificat professionnel Java Foundations exclusivement disponible sur LinkedIn Learning. Avec une plateforme comptant plus d&#8217;un milliard de membres et permettant le recrutement de 7 personnes chaque minute, LinkedIn fournit un accès incomparable à une multitude d&#8217;opportunités professionnelles. En associant nos expertises respectives [&#8230;]",
        "contentSnippet": "Nous avons le plaisir d’annoncer notre partenariat avec LinkedIn afin de proposer un certificat professionnel Java Foundations exclusivement disponible sur LinkedIn Learning. Avec une plateforme comptant plus d’un milliard de membres et permettant le recrutement de 7 personnes chaque minute, LinkedIn fournit un accès incomparable à une multitude d’opportunités professionnelles. En associant nos expertises respectives […]",
        "guid": "https://blog.jetbrains.com/?post_type=team&p=551844",
        "categories": [
          "java",
          "learning-courses",
          "news",
          "partners",
          "certificate",
          "linkedin"
        ],
        "isoDate": "2025-03-17T12:40:48.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "How the IntelliJ Infrastructure Team Cuts Build Execution Time by 30% With TeamCity",
        "link": "https://blog.jetbrains.com/teamcity/2025/03/how-intellij-uses-teamcity",
        "pubDate": "Mon, 17 Mar 2025 09:44:31 +0000",
        "content:encodedSnippet": "Introduction\nJetBrains is known for developing some of the world’s most popular IDEs, including IntelliJ IDEA, PyCharm, and WebStorm. Supporting this development is a dedicated infrastructure team that ensures hundreds of developers can efficiently build, test, and release these products.\nAt the core of their workflow is TeamCity, JetBrains’ own CI/CD solution, which powers build automation, testing, and scalable infrastructure management.\nExample of a build chain in TeamCity\n\n\n\nTo understand how TeamCity supports this large-scale development process, we spoke with the IntelliJ Infrastructure team about their approach to managing CI/CD pipelines for 700–800 developers, running thousands of daily builds, and optimizing workflows to deliver fast and reliable releases.\nThe challenge: scaling CI/CD for hundreds of developers\nWith a large team continuously pushing changes, maintaining fast, reliable, and scalable CI/CD pipelines is a complex task. The IntelliJ Infrastructure team requires a solution capable of handling thousands of builds per day without overloading resources while leveraging smart automation to reduce manual effort and ensure high-quality code delivery.\nAdditionally, their CI/CD setup must support a diverse infrastructure, including on-premises servers, AWS, and macOS, Linux, and Windows agents. Managing hundreds of thousands of automated tests while minimizing flaky test failures is another critical challenge.\nTeamCity Grafana dashboard\n\n\n\nTo meet these demands, the team relies on TeamCity, JetBrains’ own powerful CI/CD solution, which provides the scalability, flexibility, and automation needed to streamline their development workflows.\n    \n“We build IDEs and everything related to them in TeamCity, like internal services, services for statistics, etc. I’m very used to TeamCity and feel like it’s a hammer in my hand: you can do anything with it.”\n\n            \nDmitry Panov, IntelliJ Infrastructure Technical Team Lead\n                                                        \nRead the full case study to learn how TeamCity helps the IntelliJ Infrastructure team to manage the CI/CD process for 700+ engineers, while cutting the build time by 30%.\nRead the case study",
        "dc:creator": "Olga Bedrina",
        "content": "Introduction JetBrains is known for developing some of the world’s most popular IDEs, including IntelliJ IDEA, PyCharm, and WebStorm. Supporting this development is a dedicated infrastructure team that ensures hundreds of developers can efficiently build, test, and release these products. At the core of their workflow is TeamCity, JetBrains’ own CI/CD solution, which powers build [&#8230;]",
        "contentSnippet": "Introduction JetBrains is known for developing some of the world’s most popular IDEs, including IntelliJ IDEA, PyCharm, and WebStorm. Supporting this development is a dedicated infrastructure team that ensures hundreds of developers can efficiently build, test, and release these products. At the core of their workflow is TeamCity, JetBrains’ own CI/CD solution, which powers build […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=553206",
        "categories": [
          "intellij",
          "teamcity-2",
          "case-study",
          "news"
        ],
        "isoDate": "2025-03-17T09:44:31.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Jessie Houghton",
        "title": "Enhance Pull Request Reviews with In-Depth Feedback",
        "link": "https://devblogs.microsoft.com/visualstudio/enhance-pull-request-reviews-with-in-depth-feedback/",
        "pubDate": "Thu, 20 Mar 2025 15:00:02 +0000",
        "content:encodedSnippet": "Visual Studio 2022 has taken the pull request experience to the next level by making reviews interactive. We previously enabled viewing your pull request comments inline in your working files. Now, the latest update empowers you to add comments directly within the IDE, streamlining the review process. Now, pull request reviewers can conduct deep reviews with the navigational power of the IDE and stay in their focused environment.\n\nWe heard from your feedback that the web experience for reviewing pull requests can only go so far. When you need to really understand your colleagues’ proposed changes, it’s best to checkout their branch and use the navigation and build tools in VS. Once you’re on their branch and you’ve identified some feedback, you can add the comment directly without having to map it back to the code in the web. This extends previous functionality where you could view and reply to only existing comments.\nEnabling this feature\nTo start using the new commenting feature, first ensure you have enabled the feature flags:\nTools > Options > Preview Features > Pull Request Comments \nTools > Options > Pull Request Add Comment.\nOnce these are activated, checkout any branch with an active pull request and click on Show comments in files in the InfoBar to activate the pull request comments experience in the editor. Alternatively, you can enable comments by using the top level menu Git > ADO/GitHub > Show Comments in Files or from the PR dropdown menu next to the view all commits link in the Git Changes window.\n\nAdding comments to pull request files\nSimply click on the Add Comment icon in the margin, or right-click the line you’d like to comment on and select Git > Add Comment from the context menu.\n\nThe comment icon will only appear in files that are part of the pull request. For GitHub pull requests, comments can only be added to lines surrounding and including the changes.\nWe appreciate your feedback!\nThis is another step in our journey to deliver a powerful and integrated pull request experience. We started with supporting the create a pull request workflow, enabled viewing pull request comments on your checked out branches, and now, you can add new review comments, as well!\nWe won’t stop there. Your continuous suggestions and insights play a crucial role in shaping the tools we build. We’re thrilled to bring you this enhancement and are eager to hear how it improves your workflow.\nThe post Enhance Pull Request Reviews with In-Depth Feedback appeared first on Visual Studio Blog.",
        "dc:creator": "Jessie Houghton",
        "content": "<p>Visual Studio 2022 has taken the pull request experience to the next level by making reviews interactive. We previously enabled viewing your pull request comments inline in your working files. Now, the latest update empowers you to add comments directly within the IDE, streamlining the review process. Now, pull request reviewers can conduct deep reviews [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/enhance-pull-request-reviews-with-in-depth-feedback/\">Enhance Pull Request Reviews with In-Depth Feedback</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 2022 has taken the pull request experience to the next level by making reviews interactive. We previously enabled viewing your pull request comments inline in your working files. Now, the latest update empowers you to add comments directly within the IDE, streamlining the review process. Now, pull request reviewers can conduct deep reviews […]\nThe post Enhance Pull Request Reviews with In-Depth Feedback appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252766",
        "categories": [
          "Git",
          "Team and Development",
          "Visual Studio",
          "GitHub"
        ],
        "isoDate": "2025-03-20T15:00:02.000Z"
      },
      {
        "creator": "Leah Tran",
        "title": "Find the IDE features you need with GitHub Copilot and Search",
        "link": "https://devblogs.microsoft.com/visualstudio/find-the-ide-features-you-need-with-github-copilot-and-search/",
        "pubDate": "Wed, 19 Mar 2025 15:00:29 +0000",
        "content:encodedSnippet": "Ever find yourself needing to locate a specific menu item, command, or option in Visual Studio, but you don’t know its name or location? Do you often struggle to find detailed instructions on using certain features effectively?\nNow, there’s a solution to get you the information you need right in the IDE.\n\nVisual Studio now makes it easy to access GitHub Copilot Chat from Feature Search (Ctrl+Q). Clicking “Ask Copilot” will send your query to GitHub Copilot Chat and get detailed responses, without leaving Visual Studio and search for docs online.\nThis tool interprets the semantic meaning of your query, considers your Visual Studio version, and provides accurate answers. This means no more guessing the correct terminology or navigating through multiple menus.\nFor instance, typing ‘prettify file’ in the traditional search might not bring up the ‘format document’ option. However, GitHub Copilot Chat understands the intent behind your query and can guide you to the correct setting with all the information you need to use it.\nHow it works\nNotice the @vs label in the sent chat message? When your search query gets sent over to the GitHub Copilot chat, the @vs agent is called. This @vs agent has in-depth knowledge about the workings of Visual Studio, with strong context on the features available in the current version you’re using and how those work.\nThe @vs agent works in the Visual Studio GitHub Copilot Chat even if you’re not starting from Feature Search. You can invoke the agent on your own by adding @vs to your chat message.\nAppreciation for your feedback\nYour insights help us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support.\nYour feedback is invaluable in shaping Visual Studio’s future. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post Find the IDE features you need with GitHub Copilot and Search appeared first on Visual Studio Blog.",
        "dc:creator": "Leah Tran",
        "content": "<p>Ever find yourself needing to locate a specific menu item, command, or option in Visual Studio, but you don&#8217;t know its name or location? Do you often struggle to find detailed instructions on using certain features effectively? Now, there’s a solution to get you the information you need right in the IDE. Visual Studio now [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/find-the-ide-features-you-need-with-github-copilot-and-search/\">Find the IDE features you need with GitHub Copilot and Search</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Ever find yourself needing to locate a specific menu item, command, or option in Visual Studio, but you don’t know its name or location? Do you often struggle to find detailed instructions on using certain features effectively? Now, there’s a solution to get you the information you need right in the IDE. Visual Studio now […]\nThe post Find the IDE features you need with GitHub Copilot and Search appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252762",
        "categories": [
          "GitHub Copilot",
          "Visual Studio",
          "GitHub Copilot Chat",
          "Search"
        ],
        "isoDate": "2025-03-19T15:00:29.000Z"
      },
      {
        "creator": "Ruben Rios",
        "title": "Boost your GitHub productivity with our new multi-account support!",
        "link": "https://devblogs.microsoft.com/visualstudio/boost-your-github-productivity-with-our-new-multi-account-support/",
        "pubDate": "Tue, 18 Mar 2025 14:00:56 +0000",
        "content:encodedSnippet": "Managing your GitHub identity in Visual Studio 2022 just got easier! Our latest update overhauls the GitHub account management experience and improves how you work with multiple accounts, especially for GitHub Copilot and version control scenarios. In this post, we’ll detail how these changes will make your GitHub workflow smoother, from the moment you start using Visual Studio to your everyday coding.\nOnboarding Improvements\nThe latest Visual Studio 2022 update streamlines your GitHub experience right from the very start. You can now Sign in with your GitHub account during the first launch experience:\n\nIf you would rather configure your account at a later stage, you can also sign in with GitHub accounts directly from the Visual Studio shell, regardless of whether a Microsoft account is present.\n\nPlease note that roaming settings are not currently available for GitHub accounts. You’ll need to add a Microsoft account if you want to roam your Visual Studio settings across devices.\nMultiple GitHub Accounts\nWe’re happy to announce that you can now add and manage multiple GitHub accounts! Multi-account support was a top request from you, and the latest update enables it for all Visual Studio 2022 users.\nYou can add multiple public GitHub accounts effortlessly from all the same identity controls you normally interact with. For instance, you can open the profile card, click on “Add another account,” sign in to your GitHub account, and repeat as needed!\n\nSeamless Switching Between Accounts\nOnce you successfully add your first GitHub account, Visual Studio will automatically If you have multiple accounts, switching the active accounts is effortless; just open the profile card, access the account options and select the “Set as active account” button.\n\nGitHub Copilot Integration\nThe active GitHub account drives the activation of GitHub Copilot. If your active account is subscribed to GitHub Copilot Free, GitHub Copilot for Individuals or GitHub Copilot for Business, the Copilot feature will activate automatically.\nYou can check the GitHub Copilot badge to quickly assess if your active account has valid entitlements, as its status will indicate whether GitHub Copilot is active.\n\nVersion Control Integration\nManaging multiple accounts also impacts version control-related scenarios. If you are working on GitHub pull requests or issues, Visual Studio prompt you to set a GitHub account and will remember your preference for each repository.\n\nThat means that you won’t need to worry about switching accounts for regular Git operations like push, pull, and fetch. between it and the repository preferences,\nConclusion\nWe’ve been working hard to make your GitHub experience in Visual Studio 2022 even better, and we think you’ll love these updates!  From easier onboarding and managing multiple GitHub accounts to automatic GitHub Copilot activation and smart Git handling, this update has you covered.\nThank you for your continuous feedback, which helps us make Visual Studio better with every release.  Please remember that you can keep sharing your thoughts and suggestions by visiting our developer community portal.\nThe post Boost your GitHub productivity with our new multi-account support! appeared first on Visual Studio Blog.",
        "dc:creator": "Ruben Rios",
        "content": "<p>Managing your GitHub identity in Visual Studio 2022 just got easier! Our latest update overhauls the GitHub account management experience and improves how you work with multiple accounts, especially for GitHub Copilot and version control scenarios. In this post, we&#8217;ll detail how these changes will make your GitHub workflow smoother, from the moment you start [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/boost-your-github-productivity-with-our-new-multi-account-support/\">Boost your GitHub productivity with our new multi-account support!</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Managing your GitHub identity in Visual Studio 2022 just got easier! Our latest update overhauls the GitHub account management experience and improves how you work with multiple accounts, especially for GitHub Copilot and version control scenarios. In this post, we’ll detail how these changes will make your GitHub workflow smoother, from the moment you start […]\nThe post Boost your GitHub productivity with our new multi-account support! appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252688",
        "categories": [
          "Accessibility",
          "Git",
          "Visual Studio",
          "GitHub",
          "Sign in"
        ],
        "isoDate": "2025-03-18T14:00:56.000Z"
      },
      {
        "creator": "Sinem Akinci, Allie Barry",
        "title": "Introducing automatic documentation comment generation in Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/introducing-automatic-documentation-comment-generation-in-visual-studio/",
        "pubDate": "Mon, 17 Mar 2025 15:00:10 +0000",
        "content:encodedSnippet": "We are excited to announce that Copilot is now automatically integrated into Visual Studio’s editor to help you generate doc comments for functions. This new feature aims to streamline your documentation process and enhance your coding experience.\nTo access these updates, you will need a GitHub Copilot subscription. If you don’t already have GitHub Copilot, you can sign up for free here.\nAI doc comment generation\nIf you have automatic doc comment generation enabled via your settings, you can simply type what would trigger your doc comment format (such as ///) and Copilot suggestions will automatically fill out the function description based on the contents of the function, including a summary and any parameters and return types (if available). You can then accept these suggestions using a single tab, just like regular Copilot code completions.\n\nHow to enable doc comments\nTo access this feature, you will need to have automatically generating doc comments enabled.\nFor C++ projects, you can configure the generated documentation comment styles using the following setting in Tools > Options. Both XML and Doxygen style comments are supported by this feature.\n\nFor C#, you would need to enable the following setting in your Tools > Options\n\nShare your feedback\nThis feature is available for Visual Studio 17.14 Preview 2 for both C# and C++ project files. We encourage you to explore this feature and see how GitHub Copilot can transform and simplify your coding experience.\nWe deeply appreciate the continuous feedback from our users, which drives us to improve and innovate. Your input is invaluable in making Visual Studio better with each update. Happy coding!\nThe post Introducing automatic documentation comment generation in Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "Sinem Akinci, Allie Barry",
        "content": "<p>We are excited to announce that Copilot is now automatically integrated into Visual Studio’s editor to help you generate doc comments for functions. This new feature aims to streamline your documentation process and enhance your coding experience. To access these updates, you will need a GitHub Copilot subscription. If you don’t already have GitHub Copilot, [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/introducing-automatic-documentation-comment-generation-in-visual-studio/\">Introducing automatic documentation comment generation in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "We are excited to announce that Copilot is now automatically integrated into Visual Studio’s editor to help you generate doc comments for functions. This new feature aims to streamline your documentation process and enhance your coding experience. To access these updates, you will need a GitHub Copilot subscription. If you don’t already have GitHub Copilot, […]\nThe post Introducing automatic documentation comment generation in Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=252739",
        "categories": [
          "Copilot",
          "Productivity",
          "Visual Studio",
          "Docs"
        ],
        "isoDate": "2025-03-17T15:00:10.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": [
      {
        "creator": "강철 벼룩",
        "title": "Azure 파일 공유에서 리눅스용 연결 스크립트 문제 해결",
        "link": "http://www.dokyun.pe.kr/360",
        "pubDate": "Tue, 18 Mar 2025 21:21:40 +0900",
        "author": "강철 벼룩",
        "comments": "http://www.dokyun.pe.kr/360#entry360comment",
        "content": "<h3 data-ke-size=\"size23\">Troubleshooting connection scripts for Linux in Azure Files</h3>\n<p data-ke-size=\"size18\">최근 (2025년 3월 기준) 스토리지 계정의 파일 공유의 리눅스 연결 스크립트에 문제가 있음을 확인했다 (아래 그림 참조).</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.png\" data-origin-width=\"1397\" data-origin-height=\"1210\"><span data-url=\"https://blog.kakaocdn.net/dn/ObxxW/btsMPKu4JXx/xShMlTBHTayyo527kW8myK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ObxxW/btsMPKu4JXx/xShMlTBHTayyo527kW8myK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ObxxW/btsMPKu4JXx/xShMlTBHTayyo527kW8myK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FObxxW%2FbtsMPKu4JXx%2FxShMlTBHTayyo527kW8myK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1397\" height=\"1210\" data-filename=\"1.png\" data-origin-width=\"1397\" data-origin-height=\"1210\"/></span></figure>\n</p>\n<p data-ke-size=\"size18\"><span style=\"font-family: 'Noto Serif KR';\"><b><span style=\"color: #ee2323;\">[문제 및 원인]</span></b></span></p>\n<p data-ke-size=\"size18\">빨간색 상자의 내용과 녹색 상자의 내용 불일치로 파일 공유 마운트 실패.</p>\n<p data-ke-size=\"size18\">마운트용으로 생성한 디렉터리와 mount 명령을 수행할 마운트 포인트의 경로가 다르다.&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\"><span style=\"font-family: 'Noto Serif KR';\"><b><span style=\"color: #006dd7;\">[솔루션]</span></b></span></p>\n<p data-ke-size=\"size18\">빨간색 상자의 \"media\"를 \"mnt\"로 바꾸거나, 녹색 상자의 \"mnt\"를 \"media\"로 바꿔야 한다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "Troubleshooting connection scripts for Linux in Azure Files\n최근 (2025년 3월 기준) 스토리지 계정의 파일 공유의 리눅스 연결 스크립트에 문제가 있음을 확인했다 (아래 그림 참조).\n\n\n[문제 및 원인]\n빨간색 상자의 내용과 녹색 상자의 내용 불일치로 파일 공유 마운트 실패.\n마운트용으로 생성한 디렉터리와 mount 명령을 수행할 마운트 포인트의 경로가 다르다. \n \n[솔루션]\n빨간색 상자의 \"media\"를 \"mnt\"로 바꾸거나, 녹색 상자의 \"mnt\"를 \"media\"로 바꿔야 한다.",
        "guid": "http://www.dokyun.pe.kr/360",
        "categories": [
          "Azure &amp; Windows/Azure",
          "azure files",
          "azure storage",
          "스토리지계정",
          "파일공유"
        ],
        "isoDate": "2025-03-18T12:21:40.000Z"
      }
    ]
  },
  {
    "name": "김상훈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "ingest pipeline - 6th",
        "link": "https://kangmyounghun.blogspot.com/2025/03/ingest-pipeline-6th.html",
        "pubDate": "2025-03-17T08:49:00.000Z",
        "author": "강명훈",
        "content": "<div><a href=\"https://www.elastic.co/guide/en/logstash/current/event-dependent-configuration.html#conditionals\" target=\"_blank\">로그스태시는 조건문</a>으로 필터의 유기적인 실행 관계를 설정할 수 있다. <a href=\"https://www.elastic.co/guide/en/beats/filebeat/current/defining-processors.html#conditions\" target=\"_blank\">beat processor</a>도 마찬가지. 다음은 데이터 조건에 따라 달라지는 로그스태시 필터.</div>\n<div><pre><code><span style=\"font-family: courier;\"><div>filter {</div><div><span style=\"white-space: normal;\">&nbsp;mutate {</span></div><div><span style=\"white-space: normal;\">&nbsp; remove_field =&gt; [\"@timestamp\", \"@version\", \"path\", \"host\"]</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><br /></div><div><span style=\"white-space: normal;\">&nbsp;dissect {</span></div><div><span style=\"white-space: normal;\">&nbsp; mapping =&gt; {\"message\" =&gt; '%{} \"%{} %{uri} %{}\" %{}'}</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div><span style=\"white-space: normal;\">&nbsp;</span></div><div><span style=\"white-space: normal;\"><span><a name='more'></a></span>if [uri] =~ '\\?' {</span></div><div><span style=\"white-space: normal;\">&nbsp; grok {</span></div><div><span style=\"white-space: normal;\">&nbsp; &nbsp;match =&gt; {'uri' =&gt; '(?&lt;url&gt;[^?]+)\\?(?&lt;param&gt;.*)'}</span></div><div><span style=\"white-space: normal;\">&nbsp; }</span></div><div><span style=\"white-space: normal;\">&nbsp;} else {</span></div><div><span style=\"white-space: normal;\">&nbsp; mutate {</span></div><div><span style=\"white-space: normal;\">&nbsp; &nbsp;copy =&gt; {'uri' =&gt; 'url'}</span></div><div><span style=\"white-space: normal;\">&nbsp; }</span></div><div><span style=\"white-space: normal;\">&nbsp;}</span></div><div>}</div></span></code></pre></div>\n<div><pre><code><span style=\"font-family: courier;\"><div>{</div><div>&nbsp; &nbsp; \"message\" =&gt; \"1.2.3.4 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.html HTTP/1.1\\\" 200 37727\\r\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"uri\" =&gt; \"/bbs/view.html\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"url\" =&gt; \"/bbs/view.html\"</div><div>}</div><div>{</div><div>&nbsp; &nbsp; \"message\" =&gt; \"192.168.56.1 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.php?board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4 HTTP/1.1\\\" 200 37727\\r\",</div><div>&nbsp; &nbsp; &nbsp; \"param\" =&gt; \"board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"uri\" =&gt; \"/bbs/view.php?board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"url\" =&gt; \"/bbs/view.php\"</div><div>}</div></span></code></pre></div>\n<div><br /></div>\n<div>역시 데이터 조건에 따라 달라지는 beat processor.</div>\n<div><pre><code><span style=\"font-family: courier;\"><div>processors:</div><div>&nbsp; - include_fields:</div><div>&nbsp; &nbsp; &nbsp; fields: \"message\"</div><div>&nbsp; - dissect:</div><div>&nbsp; &nbsp; &nbsp; tokenizer: '%{} \"%{} %{uri} %{}\" %{}'</div><div>&nbsp; &nbsp; &nbsp; target_prefix: \"\"</div><div>&nbsp; - if:</div><div>&nbsp; &nbsp; &nbsp; contains.uri: \"?\"</div><div>&nbsp; &nbsp; then:</div><div>&nbsp; &nbsp; &nbsp; - dissect:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; field: \"uri\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tokenizer: \"%{url}?%{param}\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target_prefix: \"\"</div><div>&nbsp; &nbsp; else:</div><div>&nbsp; &nbsp; &nbsp; copy_fields:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; fields:</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; - from: uri</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; to: url</div></span></code></pre></div>\n<div><pre><code><span style=\"font-family: courier;\"><div>{</div><div>&nbsp; \"@timestamp\": \"2025-03-17T08:13:47.537Z\",</div><div>&nbsp; \"@metadata\": {</div><div>&nbsp; &nbsp; \"beat\": \"filebeat\",</div><div>&nbsp; &nbsp; \"type\": \"_doc\",</div><div>&nbsp; &nbsp; \"version\": \"8.17.0\"</div><div>&nbsp; },</div><div>&nbsp; \"message\": \"1.2.3.4 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.html HTTP/1.1\\\" 200 37727\",</div><div>&nbsp; \"uri\": \"/bbs/view.html\",</div><div>&nbsp; \"url\": \"/bbs/view.html\"</div><div>}</div><div>{</div><div>&nbsp; \"@timestamp\": \"2025-03-17T08:13:47.537Z\",</div><div>&nbsp; \"@metadata\": {</div><div>&nbsp; &nbsp; \"beat\": \"filebeat\",</div><div>&nbsp; &nbsp; \"type\": \"_doc\",</div><div>&nbsp; &nbsp; \"version\": \"8.17.0\"</div><div>&nbsp; },</div><div>&nbsp; \"message\": \"192.168.56.1 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.php?board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4 HTTP/1.1\\\" 200 37727\",</div><div>&nbsp; \"uri\": \"/bbs/view.php?board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4\",</div><div>&nbsp; \"param\": \"board_id=kor%5Fmedia&amp;gul_no=1106&amp;idx=17&amp;m=4&amp;upage=25&amp;tpage=&amp;PAGE=4\",</div><div>&nbsp; \"url\": \"/bbs/view.php\"</div><div>}</div></span></code></pre></div>\n<div><br /></div><div>그런데 ingest pipeline은 <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html#conditionally-run-processor\" target=\"_blank\">processor에 종속된 조건문</a>만을 지원한다. 다음은 <span style=\"font-family: courier;\">?</span>가 없는 데이터를 처리하지 못하는 ingest pipeline.&nbsp;</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [<span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div>\n<div><pre><code><span style=\"font-family: courier;\"><div>{</div><div>&nbsp; \"docs\": [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; \"doc\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_index\": \"_index\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_version\": \"-3\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_id\": \"_id\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_source\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"uri\": \"index.php?a=b\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"param\": \"a=b\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"url\": \"index.php\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"_ingest\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"timestamp\": \"2025-03-17T08:23:55.1105587Z\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; \"error\": {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"root_cause\": [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"type\": \"illegal_argument_exception\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"reason\": \"Provided Grok expressions do not match field value: [index.html]\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; ],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"type\": \"illegal_argument_exception\",</div><div>&nbsp; &nbsp; &nbsp; &nbsp; \"reason\": \"Provided Grok expressions do not match field value: [index.html]\"</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></span></code></pre></div>\n<div><br /></div><div><span style=\"font-family: courier;\">?</span> 조건을 주면 <span style=\"font-family: courier;\">?</span>가 있는 데이터만을 처리한다.</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [<span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"if\"</span>: <span style=\"color: #bd271e;\">\"ctx.uri.contains('?')\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:27:14.3998071Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:27:14.3998071Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div>이때 해법은 정규표현식을 추가하거나,</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>, </div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #bd271e;\">\"(?&lt;url&gt;.*)\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:35:46.6631911Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:35:46.6631911Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html#handling-pipeline-failures\" target=\"_blank\">on_failure</a> 옵션으로 예외처리를 하거나,</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [<span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"on_failure\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"set\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"url\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"copy_from\"</span>: <span style=\"color: #bd271e;\">\"uri\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:38:37.0469351Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:38:37.0469351Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/script-processor.html\" target=\"_blank\">script processor</a>를 사용하거나.</div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"script\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"source\"</span>: \"\"\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">if</span> <span style=\"color: #69707d;\">(</span>ctx<span style=\"color: #69707d;\">.</span>uri<span style=\"color: #69707d;\">.</span>contains<span style=\"color: #69707d;\">(</span><span style=\"color: #bd271e;\">'?'</span><span style=\"color: #69707d;\">))</span> <span style=\"color: #69707d;\">{</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #007e77;\">def</span> str = /<span style=\"color: #69707d;\">([</span>^?<span style=\"color: #69707d;\">]</span>+<span style=\"color: #69707d;\">)</span><span style=\"color: #c4407c;\">\\</span>?<span style=\"color: #69707d;\">(.</span>*<span style=\"color: #69707d;\">)</span>/<span style=\"color: #69707d;\">.</span>matcher<span style=\"color: #69707d;\">(</span>ctx<span style=\"color: #69707d;\">.</span>uri<span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">if</span> <span style=\"color: #69707d;\">(</span>str<span style=\"color: #69707d;\">.</span>find<span style=\"color: #69707d;\">())</span> <span style=\"color: #69707d;\">{</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ctx<span style=\"color: #69707d;\">.</span>url = str<span style=\"color: #69707d;\">.</span><span style=\"color: #0071c2;\">group</span><span style=\"color: #69707d;\">(</span><span style=\"color: #c4407c;\">1</span><span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ctx<span style=\"color: #69707d;\">.</span>param = str<span style=\"color: #69707d;\">.</span><span style=\"color: #0071c2;\">group</span><span style=\"color: #69707d;\">(</span><span style=\"color: #c4407c;\">2</span><span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #69707d;\">}</span> &nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #69707d;\">}</span> <span style=\"color: #0071c2;\">else</span> <span style=\"color: #69707d;\">{</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ctx<span style=\"color: #69707d;\">.</span>url = ctx<span style=\"color: #69707d;\">.</span>uri</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #69707d;\">}</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"\"\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:41:08.5446373Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"uri\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.html\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-17T08:41:08.5446373Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div><div><br /></div><div><b>관련 글</b><br /><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/03/ingest-pipeline-5th.html\">ingest pipeline - 5th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2020/04/ingest-pipeline.html\" target=\"\">ingest pipeline</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2022/04/logstash-fingerprint-2nd.html\">엘라스틱의 해시 변환</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2023/09/convert-ip-to-decimal.html\">convert ip to decimal</a></li></ul></div>",
        "contentSnippet": "로그스태시는 조건문으로 필터의 유기적인 실행 관계를 설정할 수 있다. beat processor도 마찬가지. 다음은 데이터 조건에 따라 달라지는 로그스태시 필터.\n\nfilter {\n mutate {\n  remove_field => [\"@timestamp\", \"@version\", \"path\", \"host\"]\n }\n\n\n dissect {\n  mapping => {\"message\" => '%{} \"%{} %{uri} %{}\" %{}'}\n }\n \nif [uri] =~ '\\?' {\n  grok {\n   match => {'uri' => '(?<url>[^?]+)\\?(?<param>.*)'}\n  }\n } else {\n  mutate {\n   copy => {'uri' => 'url'}\n  }\n }\n}\n\n\n\n\n{\n    \"message\" => \"1.2.3.4 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.html HTTP/1.1\\\" 200 37727\\r\",\n        \"uri\" => \"/bbs/view.html\",\n        \"url\" => \"/bbs/view.html\"\n}\n{\n    \"message\" => \"192.168.56.1 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.php?board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4 HTTP/1.1\\\" 200 37727\\r\",\n      \"param\" => \"board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4\",\n        \"uri\" => \"/bbs/view.php?board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4\",\n        \"url\" => \"/bbs/view.php\"\n}\n\n\n\n\n역시 데이터 조건에 따라 달라지는 beat processor.\n\nprocessors:\n  - include_fields:\n      fields: \"message\"\n  - dissect:\n      tokenizer: '%{} \"%{} %{uri} %{}\" %{}'\n      target_prefix: \"\"\n  - if:\n      contains.uri: \"?\"\n    then:\n      - dissect:\n          field: \"uri\"\n          tokenizer: \"%{url}?%{param}\"\n          target_prefix: \"\"\n    else:\n      copy_fields:\n        fields:\n          - from: uri\n            to: url\n\n\n\n\n{\n  \"@timestamp\": \"2025-03-17T08:13:47.537Z\",\n  \"@metadata\": {\n    \"beat\": \"filebeat\",\n    \"type\": \"_doc\",\n    \"version\": \"8.17.0\"\n  },\n  \"message\": \"1.2.3.4 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.html HTTP/1.1\\\" 200 37727\",\n  \"uri\": \"/bbs/view.html\",\n  \"url\": \"/bbs/view.html\"\n}\n{\n  \"@timestamp\": \"2025-03-17T08:13:47.537Z\",\n  \"@metadata\": {\n    \"beat\": \"filebeat\",\n    \"type\": \"_doc\",\n    \"version\": \"8.17.0\"\n  },\n  \"message\": \"192.168.56.1 - - [12/Oct/2024:02:42:00 +0900] \\\"GET /bbs/view.php?board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4 HTTP/1.1\\\" 200 37727\",\n  \"uri\": \"/bbs/view.php?board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4\",\n  \"param\": \"board_id=kor%5Fmedia&gul_no=1106&idx=17&m=4&upage=25&tpage=&PAGE=4\",\n  \"url\": \"/bbs/view.php\"\n}\n\n\n\n\n그런데 ingest pipeline은 processor에 종속된 조건문만을 지원한다. 다음은 ?가 없는 데이터를 처리하지 못하는 ingest pipeline. \n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"uri\",\n          \"patterns\": [\"(?<url>[^?]+)\\\\?(?<param>.*)\"]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:23:55.1105587Z\"\n        }\n      }\n    },\n    {\n      \"error\": {\n        \"root_cause\": [\n          {\n            \"type\": \"illegal_argument_exception\",\n            \"reason\": \"Provided Grok expressions do not match field value: [index.html]\"\n          }\n        ],\n        \"type\": \"illegal_argument_exception\",\n        \"reason\": \"Provided Grok expressions do not match field value: [index.html]\"\n      }\n    }\n  ]\n}\n\n\n\n\n? 조건을 주면 ?가 있는 데이터만을 처리한다.\n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"uri\",\n          \"patterns\": [\"(?<url>[^?]+)\\\\?(?<param>.*)\"],\n          \"if\": \"ctx.uri.contains('?')\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:27:14.3998071Z\"\n        }\n      }\n    },\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.html\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:27:14.3998071Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n\n이때 해법은 정규표현식을 추가하거나,\n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"uri\",\n          \"patterns\": [\n            \"(?<url>[^?]+)\\\\?(?<param>.*)\", \n            \"(?<url>.*)\"\n          ]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:35:46.6631911Z\"\n        }\n      }\n    },\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.html\",\n          \"url\": \"index.html\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:35:46.6631911Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n\non_failure 옵션으로 예외처리를 하거나,\n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"uri\",\n          \"patterns\": [\"(?<url>[^?]+)\\\\?(?<param>.*)\"],\n          \"on_failure\": [\n            {\n              \"set\": {\n                \"field\": \"url\",\n                \"copy_from\": \"uri\"\n              }\n            }\n          ]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:38:37.0469351Z\"\n        }\n      }\n    },\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.html\",\n          \"url\": \"index.html\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:38:37.0469351Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n\nscript processor를 사용하거나.\n\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"script\": {\n          \"source\": \"\"\"\n            if (ctx.uri.contains('?')) {\n              def str = /([^?]+)\\?(.*)/.matcher(ctx.uri);\n              if (str.find()) {\n                ctx.url = str.group(1);\n                ctx.param = str.group(2);\n              }  \n            } else {\n              ctx.url = ctx.uri\n            }\n          \"\"\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"uri\": \"index.php?a=b\"\n      }\n    },\n    {\n      \"_source\": {\n        \"uri\": \"index.html\"\n      }\n    }\n  ]\n}\n\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:41:08.5446373Z\"\n        }\n      }\n    },\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"uri\": \"index.html\",\n          \"url\": \"index.html\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-17T08:41:08.5446373Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n\n관련 글\n\ningest pipeline - 5th\ningest pipeline\n엘라스틱의 해시 변환\nconvert ip to decimal",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-6511765529749776728",
        "isoDate": "2025-03-17T08:49:00.000Z"
      },
      {
        "title": "ingest pipeline - 5th",
        "link": "https://kangmyounghun.blogspot.com/2025/03/ingest-pipeline-5th.html",
        "pubDate": "2025-03-14T09:40:00.006Z",
        "author": "강명훈",
        "content": "<div>다음은 url과 변수를 구분해서 검사하는 정규표현식.</div>\n<div><br /></div>\n<div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg4vOYiVfia3_qAl3pN3d0EiBYrZ0-SpSV9Xw3YBaXq966ujoFGR9nZe10Q7d1SW4E8-DMPMeWzooqPIDD2FhImKU-OQFtnVIVTmWAU-ETwb1IyzP8uRnz2X6_-OM6ln4jmXowytkMX6UpSdRfOg5ybzTO4TD4abBvrmVIwB-mS3Co4v5U6km4xMkVDuVZ-/s1280/regex_param.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"597\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg4vOYiVfia3_qAl3pN3d0EiBYrZ0-SpSV9Xw3YBaXq966ujoFGR9nZe10Q7d1SW4E8-DMPMeWzooqPIDD2FhImKU-OQFtnVIVTmWAU-ETwb1IyzP8uRnz2X6_-OM6ln4jmXowytkMX6UpSdRfOg5ybzTO4TD4abBvrmVIwB-mS3Co4v5U6km4xMkVDuVZ-/s16000/regex_param.png\" /></a></div><br /><div><span><a name='more'></a></span></div></div>\n<div><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/grok-processor.html\" target=\"_blank\">grok processor</a>&nbsp;사용 시 에러 발생.</div>\n<div><br /></div>\n<div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"msg\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [<span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\?(?&lt;param&gt;.*)\"</span>]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"msg\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div>\n<div><br /></div>\n<div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"error\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"root_cause\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"type\"</span>: <span style=\"color: #bd271e;\">\"parse_exception\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"reason\"</span>: <span style=\"color: #bd271e;\">\"Failed to parse content to type\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ],</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"type\"</span>: <span style=\"color: #bd271e;\">\"parse_exception\"</span>,</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"reason\"</span>: <span style=\"color: #bd271e;\">\"Failed to parse content to type\"</span>,</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"caused_by\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"type\"</span>: <span style=\"color: #bd271e;\">\"json_parse_exception\"</span>,</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"reason\"</span>: <span style=\"color: #bd271e;\">\"\"\"Unrecognized character escape '?' (code 63)</span></div><div><span style=\"color: #bd271e;\">&nbsp;at [Source: (byte[])\"{</span></div><div><span style=\"color: #bd271e;\">&nbsp; \"pipeline\": {</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; \"processors\": [</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; {</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; &nbsp; \"grok\": {</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"field\": \"msg\",</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"patterns\": [\"(?&lt;url&gt;[^?]+)\\?(?&lt;param&gt;.*)\"]</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; ]</span></div><div><span style=\"color: #bd271e;\">&nbsp; },</span></div><div><span style=\"color: #bd271e;\">&nbsp; \"docs\": [</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; {</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; \"_source\": {</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; &nbsp; \"msg\": \"index.php?a=b\"</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: #bd271e;\">&nbsp; &nbsp; }</span></div><div><span style=\"color: #bd271e;\">&nbsp; ]</span></div><div><span style=\"color: #bd271e;\">}</span></div><div><span style=\"color: #bd271e;\">\"; line: 7, column: 39]</span><span style=\"color: #bd271e;\">\"\"\"</span></div><div>&nbsp; &nbsp; }</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"status\"</span>: <span style=\"color: #ba3d76;\">400</span></div><div>}</div></div></div>\n<div><br /></div>\n<div>순수 문자 <span style=\"font-family: courier;\">?<span style=\"font-size: x-small;\">(\\?)</span></span>를 인식하지 못한다. 예외처리를 한 번 더 해줘야 함.</div>\n<div><br /></div>\n<div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"grok\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"field\"</span>: <span style=\"color: #bd271e;\">\"msg\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"patterns\"</span>: [<span style=\"color: #bd271e;\">\"(?&lt;url&gt;[^?]+)\\\\?(?&lt;param&gt;.*)\"</span>]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"msg\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div>\n<div><br /></div>\n<div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"msg\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-14T09:25:47.8591859Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div>\n<div><br /></div>\n<div>grok과&nbsp;<a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/script-processor.html\" target=\"_blank\">script processor</a>의 정규표현식 처리 방식이 다르다. 이러니 헷갈리지<span style=\"font-size: x-small;\">(..)</span></div>\n<div><br /></div>\n<div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div><span style=\"color: #d20a6d;\">POST</span> <span style=\"color: #007b72;\">_ingest/pipeline/_simulate</span></div><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"pipeline\"</span>: {</div><div>&nbsp; &nbsp; <span style=\"color: #0071c2;\">\"processors\"</span>: [</div><div>&nbsp; &nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"script\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"source\"</span>: \"\"\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #007e77;\">def</span> str = /<span style=\"color: #69707d;\">([</span>^?<span style=\"color: #69707d;\">]</span>+<span style=\"color: #69707d;\">)</span><span style=\"color: #c4407c;\">\\</span>?<span style=\"color: #69707d;\">(.</span>*<span style=\"color: #69707d;\">)</span>/<span style=\"color: #69707d;\">.</span>matcher<span style=\"color: #69707d;\">(</span>ctx<span style=\"color: #69707d;\">.</span>msg<span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">if</span> <span style=\"color: #69707d;\">(</span>str<span style=\"color: #69707d;\">.</span>find<span style=\"color: #69707d;\">())</span> <span style=\"color: #69707d;\">{</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ctx<span style=\"color: #69707d;\">.</span>url = str<span style=\"color: #69707d;\">.</span><span style=\"color: #0071c2;\">group</span><span style=\"color: #69707d;\">(</span><span style=\"color: #c4407c;\">1</span><span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ctx<span style=\"color: #69707d;\">.</span>param = str<span style=\"color: #69707d;\">.</span><span style=\"color: #0071c2;\">group</span><span style=\"color: #69707d;\">(</span><span style=\"color: #c4407c;\">2</span><span style=\"color: #69707d;\">);</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #69707d;\">}</span> &nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \"\"\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; ]</div><div>&nbsp; },</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"msg\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span></div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div>\n<div><br /></div>\n<div><div style=\"background-color: #fbfcfd; color: #343741; font-family: &quot;Roboto Mono&quot;, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 21px; white-space: pre;\"><div>{</div><div>&nbsp; <span style=\"color: #0071c2;\">\"docs\"</span>: [</div><div>&nbsp; &nbsp; {</div><div>&nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"doc\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_index\"</span>: <span style=\"color: #bd271e;\">\"_index\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_version\"</span>: <span style=\"color: #bd271e;\">\"-3\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_id\"</span>: <span style=\"color: #bd271e;\">\"_id\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_source\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"msg\"</span>: <span style=\"color: #bd271e;\">\"index.php?a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"param\"</span>: <span style=\"color: #bd271e;\">\"a=b\"</span>,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"url\"</span>: <span style=\"color: #bd271e;\">\"index.php\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; },</div><div>&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"_ingest\"</span>: {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0071c2;\">\"timestamp\"</span>: <span style=\"color: #bd271e;\">\"2025-03-14T09:29:27.6636501Z\"</span></div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; }</div><div>&nbsp; ]</div><div>}</div></div></div>\n<div><br /></div>\n<div><b>관련 글</b><br /><ul><li><a href=\"https://kangmyounghun.blogspot.com/2025/03/ingest-pipeline-6th.html\">ingest pipeline - 6th</a></li><li><a href=\"https://kangmyounghun.blogspot.com/2024/05/ingest-pipeline-4th.html\">ingest pipeline - 4th</a></li></ul></div><div><div><ul></ul></div></div>",
        "contentSnippet": "다음은 url과 변수를 구분해서 검사하는 정규표현식.\n\n\n\n\n\ngrok processor 사용 시 에러 발생.\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"msg\",\n          \"patterns\": [\"(?<url>[^?]+)\\?(?<param>.*)\"]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"msg\": \"index.php?a=b\"\n      }\n    }\n  ]\n}\n\n\n\n{\n  \"error\": {\n    \"root_cause\": [\n      {\n        \"type\": \"parse_exception\",\n        \"reason\": \"Failed to parse content to type\"\n      }\n    ],\n    \"type\": \"parse_exception\",\n    \"reason\": \"Failed to parse content to type\",\n    \"caused_by\": {\n      \"type\": \"json_parse_exception\",\n      \"reason\": \"\"\"Unrecognized character escape '?' (code 63)\n at [Source: (byte[])\"{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"msg\",\n          \"patterns\": [\"(?<url>[^?]+)\\?(?<param>.*)\"]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"msg\": \"index.php?a=b\"\n      }\n    }\n  ]\n}\n\"; line: 7, column: 39]\"\"\"\n    }\n  },\n  \"status\": 400\n}\n\n\n순수 문자 ?(\\?)를 인식하지 못한다. 예외처리를 한 번 더 해줘야 함.\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"grok\": {\n          \"field\": \"msg\",\n          \"patterns\": [\"(?<url>[^?]+)\\\\?(?<param>.*)\"]\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"msg\": \"index.php?a=b\"\n      }\n    }\n  ]\n}\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"msg\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-14T09:25:47.8591859Z\"\n        }\n      }\n    }\n  ]\n}\n\n\ngrok과 script processor의 정규표현식 처리 방식이 다르다. 이러니 헷갈리지(..)\n\n\nPOST _ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"script\": {\n          \"source\": \"\"\"\n            def str = /([^?]+)\\?(.*)/.matcher(ctx.msg);\n            if (str.find()) {\n              ctx.url = str.group(1);\n              ctx.param = str.group(2);\n            }  \n          \"\"\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_source\": {\n        \"msg\": \"index.php?a=b\"\n      }\n    }\n  ]\n}\n\n\n\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"_index\",\n        \"_version\": \"-3\",\n        \"_id\": \"_id\",\n        \"_source\": {\n          \"msg\": \"index.php?a=b\",\n          \"param\": \"a=b\",\n          \"url\": \"index.php\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2025-03-14T09:29:27.6636501Z\"\n        }\n      }\n    }\n  ]\n}\n\n\n관련 글\n\ningest pipeline - 6th\ningest pipeline - 4th",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-936693003644830557",
        "isoDate": "2025-03-14T09:40:00.006Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Lael's World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "티스토리 유료화된다면? 블로거들이 꼭 알아야 할 변화와 대응법 - 티스토리의 미래 3부작 (2부)",
        "link": "http://muzbox.tistory.com/483558",
        "pubDate": "Fri, 21 Mar 2025 08:34:34 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483558#entry483558comment",
        "content": "<p data-ke-size=\"size16\">티스토리가 유료화된다면, 블로거들에게 어떤 변화가 있을까요?<br />무료 플랜과 유료 플랜이 도입될 가능성을 분석하고, 블로거들이 어떻게 대비해야 할지 실질적인 전략을 제공합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_티스토리 유료화된다면.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/bq2adb/btsMSandWVj/Up8Bxny6fnn6CbQTSDPoZk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bq2adb/btsMSandWVj/Up8Bxny6fnn6CbQTSDPoZk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bq2adb/btsMSandWVj/Up8Bxny6fnn6CbQTSDPoZk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbq2adb%2FbtsMSandWVj%2FUp8Bxny6fnn6CbQTSDPoZk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"티스토리 유료화된다면? 블로거들이 꼭 알아야 할 변화와 대응법\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_티스토리 유료화된다면.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style1\"><span style=\"font-family: 'Noto Serif KR';\">\"티스토리가 유료화되면, 블로그 운영을 계속할 수 있을까?\"</span></blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">최근 <b>카카오가 다음을 분사를 결정</b>하면서, 티스토리의 미래도 불투명해지고 있습니다.<br />네이버 블로그, 브런치 등 경쟁 플랫폼과 차별성을 유지하려면,<br /><b>티스토리도 워드프레스처럼 유료 모델로 전환할 가능성이 있다</b>는 전망이 나오고 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>무료 &amp; 유료 모델이 도입될까?</b><br />✅ <b>어떤 방식으로 유료화될 가능성이 있을까?</b><br />✅ <b>블로거들은 어떻게 대비해야 할까?</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">티스토리가 유료화될 경우 예상되는 변화와 대응 전략을 분석해 보겠습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리, 왜 유료화 가능성이 거론될까?</b></span></h2>\n<p data-ke-size=\"size16\">지금까지 티스토리는 <b>무료 블로그 플랫폼</b>으로 운영되어 왔습니다.<br />그런데 <b>카카오가 티스토리를 계속 운영할 경우, 수익 모델 강화를 위해 유료화할 가능성이 높아지고 있습니다.</b></p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>1️⃣ 카카오는 티스토리를 수익화해야 한다</b></span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>네이버 블로그는 <b>네이버 검색과 통합되어 광고 수익을 창출</b></li>\n<li>워드프레스는 <b>독립 블로그 운영 + 유료 플랜 도입</b>으로 수익 모델 구축</li>\n<li>반면 티스토리는 광고 플랫폼으로서 경쟁력이 약해지고 있음</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>검색 트래픽이 줄어드는 상황에서, 티스토리는 새로운 수익 구조를 찾아야 합니다.</b></p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>2️⃣ 카카오는 콘텐츠 사업을 강화하고 있다</b></span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>카카오 브런치는 <b>작가 중심의 프리미엄 콘텐츠 플랫폼</b></li>\n<li>카카오뷰는 <b>큐레이션 서비스로 광고 수익을 창출</b></li>\n<li>티스토리도 단순 블로그가 아니라, 콘텐츠 수익 모델을 도입할 가능성 높음</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>즉, 티스토리는 기존 블로그 방식을 유지하기보다는, 새로운 방식의 유료 서비스로 전환될 수 있습니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리가 유료화된다면, 어떤 방식이 될까?</b></span></h2>\n<p data-ke-size=\"size16\">티스토리가 유료 모델을 도입한다면, <b>3가지 시나리오</b>가 예상됩니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  1) 무료 &amp; 유료 플랜 병행 모델 (가장 가능성 높음)</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>무료 플랜:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>기존 티스토리 블로그 운영 가능</li>\n<li><b>광고 포함 (애드센스 사용 제한 가능성)</b></li>\n<li><b>기능 일부 제한 (예: SEO 설정, 고급 테마 사용 불가)</b></li>\n</ul>\n<p data-ke-size=\"size16\">✅ <b>유료 플랜:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>광고 제거 옵션 제공</b></li>\n<li><b>SEO 최적화 기능 제공</b> (검색 노출 강화 기능 추가)</li>\n<li><b>고급 테마 지원 및 블로그 디자인 커스터마이징 가능</b></li>\n<li><b>개별 도메인 연결 가능</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>가능성이 높은 이유:</b><br />  네이버 블로그는 애드센스 적용이 불가능하지만, 티스토리는 수익형 블로그 모델을 유지해야 함<br />  카카오 입장에서 무료 사용자를 유지하면서, <b>고급 기능을 원하는 블로거들에게 유료 플랜을 제공하는 것이 현실적</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  2) 완전 유료화 (독립 블로그 플랫폼 전환)</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>독립 블로그 운영 (호스팅 기반 모델)</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>블로그를 직접 운영할 수 있도록, <b>월별 요금제 기반으로 제공</b></li>\n<li>워드프레스처럼 <b>호스팅 방식으로 전환</b></li>\n<li>사용자들이 직접 블로그를 관리하고, <b>자체 서버 및 트래픽 비용을 부담</b></li>\n</ul>\n<p data-ke-size=\"size16\">❌ <b>위험 요소:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>블로거들의 이탈 가능성이 커짐</li>\n<li>유지 비용이 증가하면서, <b>초보 블로거들이 접근하기 어려워짐</b></li>\n<li>현재 카카오의 방향성과 일치하지 않을 가능성이 있음</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>가능성이 낮은 이유:</b><br />  <b>완전 유료화할 경우, 기존 블로거들의 대량 이탈이 발생할 수 있음</b><br />  <b>카카오는 플랫폼 기반 광고 수익을 원하기 때문에, 무료 사용자도 필요함</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  3) 프리미엄 콘텐츠 모델 (브런치 스타일 도입)</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>블로그 기반 유료 콘텐츠 판매 기능 추가</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>일부 글을 유료로 제공 (구독 모델 도입 가능성)</li>\n<li>크리에이터 지원 프로그램과 연계</li>\n<li>카카오페이와 연계하여 <b>후원 및 구독 결제 기능 도입 가능</b></li>\n</ul>\n<p data-ke-size=\"size16\">❌ <b>위험 요소:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>기존 무료 블로그와의 차별성이 약해질 수 있음</li>\n<li>네이버 블로그 및 워드프레스와의 차별화 전략이 필요함</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>가능성이 있는 이유:</b><br />  브런치와 유사한 방식으로, <b>티스토리를 프리미엄 블로그로 변화시키려 할 수도 있음</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  블로거들은 어떻게 대비해야 할까?</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>✅ 1️⃣ 유료화 대비, 블로그 수익 모델 점검하기</b></span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>애드센스를 사용 중이라면, <b>무료 플랜에서 계속 허용될지 확인 필요</b></li>\n<li>SEO 기능이 제한될 가능성이 있으므로, <b>구글 검색 최적화를 미리 강화</b></li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>✅ 2️⃣ 티스토리 백업 및 마이그레이션 준비</b></span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>만약 유료화가 부담된다면, <b>워드프레스(독립 블로그), 네이버 블로그 등 대체 플랫폼 검토 필요</b></li>\n<li>블로그 데이터를 주기적으로 백업하여, <b>필요할 경우 다른 플랫폼으로 이전할 준비</b></li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>✅ 3️⃣ 대체 플랫폼 비교 분석</b></span></h3>\n<div>\n<style>\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    text-align: left;\n  }\n  th {\n    background-color: #333333; /* 타이틀 행 배경색 */\n    color: #FFFFFF; /* 글자색 */\n    padding: 12px;\n  }\n  td {\n    border: 1px solid #dddddd;\n    padding: 10px;\n  }\n  tr:nth-child(even) {\n    background-color: #f9f9f9; /* 짝수 행 배경색 */\n  }\n</style>\n</div>\n<table data-ke-align=\"alignLeft\">\n<thead>\n<tr>\n<th>플랫폼</th>\n<th>특징</th>\n<th>장점</th>\n<th>단점</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><b>네이버 블로그</b></td>\n<td>네이버 검색 최적화</td>\n<td>트래픽 확보 쉬움</td>\n<td>애드센스 불가</td>\n</tr>\n<tr>\n<td><b>브런치 (카카오)</b></td>\n<td>프리미엄 콘텐츠</td>\n<td>브랜드 구축 가능</td>\n<td>광고 수익 불가</td>\n</tr>\n<tr>\n<td><b>워드프레스</b></td>\n<td>독립 운영 가능</td>\n<td>애드센스&middot;광고 가능</td>\n<td>유지 비용 발생</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">  <b>티스토리를 계속 유지할지, 대체 플랫폼으로 이동할지는 유료화 방식에 따라 결정해야 합니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  마무리: 티스토리, 유료화될까? 블로거들은 어떻게 준비해야 할까?</b></span></h2>\n<p data-ke-size=\"size16\">✅ <b>티스토리는 네이버 블로그, 워드프레스와 차별화하기 위해 유료 모델을 도입할 가능성이 있다.</b><br />✅ <b>가장 현실적인 시나리오는 &lsquo;무료 &amp; 유료 플랜 병행 모델&rsquo;로, 광고 제거 및 SEO 강화 옵션을 제공하는 방식이 될 가능성이 크다.</b><br />✅ <b>블로거들은 지금부터 블로그 데이터를 백업하고, SEO 최적화를 강화하면서 유료화에 대비해야 한다.</b></p>\n<p data-ke-size=\"size16\">  <b>티스토리가 유료화될 경우, 블로거들이 생존할 방법을 미리 준비해야 합니다!</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1742513416014\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\" data-og-description=\"한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483556\" data-og-url=\"https://muzbox.tistory.com/483556\" data-og-image=\"https://scrap.kakaocdn.net/dn/FilE6/hyYuqS2ZY0/b2cfgZLyRxhKqGxykHKum0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/8nl3Z/hyYvimD8St/EN81cRzQOOgSTKpBiiKNKK/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/A7DKC/hyYvrKFqx7/XGJC1XKn2gretd02R6OTnK/img.png?width=1408&amp;height=768&amp;face=411_330_459_382\"><a href=\"https://muzbox.tistory.com/483556\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483556\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/FilE6/hyYuqS2ZY0/b2cfgZLyRxhKqGxykHKum0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/8nl3Z/hyYvimD8St/EN81cRzQOOgSTKpBiiKNKK/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/A7DKC/hyYvrKFqx7/XGJC1XKn2gretd02R6OTnK/img.png?width=1408&amp;height=768&amp;face=411_330_459_382');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure id=\"og_1742513426556\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)\" data-og-description=\"카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483557\" data-og-url=\"https://muzbox.tistory.com/483557\" data-og-image=\"https://scrap.kakaocdn.net/dn/TZ24Y/hyYujzAQ8G/d81MYS8HI2ghUN3t3dnLlk/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/pKNWY/hyYuqyIQtc/6mJ2G3SRgZbndmbWYa7FA0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/dYzppk/hyYvqLJLZu/mEk7Gc1cuOlzxR7kXQ9Yg0/img.png?width=1408&amp;height=768&amp;face=0_0_1408_768\"><a href=\"https://muzbox.tistory.com/483557\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483557\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/TZ24Y/hyYujzAQ8G/d81MYS8HI2ghUN3t3dnLlk/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/pKNWY/hyYuqyIQtc/6mJ2G3SRgZbndmbWYa7FA0/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/dYzppk/hyYvqLJLZu/mEk7Gc1cuOlzxR7kXQ9Yg0/img.png?width=1408&amp;height=768&amp;face=0_0_1408_768');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #009a87;\"><b>❓ Q&amp;A</b></span></h3>\n<p data-ke-size=\"size16\"><b>Q1. 티스토리가 유료화될 가능성이 있나요?</b><br />A. 카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 유료화된다면 어떤 방식으로 진행될까요?</b><br />A. 무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?</b><br />A. 검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. 티스토리가 완전 유료화될 가능성도 있나요?</b><br />A. 완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.</p>\n<p data-ke-size=\"size16\"><b>Q5. 유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?</b><br />A. 대체 플랫폼으로는 <b>네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능)</b> 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.<b></b></p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화된다면 어떤 방식으로 진행될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 완전 유료화될 가능성도 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"대체 플랫폼으로는 네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능) 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "티스토리가 유료화된다면, 블로거들에게 어떤 변화가 있을까요?\n무료 플랜과 유료 플랜이 도입될 가능성을 분석하고, 블로거들이 어떻게 대비해야 할지 실질적인 전략을 제공합니다.\n\n\n \n\"티스토리가 유료화되면, 블로그 운영을 계속할 수 있을까?\"\n \n최근 카카오가 다음을 분사를 결정하면서, 티스토리의 미래도 불투명해지고 있습니다.\n네이버 블로그, 브런치 등 경쟁 플랫폼과 차별성을 유지하려면,\n티스토리도 워드프레스처럼 유료 모델로 전환할 가능성이 있다는 전망이 나오고 있습니다.\n \n✅ 무료 & 유료 모델이 도입될까?\n✅ 어떤 방식으로 유료화될 가능성이 있을까?\n✅ 블로거들은 어떻게 대비해야 할까?\n \n티스토리가 유료화될 경우 예상되는 변화와 대응 전략을 분석해 보겠습니다.\n \n \n  티스토리, 왜 유료화 가능성이 거론될까?\n지금까지 티스토리는 무료 블로그 플랫폼으로 운영되어 왔습니다.\n그런데 카카오가 티스토리를 계속 운영할 경우, 수익 모델 강화를 위해 유료화할 가능성이 높아지고 있습니다.\n1️⃣ 카카오는 티스토리를 수익화해야 한다\n네이버 블로그는 네이버 검색과 통합되어 광고 수익을 창출\n워드프레스는 독립 블로그 운영 + 유료 플랜 도입으로 수익 모델 구축\n반면 티스토리는 광고 플랫폼으로서 경쟁력이 약해지고 있음\n  검색 트래픽이 줄어드는 상황에서, 티스토리는 새로운 수익 구조를 찾아야 합니다.\n2️⃣ 카카오는 콘텐츠 사업을 강화하고 있다\n카카오 브런치는 작가 중심의 프리미엄 콘텐츠 플랫폼\n카카오뷰는 큐레이션 서비스로 광고 수익을 창출\n티스토리도 단순 블로그가 아니라, 콘텐츠 수익 모델을 도입할 가능성 높음\n  즉, 티스토리는 기존 블로그 방식을 유지하기보다는, 새로운 방식의 유료 서비스로 전환될 수 있습니다.\n \n  티스토리가 유료화된다면, 어떤 방식이 될까?\n티스토리가 유료 모델을 도입한다면, 3가지 시나리오가 예상됩니다.\n  1) 무료 & 유료 플랜 병행 모델 (가장 가능성 높음)\n✅ 무료 플랜:\n기존 티스토리 블로그 운영 가능\n광고 포함 (애드센스 사용 제한 가능성)\n기능 일부 제한 (예: SEO 설정, 고급 테마 사용 불가)\n✅ 유료 플랜:\n광고 제거 옵션 제공\nSEO 최적화 기능 제공 (검색 노출 강화 기능 추가)\n고급 테마 지원 및 블로그 디자인 커스터마이징 가능\n개별 도메인 연결 가능\n  가능성이 높은 이유:\n  네이버 블로그는 애드센스 적용이 불가능하지만, 티스토리는 수익형 블로그 모델을 유지해야 함\n  카카오 입장에서 무료 사용자를 유지하면서, 고급 기능을 원하는 블로거들에게 유료 플랜을 제공하는 것이 현실적\n \n  2) 완전 유료화 (독립 블로그 플랫폼 전환)\n✅ 독립 블로그 운영 (호스팅 기반 모델)\n블로그를 직접 운영할 수 있도록, 월별 요금제 기반으로 제공\n워드프레스처럼 호스팅 방식으로 전환\n사용자들이 직접 블로그를 관리하고, 자체 서버 및 트래픽 비용을 부담\n❌ 위험 요소:\n블로거들의 이탈 가능성이 커짐\n유지 비용이 증가하면서, 초보 블로거들이 접근하기 어려워짐\n현재 카카오의 방향성과 일치하지 않을 가능성이 있음\n  가능성이 낮은 이유:\n  완전 유료화할 경우, 기존 블로거들의 대량 이탈이 발생할 수 있음\n  카카오는 플랫폼 기반 광고 수익을 원하기 때문에, 무료 사용자도 필요함\n \n  3) 프리미엄 콘텐츠 모델 (브런치 스타일 도입)\n✅ 블로그 기반 유료 콘텐츠 판매 기능 추가\n일부 글을 유료로 제공 (구독 모델 도입 가능성)\n크리에이터 지원 프로그램과 연계\n카카오페이와 연계하여 후원 및 구독 결제 기능 도입 가능\n❌ 위험 요소:\n기존 무료 블로그와의 차별성이 약해질 수 있음\n네이버 블로그 및 워드프레스와의 차별화 전략이 필요함\n  가능성이 있는 이유:\n  브런치와 유사한 방식으로, 티스토리를 프리미엄 블로그로 변화시키려 할 수도 있음\n \n \n  블로거들은 어떻게 대비해야 할까?\n✅ 1️⃣ 유료화 대비, 블로그 수익 모델 점검하기\n애드센스를 사용 중이라면, 무료 플랜에서 계속 허용될지 확인 필요\nSEO 기능이 제한될 가능성이 있으므로, 구글 검색 최적화를 미리 강화\n✅ 2️⃣ 티스토리 백업 및 마이그레이션 준비\n만약 유료화가 부담된다면, 워드프레스(독립 블로그), 네이버 블로그 등 대체 플랫폼 검토 필요\n블로그 데이터를 주기적으로 백업하여, 필요할 경우 다른 플랫폼으로 이전할 준비\n✅ 3️⃣ 대체 플랫폼 비교 분석\n플랫폼\n특징\n장점\n단점\n\n\n\n\n네이버 블로그\n네이버 검색 최적화\n트래픽 확보 쉬움\n애드센스 불가\n\n\n브런치 (카카오)\n프리미엄 콘텐츠\n브랜드 구축 가능\n광고 수익 불가\n\n\n워드프레스\n독립 운영 가능\n애드센스·광고 가능\n유지 비용 발생\n\n\n\n  티스토리를 계속 유지할지, 대체 플랫폼으로 이동할지는 유료화 방식에 따라 결정해야 합니다.\n \n  마무리: 티스토리, 유료화될까? 블로거들은 어떻게 준비해야 할까?\n✅ 티스토리는 네이버 블로그, 워드프레스와 차별화하기 위해 유료 모델을 도입할 가능성이 있다.\n✅ 가장 현실적인 시나리오는 ‘무료 & 유료 플랜 병행 모델’로, 광고 제거 및 SEO 강화 옵션을 제공하는 방식이 될 가능성이 크다.\n✅ 블로거들은 지금부터 블로그 데이터를 백업하고, SEO 최적화를 강화하면서 유료화에 대비해야 한다.\n  티스토리가 유료화될 경우, 블로거들이 생존할 방법을 미리 준비해야 합니다!\n \n \n\n \n다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\n한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\nmuzbox.tistory.com\n\n \n\n \n카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)\n카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생\nmuzbox.tistory.com\n\n \n❓ Q&A\nQ1. 티스토리가 유료화될 가능성이 있나요?\nA. 카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\nQ2. 유료화된다면 어떤 방식으로 진행될까요?\nA. 무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.\nQ3. 티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?\nA. 검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\nQ4. 티스토리가 완전 유료화될 가능성도 있나요?\nA. 완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.\nQ5. 유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?\nA. 대체 플랫폼으로는 네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능) 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화된다면 어떤 방식으로 진행될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"무료 플랜과 유료 플랜이 병행될 가능성이 높습니다. 무료 플랜은 광고 포함, 기능 일부 제한이 있을 수 있으며, 유료 플랜에서는 광고 제거, SEO 최적화, 고급 테마 지원 등의 기능이 추가될 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 유료화에 어떻게 대비해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 완전 유료화될 가능성도 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"완전 유료화될 가능성은 낮지만, 독립 블로그 호스팅 방식으로 전환될 경우 일정 비용이 필요할 수도 있습니다. 하지만 기존 사용자의 대량 이탈을 막기 위해 무료 모델도 유지될 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유료화되면 대체할 수 있는 블로그 플랫폼은 어떤 것이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"대체 플랫폼으로는 네이버 블로그(검색 최적화), 브런치(프리미엄 콘텐츠), 워드프레스(독립 블로그 운영 가능) 등이 있습니다. 블로그의 성격과 목표에 따라 적합한 플랫폼을 선택하는 것이 중요합니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483558",
        "categories": [
          "NEWS/IT 뉴스",
          "블로그 마이그레이션",
          "블로그 유료 모델",
          "카카오 다음 분사",
          "티스토리 SEO",
          "티스토리 광고 정책",
          "티스토리 대체 플랫폼",
          "티스토리 미래",
          "티스토리 애드센스",
          "티스토리 워드프레스",
          "티스토리 유료화"
        ],
        "isoDate": "2025-03-20T23:34:34.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "카카오, 다음과 결별하다! 티스토리의 앞날은? 티스토리의 미래 3부작 (1부)",
        "link": "http://muzbox.tistory.com/483557",
        "pubDate": "Thu, 20 Mar 2025 10:57:22 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483557#entry483557comment",
        "content": "<p data-ke-size=\"size16\">카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생존 전략을 살펴봅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_카카오, 다음과 결별하다 티스토리의 앞날은.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/cw0jkl/btsMPtO890X/IDCMp1KnpuSlRlU3EbWYu0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cw0jkl/btsMPtO890X/IDCMp1KnpuSlRlU3EbWYu0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cw0jkl/btsMPtO890X/IDCMp1KnpuSlRlU3EbWYu0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcw0jkl%2FbtsMPtO890X%2FIDCMp1KnpuSlRlU3EbWYu0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"카카오, 다음과 결별하다! 티스토리의 앞날은?\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_카카오, 다음과 결별하다 티스토리의 앞날은.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">얼마 전, 카카오가 포털 서비스 &lsquo;다음(Daum)&rsquo;을 분사한다고 발표했습니다. 이로 인해 <b>다음과 함께 운영되던 블로그 플랫폼, 티스토리의 미래도 불확실해졌습니다. </b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다음이 독립하면 <b>티스토리가 다음과 함께 가는 것인지</b>,아니면 <b>카카오가 유지하는 것인지에 따라 </b>블로거들에게 미치는 영향이 크게 달라질 것입니다. 그렇다면, 티스토리는 어디로 향하게 될까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  카카오와 다음의 분사, 왜 일어났을까?</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>1️⃣ 다음, 한때 &lsquo;국민 포털&rsquo;에서 잊힌 존재로</b></span></h3>\n<p data-ke-size=\"size16\">다음은 2000년대 초반만 해도 네이버보다 먼저 시장을 선점한 강력한 포털이었습니다.<br /><b>한메일(Hanmail)</b>, <b>다음 카페</b>, <b>블로그</b> 등을 통해 커뮤니티 중심의 서비스를 제공하며 많은 사용자층을 확보했죠.</p>\n<p data-ke-size=\"size16\">하지만, 2010년대 이후 <b>네이버의 통합 검색과 구글의 부상</b>으로 인해 점유율이 계속 하락했습니다.<br />2024년 2월 기준, 다음의 국내 검색 시장 점유율은 <b>2.72%</b>로 네이버(약 60%)와 구글(약 40%)에 크게 밀린 상태입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>2️⃣ 카카오는 왜 다음을 버릴까?</b></span></h3>\n<p data-ke-size=\"size16\">카카오는 이제 <b>포털보다 &lsquo;AI&rsquo;와 &lsquo;카카오톡&rsquo; 중심의 전략을 펼치고 있습니다.</b><br />카카오 대표인 정신아는 &ldquo;카톡과 AI가 핵심 사업이며, 관련 없는 분야는 정리하겠다&rdquo;고 밝혔습니다.</p>\n<p data-ke-size=\"size16\">즉, <b>검색과 포털 사업이 카카오의 핵심이 아니게 되었고</b>,<br />경영 효율화를 위해 <b>다음을 떼어내는 것</b>이 불가피한 선택이었던 것입니다.</p>\n<p data-ke-size=\"size16\">  <b>그렇다면, 티스토리는 어떻게 될까요?</b></p>\n<figure id=\"og_1742435760521\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"article\" data-og-title=\"다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\" data-og-description=\"한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\" data-og-host=\"muzbox.tistory.com\" data-og-source-url=\"https://muzbox.tistory.com/483556\" data-og-url=\"https://muzbox.tistory.com/483556\" data-og-image=\"https://scrap.kakaocdn.net/dn/bvEi85/hyYvfcfkad/j7N7Aa3J8U4qexLcyKtGVk/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/JwuYZ/hyYrPsDNe7/qtM77YkyfXbHnzkLhwyfu1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/bfvsXt/hyYvqSnDRJ/odUkJq95rCqUrrADUntzdk/img.png?width=1408&amp;height=768&amp;face=411_330_459_382\"><a href=\"https://muzbox.tistory.com/483556\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://muzbox.tistory.com/483556\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bvEi85/hyYvfcfkad/j7N7Aa3J8U4qexLcyKtGVk/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/JwuYZ/hyYrPsDNe7/qtM77YkyfXbHnzkLhwyfu1/img.png?width=800&amp;height=436&amp;face=0_0_800_436,https://scrap.kakaocdn.net/dn/bfvsXt/hyYvqSnDRJ/odUkJq95rCqUrrADUntzdk/img.png?width=1408&amp;height=768&amp;face=411_330_459_382');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제</p>\n<p class=\"og-host\" data-ke-size=\"size16\">muzbox.tistory.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  티스토리의 미래, 다음이 가져갈까? 카카오가 유지할까?</b></span></h2>\n<p data-ke-size=\"size16\">티스토리는 원래 <b>다음이 2007년에 인수한 블로그 서비스</b>입니다.<br />이후 다음-카카오 합병으로 인해 카카오 소속이 되었지만,<br />검색 점유율이 떨어지면서 점점 홀대받아 온 것이 사실입니다.</p>\n<p data-ke-size=\"size16\">이번 분사 결정으로 <b>티스토리가 다음으로 가게 될지, 아니면 카카오가 유지할지</b>가 최대 관건입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  시나리오 1: 티스토리가 &lsquo;다음&rsquo; 소속이 된다면?</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>가능한 변화:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>다음 검색과의 연계 강화</b> &rarr; 티스토리 블로그가 다음 검색에서 우선 노출될 가능성</li>\n<li><b>검색 최적화(SEO) 기능 개선</b> &rarr; 네이버 블로그와 경쟁하기 위한 전략 추진</li>\n</ul>\n<p data-ke-size=\"size16\">❌ <b>위험 요소:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>다음 자체의 점유율이 낮아 티스토리 트래픽이 오히려 감소할 수도 있음</b></li>\n<li><b>다음이 독립 법인으로 성공하지 못하면, 티스토리도 불안정해질 가능성</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>결론:</b><br />  다음이 티스토리를 가져간다면 <b>검색 노출을 강화하려 할 가능성이 크지만</b>,<br />  다음 자체의 점유율이 낮아 <b>블로그 트래픽 확보가 어려울 수 있다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  시나리오 2: 티스토리를 &lsquo;카카오&rsquo;가 유지한다면?</b></span></h3>\n<p data-ke-size=\"size16\">✅ <b>가능한 변화:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>카카오의 AI 검색과 연계</b> &rarr; 카카오톡, 브런치, 카카오뷰와 통합될 가능성</li>\n<li><b>유료화 가능성 증가</b> &rarr; 워드프레스처럼 유료 블로그 모델 도입 가능</li>\n</ul>\n<p data-ke-size=\"size16\">❌ <b>위험 요소:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>카카오가 티스토리에 대한 관심이 크지 않다면, 방치될 가능성도 있음</b></li>\n<li><b>카카오뷰&middot;브런치에 흡수될 경우, 기존 블로그 방식이 사라질 수도 있음</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>결론:</b><br />  <b>카카오가 유지한다면, 티스토리는 검색보다는 &lsquo;콘텐츠 플랫폼&rsquo;으로 변할 가능성이 크다.</b><br />  <b>유료화될 경우, 블로거들의 비용 부담이 커질 수 있다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  블로거들이 지금 준비해야 할 것!</b></span></h2>\n<p data-ke-size=\"size16\">티스토리가 어디로 가든, <b>블로거들은 대비해야 합니다.</b><br />트래픽과 수익을 유지하려면 <b>지금부터 대체 전략을 고민해야 합니다.</b></p>\n<h3 data-ke-size=\"size23\"><b>✅ 1️⃣ 검색 트래픽 변화 대비하기</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>티스토리가 다음 소속이 된다면, 구글 SEO 최적화가 더 중요해짐</b></li>\n<li><b>카카오가 유지한다면, 카카오톡 및 카카오뷰 활용이 중요</b></li>\n</ul>\n<h3 data-ke-size=\"size23\"><b>✅ 2️⃣ 블로그 백업 및 데이터 관리 필수</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>백업을 정기적으로 진행해 만일의 사태에 대비하기</b></li>\n<li><b>티스토리가 급격히 변화할 경우, 빠르게 대체 플랫폼으로 이동할 준비</b></li>\n</ul>\n<h3 data-ke-size=\"size23\"><b>✅ 3️⃣ 대체 블로그 플랫폼 고려하기</b></h3>\n<p data-ke-size=\"size16\">티스토리가 변할 경우를 대비해, <b>다른 블로그 플랫폼을 미리 알아두는 것도 중요합니다.</b><br />  <b>티스토리를 계속 사용할지, 떠날지는 상황을 보면서 신중하게 결정해야 합니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  마무리: 티스토리, 변화 속에서 살아남을 수 있을까?</b></span></h2>\n<p data-ke-size=\"size16\">카카오와 다음의 결별로 인해 <b>티스토리는 변화를 피할 수 없습니다.</b><br /><b>다음과 함께 독립하든, 카카오가 유지하든, 기존 블로거들에게 미치는 영향은 상당할 것입니다.</b></p>\n<p data-ke-size=\"size16\">✅ <b>티스토리가 검색 최적화로 가든, 콘텐츠 플랫폼으로 변화하든, 블로거들은 유입 전략을 다시 짜야 합니다.</b><br />✅ <b>유료화 가능성, 검색 노출 변화, 플랫폼 통합 여부 등을 면밀히 주시해야 합니다.</b><br />✅ <b>무엇보다, 백업과 대체 플랫폼을 준비하는 것이 가장 중요한 생존 전략이 될 것입니다.</b><b></b></p>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><b>❓ Q&amp;A</b></h3>\n<p data-ke-size=\"size16\"><b>Q1. 카카오가 다음을 분사한 이유는 무엇인가요?</b><br />A. 카카오는 AI와 카카오톡 중심의 전략을 추진하면서, 검색&middot;포털 사업이 핵심이 아니라고 판단했습니다. 다음의 검색 점유율이 2.72%로 급락하면서, 독립 운영이 더 효율적이라는 결론을 내렸습니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 티스토리는 다음과 함께 가나요, 아니면 카카오가 유지하나요?</b><br />A. 아직 확정되지 않았지만, 다음과 함께 독립할 경우 검색 최적화 전략을 강화할 가능성이 크고, 카카오가 유지하면 브런치&middot;카카오뷰와 결합되면서 콘텐츠 플랫폼으로 변화할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 티스토리 블로거들은 지금 무엇을 준비해야 할까요?</b><br />A. 검색 트래픽 변화를 대비해 <b>구글 SEO 최적화</b>를 강화하고, <b>블로그 백업을 주기적으로 진행</b>해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. 티스토리가 유료화될 가능성이 있나요?</b><br />A. 카카오가 티스토리를 유지한다면, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오가 다음을 분사한 이유는 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오는 AI와 카카오톡 중심의 전략을 추진하면서, 검색·포털 사업이 핵심이 아니라고 판단했습니다. 다음의 검색 점유율이 2.72%로 급락하면서, 독립 운영이 더 효율적이라는 결론을 내렸습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리는 다음과 함께 가나요, 아니면 카카오가 유지하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 확정된 것은 없지만, 다음이 티스토리를 운영할 경우 검색 최적화 전략을 강화할 가능성이 크며, 반면 카카오가 유지하면 브런치·카카오뷰와 통합될 가능성이 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 지금 무엇을 준비해야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "카카오가 다음(Daum)을 분사하면서, 티스토리(Tistory)의 미래도 불투명해지고 있습니다. 티스토리는 다음 소속으로 가게 될까, 아니면 카카오가 계속 운영할까? 블로거들이 대비해야 할 변화와 생존 전략을 살펴봅니다.\n\n\n \n얼마 전, 카카오가 포털 서비스 ‘다음(Daum)’을 분사한다고 발표했습니다. 이로 인해 다음과 함께 운영되던 블로그 플랫폼, 티스토리의 미래도 불확실해졌습니다. \n \n다음이 독립하면 티스토리가 다음과 함께 가는 것인지,아니면 카카오가 유지하는 것인지에 따라 블로거들에게 미치는 영향이 크게 달라질 것입니다. 그렇다면, 티스토리는 어디로 향하게 될까요?\n \n  카카오와 다음의 분사, 왜 일어났을까?\n1️⃣ 다음, 한때 ‘국민 포털’에서 잊힌 존재로\n다음은 2000년대 초반만 해도 네이버보다 먼저 시장을 선점한 강력한 포털이었습니다.\n한메일(Hanmail), 다음 카페, 블로그 등을 통해 커뮤니티 중심의 서비스를 제공하며 많은 사용자층을 확보했죠.\n하지만, 2010년대 이후 네이버의 통합 검색과 구글의 부상으로 인해 점유율이 계속 하락했습니다.\n2024년 2월 기준, 다음의 국내 검색 시장 점유율은 2.72%로 네이버(약 60%)와 구글(약 40%)에 크게 밀린 상태입니다.\n2️⃣ 카카오는 왜 다음을 버릴까?\n카카오는 이제 포털보다 ‘AI’와 ‘카카오톡’ 중심의 전략을 펼치고 있습니다.\n카카오 대표인 정신아는 “카톡과 AI가 핵심 사업이며, 관련 없는 분야는 정리하겠다”고 밝혔습니다.\n즉, 검색과 포털 사업이 카카오의 핵심이 아니게 되었고,\n경영 효율화를 위해 다음을 떼어내는 것이 불가피한 선택이었던 것입니다.\n  그렇다면, 티스토리는 어떻게 될까요?\n\n \n다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\n한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제\nmuzbox.tistory.com\n\n \n \n  티스토리의 미래, 다음이 가져갈까? 카카오가 유지할까?\n티스토리는 원래 다음이 2007년에 인수한 블로그 서비스입니다.\n이후 다음-카카오 합병으로 인해 카카오 소속이 되었지만,\n검색 점유율이 떨어지면서 점점 홀대받아 온 것이 사실입니다.\n이번 분사 결정으로 티스토리가 다음으로 가게 될지, 아니면 카카오가 유지할지가 최대 관건입니다.\n  시나리오 1: 티스토리가 ‘다음’ 소속이 된다면?\n✅ 가능한 변화:\n다음 검색과의 연계 강화 → 티스토리 블로그가 다음 검색에서 우선 노출될 가능성\n검색 최적화(SEO) 기능 개선 → 네이버 블로그와 경쟁하기 위한 전략 추진\n❌ 위험 요소:\n다음 자체의 점유율이 낮아 티스토리 트래픽이 오히려 감소할 수도 있음\n다음이 독립 법인으로 성공하지 못하면, 티스토리도 불안정해질 가능성\n  결론:\n  다음이 티스토리를 가져간다면 검색 노출을 강화하려 할 가능성이 크지만,\n  다음 자체의 점유율이 낮아 블로그 트래픽 확보가 어려울 수 있다.\n \n  시나리오 2: 티스토리를 ‘카카오’가 유지한다면?\n✅ 가능한 변화:\n카카오의 AI 검색과 연계 → 카카오톡, 브런치, 카카오뷰와 통합될 가능성\n유료화 가능성 증가 → 워드프레스처럼 유료 블로그 모델 도입 가능\n❌ 위험 요소:\n카카오가 티스토리에 대한 관심이 크지 않다면, 방치될 가능성도 있음\n카카오뷰·브런치에 흡수될 경우, 기존 블로그 방식이 사라질 수도 있음\n  결론:\n  카카오가 유지한다면, 티스토리는 검색보다는 ‘콘텐츠 플랫폼’으로 변할 가능성이 크다.\n  유료화될 경우, 블로거들의 비용 부담이 커질 수 있다.\n \n \n  블로거들이 지금 준비해야 할 것!\n티스토리가 어디로 가든, 블로거들은 대비해야 합니다.\n트래픽과 수익을 유지하려면 지금부터 대체 전략을 고민해야 합니다.\n✅ 1️⃣ 검색 트래픽 변화 대비하기\n티스토리가 다음 소속이 된다면, 구글 SEO 최적화가 더 중요해짐\n카카오가 유지한다면, 카카오톡 및 카카오뷰 활용이 중요\n✅ 2️⃣ 블로그 백업 및 데이터 관리 필수\n백업을 정기적으로 진행해 만일의 사태에 대비하기\n티스토리가 급격히 변화할 경우, 빠르게 대체 플랫폼으로 이동할 준비\n✅ 3️⃣ 대체 블로그 플랫폼 고려하기\n티스토리가 변할 경우를 대비해, 다른 블로그 플랫폼을 미리 알아두는 것도 중요합니다.\n  티스토리를 계속 사용할지, 떠날지는 상황을 보면서 신중하게 결정해야 합니다.\n \n \n  마무리: 티스토리, 변화 속에서 살아남을 수 있을까?\n카카오와 다음의 결별로 인해 티스토리는 변화를 피할 수 없습니다.\n다음과 함께 독립하든, 카카오가 유지하든, 기존 블로거들에게 미치는 영향은 상당할 것입니다.\n✅ 티스토리가 검색 최적화로 가든, 콘텐츠 플랫폼으로 변화하든, 블로거들은 유입 전략을 다시 짜야 합니다.\n✅ 유료화 가능성, 검색 노출 변화, 플랫폼 통합 여부 등을 면밀히 주시해야 합니다.\n✅ 무엇보다, 백업과 대체 플랫폼을 준비하는 것이 가장 중요한 생존 전략이 될 것입니다.\n❓ Q&A\nQ1. 카카오가 다음을 분사한 이유는 무엇인가요?\nA. 카카오는 AI와 카카오톡 중심의 전략을 추진하면서, 검색·포털 사업이 핵심이 아니라고 판단했습니다. 다음의 검색 점유율이 2.72%로 급락하면서, 독립 운영이 더 효율적이라는 결론을 내렸습니다.\nQ2. 티스토리는 다음과 함께 가나요, 아니면 카카오가 유지하나요?\nA. 아직 확정되지 않았지만, 다음과 함께 독립할 경우 검색 최적화 전략을 강화할 가능성이 크고, 카카오가 유지하면 브런치·카카오뷰와 결합되면서 콘텐츠 플랫폼으로 변화할 수 있습니다.\nQ3. 티스토리 블로거들은 지금 무엇을 준비해야 할까요?\nA. 검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\nQ4. 티스토리가 유료화될 가능성이 있나요?\nA. 카카오가 티스토리를 유지한다면, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오가 다음을 분사한 이유는 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오는 AI와 카카오톡 중심의 전략을 추진하면서, 검색·포털 사업이 핵심이 아니라고 판단했습니다. 다음의 검색 점유율이 2.72%로 급락하면서, 독립 운영이 더 효율적이라는 결론을 내렸습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리는 다음과 함께 가나요, 아니면 카카오가 유지하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"현재 확정된 것은 없지만, 다음이 티스토리를 운영할 경우 검색 최적화 전략을 강화할 가능성이 크며, 반면 카카오가 유지하면 브런치·카카오뷰와 통합될 가능성이 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리 블로거들은 지금 무엇을 준비해야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"검색 트래픽 변화를 대비해 구글 SEO 최적화를 강화하고, 블로그 백업을 주기적으로 진행해야 합니다. 또한, 티스토리가 유료화되거나 기능이 제한될 경우를 대비해 대체 플랫폼을 검토하는 것이 중요합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리가 유료화될 가능성이 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오가 티스토리를 유지할 경우, 수익 모델 강화를 위해 워드프레스처럼 유료 플랜을 도입할 가능성이 있습니다. 무료와 유료 모델이 혼합된 방식으로 운영될 가능성이 큽니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483557",
        "categories": [
          "NEWS/IT 뉴스",
          "다음 분사",
          "블로그 플랫폼",
          "카카오 다음 관계",
          "카카오 티스토리",
          "티스토리 SEO",
          "티스토리 검색 노출",
          "티스토리 대체",
          "티스토리 미래",
          "티스토리 블로거 대비",
          "티스토리 유료화"
        ],
        "isoDate": "2025-03-20T01:57:22.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지",
        "link": "http://muzbox.tistory.com/483556",
        "pubDate": "Wed, 19 Mar 2025 09:40:40 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483556#entry483556comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제 다시 독립할 가능성이 제기되고 있는데요. 그렇다면 티스토리의 운명은 어떻게 될까요?</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_다음(Daum)의 굴곡진 역사.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/l4TPg/btsMOothjzM/ib7j5WoZ5RA5MhukKQEgq0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/l4TPg/btsMOothjzM/ib7j5WoZ5RA5MhukKQEgq0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/l4TPg/btsMOothjzM/ib7j5WoZ5RA5MhukKQEgq0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fl4TPg%2FbtsMOothjzM%2Fib7j5WoZ5RA5MhukKQEgq0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"다음(Daum)의 굴곡진 역사, 포털 제왕에서 카카오의 손을 떠나기까지\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_다음(Daum)의 굴곡진 역사.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<blockquote data-ke-style=\"style1\"><span style=\"font-family: 'Noto Serif KR';\">\"다음 카페에서 찾아볼게.\"</span></blockquote>\n<p data-ke-size=\"size16\"><br />이 말이 인터넷에서 자연스럽게 오가던 시절이 있었습니다. 2000년대 초반까지만 해도 다음(Daum)은 대한민국에서 가장 인기 있는 포털이었어요. <b>검색하면 네이버가 아니라 다음이 먼저 나왔고</b>, 이메일도 다음의 한메일이 대세였습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 지금은 다릅니다. 포털 1위 자리는 네이버에게 완전히 내줬고, 뉴스&middot;검색&middot;커뮤니티 서비스도 예전만 못합니다. 한때 포털의 제왕이었던 다음은 어떻게 지금의 상황에 처하게 된 걸까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저 역시 인터넷 초창기부터 다음을 사용해왔고, 지금도 티스토리를 운영하는 블로거로서 이 변화가 남의 일처럼 느껴지지 않아요. 오늘은 <b>다음이 어떻게 성장하고 쇠퇴했으며, 티스토리가 앞으로 어떤 길을 걷게 될지</b> 이야기해보려고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>1. 다음(Daum)의 전성기: 한메일과 포털의 제왕 (1995~2000년대 초반)</b></span></h2>\n<p data-ke-size=\"size16\">1995년, 대한민국의 인터넷 환경은 지금과 많이 달랐습니다. 인터넷이 보급되기 시작하던 시절, 기업과 연구기관을 중심으로 이메일이 사용되었지만, 일반 사용자는 쉽게 접근할 방법이 없었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이때 <b>이재웅 대표가 창업한 &lsquo;다음커뮤니케이션&rsquo;</b>은 <b>무료 이메일 서비스 &lsquo;한메일(Hanmail)&rsquo;</b>을 선보이며 인터넷 대중화를 이끌었습니다. 당시 이메일을 무료로 제공하는 것은 혁신적인 서비스였고, 이 덕분에 다음은 급속도로 성장할 수 있었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"600\" data-origin-height=\"288\"><span data-url=\"https://blog.kakaocdn.net/dn/c6Rzt3/btsMO9vzbgw/cIH54N58l4Kvq9H1cbzCmK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/c6Rzt3/btsMO9vzbgw/cIH54N58l4Kvq9H1cbzCmK/img.jpg\" data-alt=\"&amp;lt;다음이 출범한 1999년은 야후(Yahoo)의 위상이 인터넷 업계에서 세계 최고 정점에 이르렀던 시기였다!!&amp;gt;\"><img src=\"https://blog.kakaocdn.net/dn/c6Rzt3/btsMO9vzbgw/cIH54N58l4Kvq9H1cbzCmK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc6Rzt3%2FbtsMO9vzbgw%2FcIH54N58l4Kvq9H1cbzCmK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"675\" height=\"324\" data-origin-width=\"600\" data-origin-height=\"288\"/></span><figcaption>&lt;다음이 출범한 1999년은 야후(Yahoo)의 위상이 인터넷 업계에서 세계 최고 정점에 이르렀던 시기였다!!&gt;</figcaption>\n</figure>\n</p>\n<h3 data-ke-size=\"size23\">✅ <b>다음의 성공 요인</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>무료 이메일 서비스(한메일) 제공</b> &rarr; 국내 최초의 대중화된 이메일 서비스</li>\n<li><b>카페, 뉴스, 커뮤니티 중심 포털 구축</b> &rarr; 정보 검색과 온라인 커뮤니티 활성화</li>\n<li><b>한국 시장에 최적화된 서비스 제공</b> &rarr; 야후, 라이코스 등 해외 포털과의 차별화</li>\n</ul>\n<p data-ke-size=\"size16\">1999년, 다음은 이메일을 기반으로 <b>&lsquo;다음(Daum) 포털 사이트&rsquo;</b>를 오픈하면서 대한민국 최대 포털로 자리 잡았습니다.</p>\n<p data-ke-size=\"size16\">특히 <b>다음 카페</b>는 온라인 커뮤니티 문화의 중심이었습니다. 네이버의 &lsquo;지식iN&rsquo;이 등장하기 전까지, 많은 사용자들이 정보를 얻기 위해 다음 카페를 이용했어요.</p>\n<p data-ke-size=\"size16\">하지만 이런 성공은 오래가지 않았습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>2. 네이버와 구글에 밀려난 다음 (2000년대 중반~2010년대 초반)</b></span></h2>\n<p data-ke-size=\"size16\">2000년대 중반부터 다음의 하락세가 시작되었습니다. 가장 큰 이유는 <b>검색 엔진 경쟁에서 밀려났기 때문</b>이에요.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>네이버의 &lsquo;지식iN&rsquo;과 검색 기술 강화</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>네이버는 2002년 &lsquo;지식iN&rsquo;을 출시하며 검색 점유율을 급격히 끌어올렸어요.</li>\n<li>당시 검색 기술이 부족했던 상황에서, 사용자들이 직접 답변을 달아주는 &lsquo;지식iN&rsquo; 서비스는 검색의 패러다임을 바꿨죠.</li>\n<li>다음의 검색 서비스는 상대적으로 뒤처지면서 점점 사용자들의 이탈이 가속화되었습니다.</li>\n</ul>\n</li>\n<li><b>구글의 광고 모델(애드센스) 도입</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>구글이 애드센스를 도입하면서 온라인 광고 시장이 급변했어요.</li>\n<li>하지만 다음은 이에 효과적으로 대응하지 못했고, 네이버 역시 자체 광고 시스템을 구축하면서 다음의 수익 모델이 흔들리기 시작했습니다.</li>\n</ul>\n</li>\n<li><b>모바일 시장 대응 부족</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>2010년 이후 스마트폰이 대중화되면서 모바일 검색이 중요해졌습니다.</li>\n<li>네이버는 &lsquo;모바일 최적화&rsquo;를 빠르게 진행했지만, 다음은 대응이 늦었어요.</li>\n</ul>\n</li>\n</ol>\n<p data-ke-size=\"size16\">  <b>이 시점에서 다음의 웹 검색 점유율은 10%대로 추락</b>했고, 네이버가 70% 이상을 차지하는 독점적 구조가 형성되었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>3. 티스토리의 탄생과 성장 (2006~2010년대 초반)</b></span></h2>\n<p data-ke-size=\"size16\">2000년대 중반, 블로그가 새로운 콘텐츠 플랫폼으로 주목받기 시작했어요.</p>\n<p data-ke-size=\"size16\"><b>2006년, 태터앤컴퍼니(TNC)가 개발한 티스토리(Tistory)는 기존 블로그 서비스와 차별화된 특징을 갖고 있었습니다.</b></p>\n<h3 data-ke-size=\"size23\">✅ <b>티스토리의 차별점</b></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>HTML/CSS 편집 가능</b> &rarr; 완전한 자유도 제공</li>\n<li><b>애드센스(AdSense) 및 자체 광고 운영 가능</b> &rarr; 수익형 블로그 운영 가능</li>\n<li><b>개방형 플랫폼</b> &rarr; 검색 엔진 최적화(SEO) 강점</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>2007년, 다음이 TNC를 인수하면서 티스토리는 다음의 공식 블로그 서비스가 되었습니다.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이후 많은 블로거들이 네이버 블로그 대신 티스토리를 선택했어요. 하지만 2010년대 이후 유튜브, SNS 중심의 콘텐츠 소비가 늘어나면서 블로그 시장도 점차 변화를 맞이하게 됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>4. 카카오의 다음 인수 (2014년)와 티스토리의 변화</b></span></h2>\n<p data-ke-size=\"size16\">2014년, <b>카카오는 다음을 인수하며 &lsquo;다음카카오&rsquo;라는 새로운 기업을 출범했습니다.</b></p>\n<p data-ke-size=\"size16\">카카오는 다음을 인수하면서 <b>검색 트래픽과 콘텐츠 플랫폼을 강화하려는 전략</b>을 내세웠습니다.</p>\n<p data-ke-size=\"size16\">하지만 시간이 지나면서 카카오는 점점 <b>카카오톡, AI, 금융(카카오페이), 콘텐츠(브런치&middot;카카오뷰) 사업에 집중</b>하며, <b>다음과 티스토리는 점점 우선순위에서 밀려났습니다.</b><b></b></p>\n<blockquote data-end=\"234\" data-start=\"0\" data-ke-style=\"style3\">결국, <b>카카오는 2023년, 포털 서비스 '다음(Daum)'을 사내독립기업(CIC, Company-in-Company)으로 전환</b>했습니다. 이는 급변하는 인터넷 환경 속에서 포털 사업의 자율성을 높이고, 독립적인 의사 결정을 통해 경쟁력을 강화하려는 목적이었습니다. 당시 카카오는 다음의 검색, 뉴스, 커뮤니티 서비스 등을 최적화하는 한편, 자사 핵심 서비스인 카카오톡, AI, 금융 사업에 더욱 집중하는 전략을 펼쳤습니다.<br /><br />그러나 <b>2025년 3월, 카카오는 결국 다음의 분사를 공식 발표</b>했습니다. 정확한 분사 시점은 아직 정해지지 않았지만, 이번 결정은 포털 사업의 독립성을 더욱 강화하고, 다음의 새로운 성장 가능성을 모색하기 위한 움직임으로 해석됩니다. 이에 따라 다음과 티스토리의 향후 운영 방향과 서비스 구조에도 큰 변화가 예상되며, 기존 사용자들도 이에 대한 대비가 필요할 것으로 보입니다.</blockquote>\n<p data-is-only-node=\"\" data-is-last-node=\"\" data-end=\"448\" data-start=\"236\" data-ke-size=\"size16\">&nbsp;</p>\n<p data-is-only-node=\"\" data-is-last-node=\"\" data-end=\"448\" data-start=\"236\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>5. 다음(Daum)과 티스토리, 앞으로 어떻게 될까?</b></span></h2>\n<p data-ke-size=\"size16\">다음과 티스토리가 처한 현재 상황을 이해했다면, 이제 앞으로의 미래가 궁금해질 텐데요.</p>\n<p data-ke-size=\"size16\">다음과 티스토리의 미래는 단순히 한 번의 분석으로 끝날 문제가 아닙니다. 이에 따라, 보다 심층적으로 다룰 예정입니다.</p>\n<h4 data-ke-size=\"size20\"><b>  다음 연재 시리즈에서 다룰 주제</b></h4>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>1. 다음의 분사가 티스토리에 미치는 영향</b></li>\n<li><b>2. 티스토리의 유료화 가능성과 블로거들의 대응 전략</b></li>\n<li><b>3. 티스토리를 대체할 수 있는 플랫폼 비교 분석</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>앞으로의 연재 시리즈에서 티스토리의 미래를 보다 깊이 있게 다룰 예정이니, 계속 지켜봐 주세요!</b>  </p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  Q&amp;A</b></span></h3>\n<p data-ke-size=\"size16\"><b>Q1. 다음(Daum)은 왜 네이버에게 1위 자리를 빼앗겼나요?</b><br />A. 네이버가 검색 엔진을 강화하고, &lsquo;지식iN&rsquo; 같은 차별화된 서비스를 제공하면서 검색 점유율을 급격히 끌어올렸기 때문입니다. 또한 모바일 시장 대응이 늦어지면서 점유율을 잃었습니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. 티스토리는 왜 네이버 블로그보다 인기가 많았나요?</b><br />A. 티스토리는 HTML/CSS 편집이 가능하고, 애드센스를 통한 수익화가 가능했기 때문에 많은 블로거들에게 인기가 있었습니다. 반면, 네이버 블로그는 폐쇄적인 운영 방식을 고수했습니다.</p>\n<p data-ke-size=\"size16\"><b>Q3. 카카오는 왜 다음을 인수했나요?</b><br />A. 카카오는 다음을 인수하여 포털 검색 트래픽을 활용하고, 뉴스&middot;커뮤니티&middot;광고 플랫폼을 강화하려 했습니다. 하지만 시간이 지나면서 검색보다는 카카오톡, AI, 금융 등 다른 사업에 집중하게 되었습니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. 다음이 카카오에서 분리되면 티스토리는 어떻게 될까요?</b><br />A. 티스토리가 다음과 함께 독립할지, 아니면 카카오가 유지할지가 관건입니다. 카카오가 유지하면 브런치, 카카오뷰와의 연계가 강화될 가능성이 높고, 다음과 함께 독립한다면 기존 포털 검색 기반 블로그로 남을 가능성이 큽니다.</p>\n<p data-ke-size=\"size16\"><b>Q5. 티스토리를 떠나야 할까요?</b><br />A. 티스토리의 미래가 불확실한 만큼, 워드프레스, 브런치, 네이버 블로그 같은 대체 플랫폼을 고려해 대비하는 것이 좋습니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다음(Daum)은 왜 네이버에게 1위 자리를 빼앗겼나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네이버가 검색 엔진을 강화하고, ‘지식iN’ 같은 차별화된 서비스를 제공하면서 검색 점유율을 급격히 끌어올렸기 때문입니다. 또한 모바일 시장 대응이 늦어지면서 점유율을 잃었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리는 왜 네이버 블로그보다 인기가 많았나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리는 HTML/CSS 편집이 가능하고, 애드센스를 통한 수익화가 가능했기 때문에 많은 블로거들에게 인기가 있었습니다. 반면, 네이버 블로그는 폐쇄적인 운영 방식을 고수했습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오는 왜 다음을 인수했나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오는 다음을 인수하여 포털 검색 트래픽을 활용하고, 뉴스·커뮤니티·광고 플랫폼을 강화하려 했습니다. 하지만 시간이 지나면서 검색보다는 카카오톡, AI, 금융 등 다른 사업에 집중하게 되었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다음이 카카오에서 분리되면 티스토리는 어떻게 될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리가 다음과 함께 독립할지, 아니면 카카오가 유지할지가 관건입니다. 카카오가 유지하면 브런치, 카카오뷰와의 연계가 강화될 가능성이 높고, 다음과 함께 독립한다면 기존 포털 검색 기반 블로그로 남을 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리를 떠나야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리의 미래가 불확실한 만큼, 워드프레스, 브런치, 네이버 블로그 같은 대체 플랫폼을 고려해 대비하는 것이 좋습니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "한때 대한민국을 대표했던 포털, 다음(Daum). 한메일과 카페로 인터넷 문화를 선도했지만, 네이버와 구글의 부상, 모바일 전환 실패로 쇠퇴의 길을 걸었습니다. 결국 카카오에 인수된 다음은 이제 다시 독립할 가능성이 제기되고 있는데요. 그렇다면 티스토리의 운명은 어떻게 될까요?\n\n\n \n\"다음 카페에서 찾아볼게.\"\n이 말이 인터넷에서 자연스럽게 오가던 시절이 있었습니다. 2000년대 초반까지만 해도 다음(Daum)은 대한민국에서 가장 인기 있는 포털이었어요. 검색하면 네이버가 아니라 다음이 먼저 나왔고, 이메일도 다음의 한메일이 대세였습니다.\n \n하지만 지금은 다릅니다. 포털 1위 자리는 네이버에게 완전히 내줬고, 뉴스·검색·커뮤니티 서비스도 예전만 못합니다. 한때 포털의 제왕이었던 다음은 어떻게 지금의 상황에 처하게 된 걸까요?\n \n저 역시 인터넷 초창기부터 다음을 사용해왔고, 지금도 티스토리를 운영하는 블로거로서 이 변화가 남의 일처럼 느껴지지 않아요. 오늘은 다음이 어떻게 성장하고 쇠퇴했으며, 티스토리가 앞으로 어떤 길을 걷게 될지 이야기해보려고 합니다.\n \n \n1. 다음(Daum)의 전성기: 한메일과 포털의 제왕 (1995~2000년대 초반)\n1995년, 대한민국의 인터넷 환경은 지금과 많이 달랐습니다. 인터넷이 보급되기 시작하던 시절, 기업과 연구기관을 중심으로 이메일이 사용되었지만, 일반 사용자는 쉽게 접근할 방법이 없었어요.\n \n이때 이재웅 대표가 창업한 ‘다음커뮤니케이션’은 무료 이메일 서비스 ‘한메일(Hanmail)’을 선보이며 인터넷 대중화를 이끌었습니다. 당시 이메일을 무료로 제공하는 것은 혁신적인 서비스였고, 이 덕분에 다음은 급속도로 성장할 수 있었어요.\n \n<다음이 출범한 1999년은 야후(Yahoo)의 위상이 인터넷 업계에서 세계 최고 정점에 이르렀던 시기였다!!>\n\n\n✅ 다음의 성공 요인\n무료 이메일 서비스(한메일) 제공 → 국내 최초의 대중화된 이메일 서비스\n카페, 뉴스, 커뮤니티 중심 포털 구축 → 정보 검색과 온라인 커뮤니티 활성화\n한국 시장에 최적화된 서비스 제공 → 야후, 라이코스 등 해외 포털과의 차별화\n1999년, 다음은 이메일을 기반으로 ‘다음(Daum) 포털 사이트’를 오픈하면서 대한민국 최대 포털로 자리 잡았습니다.\n특히 다음 카페는 온라인 커뮤니티 문화의 중심이었습니다. 네이버의 ‘지식iN’이 등장하기 전까지, 많은 사용자들이 정보를 얻기 위해 다음 카페를 이용했어요.\n하지만 이런 성공은 오래가지 않았습니다.\n \n2. 네이버와 구글에 밀려난 다음 (2000년대 중반~2010년대 초반)\n2000년대 중반부터 다음의 하락세가 시작되었습니다. 가장 큰 이유는 검색 엔진 경쟁에서 밀려났기 때문이에요.\n네이버의 ‘지식iN’과 검색 기술 강화\n\n네이버는 2002년 ‘지식iN’을 출시하며 검색 점유율을 급격히 끌어올렸어요.\n당시 검색 기술이 부족했던 상황에서, 사용자들이 직접 답변을 달아주는 ‘지식iN’ 서비스는 검색의 패러다임을 바꿨죠.\n다음의 검색 서비스는 상대적으로 뒤처지면서 점점 사용자들의 이탈이 가속화되었습니다.\n구글의 광고 모델(애드센스) 도입\n\n구글이 애드센스를 도입하면서 온라인 광고 시장이 급변했어요.\n하지만 다음은 이에 효과적으로 대응하지 못했고, 네이버 역시 자체 광고 시스템을 구축하면서 다음의 수익 모델이 흔들리기 시작했습니다.\n모바일 시장 대응 부족\n\n2010년 이후 스마트폰이 대중화되면서 모바일 검색이 중요해졌습니다.\n네이버는 ‘모바일 최적화’를 빠르게 진행했지만, 다음은 대응이 늦었어요.\n  이 시점에서 다음의 웹 검색 점유율은 10%대로 추락했고, 네이버가 70% 이상을 차지하는 독점적 구조가 형성되었습니다.\n \n3. 티스토리의 탄생과 성장 (2006~2010년대 초반)\n2000년대 중반, 블로그가 새로운 콘텐츠 플랫폼으로 주목받기 시작했어요.\n2006년, 태터앤컴퍼니(TNC)가 개발한 티스토리(Tistory)는 기존 블로그 서비스와 차별화된 특징을 갖고 있었습니다.\n✅ 티스토리의 차별점\nHTML/CSS 편집 가능 → 완전한 자유도 제공\n애드센스(AdSense) 및 자체 광고 운영 가능 → 수익형 블로그 운영 가능\n개방형 플랫폼 → 검색 엔진 최적화(SEO) 강점\n  2007년, 다음이 TNC를 인수하면서 티스토리는 다음의 공식 블로그 서비스가 되었습니다.\n \n이후 많은 블로거들이 네이버 블로그 대신 티스토리를 선택했어요. 하지만 2010년대 이후 유튜브, SNS 중심의 콘텐츠 소비가 늘어나면서 블로그 시장도 점차 변화를 맞이하게 됩니다.\n \n4. 카카오의 다음 인수 (2014년)와 티스토리의 변화\n2014년, 카카오는 다음을 인수하며 ‘다음카카오’라는 새로운 기업을 출범했습니다.\n카카오는 다음을 인수하면서 검색 트래픽과 콘텐츠 플랫폼을 강화하려는 전략을 내세웠습니다.\n하지만 시간이 지나면서 카카오는 점점 카카오톡, AI, 금융(카카오페이), 콘텐츠(브런치·카카오뷰) 사업에 집중하며, 다음과 티스토리는 점점 우선순위에서 밀려났습니다.\n결국, 카카오는 2023년, 포털 서비스 '다음(Daum)'을 사내독립기업(CIC, Company-in-Company)으로 전환했습니다. 이는 급변하는 인터넷 환경 속에서 포털 사업의 자율성을 높이고, 독립적인 의사 결정을 통해 경쟁력을 강화하려는 목적이었습니다. 당시 카카오는 다음의 검색, 뉴스, 커뮤니티 서비스 등을 최적화하는 한편, 자사 핵심 서비스인 카카오톡, AI, 금융 사업에 더욱 집중하는 전략을 펼쳤습니다.\n그러나 2025년 3월, 카카오는 결국 다음의 분사를 공식 발표했습니다. 정확한 분사 시점은 아직 정해지지 않았지만, 이번 결정은 포털 사업의 독립성을 더욱 강화하고, 다음의 새로운 성장 가능성을 모색하기 위한 움직임으로 해석됩니다. 이에 따라 다음과 티스토리의 향후 운영 방향과 서비스 구조에도 큰 변화가 예상되며, 기존 사용자들도 이에 대한 대비가 필요할 것으로 보입니다.\n \n \n5. 다음(Daum)과 티스토리, 앞으로 어떻게 될까?\n다음과 티스토리가 처한 현재 상황을 이해했다면, 이제 앞으로의 미래가 궁금해질 텐데요.\n다음과 티스토리의 미래는 단순히 한 번의 분석으로 끝날 문제가 아닙니다. 이에 따라, 보다 심층적으로 다룰 예정입니다.\n  다음 연재 시리즈에서 다룰 주제\n1. 다음의 분사가 티스토리에 미치는 영향\n2. 티스토리의 유료화 가능성과 블로거들의 대응 전략\n3. 티스토리를 대체할 수 있는 플랫폼 비교 분석\n  앞으로의 연재 시리즈에서 티스토리의 미래를 보다 깊이 있게 다룰 예정이니, 계속 지켜봐 주세요!  \n  Q&A\nQ1. 다음(Daum)은 왜 네이버에게 1위 자리를 빼앗겼나요?\nA. 네이버가 검색 엔진을 강화하고, ‘지식iN’ 같은 차별화된 서비스를 제공하면서 검색 점유율을 급격히 끌어올렸기 때문입니다. 또한 모바일 시장 대응이 늦어지면서 점유율을 잃었습니다.\nQ2. 티스토리는 왜 네이버 블로그보다 인기가 많았나요?\nA. 티스토리는 HTML/CSS 편집이 가능하고, 애드센스를 통한 수익화가 가능했기 때문에 많은 블로거들에게 인기가 있었습니다. 반면, 네이버 블로그는 폐쇄적인 운영 방식을 고수했습니다.\nQ3. 카카오는 왜 다음을 인수했나요?\nA. 카카오는 다음을 인수하여 포털 검색 트래픽을 활용하고, 뉴스·커뮤니티·광고 플랫폼을 강화하려 했습니다. 하지만 시간이 지나면서 검색보다는 카카오톡, AI, 금융 등 다른 사업에 집중하게 되었습니다.\nQ4. 다음이 카카오에서 분리되면 티스토리는 어떻게 될까요?\nA. 티스토리가 다음과 함께 독립할지, 아니면 카카오가 유지할지가 관건입니다. 카카오가 유지하면 브런치, 카카오뷰와의 연계가 강화될 가능성이 높고, 다음과 함께 독립한다면 기존 포털 검색 기반 블로그로 남을 가능성이 큽니다.\nQ5. 티스토리를 떠나야 할까요?\nA. 티스토리의 미래가 불확실한 만큼, 워드프레스, 브런치, 네이버 블로그 같은 대체 플랫폼을 고려해 대비하는 것이 좋습니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다음(Daum)은 왜 네이버에게 1위 자리를 빼앗겼나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네이버가 검색 엔진을 강화하고, ‘지식iN’ 같은 차별화된 서비스를 제공하면서 검색 점유율을 급격히 끌어올렸기 때문입니다. 또한 모바일 시장 대응이 늦어지면서 점유율을 잃었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리는 왜 네이버 블로그보다 인기가 많았나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리는 HTML/CSS 편집이 가능하고, 애드센스를 통한 수익화가 가능했기 때문에 많은 블로거들에게 인기가 있었습니다. 반면, 네이버 블로그는 폐쇄적인 운영 방식을 고수했습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"카카오는 왜 다음을 인수했나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"카카오는 다음을 인수하여 포털 검색 트래픽을 활용하고, 뉴스·커뮤니티·광고 플랫폼을 강화하려 했습니다. 하지만 시간이 지나면서 검색보다는 카카오톡, AI, 금융 등 다른 사업에 집중하게 되었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"다음이 카카오에서 분리되면 티스토리는 어떻게 될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리가 다음과 함께 독립할지, 아니면 카카오가 유지할지가 관건입니다. 카카오가 유지하면 브런치, 카카오뷰와의 연계가 강화될 가능성이 높고, 다음과 함께 독립한다면 기존 포털 검색 기반 블로그로 남을 가능성이 큽니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"티스토리를 떠나야 할까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"티스토리의 미래가 불확실한 만큼, 워드프레스, 브런치, 네이버 블로그 같은 대체 플랫폼을 고려해 대비하는 것이 좋습니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483556",
        "categories": [
          "NEWS/IT 뉴스",
          "검색 엔진",
          "네이버",
          "다음",
          "다음 카페",
          "카카오",
          "카카오 다음 분사",
          "티스토리",
          "티스토리 유료화",
          "포털 역사",
          "한메일"
        ],
        "isoDate": "2025-03-19T00:40:40.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "ChatGPT로 시간 절약! 더 효율적인 하루를 만드는 4가지 방법",
        "link": "http://muzbox.tistory.com/483555",
        "pubDate": "Tue, 18 Mar 2025 08:28:00 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483555#entry483555comment",
        "content": "<p data-ke-size=\"size16\">ChatGPT를 활용해 시간을 절약하고 생산성을 높이는 방법을 소개합니다. 일정 관리, 식단 계획, 운동 루틴, 그리고 자기 성찰까지! 스마트한 생활을 위한 실용적인 팁을 확인하세요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_ChatGPT로 시간 절약, 더 효율적인 하루를 만드는 4가지 방법.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/bqlNc4/btsMMlYjaaq/exPcqfv9i2lgnypl56jfv1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bqlNc4/btsMMlYjaaq/exPcqfv9i2lgnypl56jfv1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bqlNc4/btsMMlYjaaq/exPcqfv9i2lgnypl56jfv1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbqlNc4%2FbtsMMlYjaaq%2FexPcqfv9i2lgnypl56jfv1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"ChatGPT로 시간 절약! 더 효율적인 하루를 만드는 4가지 방법\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_ChatGPT로 시간 절약, 더 효율적인 하루를 만드는 4가지 방법.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아침에 눈 뜨자마자 \"오늘 뭐부터 해야 하지?\" 고민하는 시간이 많다면, 이 글이 딱입니다. 저도 매일 바쁜 일정 속에서 <b>효율적으로 시간을 쓰는 방법</b>을 고민했어요. 그러다 보니 <b>ChatGPT를 활용하면 불필요한 고민 없이 하루를 더 알차게 보낼 수 있다는 걸 깨달았죠.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오늘은 제가 실제로 활용하는 <b>ChatGPT 기반의 시간 절약 꿀팁 4가지</b>를 소개할게요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>1. 일정 관리 &amp; 우선순위 정하기</b></span></h2>\n<p data-ke-size=\"size16\">  <b>\"해야 할 일이 많을 때, 어디서부터 시작해야 할까?\"</b></p>\n<p data-ke-size=\"size16\">예전에는 <b>단순한 할 일 리스트(To-Do List)</b>를 만들었는데, <b>어떤 일을 먼저 해야 할지 정하는 데만도 시간이 걸렸어요.</b> 그래서 ChatGPT에게 도움을 요청해 봤습니다.</p>\n<p data-ke-size=\"size16\">예를 들어, 이렇게 입력하면?</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"오늘 할 일: 고객 미팅, 보고서 작성, 헬스장 가기, 친구 생일 선물 사기, 저녁 요리하기. 우선순위를 고려해 하루 일정을 짜줘!\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">그러면 ChatGPT는<br />✅ <b>급한 일과 중요한 일을 구분</b>하고<br />✅ <b>적절한 휴식 시간까지 포함된 일정</b>을 추천해 줍니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"654\" data-origin-height=\"685\"><span data-url=\"https://blog.kakaocdn.net/dn/cLQz3T/btsMMy4gqSp/5fJJ1tKmda9gjNgDG6EUNk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cLQz3T/btsMMy4gqSp/5fJJ1tKmda9gjNgDG6EUNk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cLQz3T/btsMMy4gqSp/5fJJ1tKmda9gjNgDG6EUNk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcLQz3T%2FbtsMMy4gqSp%2F5fJJ1tKmda9gjNgDG6EUNk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"654\" height=\"685\" data-filename=\"blob\" data-origin-width=\"654\" data-origin-height=\"685\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">  <b>실제 예시</b><br />제가 아는 분은 매일 <b>10개 이상의 업무</b>를 처리해야 했어요. 그는 ChatGPT에게 \"<b>내 직업은 마케팅 매니저이고, 출퇴근 시간이 9시~6시야. 가장 효과적인 일정 짜줘.</b>\"라고 요청했더니, <b>업무 집중 시간이 높은 오전에 중요한 작업을 배치하고, 오후에는 회의와 이메일 업무를 집중적으로 배치하는 일정</b>을 추천받아 시간을 훨씬 효율적으로 쓸 수 있었어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>꿀팁</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>ChatGPT에게 <b>내 직업, 업무 스타일</b> 등을 입력하면 더 맞춤형 일정이 가능해요.</li>\n<li><b>캘린더 자동 추가 가능</b>   \"Google 캘린더 이벤트 링크 만들어줘!\"라고 입력하면 일정 정리도 간편하게!</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>2. 맞춤형 식단 &amp; 장보기 리스트</b></span></h2>\n<p data-ke-size=\"size16\"> ️ <b>\"매일 뭘 먹을지 고민하는 시간이 아깝다면?\"</b></p>\n<p data-ke-size=\"size16\">바쁜 하루를 보내다 보면, 식단 고민이 은근히 시간을 많이 잡아먹어요. 그래서 저는 ChatGPT에게 <b>영양 균형을 고려한 식단을 요청</b>해요.</p>\n<p data-ke-size=\"size16\">예를 들어, 이렇게 입력하면?</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"나는 채식주의자야. 단백질을 충분히 포함한 일주일 식단과 장보기 리스트를 만들어 줘.\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">ChatGPT는<br />✅ 아침, 점심, 저녁 + 간식 추천<br />✅ 필요한 장보기 리스트 자동 생성<br />✅ 예산이 필요하면 \"5만 원 이하로 가능하게 만들어줘!\"라고 추가 가능</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"699\" data-origin-height=\"756\"><span data-url=\"https://blog.kakaocdn.net/dn/7cYSx/btsMNfb20j5/3wzbOj9K8qEETKjmNxq48k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/7cYSx/btsMNfb20j5/3wzbOj9K8qEETKjmNxq48k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/7cYSx/btsMNfb20j5/3wzbOj9K8qEETKjmNxq48k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F7cYSx%2FbtsMNfb20j5%2F3wzbOj9K8qEETKjmNxq48k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"699\" height=\"756\" data-filename=\"blob\" data-origin-width=\"699\" data-origin-height=\"756\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">  <b>실제 예시</b><br />제 친구 중 한 명은 <b>회사 근처에서 사 먹는 식비가 부담스러워</b> ChatGPT를 활용했어요. \"<b>한 달 식비 20만 원 예산으로 건강한 식단 추천해 줘!</b>\"라고 요청했더니, <b>비용을 고려한 재료 목록과 요리법까지 제공</b>받아 비용 절감 효과를 봤습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>꿀팁</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>냉장고 속 재료 활용</b>   \"냉장고에 양배추, 두부, 고구마 있어. 이걸로 저녁 메뉴 추천해 줘!\"</li>\n<li><b>시간 절약용 빠른 요리 추천</b>   \"30분 안에 만들 수 있는 한식 메뉴 추천해 줘!\"</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>3. 맞춤형 운동 계획 만들기</b></span></h2>\n<p data-ke-size=\"size16\"> ️ <b>\"어떤 운동을 해야 할지 고민된다면?\"</b></p>\n<p data-ke-size=\"size16\">운동도 그냥 하는 게 아니라 <b>목표에 따라 계획을 세우면 더 효과적</b>이죠. 저는 ChatGPT를 활용해서 <b>운동 루틴을 자동으로 짜고 있어요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 이렇게 입력하면?</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"나는 초보자야. 주 3회, 30분 안에 할 수 있는 체지방 감량 운동 루틴을 만들어 줘!\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">그러면 ChatGPT는<br />✅ 운동 루틴(스트레칭 + 본운동 + 마무리)을 구성해 주고<br />✅ 필요하면 <b>\"집에서 할 수 있는 운동\"</b> 또는 <b>\"헬스장 기구를 활용한 운동\"</b>도 추천해 줘요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"691\" data-origin-height=\"709\"><span data-url=\"https://blog.kakaocdn.net/dn/b57AaK/btsMNdSUwWe/V9nBpi8Dg7BVH5TrXGxYO0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b57AaK/btsMNdSUwWe/V9nBpi8Dg7BVH5TrXGxYO0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b57AaK/btsMNdSUwWe/V9nBpi8Dg7BVH5TrXGxYO0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb57AaK%2FbtsMNdSUwWe%2FV9nBpi8Dg7BVH5TrXGxYO0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"691\" height=\"709\" data-filename=\"blob\" data-origin-width=\"691\" data-origin-height=\"709\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">  <b>실제 예시</b><br />운동을 시작한 지 얼마 안 된 지인은 <b>출퇴근이 바빠 헬스장에 갈 시간이 없었어요.</b> 그래서 ChatGPT에게 \"<b>아파트에서도 조용히 할 수 있는 운동 추천해 줘.</b>\"라고 요청했더니, <b>점프 없는 유산소 운동과 맨몸 근력 운동 루틴을 제공받아 집에서도 쉽게 운동을 시작</b>할 수 있었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>꿀팁</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>목표별 운동 계획 세우기</b>   \"팔 근력 강화 루틴 추천해 줘.\"</li>\n<li><b>기구 사용 여부 설정 가능</b>   \"덤벨과 요가 매트를 활용한 홈트 계획 짜줘!\"</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">4. 자기 성찰 &amp; 일기 쓰기</h2>\n<p data-ke-size=\"size16\">  <b>\"자기 성찰을 위한 질문이 필요하다면?\"</b></p>\n<p data-ke-size=\"size16\">매일 일기를 쓰고 싶지만, 막상 펜을 들면 무슨 내용을 적어야 할지 막막할 때가 많아요. 그럴 때 ChatGPT를 활용하면 <b>매일 새로운 질문을 던져줘서 더 깊은 생각을 할 수 있어요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 이렇게 요청하면?</p>\n<blockquote data-ke-style=\"style1\">\n<p data-ke-size=\"size16\"><b>\"오늘의 일기 주제 추천해 줘!\"</b></p>\n</blockquote>\n<p data-ke-size=\"size16\">그러면 ChatGPT는<br />✅ \"오늘 하루 중 가장 감사했던 순간은?\"<br />✅ \"최근 도전했던 일 중 가장 의미 있었던 경험은?\"<br />✅ \"내가 앞으로 더 성장하기 위해 필요한 것은?\"</p>\n<p data-ke-size=\"size16\">이런 질문을 던져주면서 <b>일기를 더욱 의미 있게 작성할 수 있도록 도와줍니다.</b></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"675\" data-origin-height=\"692\"><span data-url=\"https://blog.kakaocdn.net/dn/wTCdR/btsMMlKLzvN/VaZfhzyck5VzDB0lqkjlsK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/wTCdR/btsMMlKLzvN/VaZfhzyck5VzDB0lqkjlsK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/wTCdR/btsMMlKLzvN/VaZfhzyck5VzDB0lqkjlsK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FwTCdR%2FbtsMMlKLzvN%2FVaZfhzyck5VzDB0lqkjlsK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"675\" height=\"692\" data-filename=\"blob\" data-origin-width=\"675\" data-origin-height=\"692\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>실제 예시</b><br />제 지인 중 한 명은 매일 ChatGPT에게 <b>\"오늘 나를 돌아볼 수 있는 질문 추천해 줘.\"</b>라고 요청했어요. 그러면서 자연스럽게 <b>자신의 감정을 기록하고, 스트레스도 줄일 수 있었다고 해요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>꿀팁</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>자기 성장 목표 설정</b>   \"매일 나를 성장시킬 수 있는 질문 추천해 줘!\"</li>\n<li><b>긍정적인 마인드셋 형성</b>   \"오늘 감사할 일을 생각할 수 있도록 도와줘!\"</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>마무리</b></span></h2>\n<p data-ke-size=\"size16\">ChatGPT를 활용하면, <b>고민하는 시간을 줄이고 더 중요한 일에 집중할 수 있어요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>  오늘 소개한 ChatGPT 활용법 정리!</b><br />✅ 일정 관리 &amp; 우선순위 정하기<br />✅ 맞춤형 식단 &amp; 장보기 리스트<br />✅ 개인 맞춤 운동 루틴<br />✅ 자기 성찰을 위한 일기 질문 제공</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이제 ChatGPT를 활용해 <b>더 스마트하고 생산적인 하루</b>를 만들어 보세요!  </p>\n<hr data-ke-style=\"style1\" />\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\"><b>  Q&amp;A 섹션</b></span></h3>\n<p data-ke-size=\"size16\"><b>1. ChatGPT가 내 일정을 자동으로 캘린더에 추가할 수 있나요?</b><br />아직 직접 추가는 불가능하지만, <b>Google 캘린더 이벤트 링크를 생성하는 방법</b>을 활용하면 쉽게 추가할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>2. ChatGPT가 식단을 추천해 줄 때, 알러지나 식이 제한도 반영할 수 있나요?</b><br />네! 예를 들어, <b>\"나는 채식주의자야\" 또는 \"유제품을 먹지 않아\"</b>라고 입력하면, 이를 반영한 식단을 추천해 줍니다.</p>\n<p data-ke-size=\"size16\"><b>3. 운동 루틴을 세울 때, 내 체력 수준을 고려할 수 있나요?</b><br />네! \"나는 초보자야\" 또는 \"나는 헬스를 2년 정도 했어\"라고 추가하면 <b>레벨에 맞춘 운동 루틴을 제공합니다.</b></p>\n<p data-ke-size=\"size16\"><b>4. ChatGPT로 맞춤형 저녁 메뉴를 추천받으려면 어떻게 해야 하나요?</b><br /><b>\"냉장고에 닭가슴살, 감자, 브로콜리 있어. 간단한 저녁 메뉴 추천해 줘!\"</b>라고 입력하면, <b>보유한 재료를 활용한 맞춤형 메뉴</b>를 추천받을 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>5. ChatGPT로 꾸준히 일기 쓰는 습관을 만들 수 있을까요?</b><br />네! <b>\"매일 아침 나에게 맞는 자기 성찰 질문을 추천해 줘\"</b>라고 설정하면, ChatGPT가 매일 새로운 질문을 제공해 <b>꾸준한 일기 습관을 유지할 수 있도록 도와줍니다.</b></p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 내 일정을 자동으로 캘린더에 추가할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아직 직접 추가는 불가능하지만, Google 캘린더 이벤트 링크를 생성하는 방법을 활용하면 쉽게 추가할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 식단을 추천해 줄 때, 알러지나 식이 제한도 반영할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 예를 들어, '나는 채식주의자야' 또는 '유제품을 먹지 않아'라고 입력하면, 이를 반영한 식단을 추천해 줍니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"운동 루틴을 세울 때, 내 체력 수준을 고려할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! '나는 초보자야' 또는 '나는 헬스를 2년 정도 했어'라고 추가하면 레벨에 맞춘 운동 루틴을 제공합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT로 맞춤형 저녁 메뉴를 추천받으려면 어떻게 해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"'냉장고에 닭가슴살, 감자, 브로콜리 있어. 간단한 저녁 메뉴 추천해 줘!'라고 입력하면 됩니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT로 꾸준히 일기 쓰는 습관을 만들 수 있을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! '매일 아침 나에게 맞는 자기 성찰 질문을 추천해 줘'라고 설정하면 꾸준한 습관을 만들 수 있습니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "ChatGPT를 활용해 시간을 절약하고 생산성을 높이는 방법을 소개합니다. 일정 관리, 식단 계획, 운동 루틴, 그리고 자기 성찰까지! 스마트한 생활을 위한 실용적인 팁을 확인하세요.\n\n\n \n아침에 눈 뜨자마자 \"오늘 뭐부터 해야 하지?\" 고민하는 시간이 많다면, 이 글이 딱입니다. 저도 매일 바쁜 일정 속에서 효율적으로 시간을 쓰는 방법을 고민했어요. 그러다 보니 ChatGPT를 활용하면 불필요한 고민 없이 하루를 더 알차게 보낼 수 있다는 걸 깨달았죠.\n \n오늘은 제가 실제로 활용하는 ChatGPT 기반의 시간 절약 꿀팁 4가지를 소개할게요.\n \n \n1. 일정 관리 & 우선순위 정하기\n  \"해야 할 일이 많을 때, 어디서부터 시작해야 할까?\"\n예전에는 단순한 할 일 리스트(To-Do List)를 만들었는데, 어떤 일을 먼저 해야 할지 정하는 데만도 시간이 걸렸어요. 그래서 ChatGPT에게 도움을 요청해 봤습니다.\n예를 들어, 이렇게 입력하면?\n\"오늘 할 일: 고객 미팅, 보고서 작성, 헬스장 가기, 친구 생일 선물 사기, 저녁 요리하기. 우선순위를 고려해 하루 일정을 짜줘!\"\n그러면 ChatGPT는\n✅ 급한 일과 중요한 일을 구분하고\n✅ 적절한 휴식 시간까지 포함된 일정을 추천해 줍니다.\n\n\n  실제 예시\n제가 아는 분은 매일 10개 이상의 업무를 처리해야 했어요. 그는 ChatGPT에게 \"내 직업은 마케팅 매니저이고, 출퇴근 시간이 9시~6시야. 가장 효과적인 일정 짜줘.\"라고 요청했더니, 업무 집중 시간이 높은 오전에 중요한 작업을 배치하고, 오후에는 회의와 이메일 업무를 집중적으로 배치하는 일정을 추천받아 시간을 훨씬 효율적으로 쓸 수 있었어요.\n \n✅ 꿀팁\nChatGPT에게 내 직업, 업무 스타일 등을 입력하면 더 맞춤형 일정이 가능해요.\n캘린더 자동 추가 가능   \"Google 캘린더 이벤트 링크 만들어줘!\"라고 입력하면 일정 정리도 간편하게!\n \n2. 맞춤형 식단 & 장보기 리스트\n ️ \"매일 뭘 먹을지 고민하는 시간이 아깝다면?\"\n바쁜 하루를 보내다 보면, 식단 고민이 은근히 시간을 많이 잡아먹어요. 그래서 저는 ChatGPT에게 영양 균형을 고려한 식단을 요청해요.\n예를 들어, 이렇게 입력하면?\n\"나는 채식주의자야. 단백질을 충분히 포함한 일주일 식단과 장보기 리스트를 만들어 줘.\"\n \nChatGPT는\n✅ 아침, 점심, 저녁 + 간식 추천\n✅ 필요한 장보기 리스트 자동 생성\n✅ 예산이 필요하면 \"5만 원 이하로 가능하게 만들어줘!\"라고 추가 가능\n\n\n  실제 예시\n제 친구 중 한 명은 회사 근처에서 사 먹는 식비가 부담스러워 ChatGPT를 활용했어요. \"한 달 식비 20만 원 예산으로 건강한 식단 추천해 줘!\"라고 요청했더니, 비용을 고려한 재료 목록과 요리법까지 제공받아 비용 절감 효과를 봤습니다.\n \n✅ 꿀팁\n냉장고 속 재료 활용   \"냉장고에 양배추, 두부, 고구마 있어. 이걸로 저녁 메뉴 추천해 줘!\"\n시간 절약용 빠른 요리 추천   \"30분 안에 만들 수 있는 한식 메뉴 추천해 줘!\"\n \n3. 맞춤형 운동 계획 만들기\n ️ \"어떤 운동을 해야 할지 고민된다면?\"\n운동도 그냥 하는 게 아니라 목표에 따라 계획을 세우면 더 효과적이죠. 저는 ChatGPT를 활용해서 운동 루틴을 자동으로 짜고 있어요.\n \n예를 들어, 이렇게 입력하면?\n\"나는 초보자야. 주 3회, 30분 안에 할 수 있는 체지방 감량 운동 루틴을 만들어 줘!\"\n그러면 ChatGPT는\n✅ 운동 루틴(스트레칭 + 본운동 + 마무리)을 구성해 주고\n✅ 필요하면 \"집에서 할 수 있는 운동\" 또는 \"헬스장 기구를 활용한 운동\"도 추천해 줘요.\n\n\n  실제 예시\n운동을 시작한 지 얼마 안 된 지인은 출퇴근이 바빠 헬스장에 갈 시간이 없었어요. 그래서 ChatGPT에게 \"아파트에서도 조용히 할 수 있는 운동 추천해 줘.\"라고 요청했더니, 점프 없는 유산소 운동과 맨몸 근력 운동 루틴을 제공받아 집에서도 쉽게 운동을 시작할 수 있었습니다.\n \n✅ 꿀팁\n목표별 운동 계획 세우기   \"팔 근력 강화 루틴 추천해 줘.\"\n기구 사용 여부 설정 가능   \"덤벨과 요가 매트를 활용한 홈트 계획 짜줘!\"\n \n4. 자기 성찰 & 일기 쓰기\n  \"자기 성찰을 위한 질문이 필요하다면?\"\n매일 일기를 쓰고 싶지만, 막상 펜을 들면 무슨 내용을 적어야 할지 막막할 때가 많아요. 그럴 때 ChatGPT를 활용하면 매일 새로운 질문을 던져줘서 더 깊은 생각을 할 수 있어요.\n \n예를 들어, 이렇게 요청하면?\n\"오늘의 일기 주제 추천해 줘!\"\n그러면 ChatGPT는\n✅ \"오늘 하루 중 가장 감사했던 순간은?\"\n✅ \"최근 도전했던 일 중 가장 의미 있었던 경험은?\"\n✅ \"내가 앞으로 더 성장하기 위해 필요한 것은?\"\n이런 질문을 던져주면서 일기를 더욱 의미 있게 작성할 수 있도록 도와줍니다.\n\n\n \n  실제 예시\n제 지인 중 한 명은 매일 ChatGPT에게 \"오늘 나를 돌아볼 수 있는 질문 추천해 줘.\"라고 요청했어요. 그러면서 자연스럽게 자신의 감정을 기록하고, 스트레스도 줄일 수 있었다고 해요.\n \n✅ 꿀팁\n자기 성장 목표 설정   \"매일 나를 성장시킬 수 있는 질문 추천해 줘!\"\n긍정적인 마인드셋 형성   \"오늘 감사할 일을 생각할 수 있도록 도와줘!\"\n \n마무리\nChatGPT를 활용하면, 고민하는 시간을 줄이고 더 중요한 일에 집중할 수 있어요.\n \n  오늘 소개한 ChatGPT 활용법 정리!\n✅ 일정 관리 & 우선순위 정하기\n✅ 맞춤형 식단 & 장보기 리스트\n✅ 개인 맞춤 운동 루틴\n✅ 자기 성찰을 위한 일기 질문 제공\n \n이제 ChatGPT를 활용해 더 스마트하고 생산적인 하루를 만들어 보세요!  \n  Q&A 섹션\n1. ChatGPT가 내 일정을 자동으로 캘린더에 추가할 수 있나요?\n아직 직접 추가는 불가능하지만, Google 캘린더 이벤트 링크를 생성하는 방법을 활용하면 쉽게 추가할 수 있습니다.\n2. ChatGPT가 식단을 추천해 줄 때, 알러지나 식이 제한도 반영할 수 있나요?\n네! 예를 들어, \"나는 채식주의자야\" 또는 \"유제품을 먹지 않아\"라고 입력하면, 이를 반영한 식단을 추천해 줍니다.\n3. 운동 루틴을 세울 때, 내 체력 수준을 고려할 수 있나요?\n네! \"나는 초보자야\" 또는 \"나는 헬스를 2년 정도 했어\"라고 추가하면 레벨에 맞춘 운동 루틴을 제공합니다.\n4. ChatGPT로 맞춤형 저녁 메뉴를 추천받으려면 어떻게 해야 하나요?\n\"냉장고에 닭가슴살, 감자, 브로콜리 있어. 간단한 저녁 메뉴 추천해 줘!\"라고 입력하면, 보유한 재료를 활용한 맞춤형 메뉴를 추천받을 수 있습니다.\n5. ChatGPT로 꾸준히 일기 쓰는 습관을 만들 수 있을까요?\n네! \"매일 아침 나에게 맞는 자기 성찰 질문을 추천해 줘\"라고 설정하면, ChatGPT가 매일 새로운 질문을 제공해 꾸준한 일기 습관을 유지할 수 있도록 도와줍니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 내 일정을 자동으로 캘린더에 추가할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아직 직접 추가는 불가능하지만, Google 캘린더 이벤트 링크를 생성하는 방법을 활용하면 쉽게 추가할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT가 식단을 추천해 줄 때, 알러지나 식이 제한도 반영할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 예를 들어, '나는 채식주의자야' 또는 '유제품을 먹지 않아'라고 입력하면, 이를 반영한 식단을 추천해 줍니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"운동 루틴을 세울 때, 내 체력 수준을 고려할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! '나는 초보자야' 또는 '나는 헬스를 2년 정도 했어'라고 추가하면 레벨에 맞춘 운동 루틴을 제공합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT로 맞춤형 저녁 메뉴를 추천받으려면 어떻게 해야 하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"'냉장고에 닭가슴살, 감자, 브로콜리 있어. 간단한 저녁 메뉴 추천해 줘!'라고 입력하면 됩니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"ChatGPT로 꾸준히 일기 쓰는 습관을 만들 수 있을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! '매일 아침 나에게 맞는 자기 성찰 질문을 추천해 줘'라고 설정하면 꾸준한 습관을 만들 수 있습니다.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483555",
        "categories": [
          "AI, 미래기술/AI 생산성 및 업무 효율화",
          "ai 도우미",
          "ChatGPT 활용법",
          "생산성 향상",
          "스마트한 생활",
          "시간 관리",
          "식단 짜기",
          "업무 효율화",
          "운동 루틴",
          "일정 계획",
          "자기 계발"
        ],
        "isoDate": "2025-03-17T23:28:00.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "콘텐츠를 더 매력적으로! 무료 시각화 클로드 프로젝트 공개",
        "link": "http://muzbox.tistory.com/483554",
        "pubDate": "Mon, 17 Mar 2025 11:01:17 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483554#entry483554comment",
        "content": "<p data-ke-size=\"size16\">웹 콘텐츠를 효과적으로 시각화하면 독자들의 관심을 끌고 정보 전달력을 극대화할 수 있습니다. 단순한 텍스트에서 벗어나, 가독성을 높이는 핵심 요소와 실전 가이드를 소개합니다. 특히, 시각적 콘텐츠를 쉽게 제작할 수 있도록 <b>클로드용 시각화 프로젝트를 무료 공개</b>하니 놓치지 마세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"edited_클로드로 시각화 자료 만들기.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"><span data-url=\"https://blog.kakaocdn.net/dn/b6TQHt/btsMLIFPKZd/k3CTJdY5vEHQ1PZuPmxsi1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b6TQHt/btsMLIFPKZd/k3CTJdY5vEHQ1PZuPmxsi1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b6TQHt/btsMLIFPKZd/k3CTJdY5vEHQ1PZuPmxsi1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb6TQHt%2FbtsMLIFPKZd%2Fk3CTJdY5vEHQ1PZuPmxsi1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"콘텐츠를 더 매력적으로! 무료 시각화 클로드 프로젝트 공개\" loading=\"lazy\" width=\"1408\" height=\"768\" data-filename=\"edited_클로드로 시각화 자료 만들기.jpg\" data-origin-width=\"1408\" data-origin-height=\"768\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">블로그나 뉴스 사이트를 운영하다 보면, 아무리 좋은 글을 써도 독자들이 끝까지 읽지 않는 경우가 많아요. 사람들이 정보를 빨리 습득하려 하고, 스크롤을 내리면서 중요한 부분만 훑어보는 경우가 많기 때문이죠. 그래서 콘텐츠를 <b>텍스트에서 &lsquo;시각적 경험&rsquo;으로 바꾸는 것</b>이 점점 더 중요해지고 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저도 한동안 이런 고민을 했어요. 어떻게 하면 독자들이 글을 더 오래 머물며 집중할 수 있을까? 그러다가 웹 콘텐츠의 시각적 구조를 개선하면 <b>체류 시간과 이해도가 크게 증가한다는 사실</b>을 발견했어요. 오늘은 <b>기사를 매력적인 웹페이지로 변환하는 핵심 가이드</b>를 소개하면서, 이를 쉽게 적용할 수 있도록 <b>클로드용 시각화 프로젝트도 무료 공개</b>할 예정이니 끝까지 읽어보세요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  효과적인 웹 콘텐츠 시각화의 핵심 요소</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 시각적 계층 구조를 명확히 하자</span></h3>\n<p data-ke-size=\"size16\">  <b>제목과 부제목이 가장 중요합니다.</b><br />웹페이지를 열었을 때, 가장 먼저 보이는 것이 제목이죠. 제목은 <b>본문 폰트보다 2~3배 크게</b>, 부제목은 <b>1.5배 크기</b>로 설정해 독자가 한눈에 내용을 파악할 수 있도록 해야 해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>발행 정보</b>도 중요해요.<br />기사의 신뢰도를 높이려면 날짜와 출처 정보를 추가해야 해요. 보통 <b>작은 글씨로 우측 정렬</b>하면 깔끔한 인상을 줄 수 있어요.</p>\n<p data-ke-size=\"size16\">⚡ <b>섹션 구분을 확실하게!</b><br />문단이 끝없이 이어지면 독자가 쉽게 지칠 수 있어요. 섹션마다 <b>구분선을 넣거나 배경색을 다르게 설정</b>하면 훨씬 깔끔한 레이아웃이 됩니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2. 핵심 정보를 &lsquo;눈에 띄게&rsquo; 강조하자</span></h3>\n<p data-ke-size=\"size16\">단순한 텍스트보다 시각적인 요소를 추가하면 독자들이 정보를 쉽게 이해할 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>도표와 다이어그램 활용</b><br />숫자나 개념이 많을 때는 <b>표나 인포그래픽</b>을 추가하세요. 단순한 설명보다 훨씬 직관적이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>시각적 불릿 포인트 사용</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>✅ 단순한 리스트보다 <b>아이콘이 들어간 불릿 포인트</b>가 가독성이 좋아요.</li>\n<li>✅ 중요한 내용은   같은 이모지로 강조해도 좋아요.</li>\n<li>✅ 파란색 원형 마커를 사용하면 깔끔하고 전문가 느낌이 납니다.</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>강조 배지 활용</b><br />예를 들어, <b>&ldquo;50% 증가&rdquo;</b> 같은 주요 데이터를 보여줄 때, <b>둥근 배지나 컬러 박스</b>를 사용하면 한눈에 눈에 띄어요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">3. 보조 정보를 효과적으로 구성하자</span></h3>\n<p data-ke-size=\"size16\">모든 정보가 같은 비중을 가질 필요는 없어요. 핵심 내용과 추가 정보를 분리하면 독자가 쉽게 원하는 정보를 찾을 수 있어요.</p>\n<p data-ke-size=\"size16\">  <b>사이드바 활용하기</b><br />관련 정보나 부가 자료는 <b>메인 콘텐츠와 분리된 사이드바</b>에 배치하는 게 좋아요.</p>\n<p data-ke-size=\"size16\">  <b>설명 상자 사용하기</b><br />전문 용어나 중요한 개념이 나올 때 <b>라이트 블루 박스</b>로 구분하면 읽기 편해요.</p>\n<p data-ke-size=\"size16\">  <b>탭 형태로 정리하기</b><br />긴 설명이 필요한 경우, <b>탭 형식으로 정보를 정리</b>하면 독자가 원하는 정보만 빠르게 확인할 수 있어요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">4. 데이터는 차트와 그래프로 변환하자</span></h3>\n<p data-ke-size=\"size16\">숫자가 많으면 가독성이 떨어져요. 그래프와 다이어그램을 활용하면 정보 전달력이 극대화됩니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>차트 활용하기</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>선 그래프: <b>트렌드 변화</b>를 보여줄 때</li>\n<li>막대 그래프: <b>비교 데이터</b>를 정리할 때</li>\n<li>원형 차트: <b>비율을 설명할 때</b></li>\n</ul>\n<p data-ke-size=\"size16\">  <b>프로세스 다이어그램 활용하기</b><br />단계별 과정이나 절차를 설명할 때 <b>순서도를 활용하면 직관적</b>이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  웹페이지 구조의 모범 사례</b></span></h2>\n<p data-ke-size=\"size16\">잘 만들어진 웹페이지는 일정한 구조를 가지고 있어요.</p>\n<h3 data-ke-size=\"size23\">  최상단 섹션</h3>\n<p data-ke-size=\"size16\">✅ 제목 (본문 폰트의 2~3배 크기)<br />✅ 설명적인 부제목 (1.5배 크기)<br />✅ 날짜 및 출처 정보 (작은 글씨, 우측 정렬)</p>\n<h3 data-ke-size=\"size23\">  주요 섹션 구조</h3>\n<p data-ke-size=\"size16\">✅ 명확한 섹션 제목 (관련 아이콘 포함)<br />✅ 주요 내용을 요약한 박스 (라이트 블루 배경)<br />✅ 시각적 구분선 삽입</p>\n<h3 data-ke-size=\"size23\">  핵심 시각 요소</h3>\n<p data-ke-size=\"size16\">✅ 개념이나 프로세스를 보여주는 다이어그램<br />✅ 주요 수치를 강조하는 배지 요소<br />✅ 시각적 불릿 포인트 (파란색 원형 마커)</p>\n<h3 data-ke-size=\"size23\">  보조 정보 영역</h3>\n<p data-ke-size=\"size16\">✅ 사이드바에 관련 정보 배치<br />✅ 탭 형태로 추가 정보 구성</p>\n<h3 data-ke-size=\"size23\">  하단부 구성</h3>\n<p data-ke-size=\"size16\">✅ 요약 정보 또는 결론<br />✅ 추가 자료 링크 제공<br />✅ 저작권 정보 표시</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b> 시각화 작성예시</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">1. 가로형</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"653\" data-origin-height=\"843\"><span data-url=\"https://blog.kakaocdn.net/dn/cko57p/btsMMbAK8Hx/BECUwy6FCAjFg2AYUeTsT0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cko57p/btsMMbAK8Hx/BECUwy6FCAjFg2AYUeTsT0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cko57p/btsMMbAK8Hx/BECUwy6FCAjFg2AYUeTsT0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fcko57p%2FbtsMMbAK8Hx%2FBECUwy6FCAjFg2AYUeTsT0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"653\" height=\"843\" data-origin-width=\"653\" data-origin-height=\"843\"/></span></figure>\n</p>\n<h3 style=\"color: #000000; text-align: start;\" data-ke-size=\"size23\"><span style=\"color: #ee2323;\">2 세로형</span></h3>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"548\" data-origin-height=\"834\"><span data-url=\"https://blog.kakaocdn.net/dn/yxjbz/btsMLyiXxUH/0WKKDWW3hwDL6iKxyW8s9K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/yxjbz/btsMLyiXxUH/0WKKDWW3hwDL6iKxyW8s9K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/yxjbz/btsMLyiXxUH/0WKKDWW3hwDL6iKxyW8s9K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fyxjbz%2FbtsMLyiXxUH%2F0WKKDWW3hwDL6iKxyW8s9K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"548\" height=\"834\" data-origin-width=\"548\" data-origin-height=\"834\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  클로드용 시각화 프로젝트 무료 공개!</b></span></h2>\n<p data-ke-size=\"size16\">이 모든 걸 직접 구현하려면 시간이 많이 걸리겠죠? 그래서 여러분을 위해 <b>시각화 프로젝트를 무료로 공개합니다!</b></p>\n<p data-ke-size=\"size16\">  <b>이 프로젝트로 할 수 있는 것:</b></p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>자동으로 가독성 높은 웹 콘텐츠 변환</li>\n<li>시각적 요소 (도표, 배지, 아이콘) 쉽게 추가</li>\n<li>반응형 디자인 적용으로 모바일 최적화</li>\n</ul>\n<p data-ke-size=\"size16\">  <b>무료 다운로드 링크:&nbsp;</b></p>\n<p data-ke-size=\"size16\">지금 바로 적용해 보세요! 웹 콘텐츠의 가독성을 높이는 것이 곧 독자와의 소통을 강화하는 길입니다.</p>\n<p data-ke-size=\"size16\"><a href=\"https://www.threads.net/@gpt_patk/post/DHSGxlOSOmu?xmt=AQGzpWXDn8ymKaGTj8Z7rSyaW0ICjfaFLp6l6RaNLpHBNg\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.threads.net/@gpt_patk/post/DHSGxlOSOmu?xmt=AQGzpWXDn8ymKaGTj8Z7rSyaW0ICjfaFLp6l6RaNLpHBNg</a></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><b><span style=\"color: #009a87;\"> 프로젝트 생성방법</span></b></h2>\n<p data-ke-size=\"size16\">1. 클로드 첫 페이지에서 프로젝트 - 프로젝트 생성 클릭 ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"01.jpg\" data-origin-width=\"958\" data-origin-height=\"505\"><span data-url=\"https://blog.kakaocdn.net/dn/cfTL9d/btsML930nbn/FVrjKnNlEGv2mZaPwIKduk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cfTL9d/btsML930nbn/FVrjKnNlEGv2mZaPwIKduk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cfTL9d/btsML930nbn/FVrjKnNlEGv2mZaPwIKduk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcfTL9d%2FbtsML930nbn%2FFVrjKnNlEGv2mZaPwIKduk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"958\" height=\"505\" data-filename=\"01.jpg\" data-origin-width=\"958\" data-origin-height=\"505\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">2. 프로젝트 제목과 목표 입력 ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"02.jpg\" data-origin-width=\"959\" data-origin-height=\"573\"><span data-url=\"https://blog.kakaocdn.net/dn/t431r/btsMLWw3Qyc/qJEKV2917K7V8aeORrinrK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/t431r/btsMLWw3Qyc/qJEKV2917K7V8aeORrinrK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/t431r/btsMLWw3Qyc/qJEKV2917K7V8aeORrinrK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Ft431r%2FbtsMLWw3Qyc%2FqJEKV2917K7V8aeORrinrK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"959\" height=\"573\" data-filename=\"02.jpg\" data-origin-width=\"959\" data-origin-height=\"573\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">3. 프로젝트 지침 설정에서 다운로드한 텍스트 파일의 지침복사. ▼</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"03.jpg\" data-origin-width=\"950\" data-origin-height=\"574\"><span data-url=\"https://blog.kakaocdn.net/dn/dgxyn9/btsMLITlV4n/Weh2rKLz4c3GIoMikICQPK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dgxyn9/btsMLITlV4n/Weh2rKLz4c3GIoMikICQPK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dgxyn9/btsMLITlV4n/Weh2rKLz4c3GIoMikICQPK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fdgxyn9%2FbtsMLITlV4n%2FWeh2rKLz4c3GIoMikICQPK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"950\" height=\"574\" data-filename=\"03.jpg\" data-origin-width=\"950\" data-origin-height=\"574\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"color: #333333; text-align: start;\">4. 파일첨부에서 다운로드한 템플릿 HTML 파일 등록하면 프로젝트 생성 완료▼ </span></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"04.jpg\" data-origin-width=\"956\" data-origin-height=\"567\"><span data-url=\"https://blog.kakaocdn.net/dn/d08fmZ/btsMLsDih98/mqbHKRlVPSNCdcLrk1gws1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/d08fmZ/btsMLsDih98/mqbHKRlVPSNCdcLrk1gws1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/d08fmZ/btsMLsDih98/mqbHKRlVPSNCdcLrk1gws1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fd08fmZ%2FbtsMLsDih98%2FmqbHKRlVPSNCdcLrk1gws1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"956\" height=\"567\" data-filename=\"04.jpg\" data-origin-width=\"956\" data-origin-height=\"567\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">5. 사용법 : 해당 프로젝트 채팅창에 \"가로형,세로형&nbsp; 선택 /&nbsp; 작성자 / 시각화할 자료 입력\" 하면 시각화 진행</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"05.jpg\" data-origin-width=\"958\" data-origin-height=\"510\"><span data-url=\"https://blog.kakaocdn.net/dn/cNIarG/btsMM5Gz2xK/2vE7fYUMRFtKjd6ioqgIvK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/cNIarG/btsMM5Gz2xK/2vE7fYUMRFtKjd6ioqgIvK/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/cNIarG/btsMM5Gz2xK/2vE7fYUMRFtKjd6ioqgIvK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcNIarG%2FbtsMM5Gz2xK%2F2vE7fYUMRFtKjd6ioqgIvK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"958\" height=\"510\" data-filename=\"05.jpg\" data-origin-width=\"958\" data-origin-height=\"510\"/></span></figure>\n</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\">  Q&amp;A</h2>\n<p data-ke-size=\"size16\"><b>Q1. 시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?</b><br />A. 고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q2. 모바일에서도 동일한 효과를 얻을 수 있나요?</b><br />A. 반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q3. 무료 시각화 프로젝트는 누구나 사용할 수 있나요?</b><br />A. 네! 누구나 무료로 다운로드해서 사용할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. 어떤 웹사이트에 적용하기 좋은가요?</b><br />A. 블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합해요.</p>\n<p data-ke-size=\"size16\"><b>Q5. 시각적 요소가 너무 많으면 산만해지지 않을까요?</b><br />A. 적절한 균형이 중요해요. 핵심 정보만 강조하고 불필요한 요소는 줄이는 게 좋아요.</p>\n```markdown\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"모바일에서도 동일한 효과를 얻을 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 시각화 프로젝트는 누구나 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 누구나 무료로 다운로드해서 사용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"어떤 웹사이트에 적용하기 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소가 너무 많으면 산만해지지 않을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"적절한 균형이 중요합니다. 핵심 정보만 강조하고 불필요한 요소는 줄이는 것이 좋습니다.\"\n      }\n    }\n  ]\n}\n</script>\n```",
        "contentSnippet": "웹 콘텐츠를 효과적으로 시각화하면 독자들의 관심을 끌고 정보 전달력을 극대화할 수 있습니다. 단순한 텍스트에서 벗어나, 가독성을 높이는 핵심 요소와 실전 가이드를 소개합니다. 특히, 시각적 콘텐츠를 쉽게 제작할 수 있도록 클로드용 시각화 프로젝트를 무료 공개하니 놓치지 마세요!\n\n\n \n블로그나 뉴스 사이트를 운영하다 보면, 아무리 좋은 글을 써도 독자들이 끝까지 읽지 않는 경우가 많아요. 사람들이 정보를 빨리 습득하려 하고, 스크롤을 내리면서 중요한 부분만 훑어보는 경우가 많기 때문이죠. 그래서 콘텐츠를 텍스트에서 ‘시각적 경험’으로 바꾸는 것이 점점 더 중요해지고 있어요.\n \n저도 한동안 이런 고민을 했어요. 어떻게 하면 독자들이 글을 더 오래 머물며 집중할 수 있을까? 그러다가 웹 콘텐츠의 시각적 구조를 개선하면 체류 시간과 이해도가 크게 증가한다는 사실을 발견했어요. 오늘은 기사를 매력적인 웹페이지로 변환하는 핵심 가이드를 소개하면서, 이를 쉽게 적용할 수 있도록 클로드용 시각화 프로젝트도 무료 공개할 예정이니 끝까지 읽어보세요!\n \n  효과적인 웹 콘텐츠 시각화의 핵심 요소\n1. 시각적 계층 구조를 명확히 하자\n  제목과 부제목이 가장 중요합니다.\n웹페이지를 열었을 때, 가장 먼저 보이는 것이 제목이죠. 제목은 본문 폰트보다 2~3배 크게, 부제목은 1.5배 크기로 설정해 독자가 한눈에 내용을 파악할 수 있도록 해야 해요.\n \n✅ 발행 정보도 중요해요.\n기사의 신뢰도를 높이려면 날짜와 출처 정보를 추가해야 해요. 보통 작은 글씨로 우측 정렬하면 깔끔한 인상을 줄 수 있어요.\n⚡ 섹션 구분을 확실하게!\n문단이 끝없이 이어지면 독자가 쉽게 지칠 수 있어요. 섹션마다 구분선을 넣거나 배경색을 다르게 설정하면 훨씬 깔끔한 레이아웃이 됩니다.\n2. 핵심 정보를 ‘눈에 띄게’ 강조하자\n단순한 텍스트보다 시각적인 요소를 추가하면 독자들이 정보를 쉽게 이해할 수 있어요.\n \n  도표와 다이어그램 활용\n숫자나 개념이 많을 때는 표나 인포그래픽을 추가하세요. 단순한 설명보다 훨씬 직관적이에요.\n \n  시각적 불릿 포인트 사용\n✅ 단순한 리스트보다 아이콘이 들어간 불릿 포인트가 가독성이 좋아요.\n✅ 중요한 내용은   같은 이모지로 강조해도 좋아요.\n✅ 파란색 원형 마커를 사용하면 깔끔하고 전문가 느낌이 납니다.\n  강조 배지 활용\n예를 들어, “50% 증가” 같은 주요 데이터를 보여줄 때, 둥근 배지나 컬러 박스를 사용하면 한눈에 눈에 띄어요.\n3. 보조 정보를 효과적으로 구성하자\n모든 정보가 같은 비중을 가질 필요는 없어요. 핵심 내용과 추가 정보를 분리하면 독자가 쉽게 원하는 정보를 찾을 수 있어요.\n  사이드바 활용하기\n관련 정보나 부가 자료는 메인 콘텐츠와 분리된 사이드바에 배치하는 게 좋아요.\n  설명 상자 사용하기\n전문 용어나 중요한 개념이 나올 때 라이트 블루 박스로 구분하면 읽기 편해요.\n  탭 형태로 정리하기\n긴 설명이 필요한 경우, 탭 형식으로 정보를 정리하면 독자가 원하는 정보만 빠르게 확인할 수 있어요.\n4. 데이터는 차트와 그래프로 변환하자\n숫자가 많으면 가독성이 떨어져요. 그래프와 다이어그램을 활용하면 정보 전달력이 극대화됩니다.\n \n  차트 활용하기\n선 그래프: 트렌드 변화를 보여줄 때\n막대 그래프: 비교 데이터를 정리할 때\n원형 차트: 비율을 설명할 때\n  프로세스 다이어그램 활용하기\n단계별 과정이나 절차를 설명할 때 순서도를 활용하면 직관적이에요.\n \n \n  웹페이지 구조의 모범 사례\n잘 만들어진 웹페이지는 일정한 구조를 가지고 있어요.\n  최상단 섹션\n✅ 제목 (본문 폰트의 2~3배 크기)\n✅ 설명적인 부제목 (1.5배 크기)\n✅ 날짜 및 출처 정보 (작은 글씨, 우측 정렬)\n  주요 섹션 구조\n✅ 명확한 섹션 제목 (관련 아이콘 포함)\n✅ 주요 내용을 요약한 박스 (라이트 블루 배경)\n✅ 시각적 구분선 삽입\n  핵심 시각 요소\n✅ 개념이나 프로세스를 보여주는 다이어그램\n✅ 주요 수치를 강조하는 배지 요소\n✅ 시각적 불릿 포인트 (파란색 원형 마커)\n  보조 정보 영역\n✅ 사이드바에 관련 정보 배치\n✅ 탭 형태로 추가 정보 구성\n  하단부 구성\n✅ 요약 정보 또는 결론\n✅ 추가 자료 링크 제공\n✅ 저작권 정보 표시\n \n 시각화 작성예시\n1. 가로형\n\n\n2 세로형\n\n\n \n \n  클로드용 시각화 프로젝트 무료 공개!\n이 모든 걸 직접 구현하려면 시간이 많이 걸리겠죠? 그래서 여러분을 위해 시각화 프로젝트를 무료로 공개합니다!\n  이 프로젝트로 할 수 있는 것:\n자동으로 가독성 높은 웹 콘텐츠 변환\n시각적 요소 (도표, 배지, 아이콘) 쉽게 추가\n반응형 디자인 적용으로 모바일 최적화\n  무료 다운로드 링크: \n지금 바로 적용해 보세요! 웹 콘텐츠의 가독성을 높이는 것이 곧 독자와의 소통을 강화하는 길입니다.\nhttps://www.threads.net/@gpt_patk/post/DHSGxlOSOmu?xmt=AQGzpWXDn8ymKaGTj8Z7rSyaW0ICjfaFLp6l6RaNLpHBNg\n \n \n 프로젝트 생성방법\n1. 클로드 첫 페이지에서 프로젝트 - 프로젝트 생성 클릭 ▼\n\n\n \n2. 프로젝트 제목과 목표 입력 ▼\n\n\n \n3. 프로젝트 지침 설정에서 다운로드한 텍스트 파일의 지침복사. ▼\n\n\n \n4. 파일첨부에서 다운로드한 템플릿 HTML 파일 등록하면 프로젝트 생성 완료▼ \n\n\n \n5. 사용법 : 해당 프로젝트 채팅창에 \"가로형,세로형  선택 /  작성자 / 시각화할 자료 입력\" 하면 시각화 진행\n\n\n\n  Q&A\nQ1. 시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?\nA. 고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있어요.\nQ2. 모바일에서도 동일한 효과를 얻을 수 있나요?\nA. 반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있어요.\nQ3. 무료 시각화 프로젝트는 누구나 사용할 수 있나요?\nA. 네! 누구나 무료로 다운로드해서 사용할 수 있습니다.\nQ4. 어떤 웹사이트에 적용하기 좋은가요?\nA. 블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합해요.\nQ5. 시각적 요소가 너무 많으면 산만해지지 않을까요?\nA. 적절한 균형이 중요해요. 핵심 정보만 강조하고 불필요한 요소는 줄이는 게 좋아요.\n```markdown\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소를 추가하면 로딩 속도가 느려지지 않나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"고화질 이미지를 사용하되, 압축 기술을 활용하면 로딩 속도를 최적화할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"모바일에서도 동일한 효과를 얻을 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"반응형 디자인을 적용하면 모바일에서도 가독성을 유지할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 시각화 프로젝트는 누구나 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네! 누구나 무료로 다운로드해서 사용할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"어떤 웹사이트에 적용하기 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"블로그, 뉴스 사이트, 기업 홈페이지 등 정보 중심의 웹사이트에 적합합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"시각적 요소가 너무 많으면 산만해지지 않을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"적절한 균형이 중요합니다. 핵심 정보만 강조하고 불필요한 요소는 줄이는 것이 좋습니다.\"\n      }\n    }\n  ]\n}\n\n```",
        "guid": "http://muzbox.tistory.com/483554",
        "categories": [
          "AI, 미래기술/AI 콘텐츠 제작 및 글쓰기",
          "ux 개선",
          "가독성 향상",
          "데이터 시각화",
          "무료 시각화 프로젝트",
          "반응형 디자인",
          "시각적 콘텐츠",
          "웹 접근성",
          "웹 콘텐츠 시각화",
          "웹페이지 디자인",
          "콘텐츠 최적화"
        ],
        "isoDate": "2025-03-17T02:01:17.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "Google Gemini 2025 업데이트 - 딥 리서치, 맞춤 AI &lsquo;Gems&rsquo; 등장!",
        "link": "http://muzbox.tistory.com/483553",
        "pubDate": "Fri, 14 Mar 2025 10:56:38 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "http://muzbox.tistory.com/483553#entry483553comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;Google의 Gemini 앱이 또 한 번 진화했어요!   딥 리서치 기능이 강화되고, 나만의 AI &lsquo;Gems&rsquo;를 만들어 원하는 업무를 더 쉽게 처리할 수 있게 됐어요. 이제 Google 앱과도 연동되어 더욱 개인화된 AI 경험이 가능해졌다고 하는데요. 어떤 변화가 있는지 살펴볼까요?</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1120\" data-origin-height=\"630\"><span data-url=\"https://blog.kakaocdn.net/dn/bpzH0E/btsMJb9dDWE/u9VGcQnscWBVnk0cwgL3Q0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bpzH0E/btsMJb9dDWE/u9VGcQnscWBVnk0cwgL3Q0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bpzH0E/btsMJb9dDWE/u9VGcQnscWBVnk0cwgL3Q0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbpzH0E%2FbtsMJb9dDWE%2Fu9VGcQnscWBVnk0cwgL3Q0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Google Gemini 2025 업데이트 - 딥 리서치, 맞춤 AI &lsquo;Gems&rsquo; 등장!\" loading=\"lazy\" width=\"1120\" height=\"630\" data-origin-width=\"1120\" data-origin-height=\"630\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>AI 비서가 여기까지? Google Gemini 2025년 3월 대규모 업데이트</b></span></h2>\n<p data-ke-size=\"size16\">AI 기술이 점점 더 우리 생활 속으로 들어오고 있어요. 단순히 질문에 답하는 챗봇을 넘어, 이제는 개인 맞춤형 비서 역할까지 수행할 수 있게 됐죠. Google의 Gemini가 그 대표적인 예인데요. 이번 3월 업데이트를 통해 <b>더 똑똑해진 연구 기능, Google 앱과의 강력한 연동, 그리고 나만의 AI 설정이 가능한 &lsquo;Gems&rsquo; 기능</b>이 추가됐어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저도 직접 사용해보면서 &ldquo;이제는 정말 AI가 내 일을 대신해 주는구나&rdquo;라고 느꼈는데요. 이번 업데이트에서 가장 주목할 만한 변화를 하나씩 살펴볼게요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  연구를 대신해 주는 &lsquo;딥 리서치(Deep Research)&rsquo;</b></span></h2>\n<p data-ke-size=\"size16\">요즘 자료 조사할 일이 많아서 AI를 적극 활용하는데요. 이번에 Gemini에서 강화된 <b>딥 리서치(Deep Research)</b> 기능이 진짜 유용하더라고요.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"GEMINI DEEP RESEARCH.jpg\" data-origin-width=\"921\" data-origin-height=\"601\"><span data-url=\"https://blog.kakaocdn.net/dn/8zJO9/btsMJL9L0n5/apKi5d2Tr2sk8HD1HMMak0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/8zJO9/btsMJL9L0n5/apKi5d2Tr2sk8HD1HMMak0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/8zJO9/btsMJL9L0n5/apKi5d2Tr2sk8HD1HMMak0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F8zJO9%2FbtsMJL9L0n5%2FapKi5d2Tr2sk8HD1HMMak0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"921\" height=\"601\" data-filename=\"GEMINI DEEP RESEARCH.jpg\" data-origin-width=\"921\" data-origin-height=\"601\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ <b>웹에서 정보를 자동으로 수집 &amp; 정리</b><br />✅ <b>논리적인 단계별 분석으로 복잡한 문제 해결</b><br />✅ <b>연구 보고서를 다중 페이지로 생성해 더 정리된 결과 제공</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, 논문을 준비할 때 관련 자료를 찾고 요약하는 데 시간이 오래 걸리잖아요? 그런데 Gemini의 딥 리서치를 활용하면, AI가 스스로 정보를 찾아 정리해 주고, 심지어 그 과정까지 실시간으로 보여줘요. 시간이 확 줄어들어서 정말 편리하더라고요.</p>\n<p data-ke-size=\"size16\">이 기능은 <b>Gemini Advanced 사용자에게 더 확장된 버전이 제공</b>된다고 해요. 연구나 프로젝트가 많으신 분들은 적극 활용해 보시면 좋을 것 같아요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  Google 앱과 연결해 더 개인화된 AI 경험</b></span></h2>\n<p data-ke-size=\"size16\">이제 Gemini는 Google의 다양한 앱과 연동이 가능해졌어요! 단순히 질문에 답하는 걸 넘어, <b>내가 평소에 사용하던 Google 서비스들과 연결</b>되면서 더욱 개인화된 AI 경험을 제공하죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✔️ <b>Google 검색 이력 반영 &rarr; 맞춤형 답변 제공</b><br />✔️ <b>캘린더, 노트, 할 일(Task)과 연동 &rarr; 일정 &amp; 업무 관리</b><br />✔️ <b>YouTube에서 레시피 검색 &rarr; 장보기 목록 생성 &rarr; 근처 마트 찾기까지 한 번에!</b></p>\n<p data-ke-size=\"size16\">예를 들어, Gemini에게 **&ldquo;이번 주말에 어디 갈지 추천해 줘&rdquo;**라고 물어보면, 단순히 일반적인 추천이 아니라, <b>내가 최근 검색했던 여행지</b>를 반영해서 답변해 줘요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한, <b>Google 포토와 연동</b>하면 내 사진을 기반으로 일정표를 만들어 주거나, 예전에 찍어둔 문서를 찾아주는 기능도 추가될 예정이에요. 이제 AI가 정말 &lsquo;개인 비서&rsquo;처럼 작동하는 시대가 온 거죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  나만의 AI 조수 &lsquo;Gems&rsquo; 만들기</b></span></h2>\n<p data-ke-size=\"size16\">여기서 끝이 아니에요! 이번 업데이트에서 가장 재미있었던 기능이 바로 <b>&lsquo;Gems&rsquo;</b> 기능이었어요.</p>\n<p data-ke-size=\"size16\">Gems는 <b>나만의 맞춤형 AI 조수를 직접 만들 수 있는 기능</b>인데요. 챗GPT의 GPTS, 클로드의 PROJECT와 비슷한 개념이예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어,</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">  <b>번역기 Gem</b> &rarr; 내가 자주 쓰는 표현을 학습한 맞춤 번역기<br />  <b>식단 플래너 Gem</b> &rarr; 내 건강 목표에 맞춘 맞춤형 식단 추천<br />  <b>학습 조교 Gem</b> &rarr; 수학 문제 풀이 도와주는 AI 선생님</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"제미니 젬.png\" data-origin-width=\"891\" data-origin-height=\"678\"><span data-url=\"https://blog.kakaocdn.net/dn/lDmzV/btsMLvEDOAh/LYehcAndIUPx2rSgFO6zjk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/lDmzV/btsMLvEDOAh/LYehcAndIUPx2rSgFO6zjk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/lDmzV/btsMLvEDOAh/LYehcAndIUPx2rSgFO6zjk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FlDmzV%2FbtsMLvEDOAh%2FLYehcAndIUPx2rSgFO6zjk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"891\" height=\"678\" data-filename=\"제미니 젬.png\" data-origin-width=\"891\" data-origin-height=\"678\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이런 식으로 <b>내가 필요한 역할을 AI에게 맡길 수 있게 됐어요.</b><br />설정도 간단해요! <b>Gems 관리자에서 원하는 역할을 입력하고, 이름만 정하면 끝!</b></p>\n<p data-ke-size=\"size16\">파일 업로드 기능까지 지원해서, 특정 문서를 참고하도록 만들 수도 있더라고요. 저는 &lsquo;콘텐츠 기획 보조&rsquo; 역할을 설정해서 Gemini가 글 아이디어를 정리해 주도록 만들어 봤어요. 업무 속도가 확실히 빨라지더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  결론: AI가 더 가까워진 순간</b></span></h2>\n<p data-ke-size=\"size16\">이번 Gemini 업데이트를 통해, AI는 이제 단순한 챗봇이 아니라 **진짜 &lsquo;나만의 비서&rsquo;**로 자리 잡아 가고 있어요. <b>내 연구를 도와주고, 내 일정도 관리해 주고, 내가 원하는 AI 조수를 직접 만들 수 있는 시대!</b></p>\n<p data-ke-size=\"size16\">앞으로 AI가 어떻게 발전할지 기대되지 않나요?  <br />여러분은 어떤 기능이 가장 기대되시나요? 댓글로 의견을 나눠 주세요!</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>  Q&amp;A</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q1. 딥 리서치(Deep Research)는 어떤 기능인가요?</b><br />딥 리서치는 AI가 웹에서 정보를 수집하고 분석해 논리적인 보고서를 생성해 주는 기능이에요. 연구나 프로젝트 준비 시 큰 도움이 됩니다.</p>\n<p data-ke-size=\"size16\"><b>Q2. Google 앱과 Gemini의 연동은 어떻게 설정하나요?</b><br />Gemini 앱에서 설정(Settings) 메뉴로 들어가 &lsquo;개인화(Personalization)&rsquo; 기능을 활성화하면 Google 검색, 캘린더, 노트, 할 일(Task)과 연동할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q3. &lsquo;Gems&rsquo; 기능은 어떻게 활용할 수 있나요?</b><br />Gems는 나만의 맞춤형 AI 조수를 만드는 기능이에요. 예를 들어, &lsquo;여행 일정 조수&rsquo;, &lsquo;식단 플래너&rsquo;, &lsquo;번역기&rsquo; 등을 직접 설정할 수 있답니다.</p>\n<p data-ke-size=\"size16\"><b>Q4. Gemini 2.0 Flash Thinking 모델은 어떤 점이 개선됐나요?</b><br />더 긴 문맥을 이해할 수 있는 1M 토큰 컨텍스트 창을 제공하며, 파일 업로드 기능이 추가되어 문서 기반의 분석이 가능해졌어요.</p>\n<p data-ke-size=\"size16\"><b>Q5. 이번 업데이트를 무료로 사용할 수 있나요?</b><br />일반 사용자는 딥 리서치 기능을 월 몇 회까지 무료로 사용할 수 있고, Gemini Advanced 사용자들은 더 많은 기능을 무제한으로 사용할 수 있어요.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"딥 리서치(Deep Research)는 어떤 기능인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"딥 리서치는 AI가 웹에서 정보를 수집하고 분석해 논리적인 보고서를 생성해 주는 기능이에요. 연구나 프로젝트 준비 시 큰 도움이 됩니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"Google 앱과 Gemini의 연동은 어떻게 설정하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"Gemini 앱에서 설정(Settings) 메뉴로 들어가 ‘개인화(Personalization)’ 기능을 활성화하면 Google 검색, 캘린더, 노트, 할 일(Task)과 연동할 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"‘Gems’ 기능은 어떻게 활용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"Gems는 나만의 맞춤형 AI 조수를 만드는 기능이에요. 예를 들어, ‘여행 일정 조수’, ‘식단 플래너’, ‘번역기’ 등을 직접 설정할 수 있답니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"Gemini 2.0 Flash Thinking 모델은 어떤 점이 개선됐나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"더 긴 문맥을 이해할 수 있는 1M 토큰 컨텍스트 창을 제공하며, 파일 업로드 기능이 추가되어 문서 기반의 분석이 가능해졌어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이번 업데이트를 무료로 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"일반 사용자는 딥 리서치 기능을 월 몇 회까지 무료로 사용할 수 있고, Gemini Advanced 사용자들은 더 많은 기능을 무제한으로 사용할 수 있어요.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "Google의 Gemini 앱이 또 한 번 진화했어요!   딥 리서치 기능이 강화되고, 나만의 AI ‘Gems’를 만들어 원하는 업무를 더 쉽게 처리할 수 있게 됐어요. 이제 Google 앱과도 연동되어 더욱 개인화된 AI 경험이 가능해졌다고 하는데요. 어떤 변화가 있는지 살펴볼까요?\n\n\n \nAI 비서가 여기까지? Google Gemini 2025년 3월 대규모 업데이트\nAI 기술이 점점 더 우리 생활 속으로 들어오고 있어요. 단순히 질문에 답하는 챗봇을 넘어, 이제는 개인 맞춤형 비서 역할까지 수행할 수 있게 됐죠. Google의 Gemini가 그 대표적인 예인데요. 이번 3월 업데이트를 통해 더 똑똑해진 연구 기능, Google 앱과의 강력한 연동, 그리고 나만의 AI 설정이 가능한 ‘Gems’ 기능이 추가됐어요.\n \n저도 직접 사용해보면서 “이제는 정말 AI가 내 일을 대신해 주는구나”라고 느꼈는데요. 이번 업데이트에서 가장 주목할 만한 변화를 하나씩 살펴볼게요.\n \n  연구를 대신해 주는 ‘딥 리서치(Deep Research)’\n요즘 자료 조사할 일이 많아서 AI를 적극 활용하는데요. 이번에 Gemini에서 강화된 딥 리서치(Deep Research) 기능이 진짜 유용하더라고요.\n\n\n \n✅ 웹에서 정보를 자동으로 수집 & 정리\n✅ 논리적인 단계별 분석으로 복잡한 문제 해결\n✅ 연구 보고서를 다중 페이지로 생성해 더 정리된 결과 제공\n \n예를 들어, 논문을 준비할 때 관련 자료를 찾고 요약하는 데 시간이 오래 걸리잖아요? 그런데 Gemini의 딥 리서치를 활용하면, AI가 스스로 정보를 찾아 정리해 주고, 심지어 그 과정까지 실시간으로 보여줘요. 시간이 확 줄어들어서 정말 편리하더라고요.\n이 기능은 Gemini Advanced 사용자에게 더 확장된 버전이 제공된다고 해요. 연구나 프로젝트가 많으신 분들은 적극 활용해 보시면 좋을 것 같아요.\n \n \n  Google 앱과 연결해 더 개인화된 AI 경험\n이제 Gemini는 Google의 다양한 앱과 연동이 가능해졌어요! 단순히 질문에 답하는 걸 넘어, 내가 평소에 사용하던 Google 서비스들과 연결되면서 더욱 개인화된 AI 경험을 제공하죠.\n \n✔️ Google 검색 이력 반영 → 맞춤형 답변 제공\n✔️ 캘린더, 노트, 할 일(Task)과 연동 → 일정 & 업무 관리\n✔️ YouTube에서 레시피 검색 → 장보기 목록 생성 → 근처 마트 찾기까지 한 번에!\n예를 들어, Gemini에게 **“이번 주말에 어디 갈지 추천해 줘”**라고 물어보면, 단순히 일반적인 추천이 아니라, 내가 최근 검색했던 여행지를 반영해서 답변해 줘요.\n \n또한, Google 포토와 연동하면 내 사진을 기반으로 일정표를 만들어 주거나, 예전에 찍어둔 문서를 찾아주는 기능도 추가될 예정이에요. 이제 AI가 정말 ‘개인 비서’처럼 작동하는 시대가 온 거죠.\n \n \n  나만의 AI 조수 ‘Gems’ 만들기\n여기서 끝이 아니에요! 이번 업데이트에서 가장 재미있었던 기능이 바로 ‘Gems’ 기능이었어요.\nGems는 나만의 맞춤형 AI 조수를 직접 만들 수 있는 기능인데요. 챗GPT의 GPTS, 클로드의 PROJECT와 비슷한 개념이예요.\n \n예를 들어,\n \n  번역기 Gem → 내가 자주 쓰는 표현을 학습한 맞춤 번역기\n  식단 플래너 Gem → 내 건강 목표에 맞춘 맞춤형 식단 추천\n  학습 조교 Gem → 수학 문제 풀이 도와주는 AI 선생님\n\n\n이런 식으로 내가 필요한 역할을 AI에게 맡길 수 있게 됐어요.\n설정도 간단해요! Gems 관리자에서 원하는 역할을 입력하고, 이름만 정하면 끝!\n파일 업로드 기능까지 지원해서, 특정 문서를 참고하도록 만들 수도 있더라고요. 저는 ‘콘텐츠 기획 보조’ 역할을 설정해서 Gemini가 글 아이디어를 정리해 주도록 만들어 봤어요. 업무 속도가 확실히 빨라지더라고요.\n \n \n  결론: AI가 더 가까워진 순간\n이번 Gemini 업데이트를 통해, AI는 이제 단순한 챗봇이 아니라 **진짜 ‘나만의 비서’**로 자리 잡아 가고 있어요. 내 연구를 도와주고, 내 일정도 관리해 주고, 내가 원하는 AI 조수를 직접 만들 수 있는 시대!\n앞으로 AI가 어떻게 발전할지 기대되지 않나요?  \n여러분은 어떤 기능이 가장 기대되시나요? 댓글로 의견을 나눠 주세요!\n  Q&A\nQ1. 딥 리서치(Deep Research)는 어떤 기능인가요?\n딥 리서치는 AI가 웹에서 정보를 수집하고 분석해 논리적인 보고서를 생성해 주는 기능이에요. 연구나 프로젝트 준비 시 큰 도움이 됩니다.\nQ2. Google 앱과 Gemini의 연동은 어떻게 설정하나요?\nGemini 앱에서 설정(Settings) 메뉴로 들어가 ‘개인화(Personalization)’ 기능을 활성화하면 Google 검색, 캘린더, 노트, 할 일(Task)과 연동할 수 있어요.\nQ3. ‘Gems’ 기능은 어떻게 활용할 수 있나요?\nGems는 나만의 맞춤형 AI 조수를 만드는 기능이에요. 예를 들어, ‘여행 일정 조수’, ‘식단 플래너’, ‘번역기’ 등을 직접 설정할 수 있답니다.\nQ4. Gemini 2.0 Flash Thinking 모델은 어떤 점이 개선됐나요?\n더 긴 문맥을 이해할 수 있는 1M 토큰 컨텍스트 창을 제공하며, 파일 업로드 기능이 추가되어 문서 기반의 분석이 가능해졌어요.\nQ5. 이번 업데이트를 무료로 사용할 수 있나요?\n일반 사용자는 딥 리서치 기능을 월 몇 회까지 무료로 사용할 수 있고, Gemini Advanced 사용자들은 더 많은 기능을 무제한으로 사용할 수 있어요.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"딥 리서치(Deep Research)는 어떤 기능인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"딥 리서치는 AI가 웹에서 정보를 수집하고 분석해 논리적인 보고서를 생성해 주는 기능이에요. 연구나 프로젝트 준비 시 큰 도움이 됩니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"Google 앱과 Gemini의 연동은 어떻게 설정하나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"Gemini 앱에서 설정(Settings) 메뉴로 들어가 ‘개인화(Personalization)’ 기능을 활성화하면 Google 검색, 캘린더, 노트, 할 일(Task)과 연동할 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"‘Gems’ 기능은 어떻게 활용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"Gems는 나만의 맞춤형 AI 조수를 만드는 기능이에요. 예를 들어, ‘여행 일정 조수’, ‘식단 플래너’, ‘번역기’ 등을 직접 설정할 수 있답니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"Gemini 2.0 Flash Thinking 모델은 어떤 점이 개선됐나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"더 긴 문맥을 이해할 수 있는 1M 토큰 컨텍스트 창을 제공하며, 파일 업로드 기능이 추가되어 문서 기반의 분석이 가능해졌어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이번 업데이트를 무료로 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"일반 사용자는 딥 리서치 기능을 월 몇 회까지 무료로 사용할 수 있고, Gemini Advanced 사용자들은 더 많은 기능을 무제한으로 사용할 수 있어요.\"\n      }\n    }\n  ]\n}",
        "guid": "http://muzbox.tistory.com/483553",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "2025 ai 업데이트",
          "ai 연구 도구",
          "ai 조수",
          "AI 혁신",
          "flash thinking",
          "gemini 앱",
          "google 앱 연동",
          "개인 맞춤 ai",
          "딥 리서치",
          "인공지능 비서"
        ],
        "isoDate": "2025-03-14T01:56:38.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "｜RULIWEB｜",
        "title": "어둠도 절망도 가르는 전사들, 나이트 슬래셔즈: 리메이크",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2291",
        "pubDate": "Thu, 20 Mar 2025 22:01:29 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/03/20/195b3a3ca8a51ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "게임툰"
        ],
        "isoDate": "2025-03-20T13:01:29.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "Visual Studio Code 1.97 공개. 새로운 AI 지원 기능 Copilot NES 프리뷰",
        "link": "https://jacking75.github.io/ai-github_copilot_20250321/",
        "pubDate": "Fri, 21 Mar 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vThImQ4uAis3gwImZtL0n4yM0hU5xHYoWN0qdzRPkng7VecJaOpcpbS8kPmr-2dzWhKZODfwJsGOyPu/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-github_copilot_20250321/",
        "isoDate": "2025-03-20T15:00:00.000Z"
      },
      {
        "title": "Visual Studio Code 1.97의 새로운 GitHub Copilot 기능",
        "link": "https://jacking75.github.io/ai-github_copilot_20250316/",
        "pubDate": "Sun, 16 Mar 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vQAzrVwhG4ivZj5LEfWONNEncdK3VJwngGtSaHAQNnrKW1htKI_IM6ONuKotRyCYwQ-qgBqbPyG4Sfu/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-github_copilot_20250316/",
        "isoDate": "2025-03-15T15:00:00.000Z"
      },
      {
        "title": "더욱 이야기하고 싶어지는 ChatGPT의 개인화",
        "link": "https://jacking75.github.io/ai-llm_20250315/",
        "pubDate": "Sat, 15 Mar 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vRLloPwrCCyDdCai-_qtobMZQIup22YhLIYW8YEMQOq8wsQ8PiyCLl8IKlPOkS3oAEsxVp88VGUuCgw/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/ai-llm_20250315/",
        "isoDate": "2025-03-14T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "프로그래머의 손톱",
        "link": "https://jeho.page/essay/2025/03/17/programmer-nails.html",
        "pubDate": "2025-03-17T03:29:00.000Z",
        "author": "김재호",
        "content": "<p>신입 사원 때 회사의 CTO 이자 수석 프로그래머였던 분이 말씀하셨습니다.<br />\n프로그래머는 손톱이 짧아야 한다고. 손톱이 길면 코딩하는 사람이 아니라고.<br />\n그래서 면접 땐 손톱도 살펴본다고.</p>\n\n<p>완전히 동감했습니다.<br />\n개발자라면 다들 알겁니다. 손톱이 길 때 키보드에 닿는 그 느낌이 얼마나 싫은지.<br />\n손톱을 일주일에 두 번쯤 자릅니다. 아주 조금만 튀어나와도 그 느낌 때문에 코딩을 할 수가 없거든요.</p>\n\n<p>예전에 어떤 대기업에 다닐 때 일입니다.<br />\n누군가 전체 게시판에 손톱에 대해 글을 썼습니다.<br />\n제발 사무실에서 손톱 좀 자르지 말라고. 딱딱 거리는 소리 아주 듣기 싫어 죽겠다고.<br />\n댓글이 무척이나 뜨거웠던 걸로 기억합니다. 모두가 볼 수 있는 전체 게시판이었으니까요.</p>\n\n<p>말투가 너무 공격적이었기 때문에 비추를 많이 받았던 걸로 기억하지만… <br />\n생각해 보면 의견 자체는 타당한 것 같았습니다.<br />\n저 정도로 듣기 싫어하는 사람들이 있는데 내 약간의 편의를 위해서 손톱을 사무실에서 잘라야 하는가?</p>\n\n<p>솔직히 말하면 저도 사무실에서 손톱을 자르는 사람 중 하나였습니다.<br />\n그 글을 본 이후 손톱을 자를 때마다 미안한 마음이 들었습니다. 결국 손톱깎이를 집으로 다시 가져왔습니다. 😂</p>\n\n<p>어릴 땐 손톱 자르는 걸 지독히도 귀찮아했습니다.<br />\n잔뜩 길어진 손톱을 수업시간에 물어뜯어서 잘라내곤 했던 기억이 납니다. 아우 드러워.<br />\n프로그래머가 되고 나서 공짜로 생긴 좋은 습관이 하나 있다면 바로 손톱 관리네요. (웃음)</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2024/02/01/programmer-pain.html\">프로그래머의 고통</a></li>\n  <li><a href=\"/essay/2023/10/13/marriage-and-programmers.html\">결혼과 프로그래머</a></li>\n</ul>",
        "contentSnippet": "신입 사원 때 회사의 CTO 이자 수석 프로그래머였던 분이 말씀하셨습니다.\n완전히 동감했습니다.\n예전에 어떤 대기업에 다닐 때 일입니다.\n말투가 너무 공격적이었기 때문에 비추를 많이 받았던 걸로 기억하지만… \n솔직히 말하면 저도 사무실에서 손톱을 자르는 사람 중 하나였습니다.\n어릴 땐 손톱 자르는 걸 지독히도 귀찮아했습니다.\n\n함께 읽으면 좋은 글:\n프로그래머의 고통\n결혼과 프로그래머",
        "summary": "신입 사원 때 회사의 CTO 이자 수석 프로그래머였던 분이 말씀하셨습니다. 프로그래머는 손톱이 짧아야 한다고. 손톱이 길면 코딩하는 사람이 아니라고. 그래서 면접 땐 손톱도 살펴본다고.",
        "id": "https://jeho.page/essay/2025/03/17/programmer-nails",
        "isoDate": "2025-03-17T03:29:00.000Z"
      },
      {
        "title": "초등학교 1학년을 위한 받아쓰기 어플",
        "link": "https://jeho.page/essay/2025/03/14/spell-start.html",
        "pubDate": "2025-03-14T04:22:00.000Z",
        "author": "김재호",
        "content": "<p>제가 국민학교 다닐 땐 받아쓰기를 했습니다.<br />\n89년도인가? 초등학교 2학년에 올라가자마자 선생님이 불러주는 것을 받아쓰기 하던 날.<br />\n<a href=\"https://namu.wiki/w/%EC%9D%8D%EB%8B%88%EB%8B%A4\">‘읍니다’가, ‘습니다’로 바뀌어서</a> 와장창 틀렸던 기억.<br />\n받아쓰기에 대한 유일한 기억입니다.</p>\n\n<p>얼마 전 딸이 초등학교에 들어갔는데, 맞춤법이 자주 틀려서 교정해주기 위한 어플을 만들어봤습니다.<br />\n선생님이 불러주고 받아적는 받아쓰기 어플.<br />\n틀린 점에 대해 피드백 받을 수 있는 어플.<br />\n이런 어플이 있으면 맞춤법 공부할 때 도움이 되지 않을까?</p>\n\n<p>온 가족이 함께 만들었습니다.<br />\n아내는 디자인을, 나는 코딩을, 딸은 목소리를.</p>\n\n<p><img src=\"/assets/img/spell_start.png\" alt=\"받아쓰기 어플 모습\" /></p>\n\n<p>아직 개선할 부분들이 많지만 다른 사람들도 함께 쓸 수 있도록 공개해봅니다.<br />\n완전히 무료이고, 아이들을 홀려서 클릭을 유발하는 지저분한 광고도 넣지 않을 계획입니다. 키즈앱에 이런 광고들이 특히 많더라고요.</p>\n\n<p>혹시라도 사람들이 의미있게 써준다면 한국 사람들은 무료로 쓰게 하고 해외에만 몇 달러 정도에 팔아볼까하는 생각은 있습니다.<br />\n그렇다면 사회에도 기여하고, 달러도 벌어오는… 내가 딱 원하던 이상적인 모습이 되는 것 아닐까 하고.</p>\n\n<p>앱을 올리고 한 번도 광고하지 않았는데도 글로벌 여기저기서 쓰는 모습을 보고 놀랍고 기쁘기도 했습니다.</p>\n\n<p><img src=\"/assets/img/global_spell_start.png\" alt=\"해외에서 사용 중인 모습\" /><br />\n<em>이게 글로벌 서비스의 재미인가?</em></p>\n\n<p>…사실 별 가치를 못 주고 망할 가능성이 높습니다.<br />\n그래도 가족이 모두 함께 만든 첫 작품이니 그걸로 충분하지 않을까요? 😁</p>\n\n<ul>\n  <li><a href=\"https://spellstart.com/ko\">소개페이지</a></li>\n  <li><a href=\"https://play.google.com/store/apps/details?id=com.spellstart.android&amp;hl=ko\">안드로이드 다운로드</a></li>\n  <li><a href=\"https://apps.apple.com/kr/app/%EC%B4%88%EB%93%B1-%EB%B0%9B%EC%95%84%EC%93%B0%EA%B8%B0-%EB%8B%A8%EC%96%B4-%EC%97%B0%EC%8A%B5/id6740793505\">아이폰 다운로드</a></li>\n</ul>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2023/09/29/give-back-more-than-take.html\">달러 한 번 벌어보고 싶다</a></li>\n</ul>",
        "contentSnippet": "제가 국민학교 다닐 땐 받아쓰기를 했습니다.\n‘읍니다’가, ‘습니다’로 바뀌어서 와장창 틀렸던 기억.\n얼마 전 딸이 초등학교에 들어갔는데, 맞춤법이 자주 틀려서 교정해주기 위한 어플을 만들어봤습니다.\n온 가족이 함께 만들었습니다.\n\n아직 개선할 부분들이 많지만 다른 사람들도 함께 쓸 수 있도록 공개해봅니다.\n혹시라도 사람들이 의미있게 써준다면 한국 사람들은 무료로 쓰게 하고 해외에만 몇 달러 정도에 팔아볼까하는 생각은 있습니다.\n앱을 올리고 한 번도 광고하지 않았는데도 글로벌 여기저기서 쓰는 모습을 보고 놀랍고 기쁘기도 했습니다.\n\n이게 글로벌 서비스의 재미인가?\n…사실 별 가치를 못 주고 망할 가능성이 높습니다.\n소개페이지\n안드로이드 다운로드\n아이폰 다운로드\n\n함께 읽으면 좋은 글:\n달러 한 번 벌어보고 싶다",
        "summary": "제가 국민학교 다닐 땐 받아쓰기를 했습니다. 89년도인가? 초등학교 2학년에 올라가자마자 선생님이 불러주는 것을 받아쓰기 하던 날. ‘읍니다’가, ‘습니다’로 바뀌어서 와장창 틀렸던 기억. 받아쓰기에 대한 유일한 기억입니다.",
        "id": "https://jeho.page/essay/2025/03/14/spell-start",
        "isoDate": "2025-03-14T04:22:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "타입스크립트, 이제 Go로 다시 태어난다: 10배 빨라지는 이유와 커뮤니티 반응까지",
        "link": "https://blog.gaerae.com/2025/03/a-10x-faster-typescript-go.html",
        "pubDate": "Mon, 17 Mar 2025 03:06:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<div class=\"separator\" style=\"clear: both;\"><img border=\"0\" data-original-height=\"700\" data-original-width=\"1124\" height=\"399\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgX__314nKNgfp-DeE9nJFB-jgTt73QCCV7mB2ORMD9I5vhtznqrw29xue9rFnfZHSnSBPgjARcWxonk1xXqwyiI5xFSaO1cw0kgGfnrEHP2pj_UEMxQ5HriKhhWOy3_SPmFHOXBg1f8qrJLTpN1EperIwh6RE-bxLfCMzJJXQW32G9Ey70seB50T1vk8g/w640-h399/typescript-go.png\" width=\"640\" /></div>\n<p>마이크로소프트가 최근 TypeScript 컴파일러를 Go 언어로 포팅한다고 발표했습니다. 이 결정은 개발 커뮤니티에 큰 화제가 되었는데, 과연 왜 마이크로소프트는 TypeScript를 Go로 재작성하기로 했을까요? 기존 TypeScript의 한계, Go를 선택한 이유와 Rust가 아닌 Go인 이유, 그리고 앞으로의 로드맵과 커뮤니티의 반응까지 종합적으로 살펴보겠습니다.</p>\n<h2>기존 타입스크립트의 한계: 성능과 유지보수 문제</h2>\n<p>현재의 타입스크립트 컴파일러(<code inline=\"\">tsc</code>)는 JavaScript(정확히는 TypeScript로 작성된 JS)로 구현되어 Node.js 환경에서 동작합니다. 이는 간편한 배포와 쉬운 확장성이라는 장점이 있었지만, 다음과 같은 근본적인 성능 문제가 있었습니다.</p>\n<ul>\n<li><strong>대규모 프로젝트에서의 느린 빌드 속도</strong><br />\n프로젝트가 커질수록 로딩 및 타입 검사에 걸리는 시간이 급격히 증가해 개발 생산성을 저하시켰습니다.</li>\n<li><strong>단일 스레드 동작</strong>으로 인해 멀티코어 CPU의 병렬성을 충분히 활용하지 못했습니다.</li>\n<li>Node.js의 가비지 컬렉션과 JIT 컴파일 오버헤드로 인해 최적화에 제약이 있었습니다.</li>\n</ul>\n<p>실제 VS Code 수준(약 150만 라인)의 프로젝트는 전체 빌드에 최대 1분 이상 걸리는 문제가 지속되어 왔습니다.</p>\n<h2>Go 언어로의 전환: 10배 빨라지는 TypeScript</h2>\n<p>이러한 문제를 근본적으로 해결하기 위해 타입스크립트 팀은 네이티브 언어로의 포팅을 결정했고, 선택된 언어는 Go였습니다. Go로 포팅하면 다음과 같은 이점이 명확히 나타납니다.</p>\n<ul>\n<li><strong>컴파일 성능 대폭 향상 (최대 10배)</strong>: 초기 테스트에서 VS Code 전체 빌드 시간을 77.8초에서 7.5초로 단축하여 약 10배의 성능 향상을 입증했습니다.</li>\n<li><strong>멀티코어 활용 가능</strong>: Go의 멀티스레딩 지원 덕분에 병렬로 파싱, 바인딩, 타입 검사를 실행할 수 있게 되었습니다.</li>\n<li><strong>메모리 효율성 향상</strong>: 네이티브 코드의 메모리 효율 개선과 공유 메모리 활용으로 메모리 사용량이 최대 50% 감소했습니다.</li>\n<li><strong>간편한 배포 및 유지보수성 향상</strong>: Go는 정적 컴파일을 지원하여 단일 바이너리 형태로 배포할 수 있어 환경 설정 및 CI/CD가 간편해집니다. 또한, 정적 타입 덕분에 컴파일러 자체의 안정성도 높아집니다.</li>\n</ul>\n<p>결과적으로 개발자들이 더욱 빠르고 안정적인 개발 경험을 얻을 수 있게 되며, IDE의 초기 로딩과 코드 편집 응답 속도가 획기적으로 빨라질 것으로 기대됩니다.</p>\n<h2>왜 Rust가 아니라 Go인가?</h2>\n<p>발표 직후 가장 큰 논쟁거리는 왜 Rust가 아니라 Go를 선택했느냐는 것이었습니다. Rust는 최근 JavaScript 도구 생태계에서 성능을 높이는 새로운 표준처럼 여겨졌기 때문입니다. Rust를 선택하지 않은 이유는 다음과 같습니다.</p>\n<ul>\n<li><strong>구조적 호환성 문제</strong>: 기존 TypeScript 컴파일러(tsc)는 JS의 GC와 가변 객체 그래프를 광범위하게 활용합니다. Rust로 옮기려면 공유 가변성(shared mutability) 문제로 인해 수많은 부분을 재설계해야 했고, 이는 호환성을 깨고 버그를 초래할 위험이 컸습니다.</li>\n<li><strong>복잡성 증가</strong>: Rust의 엄격한 메모리 관리 규칙을 준수하면서 기존 기능을 그대로 구현하려면 과도하게 <code inline=\"\">unsafe</code> 코드를 사용하는 등 Rust의 장점을 살리지 못하는 결과를 초래할 수 있었습니다.</li>\n<li><strong>개발자 경험의 일관성</strong>: 타입스크립트 설계자 Anders Hejlsberg는 \"새로운 패러다임으로 재설계하는 리스크보다는 기존의 동작 방식을 최대한 유지하는 것이 중요했다\"고 밝혔습니다. Go는 JS와 유사한 가비지 컬렉터를 사용하며 메모리 관리와 코드 스타일 측면에서 기존 코드베이스와 호환성이 높았습니다.</li>\n</ul>\n<p>실제 Rust 기반의 SWC 컴파일러 개발자(kdy1) 역시 과거 타입스크립트 컴파일러를 Rust로 포팅하는 시도를 했지만, 구조적 한계 때문에 중단한 사례도 있습니다.</p>\n<h2>앞으로의 로드맵과 일정</h2>\n<p>마이크로소프트는 이번 프로젝트를 TypeScript 7.0 버전에서 공식적으로 출시할 예정입니다. 구체적인 로드맵은 다음과 같습니다.</p>\n<ul>\n<li>2025년 중반까지 Go로 작성된 TypeScript 컴파일러의 <strong>프리뷰 버전</strong> 제공 예정</li>\n<li>2025년 말까지 타입 검사 및 언어 서비스까지 기능 완비(feature-complete) 예정</li>\n<li>이후 기존 JS 버전(TypeScript 6.x 버전)은 상당 기간 유지하면서 개발자가 점진적으로 전환하도록 지원</li>\n</ul>\n<p>현재 GitHub에 Go 포팅 버전의 초기 코드가 공개되어 있어, 개발자들이 직접 테스트하고 피드백을 줄 수 있습니다.</p>\n<h2>커뮤니티 및 전문가들의 반응: 기대와 우려 사이</h2>\n<p>커뮤니티에서는 대체로 긍정적인 평가가 많습니다. 특히 현업 개발자들은 \"10배 빨라진 컴파일 속도\"에 큰 기대를 나타냈습니다. 하지만 Rust가 아니라 Go를 선택한 것에 대한 일부 아쉬움과 우려도 있었습니다. 특히 WebAssembly 번들 크기나 성능 측면에서 Rust보다 불리할 수 있다는 점에 대한 지적도 나왔습니다.</p>\n<p>그럼에도 불구하고, 마이크로소프트가 공개한 포팅 이유와 기술적 설명을 접한 뒤에는 다수의 개발자가 납득하고 긍정적으로 평가했습니다. 무엇보다 \"중요한 건 컴파일러의 성능 향상과 안정성이며, 결과가 좋다면 언어 선택은 부차적이다\"라는 의견이 힘을 얻고 있습니다.</p>\n<h2>결론: TypeScript의 새로운 도약을 기대하며</h2>\n<p>결론적으로 마이크로소프트의 이번 선택은 TypeScript의 향후 10년을 대비한 전략적인 결정으로 평가됩니다. Go로의 포팅이 성공적으로 이루어진다면, 앞으로 더 많은 프로젝트들이 TypeScript의 강력한 타입 시스템과 함께 더욱 향상된 성능과 생산성을 경험할 수 있을 것입니다. Rust 등 다른 후보 언어를 둘러싼 초기 논쟁도 있었지만, 결과적으로 이번 포팅 결정은 실용적이고 현실적인 선택이라는 평가를 받고 있습니다.</p>\n<p>타입스크립트의 새로운 시대가 열리고 있습니다. 마이크로소프트의 이번 결정이 실제 어떤 성과로 이어질지, 커뮤니티와 함께 기대하며 지켜볼 일입니다.</p>\n<hr />\n<h2>출처 및 참고자료</h2>\n<ul>\n<li>GitHub 공식 저장소: <a href=\"https://github.com/microsoft/typescript-go\">microsoft/typescript-go</a></li>\n<li>Microsoft 공식 블로그: <a href=\"https://devblogs.microsoft.com/typescript/typescript-native-port/\">A 10x Faster TypeScript</a></li> \n<li>개발자 커뮤니티 (Hacker News): <a href=\"https://news.ycombinator.com/item?id=43333156\">A 10x Faster TypeScript</a></li>\n<li>개발자 커뮤니티 (Reddit): <a href=\"https://www.reddit.com/r/typescript/comments/1j8s467/a_10x_faster_typescript/\">A 10x Faster TypeScript : r/typescript</a></li>\n<li>2ality 기술 블로그: <a href=\"https://2ality.com/2025/03/typescript-in-go.html\">A closer look at the details behind the Go port of the TypeScript compiler</a></li>\n<li>Simon Willison 기술 블로그: <a href=\"https://simonwillison.net/2025/Mar/11/ryan-cavanaugh/\">A quote from Ryan Cavanaugh</a></li>\n<li>YouTube 영상 요약 및 분석 (ChainDesk.ai 요약 페이지): <a href=\"https://www.chaindesk.ai/tools/youtube-summarizer/microsoft-goes-nuclear-on-type-script-codebase-PQ2WjtaPfXU\">Microsoft goes nuclear on TypeScript codebase…</a></li>\n</ul>",
        "contentSnippet": "마이크로소프트가 최근 TypeScript 컴파일러를 Go 언어로 포팅한다고 발표했습니다. 이 결정은 개발 커뮤니티에 큰 화제가 되었는데, 과연 왜 마이크로소프트는 TypeScript를 Go로 재작성하기로 했을까요? 기존 TypeScript의 한계, Go를 선택한 이유와 Rust가 아닌 Go인 이유, 그리고 앞으로의 로드맵과 커뮤니티의 반응까지 종합적으로 살펴보겠습니다.\n기존 타입스크립트의 한계: 성능과 유지보수 문제\n현재의 타입스크립트 컴파일러(tsc)는 JavaScript(정확히는 TypeScript로 작성된 JS)로 구현되어 Node.js 환경에서 동작합니다. 이는 간편한 배포와 쉬운 확장성이라는 장점이 있었지만, 다음과 같은 근본적인 성능 문제가 있었습니다.\n대규모 프로젝트에서의 느린 빌드 속도\n단일 스레드 동작으로 인해 멀티코어 CPU의 병렬성을 충분히 활용하지 못했습니다.\nNode.js의 가비지 컬렉션과 JIT 컴파일 오버헤드로 인해 최적화에 제약이 있었습니다.\n실제 VS Code 수준(약 150만 라인)의 프로젝트는 전체 빌드에 최대 1분 이상 걸리는 문제가 지속되어 왔습니다.\nGo 언어로의 전환: 10배 빨라지는 TypeScript\n이러한 문제를 근본적으로 해결하기 위해 타입스크립트 팀은 네이티브 언어로의 포팅을 결정했고, 선택된 언어는 Go였습니다. Go로 포팅하면 다음과 같은 이점이 명확히 나타납니다.\n컴파일 성능 대폭 향상 (최대 10배): 초기 테스트에서 VS Code 전체 빌드 시간을 77.8초에서 7.5초로 단축하여 약 10배의 성능 향상을 입증했습니다.\n멀티코어 활용 가능: Go의 멀티스레딩 지원 덕분에 병렬로 파싱, 바인딩, 타입 검사를 실행할 수 있게 되었습니다.\n메모리 효율성 향상: 네이티브 코드의 메모리 효율 개선과 공유 메모리 활용으로 메모리 사용량이 최대 50% 감소했습니다.\n간편한 배포 및 유지보수성 향상: Go는 정적 컴파일을 지원하여 단일 바이너리 형태로 배포할 수 있어 환경 설정 및 CI/CD가 간편해집니다. 또한, 정적 타입 덕분에 컴파일러 자체의 안정성도 높아집니다.\n결과적으로 개발자들이 더욱 빠르고 안정적인 개발 경험을 얻을 수 있게 되며, IDE의 초기 로딩과 코드 편집 응답 속도가 획기적으로 빨라질 것으로 기대됩니다.\n왜 Rust가 아니라 Go인가?\n발표 직후 가장 큰 논쟁거리는 왜 Rust가 아니라 Go를 선택했느냐는 것이었습니다. Rust는 최근 JavaScript 도구 생태계에서 성능을 높이는 새로운 표준처럼 여겨졌기 때문입니다. Rust를 선택하지 않은 이유는 다음과 같습니다.\n구조적 호환성 문제: 기존 TypeScript 컴파일러(tsc)는 JS의 GC와 가변 객체 그래프를 광범위하게 활용합니다. Rust로 옮기려면 공유 가변성(shared mutability) 문제로 인해 수많은 부분을 재설계해야 했고, 이는 호환성을 깨고 버그를 초래할 위험이 컸습니다.\n복잡성 증가: Rust의 엄격한 메모리 관리 규칙을 준수하면서 기존 기능을 그대로 구현하려면 과도하게 unsafe 코드를 사용하는 등 Rust의 장점을 살리지 못하는 결과를 초래할 수 있었습니다.\n개발자 경험의 일관성: 타입스크립트 설계자 Anders Hejlsberg는 \"새로운 패러다임으로 재설계하는 리스크보다는 기존의 동작 방식을 최대한 유지하는 것이 중요했다\"고 밝혔습니다. Go는 JS와 유사한 가비지 컬렉터를 사용하며 메모리 관리와 코드 스타일 측면에서 기존 코드베이스와 호환성이 높았습니다.\n실제 Rust 기반의 SWC 컴파일러 개발자(kdy1) 역시 과거 타입스크립트 컴파일러를 Rust로 포팅하는 시도를 했지만, 구조적 한계 때문에 중단한 사례도 있습니다.\n앞으로의 로드맵과 일정\n마이크로소프트는 이번 프로젝트를 TypeScript 7.0 버전에서 공식적으로 출시할 예정입니다. 구체적인 로드맵은 다음과 같습니다.\n2025년 중반까지 Go로 작성된 TypeScript 컴파일러의 프리뷰 버전 제공 예정\n2025년 말까지 타입 검사 및 언어 서비스까지 기능 완비(feature-complete) 예정\n이후 기존 JS 버전(TypeScript 6.x 버전)은 상당 기간 유지하면서 개발자가 점진적으로 전환하도록 지원\n현재 GitHub에 Go 포팅 버전의 초기 코드가 공개되어 있어, 개발자들이 직접 테스트하고 피드백을 줄 수 있습니다.\n커뮤니티 및 전문가들의 반응: 기대와 우려 사이\n커뮤니티에서는 대체로 긍정적인 평가가 많습니다. 특히 현업 개발자들은 \"10배 빨라진 컴파일 속도\"에 큰 기대를 나타냈습니다. 하지만 Rust가 아니라 Go를 선택한 것에 대한 일부 아쉬움과 우려도 있었습니다. 특히 WebAssembly 번들 크기나 성능 측면에서 Rust보다 불리할 수 있다는 점에 대한 지적도 나왔습니다.\n그럼에도 불구하고, 마이크로소프트가 공개한 포팅 이유와 기술적 설명을 접한 뒤에는 다수의 개발자가 납득하고 긍정적으로 평가했습니다. 무엇보다 \"중요한 건 컴파일러의 성능 향상과 안정성이며, 결과가 좋다면 언어 선택은 부차적이다\"라는 의견이 힘을 얻고 있습니다.\n결론: TypeScript의 새로운 도약을 기대하며\n결론적으로 마이크로소프트의 이번 선택은 TypeScript의 향후 10년을 대비한 전략적인 결정으로 평가됩니다. Go로의 포팅이 성공적으로 이루어진다면, 앞으로 더 많은 프로젝트들이 TypeScript의 강력한 타입 시스템과 함께 더욱 향상된 성능과 생산성을 경험할 수 있을 것입니다. Rust 등 다른 후보 언어를 둘러싼 초기 논쟁도 있었지만, 결과적으로 이번 포팅 결정은 실용적이고 현실적인 선택이라는 평가를 받고 있습니다.\n타입스크립트의 새로운 시대가 열리고 있습니다. 마이크로소프트의 이번 결정이 실제 어떤 성과로 이어질지, 커뮤니티와 함께 기대하며 지켜볼 일입니다.\n출처 및 참고자료\nGitHub 공식 저장소: microsoft/typescript-go\nMicrosoft 공식 블로그: A 10x Faster TypeScript\n \n개발자 커뮤니티 (Hacker News): A 10x Faster TypeScript\n개발자 커뮤니티 (Reddit): A 10x Faster TypeScript : r/typescript\n2ality 기술 블로그: A closer look at the details behind the Go port of the TypeScript compiler\nSimon Willison 기술 블로그: A quote from Ryan Cavanaugh\nYouTube 영상 요약 및 분석 (ChainDesk.ai 요약 페이지): Microsoft goes nuclear on TypeScript codebase…",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-82293066507303412",
        "categories": [
          {
            "_": "go",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          },
          {
            "_": "typescript",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-03-17T03:06:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": [
      {
        "title": "SQLMesh 사용법 : dbt의 경쟁자가 될 수 있을까?",
        "link": "https://zzsza.github.io/data-engineering/2025/03/15/sqlmesh-intro/",
        "pubDate": "Sat, 15 Mar 2025 00:00:00 +0000",
        "content": "<ul>\n  <li>이 글은 SQLMesh 사용법에 대해 작성한 글입니다</li>\n  <li>예상 독자\n    <ul>\n      <li>SQLMesh가 궁금하신 분</li>\n      <li>SQLMesh가 dbt 대비 어떤 것이 다른지 궁금하신 분</li>\n      <li>이 글을 보시기 전에 dbt, DuckDB에 대해 알고 계시면 좋을 수 있는데, 과거에 작성한 글을 추천\n        <ul>\n          <li><a href=\"https://zzsza.github.io/data-engineering/2025/01/16/dbt-core/\">dbt 사용법과 기본 개념</a></li>\n          <li><a href=\"https://zzsza.github.io/data-engineering/2024/10/25/duckdb/\">DuckDB 사용법</a></li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>키워드 : SQLMesh 사용법, SQLMesh vs dbt</li>\n</ul>\n\n<hr />\n\n<h1 id=\"sqlmesh란\">SQLMesh란?</h1>\n<ul>\n  <li><a href=\"https://github.com/TobikoData/sqlmesh\">SQLMesh GitHub</a></li>\n  <li><a href=\"https://tobikodata.com/\">Tobiko</a>의 오픈소스\n    <ul>\n      <li><a href=\"https://sqlmesh.com/\">SQLMesh</a>, <a href=\"https://github.com/tobymao/sqlglot\">SQLGlot</a></li>\n    </ul>\n  </li>\n  <li>SQLMesh는 Transformation, Testing, Collaboration을 위한 DataOps 솔루션\n    <ul>\n      <li>데이터 Transformation 영역에서 dbt가 제일 유명한데, dbt에서 개선하면 좋은 점들을 개선해서 나오는 도구</li>\n    </ul>\n  </li>\n  <li>SQLMesh 공식 문서에 보면 dbt와 다른 점에서도 상세히 공유하고 있음</li>\n  <li>Terraform에서 영감을 받은 부분이 있다고 함. 그래서 plan 명령어가 있음</li>\n  <li>2025년 3월 15일 기준 v0.165.0</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/5w11oa8l9ocfzna4ktspt/2025-03-15-12.16.54.png?rlkey=7d2yvqrangunm8ybvb0dl6ci6&amp;raw=1\" /></p>\n\n<p><br /></p>\n\n<h2 id=\"sqlmesh의-장점\">SQLMesh의 장점</h2>\n<ul>\n  <li>SQLMesh의 Concept은 dbt와 유사하며, dbt와 차이점으로 나오는 장점들을 정리</li>\n</ul>\n\n<h3 id=\"1-간단한-sql로-모델-생성-가능\">1) 간단한 SQL로 모델 생성 가능</h3>\n<ul>\n  <li>데이터 분석가 직무에 계신 분들이 처음 dbt를 사용하면 Jinja, YAML에 어려움을 겪는데, SQLMesh는 간단한 SQL로 정의할 수 있음</li>\n</ul>\n\n<h3 id=\"2-증분-로직-처리\">2) 증분 로직 처리</h3>\n<ul>\n  <li>dbt에선 증분 로직을 <code class=\"language-plaintext highlighter-rouge\">is_incremental</code> 등을 사용해서 만들어야 하는데, SQLMesh는 증분 로직을 쉽게 만들어줌</li>\n  <li>dbt의 증분 로직\n    <ul>\n      <li>처음에 dbt를 학습할 때 제일 어려운 부분</li>\n      <li>dbt는 state를 추적하지 않아서 이렇게 구현해야 함</li>\n      <li>날짜 경계를 찾기 위해 수동으로 매크로를 지정하는 작업에서 오류가 나기 쉬움</li>\n    </ul>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    \n  -- dbt incremental\n  SELECT *\n  FROM {{ ref(raw.events) }} e\n  JOIN {{ ref(raw.event_dims) }} d\n    ON e.id = d.id\n  -- must specify the is_incremental flag because this predicate will fail if the model has never run before\n  {% if is_incremental() %}\n      -- this filter dynamically scans the current model to find the date boundary\n      AND d.ds &gt;= (SELECT MAX(ds) FROM {{ this }})\n  {% endif %}\n  {% if is_incremental() %}\n    WHERE e.ds &gt;= (SELECT MAX(ds) FROM {{ this }})\n  {% endif %}\n    \n</code></pre></div>    </div>\n  </li>\n  <li>SQLMesh는 날짜 범위를 알아서 추적해 간단하게 쓸 수 있음</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>-- SQLMesh incremental\nSELECT *\nFROM raw.events e\nJOIN raw.event_dims d\n  -- date ranges are handled automatically by SQLMesh\n  ON e.id = d.id AND d.ds BETWEEN @start_ds AND @end_ds\nWHERE d.ds BETWEEN @start_ds AND @end_ds\n</code></pre></div></div>\n\n<h3 id=\"3-data-gap-감지\">3) Data Gap 감지</h3>\n<ul>\n  <li>dbt에서 증분 모델을 구현할 때는 MAX(date)로 최근 데이터를 확인하고, 그 이후부터 적재하도록 함\n    <ul>\n      <li>이렇게 할 경우 과거에 누락된 데이터를 놓치게 되며, 데이터 파이프라인 관점에서 유지보수를 더 많이 해야 함</li>\n    </ul>\n  </li>\n  <li>\n    <p>SQLMesh는 모델이 실행된 날짜 간격을 저장해서 누락된 날짜를 정확히 알 수 있음</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  Expected dates: 2022-01-01, 2022-01-02, 2022-01-03\n  Missing past data: ?, 2022-01-02, 2022-01-03\n  Data gap: 2022-01-01, ?, 2022-01-03\n</code></pre></div>    </div>\n  </li>\n</ul>\n\n<h3 id=\"4-환경-격리\">4) 환경 격리</h3>\n<ul>\n  <li>데이터 파이프라인도 Prod/Dev 환경을 격리해야 할 수 있음. 규모가 커질수록 환경의 필요성이 생기지만, 환경을 구축하는 것은 고민이 많이 됨\n    <ul>\n      <li>환경을 구축하기 위해선 실제 데이터를 Dev에 그대로 제공해야 하는데, 이는 데이터 저장 비용이 드는 일이라 고민이 됨(데이터 저장 비용이 2배가 되는 상황)</li>\n      <li>dbt는 환경마다 별도의 테이블에 데이터를 물리적으로 복제함</li>\n    </ul>\n  </li>\n  <li>SQLMesh는 VIEW를 사용해서 데이터를 물리적으로 저장하지 않아 비용이 들지 않음\n    <ul>\n      <li>환경마다 테이블 이름에 접두사를 붙여서 환경을 구분함</li>\n    </ul>\n  </li>\n</ul>\n\n<h3 id=\"5-스키마-변경-자동화\">5) 스키마 변경 자동화</h3>\n<ul>\n  <li>스키마가 변경되면 자동으로 감지하고 필요한 마이그레이션을 생성함</li>\n  <li>dbt는 개발자가 직접 스키마 변경을 관리해야 함</li>\n</ul>\n\n<h3 id=\"6-오픈소스-ui-제공\">6) 오픈소스 UI 제공</h3>\n<ul>\n  <li>dbt는 Paid UI가 제공되며, 오픈소스 중에 찾으려면 lightdash를 사용해야 함</li>\n  <li>SQLMesh는 오픈소스 UI가 존재해서 쉽게 사용할 수 있음(그러나 디자인은 약간 아쉬움)</li>\n</ul>\n\n<p><br /><br /></p>\n\n<h1 id=\"sqlmesh-실습\">SQLMesh 실습</h1>\n<h2 id=\"작업-흐름\">작업 흐름</h2>\n<ul>\n  <li>파이썬 가상 환경 / 라이브러리 설치\n    <ul>\n      <li>파이썬 가상환경 설정</li>\n      <li>SQLMesh 설치</li>\n    </ul>\n  </li>\n  <li>프로젝트 생성\n    <ul>\n      <li>Prod 환경 설정</li>\n      <li>Model 수정</li>\n      <li>Dev에서 작업</li>\n      <li>Prod로 통합</li>\n    </ul>\n  </li>\n</ul>\n\n<p><br /></p>\n\n<h2 id=\"파이썬-가상-환경--라이브러리-설치\">파이썬 가상 환경 / 라이브러리 설치</h2>\n<ul>\n  <li>가상 환경 설정</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>python -m venv .venv\nsource .venv/bin/activate\n</code></pre></div></div>\n\n<ul>\n  <li>SQLMesh 설치\n    <ul>\n      <li>Web UI도 사용할 예정이라, 같이 설치</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip3 install \"sqlmesh[web]\"\n</code></pre></div></div>\n\n<ul>\n  <li>Duckdb 설치 : Local에서 Duckdb를 사용할 예정</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pip3 install duckdb\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2 id=\"프로젝트-생성\">프로젝트 생성</h2>\n<ul>\n  <li>폴더 생성(sqlmesh-example)</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mkdir sqlmesh-example\ncd sqlmesh-example\n</code></pre></div></div>\n\n<h3 id=\"duckdb-환경에서--init\">DuckDB 환경에서  init</h3>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sqlmesh init duckdb\n</code></pre></div></div>\n\n<ul>\n  <li>다음과 같은 폴더, 파일들이 생성됨</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>├── audits\n│   └── assert_positive_order_ids.sql\n├── config.yaml\n├── macros\n│   └── __init__.py\n├── models\n│   ├── full_model.sql\n│   ├── incremental_model.sql\n│   └── seed_model.sql\n├── seeds\n│   └── seed_data.csv\n└── tests\n    └── test_full_model.yaml\n\n6 directories, 8 files\n</code></pre></div></div>\n\n<h3 id=\"configyaml\">config.yaml</h3>\n<ul>\n  <li>프로젝트 디렉토리에 생성됨</li>\n  <li>어떤 엔진을 사용할지, 게이트웨이 커넥션 등이 저장됨</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gateways:\n  duckdb:\n    connection:\n      # For more information on configuring the connection to your execution engine, visit:\n      # https://sqlmesh.readthedocs.io/en/stable/reference/configuration/#connections\n      # https://sqlmesh.readthedocs.io/en/stable/integrations/engines/duckdb/#connection-options\n      type: duckdb\n      database: db.db\n      # concurrent_tasks: 1\n      # register_comments: True\n      # pre_ping: False\n      # pretty_sql: False\n      # catalogs:\n      # extensions:\n      # connector_config:\n      # token:\n\n\ndefault_gateway: duckdb\n\nmodel_defaults:\n  dialect: duckdb\n  start: 2025-03-14\n</code></pre></div></div>\n\n<h3 id=\"생성된-폴더의-특징\">생성된 폴더의 특징</h3>\n<ul>\n  <li>config.yaml : 프로젝트 설정 파일</li>\n  <li>models : SQL/Python 모델 파일\n    <ul>\n      <li>현재 full_model.sql, incremental_model.sql, seed_model.sql이 저장됨</li>\n    </ul>\n  </li>\n  <li>seeds : CSV 같은 고정된 데이터셋</li>\n  <li>audits : 모델의 출력을 검증할 때 사용\n    <ul>\n      <li>목적: 모델 출력의 데이터 품질을 검증</li>\n      <li>실행 시점: 모델 실행 후 매번 자동으로 실행. 계획(plan)을 적용할 때마다 SQLMesh는 자동으로 실행</li>\n      <li>기본 동작: 감사가 실패하면 sqlmesh plan을 중단해 잠재적으로 유효하지 않은 데이터가 다운스트림으로 전파되는 것을 방지</li>\n    </ul>\n  </li>\n  <li>tests : 모델의 로직의 정확성 검증\n    <ul>\n      <li>목적: 모델의 로직을 검증하고 예상된 출력과 일치하는지 확인</li>\n      <li>실행 시점: 개발 중, 또는 CI/CD 과정</li>\n      <li>작동 방식: 사전 정의된 입력으로 모델의 로직을 평가하고 출력을 테스트에서 제공된 예상 결과와 비교</li>\n      <li>소프트웨어 개발의 단위 테스트(unit testing)와 유사</li>\n    </ul>\n  </li>\n  <li>macros : 매크로 저장. <a href=\"https://sqlmesh.readthedocs.io/en/stable/concepts/macros/sqlmesh_macros/\">SQLMesh 매크로</a>와 <a href=\"https://sqlmesh.readthedocs.io/en/stable/concepts/macros/jinja_macros/\">Jinja 매크로</a>로 나뉨</li>\n</ul>\n\n<h3 id=\"model-생성\">Model 생성</h3>\n<ul>\n  <li><a href=\"https://sqlmesh.readthedocs.io/en/stable/concepts/models/overview/\">Model Doc</a></li>\n  <li>위에 init하면서 생긴 Model 살펴보기</li>\n</ul>\n\n<h4 id=\"full-model\">Full Model</h4>\n<ul>\n  <li>최상단에 MODEL 명령어를 사용해 모델을 정의</li>\n  <li>name은 프로젝트 이름에서 Unique해야 함</li>\n  <li>kind : 모델의 종류를 의미\n    <ul>\n      <li><a href=\"https://sqlmesh.readthedocs.io/en/stable/reference/model_configuration/#model-kind-properties\">Model Kind properties</a>에서 확인할 수 있음</li>\n      <li>VIEW, FULL, Incremental Model이 존재\n        <ul>\n          <li>Incremental Model은 INCREMENTAL_BY_TIME_RANGE,  INCREMENTAL_BY_UNIQUE_KEY, INCREMENTAL_BY_PARTITION로 나뉨</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li>cron : 모델이 데이터를 처리하거나 새로고침을 할 때 사용할 일정. 자체 스케쥴러를 쓸 수도 있고, Airflow를 사용할 수도 있음</li>\n  <li>grain : 모델이 반환한 결과에서 행을 고유하게 식별할 수 있는 \b컬럼, 여러 컬럼의 조합도 가능함</li>\n  <li>audits : 모델이 평가\b된 후 실행될 오딧(여기선 audits/assert_positive_order_ids.sql 파일을 실행한다는 의미)</li>\n  <li>그 후 모델의 쿼리\n    <ul>\n      <li>만약 컬럼의 데이터를 형변환하고 싶다면 다음과 같이 정의하면 됨 <code class=\"language-plaintext highlighter-rouge\">item_id::TEXT</code></li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>MODEL (\n  name sqlmesh_example.full_model,\n  kind FULL,\n  cron '@daily',\n  grain item_id,\n  audits (assert_positive_order_ids),\n);\n\nSELECT\n  item_id,\n  COUNT(DISTINCT id) AS num_orders,\nFROM\n  sqlmesh_example.incremental_model\nGROUP BY item_id\n</code></pre></div></div>\n\n<ul>\n  <li>비교를 위해 dbt 모델 파일도 추가. 모델 정의 자체는 비슷하다고 볼 수 있지만, 명시적으로 MODEL을 정의하는 점이 차이</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n-- models/staging/stg_orders.sql\n{{ config(materialized='table') }}\n\nSELECT\n    order_id,\n    customer_id,\n    order_date,\n    status,\n    amount\nFROM raw_data.orders\nWHERE status IS NOT NULL\n\n</code></pre></div></div>\n\n<h4 id=\"incremental-model\">Incremental Model</h4>\n<ul>\n  <li>INCREMENTAL_BY_TIME_RANGE을 사용했으며, 시간 컬럼을 event_date로 지정</li>\n  <li>grain을 id, event_date로 설정함</li>\n  <li>SELECT 쿼리 하단을 보면 WHERE에 event_date BETWEEN @start_date AND @end_date가 있는데, 이렇게 증분 처리가 끝남</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>MODEL (\n  name sqlmesh_example.incremental_model,\n  kind INCREMENTAL_BY_TIME_RANGE (\n    time_column event_date\n  ),\n  start '2020-01-01',\n  cron '@daily',\n  grain (id, event_date)\n);\n\nSELECT\n  id,\n  item_id,\n  event_date,\nFROM\n  sqlmesh_example.seed_model\nWHERE\n  event_date BETWEEN @start_date AND @end_date\n</code></pre></div></div>\n\n<h4 id=\"seed-model\">Seed Model</h4>\n<ul>\n  <li><a href=\"https://sqlmesh.readthedocs.io/en/stable/concepts/models/seed_models/\">Seed Model Doc</a></li>\n  <li>Seed Model을 불러오고 싶은 경우 사용</li>\n  <li>컬럼의 이름과 타입을 지정할 수 있음</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>MODEL (\n  name sqlmesh_example.seed_model,\n  kind SEED (\n    path '../seeds/seed_data.csv'\n  ),\n  columns (\n    id INTEGER,\n    item_id INTEGER,\n    event_date DATE\n  ),\n  grain (id, event_date)\n);\n</code></pre></div></div>\n\n<h3 id=\"audit\">Audit</h3>\n<ul>\n  <li><a href=\"https://sqlmesh.readthedocs.io/en/stable/concepts/audits/\">Audit Document</a></li>\n  <li>assert_positive_order_ids.sql</li>\n  <li>최상단에 AUDIT을 명시하고, 이름 지정\n    <ul>\n      <li>FROM 절에 @this_model을 사용하는데, 이는 SQLMesh의 빌트인 매크로임. <a href=\"https://sqlmesh.readthedocs.io/en/stable/concepts/macros/macro_variables/#runtime-variables\">Runtime Variable</a>에서 확인할 수 있음</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>AUDIT (\n  name assert_positive_order_ids,\n);\n\nSELECT *\nFROM @this_model\nWHERE\n  item_id &lt; 0\n</code></pre></div></div>\n\n<ul>\n  <li>파라미터를 주입할 수도 있음. 특정 값이 초과되지 않는 경우를 확인하고 싶은 Audit</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>AUDIT (\n  name does_not_exceed_threshold\n);\nSELECT * FROM @this_model\nWHERE @column &gt;= @threshold;\n</code></pre></div></div>\n\n<ul>\n  <li>위 Audit을 실행하려면 MODEL에서 아래와 같이 정의해야 함</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>MODEL (\n  name sushi.items,\n  audits (\n    does_not_exceed_threshold(column := id, threshold := 1000),\n    does_not_exceed_threshold(column := price, threshold := 100)\n  )\n);\n</code></pre></div></div>\n\n<p><br /></p>\n\n<h2 id=\"sqlmesh-plan\">SQLMesh Plan</h2>\n<ul>\n  <li>SQLMesh에선 환경에 Plan을 만들고 적용하는 것이 핵심\n    <ul>\n      <li>모델의 새 버전을 생성하고 저장함</li>\n      <li>모델을 평가하고 실행</li>\n      <li>Plan의 Target 환경에 업데이트</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sqlmesh plan\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/u03687o84x75ar9bwxk5a/2025-03-15-2.31.29.png?rlkey=0brrpq06ph8j5jxrmfm5g5s4m&amp;raw=1\" /></p>\n\n<ul>\n  <li>Backfill Tables에 y를 입력하면 Backfill 작업을 수행함</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/i7v9vrqx1tgbjvdh9gzbu/2025-03-15-2.32.07.png?rlkey=vcot79o0xm7sx2w5o4sevc2lg&amp;raw=1\" /></p>\n\n<ul>\n  <li>폴더를 보면, <code class=\"language-plaintext highlighter-rouge\">db.db</code>와 logs가 추가된 것을 확인할 수 있음</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>.\n├── audits\n│   └── assert_positive_order_ids.sql\n├── config.yaml\n├── db.db\n├── logs\n│   ├── sqlmesh_2025_03_15_14_04_40.log\n│   └── sqlmesh_2025_03_15_14_31_00.log\n├── macros\n│   ├── __init__.py\n│   └── __pycache__\n│       └── __init__.cpython-310.pyc\n├── models\n│   ├── full_model.sql\n│   ├── incremental_model.sql\n│   └── seed_model.sql\n├── seeds\n│   └── seed_data.csv\n└── tests\n    └── test_full_model.yaml\n\n8 directories, 12 files\n</code></pre></div></div>\n\n<h3 id=\"duckdb에서-데이터-확인\">DuckDB에서 데이터 확인</h3>\n<ul>\n  <li>CLI에서 아래 명령어 실행</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>duckdb db.db\n</code></pre></div></div>\n\n<ul>\n  <li>DuckDB를 실행한 후, <code class=\"language-plaintext highlighter-rouge\">.tables</code>를 실행하면 테이블을 확인할 수 있음\n    <ul>\n      <li>full_model, incremental_model, seed_model : 위 MODEL에서 생성한 결과. 사용자가 사용할 땐 이걸 사용</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">sqlmesh_example__full_model__2278521865</code> : 이 형태도 물리적 테이블이나, 버전 관리를 위해 사용하는 내부적인 테이블</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>D .tables\n_auto_restatements\n_environment_statements\n_environments\n_intervals\n_plan_dags\n_snapshots\n_versions\nfull_model\nincremental_model\nseed_model\nsqlmesh_example__full_model__2278521865\nsqlmesh_example__incremental_model__1880815781\nsqlmesh_example__seed_model__2185867172\n</code></pre></div></div>\n\n<ul>\n  <li>아래 쿼리를 실행하면 데이터를 확인할 수 있음\n    <ul>\n      <li>sqlmesh_example는 모델의 스키마로 위에 모델 생성할 때 사용함</li>\n    </ul>\n  </li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT * FROM sqlmesh_example.full_model;\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/631klhqnmrkz1b76k0z51/2025-03-15-2.55.47.png?rlkey=bjmmitcz3k0umdhh9z3zqev1o&amp;raw=1\" /></p>\n\n<p><br /></p>\n\n<h2 id=\"모델-수정-및-dev에서-작업하기\">모델 수정 및 Dev에서 작업하기</h2>\n<h3 id=\"모델-수정\">모델 수정</h3>\n<ul>\n  <li>이제 Prod 환경을 채웠으니, SQL 모델 하나를 수정</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">models/incremental_model.sql</code>에 <code class=\"language-plaintext highlighter-rouge\">'z' AS new_column</code>을 추가함</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>MODEL (\n  name sqlmesh_example.incremental_model,\n  kind INCREMENTAL_BY_TIME_RANGE (\n    time_column event_date\n  ),\n  start '2020-01-01',\n  cron '@daily',\n  grain (id, event_date)\n);\n\nSELECT\n  id,\n  item_id,\n  'z' AS new_column, -- Added column\n  event_date,\nFROM\n  sqlmesh_example.seed_model\nWHERE\n  event_date BETWEEN @start_date AND @end_date\n</code></pre></div></div>\n\n<h3 id=\"dev-환경-생성-및-backfill\">Dev 환경 생성 및 Backfill</h3>\n<ul>\n  <li>\n    <p>dev 환경을 생성</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  sqlmesh plan dev\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>생성하면 변경된 모델이 incremental_model이라고 나오며, 변경된 부분이 나옴</p>\n  </li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/6nboiggtrso8a4a92ojbo/2025-03-15-2.58.37.png?rlkey=q5nh6pdqlvf4e4ntyuqwwotoq&amp;raw=1\" /></p>\n\n<ul>\n  <li>backfill을 해주면, dev 환경에 테이블이 생성됨</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/vzm9vl0pnbw5ljyg0ocrv/2025-03-15-2.59.31.png?rlkey=omxj47ruu9dktt1ubu3x52yi3&amp;raw=1\" /></p>\n\n<h3 id=\"데이터-확인\">데이터 확인</h3>\n<ul>\n  <li>위에서 했던 것처럼 <code class=\"language-plaintext highlighter-rouge\">duckdb db.db</code>로 DuckDB에 접근한 후, <code class=\"language-plaintext highlighter-rouge\">.tables</code>로 테이블 확인</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>D .tables\n_auto_restatements\n_environment_statements\n_environments\n_intervals\n_plan_dags\n_snapshots\n_versions\nfull_model\nfull_model\nincremental_model\nincremental_model\nseed_model\nsqlmesh_example__full_model__2278521865\nsqlmesh_example__full_model__2278521865__dev # 새로 추가됨\nsqlmesh_example__incremental_model__1880815781\nsqlmesh_example__incremental_model__772980299 # 새로 추가됨\nsqlmesh_example__seed_model__2185867172\n</code></pre></div></div>\n\n<ul>\n  <li>full_model은 변경된 것이 없어서 기존 모델에 __dev 추가(새 환경)</li>\n  <li>반면 incremental_model은 변경된 것이 있어서 해시가 변경됨</li>\n  <li>새롭게 추가된 incremental_model 데이터 확인</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>select * from sqlmesh_example__dev.incremental_model;\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/tac407xsc4wf5ke0nvdaq/2025-03-15-3.09.01.png?rlkey=kg0ptb2apusja0hnhq952rtgv&amp;raw=1\" /></p>\n\n<p><br /></p>\n\n<h2 id=\"dev에서-작업한-내용-prod에-적용\">Dev에서 작업한 내용 Prod에 적용</h2>\n<ul>\n  <li>sqlmesh plan 명령어를 사용해서 Dev -&gt; Prod로 적용</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/kki50b5i03g42n2vipfxz/2025-03-15-3.10.38.png?rlkey=k4sepqwqezl27t1rg5jezs5qf&amp;raw=1\" /></p>\n\n<ul>\n  <li>DuckDB에 접속하지 않고, sqlmesh 명령어로 데이터를 가지고 올 수도 있음</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sqlmesh fetchdf \"select * from sqlmesh_example.incremental_model\"\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/8bp34sp12f2qrun8cxsem/2025-03-15-3.11.30.png?rlkey=7doiklkp4rd9ltho60674sahy&amp;raw=1\" /></p>\n\n<hr />\n\n<p><br />\n<br /></p>\n\n<h1 id=\"sqlmesh-web-ui\">SQLMesh Web UI</h1>\n<ul>\n  <li>아래 명령어를 통해 Web UI를 실행</li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sqlmesh ui\n</code></pre></div></div>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/oowf5b0g225043zi604pg/2025-03-15-3.16.20.png?rlkey=2qk9en2ts2puvy1r2a2zkqkpc&amp;raw=1\" /></p>\n\n<ul>\n  <li>위에서 작업한 incremental_model.sql을 클릭하니 리니지를 보여줌</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/x5hx52xb4wlfjewd09dxo/2025-03-15-3.17.26.png?rlkey=s5590mewriq657eaazcrn6sky&amp;raw=1\" /></p>\n\n<ul>\n  <li>데이터를 쿼리해서 확인할 수도 있음</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/ic33l6cnqh6qted8zohe4/2025-03-15-3.20.17.png?rlkey=9t5zxw301ygg5hk4jkvt22cjl&amp;raw=1\" /></p>\n\n<ul>\n  <li>Models 폴더를 클릭하면 실행된 모델과 모델의 메타데이터, 리니지를 볼 수 있음</li>\n</ul>\n\n<p><img src=\"https://www.dropbox.com/scl/fi/od2z9ly8hfeqn8qnz0mcj/2025-03-15-3.22.57.png?rlkey=vpi5k7j77nfzzdtygzwifkng0&amp;raw=1\" /></p>\n\n<ul>\n  <li>UI에서도 plan을 실행하고 합칠 수 있음\n    <ul>\n      <li><a href=\"https://sqlmesh.readthedocs.io/en/latest/guides/ui\">UI 공식 문서</a>, <a href=\"https://sqlmesh.readthedocs.io/en/stable/quickstart/ui\">퀵스타트 문서</a>에 실행 흐름이 잘 나와있음</li>\n    </ul>\n  </li>\n  <li>그 외에 기능은 아직 확인이 어려움. Oauth 등</li>\n</ul>\n\n<p><br /></p>\n\n<h1 id=\"sqlmesh-사용-후기\">SQLMesh 사용 후기</h1>\n<ul>\n  <li>SQLMesh를 사용해보면 dbt보다 러닝커브가 낮음</li>\n  <li>그러나 지금 SQLMesh롤 바로 도입해야 할까? 하면 고민되는 부분이 있음\n    <ul>\n      <li>생태계가 아직 dbt에 비해 작고, 1점대도 아니라 계속 변경될 것으로 예상</li>\n      <li>Airflow와 Prefect의 관계를 보는 것 같기도 함</li>\n    </ul>\n  </li>\n  <li>그럼에도 불구하고 T 영역에서 거의 독점했던 dbt의 경쟁자가 있다는 점에서 SQLMesh를 응원하고 싶음. 사용성은 괜찮았음</li>\n  <li>dbt가 SDF labs를 인수한 후, 여러 통합 작업을 진행할 것으로 예상되는데 그 과정에서 SQLMesh가 제시하는 SQLMesh의 장점을 무력화할 수 있을 것 같음</li>\n  <li>레딧에서 논의되는 내용을 보면 도움이 됨\n    <ul>\n      <li><a href=\"https://www.reddit.com/r/dataengineering/comments/1hdp8t0/who_else_here_uses_sqlmesh_whats_your_take_on_it/\">레딧1</a></li>\n      <li><a href=\"https://www.reddit.com/r/dataengineering/comments/1j5bttx/sqlmesh_versus_dbt_core_seems_like_a_nobrainer/\">레딧2</a></li>\n      <li><a href=\"https://www.reddit.com/r/dataengineering/comments/1i17fyc/dbt_labs_acquires_sdf_labs/\">레딧3</a></li>\n    </ul>\n  </li>\n</ul>\n\n<hr />\n\n<p><br />\n<br /></p>\n\n<h1 id=\"레퍼런스-및-읽으면-좋은-자료\">레퍼런스 및 읽으면 좋은 자료</h1>\n<ul>\n  <li><a href=\"https://sqlmesh.com/\">SQL 홈페이지</a></li>\n  <li><a href=\"https://sqlmesh.readthedocs.io/en/stable/\">SQLMesh Document</a></li>\n  <li><a href=\"https://www.linkedin.com/in/sungwonchung1/\">Sung Won Chung님의 링크드인</a> : Tobiko의 Solution Architect로 근무하고 계신데 튜토리얼 내용을 링크드인 글로 공유해주심</li>\n  <li><a href=\"https://tobikodata.com/blog.html\">Tobiko 블로그</a></li>\n  <li><a href=\"https://sqlmesh.readthedocs.io/en/stable/comparisons/#dbt\">dbt와 SQLMesh의 기능 비교</a> : 각 라이브러리가 제공하는 범위를 비교해줌\n    <ul>\n      <li><a href=\"https://sqlmesh.readthedocs.io/en/stable/faq/faq/\">FAQ</a> 문서도 보는 것을 추천함. dbt와 SQLMesh의 용어가 살짝 다름</li>\n      <li>dbt materialization : SQLMesh의 model kinds에 정의</li>\n      <li>dbt seeds : SQLMesh model kind의 seed</li>\n      <li>dbt test : SQLMesh audits</li>\n      <li>dbt build : sqlmesh run</li>\n    </ul>\n  </li>\n  <li><a href=\"https://sqlmesh.readthedocs.io/en/stable/integrations/github/\">SQLMesh + GitHub Action 통합</a></li>\n  <li><a href=\"https://blog.det.life/real-time-medication-intake-monitoring-with-motherduck-and-sqlmesh-48df50ace985\">SQLMesh를 사용한 데이터 파이프라인</a></li>\n</ul>\n\n<p><br /><br /></p>\n\n<ul>\n  <li>글 작성하는데 걸린 시간 : 3시간 30분\n    <ul>\n      <li>하고자 하는 이야기, 개요 정리 : 13분</li>\n      <li>초안 글 작성 : 3시간 7분</li>\n      <li>클로드와 셀프 글 피드백 : 10분</li>\n    </ul>\n  </li>\n</ul>\n",
        "contentSnippet": "이 글은 SQLMesh 사용법에 대해 작성한 글입니다\n예상 독자\n    \nSQLMesh가 궁금하신 분\nSQLMesh가 dbt 대비 어떤 것이 다른지 궁금하신 분\n이 글을 보시기 전에 dbt, DuckDB에 대해 알고 계시면 좋을 수 있는데, 과거에 작성한 글을 추천\n        \ndbt 사용법과 기본 개념\nDuckDB 사용법\n키워드 : SQLMesh 사용법, SQLMesh vs dbt\nSQLMesh란?\nSQLMesh GitHub\nTobiko의 오픈소스\n    \nSQLMesh, SQLGlot\nSQLMesh는 Transformation, Testing, Collaboration을 위한 DataOps 솔루션\n    \n데이터 Transformation 영역에서 dbt가 제일 유명한데, dbt에서 개선하면 좋은 점들을 개선해서 나오는 도구\nSQLMesh 공식 문서에 보면 dbt와 다른 점에서도 상세히 공유하고 있음\nTerraform에서 영감을 받은 부분이 있다고 함. 그래서 plan 명령어가 있음\n2025년 3월 15일 기준 v0.165.0\n\n\nSQLMesh의 장점\nSQLMesh의 Concept은 dbt와 유사하며, dbt와 차이점으로 나오는 장점들을 정리\n1) 간단한 SQL로 모델 생성 가능\n데이터 분석가 직무에 계신 분들이 처음 dbt를 사용하면 Jinja, YAML에 어려움을 겪는데, SQLMesh는 간단한 SQL로 정의할 수 있음\n2) 증분 로직 처리\ndbt에선 증분 로직을 is_incremental 등을 사용해서 만들어야 하는데, SQLMesh는 증분 로직을 쉽게 만들어줌\ndbt의 증분 로직\n    \n처음에 dbt를 학습할 때 제일 어려운 부분\ndbt는 state를 추적하지 않아서 이렇게 구현해야 함\n날짜 경계를 찾기 위해 수동으로 매크로를 지정하는 작업에서 오류가 나기 쉬움\n\n    \n  -- dbt incremental\n  SELECT *\n  FROM {{ ref(raw.events) }} e\n  JOIN {{ ref(raw.event_dims) }} d\n    ON e.id = d.id\n  -- must specify the is_incremental flag because this predicate will fail if the model has never run before\n  {% if is_incremental() %}\n      -- this filter dynamically scans the current model to find the date boundary\n      AND d.ds >= (SELECT MAX(ds) FROM {{ this }})\n  {% endif %}\n  {% if is_incremental() %}\n    WHERE e.ds >= (SELECT MAX(ds) FROM {{ this }})\n  {% endif %}\n    \n\n    \nSQLMesh는 날짜 범위를 알아서 추적해 간단하게 쓸 수 있음\n\n-- SQLMesh incremental\nSELECT *\nFROM raw.events e\nJOIN raw.event_dims d\n  -- date ranges are handled automatically by SQLMesh\n  ON e.id = d.id AND d.ds BETWEEN @start_ds AND @end_ds\nWHERE d.ds BETWEEN @start_ds AND @end_ds\n\n\n3) Data Gap 감지\ndbt에서 증분 모델을 구현할 때는 MAX(date)로 최근 데이터를 확인하고, 그 이후부터 적재하도록 함\n    \n이렇게 할 경우 과거에 누락된 데이터를 놓치게 되며, 데이터 파이프라인 관점에서 유지보수를 더 많이 해야 함\nSQLMesh는 모델이 실행된 날짜 간격을 저장해서 누락된 날짜를 정확히 알 수 있음\n\n  Expected dates: 2022-01-01, 2022-01-02, 2022-01-03\n  Missing past data: ?, 2022-01-02, 2022-01-03\n  Data gap: 2022-01-01, ?, 2022-01-03\n\n    \n4) 환경 격리\n데이터 파이프라인도 Prod/Dev 환경을 격리해야 할 수 있음. 규모가 커질수록 환경의 필요성이 생기지만, 환경을 구축하는 것은 고민이 많이 됨\n    \n환경을 구축하기 위해선 실제 데이터를 Dev에 그대로 제공해야 하는데, 이는 데이터 저장 비용이 드는 일이라 고민이 됨(데이터 저장 비용이 2배가 되는 상황)\ndbt는 환경마다 별도의 테이블에 데이터를 물리적으로 복제함\nSQLMesh는 VIEW를 사용해서 데이터를 물리적으로 저장하지 않아 비용이 들지 않음\n    \n환경마다 테이블 이름에 접두사를 붙여서 환경을 구분함\n5) 스키마 변경 자동화\n스키마가 변경되면 자동으로 감지하고 필요한 마이그레이션을 생성함\ndbt는 개발자가 직접 스키마 변경을 관리해야 함\n6) 오픈소스 UI 제공\ndbt는 Paid UI가 제공되며, 오픈소스 중에 찾으려면 lightdash를 사용해야 함\nSQLMesh는 오픈소스 UI가 존재해서 쉽게 사용할 수 있음(그러나 디자인은 약간 아쉬움)\n\n\n\nSQLMesh 실습\n작업 흐름\n파이썬 가상 환경 / 라이브러리 설치\n    \n파이썬 가상환경 설정\nSQLMesh 설치\n프로젝트 생성\n    \nProd 환경 설정\nModel 수정\nDev에서 작업\nProd로 통합\n\n파이썬 가상 환경 / 라이브러리 설치\n가상 환경 설정\n\npython -m venv .venv\nsource .venv/bin/activate\n\n\nSQLMesh 설치\n    \nWeb UI도 사용할 예정이라, 같이 설치\n\npip3 install \"sqlmesh[web]\"\n\n\nDuckdb 설치 : Local에서 Duckdb를 사용할 예정\n\npip3 install duckdb\n\n\n\n프로젝트 생성\n폴더 생성(sqlmesh-example)\n\nmkdir sqlmesh-example\ncd sqlmesh-example\n\n\nDuckDB 환경에서  init\n\nsqlmesh init duckdb\n\n\n다음과 같은 폴더, 파일들이 생성됨\n\n├── audits\n│   └── assert_positive_order_ids.sql\n├── config.yaml\n├── macros\n│   └── __init__.py\n├── models\n│   ├── full_model.sql\n│   ├── incremental_model.sql\n│   └── seed_model.sql\n├── seeds\n│   └── seed_data.csv\n└── tests\n    └── test_full_model.yaml\n\n6 directories, 8 files\n\n\nconfig.yaml\n프로젝트 디렉토리에 생성됨\n어떤 엔진을 사용할지, 게이트웨이 커넥션 등이 저장됨\n\ngateways:\n  duckdb:\n    connection:\n      # For more information on configuring the connection to your execution engine, visit:\n      # https://sqlmesh.readthedocs.io/en/stable/reference/configuration/#connections\n      # https://sqlmesh.readthedocs.io/en/stable/integrations/engines/duckdb/#connection-options\n      type: duckdb\n      database: db.db\n      # concurrent_tasks: 1\n      # register_comments: True\n      # pre_ping: False\n      # pretty_sql: False\n      # catalogs:\n      # extensions:\n      # connector_config:\n      # token:\n\n\ndefault_gateway: duckdb\n\nmodel_defaults:\n  dialect: duckdb\n  start: 2025-03-14\n\n\n생성된 폴더의 특징\nconfig.yaml : 프로젝트 설정 파일\nmodels : SQL/Python 모델 파일\n    \n현재 full_model.sql, incremental_model.sql, seed_model.sql이 저장됨\nseeds : CSV 같은 고정된 데이터셋\naudits : 모델의 출력을 검증할 때 사용\n    \n목적: 모델 출력의 데이터 품질을 검증\n실행 시점: 모델 실행 후 매번 자동으로 실행. 계획(plan)을 적용할 때마다 SQLMesh는 자동으로 실행\n기본 동작: 감사가 실패하면 sqlmesh plan을 중단해 잠재적으로 유효하지 않은 데이터가 다운스트림으로 전파되는 것을 방지\ntests : 모델의 로직의 정확성 검증\n    \n목적: 모델의 로직을 검증하고 예상된 출력과 일치하는지 확인\n실행 시점: 개발 중, 또는 CI/CD 과정\n작동 방식: 사전 정의된 입력으로 모델의 로직을 평가하고 출력을 테스트에서 제공된 예상 결과와 비교\n소프트웨어 개발의 단위 테스트(unit testing)와 유사\nmacros : 매크로 저장. SQLMesh 매크로와 Jinja 매크로로 나뉨\nModel 생성\nModel Doc\n위에 init하면서 생긴 Model 살펴보기\nFull Model\n최상단에 MODEL 명령어를 사용해 모델을 정의\nname은 프로젝트 이름에서 Unique해야 함\nkind : 모델의 종류를 의미\n    \nModel Kind properties에서 확인할 수 있음\nVIEW, FULL, Incremental Model이 존재\n        \nIncremental Model은 INCREMENTAL_BY_TIME_RANGE,  INCREMENTAL_BY_UNIQUE_KEY, INCREMENTAL_BY_PARTITION로 나뉨\ncron : 모델이 데이터를 처리하거나 새로고침을 할 때 사용할 일정. 자체 스케쥴러를 쓸 수도 있고, Airflow를 사용할 수도 있음\ngrain : 모델이 반환한 결과에서 행을 고유하게 식별할 수 있는 \b컬럼, 여러 컬럼의 조합도 가능함\naudits : 모델이 평가\b된 후 실행될 오딧(여기선 audits/assert_positive_order_ids.sql 파일을 실행한다는 의미)\n그 후 모델의 쿼리\n    \n만약 컬럼의 데이터를 형변환하고 싶다면 다음과 같이 정의하면 됨 item_id::TEXT\n\nMODEL (\n  name sqlmesh_example.full_model,\n  kind FULL,\n  cron '@daily',\n  grain item_id,\n  audits (assert_positive_order_ids),\n);\n\nSELECT\n  item_id,\n  COUNT(DISTINCT id) AS num_orders,\nFROM\n  sqlmesh_example.incremental_model\nGROUP BY item_id\n\n\n비교를 위해 dbt 모델 파일도 추가. 모델 정의 자체는 비슷하다고 볼 수 있지만, 명시적으로 MODEL을 정의하는 점이 차이\n\n\n-- models/staging/stg_orders.sql\n{{ config(materialized='table') }}\n\nSELECT\n    order_id,\n    customer_id,\n    order_date,\n    status,\n    amount\nFROM raw_data.orders\nWHERE status IS NOT NULL\n\n\n\nIncremental Model\nINCREMENTAL_BY_TIME_RANGE을 사용했으며, 시간 컬럼을 event_date로 지정\ngrain을 id, event_date로 설정함\nSELECT 쿼리 하단을 보면 WHERE에 event_date BETWEEN @start_date AND @end_date가 있는데, 이렇게 증분 처리가 끝남\n\nMODEL (\n  name sqlmesh_example.incremental_model,\n  kind INCREMENTAL_BY_TIME_RANGE (\n    time_column event_date\n  ),\n  start '2020-01-01',\n  cron '@daily',\n  grain (id, event_date)\n);\n\nSELECT\n  id,\n  item_id,\n  event_date,\nFROM\n  sqlmesh_example.seed_model\nWHERE\n  event_date BETWEEN @start_date AND @end_date\n\n\nSeed Model\nSeed Model Doc\nSeed Model을 불러오고 싶은 경우 사용\n컬럼의 이름과 타입을 지정할 수 있음\n\nMODEL (\n  name sqlmesh_example.seed_model,\n  kind SEED (\n    path '../seeds/seed_data.csv'\n  ),\n  columns (\n    id INTEGER,\n    item_id INTEGER,\n    event_date DATE\n  ),\n  grain (id, event_date)\n);\n\n\nAudit\nAudit Document\nassert_positive_order_ids.sql\n최상단에 AUDIT을 명시하고, 이름 지정\n    \nFROM 절에 @this_model을 사용하는데, 이는 SQLMesh의 빌트인 매크로임. Runtime Variable에서 확인할 수 있음\n\nAUDIT (\n  name assert_positive_order_ids,\n);\n\nSELECT *\nFROM @this_model\nWHERE\n  item_id < 0\n\n\n파라미터를 주입할 수도 있음. 특정 값이 초과되지 않는 경우를 확인하고 싶은 Audit\n\nAUDIT (\n  name does_not_exceed_threshold\n);\nSELECT * FROM @this_model\nWHERE @column >= @threshold;\n\n\n위 Audit을 실행하려면 MODEL에서 아래와 같이 정의해야 함\n\nMODEL (\n  name sushi.items,\n  audits (\n    does_not_exceed_threshold(column := id, threshold := 1000),\n    does_not_exceed_threshold(column := price, threshold := 100)\n  )\n);\n\n\n\nSQLMesh Plan\nSQLMesh에선 환경에 Plan을 만들고 적용하는 것이 핵심\n    \n모델의 새 버전을 생성하고 저장함\n모델을 평가하고 실행\nPlan의 Target 환경에 업데이트\n\nsqlmesh plan\n\n\n\nBackfill Tables에 y를 입력하면 Backfill 작업을 수행함\n\n폴더를 보면, db.db와 logs가 추가된 것을 확인할 수 있음\n\n.\n├── audits\n│   └── assert_positive_order_ids.sql\n├── config.yaml\n├── db.db\n├── logs\n│   ├── sqlmesh_2025_03_15_14_04_40.log\n│   └── sqlmesh_2025_03_15_14_31_00.log\n├── macros\n│   ├── __init__.py\n│   └── __pycache__\n│       └── __init__.cpython-310.pyc\n├── models\n│   ├── full_model.sql\n│   ├── incremental_model.sql\n│   └── seed_model.sql\n├── seeds\n│   └── seed_data.csv\n└── tests\n    └── test_full_model.yaml\n\n8 directories, 12 files\n\n\nDuckDB에서 데이터 확인\nCLI에서 아래 명령어 실행\n\nduckdb db.db\n\n\nDuckDB를 실행한 후, .tables를 실행하면 테이블을 확인할 수 있음\n    \nfull_model, incremental_model, seed_model : 위 MODEL에서 생성한 결과. 사용자가 사용할 땐 이걸 사용\nsqlmesh_example__full_model__2278521865 : 이 형태도 물리적 테이블이나, 버전 관리를 위해 사용하는 내부적인 테이블\n\nD .tables\n_auto_restatements\n_environment_statements\n_environments\n_intervals\n_plan_dags\n_snapshots\n_versions\nfull_model\nincremental_model\nseed_model\nsqlmesh_example__full_model__2278521865\nsqlmesh_example__incremental_model__1880815781\nsqlmesh_example__seed_model__2185867172\n\n\n아래 쿼리를 실행하면 데이터를 확인할 수 있음\n    \nsqlmesh_example는 모델의 스키마로 위에 모델 생성할 때 사용함\n\nSELECT * FROM sqlmesh_example.full_model;\n\n\n\n\n모델 수정 및 Dev에서 작업하기\n모델 수정\n이제 Prod 환경을 채웠으니, SQL 모델 하나를 수정\nmodels/incremental_model.sql에 'z' AS new_column을 추가함\n\nMODEL (\n  name sqlmesh_example.incremental_model,\n  kind INCREMENTAL_BY_TIME_RANGE (\n    time_column event_date\n  ),\n  start '2020-01-01',\n  cron '@daily',\n  grain (id, event_date)\n);\n\nSELECT\n  id,\n  item_id,\n  'z' AS new_column, -- Added column\n  event_date,\nFROM\n  sqlmesh_example.seed_model\nWHERE\n  event_date BETWEEN @start_date AND @end_date\n\n\nDev 환경 생성 및 Backfill\ndev 환경을 생성\n\n  sqlmesh plan dev\n\n    \n생성하면 변경된 모델이 incremental_model이라고 나오며, 변경된 부분이 나옴\n\nbackfill을 해주면, dev 환경에 테이블이 생성됨\n\n데이터 확인\n위에서 했던 것처럼 duckdb db.db로 DuckDB에 접근한 후, .tables로 테이블 확인\n\nD .tables\n_auto_restatements\n_environment_statements\n_environments\n_intervals\n_plan_dags\n_snapshots\n_versions\nfull_model\nfull_model\nincremental_model\nincremental_model\nseed_model\nsqlmesh_example__full_model__2278521865\nsqlmesh_example__full_model__2278521865__dev # 새로 추가됨\nsqlmesh_example__incremental_model__1880815781\nsqlmesh_example__incremental_model__772980299 # 새로 추가됨\nsqlmesh_example__seed_model__2185867172\n\n\nfull_model은 변경된 것이 없어서 기존 모델에 __dev 추가(새 환경)\n반면 incremental_model은 변경된 것이 있어서 해시가 변경됨\n새롭게 추가된 incremental_model 데이터 확인\n\nselect * from sqlmesh_example__dev.incremental_model;\n\n\n\n\nDev에서 작업한 내용 Prod에 적용\nsqlmesh plan 명령어를 사용해서 Dev -> Prod로 적용\n\nDuckDB에 접속하지 않고, sqlmesh 명령어로 데이터를 가지고 올 수도 있음\n\nsqlmesh fetchdf \"select * from sqlmesh_example.incremental_model\"\n\n\n\n\n\nSQLMesh Web UI\n아래 명령어를 통해 Web UI를 실행\n\nsqlmesh ui\n\n\n\n위에서 작업한 incremental_model.sql을 클릭하니 리니지를 보여줌\n\n데이터를 쿼리해서 확인할 수도 있음\n\nModels 폴더를 클릭하면 실행된 모델과 모델의 메타데이터, 리니지를 볼 수 있음\n\nUI에서도 plan을 실행하고 합칠 수 있음\n    \nUI 공식 문서, 퀵스타트 문서에 실행 흐름이 잘 나와있음\n그 외에 기능은 아직 확인이 어려움. Oauth 등\n\nSQLMesh 사용 후기\nSQLMesh를 사용해보면 dbt보다 러닝커브가 낮음\n그러나 지금 SQLMesh롤 바로 도입해야 할까? 하면 고민되는 부분이 있음\n    \n생태계가 아직 dbt에 비해 작고, 1점대도 아니라 계속 변경될 것으로 예상\nAirflow와 Prefect의 관계를 보는 것 같기도 함\n그럼에도 불구하고 T 영역에서 거의 독점했던 dbt의 경쟁자가 있다는 점에서 SQLMesh를 응원하고 싶음. 사용성은 괜찮았음\ndbt가 SDF labs를 인수한 후, 여러 통합 작업을 진행할 것으로 예상되는데 그 과정에서 SQLMesh가 제시하는 SQLMesh의 장점을 무력화할 수 있을 것 같음\n레딧에서 논의되는 내용을 보면 도움이 됨\n    \n레딧1\n레딧2\n레딧3\n\n\n레퍼런스 및 읽으면 좋은 자료\nSQL 홈페이지\nSQLMesh Document\nSung Won Chung님의 링크드인 : Tobiko의 Solution Architect로 근무하고 계신데 튜토리얼 내용을 링크드인 글로 공유해주심\nTobiko 블로그\ndbt와 SQLMesh의 기능 비교 : 각 라이브러리가 제공하는 범위를 비교해줌\n    \nFAQ 문서도 보는 것을 추천함. dbt와 SQLMesh의 용어가 살짝 다름\ndbt materialization : SQLMesh의 model kinds에 정의\ndbt seeds : SQLMesh model kind의 seed\ndbt test : SQLMesh audits\ndbt build : sqlmesh run\nSQLMesh + GitHub Action 통합\nSQLMesh를 사용한 데이터 파이프라인\n\n\n\n\n  \n글 작성하는데 걸린 시간 : 3시간 30분\n    \n하고자 하는 이야기, 개요 정리 : 13분\n초안 글 작성 : 3시간 7분\n클로드와 셀프 글 피드백 : 10분",
        "guid": "https://zzsza.github.io/data-engineering/2025/03/15/sqlmesh-intro/",
        "categories": [
          "sqlmesh",
          "data-engineering"
        ],
        "isoDate": "2025-03-15T00:00:00.000Z"
      }
    ]
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "이건개발",
        "title": "유니티 2D 애니메이션 / 스프타라이트 말고 다른 방식",
        "link": "http://serverdown.tistory.com/1219",
        "pubDate": "Fri, 21 Mar 2025 03:56:54 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1219#entry1219comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=-7r9fZSmZJw&amp;t=443s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=-7r9fZSmZJw&amp;t=443s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=-7r9fZSmZJw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cQ2EHI/hyYvrjAiHe/Glv3PIp5b3DOlhyqqipT3K/img.jpg?width=1280&amp;height=720&amp;face=702_348_834_492,https://scrap.kakaocdn.net/dn/7tliX/hyYvqrp22J/1wKQ9WVGzamsjaGXMIkiE1/img.jpg?width=1280&amp;height=720&amp;face=702_348_834_492\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Unity 2022 Basic 2D Animation\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/-7r9fZSmZJw\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">캐릭터가 맹한게 귀엽군요</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=-7r9fZSmZJw&t=443s\n\n\n\n캐릭터가 맹한게 귀엽군요",
        "guid": "http://serverdown.tistory.com/1219",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-20T18:56:54.000Z"
      },
      {
        "creator": "이건개발",
        "title": "Kling AI 로 뽑은 영상 02",
        "link": "http://serverdown.tistory.com/1218",
        "pubDate": "Fri, 21 Mar 2025 01:41:26 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1218#entry1218comment",
        "content": "<p data-ke-size=\"size16\">이전글 : <a href=\"https://serverdown.tistory.com/1213\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://serverdown.tistory.com/1213</a></p>\n<p data-ke-size=\"size16\">지난번에 반대로 회전했었고</p>\n<p data-ke-size=\"size16\">화전 반향을 지정해봐야 안먹힌다는 사실을 알았습니다.</p>\n<p data-ke-size=\"size16\">그래서 천천히 움직이라고 추가했고 <br />영상이 짧으니 천천히 움직이면 당연히 조금밖에 못움직입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">프롬프트</h2>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">Move your head slowly.<br />Blink your eyes.<br />Move your mouth gently.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">천천히 고개를 움직이고<br />눈을 깝박이고<br />입을 부드럽게 움직여라</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이렇게 적은것입니다.</span></p>\n<h2 data-ke-size=\"size26\"><span style=\"text-align: start;\">결과물</span></h2>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/453818638\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/oVTrr/hyYufjC1ht/nlojj7YizW0XytSi186LjK/img.jpg?width=1080&amp;height=1080&amp;face=339_492_565_738,https://scrap.kakaocdn.net/dn/ceiSmG/hyYrTIEfPi/n51Ps5MuFUwJPfyqePF4J0/img.jpg?width=1080&amp;height=1080&amp;face=339_492_565_738\" data-video-width=\"860\" data-video-height=\"860\" data-video-origin-width=\"860\" data-video-origin-height=\"860\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"'퇴근후서버다운 이건개발'에서 업로드한 동영상\" data-video-play-service=\"daum_tistory\" data-original-url=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/453818638?service=daum_tistory\" width=\"860\" height=\"860\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">눈을 깜박임이 과하군요 횟수 까지 지정해줘야겠군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "이전글 : https://serverdown.tistory.com/1213\n지난번에 반대로 회전했었고\n화전 반향을 지정해봐야 안먹힌다는 사실을 알았습니다.\n그래서 천천히 움직이라고 추가했고 \n영상이 짧으니 천천히 움직이면 당연히 조금밖에 못움직입니다.\n \n프롬프트\nMove your head slowly.\nBlink your eyes.\nMove your mouth gently.\n천천히 고개를 움직이고\n눈을 깝박이고\n입을 부드럽게 움직여라\n이렇게 적은것입니다.\n결과물\n \n\n\n\n눈을 깜박임이 과하군요 횟수 까지 지정해줘야겠군요",
        "guid": "http://serverdown.tistory.com/1218",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-03-20T16:41:26.000Z"
      },
      {
        "creator": "이건개발",
        "title": "vercel 처음써보고 분노한 개발자 사용기 / 수동배포 vercel deploy",
        "link": "http://serverdown.tistory.com/1217",
        "pubDate": "Thu, 20 Mar 2025 23:32:53 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1217#entry1217comment",
        "content": "<p data-ke-size=\"size16\">vercel 에서 express 나 웹소켓 서버를 공짜로 띄워볼 수 있다고 해서 달갔다.</p>\n<p data-ke-size=\"size16\">그리곤 6시간째 배포가 잘안되서 해보고 있다.</p>\n<p data-ke-size=\"size16\">그래서 분노해버린 개발자의 사용기 이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">vercel 에서는 next.js 로 배포를 할 수 있는데 next.js 는 프론트엔드 백엔드가 다 통합되어있다고 들었다.&nbsp;<br />(처음 써본다.)</p>\n<p data-ke-size=\"size16\">어차피 웹소켓으로 실시간 통신만 공짜로 할 수 있으면 장땡이였다.</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=E8xaV6fiTaA\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=E8xaV6fiTaA</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=E8xaV6fiTaA\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dalw8a/hyYub2wgQI/i52KKnQKs7ZoiLAEYd8mQ1/img.jpg?width=1280&amp;height=720&amp;face=830_138_1210_552,https://scrap.kakaocdn.net/dn/b1Gbvg/hyYupGvJHy/1ekRbhA5maKpn0fDiaHvv1/img.jpg?width=1280&amp;height=720&amp;face=830_138_1210_552\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"How To Deploy GitHub Project on Vercel (Step By Step)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/E8xaV6fiTaA\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이 영상을 보면 가입부터 github 연결 배포 까지 끝내고 있다.</p>\n<p data-ke-size=\"size16\">내용안에는 vercel 은 git 에 push 만하면 최신 빌드를 하는 배포 시스템이 있다고 했다.</p>\n<p data-ke-size=\"size16\">클라우드 플레이어도 그런식이라 적응이 쉬울줄 알았다.</p>\n<p data-ke-size=\"size16\">그러나 ...</p>\n<p data-ke-size=\"size16\">자동빌드가 엄청 띄엄띄엄 되는거 같다</p>\n<p data-ke-size=\"size16\">거의 1시간 후에 다시보니 \"바꼈있더라\" 느낌</p>\n<p data-ke-size=\"size16\">즉시 되는건줄 알고 \"왜 안되지를 외치며\" 몇시간을 낭비했다.<br />진전된건 없었고 누웠다 일어나 다시 와보니 배포되어있었다.<br />너무나 허무했다.</p>\n<p data-ke-size=\"size16\">결국 알아낸것은 명령어를 통해 수동 배포가 가능하다는 것을 알았다.<br />관리페이지에는 배포 버튼이 없기 때문에 페이지를 보는데 너무 시간을 많이 써서<br />지금은 녹초가 되어버렸다. 아무것도 하기 싫다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">명령어로 배포하기</h2>\n<p data-ke-size=\"size16\">문서: <a href=\"https://vercel.com/docs/cli/link\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://vercel.com/docs/cli/link</a></p>\n<figure id=\"og_1742480845437\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"vercel link\" data-og-description=\"Learn how to link a local directory to a Vercel Project using the vercel link CLI command.\" data-og-host=\"vercel.com\" data-og-source-url=\"https://vercel.com/docs/cli/link\" data-og-url=\"https://vercel.com/docs/cli/link\" data-og-image=\"https://scrap.kakaocdn.net/dn/kRqGi/hyYrZhM5IA/cP0zwqkgGzW45KOm89rm61/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628,https://scrap.kakaocdn.net/dn/Fh1nh/hyYurxzVJ2/FuQWj0VHR48mWnrWoShq61/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628\"><a href=\"https://vercel.com/docs/cli/link\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://vercel.com/docs/cli/link\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/kRqGi/hyYrZhM5IA/cP0zwqkgGzW45KOm89rm61/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628,https://scrap.kakaocdn.net/dn/Fh1nh/hyYurxzVJ2/FuQWj0VHR48mWnrWoShq61/img.png?width=1200&amp;height=628&amp;face=0_0_1200_628');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">vercel link</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Learn how to link a local directory to a Vercel Project using the vercel link CLI command.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">vercel.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">firebase 처럼 vercel deploy 하면 된다. 그전에</p>\n<p data-ke-size=\"size16\">vercel login<br />소유자임을 확인해야하니 로그인 해야겠죠</p>\n<p data-ke-size=\"size16\">vercel link<br />이미 받아둔 소스폴더를 vercel project 와 연결시켜주어야한다.</p>\n<p data-ke-size=\"size16\">이 작업이 끝나면 배포할 수 있다.</p>\n<p data-ke-size=\"size16\">vercel deploy<br />빌드하는동안 프리뷰 페이지를 볼 수 있는데<br />로그인한 브라우저에서 보여진다. 특이하고 불편하다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size18\">이제 rest api 서버와 웹소켓이 가능한지 확인해야겠다.<br />하지만 오늘은 아무것도 하기 싫다.</p>\n<h2 data-ke-size=\"size26\"><span style=\"font-family: GungSeo, serif;\">정말 시간아깝다.</span></h2>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">vercel dashboard 로 가면 최근 배포된것에 대한 내용이 나온다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"705\" data-origin-height=\"574\"><span data-url=\"https://blog.kakaocdn.net/dn/n7DF5/btsMQcAnzJM/66nl7nEj5bzjvHJ2CRG4T0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/n7DF5/btsMQcAnzJM/66nl7nEj5bzjvHJ2CRG4T0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/n7DF5/btsMQcAnzJM/66nl7nEj5bzjvHJ2CRG4T0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fn7DF5%2FbtsMQcAnzJM%2F66nl7nEj5bzjvHJ2CRG4T0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"705\" height=\"574\" data-origin-width=\"705\" data-origin-height=\"574\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">자기전에 v4 를 push 했다.<br />내일 보면 배포되어있으려나 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">웹소켓 서버 함께 쓸 수 없다고 합니다. (충격)</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"862\" data-origin-height=\"164\"><span data-url=\"https://blog.kakaocdn.net/dn/b5DcTW/btsMRJcwSiN/MAJROwdTh4mKnI2gT43Kkk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/b5DcTW/btsMRJcwSiN/MAJROwdTh4mKnI2gT43Kkk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/b5DcTW/btsMRJcwSiN/MAJROwdTh4mKnI2gT43Kkk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb5DcTW%2FbtsMRJcwSiN%2FMAJROwdTh4mKnI2gT43Kkk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"862\" height=\"164\" data-origin-width=\"862\" data-origin-height=\"164\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">문서 링크: <a href=\"https://socket.io/how-to/use-with-nextjs\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://socket.io/how-to/use-with-nextjs</a></p>\n<p data-ke-size=\"size16\">실해군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">rest api 가 가능한지 확인해야겠군요</p>\n<p data-ke-size=\"size16\">그런데 firebase 쓰면되는데 ... 웹소켓 ㅠㅠ</p>\n<p data-ke-size=\"size16\">하루종인 시간들여서 안된다는걸 배웠군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">(작성중)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "vercel 에서 express 나 웹소켓 서버를 공짜로 띄워볼 수 있다고 해서 달갔다.\n그리곤 6시간째 배포가 잘안되서 해보고 있다.\n그래서 분노해버린 개발자의 사용기 이다.\n \nvercel 에서는 next.js 로 배포를 할 수 있는데 next.js 는 프론트엔드 백엔드가 다 통합되어있다고 들었다. \n(처음 써본다.)\n어차피 웹소켓으로 실시간 통신만 공짜로 할 수 있으면 장땡이였다.\n영상: https://www.youtube.com/watch?v=E8xaV6fiTaA\n\n\n\n \n이 영상을 보면 가입부터 github 연결 배포 까지 끝내고 있다.\n내용안에는 vercel 은 git 에 push 만하면 최신 빌드를 하는 배포 시스템이 있다고 했다.\n클라우드 플레이어도 그런식이라 적응이 쉬울줄 알았다.\n그러나 ...\n자동빌드가 엄청 띄엄띄엄 되는거 같다\n거의 1시간 후에 다시보니 \"바꼈있더라\" 느낌\n즉시 되는건줄 알고 \"왜 안되지를 외치며\" 몇시간을 낭비했다.\n진전된건 없었고 누웠다 일어나 다시 와보니 배포되어있었다.\n너무나 허무했다.\n결국 알아낸것은 명령어를 통해 수동 배포가 가능하다는 것을 알았다.\n관리페이지에는 배포 버튼이 없기 때문에 페이지를 보는데 너무 시간을 많이 써서\n지금은 녹초가 되어버렸다. 아무것도 하기 싫다.\n \n명령어로 배포하기\n문서: https://vercel.com/docs/cli/link\n\n \nvercel link\nLearn how to link a local directory to a Vercel Project using the vercel link CLI command.\nvercel.com\n\n \nfirebase 처럼 vercel deploy 하면 된다. 그전에\nvercel login\n소유자임을 확인해야하니 로그인 해야겠죠\nvercel link\n이미 받아둔 소스폴더를 vercel project 와 연결시켜주어야한다.\n이 작업이 끝나면 배포할 수 있다.\nvercel deploy\n빌드하는동안 프리뷰 페이지를 볼 수 있는데\n로그인한 브라우저에서 보여진다. 특이하고 불편하다.\n \n이제 rest api 서버와 웹소켓이 가능한지 확인해야겠다.\n하지만 오늘은 아무것도 하기 싫다.\n정말 시간아깝다.\n \n \nvercel dashboard 로 가면 최근 배포된것에 대한 내용이 나온다.\n\n\n자기전에 v4 를 push 했다.\n내일 보면 배포되어있으려나 ...\n \n웹소켓 서버 함께 쓸 수 없다고 합니다. (충격)\n\n\n문서 링크: https://socket.io/how-to/use-with-nextjs\n실해군요\n \nrest api 가 가능한지 확인해야겠군요\n그런데 firebase 쓰면되는데 ... 웹소켓 ㅠㅠ\n하루종인 시간들여서 안된다는걸 배웠군요\n \n(작성중)",
        "guid": "http://serverdown.tistory.com/1217",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-20T14:32:53.000Z"
      },
      {
        "creator": "이건개발",
        "title": "(작업중﻿) C# async await 사용햅자 /Unity",
        "link": "http://serverdown.tistory.com/1215",
        "pubDate": "Thu, 20 Mar 2025 12:36:22 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1215#entry1215comment",
        "content": "<p data-ke-size=\"size16\">이런 코딩은 준비물이 필요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Sleep 같이 쉬었다 가는 함수</p>\n<p data-ke-size=\"size16\">awit Task.Delay(시간)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">인자값으로 async 함수 받기</p>\n<p data-ke-size=\"size16\">아직 모름</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">현재 앱 초기화 코드에서</p>\n<p data-ke-size=\"size16\">애널리틱스_초기화();</p>\n<p data-ke-size=\"size16\">광고_초기화(delegate {</p>\n<p data-ke-size=\"size16\">&nbsp; &nbsp; // 광고 초기화 완료</p>\n<p data-ke-size=\"size16\">&nbsp; &nbsp; 광고_표시();</p>\n<p data-ke-size=\"size16\">});</p>\n<p data-ke-size=\"size16\">이런식인데 광고 표시할때 애널리틱스 로그를 남기고 싶다면</p>\n<p data-ke-size=\"size16\">애널리틱스 초기화가 완료되기 전에 광고가 먼저 초기화 될 수 있어</p>\n<p data-ke-size=\"size16\">타이밍상 완벽하지 않다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그래서 async 이전엔 이런식으로 고쳤다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">애널리틱스_초기화(delegate {</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; // 애널리틱스 초기화 완료 후</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; <span style=\"text-align: start;\">광고_초기화(delegate {</span> </span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\">&nbsp; &nbsp; &nbsp; &nbsp; // 광고 초기화 완료</span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\">&nbsp; &nbsp; &nbsp; &nbsp; 애널리틱스_로그남기기(\"광고 초기화완료\");</span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\"><span style=\"text-align: start;\">&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"text-align: start;\">광고_표시();</span> </span></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; });</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">});</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이런식으로 짜게 되는데 이러면 괄호 안에 괄호가 중첩으로 들어간다 더많은 모듈이 들어가면 더 깊어질 것이다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">그래서 아래의 방식으로 개선할 예정이다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">async 모듈_초기화() {</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 애널리틱스_초기화();</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 광고_초기화();</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; <span style=\"text-align: start;\">애널리틱스_로그남기기(\"광고 초기화완료\");</span> </span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 광고_표시();</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 또다른모듈_초기화();</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">&nbsp; &nbsp; await 또또다른모듈_초기화();</span> <span style=\"text-align: start;\"></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">}</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이런식으로 괄호를 펼수 있다.</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">(작업중)</span></p>",
        "contentSnippet": "이런 코딩은 준비물이 필요합니다.\n \nSleep 같이 쉬었다 가는 함수\nawit Task.Delay(시간)\n \n인자값으로 async 함수 받기\n아직 모름\n \n현재 앱 초기화 코드에서\n애널리틱스_초기화();\n광고_초기화(delegate {\n    // 광고 초기화 완료\n    광고_표시();\n});\n이런식인데 광고 표시할때 애널리틱스 로그를 남기고 싶다면\n애널리틱스 초기화가 완료되기 전에 광고가 먼저 초기화 될 수 있어\n타이밍상 완벽하지 않다.\n \n그래서 async 이전엔 이런식으로 고쳤다.\n애널리틱스_초기화(delegate {\n    // 애널리틱스 초기화 완료 후\n    광고_초기화(delegate { \n        // 광고 초기화 완료\n        애널리틱스_로그남기기(\"광고 초기화완료\");\n        광고_표시(); \n    });\n});\n \n이런식으로 짜게 되는데 이러면 괄호 안에 괄호가 중첩으로 들어간다 더많은 모듈이 들어가면 더 깊어질 것이다.\n그래서 아래의 방식으로 개선할 예정이다.\nasync 모듈_초기화() {\n    await 애널리틱스_초기화();\n \n    await 광고_초기화();\n \n    애널리틱스_로그남기기(\"광고 초기화완료\"); \n    await 광고_표시();\n \n    await 또다른모듈_초기화();\n    await 또또다른모듈_초기화(); \n}\n이런식으로 괄호를 펼수 있다.\n(작업중)",
        "guid": "http://serverdown.tistory.com/1215",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-20T03:36:22.000Z"
      },
      {
        "creator": "이건개발",
        "title": "유니티 애셋 / Block Blast / 데모게임 / 유",
        "link": "http://serverdown.tistory.com/1214",
        "pubDate": "Wed, 19 Mar 2025 10:58:49 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1214#entry1214comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=LYECrh_MYOw&amp;t=55s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=LYECrh_MYOw&amp;t=55s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=LYECrh_MYOw\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bokl7x/hyYvtanz77/ULlx8dToyGLLnYqZqtg63k/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/yyJC8/hyYrPTzm4O/rOyH5oBRuhRzk5aAPdQHEk/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"Blast Puzzle | Template Demonstration\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/LYECrh_MYOw\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">유니티 애셋 스토어 링크: <a href=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175</a></p>\n<figure id=\"og_1742349411381\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Blast Puzzle | Template + Editor | 패키지 | Unity Asset Store\" data-og-description=\"Use Blast Puzzle | Template + Editor from Watermelon Games to elevate your next project. Find this &amp; more 패키지 and templates on the Unity Asset Store.\" data-og-host=\"assetstore.unity.com\" data-og-source-url=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\" data-og-url=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\" data-og-image=\"https://scrap.kakaocdn.net/dn/bCy27N/hyYqPs0SVL/9q99pBE3Ku1PwHeokz9Ink/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/0r2ge/hyYp8GaV1z/9UUE9y4Cek211xa8MMZva0/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630\"><a href=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bCy27N/hyYqPs0SVL/9q99pBE3Ku1PwHeokz9Ink/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/0r2ge/hyYp8GaV1z/9UUE9y4Cek211xa8MMZva0/img.jpg?width=1200&amp;height=630&amp;face=0_0_1200_630');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Blast Puzzle | Template + Editor | 패키지 | Unity Asset Store</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Use Blast Puzzle | Template + Editor from Watermelon Games to elevate your next project. Find this &amp; more 패키지 and templates on the Unity Asset Store.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">assetstore.unity.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">비싸긴한데 카피게임 올리기엔 쉽겠군요</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">거의 비슷하군요</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">기억해 둬야겠습니다.</p>\n<p style=\"background-color: #000000; color: #000000; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=LYECrh_MYOw&t=55s\n\n\n\n \n유니티 애셋 스토어 링크: https://assetstore.unity.com/packages/templates/packs/blast-puzzle-template-editor-313175\n\n \nBlast Puzzle | Template + Editor | 패키지 | Unity Asset Store\nUse Blast Puzzle | Template + Editor from Watermelon Games to elevate your next project. Find this & more 패키지 and templates on the Unity Asset Store.\nassetstore.unity.com\n\n \n비싸긴한데 카피게임 올리기엔 쉽겠군요\n거의 비슷하군요\n기억해 둬야겠습니다.",
        "guid": "http://serverdown.tistory.com/1214",
        "categories": [
          "프로그래밍/유니티 에셋 리뷰"
        ],
        "isoDate": "2025-03-19T01:58:49.000Z"
      },
      {
        "creator": "이건개발",
        "title": "Kling AI 로 뽑은 영상 01",
        "link": "http://serverdown.tistory.com/1213",
        "pubDate": "Wed, 19 Mar 2025 01:48:41 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1213#entry1213comment",
        "content": "<p data-ke-size=\"size16\">이미지로 영상을 뽑아보았습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"266\" data-origin-height=\"163\"><span data-url=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/HMJwl/btsMNN726qN/fZkVsGnDZ7taRjB9rdzAkk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FHMJwl%2FbtsMNN726qN%2FfZkVsGnDZ7taRjB9rdzAkk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"266\" height=\"163\" data-origin-width=\"266\" data-origin-height=\"163\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">시작 종료 프레임을 넣고 고개를 살짝 돌리가고 했는데 ....</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/453768877\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bfjl2u/hyYrW6aD8E/68P7xnMko2hWMNBDALEcxk/img.jpg?width=1080&amp;height=1080&amp;face=0_0_1080_1080,https://scrap.kakaocdn.net/dn/bmWOU3/hyYrWSC8c4/LGMuvm6EmVvmpUtFsswjcK/img.jpg?width=1080&amp;height=1080&amp;face=0_0_1080_1080\" data-video-width=\"860\" data-video-height=\"860\" data-video-origin-width=\"860\" data-video-origin-height=\"860\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/453768877?service=daum_tistory\" width=\"860\" height=\"860\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">반대로 돌려버리네요 ㄷㄷㄷ</p>\n<p data-ke-size=\"size16\">반대로 돌리라고 해서 하나 더 뽑아봤습니다.</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/453768883\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/DjZUh/hyYr3K1HBF/KGa8MHEd5P6kfmun1EcAT0/img.jpg?width=1080&amp;height=1080&amp;face=0_0_1080_1080,https://scrap.kakaocdn.net/dn/crbWcE/hyYqbJDjH9/E2B1weJo3xruI7lJK7MWbK/img.jpg?width=1080&amp;height=1080&amp;face=0_0_1080_1080\" data-video-width=\"860\" data-video-height=\"860\" data-video-origin-width=\"860\" data-video-origin-height=\"860\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/453768883?service=daum_tistory\" width=\"860\" height=\"860\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">안고쳐지네요</p>\n<p data-ke-size=\"size16\">그래도 마지막에 웃는 타이밍이 좀 나아졌습니다.</p>\n<p data-ke-size=\"size16\">수동으로 좀 잘랐습니다.</p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"kakaotv\" data-video-url=\"https://tv.kakao.com/v/453768906\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/6j732/hyYvofNDgg/IMCwFvIk9yITYzOuJljFgK/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512,https://scrap.kakaocdn.net/dn/0meB6/hyYqNPsnaA/9Zx8v8ewQUNcQzOpM6U2VK/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512\" data-video-width=\"512\" data-video-height=\"512\" data-video-origin-width=\"512\" data-video-origin-height=\"512\" data-ke-mobilestyle=\"widthContent\" data-video-play-service=\"daum_tistory\" data-original-url=\"\" data-video-title=\"\"><iframe src=\"https://play-tv.kakao.com/embed/player/cliplink/453768906?service=daum_tistory\" width=\"512\" height=\"512\" frameborder=\"0\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">자연스럽게 ㅋ</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">만든시간이 아까워서 쇼츠에 올렸습니다.</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/shorts/V5gwZjCiEMI\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/shorts/V5gwZjCiEMI</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/shorts/V5gwZjCiEMI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/T0fRT/hyYvu1oiEb/kOIzEeu9hs6HqquxV89bh0/img.jpg?width=480&amp;height=480&amp;face=0_0_480_480,https://scrap.kakaocdn.net/dn/blfIia/hyYuiUx6Fm/MQDCuEcZeayeIo9rZKIwo0/img.jpg?width=480&amp;height=480&amp;face=0_0_480_480\" data-video-width=\"480\" data-video-height=\"480\" data-video-origin-width=\"480\" data-video-origin-height=\"480\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"KlingAI 로 영상을 뽑아보았다\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/V5gwZjCiEMI\" width=\"480\" height=\"480\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "이미지로 영상을 뽑아보았습니다.\n\n\n시작 종료 프레임을 넣고 고개를 살짝 돌리가고 했는데 ....\n \n\n\n\n반대로 돌려버리네요 ㄷㄷㄷ\n반대로 돌리라고 해서 하나 더 뽑아봤습니다.\n\n\n\n안고쳐지네요\n그래도 마지막에 웃는 타이밍이 좀 나아졌습니다.\n수동으로 좀 잘랐습니다.\n\n\n\n \n자연스럽게 ㅋ\n \n만든시간이 아까워서 쇼츠에 올렸습니다.\n영상: https://www.youtube.com/shorts/V5gwZjCiEMI",
        "guid": "http://serverdown.tistory.com/1213",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-03-18T16:48:41.000Z"
      },
      {
        "creator": "이건개발",
        "title": "파이어 베이스 functions 로컬 실행 및 자동 실행 / Typescript",
        "link": "http://serverdown.tistory.com/1212",
        "pubDate": "Tue, 18 Mar 2025 21:21:50 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1212#entry1212comment",
        "content": "<p data-ke-size=\"size16\">typescript 로 작업하는데 저장하니까 새로고침이 안되는군요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">노드몬 설치합니다. <br />(필요 없을꺼 같군요)<br />npm install nodemon -g&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">package.json 에 script 부분을 수정해야합니다.</p>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #ffffff;\">&nbsp; </span><span style=\"color: #d4d4d4;\">\"scripts\"</span><span style=\"color: #ffffff;\">: {</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"build\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"tsc\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"build:watch\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"tsc --watch\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"serve2\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"npm run build &amp;&amp; firebase emulators:start --only functions\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"serve\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"npm run build &amp;&amp; --watch | firebase emulators:start --only functions\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"shell\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"npm run build &amp;&amp; firebase functions:shell\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"start\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"npm run shell\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"deploy\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"firebase deploy --only functions\"</span><span style=\"color: #ffffff;\">,</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; &nbsp; </span><span style=\"color: #d4d4d4;\">\"logs\"</span><span style=\"color: #ffffff;\">: </span><span style=\"color: #ce9178;\">\"firebase functions:log\"</span></div>\n<div><span style=\"color: #ffffff;\">&nbsp; },</span></div>\n</div>\n<p data-ke-size=\"size16\">serve2 가 기존 명령 보관해둔거구요<br />serve 가 새로 넣은 명령입니다. --watch 가 들어간걸 알 수 있습니다.</p>\n<p data-ke-size=\"size16\"><br /><span style=\"text-align: start;\">테스트 서버 실행<br /><span style=\"text-align: start;\">firebase emulators:start</span> </span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다시 실행 해주긴하는데<br />반응이 겁나 느립니다.</p>\n<p data-ke-size=\"size16\">이런 환경에서 개발하다니 놀랍습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "typescript 로 작업하는데 저장하니까 새로고침이 안되는군요\n \n노드몬 설치합니다. \n(필요 없을꺼 같군요)\nnpm install nodemon -g \n \npackage.json 에 script 부분을 수정해야합니다.\n  \"scripts\": {\n    \"build\": \"tsc\",\n    \"build:watch\": \"tsc --watch\",\n    \"serve2\": \"npm run build && firebase emulators:start --only functions\",\n    \"serve\": \"npm run build && --watch | firebase emulators:start --only functions\",\n    \"shell\": \"npm run build && firebase functions:shell\",\n    \"start\": \"npm run shell\",\n    \"deploy\": \"firebase deploy --only functions\",\n    \"logs\": \"firebase functions:log\"\n  },\nserve2 가 기존 명령 보관해둔거구요\nserve 가 새로 넣은 명령입니다. --watch 가 들어간걸 알 수 있습니다.\n테스트 서버 실행\nfirebase emulators:start \n \n다시 실행 해주긴하는데\n반응이 겁나 느립니다.\n이런 환경에서 개발하다니 놀랍습니다.",
        "guid": "http://serverdown.tistory.com/1212",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-18T12:21:50.000Z"
      },
      {
        "creator": "이건개발",
        "title": "2D 케릭터 에니메이션 1달러에 판매하는 곳 발견 / zegley.itch.io",
        "link": "http://serverdown.tistory.com/1211",
        "pubDate": "Tue, 18 Mar 2025 17:24:57 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1211#entry1211comment",
        "content": "<p data-ke-size=\"size16\">링크: <a href=\"https://zegley.itch.io/strawhat\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://zegley.itch.io/strawhat</a></p>\n<figure id=\"og_1742286052206\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Straw Hat by ZeggyGames\" data-og-description=\"2D Katana and Dagger wielding, pixel-art character\" data-og-host=\"zegley.itch.io\" data-og-source-url=\"https://zegley.itch.io/strawhat\" data-og-url=\"https://zegley.itch.io/strawhat\" data-og-image=\"https://scrap.kakaocdn.net/dn/bVn4Cx/hyYqaRpoAf/kXiaNssyMbyFKdHEQaNif0/img.gif?width=630&amp;height=500&amp;face=0_0_630_500,https://scrap.kakaocdn.net/dn/s3DKr/hyYrYbL0Yn/rThAdgSNYssVpPctjs5LQk/img.png?width=508&amp;height=254&amp;face=0_0_508_254\"><a href=\"https://zegley.itch.io/strawhat\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://zegley.itch.io/strawhat\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bVn4Cx/hyYqaRpoAf/kXiaNssyMbyFKdHEQaNif0/img.gif?width=630&amp;height=500&amp;face=0_0_630_500,https://scrap.kakaocdn.net/dn/s3DKr/hyYrYbL0Yn/rThAdgSNYssVpPctjs5LQk/img.png?width=508&amp;height=254&amp;face=0_0_508_254');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Straw Hat by ZeggyGames</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">2D Katana and Dagger wielding, pixel-art character</p>\n<p class=\"og-host\" data-ke-size=\"size16\">zegley.itch.io</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">좋네요 1달러에 팝니다.</p>\n<p data-ke-size=\"size16\">그런데&nbsp;몇개 없구요 ...</p>\n<p data-ke-size=\"size16\"><a href=\"https://zegley.itch.io/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://zegley.itch.io/</a></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"475\" data-origin-height=\"391\"><span data-url=\"https://blog.kakaocdn.net/dn/dIFI4C/btsMPntjvTY/BjiJgBBEnJDWYPrMvxv6dK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dIFI4C/btsMPntjvTY/BjiJgBBEnJDWYPrMvxv6dK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dIFI4C/btsMPntjvTY/BjiJgBBEnJDWYPrMvxv6dK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdIFI4C%2FbtsMPntjvTY%2FBjiJgBBEnJDWYPrMvxv6dK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"475\" height=\"391\" data-origin-width=\"475\" data-origin-height=\"391\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">아쉽</p>",
        "contentSnippet": "링크: https://zegley.itch.io/strawhat\n\n \nStraw Hat by ZeggyGames\n2D Katana and Dagger wielding, pixel-art character\nzegley.itch.io\n\n좋네요 1달러에 팝니다.\n그런데 몇개 없구요 ...\nhttps://zegley.itch.io/\n\n\n아쉽",
        "guid": "http://serverdown.tistory.com/1211",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-18T08:24:57.000Z"
      },
      {
        "creator": "이건개발",
        "title": "코딩 AI 한태 시키고 놀고먹어라 / AI 바비으 코딩 시대",
        "link": "http://serverdown.tistory.com/1210",
        "pubDate": "Tue, 18 Mar 2025 16:04:21 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1210#entry1210comment",
        "content": "<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=wC-ob3dG-Yk\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=wC-ob3dG-Yk</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=wC-ob3dG-Yk\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/B7AFD/hyYuomRP8R/GMUYoZMGY2fsG7rImOVOPk/img.jpg?width=1280&amp;height=720&amp;face=578_116_706_256\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"UI만 만드는 클론코딩(X) 프롬프트 한줄로 DB, 로그인, 파일 업로드까지 만드는 바이브 코딩!\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/wC-ob3dG-Yk\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">AI 에게 시켜서 출시 까지 가는 법을 익혀야합니다.</p>\n<p data-ke-size=\"size16\">사람이 짜다보면 개발 속도가 나오지 않습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">ai&nbsp;vibe&nbsp;coding</p>\n<p data-ke-size=\"size16\">ai 한태 시키고 놀고 먹으로는 뜻이 되었다고 하네요</p>\n<p data-ke-size=\"size16\">유튜브에 외국 영상은 꽤 많군요</p>\n<p data-ke-size=\"size16\">이것이 문화가 될 것 같습니다.</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=wC-ob3dG-Yk\n\n\n\nAI 에게 시켜서 출시 까지 가는 법을 익혀야합니다.\n사람이 짜다보면 개발 속도가 나오지 않습니다.\n \nai vibe coding\nai 한태 시키고 놀고 먹으로는 뜻이 되었다고 하네요\n유튜브에 외국 영상은 꽤 많군요\n이것이 문화가 될 것 같습니다.",
        "guid": "http://serverdown.tistory.com/1210",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-18T07:04:21.000Z"
      },
      {
        "creator": "이건개발",
        "title": "플레이 스토어 홈페이지 주소 변경 / 개인정보처리방침 수정하기 / Play Store",
        "link": "http://serverdown.tistory.com/1209",
        "pubDate": "Tue, 18 Mar 2025 15:06:43 +0900",
        "author": "이건개발",
        "comments": "http://serverdown.tistory.com/1209#entry1209comment",
        "content": "<p data-ke-size=\"size16\">홈페이지 주소가 바껴서 수저해야하는데 총 1군데 + 앱마다 2개가 있습니다.</p>\n<p data-ke-size=\"size16\">메뉴가 숨어있기 때문에 기록을 남겨둡니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">개발자 계정 - 웹 사이트</h2>\n<p data-ke-size=\"size16\">이거는 계정당 1개 입니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"319\" data-origin-height=\"465\"><span data-url=\"https://blog.kakaocdn.net/dn/dGZvZz/btsMOwEkkBu/MgPyVNs6kQmtaHkqkHD13k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dGZvZz/btsMOwEkkBu/MgPyVNs6kQmtaHkqkHD13k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dGZvZz/btsMOwEkkBu/MgPyVNs6kQmtaHkqkHD13k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdGZvZz%2FbtsMOwEkkBu%2FMgPyVNs6kQmtaHkqkHD13k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"319\" height=\"465\" data-origin-width=\"319\" data-origin-height=\"465\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">내 정보</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"818\" data-origin-height=\"242\"><span data-url=\"https://blog.kakaocdn.net/dn/Mg71l/btsMNPj7LcD/ksDNi1spcPYA3ojGZUmkV1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Mg71l/btsMNPj7LcD/ksDNi1spcPYA3ojGZUmkV1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Mg71l/btsMNPj7LcD/ksDNi1spcPYA3ojGZUmkV1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FMg71l%2FbtsMNPj7LcD%2FksDNi1spcPYA3ojGZUmkV1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"818\" height=\"242\" data-origin-width=\"818\" data-origin-height=\"242\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">웹 사이트</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"754\" data-origin-height=\"197\"><span data-url=\"https://blog.kakaocdn.net/dn/WAHa9/btsMM4Cbq5H/xvyoIiAMNkryUFYAuwK6ck/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/WAHa9/btsMM4Cbq5H/xvyoIiAMNkryUFYAuwK6ck/img.png\"><img src=\"https://blog.kakaocdn.net/dn/WAHa9/btsMM4Cbq5H/xvyoIiAMNkryUFYAuwK6ck/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FWAHa9%2FbtsMM4Cbq5H%2FxvyoIiAMNkryUFYAuwK6ck%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"754\" height=\"197\" data-origin-width=\"754\" data-origin-height=\"197\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이 주소는 소유주인지 확인이 필요합니다.</p>\n<p data-ke-size=\"size16\">Google Search Console 에서 처리해야합니다.</p>\n<p data-ke-size=\"size16\">설명 문서는 버튼으로 알려줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">앱마다 - 웹페이지</h2>\n<p data-ke-size=\"size16\">사용자 늘리기 (와 상식으로 착을 수 없는 메뉴)</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"296\" data-origin-height=\"594\"><span data-url=\"https://blog.kakaocdn.net/dn/G2iq9/btsMOeD2LPO/fTM1MzSucMikanbgUiif2k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/G2iq9/btsMOeD2LPO/fTM1MzSucMikanbgUiif2k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/G2iq9/btsMOeD2LPO/fTM1MzSucMikanbgUiif2k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FG2iq9%2FbtsMOeD2LPO%2FfTM1MzSucMikanbgUiif2k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"296\" height=\"594\" data-origin-width=\"296\" data-origin-height=\"594\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">게속 메뉴 타고 들어갑니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"293\" data-origin-height=\"290\"><span data-url=\"https://blog.kakaocdn.net/dn/ve7Sl/btsMO5M2Ol5/6vV4sg0E1qzZx1GLfJUxq1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/ve7Sl/btsMO5M2Ol5/6vV4sg0E1qzZx1GLfJUxq1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/ve7Sl/btsMO5M2Ol5/6vV4sg0E1qzZx1GLfJUxq1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fve7Sl%2FbtsMO5M2Ol5%2F6vV4sg0E1qzZx1GLfJUxq1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"293\" height=\"290\" data-origin-width=\"293\" data-origin-height=\"290\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"830\" data-origin-height=\"389\"><span data-url=\"https://blog.kakaocdn.net/dn/cC0YDx/btsMNzhut5x/uj7LYjYNG7lal43KTN5M51/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cC0YDx/btsMNzhut5x/uj7LYjYNG7lal43KTN5M51/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cC0YDx/btsMNzhut5x/uj7LYjYNG7lal43KTN5M51/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcC0YDx%2FbtsMNzhut5x%2Fuj7LYjYNG7lal43KTN5M51%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"830\" height=\"389\" data-origin-width=\"830\" data-origin-height=\"389\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">수정 버튼 누르면 웹사이트 바꿀 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">앱마다 -&gt; 개인정보보호방침</h2>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"288\" data-origin-height=\"370\"><span data-url=\"https://blog.kakaocdn.net/dn/OWUkg/btsMOtnjcXs/cH5KadhXUYBn7bZG6mhiI0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/OWUkg/btsMOtnjcXs/cH5KadhXUYBn7bZG6mhiI0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/OWUkg/btsMOtnjcXs/cH5KadhXUYBn7bZG6mhiI0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FOWUkg%2FbtsMOtnjcXs%2FcH5KadhXUYBn7bZG6mhiI0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"288\" height=\"370\" data-origin-width=\"288\" data-origin-height=\"370\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">메뉴 타고 메뉴 타고 ...</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"274\" data-origin-height=\"199\"><span data-url=\"https://blog.kakaocdn.net/dn/bJLeBo/btsMO0E4qao/U3SQjHFJLtkG6btiG7QKy0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bJLeBo/btsMO0E4qao/U3SQjHFJLtkG6btiG7QKy0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bJLeBo/btsMO0E4qao/U3SQjHFJLtkG6btiG7QKy0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbJLeBo%2FbtsMO0E4qao%2FU3SQjHFJLtkG6btiG7QKy0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"274\" height=\"199\" data-origin-width=\"274\" data-origin-height=\"199\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">앱 커텐츠</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"412\" data-origin-height=\"247\"><span data-url=\"https://blog.kakaocdn.net/dn/Fxft4/btsMPnNrKDW/O77MPnElwfVeolsxiW3HPk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Fxft4/btsMPnNrKDW/O77MPnElwfVeolsxiW3HPk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Fxft4/btsMPnNrKDW/O77MPnElwfVeolsxiW3HPk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FFxft4%2FbtsMPnNrKDW%2FO77MPnElwfVeolsxiW3HPk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"412\" height=\"247\" data-origin-width=\"412\" data-origin-height=\"247\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">조치됨&nbsp;<br />(기존에 입력한 걸 고쳐야되서 이런가 봅니다.)</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"777\" data-origin-height=\"268\"><span data-url=\"https://blog.kakaocdn.net/dn/Q0UKo/btsMOECgdGY/4c2ObjIOX2pY3jh4PMORyK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/Q0UKo/btsMOECgdGY/4c2ObjIOX2pY3jh4PMORyK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/Q0UKo/btsMOECgdGY/4c2ObjIOX2pY3jh4PMORyK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FQ0UKo%2FbtsMOECgdGY%2F4c2ObjIOX2pY3jh4PMORyK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"777\" height=\"268\" data-origin-width=\"777\" data-origin-height=\"268\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">관리 누르면 URL 을 고칠 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">바뀌는 시점은 엄청 오래걸리는거 같습니다.</p>\n<p data-ke-size=\"size16\">개발자 웹사이트는 1주째 반응이 없네요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "홈페이지 주소가 바껴서 수저해야하는데 총 1군데 + 앱마다 2개가 있습니다.\n메뉴가 숨어있기 때문에 기록을 남겨둡니다.\n \n개발자 계정 - 웹 사이트\n이거는 계정당 1개 입니다.\n\n\n내 정보\n\n\n웹 사이트\n\n\n이 주소는 소유주인지 확인이 필요합니다.\nGoogle Search Console 에서 처리해야합니다.\n설명 문서는 버튼으로 알려줍니다.\n \n앱마다 - 웹페이지\n사용자 늘리기 (와 상식으로 착을 수 없는 메뉴)\n\n\n게속 메뉴 타고 들어갑니다.\n\n\n\n수정 버튼 누르면 웹사이트 바꿀 수 있습니다.\n \n앱마다 -> 개인정보보호방침\n\n\n메뉴 타고 메뉴 타고 ...\n\n\n앱 커텐츠\n\n\n조치됨 \n(기존에 입력한 걸 고쳐야되서 이런가 봅니다.)\n\n\n관리 누르면 URL 을 고칠 수 있습니다.\n \n바뀌는 시점은 엄청 오래걸리는거 같습니다.\n개발자 웹사이트는 1주째 반응이 없네요",
        "guid": "http://serverdown.tistory.com/1209",
        "categories": [
          "프로그래밍/개발메모"
        ],
        "isoDate": "2025-03-18T06:06:43.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "유저 리서치",
        "link": "https://jojoldu.tistory.com/821",
        "pubDate": "Sun, 16 Mar 2025 00:27:04 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/821#entry821comment",
        "content": "<p data-ke-size=\"size16\">요즘 <a href=\"https://product.kyobobook.co.kr/detail/S000000696109\">하드씽</a>이란 책을 아주 재밌게 보고 있다.<br />밑줄 칠 내용이 너무 많지만, 고객 니즈란 측면에서 저자인 벤 호로위츠의 경험과 생각이 와닿았다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">제품 개발 프로세스가 기존 고객들이 제시한 수많은 요구사항에 짓눌려 갈피를 잡지 못하고 있었다.<br />...<br />결국 제품 개발 전략에서 핵심이 되는 포인트는 이것이었다.<br />바로 <b>최고의 제품을 구현할 방법을 찾아내는 일은 고객이 아니라 개발자의 몫이라는 것</b>.<br /><b>고객은 기존 제품에 대한 경험에 비춰봤을 때 자신이 원한다고 생각하는 것만 알고 있을 뿐이다</b>.<br />혁신을 추구하는 개발자는 가능한 모든 요소를 고려할 수는 있지만 종종 <b>'고객 요구에 부합된다고' 여겨지는 것과 반대 방향으로 나가야 한다</b>.<br />결국 혁신에는 지식과 기술과 용기가 모두 필요하다.<br />그리고 때로는 회사의 설립자만이 데이터를 무시할 용기를 발휘할 수 있다.<br />우리에겐 시간이 별로 없었고, 따라서 내가 나서야 했다.<br />\"기존 고객들의 요구사항은 신경 쓸 필요 없습니다.<br />제품을 혁신해 재창조하는 것이, 그래서 우리가 경쟁에서 이기는 것이 더 중요합니다\"</p>\n</blockquote>\n<p data-ke-size=\"size16\">이 내용과 유사하게 <a href=\"https://hbr.org/2012/04/the-real-leadership-lessons-of-steve-jobs\">하버드 비즈니스 리뷰에 실린 Walter Isaacson의 The Real Leadership Lessons of Steve Jobs</a> 에도 있었다.<br />Walter Isaacson 이 경험한 스티브 잡스의 리더십에 대한 이야기인데, 그 중 아래와 같은 내용이 있다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">[Don&rsquo;t Be a Slave To Focus Groups]<br />잡스가 최초의 매킨토시팀과 함께한 첫 번째 아이디어 워크숍 자리에서 한 팀원이 고객이 무엇을 원하는지 파악하기 위해 시장조사를 해야 하는지 물었다.<br />잡스는 &ldquo;그럴 필요가 없다&rdquo;며 &ldquo;<b>고객은 우리가 무언가를 보여주기 전까지는 자신이 무엇을 원하는지 전혀 모른다</b>&rdquo;고 설명했다.<br />잡스는 헨리 포드의 말을 인용했다.<br />&ldquo;내가 고객들에게 무엇을 원하느냐고 물었다면 &lsquo;좀 더 빠른 말!&rsquo;이라 답했겠지.&rdquo;</p>\n<p data-ke-size=\"size16\">고객이 무엇을 원하든지 관심을 갖고 있다고 해서 고객에게 무엇을 원하는지 끊임없이 질문을 던져야 하는 것은 아니다.<br /><b>아직 형성되지 않은 고객의 욕구에 대한 직관과 직감이 필요할 뿐이다</b>.<br />잡스는 &ldquo;우리가 해야 할 일은 아직 종이에 인쇄되지 않은 무언가를 읽어내는 것&rdquo;이라고 설명했다.<br />잡스는 시장조사에 의존하기보다 특유의 공감능력(고객이 갖고 있는 욕구를 꿰뚫어보는 직관)을 키웠다.<br />잡스는 대학을 중퇴한 후 인도에서 불교를 공부하면서 직관(경험을 통해 누적된 지혜를 토대로 하는 느낌)의 중요성을 깨달았다고 한다.<br />잡스는 당시를 회상하며 다음과 같이 이야기했다.<br />&ldquo;인도 시골 지역에 거주하는 사람들은 우리처럼 지적 능력을 사용하지 않는다. 대신 그 사람들은 직관을 활용한다. 직관은 매우 강력한 힘을 갖고 있다. 나는 직관이 지적 능력보다 더욱 강력한 힘을 갖고 있다고 생각한다.&rdquo;</p>\n<p data-ke-size=\"size16\">직관을 중요하게 여긴 탓에 잡스는 단 1명으로 이뤄진 포커스 그룹을 활용하기도 했다.<br /><b>그 1명은 다름 아닌 스티브 잡스 자신</b>이었다.<br /><b>잡스는 자신과 친구들이 원하는 제품을 만들었다</b>.<br />2000년대에 다양한 휴대용 음악 기기가 시중에 유통됐지만 음악을 무척 좋아했던 잡스는 시중에 나와 있는 기기들이 하나같이 변변치 않다는 데 불만을 느꼈고 주머니에 수천 곡의 노래를 넣고 다닐 수 있을 만한 단순한 기기를 만들어야겠다고 생각했다.<br />&ldquo;<b>우리 자신을 위해서 아이팟을 만들었다. 사람들은 자기 자신이나 절친한 친구, 가족을 위해서 무언가를 만들 때 결코 허술한 결과물을 내놓지 않는다</b>.&rdquo;</p>\n</blockquote>\n<p data-ke-size=\"size16\">이 외에도 쿠팡의 이야기를 담은 <a href=\"https://product.kyobobook.co.kr/detail/S000201329398\">다이브 딥</a>에서도 역시 동일한 이야기를 한다.</p>\n<blockquote data-ke-style=\"style2\">\n<p data-ke-size=\"size16\">쿠팡은 2013년 리서치를 할 때 \"하루만에 배송되면 좋겠습니까?\"라는 질문을 했다.<br />조사결과, <b>하루만에 배송되는 것에 대한 니즈는 없었다</b>.<br />하지만 로켓배송은 혁신적이었으며, 모든 사람들의 만족을 이끌어냈다.<br />이것이 시사하는 바는 '<b>고객 스스로도 본인의 니즈를 모른다는 것</b>'이다.</p>\n<p data-ke-size=\"size16\">쿠팡은 대부분의 기업처럼 사용자 테스트의 일환으로 설문조사를 수시로 진행했는데, '빠르고 친절한 익일배송을 보장할 경우 쿠팡을 더 많이 이용할 것이냐' 는 질문을 해보면 뜻밖에도 대부분이 아니라고 응답했다.<br /><b>고객들은 빠른 배송보다는 차라리 저렴한 가격을 더 선호한다고 응답</b>했다.<br />배송 같은건 그들의 중요한 관심사에 들지도 않았다.<br />...<br />쿠팡에는 &lt;밀크셰이크 이야기&gt;를 누구나 안다.<br />...<br />한 컨설턴트가 밀크셰이크 업체를 컨설팅 하기 위해 18시간을 매장에 머물면서 고객을 관찰했다.<br />그 결과 오전 6~8시 30분 출근길에 밀크셰이크를 포장해 가는 이들이 많다는 걸 알게 됐다.<br />컨설턴트는 오전 일찍 밀크셰이크를 사가는 구매자들을 인터뷰했고 이들 대부분이 러시아워의 지루한 출근길을 운전하며 아침 대용으로 밀크셰이크를 먹는 직장인들이란 사실을 알게 됐다.<br />고객들은 설문에 응할 때마다 그들이 원하는 맛, 향, 질감에 대해 잘 안다고 생각했지만 사실은 그렇지 않았다.<br />패스트푸드점은 고객 설문 대신 컨설턴트의 분석을 바탕으로 출근길 아침 대용으로 즐기기에 적합한 형태의 제품을 만들도록 제안했고 그 결과는 매출 상승으로 이어졌다.<br />무엇보다 밀크셰이크가 디저트가 아니라 아침 대용식에 포함될 경우 시장 규모는 기존 추정보다 7배나 커질 수 있었다.<br />...<br /><b>고객은 혁신을 리드할 수 없었다.</b><br />...<br />쿠팡 역시 <b>빠른 배송보다 저렴한 가격이 낫다는 기존 소비자들의 말에 의존했다면 로켓배송과 같은 혁신을 만들어 낼 수 없었을 것이다</b>.</p>\n</blockquote>\n<p data-ke-size=\"size16\">정말 많은 인터넷 아티클에서 고객의 목소리에 집중하라고 한다.<br />헌데, 성공한 회사들의 전기에서는 대부분 <b>새로운 서비스와 기능, 혁신에 관해서는 본인들의 직관을 믿으라고 한다</b>.</p>\n<p data-ke-size=\"size16\">예전부터 이것 관련해서 고민이 많아서 성공한 회사들의 이야기를 정말 많이 찾아봤다.<br />실제로 결과를 보고 싶어 여러가지 일들을 진행하고 그에 대한 결과를 2~4년씩 지켜봤다.</p>\n<p data-ke-size=\"size16\">현재까지 내린 결론은,</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li><b>새로운 기능</b>, 완전한 <b>개편</b>에 대해서는 <b>직관</b>을 따라간다.\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>의견이 갈릴 때는 해당 프로젝트의 최종 결정권자가 결정한다.</li>\n</ul>\n</li>\n<li>기존 기능의 불편함을 <b>개선</b>하는 것은 <b>고객의 목소리</b>에 집중한다.</li>\n</ul>\n<p data-ke-size=\"size16\">\"어떤 기능이 필요하세요?\", \"이런 기능이 나오면 쓰실 것 같으세요?\", \"이런 컨텐츠가 있으면 재밌으실 것 같으세요?\" 같이 <b>아무런 실체가 없는 것에 관한 질문으로는 절대 유의미한 의견을 받을 수 없다</b>.</p>\n<p data-ke-size=\"size16\">오징어 게임을 만들때 넷플릭스나 황동혁 감독님이 관객들에게 이런 영화가 있으면 재밌을 것 같냐고 물어보진 않았을 것이다.</p>\n<p data-ke-size=\"size16\">무슨 기능이든 고객이 보고, 사용해본 뒤 \"그 기능을 왜 안쓰세요? 왜 그 기능을 쓰세요?\" 와 같이 고객이 실체를 확인하고, 어떤 선택을 내린 뒤에 한 질문이 효과적이다.<br />그래야만 <b>본인이 원했던 것이 무엇이였는지 알 수 있다</b>.</p>\n<p data-ke-size=\"size16\"><b>눈에 보이지 않고, 텍스트로만 설명하는 상상의 기능과 혁신은 절대 정확하게 의견을 내리기 어렵다</b>.<br />고객분들의 의견은 <b>실제로 해당 기능이 눈 앞에 보이고 그걸 써보고 난 뒤에야 <b>유의미한 의견을 줄 수 있다</b></b>.</p>\n<p data-ke-size=\"size16\">고객 설문, 유저 리서치는 실체가 있는 것에 대한 것을 물어보는 것이 효과적이다.<br /><b>기존에 없던 기능, 혁신에 관한 내용은 고객에게 묻지말고 본인의, 팀의 직관을 믿는 것이 좋다</b>.</p>\n<p data-ke-size=\"size16\">결국 <b>고객 설문, 유저 리서치는 이미 출시한 기능, 이미 사용중인 기능 등 실체가 있는 것에 대한 것을 물어보는 것이 효과적</b>이며.<br /><b>기존에 없던 기능, 혁신에 관한 내용은 고객에게 묻지 말고 본인의, 팀의 직관을 믿는 것이 좋다</b>는 결론을 내렸다.</p>\n<blockquote data-ke-style=\"style2\">물론 믹스패널, hotjar 등을 통한 히트맵을 보거나 유저 사용 패턴을 분석하는 것은 당연히 해야하는 것이지만 말이다.</blockquote>\n<p data-ke-size=\"size16\">이 2개를 분리하는 것이 정말 중요하다고 생각한다.<br />우리의 직관을 어떻게 하면 더 개선할 수 있을지,<br />어떻게 하면 우리가 우리 서비스의 최고 고객이 될 수 있을지를 계속해서 고민하고 훈련하는 것이 좋은 제품을 만드는데 있어 가장 중요하니, 이에 대해 더 자주 고민하고 이야기하는 팀이 되면 좋겠다.<br /><br />만약 유저 리서치를 하고 싶다면, 뭐라도 눈에 보이는 것을 만들어서 제공 한 뒤에 해보자.<br />(그러니 계속 MVP가 중요하다는 이야기를 하겠지만 말이다)</p>",
        "contentSnippet": "요즘 하드씽이란 책을 아주 재밌게 보고 있다.\n밑줄 칠 내용이 너무 많지만, 고객 니즈란 측면에서 저자인 벤 호로위츠의 경험과 생각이 와닿았다.\n제품 개발 프로세스가 기존 고객들이 제시한 수많은 요구사항에 짓눌려 갈피를 잡지 못하고 있었다.\n...\n결국 제품 개발 전략에서 핵심이 되는 포인트는 이것이었다.\n바로 최고의 제품을 구현할 방법을 찾아내는 일은 고객이 아니라 개발자의 몫이라는 것.\n고객은 기존 제품에 대한 경험에 비춰봤을 때 자신이 원한다고 생각하는 것만 알고 있을 뿐이다.\n혁신을 추구하는 개발자는 가능한 모든 요소를 고려할 수는 있지만 종종 '고객 요구에 부합된다고' 여겨지는 것과 반대 방향으로 나가야 한다.\n결국 혁신에는 지식과 기술과 용기가 모두 필요하다.\n그리고 때로는 회사의 설립자만이 데이터를 무시할 용기를 발휘할 수 있다.\n우리에겐 시간이 별로 없었고, 따라서 내가 나서야 했다.\n\"기존 고객들의 요구사항은 신경 쓸 필요 없습니다.\n제품을 혁신해 재창조하는 것이, 그래서 우리가 경쟁에서 이기는 것이 더 중요합니다\"\n이 내용과 유사하게 하버드 비즈니스 리뷰에 실린 Walter Isaacson의 The Real Leadership Lessons of Steve Jobs 에도 있었다.\nWalter Isaacson 이 경험한 스티브 잡스의 리더십에 대한 이야기인데, 그 중 아래와 같은 내용이 있다.\n[Don’t Be a Slave To Focus Groups]\n잡스가 최초의 매킨토시팀과 함께한 첫 번째 아이디어 워크숍 자리에서 한 팀원이 고객이 무엇을 원하는지 파악하기 위해 시장조사를 해야 하는지 물었다.\n잡스는 “그럴 필요가 없다”며 “고객은 우리가 무언가를 보여주기 전까지는 자신이 무엇을 원하는지 전혀 모른다”고 설명했다.\n잡스는 헨리 포드의 말을 인용했다.\n“내가 고객들에게 무엇을 원하느냐고 물었다면 ‘좀 더 빠른 말!’이라 답했겠지.”\n고객이 무엇을 원하든지 관심을 갖고 있다고 해서 고객에게 무엇을 원하는지 끊임없이 질문을 던져야 하는 것은 아니다.\n아직 형성되지 않은 고객의 욕구에 대한 직관과 직감이 필요할 뿐이다.\n잡스는 “우리가 해야 할 일은 아직 종이에 인쇄되지 않은 무언가를 읽어내는 것”이라고 설명했다.\n잡스는 시장조사에 의존하기보다 특유의 공감능력(고객이 갖고 있는 욕구를 꿰뚫어보는 직관)을 키웠다.\n잡스는 대학을 중퇴한 후 인도에서 불교를 공부하면서 직관(경험을 통해 누적된 지혜를 토대로 하는 느낌)의 중요성을 깨달았다고 한다.\n잡스는 당시를 회상하며 다음과 같이 이야기했다.\n“인도 시골 지역에 거주하는 사람들은 우리처럼 지적 능력을 사용하지 않는다. 대신 그 사람들은 직관을 활용한다. 직관은 매우 강력한 힘을 갖고 있다. 나는 직관이 지적 능력보다 더욱 강력한 힘을 갖고 있다고 생각한다.”\n직관을 중요하게 여긴 탓에 잡스는 단 1명으로 이뤄진 포커스 그룹을 활용하기도 했다.\n그 1명은 다름 아닌 스티브 잡스 자신이었다.\n잡스는 자신과 친구들이 원하는 제품을 만들었다.\n2000년대에 다양한 휴대용 음악 기기가 시중에 유통됐지만 음악을 무척 좋아했던 잡스는 시중에 나와 있는 기기들이 하나같이 변변치 않다는 데 불만을 느꼈고 주머니에 수천 곡의 노래를 넣고 다닐 수 있을 만한 단순한 기기를 만들어야겠다고 생각했다.\n“우리 자신을 위해서 아이팟을 만들었다. 사람들은 자기 자신이나 절친한 친구, 가족을 위해서 무언가를 만들 때 결코 허술한 결과물을 내놓지 않는다.”\n이 외에도 쿠팡의 이야기를 담은 다이브 딥에서도 역시 동일한 이야기를 한다.\n쿠팡은 2013년 리서치를 할 때 \"하루만에 배송되면 좋겠습니까?\"라는 질문을 했다.\n조사결과, 하루만에 배송되는 것에 대한 니즈는 없었다.\n하지만 로켓배송은 혁신적이었으며, 모든 사람들의 만족을 이끌어냈다.\n이것이 시사하는 바는 '고객 스스로도 본인의 니즈를 모른다는 것'이다.\n쿠팡은 대부분의 기업처럼 사용자 테스트의 일환으로 설문조사를 수시로 진행했는데, '빠르고 친절한 익일배송을 보장할 경우 쿠팡을 더 많이 이용할 것이냐' 는 질문을 해보면 뜻밖에도 대부분이 아니라고 응답했다.\n고객들은 빠른 배송보다는 차라리 저렴한 가격을 더 선호한다고 응답했다.\n배송 같은건 그들의 중요한 관심사에 들지도 않았다.\n...\n쿠팡에는 <밀크셰이크 이야기>를 누구나 안다.\n...\n한 컨설턴트가 밀크셰이크 업체를 컨설팅 하기 위해 18시간을 매장에 머물면서 고객을 관찰했다.\n그 결과 오전 6~8시 30분 출근길에 밀크셰이크를 포장해 가는 이들이 많다는 걸 알게 됐다.\n컨설턴트는 오전 일찍 밀크셰이크를 사가는 구매자들을 인터뷰했고 이들 대부분이 러시아워의 지루한 출근길을 운전하며 아침 대용으로 밀크셰이크를 먹는 직장인들이란 사실을 알게 됐다.\n고객들은 설문에 응할 때마다 그들이 원하는 맛, 향, 질감에 대해 잘 안다고 생각했지만 사실은 그렇지 않았다.\n패스트푸드점은 고객 설문 대신 컨설턴트의 분석을 바탕으로 출근길 아침 대용으로 즐기기에 적합한 형태의 제품을 만들도록 제안했고 그 결과는 매출 상승으로 이어졌다.\n무엇보다 밀크셰이크가 디저트가 아니라 아침 대용식에 포함될 경우 시장 규모는 기존 추정보다 7배나 커질 수 있었다.\n...\n고객은 혁신을 리드할 수 없었다.\n...\n쿠팡 역시 빠른 배송보다 저렴한 가격이 낫다는 기존 소비자들의 말에 의존했다면 로켓배송과 같은 혁신을 만들어 낼 수 없었을 것이다.\n정말 많은 인터넷 아티클에서 고객의 목소리에 집중하라고 한다.\n헌데, 성공한 회사들의 전기에서는 대부분 새로운 서비스와 기능, 혁신에 관해서는 본인들의 직관을 믿으라고 한다.\n예전부터 이것 관련해서 고민이 많아서 성공한 회사들의 이야기를 정말 많이 찾아봤다.\n실제로 결과를 보고 싶어 여러가지 일들을 진행하고 그에 대한 결과를 2~4년씩 지켜봤다.\n현재까지 내린 결론은,\n새로운 기능, 완전한 개편에 대해서는 직관을 따라간다.\n\n의견이 갈릴 때는 해당 프로젝트의 최종 결정권자가 결정한다.\n기존 기능의 불편함을 개선하는 것은 고객의 목소리에 집중한다.\n\"어떤 기능이 필요하세요?\", \"이런 기능이 나오면 쓰실 것 같으세요?\", \"이런 컨텐츠가 있으면 재밌으실 것 같으세요?\" 같이 아무런 실체가 없는 것에 관한 질문으로는 절대 유의미한 의견을 받을 수 없다.\n오징어 게임을 만들때 넷플릭스나 황동혁 감독님이 관객들에게 이런 영화가 있으면 재밌을 것 같냐고 물어보진 않았을 것이다.\n무슨 기능이든 고객이 보고, 사용해본 뒤 \"그 기능을 왜 안쓰세요? 왜 그 기능을 쓰세요?\" 와 같이 고객이 실체를 확인하고, 어떤 선택을 내린 뒤에 한 질문이 효과적이다.\n그래야만 본인이 원했던 것이 무엇이였는지 알 수 있다.\n눈에 보이지 않고, 텍스트로만 설명하는 상상의 기능과 혁신은 절대 정확하게 의견을 내리기 어렵다.\n고객분들의 의견은 실제로 해당 기능이 눈 앞에 보이고 그걸 써보고 난 뒤에야 유의미한 의견을 줄 수 있다.\n고객 설문, 유저 리서치는 실체가 있는 것에 대한 것을 물어보는 것이 효과적이다.\n기존에 없던 기능, 혁신에 관한 내용은 고객에게 묻지말고 본인의, 팀의 직관을 믿는 것이 좋다.\n결국 고객 설문, 유저 리서치는 이미 출시한 기능, 이미 사용중인 기능 등 실체가 있는 것에 대한 것을 물어보는 것이 효과적이며.\n기존에 없던 기능, 혁신에 관한 내용은 고객에게 묻지 말고 본인의, 팀의 직관을 믿는 것이 좋다는 결론을 내렸다.\n물론 믹스패널, hotjar 등을 통한 히트맵을 보거나 유저 사용 패턴을 분석하는 것은 당연히 해야하는 것이지만 말이다.\n이 2개를 분리하는 것이 정말 중요하다고 생각한다.\n우리의 직관을 어떻게 하면 더 개선할 수 있을지,\n어떻게 하면 우리가 우리 서비스의 최고 고객이 될 수 있을지를 계속해서 고민하고 훈련하는 것이 좋은 제품을 만드는데 있어 가장 중요하니, 이에 대해 더 자주 고민하고 이야기하는 팀이 되면 좋겠다.\n만약 유저 리서치를 하고 싶다면, 뭐라도 눈에 보이는 것을 만들어서 제공 한 뒤에 해보자.\n(그러니 계속 MVP가 중요하다는 이야기를 하겠지만 말이다)",
        "guid": "https://jojoldu.tistory.com/821",
        "categories": [
          "생각정리",
          "고객 설문",
          "스티브 잡스",
          "애플",
          "유저 리서치",
          "제품 방향성",
          "쿠팡",
          "하드씽"
        ],
        "isoDate": "2025-03-15T15:27:04.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": [
      {
        "creator": "Sangkon Han",
        "title": "내 맘대로 위클리 뉴스 - 2025년 10주(2025.03.09 - 2025.03.15)",
        "link": "https://www.sangkon.com/sigmadream_weekly_2025_10/",
        "pubDate": "Sat, 15 Mar 2025 19:41:00 GMT",
        "content:encodedSnippet": "Python\nUsing Python to Measure Immigration Trends\nPython과 관련 데이터 분석 라이브러리(pandas 등)를 사용하여 이민 동향을 분석하고 시각화하는 방법을 보여줍니다.\nAutomating and Responding to Sentiment Analysis with Diffbot's Knowledge Graph\nDiffbot의 Knowledge Graph를 사용하여 텍스트 데이터의 감성 분석을 자동화하고, 그 결과에 따라 대응하는 시스템을 구축하는 방법을 설명합니다.\nJavaScript\n{transitions} = f(state)\n상태(state)와 상태 변화(transitions)를 명확하게 분리하고 함수형 프로그래밍 방식으로 관리하는 접근 방식을 설명합니다. (특히 React 컴포넌트에서)\nHow The New York Times systematically migrated from Enzyme into React Testing Library\nThe New York Times가 React 컴포넌트 테스팅 도구를 Enzyme에서 React Testing Library로 체계적으로 마이그레이션한 과정과 그 이유, 그리고 얻은 이점을 설명합니다.\nOOP\nWhy I’m Learning C# and .NET After Two Decades of Programming\n\n20년 경력의 프로그래머가 C#과 .NET을 새롭게 배우기로 결정한 이유와 그 과정에서 느낀 점을 공유하는 글\nEtc\nLumo UI\nMastering C# Design Patterns: Practical Examples of Singleton, Factory, and Observer\nLetter to Blazor\nWriting a .NET profiler in C#  -  Part 5\nMinimal state management tools\nBuilding APIs with Next.js\nCreating static map images with OpenStreetMap, Web Mercator, and Pillow\nHere’s how I use LLMs to help me write code\nPython interpreter adds tail calls\nBeating LinkedIn “Queens” with Python\nASCII control characters in my terminal\nA Map of Python\nPokémon Red with Reinforcement Learning\nGood programmers worry about data structures and their relationships",
        "dc:creator": "Sangkon Han",
        "content": "<h2 id=\"python\">Python</h2>\n<ul>\n<li>\n<p><a href=\"https://arilamstein.com/blog/2025/03/04/using-python-to-measure-immigration-trends/\">Using Python to Measure Immigration Trends</a></p>\n<ul>\n<li>Python&#xACFC; &#xAD00;&#xB828; &#xB370;&#xC774;&#xD130; &#xBD84;&#xC11D; &#xB77C;&#xC774;&#xBE0C;&#xB7EC;&#xB9AC;(pandas &#xB4F1;)&#xB97C; &#xC0AC;&#xC6A9;&#xD558;&#xC5EC; &#xC774;&#xBBFC; &#xB3D9;&#xD5A5;&#xC744; &#xBD84;&#xC11D;&#xD558;&#xACE0; &#xC2DC;&#xAC01;&#xD654;&#xD558;&#xB294; &#xBC29;&#xBC95;&#xC744; &#xBCF4;&#xC5EC;&#xC90D;&#xB2C8;&#xB2E4;</li></ul></li></ul>",
        "contentSnippet": "Python\nUsing Python to Measure Immigration Trends\nPython과 관련 데이터 분석 라이브러리(pandas 등)를 사용하여 이민 동향을 분석하고 시각화하는 방법을 보여줍니다",
        "guid": "67d9cc45256b8994e9fc11dd",
        "categories": [
          "주간 뉴스"
        ],
        "isoDate": "2025-03-15T19:41:00.000Z"
      }
    ]
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": [
      {
        "creator": "dlehddus84",
        "title": "정령섬 플레이!!",
        "link": "https://blog.naver.com/dlehddus84/223797537571?fromRss=true&trackingCode=rss",
        "pubDate": "Sun, 16 Mar 2025 00:27:28 +0900",
        "author": "dlehddus84",
        "content": "오프라인으로는 안해본 천둥으로 말하는자를 선택하였고 가지와 발톱 확장을 넣고 진행하였다. 능령은 다한을 이끌고 현신이 함께 이동하는 능력을 가지고 있다. 다한에게 능력을 부여하여 사기를 올려 싸우는 컨셉의 정령. 정복단계에 다한이 공격을 받고 살아남은 정령만 반격하는데 방어를 부여하고 함께 반격하는 카드를 잘사용했다. 도색된 다한으로 테마 맵으로 플레이하니 칙칙하지 않아서 좋았다. 오염이 쌓여 오염된 섬으로 뒤집어졌지만 오염이 떨어지기 전에 클리어 하였다. 클리어시 내 덱은 이상태였다. 햇빛의 날개를 두르다가 다한을 옴겨와 잘써먹었다. <img src=\"https://blogthumb.pstatic.net/MjAyNTAzMTZfMTMg/MDAxNzQyMDUyMjA3ODY2.MGBxHls-JJsuNEXsIec4fN_O2K-G0PgrDddFLXERyIYg.eBWgnHK5DaaX7iGKsSdIQ2MPBW-itkV_Eg_4mp2IPt8g.JPEG/KakaoTalk_20250316_002231670_04.jpg?type=s3\" />",
        "contentSnippet": "오프라인으로는 안해본 천둥으로 말하는자를 선택하였고 가지와 발톱 확장을 넣고 진행하였다. 능령은 다한을 이끌고 현신이 함께 이동하는 능력을 가지고 있다. 다한에게 능력을 부여하여 사기를 올려 싸우는 컨셉의 정령. 정복단계에 다한이 공격을 받고 살아남은 정령만 반격하는데 방어를 부여하고 함께 반격하는 카드를 잘사용했다. 도색된 다한으로 테마 맵으로 플레이하니 칙칙하지 않아서 좋았다. 오염이 쌓여 오염된 섬으로 뒤집어졌지만 오염이 떨어지기 전에 클리어 하였다. 클리어시 내 덱은 이상태였다. 햇빛의 날개를 두르다가 다한을 옴겨와 잘써먹었다.",
        "guid": "https://blog.naver.com/dlehddus84/223797537571",
        "categories": [
          "플레이"
        ],
        "isoDate": "2025-03-15T15:27:28.000Z"
      }
    ]
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "코드 품질 개선 기법 6편: 마구 자를 것인가 반듯하게 자를 것인가",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-6",
        "pubDate": "Wed, 19 Mar 2025 02:00:00 GMT",
        "content": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.\n저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰...",
        "contentSnippet": "안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.\n저희 회사는 높은 개발 생산성을 유지하기 위해 코드 품질 및 개발 문화 개선에 힘쓰...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-6",
        "isoDate": "2025-03-19T02:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": []
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": [
      {
        "title": "Hash..라니~!!",
        "link": "https://velog.io/@sweet_sumin/Hash..%EB%9D%BC%EB%8B%88",
        "pubDate": "Thu, 20 Mar 2025 12:52:34 GMT",
        "content": "<p>따끈따끈한 이번 작업을 소개하려고 한다. \n오늘의 주인공은 상용데이터의 Hash 마이그레이션이다.</p>\n<h2 id=\"📌-등장-배경\">📌 등장 배경</h2>\n<p>🌞 화창한 아침..운영 실무자에 의해 데이터 변경 요청이 떨어졌다\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/8a2c842f-be64-4341-a56a-8d704cd00eaa/image.png\" alt=\"\"></p>\n<p>현재 요청된 내용은 프로덕트에 매핑된 속성을 변경하되 그 속성 옵션값은 그대로 유지해달라는 요청이다. \n좀 더 구체적으로 말해보자면, 상품1에 속성으로 PRADA 컬러라는 속성이 있고 그 값으로 빨강, 주황이 있는데 상품 1의 속성을 GUCCI 컬러라는 속성으로 변경하되 값은 그대로 빨강, 주황으로 유지 해달라는 것이다.</p>\n<blockquote>\n<ul>\n<li>운영팀의 요청: 특정 상품의 속성을 다른 속성으로 변경해야 하지만, 속성 값은 유지해야 한다.</li>\n</ul>\n</blockquote>\n<ul>\n<li>문제: 기존 정책상 노출 속성은 수정할 수 없으므로, 마이그레이션 작업이 필요하다.</li>\n</ul>\n<p>현재 정책상 노출 속성은 한번 상품에 매핑되면 수정불가한 정책을 가지고 있기 때문에 우리가 마이그레이션을 해줄 수밖에 없다. </p>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/ceb0d43c-ecd6-4a02-ba54-441068935140/image.png\" alt=\"\"></p>\n<p>내가 할일은 </p>\n<ol>\n<li>product_attribute에서 attribute를 변경해주고</li>\n<li>item_attribute_option에서 attribute와 attributeOption을 변경해줘야한다. \n바꿀 attributeOption은 기존의 attributeOption 값과 일치한 것을 찾아다가 변경해주면된다. </li>\n</ol>\n<p>사실 여기까지보면 뭐.. 쿼리 돌려주면 되지 한다. 맞다 이 일은 어렵지 않다. 근데 문제는 hash이다. 이번 이야기에서 나오는 주제의 주인공은 HASH이다. </p>\n<p>우리는 상품과 아이템의 중복확인을 hash로 구별한다. </p>\n<ul>\n<li><strong>상품 중복 조건</strong> : 카테고리 + 상품이름 + 노출속성목록 + 브랜드Id + 모델명</li>\n<li><strong>아이템 중복 조건</strong> : 상품 Id + 노출속성목록 + 속성값목록</li>\n</ul>\n<p>이렇게 되어 있다. \n이번에 이 조건들 중에 상품에는 노출 속성 목록이, 아이템에는 노출속성목록과 속성값 목록이 변경되기 때문에 Hash를 새로 변경해줄 수밖에 없다. \n그럼 변경된 상품과 아이템만 변경하면되잖아? 하기에는 이번 작업부터 중복 조건이 일부 변경되었다. 위에 언급한 조건은 이번에 변경되는 조건에 해당된다.\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/ccb56ec1-a4d5-4a1b-854b-1bd4a3331b4d/image.png\" alt=\"\"></p>\n<p>에이 변경하면 되지..하기엔 단순히 몇백개가 아니고 몇십만 단위다..ㅎ 거기다가 상품 중복 조건이 이번 작업부터 변경된 조건이라 해시 충돌이 안날래야 안날 수가 없는 작업이다 ㄸㄹㄹ,, </p>\n<p>💡 정리하자면, 상품과 아이템의 중복 여부를 확인하는 데 해시를 사용하는 이번 속성 변경하면서 그 기준이 되는 값 또한 변경이 되었기에 hash 작업이 필요하다</p>\n<h2 id=\"📌-hash\">📌 Hash?</h2>\n<blockquote>\n<p>💡 해시\n임의의 크기를 가진 데이터를 고정된 크기의 데이터로 변화시켜 저장하는 것</p>\n</blockquote>\n<p>결론부터 말하자면, 동일한 입력값이면 항상 동일한 해시값이 생성되므로, 데이터를 직접 비교하지 않고도 빠르게 중복을 판별할 수 있다. 즉, 중복 체크하는데 성능적으로 해시가 더 빠르다고 판단한 것이다. </p>\n<h3 id=\"🐳-직접-비교-vs-해시-비교\">🐳 직접 비교 Vs 해시 비교</h3>\n<p>상품을 등록하는 걸 예시로 들어보자. \n상품을 등록하기 전 위 중복조건에 의해 중복된 상품이 있는지 확인해야 한다. </p>\n<p>만약 직접 비교해야 한다면?</p>\n<blockquote>\n<p>EXPLAIN SELECT * FROM product \nWHERE category_id = ? \nAND product_name = ? \nAND brand_id = ? \nAND model_no = ? \nAND displayed_attribute_ids = ?;</p>\n</blockquote>\n<p>해당 쿼리를 돌려 보면\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/565877f3-9c95-4456-b970-512710898d43/image.png\" alt=\"\">\n실행계획에 테이블 풀스캔하고 있음을 확인할 수 있었다. \n즉, 상품을 추가할때 기존 상품과 하나씩 비교한다는 것이다. -&gt; 최악의 경우 O(N)\n풀 스캔하는 것을 보니 데이터가 많을수록 성능이 저하됨을 의미하는데 현재 우리 상품은 몇십만개이다. 그럼.. 성능은 아주 최악이 되는 것이다. </p>\n<p>그럼 Hash의 경우는?</p>\n<blockquote>\n<p>EXPLAIN SELECT * FROM product_identity pi\n               WHERE pi.hash = ?;</p>\n</blockquote>\n<p>해당 쿼리를 돌려보면\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/2e614f7a-084b-4774-b37b-da9eca313b45/image.png\" alt=\"\"></p>\n<p>const row lookup으로 인덱스를 확용한 상수 조회를 하고 있음을 확인할 수 있다. \n해당 스캔 방식은 단일 행을 대상으로 하는 상수 값을 기반으로 하는데 Primary Key 또는 Unique Key에 대한 WHERE 절의 상수 값 비교가 있을 때 나타난다. \nhash에 의해 unique를 걸 수 있기 때문에 인덱스를 걸 수 있는 것이다. \n즉, 테이블의 유니크 인덱스 (uk_hash)를 사용하여 단 한개의 행만 조회하고 있다. \n-&gt; 시간 복잡도 O(1) ~ O(logN)</p>\n<p>결과적으로 직접 비교보다 해시비교가 풀스캔 방지가 될 뿐만아니라 속도도 훨씬 빠르기 때문에 중복 검사에 해시를 적용하는 것이 성능상 최적이라는 것을 알 수 있다. </p>\n<p>정리하자면,</p>\n<blockquote>\n<ul>\n<li>직접 비교\n풀스캔, 시간복잡도 : O(N), 데이터 많을수록 성능 저하</li>\n</ul>\n</blockquote>\n<ul>\n<li>Hash 비교\nO(1) ~ O(logN), 인덱스를 활용해 빠른 조회 가능</li>\n</ul>\n<h2 id=\"📌-마이그레이션-작업에-대한-회고\">📌 마이그레이션 작업에 대한 회고</h2>\n<p>작업에 대한 플로우를 말해보자면,</p>\n<ol>\n<li>속성 변경에 대한 프로덕트-속성 매핑 데이터, 아이템-속성 매핑 데이터 변경 </li>\n<li>중복 조건에 의한 해시 충돌 테스트</li>\n<li>충돌된 상품에 대한 실무자 전달 및 데이터 정리</li>\n<li>프로덕트, 아이템 해시 테이블에 생성 -&gt; 임시 테이블에 생성</li>\n<li>기존 해시 테이블 백업 후 임시테이블을 기존 테이블 명으로 변환</li>\n<li>product, item 해시 캐시의 기존 데이터 삭제 후 새로 생성</li>\n</ol>\n<p>상용 데이터를 다루기도 하고, 내 기준상 데이터가 많아서 사실 두렵기도 하고 어려움도 많았던 작업이었다. 이 작업을 하면서 흥미로웠던 구간은 기존의 데이터에 대한 해시 생성 구간이었다. </p>\n<p>아이템만 해도 현재 활성화된 아이템이 몇십만개인데 이걸 어떻게 생성을 하느냐?\n방법은 page를 활용해서 한번에 3000개씩 가져와서 배치를 돌리는 것이다. \n( 이건 그냥 여담인데 아무생각없이 10개씩 가져오도록 했다가 반나절이되어도 안끝났다..ㅎ 그래서 확 3000개씩 가져오는 걸로 바꾸었더니 5도 안되어서 끝났다. ㅎㅎ 네트워크 비용에 대한 체감이 확 드는 순간이었다. )</p>\n<h3 id=\"🐳-내부-코드-분석\">🐳 내부 코드 분석</h3>\n<p>가장 흥미로웠던 코드를 분석해보자.\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/ddea23cc-6019-432c-8c39-cbfd60477291/image.png\" alt=\"\"></p>\n<p>해당 코드는 대량 데이터를 한번에 삽입해야 할때 사용한다. \n먼저 excute 내부 코드를 살펴보면, ( Spring 내부 코드 )\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/348b9c0c-25df-40ad-bcc9-a02f927e60f8/image.png\" alt=\"\"></p>\n<p>1) getTransaction() : 직접 트랜잭션을 가져오고,\n2) commit() : 트랜잭션을 직접 커밋하고\n3) rollbackOnException() : 트랜잭션을 수동으로 롤백하고\n이를 통해 excute() 메소드는 트랜잭션 관리 로직을 직접 실행하는 메서드임을 확인할 수 있다. \n-&gt; 예외 발생시 전체 롤백이 되게 됨을 알 수 있다. 실제로 테스트할때 충돌로 인한 예외 발생시 전체 롤백된 것을 확인하였다. </p>\n<p>대망의 batchUpdate 메소드를 살펴보자면,  ( Spring 내부 코드 ) \n이 메소드는 JDBC 기반 배치 업데이트 메서드로 여러개의 데이터를 한번에 업데이트하는 기능을 함을 알 수 있다.</p>\n<p><img src=\"https://velog.velcdn.com/images/sweet_sumin/post/ea79583c-b9f7-4d18-86b8-33277175c5c8/image.png\" alt=\"\">\n실제로 Sql에 해당 하는 코드가\n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/8b50ed9f-b19b-40af-a12a-810e964783e7/image.png\" alt=\"\">\n이렇게 앞전에 선언해놓았고, 이것을 매개변수로 받아서 hash 생성을 한꺼번에 하는 것을 알 수 있었다. </p>\n<h3 id=\"🐳-회고\">🐳 회고</h3>\n<p>이 작업을 수행하면서, 역시 직접해봐야 좀더 와닿음을 다시 한번 확인하는 순간이었다. 내가 이번에 작업한 해시는 이전부터 중복 검사를 위해 해놓았던 조치였다. 그러나 내가 한게 아니다보니, 해시 작업에 대한 이해도가 낮았다. \n이번에 해시 생성 작업을 하다보니, 왜 필요하고 어떤 코드를 사용했는지 나를 납득해가면서 작업을 하다보니 얻어가는 것도 많고 이해도도 높아짐을 알 수 있었다. 나중에 중복 검사가 필요할때 이 작업을 떠올리며 해시를 생각해내지 않을까? ㅎㅎ😄</p>\n<p>처음에 이 작업이 주어졌을때, 상용 데이터를 만진다는 것에 대한 두려움이 있었는데, &#39;이 연차에 어떤 누가 몇십만개의 상용 데이터를 다루는 경험을 하겠어?&#39; 하는 마음으로 임했다. 그래도 무서웠다. 혹시 내가 잘못할까봐 덜덜 떨면서 했다. 며칠 지난 지금, 이 작업을 회고하면 간단한데? 싶다. </p>\n<p><strong>이 작업에서 가장 오래 시간이 걸렸던 부분은 해시 충돌 부분이었다.</strong> \n사실 상품 해시 충돌은 예상했지만, <strong>아이템 해시 충돌은 예상 못했다.</strong> <strong>왜냐면 상품 해시 충돌된 것을 해결하면(상품 충돌난 아이템까지 삭제했기에) 아이템 중복 기준에 상품 ID가 있기 때문에 아이템 해시 충돌은 전혀 나지 않을 것이라 예상했기 때문이다.</strong> 그런데 아이템 해시 충돌이 발생했다.</p>\n<p>앞선 코드에 보여줬던 것이 하나라도 충돌되면 멈추는 로직이기때문에 몇십만개의 아이템을 다 돌리면서 충돌날때마다 에러나는 상황은 너무나도 시간이 많이 들기때문에 \n<img src=\"https://velog.velcdn.com/images/sweet_sumin/post/57fd8d2d-b37a-4a6c-a4fb-692a9b950591/image.png\" alt=\"\"></p>\n<p>에러나더라도 계속 돌아가도록 해당 부분을 try-Catch로 감싸서 충돌나서 에러가 나더라도 멈추지 않도록 했고, 페이지네이션으로 3000개씩 데이터를 돌렸더니 몇십만개의 데이터가 모두 거의 5분만에 다 돌아가서 모든 충돌을 잡아낼 수 있었다. 덕분에 빠르게 어떤 아이템들이 충돌났는지 확인할 수 있었다.</p>\n<p> 거의 40개의 아이템이 충돌났고, 상품으로 따지자면 3개 상품에 대한 아이템들이었다. 알고보니 임의로 수동으로 넣은 아이템 데이터에서 발생한 것이다. 따라서 해당 아이템들과 상품들을 삭제하니 해결되었던 문제였다. </p>\n<p>해시 충돌된 상품들과 아이템들이 다행히 모두 주문이 나간적이 없거나 테스트 상품이라서 삭제하기 어렵지 않았다. 물론 해당 상품과 아이템들을 삭제하기 위해 그 하위 집단인 벤더아이템, 딜벤더아이템, 딜 등의 삭제 작업들을 추가로 해줘야 하지만 오더가 없었기에 스위칭이 아닌 삭제로 해결할 수 있었던 작업이었다. 이번 작업을 통해 실무자와 커뮤니케이션도 해야하고 배포 작업도 걸려있어서 부담이 많이 가는 작업이었다. 하지만, 정말 값진 경험이었다. 앞으로 중복검사나 데이터 마이그레이션이 필요할때 이번 경험이 큰 도움이 될 것 같다. </p>\n",
        "contentSnippet": "따끈따끈한 이번 작업을 소개하려고 한다. \n오늘의 주인공은 상용데이터의 Hash 마이그레이션이다.\n📌 등장 배경\n🌞 화창한 아침..운영 실무자에 의해 데이터 변경 요청이 떨어졌다\n\n현재 요청된 내용은 프로덕트에 매핑된 속성을 변경하되 그 속성 옵션값은 그대로 유지해달라는 요청이다. \n좀 더 구체적으로 말해보자면, 상품1에 속성으로 PRADA 컬러라는 속성이 있고 그 값으로 빨강, 주황이 있는데 상품 1의 속성을 GUCCI 컬러라는 속성으로 변경하되 값은 그대로 빨강, 주황으로 유지 해달라는 것이다.\n운영팀의 요청: 특정 상품의 속성을 다른 속성으로 변경해야 하지만, 속성 값은 유지해야 한다.\n문제: 기존 정책상 노출 속성은 수정할 수 없으므로, 마이그레이션 작업이 필요하다.\n현재 정책상 노출 속성은 한번 상품에 매핑되면 수정불가한 정책을 가지고 있기 때문에 우리가 마이그레이션을 해줄 수밖에 없다. \n\n내가 할일은 \nproduct_attribute에서 attribute를 변경해주고\nitem_attribute_option에서 attribute와 attributeOption을 변경해줘야한다. \n바꿀 attributeOption은 기존의 attributeOption 값과 일치한 것을 찾아다가 변경해주면된다. \n사실 여기까지보면 뭐.. 쿼리 돌려주면 되지 한다. 맞다 이 일은 어렵지 않다. 근데 문제는 hash이다. 이번 이야기에서 나오는 주제의 주인공은 HASH이다. \n우리는 상품과 아이템의 중복확인을 hash로 구별한다. \n상품 중복 조건 : 카테고리 + 상품이름 + 노출속성목록 + 브랜드Id + 모델명\n아이템 중복 조건 : 상품 Id + 노출속성목록 + 속성값목록\n이렇게 되어 있다. \n이번에 이 조건들 중에 상품에는 노출 속성 목록이, 아이템에는 노출속성목록과 속성값 목록이 변경되기 때문에 Hash를 새로 변경해줄 수밖에 없다. \n그럼 변경된 상품과 아이템만 변경하면되잖아? 하기에는 이번 작업부터 중복 조건이 일부 변경되었다. 위에 언급한 조건은 이번에 변경되는 조건에 해당된다.\n\n에이 변경하면 되지..하기엔 단순히 몇백개가 아니고 몇십만 단위다..ㅎ 거기다가 상품 중복 조건이 이번 작업부터 변경된 조건이라 해시 충돌이 안날래야 안날 수가 없는 작업이다 ㄸㄹㄹ,, \n💡 정리하자면, 상품과 아이템의 중복 여부를 확인하는 데 해시를 사용하는 이번 속성 변경하면서 그 기준이 되는 값 또한 변경이 되었기에 hash 작업이 필요하다\n📌 Hash?\n💡 해시\n임의의 크기를 가진 데이터를 고정된 크기의 데이터로 변화시켜 저장하는 것\n결론부터 말하자면, 동일한 입력값이면 항상 동일한 해시값이 생성되므로, 데이터를 직접 비교하지 않고도 빠르게 중복을 판별할 수 있다. 즉, 중복 체크하는데 성능적으로 해시가 더 빠르다고 판단한 것이다. \n🐳 직접 비교 Vs 해시 비교\n상품을 등록하는 걸 예시로 들어보자. \n상품을 등록하기 전 위 중복조건에 의해 중복된 상품이 있는지 확인해야 한다. \n만약 직접 비교해야 한다면?\nEXPLAIN SELECT * FROM product \nWHERE category_id = ? \nAND product_name = ? \nAND brand_id = ? \nAND model_no = ? \nAND displayed_attribute_ids = ?;\n해당 쿼리를 돌려 보면\n\n실행계획에 테이블 풀스캔하고 있음을 확인할 수 있었다. \n즉, 상품을 추가할때 기존 상품과 하나씩 비교한다는 것이다. -> 최악의 경우 O(N)\n풀 스캔하는 것을 보니 데이터가 많을수록 성능이 저하됨을 의미하는데 현재 우리 상품은 몇십만개이다. 그럼.. 성능은 아주 최악이 되는 것이다. \n그럼 Hash의 경우는?\nEXPLAIN SELECT * FROM product_identity pi\n               WHERE pi.hash = ?;\n해당 쿼리를 돌려보면\n\nconst row lookup으로 인덱스를 확용한 상수 조회를 하고 있음을 확인할 수 있다. \n해당 스캔 방식은 단일 행을 대상으로 하는 상수 값을 기반으로 하는데 Primary Key 또는 Unique Key에 대한 WHERE 절의 상수 값 비교가 있을 때 나타난다. \nhash에 의해 unique를 걸 수 있기 때문에 인덱스를 걸 수 있는 것이다. \n즉, 테이블의 유니크 인덱스 (uk_hash)를 사용하여 단 한개의 행만 조회하고 있다. \n-> 시간 복잡도 O(1) ~ O(logN)\n결과적으로 직접 비교보다 해시비교가 풀스캔 방지가 될 뿐만아니라 속도도 훨씬 빠르기 때문에 중복 검사에 해시를 적용하는 것이 성능상 최적이라는 것을 알 수 있다. \n정리하자면,\n직접 비교\n풀스캔, 시간복잡도 : O(N), 데이터 많을수록 성능 저하\nHash 비교\nO(1) ~ O(logN), 인덱스를 활용해 빠른 조회 가능\n📌 마이그레이션 작업에 대한 회고\n작업에 대한 플로우를 말해보자면,\n속성 변경에 대한 프로덕트-속성 매핑 데이터, 아이템-속성 매핑 데이터 변경 \n중복 조건에 의한 해시 충돌 테스트\n충돌된 상품에 대한 실무자 전달 및 데이터 정리\n프로덕트, 아이템 해시 테이블에 생성 -> 임시 테이블에 생성\n기존 해시 테이블 백업 후 임시테이블을 기존 테이블 명으로 변환\nproduct, item 해시 캐시의 기존 데이터 삭제 후 새로 생성\n상용 데이터를 다루기도 하고, 내 기준상 데이터가 많아서 사실 두렵기도 하고 어려움도 많았던 작업이었다. 이 작업을 하면서 흥미로웠던 구간은 기존의 데이터에 대한 해시 생성 구간이었다. \n아이템만 해도 현재 활성화된 아이템이 몇십만개인데 이걸 어떻게 생성을 하느냐?\n방법은 page를 활용해서 한번에 3000개씩 가져와서 배치를 돌리는 것이다. \n( 이건 그냥 여담인데 아무생각없이 10개씩 가져오도록 했다가 반나절이되어도 안끝났다..ㅎ 그래서 확 3000개씩 가져오는 걸로 바꾸었더니 5도 안되어서 끝났다. ㅎㅎ 네트워크 비용에 대한 체감이 확 드는 순간이었다. )\n🐳 내부 코드 분석\n가장 흥미로웠던 코드를 분석해보자.\n\n해당 코드는 대량 데이터를 한번에 삽입해야 할때 사용한다. \n먼저 excute 내부 코드를 살펴보면, ( Spring 내부 코드 )\n\n1) getTransaction() : 직접 트랜잭션을 가져오고,\n2) commit() : 트랜잭션을 직접 커밋하고\n3) rollbackOnException() : 트랜잭션을 수동으로 롤백하고\n이를 통해 excute() 메소드는 트랜잭션 관리 로직을 직접 실행하는 메서드임을 확인할 수 있다. \n-> 예외 발생시 전체 롤백이 되게 됨을 알 수 있다. 실제로 테스트할때 충돌로 인한 예외 발생시 전체 롤백된 것을 확인하였다. \n대망의 batchUpdate 메소드를 살펴보자면,  ( Spring 내부 코드 ) \n이 메소드는 JDBC 기반 배치 업데이트 메서드로 여러개의 데이터를 한번에 업데이트하는 기능을 함을 알 수 있다.\n\n실제로 Sql에 해당 하는 코드가\n\n이렇게 앞전에 선언해놓았고, 이것을 매개변수로 받아서 hash 생성을 한꺼번에 하는 것을 알 수 있었다. \n🐳 회고\n이 작업을 수행하면서, 역시 직접해봐야 좀더 와닿음을 다시 한번 확인하는 순간이었다. 내가 이번에 작업한 해시는 이전부터 중복 검사를 위해 해놓았던 조치였다. 그러나 내가 한게 아니다보니, 해시 작업에 대한 이해도가 낮았다. \n이번에 해시 생성 작업을 하다보니, 왜 필요하고 어떤 코드를 사용했는지 나를 납득해가면서 작업을 하다보니 얻어가는 것도 많고 이해도도 높아짐을 알 수 있었다. 나중에 중복 검사가 필요할때 이 작업을 떠올리며 해시를 생각해내지 않을까? ㅎㅎ😄\n처음에 이 작업이 주어졌을때, 상용 데이터를 만진다는 것에 대한 두려움이 있었는데, '이 연차에 어떤 누가 몇십만개의 상용 데이터를 다루는 경험을 하겠어?' 하는 마음으로 임했다. 그래도 무서웠다. 혹시 내가 잘못할까봐 덜덜 떨면서 했다. 며칠 지난 지금, 이 작업을 회고하면 간단한데? 싶다. \n이 작업에서 가장 오래 시간이 걸렸던 부분은 해시 충돌 부분이었다. \n사실 상품 해시 충돌은 예상했지만, 아이템 해시 충돌은 예상 못했다. 왜냐면 상품 해시 충돌된 것을 해결하면(상품 충돌난 아이템까지 삭제했기에) 아이템 중복 기준에 상품 ID가 있기 때문에 아이템 해시 충돌은 전혀 나지 않을 것이라 예상했기 때문이다. 그런데 아이템 해시 충돌이 발생했다.\n앞선 코드에 보여줬던 것이 하나라도 충돌되면 멈추는 로직이기때문에 몇십만개의 아이템을 다 돌리면서 충돌날때마다 에러나는 상황은 너무나도 시간이 많이 들기때문에 \n\n에러나더라도 계속 돌아가도록 해당 부분을 try-Catch로 감싸서 충돌나서 에러가 나더라도 멈추지 않도록 했고, 페이지네이션으로 3000개씩 데이터를 돌렸더니 몇십만개의 데이터가 모두 거의 5분만에 다 돌아가서 모든 충돌을 잡아낼 수 있었다. 덕분에 빠르게 어떤 아이템들이 충돌났는지 확인할 수 있었다.\n 거의 40개의 아이템이 충돌났고, 상품으로 따지자면 3개 상품에 대한 아이템들이었다. 알고보니 임의로 수동으로 넣은 아이템 데이터에서 발생한 것이다. 따라서 해당 아이템들과 상품들을 삭제하니 해결되었던 문제였다. \n해시 충돌된 상품들과 아이템들이 다행히 모두 주문이 나간적이 없거나 테스트 상품이라서 삭제하기 어렵지 않았다. 물론 해당 상품과 아이템들을 삭제하기 위해 그 하위 집단인 벤더아이템, 딜벤더아이템, 딜 등의 삭제 작업들을 추가로 해줘야 하지만 오더가 없었기에 스위칭이 아닌 삭제로 해결할 수 있었던 작업이었다. 이번 작업을 통해 실무자와 커뮤니케이션도 해야하고 배포 작업도 걸려있어서 부담이 많이 가는 작업이었다. 하지만, 정말 값진 경험이었다. 앞으로 중복검사나 데이터 마이그레이션이 필요할때 이번 경험이 큰 도움이 될 것 같다.",
        "guid": "https://velog.io/@sweet_sumin/Hash..%EB%9D%BC%EB%8B%88",
        "isoDate": "2025-03-20T12:52:34.000Z"
      }
    ]
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "선을 긋기",
        "link": "https://www.thestartupbible.com/2025/03/where-to-draw-the-line.html",
        "pubDate": "Wed, 19 Mar 2025 21:33:00 +0000",
        "content:encodedSnippet": "이 공간을 통해서도 과거에 몇 번 글을 쓴 적이 있는데, 내가 2012년에 스트롱을 시작하고 첫 2년 동안 투자자로서 가장 스트레스를 많이 받았던 건, 우리가 투자한 회사의 창업가보다 내가 그 사업에 대해서 더 많이 알고, 내가 그 사업을 하면 더 잘할 수 있을 것 같은데, 대표가 항상 내 생각과 말과 다르게 생각하고 행동할 때였다. 아마도 이걸 보면 공감하는 투자자들이 꽤 있을 것이다.\n예를 들면, B2C를 해야 하는데 B2B를 하고 있거나, 아주 좁고 깊게 시장을 공략해야 하는데 넓고 얕게 공략하거나, 싸게 많이 팔아야 하는데 비싸게 적게 팔고 있거나, 뭐, 이런 것부터, 제품을 만드는 방법, 펀딩 전략, 채용 전략 등과 같은 중, 장기적인 회사의 방향에 대해서 하나부터 열까지 내가 동의하지 못하는 경우가 지금도 많지만, VC 초창기 시절에는 투자하는 회사마다 이런 갈등이 있었다. 지금 생각해 보면, 그땐 나는 VC가 아니라 VC 흉내를 내는 거였는데, 하루 종일 일하고 집에 와서 침대에 누우면, 엄청난 고민과 스트레스 때문에 잠을 설쳤는데, “왜 저분은 사업을 저렇게 할까? 내가 하면 훨씬 더 잘할 수 있을 것 같은데 왜 내 말을 안 들을까?”와 같은 생각을 하면서 참 괴로웠다.\n그런데, 더 많은 회사에 투자하고, 훨씬 더 많은 창업가들을 만나면서 이 부분에 대한 생각이 완전히 바뀌었다. 그리고 다행히도, 점점 더 시간이 지나면서 내가 VC 초창기에 스트레스받았던 이런 고민이 쓸데없고, 시간이 지나면서 내가 완전히 틀렸다는 게 점점 더 증명되고 있어서 다행이다.\n시간이 지나면서 우리가 과거에 투자한 회사들의 실적과 결과가 조금씩 명확해지고 있는데, 잘되고 있는 회사들은 실은 내가 주장했던 이 회사들이 가야 하는 방향과 취해야 하는 전략과는 완전히 다른 방법으로 사업을 하는 회사들이 훨씬 더 많다. 즉, 내가 창업가들에게 “사업은 이렇게 해야 한다.”라고 훈수했던 내용과 완전히 다른, 창업가들이 주장한 방식으로 사업한 회사들이 잘 되고 있다. 내가 주장했던 방식으로 사업을 했다면, 아마도 망했을 것이다. 이와 반대로, 내가 너무 세게 주장해서, 내 말을 듣고 본인의 의지와는 다르게 사업했던 창업가들은 지금은 회사가 망했거나 잘 못 하고 있다. 나 때문에 사업이 잘 안됐다고 할 것까진 아니지만, 그래도 이분들이 내 말은 무시하고, 본인이 생각하는 대로만 사업을 했다면, 어쩌면 더 잘 할텐데라는 생각을 요새 가끔 한다.\n내가 맞을 확률보단, 틀릴 확률이 훨씬 높다는 걸 직접 몸으로 체험하면서 요새 나는 내가 창업가들보다 사업을 더 잘 한다는 틀린 믿음으로 인한 고민을 잘 안 하고, 스트레스도 거의 안 받는다. 이건 생각해 보면 너무 당연한 건데, 나는 VC 초반에는 정말 아마추어 같은 생각을 했던 것 같다. 나 같이 수백 개 회사에 투자해서 한 회사에 대해 진지하게 고민하고 생각하는 시간이 짧고 얕은 초기 VC가 어떻게 1년 365일, 하루 24시간 한가지 사업과 제품에 대해서만 고민하는 창업가보다 그 사업을 더 잘 알거나, 잘할 수가 있겠는가? 솔직히 과거에 내가 몇몇 대표님들에게 “나 같으면 그렇게 안 할 것 같은데요” , “그 사업은 이렇게 해야죠” 등의 발언을 했던 걸 생각해 보면 얼굴이 약간 화끈거린다.\n그래서 어느 순간부터 나는 선을 명확하게 긋기 시작했다. 나는 사업을 운영하는 사람이 아니라 그 사업을 운영하는 믿을만한 창업가들에게 투자하고 이들을 응원하는 사람이라는 선을. 흑백논리로 따져보면 이건 네 사업이지, 내 사업이 아니라는 사고다. 그리고 이렇게 선을 명확하게 그으니까 긍정적인 일들이 생기고 있다. 일단, 내 스트레스 관리 차원에서 너무 좋다. 투자한 회사 대표가 사업을 잘 못 해도, 내가 할 수 있는 건 많이 없다고 명확하게 구분하니까 스트레스를 잘 안 받는다. 그리고, 내가 창업가들보다 사업을 못하는 게 명백하기 때문에, 내가 하는 이야기를 그들이 듣지 않아도 스트레스가 없다. 이런 생각으로 창업가들을 대하다 보니, 서로 웃는 얼굴로 할 말을 편안하게 할 수 있고, professional 한 관계가 오래 유지되는 걸 요새 직접 경험하고 있다.\n주주총회나 이사회에 가보면, 아직도 내가 투자한 회사의 대표보다 내가 사업을 더 잘할 수 있고, 시장을 더 잘 알고, 제품을 더 잘 만들 수 있다고 생각하는 VC가 있는데, 이들에게 같은 조언을 드리고 싶다. 투자자와 창업가 사이에는 명확한 선이 있고, 그 선을 되도록 넘지 않길 바란다. 왜냐하면, VC가 창업가보다 사업을 더 잘 알고, 잘할 수 있다는 생각은 100% 착각이기 때문이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/03/where-to-draw-the-line.html#respond",
        "content": "이 공간을 통해서도 과거에 몇 번 글을 쓴 적이 있는데, 내가 2012년에 스트롱을 시작하고 첫 2년 동안 투자자로서 가장 스트레스를 많이 받았던 건, 우리가 투자한 회사의 창업가보다 내가 그 사업에 대해서 더 많이 알고, 내가 그 사업을 하면 더 잘할 수 있을 것 같은데, 대표가 항상 내 생각과 말과 다르게 생각하고 행동할 때였다. 아마도 이걸(...)",
        "contentSnippet": "이 공간을 통해서도 과거에 몇 번 글을 쓴 적이 있는데, 내가 2012년에 스트롱을 시작하고 첫 2년 동안 투자자로서 가장 스트레스를 많이 받았던 건, 우리가 투자한 회사의 창업가보다 내가 그 사업에 대해서 더 많이 알고, 내가 그 사업을 하면 더 잘할 수 있을 것 같은데, 대표가 항상 내 생각과 말과 다르게 생각하고 행동할 때였다. 아마도 이걸(...)",
        "guid": "https://www.thestartupbible.com/?p=9400",
        "categories": [
          "Uncategorized",
          "inspiring",
          "people",
          "Strong",
          "vc"
        ],
        "isoDate": "2025-03-19T21:33:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "소프트웨어는 방법을 찾는다",
        "link": "https://www.thestartupbible.com/2025/03/software-will-find-a-way.html",
        "pubDate": "Sun, 16 Mar 2025 21:22:00 +0000",
        "content:encodedSnippet": "2월 26일 엔비디아가 4Q 실적 발표를 했다. 이렇게 큰 회사가 아직도 이렇게 빠르게 성장하면서 AI 시장을 장악하는 동시에 스스로 시장을 만들어가고 있다는 점에서 대단하다고 생각했다. 이때 나는 출장 중이었는데, 호텔에서 CNBC의 실적 발표 후 젠승황과의 인터뷰를 봤다. 여러 가지 재미있는 내용, 젠슨황의 자신감, AI가 가져올 큰 변화 등이 그대로 느껴지는 인터뷰 내용이었다.\n젠슨은 일도 잘하고, 영어도 완전히 미국인처럼 유창하게 하고, 자기 관리도 철저해서 언론에 나오면 항상 보기도 좋고 듣기도 좋은 CEO라고 생각한다. 그와의 인터뷰는 항상 배울 점이 많다고 생각하는데, 이 인터뷰에서 가장 기억에 남는 이런 의미심장한 말을 했다.\n“소프트웨어는 알아서 방법을 찾는다(software finds a way)”\n대충 무슨 말인진 모두 다 알 것이다. 엔비디아 하면 대부분의 사람이 GPU 칩을 만드는 하드웨어 회사라고 생각하는데, 실제로 엔비디아는 소프트웨어 회사라고 하는 게 더 정확한 설명이다. 이들은 사람들이 별로 관심을 두지 않을 때, 일찍이 GPU를 만들기 시작했고, 남들보다 너무 일찍 시작했기 때문에 지난 30년 동안 GPU 하드웨어에 대한 독보적인 경험과 노하우를 축적했다. 실은, 이 하드웨어 경험만으로도 따라잡기 힘들 텐데, 여기에 세계 최고의 소프트웨어 실력도 그동안 연마할 수 있었다. 결국엔 하드웨어를 잘 구동 시켜서 같은 환경에서 더 높은 성능을 뽑기 위해선 소프트웨어가 더 중요하다는 걸 그동안 배웠기 때문에, 내가 여기저기서 듣기로는, 엔비디아의 높은 기업가치는 하드웨어보단 이런 소프트웨어 실력 덕분인 것 같다.\n하드웨어는 한 번 만들면 고치기 힘들고, 그 구조 자체가 경직되어 있어서 유연성과는 거리가 멀다. 반면에, 소프트웨어는 추가 비용 없이 초기 버전을 얼마든지 수정하면서 비약적인 개선이 가능하다. 유연한 소프트웨어는 물과 같이 흐르면서, 물리적으로 제한된 하드웨어, 나라마다 다른 산업적 규제, 그리고 계속 변화하는 세상 속에서 기술을 진화시키고 최적화하면서 지금, 이 시점에 우리에게 가장 필요한 제품을 만들 수 있는 방향으로 제자리를 항상 찾아간다.\n그런데, 젠슨의 이 말을 조금 더 깊게 들어가서 해석해 본다면, 아마도 이분은 항상 방법을 찾는 소프트웨어를 찬양한 게 아니라, 이 소프트웨어를 직접 만드는 엔지니어들을 찬양하기 위해서 이 말을 한 게 아니었을까 생각한다.\n우리 투자사 창업가분들과 오랫동안 같이 일하다 보면, 항상 많은 걸 배우면서 느끼는데, 역시 가장 놀라운 건 이들의 생존력과 적응력이다. 아무리 상황이 좋지 않아도, 이들은 절대로 망하지 않고, 어떻게든 사업을 지속하기 위한 방법을 알아서 찾는다. 내가 이런 분들을 보고 바퀴벌레 같다는 존경의 비유를 자주 하는데, 절대로 빠져나갈 수 없는 공간에 바퀴벌레를 가두어도 결국엔 방법을 찾아서 탈출하는 상황과 비슷하다. 큰 위기에 봉착해서 더 이상 길이 안 보이는데, 우리의 창업가들은 무조건 방법을 찾는다.\n이런 사람들이 만든 소프트웨어는 젠슨이 말 한대로, 불가능을 가능케 할 것이고, 길이 없는 곳에서 길을 만들 것이다. 나는 젠슨의 인터뷰를 보면서, 이분이 엔비디아의 뛰어난 소프트웨어를 칭찬하는 게 아니라, 실제로는 뛰어난 엔지니어들을 찬양한다는 느낌을 강하게 받았다.\n알아서 방법을 찾는 사람들은 엔비디아의 소프트웨어 엔지니어만 있는 게 아니다. 우리가 매일 만나고 투자하는 창업가들이야말로 항상 알아서 방법을 찾는 사람들이다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/03/software-will-find-a-way.html#respond",
        "content": "2월 26일 엔비디아가 4Q 실적 발표를 했다. 이렇게 큰 회사가 아직도 이렇게 빠르게 성장하면서 AI 시장을 장악하는 동시에 스스로 시장을 만들어가고 있다는 점에서 대단하다고 생각했다. 이때 나는 출장 중이었는데, 호텔에서 CNBC의 실적 발표 후 젠승황과의 인터뷰를 봤다. 여러 가지 재미있는 내용, 젠슨황의 자신감, AI가 가져올 큰 변화 등이 그대로 느껴지는 인터뷰 내용이었다. 젠슨은 일도 잘하고,(...)",
        "contentSnippet": "2월 26일 엔비디아가 4Q 실적 발표를 했다. 이렇게 큰 회사가 아직도 이렇게 빠르게 성장하면서 AI 시장을 장악하는 동시에 스스로 시장을 만들어가고 있다는 점에서 대단하다고 생각했다. 이때 나는 출장 중이었는데, 호텔에서 CNBC의 실적 발표 후 젠승황과의 인터뷰를 봤다. 여러 가지 재미있는 내용, 젠슨황의 자신감, AI가 가져올 큰 변화 등이 그대로 느껴지는 인터뷰 내용이었다. 젠슨은 일도 잘하고,(...)",
        "guid": "https://www.thestartupbible.com/?p=9395",
        "categories": [
          "Uncategorized",
          "ai",
          "failure",
          "FoundersAtWork",
          "hardware",
          "hustle",
          "people",
          "software",
          "Strong"
        ],
        "isoDate": "2025-03-16T21:22:00.000Z"
      }
    ]
  },
  {
    "name": "지금 써보러 갑니다",
    "category": "개인",
    "posts": []
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "어떻게 하면 세금 환급 많이 받을까?",
        "link": "https://blog.toss.im/article/tossmoment-4",
        "pubDate": "Thu, 20 Mar 2025 11:52:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}연말정산이나 종합소득세 신고를 통해 누구는 세금을 돌려받는가 하면, 또 어떤 사람은 추가로 내야 하는 일이 일어나요. 심지어 같은 월급을 받더라도 이런 차이가 생기기도 하죠. 이는 미리 낸 세금과 실제 부담해야 할 세금이 다르기 때문이에요.\n언뜻 들으면 이게 무슨 말인가 싶지만, 나라에서 세금을 어떻게 걷어가는지 조금만 이해하면 세금 환급 구조를 쉽게 이해할 수 있어요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}우리는 세금을\n미리 내고 있어요\n우리나라는 납세의 의무가 있어 소득이 있는 대한민국 국민이라면 누구나 세금을 내야 합니다. 하지만 전국에서 동시다발적으로 발생하는 세금을 실시간으로 정확하게 계산하기란 현실적으로 어려운 일이겠죠. \n그래서 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}국세청은 효율적으로 세금을 걷기 위해 원천징수라는 방식을 사용합니다. 원천징수란 소득을 지급하는 쪽에서 소득세, 보험료 등을 포함해 일정 금액을 미리 떼고 세금으로 대신 납부하는 제도예요. 근로자의 세전·세후 월급의 차이가 큰 이유, 프리랜서가 돈을 받을 때 3.3%를 떼고 받는 이유가 바로 이 때문입니다.\n다만, 원천징수는 편의상 추정해 낸 세금이기 때문에 연말정산이나 종합소득세 신고를 통해 납세자가 1년 동안 실제로 부담했어야 할 세금을 정확히 산정하게 됩니다. 이렇게 최종적으로 결정된 세금을 결정세액이라고 하고, 1년간 원천징수로 미리 냈던 세금은 기납부세액이라고 불러요. 이 둘을 비교해 기납부세액이 더 크다면 환급을 받고, 반대로 적다면 세금을 추가로 납부해야 합니다. \n연말정산과 종합소득세 신고는 미리 낸 세금과 실제 부담해야 할 세금을 비교하고 조정하는 과정인 셈이에요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n내야 할 세금은\n이렇게 매겨져요\n소득금액, 과세표준, 산출세액, 결정세액. 이 네 가지만 알면 세금이 산출되는 구조를 쉽게 이해할 수 있어요.\n사람들은 소득을 버는 과정에서 일하는 데 꼭 필요한 비용을 쓰기도 하고, 매달 기본적인 생활비도 부담하며 살아가요. 그래서 나라에서는 일정 금액을 어느 정도 소득에서 빼주는데, 이를 소득공제라고 해요. 소득금액에서 소득공제를 적용한 금액을 과세표준이라고 합니다. 말 그대로 세금이 부과되는 기준이죠. 그리고 과세표준에 소득세율을 곱하면 산출세액이 정해져요.\n산출세액을 계산한 후에는 세액공제를 적용해 일정 금액을 차감합니다. 세액공제는 특정한 소비나 투자를 유도하기 위해 세금 자체를 줄여주는 제도예요. 세액공제까지 반영되면 내야 할 세금이 정해지는데, 이게 바로 결정세액이에요.\n한 문장으로 정리해볼게요. 소득공제로 과세표준을 정한 뒤 산출세액을 계산하고, 세액공제를 적용하면 납세자가 최종적으로 부담할 결정세액이 산출된다. 단계별로 차근차근 살펴보니 복잡하지 않죠?\n\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}과세표준이 높아질수록 세율도 높아지는 이유가 궁금하다면 .css-114ityv{white-space:pre-wrap;cursor:pointer;-webkit-text-decoration:underline!important;text-decoration:underline!important;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}이 아티클을 통해 확인해보세요.\n세금 환급,\n이렇게 하면 잘 받을 수 있어요\n같은 소득을 얻었더라도, 소득공제와 세액공제를 어떻게 활용하느냐에 따라 부과되는 세금은 크게 달라져요. 따라서 세금 환급을 잘 받으려면 소득공제를 활용해 과세표준은 최대한 줄이고, 다양한 세액공제 항목을 적용해 결정세액을 낮추는 게 중요해요.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}.css-123co55{font-size:19px;letter-spacing:0em;line-height:1.6;margin:24px 0 0;font-weight:400;color:var(--adaptiveGrey900);background-color:transparent;}\n✅ 근로소득자라면 연말정산 때 꼭 챙기세요!\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n주요 소득공제 항목: 인적공제, 카드 사용액, 현금영수증 사용액, 주택마련저축액, 전통시장 이용액\n주요 세액공제 항목: 연금저축·IRP 납입액, 기부금, 의료비, 교육비, 월세액\n\n\n✅ 프리랜서·사업자라면 종합소득세 신고할 때 꼭 챙기세요!\n\n주요 소득공제 항목: 필요경비, 인적공제, 주택마련저축액, 노랑우산공제\n주요 세액공제 항목: 연금계좌, 기장세액, 보험료, 의료비, 교육비\n\n\n각 공제 항목은 납세자의 소득 수준에 따라 적용 여부가 달라져요. 연말정산 공제에 대한 자세한 안내는 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}이곳에서, 종합소득세에 안내는 여기에서 확인할 수 있어요. \n세금 환급이 많다고\n꼭 좋은 걸까요?\n세금 환급을 많이 받으면 보너스를 받은 것 처럼 기분은 좋지만, 사실 환급금이 많은 게 꼭 좋은 것만은 아닙니다. 세금을 돌려받았다는 건 그만큼 내가 실제로 내야 할 세금보다 더 냈었다는 뜻이니까요. \n결국, 세금을 많이 낸 뒤 돌려받든, 적게 내고 추가로 납부하든 결과적으로는 같은 돈을 내는 셈이죠. 오히려 처음부터 세금을 덜 냈다면, 그 돈을 투자금으로 활용하거나 예·적금에 넣어 이자를 받을 수도 있었을 겁니다.\n그럼에도 불구하고\n내가 놓친 환급금\n세금 신고 기간이 지나면 작년 세금에 대해서는 다 끝났다고 생각하기 쉬워요. 하지만 그동안 미처 챙기지 못한 세금 환급액이 남아 있을 수도 있습니다. 전문가가 아닌 이상 공제 혜택을 매번 완벽하게 챙기기는 쉽지 않으니까요. 혹시 내가 더 돌려받을 수 있었던 세금을 놓친 건 아닐까 걱정된다면, 토스에서 확인해 보세요.\n토스 앱에서는 지난 5년간 납부한 세금 중 돌려받을 수 있는 금액이 있는지, 있다면 얼마나 받을 수 있는지 쉽게 확인할 수 있어요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 조수희 이제현",
        "content": "연말정산과 종합소득세 신고로 세금을 돌려받는 이유 ",
        "contentSnippet": "연말정산과 종합소득세 신고로 세금을 돌려받는 이유",
        "guid": "https://blog.toss.im/article/tossmoment-4",
        "isoDate": "2025-03-20T11:52:00.000Z"
      },
      {
        "title": "토스, 자동차보험 비교추천 서비스 2.0 오픈",
        "link": "https://blog.toss.im/article/carinsurance2",
        "pubDate": "Thu, 20 Mar 2025 02:12:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}보험사와 동일한 보험료 안내\n간단한 본인 인증 절차만으로 내 자동차 정보 불러오기 가능\n놓치지 쉬운 특약 일괄 조회 시스템 도입으로 금융소비자 편익 증대\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n토스(운영사 비바리퍼블리카, 대표 이승건)가 ‘자동차보험 비교추천 서비스 2.0(이하 차 보험 비교하기)’을 시작한다고 20일 밝혔다. 지난해 1월 19일 첫 선을 보인 ‘차 보험 비교하기’를 보다 직관적이고 편리하게 고도화했다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n차 보험 비교하기는 토스에서 보험사 상품을 한눈에 비교하고 추천받을 수 있는 서비스다. 자동차 보험 신규 가입 또는 갱신을 원하는 금융소비자는 복잡한 절차 없이 간편하게 보험료를 확인하고 가입을 진행할 수 있다.\n이번 개선에서 가장 눈에 띄는 변화는 보험사와 동일한 보험료를 확인할 수 있다는 점이다. 자동차 보험은 의무가입 보험으로, 일반적으로 만료 30일 전부터 갱신 안내가 이루어진다. 토스도 동일 시점부터 갱신 대상자가 보험료를 확인할 수 있도록 했다. 즉, 자동차 보험 만기일이 4월 19일인 계약자부터 보험사 플랫폼과 같은 금액을 조회할 수 있다.\n기존에는 소비자가 자동차 모델, 보험 시작일, 예상 주행 거리 등을 직접 입력해야 했으나, 개선된 서비스에서는 이름과 주민등록번호 등 간단한 정보만 입력하면 본인이 소유한 자동차 모델, 보험 가입 만기일 등 정보를 자동으로 불러올 수 있다.\n또한, 걸음 수나 대중교통 이용 내역을 기반 등으로 추가 할인이 적용된 특약도 토스에서 별도 절차 없이 확인할 수 있다. 관련 데이터를 자동으로 연동해 이용자가 직접 정보를 입력하지 않아도 최종 금액을 안내받을 수 있도록 검증 시스템을 개선했기 때문이다. 과거에는 보험사 홈페이지에서 수동으로 입력해야 했기 때문에 혜택을 온전히 받기 어려웠던 불편함도 해결했다.\n토스와 제휴한 보험사는 총 10개로, ▲삼성화재다이렉트보험 ▲DB손해보험 ▲현대해상다이렉트보험 ▲KB손해보험 ▲메리츠화재보험 ▲캐롯손해보험 ▲AXA다이렉트보험 ▲하나손해보험 ▲흥국화재보험 ▲롯데손해보험(4/1입점)이 있다.\n이 서비스는 토스 앱 > 전체 탭 > 자동차 > ‘차 보험 비교하기’ 또는 토스 앱 > 검색(돋보기) > ‘차 보험 비교하기’ 로 이용 가능하다.\n토스 관계자는 “이용자가 보다 쉽고 정확하게 자동차 보험을 비교하고 선택할 수 있도록 서비스를 개선했다”며 “앞으로도 사용자 편익을 극대화할 수 있도록 자동차 금융 서비스를 지속적으로 혁신해 나아갈 것”이라고 말했다.",
        "content": "보험사와 동일한 보험료 안내",
        "contentSnippet": "보험사와 동일한 보험료 안내",
        "guid": "https://blog.toss.im/article/carinsurance2",
        "isoDate": "2025-03-20T02:12:00.000Z"
      },
      {
        "title": "토스플레이스, 사장님 고객 확보 비법 전수…무료 웨비나 성료",
        "link": "https://blog.toss.im/article/Tossplacewebinar",
        "pubDate": "Thu, 20 Mar 2025 01:00:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}지난 19일 열린 ‘비즈니스 스쿨’ 1회, 손님 유치 실전 전략 강연 제공\n예비 창업자 및 초기 창업자의 뜨거운 호응으로 만족도 4.5점 기록\n“앞으로도 소상공인과의 동반 성장 위해 다양한 프로그램 개최할 것”\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n\n비바리퍼블리카(토스)의 결제 단말기 및 포스(POS) 솔루션 공급 자회사 토스플레이스(대표 최재호)가 제 1회 비즈니스 스쿨 웨비나를 성공적으로 마쳤다고 20일 밝혔다.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n지난 19일 열린 비즈니스 스쿨은 도움이 필요한 예비 창업자와 초기 창업자에게 고객 유치 전략에 대한 실전 강연을 제공하는 자리였다. 신규 고객 확보와 SNS 홍보 비법, 단골 유치 및 운영 방법 등 현실적인 고민을 덜어주고 전문가의 노하우를 전수해주고자 온라인 무료 강의를 열었다.\n1부는 창업을 준비 중인 예비 창업자를 위해 브레멘 F&B 김찬우 대표가 연사로 나섰다. 동네 장사에서 시작해 연매출 50억 원을 달성한 그는 신규 고객을 사로잡는 방법과 SNS 마케팅 꿀팁을 제공했다. 2부는 토스플레이스 김민주 프로젝트 매니저(PM)가 단골은 늘리고 비용은 줄이는 대박집들의 매장 운영법을 전달했다.\n강연 신청을 받기 시작함과 동시에 3,000명 이상의 신청자가 몰려 드는 등 처음 열린 웨비나임에도 반응이 뜨거웠다. 유튜브 라이브가 진행되는 오후 3시부터 5시까지 2시간 동안 오픈 초기 추천 이벤트, 인플루언서 협업 노하우, 직원 관리 노하우 등 실질적으로 매장 운영 시 궁금했던 질문들이 쏟아졌다.\n특히 토스플레이스가 직접 운영하는 카페 ‘심플리시티’를 통해 얻은 고객 재방문 노하우를 가감없이 나눠 좋았다는 댓글도 있었다. 강연이 끝난 후 진행한 만족도 조사 또한 4.5점(5점 만점 기준)을 기록하며 창업자의 고민을 해결하는 데 큰 도움을 준 것으로 나타났다. 해당 강연은 다시보기를 통해 언제든 재시청 가능하다.\n토스플레이스는 앞으로도 정기적인 비즈니스 스쿨 강연을 개최하는 등 창업에 어려움을 겪고 있는 소상공인과의 동반 성장을 위해 긴밀한 협력을 이어갈 예정이다.\n토스플레이스 신중희 사업총괄은 \"이번 비즈니스 스쿨 웨비나를 통해 고객 확보에 어려움을 겪는 사장님들께 도움을 드릴 수 있어 기쁘다”며 “앞으로도 다양한 맞춤형 프로그램을 통해 소상공인의 성장을 지원하고자 한다\"고 말했다.",
        "content": "손님 유치 실전 전략 강연 제공으로 만족도 4.5점 기록",
        "contentSnippet": "손님 유치 실전 전략 강연 제공으로 만족도 4.5점 기록",
        "guid": "https://blog.toss.im/article/Tossplacewebinar",
        "isoDate": "2025-03-20T01:00:00.000Z"
      },
      {
        "title": "원금을 3배 이상 불려주는 내일채움공제 3년형",
        "link": "https://blog.toss.im/article/money-policies-36",
        "pubDate": "Mon, 17 Mar 2025 00:23:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}내일채움공제란?\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1kxrhf3{white-space:pre-wrap;}중소·중견기업 근로자의 장기 재직과 자산 형성을 지원하기 위한 정책금융 상품이에요. 중소·중견기업 근로자가 일정 기간 납부금을 적립하면, 기업의 지원금이 더해져 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}만기 시 원금의 세 배가 넘는 환급금을 돌려받을 수 있어요. 이번에 출시된 신규 ‘내일채움공제’는 최소 가입기간이 5년에서 3년으로 축소됐어요.\n\n월 10만 원씩 넣으면 3년 뒤 1,224만 원이 돼요\n내일채움공제는 근로자와 기업이 1:2 이상의 비율로 금액을 납부하게 돼요. 월 10만 원씩을 납부한 근로자는 원금 360만 원에 기업 지원금 864만 원(24만 원×36개월)을 더한 1,224만 원을 돌려받을 수 있어요.\n복리 이자 수익까지 더하면 최종 금액은 1,277만 원(세전, 변동 가능)으로 불어나요. 재직자 입장에선 360만 원을 내고 세 배가 넘는 목돈을 환급받을 수 있으니 연이율로 따지면 100%를 넘는 초고금리 상품인 셈이에요.\n가입 대상 및 조건\n중소기업 및 중견기업에 재직자를 대상으로 해요. 근로자의 경우 기간제 및 단시간 근로자가 아니어야 해요. \n다만 임신 및 육아, 가족 돌봄 등을 이유로 근로시간을 단축한 경우라면 가입이 가능해요. 만 34세 이하만 가입할 수 있었던 청년내일채움공제(2024년 폐지)와 달리 별도의 나이 제한은 없어요.\n가입 기간\n최소 3년 ~ 10년\n가입 방법\n내일채움공제는 근로자와 기업이 모두 신청해야 이용할 수 있는 상품이에요. 중소벤처기업진흥공단 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}내일채움공제 홈페이지(www.sbcplan.or.kr)에서 기업과 근로자 모두 회원가입 후 신청할 수 있어요.\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n내일채움공제 관련 자주묻는 질문\nQ. 중소·중견기업 사업주와 재직자가 매월 납입하는 금액은 고정인가요?\n가입할 때 사업주와 재직자가 각각 나눠서 낼 금액을 정해요. 월 최소 34만 원부터 300만 원까지 가능해요. 가입 기간 중에도 납입 금액을 조정할 수 있어요. 변경은 내일채움공제 누리집이나 관할지역본(지)부 담당자를 통해 신청할 수 있어요.\nQ. 가입 기간을 중간에 연장할 수도 있는지 궁금해요.\n1년 단위로 연장이 가능해요. 다만 기간을 줄이는 건 불가하니 처음 가입 시 가입 기간을 신중히 선택해주세요.\nQ. 원하는 날짜에 납입하면 되나요? 정해진 날짜가 있나요?\n매월 지정일(5·15·25일 중 선택)에 자동이체 방식으로 납입금을 낼 수 있어요. 다만 최초 가입 후 1회차 납입은 지정일과 상관없이 청약이 승인된 날로부터 3영업일에 이뤄져요.\nQ. 이체 예정일에 돈을 내지 못하면 어떡하죠?\n자동이체 지정일에 내지 못한 공제부금은 다음 납부일까지 총 2회에 한해 자동이체 방식으로 수납돼요. 예를 들어 매월 15일이 납부일인데 이날 내지 못했다면 다음달 15일이 돌아오기 전 25일과 5일, 두 차례에 걸쳐 자동이체돼요. 만일 25일에 전액 납입하면 익월 5일에는 수납이 되지 않으니 안심하세요.\n다만 익월 5일까지도 납입이 이뤄지지 않으면 해당 월은 내지 않은 것으로 처리돼요. 미납금은 홈페이지를 통해 납부 신청을 할 수 있어요. 이외 별도 납입을 원할 경우에는 고객센터(1588-6259) 또는 지역본(지)부로 문의해주세요. 기업 또는 재직자가 6개월 이상 공제부금을 내지 못할 경우에는 공제계약이 끝날 수 있으니 주의해야 해요.\nQ. 납입금을 미리 내거나 납부를 미루는 것도 가능한가요?\n둘 다 가능해요. 최소 1개월분 이상부터 잔여 계약 기간 내 총 납입금까지 미리 내는 것이 가능합니다. 재직자가 가입 기간 동안 병역의무를 이행하거나 육아휴직에 돌입한 경우 근로를 제공할 수 없기 때문에 해당 기간 동안은 납부가 유예돼요. 질병·상해로 입원하거나 회사 사정으로 일할 수 없는 경우에도 최대 6개월간 납부를 미룰 수 있어요. 재직자에게 일시적으로 납입금을 내지 못할 만한 경제적 사정이 생겼을 때도 12개월 동안 납부 유예가 가능해요.\nQ. 참여 기업에는 어떤 혜택이 있나요?\n참여 기업은 최소 3년 이상 일할 수 있는 근로자를 선발, 업무의 연속성을 확보할 수 있어요. 세금 혜택도 무시할 수 없어요. 기업 납입금 전액을 비용으로 인정받을 수 있고 연구인력개발비 세액공제 혜택도 적용받을 수 있어요. 중진공 지원 사업 평가·선정 시 우대 혜택도 받을 수 있죠.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 이지영 Graphic 조수희 윤자영",
        "content": "월 10만 원씩 넣으면 3년 뒤 1,224만 원이 돼요.",
        "contentSnippet": "월 10만 원씩 넣으면 3년 뒤 1,224만 원이 돼요.",
        "guid": "https://blog.toss.im/article/money-policies-36",
        "isoDate": "2025-03-17T00:23:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]