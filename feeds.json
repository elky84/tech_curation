[
  {
    "name": "ㅍㅍㅅㅅ",
    "category": "큐레이팅",
    "posts": [
      {
        "creator": "광화문덕",
        "title": "비트코인 VS 튤립 버블 논쟁",
        "link": "https://ppss.kr/archives/269141",
        "pubDate": "Mon, 12 May 2025 09:02:16 +0000",
        "content:encodedSnippet": "비트코인은 등장과 동시에 ‘현대판 튤립 버블’이라는 낙인을 피할 수 없었다. 17세기 네덜란드를 뒤흔든 튤립 투기 열풍처럼, 비트코인 역시 급등과 폭락을 반복하며 ‘광기 어린 자산’이라는 비유의 중심에 섰다. 지금 다시 묻고 싶다.\n과연 이 비교는 정당한가? 튤립과 블록체인은 같은 궤적 위에 놓여 있는가?\n\n이 질문을 출발점으로 비트코인과 튤립 버블의 유사성과 차이를 짚고, 그 이면에 감춰진 경제적 열광, 기술적 전환, 그리고 자산에 대한 우리의 인식을 심층적으로 분석해 보기로 한다.\n출처: CNBC\n \n튤립 버블, 최초의 자본주의 광기\n17세기 초, 네덜란드는 유럽에서 가장 부유한 국가 중 하나였다. 해상 무역의 중심지였던 암스테르담은 세계 최초의 주식회사인 네덜란드 동인도회사(VOC, 1602년 설립)를 기반으로 초기 자본주의 금융 시스템을 꽃피우고 있었다. 공영 증권거래소, 국제 신용 시스템, 보험 산업까지 발달한 이 도시는 사상 초유의 유동성 시대를 열었다. 그 결과, 상인과 기술자, 항해사, 법률가 등 신흥 중산층과 상류 계층은 잉여 자본을 새로운 투자처에 쏟아부을 준비가 되어 있었다.\n바로 그때 오스만 제국을 거쳐 들어온 이국적인 식물, 튤립이 등장했다. 초기에는 단순한 관상용 식물에 불과했지만 일부 품종은 ‘튤립 브레이킹 바이러스(Tulip breaking virus)’라 불리는 바이러스 감염으로 인해, 꽃잎에 마치 수채화처럼 번지는 줄무늬가 생겼다.\n사진: Unsplash의Giu Vicente\n정상적인 튤립은 단색으로 피어나지만, 이 바이러스에 감염되면 색이 깨지듯(break) 흩어진 듯한 모양이 나타나며, 꽃잎은 마치 그림처럼 예측 불가능한 패턴을 띠게 된다. 당시 사람들은 이 현상이 질병 때문이라는 사실을 몰랐다. 오히려 그것을 자연이 허락한 신비로운 예술로 여겼고, 이 불완전하고 비대칭적인 패턴을 ‘희귀성의 극치’, ‘자연이 허락한 유일무이한 무늬’로 인식했다.\n즉, 튤립 브레이킹 바이러스(Tulip Breaking Virus)에 감염된 일부 품종이 세밀한 줄무늬와 얼룩이 있는 꽃잎(세멸색)을 만들어내며 엄청난 희귀성과 예술적 가치를 지닌 수집품으로 변모한 것이다.\n무엇보다 이 바이러스로 인해 만들어진 튤립은 재현이 불가능했다. 이렇게 만들어진 희귀 품종은 예측 불가능성과 유일성이라는 요소를 더해 가격을 폭발적으로 끌어올렸다. 가장 유명한 품종 중 하나인 ‘영원한 황제(semper augustus)’는 1636년 말 한 뿌리가 5,500 플로린에 거래되었다는 기록이 남아 있다. 당시 암스테르담 운하변 고급 주택 한 채의 평균 가격이 약 3,000 플로린이었음을 감안하면, 이는 단 한 송이 꽃이 도시 부동산보다 비쌌던 시대가 실제로 존재했음을 의미한다.\n당시 영원한 황제(semper augustus)를 그린 그림. 화가는 알 수 없으며 1640년 이전에 그린 것으로 알려져 있다. 현재 미국의 노턴 사이먼 박물관에 전시되어 있다.\n \n튤립의 신화, 하루아침에 무너지다\n그러나 1637년 2월, 네덜란드 하를럼(Haarlem) 지역의 한 경매장에서 단 한 건의 거래가 유찰되며 분위기는 돌변했다. 불과 몇 주 전까지만 해도 수천 플로린에 거래되던 튤립 뿌리는, 그날 이후 단 한 명의 구매자도 나타나지 않는 ‘시장 실종’ 상태에 빠졌다.\n이 한 건의 유찰은 ‘튤립이 더 이상 오르지 않을 수도 있다’는 불신의 신호탄을 낳았다. 불신은 곧 공포와 투매로 번졌다. 계약은 줄줄이 파기되었고, 한순간에 가격은 90% 이상 폭락했다. 가장 비싼 품종은 단 며칠 만에 가축 몇 마리 가격으로 전락했으며, 시장에는 공황 상태에 가까운 침묵이 이어졌다. 투기의 광기와 신뢰의 붕괴가 맞물린 그 순간, 세계는 역사상 최초로 기록된 대규모 자산 버블 붕괴를 목격했다.\n이 사건은 훗날 경제학자들과 역사학자들에 의해 ‘튤립 마니아(Tulip Mania)’라는 이름으로 불리게 되었고, 자산 거품과 투기 심리를 설명하는 고전적 사례의 원형으로 남게 되었다.\n \n디지털 시대, 비트코인 등장\n세기가 바뀌고 370여 년이 흐른 2009년, 전혀 다른 형태의 자산이 등장했다. 눈에 보이지 않고, 만질 수도 없으며, 정부도 발행하지 않는 비트코인(Bitcoin)이 그것이다.\n처음에는 ‘코인’이라기보다는 하나의 기술적 실험에 가까웠다. 발행자는 사토시 나카모토라는 정체불명의 인물 혹은 집단. 그는 중앙은행도, 국가도, 기업도 아닌 암호학과 분산 시스템을 바탕으로 작동하는 탈중앙 디지털 화폐를 제안했다. 비트코인의 모든 거래는 ‘블록체인(Blockchain)’이라 불리는 공개 분산 장부에 기록되고, 누구도 이를 위조하거나 되돌릴 수 없도록 설계됐다. 이는 역사상 처음으로, 제3자 없이도 신뢰를 자동으로 형성하는 화폐 시스템이었다.\n사진: Unsplash의 André François McKenzie\n출시 초기, 비트코인은 아무에게도 주목받지 못했다. 1BTC의 가격은 고작 0.003달러였다. 심지어 2010년에 1만 비트코인으로 피자 두 판을 주문한 ‘비트코인 피자 데이’가 상징처럼 회자될 만큼, 실용성과 생존 가능성조차 의심받는 프로젝트였다.\n그러나 시간이 흐르며 상황은 달라졌다. 사이버 리버테리언, 해커 집단, 기술 공동체, 금융 엣지 투자자들이 비트코인의 구조적 속성에 주목하기 시작한 것이다.\n발행량이 제한된 희소성\n누구도 막을 수 없는 검열 저항성\n국가의 경계를 초월한 탈중앙·탈국가성\n이들은 비트코인을 중앙 통제를 벗어난 새로운 금융 질서의 가능성으로 보기 시작했다. 특히 2020년 이후 팬데믹이 세계를 덮치고 각국 중앙은행이 제로금리 정책과 대규모 양적완화(QE)로 대응하면서, 시장에는 초과 유동성이 넘쳐났다. 투자자들은 인플레이션을 피할 수 있는 대체 자산을 찾았고, 그 답 중 하나가 비트코인이었다.\n2021년, 비트코인은 마침내 6만 달러를 돌파하며 역사적 정점을 찍었다. 불과 10여 년 만에 2천만 배의 가치 상승을 기록한 것이다. 이것은 단순한 자산의 부상이 아니라, 신뢰와 화폐에 대한 인식 자체의 전환이었다.\n하지만 비트코인의 궤적은 언제나 급등과 급락이 교차했다. 누군가는 그것을 ‘디지털 도박판’이라 불렀고, 또 다른 누군가는 ‘21세기의 디지털 금’이라 찬양했다.\n극단적인 변동성\n창시자의 익명성\n규제 회피적 글로벌 구조\n불확실한 내재 가치\n이 모든 요소는 비트코인을 튤립 버블과 나란히 놓는 비교 논리를 가능하게 만들었다.\n \n‘튤립’과 ‘코인’은 다르다?\n17세기 네덜란드에서 거래되던 튤립 한 뿌리는, 아름답고 희귀한 물리적 실체를 지닌 자산이었다. 그러나 그 사용 가치는 감상과 과시에 국한된 소비재에 불과했다. 일부 품종은 희귀한 색조와 무늬, ‘튤립 브레이킹 바이러스’에 의해 만들어진 예측 불가능한 무늬 덕분에 엄청난 가격에 거래되었지만, 결국 그것은 시간이 흐르면 자연 증식이 가능한 식물이었다. 즉, 물리적 희소성은 유지되기 어려웠고, 자산으로서의 내재 가치는 시장의 열망에만 의존했다.\n튤립은 식탁 위의 빵처럼 인간을 먹여 살릴 수도 없고, 건축 자재처럼 어떤 구조를 세울 수도 없었다. 그 가격은 결국 ‘이 뿌리를 더 비싸게 사줄 다음 사람이 존재할 것이라는 믿음’에 기반한 것이었고, 그 믿음이 무너진 순간, 튤립은 꽃이 아니라 경제적 망상이 되었다.\n반면, 비트코인은 실체가 없음에도 불구하고 실체를 능가하는 기술적·경제적 구조를 내포하고 있다. 그 핵심은 블록체인 기술, 즉 모든 거래를 투명하게 기록하고 검증하는 분산원장 시스템이다. 이 시스템은 중앙의 통제 없이도 신뢰를 구축하며, 누구도 임의로 조작하거나 변조할 수 없다. 신뢰를 코드로 구현한 기술, 그것이 비트코인의 본질이다.\n또한 비트코인은 총 발행량이 2,100만 개로 고정되어 있다. 이는 금보다도 더 엄격한 희소성을 의미하며, 중앙은행이 찍어내는 화폐처럼 인위적 공급 확대나 인플레이션으로부터 자유로운 구조를 가진다.\n비트코인은 단지 보관하거나 사고파는 자산이 아니다. 누구나 제3자의 개입 없이 개인 간 직접(P2P) 거래를 수행할 수 있으며, 국경을 초월한 송금에서도 빠르고 저렴한 수수료를 제공한다. 더 나아가, 이더리움과 같은 스마트 계약 플랫폼과 결합되면, 탈중앙 금융(DeFi) 생태계 및 토큰화 자산 시스템으로 확장될 수 있는 잠재력도 지닌다.\n이처럼 비트코인은 단순한 가격 등락을 넘어, 디지털 화폐, 가치 저장 수단, 그리고 차세대 금융 인프라로서의 기능을 복합적으로 수행하는 자산이다. 그 존재는 물리적 실체 없이도, 프로토콜과 수학적 신뢰, 그리고 네트워크 효과 위에 구축된 새로운 디지털 질서다. 그것이 튤립과 본질적으로 다른 이유다.\nImage by rawpixel.com on Freepik\n \n두 거품의 배경에는 ‘돈’이 있다\n튤립 버블이 발생한 17세기 초반, 네덜란드는 유럽에서 가장 부유하고 진보적인 국가였다. 세계 최초의 주식회사인 동인도회사(VOC)를 중심으로 한 무역 제국은 막대한 부를 본국으로 끌어들였고, 암스테르담은 근대 금융의 실험장으로 떠올랐다.\n공영 증권거래소, 이중 회계장부, 국제 신용거래. 당시로선 파격적인 제도들이 도입되며 자본주의의 기초 구조가 형성되었다. 그 결과, 상인·기술자·법률가로 구성된 신흥 시민계급에는 생존을 넘어선 ‘자산 증식’이라는 개념이 생겨났다.\n그러나 문제는, 그들이 가진 돈이 갈 곳이 마땅치 않았다는 점이었다. 오늘날처럼 다양하게 분화된 금융상품이 존재하지 않았던 그 시대에, 그들이 선택한 자산은 뜻밖에도 튤립의 한 뿌리였다. 특히 희귀한 무늬와 색조를 지닌 튤립은, 단지 식물이 아니라 사회적 계급을 과시하는 수단, 수집 가능한 예술품, 그리고 결국엔 가격 상승을 기대하는 투기 대상으로 변모했다. 투기는 본능이 아니라, 방향을 잃은 자본의 필연적 선택이었다.\n그로부터 약 400년 후, 비슷한 흐름이 또 한 번 반복됐다. 2008년 글로벌 금융위기 이후, 전 세계 중앙은행들은 경기 부양을 위해 제로금리 정책과 양적완화(QE)를 단행했고, 특히 2020년 팬데믹의 충격 이후에는 미국 연준(Fed)을 중심으로 역사상 유례없는 수준의 초저금리·초과 유동성이 공급되었다.\n \n시장, ‘돈의 홍수’에 잠기다\n주식, 부동산, 미술품에 이르기까지 거의 모든 자산 가격이 동반 상승했고, 투자자들은 점차 금, NFT, 비트코인 같은 대체 자산(Alternative Assets)에 눈을 돌리기 시작했다. 그중에서도 가장 빠르게 수익률을 증명해 낸 것이 바로 비트코인이었다.\n희소성과 탈중앙성, 그리고 기술적 서사를 무기로, 비트코인은 ‘디지털 금’이라는 내러티브를 형성했다. 특히 전통 자산을 불신하거나, 중앙 통제에 대한 회의감을 가진 젊은 세대와 기술 기반 투자자들에게는 비트코인이야말로 미래형 자산이자 새로운 질서의 상징처럼 보였다. 결국, 튤립이든 비트코인이든, 그 시작점은 다르지만 불을 붙인 건 같은 연료였다.\n쌓인 돈은 방향을 찾고, 방향을 잃은 돈은 거품을 만든다.\n\nImage by mamewmy on Freepik\n \n‘가치 저장’과 ‘투기’ 사이\n비트코인은 어느 순간부터 ‘디지털 금(Digital Gold)’이라는 별칭을 얻게 되었다. 이는 단순한 은유나 마케팅 용어가 아니다. 금처럼 희소하고, 채굴이 가능하며, 중앙 기관 없이도 신뢰를 유지하는 자산이라는 점에서, 일부 투자자들은 비트코인을 21세기형 가치 저장 수단(Store of Value)으로 간주하기 시작했다.\n그러나 동시에, 비트코인을 ‘투기성 자산(Speculative Asset)’으로 보는 시각도 뿌리 깊다. 극심한 가격 변동성, 실질적 사용처의 불확실성, 그리고 무엇보다, “더 비싸게 사줄 누군가가 있다는 전제”에 기반한 거래 구조가 문제로 지적된다. 이러한 특성은 17세기 튤립 시장과 닮아 있다는 비판을 가능하게 한다.\n\n비트코인은 금과 달리 물리적 실체는 없지만 실체를 대신하는 ‘코드 기반 신뢰’를 제공한다. 모든 거래는 블록체인이라는 분산원장에 영구적으로 기록되며, 누구도 이를 위조하거나 삭제할 수 없다. 이러한 구조는 비트코인을 단순한 자산을 넘어, 거래 인프라로 기능할 수 있는 기술적 기반으로 확장시킨다. 그럼에도 불구하고 해결되지 않은 핵심 문제가 있다. 바로 극단적인 가격 변동성이다.\n2021년, 비트코인은 6만 달러를 돌파했지만 불과 몇 달 사이 3만 달러 아래로 급락했고, 다시 상승하며 반복적인 롤러코스터 장세를 보였다. 이러한 흐름은 전통적인 가치 저장 수단이 갖추어야 할 안정성을 위협한다. 그래서 여전히 많은 사람들에게 비트코인은 ‘디지털 시대의 도박판’, 혹은 ‘기대와 공포 사이에 놓인 실험적 자산’으로 인식되고 있다.\n \n시각의 충돌 : 신뢰할 것인가, 회의할 것인가\n비트코인을 바라보는 시선은 전문가들 사이에서도 극명하게 엇갈린다.\n그것은 금융의 미래인가, 아니면 잘 포장된 망상인가? 새로운 질서의 실험장인가, 혹은 공포 위에 세워진 투기판인가?\n\n먼저, 알레한드로 레예스(Alejandro Reyes)의 말을 들어보자. 버클리대학교 경제사 교수이자 금융 투기 버블 연구의 권위자인 그는, 튤립 버블과 비트코인을 자주 비교 대상으로 삼아왔다. 그는 이렇게 말한다.\n튤립은 일시적인 문화적 열광이었다면, 비트코인은 기술 기반의 시스템 전환이다.\n\n즉, 두 자산은 가격의 등락은 닮았을지언정 태어난 맥락, 확장성, 구조적 기능 면에서 본질적으로 다르다는 것이다. 그는 이렇게 주장한다.\n튤립은 단지 비싸졌을 뿐이지만, 비트코인은 금융 질서 자체를 실험한다.\n\nIMF(국제통화기금)도 비슷한 시각을 보였다. 2021년 글로벌 금융안정성 보고서에서 IMF는 다음과 같이 평가했다.\n내재 가치에 대한 논쟁은 지속되지만, 블록체인 기반 디지털 자산은 국경을 초월한 금융 인프라로 기능할 수 있는 구조적 기반을 갖추고 있다.\n\n이는 비트코인이 단순한 투기 대상이 아니라, 국제 금융의 기술적 대안 인프라로서 일정 수준의 가능성을 인정한 평가로 해석된다. 그러나 반대편에는 여전히 단호한 회의론자들도 존재한다. 대표적인 인물이 바로 폴 크루그먼(Paul Krugman)이다. 노벨경제학상 수상자이자 《뉴욕타임즈》 칼럼니스트로 잘 알려진 그는, 비트코인을 ’21세기의 투기 도구’로 규정하며 강하게 비판했다.\n비트코인은 아무것도 생산하지 않으며, 본질적으로 공포 기반의 투기 구조를 갖추고 있다. 가격은 믿음으로 유지되지만, 믿음은 급격히 무너질 수 있다.”\n\n그는 화폐가치의 근간은 결국 신뢰를 바탕으로 한 법정화폐 시스템과 정부 보증에 있다고 본다. 그 어떤 기술적 구조도 이를 대체할 수 없다는 것이다.\n이처럼 비트코인은 금융 한쪽에서는 금융 질서의 진화, 다른 한쪽에서는 디지털 시대의 망상으로 해석되고 있다. 금융 역사학자, 국제기구, 노벨상 수상 경제학자까지 각기 다른 위치에서 다른 언어로 이 자산을 해석하고 있지만, 그 갈라진 평가의 폭은 오히려 한 가지 사실을 말해준다.\n비트코인은 아직 정의되지 않았다. 그리고 그 정의되지 않은 상태 자체가 이 자산의 가능성과 동시에, 가장 큰 위험이기도 하다.\n\n \n비트코인은 과연 ‘디지털 금’이 될 것인가\n비트코인을 둘러싼 가장 상징적인 수사는 단연 ‘디지털 금(Digital Gold)’이라는 개념이다. 이 말은 단순한 마케팅 용어가 아니라, 자산으로서의 비트코인을 어떻게 인식할 것인가에 대한 철학적 프레임을 반영한다.\nImage by mamewmy on Freepik\n금(Gold)은 수천 년 동안 인류 문명과 함께해온 궁극의 가치 저장 수단(Store of Value)이었다. 그 가치는 희소성, 물리적 내구성, 대체 불가능성, 그리고 어느 국가도 통제하지 못하는 보편성에 기반했다. 이러한 속성은 인플레이션과 금융 위기 속에서도 금이 법정화폐의 대안으로서 생존해 온 핵심 이유였다. 그렇다면 비트코인은 금과 같은 조건을 충족할 수 있는가?\n희소성: 총발행량이 2,100만 개로 고정되어 있어, 공급이 구조적으로 제한된다.\n탈중앙성: 정부·은행·기업의 통제를 받지 않는 독립적 시스템이다.\n위·변조 불가능성: 블록체인 기술을 기반으로 모든 거래가 영구적으로 기록되고 검증된다.\n검열 저항성: 누구도 사용자의 송금이나 보유를 막을 수 없는 구조다.\n이러한 특성은 분명 금과 유사하며, 일부에서는 오히려 금보다 더 정교한 희소성과 신뢰 메커니즘을 갖췄다는 평가도 나온다. 실제로 글로벌 자산운용사와 기술기업들은 비트코인을 자산 포트폴리오에 포함시키기 시작했고, 2024년 미국 증권거래위원회(SEC)가 비트코인 현물 ETF를 승인한 사건은, 그 흐름이 제도권으로 진입했음을 상징적으로 보여준 계기였다.\n그러나 ‘디지털 금’이라는 수식어가 붙기에는 여전히 넘어야 할 현실적 장벽도 많다.\n극단적인 가격 변동성: 금은 안정적인 가치 보존 수단이지만, 비트코인은 연 단위로 수십 퍼센트 이상 요동친다. 이는 가치 저장의 가장 기본적인 전제를 위협한다.\n채굴 의존성과 에너지 소모: 비트코인 채굴은 막대한 전력을 요구하며, 탄소중립 시대의 흐름에 역행한다는 비판이 존재한다.\n정책 및 규제 리스크: 각국 정부의 입장은 엇갈리고 있으며, 때로는 강력한 제재 조치가 내려지기도 한다. 이는 ‘금처럼 안전한 피난처’라는 서사를 흔드는 요소다.\n기술적 불확실성: 블록체인 기술은 아직 진화 중이며, 후속 기술에 의해 대체되거나 보완될 가능성이 남아 있다.\n그럼에도 불구하고 비트코인이 ‘금’과는 전혀 다른, 디지털 시대의 신형 자산이라는 사실에는 이견이 없다. 비트코인은 단순한 상품이 아니라, 거래 구조, 신뢰 방식, 금융 주권에 대한 사고방식을 근본적으로 재구성하고 있다.\n\n비트코인은 아직 ‘금’은 아니다. 하지만 금이 결코 가질 수 없는 ‘시대성’을 품고 있다. 디지털 네이티브 세대에게 비트코인은 자산이자 언어이며, 자기결정권의 상징이고, 검열되지 않는 화폐이며, 기술 기반 신뢰가 구현된 자유의 도구다.\n바로 이 지점에서, 비트코인은 단순한 ‘디지털 금’을 넘어, 금이 되지 못한 것들이 꿈꿔왔던 미래의 화폐가 될 가능성을 품고 있다.\n \n반복되는 역사인가, 새로운 질서의 서막인가\n비트코인과 튤립 버블의 비교는 단순한 흥미를 넘어, 시장의 심리와 자산의 본질에 대한 중요한 질문을 던진다. 두 가지 모두 희소성과 열광, 그리고 급격한 가격 상승이라는 공통점을 지니지만, 그 뿌리는 전혀 다르다.\n튤립은 일시적인 수요와 신기함에 기반한 감각적 투기 대상이었다면, 비트코인은 기술적 설계와 경제적 구조, 그리고 사회적 요구가 맞물린 복합적 금융 실험체다. 그것은 단순한 자산이 아니라 거래를 기록하는 방식, 신뢰를 분산시키는 메커니즘, 권력으로부터 독립된 금융 구조라는 점에서 새로운 시스템의 전초기지라 할 수 있다.\n물론, 비트코인은 아직 ‘완성된 금’이 아니다. 그 가치는 여전히 극심한 변동성, 정책과 규제의 불확실성, 기술 진화의 불안정성 속에 놓여 있다. 그 미래에는 장밋빛 낙관과 종말론적 경고가 동시에 존재한다.\n그러나 단 하나, 분명한 사실은 있다. 비트코인은 우리 시대의 거울이라는 것이다. 그 안에는 신뢰란 무엇인가라는 질문, 화폐란 누구를 위한 것인가라는 성찰, 권력은 기술로 재구성될 수 있느냐는 질문이 담겨 있다.\n그렇기에 우리는 묻는다.\n비트코인은 진짜 금이 될 수 있을까? 아니면 그조차도, 지나가는 한 송이 튤립에 불과할까?\n\n그 답은 기술이 아니라, 시장에, 그리고 우리 각자의 믿음에 달려 있다.\n원문: 광화문덕의 브런치\n이 필자의 다른 글 읽기\n네이버 검색이 불편하게 느껴지기 시작했다\n데이터로 살펴 본 동네 카페 생존법\n“너의 에너지는 너를 위해 써” 절대 사람을 피해 이직하지 마라",
        "enclosure": {
          "type": "image/jpeg",
          "length": "0",
          "url": "https://ppss.kr/wp-content/uploads/2025/05/9-1.jpg"
        },
        "dc:creator": "광화문덕",
        "content": "비트코인은 등장과 동시에 &#8216;현대판 튤립 버블&#8217;이라는 낙인을 피할 수 없었다. 17세기 네덜란드를 뒤흔든 튤립 투기 열풍처럼, 비트코인 역시 급등과 폭락을 반복하며 ‘광기 어린 자산’이라는 비유의 중심에 섰다. 지금 다시 묻고 싶다. 과연 이 비교는 정당한가? 튤립과 블록체인은 같은 궤적 위에 놓여 있는가? 이 질문을 출발점으로 비트코인과 튤립 버블의 유사성과 차이를 짚고, 그 이면에 감춰진 경제적 [&#8230;]",
        "contentSnippet": "비트코인은 등장과 동시에 ‘현대판 튤립 버블’이라는 낙인을 피할 수 없었다. 17세기 네덜란드를 뒤흔든 튤립 투기 열풍처럼, 비트코인 역시 급등과 폭락을 반복하며 ‘광기 어린 자산’이라는 비유의 중심에 섰다. 지금 다시 묻고 싶다. 과연 이 비교는 정당한가? 튤립과 블록체인은 같은 궤적 위에 놓여 있는가? 이 질문을 출발점으로 비트코인과 튤립 버블의 유사성과 차이를 짚고, 그 이면에 감춰진 경제적 […]",
        "guid": "https://ppss.kr/?p=269141",
        "categories": [
          "IT",
          "경제",
          "역사"
        ],
        "isoDate": "2025-05-12T09:02:16.000Z"
      }
    ]
  },
  {
    "name": "C++ Team Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Sy Brand",
        "title": "What’s New for C++ Developers in Visual Studio 2022 17.14",
        "link": "https://devblogs.microsoft.com/cppblog/whats-new-for-cpp-developers-in-visual-studio-2022-17-14/",
        "pubDate": "Tue, 13 May 2025 17:27:47 +0000",
        "content:encodedSnippet": "Visual Studio 2022 version 17.14 is now generally available! This post summarizes the new features you can find in this release for C++. You can download Visual Studio 2022 from the Visual Studio downloads page or upgrade your existing installation by following the Update Visual Studio Learn page.\nStandard Library and Compiler\nWe’ve made a myriad of fixes and improvements to the MSVC compiler and standard library. See C++ Language Updates in MSVC in Visual Studio 2022 17.14 for a full list of changes on the compiler side, and the STL Changelog for all the standard library updates.\nCompiler\nWe’ve added support for several C++23 features, which are available under the /std:c++latest and /std:c++23preview flags.\nYou can now omit () in some forms of lambdas that previously required them, thanks to P1102R2:\nauto lambda = [] constexpr { }; //no '()' needed after the capture list\nWe implemented if consteval, with which you can run different code depending on whether the statement is executed at compile time or run time. This is useful for cases where your run time version can be heavily optimized with compiler intrinsics or inline assembly that are not available at compile time:\nconstexpr size_t strlen(char const* s) {\r\n    if consteval {\r\n        // if executed at compile time, use a constexpr-friendly algorithm\r\n        for (const char *p = s; ; ++p) {\r\n            if (*p == '\\0') {\r\n                return static_cast<std::size_t>(p - s);\r\n            }\r\n        }\r\n    } else {\r\n        // if executed at run time, use inline assembly\r\n        __asm__(\"SSE 4.2 magic\");\r\n    }\r\n}\r\n\nWe now support attributes for lambdas:\nauto lambda = [] [[nodiscard]] [[deprecated]] { return 10; };\r\n\r\nvoid f() {\r\n    lambda(); // fires a deprecation warning and a discard of return value warning.\r\n}\nWe also now support static operator() and static operator[]. These allow the compiler to generate more efficient code for these operators when the implicit object parameter is not needed and therefore does not need to be passed as an argument to the function:\nstruct X {\r\n    static bool operator()(int) const;\r\n};\r\n\r\ninline constexpr X x;\r\n\r\nint count_x(std::vector<int> const& xs) {\r\n    return std::count_if(xs.begin(), xs.end(), x);\r\n}\nThe performance of generated code improved due to 17.14 including earlier SSA optimizations and control-flow simplifications. The 17.14 compiler emits 20% faster code than the initial Visual Studio 2022 17 release.\nFor throughput, the 17.14 compiler incorporates a dataflow simplification that reduced the compile time of an UnrealEngine /LTCG link repro by 13%.\nStandard Library\nWe have implemented parts of standard library hardening, which checks for some instances of undefined behavior at runtime and reports them to the user. This is currently disabled by default, but you can enable it by defining _MSVC_STL_HARDENING to 1 project-wide. The proposal uses C++26 contract violations as the mechanism for reporting hardened precondition violations, but since we haven’t implemented contracts yet, we default to calling __fastfail().\nAnother new safety feature we have added is destructor tombstones, which help mitigate use-after-free mistakes. This is also disabled by default, but can be enabled by defining _MSVC_STL_DESTRUCTOR_TOMBSTONES to 1 project-wide.\nSome miscellaneous improvements we have made are:\nWe now take advantage of our compiler support for static operator(), which gives slightly improved codegen.\nWe marked std::expected, std::unexpected, and all STL exception types as [[nodiscard]]. This will help protect you from misusing them.\nImproved the visualizers for std::basic_string_view and its iterators.\nAdded or improved vectorized implementations of std::basic_string::find(), find_first_of(), and find_last_of().\nC++ Dynamic Debugging\nC++ Dynamic Debugging is a new compiler and IDE feature that gives you the performance of optimized builds with the debugging experience of unoptimized builds. It is now available as a preview feature exclusively with the MSVC toolset and works by dynamically deoptimizing functions that you set deoptimized breakpoints on or step into.\nFor example, without C++ Dynamic Debugging, you might see this in your Watch window:\n\nMany of the variables are unavailable, so the debugger cannot visualize them.\nWhen you enable the feature, however, you’ll see this:\n\nThe values of the variables are now available because the function has been dynamically deoptimized.\nTo begin, change your configuration to Release mode. Next, right-click on your project and click on Properties to open the Configuration Properties menu. In this menu, click on Advanced > Use C++ Dynamic Debugging > Yes. Lastly, rebuild your project. Setting this property will turn off Whole Program Optimization.\n\nFor all the details about C++ Dynamic Debugging, see our documentation.\nIDE\nYou can now automatically populate template arguments in the template bar, which displays and allows editing of template parameters, when using Go to Definition or F12.\nFor example, pressing F12 on vector will now jump to vector with the template bar automatically populated, allowing you to quickly inspect and modify template parameters.\nIn the example below, using Go To Definition or pressing F12 will populate both the type and allocator in the template bar.\n\nWe’ve also added support for controlling which headers appear in the include completion list when you type #include.\nThe dropdown setting in Tools → Options → Text Editor → C/C++ → IntelliSense → Include style for suggestions now affects both include suggestions and include completion, with the following refined behaviors:\nCore Guidelines (Default): Uses quotes for relative paths and angle brackets for everything else.\nQuotes mode: Uses quotes for all headers except standard headers, which use angle brackets.\nAngle brackets mode: Uses angle brackets for all headers that are part of the include path.\n\nCMake\nWe have added support for IntelliSense-based completions and quick info for CMake modules in Visual Studio. Now, you can view all available CMake modules and learn more about them directly from the Visual Studio editor.\nQuick Info\nWhen you hover over a referenced CMake module, IntelliSense provides detailed information about the selected module, helping you understand its usage and functionality at a glance.\n\nCompletion\nWhen you start typing a CMake module in your CMakeLists.txt or other CMake script files, IntelliSense will provide a list of available modules to choose from.\n\nGitHub Copilot\nWe’ve added doc comment generation support for GitHub Copilot. With this feature enabled, you can type the comment pattern according to your settings configuration (e.g., ///), and Copilot will complete the function description based on the code.\n\nAlso new in this release is Next Edit Suggestions (NES). When you’re presented with an edit suggestion, if it is on a different line than the one you are on now, it will suggest you Tab to Navigate to the corresponding line first.\nYou can enable NES at Tools → Options → GitHub → Copilot → Copilot Completions → Enable Next Edit Suggestions.\n\nUnreal Engine Blueprints Debugger\nThe Unreal Engine Blueprint integration allows you to debug Blueprints directly within Visual Studio. This integration includes displaying Blueprint stack traces in the Visual Studio call stack tab and showing Blueprint node values in the local variables table. These features limit the need for you to switch between Visual Studio and the Unreal Editor, providing a seamless debugging experience and reducing context-switching.\n\nWith the new functionality, developers can easily track interactions between Blueprints and C++ code, making it simpler to identify and fix bugs. Additionally, an Unreal Engine plugin for Visual Studio enhances this capability by tracking Blueprint execution flow and storing additional information, which the debugger extension can then display.\nAddress Sanitizer\nWe have resolved various issues and feedback tickets, enhancing the quality and stability of Address Sanitizer. We have published a comprehensive list of issues we resolved in Visual Studio 2022 17.13 here and will publish a similar one for 17.14 soon.\nTo further improve the quality of both Address Sanitizer and our toolchain, we now instrument the entire toolchain with Address Sanitizer on each pull request. Then, internal test pipelines are executed against this instrumented toolset to protect against memory safety errors. This process enables the identification of novel memory safety issues within the toolset and improves the quality of Address Sanitizer through an expedited feedback loop. The Visual C++ Library implementation in the STL GitHub repository is also tested daily using Address Sanitizer using a dedicated pipeline.\nSend us your feedback\nWe are very much interested in your feedback to continue to improve this experience. The comments below are open. Feedback can also be shared through Visual Studio Developer Community. You can also reach us via email at visualcpp@microsoft.com.\nThe post What’s New for C++ Developers in Visual Studio 2022 17.14 appeared first on C++ Team Blog.",
        "dc:creator": "Sy Brand",
        "comments": "https://devblogs.microsoft.com/cppblog/whats-new-for-cpp-developers-in-visual-studio-2022-17-14/#comments",
        "content": "<p>Visual Studio 2022 version 17.14 is now generally available! This post summarizes the new features you can find in this release for C++. You can download Visual Studio 2022 from the Visual Studio downloads page or upgrade your existing installation by following the Update Visual Studio Learn page. Standard Library and Compiler We’ve made a myriad of [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/whats-new-for-cpp-developers-in-visual-studio-2022-17-14/\">What’s New for C++ Developers in Visual Studio 2022 17.14</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "Visual Studio 2022 version 17.14 is now generally available! This post summarizes the new features you can find in this release for C++. You can download Visual Studio 2022 from the Visual Studio downloads page or upgrade your existing installation by following the Update Visual Studio Learn page. Standard Library and Compiler We’ve made a myriad of […]\nThe post What’s New for C++ Developers in Visual Studio 2022 17.14 appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35467",
        "categories": [
          "Announcement",
          "C++"
        ],
        "isoDate": "2025-05-13T17:27:47.000Z"
      },
      {
        "creator": "Emily Bao",
        "title": "Introducing the /forceInterlockedFunctions switch for ARM64",
        "link": "https://devblogs.microsoft.com/cppblog/introducing-the-forceinterlockedfunctions-switch-for-arm64/",
        "pubDate": "Tue, 13 May 2025 10:00:25 +0000",
        "content:encodedSnippet": "In Visual Studio 2022 17.14, we are introducing the /forceInterlockedFunctions[-] switch, which generates and links with out-of-line atomics that select Armv8.1+ Large System Extension (LSE) atomic instructions based on CPU support.\nThis switch is on by default for Armv8.0 and off for Armv8.1+. Outlining is necessary in Armv8.0 because this version’s interlocked intrinsics use exclusive instructions—LoadExcl/StoreExcl—that do not guarantee forward progress. This can cause performance issues due to intermittent livelocks. See Arm Architecture Reference Manual for A-profile architecture, section “B2.17.5 Load-Exclusive and Store-Exclusive instruction usage restrictions” for examples of when the LoadExcl/StoreExcl loop may not make forward progress.\nBelow is an example of code that was previously generated when using the _InterlockedAdd64 intrinsic. You can see the ldaxr and stlxr instructions being used.\nMain.cpp\nMain.asm snippet\n\n\n\n#include <intrin.h>\r\n#include <stdio.h>\r\n#include <Windows.h>\r\n\r\nvoid main() {\r\n    volatile __int64 Addend = 5;\r\n    __int64 Value = 1; _InterlockedAdd64(&Addend, Value);\r\n}\n; _InterlockedAdd64(&Addend, Value);\r\nldr x10,[sp]\r\nadd x9,sp,#8\r\n|$LN3@main|\r\nldaxr x8,[x9]\r\nadd x8,x8,x10\r\nstlxr wip0,x8,[x9]\r\ncbnz wip0,|$LN3@main|\r\ndmb ish\nWith the /forceInterlockedFunctions option you can see that the ldaxr and stlxr are gone and have been replaced with a bl _InterlockedAdd64 instruction\nMain.cpp\nMain.asm snippet\n\n\n\n#include <intrin.h>\r\n#include <stdio.h>\r\n#include <Windows.h>\r\n\r\nvoid main() {\r\n    volatile __int64 Addend = 5;\r\n    __int64 Value = 1; _InterlockedAdd64(&Addend, Value);\r\n}\n; InterlockedAdd64(&Addend, Value);\r\nldr x1,[sp,#0x10]\r\nadd x0,sp,#0x18\r\nbl _InterlockedAdd64\r\nnop\nThe /forceInterlockedFunctions option only applies to Arm64 and will be ignored if not applicable. Additionally, enabling the LSE feature will override the default outlining behavior in Armv8.0.\nNote that the option is on by default for all Arm64EC versions. We would not recommend turning the option off for ARM64EC, as outlining helps address the memory model differences between Arm64 and x64.\n \nThis flag impacts the following interlocked intrinsics:\nKey:\nFull: supports plain, _acq, _rel, and _nf forms.\nNone: Not supported\nOperation\n8\n16\n32\n64\n128\nPointer\n\n\nAdd\nNone\nNone\nFull\nFull\nNone\nNone\n\n\nAnd\nFull\nFull\nFull\nFull\nNone\nNone\n\n\nCompareExchange\nFull\nFull\nFull\nFull\nFull\nFull\n\n\nDecrement\nNone\nFull\nFull\nFull\nNone\nNone\n\n\nExchange\nFull\nFull\nFull\nFull\nNone\nFull\n\n\nExchangeAdd\nFull\nFull\nFull\nFull\nNone\nNone\n\n\nIncrement\nNone\nFull\nFull\nFull\nNone\nNone\n\n\nOr\nFull\nFull\nFull\nFull\nNone\nNone\n\n\nXor\nFull\nFull\nFull\nFull\nNone\nNone\n\n\nbittestandset\nNone\nNone\nFull\nFull\nNone\nNone\n\n\nbittestandreset\nNone\nNone\nFull\nFull\nNone\nNone\n\n\n\nSee also\n/forceInterlockedFunctions | Microsoft Learn\nARM64 intrinsics | Microsoft Learn\n/feature (ARM64) | Microsoft Learn\nIntroduction to Large System Extensions | Arm Learning Paths\nFeedback\nThat’s all about this new compiler option and default setting that you can find starting in Visual Studio 2022 version 17.14. Please give it a try and let us know how it goes! We always welcome feedback, questions, or concerns from the community, as it helps make Visual Studio better.\nPlease share your thoughts, comments and questions with us through Developer Community. You can also reach us on X @VisualC, or via email at visualcpp@microsoft.com.\n \nThe post Introducing the /forceInterlockedFunctions switch for ARM64 appeared first on C++ Team Blog.",
        "dc:creator": "Emily Bao",
        "comments": "https://devblogs.microsoft.com/cppblog/introducing-the-forceinterlockedfunctions-switch-for-arm64/#respond",
        "content": "<p>In Visual Studio 2022 17.14, we are introducing the /forceInterlockedFunctions[-] switch, which generates and links with out-of-line atomics that select Armv8.1+ Large System Extension (LSE) atomic instructions based on CPU support. This switch is on by default for Armv8.0 and off for Armv8.1+. Outlining is necessary in Armv8.0 because this version&#8217;s interlocked intrinsics use exclusive [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/cppblog/introducing-the-forceinterlockedfunctions-switch-for-arm64/\">Introducing the /forceInterlockedFunctions switch for ARM64</a> appeared first on <a href=\"https://devblogs.microsoft.com/cppblog\">C++ Team Blog</a>.</p>\n",
        "contentSnippet": "In Visual Studio 2022 17.14, we are introducing the /forceInterlockedFunctions[-] switch, which generates and links with out-of-line atomics that select Armv8.1+ Large System Extension (LSE) atomic instructions based on CPU support. This switch is on by default for Armv8.0 and off for Armv8.1+. Outlining is necessary in Armv8.0 because this version’s interlocked intrinsics use exclusive […]\nThe post Introducing the /forceInterlockedFunctions switch for ARM64 appeared first on C++ Team Blog.",
        "guid": "https://devblogs.microsoft.com/cppblog/?p=35259",
        "categories": [
          "Announcement",
          "Backend",
          "C++"
        ],
        "isoDate": "2025-05-13T10:00:25.000Z"
      }
    ]
  },
  {
    "name": "Facebook Engineering",
    "category": "기업",
    "posts": [
      {
        "creator": "",
        "title": "Accelerating GPU indexes in Faiss with NVIDIA cuVS",
        "link": "https://engineering.fb.com/2025/05/08/data-infrastructure/accelerating-gpu-indexes-in-faiss-with-nvidia-cuvs/",
        "pubDate": "Thu, 08 May 2025 17:00:22 +0000",
        "content:encodedSnippet": "Meta and NVIDIA collaborated to accelerate vector search on GPUs by integrating NVIDIA cuVS into Faiss v1.10, Meta’s open source library for similarity search.\nThis new implementation of cuVS will be more performant than classic GPU-accelerated search in some areas.\nFor inverted file (IVF) indexing, NVIDIA cuVS outperforms classical GPU-accelerated IVF build times by up to 4.7x; and search latency is reduced by as much as 8.1x.\nFor graph indexing, CUDA ANN Graph (CAGRA) outperforms CPU Hierarchical Navigable Small World graphs (HNSW) build times by up to 12.3x; and search latency is reduced by as much as 4.7x.\nThe Faiss library\nThe Faiss library is an open source library, developed by Meta FAIR, for efficient vector search and clustering of dense vectors. Faiss pioneered vector search on GPUs, as well as the ability to seamlessly switch between GPUs and CPUs. It has made a lasting impact in both research and industry, being used as an integrated library in several databases (e.g., Milvus and OpenSearch), machine learning libraries, data processing libraries, and AI workflows. Faiss is also used heavily by researchers and data scientists as a standalone library, often paired with PyTorch. \nCollaboration with NVIDIA\nThree years ago, Meta and NVIDIA worked together to enhance the capabilities of vector search technology and to accelerate vector search on GPUs. Previously, in 2016, Meta had incorporated high performing vector search algorithms made for NVIDIA GPUs: GpuIndexFlat; GpuIndexIVFFlat; GpuIndexIVFPQ. After the partnership, NVIDIA rapidly contributed GpuIndexCagra, a state-of-the art graph-based index designed specifically for GPUs. In its latest release, Faiss 1.10.0 officially includes these algorithms from the NVIDIA cuVS library. \nFaiss 1.10.0 also includes a new conda package that unlocks the ability to choose between the classic Faiss GPU implementations and the newer NVIDIA cuVS algorithms, making it easy for users to switch between GPU and CPU.\nBenchmarking\nThe following benchmarks were conducted using the cuVS-bench tool. \nWe measured:\nA tall, slender image dataset: A subset of 100 million vectors from the Deep1B dataset by 96 dimensions.\nA short, wide dataset of text embeddings: 5 million vector embeddings, curated using the OpenAI text-embedding-ada-002 model.\nTests for index build times and search latency were conducted on an NVIDIA H100 GPU and compared to an Intel Xeon Platinum 8480CL system. Results are reported in the tables below at 95% recall along the pareto frontiers for k=10 nearest neighbors. \nBuild time (95% recall@10)\nIndex\n\nEmbeddings\n100M x 96\n(seconds)\nEmbeddings\n5M x 1536\n(seconds)\nFaiss Classic\nFaiss cuVS\nFaiss Classic\n   Faiss cuVS\nFaiss Classic\nFaiss cuVS\n\n\nIVF Flat\nIVF Flat\n101.4\n37.9 (2.7x)\n24.4\n15.2 (1.6x)\n\n\nIVF PQ\nIVF PQ\n168.2\n72.7 (2.3x)\n42.0\n9.0 (4.7x)\n\n\nHNSW (CPU)\nCAGRA\n3322.1\n518.5 (6.4x)\n1106.1\n89.7 (12.3x)\n\n\n\nTable 1: Index build times for Faiss-classic and Faiss-cuVS in seconds (with NVIDIA cuVS speedups in parentheses).\nSearch latency (95% recall@10)\nIndex\n\nEmbeddings\n100M x 96\n(milliseconds)\nEmbeddings\n5M x 1536\n(milliseconds)\nFaiss Classic\nFaiss cuVS\nFaiss Classic\nFaiss cuVS\nFaiss Classic\nFaiss cuVS\n\n\nIVF Flat\nIVF Flat\n0.75\n0.39 (1.9x)\n1.98\n1.14 (1.7x)\n\n\nIVF PQ\nIVF PQ\n0.49\n0.17 (2.9x)\n1.78\n0.22 (8.1x)\n\n\nHNSW (CPU)\nCAGRA\n0.56\n0.23 (2.4x)\n0.71\n0.15 (4.7x)\n\n\n\nTable 2: Online (i.e., one at a time) search query latency for Faiss-classic and Faiss-cuVS in milliseconds (with NVIDIA cuVS speedups in parentheses).\nLooking forward\nThe emergence of state-of-the-art NVIDIA GPUs has revolutionized the field of vector search, enabling high recall and lightning-fast search speeds. The integration of Faiss and cuVS will continue to incorporate state-of-the-art algorithms, and we look forward to unlocking new innovations in this partnership between Meta and NVIDIA. \nRead here for more details about NVIDIA cuVS.\nThe post Accelerating GPU indexes in Faiss with NVIDIA cuVS appeared first on Engineering at Meta.",
        "dc:creator": "",
        "content": "<p>Meta and NVIDIA collaborated to accelerate vector search on GPUs by integrating NVIDIA cuVS into Faiss v1.10, Meta’s open source library for similarity search. This new implementation of cuVS will be more performant than classic GPU-accelerated search in some areas. For inverted file (IVF) indexing, NVIDIA cuVS outperforms classical GPU-accelerated IVF build times by up [...]</p>\n<p><a class=\"btn btn-secondary understrap-read-more-link\" href=\"https://engineering.fb.com/2025/05/08/data-infrastructure/accelerating-gpu-indexes-in-faiss-with-nvidia-cuvs/\">Read More...</a></p>\n<p>The post <a rel=\"nofollow\" href=\"https://engineering.fb.com/2025/05/08/data-infrastructure/accelerating-gpu-indexes-in-faiss-with-nvidia-cuvs/\">Accelerating GPU indexes in Faiss with NVIDIA cuVS</a> appeared first on <a rel=\"nofollow\" href=\"https://engineering.fb.com\">Engineering at Meta</a>.</p>\n",
        "contentSnippet": "Meta and NVIDIA collaborated to accelerate vector search on GPUs by integrating NVIDIA cuVS into Faiss v1.10, Meta’s open source library for similarity search. This new implementation of cuVS will be more performant than classic GPU-accelerated search in some areas. For inverted file (IVF) indexing, NVIDIA cuVS outperforms classical GPU-accelerated IVF build times by up [...]\nRead More...\nThe post Accelerating GPU indexes in Faiss with NVIDIA cuVS appeared first on Engineering at Meta.",
        "guid": "https://engineering.fb.com/?p=22423",
        "categories": [
          "AI Research",
          "Data Infrastructure",
          "ML Applications",
          "Open Source"
        ],
        "isoDate": "2025-05-08T17:00:22.000Z"
      }
    ]
  },
  {
    "name": "eBay Tech Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "eBay News Team",
        "title": "Introducing a New Way to Use Generative AI for Social Selling",
        "link": "https://innovation.ebayinc.com/stories/introducing-a-new-way-to-use-generative-ai-for-social-selling/",
        "pubDate": "Tue, 13 May 2025 00:00:00 -0700",
        "dc:creator": "eBay News Team",
        "content": "<div style=\"margin-bottom: 10px;\"><img src=\"https://static.ebayinc.com/static/assets/Uploads/Blog/Posts/_resampled/FitWzIwMCwxMTNd/250402-GenAI-v1-inc-1600x900-hero.jpg?fs=7629098ba9d99ef9\" width=\"200\" height=\"113\" alt=\"Introducing a New Way to Use Generative AI for Social Selling\" /></div><div>Effortless social video content creation is here.</div>",
        "contentSnippet": "Effortless social video content creation is here.",
        "guid": "https://innovation.ebayinc.com/stories/introducing-a-new-way-to-use-generative-ai-for-social-selling/",
        "categories": [
          "article"
        ],
        "isoDate": "2025-05-13T07:00:00.000Z"
      }
    ]
  },
  {
    "name": "Twitter Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "JetBrains: Developer Tools for Professionals and Teams – Company Blog | JetBrains",
    "category": "기업",
    "posts": [
      {
        "creator": "Vaclav Pech",
        "title": "MPS 2025.1 Is Out!",
        "link": "https://blog.jetbrains.com/mps/2025/05/mps-2025-1-is-out/",
        "pubDate": "Wed, 14 May 2025 11:55:25 +0000",
        "content:encodedSnippet": "MPS 2025.1 allows the build language to serve as a target for code generation. This version also introduces visual and performance enhancements to the Project tool window’s Logical view, several useful improvements to the UI, and numerous platform updates.\nDOWNLOAD MPS 2025.1\nWhat’s new\nLet’s check out all the new features waiting for you in the latest release.\nProject view performance\nAs a result of fixing MPS-38299 and MPS-37938, navigation in the logical project view has been substantially improved.\nOptionally create languages without a generator\nThe New Project wizard now allows users to create a language without an empty generator. This covers the cases where a generator will not be needed in the project and prevents users from needing to manually delete the generator.\nEnhanced transactional property cell\nThe CellModel_TransactionalProperty editor cell now supports the same properties as ordinary CellModel_Property cells, like readOnly and empty text, which encourages broader usage of the transactional property cell.\nBuild language as generation target\nBased on a request from one of our users, we smoothed the build language so that it can now be used as a target for generation. This opens the possibility for anyone to extend the build language in MPS or to create alternatives. A simple test language has been provided as an example to provide guidelines.\nMore new features…\nCheck out the What’s New page to learn all about the new features.\nThe full list of fixed issues can be found here.\nYour JetBrains MPS team",
        "dc:creator": "Vaclav Pech",
        "content": "MPS 2025.1 allows the build language to serve as a target for code generation. This version also introduces visual and performance enhancements to the Project tool window’s Logical view, several useful improvements to the UI, and numerous platform updates. DOWNLOAD MPS 2025.1 What’s new Let’s check out all the new features waiting for you in [&#8230;]",
        "contentSnippet": "MPS 2025.1 allows the build language to serve as a target for code generation. This version also introduces visual and performance enhancements to the Project tool window’s Logical view, several useful improvements to the UI, and numerous platform updates. DOWNLOAD MPS 2025.1 What’s new Let’s check out all the new features waiting for you in […]",
        "guid": "https://blog.jetbrains.com/?post_type=mps&p=563003",
        "categories": [
          "releases",
          "release"
        ],
        "isoDate": "2025-05-14T11:55:25.000Z"
      },
      {
        "creator": "Lena Morozova",
        "title": "CLion and the Open-Source Community: Growing Together",
        "link": "https://blog.jetbrains.com/blog/2025/05/14/clion-and-the-open-source-community-growing-together/",
        "pubDate": "Wed, 14 May 2025 10:00:00 +0000",
        "content:encodedSnippet": "From the beginning, CLion has been shaped by the needs of C and C++ developers around the world. Our cross-platform IDE was built to simplify development, boost productivity, and make working with C++ more enjoyable.\nWe’re excited to take the next step in our ongoing collaboration with the community: CLion is now free for non-commercial use, including open-source development. If you’re contributing to an OSS project or starting your own, there’s never been a better time to try it out.\nJust look at the below open-source projects built with CLion – powerful debuggers, reverse engineering tools, legendary file managers, and libraries used around the world. These are shining examples of what developers can do when they have the right tools.\n\nJSON for Modern C++\nCreated by: Niels Lohmann\nJetBrains tools used: CLion\nCreated during a university project, JSON for Modern C++ started as a helper file for logging analytics data and then evolved into one of GitHub’s most popular C++ libraries with nearly 45,000 stars.\n“…we needed to send some analytic information to a server. I started with a native printf statement, putting all the needed variables into a JSON object. Soon, the logging became more complex, so I moved all JSON-related functions into a header file. This then grew into a self-contained JSON library for C++.”\nThe library offers an intuitive C++-style interface for JSON parsing and serialization. It’s widely used in industries ranging from game development to aerospace.\n“As an open-source maintainer and contributor, I have limited time to work on my projects. CLion’s easy test execution, Git integration, and Clang-Tidy warnings help me stay productive and make the most of that time.”\nFuture plans:\nAutomate the manual release process.\nOptimize performance and clean up the architecture.\nPlan the roadmap for the next major release: 3.0.0.\n\nMidnight Commander\nMaintained by: Yury Zaytsev\nJetBrains tools used: CLion, PyCharm\nMidnight Commander (or mc) is a classic terminal file manager with a rich legacy. Originally inspired by Norton Commander from the early ’90s, it has since become widely used and loved in the Unix community for its visual interface, terminal-first design, and extensibility.\nYury, who has been maintaining the project since 2015, recalls his early fascination:\n“I vividly remember being fascinated by the blue panes of Norton Commander when I was five. Years later, I rediscovered Unix systems, and the first program I installed was Midnight Commander. It brought that magic back – and that’s when I began contributing.”\nIts dual-pane interface helped generations of users interact with Unix systems more efficiently. Despite challenges, development continues decades later. JetBrains tools help keep the aging codebase navigable:\n“CLion has completely changed how I write code. The refactoring and renaming tools, code navigation, and features like macro expansion support are invaluable for maintaining massive, decades-old codebases.”\nFuture plans:\nMigrate to an event loop.\nContinue refactoring and modernizing the infrastructure to improve maintainability.\nEmbed a lightweight scripting engine for extensibility.\n\nImHex\nCreated by: WerWolv\nJetBrains tools used: CLion, Rider, WebStorm\nImHex started as a side project to explore programming language design and binary data structures. Creator Nikolaij Sägesser built a custom language to define data types and overlay them on binary data. What began as a tool to visualize those definitions grew into a powerful, cross-platform hex editor for reverse engineers.\n“I started it during my Bachelor’s thesis – I needed tools like this myself, and a few friends were really frustrated with what was already out there. That gave me the push to keep going.”\nImHex now offers custom scripting, format definition, live parsing, and binary visualization, all in a sleek cross-platform GUI.\n“I’m mainly using CLion, and it’s been amazing. Being able to use GCC and Clang on all platforms, especially on Windows, where most things expect MSVC, is a game-changer. With CLion, I can use open source toolchains, debuggers, and build setups everywhere – and it just works.”\nFuture plans:\nRewrite the custom programming language to use a VM for execution.\nExpand support for binary formats.\nImprove UI/UX and add more visualization tools.\n\nx64dbg\nCreated by: Duncan Ogilvie\nJetBrains tools used: CLion\nx64dbg is a well-known debugger among reverse engineers, especially on Windows, where accessible debugging tools have historically lagged behind. Duncan started it as a high school graduation project to fill that gap, drawing inspiration from OllyDbg.\n“There was nothing user-friendly for 64-bit debugging at the time, and I was naive enough to just start building one. 😅”\nNow with over four million downloads, x64dbg is used globally by a diverse range of individuals, from indie hackers to institutional researchers, and even the Vatican. The project recently migrated to CMake via cmkr, making development and contribution more straightforward.\n“We moved from a complicated 10+ step build process to just opening the folder in CLion and hitting ‘build.’ The best is that the CMake and debug configurations can be done from a simple UI and do not require fiddling with JSON files.”\nDespite being well-established, x64dbg continues to evolve. While feature development has slowed due to limited time, key areas of active work include:\nSwitching to the Visual Studio 2022 compiler for modern C++ support.\nIntegrating Windows type support and AVX-512 support.\nExtracting UI components into a reusable cross-platform library.\nThese projects, and the people behind them, represent the spirit of open source: solving hard problems, sharing knowledge, and building tools the world depends on. We believe that this work matters, and we are proud to support these efforts.\nGrab your free license and build your next great project with confidence, speed, and comfort.\nDownload CLion Non-Commercial",
        "dc:creator": "Lena Morozova",
        "content": "From the beginning, CLion has been shaped by the needs of C and C++ developers around the world. Our cross-platform IDE was built to simplify development, boost productivity, and make working with C++ more enjoyable. We’re excited to take the next step in our ongoing collaboration with the community: CLion is now free for non-commercial [&#8230;]",
        "contentSnippet": "From the beginning, CLion has been shaped by the needs of C and C++ developers around the world. Our cross-platform IDE was built to simplify development, boost productivity, and make working with C++ more enjoyable. We’re excited to take the next step in our ongoing collaboration with the community: CLion is now free for non-commercial […]",
        "guid": "https://blog.jetbrains.com/?post_type=blog&p=564058",
        "categories": [
          "community",
          "clion",
          "community-support",
          "open-source-program",
          "oss-projects"
        ],
        "isoDate": "2025-05-14T10:00:00.000Z"
      },
      {
        "creator": "Dmitriy Smirnov",
        "title": "Try Declarative Gradle EAP3 in IntelliJ IDEA",
        "link": "https://blog.jetbrains.com/idea/2025/05/try-declarative-gradle-eap3-in-intellij-idea/",
        "pubDate": "Wed, 14 May 2025 08:17:46 +0000",
        "content:encodedSnippet": "The Declarative Gradle project, aimed at making Gradle build scripts easier to read and use, is at full steam. Last month, EAP3 landed, bringing testing support and more DCL language features, like lists and files.\nRead the Gradle blog post to learn more about what the EAP, and Declarative Gradle in general, brings you.\nTry Declarative Gradle\n                                    \nLike the previous EAP, EAP3 is fully supported in IntelliJ IDEA and Android Studio. Give it a try!\nHow to try Declarative Gradle in IntelliJ IDEA\nDownload the special build from this Google Drive folder.\nStart the IDE and enable the required configuration.\n\nOpen Tools | Internal Actions | Registry.\nEnable the gradle.declarative.studio.support and gradle.declarative.ide.support flags.\nRestart the IDE.\nPick a sample project – there are Java and Kotlin samples available.\nOpen the project in IntelliJ IDEA.\nCheck the new .dcl build configuration and try working with the project.\nShare your feedback to shape it further.\nHow to share feedback\nYou can provide feedback on Declarative Gradle:\nDirectly with Gradle via their feedback form. \nIn the #gradle channel on the Kotlin Foundation Slack.\nOn YouTrack or through any other channel you are used to. \nThank you!",
        "dc:creator": "Dmitriy Smirnov",
        "content": "The Declarative Gradle project, aimed at making Gradle build scripts easier to read and use, is at full steam. Last month, EAP3 landed, bringing testing support and more DCL language features, like lists and files. Read the Gradle blog post to learn more about what the EAP, and Declarative Gradle in general, brings you. Like [&#8230;]",
        "contentSnippet": "The Declarative Gradle project, aimed at making Gradle build scripts easier to read and use, is at full steam. Last month, EAP3 landed, bringing testing support and more DCL language features, like lists and files. Read the Gradle blog post to learn more about what the EAP, and Declarative Gradle in general, brings you. Like […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=567305",
        "categories": [
          "news",
          "declarative-gradle",
          "gradle",
          "intellij-idea"
        ],
        "isoDate": "2025-05-14T08:17:46.000Z"
      },
      {
        "creator": "Dmitry Romanov",
        "title": "DataGrip and Database Tools UX Survey #2",
        "link": "https://blog.jetbrains.com/datagrip/2025/05/13/datagrip-and-database-tools-ux-survey-2/",
        "pubDate": "Tue, 13 May 2025 15:05:14 +0000",
        "content:encodedSnippet": "We’re excited to launch the second edition of our User Experience Survey for DataGrip and the Database Tools & SQL Plugin!\nYour feedback from the previous survey helped us better understand your needs and prioritize the features and improvements that matter most to you.\nThanks to your input, we’ve already delivered a first set of enhancements focused on improving your experience:\nFaster introspection for MySQL and MariaDB (with more DBMS support coming soon!)\nNew Quick Start Guide with sample database\nNon-modal Create and Modify dialogs\nAI-powered Fix and Explain SQL errors\nBetter database context integration within the AI Assistant\nAnd much more: What’s New in DataGrip\n\n\n\n\nNow, we’d love to hear from you again! Have these improvements made a difference for you? What should we focus on next to better meet your needs? \nThe survey takes approximately 10 minutes to complete.\nAs a thank you, everyone who provides meaningful feedback will be entered to win:\nA $100 Amazon Gift Card\nA 1-year JetBrains All Products Pack (individual license)\n\n\n\n\nTake the survey\nThank you for helping us build the best database tools!",
        "dc:creator": "Dmitry Romanov",
        "content": "We’re excited to launch the second edition of our User Experience Survey for DataGrip and the Database Tools &#38; SQL Plugin! Your feedback from the previous survey helped us better understand your needs and prioritize the features and improvements that matter most to you. Thanks to your input, we’ve already delivered a first set of [&#8230;]",
        "contentSnippet": "We’re excited to launch the second edition of our User Experience Survey for DataGrip and the Database Tools & SQL Plugin! Your feedback from the previous survey helped us better understand your needs and prioritize the features and improvements that matter most to you. Thanks to your input, we’ve already delivered a first set of […]",
        "guid": "https://blog.jetbrains.com/?post_type=datagrip&p=565942",
        "isoDate": "2025-05-13T15:05:14.000Z"
      },
      {
        "creator": "Tatiana Parshutkina",
        "title": "Is Rust the Future of Programming?",
        "link": "https://blog.jetbrains.com/rust/2025/05/13/is-rust-the-future-of-programming/",
        "pubDate": "Tue, 13 May 2025 12:15:19 +0000",
        "content:encodedSnippet": "Rust is rewriting the rules of modern software development as the fastest-growing programming language. Its unmatched performance, memory safety without garbage collection, and concurrency capabilities are capturing developers’ attention worldwide. According to our data, with 2,267,000 developers using Rust in the last 12 months and 709,000 identifying it as a primary language, Rust’s footprint in the programming world is expanding rapidly. But what’s fueling its rise? Is it ready to replace C++?\nThis year’s State of Developer Ecosystem Survey reveals some exciting trends: Rust is the only language to set a new usage record, with one in six Go developers considering making the switch. Join us as we break down these insights, explore the future of Rust, and uncover why developers are embracing it to tackle today’s toughest software challenges.\nWhat do you use Rust for?\nIn 2024, while personal and side projects remained a strong use case, developers increasingly recognized Rust’s appeal in career-oriented and enterprise solutions.\n    \n“The most significant change for me is the major increase in the use of Rust at work. Between 2021 and 2024, there was a 68.75% increase in the proportion of Rust developers using Rust commercially. As the number of Rust developers has itself increased, there is a compounding effect throughout the industry.\n\r\n\r\nWhat’s especially interesting to me is how rapidly Rust has been adopted by industry. According to the JetBrains Developer Survey from 2018, only 2% of developers had used Rust at all during that year. 2018 was only 6 years ago.\n\r\n\r\nWe now have a situation where all Python and JavaScript developers are exposed to Rust through high-profile projects fueling their productivity, including uv and turbopack. \n\r\n\r\nAs Rust’s adoption in industry grows, it’s only logical that its usage would decrease for hobby projects. People don’t want to spend their free time using the same language they use for work.”\n\n            \nTim McNamara, X\n                                                                Author of Rust in Action, founder of Accelerant.dev\n                                    \n\n\n\n\nHow long have you been using Rust?\nRust’s community remained dynamic, with a steady influx of new developers contributing to its expansion. The balance between newcomers and experienced users is good for long-term ecosystem health.\n“One of the things that made coming into Rust really nice was the friendly, helpful attitude of the experts. So let’s try and keep doing that as we transition to experts!”\n\n            \nHerbert Wolverson, X\n                                                                Rust Trainer/Consultant at Ardan Labs\n                                    \n\n\n\n\nCoding experience among those who use Rust for work\nRust is rarely a developer’s first programming language, as most Rust professionals come from diverse coding backgrounds with substantial experience. The increase in seasoned developers adopting Rust reflected its reliability and robustness for complex systems, making it an attractive option for experienced professionals transitioning from other languages.\n“Rust is getting easier – you can go ages without ever seeing a lifetime. I’d still not recommend it as a “first-ever” language for most – but I’d replace C and C++ first language classes with it.\n\r\n\r\nRust’s syntax is still a deterrent when you first run into it, but everyone I’ve talked to who has stuck with it past the “wow, this is different” phase has grown to like most of it.\n\r\n\r\nOne of Rust’s big strengths is that it’s multi-paradigm, so everyone can feel at home.”\n\n            \nHerbert Wolverson, X\n                                                                Rust Trainer/Consultant at Ardan Labs\n                                    \n\n\n\n\nTop 10 industry segments among those who use Rust for work\nRust is thriving across several high-demand, innovation-driven sectors such as cloud computing, data analysis, AI, and embedded systems. Its adoption in areas requiring high performance and system reliability reflects the language’s strengths.\n“Rust is the dark horse of the AI race. It isn’t the language chosen by researchers and data scientists, but it powers a lot of the infrastructure required to train ever-larger models.”\n\n            \nLuca Palmieri, X\n                                                                Principal Engineering Consultant, Mainmatter GmbH\n                                    \n\n\n\n\nLanguages used alongside Rust among professionals\nThe data shows that Rust is rarely used in isolation, as the share of developers working exclusively with Rust dropped dramatically in 2024. Rust is becoming increasingly integrated into multi-language environments, with Python and JavaScript/TypeScript being the most common companions in 2024. Shell scripting languages and SQL have also seen consistent adoption alongside Rust as developers manage full-stack or infrastructure-heavy projects.\nInterestingly, the use of low-level languages like C++ and C alongside Rust remained strong, likely due to its overlap in system-level programming domains. However, the increase in usage of Python and JavaScript/TypeScript suggested Rust’s growing role in broader application contexts beyond its traditional systems niche.\n“When I’m teaching “Rust for C or C++ users”, I’ve never run into a successful “drop the years of C and rewrite it all” project; fork-lift upgrades suck, even if you have an amazing target language. Expect coexistence between the two for a very long time – “if it works, don’t break it” isn’t a bad mentality; porting battle-tested code isn’t as fruitful as making sure the new code arrives with better armor!”\n\n            \nHerbert Wolverson, X\n                                                                Rust Trainer/Consultant at Ardan Labs\n                                    \n\n\n\n\nWhich language did you migrate from?\nA significant portion of developers are not directly replacing another programming language with Rust, which suggests that many are adopting it as a complementary technology rather than a strict alternative.\nAmong those who migrated from specific languages, C++ remained the most commonly replaced language in 2024, reflecting Rust’s positioning as a safer and more modern alternative to legacy system-level tools. Other notable mentions include Python, C, and Go, showing Rust’s ability to compete across multiple domains, from scripting to systems programming.\n“Rust is more and more standing on its own. I wonder: how many people are approaching Rust as their first programming language?”\n\n            \nLuca Palmieri, X\n                                                                Principal Engineering Consultant, Mainmatter GmbH\n                                    \n\n\n\n\nWhich IDEs or editors do you use for Rust development?\nThe Rust community has a clear preference for modern, lightweight IDEs and editors, with Visual Studio Code holding its position as the top choice. This is consistent with its broad popularity across industries and its support for Rust through extensions like rust-analyzer.\nInterestingly, RustRover, a JetBrains IDE purpose-built for Rust, debuted in 2024 and immediately gained traction within the community, reflecting a growing demand for specialized tools. Traditional options like Vim and IntelliJ IDEA Ultimate remain valuable for those who prefer customizable or full-featured IDEs.\nTry RustRover\n                                                    \nBy comparison, tools like Eclipse and Sublime Text see minimal adoption, emphasizing a shift to editors and IDEs that prioritize Rust-specific features.\n“Features like lifetime visualization can be a lifesaver! Rust Rover was an immediate install for me because I was used to other JetBrains environments – but VS Code was a decent choice. Rust-analyzer is a pretty remarkable language server!”\n\n            \nHerbert Wolverson, X\n                                                                Rust Trainer/Consultant at Ardan Labs\n                                    \n\n\n\n\nHow does Rust code interact with the other parts of your code?\nRust’s strong interoperability features make it ideal for integrating with codebases written in other languages. The adoption of REST APIs leads as the most common method of integration, reflecting Rust’s use in web development and backend services. Language interoperability (via foreign functions) is also significant, signaling Rust’s frequent use alongside systems programming languages like C and C++.\nEmerging technologies like WebAssembly/WASI show how Rust caters to modern, portable computing needs. Meanwhile, RPC also sees adoption, particularly for distributed systems requiring high-performance communication.\n“Interoperability with other languages is of paramount importance for Rust adoption in the industry, especially on brownfield projects. Network, FFI, WASM – you can pick whatever fits your use case best, thus minimizing friction.”\n\n            \nLuca Palmieri, X\n                                                                Principal Engineering Consultant, Mainmatter GmbH\n                                    \n\n\n\n\nHow do you usually debug your Rust code?\nRust developers rely heavily on simple, practical debugging tools. A majority prefer using println! and dbg! macros, pointing to a lightweight, direct approach to tracing program behavior, especially during early development phases. UI debugging in IDEs is also widely used, reflecting the growing maturity of development tooling tailored to Rust.\nMore traditional console-based debuggers like gdb or lldb are likely to be used by those working on low-level systems projects. Notably, only 4% of respondents avoided debugging altogether, suggesting that most developers actively rely on strong debugging practices to handle Rust’s strict compile-time guarantees.\n“I’m a println! debugger – I only fall back on the IDE debugger when I’m really stuck.”\n\n            \nHerbert Wolverson, X\n                                                                Rust Trainer/Consultant at Ardan Labs\n                                    \n\n\n\n\nWhich profiling tools do you use for Rust, if any?\nProfiling remains an underutilized area in the Rust ecosystem, as 70% of developers report not using any profiling tools. Among those who do, IDE-bundled profilers are the most common, with developers showing a preference for tools that integrate tightly with development environments. Low-level profilers like perf, gprof, and Callgrind/Cachegrind see lower adoption, mostly being used by developers working on performance-critical systems projects.\n“Profiling remains a pain point when using Rust daily. The user experience of traditional profiling tools is far from optimal, so it’s great to see IDEs stepping in to fill the gap.”\n\n            \nLuca Palmieri, X\n                                                                Principal Engineering Consultant, Mainmatter GmbH\n                                    \n\n\n\n\nWhich kinds of projects do you develop in Rust?\nRust is thriving in traditional domains like systems and network programming but is increasingly branching into web, desktop applications, and newer fields like embedded systems, machine learning, and blockchain.\n“Each ecosystem cares about Rust for different reasons. Infrastructure savings and correctness help Rust in the Cloud-native world, portability boosts its usage for CLIs, while memory safety pushes its adoption for system programming.\n\r\n\r\nIt is truly a general-purpose programming language.”\n\n            \nLuca Palmieri, X\n                                                                Principal Engineering Consultant, Mainmatter GmbH\n                                    \n\n\n\n\nWhy did you start using Rust?\nDevelopers are drawn to Rust due to its blend of safety, performance, and the challenge of learning a modern language. Additionally, its increasing recognition as a vital language in the industry motivates career-focused adoption.\n“I was burned out on a C++ project that just wouldn’t work right, and wanted to see what the cool kids were doing!”\n\n            \nHerbert Wolverson, X\n                                                                Rust Trainer/Consultant at Ardan Labs\n                                    \n\n\n\n\nWhich of the following sources did you use to learn Rust?\nDue to Rust’s complexity, its official documentation is the cornerstone of learning the language, often complemented by books and other online resources. The absence of widely available formal or employer-provided training suggests that Rust’s adoption has been largely self-directed and community-driven. \nRead our How to Learn Rust blog post to help you get started.\n“One thing is certain – there’s no shortage of learning resources to get started with Rust!\n\r\nWe don’t yet have the same abundance for intermediate and advanced topics, but things are improving every year.”\n\n            \nLuca Palmieri, X\n                                                                Principal Engineering Consultant, Mainmatter GmbH\n                                    \n\n\n\n\nRust’s evolution in 2024 demonstrates its growing role as a foundational language for modern software development. From its increasing adoption in professional environments to its use across diverse industries like systems programming, web development, and embedded systems, Rust is no longer just a systems language – it’s a versatile, community-driven force. Developers are embracing Rust for its safety, performance, and modern features, with its adoption driven by both newcomers and seasoned professionals.\nWhile challenges such as tooling gaps and Rust’s steep learning curve remain, the language’s vibrant community and robust ecosystem continue to push it forward. Fueled by passionate developers and real-world success, Rust is shaping the future of software engineering and paving the way for safer, faster, and more scalable solutions. The future of Rust is bright, and its momentum shows no sign of slowing down.",
        "dc:creator": "Tatiana Parshutkina",
        "content": "Rust is rewriting the rules of modern software development as the fastest-growing programming language. Its unmatched performance, memory safety without garbage collection, and concurrency capabilities are capturing developers’ attention worldwide. According to our data, with 2,267,000 developers using Rust in the last 12 months and 709,000 identifying it as a primary language, Rust’s footprint in [&#8230;]",
        "contentSnippet": "Rust is rewriting the rules of modern software development as the fastest-growing programming language. Its unmatched performance, memory safety without garbage collection, and concurrency capabilities are capturing developers’ attention worldwide. According to our data, with 2,267,000 developers using Rust in the last 12 months and 709,000 identifying it as a primary language, Rust’s footprint in […]",
        "guid": "https://blog.jetbrains.com/?post_type=rust&p=564910",
        "categories": [
          "news",
          "rust"
        ],
        "isoDate": "2025-05-13T12:15:19.000Z"
      },
      {
        "creator": "Siva Katamreddy",
        "title": "Building Cloud-Ready Apps Locally: Spring Boot, AWS, and LocalStack in Action",
        "link": "https://blog.jetbrains.com/idea/2025/05/building-cloud-ready-apps-locally-spring-boot-aws-and-localstack-in-action/",
        "pubDate": "Tue, 13 May 2025 11:31:31 +0000",
        "content:encodedSnippet": "Developing an application with AWS services can introduce significant local‑development hurdles. Often, developers don’t receive timely AWS access, or a sysadmin inadvertently grants credentials for the wrong account – only to fix the error a week later. Then, when engineers discover they still lack permissions for certain resources, they must endure yet another week-long wait to secure the proper rights. All the while, the project deadline remains unchanged.\nAWS services can be expensive during development and testing. Every resource – EC2 instances, databases, API calls, and storage – incurs per-use charges. Running multiple test environments or leaving resources idle quickly raises costs. Data transfer fees and premium services add even more charges.\nLocalStack to the rescue!\nIntroducing LocalStack\nLocalStack emulates AWS services on your local machine, allowing you to develop and test applications without provisioning real cloud resources. It provides realistic implementations of services like S3, Lambda, DynamoDB, and API Gateway. So your code can interact with LocalStack just like it would interact with real AWS services. By running LocalStack entirely locally, you can iterate faster, avoid unexpected cloud charges, and uncover integration issues early.\nLocalStack also integrates smoothly with CI/CD pipelines and infrastructure-as-code tools like Terraform or the Serverless Framework, ensuring consistent environments from development through to production.\nYou can install LocalStack using an OS-specific installer, LocalStack Desktop application, or Docker by following the installation instructions. However, Testcontainers provides a LocalStack module, which makes it easy to use for local development and testing.\nLet’s see how we can build a Spring Boot application using AWS S3 and SQS services with LocalStack by implementing a hypothetical scenario:\nA message with an ID and content properties will be published to an SQS queue, and the listener will consume the message and store the message content in an S3 bucket with the message ID as the key. We should be able to retrieve the message content from the S3 bucket by key ID.\nYou can find the sample application code here.\nCreate a Spring Boot application with Spring Cloud AWS dependencies\nSpring Cloud AWS is a community-driven project that simplifies using AWS services in Spring-powered applications. Spring Cloud AWS provides higher-level abstractions to interact with AWS services such as S3, SQS, SNS, and others, using the Spring programming model.\nPrerequisites\nTo follow along with this tutorial, you need to have the following installed:\nJDK 17 or later\nDocker\nAs of now, Spring Initializr doesn’t provide support for Spring Cloud AWS dependencies. So, let’s create a Spring Boot application by selecting the Testcontainers dependency. You can create a Spring Boot project directly from IntelliJ IDEA Ultimate.\nOnce the project is created, let’s add the Spring Cloud AWS dependencies manually.\nAdd the following dependencies to the pom.xml:\n<properties>\n   ...\n   <awspring.version>3.3.0</awspring.version>\n</properties>\n\n<dependencyManagement>\n   <dependencies>\n     <dependency>\n         <groupId>io.awspring.cloud</groupId>\n         <artifactId>spring-cloud-aws-dependencies</artifactId>\n         <version>${awspring.version}</version>\n         <type>pom</type>\n         <scope>import</scope>\n     </dependency>\n   </dependencies>\n</dependencyManagement>\n\n<dependencies>\n   <dependency>\n       <groupId>io.awspring.cloud</groupId>\n       <artifactId>spring-cloud-aws-starter-s3</artifactId>\n   </dependency>\n   <dependency>\n       <groupId>io.awspring.cloud</groupId>\n       <artifactId>spring-cloud-aws-starter-sqs</artifactId>\n   </dependency>\n\n   <dependency>\n       <groupId>org.springframework.boot</groupId>\n       <artifactId>spring-boot-starter-test</artifactId>\n       <scope>test</scope>\n   </dependency>\n   <dependency>\n       <groupId>org.springframework.boot</groupId>\n       <artifactId>spring-boot-testcontainers</artifactId>\n       <scope>test</scope>\n   </dependency>\n   <dependency>\n       <groupId>org.testcontainers</groupId>\n       <artifactId>junit-jupiter</artifactId>\n       <scope>test</scope>\n   </dependency>\n   <dependency>\n       <groupId>io.awspring.cloud</groupId>\n       <artifactId>spring-cloud-aws-testcontainers</artifactId>\n       <scope>test</scope>\n   </dependency>\n   <dependency>\n       <groupId>org.testcontainers</groupId>\n       <artifactId>localstack</artifactId>\n       <scope>test</scope>\n   </dependency>\n   <dependency>\n       <groupId>org.awaitility</groupId>\n       <artifactId>awaitility</artifactId>\n       <scope>test</scope>\n   </dependency>\n\n</dependencies>\nIn the pom.xml, we have:\nConfigured the spring-cloud-aws-dependencies BOM (bill of materials) with version 3.3.0.\nAdded the spring-cloud-aws-starter-s3 and spring-cloud-aws-starter-sqs dependencies to enable us to work with S3 and SQS.\nAdded the Testcontainers LocalStack dependency so that we can create a LocalStack instance as a Docker container.\nAdded the spring-cloud-aws-testcontainers dependency so that we can use Spring Boot’s ServiceConnection support for LocalStack.\nAdded the Awaitility dependency to test asynchronous workflows such as publishing a message to an SQS queue and verifying the result.\nConfigure application properties\nInstead of hard-coding the S3 bucket name and SQS queue name, let’s make them configurable properties.\nIn the src/main/resources/application.properties file, configure the following properties:\napp.bucket-name=testbucket\napp.queue-name=testqueue\nCreate a Java record to store these properties and access them in a type-safe manner using @ConfigurationProperties as follows:\npackage com.jetbrains.demo;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.boot.context.properties.bind.DefaultValue;\n\n@ConfigurationProperties(prefix = \"app\")\npublic record ApplicationProperties(\n    @DefaultValue(\"testqueue\") String queueName,\n    @DefaultValue(\"testbucket\") String bucketName) {}\nSave and retrieve data from an S3 bucket\nSpring Cloud AWS offers higher-level abstractions, such as S3Client and S3Template, providing methods to enable the most common use cases to work with AWS S3.\nLet’s create a class called StorageService and implement methods to upload and download data from our S3 bucket.\npackage com.jetbrains.demo;\n\nimport io.awspring.cloud.s3.S3Template;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class StorageService {\n   private final S3Template s3Template;\n\n   public StorageService(S3Template s3Template) {\n       this.s3Template = s3Template;\n   }\n\n   public void upload(String bucketName, String key, InputStream stream) {\n       this.s3Template.upload(bucketName, key, stream);\n   }\n\n   public InputStream download(String bucketName, String key) throws IOException {\n       return this.s3Template.download(bucketName, key).getInputStream();\n   }\n\n   public String downloadAsString(String bucketName, String key) throws IOException {\n       try (InputStream is = this.download(bucketName, key)) {\n           return new String(is.readAllBytes());\n       }\n   }\n}\nPublish and consume messages from an SQS queue\nCreate a Java record called Message:\npackage com.jetbrains.demo;\n\nimport java.util.UUID;\n\npublic record Message(UUID id, String content) {}\nCreate a class with the name MessagePublisher to publish a message to the SQS queue.\npackage com.jetbrains.demo;\n\nimport io.awspring.cloud.sqs.operations.SqsTemplate;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class MessagePublisher {\n   private final SqsTemplate sqsTemplate;\n\n   public MessagePublisher(SqsTemplate sqsTemplate) {\n       this.sqsTemplate = sqsTemplate;\n   }\n\n   public void publish(String queueName, Message message) {\n       sqsTemplate.send(to -> to.queue(queueName).payload(message));\n   }\n}\nCreate a class with the name MessageListener to consume the message from the SQS queue and store the message content in the S3 bucket.\npackage com.jetbrains.demo;\n\nimport io.awspring.cloud.sqs.annotation.SqsListener;\nimport org.springframework.stereotype.Service;\n\nimport java.io.ByteArrayInputStream;\nimport static java.nio.charset.StandardCharsets.UTF_8;\n\n@Service\npublic class MessageListener {\n   private final StorageService storageService;\n   private final ApplicationProperties properties;\n\n   public MessageListener(StorageService storageService, ApplicationProperties properties) {\n       this.storageService = storageService;\n       this.properties = properties;\n   }\n\n   @SqsListener(queueNames = {\"${app.queue-name}\"})\n   public void handle(Message message) {\n       var bucketName = this.properties.bucketName();\n       var key = message.id().toString();\n       var inputStream = new ByteArrayInputStream(message.content().getBytes(UTF_8));\n       this.storageService.upload(bucketName, key, inputStream);\n   }\n}\nWe have implemented our use case using AWS S3 and SQS services. Note that there is nothing specific to LocalStack in our implementation.\nNow that we have all the pieces together, let’s see how we can test the end-to-end flow using LocalStack without having to talk to real AWS services.\nTesting AWS Service integrations with LocalStack\nWe can spin up an instance of LocalStack as a Docker container using the Testcontainers localstack module. Then, by registering a bean of LocalStackContainer with @ServiceConnection annotation, the AWS connection properties such as AWS endpoint, region, and others will be auto-configured.\nLocalStack comes with a tool called awslocal, similar to AWS CLI, that can be used to create AWS resources such as S3 buckets, SQS queues, and more. So, once the LocalStack container is started, we can create S3 buckets and SQS queues using Testcontainers’ container.execInContainer() method.\npackage com.jetbrains.demo;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.TestConfiguration;\nimport org.springframework.boot.testcontainers.service.connection.ServiceConnection;\nimport org.springframework.context.annotation.Bean;\nimport org.testcontainers.containers.localstack.LocalStackContainer;\nimport org.testcontainers.utility.DockerImageName;\n\nimport java.io.IOException;\n\n@TestConfiguration(proxyBeanMethods = false)\npublic class TestcontainersConfig {\n   @Autowired\n   ApplicationProperties properties;\n\n   @Bean\n   @ServiceConnection\n   LocalStackContainer localstackContainer() throws IOException, InterruptedException {\n       LocalStackContainer localStack = new LocalStackContainer(DockerImageName.parse(\"localstack/localstack:4.3.0\"));\n       localStack.start();\n       localStack.execInContainer(\"awslocal\", \"s3\", \"mb\", \"s3://\" + properties.bucketName());\n       localStack.execInContainer(\"awslocal\", \"sqs\", \"create-queue\", \"--queue-name\", properties.queueName());\n       return localStack;\n   }\n}\nWe have created an S3 bucket and SQS queue with the names configured in the application.properties file.\nNow let’s write a test to publish a message to the SQS queue and verify that the message exists in the S3 bucket.\npackage com.jetbrains.demo;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.context.annotation.Import;\n\nimport java.time.Duration;\nimport java.util.UUID;\n\nimport static org.assertj.core.api.Assertions.assertThat;\nimport static org.awaitility.Awaitility.await;\n\n@SpringBootTest\n@Import(TestcontainersConfig.class)\nclass MessageProcessingTest {\n\n   @Autowired\n   StorageService storageService;\n\n   @Autowired\n   MessagePublisher publisher;\n\n   @Autowired\n   ApplicationProperties properties;\n\n   @Test\n   void shouldHandleMessageSuccessfully() {\n       var message = new Message(UUID.randomUUID(), \"Hello World\");\n       publisher.publish(properties.queueName(), message);\n\n       await().pollInterval(Duration.ofSeconds(2))\n               .atMost(Duration.ofSeconds(10))\n               .ignoreExceptions()\n               .untilAsserted(() -> {\n                   String msg = storageService.downloadAsString(\n                           properties.bucketName(), message.id().toString());\n                   assertThat(msg).isEqualTo(\"Hello World\");\n               });\n   }\n}\nLet’s understand what is happening in the above test:\nA Message instance is published using the MessagePublisher.publish() method\nUsing Awaitility, we keep looking for an object in the S3 bucket with the message ID as the key, waiting at most 10 seconds with a polling interval of two seconds.\nIf the message is found, then we are verifying the expected content.\nIf no object is found in S3 with the given key within 10 seconds, then the test will fail.\nWe’ve seen how we can use LocalStack for testing the logic of AWS service integrations. Now, let’s see how we can use the same configuration for local development as well.\nLocal development with LocalStack\nDuring local development, we may also want to start the application and interact with it by accessing the UI or invoking API endpoints, for instance.\nWe can therefore create a TestApplication class under src/test/java that will load the bean configurations from the TestcontainersConfiguration to start the application.\npackage com.jetbrains.demo;\n\nimport org.springframework.boot.SpringApplication;\n\npublic class TestApplication {\n   public static void main(String[] args) {\n       SpringApplication.from(Application::main)\n               .with(TestcontainersConfig.class)\n               .run(args);\n   }\n}\nNow you can run this class to start our Spring Boot application by automatically starting the application dependencies (LocalStack in this case) with the AWS connection parameters autoconfigured.\nThis greatly simplifies the local development and testing of the application using AWS services.\nSummary\nLocalStack dramatically improves the developer experience by running a fully functional, local AWS cloud sandbox on your machine. Instead of waiting for IAM tickets, wrestling with slow deployments, or worrying about live resources and associated costs, you can spin up S3 buckets, Lambda functions, DynamoDB tables, and more in seconds – and iterate against them just like the real AWS APIs. This instant feedback loop helps you catch integration issues early, simplifies debugging, and lets your CI pipelines run reliably without external dependencies.\nBest of all, because everything runs locally, you avoid paying for development and test infrastructure. This means there are no more surprise cloud bills for idle EC2 instances or test databases, and it allows you to focus on writing great code rather than tracking down charges.\nYou can find the sample application code here.\nTo explore more about building applications using Spring Cloud AWS and LocalStack, check out the documentation at Spring Cloud AWS and LocalStack.",
        "dc:creator": "Siva Katamreddy",
        "content": "Developing an application with AWS services can introduce significant local‑development hurdles. Often, developers don’t receive timely AWS access, or a sysadmin inadvertently grants credentials for the wrong account – only to fix the error a week later. Then, when engineers discover they still lack permissions for certain resources, they must endure yet another week-long wait [&#8230;]",
        "contentSnippet": "Developing an application with AWS services can introduce significant local‑development hurdles. Often, developers don’t receive timely AWS access, or a sysadmin inadvertently grants credentials for the wrong account – only to fix the error a week later. Then, when engineers discover they still lack permissions for certain resources, they must endure yet another week-long wait […]",
        "guid": "https://blog.jetbrains.com/?post_type=idea&p=566459",
        "categories": [
          "idea",
          "java",
          "tutorials",
          "aws",
          "localstack",
          "spring-boot",
          "spring-cloud-aws",
          "testcontainers-2"
        ],
        "isoDate": "2025-05-13T11:31:31.000Z"
      },
      {
        "creator": "Elena Kerpeleva",
        "title": "Livestream: Plugin Verifier and API Compatibility Maintenance",
        "link": "https://blog.jetbrains.com/platform/2025/05/livestream-plugin-verifier-and-api-compatibility-maintenance/",
        "pubDate": "Tue, 13 May 2025 11:09:11 +0000",
        "content:encodedSnippet": "Maintaining plugin compatibility across JetBrains IDEs can be tricky — but the Plugin Verifier is here to help.\nOn Wednesday, May 21, at 2:00 PM UTC, join us for a live session with IntelliJ Platform Developer Advocates Róbert Novotný and Yann Cébron, focused on the Plugin Verifier and API compatibility maintenance.\n\n\n\n\nDuring the webinar, you’ll discover how:\nThe Plugin Verifier ensures plugin compatibility across JetBrains IDEs.\n\n\n\n\nTo verify full functionality with the latest IDE versions.\n\n\n\n\nThe verifier integrates with the IntelliJ Gradle Plugin.\n\n\n\n\nIt plays a key role in the JetBrains Marketplace plugin approval process.\nRegister Now\n                                                    \nNo matter your experience level, this session will help you better understand the tools and practices that keep your plugins stable and Marketplace-ready.\nAt the end of the session, stick around for a live Q&A with our experts!\nDon’t miss this opportunity to sharpen your plugin maintenance skills and get expert insights from those building the platform.\nSpeaking to you:\nRóbert Novotný is a Software Engineer with two decades of experience in Java backend development. He currently contributes to the IntelliJ Platform tools at JetBrains, primarily focusing on the Plugin Verifier. He is a long-time university lecturer, where he teaches distributed systems and concurrent programming. As a hobby, he maintains a set of third-party IntelliJ IDE-based plugins.",
        "dc:creator": "Elena Kerpeleva",
        "content": "Maintaining plugin compatibility across JetBrains IDEs can be tricky — but the Plugin Verifier is here to help. On Wednesday, May 21, at 2:00 PM UTC, join us for a live session with IntelliJ Platform Developer Advocates Róbert Novotný and Yann Cébron, focused on the Plugin Verifier and API compatibility maintenance. During the webinar, you’ll discover how: [&#8230;]",
        "contentSnippet": "Maintaining plugin compatibility across JetBrains IDEs can be tricky — but the Plugin Verifier is here to help. On Wednesday, May 21, at 2:00 PM UTC, join us for a live session with IntelliJ Platform Developer Advocates Róbert Novotný and Yann Cébron, focused on the Plugin Verifier and API compatibility maintenance. During the webinar, you’ll discover how: […]",
        "guid": "https://blog.jetbrains.com/?post_type=platform&p=566690",
        "categories": [
          "plugin-development",
          "intellij",
          "livestreams",
          "marketplace",
          "busy-plugin-developers",
          "jetbrains-marketplace",
          "livestream"
        ],
        "isoDate": "2025-05-13T11:09:11.000Z"
      },
      {
        "creator": "Alexey Totin",
        "title": "CodeCanvas 2025.1 With Free Tier and Toolbox Support",
        "link": "https://blog.jetbrains.com/codecanvas/2025/05/codecanvas-2025-1-with-free-tier-and-toolbox-support/",
        "pubDate": "Tue, 13 May 2025 09:46:00 +0000",
        "content:encodedSnippet": "In April, we released CodeCanvas 2025.1 with many important changes. The release brings improved infrastructure flexibility for easier multi-region setups, a new AWS CloudFormation installation option, enhanced environment logs, and more.\nToday, we want to highlight two major updates:\nThe introduction of the CodeCanvas Free tier makes it easier to try cloud development environments before committing. \nSupport for JetBrains Toolbox as a launcher for dev environments.\nSee the full What’s New for the full details.\nUse CodeCanvas for free\nWith the 2025.1 release, you can use CodeCanvas without buying a license. \nWhy have we introduced the Free tier?\nBy introducing CodeCanvas Free, we invite you to try cloud development environments (CDEs) to solve common problems like long onboarding times, complex local setups, and machine performance limitations at no cost. We want more teams to experience faster development without infrastructure getting in the way.\nFree vs. Professional\nThe Free tier includes all core features needed for remote development: creating an unlimited number of users, CDEs, and CDE templates; support for JetBrains IDEs and VS Code; GPU support within the CDEs; the warm-up and standby pool features for fast CDE startup; and many more.\n\nCodeCanvas FreeCodeCanvas Professional\n•Unlimited users\n•Unlimited dev environments and templates\n•Instant access to environments with warm-up and standby pools\n•VS Code and JetBrains IDE integration\n•Sysbox support for enhanced container security\n•GPU support\n•Multirepository dev environments•All the features of the free license\n•Environment cleanup policies for cost optimization\n•Snapshot-based storage optimization\n•Copy-paste restrictions\n•User group and role management\n•Unlimited computing platforms to support multiple instance locations\n•Priority support\n\n\n\n\nHowever, some enterprise-level features are not available or are limited in the Free tier:\nInfrastructure limitation: You can connect only one Kubernetes cluster to run CDEs, so you can’t create multiregion setups and separate workloads between clusters.\nSecurity management: You can’t create User Groups, Custom Roles, or restrict copy-paste inside CDEs.\nCleanup policies: Features like automated deletion of unused CDEs or snapshotting inactive CDE volumes are unavailable. These are especially useful for saving cloud costs at scale.\nThese features are marked in the UI with the Pro badge. More details can be found in our documentation and on the CodeCanvas page.\nHow to get CodeCanvas Free\nYou can request a CodeCanvas Free license by filling out the form on the official website. Once approved, you can start using CodeCanvas Free without any payments or time limits.\nLaunch CDEs with JetBrains Toolbox\nWith this release, you can use JetBrains Toolbox to launch and manage your CodeCanvas dev environments, in addition to JetBrains Gateway.\nWhy Toolbox?\nMost JetBrains users already have JetBrains Toolbox installed. So, for many developers, asking them to install another dedicated app like Gateway just to launch remote environments feels redundant. Toolbox is designed to be a central hub for all development work, local or remote. Adding support for remote environments is a natural evolution.\nThis isn’t just about CodeCanvas. Starting with version 2.6, Toolbox supports a growing number of remote development providers, including SSH, Coder, Gitpod, and now CodeCanvas. It’s part of JetBrains’ long-term strategy to make remote development a first-class experience across our ecosystem.\nWhat it means\n\nIf you already have JetBrains Toolbox installed, you can now open your remote environments directly through it. Toolbox will automatically download the matching JetBrains Client and connect to the remote IDE. More details can be found in the CodeCanvas documentation.\nImportant: Toolbox integration is currently in Beta and requires Toolbox version 2.6 or later. \nWhat can CodeCanvas do for your team?\nWant to learn more about the benefits of CDEs and whether they’re right for your organization? Check out some of our recent posts:\nSolving Remote Development Challenges With CodeCanvas\nShould Your Company Adopt Remote Development?\nFrom VDI to CDEs\nCDEs aren’t Just for Developers: How QA, Tech Writers, and Designers Benefit too\nTry CodeCanvas Free today\nCodeCanvas is an on-premises solution, so you’ll need to install it on your cloud infrastructure.\nLaunch the installation (AWS account required)\nFollow the installation instructions\nGet a free license\nFor other cloud types, please consult the installation instructions in our documentation.",
        "dc:creator": "Alexey Totin",
        "content": "In April, we released CodeCanvas 2025.1 with many important changes. The release brings improved infrastructure flexibility for easier multi-region setups, a new AWS CloudFormation installation option, enhanced environment logs, and more. Today, we want to highlight two major updates: See the full What’s New for the full details. Use CodeCanvas for free With the 2025.1 [&#8230;]",
        "contentSnippet": "In April, we released CodeCanvas 2025.1 with many important changes. The release brings improved infrastructure flexibility for easier multi-region setups, a new AWS CloudFormation installation option, enhanced environment logs, and more. Today, we want to highlight two major updates: See the full What’s New for the full details. Use CodeCanvas for free With the 2025.1 […]",
        "guid": "https://blog.jetbrains.com/?post_type=codecanvas&p=566694",
        "categories": [
          "cloud-development-environments",
          "codecanvas",
          "news",
          "releases",
          "remote-development",
          "cde-orchestration",
          "release"
        ],
        "isoDate": "2025-05-13T09:46:00.000Z"
      },
      {
        "creator": "Clara Maine",
        "title": "Learning to Think in an AI World: 5 Lessons for Novice Programmers",
        "link": "https://blog.jetbrains.com/education/2025/05/12/five-lessons-for-novice-programmers-ai-world/",
        "pubDate": "Mon, 12 May 2025 14:19:37 +0000",
        "content:encodedSnippet": "This is the second article of the series How to Learn to Code in an AI World. Don’t miss the first, Is it Still Worth Learning to Code?\nImagine the following scenario: \nA student is enrolled in an introductory computer science course. They have no previous programming experience and don’t consider themselves very good at math or technical subjects. In this course, the teacher allows the use of large language models like ChatGPT and AI code completion software to help students with their work.\nWhen completing a homework assignment, the student carefully reads the prompt and begins to code. Almost immediately, an AI code suggestion tool generates a long function, which overwhelms them, prompting them to turn to ChatGPT instead. Believing it’s best to use AI as a tutor rather than an answer machine, they request step-by-step guidance. However, after reading the first point of advice, they scroll past the explanation in search of a quicker solution and copy the generated code. This code, however, does not fully match the problem and contains unfamiliar syntax, leading to confusion. After repeatedly passing their code back and forth between the IDE and ChatGPT, they eventually produce a version that passes the test cases, though without fully understanding how it works.\nWhen asked later about how useful they found the AI, they answered “very” and appreciated its utility as a personal tutor in a class they struggle in. They lack awareness of the way they actually use the AI and have a skewed perception of their understanding of the material.\nNow imagine another student in the same class. She once attended a STEM-focused summer camp and is familiar with the frustration of learning to code. She does not find it easy, but has the experience behind her to know she is capable of producing working output.\nWhen completing the same assignment, the student carefully reads the problem description and begins structuring her solution by naming variables and adding comments to outline her approach. As she types, the AI-powered code suggestion tool provides frequent input, which she occasionally glances at but mostly ignores, preferring to follow her own plan. When she does accept suggestions, they are small and deliberate – filling in predictable elements like closing brackets or simple conditionals. While she encounters a few syntax mistakes, she methodically corrects them and successfully completes the assignment, passing all test cases in a short time. Looking back, she acknowledges that AI helped her move faster but credits her own structured thinking for getting to the right solution.\n\n\n\n\nThe example above is not hypothetical. This scenario was illustrated in a 2024 study about AI’s role in the widening gap between struggling and non-struggling students. Although it may seem counterintuitive, the emergence of AI being there at any moment to write code for us might mean an increased emphasis on writing more of it by hand, at least in the beginning. \nConsidering this, we’ve introduced several AI-powered features in our plugin, including machine translation for course content, theory lookup, and AI hints. The goal is not to avoid AI entirely but to learn how to think effectively alongside it. The following five lessons will help you develop the skills and practices you’ll need to navigate AI tools and become a stronger, more independent programmer.\nIf you missed it, read part one of this series: Is it Still Worth Learning to Code?\nFocus on problem solving, not output\nPauses in programming are useful, even if they feel like getting stuck. Novice programmers are often surprised at how much time will go into a single function or even a single line of working code. This slow and often frustrating process is necessary for building the kind of cognitive processes you’ll need to become a better programmer.\n\n\n\n\nRefining your thinking will also improve your ability to quickly read and understand code you haven’t written yourself. While this has always been important for collaboration, now that we have AI code assistants, developers are reading a lot more code than they used to. If a large-language model autocompletes your function, you want to be able to quickly accept or reject the suggestion without getting caught up in understanding the logic of it.\nHack your own psychology\nIf there’s one idea that should leave the gated garden of research and make its way into classrooms immediately, it’s the concept of meta-cognitive awareness. Granted, the reason it hasn’t is probably because “meta-cognitive awareness” is not a very enticing term – but the idea is quite simple. It’s about your ability to recognize “thinking traps” and effectively problem-solve your way out of them.\nResearch has shown that teaching beginners about these challenges produces immediate and lasting changes to the students’ productivity, independence, and confidence. Given that, it might be good to take the time to learn them!\n\n\n\n\nHere are a few meta-cognitive difficulties or “thinking traps” common in programming:\nRight question, wrong answer (Forming) – You understand the problem, but you’re using the wrong approach to solve it.\nStuck in a Rut (Dislodging) – Even when you realize your approach isn’t working, you struggle to change it. \nWrong question, right answer (Assumption) – You perfectly solve a problem… just not the one you were supposed to.\nSo close, but so far (Location) – You zoom through the steps too fast, thinking you’re almost done, only to realize you skipped something crucial.\nBand-aid on a broken bone (Achievement) – You keep making small fixes in hopes your code will start working, but actually, it needs a total overhaul.\nInterestingly, researchers found that rather than helping with these challenges, AI actually introduced new meta-cognitive difficulties for beginners. Namely, \nFalling Behind Without Noticing (Progression) – You think you’re keeping up with the course, but because AI assistance can generate working code that surpasses your current understanding, you’re falling behind and don’t realize it.\nDistracting Pop-Ups (Interruption) – Every time you try to focus, an AI code-completion tool throws a suggestion at you, breaking your train of thought. \nFollowing bad advice (Mislead) – You trust a suggestion (from an AI, a tutorial, or even your own guess) that seems right but actually takes you in the wrong direction.\nAt the moment, most AI tools are not built with these challenges in mind. Even if they were, you are the sole expert of your own mind, and there is only so much an external resource can do to see the traps in your thoughts.\nDon’t rush too quickly towards ill-conceived code\nAlthough it looks good in the movies, speed-coding is unproductive for learning. Much of getting through your first programming assignments involves taking the time to understand the problem and then properly strategizing a solution. Both of these are mental processes and should be done before you start coding! While it’s satisfying to generate a lot of code very quickly – in practice, the faster you write the code, the more time you have to spend debugging it\n\n\n\n\nDon’t make the classic mistake of grinding through a vague idea until you’re left with a steaming pile of broken syntax and semantic errors you’ve put five hours into debugging and are too invested in to rebuild the right way. Much of that time would be better spent working out the data structures and program architecture before you write a single line. Once the logic of your program is solid in your mind, implementing it just becomes a matter of syntax.\nTake steps to avoid the illusion of competence\nMany novice programmers in the study above confidently believed they had solved a programming problem using AI tools, but missed the central lesson of the assignment. This unwarranted confidence, described as an illusion of competence, was compounded by the fact that using too many AI suggestions​ contributed to a lack of awareness of what was holding them back. \nResearch uses the term self-efficacy to describe the confidence people have in their ability to complete specific tasks. A healthy level of self-efficacy fosters persistence and engagement, but when you overestimate your abilities, you may neglect critical reflection and fail to address gaps in your knowledge.\n\n\n\n\nWhile the illusion of competence can occur regardless of the tools used, AI can amplify it. By providing ready-made suggestions or solutions, AI might give you the false impression that you have mastered a concept, even if you struggle to apply it independently.\nHere are some suggestions for avoiding this illusion in your own learning:\nPrioritize active learning above all else: Writing code, debugging, and breaking down problems actively engages the brain more than reading or copying solutions. This engaged state is the key to activating the neural circuitry necessary for learning. \nTry rubber duck debugging: Instead of going to an AI assistant when you get stuck, try the tested and true technique of rubber duck debugging, where you attempt to explain what the faulty code is doing, step by step, out loud. This technique helps you translate a vague intuitive understanding into concrete sentences, which almost always helps you see what needs to change.\nTeach a beginner what you’re learning: Even if you only know the basics, teaching someone else to program is genuinely one of the most underrated educational tactics there is. Novices usually ask questions that can reveal bigger ideas about the material you may have missed.\nCode replays and critique: Anything worth doing is worth doing well. Seeking out peer reviews, instructor feedback, or even automated tools that offer detailed critiques can highlight areas of misunderstanding. This extra step will pay off.\nReframe mistakes as “negative expertise”: Even if your DIY code is rife with bugs and flawed approaches, learning to be a good programmer is as much about knowing what doesn’t work as it is about knowing what does.\nBuild confidence without sophisticated tools: Challenge yourself to solve your next assignment without using an LLM or stack overflow. By depriving yourself of easy answers, you build stronger coding muscles. You may go back to the tools eventually, but these sessions can help build confidence and awareness of your understanding.\nUnderstand the emotions of learning\nAll coders know that the mind of a programmer often oscillates between two extremes: there is either the ecstatic rush of implementing perfectly working code or overwhelming, frustrated confusion. Whether you’ve been coding for a week or a lifetime, this emotional experience is pretty much the same. The trick is to learn to work with and through these experiences, not against them.\nTo truly sustain your programming practice, you should work to foster true confidence, develop a productive response to frustration, let yourself be inspired to play and be creative, and take satisfaction and pride in your work. Understand that these are almost more important than the information you study, because they determine your attitude to programming. Developing and maintaining the belief that you are someone who enjoys programming will serve you well beyond the ability to work out each step of a sorting algorithm by hand.\nExplore our course catalog\n                                                    \nThis is the second post in our series How to Learn to Program in an AI World, keep an eye out for the next ones on our blog in the coming months. If you missed it, check out part 1: Is it still worth learning to code?",
        "dc:creator": "Clara Maine",
        "content": "This is the second article of the series How to Learn to Code in an AI World. Don’t miss the first, Is it Still Worth Learning to Code? Imagine the following scenario: A student is enrolled in an introductory computer science course. They have no previous programming experience and don’t consider themselves very good at [&#8230;]",
        "contentSnippet": "This is the second article of the series How to Learn to Code in an AI World. Don’t miss the first, Is it Still Worth Learning to Code? Imagine the following scenario: A student is enrolled in an introductory computer science course. They have no previous programming experience and don’t consider themselves very good at […]",
        "guid": "https://blog.jetbrains.com/?post_type=education&p=551839",
        "categories": [
          "jetbrains-academy",
          "ai",
          "ai-assistance",
          "career",
          "developers",
          "education",
          "for-learners",
          "jetbrains-research",
          "jetbrainsacademy-2",
          "learn",
          "learn-programming",
          "research"
        ],
        "isoDate": "2025-05-12T14:19:37.000Z"
      },
      {
        "creator": "Olga Bedrina",
        "title": "SAST vs DAST: Differences And When to Use",
        "link": "https://blog.jetbrains.com/teamcity/2025/05/sast-vs-dast/",
        "pubDate": "Fri, 09 May 2025 16:49:43 +0000",
        "content:encodedSnippet": "Anyone working in the software development field knows cybersecurity is a threat you cannot afford to downplay. A cyberattack on a product or service you’ve created carries a risk of serious financial and reputational damage, as well as regulatory penalties, depending on the industry and jurisdiction.\nDefending your software against cyberattacks means addressing security at every stage of the software development lifecycle (SDLC) – from design and development to testing and production monitoring.\n 💡See also: [Whitepaper] 9 Ways to Prevent a Supply Chain Attack on Your CI/CD Server\n\n\n\n\nTwo techniques to help you do this are Static Application Security Testing (SAST) and Dynamic Application Security Testing (DAST). While they may sound similar, SAST and DAST are different testing styles. Teams use the approaches at different points in the SDLC to detect different types of vulnerabilities.\nCompare the differences between SAST vs DAST and understand the benefits each offers, and why it’s a good idea to use both techniques as part of your CI/CD process.\nIn this article:\nWhat are SAST and DAST?\nSAST vs DAST: key differences\nWhen to use SAST, DAST, or both\nSAST vs DAST tool comparison\nHow to implement SAST and DAST effectively\nHow TeamCity can help\nWhat are SAST and DAST?\nSAST\nSAST is a type of automated security testing that examines your source code or binaries for known vulnerabilities. SAST tools allow you to verify you haven’t introduced any security flaws with your latest changes, by checking your code line by line.\nAs SAST doesn’t require a build, you can run these tests as part of your merge or pre-commit checks and get feedback early on in the development process. When a SAST tool identifies a vulnerability in your code, it also reports the relevant line of code so you can go straight to the source of the issue.\nYou can find out more, including key considerations and best practices, in our complete guide to SAST.\nDAST\nDAST runs a series of automated security tests on a deployed web application. DAST tools start by crawling your application to identify all possible endpoints, then systematically analyze the responses and simulate attacks. \nThe results are typically reported with suggested remediation steps, but you’ll need to identify the relevant section of code yourself.\nWhen comparing SAST vs DAST, DAST can only provide feedback at a later point in the SDLC, once you’ve built and deployed your software to a testing environment. However, this means you can use DAST to test how your application interacts with other systems and services.\nCheck out our guide to DAST to learn more about how the technique works, as well as best practices to help you get the most out of it.\nSAST vs DAST: key differences\nSAST and DAST are different styles of automated testing. There is some overlap in the types of vulnerabilities that each approach detects, but the differences in methodology mean these techniques are complementary, not competing.\nLet’s look at the differences in more detail.\n\n\n\n\nTesting approach\nSAST is a type of white box testing. It examines the source code of your application for insecure coding patterns, such as improper input validation or hard-coded API keys. \nBecause SAST goes through your code line by line, it tests every possible branch, including any that may not be exposed at runtime and therefore caught by other forms of testing.\nIn comparison to SAST, DAST is a form of black box testing, meaning the tool has no access to the source code and instead evaluates your application from the outside. DAST tools simulate attacks, such as XSS, CSRF, and SQL injection, on running software. \nSince DAST tests deployed applications, it can evaluate interactions with other systems and detect issues like credentials transmitted in plain text and security flaws arising from misconfigured servers or databases.\nUsage\nAs SAST examines your source code, you need to find a tool that supports the programming languages and frameworks you’re using.\nDAST, however, is language-agnostic. The only requirement for using DAST tools is that you build your application using web-based technologies.\nSoftware development life cycle stage\nWith SAST, there’s no need to build or run your software before you can test it. This means you can run SAST scans early in the development process, such as before pushing your changes or when opening a pull/merge request. \nYou might also choose to schedule regular SAST scans of your entire codebase as part of a nightly test run, or each time you merge changes into a deployment branch.\nDAST, on the other hand, requires an application to be deployed to a test environment. As a result, it can only provide feedback at a later point in the development process. \nAlthough this creates a longer feedback loop, it also provides an opportunity to test interactions with other systems and verify the environment configuration.\nTest results\nSAST tools typically highlight the offending line of code in the test results. Some SAST tools also provide guidance on each vulnerability and how to remedy them.\nAs a black box testing technique, DAST tools aren’t able to identify the relevant line of code in test results. However, many DAST tools provide additional information about vulnerabilities and advice on how to address each issue.\nAccuracy\nAlthough both SAST and DAST carry the risk of false positives (i.e., incorrectly reporting a vulnerability), SAST tools tend to return more false positives because it examines the code out of context.\nComparing SAST and DAST\n\nSASTDAST\nWhite box testing – from inside outBlack box testing – from outside in\nAnalyzes the source code or static binaries for vulnerabilitiesLooks for vulnerabilities while the application is running\nCan be used on any type of softwareLimited to web apps and services\nLimited to the source codeCan test interactions with other services/APIs\nTests every branch of the code, including those not exposed at runtimeMimics behavior of attackers and can identify environment/deployment specific issues\nPinpoints the line of code that introduces the vulnerabilityDoes not identify the source of the vulnerability in test results\nLanguage and framework dependentLanguage agnostic\nRequires access to source code or binaries. Does not require a working buildRequires a working build and deployment to testing/pre-production environment\nIdeal for use early in the CI/CD pipelineDesigned for use later in the CI/CD pipeline\nProvides developers with immediate feedback on latest changesResults provided later in the software development lifecycle\n\n\n\n\n\nWhen to use SAST, DAST, or both\nA common misconception is that SAST replaces DAST, or vice versa. In fact, SAST and DAST are complementary testing techniques that are used at different points in the software development lifecycle. You can include both SAST and DAST in your CI/CD pipeline.\nAs SAST doesn’t require a running application, it’s ideal for use early on in the development process, enabling a “shift left” approach to security testing. You can use SAST tools, such as Checkmarx, Spectra, SonarQube, or Veracode, to verify your latest code changes haven’t introduced any new security issues.\nBy running a SAST scan as part of your early-stage automated tests (alongside linting and unit tests), you can address any new security issues before building other functionality on top. The earlier you run these tests and act on the results, the easier it is, as the changes will still be fresh in your mind.\n🔧 SAST vs DAST tools: comparison table\n\nToolTypeProsConsCommon use cases\nSonarQubeSAST– Open-source and enterprise versions\n– Integrates with many IDEs and CI tools\n– Customizable rulesets– Limited to code-level analysis\n– May require tuning to reduce false positivesEarly-stage code reviews, pre-commit checks in CI pipelines\nCheckmarxSAST– Comprehensive security coverage\nIDE and CI/CD integration\n– Detailed remediation guidance– Enterprise pricing\n– Initial configuration can be complexSecure code analysis in large enterprises with compliance needs\nVeracodeSAST– Cloud-based with low setup overhead\n– Supports multiple languages– Less control over scanning process\n– May have slower scan timesEnterprises looking for SaaS SAST with strong reporting features\nSpectralSAST– Lightweight, fast scanning\n– Good for detecting hard-coded secrets– Not as feature-rich as enterprise toolsDeveloper-first environments, secrets scanning\nBurp SuiteDAST– Manual and automated testing\n– Excellent for advanced security teams– Steep learning curve\n– Limited CI/CD integration without extensionsPenetration testing, manual vulnerability verification\nAcunetixDAST– Fast, automated scans\n– Great UI and reporting\n– API security testing– False positives in some scenarios\n– Costly for smaller teamsRegular vulnerability scans in staging/pre-production environments\nOWASP ZAPDAST– Free and open-source\n– Highly customizable– Requires manual configuration\n– Not ideal for beginnersLightweight DAST testing, educational or small-team environments\nInvicti (Netsparker)DAST– Scalable and automated\n– Proof-based scanning to reduce false positives– Enterprise-focused pricing\n– Less control over scan logicAutomated DAST in continuous deployment environments\n\n\n\n\n\nOnce you merge your code changes, you can run additional automated SAST scans as part of your continuous integration (CI) flow. For instance, you might want to include a SAST tool in the automated tests you run after merging into specific branches, or as part of a nightly test run.\nAgain, this early feedback, combined with test results that identify the relevant code, supports a shift-left security approach and helps you address issues quickly.\nBecause DAST simulates attacks on a running application, it’s sometimes seen as a type of automated penetration testing. However, that doesn’t mean you should only use it when you’re running a pen test. Instead, as a type of automated security testing, DAST is ideal for use in an automated CI/CD pipeline.\nAs DAST requires a deployed application, the time from code change to test feedback is longer. Ideally, you should run DAST each time you deploy a build to a test environment. By incorporating a DAST tool like Acunetix, Burp Suite, or Invicti into your continuous delivery or continuous deployment process, you can detect security issues that SAST cannot identify. \nThat includes vulnerabilities resulting from changes to your environment configuration or from interactions with other services and APIs.\nUsing SAST and DAST (not SAST vs DAST!) in combination gives you the best of both worlds: early feedback that directs you to the source of the issue, plus verification your application as a whole can resist common attacks.\nHow to implement SAST and DAST effectively\nTo get the most out of your SAST and DAST tools, apply the following best practices:\nDo a baseline scan. If you haven’t used SAST or DAST on a project before, a good place to start is with a scan of your entire codebase and/or application to check for existing vulnerabilities.\nPrioritize your fixes. Both the baseline scan and subsequent test runs are likely to highlight a range of issues. Some will be more serious than others, so prioritize them accordingly. Once you’ve addressed the most important issues, you can start using SAST and DAST regularly to ensure you fix new issues as they emerge, while you continue to work through the backlog of minor issues.\n\n\n\n\n\nAutomate your SAST and DAST scans. Make continuous security testing part of your software development process. Incorporating SAST and DAST into a CI/CD pipeline helps shift security considerations further to the left (i.e., earlier in the process). Continuously analyzing and improving your software’s security posture is more effective and efficient than conducting quarterly security audits.\nManage false positives. False positives can quickly become a distraction when reviewing security test results. Optimize the signal-to-noise ratio by choosing tools that let you mute false positives so you can focus on real issues.\nIncorporate other automated security tests in your pipeline. As SAST only checks your source code, consider pairing it with SCA (software composition analysis) to check your project’s dependencies for known vulnerabilities.\nMake time for manual security testing. Running SAST, DAST and other automated tests on every code change or build provides a degree of confidence in your software, but cybersecurity requires a layered approach.\nHow TeamCity can help\nTeamCity is a CI/CD tool that enables software teams to automate their build, test, and deployment process, and get rapid feedback on their latest changes.\nExtensive pipeline configuration options give you the flexibility to create CI/CD flows that suit your needs, including pre-tested commits, merge/pull request support, and scheduled builds. \nTeamCity’s plugin support for a range of SAST and DAST tools – including Acunetix,  Checkmarx,  SonarQube, and Veracode – means you can easily incorporate automated security testing into your CI/CD process. \nEach time a pipeline runs, on-the-fly test reporting alerts you to issues as they’re discovered, while detailed test reports help you get to the root cause quickly.\nKey takeaways\nSAST and DAST are automated security testing techniques.\nUsing these techniques can help you “shift security to the left”.  This means you find and address security flaws earlier, thereby making the development process more effective and efficient.\nSAST checks your code line-by-line and is ideal for use early on in the development process.\nDAST simulates an attack on your running software and can only be used once your code has been built and deployed to a testing environment.\nBoth SAST and DAST can be run as part of an automated CI/CD process.\nTeamCity is a CI/CD platform that supports a number of SAST and DAST tools alongside many other features designed to help you build secure and reliable software.",
        "dc:creator": "Olga Bedrina",
        "content": "Anyone working in the software development field knows cybersecurity is a threat you cannot afford to downplay. A cyberattack on a product or service you’ve created carries a risk of serious financial and reputational damage, as well as regulatory penalties, depending on the industry and jurisdiction. Defending your software against cyberattacks means addressing security at [&#8230;]",
        "contentSnippet": "Anyone working in the software development field knows cybersecurity is a threat you cannot afford to downplay. A cyberattack on a product or service you’ve created carries a risk of serious financial and reputational damage, as well as regulatory penalties, depending on the industry and jurisdiction. Defending your software against cyberattacks means addressing security at […]",
        "guid": "https://blog.jetbrains.com/?post_type=teamcity&p=566328",
        "categories": [
          "testing",
          "guide"
        ],
        "isoDate": "2025-05-09T16:49:43.000Z"
      },
      {
        "creator": "Kodee",
        "title": "Kodee’s Kotlin Roundup: Compose Multiplatform for iOS is Stable (Plus AI, Web, and More!)",
        "link": "https://blog.jetbrains.com/kotlin/2025/05/kodees-kotlin-roundup-compose-multiplatform-for-ios-is-stable/",
        "pubDate": "Fri, 09 May 2025 14:38:45 +0000",
        "content:encodedSnippet": "Sit back, relax, and let the Kotlin vibes roll in.\nThis roundup is overflowing with news: major moves in Kotlin Multiplatform (Compose Multiplatform for iOS is Stable 🎉), server-side upgrades, Kotlin for web, and smarter Kotlin development with JetBrains AI. Whether you’re building mobile apps, backend services, or playing with interactive notebooks, there’s something here for everyone.\nWhat’s new in Kotlin\nKotlin 2.1.21-RC2\nA fresh Release Candidate is out with Kotlin 2.1.21-RC2, bringing bug fixes and performance boosts to 2.1.20. It’s a behind-the-scenes kind of update, but your builds might feel a little snappier.\nSee release notes\n                                                    \nKotlin 2.2.0-Beta2\nKotlin 2.2.0-Beta2 has also landed with a handful of improvements:\nCheck out all the highlights\n                                                    \nKotlinConf 2025 livestream\nKotlinConf 2025 kicks off soon! If you can’t make it in person, no worries – you can catch all the action via our livestream (will be announced shortly!). This year, we’ll be streaming only the main track, bringing you keynotes and sessions from the heart of the event. Subscribe to our Kotlin YouTube channel so you don’t miss a beat.\nSubscribe to Kotlin on YouTube\n                                                    \nSmarter Kotlin development with JetBrains AI: Junie and AI Assistant in IntelliJ IDEA\nWith the public release of Junie and a major update to AI Assistant, the two AI-powered teammates are now baked right into your JetBrains IDEs. Junie tackles full Kotlin tasks, while AI Assistant helps with everything, including writing code, generating tests, explaining errors, and even managing version control tasks. Kotlin and AI are a perfect match!\nSee what’s new\n                                                    \nHow helpful is Kotlin’s documentation to you?\nHave you explored Kotlin’s documentation lately? Did you find what you came for, or did something trip you up? Take our Kotlin Documentation Survey to help us shape a better experience for developers like you.\nTake the survey\n                                                    \nDid you know I regularly share Kotlin Roundups packed with the latest ecosystem news? Sign up to stay in the loop on all things Kotlin!\n\n\n\n            \nKotlin Multiplatform\nCompose Multiplatform for iOS is now Stable\nHuge news! Compose Multiplatform for iOS has become Stable and production-ready in the latest 1.8.0 version. KMP is now a complete solution for mobile development, enabling you to build mobile apps faster with shared UI code, full control over native experiences, and the confidence to ship at scale, all with a sprinkle of Kotlin magic.\nDiscover the highlights\n                                                    \nklibs.io keeps on growing\nThe number of Kotlin Multiplatform libraries listed on klibs.io, our online search platform, has doubled recently. If you haven’t browsed klibs.io lately, you’re missing out on some handy tools.\nTry klibs.io\n                                                    \nKotlin for server-side development\nKtor 3.1.3 released\nWe have released Ktor 3.1.3! The latest version is packed with bug fixes, performance improvements, and dependency updates across both the client and server components.\nSee the full changelog\n                                                    \nStructuring Ktor projects using domain-driven design (DDD) concepts – guide\nOur new guide shows you how to structure a project using domain-driven design (DDD) concepts. You’ll walk through creating a minimalist CRM system that’s clean, scalable, and ready for long-term growth.\nCheck out the guide\n                                                    \nKotlin Notebook arrives in IntelliJ IDEA\nStarting with version 2025.1, Kotlin Notebook, a new interactive environment for JVM developers, is integrated into IntelliJ IDEA Ultimate out of the box – no plugins needed.\nRead the full story\n                                                    \nHow to use Kotlin Notebook for productive development \nKotlin Notebook provides a powerful tool for backend and API developers. It makes your workflow smoother, whether testing REST APIs, using JVM libraries and project code, or working with data.\nImprove your dev flow\n                                                    \nKotlin for web development\nThe present and future of Kotlin for web\nA lot has been happening behind the scenes, and now we’re ready to share the latest updates. From better IDE support for web targets to Kotlin/Wasm and Compose Multiplatform for web moving toward Beta, web development in Kotlin is progressing quickly.\nCatch a glimpse of the future\n                                                    \nMore news\nThe story behind K2 mode and how it works\nTune in for live Google I/O keynotes and sessions, and don’t miss this dedicated Kotlin Multiplatform session: Demystify KMP builds and structure.\nGradle Best Practices – Gradle, Google, and JetBrains have joined forces to define Gradle best practices, helping you build confidently, avoid pitfalls, and future-proof your projects.\nAmper Update April 2025 – IDE and CLI Feature Drop!\nK2 Mode in IntelliJ IDEA 2025.1: Current State and FAQ\nUpdate on Context Parameters\nBringing Fuzz Testing to Kotlin with kotlinx.fuzz\nKotlin YouTube spotlight\nCreator of Spring: No desire to write Java | Talking Kotlin\nUsing Platform-Specific APIs in KMP Apps | Pamela Hill\nHow Junie Helps You Code Faster with Kotlin in IntelliJ IDEA | Sebastian Aigner\nHow Kotlin Developers Use JetBrains AI Assistant in IntelliJ IDEA | Sebastian Aigner",
        "dc:creator": "Kodee",
        "content": "Sit back, relax, and let the Kotlin vibes roll in. This roundup is overflowing with news: major moves in Kotlin Multiplatform (Compose Multiplatform for iOS is Stable 🎉), server-side upgrades, Kotlin for web, and smarter Kotlin development with JetBrains AI. Whether you&#8217;re building mobile apps, backend services, or playing with interactive notebooks, there’s something here [&#8230;]",
        "contentSnippet": "Sit back, relax, and let the Kotlin vibes roll in. This roundup is overflowing with news: major moves in Kotlin Multiplatform (Compose Multiplatform for iOS is Stable 🎉), server-side upgrades, Kotlin for web, and smarter Kotlin development with JetBrains AI. Whether you’re building mobile apps, backend services, or playing with interactive notebooks, there’s something here […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=566232",
        "categories": [
          "news",
          "updates"
        ],
        "isoDate": "2025-05-09T14:38:45.000Z"
      },
      {
        "creator": "Artem Kobzar",
        "title": "Present and Future of Kotlin for Web",
        "link": "https://blog.jetbrains.com/kotlin/2025/05/present-and-future-kotlin-for-web/",
        "pubDate": "Thu, 08 May 2025 16:03:32 +0000",
        "content:encodedSnippet": "TL;DR: We remain committed to empowering Kotlin developers with robust and seamless support in Kotlin Multiplatform for web development. To achieve this, we are working on several key areas:\nImproving IDE support for web targets.\nPromoting Kotlin/Wasm and Compose Multiplatform for web to Beta.\nProviding a compatibility mode for Compose Multiplatform in older browsers.\nEliminating most limitations of interop in Kotlin/JS.\nTargeting the latest JavaScript standard in Kotlin/JS.\nKotlin Multiplatform (KMP) aims to help developers share code across different platforms, significantly reducing development time and effort. The web plays a crucial role in this ecosystem, being the most widely used client-side platform.\nWhile we haven’t published an update in a while, a lot has been happening, and now we’re ready to share the latest developments.\nCurrent landscape: JavaScript and Wasm\nKotlin Multiplatform is a production-ready technology that targets many platforms via four compiler backends: Kotlin/JVM, Kotlin/JS, Kotlin/Native, and Kotlin/Wasm.\nWhen it comes to the web, KMP offers two different solutions: compiling to JavaScript (Kotlin/JS) and WebAssembly (Kotlin/Wasm). Let us explain why we have both of them.\nWhy two web targets?\nKotlin Multiplatform provides a unique approach for sharing code and is built around flexibility. Depending on your project’s needs, you might want to:\nShare only the business logic and keep the UI native.\nShare both the business logic and the UI across all platforms.\nThese two cases have different technical requirements, and JS and Wasm targets serve them accordingly.\nSharing business logic\nIf your goal is to share business logic on the web, you may have a few requirements, like the ability to:\nProvide a complex business logic to the native UI, which is predominantly based on JS. \nLoad only the required business logic for a specific web page to reduce network load.\nInteract between JavaScript and Kotlin parts without extra performance costs.\nIn this case, Kotlin/JS is the better fit because it provides a better interop experience.\nSharing both logic and UI\nIf you want to share the entire application, including the UI, across platforms, this is where Compose Multiplatform comes into play. With it, your requirements for web rendering and performance naturally change:\nYou want the same UI rendered consistently on every platform, including the web.\nSmooth animations and responsive transitions become critical.\nHere, Kotlin/Wasm shines. According to our benchmarks, WebAssembly performs much better (almost 3 times faster) in the UI-sharing scenario.\nSee our detailed recommendation on which target to choose for your application.\nWhat updates are coming soon?\nIn the sections that follow, we’ll walk you through the most important updates and initiatives, from IDE tooling and interoperability improvements to the evolution of Compose Multiplatform for web.\nLet’s take a closer look at those areas.\nBetter IDE support for web targets\nAs part of our broader effort to provide an excellent Kotlin Multiplatform developer experience, we’re actively working on better KMP support in IntelliJ IDEA and Android Studio.\nThis also includes improving the experience for JavaScript and Wasm targets. While code functionality is available in both IDEs, certain features, like debugging of JavaScript and Wasm targets, are currently available only in IntelliJ IDEA.\nWe’ve started this journey by taking the following steps:\nAdding a wizard for creating a new KMP project targeting web platforms.\nIntegrating a platform debugger to debug your KMP project on both web targets easily.\nAdding gutter icons for application entry points and tests to run them easily, without thinking about which Gradle task you should use.\nPromoting our Wasm target and Compose Multiplatform for web to Beta\nWe understand that the web is an important platform for many Compose Multiplatform users, and we are committed to enhancing the development experience for those targeting it.\nContinued improvements in Compose Multiplatform for web\nSince moving to Alpha, Compose Multiplatform for web has received major updates, reducing the feature gap with other platforms. For example, text input handling was significantly improved, especially on mobile devices. The next big things we are working on are accessibility and interoperability with native HTML elements. \nKotlin/Wasm: Now in all modern versions of major browsers\nWebAssembly (Wasm) has also matured. As of December 11, 2024, all major browsers, including Safari, support WebAssembly Garbage Collection (WasmGC). This means Kotlin/Wasm applications can now run across all modern major browsers.\nImproving the Wasm development experience\nOver the last few years, improving the development experience for Wasm target has been our top priority. To that end, we’ve: \nIntroduced incremental compilation, making builds up to twice as fast.\nEnhanced debugging support for browsers, providing better stepping functionality and an improved variable view.\nIn the next few months, we will focus more on enhancing stability to make targeting Wasm in KMP projects as smooth as possible and reduce breaking changes in the future. \nOverall, we aim to make both technologies feature-complete (as close as possible) and promote them to Beta this year.\nProviding a compatibility mode for Compose Multiplatform\nAs we already mentioned, we recommend targeting Wasm when you want an application with a multiplatform UI. However, there are some limitations to consider. The Wasm target relies on browser support for WasmGC, which may cause Kotlin applications targeting Wasm to be incompatible with older browsers that lack this support – see this guide for more details.\nTo address this, we’re introducing a compatibility mode in Compose Multiplatform.\nWith a new common source set called webMain, you will now have a single source for the `actual` declarations for both JavaScript and Wasm targets. \nUsing a special DSL in the CMP Gradle plugin, your application will be compiled to run the Wasm version of the app in modern browsers, taking full advantage of the Wasm target’s performance. For older browsers, the JavaScript version will run automatically, preventing a blank screen and maintaining usability.\n\n\n\n\n\nNote: Compose Multiplatform still relies on WebAssembly on the rendering engine side. However, this part uses WebAssembly features that have been available in all major browsers since 2017.\nEliminate most of the limitations of interop in Kotlin/JS\nToday’s approach to interop with JavaScript in Kotlin is based on the experimental @JsExport annotation, which has constraints that make it challenging to use in enterprise applications.\nWe are working on removing those limitations to provide a more seamless interop experience with JavaScript. Once this work is complete, you can mark the majority of Kotlin declarations with the @JsExport annotation, which will be stabilized.\nFor cases where you can’t mark a declaration with this annotation, like when you don’t own sources of the used libraries but still want to export some declarations from there to JavaScript, there will be a DSL inside the multiplatform Gradle plugin, which helps to export all the needed declarations from those libraries.\nTargeting the latest JavaScript standard in Kotlin/JS\nHistorically, the only available KMP JS target was ES5, which is now quite outdated. For the last two years, we’ve worked on introducing experimental support for compiling with modern JavaScript features like classes, generators, and arrow functions.\nThis new support reduces bundle size and improves performance in some cases, which is why we aim to stabilize it and add more modern features like BigInt and dynamic import.\nWe aim to target only the latest version of the JavaScript specification, thereby achieving even further reductions in bundle size and performance improvements. If you need to target older browsers, we’re integrating Babel inside our Gradle plugin. It will lower the generated JavaScript for compatibility with older browsers, so you still have the same range of platform support.\nThe road ahead for Kotlin for web\nThese aren’t the only improvements planned for Kotlin’s web targets. Several important initiatives are already underway.\nHere’s what’s coming next:\nMultithreading support in the Wasm target. To take advantage of modern multi-core processors and provide the best performance, we are going to prototype multithreading support for the Kotlin/Wasm compiler. Our goal is to make multithreaded development on the web as easy as it is on the JVM, elevating the development of high-performance web applications to a new level.\nPer-module compilation in the Wasm target. To improve development round-trip time and program modularity, we are working on generating multiple WebAssembly modules. This approach complements the recently introduced incremental compilation by allowing the recompilation of only the changed Kotlin modules. It also enables loading program parts on demand, which can significantly improve application startup time and reduce network load. In addition, it is a building block for supporting plugin systems in Kotlin applications targeting Wasm.\nModern JavaScript tooling integration. To speed up the compilation cycle, we want to add an alternative to the Webpack integration we have today inside the Gradle plugin. We aim to decouple the Webpack integration to enable integration with any modern JavaScript bundler, like esbuild, repack, Vite, or bun.\nAutomatic generation of Kotlin wrappers from TypeScript typings. To remove the frustration of writing Kotlin wrappers to consume a JavaScript/TypeScript library, we’ve come back to the integration of an automatic external-declarations generator for the multiplatform Gradle plugin. For each NPM dependency declared in your project, you will automatically get ready-to-consume Kotlin declarations describing the available API from the library.\nFinal thoughts\nThanks to recent surveys, YouTrack tickets, questions, and suggestions from across our channels, we’ve gathered a wealth of valuable feedback and built a clear direction for Kotlin on the web. We couldn’t have done it without you!\nTo share more feedback or questions, please join our Slack community. There, you will find specific channels on various topics you might be interested in, like #webassembly, #compose-web, #javascript, and #multiplatform.\nWe appreciate all your support, and we are committed to providing you with a great experience as you build with Kotlin across platforms.",
        "dc:creator": "Artem Kobzar",
        "content": "TL;DR: We remain committed to empowering Kotlin developers with robust and seamless support in Kotlin Multiplatform for web development. To achieve this, we are working on several key areas: Kotlin Multiplatform (KMP) aims to help developers share code across different platforms, significantly reducing development time and effort. The web plays a crucial role in this [&#8230;]",
        "contentSnippet": "TL;DR: We remain committed to empowering Kotlin developers with robust and seamless support in Kotlin Multiplatform for web development. To achieve this, we are working on several key areas: Kotlin Multiplatform (KMP) aims to help developers share code across different platforms, significantly reducing development time and effort. The web plays a crucial role in this […]",
        "guid": "https://blog.jetbrains.com/?post_type=kotlin&p=565772",
        "categories": [
          "multiplatform",
          "kotlin-js",
          "kotlin-wasm"
        ],
        "isoDate": "2025-05-08T16:03:32.000Z"
      }
    ]
  },
  {
    "name": "Visual Studio Blog",
    "category": "기업",
    "posts": [
      {
        "creator": "Katie Savage, Aaron Yim",
        "title": "Agent mode has arrived in preview for Visual Studio",
        "link": "https://devblogs.microsoft.com/visualstudio/agent-mode-has-arrived-in-preview-for-visual-studio/",
        "pubDate": "Tue, 13 May 2025 17:26:51 +0000",
        "content:encodedSnippet": "Plan, build, test, and fix — all from one prompt.\nDownload Visual Studio 17.14\n\nAgent mode is now available in public preview for all users in Visual Studio 17.14. Agent mode in Visual Studio allows you to define tasks using natural language, with Copilot autonomously planning, editing your codebase, invoking tools, and iterating to resolve issues. Unlike Copilot Chat or Edits, agent mode doesn’t stop at one suggestion or file edit but works iteratively until the task is complete.\n\nWhat can agent mode do?\nAgent mode doesn’t just help you write code — it helps you finish the job. All of this is done iteratively, meaning that Copilot will continue to examine and perform your task on its own output and the result of that output until it completes your prompt. This means agent mode can:\nAutonomously determine the relevant context and files to edit.\n Suggest terminal commands for you to approve and run.\n Iterate until the task is complete — checking for errors, and running builds/tests to validate results.\n Invoke trusted tools via MCP servers — including linters, test runners, and static analyzers in your dev environment.\nWe’re also simplifying the Copilot experience by making agent mode the new default way to apply code changes. You can think of agent mode as the next evolution of Edits which developers have come to love in GitHub Copilot chat with even more power!\n\nHow to enable it\nAgent mode is off by default in this preview phase. To turn it on:\nUse Visual Studio Code 17.14 GA or later\nGo to Feature Search (Ctrl + Q)\nSearch: copilot-chat.agent\nEnable: Copilot Chat: Agent Enabled\nIn the Copilot Chat window switch to “Agent” and try a high-level prompt. You can access the Copilot Chat window from the Copilot badge in the upper right of the IDE.\nUsing agent mode\nAgent mode is a powerful tool that can be applied in many scenarios. It can create apps from scratch, refactor code across multiple files, write and run tests, generate documentation, integrate new libraries, implement terminal-heavy tasks, and answer questions about complex codebases. It enhances productivity by orchestrating your development flow while keeping you in control. When determining if agent mode is the right tool for the job, consider the following.\nEdit scope: Agent mode takes the reins, autonomously searching your codebase and determining the relevant context and files to edit.\nTask complexity: For intricate tasks that go beyond simple code edits, agent mode shines. It handles tool invocations and terminal commands, making it ideal for complex projects.\nDuration: Agent mode is thorough, involving multiple steps to process a request. It might take longer to get a response as it determines the context, plans the action, and more.\nSelf-iteration: One of the standout features of agent mode is its ability to evaluate the outcome of generated edits and iterate multiple times to resolve intermediate issues.\nMultiple requests: Depending on the complexity of the task, agent mode might result in multiple requests to the backend from a single prompt.\nOnce you’ve determined that agent mode is the right tool for the job, you just need to give it a good prompt. Here are some example prompts to give you an idea of what you can ask the agent to do: \n“Add error handling to this API” \n“Convert this project to use environment variables” \n“Write tests for this class and fix anything that fails” \n “Add structured logging with Serilog” \n“Replace HttpClient with IHttpClientFactory”\nA key to better, more accurate responses from Copilot is providing it with sufficient context about your preferred coding standards, team preferences, libraries, and more. You can provide this context with custom instructions. The custom instructions feature enables you to automatically add pre-specified contextual details to your chat questions. To configure custom instructions, follow the documentation instructions.\nBoost agent mode with MCP servers\nThis release further extends the power of agent mode by supporting Model Context Protocol (MCP) servers. MCP servers provide additional context to the Copilot agent and give it access to tools, data, and resources. The MCP website describes MCP as a universal adaptor for AI applications. In the same way that a universal adaptor lets you connect your physical devices to accessories, MCP lets you connect AI applications to other data and tools without needing to build a custom connection to each data source. For example, you can connect directly to your database and analyze schemes, pull in information for GitHub repos such as issues and pull requests, automate end-to-end testing with Playwright, or you can even build your own with several SDKs including C#! Here are a few other examples of what you can do with MCP servers: \nInteract with your cloud environment: For example, the official Azure MCP server gives access to list, query, and interact with services and tools like Azure Storage, Cosmos DB, the Azure CLI, and more. \nQuery and manage database: Execute queries against Cosmos DB containers, get Azure Storage container properties and metadata, and manage blob containers and blobs. \nSearch and manage version control platform: For example, the GitHub API allows batch creation of issues or batch updates of files, can search for code and issues across GitHub repositories, and more. \n\nMore updates with new monthly release schedule for Copilot\nWe’re constantly evolving to get Copilot features out so that you, the developer, are never behind. As such, we’re excited to announce that Visual Studio is moving to a monthly release schedule for Copilot updates. You can access the latest Copilot updates by continuing to update Visual Studio to the latest version.\nCheck out the new Visual Studio Hub\nStay connected with everything Visual Studio in one place! Visit the Visual Studio Hub for the latest release notes, YouTube videos, social updates, and community discussions.\nAppreciation for your feedback\nYour feedback helps us improve Visual Studio, making it an even more powerful tool for developers. We are immensely grateful for your contributions and look forward to your continued support. By sharing your thoughts, ideas, and any issues you encounter through Developer Community, you help us improve and shape the future of Visual Studio.\nThe post Agent mode has arrived in preview for Visual Studio appeared first on Visual Studio Blog.",
        "dc:creator": "Katie Savage, Aaron Yim",
        "content": "<p>Plan, build, test, and fix — all from one prompt. Agent mode is now available in public preview for all users in Visual Studio 17.14. Agent mode in Visual Studio allows you to define tasks using natural language, with Copilot autonomously planning, editing your codebase, invoking tools, and iterating to resolve issues. Unlike Copilot Chat [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/agent-mode-has-arrived-in-preview-for-visual-studio/\">Agent mode has arrived in preview for Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "Plan, build, test, and fix — all from one prompt. Agent mode is now available in public preview for all users in Visual Studio 17.14. Agent mode in Visual Studio allows you to define tasks using natural language, with Copilot autonomously planning, editing your codebase, invoking tools, and iterating to resolve issues. Unlike Copilot Chat […]\nThe post Agent mode has arrived in preview for Visual Studio appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253199",
        "categories": [
          "Artificial Intelligence",
          "Copilot",
          "GitHub Copilot",
          "Productivity",
          "Visual Studio",
          "Agent Mode",
          "AI Agents"
        ],
        "isoDate": "2025-05-13T17:26:51.000Z"
      },
      {
        "creator": "Mads Kristensen",
        "title": "🎉 Visual Studio 2022 v17.14 is now generally available!",
        "link": "https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-14-is-now-generally-available/",
        "pubDate": "Tue, 13 May 2025 17:24:25 +0000",
        "content:encodedSnippet": "We’re thrilled to announce the general availability of Visual Studio 2022 version 17.14! This release continues our mission to empower developers with faster, smarter, and more productive tools across all workloads.\nDownload Visual Studio 17.14\n\nThere is so much for developers to love in this release, so be sure to check out the release notes for the full list. This is only the beginning, going forward, we’ll be bringing new features to you even faster with a new monthly release cadence for stable releases of Visual Studio! Here are some of the highlights you can look forward to when you update to 17.14 today!\nAI Assisted Development with GitHub Copilot\nGitHub Copilot in Visual Studio continues to evolve and add powerful productivity features for developers. In this release, we’re introducing agent mode (preview) to supercharge the AI assisted development experience. With agent mode, simply chat with Visual Studio using natural language and through that conversation, get it to complete multi-step, complex coding tasks for you. The agent understands your entire codebase and can recognize and fix errors automatically, suggest and execute terminal commands, and analyze run-time errors until your task is complete. Check it out:\n\nAgent mode is in public preview and can be enabled in the preview settings today! In addition to the new agent mode (preview) in this release you will find even more great new features and enhancements:\nMCP Support (preview): Model Context Protocol (MCP) support provides the Copilot agent structured access to tools, data, and resources. It’s like a universal adaptor for AI applications that lets you connect to other data and tools without needing to build custom connections to each data source. MCP Support is in public preview and can be enabled in the preview settings today.\nAI doc comment generation: Automatically generate doc comments for C++ and C# functions. simply type what would trigger your doc comment format (such as ///) and Copilot suggestions will automatically fill out the function description based on the contents of the function. Read the blog post to learn more.\nNext Edit Suggestion (NES): NES leverages the previous edits made and predicts the next edit to come, whether it’s an insertion, deletion, or mix of both. Unlike code completions, which are limited to generating suggestions at your caret location, NES can support you anywhere in your file, where the next edit is most likely to occur. NES can be enabled in the settings.\ndocument.createElement('video');\nhttps://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/Point4-29.mp4\n\nDebugging & diagnostics\nUpdate your UI, live at design time: Live Preview is now available at design time, allowing you to see changes in your app UI in real-time. You can also use Hot Reload and other live UI tools in this way, ensuring a seamless workflow with .NET MAUI and WPF apps.\n\nNew debugger for .NET MAUI apps: New Mono debug engine for .NET MAUI integrated into the Visual Studio Core debugger.\nShow datatips for LINQ Expressions: Enhanced LINQ expression debugging experience with clause hovering datatip.\nZero-Length Array Allocation Insights: The .NET Allocation Tool now identifies zero-length array allocations, helping optimize memory usage and performance.\nC++\nC++ Dynamic Debugging (in preview) brings full debuggability for your optimized C++ code without compromising on performance.\n\nC++23 improvements include support for new lambda attributes, if consteval, and static operators, enhancing both code efficiency and safety\nC++ productivity boosts with features like automatic template argument population and improved IntelliSense for CMake modules\nFor a detailed overview of these C++ updates and more, check out the full post What’s New for C++ Developers in Visual Studio 2022 17.14 – C++ Team Blog\nGit tooling\nView Outgoing / Incoming Commits: The Git Repository window now provides a filter at its toolbar to show only outgoing / incoming commits.\nRestore the Git repository window: Keep the Git Repository window open between restarts with this new setting.\nDefault branch name: Allow users to customize the initial default branch when a new git repository is created.\nVisual Studio 17.14 Release Party – Watch Live or On Demand\nTo celebrate the 17.14 release, we’re hosting a special live Visual Studio Release Party on YouTube! Join us on May 14th at 1PM PT to see some of the newest features in action, straight from the PMs and engineers who built them. From Copilot Agent Mode to C++ debugging and Git improvements, you’ll get live demos, behind-the-scenes insights, and a chance to hear what’s coming next.\nCan’t make it live? No problem—the event will be available on demand afterward so you can catch up anytime.\nDelivering new features in Visual Studio even faster!\nWe’re picking up the pace. Starting now, we’re shifting to a monthly release cadence for Visual Studio 2022, focused on AI-powered Copilot enhancements, deeper integration, and rapid iteration based on your feedback. Update today to 17.14 to enjoy the latest features and look for it to evolve every month with meaningful improvements you can count on! Look for our next feature update in June!\nLastly, we’ve started work on the next major version of Visual Studio, planned for release later this year. We’ll be sharing more details here soon—follow the blog to stay up to date with the latest Visual Studio news.\nThe post 🎉 Visual Studio 2022 v17.14 is now generally available! appeared first on Visual Studio Blog.",
        "enclosure": {
          "url": "https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2025/05/Point4-29.mp4",
          "length": "6266255",
          "type": "video/mp4"
        },
        "dc:creator": "Mads Kristensen",
        "content": "<p>We’re thrilled to announce the general availability of Visual Studio 2022 version 17.14! This release continues our mission to empower developers with faster, smarter, and more productive tools across all workloads. There is so much for developers to love in this release, so be sure to check out the release notes for the full list. [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-14-is-now-generally-available/\">🎉 Visual Studio 2022 v17.14 is now generally available!</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
        "contentSnippet": "We’re thrilled to announce the general availability of Visual Studio 2022 version 17.14! This release continues our mission to empower developers with faster, smarter, and more productive tools across all workloads. There is so much for developers to love in this release, so be sure to check out the release notes for the full list. […]\nThe post 🎉 Visual Studio 2022 v17.14 is now generally available! appeared first on Visual Studio Blog.",
        "guid": "https://devblogs.microsoft.com/visualstudio/?p=253205",
        "categories": [
          "Accessibility",
          "Artificial Intelligence",
          "Debug",
          "Git",
          "GitHub Copilot",
          "Performance",
          "Productivity",
          "Visual Studio",
          "Agent Mode",
          "Debugging and Diagnostics",
          "Next Edits Suggestion"
        ],
        "isoDate": "2025-05-13T17:24:25.000Z"
      }
    ]
  },
  {
    "name": "Instagram Engineering",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Dropbox Tech Blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Joshua",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권재명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김석기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권진호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강대명",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권정혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "줌구",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수보",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김시은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "곽민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민서",
    "category": "개인",
    "posts": []
  },
  {
    "name": "I am not Okay",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권창현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권기호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강태욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권용진",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김승호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for boyism Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성준의 린스타트업과 디자인씽킹",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강동혁",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고종범",
    "category": "개인",
    "posts": []
  },
  {
    "name": "cheese10yun",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구자철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "FSS",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권동준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김용일",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도균",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김동우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권윤학",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김민준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김만수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "엘키",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김슬기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김광현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김영우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강명훈",
    "category": "개인",
    "posts": [
      {
        "title": "Splunk의 날짜 계산",
        "link": "https://kangmyounghun.blogspot.com/2025/05/splunk.html",
        "pubDate": "2025-05-14T13:56:00.002Z",
        "author": "강명훈",
        "content": "<div>최근 30일 데이터의 주간 단위 발생 통계. '월~일요일' 단위 집계 결과를 보여준다.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgD63Quh3s_7T_F7ehXH_q5bW22M8xWkvKVzxdqdAu3TdpdlksqE3xVaA7Bl6YeZROT7p6eMl-_vp8GfcxUZ_Xb57v1Ald24FH6ZLd_dLT-mTMqE21LKs_VrmMPFftCFChAjOANEKB_xGHIV03hPDqJB7-x06TJrAx8vyO15cic9w8X2wxUfHOlVox1Lvr1/s1268/last30days.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1268\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgD63Quh3s_7T_F7ehXH_q5bW22M8xWkvKVzxdqdAu3TdpdlksqE3xVaA7Bl6YeZROT7p6eMl-_vp8GfcxUZ_Xb57v1Ald24FH6ZLd_dLT-mTMqE21LKs_VrmMPFftCFChAjOANEKB_xGHIV03hPDqJB7-x06TJrAx8vyO15cic9w8X2wxUfHOlVox1Lvr1/s16000/last30days.png\" /></a></div><br /><div><span><a name='more'></a></span>4월 데이터의 주간 단위 발생 통계. '화~월요일' 단위 집계 결과.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiIqJF0-K2VWk1zQGQKLeezAoFnyX22cNYD5-W_U49atFT5kTDJpsEVBfnupbjFccM1iY13jBgqfAcWqxLBqrYVDTLNTqFtOeffxezJHTB0oeLbD6bmTSOTh1LVpofiRTpLwGGSeYXnQtQVRwH5otv5_9XcaeuwVwqR_Pomuss-O4CZRuvENv9NQinNseTc/s1272/april.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1272\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiIqJF0-K2VWk1zQGQKLeezAoFnyX22cNYD5-W_U49atFT5kTDJpsEVBfnupbjFccM1iY13jBgqfAcWqxLBqrYVDTLNTqFtOeffxezJHTB0oeLbD6bmTSOTh1LVpofiRTpLwGGSeYXnQtQVRwH5otv5_9XcaeuwVwqR_Pomuss-O4CZRuvENv9NQinNseTc/s16000/april.png\" /></a></div><br /><div>주간 단위 집계 범위가 달라지는 이유는 선택 범위에 따라 시작일이 달라지니까. 원하는 범위가 '월~일요일'이라면 시작일을 월요일로 지정하면 된다. <a href=\"https://docs.splunk.com/Documentation/Splunk/9.4.2/Search/Specifytimemodifiersinyoursearch#Special_time_units\" target=\"_blank\">디폴트는 일요일<span style=\"font-size: x-small;\">(w0)</span></a>.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjK5nlyGssJAKzYN_GpsUk38giZifIZKR4aR91fIRtMkpVB6Nbfl-_sB2lkvtTRje3MKIcdUsUB4sZrXbM9ypFNiScBCdFpvSTOoVtrd_ZvQ5jZojUvrCqUHO37WImT1hgYPY8lQplBwTrXFiPDVgZUTxzVAclHDPeH4N4qZYBDT2DjyrvJ-Hn6lhccoGyC/s1266/april_start_monday.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1125\" data-original-width=\"1266\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjK5nlyGssJAKzYN_GpsUk38giZifIZKR4aR91fIRtMkpVB6Nbfl-_sB2lkvtTRje3MKIcdUsUB4sZrXbM9ypFNiScBCdFpvSTOoVtrd_ZvQ5jZojUvrCqUHO37WImT1hgYPY8lQplBwTrXFiPDVgZUTxzVAclHDPeH4N4qZYBDT2DjyrvJ-Hn6lhccoGyC/s16000/april_start_monday.png\" /></a></div><br /><div><b><span style=\"font-size: x-large;\">주간 단위 변화를 좀 더 세밀하게 보고 싶다면?&nbsp;</span></b></div><div><br /></div><div><a href=\"https://docs.splunk.com/Documentation/Splunk/9.4.2/SearchReference/DateandTimeFunctions#relative_time.28.26lt.3Btime.26gt.3B.2C.26lt.3Bspecifier.26gt.3B.29\" target=\"_blank\">relative_time</a> 함수를 이용하면 특정일을 기준으로 원하는 날짜를 계산할 수 있다.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjnqpgecxSOoGeJxFSq-kJCWvhVkEPQQ_WKsl9DH-0SSjN89jdRb-l61g9CurJE7ad_w5JQ5OIlXlL2lFB1Tx-ykF4RPEsnbwmlsD_Jk4nxqqKRSm6codAN29JryAGxxECeDMKe3DbF30O6nMGvrcC_7tIwcFTXtqTcoXUB-Cr2ag_L2tD-PS0CsP_NECPQ/s1238/relative_time.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1238\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjnqpgecxSOoGeJxFSq-kJCWvhVkEPQQ_WKsl9DH-0SSjN89jdRb-l61g9CurJE7ad_w5JQ5OIlXlL2lFB1Tx-ykF4RPEsnbwmlsD_Jk4nxqqKRSm6codAN29JryAGxxECeDMKe3DbF30O6nMGvrcC_7tIwcFTXtqTcoXUB-Cr2ag_L2tD-PS0CsP_NECPQ/s16000/relative_time.png\" /></a></div><br /><div>집계 분할 기준으로 사용할 날짜별 주간 범위<span style=\"font-size: x-small;\">(월~일요일)</span> 필드 추가.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiI51YxyzHiX6dnOn94zMlcZmQEvZn7k3y2Fh1he3VOTFC2gmPSeZ42xsZfIdR6Bna6YXiNMBVh5H4_Hdxno-A4HQOj-0CTDD2TmzbTaGLxM1RwVT9BgZuQOFpYzjDQg_N3h7RR3b4xR-rVfwW3s7Am0ZeHHJOw3H4pI7eYejYYwxLBrnWYAfXM09SFFDmg/s720/relative_time2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"718\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiI51YxyzHiX6dnOn94zMlcZmQEvZn7k3y2Fh1he3VOTFC2gmPSeZ42xsZfIdR6Bna6YXiNMBVh5H4_Hdxno-A4HQOj-0CTDD2TmzbTaGLxM1RwVT9BgZuQOFpYzjDQg_N3h7RR3b4xR-rVfwW3s7Am0ZeHHJOw3H4pI7eYejYYwxLBrnWYAfXM09SFFDmg/s16000/relative_time2.png\" /></a></div><div><br /></div>",
        "contentSnippet": "최근 30일 데이터의 주간 단위 발생 통계. '월~일요일' 단위 집계 결과를 보여준다.\n\n\n\n\n4월 데이터의 주간 단위 발생 통계. '화~월요일' 단위 집계 결과.\n\n\n\n\n주간 단위 집계 범위가 달라지는 이유는 선택 범위에 따라 시작일이 달라지니까. 원하는 범위가 '월~일요일'이라면 시작일을 월요일로 지정하면 된다. 디폴트는 일요일(w0).\n\n\n\n\n주간 단위 변화를 좀 더 세밀하게 보고 싶다면? \n\n\nrelative_time 함수를 이용하면 특정일을 기준으로 원하는 날짜를 계산할 수 있다.\n\n\n\n\n집계 분할 기준으로 사용할 날짜별 주간 범위(월~일요일) 필드 추가.",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-7172545876815785553",
        "isoDate": "2025-05-14T13:56:00.002Z"
      },
      {
        "title": "Splunk의 unix time",
        "link": "https://kangmyounghun.blogspot.com/2025/05/splunk-unix-time.html",
        "pubDate": "2025-05-11T05:06:00.000Z",
        "author": "강명훈",
        "content": "<div>audit.log 연동. 소스타입 선택과 관계 없이 unix time을 잘 인식한다.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiwPQpooPzVm54WlsU0obu0XRvsp490sL_KiLTwF9S_zahKHcwjDvTg0xLU8CuQ7aEw0OHUaZ3bEZVfx-eHkppYnWaZx6DB-c9xTJZp816fW0eGqRKBd3r7Ud2O6cJCNQAtbYqSGXpGBNZUNzmgiMvzMNqgmnuCnbUUJ9e7qvKbGfGpzAr8tLJHz5kVssM8/s1280/splunk_unixtime.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"694\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiwPQpooPzVm54WlsU0obu0XRvsp490sL_KiLTwF9S_zahKHcwjDvTg0xLU8CuQ7aEw0OHUaZ3bEZVfx-eHkppYnWaZx6DB-c9xTJZp816fW0eGqRKBd3r7Ud2O6cJCNQAtbYqSGXpGBNZUNzmgiMvzMNqgmnuCnbUUJ9e7qvKbGfGpzAr8tLJHz5kVssM8/s16000/splunk_unixtime.png\" /></a></div><div><br /></div><div><span><a name='more'></a></span>연동 결과. 나머지 필드 추출도 완벽.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhUkylxPG7TOaBTCRUdY2ReY4WDw7w0jRWpHgKbTIcPL5QCTWVCCsaQp55dopB5Xy4xfe1ZblCGsuelxjnNwbyhKEMESVo6sqM7SaIUOH59H21_lHe2D2rj1pC2h1rsSjoNItefLHcR6e1lXPI-mVPmk6fNtF9MSI_KhpVQCNgWCrNHoEPKF9Ksu_ldYvhk/s1100/splunk_unixtime2.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1100\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhUkylxPG7TOaBTCRUdY2ReY4WDw7w0jRWpHgKbTIcPL5QCTWVCCsaQp55dopB5Xy4xfe1ZblCGsuelxjnNwbyhKEMESVo6sqM7SaIUOH59H21_lHe2D2rj1pC2h1rsSjoNItefLHcR6e1lXPI-mVPmk6fNtF9MSI_KhpVQCNgWCrNHoEPKF9Ksu_ldYvhk/s16000/splunk_unixtime2.png\" /></a></div><div><br /></div><div>props.conf에 <a href=\"https://docs.splunk.com/Documentation/Splunk/9.4.2/Knowledge/Searchtimeoperationssequence\" target=\"_blank\">필드 추출 유형</a>이 정의되어 있지 않음에도 문제가 없는 이유는 원본 데이터가 key=value 구조이기 때문.</div><div><br /></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjyIys5NCY9vNUWEYYOiXjN6EoPtsph-U2igfBf7dJL6ltP3e4CmaAlZ9opyF2SX1C8pcu8c9lptDi9KkdZVUXQzj1ISoSjuP1FmGyxYpeMsvmSxrSrtqx2NvrxTUkkWTnOI0oQ1IeS2Awbdb3BqR73lT2AHPhb6u4WN6ngxZmJiTi4-rkrP4FM71N3VMiC/s1111/props.conf.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"409\" data-original-width=\"1111\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjyIys5NCY9vNUWEYYOiXjN6EoPtsph-U2igfBf7dJL6ltP3e4CmaAlZ9opyF2SX1C8pcu8c9lptDi9KkdZVUXQzj1ISoSjuP1FmGyxYpeMsvmSxrSrtqx2NvrxTUkkWTnOI0oQ1IeS2Awbdb3BqR73lT2AHPhb6u4WN6ngxZmJiTi4-rkrP4FM71N3VMiC/s16000/props.conf.png\" /></a></div><br /><div>혹시 필드 추출에 문제가 있다면 props.conf의 <a href=\"https://docs.splunk.com/Documentation/Splunk/9.4.2/Admin/Propsconf#Field_extraction_configuration\" target=\"_blank\">KV_MODE</a> 옵션을 살펴보자.</div><br /><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg4O_1ciqEeLaoUUvKHHXTB1rIaopjy-jt4OUhdR6qv8r-Vb8SGWfKp2u0qSKlKjel9P4_2dKL5ptWDuBtRmwdFnWqNx2blF6U2bKjDkAPRWQATjAo7V3RJsmKctMNa50EnfYRjgLu7eHNAVCxSrE_88s5tmIYit2BS2rRFmPUyaJtAowbhWUljsFNm6t9_/s1240/splunk_unixtime3.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"720\" data-original-width=\"1240\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEg4O_1ciqEeLaoUUvKHHXTB1rIaopjy-jt4OUhdR6qv8r-Vb8SGWfKp2u0qSKlKjel9P4_2dKL5ptWDuBtRmwdFnWqNx2blF6U2bKjDkAPRWQATjAo7V3RJsmKctMNa50EnfYRjgLu7eHNAVCxSrE_88s5tmIYit2BS2rRFmPUyaJtAowbhWUljsFNm6t9_/s16000/splunk_unixtime3.png\" /></a></div><div><br /></div><div>참고로 <a href=\"https://docs.splunk.com/Documentation/Splunk/9.4.2/SearchReference/DateandTimeFunctions#strftime.28.26lt.3Btime.26gt.3B.2C.26lt.3Bformat.26gt.3B.29\" target=\"_blank\">unix time 수동 변환</a>은&nbsp;이렇게.</div><div><br /></div><div><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiA3nJSyEKw6E1ZXGlu_Xes1dy3Abok5wBTWHYbH9Rue_cLa_NvmkXZgDmpn1mlMtiv2T55ZsuryUaJrGG2cVnwtEdoWJG6M2zRZ8Iwy35gMpJKqW8zsm6Mi61l4S-B4n5z_yOWFGJ5I4Uf8JXkZG-YrraYV8MPtvmzK4X5UKwUDsn18O5JFIzVumosB_W2/s1393/splunk_unixtime4.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"753\" data-original-width=\"1393\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiA3nJSyEKw6E1ZXGlu_Xes1dy3Abok5wBTWHYbH9Rue_cLa_NvmkXZgDmpn1mlMtiv2T55ZsuryUaJrGG2cVnwtEdoWJG6M2zRZ8Iwy35gMpJKqW8zsm6Mi61l4S-B4n5z_yOWFGJ5I4Uf8JXkZG-YrraYV8MPtvmzK4X5UKwUDsn18O5JFIzVumosB_W2/s16000/splunk_unixtime4.png\" /></a></div><div><br /></div></div>",
        "contentSnippet": "audit.log 연동. 소스타입 선택과 관계 없이 unix time을 잘 인식한다.\n\n\n\n\n\n연동 결과. 나머지 필드 추출도 완벽.\n\n\n\n\nprops.conf에 필드 추출 유형이 정의되어 있지 않음에도 문제가 없는 이유는 원본 데이터가 key=value 구조이기 때문.\n\n\n\n\n혹시 필드 추출에 문제가 있다면 props.conf의 KV_MODE 옵션을 살펴보자.\n\n\n\n\n참고로 unix time 수동 변환은 이렇게.",
        "id": "tag:blogger.com,1999:blog-2597780270996323853.post-2432600962419080596",
        "isoDate": "2025-05-11T05:06:00.000Z"
      }
    ]
  },
  {
    "name": "김민장",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성중",
    "category": "개인",
    "posts": []
  },
  {
    "name": "구교준",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김덕기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "고명환",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강병수",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김봉현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강형석",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김수로",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강미경",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김성현",
    "category": "개인",
    "posts": []
  },
  {
    "name": "강진우",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권민재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "권태관",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김도곤",
    "category": "개인",
    "posts": []
  },
  {
    "name": "칡토스의 게임 개발",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김선철",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김놀부",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Lael's World",
    "category": "개인",
    "posts": [
      {
        "creator": "HYEONG HWAN, MUN",
        "title": "전통적인 세션 ID 기반 인증과 JWT(Json Web Token) 기반 인증 비교",
        "link": "https://blog.lael.be/post/12495",
        "pubDate": "Fri, 09 May 2025 21:04:35 +0000",
        "dc:creator": "HYEONG HWAN, MUN",
        "comments": "https://blog.lael.be/post/12495#respond",
        "content": "로그인 세션 관리에서 전통적인 세션 ID 기반 인증과 JWT(Json Web Token) 기반 인증은 가장 많이 사용되는 두 가지 방식입니다. 아래는 이 둘의 차이점과 장단점을 비교한 표입니다: 항목 세션 ID 기반 인증 JWT 기반 인증 인증 방식 서버가 세션 ID를 생성하고 클라이언트에 전달 (주로 쿠키에 저장) 서버가 JWT를 생성하고 클라이언트에 전달 (주로 헤더나 로컬스토리지/쿠키에 저장) 서버 저장소 필요 필요 (서버에 세션 저장) 불필요 (토큰 자체에 정보 포함) 확장성 낮음 (세션 저장소 공유 필요) 높음 (무상태 Stateless 구조) 보안성 세션 탈취 위험, 하지만 서버에서 세션 무효화 가능 탈취 시 만료 전까지 유효, 무효화 어려움 (추가 로직 필요) 토큰 크기 작음 (세션 ID) 큼 (Base64 인코딩된 JSON) 무효화 처리 서버에서 세션 삭제 보통 불가능, 블랙리스트 관리 등 별도 구현 필요 관리 편의성 서버가&#8230;",
        "contentSnippet": "로그인 세션 관리에서 전통적인 세션 ID 기반 인증과 JWT(Json Web Token) 기반 인증은 가장 많이 사용되는 두 가지 방식입니다. 아래는 이 둘의 차이점과 장단점을 비교한 표입니다: 항목 세션 ID 기반 인증 JWT 기반 인증 인증 방식 서버가 세션 ID를 생성하고 클라이언트에 전달 (주로 쿠키에 저장) 서버가 JWT를 생성하고 클라이언트에 전달 (주로 헤더나 로컬스토리지/쿠키에 저장) 서버 저장소 필요 필요 (서버에 세션 저장) 불필요 (토큰 자체에 정보 포함) 확장성 낮음 (세션 저장소 공유 필요) 높음 (무상태 Stateless 구조) 보안성 세션 탈취 위험, 하지만 서버에서 세션 무효화 가능 탈취 시 만료 전까지 유효, 무효화 어려움 (추가 로직 필요) 토큰 크기 작음 (세션 ID) 큼 (Base64 인코딩된 JSON) 무효화 처리 서버에서 세션 삭제 보통 불가능, 블랙리스트 관리 등 별도 구현 필요 관리 편의성 서버가…",
        "guid": "https://blog.lael.be/?p=12495",
        "categories": [
          "미분류"
        ],
        "isoDate": "2025-05-09T21:04:35.000Z"
      }
    ]
  },
  {
    "name": "프리웨어 이야기",
    "category": "개인",
    "posts": [
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "ChatGPT 모델 너무 많다고? 내 작업에 맞는 AI 모델 선택하는 법",
        "link": "https://muzbox.tistory.com/483584",
        "pubDate": "Tue, 13 May 2025 08:47:54 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483584#entry483584comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;어떤 ChatGPT 모델이 내 목적에 딱 맞을까? OpenAI가 공개한 모델별 적합 작업을 알아보고, 시간과 비용을 절약하는 현명한 선택법을 소개합니다. 최신 모델이 항상 최선은 아니라는 사실!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/c0ljzy/btsNUOcNtAm/TOuUdvCAjJsMus5Bb9Vi0K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c0ljzy/btsNUOcNtAm/TOuUdvCAjJsMus5Bb9Vi0K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c0ljzy/btsNUOcNtAm/TOuUdvCAjJsMus5Bb9Vi0K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc0ljzy%2FbtsNUOcNtAm%2FTOuUdvCAjJsMus5Bb9Vi0K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"ChatGPT 모델 너무 많다고? 내 작업에 맞는 AI 모델 선택하는 법\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp; ChatGPT를 열자마자 당황하신적 있나요? 저는 모델 선택 창에 GPT-4o, GPT-4.5, OpenAI o4-mini, o4-mini-high, o3... 이런 이름들이 줄줄이 나오는데 뭘 골라야 할지 모르겠더라고요. 여러분도 비슷한 경험 있으신가요? 솔직히 말해서 최신 모델이나 가장 강력하다는 모델을 무작정 선택하는 게 제 평소 습관이었어요. 그런데 말이죠, 이게 큰 착각이었네요. 최근 OpenAI가 공개한 가이드라인에 따르면, 각 모델마다 장점이 다르고 적합한 작업이 따로 있다고 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">오늘은 제가 알아본 각 ChatGPT 모델별 최적 사용법을 공유해드릴게요. 이걸 알고 나면 여러분의 AI 경험이 훨씬 더 효율적으로 변할 거예요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  왜 올바른 ChatGPT 모델 선택이 중요할까요?</b></span></h2>\n<p data-ke-size=\"size16\">2022년 ChatGPT가 처음 등장했을 때는 모델이 하나뿐이었어요. 하지만 시간이 지나면서 OpenAI는 계속해서 새로운 버전을 출시했고, 지금은 각 작업에 최적화된 여러 모델이 존재합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">적합한 모델을 사용하면 응답 속도와 품질이 크게 개선됩니다. 반면, 잘못된 모델을 사용하면 시간 낭비는 물론이고 AI 환각(hallucination)이 발생할 위험도 높아져요. 특히 사용 제한이 있는 모델은 더더욱 신중하게 선택해야 합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">예를 들어, OpenAI o1 pro 모드는 복잡한 추론 작업에 아주 적합하지만, 한 달에 5번만 사용할 수 있어요. 그런데 이걸 단순히 지브리 스타일 이미지 생성에 사용한다? 정말 아깝죠!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  ChatGPT 모델별 최적 사용 가이드 (OpenAI 공식 권장)</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">GPT-4o: 일상적인 만능 도우미</span></h3>\n<p data-ke-size=\"size16\">GPT-4o는 일상 작업에 가장 적합한 모델입니다. 빠른 응답과 충분한 성능을 갖추고 있어요. 이런 작업에 완벽해요:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>긴 글이나 회의록 요약하기</li>\n<li>이메일 초안 작성하기</li>\n<li>아이디어 브레인스토밍</li>\n<li>보고서 교정하기</li>\n</ul>\n<p data-ke-size=\"size16\">게다가 멀티모달 기능을 갖추고 있어 이미지 생성도 가능하며, 텍스트, 문서, 오디오, 비디오 등 다양한 입력을 처리할 수 있습니다. 믿을 수 있는 만능 비서가 필요하다면 GPT-4o로 시작하세요!</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">GPT-4.5: 창의적인 협업자</span></h3>\n<p data-ke-size=\"size16\">2025년 2월에 출시된 GPT-4.5는 창의적인 작업에 추천되는 모델입니다. 사람과 같은 창의성이 필요한 작업에 최적화되어 있어요. 개인이나 그룹과의 소통에도 탁월합니다.</p>\n<p data-ke-size=\"size16\">이 모델이 커뮤니케이션에 적합한 이유는 감성 지능, 명확한 의사소통 능력, 인간적인 직관력 때문이에요. 다음과 같은 작업에 이상적입니다:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>매력적인 글 작성</li>\n<li>공감 능력이 필요한 소통</li>\n<li>창의적 브레인스토밍</li>\n</ul>\n<p data-ke-size=\"size16\">회사 제품 출시를 위한 마케팅 카피를 브랜드 톤앤보이스에 맞게 작성하고 싶다면? GPT-4.5가 최선의 선택입니다.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">OpenAI o4-mini: 빠른 기술 지원</span></h3>\n<p data-ke-size=\"size16\">OpenAI o4-mini는 속도를 위해 만들어졌습니다. 하지만 그 속도는 대가가 있죠. 더 큰 모델들과 달리 주어진 작업을 깊이 있게 처리하지 못할 수 있어요. 주로 빠르고 간단한 기술적 작업을 처리하는 데 탁월합니다.</p>\n<p data-ke-size=\"size16\">이런 경우에 사용하세요:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>깊은 추론이 필요 없는 STEM 관련 과제 (학생들에게 적합)</li>\n<li>간단한 코드 수정 (프로그래머가 Stack Overflow에서 찾을 법한 간단한 문제)</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">OpenAI o4-mini-high: 상세한 기술 전문가</span></h3>\n<p data-ke-size=\"size16\">o4-mini의 능력 범위를 넘어서는 고급 기술 주제나 문제에 도움이 필요하다면, o4-mini-high가 해답입니다. 고급 코딩, 수학, 과학 주제에 사용하세요. o4-mini보다 응답 시간이 조금 더 걸리지만, 출력 결과의 품질과 깊이가 보상으로 돌아옵니다.</p>\n<p data-ke-size=\"size16\">고급 기술 주제에 대한 깊이와 정확성이 필요하다면 이 모델을 사용하세요. 예를 들어:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>복잡한 수학 문제 해결</li>\n<li>복잡한 컴퓨터 과학 알고리즘에 대한 상세한 설명</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">OpenAI o3: 복잡한 문제 해결사</span></h3>\n<p data-ke-size=\"size16\">OpenAI o3도 복잡성을 위해 설계되었습니다. o4-mini-high에서 한 단계 더 나아가 단순히 복잡할 뿐만 아니라 여러 단계가 포함된 작업도 해결합니다.</p>\n<p data-ke-size=\"size16\">이런 작업에 활용해보세요:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>데이터 세트에 대한 다단계 분석 수행</li>\n<li>시장 역학과 경쟁사를 분석하여 사업 확장 전략 개발</li>\n<li>다양한 마이크로서비스의 시스템 로그를 검토하여 최적화 전략 찾기</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">OpenAI o1 Pro 모드: 깊은 사고가</span></h3>\n<p data-ke-size=\"size16\">여러분이 업계 최전선에서 일한다면, o1 pro 모드를 사용해야 합니다. 속도 면에서는 높은 순위에 들지 못하지만, 그건 의도적인 설계예요. 주로 금융, 법률, 의료와 같이 실수가 많은 비용을 초래하는 고위험 산업과 상세한 분석이 필요한 작업을 대상으로 합니다.</p>\n<p data-ke-size=\"size16\">예를 들어 OpenAI o1을 다음과 같은 용도로 사용할 수 있어요:</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>재무 예측 알고리즘 설계</li>\n<li>정책 문서 작성</li>\n</ul>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  한 가지 모델로 모든 것을 해결하려 하지 마세요</b></span></h2>\n<p data-ke-size=\"size16\">최신 모델이 모든 종류의 작업을 처리하는 만능 솔루션처럼 보일 수 있지만, 위의 가이드라인은 어떤 단일 모델도 모든 것에서 뛰어나지 않음을 보여줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">저도 처음엔 그냥 가장 최신 모델만 썼는데, 이제는 작업 유형에 따라 모델을 선택하고 있어요. 물론 시시각각 변하겠지만, 이렇게 선택하는 것이 효율적이에요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  진짜 활용해본 후기: 모델별 차이점을 체감했어요</b></span></h2>\n<p data-ke-size=\"size16\">솔직히 처음엔 이런 모델 구분이 마케팅용인가 싶었어요. 그런데 직접 테스트해보니 확실히 달라요! 간단한 요약은 GPT-4o로 하면 몇 초 만에 끝나는데, o3로 하면 너무 깊이 들어가서 오히려 시간이 더 걸리더라고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그리고 제가 프로그래밍 공부를 하는데, 간단한 코드 오류는 o4-mini가 정말 빠르게 해결해줘요. 하지만 복잡한 알고리즘을 설명받고 싶을 땐 확실히 o4-mini-high가 더 정확하고 상세해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">브랜드 캠페인 아이디어를 구상할 때는 GPT-4.5의 창의성이 확실히 돋보였어요. 같은 프롬프트를 다른 모델에 넣었을 때보다 훨씬 신선한 아이디어가 나왔거든요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><b><span style=\"color: #006dd7;\">  실험: 같은 질문, 다른 모델</span></b></h2>\n<p data-ke-size=\"size16\">제가 정말 궁금해서 동일한 질문을 여러 모델에 물어봤어요:<br />\"인공지능이 창의성을 가질 수 있을까?\"</p>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>GPT-4o: 균형 잡힌 답변과 여러 관점 제시</li>\n<li>GPT-4.5: 철학적 깊이와 창의적인 비유 사용</li>\n<li>o4-mini: 간결하지만 약간 피상적인 답변</li>\n<li>o3: 매우 체계적인 분석과 학술 참고자료 인용</li>\n</ul>\n<p data-ke-size=\"size16\">확실히 질문의 성격에 따라 모델을 선택하는 게 효율적이라는 걸 알게 됐어요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>⚡ 모델 선택 팁: 작업 복잡도 기준으로 선택하세요</b></span></h2>\n<p data-ke-size=\"size16\">제가 사용해본 경험을 바탕으로 간단한 팁을 드릴게요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4caf50; color: white;\">\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">작업 유형</th>\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">추천 모델</th>\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">이유</th>\n</tr>\n</thead>\n<tbody>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">일상적인 대화</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">GPT-4o</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">빠르고 균형 잡힌 응답</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">창의적 글쓰기</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">GPT-4.5</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">인간적 감성과 창의성</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">간단한 코딩</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">o4-mini</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">빠른 응답 시간</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">복잡한 코딩</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">o4-mini-high</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">정확하고 상세한 설명</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">전략 계획</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">o3</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">다단계 분석 능력</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">고위험 의사결정</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">o1 Pro</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">최소한의 환각, 최대 정확도</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">결국, 가장 좋은 모델은 여러분의 목적에 가장 잘 맞는 모델입니다. 단순히 최신 모델이나 가장 비싼 모델이 항상 최선은 아니에요!</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>❓ 자주 묻는 질문</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 무료 사용자도 모든 모델을 사용할 수 있나요?</b><br />A: 아니요, 일부 고급 모델은 ChatGPT Plus 또는 Pro 구독자만 사용 가능합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 가장 빠른 모델은 무엇인가요?</b><br />A: OpenAI o4-mini가 가장 빠른 응답 시간을 제공합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 환각(hallucination)이 가장 적은 모델은?</b><br />A: OpenAI o1 Pro 모드가 환각을 최소화하도록 설계되었습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 이미지를 분석할 수 있는 모델은?</b><br />A: GPT-4o가 멀티모달 기능으로 이미지를 분석할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 모델이 계속 업데이트되나요?</b><br />A: 네, OpenAI는 정기적으로 모델을 업데이트하고 새 모델을 출시합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1075\" data-origin-height=\"607\"><span data-url=\"https://blog.kakaocdn.net/dn/bax2iX/btsNUHdGGm5/aiVd0f5N8t9bS3Cklr0kh1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bax2iX/btsNUHdGGm5/aiVd0f5N8t9bS3Cklr0kh1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bax2iX/btsNUHdGGm5/aiVd0f5N8t9bS3Cklr0kh1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fbax2iX%2FbtsNUHdGGm5%2FaiVd0f5N8t9bS3Cklr0kh1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"ChatGPT 모델별 최적 활용 가이드\" loading=\"lazy\" width=\"1075\" height=\"607\" data-origin-width=\"1075\" data-origin-height=\"607\"/></span></figure>\n</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 사용자도 모든 모델을 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아니요, 일부 고급 모델은 ChatGPT Plus 또는 Pro 구독자만 사용 가능합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"가장 빠른 모델은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"OpenAI o4-mini가 가장 빠른 응답 시간을 제공합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"환각(hallucination)이 가장 적은 모델은?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"OpenAI o1 Pro 모드가 환각을 최소화하도록 설계되었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이미지를 분석할 수 있는 모델은?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"GPT-4o가 멀티모달 기능으로 이미지를 분석할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"모델이 계속 업데이트되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, OpenAI는 정기적으로 모델을 업데이트하고 새 모델을 출시합니다.\"\n      }\n    }\n  ]\n}\n</script>",
        "contentSnippet": "어떤 ChatGPT 모델이 내 목적에 딱 맞을까? OpenAI가 공개한 모델별 적합 작업을 알아보고, 시간과 비용을 절약하는 현명한 선택법을 소개합니다. 최신 모델이 항상 최선은 아니라는 사실!\n\n\n \n  ChatGPT를 열자마자 당황하신적 있나요? 저는 모델 선택 창에 GPT-4o, GPT-4.5, OpenAI o4-mini, o4-mini-high, o3... 이런 이름들이 줄줄이 나오는데 뭘 골라야 할지 모르겠더라고요. 여러분도 비슷한 경험 있으신가요? 솔직히 말해서 최신 모델이나 가장 강력하다는 모델을 무작정 선택하는 게 제 평소 습관이었어요. 그런데 말이죠, 이게 큰 착각이었네요. 최근 OpenAI가 공개한 가이드라인에 따르면, 각 모델마다 장점이 다르고 적합한 작업이 따로 있다고 합니다.\n \n오늘은 제가 알아본 각 ChatGPT 모델별 최적 사용법을 공유해드릴게요. 이걸 알고 나면 여러분의 AI 경험이 훨씬 더 효율적으로 변할 거예요!\n \n  왜 올바른 ChatGPT 모델 선택이 중요할까요?\n2022년 ChatGPT가 처음 등장했을 때는 모델이 하나뿐이었어요. 하지만 시간이 지나면서 OpenAI는 계속해서 새로운 버전을 출시했고, 지금은 각 작업에 최적화된 여러 모델이 존재합니다.\n \n적합한 모델을 사용하면 응답 속도와 품질이 크게 개선됩니다. 반면, 잘못된 모델을 사용하면 시간 낭비는 물론이고 AI 환각(hallucination)이 발생할 위험도 높아져요. 특히 사용 제한이 있는 모델은 더더욱 신중하게 선택해야 합니다.\n \n예를 들어, OpenAI o1 pro 모드는 복잡한 추론 작업에 아주 적합하지만, 한 달에 5번만 사용할 수 있어요. 그런데 이걸 단순히 지브리 스타일 이미지 생성에 사용한다? 정말 아깝죠!\n \n  ChatGPT 모델별 최적 사용 가이드 (OpenAI 공식 권장)\nGPT-4o: 일상적인 만능 도우미\nGPT-4o는 일상 작업에 가장 적합한 모델입니다. 빠른 응답과 충분한 성능을 갖추고 있어요. 이런 작업에 완벽해요:\n긴 글이나 회의록 요약하기\n이메일 초안 작성하기\n아이디어 브레인스토밍\n보고서 교정하기\n게다가 멀티모달 기능을 갖추고 있어 이미지 생성도 가능하며, 텍스트, 문서, 오디오, 비디오 등 다양한 입력을 처리할 수 있습니다. 믿을 수 있는 만능 비서가 필요하다면 GPT-4o로 시작하세요!\nGPT-4.5: 창의적인 협업자\n2025년 2월에 출시된 GPT-4.5는 창의적인 작업에 추천되는 모델입니다. 사람과 같은 창의성이 필요한 작업에 최적화되어 있어요. 개인이나 그룹과의 소통에도 탁월합니다.\n이 모델이 커뮤니케이션에 적합한 이유는 감성 지능, 명확한 의사소통 능력, 인간적인 직관력 때문이에요. 다음과 같은 작업에 이상적입니다:\n매력적인 글 작성\n공감 능력이 필요한 소통\n창의적 브레인스토밍\n회사 제품 출시를 위한 마케팅 카피를 브랜드 톤앤보이스에 맞게 작성하고 싶다면? GPT-4.5가 최선의 선택입니다.\nOpenAI o4-mini: 빠른 기술 지원\nOpenAI o4-mini는 속도를 위해 만들어졌습니다. 하지만 그 속도는 대가가 있죠. 더 큰 모델들과 달리 주어진 작업을 깊이 있게 처리하지 못할 수 있어요. 주로 빠르고 간단한 기술적 작업을 처리하는 데 탁월합니다.\n이런 경우에 사용하세요:\n깊은 추론이 필요 없는 STEM 관련 과제 (학생들에게 적합)\n간단한 코드 수정 (프로그래머가 Stack Overflow에서 찾을 법한 간단한 문제)\nOpenAI o4-mini-high: 상세한 기술 전문가\no4-mini의 능력 범위를 넘어서는 고급 기술 주제나 문제에 도움이 필요하다면, o4-mini-high가 해답입니다. 고급 코딩, 수학, 과학 주제에 사용하세요. o4-mini보다 응답 시간이 조금 더 걸리지만, 출력 결과의 품질과 깊이가 보상으로 돌아옵니다.\n고급 기술 주제에 대한 깊이와 정확성이 필요하다면 이 모델을 사용하세요. 예를 들어:\n복잡한 수학 문제 해결\n복잡한 컴퓨터 과학 알고리즘에 대한 상세한 설명\nOpenAI o3: 복잡한 문제 해결사\nOpenAI o3도 복잡성을 위해 설계되었습니다. o4-mini-high에서 한 단계 더 나아가 단순히 복잡할 뿐만 아니라 여러 단계가 포함된 작업도 해결합니다.\n이런 작업에 활용해보세요:\n데이터 세트에 대한 다단계 분석 수행\n시장 역학과 경쟁사를 분석하여 사업 확장 전략 개발\n다양한 마이크로서비스의 시스템 로그를 검토하여 최적화 전략 찾기\nOpenAI o1 Pro 모드: 깊은 사고가\n여러분이 업계 최전선에서 일한다면, o1 pro 모드를 사용해야 합니다. 속도 면에서는 높은 순위에 들지 못하지만, 그건 의도적인 설계예요. 주로 금융, 법률, 의료와 같이 실수가 많은 비용을 초래하는 고위험 산업과 상세한 분석이 필요한 작업을 대상으로 합니다.\n예를 들어 OpenAI o1을 다음과 같은 용도로 사용할 수 있어요:\n재무 예측 알고리즘 설계\n정책 문서 작성\n \n  한 가지 모델로 모든 것을 해결하려 하지 마세요\n최신 모델이 모든 종류의 작업을 처리하는 만능 솔루션처럼 보일 수 있지만, 위의 가이드라인은 어떤 단일 모델도 모든 것에서 뛰어나지 않음을 보여줍니다.\n \n저도 처음엔 그냥 가장 최신 모델만 썼는데, 이제는 작업 유형에 따라 모델을 선택하고 있어요. 물론 시시각각 변하겠지만, 이렇게 선택하는 것이 효율적이에요.\n \n  진짜 활용해본 후기: 모델별 차이점을 체감했어요\n솔직히 처음엔 이런 모델 구분이 마케팅용인가 싶었어요. 그런데 직접 테스트해보니 확실히 달라요! 간단한 요약은 GPT-4o로 하면 몇 초 만에 끝나는데, o3로 하면 너무 깊이 들어가서 오히려 시간이 더 걸리더라고요.\n \n그리고 제가 프로그래밍 공부를 하는데, 간단한 코드 오류는 o4-mini가 정말 빠르게 해결해줘요. 하지만 복잡한 알고리즘을 설명받고 싶을 땐 확실히 o4-mini-high가 더 정확하고 상세해요.\n \n브랜드 캠페인 아이디어를 구상할 때는 GPT-4.5의 창의성이 확실히 돋보였어요. 같은 프롬프트를 다른 모델에 넣었을 때보다 훨씬 신선한 아이디어가 나왔거든요.\n \n  실험: 같은 질문, 다른 모델\n제가 정말 궁금해서 동일한 질문을 여러 모델에 물어봤어요:\n\"인공지능이 창의성을 가질 수 있을까?\"\nGPT-4o: 균형 잡힌 답변과 여러 관점 제시\nGPT-4.5: 철학적 깊이와 창의적인 비유 사용\no4-mini: 간결하지만 약간 피상적인 답변\no3: 매우 체계적인 분석과 학술 참고자료 인용\n확실히 질문의 성격에 따라 모델을 선택하는 게 효율적이라는 걸 알게 됐어요!\n \n⚡ 모델 선택 팁: 작업 복잡도 기준으로 선택하세요\n제가 사용해본 경험을 바탕으로 간단한 팁을 드릴게요.\n작업 유형\n추천 모델\n이유\n\n\n\n\n일상적인 대화\nGPT-4o\n빠르고 균형 잡힌 응답\n\n\n창의적 글쓰기\nGPT-4.5\n인간적 감성과 창의성\n\n\n간단한 코딩\no4-mini\n빠른 응답 시간\n\n\n복잡한 코딩\no4-mini-high\n정확하고 상세한 설명\n\n\n전략 계획\no3\n다단계 분석 능력\n\n\n고위험 의사결정\no1 Pro\n최소한의 환각, 최대 정확도\n\n\n\n결국, 가장 좋은 모델은 여러분의 목적에 가장 잘 맞는 모델입니다. 단순히 최신 모델이나 가장 비싼 모델이 항상 최선은 아니에요!\n❓ 자주 묻는 질문\nQ: 무료 사용자도 모든 모델을 사용할 수 있나요?\nA: 아니요, 일부 고급 모델은 ChatGPT Plus 또는 Pro 구독자만 사용 가능합니다.\nQ: 가장 빠른 모델은 무엇인가요?\nA: OpenAI o4-mini가 가장 빠른 응답 시간을 제공합니다.\nQ: 환각(hallucination)이 가장 적은 모델은?\nA: OpenAI o1 Pro 모드가 환각을 최소화하도록 설계되었습니다.\nQ: 이미지를 분석할 수 있는 모델은?\nA: GPT-4o가 멀티모달 기능으로 이미지를 분석할 수 있습니다.\nQ: 모델이 계속 업데이트되나요?\nA: 네, OpenAI는 정기적으로 모델을 업데이트하고 새 모델을 출시합니다.\n \n\n\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"무료 사용자도 모든 모델을 사용할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"아니요, 일부 고급 모델은 ChatGPT Plus 또는 Pro 구독자만 사용 가능합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"가장 빠른 모델은 무엇인가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"OpenAI o4-mini가 가장 빠른 응답 시간을 제공합니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"환각(hallucination)이 가장 적은 모델은?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"OpenAI o1 Pro 모드가 환각을 최소화하도록 설계되었습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"이미지를 분석할 수 있는 모델은?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"GPT-4o가 멀티모달 기능으로 이미지를 분석할 수 있습니다.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"모델이 계속 업데이트되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, OpenAI는 정기적으로 모델을 업데이트하고 새 모델을 출시합니다.\"\n      }\n    }\n  ]\n}",
        "guid": "https://muzbox.tistory.com/483584",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "ai 모델 효율성",
          "ai 활용 팁",
          "chatgpt 모델 비교",
          "chatgpt 모델 선택",
          "chatgpt 성능 향상",
          "gpt-4.5 창의성",
          "gpt-4o 사용법",
          "openai o3 vs o4-mini",
          "openai 모델 가이드",
          "인공지능 최적화"
        ],
        "isoDate": "2025-05-12T23:47:54.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "AI 시대, 코딩을 배울 가치가 있을까?",
        "link": "https://muzbox.tistory.com/483583",
        "pubDate": "Mon, 12 May 2025 09:53:34 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483583#entry483583comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;AI가 코드를 뚝딱 만들어내는 시대에 직접 프로그래밍을 배울 필요가 있을까요? 계산기가 있어도 수학을 배우듯, AI 시대에도 코딩 공부가 여전히 가치 있는 이유와 그 한계에 대한 솔직한 이야기를 나눠봅니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/NiksQ/btsNTxPh0PP/eSVPWOyNPbb2JvcOXG9lYk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/NiksQ/btsNTxPh0PP/eSVPWOyNPbb2JvcOXG9lYk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/NiksQ/btsNTxPh0PP/eSVPWOyNPbb2JvcOXG9lYk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FNiksQ%2FbtsNTxPh0PP%2FeSVPWOyNPbb2JvcOXG9lYk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"AI 시대, 코딩을 배울 가치가 있을까?\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"blob\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;솔직히 말해서, 요즘 ChatGPT나 Claude같은 AI 도구들이 몇 초 만에 코드를 뚝딱 만들어내는 걸 보면 '내가 왜 이렇게 고생스럽게 코딩을 배워야 하나?' 하는 생각이 들어요. 저도 처음 프로그래밍을 배울 때는 세미콜론 하나 빼먹어서 몇 시간을 헤맸던 기억이 있거든요. 그런데 이제 AI에게 \"로그인 기능 만들어줘\"라고 하면 완벽한 코드가 뚝딱 나오니까요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분도 이런 고민 한 번쯤 해보셨을 거예요. 특히 코딩을 새로 배우려는 사람들이라면 더욱 그렇죠. \"AI가 다 해주는데 내가 왜 배워?\"라는 의문이 당연히 들 수밖에 없어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 약간의 관점 전환이 필요할 것 같아요. 계산기가 있다고 해서 수학 공부가 불필요해지지 않는 것처럼, AI가 코드를 생성할 수 있다고 해서 프로그래밍 학습이 무의미해지는 건 아니니까요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>AI 시대에도 코딩 학습이 여전히 중요한 이유 ✨</b></span></h2>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">문제 해결 능력의 성장</span></h3>\n<p data-ke-size=\"size16\">프로그래밍을 배우는 과정은 단순히 코드 작성법을 익히는 것보다 훨씬 더 많은 걸 가르쳐줘요. 복잡한 문제를 작은 단위로 나누고, 논리적으로 해결책을 찾아가는 사고방식을 기르게 되죠. 이건 AI가 대신해줄 수 없는 부분이에요.</p>\n<p data-ke-size=\"size16\">제가 코딩을 배우면서 가장 큰 깨달음을 얻은 순간은 실제로 코드를 작성할 때가 아니라, 문제를 어떻게 접근할지 생각하는 과정이었어요. 이런 능력은 일상생활의 다른 문제들을 해결할 때도 큰 도움이 되더라고요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">AI의 한계 이해하기</span></h3>\n<p data-ke-size=\"size16\">AI는 강력하지만 완벽하지 않아요. 사실 AI가 생성한 코드를 제대로 활용하려면 그 코드가 무엇을 하는지, 어떻게 작동하는지 이해할 수 있어야 해요. 그리고 뭔가 잘못됐을 때 디버깅할 수 있는 능력도 필요하죠.</p>\n<p data-ke-size=\"size16\">얼마 전에 AI로 간단한 웹 스크래핑 코드를 만들었는데, 실행하니까 오류가 나더라고요. 기본적인 프로그래밍 지식이 없었다면 그 오류를 해결하지 못했을 거예요. 결국 코딩의 기본 개념을 알고 있어야 AI의 도움을 제대로 활용할 수 있다는 걸 깨달았죠.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">창의적인 문제 해결</span></h3>\n<p data-ke-size=\"size16\">AI는 코드를 생성하는 데 놀라운 능력을 보여주고 있지만, 많은 소프트웨어 개발자들은 \"기계가 코드 작성과 관련된 뉘앙스와 창의성을 결코 이해할 수 없다\"고 여겨 AI 코딩 도구를 신뢰하기 주저하기도 해요. 그런데 저는 이 부분에서 약간 다른 시각을 가지고 있어요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">기술적 이해와 문제 해결 능력 키우기</span></h3>\n<p data-ke-size=\"size16\">AI가 코드를 뱉어낼 수 있다고 해도, 그 코드가 정확히 무엇을 하는지 이해하지 못하면 결국 한계에 부딪히게 돼요. 기술의 근본 원리와 문제 해결 방식을 이해하는 것은 여전히 인간의 영역이에요.</p>\n<p data-ke-size=\"size16\">특히 업계 전문가들도 \"AI 코딩 도구가 때때로 환각 현상을 보이며 무작위한 답변을 제공한다\"라고 지적하고 있죠. 저도 실제로 AI가 생성한 코드를 사용하다가 어이없는 오류를 발견하고 디버깅하느라 시간을 허비한 경험이 있어요. 그때 기본적인 프로그래밍 지식이 없었다면 해결하지 못했을 거예요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">AI와의 협업: 새로운 코딩 패러다임  </span></h3>\n<p data-ke-size=\"size16\">요즘은 AI와 함께 코딩하는 새로운 작업 방식이 형성되고 있어요. 개발자들은 AI 지원 코딩 도구를 사용해 코드를 더 빠르고 정확하게 작성할 수 있게 되었고, 이는 수동 코드 작성 및 업데이트에 소요되던 시간을 크게 절약해 주고 있어요.</p>\n<p data-ke-size=\"size16\">여기서 핵심은 AI를 '대체자'가 아닌 '협업자'로 보는 관점의 전환이에요. 저는 이런 방식으로 일해보니 AI가 반복적인 부분을 처리해주고, 저는 창의적인 문제 해결과 설계에 집중할 수 있어서 오히려 더 좋은 코드를 만들 수 있더라고요.</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">AI의 한계 인식하기 ⚠️</span></h3>\n<p data-ke-size=\"size16\">물론 AI에도 분명한 한계가 있어요. \"인간 초고수를 이기는 AI보다 평범한 고객응대 챗봇이 더 만들기 어렵다\"라는 말처럼, AI는 기술적으로는 놀라운 성과를 보여주지만 실제 비즈니스 문제나 사용자의 니즈를 정확히 이해하고 그에 맞는 솔루션을 제공하는 데는 아직 한계가 있어요.</p>\n<p data-ke-size=\"size16\">특히 라이브러리와 라이브러리 버전에 취약하고, 특정 라이브러리의 메서드를 사용하는 데 일관성을 유지하기 어렵다는 점은 개발자들이 반드시 알고 있어야 할 AI의 약점이에요.</p>\n<p data-ke-size=\"size16\">또한 AI 도구가 코드 완성, 최적화, 성능, 수정 및 설명을 위한 멘토 역할을 할 수는 있지만, \"코딩 방법을 배우는 데 사용할 수 없으며, 좋은 코딩 관행을 대체할 수 없다\"는 점을 명심해야 해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>미래의 코딩 교육: 적응하고 진화하기  </b></span></h2>\n<p data-ke-size=\"size16\">프로그래밍 교육도 이제 변화가 필요해요. 단순히 문법이나 알고리즘을 가르치는 것에서 벗어나, AI 도구를 효과적으로 활용하는 방법과 AI와 협업하는 방법을 배워야 해요.</p>\n<p data-ke-size=\"size16\">교육에서 중요한 건 '어떻게 코드를 작성하는가'보다 '어떤 문제를 해결해야 하는가'에 초점을 맞추는 것이에요. 문제를 정확하게 정의하고, 적절한 해결책을 설계하는 능력은 AI가 쉽게 대체하기 어려운 인간의 영역이니까요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>균형 찾기: 코딩 학습과 AI 활용 사이의 딜레마 ⚖️</b></span></h2>\n<p data-ke-size=\"size16\">솔직히 말해서, 코딩을 배우는 게 이전보다 덜 시급해진 건 사실이에요. AI 코드 생성 소프트웨어는 간단하고, 다양한 프로그래밍 언어에서 사용할 수 있으며, 개발자와 비개발자 모두 액세스할 수 있게 되었으니까요.</p>\n<p data-ke-size=\"size16\">하지만 그렇다고 코딩 학습이 완전히 불필요해진 건 아니에요. AI로 생성된 코드를 제대로 활용하고 검증하려면 기본적인 프로그래밍 개념과 논리적 사고방식은 여전히 필요하거든요.</p>\n<p data-ke-size=\"size16\">제가 생각하는 이상적인 접근법은 이래요:</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li>기본적인 프로그래밍 개념과 논리적 사고를 배우기</li>\n<li>AI 도구를 활용해 생산성을 높이는 방법 익히기</li>\n<li>AI의 한계를 인식하고 필요할 때 직접 코딩할 수 있는 능력 유지하기</li>\n</ol>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"858\" data-origin-height=\"480\"><span data-url=\"https://blog.kakaocdn.net/dn/8YDMF/btsNSmVLMMP/Llz23RLZApUdi62rgg5RTk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/8YDMF/btsNSmVLMMP/Llz23RLZApUdi62rgg5RTk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/8YDMF/btsNSmVLMMP/Llz23RLZApUdi62rgg5RTk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F8YDMF%2FbtsNSmVLMMP%2FLlz23RLZApUdi62rgg5RTk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"858\" height=\"480\" data-origin-width=\"858\" data-origin-height=\"480\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>마무리: 새로운 시대의 코딩 철학  </b></span></h2>\n<p data-ke-size=\"size16\">결국, 프로그래밍을 배울 가치가 있느냐는 질문에 단순히 \"예\" 또는 \"아니오\"로 답하기는 어려워요. 개인의 목표, 관심사, 그리고 어떤 분야에서 일하고 싶은지에 따라 달라질 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">하지만 분명한 건, AI 시대에도 컴퓨터적 사고방식과 문제 해결 능력은 여전히 중요하다는 점이에요. AI는 도구이지, 우리의 사고를 대체하는 것이 아니니까요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">창의력은 지식을 합성해 독창적인 아이디어를 생산하는 능력을 말합니다. 남들이 생각하지 못한 새로운 것을 만들어내는 능력이 창의력이라면, 인공지능은 이제 그 영역에 거의 다가서고 있는 셈이죠. 하지만 완전히 그 자리를 차지하진 못했어요. 여전히 우리 인간만이 가진 영역이 있고, 그 영역은 코딩 기술을 배움으로써 더욱 강화될 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그러니까, AI 시대에도 프로그래밍을 배우는 건 여전히 가치가 있다고 봐요. 다만 배우는 방식과 목적, 그리고 깊이에 대해선 새롭게 생각해볼 필요가 있겠죠?</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\">FAQ 섹션</h2>\n<p data-ke-size=\"size16\"><b>Q: AI가 코드를 다 만들어준다면, 초보자가 코딩을 배울 필요가 있을까요?</b><br />A: 기본 개념과 논리적 사고는 여전히 중요해요. AI 도구를 효과적으로 사용하고 결과물을 검증하려면 기초 지식이 필요합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 어떤 프로그래밍 언어를 배우는 게 AI 시대에 가장 유리할까요?</b><br />A: Python이 AI와의 연동성이 좋고 진입장벽이 낮아 추천해요. 하지만 언어보다 문제 해결 사고방식을 기르는 게 더 중요합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 코딩보다 AI 프롬프트 작성법을 배우는 게 더 효율적일까요?</b><br />A: 둘 다 중요해요. 좋은 프롬프트를 작성하려면 구현하려는 기능에 대한 기술적 이해가 필요합니다.</p>\n<p data-ke-size=\"size16\"><b>Q: AI 코드 도구에서 가장 주의해야 할 점은 무엇인가요?</b><br />A: 결과물을 맹신하지 말고 항상 검증하세요. AI는 때때로 환각 현상을 보이거나 오류가 있는 코드를 생성할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 개발자로 커리어를 준비 중인데, AI 때문에 미래가 불안해요.</b><br />A: AI는 도구일 뿐이니 걱정마세요. 오히려 AI와 효과적으로 협업하는 개발자의 가치는 더 높아질 겁니다.</p>\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"AI가 코드를 다 만들어준다면, 초보자가 코딩을 배울 필요가 있을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"기본 개념과 논리적 사고는 여전히 중요해요. AI 도구를 효과적으로 사용하고 결과물을 검증하려면 기초 지식이 필요합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"어떤 프로그래밍 언어를 배우는 게 AI 시대에 가장 유리할까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"Python이 AI와의 연동성이 좋고 진입장벽이 낮아 추천해요. 하지만 언어보다 문제 해결 사고방식을 기르는 게 더 중요합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"코딩보다 AI 프롬프트 작성법을 배우는 게 더 효율적일까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"둘 다 중요해요. 좋은 프롬프트를 작성하려면 구현하려는 기능에 대한 기술적 이해가 필요합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI 코드 도구에서 가장 주의해야 할 점은 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"결과물을 맹신하지 말고 항상 검증하세요. AI는 때때로 환각 현상을 보이거나 오류가 있는 코드를 생성할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"개발자로 커리어를 준비 중인데, AI 때문에 미래가 불안해요.\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"AI는 도구일 뿐이니 걱정마세요. 오히려 AI와 효과적으로 협업하는 개발자의 가치는 더 높아질 겁니다.\"\n    }\n  }]\n}\n</script>",
        "contentSnippet": "AI가 코드를 뚝딱 만들어내는 시대에 직접 프로그래밍을 배울 필요가 있을까요? 계산기가 있어도 수학을 배우듯, AI 시대에도 코딩 공부가 여전히 가치 있는 이유와 그 한계에 대한 솔직한 이야기를 나눠봅니다.\n\n\n \n 솔직히 말해서, 요즘 ChatGPT나 Claude같은 AI 도구들이 몇 초 만에 코드를 뚝딱 만들어내는 걸 보면 '내가 왜 이렇게 고생스럽게 코딩을 배워야 하나?' 하는 생각이 들어요. 저도 처음 프로그래밍을 배울 때는 세미콜론 하나 빼먹어서 몇 시간을 헤맸던 기억이 있거든요. 그런데 이제 AI에게 \"로그인 기능 만들어줘\"라고 하면 완벽한 코드가 뚝딱 나오니까요.\n \n여러분도 이런 고민 한 번쯤 해보셨을 거예요. 특히 코딩을 새로 배우려는 사람들이라면 더욱 그렇죠. \"AI가 다 해주는데 내가 왜 배워?\"라는 의문이 당연히 들 수밖에 없어요.\n \n하지만 약간의 관점 전환이 필요할 것 같아요. 계산기가 있다고 해서 수학 공부가 불필요해지지 않는 것처럼, AI가 코드를 생성할 수 있다고 해서 프로그래밍 학습이 무의미해지는 건 아니니까요.\n \nAI 시대에도 코딩 학습이 여전히 중요한 이유 ✨\n문제 해결 능력의 성장\n프로그래밍을 배우는 과정은 단순히 코드 작성법을 익히는 것보다 훨씬 더 많은 걸 가르쳐줘요. 복잡한 문제를 작은 단위로 나누고, 논리적으로 해결책을 찾아가는 사고방식을 기르게 되죠. 이건 AI가 대신해줄 수 없는 부분이에요.\n제가 코딩을 배우면서 가장 큰 깨달음을 얻은 순간은 실제로 코드를 작성할 때가 아니라, 문제를 어떻게 접근할지 생각하는 과정이었어요. 이런 능력은 일상생활의 다른 문제들을 해결할 때도 큰 도움이 되더라고요.\nAI의 한계 이해하기\nAI는 강력하지만 완벽하지 않아요. 사실 AI가 생성한 코드를 제대로 활용하려면 그 코드가 무엇을 하는지, 어떻게 작동하는지 이해할 수 있어야 해요. 그리고 뭔가 잘못됐을 때 디버깅할 수 있는 능력도 필요하죠.\n얼마 전에 AI로 간단한 웹 스크래핑 코드를 만들었는데, 실행하니까 오류가 나더라고요. 기본적인 프로그래밍 지식이 없었다면 그 오류를 해결하지 못했을 거예요. 결국 코딩의 기본 개념을 알고 있어야 AI의 도움을 제대로 활용할 수 있다는 걸 깨달았죠.\n창의적인 문제 해결\nAI는 코드를 생성하는 데 놀라운 능력을 보여주고 있지만, 많은 소프트웨어 개발자들은 \"기계가 코드 작성과 관련된 뉘앙스와 창의성을 결코 이해할 수 없다\"고 여겨 AI 코딩 도구를 신뢰하기 주저하기도 해요. 그런데 저는 이 부분에서 약간 다른 시각을 가지고 있어요.\n기술적 이해와 문제 해결 능력 키우기\nAI가 코드를 뱉어낼 수 있다고 해도, 그 코드가 정확히 무엇을 하는지 이해하지 못하면 결국 한계에 부딪히게 돼요. 기술의 근본 원리와 문제 해결 방식을 이해하는 것은 여전히 인간의 영역이에요.\n특히 업계 전문가들도 \"AI 코딩 도구가 때때로 환각 현상을 보이며 무작위한 답변을 제공한다\"라고 지적하고 있죠. 저도 실제로 AI가 생성한 코드를 사용하다가 어이없는 오류를 발견하고 디버깅하느라 시간을 허비한 경험이 있어요. 그때 기본적인 프로그래밍 지식이 없었다면 해결하지 못했을 거예요.\nAI와의 협업: 새로운 코딩 패러다임  \n요즘은 AI와 함께 코딩하는 새로운 작업 방식이 형성되고 있어요. 개발자들은 AI 지원 코딩 도구를 사용해 코드를 더 빠르고 정확하게 작성할 수 있게 되었고, 이는 수동 코드 작성 및 업데이트에 소요되던 시간을 크게 절약해 주고 있어요.\n여기서 핵심은 AI를 '대체자'가 아닌 '협업자'로 보는 관점의 전환이에요. 저는 이런 방식으로 일해보니 AI가 반복적인 부분을 처리해주고, 저는 창의적인 문제 해결과 설계에 집중할 수 있어서 오히려 더 좋은 코드를 만들 수 있더라고요.\nAI의 한계 인식하기 ⚠️\n물론 AI에도 분명한 한계가 있어요. \"인간 초고수를 이기는 AI보다 평범한 고객응대 챗봇이 더 만들기 어렵다\"라는 말처럼, AI는 기술적으로는 놀라운 성과를 보여주지만 실제 비즈니스 문제나 사용자의 니즈를 정확히 이해하고 그에 맞는 솔루션을 제공하는 데는 아직 한계가 있어요.\n특히 라이브러리와 라이브러리 버전에 취약하고, 특정 라이브러리의 메서드를 사용하는 데 일관성을 유지하기 어렵다는 점은 개발자들이 반드시 알고 있어야 할 AI의 약점이에요.\n또한 AI 도구가 코드 완성, 최적화, 성능, 수정 및 설명을 위한 멘토 역할을 할 수는 있지만, \"코딩 방법을 배우는 데 사용할 수 없으며, 좋은 코딩 관행을 대체할 수 없다\"는 점을 명심해야 해요.\n \n미래의 코딩 교육: 적응하고 진화하기  \n프로그래밍 교육도 이제 변화가 필요해요. 단순히 문법이나 알고리즘을 가르치는 것에서 벗어나, AI 도구를 효과적으로 활용하는 방법과 AI와 협업하는 방법을 배워야 해요.\n교육에서 중요한 건 '어떻게 코드를 작성하는가'보다 '어떤 문제를 해결해야 하는가'에 초점을 맞추는 것이에요. 문제를 정확하게 정의하고, 적절한 해결책을 설계하는 능력은 AI가 쉽게 대체하기 어려운 인간의 영역이니까요.\n \n균형 찾기: 코딩 학습과 AI 활용 사이의 딜레마 ⚖️\n솔직히 말해서, 코딩을 배우는 게 이전보다 덜 시급해진 건 사실이에요. AI 코드 생성 소프트웨어는 간단하고, 다양한 프로그래밍 언어에서 사용할 수 있으며, 개발자와 비개발자 모두 액세스할 수 있게 되었으니까요.\n하지만 그렇다고 코딩 학습이 완전히 불필요해진 건 아니에요. AI로 생성된 코드를 제대로 활용하고 검증하려면 기본적인 프로그래밍 개념과 논리적 사고방식은 여전히 필요하거든요.\n제가 생각하는 이상적인 접근법은 이래요:\n기본적인 프로그래밍 개념과 논리적 사고를 배우기\nAI 도구를 활용해 생산성을 높이는 방법 익히기\nAI의 한계를 인식하고 필요할 때 직접 코딩할 수 있는 능력 유지하기\n\n\n마무리: 새로운 시대의 코딩 철학  \n결국, 프로그래밍을 배울 가치가 있느냐는 질문에 단순히 \"예\" 또는 \"아니오\"로 답하기는 어려워요. 개인의 목표, 관심사, 그리고 어떤 분야에서 일하고 싶은지에 따라 달라질 수 있어요.\n \n하지만 분명한 건, AI 시대에도 컴퓨터적 사고방식과 문제 해결 능력은 여전히 중요하다는 점이에요. AI는 도구이지, 우리의 사고를 대체하는 것이 아니니까요.\n \n창의력은 지식을 합성해 독창적인 아이디어를 생산하는 능력을 말합니다. 남들이 생각하지 못한 새로운 것을 만들어내는 능력이 창의력이라면, 인공지능은 이제 그 영역에 거의 다가서고 있는 셈이죠. 하지만 완전히 그 자리를 차지하진 못했어요. 여전히 우리 인간만이 가진 영역이 있고, 그 영역은 코딩 기술을 배움으로써 더욱 강화될 수 있어요.\n \n그러니까, AI 시대에도 프로그래밍을 배우는 건 여전히 가치가 있다고 봐요. 다만 배우는 방식과 목적, 그리고 깊이에 대해선 새롭게 생각해볼 필요가 있겠죠?\nFAQ 섹션\nQ: AI가 코드를 다 만들어준다면, 초보자가 코딩을 배울 필요가 있을까요?\nA: 기본 개념과 논리적 사고는 여전히 중요해요. AI 도구를 효과적으로 사용하고 결과물을 검증하려면 기초 지식이 필요합니다.\nQ: 어떤 프로그래밍 언어를 배우는 게 AI 시대에 가장 유리할까요?\nA: Python이 AI와의 연동성이 좋고 진입장벽이 낮아 추천해요. 하지만 언어보다 문제 해결 사고방식을 기르는 게 더 중요합니다.\nQ: 코딩보다 AI 프롬프트 작성법을 배우는 게 더 효율적일까요?\nA: 둘 다 중요해요. 좋은 프롬프트를 작성하려면 구현하려는 기능에 대한 기술적 이해가 필요합니다.\nQ: AI 코드 도구에서 가장 주의해야 할 점은 무엇인가요?\nA: 결과물을 맹신하지 말고 항상 검증하세요. AI는 때때로 환각 현상을 보이거나 오류가 있는 코드를 생성할 수 있습니다.\nQ: 개발자로 커리어를 준비 중인데, AI 때문에 미래가 불안해요.\nA: AI는 도구일 뿐이니 걱정마세요. 오히려 AI와 효과적으로 협업하는 개발자의 가치는 더 높아질 겁니다.\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [{\n    \"@type\": \"Question\",\n    \"name\": \"AI가 코드를 다 만들어준다면, 초보자가 코딩을 배울 필요가 있을까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"기본 개념과 논리적 사고는 여전히 중요해요. AI 도구를 효과적으로 사용하고 결과물을 검증하려면 기초 지식이 필요합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"어떤 프로그래밍 언어를 배우는 게 AI 시대에 가장 유리할까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"Python이 AI와의 연동성이 좋고 진입장벽이 낮아 추천해요. 하지만 언어보다 문제 해결 사고방식을 기르는 게 더 중요합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"코딩보다 AI 프롬프트 작성법을 배우는 게 더 효율적일까요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"둘 다 중요해요. 좋은 프롬프트를 작성하려면 구현하려는 기능에 대한 기술적 이해가 필요합니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"AI 코드 도구에서 가장 주의해야 할 점은 무엇인가요?\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"결과물을 맹신하지 말고 항상 검증하세요. AI는 때때로 환각 현상을 보이거나 오류가 있는 코드를 생성할 수 있습니다.\"\n    }\n  }, {\n    \"@type\": \"Question\",\n    \"name\": \"개발자로 커리어를 준비 중인데, AI 때문에 미래가 불안해요.\",\n    \"acceptedAnswer\": {\n      \"@type\": \"Answer\",\n      \"text\": \"AI는 도구일 뿐이니 걱정마세요. 오히려 AI와 효과적으로 협업하는 개발자의 가치는 더 높아질 겁니다.\"\n    }\n  }]\n}",
        "guid": "https://muzbox.tistory.com/483583",
        "categories": [
          "AI, 미래기술/AI 챗봇 및 언어 모델",
          "AI 코딩",
          "AI 한계",
          "개발자 생산성",
          "디버깅 능력",
          "문제 해결 사고",
          "미래 프로그래밍 교육",
          "창의적 코딩",
          "컴퓨터적 사고",
          "코드 생성기",
          "프로그래밍 학습"
        ],
        "isoDate": "2025-05-12T00:53:34.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "바이브 코딩 도구  V0, Replit, Cursor 비교 분석",
        "link": "https://muzbox.tistory.com/483582",
        "pubDate": "Fri, 9 May 2025 09:33:09 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483582#entry483582comment",
        "content": "<p data-ke-size=\"size16\">코딩을 몰라도 앱을 만들 수 있는 바이브 코딩의 세계! V0, Replit, Cursor의 장단점과 가격을 비교해 보고, 나에게 딱 맞는 AI 코딩 도구를 찾아보세요. 생산성이 두 배로 올라가는 개발의 미래를 경험해보세요!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"바이브 코딩 3종 비교.jpg\" data-origin-width=\"1280\" data-origin-height=\"853\"><span data-url=\"https://blog.kakaocdn.net/dn/bVuyjd/btsNQo6lN1Z/mmFr6am4TQYSzxriK0xCX0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/bVuyjd/btsNQo6lN1Z/mmFr6am4TQYSzxriK0xCX0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/bVuyjd/btsNQo6lN1Z/mmFr6am4TQYSzxriK0xCX0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbVuyjd%2FbtsNQo6lN1Z%2FmmFr6am4TQYSzxriK0xCX0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바이브 코딩 도구 V0, Replit, Cursor 비교 분석\" loading=\"lazy\" width=\"1280\" height=\"853\" data-filename=\"바이브 코딩 3종 비교.jpg\" data-origin-width=\"1280\" data-origin-height=\"853\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아이디어만 주면 코드를 만들어주는 바이브 코딩 세계, 여러분은 어떤 도구를 사용하고 계신가요? 요즘 개발 세계에서 가장 핫한 주제 중 하나가 바로 이 '바이브 코딩'인데, 저도 최근에 이 매력에 푹 빠져 있어요. 코드 몇 줄 쓰려면 머리가 지끈거렸던 과거와 달리, 이제는 그냥 \"로그인 화면 만들어줘\"라고 말하면 뚝딱 만들어주니... 이게 4차 산업혁명인가 싶더라고요.  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">근데 문제는 V0, Replit, Cursor 등 너무 많은 도구들이 우후죽순 생겨나서 도대체 뭘 써야 할지 모르겠더라고요. 여러분도 그러신가요? \"이거 쓰면 저거 못 쓰는데...\", \"이 기능은 좋은데 저 기능은 없고...\" 이런 고민 많이 하셨을 것 같아요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">그래서 오늘은 제가 직접 이 세 가지 바이브 코딩 도구를 비교해봤습니다. 어떤 도구가 내 스타일과 목적에 딱 맞는지 함께 알아보도록 해요! 개발자든 아니든, 이 글 읽고 나면 무슨 도구 써야 할지 감이 확 올 거예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>V0, Replit, Cursor - 이게 뭐가 다른 거죠?  </b></span></h2>\n<p data-ke-size=\"size16\">일단 세 도구가 어떤 특징을 가지고 있는지 한눈에 비교해볼게요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin-bottom: 20px;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #4a89dc; color: white; text-align: center;\">\n<th style=\"padding: 10px; border: 1px solid #ddd;\">도구</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">주요 기능</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">사용 편의성</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">대상 사용자</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">강점</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">약점</th>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">V0</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">프롬프트로 앱 구현, 코드 없이 결과물 생성</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">비개발자도 쉽게 사용 가능</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">비개발자, 초보 개발자</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">코드 작성 없이 빠른 앱 생성</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">고급 개발이나 세부 수정에 제한적</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">Replit</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">아이디어부터 배포까지, 실시간 피드백 반영</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">즉시 개발 환경, 빠른 배포</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">개발자, 스타트업</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">기획&rarr;배포 30분 내 가능, 사용자 피드백 반영</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">복잡한 기능 추가 시 한계</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">Cursor</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">AI 통합 코드 편집기, 자연어 코드 생성, 오류 감지</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">VS Code 기반 친숙함</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">초중급 개발자, 전문가</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">코드 품질 향상, 생산성 증가</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">대규모 프로젝트 성능 저하, 기능 제한</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">바이브 코딩은 AI를 활용해 자연어로 아이디어나 감성을 전달하면 코드나 앱을 생성해주는 새로운 개발 방식입니다. 근데 각 도구마다 초점을 두는 부분이 달라요. 자세히 살펴볼까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>V0: 코드 몰라도 앱 만들 수 있어요!  </b></span></h2>\n<p data-ke-size=\"size16\">V0는 앱 빌더로, 코드에 대한 깊은 이해 없이 프롬프트와 이미지만으로 완전한 앱을 구현할 수 있는 도구입니다. 예를 들어, PRD(제품 요구사항 문서)와 와이어프레임 이미지를 제공하고 간단한 지시문(\"Please implement this. Use the attached image for a style reference\")만으로 앱을 만들 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">진짜 놀라운 점은 비개발자나 초보자를 대상으로 설계되어 코드 작성 과정을 최소화하고 결과물에 집중할 수 있도록 돕습니다. 사용이 매우 직관적이며, 기술적 배경이 없어도 접근 가능합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1136\" data-origin-height=\"671\"><span data-url=\"https://blog.kakaocdn.net/dn/8sJZm/btsNPgH7m2s/fxqHIQAJJeBypTbIK5DOkK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/8sJZm/btsNPgH7m2s/fxqHIQAJJeBypTbIK5DOkK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/8sJZm/btsNPgH7m2s/fxqHIQAJJeBypTbIK5DOkK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F8sJZm%2FbtsNPgH7m2s%2FfxqHIQAJJeBypTbIK5DOkK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"V0 코드 몰라도 앱 만들 수 있어요!\" loading=\"lazy\" width=\"1136\" height=\"671\" data-origin-width=\"1136\" data-origin-height=\"671\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">제가 처음 V0를 써봤을 때 정말 놀랐어요. \"반응형 뉴스레터 구독 폼 만들어줘. 파란색 테마로!\"라고 입력했더니 진짜 그대로 뚝딱 만들어 주더라고요. 코드 한 줄 안 쓰고요! 디자이너가 와이어프레임 그려놓으면 바로 실제 앱으로 변신시킬 수 있으니, 제작 과정이 엄청 빨라져요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">강점은 빠르고 간단하게 앱을 생성할 수 있다는 점이며, 약점으로는 고급 개발이나 세부적인 코드 수정이 필요한 경우 제한적일 가능성이 있습니다. 뭐랄까... 속도는 엄청 빠른데, 맞춤형 수정이 필요하면 좀 답답할 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">V0가 가장 빛나는 순간은 역시 프로토타입을 빠르게 만들어야 할 때예요. 클라이언트에게 \"이런 느낌이에요\" 하고 보여줄 결과물이 필요하다면, V0는 정말 최고의 선택이 될 거예요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>Replit: 아이디어부터 배포까지 한방에!  </b></span></h2>\n<p data-ke-size=\"size16\">Replit Agent는 아이디어 구상부터 MVP(최소 기능 제품) 개발, 배포, 그리고 실제 사용자 피드백 반영까지의 과정을 빠르게 진행할 수 있는 도구입니다. 예를 들어, 글쓰기 서비스를 30분 만에 만들고 사용자 테스트까지 완료한 사례가 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이게 진짜 대단한 게, 즉시 사용 가능한 개발 환경과 ChatGPT의 신속한 코드 생성 및 문제 해결 기능을 제공하며, 복잡한 서버 설정 없이 배포가 가능합니다. 주로 개발자, 스타트업, 또는 빠른 프로토타이핑을 원하는 사용자에게 적합합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1285\" data-origin-height=\"720\"><span data-url=\"https://blog.kakaocdn.net/dn/9FoYl/btsNQ2obf99/FGdL8DJnrRcYvlqz3qV8Uk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/9FoYl/btsNQ2obf99/FGdL8DJnrRcYvlqz3qV8Uk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/9FoYl/btsNQ2obf99/FGdL8DJnrRcYvlqz3qV8Uk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F9FoYl%2FbtsNQ2obf99%2FFGdL8DJnrRcYvlqz3qV8Uk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Replit 아이디어부터 배포까지 한방에\" loading=\"lazy\" width=\"1285\" height=\"720\" data-origin-width=\"1285\" data-origin-height=\"720\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;제가 Replit로 유튜브 강의 매니저를 만들어봤는데요, V0보다는 좀 더 개발자스러운 환경이지만 그래도 놀랍도록 빠르게 작업할 수 있었어요. 특히 좋았던 건 백엔드와 프론트엔드를 한 환경에서 다 만들 수 있다는 점이었어요. 백엔드 개발자랑 따로 소통할 필요 없이 혼자서 풀스택 개발이 가능했죠.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">강점은 기획부터 배포까지의 속도(30분 내 가능)와 실시간 피드백 반영이 용이하다는 점입니다. 약점으로는 모든 사용자 피드백을 즉시 반영하기 어려운 점과 복잡한 기능 추가 시 한계가 있을 수 있다는 점이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Replit가 가장 빛나는 순간은 스타트업처럼 빠르게 아이디어를 검증하고 싶을 때예요. 생각난 아이디어를 그날 바로 앱으로 만들어서 친구들에게 써보라고 할 수 있으니까요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>Cursor: 코드의 품질과 생산성을 한 단계 올려줘요! ⚡</b></span></h2>\n<p data-ke-size=\"size16\">Cursor는 Visual Studio Code를 기반으로 한 AI 통합 코드 편집기로, 코드 자동 완성, 자연어를 통한 코드 생성, 실시간 오류 감지 및 수정, 자동 리팩토링 등의 기능을 제공합니다. AI 챗봇을 통해 코드 설명이나 질문을 주고받을 수 있으며, 개발 생산성을 크게 높여줍니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">다른 두 도구와 달리 VS Code의 친숙한 인터페이스를 유지하며, 초중급 개발자 및 전문 개발자에게 적합합니다. 비개발자보다는 어느 정도 코딩 지식이 있는 사용자를 대상으로 하며, 코드 품질 향상과 학습 지원(모범 사례 제안 등)에 강점이 있습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"3840\" data-origin-height=\"2129\"><span data-url=\"https://blog.kakaocdn.net/dn/TSBT5/btsNQPWYzkr/iLA8wbUc3d89GzLFaB9UP0/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/TSBT5/btsNQPWYzkr/iLA8wbUc3d89GzLFaB9UP0/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/TSBT5/btsNQPWYzkr/iLA8wbUc3d89GzLFaB9UP0/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FTSBT5%2FbtsNQPWYzkr%2FiLA8wbUc3d89GzLFaB9UP0%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Cursor: 코드의 품질과 생산성을 한 단계 올려줘요!\" loading=\"lazy\" width=\"3840\" height=\"2129\" data-origin-width=\"3840\" data-origin-height=\"2129\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;솔직히 말해서 처음 Cursor 써봤을 때는 \"이게 뭐가 그리 대단해?\" 싶었는데, 1주일만 써보니 코드 생산성이 진짜 두 배는 늘더라고요. 특히 좋았던 건 코드를 작성하다가 \"이 부분 최적화해줘\" 같은 자연어 명령을 내리면 AI가 즉시 코드를 개선해준다는 점이었어요. 버그 찾는 시간도 확 줄었고요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">강점은 코드 생산 속도와 품질 향상, 코드베이스 인덱싱을 통한 맞춤형 추천 기능입니다. 약점으로는 대규모 프로젝트나 여러 프로젝트 인덱싱 시 성능 저하, 일부 기능(예: import 경로 오류)에서 제한이 있다는 점이 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Cursor가 빛나는 순간은 역시 큰 프로젝트를 효율적으로 관리하고 싶을 때예요. 기존 코드베이스를 분석해서 새 코드를 생성하거나 버그를 잡아내는 능력이 정말 대단하거든요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>각 도구별 가격 정책 비교  </b></span></h2>\n<p data-ke-size=\"size16\">아무리 좋은 도구라도 가격이 중요하잖아요. 각 도구별 가격 정책을 살펴볼게요.</p>\n<table style=\"width: 100%; border-collapse: collapse; margin-bottom: 20px;\" data-ke-align=\"alignLeft\">\n<tbody>\n<tr style=\"background-color: #4a89dc; color: white; text-align: center;\">\n<th style=\"padding: 10px; border: 1px solid #ddd;\">도구</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">무료 플랜</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">유료 플랜</th>\n<th style=\"padding: 10px; border: 1px solid #ddd;\">주요 특징</th>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">V0</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">월 200 크레딧</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">프리미엄: 월 $20, 5000 크레딧</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">추가 크레딧 구매 가능</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">Replit</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Starter: 무료, 제한적 기능</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Core: 월 $20-25, Teams: 월 $40/인</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Core는 월 $25 크레딧 포함</td>\n</tr>\n<tr style=\"background-color: #f9f9f9;\">\n<td style=\"padding: 10px; border: 1px solid #ddd; font-weight: bold;\">Cursor</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">2000회 코드 완성, 제한적 요청</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Pro: 월 $20, Business: 월 $40/인</td>\n<td style=\"padding: 10px; border: 1px solid #ddd;\">Pro는 500회 빠른 프리미엄 요청 제공</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">V0는 무료 플랜으로 월 200 크레딧을 제공하며, 기본적인 UI 컴포넌트 생성 및 사용이 가능합니다. 프리미엄 플랜은 월 $20에 5000 크레딧을 제공하며, 더 많은 생성 작업을 지원합니다. 추가 크레딧 구매 옵션도 존재하며, $10에 1250 크레딧, $30에 4000 크레딧, $50에 7750 크레딧을 구매할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Replit의 Starter 플랜은 무료로 제공되며, 기본 기능과 3개의 프로젝트, 제한적인 AI 기능(Replit Agent)을 사용할 수 있습니다. Replit Core 플랜은 연간 결제 시 월 $20, 월별 결제 시 $25로, 무제한 프로젝트와 $25 크레딧(약 100개의 Agent 체크포인트)을 제공합니다. Teams 플랜은 사용자당 월 $40로, $40 크레딧과 팀 협업 기능을 포함합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Cursor의 Hobby 플랜은 무료로 제공되며, 2000회 코드 완성, 50회 느린 프리미엄 모델 요청, 14일 Pro 체험 기간을 포함합니다. Pro 플랜은 월 $20로, 500회 빠른 프리미엄 요청(GPT-4 등), 무제한 느린 요청, 무제한 코드 완성을 제공합니다. Business 플랜은 사용자당 월 $40로, Pro 플랜의 기능 외에 중앙 집중식 결제와 개인정보 보호 모드 강제 적용 등의 기업向け 기능을 추가합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">가격만 보면 셋 다 비슷해 보이지만, 실제 사용해보면 체감이 달라요. V0는 간단한 프로젝트만 할 거라면 무료 크레딧으로도 괜찮지만, 자주 쓰려면 결국 유료 플랜이 필요해요. Replit은 초기에는 무료로 시작하기 좋지만, 배포와 AI 기능을 많이 쓸수록 크레딧이 빨리 소진돼요. Cursor는 무료 플랜의 제한이 커서 진짜 활용하려면 Pro 플랜은 필수인 것 같아요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>어떤 도구가 나에게 맞을까?  </b></span></h2>\n<p data-ke-size=\"size16\">이제 중요한 질문이죠. 내게 맞는 도구는 뭘까요? 간단히 정리해볼게요:</p>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">V0가 딱인 경우:</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>코딩을 잘 모르지만 앱이나 웹사이트를 만들고 싶은 비개발자</li>\n<li>UI/UX 디자이너가 프로토타입을 빠르게 만들어야 할 때</li>\n<li>코드 작성 없이 빠른 결과물이 필요한 경우</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Replit이 딱인 경우:</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>아이디어부터 배포까지 빠르게 진행하고 싶은 스타트업</li>\n<li>풀스택 개발을 혼자서 처리해야 하는 개발자</li>\n<li>실시간 사용자 피드백을 반영하며 제품을 발전시키고 싶을 때</li>\n</ul>\n<h3 data-ke-size=\"size23\"><span style=\"color: #ee2323;\">Cursor가 딱인 경우:</span></h3>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>코드 품질과 생산성을 동시에 높이고 싶은 전문 개발자</li>\n<li>기존 코드베이스를 분석하고 개선해야 하는 경우</li>\n<li>VS Code에 익숙한 개발자가 AI 기능을 추가하고 싶을 때</li>\n</ul>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1027\" data-origin-height=\"686\"><span data-url=\"https://blog.kakaocdn.net/dn/rTkAe/btsNRij2pvu/L37fWrqbEGE0bu3kBbQQ7K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/rTkAe/btsNRij2pvu/L37fWrqbEGE0bu3kBbQQ7K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/rTkAe/btsNRij2pvu/L37fWrqbEGE0bu3kBbQQ7K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FrTkAe%2FbtsNRij2pvu%2FL37fWrqbEGE0bu3kBbQQ7K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"바이브 코딩 도구 비교 V0 vs Replit vs Cursor\" loading=\"lazy\" width=\"1027\" height=\"686\" data-origin-width=\"1027\" data-origin-height=\"686\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;V0는 비개발자나 초보자에게 적합하며 코드 없이 빠른 결과물을 원할 때 유용합니다. Replit Agent는 빠른 프로토타이핑과 사용자 피드백 반영이 필요한 스타트업이나 개발자에게 적합하며, Cursor는 코드 품질과 생산성을 중시하는 초중급 이상의 개발자에게 최적화되어 있습니다. 사용 목적과 기술 수준에 따라 적합한 도구를 선택하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>Replit의 특별한 기능: Autoscale  </b></span></h2>\n<p data-ke-size=\"size16\">Replit의 핵심 기능 중 하나인 Autoscale에 대해 추가로 알아볼까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">Autoscale Deployments는 앱의 네트워크 트래픽과 작업 부하에 따라 클라우드 리소스를 자동으로 확장하거나 축소합니다. 트래픽이 많을 때는 서버를 추가하여 부하를 관리하고, 앱이 유휴 상태일 때는 서버 수를 0까지 줄여 비용을 절감합니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1188\" data-origin-height=\"717\"><span data-url=\"https://blog.kakaocdn.net/dn/bUvl4h/btsNQqb2lcP/AbwIzPePrqECKhJKnFiP3K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bUvl4h/btsNQqb2lcP/AbwIzPePrqECKhJKnFiP3K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bUvl4h/btsNQqb2lcP/AbwIzPePrqECKhJKnFiP3K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbUvl4h%2FbtsNQqb2lcP%2FAbwIzPePrqECKhJKnFiP3K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Replit의 Autoscale\" loading=\"lazy\" width=\"1188\" height=\"717\" data-origin-width=\"1188\" data-origin-height=\"717\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;이게 왜 중요하냐면, Autoscale는 전자상거래 사이트나 API 서비스와 같이 트래픽이 변동하는 웹 애플리케이션에 이상적입니다. 예를 들어, 타이핑 속도 평가 앱과 같은 경우, 사용자가 많을 때 리소스를 늘리고 사용이 적을 때 줄이는 방식으로 효율적으로 운영할 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">개인적으로 이 기능 때문에 Replit을 더 많이 쓰게 됐어요. 제가 만든 웹서비스가 가끔 트래픽이 폭증할 때가 있는데, Autoscale 덕분에 서버 터질 걱정 없이 안정적으로 운영할 수 있었거든요. 게다가 평소엔 비용도 거의 안 들고요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>V0 vs Cursor: 프론트엔드 vs 풀스택  </b></span></h2>\n<p data-ke-size=\"size16\">V0와 Cursor를 좀 더 자세히 비교해볼까요?</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">V0는 주로 프론트엔드 개발에 특화된 도구로, 자연어를 통해 UI 컴포넌트를 빠르게 생성하는 데 중점을 둡니다. 사용자가 원하는 UI를 자연어로 설명하거나 간단한 프롬프트로 요청하면, V0는 Tailwind CSS와 같은 현대적인 스타일링을 적용한 UI 컴포넌트를 생성합니다. 예를 들어, \"로그인 인터페이스를 만들어줘\"라고 입력하면 시각적으로 완성도 높은 UI를 제공합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">반면, Cursor는 코드 자동 완성, 자연어를 통한 코드 생성, 자동 리팩토링, 실시간 오류 감지 및 수정, 코드 설명 기능을 제공합니다. 백엔드, 테스트, 서버 작업 등 다양한 개발 영역을 지원하며, 데이터베이스부터 프론트엔드까지 전체 스택을 다룰 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">가장 큰 차이점은 V0는 UI 중심의 빠른 프로토타이핑이 필요한 비개발자나 디자이너에게 적합하며, Cursor AI는 코드 품질과 전체 스택 개발을 중시하는 개발자에게 더 유용합니다. 사용 목적과 기술 수준에 따라 두 도구 중 적합한 것을 선택하는 것이 중요합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>결론: 나만의 바이브 코딩 도구 찾기  </b></span></h2>\n<p data-ke-size=\"size16\">바이브 코딩 도구 셋 다 훌륭하지만, 각자의 필요와 상황에 맞게 선택하는 게 중요해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">제 경우는 다양한 프로젝트에 세 도구를 모두 사용하고 있어요. 간단한 UI 프로토타입은 V0로 빠르게 만들고, 풀스택 앱 개발은 Replit으로, 그리고 대규모 프로젝트나 코드 최적화가 필요할 때는 Cursor를 활용하고 있죠. 뭐랄까... 도구는 많을수록 좋은 것 같아요!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분은 어떤 바이브 코딩 도구를 써보고 싶으신가요? 아니면 이미 써보셨다면, 어떤 경험이 있으셨나요? 댓글로 여러분의 경험을 공유해주세요. 다른 분들에게도 큰 도움이 될 거예요!</p>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>자주 묻는 질문</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: 비개발자도 바이브 코딩 도구를 쉽게 사용할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 특히 V0는 코딩 지식 없이도 쉽게 사용할 수 있도록 설계되었습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 무료 플랜만으로도 충분히 사용할 수 있을까요?</b></p>\n<p data-ke-size=\"size16\">A: 취미나 학습용으로는 무료 플랜으로 충분하지만, 본격적인 프로젝트나 상업적 용도로는 유료 플랜을 고려하는 것이 좋습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 바이브 코딩 도구가 개발자의 일자리를 대체할까요?</b></p>\n<p data-ke-size=\"size16\">A: 완전히 대체하기보다는 개발자의 생산성을 높이고 반복적인 작업을 줄여주는 보조 도구로 볼 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 이 도구들로 만든 코드의 품질은 어떤가요?</b></p>\n<p data-ke-size=\"size16\">A: 기본적인 기능은 훌륭하지만, 복잡한 로직이나 최적화가 필요한 부분은 개발자의 검토와 수정이 필요할 수 있습니다.</p>\n<p data-ke-size=\"size16\"><b>Q: 한국어로도 프롬프트 입력이 가능한가요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 세 도구 모두 한국어 프롬프트를 지원하지만, 영어로 입력했을 때 더 정확한 결과를 얻을 수 있는 경우가 많습니다.<b></b></p>\n<script type=\"application/ld+json\">\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"비개발자도 바이브 코딩 도구를 쉽게 사용할 수 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  네, 특히 V0는 코딩 지식 없이도 쉽게 사용할 수 있도록 설계되었습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"무료 플랜만으로도 충분히 사용할 수 있을까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  취미나 학습용으로는 무료 플랜으로 충분하지만, 본격적인 프로젝트나 상업적 용도로는 유료 플랜을 고려하는 것이 좋습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"바이브 코딩 도구가 개발자의 일자리를 대체할까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  완전히 대체하기보다는 개발자의 생산성을 높이고 반복적인 작업을 줄여주는 보조 도구로 볼 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"이 도구들로 만든 코드의 품질은 어떤가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  기본적인 기능은 훌륭하지만, 복잡한 로직이나 최적화가 필요한 부분은 개발자의 검토와 수정이 필요할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"한국어로도 프롬프트 입력이 가능한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  네, 세 도구 모두 한국어 프롬프트를 지원하지만, 영어로 입력했을 때 더 정확한 결과를 얻을 수 있는 경우가 많습니다.\"\n            }\n        }\n    ]\n}\n</script>",
        "contentSnippet": "코딩을 몰라도 앱을 만들 수 있는 바이브 코딩의 세계! V0, Replit, Cursor의 장단점과 가격을 비교해 보고, 나에게 딱 맞는 AI 코딩 도구를 찾아보세요. 생산성이 두 배로 올라가는 개발의 미래를 경험해보세요!\n\n\n \n아이디어만 주면 코드를 만들어주는 바이브 코딩 세계, 여러분은 어떤 도구를 사용하고 계신가요? 요즘 개발 세계에서 가장 핫한 주제 중 하나가 바로 이 '바이브 코딩'인데, 저도 최근에 이 매력에 푹 빠져 있어요. 코드 몇 줄 쓰려면 머리가 지끈거렸던 과거와 달리, 이제는 그냥 \"로그인 화면 만들어줘\"라고 말하면 뚝딱 만들어주니... 이게 4차 산업혁명인가 싶더라고요.  \n \n근데 문제는 V0, Replit, Cursor 등 너무 많은 도구들이 우후죽순 생겨나서 도대체 뭘 써야 할지 모르겠더라고요. 여러분도 그러신가요? \"이거 쓰면 저거 못 쓰는데...\", \"이 기능은 좋은데 저 기능은 없고...\" 이런 고민 많이 하셨을 것 같아요.\n \n그래서 오늘은 제가 직접 이 세 가지 바이브 코딩 도구를 비교해봤습니다. 어떤 도구가 내 스타일과 목적에 딱 맞는지 함께 알아보도록 해요! 개발자든 아니든, 이 글 읽고 나면 무슨 도구 써야 할지 감이 확 올 거예요.\n \nV0, Replit, Cursor - 이게 뭐가 다른 거죠?  \n일단 세 도구가 어떤 특징을 가지고 있는지 한눈에 비교해볼게요.\n도구\n주요 기능\n사용 편의성\n대상 사용자\n강점\n약점\n\n\nV0\n프롬프트로 앱 구현, 코드 없이 결과물 생성\n비개발자도 쉽게 사용 가능\n비개발자, 초보 개발자\n코드 작성 없이 빠른 앱 생성\n고급 개발이나 세부 수정에 제한적\n\n\nReplit\n아이디어부터 배포까지, 실시간 피드백 반영\n즉시 개발 환경, 빠른 배포\n개발자, 스타트업\n기획→배포 30분 내 가능, 사용자 피드백 반영\n복잡한 기능 추가 시 한계\n\n\nCursor\nAI 통합 코드 편집기, 자연어 코드 생성, 오류 감지\nVS Code 기반 친숙함\n초중급 개발자, 전문가\n코드 품질 향상, 생산성 증가\n대규모 프로젝트 성능 저하, 기능 제한\n\n\n\n바이브 코딩은 AI를 활용해 자연어로 아이디어나 감성을 전달하면 코드나 앱을 생성해주는 새로운 개발 방식입니다. 근데 각 도구마다 초점을 두는 부분이 달라요. 자세히 살펴볼까요?\n \nV0: 코드 몰라도 앱 만들 수 있어요!  \nV0는 앱 빌더로, 코드에 대한 깊은 이해 없이 프롬프트와 이미지만으로 완전한 앱을 구현할 수 있는 도구입니다. 예를 들어, PRD(제품 요구사항 문서)와 와이어프레임 이미지를 제공하고 간단한 지시문(\"Please implement this. Use the attached image for a style reference\")만으로 앱을 만들 수 있습니다.\n \n진짜 놀라운 점은 비개발자나 초보자를 대상으로 설계되어 코드 작성 과정을 최소화하고 결과물에 집중할 수 있도록 돕습니다. 사용이 매우 직관적이며, 기술적 배경이 없어도 접근 가능합니다.\n\n\n제가 처음 V0를 써봤을 때 정말 놀랐어요. \"반응형 뉴스레터 구독 폼 만들어줘. 파란색 테마로!\"라고 입력했더니 진짜 그대로 뚝딱 만들어 주더라고요. 코드 한 줄 안 쓰고요! 디자이너가 와이어프레임 그려놓으면 바로 실제 앱으로 변신시킬 수 있으니, 제작 과정이 엄청 빨라져요.\n \n강점은 빠르고 간단하게 앱을 생성할 수 있다는 점이며, 약점으로는 고급 개발이나 세부적인 코드 수정이 필요한 경우 제한적일 가능성이 있습니다. 뭐랄까... 속도는 엄청 빠른데, 맞춤형 수정이 필요하면 좀 답답할 수 있어요.\n \nV0가 가장 빛나는 순간은 역시 프로토타입을 빠르게 만들어야 할 때예요. 클라이언트에게 \"이런 느낌이에요\" 하고 보여줄 결과물이 필요하다면, V0는 정말 최고의 선택이 될 거예요.\n \nReplit: 아이디어부터 배포까지 한방에!  \nReplit Agent는 아이디어 구상부터 MVP(최소 기능 제품) 개발, 배포, 그리고 실제 사용자 피드백 반영까지의 과정을 빠르게 진행할 수 있는 도구입니다. 예를 들어, 글쓰기 서비스를 30분 만에 만들고 사용자 테스트까지 완료한 사례가 있습니다.\n \n이게 진짜 대단한 게, 즉시 사용 가능한 개발 환경과 ChatGPT의 신속한 코드 생성 및 문제 해결 기능을 제공하며, 복잡한 서버 설정 없이 배포가 가능합니다. 주로 개발자, 스타트업, 또는 빠른 프로토타이핑을 원하는 사용자에게 적합합니다.\n\n\n \n 제가 Replit로 유튜브 강의 매니저를 만들어봤는데요, V0보다는 좀 더 개발자스러운 환경이지만 그래도 놀랍도록 빠르게 작업할 수 있었어요. 특히 좋았던 건 백엔드와 프론트엔드를 한 환경에서 다 만들 수 있다는 점이었어요. 백엔드 개발자랑 따로 소통할 필요 없이 혼자서 풀스택 개발이 가능했죠.\n \n강점은 기획부터 배포까지의 속도(30분 내 가능)와 실시간 피드백 반영이 용이하다는 점입니다. 약점으로는 모든 사용자 피드백을 즉시 반영하기 어려운 점과 복잡한 기능 추가 시 한계가 있을 수 있다는 점이 있습니다.\n \nReplit가 가장 빛나는 순간은 스타트업처럼 빠르게 아이디어를 검증하고 싶을 때예요. 생각난 아이디어를 그날 바로 앱으로 만들어서 친구들에게 써보라고 할 수 있으니까요!\n \nCursor: 코드의 품질과 생산성을 한 단계 올려줘요! ⚡\nCursor는 Visual Studio Code를 기반으로 한 AI 통합 코드 편집기로, 코드 자동 완성, 자연어를 통한 코드 생성, 실시간 오류 감지 및 수정, 자동 리팩토링 등의 기능을 제공합니다. AI 챗봇을 통해 코드 설명이나 질문을 주고받을 수 있으며, 개발 생산성을 크게 높여줍니다.\n \n다른 두 도구와 달리 VS Code의 친숙한 인터페이스를 유지하며, 초중급 개발자 및 전문 개발자에게 적합합니다. 비개발자보다는 어느 정도 코딩 지식이 있는 사용자를 대상으로 하며, 코드 품질 향상과 학습 지원(모범 사례 제안 등)에 강점이 있습니다.\n\n\n \n 솔직히 말해서 처음 Cursor 써봤을 때는 \"이게 뭐가 그리 대단해?\" 싶었는데, 1주일만 써보니 코드 생산성이 진짜 두 배는 늘더라고요. 특히 좋았던 건 코드를 작성하다가 \"이 부분 최적화해줘\" 같은 자연어 명령을 내리면 AI가 즉시 코드를 개선해준다는 점이었어요. 버그 찾는 시간도 확 줄었고요.\n \n강점은 코드 생산 속도와 품질 향상, 코드베이스 인덱싱을 통한 맞춤형 추천 기능입니다. 약점으로는 대규모 프로젝트나 여러 프로젝트 인덱싱 시 성능 저하, 일부 기능(예: import 경로 오류)에서 제한이 있다는 점이 있습니다.\n \nCursor가 빛나는 순간은 역시 큰 프로젝트를 효율적으로 관리하고 싶을 때예요. 기존 코드베이스를 분석해서 새 코드를 생성하거나 버그를 잡아내는 능력이 정말 대단하거든요.\n \n각 도구별 가격 정책 비교  \n아무리 좋은 도구라도 가격이 중요하잖아요. 각 도구별 가격 정책을 살펴볼게요.\n도구\n무료 플랜\n유료 플랜\n주요 특징\n\n\nV0\n월 200 크레딧\n프리미엄: 월 $20, 5000 크레딧\n추가 크레딧 구매 가능\n\n\nReplit\nStarter: 무료, 제한적 기능\nCore: 월 $20-25, Teams: 월 $40/인\nCore는 월 $25 크레딧 포함\n\n\nCursor\n2000회 코드 완성, 제한적 요청\nPro: 월 $20, Business: 월 $40/인\nPro는 500회 빠른 프리미엄 요청 제공\n\n\n\n \nV0는 무료 플랜으로 월 200 크레딧을 제공하며, 기본적인 UI 컴포넌트 생성 및 사용이 가능합니다. 프리미엄 플랜은 월 $20에 5000 크레딧을 제공하며, 더 많은 생성 작업을 지원합니다. 추가 크레딧 구매 옵션도 존재하며, $10에 1250 크레딧, $30에 4000 크레딧, $50에 7750 크레딧을 구매할 수 있습니다.\n \nReplit의 Starter 플랜은 무료로 제공되며, 기본 기능과 3개의 프로젝트, 제한적인 AI 기능(Replit Agent)을 사용할 수 있습니다. Replit Core 플랜은 연간 결제 시 월 $20, 월별 결제 시 $25로, 무제한 프로젝트와 $25 크레딧(약 100개의 Agent 체크포인트)을 제공합니다. Teams 플랜은 사용자당 월 $40로, $40 크레딧과 팀 협업 기능을 포함합니다.\n \nCursor의 Hobby 플랜은 무료로 제공되며, 2000회 코드 완성, 50회 느린 프리미엄 모델 요청, 14일 Pro 체험 기간을 포함합니다. Pro 플랜은 월 $20로, 500회 빠른 프리미엄 요청(GPT-4 등), 무제한 느린 요청, 무제한 코드 완성을 제공합니다. Business 플랜은 사용자당 월 $40로, Pro 플랜의 기능 외에 중앙 집중식 결제와 개인정보 보호 모드 강제 적용 등의 기업向け 기능을 추가합니다.\n \n가격만 보면 셋 다 비슷해 보이지만, 실제 사용해보면 체감이 달라요. V0는 간단한 프로젝트만 할 거라면 무료 크레딧으로도 괜찮지만, 자주 쓰려면 결국 유료 플랜이 필요해요. Replit은 초기에는 무료로 시작하기 좋지만, 배포와 AI 기능을 많이 쓸수록 크레딧이 빨리 소진돼요. Cursor는 무료 플랜의 제한이 커서 진짜 활용하려면 Pro 플랜은 필수인 것 같아요.\n \n어떤 도구가 나에게 맞을까?  \n이제 중요한 질문이죠. 내게 맞는 도구는 뭘까요? 간단히 정리해볼게요:\nV0가 딱인 경우:\n코딩을 잘 모르지만 앱이나 웹사이트를 만들고 싶은 비개발자\nUI/UX 디자이너가 프로토타입을 빠르게 만들어야 할 때\n코드 작성 없이 빠른 결과물이 필요한 경우\nReplit이 딱인 경우:\n아이디어부터 배포까지 빠르게 진행하고 싶은 스타트업\n풀스택 개발을 혼자서 처리해야 하는 개발자\n실시간 사용자 피드백을 반영하며 제품을 발전시키고 싶을 때\nCursor가 딱인 경우:\n코드 품질과 생산성을 동시에 높이고 싶은 전문 개발자\n기존 코드베이스를 분석하고 개선해야 하는 경우\nVS Code에 익숙한 개발자가 AI 기능을 추가하고 싶을 때\n\n\n V0는 비개발자나 초보자에게 적합하며 코드 없이 빠른 결과물을 원할 때 유용합니다. Replit Agent는 빠른 프로토타이핑과 사용자 피드백 반영이 필요한 스타트업이나 개발자에게 적합하며, Cursor는 코드 품질과 생산성을 중시하는 초중급 이상의 개발자에게 최적화되어 있습니다. 사용 목적과 기술 수준에 따라 적합한 도구를 선택하는 것이 중요합니다.\n \nReplit의 특별한 기능: Autoscale  \nReplit의 핵심 기능 중 하나인 Autoscale에 대해 추가로 알아볼까요?\n \nAutoscale Deployments는 앱의 네트워크 트래픽과 작업 부하에 따라 클라우드 리소스를 자동으로 확장하거나 축소합니다. 트래픽이 많을 때는 서버를 추가하여 부하를 관리하고, 앱이 유휴 상태일 때는 서버 수를 0까지 줄여 비용을 절감합니다.\n\n\n \n 이게 왜 중요하냐면, Autoscale는 전자상거래 사이트나 API 서비스와 같이 트래픽이 변동하는 웹 애플리케이션에 이상적입니다. 예를 들어, 타이핑 속도 평가 앱과 같은 경우, 사용자가 많을 때 리소스를 늘리고 사용이 적을 때 줄이는 방식으로 효율적으로 운영할 수 있습니다.\n \n개인적으로 이 기능 때문에 Replit을 더 많이 쓰게 됐어요. 제가 만든 웹서비스가 가끔 트래픽이 폭증할 때가 있는데, Autoscale 덕분에 서버 터질 걱정 없이 안정적으로 운영할 수 있었거든요. 게다가 평소엔 비용도 거의 안 들고요!\n \nV0 vs Cursor: 프론트엔드 vs 풀스택  \nV0와 Cursor를 좀 더 자세히 비교해볼까요?\n \nV0는 주로 프론트엔드 개발에 특화된 도구로, 자연어를 통해 UI 컴포넌트를 빠르게 생성하는 데 중점을 둡니다. 사용자가 원하는 UI를 자연어로 설명하거나 간단한 프롬프트로 요청하면, V0는 Tailwind CSS와 같은 현대적인 스타일링을 적용한 UI 컴포넌트를 생성합니다. 예를 들어, \"로그인 인터페이스를 만들어줘\"라고 입력하면 시각적으로 완성도 높은 UI를 제공합니다.\n \n반면, Cursor는 코드 자동 완성, 자연어를 통한 코드 생성, 자동 리팩토링, 실시간 오류 감지 및 수정, 코드 설명 기능을 제공합니다. 백엔드, 테스트, 서버 작업 등 다양한 개발 영역을 지원하며, 데이터베이스부터 프론트엔드까지 전체 스택을 다룰 수 있습니다.\n \n가장 큰 차이점은 V0는 UI 중심의 빠른 프로토타이핑이 필요한 비개발자나 디자이너에게 적합하며, Cursor AI는 코드 품질과 전체 스택 개발을 중시하는 개발자에게 더 유용합니다. 사용 목적과 기술 수준에 따라 두 도구 중 적합한 것을 선택하는 것이 중요합니다.\n \n결론: 나만의 바이브 코딩 도구 찾기  \n바이브 코딩 도구 셋 다 훌륭하지만, 각자의 필요와 상황에 맞게 선택하는 게 중요해요.\n \n제 경우는 다양한 프로젝트에 세 도구를 모두 사용하고 있어요. 간단한 UI 프로토타입은 V0로 빠르게 만들고, 풀스택 앱 개발은 Replit으로, 그리고 대규모 프로젝트나 코드 최적화가 필요할 때는 Cursor를 활용하고 있죠. 뭐랄까... 도구는 많을수록 좋은 것 같아요!  \n \n여러분은 어떤 바이브 코딩 도구를 써보고 싶으신가요? 아니면 이미 써보셨다면, 어떤 경험이 있으셨나요? 댓글로 여러분의 경험을 공유해주세요. 다른 분들에게도 큰 도움이 될 거예요!\n자주 묻는 질문\nQ: 비개발자도 바이브 코딩 도구를 쉽게 사용할 수 있나요?\nA: 네, 특히 V0는 코딩 지식 없이도 쉽게 사용할 수 있도록 설계되었습니다.\nQ: 무료 플랜만으로도 충분히 사용할 수 있을까요?\nA: 취미나 학습용으로는 무료 플랜으로 충분하지만, 본격적인 프로젝트나 상업적 용도로는 유료 플랜을 고려하는 것이 좋습니다.\nQ: 바이브 코딩 도구가 개발자의 일자리를 대체할까요?\nA: 완전히 대체하기보다는 개발자의 생산성을 높이고 반복적인 작업을 줄여주는 보조 도구로 볼 수 있습니다.\nQ: 이 도구들로 만든 코드의 품질은 어떤가요?\nA: 기본적인 기능은 훌륭하지만, 복잡한 로직이나 최적화가 필요한 부분은 개발자의 검토와 수정이 필요할 수 있습니다.\nQ: 한국어로도 프롬프트 입력이 가능한가요?\nA: 네, 세 도구 모두 한국어 프롬프트를 지원하지만, 영어로 입력했을 때 더 정확한 결과를 얻을 수 있는 경우가 많습니다.\n\n{\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": [\n        {\n            \"@type\": \"Question\",\n            \"name\": \"비개발자도 바이브 코딩 도구를 쉽게 사용할 수 있나요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  네, 특히 V0는 코딩 지식 없이도 쉽게 사용할 수 있도록 설계되었습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"무료 플랜만으로도 충분히 사용할 수 있을까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  취미나 학습용으로는 무료 플랜으로 충분하지만, 본격적인 프로젝트나 상업적 용도로는 유료 플랜을 고려하는 것이 좋습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"바이브 코딩 도구가 개발자의 일자리를 대체할까요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  완전히 대체하기보다는 개발자의 생산성을 높이고 반복적인 작업을 줄여주는 보조 도구로 볼 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"이 도구들로 만든 코드의 품질은 어떤가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  기본적인 기능은 훌륭하지만, 복잡한 로직이나 최적화가 필요한 부분은 개발자의 검토와 수정이 필요할 수 있습니다.\"\n            }\n        },\n        {\n            \"@type\": \"Question\",\n            \"name\": \"한국어로도 프롬프트 입력이 가능한가요?\",\n            \"acceptedAnswer\": {\n                \"@type\": \"Answer\",\n                \"text\": \"  네, 세 도구 모두 한국어 프롬프트를 지원하지만, 영어로 입력했을 때 더 정확한 결과를 얻을 수 있는 경우가 많습니다.\"\n            }\n        }\n    ]\n}",
        "guid": "https://muzbox.tistory.com/483582",
        "categories": [
          "AI, 미래기술/AI 생산성 및 업무 효율화",
          "ai 코딩 도구",
          "cursor ai",
          "replit",
          "v0.dev",
          "개발 생산성",
          "노코드 개발",
          "바이브 코딩",
          "코드 자동 생성",
          "프로토타이핑",
          "프롬프트 기반 개발"
        ],
        "isoDate": "2025-05-09T00:33:09.000Z"
      },
      {
        "creator": "어떤오후의 프리웨어 이야기",
        "title": "Suno 4.5 프롬프트 작성법, 자연어의 힘으로 AI 음악 퀄리티 높이기 - 무료 GPTS 공개",
        "link": "https://muzbox.tistory.com/483581",
        "pubDate": "Thu, 8 May 2025 10:31:01 +0900",
        "author": "어떤오후의 프리웨어 이야기",
        "comments": "https://muzbox.tistory.com/483581#entry483581comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;음악 생성 AI 'Suno 4.5'를 100% 활용하는 프롬프트 작성법을 알려드릴게요. 구조화된 명령어보다 자연어가 훨씬 효과적이라는 사실, 알고 계셨나요? 음악 생성 결과가 확 달라지는 비밀 팁 대공개!</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1536\" data-origin-height=\"1024\"><span data-url=\"https://blog.kakaocdn.net/dn/blD49M/btsNOqipBeP/tTiszWjwTTRl1zYYK80kp1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/blD49M/btsNOqipBeP/tTiszWjwTTRl1zYYK80kp1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/blD49M/btsNOqipBeP/tTiszWjwTTRl1zYYK80kp1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FblD49M%2FbtsNOqipBeP%2FtTiszWjwTTRl1zYYK80kp1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Suno 4.5 프롬프트 생성 무료 GPTS 공개\" loading=\"lazy\" width=\"1536\" height=\"1024\" data-origin-width=\"1536\" data-origin-height=\"1024\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">솔직히 말해서, 저도 Suno를 처음 접했을 때는 완전 헤맸어요. 뭐랄까, AI 음악 생성이라고 하니까 뭔가 코딩하듯 명령어를 입력해야 할 것 같은 그런 느낌? 처음엔 [STYLE=Rock][BPM=120][MOOD=Happy] 이런 식으로 입력했다가 결과물이 영 만족스럽지 않았던 기억이 나네요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여러분은 혹시 지금도 그렇게 하고 계신가요? 그럼 오늘 이 글이 정말 도움이 될 거예요. 제가 무려 300곡 이상을 Suno로 만들어보면서 깨달은 '진짜' 프롬프트 작성법을 공유해드릴게요!  </p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Suno는 '명령'이 아닌 '대화'로 작동해요</b></span></h2>\n<p data-ke-size=\"size16\">Suno의 가장 큰 오해 중 하나는 바로 이거예요. 사람들이 AI를 '명령을 그대로 수행하는 기계'로 생각한다는 점이죠. 근데 <b>Suno는 명령을 따르는 도구가 아니라 당신의 창의적인 파트너예요.</b></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>예를 들어볼게요:</b></p>\n<p data-ke-size=\"size16\">❌ 이렇게 하지 마세요:</p>\n<pre class=\"markdown\"><code>[GENRE=Trap][BPM=128][INSTRUMENTS=808,Synth,Piano][MOOD=Dark]\n</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">✅ 이렇게 해보세요:</p>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>Dark trap track at 128 BPM, featuring hard-hitting 808s, haunting synth layers, and sparse, minor-key piano motifs. Percussive hi-hats and crisp claps drive the rhythm, while synth textures and deep bass create an intense, atmospheric vibe throughout each section.\n강렬한 808, 잊혀지지 않는 신스 레이어, 드문드문 마이너 키 피아노 모티프가 특징인 128 BPM의 다크 트랩 트랙입니다. 타악기 하이햇과 선명한 박수가 리듬을 주도하고, 신스 텍스처와 깊은 베이스가 각 섹션 전체에 강렬하고 분위기 있는 분위기를 조성합니다.</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">두 번째 방식이 훨씬 더 풍부한 결과물을 만들어내요. 왜냐하면 Suno는 자연어 기반으로 학습된 AI이기 때문이죠! 구조화된 태그는 오히려 AI가 창의적으로 해석할 수 있는 여지를 줄여버려요.</p>\n<blockquote data-ke-style=\"style2\"><span style=\"color: #ee2323;\"><b>단, 여전히 SUNO는 영문 프롬프트를 더 잘 이해합니다.</b></span></blockquote>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  효과적인 Suno 프롬프트 작성 원칙</b></span></h2>\n<p data-ke-size=\"size16\">제가 경험해본 결과, 다음 원칙들이 Suno에서 정말 잘 작동했어요:</p>\n<h3 data-ke-size=\"size23\">1️⃣ 구체적인 감정과 분위기 전달하기</h3>\n<p data-ke-size=\"size16\">\"슬픈 노래\" 대신 \"이별 후 비 오는 날 창밖을 바라보며 느끼는 그 쓸쓸함이 담긴 발라드\"처럼 구체적으로 표현해보세요.</p>\n<h3 data-ke-size=\"size23\">2️⃣ 악기와 사운드 요소 자연스럽게 설명하기</h3>\n<p data-ke-size=\"size16\">\"일렉기타, 베이스, 드럼\" 같이 나열하기보다는 \"강렬한 일렉기타 리프가 주도하고, 묵직한 베이스와 경쾌한 드럼 비트가 뒷받침하는\" 식으로 표현하세요.</p>\n<h3 data-ke-size=\"size23\">3️⃣ 음악의 전개 방식 언급하기</h3>\n<p data-ke-size=\"size16\">\"잔잔하게 시작해서 코러스에서 폭발적으로 터지다가, 브릿지에서는 다시 조용해졌다가 마지막에 화려하게 마무리되는 구성이면 좋겠어요.\"</p>\n<h3 data-ke-size=\"size23\">4️⃣ 레퍼런스 활용하기 (단, 과하지 않게)</h3>\n<p data-ke-size=\"size16\">\"비틀즈의 초기 팝 감성과 콜드플레이의 현대적인 사운드가 섞인 느낌\" 같은 방식으로 표현하면 좋아요. 하지만 너무 많은 레퍼런스를 나열하면 오히려 혼란스러워질 수 있어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Suno 버전별 프롬프트 최적화 방법</b></span></h2>\n<p data-ke-size=\"size16\">Suno가 버전업되면서 프롬프트 작성법도 조금씩 달라졌어요. 제가 직접 테스트해봤는데요:</p>\n<table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\" data-ke-align=\"alignLeft\">\n<thead>\n<tr style=\"background-color: #4caf50; color: white;\">\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">버전</th>\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">최적 프롬프트 길이</th>\n<th style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">특징</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">v4.0</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">50-80자</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">간결하고 핵심적인 특성 위주</td>\n</tr>\n<tr>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">v4.5</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">150-250자</td>\n<td style=\"padding: 10px; text-align: left; border: 1px solid #ddd;\">상세한 음악 요소와 전개 방식 포함</td>\n</tr>\n</tbody>\n</table>\n<p data-ke-size=\"size16\">v4.5에서는 음악적 질감, 악기 상호작용, 구간별 전개 방식 등을 더 자세히 설명할수록 좋은 결과가 나왔어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  실제 사례로 보는 프롬프트 비교</b></span></h2>\n<p data-ke-size=\"size16\">제가 실제로 작성해본 프롬프트 예시를 비교해볼게요:</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><b>❌ 비효율적인 프롬프트:</b></p>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>pop, soul, R&amp;B, and rock, rap, hip hop</code></pre>\n<p data-ke-size=\"size16\"><b>✅ 효과적인 프롬프트:</b></p>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>A dynamic blend of pop, soul, R&amp;B, rock, rap, and hip hop: crisp drums and a punchy bass groove set the foundation. Verses intertwine soulful singing and rap cadences over warm keys and guitar licks. The chorus rises with layered harmonies, gritty guitars, and lush synth textures.\n팝, 소울, R&amp;B, 록, 랩, 힙합이 역동적으로 어우러진 곡으로, 선명한 드럼과 펀치감 넘치는 베이스 그루브가 바탕을 이룹니다. 따뜻한 건반과 기타 릭 위에 소울풀한 노래와 랩 케이던스가 얽혀 있습니다. 코러스는 레이어드 하모니, 거친 기타, 풍성한 신디사이저 텍스처와 함께 상승합니다.</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">두 번째 프롬프트로 만든 곡이 훨씬 더 복잡하고 풍부한 사운드를 가졌어요. 특히 빌드업과 드롭의 구성이 훨씬 자연스러웠고요!</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Suno 4.5의 숨겨진 기능: 가사 포맷팅</b></span></h2>\n<p data-ke-size=\"size16\">많은 분들이 모르시는 건데, Suno 4.5에서는 가사 포맷팅도 중요해요. 특히 곡의 구조를 명확히 표현하면 더 좋은 결과가 나온다는 걸 발견했어요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\"><i>효과적인 가사 포맷팅 예시:</i></p>\n<pre class=\"less\"><code>[start]\n[Intro: 잔잔한 피아노와 대기감 있는 신스패드]\n\n[Verse 1]\n여기에 첫 번째 버스 가사를 넣으세요\n이야기가 시작되는 부분입니다\n\n[Chorus]\n이곳은 후렴구로 곡의 핵심 메시지를 담습니다\n(화음으로 받쳐주는 부분)\n\n...\n\n[Outro: 페이드아웃되는 멜로디와 함께]\n[end]\n</code></pre>\n<p data-ke-size=\"size16\">이런 식으로 각 섹션을 명확히 구분해주면 곡의 구조가 더 짜임새 있게 만들어져요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  이런 실수는 피해주세요</b></span></h2>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>너무 많은 요소 욕심내기</b>: \"일렉기타, 베이스, 피아노, 드럼, 바이올린, 첼로, 플루트, 색소폰...\" 이렇게 너무 많은 악기를 한꺼번에 요구하면 오히려 혼잡한 결과물이 나와요.</li>\n<li><b>상충되는 지시 주기</b>: \"어둡고 우울한 느낌인데 신나고 활기찬 멜로디\" 같이 모순된 지시는 혼란을 줘요.</li>\n<li><b>너무 추상적인 표현 사용</b>: \"혁신적인 사운드\" 같은 표현보다는 \"80년대 신스웨이브와 현대적인 EDM이 결합된 사운드\"처럼 구체적으로 표현하세요.</li>\n<li><b>프롬프트 길이 과장하기</b>: 아무리 v4.5가 긴 프롬프트를 지원한다고 해도, 500자 이상으로 너무 길게 쓰면 오히려 핵심이 흐려질 수 있어요.</li>\n</ol>\n<hr data-ke-style=\"style1\" />\n<h2 data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  Suno 프롬프트 작성, 실전 예시</b></span></h2>\n<p data-ke-size=\"size16\">다양한 장르별로 제가 직접 써본 효과적인 프롬프트 예시를 공유할게요 (단, 영문 프롬프트를 사용하세요):</p>\n<h3 data-ke-size=\"size23\">팝 (Pop)</h3>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>Bright, upbeat acoustic guitar opens the track, layered with crisp folky percussion and buoyant handclaps. The verses feel light and airy, leading into a punchy, melodic hook with tight drums and glistening synth accents. Male and female vocal harmonies drive the energetic, hopeful chorus.\n밝고 경쾌한 어쿠스틱 기타가 트랙의 시작을 알리며, 선명한 포크 퍼커션과 경쾌한 핸드클랩이 레이어드되어 있습니다. 경쾌하고 경쾌한 느낌의 구절은 타이트한 드럼과 반짝이는 신디사이저 악센트가 돋보이는 강렬한 멜로디 훅으로 이어집니다. 남성과 여성의 보컬 하모니가 활기차고 희망찬 코러스를 이끌어갑니다.</code></pre>\n<h3 data-ke-size=\"size23\">힙합 (Hip-Hop)</h3>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>A 90s hip-hop groove with thick vinyl crackle, a jazzy melodic sample looping over punchy, boom-bap drums. Heavy subby bass anchors the mix, while subtle turntable scratches accent transitions. The laid-back, precise flow glides over the urban instrumental.\n90년대 힙합 그루브와 두꺼운 비닐 크래클, 재즈 멜로디 샘플이 강렬한 붐뱁 드럼 위로 반복됩니다. 묵직한 서브 베이스가 믹스를 고정하고, 미묘한 턴테이블 스크래치가 악센트 전환을 강조합니다. 느긋하고 정확한 흐름이 도시적인 악기 위로 미끄러지듯 흘러갑니다.</code></pre>\n<h3 data-ke-size=\"size23\">록 (Rock)</h3>\n<pre class=\"bash\" data-ke-language=\"bash\"><code>A relentless hardcore rock track driven by an aggressive electric guitar loop and rapid, crashing drums. Tight, distorted bass underpins the verses, with sharp percussive breaks highlighting key transitions. Intense male vocals cut through, sustaining raw power from start to finish.\n공격적인 일렉 기타 루프와 빠르게 부딪히는 드럼이 이끄는 거침없는 하드코어 록 트랙입니다. 단단하고 왜곡된 베이스가 구절을 뒷받침하며, 날카로운 퍼커션 브레이크가 주요 전환을 강조합니다. 강렬한 남성 보컬이 처음부터 끝까지 날것 그대로의 파워를 유지합니다.</code></pre>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1184\" data-origin-height=\"824\"><span data-url=\"https://blog.kakaocdn.net/dn/bmADvz/btsNN5MmOf9/d7stBDIPgbwXAgSJdomk4k/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bmADvz/btsNN5MmOf9/d7stBDIPgbwXAgSJdomk4k/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bmADvz/btsNN5MmOf9/d7stBDIPgbwXAgSJdomk4k/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbmADvz%2FbtsNN5MmOf9%2Fd7stBDIPgbwXAgSJdomk4k%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" alt=\"Suno 4.5 프롬프트 작성 가이드\" loading=\"lazy\" width=\"1184\" height=\"824\" data-origin-width=\"1184\" data-origin-height=\"824\"/></span></figure>\n</p>\n<h2 style=\"color: #000000; text-align: start;\" data-ke-size=\"size26\"><span style=\"color: #006dd7;\"><b>  마무리</b></span></h2>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">Suno 4.5를 활용할 때는 구조화된 명령어보다 자연어로 풍부하게 표현하는 것이 핵심이에요. AI는 명령을 따르는 도구가 아니라 당신의 창의적인 파트너라는 점을 기억하세요! 이 글이 여러분의 음악 창작 여정에 도움이 되었으면 좋겠네요.</p>\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">여러분만의 Suno 프롬프트 작성 팁이 있다면 댓글로 공유해주세요! 어떤 프롬프트로 어떤 곡을 만들었는지 들려주시면 정말 흥미로울 것 같아요.  </p>\n<hr contenteditable=\"false\" data-ke-type=\"horizontalRule\" data-ke-style=\"style1\" />\n<p style=\"color: #333333; text-align: start;\" data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #ee2323;\"><b>❓ 자주 묻는 질문</b></span></h2>\n<p data-ke-size=\"size16\"><b>Q: Suno에서 특정 BPM을 정확히 지정할 수 있나요?</b></p>\n<p data-ke-size=\"size16\">A: 정확한 숫자보다는 \"빠른 템포\", \"중간 템포\" 같은 표현이 더 효과적이에요. 필요하다면 \"약 120BPM 정도의 템포\"처럼 표현할 수 있어요.</p>\n<p data-ke-size=\"size16\"><b>Q: 유명 아티스트 스타일을 참조해도 되나요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 가능해요. \"비틀즈 스타일의\" 같은 표현은 효과적이지만, 너무 직접적인 모방보다는 \"비틀즈의 하모니 스타일에서 영감을 받은\"처럼 표현하는 게 좋아요.</p>\n<p data-ke-size=\"size16\"><b>Q: 프롬프트에 가사를 포함시키는 게 좋을까요?</b></p>\n<p data-ke-size=\"size16\">A: 가사의 주제나 분위기를 언급하는 건 도움이 되지만, 전체 가사를 모두 제공하기보다는 핵심 메시지나 테마만 언급하는 게 효과적이에요.</p>\n<p data-ke-size=\"size16\"><b>Q: 악기를 너무 많이 언급하면 안 좋은가요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 3-5개 정도의 핵심 악기만 언급하고, 그 역할과 상호작용을 설명하는 게 더 효과적이에요.</p>\n<p data-ke-size=\"size16\"><b>Q: 자연어로 입력해도 장르나 분위기가 정확히 전달될까요?</b></p>\n<p data-ke-size=\"size16\">A: 네, 오히려 더 정확하게 전달돼요. 장르를 언급하되 그 장르의 특징적인 요소들을 설명해주면 AI가 더 잘 이해해요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"color: #009a87;\"><b>  GPTS 무료배포</b></span></h2>\n<div class=\"revenue_unit_wrap\">\n  <div class=\"revenue_unit_item adsense responsive\">\n    <div class=\"revenue_unit_info\">반응형</div>\n    <script src=\"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\" async=\"async\"></script>\n    <ins class=\"adsbygoogle\" style=\"display: block;\" data-ad-host=\"ca-host-pub-9691043933427338\" data-ad-client=\"ca-pub-8195497734535830\" data-ad-format=\"auto\"></ins>\n    <script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\n  </div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;약간의 지식과 시간만 투자하면 누구나 직접 제작하고 활용할 수 있는 유용한 GPTs가 이미 많이 존재합니다. 그러나 여전히 AI 기술에 대한 낯선 접근을 두려워하거나 IT 초보자, 또는 시간적 여유가 없거나 수익화에 대한 절실함 때문에 올바른 정보를 얻지 못하는 사람들이 많습니다.&nbsp; <br /><br />이러한 심리를 악용해 과도한 가격으로 유료 강의를 판매하며 불필요한 부담을 주는 사례들이 늘어나고 있습니다.&nbsp;&nbsp;<br /><br />&nbsp;이에&nbsp;본&nbsp;블로그에서는&nbsp;모든&nbsp;사람이&nbsp;AI의&nbsp;혜택을&nbsp;공정하고&nbsp;자유롭게&nbsp;누릴&nbsp;수&nbsp;있도록&nbsp;GPTs를&nbsp;무료로&nbsp;배포하며,&nbsp;불합리한&nbsp;강의&nbsp;판매&nbsp;행위를&nbsp;단호히&nbsp;배척하고자&nbsp;합니다.&nbsp;(당연히&nbsp;저도&nbsp;무료&nbsp;그&nbsp;이상의&nbsp;가치가&nbsp;있는&nbsp;챗봇이라면&nbsp;유료화를&nbsp;검토중입니다.)</p>\n<center>\n<figure id=\"og_1746667551525\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"ChatGPT - Suno 4.5 Prompt Generator\" data-og-description=\"Create Suno v4.0 and v4.5 prompts and lyrics for expressive, structured music. Describe the genre, vocals, mood, and song progression to achieve film-like emotional results. You can use artist names or song titles instead of keywords. Enter your desired la\" data-og-host=\"chatgpt.com\" data-og-source-url=\"https://chatgpt.com/g/g-681480f8a4688191b94abd2af3c3390a-suno-4-5-prompt-generator\" data-og-url=\"https://chatgpt.com/g/g-681480f8a4688191b94abd2af3c3390a-suno-4-5-prompt-generator\" data-og-image=\"https://scrap.kakaocdn.net/dn/Xje3d/hyYRsP1Kmp/zj4hkssct551VTNnMmXvF0/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512\"><a href=\"https://chatgpt.com/g/g-681480f8a4688191b94abd2af3c3390a-suno-4-5-prompt-generator\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://chatgpt.com/g/g-681480f8a4688191b94abd2af3c3390a-suno-4-5-prompt-generator\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/Xje3d/hyYRsP1Kmp/zj4hkssct551VTNnMmXvF0/img.jpg?width=512&amp;height=512&amp;face=0_0_512_512');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">ChatGPT - Suno 4.5 Prompt Generator</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">Create Suno v4.0 and v4.5 prompts and lyrics for expressive, structured music. Describe the genre, vocals, mood, and song progression to achieve film-like emotional results. You can use artist names or song titles instead of keywords. Enter your desired la</p>\n<p class=\"og-host\" data-ke-size=\"size16\">chatgpt.com</p>\n</div>\n</a></figure>\n</center>\n<p data-ke-size=\"size16\">\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"Suno에서 특정 BPM을 정확히 지정할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"정확한 숫자보다는 '빠른 템포', '중간 템포' 같은 표현이 더 효과적이에요. 필요하다면 '약 120BPM 정도의 템포'처럼 표현할 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유명 아티스트 스타일을 참조해도 되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 가능해요. '비틀즈 스타일의' 같은 표현은 효과적이지만, 너무 직접적인 모방보다는 '비틀즈의 하모니 스타일에서 영감을 받은'처럼 표현하는 게 좋아요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"프롬프트에 가사를 포함시키는 게 좋을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"가사의 주제나 분위기를 언급하는 건 도움이 되지만, 전체 가사를 모두 제공하기보다는 핵심 메시지나 테마만 언급하는 게 효과적이에요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"악기를 너무 많이 언급하면 안 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 3-5개 정도의 핵심 악기만 언급하고, 그 역할과 상호작용을 설명하는 게 더 효과적이에요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"자연어로 입력해도 장르나 분위기가 정확히 전달될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 오히려 더 정확하게 전달돼요. 장르를 언급하되 그 장르의 특징적인 요소들을 설명해주면 AI가 더 잘 이해해요.\"\n      }\n    }\n  ]\n}\n</script>\n</p>",
        "contentSnippet": "음악 생성 AI 'Suno 4.5'를 100% 활용하는 프롬프트 작성법을 알려드릴게요. 구조화된 명령어보다 자연어가 훨씬 효과적이라는 사실, 알고 계셨나요? 음악 생성 결과가 확 달라지는 비밀 팁 대공개!\n\n\n \n솔직히 말해서, 저도 Suno를 처음 접했을 때는 완전 헤맸어요. 뭐랄까, AI 음악 생성이라고 하니까 뭔가 코딩하듯 명령어를 입력해야 할 것 같은 그런 느낌? 처음엔 [STYLE=Rock][BPM=120][MOOD=Happy] 이런 식으로 입력했다가 결과물이 영 만족스럽지 않았던 기억이 나네요.\n \n여러분은 혹시 지금도 그렇게 하고 계신가요? 그럼 오늘 이 글이 정말 도움이 될 거예요. 제가 무려 300곡 이상을 Suno로 만들어보면서 깨달은 '진짜' 프롬프트 작성법을 공유해드릴게요!  \n \n  Suno는 '명령'이 아닌 '대화'로 작동해요\nSuno의 가장 큰 오해 중 하나는 바로 이거예요. 사람들이 AI를 '명령을 그대로 수행하는 기계'로 생각한다는 점이죠. 근데 Suno는 명령을 따르는 도구가 아니라 당신의 창의적인 파트너예요.\n \n예를 들어볼게요:\n❌ 이렇게 하지 마세요:\n[GENRE=Trap][BPM=128][INSTRUMENTS=808,Synth,Piano][MOOD=Dark]\n\n \n✅ 이렇게 해보세요:\nDark trap track at 128 BPM, featuring hard-hitting 808s, haunting synth layers, and sparse, minor-key piano motifs. Percussive hi-hats and crisp claps drive the rhythm, while synth textures and deep bass create an intense, atmospheric vibe throughout each section.\n강렬한 808, 잊혀지지 않는 신스 레이어, 드문드문 마이너 키 피아노 모티프가 특징인 128 BPM의 다크 트랩 트랙입니다. 타악기 하이햇과 선명한 박수가 리듬을 주도하고, 신스 텍스처와 깊은 베이스가 각 섹션 전체에 강렬하고 분위기 있는 분위기를 조성합니다.\n \n두 번째 방식이 훨씬 더 풍부한 결과물을 만들어내요. 왜냐하면 Suno는 자연어 기반으로 학습된 AI이기 때문이죠! 구조화된 태그는 오히려 AI가 창의적으로 해석할 수 있는 여지를 줄여버려요.\n단, 여전히 SUNO는 영문 프롬프트를 더 잘 이해합니다.\n \n  효과적인 Suno 프롬프트 작성 원칙\n제가 경험해본 결과, 다음 원칙들이 Suno에서 정말 잘 작동했어요:\n1️⃣ 구체적인 감정과 분위기 전달하기\n\"슬픈 노래\" 대신 \"이별 후 비 오는 날 창밖을 바라보며 느끼는 그 쓸쓸함이 담긴 발라드\"처럼 구체적으로 표현해보세요.\n2️⃣ 악기와 사운드 요소 자연스럽게 설명하기\n\"일렉기타, 베이스, 드럼\" 같이 나열하기보다는 \"강렬한 일렉기타 리프가 주도하고, 묵직한 베이스와 경쾌한 드럼 비트가 뒷받침하는\" 식으로 표현하세요.\n3️⃣ 음악의 전개 방식 언급하기\n\"잔잔하게 시작해서 코러스에서 폭발적으로 터지다가, 브릿지에서는 다시 조용해졌다가 마지막에 화려하게 마무리되는 구성이면 좋겠어요.\"\n4️⃣ 레퍼런스 활용하기 (단, 과하지 않게)\n\"비틀즈의 초기 팝 감성과 콜드플레이의 현대적인 사운드가 섞인 느낌\" 같은 방식으로 표현하면 좋아요. 하지만 너무 많은 레퍼런스를 나열하면 오히려 혼란스러워질 수 있어요.\n \n  Suno 버전별 프롬프트 최적화 방법\nSuno가 버전업되면서 프롬프트 작성법도 조금씩 달라졌어요. 제가 직접 테스트해봤는데요:\n버전\n최적 프롬프트 길이\n특징\n\n\n\n\nv4.0\n50-80자\n간결하고 핵심적인 특성 위주\n\n\nv4.5\n150-250자\n상세한 음악 요소와 전개 방식 포함\n\n\n\nv4.5에서는 음악적 질감, 악기 상호작용, 구간별 전개 방식 등을 더 자세히 설명할수록 좋은 결과가 나왔어요.\n \n  실제 사례로 보는 프롬프트 비교\n제가 실제로 작성해본 프롬프트 예시를 비교해볼게요:\n \n❌ 비효율적인 프롬프트:\npop, soul, R&B, and rock, rap, hip hop\n✅ 효과적인 프롬프트:\nA dynamic blend of pop, soul, R&B, rock, rap, and hip hop: crisp drums and a punchy bass groove set the foundation. Verses intertwine soulful singing and rap cadences over warm keys and guitar licks. The chorus rises with layered harmonies, gritty guitars, and lush synth textures.\n팝, 소울, R&B, 록, 랩, 힙합이 역동적으로 어우러진 곡으로, 선명한 드럼과 펀치감 넘치는 베이스 그루브가 바탕을 이룹니다. 따뜻한 건반과 기타 릭 위에 소울풀한 노래와 랩 케이던스가 얽혀 있습니다. 코러스는 레이어드 하모니, 거친 기타, 풍성한 신디사이저 텍스처와 함께 상승합니다.\n \n두 번째 프롬프트로 만든 곡이 훨씬 더 복잡하고 풍부한 사운드를 가졌어요. 특히 빌드업과 드롭의 구성이 훨씬 자연스러웠고요!\n \n  Suno 4.5의 숨겨진 기능: 가사 포맷팅\n많은 분들이 모르시는 건데, Suno 4.5에서는 가사 포맷팅도 중요해요. 특히 곡의 구조를 명확히 표현하면 더 좋은 결과가 나온다는 걸 발견했어요.\n \n효과적인 가사 포맷팅 예시:\n[start]\n[Intro: 잔잔한 피아노와 대기감 있는 신스패드]\n\n[Verse 1]\n여기에 첫 번째 버스 가사를 넣으세요\n이야기가 시작되는 부분입니다\n\n[Chorus]\n이곳은 후렴구로 곡의 핵심 메시지를 담습니다\n(화음으로 받쳐주는 부분)\n\n...\n\n[Outro: 페이드아웃되는 멜로디와 함께]\n[end]\n\n이런 식으로 각 섹션을 명확히 구분해주면 곡의 구조가 더 짜임새 있게 만들어져요.\n \n  이런 실수는 피해주세요\n너무 많은 요소 욕심내기: \"일렉기타, 베이스, 피아노, 드럼, 바이올린, 첼로, 플루트, 색소폰...\" 이렇게 너무 많은 악기를 한꺼번에 요구하면 오히려 혼잡한 결과물이 나와요.\n상충되는 지시 주기: \"어둡고 우울한 느낌인데 신나고 활기찬 멜로디\" 같이 모순된 지시는 혼란을 줘요.\n너무 추상적인 표현 사용: \"혁신적인 사운드\" 같은 표현보다는 \"80년대 신스웨이브와 현대적인 EDM이 결합된 사운드\"처럼 구체적으로 표현하세요.\n프롬프트 길이 과장하기: 아무리 v4.5가 긴 프롬프트를 지원한다고 해도, 500자 이상으로 너무 길게 쓰면 오히려 핵심이 흐려질 수 있어요.\n  Suno 프롬프트 작성, 실전 예시\n다양한 장르별로 제가 직접 써본 효과적인 프롬프트 예시를 공유할게요 (단, 영문 프롬프트를 사용하세요):\n팝 (Pop)\nBright, upbeat acoustic guitar opens the track, layered with crisp folky percussion and buoyant handclaps. The verses feel light and airy, leading into a punchy, melodic hook with tight drums and glistening synth accents. Male and female vocal harmonies drive the energetic, hopeful chorus.\n밝고 경쾌한 어쿠스틱 기타가 트랙의 시작을 알리며, 선명한 포크 퍼커션과 경쾌한 핸드클랩이 레이어드되어 있습니다. 경쾌하고 경쾌한 느낌의 구절은 타이트한 드럼과 반짝이는 신디사이저 악센트가 돋보이는 강렬한 멜로디 훅으로 이어집니다. 남성과 여성의 보컬 하모니가 활기차고 희망찬 코러스를 이끌어갑니다.\n힙합 (Hip-Hop)\nA 90s hip-hop groove with thick vinyl crackle, a jazzy melodic sample looping over punchy, boom-bap drums. Heavy subby bass anchors the mix, while subtle turntable scratches accent transitions. The laid-back, precise flow glides over the urban instrumental.\n90년대 힙합 그루브와 두꺼운 비닐 크래클, 재즈 멜로디 샘플이 강렬한 붐뱁 드럼 위로 반복됩니다. 묵직한 서브 베이스가 믹스를 고정하고, 미묘한 턴테이블 스크래치가 악센트 전환을 강조합니다. 느긋하고 정확한 흐름이 도시적인 악기 위로 미끄러지듯 흘러갑니다.\n록 (Rock)\nA relentless hardcore rock track driven by an aggressive electric guitar loop and rapid, crashing drums. Tight, distorted bass underpins the verses, with sharp percussive breaks highlighting key transitions. Intense male vocals cut through, sustaining raw power from start to finish.\n공격적인 일렉 기타 루프와 빠르게 부딪히는 드럼이 이끄는 거침없는 하드코어 록 트랙입니다. 단단하고 왜곡된 베이스가 구절을 뒷받침하며, 날카로운 퍼커션 브레이크가 주요 전환을 강조합니다. 강렬한 남성 보컬이 처음부터 끝까지 날것 그대로의 파워를 유지합니다.\n \n\n\n  마무리\nSuno 4.5를 활용할 때는 구조화된 명령어보다 자연어로 풍부하게 표현하는 것이 핵심이에요. AI는 명령을 따르는 도구가 아니라 당신의 창의적인 파트너라는 점을 기억하세요! 이 글이 여러분의 음악 창작 여정에 도움이 되었으면 좋겠네요.\n여러분만의 Suno 프롬프트 작성 팁이 있다면 댓글로 공유해주세요! 어떤 프롬프트로 어떤 곡을 만들었는지 들려주시면 정말 흥미로울 것 같아요.  \n \n❓ 자주 묻는 질문\nQ: Suno에서 특정 BPM을 정확히 지정할 수 있나요?\nA: 정확한 숫자보다는 \"빠른 템포\", \"중간 템포\" 같은 표현이 더 효과적이에요. 필요하다면 \"약 120BPM 정도의 템포\"처럼 표현할 수 있어요.\nQ: 유명 아티스트 스타일을 참조해도 되나요?\nA: 네, 가능해요. \"비틀즈 스타일의\" 같은 표현은 효과적이지만, 너무 직접적인 모방보다는 \"비틀즈의 하모니 스타일에서 영감을 받은\"처럼 표현하는 게 좋아요.\nQ: 프롬프트에 가사를 포함시키는 게 좋을까요?\nA: 가사의 주제나 분위기를 언급하는 건 도움이 되지만, 전체 가사를 모두 제공하기보다는 핵심 메시지나 테마만 언급하는 게 효과적이에요.\nQ: 악기를 너무 많이 언급하면 안 좋은가요?\nA: 네, 3-5개 정도의 핵심 악기만 언급하고, 그 역할과 상호작용을 설명하는 게 더 효과적이에요.\nQ: 자연어로 입력해도 장르나 분위기가 정확히 전달될까요?\nA: 네, 오히려 더 정확하게 전달돼요. 장르를 언급하되 그 장르의 특징적인 요소들을 설명해주면 AI가 더 잘 이해해요.\n \n  GPTS 무료배포\n반응형\n\n    \n    (adsbygoogle = window.adsbygoogle || []).push({});\n  \n 약간의 지식과 시간만 투자하면 누구나 직접 제작하고 활용할 수 있는 유용한 GPTs가 이미 많이 존재합니다. 그러나 여전히 AI 기술에 대한 낯선 접근을 두려워하거나 IT 초보자, 또는 시간적 여유가 없거나 수익화에 대한 절실함 때문에 올바른 정보를 얻지 못하는 사람들이 많습니다.  \n이러한 심리를 악용해 과도한 가격으로 유료 강의를 판매하며 불필요한 부담을 주는 사례들이 늘어나고 있습니다.  \n 이에 본 블로그에서는 모든 사람이 AI의 혜택을 공정하고 자유롭게 누릴 수 있도록 GPTs를 무료로 배포하며, 불합리한 강의 판매 행위를 단호히 배척하고자 합니다. (당연히 저도 무료 그 이상의 가치가 있는 챗봇이라면 유료화를 검토중입니다.)\n\n \nChatGPT - Suno 4.5 Prompt Generator\nCreate Suno v4.0 and v4.5 prompts and lyrics for expressive, structured music. Describe the genre, vocals, mood, and song progression to achieve film-like emotional results. You can use artist names or song titles instead of keywords. Enter your desired la\nchatgpt.com\n\n\n\n\n{\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"FAQPage\",\n  \"mainEntity\": [\n    {\n      \"@type\": \"Question\",\n      \"name\": \"Suno에서 특정 BPM을 정확히 지정할 수 있나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"정확한 숫자보다는 '빠른 템포', '중간 템포' 같은 표현이 더 효과적이에요. 필요하다면 '약 120BPM 정도의 템포'처럼 표현할 수 있어요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"유명 아티스트 스타일을 참조해도 되나요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 가능해요. '비틀즈 스타일의' 같은 표현은 효과적이지만, 너무 직접적인 모방보다는 '비틀즈의 하모니 스타일에서 영감을 받은'처럼 표현하는 게 좋아요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"프롬프트에 가사를 포함시키는 게 좋을까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"가사의 주제나 분위기를 언급하는 건 도움이 되지만, 전체 가사를 모두 제공하기보다는 핵심 메시지나 테마만 언급하는 게 효과적이에요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"악기를 너무 많이 언급하면 안 좋은가요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 3-5개 정도의 핵심 악기만 언급하고, 그 역할과 상호작용을 설명하는 게 더 효과적이에요.\"\n      }\n    },\n    {\n      \"@type\": \"Question\",\n      \"name\": \"자연어로 입력해도 장르나 분위기가 정확히 전달될까요?\",\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": \"네, 오히려 더 정확하게 전달돼요. 장르를 언급하되 그 장르의 특징적인 요소들을 설명해주면 AI가 더 잘 이해해요.\"\n      }\n    }\n  ]\n}",
        "guid": "https://muzbox.tistory.com/483581",
        "categories": [
          "AI, 미래기술/무료 GPTS 공개",
          "ai 음악 생성",
          "AI 음악 제작",
          "boost 기능",
          "suno 4.5",
          "suno 팁",
          "가사 포맷팅",
          "무료gpts",
          "음악 ai",
          "프롬프트 작성법",
          "효과적인 프롬프트"
        ],
        "isoDate": "2025-05-08T01:31:01.000Z"
      }
    ]
  },
  {
    "name": "동우리의 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "하테나",
    "category": "개인",
    "posts": []
  },
  {
    "name": "늑돌이네 라지온",
    "category": "개인",
    "posts": []
  },
  {
    "name": "루리웹 - 루리웹 리뷰 게시판",
    "category": "게임",
    "posts": [
      {
        "creator": "｜RULIWEB｜",
        "title": "악역영애 4컷 만화 - 2화, 면접 시작인데스와",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2305",
        "pubDate": "Wed, 14 May 2025 16:48:41 +0900",
        "author": "｜RULIWEB｜",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/05/14/196cdc277a051ad6b.png\">",
        "contentSnippet": "",
        "categories": [
          "특집"
        ],
        "isoDate": "2025-05-14T07:48:41.000Z"
      },
      {
        "creator": "「RULIWEB」",
        "title": "[MULTI] 브레이크 달린 8톤 트럭, 둠: 더 다크 에이지스",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2304",
        "pubDate": "Wed, 14 May 2025 13:30:31 +0900",
        "author": "「RULIWEB」",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/05/14/196cd0d96224cacdc.png\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-05-14T04:30:31.000Z"
      },
      {
        "creator": "(RULIWEB`Д')/",
        "title": "[PC] Welcome Back Commander, 템페스트 라이징",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2303",
        "pubDate": "Fri, 09 May 2025 15:15:37 +0900",
        "author": "(RULIWEB`Д')/",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i1.ruliweb.com/thumb/25/05/09/196b3af38134c329e.jpg\">",
        "contentSnippet": "",
        "categories": [
          "리뷰"
        ],
        "isoDate": "2025-05-09T06:15:37.000Z"
      },
      {
        "creator": "［RULIWEB］",
        "title": "[PS5] 능동적이고 액션 중심적 변화 그리고 메시지, '데스 스트랜딩 2'",
        "link": "https://bbs.ruliweb.com/news/board/11/read/2302",
        "pubDate": "Thu, 08 May 2025 16:01:23 +0900",
        "author": "［RULIWEB］",
        "content": "<img width=\"236\" height=\"177\" src=\"https://i2.ruliweb.com/thumb/25/05/08/196aeadd23b5104c1.jpg\">",
        "contentSnippet": "",
        "categories": [
          "프리뷰"
        ],
        "isoDate": "2025-05-08T07:01:23.000Z"
      }
    ]
  },
  {
    "name": "Reasontobe",
    "category": "개인",
    "posts": []
  },
  {
    "name": "자유로운 생활",
    "category": "개인",
    "posts": []
  },
  {
    "name": "에스티마의 인터넷이야기 EstimaStory.com",
    "category": "개인",
    "posts": []
  },
  {
    "name": "나긋한 개발 - 데비안 리눅스와 프로그램 언어",
    "category": "개인",
    "posts": []
  },
  {
    "name": "일상을 여행처럼...",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Just hack'em",
    "category": "개인",
    "posts": []
  },
  {
    "name": "C++ Truths",
    "category": "개인",
    "posts": []
  },
  {
    "name": "jacking75",
    "category": "개인",
    "posts": [
      {
        "title": "C++ 헤더 파일 및 모듈을 위한 Visual Studio 기능",
        "link": "https://jacking75.github.io/VS_20250510/",
        "pubDate": "Sat, 10 May 2025 00:00:00 +0900",
        "content": "<iframe width=\"1024\" height=\"1024\" src=\"https://docs.google.com/document/d/e/2PACX-1vTLy2yk8PhBrjSD424sMTn2UfS3b2qyniMWXPsSY4wPMKw04SUi5nErqI4DXZ2I-FbXtgxSjjaG5jUw/pub?embedded=true\"></iframe>\n\n",
        "contentSnippet": "",
        "guid": "https://jacking75.github.io/VS_20250510/",
        "isoDate": "2025-05-09T15:00:00.000Z"
      }
    ]
  },
  {
    "name": "Joel on Software",
    "category": "개인",
    "posts": []
  },
  {
    "name": "벤자민로그",
    "category": "개인",
    "posts": [
      {
        "title": "개발자의 장애 공유 문화",
        "link": "https://jeho.page/essay/2025/05/15/failure-sharing.html",
        "pubDate": "2025-05-14T17:30:00.000Z",
        "author": "김재호",
        "content": "<p>카카오에 처음 들어가서 놀랐던 또 한 가지는 장애를 공유하는 문화였습니다.</p>\n\n<p>작고 큰 장애들이 자주 발생했습니다.<br />\n장애가 발생하면 즉시 전파하고, 원인을 파악하고 후속 대응까지 실시간으로 공유했습니다.<br />\n누구에게? 회사의 모든 사람들에게.<br />\nCS 부서나 운영팀처럼 상황을 빠르게 파악해야 하는 팀에게는 멘션까지 하면서.</p>\n\n<blockquote>\n  <p>와, 이 사람들 특이한 사람들이네. 이런 건 살다 살다 처음 보는군.<br />\n다들 실수를 숨기고 싶어 하는데, 이 사람들은 실수한 걸 마치 자랑하듯이 게시판에 올리잖아? 그것도 전사 게시판에. (미친 사람들인가?)</p>\n</blockquote>\n\n<p>장애 공유 글에는 항상 <em>좋아요</em>가 많이 달렸습니다.<br />\n쪽팔림 같은 건 저기 던져버리고 <strong>자신의 얼간이 짓을 솔직하게 쓰면 쓸수록</strong> 좋아요가 더 많이 달렸습니다.</p>\n\n<p>원인과 후속 조치, 여전히 가시지 않는 의문점들에 대해 댓글로 논의하기도 했습니다만…<br />\n장애를 낸 사람을 탓하는 경우는 한 번도 보지 못했습니다.<br />\n이건 불문율이었습니다. 이 불문율을 깨트리면 누구도 더 이상 솔직하게 공유하지 않을 테니까.</p>\n\n<p>자신이 발생시킨 장애를 <strong>전 직원들에게</strong> 공유한다는 것이 절대 쉬운 일이 아닙니다.<br />\n직접 해봐야 그 당혹스러움과 부끄러움을 알 수 있습니다.<br />\n처음 겪으면 그냥 도망쳐버리고 싶다는 생각이 들 정도로 아찔합니다만… <br />\n몇 번 하다 보면 이 짓도 편안해집니다.</p>\n<blockquote>\n  <p>아 오늘도 장애 공유 써야 되네, 젠장. 뭐 일하다 보면 장애 낼 수도 있는 거지.<br />\n열심히 코딩하고 배포하다 보니 장애를 많이 내는 것일 뿐, 내가 진짜 얼간이여서 그런 게 아니라고.<br />\n(그래도 다음엔 실수하지 말아야겠다)</p>\n</blockquote>\n\n<p>카카오에서보다 더 놀랐던 기억도 납니다.<br />\n2017년의 <a href=\"https://www.youtube.com/watch?v=tLdRBsuvVKc\">GitLab 장애</a>.<br />\n<code class=\"language-plaintext highlighter-rouge\">rm -rf</code>로 프로덕션 데이터베이스 전체를 날려먹었던가?<br />\n엄청난 장애를 어린 엔지니어 혼자 수습했습니다. 그것도 유튜브에 라이브 스트리밍을 하면서. (사람들이 댓글로 이걸 고쳐봐라 저걸 확인해 봐라… ㅋㅋㅋ)</p>\n\n<p>와, 진짜 미친 사람들이 여기 있었구나. 저걸 회사의 다른 동료들이 아무도 뭐라 하지 않는 건가? 아니, 어쩌면 의도적으로 저렇게 공유하기로 한 건가?<br />\n문제를 공유하고 소통하는 것에 이 정도로 열려 있다면 GitLab의 다른 문화들도 충분히 멋질 거야. 라고 생각했던 것 같습니다.</p>\n\n<p><br />\n<em>함께 읽으면 좋은 글:</em></p>\n<ul>\n  <li><a href=\"/essay/2025/05/08/service-tension.html\">서비스 텐션</a></li>\n  <li><a href=\"/essay/2024/03/07/people-saving-cost.html\">서버 비용을 아끼던 사람들 (feat. 카카오 옛날 이야기)</a></li>\n  <li><a href=\"/essay/2022/10/16/kakaotalk-server-development.html\">카톡 서버 개발의 추억</a></li>\n</ul>",
        "contentSnippet": "카카오에 처음 들어가서 놀랐던 또 한 가지는 장애를 공유하는 문화였습니다.\n작고 큰 장애들이 자주 발생했습니다.\n와, 이 사람들 특이한 사람들이네. 이런 건 살다 살다 처음 보는군.\n장애 공유 글에는 항상 좋아요가 많이 달렸습니다.\n자신의 얼간이 짓을 솔직하게 쓰면 쓸수록 좋아요가 더 많이 달렸습니다.\n원인과 후속 조치, 여전히 가시지 않는 의문점들에 대해 댓글로 논의하기도 했습니다만…\n자신이 발생시킨 장애를 전 직원들에게 공유한다는 것이 절대 쉬운 일이 아닙니다.\n아 오늘도 장애 공유 써야 되네, 젠장. 뭐 일하다 보면 장애 낼 수도 있는 거지.\n카카오에서보다 더 놀랐던 기억도 납니다.\nGitLab 장애.\nrm -rf로 프로덕션 데이터베이스 전체를 날려먹었던가?\n와, 진짜 미친 사람들이 여기 있었구나. 저걸 회사의 다른 동료들이 아무도 뭐라 하지 않는 건가? 아니, 어쩌면 의도적으로 저렇게 공유하기로 한 건가?\n\n함께 읽으면 좋은 글:\n서비스 텐션\n서버 비용을 아끼던 사람들 (feat. 카카오 옛날 이야기)\n카톡 서버 개발의 추억",
        "summary": "카카오에 처음 들어가서 놀랐던 또 한 가지는 장애를 공유하는 문화였습니다.",
        "id": "https://jeho.page/essay/2025/05/15/failure-sharing",
        "isoDate": "2025-05-14T17:30:00.000Z"
      }
    ]
  },
  {
    "name": "악보쓰는 프로그래머",
    "category": "개인",
    "posts": []
  },
  {
    "name": "쭌안아빠",
    "category": "개인",
    "posts": []
  },
  {
    "name": "A Gangster World",
    "category": "개인",
    "posts": []
  },
  {
    "name": "요우의 내맘대로 블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자스럽다",
    "category": "큐레이션",
    "posts": [
      {
        "creator": "noreply@blogger.com (Unknown)",
        "title": "AI 부정행위로 아마존 합격한 21세 한인, 75억 투자 받고 데이트까지 속여 논란",
        "link": "https://blog.gaerae.com/2025/05/columbia-student-suspended-over-interview-cheating-tool.html",
        "pubDate": "Thu, 08 May 2025 06:08:00 +0000",
        "author": "noreply@blogger.com (Unknown)",
        "content": "<div class=\"separator\" style=\"clear: both;\"><img alt=\"\" border=\"0\" data-original-height=\"720\" data-original-width=\"1280\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgjPZSvhKpJGG1-y-SmOmiF82d5m9StrVrH-nIS-u637LL8X7LXV5rqJtlILAnc8SvhfJc86QkRTQcWv4QvIPK6gcKGUjLb66GKgrcZIFhPtb_DxRqxiiOy_62fGcRVCoy7w9GmfYy45QwvvILgcljlgEC1zmv_7HPd3jnLbUAz0taKMil6ECw-_y8B6AA/s1600/AI-%E1%84%87%E1%85%AE%E1%84%8C%E1%85%A5%E1%86%BC%E1%84%92%E1%85%A2%E1%86%BC%E1%84%8B%E1%85%B1%E1%84%85%E1%85%A9-%E1%84%8B%E1%85%A1%E1%84%86%E1%85%A1%E1%84%8C%E1%85%A9%E1%86%AB-%E1%84%92%E1%85%A1%E1%86%B8%E1%84%80%E1%85%A7%E1%86%A8%E1%84%92%E1%85%A1%E1%86%AB-21%E1%84%89%E1%85%A6-%E1%84%92%E1%85%A1%E1%86%AB%E1%84%8B%E1%85%B5%E1%86%AB-75%E1%84%8B%E1%85%A5%E1%86%A8-%E1%84%90%E1%85%AE%E1%84%8C%E1%85%A1-%E1%84%87%E1%85%A1%E1%86%AE%E1%84%80%E1%85%A9-%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%90%E1%85%B3%E1%84%81%E1%85%A1%E1%84%8C%E1%85%B5-%E1%84%89%E1%85%A9%E1%86%A8%E1%84%8B%E1%85%A7-%E1%84%82%E1%85%A9%E1%86%AB%E1%84%85%E1%85%A1%E1%86%AB.png\" /></div>\n<p><em>\"계산기도, 스펠체크도, 구글도 처음엔 치팅이라 불렸습니다. 이제 AI가 그 자리를 대신할 차례입니다.\"</em></p>\n<p>이 도발적인 말의 주인공은 콜롬비아대 출신 21세 한인 청년 이정인(Chungin “Roy” Lee)입니다. 그는 최근 실리콘밸리를 뒤흔든 AI 스타트업 'Cluely’의 공동창업자로, 자신이 개발한 AI 치팅툴로 아마존 인턴십 면접에 합격한 후 530만 달러(약 75억 원)의 투자금을 유치하며 세계적 화제의 중심에 섰습니다.</p>\n<h2 id=\"ai로-빅테크-면접을-속이다\">AI로 빅테크 면접을 속이다</h2>\n<p>이정인의 여정은 단순한 코딩 프로젝트에서 시작됐습니다. 그는 'Interview Coder'라는 AI 도구를 개발해 아마존의 화상 코딩 면접에 활용했습니다. 이 도구는 브라우저에 보이지 않는 오버레이 창을 띄워 면접관 모르게 실시간으로 답변과 코드를 제공했고, 이정인은 이를 통해 인턴십에 합격했습니다.</p>\n<p>놀라운 점은 그가 이 과정을 유튜브에 공개했다는 사실입니다. \"How I Cheated My Amazon Interview\"라는 제목의 영상은 순식간에 바이럴 히트를 기록했고, 이는 곧 그의 인생을 바꿔놓았습니다.</p>\n<h2 id=\"정학-처분과-창업의-길\">정학 처분과 창업의 길</h2>\n<p>영상이 화제가 되자 콜롬비아대학교는 이정인에게 정학 처분을 내렸고, 아마존에서도 인턴십 제안이 취소되었습니다. 하지만 이정인과 공동창업자 닐 샨무감(Neel Shanmugam)은 좌절하지 않았습니다. 이들은 해당 기술을 발전시켜 'Cluely’라는 스타트업을 설립했습니다.</p>\n<p>\"Cheat on everything(모든 것을 치팅하라)\"이라는 도발적인 슬로건을 내건 Cluely는 면접뿐 아니라 시험, 영업, 심지어 데이트까지 AI가 실시간으로 코칭해주는 서비스를 출시했습니다. 출시 직후 7만 명의 사용자가 몰렸고, 2025년 4월 기준 월 300만 달러의 연간 반복 수익(ARR)을 기록하며 Abstract Ventures와 Susa Ventures로부터 530만 달러의 시드 투자를 유치했습니다.</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">$5 million to change the definition of the word &quot;cheating&quot;<a href=\"https://t.co/rJuDbS1eC5\">https://t.co/rJuDbS1eC5</a> <a href=\"https://t.co/BMbBnz1fTE\">https://t.co/BMbBnz1fTE</a></p>&mdash; Roy (@im_roy_lee) <a href=\"https://twitter.com/im_roy_lee/status/1914438039264280939?ref_src=twsrc%5Etfw\">April 21, 2025</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<h2 id=\"데이트까지-치팅-논란의-확산\">데이트까지 치팅? 논란의 확산</h2>\n<p>Cluely의 마케팅 영상은 더 큰 논란을 일으켰습니다. 이정인이 스마트글라스를 착용하고 데이트 자리에서 AI의 실시간 코칭을 받아 상대방에게 나이와 예술 지식 등을 속이는 장면이 등장한 것입니다. 비록 연출된 광고였지만, 이 영상은 \"AI가 인간관계까지 조작하는 디스토피아적 미래\"에 대한 우려를 증폭시켰습니다.</p>\n<p>Reddit, X(트위터), LinkedIn 등 해외 커뮤니티에서는 \"블랙미러 에피소드 같다\", \"21세기 디지털 사기극\"이라는 비판이 쏟아졌고, Morning Brew, Business Insider 등 주요 매체들도 AI 치팅툴이 가져올 신뢰와 진정성의 붕괴를 우려하는 기사를 연이어 보도했습니다.</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Cluely is out. cheat on everything. <a href=\"https://t.co/EsRXQaCfUI\">pic.twitter.com/EsRXQaCfUI</a></p>&mdash; Roy (@im_roy_lee) <a href=\"https://twitter.com/im_roy_lee/status/1914061483149001132?ref_src=twsrc%5Etfw\">April 20, 2025</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<h2 id=\"혁신인가-위협인가\">혁신인가, 위협인가?</h2>\n<p>Cluely 측은 \"AI는 인간의 경쟁자가 아니라 협업 파트너\"라며, 암기·코딩·리서치 등 반복적 작업은 AI에 맡기고 인간은 더 창의적인 일에 집중해야 한다고 주장합니다. 일부 투자자와 기술 옹호자들도 \"시험·면접 시스템의 구식성과 비효율성\"을 지적하며 변화의 필요성을 강조합니다.</p>\n<p>반면 교육계와 기업들은 \"실력과 신뢰 기반의 사회 시스템이 붕괴될 수 있다\"며 경계심을 늦추지 않고 있습니다. 특히 원격 면접·시험의 신뢰성, AI 활용의 윤리적 경계, 개인정보 보호 등 다양한 문제가 제기되고 있습니다.</p>\n<h2 id=\"ai-시대-우리의-선택은\">AI 시대, 우리의 선택은?</h2>\n<p>Cluely 사건은 단순한 기술 논쟁을 넘어, AI가 우리 사회의 근간인 신뢰와 진정성, 공정성에 미치는 영향을 생각하게 합니다. 기술의 발전이 곧 규범의 변화로 이어질지, 아니면 새로운 규제가 등장할지, AI 시대의 공정성과 혁신의 균형은 어떻게 재정립될지 주목할 필요가 있습니다.</p>\n<p>이정인의 말처럼 AI도 결국 계산기나 스펠체크처럼 일상적 도구가 될까요? 아니면 인간의 진정한 역량과 관계를 위협하는 존재가 될까요? AI와 함께하는 미래, 우리는 어떤 기준과 가치를 지켜야 할지 깊은 고민이 필요한 시점입니다.</p>\n<hr />\n<h2 id=\"참고-출처\">참고 출처</h2>\n<ul>\n<li>\n<p><a href=\"https://techcrunch.com/2025/04/21/columbia-student-suspended-over-interview-cheating-tool-raises-5-3m-to-cheat-on-everything/\">TechCrunch: Columbia student suspended over interview cheating tool raises $5.3M to cheat on everything</a></p>\n</li>\n<li>\n<p><a href=\"https://aimresearch.co/ai-startups/cluely-helped-you-cheat-truely-knows-you-did\">AIM Research: Cluely Helped You Cheat, Truely Knows You Did</a></p>\n</li>\n<li>\n<p><a href=\"https://finance.yahoo.com/news/startups-launch-products-catch-people-215512642.html\">Yahoo Finance: Startups launch products to catch people using AI cheating app Cluely</a></p>\n</li>\n<li>\n<p><a href=\"https://www.ndtv.com/feature/ai-startup-that-lets-users-cheat-in-exams-and-interviews-raises-5-3-million-8232657\">NDTV: AI Startup That Lets Users Cheat In Exams And Interviews Raises $5.3 Million</a></p>\n</li>\n<li>\n<p><a href=\"https://www.eweek.com/news/cluely-ai-cheating-app/\">eWeek: ‘Cheat on Everything’ AI App Sparks Outrage - And Raises $5.3 Million</a></p>\n</li>\n<li>\n<p><a href=\"https://www.hindustantimes.com/trending/suspended-from-columbia-student-raises-5-million-for-ai-cheating-tool-the-world-will-say-101745401820881.html\">Hindustan Times: Suspended from Columbia, student raises $5 million for AI cheating tool</a></p>\n</li>\n<li>\n<p><a href=\"https://www.businessinsider.com/cluely-ai-cheat-job-interviews-columbia-chungin-roy-lee-2025-4\">Business Insider: I Tried the AI App That Helps You ‘Cheat’ in Live Conversations</a></p>\n</li>\n<li>\n<p><a href=\"https://www.nbcnews.com/tech/tech-news/columbia-university-student-trolls-big-tech-ai-tool-job-applications-rcna198454\">NBC News: Kicked out of Columbia, this student doesn’t plan to stop trolling big tech with AI tool for job applications</a></p>\n</li>\n</ul>\n\n",
        "contentSnippet": "\"계산기도, 스펠체크도, 구글도 처음엔 치팅이라 불렸습니다. 이제 AI가 그 자리를 대신할 차례입니다.\"\n이 도발적인 말의 주인공은 콜롬비아대 출신 21세 한인 청년 이정인(Chungin “Roy” Lee)입니다. 그는 최근 실리콘밸리를 뒤흔든 AI 스타트업 'Cluely’의 공동창업자로, 자신이 개발한 AI 치팅툴로 아마존 인턴십 면접에 합격한 후 530만 달러(약 75억 원)의 투자금을 유치하며 세계적 화제의 중심에 섰습니다.\nAI로 빅테크 면접을 속이다\n이정인의 여정은 단순한 코딩 프로젝트에서 시작됐습니다. 그는 'Interview Coder'라는 AI 도구를 개발해 아마존의 화상 코딩 면접에 활용했습니다. 이 도구는 브라우저에 보이지 않는 오버레이 창을 띄워 면접관 모르게 실시간으로 답변과 코드를 제공했고, 이정인은 이를 통해 인턴십에 합격했습니다.\n놀라운 점은 그가 이 과정을 유튜브에 공개했다는 사실입니다. \"How I Cheated My Amazon Interview\"라는 제목의 영상은 순식간에 바이럴 히트를 기록했고, 이는 곧 그의 인생을 바꿔놓았습니다.\n정학 처분과 창업의 길\n영상이 화제가 되자 콜롬비아대학교는 이정인에게 정학 처분을 내렸고, 아마존에서도 인턴십 제안이 취소되었습니다. 하지만 이정인과 공동창업자 닐 샨무감(Neel Shanmugam)은 좌절하지 않았습니다. 이들은 해당 기술을 발전시켜 'Cluely’라는 스타트업을 설립했습니다.\n\"Cheat on everything(모든 것을 치팅하라)\"이라는 도발적인 슬로건을 내건 Cluely는 면접뿐 아니라 시험, 영업, 심지어 데이트까지 AI가 실시간으로 코칭해주는 서비스를 출시했습니다. 출시 직후 7만 명의 사용자가 몰렸고, 2025년 4월 기준 월 300만 달러의 연간 반복 수익(ARR)을 기록하며 Abstract Ventures와 Susa Ventures로부터 530만 달러의 시드 투자를 유치했습니다.\n$5 million to change the definition of the word \"cheating\"https://t.co/rJuDbS1eC5 https://t.co/BMbBnz1fTE\n— Roy (@im_roy_lee) April 21, 2025\n \n\n데이트까지 치팅? 논란의 확산\nCluely의 마케팅 영상은 더 큰 논란을 일으켰습니다. 이정인이 스마트글라스를 착용하고 데이트 자리에서 AI의 실시간 코칭을 받아 상대방에게 나이와 예술 지식 등을 속이는 장면이 등장한 것입니다. 비록 연출된 광고였지만, 이 영상은 \"AI가 인간관계까지 조작하는 디스토피아적 미래\"에 대한 우려를 증폭시켰습니다.\nReddit, X(트위터), LinkedIn 등 해외 커뮤니티에서는 \"블랙미러 에피소드 같다\", \"21세기 디지털 사기극\"이라는 비판이 쏟아졌고, Morning Brew, Business Insider 등 주요 매체들도 AI 치팅툴이 가져올 신뢰와 진정성의 붕괴를 우려하는 기사를 연이어 보도했습니다.\nCluely is out. cheat on everything. pic.twitter.com/EsRXQaCfUI\n— Roy (@im_roy_lee) April 20, 2025\n \n혁신인가, 위협인가?\nCluely 측은 \"AI는 인간의 경쟁자가 아니라 협업 파트너\"라며, 암기·코딩·리서치 등 반복적 작업은 AI에 맡기고 인간은 더 창의적인 일에 집중해야 한다고 주장합니다. 일부 투자자와 기술 옹호자들도 \"시험·면접 시스템의 구식성과 비효율성\"을 지적하며 변화의 필요성을 강조합니다.\n반면 교육계와 기업들은 \"실력과 신뢰 기반의 사회 시스템이 붕괴될 수 있다\"며 경계심을 늦추지 않고 있습니다. 특히 원격 면접·시험의 신뢰성, AI 활용의 윤리적 경계, 개인정보 보호 등 다양한 문제가 제기되고 있습니다.\nAI 시대, 우리의 선택은?\nCluely 사건은 단순한 기술 논쟁을 넘어, AI가 우리 사회의 근간인 신뢰와 진정성, 공정성에 미치는 영향을 생각하게 합니다. 기술의 발전이 곧 규범의 변화로 이어질지, 아니면 새로운 규제가 등장할지, AI 시대의 공정성과 혁신의 균형은 어떻게 재정립될지 주목할 필요가 있습니다.\n이정인의 말처럼 AI도 결국 계산기나 스펠체크처럼 일상적 도구가 될까요? 아니면 인간의 진정한 역량과 관계를 위협하는 존재가 될까요? AI와 함께하는 미래, 우리는 어떤 기준과 가치를 지켜야 할지 깊은 고민이 필요한 시점입니다.\n참고 출처\nTechCrunch: Columbia student suspended over interview cheating tool raises $5.3M to cheat on everything\nAIM Research: Cluely Helped You Cheat, Truely Knows You Did\nYahoo Finance: Startups launch products to catch people using AI cheating app Cluely\nNDTV: AI Startup That Lets Users Cheat In Exams And Interviews Raises $5.3 Million\neWeek: ‘Cheat on Everything’ AI App Sparks Outrage - And Raises $5.3 Million\nHindustan Times: Suspended from Columbia, student raises $5 million for AI cheating tool\nBusiness Insider: I Tried the AI App That Helps You ‘Cheat’ in Live Conversations\nNBC News: Kicked out of Columbia, this student doesn’t plan to stop trolling big tech with AI tool for job applications",
        "guid": "tag:blogger.com,1999:blog-1127118646487305903.post-1558459405247705293",
        "categories": [
          {
            "_": "news",
            "$": {
              "domain": "http://www.blogger.com/atom/ns#"
            }
          }
        ],
        "isoDate": "2025-05-08T06:08:00.000Z"
      }
    ]
  },
  {
    "name": "Against All Odds.",
    "category": "개인",
    "posts": []
  },
  {
    "name": "움직이는 게임서버",
    "category": "개인",
    "posts": []
  },
  {
    "name": "이상욱",
    "category": "개인",
    "posts": []
  },
  {
    "name": "임철재",
    "category": "개인",
    "posts": []
  },
  {
    "name": "어쩐지 오늘은",
    "category": "개인",
    "posts": []
  },
  {
    "name": "oddpoet’s étude",
    "category": "개인",
    "posts": []
  },
  {
    "name": "0x00 - NULL",
    "category": "개인",
    "posts": []
  },
  {
    "name": "퇴근 후 서버다운",
    "category": "개인",
    "posts": [
      {
        "creator": "SIDNFT",
        "title": "(bitaxe) 업데이트 / 새로 만든 웹페이지",
        "link": "http://serverdown.tistory.com/1321",
        "pubDate": "Thu, 15 May 2025 01:54:41 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1321#entry1321comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"666\" data-origin-height=\"499\"><span data-url=\"https://blog.kakaocdn.net/dn/c21QyE/btsNWF8OVZ0/yRk8LKEHeAps2FsAB7lzck/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c21QyE/btsNWF8OVZ0/yRk8LKEHeAps2FsAB7lzck/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c21QyE/btsNWF8OVZ0/yRk8LKEHeAps2FsAB7lzck/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc21QyE%2FbtsNWF8OVZ0%2FyRk8LKEHeAps2FsAB7lzck%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"666\" height=\"499\" data-origin-width=\"666\" data-origin-height=\"499\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">링크: <a href=\"https://bitaxe.sidnft.com/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://bitaxe.sidnft.com/</a></p>\n<figure id=\"og_1747241451322\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"집에서 비트코인 채굴 | 비트액스\" data-og-description=\"\" data-og-host=\"bitaxe.sidnft.com\" data-og-source-url=\"https://bitaxe.sidnft.com/\" data-og-url=\"https://bitaxe.sidnft.com/\" data-og-image=\"\"><a href=\"https://bitaxe.sidnft.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://bitaxe.sidnft.com/\">\n<div class=\"og-image\" style=\"background-image: url();\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">집에서 비트코인 채굴 | 비트액스</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">&nbsp;</p>\n<p class=\"og-host\" data-ke-size=\"size16\">bitaxe.sidnft.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">별 디자인은 없고 현재는 글뿐입니다.</p>\n<p data-ke-size=\"size16\">비트액스 채굴기 관련 페이지를 만들어봤습니다.</p>\n<p data-ke-size=\"size16\">프로젝트 명이 bitaxe 입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"607\" data-origin-height=\"563\"><span data-url=\"https://blog.kakaocdn.net/dn/cgLWGV/btsNXsg3db7/p8NaBVPlSbf1u3k3LKPj3K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/cgLWGV/btsNXsg3db7/p8NaBVPlSbf1u3k3LKPj3K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/cgLWGV/btsNXsg3db7/p8NaBVPlSbf1u3k3LKPj3K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FcgLWGV%2FbtsNXsg3db7%2Fp8NaBVPlSbf1u3k3LKPj3K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"607\" height=\"563\" data-origin-width=\"607\" data-origin-height=\"563\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">장치 리스트 들이 있고</p>\n<p data-ke-size=\"size16\">카톡 오픈채팅 링크도 달아두었습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">탐스 하드에처 소식을 듣다 문득 생각이 나서 시작했습니다.</p>\n<p data-ke-size=\"size16\">하드웨어 비교 사이트가 되면 좋겠군요</p>",
        "contentSnippet": "링크: https://bitaxe.sidnft.com/\n\n \n집에서 비트코인 채굴 | 비트액스\n \nbitaxe.sidnft.com\n\n별 디자인은 없고 현재는 글뿐입니다.\n비트액스 채굴기 관련 페이지를 만들어봤습니다.\n프로젝트 명이 bitaxe 입니다.\n \n \n\n\n \n장치 리스트 들이 있고\n카톡 오픈채팅 링크도 달아두었습니다.\n \n탐스 하드에처 소식을 듣다 문득 생각이 나서 시작했습니다.\n하드웨어 비교 사이트가 되면 좋겠군요",
        "guid": "http://serverdown.tistory.com/1321",
        "categories": [
          "프로그래밍/자작",
          "bitaxe",
          "업데이트",
          "자작"
        ],
        "isoDate": "2025-05-14T16:54:41.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "성공하려면 마음근육을 키워야 합니다.",
        "link": "http://serverdown.tistory.com/1320",
        "pubDate": "Wed, 14 May 2025 16:42:24 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1320#entry1320comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"868\" data-origin-height=\"607\"><span data-url=\"https://blog.kakaocdn.net/dn/F89Hq/btsNXBR030g/dzh2cjea9l6Pl3rZtKDM0K/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/F89Hq/btsNXBR030g/dzh2cjea9l6Pl3rZtKDM0K/img.png\"><img src=\"https://blog.kakaocdn.net/dn/F89Hq/btsNXBR030g/dzh2cjea9l6Pl3rZtKDM0K/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FF89Hq%2FbtsNXBR030g%2Fdzh2cjea9l6Pl3rZtKDM0K%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"868\" height=\"607\" data-origin-width=\"868\" data-origin-height=\"607\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=FddIqB_0EVE\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=FddIqB_0EVE</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=FddIqB_0EVE\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/cUeJ7a/hyYTcmrKfw/y2XzZfr2AXOALKwfewcBA1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/fF0tT/hyYRw0EEQq/NG5WHSqmidgK9mXv7QTcL1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"중요한 건 꺾이지 않는 마음 | 강한 마음 근력 키우는 법 | 내면소통\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/FddIqB_0EVE\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">초반에 나옵니다.</p>\n<p data-ke-size=\"size16\">우리가 해결해야하는 문제는 노후 대비 같은 장기적인 문제 입니다.</p>\n<p data-ke-size=\"size16\">이런 문제를 극복하려면 높은 IQ 의 지능이나 인지 능력이 아니라</p>\n<p data-ke-size=\"size16\">지속적인 스트레스를 주는 환경에서 버틸 수 있는 마음의 근육이라고 합니다.</p>\n<p data-ke-size=\"size16\">즉 꾸준히 생각해야한다는 것이죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">당장 성공하는 유튜버 들을 보면</p>\n<p data-ke-size=\"size16\">성공한는 순간에는 화려하지만 그 과정은 지루하며 긴 시간이 있었습니다.</p>\n<p data-ke-size=\"size16\">하지만 성공할 때 까지 포기하지 않아야 결과를 볼 수 있습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">심지어 투자 조차 말이죠</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">느리더라도 앞으로 가고 있다는 것이 중요한 시대입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=FddIqB_0EVE\n\n\n\n \n초반에 나옵니다.\n우리가 해결해야하는 문제는 노후 대비 같은 장기적인 문제 입니다.\n이런 문제를 극복하려면 높은 IQ 의 지능이나 인지 능력이 아니라\n지속적인 스트레스를 주는 환경에서 버틸 수 있는 마음의 근육이라고 합니다.\n즉 꾸준히 생각해야한다는 것이죠\n \n당장 성공하는 유튜버 들을 보면\n성공한는 순간에는 화려하지만 그 과정은 지루하며 긴 시간이 있었습니다.\n하지만 성공할 때 까지 포기하지 않아야 결과를 볼 수 있습니다.\n \n심지어 투자 조차 말이죠\n \n느리더라도 앞으로 가고 있다는 것이 중요한 시대입니다.",
        "guid": "http://serverdown.tistory.com/1320",
        "categories": [
          "유튜브",
          "심리"
        ],
        "isoDate": "2025-05-14T07:42:24.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "구글의 코딩 규칙",
        "link": "http://serverdown.tistory.com/1319",
        "pubDate": "Wed, 14 May 2025 13:27:30 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1319#entry1319comment",
        "content": "<p data-ke-size=\"size16\">&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"506\" data-origin-height=\"217\"><span data-url=\"https://blog.kakaocdn.net/dn/brtbGX/btsNWYMUF37/c8dG9LYtiahtmXb8uUFSK1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/brtbGX/btsNWYMUF37/c8dG9LYtiahtmXb8uUFSK1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/brtbGX/btsNWYMUF37/c8dG9LYtiahtmXb8uUFSK1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbrtbGX%2FbtsNWYMUF37%2Fc8dG9LYtiahtmXb8uUFSK1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"506\" height=\"217\" data-origin-width=\"506\" data-origin-height=\"217\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=nmqJ_4tyw94&amp;t=6s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=nmqJ_4tyw94&amp;t=6s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=nmqJ_4tyw94\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/csaTFF/hyYU42rw8h/jkrK4AMKoedISulrXKBSf1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/XU2cD/hyYU3WLsrv/u0kZ7KUEXyVxocvhvDQ111/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"구글의 C++는 왜 효과적일까? (코드 독자를 위한 최적화)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/nmqJ_4tyw94\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">규칙에 맞는 합당한 이유가 있기 때문에 알아두시면 좋습니다.</p>\n<p data-ke-size=\"size16\">이렇게 큰기업은 보통 개발영역이</p>\n<p data-ke-size=\"size16\">라이브러리 쪽과</p>\n<p data-ke-size=\"size16\">프로그램 쪽으로 나뉘는데요</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">라이브러리 개발할때의 입장을 잘 설명하고 있습니다.</p>\n<p data-ke-size=\"size16\">프로그램 개발자는 규칙에 덜 억메여도 되지만</p>\n<p data-ke-size=\"size16\">라이브러리 개발자는 다른 개발자에게 제공을 해야하는 입장이라 정확한 규칙에 의해 제공하면 좋습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=nmqJ_4tyw94&t=6s\n\n\n\n \n규칙에 맞는 합당한 이유가 있기 때문에 알아두시면 좋습니다.\n이렇게 큰기업은 보통 개발영역이\n라이브러리 쪽과\n프로그램 쪽으로 나뉘는데요\n \n라이브러리 개발할때의 입장을 잘 설명하고 있습니다.\n프로그램 개발자는 규칙에 덜 억메여도 되지만\n라이브러리 개발자는 다른 개발자에게 제공을 해야하는 입장이라 정확한 규칙에 의해 제공하면 좋습니다.",
        "guid": "http://serverdown.tistory.com/1319",
        "categories": [
          "프로그래밍/개발메모",
          "구글",
          "코딩"
        ],
        "isoDate": "2025-05-14T04:27:30.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "디아2 요르단의 반지 주음",
        "link": "http://serverdown.tistory.com/1318",
        "pubDate": "Wed, 14 May 2025 12:10:55 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1318#entry1318comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"318\" data-origin-height=\"422\"><span data-url=\"https://blog.kakaocdn.net/dn/y6Zf7/btsNVaH55EF/mPRrTXpOlneTqWcQi7ApCk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/y6Zf7/btsNVaH55EF/mPRrTXpOlneTqWcQi7ApCk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/y6Zf7/btsNVaH55EF/mPRrTXpOlneTqWcQi7ApCk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fy6Zf7%2FbtsNVaH55EF%2FmPRrTXpOlneTqWcQi7ApCk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"318\" height=\"422\" data-origin-width=\"318\" data-origin-height=\"422\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">레더 악몽 안다리엘 잡다 나왔습니다.</p>\n<p data-ke-size=\"size16\">안다리엘이 이것저것 잘 주네요</p>\n<p data-ke-size=\"size16\">거의 20년 플레이하는동안 처음 주워봤습니다. ㅎㅎ</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"533\" data-origin-height=\"472\"><span data-url=\"https://blog.kakaocdn.net/dn/c1EnrE/btsNVghcUJ2/5pTi3cq7Oul6qDuUekGht0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c1EnrE/btsNVghcUJ2/5pTi3cq7Oul6qDuUekGht0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c1EnrE/btsNVghcUJ2/5pTi3cq7Oul6qDuUekGht0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc1EnrE%2FbtsNVghcUJ2%2F5pTi3cq7Oul6qDuUekGht0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"533\" height=\"472\" data-origin-width=\"533\" data-origin-height=\"472\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">야만용사로 하는데 마법 아이템 발견 확율이 높지 않군요&nbsp;</p>\n<p data-ke-size=\"size16\">100% 되는줄 알았는데&nbsp;</p>\n<p data-ke-size=\"size16\">아무튼 잘나오네요</p>",
        "contentSnippet": "레더 악몽 안다리엘 잡다 나왔습니다.\n안다리엘이 이것저것 잘 주네요\n거의 20년 플레이하는동안 처음 주워봤습니다. ㅎㅎ\n\n\n야만용사로 하는데 마법 아이템 발견 확율이 높지 않군요 \n100% 되는줄 알았는데 \n아무튼 잘나오네요",
        "guid": "http://serverdown.tistory.com/1318",
        "categories": [
          "게임"
        ],
        "isoDate": "2025-05-14T03:10:55.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "(APPS 업데이트) 개발 진행 상황 표시 추가",
        "link": "http://serverdown.tistory.com/1317",
        "pubDate": "Tue, 13 May 2025 11:55:55 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1317#entry1317comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"312\" data-origin-height=\"209\"><span data-url=\"https://blog.kakaocdn.net/dn/esFjjZ/btsNUbsSNxw/OZdraOS4jPUohy0RHWtpdK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/esFjjZ/btsNUbsSNxw/OZdraOS4jPUohy0RHWtpdK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/esFjjZ/btsNUbsSNxw/OZdraOS4jPUohy0RHWtpdK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FesFjjZ%2FbtsNUbsSNxw%2FOZdraOS4jPUohy0RHWtpdK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"312\" height=\"209\" data-origin-width=\"312\" data-origin-height=\"209\"/></span></figure>\n</p>\n<h2 data-ke-size=\"size26\">변경점</h2>\n<p data-ke-size=\"size16\">빌드를 하면 버전이 올라가는 기능을</p>\n<p data-ke-size=\"size16\">버전이 올라가면 날짜를 기록하는 기능을 추가했고</p>\n<p data-ke-size=\"size16\">이것을 홈페이지에 표시하도록 했습니다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"312\" data-origin-height=\"209\"><span data-url=\"https://blog.kakaocdn.net/dn/esFjjZ/btsNUbsSNxw/OZdraOS4jPUohy0RHWtpdK/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/esFjjZ/btsNUbsSNxw/OZdraOS4jPUohy0RHWtpdK/img.png\"><img src=\"https://blog.kakaocdn.net/dn/esFjjZ/btsNUbsSNxw/OZdraOS4jPUohy0RHWtpdK/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FesFjjZ%2FbtsNUbsSNxw%2FOZdraOS4jPUohy0RHWtpdK%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"312\" height=\"209\" data-origin-width=\"312\" data-origin-height=\"209\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">일단 show 버튼이 있고 누르면</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"559\" data-origin-height=\"324\"><span data-url=\"https://blog.kakaocdn.net/dn/bvMxCf/btsNTEI351b/rUcrDAWK8vkxkZbKJuyEok/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bvMxCf/btsNTEI351b/rUcrDAWK8vkxkZbKJuyEok/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bvMxCf/btsNTEI351b/rUcrDAWK8vkxkZbKJuyEok/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbvMxCf%2FbtsNTEI351b%2FrUcrDAWK8vkxkZbKJuyEok%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"559\" height=\"324\" data-origin-width=\"559\" data-origin-height=\"324\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">버전 과 빌드 후 얼마의 시간이 경과 하였는지 표시됩니다.</p>\n<p data-ke-size=\"size16\">버전을 보면 얼마나 고쳤는지 알 수 있고</p>\n<p data-ke-size=\"size16\">시간을 보면 최근에 뭘했는지 알 수 있습니다.</p>\n<p data-ke-size=\"size16\">페이지: <a href=\"https://apps.sidnft.com/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://apps.sidnft.com/</a></p>\n<p data-ke-size=\"size16\">페이지 하단에 위치합니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">할일 추가</h2>\n<p data-ke-size=\"size16\">1. show 버튼에 애니메이션 (다른 곳에 작업한거 통함)<br />2. 로딩 애니메이션 추가 <span style=\"text-align: start;\"><span>&nbsp;</span>(다른 곳에 작업한거 통함)</span> <br />3. 별도의 페이지로 분리</p>",
        "contentSnippet": "변경점\n빌드를 하면 버전이 올라가는 기능을\n버전이 올라가면 날짜를 기록하는 기능을 추가했고\n이것을 홈페이지에 표시하도록 했습니다.\n\n\n일단 show 버튼이 있고 누르면\n\n\n버전 과 빌드 후 얼마의 시간이 경과 하였는지 표시됩니다.\n버전을 보면 얼마나 고쳤는지 알 수 있고\n시간을 보면 최근에 뭘했는지 알 수 있습니다.\n페이지: https://apps.sidnft.com/\n페이지 하단에 위치합니다.\n \n할일 추가\n1. show 버튼에 애니메이션 (다른 곳에 작업한거 통함)\n2. 로딩 애니메이션 추가  (다른 곳에 작업한거 통함) \n3. 별도의 페이지로 분리",
        "guid": "http://serverdown.tistory.com/1317",
        "categories": [
          "프로그래밍/자작",
          "업데이트",
          "자작"
        ],
        "isoDate": "2025-05-13T02:55:55.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "클레르 옵스퀴르 33원정대 개발 스토리",
        "link": "http://serverdown.tistory.com/1316",
        "pubDate": "Tue, 13 May 2025 10:53:50 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1316#entry1316comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"628\" data-origin-height=\"376\"><span data-url=\"https://blog.kakaocdn.net/dn/1qWGw/btsNVlBfvEU/KWjD4LJtfqMLj9KZjZmRKk/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/1qWGw/btsNVlBfvEU/KWjD4LJtfqMLj9KZjZmRKk/img.png\"><img src=\"https://blog.kakaocdn.net/dn/1qWGw/btsNVlBfvEU/KWjD4LJtfqMLj9KZjZmRKk/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F1qWGw%2FbtsNVlBfvEU%2FKWjD4LJtfqMLj9KZjZmRKk%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"628\" height=\"376\" data-origin-width=\"628\" data-origin-height=\"376\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=L4klzUDCRVI&amp;t=494s\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=L4klzUDCRVI&amp;t=494s</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=L4klzUDCRVI\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/bwhAT6/hyYVeKzmVu/KaaqpTbxngTyi8eb4ytKzK/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720,https://scrap.kakaocdn.net/dn/sfKoI/hyYRlq49PE/cBnsw17cpp514WkdRnvoB1/img.jpg?width=1280&amp;height=720&amp;face=0_0_1280_720\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"33명 만으로 기적을 일으킨 개발사 | 클레르 옵스퀴르 33원정대\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/L4klzUDCRVI\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">소규모 개발팀이 만든 AAA급&nbsp; 게임이 2025년 4월에 나와 히트를 쳤다.</p>\n<p data-ke-size=\"size16\">개발기간은 5년이였으며 개발비도 많이 들어갔다.</p>\n<p data-ke-size=\"size16\">누구나할 수 있다고 말할 수는 없는 수준이며 몇몇 상황은 예전 모바일 게임이 시작되던 무렵과 겹친다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">1. 유비 소프트 출신</h2>\n<p data-ke-size=\"size16\">유비 소프트는 최근 크게 흔들리고 있는 회사로 여러방향으로 부실해졌다.</p>\n<p data-ke-size=\"size16\">33원정대의 개발기간이 5년이라는 점을 보아 유비 소프트가 흔들릴깜 말까 하던 초창기에 퇴사해서 팀을 꾸린거 같다.</p>\n<p data-ke-size=\"size16\">이는 스마트폰이 태동하던 시절 노키아가 몰락하면서 필란드 출신 개발인력들이 대거 잘리는 사태가 있었던 시기를 생각나게 했다.</p>\n<p data-ke-size=\"size16\">그당시 스마트폰 시장은 이제 막 시작된 시기라 앱이나 게임이 부족했었다.</p>\n<p data-ke-size=\"size16\">이럴때 나온것이 앵그리버드 클래시 오브 클랜 등이 있다.&nbsp;</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"299\" data-origin-height=\"168\"><span data-url=\"https://blog.kakaocdn.net/dn/Z69bu/btsNVIQp3HE/weqhVGuM269GDTTWiT0gak/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/Z69bu/btsNVIQp3HE/weqhVGuM269GDTTWiT0gak/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/Z69bu/btsNVIQp3HE/weqhVGuM269GDTTWiT0gak/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FZ69bu%2FbtsNVIQp3HE%2FweqhVGuM269GDTTWiT0gak%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"299\" height=\"168\" data-origin-width=\"299\" data-origin-height=\"168\"/></span></figure>\n<figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"300\" data-origin-height=\"168\"><span data-url=\"https://blog.kakaocdn.net/dn/b3RBtz/btsNVruCxOd/aRmgcyjP54A6KSIKakxEHk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/b3RBtz/btsNVruCxOd/aRmgcyjP54A6KSIKakxEHk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/b3RBtz/btsNVruCxOd/aRmgcyjP54A6KSIKakxEHk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb3RBtz%2FbtsNVruCxOd%2FaRmgcyjP54A6KSIKakxEHk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"300\" height=\"168\" data-origin-width=\"300\" data-origin-height=\"168\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">이 당시는 시장의 너무 초창기라 게임의 비전문가 들은 발을 들일 곳이 없었다.</p>\n<p data-ke-size=\"size16\">당연히 개발에 왈가왈부할 사람들이 없다면 좋은것이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">2. 경쟁자가 없는 장르(분야)</h2>\n<p data-ke-size=\"size16\">턴제 JRPG 장르는 AAA 급 타이틀에선 출시가 없었던 시장이였다.</p>\n<p data-ke-size=\"size16\">스퀘어 애닉스에서도 못하겠다고 손떼 영역이라 그런지 경쟁자가 없었다.</p>\n<p data-ke-size=\"size16\">그리고 시간만 허락해준다면 저가 매수는 기회이다.</p>\n<p data-ke-size=\"size16\">경쟁자가 없다는 것이 장점인 것이다.</p>\n<p data-ke-size=\"size16\">완전히 없었던 것은 아니고 모바일게임에서는 잘 나가고 있던 장르였지만<br />콘솔이나 PC 게임에서는 출시작이 잘 없었다.</p>\n<p data-ke-size=\"size16\">완전히 빈집은 아니고<br />다른곳에서 잘되던걸 가져오긴 한거 같다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">&nbsp;</h2>\n<h2 data-ke-size=\"size26\">3. 낭비르 줄인다.</h2>\n<p data-ke-size=\"size16\">영상에서도 나오지만 회사가 이미 커버리고 비전문가들이 붙기 시작하면</p>\n<p data-ke-size=\"size16\">팀내에서 만드는 것을 증명하는 단계가 발생한다.</p>\n<p data-ke-size=\"size16\">게임 전문가들은 알파큽의 완성도만 보더라도 여기다 뭘 붙이면 게임이 되는지 알 수 있다.</p>\n<p data-ke-size=\"size16\">그래서 사각 박스만 튀어나와도 괜찮다.</p>\n<p data-ke-size=\"size16\">하지만 비전문가 집단을 설득하려면 그래선 안된다. 거의 눈에 보이는 수준의 데몰르 만들어야하는데</p>\n<p data-ke-size=\"size16\">이런 데모는 투자 받기 위해서 이며 만든다음 폐기된다. 겨우 화면에만 유지하는 거의 동영상 수준의 프로그램이기 때문이다.</p>\n<p data-ke-size=\"size16\">물론 투자자 집단 (비전문가) 은 이런 데모를 플레이 하지 않는다. 플레이한 영상을 볼 뿐</p>\n<p data-ke-size=\"size16\">이런 것들이 낭비라는 것이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여기서도 음악을 외주로 주었으며 음악 제작다에게 터치나 요구를 하지 않았다.</p>\n<p data-ke-size=\"size16\">이들은 게임 만드는 전문가 집단이지 음악 전문가 집단이 아니기 때문이다. 말해봐야 퀄리티가 좋아질지 아닐지 알 수 가 없는 상황이라면 가만히 있는게 좋다.</p>\n<p data-ke-size=\"size16\">게임 완성도에 따라 음악가에게 다시 보여주면 음악가가 판단하면 될일이다.<br />이 때마다 비용이 들겠지만 비전문가가 전문가에게 요구하는 방식은 결국 더큰 비용을 낳게 된다.<br />(능력이 없기 때문에 요구사항의 모순을 일으키고 재작업이 늘어나기 때문이다.)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">또한 부동산이나 사무실을 유지하는 비용도 낭비이다.</p>\n<p data-ke-size=\"size16\">회사가 커지면 간지 때문인지 화려한 사무실에 집착하는 경향이 있다.</p>\n<p data-ke-size=\"size16\">이는 비전문가 집단은 게임을 모르기 때문에 본인들이 아는 분야 (인테리어) 에 집중하는게 아닐까 하는 의문을 낳게 된다.</p>\n<p data-ke-size=\"size16\">축구는 못하지만 축구 경기 평가는 아무나 하는 것 같이 말이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">전문가 그룹은 이제 사무실을 가질 이유가 없고<br />그에 따라 사무실 수요도 줄게 될 것같다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"259\" data-origin-height=\"194\"><span data-url=\"https://blog.kakaocdn.net/dn/dMtNIr/btsNVkI7SKt/vR0KS6EPSJAN5mN0PL2Px1/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/dMtNIr/btsNVkI7SKt/vR0KS6EPSJAN5mN0PL2Px1/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/dMtNIr/btsNVkI7SKt/vR0KS6EPSJAN5mN0PL2Px1/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdMtNIr%2FbtsNVkI7SKt%2FvR0KS6EPSJAN5mN0PL2Px1%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"259\" height=\"194\" data-origin-width=\"259\" data-origin-height=\"194\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">(텅텅)</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">4. AI 활용</h2>\n<p data-ke-size=\"size16\">한때는 유저들이 AI 를 사용한 게임을 배척하기도 했었는데</p>\n<p data-ke-size=\"size16\">지나고 보니 유저들은 좋은 게임이 AI 를 쓴걸 배척한건 아니였다.</p>\n<p data-ke-size=\"size16\">게임이 안좋으니 AI 사용이 까이는 요소가 되었을 뿐이다.</p>\n<p data-ke-size=\"size16\">다들 칭찬 세례를 하는 중엔 삐딱한 이야기를 할 수도 없고 해봐도 묻힐 뿐이다.</p>\n<p data-ke-size=\"size16\">33 원정대는 스토리 부분에서도 AI 를 활용했다고 한다.</p>\n<p data-ke-size=\"size16\">그렇다 그들은 글쓰기 전문가 들이 아니다.</p>\n<p data-ke-size=\"size16\">시작은 AI 로 하는게 낭비를 줄일 수 있다.</p>\n<p data-ke-size=\"size16\">\"본인의 능력이 아닌 작가 능력을 키울 바엔 게임 만들기에 집중하자.\"</p>\n<p data-ke-size=\"size16\">어느정도 진행되면 전문 작가에게 맡기 면 될 일</p>\n<p data-ke-size=\"size16\">어떤 부분에서든 재작의 낭비는 줄여는 것이 좋다.</p>\n<p data-ke-size=\"size16\">그래픽 요소는 AI 다한 별 다른 언급은 없지만 게임 세상을 채울 많은 오브젝트들이 양산형 모델이 아니였을까 싶다.</p>\n<p data-ke-size=\"size16\">잡다한걸 다시 만들 이유가 없다 스토어에서 사면 되는 시대이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">5. 시대가 바뀌고 있다.</h2>\n<p data-ke-size=\"size16\">나는 모바일 게임의 몰락은 뽑기 규제에서 왔다고 보는 입장이다.<br />(규제하지 않았더라도 유저의 지갑은 고갈되어 쓸 돈이 없었을 것이다. 시간적으로도 끝이 왔었던 것이다.)</p>\n<p data-ke-size=\"size16\">시대는 바껴 버렸고 다시 이 시대가 오려면 10~20년은 걸릴 것이다.<br />(유저의 지갑이 빵빵해질때 다시 올 것 같다.)</p>\n<p data-ke-size=\"size16\">새로운 시장이 열리고 있으며 발을 잘 담궈야할 시점이 온거 같다.</p>\n<p data-ke-size=\"size16\">매번 불황에서도 성공하는 게임들은 나왔고</p>\n<p data-ke-size=\"size16\">이들은 시대를 뛰어넘는 혁신을 가졌었다.</p>\n<p data-ke-size=\"size16\">전문가가 성공하는 방법은 하던걸 더 잘하는 방법 뿐이다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "영상: https://www.youtube.com/watch?v=L4klzUDCRVI&t=494s\n\n\n\n \n소규모 개발팀이 만든 AAA급  게임이 2025년 4월에 나와 히트를 쳤다.\n개발기간은 5년이였으며 개발비도 많이 들어갔다.\n누구나할 수 있다고 말할 수는 없는 수준이며 몇몇 상황은 예전 모바일 게임이 시작되던 무렵과 겹친다.\n \n1. 유비 소프트 출신\n유비 소프트는 최근 크게 흔들리고 있는 회사로 여러방향으로 부실해졌다.\n33원정대의 개발기간이 5년이라는 점을 보아 유비 소프트가 흔들릴깜 말까 하던 초창기에 퇴사해서 팀을 꾸린거 같다.\n이는 스마트폰이 태동하던 시절 노키아가 몰락하면서 필란드 출신 개발인력들이 대거 잘리는 사태가 있었던 시기를 생각나게 했다.\n그당시 스마트폰 시장은 이제 막 시작된 시기라 앱이나 게임이 부족했었다.\n이럴때 나온것이 앵그리버드 클래시 오브 클랜 등이 있다. \n\n\n\n이 당시는 시장의 너무 초창기라 게임의 비전문가 들은 발을 들일 곳이 없었다.\n당연히 개발에 왈가왈부할 사람들이 없다면 좋은것이다.\n \n2. 경쟁자가 없는 장르(분야)\n턴제 JRPG 장르는 AAA 급 타이틀에선 출시가 없었던 시장이였다.\n스퀘어 애닉스에서도 못하겠다고 손떼 영역이라 그런지 경쟁자가 없었다.\n그리고 시간만 허락해준다면 저가 매수는 기회이다.\n경쟁자가 없다는 것이 장점인 것이다.\n완전히 없었던 것은 아니고 모바일게임에서는 잘 나가고 있던 장르였지만\n콘솔이나 PC 게임에서는 출시작이 잘 없었다.\n완전히 빈집은 아니고\n다른곳에서 잘되던걸 가져오긴 한거 같다.\n \n \n3. 낭비르 줄인다.\n영상에서도 나오지만 회사가 이미 커버리고 비전문가들이 붙기 시작하면\n팀내에서 만드는 것을 증명하는 단계가 발생한다.\n게임 전문가들은 알파큽의 완성도만 보더라도 여기다 뭘 붙이면 게임이 되는지 알 수 있다.\n그래서 사각 박스만 튀어나와도 괜찮다.\n하지만 비전문가 집단을 설득하려면 그래선 안된다. 거의 눈에 보이는 수준의 데몰르 만들어야하는데\n이런 데모는 투자 받기 위해서 이며 만든다음 폐기된다. 겨우 화면에만 유지하는 거의 동영상 수준의 프로그램이기 때문이다.\n물론 투자자 집단 (비전문가) 은 이런 데모를 플레이 하지 않는다. 플레이한 영상을 볼 뿐\n이런 것들이 낭비라는 것이다.\n \n여기서도 음악을 외주로 주었으며 음악 제작다에게 터치나 요구를 하지 않았다.\n이들은 게임 만드는 전문가 집단이지 음악 전문가 집단이 아니기 때문이다. 말해봐야 퀄리티가 좋아질지 아닐지 알 수 가 없는 상황이라면 가만히 있는게 좋다.\n게임 완성도에 따라 음악가에게 다시 보여주면 음악가가 판단하면 될일이다.\n이 때마다 비용이 들겠지만 비전문가가 전문가에게 요구하는 방식은 결국 더큰 비용을 낳게 된다.\n(능력이 없기 때문에 요구사항의 모순을 일으키고 재작업이 늘어나기 때문이다.)\n \n또한 부동산이나 사무실을 유지하는 비용도 낭비이다.\n회사가 커지면 간지 때문인지 화려한 사무실에 집착하는 경향이 있다.\n이는 비전문가 집단은 게임을 모르기 때문에 본인들이 아는 분야 (인테리어) 에 집중하는게 아닐까 하는 의문을 낳게 된다.\n축구는 못하지만 축구 경기 평가는 아무나 하는 것 같이 말이다.\n \n전문가 그룹은 이제 사무실을 가질 이유가 없고\n그에 따라 사무실 수요도 줄게 될 것같다.\n\n\n(텅텅)\n \n4. AI 활용\n한때는 유저들이 AI 를 사용한 게임을 배척하기도 했었는데\n지나고 보니 유저들은 좋은 게임이 AI 를 쓴걸 배척한건 아니였다.\n게임이 안좋으니 AI 사용이 까이는 요소가 되었을 뿐이다.\n다들 칭찬 세례를 하는 중엔 삐딱한 이야기를 할 수도 없고 해봐도 묻힐 뿐이다.\n33 원정대는 스토리 부분에서도 AI 를 활용했다고 한다.\n그렇다 그들은 글쓰기 전문가 들이 아니다.\n시작은 AI 로 하는게 낭비를 줄일 수 있다.\n\"본인의 능력이 아닌 작가 능력을 키울 바엔 게임 만들기에 집중하자.\"\n어느정도 진행되면 전문 작가에게 맡기 면 될 일\n어떤 부분에서든 재작의 낭비는 줄여는 것이 좋다.\n그래픽 요소는 AI 다한 별 다른 언급은 없지만 게임 세상을 채울 많은 오브젝트들이 양산형 모델이 아니였을까 싶다.\n잡다한걸 다시 만들 이유가 없다 스토어에서 사면 되는 시대이다.\n \n5. 시대가 바뀌고 있다.\n나는 모바일 게임의 몰락은 뽑기 규제에서 왔다고 보는 입장이다.\n(규제하지 않았더라도 유저의 지갑은 고갈되어 쓸 돈이 없었을 것이다. 시간적으로도 끝이 왔었던 것이다.)\n시대는 바껴 버렸고 다시 이 시대가 오려면 10~20년은 걸릴 것이다.\n(유저의 지갑이 빵빵해질때 다시 올 것 같다.)\n새로운 시장이 열리고 있으며 발을 잘 담궈야할 시점이 온거 같다.\n매번 불황에서도 성공하는 게임들은 나왔고\n이들은 시대를 뛰어넘는 혁신을 가졌었다.\n전문가가 성공하는 방법은 하던걸 더 잘하는 방법 뿐이다.",
        "guid": "http://serverdown.tistory.com/1316",
        "categories": [
          "유튜브"
        ],
        "isoDate": "2025-05-13T01:53:50.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "NerdQaxe++ 나왔습니다. / 4.8TH 60Wh 80만원정도 / 전작대비 25%  가성비 향상",
        "link": "http://serverdown.tistory.com/1315",
        "pubDate": "Mon, 12 May 2025 16:46:52 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1315#entry1315comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"403\" data-origin-height=\"418\"><span data-url=\"https://blog.kakaocdn.net/dn/uX5L7/btsNVaGhOMj/KLifisUOkbiAavKIgHKzO1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/uX5L7/btsNVaGhOMj/KLifisUOkbiAavKIgHKzO1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/uX5L7/btsNVaGhOMj/KLifisUOkbiAavKIgHKzO1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FuX5L7%2FbtsNVaGhOMj%2FKLifisUOkbiAavKIgHKzO1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"403\" height=\"418\" data-origin-width=\"403\" data-origin-height=\"418\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">4.8TH / 60Wh / 489 유로<br />가격은 80만원 정도 입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">참고로 전작인 <span style=\"text-align: start;\">NerdQaxe+<br />2.4TH / 30W / 299 유로<br /></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">관세 때문에 적힌 가격보다 비싸게 사야할꺼 같긴합니다.</span></p>\n<p data-ke-size=\"size16\">NerdQaxe+ 성능당 가격은 299 유로 / 2.4TH = 125<br /><span style=\"text-align: start;\">NerdQaxe++ 성능당 가격은 489 유로 / 4.8TH = 100</span></p>\n<p data-ke-size=\"size16\">가성비는 20~25% 정도 좋아졌습니다.<br />좋은 제품이라고 봐야겠군요.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">소핑몰 링크: <a href=\"https://mineshop.eu/nerdqaxe-asic-miner-48ths-home-bitcoin-miner\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://mineshop.eu/nerdqaxe-asic-miner-48ths-home-bitcoin-miner</a></p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"1325\" data-origin-height=\"353\"><span data-url=\"https://blog.kakaocdn.net/dn/dpPrvi/btsNTkwQTvA/d2m6BZNK5tAPWOEbIMm8G0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/dpPrvi/btsNTkwQTvA/d2m6BZNK5tAPWOEbIMm8G0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/dpPrvi/btsNTkwQTvA/d2m6BZNK5tAPWOEbIMm8G0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdpPrvi%2FbtsNTkwQTvA%2Fd2m6BZNK5tAPWOEbIMm8G0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1325\" height=\"353\" data-origin-width=\"1325\" data-origin-height=\"353\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">아직 구입할 생각은 아니구요<br />중국산 1TH 짜리가 10만원이라고 하니 그걸 먼저 사볼 생각입니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>",
        "contentSnippet": "4.8TH / 60Wh / 489 유로\n가격은 80만원 정도 입니다.\n \n참고로 전작인 NerdQaxe+\n2.4TH / 30W / 299 유로\n\n관세 때문에 적힌 가격보다 비싸게 사야할꺼 같긴합니다.\nNerdQaxe+ 성능당 가격은 299 유로 / 2.4TH = 125\nNerdQaxe++ 성능당 가격은 489 유로 / 4.8TH = 100\n가성비는 20~25% 정도 좋아졌습니다.\n좋은 제품이라고 봐야겠군요.\n \n소핑몰 링크: https://mineshop.eu/nerdqaxe-asic-miner-48ths-home-bitcoin-miner\n\n\n \n아직 구입할 생각은 아니구요\n중국산 1TH 짜리가 10만원이라고 하니 그걸 먼저 사볼 생각입니다.",
        "guid": "http://serverdown.tistory.com/1315",
        "categories": [
          "코인",
          "bitaxe",
          "비트액스",
          "채굴기"
        ],
        "isoDate": "2025-05-12T07:46:52.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "오리 앱 / LSFG  VSR / 영상을 더 좋게 볼 수 잇다.",
        "link": "http://serverdown.tistory.com/1314",
        "pubDate": "Mon, 12 May 2025 00:51:35 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1314#entry1314comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"671\" data-origin-height=\"362\"><span data-url=\"https://blog.kakaocdn.net/dn/c0lUZn/btsNSosoiyF/B1Epuv9Ps7Nq6uFyOYIHR0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/c0lUZn/btsNSosoiyF/B1Epuv9Ps7Nq6uFyOYIHR0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/c0lUZn/btsNSosoiyF/B1Epuv9Ps7Nq6uFyOYIHR0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fc0lUZn%2FbtsNSosoiyF%2FB1Epuv9Ps7Nq6uFyOYIHR0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"671\" height=\"362\" data-origin-width=\"671\" data-origin-height=\"362\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\"><br /><br /></p>\n<p data-ke-size=\"size16\">이건강... 스팀에 있네요</p>\n<p data-ke-size=\"size16\">스팀: <a href=\"https://store.steampowered.com/app/993090/Lossless_Scaling/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://store.steampowered.com/app/993090/Lossless_Scaling/</a></p>\n<figure id=\"og_1746978648694\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Lossless Scaling on Steam\" data-og-description=\"All-in-one gaming utility for scaling and frame generation\" data-og-host=\"store.steampowered.com\" data-og-source-url=\"https://store.steampowered.com/app/993090/Lossless_Scaling/\" data-og-url=\"https://store.steampowered.com/app/993090/Lossless_Scaling/\" data-og-image=\"https://scrap.kakaocdn.net/dn/bQ5gpm/hyYThAMkqB/1GOEGl9gVmkXMHchnh1RCk/img.jpg?width=616&amp;height=353&amp;face=0_0_616_353,https://scrap.kakaocdn.net/dn/bC3KZT/hyYTlwoUmg/KxrFVk7mIInTpxuLTJPink/img.jpg?width=616&amp;height=353&amp;face=0_0_616_353\"><a href=\"https://store.steampowered.com/app/993090/Lossless_Scaling/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://store.steampowered.com/app/993090/Lossless_Scaling/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/bQ5gpm/hyYThAMkqB/1GOEGl9gVmkXMHchnh1RCk/img.jpg?width=616&amp;height=353&amp;face=0_0_616_353,https://scrap.kakaocdn.net/dn/bC3KZT/hyYTlwoUmg/KxrFVk7mIInTpxuLTJPink/img.jpg?width=616&amp;height=353&amp;face=0_0_616_353');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Lossless Scaling on Steam</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">All-in-one gaming utility for scaling and frame generation</p>\n<p class=\"og-host\" data-ke-size=\"size16\">store.steampowered.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">영상: <a href=\"https://www.youtube.com/watch?v=dkyv9zm__rY\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://www.youtube.com/watch?v=dkyv9zm__rY</a></p>\n<figure data-ke-type=\"video\" data-ke-style=\"alignCenter\" data-video-host=\"youtube\" data-video-url=\"https://www.youtube.com/watch?v=dkyv9zm__rY\" data-video-thumbnail=\"https://scrap.kakaocdn.net/dn/dpx4jK/hyYRmJXdyU/50cxxiCFeTwcQJNAjkCKq1/img.jpg?width=1280&amp;height=720&amp;face=288_240_1174_528,https://scrap.kakaocdn.net/dn/YsYGi/hyYTp6EnMk/KdWCdroak1oFe5kYKKZoKk/img.jpg?width=1280&amp;height=720&amp;face=288_240_1174_528\" data-video-width=\"860\" data-video-height=\"484\" data-video-origin-width=\"860\" data-video-origin-height=\"484\" data-ke-mobilestyle=\"widthContent\" data-video-title=\"이건 영상감상을 위한 기술입니다 (LSFG - 영상, VR 적용)\" data-original-url=\"\"><iframe src=\"https://www.youtube.com/embed/dkyv9zm__rY\" width=\"860\" height=\"484\" frameborder=\"\" allowfullscreen=\"true\"></iframe>\n<figcaption style=\"display: none;\"></figcaption>\n</figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">프레임 생성과</p>\n<p data-ke-size=\"size16\">고해상도</p>\n<p data-ke-size=\"size16\">기능을 실시간으로 사용할 수 있다고 합니다.</p>\n<p data-ke-size=\"size16\">하번 해봐야겠네요</p>\n<p data-ke-size=\"size16\">nvidia 그래픽카드를 사용해야한다고 합니다.</p>",
        "contentSnippet": "이건강... 스팀에 있네요\n스팀: https://store.steampowered.com/app/993090/Lossless_Scaling/\n\n \nLossless Scaling on Steam\nAll-in-one gaming utility for scaling and frame generation\nstore.steampowered.com\n\n \n \n영상: https://www.youtube.com/watch?v=dkyv9zm__rY\n\n\n\n \n프레임 생성과\n고해상도\n기능을 실시간으로 사용할 수 있다고 합니다.\n하번 해봐야겠네요\nnvidia 그래픽카드를 사용해야한다고 합니다.",
        "guid": "http://serverdown.tistory.com/1314",
        "categories": [
          "유튜브",
          "lsfg",
          "VSR",
          "업스케일링",
          "프레임생성"
        ],
        "isoDate": "2025-05-11T15:51:35.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "node.js express 와일드카드 (**) 못쓰게 되었네요 / missing parameter name / Unfinished Quotes",
        "link": "http://serverdown.tistory.com/1313",
        "pubDate": "Sun, 11 May 2025 00:36:15 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1313#entry1313comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"716\" data-origin-height=\"288\"><span data-url=\"https://blog.kakaocdn.net/dn/bwZrmV/btsNRLVwJQd/kyr5b0FJZOW4g0WfXPC3K1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bwZrmV/btsNRLVwJQd/kyr5b0FJZOW4g0WfXPC3K1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bwZrmV/btsNRLVwJQd/kyr5b0FJZOW4g0WfXPC3K1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbwZrmV%2FbtsNRLVwJQd%2Fkyr5b0FJZOW4g0WfXPC3K1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"716\" height=\"288\" data-origin-width=\"716\" data-origin-height=\"288\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">이번에 서버를 추가로 만들면서 버전이 달라 졌는데</p>\n<p data-ke-size=\"size16\">최신 서버는 켜지지가 않아서 알아봤습니다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">** (별 두개) 못쓰게 막혔네요</h2>\n<p data-ke-size=\"size16\">app.get(\"/posts/**\", (req, res)=&gt;{ ~~</p>\n<p data-ke-size=\"size16\">과 같이 /posts 이후의 값을 모두 받는 코드가&nbsp;<br />이젠 예외를 뱃습니다. (뭇쓴다는 이야기)</p>\n<p data-ke-size=\"size16\">Unfinished&nbsp;Quotes<br /><span style=\"text-align: start;\">이런 요류나</span></p>\n<p data-ke-size=\"size16\">missing&nbsp;parameter&nbsp;name<br />이런 요류가 발생하며 서버가 시작도 못하게 되네요</p>\n<p data-ke-size=\"size16\">로 표시되는 요류입니다.</p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">app.get(\"/posts/*name\", (req, res)=&gt;{ ~~</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이런식으로 *뒤에 파라메터 명이 와야합니다.<br />기능적으로는 뒤에 모든 값들은 받을 수 있게 됩니다.</span></p>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #7ca668;\">console.log(\"webgl\", req.params);</span><span style=\"color: #7ca668;\"></span></div>\n</div>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">이런식으로 req 의 params 를 읽어보면 뒷부분 내용이 들어있긴합니다.<br /></span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">하지만 저는 req.url 을 파싱하기 때문에 읽을일은 없는데</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">왜이케 불편하게 되어버린건지 ....</span></p>\n<p data-ke-size=\"size16\"><span style=\"text-align: start;\">또 시간 낭비 했습니다.</span></p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\"><span style=\"text-align: start;\">잘되던걸 왜 막이 놈들아!</span></h2>",
        "contentSnippet": "이번에 서버를 추가로 만들면서 버전이 달라 졌는데\n최신 서버는 켜지지가 않아서 알아봤습니다.\n \n** (별 두개) 못쓰게 막혔네요\napp.get(\"/posts/**\", (req, res)=>{ ~~\n과 같이 /posts 이후의 값을 모두 받는 코드가 \n이젠 예외를 뱃습니다. (뭇쓴다는 이야기)\nUnfinished Quotes\n이런 요류나\nmissing parameter name\n이런 요류가 발생하며 서버가 시작도 못하게 되네요\n로 표시되는 요류입니다.\napp.get(\"/posts/*name\", (req, res)=>{ ~~\n이런식으로 *뒤에 파라메터 명이 와야합니다.\n기능적으로는 뒤에 모든 값들은 받을 수 있게 됩니다.\nconsole.log(\"webgl\", req.params);\n이런식으로 req 의 params 를 읽어보면 뒷부분 내용이 들어있긴합니다.\n\n하지만 저는 req.url 을 파싱하기 때문에 읽을일은 없는데\n왜이케 불편하게 되어버린건지 ....\n또 시간 낭비 했습니다.\n \n잘되던걸 왜 막이 놈들아!",
        "guid": "http://serverdown.tistory.com/1313",
        "categories": [
          "프로그래밍/개발메모",
          "Express",
          "nodejs"
        ],
        "isoDate": "2025-05-10T15:36:15.000Z"
      },
      {
        "creator": "SIDNFT",
        "title": "github gist 붙여넣기를 활용해보자 / 코드 붙여넣기 서비스",
        "link": "http://serverdown.tistory.com/1312",
        "pubDate": "Thu, 8 May 2025 19:29:32 +0900",
        "author": "SIDNFT",
        "comments": "http://serverdown.tistory.com/1312#entry1312comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"480\" data-origin-height=\"144\"><span data-url=\"https://blog.kakaocdn.net/dn/bbpdFC/btsNPggJfVG/seyinimxojsNEBB2Ps1ki1/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/bbpdFC/btsNPggJfVG/seyinimxojsNEBB2Ps1ki1/img.png\"><img src=\"https://blog.kakaocdn.net/dn/bbpdFC/btsNPggJfVG/seyinimxojsNEBB2Ps1ki1/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbbpdFC%2FbtsNPggJfVG%2FseyinimxojsNEBB2Ps1ki1%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"480\" height=\"144\" data-origin-width=\"480\" data-origin-height=\"144\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">여기에서 글을 쓰고 블로그에 붙일 수 있나보다.</p>\n<p data-ke-size=\"size16\">gist: <a href=\"https://gist.github.com/\" target=\"_blank\" rel=\"noopener&nbsp;noreferrer\">https://gist.github.com/</a></p>\n<figure id=\"og_1746700058638\" contenteditable=\"false\" data-ke-type=\"opengraph\" data-ke-align=\"alignCenter\" data-og-type=\"website\" data-og-title=\"Discover gists\" data-og-description=\"GitHub Gist: instantly share code, notes, and snippets.\" data-og-host=\"gist.github.com\" data-og-source-url=\"https://gist.github.com/\" data-og-url=\"https://gist.github.com/starred\" data-og-image=\"https://scrap.kakaocdn.net/dn/iLVcT/hyYM2Ml6ZX/c7e3sAuH3cIIt0c8cqBFt0/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/eqjGoE/hyYM5vvnAD/63Qvh9sCEHQfAlUUfEvlB1/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/bgKwCQ/hyYMQrCO0V/51c0WAR5446R7zSnS8DCU0/img.png?width=300&amp;height=400&amp;face=0_0_300_400\"><a href=\"https://gist.github.com/\" target=\"_blank\" rel=\"noopener\" data-source-url=\"https://gist.github.com/\">\n<div class=\"og-image\" style=\"background-image: url('https://scrap.kakaocdn.net/dn/iLVcT/hyYM2Ml6ZX/c7e3sAuH3cIIt0c8cqBFt0/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/eqjGoE/hyYM5vvnAD/63Qvh9sCEHQfAlUUfEvlB1/img.png?width=1200&amp;height=630&amp;face=0_0_1200_630,https://scrap.kakaocdn.net/dn/bgKwCQ/hyYMQrCO0V/51c0WAR5446R7zSnS8DCU0/img.png?width=300&amp;height=400&amp;face=0_0_300_400');\">&nbsp;</div>\n<div class=\"og-text\">\n<p class=\"og-title\" data-ke-size=\"size16\">Discover gists</p>\n<p class=\"og-desc\" data-ke-size=\"size16\">GitHub Gist: instantly share code, notes, and snippets.</p>\n<p class=\"og-host\" data-ke-size=\"size16\">gist.github.com</p>\n</div>\n</a></figure>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">붙여보기</p>\n<div id=\"code_1746700138610\" data-ke-type=\"html\" data-source=\"&lt;script src=&quot;https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js&quot;&gt;&lt;/script&gt;\">\n<script src=\"https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js\"></script>\n</div>\n<p data-ke-size=\"size16\">들어간건가.. 미리 보기 안되넹 ...</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">배경색 검은색으로 고정은 안되려나 ..</p>\n<div style=\"background-color: #000000; color: #ffffff;\">\n<div><span style=\"color: #808080;\">&lt;</span><span style=\"color: #569cd6;\">div</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">style</span><span style=\"color: #ffffff;\">=</span><span style=\"color: #ffffff;\">\"</span><span style=\"color: #d4d4d4;\">background</span><span style=\"color: #ffffff;\">:</span><span style=\"color: #ce9178;\">black</span><span style=\"color: #ffffff;\">;</span><span style=\"color: #ffffff;\">\"</span><span style=\"color: #808080;\">&gt;</span></div>\n<div><span style=\"color: #808080;\">&lt;</span><span style=\"color: #569cd6;\">script</span><span style=\"color: #ffffff;\"> </span><span style=\"color: #9cdcfe;\">src</span><span style=\"color: #ffffff;\">=</span><span style=\"color: #ce9178;\">\"<a href=\"https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js\">https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js</a>\"</span><span style=\"color: #808080;\">&gt;&lt;/</span><span style=\"color: #569cd6;\">script</span><span style=\"color: #808080;\">&gt;</span></div>\n<div><span style=\"color: #808080;\">&lt;/</span><span style=\"color: #569cd6;\">div</span><span style=\"color: #808080;\">&gt;</span></div>\n</div>\n<p data-ke-size=\"size16\">이렇게 붙여넣어봤다.</p>\n<div id=\"code_1746702337411\" data-ke-type=\"html\" data-source=\"&lt;div style=&quot;background:black;&quot;&gt;\n&lt;script src=&quot;https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js&quot;&gt;&lt;/script&gt;\n&lt;/div&gt;\">\n<div style=\"background: black;\">\n<script src=\"https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js\"></script>\n</div>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<h2 data-ke-size=\"size26\">잘들어간거 확인됨</h2>\n<p data-ke-size=\"size16\">gist 페이지에서 코드를 수정할 수 가 없었다.</p>\n<p data-ke-size=\"size16\">내 컴에서 git clone 을 하고 고쳐서 올리면 바뀌는 것은 확인했다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-origin-width=\"414\" data-origin-height=\"363\"><span data-url=\"https://blog.kakaocdn.net/dn/nA2ki/btsNPgA3i64/B245uYmvUcTRPJko30EQr0/img.png\" data-phocus=\"https://blog.kakaocdn.net/dn/nA2ki/btsNPgA3i64/B245uYmvUcTRPJko30EQr0/img.png\"><img src=\"https://blog.kakaocdn.net/dn/nA2ki/btsNPgA3i64/B245uYmvUcTRPJko30EQr0/img.png\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FnA2ki%2FbtsNPgA3i64%2FB245uYmvUcTRPJko30EQr0%2Fimg.png\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"414\" height=\"363\" data-origin-width=\"414\" data-origin-height=\"363\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">글 작성후 오른족에 embed 라는 버튼이 있는데 눌러버몬 여러가지를 제공한다.</p>\n<p data-ke-size=\"size16\">embed 는 블로그 같은데 붙일 수 있는 html 태그를 주는 곳이고</p>\n<p data-ke-size=\"size16\">Clone a Htts 는 git clone 할 수 있는 주소를 준다.</p>\n<p data-ke-size=\"size16\">수정이 귀찮지만 붙여넣기엔 velog 만큼 좋으니 활용해 봐야겠다.</p>\n<p data-ke-size=\"size16\">md 파일은 아니라 모양을 낼 수 는 없었다.</p>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">흰바당에서도 검은 바탕에 흰글씨가 나오도록 강제하는 스타일을 구해서 추가했습니다.</p>\n<div id=\"code_1746704679016\" data-ke-type=\"html\" data-source=\"&lt;script src=&quot;https://gist.github.com/thisisone/51a65b00714a9c216ae09f83c8c0da7f.js&quot;&gt;&lt;/script&gt;\">\n<script src=\"https://gist.github.com/thisisone/51a65b00714a9c216ae09f83c8c0da7f.js\"></script>\n</div>\n<p data-ke-size=\"size16\">&nbsp;</p>\n<p data-ke-size=\"size16\">즐거운 블로그 생황이 되어라 얍</p>",
        "contentSnippet": "여기에서 글을 쓰고 블로그에 붙일 수 있나보다.\ngist: https://gist.github.com/\n\n \nDiscover gists\nGitHub Gist: instantly share code, notes, and snippets.\ngist.github.com\n\n \n붙여보기\n\n\n들어간건가.. 미리 보기 안되넹 ...\n \n배경색 검은색으로 고정은 안되려나 ..\n<div style=\"background:black;\">\n<script src=\"https://gist.github.com/thisisone/7d496222f4a975274a6d4dc1d506b2f5.js\"></script>\n</div>\n이렇게 붙여넣어봤다.\n\n\n\n \n \n \n잘들어간거 확인됨\ngist 페이지에서 코드를 수정할 수 가 없었다.\n내 컴에서 git clone 을 하고 고쳐서 올리면 바뀌는 것은 확인했다.\n\n\n글 작성후 오른족에 embed 라는 버튼이 있는데 눌러버몬 여러가지를 제공한다.\nembed 는 블로그 같은데 붙일 수 있는 html 태그를 주는 곳이고\nClone a Htts 는 git clone 할 수 있는 주소를 준다.\n수정이 귀찮지만 붙여넣기엔 velog 만큼 좋으니 활용해 봐야겠다.\nmd 파일은 아니라 모양을 낼 수 는 없었다.\n \n흰바당에서도 검은 바탕에 흰글씨가 나오도록 강제하는 스타일을 구해서 추가했습니다.\n\n\n \n즐거운 블로그 생황이 되어라 얍",
        "guid": "http://serverdown.tistory.com/1312",
        "categories": [
          "프로그래밍/개발메모",
          "gist",
          "github"
        ],
        "isoDate": "2025-05-08T10:29:32.000Z"
      }
    ]
  },
  {
    "name": "coolspeed",
    "category": "개인",
    "posts": []
  },
  {
    "name": "오늘도 끄적끄적",
    "category": "개인",
    "posts": []
  },
  {
    "name": "dx11 Vanica's Lifelog - 夢が夢で終わらないように",
    "category": "개인",
    "posts": []
  },
  {
    "name": "초코사랑",
    "category": "개인",
    "posts": []
  },
  {
    "name": "ZeroCho Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "imays게임엔진개발자",
    "category": "개인",
    "posts": []
  },
  {
    "name": "RSS feed for hurinmon Blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "기억보단 기록을",
    "category": "개인",
    "posts": [
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "중첩 부정문을 사용하지 말자",
        "link": "https://jojoldu.tistory.com/828",
        "pubDate": "Mon, 12 May 2025 08:46:01 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/828#entry828comment",
        "content": "<p data-ke-size=\"size16\">\"학벌 안보는 곳도 없지는 않아요\"<br />\"학벌 안 보는 곳도 꽤 있어요\"<br />이 둘은 (완곡함을 더 강조하기 위한 용도가 아니라면) 사실상 같은 의미다.<br />그럼에도 앞 문장은 두 번 부정이 겹쳐서 뇌가 잠깐 멈춘다.<br />대화에서 이런 <b>이중 부정</b>은 정보 전달 속도를 늦추고, 상대를 헷갈리게 만든다.</p>\n<p data-ke-size=\"size16\">코드로 치면 <code>if (false(false)) { &hellip; }</code> 같은 난해한 구문이다.<br />결국 하고 싶은 말은 단순히 <code>if (true) { &hellip; }</code> 일 경우가 훨씬 많다.</p>\n<p data-ke-size=\"size16\">이런 이중 부정문은 아래와 같은 이유로 흔히들 사용된다.</p>\n<ol style=\"list-style-type: decimal;\" data-ke-list-type=\"decimal\">\n<li><b>완곡어법 습관</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>\"학벌 <b>안</b>보는 곳도 <b>없지는 않아요</b>.\"</li>\n<li>부드럽게 돌려 말하다 보니 부정이 늘어난다.</li>\n</ul>\n</li>\n<li><b>강조 욕구</b>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>\"절대 <b>못</b> 말리는 사람이 <b>아니야</b>.\"</li>\n<li>\"말릴 수 있는 사람이야\" 보다 훨씬 더 강조하기 위해 부정이 늘어난다.</li>\n</ul>\n</li>\n</ol>\n<p data-ke-size=\"size16\">상대를 배려하기 위한 용도나 강조하기 위한 것, 혹은 한글의 다양한 문장들을 활용해 좀 더 세밀하고 정확한 표현을 위해서 사용을 할 순 있지만, 듣는 사람에겐 그 세밀한 차이 보다도 더 큰 문제인 <b>인지 부하</b>가 폭증한다.<br />\"안 / 없지 / 않아?\" 로 <b>반전의 반전을 계속해서 이어나가는 문장은 CPU를 100%</b> 로 만들어 버린다.</p>\n<p data-ke-size=\"size16\">아래 코드를 보자.</p>\n<pre class=\"less\"><code>// 이중 부정 버전\nif (!(!isAllowed)) {\n  performAction();\n}\n\n// 단일 긍정 버전\nif (isAllowed) {\n  performAction();\n}</code></pre>\n<p data-ke-size=\"size16\">개발자라면 두 번째가 훨씬 읽기 편하다.<br />대화도 똑같다.<br />긍정&middot;단문&middot;직진이 훨씬 더 효율적으로 소통할 수 있고, 상대를 배려해주는 방법이다.</p>\n<p data-ke-size=\"size16\">그래서 가능하면 대화에서도 다음과 같이 표현해보면 좋겠다.</p>\n<h2 data-ke-size=\"size26\">대화에서 if (true)를 쓰는 예</h2>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>❌ \"들으면 모를 사람은 거의 없어.\"</li>\n<li>✅ \"거의 다 알아 들어.\"</li>\n</ul>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>❌ \"쉬운 일은 아니지 않아요?\"</li>\n<li>✅ \"어려운 일이죠?\"</li>\n</ul>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>❌ \"그렇게 안 하는 사람도 없지 않아.\"</li>\n<li>✅ \"그렇게 하는 사람들도 있어.\"</li>\n</ul>\n<ul style=\"list-style-type: disc;\" data-ke-list-type=\"disc\">\n<li>❌ \"시간 없지 않으세요?\"</li>\n<li>✅ \"시간 있으세요?\"</li>\n</ul>\n<h2 data-ke-size=\"size26\">뇌 자원은 한정되어 있다</h2>\n<p data-ke-size=\"size16\">프로그래머가 가독성을 위해 불필요한 부정을 걷어내듯, 우리가 쓰는 언어도 긍정&middot;단순&middot;직선으로 정리하자.<br />상대의 뇌 CPU를 덜 잡아먹는 순간, 대화는 훨씬 빠르고, 오해는 현저히 줄어든다.</p>\n<p data-ke-size=\"size16\">말을 꺼내기 전, 머릿속에서 !(!) 를 true 로 컴파일해보자.</p>",
        "contentSnippet": "\"학벌 안보는 곳도 없지는 않아요\"\n\"학벌 안 보는 곳도 꽤 있어요\"\n이 둘은 (완곡함을 더 강조하기 위한 용도가 아니라면) 사실상 같은 의미다.\n그럼에도 앞 문장은 두 번 부정이 겹쳐서 뇌가 잠깐 멈춘다.\n대화에서 이런 이중 부정은 정보 전달 속도를 늦추고, 상대를 헷갈리게 만든다.\n코드로 치면 if (false(false)) { … } 같은 난해한 구문이다.\n결국 하고 싶은 말은 단순히 if (true) { … } 일 경우가 훨씬 많다.\n이런 이중 부정문은 아래와 같은 이유로 흔히들 사용된다.\n완곡어법 습관\n\n\"학벌 안보는 곳도 없지는 않아요.\"\n부드럽게 돌려 말하다 보니 부정이 늘어난다.\n강조 욕구\n\n\"절대 못 말리는 사람이 아니야.\"\n\"말릴 수 있는 사람이야\" 보다 훨씬 더 강조하기 위해 부정이 늘어난다.\n상대를 배려하기 위한 용도나 강조하기 위한 것, 혹은 한글의 다양한 문장들을 활용해 좀 더 세밀하고 정확한 표현을 위해서 사용을 할 순 있지만, 듣는 사람에겐 그 세밀한 차이 보다도 더 큰 문제인 인지 부하가 폭증한다.\n\"안 / 없지 / 않아?\" 로 반전의 반전을 계속해서 이어나가는 문장은 CPU를 100% 로 만들어 버린다.\n아래 코드를 보자.\n// 이중 부정 버전\nif (!(!isAllowed)) {\n  performAction();\n}\n\n// 단일 긍정 버전\nif (isAllowed) {\n  performAction();\n}\n개발자라면 두 번째가 훨씬 읽기 편하다.\n대화도 똑같다.\n긍정·단문·직진이 훨씬 더 효율적으로 소통할 수 있고, 상대를 배려해주는 방법이다.\n그래서 가능하면 대화에서도 다음과 같이 표현해보면 좋겠다.\n대화에서 if (true)를 쓰는 예\n❌ \"들으면 모를 사람은 거의 없어.\"\n✅ \"거의 다 알아 들어.\"\n❌ \"쉬운 일은 아니지 않아요?\"\n✅ \"어려운 일이죠?\"\n❌ \"그렇게 안 하는 사람도 없지 않아.\"\n✅ \"그렇게 하는 사람들도 있어.\"\n❌ \"시간 없지 않으세요?\"\n✅ \"시간 있으세요?\"\n뇌 자원은 한정되어 있다\n프로그래머가 가독성을 위해 불필요한 부정을 걷어내듯, 우리가 쓰는 언어도 긍정·단순·직선으로 정리하자.\n상대의 뇌 CPU를 덜 잡아먹는 순간, 대화는 훨씬 빠르고, 오해는 현저히 줄어든다.\n말을 꺼내기 전, 머릿속에서 !(!) 를 true 로 컴파일해보자.",
        "guid": "https://jojoldu.tistory.com/828",
        "categories": [
          "생각정리",
          "개발자",
          "개발팀",
          "소통",
          "커뮤니케이션",
          "협업"
        ],
        "isoDate": "2025-05-11T23:46:01.000Z"
      },
      {
        "creator": "향로 (기억보단 기록을)",
        "title": "클린 코더스",
        "link": "https://jojoldu.tistory.com/827",
        "pubDate": "Sat, 10 May 2025 21:18:28 +0900",
        "author": "향로 (기억보단 기록을)",
        "comments": "https://jojoldu.tistory.com/827#entry827comment",
        "content": "<p data-ke-size=\"size16\">그 시절의 취준생이라면 대부분 그렇겠지만 네이버, DAUM 2개 회사를 너무 입사하고 싶었다.</p>\n<p data-ke-size=\"size16\">두 회사에 인턴을 한 컴공과 친구 (난 컴공과가 아니여서 친구의 친구를 통해 찾아갔지만) 가 있으면 \"인턴해보니 어떠냐\" 와 같은 질문을 하고 인턴 경험을 들으면서 대리 만족 하고,<br />괜히 서울 갈 일이 있으면 목적지에서 2시간 거리여도 일단은 두 회사의 사옥 구경도 하고, 주변 산책도 하면서 여기에서 근무한다는건 어떤 기분일까 같은 상상을 하기도 했다.</p>\n<p data-ke-size=\"size16\">취업을 하고 커리어를 쌓아나가면서 두 회사가 업계 전체에 뿌린 기술적 씨앗들이 얼마나 컸는지 새삼 느끼게 되었다.<br />선배 개발자분들과 기술적인 이야기를 할 수 있는 기회가 상대적으로 적었던 입장에서 네이버와 DAUM 의 기술 공유는 두 회사에 대한 동경을 키웠다.<br />특히 DAUM의 수많은 개발자분들을 대상으로 2개월간 진행된 사내 교육인 백명석 님의 클린 코더스가 무료로 유튜브에 공유되고나서 정말 반복해서 시청했다.<br />(요즘의 엉클밥에 대한 평가는 아쉽지만)<br />당시 클린 코드 책을 보고 난 뒤 뒤라서 명석님의 클린 코더스 유튜브 영상들은 2번 3번씩 봐야할 내용들로 가득찬 느낌이였다.<br />\"세상에 이런 교육을 사내에서, 무료로, 직접 받아볼 수 있다니?\"<br />\"저런 내용의 교육이 도대체 사내에서 얼마나 많이, 자주 공유되고 있을까?\"<br />\"외부에 공개되지 못하는 사내 교육도 있을텐데 거기선 또 어떤 내용들이 공유되고 있을까?\"<br />\"교육을 해주시는 명석님과 같은 분들과 같이 일한다는건 어떤걸까?\"<br />등등<br />두 회사에 대한 동경이 더 커졌다.</p>\n<p data-ke-size=\"size16\">이후에 다른 책들, 실제 업무에서 얻은 경험들을 통해 스스로 어떻게 코드를 작성해야할지 갈무리해나가면서도 종종 명석님의 영상들을 다시 보면서 그 감각을 잃지 않으려고 했다.</p>\n<p data-ke-size=\"size16\">신입으로 입사하시는 개발자분들에게 항상 명석님의 클린 코더스 영상들은 꼭 보라고, 첫 PR 보내기 전에 클린 코더스는 먼저 꼭 보라는 이야기를 항상 했다.</p>\n<p data-ke-size=\"size16\">재밌던 것은 이후에 배민 입사하고나서 친해지신 분들과 대화하다보니깐 클린 코더스 영상들을 다들 보셨다는거다.<br />어떤 분들은 3번 보니깐 코드가 아예 달라졌다는 이야기도 하면서 말이다.<br />(물론 배민 전체가 그런건 아니라, 대화를 자주 나누는 분들에 한했지만)</p>\n<p data-ke-size=\"size16\">지금의 조직에 합류하고 나서도 개발팀에는 클린 코더스 영상을 가능하면 시간 내서 꼭 1회독 하라고 이야기 드린다.<br />이미 11년 넘게 지난 내용들이라 안맞는 부분이 있기도 하겠지만,<br />여전히 지금 봐도 좋은 내용들이 가득하기 때문이다.</p>\n<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"1.jpg\" data-origin-width=\"1486\" data-origin-height=\"430\"><span data-url=\"https://blog.kakaocdn.net/dn/1Oyw0/btsNRgVE2Nw/pFRjwibKnWM5qOLHMiXRnk/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/1Oyw0/btsNRgVE2Nw/pFRjwibKnWM5qOLHMiXRnk/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/1Oyw0/btsNRgVE2Nw/pFRjwibKnWM5qOLHMiXRnk/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2F1Oyw0%2FbtsNRgVE2Nw%2FpFRjwibKnWM5qOLHMiXRnk%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"1486\" height=\"430\" data-filename=\"1.jpg\" data-origin-width=\"1486\" data-origin-height=\"430\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">다만, 너무 오래전 영상들이라 화질이 조금 아쉽다.<br />480p&nbsp;화질의&nbsp;영상들이라&nbsp;요즘의&nbsp;고해상도&nbsp;환경에서는&nbsp;명석님께서&nbsp;작성하시는&nbsp;코드&nbsp;내용이나&nbsp;텍스트들이&nbsp;깨지거나&nbsp;흐릿하게&nbsp;보여서&nbsp;시청하기에&nbsp;조금&nbsp;어려움이&nbsp;있다.&nbsp;&nbsp;<br />그래서 우리 팀원들이 학습하는데 방해되는 요소가 없도록, 다른 주니어 개발자분들이 보시는데도 불편함이 없도록 하기 위해 백명석님께 허락을 받아 사내에서 자체적으로 구축한 <b>AI 기반 영상 업스케일링 파이프라인</b>을 통해 명석님의 <a href=\"https://inf.run/szkUi\">클린 코더스 영상들을 1080p 해상도로 업스케일링해서 무료로 강의를 런칭</a>하였다.</p>\n<p data-ke-size=\"size16\">그간의 커리어를 쌓아오면서 나를 채워주었던 많은 학습 자료들은 지금 커리어를 시작하시는 분들이 봐도 좋을 것들이 많다.<br />이런 학습 자료는 계속해서 인프런에서 부활 시켜서 오래오래 사랑받도록, 성장을 가속화 할 수 있도록 도움을 주고 싶다.</p>",
        "contentSnippet": "그 시절의 취준생이라면 대부분 그렇겠지만 네이버, DAUM 2개 회사를 너무 입사하고 싶었다.\n두 회사에 인턴을 한 컴공과 친구 (난 컴공과가 아니여서 친구의 친구를 통해 찾아갔지만) 가 있으면 \"인턴해보니 어떠냐\" 와 같은 질문을 하고 인턴 경험을 들으면서 대리 만족 하고,\n괜히 서울 갈 일이 있으면 목적지에서 2시간 거리여도 일단은 두 회사의 사옥 구경도 하고, 주변 산책도 하면서 여기에서 근무한다는건 어떤 기분일까 같은 상상을 하기도 했다.\n취업을 하고 커리어를 쌓아나가면서 두 회사가 업계 전체에 뿌린 기술적 씨앗들이 얼마나 컸는지 새삼 느끼게 되었다.\n선배 개발자분들과 기술적인 이야기를 할 수 있는 기회가 상대적으로 적었던 입장에서 네이버와 DAUM 의 기술 공유는 두 회사에 대한 동경을 키웠다.\n특히 DAUM의 수많은 개발자분들을 대상으로 2개월간 진행된 사내 교육인 백명석 님의 클린 코더스가 무료로 유튜브에 공유되고나서 정말 반복해서 시청했다.\n(요즘의 엉클밥에 대한 평가는 아쉽지만)\n당시 클린 코드 책을 보고 난 뒤 뒤라서 명석님의 클린 코더스 유튜브 영상들은 2번 3번씩 봐야할 내용들로 가득찬 느낌이였다.\n\"세상에 이런 교육을 사내에서, 무료로, 직접 받아볼 수 있다니?\"\n\"저런 내용의 교육이 도대체 사내에서 얼마나 많이, 자주 공유되고 있을까?\"\n\"외부에 공개되지 못하는 사내 교육도 있을텐데 거기선 또 어떤 내용들이 공유되고 있을까?\"\n\"교육을 해주시는 명석님과 같은 분들과 같이 일한다는건 어떤걸까?\"\n등등\n두 회사에 대한 동경이 더 커졌다.\n이후에 다른 책들, 실제 업무에서 얻은 경험들을 통해 스스로 어떻게 코드를 작성해야할지 갈무리해나가면서도 종종 명석님의 영상들을 다시 보면서 그 감각을 잃지 않으려고 했다.\n신입으로 입사하시는 개발자분들에게 항상 명석님의 클린 코더스 영상들은 꼭 보라고, 첫 PR 보내기 전에 클린 코더스는 먼저 꼭 보라는 이야기를 항상 했다.\n재밌던 것은 이후에 배민 입사하고나서 친해지신 분들과 대화하다보니깐 클린 코더스 영상들을 다들 보셨다는거다.\n어떤 분들은 3번 보니깐 코드가 아예 달라졌다는 이야기도 하면서 말이다.\n(물론 배민 전체가 그런건 아니라, 대화를 자주 나누는 분들에 한했지만)\n지금의 조직에 합류하고 나서도 개발팀에는 클린 코더스 영상을 가능하면 시간 내서 꼭 1회독 하라고 이야기 드린다.\n이미 11년 넘게 지난 내용들이라 안맞는 부분이 있기도 하겠지만,\n여전히 지금 봐도 좋은 내용들이 가득하기 때문이다.\n\n\n다만, 너무 오래전 영상들이라 화질이 조금 아쉽다.\n480p 화질의 영상들이라 요즘의 고해상도 환경에서는 명석님께서 작성하시는 코드 내용이나 텍스트들이 깨지거나 흐릿하게 보여서 시청하기에 조금 어려움이 있다.  \n그래서 우리 팀원들이 학습하는데 방해되는 요소가 없도록, 다른 주니어 개발자분들이 보시는데도 불편함이 없도록 하기 위해 백명석님께 허락을 받아 사내에서 자체적으로 구축한 AI 기반 영상 업스케일링 파이프라인을 통해 명석님의 클린 코더스 영상들을 1080p 해상도로 업스케일링해서 무료로 강의를 런칭하였다.\n그간의 커리어를 쌓아오면서 나를 채워주었던 많은 학습 자료들은 지금 커리어를 시작하시는 분들이 봐도 좋을 것들이 많다.\n이런 학습 자료는 계속해서 인프런에서 부활 시켜서 오래오래 사랑받도록, 성장을 가속화 할 수 있도록 도움을 주고 싶다.",
        "guid": "https://jojoldu.tistory.com/827",
        "categories": [
          "생각정리",
          "Daum",
          "네이버",
          "백명석",
          "엉클 밥",
          "인프런",
          "주니어 개발자",
          "클린 코더스",
          "클린코드"
        ],
        "isoDate": "2025-05-10T12:18:28.000Z"
      }
    ]
  },
  {
    "name": "WestwoodForever's Dev Log",
    "category": "개인",
    "posts": []
  },
  {
    "name": "허니몬(Honeymon)의 자바guru",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Wolf Loves Fox :: 일상",
    "category": "개인",
    "posts": []
  },
  {
    "name": "Game Programmer Life",
    "category": "개인",
    "posts": []
  },
  {
    "name": "IT 프리랜서 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "yuchi's dev",
    "category": "개인",
    "posts": []
  },
  {
    "name": "만화로 나누는 자유/오픈소스 소프트웨어 이야기",
    "category": "개인",
    "posts": []
  },
  {
    "name": "신현석(Hyeonseok Shin)",
    "category": "개인",
    "posts": []
  },
  {
    "name": "한상곤 - Sigmadream",
    "category": "개인",
    "posts": []
  },
  {
    "name": "개발자 울이 노트",
    "category": "개인",
    "posts": []
  },
  {
    "name": "즐거운 개발자 :: 네이버  블로그",
    "category": "개인",
    "posts": []
  },
  {
    "name": "황제펭귄의 게임개발이야기 [여기는 한국]",
    "category": "개인",
    "posts": []
  },
  {
    "name": "LINE ENGINEERING",
    "category": "기업",
    "posts": [
      {
        "title": "코드 품질 개선 기법 11편: 반복되는 호출에 함수도 지친다",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-11",
        "pubDate": "Wed, 14 May 2025 02:00:00 GMT",
        "content": "이 글은 2024년 2월 1일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회...",
        "contentSnippet": "이 글은 2024년 2월 1일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 회...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-11",
        "isoDate": "2025-05-14T02:00:00.000Z"
      },
      {
        "title": "AI로 생성한 이미지는 어떻게 평가할까요? (블랙박스 최적화 적용편)",
        "link": "https://techblog.lycorp.co.jp/ko/how-to-evaluate-ai-generated-images-2-blackbox-optimization",
        "pubDate": "Mon, 12 May 2025 02:00:00 GMT",
        "content": "생성형 AI 모델로 이미지 생성은 쉽죠, 그런데 '좋은 이미지' 생성도 쉬웠으면 좋겠어요!저희 회사에는 고유한 비율로 최소한의 디테일만 유지한 채 인체와 개체를 정의하는 이미지 스...",
        "contentSnippet": "생성형 AI 모델로 이미지 생성은 쉽죠, 그런데 '좋은 이미지' 생성도 쉬웠으면 좋겠어요!저희 회사에는 고유한 비율로 최소한의 디테일만 유지한 채 인체와 개체를 정의하는 이미지 스...",
        "guid": "https://techblog.lycorp.co.jp/ko/how-to-evaluate-ai-generated-images-2-blackbox-optimization",
        "isoDate": "2025-05-12T02:00:00.000Z"
      },
      {
        "title": "코드 품질 개선 기법 10편: 적절한 거리 유지에 신경 쓰자",
        "link": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-10",
        "pubDate": "Fri, 09 May 2025 03:00:00 GMT",
        "content": "이 글은 2024년 1월 25일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 ...",
        "contentSnippet": "이 글은 2024년 1월 25일에 일본어로 먼저 발행된 기사를 번역한 글입니다.안녕하세요. 커뮤니케이션 앱 LINE의 모바일 클라이언트를 개발하고 있는 Ishikawa입니다.저희 ...",
        "guid": "https://techblog.lycorp.co.jp/ko/techniques-for-improving-code-quality-10",
        "isoDate": "2025-05-09T03:00:00.000Z"
      }
    ]
  },
  {
    "name": "뱅크샐러드 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "우아한형제들 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "TOAST Meetup",
    "category": "기업",
    "posts": []
  },
  {
    "name": "ZUM 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "SK Planet",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Spoqa tech blog",
    "category": "기업",
    "posts": []
  },
  {
    "name": "팀 왈도 번역팀",
    "category": "게임",
    "posts": []
  },
  {
    "name": "근원님",
    "category": "개인",
    "posts": []
  },
  {
    "name": "호돌맨",
    "category": "개인",
    "posts": [
      {
        "creator": "호돌맨",
        "title": "퇴근의 빛",
        "link": "https://hodolman.tistory.com/74",
        "pubDate": "Tue, 13 May 2025 23:56:06 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/74#entry74comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC001735x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/baIySd/btsNXl8LVO7/rjsXhEtIgJ5kJmOAw0ixcK/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/baIySd/btsNXl8LVO7/rjsXhEtIgJ5kJmOAw0ixcK/img.jpg\" data-alt=\"퇴근의 빛\"><img src=\"https://blog.kakaocdn.net/dn/baIySd/btsNXl8LVO7/rjsXhEtIgJ5kJmOAw0ixcK/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbaIySd%2FbtsNXl8LVO7%2FrjsXhEtIgJ5kJmOAw0ixcK%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"2400\" height=\"3000\" data-filename=\"DSC001735x4.jpg\" data-origin-width=\"2400\" data-origin-height=\"3000\"/></span><figcaption>퇴근의 빛</figcaption>\n</figure>\n</p>\n<p data-ke-size=\"size16\">오후 6시, 많은 직장인들이 기다리던 빛</p>",
        "contentSnippet": "퇴근의 빛\n\n\n오후 6시, 많은 직장인들이 기다리던 빛",
        "guid": "https://hodolman.tistory.com/74",
        "categories": [
          "사진"
        ],
        "isoDate": "2025-05-13T14:56:06.000Z"
      },
      {
        "creator": "호돌맨",
        "title": "플라워 문",
        "link": "https://hodolman.tistory.com/73",
        "pubDate": "Mon, 12 May 2025 23:01:23 +0900",
        "author": "호돌맨",
        "comments": "https://hodolman.tistory.com/73#entry73comment",
        "content": "<p><figure class=\"imageblock alignCenter\" data-ke-mobileStyle=\"widthOrigin\" data-filename=\"DSC001655x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"><span data-url=\"https://blog.kakaocdn.net/dn/Llyb7/btsNUJPXGw6/k56Zkcx8QTRymkySqRnC41/img.jpg\" data-phocus=\"https://blog.kakaocdn.net/dn/Llyb7/btsNUJPXGw6/k56Zkcx8QTRymkySqRnC41/img.jpg\"><img src=\"https://blog.kakaocdn.net/dn/Llyb7/btsNUJPXGw6/k56Zkcx8QTRymkySqRnC41/img.jpg\" srcset=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FLlyb7%2FbtsNUJPXGw6%2Fk56Zkcx8QTRymkySqRnC41%2Fimg.jpg\" onerror=\"this.onerror=null; this.src='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png'; this.srcset='//t1.daumcdn.net/tistory_admin/static/images/no-image-v1.png';\" loading=\"lazy\" width=\"3000\" height=\"3000\" data-filename=\"DSC001655x4.jpg\" data-origin-width=\"3000\" data-origin-height=\"3000\"/></span></figure>\n</p>\n<p data-ke-size=\"size16\">2025년 5월 12일 저녁</p>",
        "contentSnippet": "2025년 5월 12일 저녁",
        "guid": "https://hodolman.tistory.com/73",
        "categories": [
          "사진",
          "플라워문"
        ],
        "isoDate": "2025-05-12T14:01:23.000Z"
      }
    ]
  },
  {
    "name": "박우빈",
    "category": "개인",
    "posts": []
  },
  {
    "name": "문다영",
    "category": "개인",
    "posts": []
  },
  {
    "name": "유수민",
    "category": "개인",
    "posts": []
  },
  {
    "name": "안건주",
    "category": "개인",
    "posts": []
  },
  {
    "name": "손현호",
    "category": "개인",
    "posts": []
  },
  {
    "name": "STARTUP BIBLE",
    "category": "개인",
    "posts": [
      {
        "creator": "Kihong Bae",
        "title": "VC는 끝나지 않았다",
        "link": "https://www.thestartupbible.com/2025/05/the-vc-game-is-not-dead.html",
        "pubDate": "Wed, 14 May 2025 21:33:00 +0000",
        "content:encodedSnippet": "요새 링크드인과 페이스북에서 VC의 종말에 대한 포스팅을 자주 볼 수 있다. 한국인, 외국인 할 것 없이, 이제 이 낙후된 VC의 투자 모델은 더 이상 지속될 수 없고, AI의 시대에 아직도 사람에게 집중하는 VC 모델은 더 이상 옛날처럼 작동할 수 없다는 주장들을 강하게 한다.\n실은 나도 몇 년 전에 이런 글을 쓴 적이 있다. 이 글은 VC가 끝났다는 말은 아니라, VC의 비즈니스 모델이 너무 오래돼서, 이제 우리 같은 투자자들이 돈을 버는 방식도 조금 바뀌어야 한다는 내용의 글이다. 그런데, 2017년도에 쓴 글인데, VC의 비즈니스 모델은 아직도 2/20 수수료 모델 그대로이긴 하다.\nVC가 죽었다고 하는 분들의 말을 들어보면, 몇 가지 공통된 부분이 있고, 솔직히 이 내용들은 추측이 아니라 사실이라서 나도 동의한다. 2021년 대비 시장에 투입되는 벤처 투자금이 절반 이상이 줄었다는 점, 엑싯 또한 신통치 않아서 수익률이 예전에 비하면 현저하게 떨어졌다는 점, VC들에게 자금을 제공하는 LP들 또한 과거 대비 VC 펀드 출자를 상당히 줄였다는 점, 등으로 인해서 벤처 투자는 그 어느 때보다 돈 버는 게 어려워졌다. 엑싯이 안 되면, 회수 시장이 제대로 작동하지 않고, 회수가 안 되면 VC에 자금을 제공하는 LP들에게 돈이 배분되지 않고, 이렇게 되면 시장에 돈이 안 돌기 때문에, 정말 어려운 시기임은 맞다.\n이런 거시적인 시장 상황 외에도 AI의 발달로 인해서 똑똑한 창업가들은 큰 투자 없이 큰 사업을 만들 수 있어서 더 이상 VC 투자가 이들에겐 매력적이지 않다는 이유, 개나 소나 펀드를 만들어서 창업가 대비 VC의 비율이 점점 더 VC에게 불리해지는 상황, 그리고 이제 과거와 같은 큰 혁신은 나오지 않는다는 이론 등으로 인해서 VC라는 산업 자체가 앞으로 없어질 것이라고 주장하는 분들도 많다. 특히, AI가 좋아지면서 조만간 사람이 하는 VC 투자를 기계가 대체할 수 있을 것이라는 분들도 있다.\n이런 의견과 시장 상황은 틀리지 않았다. 나 같은 VC도 매일매일 몸으로 느끼는 현실이다. 하지만, 나는 VC는 죽지 않았다고 생각한다. 실은, 완전히 그 반대라고 생각한다. 앞으로 좋은 창업가들을 발굴해서 투자하는 VC 산업은 더욱더 중요해질 것이고, 이들이 투자한 좋은 회사들이 큰 엑싯을 하면서 그들이 투자하는 지역의 경제를 가장 크게 성장시킬 것이라고 믿는다. 지금 우리가 보는 현상은 그 어떤 산업에서나 볼 수 있는 보정 과정이다. 코로나 기간 너무 많은 돈이 너무 빨리 시장에 풀려서 VC라는 게임이 살짝 고장 나긴 했지만, 이 또한 고쳐지고 치유될 것이다. 이미 그런 과정을 거치고 있고, 바보 같은 짓 안 하고 원칙을 지키면서 제대로 된 전략으로 투자했던 건강한 VC들만 살아남을 것이고, 살아남는 VC는 더욱더 강해질 것이다.\n그 어떤 시장이라도 너무 커지고, 돈이 너무 많이 집중되면, 이상한 사람들과 회사가 항상 생길 수밖에 없는데, 건강한 시장이라면, 결국 이런건 스스로 정화된다. 단지 시간이 좀 걸릴 뿐이다. 2020년과 2021년, 전 세계에 너무 많은 신생 VC가 생겼고 – 한국도 심할 정도로 많이 생겼다 – 이미 투자하고 있던 VC들도 펀드 규모를 엄청나게 불렸고, 그 큰 펀드의 존재를 정당화하기 위해 더 많은, 더 큰, 더 말도 안 되는 투자를 상당히 많이 했다. 그리고 그 대가를 우리가 모두 지금 치르고 있다.\n하지만, 그때나 지금이나 계속 건재하면서 잘하는 VC들도 많다. 이들은 시장이 어떻든 그냥 본인들이 잘하는 투자를 꾸준히 했고, 본인들이 해야 하는 투자를 꾸준히 했다. 시장의 상황에 따라서 투자하는 방법, 규모, 전략 등은 변하고 보정되고 미세조정 될 수 있지만, VC라는 업의 본질은 바뀌지 않을 것이고, VC는 끝나지 않았다. 아니, 이제 막 시작하고 있다고 난 생각한다.\n그리고 한 마디만 더. VC는 이제 끝났다고 하는 분들의 프로필을 대략 보면, 한 번도 제대로 펀드를 만들어서 투자를 해본 적이 없는 분들과 VC라는 타이틀은 있지만, 투자는 거의 안 하는 분들이 대부분이다. 항상 그렇듯이, 이런 분들의 말은 그냥 무시하면 된다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/05/the-vc-game-is-not-dead.html#respond",
        "content": "요새 링크드인과 페이스북에서 VC의 종말에 대한 포스팅을 자주 볼 수 있다. 한국인, 외국인 할 것 없이, 이제 이 낙후된 VC의 투자 모델은 더 이상 지속될 수 없고, AI의 시대에 아직도 사람에게 집중하는 VC 모델은 더 이상 옛날처럼 작동할 수 없다는 주장들을 강하게 한다. 실은 나도 몇 년 전에 이런 글을 쓴 적이 있다. 이 글은(...)",
        "contentSnippet": "요새 링크드인과 페이스북에서 VC의 종말에 대한 포스팅을 자주 볼 수 있다. 한국인, 외국인 할 것 없이, 이제 이 낙후된 VC의 투자 모델은 더 이상 지속될 수 없고, AI의 시대에 아직도 사람에게 집중하는 VC 모델은 더 이상 옛날처럼 작동할 수 없다는 주장들을 강하게 한다. 실은 나도 몇 년 전에 이런 글을 쓴 적이 있다. 이 글은(...)",
        "guid": "https://www.thestartupbible.com/?p=9444",
        "categories": [
          "Uncategorized",
          "Strong",
          "vc"
        ],
        "isoDate": "2025-05-14T21:33:00.000Z"
      },
      {
        "creator": "Kihong Bae",
        "title": "AI가 아니라 사업이다",
        "link": "https://www.thestartupbible.com/2025/05/its-the-business-that-matters-not-the-ai.html",
        "pubDate": "Sun, 11 May 2025 21:30:00 +0000",
        "content:encodedSnippet": "나는 1999년도에 스탠포드 대학원에 입학하면서 실리콘밸리에 처음 왔다. 아무것도 모르는 학생이었지만, 이 동네는 한국과는 아주 다르고, 심지어 미국의 다른 지역과도 많이 다르다는 걸 당시에도 직관적으로 느낄 수 있었다. 창업가나 VC 네트워크가 전혀 없었지만, 벤처 관련 수업을 몇 개 들으면서, 스타트업과 entrepreneurship에 대한 관심이 많이 생겼고, 팀을 만들어 사업계획서도 만들어 보고, 이 동네의 네트워킹 행사에도 다니면서 다양한 사업계획서를 봤고, 이보다 더 다양한 창업가들을 만날 수 있었다.\n지금 생각하면 상당히 우습지만, 그땐 10명 중 9명의 창업가가 어떤 사업을 하냐고 물어보면, “인터넷 기반의” 사업을 하고 있고, 앞으로 세상을 완전히 바꿀 수 있다고 답변했다. 사업 계획서 10개 중 9개의 표지에는 “인터넷 기반의 혁신적 xxx”라는 설명이 있었고, 더 재미있는 건, 이런 피칭을 듣거나, 사업계획서를 보면 대부분 투자자들이 “와, 인터넷 기반이라고? 대박인데”와 비슷한 반응을 보였다. 어떤 사업인지 보단, 인터넷 기반이라는 점이 이들에겐 훨씬 더 중요했다.\n블록체인이 한창 유행할 때도 비슷한 현상을 볼 수 있었다. 어떤 사업을 하고 있냐고 물어보면, “블록체인 기반의” 혁신적인 사업을 하고 있다고 하면서, “우린 다릅니다. 왜냐하면 이건 블록체인 기반이기 때문이죠.”라는 MSG를 항상 너무 많이 쳤고, 이들을 대하는 투자자들도 블록체인이라는 단어에 홀린 듯이 반응했다.\n블록체인은 반짝하다가 메인스트림으로 진입하는 데 실패했지만, 인터넷 기반의 사업은 이제 사업의 기본이 됐다. 모든 사업은 인터넷 위에서 돌아가기 때문에 이제 그 누구도 “인터넷 기반의”라는 말을 안 한다. 그냥 모든 게 인터넷 기반이기 때문이다.\n2000년대 초반, “인터넷 기반의 혁신적 사업”에 투자했던 VC 중, 가장 성공한 스타트업에 투자해서 가장 많은 돈을 벌었던 투자자들은 누구였을까? 바로 “인터넷 기반”이라는 말에 집착하지 않고, 그 인터넷 기반의 “사업”에 집중했던 사람들이다. 중요한 건, 어떤 사업이고, 어떤 방식으로 돈을 벌고, 돈을 정말 벌 수 있는 사업인지를 판단하고, 그 사업 모델이 인터넷을 만나면 얼마큼 더 커질 수 있는지를 볼 수 있는 능력이다. 인터넷 기반이라는 말에 현혹돼서 어떤 사업인진 제대로 파악도 안 하고 그냥 투자한 사람들은 대부분 크게 망했다.\n블록체인 기반의 사업들도 마찬가지다. 그나마 아직 살아있거나, 잘되고 있는 블록체인 스타트업은 비즈니스 모델이 탄탄한 곳들이다. 블록체인 기반이 중요한 게 아니라, 어떤 사업인지가 훨씬 더 중요하고, “블록체인 기반”보단 “사업”을 보고 투자한 VC들의 성적이 훨씬 더 좋다.\n요새 나는 이 현상이 AI와 함께 다시 반복되고 있다는 걸 매일 느끼고 있다. 너무 많은 창업가들이 “AI 기반의” 사업을 하고 있고, 대부분의 회사 소개는 “우린 AI 기반의 xxx입니다. 이게 곧 미래이고, 우린 세상을 바꿀 것입니다.”로 시작한다. 그리고 여전히 너무 많은 VC들이 어떤 사업인지, 어떻게 돈을 버는지, 그리고 이게 말이 되는 사업인지를 파악하기보단, “AI” 그 자체에 더 많은 무게를 싣고 있다. 앞으로 2년 후면, 도입의 수준은 다르겠지만, 모든 사업은 AI를 활용할 것이다. 그리고 그때가 되면 그 누구도 사업을 설명할 때 “AI 기반의 xxx”라고 하지 않을 것이다. 인터넷 기반, AI 기반은 그냥 기본이 될 것이다.\n세월이 바뀌고, 기술이 발전하더라도, 본질은 변하지 않는다. 인터넷 기반의 사업, 블록체인 기반의 사업, AI 기반의 사업, 모두 인터넷, 블록체인, AI가 중요한 게 아니라, “사업”이 중요한 거다. 유행어에 현혹되지 말고, 사업의 본질에 집중하자. 이건 창업가, 투자자, 모두에게 해당한다.",
        "dc:creator": "Kihong Bae",
        "comments": "https://www.thestartupbible.com/2025/05/its-the-business-that-matters-not-the-ai.html#respond",
        "content": "나는 1999년도에 스탠포드 대학원에 입학하면서 실리콘밸리에 처음 왔다. 아무것도 모르는 학생이었지만, 이 동네는 한국과는 아주 다르고, 심지어 미국의 다른 지역과도 많이 다르다는 걸 당시에도 직관적으로 느낄 수 있었다. 창업가나 VC 네트워크가 전혀 없었지만, 벤처 관련 수업을 몇 개 들으면서, 스타트업과 entrepreneurship에 대한 관심이 많이 생겼고, 팀을 만들어 사업계획서도 만들어 보고, 이 동네의 네트워킹 행사에도 다니면서(...)",
        "contentSnippet": "나는 1999년도에 스탠포드 대학원에 입학하면서 실리콘밸리에 처음 왔다. 아무것도 모르는 학생이었지만, 이 동네는 한국과는 아주 다르고, 심지어 미국의 다른 지역과도 많이 다르다는 걸 당시에도 직관적으로 느낄 수 있었다. 창업가나 VC 네트워크가 전혀 없었지만, 벤처 관련 수업을 몇 개 들으면서, 스타트업과 entrepreneurship에 대한 관심이 많이 생겼고, 팀을 만들어 사업계획서도 만들어 보고, 이 동네의 네트워킹 행사에도 다니면서(...)",
        "guid": "https://www.thestartupbible.com/?p=9441",
        "categories": [
          "Uncategorized",
          "ai",
          "internet",
          "Strong",
          "technology",
          "vc",
          "web3"
        ],
        "isoDate": "2025-05-11T21:30:00.000Z"
      }
    ]
  },
  {
    "name": "매거진 입맛",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "요즘 IT",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "지마켓 기술 블로그",
    "category": "기업",
    "posts": []
  },
  {
    "name": "Kimchi hill",
    "category": "큐레이션",
    "posts": []
  },
  {
    "name": "Hudi.blog",
    "category": "개인",
    "posts": []
  },
  {
    "name": "토스",
    "category": "기업",
    "posts": [
      {
        "title": "자립준비청년 3인에게 토스증권 인턴십은 어떤 의미였을까?",
        "link": "https://blog.toss.im/article/securities-internship-interview",
        "pubDate": "Wed, 14 May 2025 10:25:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}대한민국에서는 매년 약 2,500명의 자립준비청년*이 아동복지시설 또는 위탁가정을 떠나 경제적으로, 그리고 정서적으로 홀로서기를 시작합니다.\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}*자립준비청년: 아동복지시설, 공동생활가정, 또는 가정위탁과 같은 보호 체계에서 만 18세 이후 보호가 종료된 청년\n하지만 이들 중 다수는 취약한 경제적 기반과 금융 정보의 부족으로 안정적인 자립에 어려움을 겪고 있는데요. 이런 현실 속에서 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}금융 사각지대에 놓인 청년들에게 작게라도 도움을 제공하기 위해, 토스증권이 작년 가을 초록우산어린이재단과 함께 금융 교육 프로그램을 진행했습니다.\n전국에서 모집된 14명의 청년이 참여한 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}이 프로그램은 금융 지식 전달뿐만 아니라, 개인 맞춤형 멘토링과 소정의 후원금이 제공되었는데요. 또한, 참가자 중 별도 전형을 거쳐 토스증권에서 3개월 이상 인턴십을 경험할 수 있는 기회도 제공되었습니다.\n인턴십은 진로 모색과 자립 역량 강화를 목적으로 진행되었는데요. 3개월 간 인턴십에 참여한 채린님, 의성님, 태현님과의 대화를 통해 이번 경험이 세 사람에게 어떤 변화를 주었는지, 느낀 점은 무엇인지 들어보았습니다.\n\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}Q. 이번 인턴십 프로그램에 지원하게 된 계기는 무엇일까요?\n채린: 학원 강사로 일하면서, 미술을 가르치는 것보다 상담을 통해 학생과 학부모에게 해결책을 찾아주는 과정에서 더 큰 흥미를 느꼈는데요. 다양한 연령대의 고객과 상담하고, 급변하는 입시 트렌드를 분석했던 경험이 금융권 업무에서도 강점이 될 수 있다고 생각했어요. 마침 자립정보 플랫폼에서 토스증권의 금융 기초 교육 프로그램을 알게 되었고, 서류와 인터뷰 전형을 통해 인턴십 기회를 얻었어요.\n의성: 스무 살에 산업 현장에서 일하며 혁신의 필요성을 몸소 느꼈고, 이후 경제학도로서 기술 혁신을 탐구했었는데요. 토스증권에서 일하게 된다면, 현장에서 금융 혁신이 어떻게 구현되는지 경험할 수 있을 것 같아 인턴십에 지원하게 되었어요.\n태현: 인턴십 모집 공고를 통해 접한 토스증권의 업무 방식이나 문화가 제가 추구하는 가치관과 맞아 지원을 결심하게 됐어요. 여담이지만, 개인적으로 가장 잘 쓰고 있는 금융 앱이 ‘토스’라서, 더더욱 관심이 가기도 했어요.\nQ. 서류 전형부터 인터뷰까지 어떻게 준비를 하셨을까요?\n태현: 앞서 공기업기나 사기업 서류, 면접 준비를 여러 방면으로 해왔는데요. 당시 준비했던 내용을 비롯해 토스 관련 뉴스나 홈페이지를 꼼꼼하게 살펴봤어요. 예상 밖의 질문도 많았지만, 평소 토스앱을 즐겨 사용하다 보니 그 경험을 바탕으로 잘 대처했던 것 같아요.\nQ. 인턴십 최종 합격 안내를 받았을 때 어떠셨나요?\n채린: 자립준비청년으로서의 마지막 해였던지라, 인턴으로서 일할 수 있는 기회가 매우 간절했는데 최종 합격 소식을 듣고 정말 기뻤어요. 사실, 인턴십에 지원한 사실을 주변에 알리지 않았었는데요. 합격 소식을 가족과 친구들에게 알렸을 때 다들 기뻐해주셔서 좋았던 것 같아요. 그래서 이번 인턴십 기회를 잘 활용해야겠다는 다짐을 했어요.\nQ. 출근 첫날의 기분은 어땠나요? 어떤 생각도 하셨는지 궁금해요\n채린: 회사 생활이 처음이라, 사무실은 어떤 분위기일지 상상이 안됐어요. 막상 출근하고 보니, 다들 편안한 옷차림에 자유로운 분위기에서 일하고, 개인 시간을 갖는 모습에 놀랐어요. 특히 팀원분들이 모두 친절해서 ‘이게 MZ 세대 회사의 모습이 아닐까?’라는 생각도 들었어요. 업무 배정을 받고, 바쁘게 일하는 분들의 모습을 보며 나도 저렇게 일하고 싶다는 생각도 했던 것 같아요.\n태현: 사실 출근 전날 밤부터 ‘잘할 수 있을까?’와 같은 생각으로 긴장이 됐어요. 아무래도 증권사에서 일한 경험이 없다보니, 누를 끼치지 않을까 걱정이 됐는데요. 첫 업무를 마치고 퇴근하면서 스스로 만족하지 못해 자책했던 것 같아요. 그렇지만, 팀 동료분들께서 첫날부터 제가 힘을 낼 수 있게 많은 도움도 주시고 응원도 해주셔서, 더 잘해야겠다는 다짐을 했던 기억이 나요.\n\n3개월 간 토스증권 인턴십에 참여한 태현님(좌)과 채린님(우)\nQ. 인턴십에 참여하며 가장 기억에 남는 순간이 있다면 무엇일까요?\n채린: 고객의 상황에 따라 맞춤형 해결책을 고민하고, 최선을 다하는 팀 동료 분들의 모습이 가장 기억에 남는 순간 중 하나인 것 같아요. 인턴으로서 이런 상황을 경험하면서, 고객의 상황을 이해하고 해결책을 찾는 일이 얼마나 보람찬지 깨닫게 되었어요.\n의성: 팀의 업무를 효율화하는데 기여했던 경험이 가장 기억에 남아요. 기존에 수기로 특정 요인을 검증하는 방식이 비효율적인 것 같아, 자동으로 검증할 수 있는 RPA(Robotic Process Automation, 로봇 프로세스 자동화)를 동료분들의 지원 아래 개발하게 되었는데요. RPA를 만들기 위해 퇴근 후 혼자 다양한 가설을 세우고, 테스트를 하며 몰입했던 경험을 통해 배움을 성취를 느낄 수 있었어요.\n태현: 팀 동료분들로부터 “정말 고생 많았다”, “이제는 능숙하게 일을 처리하는 것 같다” 등의 칭찬을 받았을 때 큰 힘이 되었던지라 가장 기억에 남는 것 같아요. 소소하지만, 인턴 동기들과 일상에서 갖는 시간들도 위로가 되었어요.\nQ. 인턴십을 통해 본인에게 일어난 변화가 있을까요?\n채린: 처음 토스증권 인턴십에 지원했을 때, 과연 내가 될 수 있을지 걱정했는데요. 큰 회사는 충분한 경력과 자격을 갖춰야만 도전할 수 있다는 생각이 컸던 것 같아요. 하지만, 서류와 인터뷰 과정을 거쳐 최종합격을 하고, 일에 점차 능숙해지는 제 모습을 보며, ‘나도 할 수 있다’는 자신감을 얻었어요. 앞으로는 일하고 싶은 분야나 회사가 있다면, 이전처럼 고민하지 않고 적극적으로 도전하려고 해요.\n의성: 사람들의 재정 관리에 도움이 되는 서비스를 직접 만들고 싶은 목표가 생겼어요. 그래서 프로그래밍 역량을 키우고 싶다는 열망도 커졌고요. 태현님과 토스증권 사내 교육에 참여한 후 여러 이야기를 나누다가, 사람들이 일상 생활에서 돈을 모으고, 불리고, 지키는 전반적인 과정에 적용할 수 있는 서비스를 만든다면 도움이 되지 않을까 생각했는데요. 더 나아가, 개인적으로 만들어 활용했던 재정 관리 메뉴얼을 서비스에 녹여내어, 많은 분들이 보다 쉽고 편리하게 자산을 만들고, 운용하는데 도움이 되는 서비스를 만들어보고 싶어요.\nQ. 이번 인턴십 경험이 본인의 진로 설정에 어떤 영향을 주었을까요?\n채린: 이번 경험을 통해 현명한 투자 방식과 자산 관리의 중요성에 대해 다시 한번 깨닫게 되었는데요. 저처럼 자립을 준비하는 청년이나 디지털 금융 서비스 이용이 어려운 어르신들까지 ‘금융 사각지대’에 놓인 분들께 실질적 도움을 드리는 금융 전문가가 되고 싶다는 목표가 생겼어요.\n태현: 아직 진로에 대한 고민이 많은 편인데요. 그렇다 보니 인턴십을 비롯해 다양한 경험을 좀 더 해보면서 제게 적합한 직무를 탐색하고 싶은 욕심이 있어요. 물론, 토스증권 인턴십을 통해 증권사에 대한 관심이 높아져서, 나중에 토스증권에도 도전해보고 싶다는 생각이 강해졌어요.\nQ. 토스증권 인턴십 경험을 한 문장으로 표현한다면?\n채린: 토스증권에서의 인턴십은 저 스스로 어떤 방향으로 성장해야 할지 깨닫게 해준 ‘삶의 나침반’ 같았어요.\n의성: 토스증권의 업무 문화와 핵심 가치, 훌륭한 동료들을 직접 경험하며, 일에 대한 나만의 기준점을 정립할 수 있었던 것 같아요.\nQ. 마지막으로 자립을 준비 중인 다른 청년들에게 하고 싶은 말이 있다면?\n채린: 좋은 기회는 ‘도전’이 수반되었을 때 찾아오는 것 같아요. 완벽한 준비보다 중요한 것은 도전하는 용기라고 생각해요. 저 또한 금융과 무관한 전공이었지만, 토스증권의 인턴십에 도전해 소중한 성장의 기회를 얻었던 것 같아요. 앞으로 저도 계속 도전을 이어나갈 예정인데요. 함께 용기를 내봤으면 좋겠어요. 화이팅!\n의성: 우리는 ‘자립’을 목표로 해요. 특히, 경제적 자립이 중요한데요. 저도 이 목표를 달성하기 위해 결심을 행동으로 옮기며 부단한 노력을 했고, 지금은 어느 정도 목표를 이루게 된 것 같아요. 보다 나은 삶을 위해 한발 한발 걸어나간다면, 우리 스스로에게도, 그리고 같은 상황에 있는 후배들에게도 더 나은 세상이 열릴 거라 믿어요.\n태현: 보호 종료 및 연장 종료를 앞두고, 자립을 맞이하는 것이 두렵거나 걱정될 수 있을 것 같아요. 자립준비청년 대상으로 정부와 다양한 기관에서 제공하는 정보와 지원이 많으니 적극 활용해보시면 좋겠어요. 이런 정보나 지원을 잘 찾아보면, 토스증권 인턴십과 같은 좋은 기회를 발견할 수 있어요.\n*참가자의 요청에 따라, 일부 인터뷰이의 이름은 가명으로 표기되었습니다.",
        "content": "누군가에겐 첫 도전, 누군가에겐 나침반이 되어준 시간",
        "contentSnippet": "누군가에겐 첫 도전, 누군가에겐 나침반이 되어준 시간",
        "guid": "https://blog.toss.im/article/securities-internship-interview",
        "isoDate": "2025-05-14T10:25:00.000Z"
      },
      {
        "title": "MLB를 살리러 온 구원자, 이정후와 오타니",
        "link": "https://blog.toss.im/article/moneyball-2",
        "pubDate": "Fri, 09 May 2025 04:35:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}'바람의 손자' 이정후 덕분에 요즘 MLB(메이저리그 베이스볼)에 관심을 갖는 팬들이 부쩍 늘어났습니다. 이정후는 지난 시즌 부진했던 소속 팀 샌프란시스코 자이언츠가 리그 정상급 팀으로 부상하는 데 큰 역할을 하고 있죠.\n이정후가 활약하고 있는 .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}MLB는 최근 산업 전반에 걸쳐 큰 환경 변화를 겪고 있습니다. MLB가 미국 국내 시장보다 해외 시장에서 수익 확대 전략에 초점을 맞추고 있는 것도 이 변화와 깊은 관련이 있어요. 전통적인 사업 모델이 흔들리는 가운데, MLB는 어떤 전략으로 산업 구조를 바꿔 나가고 있을까요?\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n.css-18442ym{font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}.css-jfs1hr{white-space:pre-wrap;font-size:13px;line-height:1.7;word-break:keep-all;letter-spacing:0em;color:var(--adaptiveGrey600);white-space:pre-wrap;}샌프란시스코에서 활약 중인 이정후 / 사진: 로이터\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}MLB의 효자 상품,\n지역 중계권\n미국 5대 프로스포츠의 중계권료를 보면, 왜 미국을 ‘프로 스포츠의 천국’이라 부르는지 잘 알 수 있습니다.\n미국 프로스포츠 중계권 수익은 크게 전국 방송, 지역 방송, 해외 중계로 나뉩니다. 이 가운데 전국 방송 중계권료만 보면 NFL(내셔널 풋볼 리그)이 약 18조 5,000억 원으로 가장 높고, NBA(전미 농구 협회)가 약 5조 3,000억 원으로 그 뒤를 잇습니다. MLB의 전국 방송 중계권료 수입은 약 2조 7,000억 원 규모입니다.\n\n전국 방송 중계권료 측면에서 MLB는 3위지만, 지역 방송 중계권을 놓고 보면 단연 1위입니다. 지역 방송 중계권은 특정 구단이 위치한 지역에서만 제공되는 TV 중계 방송권을 의미해요.\n야구는 경기 수가 많고, 시청률도 어느 정도 보장되기 때문에, 지역 방송사들이 가장 선호하는 콘텐츠였습니다. 덕분에 MLB 구단은 지역 중계권료만으로 막대한 수익을 거둘 수 있었어요.\n미국 주요 프로 스포츠 리그 가운데, 리그 전체 수입에서 지역 중계권료 비중이 가장 높은 것도 MLB입니다. MLB는 전체 수입 가운데 23%가 지역 중계권료 수입이죠. NBA(13%), NHL(12%)에 비해 월등히 높은 수준이며, NFL은 고작 1%에 불과합니다.\n\n급변하는 환경에\n무너지는 MLB 지역 중계권\n하지만 최근 5년 사이, MLB 구단들의 지역 중계권 시장은 빠르게 무너지고 있습니다. 미국의 젊은 세대가 야구에 큰 관심을 보이지 않는 데다가, 코드 커팅*까지 확산된 탓이죠. 2023년 조사에 따르면, 18~29세 미국인 중 야구를 ‘가장 즐겨 보는 스포츠’로 꼽은 비율은 고작 5%에 불과합니다.\n* 코드 커팅: Cord-cutting, 유료 방송 시청자가 가입을 해지하고 인터넷TV, OTT 등 새로운 플랫폼으로 이동하는 현상\nOTT와 유튜브 중심으로 미디어 환경이 재편되면서, 케이블 TV 기반의 중계 모델은 경쟁력을 잃었고, 지역 방송사들은 MLB 중계 횟수를 줄이기 시작했습니다. 인기가 하락한 MLB는 지역 방송사의 유료 회원을 끌어들이는 데 더 이상 도움이 되지 않았고, 잦은 경기 수에 따라 발생하는 높은 중계 제작비도 방송사 입장에서 큰 부담이기 때문이죠.\n\n2023년, 클리블랜드 가디언스와 샌디에이고 파드리스를 포함한 4개 MLB 구단은 지역 방송사의 파산으로 지역 중계권료 수입에 큰 타격을 입었습니다. 2024년에도 지역 중계권 시장의 어려움은 계속됩니다. 볼티모어 오리올스의 지역 중계권 수입은 전년 대비 40% 감소했고, 워싱턴 내셔널스 역시 같은 기간 20% 줄었습니다.\nMLB 사무국은 무너지는 지역 중계권 모델에 대응해 새로운 플랫폼을 통한 중계 방식을 준비하고 있습니다. 그러나 과거 수준의 수익을 회복하는 것은 쉽지 않아 보였고, 새로운 돌파구를 찾아야만 했어요.\nMLB를 살리러 온 구원자\n오타니 쇼헤이\n사실 MLB는 지역 중계권이 무너지고 있다는 걸 일찌감치 감지하고 있었어요. 유럽 시장 진출을 위해 2019년에 MLB 런던시리즈의 막을 연 것도 그 때문이었죠. 다행히 런던시리즈는 성공적이었습니다. 뉴욕 양키스와 보스턴 레드삭스가 펼친 첫 경기는 해외 경기 역사상 최다 관중 기록인 59,659명을 동원했고, 굿즈 판매에서도 신기록을 세웠습니다.\n하지만 지역 중계권이 붕괴된 MLB 구단들에게 유럽 시장은 당장 해결책이 될 순 없었습니다. 유럽에서 MLB를 제대로 확장하려면 오랜 시간이 걸릴 수밖에 없었기 때문이죠.\n\nMLB 런던시리즈에 등장한 해리 왕자와 왕자비 메건 마클 / 사진: 로이터\n이때 등장한 인물이 바로 일본의 오타니 쇼헤이입니다. MLB 최고의 스타로 떠오른 오타니는 투타 겸업, 이른바 ‘이도류’로 야구 팬들의 낭만을 다시 일깨운 주인공입니다.\n2024년, 오타니가 LA 다저스로 이적한 첫 해에 월드시리즈 우승까지 차지하자, MLB는 다시 한 번 ‘야구 르네상스’를 꿈꾸게 됩니다. 뉴욕 양키스와 LA 다저스의 월드시리즈는 전 세계적인 관심을 모으기도 했죠.\n일본의 열기는 특히 뜨거웠습니다. 오타니는 물론 야마모토 요시노부가 다저스의 선발투수로 나섰던 월드시리즈 2차전은 일본 내 시청률 13.9%를 기록했습니다. 이 경기를 지켜본 일본인은 약 1,590만 명으로, 같은 경기를 본 미국 시청자 수 1,380만 명을 넘어섰어요. 일본이 월드시리즈에 보여준 폭발적인 관심은 MLB의 글로벌 확장 가능성을 다시 한번 증명하는 사건이었습니다.\n\nLA다저스의 월드시리즈 우승을 이끈 오타니 쇼헤이 / 사진: 로이터\n재팬 머니는\nMLB를 춤추게 한다\nMLB가 2024년, 역대 최대 규모인 17조 5,200억 원의 수입을 올릴 수 있었던 데에도 일본의 영향력이 크게 작용했어요.\n2024년 MLB 구단의 스폰서십 수입은 약 2조 8,000억 원으로, 전년 대비 20%나 증가했습니다. 이 가운데 일본 기업들의 경기장 광고는 상당한 역할을 했습니다. 오타니 열풍이 거셌던 2023~2024년 사이, MLB 경기장에 광고를 집행한 일본 기업 수는 2022년에 비해 무려 218% 많아졌거든요.\n일본 기업들이 MLB 광고 시장에 뛰어드는 가장 큰 이유는 미국 내에서 자사 제품을 홍보하기 위해서입니다. 하지만 이들은 동시에, 일본 시장을 겨냥한 효과도 함께 기대하고 있습니다. 오타니를 비롯한 일본 선수들의 활약으로 일본 내 MLB 관심도가 급등하면서, 경기장 광고가 일본 시청자들에게도 고스란히 노출되기 때문이죠.\n\n일본 기업들의 광고판으로 가득 찬 다저 스타디움 / 사진: 로이터\n일본에서 MLB가 거둬들이는 중계권료 수입도 상당합니다. 2024년, 일본 미디어가 MLB 중계권료로 지불한 금액은 약 1,000억 원대에 이릅니다. 이는 MLB 해외 중계권 수입의 3분의 1에 해당하는 수준이죠.\n현재 일본에서는 무려 11개의 방송사와 OTT 플랫폼이 경쟁적으로 MLB 경기를 중계하고 있습니다. 여기에 아마존 프라임 일본 법인도 중계에 뛰어들면서, 일본 내 MLB 중계권료는 더욱 상승할 가능성이 높아졌어요.\n흥미롭게도 MLB에서 활약하는 일본 선수는 미국 서부 지역 구단 소속인 경우가 많습니다. 2024년 MLB 명예의 전당에 헌액된 이치로(시애틀 매리너스)를 비롯해서 다르빗슈 유(샌디에이고 파드리스), 오타니 쇼헤이(LA 다저스) 모두 서부 팀에서 뛰고 있어요. 한국 선수들도 마찬가지입니다. 김혜성, 류현진, 박찬호는 LA 다저스, 이정후는 샌프란시스코 자이언츠 소속이고, 김하성은 샌디에이고 파드리스에서 뛴 바 있죠.\n이는 단순한 우연이 아닙니다. 서부 팀 경기는 현지 기준 오후 7시에 시작되는데, 이는 한국과 일본 시간으로 정오쯤입니다. 실시간 시청은 어렵지만, 점심시간 전후 하이라이트 소비나 SNS 확산에는 유리한 시간대죠. 게다가 주말 낮 경기는 한국과 일본에서 오전 9시쯤 시작돼 생중계 시청에도 적합합니다.\n반면 동부 팀 경기는 한국과 일본의 바쁜 출근 시간대와 겹치고, 주말 낮 경기 역시 새벽 3시쯤 시작돼 시청이 쉽지 않습니다. 이런 시간대 차이는 MLB가 아시아 팬층을 고려해 서부 팀에 아시아 선수를 집중 영입하는 데 영향을 줬다고 볼 수 있는 부분입니다.\n홈런은 오타니가 치고\n돈은 미국이 번다\n일본의 MLB 영향력은 여기에 그치지 않습니다. 재팬 머니는 이제 미국 지역 경제에도 큰 영향을 주고 있습니다.\n2024년 LA 다저스가 월드시리즈 우승을 차지한 뒤, LA의 일본 타운 ‘리틀 도쿄’에는 높이 45m의 오타니 벽화를 보기 위해 일본 관광객들이 끊임없이 방문했습니다. LA 다저스의 스프링캠프가 열린 애리조나 주에는 수백 명의 일본 팬과 취재진이 몰려들었죠. 몰려든 인파로 인해 경기장에는 임시 주차장이 설치됐고, 일본에서 온 팬들은 현지에서 숙박하고 식사하며 골프를 즐기는 등 지역 경제에 실질적인 소비 효과를 만들었습니다.\n이 열기는 도쿄에서 열린 MLB 공식 개막전 도쿄시리즈에서도 그대로 이어졌습니다. LA 다저스와 시카고 컵스가 맞붙은 경기의 온라인 티켓은 판매 시작 4초 만에 전석 매진될 정도였습니다.\n\n이제는 명실상부 패션 브랜드로도 자리 잡은 MLB / 사진: 로이터\n머천다이징 수입(굿즈 판매)도 눈에 띕니다. 2024년 MLB는 국내외에서 약 2조 4,000억 원 규모의 머천다이징 수입을 기록했습니다. 이 중 미국 내 수입이 약 1조 6,000억 원, 해외 수입은 약 8,000억 원입니다.\n일본 시장에서는 MLB 굿즈 수익도 빠르게 증가하고 있어요. MLB 해외 머천다이징 사업을 맡고 있는 패너틱스(Fanatics)의 2024년 일본 내 수입은 전년 대비 170% 증가했고, 오타니가 활약 중인 LA 다저스 관련 굿즈 수입은 무려 2,000%나 급등했습니다.\n도쿄시리즈 현장에서만 패너틱스가 벌어들인 굿즈 수입은 약 576억 원. 이는 패너틱스 역사상 단일 이벤트 기준 최대 매출입니다. NFL 슈퍼볼, MLB 월드시리즈, 올스타 게임까지 담당하는 글로벌 스포츠 굿즈 기업인 패너틱스가 이 기록을 도쿄시리즈에서 경신했다는 점은 오타니와 일본 시장의 경제적 영향력을 명확히 보여줍니다.\n오타니 효과는 여전히 현재진행형입니다. MLB의 머천다이징 수입은 2025년에도 더욱 성장할 것으로 전망됩니다.\n바람을 타고 한국에서 온\n또 다른 구원자, 이정후\nMLB에 뛰어난 능력을 갖춘 선수를 가장 많이 배출한 곳은 중남미 카리브해 연안 국가들입니다. 수많은 MLB 올스타와 명예의 전당 헌액 선수가 이 지역에서 나왔습니다. 하지만 이 지역은 경제적으로 가난한 국가가 많아 중계권료와 스폰서십 수입을 기대하기는 어렵습니다.\n\n고척돔에서 열린 MLB 서울시리즈 개막전 / 사진: 로이터\n그런 면에서 MLB의 핵심 해외 시장은 이미 야구 문화가 널리 퍼져 있고, 경제 수준도 높은 일본과 한국일 수밖에 없습니다. 2024년 MLB 서울시리즈가 열린 것도 같은 맥락입니다. 당시 쿠팡은 중계권료와 티켓 판매권으로 약 120억 원을 지불한 것으로 알려져 있죠.\n이정후는 MLB 입단과 동시에 굿즈 판매 증가, 중계 시청 증가, 구단 SNS 팔로워 수 급등 같은 변화를 이끌었습니다. MLB는 그를 통해 한국 시장의 문이 더 크게 열리길 기대하고 있습니다. 오타니가 일본을 뜨겁게 달궜듯, 이정후가 ‘한국의 MLB 구원자’가 되어주길 바라면서요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 이은호 이제현",
        "content": "메이저리그의 캐시카우로 떠오른 한국과 일본",
        "contentSnippet": "메이저리그의 캐시카우로 떠오른 한국과 일본",
        "guid": "https://blog.toss.im/article/moneyball-2",
        "isoDate": "2025-05-09T04:35:00.000Z"
      },
      {
        "title": "내게 맞는 실손보험, 어떻게 골라야 할까?",
        "link": "https://blog.toss.im/article/tossmoment-9",
        "pubDate": "Thu, 08 May 2025 07:55:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}갑작스럽게 병원에 갈 일이 생기면, 생각보다 큰 부담이 되는 게 병원비입니다. 진료비는 기본이고, 검사비나 약값까지 더해지면 지출은 꽤 커지죠. 이럴 때 든든한 역할을 해주는 게 바로 실손보험이에요.\n.css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}실손보험의 정식 명칭은 ‘실손의료보험’으로, 병원에서 쓴 진료비 중 일부를 돌려받을 수 있는 보험이에요. 실제로 발생한 비용을 일부 보상받는다고 해서 실비보험이라고도 부르죠.\n실손보험은 가입자 수 4,000만 명을 넘기며, ‘제2의 국민건강보험'이라는 별명까지 얻었어요. 하지만 내가 어떤 상품에 가입했는지, 병원비는 얼마나 보장되는지 정확히 아는 사람은 드물죠. 매달 보험료를 내면서도 그동안 제대로 몰랐던 실손보험에 대해 알려드릴게요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n.css-q3ktjb{white-space:pre-wrap;font-weight:bold;}실손보험 이해를 위한\n필수 용어부터 차근차근\n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}\n보험이 어렵고 복잡해 보이는 가장 큰 이유는 용어가 낯설기 때문입니다. 실손보험을 설명할 때 많이 쓰는 용어들을 하나씩 살펴볼까요? 실손보험의 벽이 조금은 낮아질 수 있을 거예요.\n급여: 국민건강보험 혜택이 적용되는 진료 항목이에요. 일반적인 감기 진료, 엑스레이, 혈액 검사, 처방약 등이 여기에 해당하죠. 진료비 일부를 국민건강보험공단에서 내주기 때문에 진료비 부담이 적은 편이에요. 월급의 급여(給與)와 같은 단어를 쓰지만, 보험의 맥락에서는 ‘국민건강보험공단이 진료비를 일부 대신 지급한다’는 의미로 쓰여요.\n비급여: 건강보험이 적용되지 않는 진료 항목입니다. 도수치료, MRI, 시력 교정술(라식·라섹) 같은 항목이 대표적이죠. 진료비 전액을 본인이 부담해야 해서 병원비가 많이 나올 수 있어요. 자세한 비급여 진료비 항목은 .css-iynyr0{white-space:pre-wrap;cursor:pointer;color:var(--adaptiveGrey600);-webkit-text-decoration:underline!important;text-decoration:underline!important;}건강보험심사평가원에서 확인할 수 있어요.\n본인부담금(자기부담금): 전체 진료비 중 내가 직접 부담해야 하는 금액이에요. 급여 항목이라면 국민건강보험공단이 일부를 대신 내주고 남은 금액이 본인부담금이 됩니다. 비급여 항목은 공단 부담이 없기 때문에 전액이 본인부담금으로 계산돼요. 그리고 본인부담금 중 일부를 보장해 주는 게 실손보험이에요.\n단독형: 실손보험만 따로 가입하는 형태입니다. 과거에는 암보험이나 종신보험에 ‘실손 특약’으로 끼워서 가입하는 경우가 많았지만, 지금은 실손보험을 단독으로 가입할 수 있도록 제도화되어 있어요. 4세대 실손보험은 모두 단독형입니다.\n특약: 특별약관의 줄임말이에요. 4세대 실손보험에서는 비급여 항목을 보장받으려면 특약 형태로 선택 가입해야 해요. 도수치료, MRI 등은 특약을 넣지 않으면 보장받을 수 없습니다. 같은 실손보험이라도, 어떤 특약을 넣었느냐에 따라 보장 범위가 크게 달라질 수 있어요.\n갱신형 보험: 보험료가 일정 기간마다 바뀌는 구조를 말해요. 실손보험은 대부분 갱신형이고, 특히 4세대 실손보험은 병원 이용이 많을수록 보험료가 크게 오를 수 있어요. 반대로 병원에 거의 가지 않는다면 보험료가 줄어들 수도 있습니다.\n실손보험,\n세대별로 뭐가 달라졌나요?\n실손보험은 2003년 첫 등장 이후 총 네 차례에 걸쳐 개편됐어요. 의료 기술이 발전하고, 병원 진료 항목도 다양해지면서 자연스럽게 보험금 지급 구조와 기준도 바뀌게 된 거죠. 세대가 바뀔 때마다 보장 범위, 본인부담금, 비급여 항목 처리 방식, 보험료 갱신 구조 등이 크게 달라졌습니다.\n.css-nv7vyi{margin:24px 0 8px;padding:16px 40px 32px;border-radius:16px;background-color:var(--adaptiveGrey100);}\n.css-uswsmm{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;margin:24px 0 8px;padding:0;list-style:none;}.css-uswsmm ul,.css-uswsmm ol{margin:16px 0 0;}.css-uswsmm>li{margin-bottom:16px;padding-left:24px;}.css-uswsmm>li:last-of-type{margin-bottom:0;}.css-uswsmm>li>span{position:relative;}.css-uswsmm>li>span>:first-child::before{content:'•';font-weight:500;color:var(--adaptiveGrey800);position:absolute;left:-24px;}\n.css-1hwiibq{font-size:17px;line-height:1.6;word-break:keep-all;letter-spacing:0em;font-weight:400;color:var(--adaptiveGrey800);}\n1세대 (2009년 9월 이전 가입)\n\n지금까지 나온 실손보험 중 가장 조건이 좋다고 평가받아요. 입원, 통원, 검사비, 약제비 등 대부분의 의료비가 넓게 보장되고, 본인이 부담해야 하는 금액이 거의 없습니다. 보험료가 다소 높은 편이지만, 실질적으로 병원비 대부분을 돌려받을 수 있는 구조였어요.\n\n2세대 (2009년 10월~2017년 3월)\n\n일부 항목에 본인부담금이 생기면서, 과잉 진료를 줄이기 위한 구조로 바뀌었어요. 대신 보험사마다 보장 내용이 비슷한 표준화 구조로 설계되어 비교적 안정적인 운영이 가능해졌죠. 기본적인 보장은 유지하면서도, 과도한 청구를 줄이기 위한 조정이 이루어진 단계예요.\n\n3세대 (2017년 4월~2021년 6월)\n\n특히 비급여 항목 보장이 축소됐고, 본인이 부담해야 하는 금액도 더 커졌어요. 비급여 진료가 많은 경우 체감 혜택이 줄 수 있지만, 병원 이용이 적다면 부담이 크지는 않은 구조예요. 비급여 진료의 남용을 막기 위해 보장의 범위를 조정한 상품이에요.\n\n4세대 (2021년 7월 이후 가입)\n\n급여와 비급여 보장을 아예 분리한 구조예요. 비급여 진료는 특약으로 별도 가입해야 보장되며, 병원 이용이 많을수록 보험료가 오르는 방식이에요. 병원 이용이 적은 사람에게는 유리하지만, 자주 가는 사람은 보험료 부담이 커질 수도 있어요.\n\n나에게 맞는 실손보험\n어떻게 선택하면 좋을까요?\n지금 새로 가입할 수 있는 실손보험은 4세대 상품뿐이에요. 이미 실손보험을 갖고 있다면 유지할지, 전환할지를 건강 상태와 병원 이용 패턴에 따라 따져보는 게 좋아요.\n1세대 실손보험을 갖고 있다면: 되도록이면 유지하는 것이 좋아요. 보장 범위가 가장 넓고, 자기부담금이 거의 없어 조건이 매우 좋습니다. 보험사에서 전환을 권유하더라도 바꿀 필요 없습니다.\n2세대 실손보험을 갖고 있다면: 대부분의 경우 유지하는 게 더 나아요. 보장은 넓고 구조도 안정적이거든요. 다만 병원 이용이 많고 보험료 부담이 크다면, 4세대 전환을 고민해볼 수는 있어요.\n3세대 실손보험을 갖고 있다면: 병원 이용이 적다면 그대로 유지해도 괜찮아요. 하지만 비급여 진료가 많고 병원비 부담이 크다면, 4세대로 전환하고 특약을 조정하는 게 나을 수 있습니다.\n4세대 실손에 가입해야 한다면: 건강에 자신 있고 병원 이용이 적다면 잘 맞는 상품이에요. 다만 비급여 항목은 특약을 추가해야만 보장되고, 병원 이용이 많을수록 보험료가 크게 오를 수 있어요. 특약 구성은 병원 진료 패턴에 맞게 잘 추가하는 게 중요합니다.\n보험에 가입하는 방법은 내가 직접 선택해서 가입하거나, 설계사와의 상담을 통해 가입하는 방식이 있어요. 혼자서 이것저것 비교하며 가입할 수도 있지만, 수많은 선택지를 전부 파악하고 잘 고르는 건 쉬운 일이 아닙니다. 그래서 웬만하면 보험 설계사의 상담을 통해 도움을 받는 걸 추천해요.\n보험 설계사와 상담할 때\n꼼꼼하게 체크해보세요\n사람마다 건강 상태나 환경이 다르기 때문에 나에게 딱 맞는 보험을 선택하는 게 중요해요. 보험 설계사와 상담할 때 아래 질문만 잘 챙겨도, 내게 적합한 보험을 찾는 과정이 훨씬 수월해질 거예요.\nQ1. 제가 가입한 실손보험은 몇 세대인가요?\n실손보험은 세대마다 보장 구조와 자기부담금이 크게 다릅니다. 특히 현재 가입한 상품이 몇 세대인지에 따라 전환 여부를 결정할 수 있기 때문에, 이 질문은 보험 점검의 출발점이에요. 실손보험 상품마다 가입 시기를 확인할 수 있기 때문에, 보험 설계사가 금방 확인해줄 수 있어요.\nQ2. 도수치료나 MRI 같은 비급여 치료는 보장되나요?\n비급여 진료는 병원비가 크게 나올 수 있는 항목이에요. 세대에 따라 아예 보장이 안 될 수도 있고, 4세대 실손에서는 특약을 넣지 않으면 전혀 보장되지 않을 수 있어요. 자주 받는 치료가 비급여 항목이라면, 반드시 확인해야 해요.\nQ3. 보험료는 언제부터 얼마나 오를 수 있나요?\n현재 판매 되는 실손보험은 갱신형이에요. 특히, 4세대 실손은 비급여 치료가 잦을수록 보험료 인상 폭이 커질 수 있어서, 갱신 시점에 따라 보험료가 최대 4배까지 오를 수 있어요! 지금은 보험료가 저렴하더라도 나중에는 부담이 커질 수 있기 때문에 변동 조건은 미리 확인하는 게 중요합니다.\nQ4. 가입 후에도 특약이나 보장을 나중에 바꿀 수 있나요?\n건강 상태는 시간이 지나면 달라질 수 있어요. 하지만 일부 특약은 한 번 해지하면 다시 가입하기 어려운 경우도 있고, 보장 내용을 중간에 조정할 수 없는 상품도 있습니다. 가입 이후에도 보장을 유연하게 변경할 수 있는지 꼭 확인해보세요.\nQ5. 진료비 중에서 실제로 돌려받을 수 있는 금액은 얼마나 되나요?\n실손보험은 병원비 전액을 보장하지 않아요. 본인부담금 구조에 따라 일부만 돌려받는 구조이며, 세대, 특약 여부, 보장 항목에 따라 환급 비율이 달라질 수 있습니다.실제로 환급받을 수 있는 금액의 범위가 얼마나 되는지 미리 확인해두면, 나중에 병원비를 가늠할 때 도움이 될 거예요.\n내 실손보험,\n토스에서 점검 받아보세요\n\n실손보험은 이제 건강보험과 함께 꼭 가입해야 하는 보험 상품이 되었어요. 보험은 통신비처럼 매달 부담하는 고정비인 만큼, 내가 가입한 상품이 내게 잘 맞는지 한 번쯤 확인해보는 게 좋아요.\n토스에서는 내가 가입한 보험이 충분한지, 부족한 건 없는지 한눈에 확인할 수 있는 리포트를 제공해드려요. 더 자세한 설명이 필요하다면, 토스인슈어런스 소속 전문 컨설턴트와의 무료 상담도 가능하죠. \n토스인슈어런스는 고객 상황에 꼭 맞는 보험을 추천하는 것, 그리고 스스로 잘 이해하고 선택할 수 있도록 돕는 것을 가장 중요하게 생각하는 토스의 보험 컨설팅 서비스예요.\n내가 가입한 보험을 잘 알고 싶다면, 아래 버튼을 눌러 지금 바로 점검해보세요.\n.css-1ifza5r{border:0;margin-top:0;margin-bottom:0;height:1px;opacity:1;background:var(--tHairlineBackground);margin:0;}\nEdit 윤동해 Graphic 조수희 이제현 윤자영",
        "content": "세대별 차이부터 특약까지, 꼭 알아야 할 실손보험 상식",
        "contentSnippet": "세대별 차이부터 특약까지, 꼭 알아야 할 실손보험 상식",
        "guid": "https://blog.toss.im/article/tossmoment-9",
        "isoDate": "2025-05-08T07:55:00.000Z"
      },
      {
        "title": "가정의 달 콘텐츠➃ 스스로 서기 위한 연습, 10대를 위한 돈 이야기",
        "link": "https://blog.toss.im/article/2025may-curation4",
        "pubDate": "Thu, 08 May 2025 06:43:00 GMT",
        "content:encodedSnippet": ".css-1vn47db{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:none;-ms-flex:none;flex:none;}\n.css-14on8x8{font-size:17px;letter-spacing:0em;line-height:1.6;font-weight:normal;color:var(--adaptiveGrey800);margin:24px 0 8px;}\n.css-1r3ko7u{line-height:0;display:block;}.css-1iisb9p{display:contents;line-height:1.6;}.css-1kxrhf3{white-space:pre-wrap;}서퍼는 언젠가 마주할 ‘나의 파도’를 기다리며, 꾸준한 준비를 해 나갑니다. 모래 위에서 균형을 익히고, 얕은 물에서부터 차근차근 기술을 익힙니다. 좋은 파도가 언제 올지는 알 수 없지만, 준비된 사람만이 그 물살을 탈 수 있으니까요.\n10대의 금융생활도 이와 닮았습니다. .css-16cuouw{white-space:pre-wrap;color:var(--adaptiveGrey800);background-color:#3fd59936;}용돈을 계획하고, 돈을 모으고, 내가 진짜 원하는 것을 고민하며 써보는 일. 조금은 서툴 수 있어도, 이미 파도를 향해 나아가는 여정의 시작이고 일부일 거예요.\n가정의 달을 맞아, 스스로 서는 법을 연습 중인 청소년들을 위한 토스피드의 콘텐츠를 전합니다. 서핑보드 위, 온전히 홀로 서서 ‘나의 파도’를 타게 될 그날을 응원하면서요.\n.css-1feg9au{font-size:24px;letter-spacing:0em;line-height:1.6;font-weight:bold;color:var(--adaptiveGrey900);margin:24px 0 4px;}\n1. 요즘 10대는 어떻게 돈을 벌까?\n요즘은 재능을 살려 나만의 소득 파이프라인을 만드는 10대들이 많습니다. 이들은 같은 돈이라도 ‘받은 돈’과 ‘번 돈’은 완전히 다르다고 말해요. 일과 돈의 감각을 쌓아가는 10대 세 명의 이야기를 소개합니다. \n.css-of5acw{margin:24px 0 8px;text-align:center;}.css-1pgssrp{max-width:100%;border-radius:16px;}.css-1lvcgm8{padding:22px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;-webkit-justify-content:center;justify-content:center;border-radius:20px;}\n.css-13ko30i{width:375px;}\"내가 돈을 쫓아야,  돈도 나를 쫓는다고 생각해요.\"\n2.청소년이 혼자 살 때, 얼마가 필요할까?\n10대가 끝나기 전에 자립해야 한다면, 무엇이 필요할까요? 양육시설을 나와 자립정착금 500만 원으로 첫 독립을 시작한 두 사람의 이야기. 집을 구하고, 생활을 꾸리고, 경제 감각을 익히는 과정에서 마주한 현실에 대해 살펴봅니다.\n\n 혼자 살게 됐을 때 마주하는 첫 번째 문제는?\n3.청소년이 첫 알바를 시작할 때 알아야 하는 것들\n‘청소년 용돈 버는 법’의 검색 순위가 높아질 정도로 10대부터 돈벌이를 시작하는 친구들이 많아졌습니다. 아르바이트를 하는 목적은 다양하겠지만, 첫 사회생활인 만큼 시작하기 전에 알아야 할 12가지 필수 체크리스트를 알려드릴게요.\n\n청소년이 알바할 때, 12가지 체크리스트\n4.내 아이의 경제교육, 이럴 땐 어떻게 할까요?\n돈에 눈 뜨는 속도가 빨라진 아이들, 그래서 돈에 대해 궁금한 것도 많죠. 토스 앱을 통해 받은 부모님들의 ‘아이 경제 교육’에 대한 10가지 질문에 전문가가 답합니다.\n\n돈 이야기, 아이에게 어디까지 어떻게 해야할까?\n5.토스가 생각하는 10대는 귀엽지 않다\n토스가 10대 사용자를 위해 만드는 틴즈 서비스 사용자 수는 현재 300만 명에 이릅니다. 국내 중고등학생 85%가 토스를 선택하고 있어요. 토스가 10대 사용자에게 선택받을 수 있었던 이유는 무엇일까요?\n\n토스 유스카드가 귀엽지 않은 이유",
        "content": "10대를 위한 콘텐츠 큐레이션",
        "contentSnippet": "10대를 위한 콘텐츠 큐레이션",
        "guid": "https://blog.toss.im/article/2025may-curation4",
        "isoDate": "2025-05-08T06:43:00.000Z"
      }
    ]
  },
  {
    "name": "모나미",
    "category": "개인",
    "posts": []
  },
  {
    "name": "김진홍",
    "category": "개인",
    "posts": []
  }
]